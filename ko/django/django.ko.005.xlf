<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="django">
    <body>
      <group id="django">
        <trans-unit id="9c6928581df2a3d4e734facfdeb19244a874b86c" translate="yes" xml:space="preserve">
          <source>By far, the most common problem when installing GeoDjango is that the external shared libraries (e.g., for GEOS and GDAL) cannot be located. &lt;a href=&quot;#id27&quot; id=&quot;id5&quot;&gt;[1]&lt;/a&gt; Typically, the cause of this problem is that the operating system isn&amp;rsquo;t aware of the directory where the libraries built from source were installed.</source>
          <target state="translated">GeoDjango를 설치할 때 가장 일반적인 문제는 외부 공유 라이브러리 (예 : GEOS 및 GDAL)를 찾을 수 없다는 것입니다. &lt;a href=&quot;#id27&quot; id=&quot;id5&quot;&gt;[1]&lt;/a&gt; 일반적으로이 문제의 원인은 운영 체제가 소스에서 작성된 라이브러리가 설치된 디렉토리를 인식하지 못하기 때문입니다.</target>
        </trans-unit>
        <trans-unit id="9eadae5b875107d64f4a9dbdd96b5eae7b15360d" translate="yes" xml:space="preserve">
          <source>By passing a hardcoded URL to redirect to:</source>
          <target state="translated">하드 코딩 된 URL을 전달하여 다음으로 리디렉션 :</target>
        </trans-unit>
        <trans-unit id="410f3140d832540e34b1f703f5f9780637017818" translate="yes" xml:space="preserve">
          <source>By passing some object; that object&amp;rsquo;s &lt;a href=&quot;../../ref/models/instances#django.db.models.Model.get_absolute_url&quot;&gt;&lt;code&gt;get_absolute_url()&lt;/code&gt;&lt;/a&gt; method will be called to figure out the redirect URL:</source>
          <target state="translated">어떤 물건을 전달함으로써; 객체의 &lt;a href=&quot;../../ref/models/instances#django.db.models.Model.get_absolute_url&quot;&gt; &lt;code&gt;get_absolute_url()&lt;/code&gt; &lt;/a&gt; 메소드가 리디렉션 URL을 알아 내기 위해 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="9f790aaa211799b67e9734bb44b20520139b5705" translate="yes" xml:space="preserve">
          <source>By passing the name of a view and optionally some positional or keyword arguments; the URL will be reverse resolved using the &lt;a href=&quot;../../ref/urlresolvers#django.urls.reverse&quot;&gt;&lt;code&gt;reverse()&lt;/code&gt;&lt;/a&gt; method:</source>
          <target state="translated">보기의 이름과 선택적으로 위치 또는 키워드 인수를 전달합니다. URL은 &lt;a href=&quot;../../ref/urlresolvers#django.urls.reverse&quot;&gt; &lt;code&gt;reverse()&lt;/code&gt; &lt;/a&gt; 메소드를 사용하여 반대로 해석됩니다 .</target>
        </trans-unit>
        <trans-unit id="bf44349a57bf99a3da9cd7ed7be76a4a791e4da9" translate="yes" xml:space="preserve">
          <source>By registering the &lt;code&gt;Question&lt;/code&gt; model with &lt;code&gt;admin.site.register(Question)&lt;/code&gt;, Django was able to construct a default form representation. Often, you&amp;rsquo;ll want to customize how the admin form looks and works. You&amp;rsquo;ll do this by telling Django the options you want when you register the object.</source>
          <target state="translated">Django는 &lt;code&gt;admin.site.register(Question)&lt;/code&gt; &lt;code&gt;Question&lt;/code&gt; 모델 을 등록함으로써 기본 양식 표현을 구성 할 수있었습니다. 관리 양식의 모양과 작동 방식을 사용자 정의하려는 경우가 종종 있습니다. 객체를 등록 할 때 원하는 옵션을 Django에 알려 주면됩니다.</target>
        </trans-unit>
        <trans-unit id="1a72150f0151c29d8e88726ab81f5d4a3c72e587" translate="yes" xml:space="preserve">
          <source>By running &lt;code&gt;makemigrations&lt;/code&gt;, you&amp;rsquo;re telling Django that you&amp;rsquo;ve made some changes to your models (in this case, you&amp;rsquo;ve made new ones) and that you&amp;rsquo;d like the changes to be stored as a &lt;em&gt;migration&lt;/em&gt;.</source>
          <target state="translated">&lt;code&gt;makemigrations&lt;/code&gt; 를 실행 하면 Django에 모델을 변경하고 (이 경우 새 모델을 만들었 음) 변경 사항을 &lt;em&gt;마이그레이션&lt;/em&gt; 으로 저장하고 싶다고 알리게 됩니다 .</target>
        </trans-unit>
        <trans-unit id="a2698e53410edfde0b255f7364f15c404526b514" translate="yes" xml:space="preserve">
          <source>By setting the &lt;code&gt;--verbosity&lt;/code&gt; flag to 0, you can suppress the extra output and just get the path names:</source>
          <target state="translated">&lt;code&gt;--verbosity&lt;/code&gt; 플래그를 0으로 설정하면 추가 출력을 억제하고 경로 이름을 얻을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="bafa080a33e73f9455d05b423e3fd1169f60cf32" translate="yes" xml:space="preserve">
          <source>By setting the &lt;code&gt;email_backend&lt;/code&gt; argument of &lt;code&gt;AdminEmailHandler&lt;/code&gt;, the &lt;a href=&quot;email#topic-email-backends&quot;&gt;email backend&lt;/a&gt; that is being used by the handler can be overridden, like this:</source>
          <target state="translated">설정에 따라 &lt;code&gt;email_backend&lt;/code&gt; 의 의 인수 &lt;code&gt;AdminEmailHandler&lt;/code&gt; 을 의 &lt;a href=&quot;email#topic-email-backends&quot;&gt;이메일 백엔드&lt;/a&gt; 핸들러에 의해 사용되는 다음과 같이 대체 할 수 있습니다 :</target>
        </trans-unit>
        <trans-unit id="c5f540514d2bf110bb1b873c082ed4fb4d5e8add" translate="yes" xml:space="preserve">
          <source>By storing the value in a data attribute, we ensure it&amp;rsquo;s escaped appropriately if we want to use it in a JavaScript context.</source>
          <target state="translated">데이터 속성에 값을 저장하면 JavaScript 컨텍스트에서 값을 사용하려는 경우 적절하게 이스케이프 처리됩니다.</target>
        </trans-unit>
        <trans-unit id="60057f3f688d8b06da7a58f3308af4491f7ae488" translate="yes" xml:space="preserve">
          <source>By taking advantage of web browsers&amp;rsquo; caching abilities, you can eliminate network hits entirely for a given file after the initial download.</source>
          <target state="translated">웹 브라우저의 캐싱 기능을 활용하면 초기 다운로드 후 지정된 파일에 대한 네트워크 적중을 완전히 제거 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ed287a0e379d778a3eeb942d9ca8ae389a30184d" translate="yes" xml:space="preserve">
          <source>By the time the form&amp;rsquo;s &lt;code&gt;clean()&lt;/code&gt; method is called, all the individual field clean methods will have been run (the previous two sections), so &lt;code&gt;self.cleaned_data&lt;/code&gt; will be populated with any data that has survived so far. So you also need to remember to allow for the fact that the fields you are wanting to validate might not have survived the initial individual field checks.</source>
          <target state="translated">폼의 &lt;code&gt;clean()&lt;/code&gt; 메소드가 호출 될 때까지 모든 개별 필드 정리 메소드 (이전 두 섹션)가 실행되므로 &lt;code&gt;self.cleaned_data&lt;/code&gt; 는 지금까지 남아있는 데이터로 채워집니다. 따라서 유효성을 검사하려는 필드가 초기 개별 필드 검사에서 살아남지 않았을 수도 있다는 사실을 기억해야합니다.</target>
        </trans-unit>
        <trans-unit id="cf54b3c3a704ac37d2ee3e37fc7b15c423932c4f" translate="yes" xml:space="preserve">
          <source>By the time you push your code to production, it&amp;rsquo;s hopefully robust, but you can&amp;rsquo;t rule out unexpected errors. Thankfully, Django can capture errors and notify you accordingly.</source>
          <target state="translated">코드를 프로덕션으로 푸시 할 때 코드가 강력하지만 예상치 못한 오류를 배제 할 수는 없습니다. 고맙게도 Django는 오류를 캡처하고 그에 따라 알려줍니다.</target>
        </trans-unit>
        <trans-unit id="21e38ac8e1886700d5dfead1203995c19d9446fc" translate="yes" xml:space="preserve">
          <source>By using &lt;code&gt;Transform&lt;/code&gt; instead of &lt;code&gt;Lookup&lt;/code&gt; it means we are able to chain further lookups afterwards. So &lt;code&gt;Experiment.objects.filter(change__abs__lt=27)&lt;/code&gt; will generate the following SQL:</source>
          <target state="translated">&lt;code&gt;Lookup&lt;/code&gt; 대신 &lt;code&gt;Transform&lt;/code&gt; 을 사용 하면 나중에 추가 조회를 연결할 수 있습니다. 따라서 &lt;code&gt;Experiment.objects.filter(change__abs__lt=27)&lt;/code&gt; 은 다음 SQL을 생성합니다.</target>
        </trans-unit>
        <trans-unit id="4a6da94170b6d7247db67e6cac43616cc97fbefb" translate="yes" xml:space="preserve">
          <source>By using a keyword argument to specify the aggregate function, you can control the name of the aggregation value that is returned:</source>
          <target state="translated">키워드 인수를 사용하여 집계 함수를 지정하면 리턴되는 집계 값의 이름을 제어 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="507169571631561d324c277b834f130fa24c7eaa" translate="yes" xml:space="preserve">
          <source>By way of example, if listing the contents of certain storage backends turns out to be expensive, you might decide not to implement &lt;code&gt;Storage.listdir&lt;/code&gt;.</source>
          <target state="translated">예를 들어, 특정 스토리지 백엔드의 컨텐츠를 나열하는 것이 비용이 많이 드는 경우 &lt;code&gt;Storage.listdir&lt;/code&gt; 을 구현하지 않기로 결정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="64ce43fd9c6c913bf7d30b60ac1976d42220e456" translate="yes" xml:space="preserve">
          <source>By way of example, suppose you have a model like this:</source>
          <target state="translated">예를 들어, 다음과 같은 모델이 있다고 가정하십시오.</target>
        </trans-unit>
        <trans-unit id="d75db2961ab787d0a3b41b3a6b0e65b06693ce81" translate="yes" xml:space="preserve">
          <source>Byteorder Value</source>
          <target state="translated">바이트 순서 값</target>
        </trans-unit>
        <trans-unit id="32096c2e0eff33d844ee6d675407ace18289357d" translate="yes" xml:space="preserve">
          <source>C</source>
          <target state="translated">C</target>
        </trans-unit>
        <trans-unit id="0d741550bd4db8a752d46cf9c9f6951ed99a3357" translate="yes" xml:space="preserve">
          <source>C implementations of Python libraries</source>
          <target state="translated">파이썬 라이브러리의 C 구현</target>
        </trans-unit>
        <trans-unit id="5860ddd6f84a4601d3b785cd1f80dc27ce224e43" translate="yes" xml:space="preserve">
          <source>CGI specification</source>
          <target state="translated">CGI 사양</target>
        </trans-unit>
        <trans-unit id="12fa5fcaba8eae05abcc1e5b1cc620eaf6dc3ada" translate="yes" xml:space="preserve">
          <source>CREATE PROCEDURE</source>
          <target state="translated">절차 작성</target>
        </trans-unit>
        <trans-unit id="738e5f467ba3a4254f467b31bb3c8da33459bfb4" translate="yes" xml:space="preserve">
          <source>CREATE PROCEDURE WITH ADMIN OPTION</source>
          <target state="translated">관리자 옵션으로 절차 작성</target>
        </trans-unit>
        <trans-unit id="bf7598785b07ca70f266afcf7d0a8eb1cf4d0316" translate="yes" xml:space="preserve">
          <source>CREATE SEQUENCE</source>
          <target state="translated">시퀀스 생성</target>
        </trans-unit>
        <trans-unit id="66f37c36c9c8b6cca22b6df3d46330385564e152" translate="yes" xml:space="preserve">
          <source>CREATE SEQUENCE WITH ADMIN OPTION</source>
          <target state="translated">관리자 옵션으로 시퀀스 생성</target>
        </trans-unit>
        <trans-unit id="1aed7c8bada16418abc44db5943b30cf4691b235" translate="yes" xml:space="preserve">
          <source>CREATE SESSION WITH ADMIN OPTION</source>
          <target state="translated">관리자 옵션으로 세션 만들기</target>
        </trans-unit>
        <trans-unit id="979ae29e43d609d39c91f43b7d2c9c6f0170c84c" translate="yes" xml:space="preserve">
          <source>CREATE TABLE</source>
          <target state="translated">테이블 만들기</target>
        </trans-unit>
        <trans-unit id="f194afde4946790548e145f558322252a26886ac" translate="yes" xml:space="preserve">
          <source>CREATE TABLE WITH ADMIN OPTION</source>
          <target state="translated">관리자 옵션으로 테이블 작성</target>
        </trans-unit>
        <trans-unit id="eb3911ee759f233a5280c04fb3873a55053eecf0" translate="yes" xml:space="preserve">
          <source>CREATE TABLESPACE</source>
          <target state="translated">테이블 스페이스 생성</target>
        </trans-unit>
        <trans-unit id="cf6418466d171e86053f358e78bdbbeb775f1f4f" translate="yes" xml:space="preserve">
          <source>CREATE TRIGGER</source>
          <target state="translated">트리거 만들기</target>
        </trans-unit>
        <trans-unit id="2a195c132ace2fa09c2eb3a61cf6904ec2099374" translate="yes" xml:space="preserve">
          <source>CREATE TRIGGER WITH ADMIN OPTION</source>
          <target state="translated">관리자 옵션으로 트리거 만들기</target>
        </trans-unit>
        <trans-unit id="b9b4f23af8e09b7f85cfa3af0d06b6b261d9ae23" translate="yes" xml:space="preserve">
          <source>CREATE USER</source>
          <target state="translated">사용자 생성</target>
        </trans-unit>
        <trans-unit id="cf9be80b96f1c5890989a051c13fd3642245b655" translate="yes" xml:space="preserve">
          <source>CSRF attacks allow a malicious user to execute actions using the credentials of another user without that user&amp;rsquo;s knowledge or consent.</source>
          <target state="translated">CSRF 공격을 통해 악의적 인 사용자는 해당 사용자 모르게 또는 다른 사용자의 자격 증명을 사용하여 작업을 실행할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="fe8fff30013a75a4ad1868cf3fddb4aedfce3cc2" translate="yes" xml:space="preserve">
          <source>CSRF failures are logged as warnings to the &lt;a href=&quot;../topics/logging#django-security-logger&quot;&gt;django.security.csrf&lt;/a&gt; logger.</source>
          <target state="translated">CSRF 실패는 &lt;a href=&quot;../topics/logging#django-security-logger&quot;&gt;django.security.csrf&lt;/a&gt; 로거에 경고로 기록됩니다 .</target>
        </trans-unit>
        <trans-unit id="86dad4bef1b0b5153b2a3801ffbf7c3d5383891d" translate="yes" xml:space="preserve">
          <source>CSRF protection middleware</source>
          <target state="translated">CSRF 보호 미들웨어</target>
        </trans-unit>
        <trans-unit id="183d7d8966580df0e0abbeda4c15dbaa378da0d2" translate="yes" xml:space="preserve">
          <source>CSRF protection should be disabled for just a few views</source>
          <target state="translated">CSRF 보호는 몇 번만보기 위해 비활성화해야합니다</target>
        </trans-unit>
        <trans-unit id="50338b3b242845e21a0ace9ae9684283d945fb52" translate="yes" xml:space="preserve">
          <source>Cache</source>
          <target state="translated">Cache</target>
        </trans-unit>
        <trans-unit id="acbda0fec2fe82da82e9502df8ab30f811055067" translate="yes" xml:space="preserve">
          <source>Cache arguments</source>
          <target state="translated">캐시 인수</target>
        </trans-unit>
        <trans-unit id="f548eceb4063ed512d026604f0cc6f4b79062cfc" translate="yes" xml:space="preserve">
          <source>Cache backends that implement their own culling strategy (i.e., the &lt;code&gt;locmem&lt;/code&gt;, &lt;code&gt;filesystem&lt;/code&gt; and &lt;code&gt;database&lt;/code&gt; backends) will honor the following options:</source>
          <target state="translated">자체 컬링 전략을 구현하는 캐시 백엔드 (예 : &lt;code&gt;locmem&lt;/code&gt; , &lt;code&gt;filesystem&lt;/code&gt; 및 &lt;code&gt;database&lt;/code&gt; 백엔드)는 다음 옵션을 따릅니다 .</target>
        </trans-unit>
        <trans-unit id="2519e25400cafc71c27e79ee0ed8da52808ca8aa" translate="yes" xml:space="preserve">
          <source>Cache file attributes wherever possible. Since files may be stored in remote storage systems, retrieving them may cost extra time, or even money, that isn&amp;rsquo;t always necessary. Once a file is retrieved to obtain some data about its content, cache as much of that data as possible to reduce the number of times the file must be retrieved on subsequent calls for that information.</source>
          <target state="translated">가능한 한 캐시 파일 속성. 파일은 원격 스토리지 시스템에 저장 될 수 있으므로 파일을 검색하는 데 시간이 더 걸리거나 비용이들 수도 있습니다. 컨텐츠에 대한 일부 데이터를 얻기 위해 파일을 검색 한 후에는 해당 정보에 대한 후속 호출에서 파일을 검색해야하는 횟수를 줄이기 위해 가능한 많은 데이터를 캐시하십시오.</target>
        </trans-unit>
        <trans-unit id="0724677c8042ae24853c8d056aea6ae292f3236f" translate="yes" xml:space="preserve">
          <source>Cache key prefixing</source>
          <target state="translated">캐시 키 접두사</target>
        </trans-unit>
        <trans-unit id="568bcc7904029d3838fc97291bee4ee2e3c4513f" translate="yes" xml:space="preserve">
          <source>Cache key transformation</source>
          <target state="translated">캐시 키 변환</target>
        </trans-unit>
        <trans-unit id="9cabdad5f5926a49b8e27093eb56c22e273fb879" translate="yes" xml:space="preserve">
          <source>Cache key warnings</source>
          <target state="translated">캐시 키 경고</target>
        </trans-unit>
        <trans-unit id="89bfbc1460a5989b3328d1d08cb4d7bcd07309ed" translate="yes" xml:space="preserve">
          <source>Cache keys also include the active &lt;a href=&quot;i18n/index#term-language-code&quot;&gt;language&lt;/a&gt; when &lt;a href=&quot;../ref/settings#std:setting-USE_L10N&quot;&gt;&lt;code&gt;USE_L10N&lt;/code&gt;&lt;/a&gt; is set to &lt;code&gt;True&lt;/code&gt; and the &lt;a href=&quot;i18n/timezones#default-current-time-zone&quot;&gt;current time zone&lt;/a&gt; when &lt;a href=&quot;../ref/settings#std:setting-USE_TZ&quot;&gt;&lt;code&gt;USE_TZ&lt;/code&gt;&lt;/a&gt; is set to &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="translated">캐시 키에는 &lt;a href=&quot;../ref/settings#std:setting-USE_L10N&quot;&gt; &lt;code&gt;USE_L10N&lt;/code&gt; &lt;/a&gt; 이 &lt;code&gt;True&lt;/code&gt; 로 설정된 경우 활성 &lt;a href=&quot;i18n/index#term-language-code&quot;&gt;언어&lt;/a&gt; 와 &lt;a href=&quot;../ref/settings#std:setting-USE_TZ&quot;&gt; &lt;code&gt;USE_TZ&lt;/code&gt; &lt;/a&gt; 가 &lt;code&gt;True&lt;/code&gt; 로 설정된 경우 &lt;a href=&quot;i18n/timezones#default-current-time-zone&quot;&gt;현재 시간대가 포함&lt;/a&gt; 됩니다 .</target>
        </trans-unit>
        <trans-unit id="75ea82be45e2ca1387bce6858d4a1e2278852e0f" translate="yes" xml:space="preserve">
          <source>Cache middleware</source>
          <target state="translated">캐시 미들웨어</target>
        </trans-unit>
        <trans-unit id="e8253b0803e92653e15146f8e14ecfbff84d772d" translate="yes" xml:space="preserve">
          <source>Cache servers often have weak authentication. Make sure they only accept connections from your application servers.</source>
          <target state="translated">캐시 서버는 종종 인증이 약합니다. 응용 프로그램 서버 (AS)의 연결 만 승인하십시오.</target>
        </trans-unit>
        <trans-unit id="8062cdd3cff6bd5b28b528db9eb86faf48b14891" translate="yes" xml:space="preserve">
          <source>Cache versioning</source>
          <target state="translated">캐시 버전 관리</target>
        </trans-unit>
        <trans-unit id="26d1d6e68e2efb43040f5747213a436e201ddbd2" translate="yes" xml:space="preserve">
          <source>Caches</source>
          <target state="translated">Caches</target>
        </trans-unit>
        <trans-unit id="da8a8950b5b6043f06280dde3cc19998826fb05d" translate="yes" xml:space="preserve">
          <source>Caches a complex variable under a simpler name. This is useful when accessing an &amp;ldquo;expensive&amp;rdquo; method (e.g., one that hits the database) multiple times.</source>
          <target state="translated">간단한 이름으로 복잡한 변수를 캐시합니다. 이는 &quot;고가의&quot;방법 (예 : 데이터베이스에 충돌하는 방법)에 여러 번 액세스 할 때 유용합니다.</target>
        </trans-unit>
        <trans-unit id="e20488b0aaf8b9a76e5105c29315d29b9fb58149" translate="yes" xml:space="preserve">
          <source>Caches are not cleared after each test, and running &amp;ldquo;manage.py test fooapp&amp;rdquo; can insert data from the tests into the cache of a live system if you run your tests in production because, unlike databases, a separate &amp;ldquo;test cache&amp;rdquo; is not used. This behavior &lt;a href=&quot;https://code.djangoproject.com/ticket/11505&quot;&gt;may change&lt;/a&gt; in the future.</source>
          <target state="translated">각 테스트 후에 캐시가 지워지지 않으며 데이터베이스와 달리 별도의 &quot;테스트 캐시&quot;가 아니기 때문에 프로덕션 환경에서 테스트를 실행하는 경우 &quot;manage.py test fooapp&quot;를 실행하면 테스트에서 라이브 시스템의 캐시로 데이터를 삽입 할 수 있습니다. 익숙한. 이 동작 &lt;a href=&quot;https://code.djangoproject.com/ticket/11505&quot;&gt;은&lt;/a&gt; 나중에 변경 될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="60790f7c84170a8b87051d7e857118ffeb0465ee" translate="yes" xml:space="preserve">
          <source>Caching</source>
          <target state="translated">Caching</target>
        </trans-unit>
        <trans-unit id="98c1f85303f94c49ac9e6485f441d2186f4c7ea1" translate="yes" xml:space="preserve">
          <source>Caching and &lt;code&gt;QuerySet&lt;/code&gt;s</source>
          <target state="translated">캐싱 및 &lt;code&gt;QuerySet&lt;/code&gt; 의</target>
        </trans-unit>
        <trans-unit id="158fd07571b063993f6c4fc9390a346d5fc0c3c9" translate="yes" xml:space="preserve">
          <source>Caching the current &lt;code&gt;Site&lt;/code&gt; object</source>
          <target state="translated">현재 &lt;code&gt;Site&lt;/code&gt; 개체 캐싱</target>
        </trans-unit>
        <trans-unit id="1f61e98f71915665b89d8779a5f8ed0542e38090" translate="yes" xml:space="preserve">
          <source>Calculates a partition for each of the rows in the frame clause, distributing numbers as evenly as possible between 1 and &lt;code&gt;num_buckets&lt;/code&gt;. If the rows don&amp;rsquo;t divide evenly into a number of buckets, one or more buckets will be represented more frequently.</source>
          <target state="translated">frame 절의 각 행에 대한 파티션을 계산하여 가능한 한 1과 &lt;code&gt;num_buckets&lt;/code&gt; 사이에 숫자를 분배합니다 . 행이 여러 버킷으로 균등하게 분할되지 않으면 하나 이상의 버킷이 더 자주 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="9f4718dace470988d41014b2afc03b8d10dda878" translate="yes" xml:space="preserve">
          <source>Calculates the cumulative distribution of a value within a window or partition. The cumulative distribution is defined as the number of rows preceding or peered with the current row divided by the total number of rows in the frame.</source>
          <target state="translated">창 또는 파티션 내에서 값의 누적 분포를 계산합니다. 누적 분포는 현재 행과 선행하거나 피어링 된 행 수를 프레임의 총 행 수로 나눈 값으로 정의됩니다.</target>
        </trans-unit>
        <trans-unit id="4b029943b59c24a8bfb62e9149a4a3c1fe2238e8" translate="yes" xml:space="preserve">
          <source>Calculates the leading value in a given &lt;a href=&quot;expressions#window-frames&quot;&gt;frame&lt;/a&gt;. Both &lt;code&gt;offset&lt;/code&gt; and &lt;code&gt;default&lt;/code&gt; are evaluated with respect to the current row.</source>
          <target state="translated">주어진 &lt;a href=&quot;expressions#window-frames&quot;&gt;프레임&lt;/a&gt; 에서 행간 값을 계산합니다 . 두 &lt;code&gt;offset&lt;/code&gt; 및 &lt;code&gt;default&lt;/code&gt; 현재 행에 대한 평가됩니다.</target>
        </trans-unit>
        <trans-unit id="a4a72235190570bfe5057824d4e0f99c75bd3ff4" translate="yes" xml:space="preserve">
          <source>Calculates the value offset by &lt;code&gt;offset&lt;/code&gt;, and if no row exists there, returns &lt;code&gt;default&lt;/code&gt;.</source>
          <target state="translated">오프셋 값 계산 &lt;code&gt;offset&lt;/code&gt; , 어떤 행, 거기에 반환이없는 경우 &lt;code&gt;default&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="dc6751bd6532a841494c31d2cb271a6c23434bcc" translate="yes" xml:space="preserve">
          <source>Calculation</source>
          <target state="translated">Calculation</target>
        </trans-unit>
        <trans-unit id="7549f08dfa01f0c01fbea6def77fa44bb0e854b6" translate="yes" xml:space="preserve">
          <source>Calcutta: 15,000,000</source>
          <target state="translated">캘커타 : 15,000,000</target>
        </trans-unit>
        <trans-unit id="04bfbc1bb89e39593bc448d487ef9451871d2d5b" translate="yes" xml:space="preserve">
          <source>Call the &lt;a href=&quot;#django.template.Template&quot;&gt;&lt;code&gt;Template&lt;/code&gt;&lt;/a&gt; object&amp;rsquo;s &lt;code&gt;render()&lt;/code&gt; method with a &lt;a href=&quot;#django.template.Context&quot;&gt;&lt;code&gt;Context&lt;/code&gt;&lt;/a&gt; to &amp;ldquo;fill&amp;rdquo; the template:</source>
          <target state="translated">&lt;a href=&quot;#django.template.Context&quot;&gt; &lt;code&gt;Context&lt;/code&gt; &lt;/a&gt; 와 함께 &lt;a href=&quot;#django.template.Template&quot;&gt; &lt;code&gt;Template&lt;/code&gt; &lt;/a&gt; 객체의 &lt;code&gt;render()&lt;/code&gt; 메서드를 호출하여 템플릿 을 &quot;채 웁니다&quot;.</target>
        </trans-unit>
        <trans-unit id="f1e01593380533bdbbb15c2c90eaee274eae0fe2" translate="yes" xml:space="preserve">
          <source>Callable variables are slightly more complex than variables which only require straight lookups. Here are some things to keep in mind:</source>
          <target state="translated">호출 가능한 변수는 단순 조회 만 필요한 변수보다 약간 더 복잡합니다. 명심해야 할 사항은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="7ce46ba0adc2acc2f59611a6bb874f9af1ff6a7b" translate="yes" xml:space="preserve">
          <source>Callback signaling that a new file upload is starting. This is called before any data has been fed to any upload handlers.</source>
          <target state="translated">새 파일 업로드가 시작 중임을 알리는 콜백 신호. 데이터가 업로드 핸들러에 제공되기 전에 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="fa90af3954b4ce6550e00d167939f1aac96f5800" translate="yes" xml:space="preserve">
          <source>Callback signaling that the entire upload (all files) has completed.</source>
          <target state="translated">전체 업로드 (모든 파일)가 완료되었음을 알리는 콜백 신호.</target>
        </trans-unit>
        <trans-unit id="4661219d7bd825b0ab199b164d8f3f95684ead45" translate="yes" xml:space="preserve">
          <source>Callback to add elements inside the root feed element (&lt;code&gt;feed&lt;/code&gt;/&lt;code&gt;channel&lt;/code&gt;). &lt;code&gt;handler&lt;/code&gt; is an &lt;a href=&quot;https://docs.python.org/3/library/xml.sax.utils.html#xml.sax.saxutils.XMLGenerator&quot;&gt;&lt;code&gt;XMLGenerator&lt;/code&gt;&lt;/a&gt; from Python&amp;rsquo;s built-in SAX library; you&amp;rsquo;ll call methods on it to add to the XML document in process.</source>
          <target state="translated">루트 피드 요소 ( &lt;code&gt;feed&lt;/code&gt; / &lt;code&gt;channel&lt;/code&gt; ) 안에 요소를 추가하기위한 콜백 &lt;code&gt;handler&lt;/code&gt; 는 Python 내장 SAX 라이브러리의 &lt;a href=&quot;https://docs.python.org/3/library/xml.sax.utils.html#xml.sax.saxutils.XMLGenerator&quot;&gt; &lt;code&gt;XMLGenerator&lt;/code&gt; &lt;/a&gt; 입니다. 처리중인 XML 문서에 추가하기 위해 메소드를 호출합니다.</target>
        </trans-unit>
        <trans-unit id="7b265d6c16bf2b98f52dcc9cf31ad13945b3698f" translate="yes" xml:space="preserve">
          <source>Callback to add elements to each item (&lt;code&gt;item&lt;/code&gt;/&lt;code&gt;entry&lt;/code&gt;) element. &lt;code&gt;handler&lt;/code&gt; and &lt;code&gt;item&lt;/code&gt; are as above.</source>
          <target state="translated">각 항목 ( &lt;code&gt;item&lt;/code&gt; / &lt;code&gt;entry&lt;/code&gt; ) 요소 에 요소를 추가하기위한 콜백 &lt;code&gt;handler&lt;/code&gt; 와 &lt;code&gt;item&lt;/code&gt; 은 위와 같습니다.</target>
        </trans-unit>
        <trans-unit id="e02e8544c5084a0867d6ab3bc3adf5ec30f430f8" translate="yes" xml:space="preserve">
          <source>Callbacks are not run until autocommit is restored on the connection following the commit (because otherwise any queries done in a callback would open an implicit transaction, preventing the connection from going back into autocommit mode).</source>
          <target state="translated">커밋 후 연결에서 자동 커밋이 복원 될 때까지 콜백이 실행되지 않습니다 (그렇지 않으면 콜백에서 수행 된 모든 쿼리가 암시 적 트랜잭션을 열어서 연결이 자동 커밋 모드로 다시 돌아 가지 못하게하기 때문에).</target>
        </trans-unit>
        <trans-unit id="2533e53842ba6e01a2778c3617175b7973804acc" translate="yes" xml:space="preserve">
          <source>Called by &lt;code&gt;Storage.open()&lt;/code&gt;, this is the actual mechanism the storage class uses to open the file. This must return a &lt;code&gt;File&lt;/code&gt; object, though in most cases, you&amp;rsquo;ll want to return some subclass here that implements logic specific to the backend storage system.</source>
          <target state="translated">&lt;code&gt;Storage.open()&lt;/code&gt; 의해 호출되는 이것은 스토리지 클래스가 파일을 여는 데 사용하는 실제 메커니즘입니다. 대부분의 경우 백엔드 스토리지 시스템에 특정한 논리를 구현하는 일부 서브 클래스를 리턴하려고하지만 &lt;code&gt;File&lt;/code&gt; 오브젝트 를 리턴해야합니다 .</target>
        </trans-unit>
        <trans-unit id="04d0f1fdb5703c461487c46188c40aa995a81d75" translate="yes" xml:space="preserve">
          <source>Called by &lt;code&gt;Storage.save()&lt;/code&gt;. The &lt;code&gt;name&lt;/code&gt; will already have gone through &lt;code&gt;get_valid_name()&lt;/code&gt; and &lt;code&gt;get_available_name()&lt;/code&gt;, and the &lt;code&gt;content&lt;/code&gt; will be a &lt;code&gt;File&lt;/code&gt; object itself.</source>
          <target state="translated">&lt;code&gt;Storage.save()&lt;/code&gt; 의해 호출됩니다 . &lt;code&gt;name&lt;/code&gt; 이미 겪었 것 &lt;code&gt;get_valid_name()&lt;/code&gt; 및 &lt;code&gt;get_available_name()&lt;/code&gt; 및 &lt;code&gt;content&lt;/code&gt; 될 것 &lt;code&gt;File&lt;/code&gt; 객체 자체.</target>
        </trans-unit>
        <trans-unit id="2a199450f538b19c8c1bfacc04eac998316aa504" translate="yes" xml:space="preserve">
          <source>Called when a file has finished uploading.</source>
          <target state="translated">파일 업로드가 완료되면 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="2b314529747427ae5357f76f444f113cd8fe54d8" translate="yes" xml:space="preserve">
          <source>Calling &lt;a href=&quot;#django.core.serializers.get_serializer&quot;&gt;&lt;code&gt;get_serializer()&lt;/code&gt;&lt;/a&gt; with an unknown &lt;a href=&quot;#serialization-formats&quot;&gt;format&lt;/a&gt; will raise a &lt;code&gt;django.core.serializers.SerializerDoesNotExist&lt;/code&gt; exception.</source>
          <target state="translated">알 수없는 &lt;a href=&quot;#serialization-formats&quot;&gt;형식으로 &lt;/a&gt;&lt;a href=&quot;#django.core.serializers.get_serializer&quot;&gt; &lt;code&gt;get_serializer()&lt;/code&gt; &lt;/a&gt; 를 호출 하면 &lt;code&gt;django.core.serializers.SerializerDoesNotExist&lt;/code&gt; 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="9062822e071ddc2708cc58d82fd89d3807fde227" translate="yes" xml:space="preserve">
          <source>Calling &lt;a href=&quot;#django.db.models.query.QuerySet.only&quot;&gt;&lt;code&gt;only()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#django.db.models.query.QuerySet.defer&quot;&gt;&lt;code&gt;defer()&lt;/code&gt;&lt;/a&gt; after &lt;code&gt;values()&lt;/code&gt; doesn&amp;rsquo;t make sense, so doing so will raise a &lt;code&gt;NotImplementedError&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;values()&lt;/code&gt; &lt;a href=&quot;#django.db.models.query.QuerySet.defer&quot;&gt; &lt;code&gt;defer()&lt;/code&gt; &lt;/a&gt; 다음에 &lt;a href=&quot;#django.db.models.query.QuerySet.only&quot;&gt; &lt;code&gt;only()&lt;/code&gt; &lt;/a&gt; 및 defer ()를 호출 하는 것은 의미가 없으므로 &lt;code&gt;NotImplementedError&lt;/code&gt; 가 발생 합니다.</target>
        </trans-unit>
        <trans-unit id="225255f5717a035a5dbfcccbd85b49715a6d8371" translate="yes" xml:space="preserve">
          <source>Calling &lt;code&gt;DeserializedObject.save()&lt;/code&gt; saves the object to the database.</source>
          <target state="translated">&lt;code&gt;DeserializedObject.save()&lt;/code&gt; 호출 하면 객체가 데이터베이스에 저장됩니다.</target>
        </trans-unit>
        <trans-unit id="8d5f536dc82f70cbd8c3fdea012232b4c2e39d8c" translate="yes" xml:space="preserve">
          <source>Calling &lt;code&gt;django.setup()&lt;/code&gt; is required for &amp;ldquo;standalone&amp;rdquo; Django usage</source>
          <target state="translated">&quot;독립형&quot;Django 사용을 위해서는 &lt;code&gt;django.setup()&lt;/code&gt; 호출 이 필요합니다</target>
        </trans-unit>
        <trans-unit id="5be7efc33d36e293c98563570bb597c994ff2a3f" translate="yes" xml:space="preserve">
          <source>Calling &lt;code&gt;expression.as_sql()&lt;/code&gt; is usually incorrect - instead &lt;code&gt;compiler.compile(expression)&lt;/code&gt; should be used. The &lt;code&gt;compiler.compile()&lt;/code&gt; method will take care of calling vendor-specific methods of the expression.</source>
          <target state="translated">&lt;code&gt;expression.as_sql()&lt;/code&gt; 호출 은 일반적으로 올바르지 않습니다. 대신 &lt;code&gt;compiler.compile(expression)&lt;/code&gt; 사용해야합니다. &lt;code&gt;compiler.compile()&lt;/code&gt; 메소드는 식의 벤더 특정 메소드를 호출 처리됩니다.</target>
        </trans-unit>
        <trans-unit id="48d16ea3138b13ed44461144ff40a1a3f1265f71" translate="yes" xml:space="preserve">
          <source>Calling &lt;code&gt;save_m2m()&lt;/code&gt; is only required if you use &lt;code&gt;save(commit=False)&lt;/code&gt;. When you use a &lt;code&gt;save()&lt;/code&gt; on a form, all data &amp;ndash; including many-to-many data &amp;ndash; is saved without the need for any additional method calls. For example:</source>
          <target state="translated">&lt;code&gt;save(commit=False)&lt;/code&gt; 를 사용하는 경우에만 &lt;code&gt;save_m2m()&lt;/code&gt; 호출 이 필요합니다 . 폼에서 &lt;code&gt;save()&lt;/code&gt; 를 사용하면 다 대다 데이터를 포함한 모든 데이터가 추가 메서드 호출없이 저장됩니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="3b5b54109f1437cbeae3a6e4feec88fde3db559f" translate="yes" xml:space="preserve">
          <source>Calling &lt;code&gt;transaction.rollback()&lt;/code&gt; rolls back the entire transaction. Any uncommitted database operations will be lost. In this example, the changes made by &lt;code&gt;a.save()&lt;/code&gt; would be lost, even though that operation raised no error itself.</source>
          <target state="translated">&lt;code&gt;transaction.rollback()&lt;/code&gt; 호출 하면 전체 트랜잭션이 롤백됩니다. 커밋되지 않은 데이터베이스 작업은 손실됩니다. 이 예에서는 &lt;code&gt;a.save()&lt;/code&gt; 의한 변경 사항은 해당 작업 자체에서 오류가 발생하지 않더라도 손실됩니다.</target>
        </trans-unit>
        <trans-unit id="6cd97bce2d410cc2be245b31441f9fd4522c9ee5" translate="yes" xml:space="preserve">
          <source>Calling a management command in your code</source>
          <target state="translated">코드에서 관리 명령 호출</target>
        </trans-unit>
        <trans-unit id="80e08c5db744ae893282c27182426ac3bf421bd0" translate="yes" xml:space="preserve">
          <source>Calling custom &lt;code&gt;QuerySet&lt;/code&gt; methods from the manager</source>
          <target state="translated">관리자에서 사용자 정의 &lt;code&gt;QuerySet&lt;/code&gt; 메소드 호출</target>
        </trans-unit>
        <trans-unit id="290de1b2f9412ab31c14212febd8764907d2a18e" translate="yes" xml:space="preserve">
          <source>Calling none() will create a queryset that never returns any objects and no query will be executed when accessing the results. A qs.none() queryset is an instance of &lt;code&gt;EmptyQuerySet&lt;/code&gt;.</source>
          <target state="translated">none ()을 호출하면 개체를 반환하지 않는 쿼리 집합이 만들어지고 결과에 액세스 할 때 쿼리가 실행되지 않습니다. qs.none () 쿼리 셋은 &lt;code&gt;EmptyQuerySet&lt;/code&gt; 의 인스턴스입니다 .</target>
        </trans-unit>
        <trans-unit id="50d377f3ae921804afcb89876990ce854705a425" translate="yes" xml:space="preserve">
          <source>Calling stored procedures</source>
          <target state="translated">저장 프로 시저 호출</target>
        </trans-unit>
        <trans-unit id="70fbb8db9b9b7c8797750d7521b26b6012ce94ea" translate="yes" xml:space="preserve">
          <source>Calling this function with the value &lt;code&gt;'de'&lt;/code&gt; will give you &lt;code&gt;&quot;Willkommen&quot;&lt;/code&gt;, regardless of &lt;a href=&quot;../../ref/settings#std:setting-LANGUAGE_CODE&quot;&gt;&lt;code&gt;LANGUAGE_CODE&lt;/code&gt;&lt;/a&gt; and language set by middleware.</source>
          <target state="translated">&lt;a href=&quot;../../ref/settings#std:setting-LANGUAGE_CODE&quot;&gt; &lt;code&gt;LANGUAGE_CODE&lt;/code&gt; &lt;/a&gt; 및 미들웨어에서 설정 한 언어에 관계없이 값을 &lt;code&gt;'de'&lt;/code&gt; 로이 함수를 호출 하면 &lt;code&gt;&quot;Willkommen&quot;&lt;/code&gt; 이 제공 됩니다.</target>
        </trans-unit>
        <trans-unit id="d5c856e91fc9af620e934945645127d4ce162a82" translate="yes" xml:space="preserve">
          <source>Calls &lt;a href=&quot;#django.views.generic.base.TemplateResponseMixin.get_template_names&quot;&gt;&lt;code&gt;get_template_names()&lt;/code&gt;&lt;/a&gt; to obtain the list of template names that will be searched looking for an existent template.</source>
          <target state="translated">&lt;a href=&quot;#django.views.generic.base.TemplateResponseMixin.get_template_names&quot;&gt; &lt;code&gt;get_template_names()&lt;/code&gt; &lt;/a&gt; 를 호출 하여 존재하는 템플리트를 찾아서 검색 할 템플리트 이름 목록을 얻습니다.</target>
        </trans-unit>
        <trans-unit id="205a3fba438d8b924883caa5e99258ff7619b586" translate="yes" xml:space="preserve">
          <source>Calls &lt;a href=&quot;#django.views.generic.edit.FormMixin.get_form&quot;&gt;&lt;code&gt;get_form()&lt;/code&gt;&lt;/a&gt; and adds the result to the context data with the name &amp;lsquo;form&amp;rsquo;.</source>
          <target state="translated">&lt;a href=&quot;#django.views.generic.edit.FormMixin.get_form&quot;&gt; &lt;code&gt;get_form()&lt;/code&gt; &lt;/a&gt; 호출 하고 이름이 'form'인 컨텍스트 데이터에 결과를 추가합니다.</target>
        </trans-unit>
        <trans-unit id="bc917339e3060f94eb46e37a73db6fe792c06394" translate="yes" xml:space="preserve">
          <source>Calls &lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet.get&quot;&gt;&lt;code&gt;get()&lt;/code&gt;&lt;/a&gt; on a given model manager, but it raises &lt;a href=&quot;views#django.http.Http404&quot;&gt;&lt;code&gt;Http404&lt;/code&gt;&lt;/a&gt; instead of the model&amp;rsquo;s &lt;a href=&quot;../../ref/models/instances#django.db.models.Model.DoesNotExist&quot;&gt;&lt;code&gt;DoesNotExist&lt;/code&gt;&lt;/a&gt; exception.</source>
          <target state="translated">전화는 &lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet.get&quot;&gt; &lt;code&gt;get()&lt;/code&gt; &lt;/a&gt; 주어진 모델 관리자에 있지만 제기 &lt;a href=&quot;views#django.http.Http404&quot;&gt; &lt;code&gt;Http404&lt;/code&gt; 를&lt;/a&gt; 대신 모델의의 &lt;a href=&quot;../../ref/models/instances#django.db.models.Model.DoesNotExist&quot;&gt; &lt;code&gt;DoesNotExist&lt;/code&gt; 의&lt;/a&gt; 예외입니다.</target>
        </trans-unit>
        <trans-unit id="c3817fa4274b76c50a1ea835fa0948e0dd429206" translate="yes" xml:space="preserve">
          <source>Calls &lt;code&gt;self.get_response(request)&lt;/code&gt; to get the response from later middleware and the view.</source>
          <target state="translated">이후 미들웨어 및보기에서 응답을 얻으려면 &lt;code&gt;self.get_response(request)&lt;/code&gt; 를 호출 하십시오.</target>
        </trans-unit>
        <trans-unit id="f2b7bfc7fca2285243c57ea1c4e38419161e5e62" translate="yes" xml:space="preserve">
          <source>Calls &lt;code&gt;self.process_request(request)&lt;/code&gt; (if defined).</source>
          <target state="translated">&lt;code&gt;self.process_request(request)&lt;/code&gt; 호출 합니다 ( 정의 된 경우).</target>
        </trans-unit>
        <trans-unit id="8c4ba89b2a8ada97487233f628173f811b841f5f" translate="yes" xml:space="preserve">
          <source>Calls &lt;code&gt;self.process_response(request, response)&lt;/code&gt; (if defined).</source>
          <target state="translated">&lt;code&gt;self.process_response(request, response)&lt;/code&gt; (정의 된 경우 )를 호출 합니다.</target>
        </trans-unit>
        <trans-unit id="6edbc64e696501a6c087d5e657ab2e11f291d4a2" translate="yes" xml:space="preserve">
          <source>Calls a database stored procedure with the given name. A sequence (&lt;code&gt;params&lt;/code&gt;) or dictionary (&lt;code&gt;kparams&lt;/code&gt;) of input parameters may be provided. Most databases don&amp;rsquo;t support &lt;code&gt;kparams&lt;/code&gt;. Of Django&amp;rsquo;s built-in backends, only Oracle supports it.</source>
          <target state="translated">주어진 이름으로 데이터베이스 저장 프로 시저를 호출합니다. 입력 파라미터들의 시퀀스 ( &lt;code&gt;params&lt;/code&gt; ) 또는 사전 ( &lt;code&gt;kparams&lt;/code&gt; )이 제공 될 수있다. 대부분의 데이터베이스는 &lt;code&gt;kparams&lt;/code&gt; 를 지원하지 않습니다 . 장고의 내장 백엔드 중에서 오직 오라클 만이이를 지원합니다.</target>
        </trans-unit>
        <trans-unit id="c86a8c1f3d2b9fe28ced9ca98ed7331cd00f6222" translate="yes" xml:space="preserve">
          <source>Calls to update can also use &lt;a href=&quot;../../ref/models/expressions#django.db.models.F&quot;&gt;&lt;code&gt;F expressions&lt;/code&gt;&lt;/a&gt; to update one field based on the value of another field in the model. This is especially useful for incrementing counters based upon their current value. For example, to increment the pingback count for every entry in the blog:</source>
          <target state="translated">업데이트 호출은 &lt;a href=&quot;../../ref/models/expressions#django.db.models.F&quot;&gt; &lt;code&gt;F expressions&lt;/code&gt; &lt;/a&gt; 을 사용 하여 모델의 다른 필드 값을 기반으로 한 필드 를 업데이트 할 수도 있습니다 . 이것은 현재 값을 기준으로 카운터를 증가시킬 때 특히 유용합니다. 예를 들어 블로그의 모든 항목에 대해 핑백 수를 늘리려면 다음을 수행하십시오.</target>
        </trans-unit>
        <trans-unit id="1377b4153726db706d088e89d58fe38d78a1c4ae" translate="yes" xml:space="preserve">
          <source>Can also be used as a decorator.</source>
          <target state="translated">데코레이터로도 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="dc8c496228d2e8578cd02ba4adc44a8b32d30105" translate="yes" xml:space="preserve">
          <source>Can be called multiple times on a single string.</source>
          <target state="translated">단일 문자열에서 여러 번 호출 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9003c0b87f6d4ccd4ebc6feacd9ab4291bb8431a" translate="yes" xml:space="preserve">
          <source>Can be run as a cron job or directly to clean out expired sessions.</source>
          <target state="translated">크론 작업으로 실행되거나 만료 된 세션을 직접 정리할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="10da83c08c4a1138fdc03b07a422c389e67b0765" translate="yes" xml:space="preserve">
          <source>Can use the &lt;a href=&quot;contrib/admin/admindocs#admindocs-bookmarklets&quot;&gt;admindocs bookmarklets&lt;/a&gt; even if not logged in as a staff user.</source>
          <target state="translated">직원 사용자로 로그인하지 않은 경우에도 &lt;a href=&quot;contrib/admin/admindocs#admindocs-bookmarklets&quot;&gt;admindocs 책갈피를&lt;/a&gt; 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="c987df332492e001e2d3789c0251ae7f9c7305c4" translate="yes" xml:space="preserve">
          <source>Can validate that non-empty file data has been bound to the form.</source>
          <target state="translated">비어 있지 않은 파일 데이터가 양식에 바인딩되었는지 검증 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0b52c8f82215da5093e92eb4e9e72651d008a682" translate="yes" xml:space="preserve">
          <source>Can&amp;rsquo;t find GDAL library</source>
          <target state="translated">GDAL 라이브러리를 찾을 수 없습니다</target>
        </trans-unit>
        <trans-unit id="4bde5803bc78173238d1a3e76ed6f0a8e16dc840" translate="yes" xml:space="preserve">
          <source>Can&amp;rsquo;t find GEOS library</source>
          <target state="translated">GEOS 라이브러리를 찾을 수 없습니다</target>
        </trans-unit>
        <trans-unit id="d54f11270dd47daf2e0f21c920b9fe97d8d6f53c" translate="yes" xml:space="preserve">
          <source>Capitalizes the first character of the value. If the first character is not a letter, this filter has no effect.</source>
          <target state="translated">값의 첫 문자를 대문자로 표시하십시오. 첫 번째 문자가 문자가 아닌 경우이 필터는 효과가 없습니다.</target>
        </trans-unit>
        <trans-unit id="643aff8a663babf6c7c6871f88058cc7f7ec318b" translate="yes" xml:space="preserve">
          <source>Captured parameters</source>
          <target state="translated">캡처 된 매개 변수</target>
        </trans-unit>
        <trans-unit id="ce5fc41408434f90f41bd5bf5ff6e7346c566867" translate="yes" xml:space="preserve">
          <source>Captured values can optionally include a converter type. For example, use &lt;code&gt;&amp;lt;int:name&amp;gt;&lt;/code&gt; to capture an integer parameter. If a converter isn&amp;rsquo;t included, any string, excluding a &lt;code&gt;/&lt;/code&gt; character, is matched.</source>
          <target state="translated">캡처 된 값은 선택적으로 변환기 유형을 포함 할 수 있습니다. 예를 들어, 정수 매개 변수를 캡처 하려면 &lt;code&gt;&amp;lt;int:name&amp;gt;&lt;/code&gt; 을 사용하십시오 . 변환기가 포함되어 있지 않으면 &lt;code&gt;/&lt;/code&gt; 문자를 제외한 모든 문자열 이 일치합니다.</target>
        </trans-unit>
        <trans-unit id="83b89a53170cf2cbb22f8d7105e72efe86e419b2" translate="yes" xml:space="preserve">
          <source>Cartographic Projections library</source>
          <target state="translated">지도 투영법 라이브러리</target>
        </trans-unit>
        <trans-unit id="effff00e7a692538669e4cf735c030e54ad8e6b3" translate="yes" xml:space="preserve">
          <source>Cascade deletes. Django emulates the behavior of the SQL constraint ON DELETE CASCADE and also deletes the object containing the ForeignKey.</source>
          <target state="translated">캐스케이드가 삭제됩니다. Django는 SQL 제약 조건 ON DELETE CASCADE의 동작을 에뮬레이션하고 ForeignKey를 포함하는 객체를 삭제합니다.</target>
        </trans-unit>
        <trans-unit id="9254c4bba00f5ff69304a7921d3118fcbac7e6b8" translate="yes" xml:space="preserve">
          <source>Case</source>
          <target state="translated">Case</target>
        </trans-unit>
        <trans-unit id="e7507a4a6841ce2fda611ea4fccd77d38161b45b" translate="yes" xml:space="preserve">
          <source>Case-insensitive containment test.</source>
          <target state="translated">대소 문자를 구분하지 않는 봉쇄 테스트.</target>
        </trans-unit>
        <trans-unit id="1f9313b4678937a757cac748207904bc5de19606" translate="yes" xml:space="preserve">
          <source>Case-insensitive ends-with.</source>
          <target state="translated">대소 문자를 구분하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="0d0362149611a5ec0998f155187f49291496bc75" translate="yes" xml:space="preserve">
          <source>Case-insensitive exact match. If the value provided for comparison is &lt;code&gt;None&lt;/code&gt;, it will be interpreted as an SQL &lt;code&gt;NULL&lt;/code&gt; (see &lt;a href=&quot;#std:fieldlookup-isnull&quot;&gt;&lt;code&gt;isnull&lt;/code&gt;&lt;/a&gt; for more details).</source>
          <target state="translated">대소 문자를 구분하지 않는 정확히 일치합니다. 비교를 위해 제공된 값이 &lt;code&gt;None&lt;/code&gt; 이면 SQL &lt;code&gt;NULL&lt;/code&gt; 로 해석 됩니다 ( 자세한 내용 은 &lt;a href=&quot;#std:fieldlookup-isnull&quot;&gt; &lt;code&gt;isnull&lt;/code&gt; &lt;/a&gt; 참조).</target>
        </trans-unit>
        <trans-unit id="7634f69eb8a3e4eff4652ba8684a95370739003e" translate="yes" xml:space="preserve">
          <source>Case-insensitive regular expression match.</source>
          <target state="translated">대소 문자를 구분하지 않는 정규식 일치.</target>
        </trans-unit>
        <trans-unit id="77942bdff97295d7b996673b8cbd912e09e179d7" translate="yes" xml:space="preserve">
          <source>Case-insensitive starts-with.</source>
          <target state="translated">대소 문자를 구분하지 않는 시작.</target>
        </trans-unit>
        <trans-unit id="b7e7ffa2290b08368430a3bb66eb35d1d5525705" translate="yes" xml:space="preserve">
          <source>Case-sensitive containment test.</source>
          <target state="translated">대소 문자 구분 억제 테스트.</target>
        </trans-unit>
        <trans-unit id="0f39d0d9dc8009adf803b95a8e052064e59c3422" translate="yes" xml:space="preserve">
          <source>Case-sensitive containment test. For example:</source>
          <target state="translated">대소 문자 구분 억제 테스트. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="5a13d13f6844d51bd79413f5aa96642a027f98e9" translate="yes" xml:space="preserve">
          <source>Case-sensitive ends-with.</source>
          <target state="translated">대소 문자를 구분합니다.</target>
        </trans-unit>
        <trans-unit id="8db5fb150086d944b8dccae77af44e814044f1b0" translate="yes" xml:space="preserve">
          <source>Case-sensitive regular expression match.</source>
          <target state="translated">대소 문자 구분 정규식 일치.</target>
        </trans-unit>
        <trans-unit id="2810f50cccc5f39df11fe3f8ce275a8e25efc745" translate="yes" xml:space="preserve">
          <source>Case-sensitive starts-with.</source>
          <target state="translated">대소 문자 구분 시작.</target>
        </trans-unit>
        <trans-unit id="55a89527100d7affacb785a535913eceec75eda6" translate="yes" xml:space="preserve">
          <source>Caution</source>
          <target state="translated">Caution</target>
        </trans-unit>
        <trans-unit id="bcaa33a7ae44bd5042c37a9cdbea7f843b1cf7c8" translate="yes" xml:space="preserve">
          <source>Caveats</source>
          <target state="translated">Caveats</target>
        </trans-unit>
        <trans-unit id="32b9ed6be0f1d41f1c5b1a9ba236378547abd75d" translate="yes" xml:space="preserve">
          <source>Caveats on Oracle</source>
          <target state="translated">오라클에 대한 경고</target>
        </trans-unit>
        <trans-unit id="698b2aa739a5adac275a1b1c1b14ec3c80549813" translate="yes" xml:space="preserve">
          <source>Centers the value in a field of a given width.</source>
          <target state="translated">주어진 너비의 필드에서 값을 가운데에 맞 춥니 다.</target>
        </trans-unit>
        <trans-unit id="9cab1c70b10c72b3dc8fc42049f8e0e2303757a9" translate="yes" xml:space="preserve">
          <source>Centimeter</source>
          <target state="translated">Centimeter</target>
        </trans-unit>
        <trans-unit id="fb989a28d9c65cf81739440b610163e2621f4326" translate="yes" xml:space="preserve">
          <source>Certain Django components also have their own caching functionality; these are discussed below in the sections related to those components.</source>
          <target state="translated">특정 장고 구성 요소에는 자체 캐싱 기능이 있습니다. 이러한 구성 요소와 관련된 섹션에서 아래에 설명되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="b2bcd6122f6e191d31074ecd7a8a7b69b7db9820" translate="yes" xml:space="preserve">
          <source>Certain applications provide custom tag and filter libraries. To access them in a template, ensure the application is in &lt;a href=&quot;../settings#std:setting-INSTALLED_APPS&quot;&gt;&lt;code&gt;INSTALLED_APPS&lt;/code&gt;&lt;/a&gt; (we&amp;rsquo;d add &lt;code&gt;'django.contrib.humanize'&lt;/code&gt; for this example), and then use the &lt;a href=&quot;builtins#std:templatetag-load&quot;&gt;&lt;code&gt;load&lt;/code&gt;&lt;/a&gt; tag in a template:</source>
          <target state="translated">특정 응용 프로그램은 사용자 정의 태그 및 필터 라이브러리를 제공합니다. 템플리트에서 이들에 액세스하려면 애플리케이션이 &lt;a href=&quot;../settings#std:setting-INSTALLED_APPS&quot;&gt; &lt;code&gt;INSTALLED_APPS&lt;/code&gt; 에&lt;/a&gt; 있는지 &lt;code&gt;'django.contrib.humanize'&lt;/code&gt; 후 (이 예제에서는 'django.contrib.humanize' 를 추가 함 ) 템플리트에서 &lt;a href=&quot;builtins#std:templatetag-load&quot;&gt; &lt;code&gt;load&lt;/code&gt; &lt;/a&gt; 태그 를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="b81f5be1e9b8b7d9f762cf7cce4a566d424505a6" translate="yes" xml:space="preserve">
          <source>Certain expressions may not be supported</source>
          <target state="translated">특정 표현은 지원되지 않을 수 있습니다</target>
        </trans-unit>
        <trans-unit id="c2a227e8810bacd3c29b9501fefb520e6c0cab4e" translate="yes" xml:space="preserve">
          <source>Certain key parts of Django are not able to operate safely in an asynchronous environment, as they have global state that is not coroutine-aware. These parts of Django are classified as &amp;ldquo;async-unsafe&amp;rdquo;, and are protected from execution in an asynchronous environment. The ORM is the main example, but there are other parts that are also protected in this way.</source>
          <target state="translated">Django의 특정 주요 부분은 코 루틴을 인식하지 못하는 전역 상태를 갖기 때문에 비동기 환경에서 안전하게 작동 할 수 없습니다. Django의 이러한 부분은 &quot;비동기 안전하지 않은&quot;것으로 분류되며 비동기 환경에서 실행되지 않습니다. ORM이 주요 예이지만이 방법으로 보호되는 다른 부분도 있습니다.</target>
        </trans-unit>
        <trans-unit id="e401d2cd529d75cfa2ea6150c3b9e4c5df0518b6" translate="yes" xml:space="preserve">
          <source>Certain views can have unusual requirements that mean they don&amp;rsquo;t fit the normal pattern envisaged here. A number of utilities can be useful in these situations. The scenarios they might be needed in are described in the following section.</source>
          <target state="translated">특정보기에는 일반적으로 예상되는 일반적인 패턴에 맞지 않는 특이한 요구 사항이있을 수 있습니다. 이러한 상황에서는 많은 유틸리티가 유용 할 수 있습니다. 필요한 시나리오는 다음 섹션에서 설명합니다.</target>
        </trans-unit>
        <trans-unit id="d81f3692d7cd234a9b91ed4f4582f15dd8290d89" translate="yes" xml:space="preserve">
          <source>Chain</source>
          <target state="translated">Chain</target>
        </trans-unit>
        <trans-unit id="3c6171c87113422a3f3429146ba5738e8a314ad4" translate="yes" xml:space="preserve">
          <source>Chain (Benoit)</source>
          <target state="translated">체인 (베노이 트)</target>
        </trans-unit>
        <trans-unit id="0d7397da9f2bf5c7f48571b6f5af8fbd61d90308" translate="yes" xml:space="preserve">
          <source>Chain (Sears)</source>
          <target state="translated">체인 (Sears)</target>
        </trans-unit>
        <trans-unit id="ce02335f52c1bd189c9e1d30838e8a4f3330eb39" translate="yes" xml:space="preserve">
          <source>Chaining &lt;code&gt;prefetch_related&lt;/code&gt; calls will accumulate the lookups that are prefetched. To clear any &lt;code&gt;prefetch_related&lt;/code&gt; behavior, pass &lt;code&gt;None&lt;/code&gt; as a parameter:</source>
          <target state="translated">&lt;code&gt;prefetch_related&lt;/code&gt; _ 관련 호출을 체인하면 프리 페치 된 조회가 누적됩니다. &lt;code&gt;prefetch_related&lt;/code&gt; 동작 을 지우려면 &lt;code&gt;None&lt;/code&gt; 을 매개 변수로 전달하십시오 .</target>
        </trans-unit>
        <trans-unit id="9fe8b203548770ce24b9b586fd1e9fc34d9754e0" translate="yes" xml:space="preserve">
          <source>Chaining &lt;code&gt;select_related&lt;/code&gt; calls works in a similar way to other methods - that is that &lt;code&gt;select_related('foo', 'bar')&lt;/code&gt; is equivalent to &lt;code&gt;select_related('foo').select_related('bar')&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;select_related&lt;/code&gt; 호출을 체인화 하는 것은 다른 방법과 유사한 방식으로 작동합니다. 즉 &lt;code&gt;select_related('foo', 'bar')&lt;/code&gt; 는 &lt;code&gt;select_related('foo').select_related('bar')&lt;/code&gt; 와 같습니다 .</target>
        </trans-unit>
        <trans-unit id="e179f06aac87666a61d48cc71ea619e11edbe952" translate="yes" xml:space="preserve">
          <source>Chaining filters</source>
          <target state="translated">체인 필터</target>
        </trans-unit>
        <trans-unit id="64fbd995d3b6b156ee26ae3c03e6516434c34c12" translate="yes" xml:space="preserve">
          <source>Change</source>
          <target state="translated">Change</target>
        </trans-unit>
        <trans-unit id="978219bf935dfccbf5fcff03ad903965b477b672" translate="yes" xml:space="preserve">
          <source>Change &lt;code&gt;unique=True&lt;/code&gt; to &lt;code&gt;null=True&lt;/code&gt; &amp;ndash; this will create the intermediary null field and defer creating the unique constraint until we&amp;rsquo;ve populated unique values on all the rows.</source>
          <target state="translated">&lt;code&gt;unique=True&lt;/code&gt; 를 &lt;code&gt;null=True&lt;/code&gt; = True 로 변경 합니다. 이렇게하면 중간 널 필드가 생성되고 모든 행에서 고유 한 값을 채울 때까지 고유 제한 조건 작성이 지연됩니다.</target>
        </trans-unit>
        <trans-unit id="bda4cbf2941e0428aa185caa42229a5ca77c5913" translate="yes" xml:space="preserve">
          <source>Change the &amp;ldquo;Date published&amp;rdquo; by clicking the &amp;ldquo;Today&amp;rdquo; and &amp;ldquo;Now&amp;rdquo; shortcuts. Then click &amp;ldquo;Save and continue editing.&amp;rdquo; Then click &amp;ldquo;History&amp;rdquo; in the upper right. You&amp;rsquo;ll see a page listing all changes made to this object via the Django admin, with the timestamp and username of the person who made the change:</source>
          <target state="translated">&quot;오늘&quot;및 &quot;지금&quot;바로 가기를 클릭하여 &quot;날짜 게시&quot;를 변경하십시오. 그런 다음 &quot;저장하고 편집을 계속하십시오.&quot;를 클릭하십시오. 그런 다음 오른쪽 상단에서 &quot;기록&quot;을 클릭하십시오. Django 관리자를 통해이 개체에 대한 모든 변경 사항과 변경 한 사람의 타임 스탬프 및 사용자 이름이 나열된 페이지가 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="b028b85847edd8e58a1c36a90e6542beee48073f" translate="yes" xml:space="preserve">
          <source>Change your models (in &lt;code&gt;models.py&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;models.py&lt;/code&gt; 에서 모델을 변경하십시오 .</target>
        </trans-unit>
        <trans-unit id="a1f3b40b52c856af8cb400c2497f03119720801a" translate="yes" xml:space="preserve">
          <source>Changed in Django 2.2:</source>
          <target state="translated">장고 2.2에서 변경 :</target>
        </trans-unit>
        <trans-unit id="9703c03e2e64f0540e022cd7df2d556655339d53" translate="yes" xml:space="preserve">
          <source>Changed in Django 3.0:</source>
          <target state="translated">장고 3.0에서 변경 :</target>
        </trans-unit>
        <trans-unit id="8ba236a483f165d2bfc9b10507d610b6bde6a8ba" translate="yes" xml:space="preserve">
          <source>Changelist</source>
          <target state="translated">Changelist</target>
        </trans-unit>
        <trans-unit id="2d4ed11e371947075aa36af2d8a347a98dbd1273" translate="yes" xml:space="preserve">
          <source>Changes a field&amp;rsquo;s name (and, unless &lt;a href=&quot;models/fields#django.db.models.Field.db_column&quot;&gt;&lt;code&gt;db_column&lt;/code&gt;&lt;/a&gt; is set, its column name).</source>
          <target state="translated">필드 이름 (및 &lt;a href=&quot;models/fields#django.db.models.Field.db_column&quot;&gt; &lt;code&gt;db_column&lt;/code&gt; &lt;/a&gt; 이 설정 되지 않은 경우 열 이름)을 변경합니다.</target>
        </trans-unit>
        <trans-unit id="d0ea6d097b2dc289bac2a18b72d49cac8196d782" translate="yes" xml:space="preserve">
          <source>Changes a model&amp;rsquo;s &lt;a href=&quot;models/options#django.db.models.Options.index_together&quot;&gt;&lt;code&gt;index_together&lt;/code&gt;&lt;/a&gt; value; this will add or remove indexes from the model&amp;rsquo;s table until they match the new value.</source>
          <target state="translated">모델의 &lt;a href=&quot;models/options#django.db.models.Options.index_together&quot;&gt; &lt;code&gt;index_together&lt;/code&gt; &lt;/a&gt; 값을 변경 합니다. 새 값과 일치 할 때까지 모델 테이블에서 인덱스를 추가하거나 제거합니다.</target>
        </trans-unit>
        <trans-unit id="74a4e9438f880955e4130b40bee89afb35895b44" translate="yes" xml:space="preserve">
          <source>Changes a model&amp;rsquo;s &lt;a href=&quot;models/options#django.db.models.Options.unique_together&quot;&gt;&lt;code&gt;unique_together&lt;/code&gt;&lt;/a&gt; value; this will add or remove unique constraints from the model&amp;rsquo;s table until they match the new value.</source>
          <target state="translated">모델의 &lt;a href=&quot;models/options#django.db.models.Options.unique_together&quot;&gt; &lt;code&gt;unique_together&lt;/code&gt; &lt;/a&gt; 값을 변경 합니다. 이렇게하면 새 값과 일치 할 때까지 모델 테이블에서 고유 제한 조건을 추가하거나 제거합니다.</target>
        </trans-unit>
        <trans-unit id="7c816ec7a7c05ade3722606532f92e7248dafee3" translate="yes" xml:space="preserve">
          <source>Changes the model&amp;rsquo;s set of custom indexes (the &lt;a href=&quot;models/options#django.db.models.Options.index_together&quot;&gt;&lt;code&gt;index_together&lt;/code&gt;&lt;/a&gt; option on the &lt;code&gt;Meta&lt;/code&gt; subclass).</source>
          <target state="translated">모델의 사용자 정의 색인 세트 ( &lt;code&gt;Meta&lt;/code&gt; 서브 클래스 의 &lt;a href=&quot;models/options#django.db.models.Options.index_together&quot;&gt; &lt;code&gt;index_together&lt;/code&gt; &lt;/a&gt; 옵션 )를 변경합니다.</target>
        </trans-unit>
        <trans-unit id="6612a11308cfb1dd512fbc343dcdd0ddbb3c811a" translate="yes" xml:space="preserve">
          <source>Changes the model&amp;rsquo;s set of unique constraints (the &lt;a href=&quot;models/options#django.db.models.Options.unique_together&quot;&gt;&lt;code&gt;unique_together&lt;/code&gt;&lt;/a&gt; option on the &lt;code&gt;Meta&lt;/code&gt; subclass).</source>
          <target state="translated">모델의 고유 제한 조건 세트 ( &lt;code&gt;Meta&lt;/code&gt; 서브 클래스 의 &lt;a href=&quot;models/options#django.db.models.Options.unique_together&quot;&gt; &lt;code&gt;unique_together&lt;/code&gt; &lt;/a&gt; 옵션 )를 변경합니다.</target>
        </trans-unit>
        <trans-unit id="5a972fd27237d2164984b1ba9831df10c0e460b8" translate="yes" xml:space="preserve">
          <source>Changes the model&amp;rsquo;s table name (the &lt;a href=&quot;models/options#django.db.models.Options.db_table&quot;&gt;&lt;code&gt;db_table&lt;/code&gt;&lt;/a&gt; option on the &lt;code&gt;Meta&lt;/code&gt; subclass).</source>
          <target state="translated">모델의 테이블 이름 ( &lt;code&gt;Meta&lt;/code&gt; 서브 클래스 의 &lt;a href=&quot;models/options#django.db.models.Options.db_table&quot;&gt; &lt;code&gt;db_table&lt;/code&gt; &lt;/a&gt; 옵션)을 변경합니다 .</target>
        </trans-unit>
        <trans-unit id="db747fb627126a359d7def659dd0352e3919bb1e" translate="yes" xml:space="preserve">
          <source>Changing &lt;a href=&quot;../../ref/settings#std:setting-AUTH_USER_MODEL&quot;&gt;&lt;code&gt;AUTH_USER_MODEL&lt;/code&gt;&lt;/a&gt; after you&amp;rsquo;ve created database tables is significantly more difficult since it affects foreign keys and many-to-many relationships, for example.</source>
          <target state="translated">예를 들어, 데이터베이스 테이블을 작성한 후 &lt;a href=&quot;../../ref/settings#std:setting-AUTH_USER_MODEL&quot;&gt; &lt;code&gt;AUTH_USER_MODEL&lt;/code&gt; &lt;/a&gt; 을 변경 하는 것은 외래 키 및 다 대다 관계에 영향을주기 때문에 훨씬 더 어렵습니다.</target>
        </trans-unit>
        <trans-unit id="8fb40c96d620b0b220afe31f4b0710bbe53eca0b" translate="yes" xml:space="preserve">
          <source>Changing &lt;code&gt;order_with_respect_to&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;order_with_respect_to&lt;/code&gt; 변경</target>
        </trans-unit>
        <trans-unit id="de980bdcf73cbcdbd24cf453e0709c2a81363f4c" translate="yes" xml:space="preserve">
          <source>Changing a custom field&amp;rsquo;s base class</source>
          <target state="translated">사용자 정의 필드의 기본 클래스 변경</target>
        </trans-unit>
        <trans-unit id="4fe72aecd4476f1f731e064961c53e87770d63b2" translate="yes" xml:space="preserve">
          <source>Changing a user&amp;rsquo;s password will log out all their sessions. See &lt;a href=&quot;#session-invalidation-on-password-change&quot;&gt;Session invalidation on password change&lt;/a&gt; for details.</source>
          <target state="translated">사용자 비밀번호를 변경하면 모든 세션이 로그 아웃됩니다. 자세한 내용 &lt;a href=&quot;#session-invalidation-on-password-change&quot;&gt;은 비밀번호 변경시 세션 무효화를&lt;/a&gt; 참조 하십시오.</target>
        </trans-unit>
        <trans-unit id="c0d2465f16195c825347a20b5ab68dd74cc9fd0f" translate="yes" xml:space="preserve">
          <source>Changing an unmanaged model to managed</source>
          <target state="translated">관리되지 않는 모델을 관리되는 것으로 변경</target>
        </trans-unit>
        <trans-unit id="60e1198ccb053cf32349285143b660dfd72bf502" translate="yes" xml:space="preserve">
          <source>Changing passwords</source>
          <target state="translated">비밀번호 변경</target>
        </trans-unit>
        <trans-unit id="d648a588beccf21b2a5977a3f45276864409d1dd" translate="yes" xml:space="preserve">
          <source>Changing the default JSON encoder</source>
          <target state="translated">기본 JSON 인코더 변경</target>
        </trans-unit>
        <trans-unit id="59297060cd88ff50798e1200607bda6e3c7a64e9" translate="yes" xml:space="preserve">
          <source>Changing the form</source>
          <target state="translated">양식 변경</target>
        </trans-unit>
        <trans-unit id="e4edcda30ad2cbc66ef258692394cc6897559ba3" translate="yes" xml:space="preserve">
          <source>Changing the minimum recorded level per-request</source>
          <target state="translated">요청 당 최소 기록 레벨 변경</target>
        </trans-unit>
        <trans-unit id="27863b4c17612256cbade1c8a5daae517bb6c0b2" translate="yes" xml:space="preserve">
          <source>Changing the port</source>
          <target state="translated">포트 변경</target>
        </trans-unit>
        <trans-unit id="1ff5487fda52cb16cd2f83bcd748322df3795601" translate="yes" xml:space="preserve">
          <source>Changing the queryset</source>
          <target state="translated">쿼리 셋 변경</target>
        </trans-unit>
        <trans-unit id="b5b19472e5b1f82485078fea4153a94cb28bc023" translate="yes" xml:space="preserve">
          <source>Changing the search configuration</source>
          <target state="translated">검색 구성 변경</target>
        </trans-unit>
        <trans-unit id="128e55b0e9498129809151adeb2a56e0ded3a0be" translate="yes" xml:space="preserve">
          <source>Changing to a custom user model mid-project</source>
          <target state="translated">프로젝트 중간에 사용자 정의 사용자 모델로 변경</target>
        </trans-unit>
        <trans-unit id="5058f50eb235013db83478b4c09b9d85b50f9654" translate="yes" xml:space="preserve">
          <source>Changing upload handler behavior</source>
          <target state="translated">업로드 핸들러 동작 변경</target>
        </trans-unit>
        <trans-unit id="a13cc96b75836987bfdbff1a81233adc38420cd1" translate="yes" xml:space="preserve">
          <source>Character fields</source>
          <target state="translated">문자 필드</target>
        </trans-unit>
        <trans-unit id="99957d5920a0c408d447b33739a6c587076d7c4c" translate="yes" xml:space="preserve">
          <source>Cheat sheet</source>
          <target state="translated">컨닝 지</target>
        </trans-unit>
        <trans-unit id="9bb80438ab17d883d1ed6cdd6f67a81ed2e82a1e" translate="yes" xml:space="preserve">
          <source>Check first if SQLite is compiled with the &lt;a href=&quot;https://www.sqlite.org/rtree.html&quot;&gt;R*Tree module&lt;/a&gt;. Run the sqlite3 command line interface and enter the following query:</source>
          <target state="translated">SQLite가 &lt;a href=&quot;https://www.sqlite.org/rtree.html&quot;&gt;R * Tree 모듈로&lt;/a&gt; 컴파일되었는지 먼저 확인하십시오 . sqlite3 명령 행 인터페이스를 실행하고 다음 조회를 입력하십시오.</target>
        </trans-unit>
        <trans-unit id="b8664c61a6d5af3170e77d9a9fefed1000d60d34" translate="yes" xml:space="preserve">
          <source>Check for duplicate flatpage URLs.</source>
          <target state="translated">중복 된 플랫 페이지 URL을 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="3bc89e15ccb324f637c49e8c84907a45925b079f" translate="yes" xml:space="preserve">
          <source>Check if a value has changed from the last iteration of a loop.</source>
          <target state="translated">루프의 마지막 반복에서 값이 변경되었는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="6bde1461372979f085dc0503dc0a112a68fa7282" translate="yes" xml:space="preserve">
          <source>Check out Django&amp;rsquo;s main development branch like so:</source>
          <target state="translated">Django의 주요 개발 지점을 다음과 같이 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="f04b3c8da9374a5791c1d92a606c401c41193076" translate="yes" xml:space="preserve">
          <source>Check out the &lt;a href=&quot;../serialization&quot;&gt;Serializing Django objects&lt;/a&gt; documentation for more information on how to correctly transform Django models and querysets into JSON.</source>
          <target state="translated">Django 모델 및 쿼리 세트를 JSON으로 올바르게 변환하는 방법에 대한 자세한 정보는 &lt;a href=&quot;../serialization&quot;&gt;Django 객체 직렬화&lt;/a&gt; 문서를 확인하십시오 .</target>
        </trans-unit>
        <trans-unit id="e9380d6f6c73e9fa1638d5cd5ae16b2c81814c9e" translate="yes" xml:space="preserve">
          <source>Check the &lt;a href=&quot;https://docs.djangoproject.com/en/3.0/misc/distributions/&quot;&gt;distribution specific notes&lt;/a&gt; to see if your platform/distribution provides official Django packages/installers. Distribution-provided packages will typically allow for automatic installation of dependencies and supported upgrade paths; however, these packages will rarely contain the latest release of Django.</source>
          <target state="translated">체크 &lt;a href=&quot;https://docs.djangoproject.com/en/3.0/misc/distributions/&quot;&gt;유통 특정 노트&lt;/a&gt; 플랫폼 / 분포가 공식 장고 패키지 / 설치 프로그램을 제공하고 있는지. 배포판으로 제공되는 패키지는 일반적으로 종속성 및 지원되는 업그레이드 경로를 자동으로 설치할 수 있도록합니다. 그러나이 패키지에는 Django의 최신 릴리스가 거의 포함되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="7b228c9603969f0a96a2bfe0a7bd2082b55a65af" translate="yes" xml:space="preserve">
          <source>Checking for the required number of arguments, etc., has already been done by the time our function is called, so we don&amp;rsquo;t need to do that.</source>
          <target state="translated">필요한 인수 수 등을 확인하는 것은 함수가 호출 될 때 이미 수행되었으므로 그렇게 할 필요가 없습니다.</target>
        </trans-unit>
        <trans-unit id="7733f2b8fa6f97ff9ec622e9349eda3ee076841c" translate="yes" xml:space="preserve">
          <source>Checking if the field data has changed</source>
          <target state="translated">필드 데이터가 변경되었는지 확인</target>
        </trans-unit>
        <trans-unit id="22079bec1c73c4523422968d5a18eab2a6a42e29" translate="yes" xml:space="preserve">
          <source>Checking that a callable &lt;a href=&quot;#django.test.SimpleTestCase.assertRaisesMessage&quot;&gt;&lt;code&gt;raises a certain exception&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">호출 가능 여부를 확인 &lt;a href=&quot;#django.test.SimpleTestCase.assertRaisesMessage&quot;&gt; &lt;code&gt;raises a certain exception&lt;/code&gt; &lt;/a&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="8e666f124c7e64aa56434fa6bd2fed4502f7c542" translate="yes" xml:space="preserve">
          <source>Checking that a callable &lt;a href=&quot;#django.test.SimpleTestCase.assertWarnsMessage&quot;&gt;&lt;code&gt;triggers a certain warning&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">호출 가능 여부를 확인 &lt;a href=&quot;#django.test.SimpleTestCase.assertWarnsMessage&quot;&gt; &lt;code&gt;triggers a certain warning&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="7125d8c0ad65ef9bccd1cbc0d286e7dbfa9f28b0" translate="yes" xml:space="preserve">
          <source>Checking which form data has changed</source>
          <target state="translated">변경된 양식 데이터 확인</target>
        </trans-unit>
        <trans-unit id="ab9b712b6c4ea74deeb6970fa4db291756f30ffc" translate="yes" xml:space="preserve">
          <source>Checks can be triggered explicitly via the &lt;a href=&quot;../ref/django-admin#django-admin-check&quot;&gt;&lt;code&gt;check&lt;/code&gt;&lt;/a&gt; command. Checks are triggered implicitly before most commands, including &lt;a href=&quot;../ref/django-admin#django-admin-runserver&quot;&gt;&lt;code&gt;runserver&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../ref/django-admin#django-admin-migrate&quot;&gt;&lt;code&gt;migrate&lt;/code&gt;&lt;/a&gt;. For performance reasons, checks are not run as part of the WSGI stack that is used in deployment. If you need to run system checks on your deployment server, trigger them explicitly using &lt;a href=&quot;../ref/django-admin#django-admin-check&quot;&gt;&lt;code&gt;check&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../ref/django-admin#django-admin-check&quot;&gt; &lt;code&gt;check&lt;/code&gt; &lt;/a&gt; 명령을 통해 명시 적으로 검사를 트리거 할 수 있습니다 . &lt;a href=&quot;../ref/django-admin#django-admin-runserver&quot;&gt; &lt;code&gt;runserver&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../ref/django-admin#django-admin-migrate&quot;&gt; &lt;code&gt;migrate&lt;/code&gt; 를&lt;/a&gt; 포함한 대부분의 명령 전에 검사가 암시 적으로 트리거 됩니다. 성능상의 이유로, 점검은 배치에 사용되는 WSGI 스택의 일부로 실행되지 않습니다. 배치 서버에서 시스템 검사를 실행해야하는 경우 &lt;a href=&quot;../ref/django-admin#django-admin-check&quot;&gt; &lt;code&gt;check&lt;/code&gt; 를&lt;/a&gt; 사용하여 명시 적으로 트리거 하십시오 .</target>
        </trans-unit>
        <trans-unit id="9835dee24c04098e686b60c1c7515fa889dcbbcf" translate="yes" xml:space="preserve">
          <source>Checks deferrable database constraints at the end of each test.</source>
          <target state="translated">각 테스트가 끝날 때 지연 가능한 데이터베이스 제약 조건을 확인합니다.</target>
        </trans-unit>
        <trans-unit id="384145617d037279a5df2a22a564a2b7db5ab02c" translate="yes" xml:space="preserve">
          <source>Checks if &lt;code&gt;value&lt;/code&gt; was signed less than &lt;code&gt;max_age&lt;/code&gt; seconds ago, otherwise raises &lt;code&gt;SignatureExpired&lt;/code&gt;. The &lt;code&gt;max_age&lt;/code&gt; parameter can accept an integer or a &lt;a href=&quot;https://docs.python.org/3/library/datetime.html#datetime.timedelta&quot;&gt;&lt;code&gt;datetime.timedelta&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">&lt;code&gt;value&lt;/code&gt; 이 &lt;code&gt;max_age&lt;/code&gt; 초 미만으로 서명 되었는지 확인하고 , 그렇지 않으면 &lt;code&gt;SignatureExpired&lt;/code&gt; 를 발생 시킵니다. &lt;code&gt;max_age&lt;/code&gt; 매개 변수는 정수 또는 수용 할 수 &lt;a href=&quot;https://docs.python.org/3/library/datetime.html#datetime.timedelta&quot;&gt; &lt;code&gt;datetime.timedelta&lt;/code&gt; 의&lt;/a&gt; 개체를.</target>
        </trans-unit>
        <trans-unit id="f9127410ac9fb01c7fdd9f1334829066a7cd7a78" translate="yes" xml:space="preserve">
          <source>Checks its own rendered contents against its previous state and only displays the content if it has changed. For example, this displays a list of days, only displaying the month if it changes:</source>
          <target state="translated">렌더링 된 내용을 이전 상태와 비교하여 확인한 후 변경된 내용 만 표시합니다. 예를 들어, 날짜 목록이 표시되고 변경되는 경우에만 달이 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="80225fb6301c03594549c53729c7642fc6a6f51b" translate="yes" xml:space="preserve">
          <source>Checks to see if the given spatial reference is valid, if not an exception will be raised.</source>
          <target state="translated">주어진 공간 참조가 유효한지 확인합니다. 예외가 아닌 경우 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="72b374afc96e757e6e2a31fcb267590bb38fa939" translate="yes" xml:space="preserve">
          <source>Checks whether an application with the given name exists in the registry. &lt;code&gt;app_name&lt;/code&gt; is the full name of the app, e.g. &lt;code&gt;'django.contrib.admin'&lt;/code&gt;.</source>
          <target state="translated">지정된 이름의 응용 프로그램이 레지스트리에 있는지 확인합니다. &lt;code&gt;app_name&lt;/code&gt; 은 앱의 전체 이름입니다 (예 : &lt;code&gt;'django.contrib.admin'&lt;/code&gt; ) .</target>
        </trans-unit>
        <trans-unit id="5cc62e66b338709aefc667cb29a3043e09cfe052" translate="yes" xml:space="preserve">
          <source>Checks whether there is a global language file for the given language code (e.g. &amp;lsquo;fr&amp;rsquo;, &amp;lsquo;pt_BR&amp;rsquo;). This is used to decide whether a user-provided language is available.</source>
          <target state="translated">지정된 언어 코드에 대한 글로벌 언어 파일이 있는지 확인합니다 (예 : 'fr', 'pt_BR'). 사용자 제공 언어를 사용할 수 있는지 여부를 결정하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="44266bb61b2d032bb13f445f6e03021d4e83fa22" translate="yes" xml:space="preserve">
          <source>Chicago: 7,000,000</source>
          <target state="translated">시카고 : 7,000,000</target>
        </trans-unit>
        <trans-unit id="5996882c70257eb82d8a4bc0e2a61f7768540178" translate="yes" xml:space="preserve">
          <source>Choose &lt;code&gt;memory_cost&lt;/code&gt; to be the KiB of memory you can spare.</source>
          <target state="translated">여분의 메모리 KiB가되도록 &lt;code&gt;memory_cost&lt;/code&gt; 를 선택하십시오 .</target>
        </trans-unit>
        <trans-unit id="1c9ec0a34dcb893c5c2bc08c1df83fe4ef574db1" translate="yes" xml:space="preserve">
          <source>Choose &lt;code&gt;parallelism&lt;/code&gt; to be the number of threads you can spare computing the hash.</source>
          <target state="translated">&lt;code&gt;parallelism&lt;/code&gt; 를 선택 하여 해시 계산에 여유가있는 스레드 수를 선택하십시오 .</target>
        </trans-unit>
        <trans-unit id="e2f88b4b283c432bab61dfe12fb72d23f6e082dd" translate="yes" xml:space="preserve">
          <source>Choosing a name for your app</source>
          <target state="translated">앱 이름 선택</target>
        </trans-unit>
        <trans-unit id="bba2aad3491667b89109b80cd83a4d44b2507dfa" translate="yes" xml:space="preserve">
          <source>Choosing an appropriate SRID for your model is an important decision that the developer should consider carefully. The SRID is an integer specifier that corresponds to the projection system that will be used to interpret the data in the spatial database. &lt;a href=&quot;#fnsrid&quot; id=&quot;id7&quot;&gt;[3]&lt;/a&gt; Projection systems give the context to the coordinates that specify a location. Although the details of &lt;a href=&quot;https://en.wikipedia.org/wiki/Geodesy&quot;&gt;geodesy&lt;/a&gt; are beyond the scope of this documentation, the general problem is that the earth is spherical and representations of the earth (e.g., paper maps, Web maps) are not.</source>
          <target state="translated">모델에 적절한 SRID를 선택하는 것은 개발자가 신중하게 고려해야 할 중요한 결정입니다. SRID는 공간 데이터베이스의 데이터를 해석하는 데 사용될 투영 시스템에 해당하는 정수 지정자입니다. &lt;a href=&quot;#fnsrid&quot; id=&quot;id7&quot;&gt;[3]&lt;/a&gt; 프로젝션 시스템은 위치를 지정하는 좌표에 컨텍스트를 제공합니다. &lt;a href=&quot;https://en.wikipedia.org/wiki/Geodesy&quot;&gt;측지&lt;/a&gt; 의 세부 사항은 이 문서의 범위를 벗어나지 만, 지구가 구형이며 지구 (예 : 종이지도, 웹지도)의 표현이 아니라는 것이 일반적인 문제입니다.</target>
        </trans-unit>
        <trans-unit id="fc76dbb40513db48ba2a74315571cc7cfd36629b" translate="yes" xml:space="preserve">
          <source>Choosing between &lt;code&gt;filter&lt;/code&gt; and &lt;code&gt;QuerySet.filter()&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;filter&lt;/code&gt; 와 &lt;code&gt;QuerySet.filter()&lt;/code&gt; 선택</target>
        </trans-unit>
        <trans-unit id="b4c2a6a459b482dba9ac2e1abe53f471939a3cc5" translate="yes" xml:space="preserve">
          <source>Chrome 4.1+</source>
          <target state="translated">크롬 4.1 이상</target>
        </trans-unit>
        <trans-unit id="dd6692bb58d9c44d5350d7632ea1fbe7e5f7c485" translate="yes" xml:space="preserve">
          <source>Clarke&amp;rsquo;s Foot</source>
          <target state="translated">클라크의 발</target>
        </trans-unit>
        <trans-unit id="1484fef9b4abc05c0979965e3ea49d9ea6b34ba4" translate="yes" xml:space="preserve">
          <source>Clarke&amp;rsquo;s link</source>
          <target state="translated">클라크의 링크</target>
        </trans-unit>
        <trans-unit id="dae2ba46cfe4af8b889075e7a1960f5189a765cf" translate="yes" xml:space="preserve">
          <source>Class method that returns an instance of &lt;a href=&quot;../../topics/db/managers#django.db.models.Manager&quot;&gt;&lt;code&gt;Manager&lt;/code&gt;&lt;/a&gt; with a copy of the &lt;code&gt;QuerySet&lt;/code&gt;&amp;rsquo;s methods. See &lt;a href=&quot;../../topics/db/managers#create-manager-with-queryset-methods&quot;&gt;Creating a manager with QuerySet methods&lt;/a&gt; for more details.</source>
          <target state="translated">&lt;code&gt;QuerySet&lt;/code&gt; 메소드 의 사본과 함께 &lt;a href=&quot;../../topics/db/managers#django.db.models.Manager&quot;&gt; &lt;code&gt;Manager&lt;/code&gt; &lt;/a&gt; 인스턴스를 리턴하는 클래스 메소드. 자세한 내용 &lt;a href=&quot;../../topics/db/managers#create-manager-with-queryset-methods&quot;&gt;은 QuerySet 메소드&lt;/a&gt; 를 사용 하여 관리자 작성 을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="d3586c1c64a914d530f0b0442a85112f3759cde5" translate="yes" xml:space="preserve">
          <source>Class-based generic views - flattened index</source>
          <target state="translated">클래스 기반 일반 뷰-전개 인덱스</target>
        </trans-unit>
        <trans-unit id="9913e499f783b1e205ead17714ccb61c43398bb9" translate="yes" xml:space="preserve">
          <source>Class-based generic views were created with the same objective as function-based generic views, to make view development easier. However, the way the solution is implemented, through the use of mixins, provides a toolkit that results in class-based generic views being more extensible and flexible than their function-based counterparts.</source>
          <target state="translated">클래스 기반의 제네릭 뷰는 함수 기반의 제네릭 뷰와 동일한 목적으로 만들어져 뷰 개발이 더 쉬워졌습니다. 그러나 믹스 인을 사용하여 솔루션을 구현하는 방식은 클래스 기반 일반 뷰가 기능 기반 대응보다 확장 가능하고 융통성이있는 툴킷을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="8fdc8cf046fdef508e7b5c3a88652e0095f6155f" translate="yes" xml:space="preserve">
          <source>Class-based views</source>
          <target state="translated">클래스 기반 뷰</target>
        </trans-unit>
        <trans-unit id="cb4a4e7b7f57dd45b621369dc0ca0ce23b32c09a" translate="yes" xml:space="preserve">
          <source>Class-based views API reference. For introductory material, see &lt;a href=&quot;../../topics/class-based-views/mixins&quot;&gt;Using mixins with class-based views&lt;/a&gt;.</source>
          <target state="translated">클래스 기반 뷰 API 참조 소개 자료 &lt;a href=&quot;../../topics/class-based-views/mixins&quot;&gt;는 클래스 기반보기에서 믹스 인 사용을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="935b328a33ab7f3fe7d394d5bba191897050ca57" translate="yes" xml:space="preserve">
          <source>Class-based views API reference. For introductory material, see the &lt;a href=&quot;../../topics/class-based-views/index&quot;&gt;Class-based views&lt;/a&gt; topic guide.</source>
          <target state="translated">클래스 기반 뷰 API 참조 소개 자료는 &lt;a href=&quot;../../topics/class-based-views/index&quot;&gt;클래스 기반보기&lt;/a&gt; 주제 안내서를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="c09a0fdba70b5b44149adcd6897aa653fb564a5a" translate="yes" xml:space="preserve">
          <source>Class-based views mixins</source>
          <target state="translated">클래스 기반 뷰 믹스 인</target>
        </trans-unit>
        <trans-unit id="a689200f6a54407a59f2a1448947a87c0f2af763" translate="yes" xml:space="preserve">
          <source>Class-based views provide an alternative way to implement views as Python objects instead of functions. They do not replace function-based views, but have certain differences and advantages when compared to function-based views:</source>
          <target state="translated">클래스 기반 뷰는 뷰를 함수 대신 Python 객체로 구현하는 다른 방법을 제공합니다. 함수 기반 뷰를 대체하지는 않지만 함수 기반 뷰와 비교할 때 특정 차이점과 장점이 있습니다.</target>
        </trans-unit>
        <trans-unit id="c1fbe3806fe4fa85be709cd683d3a0ce016bfe3f" translate="yes" xml:space="preserve">
          <source>Cleaning a specific field attribute</source>
          <target state="translated">특정 필드 속성 정리</target>
        </trans-unit>
        <trans-unit id="e3c15e64e7f592352145ea138a3f45fe5b83a297" translate="yes" xml:space="preserve">
          <source>Cleaning and validating fields that depend on each other</source>
          <target state="translated">서로 의존하는 필드 정리 및 검증</target>
        </trans-unit>
        <trans-unit id="9871435a7dab83176cbc6b4ea940ec5d9753dc54" translate="yes" xml:space="preserve">
          <source>Cleans and returns a value for use in the widget template. &lt;code&gt;value&lt;/code&gt; isn&amp;rsquo;t guaranteed to be valid input, therefore subclass implementations should program defensively.</source>
          <target state="translated">위젯 템플리트에서 사용할 값을 정리하고 리턴합니다. &lt;code&gt;value&lt;/code&gt; 는 유효한 입력이 보장되지 않으므로 서브 클래스 구현은 방어 적으로 프로그래밍해야합니다.</target>
        </trans-unit>
        <trans-unit id="35e2550a68d3f04ff9456e17a1d332e94ce526ea" translate="yes" xml:space="preserve">
          <source>Clear the existing files before trying to copy or link the original file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52fce0185a260e1bdf205bebb2f5ca4969dbc5c9" translate="yes" xml:space="preserve">
          <source>Clearing the session store</source>
          <target state="translated">세션 저장소 지우기</target>
        </trans-unit>
        <trans-unit id="8871f6cf793cd5b46adb118c7a6bf5094d8c3fc9" translate="yes" xml:space="preserve">
          <source>Clearly, &lt;a href=&quot;https://docs.python.org/3/library/unittest.html#module-unittest&quot;&gt;&lt;code&gt;unittest&lt;/code&gt;&lt;/a&gt; is not the only Python testing framework. While Django doesn&amp;rsquo;t provide explicit support for alternative frameworks, it does provide a way to invoke tests constructed for an alternative framework as if they were normal Django tests.</source>
          <target state="translated">분명히 &lt;a href=&quot;https://docs.python.org/3/library/unittest.html#module-unittest&quot;&gt; &lt;code&gt;unittest&lt;/code&gt; &lt;/a&gt; 는 유일한 Python 테스트 프레임 워크가 아닙니다. Django는 대체 프레임 워크를 명시 적으로 지원하지 않지만 대체 Django 테스트처럼 마치 대체 프레임 워크를 위해 구성된 테스트를 호출하는 방법을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="e16b0c294394f27e0ac5749d235078e550604ac2" translate="yes" xml:space="preserve">
          <source>Clearly, having &amp;ldquo;Django administration&amp;rdquo; at the top of each admin page is ridiculous. It&amp;rsquo;s just placeholder text.</source>
          <target state="translated">분명히 각 관리자 페이지 상단에 &quot;Django 관리&quot;가 있다는 것은 우스운 일입니다. 자리 표시 자 텍스트 일뿐입니다.</target>
        </trans-unit>
        <trans-unit id="7718e31552b0112a1a2ec941c597349546a14c1b" translate="yes" xml:space="preserve">
          <source>Clearly, the power of relational databases lies in relating tables to each other. Django offers ways to define the three most common types of database relationships: many-to-one, many-to-many and one-to-one.</source>
          <target state="translated">분명히 관계형 데이터베이스의 힘은 테이블을 서로 관련시키는 데 있습니다. Django는 다 대일, 다 대다 및 일대일의 세 가지 가장 일반적인 데이터베이스 관계 유형을 정의하는 방법을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="2e6838b7a69e395c2bf15ebc5a8c592bf3526981" translate="yes" xml:space="preserve">
          <source>Clearly, user-submitted data shouldn&amp;rsquo;t be trusted blindly and inserted directly into your Web pages, because a malicious user could use this kind of hole to do potentially bad things. This type of security exploit is called a &lt;a href=&quot;https://en.wikipedia.org/wiki/Cross-site_scripting&quot;&gt;Cross Site Scripting&lt;/a&gt; (XSS) attack.</source>
          <target state="translated">악의적 인 사용자가 이런 종류의 취약점을 악용하여 잠재적으로 나쁜 일을 할 수 있기 때문에 사용자가 제출 한 데이터를 맹목적으로 신뢰하고 웹 페이지에 직접 삽입해서는 안됩니다. 이러한 유형의 보안 악용을 XSS ( &lt;a href=&quot;https://en.wikipedia.org/wiki/Cross-site_scripting&quot;&gt;Cross Site Scripting&lt;/a&gt; ) 공격이라고합니다.</target>
        </trans-unit>
        <trans-unit id="cb813cacbd2922039a79ce85d2ae6074cdfcf7c4" translate="yes" xml:space="preserve">
          <source>Clears an internal cache used by &lt;a href=&quot;#django.contrib.contenttypes.models.ContentType&quot;&gt;&lt;code&gt;ContentType&lt;/code&gt;&lt;/a&gt; to keep track of models for which it has created &lt;a href=&quot;#django.contrib.contenttypes.models.ContentType&quot;&gt;&lt;code&gt;ContentType&lt;/code&gt;&lt;/a&gt; instances. You probably won&amp;rsquo;t ever need to call this method yourself; Django will call it automatically when it&amp;rsquo;s needed.</source>
          <target state="translated">&lt;a href=&quot;#django.contrib.contenttypes.models.ContentType&quot;&gt; &lt;code&gt;ContentType&lt;/code&gt; &lt;/a&gt; 에서 사용 된 내부 캐시를 지워 &lt;a href=&quot;#django.contrib.contenttypes.models.ContentType&quot;&gt; &lt;code&gt;ContentType&lt;/code&gt; &lt;/a&gt; 인스턴스 를 작성한 모델을 추적 합니다. 아마도이 메소드를 직접 호출 할 필요는 없습니다. 장고는 필요할 때 자동으로 호출합니다.</target>
        </trans-unit>
        <trans-unit id="ae2c7de5484059aff894ad9b7e2f035faa95adb5" translate="yes" xml:space="preserve">
          <source>Click &amp;ldquo;Questions&amp;rdquo;. Now you&amp;rsquo;re at the &amp;ldquo;change list&amp;rdquo; page for questions. This page displays all the questions in the database and lets you choose one to change it. There&amp;rsquo;s the &amp;ldquo;What&amp;rsquo;s up?&amp;rdquo; question we created earlier:</source>
          <target state="translated">&amp;ldquo;질문&amp;rdquo;을 클릭하십시오. 이제 질문에 대한 &quot;변경 목록&quot;페이지에 있습니다. 이 페이지에는 데이터베이스의 모든 질문이 표시되며 하나를 선택하여 변경할 수 있습니다. &quot;무슨 일이야?&quot; 우리가 이전에 만든 질문 :</target>
        </trans-unit>
        <trans-unit id="71e12a102575e2c837ef35120ea9f6301b62a3aa" translate="yes" xml:space="preserve">
          <source>Click the &amp;ldquo;What&amp;rsquo;s up?&amp;rdquo; question to edit it:</source>
          <target state="translated">&amp;ldquo;무슨 일이야?&amp;rdquo;를 클릭하십시오 편집 질문 :</target>
        </trans-unit>
        <trans-unit id="b164ea79f51a3226a2f1ba2d64c19601a36e89fb" translate="yes" xml:space="preserve">
          <source>Clickjacking Protection</source>
          <target state="translated">클릭 재킹 방지</target>
        </trans-unit>
        <trans-unit id="49e6f9818aff9cfa621bb73a0138b945c072ae28" translate="yes" xml:space="preserve">
          <source>Clickjacking is a type of attack where a malicious site wraps another site in a frame. This attack can result in an unsuspecting user being tricked into performing unintended actions on the target site.</source>
          <target state="translated">클릭 재킹은 악의적 인 사이트가 다른 사이트를 프레임으로 감싸는 일종의 공격입니다. 이 공격으로 인해 의심의 여지가없는 사용자가 대상 사이트에서 의도하지 않은 작업을 수행하도록 속일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="32111326fd6c48d78974ec40a35a7768a07184d3" translate="yes" xml:space="preserve">
          <source>Clickjacking protection</source>
          <target state="translated">클릭 재킹 방지</target>
        </trans-unit>
        <trans-unit id="3d764d75fcf6e80a9de83e6bffcae22e86d8a4af" translate="yes" xml:space="preserve">
          <source>Client requests &lt;code&gt;/foo/&lt;/code&gt;.</source>
          <target state="translated">클라이언트는 &lt;code&gt;/foo/&lt;/code&gt; 요청합니다 .</target>
        </trans-unit>
        <trans-unit id="fcc71b46bf4ac05f5a39c0205973031dc31d9ab1" translate="yes" xml:space="preserve">
          <source>Client sends a &lt;code&gt;GET&lt;/code&gt; request to &lt;code&gt;/foo/&lt;/code&gt;, after receiving a 412 response, to retrieve an updated version of the content before updating it.</source>
          <target state="translated">클라이언트는 412 응답을받은 후 업데이트하기 전에 컨텐츠의 업데이트 된 버전을 검색하기 위해 &lt;code&gt;GET&lt;/code&gt; 요청을 &lt;code&gt;/foo/&lt;/code&gt; 보냅니다 .</target>
        </trans-unit>
        <trans-unit id="f9390959736f66ef4250430fc366308771f97cf5" translate="yes" xml:space="preserve">
          <source>Client sends an HTTP &lt;code&gt;PUT&lt;/code&gt; request to &lt;code&gt;/foo/&lt;/code&gt; to update the resource. It also sends an &lt;code&gt;If-Match: &quot;abcd1234&quot;&lt;/code&gt; header to specify the version it is trying to update.</source>
          <target state="translated">클라이언트는 &lt;code&gt;/foo/&lt;/code&gt; 에 HTTP &lt;code&gt;PUT&lt;/code&gt; 요청을 보내 리소스를 업데이트합니다. 또한 업데이트하려는 버전을 지정하기 위해 &lt;code&gt;If-Match: &quot;abcd1234&quot;&lt;/code&gt; 헤더를 보냅니다 .</target>
        </trans-unit>
        <trans-unit id="ff4e5bc602307ed4ab1eddecc70e4b7c73dbafb1" translate="yes" xml:space="preserve">
          <source>Client-side caching will save bandwidth and make your site load faster. If you&amp;rsquo;re using ETags (&lt;a href=&quot;../../ref/middleware#django.middleware.http.ConditionalGetMiddleware&quot;&gt;&lt;code&gt;ConditionalGetMiddleware&lt;/code&gt;&lt;/a&gt;), you&amp;rsquo;re already covered. Otherwise, you can apply &lt;a href=&quot;../conditional-view-processing#conditional-decorators&quot;&gt;conditional decorators&lt;/a&gt;. In the following example, the cache is invalidated whenever you restart your application server:</source>
          <target state="translated">클라이언트 측 캐싱은 대역폭을 절약하고 사이트로드 속도를 높입니다. ETags ( &lt;a href=&quot;../../ref/middleware#django.middleware.http.ConditionalGetMiddleware&quot;&gt; &lt;code&gt;ConditionalGetMiddleware&lt;/code&gt; &lt;/a&gt; )를 사용하는 경우 이미 다룹니다. 그렇지 않으면 &lt;a href=&quot;../conditional-view-processing#conditional-decorators&quot;&gt;조건부 데코레이터를&lt;/a&gt; 적용 할 수 있습니다 . 다음 예제에서 애플리케이션 서버를 다시 시작할 때마다 캐시가 무효화됩니다.</target>
        </trans-unit>
        <trans-unit id="e2c115451ace317c65803db8091eb1e55ebeda50" translate="yes" xml:space="preserve">
          <source>Close the file.</source>
          <target state="translated">파일을 닫습니다.</target>
        </trans-unit>
        <trans-unit id="303cb26080c8d48af2e98b700a7a4b017d40ec37" translate="yes" xml:space="preserve">
          <source>Close to the top: it redirects when &lt;a href=&quot;settings#std:setting-APPEND_SLASH&quot;&gt;&lt;code&gt;APPEND_SLASH&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;settings#std:setting-PREPEND_WWW&quot;&gt;&lt;code&gt;PREPEND_WWW&lt;/code&gt;&lt;/a&gt; are set to &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="translated">상단 가까이 : &lt;a href=&quot;settings#std:setting-APPEND_SLASH&quot;&gt; &lt;code&gt;APPEND_SLASH&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;settings#std:setting-PREPEND_WWW&quot;&gt; &lt;code&gt;PREPEND_WWW&lt;/code&gt; &lt;/a&gt; 가 &lt;code&gt;True&lt;/code&gt; 로 설정 되면 리디렉션됩니다 .</target>
        </trans-unit>
        <trans-unit id="4d39b59d4d25e5ad71bcf2d3fb9014da0acb6d75" translate="yes" xml:space="preserve">
          <source>Closing files is especially important when accessing file fields in a loop over a large number of objects. If files are not manually closed after accessing them, the risk of running out of file descriptors may arise. This may lead to the following error:</source>
          <target state="translated">파일 닫기는 많은 수의 객체에서 루프로 파일 필드에 액세스 할 때 특히 중요합니다. 파일에 액세스 한 후 파일을 수동으로 닫지 않으면 파일 설명자가 부족할 위험이 있습니다. 다음과 같은 오류가 발생할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="adac69379a626c2436948a4ef1792c7d719ef929" translate="yes" xml:space="preserve">
          <source>Code</source>
          <target state="translated">Code</target>
        </trans-unit>
        <trans-unit id="0fccd67a1d6d2011197e3b86591b54f93278c8e4" translate="yes" xml:space="preserve">
          <source>Code and templates calling &lt;code&gt;get_absolute_url()&lt;/code&gt; should be able to use the result directly without any further processing. You may wish to use the &lt;code&gt;django.utils.encoding.iri_to_uri()&lt;/code&gt; function to help with this if you are using strings containing characters outside the ASCII range.</source>
          <target state="translated">&lt;code&gt;get_absolute_url()&lt;/code&gt; 호출하는 코드 및 템플릿 은 추가 처리없이 결과를 직접 사용할 수 있어야합니다. ASCII 범위를 벗어난 문자가 포함 된 문자열 을 사용하는 경우 &lt;code&gt;django.utils.encoding.iri_to_uri()&lt;/code&gt; 함수 를 사용하여 이를 지원할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="8c556450c442de5568b2ca61b59c3676e128741e" translate="yes" xml:space="preserve">
          <source>Code coverage describes how much source code has been tested. It shows which parts of your code are being exercised by tests and which are not. It&amp;rsquo;s an important part of testing applications, so it&amp;rsquo;s strongly recommended to check the coverage of your tests.</source>
          <target state="translated">코드 범위는 테스트 된 소스 코드의 양을 나타냅니다. 테스트를 통해 코드의 어느 부분이 실행되고 있는지와 그렇지 않은 부분이 표시됩니다. 테스트 응용 프로그램의 중요한 부분이므로 테스트 범위를 확인하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="5750b940d6720029e34eee8586abacc31ac208d7" translate="yes" xml:space="preserve">
          <source>Code layout</source>
          <target state="translated">코드 레이아웃</target>
        </trans-unit>
        <trans-unit id="264398069882e7753347718021d0c9c51b7ce8fc" translate="yes" xml:space="preserve">
          <source>Code of Conduct</source>
          <target state="translated">행동 강령</target>
        </trans-unit>
        <trans-unit id="8c7a63bb17eb1d76f8c9b5adc889523e705db12b" translate="yes" xml:space="preserve">
          <source>Collation settings</source>
          <target state="translated">콜 레이션 설정</target>
        </trans-unit>
        <trans-unit id="6ae48f5d8e796a9281d732e0b6c3ab8ef31d8a1d" translate="yes" xml:space="preserve">
          <source>Collects the static files into &lt;a href=&quot;../settings#std:setting-STATIC_ROOT&quot;&gt;&lt;code&gt;STATIC_ROOT&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">정적 파일을 &lt;a href=&quot;../settings#std:setting-STATIC_ROOT&quot;&gt; &lt;code&gt;STATIC_ROOT&lt;/code&gt; &lt;/a&gt; 로 수집합니다 .</target>
        </trans-unit>
        <trans-unit id="df066a374fafe32bc0ce1847a456e1e438ce57f1" translate="yes" xml:space="preserve">
          <source>Colors can also be specified by extending a base palette. If you put a palette name in a color specification, all the colors implied by that palette will be loaded. So:</source>
          <target state="translated">기본 팔레트를 확장하여 색상을 지정할 수도 있습니다. 색상명에 팔레트 이름을 넣으면 해당 팔레트에 내포 된 모든 색상이로드됩니다. 그래서:</target>
        </trans-unit>
        <trans-unit id="739dddeb1d3e0548df06fdaf615608f23f48ac27" translate="yes" xml:space="preserve">
          <source>Combined querysets must use the same model.</source>
          <target state="translated">결합 된 쿼리 세트는 동일한 모델을 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="9b28b1879e8268f5a29264171deb92278bb15ce9" translate="yes" xml:space="preserve">
          <source>Combines a given template with a given context dictionary and returns an &lt;a href=&quot;../../ref/request-response#django.http.HttpResponse&quot;&gt;&lt;code&gt;HttpResponse&lt;/code&gt;&lt;/a&gt; object with that rendered text.</source>
          <target state="translated">주어진 템플릿을 주어진 컨텍스트 사전과 결합하고 렌더링 된 텍스트 가있는 &lt;a href=&quot;../../ref/request-response#django.http.HttpResponse&quot;&gt; &lt;code&gt;HttpResponse&lt;/code&gt; &lt;/a&gt; 객체를 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="0bf88bd402a2a3c10adade912df67db04d6a14f8" translate="yes" xml:space="preserve">
          <source>Combines two &lt;code&gt;QuerySet&lt;/code&gt;s using the SQL &lt;code&gt;AND&lt;/code&gt; operator.</source>
          <target state="translated">SQL &lt;code&gt;AND&lt;/code&gt; 연산자를 사용하여 두 개의 &lt;code&gt;QuerySet&lt;/code&gt; 을 결합합니다 .</target>
        </trans-unit>
        <trans-unit id="86c57c30c1d0f3c3cdabf58605f794fdbe31d85d" translate="yes" xml:space="preserve">
          <source>Combines two &lt;code&gt;QuerySet&lt;/code&gt;s using the SQL &lt;code&gt;OR&lt;/code&gt; operator.</source>
          <target state="translated">SQL &lt;code&gt;OR&lt;/code&gt; 연산자를 사용하여 두 개의 &lt;code&gt;QuerySet&lt;/code&gt; 을 결합합니다 .</target>
        </trans-unit>
        <trans-unit id="298b25acc069de0daa59c3ef8592b259f9e8263e" translate="yes" xml:space="preserve">
          <source>Combining &lt;code&gt;Media&lt;/code&gt; objects</source>
          <target state="translated">&lt;code&gt;Media&lt;/code&gt; 객체 결합</target>
        </trans-unit>
        <trans-unit id="4c4cc55611b5c720e74fca17f0c34bce34c1b111" translate="yes" xml:space="preserve">
          <source>Combining &lt;code&gt;Media&lt;/code&gt; objects with assets in a conflicting order results in a &lt;code&gt;MediaOrderConflictWarning&lt;/code&gt;.</source>
          <target state="translated">충돌하는 순서로 &lt;code&gt;Media&lt;/code&gt; 개체를 자산과 결합 하면 &lt;code&gt;MediaOrderConflictWarning&lt;/code&gt; 이 발생 합니다.</target>
        </trans-unit>
        <trans-unit id="bb23073a36f1b9643eacab1ec8054110b00017fc" translate="yes" xml:space="preserve">
          <source>Combining multiple aggregations</source>
          <target state="translated">여러 집계 결합</target>
        </trans-unit>
        <trans-unit id="b2868a85184050150c21dc4574f3c38bb0d731e6" translate="yes" xml:space="preserve">
          <source>Combining multiple aggregations with &lt;code&gt;annotate()&lt;/code&gt; will &lt;a href=&quot;https://code.djangoproject.com/ticket/10060&quot;&gt;yield the wrong results&lt;/a&gt; because joins are used instead of subqueries:</source>
          <target state="translated">여러 집계를 &lt;code&gt;annotate()&lt;/code&gt; 와 결합하면 하위 쿼리 대신 조인이 사용되므로 &lt;a href=&quot;https://code.djangoproject.com/ticket/10060&quot;&gt;잘못된 결과&lt;/a&gt; 가 생성 됩니다.</target>
        </trans-unit>
        <trans-unit id="5f7c0f377739588d036f10407e3dbd3ae092857a" translate="yes" xml:space="preserve">
          <source>Combining transforms and aggregates requires the use of two &lt;a href=&quot;#django.db.models.query.QuerySet.annotate&quot;&gt;&lt;code&gt;annotate()&lt;/code&gt;&lt;/a&gt; calls, either explicitly or as keyword arguments to &lt;a href=&quot;#django.db.models.query.QuerySet.values&quot;&gt;&lt;code&gt;values()&lt;/code&gt;&lt;/a&gt;. As above, if the transform has been registered on the relevant field type the first &lt;a href=&quot;#django.db.models.query.QuerySet.annotate&quot;&gt;&lt;code&gt;annotate()&lt;/code&gt;&lt;/a&gt; can be omitted, thus the following examples are equivalent:</source>
          <target state="translated">변환과 집계를 결합하려면 두 개의 &lt;a href=&quot;#django.db.models.query.QuerySet.annotate&quot;&gt; &lt;code&gt;annotate()&lt;/code&gt; &lt;/a&gt; 호출을 명시 적으로 또는 &lt;a href=&quot;#django.db.models.query.QuerySet.values&quot;&gt; &lt;code&gt;values()&lt;/code&gt; &lt;/a&gt; 키워드 인수로 사용해야합니다 . 위와 같이 변환이 관련 필드 유형에 등록 된 경우 첫 번째 &lt;a href=&quot;#django.db.models.query.QuerySet.annotate&quot;&gt; &lt;code&gt;annotate()&lt;/code&gt; &lt;/a&gt; 를 생략 할 수 있으므로 다음 예제는 동일합니다.</target>
        </trans-unit>
        <trans-unit id="062f06af390fd741afa99a084678b15ff848b32b" translate="yes" xml:space="preserve">
          <source>Command exceptions</source>
          <target state="translated">명령 예외</target>
        </trans-unit>
        <trans-unit id="72d57144ac6945b09d5de4731f8c00fe9c8dab71" translate="yes" xml:space="preserve">
          <source>Command objects</source>
          <target state="translated">명령 객체</target>
        </trans-unit>
        <trans-unit id="5b1162b250f65b6790cb6c722277534bece1295b" translate="yes" xml:space="preserve">
          <source>Command options which take multiple options are passed a list:</source>
          <target state="translated">여러 옵션을 취하는 명령 옵션은 목록으로 전달됩니다.</target>
        </trans-unit>
        <trans-unit id="3abf877682cac812884ab957e7211e54caef5ae8" translate="yes" xml:space="preserve">
          <source>Commands provided by applications</source>
          <target state="translated">응용 프로그램에서 제공하는 명령</target>
        </trans-unit>
        <trans-unit id="783c87224075a79bd8b537cf05a2b53f1d940875" translate="yes" xml:space="preserve">
          <source>Comment action &amp;ndash; handles posting comments to a given entry.</source>
          <target state="translated">댓글 작업 &amp;ndash; 특정 항목에 대한 댓글 게시를 처리합니다.</target>
        </trans-unit>
        <trans-unit id="fce06e20e5f7f74aacccab40b59b75a56c8f7305" translate="yes" xml:space="preserve">
          <source>Comments</source>
          <target state="translated">Comments</target>
        </trans-unit>
        <trans-unit id="6641306a3633f32bdedfa4054c5b08150fba84fc" translate="yes" xml:space="preserve">
          <source>Comments for translators</source>
          <target state="translated">번역가를위한 의견</target>
        </trans-unit>
        <trans-unit id="d5a2381c3fdb3c0c5a2f43150e4e650259c6c328" translate="yes" xml:space="preserve">
          <source>Comments for translators in templates</source>
          <target state="translated">템플릿의 번역사에 대한 의견</target>
        </trans-unit>
        <trans-unit id="237397d108c7882411e5f1ddd54d93a731a473f7" translate="yes" xml:space="preserve">
          <source>Comments look like this:</source>
          <target state="translated">의견은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="1076a4b29562467018597272c6d896f5bc5227a5" translate="yes" xml:space="preserve">
          <source>Committing the changes in the patch</source>
          <target state="translated">패치의 변경 사항 커밋</target>
        </trans-unit>
        <trans-unit id="d1f4ee0012b5a9243c01295a17fad4ea4fe13d46" translate="yes" xml:space="preserve">
          <source>Common Web application tools</source>
          <target state="translated">일반적인 웹 응용 프로그램 도구</target>
        </trans-unit>
        <trans-unit id="af04fb2fa2de3c20f43f5e3967f22434e12a290c" translate="yes" xml:space="preserve">
          <source>Common aggregate options</source>
          <target state="translated">일반적인 집계 옵션</target>
        </trans-unit>
        <trans-unit id="f00ac15e60bc2dbbc5a5e9b995a6071cb6c5d758" translate="yes" xml:space="preserve">
          <source>Common cases such as validating against an email or a regular expression can be handled using existing validator classes available in Django. For example, &lt;code&gt;validators.validate_slug&lt;/code&gt; is an instance of a &lt;a href=&quot;../validators#django.core.validators.RegexValidator&quot;&gt;&lt;code&gt;RegexValidator&lt;/code&gt;&lt;/a&gt; constructed with the first argument being the pattern: &lt;code&gt;^[-a-zA-Z0-9_]+$&lt;/code&gt;. See the section on &lt;a href=&quot;../validators&quot;&gt;writing validators&lt;/a&gt; to see a list of what is already available and for an example of how to write a validator.</source>
          <target state="translated">이메일 또는 정규식에 대한 유효성 검사와 같은 일반적인 경우는 Django에서 사용 가능한 기존 유효성 검사기 클래스를 사용하여 처리 할 수 ​​있습니다. 예를 들어 &lt;code&gt;validators.validate_slug&lt;/code&gt; 는 패턴이 첫 번째 인수 인 &lt;code&gt;^[-a-zA-Z0-9_]+$&lt;/code&gt; &lt;a href=&quot;../validators#django.core.validators.RegexValidator&quot;&gt; &lt;code&gt;RegexValidator&lt;/code&gt; &lt;/a&gt; -zA-Z0-9 _] + $ 로 구성된 RegexValidator 의 인스턴스입니다 . 이미 사용 가능한 항목의 목록과 유효성 검사기를 작성하는 방법에 대한 예제를 보려면 &lt;a href=&quot;../validators&quot;&gt;유효성 검사기 작성&lt;/a&gt; 섹션 을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="3598d7d42bce6e5debb8491d044313a6d4391ec5" translate="yes" xml:space="preserve">
          <source>Common pitfalls</source>
          <target state="translated">일반적인 함정</target>
        </trans-unit>
        <trans-unit id="24ec277c0ef20da052bfc2eb2c8a1f67cd237755" translate="yes" xml:space="preserve">
          <source>Common use is to display a thousand separator. If this setting is &lt;code&gt;0&lt;/code&gt;, then no grouping will be applied to the number. If this setting is greater than &lt;code&gt;0&lt;/code&gt;, then &lt;a href=&quot;#std:setting-THOUSAND_SEPARATOR&quot;&gt;&lt;code&gt;THOUSAND_SEPARATOR&lt;/code&gt;&lt;/a&gt; will be used as the separator between those groups.</source>
          <target state="translated">일반적으로 천 단위 구분 기호를 표시합니다. 이 설정이 &lt;code&gt;0&lt;/code&gt; 이면 그룹화가 번호에 적용되지 않습니다. 이 설정은보다 크면 &lt;code&gt;0&lt;/code&gt; 다음 &lt;a href=&quot;#std:setting-THOUSAND_SEPARATOR&quot;&gt; &lt;code&gt;THOUSAND_SEPARATOR&lt;/code&gt; 는&lt;/a&gt; 해당 그룹의 세퍼레이터로서 이용된다.</target>
        </trans-unit>
        <trans-unit id="90e2fa048671ba1782ceac817166728db935c047" translate="yes" xml:space="preserve">
          <source>Comparable to &lt;a href=&quot;#django.db.models.functions.FirstValue&quot;&gt;&lt;code&gt;FirstValue&lt;/code&gt;&lt;/a&gt;, it calculates the last value in a given frame clause.</source>
          <target state="translated">&lt;a href=&quot;#django.db.models.functions.FirstValue&quot;&gt; &lt;code&gt;FirstValue&lt;/code&gt; &lt;/a&gt; 와 비교하여 지정된 프레임 절의 마지막 값을 계산합니다.</target>
        </trans-unit>
        <trans-unit id="013a952e852568e07ecb48992072b7b1e509b117" translate="yes" xml:space="preserve">
          <source>Comparable to &lt;code&gt;RowNumber&lt;/code&gt;, this function ranks rows in the window. The computed rank contains gaps. Use &lt;a href=&quot;#django.db.models.functions.DenseRank&quot;&gt;&lt;code&gt;DenseRank&lt;/code&gt;&lt;/a&gt; to compute rank without gaps.</source>
          <target state="translated">&lt;code&gt;RowNumber&lt;/code&gt; 와 비교할 때이 함수는 창의 행 순위를 지정합니다. 계산 된 순위에 공백이 있습니다. 격차없이 순위를 계산 하려면 &lt;a href=&quot;#django.db.models.functions.DenseRank&quot;&gt; &lt;code&gt;DenseRank&lt;/code&gt; &lt;/a&gt; 를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="85e3bae39864c8eaadbaa52201cd3400ed3c7268" translate="yes" xml:space="preserve">
          <source>Comparing Polygons</source>
          <target state="translated">다각형 비교</target>
        </trans-unit>
        <trans-unit id="3e9a07241ecb7fd5c1f83975cd62cd490f5c7b13" translate="yes" xml:space="preserve">
          <source>Comparing objects</source>
          <target state="translated">객체 비교</target>
        </trans-unit>
        <trans-unit id="15eebb89cf64b1215fecc2b913d44d9bd81a2ffd" translate="yes" xml:space="preserve">
          <source>Comparing offset-naive and offset-aware datetimes will return an empty string.</source>
          <target state="translated">오프셋 순진 및 오프셋 인식 날짜 시간을 비교하면 빈 문자열이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="8f8a9f334334957255e73f6d04d7cdf5cb4e1d87" translate="yes" xml:space="preserve">
          <source>Comparison and conversion functions</source>
          <target state="translated">비교 및 변환 기능</target>
        </trans-unit>
        <trans-unit id="b25204cbd4bfc02484e2851632d991b06eb495ce" translate="yes" xml:space="preserve">
          <source>Comparison functions</source>
          <target state="translated">비교 기능</target>
        </trans-unit>
        <trans-unit id="69c2a4d72da244fd42ae3a97b091ca45e31993a0" translate="yes" xml:space="preserve">
          <source>Comparison with middleware conditional processing</source>
          <target state="translated">미들웨어 조건부 처리와 비교</target>
        </trans-unit>
        <trans-unit id="c1ee9d9d9a9e3ffcaef93431da80743ebd1d119c" translate="yes" xml:space="preserve">
          <source>Compatibility Tables</source>
          <target state="translated">호환성 테이블</target>
        </trans-unit>
        <trans-unit id="d75384cdd59f5a26056087afb915a33aa701204f" translate="yes" xml:space="preserve">
          <source>Compatibility checks warn of potential problems that might occur after upgrading Django.</source>
          <target state="translated">호환성 검사는 Django 업그레이드 후 발생할 수있는 잠재적 인 문제를 경고합니다.</target>
        </trans-unit>
        <trans-unit id="966b80fafe70e64691aed39ff4ed52c57620abe6" translate="yes" xml:space="preserve">
          <source>Compiles &lt;code&gt;.po&lt;/code&gt; files created by &lt;a href=&quot;#django-admin-makemessages&quot;&gt;&lt;code&gt;makemessages&lt;/code&gt;&lt;/a&gt; to &lt;code&gt;.mo&lt;/code&gt; files for use with the built-in gettext support. See &lt;a href=&quot;../topics/i18n/index&quot;&gt;Internationalization and localization&lt;/a&gt;.</source>
          <target state="translated">내장 된 gettext 지원에 사용하기 위해 &lt;a href=&quot;#django-admin-makemessages&quot;&gt; &lt;code&gt;makemessages&lt;/code&gt; &lt;/a&gt; 로 작성된 &lt;code&gt;.po&lt;/code&gt; 파일 을 &lt;code&gt;.mo&lt;/code&gt; 파일로 컴파일 합니다 . &lt;a href=&quot;../topics/i18n/index&quot;&gt;국제화 및 현지화를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="93e905651a34f4047baa4fb287c63cd2f1a5e771" translate="yes" xml:space="preserve">
          <source>Compiles the given template code and returns a &lt;a href=&quot;#django.template.Template&quot;&gt;&lt;code&gt;Template&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">주어진 템플릿 코드를 컴파일하고 &lt;a href=&quot;#django.template.Template&quot;&gt; &lt;code&gt;Template&lt;/code&gt; &lt;/a&gt; 객체를 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="30ce2330406ed290a82010d978c0c56ca93b445a" translate="yes" xml:space="preserve">
          <source>Compiling message files</source>
          <target state="translated">메시지 파일 컴파일</target>
        </trans-unit>
        <trans-unit id="0059eb732e810f5e37b107fcba91c62825c59cc1" translate="yes" xml:space="preserve">
          <source>Complete &lt;code&gt;&amp;lt;label&amp;gt;&lt;/code&gt; elements can also be generated using the &lt;a href=&quot;../../ref/forms/api#django.forms.BoundField.label_tag&quot;&gt;&lt;code&gt;label_tag()&lt;/code&gt;&lt;/a&gt;. For example:</source>
          <target state="translated">&lt;a href=&quot;../../ref/forms/api#django.forms.BoundField.label_tag&quot;&gt; &lt;code&gt;label_tag()&lt;/code&gt; &lt;/a&gt; 사용하여 완전한 &lt;code&gt;&amp;lt;label&amp;gt;&lt;/code&gt; 요소를 생성 할 수도 있습니다 . 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="f1913a1fa57f5232142d7bd96f33c2c65642a19a" translate="yes" xml:space="preserve">
          <source>Complex expressions</source>
          <target state="translated">복잡한 표현</target>
        </trans-unit>
        <trans-unit id="c4efdb00b051a421feb4019cc39c46fbafabeea1" translate="yes" xml:space="preserve">
          <source>Complex lookups with &lt;code&gt;Q&lt;/code&gt; objects</source>
          <target state="translated">&lt;code&gt;Q&lt;/code&gt; 객체를 이용한 복잡한 조회</target>
        </trans-unit>
        <trans-unit id="9289473eeedaee09d76c8cf1b6994d8550debf46" translate="yes" xml:space="preserve">
          <source>Components</source>
          <target state="translated">Components</target>
        </trans-unit>
        <trans-unit id="fab38ef91b6ace3bd587ad488096f8252e1e3b83" translate="yes" xml:space="preserve">
          <source>Composite widgets</source>
          <target state="translated">복합 위젯</target>
        </trans-unit>
        <trans-unit id="20c9c53630c638b1f7e13d41f5e544d61320f791" translate="yes" xml:space="preserve">
          <source>Compressed fixtures</source>
          <target state="translated">압축 설비</target>
        </trans-unit>
        <trans-unit id="8b919ab47536ad948ad059b28f52abc7202eb7da" translate="yes" xml:space="preserve">
          <source>Compresses responses for all modern browsers, saving bandwidth and transfer time. Note that GZipMiddleware is currently considered a security risk, and is vulnerable to attacks that nullify the protection provided by TLS/SSL. See the warning in &lt;a href=&quot;../ref/middleware#django.middleware.gzip.GZipMiddleware&quot;&gt;&lt;code&gt;GZipMiddleware&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="translated">모든 최신 브라우저에 대한 응답을 압축하여 대역폭과 전송 시간을 절약합니다. GZipMiddleware는 현재 보안 위험으로 간주되며 TLS / SSL이 제공하는 보호 기능을 무효화하는 공격에 취약합니다. 자세한 내용은 &lt;a href=&quot;../ref/middleware#django.middleware.gzip.GZipMiddleware&quot;&gt; &lt;code&gt;GZipMiddleware&lt;/code&gt; &lt;/a&gt; 의 경고 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="68df5f1aa66f7f803e95695e64e17380eccdcd96" translate="yes" xml:space="preserve">
          <source>Compute statistics on the pixel values of this band. The return value is a tuple with the following structure: &lt;code&gt;(minimum, maximum, mean, standard deviation)&lt;/code&gt;.</source>
          <target state="translated">이 밴드의 픽셀 값에 대한 통계를 계산합니다. 반환 값은 &lt;code&gt;(minimum, maximum, mean, standard deviation)&lt;/code&gt; 구조의 튜플입니다 .</target>
        </trans-unit>
        <trans-unit id="2a71649f7a2bce3581b4512f70d6c0d66ec8189b" translate="yes" xml:space="preserve">
          <source>Computes and returns a &lt;a href=&quot;#django.contrib.gis.geos.Point&quot;&gt;&lt;code&gt;Point&lt;/code&gt;&lt;/a&gt; guaranteed to be on the interior of this geometry.</source>
          <target state="translated">이 지오메트리의 내부에 보장 된 &lt;a href=&quot;#django.contrib.gis.geos.Point&quot;&gt; &lt;code&gt;Point&lt;/code&gt; &lt;/a&gt; 계산하고 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="49b98ecc517c58a811d5c20ab7bb36e95df0c85c" translate="yes" xml:space="preserve">
          <source>Computes and returns a return code based on a test suite, and the result from that test suite.</source>
          <target state="translated">테스트 스위트 및 해당 테스트 스위트의 결과를 기반으로 리턴 코드를 계산하고 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="d9364f46c2cda5209aaab7715e4f92f41b2f35e0" translate="yes" xml:space="preserve">
          <source>Computes the percentile rank of the rows in the frame clause. This computation is equivalent to evaluating:</source>
          <target state="translated">frame 절에서 행의 백분위 수 순위를 계산합니다. 이 계산은 다음을 평가하는 것과 같습니다.</target>
        </trans-unit>
        <trans-unit id="ba348e281d3a1b3d56d22212bc1c06e8d44cd1a2" translate="yes" xml:space="preserve">
          <source>Computes the row number according to the ordering of either the frame clause or the ordering of the whole query if there is no partitioning of the &lt;a href=&quot;expressions#window-frames&quot;&gt;window frame&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;expressions#window-frames&quot;&gt;윈도우 프레임의&lt;/a&gt; 파티셔닝이없는 경우 frame 절의 순서 또는 전체 쿼리의 순서에 따라 행 번호를 계산합니다 .</target>
        </trans-unit>
        <trans-unit id="976abda7d25dd0dfc1c9d9662da5f4c425bdf9f0" translate="yes" xml:space="preserve">
          <source>Computes the row relative to the offset &lt;code&gt;nth&lt;/code&gt; (must be a positive value) within the window. Returns &lt;code&gt;None&lt;/code&gt; if no row exists.</source>
          <target state="translated">창 에서 오프셋 &lt;code&gt;nth&lt;/code&gt; (양수 값이어야 함)를 기준으로 행을 계산합니다 . 행이 없으면 &lt;code&gt;None&lt;/code&gt; 을 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="27c3b5b1e7cd50f8eaaee1c91c319908604703bd" translate="yes" xml:space="preserve">
          <source>Computes the sum of all values of the given expression.</source>
          <target state="translated">주어진 표현식의 모든 값의 합을 계산합니다.</target>
        </trans-unit>
        <trans-unit id="2b13c0c14f5454f62d6b6a1576e053d30f8d170b" translate="yes" xml:space="preserve">
          <source>Computes the union of all the elements of this geometry.</source>
          <target state="translated">이 지오메트리의 모든 요소의 합집합을 계산합니다.</target>
        </trans-unit>
        <trans-unit id="6f58d263f33944384921df8405fd4a36e06175e2" translate="yes" xml:space="preserve">
          <source>Concepts</source>
          <target state="translated">Concepts</target>
        </trans-unit>
        <trans-unit id="8a0d63179619b501ad5800876cf0df368b27a390" translate="yes" xml:space="preserve">
          <source>Conditional Expressions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51201a4ffb69f5fef436bea1d53b660564da92b2" translate="yes" xml:space="preserve">
          <source>Conditional GET middleware</source>
          <target state="translated">조건부 GET 미들웨어</target>
        </trans-unit>
        <trans-unit id="84610f50040959e21038dc91d808569b8b6c878d" translate="yes" xml:space="preserve">
          <source>Conditional View Processing</source>
          <target state="translated">조건부 뷰 처리</target>
        </trans-unit>
        <trans-unit id="a9a65ce1ccd4b4ea18beb9a287cffd3226a29b18" translate="yes" xml:space="preserve">
          <source>Conditional aggregation</source>
          <target state="translated">조건부 집계</target>
        </trans-unit>
        <trans-unit id="ec3a5684fef13806f283dbcf73d3e65b3768503e" translate="yes" xml:space="preserve">
          <source>Conditional content processing</source>
          <target state="translated">조건부 컨텐츠 처리</target>
        </trans-unit>
        <trans-unit id="e428c12fd355944b5e6b7023bd80dd3c17b5aee5" translate="yes" xml:space="preserve">
          <source>Conditional expressions</source>
          <target state="translated">조건식</target>
        </trans-unit>
        <trans-unit id="a45c9f8d76c7c10737f779703b3c7b190d208b8a" translate="yes" xml:space="preserve">
          <source>Conditional expressions allow you to use &lt;a href=&quot;https://docs.python.org/3/reference/compound_stmts.html#if&quot;&gt;&lt;code&gt;if&lt;/code&gt;&lt;/a&gt; &amp;hellip; &lt;a href=&quot;https://docs.python.org/3/reference/compound_stmts.html#elif&quot;&gt;&lt;code&gt;elif&lt;/code&gt;&lt;/a&gt; &amp;hellip; &lt;a href=&quot;https://docs.python.org/3/reference/compound_stmts.html#else&quot;&gt;&lt;code&gt;else&lt;/code&gt;&lt;/a&gt; logic in queries. Django natively supports SQL &lt;code&gt;CASE&lt;/code&gt; expressions. For more details see &lt;a href=&quot;conditional-expressions&quot;&gt;Conditional Expressions&lt;/a&gt;.</source>
          <target state="translated">조건부 표현은 사용 할 수 &lt;a href=&quot;https://docs.python.org/3/reference/compound_stmts.html#if&quot;&gt; &lt;code&gt;if&lt;/code&gt; &lt;/a&gt; ... &lt;a href=&quot;https://docs.python.org/3/reference/compound_stmts.html#elif&quot;&gt; &lt;code&gt;elif&lt;/code&gt; &lt;/a&gt; ... &lt;a href=&quot;https://docs.python.org/3/reference/compound_stmts.html#else&quot;&gt; &lt;code&gt;else&lt;/code&gt; &lt;/a&gt; 쿼리의 논리를. Django는 기본적으로 SQL &lt;code&gt;CASE&lt;/code&gt; 표현식을 지원합니다 . 자세한 내용은 &lt;a href=&quot;conditional-expressions&quot;&gt;조건식을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="86c9e719109c7265189423688e4cce31f68c4b2c" translate="yes" xml:space="preserve">
          <source>Conditional expressions can be used in annotations, aggregations, filters, lookups, and updates. They can also be combined and nested with other expressions. This allows you to make powerful conditional queries.</source>
          <target state="translated">조건식은 주석, 집계, 필터, 조회 및 업데이트에 사용할 수 있습니다. 또한 다른 표현식과 결합하여 중첩 될 수도 있습니다. 이를 통해 강력한 조건부 쿼리를 만들 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="bef384a3da302114339742bb2d330728087ede27" translate="yes" xml:space="preserve">
          <source>Conditional expressions let you use &lt;a href=&quot;https://docs.python.org/3/reference/compound_stmts.html#if&quot;&gt;&lt;code&gt;if&lt;/code&gt;&lt;/a&gt; &amp;hellip; &lt;a href=&quot;https://docs.python.org/3/reference/compound_stmts.html#elif&quot;&gt;&lt;code&gt;elif&lt;/code&gt;&lt;/a&gt; &amp;hellip; &lt;a href=&quot;https://docs.python.org/3/reference/compound_stmts.html#else&quot;&gt;&lt;code&gt;else&lt;/code&gt;&lt;/a&gt; logic within filters, annotations, aggregations, and updates. A conditional expression evaluates a series of conditions for each row of a table and returns the matching result expression. Conditional expressions can also be combined and nested like other &lt;a href=&quot;expressions&quot;&gt;expressions&lt;/a&gt;.</source>
          <target state="translated">조건식을 사용 &lt;a href=&quot;https://docs.python.org/3/reference/compound_stmts.html#if&quot;&gt; &lt;code&gt;if&lt;/code&gt; &lt;/a&gt; 필터, 주석, 집계 및 업데이트 내의 &lt;a href=&quot;https://docs.python.org/3/reference/compound_stmts.html#elif&quot;&gt; &lt;code&gt;elif&lt;/code&gt; &lt;/a&gt; ... elif &amp;hellip; &lt;a href=&quot;https://docs.python.org/3/reference/compound_stmts.html#else&quot;&gt; &lt;code&gt;else&lt;/code&gt; &lt;/a&gt; 논리 를 사용할 수 있습니다. 조건식은 테이블의 각 행에 대한 일련의 조건을 평가하고 일치하는 결과 식을 반환합니다. 조건식도 다른 &lt;a href=&quot;expressions&quot;&gt;식과&lt;/a&gt; 같이 조합하여 중첩 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="60685b8618223463a1213478b5912b07b255960a" translate="yes" xml:space="preserve">
          <source>Conditional filter</source>
          <target state="translated">조건부 필터</target>
        </trans-unit>
        <trans-unit id="12fc2f5ba876364a8762b74c54215eafe75db00b" translate="yes" xml:space="preserve">
          <source>Conditional update</source>
          <target state="translated">조건부 업데이트</target>
        </trans-unit>
        <trans-unit id="9dcf55a9190afa7734274d1ddfba86a6f59deba2" translate="yes" xml:space="preserve">
          <source>Conditional view processing</source>
          <target state="translated">조건부 뷰 처리</target>
        </trans-unit>
        <trans-unit id="8a1b7b24ee2d25c7e1fdcf4448522c537af9f7f1" translate="yes" xml:space="preserve">
          <source>Conditionally enabling or disabling actions</source>
          <target state="translated">조건부 조치 활성화 또는 비활성화</target>
        </trans-unit>
        <trans-unit id="b6a0de49479646f82acca96a3b96147d92a823b1" translate="yes" xml:space="preserve">
          <source>Conditions that span relational fields. For example:</source>
          <target state="translated">관계형 필드에 걸친 조건. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="f081a03e38b9f2ce94b3f290434e89b874cfbe18" translate="yes" xml:space="preserve">
          <source>Configurable attributes</source>
          <target state="translated">구성 가능한 속성</target>
        </trans-unit>
        <trans-unit id="754164850f38c1ecdaf6b8ed894cb192bc36c5f4" translate="yes" xml:space="preserve">
          <source>Configuration</source>
          <target state="translated">Configuration</target>
        </trans-unit>
        <trans-unit id="2b6c31d8647bdbb2028b97fcd3605cc88d0c8ef1" translate="yes" xml:space="preserve">
          <source>Configure &lt;code&gt;settings.py&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;settings.py&lt;/code&gt; 를 구성하십시오</target>
        </trans-unit>
        <trans-unit id="19576e379b1455d39fea388e4831958b5fde4e20" translate="yes" xml:space="preserve">
          <source>Configure a &lt;a href=&quot;../../../topics/templates#django.template.backends.django.DjangoTemplates&quot;&gt;&lt;code&gt;DjangoTemplates&lt;/code&gt;&lt;/a&gt; backend in your &lt;a href=&quot;../../settings#std:setting-TEMPLATES&quot;&gt;&lt;code&gt;TEMPLATES&lt;/code&gt;&lt;/a&gt; setting with &lt;code&gt;django.contrib.auth.context_processors.auth&lt;/code&gt; and &lt;code&gt;django.contrib.messages.context_processors.messages&lt;/code&gt; in the &lt;code&gt;'context_processors'&lt;/code&gt; option of &lt;a href=&quot;../../settings#std:setting-TEMPLATES-OPTIONS&quot;&gt;&lt;code&gt;OPTIONS&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">에 구성 &lt;a href=&quot;../../../topics/templates#django.template.backends.django.DjangoTemplates&quot;&gt; &lt;code&gt;DjangoTemplates&lt;/code&gt; 이&lt;/a&gt; 당신의 백엔드 &lt;a href=&quot;../../settings#std:setting-TEMPLATES&quot;&gt; &lt;code&gt;TEMPLATES&lt;/code&gt; &lt;/a&gt; 로 설정 &lt;code&gt;django.contrib.auth.context_processors.auth&lt;/code&gt; 및 &lt;code&gt;django.contrib.messages.context_processors.messages&lt;/code&gt; 에서 &lt;code&gt;'context_processors'&lt;/code&gt; 의 옵션 &lt;a href=&quot;../../settings#std:setting-TEMPLATES-OPTIONS&quot;&gt; &lt;code&gt;OPTIONS&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="4d3b04cea17e28c67f71fed6f96b07d523b18de1" translate="yes" xml:space="preserve">
          <source>Configure your web server to serve the files in &lt;a href=&quot;../../ref/settings#std:setting-STATIC_ROOT&quot;&gt;&lt;code&gt;STATIC_ROOT&lt;/code&gt;&lt;/a&gt; under the URL &lt;a href=&quot;../../ref/settings#std:setting-STATIC_URL&quot;&gt;&lt;code&gt;STATIC_URL&lt;/code&gt;&lt;/a&gt;. For example, here&amp;rsquo;s &lt;a href=&quot;../deployment/wsgi/modwsgi#serving-files&quot;&gt;how to do this with Apache and mod_wsgi&lt;/a&gt;.</source>
          <target state="translated">URL &lt;a href=&quot;../../ref/settings#std:setting-STATIC_URL&quot;&gt; &lt;code&gt;STATIC_URL&lt;/code&gt; &lt;/a&gt; 아래 에서 &lt;a href=&quot;../../ref/settings#std:setting-STATIC_ROOT&quot;&gt; &lt;code&gt;STATIC_ROOT&lt;/code&gt; &lt;/a&gt; 의 파일을 제공하도록 웹 서버를 구성하십시오 . 예를 들어, &lt;a href=&quot;../deployment/wsgi/modwsgi#serving-files&quot;&gt;Apache 및 mod_wsgi로이를 수행하는 방법이&lt;/a&gt; 있습니다.</target>
        </trans-unit>
        <trans-unit id="503e91de84f91208b728c191e6f3ed197e5d413b" translate="yes" xml:space="preserve">
          <source>Configure, make and install:</source>
          <target state="translated">구성, 제작 및 설치 :</target>
        </trans-unit>
        <trans-unit id="184f5022536e583eabec108d9706fbe79627f797" translate="yes" xml:space="preserve">
          <source>Configures Django by:</source>
          <target state="translated">다음과 같이 장고를 구성합니다.</target>
        </trans-unit>
        <trans-unit id="3ba19abb1d165db639c4a564906edfeb16a0a29d" translate="yes" xml:space="preserve">
          <source>Configures a newly created user. This method is called immediately after a new user is created, and can be used to perform custom setup actions, such as setting the user&amp;rsquo;s groups based on attributes in an LDAP directory. Returns the user object.</source>
          <target state="translated">새로 만든 사용자를 구성합니다. 이 메소드는 새 사용자가 작성된 후 즉시 호출되며 LDAP 디렉토리의 속성을 기반으로 사용자 그룹 설정과 같은 사용자 정의 설정 조치를 수행하는 데 사용할 수 있습니다. 사용자 개체를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="9af468c991e56e22e41dec7452937a15cb317f13" translate="yes" xml:space="preserve">
          <source>Configures three loggers:</source>
          <target state="translated">세 개의 로거를 구성합니다.</target>
        </trans-unit>
        <trans-unit id="485cc663bb970ccb9c99a838c0f5a04115489124" translate="yes" xml:space="preserve">
          <source>Configuring Django in this fashion is mostly necessary &amp;ndash; and, indeed, recommended &amp;ndash; when you&amp;rsquo;re using a piece of the framework inside a larger application.</source>
          <target state="translated">이 방식으로 Django를 구성하는 것은 더 큰 응용 프로그램에서 프레임 워크를 사용할 때 주로 필요하며 실제로 권장됩니다.</target>
        </trans-unit>
        <trans-unit id="76b38a4978760216c72304cd269e9d8e57f7db4d" translate="yes" xml:space="preserve">
          <source>Configuring an engine</source>
          <target state="translated">엔진 구성</target>
        </trans-unit>
        <trans-unit id="4a0159a42419a7407b045bec82aed244724be873" translate="yes" xml:space="preserve">
          <source>Configuring and starting the uWSGI server for Django</source>
          <target state="translated">Django 용 uWSGI 서버 구성 및 시작</target>
        </trans-unit>
        <trans-unit id="399b54fd8f642e78380d5fce3b076f86d97da4e8" translate="yes" xml:space="preserve">
          <source>Configuring applications</source>
          <target state="translated">응용 프로그램 구성</target>
        </trans-unit>
        <trans-unit id="79235b7e3284ed1a0ee69b93dc85fffe62a078f3" translate="yes" xml:space="preserve">
          <source>Configuring email for development</source>
          <target state="translated">개발을위한 이메일 구성</target>
        </trans-unit>
        <trans-unit id="c64c5c6a6cb52da59668af10fafaac8249a4f623" translate="yes" xml:space="preserve">
          <source>Configuring form elements&amp;rsquo; HTML &lt;code&gt;id&lt;/code&gt; attributes and &lt;code&gt;&amp;lt;label&amp;gt;&lt;/code&gt; tags</source>
          <target state="translated">양식 요소의 HTML &lt;code&gt;id&lt;/code&gt; 속성 및 &lt;code&gt;&amp;lt;label&amp;gt;&lt;/code&gt; 태그 구성</target>
        </trans-unit>
        <trans-unit id="8c337c488d4a759a6eb0d55f602e54b6c630596b" translate="yes" xml:space="preserve">
          <source>Configuring logging</source>
          <target state="translated">로깅 구성</target>
        </trans-unit>
        <trans-unit id="722745be73ea61714ad4ab330460a1449b423ce0" translate="yes" xml:space="preserve">
          <source>Configuring static files</source>
          <target state="translated">정적 파일 구성</target>
        </trans-unit>
        <trans-unit id="204565212ff116d3cf1b1065c865c959dbde3456" translate="yes" xml:space="preserve">
          <source>Configuring the message engine</source>
          <target state="translated">메시지 엔진 구성</target>
        </trans-unit>
        <trans-unit id="07b1e8f062ef7113523bf799b6668696a0806bcf" translate="yes" xml:space="preserve">
          <source>Configuring the rendering of a form&amp;rsquo;s widgets</source>
          <target state="translated">양식 위젯의 렌더링 구성</target>
        </trans-unit>
        <trans-unit id="9af41083fea57cddecb86fb3bf45008f94aabe64" translate="yes" xml:space="preserve">
          <source>Configuring the session engine</source>
          <target state="translated">세션 엔진 구성</target>
        </trans-unit>
        <trans-unit id="4035740826101b046a1e4bff2c0739fa6aaed0d9" translate="yes" xml:space="preserve">
          <source>Configuring the settings module</source>
          <target state="translated">설정 모듈 구성</target>
        </trans-unit>
        <trans-unit id="fd325343ebe91309a2a788b620ad9f4a5c51fae6" translate="yes" xml:space="preserve">
          <source>Configuring these servers is out of scope of this document; check each server&amp;rsquo;s respective documentation for instructions.</source>
          <target state="translated">이 서버 구성은이 문서에서 다루지 않습니다. 지침은 각 서버의 해당 설명서를 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="5d0f7b1c340243357fe9239425729d88aa6a2c45" translate="yes" xml:space="preserve">
          <source>Confirm the bug by using the &lt;a href=&quot;../ref/django-admin#django-admin-shell&quot;&gt;&lt;code&gt;shell&lt;/code&gt;&lt;/a&gt; to check the method on a question whose date lies in the future:</source>
          <target state="translated">&lt;a href=&quot;../ref/django-admin#django-admin-shell&quot;&gt; &lt;code&gt;shell&lt;/code&gt; &lt;/a&gt; 을 사용 하여 미래에 날짜가있는 질문에 대한 방법을 확인하여 버그 를 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="c4eb5164cf4479c415eb2d005ae2e4fac51710db" translate="yes" xml:space="preserve">
          <source>Congratulations, you&amp;rsquo;ve learned how to make a pull request to Django! Details of more advanced techniques you may need are in &lt;a href=&quot;https://docs.djangoproject.com/en/3.0/internals/contributing/writing-code/working-with-git/&quot;&gt;Working with Git and GitHub&lt;/a&gt;.</source>
          <target state="translated">축하합니다. Django에 풀 요청을하는 방법을 배웠습니다! 필요한 고급 기술에 대한 자세한 내용은 &lt;a href=&quot;https://docs.djangoproject.com/en/3.0/internals/contributing/writing-code/working-with-git/&quot;&gt;Git 및 GitHub 작업에 있습니다&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="0d403fbfd19b67a206b7298bca03432d7c2ea2ce" translate="yes" xml:space="preserve">
          <source>Connecting receiver functions</source>
          <target state="translated">수신기 기능 연결</target>
        </trans-unit>
        <trans-unit id="e5bdf07a77312f53ea2d4719544dbd5407ca884f" translate="yes" xml:space="preserve">
          <source>Connecting to signals sent by specific senders</source>
          <target state="translated">특정 발신자가 보낸 신호에 연결</target>
        </trans-unit>
        <trans-unit id="af53bacbeb9ba4944f6b9f266fabc80be94aba0c" translate="yes" xml:space="preserve">
          <source>Connecting to the database</source>
          <target state="translated">데이터베이스에 연결</target>
        </trans-unit>
        <trans-unit id="07f35038b27fc876a57591119e37327c7b80eb76" translate="yes" xml:space="preserve">
          <source>Connection management</source>
          <target state="translated">연결 관리</target>
        </trans-unit>
        <trans-unit id="9519b982a0870cfa8eaaa9ffdb2113e333074ee0" translate="yes" xml:space="preserve">
          <source>Connection settings are used in this order:</source>
          <target state="translated">연결 설정은 다음 순서로 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="5b328cde6e35e516d82cee79dfdc66644770025e" translate="yes" xml:space="preserve">
          <source>Connections and cursors</source>
          <target state="translated">연결 및 커서</target>
        </trans-unit>
        <trans-unit id="b1a00f8956bd3074b46c457b5fc7f951d07cffcb" translate="yes" xml:space="preserve">
          <source>Consequently, when configured via &lt;code&gt;settings.configure()&lt;/code&gt;, Django will not make any modifications to the process environment variables (see the documentation of &lt;a href=&quot;../ref/settings#std:setting-TIME_ZONE&quot;&gt;&lt;code&gt;TIME_ZONE&lt;/code&gt;&lt;/a&gt; for why this would normally occur). It&amp;rsquo;s assumed that you&amp;rsquo;re already in full control of your environment in these cases.</source>
          <target state="translated">따라서 &lt;code&gt;settings.configure()&lt;/code&gt; 를 통해 구성 할 때 Django는 프로세스 환경 변수를 수정하지 않습니다 ( 이 문제가 발생하는 이유 는 &lt;a href=&quot;../ref/settings#std:setting-TIME_ZONE&quot;&gt; &lt;code&gt;TIME_ZONE&lt;/code&gt; &lt;/a&gt; 설명서를 참조하십시오 ). 이 경우 이미 환경을 완전히 제어하고 있다고 가정합니다.</target>
        </trans-unit>
        <trans-unit id="723e6f92743d4882ba199f3bce595df23c649696" translate="yes" xml:space="preserve">
          <source>Consider &lt;a href=&quot;../howto/static-files/deployment#staticfiles-from-cdn&quot;&gt;serving static files from a cloud service or CDN&lt;/a&gt; to avoid some of these issues.</source>
          <target state="translated">고려 &lt;a href=&quot;../howto/static-files/deployment#staticfiles-from-cdn&quot;&gt;클라우드 서비스 나 CDN에서 정적 파일을 제공하는&lt;/a&gt; 이러한 문제 중 일부를 피하기 위해.</target>
        </trans-unit>
        <trans-unit id="1dcf5d703d3f6569aaf8b5b1cb51f1023404c956" translate="yes" xml:space="preserve">
          <source>Consider a form containing a &lt;a href=&quot;../../ref/forms/fields#django.forms.FileField&quot;&gt;&lt;code&gt;FileField&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">&lt;a href=&quot;../../ref/forms/fields#django.forms.FileField&quot;&gt; &lt;code&gt;FileField&lt;/code&gt; 를&lt;/a&gt; 포함하는 양식을 고려하십시오 .</target>
        </trans-unit>
        <trans-unit id="f86230a2ac93ffe6536b5566b296e6c21dec433f" translate="yes" xml:space="preserve">
          <source>Consider a more useful form than our minimal example above, which we could use to implement &amp;ldquo;contact me&amp;rdquo; functionality on a personal website:</source>
          <target state="translated">개인 웹 사이트에서&amp;ldquo;문의하기&amp;rdquo;기능을 구현하는 데 사용할 수있는 위의 최소한의 예보다 더 유용한 형식을 고려하십시오.</target>
        </trans-unit>
        <trans-unit id="6670df00166ba856b2846c093a362aeefbb7eadf" translate="yes" xml:space="preserve">
          <source>Consider a typical case, where a view might need to call a model&amp;rsquo;s method to perform some computation, before placing the model instance into the context, where the template might invoke the method once more:</source>
          <target state="translated">템플릿이 메소드를 한 번 더 호출 할 수있는 컨텍스트에 모델 인스턴스를 배치하기 전에보기에서 모델의 메소드를 호출하여 계산을 수행해야하는 일반적인 경우를 고려하십시오.</target>
        </trans-unit>
        <trans-unit id="0105b3c78814a97f1529301cab6c2210c49eaf36" translate="yes" xml:space="preserve">
          <source>Consider again this URLconf entry:</source>
          <target state="translated">이 URLconf 항목을 다시 고려하십시오.</target>
        </trans-unit>
        <trans-unit id="d813ff8a4ab210b4832d5705e367f6f3c7f128ae" translate="yes" xml:space="preserve">
          <source>Consider an example where you are implementing a custom field named &lt;code&gt;RangedIntegerField&lt;/code&gt;. This field adds &lt;code&gt;min&lt;/code&gt; and &lt;code&gt;max&lt;/code&gt; arguments to the constructor of &lt;code&gt;IntegerField&lt;/code&gt;. You may want to add a check to ensure that users provide a min value that is less than or equal to the max value. The following code snippet shows how you can implement this check:</source>
          <target state="translated">&lt;code&gt;RangedIntegerField&lt;/code&gt; 라는 사용자 정의 필드를 구현하는 예를 고려하십시오 . 이 필드는 &lt;code&gt;min&lt;/code&gt; 및 &lt;code&gt;max&lt;/code&gt; 인수를 &lt;code&gt;IntegerField&lt;/code&gt; 의 생성자에 추가 합니다. 사용자가 최대 값보다 작거나 같은 최소값을 제공하도록 확인을 추가 할 수 있습니다. 다음 코드 스 니펫은이 확인을 구현하는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="c7def0b3f29a8fc3f1e8dca782d283a5c0a71a0a" translate="yes" xml:space="preserve">
          <source>Consider the case of a list of objects that have a foreign key referencing &lt;a href=&quot;../ref/contrib/contenttypes#django.contrib.contenttypes.models.ContentType&quot;&gt;&lt;code&gt;ContentType&lt;/code&gt;&lt;/a&gt;. If you&amp;rsquo;re going to serialize an object that refers to a content type, then you need to have a way to refer to that content type to begin with. Since &lt;code&gt;ContentType&lt;/code&gt; objects are automatically created by Django during the database synchronization process, the primary key of a given content type isn&amp;rsquo;t easy to predict; it will depend on how and when &lt;a href=&quot;../ref/django-admin#django-admin-migrate&quot;&gt;&lt;code&gt;migrate&lt;/code&gt;&lt;/a&gt; was executed. This is true for all models which automatically generate objects, notably including &lt;a href=&quot;../ref/contrib/auth#django.contrib.auth.models.Permission&quot;&gt;&lt;code&gt;Permission&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../ref/contrib/auth#django.contrib.auth.models.Group&quot;&gt;&lt;code&gt;Group&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;../ref/contrib/auth#django.contrib.auth.models.User&quot;&gt;&lt;code&gt;User&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../ref/contrib/contenttypes#django.contrib.contenttypes.models.ContentType&quot;&gt; &lt;code&gt;ContentType&lt;/code&gt; 을&lt;/a&gt; 참조하는 외래 키가있는 객체 목록의 경우를 고려하십시오 . 컨텐츠 유형을 참조하는 오브젝트를 직렬화하려면 먼저 해당 컨텐츠 유형을 참조하는 방법이 필요합니다. 데이터베이스 동기화 프로세스 중에 Django가 &lt;code&gt;ContentType&lt;/code&gt; 객체를 자동으로 생성 하기 때문에 주어진 콘텐츠 유형의 기본 키를 예측하기가 쉽지 않습니다. &lt;a href=&quot;../ref/django-admin#django-admin-migrate&quot;&gt; &lt;code&gt;migrate&lt;/code&gt; &lt;/a&gt; 실행 방법과시기에 따라 다릅니다 . 이는 특히 &lt;a href=&quot;../ref/contrib/auth#django.contrib.auth.models.Permission&quot;&gt; &lt;code&gt;Permission&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../ref/contrib/auth#django.contrib.auth.models.Group&quot;&gt; &lt;code&gt;Group&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../ref/contrib/auth#django.contrib.auth.models.User&quot;&gt; &lt;code&gt;User&lt;/code&gt; 를&lt;/a&gt; 포함하여 자동으로 객체를 생성하는 모든 모델에 해당됩니다 .</target>
        </trans-unit>
        <trans-unit id="d7f69e049d11cfea430a186ac01ffac1bca0cfc8" translate="yes" xml:space="preserve">
          <source>Consider the following example:</source>
          <target state="translated">다음 예제를 고려하십시오.</target>
        </trans-unit>
        <trans-unit id="6ec3d6fc8e2778acd98b6b9a74478cbb3ac532f2" translate="yes" xml:space="preserve">
          <source>Consider the following model, using an &lt;a href=&quot;../ref/models/fields#django.db.models.ImageField&quot;&gt;&lt;code&gt;ImageField&lt;/code&gt;&lt;/a&gt; to store a photo:</source>
          <target state="translated">&lt;a href=&quot;../ref/models/fields#django.db.models.ImageField&quot;&gt; &lt;code&gt;ImageField&lt;/code&gt; &lt;/a&gt; 를 사용하여 사진을 저장하는 다음 모델을 고려하십시오 .</target>
        </trans-unit>
        <trans-unit id="a9f0ad7c11ed74758926263473b6fcdd5c68904d" translate="yes" xml:space="preserve">
          <source>Consider the following two models:</source>
          <target state="translated">다음 두 가지 모델을 고려하십시오.</target>
        </trans-unit>
        <trans-unit id="b55e14cd00af1671d3acaeb6797a2f1a1d1cfe56" translate="yes" xml:space="preserve">
          <source>Consider this case:</source>
          <target state="translated">이 경우를 고려하십시오.</target>
        </trans-unit>
        <trans-unit id="e6fa5fb83466f5cb81ad8dc4eb230c1e627bee82" translate="yes" xml:space="preserve">
          <source>Consider this set of models:</source>
          <target state="translated">이 모델 세트를 고려하십시오.</target>
        </trans-unit>
        <trans-unit id="69d80b05f0a3f520081f1af1f6b4b6a85d5f6f34" translate="yes" xml:space="preserve">
          <source>Consider using an error monitoring system such as &lt;a href=&quot;https://docs.sentry.io/&quot;&gt;Sentry&lt;/a&gt; before your inbox is flooded by reports. Sentry can also aggregate logs.</source>
          <target state="translated">받은 편지함에 보고서가 넘치기 전에 &lt;a href=&quot;https://docs.sentry.io/&quot;&gt;Sentry&lt;/a&gt; 와 같은 오류 모니터링 시스템을 사용해보십시오 . 센트리는 로그를 집계 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="bac4e95735f7b9ee2aeac0a541fc2fbb47d3773a" translate="yes" xml:space="preserve">
          <source>Consider, for example, that you need to change a single database feature. First, you have to create a new directory with a &lt;code&gt;base&lt;/code&gt; module in it. For example:</source>
          <target state="translated">예를 들어 단일 데이터베이스 기능을 변경해야합니다. 먼저 &lt;code&gt;base&lt;/code&gt; 모듈이 있는 새 디렉토리를 만들어야 합니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="bac7b250a9feea25e1a60fbc0ce1d2f28db31ae2" translate="yes" xml:space="preserve">
          <source>Considerations regarding model&amp;rsquo;s &lt;code&gt;error_messages&lt;/code&gt;</source>
          <target state="translated">모델의 &lt;code&gt;error_messages&lt;/code&gt; 에 대한 고려 사항</target>
        </trans-unit>
        <trans-unit id="fad5caa2de30e036189b4b06ccc83a823846c06f" translate="yes" xml:space="preserve">
          <source>Considerations when removing model fields</source>
          <target state="translated">모델 필드를 제거 할 때 고려할 사항</target>
        </trans-unit>
        <trans-unit id="39cbdd33812e96a59909005452966168ffe901bd" translate="yes" xml:space="preserve">
          <source>Console backend</source>
          <target state="translated">콘솔 백엔드</target>
        </trans-unit>
        <trans-unit id="733fd2b4c4e1bca4c7d0e3c2e1c341bcd1d34269" translate="yes" xml:space="preserve">
          <source>Constant</source>
          <target state="translated">Constant</target>
        </trans-unit>
        <trans-unit id="d2bb772775f2449a9d77b0f2111e8563197228e7" translate="yes" xml:space="preserve">
          <source>Constraints are defined in &lt;code&gt;django.db.models.constraints&lt;/code&gt;, but for convenience they&amp;rsquo;re imported into &lt;a href=&quot;../../topics/db/models#module-django.db.models&quot;&gt;&lt;code&gt;django.db.models&lt;/code&gt;&lt;/a&gt;. The standard convention is to use &lt;code&gt;from django.db import models&lt;/code&gt; and refer to the constraints as &lt;code&gt;models.&amp;lt;Foo&amp;gt;Constraint&lt;/code&gt;.</source>
          <target state="translated">제약 조건은 &lt;code&gt;django.db.models.constraints&lt;/code&gt; 에 정의되어 있지만 편의상 &lt;a href=&quot;../../topics/db/models#module-django.db.models&quot;&gt; &lt;code&gt;django.db.models&lt;/code&gt; &lt;/a&gt; 로 가져 옵니다 . 표준 규칙은 &lt;code&gt;from django.db import models&lt;/code&gt; 사용 하고 제약 조건을 &lt;code&gt;models.&amp;lt;Foo&amp;gt;Constraint&lt;/code&gt; 로 참조하는 것 입니다.</target>
        </trans-unit>
        <trans-unit id="89c5e5d778784e530c7a73d09a7b6e47b0b6dbcc" translate="yes" xml:space="preserve">
          <source>Constraints in abstract base classes</source>
          <target state="translated">추상 기본 클래스의 제약</target>
        </trans-unit>
        <trans-unit id="1705fea1fec1fa4ac3b10f2d3cfa4a70220a459d" translate="yes" xml:space="preserve">
          <source>Constraints reference</source>
          <target state="translated">구속 조건 참조</target>
        </trans-unit>
        <trans-unit id="b0a9544fc5f74416b59886dcf88258ecc14145b9" translate="yes" xml:space="preserve">
          <source>Constructed by paginating &lt;code&gt;queryset&lt;/code&gt; into pages of size &lt;code&gt;page_size&lt;/code&gt;. If the request contains a &lt;code&gt;page&lt;/code&gt; argument, either as a captured URL argument or as a GET argument, &lt;code&gt;object_list&lt;/code&gt; will correspond to the objects from that page.</source>
          <target state="translated">&lt;code&gt;queryset&lt;/code&gt; 을 &lt;code&gt;page_size&lt;/code&gt; 크기의 페이지로 페이지 매김으로 구성됩니다 . 요청에 &lt;code&gt;page&lt;/code&gt; 인수가 캡처 된 URL 인수 또는 GET 인수로 포함 된 경우 &lt;code&gt;object_list&lt;/code&gt; 는 해당 페이지의 오브젝트에 해당합니다.</target>
        </trans-unit>
        <trans-unit id="843aa9f358e7373aa764b1a65c9105e0cdcfffaf" translate="yes" xml:space="preserve">
          <source>Constructing an unbound form is the same as always &amp;ndash; omit both form data &lt;em&gt;and&lt;/em&gt; file data:</source>
          <target state="translated">언 바운드 양식 구성은 항상 동일합니다. 양식 데이터 &lt;em&gt;와&lt;/em&gt; 파일 데이터 를 모두 생략 하십시오.</target>
        </trans-unit>
        <trans-unit id="ad04bd63e469988c66f8a3b4fe65a042e0e7a4c2" translate="yes" xml:space="preserve">
          <source>Constructor arguments are:</source>
          <target state="translated">생성자 인수는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="0c178a0518cca80f0ef53db97c1d23d11b0c437d" translate="yes" xml:space="preserve">
          <source>Constructs a &lt;a href=&quot;#django.contrib.gis.gdal.Polygon&quot;&gt;&lt;code&gt;Polygon&lt;/code&gt;&lt;/a&gt; from the given bounding-box (a 4-tuple).</source>
          <target state="translated">지정된 바운딩 박스로부터 &lt;a href=&quot;#django.contrib.gis.gdal.Polygon&quot;&gt; &lt;code&gt;Polygon&lt;/code&gt; &lt;/a&gt; 을 구축합니다 (4 튜플).</target>
        </trans-unit>
        <trans-unit id="b01313c178df0437bd242d3dc19fe189331e205f" translate="yes" xml:space="preserve">
          <source>Constructs a &lt;a href=&quot;#django.contrib.gis.geos.GEOSGeometry&quot;&gt;&lt;code&gt;GEOSGeometry&lt;/code&gt;&lt;/a&gt; from the given GML string.</source>
          <target state="translated">구축 &lt;a href=&quot;#django.contrib.gis.geos.GEOSGeometry&quot;&gt; &lt;code&gt;GEOSGeometry&lt;/code&gt; &lt;/a&gt; 주어진 GML 문자열에서입니다.</target>
        </trans-unit>
        <trans-unit id="4182e609339c912b6a2b55fb04b1948dc8fa25a3" translate="yes" xml:space="preserve">
          <source>Constructs a form, checks the form for validity, and handles it accordingly.</source>
          <target state="translated">폼을 구성하고 폼의 유효성을 검사 한 다음 적절하게 처리합니다.</target>
        </trans-unit>
        <trans-unit id="c25a4d6a608627e8ee7fbb0590daad81bfdf43f7" translate="yes" xml:space="preserve">
          <source>Constructs a test suite that matches the test labels provided.</source>
          <target state="translated">제공된 테스트 레이블과 일치하는 테스트 스위트를 구성합니다.</target>
        </trans-unit>
        <trans-unit id="8b659b37f4f2e24b2ad4c7dc596d71c179972c4e" translate="yes" xml:space="preserve">
          <source>Constructs an &lt;a href=&quot;#django.contrib.gis.gdal.OGRGeometry&quot;&gt;&lt;code&gt;OGRGeometry&lt;/code&gt;&lt;/a&gt; from the given GML string.</source>
          <target state="translated">구축 &lt;a href=&quot;#django.contrib.gis.gdal.OGRGeometry&quot;&gt; &lt;code&gt;OGRGeometry&lt;/code&gt; &lt;/a&gt; 주어진 GML 문자열에서입니다.</target>
        </trans-unit>
        <trans-unit id="cdcb9a98e37a51c3b607e0bab427f0a3e73904bd" translate="yes" xml:space="preserve">
          <source>Constructs the target URL for redirection.</source>
          <target state="translated">리디렉션 할 대상 URL을 구성합니다.</target>
        </trans-unit>
        <trans-unit id="91d6543469ef40166278b437bd62f964375e7652" translate="yes" xml:space="preserve">
          <source>Contained within. This operator is supported by many Python containers to test whether the given value is in the container. The following are some examples of how &lt;code&gt;x in y&lt;/code&gt; will be interpreted:</source>
          <target state="translated">안에 들어 있습니다. 이 연산자는 많은 Python 컨테이너에서 지원되어 지정된 값이 컨테이너에 있는지 여부를 테스트합니다. 다음은 &lt;code&gt;x in y&lt;/code&gt; 를 해석 하는 방법에 대한 몇 가지 예입니다 .</target>
        </trans-unit>
        <trans-unit id="89d2ab91daa8570eacf6a6c4a05409536ee1c6a9" translate="yes" xml:space="preserve">
          <source>Containment and key operations</source>
          <target state="translated">격리 및 주요 운영</target>
        </trans-unit>
        <trans-unit id="4391727be29f60ee6dfbc6fd8ef4ac397cf112d6" translate="yes" xml:space="preserve">
          <source>Containment functions</source>
          <target state="translated">억제 기능</target>
        </trans-unit>
        <trans-unit id="6b100d40ac5a33d89caf83b3c3f6ff6daf77433b" translate="yes" xml:space="preserve">
          <source>Contains the complete list of core and contrib app settings.</source>
          <target state="translated">핵심 및 contrib 앱 설정의 전체 목록을 포함합니다.</target>
        </trans-unit>
        <trans-unit id="4683f6ec63cb87bdf57e377dbff2cca050de9197" translate="yes" xml:space="preserve">
          <source>Content types and generic relations</source>
          <target state="translated">컨텐츠 유형 및 일반 관계</target>
        </trans-unit>
        <trans-unit id="cc11b3a28fa30ae6d3d3ad1438824cbd5224ba5c" translate="yes" xml:space="preserve">
          <source>Context</source>
          <target state="translated">Context</target>
        </trans-unit>
        <trans-unit id="59bbe6057a4273131904b6f9404ed85f706992d4" translate="yes" xml:space="preserve">
          <source>Context and template responses</source>
          <target state="translated">상황 및 템플릿 응답</target>
        </trans-unit>
        <trans-unit id="c6c53e2b775a20fe1a0e933400d064d167505dae" translate="yes" xml:space="preserve">
          <source>Context available in widget templates</source>
          <target state="translated">위젯 템플리트에서 사용 가능한 컨텍스트</target>
        </trans-unit>
        <trans-unit id="17ed0085f13911ebc5a2d12f4fc504a3182b3ed1" translate="yes" xml:space="preserve">
          <source>Context processors</source>
          <target state="translated">컨텍스트 프로세서</target>
        </trans-unit>
        <trans-unit id="5901a49232dbef577cda0060c889044257f6fbb8" translate="yes" xml:space="preserve">
          <source>Context processors are applied on top of context data. This means that a context processor may overwrite variables you&amp;rsquo;ve supplied to your &lt;a href=&quot;#django.template.Context&quot;&gt;&lt;code&gt;Context&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#django.template.RequestContext&quot;&gt;&lt;code&gt;RequestContext&lt;/code&gt;&lt;/a&gt;, so take care to avoid variable names that overlap with those supplied by your context processors.</source>
          <target state="translated">컨텍스트 프로세서는 컨텍스트 데이터 위에 적용됩니다. 이는 컨텍스트 프로세서가 &lt;a href=&quot;#django.template.Context&quot;&gt; &lt;code&gt;Context&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;#django.template.RequestContext&quot;&gt; &lt;code&gt;RequestContext&lt;/code&gt; 에&lt;/a&gt; 제공 한 변수를 덮어 쓸 수 있으므로 컨텍스트 프로세서가 제공 한 변수와 겹치는 변수 이름을 피하도록주의하십시오.</target>
        </trans-unit>
        <trans-unit id="bc05c7c5de0522d2d85d1b6e2fce9c6303049e04" translate="yes" xml:space="preserve">
          <source>Context processors are functions that receive the current &lt;a href=&quot;../ref/request-response#django.http.HttpRequest&quot;&gt;&lt;code&gt;HttpRequest&lt;/code&gt;&lt;/a&gt; as an argument and return a &lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#dict&quot;&gt;&lt;code&gt;dict&lt;/code&gt;&lt;/a&gt; of data to be added to the rendering context.</source>
          <target state="translated">컨텍스트 프로세서는 현재 수신 기능이다 &lt;a href=&quot;../ref/request-response#django.http.HttpRequest&quot;&gt; &lt;code&gt;HttpRequest&lt;/code&gt; 에를&lt;/a&gt; 인수로하고, 리턴 &lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#dict&quot;&gt; &lt;code&gt;dict&lt;/code&gt; &lt;/a&gt; 데이터가 렌더링 컨텍스트에 추가한다.</target>
        </trans-unit>
        <trans-unit id="967bdc0eee5ec3c4217bafc26bea045765883071" translate="yes" xml:space="preserve">
          <source>Context processors are useful with Django templates because Django templates don&amp;rsquo;t support calling functions with arguments. Since Jinja2 doesn&amp;rsquo;t have that limitation, it&amp;rsquo;s recommended to put the function that you would use as a context processor in the global variables available to the template using &lt;code&gt;jinja2.Environment&lt;/code&gt; as described below. You can then call that function in the template:</source>
          <target state="translated">Django 템플릿은 인수가있는 함수 호출을 지원하지 않기 때문에 컨텍스트 프로세서는 Django 템플릿에 유용합니다. Jinja2에는 이러한 제한이 없으므로 아래 설명과 같이 &lt;code&gt;jinja2.Environment&lt;/code&gt; 를 사용하여 템플릿에 사용 가능한 전역 변수에 컨텍스트 프로세서로 사용할 함수를 배치하는 것이 좋습니다 . 그런 다음 템플릿에서 해당 함수를 호출 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a81ca58a2d33854d7dad7ec7988eec151557124f" translate="yes" xml:space="preserve">
          <source>Context variables</source>
          <target state="translated">컨텍스트 변수</target>
        </trans-unit>
        <trans-unit id="bfdc9b0c3ef7fa9d319e35db5e3432f41737cfe7" translate="yes" xml:space="preserve">
          <source>Context variables override values from template context processors</source>
          <target state="translated">컨텍스트 변수는 템플리트 컨텍스트 프로세서의 값을 대체합니다.</target>
        </trans-unit>
        <trans-unit id="3cc335d8b69e1b609577d3e39cfa36ec0f7fac1a" translate="yes" xml:space="preserve">
          <source>Context: variable &lt;code&gt;person&lt;/code&gt; is set to &lt;code&gt;&quot;John&quot;&lt;/code&gt; and variable &lt;code&gt;greeting&lt;/code&gt; is set to &lt;code&gt;&quot;Hello&quot;&lt;/code&gt;.</source>
          <target state="translated">컨텍스트 : 변수 &lt;code&gt;person&lt;/code&gt; 은 &lt;code&gt;&quot;John&quot;&lt;/code&gt; 으로 설정 되고 variable &lt;code&gt;greeting&lt;/code&gt; 은 &lt;code&gt;&quot;Hello&quot;&lt;/code&gt; 로 설정됩니다 .</target>
        </trans-unit>
        <trans-unit id="c257f4238337560d78d4a4163014eafe278ff120" translate="yes" xml:space="preserve">
          <source>Contextual line information</source>
          <target state="translated">상황에 맞는 라인 정보</target>
        </trans-unit>
        <trans-unit id="334884395d29b2523e74a230fda97118c3630209" translate="yes" xml:space="preserve">
          <source>Contextual markers</source>
          <target state="translated">상황에 맞는 마커</target>
        </trans-unit>
        <trans-unit id="b46f1a2f098ccaca572a905f2bdf7cbbbfc6c89d" translate="yes" xml:space="preserve">
          <source>Contextual markers are also supported by the &lt;a href=&quot;#std:templatetag-trans&quot;&gt;&lt;code&gt;trans&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#std:templatetag-blocktrans&quot;&gt;&lt;code&gt;blocktrans&lt;/code&gt;&lt;/a&gt; template tags.</source>
          <target state="translated">상황 별 마커는 또한 &lt;a href=&quot;#std:templatetag-trans&quot;&gt; &lt;code&gt;trans&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#std:templatetag-blocktrans&quot;&gt; &lt;code&gt;blocktrans&lt;/code&gt; &lt;/a&gt; 템플릿 태그 에서 지원됩니다 .</target>
        </trans-unit>
        <trans-unit id="9f09c07c68096594da883f5a23969df19412ff1f" translate="yes" xml:space="preserve">
          <source>Continuing on from the previous example, suppose that in our &lt;code&gt;ContactForm&lt;/code&gt;, we want to make sure that the &lt;code&gt;recipients&lt;/code&gt; field always contains the address &lt;code&gt;&quot;fred@example.com&quot;&lt;/code&gt;. This is validation that is specific to our form, so we don&amp;rsquo;t want to put it into the general &lt;code&gt;MultiEmailField&lt;/code&gt; class. Instead, we write a cleaning method that operates on the &lt;code&gt;recipients&lt;/code&gt; field, like so:</source>
          <target state="translated">이전 예제에서 계속해서 &lt;code&gt;ContactForm&lt;/code&gt; 에서 &lt;code&gt;recipients&lt;/code&gt; 필드에 항상 &lt;code&gt;&quot;fred@example.com&quot;&lt;/code&gt; 주소가 포함 되도록 한다고 가정합니다 . 이것은 양식에 특정한 유효성 검사이므로 일반적인 &lt;code&gt;MultiEmailField&lt;/code&gt; 클래스 에 넣기를 원하지 않습니다 . 대신 &lt;code&gt;recipients&lt;/code&gt; 필드에서 작동하는 정리 방법을 작성합니다 .</target>
        </trans-unit>
        <trans-unit id="aceb61eb4351dad879dda9b2731200ebcbce06e2" translate="yes" xml:space="preserve">
          <source>Continuing our example from above, you could change the default manager used when you query the &lt;code&gt;Person&lt;/code&gt; model like this:</source>
          <target state="translated">위의 예제를 계속 진행하여 &lt;code&gt;Person&lt;/code&gt; 모델 을 쿼리 할 때 사용되는 기본 관리자를 다음과 같이 변경할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="de7c9e50892f4db2ac9af5a082e27a7139717e30" translate="yes" xml:space="preserve">
          <source>Continuing our ongoing example, we can write the &lt;a href=&quot;../ref/models/fields#django.db.models.Field.formfield&quot;&gt;&lt;code&gt;formfield()&lt;/code&gt;&lt;/a&gt; method as:</source>
          <target state="translated">진행중인 예제를 계속하면서 &lt;a href=&quot;../ref/models/fields#django.db.models.Field.formfield&quot;&gt; &lt;code&gt;formfield()&lt;/code&gt; &lt;/a&gt; 메서드를 다음과 같이 작성할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="4405502bfbd98671211d09306e81c9df25477cd4" translate="yes" xml:space="preserve">
          <source>Continuing the above example, we need to define &lt;code&gt;CurrentTimeNode&lt;/code&gt;:</source>
          <target state="translated">위의 예제를 계속 진행하려면 &lt;code&gt;CurrentTimeNode&lt;/code&gt; 를 정의해야합니다 .</target>
        </trans-unit>
        <trans-unit id="187e8fa995249b524a5096b2858c0f31b6eb0e75" translate="yes" xml:space="preserve">
          <source>Contrarily to the &lt;a href=&quot;#std:templatetag-trans&quot;&gt;&lt;code&gt;trans&lt;/code&gt;&lt;/a&gt; tag, the &lt;code&gt;blocktrans&lt;/code&gt; tag allows you to mark complex sentences consisting of literals and variable content for translation by making use of placeholders:</source>
          <target state="translated">&lt;a href=&quot;#std:templatetag-trans&quot;&gt; &lt;code&gt;trans&lt;/code&gt; &lt;/a&gt; 태그와 반대로 &lt;code&gt;blocktrans&lt;/code&gt; 태그를 사용하면 자리 표시자를 사용하여 리터럴 및 가변 컨텐츠로 구성된 복잡한 문장을 표시 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3296398180a962f1c4599ecb5770b2a81fc18db0" translate="yes" xml:space="preserve">
          <source>Contrib and reusable apps</source>
          <target state="translated">활용 가능하고 재사용 가능한 앱</target>
        </trans-unit>
        <trans-unit id="ed3240e8665bc40b2d6222b1e3c5ce26beecf640" translate="yes" xml:space="preserve">
          <source>Contributing back to Django itself is the best way to see your own concerns addressed. This may seem daunting at first, but it&amp;rsquo;s a well-traveled path with documentation, tooling, and a community to support you. We&amp;rsquo;ll walk you through the entire process, so you can learn by example.</source>
          <target state="translated">Django 자체에 기여하는 것은 자신의 우려를 해결하는 가장 좋은 방법입니다. 처음에는 어려워 보일 수 있지만 문서, 툴링 및 커뮤니티를 지원하는 여행 경로입니다. 전체 과정을 안내하므로 예제를 통해 학습 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="bce115b0c925643288d6d66089149032ada8c603" translate="yes" xml:space="preserve">
          <source>Control characters</source>
          <target state="translated">제어 문자</target>
        </trans-unit>
        <trans-unit id="b154e4edab7aebc0af47c2562667941ef91db649" translate="yes" xml:space="preserve">
          <source>Controlling cache: Using other headers</source>
          <target state="translated">캐시 제어 : 다른 헤더 사용</target>
        </trans-unit>
        <trans-unit id="f35880afc483938e0a826ea644109cd0ca08b484" translate="yes" xml:space="preserve">
          <source>Controlling creation order for test databases</source>
          <target state="translated">테스트 데이터베이스의 작성 순서 제어</target>
        </trans-unit>
        <trans-unit id="7ac4ae3a9579cbec5691358ce474c0b0df2695e3" translate="yes" xml:space="preserve">
          <source>Controlling localization in templates</source>
          <target state="translated">템플릿에서 현지화 제어</target>
        </trans-unit>
        <trans-unit id="2c98a788da67114af3a0e49ab46a0ae821e68bb5" translate="yes" xml:space="preserve">
          <source>Controlling the order of migrations</source>
          <target state="translated">마이그레이션 순서 제어</target>
        </trans-unit>
        <trans-unit id="6574c3053a419a2444932d417f95327aff549414" translate="yes" xml:space="preserve">
          <source>Controlling transactions explicitly</source>
          <target state="translated">명시 적으로 거래 관리</target>
        </trans-unit>
        <trans-unit id="6d6b7cfbba43adbe608690d2bba0e22a0e13e5ec" translate="yes" xml:space="preserve">
          <source>Controls &lt;code&gt;#: filename:line&lt;/code&gt; comment lines in language files. If the option is:</source>
          <target state="translated">언어 파일에서 &lt;code&gt;#: filename:line&lt;/code&gt; 주석 행을 제어 합니다. 옵션이 다음과 같은 경우 :</target>
        </trans-unit>
        <trans-unit id="c4b7f71be578959fd6d23d2bbd5ba9bb07c414cf" translate="yes" xml:space="preserve">
          <source>Controls the current auto-escaping behavior. This tag takes either &lt;code&gt;on&lt;/code&gt; or &lt;code&gt;off&lt;/code&gt; as an argument and that determines whether auto-escaping is in effect inside the block. The block is closed with an &lt;code&gt;endautoescape&lt;/code&gt; ending tag.</source>
          <target state="translated">현재 자동 이스케이프 동작을 제어합니다. 이 태그는 인수로 &lt;code&gt;on&lt;/code&gt; 하거나 &lt;code&gt;off&lt;/code&gt; 하며 자동 이스케이프가 블록 내에서 유효한지 여부를 결정합니다. 블록은 &lt;code&gt;endautoescape&lt;/code&gt; 종료 태그로 닫힙니다 .</target>
        </trans-unit>
        <trans-unit id="b9d1f63c0dfa11d252b1ab38a64e01627e4e3b0d" translate="yes" xml:space="preserve">
          <source>Controls the migration framework&amp;rsquo;s reaction if this &lt;a href=&quot;#django.db.models.ForeignKey&quot;&gt;&lt;code&gt;ForeignKey&lt;/code&gt;&lt;/a&gt; is pointing at a swappable model. If it is &lt;code&gt;True&lt;/code&gt; - the default - then if the &lt;a href=&quot;#django.db.models.ForeignKey&quot;&gt;&lt;code&gt;ForeignKey&lt;/code&gt;&lt;/a&gt; is pointing at a model which matches the current value of &lt;code&gt;settings.AUTH_USER_MODEL&lt;/code&gt; (or another swappable model setting) the relationship will be stored in the migration using a reference to the setting, not to the model directly.</source>
          <target state="translated">이 &lt;a href=&quot;#django.db.models.ForeignKey&quot;&gt; &lt;code&gt;ForeignKey&lt;/code&gt; &lt;/a&gt; 가 교체 가능한 모델을 가리키는 경우 마이그레이션 프레임 워크의 반응을 제어합니다 . &lt;code&gt;True&lt;/code&gt; 인 경우 -기본값 &lt;a href=&quot;#django.db.models.ForeignKey&quot;&gt; &lt;code&gt;ForeignKey&lt;/code&gt; &lt;/a&gt; 가 현재 &lt;code&gt;settings.AUTH_USER_MODEL&lt;/code&gt; 값과 일치하는 모델을 가리키는 경우 AUTO_USER_MODEL (또는 다른 교체 가능한 모델 설정) 관계는 설정에 대한 참조를 사용하지 않고 설정에 대한 참조를 사용하여 마이그레이션에 저장됩니다. 모델 직접.</target>
        </trans-unit>
        <trans-unit id="7e5fe6453afeb245d890f34dc50aaf9282f5e1b4" translate="yes" xml:space="preserve">
          <source>Controls the migration framework&amp;rsquo;s reaction if this &lt;a href=&quot;#django.db.models.ManyToManyField&quot;&gt;&lt;code&gt;ManyToManyField&lt;/code&gt;&lt;/a&gt; is pointing at a swappable model. If it is &lt;code&gt;True&lt;/code&gt; - the default - then if the &lt;a href=&quot;#django.db.models.ManyToManyField&quot;&gt;&lt;code&gt;ManyToManyField&lt;/code&gt;&lt;/a&gt; is pointing at a model which matches the current value of &lt;code&gt;settings.AUTH_USER_MODEL&lt;/code&gt; (or another swappable model setting) the relationship will be stored in the migration using a reference to the setting, not to the model directly.</source>
          <target state="translated">이 &lt;a href=&quot;#django.db.models.ManyToManyField&quot;&gt; &lt;code&gt;ManyToManyField&lt;/code&gt; &lt;/a&gt; 가 교체 가능한 모델을 가리키는 경우 마이그레이션 프레임 워크의 반응을 제어합니다 . 이 경우 &lt;code&gt;True&lt;/code&gt; 기본 - - 다음 경우 &lt;a href=&quot;#django.db.models.ManyToManyField&quot;&gt; &lt;code&gt;ManyToManyField&lt;/code&gt; 이&lt;/a&gt; 의 현재 값과 일치하는 모델을 가리키고 &lt;code&gt;settings.AUTH_USER_MODEL&lt;/code&gt; (또는 다른 스왑 모델 설정) 관계가 없습니다로, 설정에 대한 참조를 사용하여 마이그레이션에 저장됩니다 모델 직접.</target>
        </trans-unit>
        <trans-unit id="96447b99d7e9abc6ce4b3abc13d4f488a8b1386b" translate="yes" xml:space="preserve">
          <source>Controls the test runner class that is used to execute tests. This value overrides the value provided by the &lt;a href=&quot;settings#std:setting-TEST_RUNNER&quot;&gt;&lt;code&gt;TEST_RUNNER&lt;/code&gt;&lt;/a&gt; setting.</source>
          <target state="translated">테스트를 실행하는 데 사용되는 테스트 러너 클래스를 제어합니다. 이 값은 &lt;a href=&quot;settings#std:setting-TEST_RUNNER&quot;&gt; &lt;code&gt;TEST_RUNNER&lt;/code&gt; &lt;/a&gt; 설정에서 제공 한 값보다 우선합니다 .</target>
        </trans-unit>
        <trans-unit id="db523bd92e8d56b60d8ceccede6318428181fa50" translate="yes" xml:space="preserve">
          <source>Controls where Django stores message data. Valid values are:</source>
          <target state="translated">Django가 메시지 데이터를 저장하는 위치를 제어합니다. 유효한 값은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="1dcdc7bebe7773531a558a1c056859dbf3cdff7f" translate="yes" xml:space="preserve">
          <source>Controls where Django stores session data. Included engines are:</source>
          <target state="translated">Django가 세션 데이터를 저장하는 위치를 제어합니다. 포함 된 엔진은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="c7d7b257968400dc7ed02b7e6eeaa22323ece797" translate="yes" xml:space="preserve">
          <source>Controls where on the page the actions bar appears. By default, the admin changelist displays actions at the top of the page (&lt;code&gt;actions_on_top = True;
actions_on_bottom = False&lt;/code&gt;).</source>
          <target state="translated">페이지에서 작업 표시 줄이 나타나는 위치를 제어합니다. 기본적으로 관리자 변경 목록은 페이지 상단에 작업을 표시합니다 ( &lt;code&gt;actions_on_top = True; actions_on_bottom = False&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="e5925bed528d2d1afb2ff84897cdc886191f6161" translate="yes" xml:space="preserve">
          <source>Controls whether a selection counter is displayed next to the action dropdown. By default, the admin changelist will display it (&lt;code&gt;actions_selection_counter = True&lt;/code&gt;).</source>
          <target state="translated">작업 드롭 다운 옆에 선택 카운터를 표시할지 여부를 조정합니다. 기본적으로 관리자 변경 목록은이를 표시합니다 ( &lt;code&gt;actions_selection_counter = True&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="e488b00f6003e3487cf3f6ea18fe1dbdb084857c" translate="yes" xml:space="preserve">
          <source>Controls whether or not a constraint should be created in the database for this foreign key. The default is &lt;code&gt;True&lt;/code&gt;, and that&amp;rsquo;s almost certainly what you want; setting this to &lt;code&gt;False&lt;/code&gt; can be very bad for data integrity. That said, here are some scenarios where you might want to do this:</source>
          <target state="translated">이 외래 키에 대한 데이터베이스에 제약 조건을 만들어야하는지 여부를 제어합니다. 기본값은 &lt;code&gt;True&lt;/code&gt; 이며 거의 확실하게 원하는 것입니다. 이것을 &lt;code&gt;False&lt;/code&gt; 로 설정하면 데이터 무결성이 매우 나빠질 수 있습니다. 즉, 다음과 같은 시나리오가 있습니다.</target>
        </trans-unit>
        <trans-unit id="9df07e9c9d2ef71a7e2e53a925a500dda80d56c9" translate="yes" xml:space="preserve">
          <source>Controls whether or not constraints should be created in the database for the foreign keys in the intermediary table. The default is &lt;code&gt;True&lt;/code&gt;, and that&amp;rsquo;s almost certainly what you want; setting this to &lt;code&gt;False&lt;/code&gt; can be very bad for data integrity. That said, here are some scenarios where you might want to do this:</source>
          <target state="translated">중개 테이블의 외래 키에 대한 데이터베이스에 제한 조건을 작성해야하는지 여부를 제어합니다. 기본값은 &lt;code&gt;True&lt;/code&gt; 이며 거의 확실하게 원하는 것입니다. 이것을 &lt;code&gt;False&lt;/code&gt; 로 설정하면 데이터 무결성이 매우 나빠질 수 있습니다. 즉, 다음과 같은 시나리오가 있습니다.</target>
        </trans-unit>
        <trans-unit id="9494d96246d9e4b07c2935a61d2709b70980f091" translate="yes" xml:space="preserve">
          <source>Conversely, if (for some strange reason) you want Django to output natural keys during serialization, but &lt;em&gt;not&lt;/em&gt; be able to load those key values, just don&amp;rsquo;t define the &lt;code&gt;get_by_natural_key()&lt;/code&gt; method.</source>
          <target state="translated">반대로, (어떤 이상한 이유로) 당신은 직렬화하는 동안 출력 자연 키에 장고를 원하지만, 경우 &lt;em&gt;없는&lt;/em&gt; 단지 정의하지, 그 키 값을로드 할 수 &lt;code&gt;get_by_natural_key()&lt;/code&gt; 메소드를.</target>
        </trans-unit>
        <trans-unit id="8944328622412e4c50234bcd60eb29184d97f2d2" translate="yes" xml:space="preserve">
          <source>Conversion functions</source>
          <target state="translated">변환 기능</target>
        </trans-unit>
        <trans-unit id="190ebbb02c1204703af9a12541fd89c32a534f48" translate="yes" xml:space="preserve">
          <source>Conversion to local time isn&amp;rsquo;t always appropriate &amp;ndash; you may be generating output for computers rather than for humans. The following filters and tags, provided by the &lt;code&gt;tz&lt;/code&gt; template tag library, allow you to control the time zone conversions.</source>
          <target state="translated">현지 시간으로 변환하는 것이 항상 적절한 것은 아닙니다. 사람이 아닌 컴퓨터에서 출력을 생성 할 수 있습니다. &lt;code&gt;tz&lt;/code&gt; 템플릿 태그 라이브러리 에서 제공하는 다음 필터 및 태그를 사용하면 시간대 변환을 제어 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="bf9ee11ef37c5bf3a42a21bffdc8cdd4cabb0b98" translate="yes" xml:space="preserve">
          <source>Convert a file system path to a URI portion that is suitable for inclusion in a URL. The path is assumed to be either UTF-8 bytes or string.</source>
          <target state="translated">파일 시스템 경로를 URL에 포함하기에 적합한 URI 부분으로 변환하십시오. 경로는 UTF-8 바이트 또는 문자열 인 것으로 가정합니다.</target>
        </trans-unit>
        <trans-unit id="c14aadc6f430aec0f5b89fd139372539991eba2a" translate="yes" xml:space="preserve">
          <source>Convert an Internationalized Resource Identifier (IRI) portion to a URI portion that is suitable for inclusion in a URL.</source>
          <target state="translated">IRI (Internationalized Resource Identifier) ​​부분을 URL에 포함하기에 적합한 URI 부분으로 변환하십시오.</target>
        </trans-unit>
        <trans-unit id="59c8520e24cd282ffd2c300af62902a5fb2a771e" translate="yes" xml:space="preserve">
          <source>Convert the URLconf.</source>
          <target state="translated">URLconf를 변환하십시오.</target>
        </trans-unit>
        <trans-unit id="877d071a083df4941810c83461727b6498800fe5" translate="yes" xml:space="preserve">
          <source>Converting Python objects to query values</source>
          <target state="translated">파이썬 객체를 쿼리 값으로 변환</target>
        </trans-unit>
        <trans-unit id="946fe91972de9e63b56258bac7bd01d9e7040979" translate="yes" xml:space="preserve">
          <source>Converting field data for serialization</source>
          <target state="translated">직렬화를 위해 필드 데이터 변환</target>
        </trans-unit>
        <trans-unit id="e31453473f160b9159b4c71f0570be3844679c73" translate="yes" xml:space="preserve">
          <source>Converting query values to database values</source>
          <target state="translated">쿼리 값을 데이터베이스 값으로 변환</target>
        </trans-unit>
        <trans-unit id="7856c753afe0cd24cd03cfa58759f394e4cb11b3" translate="yes" xml:space="preserve">
          <source>Converting to ASCII if &lt;code&gt;allow_unicode&lt;/code&gt; is &lt;code&gt;False&lt;/code&gt; (the default).</source>
          <target state="translated">&lt;code&gt;allow_unicode&lt;/code&gt; 가 &lt;code&gt;False&lt;/code&gt; (기본값) 인 경우 ASCII로 변환</target>
        </trans-unit>
        <trans-unit id="99f1111f3091d1d7534cc3a81f16babd8ab75df0" translate="yes" xml:space="preserve">
          <source>Converting to lowercase.</source>
          <target state="translated">소문자로 변환</target>
        </trans-unit>
        <trans-unit id="14370b561d154884d95603823bcf09249b64b4d1" translate="yes" xml:space="preserve">
          <source>Converting values to Python objects</source>
          <target state="translated">값을 Python 객체로 변환</target>
        </trans-unit>
        <trans-unit id="9b1cce06f41ce11386663380c98bec1f00c59b42" translate="yes" xml:space="preserve">
          <source>Converts &lt;code&gt;obj&lt;/code&gt; to a string. Used to serialize the value of the field.</source>
          <target state="translated">&lt;code&gt;obj&lt;/code&gt; 를 문자열로 변환 합니다. 필드 값을 직렬화하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="41c755c5b20ef8849e03ee59aaf45f1dbe488321" translate="yes" xml:space="preserve">
          <source>Converts &lt;code&gt;value&lt;/code&gt; to a backend-specific value. By default it returns &lt;code&gt;value&lt;/code&gt; if &lt;code&gt;prepared=True&lt;/code&gt; and &lt;a href=&quot;#django.db.models.Field.get_prep_value&quot;&gt;&lt;code&gt;get_prep_value()&lt;/code&gt;&lt;/a&gt; if is &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;value&lt;/code&gt; 을 백엔드 별 값으로 변환 합니다 . 기본적으로 &lt;a href=&quot;#django.db.models.Field.get_prep_value&quot;&gt; &lt;code&gt;get_prep_value()&lt;/code&gt; &lt;/a&gt; &lt;code&gt;prepared=True&lt;/code&gt; 이면 &lt;code&gt;value&lt;/code&gt; 을 반환 하고 &lt;code&gt;False&lt;/code&gt; 이면 get_prep_value ()를 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="10c888f74331d7656347f7a04df7c5cb54e286c8" translate="yes" xml:space="preserve">
          <source>Converts URLs and email addresses in text into clickable links.</source>
          <target state="translated">텍스트의 URL 및 이메일 주소를 클릭 가능한 링크로 변환합니다.</target>
        </trans-unit>
        <trans-unit id="d847ac56760c372bb5b94f78f62438ea26896715" translate="yes" xml:space="preserve">
          <source>Converts URLs and email addresses into clickable links just like &lt;a href=&quot;#urlize&quot;&gt;urlize&lt;/a&gt;, but truncates URLs longer than the given character limit.</source>
          <target state="translated">&lt;a href=&quot;#urlize&quot;&gt;urlize&lt;/a&gt; 와 같이 URL과 이메일 주소를 클릭 가능한 링크로 변환 하지만 지정된 문자 제한보다 긴 URL을 자릅니다.</target>
        </trans-unit>
        <trans-unit id="751a9da24aca474705b5c4e3e7b28fb048fee25f" translate="yes" xml:space="preserve">
          <source>Converts a Uniform Resource Identifier into an Internationalized Resource Identifier.</source>
          <target state="translated">Uniform Resource Identifier를 국제화 된 Resource Identifier로 변환합니다.</target>
        </trans-unit>
        <trans-unit id="f1982b3dcc1ede0fbfcf2f2b99d326751d14c87b" translate="yes" xml:space="preserve">
          <source>Converts a base 36 string to an integer.</source>
          <target state="translated">밑이 36 인 문자열을 정수로 변환합니다.</target>
        </trans-unit>
        <trans-unit id="71f93e7e3f308d74df45af186ef9bea1f8e5a4e2" translate="yes" xml:space="preserve">
          <source>Converts a function decorator into a method decorator. It can be used to decorate methods or classes; in the latter case, &lt;code&gt;name&lt;/code&gt; is the name of the method to be decorated and is required.</source>
          <target state="translated">함수 데코레이터를 메소드 데코레이터로 변환합니다. 메소드 또는 클래스를 장식하는 데 사용할 수 있습니다. 후자의 경우, &lt;code&gt;name&lt;/code&gt; 은 장식 할 방법의 이름이며 필수입니다.</target>
        </trans-unit>
        <trans-unit id="a3ff663b74bd4920025fcbb882fe213137b6b205" translate="yes" xml:space="preserve">
          <source>Converts a large integer (or a string representation of an integer) to a friendly text representation. Translates &lt;code&gt;1.0&lt;/code&gt; as a singular phrase and all other numeric values as plural, this may be incorrect for some languages. Works best for numbers over 1 million.</source>
          <target state="translated">큰 정수 (또는 정수의 문자열 표현)를 친숙한 텍스트 표현으로 변환합니다. &lt;code&gt;1.0&lt;/code&gt; 을 단일 구로, 기타 모든 숫자 값을 복수로 번역하면 일부 언어에서는 올바르지 않을 수 있습니다. 백만 이상의 숫자에 가장 적합합니다.</target>
        </trans-unit>
        <trans-unit id="7c9551376de4074e9ca7c4dd6bfeea4e6cd76d89" translate="yes" xml:space="preserve">
          <source>Converts a numeric field or expression from degrees to radians.</source>
          <target state="translated">숫자 필드 또는 표현식을도에서 라디안으로 변환합니다.</target>
        </trans-unit>
        <trans-unit id="4f2319f1c30478b4232e670273c40e44ebf9f05c" translate="yes" xml:space="preserve">
          <source>Converts a numeric field or expression from radians to degrees.</source>
          <target state="translated">숫자 필드 또는 표현식을 라디안에서도 단위로 변환합니다.</target>
        </trans-unit>
        <trans-unit id="6d2618a28e846fb11c7628bfca859ef19787afd6" translate="yes" xml:space="preserve">
          <source>Converts a phone number (possibly containing letters) to its numerical equivalent.</source>
          <target state="translated">전화 번호 (문자를 포함 할 수 있음)를 해당하는 숫자로 변환합니다.</target>
        </trans-unit>
        <trans-unit id="577743ec7452c0285cd1f9ee850658b64049a5fb" translate="yes" xml:space="preserve">
          <source>Converts a positive integer to a base 36 string.</source>
          <target state="translated">양의 정수를 밑이 36 인 문자열로 변환합니다.</target>
        </trans-unit>
        <trans-unit id="6176ccd3f9c61f695f20d4d3c989543ba3906ed8" translate="yes" xml:space="preserve">
          <source>Converts a string into all lowercase.</source>
          <target state="translated">문자열을 모두 소문자로 변환합니다.</target>
        </trans-unit>
        <trans-unit id="88a8344fd2e4b3cb087ff90b842c79148cc94371" translate="yes" xml:space="preserve">
          <source>Converts a string into all uppercase.</source>
          <target state="translated">문자열을 모두 대문자로 변환합니다.</target>
        </trans-unit>
        <trans-unit id="d55d52a8a6c062c508ef151ae8a79d0dad7a1d2c" translate="yes" xml:space="preserve">
          <source>Converts a string into titlecase by making words start with an uppercase character and the remaining characters lowercase. This tag makes no effort to keep &amp;ldquo;trivial words&amp;rdquo; in lowercase.</source>
          <target state="translated">단어를 대문자로 시작하고 나머지 문자를 소문자로 만들어 문자열을 제목으로 변환합니다. 이 태그는 &quot;사소한 단어&quot;를 소문자로 유지하려고 노력하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="dda103d7b6e149b66f5daf5c97e9e68dedee4d62" translate="yes" xml:space="preserve">
          <source>Converts a string to a URL slug by:</source>
          <target state="translated">다음을 통해 문자열을 URL 슬러그로 변환합니다.</target>
        </trans-unit>
        <trans-unit id="9b02d783cffedff30f7c0486752888ac67c9dce0" translate="yes" xml:space="preserve">
          <source>Converts a value as returned by the database to a Python object. It is the reverse of &lt;a href=&quot;#django.db.models.Field.get_prep_value&quot;&gt;&lt;code&gt;get_prep_value()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">데이터베이스에서 반환 한 값을 Python 객체로 변환합니다. &lt;a href=&quot;#django.db.models.Field.get_prep_value&quot;&gt; &lt;code&gt;get_prep_value()&lt;/code&gt; &lt;/a&gt; 의 반대입니다 .</target>
        </trans-unit>
        <trans-unit id="6cc08b0cc0ce67195f91918da27fb75121e9c300" translate="yes" xml:space="preserve">
          <source>Converts all newlines in a piece of plain text to HTML line breaks (&lt;code&gt;&amp;lt;br&amp;gt;&lt;/code&gt;).</source>
          <target state="translated">일반 텍스트 조각의 모든 줄 바꿈을 HTML 줄 바꿈 ( &lt;code&gt;&amp;lt;br&amp;gt;&lt;/code&gt; )으로 변환합니다.</target>
        </trans-unit>
        <trans-unit id="63102052e724046b4c7cfc712d45726581d79095" translate="yes" xml:space="preserve">
          <source>Converts an IRI (Internationalized Resource Identifier) to a string that is suitable for including in a URL. This is necessary if you&amp;rsquo;re trying to use strings containing non-ASCII characters in a URL.</source>
          <target state="translated">IRI (Internationalized Resource Identifier)를 URL에 포함하기에 적합한 문자열로 변환합니다. URL에 ASCII가 아닌 문자가 포함 된 문자열을 사용하려는 경우에 필요합니다.</target>
        </trans-unit>
        <trans-unit id="c065bc0735425120d0f70837c91d785bc012dad9" translate="yes" xml:space="preserve">
          <source>Converts an aware &lt;a href=&quot;https://docs.python.org/3/library/datetime.html#datetime.datetime&quot;&gt;&lt;code&gt;datetime&lt;/code&gt;&lt;/a&gt; to a different time zone, by default the &lt;a href=&quot;../topics/i18n/timezones#default-current-time-zone&quot;&gt;current time zone&lt;/a&gt;.</source>
          <target state="translated">인식 &lt;a href=&quot;https://docs.python.org/3/library/datetime.html#datetime.datetime&quot;&gt; &lt;code&gt;datetime&lt;/code&gt; &lt;/a&gt; 을 다른 시간대 (기본적으로 &lt;a href=&quot;../topics/i18n/timezones#default-current-time-zone&quot;&gt;현재&lt;/a&gt; 시간대)로 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="24f58866c9ad2f0e5b48d3a41964a61f6805e6d2" translate="yes" xml:space="preserve">
          <source>Converts an integer or float (or a string representation of either) to a string containing commas every three digits.</source>
          <target state="translated">정수 또는 float (또는 문자열 표현)을 세 자리마다 쉼표가 포함 된 문자열로 변환합니다.</target>
        </trans-unit>
        <trans-unit id="d77e5c76b3715d860b42b33499f84db56abe1350" translate="yes" xml:space="preserve">
          <source>Converts an integer to its ordinal as a string.</source>
          <target state="translated">정수를 문자열의 서수로 변환합니다.</target>
        </trans-unit>
        <trans-unit id="fe150d1e0f5f7fb120999c3b0f99edafb6daa81b" translate="yes" xml:space="preserve">
          <source>Converts the value into the correct Python object. It acts as the reverse of &lt;a href=&quot;#django.db.models.Field.value_to_string&quot;&gt;&lt;code&gt;value_to_string()&lt;/code&gt;&lt;/a&gt;, and is also called in &lt;a href=&quot;instances#django.db.models.Model.clean&quot;&gt;&lt;code&gt;clean()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">값을 올바른 Python 객체로 변환합니다. &lt;a href=&quot;#django.db.models.Field.value_to_string&quot;&gt; &lt;code&gt;value_to_string()&lt;/code&gt; &lt;/a&gt; 의 역으로 ​​작동하며 &lt;a href=&quot;instances#django.db.models.Model.clean&quot;&gt; &lt;code&gt;clean()&lt;/code&gt; &lt;/a&gt; 에서 호출됩니다 .</target>
        </trans-unit>
        <trans-unit id="ad1df7b5a7e49ff77c91cc2a5edd4b7412912653" translate="yes" xml:space="preserve">
          <source>Converts this geometry to canonical form:</source>
          <target state="translated">이 지오메트리를 표준 형식으로 변환합니다.</target>
        </trans-unit>
        <trans-unit id="5609a3d54449e54a1186321cbbae77971c7f0b88" translate="yes" xml:space="preserve">
          <source>Converts to ASCII. Converts spaces to hyphens. Removes characters that aren&amp;rsquo;t alphanumerics, underscores, or hyphens. Converts to lowercase. Also strips leading and trailing whitespace.</source>
          <target state="translated">ASCII로 변환합니다. 공백을 하이픈으로 변환합니다. 영숫자, 밑줄 또는 하이픈이 아닌 문자를 제거합니다. 소문자로 변환합니다. 또한 선행 및 후행 공백을 제거합니다.</target>
        </trans-unit>
        <trans-unit id="3c899c354a18cb19ad6d8b51fc4b5f91ac62c334" translate="yes" xml:space="preserve">
          <source>Coordinate Retrieval</source>
          <target state="translated">좌표 검색</target>
        </trans-unit>
        <trans-unit id="a7403995ddabd0bb442686cb413956962db613f4" translate="yes" xml:space="preserve">
          <source>Coordinate System Objects</source>
          <target state="translated">좌표계 객체</target>
        </trans-unit>
        <trans-unit id="8662f261b71825c211e5fdfa612126122f90357e" translate="yes" xml:space="preserve">
          <source>Coordinates of the top left origin of the raster in the spatial reference system of the source, as a point object with &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt; members.</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; 및 &lt;code&gt;y&lt;/code&gt; 멤버가 있는 점 객체로서 소스의 공간 참조 시스템에서 래스터의 왼쪽 상단 원점의 좌표입니다 .</target>
        </trans-unit>
        <trans-unit id="20a70e2212ed651a12300fa7f69b3920ae57340f" translate="yes" xml:space="preserve">
          <source>Copy the &lt;code&gt;AddField&lt;/code&gt; operation from the auto-generated migration (the first of the three new files) to the last migration, change &lt;code&gt;AddField&lt;/code&gt; to &lt;code&gt;AlterField&lt;/code&gt;, and add imports of &lt;code&gt;uuid&lt;/code&gt; and &lt;code&gt;models&lt;/code&gt;. For example:</source>
          <target state="translated">복사 &lt;code&gt;AddField&lt;/code&gt; 의 자동 생성 된 마이그레이션 마지막으로 마이그레이션 (세 개의 새 파일의 첫 번째), 변경에서 작업을 &lt;code&gt;AddField&lt;/code&gt; 에 &lt;code&gt;AlterField&lt;/code&gt; , 그리고 수입 추가 &lt;code&gt;uuid&lt;/code&gt; 와 &lt;code&gt;models&lt;/code&gt; . 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="788fd368b693b80faee754d2935c349108572591" translate="yes" xml:space="preserve">
          <source>Copy the admin static files so that they live within your Apache document root.</source>
          <target state="translated">관리 정적 파일을 Apache 문서 루트 내에 있도록 복사하십시오.</target>
        </trans-unit>
        <trans-unit id="1d14efc430d4c9769a3ab6b2653575f46529a76b" translate="yes" xml:space="preserve">
          <source>Copying model instances</source>
          <target state="translated">모델 인스턴스 복사</target>
        </trans-unit>
        <trans-unit id="4f4c0c82a62b49bfdcecec04410c6ce9b6600f87" translate="yes" xml:space="preserve">
          <source>Copying the data across</source>
          <target state="translated">데이터 복사</target>
        </trans-unit>
        <trans-unit id="e342de6e92ac926565fd339c2f3c30925c376803" translate="yes" xml:space="preserve">
          <source>Core Settings</source>
          <target state="translated">핵심 설정</target>
        </trans-unit>
        <trans-unit id="0973170c5ea97231549e5e3fd104575d8b0565e1" translate="yes" xml:space="preserve">
          <source>Core Settings Topical Index</source>
          <target state="translated">핵심 설정 주제 색인</target>
        </trans-unit>
        <trans-unit id="3b5cd72f2450459ecb150f3e1de55a5c656262b9" translate="yes" xml:space="preserve">
          <source>Core field arguments</source>
          <target state="translated">핵심 필드 인수</target>
        </trans-unit>
        <trans-unit id="fc69874cbbf2b688bae436665cf59c2abb826f24" translate="yes" xml:space="preserve">
          <source>Core system checks</source>
          <target state="translated">핵심 시스템 점검</target>
        </trans-unit>
        <trans-unit id="d0f588fcafb5874172dc936c72cc314dd639e0b2" translate="yes" xml:space="preserve">
          <source>Counting in the opposite direction works in conjunction with distinct():</source>
          <target state="translated">반대 방향으로 계산하면 distinct ()와 함께 작동합니다.</target>
        </trans-unit>
        <trans-unit id="655362dd6b3d43b1a50bdb4f16f4cb510ef4b75d" translate="yes" xml:space="preserve">
          <source>Covers all the model related APIs including model fields, related objects, and &lt;code&gt;QuerySet&lt;/code&gt;.</source>
          <target state="translated">모델 필드, 관련 객체 및 &lt;code&gt;QuerySet&lt;/code&gt; 을 포함한 모든 모델 관련 API를 다룹니다 .</target>
        </trans-unit>
        <trans-unit id="ec53b2c8ed1d8e7f9a3b2bf5c554b068c0e49b96" translate="yes" xml:space="preserve">
          <source>Covers built-in tags, built-in filters, using an alternative template, language, and more.</source>
          <target state="translated">대체 템플릿, 언어 등을 사용하여 내장 태그, 내장 필터를 다룹니다.</target>
        </trans-unit>
        <trans-unit id="0610776ae159e53430f541c68b1ccbb538f36fcd" translate="yes" xml:space="preserve">
          <source>Covers the full API reference, including form fields, form widgets, and form and field validation.</source>
          <target state="translated">양식 필드, 양식 위젯 및 양식 및 필드 유효성 검사를 포함한 전체 API 참조를 다룹니다.</target>
        </trans-unit>
        <trans-unit id="05d685caebaa4b6f75f7658512436b86c05cd4ba" translate="yes" xml:space="preserve">
          <source>Covers the schema operations API, special operations, and writing your own operations.</source>
          <target state="translated">스키마 작업 API, 특수 작업 및 자체 작업 작성을 다룹니다.</target>
        </trans-unit>
        <trans-unit id="67adc58703a9da20e63462f7e347e781289f5b6b" translate="yes" xml:space="preserve">
          <source>Create a &lt;code&gt;base.html&lt;/code&gt; template that holds the main look-and-feel of your site.</source>
          <target state="translated">사이트의 기본 모양과 느낌을 담고 있는 &lt;code&gt;base.html&lt;/code&gt; 템플릿을 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="a8fbf7b36e8022314a4790339f2543f3fbf3f923" translate="yes" xml:space="preserve">
          <source>Create a &lt;code&gt;base_SECTIONNAME.html&lt;/code&gt; template for each &amp;ldquo;section&amp;rdquo; of your site. For example, &lt;code&gt;base_news.html&lt;/code&gt;, &lt;code&gt;base_sports.html&lt;/code&gt;. These templates all extend &lt;code&gt;base.html&lt;/code&gt; and include section-specific styles/design.</source>
          <target state="translated">사이트의 각 &quot;섹션&quot;에 대해 &lt;code&gt;base_SECTIONNAME.html&lt;/code&gt; 템플릿을 만듭니다 . 예를 들어 &lt;code&gt;base_news.html&lt;/code&gt; , &lt;code&gt;base_sports.html&lt;/code&gt; 입니다. 이 템플릿은 모두 &lt;code&gt;base.html&lt;/code&gt; 을 확장 하며 섹션 별 스타일 / 디자인을 포함합니다.</target>
        </trans-unit>
        <trans-unit id="cc749cd3971dbe897724bd6dd8564d3ddcf6f67c" translate="yes" xml:space="preserve">
          <source>Create a &lt;code&gt;django-polls/LICENSE&lt;/code&gt; file. Choosing a license is beyond the scope of this tutorial, but suffice it to say that code released publicly without a license is &lt;em&gt;useless&lt;/em&gt;. Django and many Django-compatible apps are distributed under the BSD license; however, you&amp;rsquo;re free to pick your own license. Just be aware that your licensing choice will affect who is able to use your code.</source>
          <target state="translated">&lt;code&gt;django-polls/LICENSE&lt;/code&gt; 파일을 작성 하십시오. 라이센스 선택은이 튜토리얼의 범위를 벗어나지 만 라이센스없이 공개적으로 공개 된 코드는 &lt;em&gt;쓸모&lt;/em&gt; 가 &lt;em&gt;없다고&lt;/em&gt; 말하기에 충분합니다 . Django 및 많은 Django 호환 앱은 BSD 라이센스에 따라 배포됩니다. 그러나 자신의 라이센스를 자유롭게 선택할 수 있습니다. 라이센스 선택은 코드를 사용할 수있는 사람에게 영향을 미칩니다.</target>
        </trans-unit>
        <trans-unit id="72e2bad0947a098145039bda8135653551af8fc5" translate="yes" xml:space="preserve">
          <source>Create a &lt;code&gt;templates&lt;/code&gt; directory in your project directory (the one that contains &lt;code&gt;manage.py&lt;/code&gt;). Templates can live anywhere on your filesystem that Django can access. (Django runs as whatever user your server runs.) However, keeping your templates within the project is a good convention to follow.</source>
          <target state="translated">프로젝트 디렉토리 ( &lt;code&gt;templates&lt;/code&gt; . &lt;code&gt;manage.py&lt;/code&gt; 포함 )에 템플리트 디렉토리를 작성하십시오 . 템플릿은 Django가 액세스 할 수있는 파일 시스템의 어느 곳에 나있을 수 있습니다. (Django는 서버가 실행하는 모든 사용자로 실행됩니다.) 그러나 템플릿을 프로젝트 내에서 유지하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="8591541ba0c61f55fbd6a67ce8d050b87767b7b5" translate="yes" xml:space="preserve">
          <source>Create a New Project</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60dcc14e8d90fd94874dc780b8a0352d4414ebcf" translate="yes" xml:space="preserve">
          <source>Create a Python database-access API for accessing &lt;code&gt;Question&lt;/code&gt; and &lt;code&gt;Choice&lt;/code&gt; objects.</source>
          <target state="translated">&lt;code&gt;Question&lt;/code&gt; 및 &lt;code&gt;Choice&lt;/code&gt; 객체 에 액세스하기위한 Python 데이터베이스 액세스 API를 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="43f4729d746052323bea080e3291aec1bad94b49" translate="yes" xml:space="preserve">
          <source>Create a Restaurant. Pass the ID of the &amp;ldquo;parent&amp;rdquo; object as this object&amp;rsquo;s ID:</source>
          <target state="translated">식당을 만듭니다. &amp;ldquo;부모&amp;rdquo;개체의 ID를이 개체의 ID로 전달하십시오.</target>
        </trans-unit>
        <trans-unit id="836dff9f23282905fc38c81755a6f798c674bb12" translate="yes" xml:space="preserve">
          <source>Create a Spatial Database</source>
          <target state="translated">공간 데이터베이스 생성</target>
        </trans-unit>
        <trans-unit id="852d14595eb7534a3b7c4dd3e6b61e01f0ddc46b" translate="yes" xml:space="preserve">
          <source>Create a couple of Places:</source>
          <target state="translated">장소 몇 개를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="7ad262f4aaf5e201de7e9d7e8303a9b32e7d21d2" translate="yes" xml:space="preserve">
          <source>Create a database schema (&lt;code&gt;CREATE TABLE&lt;/code&gt; statements) for this app.</source>
          <target state="translated">이 앱에 대한 데이터베이스 스키마 ( &lt;code&gt;CREATE TABLE&lt;/code&gt; 문)를 작성하십시오 .</target>
        </trans-unit>
        <trans-unit id="5c1281cb56285a7b07dc433a65ef11706d09c808" translate="yes" xml:space="preserve">
          <source>Create a few &lt;code&gt;Publications&lt;/code&gt;:</source>
          <target state="translated">몇 가지 &lt;code&gt;Publications&lt;/code&gt; 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="2c77fdc7f75b9f396d557578b69ed93e72fdfce5" translate="yes" xml:space="preserve">
          <source>Create a few Reporters:</source>
          <target state="translated">몇 명의 기자를 작성하십시오.</target>
        </trans-unit>
        <trans-unit id="d7cb094b62d7a2aec00d853cc276175047b6ecc1" translate="yes" xml:space="preserve">
          <source>Create a file &lt;code&gt;django-polls/README.rst&lt;/code&gt; with the following contents:</source>
          <target state="translated">다음 내용으로 &lt;code&gt;django-polls/README.rst&lt;/code&gt; 파일을 작성하십시오 .</target>
        </trans-unit>
        <trans-unit id="c2a14ba9ac0e0b05614c2104e006d32373be6b90" translate="yes" xml:space="preserve">
          <source>Create a new article:</source>
          <target state="translated">새 기사를 작성하십시오.</target>
        </trans-unit>
        <trans-unit id="3ac21fa26bcebb273cb8fb212beed3074ac542ac" translate="yes" xml:space="preserve">
          <source>Create a new virtual environment by running:</source>
          <target state="translated">다음을 실행하여 새 가상 환경을 작성하십시오.</target>
        </trans-unit>
        <trans-unit id="5db3963994f9c87b261747170405214fe69ce219" translate="yes" xml:space="preserve">
          <source>Create a subclass of &lt;code&gt;django.contrib.auth.hashers.PBKDF2PasswordHasher&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;django.contrib.auth.hashers.PBKDF2PasswordHasher&lt;/code&gt; 의 서브 클래스를 작성하십시오 .</target>
        </trans-unit>
        <trans-unit id="b752c6e084b6efe17f993fbe10934f428ec7656e" translate="yes" xml:space="preserve">
          <source>Create a symbolic link to each file instead of copying.</source>
          <target state="translated">복사하는 대신 각 파일에 대한 심볼릭 링크를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="b08cabfe70f421bd36807a1a99bc3b26ff7e9ce3" translate="yes" xml:space="preserve">
          <source>Create a symbolic link to the admin static files from within your document root (this may require &lt;code&gt;+FollowSymLinks&lt;/code&gt; in your Apache configuration).</source>
          <target state="translated">문서 루트 내에서 관리 정적 파일에 대한 심볼릭 링크를 만듭니다 ( Apache 구성에서 &lt;code&gt;+FollowSymLinks&lt;/code&gt; 가 필요할 수 있음 ).</target>
        </trans-unit>
        <trans-unit id="6c3fb40d22a3a9a6c121f6cc44971a526dffb546" translate="yes" xml:space="preserve">
          <source>Create a test database, as described in &lt;a href=&quot;../topics/testing/overview#the-test-database&quot;&gt;The test database&lt;/a&gt;.</source>
          <target state="translated">에 설명 된대로, 테스트 데이터베이스를 만들고 &lt;a href=&quot;../topics/testing/overview#the-test-database&quot;&gt;테스트 데이터베이스&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="8593879fbb8fbdaa981c410607b1834b6196de0b" translate="yes" xml:space="preserve">
          <source>Create a test to expose the bug</source>
          <target state="translated">버그 노출 테스트 작성</target>
        </trans-unit>
        <trans-unit id="a8c5a3c03ddfcf8c589b3f218a2a3ff0c9214390" translate="yes" xml:space="preserve">
          <source>Create a view that can set the current timezone:</source>
          <target state="translated">현재 시간대를 설정할 수있는보기를 작성하십시오.</target>
        </trans-unit>
        <trans-unit id="a4537affcd2696306e2ca6cd704323f72090d7e6" translate="yes" xml:space="preserve">
          <source>Create an &lt;code&gt;Article&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;Article&lt;/code&gt; 만들기 :</target>
        </trans-unit>
        <trans-unit id="77283d7b31a87604678318131c2e4fd7ade2e321" translate="yes" xml:space="preserve">
          <source>Create an Article via the Reporter object:</source>
          <target state="translated">Reporter 객체를 통해 기사를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="1f090dffea140d5e0d0950a1320f5ed657c94aed" translate="yes" xml:space="preserve">
          <source>Create an Article:</source>
          <target state="translated">기사 만들기 :</target>
        </trans-unit>
        <trans-unit id="158833a98ff083701681b6601c3740425dc98258" translate="yes" xml:space="preserve">
          <source>Create an admin user:</source>
          <target state="translated">관리자를 작성하십시오.</target>
        </trans-unit>
        <trans-unit id="8357f0e20d9e4d86bb2f611b84223b374e8ad2e3" translate="yes" xml:space="preserve">
          <source>Create and add a &lt;code&gt;Publication&lt;/code&gt; to an &lt;code&gt;Article&lt;/code&gt; in one step using &lt;a href=&quot;../../../ref/models/relations#django.db.models.fields.related.RelatedManager.create&quot;&gt;&lt;code&gt;create()&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">&lt;a href=&quot;../../../ref/models/relations#django.db.models.fields.related.RelatedManager.create&quot;&gt; &lt;code&gt;create()&lt;/code&gt; &lt;/a&gt; 사용하여 한 단계 로 &lt;code&gt;Article&lt;/code&gt; 에 &lt;code&gt;Publication&lt;/code&gt; 을 작성하고 추가하십시오 .</target>
        </trans-unit>
        <trans-unit id="b5961a59feb5d12c74a29c20edc10106800d8f25" translate="yes" xml:space="preserve">
          <source>Create another &lt;code&gt;Article&lt;/code&gt;, and set it to appear in the &lt;code&gt;Publications&lt;/code&gt;:</source>
          <target state="translated">다른 &lt;code&gt;Article&lt;/code&gt; 을 만들고 &lt;code&gt;Publications&lt;/code&gt; 에 표시되도록 설정하십시오 .</target>
        </trans-unit>
        <trans-unit id="d6fb6c99afc76608b4ddc291508c26a6a9320973" translate="yes" xml:space="preserve">
          <source>Create database superuser</source>
          <target state="translated">데이터베이스 수퍼 유저 작성</target>
        </trans-unit>
        <trans-unit id="d45c5127fd242961eee62589553d6b669c2161d9" translate="yes" xml:space="preserve">
          <source>Create database user</source>
          <target state="translated">데이터베이스 사용자 생성</target>
        </trans-unit>
        <trans-unit id="1be69eeb874428a25d75295cd26ea503f3fc7a7b" translate="yes" xml:space="preserve">
          <source>Create in bulk</source>
          <target state="translated">대량으로 생성</target>
        </trans-unit>
        <trans-unit id="78c764ce09f8a1a32911dbbad5dfb8948ccf8554" translate="yes" xml:space="preserve">
          <source>Create individual templates for each type of page, such as a news article or blog entry. These templates extend the appropriate section template.</source>
          <target state="translated">뉴스 기사 나 블로그 항목과 같은 각 페이지 유형에 대한 개별 템플릿을 만듭니다. 이 템플릿은 해당 섹션 템플릿을 확장합니다.</target>
        </trans-unit>
        <trans-unit id="9be508244621c4025257d5c4ed57c32bd6843783" translate="yes" xml:space="preserve">
          <source>Create superusers using the &lt;a href=&quot;../../ref/django-admin#django-admin-createsuperuser&quot;&gt;&lt;code&gt;createsuperuser&lt;/code&gt;&lt;/a&gt; command:</source>
          <target state="translated">&lt;a href=&quot;../../ref/django-admin#django-admin-createsuperuser&quot;&gt; &lt;code&gt;createsuperuser&lt;/code&gt; &lt;/a&gt; 명령을 사용하여 수퍼 유저를 작성하십시오 .</target>
        </trans-unit>
        <trans-unit id="9548c88189467bc8e5d27c2ff0b7c5841f632284" translate="yes" xml:space="preserve">
          <source>Creates a &lt;a href=&quot;https://www.postgresql.org/docs/current/brin-intro.html&quot;&gt;BRIN index&lt;/a&gt;.</source>
          <target state="translated">작성 &lt;a href=&quot;https://www.postgresql.org/docs/current/brin-intro.html&quot;&gt;BRIN 인덱스를&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f381aed2b93a22cb8a31f90056580c567d6680e6" translate="yes" xml:space="preserve">
          <source>Creates a &lt;a href=&quot;https://www.postgresql.org/docs/current/gin.html&quot;&gt;gin index&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://www.postgresql.org/docs/current/gin.html&quot;&gt;진 인덱스를&lt;/a&gt; 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="cd0d8c421e33b77e8d1b0b52ca02f611c0e6a0db" translate="yes" xml:space="preserve">
          <source>Creates a &lt;a href=&quot;https://www.postgresql.org/docs/current/gist.html&quot;&gt;GiST index&lt;/a&gt;. These indexes are automatically created on spatial fields with &lt;a href=&quot;../gis/model-api#django.contrib.gis.db.models.BaseSpatialField.spatial_index&quot;&gt;&lt;code&gt;spatial_index=True&lt;/code&gt;&lt;/a&gt;. They&amp;rsquo;re also useful on other types, such as &lt;a href=&quot;fields#django.contrib.postgres.fields.HStoreField&quot;&gt;&lt;code&gt;HStoreField&lt;/code&gt;&lt;/a&gt; or the &lt;a href=&quot;fields#range-fields&quot;&gt;range fields&lt;/a&gt;.</source>
          <target state="translated">작성 &lt;a href=&quot;https://www.postgresql.org/docs/current/gist.html&quot;&gt;GIST 인덱스를&lt;/a&gt; . 이 인덱스는 &lt;a href=&quot;../gis/model-api#django.contrib.gis.db.models.BaseSpatialField.spatial_index&quot;&gt; &lt;code&gt;spatial_index=True&lt;/code&gt; &lt;/a&gt; 공간 필드에 자동으로 생성됩니다 . &lt;a href=&quot;fields#django.contrib.postgres.fields.HStoreField&quot;&gt; &lt;code&gt;HStoreField&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;fields#range-fields&quot;&gt;range fields&lt;/a&gt; 와 같은 다른 유형에도 유용 합니다 .</target>
        </trans-unit>
        <trans-unit id="b02dbfc61b7341045f04743484e677bc6dcec207" translate="yes" xml:space="preserve">
          <source>Creates a &lt;a href=&quot;models/constraints&quot;&gt;constraint&lt;/a&gt; in the database table for the model with &lt;code&gt;model_name&lt;/code&gt;.</source>
          <target state="translated">작성 &lt;a href=&quot;models/constraints&quot;&gt;제약&lt;/a&gt; 과 모델에 대한 데이터베이스 테이블에 &lt;code&gt;model_name&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5eb14c736a29cc2dbf86895673bfd6d47e4dc735" translate="yes" xml:space="preserve">
          <source>Creates a B-Tree index.</source>
          <target state="translated">B- 트리 인덱스를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="2a7c7f84568f72db3fea6457ea22d98854b80373" translate="yes" xml:space="preserve">
          <source>Creates a Django app directory structure for the given app name in the current directory or the given destination.</source>
          <target state="translated">현재 디렉토리 또는 지정된 대상에서 지정된 앱 이름에 대한 Django 앱 디렉토리 구조를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="f32bd7032c626239ea32443c559faef167069770" translate="yes" xml:space="preserve">
          <source>Creates a Django project directory structure for the given project name in the current directory or the given destination.</source>
          <target state="translated">현재 디렉토리 또는 지정된 대상에서 주어진 프로젝트 이름에 대한 Django 프로젝트 디렉토리 구조를 작성합니다.</target>
        </trans-unit>
        <trans-unit id="45d99ffeb785883294c3f3203a3da5bce039607d" translate="yes" xml:space="preserve">
          <source>Creates a TagURI.</source>
          <target state="translated">TagURI를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="9f78e51b846cf73a7aaa147eeba963c89d7cc72c" translate="yes" xml:space="preserve">
          <source>Creates a check constraint in the database.</source>
          <target state="translated">데이터베이스에서 점검 제한 조건을 작성합니다.</target>
        </trans-unit>
        <trans-unit id="12bb29704eded64208661d06e4cebe63fc65c39b" translate="yes" xml:space="preserve">
          <source>Creates a hash index.</source>
          <target state="translated">해시 인덱스를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="fb6aa02cf5c64f9d47682d2c2901e941da826eac" translate="yes" xml:space="preserve">
          <source>Creates a hashed password in the format used by this application. It takes one mandatory argument: the password in plain-text. Optionally, you can provide a salt and a hashing algorithm to use, if you don&amp;rsquo;t want to use the defaults (first entry of &lt;code&gt;PASSWORD_HASHERS&lt;/code&gt; setting). See &lt;a href=&quot;#auth-included-hashers&quot;&gt;Included hashers&lt;/a&gt; for the algorithm name of each hasher. If the password argument is &lt;code&gt;None&lt;/code&gt;, an unusable password is returned (one that will never be accepted by &lt;a href=&quot;#django.contrib.auth.hashers.check_password&quot;&gt;&lt;code&gt;check_password()&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">이 응용 프로그램에서 사용하는 형식으로 해시 된 암호를 만듭니다. 하나의 필수 인수, 즉 일반 텍스트의 비밀번호가 필요합니다. 선택적으로 기본값 ( &lt;code&gt;PASSWORD_HASHERS&lt;/code&gt; 설정의 첫 번째 항목)을 사용하지 않으려는 경우 사용할 솔트 및 해싱 알고리즘을 제공 할 수 있습니다 . 각 hasher의 알고리즘 이름은 &lt;a href=&quot;#auth-included-hashers&quot;&gt;Included hashers&lt;/a&gt; 를 참조하십시오 . 비밀번호 인수가 &lt;code&gt;None&lt;/code&gt; 이면 사용할 수없는 비밀번호가 리턴됩니다 ( &lt;a href=&quot;#django.contrib.auth.hashers.check_password&quot;&gt; &lt;code&gt;check_password()&lt;/code&gt; &lt;/a&gt; 의해 허용되지 않는 비밀번호 ).</target>
        </trans-unit>
        <trans-unit id="b78e89aaeca64ba3da457955f23f3a3a928f2b14" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;code&gt;QueryDict&lt;/code&gt; with keys from &lt;code&gt;iterable&lt;/code&gt; and each value equal to &lt;code&gt;value&lt;/code&gt;. For example:</source>
          <target state="translated">&lt;code&gt;iterable&lt;/code&gt; 의 키를 사용 하고 각 값이 value 와 같은 새 &lt;code&gt;QueryDict&lt;/code&gt; 를 작성 &lt;code&gt;value&lt;/code&gt; . 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="4ae9fbfa0e913cc0db15894d0bd21272e2b5eac7" translate="yes" xml:space="preserve">
          <source>Creates a new model in the project history and a corresponding table in the database to match it.</source>
          <target state="translated">프로젝트 히스토리에 새 모델을 작성하고 데이터베이스에 해당 테이블을 일치시킵니다.</target>
        </trans-unit>
        <trans-unit id="4f177e523cbd1e4a967daf61de327fffe500db83" translate="yes" xml:space="preserve">
          <source>Creates a new object, saves it and puts it in the related object set. Returns the newly created object.</source>
          <target state="translated">새 객체를 만들어 저장하고 관련 객체 세트에 넣습니다. 새로 만든 개체를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="7cb4efef3a42d0671353d7b10e9ca6a2f48171d4" translate="yes" xml:space="preserve">
          <source>Creates a new object, saves it and puts it in the related object set. Returns the newly created object:</source>
          <target state="translated">새 객체를 만들어 저장하고 관련 객체 세트에 넣습니다. 새로 만든 객체를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="aa4538cd027e6ee8ee6a7b1d8fbc1183d5bca011" translate="yes" xml:space="preserve">
          <source>Creates a new savepoint. This marks a point in the transaction that is known to be in a &amp;ldquo;good&amp;rdquo; state. Returns the savepoint ID (&lt;code&gt;sid&lt;/code&gt;).</source>
          <target state="translated">새 저장 점을 만듭니다. 이는 트랜잭션에서 &quot;양호한&quot;상태 인 것으로 나타납니다. 저장 점 ID ( &lt;code&gt;sid&lt;/code&gt; )를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="f013a1612ce6541c295c9ae15dc5c5c204a8074e" translate="yes" xml:space="preserve">
          <source>Creates a new session key while retaining the current session data. &lt;a href=&quot;../auth/default#django.contrib.auth.login&quot;&gt;&lt;code&gt;django.contrib.auth.login()&lt;/code&gt;&lt;/a&gt; calls this method to mitigate against session fixation.</source>
          <target state="translated">현재 세션 데이터를 유지하면서 새 세션 키를 만듭니다. &lt;a href=&quot;../auth/default#django.contrib.auth.login&quot;&gt; &lt;code&gt;django.contrib.auth.login()&lt;/code&gt; &lt;/a&gt; 은이 메소드를 호출하여 세션 수정을 완화합니다.</target>
        </trans-unit>
        <trans-unit id="4485653708a9a212a2a670464db8bd58b5f9235f" translate="yes" xml:space="preserve">
          <source>Creates a new table in the database for the provided model, along with any unique constraints or indexes it requires.</source>
          <target state="translated">제공된 모델의 데이터베이스에 필요한 고유 제한 조건 또는 색인과 함께 새 테이블을 작성합니다.</target>
        </trans-unit>
        <trans-unit id="690894dd489984a4e9e7d1a6b1183f1002394336" translate="yes" xml:space="preserve">
          <source>Creates a new test database and runs &lt;code&gt;migrate&lt;/code&gt; against it.</source>
          <target state="translated">새 테스트 데이터베이스를 작성하고 이에 대해 &lt;code&gt;migrate&lt;/code&gt; 을 실행 합니다.</target>
        </trans-unit>
        <trans-unit id="9b93852da7c8fc97833695d125f0f3f933e545a1" translate="yes" xml:space="preserve">
          <source>Creates a superuser account (a user who has all permissions). This is useful if you need to create an initial superuser account or if you need to programmatically generate superuser accounts for your site(s).</source>
          <target state="translated">수퍼 유저 계정 (모든 권한을 가진 사용자)을 만듭니다. 초기 수퍼 유저 계정을 만들어야하거나 사이트에서 수퍼 유저 계정을 프로그래밍 방식으로 생성해야하는 경우에 유용합니다.</target>
        </trans-unit>
        <trans-unit id="c6171d2295e7c0ed48e71dd0870d4e2cbd8166d2" translate="yes" xml:space="preserve">
          <source>Creates a unique constraint in the database.</source>
          <target state="translated">데이터베이스에서 고유 제한 조건을 작성합니다.</target>
        </trans-unit>
        <trans-unit id="0432bace35ccd073e6bfa597655a54d9a70552cf" translate="yes" xml:space="preserve">
          <source>Creates an &lt;a href=&quot;https://www.postgresql.org/docs/current/spgist.html&quot;&gt;SP-GiST index&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://www.postgresql.org/docs/current/spgist.html&quot;&gt;SP-GiST 인덱스를&lt;/a&gt; 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="6255ebbbe9adb4991648c436b550cb9a2e8659e9" translate="yes" xml:space="preserve">
          <source>Creates an exclusion constraint in the database. Internally, PostgreSQL implements exclusion constraints using indexes. The default index type is &lt;a href=&quot;https://www.postgresql.org/docs/current/gist.html&quot;&gt;GiST&lt;/a&gt;. To use them, you need to activate the &lt;a href=&quot;https://www.postgresql.org/docs/current/btree-gist.html&quot;&gt;btree_gist extension&lt;/a&gt; on PostgreSQL. You can install it using the &lt;a href=&quot;operations#django.contrib.postgres.operations.BtreeGistExtension&quot;&gt;&lt;code&gt;BtreeGistExtension&lt;/code&gt;&lt;/a&gt; migration operation.</source>
          <target state="translated">데이터베이스에서 제외 제약 조건을 만듭니다. 내부적으로 PostgreSQL은 인덱스를 사용하여 제외 제약 조건을 구현합니다. 기본 색인 유형은 &lt;a href=&quot;https://www.postgresql.org/docs/current/gist.html&quot;&gt;GiST&lt;/a&gt; 입니다. 그것들을 사용하려면 PostgreSQL 에서 &lt;a href=&quot;https://www.postgresql.org/docs/current/btree-gist.html&quot;&gt;btree_gist 확장&lt;/a&gt; 을 활성화해야합니다 . &lt;a href=&quot;operations#django.contrib.postgres.operations.BtreeGistExtension&quot;&gt; &lt;code&gt;BtreeGistExtension&lt;/code&gt; &lt;/a&gt; 마이그레이션 작업을 사용하여 설치할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="3ca67befda87ce2fda3dd3950101215522015c64" translate="yes" xml:space="preserve">
          <source>Creates an index (B-Tree) in the database.</source>
          <target state="translated">데이터베이스에 색인 (B-Tree)을 작성합니다.</target>
        </trans-unit>
        <trans-unit id="d8b3cc3f024f4e12818a480c9e9785fdcf0107b1" translate="yes" xml:space="preserve">
          <source>Creates an index in the database table for the model with &lt;code&gt;model_name&lt;/code&gt;. &lt;code&gt;index&lt;/code&gt; is an instance of the &lt;a href=&quot;models/indexes#django.db.models.Index&quot;&gt;&lt;code&gt;Index&lt;/code&gt;&lt;/a&gt; class.</source>
          <target state="translated">&lt;code&gt;model_name&lt;/code&gt; 을 사용하여 모델의 데이터베이스 테이블에 인덱스를 작성합니다 . &lt;code&gt;index&lt;/code&gt; 는 &lt;a href=&quot;models/indexes#django.db.models.Index&quot;&gt; &lt;code&gt;Index&lt;/code&gt; &lt;/a&gt; 클래스 의 인스턴스입니다 .</target>
        </trans-unit>
        <trans-unit id="22dc22ec0c579bf515148241adf4483ee78f0136" translate="yes" xml:space="preserve">
          <source>Creates new migrations based on the changes detected to your models. Migrations, their relationship with apps and more are covered in depth in &lt;a href=&quot;../topics/migrations&quot;&gt;the migrations documentation&lt;/a&gt;.</source>
          <target state="translated">모델에 탐지 된 변경 사항을 기반으로 새 마이그레이션을 만듭니다. 마이그레이션, 앱과의 관계 등 &lt;a href=&quot;../topics/migrations&quot;&gt;은 마이그레이션 설명서&lt;/a&gt; 에서 자세히 다룹니다 .</target>
        </trans-unit>
        <trans-unit id="e44c7ea385ebbd1c0a0c07cca93a77a36329518e" translate="yes" xml:space="preserve">
          <source>Creates the cache tables for use with the database cache backend using the information from your settings file. See &lt;a href=&quot;../topics/cache&quot;&gt;Django&amp;rsquo;s cache framework&lt;/a&gt; for more information.</source>
          <target state="translated">설정 파일의 정보를 사용하여 데이터베이스 캐시 백엔드와 함께 사용할 캐시 테이블을 작성합니다. 자세한 내용은 &lt;a href=&quot;../topics/cache&quot;&gt;Django의 캐시 프레임 워크&lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="665cbad6c4bddc0850c0907d819287e4f9d308cc" translate="yes" xml:space="preserve">
          <source>Creates the test databases by calling &lt;a href=&quot;#django.test.utils.setup_databases&quot;&gt;&lt;code&gt;setup_databases()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#django.test.utils.setup_databases&quot;&gt; &lt;code&gt;setup_databases()&lt;/code&gt; &lt;/a&gt; 를 호출하여 테스트 데이터베이스를 작성 합니다.</target>
        </trans-unit>
        <trans-unit id="dc5f8bf67baa52fb48d7ca9908450a8e72262521" translate="yes" xml:space="preserve">
          <source>Creates the test databases.</source>
          <target state="translated">테스트 데이터베이스를 작성합니다.</target>
        </trans-unit>
        <trans-unit id="0cf695e3de3dd650d5db2268e0ef4baac788c0d1" translate="yes" xml:space="preserve">
          <source>Creates, saves and returns a &lt;a href=&quot;#django.contrib.auth.models.User&quot;&gt;&lt;code&gt;User&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#django.contrib.auth.models.User&quot;&gt; &lt;code&gt;User&lt;/code&gt; 를&lt;/a&gt; 생성, 저장 및 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="88c041c8a70d85777d315ae6afd1da67e5a999b3" translate="yes" xml:space="preserve">
          <source>Creating a Geometry</source>
          <target state="translated">형상 생성</target>
        </trans-unit>
        <trans-unit id="a012943df6a903338b4bce23d7744d51b328aab1" translate="yes" xml:space="preserve">
          <source>Creating a branch for your patch</source>
          <target state="translated">패치를위한 브랜치 생성</target>
        </trans-unit>
        <trans-unit id="e3ac0bbfeabf829a00d633027731ed91312a2d0b" translate="yes" xml:space="preserve">
          <source>Creating a custom database-backed session engine built upon those included in Django (namely &lt;code&gt;db&lt;/code&gt; and &lt;code&gt;cached_db&lt;/code&gt;) may be done by inheriting &lt;a href=&quot;#django.contrib.sessions.base_session.AbstractBaseSession&quot;&gt;&lt;code&gt;AbstractBaseSession&lt;/code&gt;&lt;/a&gt; and either &lt;code&gt;SessionStore&lt;/code&gt; class.</source>
          <target state="translated">Django에 포함 된 사용자 정의 데이터베이스 기반 세션 엔진 ( &lt;code&gt;db&lt;/code&gt; 및 &lt;code&gt;cached_db&lt;/code&gt; ) 작성은 &lt;a href=&quot;#django.contrib.sessions.base_session.AbstractBaseSession&quot;&gt; &lt;code&gt;AbstractBaseSession&lt;/code&gt; &lt;/a&gt; 및 &lt;code&gt;SessionStore&lt;/code&gt; 클래스를 상속하여 수행 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="b334b10ec50ac715d436250767c44b095c5a98f5" translate="yes" xml:space="preserve">
          <source>Creating a manager with &lt;code&gt;QuerySet&lt;/code&gt; methods</source>
          <target state="translated">&lt;code&gt;QuerySet&lt;/code&gt; 메소드를 사용 하여 관리자 작성</target>
        </trans-unit>
        <trans-unit id="5939e7cb6944753c61d1e6772b8d56e4ad2da782" translate="yes" xml:space="preserve">
          <source>Creating a new table with the new schema</source>
          <target state="translated">새 스키마를 사용하여 새 테이블 만들기</target>
        </trans-unit>
        <trans-unit id="91b3670f50a7235a62e631529cda3b62ff015b13" translate="yes" xml:space="preserve">
          <source>Creating a project</source>
          <target state="translated">프로젝트 만들기</target>
        </trans-unit>
        <trans-unit id="ae3507fab0949d23f3a095d2878623ff305932dd" translate="yes" xml:space="preserve">
          <source>Creating a sitemap index</source>
          <target state="translated">사이트 맵 색인 만들기</target>
        </trans-unit>
        <trans-unit id="9c7399a4c6eb88ee627587c0862477cf8a4228ed" translate="yes" xml:space="preserve">
          <source>Creating a spatial database</source>
          <target state="translated">공간 데이터베이스 생성</target>
        </trans-unit>
        <trans-unit id="e0f0a5eead71b6037196acbef32fb4ac3bc05e90" translate="yes" xml:space="preserve">
          <source>Creating an admin user</source>
          <target state="translated">관리자 생성</target>
        </trans-unit>
        <trans-unit id="954917ae5dbe89de69077e2886f8434619b628a6" translate="yes" xml:space="preserve">
          <source>Creating and Saving Models with Geometry Fields</source>
          <target state="translated">형상 필드를 사용하여 모델 작성 및 저장</target>
        </trans-unit>
        <trans-unit id="9f5cdb3bb448987a114553188202f13903780b1d" translate="yes" xml:space="preserve">
          <source>Creating and Saving Models with Raster Fields</source>
          <target state="translated">래스터 필드를 사용하여 모델 작성 및 저장</target>
        </trans-unit>
        <trans-unit id="72003e01f0de72fbeb595f21b715e4efdeac07ef" translate="yes" xml:space="preserve">
          <source>Creating custom fields</source>
          <target state="translated">사용자 정의 필드 만들기</target>
        </trans-unit>
        <trans-unit id="ce541594802bd28d7639b5d94a81fb523b07d71f" translate="yes" xml:space="preserve">
          <source>Creating custom fields requires a bit of attention to detail. To make things easier to follow, we&amp;rsquo;ll use a consistent example throughout this document: wrapping a Python object representing the deal of cards in a hand of &lt;a href=&quot;https://en.wikipedia.org/wiki/Contract_bridge&quot;&gt;Bridge&lt;/a&gt;. Don&amp;rsquo;t worry, you don&amp;rsquo;t have to know how to play Bridge to follow this example. You only need to know that 52 cards are dealt out equally to four players, who are traditionally called &lt;em&gt;north&lt;/em&gt;, &lt;em&gt;east&lt;/em&gt;, &lt;em&gt;south&lt;/em&gt; and &lt;em&gt;west&lt;/em&gt;. Our class looks something like this:</source>
          <target state="translated">사용자 정의 필드를 만들려면 세부 사항에 약간의주의가 필요합니다. 작업을 더 쉽게 수행 할 수 있도록이 문서 전체에서 일관된 예제를 사용합니다 . &lt;a href=&quot;https://en.wikipedia.org/wiki/Contract_bridge&quot;&gt;Bridge&lt;/a&gt; 를 사용하여 카드 거래를 나타내는 Python 객체를 래핑합니다 . 걱정하지 마십시오.이 예제를 따르기 위해 Bridge를 연주하는 방법을 몰라도됩니다. 당신은 52 카드가 전통적으로 &lt;em&gt;북쪽&lt;/em&gt; , &lt;em&gt;동쪽&lt;/em&gt; , &lt;em&gt;남쪽&lt;/em&gt; 및 &lt;em&gt;서쪽&lt;/em&gt; 이라고 불리는 4 명의 플레이어에게 동등하게 처리된다는 것을 알아야합니다 . 우리 수업은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="acbeb8134b5a6061594f1df56020a10612b04b71" translate="yes" xml:space="preserve">
          <source>Creating custom format files</source>
          <target state="translated">사용자 정의 형식 파일 작성</target>
        </trans-unit>
        <trans-unit id="ca77bb5dfa9f39d7a4e9411a577a470573f94838" translate="yes" xml:space="preserve">
          <source>Creating custom message levels</source>
          <target state="translated">맞춤 메시지 수준 만들기</target>
        </trans-unit>
        <trans-unit id="e7feb970cca7b1f942f20a158ae612616deab8db" translate="yes" xml:space="preserve">
          <source>Creating extension using migrations</source>
          <target state="translated">마이그레이션을 사용하여 확장 만들기</target>
        </trans-unit>
        <trans-unit id="4a56e9cf3ae3d2cdb8bd07958069bd475dccd3b1" translate="yes" xml:space="preserve">
          <source>Creating forms from models</source>
          <target state="translated">모델에서 양식 작성</target>
        </trans-unit>
        <trans-unit id="969eec4f6cf8a8c1e4c5617688c5ad7be4f5510d" translate="yes" xml:space="preserve">
          <source>Creating message files from JavaScript source code</source>
          <target state="translated">JavaScript 소스 코드에서 메시지 파일 작성</target>
        </trans-unit>
        <trans-unit id="9dd203b744dc0d8a93e73770a9a6ac69a6431673" translate="yes" xml:space="preserve">
          <source>Creating models</source>
          <target state="translated">모델 만들기</target>
        </trans-unit>
        <trans-unit id="d8dd4d67f3136087378e105e7c5e653955a5db29" translate="yes" xml:space="preserve">
          <source>Creating objects</source>
          <target state="translated">객체 생성</target>
        </trans-unit>
        <trans-unit id="17e81bea9a3bc4d898b37eb16f1adfe3db7dd89b" translate="yes" xml:space="preserve">
          <source>Creating projects with a local copy of Django</source>
          <target state="translated">Django의 로컬 복사본으로 프로젝트 만들기</target>
        </trans-unit>
        <trans-unit id="48b66b7011f4bde37feb7c9d332a71f93e6e15fd" translate="yes" xml:space="preserve">
          <source>Creating rasters from data</source>
          <target state="translated">데이터에서 래스터 생성</target>
        </trans-unit>
        <trans-unit id="b3e2c12e9d256bf5bb2adfdc8ac559faebf19c45" translate="yes" xml:space="preserve">
          <source>Creating superusers</source>
          <target state="translated">수퍼 유저 생성</target>
        </trans-unit>
        <trans-unit id="316db80e3c8f8c069308c64646646d3c1ed208c4" translate="yes" xml:space="preserve">
          <source>Creating the &lt;code&gt;flatpages/default.html&lt;/code&gt; template is your responsibility; in your template directory, create a &lt;code&gt;flatpages&lt;/code&gt; directory containing a file &lt;code&gt;default.html&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;flatpages/default.html&lt;/code&gt; 템플릿을 만드는 것은 귀하의 책임입니다. 템플리트 디렉토리에서 &lt;code&gt;default.html&lt;/code&gt; 파일을 포함하는 &lt;code&gt;flatpages&lt;/code&gt; 디렉토리를 작성 하십시오 .</target>
        </trans-unit>
        <trans-unit id="a24db0799c6388c618a6772dcb8b0e502ce12b18" translate="yes" xml:space="preserve">
          <source>Creating the Polls app</source>
          <target state="translated">설문 조사 앱 만들기</target>
        </trans-unit>
        <trans-unit id="a424e3061938a1c7264e464015df539f5f35a479" translate="yes" xml:space="preserve">
          <source>Creating the cache table</source>
          <target state="translated">캐시 테이블 생성</target>
        </trans-unit>
        <trans-unit id="76c1964da47d78a7495311d193f8a06d10455d63" translate="yes" xml:space="preserve">
          <source>Creating the database</source>
          <target state="translated">데이터베이스 생성</target>
        </trans-unit>
        <trans-unit id="5b7d1516d4d52631df2921a31867c57b01d73cb0" translate="yes" xml:space="preserve">
          <source>Creating the extension requires a database user with superuser privileges. If the Django database user doesn&amp;rsquo;t have superuser privileges, you&amp;rsquo;ll have to create the extension outside of Django migrations with a user that has the appropriate privileges. In that case, connect to your Django database and run the query &lt;code&gt;CREATE EXTENSION IF NOT EXISTS hstore;&lt;/code&gt;.</source>
          <target state="translated">확장을 만들려면 수퍼 유저 권한이있는 데이터베이스 사용자가 필요합니다. Django 데이터베이스 사용자에게 수퍼 유저 권한이없는 경우 적절한 권한이있는 사용자를 사용하여 Django 마이그레이션 외부에서 확장을 만들어야합니다. 이 경우 Django 데이터베이스에 연결하고 &lt;code&gt;CREATE EXTENSION IF NOT EXISTS hstore;&lt;/code&gt; 쿼리를 실행하십시오 . .</target>
        </trans-unit>
        <trans-unit id="1474add844b8d610df5ac31c608f7496f6713b64" translate="yes" xml:space="preserve">
          <source>Creating the test databases.</source>
          <target state="translated">테스트 데이터베이스 작성</target>
        </trans-unit>
        <trans-unit id="02c7734d51f5945b8a2dd287727468112306b2af" translate="yes" xml:space="preserve">
          <source>Creating users</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a52fdb554c0b801da7c3eae7c4f5265155f4b3b" translate="yes" xml:space="preserve">
          <source>Creating your database</source>
          <target state="translated">데이터베이스 생성</target>
        </trans-unit>
        <trans-unit id="c1014cd317ecbb2fec70d0fa6ce28f5d56cbb36e" translate="yes" xml:space="preserve">
          <source>Creating your own Aggregate Functions</source>
          <target state="translated">자신 만의 집계 함수 만들기</target>
        </trans-unit>
        <trans-unit id="2e9d7c32120688686aa04670ec6251c31650a1e7" translate="yes" xml:space="preserve">
          <source>Creating your own settings</source>
          <target state="translated">나만의 설정 만들기</target>
        </trans-unit>
        <trans-unit id="6744d9ba1de7954fd781114b86522f4b93adb12c" translate="yes" xml:space="preserve">
          <source>Creating your tables</source>
          <target state="translated">테이블 만들기</target>
        </trans-unit>
        <trans-unit id="eff357cce9a0a5f5bff4688a6da86e63d71eea13" translate="yes" xml:space="preserve">
          <source>Critical settings</source>
          <target state="translated">중요 설정</target>
        </trans-unit>
        <trans-unit id="077e062460ee115e1c2f6aac42d1ad832a11e84f" translate="yes" xml:space="preserve">
          <source>Cross Site Request Forgery Protection</source>
          <target state="translated">사이트 간 요청 위조 방지</target>
        </trans-unit>
        <trans-unit id="5f70d1cefbd406afc170b973d0f71da95cb60e55" translate="yes" xml:space="preserve">
          <source>Cross Site Request Forgery protection</source>
          <target state="translated">사이트 간 요청 위조 방지</target>
        </trans-unit>
        <trans-unit id="ca769b18247e31e844721a8791a9053580f01c16" translate="yes" xml:space="preserve">
          <source>Cross site request forgery (CSRF) protection</source>
          <target state="translated">CSRF (Cross Site Request Forgery) 보호</target>
        </trans-unit>
        <trans-unit id="ba1afa128e239ede5b334a8b340909ae6a93eef4" translate="yes" xml:space="preserve">
          <source>Cross site scripting (XSS) protection</source>
          <target state="translated">사이트 간 스크립팅 (XSS) 보호</target>
        </trans-unit>
        <trans-unit id="1e8ae290d91743bf028b94ada9cc33cd9e885b0b" translate="yes" xml:space="preserve">
          <source>Cross-database relations</source>
          <target state="translated">데이터베이스 간 관계</target>
        </trans-unit>
        <trans-unit id="01c20fd9203e69e49f5ffc0e43b4b3ae080a2987" translate="yes" xml:space="preserve">
          <source>Cross-platform and tested; compatible with Windows, Linux, Solaris, and macOS platforms.</source>
          <target state="translated">크로스 플랫폼 및 테스트; Windows, Linux, Solaris 및 macOS 플랫폼과 호환됩니다.</target>
        </trans-unit>
        <trans-unit id="af448d9ae67fe20d525b6963a44b285d81fa8961" translate="yes" xml:space="preserve">
          <source>Cryptographic signing</source>
          <target state="translated">암호화 서명</target>
        </trans-unit>
        <trans-unit id="48ad5ed46b83e98b1f48496c5dbaba78ccf3fc52" translate="yes" xml:space="preserve">
          <source>CsrfViewMiddleware.process_view not used</source>
          <target state="translated">CsrfViewMiddleware.process_view가 사용되지 않음</target>
        </trans-unit>
        <trans-unit id="d5fbebf6e67e3e1ae730183343a6393734e72929" translate="yes" xml:space="preserve">
          <source>Currently available feed types are:</source>
          <target state="translated">현재 사용 가능한 피드 유형은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="95d2f57cbe72d8a6d36d4f4a4aaeca0e841b4270" translate="yes" xml:space="preserve">
          <source>Currently, the &lt;code&gt;postgresql&lt;/code&gt;, &lt;code&gt;oracle&lt;/code&gt;, and &lt;code&gt;mysql&lt;/code&gt; database backends support &lt;code&gt;select_for_update()&lt;/code&gt;. However, MariaDB 10.3+ supports only the &lt;code&gt;nowait&lt;/code&gt; argument and MySQL 8.0.1+ supports the &lt;code&gt;nowait&lt;/code&gt; and &lt;code&gt;skip_locked&lt;/code&gt; arguments. MySQL and MariaDB don&amp;rsquo;t support the &lt;code&gt;of&lt;/code&gt; argument.</source>
          <target state="translated">현재 &lt;code&gt;postgresql&lt;/code&gt; , &lt;code&gt;oracle&lt;/code&gt; 및 &lt;code&gt;mysql&lt;/code&gt; 데이터베이스 백엔드는 &lt;code&gt;select_for_update()&lt;/code&gt; 지원 합니다. 그러나 MariaDB 10.3+는 &lt;code&gt;nowait&lt;/code&gt; 인수 만 지원 하고 MySQL 8.0.1+는 &lt;code&gt;nowait&lt;/code&gt; 및 &lt;code&gt;skip_locked&lt;/code&gt; 인수를 지원합니다 . MySQL과 MariaDB는 &lt;code&gt;of&lt;/code&gt; 인수를 지원하지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="a5a651f190cc76355c6140c82a3b0a49ea508064" translate="yes" xml:space="preserve">
          <source>Custom Lookups</source>
          <target state="translated">맞춤 검색</target>
        </trans-unit>
        <trans-unit id="fb55fd2a8a225de55cc2a7c151116ab885d289d0" translate="yes" xml:space="preserve">
          <source>Custom auth backends can provide their own permissions.</source>
          <target state="translated">사용자 정의 인증 백엔드는 자체 권한을 제공 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e3fd71a31afaaf057b0fedc28ba72336f1780a64" translate="yes" xml:space="preserve">
          <source>Custom backends</source>
          <target state="translated">커스텀 백엔드</target>
        </trans-unit>
        <trans-unit id="2be73c4a40287493a1331f1847137608f03f7db5" translate="yes" xml:space="preserve">
          <source>Custom context processors can live anywhere in your code base. All Django cares about is that your custom context processors are pointed to by the &lt;code&gt;'context_processors'&lt;/code&gt; option in your &lt;a href=&quot;../settings#std:setting-TEMPLATES&quot;&gt;&lt;code&gt;TEMPLATES&lt;/code&gt;&lt;/a&gt; setting &amp;mdash; or the &lt;code&gt;context_processors&lt;/code&gt; argument of &lt;a href=&quot;#django.template.Engine&quot;&gt;&lt;code&gt;Engine&lt;/code&gt;&lt;/a&gt; if you&amp;rsquo;re using it directly.</source>
          <target state="translated">사용자 정의 컨텍스트 프로세서는 코드베이스의 어느 곳에 나있을 수 있습니다. Django는 모든 사용자 정의 컨텍스트 프로세서가 &lt;a href=&quot;../settings#std:setting-TEMPLATES&quot;&gt; &lt;code&gt;TEMPLATES&lt;/code&gt; &lt;/a&gt; 설정 의 &lt;code&gt;'context_processors'&lt;/code&gt; 옵션 또는 직접 사용하는 경우 &lt;a href=&quot;#django.template.Engine&quot;&gt; &lt;code&gt;Engine&lt;/code&gt; &lt;/a&gt; 의 &lt;code&gt;context_processors&lt;/code&gt; 인수에 의해 지정됩니다.</target>
        </trans-unit>
        <trans-unit id="ee37c1354dec1629641a646e6a662a26d2fe7fa4" translate="yes" xml:space="preserve">
          <source>Custom database types</source>
          <target state="translated">사용자 정의 데이터베이스 유형</target>
        </trans-unit>
        <trans-unit id="1535f11e4ce90f2db54547b4056b8064b713c8a8" translate="yes" xml:space="preserve">
          <source>Custom default settings</source>
          <target state="translated">맞춤 기본 설정</target>
        </trans-unit>
        <trans-unit id="1ef9e92f379d2757660afc779e0b3d8dbe9b82f8" translate="yes" xml:space="preserve">
          <source>Custom email backends should subclass &lt;code&gt;BaseEmailBackend&lt;/code&gt; that is located in the &lt;code&gt;django.core.mail.backends.base&lt;/code&gt; module. A custom email backend must implement the &lt;code&gt;send_messages(email_messages)&lt;/code&gt; method. This method receives a list of &lt;a href=&quot;#django.core.mail.EmailMessage&quot;&gt;&lt;code&gt;EmailMessage&lt;/code&gt;&lt;/a&gt; instances and returns the number of successfully delivered messages. If your backend has any concept of a persistent session or connection, you should also implement the &lt;code&gt;open()&lt;/code&gt; and &lt;code&gt;close()&lt;/code&gt; methods. Refer to &lt;code&gt;smtp.EmailBackend&lt;/code&gt; for a reference implementation.</source>
          <target state="translated">사용자 정의 이메일 백엔드는 &lt;code&gt;django.core.mail.backends.base&lt;/code&gt; 모듈 에있는 &lt;code&gt;BaseEmailBackend&lt;/code&gt; 를 서브 클래스해야 합니다. 사용자 정의 이메일 백엔드는 &lt;code&gt;send_messages(email_messages)&lt;/code&gt; 메소드를 구현해야합니다 . 이 메서드는 &lt;a href=&quot;#django.core.mail.EmailMessage&quot;&gt; &lt;code&gt;EmailMessage&lt;/code&gt; &lt;/a&gt; 인스턴스 목록을 받고 성공적으로 배달 된 메시지 수를 반환합니다. 백엔드에 영구 세션 또는 연결 개념이있는 경우 &lt;code&gt;open()&lt;/code&gt; 및 &lt;code&gt;close()&lt;/code&gt; 메소드 도 구현해야 합니다. 참조 구현에 대해서는 &lt;code&gt;smtp.EmailBackend&lt;/code&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="18f6c9004a0f58c43e2c76676784d271eb1f76cc" translate="yes" xml:space="preserve">
          <source>Custom engines can populate the postmortem by passing the &lt;code&gt;backend&lt;/code&gt; and &lt;code&gt;tried&lt;/code&gt; arguments when raising &lt;a href=&quot;#django.template.TemplateDoesNotExist&quot;&gt;&lt;code&gt;TemplateDoesNotExist&lt;/code&gt;&lt;/a&gt;. Backends that use the postmortem &lt;a href=&quot;#template-origin-api&quot;&gt;should specify an origin&lt;/a&gt; on the template object.</source>
          <target state="translated">사용자 정의 엔진은 &lt;a href=&quot;#django.template.TemplateDoesNotExist&quot;&gt; &lt;code&gt;TemplateDoesNotExist&lt;/code&gt; 를&lt;/a&gt; 제기 할 때 &lt;code&gt;backend&lt;/code&gt; 및 &lt;code&gt;tried&lt;/code&gt; 인수 를 전달하여 사후 상환을 채울 수 있습니다 . 포스트 모템을 사용하는 백엔드 는 템플릿 개체에 &lt;a href=&quot;#template-origin-api&quot;&gt;원점&lt;/a&gt; 을 지정해야 합니다.</target>
        </trans-unit>
        <trans-unit id="d6ac55b9a3d90687c34195d8b70d4cf69a5febea" translate="yes" xml:space="preserve">
          <source>Custom engines can populate this information by setting a &lt;code&gt;template_debug&lt;/code&gt; attribute on exceptions raised during parsing and rendering. This attribute is a &lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#dict&quot;&gt;&lt;code&gt;dict&lt;/code&gt;&lt;/a&gt; with the following values:</source>
          <target state="translated">사용자 정의 엔진은 구문 분석 및 렌더링 중에 발생한 예외에 &lt;code&gt;template_debug&lt;/code&gt; 속성을 설정하여이 정보를 채울 수 있습니다 . 이 속성은 다음 값을 가진 &lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#dict&quot;&gt; &lt;code&gt;dict&lt;/code&gt; &lt;/a&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="05f55c6087b7d0fc860401a848392486f9b03383" translate="yes" xml:space="preserve">
          <source>Custom engines can provide their own &lt;code&gt;template.origin&lt;/code&gt; information by creating an object that specifies the following attributes:</source>
          <target state="translated">사용자 정의 엔진은 다음 속성을 지정하는 오브젝트를 작성하여 고유 한 &lt;code&gt;template.origin&lt;/code&gt; 정보를 제공 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="5c58b5a78913f05fa5d6ac67ed7e5e59a11f36b5" translate="yes" xml:space="preserve">
          <source>Custom error reports</source>
          <target state="translated">맞춤 오류 보고서</target>
        </trans-unit>
        <trans-unit id="30bee706b2d9ec29c0ffddaa871393f8bddb224e" translate="yes" xml:space="preserve">
          <source>Custom feed generators</source>
          <target state="translated">맞춤형 피드 생성기</target>
        </trans-unit>
        <trans-unit id="0a85f7cef3e205a4fbccb0b642f3559efc61e223" translate="yes" xml:space="preserve">
          <source>Custom field types</source>
          <target state="translated">사용자 정의 필드 유형</target>
        </trans-unit>
        <trans-unit id="d1f86d5227e987ad9feec36387a01f71ac50987e" translate="yes" xml:space="preserve">
          <source>Custom fields</source>
          <target state="translated">맞춤 입력란</target>
        </trans-unit>
        <trans-unit id="e221cc8d1a9e92d6aaa4eb1a13752833406d8e36" translate="yes" xml:space="preserve">
          <source>Custom file upload handlers &lt;strong&gt;must&lt;/strong&gt; define the following methods:</source>
          <target state="translated">사용자 정의 파일 업로드 핸들러 &lt;strong&gt;는&lt;/strong&gt; 다음 방법을 정의 &lt;strong&gt;해야합니다&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="3507087d35d153b74458d38f43020e6a1205c49a" translate="yes" xml:space="preserve">
          <source>Custom filters are Python functions that take one or two arguments:</source>
          <target state="translated">커스텀 필터는 하나 또는 두 개의 인수를 취하는 Python 함수입니다.</target>
        </trans-unit>
        <trans-unit id="c8f15c93f34d7ec5419aeb82c99cce621b3938cc" translate="yes" xml:space="preserve">
          <source>Custom formset validation</source>
          <target state="translated">커스텀 폼셋 검증</target>
        </trans-unit>
        <trans-unit id="0f9115d0af9c57a289022b399c4e423ec502f5f7" translate="yes" xml:space="preserve">
          <source>Custom keyword arguments may be defined on this method if it&amp;rsquo;s likely that &lt;code&gt;as_vendorname()&lt;/code&gt; methods or subclasses will need to supply data to override the generation of the SQL string. See &lt;a href=&quot;expressions#django.db.models.Func.as_sql&quot;&gt;&lt;code&gt;Func.as_sql()&lt;/code&gt;&lt;/a&gt; for example usage.</source>
          <target state="translated">&lt;code&gt;as_vendorname()&lt;/code&gt; 메소드 또는 서브 클래스가 SQL 문자열 생성을 대체하기 위해 데이터를 제공해야 할 가능성이있는 경우이 메소드에서 사용자 정의 키워드 인수를 정의 할 수 있습니다 . 사용법 예는 &lt;a href=&quot;expressions#django.db.models.Func.as_sql&quot;&gt; &lt;code&gt;Func.as_sql()&lt;/code&gt; &lt;/a&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="b0b11a4419497bb0e675cb189e1117988dca84c3" translate="yes" xml:space="preserve">
          <source>Custom libraries and template inheritance</source>
          <target state="translated">커스텀 라이브러리 및 템플릿 상속</target>
        </trans-unit>
        <trans-unit id="ad60e6ef93acdf368b01f33eba1a92718aa542bf" translate="yes" xml:space="preserve">
          <source>Custom loaders</source>
          <target state="translated">커스텀 로더</target>
        </trans-unit>
        <trans-unit id="b88824670ecea4ff8e6f4960a2c9988b136992f4" translate="yes" xml:space="preserve">
          <source>Custom logging configuration</source>
          <target state="translated">사용자 정의 로깅 구성</target>
        </trans-unit>
        <trans-unit id="b4bdeb3e6f85e8f055ed8b15db2b73e9d8da8842" translate="yes" xml:space="preserve">
          <source>Custom management commands are especially useful for running standalone scripts or for scripts that are periodically executed from the UNIX crontab or from Windows scheduled tasks control panel.</source>
          <target state="translated">사용자 정의 관리 명령은 독립형 스크립트를 실행하거나 UNIX crontab 또는 Windows 예약 된 작업 제어판에서 정기적으로 실행되는 스크립트에 특히 유용합니다.</target>
        </trans-unit>
        <trans-unit id="2822eba7bc80f4ec79b68e44cabc44c607f7b494" translate="yes" xml:space="preserve">
          <source>Custom managers</source>
          <target state="translated">고객 관리자</target>
        </trans-unit>
        <trans-unit id="0229e5fe0e5e381a67fad47ed67e29a333a67bbc" translate="yes" xml:space="preserve">
          <source>Custom managers and model inheritance</source>
          <target state="translated">커스텀 매니저와 모델 상속</target>
        </trans-unit>
        <trans-unit id="0ac0aaaaa8bf55e8fcc051ed1bc33ea819de9179" translate="yes" xml:space="preserve">
          <source>Custom permissions</source>
          <target state="translated">맞춤 권한</target>
        </trans-unit>
        <trans-unit id="a6ce10dca02502825ea353d8ad2a72922bc1dbe0" translate="yes" xml:space="preserve">
          <source>Custom prefetching also works with single related relations like forward &lt;code&gt;ForeignKey&lt;/code&gt; or &lt;code&gt;OneToOneField&lt;/code&gt;. Generally you&amp;rsquo;ll want to use &lt;a href=&quot;#django.db.models.query.QuerySet.select_related&quot;&gt;&lt;code&gt;select_related()&lt;/code&gt;&lt;/a&gt; for these relations, but there are a number of cases where prefetching with a custom &lt;code&gt;QuerySet&lt;/code&gt; is useful:</source>
          <target state="translated">사용자 정의 프리 페칭은 forward &lt;code&gt;ForeignKey&lt;/code&gt; 또는 &lt;code&gt;OneToOneField&lt;/code&gt; 와 같은 단일 관련 관계에서도 작동합니다 . 일반적으로 이러한 관계에 대해 &lt;a href=&quot;#django.db.models.query.QuerySet.select_related&quot;&gt; &lt;code&gt;select_related()&lt;/code&gt; &lt;/a&gt; 를 사용하고 싶지만 사용자 정의 &lt;code&gt;QuerySet&lt;/code&gt; 로 프리 페치하는 것이 유용한 경우가 많이 있습니다.</target>
        </trans-unit>
        <trans-unit id="37c5481ba8c25b2841bd54c8e789627babfd6a75" translate="yes" xml:space="preserve">
          <source>Custom response classes</source>
          <target state="translated">사용자 정의 응답 클래스</target>
        </trans-unit>
        <trans-unit id="d978bae51d9a07ba9a42f06526b5a0e62deff5b6" translate="yes" xml:space="preserve">
          <source>Custom serializers</source>
          <target state="translated">맞춤형 시리얼 라이저</target>
        </trans-unit>
        <trans-unit id="a4d5db0e64d43c816841af4760b3503a8df014b9" translate="yes" xml:space="preserve">
          <source>Custom tag and filter libraries</source>
          <target state="translated">사용자 정의 태그 및 필터 라이브러리</target>
        </trans-unit>
        <trans-unit id="0b909eaa372de99b1bfa2ec89ef400ce7a00ff1a" translate="yes" xml:space="preserve">
          <source>Custom template options</source>
          <target state="translated">사용자 정의 템플릿 옵션</target>
        </trans-unit>
        <trans-unit id="5fa307fdb7131d857af40e2eddcc4de4e06ac8d1" translate="yes" xml:space="preserve">
          <source>Custom template tags and filters</source>
          <target state="translated">맞춤 템플릿 태그 및 필터</target>
        </trans-unit>
        <trans-unit id="c61a6605f4811cc9d97090149fc5df69abce0c7c" translate="yes" xml:space="preserve">
          <source>Custom upload handlers may also define any of the following optional methods or attributes:</source>
          <target state="translated">맞춤 업로드 핸들러는 다음과 같은 선택적 메소드 또는 속성을 정의 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="162a6a573415c3572f32590bdc2ec6573f0dbe8b" translate="yes" xml:space="preserve">
          <source>Custom users and &lt;a href=&quot;../../ref/contrib/admin/index#module-django.contrib.admin&quot;&gt;&lt;code&gt;django.contrib.admin&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">사용자 정의 사용자 및 &lt;a href=&quot;../../ref/contrib/admin/index#module-django.contrib.admin&quot;&gt; &lt;code&gt;django.contrib.admin&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e32d43732aede79902b22cb4b27558172a2252b1" translate="yes" xml:space="preserve">
          <source>Custom users and permissions</source>
          <target state="translated">사용자 정의 사용자 및 권한</target>
        </trans-unit>
        <trans-unit id="9aeca53bc2d2a116fcf245c569267f8484a653b7" translate="yes" xml:space="preserve">
          <source>Custom users and proxy models</source>
          <target state="translated">사용자 정의 사용자 및 프록시 모델</target>
        </trans-unit>
        <trans-unit id="56a51a00699194fce94c928643545fc65dcccbfb" translate="yes" xml:space="preserve">
          <source>Custom users and the built-in auth forms</source>
          <target state="translated">사용자 정의 사용자 및 내장 인증 양식</target>
        </trans-unit>
        <trans-unit id="fabd75b6cca0fd38a9ecdc0aea6ae5fd1fe885c8" translate="yes" xml:space="preserve">
          <source>Customization of &lt;code&gt;SessionStore&lt;/code&gt; classes is achieved by overriding methods and properties described below:</source>
          <target state="translated">&lt;code&gt;SessionStore&lt;/code&gt; 클래스의 사용자 정의는 아래 설명 된 메소드 및 특성을 대체하여 수행됩니다.</target>
        </trans-unit>
        <trans-unit id="1dad078a37ad8bef94e0172271b5ec7a4f3608af" translate="yes" xml:space="preserve">
          <source>Customize the admin change list</source>
          <target state="translated">관리자 변경 목록 사용자 정의</target>
        </trans-unit>
        <trans-unit id="7130d4a0e533172c317c2b9e89ef7b4b3b5bd137" translate="yes" xml:space="preserve">
          <source>Customize the admin form</source>
          <target state="translated">관리 양식 사용자 정의</target>
        </trans-unit>
        <trans-unit id="933af945151e4ceedf9bb41ecde47a78fbebc2e4" translate="yes" xml:space="preserve">
          <source>Customize the admin index page</source>
          <target state="translated">관리자 색인 페이지 사용자 정의</target>
        </trans-unit>
        <trans-unit id="591b656041b888797bfae9fb2fe8a882053f1550" translate="yes" xml:space="preserve">
          <source>Customize the admin look and feel</source>
          <target state="translated">관리자 모양과 느낌을 사용자 정의</target>
        </trans-unit>
        <trans-unit id="810838565e0457955a945c498139dfb6b6259a32" translate="yes" xml:space="preserve">
          <source>Customize the default error views</source>
          <target state="translated">기본 오류보기 사용자 정의</target>
        </trans-unit>
        <trans-unit id="a3898444d3f84c9e669d871893e8fe7f9620f4c7" translate="yes" xml:space="preserve">
          <source>Customize your &lt;em&gt;app&amp;rsquo;s&lt;/em&gt; look and feel</source>
          <target state="translated">&lt;em&gt;앱의&lt;/em&gt; 모양과 느낌을 맞춤 설정</target>
        </trans-unit>
        <trans-unit id="efa94e4fe64bcbe8907e8328b5d0d0f6a8d3eb52" translate="yes" xml:space="preserve">
          <source>Customizing &lt;code&gt;BoundField&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;BoundField&lt;/code&gt; 사용자 정의</target>
        </trans-unit>
        <trans-unit id="d115e75e975b1a0fd0f4b1efe3c73b6a0fc7d5c7" translate="yes" xml:space="preserve">
          <source>Customizing Users and authentication</source>
          <target state="translated">사용자 정의 및 인증</target>
        </trans-unit>
        <trans-unit id="78638351f2fdd04348732962a65dc250d8123e75" translate="yes" xml:space="preserve">
          <source>Customizing a formset&amp;rsquo;s prefix</source>
          <target state="translated">폼셋 접두사 사용자 정의</target>
        </trans-unit>
        <trans-unit id="70436842c132d679ef9f3442db4a8be0781fc782" translate="yes" xml:space="preserve">
          <source>Customizing authentication in Django</source>
          <target state="translated">Django에서 인증 사용자 정의</target>
        </trans-unit>
        <trans-unit id="46e1cf12ebd31e82bfa9a678aa4d83140cda8997" translate="yes" xml:space="preserve">
          <source>Customizing error views</source>
          <target state="translated">오류보기 사용자 정의</target>
        </trans-unit>
        <trans-unit id="1fc6ccecbaf8812fa1f442eeccfa0c013bfa8fcf" translate="yes" xml:space="preserve">
          <source>Customizing model loading</source>
          <target state="translated">모델 로딩 커스터마이징</target>
        </trans-unit>
        <trans-unit id="f4a9bb9c7797c50c59d72bee233376f82a02c53a" translate="yes" xml:space="preserve">
          <source>Customizing the &lt;a href=&quot;#django.contrib.admin.AdminSite&quot;&gt;&lt;code&gt;AdminSite&lt;/code&gt;&lt;/a&gt; class</source>
          <target state="translated">&lt;a href=&quot;#django.contrib.admin.AdminSite&quot;&gt; &lt;code&gt;AdminSite&lt;/code&gt; &lt;/a&gt; 클래스 사용자 정의</target>
        </trans-unit>
        <trans-unit id="1cd4da01000ae81211d191ad888550dec8aa9357" translate="yes" xml:space="preserve">
          <source>Customizing the &lt;code&gt;makemessages&lt;/code&gt; command</source>
          <target state="translated">&lt;code&gt;makemessages&lt;/code&gt; 명령 사용자 정의</target>
        </trans-unit>
        <trans-unit id="debfa4bf14660e4e23669d971a0ff79fbdf1d16f" translate="yes" xml:space="preserve">
          <source>Customizing the error list format</source>
          <target state="translated">오류 목록 형식 사용자 정의</target>
        </trans-unit>
        <trans-unit id="fe6e7e4cd7c08dea08ed324a1b20112279fb97b3" translate="yes" xml:space="preserve">
          <source>Customizing the ignored pattern list</source>
          <target state="translated">무시 된 패턴 목록 사용자 정의</target>
        </trans-unit>
        <trans-unit id="a448ad85fc5db0253551ec0018d98ee240b4e95b" translate="yes" xml:space="preserve">
          <source>Customizing the test client</source>
          <target state="translated">테스트 클라이언트 사용자 정의</target>
        </trans-unit>
        <trans-unit id="dd1425ebd232b0843c39c03e60e1a5e1eedd84dc" translate="yes" xml:space="preserve">
          <source>Customizing widget instances</source>
          <target state="translated">위젯 인스턴스 사용자 정의</target>
        </trans-unit>
        <trans-unit id="3eca7c367c653950368edc8799d8278f19c04299" translate="yes" xml:space="preserve">
          <source>Customizing your &lt;em&gt;application&amp;rsquo;s&lt;/em&gt; templates</source>
          <target state="translated">&lt;em&gt;응용 프로그램&lt;/em&gt; 템플릿 사용자 정의</target>
        </trans-unit>
        <trans-unit id="8db51360adc406f3c536825e4a81671a75d5c8cf" translate="yes" xml:space="preserve">
          <source>Customizing your &lt;em&gt;project&amp;rsquo;s&lt;/em&gt; templates</source>
          <target state="translated">&lt;em&gt;프로젝트&lt;/em&gt; 템플릿 사용자 정의</target>
        </trans-unit>
        <trans-unit id="987f411227cd62e1d9d2747e9d01bc6388c54944" translate="yes" xml:space="preserve">
          <source>DATA_UPLOAD_MAX_MEMORY_SIZE</source>
          <target state="translated">DATA_UPLOAD_MAX_MEMORY_SIZE</target>
        </trans-unit>
        <trans-unit id="5750f2d08e40bca98a28bf2a9b714836e0fe00a7" translate="yes" xml:space="preserve">
          <source>DATA_UPLOAD_MAX_NUMBER_FIELDS</source>
          <target state="translated">DATA_UPLOAD_MAX_NUMBER_FIELDS</target>
        </trans-unit>
        <trans-unit id="a987cc1f335205c5c000f01b405ca5783de2344b" translate="yes" xml:space="preserve">
          <source>DO NOT USE THIS SERVER IN A PRODUCTION SETTING. It has not gone through security audits or performance tests. (And that&amp;rsquo;s how it&amp;rsquo;s gonna stay. We&amp;rsquo;re in the business of making Web frameworks, not Web servers, so improving this server to be able to handle a production environment is outside the scope of Django.)</source>
          <target state="translated">생산 설정에서이 서버를 사용하지 마십시오. 보안 감사 나 성능 테스트를 거치지 않았습니다. (그리고 그것이 유지 될 방법입니다. 우리는 웹 서버가 아닌 웹 프레임 워크를 만드는 사업을하고 있습니다. 따라서 프로덕션 환경을 처리 할 수 ​​있도록이 서버를 개선하는 것은 장고의 범위를 벗어납니다.)</target>
        </trans-unit>
        <trans-unit id="6b58f5eaa2a826388da846448a415bd3b556b444" translate="yes" xml:space="preserve">
          <source>DROP TABLESPACE</source>
          <target state="translated">드롭 테이블 스페이스</target>
        </trans-unit>
        <trans-unit id="11cf63e97fca8f5739f4d40bb716551c534d305c" translate="yes" xml:space="preserve">
          <source>DROP USER</source>
          <target state="translated">삭제 사용자</target>
        </trans-unit>
        <trans-unit id="a812312e430870167fa53943a7ddb12f6f0e7ef7" translate="yes" xml:space="preserve">
          <source>Data Migrations</source>
          <target state="translated">데이터 마이그레이션</target>
        </trans-unit>
        <trans-unit id="ff838532a17a9bf53f2dd50827a7cf7490286eb4" translate="yes" xml:space="preserve">
          <source>Data is written to the &lt;code&gt;GDALBand&lt;/code&gt; if the &lt;code&gt;data&lt;/code&gt; parameter is provided. The input can be of one of the following types - packed string, buffer, list, array, and NumPy array. The number of items in the input should normally correspond to the total number of pixels in the band, or to the number of pixels for a specific block of pixel values if the &lt;code&gt;offset&lt;/code&gt; and &lt;code&gt;size&lt;/code&gt; parameters are provided.</source>
          <target state="translated">&lt;code&gt;data&lt;/code&gt; 매개 변수가 제공 되면 &lt;code&gt;GDALBand&lt;/code&gt; 데이터가 기록 됩니다. 입력은 묶음 문자열, 버퍼, 목록, 배열 및 NumPy 배열 중 하나 일 수 있습니다. 입력의 항목 수는 일반적으로 대역의 총 픽셀 수 또는 &lt;code&gt;offset&lt;/code&gt; 및 &lt;code&gt;size&lt;/code&gt; 매개 변수가 제공되는 경우 특정 픽셀 값 블록의 픽셀 수와 일치해야합니다 .</target>
        </trans-unit>
        <trans-unit id="5fcb2efcf8f2609249be0f201f623f9a4d68b9b5" translate="yes" xml:space="preserve">
          <source>Data migrations and multiple databases</source>
          <target state="translated">데이터 마이그레이션 및 여러 데이터베이스</target>
        </trans-unit>
        <trans-unit id="81b7c9d512743003a90c2ad0d1f8f6a570fd978c" translate="yes" xml:space="preserve">
          <source>Data reset</source>
          <target state="translated">데이터 리셋</target>
        </trans-unit>
        <trans-unit id="b32db47328d8772b22ceb0af8cd5675ba31ec819" translate="yes" xml:space="preserve">
          <source>Data source objects can have different layers of geospatial features; however, shapefiles are only allowed to have one layer:</source>
          <target state="translated">데이터 소스 객체는 서로 다른 지리 공간 피쳐 레이어를 가질 수 있습니다. 그러나 shapefile은 하나의 레이어 만 가질 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ac512b2277dc12fb253b90cadeff4b79f7f0c52d" translate="yes" xml:space="preserve">
          <source>Data validation</source>
          <target state="translated">데이터 유효성 검사</target>
        </trans-unit>
        <trans-unit id="61074f1c958d6cdd32dad889b3d58a2d0704cbe3" translate="yes" xml:space="preserve">
          <source>Database</source>
          <target state="translated">Database</target>
        </trans-unit>
        <trans-unit id="84e4359569b343c221776e64428717c072c28795" translate="yes" xml:space="preserve">
          <source>Database &lt;a href=&quot;#django.test.TransactionTestCase.fixtures&quot;&gt;&lt;code&gt;fixtures&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">데이터베이스 &lt;a href=&quot;#django.test.TransactionTestCase.fixtures&quot;&gt; &lt;code&gt;fixtures&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="bac23f66394de8fde26d23dbcd9da3059e8c61ac" translate="yes" xml:space="preserve">
          <source>Database Exceptions</source>
          <target state="translated">데이터베이스 예외</target>
        </trans-unit>
        <trans-unit id="aba115d9062bb7b2f8814ed825125ddb7a3c96c0" translate="yes" xml:space="preserve">
          <source>Database Functions</source>
          <target state="translated">데이터베이스 기능</target>
        </trans-unit>
        <trans-unit id="cdc81aa36ed554aeb50f5d23e1a57ea70956e182" translate="yes" xml:space="preserve">
          <source>Database Representation</source>
          <target state="translated">데이터베이스 표현</target>
        </trans-unit>
        <trans-unit id="d6066bdddff4236d40fda0df2e79d644f6b86600" translate="yes" xml:space="preserve">
          <source>Database Wrappers</source>
          <target state="translated">데이터베이스 래퍼</target>
        </trans-unit>
        <trans-unit id="139d853c40c2761d9a187500ec19678b9d1407bf" translate="yes" xml:space="preserve">
          <source>Database access optimization</source>
          <target state="translated">데이터베이스 액세스 최적화</target>
        </trans-unit>
        <trans-unit id="29408e56b0a4999d99c270efbe0ec050a118eceb" translate="yes" xml:space="preserve">
          <source>Database caching</source>
          <target state="translated">데이터베이스 캐싱</target>
        </trans-unit>
        <trans-unit id="aa5f2437b66f2d6da0600c1896ec4baef76e4c08" translate="yes" xml:space="preserve">
          <source>Database connection parameters are probably different in development and in production.</source>
          <target state="translated">데이터베이스 연결 매개 변수는 개발 및 프로덕션에서 다를 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c0aa4c1f52dca8c803a9f74c78b22b38aa0a5f27" translate="yes" xml:space="preserve">
          <source>Database exceptions may be imported from &lt;code&gt;django.db&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;django.db&lt;/code&gt; 에서 데이터베이스 예외를 가져올 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="4fd856a5b46cdf9a80702df4bc303ec320caa529" translate="yes" xml:space="preserve">
          <source>Database functions</source>
          <target state="translated">데이터베이스 기능</target>
        </trans-unit>
        <trans-unit id="2abde0154d38dc69279d63ae5d700f37d56cb8f6" translate="yes" xml:space="preserve">
          <source>Database installation</source>
          <target state="translated">데이터베이스 설치</target>
        </trans-unit>
        <trans-unit id="0252e25f7f905b6ee26062252e349dd4a604862c" translate="yes" xml:space="preserve">
          <source>Database instrumentation</source>
          <target state="translated">데이터베이스 계측</target>
        </trans-unit>
        <trans-unit id="c7c76dbb51befa2b17f875f1d802153ea0d11dd7" translate="yes" xml:space="preserve">
          <source>Database migration operations</source>
          <target state="translated">데이터베이스 마이그레이션 작업</target>
        </trans-unit>
        <trans-unit id="9f880b9e5e4723468be0ca6c5c7d681c4aa5f505" translate="yes" xml:space="preserve">
          <source>Database optimization</source>
          <target state="translated">데이터베이스 최적화</target>
        </trans-unit>
        <trans-unit id="b8e88cc3a57ce147729af4249a83f5ab24a3e875" translate="yes" xml:space="preserve">
          <source>Database passwords are very sensitive. You should protect them exactly like &lt;a href=&quot;../../ref/settings#std:setting-SECRET_KEY&quot;&gt;&lt;code&gt;SECRET_KEY&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">데이터베이스 비밀번호는 매우 민감합니다. &lt;a href=&quot;../../ref/settings#std:setting-SECRET_KEY&quot;&gt; &lt;code&gt;SECRET_KEY&lt;/code&gt; &lt;/a&gt; 와 동일하게 보호해야합니다 .</target>
        </trans-unit>
        <trans-unit id="37e14fd7699801130697b1a440f51ad1ca1ba384" translate="yes" xml:space="preserve">
          <source>Database routers</source>
          <target state="translated">데이터베이스 라우터</target>
        </trans-unit>
        <trans-unit id="9014ac5cdd6d1e3f5253983d1008f07819f2c347" translate="yes" xml:space="preserve">
          <source>Database routers are installed using the &lt;a href=&quot;../../ref/settings#std:setting-DATABASE_ROUTERS&quot;&gt;&lt;code&gt;DATABASE_ROUTERS&lt;/code&gt;&lt;/a&gt; setting. This setting defines a list of class names, each specifying a router that should be used by the master router (&lt;code&gt;django.db.router&lt;/code&gt;).</source>
          <target state="translated">데이터베이스 라우터는 &lt;a href=&quot;../../ref/settings#std:setting-DATABASE_ROUTERS&quot;&gt; &lt;code&gt;DATABASE_ROUTERS&lt;/code&gt; &lt;/a&gt; 설정을 사용하여 설치됩니다 . 이 설정은 클래스 이름 목록을 정의하며 각 클래스는 마스터 라우터 ( &lt;code&gt;django.db.router&lt;/code&gt; ) 에서 사용해야하는 라우터를 지정합니다 .</target>
        </trans-unit>
        <trans-unit id="8e5e801029bb1ea439ed37b472f1040dda983357" translate="yes" xml:space="preserve">
          <source>Database setup</source>
          <target state="translated">데이터베이스 설정</target>
        </trans-unit>
        <trans-unit id="31dfaa1204a605086f8fa0fc6782bceb0f80d633" translate="yes" xml:space="preserve">
          <source>Database storage</source>
          <target state="translated">데이터베이스 스토리지</target>
        </trans-unit>
        <trans-unit id="254201a1cd6b53ffb45f6e76fbc025f80039c274" translate="yes" xml:space="preserve">
          <source>Database support</source>
          <target state="translated">데이터베이스 지원</target>
        </trans-unit>
        <trans-unit id="de63e8d097b4f4a0634d0fb814107a54e3b34258" translate="yes" xml:space="preserve">
          <source>Database transactions</source>
          <target state="translated">데이터베이스 트랜잭션</target>
        </trans-unit>
        <trans-unit id="03fadeac0d68486e07c4ee9405b6335d13f52505" translate="yes" xml:space="preserve">
          <source>Database-specific fixtures</source>
          <target state="translated">데이터베이스 별 비품</target>
        </trans-unit>
        <trans-unit id="d3363d01cf150e94ab392893f862d8912e00e815" translate="yes" xml:space="preserve">
          <source>Database-specific notes</source>
          <target state="translated">데이터베이스 별 노트</target>
        </trans-unit>
        <trans-unit id="3b86ef0c86ec30b96def201de4b90737947c4f05" translate="yes" xml:space="preserve">
          <source>Database: &lt;a href=&quot;#std:setting-DATABASE-TEST&quot;&gt;&lt;code&gt;TEST&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">데이터베이스 : &lt;a href=&quot;#std:setting-DATABASE-TEST&quot;&gt; &lt;code&gt;TEST&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d9df769b266c487f912c433c67364fc569bb2078" translate="yes" xml:space="preserve">
          <source>Databases</source>
          <target state="translated">Databases</target>
        </trans-unit>
        <trans-unit id="556659043954d5da31cc2609356e020369c828d9" translate="yes" xml:space="preserve">
          <source>Databases can have any alias you choose. However, the alias &lt;code&gt;default&lt;/code&gt; has special significance. Django uses the database with the alias of &lt;code&gt;default&lt;/code&gt; when no other database has been selected.</source>
          <target state="translated">데이터베이스는 원하는 별칭을 가질 수 있습니다. 그러나 별명 &lt;code&gt;default&lt;/code&gt; 에는 특별한 의미가 있습니다. Django는 다른 데이터베이스를 선택하지 않은 경우 &lt;code&gt;default&lt;/code&gt; 별칭으로 데이터베이스를 사용합니다 .</target>
        </trans-unit>
        <trans-unit id="13c3f652b5771ee2eca91ff8e23a77ac196a7c18" translate="yes" xml:space="preserve">
          <source>Databases timezone</source>
          <target state="translated">데이터베이스 시간대</target>
        </trans-unit>
        <trans-unit id="b958a8c281531157c9f0c685ef5f87dc2bb49c4a" translate="yes" xml:space="preserve">
          <source>Date functions</source>
          <target state="translated">날짜 함수</target>
        </trans-unit>
        <trans-unit id="722e02eb4754ac850e59c24add2024f3104621a9" translate="yes" xml:space="preserve">
          <source>Date-based generic views, provided in &lt;a href=&quot;#module-django.views.generic.dates&quot;&gt;&lt;code&gt;django.views.generic.dates&lt;/code&gt;&lt;/a&gt;, are views for displaying drilldown pages for date-based data.</source>
          <target state="translated">&lt;a href=&quot;#module-django.views.generic.dates&quot;&gt; &lt;code&gt;django.views.generic.dates&lt;/code&gt; 에&lt;/a&gt; 제공된 날짜 기반 일반보기 는 날짜 기반 데이터에 대한 드릴 다운 페이지를 표시하기위한보기입니다.</target>
        </trans-unit>
        <trans-unit id="cc1cc70f02e495d4e6ff10b231493be79279e537" translate="yes" xml:space="preserve">
          <source>Date-based mixins</source>
          <target state="translated">날짜 기반 믹스 인</target>
        </trans-unit>
        <trans-unit id="cb1ffdd5723c9c074a2c27bcd8a7723fe2f52f65" translate="yes" xml:space="preserve">
          <source>Date-based views</source>
          <target state="translated">날짜 별보기</target>
        </trans-unit>
        <trans-unit id="8e078bbb68dd3331035b940f947c4a5719704861" translate="yes" xml:space="preserve">
          <source>Day of the month without leading zeros.</source>
          <target state="translated">선행 0이없는 월의 일.</target>
        </trans-unit>
        <trans-unit id="b807017dea44363d85cc772768a88a0eabd8fdc2" translate="yes" xml:space="preserve">
          <source>Day of the month, 2 digits with leading zeros.</source>
          <target state="translated">월의 일, 앞에 0이있는 2 자리</target>
        </trans-unit>
        <trans-unit id="55d62f5c366cf10a550473d88dce2a8d8ebc13fb" translate="yes" xml:space="preserve">
          <source>Day of the week, digits without leading zeros.</source>
          <target state="translated">요일, 앞에 0이없는 숫자</target>
        </trans-unit>
        <trans-unit id="eb83669585b40f30731fa803eeb62366ad3de470" translate="yes" xml:space="preserve">
          <source>Day of the week, textual, 3 letters.</source>
          <target state="translated">요일, 문자, 3 글자.</target>
        </trans-unit>
        <trans-unit id="ed8cb970427579b8db2c4d5c57a0060c0319253e" translate="yes" xml:space="preserve">
          <source>Day of the week, textual, long.</source>
          <target state="translated">요일, 텍스트, 긴</target>
        </trans-unit>
        <trans-unit id="9d217acf15d9c91018c040a87e1a6703ff4783db" translate="yes" xml:space="preserve">
          <source>Day of the year.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51f65709e1fa200146c24178ae25721f4965a72b" translate="yes" xml:space="preserve">
          <source>Day-based archive page &amp;ndash; displays all entries in the given day.</source>
          <target state="translated">일별 보관 페이지 &amp;ndash; 주어진 날의 모든 항목을 표시합니다.</target>
        </trans-unit>
        <trans-unit id="cf376db74e48db2de7a580650158c8e131860084" translate="yes" xml:space="preserve">
          <source>Daylight Savings Time, whether it&amp;rsquo;s in effect or not.</source>
          <target state="translated">효과의 유무에 관계없이 일광 절약 시간.</target>
        </trans-unit>
        <trans-unit id="e2269848e603601cacee606bc27a4cecca3cf161" translate="yes" xml:space="preserve">
          <source>Deactivates the currently active translation object so that further _ calls will resolve against the default translation object, again.</source>
          <target state="translated">현재 활성화 된 변환 개체를 비활성화하여 추가 _ 호출이 기본 변환 개체에 대해 다시 해결되도록합니다.</target>
        </trans-unit>
        <trans-unit id="b1cbf2732fefc0bef13dd4d4df04fdfa0d736ebd" translate="yes" xml:space="preserve">
          <source>Deactivating transaction management</source>
          <target state="translated">트랜잭션 관리 비활성화</target>
        </trans-unit>
        <trans-unit id="5cd4b6926376e0aec947ef8f062c7452118e99af" translate="yes" xml:space="preserve">
          <source>Dealing with aware datetime objects isn&amp;rsquo;t always intuitive. For instance, the &lt;code&gt;tzinfo&lt;/code&gt; argument of the standard datetime constructor doesn&amp;rsquo;t work reliably for time zones with DST. Using UTC is generally safe; if you&amp;rsquo;re using other time zones, you should review the &lt;a href=&quot;http://pytz.sourceforge.net/&quot;&gt;pytz&lt;/a&gt; documentation carefully.</source>
          <target state="translated">날짜 / 시간 객체를 인식하는 것이 항상 직관적 인 것은 아닙니다. 예를 들어 표준 날짜 / 시간 생성자 의 &lt;code&gt;tzinfo&lt;/code&gt; 인수는 DST가있는 시간대에서 안정적으로 작동하지 않습니다. UTC를 사용하는 것이 일반적으로 안전합니다. 다른 시간대를 사용하는 경우 &lt;a href=&quot;http://pytz.sourceforge.net/&quot;&gt;pytz&lt;/a&gt; 설명서를주의 깊게 검토해야합니다 .</target>
        </trans-unit>
        <trans-unit id="52a3bbdf305e5eee2989a426b9bc475e127fd785" translate="yes" xml:space="preserve">
          <source>Dealing with conflicts</source>
          <target state="translated">갈등 다루기</target>
        </trans-unit>
        <trans-unit id="3ff864b9048671a9eba40ddeb105557bfb77fe4e" translate="yes" xml:space="preserve">
          <source>Dealing with forms that have &lt;code&gt;FileField&lt;/code&gt; and &lt;code&gt;ImageField&lt;/code&gt; fields is a little more complicated than a normal form.</source>
          <target state="translated">&lt;code&gt;FileField&lt;/code&gt; 및 &lt;code&gt;ImageField&lt;/code&gt; 필드가있는 양식을 처리 하는 것은 일반 양식보다 약간 더 복잡합니다.</target>
        </trans-unit>
        <trans-unit id="31974ede893790b6091543eb2ad457264207da69" translate="yes" xml:space="preserve">
          <source>Dealing with ordering and deletion of forms</source>
          <target state="translated">양식의 순서 및 삭제 처리</target>
        </trans-unit>
        <trans-unit id="617b08e20f97d4dbfa8241cf495eb982b9ba2ca3" translate="yes" xml:space="preserve">
          <source>Dealing with streaming responses</source>
          <target state="translated">스트리밍 응답 처리</target>
        </trans-unit>
        <trans-unit id="e3afa8dd01711103e96589a90b95ce9fc84b48ee" translate="yes" xml:space="preserve">
          <source>Debug integration for custom engines</source>
          <target state="translated">맞춤형 엔진을위한 디버그 통합</target>
        </trans-unit>
        <trans-unit id="895b27c88016513d278a0ce3dc0663fae3829d58" translate="yes" xml:space="preserve">
          <source>Debugging</source>
          <target state="translated">Debugging</target>
        </trans-unit>
        <trans-unit id="0f569ab827cea4307fb56e4d259c3fb468135b4c" translate="yes" xml:space="preserve">
          <source>Decimal handling</source>
          <target state="translated">소수 처리</target>
        </trans-unit>
        <trans-unit id="e477488866d963ac8a2e2a726cd08a51d3e7f0af" translate="yes" xml:space="preserve">
          <source>Declaring tablespaces for indexes</source>
          <target state="translated">인덱스에 대한 테이블 스페이스 선언</target>
        </trans-unit>
        <trans-unit id="3ca53cee65ec35cdc69d4aa4faa1f9ae01c2323a" translate="yes" xml:space="preserve">
          <source>Declaring tablespaces for tables</source>
          <target state="translated">테이블의 테이블 스페이스 선언</target>
        </trans-unit>
        <trans-unit id="c59fb0bb941962f005be45aac075ea6b6506029d" translate="yes" xml:space="preserve">
          <source>Decodes a base64 encoded string, adding back any trailing equal signs that might have been stripped.</source>
          <target state="translated">base64로 인코딩 된 문자열을 디코딩하여 제거되었을 수있는 후행 등호를 다시 추가합니다.</target>
        </trans-unit>
        <trans-unit id="7f1057027db663ad03628a7e9b7e58b2eed4218b" translate="yes" xml:space="preserve">
          <source>Decoding is performed by the session store class.</source>
          <target state="translated">디코딩은 세션 저장소 클래스에 의해 수행됩니다.</target>
        </trans-unit>
        <trans-unit id="82408e489aa5a6b0f0d4cec1f18c6b2a57031709" translate="yes" xml:space="preserve">
          <source>Decorating class-based views</source>
          <target state="translated">클래스 기반 뷰 장식</target>
        </trans-unit>
        <trans-unit id="6bef610601777b9150d1e821dfed27022cdf98a2" translate="yes" xml:space="preserve">
          <source>Decorating in URLconf</source>
          <target state="translated">URLconf로 꾸미기</target>
        </trans-unit>
        <trans-unit id="67ec55df0349b8b264b29b9e73078a50c7ebe91f" translate="yes" xml:space="preserve">
          <source>Decorating the class</source>
          <target state="translated">수업 꾸미기</target>
        </trans-unit>
        <trans-unit id="8d0cd2fea7b605a0b9b931e6db6412863ba912e9" translate="yes" xml:space="preserve">
          <source>Decorator that provides the protection of &lt;code&gt;CsrfViewMiddleware&lt;/code&gt; to a view.</source>
          <target state="translated">&lt;code&gt;CsrfViewMiddleware&lt;/code&gt; 를보기에 보호하는 데코레이터 .</target>
        </trans-unit>
        <trans-unit id="972f8e67f89bd5e0ee7eb2a48682855b93e80882" translate="yes" xml:space="preserve">
          <source>Decorator to require that a view only accepts particular request methods. Usage:</source>
          <target state="translated">뷰가 특정 요청 방법 만 허용하도록하는 데코레이터. 용법:</target>
        </trans-unit>
        <trans-unit id="3c9fd7a0d9a26379b735568c0936722ca89e1544" translate="yes" xml:space="preserve">
          <source>Decorator to require that a view only accepts the GET and HEAD methods. These methods are commonly considered &amp;ldquo;safe&amp;rdquo; because they should not have the significance of taking an action other than retrieving the requested resource.</source>
          <target state="translated">뷰가 GET 및 HEAD 메소드 만 허용하도록하는 데코레이터. 이러한 방법은 일반적으로 &quot;안전한&quot;것으로 간주됩니다. 요청 된 리소스를 검색하는 것 이외의 작업을 수행 할 의의가 없어야하기 때문입니다.</target>
        </trans-unit>
        <trans-unit id="1ca9b58e5c658446309b8f4617d734c96d8a5221" translate="yes" xml:space="preserve">
          <source>Decorator to require that a view only accepts the GET method.</source>
          <target state="translated">뷰가 GET 메소드 만 허용하도록하는 데코레이터.</target>
        </trans-unit>
        <trans-unit id="f63237f3cde011215cbd36f39fc19a2e6569920b" translate="yes" xml:space="preserve">
          <source>Decorator to require that a view only accepts the POST method.</source>
          <target state="translated">뷰가 POST 메소드 만 허용하도록하는 데코레이터.</target>
        </trans-unit>
        <trans-unit id="808d7dca8a74d84af27a2d6602c3d786de45fe1e" translate="yes" xml:space="preserve">
          <source>Default</source>
          <target state="translated">Default</target>
        </trans-unit>
        <trans-unit id="3b0fe449d57e268a242fe7327c25ad202ce29960" translate="yes" xml:space="preserve">
          <source>Default alias: &lt;code&gt;&amp;lt;field&amp;gt;__avg&lt;/code&gt;</source>
          <target state="translated">기본 별명 : &lt;code&gt;&amp;lt;field&amp;gt;__avg&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3eaf6c75d4bd5d8d352ce896722d2d60a3da505a" translate="yes" xml:space="preserve">
          <source>Default alias: &lt;code&gt;&amp;lt;field&amp;gt;__count&lt;/code&gt;</source>
          <target state="translated">기본 별칭 : &lt;code&gt;&amp;lt;field&amp;gt;__count&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7bf958307ec625f89e7e98794f1ef83fb00e2434" translate="yes" xml:space="preserve">
          <source>Default alias: &lt;code&gt;&amp;lt;field&amp;gt;__max&lt;/code&gt;</source>
          <target state="translated">기본 별칭 : &lt;code&gt;&amp;lt;field&amp;gt;__max&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="81a2b03f6caf151b5d73c09404079f4f6445cf5b" translate="yes" xml:space="preserve">
          <source>Default alias: &lt;code&gt;&amp;lt;field&amp;gt;__min&lt;/code&gt;</source>
          <target state="translated">기본 별칭 : &lt;code&gt;&amp;lt;field&amp;gt;__min&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="501c6641474c76547a2948547e923a6fe357c5bc" translate="yes" xml:space="preserve">
          <source>Default alias: &lt;code&gt;&amp;lt;field&amp;gt;__stddev&lt;/code&gt;</source>
          <target state="translated">기본 별명 : &lt;code&gt;&amp;lt;field&amp;gt;__stddev&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1135bbbe27a179415d3e4f2ab9055f804ee1d624" translate="yes" xml:space="preserve">
          <source>Default alias: &lt;code&gt;&amp;lt;field&amp;gt;__sum&lt;/code&gt;</source>
          <target state="translated">기본 별명 : &lt;code&gt;&amp;lt;field&amp;gt;__sum&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="fe72e50aa6157456761eaa0a11e54b0cbf5b1c11" translate="yes" xml:space="preserve">
          <source>Default alias: &lt;code&gt;&amp;lt;field&amp;gt;__variance&lt;/code&gt;</source>
          <target state="translated">기본 별명 : &lt;code&gt;&amp;lt;field&amp;gt;__variance&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="24d84a2eb70fb18836de40a22e38c9de9ff0c038" translate="yes" xml:space="preserve">
          <source>Default charset to use for all &lt;code&gt;HttpResponse&lt;/code&gt; objects, if a MIME type isn&amp;rsquo;t manually specified. Used when constructing the &lt;code&gt;Content-Type&lt;/code&gt; header.</source>
          <target state="translated">MIME 유형을 수동으로 지정하지 않은 경우 모든 &lt;code&gt;HttpResponse&lt;/code&gt; 객체 에 사용할 기본 문자 집합입니다. &lt;code&gt;Content-Type&lt;/code&gt; 헤더를 구성 할 때 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="e65e7dabc01b374a999316b09f6e602c1a427c4e" translate="yes" xml:space="preserve">
          <source>Default decimal separator used when formatting decimal numbers.</source>
          <target state="translated">10 진수 형식을 지정할 때 사용되는 기본 10 진수 구분 기호입니다.</target>
        </trans-unit>
        <trans-unit id="6b13cc3341a4dd79a6a1c1eb5801aae744b7f3c9" translate="yes" xml:space="preserve">
          <source>Default email address to use for various automated correspondence from the site manager(s). This doesn&amp;rsquo;t include error messages sent to &lt;a href=&quot;#std:setting-ADMINS&quot;&gt;&lt;code&gt;ADMINS&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#std:setting-MANAGERS&quot;&gt;&lt;code&gt;MANAGERS&lt;/code&gt;&lt;/a&gt;; for that, see &lt;a href=&quot;#std:setting-SERVER_EMAIL&quot;&gt;&lt;code&gt;SERVER_EMAIL&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">사이트 관리자의 다양한 자동 통신에 사용할 기본 이메일 주소입니다. 여기에는 &lt;a href=&quot;#std:setting-ADMINS&quot;&gt; &lt;code&gt;ADMINS&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#std:setting-MANAGERS&quot;&gt; &lt;code&gt;MANAGERS&lt;/code&gt; 로&lt;/a&gt; 전송 된 오류 메시지가 포함되지 않습니다 . 이에 대해서는 &lt;a href=&quot;#std:setting-SERVER_EMAIL&quot;&gt; &lt;code&gt;SERVER_EMAIL&lt;/code&gt; 을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="5fb44ecfff41fd115c1b6e966af813aa712ecb3d" translate="yes" xml:space="preserve">
          <source>Default exception reporter filter class to be used if none has been assigned to the &lt;a href=&quot;request-response#django.http.HttpRequest&quot;&gt;&lt;code&gt;HttpRequest&lt;/code&gt;&lt;/a&gt; instance yet. See &lt;a href=&quot;../howto/error-reporting#filtering-error-reports&quot;&gt;Filtering error reports&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;request-response#django.http.HttpRequest&quot;&gt; &lt;code&gt;HttpRequest&lt;/code&gt; &lt;/a&gt; 인스턴스에 아직 할당되지 않은 경우 사용할 기본 예외 리포터 필터 클래스 입니다. &lt;a href=&quot;../howto/error-reporting#filtering-error-reports&quot;&gt;오류 보고서 필터링을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="9f6bd7c5b8f99d4c3287ab161141ae82712f34c6" translate="yes" xml:space="preserve">
          <source>Default file storage</source>
          <target state="translated">기본 파일 저장</target>
        </trans-unit>
        <trans-unit id="6d6d27203a47ff3eb307b6d6007ca286fb0acfeb" translate="yes" xml:space="preserve">
          <source>Default file storage class to be used for any file-related operations that don&amp;rsquo;t specify a particular storage system. See &lt;a href=&quot;../topics/files&quot;&gt;Managing files&lt;/a&gt;.</source>
          <target state="translated">특정 스토리지 시스템을 지정하지 않은 파일 관련 작업에 사용되는 기본 파일 스토리지 클래스입니다. &lt;a href=&quot;../topics/files&quot;&gt;파일 관리를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="50a0916ed3f84c51b602042d09ce4dddbd8c564b" translate="yes" xml:space="preserve">
          <source>Default managers</source>
          <target state="translated">기본 관리자</target>
        </trans-unit>
        <trans-unit id="3756df3c62f47f45ddc117d75f48aa29a7d1dddb" translate="yes" xml:space="preserve">
          <source>Default options</source>
          <target state="translated">기본 옵션</target>
        </trans-unit>
        <trans-unit id="996c921f2aac61858015eef2b97cb09b1e41b64e" translate="yes" xml:space="preserve">
          <source>Default ordering also affects &lt;a href=&quot;../../topics/db/aggregation#aggregation-ordering-interaction&quot;&gt;aggregation queries&lt;/a&gt; but this won&amp;rsquo;t be the case starting in Django 3.1.</source>
          <target state="translated">기본 순서는 &lt;a href=&quot;../../topics/db/aggregation#aggregation-ordering-interaction&quot;&gt;집계 쿼리&lt;/a&gt; 에도 영향을 미치지 만 Django 3.1부터는 그렇지 않습니다.</target>
        </trans-unit>
        <trans-unit id="cec06182adb9ef48485b8098e33a5cb872878965" translate="yes" xml:space="preserve">
          <source>Default permissions</source>
          <target state="translated">기본 권한</target>
        </trans-unit>
        <trans-unit id="82a7c50e5936d25255d8f80258ec7514452c02fd" translate="yes" xml:space="preserve">
          <source>Default return value for &lt;a href=&quot;#django.contrib.auth.mixins.AccessMixin.get_login_url&quot;&gt;&lt;code&gt;get_login_url()&lt;/code&gt;&lt;/a&gt;. Defaults to &lt;code&gt;None&lt;/code&gt; in which case &lt;a href=&quot;#django.contrib.auth.mixins.AccessMixin.get_login_url&quot;&gt;&lt;code&gt;get_login_url()&lt;/code&gt;&lt;/a&gt; falls back to &lt;a href=&quot;../../ref/settings#std:setting-LOGIN_URL&quot;&gt;&lt;code&gt;settings.LOGIN_URL&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#django.contrib.auth.mixins.AccessMixin.get_login_url&quot;&gt; &lt;code&gt;get_login_url()&lt;/code&gt; &lt;/a&gt; 기본 반환 값입니다 . 기본값은 &lt;code&gt;None&lt;/code&gt; 하는 경우에 &lt;a href=&quot;#django.contrib.auth.mixins.AccessMixin.get_login_url&quot;&gt; &lt;code&gt;get_login_url()&lt;/code&gt; &lt;/a&gt; 다시 하락한다 &lt;a href=&quot;../../ref/settings#std:setting-LOGIN_URL&quot;&gt; &lt;code&gt;settings.LOGIN_URL&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ca3f7bd4f5652d2aafd39eed12ef8ded4b329415" translate="yes" xml:space="preserve">
          <source>Default return value for &lt;a href=&quot;#django.contrib.auth.mixins.AccessMixin.get_permission_denied_message&quot;&gt;&lt;code&gt;get_permission_denied_message()&lt;/code&gt;&lt;/a&gt;. Defaults to an empty string.</source>
          <target state="translated">&lt;a href=&quot;#django.contrib.auth.mixins.AccessMixin.get_permission_denied_message&quot;&gt; &lt;code&gt;get_permission_denied_message()&lt;/code&gt; &lt;/a&gt; 기본 반환 값입니다 . 기본값은 빈 문자열입니다.</target>
        </trans-unit>
        <trans-unit id="ec3964d878af62515ab9444a067c3f00ef457bdb" translate="yes" xml:space="preserve">
          <source>Default return value for &lt;a href=&quot;#django.contrib.auth.mixins.AccessMixin.get_redirect_field_name&quot;&gt;&lt;code&gt;get_redirect_field_name()&lt;/code&gt;&lt;/a&gt;. Defaults to &lt;code&gt;&quot;next&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;#django.contrib.auth.mixins.AccessMixin.get_redirect_field_name&quot;&gt; &lt;code&gt;get_redirect_field_name()&lt;/code&gt; &lt;/a&gt; 기본 리턴 값 . 기본값은 &lt;code&gt;&quot;next&quot;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="57afbebd04d4d02458682eb7fa90339a9d41caac" translate="yes" xml:space="preserve">
          <source>Default settings</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be4415a1ce985191113c4bb5cb2500ff02b89f6a" translate="yes" xml:space="preserve">
          <source>Default tablespace to use for indexes on fields that don&amp;rsquo;t specify one, if the backend supports it (see &lt;a href=&quot;../topics/db/tablespaces&quot;&gt;Tablespaces&lt;/a&gt;).</source>
          <target state="translated">백엔드가 지원하는 경우 지정하지 않은 필드의 인덱스에 사용할 기본 테이블 스페이스입니다 ( &lt;a href=&quot;../topics/db/tablespaces&quot;&gt;테이블 스페이스&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="6da8375a64a743aeebdcbfc4d9587db3ab1fde74" translate="yes" xml:space="preserve">
          <source>Default tablespace to use for models that don&amp;rsquo;t specify one, if the backend supports it (see &lt;a href=&quot;../topics/db/tablespaces&quot;&gt;Tablespaces&lt;/a&gt;).</source>
          <target state="translated">백엔드에서 지원하는 경우 지정하지 않은 모델에 사용할 기본 테이블 스페이스입니다 ( &lt;a href=&quot;../topics/db/tablespaces&quot;&gt;테이블 스페이스&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="3c990d8a53e39e8b302130b171d6366213cbb402" translate="yes" xml:space="preserve">
          <source>Default test client</source>
          <target state="translated">기본 테스트 클라이언트</target>
        </trans-unit>
        <trans-unit id="dfd09f8fd9cf2c070c82bec7a1d8ebc98a5ef611" translate="yes" xml:space="preserve">
          <source>Default thousand separator used when formatting numbers. This setting is used only when &lt;a href=&quot;#std:setting-USE_THOUSAND_SEPARATOR&quot;&gt;&lt;code&gt;USE_THOUSAND_SEPARATOR&lt;/code&gt;&lt;/a&gt; is &lt;code&gt;True&lt;/code&gt; and &lt;a href=&quot;#std:setting-NUMBER_GROUPING&quot;&gt;&lt;code&gt;NUMBER_GROUPING&lt;/code&gt;&lt;/a&gt; is greater than &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="translated">숫자 서식을 지정할 때 기본 천 단위 구분 기호가 사용됩니다. 이 설정은 &lt;a href=&quot;#std:setting-USE_THOUSAND_SEPARATOR&quot;&gt; &lt;code&gt;USE_THOUSAND_SEPARATOR&lt;/code&gt; &lt;/a&gt; 가 &lt;code&gt;True&lt;/code&gt; 이고 &lt;a href=&quot;#std:setting-NUMBER_GROUPING&quot;&gt; &lt;code&gt;NUMBER_GROUPING&lt;/code&gt; &lt;/a&gt; 이 &lt;code&gt;0&lt;/code&gt; 보다 큰 경우 에만 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="60101bb52e0eb77d1dffe8d347f02222b3adc952" translate="yes" xml:space="preserve">
          <source>Default time zone and current time zone</source>
          <target state="translated">기본 시간대 및 현재 시간대</target>
        </trans-unit>
        <trans-unit id="30dcd9266de46024c5550a95bf06e6551c891c06" translate="yes" xml:space="preserve">
          <source>Default translation and loaded translations</source>
          <target state="translated">기본 번역 및로드 된 번역</target>
        </trans-unit>
        <trans-unit id="358f756060b88e7ac6c296590e4f9a6dfd4562ca" translate="yes" xml:space="preserve">
          <source>Default widget: &lt;a href=&quot;widgets#django.forms.CheckboxInput&quot;&gt;&lt;code&gt;CheckboxInput&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">기본 위젯 : &lt;a href=&quot;widgets#django.forms.CheckboxInput&quot;&gt; &lt;code&gt;CheckboxInput&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="089fe43d0305a75b72b2fc9fd0c7a2cfadbdd100" translate="yes" xml:space="preserve">
          <source>Default widget: &lt;a href=&quot;widgets#django.forms.ClearableFileInput&quot;&gt;&lt;code&gt;ClearableFileInput&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">기본 위젯 : &lt;a href=&quot;widgets#django.forms.ClearableFileInput&quot;&gt; &lt;code&gt;ClearableFileInput&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="973eef6613272c16ce8ff919da8800344eed11b3" translate="yes" xml:space="preserve">
          <source>Default widget: &lt;a href=&quot;widgets#django.forms.DateInput&quot;&gt;&lt;code&gt;DateInput&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">기본 위젯 : &lt;a href=&quot;widgets#django.forms.DateInput&quot;&gt; &lt;code&gt;DateInput&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="010317b0fbc21e70bbdc610a64db58fbe24a1058" translate="yes" xml:space="preserve">
          <source>Default widget: &lt;a href=&quot;widgets#django.forms.DateTimeInput&quot;&gt;&lt;code&gt;DateTimeInput&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">기본 위젯 : &lt;a href=&quot;widgets#django.forms.DateTimeInput&quot;&gt; &lt;code&gt;DateTimeInput&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e289b2a85750f2010538e3332df07cbca51a421e" translate="yes" xml:space="preserve">
          <source>Default widget: &lt;a href=&quot;widgets#django.forms.EmailInput&quot;&gt;&lt;code&gt;EmailInput&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">기본 위젯 : &lt;a href=&quot;widgets#django.forms.EmailInput&quot;&gt; &lt;code&gt;EmailInput&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="77d144f985bd591ee2a97487b8be2a1c6e9ee0f3" translate="yes" xml:space="preserve">
          <source>Default widget: &lt;a href=&quot;widgets#django.forms.NullBooleanSelect&quot;&gt;&lt;code&gt;NullBooleanSelect&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">기본 위젯 : &lt;a href=&quot;widgets#django.forms.NullBooleanSelect&quot;&gt; &lt;code&gt;NullBooleanSelect&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3c2869b87f6e3bd55fdd1fa60a76bde3b1f910c8" translate="yes" xml:space="preserve">
          <source>Default widget: &lt;a href=&quot;widgets#django.forms.NumberInput&quot;&gt;&lt;code&gt;NumberInput&lt;/code&gt;&lt;/a&gt; when &lt;a href=&quot;#django.forms.Field.localize&quot;&gt;&lt;code&gt;Field.localize&lt;/code&gt;&lt;/a&gt; is &lt;code&gt;False&lt;/code&gt;, else &lt;a href=&quot;widgets#django.forms.TextInput&quot;&gt;&lt;code&gt;TextInput&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">기본 위젯 : &lt;a href=&quot;widgets#django.forms.NumberInput&quot;&gt; &lt;code&gt;NumberInput&lt;/code&gt; &lt;/a&gt; 가 &lt;code&gt;False&lt;/code&gt; 인 경우 &lt;a href=&quot;#django.forms.Field.localize&quot;&gt; &lt;code&gt;Field.localize&lt;/code&gt; &lt;/a&gt; , 그렇지 않으면 &lt;a href=&quot;widgets#django.forms.TextInput&quot;&gt; &lt;code&gt;TextInput&lt;/code&gt; &lt;/a&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="d9b9563d18b281e60f2309788320e1b53668806a" translate="yes" xml:space="preserve">
          <source>Default widget: &lt;a href=&quot;widgets#django.forms.Select&quot;&gt;&lt;code&gt;Select&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">기본 위젯 : &lt;a href=&quot;widgets#django.forms.Select&quot;&gt; &lt;code&gt;Select&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="534d27365a71daaeb4057cacfa758a7494188dae" translate="yes" xml:space="preserve">
          <source>Default widget: &lt;a href=&quot;widgets#django.forms.SelectMultiple&quot;&gt;&lt;code&gt;SelectMultiple&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">기본 위젯 : &lt;a href=&quot;widgets#django.forms.SelectMultiple&quot;&gt; &lt;code&gt;SelectMultiple&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="032ac55edbf5e8dd3296d97c892ee0be45509407" translate="yes" xml:space="preserve">
          <source>Default widget: &lt;a href=&quot;widgets#django.forms.SplitDateTimeWidget&quot;&gt;&lt;code&gt;SplitDateTimeWidget&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">기본 위젯 : &lt;a href=&quot;widgets#django.forms.SplitDateTimeWidget&quot;&gt; &lt;code&gt;SplitDateTimeWidget&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ee64ba75c25272a4b678ec490759a45df9fea43c" translate="yes" xml:space="preserve">
          <source>Default widget: &lt;a href=&quot;widgets#django.forms.TextInput&quot;&gt;&lt;code&gt;TextInput&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">기본 위젯 : &lt;a href=&quot;widgets#django.forms.TextInput&quot;&gt; &lt;code&gt;TextInput&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="89e577748ccae2d5a6c089d9b2e3df6f677ae933" translate="yes" xml:space="preserve">
          <source>Default widget: &lt;a href=&quot;widgets#django.forms.TimeInput&quot;&gt;&lt;code&gt;TimeInput&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">기본 위젯 : &lt;a href=&quot;widgets#django.forms.TimeInput&quot;&gt; &lt;code&gt;TimeInput&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d88c5aa4c223d3684cb4dc0826eb93490073fbef" translate="yes" xml:space="preserve">
          <source>Default widget: &lt;a href=&quot;widgets#django.forms.URLInput&quot;&gt;&lt;code&gt;URLInput&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">기본 위젯 : &lt;a href=&quot;widgets#django.forms.URLInput&quot;&gt; &lt;code&gt;URLInput&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="317bbd656753a9dd8ea52dce97e89a2822b25653" translate="yes" xml:space="preserve">
          <source>Default:</source>
          <target state="translated">Default:</target>
        </trans-unit>
        <trans-unit id="67db1cf2fd03a0f9fab47af0e36125a4f8eb93b5" translate="yes" xml:space="preserve">
          <source>Default: &lt;a href=&quot;../../ref/forms/widgets#django.forms.NumberInput&quot;&gt;&lt;code&gt;NumberInput&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">기본값 : &lt;a href=&quot;../../ref/forms/widgets#django.forms.NumberInput&quot;&gt; &lt;code&gt;NumberInput&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="997b4e79338b2ff2f204e9eb72659e0e6bf81846" translate="yes" xml:space="preserve">
          <source>Default: &lt;code&gt;''&lt;/code&gt; (Empty string)</source>
          <target state="translated">기본값 : &lt;code&gt;''&lt;/code&gt; (빈 문자열)</target>
        </trans-unit>
        <trans-unit id="e0bdf55c46aa3abf5f646929023b1e4bb7a1c84a" translate="yes" xml:space="preserve">
          <source>Default: &lt;code&gt;','&lt;/code&gt; (Comma)</source>
          <target state="translated">기본값 : &lt;code&gt;','&lt;/code&gt; (쉼표)</target>
        </trans-unit>
        <trans-unit id="795d7b6a3f7d0f9376b6a55b32fcfc5ea14c9506" translate="yes" xml:space="preserve">
          <source>Default: &lt;code&gt;'.'&lt;/code&gt; (Dot)</source>
          <target state="translated">기본값 : &lt;code&gt;'.'&lt;/code&gt; (점)</target>
        </trans-unit>
        <trans-unit id="0196e5ded7a96507722ab400f335ed4fa4dab0ed" translate="yes" xml:space="preserve">
          <source>Default: &lt;code&gt;'/'&lt;/code&gt;</source>
          <target state="translated">기본값 : &lt;code&gt;'/'&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="fb78754b9ff0ab81a2f71c590df83bfde7eb5c25" translate="yes" xml:space="preserve">
          <source>Default: &lt;code&gt;'/accounts/login/'&lt;/code&gt;</source>
          <target state="translated">기본값 : &lt;code&gt;'/accounts/login/'&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7eba43577560ed12140f3b8ed6ae2b2dba63bb0d" translate="yes" xml:space="preserve">
          <source>Default: &lt;code&gt;'/accounts/profile/'&lt;/code&gt;</source>
          <target state="translated">기본값 : &lt;code&gt;'/accounts/profile/'&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="fc001f4043e6bf6194bf8be2b6a6167ec4373c69" translate="yes" xml:space="preserve">
          <source>Default: &lt;code&gt;'25M'&lt;/code&gt;</source>
          <target state="translated">기본값 : &lt;code&gt;'25M'&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0ffc792bcfa56d1810f92db32cbe8ff39d40ac42" translate="yes" xml:space="preserve">
          <source>Default: &lt;code&gt;'500M'&lt;/code&gt;</source>
          <target state="translated">기본값 : &lt;code&gt;'500M'&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8bdbee6dd20cc632090d2f78666f5c91a75224d8" translate="yes" xml:space="preserve">
          <source>Default: &lt;code&gt;'50M'&lt;/code&gt;</source>
          <target state="translated">기본값 : &lt;code&gt;'50M'&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7642e98b345a25f91d739ed609f98ce8439cca75" translate="yes" xml:space="preserve">
          <source>Default: &lt;code&gt;'&lt;/code&gt;&lt;a href=&quot;../howto/error-reporting#django.views.debug.SafeExceptionReporterFilter&quot;&gt;&lt;code&gt;django.views.debug.SafeExceptionReporterFilter&lt;/code&gt;&lt;/a&gt;&lt;code&gt;'&lt;/code&gt;</source>
          <target state="translated">기본값 : &lt;code&gt;'&lt;/code&gt; &lt;a href=&quot;../howto/error-reporting#django.views.debug.SafeExceptionReporterFilter&quot;&gt; &lt;code&gt;django.views.debug.SafeExceptionReporterFilter&lt;/code&gt; &lt;/a&gt; &lt;code&gt;'&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a4a5220270185773c92b5ea4f5c02aac05a4f8da" translate="yes" xml:space="preserve">
          <source>Default: &lt;code&gt;'&lt;/code&gt;&lt;a href=&quot;../topics/email#django.core.mail.backends.smtp.EmailBackend&quot;&gt;&lt;code&gt;django.core.mail.backends.smtp.EmailBackend&lt;/code&gt;&lt;/a&gt;&lt;code&gt;'&lt;/code&gt;</source>
          <target state="translated">기본값 : &lt;code&gt;'&lt;/code&gt; &lt;a href=&quot;../topics/email#django.core.mail.backends.smtp.EmailBackend&quot;&gt; &lt;code&gt;django.core.mail.backends.smtp.EmailBackend&lt;/code&gt; &lt;/a&gt; &lt;code&gt;'&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8d93e1064ff7f8b54ec2be614c28f7c5625f43a4" translate="yes" xml:space="preserve">
          <source>Default: &lt;code&gt;'&lt;/code&gt;&lt;a href=&quot;files/storage#django.core.files.storage.FileSystemStorage&quot;&gt;&lt;code&gt;django.core.files.storage.FileSystemStorage&lt;/code&gt;&lt;/a&gt;&lt;code&gt;'&lt;/code&gt;</source>
          <target state="translated">기본값 : &lt;code&gt;'&lt;/code&gt; &lt;a href=&quot;files/storage#django.core.files.storage.FileSystemStorage&quot;&gt; &lt;code&gt;django.core.files.storage.FileSystemStorage&lt;/code&gt; &lt;/a&gt; &lt;code&gt;'&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b3a7d24fbfa0c2fde73217a4f703d2f7227d7377" translate="yes" xml:space="preserve">
          <source>Default: &lt;code&gt;'&lt;/code&gt;&lt;a href=&quot;forms/renderers#django.forms.renderers.DjangoTemplates&quot;&gt;&lt;code&gt;django.forms.renderers.DjangoTemplates&lt;/code&gt;&lt;/a&gt;&lt;code&gt;'&lt;/code&gt;</source>
          <target state="translated">기본값 : &lt;code&gt;'&lt;/code&gt; &lt;a href=&quot;forms/renderers#django.forms.renderers.DjangoTemplates&quot;&gt; &lt;code&gt;django.forms.renderers.DjangoTemplates&lt;/code&gt; &lt;/a&gt; &lt;code&gt;'&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4c2212d132d7071c1a7df8a228796ac890ea1ec3" translate="yes" xml:space="preserve">
          <source>Default: &lt;code&gt;'America/Chicago'&lt;/code&gt;</source>
          <target state="translated">기본값 : &lt;code&gt;'America/Chicago'&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a13a3a042021357bd30080c16253b6a9f2a8ae37" translate="yes" xml:space="preserve">
          <source>Default: &lt;code&gt;'DENY'&lt;/code&gt;</source>
          <target state="translated">기본값 : &lt;code&gt;'DENY'&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4cd44dc540b617cfdec9fbd4e135052cc4acc0ed" translate="yes" xml:space="preserve">
          <source>Default: &lt;code&gt;'F Y'&lt;/code&gt;</source>
          <target state="translated">기본 : &lt;code&gt;'F Y'&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="37e2c2a2da4d094ecfed6435ea65ee3b0bab0b78" translate="yes" xml:space="preserve">
          <source>Default: &lt;code&gt;'F j'&lt;/code&gt;</source>
          <target state="translated">기본값 : &lt;code&gt;'F j'&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f7bb115fb859643cc7499dfb79d6cd295d081989" translate="yes" xml:space="preserve">
          <source>Default: &lt;code&gt;'HTTP_X_CSRFTOKEN'&lt;/code&gt;</source>
          <target state="translated">기본값 : &lt;code&gt;'HTTP_X_CSRFTOKEN'&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c320145bc48179b9a6d0fe6f8544c991589334ed" translate="yes" xml:space="preserve">
          <source>Default: &lt;code&gt;'Lax'&lt;/code&gt;</source>
          <target state="translated">기본 : &lt;code&gt;'Lax'&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2ba2ab5b7ebe572ac8bb5ed49875504d3c4548f9" translate="yes" xml:space="preserve">
          <source>Default: &lt;code&gt;'N j, Y'&lt;/code&gt; (e.g. &lt;code&gt;Feb. 4, 2003&lt;/code&gt;)</source>
          <target state="translated">기본값 : &lt;code&gt;'N j, Y'&lt;/code&gt; (예 : &lt;code&gt;Feb. 4, 2003&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="b5630bb13124c3f602d73ec202beddbad0dc2980" translate="yes" xml:space="preserve">
          <source>Default: &lt;code&gt;'N j, Y, P'&lt;/code&gt; (e.g. &lt;code&gt;Feb. 4, 2003, 4 p.m.&lt;/code&gt;)</source>
          <target state="translated">기본값 : &lt;code&gt;'N j, Y, P'&lt;/code&gt; (예 : &lt;code&gt;Feb. 4, 2003, 4 p.m.&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="2e0967932179cbf575486da544eb1e20e9aaaad1" translate="yes" xml:space="preserve">
          <source>Default: &lt;code&gt;'P'&lt;/code&gt; (e.g. &lt;code&gt;4 p.m.&lt;/code&gt;)</source>
          <target state="translated">기본값 : &lt;code&gt;'P'&lt;/code&gt; (예 : &lt;code&gt;4 p.m.&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="5f87341d8c741051a61adb4974de9ef0db55bf9b" translate="yes" xml:space="preserve">
          <source>Default: &lt;code&gt;'[Django] '&lt;/code&gt;</source>
          <target state="translated">기본값 : &lt;code&gt;'[Django] '&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1268dd27c9a0d569d95f2f6b325daceec003cb3e" translate="yes" xml:space="preserve">
          <source>Default: &lt;code&gt;'auth.User'&lt;/code&gt;</source>
          <target state="translated">기본값 : &lt;code&gt;'auth.User'&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2fab9aeca51ef1b9ccb02b8fe899919824161c46" translate="yes" xml:space="preserve">
          <source>Default: &lt;code&gt;'csrftoken'&lt;/code&gt;</source>
          <target state="translated">기본값 : &lt;code&gt;'csrftoken'&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="128442bfc3862ef671e47f3f3dade4d29cd276a3" translate="yes" xml:space="preserve">
          <source>Default: &lt;code&gt;'default'&lt;/code&gt;</source>
          <target state="translated">기본값 : &lt;code&gt;'default'&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1b19a6259605718017bb58b10e8e5fecf42d6e06" translate="yes" xml:space="preserve">
          <source>Default: &lt;code&gt;'django.contrib.messages.storage.fallback.FallbackStorage'&lt;/code&gt;</source>
          <target state="translated">기본값 : &lt;code&gt;'django.contrib.messages.storage.fallback.FallbackStorage'&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e7b1d4fee8155b4a694d673c5df3d66fed00e1a3" translate="yes" xml:space="preserve">
          <source>Default: &lt;code&gt;'django.contrib.sessions.backends.db'&lt;/code&gt;</source>
          <target state="translated">기본값 : &lt;code&gt;'django.contrib.sessions.backends.db'&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2656c7aff0d6544db5992f988b98dabade69b8ea" translate="yes" xml:space="preserve">
          <source>Default: &lt;code&gt;'django.contrib.sessions.serializers.JSONSerializer'&lt;/code&gt;</source>
          <target state="translated">기본값 : &lt;code&gt;'django.contrib.sessions.serializers.JSONSerializer'&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="488e22af27624c240a0772db2f7a7484586b816b" translate="yes" xml:space="preserve">
          <source>Default: &lt;code&gt;'django.contrib.staticfiles.storage.StaticFilesStorage'&lt;/code&gt;</source>
          <target state="translated">기본값 : &lt;code&gt;'django.contrib.staticfiles.storage.StaticFilesStorage'&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="882ec21922634ed2d86e52b18235be9156bff0df" translate="yes" xml:space="preserve">
          <source>Default: &lt;code&gt;'django.core.signing.TimestampSigner'&lt;/code&gt;</source>
          <target state="translated">기본값 : &lt;code&gt;'django.core.signing.TimestampSigner'&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="bc3744085dcbbd698b74015fffb6ebe1a6a55f65" translate="yes" xml:space="preserve">
          <source>Default: &lt;code&gt;'django.test.runner.DiscoverRunner'&lt;/code&gt;</source>
          <target state="translated">기본값 : &lt;code&gt;'django.test.runner.DiscoverRunner'&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f9d80a1e61062a156901ee67f5ed66a54c12748d" translate="yes" xml:space="preserve">
          <source>Default: &lt;code&gt;'django.views.csrf.csrf_failure'&lt;/code&gt;</source>
          <target state="translated">기본값 : &lt;code&gt;'django.views.csrf.csrf_failure'&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="053a4a1222a0252ae7456640b12cf5f17c2c5430" translate="yes" xml:space="preserve">
          <source>Default: &lt;code&gt;'django_language'&lt;/code&gt;</source>
          <target state="translated">기본값 : &lt;code&gt;'django_language'&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a5b5eb0f85b47615055e49fb6207984eeeb028f3" translate="yes" xml:space="preserve">
          <source>Default: &lt;code&gt;'en-us'&lt;/code&gt;</source>
          <target state="translated">기본값 : &lt;code&gt;'en-us'&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5c7bb4b802da74bd606acaf449f3ab6a648e7406" translate="yes" xml:space="preserve">
          <source>Default: &lt;code&gt;'localhost'&lt;/code&gt;</source>
          <target state="translated">기본값 : &lt;code&gt;'localhost'&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ccc487f8f26e1f867656bc82d7245e55d852aa59" translate="yes" xml:space="preserve">
          <source>Default: &lt;code&gt;'logging.config.dictConfig'&lt;/code&gt;</source>
          <target state="translated">기본값 : &lt;code&gt;'logging.config.dictConfig'&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="29b7109fd2c838f7ec01371771dbcd24bf40fef5" translate="yes" xml:space="preserve">
          <source>Default: &lt;code&gt;'m/d/Y P'&lt;/code&gt; (e.g. &lt;code&gt;12/31/2003 4 p.m.&lt;/code&gt;)</source>
          <target state="translated">기본값 : &lt;code&gt;'m/d/Y P'&lt;/code&gt; (예 : &lt;code&gt;12/31/2003 4 p.m.&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="2bb831b75bece7d1a54b33f3cdef65faa5ea05dc" translate="yes" xml:space="preserve">
          <source>Default: &lt;code&gt;'m/d/Y'&lt;/code&gt; (e.g. &lt;code&gt;12/31/2003&lt;/code&gt;)</source>
          <target state="translated">기본값 : &lt;code&gt;'m/d/Y'&lt;/code&gt; (예 : &lt;code&gt;12/31/2003&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="15f758d93dd1c78c5ce4f3653a3864d7bc3846f3" translate="yes" xml:space="preserve">
          <source>Default: &lt;code&gt;'root@localhost'&lt;/code&gt;</source>
          <target state="translated">기본값 : &lt;code&gt;'root@localhost'&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d0527e669bc11fd44cd7bca1ed963a88034b5d14" translate="yes" xml:space="preserve">
          <source>Default: &lt;code&gt;'sessionid'&lt;/code&gt;</source>
          <target state="translated">기본값 : &lt;code&gt;'sessionid'&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0d401a6800278154088171be1df2f5093f4f06ce" translate="yes" xml:space="preserve">
          <source>Default: &lt;code&gt;'utf-8'&lt;/code&gt;</source>
          <target state="translated">기본값 : &lt;code&gt;'utf-8'&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1cf43dbbfcd0989ea5408aa944ee40a804337032" translate="yes" xml:space="preserve">
          <source>Default: &lt;code&gt;'webmaster@localhost'&lt;/code&gt;</source>
          <target state="translated">기본값 : &lt;code&gt;'webmaster@localhost'&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3569cdb24d4e3738060acfc3ad2efff4bb497560" translate="yes" xml:space="preserve">
          <source>Default: &lt;code&gt;0&lt;/code&gt;</source>
          <target state="translated">기본값 : &lt;code&gt;0&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="65bd9e049d2d3d36033ebf2c3b3dec644d0b2e46" translate="yes" xml:space="preserve">
          <source>Default: &lt;code&gt;0&lt;/code&gt; (Sunday)</source>
          <target state="translated">기본값 : &lt;code&gt;0&lt;/code&gt; (일요일)</target>
        </trans-unit>
        <trans-unit id="15563e706f9818d86151fe84e24d929bd38ab866" translate="yes" xml:space="preserve">
          <source>Default: &lt;code&gt;0o644&lt;/code&gt;</source>
          <target state="translated">기본값 : &lt;code&gt;0o644&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f88862b306507450be1cb013438c14b8ce90ddd1" translate="yes" xml:space="preserve">
          <source>Default: &lt;code&gt;1000&lt;/code&gt;</source>
          <target state="translated">기본값 : &lt;code&gt;1000&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="cf8684c022464a2102f7848172983423aa3d7ea6" translate="yes" xml:space="preserve">
          <source>Default: &lt;code&gt;1209600&lt;/code&gt; (2 weeks, in seconds)</source>
          <target state="translated">기본값 : &lt;code&gt;1209600&lt;/code&gt; (2 주, 초)</target>
        </trans-unit>
        <trans-unit id="c8cdb6bdfb4ddcbbf9350bcc9a8f2c9275878282" translate="yes" xml:space="preserve">
          <source>Default: &lt;code&gt;1&lt;/code&gt;</source>
          <target state="translated">기본값 : &lt;code&gt;1&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2f7711457e3aa2211302734aa2f7e557a1cc483a" translate="yes" xml:space="preserve">
          <source>Default: &lt;code&gt;25&lt;/code&gt;</source>
          <target state="translated">기본값 : &lt;code&gt;25&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="07b46bd564d054127e0f9a6e1c1e12c7901e7eaf" translate="yes" xml:space="preserve">
          <source>Default: &lt;code&gt;2621440&lt;/code&gt; (i.e. 2.5 MB).</source>
          <target state="translated">기본값 : &lt;code&gt;2621440&lt;/code&gt; (예 : 2.5MB )</target>
        </trans-unit>
        <trans-unit id="35c437503a5fc1e0deabd662d22fe84536301a56" translate="yes" xml:space="preserve">
          <source>Default: &lt;code&gt;300&lt;/code&gt;</source>
          <target state="translated">기본값 : &lt;code&gt;300&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="05b462618d0e5c160f96395a98b8c5aba541aebc" translate="yes" xml:space="preserve">
          <source>Default: &lt;code&gt;31449600&lt;/code&gt; (approximately 1 year, in seconds)</source>
          <target state="translated">기본값 : &lt;code&gt;31449600&lt;/code&gt; (약 1 년, 초)</target>
        </trans-unit>
        <trans-unit id="2b05de63802534c8137a6f0bc266b819b3b70648" translate="yes" xml:space="preserve">
          <source>Default: &lt;code&gt;3&lt;/code&gt;</source>
          <target state="translated">기본값 : &lt;code&gt;3&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="cb612eb3aae52316c145cab6492d8330731582db" translate="yes" xml:space="preserve">
          <source>Default: &lt;code&gt;600&lt;/code&gt;</source>
          <target state="translated">기본값 : &lt;code&gt;600&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="25a9084be6987615bf532ff3db85aaec6121b192" translate="yes" xml:space="preserve">
          <source>Default: &lt;code&gt;False&lt;/code&gt;</source>
          <target state="translated">기본값 : &lt;code&gt;False&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8e4f64360906e7f1452e75f1085dc507b2bff801" translate="yes" xml:space="preserve">
          <source>Default: &lt;code&gt;None&lt;/code&gt;</source>
          <target state="translated">기본값 : &lt;code&gt;None&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2946d6707436ee5b1a7c7c104e9dad07bb489c9f" translate="yes" xml:space="preserve">
          <source>Default: &lt;code&gt;None&lt;/code&gt; (expires at browser close)</source>
          <target state="translated">기본값 : &lt;code&gt;None&lt;/code&gt; (브라우저를 닫을 때 만료 됨)</target>
        </trans-unit>
        <trans-unit id="3c8ca82e4a52fce1712b0adec6141e66b586eb41" translate="yes" xml:space="preserve">
          <source>Default: &lt;code&gt;True&lt;/code&gt;</source>
          <target state="translated">기본값 : &lt;code&gt;True&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="faeff543065545d715ac04f654f411c0d8f33d25" translate="yes" xml:space="preserve">
          <source>Default: &lt;code&gt;['default']&lt;/code&gt;, for all databases other than &lt;code&gt;default&lt;/code&gt;, which has no dependencies.</source>
          <target state="translated">기본값 : &lt;code&gt;['default']&lt;/code&gt; . &lt;code&gt;default&lt;/code&gt; 이외의 모든 데이터베이스 에는 종속성이 없습니다.</target>
        </trans-unit>
        <trans-unit id="02aa7d9e40af37191980719fca8f6aa03aa44e3a" translate="yes" xml:space="preserve">
          <source>Default: &lt;code&gt;['django.contrib.auth.backends.ModelBackend']&lt;/code&gt;</source>
          <target state="translated">기본값 : &lt;code&gt;['django.contrib.auth.backends.ModelBackend']&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3bee933aff901ad8560db2ae2caad4e948205874" translate="yes" xml:space="preserve">
          <source>Default: &lt;code&gt;[]&lt;/code&gt; (Empty list)</source>
          <target state="translated">기본값 : &lt;code&gt;[]&lt;/code&gt; (빈 목록)</target>
        </trans-unit>
        <trans-unit id="8b5a357552875b745134e87f131f361a5ee8160d" translate="yes" xml:space="preserve">
          <source>Default: &lt;code&gt;default&lt;/code&gt;</source>
          <target state="translated">기본값 : &lt;code&gt;default&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3df44ef382af757a7508e8e6e7550cefd26581dc" translate="yes" xml:space="preserve">
          <source>Default: &lt;code&gt;messages.INFO&lt;/code&gt;</source>
          <target state="translated">기본값 : &lt;code&gt;messages.INFO&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ec0f178638771800f08a5a145b2892f6ddf572a0" translate="yes" xml:space="preserve">
          <source>Default: &lt;code&gt;{}&lt;/code&gt; (Empty dict)</source>
          <target state="translated">기본값 : &lt;code&gt;{}&lt;/code&gt; (빈 dict)</target>
        </trans-unit>
        <trans-unit id="67db356353ac7fcc54b39edcfb87118eba95dd3a" translate="yes" xml:space="preserve">
          <source>Default: &lt;code&gt;{}&lt;/code&gt; (Empty dictionary)</source>
          <target state="translated">기본값 : &lt;code&gt;{}&lt;/code&gt; (빈 사전)</target>
        </trans-unit>
        <trans-unit id="b16da03f01bc8e013eb649255c75a43b9c3dc11b" translate="yes" xml:space="preserve">
          <source>Default: A list of all available languages. This list is continually growing and including a copy here would inevitably become rapidly out of date. You can see the current list of translated languages by looking in &lt;a href=&quot;https://github.com/django/django/blob/master/django/conf/global_settings.py&quot;&gt;django/conf/global_settings.py&lt;/a&gt;.</source>
          <target state="translated">기본값 : 사용 가능한 모든 언어의 목록입니다. 이 목록은 지속적으로 증가하고 있으며 여기에 사본을 포함하면 필연적으로 최신 상태가 될 수 있습니다. &lt;a href=&quot;https://github.com/django/django/blob/master/django/conf/global_settings.py&quot;&gt;django / conf / global_settings.py&lt;/a&gt; 에서 번역 된 언어의 현재 목록을 볼 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="d485a204535d541c7d21380a87d9e5bc32b91798" translate="yes" xml:space="preserve">
          <source>Default: A list of all language codes that are written right-to-left. You can see the current list of these languages by looking in &lt;a href=&quot;https://github.com/django/django/blob/master/django/conf/global_settings.py&quot;&gt;django/conf/global_settings.py&lt;/a&gt;.</source>
          <target state="translated">기본값 : 오른쪽에서 왼쪽으로 쓰는 모든 언어 코드 목록입니다. &lt;a href=&quot;https://github.com/django/django/blob/master/django/conf/global_settings.py&quot;&gt;django / conf / global_settings.py&lt;/a&gt; 에서 이러한 언어의 현재 목록을 볼 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="da6083aa8fd082bdcd8802cf1509789b2435f544" translate="yes" xml:space="preserve">
          <source>Default: A logging configuration dictionary.</source>
          <target state="translated">기본값 : 로깅 구성 사전입니다.</target>
        </trans-unit>
        <trans-unit id="0834a9c615b1c3b580548c3be858e9f18f746a0d" translate="yes" xml:space="preserve">
          <source>Default: Not defined</source>
          <target state="translated">기본값 : 정의되지 않음</target>
        </trans-unit>
        <trans-unit id="997364a31e6b79d4205d2e9a2cc05ec572a0d195" translate="yes" xml:space="preserve">
          <source>Default: see below</source>
          <target state="translated">기본 : 아래 참조</target>
        </trans-unit>
        <trans-unit id="b812f67e0e9152ee5bd184729e913c5fb156c0ac" translate="yes" xml:space="preserve">
          <source>Defaults to &lt;a href=&quot;../request-response#django.http.HttpResponseGone&quot;&gt;&lt;code&gt;HttpResponseGone&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">기본값은 &lt;a href=&quot;../request-response#django.http.HttpResponseGone&quot;&gt; &lt;code&gt;HttpResponseGone&lt;/code&gt; &lt;/a&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="64b2ef6a290211e9f8a705b52473520a04104361" translate="yes" xml:space="preserve">
          <source>Defaults to &lt;a href=&quot;../request-response#django.http.HttpResponsePermanentRedirect&quot;&gt;&lt;code&gt;HttpResponsePermanentRedirect&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">기본값은 &lt;a href=&quot;../request-response#django.http.HttpResponsePermanentRedirect&quot;&gt; &lt;code&gt;HttpResponsePermanentRedirect&lt;/code&gt; &lt;/a&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="dc4d005ca3a61106247ed7e631be66d0ec0ae87f" translate="yes" xml:space="preserve">
          <source>Defaults to &lt;a href=&quot;request-response#django.http.HttpResponsePermanentRedirect&quot;&gt;&lt;code&gt;HttpResponsePermanentRedirect&lt;/code&gt;&lt;/a&gt;. Subclass &lt;code&gt;CommonMiddleware&lt;/code&gt; and override the attribute to customize the redirects issued by the middleware.</source>
          <target state="translated">기본값은 &lt;a href=&quot;request-response#django.http.HttpResponsePermanentRedirect&quot;&gt; &lt;code&gt;HttpResponsePermanentRedirect&lt;/code&gt; &lt;/a&gt; 입니다. &lt;code&gt;CommonMiddleware&lt;/code&gt; 를 서브 클래스 하고 속성을 대체하여 미들웨어가 발행 한 경로 재 지정을 사용자 정의하십시오.</target>
        </trans-unit>
        <trans-unit id="0f0d6e7d90823e375f11462556d429645d56a153" translate="yes" xml:space="preserve">
          <source>Defaults to &lt;a href=&quot;request-response#django.http.HttpResponseRedirect&quot;&gt;&lt;code&gt;HttpResponseRedirect&lt;/code&gt;&lt;/a&gt;. Subclass &lt;code&gt;LocaleMiddleware&lt;/code&gt; and override the attribute to customize the redirects issued by the middleware.</source>
          <target state="translated">기본값은 &lt;a href=&quot;request-response#django.http.HttpResponseRedirect&quot;&gt; &lt;code&gt;HttpResponseRedirect&lt;/code&gt; &lt;/a&gt; 입니다. &lt;code&gt;LocaleMiddleware&lt;/code&gt; 를 서브 클래스 하고 속성을 대체하여 미들웨어가 발행 한 경로 재 지정을 사용자 정의하십시오.</target>
        </trans-unit>
        <trans-unit id="e9db1c30efeb8e0419e296f69927ae6250ee1e17" translate="yes" xml:space="preserve">
          <source>Defaults to &lt;code&gt;%(expression)s OVER (%(window)s)'&lt;/code&gt;. If only the &lt;code&gt;expression&lt;/code&gt; argument is provided, the window clause will be blank.</source>
          <target state="translated">기본값은 &lt;code&gt;%(expression)s OVER (%(window)s)'&lt;/code&gt; 입니다. &lt;code&gt;expression&lt;/code&gt; 인수 만 제공되면 window 절은 비어 있습니다.</target>
        </trans-unit>
        <trans-unit id="a7d8cb62553686a28c0bb63f132f1e5a555e3fb9" translate="yes" xml:space="preserve">
          <source>Defaults to &lt;code&gt;('add', 'change', 'delete', 'view')&lt;/code&gt;. You may customize this list, for example, by setting this to an empty list if your app doesn&amp;rsquo;t require any of the default permissions. It must be specified on the model before the model is created by &lt;a href=&quot;../django-admin#django-admin-migrate&quot;&gt;&lt;code&gt;migrate&lt;/code&gt;&lt;/a&gt; in order to prevent any omitted permissions from being created.</source>
          <target state="translated">기본값은 &lt;code&gt;('add', 'change', 'delete', 'view')&lt;/code&gt; 입니다. 예를 들어 앱에 기본 권한이 필요하지 않은 경우이 목록을 빈 목록으로 설정하여이 목록을 사용자 지정할 수 있습니다. 생략 된 권한이 작성되지 않도록 &lt;a href=&quot;../django-admin#django-admin-migrate&quot;&gt; &lt;code&gt;migrate&lt;/code&gt; &lt;/a&gt; 모델을 작성하기 전에 모델에 지정해야합니다 .</target>
        </trans-unit>
        <trans-unit id="907c53a8ae1c53569e36451b7558d25df6de35fd" translate="yes" xml:space="preserve">
          <source>Defaults to &lt;code&gt;False&lt;/code&gt;. If enabled, stripping will be applied before the regex validation.</source>
          <target state="translated">기본값은 &lt;code&gt;False&lt;/code&gt; 입니다. 활성화하면 정규식 유효성 검사 전에 스트리핑이 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="d0f754fa0046919e9432d7c22896f6413bc08b51" translate="yes" xml:space="preserve">
          <source>Defaults to &lt;code&gt;False&lt;/code&gt;. The SQL standard disallows referencing window functions in the &lt;code&gt;WHERE&lt;/code&gt; clause and Django raises an exception when constructing a &lt;code&gt;QuerySet&lt;/code&gt; that would do that.</source>
          <target state="translated">기본값은 &lt;code&gt;False&lt;/code&gt; 입니다. SQL 표준은 &lt;code&gt;WHERE&lt;/code&gt; 절 에서 창 함수 참조를 허용하지 않으며 Django 는이를 수행 하는 &lt;code&gt;QuerySet&lt;/code&gt; 을 구성 할 때 예외를 발생 시킵니다 .</target>
        </trans-unit>
        <trans-unit id="ddbcff4e8e7b6cf5499dbbec427ebf335a64198a" translate="yes" xml:space="preserve">
          <source>Defaults to &lt;code&gt;True&lt;/code&gt; since most aggregate functions can be used as the source expression in &lt;a href=&quot;#django.db.models.expressions.Window&quot;&gt;&lt;code&gt;Window&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">대부분의 집계 함수는 &lt;a href=&quot;#django.db.models.expressions.Window&quot;&gt; &lt;code&gt;Window&lt;/code&gt; &lt;/a&gt; 에서 소스 표현식으로 사용할 수 있으므로 기본값은 &lt;code&gt;True&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="efd7bd4a0560892952b689e0c71ed0501e359d80" translate="yes" xml:space="preserve">
          <source>Defaults to &lt;code&gt;True&lt;/code&gt;, in which case a &lt;code&gt;required&lt;/code&gt; validation error will be raised if no value is supplied for any field.</source>
          <target state="translated">기본값은 &lt;code&gt;True&lt;/code&gt; 입니다.이 경우 필드에 값이 제공되지 않으면 &lt;code&gt;required&lt;/code&gt; 유효성 검사 오류가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="619bef8cda01fd88969e8e7439c289e84d44d37e" translate="yes" xml:space="preserve">
          <source>Defaults to &lt;code&gt;True&lt;/code&gt;, meaning Django will create the appropriate database tables in &lt;a href=&quot;../django-admin#django-admin-migrate&quot;&gt;&lt;code&gt;migrate&lt;/code&gt;&lt;/a&gt; or as part of migrations and remove them as part of a &lt;a href=&quot;../django-admin#django-admin-flush&quot;&gt;&lt;code&gt;flush&lt;/code&gt;&lt;/a&gt; management command. That is, Django &lt;em&gt;manages&lt;/em&gt; the database tables&amp;rsquo; lifecycles.</source>
          <target state="translated">기본값은 &lt;code&gt;True&lt;/code&gt; 입니다 . 즉, Django는 &lt;a href=&quot;../django-admin#django-admin-migrate&quot;&gt; &lt;code&gt;migrate&lt;/code&gt; &lt;/a&gt; 또는 마이그레이션의 일부로 적절한 데이터베이스 테이블을 생성하고 &lt;a href=&quot;../django-admin#django-admin-flush&quot;&gt; &lt;code&gt;flush&lt;/code&gt; &lt;/a&gt; 관리 명령의 일부로 제거합니다 . 즉, Django &lt;em&gt;는&lt;/em&gt; 데이터베이스 테이블의 수명주기를 &lt;em&gt;관리&lt;/em&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="4f48ea53b3cd2b78bf54e6fb0ef9120a87e97223" translate="yes" xml:space="preserve">
          <source>Defaults to &lt;code&gt;True&lt;/code&gt;. Creates a spatial index for the given geometry field.</source>
          <target state="translated">기본값은 &lt;code&gt;True&lt;/code&gt; 입니다. 주어진 지오메트리 필드에 대한 공간 인덱스를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="79c123d8bc12519e64a23e13a2286264f8c69ce7" translate="yes" xml:space="preserve">
          <source>Defaults to &lt;code&gt;True&lt;/code&gt;. When set to &lt;code&gt;False&lt;/code&gt;, disables editing of existing geometry fields in the admin.</source>
          <target state="translated">기본값은 &lt;code&gt;True&lt;/code&gt; 입니다. &lt;code&gt;False&lt;/code&gt; 로 설정 하면 관리자에서 기존 지오메트리 필드 편집을 비활성화합니다.</target>
        </trans-unit>
        <trans-unit id="9c003fef6e245fc984750ff38b0c3c2ebd54b72f" translate="yes" xml:space="preserve">
          <source>Defaults to providing &lt;code&gt;date_list&lt;/code&gt; by year, but this can be altered to month or day using the attribute &lt;code&gt;date_list_period&lt;/code&gt;. This also applies to all subclass views.</source>
          <target state="translated">연도별로 &lt;code&gt;date_list&lt;/code&gt; 를 제공하는 것이 기본값 이지만 &lt;code&gt;date_list_period&lt;/code&gt; 속성을 사용하여 월 또는 일로 변경할 수 있습니다 . 이것은 모든 서브 클래스 뷰에도 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="5e32815870a249346846dd8211ba0125dc0e6971" translate="yes" xml:space="preserve">
          <source>Deferring model fields</source>
          <target state="translated">모델 필드 연기</target>
        </trans-unit>
        <trans-unit id="4702bf45618c39f2599c157983456bfdcace358a" translate="yes" xml:space="preserve">
          <source>Define a &lt;a href=&quot;../settings#std:setting-SITE_ID&quot;&gt;&lt;code&gt;SITE_ID&lt;/code&gt;&lt;/a&gt; setting:</source>
          <target state="translated">&lt;a href=&quot;../settings#std:setting-SITE_ID&quot;&gt; &lt;code&gt;SITE_ID&lt;/code&gt; &lt;/a&gt; 설정을 정의하십시오 .</target>
        </trans-unit>
        <trans-unit id="9b7b7b35489d4b747f186863885c13a6e186dc53" translate="yes" xml:space="preserve">
          <source>Define a &lt;code&gt;get_absolute_url()&lt;/code&gt; method to tell Django how to calculate the canonical URL for an object. To callers, this method should appear to return a string that can be used to refer to the object over HTTP.</source>
          <target state="translated">&lt;code&gt;get_absolute_url()&lt;/code&gt; 메소드를 정의하여 장고에게 객체의 표준 URL을 계산하는 방법을 알려주십시오. 호출자에게이 메소드는 HTTP를 통해 오브젝트를 참조하는 데 사용할 수있는 문자열을 리턴하는 것으로 보입니다.</target>
        </trans-unit>
        <trans-unit id="8ed59e765964a4d2aa83cb981bfa2024b11a079b" translate="yes" xml:space="preserve">
          <source>Define custom methods on a model to add custom &amp;ldquo;row-level&amp;rdquo; functionality to your objects. Whereas &lt;a href=&quot;managers#django.db.models.Manager&quot;&gt;&lt;code&gt;Manager&lt;/code&gt;&lt;/a&gt; methods are intended to do &amp;ldquo;table-wide&amp;rdquo; things, model methods should act on a particular model instance.</source>
          <target state="translated">모델에 사용자 정의 메소드를 정의하여 오브젝트에 사용자 정의 &quot;행 레벨&quot;기능을 추가하십시오. &lt;a href=&quot;managers#django.db.models.Manager&quot;&gt; &lt;code&gt;Manager&lt;/code&gt; &lt;/a&gt; 메소드는 &quot;테이블 전체&quot;작업을 수행 하는 반면 모델 메소드는 특정 모델 인스턴스에서 작동해야합니다.</target>
        </trans-unit>
        <trans-unit id="15e570799d9bd23cb5c79308384499433f5663d3" translate="yes" xml:space="preserve">
          <source>Defines a block that can be overridden by child templates. See &lt;a href=&quot;language#template-inheritance&quot;&gt;Template inheritance&lt;/a&gt; for more information.</source>
          <target state="translated">자식 템플릿으로 재정의 할 수있는 블록을 정의합니다. 자세한 내용은 &lt;a href=&quot;language#template-inheritance&quot;&gt;템플릿 상속&lt;/a&gt; 을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="69a4133f9903d218e677f51c159c3e66b0635c78" translate="yes" xml:space="preserve">
          <source>Defines the class this transformation outputs. It must be a &lt;a href=&quot;fields#django.db.models.Field&quot;&gt;&lt;code&gt;Field&lt;/code&gt;&lt;/a&gt; instance. By default is the same as its &lt;code&gt;lhs.output_field&lt;/code&gt;.</source>
          <target state="translated">이 변환이 출력하는 클래스를 정의합니다. &lt;a href=&quot;fields#django.db.models.Field&quot;&gt; &lt;code&gt;Field&lt;/code&gt; &lt;/a&gt; 인스턴스 여야합니다 . 기본적으로 &lt;code&gt;lhs.output_field&lt;/code&gt; 와 동일 합니다.</target>
        </trans-unit>
        <trans-unit id="9c120fcd7e714e01c552c6f1a17aed133ea303bb" translate="yes" xml:space="preserve">
          <source>Defines the type of class returned by the &lt;code&gt;get_lookup()&lt;/code&gt; method. It must be a &lt;a href=&quot;fields#django.db.models.Field&quot;&gt;&lt;code&gt;Field&lt;/code&gt;&lt;/a&gt; instance.</source>
          <target state="translated">&lt;code&gt;get_lookup()&lt;/code&gt; 메소드가 리턴 한 클래스 유형을 정의합니다 . &lt;a href=&quot;fields#django.db.models.Field&quot;&gt; &lt;code&gt;Field&lt;/code&gt; &lt;/a&gt; 인스턴스 여야합니다 .</target>
        </trans-unit>
        <trans-unit id="e0a06e3730c12f5747448528ae4d21f3913cdabc" translate="yes" xml:space="preserve">
          <source>Defines two filters:</source>
          <target state="translated">두 개의 필터를 정의합니다.</target>
        </trans-unit>
        <trans-unit id="1bd018a91dacb0df0403a63cf27254f258f1ca4e" translate="yes" xml:space="preserve">
          <source>Defines two formatters:</source>
          <target state="translated">두 가지 포맷터를 정의합니다.</target>
        </trans-unit>
        <trans-unit id="8b052434c8bf583d7f9cf2d766a4cafa8150b7b3" translate="yes" xml:space="preserve">
          <source>Defines two handlers:</source>
          <target state="translated">두 핸들러를 정의합니다.</target>
        </trans-unit>
        <trans-unit id="34eb11e84b9351ecde10161fc6952775fa23190a" translate="yes" xml:space="preserve">
          <source>Defining &lt;a href=&quot;#django.contrib.contenttypes.fields.GenericRelation&quot;&gt;&lt;code&gt;GenericRelation&lt;/code&gt;&lt;/a&gt; with &lt;code&gt;related_query_name&lt;/code&gt; set allows querying from the related object:</source>
          <target state="translated">&lt;code&gt;related_query_name&lt;/code&gt; 세트로 &lt;a href=&quot;#django.contrib.contenttypes.fields.GenericRelation&quot;&gt; &lt;code&gt;GenericRelation&lt;/code&gt; &lt;/a&gt; 을 정의 하면 관련 오브젝트에서 조회 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5dce9fc5fbf8fa1054c55e5c7f014d9e7ca7b6e3" translate="yes" xml:space="preserve">
          <source>Defining a Geographic Model</source>
          <target state="translated">지리적 모델 정의</target>
        </trans-unit>
        <trans-unit id="78e0033e5ed8e5b295e829e5010e8de133e313f2" translate="yes" xml:space="preserve">
          <source>Defining a custom email backend</source>
          <target state="translated">사용자 정의 이메일 백엔드 정의</target>
        </trans-unit>
        <trans-unit id="d349848f7ede72f4f3ed575ea6d3f7567d7fff00" translate="yes" xml:space="preserve">
          <source>Defining a test runner</source>
          <target state="translated">테스트 러너 정의</target>
        </trans-unit>
        <trans-unit id="f9787cc25b2f857b03a8646a520906e3b9359971" translate="yes" xml:space="preserve">
          <source>Defining actions as methods gives the action more idiomatic access to the &lt;a href=&quot;index#django.contrib.admin.ModelAdmin&quot;&gt;&lt;code&gt;ModelAdmin&lt;/code&gt;&lt;/a&gt; itself, allowing the action to call any of the methods provided by the admin.</source>
          <target state="translated">메소드를 조치로 정의하면 조치가 &lt;a href=&quot;index#django.contrib.admin.ModelAdmin&quot;&gt; &lt;code&gt;ModelAdmin&lt;/code&gt; &lt;/a&gt; 자체에 대한 관용적 인 액세스를 제공하여 조치 가 관리자가 제공 한 메소드를 호출 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c0ce8ea8dd06560422fb3f1f115631948e200a9b" translate="yes" xml:space="preserve">
          <source>Defining and sending signals</source>
          <target state="translated">신호 정의 및 전송</target>
        </trans-unit>
        <trans-unit id="8e0cad74a06499480fbb2152543015a07638bfe5" translate="yes" xml:space="preserve">
          <source>Defining signals</source>
          <target state="translated">신호 정의</target>
        </trans-unit>
        <trans-unit id="df5e6c996907105479f6a562279ff1b8116220f5" translate="yes" xml:space="preserve">
          <source>Defining your databases</source>
          <target state="translated">데이터베이스 정의</target>
        </trans-unit>
        <trans-unit id="dc2e1aeb4bea3bc3383a65ab5b75322ee1a67949" translate="yes" xml:space="preserve">
          <source>Defining your own range types</source>
          <target state="translated">자신 만의 범위 유형 정의</target>
        </trans-unit>
        <trans-unit id="15225baac48fc3d689cb2b0f74b936eff4339ff7" translate="yes" xml:space="preserve">
          <source>Definitions</source>
          <target state="translated">Definitions</target>
        </trans-unit>
        <trans-unit id="f6fdbe48dc54dd86f63097a03bd24094dedd713a" translate="yes" xml:space="preserve">
          <source>Delete</source>
          <target state="translated">Delete</target>
        </trans-unit>
        <trans-unit id="5b3b83af91b02f67bb115632ba4297710a2b48ba" translate="yes" xml:space="preserve">
          <source>Delete &amp;ndash; Displays a delete confirmation page.</source>
          <target state="translated">삭제 &amp;ndash; 삭제 확인 페이지를 표시합니다.</target>
        </trans-unit>
        <trans-unit id="4793016c31fbba669f722385fb4924a93c6fe932" translate="yes" xml:space="preserve">
          <source>Delete some of the old, unneeded views.</source>
          <target state="translated">불필요한 이전보기 중 일부를 삭제하십시오.</target>
        </trans-unit>
        <trans-unit id="a2b3823726327c85a901843be7d75d8c55413631" translate="yes" xml:space="preserve">
          <source>Deletes stale content types (from deleted models) in your database. Any objects that depend on the deleted content types will also be deleted. A list of deleted objects will be displayed before you confirm it&amp;rsquo;s okay to proceed with the deletion.</source>
          <target state="translated">데이터베이스에서 오래된 컨텐츠 유형 (삭제 된 모델에서)을 삭제합니다. 삭제 된 컨텐츠 유형에 의존하는 모든 오브젝트도 삭제됩니다. 삭제를 계속 진행하기 전에 삭제 된 객체 목록이 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="0b4809719d3da4c82a27ee2c24b2d2a4f3804cee" translate="yes" xml:space="preserve">
          <source>Deletes the cookie with the given key. Fails silently if the key doesn&amp;rsquo;t exist.</source>
          <target state="translated">주어진 키로 쿠키를 삭제합니다. 키가 없으면 자동으로 실패합니다.</target>
        </trans-unit>
        <trans-unit id="63d623ac95264c8b9be90c32fa0554f99cb4c5bc" translate="yes" xml:space="preserve">
          <source>Deletes the current session data from the session and deletes the session cookie. This is used if you want to ensure that the previous session data can&amp;rsquo;t be accessed again from the user&amp;rsquo;s browser (for example, the &lt;a href=&quot;../auth/default#django.contrib.auth.logout&quot;&gt;&lt;code&gt;django.contrib.auth.logout()&lt;/code&gt;&lt;/a&gt; function calls it).</source>
          <target state="translated">세션에서 현재 세션 데이터를 삭제하고 세션 쿠키를 삭제합니다. 이는 사용자의 브라우저에서 이전 세션 데이터에 다시 액세스 할 수 없도록하려면 사용됩니다 (예 : &lt;a href=&quot;../auth/default#django.contrib.auth.logout&quot;&gt; &lt;code&gt;django.contrib.auth.logout()&lt;/code&gt; &lt;/a&gt; 함수가이를 호출 함).</target>
        </trans-unit>
        <trans-unit id="c73c7594f7310f58ed3a702bf90f0d2373a57a4e" translate="yes" xml:space="preserve">
          <source>Deletes the file associated with this instance and clears all attributes on the field. Note: This method will close the file if it happens to be open when &lt;code&gt;delete()&lt;/code&gt; is called.</source>
          <target state="translated">이 인스턴스와 연관된 파일을 삭제하고 필드의 모든 속성을 지 웁니다. 참고 :이 메소드는 &lt;code&gt;delete()&lt;/code&gt; 가 호출 될 때 파일이 열리면 파일을 닫습니다 .</target>
        </trans-unit>
        <trans-unit id="d812d63bb5a6499e33b5faa10bd6e618f1f44705" translate="yes" xml:space="preserve">
          <source>Deletes the file referenced by &lt;code&gt;name&lt;/code&gt;. If deletion is not supported on the target storage system this will raise &lt;code&gt;NotImplementedError&lt;/code&gt; instead</source>
          <target state="translated">&lt;code&gt;name&lt;/code&gt; 에서 참조하는 파일을 삭제합니다 . 대상 스토리지 시스템에서 삭제가 지원되지 않으면 대신 &lt;code&gt;NotImplementedError&lt;/code&gt; 가 발생 합니다.</target>
        </trans-unit>
        <trans-unit id="7f1ed78d2b32bd0027128c9f929fd17e9de09f7d" translate="yes" xml:space="preserve">
          <source>Deletes the header with the given name. Fails silently if the header doesn&amp;rsquo;t exist. Case-insensitive.</source>
          <target state="translated">지정된 이름의 헤더를 삭제합니다. 헤더가 없으면 자동으로 실패합니다. 대소 문자를 구분하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="a1594b31e9ff392f6f6d666c77d75e3fb488565f" translate="yes" xml:space="preserve">
          <source>Deletes the model from the project history and its table from the database.</source>
          <target state="translated">프로젝트 히스토리에서 모델을 삭제하고 데이터베이스에서 해당 테이블을 삭제합니다.</target>
        </trans-unit>
        <trans-unit id="1ac01d105d129556ae01eb77a50fb9547ad78df5" translate="yes" xml:space="preserve">
          <source>Deletes the test cookie. Use this to clean up after yourself.</source>
          <target state="translated">테스트 쿠키를 삭제합니다. 이를 사용하여 자신을 정리하십시오.</target>
        </trans-unit>
        <trans-unit id="370ba4d4ccb5669c3bbfcffd8f3bf6a90ba76614" translate="yes" xml:space="preserve">
          <source>Deleting all the migration files it replaces.</source>
          <target state="translated">교체 한 모든 마이그레이션 파일을 삭제합니다.</target>
        </trans-unit>
        <trans-unit id="07b4f49a22885d3ea1cde052877cec8632b72e75" translate="yes" xml:space="preserve">
          <source>Deleting objects</source>
          <target state="translated">객체 삭제</target>
        </trans-unit>
        <trans-unit id="0562f32dc56f5c702810cbe010068ddd38dbd69a" translate="yes" xml:space="preserve">
          <source>Dependencies</source>
          <target state="translated">Dependencies</target>
        </trans-unit>
        <trans-unit id="0756bee6cb3c67237cd5904539b455daa0fbd838" translate="yes" xml:space="preserve">
          <source>Dependencies during serialization</source>
          <target state="translated">직렬화 중 종속성</target>
        </trans-unit>
        <trans-unit id="227b8e0b3f5490d45d847363f7a1e60e029a34d7" translate="yes" xml:space="preserve">
          <source>Depending on the database backend, query results will either be loaded all at once or streamed from the database using server-side cursors.</source>
          <target state="translated">데이터베이스 백엔드에 따라 쿼리 결과가 한 번에 모두로드되거나 서버 측 커서를 사용하여 데이터베이스에서 스트리밍됩니다.</target>
        </trans-unit>
        <trans-unit id="ef38ae8e357477ed4cb87c1a76764d0de669c5b1" translate="yes" xml:space="preserve">
          <source>Depending on the value of &lt;code&gt;raise_exception&lt;/code&gt;, the method either raises a &lt;a href=&quot;../../ref/exceptions#django.core.exceptions.PermissionDenied&quot;&gt;&lt;code&gt;PermissionDenied&lt;/code&gt;&lt;/a&gt; exception or redirects the user to the &lt;code&gt;login_url&lt;/code&gt;, optionally including the &lt;code&gt;redirect_field_name&lt;/code&gt; if it is set.</source>
          <target state="translated">&lt;code&gt;raise_exception&lt;/code&gt; 의 값에 따라이 메소드는 &lt;a href=&quot;../../ref/exceptions#django.core.exceptions.PermissionDenied&quot;&gt; &lt;code&gt;PermissionDenied&lt;/code&gt; &lt;/a&gt; 예외를 발생 시키거나 사용자가 &lt;code&gt;login_url&lt;/code&gt; 로 리디렉션되도록하고 , 선택적으로 &lt;code&gt;redirect_field_name&lt;/code&gt; 이 설정되어 있으면이를 포함합니다 .</target>
        </trans-unit>
        <trans-unit id="60c1150c2805016d76822ae245cecceeeef0032b" translate="yes" xml:space="preserve">
          <source>Depending on your configuration, this section describes several methods to configure a database user with sufficient privileges to run tests for GeoDjango applications on PostgreSQL. If your &lt;a href=&quot;install/postgis#spatialdb-template&quot;&gt;spatial database template&lt;/a&gt; was created like in the instructions, then your testing database user only needs to have the ability to create databases. In other configurations, you may be required to use a database superuser.</source>
          <target state="translated">구성에 따라이 섹션에서는 PostgreSQL에서 GeoDjango 애플리케이션에 대한 테스트를 실행하기에 충분한 권한을 가진 데이터베이스 사용자를 구성하는 몇 가지 방법에 대해 설명합니다. &lt;a href=&quot;install/postgis#spatialdb-template&quot;&gt;공간 데이터베이스 템플리트&lt;/a&gt; 가 지시 사항에서와 같이 작성된 경우 테스트 데이터베이스 사용자는 데이터베이스를 작성하는 기능 만 있으면됩니다. 다른 구성에서는 데이터베이스 수퍼 유저를 사용해야 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="006f907d3e808549c8d8bac532841c8337bae68a" translate="yes" xml:space="preserve">
          <source>Depending on your model, you may find that it is not possible to deserialize a model that only serializes a subset of its fields. If a serialized object doesn&amp;rsquo;t specify all the fields that are required by a model, the deserializer will not be able to save deserialized instances.</source>
          <target state="translated">모델에 따라 필드의 하위 집합 만 직렬화하는 모델을 역 직렬화하지 못할 수도 있습니다. 직렬화 된 객체가 모델에 필요한 모든 필드를 지정하지 않으면 역 직렬화 기는 역 직렬화 된 인스턴스를 저장할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="413957e90571532ac1c624be02c25d591ec2b89e" translate="yes" xml:space="preserve">
          <source>Deploying Django</source>
          <target state="translated">장고 배포</target>
        </trans-unit>
        <trans-unit id="a15cb7c7108644ee69a857a2f02cca0101f265ca" translate="yes" xml:space="preserve">
          <source>Deploying Django with &lt;a href=&quot;https://httpd.apache.org/&quot;&gt;Apache&lt;/a&gt; and &lt;a href=&quot;https://modwsgi.readthedocs.io/en/develop/&quot;&gt;mod_wsgi&lt;/a&gt; is a tried and tested way to get Django into production.</source>
          <target state="translated">&lt;a href=&quot;https://httpd.apache.org/&quot;&gt;Apache&lt;/a&gt; 와 &lt;a href=&quot;https://modwsgi.readthedocs.io/en/develop/&quot;&gt;mod_wsgi&lt;/a&gt; 를 사용하여 Django를 배포 하는 것은 Django를 프로덕션 환경으로 만드는 시험되고 테스트 된 방법입니다.</target>
        </trans-unit>
        <trans-unit id="d9aa87915e9b45d601acab839be398e8cfb40442" translate="yes" xml:space="preserve">
          <source>Deploying GeoDjango</source>
          <target state="translated">GeoDjango 배포</target>
        </trans-unit>
        <trans-unit id="08cbd80292a13ad260a236d49d0db9eb513d41d6" translate="yes" xml:space="preserve">
          <source>Deploying static files</source>
          <target state="translated">정적 파일 배포</target>
        </trans-unit>
        <trans-unit id="327a55f82dc6818877a68e37b722bb7f2360b633" translate="yes" xml:space="preserve">
          <source>Deployment</source>
          <target state="translated">Deployment</target>
        </trans-unit>
        <trans-unit id="07a8a810780edcfa088e374aa8f85e0fe565c490" translate="yes" xml:space="preserve">
          <source>Deployment checklist</source>
          <target state="translated">배포 체크리스트</target>
        </trans-unit>
        <trans-unit id="ccb88881694eb75c92deb84b666d7b360400012d" translate="yes" xml:space="preserve">
          <source>Deprecated since version 2.2.</source>
          <target state="translated">버전 2.2부터 사용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="1819ca26348a5e255349590ea7b3f0e5896650d6" translate="yes" xml:space="preserve">
          <source>Deprecated since version 2.2: &lt;code&gt;CachedStaticFilesStorage&lt;/code&gt; is deprecated as it has some intractable problems, some of which are outlined below. Use &lt;a href=&quot;#django.contrib.staticfiles.storage.ManifestStaticFilesStorage&quot;&gt;&lt;code&gt;ManifestStaticFilesStorage&lt;/code&gt;&lt;/a&gt; or a third-party cloud storage instead.</source>
          <target state="translated">버전 2.2 이후 로 더 이상 사용되지 않음 : &lt;code&gt;CachedStaticFilesStorage&lt;/code&gt; 는 다루기 어려운 몇 가지 문제가 있으므로 더 이상 사용되지 않습니다. 그 중 일부는 아래에 설명되어 있습니다. 대신 &lt;a href=&quot;#django.contrib.staticfiles.storage.ManifestStaticFilesStorage&quot;&gt; &lt;code&gt;ManifestStaticFilesStorage&lt;/code&gt; &lt;/a&gt; 또는 타사 클라우드 저장소를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="89a8448d6c03ae2bb6b51520abb2900768bfcaa1" translate="yes" xml:space="preserve">
          <source>Deprecated since version 2.2: Starting in Django 3.1, the ordering from a model&amp;rsquo;s &lt;code&gt;Meta.ordering&lt;/code&gt; won&amp;rsquo;t be used in &lt;code&gt;GROUP BY&lt;/code&gt; queries, such as &lt;code&gt;.annotate().values()&lt;/code&gt;. Since Django 2.2, these queries issue a deprecation warning indicating to add an explicit &lt;code&gt;order_by()&lt;/code&gt; to the queryset to silence the warning.</source>
          <target state="translated">버전 2.2부터 사용되지 않음 : Django 3.1부터 모델의 &lt;code&gt;Meta.ordering&lt;/code&gt; 순서는 &lt;code&gt;.annotate().values()&lt;/code&gt; 와 같은 &lt;code&gt;GROUP BY&lt;/code&gt; 쿼리 에서 사용되지 않습니다 . Django 2.2 이후로, 이러한 쿼리 는 경고를 침묵시키기 위해 명시적인 &lt;code&gt;order_by()&lt;/code&gt; 를 쿼리 세트에 추가하라는 표시가 사용되지 않는 경고를 발행합니다 .</target>
        </trans-unit>
        <trans-unit id="82f988873f549a8b09c3297a9c1789a82002ad8d" translate="yes" xml:space="preserve">
          <source>Deprecated since version 2.2: This setting is deprecated. Starting with Django 3.1, files read from disk must be UTF-8 encoded.</source>
          <target state="translated">버전 2.2 이후로 더 이상 사용되지 않음 :이 설정은 더 이상 사용되지 않습니다. Django 3.1부터 디스크에서 읽은 파일은 UTF-8로 인코딩되어야합니다.</target>
        </trans-unit>
        <trans-unit id="83e401ea3682d4526fff26e5de95f44574aec9b2" translate="yes" xml:space="preserve">
          <source>Deprecated since version 2.2: Use &lt;a href=&quot;#django.contrib.postgres.fields.DecimalRangeField&quot;&gt;&lt;code&gt;DecimalRangeField&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">버전 2.2 이후로 사용되지 않음 : 대신 &lt;a href=&quot;#django.contrib.postgres.fields.DecimalRangeField&quot;&gt; &lt;code&gt;DecimalRangeField&lt;/code&gt; &lt;/a&gt; 를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="046c9bcc3b96be6453ad22650a90d89c8a3bce5b" translate="yes" xml:space="preserve">
          <source>Deprecated since version 2.2: Use &lt;a href=&quot;#django.contrib.postgres.forms.DecimalRangeField&quot;&gt;&lt;code&gt;DecimalRangeField&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">버전 2.2 이후로 사용되지 않음 : 대신 &lt;a href=&quot;#django.contrib.postgres.forms.DecimalRangeField&quot;&gt; &lt;code&gt;DecimalRangeField&lt;/code&gt; &lt;/a&gt; 를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="a6f2cfc41bbc54ea294028076b80cc47a7669c50" translate="yes" xml:space="preserve">
          <source>Deprecated since version 2.2: Use &lt;a href=&quot;https://docs.python.org/3/library/datetime.html#datetime.timezone&quot;&gt;&lt;code&gt;datetime.timezone&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">버전 2.2부터 사용되지 않습니다 . 대신 &lt;a href=&quot;https://docs.python.org/3/library/datetime.html#datetime.timezone&quot;&gt; &lt;code&gt;datetime.timezone&lt;/code&gt; &lt;/a&gt; 을 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="c45c3909a5319dc04f8fdca5b6dee1df0a4c669b" translate="yes" xml:space="preserve">
          <source>Deprecated since version 3.0.</source>
          <target state="translated">버전 3.0부터 사용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="e4784b1574a4b4194354374954866f9c4d232f98" translate="yes" xml:space="preserve">
          <source>Deprecated since version 3.0: The language won&amp;rsquo;t be stored in the session in Django 4.0. Use the &lt;a href=&quot;settings#std:setting-LANGUAGE_COOKIE_NAME&quot;&gt;&lt;code&gt;LANGUAGE_COOKIE_NAME&lt;/code&gt;&lt;/a&gt; cookie instead.</source>
          <target state="translated">버전 3.0부터 사용되지 않음 : Django 4.0의 세션에 언어가 저장되지 않습니다. &lt;a href=&quot;settings#std:setting-LANGUAGE_COOKIE_NAME&quot;&gt; &lt;code&gt;LANGUAGE_COOKIE_NAME&lt;/code&gt; &lt;/a&gt; 쿠키를 대신 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="55f8ebc805e65b5b71ddafdae390e3be2bcd69af" translate="yes" xml:space="preserve">
          <source>Description</source>
          <target state="translated">Description</target>
        </trans-unit>
        <trans-unit id="b2f45e461c8bf945be0760b5ed79bb1e866376da" translate="yes" xml:space="preserve">
          <source>Deserialization of natural keys</source>
          <target state="translated">자연 키의 역 직렬화</target>
        </trans-unit>
        <trans-unit id="50cc36514c07a32077b448f0ed60b3b5a77a8942" translate="yes" xml:space="preserve">
          <source>Deserialization of objects with no primary key will always check whether the model&amp;rsquo;s manager has a &lt;code&gt;get_by_natural_key()&lt;/code&gt; method and if so, use it to populate the deserialized object&amp;rsquo;s primary key.</source>
          <target state="translated">기본 키가없는 객체의 역 직렬화는 항상 모델 관리자에 &lt;code&gt;get_by_natural_key()&lt;/code&gt; 메소드가 있는지 확인하고,있는 경우 직렬화 해제 된 객체의 기본 키를 채 웁니다.</target>
        </trans-unit>
        <trans-unit id="478bc2e2f852272b7c7b9a455acaf658c8c1d19c" translate="yes" xml:space="preserve">
          <source>Deserializing data</source>
          <target state="translated">데이터 역 직렬화</target>
        </trans-unit>
        <trans-unit id="64257e587c100a59a84f78b254064e0a88fb19af" translate="yes" xml:space="preserve">
          <source>Deserializing data is very similar to serializing it:</source>
          <target state="translated">데이터 직렬화 해제는 직렬화와 매우 유사합니다.</target>
        </trans-unit>
        <trans-unit id="6b4b63f12160f43e4c02da1ba348f57a26675a14" translate="yes" xml:space="preserve">
          <source>Design your URLs</source>
          <target state="translated">URL 디자인</target>
        </trans-unit>
        <trans-unit id="7d8339aeb556f83e5f4594300872f978448af574" translate="yes" xml:space="preserve">
          <source>Design your model</source>
          <target state="translated">모델 설계</target>
        </trans-unit>
        <trans-unit id="e02c99bd448789b60cee12279d2b894d92ac4a57" translate="yes" xml:space="preserve">
          <source>Design your templates</source>
          <target state="translated">템플릿 디자인</target>
        </trans-unit>
        <trans-unit id="591686024aaf35e01a1dbc13b21cc0edf4850a10" translate="yes" xml:space="preserve">
          <source>Designate and bind a counter value with the name &lt;code&gt;count&lt;/code&gt;. This value will be the one used to select the right plural form.</source>
          <target state="translated">&lt;code&gt;count&lt;/code&gt; 이름으로 카운터 값을 지정하고 바인딩하십시오 . 이 값은 올바른 복수형을 선택하는 데 사용되는 값입니다.</target>
        </trans-unit>
        <trans-unit id="69d154a76eafeb587cfe4bb3a23c2e081508e07f" translate="yes" xml:space="preserve">
          <source>Designates the name of the variable to use in the context.</source>
          <target state="translated">컨텍스트에서 사용할 변수의 이름을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="ab8d9eb0f20787402e221892d46074396aca8d81" translate="yes" xml:space="preserve">
          <source>Designating the CSRF cookie as &lt;code&gt;HttpOnly&lt;/code&gt; doesn&amp;rsquo;t offer any practical protection because CSRF is only to protect against cross-domain attacks. If an attacker can read the cookie via JavaScript, they&amp;rsquo;re already on the same domain as far as the browser knows, so they can do anything they like anyway. (XSS is a much bigger hole than CSRF.)</source>
          <target state="translated">CSRF는 도메인 간 공격에 대해서만 보호하기 때문에 CSRF 쿠키를 &lt;code&gt;HttpOnly&lt;/code&gt; 로 지정하는 것은 실질적인 보호 기능을 제공하지 않습니다. 공격자가 JavaScript를 통해 쿠키를 읽을 수있는 경우, 브라우저가 알고있는 한 동일한 도메인에 이미 존재하므로 원하는대로 할 수 있습니다. (XSS는 CSRF보다 훨씬 큰 구멍입니다.)</target>
        </trans-unit>
        <trans-unit id="51a2301aee9b8e7921830babb9d9357f6fc460b4" translate="yes" xml:space="preserve">
          <source>Designating the settings</source>
          <target state="translated">설정 지정</target>
        </trans-unit>
        <trans-unit id="79f946cb4a7caf05f21d409a395a181b2bc733e2" translate="yes" xml:space="preserve">
          <source>Destroying the test databases.</source>
          <target state="translated">테스트 데이터베이스를 폐기합니다.</target>
        </trans-unit>
        <trans-unit id="04d44797e579abbfd03ef9b185b8cb262e441097" translate="yes" xml:space="preserve">
          <source>Destroys the database whose name is the value of &lt;a href=&quot;../../ref/settings#std:setting-NAME&quot;&gt;&lt;code&gt;NAME&lt;/code&gt;&lt;/a&gt; in &lt;a href=&quot;../../ref/settings#std:setting-DATABASES&quot;&gt;&lt;code&gt;DATABASES&lt;/code&gt;&lt;/a&gt;, and sets &lt;a href=&quot;../../ref/settings#std:setting-NAME&quot;&gt;&lt;code&gt;NAME&lt;/code&gt;&lt;/a&gt; to the value of &lt;code&gt;old_database_name&lt;/code&gt;.</source>
          <target state="translated">그 이름의 값 데이터베이스 파기 &lt;a href=&quot;../../ref/settings#std:setting-NAME&quot;&gt; &lt;code&gt;NAME&lt;/code&gt; &lt;/a&gt; 의 &lt;a href=&quot;../../ref/settings#std:setting-DATABASES&quot;&gt; &lt;code&gt;DATABASES&lt;/code&gt; &lt;/a&gt; 및 세트 &lt;a href=&quot;../../ref/settings#std:setting-NAME&quot;&gt; &lt;code&gt;NAME&lt;/code&gt; &lt;/a&gt; 의 값 &lt;code&gt;old_database_name&lt;/code&gt; 을 .</target>
        </trans-unit>
        <trans-unit id="6be858835915b77e190b2b50c375eef501569084" translate="yes" xml:space="preserve">
          <source>Destroys the test databases, restoring pre-test conditions by calling &lt;a href=&quot;#django.test.utils.teardown_databases&quot;&gt;&lt;code&gt;teardown_databases()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#django.test.utils.teardown_databases&quot;&gt; &lt;code&gt;teardown_databases()&lt;/code&gt; &lt;/a&gt; 를 호출하여 사전 테스트 조건을 복원하여 테스트 데이터베이스를 삭제합니다 .</target>
        </trans-unit>
        <trans-unit id="53db1768fa53b64edff3158d6a9ccf0b67d770d5" translate="yes" xml:space="preserve">
          <source>Destroys the test databases, restoring pre-test conditions.</source>
          <target state="translated">사전 테스트 조건을 복원하여 테스트 데이터베이스를 삭제합니다.</target>
        </trans-unit>
        <trans-unit id="446ba80ce4a3f48778fd53c394affa5a7dca0984" translate="yes" xml:space="preserve">
          <source>Detail Views</source>
          <target state="translated">상세도</target>
        </trans-unit>
        <trans-unit id="b174b91b196c8dee411e88ead1d4fd2bf0f64bb4" translate="yes" xml:space="preserve">
          <source>Detailed form API reference. For introductory material, see the &lt;a href=&quot;../../topics/forms/index&quot;&gt;Working with forms&lt;/a&gt; topic guide.</source>
          <target state="translated">자세한 양식 API 참조 소개 자료 &lt;a href=&quot;../../topics/forms/index&quot;&gt;는 양식 작업&lt;/a&gt; 주제 안내서를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="093115f44b6adadaff855fd36c0a42b9c46d43a4" translate="yes" xml:space="preserve">
          <source>Details for each of the requirements and installation instructions are provided in the sections below. In addition, platform-specific instructions are available for:</source>
          <target state="translated">각 요구 사항 및 설치 지침에 대한 자세한 내용은 아래 섹션에서 제공됩니다. 또한 플랫폼 별 지침이 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="1abef72fe7e08f6c8eca5e11ac9430e28fc7e78b" translate="yes" xml:space="preserve">
          <source>Determine if an object list will be returned as part of the context. Returns &lt;a href=&quot;#django.views.generic.dates.YearArchiveView.make_object_list&quot;&gt;&lt;code&gt;make_object_list&lt;/code&gt;&lt;/a&gt; by default.</source>
          <target state="translated">컨텍스트의 일부로 오브젝트리스트가 리턴되는지 판별하십시오. 기본적으로 &lt;a href=&quot;#django.views.generic.dates.YearArchiveView.make_object_list&quot;&gt; &lt;code&gt;make_object_list&lt;/code&gt; &lt;/a&gt; 를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="01d5652e9bda540eecf165e479876a78c34cab17" translate="yes" xml:space="preserve">
          <source>Determine if the migration operation is allowed to run on the database with alias &lt;code&gt;db&lt;/code&gt;. Return &lt;code&gt;True&lt;/code&gt; if the operation should run, &lt;code&gt;False&lt;/code&gt; if it shouldn&amp;rsquo;t run, or &lt;code&gt;None&lt;/code&gt; if the router has no opinion.</source>
          <target state="translated">별명 &lt;code&gt;db&lt;/code&gt; 로 데이터베이스에서 마이그레이션 조작을 실행할 수 있는지 판별하십시오 . 반환 &lt;code&gt;True&lt;/code&gt; 동작은 실행되지하는 경우는 &lt;code&gt;False&lt;/code&gt; 그것을 실행하지 않아야하는 경우, 또는 &lt;code&gt;None&lt;/code&gt; 라우터에는 의견이없는 경우.</target>
        </trans-unit>
        <trans-unit id="22e729836bf3f38b09112ebcbc0ef5c2579463c4" translate="yes" xml:space="preserve">
          <source>Determine if the object instance is of a protected type.</source>
          <target state="translated">개체 인스턴스가 보호 된 유형인지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="388bf854b4079b4253808464aaa168b2dec2fe6f" translate="yes" xml:space="preserve">
          <source>Determine the &lt;a href=&quot;../forms/api#django.forms.Form.prefix&quot;&gt;&lt;code&gt;prefix&lt;/code&gt;&lt;/a&gt; for the generated form. Returns &lt;a href=&quot;#django.views.generic.edit.FormMixin.prefix&quot;&gt;&lt;code&gt;prefix&lt;/code&gt;&lt;/a&gt; by default.</source>
          <target state="translated">생성 된 양식 의 &lt;a href=&quot;../forms/api#django.forms.Form.prefix&quot;&gt; &lt;code&gt;prefix&lt;/code&gt; &lt;/a&gt; 를 결정하십시오 . 기본적으로 &lt;a href=&quot;#django.views.generic.edit.FormMixin.prefix&quot;&gt; &lt;code&gt;prefix&lt;/code&gt; &lt;/a&gt; 를 반환 합니다 .</target>
        </trans-unit>
        <trans-unit id="cb21a02f011f19765a1dcdc9f24a28a39dd55288" translate="yes" xml:space="preserve">
          <source>Determine the URL to redirect to when the form is successfully validated. Returns &lt;a href=&quot;#django.views.generic.edit.FormMixin.success_url&quot;&gt;&lt;code&gt;success_url&lt;/code&gt;&lt;/a&gt; by default.</source>
          <target state="translated">양식의 유효성이 검사 될 때 리디렉션 할 URL을 결정하십시오. 기본적으로 &lt;a href=&quot;#django.views.generic.edit.FormMixin.success_url&quot;&gt; &lt;code&gt;success_url&lt;/code&gt; &lt;/a&gt; 을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="ba7eec079c73201f8d0ab03bbf7a001a164cbd11" translate="yes" xml:space="preserve">
          <source>Determine the URL to redirect to when the form is successfully validated. Returns &lt;a href=&quot;#django.views.generic.edit.ModelFormMixin.success_url&quot;&gt;&lt;code&gt;django.views.generic.edit.ModelFormMixin.success_url&lt;/code&gt;&lt;/a&gt; if it is provided; otherwise, attempts to use the &lt;code&gt;get_absolute_url()&lt;/code&gt; of the object.</source>
          <target state="translated">양식의 유효성이 검사 될 때 리디렉션 할 URL을 결정하십시오. &lt;a href=&quot;#django.views.generic.edit.ModelFormMixin.success_url&quot;&gt; &lt;code&gt;django.views.generic.edit.ModelFormMixin.success_url&lt;/code&gt; (&lt;/a&gt; 제공된 경우)을 리턴합니다 . 그렇지 않으면 객체 의 &lt;code&gt;get_absolute_url()&lt;/code&gt; 을 사용하려고 시도 합니다.</target>
        </trans-unit>
        <trans-unit id="2661e24bb16227392ec85b0c713aaab93b983e7c" translate="yes" xml:space="preserve">
          <source>Determine whether to include &amp;ldquo;future&amp;rdquo; objects on this page, where &amp;ldquo;future&amp;rdquo; means objects in which the field specified in &lt;code&gt;date_field&lt;/code&gt; is greater than the current date/time. Returns &lt;a href=&quot;#django.views.generic.dates.DateMixin.allow_future&quot;&gt;&lt;code&gt;allow_future&lt;/code&gt;&lt;/a&gt; by default.</source>
          <target state="translated">이 페이지에 &quot;미래&quot;개체를 포함할지 여부를 결정합니다. 여기서 &quot;미래&quot;는 &lt;code&gt;date_field&lt;/code&gt; 에 지정된 필드 가 현재 날짜 / 시간보다 큰 개체를 의미합니다 . 기본적으로 &lt;a href=&quot;#django.views.generic.dates.DateMixin.allow_future&quot;&gt; &lt;code&gt;allow_future&lt;/code&gt; &lt;/a&gt; 를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="8b59033927e55b648a5b7b27625c8568e24a2cb3" translate="yes" xml:space="preserve">
          <source>Determines if Django will use the pre-1.6 &lt;a href=&quot;instances#django.db.models.Model.save&quot;&gt;&lt;code&gt;django.db.models.Model.save()&lt;/code&gt;&lt;/a&gt; algorithm. The old algorithm uses &lt;code&gt;SELECT&lt;/code&gt; to determine if there is an existing row to be updated. The new algorithm tries an &lt;code&gt;UPDATE&lt;/code&gt; directly. In some rare cases the &lt;code&gt;UPDATE&lt;/code&gt; of an existing row isn&amp;rsquo;t visible to Django. An example is the PostgreSQL &lt;code&gt;ON UPDATE&lt;/code&gt; trigger which returns &lt;code&gt;NULL&lt;/code&gt;. In such cases the new algorithm will end up doing an &lt;code&gt;INSERT&lt;/code&gt; even when a row exists in the database.</source>
          <target state="translated">장고가 1.6 이전 &lt;a href=&quot;instances#django.db.models.Model.save&quot;&gt; &lt;code&gt;django.db.models.Model.save()&lt;/code&gt; &lt;/a&gt; 알고리즘 을 사용할지 결정합니다 . 기존 알고리즘은 &lt;code&gt;SELECT&lt;/code&gt; 를 사용 하여 업데이트 할 기존 행이 있는지 확인합니다. 새로운 알고리즘은 &lt;code&gt;UPDATE&lt;/code&gt; 를 직접 시도합니다 . 드문 경우에 기존 행 의 &lt;code&gt;UPDATE&lt;/code&gt; 가 Django에 표시되지 않습니다. 예로는 &lt;code&gt;NULL&lt;/code&gt; 을 반환 하는 PostgreSQL &lt;code&gt;ON UPDATE&lt;/code&gt; 트리거가 있습니다. 이러한 경우 새 알고리즘은 데이터베이스에 행이 존재하더라도 &lt;code&gt;INSERT&lt;/code&gt; 를 수행 하게됩니다.</target>
        </trans-unit>
        <trans-unit id="a4be1c1a7610016eca8366d57bec0ae0d1ec0996" translate="yes" xml:space="preserve">
          <source>Determines the &lt;a href=&quot;../../request-response#django.http.HttpResponse&quot;&gt;&lt;code&gt;HttpResponse&lt;/code&gt;&lt;/a&gt; for the &lt;a href=&quot;#django.contrib.admin.ModelAdmin.add_view&quot;&gt;&lt;code&gt;add_view()&lt;/code&gt;&lt;/a&gt; stage.</source>
          <target state="translated">&lt;a href=&quot;#django.contrib.admin.ModelAdmin.add_view&quot;&gt; &lt;code&gt;add_view()&lt;/code&gt; &lt;/a&gt; 스테이지에 대한 &lt;a href=&quot;../../request-response#django.http.HttpResponse&quot;&gt; &lt;code&gt;HttpResponse&lt;/code&gt; &lt;/a&gt; 를 결정합니다 .</target>
        </trans-unit>
        <trans-unit id="b1ef716e269d001abfb666cce096f8a533bbfb1d" translate="yes" xml:space="preserve">
          <source>Determines the &lt;a href=&quot;../../request-response#django.http.HttpResponse&quot;&gt;&lt;code&gt;HttpResponse&lt;/code&gt;&lt;/a&gt; for the &lt;a href=&quot;#django.contrib.admin.ModelAdmin.change_view&quot;&gt;&lt;code&gt;change_view()&lt;/code&gt;&lt;/a&gt; stage.</source>
          <target state="translated">&lt;a href=&quot;#django.contrib.admin.ModelAdmin.change_view&quot;&gt; &lt;code&gt;change_view()&lt;/code&gt; &lt;/a&gt; 스테이지에 대한 &lt;a href=&quot;../../request-response#django.http.HttpResponse&quot;&gt; &lt;code&gt;HttpResponse&lt;/code&gt; &lt;/a&gt; 를 결정합니다 .</target>
        </trans-unit>
        <trans-unit id="0b13c14115d0f81fa450e8e8bc54f4d8e084bb60" translate="yes" xml:space="preserve">
          <source>Determines the &lt;a href=&quot;../../request-response#django.http.HttpResponse&quot;&gt;&lt;code&gt;HttpResponse&lt;/code&gt;&lt;/a&gt; for the &lt;a href=&quot;#django.contrib.admin.ModelAdmin.delete_view&quot;&gt;&lt;code&gt;delete_view()&lt;/code&gt;&lt;/a&gt; stage.</source>
          <target state="translated">&lt;a href=&quot;#django.contrib.admin.ModelAdmin.delete_view&quot;&gt; &lt;code&gt;delete_view()&lt;/code&gt; &lt;/a&gt; 스테이지에 대한 &lt;a href=&quot;../../request-response#django.http.HttpResponse&quot;&gt; &lt;code&gt;HttpResponse&lt;/code&gt; &lt;/a&gt; 를 결정합니다 .</target>
        </trans-unit>
        <trans-unit id="7c48e4b20e6ad398a94ae7b77c7217c62be6e4e0" translate="yes" xml:space="preserve">
          <source>Determines whether the widget will have a value filled in when the form is re-displayed after a validation error (default is &lt;code&gt;False&lt;/code&gt;).</source>
          <target state="translated">유효성 검사 오류 후 양식을 다시 표시 할 때 위젯에 값이 채워질 지 여부를 결정합니다 (기본값은 &lt;code&gt;False&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="53e970d11d6e2ac30780c87bd7920a96575d6890" translate="yes" xml:space="preserve">
          <source>Determining the version</source>
          <target state="translated">버전 결정</target>
        </trans-unit>
        <trans-unit id="b22354d57a68ea2f6eca477c2b86c2289164e577" translate="yes" xml:space="preserve">
          <source>Development server won&amp;rsquo;t automatically restart</source>
          <target state="translated">개발 서버가 자동으로 다시 시작되지 않습니다</target>
        </trans-unit>
        <trans-unit id="91925d5940f655cf778d7912b76a420682ea624a" translate="yes" xml:space="preserve">
          <source>Development-related messages that will be ignored (or removed) in a production deployment</source>
          <target state="translated">프로덕션 배포에서 무시되거나 제거 될 개발 관련 메시지</target>
        </trans-unit>
        <trans-unit id="f38672bc8b938a4e93ee299958b7ba0c35d3986a" translate="yes" xml:space="preserve">
          <source>Dictionary lookup</source>
          <target state="translated">사전 조회</target>
        </trans-unit>
        <trans-unit id="43df699c2dc54f1d56387b5ce7f61b6bd9d86072" translate="yes" xml:space="preserve">
          <source>Dictionary lookup, attribute lookup and list-index lookups are implemented with a dot notation:</source>
          <target state="translated">사전 조회, 속성 조회 및 목록 색인 조회는 점 표기법으로 구현됩니다.</target>
        </trans-unit>
        <trans-unit id="d0033fd61ed0d9dd4f31e74ed940c65aac673ddb" translate="yes" xml:space="preserve">
          <source>Dictionary lookup. Example: &lt;code&gt;foo[&quot;bar&quot;]&lt;/code&gt;</source>
          <target state="translated">사전 검색. 예 : &lt;code&gt;foo[&quot;bar&quot;]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9844c496e70778b4622dc4b9d14446cc4dbb1599" translate="yes" xml:space="preserve">
          <source>Dictionary params are not supported with the SQLite backend; with this backend, you must pass parameters as a list.</source>
          <target state="translated">사전 매개 변수는 SQLite 백엔드에서 지원되지 않습니다. 이 백엔드에서는 매개 변수를 목록으로 전달해야합니다.</target>
        </trans-unit>
        <trans-unit id="c3797745024f9e71cc1a9a425669a1580908dc77" translate="yes" xml:space="preserve">
          <source>Difference to Greenwich time in hours.</source>
          <target state="translated">그리니치 시간과 시간의 차이</target>
        </trans-unit>
        <trans-unit id="e3b87302cf4d6e044b838bbb64f0713d214ce5b8" translate="yes" xml:space="preserve">
          <source>Differences between proxy inheritance and unmanaged models</source>
          <target state="translated">프록시 상속과 관리되지 않는 모델의 차이점</target>
        </trans-unit>
        <trans-unit id="6c4b8d6a8ef3fe3bc2de972c1f7b28cf248b5e3b" translate="yes" xml:space="preserve">
          <source>Different error?</source>
          <target state="translated">다른 오류?</target>
        </trans-unit>
        <trans-unit id="a8bda41622602a8bb8d9004db7ae5fd925054c93" translate="yes" xml:space="preserve">
          <source>Different signals use different objects as their senders; you&amp;rsquo;ll need to consult the &lt;a href=&quot;../ref/signals&quot;&gt;built-in signal documentation&lt;/a&gt; for details of each particular signal.</source>
          <target state="translated">다른 신호는 다른 개체를 발신자로 사용합니다. 당신은 상담해야합니다 &lt;a href=&quot;../ref/signals&quot;&gt;신호 내장 된 문서를&lt;/a&gt; 각각의 특정 신호의 세부 사항.</target>
        </trans-unit>
        <trans-unit id="111f471f1c33c0211ebb481f1e0edd25317cdb62" translate="yes" xml:space="preserve">
          <source>Directories where the engine should look for template source files, in search order.</source>
          <target state="translated">엔진이 검색 순서대로 템플릿 소스 파일을 찾아야하는 디렉토리입니다.</target>
        </trans-unit>
        <trans-unit id="c5d039878b575ca44dfc5e5a32e4898482c71811" translate="yes" xml:space="preserve">
          <source>Disables breaking long message lines into several lines in language files.</source>
          <target state="translated">언어 파일에서 긴 메시지 줄을 여러 줄로 나누지 못하도록합니다.</target>
        </trans-unit>
        <trans-unit id="8c4c48e3b0caf11a6881c64f4270867d437481bd" translate="yes" xml:space="preserve">
          <source>Disables colorized command output. Some commands format their output to be colorized. For example, errors will be printed to the console in red and SQL statements will be syntax highlighted.</source>
          <target state="translated">채색 된 명령 출력을 비활성화합니다. 일부 명령은 출력을 색상으로 지정합니다. 예를 들어, 오류는 콘솔에 빨간색으로 인쇄되고 SQL 문은 구문으로 강조 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="94ad98f6ffe0f668a698112f505a4963aa948244" translate="yes" xml:space="preserve">
          <source>Disables reading the startup script for the &amp;ldquo;plain&amp;rdquo; Python interpreter. By default, the script pointed to by the &lt;a href=&quot;https://docs.python.org/3/using/cmdline.html#envvar-PYTHONSTARTUP&quot; id=&quot;index-3&quot;&gt;&lt;code&gt;PYTHONSTARTUP&lt;/code&gt;&lt;/a&gt; environment variable or the &lt;code&gt;~/.pythonrc.py&lt;/code&gt; script is read.</source>
          <target state="translated">&quot;일반&quot;Python 인터프리터의 시작 스크립트를 읽을 수 없습니다. 기본적으로 &lt;a href=&quot;https://docs.python.org/3/using/cmdline.html#envvar-PYTHONSTARTUP&quot; id=&quot;index-3&quot;&gt; &lt;code&gt;PYTHONSTARTUP&lt;/code&gt; &lt;/a&gt; 환경 변수 또는 &lt;code&gt;~/.pythonrc.py&lt;/code&gt; 스크립트가 가리키는 스크립트를 읽습니다.</target>
        </trans-unit>
        <trans-unit id="d8fe3baef7ceaf81ed4ba8126cca6ad496ff2a1c" translate="yes" xml:space="preserve">
          <source>Disables the auto-reloader. This means any Python code changes you make while the server is running will &lt;em&gt;not&lt;/em&gt; take effect if the particular Python modules have already been loaded into memory.</source>
          <target state="translated">자동 리 로더를 비활성화합니다. 이는 특정 Python 모듈이 이미 메모리에로드 된 경우 서버가 실행되는 동안 변경 한 Python 코드가 적용 &lt;em&gt;되지 않음&lt;/em&gt; 을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="119d87d164f8509e18cd90153ddcef0ded127cfc" translate="yes" xml:space="preserve">
          <source>Disables the default values of &lt;code&gt;--ignore&lt;/code&gt;.</source>
          <target state="translated">기본값 &lt;code&gt;--ignore&lt;/code&gt; 를 비활성화합니다 .</target>
        </trans-unit>
        <trans-unit id="30b5d718c75938c0bf50a198fabe9a1a029bf627" translate="yes" xml:space="preserve">
          <source>Disables the optimizer when generating a squashed migration. By default, Django will try to optimize the operations in your migrations to reduce the size of the resulting file. Use this option if this process is failing or creating incorrect migrations, though please also file a Django bug report about the behavior, as optimization is meant to be safe.</source>
          <target state="translated">스쿼시 마이그레이션을 생성 할 때 옵티 마이저를 비활성화합니다. Django는 기본적으로 마이그레이션 작업을 최적화하여 결과 파일의 크기를 줄입니다. 이 프로세스가 실패하거나 잘못된 마이그레이션을 생성하는 경우이 옵션을 사용하십시오. 최적화는 안전하기 때문에 동작에 대한 장고 버그 보고서를 제출하십시오.</target>
        </trans-unit>
        <trans-unit id="76be908b3097056448c6afb2d3f6a1029436eed9" translate="yes" xml:space="preserve">
          <source>Disables use of threading in the development server. The server is multithreaded by default.</source>
          <target state="translated">개발 서버에서 스레딩을 사용하지 않습니다. 서버는 기본적으로 다중 스레드입니다.</target>
        </trans-unit>
        <trans-unit id="8109ad7dfc0adce0b7d2b65ea9ce4c7c416384d5" translate="yes" xml:space="preserve">
          <source>Disabling &lt;a href=&quot;../../ref/settings#std:setting-ALLOWED_HOSTS&quot;&gt;&lt;code&gt;ALLOWED_HOSTS&lt;/code&gt;&lt;/a&gt; checking (&lt;code&gt;ALLOWED_HOSTS = ['*']&lt;/code&gt;) when running tests prevents the test client from raising a helpful error message if you follow a redirect to an external URL.</source>
          <target state="translated">테스트를 실행할 때 &lt;a href=&quot;../../ref/settings#std:setting-ALLOWED_HOSTS&quot;&gt; &lt;code&gt;ALLOWED_HOSTS&lt;/code&gt; &lt;/a&gt; 검사 ( &lt;code&gt;ALLOWED_HOSTS = ['*']&lt;/code&gt; )를 비활성화 하면 외부 URL 로의 리디렉션을 따르는 경우 테스트 클라이언트가 유용한 오류 메시지를 발생시키지 않습니다.</target>
        </trans-unit>
        <trans-unit id="cf0a3500a3e70ca3c8107e85111fa0f27b789623" translate="yes" xml:space="preserve">
          <source>Disabling a site-wide action</source>
          <target state="translated">사이트 전체 작업 비활성화</target>
        </trans-unit>
        <trans-unit id="01b3109d2eade90bafedda2cfe65286e77f85a48" translate="yes" xml:space="preserve">
          <source>Disabling actions</source>
          <target state="translated">액션 비활성화</target>
        </trans-unit>
        <trans-unit id="41f61de92c6480125054cd67d0f0abf6dc281883" translate="yes" xml:space="preserve">
          <source>Disabling all actions for a particular &lt;a href=&quot;index#django.contrib.admin.ModelAdmin&quot;&gt;&lt;code&gt;ModelAdmin&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">특정 &lt;a href=&quot;index#django.contrib.admin.ModelAdmin&quot;&gt; &lt;code&gt;ModelAdmin&lt;/code&gt; 에&lt;/a&gt; 대한 모든 조치 사용 안함</target>
        </trans-unit>
        <trans-unit id="0e6b01a40e33bcee209f1d53259f20c9dc5c74c1" translate="yes" xml:space="preserve">
          <source>Disabling logging configuration</source>
          <target state="translated">로깅 구성 비활성화</target>
        </trans-unit>
        <trans-unit id="5d70aaeb26a4cc60e94ce0e783f960a0f6e2bd49" translate="yes" xml:space="preserve">
          <source>Disclosed security issues in Django</source>
          <target state="translated">장고의 보안 문제 공개</target>
        </trans-unit>
        <trans-unit id="f78c013c299e0eb98a81739068e3f16466796d25" translate="yes" xml:space="preserve">
          <source>Disconnecting signals</source>
          <target state="translated">신호 연결 끊기</target>
        </trans-unit>
        <trans-unit id="9d9057f485af326a5d2d2681d5b39c88016e6e56" translate="yes" xml:space="preserve">
          <source>Discovery of admin files</source>
          <target state="translated">관리자 파일 발견</target>
        </trans-unit>
        <trans-unit id="64548175545ca9534d1f70065c5e34a655b9b895" translate="yes" xml:space="preserve">
          <source>Display list and detail pages for a single object. If we were creating an application to manage conferences then a &lt;code&gt;TalkListView&lt;/code&gt; and a &lt;code&gt;RegisteredUserListView&lt;/code&gt; would be examples of list views. A single talk page is an example of what we call a &amp;ldquo;detail&amp;rdquo; view.</source>
          <target state="translated">단일 객체에 대한 목록 및 세부 사항 페이지를 표시합니다. 컨퍼런스를 관리하는 애플리케이션을 작성하는 경우 &lt;code&gt;TalkListView&lt;/code&gt; 및 &lt;code&gt;RegisteredUserListView&lt;/code&gt; 가 목록보기의 예입니다. 단일 토론 페이지는 우리가 &quot;세부 사항&quot;보기라고 부르는 예입니다.</target>
        </trans-unit>
        <trans-unit id="13532d11832086bdc504ef1a4449c09be33bb4c6" translate="yes" xml:space="preserve">
          <source>Displaying &lt;code&gt;registration_required&lt;/code&gt; flatpages</source>
          <target state="translated">&lt;code&gt;registration_required&lt;/code&gt; _ 필요한 플랫 페이지 표시</target>
        </trans-unit>
        <trans-unit id="0828e2342731a2c8c00fa3c3c6f6066765220920" translate="yes" xml:space="preserve">
          <source>Displaying debug output</source>
          <target state="translated">디버그 출력 표시</target>
        </trans-unit>
        <trans-unit id="660d88c4c1960c51658ce5f89ff619c9b594e2a0" translate="yes" xml:space="preserve">
          <source>Displaying messages</source>
          <target state="translated">메시지 표시</target>
        </trans-unit>
        <trans-unit id="6706bfa4d9e668540ed3a956cd02ffdb83dd3182" translate="yes" xml:space="preserve">
          <source>Displays a full stack trace when a &lt;a href=&quot;../howto/custom-management-commands#django.core.management.CommandError&quot;&gt;&lt;code&gt;CommandError&lt;/code&gt;&lt;/a&gt; is raised. By default, &lt;code&gt;django-admin&lt;/code&gt; will show an error message when a &lt;code&gt;CommandError&lt;/code&gt; occurs and a full stack trace for any other exception.</source>
          <target state="translated">&lt;a href=&quot;../howto/custom-management-commands#django.core.management.CommandError&quot;&gt; &lt;code&gt;CommandError&lt;/code&gt; &lt;/a&gt; 가 발생 하면 전체 스택 추적을 표시합니다 . 기본적으로 &lt;code&gt;django-admin&lt;/code&gt; 은 &lt;code&gt;CommandError&lt;/code&gt; 가 발생 하면 오류 메시지를 표시하고 다른 예외에 대한 전체 스택 추적을 표시합니다.</target>
        </trans-unit>
        <trans-unit id="a1dd9da7c2d33b59e5a821aa775ddb9b6372f6a7" translate="yes" xml:space="preserve">
          <source>Displays all settings, even if they have Django&amp;rsquo;s default value. Such settings are prefixed by &lt;code&gt;&quot;###&quot;&lt;/code&gt;.</source>
          <target state="translated">Django의 기본값이 있더라도 모든 설정을 표시합니다. 이러한 설정은 &lt;code&gt;&quot;###&quot;&lt;/code&gt; 접두사가 붙습니다 .</target>
        </trans-unit>
        <trans-unit id="46aed19c1e75a0350399dbf07a914c1430160781" translate="yes" xml:space="preserve">
          <source>Displays differences between the current settings file and Django&amp;rsquo;s default settings (or another settings file specified by &lt;a href=&quot;#cmdoption-diffsettings-default&quot;&gt;&lt;code&gt;--default&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">현재 설정 파일과 Django의 기본 설정 (또는 &lt;a href=&quot;#cmdoption-diffsettings-default&quot;&gt; &lt;code&gt;--default&lt;/code&gt; 로&lt;/a&gt; 지정된 다른 설정 파일)의 차이점을 표시합니다 .</target>
        </trans-unit>
        <trans-unit id="79f04353bc3ff08b5ce101f6d2f476cbf0bd2a88" translate="yes" xml:space="preserve">
          <source>Displays random &amp;ldquo;lorem ipsum&amp;rdquo; Latin text. This is useful for providing sample data in templates.</source>
          <target state="translated">임의의 &quot;lorem ipsum&quot;라틴 텍스트를 표시합니다. 템플릿에 샘플 데이터를 제공하는 데 유용합니다.</target>
        </trans-unit>
        <trans-unit id="03ff6ac03c8de9c5a7773b3338ed56e12aa87de3" translate="yes" xml:space="preserve">
          <source>Displays text with line numbers.</source>
          <target state="translated">줄 번호와 함께 텍스트를 표시합니다.</target>
        </trans-unit>
        <trans-unit id="1d16dec23f731e5d1e758a2f2539539b83e3a742" translate="yes" xml:space="preserve">
          <source>Displays the current date and/or time, using a format according to the given string. Such string can contain format specifiers characters as described in the &lt;a href=&quot;#std:templatefilter-date&quot;&gt;&lt;code&gt;date&lt;/code&gt;&lt;/a&gt; filter section.</source>
          <target state="translated">주어진 문자열에 따른 형식을 사용하여 현재 날짜 및 / 또는 시간을 표시합니다. 이러한 문자열은 &lt;a href=&quot;#std:templatefilter-date&quot;&gt; &lt;code&gt;date&lt;/code&gt; &lt;/a&gt; 필터 섹션에 설명 된대로 형식 지정자 문자를 포함 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="6f4ece970310a67279b44ecd2040fe97bb03157d" translate="yes" xml:space="preserve">
          <source>Distance Lookups</source>
          <target state="translated">거리 조회</target>
        </trans-unit>
        <trans-unit id="ae5dac4724e3ed72abefcaa4736bd6cdd36b1c87" translate="yes" xml:space="preserve">
          <source>Distance Queries</source>
          <target state="translated">거리 쿼리</target>
        </trans-unit>
        <trans-unit id="9d08ff2be156063b7efc06d2495433331d3f4df8" translate="yes" xml:space="preserve">
          <source>Distance calculations with spatial data is tricky because, unfortunately, the Earth is not flat. Some distance queries with fields in a geographic coordinate system may have to be expressed differently because of limitations in PostGIS. Please see the &lt;a href=&quot;model-api#selecting-an-srid&quot;&gt;Selecting an SRID&lt;/a&gt; section in the &lt;a href=&quot;model-api&quot;&gt;GeoDjango Model API&lt;/a&gt; documentation for more details.</source>
          <target state="translated">불행히도 지구가 평평하지 않기 때문에 공간 데이터를 사용한 거리 계산은 까다 롭습니다. 지리적 좌표 시스템에 필드가있는 일부 거리 쿼리는 PostGIS의 제한으로 인해 다르게 표현 될 수 있습니다. 자세한 내용은 &lt;a href=&quot;model-api&quot;&gt;GeoDjango 모델 API&lt;/a&gt; 설명서 에서 &lt;a href=&quot;model-api#selecting-an-srid&quot;&gt;SRID 선택&lt;/a&gt; 섹션 을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="80d0b6f734875ac5f9d39259dc012845b0166a2e" translate="yes" xml:space="preserve">
          <source>Distance lookups take a tuple parameter comprising:</source>
          <target state="translated">거리 조회는 다음을 포함하는 튜플 매개 변수를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="8fbcb1b67a5a23af508da8a4e3f1074b2f375802" translate="yes" xml:space="preserve">
          <source>Distance lookups take the following form:</source>
          <target state="translated">거리 조회는 다음과 같은 형식을 따릅니다.</target>
        </trans-unit>
        <trans-unit id="7ba91c36ad89f1909e854d9621a9e3c9c6f7aafb" translate="yes" xml:space="preserve">
          <source>Dive Into Python (a free online book for beginning Python developers) includes a great &lt;a href=&quot;https://www.diveinto.org/python3/unit-testing.html&quot;&gt;introduction to Unit Testing&lt;/a&gt;.</source>
          <target state="translated">Python Dive Into Python (Python 개발자를위한 무료 온라인 서적)에는 &lt;a href=&quot;https://www.diveinto.org/python3/unit-testing.html&quot;&gt;Unit Testing에&lt;/a&gt; 대한 훌륭한 소개가 포함되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="b6c95e2580609775eb2b7302ad50c369810daef6" translate="yes" xml:space="preserve">
          <source>Django</source>
          <target state="translated">Django</target>
        </trans-unit>
        <trans-unit id="769380707930d83173e396f9268d8f88027c9057" translate="yes" xml:space="preserve">
          <source>Django Component</source>
          <target state="translated">장고 컴포넌트</target>
        </trans-unit>
        <trans-unit id="6e6a12b6fe49fcf385827a3d27282bad924d4423" translate="yes" xml:space="preserve">
          <source>Django Core Exceptions</source>
          <target state="translated">장고 코어 예외</target>
        </trans-unit>
        <trans-unit id="acd826e3e3b0bb1449349f3c0aa7c94c3bba8813" translate="yes" xml:space="preserve">
          <source>Django Exceptions</source>
          <target state="translated">장고 예외</target>
        </trans-unit>
        <trans-unit id="f11cf5ae018b120dd1ff5dcd7c8d8b57af4a0d11" translate="yes" xml:space="preserve">
          <source>Django Packages provides a &lt;a href=&quot;https://djangopackages.org/grids/g/pdf/&quot;&gt;comparison of packages&lt;/a&gt; that help generate PDF files from Django.</source>
          <target state="translated">Django Packages는 Django 에서 PDF 파일을 생성하는 데 도움 &lt;a href=&quot;https://djangopackages.org/grids/g/pdf/&quot;&gt;이되는 패키지 비교를&lt;/a&gt; 제공합니다 .</target>
        </trans-unit>
        <trans-unit id="db22d948341a0750d49831166adb379a85ed90f0" translate="yes" xml:space="preserve">
          <source>Django Utils</source>
          <target state="translated">장고 유틸리티</target>
        </trans-unit>
        <trans-unit id="1ccb5b038648322f6fc9beacd7e9884ff6d89dd0" translate="yes" xml:space="preserve">
          <source>Django admin JavaScript makes use of the &lt;a href=&quot;https://jquery.com&quot;&gt;jQuery&lt;/a&gt; library.</source>
          <target state="translated">Django admin JavaScript는 &lt;a href=&quot;https://jquery.com&quot;&gt;jQuery&lt;/a&gt; 라이브러리를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="f873f9003f9ebfa394e6c1a85701a9054d4169cf" translate="yes" xml:space="preserve">
          <source>Django adopts a &amp;ldquo;lazy&amp;rdquo; approach to decoding form data. The data in an &lt;code&gt;HttpRequest&lt;/code&gt; object is only decoded when you access it. In fact, most of the data is not decoded at all. Only the &lt;code&gt;HttpRequest.GET&lt;/code&gt; and &lt;code&gt;HttpRequest.POST&lt;/code&gt; data structures have any decoding applied to them. Those two fields will return their members as Unicode data. All other attributes and methods of &lt;code&gt;HttpRequest&lt;/code&gt; return data exactly as it was submitted by the client.</source>
          <target state="translated">Django는 양식 데이터를 디코딩하기 위해 &quot;게으른&quot;접근 방식을 채택합니다. &lt;code&gt;HttpRequest&lt;/code&gt; 객체 의 데이터는 액세스 할 때만 디코딩됩니다. 실제로, 대부분의 데이터는 전혀 디코딩되지 않습니다. &lt;code&gt;HttpRequest.GET&lt;/code&gt; 및 &lt;code&gt;HttpRequest.POST&lt;/code&gt; 데이터 구조 만 적용됩니다. 이 두 필드는 멤버를 유니 코드 데이터로 반환합니다. &lt;code&gt;HttpRequest&lt;/code&gt; 의 다른 모든 속성 및 메소드 는 클라이언트가 제출 한 그대로 데이터를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="1bb62d87ed5423151028775a91e43a316062c5cb" translate="yes" xml:space="preserve">
          <source>Django aims to follow Python&amp;rsquo;s &lt;a href=&quot;https://docs.python.org/3/tutorial/stdlib.html#tut-batteries-included&quot;&gt;&amp;ldquo;batteries included&amp;rdquo; philosophy&lt;/a&gt;. It ships with a variety of extra, optional tools that solve common Web-development problems.</source>
          <target state="translated">Django는 Python의 &lt;a href=&quot;https://docs.python.org/3/tutorial/stdlib.html#tut-batteries-included&quot;&gt;&quot;배터리 포함&quot;철학&lt;/a&gt; 을 따르고 자 합니다. 일반적인 웹 개발 문제를 해결하는 다양한 추가 옵션 도구가 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="f9cb3ca4b1dc9576637c690fad5d84883768d106" translate="yes" xml:space="preserve">
          <source>Django allows you to override the default user model by providing a value for the &lt;a href=&quot;../../ref/settings#std:setting-AUTH_USER_MODEL&quot;&gt;&lt;code&gt;AUTH_USER_MODEL&lt;/code&gt;&lt;/a&gt; setting that references a custom model:</source>
          <target state="translated">Django를 사용하면 사용자 지정 모델을 참조하는 &lt;a href=&quot;../../ref/settings#std:setting-AUTH_USER_MODEL&quot;&gt; &lt;code&gt;AUTH_USER_MODEL&lt;/code&gt; &lt;/a&gt; 설정 값을 제공하여 기본 사용자 모델을 재정의 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="54ac4c610be5e232109a0da9588a63a316cb250b" translate="yes" xml:space="preserve">
          <source>Django also allows the &lt;a href=&quot;https://en.wikipedia.org/wiki/Fully_qualified_domain_name&quot;&gt;fully qualified domain name (FQDN)&lt;/a&gt; of any entries. Some browsers include a trailing dot in the &lt;code&gt;Host&lt;/code&gt; header which Django strips when performing host validation.</source>
          <target state="translated">Django는 모든 항목의 &lt;a href=&quot;https://en.wikipedia.org/wiki/Fully_qualified_domain_name&quot;&gt;FQDN (정규화 된 도메인 이름)&lt;/a&gt; 도 허용 합니다. 일부 브라우저는 &lt;code&gt;Host&lt;/code&gt; 헤더 에 후행 점을 포함하여 호스트 유효성 검사를 수행 할 때 Django가 제거합니다.</target>
        </trans-unit>
        <trans-unit id="6704db362f4291b059782d27e0a05637c07ab79b" translate="yes" xml:space="preserve">
          <source>Django also comes with a lower-level feed-generating API. Use this if you want to generate feeds outside of a Web context, or in some other lower-level way.</source>
          <target state="translated">Django는 또한 더 낮은 수준의 피드 생성 API를 제공합니다. 웹 컨텍스트 외부 또는 다른 하위 레벨 방식으로 피드를 생성하려는 경우이를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="9521c4fe01b405b0001e29ed67a9c0a69fad4050" translate="yes" xml:space="preserve">
          <source>Django also creates API accessors for the &amp;ldquo;other&amp;rdquo; side of the relationship &amp;ndash; the link from the related model to the model that defines the relationship. For example, a &lt;code&gt;Blog&lt;/code&gt; object &lt;code&gt;b&lt;/code&gt; has access to a list of all related &lt;code&gt;Entry&lt;/code&gt; objects via the &lt;code&gt;entry_set&lt;/code&gt; attribute: &lt;code&gt;b.entry_set.all()&lt;/code&gt;.</source>
          <target state="translated">Django는 또한 관계의&amp;ldquo;다른&amp;rdquo;측면에 대한 API 접근자를 만듭니다. 관련 모델에서 관계를 정의하는 모델로의 링크입니다. 예를 들어, &lt;code&gt;Blog&lt;/code&gt; 오브젝트 &lt;code&gt;b&lt;/code&gt; 는 &lt;code&gt;entry_set&lt;/code&gt; 속성 &lt;code&gt;b.entry_set.all()&lt;/code&gt; 통해 모든 관련 &lt;code&gt;Entry&lt;/code&gt; 오브젝트 목록에 액세스 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="003dbf2d5d14b9ddff530e3745c9f868eca5cb29" translate="yes" xml:space="preserve">
          <source>Django also defines a set of fields that represent relations.</source>
          <target state="translated">장고는 또한 관계를 나타내는 일련의 필드를 정의합니다.</target>
        </trans-unit>
        <trans-unit id="ff55e8dd422fb73cd9158d2c731c59110966582d" translate="yes" xml:space="preserve">
          <source>Django also gives developers power to write &lt;a href=&quot;db/sql#executing-raw-queries&quot;&gt;raw queries&lt;/a&gt; or execute &lt;a href=&quot;db/sql#executing-custom-sql&quot;&gt;custom sql&lt;/a&gt;. These capabilities should be used sparingly and you should always be careful to properly escape any parameters that the user can control. In addition, you should exercise caution when using &lt;a href=&quot;../ref/models/querysets#django.db.models.query.QuerySet.extra&quot;&gt;&lt;code&gt;extra()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../ref/models/expressions#django.db.models.expressions.RawSQL&quot;&gt;&lt;code&gt;RawSQL&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Django는 개발자에게 &lt;a href=&quot;db/sql#executing-raw-queries&quot;&gt;원시 쿼리&lt;/a&gt; 를 작성 하거나 &lt;a href=&quot;db/sql#executing-custom-sql&quot;&gt;사용자 지정 sql을&lt;/a&gt; 실행할 수있는 기능을 제공합니다 . 이러한 기능은 드물게 사용해야하며 사용자가 제어 할 수있는 모든 매개 변수를 항상 이스케이프 처리해야합니다. 또한 &lt;a href=&quot;../ref/models/querysets#django.db.models.query.QuerySet.extra&quot;&gt; &lt;code&gt;extra()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../ref/models/expressions#django.db.models.expressions.RawSQL&quot;&gt; &lt;code&gt;RawSQL&lt;/code&gt; &lt;/a&gt; 사용시주의를 기울여야 합니다.</target>
        </trans-unit>
        <trans-unit id="1778c45c6cdf7be2bf36c71d865a4b76444a33ee" translate="yes" xml:space="preserve">
          <source>Django also offers a &lt;a href=&quot;../ref/utils#django.utils.functional.keep_lazy&quot;&gt;&lt;code&gt;keep_lazy()&lt;/code&gt;&lt;/a&gt; decorator. This allows a function that has been called with a lazy argument to behave lazily itself, only being evaluated when it needs to be. Thus the lazy argument - which could be an expensive one - will not be called upon for evaluation until it&amp;rsquo;s strictly required.</source>
          <target state="translated">Django는 &lt;a href=&quot;../ref/utils#django.utils.functional.keep_lazy&quot;&gt; &lt;code&gt;keep_lazy()&lt;/code&gt; &lt;/a&gt; 데코레이터 도 제공합니다 . 이것은 게으른 인수로 호출 된 함수가 게으르게 작동하고 필요할 때만 평가되도록합니다. 따라서 값 비싼 것일 수있는 게으른 주장은 엄격하게 요구 될 때까지 평가를 요구하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="d3be1b84e5749f3be3485a06feb25e0662e93dbb" translate="yes" xml:space="preserve">
          <source>Django also provides &lt;a href=&quot;#built-in-auth-views&quot;&gt;views&lt;/a&gt; and &lt;a href=&quot;#built-in-auth-forms&quot;&gt;forms&lt;/a&gt; that may be used to allow users to change their own passwords.</source>
          <target state="translated">Django는 또한 사용자가 자신의 암호를 변경할 수있는 &lt;a href=&quot;#built-in-auth-views&quot;&gt;보기&lt;/a&gt; 및 &lt;a href=&quot;#built-in-auth-forms&quot;&gt;양식&lt;/a&gt; 을 제공 합니다.</target>
        </trans-unit>
        <trans-unit id="17ef38d9be3b089211847bf7776f6adde4853bf0" translate="yes" xml:space="preserve">
          <source>Django also provides a way to translate URLs according to the active language. See the &lt;a href=&quot;../i18n/translation#url-internationalization&quot;&gt;internationalization documentation&lt;/a&gt; for more information.</source>
          <target state="translated">Django는 또한 활성 언어에 따라 URL을 번역하는 방법을 제공합니다. 자세한 내용은 &lt;a href=&quot;../i18n/translation#url-internationalization&quot;&gt;국제화 설명서&lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="d648d7fd76e758d5c7f5761ba79f49411de9f742" translate="yes" xml:space="preserve">
          <source>Django also provides an API that allows you to maintain complete control over database usage in your code. A manually specified database allocation will take priority over a database allocated by a router.</source>
          <target state="translated">Django는 또한 코드에서 데이터베이스 사용을 완전히 제어 할 수있는 API를 제공합니다. 수동으로 지정된 데이터베이스 할당은 라우터가 할당 한 데이터베이스보다 우선합니다.</target>
        </trans-unit>
        <trans-unit id="6e97f5c59a2a47176233efb9e93c5e41ff63e482" translate="yes" xml:space="preserve">
          <source>Django also uses these &lt;code&gt;Operation&lt;/code&gt; objects to work out what your models looked like historically, and to calculate what changes you&amp;rsquo;ve made to your models since the last migration so it can automatically write your migrations; that&amp;rsquo;s why they&amp;rsquo;re declarative, as it means Django can easily load them all into memory and run through them without touching the database to work out what your project should look like.</source>
          <target state="translated">Django는 또한 이러한 &lt;code&gt;Operation&lt;/code&gt; 객체를 사용하여 역사적으로 모델의 모양을 해결하고 마지막 마이그레이션 이후 모델에 적용된 변경 사항을 계산하여 마이그레이션을 자동으로 작성할 수 있습니다. Django가 프로젝트를 어떻게 구성해야하는지 데이터베이스를 건드리지 않고 쉽게 메모리에 모두로드하고 실행할 수 있기 때문에 이들이 선언적인 이유입니다.</target>
        </trans-unit>
        <trans-unit id="9e9bcf643848afd86aa5def17cd14071c44f0923" translate="yes" xml:space="preserve">
          <source>Django also works well with &amp;ldquo;downstream&amp;rdquo; caches, such as &lt;a href=&quot;http://www.squid-cache.org&quot;&gt;Squid&lt;/a&gt; and browser-based caches. These are the types of caches that you don&amp;rsquo;t directly control but to which you can provide hints (via HTTP headers) about which parts of your site should be cached, and how.</source>
          <target state="translated">Django는 &lt;a href=&quot;http://www.squid-cache.org&quot;&gt;Squid&lt;/a&gt; 및 브라우저 기반 캐시와 같은&amp;ldquo;다운 스트림&amp;rdquo;캐시와도 잘 작동 합니다. 이들은 직접 제어하지 않지만 사이트의 어느 부분을 캐시해야하는지에 대한 힌트 (HTTP 헤더를 통해)를 제공 할 수있는 캐시 유형입니다.</target>
        </trans-unit>
        <trans-unit id="511b9e7b5da348943fbb4c15f9d03f9c129408e6" translate="yes" xml:space="preserve">
          <source>Django applications require a single base filesystem path where Django (depending on configuration) will search for templates, static assets, etc. Thus, namespace packages may only be Django applications if one of the following is true:</source>
          <target state="translated">Django 응용 프로그램에는 Django (구성에 따라 다름)에서 템플릿, 정적 자산 등을 검색하는 단일 기본 파일 시스템 경로가 필요합니다. 따라서 네임 스페이스 패키지는 다음 중 하나에 해당하는 경우에만 Django 응용 프로그램 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9f5ff692cf4868fdfbbaa8feab7e317e762751c6" translate="yes" xml:space="preserve">
          <source>Django applications that make proper use of URL namespacing can be deployed more than once for a particular site. For example &lt;a href=&quot;../../ref/contrib/admin/index#module-django.contrib.admin&quot;&gt;&lt;code&gt;django.contrib.admin&lt;/code&gt;&lt;/a&gt; has an &lt;a href=&quot;../../ref/contrib/admin/index#django.contrib.admin.AdminSite&quot;&gt;&lt;code&gt;AdminSite&lt;/code&gt;&lt;/a&gt; class which allows you to &lt;a href=&quot;../../ref/contrib/admin/index#multiple-admin-sites&quot;&gt;deploy more than one instance of the admin&lt;/a&gt;. In a later example, we&amp;rsquo;ll discuss the idea of deploying the polls application from the tutorial in two different locations so we can serve the same functionality to two different audiences (authors and publishers).</source>
          <target state="translated">URL 네임 스페이스를 올바르게 사용하는 Django 애플리케이션은 특정 사이트에 대해 두 번 이상 배치 될 수 있습니다. 예를 들어 &lt;a href=&quot;../../ref/contrib/admin/index#module-django.contrib.admin&quot;&gt; &lt;code&gt;django.contrib.admin&lt;/code&gt; &lt;/a&gt; 에는 &lt;a href=&quot;../../ref/contrib/admin/index#multiple-admin-sites&quot;&gt;하나 이상의 admin 인스턴스&lt;/a&gt; 를 배포 할 수 있는 &lt;a href=&quot;../../ref/contrib/admin/index#django.contrib.admin.AdminSite&quot;&gt; &lt;code&gt;AdminSite&lt;/code&gt; &lt;/a&gt; 클래스가 있습니다 . 이후의 예에서는 튜토리얼의 설문 조사 애플리케이션을 두 개의 다른 위치에 배치하여 두 명의 다른 대상 (작성자 및 발행자)에게 동일한 기능을 제공 할 수 있다는 아이디어에 대해 설명합니다.</target>
        </trans-unit>
        <trans-unit id="da015b3e3be611efe63c0416fc75b3480d9a9904" translate="yes" xml:space="preserve">
          <source>Django apps are &amp;ldquo;pluggable&amp;rdquo;: You can use an app in multiple projects, and you can distribute apps, because they don&amp;rsquo;t have to be tied to a given Django installation.</source>
          <target state="translated">Django 앱은 &quot;플러그 가능&quot;합니다 : 여러 프로젝트에서 앱을 사용할 수 있으며 특정 Django 설치에 연결될 필요가 없기 때문에 앱을 배포 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d2fea2f4ba070fa8e695f4340e48f2233d10da08" translate="yes" xml:space="preserve">
          <source>Django assumes that all databases use UTF-8 encoding. Using other encodings may result in unexpected behavior such as &amp;ldquo;value too long&amp;rdquo; errors from your database for data that is valid in Django. See the database specific notes below for information on how to set up your database correctly.</source>
          <target state="translated">Django는 모든 데이터베이스가 UTF-8 인코딩을 사용한다고 가정합니다. 다른 인코딩을 사용하면 Django에서 유효한 데이터에 대한 데이터베이스의 &quot;값이 너무 깁니다&quot;오류와 같은 예기치 않은 동작이 발생할 수 있습니다. 데이터베이스를 올바르게 설정하는 방법에 대한 정보는 아래 데이터베이스 별 참고 사항을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="bebef6c71f1658cf910992f51621a4b8eb7c50aa" translate="yes" xml:space="preserve">
          <source>Django at a glance</source>
          <target state="translated">장고 살펴보기</target>
        </trans-unit>
        <trans-unit id="fd6db7224feb4cf7f9af259a01d8b83e66b01b2c" translate="yes" xml:space="preserve">
          <source>Django attempts to support as many features as possible on all database backends. However, not all database backends are alike, and we&amp;rsquo;ve had to make design decisions on which features to support and which assumptions we can make safely.</source>
          <target state="translated">Django는 모든 데이터베이스 백엔드에서 가능한 많은 기능을 지원하려고합니다. 그러나 모든 데이터베이스 백엔드가 동일한 것은 아니며 지원할 기능과 안전하게 결정할 수있는 가정에 대한 설계 결정을 내려야했습니다.</target>
        </trans-unit>
        <trans-unit id="7a72f5a587298370cc35240126e66aa9f362d11e" translate="yes" xml:space="preserve">
          <source>Django authentication provides both authentication and authorization together and is generally referred to as the authentication system, as these features are somewhat coupled.</source>
          <target state="translated">Django 인증은 인증과 권한 부여를 모두 제공하며 이러한 기능이 다소 결합되어 있기 때문에 일반적으로 인증 시스템이라고합니다.</target>
        </trans-unit>
        <trans-unit id="aec72b09ba2e3ac2352b00fce902dc72ae767e1a" translate="yes" xml:space="preserve">
          <source>Django automatically converts exceptions raised by the view or by middleware into an appropriate HTTP response with an error status code. &lt;a href=&quot;../../ref/views#error-views&quot;&gt;Certain exceptions&lt;/a&gt; are converted to 4xx status codes, while an unknown exception is converted to a 500 status code.</source>
          <target state="translated">Django는 뷰 또는 미들웨어에 의해 발생한 예외를 오류 상태 코드와 함께 적절한 HTTP 응답으로 자동 변환합니다. &lt;a href=&quot;../../ref/views#error-views&quot;&gt;특정 예외&lt;/a&gt; 는 4xx 상태 코드로 변환되는 반면 알 수없는 예외는 500 상태 코드로 변환됩니다.</target>
        </trans-unit>
        <trans-unit id="c50c82d2bdfce66f7231dbcce0ec91ccd83a5988" translate="yes" xml:space="preserve">
          <source>Django calls &lt;code&gt;process_exception()&lt;/code&gt; when a view raises an exception. &lt;code&gt;process_exception()&lt;/code&gt; should return either &lt;code&gt;None&lt;/code&gt; or an &lt;a href=&quot;../../ref/request-response#django.http.HttpResponse&quot;&gt;&lt;code&gt;HttpResponse&lt;/code&gt;&lt;/a&gt; object. If it returns an &lt;a href=&quot;../../ref/request-response#django.http.HttpResponse&quot;&gt;&lt;code&gt;HttpResponse&lt;/code&gt;&lt;/a&gt; object, the template response and response middleware will be applied and the resulting response returned to the browser. Otherwise, &lt;a href=&quot;../../ref/views#error-views&quot;&gt;default exception handling&lt;/a&gt; kicks in.</source>
          <target state="translated">Django 는 뷰에서 예외가 발생하면 &lt;code&gt;process_exception()&lt;/code&gt; 호출합니다 . &lt;code&gt;process_exception()&lt;/code&gt; 은 &lt;code&gt;None&lt;/code&gt; 또는 &lt;a href=&quot;../../ref/request-response#django.http.HttpResponse&quot;&gt; &lt;code&gt;HttpResponse&lt;/code&gt; &lt;/a&gt; 객체를 반환해야 합니다. &lt;a href=&quot;../../ref/request-response#django.http.HttpResponse&quot;&gt; &lt;code&gt;HttpResponse&lt;/code&gt; &lt;/a&gt; 오브젝트를 리턴하면 템플리트 응답 및 응답 미들웨어가 적용되고 결과 응답이 브라우저로 리턴됩니다. 그렇지 않으면 &lt;a href=&quot;../../ref/views#error-views&quot;&gt;기본 예외 처리&lt;/a&gt; 가 시작됩니다.</target>
        </trans-unit>
        <trans-unit id="9b8b66699207f32bf040c54f4c864f13d7219ff5" translate="yes" xml:space="preserve">
          <source>Django can also be configured to email errors about broken links (404 &amp;ldquo;page not found&amp;rdquo; errors). Django sends emails about 404 errors when:</source>
          <target state="translated">Django는 끊어진 링크 (404&amp;ldquo;페이지를 찾을 수 없음&amp;rdquo;오류)에 대한 오류를 이메일로 보내도록 구성 할 수도 있습니다. Django는 다음과 같은 경우에 404 오류에 대한 이메일을 보냅니다.</target>
        </trans-unit>
        <trans-unit id="f632e7a71bfa08d0745355e2d9459757c66beae4" translate="yes" xml:space="preserve">
          <source>Django can be easily integrated with &lt;a href=&quot;https://coverage.readthedocs.io/&quot;&gt;coverage.py&lt;/a&gt;, a tool for measuring code coverage of Python programs. First, &lt;a href=&quot;https://pypi.org/project/coverage/&quot;&gt;install coverage.py&lt;/a&gt;. Next, run the following from your project folder containing &lt;code&gt;manage.py&lt;/code&gt;:</source>
          <target state="translated">Django는 Python 프로그램의 코드 적용 범위를 측정하는 도구 인 &lt;a href=&quot;https://coverage.readthedocs.io/&quot;&gt;coverage.py&lt;/a&gt; 와 쉽게 통합 될 수 있습니다. 먼저 &lt;a href=&quot;https://pypi.org/project/coverage/&quot;&gt;coverage.py를 설치하십시오&lt;/a&gt; . 다음으로 &lt;code&gt;manage.py&lt;/code&gt; 를 포함하는 프로젝트 폴더에서 다음을 실행하십시오 .</target>
        </trans-unit>
        <trans-unit id="c3965b5de252b5ebbbf7c4a4a55f225e160d66b8" translate="yes" xml:space="preserve">
          <source>Django can be installed easily using &lt;code&gt;pip&lt;/code&gt; within your virtual environment.</source>
          <target state="translated">Django는 가상 환경 내에서 &lt;code&gt;pip&lt;/code&gt; 를 사용하여 쉽게 설치할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a6cd20e2a96a0ec74c81f8bb5e71198e65df22ac" translate="yes" xml:space="preserve">
          <source>Django can create migrations for you. Make changes to your models - say, add a field and remove a model - and then run &lt;a href=&quot;../ref/django-admin#django-admin-makemigrations&quot;&gt;&lt;code&gt;makemigrations&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">Django는 마이그레이션을 생성 할 수 있습니다. 필드를 추가하고 모델을 제거하는 등 모델을 변경 한 다음 &lt;a href=&quot;../ref/django-admin#django-admin-makemigrations&quot;&gt; &lt;code&gt;makemigrations&lt;/code&gt; &lt;/a&gt; 를 실행 하십시오 .</target>
        </trans-unit>
        <trans-unit id="ae649090d91e254a10d688aff359a72f4e143261" translate="yes" xml:space="preserve">
          <source>Django can reload that data for you on a per-testcase basis by setting the &lt;code&gt;serialized_rollback&lt;/code&gt; option to &lt;code&gt;True&lt;/code&gt; in the body of the &lt;code&gt;TestCase&lt;/code&gt; or &lt;code&gt;TransactionTestCase&lt;/code&gt;, but note that this will slow down that test suite by approximately 3x.</source>
          <target state="translated">Django는 &lt;code&gt;TestCase&lt;/code&gt; 또는 &lt;code&gt;TransactionTestCase&lt;/code&gt; 본문에서 &lt;code&gt;serialized_rollback&lt;/code&gt; 옵션을 &lt;code&gt;True&lt;/code&gt; 로 설정하여 테스트별로 데이터를 다시로드 할 수 있지만 테스트 스위트 속도가 약 3 배 느려집니다.</target>
        </trans-unit>
        <trans-unit id="45c5ddf704c494fa6c6c3ae57be3f66c079a33b2" translate="yes" xml:space="preserve">
          <source>Django can serialize the following:</source>
          <target state="translated">Django는 다음을 직렬화 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="42097d241271bde355b7bc0c1e08abce30493e32" translate="yes" xml:space="preserve">
          <source>Django can store its cached data in your database. This works best if you&amp;rsquo;ve got a fast, well-indexed database server.</source>
          <target state="translated">Django는 캐시 된 데이터를 데이터베이스에 저장할 수 있습니다. 이 방법은 인덱스가 빠른 데이터베이스 서버가있는 경우 가장 효과적입니다.</target>
        </trans-unit>
        <trans-unit id="d2ad61f6fdfa69cb20044d37dffb1e1ca10ea97b" translate="yes" xml:space="preserve">
          <source>Django can&amp;rsquo;t automatically generate data migrations for you, as it does with schema migrations, but it&amp;rsquo;s not very hard to write them. Migration files in Django are made up of &lt;a href=&quot;../ref/migration-operations&quot;&gt;Operations&lt;/a&gt;, and the main operation you use for data migrations is &lt;a href=&quot;../ref/migration-operations#django.db.migrations.operations.RunPython&quot;&gt;&lt;code&gt;RunPython&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Django는 스키마 마이그레이션과 마찬가지로 자동으로 데이터 마이그레이션을 생성 할 수 없지만 작성하기는 어렵지 않습니다. Django의 마이그레이션 파일은 &lt;a href=&quot;../ref/migration-operations&quot;&gt;Operations&lt;/a&gt; 로 구성 되며 데이터 마이그레이션에 사용하는 기본 작업은 &lt;a href=&quot;../ref/migration-operations#django.db.migrations.operations.RunPython&quot;&gt; &lt;code&gt;RunPython&lt;/code&gt; &lt;/a&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="4a80c1f49f49f5599aad0e0ec38ad04a15dab37e" translate="yes" xml:space="preserve">
          <source>Django cannot reliably use alternate time zones in a Windows environment. If you&amp;rsquo;re running Django on Windows, &lt;a href=&quot;#std:setting-TIME_ZONE&quot;&gt;&lt;code&gt;TIME_ZONE&lt;/code&gt;&lt;/a&gt; must be set to match the system time zone.</source>
          <target state="translated">Django는 Windows 환경에서 대체 시간대를 안정적으로 사용할 수 없습니다. Windows에서 Django를 실행하는 경우 시스템 시간대와 일치하도록 &lt;a href=&quot;#std:setting-TIME_ZONE&quot;&gt; &lt;code&gt;TIME_ZONE&lt;/code&gt; &lt;/a&gt; 을 설정해야합니다.</target>
        </trans-unit>
        <trans-unit id="51ad2426b39319e79dabd5a553a54543c18c5ffa" translate="yes" xml:space="preserve">
          <source>Django cannot serialize:</source>
          <target state="translated">장고는 직렬화 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="73028ccda69e25258c2c460d93321b9c199a4f1c" translate="yes" xml:space="preserve">
          <source>Django chooses the algorithm to use by consulting the &lt;a href=&quot;../../ref/settings#std:setting-PASSWORD_HASHERS&quot;&gt;&lt;code&gt;PASSWORD_HASHERS&lt;/code&gt;&lt;/a&gt; setting. This is a list of hashing algorithm classes that this Django installation supports. The first entry in this list (that is, &lt;code&gt;settings.PASSWORD_HASHERS[0]&lt;/code&gt;) will be used to store passwords, and all the other entries are valid hashers that can be used to check existing passwords. This means that if you want to use a different algorithm, you&amp;rsquo;ll need to modify &lt;a href=&quot;../../ref/settings#std:setting-PASSWORD_HASHERS&quot;&gt;&lt;code&gt;PASSWORD_HASHERS&lt;/code&gt;&lt;/a&gt; to list your preferred algorithm first in the list.</source>
          <target state="translated">Django는 &lt;a href=&quot;../../ref/settings#std:setting-PASSWORD_HASHERS&quot;&gt; &lt;code&gt;PASSWORD_HASHERS&lt;/code&gt; &lt;/a&gt; 설정 을 참조하여 사용할 알고리즘을 선택합니다 . 이 장고 설치가 지원하는 해싱 알고리즘 클래스 목록입니다. 이 목록의 첫 번째 항목 (즉, &lt;code&gt;settings.PASSWORD_HASHERS[0]&lt;/code&gt; )은 비밀번호를 저장하는 데 사용되며 다른 모든 항목은 기존 비밀번호를 확인하는 데 사용할 수있는 유효한 해셔입니다. 즉, 다른 알고리즘을 사용 하려면 목록에서 선호하는 알고리즘을 먼저 나열 하도록 &lt;a href=&quot;../../ref/settings#std:setting-PASSWORD_HASHERS&quot;&gt; &lt;code&gt;PASSWORD_HASHERS&lt;/code&gt; &lt;/a&gt; 를 수정해야 합니다.</target>
        </trans-unit>
        <trans-unit id="8ad7781d4ca23a424af90efb320cced9fae26622" translate="yes" xml:space="preserve">
          <source>Django comes with a built-in permissions system. It provides a way to assign permissions to specific users and groups of users.</source>
          <target state="translated">장고에는 권한 시스템이 내장되어 있습니다. 특정 사용자 및 사용자 그룹에 권한을 할당하는 방법을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="a90644c8048b4946a6d71d9e226fbdc4fc33509b" translate="yes" xml:space="preserve">
          <source>Django comes with a couple of other template-tag libraries that you have to enable explicitly in your &lt;a href=&quot;../settings#std:setting-INSTALLED_APPS&quot;&gt;&lt;code&gt;INSTALLED_APPS&lt;/code&gt;&lt;/a&gt; setting and enable in your template with the &lt;a href=&quot;#std:templatetag-load&quot;&gt;&lt;code&gt;{% load %}&lt;/code&gt;&lt;/a&gt; tag.</source>
          <target state="translated">Django는 &lt;a href=&quot;../settings#std:setting-INSTALLED_APPS&quot;&gt; &lt;code&gt;INSTALLED_APPS&lt;/code&gt; &lt;/a&gt; 설정 에서 명시 적으로 활성화하고 &lt;a href=&quot;#std:templatetag-load&quot;&gt; &lt;code&gt;{% load %}&lt;/code&gt; &lt;/a&gt; 태그로 템플릿에서 활성화해야하는 다른 템플릿 태그 라이브러리 와 함께 제공 됩니다.</target>
        </trans-unit>
        <trans-unit id="9d77e11dd067dbda732d72efc27028ee19f420d1" translate="yes" xml:space="preserve">
          <source>Django comes with a few helpful pieces of &lt;a href=&quot;../ref/middleware&quot;&gt;middleware&lt;/a&gt; that can help optimize your site&amp;rsquo;s performance. They include:</source>
          <target state="translated">Django에는 사이트 성능을 최적화하는 데 도움이되는 몇 가지 유용한 &lt;a href=&quot;../ref/middleware&quot;&gt;미들웨어&lt;/a&gt; 가 제공됩니다. 그들은 다음을 포함합니다 :</target>
        </trans-unit>
        <trans-unit id="74c1033ebd98b559d412d8e12472b11aea38bf55" translate="yes" xml:space="preserve">
          <source>Django comes with a few views by default for handling HTTP errors. To override these with your own custom views, see &lt;a href=&quot;../topics/http/views#customizing-error-views&quot;&gt;Customizing error views&lt;/a&gt;.</source>
          <target state="translated">Django는 HTTP 오류를 처리하기 위해 기본적으로 몇 가지보기를 제공합니다. 고유 한 사용자 정의보기로이를 재정의하려면 &lt;a href=&quot;../topics/http/views#customizing-error-views&quot;&gt;오류보기 사용자 정의를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="f66d50c3962d63a73eafeece108e9100e593969f" translate="yes" xml:space="preserve">
          <source>Django comes with a high-level sitemap-generating framework to create &lt;a href=&quot;https://www.sitemaps.org/&quot;&gt;sitemap&lt;/a&gt; XML files.</source>
          <target state="translated">Django는 &lt;a href=&quot;https://www.sitemaps.org/&quot;&gt;사이트 맵&lt;/a&gt; XML 파일 을 생성하기위한 고급 사이트 맵 생성 프레임 워크를 제공 합니다.</target>
        </trans-unit>
        <trans-unit id="67d5f3ac1f072fbf32e326b431e92919fcc1cfb5" translate="yes" xml:space="preserve">
          <source>Django comes with a high-level syndication-feed-generating framework for creating &lt;a href=&quot;http://www.whatisrss.com/&quot;&gt;RSS&lt;/a&gt; and &lt;a href=&quot;https://tools.ietf.org/html/rfc4287&quot;&gt;Atom&lt;/a&gt; feeds.</source>
          <target state="translated">Django는 &lt;a href=&quot;http://www.whatisrss.com/&quot;&gt;RSS&lt;/a&gt; 및 &lt;a href=&quot;https://tools.ietf.org/html/rfc4287&quot;&gt;Atom&lt;/a&gt; 피드 를 작성하기위한 고급 신디케이션 피드 생성 프레임 워크를 제공 합니다.</target>
        </trans-unit>
        <trans-unit id="5928db3d1e10983bf16e9a3605ed6c0c05174344" translate="yes" xml:space="preserve">
          <source>Django comes with a robust cache system that lets you save dynamic pages so they don&amp;rsquo;t have to be calculated for each request. For convenience, Django offers different levels of cache granularity: You can cache the output of specific views, you can cache only the pieces that are difficult to produce, or you can cache your entire site.</source>
          <target state="translated">Django에는 강력한 캐시 시스템이 제공되어 동적 페이지를 저장할 수 있으므로 각 요청에 대해 계산할 필요가 없습니다. 편의상 Django는 다양한 수준의 캐시 세분성을 제공합니다. 특정 뷰의 출력을 캐시하거나 생성하기 어려운 부분 만 캐시하거나 전체 사이트를 캐시 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9bc381567a734ad1e6659bc73e3680e556ef7d5b" translate="yes" xml:space="preserve">
          <source>Django comes with a special &lt;code&gt;Context&lt;/code&gt; class, &lt;code&gt;django.template.RequestContext&lt;/code&gt;, that acts slightly differently from the normal &lt;code&gt;django.template.Context&lt;/code&gt;. The first difference is that it takes an &lt;a href=&quot;../request-response#django.http.HttpRequest&quot;&gt;&lt;code&gt;HttpRequest&lt;/code&gt;&lt;/a&gt; as its first argument. For example:</source>
          <target state="translated">장고에는 일반적인 &lt;code&gt;django.template.Context&lt;/code&gt; 와 약간 다르게 작동 하는 특수한 &lt;code&gt;Context&lt;/code&gt; 클래스 인 &lt;code&gt;django.template.RequestContext&lt;/code&gt; 가 있습니다 . 첫 번째 차이점은 &lt;a href=&quot;../request-response#django.http.HttpRequest&quot;&gt; &lt;code&gt;HttpRequest&lt;/code&gt; &lt;/a&gt; 를 첫 번째 인수로 사용 한다는 것 입니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="493a9b4e99187f7a6a6e8b61cfb3b8da50b7a295" translate="yes" xml:space="preserve">
          <source>Django comes with a tool, &lt;a href=&quot;../../ref/django-admin#django-admin-makemessages&quot;&gt;&lt;code&gt;django-admin makemessages&lt;/code&gt;&lt;/a&gt;, that automates the creation and upkeep of these files.</source>
          <target state="translated">Django에는 &lt;a href=&quot;../../ref/django-admin#django-admin-makemessages&quot;&gt; &lt;code&gt;django-admin makemessages&lt;/code&gt; &lt;/a&gt; 도구가 제공되어 이러한 파일의 작성 및 유지를 자동화합니다.</target>
        </trans-unit>
        <trans-unit id="a5fb1b5fba25c1abdad90391d056fc4a6489f598" translate="yes" xml:space="preserve">
          <source>Django comes with a user authentication system. It handles user accounts, groups, permissions and cookie-based user sessions. This section of the documentation explains how the default implementation works out of the box, as well as how to &lt;a href=&quot;customizing&quot;&gt;extend and customize&lt;/a&gt; it to suit your project&amp;rsquo;s needs.</source>
          <target state="translated">Django는 사용자 인증 시스템과 함께 제공됩니다. 사용자 계정, 그룹, 권한 및 쿠키 기반 사용자 세션을 처리합니다. 이 문서 섹션에서는 기본 구현이 기본적으로 작동하는 방식 &lt;a href=&quot;customizing&quot;&gt;과&lt;/a&gt; 프로젝트 요구에 맞게 확장 및 사용자 정의 하는 방법에 대해 설명 합니다.</target>
        </trans-unit>
        <trans-unit id="f83038f0f54459949ab2f649098846b5f76a6439" translate="yes" xml:space="preserve">
          <source>Django comes with a utility called &lt;a href=&quot;../ref/django-admin#django-admin-inspectdb&quot;&gt;&lt;code&gt;inspectdb&lt;/code&gt;&lt;/a&gt; that can create models by introspecting an existing database. You can view the output by running this command:</source>
          <target state="translated">Django에는 기존 데이터베이스를 검사하여 모델을 생성 할 수있는 &lt;a href=&quot;../ref/django-admin#django-admin-inspectdb&quot;&gt; &lt;code&gt;inspectdb&lt;/code&gt; &lt;/a&gt; 라는 유틸리티가 제공 됩니다. 다음 명령을 실행하여 출력을 볼 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2a2bdce4f66aae9e6cc84cd4c2435f7f0511163c" translate="yes" xml:space="preserve">
          <source>Django comes with an optional &amp;ldquo;flatpages&amp;rdquo; application. It lets you store &amp;ldquo;flat&amp;rdquo; HTML content in a database and handles the management for you via Django&amp;rsquo;s admin interface and a Python API.</source>
          <target state="translated">Django에는 옵션 &quot;flatpages&quot;응용 프로그램이 제공됩니다. 데이터베이스에 &quot;플랫&quot;HTML 컨텐츠를 저장하고 Django의 관리 인터페이스와 Python API를 통해 관리를 처리 할 수 ​​있습니다.</target>
        </trans-unit>
        <trans-unit id="5261e1bf442fdbf21815e460877c384359b2dda2" translate="yes" xml:space="preserve">
          <source>Django comes with an optional &amp;ldquo;sites&amp;rdquo; framework. It&amp;rsquo;s a hook for associating objects and functionality to particular websites, and it&amp;rsquo;s a holding place for the domain names and &amp;ldquo;verbose&amp;rdquo; names of your Django-powered sites.</source>
          <target state="translated">Django에는 선택적 &quot;사이트&quot;프레임 워크가 제공됩니다. 객체와 기능을 특정 웹 사이트에 연결하는 데 도움이되며 Django 기반 사이트의 도메인 이름과 &quot;자세한&quot;이름을 보관할 수있는 장소입니다.</target>
        </trans-unit>
        <trans-unit id="452c9f64df2dff5b11a88c4285cbee44fe448030" translate="yes" xml:space="preserve">
          <source>Django comes with an optional redirects application. It lets you store redirects in a database and handles the redirecting for you. It uses the HTTP response status code &lt;code&gt;301 Moved Permanently&lt;/code&gt; by default.</source>
          <target state="translated">Django는 선택적 리디렉션 응용 프로그램과 함께 제공됩니다. 데이터베이스에 리디렉션을 저장하고 리디렉션을 처리 할 수 ​​있습니다. 기본적으로 HTTP 응답 상태 코드 &lt;code&gt;301 Moved Permanently&lt;/code&gt; 를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="086ac840e004ae96851c5a7718f4b23a7c618b36" translate="yes" xml:space="preserve">
          <source>Django comes with built-in database backends. You may subclass an existing database backends to modify its behavior, features, or configuration.</source>
          <target state="translated">Django는 내장 데이터베이스 백엔드와 함께 제공됩니다. 동작, 기능 또는 구성을 수정하기 위해 기존 데이터베이스 백엔드를 서브 클래 싱 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ab0c88975cb3d91b38378d897728f7ecda3c3070" translate="yes" xml:space="preserve">
          <source>Django contains &lt;a href=&quot;../ref/clickjacking#clickjacking-prevention&quot;&gt;clickjacking protection&lt;/a&gt; in the form of the &lt;a href=&quot;../ref/middleware#django.middleware.clickjacking.XFrameOptionsMiddleware&quot;&gt;&lt;code&gt;X-Frame-Options middleware&lt;/code&gt;&lt;/a&gt; which in a supporting browser can prevent a site from being rendered inside a frame. It is possible to disable the protection on a per view basis or to configure the exact header value sent.</source>
          <target state="translated">Django 는 &lt;a href=&quot;../ref/middleware#django.middleware.clickjacking.XFrameOptionsMiddleware&quot;&gt; &lt;code&gt;X-Frame-Options middleware&lt;/code&gt; &lt;/a&gt; 형태의 &lt;a href=&quot;../ref/clickjacking#clickjacking-prevention&quot;&gt;클릭 재킹 방지 기능&lt;/a&gt; 을 지원 브라우저에서 사이트가 프레임 내부에 렌더링되는 것을 방지 할 수 있습니다. 보기별로 보호 기능을 비활성화하거나 전송 된 정확한 헤더 값을 구성 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4475ed751f9607a4d6cd3cb9cc785a8ce1d9c822" translate="yes" xml:space="preserve">
          <source>Django contains a registry of installed applications that stores configuration and provides introspection. It also maintains a list of available &lt;a href=&quot;../topics/db/models&quot;&gt;models&lt;/a&gt;.</source>
          <target state="translated">Django에는 구성을 저장하고 내부 검사를 제공하는 설치된 응용 프로그램의 레지스트리가 있습니다. 또한 사용 가능한 &lt;a href=&quot;../topics/db/models&quot;&gt;모델&lt;/a&gt; 목록을 유지 관리합니다 .</target>
        </trans-unit>
        <trans-unit id="8a71ea56a1eaaa27874964bb6b3cc4b962071075" translate="yes" xml:space="preserve">
          <source>Django core exception classes are defined in &lt;code&gt;django.core.exceptions&lt;/code&gt;.</source>
          <target state="translated">Django 핵심 예외 클래스는 &lt;code&gt;django.core.exceptions&lt;/code&gt; 에 정의되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="c3276d1c234e3373c909b1f4cc01e109298b8cb8" translate="yes" xml:space="preserve">
          <source>Django currently supports two interfaces: WSGI and ASGI.</source>
          <target state="translated">Django는 현재 WSGI와 ASGI의 두 가지 인터페이스를 지원합니다.</target>
        </trans-unit>
        <trans-unit id="9a7755d406dc1c330fb0aa5fa38c155f355df3ce" translate="yes" xml:space="preserve">
          <source>Django defines a standard API for loading and rendering templates regardless of the backend. Loading consists of finding the template for a given identifier and preprocessing it, usually compiling it to an in-memory representation. Rendering means interpolating the template with context data and returning the resulting string.</source>
          <target state="translated">Django는 백엔드에 관계없이 템플릿을로드하고 렌더링하기위한 표준 API를 정의합니다. 로드는 주어진 식별자에 대한 템플릿을 찾아 전처리하는 것으로 구성되며, 일반적으로 메모리 내 표현으로 컴파일합니다. 렌더링은 컨텍스트 데이터로 템플릿을 보간하고 결과 문자열을 반환하는 것을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="1f07d6cbbb8ffb7d64068907bac22ab996f3c9dc" translate="yes" xml:space="preserve">
          <source>Django determines the order in which migrations should be applied not by the filename of each migration, but by building a graph using two properties on the &lt;code&gt;Migration&lt;/code&gt; class: &lt;code&gt;dependencies&lt;/code&gt; and &lt;code&gt;run_before&lt;/code&gt;.</source>
          <target state="translated">Django는 각 마이그레이션의 파일 이름이 아닌 &lt;code&gt;Migration&lt;/code&gt; 클래스의 두 속성 ( &lt;code&gt;dependencies&lt;/code&gt; 및 &lt;code&gt;run_before&lt;/code&gt; )을 사용하여 그래프를 작성하여 마이그레이션을 적용 할 순서를 결정합니다 .</target>
        </trans-unit>
        <trans-unit id="47b2934181710d7a73695848135a5a151e3fb8c2" translate="yes" xml:space="preserve">
          <source>Django determines the root URLconf module to use. Ordinarily, this is the value of the &lt;a href=&quot;../../ref/settings#std:setting-ROOT_URLCONF&quot;&gt;&lt;code&gt;ROOT_URLCONF&lt;/code&gt;&lt;/a&gt; setting, but if the incoming &lt;code&gt;HttpRequest&lt;/code&gt; object has a &lt;a href=&quot;../../ref/request-response#django.http.HttpRequest.urlconf&quot;&gt;&lt;code&gt;urlconf&lt;/code&gt;&lt;/a&gt; attribute (set by middleware), its value will be used in place of the &lt;a href=&quot;../../ref/settings#std:setting-ROOT_URLCONF&quot;&gt;&lt;code&gt;ROOT_URLCONF&lt;/code&gt;&lt;/a&gt; setting.</source>
          <target state="translated">Django는 사용할 루트 URLconf 모듈을 결정합니다. 일반적으로 이는 &lt;a href=&quot;../../ref/settings#std:setting-ROOT_URLCONF&quot;&gt; &lt;code&gt;ROOT_URLCONF&lt;/code&gt; &lt;/a&gt; 설정 의 값 이지만 수신되는 &lt;code&gt;HttpRequest&lt;/code&gt; 객체에 &lt;a href=&quot;../../ref/request-response#django.http.HttpRequest.urlconf&quot;&gt; &lt;code&gt;urlconf&lt;/code&gt; &lt;/a&gt; 속성 (미들웨어로 설정)이 있으면 &lt;a href=&quot;../../ref/settings#std:setting-ROOT_URLCONF&quot;&gt; &lt;code&gt;ROOT_URLCONF&lt;/code&gt; &lt;/a&gt; 설정 대신 해당 값이 사용됩니다 .</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
