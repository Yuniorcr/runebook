<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="gcc">
    <body>
      <group id="gcc">
        <trans-unit id="762ba94f28f2b06fc4746f2460fae5f4c6d31f88" translate="yes" xml:space="preserve">
          <source>6.18 Arrays of Length Zero</source>
          <target state="translated">6.18 길이가 0 인 배열</target>
        </trans-unit>
        <trans-unit id="d6718b5a32a39136586420c18e091137f7c85f46" translate="yes" xml:space="preserve">
          <source>6.18. Arrays of Length Zero</source>
          <target state="translated">6.18. 길이가 0 인 배열</target>
        </trans-unit>
        <trans-unit id="40c3162c45a4aab2d33ad528837d5f3c8bec4efb" translate="yes" xml:space="preserve">
          <source>6.19 Structures with No Members</source>
          <target state="translated">6.19 멤버가없는 구조</target>
        </trans-unit>
        <trans-unit id="a0f01529f8bdb03075a172a27982152a0e2aec28" translate="yes" xml:space="preserve">
          <source>6.19. Structures with No Members</source>
          <target state="translated">6.19. 멤버가없는 구조</target>
        </trans-unit>
        <trans-unit id="f49fe54e4450294edb2e434461ba5e129a9d0c36" translate="yes" xml:space="preserve">
          <source>6.2 Locally Declared Labels</source>
          <target state="translated">6.2 현지 선언 된 라벨</target>
        </trans-unit>
        <trans-unit id="5c97c92557210ca304da4bbb29762a547ef44132" translate="yes" xml:space="preserve">
          <source>6.2. Locally Declared Labels</source>
          <target state="translated">6.2. 현지 선언 된 라벨</target>
        </trans-unit>
        <trans-unit id="9aa0fded52f088afe9fb5f939da58245bea895c9" translate="yes" xml:space="preserve">
          <source>6.2.4 Storage durations of objects</source>
          <target state="translated">6.2.4 객체의 저장 기간</target>
        </trans-unit>
        <trans-unit id="acb55ce4831c5a534c6e0701985471d41b9681f8" translate="yes" xml:space="preserve">
          <source>6.20 Arrays of Variable Length</source>
          <target state="translated">가변 길이의 배열</target>
        </trans-unit>
        <trans-unit id="689e896d9b453b115a45a598102e484b44a12d28" translate="yes" xml:space="preserve">
          <source>6.20. Arrays of Variable Length</source>
          <target state="translated">6.20. 가변 길이의 배열</target>
        </trans-unit>
        <trans-unit id="c982e13bdc7691361c213f687122c35a4e1632ed" translate="yes" xml:space="preserve">
          <source>6.21 Macros with a Variable Number of Arguments.</source>
          <target state="translated">6.21 가변 개수의 인수를 가진 매크로.</target>
        </trans-unit>
        <trans-unit id="a959bbba70636e507e2e089f5ca27366608e64ea" translate="yes" xml:space="preserve">
          <source>6.21. Macros with a Variable Number of Arguments.</source>
          <target state="translated">6.21. 가변 개수의 인수가있는 매크로</target>
        </trans-unit>
        <trans-unit id="0444eb603f796d774052e829a08e90bec9e99b6f" translate="yes" xml:space="preserve">
          <source>6.22 Slightly Looser Rules for Escaped Newlines</source>
          <target state="translated">6.22 이스케이프 된 줄 바꿈에 대한 약간 느슨한 규칙</target>
        </trans-unit>
        <trans-unit id="ef66883aa3c1a1a4a581d9d714c51c7e8ea8f989" translate="yes" xml:space="preserve">
          <source>6.22. Slightly Looser Rules for Escaped Newlines</source>
          <target state="translated">6.22. 이스케이프 된 줄 바꿈에 대한 약간 느슨한 규칙</target>
        </trans-unit>
        <trans-unit id="ac6b6bff47dffc868f155457a21e15a1de5a443b" translate="yes" xml:space="preserve">
          <source>6.23 Non-Lvalue Arrays May Have Subscripts</source>
          <target state="translated">6.23 L 값이 아닌 배열에 첨자가있을 수 있음</target>
        </trans-unit>
        <trans-unit id="9d63180164d853a824dc71e947f69e134713ea5a" translate="yes" xml:space="preserve">
          <source>6.23. Non-Lvalue Arrays May Have Subscripts</source>
          <target state="translated">6.23. L 값이 아닌 배열에는 첨자가있을 수 있음</target>
        </trans-unit>
        <trans-unit id="9869a6fc8aab07bb4e39b6af31e3c5e6357a6027" translate="yes" xml:space="preserve">
          <source>6.24 Arithmetic on &lt;code&gt;void&lt;/code&gt;- and Function-Pointers</source>
          <target state="translated">에 6.24 산술 &lt;code&gt;void&lt;/code&gt; 와 함수 - 포인터 -</target>
        </trans-unit>
        <trans-unit id="1ec9908167cadb81e9b2abff8bb6563f588ae478" translate="yes" xml:space="preserve">
          <source>6.24 Arithmetic on void- and Function-Pointers</source>
          <target state="translated">6.24 보이드 및 함수 포인터에 대한 산술</target>
        </trans-unit>
        <trans-unit id="cfa35b4e7b79088f3d8199d20164223597b7ad9f" translate="yes" xml:space="preserve">
          <source>6.24. Arithmetic on void- and Function-Pointers</source>
          <target state="translated">6.24. 보이드 및 함수 포인터에 대한 산술</target>
        </trans-unit>
        <trans-unit id="ce16f5b43930c95d4820ff2332cbeed0abe46eca" translate="yes" xml:space="preserve">
          <source>6.25 Pointer Arguments in Variadic Functions</source>
          <target state="translated">6.25 가변 함수의 포인터 인수</target>
        </trans-unit>
        <trans-unit id="d3ceb67f7dd50b84961a4f64b9e2a37615fd0381" translate="yes" xml:space="preserve">
          <source>6.25. Pointer Arguments in Variadic Functions</source>
          <target state="translated">6.25. 가변 함수의 포인터 인수</target>
        </trans-unit>
        <trans-unit id="82d68dd3cad512cc6ae0e8582d7e0f045f29d8e2" translate="yes" xml:space="preserve">
          <source>6.26 Pointers to Arrays with Qualifiers Work as Expected</source>
          <target state="translated">6.26 한정자가있는 배열의 포인터가 예상대로 작동</target>
        </trans-unit>
        <trans-unit id="df42c6fb84e426dbdf96b2a527d8e9a27ee5ba4d" translate="yes" xml:space="preserve">
          <source>6.26. Pointers to Arrays with Qualifiers Work as Expected</source>
          <target state="translated">6.26. 한정자가있는 배열에 대한 포인터가 예상대로 작동</target>
        </trans-unit>
        <trans-unit id="718c0a179faf5c990172400c58601702eaaa6535" translate="yes" xml:space="preserve">
          <source>6.27 Non-Constant Initializers</source>
          <target state="translated">6.27 비정 수 이니셜 라이저</target>
        </trans-unit>
        <trans-unit id="4ec7ac6fd29446b472630d92a906ec46d9086988" translate="yes" xml:space="preserve">
          <source>6.27. Non-Constant Initializers</source>
          <target state="translated">6.27. 불변의 이니셜 라이저</target>
        </trans-unit>
        <trans-unit id="2ed0304a0eff890521f1ee6840fde4b28ae8c513" translate="yes" xml:space="preserve">
          <source>6.28 Compound Literals</source>
          <target state="translated">6.28 복합 리터럴</target>
        </trans-unit>
        <trans-unit id="d952b8c2bb1ead1d697e3b252f60719dfedc2474" translate="yes" xml:space="preserve">
          <source>6.28. Compound Literals</source>
          <target state="translated">6.28. 복합 리터럴</target>
        </trans-unit>
        <trans-unit id="2f170d897fc4ba8c84905c0a8d39e4955484e425" translate="yes" xml:space="preserve">
          <source>6.29 Designated Initializers</source>
          <target state="translated">6.29 지정된 이니셜 라이저</target>
        </trans-unit>
        <trans-unit id="a85988e5509b98fe630709828e79d449c3d7bc1f" translate="yes" xml:space="preserve">
          <source>6.29. Designated Initializers</source>
          <target state="translated">6.29. 지정된 이니셜 라이저</target>
        </trans-unit>
        <trans-unit id="63007b5a2fde7bddc06961c1eed95013f513bbbe" translate="yes" xml:space="preserve">
          <source>6.3 Labels as Values</source>
          <target state="translated">6.3 값으로서의 라벨</target>
        </trans-unit>
        <trans-unit id="af750973eb8686ec6c4301de734b5e7ed70c88ba" translate="yes" xml:space="preserve">
          <source>6.3. Labels as Values</source>
          <target state="translated">6.3. 값으로 레이블</target>
        </trans-unit>
        <trans-unit id="2fc0d7a1fdac376dccf4f66a325dbd7ef204e705" translate="yes" xml:space="preserve">
          <source>6.30 Case Ranges</source>
          <target state="translated">6.30 케이스 범위</target>
        </trans-unit>
        <trans-unit id="2e5b5a4555e6ef252ef4bd7eac23d0b13486bd5d" translate="yes" xml:space="preserve">
          <source>6.30. Case Ranges</source>
          <target state="translated">6.30. 사례 범위</target>
        </trans-unit>
        <trans-unit id="33c1f99be74eb4edae3c9d431c274916b564747a" translate="yes" xml:space="preserve">
          <source>6.31 Cast to a Union Type</source>
          <target state="translated">6.31 유니온 유형으로 캐스트</target>
        </trans-unit>
        <trans-unit id="3b1092a9a9ca7e958a4bc55b84dc3e7900c97837" translate="yes" xml:space="preserve">
          <source>6.31. Cast to a Union Type</source>
          <target state="translated">6.31. 유니온 유형으로 캐스트</target>
        </trans-unit>
        <trans-unit id="f9efe7d862bda9885610a3eb59dad6deb29affba" translate="yes" xml:space="preserve">
          <source>6.32 Mixed Declarations and Code</source>
          <target state="translated">6.32 혼합 선언 및 코드</target>
        </trans-unit>
        <trans-unit id="ee08b6bd3994945794092196f9f5b08b734260a9" translate="yes" xml:space="preserve">
          <source>6.32. Mixed Declarations and Code</source>
          <target state="translated">6.32. 혼합 선언 및 코드</target>
        </trans-unit>
        <trans-unit id="fbd527f1575376af6bb574942a1f7e8a58467748" translate="yes" xml:space="preserve">
          <source>6.33 Declaring Attributes of Functions</source>
          <target state="translated">6.33 함수의 속성 선언</target>
        </trans-unit>
        <trans-unit id="98e2351d7c8262b6f1a30b39479bd9defe43566c" translate="yes" xml:space="preserve">
          <source>6.33. Declaring Attributes of Functions</source>
          <target state="translated">6.33. 함수의 속성 선언</target>
        </trans-unit>
        <trans-unit id="3959072744e45f9fbedd7a3fc16c5a676195c6fb" translate="yes" xml:space="preserve">
          <source>6.33.1 Common Function Attributes</source>
          <target state="translated">6.33.1 공통 기능 속성</target>
        </trans-unit>
        <trans-unit id="c2abaeacfc7adf8b55fa1c327c654a18c8c4e59b" translate="yes" xml:space="preserve">
          <source>6.33.1. Common Function Attributes</source>
          <target state="translated">6.33.1. 공통 기능 속성</target>
        </trans-unit>
        <trans-unit id="33956bb36f4d0d094e84b406d5fbce3668c967fb" translate="yes" xml:space="preserve">
          <source>6.33.10 Epiphany Function Attributes</source>
          <target state="translated">6.33.10 주현절 함수 속성</target>
        </trans-unit>
        <trans-unit id="797ed07a6c53d8570997e19cb7db1d4ce3ea7201" translate="yes" xml:space="preserve">
          <source>6.33.10. Epiphany Function Attributes</source>
          <target state="translated">6.33.10. 주현절 함수 속성</target>
        </trans-unit>
        <trans-unit id="4c1f071bd90ed926a58dccdab0200674a893d6d4" translate="yes" xml:space="preserve">
          <source>6.33.11 H8/300 Function Attributes</source>
          <target state="translated">6.33.11 H8 / 300 기능 속성</target>
        </trans-unit>
        <trans-unit id="81d3c2f3ab24d7f895bae5afd79cf24239d72158" translate="yes" xml:space="preserve">
          <source>6.33.11. H8/300 Function Attributes</source>
          <target state="translated">6.33.11. H8 / 300 기능 속성</target>
        </trans-unit>
        <trans-unit id="d73b5dbfe9d4d6c831d96315ad76769874f966e7" translate="yes" xml:space="preserve">
          <source>6.33.12 IA-64 Function Attributes</source>
          <target state="translated">6.33.12 IA-64 기능 속성</target>
        </trans-unit>
        <trans-unit id="a158c916512827b6f1521bc308c0125d1bb283f1" translate="yes" xml:space="preserve">
          <source>6.33.12. IA-64 Function Attributes</source>
          <target state="translated">6.33.12. IA-64 기능 속성</target>
        </trans-unit>
        <trans-unit id="419716ce5db13a7775d09b95a15da25124fcd1dd" translate="yes" xml:space="preserve">
          <source>6.33.13 M32C Function Attributes</source>
          <target state="translated">6.33.13 M32C 기능 속성</target>
        </trans-unit>
        <trans-unit id="3b68817c2df7253c63e3398978c80f903b53900a" translate="yes" xml:space="preserve">
          <source>6.33.13. M32C Function Attributes</source>
          <target state="translated">6.33.13. M32C 함수 속성</target>
        </trans-unit>
        <trans-unit id="9f984354966a4a37c62372716c6d03a89f28eccd" translate="yes" xml:space="preserve">
          <source>6.33.14 M32R/D Function Attributes</source>
          <target state="translated">6.33.14 M32R / D 기능 속성</target>
        </trans-unit>
        <trans-unit id="4d8dde474d763e79756b05789d1b4cb65d727e2d" translate="yes" xml:space="preserve">
          <source>6.33.14. M32R/D Function Attributes</source>
          <target state="translated">6.33.14. M32R / D 기능 속성</target>
        </trans-unit>
        <trans-unit id="f617eb87c70c2b32c3eb6c6d77c1be5bc9861723" translate="yes" xml:space="preserve">
          <source>6.33.15 m68k Function Attributes</source>
          <target state="translated">6.33.15 m68k 기능 속성</target>
        </trans-unit>
        <trans-unit id="76a4b2ff5fdefd58a32df65a0732c4e73828e6f0" translate="yes" xml:space="preserve">
          <source>6.33.15. m68k Function Attributes</source>
          <target state="translated">6.33.15. m68k 함수 속성</target>
        </trans-unit>
        <trans-unit id="1d4b37eaf82ee5597783529c94d4503363aecdfc" translate="yes" xml:space="preserve">
          <source>6.33.16 MCORE Function Attributes</source>
          <target state="translated">6.33.16 MCORE 기능 속성</target>
        </trans-unit>
        <trans-unit id="f7632f685d3b302f691211af28fe474de31c1066" translate="yes" xml:space="preserve">
          <source>6.33.16. MCORE Function Attributes</source>
          <target state="translated">6.33.16. MCORE 함수 속성</target>
        </trans-unit>
        <trans-unit id="8e2b197c08b1825fcacec8e0864c84312ea38ebb" translate="yes" xml:space="preserve">
          <source>6.33.17 MeP Function Attributes</source>
          <target state="translated">6.33.17 MeP 기능 속성</target>
        </trans-unit>
        <trans-unit id="f44f528df44d1daaece4e909adf6844e7be74f98" translate="yes" xml:space="preserve">
          <source>6.33.17. MeP Function Attributes</source>
          <target state="translated">6.33.17. MeP 기능 속성</target>
        </trans-unit>
        <trans-unit id="3ba715a2eb85c43c6e1f986fd195457773fc3c63" translate="yes" xml:space="preserve">
          <source>6.33.18 MicroBlaze Function Attributes</source>
          <target state="translated">6.33.18 MicroBlaze 기능 속성</target>
        </trans-unit>
        <trans-unit id="47351cf8583d2e91edf38b0d1797dfed01b8d8f1" translate="yes" xml:space="preserve">
          <source>6.33.18. MicroBlaze Function Attributes</source>
          <target state="translated">6.33.18. MicroBlaze 기능 속성</target>
        </trans-unit>
        <trans-unit id="af1a4e917b654a975312fecc39c460a5a9f1ec2c" translate="yes" xml:space="preserve">
          <source>6.33.19 Microsoft Windows Function Attributes</source>
          <target state="translated">6.33.19 Microsoft Windows 기능 속성</target>
        </trans-unit>
        <trans-unit id="8b500649a9307f76c4bf189fff7647789b32bf0a" translate="yes" xml:space="preserve">
          <source>6.33.19. Microsoft Windows Function Attributes</source>
          <target state="translated">6.33.19. Microsoft Windows 기능 속성</target>
        </trans-unit>
        <trans-unit id="900f97f77b6fbf3c898928ae25ab3c7b9afe84a1" translate="yes" xml:space="preserve">
          <source>6.33.2 AArch64 Function Attributes</source>
          <target state="translated">6.33.2 AArch64 함수 속성</target>
        </trans-unit>
        <trans-unit id="65dea60ce2def78b463c781e768458e396197231" translate="yes" xml:space="preserve">
          <source>6.33.2. AArch64 Function Attributes</source>
          <target state="translated">6.33.2. AArch64 기능 속성</target>
        </trans-unit>
        <trans-unit id="31b53b7b7639a1ca148c30eecbc6e03b267f8850" translate="yes" xml:space="preserve">
          <source>6.33.2.1 Inlining rules</source>
          <target state="translated">6.33.2.1 인라인 규칙</target>
        </trans-unit>
        <trans-unit id="3656913b6cfcf79fc75f9fc31ab37edb6e77689a" translate="yes" xml:space="preserve">
          <source>6.33.20 MIPS Function Attributes</source>
          <target state="translated">6.33.20 MIPS 기능 속성</target>
        </trans-unit>
        <trans-unit id="a54b5a6fe60107e9b56c782c1507aa94027dbb3b" translate="yes" xml:space="preserve">
          <source>6.33.20. MIPS Function Attributes</source>
          <target state="translated">6.33.20. MIPS 기능 속성</target>
        </trans-unit>
        <trans-unit id="13a0b607588e9af601a5fdd7c144cae74e10f718" translate="yes" xml:space="preserve">
          <source>6.33.21 MSP430 Function Attributes</source>
          <target state="translated">6.33.21 MSP430 기능 속성</target>
        </trans-unit>
        <trans-unit id="d13127dad54471db7d445c982cc86ab1273ee0c4" translate="yes" xml:space="preserve">
          <source>6.33.21. MSP430 Function Attributes</source>
          <target state="translated">6.33.21. MSP430 기능 속성</target>
        </trans-unit>
        <trans-unit id="7c7651b7f2baa92027a6c239076b7cb715070a84" translate="yes" xml:space="preserve">
          <source>6.33.22 NDS32 Function Attributes</source>
          <target state="translated">6.33.22 NDS32 기능 속성</target>
        </trans-unit>
        <trans-unit id="f01df49530b8a8d28536297978dd505cdd354942" translate="yes" xml:space="preserve">
          <source>6.33.22. NDS32 Function Attributes</source>
          <target state="translated">6.33.22. NDS32 기능 속성</target>
        </trans-unit>
        <trans-unit id="99c03ab5429d7d7b6d57b680e8fa51da17791f3f" translate="yes" xml:space="preserve">
          <source>6.33.23 Nios II Function Attributes</source>
          <target state="translated">6.33.23 Nios II 기능 속성</target>
        </trans-unit>
        <trans-unit id="4a3fbba544676bdeb8cc3f1086c00506163578af" translate="yes" xml:space="preserve">
          <source>6.33.23. Nios II Function Attributes</source>
          <target state="translated">6.33.23. Nios II 기능 속성</target>
        </trans-unit>
        <trans-unit id="5f071d941c8d890f11224801ff401e128b8f2ebb" translate="yes" xml:space="preserve">
          <source>6.33.24 Nvidia PTX Function Attributes</source>
          <target state="translated">6.33.24 Nvidia PTX 기능 속성</target>
        </trans-unit>
        <trans-unit id="ec7edbbfa70981fad11ad51561b839079fa443eb" translate="yes" xml:space="preserve">
          <source>6.33.24. Nvidia PTX Function Attributes</source>
          <target state="translated">6.33.24. Nvidia PTX 기능 속성</target>
        </trans-unit>
        <trans-unit id="18762d943e96b861f5cb71e380ad89578af31b7d" translate="yes" xml:space="preserve">
          <source>6.33.25 PowerPC Function Attributes</source>
          <target state="translated">6.33.25 PowerPC 기능 속성</target>
        </trans-unit>
        <trans-unit id="b01a11a5995ae86c0998c572de2b427114cc49ec" translate="yes" xml:space="preserve">
          <source>6.33.25. PowerPC Function Attributes</source>
          <target state="translated">6.33.25. PowerPC 기능 속성</target>
        </trans-unit>
        <trans-unit id="991c1544bd372ae36675020c892292f984ea620f" translate="yes" xml:space="preserve">
          <source>6.33.26 RISC-V Function Attributes</source>
          <target state="translated">6.33.26 RISC-V 기능 속성</target>
        </trans-unit>
        <trans-unit id="3d88b71fe71bac3d635c0295b509f25ac45f0d7c" translate="yes" xml:space="preserve">
          <source>6.33.26. RISC-V Function Attributes</source>
          <target state="translated">6.33.26. RISC-V 기능 속성</target>
        </trans-unit>
        <trans-unit id="f2b0724de8958568b8bdf67060687c72e1b6227c" translate="yes" xml:space="preserve">
          <source>6.33.27 RL78 Function Attributes</source>
          <target state="translated">6.33.27 RL78 기능 속성</target>
        </trans-unit>
        <trans-unit id="831035e6cc40bef0749308e375b83957c225a254" translate="yes" xml:space="preserve">
          <source>6.33.27. RL78 Function Attributes</source>
          <target state="translated">6.33.27. RL78 기능 속성</target>
        </trans-unit>
        <trans-unit id="451844b0d4307702502c385d75587e4e44ec2ab0" translate="yes" xml:space="preserve">
          <source>6.33.28 RX Function Attributes</source>
          <target state="translated">6.33.28 RX 기능 속성</target>
        </trans-unit>
        <trans-unit id="ceebd86601d6181aa07fd4278c5ae8327700c334" translate="yes" xml:space="preserve">
          <source>6.33.28. RX Function Attributes</source>
          <target state="translated">6.33.28. RX 기능 속성</target>
        </trans-unit>
        <trans-unit id="5e31645954fded657ce3ef24a66a5c5f68fe4bb2" translate="yes" xml:space="preserve">
          <source>6.33.29 S/390 Function Attributes</source>
          <target state="translated">6.33.29 S / 390 기능 속성</target>
        </trans-unit>
        <trans-unit id="de6927fb6c2a8e91ffa56c63b7a8e6f4f59bdbee" translate="yes" xml:space="preserve">
          <source>6.33.29. S/390 Function Attributes</source>
          <target state="translated">6.33.29. S / 390 기능 속성</target>
        </trans-unit>
        <trans-unit id="e960b4cc59471b421379fcd8090812abf1922cde" translate="yes" xml:space="preserve">
          <source>6.33.3 AMD GCN Function Attributes</source>
          <target state="translated">6.33.3 AMD GCN 기능 속성</target>
        </trans-unit>
        <trans-unit id="076001ba838b96536ca9cc4cb3d7b0e5724eb7ba" translate="yes" xml:space="preserve">
          <source>6.33.3. AMD GCN Function Attributes</source>
          <target state="translated">6.33.3. AMD GCN 기능 속성</target>
        </trans-unit>
        <trans-unit id="d50b054150121fcce022d72f65dc794f286a767c" translate="yes" xml:space="preserve">
          <source>6.33.30 SH Function Attributes</source>
          <target state="translated">6.33.30 SH 기능 속성</target>
        </trans-unit>
        <trans-unit id="b7d8011ef870176bd798610f125bea18324b061c" translate="yes" xml:space="preserve">
          <source>6.33.30. SH Function Attributes</source>
          <target state="translated">6.33.30. SH 기능 속성</target>
        </trans-unit>
        <trans-unit id="eb83cce043f14c4be052980ff2e5cdedc1ab7c96" translate="yes" xml:space="preserve">
          <source>6.33.31 SPU Function Attributes</source>
          <target state="translated">6.33.31 SPU 기능 속성</target>
        </trans-unit>
        <trans-unit id="4ddc06fae633a08bc5e933eb11f2922496793f28" translate="yes" xml:space="preserve">
          <source>6.33.31. SPU Function Attributes</source>
          <target state="translated">6.33.31. SPU 기능 속성</target>
        </trans-unit>
        <trans-unit id="f6edd7f2810d18a4006e0d7eee2a8c91468a5270" translate="yes" xml:space="preserve">
          <source>6.33.32 Symbian OS Function Attributes</source>
          <target state="translated">6.33.32 Symbian OS 기능 속성</target>
        </trans-unit>
        <trans-unit id="aa56649bd6b1bcff352a28c815192b9300885f29" translate="yes" xml:space="preserve">
          <source>6.33.32. Symbian OS Function Attributes</source>
          <target state="translated">6.33.32. 심비안 OS 기능 속성</target>
        </trans-unit>
        <trans-unit id="5f9e21c0f671cac1ecdc704d4bd9762fc57e3ae9" translate="yes" xml:space="preserve">
          <source>6.33.33 V850 Function Attributes</source>
          <target state="translated">6.33.33 V850 기능 속성</target>
        </trans-unit>
        <trans-unit id="679f766d4f646a6e4a85f432f51cdc166cfab963" translate="yes" xml:space="preserve">
          <source>6.33.33. V850 Function Attributes</source>
          <target state="translated">6.33.33. V850 기능 속성</target>
        </trans-unit>
        <trans-unit id="6dcb6820904921591f547d7897c60ee71138c9e1" translate="yes" xml:space="preserve">
          <source>6.33.34 Visium Function Attributes</source>
          <target state="translated">6.33.34 Visium 기능 속성</target>
        </trans-unit>
        <trans-unit id="7caf2f69c6c01bd2a11086f11ff1cf9dd6b70fc8" translate="yes" xml:space="preserve">
          <source>6.33.34. Visium Function Attributes</source>
          <target state="translated">6.33.34. Visium 함수 속성</target>
        </trans-unit>
        <trans-unit id="78a1203ee0bb26eadd8f4d0a473827c2e3a51bbe" translate="yes" xml:space="preserve">
          <source>6.33.35 x86 Function Attributes</source>
          <target state="translated">6.33.35 x86 기능 속성</target>
        </trans-unit>
        <trans-unit id="a57beba8f86cc4f356b2ca4eee36d9cd82eedcea" translate="yes" xml:space="preserve">
          <source>6.33.35. x86 Function Attributes</source>
          <target state="translated">6.33.35. x86 기능 속성</target>
        </trans-unit>
        <trans-unit id="2d252b732c53521e7f7ac7cc947e722bff0687cd" translate="yes" xml:space="preserve">
          <source>6.33.36 Xstormy16 Function Attributes</source>
          <target state="translated">6.33.36 Xstormy16 함수 속성</target>
        </trans-unit>
        <trans-unit id="572e63e2c6c08c5b1bc35bd062334a873f99bc85" translate="yes" xml:space="preserve">
          <source>6.33.36. Xstormy16 Function Attributes</source>
          <target state="translated">6.33.36. Xstormy16 함수 속성</target>
        </trans-unit>
        <trans-unit id="92747e9d37e816286b28f85f6ff6f88e08382a96" translate="yes" xml:space="preserve">
          <source>6.33.4 ARC Function Attributes</source>
          <target state="translated">6.33.4 ARC 기능 속성</target>
        </trans-unit>
        <trans-unit id="044e658b5d34625b0154570e8c9d4749ff4751a6" translate="yes" xml:space="preserve">
          <source>6.33.4. ARC Function Attributes</source>
          <target state="translated">6.33.4. 아크 기능 속성</target>
        </trans-unit>
        <trans-unit id="189a8772f2284989a83ccc177f4907354d3574e3" translate="yes" xml:space="preserve">
          <source>6.33.5 ARM Function Attributes</source>
          <target state="translated">6.33.5 ARM 함수 속성</target>
        </trans-unit>
        <trans-unit id="316cd92526266570fe4632b9f3ae44ae892ae634" translate="yes" xml:space="preserve">
          <source>6.33.5. ARM Function Attributes</source>
          <target state="translated">6.33.5. ARM 함수 속성</target>
        </trans-unit>
        <trans-unit id="820e7eb76a912771ff3061b104131748434fdd3d" translate="yes" xml:space="preserve">
          <source>6.33.6 AVR Function Attributes</source>
          <target state="translated">6.33.6 AVR 기능 속성</target>
        </trans-unit>
        <trans-unit id="c98e39816d517fac910ec5cde0a71435c96f41b7" translate="yes" xml:space="preserve">
          <source>6.33.6. AVR Function Attributes</source>
          <target state="translated">6.33.6. AVR 기능 속성</target>
        </trans-unit>
        <trans-unit id="80659c45097dd9cb1f1af7199e3e565e1635fbf9" translate="yes" xml:space="preserve">
          <source>6.33.7 Blackfin Function Attributes</source>
          <target state="translated">6.33.7 블랙 핀 기능 속성</target>
        </trans-unit>
        <trans-unit id="67d2e9abfc1ae38008ce887ad5eb0c837182f00d" translate="yes" xml:space="preserve">
          <source>6.33.7. Blackfin Function Attributes</source>
          <target state="translated">6.33.7. 블랙 핀 기능 속성</target>
        </trans-unit>
        <trans-unit id="7d4d0b90a27c07744cce3e05aae92fbbedd938d9" translate="yes" xml:space="preserve">
          <source>6.33.8 CR16 Function Attributes</source>
          <target state="translated">6.33.8 CR16 기능 속성</target>
        </trans-unit>
        <trans-unit id="3ac2f91ce3b01406b89d6c089407903e5d1eef23" translate="yes" xml:space="preserve">
          <source>6.33.8. CR16 Function Attributes</source>
          <target state="translated">6.33.8. CR16 기능 속성</target>
        </trans-unit>
        <trans-unit id="9819b913ab30a94812775d840938d03b889136c1" translate="yes" xml:space="preserve">
          <source>6.33.9 C-SKY Function Attributes</source>
          <target state="translated">6.33.9 C-SKY 기능 속성</target>
        </trans-unit>
        <trans-unit id="963da469ad570fe74f123e6872a3e72e2731d0c2" translate="yes" xml:space="preserve">
          <source>6.33.9. C-SKY Function Attributes</source>
          <target state="translated">6.33.9. C-SKY 기능 속성</target>
        </trans-unit>
        <trans-unit id="5aa2523ac102e42bacf05162916037bbf8737a3c" translate="yes" xml:space="preserve">
          <source>6.34 Specifying Attributes of Variables</source>
          <target state="translated">6.34 변수의 속성 지정</target>
        </trans-unit>
        <trans-unit id="aa3bde1c48365064aebf791cb98bae1d78cbdc5b" translate="yes" xml:space="preserve">
          <source>6.34. Specifying Attributes of Variables</source>
          <target state="translated">6.34. 변수의 속성 지정</target>
        </trans-unit>
        <trans-unit id="47f3e2ac57fc8e743ea466e398104e21f384c7b2" translate="yes" xml:space="preserve">
          <source>6.34.1 Common Variable Attributes</source>
          <target state="translated">6.34.1 공통 변수 속성</target>
        </trans-unit>
        <trans-unit id="e99ab19e60db21f63e73d131860f84968f3bf3b3" translate="yes" xml:space="preserve">
          <source>6.34.1. Common Variable Attributes</source>
          <target state="translated">6.34.1. 공통 변수 속성</target>
        </trans-unit>
        <trans-unit id="97789bfe888e3fb7ed408690479dc8b03fa56048" translate="yes" xml:space="preserve">
          <source>6.34.10 MSP430 Variable Attributes</source>
          <target state="translated">6.34.10 MSP430 변수 속성</target>
        </trans-unit>
        <trans-unit id="ae86d3b84c090a5386835db2329328efe10e8c00" translate="yes" xml:space="preserve">
          <source>6.34.10. MSP430 Variable Attributes</source>
          <target state="translated">6.34.10. MSP430 변수 속성</target>
        </trans-unit>
        <trans-unit id="caa5a28ff71c2bef0a8d3021334e403ffba5d472" translate="yes" xml:space="preserve">
          <source>6.34.11 Nvidia PTX Variable Attributes</source>
          <target state="translated">6.34.11 Nvidia PTX 변수 속성</target>
        </trans-unit>
        <trans-unit id="f7301d4dcfa81570ddb9904037efb3e9df7f4d1c" translate="yes" xml:space="preserve">
          <source>6.34.11. Nvidia PTX Variable Attributes</source>
          <target state="translated">6.34.11. Nvidia PTX 변수 속성</target>
        </trans-unit>
        <trans-unit id="8a2c821cea1955a1d13c686369ede91364016e25" translate="yes" xml:space="preserve">
          <source>6.34.12 PowerPC Variable Attributes</source>
          <target state="translated">6.34.12 PowerPC 변수 속성</target>
        </trans-unit>
        <trans-unit id="8725decd52736f4311cdb0e275b5ce8e827ed97c" translate="yes" xml:space="preserve">
          <source>6.34.12. PowerPC Variable Attributes</source>
          <target state="translated">6.34.12. PowerPC 변수 속성</target>
        </trans-unit>
        <trans-unit id="5aa6c61af9a1c89baa5f07247205a72db591eecf" translate="yes" xml:space="preserve">
          <source>6.34.13 RL78 Variable Attributes</source>
          <target state="translated">6.34.13 RL78 변수 속성</target>
        </trans-unit>
        <trans-unit id="8b5a19bea876f59e65f842aef4e721d0da6305c1" translate="yes" xml:space="preserve">
          <source>6.34.13. RL78 Variable Attributes</source>
          <target state="translated">6.34.13. RL78 변수 속성</target>
        </trans-unit>
        <trans-unit id="207117e5e71a65a20283424c493ffa4c75c6c39d" translate="yes" xml:space="preserve">
          <source>6.34.14 SPU Variable Attributes</source>
          <target state="translated">6.34.14 SPU 변수 속성</target>
        </trans-unit>
        <trans-unit id="5075258a230c7c72ccd8db8688924f19ef73ce7d" translate="yes" xml:space="preserve">
          <source>6.34.14. SPU Variable Attributes</source>
          <target state="translated">6.34.14. SPU 변수 속성</target>
        </trans-unit>
        <trans-unit id="47088a2e7461a79ac326e110666b7225ff13107a" translate="yes" xml:space="preserve">
          <source>6.34.15 V850 Variable Attributes</source>
          <target state="translated">6.34.15 V850 변수 속성</target>
        </trans-unit>
        <trans-unit id="d5ab9e6daeca8c038ea7e3c760e5692d621a36d1" translate="yes" xml:space="preserve">
          <source>6.34.15. V850 Variable Attributes</source>
          <target state="translated">6.34.15. V850 변수 속성</target>
        </trans-unit>
        <trans-unit id="dd12eddd1f29b7cda82ee97b9a56cd7733352000" translate="yes" xml:space="preserve">
          <source>6.34.16 x86 Variable Attributes</source>
          <target state="translated">6.34.16 x86 변수 속성</target>
        </trans-unit>
        <trans-unit id="f742b5e5a0f79552c1259fe8af69e34879668881" translate="yes" xml:space="preserve">
          <source>6.34.17 Xstormy16 Variable Attributes</source>
          <target state="translated">6.34.17 Xstormy16 변수 속성</target>
        </trans-unit>
        <trans-unit id="51e62903eea0dcfc5cdd437a8dbeb21779bb4408" translate="yes" xml:space="preserve">
          <source>6.34.17. Xstormy16 Variable Attributes</source>
          <target state="translated">6.34.17. Xstormy16 변수 속성</target>
        </trans-unit>
        <trans-unit id="8229362b4df9fb9562bb43856107b686b8a59461" translate="yes" xml:space="preserve">
          <source>6.34.2 ARC Variable Attributes</source>
          <target state="translated">6.34.2 ARC 변수 속성</target>
        </trans-unit>
        <trans-unit id="8236f0330bf7c63de88dec2c6b10437a7e08fff9" translate="yes" xml:space="preserve">
          <source>6.34.2. ARC Variable Attributes</source>
          <target state="translated">6.34.2. ARC 변수 속성</target>
        </trans-unit>
        <trans-unit id="e5114c91cdd8703135481889cf6935e85a80f313" translate="yes" xml:space="preserve">
          <source>6.34.3 AVR Variable Attributes</source>
          <target state="translated">6.34.3 AVR 변수 속성</target>
        </trans-unit>
        <trans-unit id="35727ace16e3329cd2fb845f461504ed6a792d93" translate="yes" xml:space="preserve">
          <source>6.34.4 Blackfin Variable Attributes</source>
          <target state="translated">6.34.4 블랙 핀 변수 속성</target>
        </trans-unit>
        <trans-unit id="24351684397fffeefe3eb2627bff7eb7b7253c88" translate="yes" xml:space="preserve">
          <source>6.34.4. Blackfin Variable Attributes</source>
          <target state="translated">6.34.4. 블랙 핀 변수 속성</target>
        </trans-unit>
        <trans-unit id="f677074e3b778bafa2fd09e87159cfcf96fac5f0" translate="yes" xml:space="preserve">
          <source>6.34.5 H8/300 Variable Attributes</source>
          <target state="translated">6.34.5 H8 / 300 변수 속성</target>
        </trans-unit>
        <trans-unit id="d48c7f6dbc457f9176fca4138fd86ad4aad191ab" translate="yes" xml:space="preserve">
          <source>6.34.5. H8/300 Variable Attributes</source>
          <target state="translated">6.34.5. H8/300 Variable Attributes</target>
        </trans-unit>
        <trans-unit id="84a3629fedb46c2507fae1d473f35a27a7b71884" translate="yes" xml:space="preserve">
          <source>6.34.6 IA-64 Variable Attributes</source>
          <target state="translated">6.34.6 IA-64 변수 속성</target>
        </trans-unit>
        <trans-unit id="40184c8877fdfbb7eda16e2cb6b098db8c27d5af" translate="yes" xml:space="preserve">
          <source>6.34.6. IA-64 Variable Attributes</source>
          <target state="translated">6.34.6. IA-64 변수 속성</target>
        </trans-unit>
        <trans-unit id="665dcb1f5ddd877cbe864eeb218fedbe200a6451" translate="yes" xml:space="preserve">
          <source>6.34.7 M32R/D Variable Attributes</source>
          <target state="translated">6.34.7 M32R / D 변수 속성</target>
        </trans-unit>
        <trans-unit id="399a2133660397189e7659fd6b61e9332a8f4446" translate="yes" xml:space="preserve">
          <source>6.34.7. M32R/D Variable Attributes</source>
          <target state="translated">6.34.7. M32R / D 변수 속성</target>
        </trans-unit>
        <trans-unit id="11c586b95755ffb92d301c135d0eb9579f9990c7" translate="yes" xml:space="preserve">
          <source>6.34.8 MeP Variable Attributes</source>
          <target state="translated">6.34.8 MeP 변수 속성</target>
        </trans-unit>
        <trans-unit id="aed38ebff752371a6f44d9b790f19af47e9a1acc" translate="yes" xml:space="preserve">
          <source>6.34.8. MeP Variable Attributes</source>
          <target state="translated">6.34.8. MeP 변수 속성</target>
        </trans-unit>
        <trans-unit id="d7fc33177da35b7791fd304463def9139c51af7d" translate="yes" xml:space="preserve">
          <source>6.34.9 Microsoft Windows Variable Attributes</source>
          <target state="translated">6.34.9 Microsoft Windows 변수 속성</target>
        </trans-unit>
        <trans-unit id="cf119abfaa81f673d249e5f0a38fd1d566954e54" translate="yes" xml:space="preserve">
          <source>6.34.9. Microsoft Windows Variable Attributes</source>
          <target state="translated">6.34.9. Microsoft Windows 변수 속성</target>
        </trans-unit>
        <trans-unit id="46c6d857a99640f61dbaa0b9fb4a8e563c32d5c7" translate="yes" xml:space="preserve">
          <source>6.35 Specifying Attributes of Types</source>
          <target state="translated">6.35 타입의 속성 지정</target>
        </trans-unit>
        <trans-unit id="3402feb0b300db8379b24c2c577bc28a5b97ddf3" translate="yes" xml:space="preserve">
          <source>6.35. Specifying Attributes of Types</source>
          <target state="translated">6.35. 유형의 속성 지정</target>
        </trans-unit>
        <trans-unit id="5218ebba19a80378978cbb9a2651ed1cf5433f12" translate="yes" xml:space="preserve">
          <source>6.35.1 Common Type Attributes</source>
          <target state="translated">6.35.1 공통 유형 속성</target>
        </trans-unit>
        <trans-unit id="c4dfc513879ff509a694a73d7b1b0af603da77a6" translate="yes" xml:space="preserve">
          <source>6.35.1. Common Type Attributes</source>
          <target state="translated">6.35.1. 일반적인 유형 속성</target>
        </trans-unit>
        <trans-unit id="b96df4999d62a9a2be6db4df2c0d2a4a61a31074" translate="yes" xml:space="preserve">
          <source>6.35.2 ARC Type Attributes</source>
          <target state="translated">6.35.2 ARC 유형 속성</target>
        </trans-unit>
        <trans-unit id="67999a39e9947dada85eb6f8028eb519f6bc91c3" translate="yes" xml:space="preserve">
          <source>6.35.2. ARC Type Attributes</source>
          <target state="translated">6.35.2. 아크 유형 속성</target>
        </trans-unit>
        <trans-unit id="1f3cf6225361f95cd30af5bf1c561d839709654e" translate="yes" xml:space="preserve">
          <source>6.35.3 ARM Type Attributes</source>
          <target state="translated">6.35.3 ARM 유형 속성</target>
        </trans-unit>
        <trans-unit id="9a09228c89e9ea12ee480af1cd04b429b41e26df" translate="yes" xml:space="preserve">
          <source>6.35.3. ARM Type Attributes</source>
          <target state="translated">6.35.3. ARM 유형 속성</target>
        </trans-unit>
        <trans-unit id="d89e5846897cd83654ebd7030ddc053e8b62beed" translate="yes" xml:space="preserve">
          <source>6.35.4 MeP Type Attributes</source>
          <target state="translated">6.35.4 MeP 유형 속성</target>
        </trans-unit>
        <trans-unit id="e2468142135a3e73882677c6b64e3027b4dab83c" translate="yes" xml:space="preserve">
          <source>6.35.4. MeP Type Attributes</source>
          <target state="translated">6.35.4. MeP 유형 속성</target>
        </trans-unit>
        <trans-unit id="10e08811a0eaef5c77bd63398979172bc1e707a6" translate="yes" xml:space="preserve">
          <source>6.35.5 PowerPC Type Attributes</source>
          <target state="translated">6.35.5 PowerPC 유형 속성</target>
        </trans-unit>
        <trans-unit id="e1ba8f457dbbc02e8a5e5515efe87d14f9a1a345" translate="yes" xml:space="preserve">
          <source>6.35.6 SPU Type Attributes</source>
          <target state="translated">6.35.6 SPU 유형 속성</target>
        </trans-unit>
        <trans-unit id="5072447eaf908cb7a17ce82abf283be0288e366e" translate="yes" xml:space="preserve">
          <source>6.35.7 x86 Type Attributes</source>
          <target state="translated">6.35.7 x86 유형 속성</target>
        </trans-unit>
        <trans-unit id="fc123df4e9e75e9670764c2ec77f8014e4d73280" translate="yes" xml:space="preserve">
          <source>6.36 Label Attributes</source>
          <target state="translated">6.36 라벨 속성</target>
        </trans-unit>
        <trans-unit id="db057660be504a487e5f6faea305595f38daaf88" translate="yes" xml:space="preserve">
          <source>6.36. Label Attributes</source>
          <target state="translated">6.36. 라벨 속성</target>
        </trans-unit>
        <trans-unit id="c9aa11aae3ad029fefeaabd06e01be453868e684" translate="yes" xml:space="preserve">
          <source>6.37 Enumerator Attributes</source>
          <target state="translated">6.37 열거 자 속성</target>
        </trans-unit>
        <trans-unit id="b9e3908ad59d26a40490968b1756c3a1c2912f5b" translate="yes" xml:space="preserve">
          <source>6.37. Enumerator Attributes</source>
          <target state="translated">6.37. 열거 자 속성</target>
        </trans-unit>
        <trans-unit id="3e22db843d169d53a0fab759c104c976a7fff672" translate="yes" xml:space="preserve">
          <source>6.38 Statement Attributes</source>
          <target state="translated">6.38 진술 속성</target>
        </trans-unit>
        <trans-unit id="78a42186d71fd77d0b8c4fd07de9aef4ed2bed8e" translate="yes" xml:space="preserve">
          <source>6.38. Statement Attributes</source>
          <target state="translated">6.38. 명령문 속성</target>
        </trans-unit>
        <trans-unit id="858eec56de848e19175bcdf1034cf57abe66fb6a" translate="yes" xml:space="preserve">
          <source>6.39 Attribute Syntax</source>
          <target state="translated">6.39 속성 구문</target>
        </trans-unit>
        <trans-unit id="092b36e80784a37ceaa82bebed430e1dcaddfcf4" translate="yes" xml:space="preserve">
          <source>6.39. Attribute Syntax</source>
          <target state="translated">6.39. 속성 구문</target>
        </trans-unit>
        <trans-unit id="872c9757cdcf48a0113b5b7dcb3aeb443d02e69c" translate="yes" xml:space="preserve">
          <source>6.4 Nested Functions</source>
          <target state="translated">6.4 중첩 함수</target>
        </trans-unit>
        <trans-unit id="fd6bf93c9c20ef707805bb34b7764f00d9496761" translate="yes" xml:space="preserve">
          <source>6.4. Nested Functions</source>
          <target state="translated">6.4. 중첩 함수</target>
        </trans-unit>
        <trans-unit id="29c5ee28625ee58c00b7eb1a618f94ef5554a4b5" translate="yes" xml:space="preserve">
          <source>6.4.1 Keywords</source>
          <target state="translated">6.4.1 키워드</target>
        </trans-unit>
        <trans-unit id="dff52598ca1464fef278bedadf8836b43ca9b69d" translate="yes" xml:space="preserve">
          <source>6.40 Prototypes and Old-Style Function Definitions</source>
          <target state="translated">6.40 프로토 타입과 구식 함수 정의</target>
        </trans-unit>
        <trans-unit id="226a394777053e7be3bdd3fd5a0061d9df2a1955" translate="yes" xml:space="preserve">
          <source>6.40. Prototypes and Old-Style Function Definitions</source>
          <target state="translated">6.40. 프로토 타입 및 구식 함수 정의</target>
        </trans-unit>
        <trans-unit id="f64fd5980c6d35d04bcaf0dcb72e02aae370cae7" translate="yes" xml:space="preserve">
          <source>6.41 C++ Style Comments</source>
          <target state="translated">6.41 C ++ 스타일 주석</target>
        </trans-unit>
        <trans-unit id="8b69d116793d4b2c2c9757b7526c117e466a9c25" translate="yes" xml:space="preserve">
          <source>6.41. C++ Style Comments</source>
          <target state="translated">6.41. C ++ 스타일 주석</target>
        </trans-unit>
        <trans-unit id="1b6b092d67ee982de3e2803a279b1d5d17a5ec9d" translate="yes" xml:space="preserve">
          <source>6.42 Dollar Signs in Identifier Names</source>
          <target state="translated">식별자 이름으로 6.42 달러 기호</target>
        </trans-unit>
        <trans-unit id="6b039b31ba2d865e0c2b175277881f6e07f916e7" translate="yes" xml:space="preserve">
          <source>6.42. Dollar Signs in Identifier Names</source>
          <target state="translated">6.42. 식별자 이름의 달러 기호</target>
        </trans-unit>
        <trans-unit id="852bed2432420b6147b02bd291391833ef6898b3" translate="yes" xml:space="preserve">
          <source>6.43 The Character</source>
          <target state="translated">6.43 캐릭터</target>
        </trans-unit>
        <trans-unit id="c4f00e6b6a788b3578e09b729e9e093b367b2628" translate="yes" xml:space="preserve">
          <source>6.43 The Character &lt;tt&gt;ESC&lt;/tt&gt; in Constants</source>
          <target state="translated">6.43 상수 의 문자 &lt;tt&gt;ESC&lt;/tt&gt;</target>
        </trans-unit>
        <trans-unit id="d70e3bbb9c501dcc979ea3277ed30e2d8eac8719" translate="yes" xml:space="preserve">
          <source>6.43. The Character ESC in Constants</source>
          <target state="translated">6.43. 상수의 문자 ESC</target>
        </trans-unit>
        <trans-unit id="8699d89e1fd5487f8b53cd149f83dcadb159ffe4" translate="yes" xml:space="preserve">
          <source>6.44 Determining the Alignment of Functions, Types or Variables</source>
          <target state="translated">6.44 함수, 타입 또는 변수의 정렬 결정</target>
        </trans-unit>
        <trans-unit id="0e5ee5333418c136603106d24737e184f714694f" translate="yes" xml:space="preserve">
          <source>6.44. Determining the Alignment of Functions, Types or Variables</source>
          <target state="translated">6.44. 함수, 타입 또는 변수의 정렬 결정</target>
        </trans-unit>
        <trans-unit id="a6b26edc21f5bcc8b85146ad30d977aae5c9c76e" translate="yes" xml:space="preserve">
          <source>6.45 An Inline Function is As Fast As a Macro</source>
          <target state="translated">6.45 인라인 함수는 매크로만큼 빠릅니다.</target>
        </trans-unit>
        <trans-unit id="f704e4510201d9015cee26e226538fb77cb98929" translate="yes" xml:space="preserve">
          <source>6.45. An Inline Function is As Fast As a Macro</source>
          <target state="translated">6.45. 인라인 함수는 매크로만큼 빠릅니다</target>
        </trans-unit>
        <trans-unit id="e9cd4cff0c27736bcd42223536fe7bf2e4f9bc61" translate="yes" xml:space="preserve">
          <source>6.46 When is a Volatile Object Accessed?</source>
          <target state="translated">6.46 휘발성 개체는 언제 액세스됩니까?</target>
        </trans-unit>
        <trans-unit id="175f1cb480e4ba069af35f3a29567db8d732de65" translate="yes" xml:space="preserve">
          <source>6.46. When is a Volatile Object Accessed?</source>
          <target state="translated">6.46. 휘발성 개체는 언제 액세스됩니까?</target>
        </trans-unit>
        <trans-unit id="05ccd71b18b11286a10a12fabac10877c562a580" translate="yes" xml:space="preserve">
          <source>6.47 How to Use Inline Assembly Language in C Code</source>
          <target state="translated">6.47 C 코드에서 인라인 어셈블리 언어를 사용하는 방법</target>
        </trans-unit>
        <trans-unit id="202330b297d0982388883e43b2fd26ade053e2a3" translate="yes" xml:space="preserve">
          <source>6.47. How to Use Inline Assembly Language in C Code</source>
          <target state="translated">6.47. C 코드에서 인라인 어셈블리 언어를 사용하는 방법</target>
        </trans-unit>
        <trans-unit id="dca3147b566d87b998b0049ad788b4c2225375a3" translate="yes" xml:space="preserve">
          <source>6.47.1 Basic Asm &amp;mdash; Assembler Instructions Without Operands</source>
          <target state="translated">6.47.1 기본 Asm &amp;mdash; 피연산자가없는 어셈블러 명령어</target>
        </trans-unit>
        <trans-unit id="4d66e3069ee49848005a4d9acec5a89954b7f12e" translate="yes" xml:space="preserve">
          <source>6.47.1. Basic Asm</source>
          <target state="translated">6.47.1. 기본 Asm</target>
        </trans-unit>
        <trans-unit id="4da544320bcaf46b5c0ad2a9941eea55808e3da7" translate="yes" xml:space="preserve">
          <source>6.47.2 Extended Asm - Assembler Instructions with C Expression Operands</source>
          <target state="translated">6.47.2 확장 Asm-C 표현식 피연산자가있는 어셈블러 명령어</target>
        </trans-unit>
        <trans-unit id="1d01528155a644f6f1b40a60a1cba0c91f9385a5" translate="yes" xml:space="preserve">
          <source>6.47.2. Extended Asm - Assembler Instructions with C Expression Operands</source>
          <target state="translated">6.47.2. 확장 Asm-C 표현식 피연산자가있는 어셈블러 명령어</target>
        </trans-unit>
        <trans-unit id="effdf5c204d6fb9f1f09bf879bb16fecd71c03fe" translate="yes" xml:space="preserve">
          <source>6.47.2.1 Volatile</source>
          <target state="translated">휘발성</target>
        </trans-unit>
        <trans-unit id="a6f49e981ebf1e1ecc77ad234857cffc4c075b95" translate="yes" xml:space="preserve">
          <source>6.47.2.2 Assembler Template</source>
          <target state="translated">6.47.2.2 어셈블러 템플릿</target>
        </trans-unit>
        <trans-unit id="16f9e8dbda48abd15ca487d537564d6ea0cdb173" translate="yes" xml:space="preserve">
          <source>6.47.2.3 Output Operands</source>
          <target state="translated">6.47.2.3 출력 피연산자</target>
        </trans-unit>
        <trans-unit id="d16a1eeaed7e6135314184f7bb2cb0b26ab1c4c6" translate="yes" xml:space="preserve">
          <source>6.47.2.4 Flag Output Operands</source>
          <target state="translated">6.47.2.4 플래그 출력 피연산자</target>
        </trans-unit>
        <trans-unit id="859a91689ae1a3de6c65dc9030634f62fc6c2c5c" translate="yes" xml:space="preserve">
          <source>6.47.2.5 Input Operands</source>
          <target state="translated">6.47.2.5 입력 피연산자</target>
        </trans-unit>
        <trans-unit id="54bd94c21ec484a15c4d608c0f4452f7ab1babbc" translate="yes" xml:space="preserve">
          <source>6.47.2.6 Clobbers and Scratch Registers</source>
          <target state="translated">6.47.2.6 클로버 및 스크래치 레지스터</target>
        </trans-unit>
        <trans-unit id="31b97381f38c8ad3355af772c6ea137ccb8381f0" translate="yes" xml:space="preserve">
          <source>6.47.2.7 Goto Labels</source>
          <target state="translated">6.47.2.7 고토 라벨</target>
        </trans-unit>
        <trans-unit id="56f56e3cadb75407d6962099774755c7b9d59cdc" translate="yes" xml:space="preserve">
          <source>6.47.2.8 x86 Operand Modifiers</source>
          <target state="translated">6.47.2.8 x86 피연산자 수정 자</target>
        </trans-unit>
        <trans-unit id="2ffd3c9327058976b51943937462ecf57f992eeb" translate="yes" xml:space="preserve">
          <source>6.47.2.9 x86 Floating-Point &lt;code&gt;asm&lt;/code&gt; Operands</source>
          <target state="translated">6.47.2.9 x86 부동 소수점 &lt;code&gt;asm&lt;/code&gt; 피연산자</target>
        </trans-unit>
        <trans-unit id="5f6023c8f3b1e7ef2de8fde67d5483afeafa983b" translate="yes" xml:space="preserve">
          <source>6.47.2.9 x86 Floating-Point asm Operands</source>
          <target state="translated">6.47.2.9 x86 부동 소수점 asm 피연산자</target>
        </trans-unit>
        <trans-unit id="b6789e576d35dca5cd4fcb419eddcaab90f8bdd3" translate="yes" xml:space="preserve">
          <source>6.47.3 Constraints for &lt;code&gt;asm&lt;/code&gt; Operands</source>
          <target state="translated">6.47.3 &lt;code&gt;asm&lt;/code&gt; 피연산자에 대한 제약</target>
        </trans-unit>
        <trans-unit id="141b854122eb8a71fd531f345019f7c8a69bc432" translate="yes" xml:space="preserve">
          <source>6.47.3 Constraints for asm Operands</source>
          <target state="translated">6.47.3 asm 피연산자에 대한 제약</target>
        </trans-unit>
        <trans-unit id="b7412440753d329fccdfbb80f3bbe9eb99a1c43f" translate="yes" xml:space="preserve">
          <source>6.47.3. Constraints for asm Operands</source>
          <target state="translated">6.47.3. asm 피연산자에 대한 제약</target>
        </trans-unit>
        <trans-unit id="86c63e3b2419d04024180a5732f6bbad55fabcf8" translate="yes" xml:space="preserve">
          <source>6.47.3.1 Simple Constraints</source>
          <target state="translated">6.47.3.1 간단한 제약</target>
        </trans-unit>
        <trans-unit id="56afdcdaefb9a74a260afc30a57597bebd68596d" translate="yes" xml:space="preserve">
          <source>6.47.3.1. Simple Constraints</source>
          <target state="translated">6.47.3.1. 간단한 제약</target>
        </trans-unit>
        <trans-unit id="638706af414e0363890e5c88412134e0d871021f" translate="yes" xml:space="preserve">
          <source>6.47.3.2 Multiple Alternative Constraints</source>
          <target state="translated">6.47.3.2 여러 대체 제약</target>
        </trans-unit>
        <trans-unit id="47b262a6aaeea2b8548dfa637765ab1a106ddcd3" translate="yes" xml:space="preserve">
          <source>6.47.3.2. Multiple Alternative Constraints</source>
          <target state="translated">6.47.3.2. 여러 대안 제약</target>
        </trans-unit>
        <trans-unit id="e72301c9d60b12d4fed26dc9f67dc437ac9bf0a0" translate="yes" xml:space="preserve">
          <source>6.47.3.3 Constraint Modifier Characters</source>
          <target state="translated">6.47.3.3 제약 조건 수정 문자</target>
        </trans-unit>
        <trans-unit id="34bfb6a5b6f3d73614fd3bc831a3592ab13d36c6" translate="yes" xml:space="preserve">
          <source>6.47.3.3. Constraint Modifier Characters</source>
          <target state="translated">6.47.3.3. 구속 조건 수정 문자</target>
        </trans-unit>
        <trans-unit id="c290c147ad27805bcc1d2275fe9ec3ab067174d5" translate="yes" xml:space="preserve">
          <source>6.47.3.4 Constraints for Particular Machines</source>
          <target state="translated">6.47.3.4 특정 기계에 대한 제약</target>
        </trans-unit>
        <trans-unit id="fde64f483aed0eec28d86deb83e16a93c095a018" translate="yes" xml:space="preserve">
          <source>6.47.3.4. Constraints for Particular Machines</source>
          <target state="translated">6.47.3.4. 특정 기계에 대한 제약</target>
        </trans-unit>
        <trans-unit id="63eaba5c221e7aca893f1f7a48a9333c8f6c67fb" translate="yes" xml:space="preserve">
          <source>6.47.4 Controlling Names Used in Assembler Code</source>
          <target state="translated">6.47.4 어셈블러 코드에서 사용되는 이름 제어</target>
        </trans-unit>
        <trans-unit id="91468424e41ad03805dbe07ab554c805f9349479" translate="yes" xml:space="preserve">
          <source>6.47.4. Controlling Names Used in Assembler Code</source>
          <target state="translated">6.47.4. 어셈블러 코드에서 사용되는 이름 제어</target>
        </trans-unit>
        <trans-unit id="6f00b7caa627ca4641f17c5c09220ef9d07642ee" translate="yes" xml:space="preserve">
          <source>6.47.5 Variables in Specified Registers</source>
          <target state="translated">6.47.5 지정된 레지스터의 변수</target>
        </trans-unit>
        <trans-unit id="47e367027c5501f1351a6a1da2267e5d3fe49236" translate="yes" xml:space="preserve">
          <source>6.47.5. Variables in Specified Registers</source>
          <target state="translated">6.47.5. 지정된 레지스터의 변수</target>
        </trans-unit>
        <trans-unit id="56efeed941144eae12a75823e703751b01daf1e1" translate="yes" xml:space="preserve">
          <source>6.47.5.1 Defining Global Register Variables</source>
          <target state="translated">6.47.5.1 글로벌 레지스터 변수 정의</target>
        </trans-unit>
        <trans-unit id="32709dc38dddfe5b8f6aab6328025c6f37a9d317" translate="yes" xml:space="preserve">
          <source>6.47.5.1. Defining Global Register Variables</source>
          <target state="translated">6.47.5.1. 글로벌 레지스터 변수 정의</target>
        </trans-unit>
        <trans-unit id="550a4fafa2645d1e7b867d4a7402543d2fc4fc79" translate="yes" xml:space="preserve">
          <source>6.47.5.2 Specifying Registers for Local Variables</source>
          <target state="translated">6.47.5.2 지역 변수에 대한 레지스터 지정</target>
        </trans-unit>
        <trans-unit id="edcc4024c864ce496bcbe4e280dd3f45e605f9c2" translate="yes" xml:space="preserve">
          <source>6.47.5.2. Specifying Registers for Local Variables</source>
          <target state="translated">6.47.5.2. 지역 변수에 대한 레지스터 지정</target>
        </trans-unit>
        <trans-unit id="0d30ee42309acc06a033b3a2d2f8b19fc5ca6558" translate="yes" xml:space="preserve">
          <source>6.47.6 Size of an &lt;code&gt;asm&lt;/code&gt;</source>
          <target state="translated">6.47.6 &lt;code&gt;asm&lt;/code&gt; 의 크기</target>
        </trans-unit>
        <trans-unit id="88caa26334571426622b96d4f61c423e663e152a" translate="yes" xml:space="preserve">
          <source>6.47.6 Size of an asm</source>
          <target state="translated">6.47.6 asm의 크기</target>
        </trans-unit>
        <trans-unit id="9084acc6ca4fcf33b14439c51bdfaf100496d77f" translate="yes" xml:space="preserve">
          <source>6.47.6. Size of an asm</source>
          <target state="translated">6.47.6. asm의 크기</target>
        </trans-unit>
        <trans-unit id="09b13f624b82532ce40be4ecd3492662cfc702ce" translate="yes" xml:space="preserve">
          <source>6.48 Alternate Keywords</source>
          <target state="translated">6.48 대체 키워드</target>
        </trans-unit>
        <trans-unit id="71b2b380d4019d22eb6b9877b123488ec5e5d0df" translate="yes" xml:space="preserve">
          <source>6.48. Alternate Keywords</source>
          <target state="translated">6.48. 대체 키워드</target>
        </trans-unit>
        <trans-unit id="345369dab5ee0e9f7b8d6c6a595654585b6bca1b" translate="yes" xml:space="preserve">
          <source>6.49 Incomplete &lt;code&gt;enum&lt;/code&gt; Types</source>
          <target state="translated">불완전한 &lt;code&gt;enum&lt;/code&gt; 형</target>
        </trans-unit>
        <trans-unit id="a002122ebe8c92c75c75ddfd20c258bd914ea567" translate="yes" xml:space="preserve">
          <source>6.49 Incomplete enum Types</source>
          <target state="translated">불완전한 열거 형</target>
        </trans-unit>
        <trans-unit id="2e42808e482f20ed8d7ddbf98e340743e542ba45" translate="yes" xml:space="preserve">
          <source>6.49. Incomplete enum Types</source>
          <target state="translated">6.49. 불완전한 열거 형</target>
        </trans-unit>
        <trans-unit id="185561a12382964544efe117ffdd5270926600dc" translate="yes" xml:space="preserve">
          <source>6.5 Nonlocal Gotos</source>
          <target state="translated">6.5 비 로컬 고토</target>
        </trans-unit>
        <trans-unit id="c1c013e4964b407b8fa1c7d3d1548f6f3dbf8937" translate="yes" xml:space="preserve">
          <source>6.5. Nonlocal Gotos</source>
          <target state="translated">6.5. 비 로컬 고토</target>
        </trans-unit>
        <trans-unit id="801091b702ff657cddb73dd2b90dcd224dbd0234" translate="yes" xml:space="preserve">
          <source>6.50 Function Names as Strings</source>
          <target state="translated">문자열로서의 함수 이름</target>
        </trans-unit>
        <trans-unit id="e4113dc5b9a4acf0a70a90067c887004776dbf88" translate="yes" xml:space="preserve">
          <source>6.50. Function Names as Strings</source>
          <target state="translated">6.50. 문자열로서의 함수명</target>
        </trans-unit>
        <trans-unit id="1d4e9dd7d6aa8c332a01daabed739895b4ded0bb" translate="yes" xml:space="preserve">
          <source>6.51 Getting the Return or Frame Address of a Function</source>
          <target state="translated">6.51 함수의 리턴 또는 프레임 주소 얻기</target>
        </trans-unit>
        <trans-unit id="f4dcc8a27cd6b38babb319669e64e053153f25d6" translate="yes" xml:space="preserve">
          <source>6.51. Getting the Return or Frame Address of a Function</source>
          <target state="translated">6.51. 함수의 리턴 또는 프레임 주소 얻기</target>
        </trans-unit>
        <trans-unit id="214856ff86fa02efe3d4e47f5834de994d9b7e18" translate="yes" xml:space="preserve">
          <source>6.52 Using Vector Instructions through Built-in Functions</source>
          <target state="translated">6.52 내장 함수를 통한 벡터 명령어 사용</target>
        </trans-unit>
        <trans-unit id="603264e59377f04d96df2c6dbd7362a8dfcbd808" translate="yes" xml:space="preserve">
          <source>6.52. Using Vector Instructions through Built-in Functions</source>
          <target state="translated">6.52. 내장 함수를 통한 벡터 명령어 사용</target>
        </trans-unit>
        <trans-unit id="214b4f8ffc755c47a14b045c61a3183b5f5d0720" translate="yes" xml:space="preserve">
          <source>6.53 Support for &lt;code&gt;offsetof&lt;/code&gt;</source>
          <target state="translated">대한 6.53 지원 &lt;code&gt;offsetof&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="db7076d3eb07d3c5a4d7de4c8ca4b175087468cf" translate="yes" xml:space="preserve">
          <source>6.53 Support for offsetof</source>
          <target state="translated">6.53 오프셋 지원</target>
        </trans-unit>
        <trans-unit id="7471639854b7d8fb14d37c9855cda58143dce970" translate="yes" xml:space="preserve">
          <source>6.53. Support for offsetof</source>
          <target state="translated">6.53. 오프셋 지원</target>
        </trans-unit>
        <trans-unit id="ff41ddb93e31c478416730d70ec10307f9351b54" translate="yes" xml:space="preserve">
          <source>6.54 Legacy &lt;code&gt;__sync&lt;/code&gt; Built-in Functions for Atomic Memory Access</source>
          <target state="translated">6.54 원자 메모리 액세스를위한 레거시 &lt;code&gt;__sync&lt;/code&gt; 내장 함수</target>
        </trans-unit>
        <trans-unit id="24e33939a488bf3218dbf722c627bbd7d132edcd" translate="yes" xml:space="preserve">
          <source>6.54 Legacy __sync Built-in Functions for Atomic Memory Access</source>
          <target state="translated">6.54 원자 메모리 액세스를위한 레거시 __sync 내장 함수</target>
        </trans-unit>
        <trans-unit id="f824076d540c0577874b2d0359839c35ce401eab" translate="yes" xml:space="preserve">
          <source>6.54. Legacy __sync Built-in Functions for Atomic Memory Access</source>
          <target state="translated">6.54. 원자 메모리 액세스를위한 레거시 __sync 내장 함수</target>
        </trans-unit>
        <trans-unit id="9f8afa5f264d0e65913a5798714b25443075a463" translate="yes" xml:space="preserve">
          <source>6.55 Built-in Functions for Memory Model Aware Atomic Operations</source>
          <target state="translated">6.55 메모리 모델 인식 원자 작업을위한 내장 함수</target>
        </trans-unit>
        <trans-unit id="e08c4c165ecb914d7a24174056835039f893bc11" translate="yes" xml:space="preserve">
          <source>6.55. Built-in Functions for Memory Model Aware Atomic Operations</source>
          <target state="translated">6.55. 메모리 모델 인식 원자 작업을위한 내장 함수</target>
        </trans-unit>
        <trans-unit id="4f45247d0a9e0192d5e4b5f8c11a2da2cf49159f" translate="yes" xml:space="preserve">
          <source>6.56 Built-in Functions to Perform Arithmetic with Overflow Checking</source>
          <target state="translated">6.56 오버플로 검사로 산술을 수행하는 내장 함수</target>
        </trans-unit>
        <trans-unit id="662c738a29d29b755dee4bc348e5987750b46c5d" translate="yes" xml:space="preserve">
          <source>6.56. Built-in Functions to Perform Arithmetic with Overflow Checking</source>
          <target state="translated">6.56. 오버 플로우 검사로 산술을 수행하는 내장 함수</target>
        </trans-unit>
        <trans-unit id="526328450361d539aa87391cad671a416de3793a" translate="yes" xml:space="preserve">
          <source>6.57 x86-Specific Memory Model Extensions for Transactional Memory</source>
          <target state="translated">트랜잭션 메모리를위한 6.57 x86 특정 메모리 모델 확장</target>
        </trans-unit>
        <trans-unit id="9ebefe9541d20acc83cc30af7d65b673ddfbed51" translate="yes" xml:space="preserve">
          <source>6.57. x86-Specific Memory Model Extensions for Transactional Memory</source>
          <target state="translated">6.57. 트랜잭션 메모리를위한 x86 특정 메모리 모델 확장</target>
        </trans-unit>
        <trans-unit id="39931802cf6e358f2ec7b3b1ddf9d22a17857d72" translate="yes" xml:space="preserve">
          <source>6.58 Object Size Checking Built-in Functions</source>
          <target state="translated">6.58 객체 크기 확인 내장 함수</target>
        </trans-unit>
        <trans-unit id="4d88b960f9fd3969b9f1b4c13aef2249e46abbd6" translate="yes" xml:space="preserve">
          <source>6.58. Object Size Checking Built-in Functions</source>
          <target state="translated">6.58. 내장 기능 검사 객체 크기</target>
        </trans-unit>
        <trans-unit id="4e1cfbf53d05c8121d6a6df1d260c69e4d3b6d60" translate="yes" xml:space="preserve">
          <source>6.59 Other Built-in Functions Provided by GCC</source>
          <target state="translated">6.59 GCC가 제공하는 기타 내장 기능</target>
        </trans-unit>
        <trans-unit id="dc4a1fd5f748e815e6988701488dd31f02fd4b6d" translate="yes" xml:space="preserve">
          <source>6.59. Other Built-in Functions Provided by GCC</source>
          <target state="translated">6.59. GCC에서 제공하는 기타 내장 기능</target>
        </trans-unit>
        <trans-unit id="e668f7cf732d77b7eea2f01d64bca85598772956" translate="yes" xml:space="preserve">
          <source>6.6 Constructing Function Calls</source>
          <target state="translated">6.6 함수 호출 구성</target>
        </trans-unit>
        <trans-unit id="8c2ce64bfccc88de89d7b29f3582f8c153da3c1f" translate="yes" xml:space="preserve">
          <source>6.6. Constructing Function Calls</source>
          <target state="translated">6.6. 함수 호출 구성</target>
        </trans-unit>
        <trans-unit id="12d8c6de8daf9da9c9588eb88909ae5e11432fb6" translate="yes" xml:space="preserve">
          <source>6.60 Built-in Functions Specific to Particular Target Machines</source>
          <target state="translated">6.60 특정 대상 기계에 고유 한 내장 기능</target>
        </trans-unit>
        <trans-unit id="646e50dfb9b2fece86987f663922a4749c726723" translate="yes" xml:space="preserve">
          <source>6.60. Built-in Functions Specific to Particular Target Machines</source>
          <target state="translated">6.60. 특정 대상 기계에 고유 한 내장 기능</target>
        </trans-unit>
        <trans-unit id="420f8620ac63c02b70b3c9858727754d5623232d" translate="yes" xml:space="preserve">
          <source>6.60.1 AArch64 Built-in Functions</source>
          <target state="translated">6.60.1 AArch64 내장 함수</target>
        </trans-unit>
        <trans-unit id="15b3dfa7a406b40657499fa26381bb5c8cc7fa30" translate="yes" xml:space="preserve">
          <source>6.60.1. AArch64 Built-in Functions</source>
          <target state="translated">6.60.1. AArch64 내장 기능</target>
        </trans-unit>
        <trans-unit id="a43cb54c6661c6de2937ea68120d20814e380a5a" translate="yes" xml:space="preserve">
          <source>6.60.10 AVR Built-in Functions</source>
          <target state="translated">6.60.10 AVR 내장 기능</target>
        </trans-unit>
        <trans-unit id="7d401a47687ca1342997479734c64f374ed2580e" translate="yes" xml:space="preserve">
          <source>6.60.10. AVR Built-in Functions</source>
          <target state="translated">6.60.10. AVR 내장 기능</target>
        </trans-unit>
        <trans-unit id="14fc74fd8e4987069161ef45572071f063b68daa" translate="yes" xml:space="preserve">
          <source>6.60.11 Blackfin Built-in Functions</source>
          <target state="translated">6.60.11 블랙 핀 내장 함수</target>
        </trans-unit>
        <trans-unit id="249dd3da03ade25e85ed3f170f773c314e775f7e" translate="yes" xml:space="preserve">
          <source>6.60.11. Blackfin Built-in Functions</source>
          <target state="translated">6.60.11. 블랙 핀 내장 함수</target>
        </trans-unit>
        <trans-unit id="b1a8845c4da6bc2dff9b9f55234dd6d005ddf9c8" translate="yes" xml:space="preserve">
          <source>6.60.12 FR-V Built-in Functions</source>
          <target state="translated">6.60.12 FR-V 내장 기능</target>
        </trans-unit>
        <trans-unit id="424b304ff5723e9268cdbe2a63e527380c37c427" translate="yes" xml:space="preserve">
          <source>6.60.12. FR-V Built-in Functions</source>
          <target state="translated">6.60.12. FR-V 내장 기능</target>
        </trans-unit>
        <trans-unit id="02f9de86c8b6787f37719f848ce272c63ee62b6d" translate="yes" xml:space="preserve">
          <source>6.60.12.1 Argument Types</source>
          <target state="translated">6.60.12.1 인수 유형</target>
        </trans-unit>
        <trans-unit id="66e775b5075e63b9ce0948170b6c65ea5f16d00b" translate="yes" xml:space="preserve">
          <source>6.60.12.1. Argument Types</source>
          <target state="translated">6.60.12.1. 인수 유형</target>
        </trans-unit>
        <trans-unit id="b8361074f41acc851707321969641bc969f71706" translate="yes" xml:space="preserve">
          <source>6.60.12.2 Directly-Mapped Integer Functions</source>
          <target state="translated">6.60.12.2 직접 매핑 된 정수 함수</target>
        </trans-unit>
        <trans-unit id="c384e8bf2c4e2c3956c90323ed6e0d05001cc76f" translate="yes" xml:space="preserve">
          <source>6.60.12.2. Directly-Mapped Integer Functions</source>
          <target state="translated">6.60.12.2. 직접 매핑 된 정수 함수</target>
        </trans-unit>
        <trans-unit id="feaec6cafdffccf1202e668f4596207eeb9edeb8" translate="yes" xml:space="preserve">
          <source>6.60.12.3 Directly-Mapped Media Functions</source>
          <target state="translated">6.60.12.3 직접 매핑 된 미디어 기능</target>
        </trans-unit>
        <trans-unit id="a2fe7a4aedda25ea1b89d377484e06f7cb6cd2a4" translate="yes" xml:space="preserve">
          <source>6.60.12.3. Directly-Mapped Media Functions</source>
          <target state="translated">6.60.12.3. 직접 매핑 된 미디어 기능</target>
        </trans-unit>
        <trans-unit id="27f8a01b7b27c75d52637c42eff35d844bbf6402" translate="yes" xml:space="preserve">
          <source>6.60.12.4 Raw Read/Write Functions</source>
          <target state="translated">6.60.12.4 원시 읽기 / 쓰기 기능</target>
        </trans-unit>
        <trans-unit id="14ab6d4d011e4055275bd67cc27cab875b63bce8" translate="yes" xml:space="preserve">
          <source>6.60.12.4. Raw Read/Write Functions</source>
          <target state="translated">6.60.12.4. 원시 읽기 / 쓰기 기능</target>
        </trans-unit>
        <trans-unit id="419bbaaf508811d7de7acc137d73c198eb5af5fb" translate="yes" xml:space="preserve">
          <source>6.60.12.5 Other Built-in Functions</source>
          <target state="translated">6.60.12.5 기타 내장 기능</target>
        </trans-unit>
        <trans-unit id="8a4d21dbb136076b5cdd293901ed75d9dbd245ac" translate="yes" xml:space="preserve">
          <source>6.60.12.5. Other Built-in Functions</source>
          <target state="translated">6.60.12.5. 기타 내장 기능</target>
        </trans-unit>
        <trans-unit id="289bd0df1dfa2503e4531129ffcaa1cd263e7dc1" translate="yes" xml:space="preserve">
          <source>6.60.13 MIPS DSP Built-in Functions</source>
          <target state="translated">6.60.13 MIPS DSP 내장 기능</target>
        </trans-unit>
        <trans-unit id="54344c796e546ebe2fd7d250bcd468b733679467" translate="yes" xml:space="preserve">
          <source>6.60.13. MIPS DSP Built-in Functions</source>
          <target state="translated">6.60.13. MIPS DSP 내장 기능</target>
        </trans-unit>
        <trans-unit id="59d467622b23b77f2c06268d64c5f8961422cfe3" translate="yes" xml:space="preserve">
          <source>6.60.14 MIPS Paired-Single Support</source>
          <target state="translated">6.60.14 MIPS 페어 드 싱글 지원</target>
        </trans-unit>
        <trans-unit id="dc68d439ea3f36783a66e14442342b77c1b51ddf" translate="yes" xml:space="preserve">
          <source>6.60.14. MIPS Paired-Single Support</source>
          <target state="translated">6.60.14. MIPS 페어 드 싱글 지원</target>
        </trans-unit>
        <trans-unit id="941c357f07ef7cf635e289e927c3e469f90acb25" translate="yes" xml:space="preserve">
          <source>6.60.15 MIPS Loongson Built-in Functions</source>
          <target state="translated">6.60.15 MIPS Loongson 내장 기능</target>
        </trans-unit>
        <trans-unit id="cbcab85b8b29c841627c6efc6dd87144685bfcdb" translate="yes" xml:space="preserve">
          <source>6.60.15. MIPS Loongson Built-in Functions</source>
          <target state="translated">6.60.15. MIPS Loongson 내장 기능</target>
        </trans-unit>
        <trans-unit id="f52e7f02237a9e6fc2b909bf70a909ebfcfbb661" translate="yes" xml:space="preserve">
          <source>6.60.15.1 Paired-Single Arithmetic</source>
          <target state="translated">6.60.15.1 한 쌍의 산술</target>
        </trans-unit>
        <trans-unit id="ee1268d807512f5e9a882e50d3c52914c4e58c8b" translate="yes" xml:space="preserve">
          <source>6.60.15.1. Paired-Single Arithmetic</source>
          <target state="translated">6.60.15.1. 한 쌍의 산술</target>
        </trans-unit>
        <trans-unit id="f3376770a6496b3c2345aff0d5f9f9d4e4da68fe" translate="yes" xml:space="preserve">
          <source>6.60.15.2 Paired-Single Built-in Functions</source>
          <target state="translated">6.60.15.2 한 쌍의 내장 기능</target>
        </trans-unit>
        <trans-unit id="bfb6356fa21cc7b9aa2dee2d1e880cbb719f4082" translate="yes" xml:space="preserve">
          <source>6.60.15.2. Paired-Single Built-in Functions</source>
          <target state="translated">6.60.15.2. 내장 된 단일 기능</target>
        </trans-unit>
        <trans-unit id="368b6f2af09ca04c90e2b5efdd369c819795080d" translate="yes" xml:space="preserve">
          <source>6.60.15.3 MIPS-3D Built-in Functions</source>
          <target state="translated">6.60.15.3 MIPS-3D 내장 기능</target>
        </trans-unit>
        <trans-unit id="6bd7085ea2a602cd31543a6f86de96c264c10485" translate="yes" xml:space="preserve">
          <source>6.60.15.3. MIPS-3D Built-in Functions</source>
          <target state="translated">6.60.15.3. MIPS-3D 내장 기능</target>
        </trans-unit>
        <trans-unit id="41e2e540bfc8a7de0295dee59b82985ef916ecb5" translate="yes" xml:space="preserve">
          <source>6.60.16 MIPS SIMD Architecture (MSA) Support</source>
          <target state="translated">6.60.16 MIPS SIMD 아키텍처 (MSA) 지원</target>
        </trans-unit>
        <trans-unit id="eaecba1ea5f33312e6715e73f839d2a9980ee993" translate="yes" xml:space="preserve">
          <source>6.60.16. MIPS SIMD Architecture (MSA) Support</source>
          <target state="translated">6.60.16. MIPS SIMD 아키텍처 (MSA) 지원</target>
        </trans-unit>
        <trans-unit id="d7005c4ec6c19d51257988f510b5caa1cf33738c" translate="yes" xml:space="preserve">
          <source>6.60.16.1 MIPS SIMD Architecture Built-in Functions</source>
          <target state="translated">6.60.16.1 MIPS SIMD 아키텍처 내장 기능</target>
        </trans-unit>
        <trans-unit id="06f366e3349333fad754fd9c01947748e63f5857" translate="yes" xml:space="preserve">
          <source>6.60.16.1. MIPS SIMD Architecture Built-in Functions</source>
          <target state="translated">6.60.16.1. MIPS SIMD 아키텍처 내장 기능</target>
        </trans-unit>
        <trans-unit id="2d72d92d2664549b77771eb8e6ff672b4b6d65c2" translate="yes" xml:space="preserve">
          <source>6.60.17 Other MIPS Built-in Functions</source>
          <target state="translated">6.60.17 기타 MIPS 내장 기능</target>
        </trans-unit>
        <trans-unit id="f9be4de04739aec55e5b253c0c26c8f679d3bd4b" translate="yes" xml:space="preserve">
          <source>6.60.17. Other MIPS Built-in Functions</source>
          <target state="translated">6.60.17. 기타 MIPS 내장 기능</target>
        </trans-unit>
        <trans-unit id="1e53aebd9eab90c9ef1c9c116d3c9dbc596cbef4" translate="yes" xml:space="preserve">
          <source>6.60.18 MSP430 Built-in Functions</source>
          <target state="translated">6.60.18 MSP430 내장 기능</target>
        </trans-unit>
        <trans-unit id="cf589eed9ed26a608f59a5e76d53e97a0a2136f6" translate="yes" xml:space="preserve">
          <source>6.60.18. MSP430 Built-in Functions</source>
          <target state="translated">6.60.18. MSP430 내장 기능</target>
        </trans-unit>
        <trans-unit id="f185f182ae0fe2d2d53988f87c644a7aa4e82007" translate="yes" xml:space="preserve">
          <source>6.60.19 NDS32 Built-in Functions</source>
          <target state="translated">6.60.19 NDS32 내장 기능</target>
        </trans-unit>
        <trans-unit id="5dde54915af64ddcdb3a2307985acd0c0086f754" translate="yes" xml:space="preserve">
          <source>6.60.19. NDS32 Built-in Functions</source>
          <target state="translated">6.60.19. NDS32 내장 기능</target>
        </trans-unit>
        <trans-unit id="26f4c2f65815639e1ede5b163dd505e18c0dbd3d" translate="yes" xml:space="preserve">
          <source>6.60.2 Alpha Built-in Functions</source>
          <target state="translated">6.60.2 알파 내장 함수</target>
        </trans-unit>
        <trans-unit id="d40720f64cb17e017e3cfb24f9e424a51a67d5bd" translate="yes" xml:space="preserve">
          <source>6.60.2. Alpha Built-in Functions</source>
          <target state="translated">6.60.2. 알파 내장 함수</target>
        </trans-unit>
        <trans-unit id="e266ed549743a3feb13d55d93973fc64482f54b6" translate="yes" xml:space="preserve">
          <source>6.60.20 picoChip Built-in Functions</source>
          <target state="translated">6.60.20 picoChip 내장 함수</target>
        </trans-unit>
        <trans-unit id="90149dcf5f6fbc90e2fcb5aa3d2325589cf0b24e" translate="yes" xml:space="preserve">
          <source>6.60.20. picoChip Built-in Functions</source>
          <target state="translated">6.60.20. picoChip 내장 함수</target>
        </trans-unit>
        <trans-unit id="1301c139257d75a0a60d4193468fc4eda71ff490" translate="yes" xml:space="preserve">
          <source>6.60.21 Basic PowerPC Built-in Functions</source>
          <target state="translated">6.60.21 기본 PowerPC 내장 기능</target>
        </trans-unit>
        <trans-unit id="336649ca3da98825d01b6ad0807bbb123a2ed541" translate="yes" xml:space="preserve">
          <source>6.60.21. Basic PowerPC Built-in Functions</source>
          <target state="translated">6.60.21. 기본 PowerPC 내장 기능</target>
        </trans-unit>
        <trans-unit id="9472a4f69a0d3b0e13a972f6578ca73a8e43a1cc" translate="yes" xml:space="preserve">
          <source>6.60.21.1 Basic PowerPC Built-in Functions Available on all Configurations</source>
          <target state="translated">6.60.21.1 모든 구성에서 사용 가능한 기본 PowerPC 내장 기능</target>
        </trans-unit>
        <trans-unit id="ff3a5592456652a592234349f99e3d520d95f9b2" translate="yes" xml:space="preserve">
          <source>6.60.21.1. Basic PowerPC Built-in Functions Available on all Configurations</source>
          <target state="translated">6.60.21.1. 모든 구성에서 사용 가능한 기본 PowerPC 내장 기능</target>
        </trans-unit>
        <trans-unit id="e38b2b882ad834b1d615d44cd9a69e36026a1112" translate="yes" xml:space="preserve">
          <source>6.60.21.2 Basic PowerPC Built-in Functions Available on ISA 2.05</source>
          <target state="translated">6.60.21.2 ISA 2.05에서 사용 가능한 기본 PowerPC 내장 기능</target>
        </trans-unit>
        <trans-unit id="bddef17583f9e0babf85e3c7ae383ea5a1417070" translate="yes" xml:space="preserve">
          <source>6.60.21.2. Basic PowerPC Built-in Functions Available on ISA 2.05</source>
          <target state="translated">6.60.21.2. ISA 2.05에서 사용 가능한 기본 PowerPC 내장 기능</target>
        </trans-unit>
        <trans-unit id="8648c355a6eefaa9ae0d71457488f5cb19117a1c" translate="yes" xml:space="preserve">
          <source>6.60.21.3 Basic PowerPC Built-in Functions Available on ISA 2.06</source>
          <target state="translated">6.60.21.3 ISA 2.06에서 사용 가능한 기본 PowerPC 내장 기능</target>
        </trans-unit>
        <trans-unit id="328f6bfe41531bba908b1a467f64581f5c9ab3a2" translate="yes" xml:space="preserve">
          <source>6.60.21.3. Basic PowerPC Built-in Functions Available on ISA 2.06</source>
          <target state="translated">6.60.21.3. ISA 2.06에서 사용 가능한 기본 PowerPC 내장 기능</target>
        </trans-unit>
        <trans-unit id="2e400fc69bdf29a645324c8752f8c2622f549831" translate="yes" xml:space="preserve">
          <source>6.60.21.4 Basic PowerPC Built-in Functions Available on ISA 2.07</source>
          <target state="translated">6.60.21.4 ISA 2.07에서 사용 가능한 기본 PowerPC 내장 기능</target>
        </trans-unit>
        <trans-unit id="fb8b283b62c461dc758f25dfb996b0afadd1b1e9" translate="yes" xml:space="preserve">
          <source>6.60.21.4. Basic PowerPC Built-in Functions Available on ISA 2.07</source>
          <target state="translated">6.60.21.4. ISA 2.07에서 사용 가능한 기본 PowerPC 내장 기능</target>
        </trans-unit>
        <trans-unit id="ed68b02fb12f1990f72abb60f05330fa05245b9c" translate="yes" xml:space="preserve">
          <source>6.60.21.5 Basic PowerPC Built-in Functions Available on ISA 3.0</source>
          <target state="translated">6.60.21.5 ISA 3.0에서 사용 가능한 기본 PowerPC 내장 기능</target>
        </trans-unit>
        <trans-unit id="9775f089cab3a6c74c41648fea9265ec0bf82fe6" translate="yes" xml:space="preserve">
          <source>6.60.21.5. Basic PowerPC Built-in Functions Available on ISA 3.0</source>
          <target state="translated">6.60.21.5. ISA 3.0에서 사용 가능한 기본 PowerPC 내장 기능</target>
        </trans-unit>
        <trans-unit id="e3fc89b61014fb23a7fad539c04ea078cc14b5c4" translate="yes" xml:space="preserve">
          <source>6.60.22 PowerPC AltiVec/VSX Built-in Functions</source>
          <target state="translated">6.60.22 PowerPC AltiVec / VSX 내장 기능</target>
        </trans-unit>
        <trans-unit id="1170895b039eec104d660fb1d5114c0d67584292" translate="yes" xml:space="preserve">
          <source>6.60.22. PowerPC AltiVec/VSX Built-in Functions</source>
          <target state="translated">6.60.22. PowerPC AltiVec / VSX 내장 기능</target>
        </trans-unit>
        <trans-unit id="4099c2081f447797160a050a1ad3c9792675c328" translate="yes" xml:space="preserve">
          <source>6.60.22.1 PowerPC AltiVec Built-in Functions on ISA 2.05</source>
          <target state="translated">6.60.22.1 ISA 2.05의 PowerPC AltiVec 내장 기능</target>
        </trans-unit>
        <trans-unit id="d7158117ef3552c9ee6b8d70f93783a98bd22432" translate="yes" xml:space="preserve">
          <source>6.60.22.1. PowerPC AltiVec Built-in Functions on ISA 2.05</source>
          <target state="translated">6.60.22.1. ISA 2.05의 PowerPC AltiVec 내장 기능</target>
        </trans-unit>
        <trans-unit id="5e845b437dab869d187e8860c39fc5103801464e" translate="yes" xml:space="preserve">
          <source>6.60.22.2 PowerPC AltiVec Built-in Functions Available on ISA 2.06</source>
          <target state="translated">6.60.22.2 ISA 2.06에서 사용 가능한 PowerPC AltiVec 내장 기능</target>
        </trans-unit>
        <trans-unit id="ccb37ccf21aacb0249db3d36cc53b40ad3209fa9" translate="yes" xml:space="preserve">
          <source>6.60.22.2. PowerPC AltiVec Built-in Functions Available on ISA 2.06</source>
          <target state="translated">6.60.22.2. ISA 2.06에서 사용 가능한 PowerPC AltiVec 내장 기능</target>
        </trans-unit>
        <trans-unit id="1f7f8ed8478400b77e5fc80cac1c1f55cfc87cc1" translate="yes" xml:space="preserve">
          <source>6.60.22.3 PowerPC AltiVec Built-in Functions Available on ISA 2.07</source>
          <target state="translated">6.60.22.3 ISA 2.07에서 사용 가능한 PowerPC AltiVec 내장 기능</target>
        </trans-unit>
        <trans-unit id="cdda5c062c1474776c8dd34526ec266058858a37" translate="yes" xml:space="preserve">
          <source>6.60.22.3. PowerPC AltiVec Built-in Functions Available on ISA 2.07</source>
          <target state="translated">6.60.22.3. ISA 2.07에서 사용 가능한 PowerPC AltiVec 내장 기능</target>
        </trans-unit>
        <trans-unit id="c3282d98a0b87088c67704172055da044dd4fe82" translate="yes" xml:space="preserve">
          <source>6.60.22.4 PowerPC AltiVec Built-in Functions Available on ISA 3.0</source>
          <target state="translated">6.60.22.4 ISA 3.0에서 사용 가능한 PowerPC AltiVec 내장 기능</target>
        </trans-unit>
        <trans-unit id="dc1fedb2bfefaa9c2d0c5b119f2ce20982ded1c6" translate="yes" xml:space="preserve">
          <source>6.60.22.4. PowerPC AltiVec Built-in Functions Available on ISA 3.0</source>
          <target state="translated">6.60.22.4. ISA 3.0에서 사용 가능한 PowerPC AltiVec 내장 기능</target>
        </trans-unit>
        <trans-unit id="0502f8d6f41a50d9b24f1f41987d7968ccee7e1d" translate="yes" xml:space="preserve">
          <source>6.60.23 PowerPC Hardware Transactional Memory Built-in Functions</source>
          <target state="translated">6.60.23 PowerPC 하드웨어 트랜잭션 메모리 내장 기능</target>
        </trans-unit>
        <trans-unit id="80b39a830534b0f17ac910d2adc07bc2ab01aa14" translate="yes" xml:space="preserve">
          <source>6.60.23. PowerPC Hardware Transactional Memory Built-in Functions</source>
          <target state="translated">6.60.23. PowerPC 하드웨어 트랜잭션 메모리 내장 기능</target>
        </trans-unit>
        <trans-unit id="79abb09405f856bad23575b8160c4ec613ea2cef" translate="yes" xml:space="preserve">
          <source>6.60.23.1 PowerPC HTM Low Level Built-in Functions</source>
          <target state="translated">6.60.23.1 PowerPC HTM 저수준 내장 기능</target>
        </trans-unit>
        <trans-unit id="1e9f0eb5997affabaaafaf802e1e8532d25021ca" translate="yes" xml:space="preserve">
          <source>6.60.23.2 PowerPC HTM High Level Inline Functions</source>
          <target state="translated">6.60.23.2 PowerPC HTM 고급 인라인 기능</target>
        </trans-unit>
        <trans-unit id="74dde9e95bcfc60b3108a9c10d2b6793c505803c" translate="yes" xml:space="preserve">
          <source>6.60.24 PowerPC Atomic Memory Operation Functions</source>
          <target state="translated">6.60.24 PowerPC 원자 메모리 작동 기능</target>
        </trans-unit>
        <trans-unit id="af9df679c92d65535da0fac194f2fd5dc609f45a" translate="yes" xml:space="preserve">
          <source>6.60.24. PowerPC Atomic Memory Operation Functions</source>
          <target state="translated">6.60.24. PowerPC 원자 메모리 작동 기능</target>
        </trans-unit>
        <trans-unit id="f9ba8100601d40a23cb052ef3931793cb9776de8" translate="yes" xml:space="preserve">
          <source>6.60.25 RX Built-in Functions</source>
          <target state="translated">6.60.25 RX 내장 함수</target>
        </trans-unit>
        <trans-unit id="d6dec97a295600dd53c1f1c34a53e35125645d9c" translate="yes" xml:space="preserve">
          <source>6.60.25. RX Built-in Functions</source>
          <target state="translated">6.60.25. RX 내장 기능</target>
        </trans-unit>
        <trans-unit id="61123a2b8e7ff71005a667b491e2dbb49539c5f6" translate="yes" xml:space="preserve">
          <source>6.60.26 S/390 System z Built-in Functions</source>
          <target state="translated">6.60.26 S / 390 System z 내장 기능</target>
        </trans-unit>
        <trans-unit id="be7fdc887f6d2525a0c409731bf11e429f7cd8e9" translate="yes" xml:space="preserve">
          <source>6.60.26. S/390 System z Built-in Functions</source>
          <target state="translated">6.60.26. S / 390 System z 내장 기능</target>
        </trans-unit>
        <trans-unit id="1bfb3be709344ae26efed327c71d12bfe284c3a5" translate="yes" xml:space="preserve">
          <source>6.60.27 SH Built-in Functions</source>
          <target state="translated">6.60.27 SH 내장 기능</target>
        </trans-unit>
        <trans-unit id="392d808017948f7e707b9306bc8cd4667f1d45d3" translate="yes" xml:space="preserve">
          <source>6.60.27. SH Built-in Functions</source>
          <target state="translated">6.60.27. SH 내장 기능</target>
        </trans-unit>
        <trans-unit id="805cdf781e537274b56959dbd3ffc94a8c41aa37" translate="yes" xml:space="preserve">
          <source>6.60.28 SPARC VIS Built-in Functions</source>
          <target state="translated">6.60.28 SPARC VIS 내장 기능</target>
        </trans-unit>
        <trans-unit id="fdda17191071fb29c923ba188fbc6fd906f5a754" translate="yes" xml:space="preserve">
          <source>6.60.28. SPARC VIS Built-in Functions</source>
          <target state="translated">6.60.28. SPARC VIS 내장 기능</target>
        </trans-unit>
        <trans-unit id="ee3130b68c65f7b0d08dde6f566c3a5f223388ec" translate="yes" xml:space="preserve">
          <source>6.60.29 SPU Built-in Functions</source>
          <target state="translated">6.60.29 SPU 내장 기능</target>
        </trans-unit>
        <trans-unit id="2601335231302b75650bbb1ac52b1099a68463c4" translate="yes" xml:space="preserve">
          <source>6.60.29. SPU Built-in Functions</source>
          <target state="translated">6.60.29. SPU 내장 기능</target>
        </trans-unit>
        <trans-unit id="d4f78653e0dd80aa41f3d20d36c881fc12e01261" translate="yes" xml:space="preserve">
          <source>6.60.3 Altera Nios II Built-in Functions</source>
          <target state="translated">6.60.3 Altera Nios II 내장 기능</target>
        </trans-unit>
        <trans-unit id="da13c3d1a772d7649d0e7af00d8e898a52f9dc0c" translate="yes" xml:space="preserve">
          <source>6.60.3. Altera Nios II Built-in Functions</source>
          <target state="translated">6.60.3. Altera Nios II 내장 기능</target>
        </trans-unit>
        <trans-unit id="d521a0a3d69248b099adfdaa2e9753333e5b4e2a" translate="yes" xml:space="preserve">
          <source>6.60.30 TI C6X Built-in Functions</source>
          <target state="translated">6.60.30 TI C6X 내장 기능</target>
        </trans-unit>
        <trans-unit id="41eea7448e6b90944cd1e7e247a2b81b1b2dcb56" translate="yes" xml:space="preserve">
          <source>6.60.30. TI C6X Built-in Functions</source>
          <target state="translated">6.60.30. TI C6X 내장 기능</target>
        </trans-unit>
        <trans-unit id="09da6a8a73c6be6f7aafb527ccaae2f3f1a3f86f" translate="yes" xml:space="preserve">
          <source>6.60.31 TILE-Gx Built-in Functions</source>
          <target state="translated">6.60.31 TILE-Gx 내장 기능</target>
        </trans-unit>
        <trans-unit id="d6c1b2e3150afe0db5cb3cd079016082a5659472" translate="yes" xml:space="preserve">
          <source>6.60.31. TILE-Gx Built-in Functions</source>
          <target state="translated">6.60.31. TILE-Gx 내장 기능</target>
        </trans-unit>
        <trans-unit id="16cb9954d866ee6136974ab2933d1ad5e591a29a" translate="yes" xml:space="preserve">
          <source>6.60.32 TILEPro Built-in Functions</source>
          <target state="translated">6.60.32 TILEPro 내장 기능</target>
        </trans-unit>
        <trans-unit id="799a7577d20a65b3d94f0db94683ae49d0a71b2b" translate="yes" xml:space="preserve">
          <source>6.60.32. TILEPro Built-in Functions</source>
          <target state="translated">6.60.32. TILEPro 내장 기능</target>
        </trans-unit>
        <trans-unit id="b7e320ca3911c274d4cad4a596d111792fb1d925" translate="yes" xml:space="preserve">
          <source>6.60.33 x86 Built-in Functions</source>
          <target state="translated">6.60.33 x86 내장 기능</target>
        </trans-unit>
        <trans-unit id="8d43cbf41afff2cd660d38454725bc7af6c0d2f9" translate="yes" xml:space="preserve">
          <source>6.60.33. x86 Built-in Functions</source>
          <target state="translated">6.60.33. x86 내장 함수</target>
        </trans-unit>
        <trans-unit id="e0fddb3422bd9927b04efa1d9e549354789a88bd" translate="yes" xml:space="preserve">
          <source>6.60.34 x86 Transactional Memory Intrinsics</source>
          <target state="translated">6.60.34 x86 트랜잭션 메모리 내장 함수</target>
        </trans-unit>
        <trans-unit id="205c1ba8e0e449d4a5a139446ea754be68baedc1" translate="yes" xml:space="preserve">
          <source>6.60.34. x86 Transactional Memory Intrinsics</source>
          <target state="translated">6.60.34. x86 트랜잭션 메모리 내장 함수</target>
        </trans-unit>
        <trans-unit id="b5cdbdb7348ffdc7d3aee3fec433147270141e0a" translate="yes" xml:space="preserve">
          <source>6.60.35 x86 Control-Flow Protection Intrinsics</source>
          <target state="translated">6.60.35 x86 제어 흐름 보호 본질</target>
        </trans-unit>
        <trans-unit id="4e1f24382c0bbf0c8d400c649bba7c05c00a8d2b" translate="yes" xml:space="preserve">
          <source>6.60.35. x86 Control-Flow Protection Intrinsics</source>
          <target state="translated">6.60.35. x86 제어 흐름 보호 본질</target>
        </trans-unit>
        <trans-unit id="35d13ca2ba9e9923c822b705e34d350f81281be7" translate="yes" xml:space="preserve">
          <source>6.60.4 ARC Built-in Functions</source>
          <target state="translated">6.60.4 ARC 내장 기능</target>
        </trans-unit>
        <trans-unit id="60c9136375e4d87c9aeae313e3b25ae236f1abaf" translate="yes" xml:space="preserve">
          <source>6.60.4. ARC Built-in Functions</source>
          <target state="translated">6.60.4. ARC 내장 기능</target>
        </trans-unit>
        <trans-unit id="e24c758e65419e4bd1d80f6caa3d144329159782" translate="yes" xml:space="preserve">
          <source>6.60.5 ARC SIMD Built-in Functions</source>
          <target state="translated">6.60.5 ARC SIMD 내장 기능</target>
        </trans-unit>
        <trans-unit id="0fb448d8fa464c1010324979ee5049ed18c45922" translate="yes" xml:space="preserve">
          <source>6.60.5. ARC SIMD Built-in Functions</source>
          <target state="translated">6.60.5. ARC SIMD 내장 기능</target>
        </trans-unit>
        <trans-unit id="70c33156526e02bdee0c1cb7eee7658bd59dde03" translate="yes" xml:space="preserve">
          <source>6.60.6 ARM iWMMXt Built-in Functions</source>
          <target state="translated">6.60.6 ARM iWMMXt 내장 함수</target>
        </trans-unit>
        <trans-unit id="7aae3382ce3ca19f45579f2305865919a532aab6" translate="yes" xml:space="preserve">
          <source>6.60.6. ARM iWMMXt Built-in Functions</source>
          <target state="translated">6.60.6. ARM iWMMXt 내장 함수</target>
        </trans-unit>
        <trans-unit id="01df4aa60083c98a464662e42ffb208d15c49ed2" translate="yes" xml:space="preserve">
          <source>6.60.7 ARM C Language Extensions (ACLE)</source>
          <target state="translated">6.60.7 ARM C 언어 확장 (ACLE)</target>
        </trans-unit>
        <trans-unit id="b3db053df4137fcd808f678ddc9047d1fbe198e2" translate="yes" xml:space="preserve">
          <source>6.60.7. ARM C Language Extensions (ACLE)</source>
          <target state="translated">6.60.7. ARM C 언어 확장 (ACLE)</target>
        </trans-unit>
        <trans-unit id="ad6145c8b5576878021b6aaa93e3f75f005ae12f" translate="yes" xml:space="preserve">
          <source>6.60.8 ARM Floating Point Status and Control Intrinsics</source>
          <target state="translated">6.60.8 ARM 부동 소수점 상태 및 제어 내장 함수</target>
        </trans-unit>
        <trans-unit id="e1f834d5d88d58b6d9a8f6b747da5a542c9f894f" translate="yes" xml:space="preserve">
          <source>6.60.8. ARM Floating Point Status and Control Intrinsics</source>
          <target state="translated">6.60.8. ARM 부동 소수점 상태 및 제어 내장 함수</target>
        </trans-unit>
        <trans-unit id="dcbbfdf8663e7107af55ddef86e4e271418e313d" translate="yes" xml:space="preserve">
          <source>6.60.9 ARM ARMv8-M Security Extensions</source>
          <target state="translated">6.60.9 ARM ARMv8-M 보안 확장</target>
        </trans-unit>
        <trans-unit id="c54b7c7eda7b53ebb9799aa7c04448fdb0fec94b" translate="yes" xml:space="preserve">
          <source>6.60.9. ARM ARMv8-M Security Extensions</source>
          <target state="translated">6.60.9. ARM ARMv8-M 보안 확장</target>
        </trans-unit>
        <trans-unit id="42bb6a34bd5acffcf19611139abd3b9a9242dc16" translate="yes" xml:space="preserve">
          <source>6.61 Format Checks Specific to Particular Target Machines</source>
          <target state="translated">6.61 특정 대상 기계에 특정한 형식 검사</target>
        </trans-unit>
        <trans-unit id="efa03e604836a1ded2e370728106891f59baa987" translate="yes" xml:space="preserve">
          <source>6.61. Format Checks Specific to Particular Target Machines</source>
          <target state="translated">6.61. 특정 대상 기계에 특정한 형식 검사</target>
        </trans-unit>
        <trans-unit id="4ea13888b42f6062ee9644f5d95087fb2d0548a8" translate="yes" xml:space="preserve">
          <source>6.61.1 Solaris Format Checks</source>
          <target state="translated">6.61.1 Solaris 형식 확인</target>
        </trans-unit>
        <trans-unit id="432a7467324ae8382cab98c47e8636a3a6fd98c8" translate="yes" xml:space="preserve">
          <source>6.61.1. Solaris Format Checks</source>
          <target state="translated">6.61.1. Solaris 형식 확인</target>
        </trans-unit>
        <trans-unit id="62f76a8bb2b81a01fd2e8e4be6205a37f78866d2" translate="yes" xml:space="preserve">
          <source>6.61.2 Darwin Format Checks</source>
          <target state="translated">6.61.2 다윈 형식 검사</target>
        </trans-unit>
        <trans-unit id="eb52011e1053a0626f4461ca19f8a87c469a881d" translate="yes" xml:space="preserve">
          <source>6.61.2. Darwin Format Checks</source>
          <target state="translated">6.61.2. 다윈 형식 검사</target>
        </trans-unit>
        <trans-unit id="de1a81ca92ecfb00a76a385f2c29cfea5fb36b2c" translate="yes" xml:space="preserve">
          <source>6.62 Pragmas Accepted by GCC</source>
          <target state="translated">6.62 GCC에 의해 수용된 실용</target>
        </trans-unit>
        <trans-unit id="4431bb889f869536363e151b5d19dddd57bf02ca" translate="yes" xml:space="preserve">
          <source>6.62. Pragmas Accepted by GCC</source>
          <target state="translated">6.62. GCC에 의해 허용되는 실용</target>
        </trans-unit>
        <trans-unit id="bda5bf347f61daaea19109191b98f0a15650b8b1" translate="yes" xml:space="preserve">
          <source>6.62.1 AArch64 Pragmas</source>
          <target state="translated">6.62.1 AArch64 프라 그마</target>
        </trans-unit>
        <trans-unit id="d30e4f881bd7d79b2cb531a589b61e8b41323c14" translate="yes" xml:space="preserve">
          <source>6.62.1. AArch64 Pragmas</source>
          <target state="translated">6.62.1. AArch64 Pragmas</target>
        </trans-unit>
        <trans-unit id="0fae9fb9da232f45ae5b2f4cf65fb19b73adc7a6" translate="yes" xml:space="preserve">
          <source>6.62.10 Structure-Layout Pragmas</source>
          <target state="translated">6.62.10 구조 레이아웃 프라 그마</target>
        </trans-unit>
        <trans-unit id="ae6183dd0a2e92314086348421497878213aa8ab" translate="yes" xml:space="preserve">
          <source>6.62.10. Structure-Layout Pragmas</source>
          <target state="translated">6.62.10. 구조 레이아웃 프라 그마</target>
        </trans-unit>
        <trans-unit id="438b4eb8fa731de46f25a07fcb3f8171573534c1" translate="yes" xml:space="preserve">
          <source>6.62.11 Weak Pragmas</source>
          <target state="translated">6.62.11 약한 실용</target>
        </trans-unit>
        <trans-unit id="456e62774787d30f104850d6c117223b4ca65e63" translate="yes" xml:space="preserve">
          <source>6.62.11. Weak Pragmas</source>
          <target state="translated">6.62.11. 약한 프라 그마</target>
        </trans-unit>
        <trans-unit id="c71fddfed172c3c47a5617262f7389e419da6a30" translate="yes" xml:space="preserve">
          <source>6.62.12 Diagnostic Pragmas</source>
          <target state="translated">6.62.12 진단 실습</target>
        </trans-unit>
        <trans-unit id="5c1d7bcfe48977be052c923fdd855e401c28a970" translate="yes" xml:space="preserve">
          <source>6.62.12. Diagnostic Pragmas</source>
          <target state="translated">6.62.12. 진단 실습</target>
        </trans-unit>
        <trans-unit id="d9651e3d5a6fddfe6cb23700387aeb74fa7e4c5e" translate="yes" xml:space="preserve">
          <source>6.62.13 Visibility Pragmas</source>
          <target state="translated">6.62.13 가시성 프라 그마</target>
        </trans-unit>
        <trans-unit id="420d13aec1f3439f14212344922e0495baa3e830" translate="yes" xml:space="preserve">
          <source>6.62.13. Visibility Pragmas</source>
          <target state="translated">6.62.13. 가시성 프라 그마</target>
        </trans-unit>
        <trans-unit id="165ecb776ec64d55e72b67f6cbdd91767b3e515d" translate="yes" xml:space="preserve">
          <source>6.62.14 Push/Pop Macro Pragmas</source>
          <target state="translated">6.62.14 푸시 / 팝 매크로 프라 그마</target>
        </trans-unit>
        <trans-unit id="5132533717fe6899bc26cc07e1a7025a5d3ebfe2" translate="yes" xml:space="preserve">
          <source>6.62.14. Push/Pop Macro Pragmas</source>
          <target state="translated">6.62.14. 푸시 / 팝 매크로 프라 그마</target>
        </trans-unit>
        <trans-unit id="7f1c2aa3588560918a28550b0424349ad6e1b7a5" translate="yes" xml:space="preserve">
          <source>6.62.15 Function Specific Option Pragmas</source>
          <target state="translated">6.62.15 기능별 옵션 프라 그마</target>
        </trans-unit>
        <trans-unit id="f653a842356d2bc3c04b2bc43fb0be16aa6c7f3f" translate="yes" xml:space="preserve">
          <source>6.62.15. Function Specific Option Pragmas</source>
          <target state="translated">6.62.15. 기능별 옵션 프라 그마</target>
        </trans-unit>
        <trans-unit id="04c7970b28a7d1be09e12f4c6317411cc29b52c6" translate="yes" xml:space="preserve">
          <source>6.62.16 Loop-Specific Pragmas</source>
          <target state="translated">6.62.16 루프 특정 프라 그마</target>
        </trans-unit>
        <trans-unit id="c834625e2bfe91127b6cef30d1dce2c3c55bb706" translate="yes" xml:space="preserve">
          <source>6.62.16. Loop-Specific Pragmas</source>
          <target state="translated">6.62.16. 루프 별 프라 그마</target>
        </trans-unit>
        <trans-unit id="b6d45f7966cc38de9f2e6c8087c373eb00b024b0" translate="yes" xml:space="preserve">
          <source>6.62.2 ARM Pragmas</source>
          <target state="translated">6.62.2 ARM 프라 그마</target>
        </trans-unit>
        <trans-unit id="d55c2b97863db22308a953f6f10f7923cefc6394" translate="yes" xml:space="preserve">
          <source>6.62.2. ARM Pragmas</source>
          <target state="translated">6.62.2. 팔 프라 그마</target>
        </trans-unit>
        <trans-unit id="29c229a076641fa035ba7fe4bdf9eae6c93e408d" translate="yes" xml:space="preserve">
          <source>6.62.3 M32C Pragmas</source>
          <target state="translated">6.62.3 M32C 프라 그마</target>
        </trans-unit>
        <trans-unit id="4f7f341cd26cf86a57920aeac9cf4af2995ddcf6" translate="yes" xml:space="preserve">
          <source>6.62.3. M32C Pragmas</source>
          <target state="translated">6.62.3. M32C 프라 그마</target>
        </trans-unit>
        <trans-unit id="bb1f7cc3ea05c699e2867b54f31561cd612fc258" translate="yes" xml:space="preserve">
          <source>6.62.4 MeP Pragmas</source>
          <target state="translated">6.62.4 MeP 프라 그마</target>
        </trans-unit>
        <trans-unit id="7978f32488b620c43c59e10d75dc82958337e3fc" translate="yes" xml:space="preserve">
          <source>6.62.4. MeP Pragmas</source>
          <target state="translated">6.62.4. MeP Pragmas</target>
        </trans-unit>
        <trans-unit id="ff197f0fa11a9cff509f115810e279a8f46ec8f4" translate="yes" xml:space="preserve">
          <source>6.62.5 RS/6000 and PowerPC Pragmas</source>
          <target state="translated">6.62.5 RS / 6000 및 PowerPC Pragma</target>
        </trans-unit>
        <trans-unit id="4b4183ab397bc7b54fbbcbca3023e75ae2913120" translate="yes" xml:space="preserve">
          <source>6.62.5. RS/6000 and PowerPC Pragmas</source>
          <target state="translated">6.62.5. RS / 6000 및 PowerPC Pragma</target>
        </trans-unit>
        <trans-unit id="e20fc523f7d32c58b397a602a3d99d1e3a2eaaad" translate="yes" xml:space="preserve">
          <source>6.62.6 S/390 Pragmas</source>
          <target state="translated">6.62.6 S / 390 프라 그마</target>
        </trans-unit>
        <trans-unit id="b76e37ec7520a2fa2139a1f0d79cb1fb3aef884f" translate="yes" xml:space="preserve">
          <source>6.62.6. S/390 Pragmas</source>
          <target state="translated">6.62.6. S / 390 프라 그마</target>
        </trans-unit>
        <trans-unit id="8c71d9cc1d24ddf8727f59deaa78ec5079fae321" translate="yes" xml:space="preserve">
          <source>6.62.7 Darwin Pragmas</source>
          <target state="translated">6.62.7 다윈 프라 그마</target>
        </trans-unit>
        <trans-unit id="daa60daa4acebf46449f93b7700a03ec2d4f157f" translate="yes" xml:space="preserve">
          <source>6.62.7. Darwin Pragmas</source>
          <target state="translated">6.62.7. 다윈 프라 그마</target>
        </trans-unit>
        <trans-unit id="0bd3e7bb008bf87a20384f8a5991fbf750279c77" translate="yes" xml:space="preserve">
          <source>6.62.8 Solaris Pragmas</source>
          <target state="translated">6.62.8 Solaris Pragma</target>
        </trans-unit>
        <trans-unit id="45028c6b0bd3d3723b2860251c45a4f942743e10" translate="yes" xml:space="preserve">
          <source>6.62.8. Solaris Pragmas</source>
          <target state="translated">6.62.8. 솔라리스 프라 그마</target>
        </trans-unit>
        <trans-unit id="e3b27be2b9370becdf7d3fb21a3f46a71cd0eca2" translate="yes" xml:space="preserve">
          <source>6.62.9 Symbol-Renaming Pragmas</source>
          <target state="translated">6.62.9 심볼 이름 바꾸기 프라 그마</target>
        </trans-unit>
        <trans-unit id="f5b6bc3b507503f6b21ae990c1bbfa8024f8bff5" translate="yes" xml:space="preserve">
          <source>6.62.9. Symbol-Renaming Pragmas</source>
          <target state="translated">6.62.9. 심볼 이름 바꾸기 프라 그마</target>
        </trans-unit>
        <trans-unit id="54ed4db541411e0aceb7adbcb3a6183c817f0121" translate="yes" xml:space="preserve">
          <source>6.63 Unnamed Structure and Union Fields</source>
          <target state="translated">6.63 이름이없는 구조와 연합 필드</target>
        </trans-unit>
        <trans-unit id="80d9e0996f730d9d7381653674fb5ce4c600c49b" translate="yes" xml:space="preserve">
          <source>6.63. Unnamed Structure and Union Fields</source>
          <target state="translated">6.63. 명명되지 않은 구조 및 연합 필드</target>
        </trans-unit>
        <trans-unit id="3e5301b09f31b81e8ffa4ac2694e9a5374b883a7" translate="yes" xml:space="preserve">
          <source>6.64 Thread-Local Storage</source>
          <target state="translated">6.64 스레드 로컬 스토리지</target>
        </trans-unit>
        <trans-unit id="7e21260c8f4e3175c931cf2d30b098d825b59b4a" translate="yes" xml:space="preserve">
          <source>6.64. Thread-Local Storage</source>
          <target state="translated">6.64. 스레드 로컬 스토리지</target>
        </trans-unit>
        <trans-unit id="c94f01c6243ac81b26a786a0ac2cd995d982092a" translate="yes" xml:space="preserve">
          <source>6.64.1 ISO/IEC 9899:1999 Edits for Thread-Local Storage</source>
          <target state="translated">6.64.1 ISO / IEC 9899 : 1999 스레드 로컬 스토리지 편집</target>
        </trans-unit>
        <trans-unit id="d59db7de5a42c2d1f678d417864441926bbb9b6b" translate="yes" xml:space="preserve">
          <source>6.64.1. ISO/IEC 9899:1999 Edits for Thread-Local Storage</source>
          <target state="translated">6.64.1. 스레드 로컬 스토리지에 대한 ISO / IEC 9899 : 1999 편집</target>
        </trans-unit>
        <trans-unit id="84d216acad410deaa27ac5b476f6dbf1e882cd2e" translate="yes" xml:space="preserve">
          <source>6.64.2 ISO/IEC 14882:1998 Edits for Thread-Local Storage</source>
          <target state="translated">6.64.2 ISO / IEC 14882 : 1998 스레드 로컬 저장소 편집</target>
        </trans-unit>
        <trans-unit id="cb2a3ccdb4e437c9ca91dd6ebd27b17f1418de28" translate="yes" xml:space="preserve">
          <source>6.64.2. ISO/IEC 14882:1998 Edits for Thread-Local Storage</source>
          <target state="translated">6.64.2. 스레드 로컬 스토리지에 대한 ISO / IEC 14882 : 1998 편집</target>
        </trans-unit>
        <trans-unit id="8c12098468b620e6e0dbc480e385ccf50d159a29" translate="yes" xml:space="preserve">
          <source>6.65 Binary Constants using the &amp;lsquo;</source>
          <target state="translated">6.65 '를 사용하는 이진 상수</target>
        </trans-unit>
        <trans-unit id="b48ebe102770cb43fd60e347393c1cfdff91be93" translate="yes" xml:space="preserve">
          <source>6.65 Binary Constants using the &amp;lsquo;&lt;samp&gt;0b&lt;/samp&gt;&amp;rsquo; Prefix</source>
          <target state="translated">6.65 '를 사용하는 이진 상수&lt;samp&gt;0b&lt;/samp&gt;접두사</target>
        </trans-unit>
        <trans-unit id="be160e34b93b4ed85dcc3394d34f9a0295866e9e" translate="yes" xml:space="preserve">
          <source>6.65. Binary Constants using the ‘0b’ Prefix</source>
          <target state="translated">6.65. '0b'접두사를 사용하는 이진 상수</target>
        </trans-unit>
        <trans-unit id="0f87a1908badf9833b053a43b42d0bdc41c2daa4" translate="yes" xml:space="preserve">
          <source>6.7 Referring to a Type with &lt;code&gt;typeof&lt;/code&gt;</source>
          <target state="translated">6.7 &lt;code&gt;typeof&lt;/code&gt; 를 가진 타입 참조</target>
        </trans-unit>
        <trans-unit id="aefb06ec4c0e2dc69a50d47f41a1d50376237626" translate="yes" xml:space="preserve">
          <source>6.7 Referring to a Type with typeof</source>
          <target state="translated">6.7 typeof를 가진 타입 참조</target>
        </trans-unit>
        <trans-unit id="0c49fbad5978135cf1a426aec9372d8464a45633" translate="yes" xml:space="preserve">
          <source>6.7. Referring to a Type with typeof</source>
          <target state="translated">6.7. typeof 타입을 참조</target>
        </trans-unit>
        <trans-unit id="4f813335557f53888cb2550fbd9949b0e13293c3" translate="yes" xml:space="preserve">
          <source>6.7.1 Storage-class specifiers</source>
          <target state="translated">6.7.1 스토리지 클래스 지정자</target>
        </trans-unit>
        <trans-unit id="e605723e7b7486f0e9995b0fdff3c3e6f78980a3" translate="yes" xml:space="preserve">
          <source>6.8 Conditionals with Omitted Operands</source>
          <target state="translated">6.8 피연산자가 생략 된 조건</target>
        </trans-unit>
        <trans-unit id="71cfb8c6529d641312b04cbb394cee8bff704c18" translate="yes" xml:space="preserve">
          <source>6.8. Conditionals with Omitted Operands</source>
          <target state="translated">6.8. 피연산자가 생략 된 조건</target>
        </trans-unit>
        <trans-unit id="509808d84bf4391815ff1e0f48032c94a5dd552a" translate="yes" xml:space="preserve">
          <source>6.9 128-bit Integers</source>
          <target state="translated">6.9 128 비트 정수</target>
        </trans-unit>
        <trans-unit id="7d7fb360b8cbf9867037d84c67d6d1de7d7c1ecd" translate="yes" xml:space="preserve">
          <source>6.9. 128-bit Integers</source>
          <target state="translated">6.9. 128 비트 정수</target>
        </trans-unit>
        <trans-unit id="5da6b1f7cb4c0dcdb8e768871631347d4b07f021" translate="yes" xml:space="preserve">
          <source>603e</source>
          <target state="translated">603e</target>
        </trans-unit>
        <trans-unit id="114ff28eca127e9602c8b936fb29c423fd1fa9c5" translate="yes" xml:space="preserve">
          <source>604e</source>
          <target state="translated">604e</target>
        </trans-unit>
        <trans-unit id="03827a73f7392a8a2d7f128028ae04c0cc1ea97e" translate="yes" xml:space="preserve">
          <source>64-bit global or out register for the SPARC-V8+ architecture.</source>
          <target state="translated">SPARC-V8 + 아키텍처의 64 비트 전역 또는 출력 레지스터.</target>
        </trans-unit>
        <trans-unit id="0ebec4c1a89498e8f46055720ebb54806bb505d7" translate="yes" xml:space="preserve">
          <source>68881 floating-point register, if available</source>
          <target state="translated">사용 가능한 경우 68881 부동 소수점 레지스터</target>
        </trans-unit>
        <trans-unit id="539abf25168d906f1e33d087f1ce65349de4307c" translate="yes" xml:space="preserve">
          <source>7 Extensions to the C++ Language</source>
          <target state="translated">C ++ 언어의 7 가지 확장</target>
        </trans-unit>
        <trans-unit id="3d0b72fe21bde25e12323d247ae6e948ee9534c0" translate="yes" xml:space="preserve">
          <source>7. Extensions to the C++ Language</source>
          <target state="translated">7. C ++ 언어의 확장</target>
        </trans-unit>
        <trans-unit id="1d5f965398181e8d3bebc851a2e432315a330bf6" translate="yes" xml:space="preserve">
          <source>7.1 When is a Volatile C++ Object Accessed?</source>
          <target state="translated">7.1 휘발성 C ++ 객체는 언제 액세스됩니까?</target>
        </trans-unit>
        <trans-unit id="853f0c2f739d6e0aac1dfbfcaf889f42ed518455" translate="yes" xml:space="preserve">
          <source>7.1. When is a Volatile C++ Object Accessed?</source>
          <target state="translated">7.1. 휘발성 C ++ 객체는 언제 액세스됩니까?</target>
        </trans-unit>
        <trans-unit id="bef3beb73f1515750648d016a4a7a8a0c3694d37" translate="yes" xml:space="preserve">
          <source>7.10 C++ Concepts</source>
          <target state="translated">7.10 C ++ 개념</target>
        </trans-unit>
        <trans-unit id="8fc78bc67bf4ddd1e6b8e4afb02ab4ba06cd4cb4" translate="yes" xml:space="preserve">
          <source>7.10. C++ Concepts</source>
          <target state="translated">7.10. C ++ 개념</target>
        </trans-unit>
        <trans-unit id="2b4d56917ec7187670a77e62832f6f218efd9151" translate="yes" xml:space="preserve">
          <source>7.11 Deprecated Features</source>
          <target state="translated">7.11 더 이상 사용되지 않는 기능</target>
        </trans-unit>
        <trans-unit id="25d1571215b7401ab96811e1ddf3f5c9661fcc2a" translate="yes" xml:space="preserve">
          <source>7.11. Deprecated Features</source>
          <target state="translated">7.11. 더 이상 사용되지 않는 기능</target>
        </trans-unit>
        <trans-unit id="f9c7d6c2a605d462a0586afd0551257f900486c8" translate="yes" xml:space="preserve">
          <source>7.12 Backwards Compatibility</source>
          <target state="translated">7.12 이전 버전과의 호환성</target>
        </trans-unit>
        <trans-unit id="8158692d11d4c5ce16243a26b915c3d457771e07" translate="yes" xml:space="preserve">
          <source>7.12. Backwards Compatibility</source>
          <target state="translated">7.12. 이전 버전과의 호환성</target>
        </trans-unit>
        <trans-unit id="5bed06be61cf3c39326d974fd2bfa12929c70689" translate="yes" xml:space="preserve">
          <source>7.2 Restricting Pointer Aliasing</source>
          <target state="translated">7.2 포인터 별명 제한</target>
        </trans-unit>
        <trans-unit id="71ddac46d553059ddefd1e2ffd6a4bc575de7a36" translate="yes" xml:space="preserve">
          <source>7.2. Restricting Pointer Aliasing</source>
          <target state="translated">7.2. 포인터 앨리어싱 제한</target>
        </trans-unit>
        <trans-unit id="eeed2a61b0a4a9a55ea4a85298afea6fa4289f69" translate="yes" xml:space="preserve">
          <source>7.3 Vague Linkage</source>
          <target state="translated">7.3 모호한 연결</target>
        </trans-unit>
        <trans-unit id="72fcc2b6cc76f51b583527cd969a50e71f8a7e8b" translate="yes" xml:space="preserve">
          <source>7.3. Vague Linkage</source>
          <target state="translated">7.3. 막연한 연계</target>
        </trans-unit>
        <trans-unit id="2cb4faf61d3ded4445028675e6091214c956c881" translate="yes" xml:space="preserve">
          <source>7.4 C++ Interface and Implementation Pragmas</source>
          <target state="translated">7.4 C ++ 인터페이스 및 구현 실습</target>
        </trans-unit>
        <trans-unit id="f6035c74bef56b0b9d8bf821ba5ccd1acb1d6bd1" translate="yes" xml:space="preserve">
          <source>7.4. C++ Interface and Implementation Pragmas</source>
          <target state="translated">7.4. C ++ 인터페이스 및 구현 실습</target>
        </trans-unit>
        <trans-unit id="eb1b9a447c991be6ed891f137dfb4db4aeb35a85" translate="yes" xml:space="preserve">
          <source>7.5 Where&amp;rsquo;s the Template?</source>
          <target state="translated">7.5 템플릿은 어디에 있습니까?</target>
        </trans-unit>
        <trans-unit id="f8803c530c0a015f8b53a5b7e977e437479f68c0" translate="yes" xml:space="preserve">
          <source>7.5. Where’s the Template?</source>
          <target state="translated">7.5. 템플릿은 어디에 있습니까?</target>
        </trans-unit>
        <trans-unit id="fb46a075836a495709d10084e1fbe7a3e23d4444" translate="yes" xml:space="preserve">
          <source>7.6 Extracting the Function Pointer from a Bound Pointer to Member Function</source>
          <target state="translated">7.6 바운드 포인터에서 멤버 함수로 함수 포인터 추출</target>
        </trans-unit>
        <trans-unit id="c38b0b58018016fcc11ef4b7d077c974744465d5" translate="yes" xml:space="preserve">
          <source>7.6. Extracting the Function Pointer from a Bound Pointer to Member Function</source>
          <target state="translated">7.6. 바운드 포인터에서 멤버 함수로 함수 포인터 추출</target>
        </trans-unit>
        <trans-unit id="7071f1c73345de1feee695e80997a7e9ee25300b" translate="yes" xml:space="preserve">
          <source>7.7 C++-Specific Variable, Function, and Type Attributes</source>
          <target state="translated">7.7 C ++ 특정 변수, 함수 및 유형 특성</target>
        </trans-unit>
        <trans-unit id="fe7a6e19d12deeb2e511882326ca07add0160c0a" translate="yes" xml:space="preserve">
          <source>7.7. C++-Specific Variable, Function, and Type Attributes</source>
          <target state="translated">7.7. C ++ 특정 변수, 함수 및 유형 속성</target>
        </trans-unit>
        <trans-unit id="cc8db05e1d866a9a98bbbe8443955267dd7d9bd4" translate="yes" xml:space="preserve">
          <source>7.8 Function Multiversioning</source>
          <target state="translated">7.8 기능 멀티 버전</target>
        </trans-unit>
        <trans-unit id="ea04efa0867bbccd881a8a1d2278d4e89b3e0646" translate="yes" xml:space="preserve">
          <source>7.8. Function Multiversioning</source>
          <target state="translated">7.8. 함수 멀티 버전</target>
        </trans-unit>
        <trans-unit id="fd2d8249d044e1371f7022bf34f888074e2ee0be" translate="yes" xml:space="preserve">
          <source>7.9 Type Traits</source>
          <target state="translated">7.9 유형 특성</target>
        </trans-unit>
        <trans-unit id="107abc23e4791a9cd4dcf1bcf2328b8f84ae94da" translate="yes" xml:space="preserve">
          <source>7.9. Type Traits</source>
          <target state="translated">7.9. 유형 특성</target>
        </trans-unit>
        <trans-unit id="7630887e9fa14ca6b1658e00e78757a20b02e72b" translate="yes" xml:space="preserve">
          <source>7100LC</source>
          <target state="translated">7100LC</target>
        </trans-unit>
        <trans-unit id="3c2ec4b008d5ed9fc8ee9829608df1346ca2705e" translate="yes" xml:space="preserve">
          <source>74kc</source>
          <target state="translated">74kc</target>
        </trans-unit>
        <trans-unit id="10a7bed2c6adcd28f073f2fe57c094b6c8d3bc8f" translate="yes" xml:space="preserve">
          <source>74kf1_1</source>
          <target state="translated">74kf1_1</target>
        </trans-unit>
        <trans-unit id="27553aaaeb377b78caac300c45a00d7de721c0d2" translate="yes" xml:space="preserve">
          <source>74kf2_1</source>
          <target state="translated">74kf2_1</target>
        </trans-unit>
        <trans-unit id="ba7a38140cd8c3812e14ad4121067a23eea7f5bf" translate="yes" xml:space="preserve">
          <source>74kf3_2</source>
          <target state="translated">74kf3_2</target>
        </trans-unit>
        <trans-unit id="b747ee321c3631c44c6aab3e5c87e1db0a13fb20" translate="yes" xml:space="preserve">
          <source>8 GNU Objective-C Features</source>
          <target state="translated">8 GNU Objective-C 기능</target>
        </trans-unit>
        <trans-unit id="238dd266a716ebd8470437fc03931af07bf27998" translate="yes" xml:space="preserve">
          <source>8-bit adjusted signed integer constant for compare pseudo-ops</source>
          <target state="translated">유사 의사 비교를위한 8 비트 조정 부호있는 정수 상수</target>
        </trans-unit>
        <trans-unit id="04f2d334251b61a1b4ed8c930e09e1849678255e" translate="yes" xml:space="preserve">
          <source>8-bit signed integer constant for logical instructions</source>
          <target state="translated">논리 명령어를위한 8 비트 부호있는 정수 상수</target>
        </trans-unit>
        <trans-unit id="ce588bc9a73175126a04dc9370ac0c259db21e04" translate="yes" xml:space="preserve">
          <source>8. GNU Objective-C Features</source>
          <target state="translated">8. GNU Objective-C 기능</target>
        </trans-unit>
        <trans-unit id="6ce4b43594597dc31758c3a8e95fa37ab3efeda9" translate="yes" xml:space="preserve">
          <source>8.1 GNU Objective-C Runtime API</source>
          <target state="translated">8.1 GNU Objective-C 런타임 API</target>
        </trans-unit>
        <trans-unit id="0bacac2be7f21284cac5795d29fbb6da28909c30" translate="yes" xml:space="preserve">
          <source>8.1. GNU Objective-C Runtime API</source>
          <target state="translated">8.1. GNU Objective-C 런타임 API</target>
        </trans-unit>
        <trans-unit id="06017b1062e44c3e1513b7df81466f282f8680c7" translate="yes" xml:space="preserve">
          <source>8.1.1 Modern GNU Objective-C Runtime API</source>
          <target state="translated">8.1.1 최신 GNU Objective-C 런타임 API</target>
        </trans-unit>
        <trans-unit id="6256c45c08c113cb06bb5a6f39d95eae15983824" translate="yes" xml:space="preserve">
          <source>8.1.1. Modern GNU Objective-C Runtime API</source>
          <target state="translated">8.1.1. 최신 GNU Objective-C 런타임 API</target>
        </trans-unit>
        <trans-unit id="6f807bd728fba1f65e680d2cf9b57659912feaf1" translate="yes" xml:space="preserve">
          <source>8.1.2 Traditional GNU Objective-C Runtime API</source>
          <target state="translated">8.1.2 전통적인 GNU Objective-C 런타임 API</target>
        </trans-unit>
        <trans-unit id="cb7916c8856f6aa20557cd44e13afa2639ce894c" translate="yes" xml:space="preserve">
          <source>8.1.2. Traditional GNU Objective-C Runtime API</source>
          <target state="translated">8.1.2. 전통적인 GNU Objective-C 런타임 API</target>
        </trans-unit>
        <trans-unit id="12cc3d95e870de249d974ac00eabcad28ce12bd2" translate="yes" xml:space="preserve">
          <source>8.10 Messaging with the GNU Objective-C Runtime</source>
          <target state="translated">8.10 GNU Objective-C 런타임과의 메시징</target>
        </trans-unit>
        <trans-unit id="81ed810eba038ce1047a0ccdc6c5d469589a5d41" translate="yes" xml:space="preserve">
          <source>8.10. Messaging with the GNU Objective-C Runtime</source>
          <target state="translated">8.10. GNU Objective-C 런타임과의 메시징</target>
        </trans-unit>
        <trans-unit id="1c7d706afed13502f561aebdfaba32624d949ed4" translate="yes" xml:space="preserve">
          <source>8.10.1 Dynamically Registering Methods</source>
          <target state="translated">8.10.1 동적 등록 방법</target>
        </trans-unit>
        <trans-unit id="3be65cea7921ce987148313368bddde89a945dea" translate="yes" xml:space="preserve">
          <source>8.10.1. Dynamically Registering Methods</source>
          <target state="translated">8.10.1. 동적 등록 방법</target>
        </trans-unit>
        <trans-unit id="fec27cce313d8eb12d908932146cca5b44cb0b96" translate="yes" xml:space="preserve">
          <source>8.10.2 Forwarding Hook</source>
          <target state="translated">8.10.2 전달 후크</target>
        </trans-unit>
        <trans-unit id="c503d0ed0e5cd0f8688e6bc9706ecda7076965e9" translate="yes" xml:space="preserve">
          <source>8.10.2. Forwarding Hook</source>
          <target state="translated">8.10.2. 전달 후크</target>
        </trans-unit>
        <trans-unit id="0d54a093d567e45971dfe60046ab944e71a6dc74" translate="yes" xml:space="preserve">
          <source>8.2 +load: Executing Code before main</source>
          <target state="translated">8.2 +로드 : 메인 전에 코드 실행</target>
        </trans-unit>
        <trans-unit id="4c46829f2755d63494e7358356a171f9c0aa2c92" translate="yes" xml:space="preserve">
          <source>8.2 &lt;code&gt;+load&lt;/code&gt;: Executing Code before &lt;code&gt;main&lt;/code&gt;</source>
          <target state="translated">8.2 &lt;code&gt;+load&lt;/code&gt; : &lt;code&gt;main&lt;/code&gt; 전에 코드 실행</target>
        </trans-unit>
        <trans-unit id="f6ee8357cf66d468fce21ce87f6e1455c61c9d71" translate="yes" xml:space="preserve">
          <source>8.2. +load: Executing Code before main</source>
          <target state="translated">8.2. +로드 : 메인 전에 코드 실행</target>
        </trans-unit>
        <trans-unit id="0e37b3bc6a72bc7a45aefe525b01b3bcbc69dc62" translate="yes" xml:space="preserve">
          <source>8.2.1 What You Can and Cannot Do in +load</source>
          <target state="translated">8.2.1 +로드에서 할 수있는 것과 할 수없는 것</target>
        </trans-unit>
        <trans-unit id="7514eae887431bc2b23c9f91ceeb2b8927f90957" translate="yes" xml:space="preserve">
          <source>8.2.1 What You Can and Cannot Do in &lt;code&gt;+load&lt;/code&gt;</source>
          <target state="translated">8.2.1 &lt;code&gt;+load&lt;/code&gt; 에서 할 수있는 것과 할 수없는 것</target>
        </trans-unit>
        <trans-unit id="8bc74bfbf57cd10928d01b916e6fa71d6d37346e" translate="yes" xml:space="preserve">
          <source>8.2.1. What You Can and Cannot Do in +load</source>
          <target state="translated">8.2.1. +로드에서 할 수 있고 할 수없는 것</target>
        </trans-unit>
        <trans-unit id="ac17a28fe0400efdbbf27dc0a3aa19d768882f50" translate="yes" xml:space="preserve">
          <source>8.3 Type Encoding</source>
          <target state="translated">8.3 타입 인코딩</target>
        </trans-unit>
        <trans-unit id="0b5a28a401e5caa1731675ca56a84d444c15fa81" translate="yes" xml:space="preserve">
          <source>8.3. Type Encoding</source>
          <target state="translated">8.3. 타입 인코딩</target>
        </trans-unit>
        <trans-unit id="f6228ff4737811227a708bc22b6ff3a77b75cceb" translate="yes" xml:space="preserve">
          <source>8.3.1 Legacy Type Encoding</source>
          <target state="translated">8.3.1 레거시 유형 인코딩</target>
        </trans-unit>
        <trans-unit id="7bec6b4bee7afdb83a43730a9fe5c4d6d085e864" translate="yes" xml:space="preserve">
          <source>8.3.1. Legacy Type Encoding</source>
          <target state="translated">8.3.1. 레거시 유형 인코딩</target>
        </trans-unit>
        <trans-unit id="5527244afdb6dfb3dca3ad889987c2fef987074e" translate="yes" xml:space="preserve">
          <source>8.3.2 &lt;code&gt;@encode&lt;/code&gt;</source>
          <target state="translated">8.3.2 &lt;code&gt;@encode&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="978fa94702c6bb2aa016de617938fd819d570db4" translate="yes" xml:space="preserve">
          <source>8.3.2 @encode</source>
          <target state="translated">8.3.2 @encode</target>
        </trans-unit>
        <trans-unit id="4493f310bc1651626e01d4c07ee677385159442c" translate="yes" xml:space="preserve">
          <source>8.3.2. @encode</source>
          <target state="translated">8.3.2. @encode</target>
        </trans-unit>
        <trans-unit id="e76f8c08ebb07739970dc34b59461ba675ae7b31" translate="yes" xml:space="preserve">
          <source>8.3.3 Method Signatures</source>
          <target state="translated">8.3.3 메소드 서명</target>
        </trans-unit>
        <trans-unit id="0cd2b9090f85dc474192078b9cdd2977a7b93ce8" translate="yes" xml:space="preserve">
          <source>8.3.3. Method Signatures</source>
          <target state="translated">8.3.3. 메소드 서명</target>
        </trans-unit>
        <trans-unit id="8dc0bdb621513ef296dfe1ccb8a8e69178e55c00" translate="yes" xml:space="preserve">
          <source>8.4 Garbage Collection</source>
          <target state="translated">8.4 가비지 콜렉션</target>
        </trans-unit>
        <trans-unit id="f07f1c7fc14cbe1fbcf43d8205938600aba5fb3a" translate="yes" xml:space="preserve">
          <source>8.4. Garbage Collection</source>
          <target state="translated">8.4. 가비지 콜렉션</target>
        </trans-unit>
        <trans-unit id="7a1c9992cbe3a8eb5bac4598d41c0f55497fcfd0" translate="yes" xml:space="preserve">
          <source>8.5 Constant String Objects</source>
          <target state="translated">8.5 상수 문자열 객체</target>
        </trans-unit>
        <trans-unit id="4a2eeb0e04646c0d1d5dde7596bb4e3ab441cf85" translate="yes" xml:space="preserve">
          <source>8.5. Constant String Objects</source>
          <target state="translated">8.5. 상수 문자열 객체</target>
        </trans-unit>
        <trans-unit id="1ad03b99d44944113a02e8b2d43422e1fb50690e" translate="yes" xml:space="preserve">
          <source>8.6 &lt;code&gt;compatibility_alias&lt;/code&gt;</source>
          <target state="translated">8.6 &lt;code&gt;compatibility_alias&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="16a6371cd4eb99b88acbb876c48214d1528996b9" translate="yes" xml:space="preserve">
          <source>8.6 compatibility_alias</source>
          <target state="translated">8.6 호환성</target>
        </trans-unit>
        <trans-unit id="68169a32cc1b2c0d8e0fdd12ac28ee8a4f88ccd1" translate="yes" xml:space="preserve">
          <source>8.6. compatibility_alias</source>
          <target state="translated">8.6. 호환성 _ 별칭</target>
        </trans-unit>
        <trans-unit id="477e0b2d2877013fc309d42abd04b7a7fac95b0e" translate="yes" xml:space="preserve">
          <source>8.7 Exceptions</source>
          <target state="translated">8.7 예외</target>
        </trans-unit>
        <trans-unit id="16af8614813519947458cd70b76429228a166bf8" translate="yes" xml:space="preserve">
          <source>8.7. Exceptions</source>
          <target state="translated">8.7. 예외</target>
        </trans-unit>
        <trans-unit id="74543d3119c6680f587a9317c42b3e80f7812525" translate="yes" xml:space="preserve">
          <source>8.8 Synchronization</source>
          <target state="translated">8.8 동기화</target>
        </trans-unit>
        <trans-unit id="083f9b1455cca391952297e65a5f3c8e7fb0c091" translate="yes" xml:space="preserve">
          <source>8.8. Synchronization</source>
          <target state="translated">8.8. 동기화</target>
        </trans-unit>
        <trans-unit id="7338c2122f2c6512086917a88263a1ffa319037d" translate="yes" xml:space="preserve">
          <source>8.9 Fast Enumeration</source>
          <target state="translated">8.9 빠른 열거</target>
        </trans-unit>
        <trans-unit id="ec7154738dfa0ae117df4872a446a28e2a0711e7" translate="yes" xml:space="preserve">
          <source>8.9. Fast Enumeration</source>
          <target state="translated">8.9. 빠른 열거</target>
        </trans-unit>
        <trans-unit id="c5c48c9ddc1c6eec5370a9f3cc1d2da53b4277bc" translate="yes" xml:space="preserve">
          <source>8.9.1 Using Fast Enumeration</source>
          <target state="translated">8.9.1 빠른 열거 사용</target>
        </trans-unit>
        <trans-unit id="6ad2c7a48f39c65d867329ec2c7335528dcac484" translate="yes" xml:space="preserve">
          <source>8.9.1. Using Fast Enumeration</source>
          <target state="translated">8.9.1. 빠른 열거 사용</target>
        </trans-unit>
        <trans-unit id="d4e4b02de8979958bbc292a9013946837f1fa2de" translate="yes" xml:space="preserve">
          <source>8.9.2 C99-Like Fast Enumeration Syntax</source>
          <target state="translated">8.9.2 C99와 같은 빠른 열거 구문</target>
        </trans-unit>
        <trans-unit id="c0c8d7e4c548cb334b0077b49fb8d7954fa1bc7a" translate="yes" xml:space="preserve">
          <source>8.9.2. C99-Like Fast Enumeration Syntax</source>
          <target state="translated">8.9.2. C99와 같은 빠른 열거 구문</target>
        </trans-unit>
        <trans-unit id="fc941982a158e238821dd94fbed3bb5cab331767" translate="yes" xml:space="preserve">
          <source>8.9.3 Fast Enumeration Details</source>
          <target state="translated">8.9.3 빠른 열거 세부 사항</target>
        </trans-unit>
        <trans-unit id="1e69e987b4483c072c99556446bfbd580c89a6c7" translate="yes" xml:space="preserve">
          <source>8.9.3. Fast Enumeration Details</source>
          <target state="translated">8.9.3. 빠른 열거 세부 사항</target>
        </trans-unit>
        <trans-unit id="66afcdf52d12c5936c393d8a7d4415ca40641c8c" translate="yes" xml:space="preserve">
          <source>8.9.4 Fast Enumeration Protocol</source>
          <target state="translated">8.9.4 빠른 열거 프로토콜</target>
        </trans-unit>
        <trans-unit id="af86351ac19c6a92b0fadb75de17d30680748abf" translate="yes" xml:space="preserve">
          <source>8.9.4. Fast Enumeration Protocol</source>
          <target state="translated">8.9.4. 빠른 열거 프로토콜</target>
        </trans-unit>
        <trans-unit id="2a24cd506294a07c6a0446f8badafaf3201f2507" translate="yes" xml:space="preserve">
          <source>9 Binary Compatibility</source>
          <target state="translated">이진 호환성</target>
        </trans-unit>
        <trans-unit id="aaf34f43b56348453c9670867bbe710bc4cff1f1" translate="yes" xml:space="preserve">
          <source>9-bit signed integer constant for load and store postincrements</source>
          <target state="translated">로드 및 저장 후 증가분을위한 9 비트 부호있는 정수 상수</target>
        </trans-unit>
        <trans-unit id="f5866ff425b2380665d4757e884a24f7c0c34afd" translate="yes" xml:space="preserve">
          <source>9. Binary Compatibility</source>
          <target state="translated">이진 호환성</target>
        </trans-unit>
        <trans-unit id="05a79f06cf3f67f726dae68d18a2290f6c9a50c9" translate="yes" xml:space="preserve">
          <source>:</source>
          <target state="translated">:</target>
        </trans-unit>
        <trans-unit id="0e96f6929feaa8c7f7735055f893a7b75a845c22" translate="yes" xml:space="preserve">
          <source>: even though it may help make the global offset table smaller, it trades 1 instruction for 4. With</source>
          <target state="translated">: 전역 오프셋 테이블을 더 작게 만드는 데 도움이 될 수 있지만 4에 대해 1 명령을 교환합니다.</target>
        </trans-unit>
        <trans-unit id="63347315fe8e655bf95e9a504d6fcbb0f9ecd9f0" translate="yes" xml:space="preserve">
          <source>: this header declares a public runtime API threading layer that is only provided by the GNU Objective-C runtime. It declares functions such as &lt;code&gt;objc_mutex_lock()&lt;/code&gt;, which provide a platform-independent set of threading functions.</source>
          <target state="translated">:이 헤더는 GNU Objective-C 런타임에서만 제공되는 공개 런타임 API 스레딩 계층을 선언합니다. 플랫폼 독립적 인 스레딩 함수 세트를 제공하는 &lt;code&gt;objc_mutex_lock()&lt;/code&gt; 과 같은 함수를 선언 합니다.</target>
        </trans-unit>
        <trans-unit id="30dd56b7640731d14fa9ecac2bbbbb504e1a5176" translate="yes" xml:space="preserve">
          <source>: this header declares most of the public runtime API functions allowing you to inspect and manipulate the Objective-C runtime data structures. These functions are fairly standardized across Objective-C runtimes and are almost identical to the Apple/NeXT Objective-C runtime ones. It does not declare functions in some specialized areas (constructing and forwarding message invocations, threading) which are in the other headers below. You have to include</source>
          <target state="translated">:이 헤더는 Objective-C 런타임 데이터 구조를 검사하고 조작 할 수있는 대부분의 공용 런타임 API 함수를 선언합니다. 이러한 기능은 Objective-C 런타임에서 상당히 표준화되어 있으며 Apple / NeXT Objective-C 런타임과 거의 동일합니다. 아래의 다른 헤더에있는 일부 특수 영역 (메시지 호출 구성 및 전달, 스레딩)에서는 함수를 선언하지 않습니다. 당신은 포함해야합니다</target>
        </trans-unit>
        <trans-unit id="26a235338902d41d3db5491024b9576d18742880" translate="yes" xml:space="preserve">
          <source>: this header declares public functions used to construct, deconstruct and forward message invocations. Because messaging is done in quite a different way on different runtimes, functions in this header are specific to the GNU Objective-C runtime implementation.</source>
          <target state="translated">:이 헤더는 메시지 호출을 구성, 해체 및 전달하는 데 사용되는 공용 함수를 선언합니다. 메시징은 서로 다른 런타임에서 상당히 다른 방식으로 수행되므로이 ​​헤더의 기능은 GNU Objective-C 런타임 구현에 따라 다릅니다.</target>
        </trans-unit>
        <trans-unit id="5a3c29505625144ba68750995731439e9906fdd5" translate="yes" xml:space="preserve">
          <source>: this header declares some public functions related to Objective-C exceptions. For example functions in this header allow you to throw an Objective-C exception from plain C/C++ code.</source>
          <target state="translated">:이 헤더는 Objective-C 예외와 관련된 일부 공용 함수를 선언합니다. 예를 들어이 헤더의 함수를 사용하면 일반 C / C ++ 코드에서 Objective-C 예외를 throw 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9e5ef08f873716700e594dd3a36d7d64d5272d49" translate="yes" xml:space="preserve">
          <source>: this header declares some public functions related to the Objective-C &lt;code&gt;@synchronized()&lt;/code&gt; syntax, allowing you to emulate an Objective-C &lt;code&gt;@synchronized()&lt;/code&gt; block in plain C/C++ code.</source>
          <target state="translated">:이 헤더는 Objective-C &lt;code&gt;@synchronized()&lt;/code&gt; 구문 과 관련된 일부 공용 함수를 선언 하여 일반 C / C ++ 코드에서 Objective-C &lt;code&gt;@synchronized()&lt;/code&gt; 블록 을 에뮬레이션 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="7cc9c1a09bf135868f452e4dc5bbf2907bfed13f" translate="yes" xml:space="preserve">
          <source>: this is the basic Objective-C header file, defining the basic Objective-C types such as &lt;code&gt;id&lt;/code&gt;, &lt;code&gt;Class&lt;/code&gt; and &lt;code&gt;BOOL&lt;/code&gt;. You have to include this header to do almost anything with Objective-C.</source>
          <target state="translated">: 이것은 기본 Objective-C 헤더 파일이며 &lt;code&gt;id&lt;/code&gt; , &lt;code&gt;Class&lt;/code&gt; 및 &lt;code&gt;BOOL&lt;/code&gt; 과 같은 기본 Objective-C 유형을 정의합니다 . Objective-C로 거의 모든 작업을 수행하려면이 헤더를 포함해야합니다.</target>
        </trans-unit>
        <trans-unit id="e8c89b6d4332bd3369abe0522644501e5013a432" translate="yes" xml:space="preserve">
          <source>; higher levels are not, and must be explicitly requested.</source>
          <target state="translated">; 높은 수준은 아니므로 명시 적으로 요청해야합니다.</target>
        </trans-unit>
        <trans-unit id="a66283a15e09823e79a5c6a663cf680f2ab5e710" translate="yes" xml:space="preserve">
          <source>; however, use of the backchain for debugging purposes usually requires that the whole binary is built with</source>
          <target state="translated">; 그러나 디버깅 목적으로 백 체인을 사용하려면 일반적으로 전체 바이너리가 다음과 같이 빌드되어야합니다.</target>
        </trans-unit>
        <trans-unit id="2e840d8b6d6867941a2eee8b46c7d917829de2b1" translate="yes" xml:space="preserve">
          <source>; it causes the preprocessor to treat comments as tokens in their own right. For example, comments appearing at the start of what would be a directive line have the effect of turning that line into an ordinary source line, since the first token on the line is no longer a &amp;lsquo;</source>
          <target state="translated">; 전처리 기가 주석을 토큰으로 취급하도록합니다. 예를 들어, 지시문 줄의 시작 부분에 나타나는 주석은 해당 줄을 첫 번째 토큰이 더 이상 '</target>
        </trans-unit>
        <trans-unit id="fe9de4759d0dc5597c891d37b107703d1930a026" translate="yes" xml:space="preserve">
          <source>; it then defines &lt;code&gt;__STDC_HOSTED__&lt;/code&gt; to &lt;code&gt;0&lt;/code&gt; and does not make assumptions about the meanings of function names from the standard library, with exceptions noted below. To build an OS kernel, you may well still need to make your own arrangements for linking and startup. See &lt;a href=&quot;c-dialect-options#C-Dialect-Options&quot;&gt;Options Controlling C Dialect&lt;/a&gt;.</source>
          <target state="translated">; 그런 다음 &lt;code&gt;__STDC_HOSTED__&lt;/code&gt; 를 &lt;code&gt;0&lt;/code&gt; 으로 정의 하고 아래에 언급 된 예외를 제외하고 표준 라이브러리에서 함수 이름의 의미에 대해 가정하지 않습니다. OS 커널을 빌드하려면 연결 및 시작을위한 고유 한 배열을 만들어야 할 수도 있습니다. &lt;a href=&quot;c-dialect-options#C-Dialect-Options&quot;&gt;C 방언 제어 옵션을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="0bd28d9793fcd7e9f0549371e16a97a1f053629f" translate="yes" xml:space="preserve">
          <source>; see &lt;a href=&quot;c_002b_002b-dialect-options#C_002b_002b-Dialect-Options&quot;&gt;Options Controlling C++ Dialect&lt;/a&gt;.</source>
          <target state="translated">; &lt;a href=&quot;c_002b_002b-dialect-options#C_002b_002b-Dialect-Options&quot;&gt;C ++ Dialect 제어 옵션을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="50016dac566b707582c4b1fc771e52069b7a937b" translate="yes" xml:space="preserve">
          <source>; the corrections are also applied with</source>
          <target state="translated">; 수정 사항도 함께 적용됩니다</target>
        </trans-unit>
        <trans-unit id="3eb04dcb759dd8c0995915b2a5ccb10d6a327b33" translate="yes" xml:space="preserve">
          <source>; the same rule applies to macros defined this way.</source>
          <target state="translated">; 이 방법으로 정의 된 매크로에도 동일한 규칙이 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="00b878f7746de72103ac67a35f0e1d78575bcec7" translate="yes" xml:space="preserve">
          <source>; they do not have this problem.</source>
          <target state="translated">; 그들은이 문제가 없습니다.</target>
        </trans-unit>
        <trans-unit id="39de10441f5a92f5c2ca38349b7c2fdec8841dcf" translate="yes" xml:space="preserve">
          <source>; this option implies</source>
          <target state="translated">; 이 옵션은</target>
        </trans-unit>
        <trans-unit id="1989c55c1ff2b01f4215828caa4538ad66beba83" translate="yes" xml:space="preserve">
          <source>; to obtain all the diagnostics required by the standard, you should also specify</source>
          <target state="translated">; 표준에 필요한 모든 진단을 받으려면 다음을 지정해야합니다.</target>
        </trans-unit>
        <trans-unit id="a73b42f7298a4e09fb1e0072c5f63bdced6b9b8c" translate="yes" xml:space="preserve">
          <source>; when linking, it links in a special thread helper library</source>
          <target state="translated">; 링크 할 때 특수 스레드 도우미 라이브러리에서 링크됩니다</target>
        </trans-unit>
        <trans-unit id="06561510744788a1609ec5f60662cc5908d39e15" translate="yes" xml:space="preserve">
          <source>; you should not need to use it for anything else.</source>
          <target state="translated">; 다른 용도로는 사용할 필요가 없습니다.</target>
        </trans-unit>
        <trans-unit id="431058a2491fcbde34064009eece9653a8f5b829" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;Example&lt;/b&gt;</source>
          <target state="translated">&lt;b&gt;Example&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="01d7c1c3eb993c58806b746668090c8a26bb75db" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;Limitations and caveats&lt;/b&gt;</source>
          <target state="translated">&lt;b&gt;한계와 경고&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="0424675c89789c8478a359447a9eeb880c777989" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;[basic.start.init]&lt;/b&gt;</source>
          <target state="translated">&lt;b&gt;[basic.start.init]&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="e3b972f187fc77684d7b4caf8cb567979becf9f7" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;[basic.start.main]&lt;/b&gt;</source>
          <target state="translated">&lt;b&gt;[basic.start.main]&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="b883af22766032bc16303da205cb38fbd19479e1" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;[basic.start.term]&lt;/b&gt;</source>
          <target state="translated">&lt;b&gt;[basic.start.term]&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="b18fcd33e6f11059c9a572ef77f16711d1475704" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;[basic.stc.static]&lt;/b&gt;</source>
          <target state="translated">&lt;b&gt;[basic.stc.static]&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="0fc91ea62596ffaa9b88e5f5653a875441113bac" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;[basic.stc.thread]&lt;/b&gt;</source>
          <target state="translated">&lt;b&gt;[basic.stc.thread]&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="13e2f1e5179d31ce813b6d9c962af8d8f15a52b2" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;[basic.stc]&lt;/b&gt;</source>
          <target state="translated">&lt;b&gt;[basic.stc]&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="082e6d5681614613f1cf46008d31795e30341ce2" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;[class.mem]&lt;/b&gt;</source>
          <target state="translated">&lt;b&gt;[class.mem]&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="20a71e88049b10a9036fc51e894c28860a33cdaf" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;[dcl.stc]&lt;/b&gt;</source>
          <target state="translated">&lt;b&gt;[dcl.stc]&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="51818883b235ce777320b575e0bf8025965510ba" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;[intro.execution]&lt;/b&gt;</source>
          <target state="translated">&lt;b&gt;[intro.execution]&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="1a31fbd2e2b9c5c3bb615b7491f612d5a707c3ac" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;[lex.key]&lt;/b&gt;</source>
          <target state="translated">&lt;b&gt;[lex.key]&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="5cc4701ea1dbc7c0ae0a60db0f72537871372ebf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;![16,16i]&lt;/code&gt; (alignment depends on the machine)</source>
          <target state="translated">&lt;code&gt;![16,16i]&lt;/code&gt; (정렬은 기계에 따라 다릅니다)</target>
        </trans-unit>
        <trans-unit id="cffc58ac2d212878e6c4d3afeb9026603af158fb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#pragma interface&lt;/code&gt; and &lt;code&gt;#pragma implementation&lt;/code&gt; provide the user with a way of explicitly directing the compiler to emit entities with vague linkage (and debugging information) in a particular translation unit.</source>
          <target state="translated">&lt;code&gt;#pragma interface&lt;/code&gt; 및 &lt;code&gt;#pragma implementation&lt;/code&gt; 은 특정 변환 단위에서 모호한 링크 (및 디버깅 정보)가있는 엔티티를 생성하도록 컴파일러에 명시 적으로 지시하는 방법을 사용자에게 제공합니다.</target>
        </trans-unit>
        <trans-unit id="2569b071a9af441d9b6296aa268b56f40df7cca9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#pragma ms_struct off&lt;/code&gt; turns off the Microsoft layout.</source>
          <target state="translated">&lt;code&gt;#pragma ms_struct off&lt;/code&gt; 는 Microsoft 레이아웃을 끕니다.</target>
        </trans-unit>
        <trans-unit id="5e363473f488b7983412e972ce0eac0f09b14174" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#pragma ms_struct on&lt;/code&gt; turns on the Microsoft layout.</source>
          <target state="translated">&lt;code&gt;#pragma ms_struct on&lt;/code&gt; 은 Microsoft 레이아웃 을 켭니다.</target>
        </trans-unit>
        <trans-unit id="107cfa70f66f6e21716326b44d8c2543bd277a0b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#pragma ms_struct reset&lt;/code&gt; goes back to the default layout.</source>
          <target state="translated">&lt;code&gt;#pragma ms_struct reset&lt;/code&gt; 은 기본 레이아웃으로 돌아갑니다.</target>
        </trans-unit>
        <trans-unit id="359f3157fca41c8df8f6c827d78d1920672257ff" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#pragma pack()&lt;/code&gt; sets the alignment to the one that was in effect when compilation started (see also command-line option</source>
          <target state="translated">&lt;code&gt;#pragma pack()&lt;/code&gt; 은 컴파일을 시작할 때 적용되었던 정렬을 정렬합니다 (명령 줄 옵션 참조).</target>
        </trans-unit>
        <trans-unit id="2da8592b5f1ca4f7c8ec146ce07922d1be68b588" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#pragma pack(&lt;var&gt;n&lt;/var&gt;)&lt;/code&gt; simply sets the new alignment.</source>
          <target state="translated">&lt;code&gt;#pragma pack(&lt;var&gt;n&lt;/var&gt;)&lt;/code&gt; 단순히 새로운 정렬을 설정합니다.</target>
        </trans-unit>
        <trans-unit id="09cd1961f6ec088315967f82b215657a1847a8f3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#pragma pack(pop)&lt;/code&gt; restores the alignment setting to the one saved at the top of the internal stack (and removes that stack entry). Note that &lt;code&gt;#pragma pack([&lt;var&gt;n&lt;/var&gt;])&lt;/code&gt; does not influence this internal stack; thus it is possible to have &lt;code&gt;#pragma pack(push)&lt;/code&gt; followed by multiple &lt;code&gt;#pragma pack(&lt;var&gt;n&lt;/var&gt;)&lt;/code&gt; instances and finalized by a single &lt;code&gt;#pragma pack(pop)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;#pragma pack(pop)&lt;/code&gt; 은 정렬 설정을 내부 스택 맨 위에 저장된 항목으로 복원하고 해당 스택 항목을 제거합니다. 주의 &lt;code&gt;#pragma pack([&lt;var&gt;n&lt;/var&gt;])&lt;/code&gt; 이 내부 스택에 영향을주지 않는다; 따라서 &lt;code&gt;#pragma pack(push)&lt;/code&gt; 다음에 여러 개의 &lt;code&gt;#pragma pack(&lt;var&gt;n&lt;/var&gt;)&lt;/code&gt; 인스턴스가 있고 단일 &lt;code&gt;#pragma pack(pop)&lt;/code&gt; 마무리 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c1f4e8456ee450b615ff464f6ff9615991f7f956" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#pragma pack(push[,&lt;var&gt;n&lt;/var&gt;])&lt;/code&gt; pushes the current alignment setting on an internal stack and then optionally sets the new alignment.</source>
          <target state="translated">&lt;code&gt;#pragma pack(push[,&lt;var&gt;n&lt;/var&gt;])&lt;/code&gt; 은 내부 정렬에서 현재 정렬 설정을 푸시 한 다음 선택적으로 새 정렬을 설정합니다.</target>
        </trans-unit>
        <trans-unit id="8d404d78e391f3edc2a1e7fe1018546d3f145abe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#pragma scalar_storage_order big-endian&lt;/code&gt; sets the storage order of the scalar fields to big-endian.</source>
          <target state="translated">&lt;code&gt;#pragma scalar_storage_order big-endian&lt;/code&gt; 은 스칼라 필드의 저장 순서를 big-endian으로 설정합니다.</target>
        </trans-unit>
        <trans-unit id="791d1af4df580d4926f6784307622e913fe6169f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#pragma scalar_storage_order default&lt;/code&gt; goes back to the endianness that was in effect when compilation started (see also command-line option</source>
          <target state="translated">&lt;code&gt;#pragma scalar_storage_order default&lt;/code&gt; 은 컴파일을 시작할 때 적용되었던 엔디안으로 돌아갑니다 (명령 줄 옵션 참조).</target>
        </trans-unit>
        <trans-unit id="9e92ce5f2b8e8dd2da4f3a23c57c175f27849093" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#pragma scalar_storage_order little-endian&lt;/code&gt; sets the storage order of the scalar fields to little-endian.</source>
          <target state="translated">&lt;code&gt;#pragma scalar_storage_order little-endian&lt;/code&gt; 은 스칼라 필드의 저장 순서를 little-endian으로 설정합니다.</target>
        </trans-unit>
        <trans-unit id="d7b3947b00665c0273f8ee03de6b46c48b82e923" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;+load&lt;/code&gt; is to be used only as a last resort. Because it is executed very early, most of the Objective-C runtime machinery will not be ready when &lt;code&gt;+load&lt;/code&gt; is executed; hence &lt;code&gt;+load&lt;/code&gt; works best for executing C code that is independent on the Objective-C runtime.</source>
          <target state="translated">&lt;code&gt;+load&lt;/code&gt; 는 최후의 수단으로 만 사용됩니다. 매우 일찍 실행되므로 &lt;code&gt;+load&lt;/code&gt; 가 실행될 때 대부분의 Objective-C 런타임 기계는 준비되지 않습니다 . 따라서 &lt;code&gt;+load&lt;/code&gt; 는 Objective-C 런타임과 독립적 인 C 코드를 실행하는 데 가장 적합합니다.</target>
        </trans-unit>
        <trans-unit id="2a3b66c50c6331da3456637374283bba0d9341b7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-2147483648&lt;/code&gt; is positive.</source>
          <target state="translated">&lt;code&gt;-2147483648&lt;/code&gt; 이 긍정적입니다.</target>
        </trans-unit>
        <trans-unit id="ff73f3bc9136cfe683f6e1000d6ea1e5f0b6d324" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;0xFF&lt;/code&gt; or &lt;code&gt;0xFFFF&lt;/code&gt;, for andsi as a zero-extending move.</source>
          <target state="translated">&lt;code&gt;0xFF&lt;/code&gt; 0x 확장 이동으로 andsi의 경우 0xFF 또는 &lt;code&gt;0xFFFF&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="69970b695b65687a239461624104cc1d44b36e13" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;100&lt;/code&gt;, &lt;code&gt;102&lt;/code&gt;, &lt;code&gt;103&lt;/code&gt;, &lt;code&gt;104&lt;/code&gt;, &lt;code&gt;105&lt;/code&gt;, &lt;code&gt;106&lt;/code&gt;, &lt;code&gt;107&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;100&lt;/code&gt; , &lt;code&gt;102&lt;/code&gt; , &lt;code&gt;103&lt;/code&gt; , &lt;code&gt;104&lt;/code&gt; , &lt;code&gt;105&lt;/code&gt; , &lt;code&gt;106&lt;/code&gt; , &lt;code&gt;107&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f94cae98ac3d64f04d19f0b2e99e2c0a60564f25" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;2&lt;/code&gt;, &lt;code&gt;25&lt;/code&gt;, &lt;code&gt;3&lt;/code&gt;, &lt;code&gt;31&lt;/code&gt;, &lt;code&gt;35&lt;/code&gt;, &lt;code&gt;4&lt;/code&gt;, &lt;code&gt;5&lt;/code&gt;, &lt;code&gt;51&lt;/code&gt;, &lt;code&gt;6&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;2&lt;/code&gt; , &lt;code&gt;25&lt;/code&gt; , &lt;code&gt;3&lt;/code&gt; , &lt;code&gt;31&lt;/code&gt; , &lt;code&gt;35&lt;/code&gt; , &lt;code&gt;4&lt;/code&gt; , &lt;code&gt;5&lt;/code&gt; , &lt;code&gt;51&lt;/code&gt; , &lt;code&gt;6&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1bd49a42c06dc5b5614602b595d1eb861097847b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;var&gt;collection expression&lt;/var&gt;&lt;/code&gt; is evaluated exactly once and the result is used as the collection object to iterate over. This means it is safe to write code such as &lt;code&gt;for (object in [NSDictionary
keyEnumerator]) &amp;hellip;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;var&gt;collection expression&lt;/var&gt;&lt;/code&gt; 은 정확히 한 번 평가되며 결과는 반복 할 콜렉션 오브젝트로 사용됩니다. 이 의미는 같은 코드를 작성하는 것이 안전 &lt;code&gt;for (object in [NSDictionary keyEnumerator]) &amp;hellip;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3eba358d191709438321ae5dbb3501eb47389e2e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;var&gt;statements&lt;/var&gt;&lt;/code&gt; can contain &lt;code&gt;break&lt;/code&gt; and &lt;code&gt;continue&lt;/code&gt; commands, which will abort the iteration or skip to the next loop iteration as expected.</source>
          <target state="translated">&lt;code&gt;&lt;var&gt;statements&lt;/var&gt;&lt;/code&gt; 은 &lt;code&gt;break&lt;/code&gt; 및 &lt;code&gt;continue&lt;/code&gt; 명령을포함 할 수 있으며,이 명령은 반복을 중단하거나 다음 루프 반복으로 건너 뜁니다.</target>
        </trans-unit>
        <trans-unit id="61531b33eb2db1449ceab15f5f279c4b2f1791b6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;var&gt;statements&lt;/var&gt;&lt;/code&gt; must not make any changes to the collection object; if they do, it is a hard error and the fast enumeration terminates by invoking &lt;code&gt;objc_enumerationMutation&lt;/code&gt;, a runtime function that normally aborts the program but which can be customized by Foundation libraries via &lt;code&gt;objc_set_mutation_handler&lt;/code&gt; to do something different, such as raising an exception.</source>
          <target state="translated">&lt;code&gt;&lt;var&gt;statements&lt;/var&gt;&lt;/code&gt; 은 콜렉션 오브젝트를 변경해서는 안됩니다. 만약 그렇다면, 그것은 하드 오류이고 빠른 열거는 일반적으로 프로그램을 중단하지만 &lt;code&gt;objc_set_mutation_handler&lt;/code&gt; 를통해 Foundation 라이브러리가 사용자 정의하여 예외 발생과 같은 다른 작업을 수행할 수있는 런타임 함수 인 &lt;code&gt;objc_enumerationMutation&lt;/code&gt; 을 호출하여 종료됩니다.</target>
        </trans-unit>
        <trans-unit id="9d58742173ee42448629f6db4422e3203e474e70" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@encode&lt;/code&gt; does not support type qualifiers other than &lt;code&gt;const&lt;/code&gt;. For example, &lt;code&gt;@encode(const char*)&lt;/code&gt; is valid and is compiled into &lt;code&gt;&quot;r*&quot;&lt;/code&gt;, while &lt;code&gt;@encode(bycopy char *)&lt;/code&gt; is invalid and will cause a compilation error.</source>
          <target state="translated">&lt;code&gt;@encode&lt;/code&gt; 는 &lt;code&gt;const&lt;/code&gt; 이외의 형식 한정자를 지원하지 않습니다 . 예를 들어 &lt;code&gt;@encode(const char*)&lt;/code&gt; 는 유효하고 &lt;code&gt;&quot;r*&quot;&lt;/code&gt; 로 컴파일되는 반면 &lt;code&gt;@encode(bycopy char *)&lt;/code&gt; 는 유효하지 않으며 컴파일 오류가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="06f7d071955d8af36c31b170590dbc2a8f025b17" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;A&lt;/code&gt; through &lt;code&gt;L&lt;/code&gt; registers.</source>
          <target state="translated">&lt;code&gt;A&lt;/code&gt; 부터 &lt;code&gt;L&lt;/code&gt; 까지 레지스터.</target>
        </trans-unit>
        <trans-unit id="80d0c9344feef2e94b4f1747dfadf5bbe5585ef0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CPATH&lt;/code&gt; specifies a list of directories to be searched as if specified with</source>
          <target state="translated">&lt;code&gt;CPATH&lt;/code&gt; 는 다음과 같이 지정된 것처럼 검색 할 디렉토리 목록을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="789e53d1b037b549885585694fb4b6c06a41dc94" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;GSWApplication&lt;/code&gt; (the real class) must be an existing class.</source>
          <target state="translated">&lt;code&gt;GSWApplication&lt;/code&gt; (실제 클래스)은 기존 클래스 여야합니다.</target>
        </trans-unit>
        <trans-unit id="372485e67dabbb2f6f7563c915c0d05a5bb7796c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NXConstantString&lt;/code&gt; inherits from &lt;code&gt;Object&lt;/code&gt;; user class libraries may choose to inherit the customized constant string class from a different class than &lt;code&gt;Object&lt;/code&gt;. There is no requirement in the methods the constant string class has to implement, but the final ivar layout of the class must be the compatible with the given structure.</source>
          <target state="translated">&lt;code&gt;NXConstantString&lt;/code&gt; 은 &lt;code&gt;Object&lt;/code&gt; 에서 상속합니다 . 사용자 클래스 라이브러리는 &lt;code&gt;Object&lt;/code&gt; 와 다른 클래스에서 사용자 정의 된 상수 문자열 클래스를 상속하도록 선택할 수 있습니다 . 상수 문자열 클래스가 구현해야하는 메소드에는 요구 사항이 없지만 클래스의 최종 ivar 레이아웃은 주어진 구조와 호환 가능해야합니다.</target>
        </trans-unit>
        <trans-unit id="b73742c69a964b14887fe5c58b748cbc6ead8dbc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;V&lt;/code&gt; is a special modifier which prints the name of the full integer register without &lt;code&gt;%&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;V&lt;/code&gt; 는 &lt;code&gt;%&lt;/code&gt; 없이 전체 정수 레지스터의 이름을 인쇄하는 특수 수정 자입니다 .</target>
        </trans-unit>
        <trans-unit id="e9680743302272f4d21a0ca0fcf6f7d2fc4b4f89" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;WOApplication&lt;/code&gt; (the alias) must not be an existing class;</source>
          <target state="translated">&lt;code&gt;WOApplication&lt;/code&gt; (별명)은 기존 클래스가 아니어야합니다.</target>
        </trans-unit>
        <trans-unit id="ee6195175737171e4b0021bc7dc79c772162ab99" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__FUNCTION__&lt;/code&gt; is another name for &lt;code&gt;__func__&lt;/code&gt;, provided for backward compatibility with old versions of GCC.</source>
          <target state="translated">&lt;code&gt;__FUNCTION__&lt;/code&gt; 은 &lt;code&gt;__func__&lt;/code&gt; 의 다른 이름으로 , 이전 버전의 GCC와 호환됩니다.</target>
        </trans-unit>
        <trans-unit id="f2c1ea03a8f41c269c203f97859a30953067ac6d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__attribute ((const))&lt;/code&gt; and &lt;code&gt;noreturn&lt;/code&gt; were mangled as type qualifiers, and &lt;code&gt;decltype&lt;/code&gt; of a plain declaration was folded away.</source>
          <target state="translated">&lt;code&gt;__attribute ((const))&lt;/code&gt; 와 &lt;code&gt;noreturn&lt;/code&gt; 은 형식 한정자로 맹 글링되었고 일반 선언의 설명은 &lt;code&gt;decltype&lt;/code&gt; 되었습니다.</target>
        </trans-unit>
        <trans-unit id="31d52aa69bfef9deeeff9d7920e4c48f0f233481" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__builtin_mips_set_fcsr&lt;/code&gt; can be used to change any bit of the register except the condition codes, which GCC assumes are preserved.</source>
          <target state="translated">&lt;code&gt;__builtin_mips_set_fcsr&lt;/code&gt; 은 GCC가 보존한다고 가정하는 조건 코드를 제외하고 레지스터의 비트를 변경하는 데 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="dd0179ef987e379ce17d15225812657b396c054c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__const__&lt;/code&gt;, &lt;code&gt;__asm__&lt;/code&gt;, etc., for header files.</source>
          <target state="translated">&lt;code&gt;__const__&lt;/code&gt; 헤더 파일의 경우 __const__ , &lt;code&gt;__asm__&lt;/code&gt; 등</target>
        </trans-unit>
        <trans-unit id="7473df93d6fe52ceeeb6718adea22f662c95bc6a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__float128&lt;/code&gt; is available on i386, x86_64, IA-64, and hppa HP-UX, as well as on PowerPC GNU/Linux targets that enable the vector scalar (VSX) instruction set. &lt;code&gt;__float128&lt;/code&gt; supports the 128-bit floating type. On i386, x86_64, PowerPC, and IA-64 other than HP-UX, &lt;code&gt;__float128&lt;/code&gt; is an alias for &lt;code&gt;_Float128&lt;/code&gt;. On hppa and IA-64 HP-UX, &lt;code&gt;__float128&lt;/code&gt; is an alias for &lt;code&gt;long
double&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;__float128&lt;/code&gt; 은 i386, x86_64, IA-64 및 hppa HP-UX와 벡터 스칼라 (VSX) 명령어 세트를 활성화하는 PowerPC GNU / Linux 대상에서 사용할 수 있습니다. &lt;code&gt;__float128&lt;/code&gt; 은 128 비트 부동 유형을 지원합니다. I386에서 x86_64에는 HP-UX 이외의 파워 및 IA-64, &lt;code&gt;__float128&lt;/code&gt; 의 별칭입니다 &lt;code&gt;_Float128&lt;/code&gt; . hppa 및 IA-64 HP-UX에서 &lt;code&gt;__float128&lt;/code&gt; 은 &lt;code&gt;long double&lt;/code&gt; 의 별칭입니다 .</target>
        </trans-unit>
        <trans-unit id="ffb2bf9a670bef293cfa77a116c8f843376e5401" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__float80&lt;/code&gt; is available on the i386, x86_64, and IA-64 targets, and supports the 80-bit (&lt;code&gt;XFmode&lt;/code&gt;) floating type. It is an alias for the type name &lt;code&gt;_Float64x&lt;/code&gt; on these targets.</source>
          <target state="translated">&lt;code&gt;__float80&lt;/code&gt; 은 i386, x86_64 및 IA-64 대상에서 사용 가능하며 80 비트 ( &lt;code&gt;XFmode&lt;/code&gt; ) 부동 유형을 지원합니다. 이 대상 에서 유형 이름 &lt;code&gt;_Float64x&lt;/code&gt; 의 별명입니다 .</target>
        </trans-unit>
        <trans-unit id="7ec6ed15db3de1e0e785dbadf3953c59dadef3f7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__ibm128&lt;/code&gt; is available on PowerPC targets, and provides access to the IBM extended double format which is the current format used for &lt;code&gt;long double&lt;/code&gt;. When &lt;code&gt;long double&lt;/code&gt; transitions to &lt;code&gt;__float128&lt;/code&gt; on PowerPC in the future, &lt;code&gt;__ibm128&lt;/code&gt; will remain for use in conversions between the two types.</source>
          <target state="translated">&lt;code&gt;__ibm128&lt;/code&gt; 은 PowerPC 대상에서 사용 가능하며 &lt;code&gt;long double&lt;/code&gt; 에 사용되는 현재 형식 인 IBM 확장 이중 형식에 대한 액세스를 제공합니다 . 때 &lt;code&gt;long double&lt;/code&gt; 로 전환 &lt;code&gt;__float128&lt;/code&gt; 미래의 파워에이 &lt;code&gt;__ibm128&lt;/code&gt; 는 두 가지 유형 사이의 변환에 사용하기 위해 유지됩니다.</target>
        </trans-unit>
        <trans-unit id="9e3a9ed7baa3bf65df3ff05f513613983a9587ab" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;acc&lt;/code&gt; arguments are evaluated at compile time and specify the number of an accumulator register. For example, an &lt;code&gt;acc&lt;/code&gt; argument of 2 selects the ACC2 register.</source>
          <target state="translated">&lt;code&gt;acc&lt;/code&gt; 인수는 컴파일 타임에 평가되며 누산기 레지스터의 수를 지정합니다. 예를 들어, &lt;code&gt;acc&lt;/code&gt; 인수가 2이면 ACC2 레지스터가 선택됩니다.</target>
        </trans-unit>
        <trans-unit id="15fdbd93cf947c8849cb1d5a35f4090a626ff637" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;array&lt;/code&gt; needs to be an Objective-C object (usually a collection object, for example an array, a dictionary or a set) which implements the &amp;ldquo;Fast Enumeration Protocol&amp;rdquo; (see below). If you are using a Foundation library such as GNUstep Base or Apple Cocoa Foundation, all collection objects in the library implement this protocol and can be used in this way.</source>
          <target state="translated">&lt;code&gt;array&lt;/code&gt; 는 &quot;Fast Enumeration Protocol&quot;(아래 참조)을 구현하는 Objective-C 객체 (일반적으로 컬렉션 객체, 예를 들어 어레이, 사전 또는 세트) 여야합니다. GNUstep Base 또는 Apple Cocoa Foundation과 같은 Foundation 라이브러리를 사용하는 경우 라이브러리의 모든 컬렉션 객체가이 프로토콜을 구현하므로 이러한 방식으로 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="426e3d34f5d2b8cc641dc2d655c2412b3ba31507" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;asm goto&lt;/code&gt; allows assembly code to jump to one or more C labels. The &lt;var&gt;GotoLabels&lt;/var&gt; section in an &lt;code&gt;asm goto&lt;/code&gt; statement contains a comma-separated list of all C labels to which the assembler code may jump. GCC assumes that &lt;code&gt;asm&lt;/code&gt; execution falls through to the next statement (if this is not the case, consider using the &lt;code&gt;__builtin_unreachable&lt;/code&gt; intrinsic after the &lt;code&gt;asm&lt;/code&gt; statement). Optimization of &lt;code&gt;asm goto&lt;/code&gt; may be improved by using the &lt;code&gt;hot&lt;/code&gt; and &lt;code&gt;cold&lt;/code&gt; label attributes (see &lt;a href=&quot;label-attributes#Label-Attributes&quot;&gt;Label Attributes&lt;/a&gt;).</source>
          <target state="translated">&lt;code&gt;asm goto&lt;/code&gt; 를 사용하면 어셈블리 코드가 하나 이상의 C 레이블로 이동할 수 있습니다. &lt;var&gt;GotoLabels&lt;/var&gt; 의 섹션 &lt;code&gt;asm goto&lt;/code&gt; 문은 어셈블러 코드가 점프 할 수있는 모든 C 라벨의 쉼표로 구분 된 목록이 포함되어 있습니다. GCC는 &lt;code&gt;asm&lt;/code&gt; 실행이 다음 명령문으로 넘어 간다고 가정합니다 (이 경우가 아니면 &lt;code&gt;asm&lt;/code&gt; 명령문 뒤에 &lt;code&gt;__builtin_unreachable&lt;/code&gt; 내장 함수 사용을 고려하십시오 ). 최적화 &lt;code&gt;asm goto&lt;/code&gt; 사용하여 개선 될 수있다 &lt;code&gt;hot&lt;/code&gt; 및 &lt;code&gt;cold&lt;/code&gt; 라벨 속성 (참조 &lt;a href=&quot;label-attributes#Label-Attributes&quot;&gt;레이블 속성&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="c9823fe22f97e1ec190b250dc2a2fdf94a1ee857" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;asm&lt;/code&gt; statements may not perform jumps into other &lt;code&gt;asm&lt;/code&gt; statements, only to the listed &lt;var&gt;GotoLabels&lt;/var&gt;. GCC&amp;rsquo;s optimizers do not know about other jumps; therefore they cannot take account of them when deciding how to optimize.</source>
          <target state="translated">&lt;code&gt;asm&lt;/code&gt; 문은 다른 &lt;code&gt;asm&lt;/code&gt; 문 으로 점프하지 않고 나열된 &lt;var&gt;GotoLabels&lt;/var&gt; 로만 점프 할 수 있습니다 . GCC의 옵티마이 저는 다른 점프에 대해 모른다. 따라서 최적화 방법을 결정할 때이를 고려할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="62977bb50d3c5a19ea5904a3a299ffd7ea5dbd29" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;asm&lt;/code&gt; statements may not perform jumps into other &lt;code&gt;asm&lt;/code&gt; statements. GCC does not know about these jumps, and therefore cannot take account of them when deciding how to optimize. Jumps from &lt;code&gt;asm&lt;/code&gt; to C labels are only supported in extended &lt;code&gt;asm&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;asm&lt;/code&gt; 문은 다른 &lt;code&gt;asm&lt;/code&gt; 문 으로 점프하지 않을 수 있습니다 . GCC는 이러한 점프에 대해 알지 못하므로 최적화 방법을 결정할 때 이러한 점프를 고려할 수 없습니다. &lt;code&gt;asm&lt;/code&gt; 에서 C 레이블로의 점프 는 확장 된 &lt;code&gt;asm&lt;/code&gt; 에서만 지원됩니다 .</target>
        </trans-unit>
        <trans-unit id="c9448d646265094e46fad56b4a1ad54b2c75f890" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;asm&lt;/code&gt; supports operand modifiers on operands (for example &amp;lsquo;</source>
          <target state="translated">&lt;code&gt;asm&lt;/code&gt; 은 피연산자에서 피연산자 수정자를 지원합니다 (예 : '</target>
        </trans-unit>
        <trans-unit id="47c475345b4b6683f86ef0bd1304fa403571227e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;b&lt;/code&gt; followed by the starting position of the bit-field, the type of the bit-field and the size of the bit-field (the bit-fields encoding was changed from the NeXT&amp;rsquo;s compiler encoding, see below)</source>
          <target state="translated">&lt;code&gt;b&lt;/code&gt; 다음에는 비트 필드의 시작 위치, 비트 필드의 유형 및 비트 필드의 크기가 이어집니다 (비트 필드 인코딩은 NeXT의 컴파일러 인코딩에서 변경되었습니다 (아래 참조)).</target>
        </trans-unit>
        <trans-unit id="fd931d3282f78cf10b6e109fc3d87523a40b1c70" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;const int*&lt;/code&gt; is a pointer to a &lt;code&gt;const int&lt;/code&gt;, and so is encoded as &lt;code&gt;^ri&lt;/code&gt;. &lt;code&gt;int* const&lt;/code&gt;, instead, is a &lt;code&gt;const&lt;/code&gt; pointer to an &lt;code&gt;int&lt;/code&gt;, and so is encoded as &lt;code&gt;r^i&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;const int*&lt;/code&gt; (A)에 대한 포인터이다 &lt;code&gt;const int&lt;/code&gt; 등으로 인코딩되어 &lt;code&gt;^ri&lt;/code&gt; . 대신 &lt;code&gt;int* const&lt;/code&gt; 는 &lt;code&gt;int&lt;/code&gt; 에 대한 &lt;code&gt;const&lt;/code&gt; 포인터 이므로 &lt;code&gt;r^i&lt;/code&gt; 로 인코딩됩니다 .</target>
        </trans-unit>
        <trans-unit id="8cc303077f2d42536c4b3baafc5729fd35626b25" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;const&lt;/code&gt; arguments represent immediate operands in the underlying FR-V instructions. They must be compile-time constants.</source>
          <target state="translated">&lt;code&gt;const&lt;/code&gt; 인수는 기본 FR-V 명령어에서 즉시 피연산자를 나타냅니다. 컴파일 타임 상수 여야합니다.</target>
        </trans-unit>
        <trans-unit id="deb6088d1e3cb9956bb32715c4b9b0433c0fb80e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;decltype(nullptr)&lt;/code&gt; incorrectly had an alignment of 1, leading to unaligned accesses. Note that this did not affect the ABI of a function with a &lt;code&gt;nullptr_t&lt;/code&gt; parameter, as parameters have a minimum alignment.</source>
          <target state="translated">&lt;code&gt;decltype(nullptr)&lt;/code&gt; 의 정렬이 1이 잘못되어 정렬되지 않은 액세스가 발생했습니다. 매개 변수가 최소 정렬을 갖기 때문에 이는 &lt;code&gt;nullptr_t&lt;/code&gt; 매개 변수 가있는 함수의 ABI에 영향을 미치지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="13371da4b8a0998cda9c846517eca9aac42602d3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;enum foo;&lt;/code&gt;, with details to follow.</source>
          <target state="translated">&lt;code&gt;enum foo;&lt;/code&gt; 자세한 내용은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="9e91e48e9653d7d4d932a05bfbd83b09588c7939" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;enum&lt;/code&gt;s are always encoded as &amp;rsquo;i&amp;rsquo; (int) even if they are actually unsigned or long.</source>
          <target state="translated">&lt;code&gt;enum&lt;/code&gt; 은 실제로 부호가 없거나 길더라도 항상 'i'(int)로 인코딩됩니다.</target>
        </trans-unit>
        <trans-unit id="9a12395e61d19efb5c294812d6196468603d44b6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;extern&lt;/code&gt; declarations are not affected by</source>
          <target state="translated">&lt;code&gt;extern&lt;/code&gt; 선언은 영향을받지 않습니다</target>
        </trans-unit>
        <trans-unit id="4b6de559d80875c4a2043040ec9b3a928c196dad" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;float&lt;/code&gt; for return type and parameter type</source>
          <target state="translated">&lt;code&gt;float&lt;/code&gt; 리턴 유형 및 매개 변수 유형의 경우 float</target>
        </trans-unit>
        <trans-unit id="43f52ce2765906e82519d10c80ebb890c471c9d3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;gcc&lt;/code&gt; is a driver program. It performs its job by invoking a sequence of other programs to do the work of compiling, assembling and linking. GCC interprets its command-line parameters and uses these to deduce which programs it should invoke, and which command-line options it ought to place on their command lines. This behavior is controlled by &lt;em&gt;spec strings&lt;/em&gt;. In most cases there is one spec string for each program that GCC can invoke, but a few programs have multiple spec strings to control their behavior. The spec strings built into GCC can be overridden by using the</source>
          <target state="translated">&lt;code&gt;gcc&lt;/code&gt; 는 드라이버 프로그램입니다. 컴파일, 어셈블 및 링크 작업을 수행하기 위해 다른 프로그램 시퀀스를 호출하여 작업을 수행합니다. GCC는 명령 줄 매개 변수를 해석하고이를 사용하여 호출 할 프로그램과 명령 줄에 배치 할 명령 줄 옵션을 추론합니다. 이 동작은 &lt;em&gt;사양 문자열에&lt;/em&gt; 의해 제어됩니다 . 대부분의 경우 GCC가 호출 할 수있는 각 프로그램마다 하나의 사양 문자열이 있지만 일부 프로그램에는 동작을 제어하기위한 여러 사양 문자열이 있습니다. GCC에 내장 된 사양 문자열은</target>
        </trans-unit>
        <trans-unit id="78e0e9f2c419ee9f240f0845bc755717d55d3a97" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;gcov-dump&lt;/code&gt; accepts the following options:</source>
          <target state="translated">&lt;code&gt;gcov-dump&lt;/code&gt; 는 다음 옵션을 허용합니다.</target>
        </trans-unit>
        <trans-unit id="57d6fe4b10a5a2126cbfcec6595777a79798d69e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;gcov-dump&lt;/code&gt; is a tool you can use in conjunction with GCC to dump content of gcda and gcno profile files offline.</source>
          <target state="translated">&lt;code&gt;gcov-dump&lt;/code&gt; 는 gcda 및 gcno 프로필 파일의 내용을 오프라인으로 덤프하기 위해 GCC와 함께 사용할 수있는 도구입니다.</target>
        </trans-unit>
        <trans-unit id="2878b99530b4f0ab8508c0886d2f8099475e075b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;gcov-dump&lt;/code&gt;&amp;mdash;an offline gcda and gcno profile dump tool.</source>
          <target state="translated">&lt;code&gt;gcov-dump&lt;/code&gt; &amp;mdash; 오프라인 gcda 및 gcno 프로파일 덤프 도구입니다.</target>
        </trans-unit>
        <trans-unit id="8557e16ee11b3bb8a6161e3b196a98d4d9ef3676" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;gcov-tool&lt;/code&gt; accepts the following options:</source>
          <target state="translated">&lt;code&gt;gcov-tool&lt;/code&gt; 은 다음 옵션을 허용합니다.</target>
        </trans-unit>
        <trans-unit id="834e3a72a863342de668198a9b180e31689bb9fa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;gcov-tool&lt;/code&gt; is a tool you can use in conjunction with GCC to manipulate or process gcda profile files offline.</source>
          <target state="translated">&lt;code&gt;gcov-tool&lt;/code&gt; 은 GCC와 함께 gcda 프로필 파일을 오프라인으로 조작하거나 처리하는 데 사용할 수있는 도구입니다.</target>
        </trans-unit>
        <trans-unit id="8966e78c51b409536bc0ea171add9c067eaae6cb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;gcov-tool&lt;/code&gt; is an offline tool to process gcc&amp;rsquo;s gcda profile files.</source>
          <target state="translated">&lt;code&gt;gcov-tool&lt;/code&gt; 은 gcc의 gcda 프로파일 파일을 처리하는 오프라인 도구입니다.</target>
        </trans-unit>
        <trans-unit id="70183d08ebe3785a624a3a0d2f54f5da4fcf92c8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;gcov-tool&lt;/code&gt;&amp;mdash;an offline gcda profile processing program.</source>
          <target state="translated">&lt;code&gt;gcov-tool&lt;/code&gt; &amp;mdash; 오프라인 gcda 프로파일 처리 프로그램.</target>
        </trans-unit>
        <trans-unit id="432fd55f9f3348b69e564e9e68b9ac68338b2330" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;gcov&lt;/code&gt; accepts the following options:</source>
          <target state="translated">&lt;code&gt;gcov&lt;/code&gt; 는 다음 옵션을 허용합니다.</target>
        </trans-unit>
        <trans-unit id="ef7fa5c92c81ba37950cfb7081e034b38df44ee1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;gcov&lt;/code&gt; creates a logfile called</source>
          <target state="translated">&lt;code&gt;gcov&lt;/code&gt; 는</target>
        </trans-unit>
        <trans-unit id="fa86b3b9c4851aca0143ed5eebf12b37ac982caa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;gcov&lt;/code&gt; is a test coverage program. Use it in concert with GCC to analyze your programs to help create more efficient, faster running code and to discover untested parts of your program. You can use &lt;code&gt;gcov&lt;/code&gt; as a profiling tool to help discover where your optimization efforts will best affect your code. You can also use &lt;code&gt;gcov&lt;/code&gt; along with the other profiling tool, &lt;code&gt;gprof&lt;/code&gt;, to assess which parts of your code use the greatest amount of computing time.</source>
          <target state="translated">&lt;code&gt;gcov&lt;/code&gt; 는 테스트 범위 프로그램입니다. GCC와 함께 사용하면 프로그램을 분석하여보다 효율적이고 빠르게 실행되는 코드를 작성하고 테스트되지 않은 프로그램 부분을 발견 할 수 있습니다. &lt;code&gt;gcov&lt;/code&gt; 를 프로파일 링 도구로 사용 하여 최적화 노력이 코드에 가장 영향을 미치는 위치를 찾을 수 있습니다. 당신은 또한 사용할 수 있습니다 &lt;code&gt;gcov&lt;/code&gt; 의를 다른 프로파일 링 도구와 함께 &lt;code&gt;gprof&lt;/code&gt; 은 코드의 어느 부분이 계산 시간의 가장 많은 양을 사용하는 평가.</target>
        </trans-unit>
        <trans-unit id="ec4c7d87db361b8b7217252e79155f330d87180c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;gcov&lt;/code&gt; is a tool you can use in conjunction with GCC to test code coverage in your programs.</source>
          <target state="translated">&lt;code&gt;gcov&lt;/code&gt; 는 GCC와 함께 사용하여 프로그램에서 코드 적용 범위를 테스트 할 수있는 도구입니다.</target>
        </trans-unit>
        <trans-unit id="74c1eaafeae6a0c3622569a9b97608b21c035122" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;gcov&lt;/code&gt; should be run with the current directory the same as that when you invoked the compiler. Otherwise it will not be able to locate the source files. &lt;code&gt;gcov&lt;/code&gt; produces files called</source>
          <target state="translated">&lt;code&gt;gcov&lt;/code&gt; 는 컴파일러를 호출 할 때와 동일하게 현재 디렉토리에서 실행되어야합니다. 그렇지 않으면 소스 파일을 찾을 수 없습니다. &lt;code&gt;gcov&lt;/code&gt; 는</target>
        </trans-unit>
        <trans-unit id="54f992c071dcdc4cf317b5dc2c2e8150dab3baed" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;gcov&lt;/code&gt; uses two files for profiling. The names of these files are derived from the original &lt;em&gt;object&lt;/em&gt; file by substituting the file suffix with either</source>
          <target state="translated">&lt;code&gt;gcov&lt;/code&gt; 는 프로파일 링을 위해 두 개의 파일을 사용 합니다. 이러한 파일의 이름은 파일 접미사를 다음과 같이 대체하여 원래 &lt;em&gt;객체&lt;/em&gt; 파일 에서 파생 됩니다.</target>
        </trans-unit>
        <trans-unit id="e0e281a8c455e080b9c9615f521b0af9f3afc81d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;gcov&lt;/code&gt; works only on code compiled with GCC. It is not compatible with any other profiling or test coverage mechanism.</source>
          <target state="translated">&lt;code&gt;gcov&lt;/code&gt; 는 GCC로 컴파일 된 코드에서만 작동합니다. 다른 프로파일 링 또는 테스트 범위 메커니즘과 호환되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="e18b2104276bf04773cc9483f7f381c6d995630f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;gcov&lt;/code&gt;&amp;mdash;a test coverage program.</source>
          <target state="translated">&lt;code&gt;gcov&lt;/code&gt; &amp;mdash; 테스트 범위 프로그램.</target>
        </trans-unit>
        <trans-unit id="0adbd472f7e4a6a8700ee625ca50b5065e7189f2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;i32, i64, u32, u64, f32, f64&lt;/code&gt;, defined as follows:</source>
          <target state="translated">&lt;code&gt;i32, i64, u32, u64, f32, f64&lt;/code&gt; 는 다음과 같이 정의됩니다.</target>
        </trans-unit>
        <trans-unit id="c651bda5c1e10d455f6b6c7f62a6f71255f9e521" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;iacc&lt;/code&gt; arguments are similar to &lt;code&gt;acc&lt;/code&gt; arguments but specify the number of an IACC register. See see &lt;a href=&quot;other-built_002din-functions#Other-Built_002din-Functions&quot;&gt;Other Built-in Functions&lt;/a&gt; for more details.</source>
          <target state="translated">&lt;code&gt;iacc&lt;/code&gt; 인수는 &lt;code&gt;acc&lt;/code&gt; 인수 와 유사 하지만 IACC 레지스터의 수를 지정하십시오. 자세한 내용은 &lt;a href=&quot;other-built_002din-functions#Other-Built_002din-Functions&quot;&gt;기타 내장 기능&lt;/a&gt; 을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="bf79502e7b46209589262e2429120814cbb13c52" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;imm0_15&lt;/code&gt;, an integer literal in range 0 to 15;</source>
          <target state="translated">&lt;code&gt;imm0_15&lt;/code&gt; , 0 ~ 15 범위의 정수 리터럴;</target>
        </trans-unit>
        <trans-unit id="ccc2033cd80d019d5fd83cb192150729b7904cf6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;imm0_1&lt;/code&gt;, an integer literal in range 0 to 1;</source>
          <target state="translated">&lt;code&gt;imm0_1&lt;/code&gt; , 0에서 1 사이의 정수 리터럴;</target>
        </trans-unit>
        <trans-unit id="f624a59ec5d313a1c0a203fc5cdfd4a3666bdad5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;imm0_255&lt;/code&gt;, an integer literal in range 0 to 255;</source>
          <target state="translated">&lt;code&gt;imm0_255&lt;/code&gt; , 0 ~ 255 범위의 정수 리터럴;</target>
        </trans-unit>
        <trans-unit id="45c72131be83eef97ea9ee3eff2a0bdba7519f47" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;imm0_31&lt;/code&gt;, an integer literal in range 0 to 31;</source>
          <target state="translated">&lt;code&gt;imm0_31&lt;/code&gt; , 0 ~ 31 범위의 정수 리터럴;</target>
        </trans-unit>
        <trans-unit id="cde4836239d0583916a4b3f7436c408e99e7f181" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;imm0_3&lt;/code&gt;, an integer literal in range 0 to 3;</source>
          <target state="translated">&lt;code&gt;imm0_3&lt;/code&gt; , 0 ~ 3 범위의 정수 리터럴;</target>
        </trans-unit>
        <trans-unit id="51e823a1bbc6ba2a324f7474f9da47e3b2690272" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;imm0_63&lt;/code&gt;, an integer literal in range 0 to 63;</source>
          <target state="translated">&lt;code&gt;imm0_63&lt;/code&gt; , 0-63 범위의 정수 리터럴;</target>
        </trans-unit>
        <trans-unit id="62f6834f1b1628360d13102cd8355d1bff98dfb5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;imm0_7&lt;/code&gt;, an integer literal in range 0 to 7;</source>
          <target state="translated">&lt;code&gt;imm0_7&lt;/code&gt; , 0 ~ 7 범위의 정수 리터럴;</target>
        </trans-unit>
        <trans-unit id="06869e0d4af1794473183f20d27a91d5c322515b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;imm1_4&lt;/code&gt;, an integer literal in range 1 to 4;</source>
          <target state="translated">&lt;code&gt;imm1_4&lt;/code&gt; , 1-4 범위의 정수 리터럴;</target>
        </trans-unit>
        <trans-unit id="26b8f3ccab339df690ac564365568e69734e0e95" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;imm_n1024_1022&lt;/code&gt;, an integer literal in range -512 to 511 left shifted by 1 bit, i.e., -1024, -1022, &amp;hellip;, 1020, 1022;</source>
          <target state="translated">&lt;code&gt;imm_n1024_1022&lt;/code&gt; , -512에서 511 범위의 정수 리터럴이 1 비트 왼쪽으로 시프트되었습니다. 즉, -1024, -1022,&amp;hellip;, 1020, 1022;</target>
        </trans-unit>
        <trans-unit id="53f347dd23c9ce86f4bf63425a73319aeca2e71a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;imm_n16_15&lt;/code&gt;, an integer literal in range -16 to 15;</source>
          <target state="translated">&lt;code&gt;imm_n16_15&lt;/code&gt; , -16에서 15 사이의 정수 리터럴;</target>
        </trans-unit>
        <trans-unit id="c764a9f154679364bdd3af401c15760d950c39d4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;imm_n2048_2044&lt;/code&gt;, an integer literal in range -512 to 511 left shifted by 2 bits, i.e., -2048, -2044, &amp;hellip;, 2040, 2044;</source>
          <target state="translated">&lt;code&gt;imm_n2048_2044&lt;/code&gt; , -512 내지 511 범위의 정수 리터럴이 2 비트만큼 왼쪽으로 시프트 된, 즉 -2048, -2044,&amp;hellip;, 2040, 2044;</target>
        </trans-unit>
        <trans-unit id="d8621ae125b08b357812594db312fcdb8bd2e201" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;imm_n4096_4088&lt;/code&gt;, an integer literal in range -512 to 511 left shifted by 3 bits, i.e., -4096, -4088, &amp;hellip;, 4080, 4088;</source>
          <target state="translated">&lt;code&gt;imm_n4096_4088&lt;/code&gt; , -512에서 511 사이의 정수 리터럴은 3 비트만큼 왼쪽으로 시프트됩니다. 즉 -4096, -4088,&amp;hellip;, 4080, 4088;</target>
        </trans-unit>
        <trans-unit id="43bcd7d1a4a29ac9e7f1c73f1912ac48e5ce1624" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;imm_n512_511&lt;/code&gt;, an integer literal in range -512 to 511;</source>
          <target state="translated">&lt;code&gt;imm_n512_511&lt;/code&gt; -512에서 511 사이의 정수 리터럴 인 imm_n512_511 ;</target>
        </trans-unit>
        <trans-unit id="f04c7ff5dca47e97ec5511198b36d3aa9615e32d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;int16x4_t&lt;/code&gt;, a vector of four signed 16-bit integers;</source>
          <target state="translated">&lt;code&gt;int16x4_t&lt;/code&gt; 4 개의 부호있는 16 비트 정수로 구성된 벡터 int16x4_t ;</target>
        </trans-unit>
        <trans-unit id="d63e9df03ecc48a8a23928c599b1004cd533f6d6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;int32x2_t&lt;/code&gt;, a vector of two signed 32-bit integers.</source>
          <target state="translated">&lt;code&gt;int32x2_t&lt;/code&gt; , 부호있는 두 개의 32 비트 정수로 구성된 벡터</target>
        </trans-unit>
        <trans-unit id="91184ef12147d2f6b1bdaa56fe5d9583a6f4e83a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;int8x8_t&lt;/code&gt;, a vector of eight signed 8-bit integers;</source>
          <target state="translated">&lt;code&gt;int8x8_t&lt;/code&gt; 8 개의 부호있는 8 비트 정수의 벡터 인 int8x8_t ;</target>
        </trans-unit>
        <trans-unit id="9a7265111af471ce530480c106de4c972fb277fa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;int&lt;/code&gt; for return type and parameter type</source>
          <target state="translated">&lt;code&gt;int&lt;/code&gt; 반환 유형 및 매개 변수 유형의 경우 int</target>
        </trans-unit>
        <trans-unit id="3e0d50378937884eeb028aecd3fcc684e4a49b74" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;j&lt;/code&gt; followed by the inner type. For example &lt;code&gt;_Complex double&lt;/code&gt; is encoded as &quot;jd&quot;.</source>
          <target state="translated">&lt;code&gt;j&lt;/code&gt; 다음에 내부 유형이옵니다. 예를 들어 &lt;code&gt;_Complex double&lt;/code&gt; 은 &quot;jd&quot;로 인코딩됩니다.</target>
        </trans-unit>
        <trans-unit id="2f711a37cb98098d461731b92b78a9d7c2b5ec6f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;movn.ps&lt;/code&gt;/&lt;code&gt;movz.ps&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;movn.ps&lt;/code&gt;/&lt;code&gt;movz.ps&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="bb1626a9beed4fd0495f07220bec199cc6d6bd0a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;naked&lt;/code&gt; functions do not have a return instruction whereas &lt;code&gt;OS_main&lt;/code&gt; and &lt;code&gt;OS_task&lt;/code&gt; functions have a &lt;code&gt;RET&lt;/code&gt; or &lt;code&gt;RETI&lt;/code&gt; return instruction.</source>
          <target state="translated">&lt;code&gt;naked&lt;/code&gt; 함수에는 리턴 명령어가 &lt;code&gt;OS_main&lt;/code&gt; 및 &lt;code&gt;OS_task&lt;/code&gt; 함수에는 &lt;code&gt;RET&lt;/code&gt; 또는 &lt;code&gt;RETI&lt;/code&gt; 리턴 명령어가 있습니다.</target>
        </trans-unit>
        <trans-unit id="f91f91e06fe6fe3ed6698c6a7170097cb9c11482" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;naked&lt;/code&gt; functions do not set up a frame for local variables or a frame pointer whereas &lt;code&gt;OS_main&lt;/code&gt; and &lt;code&gt;OS_task&lt;/code&gt; do this as needed.</source>
          <target state="translated">&lt;code&gt;naked&lt;/code&gt; 함수는 로컬 변수 또는 프레임 포인터에 대한 프레임을 설정하지 않지만 &lt;code&gt;OS_main&lt;/code&gt; 및 &lt;code&gt;OS_task&lt;/code&gt; 는 필요에 따라이를 수행합니다.</target>
        </trans-unit>
        <trans-unit id="e1ec8966dbb2d024c34ce202400922786b20bf42" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;q31&lt;/code&gt; and &lt;code&gt;i32&lt;/code&gt; are actually the same as &lt;code&gt;int&lt;/code&gt;, but we use &lt;code&gt;q31&lt;/code&gt; to indicate a Q31 fractional value and &lt;code&gt;i32&lt;/code&gt; to indicate a 32-bit integer value. Similarly, &lt;code&gt;a64&lt;/code&gt; is the same as &lt;code&gt;long long&lt;/code&gt;, but we use &lt;code&gt;a64&lt;/code&gt; to indicate values that are placed in one of the four DSP accumulators (&lt;code&gt;$ac0&lt;/code&gt;, &lt;code&gt;$ac1&lt;/code&gt;, &lt;code&gt;$ac2&lt;/code&gt; or &lt;code&gt;$ac3&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;q31&lt;/code&gt; 과 &lt;code&gt;i32&lt;/code&gt; 는 실제로 &lt;code&gt;int&lt;/code&gt; 와 동일 하지만 우리는 &lt;code&gt;q31&lt;/code&gt; 을 사용 하여 Q31 분수 값 을 나타내고 &lt;code&gt;i32&lt;/code&gt; 는 32 비트 정수 값을 나타냅니다. 마찬가지로 &lt;code&gt;a64&lt;/code&gt; 는 &lt;code&gt;long long&lt;/code&gt; 과 동일 하지만 &lt;code&gt;a64&lt;/code&gt; 를 사용 하여 4 개의 DSP 누산기 중 하나 ( &lt;code&gt;$ac0&lt;/code&gt; , &lt;code&gt;$ac1&lt;/code&gt; , &lt;code&gt;$ac2&lt;/code&gt; 또는 &lt;code&gt;$ac3&lt;/code&gt; ) 에있는 값을 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="ea0054c5fec474c155dbd98ae3adc8592ccc0ad9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;strict-align&lt;/code&gt; indicates that the compiler should not assume that unaligned memory references are handled by the system. To allow the compiler to assume that aligned memory references are handled by the system, the inverse attribute &lt;code&gt;no-strict-align&lt;/code&gt; can be specified. The behavior is same as for the command-line option</source>
          <target state="translated">&lt;code&gt;strict-align&lt;/code&gt; 은 컴파일러가 정렬되지 않은 메모리 참조가 시스템에 의해 처리된다고 가정해서는 안됨을 나타냅니다. 컴파일러가 정렬 된 메모리 참조를 시스템에서 처리한다고 가정 할 수 있도록 반대 속성 &lt;code&gt;no-strict-align&lt;/code&gt; 을 지정할 수 있습니다. 동작은 명령 행 옵션과 동일합니다.</target>
        </trans-unit>
        <trans-unit id="0ce41d50092061190708b7c5fd578471925d484e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;tbegin&lt;/code&gt; has been executed as part of normal processing. The transaction body is supposed to be executed.</source>
          <target state="translated">&lt;code&gt;tbegin&lt;/code&gt; 은 정상 처리의 일부로 실행되었습니다. 트랜잭션 본문이 실행되어야합니다.</target>
        </trans-unit>
        <trans-unit id="90a2359fdefeabe506da21e5ceeb1ec6dfb149dc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;type_info&lt;/code&gt; objects</source>
          <target state="translated">&lt;code&gt;type_info&lt;/code&gt; 객체</target>
        </trans-unit>
        <trans-unit id="972569711d57266ec65a8196096540c87f973793" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;typeof&lt;/code&gt; is often useful in conjunction with statement expressions (see &lt;a href=&quot;statement-exprs#Statement-Exprs&quot;&gt;Statement Exprs&lt;/a&gt;). Here is how the two together can be used to define a safe &amp;ldquo;maximum&amp;rdquo; macro which operates on any arithmetic type and evaluates each of its arguments exactly once:</source>
          <target state="translated">&lt;code&gt;typeof&lt;/code&gt; 문장 표현과 함께 종종 유용하다 (참조 &lt;a href=&quot;statement-exprs#Statement-Exprs&quot;&gt;문 Exprs을&lt;/a&gt; ). 다음은 두 가지를 함께 사용하여 모든 산술 유형에서 작동하고 각 인수를 정확히 한 번만 평가하는 안전한 &quot;최대&quot;매크로를 정의하는 방법입니다.</target>
        </trans-unit>
        <trans-unit id="01dc66305ee017274a8f90b9afb7de83e8f46c89" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;typeof&lt;/code&gt;: referring to the type of an expression.</source>
          <target state="translated">&lt;code&gt;typeof&lt;/code&gt; : 표현식의 유형을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="8c7b90f2794ef9994bb660999c0f322a942bf8f4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;uint16x4_t&lt;/code&gt;, a vector of four unsigned 16-bit integers;</source>
          <target state="translated">&lt;code&gt;uint16x4_t&lt;/code&gt; , 4 개의 부호없는 16 비트 정수로 구성된 벡터;</target>
        </trans-unit>
        <trans-unit id="b0558ac59824429cd7d9d4b1f36c21a2ee0fe3e7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;uint32x2_t&lt;/code&gt;, a vector of two unsigned 32-bit integers;</source>
          <target state="translated">&lt;code&gt;uint32x2_t&lt;/code&gt; , 부호없는 두 개의 32 비트 정수로 구성된 벡터.</target>
        </trans-unit>
        <trans-unit id="2d69c68962c47d62e79bf31389c4415c2f200ee4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;uint8x8_t&lt;/code&gt;, a vector of eight unsigned 8-bit integers;</source>
          <target state="translated">&lt;code&gt;uint8x8_t&lt;/code&gt; 8 개의 부호없는 8 비트 정수로 구성된 벡터 인 uint8x8_t ;</target>
        </trans-unit>
        <trans-unit id="dbb644e8ba42f8f623407a24fa989ae31fed8572" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;union U&lt;/code&gt; is always passed in memory.</source>
          <target state="translated">&lt;code&gt;union U&lt;/code&gt; 는 항상 메모리에 전달됩니다.</target>
        </trans-unit>
        <trans-unit id="fadc8e6d5e8d31b3a291f79221d6f051c12b8821" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;v16i8&lt;/code&gt;, a vector of sixteen signed 8-bit integers;</source>
          <target state="translated">&lt;code&gt;v16i8&lt;/code&gt; 16 개의 부호있는 8 비트 정수로 구성된 벡터 v16i8 ;</target>
        </trans-unit>
        <trans-unit id="131a161af4f7e0b4ea5ae1747e0ea7514b0c83b0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;v16u8&lt;/code&gt;, a vector of sixteen unsigned 8-bit integers;</source>
          <target state="translated">&lt;code&gt;v16u8&lt;/code&gt; 16 개의 부호없는 8 비트 정수로 구성된 벡터 v16u8 ;</target>
        </trans-unit>
        <trans-unit id="1b29406a43f217bd305e13cb54ba71e651d5bba2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;v2f64&lt;/code&gt;, a vector of two 64-bit doubles.</source>
          <target state="translated">&lt;code&gt;v2f64&lt;/code&gt; 두 개의 64 비트 복소수 로 구성된 벡터 인 v2f64</target>
        </trans-unit>
        <trans-unit id="7512973093e5491713fd6ebd5358156e9bc4a1dc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;v2i64&lt;/code&gt;, a vector of two signed 64-bit integers;</source>
          <target state="translated">&lt;code&gt;v2i64&lt;/code&gt; 2 개의 부호있는 64 비트 정수로 구성된 벡터 인 v2i64 ;</target>
        </trans-unit>
        <trans-unit id="9db6b88b33ec3aa8ad125c2d46beb5f476bec0d1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;v2sf&lt;/code&gt; values are initialized in the same way as aggregates. For example:</source>
          <target state="translated">&lt;code&gt;v2sf&lt;/code&gt; 값은 집계와 동일한 방식으로 초기화됩니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="c3855d3df800b3ae2c45c123aa6cb8ce5e785ead" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;v2u64&lt;/code&gt;, a vector of two unsigned 64-bit integers;</source>
          <target state="translated">&lt;code&gt;v2u64&lt;/code&gt; - 부호없는 두 개의 64 비트 정수로 구성된 벡터입니다.</target>
        </trans-unit>
        <trans-unit id="6ad31881d9c216547f22d1f2a2db29238b4dc646" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;v4f32&lt;/code&gt;, a vector of four 32-bit floats;</source>
          <target state="translated">&lt;code&gt;v4f32&lt;/code&gt; 4 개의 32 비트 부동 소수점 벡터 인 v4f32 ;</target>
        </trans-unit>
        <trans-unit id="31c7877922fb039b6c0292daf271e4981078508f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;v4i32&lt;/code&gt;, a vector of four signed 32-bit integers;</source>
          <target state="translated">&lt;code&gt;v4i32&lt;/code&gt; 4 개의 부호있는 32 비트 정수로 구성된 벡터 인 v4i32 ;</target>
        </trans-unit>
        <trans-unit id="17a0ec2f60a3d3e13fba7b775b40060a5c47ab58" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;v4i8&lt;/code&gt;, &lt;code&gt;v4q7&lt;/code&gt;, &lt;code&gt;v2i16&lt;/code&gt; and &lt;code&gt;v2q15&lt;/code&gt; values are initialized in the same way as aggregates. For example:</source>
          <target state="translated">&lt;code&gt;v4i8&lt;/code&gt; , &lt;code&gt;v4q7&lt;/code&gt; , &lt;code&gt;v2i16&lt;/code&gt; 및 &lt;code&gt;v2q15&lt;/code&gt; 값은 집계와 동일한 방식으로 초기화됩니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="6b9f0632a60f7e2199e33eae5df860d977b737c0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;v4u32&lt;/code&gt;, a vector of four unsigned 32-bit integers;</source>
          <target state="translated">&lt;code&gt;v4u32&lt;/code&gt; , 4 개의 부호없는 32 비트 정수로 구성된 벡터;</target>
        </trans-unit>
        <trans-unit id="15eeca02c95cac6ccf4d38d5e71572806fbe59c8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;v8i16&lt;/code&gt;, a vector of eight signed 16-bit integers;</source>
          <target state="translated">&lt;code&gt;v8i16&lt;/code&gt; 8 개의 부호있는 16 비트 정수로 구성된 벡터 인 v8i16 ;</target>
        </trans-unit>
        <trans-unit id="18c14a5e3dac281031739c8daafc626ba35c9efb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;v8u16&lt;/code&gt;, a vector of eight unsigned 16-bit integers;</source>
          <target state="translated">&lt;code&gt;v8u16&lt;/code&gt; 8 개의 부호없는 16 비트 정수로 구성된 벡터 v8u16 ;</target>
        </trans-unit>
        <trans-unit id="d6a4e5bb9ed4a03346a1e5335ca402c064f0fe3e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;void *&lt;/code&gt; for return type and parameter type</source>
          <target state="translated">&lt;code&gt;void *&lt;/code&gt; 반환 유형 및 매개 변수 유형의 경우 void *</target>
        </trans-unit>
        <trans-unit id="931138ba5a2507ee2e7e0fc42f85c661aad3ee17" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;void&lt;/code&gt; for return type and no parameter for parameter types.</source>
          <target state="translated">&lt;code&gt;void&lt;/code&gt; 반환 유형에 대해서는 void 이며 매개 변수 유형에 대해서는 매개 변수가 없습니다.</target>
        </trans-unit>
        <trans-unit id="5a5d5c4a2842d52363078341ffbf5ff1c71da9e6" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;AArch64 Options&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;AArch64 옵션&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="6a14ea9b56847cb67e896fe9ed92e829c46db4c8" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;AMD GCN Options&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;AMD GCN 옵션&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="867c24fe4dbfd5ccbf6133610e3056cd4490ebb2" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;ARC Options&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;아크 옵션&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="a804dffc1734b11346a4329fb8b712484dc062a9" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;ARM Options&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;ARM 옵션&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="42007853e2d2e5ee57f43b159004f83209e6c120" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;AVR Options&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;AVR 옵션&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="9aab5cdb90e0e7068aace684de244f8deb97788a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Adapteva Epiphany Options&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;Adapteva 주현절 옵션&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="ae87c6342c250828b19327bd7929eed321e39d53" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Blackfin Options&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;블랙 핀 옵션&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="77196484bdd6bd4585004c0d69f5afd921d39aeb" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;C-SKY Options&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;C-SKY 옵션&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="be9ad0c2e9c89a60e3ec15f581550300b8820f0d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;C6X Options&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;C6X 옵션&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="fd379f819a2900908cff60cb928d58f868b9db54" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;CR16 Options&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;CR16 옵션&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="cfc7c2eba72f3e5ff0469155a3c3406b2e006fe3" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;CRIS Options&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;CRIS 옵션&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="0bcedc624ee2d8bc0dc1dde9e3ffd94d702c3815" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;DEC Alpha Options&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;DEC 알파 옵션&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="3c720ccb25061b11c148efb66e96f845b91fa6ad" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Darwin Options&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;다윈 옵션&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="95f44dfbf82d62481da460c42b5fb7c35274dcea" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Errors&lt;/em&gt; report problems that make it impossible to compile your program. GCC reports errors with the source file name and line number where the problem is apparent.</source>
          <target state="translated">&lt;em&gt;오류는&lt;/em&gt; 프로그램을 컴파일 할 수없는 문제를보고합니다. GCC는 문제가 명백한 소스 파일 이름과 줄 번호로 오류를보고합니다.</target>
        </trans-unit>
        <trans-unit id="089e6e509d8caabf29e30ec3bbbe964fc2afe250" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;FR30 Options&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;FR30 옵션&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="091553d3f3e8974e90f05c57755746679c1fdd3a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;FRV Options&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;FRV 옵션&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="70b7d6e356f2d0708ee860d4fc3fd1c61ab2eed5" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;FT32 Options&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;FT32 옵션&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="98ffc4ee3ad54f42a4735dcc174d96d9c6c59ac5" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;GNU/Linux Options&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;GNU / 리눅스 옵션&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="0822ea35a43e7bcfdcf9fd3e546d607438735455" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;H8/300 Options&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;H8 / 300 옵션&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="fdf83e6772f30030bb2fc1476c4b6aba2fad8a80" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;HPPA Options&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;HPPA 옵션&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d5c413dcc96c0d8d85ccbfd5c8edb509e5cdc1c4" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;IA-64 Options&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;IA-64 옵션&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="72b634d41b068d05c153c5acbd927a150eda46f1" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;LM32 Options&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;LM32 옵션&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="e939059a018e2d2ed5fcec7a81d238219702f1a6" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;M32C Options&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;M32C 옵션&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="41423d489b98fe3519ae5cbb7b050e878b6bd6b0" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;M32R/D Options&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;M32R / D 옵션&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="3d6bc2eaf8866182e321b20849ed96413e122e84" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;M680x0 Options&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;M680x0 옵션&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="7869c6ee0bb9ef2d45291f35d9736bbbaaacc30a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;MCore Options&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;MCore 옵션&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="f92ee1798eb5d8b5d7a11c3903d764ec6e437af6" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;MIPS Options&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;MIPS 옵션&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="6811edeb78aee90d2929700d84423144700748a5" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;MMIX Options&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;MMIX 옵션&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="1c6c421dea99cc933fb54d01b9291e1f3cc15403" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;MN10300 Options&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;MN10300 옵션&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="1ae829c80944d42f892c7e2fcafa7795e50814c5" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;MSP430 Options&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;MSP430 옵션&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="995202556b55cd172ec8bc628d585bb4f9d60357" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;MeP Options&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;MeP 옵션&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="e6d8110270e3200546987d8ee1384e2734ad7589" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;MicroBlaze Options&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;MicroBlaze 옵션&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b56c00142a2adf77adfc3b717573e363224b9028" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Moxie Options&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;목시 옵션&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="56ac1cd6a6c4ddc7383020e1168c9487d3c77648" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;NDS32 Options&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;NDS32 옵션&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="0489603a8178bb1a03c11b5a827e58b0d976d54d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Nios II Options&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;니오스 II 옵션&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="6a71b3dbe832df819e003067a1cc89679cd5065c" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Note:&lt;/em&gt; Although the equivalent hardware instructions do not take an SIMD register as an operand, these builtins overwrite the relevant bits of the &lt;code&gt;__v8hi&lt;/code&gt; register provided as the first argument with the value loaded from the &lt;code&gt;[Ib, u8]&lt;/code&gt; location in the SDM.</source>
          <target state="translated">&lt;em&gt;참고 :&lt;/em&gt; 동등한 하드웨어 명령어는 SIMD 레지스터를 피연산자로 사용하지 않지만 이러한 내장 은 첫 번째 인수로 제공된 &lt;code&gt;__v8hi&lt;/code&gt; 레지스터 의 관련 비트를 SDM 의 &lt;code&gt;[Ib, u8]&lt;/code&gt; 위치에서 로드 된 값으로 덮어 씁니다 .</target>
        </trans-unit>
        <trans-unit id="906695ffc11fbd6c29f6a7c5fffdd87c61dd0062" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Note:&lt;/em&gt; GCC 4.4 and later implement &lt;code&gt;__sync_fetch_and_nand&lt;/code&gt; as &lt;code&gt;*ptr = ~(tmp &amp;amp; value)&lt;/code&gt; instead of &lt;code&gt;*ptr = ~tmp &amp;amp; value&lt;/code&gt;.</source>
          <target state="translated">&lt;em&gt;참고 :&lt;/em&gt; GCC 4.4 &lt;code&gt;__sync_fetch_and_nand&lt;/code&gt; 에서는 __sync_fetch_and_nand 를 &lt;code&gt;*ptr = ~(tmp &amp;amp; value)&lt;/code&gt; 대신 * ptr = ~ (tmp &amp;amp; value) 로 구현 &lt;code&gt;*ptr = ~tmp &amp;amp; value&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="32481d3d57648f7ac3b59915a8b343ab8f94362a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Note:&lt;/em&gt; GCC 4.4 and later implement &lt;code&gt;__sync_nand_and_fetch&lt;/code&gt; as &lt;code&gt;*ptr = ~(*ptr &amp;amp; value)&lt;/code&gt; instead of &lt;code&gt;*ptr = ~*ptr &amp;amp; value&lt;/code&gt;.</source>
          <target state="translated">&lt;em&gt;참고 :&lt;/em&gt; GCC 4.4 &lt;code&gt;__sync_nand_and_fetch&lt;/code&gt; 에서는 &lt;code&gt;*ptr = ~(*ptr &amp;amp; value)&lt;/code&gt; 대신 __sync_nand_and_fetch 를 * ptr = ~ (* ptr &amp;amp; value) 로 구현 &lt;code&gt;*ptr = ~*ptr &amp;amp; value&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="aa1f3ae46628635e862095cde321a13674e15cd0" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Note:&lt;/em&gt; If GCOV_PREFIX_STRIP is set without GCOV_PREFIX is undefined, then a relative path is made out of the hardwired absolute paths.</source>
          <target state="translated">&lt;em&gt;참고 :&lt;/em&gt; GCOV_PREFIX를 정의하지 않고 GCOV_PREFIX_STRIP를 설정하면 상대 경로가 고정 배선 된 절대 경로로 만들어집니다.</target>
        </trans-unit>
        <trans-unit id="ea491177a79dc64abd09c78a1e151400a239c1ba" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Note:&lt;/em&gt; If a macro is actually used, but only used in skipped conditional blocks, then the preprocessor reports it as unused. To avoid the warning in such a case, you might improve the scope of the macro&amp;rsquo;s definition by, for example, moving it into the first skipped block. Alternatively, you could provide a dummy use with something like:</source>
          <target state="translated">&lt;em&gt;참고 :&lt;/em&gt; 매크로가 실제로 사용되지만 건너 뛴 조건부 블록에만 사용되는 경우 전처리 기는 매크로를 사용되지 않은 것으로보고합니다. 이러한 경우 경고를 피하기 위해 예를 들어 건너 뛴 첫 번째 블록으로 매크로를 이동하여 매크로 정의 범위를 향상시킬 수 있습니다. 또는 다음과 같은 더미 사용을 제공 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="513ca629c61e9f50ec1060bb038d882eda72087c" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Note:&lt;/em&gt; If the chosen key method is later defined as inline, the vtable is still emitted in every translation unit that defines it. Make sure that any inline virtuals are declared inline in the class body, even if they are not defined there.</source>
          <target state="translated">&lt;em&gt;참고 :&lt;/em&gt; 선택한 키 방법이 나중에 인라인으로 정의 된 경우 vtable은이를 정의하는 모든 변환 단위로 계속 생성됩니다. 인라인 가상이 정의되지 않은 경우에도 클래스 본문에서 인라인 가상으로 선언되어야합니다.</target>
        </trans-unit>
        <trans-unit id="5909e9b7c2f203286387e1708a17c1db3ad3cfd7" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Note:&lt;/em&gt; Only the &lt;code&gt;&amp;lt;altivec.h&amp;gt;&lt;/code&gt; interface is supported. Internally, GCC uses built-in functions to achieve the functionality in the aforementioned header file, but they are not supported and are subject to change without notice.</source>
          <target state="translated">&lt;em&gt;참고 :&lt;/em&gt; 만 &lt;code&gt;&amp;lt;altivec.h&amp;gt;&lt;/code&gt; 인터페이스가 지원됩니다. 내부적으로 GCC는 내장 함수를 사용하여 위에서 언급 한 헤더 파일의 기능을 수행하지만 지원되지 않으며 예고없이 변경 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2e7d99f36188d0a0ae9bd36f15a8de72013df3fb" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Note:&lt;/em&gt; Only the interface described in the aforementioned specification is supported. Internally, GCC uses built-in functions to implement the required functionality, but these are not supported and are subject to change without notice.</source>
          <target state="translated">&lt;em&gt;참고 :&lt;/em&gt; 위에서 언급 한 사양에 설명 된 인터페이스 만 지원됩니다. 내부적으로 GCC는 내장 기능을 사용하여 필요한 기능을 구현하지만 지원되지 않으며 예고없이 변경 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="60f5a5be3206ed7a5edc1d0306252ee653ebb15f" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Note:&lt;/em&gt; Q7, Q15 and Q31 values must be initialized with their integer representation. As shown in this example, the integer representation of a Q7 value can be obtained by multiplying the fractional value by &lt;code&gt;0x1.0p7&lt;/code&gt;. The equivalent for Q15 values is to multiply by &lt;code&gt;0x1.0p15&lt;/code&gt;. The equivalent for Q31 values is to multiply by &lt;code&gt;0x1.0p31&lt;/code&gt;.</source>
          <target state="translated">&lt;em&gt;참고 :&lt;/em&gt; Q7, Q15 및 Q31 값은 정수 표현으로 초기화해야합니다. 이 예에 도시 된 바와 같이, Q7 값의 정수 표현은 분수 값에 &lt;code&gt;0x1.0p7&lt;/code&gt; 을 곱함으로써 얻을 수있다 . Q15 값에 해당하는 것은 &lt;code&gt;0x1.0p15&lt;/code&gt; 를 곱하는 것 입니다 . Q31 값은 &lt;code&gt;0x1.0p31&lt;/code&gt; 을 곱하는 것과 같습니다 .</target>
        </trans-unit>
        <trans-unit id="ecefd38e47b465f12582422275b6c1c7fc5ba3d0" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Note:&lt;/em&gt; The 4.1, 4.2 and 4.3 series of GCC ignore the &lt;code&gt;packed&lt;/code&gt; attribute on bit-fields of type &lt;code&gt;char&lt;/code&gt;. This has been fixed in GCC 4.4 but the change can lead to differences in the structure layout. See the documentation of</source>
          <target state="translated">&lt;em&gt;참고 :&lt;/em&gt; 4.1, 4.2 및 4.3 시리즈 GCC는 &lt;code&gt;char&lt;/code&gt; 유형의 비트 필드 에서 &lt;code&gt;packed&lt;/code&gt; 속성을 무시합니다 . 이것은 GCC 4.4에서 수정되었지만 구조 레이아웃에 차이가 생길 수 있습니다. 의 설명서를 참조하십시오</target>
        </trans-unit>
        <trans-unit id="83a8626dc0b2f71c9d50349e2149ee36fab186fa" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Note:&lt;/em&gt; The CPU&amp;rsquo;s endianness determines the order in which values are packed. On little-endian targets, the first value is the least significant and the last value is the most significant. The opposite order applies to big-endian targets. For example, the code above sets the lowest byte of &lt;code&gt;a&lt;/code&gt; to &lt;code&gt;1&lt;/code&gt; on little-endian targets and &lt;code&gt;4&lt;/code&gt; on big-endian targets.</source>
          <target state="translated">&lt;em&gt;참고 :&lt;/em&gt; CPU 엔디안은 값이 압축되는 순서를 결정합니다. 리틀 엔디안 대상에서 첫 번째 값이 가장 중요하지 않고 마지막 값이 가장 중요합니다. 반대 순서는 빅 엔디안 대상에 적용됩니다. 예를 들어, 위의 코드는 리틀 엔디안 대상에서 &lt;code&gt;a&lt;/code&gt; 의 가장 낮은 바이트 를 &lt;code&gt;1&lt;/code&gt; 로 설정하고 빅 엔디안 대상에서 &lt;code&gt;4&lt;/code&gt; 를 설정합니다.</target>
        </trans-unit>
        <trans-unit id="5b93697e5f9fd5103a0a7f14fc065355825c4168" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Note:&lt;/em&gt; The CPU&amp;rsquo;s endianness determines which value is stored in the upper half of a register and which value is stored in the lower half. On little-endian targets, the first value is the lower one and the second value is the upper one. The opposite order applies to big-endian targets. For example, the code above sets the lower half of &lt;code&gt;a&lt;/code&gt; to &lt;code&gt;1.5&lt;/code&gt; on little-endian targets and &lt;code&gt;9.1&lt;/code&gt; on big-endian targets.</source>
          <target state="translated">&lt;em&gt;참고 :&lt;/em&gt; CPU의 엔디안 (endianness)은 레지스터의 상반부에 저장되는 값과 하반부에 저장되는 값을 결정합니다. 리틀 엔디안 대상에서 첫 번째 값은 낮은 값이고 두 번째 값은 높은 값입니다. 반대 순서는 빅 엔디안 대상에 적용됩니다. 예를 들어, 위의 코드는 리틀 엔디안 대상에서 &lt;code&gt;a&lt;/code&gt; 의 하반부 를 &lt;code&gt;1.5&lt;/code&gt; 로 설정하고 빅 엔디안 대상에서 &lt;code&gt;9.1&lt;/code&gt; 을 설정합니다.</target>
        </trans-unit>
        <trans-unit id="b6f29631325fd85cd0fed1160021c6ec9cde3b5c" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Note:&lt;/em&gt; The generic GCC command-line option</source>
          <target state="translated">&lt;em&gt;참고 :&lt;/em&gt; 일반 GCC 명령 줄 옵션</target>
        </trans-unit>
        <trans-unit id="ed06dff3e4ef6bf04ce2ce52a8b9fd81cb4cb441" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Note:&lt;/em&gt; The value of the third parameter must be 0 or 4 modulo 8, otherwise the result is unpredictable. Please read the instruction description for details.</source>
          <target state="translated">&lt;em&gt;참고 :&lt;/em&gt; 세 번째 매개 변수의 값은 0 또는 4 모듈로 8이어야합니다. 그렇지 않으면 결과를 예측할 수 없습니다. 자세한 내용은 지침 설명을 읽으십시오.</target>
        </trans-unit>
        <trans-unit id="72153d9d5813664a3177200e0649d766dc189c8b" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Note:&lt;/em&gt; These &lt;code&gt;#pragma&lt;/code&gt;s have been superceded as of GCC 2.7.2 by COMDAT support and the &amp;ldquo;key method&amp;rdquo; heuristic mentioned in &lt;a href=&quot;vague-linkage#Vague-Linkage&quot;&gt;Vague Linkage&lt;/a&gt;. Using them can actually cause your program to grow due to unnecessary out-of-line copies of inline functions.</source>
          <target state="translated">&lt;em&gt;참고 :&lt;/em&gt; 이 &lt;code&gt;#pragma&lt;/code&gt; 는 COMDAT 지원 및 &lt;a href=&quot;vague-linkage#Vague-Linkage&quot;&gt;Vague Linkage에&lt;/a&gt; 언급 된 &quot;핵심 방법&quot;휴리스틱에 의해 GCC 2.7.2부터 대체되었습니다 . 그것들을 사용하면 실제로 인라인 함수의 불필요한 라인 외부 사본으로 인해 프로그램이 커질 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a7b139d88803f100cdd95a55602837bc153be904" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Note:&lt;/em&gt; This builtin is only available for C. This builtin can be used to call Go closures from C.</source>
          <target state="translated">&lt;em&gt;참고 :&lt;/em&gt; 이 기본 제공은 C에서만 사용할 수 있습니다.이 기본 제공은 C에서 Go 폐쇄를 호출하는 데 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2d97839275dd23b736dcd3d659869aced8cae5cf" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Note:&lt;/em&gt; This construct is only available for C.</source>
          <target state="translated">&lt;em&gt;참고 :&lt;/em&gt; 이 구문은 C에만 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="eacbc4a00a6df067f8f96e363a35fd76d48bed27" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Note:&lt;/em&gt; This construct is only available for C. Furthermore, the unused expression (&lt;var&gt;exp1&lt;/var&gt; or &lt;var&gt;exp2&lt;/var&gt; depending on the value of &lt;var&gt;const_exp&lt;/var&gt;) may still generate syntax errors. This may change in future revisions.</source>
          <target state="translated">&lt;em&gt;참고 :&lt;/em&gt; 이 구문은 C에서만 사용할 수 있습니다. 또한 사용되지 않은 표현식 ( &lt;var&gt;const_exp&lt;/var&gt; 값에 따라 &lt;var&gt;exp1&lt;/var&gt; 또는 &lt;var&gt;exp2&lt;/var&gt; )은 여전히 ​​구문 오류를 생성 할 수 있습니다. 향후 개정판에서 변경 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5e7e557ba1661093fe7151e1bdc289cf424df86b" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Note:&lt;/em&gt; Using a built-in to generate an instruction not supported by a target may cause problems. At present the compiler is not guaranteed to detect such misuse, and as a result an internal compiler error may be generated.</source>
          <target state="translated">&lt;em&gt;참고 :&lt;/em&gt; 내장 기능을 사용하여 대상에서 지원하지 않는 명령어를 생성하면 문제가 발생할 수 있습니다. 현재 컴파일러는 이러한 오용을 감지한다고 보장하지 않으므로 내부 컴파일러 오류가 발생할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1a1eec5083716264a52a5668d0e808764085fd67" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Note:&lt;/em&gt; When compiling a program using computed gotos, a GCC extension, you may get better run-time performance if you disable the global common subexpression elimination pass by adding</source>
          <target state="translated">&lt;em&gt;참고 :&lt;/em&gt; 계산 된 gotos (GCC 확장)를 사용하여 프로그램을 컴파일 할 때 &lt;em&gt;다음&lt;/em&gt; 을 추가하여 글로벌 공통 하위 표현식 제거 패스를 사용하지 않으면 런타임 성능이 향상 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c3ceb34dafdbbccb7b3f4a9bc3198076a8bb038d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Note:&lt;/em&gt; pseudo instruction represents, in this particular context, an abstract measurement of function&amp;rsquo;s size. In no way does it represent a count of assembly instructions and as such its exact meaning might change from one release to an another.</source>
          <target state="translated">&lt;em&gt;참고 :&lt;/em&gt; 의사 명령어는이 특정 상황에서 함수 크기의 추상 측정을 나타냅니다. 어떤 방식으로도 조립 설명서의 수를 나타내지 않으므로 정확한 의미가 릴리스마다 다를 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="64cd29898900abd284b24ce0046a12f2a889805e" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Note:&lt;/em&gt; there may be no value to</source>
          <target state="translated">&lt;em&gt;참고 :&lt;/em&gt; 값이 없을 수 있습니다</target>
        </trans-unit>
        <trans-unit id="34f20bbbcdb20cd93bc0b28a39e05bcb36620def" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Note&lt;/em&gt; If the</source>
          <target state="translated">&lt;em&gt;참고&lt;/em&gt; 인 경우]</target>
        </trans-unit>
        <trans-unit id="cc501835fd0037936c2300c5863d1305c99d13dc" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Nvidia PTX Options&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;Nvidia PTX 옵션&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="7857f3cff032f30c80ecfb8270b8c04e4e9d6efc" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;OpenRISC Options&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;OpenRISC 옵션&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="022f17d65bf2f852a9bf52143c3cab7582dddc12" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;PDP-11 Options&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;PDP-11 옵션&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="bc36ba8a70957c05f0128aeed8b3ffa01e74a202" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;PowerPC Options&lt;/em&gt; See RS/6000 and PowerPC Options.</source>
          <target state="translated">&lt;em&gt;PowerPC 옵션&lt;/em&gt; RS / 6000 및 &lt;em&gt;PowerPC 옵션을&lt;/em&gt; 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="7d12212e9493501d271a126a834619cd825cc637" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;RISC-V Options&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;RISC-V 옵션&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="51deeb74b7040696523eac8e9b50aaa9f0c160b2" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;RL78 Options&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;RL78 옵션&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="e0525fb0f4921d4b454f0867178cc3f2e709dd05" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;RS/6000 and PowerPC Options&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;RS / 6000 및 PowerPC 옵션&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="39cbc4dfd74b5b6e0fa9efd8a12d1162bb681080" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;RX Options&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;RX 옵션&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="736a44f00f2782082aa29882ffc21518d1f4a4e8" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;S/390 and zSeries Options&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;S / 390 및 zSeries 옵션&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="41e4a234f5bb49cd0264fa22972792fc9da3bcbf" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;SH Options&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;SH 옵션&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="56bc7167620d3c71b9cb584d08f274377f44bf2a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;SPARC Options&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;SPARC 옵션&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="dc670533970668fe64148e47e0fafdaea94cb03b" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;SPU Options&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;SPU 옵션&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="c56413d87d2da9557912d35dbc2cfbca82836384" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Score Options&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;점수 옵션&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="62b914fb373470c0b2ac9d74fa9f6fe2b909d5de" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Solaris 2 Options&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;솔라리스 2 옵션&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d42fb76fd4341ca34cfd6fb2f6c0a0d677895a40" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Spec files&lt;/em&gt; are plain-text files that are used to construct spec strings. They consist of a sequence of directives separated by blank lines. The type of directive is determined by the first non-whitespace character on the line, which can be one of the following:</source>
          <target state="translated">&lt;em&gt;사양 파일&lt;/em&gt; 은 사양 문자열을 구성하는 데 사용되는 일반 텍스트 파일입니다. 빈 줄로 구분 된 일련의 지시문으로 구성됩니다. 지시문의 유형은 행의 첫 번째 공백이 아닌 문자에 의해 결정되며 다음 중 하나 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="db99a02bf9325a0446b3d3660f54ae1be166577f" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Spec strings&lt;/em&gt; are a list of command-line options to be passed to their corresponding program. In addition, the spec strings can contain &amp;lsquo;</source>
          <target state="translated">&lt;em&gt;스펙 문자열&lt;/em&gt; 은 해당 프로그램에 전달 될 명령 행 옵션의 목록입니다. 또한 사양 문자열에는 '</target>
        </trans-unit>
        <trans-unit id="5a15016eaf2ae61e798c9e92b569358a39e86710" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;System V Options&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;시스템 V 옵션&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="feb127030e9fe13464eefbb656da5c5e59f1ec48" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;TILE-Gx Options&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;TILE-Gx 옵션&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="e6e6e9084306dd7d17aba875acb7fea1ed46ce39" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;TILEPro Options&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;TILEPro 옵션&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="1e1e262e710aa664259e0fd18b86e9454a54d4a6" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;V850 Options&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;V850 옵션&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="fc271d88c785f840f6cf51c476df618f74b1cbef" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;VAX Options&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;VAX 옵션&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="e143e075ae3bdac97703feadb897d0df26906759" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;VMS Options&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;VMS 옵션&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d28ef093233a29030bf54382ba024a105f45890e" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Visium Options&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;Visium 옵션&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="fe1a73e1bcb98976a3dfe16f3ba0939cee97b5b0" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;VxWorks Options&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;VxWorks 옵션&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="a7aee4d537121bb2f423daebb8bdece70ad36a69" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Warning:&lt;/em&gt; In the above example, be aware that a register (for example &lt;code&gt;r0&lt;/code&gt;) can be call-clobbered by subsequent code, including function calls and library calls for arithmetic operators on other variables (for example the initialization of &lt;code&gt;p2&lt;/code&gt;). In this case, use temporary variables for expressions between the register assignments:</source>
          <target state="translated">&lt;em&gt;경고 :&lt;/em&gt; 위의 예에서 함수 호출 및 다른 변수의 산술 연산자에 대한 라이브러리 호출 (예 : &lt;code&gt;p2&lt;/code&gt; 초기화)을 포함하여 후속 코드 로 레지스터 (예 : &lt;code&gt;r0&lt;/code&gt; )를 호출 클로버 할 수 있습니다 . 이 경우 레지스터 할당 사이의 표현식에 임시 변수를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="816a932da8e0bd79bd86e31e2bb7d68625f97793" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Warnings&lt;/em&gt; report other unusual conditions in your code that &lt;em&gt;may&lt;/em&gt; indicate a problem, although compilation can (and does) proceed. Warning messages also report the source file name and line number, but include the text &amp;lsquo;</source>
          <target state="translated">&lt;em&gt;경고&lt;/em&gt; 는 컴파일 작업이 진행될 수는 있지만 문제 &lt;em&gt;가&lt;/em&gt; 있음을 나타내는 다른 비정상적인 조건을 코드에보고 합니다. 경고 메시지는 또한 소스 파일 이름과 줄 번호를보고하지만 '</target>
        </trans-unit>
        <trans-unit id="4b143c44f6aab624c938e93ad2f6b4f657e59153" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Xstormy16 Options&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;Xstormy16 옵션&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="18ac74c0cb677176c306ff128a293af591f367d3" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Xtensa Options&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;Xtensa 옵션&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="95e5f6791684d95443cdbb8fd6680f023a74362e" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;picoChip Options&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;picoChip 옵션&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="a2dbd6047aac87327270d92252817d5d79e582ce" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;x86 Options&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;x86 옵션&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="2372ad60b474adcacc8813df7ea55f14799cf6b4" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;x86 Windows Options&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;x86 Windows 옵션&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="636b6c51fd4e87f012cdd524f840607ddf80c3c5" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;zSeries Options&lt;/em&gt; See S/390 and zSeries Options.</source>
          <target state="translated">&lt;em&gt;zSeries 옵션&lt;/em&gt; S / 390 및 &lt;em&gt;zSeries 옵션을&lt;/em&gt; 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="05b073d8b145e3b7b4fe9382c836fb5ca8365004" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&amp;lsquo;&lt;samp&gt;-mcpu&lt;/samp&gt;&amp;rsquo; arguments&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;'&lt;samp&gt;-mcpu&lt;/samp&gt;'인수&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0ca73c3cb15b2a6924f0a26af33432a71a16d184" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Be careful:&lt;/strong&gt; Write spaces around the &lt;code&gt;...&lt;/code&gt;, for otherwise it may be parsed wrong when you use it with integer values. For example, write this:</source>
          <target state="translated">&lt;strong&gt;주의 : &lt;/strong&gt; &lt;code&gt;...&lt;/code&gt; 주위에 공백을 쓰 &lt;strong&gt;십시오.&lt;/strong&gt; 그렇지 않으면 정수 값과 함께 사용할 때 잘못 구문 분석 될 수 있습니다. 예를 들어 다음과 같이 작성하십시오.</target>
        </trans-unit>
        <trans-unit id="5b296bb4d7e000ba38a77aa5d36e6fe239ea357d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Family&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Family&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1ce6e314b705bb119112642204e6ae779116bafe" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Warning:&lt;/strong&gt; Do &lt;em&gt;not&lt;/em&gt; modify the contents of input-only operands (except for inputs tied to outputs). The compiler assumes that on exit from the &lt;code&gt;asm&lt;/code&gt; statement these operands contain the same values as they had before executing the statement. It is &lt;em&gt;not&lt;/em&gt; possible to use clobbers to inform the compiler that the values in these inputs are changing. One common work-around is to tie the changing input variable to an output variable that never gets used. Note, however, that if the code that follows the &lt;code&gt;asm&lt;/code&gt; statement makes no use of any of the output operands, the GCC optimizers may discard the &lt;code&gt;asm&lt;/code&gt; statement as unneeded (see &lt;a href=&quot;#Volatile&quot;&gt;Volatile&lt;/a&gt;).</source>
          <target state="translated">&lt;strong&gt;경고 :&lt;/strong&gt; 음주 &lt;em&gt;하지&lt;/em&gt; (출력에 연결된 입력 제외) 입력 전용 피연산자의 내용을 수정합니다. 컴파일러는 &lt;code&gt;asm&lt;/code&gt; 문 을 종료 할 때 이러한 피연산자가 명령문을 실행하기 전과 동일한 값을 포함 한다고 가정합니다 . 이다 &lt;em&gt;하지&lt;/em&gt; 이러한 입력의 값을 변경하는 컴파일러에 알리는 쳤을를 사용할 수있다. 한 가지 일반적인 해결 방법은 변경 입력 변수를 절대 사용하지 않는 출력 변수에 연결하는 것입니다. 그러나 &lt;code&gt;asm&lt;/code&gt; 문 다음에 나오는 코드가 출력 피연산자를 사용하지 않으면 GCC 최적화 프로그램이 &lt;code&gt;asm&lt;/code&gt; 문을 불필요한 것으로 버릴 수 있습니다 ( &lt;a href=&quot;#Volatile&quot;&gt;Volatile&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="a41c6abd653a33317410ef0db731418bdf245365" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Warning:&lt;/strong&gt; If you use this switch, then you must build all modules with the same value, including any libraries. This includes the system libraries and startup modules.</source>
          <target state="translated">&lt;strong&gt;경고 :&lt;/strong&gt; 이 스위치를 사용하는 경우 라이브러리를 포함하여 동일한 값으로 모든 모듈을 빌드해야합니다. 여기에는 시스템 라이브러리 및 시작 모듈이 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="9f8a7fec506fe7c2f6084ea58dbd6ac51571b5ae" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Warning:&lt;/strong&gt; Since RAX register is used to avoid unnecessarily saving vector registers on stack when passing variable arguments, the impacts of this option are callees may waste some stack space, misbehave or jump to a random location. GCC 4.4 or newer don&amp;rsquo;t have those issues, regardless the RAX register value.</source>
          <target state="translated">&lt;strong&gt;경고 :&lt;/strong&gt; RAX 레지스터는 변수 인수를 전달할 때 스택에 벡터 레지스터를 불필요하게 저장하는 것을 피하기 위해 사용되므로이 옵션의 영향은 수신자가 스택 공간을 낭비하거나 오작동 또는 임의 위치로 이동할 수 있다는 것입니다. RCC 레지스터 값에 관계없이 GCC 4.4 이상에는 이러한 문제가 없습니다.</target>
        </trans-unit>
        <trans-unit id="715534c76b05f27a336cac5eca1f15bb1ba0531b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Warning:&lt;/strong&gt; The</source>
          <target state="translated">&lt;strong&gt;경고 :&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e163e3f64318185967d993e343b277921267102a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Warning:&lt;/strong&gt; The C standards do not specify semantics for &lt;code&gt;asm&lt;/code&gt;, making it a potential source of incompatibilities between compilers. These incompatibilities may not produce compiler warnings/errors.</source>
          <target state="translated">&lt;strong&gt;경고 :&lt;/strong&gt; C 표준은 &lt;code&gt;asm&lt;/code&gt; 의 의미론을 지정하지 않으므로 컴파일러 간의 비 호환성 원인이됩니다. 이러한 비 호환성으로 인해 컴파일러 경고 / 오류가 발생하지 않을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e86cc1401a696068f7f847fa2efe8d1c2b4f1d91" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Warning:&lt;/strong&gt; When an application does not properly join all threads (or creates an detached thread), a profile file can be still corrupted.</source>
          <target state="translated">&lt;strong&gt;경고 :&lt;/strong&gt; 응용 프로그램이 모든 스레드를 올바르게 조인하지 않거나 분리 된 스레드를 만드는 경우에도 프로필 파일이 손상 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="edb6152c62df55204f513a2bd268c824cd742794" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Warning:&lt;/strong&gt; When generating code for the x86-64 architecture with SSE extensions disabled,</source>
          <target state="translated">&lt;strong&gt;경고 :&lt;/strong&gt; SSE 확장이 비활성화 된 x86-64 아키텍처에 대한 코드를 생성 할 때,</target>
        </trans-unit>
        <trans-unit id="6d3e02f67e0426840cf2eab0fa386a7a0d8f3f4f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Warning:&lt;/strong&gt; code compiled with the</source>
          <target state="translated">&lt;strong&gt;경고 :&lt;/strong&gt; 코드는</target>
        </trans-unit>
        <trans-unit id="81d77d1a721cb0e9d979c46fa00adb7925430d90" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Warning:&lt;/strong&gt; if you override the default value for your target ABI, this changes the size of structures and arrays containing &lt;code&gt;long double&lt;/code&gt; variables, as well as modifying the function calling convention for functions taking &lt;code&gt;long double&lt;/code&gt;. Hence they are not binary-compatible with code compiled without that switch.</source>
          <target state="translated">&lt;strong&gt;경고 :&lt;/strong&gt; 당신이 당신의 목표 ABI의 기본 값을 대체하는 경우,이 포함 된 구조와 배열의 크기 변경 &lt;code&gt;long double&lt;/code&gt; 변수뿐만 아니라 촬영 기능에 대한 규칙을 호출하는 기능을 수정 &lt;code&gt;long double&lt;/code&gt; . 따라서이 스위치없이 컴파일 된 코드와 이진 호환되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="6aef184d39f03952d172b7102530bc7a9cb2fa3c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Warning:&lt;/strong&gt; if you use the</source>
          <target state="translated">&lt;strong&gt;경고 :&lt;/strong&gt; 당신이 사용하는 경우</target>
        </trans-unit>
        <trans-unit id="b85ec1ce84c8439a9545fb2c1d7bf94b735aa0a2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Warning:&lt;/strong&gt; if you use this switch then you must build all modules with the same value, including any libraries. This includes the system libraries and startup modules.</source>
          <target state="translated">&lt;strong&gt;경고 :&lt;/strong&gt; 이 스위치를 사용하는 경우 라이브러리를 포함하여 동일한 값으로 모든 모듈을 빌드해야합니다. 여기에는 시스템 라이브러리 및 시작 모듈이 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="6580347fe9571154d0b4891b1664cd9202c2acd8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Warning:&lt;/strong&gt; if you use this switch, and &lt;var&gt;num&lt;/var&gt; is nonzero, then you must build all modules with the same value, including any libraries. This includes the system libraries and startup modules.</source>
          <target state="translated">&lt;strong&gt;경고 :&lt;/strong&gt; 이 스위치를 사용하고 &lt;var&gt;num&lt;/var&gt; 이 0이 아닌 경우 라이브러리를 포함하여 동일한 값으로 모든 모듈을 빌드해야합니다. 여기에는 시스템 라이브러리 및 시작 모듈이 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="f2fa2d1c77dc6f956448ba7d671e1de6cedbcd38" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Warning:&lt;/strong&gt; the</source>
          <target state="translated">&lt;strong&gt;경고 :&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="88c4d51d8f615f3993e3c0cef840662cb24bb857" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Warning:&lt;/strong&gt; the requisite libraries are not part of GCC. Normally the facilities of the machine&amp;rsquo;s usual C compiler are used, but this cannot be done directly in cross-compilation. You must make your own arrangements to provide suitable library functions for cross-compilation.</source>
          <target state="translated">&lt;strong&gt;경고 :&lt;/strong&gt; 필수 라이브러리는 GCC의 일부가 아닙니다. 일반적으로 시스템의 일반적인 C 컴파일러 기능이 사용되지만이 작업은 크로스 컴파일에서 직접 수행 할 수 없습니다. 교차 컴파일에 적합한 라이브러리 기능을 제공하기 위해 사용자가 직접 준비해야합니다.</target>
        </trans-unit>
        <trans-unit id="776b38edee53ccd0d1e652426154a9a588a26326" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Warning:&lt;/strong&gt; this calling convention is incompatible with the one normally used on Unix, so you cannot use it if you need to call libraries compiled with the Unix compiler.</source>
          <target state="translated">&lt;strong&gt;경고 :&lt;/strong&gt; 이 호출 규칙은 Unix에서 일반적으로 사용되는 것과 호환되지 않으므로 Unix 컴파일러로 컴파일 된 라이브러리를 호출해야하는 경우 사용할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="3c92b0834b3f6e0b0e166db87ccbdb672bb82648" translate="yes" xml:space="preserve">
          <source>&lt;var&gt;auxname&lt;/var&gt;.gcda</source>
          <target state="translated">&lt;var&gt;auxname&lt;/var&gt;.gcda</target>
        </trans-unit>
        <trans-unit id="9e19d8b5ca485e7de26e8b332e442d8fc54664ea" translate="yes" xml:space="preserve">
          <source>&lt;var&gt;auxname&lt;/var&gt;.gcno</source>
          <target state="translated">&lt;var&gt;auxname&lt;/var&gt;.gcno</target>
        </trans-unit>
        <trans-unit id="85165da2ca5194c5347e3eeeb486f7fe2449eb31" translate="yes" xml:space="preserve">
          <source>&lt;var&gt;b&lt;/var&gt;fx</source>
          <target state="translated">&lt;var&gt;b&lt;/var&gt;fx</target>
        </trans-unit>
        <trans-unit id="e61d261ac414ee0ceb16d824496fad9b5acddd85" translate="yes" xml:space="preserve">
          <source>&lt;var&gt;blocks&lt;/var&gt;: number of blocks that are in the function</source>
          <target state="translated">&lt;var&gt;blocks&lt;/var&gt; : 함수에있는 블록 수</target>
        </trans-unit>
        <trans-unit id="8ae8f4fb9cf1118a0551f86c7142bd0ff6bc1464" translate="yes" xml:space="preserve">
          <source>&lt;var&gt;blocks_executed&lt;/var&gt;: number of executed blocks of the function</source>
          <target state="translated">&lt;var&gt;blocks_executed&lt;/var&gt; : 함수의 실행 된 블록 수</target>
        </trans-unit>
        <trans-unit id="b33636a0ba563901664b6c5f838dee23ec7b7447" translate="yes" xml:space="preserve">
          <source>&lt;var&gt;byte-size&lt;/var&gt; works, but with variable-length arrays.</source>
          <target state="translated">&lt;var&gt;byte-size&lt;/var&gt; 는 작동하지만 가변 길이 배열로 작동합니다.</target>
        </trans-unit>
        <trans-unit id="3908fe32fbee17ab1091dcbbbcc9d95e8c868d21" translate="yes" xml:space="preserve">
          <source>&lt;var&gt;count&lt;/var&gt;: number of executions of the branch</source>
          <target state="translated">&lt;var&gt;count&lt;/var&gt; : 지점의 실행 횟수</target>
        </trans-unit>
        <trans-unit id="a5a5b0ddbf193f53659eab4ecc8e6518b23dc55a" translate="yes" xml:space="preserve">
          <source>&lt;var&gt;count&lt;/var&gt;: number of executions of the line</source>
          <target state="translated">&lt;var&gt;count&lt;/var&gt; : 줄의 실행 횟수</target>
        </trans-unit>
        <trans-unit id="6dc66d5a71e8f3349f4206d52eb3738739a10355" translate="yes" xml:space="preserve">
          <source>&lt;var&gt;current_working_directory&lt;/var&gt;: working directory where a compilation unit was compiled</source>
          <target state="translated">&lt;var&gt;current_working_directory&lt;/var&gt; : 컴파일 단위가 컴파일 된 작업 디렉토리</target>
        </trans-unit>
        <trans-unit id="f2f093923378c09906b260d4e4fef642e8bd4c9b" translate="yes" xml:space="preserve">
          <source>&lt;var&gt;data_file&lt;/var&gt;: name of the data file (GCDA)</source>
          <target state="translated">&lt;var&gt;data_file&lt;/var&gt; : 데이터 파일 이름 (GCDA)</target>
        </trans-unit>
        <trans-unit id="82a3c99596c0803b3cd5b5dc5b7d4f7edcb29691" translate="yes" xml:space="preserve">
          <source>&lt;var&gt;demangled_name&lt;/var&gt;: demangled name of the function</source>
          <target state="translated">&lt;var&gt;demangled_name&lt;/var&gt; : 함수의 demangled 이름</target>
        </trans-unit>
        <trans-unit id="96756339f8a07464a095163d86ae17ba49c6f2b0" translate="yes" xml:space="preserve">
          <source>&lt;var&gt;dir&lt;/var&gt;/&lt;var&gt;suffix&lt;/var&gt;/usr/include</source>
          <target state="translated">&lt;var&gt;dir&lt;/var&gt;/&lt;var&gt;suffix&lt;/var&gt;/usr/include</target>
        </trans-unit>
        <trans-unit id="457fd18521fb5ee2775888f964e4ddd50de83968" translate="yes" xml:space="preserve">
          <source>&lt;var&gt;dir&lt;/var&gt;/usr/include</source>
          <target state="translated">&lt;var&gt;dir&lt;/var&gt;/usr/include</target>
        </trans-unit>
        <trans-unit id="a2f5c6f857a964db0e9209dc3bc8af9204a69687" translate="yes" xml:space="preserve">
          <source>&lt;var&gt;dir&lt;/var&gt;/usr/lib</source>
          <target state="translated">&lt;var&gt;dir&lt;/var&gt;/usr/lib</target>
        </trans-unit>
        <trans-unit id="710f2aaaa57ae08947b2914f307083f5ba6ecc46" translate="yes" xml:space="preserve">
          <source>&lt;var&gt;end_column&lt;/var&gt;: column in the source file where the function ends</source>
          <target state="translated">&lt;var&gt;end_column&lt;/var&gt; : 함수가 끝나는 소스 파일의 열</target>
        </trans-unit>
        <trans-unit id="77d6abb0099a7849ef1e3e17b19f0755409a5b5e" translate="yes" xml:space="preserve">
          <source>&lt;var&gt;end_line&lt;/var&gt;: line in the source file where the function ends</source>
          <target state="translated">&lt;var&gt;end_line&lt;/var&gt; : 함수가 끝나는 소스 파일의 행</target>
        </trans-unit>
        <trans-unit id="bcfb310dcf9e58743c432d6bf3a973817fa1a1e5" translate="yes" xml:space="preserve">
          <source>&lt;var&gt;execution_count&lt;/var&gt;: number of executions of the function</source>
          <target state="translated">&lt;var&gt;execution_count&lt;/var&gt; : 함수의 실행 횟수</target>
        </trans-unit>
        <trans-unit id="07ced02e11442bdc9f19c2804e52ff736e36f64b" translate="yes" xml:space="preserve">
          <source>&lt;var&gt;fallthrough&lt;/var&gt;: true when the branch is a fall through branch</source>
          <target state="translated">&lt;var&gt;fallthrough&lt;/var&gt; : 분기가 폴 스루 지점 인 경우 참</target>
        </trans-unit>
        <trans-unit id="cb068146736527c3f97548042cc209e45a84344b" translate="yes" xml:space="preserve">
          <source>&lt;var&gt;fieldname&lt;/var&gt;:</source>
          <target state="translated">&lt;var&gt;fieldname&lt;/var&gt;:</target>
        </trans-unit>
        <trans-unit id="bc0ca9277beb7ce53874c5a6ea975087cabd0480" translate="yes" xml:space="preserve">
          <source>&lt;var&gt;file&lt;/var&gt;.&lt;var&gt;passid&lt;/var&gt;.&lt;var&gt;pass&lt;/var&gt;.dot</source>
          <target state="translated">&lt;var&gt;file&lt;/var&gt;.&lt;var&gt;passid&lt;/var&gt;.&lt;var&gt;pass&lt;/var&gt;.dot</target>
        </trans-unit>
        <trans-unit id="e36ec986d0d68718176ac505f37684283543d3d9" translate="yes" xml:space="preserve">
          <source>&lt;var&gt;file&lt;/var&gt;&lt;var&gt;target&lt;/var&gt;</source>
          <target state="translated">&lt;var&gt;file&lt;/var&gt;&lt;var&gt;target&lt;/var&gt;</target>
        </trans-unit>
        <trans-unit id="8ec94309621d2424e899ea1b78e55daad7870d18" translate="yes" xml:space="preserve">
          <source>&lt;var&gt;file_name&lt;/var&gt;: name of the source file</source>
          <target state="translated">&lt;var&gt;file_name&lt;/var&gt; : 소스 파일의 이름</target>
        </trans-unit>
        <trans-unit id="cd6f65bdf191a64aaefc5c263459a6f075adc163" translate="yes" xml:space="preserve">
          <source>&lt;var&gt;foo&lt;/var&gt; automatically implies</source>
          <target state="translated">&lt;var&gt;foo&lt;/var&gt; 는 자동으로 암시합니다</target>
        </trans-unit>
        <trans-unit id="70afe026807a5e12e476985ab37efbc5dc26d077" translate="yes" xml:space="preserve">
          <source>&lt;var&gt;foo&lt;/var&gt; does not imply anything.</source>
          <target state="translated">&lt;var&gt;foo&lt;/var&gt; 는 아무것도 암시하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="46fba837f5408f9512a6c400d555a520081bdffd" translate="yes" xml:space="preserve">
          <source>&lt;var&gt;foo&lt;/var&gt;. However,</source>
          <target state="translated">&lt;var&gt;foo&lt;/var&gt; . 하나,</target>
        </trans-unit>
        <trans-unit id="705042d186415d378755a17325dbc0219d4372f1" translate="yes" xml:space="preserve">
          <source>&lt;var&gt;format_version&lt;/var&gt;: semantic version of the format</source>
          <target state="translated">&lt;var&gt;format_version&lt;/var&gt; : 형식의 시맨틱 버전</target>
        </trans-unit>
        <trans-unit id="58bfbaccb373a1af2e15a00fe6b5acf8e46f5efd" translate="yes" xml:space="preserve">
          <source>&lt;var&gt;function_name&lt;/var&gt;: a name of a function this &lt;var&gt;line&lt;/var&gt; belongs to (for a line with an inlined statements can be not set)</source>
          <target state="translated">&lt;var&gt;function_name&lt;/var&gt; :이 &lt;var&gt;line&lt;/var&gt; 속한 함수의 이름 (인라인 된 명령문이있는 행을 설정할 수 없음)</target>
        </trans-unit>
        <trans-unit id="7150cb8c780083943181393bffe3746be197596d" translate="yes" xml:space="preserve">
          <source>&lt;var&gt;gcc_version&lt;/var&gt;: version of the GCC compiler</source>
          <target state="translated">&lt;var&gt;gcc_version&lt;/var&gt; : GCC 컴파일러 버전</target>
        </trans-unit>
        <trans-unit id="ae44b540bd27d10c4dc7e21db41478a671658ee6" translate="yes" xml:space="preserve">
          <source>&lt;var&gt;kind&lt;/var&gt; is &amp;lsquo;</source>
          <target state="translated">&lt;var&gt;kind&lt;/var&gt; 는 '</target>
        </trans-unit>
        <trans-unit id="8b8203cf510dcd89888a7c10446ebe87c2f89369" translate="yes" xml:space="preserve">
          <source>&lt;var&gt;libexecdir&lt;/var&gt;/gcc/&lt;var&gt;target&lt;/var&gt;/&lt;var&gt;version&lt;/var&gt;/install-tools/</source>
          <target state="translated">&lt;var&gt;libexecdir&lt;/var&gt;/gcc/&lt;var&gt;target&lt;/var&gt;/&lt;var&gt;version&lt;/var&gt;/install-tools/</target>
        </trans-unit>
        <trans-unit id="7e28a7ea5e6f3cd24974425a7e272dd6dab22c97" translate="yes" xml:space="preserve">
          <source>&lt;var&gt;line_number&lt;/var&gt;: line number</source>
          <target state="translated">&lt;var&gt;line_number&lt;/var&gt; : 줄 번호</target>
        </trans-unit>
        <trans-unit id="ea29079cba4e83858223a5ec28bdc6d50bd316b0" translate="yes" xml:space="preserve">
          <source>&lt;var&gt;machine&lt;/var&gt;/&lt;var&gt;version&lt;/var&gt;/</source>
          <target state="translated">&lt;var&gt;machine&lt;/var&gt;/&lt;var&gt;version&lt;/var&gt;/</target>
        </trans-unit>
        <trans-unit id="fb87e55fd40c286be395999f14a4dc6d95b10b8e" translate="yes" xml:space="preserve">
          <source>&lt;var&gt;mangledname&lt;/var&gt;.gcov</source>
          <target state="translated">&lt;var&gt;mangledname&lt;/var&gt;.gcov</target>
        </trans-unit>
        <trans-unit id="f0ce3ea44130cbe877829294966ed36eef7f62f7" translate="yes" xml:space="preserve">
          <source>&lt;var&gt;mode&lt;/var&gt; can be set to one the following values:</source>
          <target state="translated">&lt;var&gt;mode&lt;/var&gt; 는 다음 값 중 하나로 설정 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0b1b3ce355abf1bec528e4e29cb69b648d32b2c3" translate="yes" xml:space="preserve">
          <source>&lt;var&gt;n&lt;/var&gt;f</source>
          <target state="translated">&lt;var&gt;n&lt;/var&gt;f</target>
        </trans-unit>
        <trans-unit id="2956846802a0f3763419f1cd6721396729e2240a" translate="yes" xml:space="preserve">
          <source>&lt;var&gt;n&lt;/var&gt;f1_1</source>
          <target state="translated">&lt;var&gt;n&lt;/var&gt;f1_1</target>
        </trans-unit>
        <trans-unit id="d0f528c5f50a3a9ca8a7f4d4becb651762709fc6" translate="yes" xml:space="preserve">
          <source>&lt;var&gt;n&lt;/var&gt;f2_1</source>
          <target state="translated">&lt;var&gt;n&lt;/var&gt;f2_1</target>
        </trans-unit>
        <trans-unit id="a64a9113e49c525ccc4593f4075479691d2d779c" translate="yes" xml:space="preserve">
          <source>&lt;var&gt;n&lt;/var&gt;f3_2</source>
          <target state="translated">&lt;var&gt;n&lt;/var&gt;f3_2</target>
        </trans-unit>
        <trans-unit id="0f1c1c81fa999d2f5ca3d601e651ccc54a89eb03" translate="yes" xml:space="preserve">
          <source>&lt;var&gt;n&lt;/var&gt;x</source>
          <target state="translated">&lt;var&gt;n&lt;/var&gt;x</target>
        </trans-unit>
        <trans-unit id="8e4ffce74a745b869371f4d5e4b25a511464db80" translate="yes" xml:space="preserve">
          <source>&lt;var&gt;name&lt;/var&gt;: name of the function</source>
          <target state="translated">&lt;var&gt;name&lt;/var&gt; : 함수 이름</target>
        </trans-unit>
        <trans-unit id="97651fa5ce5e8856932bddb384b35a32ca248309" translate="yes" xml:space="preserve">
          <source>&lt;var&gt;number&lt;/var&gt; can only be 1 or 2. If it is 1 then branches are preferred over conditional code, if it is 2, then the opposite applies.</source>
          <target state="translated">&lt;var&gt;number&lt;/var&gt; 는 1 또는 2 만 될 수 있습니다. 1이면 조건부 코드보다 분기가 선호되고, 2이면 반대가 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="50273f37f0b45fd83f80ed0fdeed8ef68524af4d" translate="yes" xml:space="preserve">
          <source>&lt;var&gt;option&lt;/var&gt;=&lt;var&gt;value&lt;/var&gt;</source>
          <target state="translated">&lt;var&gt;option&lt;/var&gt;=&lt;var&gt;value&lt;/var&gt;</target>
        </trans-unit>
        <trans-unit id="d0ce734a96f9558ae28efb50ac75200764dc9df5" translate="yes" xml:space="preserve">
          <source>&lt;var&gt;path&lt;/var&gt; is the name of a file containing AutoFDO profile information. If omitted, it defaults to</source>
          <target state="translated">&lt;var&gt;path&lt;/var&gt; 는 AutoFDO 프로파일 정보가 포함 된 파일 이름입니다. 생략하면 기본값은</target>
        </trans-unit>
        <trans-unit id="4a043823197d8a0d9d4a3dae48ce610f7a8479fd" translate="yes" xml:space="preserve">
          <source>&lt;var&gt;prefix&lt;/var&gt;/lib/gcc/</source>
          <target state="translated">&lt;var&gt;prefix&lt;/var&gt;/lib/gcc/</target>
        </trans-unit>
        <trans-unit id="575dfa2a337b4bc21315c8f8022717c452a4ae62" translate="yes" xml:space="preserve">
          <source>&lt;var&gt;ptr&lt;/var&gt; is an optional pointer to the object that may be used to determine alignment. A value of 0 indicates typical alignment should be used. The compiler may also ignore this parameter.</source>
          <target state="translated">&lt;var&gt;ptr&lt;/var&gt; 은 정렬을 결정하는 데 사용될 수있는 객체에 대한 선택적 포인터입니다. 값이 0이면 일반적인 정렬을 사용해야 함을 나타냅니다. 컴파일러는이 매개 변수를 무시할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="8b3c5b36be47a0fa932bdb61b7a90e0c4902fd51" translate="yes" xml:space="preserve">
          <source>&lt;var&gt;real&lt;/var&gt; + I * &lt;var&gt;imag&lt;/var&gt;</source>
          <target state="translated">&lt;var&gt;real&lt;/var&gt; + I * &lt;var&gt;imag&lt;/var&gt;</target>
        </trans-unit>
        <trans-unit id="444cf69e0e22b51ba0c19cf554accc4728339634" translate="yes" xml:space="preserve">
          <source>&lt;var&gt;reg&lt;/var&gt; must be the name of a register. The register names accepted are machine-specific and are defined in the &lt;code&gt;REGISTER_NAMES&lt;/code&gt; macro in the machine description macro file.</source>
          <target state="translated">&lt;var&gt;reg&lt;/var&gt; 는 레지스터의 이름이어야합니다. 허용되는 레지스터 이름은 시스템마다 &lt;code&gt;REGISTER_NAMES&lt;/code&gt; 시스템 설명 매크로 파일 의 REGISTER_NAMES 매크로에 정의되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="9fe1c0acef9a1d0caebcd87a22d3dc35ad3b0448" translate="yes" xml:space="preserve">
          <source>&lt;var&gt;source-file&lt;/var&gt;##&lt;var&gt;md5&lt;/var&gt;.gcov</source>
          <target state="translated">&lt;var&gt;source-file&lt;/var&gt;##&lt;var&gt;md5&lt;/var&gt;.gcov</target>
        </trans-unit>
        <trans-unit id="b880a9e002b5a8cc6ab8e5b60ed026a3bd7b4c0f" translate="yes" xml:space="preserve">
          <source>&lt;var&gt;source&lt;/var&gt;.&lt;var&gt;suffix&lt;/var&gt;</source>
          <target state="translated">&lt;var&gt;source&lt;/var&gt;.&lt;var&gt;suffix&lt;/var&gt;</target>
        </trans-unit>
        <trans-unit id="c61509b5e229f01a21d510673ed3415523a72145" translate="yes" xml:space="preserve">
          <source>&lt;var&gt;source&lt;/var&gt;.&lt;var&gt;suffix&lt;/var&gt;.gch</source>
          <target state="translated">&lt;var&gt;source&lt;/var&gt;.&lt;var&gt;suffix&lt;/var&gt;.gch</target>
        </trans-unit>
        <trans-unit id="70db49065f5eba9055c8c455ae0994a97a7b0ff7" translate="yes" xml:space="preserve">
          <source>&lt;var&gt;source&lt;/var&gt;.o</source>
          <target state="translated">&lt;var&gt;source&lt;/var&gt;.o</target>
        </trans-unit>
        <trans-unit id="4b7c7cc9bc07a7bc8b59a106fc41bf34e5bc1bce" translate="yes" xml:space="preserve">
          <source>&lt;var&gt;source&lt;/var&gt;.s</source>
          <target state="translated">&lt;var&gt;source&lt;/var&gt;.s</target>
        </trans-unit>
        <trans-unit id="a72234cee5f73a88a10f2c471d34f2876066e0e2" translate="yes" xml:space="preserve">
          <source>&lt;var&gt;sourcefile&lt;/var&gt;.c</source>
          <target state="translated">&lt;var&gt;sourcefile&lt;/var&gt;.c</target>
        </trans-unit>
        <trans-unit id="fca90e9a21f6a50975b13af845d218e0a2f371d9" translate="yes" xml:space="preserve">
          <source>&lt;var&gt;sourcefile&lt;/var&gt;.gcov</source>
          <target state="translated">&lt;var&gt;sourcefile&lt;/var&gt;.gcov</target>
        </trans-unit>
        <trans-unit id="d01d6365317d600e2664fe58c60f8e16adc09101" translate="yes" xml:space="preserve">
          <source>&lt;var&gt;sourcename&lt;/var&gt;.decl</source>
          <target state="translated">&lt;var&gt;sourcename&lt;/var&gt;.decl</target>
        </trans-unit>
        <trans-unit id="273491f96586620c37b4be341e04ca0866ba515f" translate="yes" xml:space="preserve">
          <source>&lt;var&gt;sourcename&lt;/var&gt;.gcda</source>
          <target state="translated">&lt;var&gt;sourcename&lt;/var&gt;.gcda</target>
        </trans-unit>
        <trans-unit id="b7a20df9ca0090865388e1ede1a8c313cfa2ec03" translate="yes" xml:space="preserve">
          <source>&lt;var&gt;start_column&lt;/var&gt;: column in the source file where the function begins</source>
          <target state="translated">&lt;var&gt;start_column&lt;/var&gt; : 함수가 시작되는 소스 파일의 열</target>
        </trans-unit>
        <trans-unit id="3305d67073def22b0281ddc5b0ab6b21190df394" translate="yes" xml:space="preserve">
          <source>&lt;var&gt;start_line&lt;/var&gt;: line in the source file where the function begins</source>
          <target state="translated">&lt;var&gt;start_line&lt;/var&gt; : 함수가 시작되는 소스 파일의 행</target>
        </trans-unit>
        <trans-unit id="cb4cfaac038ae456ad73674888cd5dee273bede8" translate="yes" xml:space="preserve">
          <source>&lt;var&gt;startfile&lt;/var&gt; is the file name of the startfile (crt0) to use when linking. This option is only useful in conjunction with</source>
          <target state="translated">&lt;var&gt;startfile&lt;/var&gt; 은 링크 할 때 사용할 시작 파일 (crt0)의 파일 이름입니다. 이 옵션은 다음과 함께 만 유용합니다</target>
        </trans-unit>
        <trans-unit id="92e2c1df29e70248323ce9841f5738d40e347e46" translate="yes" xml:space="preserve">
          <source>&lt;var&gt;state&lt;/var&gt; configure option.</source>
          <target state="translated">&lt;var&gt;state&lt;/var&gt; 구성 옵션.</target>
        </trans-unit>
        <trans-unit id="956c0d57ed11241cf2af6705b81cf132c79d5cf4" translate="yes" xml:space="preserve">
          <source>&lt;var&gt;string&lt;/var&gt; may be parenthesized, and is printed with location information. For example,</source>
          <target state="translated">&lt;var&gt;string&lt;/var&gt; 은 괄호로 묶을 수 있으며 위치 정보와 함께 인쇄됩니다. 예를 들어</target>
        </trans-unit>
        <trans-unit id="9eedc4fd2f60aed10814958a1668c96d1c3d2760" translate="yes" xml:space="preserve">
          <source>&lt;var&gt;style&lt;/var&gt; is either &lt;code&gt;c11&lt;/code&gt; or &lt;code&gt;ts-18661-3&lt;/code&gt; as appropriate.</source>
          <target state="translated">&lt;var&gt;style&lt;/var&gt; 은 &lt;code&gt;c11&lt;/code&gt; 또는 &lt;code&gt;ts-18661-3&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="756b0ec3e68649366cd0150c58c2eabc74fb8d54" translate="yes" xml:space="preserve">
          <source>&lt;var&gt;systemlib&lt;/var&gt; is the library name of the library that provides low-level system calls required by the C library, e.g. &lt;code&gt;read&lt;/code&gt; and &lt;code&gt;write&lt;/code&gt;. This option is typically used to link with a library provided by a HAL BSP.</source>
          <target state="translated">&lt;var&gt;systemlib&lt;/var&gt; 는 C 라이브러리에 필요한 낮은 수준의 시스템 호출 (예 : &lt;code&gt;read&lt;/code&gt; and &lt;code&gt;write&lt;/code&gt; ) 을 제공하는 라이브러리의 라이브러리 이름입니다 . 이 옵션은 일반적으로 HAL BSP에서 제공하는 라이브러리와 연결하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="f3b5c58dcaf93cade01b7328b68fe8d4178ba8da" translate="yes" xml:space="preserve">
          <source>&lt;var&gt;throw&lt;/var&gt;: true when the branch is an exceptional branch</source>
          <target state="translated">&lt;var&gt;throw&lt;/var&gt; : 지점이 예외적 인 지점 인 경우 true</target>
        </trans-unit>
        <trans-unit id="745e86448be042dc8edebfc034c56ccccf38a979" translate="yes" xml:space="preserve">
          <source>&lt;var&gt;type&lt;/var&gt; is an integer constant from 0 to 3. If the least significant bit is clear, objects are whole variables, if it is set, a closest surrounding subobject is considered the object a pointer points to. The second bit determines if maximum or minimum of remaining bytes is computed.</source>
          <target state="translated">&lt;var&gt;type&lt;/var&gt; 은 0에서 3까지의 정수 상수입니다. 최하위 비트가 명확하면 객체는 전체 변수입니다. 설정되어 있으면 가장 가까운 주변 하위 객체가 포인터가 가리키는 객체로 간주됩니다. 두 번째 비트는 나머지 바이트의 최대 값 또는 최소값이 계산되는지 여부를 결정합니다.</target>
        </trans-unit>
        <trans-unit id="342fc24f28a056e632a0b35fb86b8d4dd73bc946" translate="yes" xml:space="preserve">
          <source>&lt;var&gt;unexecuted_block&lt;/var&gt;: flag whether the line contains an unexecuted block (not all statements on the line are executed)</source>
          <target state="translated">&lt;var&gt;unexecuted_block&lt;/var&gt; : 행에 실행되지 않은 블록이 있는지 여부를 플래그 지정합니다 (행의 모든 ​​명령문이 실행되는 것은 아님)</target>
        </trans-unit>
        <trans-unit id="6049c35e012365c54216cf4865563ff7b5c3b373" translate="yes" xml:space="preserve">
          <source>=&lt;var&gt;filename&lt;/var&gt;</source>
          <target state="translated">=&lt;var&gt;filename&lt;/var&gt;</target>
        </trans-unit>
        <trans-unit id="46f10d3b2f96391f996a860a29e922307def05f4" translate="yes" xml:space="preserve">
          <source>=@cc&lt;var&gt;cond&lt;/var&gt;</source>
          <target state="translated">=@cc&lt;var&gt;cond&lt;/var&gt;</target>
        </trans-unit>
        <trans-unit id="2481fc6ffc2fbe4f98d31256e625358325756148" translate="yes" xml:space="preserve">
          <source>=f</source>
          <target state="translated">=f</target>
        </trans-unit>
        <trans-unit id="900f8b38b05989605df65663e5e3869aab5eb789" translate="yes" xml:space="preserve">
          <source>? :</source>
          <target state="translated">? :</target>
        </trans-unit>
        <trans-unit id="6dcd4ce23d88e2ee9568ba546c007c63d9131c1b" translate="yes" xml:space="preserve">
          <source>A</source>
          <target state="translated">A</target>
        </trans-unit>
        <trans-unit id="7025e1843ee6104f357de4a85f21b2b545cac788" translate="yes" xml:space="preserve">
          <source>A &amp;ldquo;stable&amp;rdquo; memory operand; that is, one which does not include any automodification of the base register. This used to be useful when &amp;lsquo;</source>
          <target state="translated">&quot;안정한&quot;메모리 피연산자; 즉, 기준 레지스터의 자동 수정을 포함하지 않는 것입니다. 이것은 '</target>
        </trans-unit>
        <trans-unit id="b2a6e604c21235a8a2cf39c25b6821bfb403a2f9" translate="yes" xml:space="preserve">
          <source>A 10-bit signed constant (-512 &amp;hellip; 511)</source>
          <target state="translated">10 비트 부호있는 상수 (-512&amp;hellip; 511)</target>
        </trans-unit>
        <trans-unit id="576737d0097b50a261308a427b2851f9873b4e96" translate="yes" xml:space="preserve">
          <source>A 16 bit value with exactly one bit set.</source>
          <target state="translated">정확히 1 비트가 설정된 16 비트 값입니다.</target>
        </trans-unit>
        <trans-unit id="91a340944b7c5084f9cb17cdbbc4b3cfd1b6b8d2" translate="yes" xml:space="preserve">
          <source>A 16-bit fragment of a got, tls, or pc-relative reference.</source>
          <target state="translated">got, tls 또는 pc 기준 참조의 16 비트 조각입니다.</target>
        </trans-unit>
        <trans-unit id="9d079cc97fa73a6ab6e8c28d5a00eebc59ab7c45" translate="yes" xml:space="preserve">
          <source>A 16-bit signed constant (-32768 &amp;hellip; 32767)</source>
          <target state="translated">16 비트 부호있는 상수 (-32768&amp;hellip; 32767)</target>
        </trans-unit>
        <trans-unit id="600f9da68b2b8b3eca45f28f2690b3c739522b91" translate="yes" xml:space="preserve">
          <source>A 16-bit unsigned constant, multiple of 4 (0 &amp;hellip; 65532)</source>
          <target state="translated">16 비트 부호없는 상수, 4의 배수 (0&amp;hellip; 65532)</target>
        </trans-unit>
        <trans-unit id="626d08e653ff5fead00da4b2ae1ffdf55de25ac2" translate="yes" xml:space="preserve">
          <source>A 2-element vector constant with identical elements.</source>
          <target state="translated">요소가 같은 2 요소 벡터 상수입니다.</target>
        </trans-unit>
        <trans-unit id="199076609694aaa8dd531a498d6bd24d81a6cc20" translate="yes" xml:space="preserve">
          <source>A 20-bit signed constant (-524288 &amp;hellip; 524287)</source>
          <target state="translated">20 비트 부호있는 상수 (-524288&amp;hellip; 524287)</target>
        </trans-unit>
        <trans-unit id="739e9c986b6796272b083980b6406cba9cf05af2" translate="yes" xml:space="preserve">
          <source>A 3-bit unsigned integer constant.</source>
          <target state="translated">3 비트 부호없는 정수 상수.</target>
        </trans-unit>
        <trans-unit id="8d9d9ff6786b090797685cfe7290aeace549fb2c" translate="yes" xml:space="preserve">
          <source>A 4-element vector constant with identical elements.</source>
          <target state="translated">요소가 같은 4 요소 벡터 상수입니다.</target>
        </trans-unit>
        <trans-unit id="809cfd342c5778cebf932a5fb2090f41ac0b8050" translate="yes" xml:space="preserve">
          <source>A 5-bit unsigned immediate for CSR access instructions.</source>
          <target state="translated">CSR 액세스 명령에 대한 5 비트 부호없는 즉시.</target>
        </trans-unit>
        <trans-unit id="7a0f592094ae133e28a83db08acb3ad80aaa8c6b" translate="yes" xml:space="preserve">
          <source>A 5-bit unsigned integer constant.</source>
          <target state="translated">5 비트 부호없는 정수 상수.</target>
        </trans-unit>
        <trans-unit id="2a19359a80d0f6de7d964e539759745df3e07113" translate="yes" xml:space="preserve">
          <source>A 6-bit unsigned integer constant.</source>
          <target state="translated">6 비트 부호없는 정수 상수.</target>
        </trans-unit>
        <trans-unit id="4a1d6a6dcc128bafb39f6e3e6579f2614ede9096" translate="yes" xml:space="preserve">
          <source>A 7-bit unsigned integer constant.</source>
          <target state="translated">7 비트 부호없는 정수 상수.</target>
        </trans-unit>
        <trans-unit id="4e392016af47c374eef4f8aaf14822a0c557c367" translate="yes" xml:space="preserve">
          <source>A 8-bit unsigned integer constant.</source>
          <target state="translated">8 비트 부호없는 정수 상수.</target>
        </trans-unit>
        <trans-unit id="083fa44b7c5e44320ff4ed2ae01244ea90801a78" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;lo_sum&lt;/code&gt; data-linkage-table memory operand</source>
          <target state="translated">&lt;code&gt;lo_sum&lt;/code&gt; 데이터 링크 테이블 메모리 피연산자</target>
        </trans-unit>
        <trans-unit id="f9cd2e27d673f56cc94424aa5ac780102659b79a" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;switch&lt;/code&gt; statement has an operand of type &lt;code&gt;long&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;switch&lt;/code&gt; 문은 유형의 피연산자를 가지고 &lt;code&gt;long&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d0eff00ac09b6d2be5766ddb9515db21e223caed" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;typeof&lt;/code&gt; construct can be used anywhere a typedef name can be used. For example, you can use it in a declaration, in a cast, or inside of &lt;code&gt;sizeof&lt;/code&gt; or &lt;code&gt;typeof&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;typeof&lt;/code&gt; 구조 어디서나 사용할 수있는 형식 정의 이름을 사용할 수 있습니다. 예를 들어 선언, 캐스트 또는 &lt;code&gt;sizeof&lt;/code&gt; 또는 &lt;code&gt;typeof&lt;/code&gt; 내부에서 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="0fcc11ba29659026ef90972ee49fd236e8ca7461" translate="yes" xml:space="preserve">
          <source>A &lt;em&gt;nested function&lt;/em&gt; is a function defined inside another function. Nested functions are supported as an extension in GNU C, but are not supported by GNU C++.</source>
          <target state="translated">&lt;em&gt;중첩 된 함수는&lt;/em&gt; 다른 함수 내에 정의 된 함수이다. 중첩 함수는 GNU C에서 확장으로 지원되지만 GNU C ++에서는 지원되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="c55a5d7e9e734b9cfd6d5b793b74655af96e5ff3" translate="yes" xml:space="preserve">
          <source>A &lt;em&gt;preprocessing token&lt;/em&gt; is a &lt;em&gt;preprocessing number&lt;/em&gt; if it begins with a digit and is followed by letters, underscores, digits, periods and &amp;lsquo;</source>
          <target state="translated">&lt;em&gt;전처리 토큰&lt;/em&gt; A는 &lt;em&gt;전처리 번호&lt;/em&gt; 가 숫자 문자로 시작하고, 밑줄 숫자와 마침표 &quot;뒤에 있다면</target>
        </trans-unit>
        <trans-unit id="226cffe8593eab9de1b46a1badbfea96e62ee6f4" translate="yes" xml:space="preserve">
          <source>A &lt;em&gt;thread&lt;/em&gt; is a flow of control within the abstract machine. It is implementation defined whether or not there may be more than one thread.</source>
          <target state="translated">&lt;em&gt;스레드는&lt;/em&gt; 추상 기계 내에서 제어의 흐름이다. 하나 이상의 스레드가 있는지 여부에 대해 정의 된 구현입니다.</target>
        </trans-unit>
        <trans-unit id="d63439749e9d375a44c13be44c44d3b25a8cbdd3" translate="yes" xml:space="preserve">
          <source>A C++ namespace declaration can also have the visibility attribute.</source>
          <target state="translated">C ++ 네임 스페이스 선언에는 가시성 속성이있을 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="f6e3cb01289f372ad5685f7b48da04f4e60a84ec" translate="yes" xml:space="preserve">
          <source>A GNU Manual</source>
          <target state="translated">GNU 매뉴얼</target>
        </trans-unit>
        <trans-unit id="cd8fd98a94ad304e430ad561d03982387ab58fa2" translate="yes" xml:space="preserve">
          <source>A basic &lt;code&gt;asm&lt;/code&gt; statement has the following syntax:</source>
          <target state="translated">기본 &lt;code&gt;asm&lt;/code&gt; 문의 구문은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="6145aa4e1e7149a673e61fa6c454fd8a42cee7a8" translate="yes" xml:space="preserve">
          <source>A basic block profile count is considered hot if it contributes to the given permillage (i.e. 0...1000) of the entire profiled execution.</source>
          <target state="translated">기본 블록 프로파일 수는 전체 프로파일 된 실행의 주어진 단위 (예 : 0 ... 1000)에 기여하는 경우 핫한 것으로 간주됩니다.</target>
        </trans-unit>
        <trans-unit id="2df3f34d53b76011b7a6bb1711d67e1df403856d" translate="yes" xml:space="preserve">
          <source>A binary type trait: &lt;code&gt;true&lt;/code&gt; whenever the type arguments are the same.</source>
          <target state="translated">이진 형식 특성 : 형식 인수가 동일 할 때마다 &lt;code&gt;true&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="61a474d3c8a798ad9f41fbc155178fa260c3cbfd" translate="yes" xml:space="preserve">
          <source>A bit mask suitable for the BFINS instruction.</source>
          <target state="translated">BFINS 명령어에 적합한 비트 마스크.</target>
        </trans-unit>
        <trans-unit id="1c197853a26bb6b9e64cfe3c20fc4b78dab065a2" translate="yes" xml:space="preserve">
          <source>A bit mask suitable for the MM instruction.</source>
          <target state="translated">MM 명령에 적합한 비트 마스크.</target>
        </trans-unit>
        <trans-unit id="fb82d601263ede6336b3a6d38f27a2db288988de" translate="yes" xml:space="preserve">
          <source>A bitfield mask suitable for bext or bins</source>
          <target state="translated">Bext 또는 Bin에 적합한 비트 필드 마스크</target>
        </trans-unit>
        <trans-unit id="95088444b66d4c9478cf588a65f1dca5aa3b6e35" translate="yes" xml:space="preserve">
          <source>A c99-like declaration syntax is also allowed:</source>
          <target state="translated">c99와 같은 선언 구문도 허용됩니다.</target>
        </trans-unit>
        <trans-unit id="242045c1091165567c1e2bc6642eff026733baf4" translate="yes" xml:space="preserve">
          <source>A call clobbered P register.</source>
          <target state="translated">호출이 P 레지스터를 방해했습니다.</target>
        </trans-unit>
        <trans-unit id="6501e67efab2f7c858c0e0f7b446cd704c13a388" translate="yes" xml:space="preserve">
          <source>A call-used register in register file B (B0&amp;ndash;B9, B16&amp;ndash;B31).</source>
          <target state="translated">레지스터 파일 B (B0&amp;ndash;B9, B16&amp;ndash;B31)의 호출 사용 레지스터.</target>
        </trans-unit>
        <trans-unit id="5a85a53751233b51746da27b56a87b1a58dd44bc" translate="yes" xml:space="preserve">
          <source>A cast from integer to pointer discards most-significant bits if the pointer representation is smaller than the integer type, extends according to the signedness of the integer type if the pointer representation is larger than the integer type, otherwise the bits are unchanged.</source>
          <target state="translated">포인터 표현이 정수 유형보다 작 으면 정수에서 포인터로의 캐스트는 가장 중요한 비트를 버리고, 포인터 표현이 정수 유형보다 큰 경우 정수 유형의 부호에 따라 확장되고, 그렇지 않으면 비트가 변경되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="9579e92267fbbcb00a411d24c34a20ac82cffc52" translate="yes" xml:space="preserve">
          <source>A cast from pointer to integer discards most-significant bits if the pointer representation is larger than the integer type, sign-extends&lt;a href=&quot;#FOOT2&quot; id=&quot;DOCF2&quot; name=&quot;DOCF2&quot;&gt;&lt;sup&gt;2&lt;/sup&gt;&lt;/a&gt; if the pointer representation is smaller than the integer type, otherwise the bits are unchanged.</source>
          <target state="translated">포인터 표현에서 정수로의 캐스트는 포인터 표현이 정수 유형보다 큰 경우 가장 중요한 비트를 버리고 포인터 표현이 정수 유형 보다 작은 경우 &lt;a href=&quot;#FOOT2&quot; id=&quot;DOCF2&quot; name=&quot;DOCF2&quot;&gt;&lt;sup&gt;2를&lt;/sup&gt;&lt;/a&gt; 확장 하고 그렇지 않으면 비트는 변경되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="8d607e1d6022f86c3f2fb0150398c8747d6a9a20" translate="yes" xml:space="preserve">
          <source>A cast to a union type is a C extension not available in C++. It looks just like ordinary casts with the constraint that the type specified is a union type. You can specify the type either with the &lt;code&gt;union&lt;/code&gt; keyword or with a &lt;code&gt;typedef&lt;/code&gt; name that refers to a union. The result of a cast to a union is a temporary rvalue of the union type with a member whose type matches that of the operand initialized to the value of the operand. The effect of a cast to a union is similar to a compound literal except that it yields an rvalue like standard casts do. See &lt;a href=&quot;compound-literals#Compound-Literals&quot;&gt;Compound Literals&lt;/a&gt;.</source>
          <target state="translated">공용체 유형으로 캐스트는 C ++에서 사용할 수없는 C 확장입니다. 지정된 유형이 공용체 유형이라는 제한 조건이있는 일반 캐스트와 같습니다. &lt;code&gt;union&lt;/code&gt; 키워드 또는 공용체 를 참조 하는 &lt;code&gt;typedef&lt;/code&gt; 이름으로 형식을 지정할 수 있습니다 . 공용체로 캐스트 한 결과는 형식이 피연산자의 값으로 초기화 된 피연산자의 형식과 일치하는 멤버를 가진 공용체 유형의 임시 rvalue입니다. 조합에 대한 캐스트의 효과는 표준 캐스트와 마찬가지로 rvalue를 생성한다는 점을 제외하고 복합 리터럴과 유사합니다. &lt;a href=&quot;compound-literals#Compound-Literals&quot;&gt;복합 리터럴을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="75e1479f2ae72adba50e5d40e09a4fb8d576ce4d" translate="yes" xml:space="preserve">
          <source>A combination of</source>
          <target state="translated">의 조합</target>
        </trans-unit>
        <trans-unit id="de7ce58153dc3aa9a8a53f607567323d0809bd31" translate="yes" xml:space="preserve">
          <source>A comma-separated list of C expressions read by the instructions in the &lt;var&gt;AssemblerTemplate&lt;/var&gt;. An empty list is permitted. See &lt;a href=&quot;#InputOperands&quot;&gt;InputOperands&lt;/a&gt;.</source>
          <target state="translated">&lt;var&gt;AssemblerTemplate&lt;/var&gt; 의 지시 사항에서 읽은 쉼표로 구분 된 C 표현식 목록입니다 . 빈 목록이 허용됩니다. &lt;a href=&quot;#InputOperands&quot;&gt;InputOperands를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="5b5d944665cc53cab2f2ad1f645c434c5620d068" translate="yes" xml:space="preserve">
          <source>A comma-separated list of registers or other values changed by the &lt;var&gt;AssemblerTemplate&lt;/var&gt;, beyond those listed as outputs. An empty list is permitted. See &lt;a href=&quot;#Clobbers-and-Scratch-Registers&quot;&gt;Clobbers and Scratch Registers&lt;/a&gt;.</source>
          <target state="translated">쉼표로 구분 된 레지스터 또는 기타 값 목록은 &lt;var&gt;AssemblerTemplate&lt;/var&gt; 에 의해 출력으로 나열된 값을 넘어서 변경되었습니다 . 빈 목록이 허용됩니다. &lt;a href=&quot;#Clobbers-and-Scratch-Registers&quot;&gt;클로버 및 스크래치 레지스터를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="65d21196a0c3e5a9f693ae19ae22931182555110" translate="yes" xml:space="preserve">
          <source>A comma-separated list of the C variables modified by the instructions in the &lt;var&gt;AssemblerTemplate&lt;/var&gt;. An empty list is permitted. See &lt;a href=&quot;#OutputOperands&quot;&gt;OutputOperands&lt;/a&gt;.</source>
          <target state="translated">&lt;var&gt;AssemblerTemplate&lt;/var&gt; 의 지시 사항에 의해 수정 된 C 변수의 쉼표로 구분 된 목록입니다 . 빈 목록이 허용됩니다. &lt;a href=&quot;#OutputOperands&quot;&gt;OutputOperands를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="57ff1562fe61f1f887425ce2cee86f1d3d93e844" translate="yes" xml:space="preserve">
          <source>A compiler conforms to an ABI if it generates code that follows all of the specifications enumerated by that ABI. A library conforms to an ABI if it is implemented according to that ABI. An application conforms to an ABI if it is built using tools that conform to that ABI and does not contain source code that specifically changes behavior specified by the ABI.</source>
          <target state="translated">컴파일러는 해당 ABI에서 열거 한 모든 사양을 따르는 코드를 생성하는 경우 ABI를 준수합니다. 라이브러리는 해당 ABI에 따라 구현 된 경우 ABI를 준수합니다. 응용 프로그램은 해당 ABI를 준수하는 도구를 사용하여 빌드되고 ABI에 의해 지정된 동작을 구체적으로 변경하는 소스 코드를 포함하지 않는 경우 ABI를 준수합니다.</target>
        </trans-unit>
        <trans-unit id="41c80a94e954da6243e86405854638e4aa3a6477" translate="yes" xml:space="preserve">
          <source>A compound literal looks like a cast of a brace-enclosed aggregate initializer list. Its value is an object of the type specified in the cast, containing the elements specified in the initializer. Unlike the result of a cast, a compound literal is an lvalue. ISO C99 and later support compound literals. As an extension, GCC supports compound literals also in C90 mode and in C++, although as explained below, the C++ semantics are somewhat different.</source>
          <target state="translated">복합 리터럴은 중괄호로 묶인 집계 초기화 목록의 캐스트처럼 보입니다. 이 값은 캐스트에 지정된 유형의 객체이며 초기화 프로그램에 지정된 요소를 포함합니다. 캐스트 결과와 달리 복합 리터럴은 lvalue입니다. ISO C99 이상은 복합 리터럴을 지원합니다. 확장으로서, GCC는 C90 모드와 C ++에서도 복합 리터럴을 지원하지만 아래에서 설명하는 것처럼 C ++ 의미는 약간 다릅니다.</target>
        </trans-unit>
        <trans-unit id="f6dd9a1a8f56216b2f65e6b7a8c29b8ee8f55106" translate="yes" xml:space="preserve">
          <source>A compound statement enclosed in parentheses may appear as an expression in GNU C. This allows you to use loops, switches, and local variables within an expression.</source>
          <target state="translated">괄호로 묶인 복합 명령문은 GNU C에서 표현식으로 나타날 수 있습니다.이를 통해 표현식 내에서 루프, 스위치 및 로컬 변수를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8a72443d4592827fe4ca85bea82301121049b91e" translate="yes" xml:space="preserve">
          <source>A conforming implementation of ISO C is required to document its choice of behavior in each of the areas that are designated &amp;ldquo;implementation defined&amp;rdquo;. The following lists all such areas, along with the section numbers from the ISO/IEC 9899:1990, ISO/IEC 9899:1999 and ISO/IEC 9899:2011 standards. Some areas are only implementation-defined in one version of the standard.</source>
          <target state="translated">&quot;구현 정의&quot;로 지정된 각 영역에서 행동 선택을 문서화하려면 ISO C의 적합한 구현이 필요합니다. 다음은 그러한 모든 영역을 ISO / IEC 9899 : 1990, ISO / IEC 9899 : 1999 및 ISO / IEC 9899 : 2011 표준의 섹션 번호와 함께 나열합니다. 일부 영역은 하나의 표준 버전에서만 구현 정의됩니다.</target>
        </trans-unit>
        <trans-unit id="d4cb4e2bf524da1d62affddb40dfb630800239af" translate="yes" xml:space="preserve">
          <source>A conforming implementation of ISO C++ is required to document its choice of behavior in each of the areas that are designated &amp;ldquo;implementation defined&amp;rdquo;. The following lists all such areas, along with the section numbers from the ISO/IEC 14882:1998 and ISO/IEC 14882:2003 standards. Some areas are only implementation-defined in one version of the standard.</source>
          <target state="translated">&amp;ldquo;구현 정의&amp;rdquo;로 지정된 각 영역에서 선택한 행동을 문서화하려면 ISO C ++의 적합한 구현이 필요합니다. 다음은 그러한 모든 영역을 ISO / IEC 14882 : 1998 및 ISO / IEC 14882 : 2003 표준의 섹션 번호와 함께 나열한 것입니다. 일부 영역은 하나의 표준 버전에서만 구현 정의됩니다.</target>
        </trans-unit>
        <trans-unit id="7b29cb3b319ec95ede4a30707c842823bf94b7db" translate="yes" xml:space="preserve">
          <source>A consequence of this is that &lt;code&gt;sizeof&lt;/code&gt; is also allowed on &lt;code&gt;void&lt;/code&gt; and on function types, and returns 1.</source>
          <target state="translated">결과적으로 &lt;code&gt;sizeof&lt;/code&gt; 는 &lt;code&gt;void&lt;/code&gt; 및 함수 유형 에서도 허용되며 1을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="7cad9a0baf039ead351d859d05c0365e63661fb9" translate="yes" xml:space="preserve">
          <source>A constant between -255 and 0 inclusive.</source>
          <target state="translated">-255와 0 사이의 상수입니다.</target>
        </trans-unit>
        <trans-unit id="4f8cd8bf499f2d6d54a71ffc2d3e21cf7ef45e36" translate="yes" xml:space="preserve">
          <source>A constant between -3 and 0 inclusive.</source>
          <target state="translated">-3과 0 사이의 상수입니다.</target>
        </trans-unit>
        <trans-unit id="19428213d0a5f62ee0574191f3ae2f2ddd996015" translate="yes" xml:space="preserve">
          <source>A constant between -4 and -1 inclusive.</source>
          <target state="translated">-4와 -1 사이의 상수입니다.</target>
        </trans-unit>
        <trans-unit id="d2fbc8414f61903ae333dcf7ac7a844a0c7b23fe" translate="yes" xml:space="preserve">
          <source>A constant between 0 and 255 inclusive.</source>
          <target state="translated">0에서 255 사이의 상수입니다.</target>
        </trans-unit>
        <trans-unit id="12f6b4cb352959b8bca5dac3da05fd53e64fa274" translate="yes" xml:space="preserve">
          <source>A constant between 0 and 3 inclusive.</source>
          <target state="translated">0에서 3 사이의 상수입니다.</target>
        </trans-unit>
        <trans-unit id="da945b1c391dff3ac6bc6d5fbd2be9149c62266c" translate="yes" xml:space="preserve">
          <source>A constant between 1 and 4 inclusive.</source>
          <target state="translated">1과 4 사이의 상수입니다.</target>
        </trans-unit>
        <trans-unit id="c0aca6087bfc1e63cba0551e38002443555e0fac" translate="yes" xml:space="preserve">
          <source>A constant for a bitfield width (1 &amp;hellip; 16)</source>
          <target state="translated">비트 필드 너비에 대한 상수 (1&amp;hellip; 16)</target>
        </trans-unit>
        <trans-unit id="6d56856d82b6a91412eed6d7df5c640079002d4d" translate="yes" xml:space="preserve">
          <source>A constant in the range -128 to 127, inclusive.</source>
          <target state="translated">-128에서 127 사이의 상수.</target>
        </trans-unit>
        <trans-unit id="17b05b4c60ac27d1e72d8030837136d5fa0be31c" translate="yes" xml:space="preserve">
          <source>A constant in the range -256 to 255, inclusive.</source>
          <target state="translated">-256에서 255 사이의 상수.</target>
        </trans-unit>
        <trans-unit id="695a694abf391bc605e989d6eb5dbacf14f628c2" translate="yes" xml:space="preserve">
          <source>A constant in the range -32768 to 32767, inclusive.</source>
          <target state="translated">-32768에서 32767 사이의 상수.</target>
        </trans-unit>
        <trans-unit id="2e51455a9b3294a37777151389f3c055d9628f83" translate="yes" xml:space="preserve">
          <source>A constant in the range -65535 to -1 (inclusive).</source>
          <target state="translated">-65535 ~ -1 범위의 상수입니다 (포함).</target>
        </trans-unit>
        <trans-unit id="a2eafd56ff7c3244c125e89f98b5047314116000" translate="yes" xml:space="preserve">
          <source>A constant in the range -8388608 to 8388607, inclusive.</source>
          <target state="translated">-8388608 ~ 8388607 범위의 상수.</target>
        </trans-unit>
        <trans-unit id="097b361ff7733f96fe3db5433e37aba686b852b1" translate="yes" xml:space="preserve">
          <source>A constant in the range 0 to 15, inclusive.</source>
          <target state="translated">0에서 15 사이의 상수.</target>
        </trans-unit>
        <trans-unit id="a36455a425b9727ae75ec8f878c7951252ab00ab" translate="yes" xml:space="preserve">
          <source>A constant in the range 1 to 65535 (inclusive).</source>
          <target state="translated">1에서 65535 사이의 상수 (포함).</target>
        </trans-unit>
        <trans-unit id="2a58c4a3cc79eb84153470348476e3f269dac278" translate="yes" xml:space="preserve">
          <source>A constant in the range [-64, 63] for shift/rotate instructions.</source>
          <target state="translated">이동 / 회전 명령에 대한 [-64, 63] 범위의 상수.</target>
        </trans-unit>
        <trans-unit id="10785db1e9d20c3cdec60f076d95570e2881e446" translate="yes" xml:space="preserve">
          <source>A constant in the range of 0 to -255.</source>
          <target state="translated">0--255 범위의 상수입니다.</target>
        </trans-unit>
        <trans-unit id="5b0495335754f2b58bcc5c273f50a0ad47fb4980" translate="yes" xml:space="preserve">
          <source>A constant in the range of 0 to 255.</source>
          <target state="translated">0에서 255 사이의 상수.</target>
        </trans-unit>
        <trans-unit id="3df560572af8da9f608ecbfa457628a58591cc1d" translate="yes" xml:space="preserve">
          <source>A constant in the range supported by &lt;code&gt;movcc&lt;/code&gt; instructions (11-bit signed immediate)</source>
          <target state="translated">&lt;code&gt;movcc&lt;/code&gt; 명령어가 지원하는 범위의 상수 (11 비트 부호있는 즉시)</target>
        </trans-unit>
        <trans-unit id="e6b217cb7e92669add738eef6823abf207c1faff" translate="yes" xml:space="preserve">
          <source>A constant in the range supported by &lt;code&gt;movrcc&lt;/code&gt; instructions (10-bit signed immediate)</source>
          <target state="translated">&lt;code&gt;movrcc&lt;/code&gt; 명령어가 지원하는 범위의 상수 (10 비트 부호있는 즉시)</target>
        </trans-unit>
        <trans-unit id="f72ba093b9d9c51600024c95028a46b05718f280" translate="yes" xml:space="preserve">
          <source>A constant that cannot be loaded using &lt;code&gt;lui&lt;/code&gt;, &lt;code&gt;addiu&lt;/code&gt; or &lt;code&gt;ori&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;lui&lt;/code&gt; , &lt;code&gt;addiu&lt;/code&gt; 또는 &lt;code&gt;ori&lt;/code&gt; 를 사용하여로드 할 수없는 상수입니다 .</target>
        </trans-unit>
        <trans-unit id="7c2d44283a3acc9bdc683ea83a3f874e52a46752" translate="yes" xml:space="preserve">
          <source>A constant that has exactly one bit clear.</source>
          <target state="translated">정확히 1 비트가 명확한 상수입니다.</target>
        </trans-unit>
        <trans-unit id="cfb3a0520f6d9864d7a1976144208cbbd9174378" translate="yes" xml:space="preserve">
          <source>A constant that has exactly one bit set.</source>
          <target state="translated">정확히 1 비트 세트가있는 상수입니다.</target>
        </trans-unit>
        <trans-unit id="f067235028290b700b44d1ece783ed553e206e2b" translate="yes" xml:space="preserve">
          <source>A constant that is not between 2 and 15 inclusive.</source>
          <target state="translated">2에서 15 사이의 상수가 아닙니다.</target>
        </trans-unit>
        <trans-unit id="dc8b34473e04adc25852b0eed10f1d174b004494" translate="yes" xml:space="preserve">
          <source>A constant which is not in the range of imm15u but ok for bclr instruction.</source>
          <target state="translated">imm15u 범위에 없지만 bclr 명령에 대해서는 상수입니다.</target>
        </trans-unit>
        <trans-unit id="c6a1b8bc59cee8c8f6571d6cc94e881414d8fd98" translate="yes" xml:space="preserve">
          <source>A constant which is not in the range of imm15u but ok for bset instruction.</source>
          <target state="translated">imm15u 범위에 없지만 bset 명령에는 괜찮은 상수입니다.</target>
        </trans-unit>
        <trans-unit id="5a081f0e675d939eda6d41b659eb1a4796698f55" translate="yes" xml:space="preserve">
          <source>A constant which is not in the range of imm15u but ok for btgl instruction.</source>
          <target state="translated">imm15u 범위에 없지만 btgl 명령에는 괜찮은 상수입니다.</target>
        </trans-unit>
        <trans-unit id="739639d0dba642847055adad6d408a8462cefd56" translate="yes" xml:space="preserve">
          <source>A constant whose compliment value is in the range of imm15u and ok for bitci instruction.</source>
          <target state="translated">칭찬 값이 imci15u 및 bitci 명령의 ok 범위에있는 상수입니다.</target>
        </trans-unit>
        <trans-unit id="772d4006b3b3b9f5dbb1eb8305ae0da40df09812" translate="yes" xml:space="preserve">
          <source>A decimal number representing clock cycles.</source>
          <target state="translated">클럭 사이클을 나타내는 10 진수입니다.</target>
        </trans-unit>
        <trans-unit id="871d38c63e186ae7cd0f311fcbbf75d49f235704" translate="yes" xml:space="preserve">
          <source>A deprecated synonym for</source>
          <target state="translated">더 이상 사용되지 않는 동의어</target>
        </trans-unit>
        <trans-unit id="35b2c49fceb685c2e6ddfd9b7ccde26327c395da" translate="yes" xml:space="preserve">
          <source>A diagnostic can contain zero or more locations. Each location has up to three positions within it: a &lt;code&gt;caret&lt;/code&gt; position and optional &lt;code&gt;start&lt;/code&gt; and &lt;code&gt;finish&lt;/code&gt; positions. A location can also have an optional &lt;code&gt;label&lt;/code&gt; string. For example, this error:</source>
          <target state="translated">진단에는 0 개 이상의 위치가 포함될 수 있습니다. 각 위치에는 최대 3 개의 위치가 있습니다 : &lt;code&gt;caret&lt;/code&gt; 위치 및 선택적인 &lt;code&gt;start&lt;/code&gt; 및 &lt;code&gt;finish&lt;/code&gt; 위치. 위치에는 선택적 &lt;code&gt;label&lt;/code&gt; 문자열 이있을 수도 있습니다 . 예를 들어이 오류는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="1d3956dd1850c8ee01dd888bb0a0a3023c553d32" translate="yes" xml:space="preserve">
          <source>A diagnostic has a &lt;code&gt;kind&lt;/code&gt;. If this is &lt;code&gt;warning&lt;/code&gt;, then there is an &lt;code&gt;option&lt;/code&gt; key describing the command-line option controlling the warning.</source>
          <target state="translated">진단에는 &lt;code&gt;kind&lt;/code&gt; 있습니다. 이것이 &lt;code&gt;warning&lt;/code&gt; 인 경우 경고를 제어하는 명령 행 옵션을 설명 하는 &lt;code&gt;option&lt;/code&gt; 키가 있습니다.</target>
        </trans-unit>
        <trans-unit id="64d7123704bf7fa0f1e73d01535513a0dc7c2748" translate="yes" xml:space="preserve">
          <source>A different sort of disaster results from the use of this flag for a register in which function values may be returned.</source>
          <target state="translated">함수 값이 리턴 될 수있는 레지스터에이 플래그를 사용하면 다른 유형의 재난이 발생합니다.</target>
        </trans-unit>
        <trans-unit id="c32446d7ea192a83db5ac54835cfe4c3d265fe83" translate="yes" xml:space="preserve">
          <source>A factor for tuning the upper bound that swing modulo scheduler uses for scheduling a loop.</source>
          <target state="translated">스윙 모듈로 스케줄러가 루프 스케줄링에 사용하는 상한을 조정하는 요소.</target>
        </trans-unit>
        <trans-unit id="a7b34a84c6690fd83c05d2fa16fc0c287bb3da1b" translate="yes" xml:space="preserve">
          <source>A feature to report any failure to conform to ISO C might be useful in some instances, but would require considerable additional work and would be quite different from</source>
          <target state="translated">ISO C를 준수하지 못하는 것을보고하는 기능은 경우에 따라 유용하지만 상당한 추가 작업이 필요하며</target>
        </trans-unit>
        <trans-unit id="b2a29cc3baea0c08d4a825d0752f1c7c91b7a29c" translate="yes" xml:space="preserve">
          <source>A few standard library functions, such as &lt;code&gt;abort&lt;/code&gt; and &lt;code&gt;exit&lt;/code&gt;, cannot return. GCC knows this automatically. Some programs define their own functions that never return. You can declare them &lt;code&gt;noreturn&lt;/code&gt; to tell the compiler this fact. For example,</source>
          <target state="translated">&lt;code&gt;abort&lt;/code&gt; 및 &lt;code&gt;exit&lt;/code&gt; 와 같은 일부 표준 라이브러리 함수 는 리턴 할 수 없습니다. GCC는이를 자동으로 알고 있습니다. 일부 프로그램은 절대 반환되지 않는 자체 기능을 정의합니다. 컴파일러 에게이 사실을 알리기 위해 &lt;code&gt;noreturn&lt;/code&gt; 으로 선언 할 수 있습니다 . 예를 들어</target>
        </trans-unit>
        <trans-unit id="cb463f377ea974dd6c90f4d5e14fe7753fa59c05" translate="yes" xml:space="preserve">
          <source>A file name that does not end in a special recognized suffix is considered to name an object file or library. (Object files are distinguished from libraries by the linker according to the file contents.) If linking is done, these object files are used as input to the linker.</source>
          <target state="translated">특수하게 인식되는 접미사로 끝나지 않는 파일 이름은 객체 파일 또는 라이브러리의 이름으로 간주됩니다. (파일 내용에 따라 링커에서 오브젝트 파일을 라이브러리와 구별합니다.) 링크가 완료되면 이러한 오브젝트 파일이 링커에 대한 입력으로 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="31a3ef8a1f914c346a656751b3762e1f23b6d753" translate="yes" xml:space="preserve">
          <source>A file&amp;rsquo;s &lt;em&gt;basename&lt;/em&gt; is the name stripped of all leading path information and of trailing suffixes, such as &amp;lsquo;</source>
          <target state="translated">파일의 &lt;em&gt;기본&lt;/em&gt; 이름은 모든 주요 경로 정보와 후행 접미사 (예 : '</target>
        </trans-unit>
        <trans-unit id="3cb6c35b9f770d58e9e6ae1be71711d84191b278" translate="yes" xml:space="preserve">
          <source>A floating point constant 0.0</source>
          <target state="translated">부동 소수점 상수 0.0</target>
        </trans-unit>
        <trans-unit id="35a05594f7fa158ed7e1a662576eede9b7714efc" translate="yes" xml:space="preserve">
          <source>A floating-point condition code register.</source>
          <target state="translated">부동 소수점 조건 코드 레지스터.</target>
        </trans-unit>
        <trans-unit id="6a5e282398dc91c4802485c8333b0a476c54fe7d" translate="yes" xml:space="preserve">
          <source>A floating-point register (if available).</source>
          <target state="translated">부동 소수점 레지스터 (사용 가능한 경우)</target>
        </trans-unit>
        <trans-unit id="f68f63f0de9f100e3091753e0a87b4bdcab324f8" translate="yes" xml:space="preserve">
          <source>A floating-point register (if availiable).</source>
          <target state="translated">부동 소수점 레지스터 (사용 가능한 경우).</target>
        </trans-unit>
        <trans-unit id="1d93f84bcb43d9808ea6d43552092e130f8e5d2b" translate="yes" xml:space="preserve">
          <source>A fourth version of the C standard, known as &lt;em&gt;C11&lt;/em&gt;, was published in 2011 as ISO/IEC 9899:2011. (While in development, drafts of this standard version were referred to as &lt;em&gt;C1X&lt;/em&gt;.) GCC has substantially complete support for this standard, enabled with</source>
          <target state="translated">&lt;em&gt;C11으로&lt;/em&gt; 알려진 C 표준의 네 번째 버전은 2011 년 ISO / IEC 9899 : 2011으로 출판되었습니다. (개발 과정에서이 표준 버전의 초안을 &lt;em&gt;C1X&lt;/em&gt; 라고했습니다 .) GCC는이 표준을 실질적으로 완벽하게 지원합니다.</target>
        </trans-unit>
        <trans-unit id="55257df904754ff4c13989bc1d064dbb261da350" translate="yes" xml:space="preserve">
          <source>A framework directory is a directory with frameworks in it. A framework is a directory with a</source>
          <target state="translated">프레임 워크 디렉토리는 프레임 워크가있는 디렉토리입니다. 프레임 워크는</target>
        </trans-unit>
        <trans-unit id="5ba28f66c2dca176d361d13d2cfcd58e64de11b1" translate="yes" xml:space="preserve">
          <source>A function declared external in one block and then used after the end of the block.</source>
          <target state="translated">한 블록에서 외부로 선언 된 다음 블록 끝 이후에 사용되는 함수입니다.</target>
        </trans-unit>
        <trans-unit id="31442efa0c2c801bce0a5591e6aced95492894fb" translate="yes" xml:space="preserve">
          <source>A function may be given the attribute &lt;code&gt;no_instrument_function&lt;/code&gt;, in which case this instrumentation is not done. This can be used, for example, for the profiling functions listed above, high-priority interrupt routines, and any functions from which the profiling functions cannot safely be called (perhaps signal handlers, if the profiling routines generate output or allocate memory). See &lt;a href=&quot;common-function-attributes#Common-Function-Attributes&quot;&gt;Common Function Attributes&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;no_instrument_function&lt;/code&gt; 속성이 함수에 제공 될 수 있으며 ,이 경우이 계측이 수행되지 않습니다. 예를 들어 위에 나열된 프로파일 링 기능, 우선 순위가 높은 인터럽트 루틴 및 프로파일 링 기능을 안전하게 호출 할 수없는 기능 (프로파일 링 루틴이 출력을 생성하거나 메모리를 할당하는 경우)에 사용할 수 있습니다. &lt;a href=&quot;common-function-attributes#Common-Function-Attributes&quot;&gt;공통 기능 속성을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="a3b5c7a586587400ee92ec622d45d7b4bfd1b3e3" translate="yes" xml:space="preserve">
          <source>A function parameter is declared without a type specifier in K&amp;amp;R-style functions:</source>
          <target state="translated">K &amp;amp; R 스타일 함수에서 유형 지정자없이 함수 매개 변수가 선언됩니다.</target>
        </trans-unit>
        <trans-unit id="4a55e26416d74770259268d8b952c442c03d140f" translate="yes" xml:space="preserve">
          <source>A function-like macro that appears without arguments.</source>
          <target state="translated">인수없이 나타나는 함수형 매크로입니다.</target>
        </trans-unit>
        <trans-unit id="debf2118f99ae7d5fcef4420f2e62948ac9db34c" translate="yes" xml:space="preserve">
          <source>A further version of the C standard, known as &lt;em&gt;C2X&lt;/em&gt;, is under development; experimental and incomplete support for this is enabled with</source>
          <target state="translated">&lt;em&gt;C2X로&lt;/em&gt; 알려진 C 표준의 추가 버전이 개발 중입니다. 이것에 대한 실험적이고 불완전한 지원은</target>
        </trans-unit>
        <trans-unit id="3a8db3cc1b660b8c40d207078f962c2f15753e61" translate="yes" xml:space="preserve">
          <source>A general register (&lt;code&gt;r0&lt;/code&gt; to &lt;code&gt;r31&lt;/code&gt;).</source>
          <target state="translated">일반 레지스터 ( &lt;code&gt;r0&lt;/code&gt; ~ &lt;code&gt;r31&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="4c9d8cf8321530b1a940502b30ac5acf72522d1e" translate="yes" xml:space="preserve">
          <source>A general-purpose register. This is equivalent to &lt;code&gt;r&lt;/code&gt; unless generating MIPS16 code, in which case the MIPS16 register set is used.</source>
          <target state="translated">범용 레지스터 MIPS16 코드를 생성하지 않는 한 &lt;code&gt;r&lt;/code&gt; 과 같습니다 .이 경우 MIPS16 레지스터 세트가 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="d2030f94473ff72afe09286a5000f598b54444ee" translate="yes" xml:space="preserve">
          <source>A generic CPU with 64-bit extensions.</source>
          <target state="translated">64 비트 확장명을 가진 일반 CPU.</target>
        </trans-unit>
        <trans-unit id="1e6fe121c0bf0b0f224a8bd42e66a0a587219c64" translate="yes" xml:space="preserve">
          <source>A given program is written in one or the other of these two dialects. The program stands a chance to work on most any machine if it is compiled with the proper dialect. It is unlikely to work at all if compiled with the wrong dialect.</source>
          <target state="translated">주어진 프로그램은이 두 방언 중 하나 또는 다른 방언으로 작성됩니다. 이 프로그램은 적절한 방언으로 컴파일되면 대부분의 컴퓨터에서 작동 할 수 있습니다. 잘못된 방언으로 컴파일하면 전혀 작동하지 않을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6c5058629f496fbd3a9b20ab2118be652c13eb69" translate="yes" xml:space="preserve">
          <source>A good explanation of the benefits offered by ensuring ELF symbols have the correct visibility is given by &amp;ldquo;How To Write Shared Libraries&amp;rdquo; by Ulrich Drepper (which can be found at &lt;a href=&quot;https://www.akkadia.org/drepper/&quot;&gt;https://www.akkadia.org/drepper/&lt;/a&gt;)&amp;mdash;however a superior solution made possible by this option to marking things hidden when the default is public is to make the default hidden and mark things public. This is the norm with DLLs on Windows and with</source>
          <target state="translated">ELF 기호가 올바른 가시성을 갖도록함으로써 제공되는 이점에 대한 자세한 설명은 Ulrich Drepper ( &lt;a href=&quot;https://www.akkadia.org/drepper/&quot;&gt;https://www.akkadia.org/drepper/&lt;/a&gt; ) 에서&amp;ldquo;공유 라이브러리를 작성하는 방법&amp;rdquo;을 참조하십시오 . 기본 옵션이 공개 일 때 숨겨진 항목을 표시하는이 옵션으로 가능해진 우수한 솔루션은 기본 숨김을 설정하고 공개하는 것입니다. 이것은 Windows의 DLL과 함께 표준입니다.</target>
        </trans-unit>
        <trans-unit id="4b92b6d35d4ef9edd4bc988a5b041656a4bfb9c4" translate="yes" xml:space="preserve">
          <source>A local label declaration looks like this:</source>
          <target state="translated">로컬 레이블 선언은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="4eae759733edfeb41cf185aaf992eb0590b9b2a1" translate="yes" xml:space="preserve">
          <source>A local variable or class data member declared both &lt;code&gt;static&lt;/code&gt; and &lt;code&gt;__thread&lt;/code&gt; gives the variable or member thread storage duration.</source>
          <target state="translated">&lt;code&gt;static&lt;/code&gt; 및 &lt;code&gt;__thread&lt;/code&gt; 로 선언 된 로컬 변수 또는 클래스 데이터 멤버는 변수 또는 멤버 스레드 저장 기간을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="cbc079ebb13b05a28fc7e6b5c8e9b7e32b012d41" translate="yes" xml:space="preserve">
          <source>A loop expected to iterate at least the selected number of iterations is aligned.</source>
          <target state="translated">선택된 반복 횟수 이상 반복 될 것으로 예상되는 루프가 정렬됩니다.</target>
        </trans-unit>
        <trans-unit id="e6e2fdd4a6e2c1dbe43d588ddf3a77eab778b7d1" translate="yes" xml:space="preserve">
          <source>A member of a union object is accessed using a member of a different type (C90 6.3.2.3).</source>
          <target state="translated">다른 유형의 멤버 (C90 6.3.2.3)를 사용하여 통합 개체의 멤버에 액세스합니다.</target>
        </trans-unit>
        <trans-unit id="d48a8ba2b56e035d8312e0298f36fac9054a9681" translate="yes" xml:space="preserve">
          <source>A memory address based on Y or Z pointer with displacement.</source>
          <target state="translated">변위가있는 Y 또는 Z 포인터 기반 메모리 주소.</target>
        </trans-unit>
        <trans-unit id="3b84dcc8ac9137874012ebfd9eadab8bb949fee4" translate="yes" xml:space="preserve">
          <source>A memory address suitable for a load/store pair instruction in SI, DI, SF and DF modes</source>
          <target state="translated">SI, DI, SF 및 DF 모드에서로드 / 저장 쌍 명령에 적합한 메모리 주소</target>
        </trans-unit>
        <trans-unit id="0bb3634ff6bc0ca41e70f28fef8acf81311e449f" translate="yes" xml:space="preserve">
          <source>A memory address that will work with the &lt;code&gt;lq&lt;/code&gt; and &lt;code&gt;stq&lt;/code&gt; instructions.</source>
          <target state="translated">&lt;code&gt;lq&lt;/code&gt; 및 &lt;code&gt;stq&lt;/code&gt; 명령어 와 함께 작동하는 메모리 주소입니다 .</target>
        </trans-unit>
        <trans-unit id="e82efce1d813a82c9a30ae4a9287debad5d5c479" translate="yes" xml:space="preserve">
          <source>A memory address which uses a single base register with no offset</source>
          <target state="translated">오프셋없이 단일 기준 레지스터를 사용하는 메모리 주소</target>
        </trans-unit>
        <trans-unit id="d889b3934276ee507afa50f38217acb1e8a60ca1" translate="yes" xml:space="preserve">
          <source>A memory operand for floating-point loads and stores</source>
          <target state="translated">부동 소수점로드 및 저장을위한 메모리 피연산자</target>
        </trans-unit>
        <trans-unit id="76dff8679e9a8f7ce2eb5bb8fad71047c6747dbc" translate="yes" xml:space="preserve">
          <source>A memory operand is allowed, but only if the address is &lt;em&gt;offsettable&lt;/em&gt;. This means that adding a small integer (actually, the width in bytes of the operand, as determined by its machine mode) may be added to the address and the result is also a valid memory address.</source>
          <target state="translated">주소가 &lt;em&gt;오프셋 가능한&lt;/em&gt; 경우에만 메모리 피연산자가 허용됩니다 . 이것은 작은 정수 (실제로 기계 모드에 의해 결정된 피연산자의 바이트 단위 폭)를 추가하는 것이 주소에 추가 될 수 있고 결과도 유효한 메모리 주소임을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="388671fe2c36d60a932779a67c16d85d78ac2d17" translate="yes" xml:space="preserve">
          <source>A memory operand is allowed, with any kind of address that the machine supports in general. Note that the letter used for the general memory constraint can be re-defined by a back end using the &lt;code&gt;TARGET_MEM_CONSTRAINT&lt;/code&gt; macro.</source>
          <target state="translated">머신이 일반적으로 지원하는 모든 종류의 주소와 함께 메모리 피연산자가 허용됩니다. 일반 메모리 제한 조건에 사용 된 문자는 &lt;code&gt;TARGET_MEM_CONSTRAINT&lt;/code&gt; 매크로를 사용하여 백엔드에 의해 재정의 될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="e12c184fcd9f0721bc91e2359dd6f356789155c7" translate="yes" xml:space="preserve">
          <source>A memory operand suitable for Nios II R2 load/store exclusive instructions.</source>
          <target state="translated">Nios II R2로드 / 저장 전용 명령에 적합한 메모리 피연산자입니다.</target>
        </trans-unit>
        <trans-unit id="7146411d4e212e3eace6ea02064bc67368c7d22e" translate="yes" xml:space="preserve">
          <source>A memory operand suitable for load/store IO and cache instructions.</source>
          <target state="translated">로드 / 저장 IO 및 캐시 명령에 적합한 메모리 피연산자입니다.</target>
        </trans-unit>
        <trans-unit id="40ed4ba7f90bf88673d73789aca447219b51285c" translate="yes" xml:space="preserve">
          <source>A memory operand suitable for the ISA 3.0 vector d-form instructions.</source>
          <target state="translated">ISA 3.0 벡터 d-form 명령어에 적합한 메모리 피연산자.</target>
        </trans-unit>
        <trans-unit id="84bfbe27f0967bbd8165fcff340f78cb41e95ca2" translate="yes" xml:space="preserve">
          <source>A memory operand that can be used as the destination operand of an integer store instruction</source>
          <target state="translated">정수 저장 명령어의 대상 피연산자로 사용할 수있는 메모리 피연산자</target>
        </trans-unit>
        <trans-unit id="96695f63007ab0923706713901f4b85b969e2a0a" translate="yes" xml:space="preserve">
          <source>A memory operand that is not offsettable. In other words, anything that would fit the &amp;lsquo;</source>
          <target state="translated">오프셋 할 수없는 메모리 피연산자 즉, '</target>
        </trans-unit>
        <trans-unit id="1a801a13c9b53ba2ca78c13cc2cdf8d621afb8bd" translate="yes" xml:space="preserve">
          <source>A memory operand whose address is formed by a base register and offset that is suitable for use in instructions with the same addressing mode as &lt;code&gt;ll&lt;/code&gt; and &lt;code&gt;sc&lt;/code&gt;.</source>
          <target state="translated">주소가 &lt;code&gt;ll&lt;/code&gt; 및 &lt;code&gt;sc&lt;/code&gt; 와 동일한 주소 지정 모드를 가진 명령어에 사용하기에 적합한베이스 레지스터 및 오프셋에 의해 형성되는 메모리 피연산자입니다 .</target>
        </trans-unit>
        <trans-unit id="0cf579681538dd24f4c522430fbc1d9db816f237" translate="yes" xml:space="preserve">
          <source>A memory operand with autodecrement addressing (either predecrement or postdecrement) is allowed. In inline &lt;code&gt;asm&lt;/code&gt; this constraint is only allowed if the operand is used exactly once in an instruction that can handle the side effects. Not using an operand with &amp;lsquo;</source>
          <target state="translated">자동 감소 주소 지정 (사전 감소 또는 사후 감소)이있는 메모리 피연산자가 허용됩니다. 인라인 &lt;code&gt;asm&lt;/code&gt; 에서이 제약 조건은 부작용을 처리 할 수있는 명령어에서 피연산자가 정확히 한 번만 사용되는 경우에만 허용됩니다. '로 피연산자를 사용하지 않음</target>
        </trans-unit>
        <trans-unit id="cdc334ade8276d0cf5a4c832b12ab9caa48613bc" translate="yes" xml:space="preserve">
          <source>A memory operand with autoincrement addressing (either preincrement or postincrement) is allowed. In inline &lt;code&gt;asm&lt;/code&gt; the same restrictions as for &amp;lsquo;</source>
          <target state="translated">자동 증분 주소 지정 (사전 증분 또는 사후 증분)이있는 메모리 피연산자가 허용됩니다. 인라인 &lt;code&gt;asm&lt;/code&gt; 에서 '</target>
        </trans-unit>
        <trans-unit id="a4c1412da74dea8e31160c68dd4c58d9ddd39d1e" translate="yes" xml:space="preserve">
          <source>A memory reference suitable for VFP load/store insns (reg+constant offset)</source>
          <target state="translated">VFP로드 / 저장 인에 적합한 메모리 참조 (reg + constant offset)</target>
        </trans-unit>
        <trans-unit id="3a8bf2f192d44bf25c5dafeee0b8eaa22bcc9154" translate="yes" xml:space="preserve">
          <source>A memory reference suitable for iWMMXt load/store instructions.</source>
          <target state="translated">iWMMXt로드 / 저장 명령어에 적합한 메모리 참조.</target>
        </trans-unit>
        <trans-unit id="4b919c81ffb39ef6f8f9eb3d7ccc854afd2048d5" translate="yes" xml:space="preserve">
          <source>A memory reference suitable for the ARMv4 ldrsb instruction.</source>
          <target state="translated">ARMv4 ldrsb 명령어에 적합한 메모리 참조입니다.</target>
        </trans-unit>
        <trans-unit id="0281e56b013121500cc01f595e9459e28872a62b" translate="yes" xml:space="preserve">
          <source>A memory reference that is a stack pop.</source>
          <target state="translated">스택 팝인 메모리 참조</target>
        </trans-unit>
        <trans-unit id="19169aa6dfaeac0eed19cdca087e18730184a143" translate="yes" xml:space="preserve">
          <source>A memory reference that is a stack push.</source>
          <target state="translated">스택 푸시 인 메모리 참조</target>
        </trans-unit>
        <trans-unit id="9f8594bf5c6cb542733511c9002f352d41b3d7e8" translate="yes" xml:space="preserve">
          <source>A memory reference that is encoded within the opcode, but not auto-increment or auto-decrement.</source>
          <target state="translated">opcode 내에서 인코딩되지만 자동 증가 또는 자동 감소가 아닌 메모리 참조입니다.</target>
        </trans-unit>
        <trans-unit id="261f1d2ca930e0206ac633c0e47452ba885dfea6" translate="yes" xml:space="preserve">
          <source>A memory reference that is encoded within the opcode.</source>
          <target state="translated">opcode 내에 인코딩 된 메모리 참조입니다.</target>
        </trans-unit>
        <trans-unit id="9cafdb6d926c7b33945a0f45773363bd841f1c97" translate="yes" xml:space="preserve">
          <source>A memory reference that refers to a constant address of known value.</source>
          <target state="translated">알려진 값의 상수 주소를 나타내는 메모리 참조입니다.</target>
        </trans-unit>
        <trans-unit id="4d28cbf28c6da1c555a93c693a0088131b65d6af" translate="yes" xml:space="preserve">
          <source>A memory reference using &lt;code&gt;AX&lt;/code&gt;, &lt;code&gt;BC&lt;/code&gt;, &lt;code&gt;DE&lt;/code&gt;, or &lt;code&gt;HL&lt;/code&gt; for the address, for calls.</source>
          <target state="translated">호출 주소에 &lt;code&gt;AX&lt;/code&gt; , &lt;code&gt;BC&lt;/code&gt; , &lt;code&gt;DE&lt;/code&gt; 또는 &lt;code&gt;HL&lt;/code&gt; 을 사용하는 메모리 참조</target>
        </trans-unit>
        <trans-unit id="ccd702a76b4ec6cf431d1b3b13c087fda1a005cc" translate="yes" xml:space="preserve">
          <source>A memory reference using &lt;code&gt;BC&lt;/code&gt; as a base register, with an optional offset.</source>
          <target state="translated">오프셋을 선택적으로 사용하여 &lt;code&gt;BC&lt;/code&gt; 를 기본 레지스터로 사용하는 메모리 참조</target>
        </trans-unit>
        <trans-unit id="1b8a2311d7274d21eb0ecc9fab5c05d859421673" translate="yes" xml:space="preserve">
          <source>A memory reference using &lt;code&gt;DE&lt;/code&gt; as a base register, with an optional offset.</source>
          <target state="translated">선택적 오프셋을 사용하여 &lt;code&gt;DE&lt;/code&gt; 를 기본 레지스터로 사용하는 메모리 참조</target>
        </trans-unit>
        <trans-unit id="70d9c96a11dbdafd4cd2e7e236553a508e4c91e1" translate="yes" xml:space="preserve">
          <source>A memory reference using &lt;code&gt;DE&lt;/code&gt; as a base register, without any offset.</source>
          <target state="translated">오프셋을 사용하지 않고 &lt;code&gt;DE&lt;/code&gt; 를 기준 레지스터로 사용하는 메모리 참조</target>
        </trans-unit>
        <trans-unit id="e072e18db9eb6bf209deec68cb4227fc0ad73751" translate="yes" xml:space="preserve">
          <source>A memory reference using &lt;code&gt;HL&lt;/code&gt; as a base register, with &lt;code&gt;B&lt;/code&gt; or &lt;code&gt;C&lt;/code&gt; as the index register.</source>
          <target state="translated">&lt;code&gt;HL&lt;/code&gt; 을 기본 레지스터로 사용하고 &lt;code&gt;B&lt;/code&gt; 또는 &lt;code&gt;C&lt;/code&gt; 를 인덱스 레지스터로 사용하는 메모리 참조</target>
        </trans-unit>
        <trans-unit id="df6dc5b742ae15cb0c4a64ea30738791b4c31ce2" translate="yes" xml:space="preserve">
          <source>A memory reference using &lt;code&gt;HL&lt;/code&gt; as a base register, with an optional one-byte offset.</source>
          <target state="translated">선택적 1 바이트 오프셋이있는 &lt;code&gt;HL&lt;/code&gt; 을 기본 레지스터로 사용하는 메모리 참조</target>
        </trans-unit>
        <trans-unit id="ddc26c1495756f4b844ddb7cea2453b5108af343" translate="yes" xml:space="preserve">
          <source>A memory reference using &lt;code&gt;HL&lt;/code&gt; as a base register, without any offset.</source>
          <target state="translated">오프셋없이 &lt;code&gt;HL&lt;/code&gt; 을 기준 레지스터로 사용하는 메모리 참조</target>
        </trans-unit>
        <trans-unit id="dd84b756a68010a9ef8c97c933ab58752c08401e" translate="yes" xml:space="preserve">
          <source>A memory reference using &lt;code&gt;SP&lt;/code&gt; as a base register, with an optional one-byte offset.</source>
          <target state="translated">선택적 1 바이트 오프셋을 사용하여 &lt;code&gt;SP&lt;/code&gt; 를 기본 레지스터로 사용하는 메모리 참조</target>
        </trans-unit>
        <trans-unit id="8838226960a63f5221b0e15609b574e60c61f473" translate="yes" xml:space="preserve">
          <source>A memory reference using any 16-bit register pair for the address, for calls.</source>
          <target state="translated">호출 주소에 16 비트 레지스터 쌍을 사용하는 메모리 참조</target>
        </trans-unit>
        <trans-unit id="4b51e9b71c2545b5652560bf7f6a9647e0035d8a" translate="yes" xml:space="preserve">
          <source>A memory reference where the exact address is in a single register (&amp;lsquo;&amp;lsquo;</source>
          <target state="translated">정확한 주소가 단일 레지스터에있는 메모리 참조 ( ''</target>
        </trans-unit>
        <trans-unit id="0139bd65b0b5d2fe4673870edd7d6641449c58e8" translate="yes" xml:space="preserve">
          <source>A memory reference which requires an additional word (address or offset) after the opcode.</source>
          <target state="translated">opcode 뒤에 추가 단어 (주소 또는 오프셋)가 필요한 메모리 참조입니다.</target>
        </trans-unit>
        <trans-unit id="9a543e86cece309b6602d80f4120038bbc4ab307" translate="yes" xml:space="preserve">
          <source>A memory reference with an absolute address.</source>
          <target state="translated">절대 주소가있는 메모리 참조</target>
        </trans-unit>
        <trans-unit id="287d82bed5f1580615ce42d8bee2ee48ebecfb48" translate="yes" xml:space="preserve">
          <source>A memory transaction commits all changes to memory in an atomic way, as visible to other threads. If the transaction fails it is rolled back and all side effects discarded.</source>
          <target state="translated">메모리 트랜잭션은 다른 스레드에서 볼 수 있듯이 원자 적 방식으로 메모리에 대한 모든 변경 사항을 커밋합니다. 트랜잭션이 실패하면 롤백되고 모든 부작용이 삭제됩니다.</target>
        </trans-unit>
        <trans-unit id="d7f155128a2791cfe10b2a9e15921858bd575c02" translate="yes" xml:space="preserve">
          <source>A nested function always has no linkage. Declaring one with &lt;code&gt;extern&lt;/code&gt; or &lt;code&gt;static&lt;/code&gt; is erroneous. If you need to declare the nested function before its definition, use &lt;code&gt;auto&lt;/code&gt; (which is otherwise meaningless for function declarations).</source>
          <target state="translated">중첩 함수에는 항상 연결이 없습니다. &lt;code&gt;extern&lt;/code&gt; 또는 &lt;code&gt;static&lt;/code&gt; 으로 선언하는 것은 잘못되었습니다. 중첩 함수를 정의하기 전에 선언해야하는 경우 &lt;code&gt;auto&lt;/code&gt; 를 사용하십시오 (그렇지 않으면 함수 선언에는 의미가 없습니다).</target>
        </trans-unit>
        <trans-unit id="d26414fbc961f98329967917d426b4cbc2efe330" translate="yes" xml:space="preserve">
          <source>A nested function can jump to a label inherited from a containing function, provided the label is explicitly declared in the containing function (see &lt;a href=&quot;local-labels#Local-Labels&quot;&gt;Local Labels&lt;/a&gt;). Such a jump returns instantly to the containing function, exiting the nested function that did the &lt;code&gt;goto&lt;/code&gt; and any intermediate functions as well. Here is an example:</source>
          <target state="translated">포함 함수에서 레이블이 명시 적으로 선언 된 경우 중첩 함수는 포함 함수에서 상속 된 레이블로 이동할 수 있습니다 ( &lt;a href=&quot;local-labels#Local-Labels&quot;&gt;로컬 레이블&lt;/a&gt; 참조 ). 이러한 점프는 포함 함수로 즉시 되돌아 가서 &lt;code&gt;goto&lt;/code&gt; 와 중간 함수를 수행 한 중첩 함수를 종료합니다 . 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="0712d7fc676044f053a72419ea0e38ad815c6a04" translate="yes" xml:space="preserve">
          <source>A new edition of the ISO C standard was published in 1999 as ISO/IEC 9899:1999, and is commonly known as &lt;em&gt;C99&lt;/em&gt;. (While in development, drafts of this standard version were referred to as &lt;em&gt;C9X&lt;/em&gt;.) GCC has substantially complete support for this standard version; see &lt;a href=&quot;http://gcc.gnu.org/c99status.html&quot;&gt;http://gcc.gnu.org/c99status.html&lt;/a&gt; for details. To select this standard, use</source>
          <target state="translated">ISO C 표준의 새로운 버전은 1999 년에 ISO / IEC 9899 : 1999로 출판되었으며 일반적으로 &lt;em&gt;C99&lt;/em&gt; 로 알려져 있습니다 . 개발 &lt;em&gt;중에이&lt;/em&gt; 표준 버전의 초안을 &lt;em&gt;C9X&lt;/em&gt; 라고했습니다 . GCC는이 표준 버전을 실질적으로 완벽하게 지원합니다. 자세한 내용은 &lt;a href=&quot;http://gcc.gnu.org/c99status.html&quot;&gt;http://gcc.gnu.org/c99status.html&lt;/a&gt; 을 참조하십시오. 이 표준을 선택하려면</target>
        </trans-unit>
        <trans-unit id="c1d3e8da2b16b837e350778965a42d38a1727ecd" translate="yes" xml:space="preserve">
          <source>A non-&lt;code&gt;static&lt;/code&gt; function declaration follows a &lt;code&gt;static&lt;/code&gt; one. This construct is not accepted by some traditional C compilers.</source>
          <target state="translated">비 &lt;code&gt;static&lt;/code&gt; 함수 선언은 &lt;code&gt;static&lt;/code&gt; 선언을 따릅니다 . 이 구성은 일부 전통적인 C 컴파일러에서는 허용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="a1561d49e6959fd563ec43b519d5c367906c49ac" translate="yes" xml:space="preserve">
          <source>A number of bytes.</source>
          <target state="translated">많은 바이트.</target>
        </trans-unit>
        <trans-unit id="c6e4f37a3cc64090cf8998b7f43d11b497869792" translate="yes" xml:space="preserve">
          <source>A operand which is read by the instruction can be tied to an earlyclobber operand if its only use as an input occurs before the early result is written. Adding alternatives of this form often allows GCC to produce better code when only some of the read operands can be affected by the earlyclobber. See, for example, the &amp;lsquo;</source>
          <target state="translated">명령으로 읽은 피연산자는 초기 결과가 기록되기 전에 입력으로 만 사용되는 경우 초기 클로버 피연산자에 연결될 수 있습니다. 이 형식의 대안을 추가하면 일부 읽기 피연산자 만 초기 클로버에 의해 영향을받을 수있는 경우 GCC에서 더 나은 코드를 생성 할 수 있습니다. 예를 들어 '</target>
        </trans-unit>
        <trans-unit id="33c89233be593b8efaeda5d8e73bec02c063a6ed" translate="yes" xml:space="preserve">
          <source>A parameter to control whether to use function internal id in profile database lookup. If the value is 0, the compiler uses an id that is based on function assembler name and filename, which makes old profile data more tolerant to source changes such as function reordering etc.</source>
          <target state="translated">프로파일 데이터베이스 검색에서 함수 내부 ID를 사용할지 여부를 제어하는 ​​매개 변수입니다. 값이 0 인 경우, 컴파일러는 함수 어셈블러 이름 및 파일 이름을 기반으로하는 id를 사용하므로 이전 프로파일 데이터는 함수 순서 변경 등과 같은 소스 변경에 더 견딜 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ac02409b28e4665594149c1f072d2a778a5e74f5" translate="yes" xml:space="preserve">
          <source>A pointer is compared against integer zero with &lt;code&gt;&amp;lt;&lt;/code&gt;, &lt;code&gt;&amp;lt;=&lt;/code&gt;, &lt;code&gt;&amp;gt;&lt;/code&gt;, or &lt;code&gt;&amp;gt;=&lt;/code&gt;.</source>
          <target state="translated">포인터는 정수 0과 &lt;code&gt;&amp;lt;&lt;/code&gt; , &lt;code&gt;&amp;lt;=&lt;/code&gt; , &lt;code&gt;&amp;gt;&lt;/code&gt; 또는 &lt;code&gt;&amp;gt;=&lt;/code&gt; 과 비교 됩니다.</target>
        </trans-unit>
        <trans-unit id="5e654ce5ba59b63225116cee29f29b754f51ae4a" translate="yes" xml:space="preserve">
          <source>A possibly empty comma-separated list of expressions. For example, &lt;code&gt;format_arg&lt;/code&gt; attributes use this form with the list being a single integer constant expression, and &lt;code&gt;alias&lt;/code&gt; attributes use this form with the list being a single string constant.</source>
          <target state="translated">비어있는 쉼표로 구분 된 표현식 목록입니다. 예를 들어, &lt;code&gt;format_arg&lt;/code&gt; 속성은 목록이 단일 정수 상수 표현식 인 이 양식을 사용 하고 &lt;code&gt;alias&lt;/code&gt; 속성은 목록이 단일 문자열 상수 인이 양식을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="6f94ad7a128da59e35cfef4198c05f92370ba7a7" translate="yes" xml:space="preserve">
          <source>A precompiled header cannot be used once the first C token is seen. You can have preprocessor directives before a precompiled header; you cannot include a precompiled header from inside another header.</source>
          <target state="translated">첫 번째 C 토큰을 본 후에는 미리 컴파일 된 헤더를 사용할 수 없습니다. 프리 컴파일 된 헤더 앞에 프리 프로세서 지시문을 가질 수 있습니다. 다른 헤더 안에 미리 컴파일 된 헤더를 포함 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="967ed292b7da3d9c381bae6f412c1eb711012203" translate="yes" xml:space="preserve">
          <source>A precompiled header file can be used only when these conditions apply:</source>
          <target state="translated">사전 컴파일 된 헤더 파일은 다음 조건이 적용되는 경우에만 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="05035041744377e6b9210288a1d05f98595669e6" translate="yes" xml:space="preserve">
          <source>A precompiled header file is searched for when &lt;code&gt;#include&lt;/code&gt; is seen in the compilation. As it searches for the included file (see &lt;a href=&quot;http://gcc.gnu.org/onlinedocs/cpp/Search-Path.html#Search-Path&quot;&gt;Search Path&lt;/a&gt; in The C Preprocessor) the compiler looks for a precompiled header in each directory just before it looks for the include file in that directory. The name searched for is the name specified in the &lt;code&gt;#include&lt;/code&gt; with &amp;lsquo;</source>
          <target state="translated">컴파일에 &lt;code&gt;#include&lt;/code&gt; 가 표시 되면 미리 컴파일 된 헤더 파일이 검색됩니다 . 포함 된 파일을 검색 할 때 ( C 프리 프로세서의 &lt;a href=&quot;http://gcc.gnu.org/onlinedocs/cpp/Search-Path.html#Search-Path&quot;&gt;검색 경로&lt;/a&gt; 참조 ) 컴파일러는 해당 디렉토리에서 포함 파일을 찾기 직전에 각 디렉토리에서 사전 컴파일 된 헤더를 찾습니다. 검색된 이름은 &lt;code&gt;#include&lt;/code&gt; 에 '</target>
        </trans-unit>
        <trans-unit id="65201eadf5d675527c7f1ac85fd378b5ccbc08ee" translate="yes" xml:space="preserve">
          <source>A prefix for source file names to remove when generating the output coverage files. This option is useful when building in a separate directory, and the pathname to the source directory is not wanted when determining the output file names. Note that this prefix detection is applied before determining whether the source file is absolute.</source>
          <target state="translated">출력 적용 범위 파일을 생성 할 때 제거 할 소스 파일 이름의 접 두부입니다. 이 옵션은 별도의 디렉토리에 빌드 할 때 유용하며 출력 파일 이름을 결정할 때 소스 디렉토리의 경로 이름을 원하지 않습니다. 이 접두사 탐지는 소스 파일이 절대인지 여부를 결정하기 전에 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="2f9dfd11eaa793c8913662662201289a00fcaafa" translate="yes" xml:space="preserve">
          <source>A program which performs file I/O and is destined to run on an MCM target should be linked with this option. It causes the libraries libc.a and libdebug.a to be linked. The program should be run on the target under the control of the GDB remote debugging stub.</source>
          <target state="translated">파일 I / O를 수행하고 MCM 대상에서 실행될 예정인 프로그램은이 옵션과 연결되어야합니다. libc.a 및 libdebug.a 라이브러리가 링크됩니다. 프로그램은 GDB 원격 디버깅 스텁의 제어하에 대상에서 실행되어야합니다.</target>
        </trans-unit>
        <trans-unit id="06091d7b0985c9e8feba549f19d66a548c218908" translate="yes" xml:space="preserve">
          <source>A program which performs file I/O and is destined to run on the simulator should be linked with option. This causes libraries libc.a and libsim.a to be linked.</source>
          <target state="translated">파일 I / O를 수행하고 시뮬레이터에서 실행될 예정인 프로그램은 옵션과 연결되어야합니다. 이로 인해 라이브러리 libc.a 및 libsim.a가 링크됩니다.</target>
        </trans-unit>
        <trans-unit id="03bc1b8f8194ecc4bd7cc22529202219ccc55928" translate="yes" xml:space="preserve">
          <source>A redeclaration of an entity must not add new ABI tags, since doing so would change the mangled name.</source>
          <target state="translated">개체를 다시 선언하면 맹 글링 된 이름이 변경되므로 새 ABI 태그를 추가해서는 안됩니다.</target>
        </trans-unit>
        <trans-unit id="72babc8ed783b6f80b238e203c04bb32ab9b7ee7" translate="yes" xml:space="preserve">
          <source>A register indirect memory operand</source>
          <target state="translated">레지스터 간접 메모리 피연산자</target>
        </trans-unit>
        <trans-unit id="822740a74e2ad86073347ee3e0a96d4ea21793b7" translate="yes" xml:space="preserve">
          <source>A register operand is allowed provided that it is in a general register.</source>
          <target state="translated">레지스터 피연산자가 일반 레지스터에 있으면 레지스터 피연산자가 허용됩니다.</target>
        </trans-unit>
        <trans-unit id="c6b4e516f4445d7fd0eb4545cb8bd87379ffb2be" translate="yes" xml:space="preserve">
          <source>A register suitable for use in an indirect jump. This will always be &lt;code&gt;$25&lt;/code&gt; for</source>
          <target state="translated">간접 점프에 사용하기에 적합한 레지스터입니다. 이것은 항상 &lt;code&gt;$25&lt;/code&gt; 입니다</target>
        </trans-unit>
        <trans-unit id="bf74def1fd328fca34b37ccd32d0585450fe7d70" translate="yes" xml:space="preserve">
          <source>A register that can hold a 64 bit value.</source>
          <target state="translated">64 비트 값을 보유 할 수있는 레지스터입니다.</target>
        </trans-unit>
        <trans-unit id="40b15fdd982b6acc2dbd0ac15c94e31ec3b3ecb8" translate="yes" xml:space="preserve">
          <source>A revised ISO C++ standard was published in 2011 as ISO/IEC 14882:2011, and is referred to as C++11; before its publication it was commonly referred to as C++0x. C++11 contains several changes to the C++ language, all of which have been implemented in GCC. For details see &lt;a href=&quot;https://gcc.gnu.org/projects/cxx-status.html#cxx11&quot;&gt;https://gcc.gnu.org/projects/cxx-status.html#cxx11&lt;/a&gt;. To select this standard in GCC, use the option</source>
          <target state="translated">개정 된 ISO C ++ 표준은 2011 년 ISO / IEC 14882 : 2011으로 발행되었으며 C ++ 11이라고합니다. 게시 전에는 일반적으로 C ++ 0x라고했습니다. C ++ 11에는 C ++ 언어에 대한 몇 가지 변경 사항이 포함되어 있으며 모두 GCC로 구현되었습니다. 자세한 내용은 &lt;a href=&quot;https://gcc.gnu.org/projects/cxx-status.html#cxx11&quot;&gt;https://gcc.gnu.org/projects/cxx-status.html#cxx11을&lt;/a&gt; 참조 하십시오 . GCC에서이 표준을 선택하려면 옵션을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="fa1cdaecb062b94545ea6452cf8e926ff17ef618" translate="yes" xml:space="preserve">
          <source>A scalar volatile object is read when it is accessed in a void context:</source>
          <target state="translated">스칼라 휘발성 객체는 void 컨텍스트에서 액세스 할 때 읽습니다.</target>
        </trans-unit>
        <trans-unit id="1be35e4d0dcffaec4e53c70345395a20bb71df65" translate="yes" xml:space="preserve">
          <source>A scaled or unscaled indexed memory operand</source>
          <target state="translated">스케일링되거나 스케일링되지 않은 인덱스 메모리 피연산자</target>
        </trans-unit>
        <trans-unit id="7561d823e8220cc1324112197c014a5470da6511" translate="yes" xml:space="preserve">
          <source>A signed 10-bit constant for most arithmetic instructions.</source>
          <target state="translated">대부분의 산술 명령어에 대한 부호있는 10 비트 상수.</target>
        </trans-unit>
        <trans-unit id="d4172f55ed8446ca35d32bcd89906fb5748ddaf8" translate="yes" xml:space="preserve">
          <source>A signed 11-bit constant added to -1. Can only match when the</source>
          <target state="translated">부호있는 11 비트 상수가 -1에 추가되었습니다. 때만 일치</target>
        </trans-unit>
        <trans-unit id="4dbec6f25e372e0d0975d4d90b4ec971a46651e9" translate="yes" xml:space="preserve">
          <source>A signed 11-bit constant.</source>
          <target state="translated">부호있는 11 비트 상수</target>
        </trans-unit>
        <trans-unit id="c5fd23196153b5c02da9d3addd039cf5332baffd" translate="yes" xml:space="preserve">
          <source>A signed 12-bit integer constant.</source>
          <target state="translated">부호있는 12 비트 정수 상수</target>
        </trans-unit>
        <trans-unit id="5d45116f20daaebe383530883ac080de0bcc23a5" translate="yes" xml:space="preserve">
          <source>A signed 15-bit constant.</source>
          <target state="translated">부호있는 15 비트 상수</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
