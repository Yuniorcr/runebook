<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="python">
    <body>
      <group id="python">
        <trans-unit id="d636c6e62c00ceb20cb6fbfd984b54d0a9ac85b9" translate="yes" xml:space="preserve">
          <source>$ &amp;lt;venv&amp;gt;/bin/Activate.ps1</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bfd189faf872da126db732d4366369bab08215e4" translate="yes" xml:space="preserve">
          <source>$ . &amp;lt;venv&amp;gt;/bin/activate.fish</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4819d7b782c8d220c617a4480b79772012f5d70" translate="yes" xml:space="preserve">
          <source>$ source &amp;lt;venv&amp;gt;/bin/activate</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="171dc0bc1cee407b294ea507b85250e367484360" translate="yes" xml:space="preserve">
          <source>$ source &amp;lt;venv&amp;gt;/bin/activate.csh</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6acf37181160bedc8e878160c35c9965986a3900" translate="yes" xml:space="preserve">
          <source>%-style formatting: &lt;code&gt;%s&lt;/code&gt; and &lt;code&gt;%r&lt;/code&gt; call the &lt;a href=&quot;#enum.Enum&quot;&gt;&lt;code&gt;Enum&lt;/code&gt;&lt;/a&gt; class&amp;rsquo;s &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__str__&quot;&gt;&lt;code&gt;__str__()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__repr__&quot;&gt;&lt;code&gt;__repr__()&lt;/code&gt;&lt;/a&gt; respectively; other codes (such as &lt;code&gt;%i&lt;/code&gt; or &lt;code&gt;%h&lt;/code&gt; for IntEnum) treat the enum member as its mixed-in type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f395a23c8f434f9b2cf155b029536997efaf5090" translate="yes" xml:space="preserve">
          <source>%A</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a555b0fc6e6004d7217b63ef8d77383dc98886c" translate="yes" xml:space="preserve">
          <source>%E</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eceb76dbfd2319c4c92cab6bfcecf54ce11c7abe" translate="yes" xml:space="preserve">
          <source>%K</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae7ee2b39ae694d53324ea793390110e02da2f21" translate="yes" xml:space="preserve">
          <source>%N</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b52cb34cae946be5f6f5c64c3086b5781eae527d" translate="yes" xml:space="preserve">
          <source>%T</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d16b089deff7110322274d28049bef5aced59a81" translate="yes" xml:space="preserve">
          <source>%W</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7178c12021c2bb5feed1874dafb4f65d4ec4415f" translate="yes" xml:space="preserve">
          <source>%X</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e00fa75179e8b48a63920281fd9a86060dd01f0" translate="yes" xml:space="preserve">
          <source>%Y</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e3b1ac5efeaaff376b31d3a4764f2d240c9d92d" translate="yes" xml:space="preserve">
          <source>%f</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dfb7a6afd87f36536c1b347845bc323855afe865" translate="yes" xml:space="preserve">
          <source>%h</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f52b3bfe964c0a378054411e8c233760bcad4a7" translate="yes" xml:space="preserve">
          <source>%k</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="347cd9c53ff77d41a7b22aa56c7b4efaf54658e3" translate="yes" xml:space="preserve">
          <source>%s</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28f18631b86ea95e69ca85cc2051b3920dbf0cb9" translate="yes" xml:space="preserve">
          <source>%t</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c1338a41162fa2ffbd2ea0a579ad87a6c084a0e" translate="yes" xml:space="preserve">
          <source>%w</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7d71ad6a293c739fdb380f7e3761bf9ccf1933b" translate="yes" xml:space="preserve">
          <source>%x</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0e4c34635ae35eb852917a50f2eb60917712fc0" translate="yes" xml:space="preserve">
          <source>%y</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9bfc45fa456f364f22502b20f8811336cf44c34" translate="yes" xml:space="preserve">
          <source>&amp;copy; 2001&amp;ndash;2020 Python Software Foundation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14fe8bf6940a331256b03c00acdf5e804121ad54" translate="yes" xml:space="preserve">
          <source>&amp;hellip;while their &lt;code&gt;repr&lt;/code&gt; has more information:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6fd903bd55ca652e253d195342779e823d8a8c38" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;&lt;code&gt;..&lt;/code&gt;&amp;rdquo; components are also eliminated (this is the only method to do so):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="026a40003114e1686c08e42b315d96404d563f72" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;Byteswap&amp;rdquo; all items of the array. This is only supported for values which are 1, 2, 4, or 8 bytes in size; for other types of values, &lt;a href=&quot;exceptions#RuntimeError&quot;&gt;&lt;code&gt;RuntimeError&lt;/code&gt;&lt;/a&gt; is raised. It is useful when reading data from a file written on a machine with a different byte order.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee49c81f527e401e2c75d1e2bbc1f86464e7815e" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;Byteswap&amp;rdquo; all samples in a fragment and returns the modified fragment. Converts big-endian samples to little-endian and vice versa.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="215a9c5e9170b3b9d86e294d2e092c569838ae82" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;EA IFF 85&amp;rdquo; Standard for Interchange Format Files, Jerry Morrison, Electronic Arts, January 1985.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f43c259a4d237937a6b009dcfa35ecf82c644a3a" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;Format specifications&amp;rdquo; are used within replacement fields contained within a format string to define how individual values are presented (see &lt;a href=&quot;#formatstrings&quot;&gt;Format String Syntax&lt;/a&gt; and &lt;a href=&quot;https://docs.python.org/3.8/reference/lexical_analysis.html#f-strings&quot;&gt;Formatted string literals&lt;/a&gt;). They can also be passed directly to the built-in &lt;a href=&quot;functions#format&quot;&gt;&lt;code&gt;format()&lt;/code&gt;&lt;/a&gt; function. Each formattable type may define how the format specification is to be interpreted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c41e9aaa2af0bc86771f8c1373bc05fa74b079bd" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;Hidden&amp;rdquo; attributes can be accessed by typing the beginning of hidden name after a &amp;lsquo;.&amp;rsquo;, e.g. &amp;lsquo;_&amp;rsquo;. This allows access to modules with &lt;code&gt;__all__&lt;/code&gt; set, or to class-private attributes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75c0ef01b80e1d6d38f24e4aea62f5eda62bbd13" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;Interactive&amp;rdquo; text files (files for which &lt;a href=&quot;io#io.IOBase.isatty&quot;&gt;&lt;code&gt;isatty()&lt;/code&gt;&lt;/a&gt; returns &lt;code&gt;True&lt;/code&gt;) use line buffering. Other text files use the policy described above for binary files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65c0d6bdb6104214e7871f4f251f450f34122d08" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;Konqueror&amp;rdquo; is the file manager for the KDE desktop environment for Unix, and only makes sense to use if KDE is running. Some way of reliably detecting KDE would be nice; the &lt;code id=&quot;index-2&quot;&gt;KDEDIR&lt;/code&gt; variable is not sufficient. Note also that the name &amp;ldquo;kfm&amp;rdquo; is used even when using the &lt;strong&gt;konqueror&lt;/strong&gt; command with KDE 2 &amp;mdash; the implementation selects the best strategy for running Konqueror.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b905e4be2189148fcd1a980479c0651673aea5e8" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;On&amp;rdquo;, &amp;ldquo;true&amp;rdquo;, or &amp;ldquo;current&amp;rdquo; for things like Checkbuttons and radiobuttons</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="913461c16d1c272bf128b2cbff58f2c7cf3f3ad7" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;Preferred&amp;rdquo; blocksize for efficient file system I/O. Writing to a file in smaller chunks may cause an inefficient read-modify-rewrite.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6368e6b01320ed45f1a7e9d708c65e6ae24541f2" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;Statistics for the Behavioral Sciences&amp;rdquo;, Frederick J Gravetter and Larry B Wallnau (8th Edition).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="647b9a16cdd6f24a0ffb77f86a3a4deb2da5f411" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;[Non-text (%(type)s) part of message omitted, filename %(filename)s]&amp;rdquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d461fb4c851acd7d6f985a62eb4809506963484" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;answered&amp;rdquo; label</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cdd89f302be8e6d14262bb237f22997390c1fde2" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;auto&amp;rdquo;: adapts the appearance of the turtle corresponding to the value of pensize.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2130c0b07d2178fd10b8d50d59f856250e329cb" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;collected&amp;rdquo;: When &lt;em&gt;phase&lt;/em&gt; is &amp;ldquo;stop&amp;rdquo;, the number of objects successfully collected.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39edecd1bf93559161e4f418ea423f8b8dce9bf5" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;compound&amp;rdquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6126ecece7f554c29a2b5b1004b80c734b1cbf2d" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;cur&amp;rdquo; subdirectory</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e9f1ac661876c6540b9857145ab2ab6c926dfa1" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;cur&amp;rdquo; subdirectory and S flag</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="665006e128960bcd18ac3d2ef11d25563f76a4bf" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;deleted&amp;rdquo; label</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65b5f1b4c69f0aadb34896e751d15e09d2725c12" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;fast&amp;rdquo;: 10</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="984d5da8c3afa668234350ad5d7686ad30e4091e" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;fastest&amp;rdquo;: 0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e96a64834bc227b8d16e7b6171210c050ca16b0d" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;fillcolor&amp;rdquo;: color-string or color-tuple</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87f6b575f48806d8896ad121ee30be27c2bed273" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;flagged&amp;rdquo; sequence</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba07291df7032269c493e65286e8916ccb442c8d" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;forwarded&amp;rdquo; label</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b1af59030fde48e61fcba6c3fe949a0b3bd9a42" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;forwarded&amp;rdquo; or &amp;ldquo;resent&amp;rdquo; label</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c6b21d380be1c4c96373a6b686901155c8e3563" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;generation&amp;rdquo;: The oldest generation being collected.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2648cb9aebe6e8968160e9e8da88061e5c0410e" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;image&amp;rdquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4babee6ed04e7841348dc832c315c8ef723b808f" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;logo&amp;rdquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aba80fa3a529bbdedc5ca712d01b67ba53f5dfd6" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;mbox&amp;rdquo; is a family of several mutually incompatible mailbox formats</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4864e937adf2ce8b2bd8d1d58cbe12e2433a360" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;noresize&amp;rdquo;: no adaption of the turtle&amp;rsquo;s appearance takes place.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a67a67b292cce1c03102084fc1fbc01c92960f82" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;normal&amp;rdquo;: 6</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3aeb900c18392b9f62150dcb9cf2bdeef9aa3195" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;notBefore&amp;rdquo; or &amp;ldquo;notAfter&amp;rdquo; dates must use GMT (&lt;a href=&quot;https://tools.ietf.org/html/rfc5280.html&quot; id=&quot;index-9&quot;&gt;&lt;strong&gt;RFC 5280&lt;/strong&gt;&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="157c02772204596e3091e19080235f29c1f73d1c" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;outline&amp;rdquo;: positive number</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc6391f3080153052e06af4f33919c6e1f5df2f9" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;pencolor&amp;rdquo;: color-string or color-tuple</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bdec328f2141ea46021d5b8e4b8a58bcdc655ee6" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;pendown&amp;rdquo;: True/False</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="145223a40817e06b6293365c91f4785e28e0fa3a" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;pensize&amp;rdquo;: positive number</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8280fcf1436a9540955ca92342c59214c8328791" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;polygon&amp;rdquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d882d4412b2e2c2980e3bc4bb8e286260b77022" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;replied&amp;rdquo; sequence</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4429d77cb2539bc10b1c6b029871efb064c7c002" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;resizemode&amp;rdquo;: &amp;ldquo;auto&amp;rdquo; or &amp;ldquo;user&amp;rdquo; or &amp;ldquo;noresize&amp;rdquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57ffbc4d99a90e7cf8f82c9231d2f875a285a129" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;shown&amp;rdquo;: True/False</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60800304cddb3cb32a438caf9932b87d2a966377" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;slow&amp;rdquo;: 3</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03828e4161392050f578ed67f26b3a84b8091f59" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;slowest&amp;rdquo;: 1</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9e7276ad1f62ac907f5c021bfa6e2f2178b4c66" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;speed&amp;rdquo;: number in range 0..10</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbbe9f6300ca62a5537ad1f669df8db5ca1bc2f0" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;standard&amp;rdquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba8af76acdd2a14dec1bd9fe51dbca31815a4238" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;start&amp;rdquo;: The garbage collection is about to start.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8d143ab977de5d55af78ff93f53507ed813aed1" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;stop&amp;rdquo;: The garbage collection has finished.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6653e6aaf57aa67125001c61d26bb2dbf0e12afe" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;stretchfactor&amp;rdquo;: (positive number, positive number)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cdaf4863cf6832fd51082d55f97341b17a71bb3b" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;tilt&amp;rdquo;: number</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6aa1b80e44662676fa8188af163d25e69255c3f" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;uncollectable&amp;rdquo;: When &lt;em&gt;phase&lt;/em&gt; is &amp;ldquo;stop&amp;rdquo;, the number of objects that could not be collected and were put in &lt;a href=&quot;#gc.garbage&quot;&gt;&lt;code&gt;garbage&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf348e14b616f99c15bcf61b937e214f3a0a9076" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;unseen&amp;rdquo; label</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1afb9146c6fc6be49d5b14a7335d99829bf3fa16" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;unseen&amp;rdquo; sequence</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab11a6a11684a5d585f69a7cb9ce4898eb31fc4e" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;user&amp;rdquo;: adapts the appearance of the turtle according to the values of stretchfactor and outlinewidth (outline), which are set by &lt;a href=&quot;#turtle.shapesize&quot;&gt;&lt;code&gt;shapesize()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dae25d7251bdddcca0245a395a01b86f8380ec05" translate="yes" xml:space="preserve">
          <source>&amp;lsquo;Show Completions&amp;rsquo; will force open a completions window, by default the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6c70767eb15268056316747f32dd42858a0474b" translate="yes" xml:space="preserve">
          <source>&amp;lsquo;exception&amp;rsquo; (optional): Exception object;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2c55846a04a61d5259978ed8647efd610241aba" translate="yes" xml:space="preserve">
          <source>&amp;lsquo;future&amp;rsquo; (optional): &lt;a href=&quot;asyncio-future#asyncio.Future&quot;&gt;&lt;code&gt;asyncio.Future&lt;/code&gt;&lt;/a&gt; instance;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa63912a9ef160d146a17ede412d6ae18ecaaa89" translate="yes" xml:space="preserve">
          <source>&amp;lsquo;handle&amp;rsquo; (optional): &lt;a href=&quot;#asyncio.Handle&quot;&gt;&lt;code&gt;asyncio.Handle&lt;/code&gt;&lt;/a&gt; instance;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4934d17858c07605558dde31a6b4efd102b2086b" translate="yes" xml:space="preserve">
          <source>&amp;lsquo;message&amp;rsquo;: Error message;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1ab7ac93af882525243467a3662fbdee5196bfa" translate="yes" xml:space="preserve">
          <source>&amp;lsquo;protocol&amp;rsquo; (optional): &lt;a href=&quot;asyncio-protocol#asyncio-protocol&quot;&gt;Protocol&lt;/a&gt; instance;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="414e7c9facc9a63e5af44c8721bf74533dcc5180" translate="yes" xml:space="preserve">
          <source>&amp;lsquo;socket&amp;rsquo; (optional): &lt;a href=&quot;socket#socket.socket&quot;&gt;&lt;code&gt;socket.socket&lt;/code&gt;&lt;/a&gt; instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1122a230b1df64555acffcddffa195824130b342" translate="yes" xml:space="preserve">
          <source>&amp;lsquo;transport&amp;rsquo; (optional): &lt;a href=&quot;asyncio-protocol#asyncio-transport&quot;&gt;Transport&lt;/a&gt; instance;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c0ed1abeb0d5c6f06cfc31b19d62933bb862497" translate="yes" xml:space="preserve">
          <source>&amp;lt;&amp;lt;TreeviewClose&amp;gt;&amp;gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d25066315f7785f684ebc386026b1f72f72c430" translate="yes" xml:space="preserve">
          <source>&amp;lt;&amp;lt;TreeviewOpen&amp;gt;&amp;gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84e0752ecd275811576360a8fb0af578ca3ff457" translate="yes" xml:space="preserve">
          <source>&amp;lt;&amp;lt;TreeviewSelect&amp;gt;&amp;gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff723b3b462c0cc70d063609d6bac53c1664462b" translate="yes" xml:space="preserve">
          <source>&amp;minus;8 to &amp;minus;15: Uses the absolute value of &lt;em&gt;wbits&lt;/em&gt; as the window size logarithm. The input must be a raw stream with no header or trailer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3bc82f7107125ddbae871093130699fe5ddae40" translate="yes" xml:space="preserve">
          <source>&amp;minus;9 to &amp;minus;15: Uses the absolute value of &lt;em&gt;wbits&lt;/em&gt; as the window size logarithm, while producing a raw output stream with no header or trailing checksum.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0701b4eb370ccd036c1bf197d67961cb94f4e357" translate="yes" xml:space="preserve">
          <source>(1), (2)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef39d755c4ca1b26c0524ea22ab14990778e47ca" translate="yes" xml:space="preserve">
          <source>(1), (3)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27aa8c3424de4148c235b7004f833c8a380605fb" translate="yes" xml:space="preserve">
          <source>(4), (9)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="762327e2b5bd5e2110d16ab6e277bf9d85952cee" translate="yes" xml:space="preserve">
          <source>(7), (9)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0fecb83a9a7bbf391bcef8a381ebf3693351ca0" translate="yes" xml:space="preserve">
          <source>(8), (9)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5dc464cc0ace35daab15f9ab6330d4475592c333" translate="yes" xml:space="preserve">
          <source>(&lt;a href=&quot;http://www.skein-hash.info/sites/default/files/skein1.3.pdf&quot;&gt;The Skein Hash Function Family&lt;/a&gt;, p. 21)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d330d713f097e5a67980825c7c099eac25d39deb" translate="yes" xml:space="preserve">
          <source>(&lt;a href=&quot;https://csrc.nist.gov/publications/detail/sp/800-106/final&quot;&gt;NIST SP-800-106 &amp;ldquo;Randomized Hashing for Digital Signatures&amp;rdquo;&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9c9b9a8e12940ac745823922d6d6b19daa29365" translate="yes" xml:space="preserve">
          <source>(&lt;code&gt;__cached__&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1b40bc9fadd8253c458d634d8c96597d6134557" translate="yes" xml:space="preserve">
          <source>(&lt;code&gt;__file__&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f68fd8f75235db18f251a77b258c3bba3f24bdb" translate="yes" xml:space="preserve">
          <source>(&lt;code&gt;__loader__&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="800b4f10d60239c6ede8dbe3dc7a55cd015f868e" translate="yes" xml:space="preserve">
          <source>(&lt;code&gt;__name__&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4580534066c5fc921497c592e0a3aea78068df85" translate="yes" xml:space="preserve">
          <source>(&lt;code&gt;__package__&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3591dc3c999b3230dc3444e9938357ea2cc0a04c" translate="yes" xml:space="preserve">
          <source>(&lt;code&gt;__path__&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e8796c575b981980fc954a5fb4b3f2bb9cbac2c" translate="yes" xml:space="preserve">
          <source>(&lt;code&gt;os.POSIX_SPAWN_CLOSE&lt;/code&gt;, &lt;em&gt;fd&lt;/em&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f066d27d9733fe290d757aec155b06c34eb7e79e" translate="yes" xml:space="preserve">
          <source>(&lt;code&gt;os.POSIX_SPAWN_DUP2&lt;/code&gt;, &lt;em&gt;fd&lt;/em&gt;, &lt;em&gt;new_fd&lt;/em&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ccd011678c8f7b6301d6f567b879caa571dd5ec6" translate="yes" xml:space="preserve">
          <source>(&lt;code&gt;os.POSIX_SPAWN_OPEN&lt;/code&gt;, &lt;em&gt;fd&lt;/em&gt;, &lt;em&gt;path&lt;/em&gt;, &lt;em&gt;flags&lt;/em&gt;, &lt;em&gt;mode&lt;/em&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a7b518ec55d79b7fb522fbfb57188dc15b4f09e" translate="yes" xml:space="preserve">
          <source>(According to &lt;a href=&quot;https://tools.ietf.org/html/rfc2045.html&quot; id=&quot;index-6&quot;&gt;&lt;strong&gt;RFC 2045&lt;/strong&gt;&lt;/a&gt;, messages always have a default type, &lt;a href=&quot;#email.message.EmailMessage.get_content_type&quot;&gt;&lt;code&gt;get_content_type()&lt;/code&gt;&lt;/a&gt; will always return a value. &lt;a href=&quot;https://tools.ietf.org/html/rfc2045.html&quot; id=&quot;index-7&quot;&gt;&lt;strong&gt;RFC 2045&lt;/strong&gt;&lt;/a&gt; defines a message&amp;rsquo;s default type to be &lt;em&gt;text/plain&lt;/em&gt; unless it appears inside a &lt;em&gt;multipart/digest&lt;/em&gt; container, in which case it would be &lt;em&gt;message/rfc822&lt;/em&gt;. If the &lt;em&gt;Content-Type&lt;/em&gt; header has an invalid type specification, &lt;a href=&quot;https://tools.ietf.org/html/rfc2045.html&quot; id=&quot;index-8&quot;&gt;&lt;strong&gt;RFC 2045&lt;/strong&gt;&lt;/a&gt; mandates that the default type be &lt;em&gt;text/plain&lt;/em&gt;.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e15acf38052574ce2e11fc7a3c986459f8fdca9" translate="yes" xml:space="preserve">
          <source>(Caret.) Matches the start of the string, and in &lt;a href=&quot;#re.MULTILINE&quot;&gt;&lt;code&gt;MULTILINE&lt;/code&gt;&lt;/a&gt; mode also matches immediately after each newline.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1562b058e7e9a71bbe89215b6f3c26ae32bd420" translate="yes" xml:space="preserve">
          <source>(De)compression of files</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7019c3324b98e3617044c53872f52ca1142a507f" translate="yes" xml:space="preserve">
          <source>(Dot.) In the default mode, this matches any character except a newline. If the &lt;a href=&quot;#re.DOTALL&quot;&gt;&lt;code&gt;DOTALL&lt;/code&gt;&lt;/a&gt; flag has been specified, this matches any character including a newline.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64d88233de831476dd7c254d185d351c1574dc47" translate="yes" xml:space="preserve">
          <source>(Expand word) is also useful to reduce typing</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3532ad44d6feb311d845bcda627420e4bfb5d0e5" translate="yes" xml:space="preserve">
          <source>(For backwards compatibility, the exception class is also available as &lt;code&gt;ossaudiodev.error&lt;/code&gt;.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5d550bbb64fa949d294b45d730860dd4ce522c3" translate="yes" xml:space="preserve">
          <source>(If &lt;a href=&quot;#module-ossaudiodev&quot;&gt;&lt;code&gt;ossaudiodev&lt;/code&gt;&lt;/a&gt; receives an error from a system call such as &lt;code&gt;open()&lt;/code&gt;, &lt;code&gt;write()&lt;/code&gt;, or &lt;code&gt;ioctl()&lt;/code&gt;, it raises &lt;a href=&quot;exceptions#OSError&quot;&gt;&lt;code&gt;OSError&lt;/code&gt;&lt;/a&gt;. Errors detected directly by &lt;a href=&quot;#module-ossaudiodev&quot;&gt;&lt;code&gt;ossaudiodev&lt;/code&gt;&lt;/a&gt; result in &lt;a href=&quot;#ossaudiodev.OSSAudioError&quot;&gt;&lt;code&gt;OSSAudioError&lt;/code&gt;&lt;/a&gt;.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="add42b225e79b87d2767add55abcf80946a45a29" translate="yes" xml:space="preserve">
          <source>(If you are already familiar with the basic concepts of testing, you might want to skip to &lt;a href=&quot;#assert-methods&quot;&gt;the list of assert methods&lt;/a&gt;.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22306c666d44b8f5a9275346a995ae3df3effe15" translate="yes" xml:space="preserve">
          <source>(If you try this it will actually output three full tracebacks interleaved in a semi-random fashion, and then you may have to stop the parent process somehow.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60b4c150a81cb13c106057ccbd41323963106195" translate="yes" xml:space="preserve">
          <source>(Must be defined as a class method.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4193b5ddccca6a9a69749f5196ca4ae24d9465c" translate="yes" xml:space="preserve">
          <source>(Not supported by all operating systems.) Returns a polling object, which supports registering and unregistering file descriptors, and then polling them for I/O events; see section &lt;a href=&quot;#poll-objects&quot;&gt;Polling Objects&lt;/a&gt; below for the methods supported by polling objects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f5737aad0e535df4a565b997b8c5efc2d7f35ab" translate="yes" xml:space="preserve">
          <source>(Note that &lt;code&gt;\b&lt;/code&gt; is used to represent word boundaries, and means &amp;ldquo;backspace&amp;rdquo; only inside character classes.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54b6e14d4e6902af37cdfa6063d55e5562fa6bb0" translate="yes" xml:space="preserve">
          <source>(Note that the &lt;a href=&quot;subprocess#module-subprocess&quot;&gt;&lt;code&gt;subprocess&lt;/code&gt;&lt;/a&gt; module provides more powerful facilities for spawning new processes and retrieving their results; using that module is preferable to using these functions. Check especially the &lt;a href=&quot;subprocess#subprocess-replacements&quot;&gt;Replacing Older Functions with the subprocess Module&lt;/a&gt; section.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d91c7e90b2f0d6616415afae10bd56e7137deb61" translate="yes" xml:space="preserve">
          <source>(Note: YAML used here because it&amp;rsquo;s a little more readable than the equivalent Python source form for the dictionary.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3df3c41b7f7617904d63f483c06ec3d70f8209d0" translate="yes" xml:space="preserve">
          <source>(One or more letters from the set &lt;code&gt;'a'&lt;/code&gt;, &lt;code&gt;'i'&lt;/code&gt;, &lt;code&gt;'L'&lt;/code&gt;, &lt;code&gt;'m'&lt;/code&gt;, &lt;code&gt;'s'&lt;/code&gt;, &lt;code&gt;'u'&lt;/code&gt;, &lt;code&gt;'x'&lt;/code&gt;.) The group matches the empty string; the letters set the corresponding flags: &lt;a href=&quot;#re.A&quot;&gt;&lt;code&gt;re.A&lt;/code&gt;&lt;/a&gt; (ASCII-only matching), &lt;a href=&quot;#re.I&quot;&gt;&lt;code&gt;re.I&lt;/code&gt;&lt;/a&gt; (ignore case), &lt;a href=&quot;#re.L&quot;&gt;&lt;code&gt;re.L&lt;/code&gt;&lt;/a&gt; (locale dependent), &lt;a href=&quot;#re.M&quot;&gt;&lt;code&gt;re.M&lt;/code&gt;&lt;/a&gt; (multi-line), &lt;a href=&quot;#re.S&quot;&gt;&lt;code&gt;re.S&lt;/code&gt;&lt;/a&gt; (dot matches all), &lt;code&gt;re.U&lt;/code&gt; (Unicode matching), and &lt;a href=&quot;#re.X&quot;&gt;&lt;code&gt;re.X&lt;/code&gt;&lt;/a&gt; (verbose), for the entire regular expression. (The flags are described in &lt;a href=&quot;#contents-of-module-re&quot;&gt;Module Contents&lt;/a&gt;.) This is useful if you wish to include the flags as part of the regular expression, instead of passing a &lt;em&gt;flag&lt;/em&gt; argument to the &lt;a href=&quot;#re.compile&quot;&gt;&lt;code&gt;re.compile()&lt;/code&gt;&lt;/a&gt; function. Flags should be used first in the expression string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a380a670893e5b290ec350766feec343d285ce9b" translate="yes" xml:space="preserve">
          <source>(Only supported on BSD.) Returns a kernel event object; see section &lt;a href=&quot;#kevent-objects&quot;&gt;Kevent Objects&lt;/a&gt; below for the methods supported by kevent objects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c61f6f1cd6f4f9d1d80afee20a7d5474f7a8b29" translate="yes" xml:space="preserve">
          <source>(Only supported on BSD.) Returns a kernel queue object; see section &lt;a href=&quot;#kqueue-objects&quot;&gt;Kqueue Objects&lt;/a&gt; below for the methods supported by kqueue objects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c594d8d8dee8ff561637086f2fada3b1039bd52" translate="yes" xml:space="preserve">
          <source>(Only supported on Linux 2.5.44 and newer.) Return an edge polling object, which can be used as Edge or Level Triggered interface for I/O events.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ddac2023b8c13dfcdea22120f943d310b0e3d938" translate="yes" xml:space="preserve">
          <source>(Only supported on Solaris and derivatives.) Returns a &lt;code&gt;/dev/poll&lt;/code&gt; polling object; see section &lt;a href=&quot;#devpoll-objects&quot;&gt;/dev/poll Polling Objects&lt;/a&gt; below for the methods supported by devpoll objects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05a1b1d9675b9d22ac179d4951780b0765f7fff4" translate="yes" xml:space="preserve">
          <source>(Python also includes pure-Python versions of these programs, called &lt;strong&gt;pygettext.py&lt;/strong&gt; and &lt;strong&gt;msgfmt.py&lt;/strong&gt;; some Python distributions will install them for you. &lt;strong&gt;pygettext.py&lt;/strong&gt; is similar to &lt;strong&gt;xgettext&lt;/strong&gt;, but only understands Python source code and cannot handle other programming languages such as C or C++. &lt;strong&gt;pygettext.py&lt;/strong&gt; supports a command-line interface similar to &lt;strong&gt;xgettext&lt;/strong&gt;; for details on its use, run &lt;code&gt;pygettext.py
--help&lt;/code&gt;. &lt;strong&gt;msgfmt.py&lt;/strong&gt; is binary compatible with GNU &lt;strong&gt;msgfmt&lt;/strong&gt;. With these two programs, you may not need the GNU &lt;strong&gt;gettext&lt;/strong&gt; package to internationalize your Python applications.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d8d84f156f7082e08cce1e5b153004b431f693c" translate="yes" xml:space="preserve">
          <source>(Read-only) Fully-qualified name of the package to which the module belongs as a submodule (or &lt;code&gt;None&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb0a21fecb6d0aea51798bc604a4a7015ff135ed" translate="yes" xml:space="preserve">
          <source>(The &amp;ldquo;2&amp;rdquo; is a line number).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="106a9ba3766d871b44d1d8d28ab7a43eb449365d" translate="yes" xml:space="preserve">
          <source>(The &lt;code&gt;freeze_support()&lt;/code&gt; line can be omitted if the program will be run normally instead of frozen.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9f2be2e6a435880eff477de182c010e94aa3b62" translate="yes" xml:space="preserve">
          <source>(There is never a problem with different processes using the &lt;em&gt;same&lt;/em&gt; proxy.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5912d22285d328a6126bd606c2c4783411052b6e" translate="yes" xml:space="preserve">
          <source>(This &lt;code&gt;signals&lt;/code&gt; example only works on Unix.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9de2661e6bcd08d2f772a6da4dd3ae7e6558ce6" translate="yes" xml:space="preserve">
          <source>(This way, the directory inserted last will be searched first!)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a0278767fe2cda0b8381e9e4dfe9242d98cfee7" translate="yes" xml:space="preserve">
          <source>(Use &lt;a href=&quot;#module-profile&quot;&gt;&lt;code&gt;profile&lt;/code&gt;&lt;/a&gt; instead of &lt;a href=&quot;#module-cProfile&quot;&gt;&lt;code&gt;cProfile&lt;/code&gt;&lt;/a&gt; if the latter is not available on your system.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="483c199ac62c68b9539d1dd28a6af2f5848c2fce" translate="yes" xml:space="preserve">
          <source>(Zero or more letters from the set &lt;code&gt;'a'&lt;/code&gt;, &lt;code&gt;'i'&lt;/code&gt;, &lt;code&gt;'L'&lt;/code&gt;, &lt;code&gt;'m'&lt;/code&gt;, &lt;code&gt;'s'&lt;/code&gt;, &lt;code&gt;'u'&lt;/code&gt;, &lt;code&gt;'x'&lt;/code&gt;, optionally followed by &lt;code&gt;'-'&lt;/code&gt; followed by one or more letters from the &lt;code&gt;'i'&lt;/code&gt;, &lt;code&gt;'m'&lt;/code&gt;, &lt;code&gt;'s'&lt;/code&gt;, &lt;code&gt;'x'&lt;/code&gt;.) The letters set or remove the corresponding flags: &lt;a href=&quot;#re.A&quot;&gt;&lt;code&gt;re.A&lt;/code&gt;&lt;/a&gt; (ASCII-only matching), &lt;a href=&quot;#re.I&quot;&gt;&lt;code&gt;re.I&lt;/code&gt;&lt;/a&gt; (ignore case), &lt;a href=&quot;#re.L&quot;&gt;&lt;code&gt;re.L&lt;/code&gt;&lt;/a&gt; (locale dependent), &lt;a href=&quot;#re.M&quot;&gt;&lt;code&gt;re.M&lt;/code&gt;&lt;/a&gt; (multi-line), &lt;a href=&quot;#re.S&quot;&gt;&lt;code&gt;re.S&lt;/code&gt;&lt;/a&gt; (dot matches all), &lt;code&gt;re.U&lt;/code&gt; (Unicode matching), and &lt;a href=&quot;#re.X&quot;&gt;&lt;code&gt;re.X&lt;/code&gt;&lt;/a&gt; (verbose), for the part of the expression. (The flags are described in &lt;a href=&quot;#contents-of-module-re&quot;&gt;Module Contents&lt;/a&gt;.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ecf85a74f08e37934663da45653757bb9b57fcf9" translate="yes" xml:space="preserve">
          <source>(a na&amp;iuml;ve approach would make &lt;code&gt;PurePosixPath('foo/../bar')&lt;/code&gt; equivalent to &lt;code&gt;PurePosixPath('bar')&lt;/code&gt;, which is wrong if &lt;code&gt;foo&lt;/code&gt; is a symbolic link to another directory)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d3b4790de80c2a4f8db23e4ebee4533ea0f7169" translate="yes" xml:space="preserve">
          <source>(a space) A blank should be left before a positive number (or empty string) produced by a signed conversion.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7f391eecc0730fc7c289196bc72a2021b3680de" translate="yes" xml:space="preserve">
          <source>(c_int * 3)(9, 2, 8)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a130c7fadc3b80214ec64b6721fd7ee0b95da7a" translate="yes" xml:space="preserve">
          <source>(c_short * 7)()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a71223ac9fbf5fe08f7aeab21cd404acc498649f" translate="yes" xml:space="preserve">
          <source>(d[0] if s[0]), (d[1] if s[1]), &amp;hellip;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0b389c374b6754683afbe321739d283fdaee401" translate="yes" xml:space="preserve">
          <source>(default: &lt;code&gt;' [...]'&lt;/code&gt;) String that will appear at the end of the output text if it has been truncated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35a0e53aa896fc3f2801a122179b15f18e7001b4" translate="yes" xml:space="preserve">
          <source>(default: &lt;code&gt;''&lt;/code&gt;) String that will be prepended to all lines of wrapped output except the first. Counts towards the length of each line except the first.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5564e2752cd323c6f4a187156ebf9ab9117bfe8b" translate="yes" xml:space="preserve">
          <source>(default: &lt;code&gt;''&lt;/code&gt;) String that will be prepended to the first line of wrapped output. Counts towards the length of the first line. The empty string is not indented.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ed1642e275c8e3d0a3586c01cfb4170016a1c80" translate="yes" xml:space="preserve">
          <source>(default: &lt;code&gt;70&lt;/code&gt;) The maximum length of wrapped lines. As long as there are no individual words in the input text longer than &lt;a href=&quot;#textwrap.TextWrapper.width&quot;&gt;&lt;code&gt;width&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#textwrap.TextWrapper&quot;&gt;&lt;code&gt;TextWrapper&lt;/code&gt;&lt;/a&gt; guarantees that no output line will be longer than &lt;a href=&quot;#textwrap.TextWrapper.width&quot;&gt;&lt;code&gt;width&lt;/code&gt;&lt;/a&gt; characters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79a419dbd8cd5a0473f96f8b48b254d6af267b92" translate="yes" xml:space="preserve">
          <source>(default: &lt;code&gt;8&lt;/code&gt;) If &lt;a href=&quot;#textwrap.TextWrapper.expand_tabs&quot;&gt;&lt;code&gt;expand_tabs&lt;/code&gt;&lt;/a&gt; is true, then all tab characters in &lt;em&gt;text&lt;/em&gt; will be expanded to zero or more spaces, depending on the current column and the given tab size.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fc1d06312e626ed92e2123a73d44bf26720031d" translate="yes" xml:space="preserve">
          <source>(default: &lt;code&gt;False&lt;/code&gt;) If true, &lt;a href=&quot;#textwrap.TextWrapper&quot;&gt;&lt;code&gt;TextWrapper&lt;/code&gt;&lt;/a&gt; attempts to detect sentence endings and ensure that sentences are always separated by exactly two spaces. This is generally desired for text in a monospaced font. However, the sentence detection algorithm is imperfect: it assumes that a sentence ending consists of a lowercase letter followed by one of &lt;code&gt;'.'&lt;/code&gt;, &lt;code&gt;'!'&lt;/code&gt;, or &lt;code&gt;'?'&lt;/code&gt;, possibly followed by one of &lt;code&gt;'&quot;'&lt;/code&gt; or &lt;code&gt;&quot;'&quot;&lt;/code&gt;, followed by a space. One problem with this is algorithm is that it is unable to detect the difference between &amp;ldquo;Dr.&amp;rdquo; in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f53d15db94de2470a19a0eacc123b7219aa9dbe5" translate="yes" xml:space="preserve">
          <source>(default: &lt;code&gt;None&lt;/code&gt;) If not &lt;code&gt;None&lt;/code&gt;, then the output will contain at most &lt;em&gt;max_lines&lt;/em&gt; lines, with &lt;em&gt;placeholder&lt;/em&gt; appearing at the end of the output.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01960fbe00ab86f775ddb154bf02b655f46c87a4" translate="yes" xml:space="preserve">
          <source>(default: &lt;code&gt;True&lt;/code&gt;) If true, after tab expansion but before wrapping, the &lt;a href=&quot;#textwrap.wrap&quot;&gt;&lt;code&gt;wrap()&lt;/code&gt;&lt;/a&gt; method will replace each whitespace character with a single space. The whitespace characters replaced are as follows: tab, newline, vertical tab, formfeed, and carriage return (&lt;code&gt;'\t\n\v\f\r'&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0825864cfacf8cf8cbd8fe71ed6b41585c9f743" translate="yes" xml:space="preserve">
          <source>(default: &lt;code&gt;True&lt;/code&gt;) If true, then all tab characters in &lt;em&gt;text&lt;/em&gt; will be expanded to spaces using the &lt;code&gt;expandtabs()&lt;/code&gt; method of &lt;em&gt;text&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7eef8f29365d420232f2e36fff8aa6d52807affa" translate="yes" xml:space="preserve">
          <source>(default: &lt;code&gt;True&lt;/code&gt;) If true, then words longer than &lt;a href=&quot;#textwrap.TextWrapper.width&quot;&gt;&lt;code&gt;width&lt;/code&gt;&lt;/a&gt; will be broken in order to ensure that no lines are longer than &lt;a href=&quot;#textwrap.TextWrapper.width&quot;&gt;&lt;code&gt;width&lt;/code&gt;&lt;/a&gt;. If it is false, long words will not be broken, and some lines may be longer than &lt;a href=&quot;#textwrap.TextWrapper.width&quot;&gt;&lt;code&gt;width&lt;/code&gt;&lt;/a&gt;. (Long words will be put on a line by themselves, in order to minimize the amount by which &lt;a href=&quot;#textwrap.TextWrapper.width&quot;&gt;&lt;code&gt;width&lt;/code&gt;&lt;/a&gt; is exceeded.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f6545d1167450433f2877f8ef2e4bcd50b5104b" translate="yes" xml:space="preserve">
          <source>(default: &lt;code&gt;True&lt;/code&gt;) If true, whitespace at the beginning and ending of every line (after wrapping but before indenting) is dropped. Whitespace at the beginning of the paragraph, however, is not dropped if non-whitespace follows it. If whitespace being dropped takes up an entire line, the whole line is dropped.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3fe672b672e3a890b9a5c70bbceedcdea48fcab" translate="yes" xml:space="preserve">
          <source>(default: &lt;code&gt;True&lt;/code&gt;) If true, wrapping will occur preferably on whitespaces and right after hyphens in compound words, as it is customary in English. If false, only whitespaces will be considered as potentially good places for line breaks, but you need to set &lt;a href=&quot;#textwrap.TextWrapper.break_long_words&quot;&gt;&lt;code&gt;break_long_words&lt;/code&gt;&lt;/a&gt; to false if you want truly insecable words. Default behaviour in previous versions was to always allow breaking hyphenated words.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27300bdad09115220f424f2900d479e94e222f51" translate="yes" xml:space="preserve">
          <source>(default: false)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a8eb84d10887d5f0ea9c1b13d1f11f611531bfe" translate="yes" xml:space="preserve">
          <source>(empty), +0000, -0400, +1030, +063415, -030712.345216</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b3afd059280c7699bf75acbc67460b945321d9b" translate="yes" xml:space="preserve">
          <source>(empty), UTC, EST, CST</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9397b5c66b847220c07218a9f75f4ad22cc120f0" translate="yes" xml:space="preserve">
          <source>(for example, 1993)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d732114283e099188289de8ab5a65ffa574f2432" translate="yes" xml:space="preserve">
          <source>(note how the drive and local root are regrouped in a single part)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f513ab897cacf008c18f29e45f81167264f165f6" translate="yes" xml:space="preserve">
          <source>(of course, similar provisions apply when using other primitives such as &lt;a href=&quot;select#select.poll&quot;&gt;&lt;code&gt;poll()&lt;/code&gt;&lt;/a&gt;, or those in the &lt;a href=&quot;selectors#module-selectors&quot;&gt;&lt;code&gt;selectors&lt;/code&gt;&lt;/a&gt; module)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1c6e31156f7956b75f9f20e93a726c79a946c64" translate="yes" xml:space="preserve">
          <source>(p[0], q[0]), (p[1], q[1]), &amp;hellip;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="613c23b12d1c99282cea96b43c8eca0456e3514c" translate="yes" xml:space="preserve">
          <source>(this assumes you have your project requirements in a &lt;code&gt;requirements.txt&lt;/code&gt; file - if not, you can just list the dependencies manually on the pip command line).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6de88ff98031053b2111d699e13258b14d67d10f" translate="yes" xml:space="preserve">
          <source>(this snippet assumes your operating system places a bundle of all CA certificates in &lt;code&gt;/etc/ssl/certs/ca-bundle.crt&lt;/code&gt;; if not, you&amp;rsquo;ll get an error and have to adjust the location)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b7fa33ad9dc22f0bb2db443abbd5a433a1797a1" translate="yes" xml:space="preserve">
          <source>). During execution, a check for interrupts is made regularly. The exception inherits from &lt;a href=&quot;#BaseException&quot;&gt;&lt;code&gt;BaseException&lt;/code&gt;&lt;/a&gt; so as to not be accidentally caught by code that catches &lt;a href=&quot;#Exception&quot;&gt;&lt;code&gt;Exception&lt;/code&gt;&lt;/a&gt; and thus prevent the interpreter from exiting.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f196ae6283d9bb977de8f28cb681544e4ceb73a5" translate="yes" xml:space="preserve">
          <source>). They are called with any arguments and keyword arguments passed into &lt;a href=&quot;#unittest.TestCase.addClassCleanup&quot;&gt;&lt;code&gt;addClassCleanup()&lt;/code&gt;&lt;/a&gt; when they are added.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72217c7a1cf2ba7c81ceed2f65f4709b46735e8f" translate="yes" xml:space="preserve">
          <source>). They are called with any arguments and keyword arguments passed into &lt;a href=&quot;#unittest.TestCase.addCleanup&quot;&gt;&lt;code&gt;addCleanup()&lt;/code&gt;&lt;/a&gt; when they are added.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61a1b9fda3bf88c1945a7be6fbbdf9f9e556d920" translate="yes" xml:space="preserve">
          <source>). They are called with any arguments and keyword arguments passed into &lt;a href=&quot;#unittest.addModuleCleanup&quot;&gt;&lt;code&gt;addModuleCleanup()&lt;/code&gt;&lt;/a&gt; when they are added.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4157c403113c908765f9c4fcc6046d09823ecbf0" translate="yes" xml:space="preserve">
          <source>+24 to +31 = 16 + (8 to 15): Uses the low 4 bits of the value as the window size logarithm. The input must include a gzip header and trailer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="444a69d5afa797be0e1c93f6b0ff93ec8347ca9a" translate="yes" xml:space="preserve">
          <source>+25 to +31 = 16 + (9 to 15): Uses the low 4 bits of the value as the window size logarithm, while including a basic &lt;strong&gt;gzip&lt;/strong&gt; header and trailing checksum in the output.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc52224432399c477eceb3338ad3d3ce0588e339" translate="yes" xml:space="preserve">
          <source>+40 to +47 = 32 + (8 to 15): Uses the low 4 bits of the value as the window size logarithm, and automatically accepts either the zlib or gzip format.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8d119495d13dd5e5dc270efed3ae81116b23222" translate="yes" xml:space="preserve">
          <source>+8 to +15: The base-two logarithm of the window size. The input must include a zlib header and trailer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4ece6e0c2c865b233f7dc664ec10dd5fafb31ec" translate="yes" xml:space="preserve">
          <source>+9 to +15: The base-two logarithm of the window size, which therefore ranges between 512 and 32768. Larger values produce better compression at the expense of greater memory usage. The resulting output will include a zlib-specific header and trailer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e5017d4e62f26d763f64ae3831b7b13f3669c29" translate="yes" xml:space="preserve">
          <source>-&lt;em&gt;timedelta.max&lt;/em&gt; is not representable as a &lt;a href=&quot;#datetime.timedelta&quot;&gt;&lt;code&gt;timedelta&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8d225f3aae0f917bf4f5d2c0a189a3174647da4" translate="yes" xml:space="preserve">
          <source>. If &lt;em&gt;completekey&lt;/em&gt; is not &lt;a href=&quot;constants#None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;readline#module-readline&quot;&gt;&lt;code&gt;readline&lt;/code&gt;&lt;/a&gt; is available, command completion is done automatically.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a166a1de35717c5d814e94cff7f102f3c5de2e4c" translate="yes" xml:space="preserve">
          <source>. If you want Pdb not to touch the SIGINT handler, set &lt;em&gt;nosigint&lt;/em&gt; to true.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8523d7dc1dedc8537f7c6b3ad5137eba222017eb" translate="yes" xml:space="preserve">
          <source>. One may edit pasted code first. If one pastes more that one statement into Shell, the result will be a &lt;a href=&quot;exceptions#SyntaxError&quot;&gt;&lt;code&gt;SyntaxError&lt;/code&gt;&lt;/a&gt; when multiple statements are compiled as if they were one.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2235f09c6ff7ac659d5e1ebf91bea0b1cbd48045" translate="yes" xml:space="preserve">
          <source>.dump</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac3607362b43638d6eba7a2b6a884d8a1add9f39" translate="yes" xml:space="preserve">
          <source>.lib section in a.out corrupted</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e0ad534d3ec2c4baf545dffbdf3eada45f4a912" translate="yes" xml:space="preserve">
          <source>0 - east</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="799a0aab9a7918aac30cbb099620f6567c8c3c9b" translate="yes" xml:space="preserve">
          <source>0 - north</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0da3254c9d10d2736a564e8371cdeb1979e9a27f" translate="yes" xml:space="preserve">
          <source>0 is a legal argument for any position in the time tuple; if it is normally illegal the value is forced to a correct one.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb226da5895b0d5f9459bb7ebd5c5d0c08473eca" translate="yes" xml:space="preserve">
          <source>0 or 1</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1054f086bdb967d118a882027d8c03bd8b5c5ac" translate="yes" xml:space="preserve">
          <source>0, 1 or -1; see below</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ed0f26ab8ed0d6e2b0be96823e4baa8b393f657" translate="yes" xml:space="preserve">
          <source>0, 1, &amp;hellip;, 6</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf3b9c2499c553403b271787bd6f5c94111ab40b" translate="yes" xml:space="preserve">
          <source>00, 01, &amp;hellip;, 23</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eee6f850849dd73699c5a55cab4cb96cdcffe419" translate="yes" xml:space="preserve">
          <source>00, 01, &amp;hellip;, 53</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a3c4c27627651fd85ead2b05616d3bbcf7df34f" translate="yes" xml:space="preserve">
          <source>00, 01, &amp;hellip;, 59</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81b69d2ca60e7fc870716a18613922482f60a129" translate="yes" xml:space="preserve">
          <source>00, 01, &amp;hellip;, 99</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da1ff64fad648cd53b1808a37994a614cae265c4" translate="yes" xml:space="preserve">
          <source>000000, 000001, &amp;hellip;, 999999</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67641d49e6aca9956fc18d9fe2732dc88265aee0" translate="yes" xml:space="preserve">
          <source>0001, 0002, &amp;hellip;, 2013, 2014, &amp;hellip;, 9998, 9999</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="129e7ecc3f18eba37b9eb3b4791c02543ca3b0da" translate="yes" xml:space="preserve">
          <source>001, 002, &amp;hellip;, 366</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bfd68766f78216b9dbfd5a9cc685955040fc7816" translate="yes" xml:space="preserve">
          <source>01, 02, &amp;hellip;, 12</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a6b03ba75a3328cdc0db3e47dae2c70e3a8e191" translate="yes" xml:space="preserve">
          <source>01, 02, &amp;hellip;, 31</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ea0f3e31a2e40157e76866de8a5fa74d4649d94" translate="yes" xml:space="preserve">
          <source>01, 02, &amp;hellip;, 53</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f58f789461f98a511e1beda3e937cba3467b1e9" translate="yes" xml:space="preserve">
          <source>0: &lt;code&gt;raise&lt;/code&gt; (re-raise previous exception)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1cc70db2746b23670935f307a34ba01ba4be78dc" translate="yes" xml:space="preserve">
          <source>0: Automatically determine the window size from the zlib header. Only supported since zlib 1.2.3.5.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f831173613e33f3609ec589bc802b32cf9d43b8" translate="yes" xml:space="preserve">
          <source>0xxxxxxx</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e36765c42585416e2f97cb2d985e95945ed8ead" translate="yes" xml:space="preserve">
          <source>1, 2, &amp;hellip;, 7</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b91f8a2810349cfb3860c128f4f7148e9344a8b" translate="yes" xml:space="preserve">
          <source>1-character bytes object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7cbb9fff41c368e7215f709d1ce2399d997673af" translate="yes" xml:space="preserve">
          <source>1-character string</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd3451b03fce4fb50e7e436145754f90be0dd1ac" translate="yes" xml:space="preserve">
          <source>110xxxxx 10xxxxxx</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36bc4725160f044d48fd713c8f61714ea7d02fb7" translate="yes" xml:space="preserve">
          <source>1110xxxx 10xxxxxx 10xxxxxx</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="969ad59845dd8e9389c1aecaca0ba386a891cf59" translate="yes" xml:space="preserve">
          <source>11110xxx 10xxxxxx 10xxxxxx 10xxxxxx</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91aeb94e81ad6d43ff8ad172e02569523e865645" translate="yes" xml:space="preserve">
          <source>1125, ibm1125, cp866u, ruscii</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d83a8758ffe17fb62944a9646c8810044786ebe4" translate="yes" xml:space="preserve">
          <source>180 - south</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f7a3649e2c4ae5dcee806430b01e581d2687d0a" translate="yes" xml:space="preserve">
          <source>180 - west</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e99f0aa4f6c18fbfce161f67c906f342f50f1abf" translate="yes" xml:space="preserve">
          <source>1: &lt;code&gt;raise TOS&lt;/code&gt; (raise exception instance or type at &lt;code&gt;TOS&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="022258103daf3c98662e3833d8ef082186333fb1" translate="yes" xml:space="preserve">
          <source>2.1.0b1</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f52591bf7c9e64e485474ec910f45c112192ca6c" translate="yes" xml:space="preserve">
          <source>2.2.0a1</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="366c265e77beb4b8377a1ee0e650498ad318a52d" translate="yes" xml:space="preserve">
          <source>2.2.0a2</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abca21d0f1f7620ee2ab3d5ec053f60b194d4fb9" translate="yes" xml:space="preserve">
          <source>2.5.0a1</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dfed38e77780ee6e4f84a07c6eb5826a40bc1b1f" translate="yes" xml:space="preserve">
          <source>2.6.0a2</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8de3f69a1f421db304e3d2ebdbaf170402703c44" translate="yes" xml:space="preserve">
          <source>270 - south</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f2743d949d25de62e3971fb2f7514ccc3861b6a" translate="yes" xml:space="preserve">
          <source>270 - west</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5e9edc6436365f0edeeb7691453c4f51fe0d753" translate="yes" xml:space="preserve">
          <source>273, IBM273, csIBM273</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d352f2bf6edc82da00232c12a6c81474aa32282f" translate="yes" xml:space="preserve">
          <source>2: &lt;code&gt;raise TOS1 from TOS&lt;/code&gt; (raise exception instance or type at &lt;code&gt;TOS1&lt;/code&gt; with &lt;code&gt;__cause__&lt;/code&gt; set to &lt;code&gt;TOS&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92ccc5b73d3fe924c72836d31c43c42e312d4e92" translate="yes" xml:space="preserve">
          <source>2to3 - Automated Python 2 to 3 code translation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4eca6c0dfcd699162210c52ef04f62affd02fc36" translate="yes" xml:space="preserve">
          <source>3 breadth-first trees</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4fcc1f26912a823a871b95ed1a86d3781daa66d" translate="yes" xml:space="preserve">
          <source>3.5.0b1</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6c32e159890809e9698c8723c0a014689ccfd07" translate="yes" xml:space="preserve">
          <source>3.7.0b1</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1ecc30e1fd210714612b4ee15e19cea67330beb" translate="yes" xml:space="preserve">
          <source>32-bit</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bfc68109de9b520fce82625981ad08c9c92565c" translate="yes" xml:space="preserve">
          <source>32-bit number.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96403180cf5f23ba62c4ba8e9eacfd5491142050" translate="yes" xml:space="preserve">
          <source>3DES was dropped from the default cipher string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27ef3aa0a2dadaf78acc5b43c15a18d0bd716844" translate="yes" xml:space="preserve">
          <source>437, IBM437</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6cb904d5558d1ecfa10faa3c346ecf286755b851" translate="yes" xml:space="preserve">
          <source>64-bit</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e28e719bedac735713edc50ba73b35136924902" translate="yes" xml:space="preserve">
          <source>64-bit Specific</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d72c97b8d4bfa7cd0be2556a5b6f5c5db3a33b2c" translate="yes" xml:space="preserve">
          <source>646, us-ascii</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="794c744848fde1ec7d3a7ddce8caa3872004dace" translate="yes" xml:space="preserve">
          <source>8 + &lt;em&gt;n&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4922361df188bd17f564d7bc2996e4e1833847bc" translate="yes" xml:space="preserve">
          <source>850, IBM850</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0afa1ce87cfc435ef75cd110937c33d76dfad2ef" translate="yes" xml:space="preserve">
          <source>852, IBM852</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96f787962e03c6135521c95b3c94bcd984d2ebf8" translate="yes" xml:space="preserve">
          <source>855, IBM855</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9678894f8097d180552599856c69e1f003d288e1" translate="yes" xml:space="preserve">
          <source>857, IBM857</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f580e81906e59b38dde15d9011723e003d2ed0c3" translate="yes" xml:space="preserve">
          <source>858, IBM858</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf5d7ed6143e128692dbd8e85f9d42bfdf99db61" translate="yes" xml:space="preserve">
          <source>860, IBM860</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c0debb9357f2e96059ddb9772e5889ccbe8584d" translate="yes" xml:space="preserve">
          <source>861, CP-IS, IBM861</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="286f31742d8615658b25782c2e7e4bed06447a8f" translate="yes" xml:space="preserve">
          <source>862, IBM862</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4696fca6c4053fdbd9ffda02959ac59da162e83f" translate="yes" xml:space="preserve">
          <source>863, IBM863</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3a12a380e4436825d27f26a1b4ec699c4d331f9" translate="yes" xml:space="preserve">
          <source>865, IBM865</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2f74149d4c449641472db968ea34d45fe60d903" translate="yes" xml:space="preserve">
          <source>866, IBM866</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f18a16b5a998733d84f6f8f39bebe55b0aeac87" translate="yes" xml:space="preserve">
          <source>869, CP-GR, IBM869</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b36527bfed6cf19dfe5dd73253826e53aaabb6c3" translate="yes" xml:space="preserve">
          <source>90 - east</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0651335b7c9b776d0baae46367c8863e45b622de" translate="yes" xml:space="preserve">
          <source>90 - north</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e8d8e5da7af8d42488dc99424511b67957e11cb" translate="yes" xml:space="preserve">
          <source>932, ms932, mskanji, ms-kanji</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72f559dafc62e041a9099a5b18f6d9da84405c65" translate="yes" xml:space="preserve">
          <source>936, cp936, ms936</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="177959a7e1ff766ab6ab01370231752be509c881" translate="yes" xml:space="preserve">
          <source>949, ms949, uhc</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da0463218ef570676d5047bc62f3103116e76e34" translate="yes" xml:space="preserve">
          <source>950, ms950</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6fd1aa19128ddfea4890bc48967f1232e9566cc" translate="yes" xml:space="preserve">
          <source>: selects the tab following the currently selected one.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="023966c250d2ddc7df77b586d0350c9b6588c784" translate="yes" xml:space="preserve">
          <source>: selects the tab preceding the currently selected one.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e01398251ffdc9a020b5d4f297eb8f02bb8aab5" translate="yes" xml:space="preserve">
          <source>: where &lt;em&gt;K&lt;/em&gt; is the mnemonic (underlined) character of any tab, will select that tab.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a2c0f334b3423594434e11a7b8c9cee14d416fa" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#UnicodeError&quot;&gt;&lt;code&gt;UnicodeError&lt;/code&gt;&lt;/a&gt; has attributes that describe the encoding or decoding error. For example, &lt;code&gt;err.object[err.start:err.end]&lt;/code&gt; gives the particular invalid input that the codec failed on.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74e7036a3c0ef0d7085fa4dfb68aba82d4e2c6ef" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#action&quot;&gt;action&lt;/a&gt; - The basic type of action to be taken when this argument is encountered at the command line.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cef4b2db835adb8e17d14d46a122c5ceae257ca1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#action&quot;&gt;action&lt;/a&gt; - the basic type of action to be taken when this argument is encountered at the command line</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0a5b2a45fc5cf27fd84dadce81ccc1f588f03c6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#add-help&quot;&gt;add_help&lt;/a&gt; - Add a &lt;code&gt;-h/--help&lt;/code&gt; option to the parser (default: &lt;code&gt;True&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9038c0da2448dfa515afaeb80f5ea3096b33f21c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#allow-abbrev&quot;&gt;allow_abbrev&lt;/a&gt; - Allows long options to be abbreviated if the abbreviation is unambiguous. (default: &lt;code&gt;True&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06b76107b59e833a91cc0e9523a9f12e1ed6f909" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#argparse.ArgumentDefaultsHelpFormatter&quot;&gt;&lt;code&gt;ArgumentDefaultsHelpFormatter&lt;/code&gt;&lt;/a&gt; automatically adds information about default values to each of the argument help messages:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1189659879d1f96535f39aba506f1f6896c9fa3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#argparse.ArgumentParser&quot;&gt;&lt;code&gt;ArgumentParser&lt;/code&gt;&lt;/a&gt; objects allow the help formatting to be customized by specifying an alternate formatting class. Currently, there are four such classes:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ea7d89dbb4bb491142d20983465dc61015cf46a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#argparse.ArgumentParser&quot;&gt;&lt;code&gt;ArgumentParser&lt;/code&gt;&lt;/a&gt; objects associate command-line arguments with actions. These actions can do just about anything with the command-line arguments associated with them, though most actions simply add an attribute to the object returned by &lt;a href=&quot;#argparse.ArgumentParser.parse_args&quot;&gt;&lt;code&gt;parse_args()&lt;/code&gt;&lt;/a&gt;. The &lt;code&gt;action&lt;/code&gt; keyword argument specifies how the command-line arguments should be handled. The supplied actions are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c17f341bc98b98bcb34c0487e8b9a9b1d79cb3d9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#argparse.ArgumentParser&quot;&gt;&lt;code&gt;ArgumentParser&lt;/code&gt;&lt;/a&gt; objects do not allow two actions with the same option string. By default, &lt;a href=&quot;#argparse.ArgumentParser&quot;&gt;&lt;code&gt;ArgumentParser&lt;/code&gt;&lt;/a&gt; objects raise an exception if an attempt is made to create an argument with an option string that is already in use:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e30a8f348717fb923dc4bb613f59326cd1def0ce" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#argparse.ArgumentParser&quot;&gt;&lt;code&gt;ArgumentParser&lt;/code&gt;&lt;/a&gt; parses arguments through the &lt;a href=&quot;#argparse.ArgumentParser.parse_args&quot;&gt;&lt;code&gt;parse_args()&lt;/code&gt;&lt;/a&gt; method. This will inspect the command line, convert each argument to the appropriate type and then invoke the appropriate action. In most cases, this means a simple &lt;a href=&quot;#argparse.Namespace&quot;&gt;&lt;code&gt;Namespace&lt;/code&gt;&lt;/a&gt; object will be built up from attributes parsed out of the command line:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8ba75a40491770e3ef917d1012ef35d2c6b3ef9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#argparse.ArgumentParser.parse_known_intermixed_args&quot;&gt;&lt;code&gt;parse_known_intermixed_args()&lt;/code&gt;&lt;/a&gt; returns a two item tuple containing the populated namespace and the list of remaining argument strings. &lt;a href=&quot;#argparse.ArgumentParser.parse_intermixed_args&quot;&gt;&lt;code&gt;parse_intermixed_args()&lt;/code&gt;&lt;/a&gt; raises an error if there are any remaining unparsed argument strings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f54d4ee58471f58cef6b4b78f91a418120fe1ec" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#argparse.MetavarTypeHelpFormatter&quot;&gt;&lt;code&gt;MetavarTypeHelpFormatter&lt;/code&gt;&lt;/a&gt; uses the name of the &lt;a href=&quot;#type&quot;&gt;type&lt;/a&gt; argument for each argument as the display name for its values (rather than using the &lt;a href=&quot;#dest&quot;&gt;dest&lt;/a&gt; as the regular formatter does):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57c9d1b8dbe65d031ae9f972de0c3434a250cc1a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#argparse.RawDescriptionHelpFormatter&quot;&gt;&lt;code&gt;RawDescriptionHelpFormatter&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#argparse.RawTextHelpFormatter&quot;&gt;&lt;code&gt;RawTextHelpFormatter&lt;/code&gt;&lt;/a&gt; give more control over how textual descriptions are displayed. By default, &lt;a href=&quot;#argparse.ArgumentParser&quot;&gt;&lt;code&gt;ArgumentParser&lt;/code&gt;&lt;/a&gt; objects line-wrap the &lt;a href=&quot;#description&quot;&gt;description&lt;/a&gt; and &lt;a href=&quot;#epilog&quot;&gt;epilog&lt;/a&gt; texts in command-line help messages:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1bb2e5c5565d8844756821893fe9dbfa9b76e0de" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#argparse.RawTextHelpFormatter&quot;&gt;&lt;code&gt;RawTextHelpFormatter&lt;/code&gt;&lt;/a&gt; maintains whitespace for all sorts of help text, including argument descriptions. However, multiple new lines are replaced with one. If you wish to preserve multiple blank lines, add spaces between the newlines.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c69005d86383203ff994c9476c1071599dd2222c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#args&quot;&gt;args&lt;/a&gt; - List of strings to parse. The default is taken from &lt;a href=&quot;sys#sys.argv&quot;&gt;&lt;code&gt;sys.argv&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3df462f4c9f17cc739908465e3657982a0290dae" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#argument-default&quot;&gt;argument_default&lt;/a&gt; - The global default value for arguments (default: &lt;code&gt;None&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d58618156f4926ae0a483c900f333d681a380954" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#asyncio-debug-mode&quot;&gt;Enable the debug mode&lt;/a&gt; to get the traceback where the task was created:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea6c0459703781e07e0c355a2705a5da04be8c4f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#asyncio.BaseProtocol.pause_writing&quot;&gt;&lt;code&gt;pause_writing()&lt;/code&gt;&lt;/a&gt; is called when the buffer size becomes greater than or equal to the &lt;em&gt;high&lt;/em&gt; value. If writing has been paused, &lt;a href=&quot;#asyncio.BaseProtocol.resume_writing&quot;&gt;&lt;code&gt;resume_writing()&lt;/code&gt;&lt;/a&gt; is called when the buffer size becomes less than or equal to the &lt;em&gt;low&lt;/em&gt; value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2454a4f4532178a0953b11d1e867b8678ffe5d60" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#asyncio.BufferedProtocol.get_buffer&quot;&gt;&lt;code&gt;get_buffer()&lt;/code&gt;&lt;/a&gt; can be called an arbitrary number of times during a connection. However, &lt;a href=&quot;#asyncio.Protocol.eof_received&quot;&gt;&lt;code&gt;protocol.eof_received()&lt;/code&gt;&lt;/a&gt; is called at most once and, if called, &lt;a href=&quot;#asyncio.BufferedProtocol.get_buffer&quot;&gt;&lt;code&gt;get_buffer()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#asyncio.BufferedProtocol.buffer_updated&quot;&gt;&lt;code&gt;buffer_updated()&lt;/code&gt;&lt;/a&gt; won&amp;rsquo;t be called after it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea3a10454d2d1732a6e83aff05b52d6a3466d445" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#asyncio.Future.result&quot;&gt;&lt;code&gt;asyncio.Future.result()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#asyncio.Future.exception&quot;&gt;&lt;code&gt;asyncio.Future.exception()&lt;/code&gt;&lt;/a&gt; do not accept the &lt;em&gt;timeout&lt;/em&gt; argument.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd4b28c12208f36742a0a541a061fc0bf9faab78" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#asyncio.Future.result&quot;&gt;&lt;code&gt;asyncio.Future.result()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#asyncio.Future.exception&quot;&gt;&lt;code&gt;asyncio.Future.exception()&lt;/code&gt;&lt;/a&gt; raise an &lt;a href=&quot;asyncio-exceptions#asyncio.InvalidStateError&quot;&gt;&lt;code&gt;InvalidStateError&lt;/code&gt;&lt;/a&gt; exception when the Future is not &lt;em&gt;done&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1744ff2d2612933351d16d2919cc548329d34b60" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#asyncio.SelectorEventLoop&quot;&gt;&lt;code&gt;SelectorEventLoop&lt;/code&gt;&lt;/a&gt; does not support the above methods on Windows. Use &lt;a href=&quot;#asyncio.ProactorEventLoop&quot;&gt;&lt;code&gt;ProactorEventLoop&lt;/code&gt;&lt;/a&gt; instead for Windows.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6cdf4f58f840144196705df276e5eaed7cbc48af" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#asyncio.Task&quot;&gt;&lt;code&gt;asyncio.Task&lt;/code&gt;&lt;/a&gt; inherits from &lt;a href=&quot;asyncio-future#asyncio.Future&quot;&gt;&lt;code&gt;Future&lt;/code&gt;&lt;/a&gt; all of its APIs except &lt;a href=&quot;asyncio-future#asyncio.Future.set_result&quot;&gt;&lt;code&gt;Future.set_result()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;asyncio-future#asyncio.Future.set_exception&quot;&gt;&lt;code&gt;Future.set_exception()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="349056c4f87178037e6b99eecc72ae0b2a9b09b2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#asyncio.Task.cancelled&quot;&gt;&lt;code&gt;cancelled()&lt;/code&gt;&lt;/a&gt; can be used to check if the Task was cancelled. The method returns &lt;code&gt;True&lt;/code&gt; if the wrapped coroutine did not suppress the &lt;a href=&quot;asyncio-exceptions#asyncio.CancelledError&quot;&gt;&lt;code&gt;CancelledError&lt;/code&gt;&lt;/a&gt; exception and was actually cancelled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a31adb7d9d27a207f6e0deaa35124e167b33d54" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#asyncio.loop.create_connection&quot;&gt;&lt;code&gt;loop.create_connection()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;asyncio-stream#asyncio.open_connection&quot;&gt;&lt;code&gt;asyncio.open_connection()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85dfc83b2c957d94b74c3428a8d789904dbc6923" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#asyncio.loop.create_server&quot;&gt;&lt;code&gt;loop.create_server()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;asyncio-stream#asyncio.start_server&quot;&gt;&lt;code&gt;start_server()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b564e560e54b183a643cc257871bf6a3f1d97403" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#bdb.Breakpoint&quot;&gt;&lt;code&gt;Breakpoint&lt;/code&gt;&lt;/a&gt; instances have the following methods:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbf9ea8a1e797492b3464ccf1f6772cb3f40dae7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#bytearray&quot;&gt;&lt;code&gt;bytearray&lt;/code&gt;&lt;/a&gt; objects are a mutable counterpart to &lt;a href=&quot;#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt; objects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94e865421ff1b22304dc752a1f5bf5d958cf6b1c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#bz2.BZ2File&quot;&gt;&lt;code&gt;BZ2File&lt;/code&gt;&lt;/a&gt; also provides the following method:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae2d0cfbe7af5869a0194de375137a5c257f8af9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#bz2.BZ2File&quot;&gt;&lt;code&gt;BZ2File&lt;/code&gt;&lt;/a&gt; provides all of the members specified by the &lt;a href=&quot;io#io.BufferedIOBase&quot;&gt;&lt;code&gt;io.BufferedIOBase&lt;/code&gt;&lt;/a&gt;, except for &lt;code&gt;detach()&lt;/code&gt; and &lt;code&gt;truncate()&lt;/code&gt;. Iteration and the &lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#with&quot;&gt;&lt;code&gt;with&lt;/code&gt;&lt;/a&gt; statement are supported.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11db4c856530ccd0ea29165421664de8cc83aa3c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#calendar.Calendar&quot;&gt;&lt;code&gt;Calendar&lt;/code&gt;&lt;/a&gt; instances have the following methods:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21f42b37ccc193bebea4167f712f9263d317d4f7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#calendar.TextCalendar&quot;&gt;&lt;code&gt;TextCalendar&lt;/code&gt;&lt;/a&gt; instances have the following methods:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e116264c7d934105104c82196086b3e051351f50" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#choices&quot;&gt;choices&lt;/a&gt; - A container of the allowable values for the argument.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9770d4b76b273c565df40d543a77da8dfef71ad9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#cmdoption-zipapp-c&quot;&gt;&lt;code&gt;--compress&lt;/code&gt;&lt;/a&gt; has no effect when copying an archive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf82bc32b5e049e393c2caee898e9bd64df80fd7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#cmdoption-zipapp-m&quot;&gt;&lt;code&gt;--main&lt;/code&gt;&lt;/a&gt; cannot be specified when copying an archive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4eaaa4d4c2c7892ece48418ae9831fe7653e2466" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#codecs.StreamReaderWriter&quot;&gt;&lt;code&gt;StreamReaderWriter&lt;/code&gt;&lt;/a&gt; instances define the combined interfaces of &lt;a href=&quot;#codecs.StreamReader&quot;&gt;&lt;code&gt;StreamReader&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#codecs.StreamWriter&quot;&gt;&lt;code&gt;StreamWriter&lt;/code&gt;&lt;/a&gt; classes. They inherit all other methods and attributes from the underlying stream.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f61836f54b363243daadcc3326297e1cb2ab32e4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#codecs.StreamRecoder&quot;&gt;&lt;code&gt;StreamRecoder&lt;/code&gt;&lt;/a&gt; instances define the combined interfaces of &lt;a href=&quot;#codecs.StreamReader&quot;&gt;&lt;code&gt;StreamReader&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#codecs.StreamWriter&quot;&gt;&lt;code&gt;StreamWriter&lt;/code&gt;&lt;/a&gt; classes. They inherit all other methods and attributes from the underlying stream.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="555ddbc119d5af1b8cde71ceb16a46b19b804beb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#collections.ChainMap&quot;&gt;&lt;code&gt;ChainMap&lt;/code&gt;&lt;/a&gt; Examples and Recipes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbd297396758cf9786f664ee4ad3c5cc54ab337a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#collections.OrderedDict&quot;&gt;&lt;code&gt;OrderedDict&lt;/code&gt;&lt;/a&gt; Examples and Recipes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="289c833181b87abccef0c8df94f9b4ebb2a00639" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#collections.OrderedDict&quot;&gt;&lt;code&gt;OrderedDict&lt;/code&gt;&lt;/a&gt; has a &lt;code&gt;move_to_end()&lt;/code&gt; method to efficiently reposition an element to an endpoint.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6e5d12bfd57a9b1f242b2a87e353063bd609bb5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#collections.abc.MappingView&quot;&gt;&lt;code&gt;MappingView&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#collections.abc.Collection&quot;&gt;&lt;code&gt;Collection&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79ebbf91422f7a408194b716ad030ac8b5204fb6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#collections.abc.MappingView&quot;&gt;&lt;code&gt;MappingView&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#collections.abc.Set&quot;&gt;&lt;code&gt;Set&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1dfdf13e499b2e7ad79cdecb1b94efdd734dd965" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#collections.abc.Reversible&quot;&gt;&lt;code&gt;Reversible&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#collections.abc.Collection&quot;&gt;&lt;code&gt;Collection&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d4c655e70446f3cc143c4123f1a89d6000c47e1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#collections.abc.Sized&quot;&gt;&lt;code&gt;Sized&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#collections.abc.Iterable&quot;&gt;&lt;code&gt;Iterable&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#collections.abc.Container&quot;&gt;&lt;code&gt;Container&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="011abd467c2d8b60dcd9a40c5d6c0580871095b0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#collections.defaultdict&quot;&gt;&lt;code&gt;defaultdict&lt;/code&gt;&lt;/a&gt; Examples</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27c1f6002444225322bdfbb94fa283b013130b77" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#collections.defaultdict&quot;&gt;&lt;code&gt;defaultdict&lt;/code&gt;&lt;/a&gt; objects support the following instance variable:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1563d5f1dfbf4b56d6f20901576c42fe1e7a6eaa" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#collections.defaultdict&quot;&gt;&lt;code&gt;defaultdict&lt;/code&gt;&lt;/a&gt; objects support the following method in addition to the standard &lt;a href=&quot;stdtypes#dict&quot;&gt;&lt;code&gt;dict&lt;/code&gt;&lt;/a&gt; operations:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b287945730cb593221299e165076dfd4c1b93325" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#collections.deque&quot;&gt;&lt;code&gt;deque&lt;/code&gt;&lt;/a&gt; Recipes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf5ea1941bef23f525cd344cdf2921083743f7e3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#concurrent.futures.ThreadPoolExecutor&quot;&gt;&lt;code&gt;ThreadPoolExecutor&lt;/code&gt;&lt;/a&gt; is an &lt;a href=&quot;#concurrent.futures.Executor&quot;&gt;&lt;code&gt;Executor&lt;/code&gt;&lt;/a&gt; subclass that uses a pool of threads to execute calls asynchronously.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e5893f0718a63abf61649d964f38c8a0c5e3984" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#conflict-handler&quot;&gt;conflict_handler&lt;/a&gt; - The strategy for resolving conflicting optionals (usually unnecessary)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87db38b80d38f0d1765627289e8d6237e3b16540" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#const&quot;&gt;const&lt;/a&gt; - A constant value required by some &lt;a href=&quot;#action&quot;&gt;action&lt;/a&gt; and &lt;a href=&quot;#nargs&quot;&gt;nargs&lt;/a&gt; selections.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fafceff5606489819499af885044fce5b1a5e9cc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#contextlib.ContextDecorator&quot;&gt;&lt;code&gt;ContextDecorator&lt;/code&gt;&lt;/a&gt; makes it possible to use a context manager in both an ordinary &lt;code&gt;with&lt;/code&gt; statement and also as a function decorator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b496e962067d9677538d0455dc9f508d03aa3cd2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#contextlib.ExitStack&quot;&gt;&lt;code&gt;ExitStack&lt;/code&gt;&lt;/a&gt; makes it possible to instead register a callback for execution at the end of a &lt;code&gt;with&lt;/code&gt; statement, and then later decide to skip executing that callback:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="527cb447bf61feb6ab06c473a2e9f4943a8c922c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#contextlib.contextmanager&quot;&gt;&lt;code&gt;contextmanager()&lt;/code&gt;&lt;/a&gt; uses &lt;a href=&quot;#contextlib.ContextDecorator&quot;&gt;&lt;code&gt;ContextDecorator&lt;/code&gt;&lt;/a&gt; so the context managers it creates can be used as decorators as well as in &lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#with&quot;&gt;&lt;code&gt;with&lt;/code&gt;&lt;/a&gt; statements. When used as a decorator, a new generator instance is implicitly created on each function call (this allows the otherwise &amp;ldquo;one-shot&amp;rdquo; context managers created by &lt;a href=&quot;#contextlib.contextmanager&quot;&gt;&lt;code&gt;contextmanager()&lt;/code&gt;&lt;/a&gt; to meet the requirement that context managers support multiple invocations in order to be used as decorators).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d34292c9eed0731edffe1bc972aa72d81dcee97c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#curses.start_color&quot;&gt;&lt;code&gt;start_color()&lt;/code&gt;&lt;/a&gt; initializes eight basic colors (black, red, green, yellow, blue, magenta, cyan, and white), and two global variables in the &lt;a href=&quot;#module-curses&quot;&gt;&lt;code&gt;curses&lt;/code&gt;&lt;/a&gt; module, &lt;code&gt;COLORS&lt;/code&gt; and &lt;code&gt;COLOR_PAIRS&lt;/code&gt;, containing the maximum number of colors and color-pairs the terminal can support. It also restores the colors on the terminal to the values they had when the terminal was just turned on.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="783ece8bb29b6fd42e1e0e1a34be3b17abd2dc14" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#curses.textpad.Textbox&quot;&gt;&lt;code&gt;Textbox&lt;/code&gt;&lt;/a&gt; objects have the following methods:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4d718cc453522265bce83140bc72bfa9979e43c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#dataclasses.Field&quot;&gt;&lt;code&gt;Field&lt;/code&gt;&lt;/a&gt; objects describe each defined field. These objects are created internally, and are returned by the &lt;a href=&quot;#dataclasses.fields&quot;&gt;&lt;code&gt;fields()&lt;/code&gt;&lt;/a&gt; module-level method (see below). Users should never instantiate a &lt;a href=&quot;#dataclasses.Field&quot;&gt;&lt;code&gt;Field&lt;/code&gt;&lt;/a&gt; object directly. Its documented attributes are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee686b88f75d722002b7293543339ef7a03cd8cd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#datetime.date&quot;&gt;&lt;code&gt;date&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#datetime.datetime&quot;&gt;&lt;code&gt;datetime&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#datetime.time&quot;&gt;&lt;code&gt;time&lt;/code&gt;&lt;/a&gt; objects all support a &lt;code&gt;strftime(format)&lt;/code&gt; method, to create a string representing the time under the control of an explicit format string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fb53937ca39e51854a733f76f20838d494385fd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#datetime.date&quot;&gt;&lt;code&gt;date&lt;/code&gt;&lt;/a&gt;; &lt;a href=&quot;#datetime.datetime&quot;&gt;&lt;code&gt;datetime&lt;/code&gt;&lt;/a&gt;; &lt;a href=&quot;#datetime.time&quot;&gt;&lt;code&gt;time&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81e4e001bc9c794816f2f03b0631f5ef7b8adae6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#datetime.datetime.fromtimestamp&quot;&gt;&lt;code&gt;fromtimestamp()&lt;/code&gt;&lt;/a&gt; may raise &lt;a href=&quot;exceptions#OverflowError&quot;&gt;&lt;code&gt;OverflowError&lt;/code&gt;&lt;/a&gt;, if the timestamp is out of the range of values supported by the platform C &lt;code&gt;localtime()&lt;/code&gt; or &lt;code&gt;gmtime()&lt;/code&gt; functions, and &lt;a href=&quot;exceptions#OSError&quot;&gt;&lt;code&gt;OSError&lt;/code&gt;&lt;/a&gt; on &lt;code&gt;localtime()&lt;/code&gt; or &lt;code&gt;gmtime()&lt;/code&gt; failure. It&amp;rsquo;s common for this to be restricted to years in 1970 through 2038. Note that on non-POSIX systems that include leap seconds in their notion of a timestamp, leap seconds are ignored by &lt;a href=&quot;#datetime.datetime.fromtimestamp&quot;&gt;&lt;code&gt;fromtimestamp()&lt;/code&gt;&lt;/a&gt;, and then it&amp;rsquo;s possible to have two timestamps differing by a second that yield identical &lt;a href=&quot;#datetime.datetime&quot;&gt;&lt;code&gt;datetime&lt;/code&gt;&lt;/a&gt; objects. This method is preferred over &lt;a href=&quot;#datetime.datetime.utcfromtimestamp&quot;&gt;&lt;code&gt;utcfromtimestamp()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1bfeb6f3ab54abf8beea9b780563389adbe99b58" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#datetime.time&quot;&gt;&lt;code&gt;time&lt;/code&gt;&lt;/a&gt; objects support comparison of &lt;a href=&quot;#datetime.time&quot;&gt;&lt;code&gt;time&lt;/code&gt;&lt;/a&gt; to &lt;a href=&quot;#datetime.time&quot;&gt;&lt;code&gt;time&lt;/code&gt;&lt;/a&gt;, where &lt;em&gt;a&lt;/em&gt; is considered less than &lt;em&gt;b&lt;/em&gt; when &lt;em&gt;a&lt;/em&gt; precedes &lt;em&gt;b&lt;/em&gt; in time. If one comparand is naive and the other is aware, &lt;a href=&quot;exceptions#TypeError&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; is raised if an order comparison is attempted. For equality comparisons, naive instances are never equal to aware instances.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a1e8578d026c081c1cdbf27579ce20d6ec9ba45" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#decimal.Decimal.logical_and&quot;&gt;&lt;code&gt;logical_and()&lt;/code&gt;&lt;/a&gt; is a logical operation which takes two &lt;em&gt;logical operands&lt;/em&gt; (see &lt;a href=&quot;#logical-operands-label&quot;&gt;Logical operands&lt;/a&gt;). The result is the digit-wise &lt;code&gt;and&lt;/code&gt; of the two operands.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a5845f7f7b76d5dda506004761e2efbe779136a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#decimal.Decimal.logical_invert&quot;&gt;&lt;code&gt;logical_invert()&lt;/code&gt;&lt;/a&gt; is a logical operation. The result is the digit-wise inversion of the operand.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00c8e97cda97f2bfdeb1543c9bca7f4806f8ec91" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#decimal.Decimal.logical_or&quot;&gt;&lt;code&gt;logical_or()&lt;/code&gt;&lt;/a&gt; is a logical operation which takes two &lt;em&gt;logical operands&lt;/em&gt; (see &lt;a href=&quot;#logical-operands-label&quot;&gt;Logical operands&lt;/a&gt;). The result is the digit-wise &lt;code&gt;or&lt;/code&gt; of the two operands.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="685098839720c65632d320c5515f13030ecd9052" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#decimal.Decimal.logical_xor&quot;&gt;&lt;code&gt;logical_xor()&lt;/code&gt;&lt;/a&gt; is a logical operation which takes two &lt;em&gt;logical operands&lt;/em&gt; (see &lt;a href=&quot;#logical-operands-label&quot;&gt;Logical operands&lt;/a&gt;). The result is the digit-wise exclusive or of the two operands.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47295d5c4acfcd2bc7f122ce240ba7c15e5b7b5a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#default&quot;&gt;default&lt;/a&gt; - The value produced if the argument is absent from the command line.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="421b3434eb25cc370b260f404a31c534218c5123" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#description&quot;&gt;description&lt;/a&gt; - Text to display before the argument help (default: none)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bcbfb7abc2981fc9fa1226c59c4dc763f289865" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#dest&quot;&gt;dest&lt;/a&gt; - The name of the attribute to be added to the object returned by &lt;a href=&quot;#argparse.ArgumentParser.parse_args&quot;&gt;&lt;code&gt;parse_args()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2dad0a443630c344caaec3b10fd0a1e43ab9cc86" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#dest&quot;&gt;dest&lt;/a&gt; - name of the attribute under which sub-command name will be stored; by default &lt;code&gt;None&lt;/code&gt; and no value is stored</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d74872367fe552c3c6584044175945483a8d1e5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#dict.fromkeys&quot;&gt;&lt;code&gt;fromkeys()&lt;/code&gt;&lt;/a&gt; is a class method that returns a new dictionary. &lt;em&gt;value&lt;/em&gt; defaults to &lt;code&gt;None&lt;/code&gt;. All of the values refer to just a single instance, so it generally doesn&amp;rsquo;t make sense for &lt;em&gt;value&lt;/em&gt; to be a mutable object such as an empty list. To get distinct values, use a &lt;a href=&quot;https://docs.python.org/3.8/reference/expressions.html#dict&quot;&gt;dict comprehension&lt;/a&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05d311ca4b3bd7fa673c562fe47dc8627795d186" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#dict.popitem&quot;&gt;&lt;code&gt;popitem()&lt;/code&gt;&lt;/a&gt; is useful to destructively iterate over a dictionary, as often used in set algorithms. If the dictionary is empty, calling &lt;a href=&quot;#dict.popitem&quot;&gt;&lt;code&gt;popitem()&lt;/code&gt;&lt;/a&gt; raises a &lt;a href=&quot;exceptions#KeyError&quot;&gt;&lt;code&gt;KeyError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4659468063f4377cabc168b1fe3cbbdfca34adf6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#dict.update&quot;&gt;&lt;code&gt;update()&lt;/code&gt;&lt;/a&gt; accepts either another dictionary object or an iterable of key/value pairs (as tuples or other iterables of length two). If keyword arguments are specified, the dictionary is then updated with those key/value pairs: &lt;code&gt;d.update(red=1, blue=2)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98cb1f2feb0f29fce0c98736556c06297086cbf9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#difflib.Differ&quot;&gt;&lt;code&gt;Differ&lt;/code&gt;&lt;/a&gt; objects are used (deltas generated) via a single method:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71c9cb1550afe4397e675c38f70f3f2423df8e00" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#difflib.SequenceMatcher&quot;&gt;&lt;code&gt;SequenceMatcher&lt;/code&gt;&lt;/a&gt; computes and caches detailed information about the second sequence, so if you want to compare one sequence against many sequences, use &lt;a href=&quot;#difflib.SequenceMatcher.set_seq2&quot;&gt;&lt;code&gt;set_seq2()&lt;/code&gt;&lt;/a&gt; to set the commonly used sequence once and call &lt;a href=&quot;#difflib.SequenceMatcher.set_seq1&quot;&gt;&lt;code&gt;set_seq1()&lt;/code&gt;&lt;/a&gt; repeatedly, once for each of the other sequences.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db8ef29ee04d4008a137a61989502303930dc34f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#difflib.SequenceMatcher&quot;&gt;&lt;code&gt;SequenceMatcher&lt;/code&gt;&lt;/a&gt; objects have the following methods:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0280e407a38f8f9e92e8913135aa46c20afddc13" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#doctest.DocTest&quot;&gt;&lt;code&gt;DocTest&lt;/code&gt;&lt;/a&gt; defines the following attributes. They are initialized by the constructor, and should not be modified directly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54c7b7128eff11d547029a25df913774ce2d0563" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#doctest.DocTest&quot;&gt;&lt;code&gt;DocTest&lt;/code&gt;&lt;/a&gt;: A collection of &lt;a href=&quot;#doctest.Example&quot;&gt;&lt;code&gt;Example&lt;/code&gt;&lt;/a&gt;s, typically extracted from a single docstring or text file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="170cfaefe399e77aa01ca5b0a7a46036f58cfa6c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#doctest.DocTestFailure&quot;&gt;&lt;code&gt;DocTestFailure&lt;/code&gt;&lt;/a&gt; defines the following attributes:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bed142e388c2588c60956869b923e70f77a2c4ae" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#doctest.DocTestFinder&quot;&gt;&lt;code&gt;DocTestFinder&lt;/code&gt;&lt;/a&gt; defines the following method:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4db1c49756316782726a78d65a0c790461e3310" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#doctest.DocTestFinder&quot;&gt;&lt;code&gt;DocTestFinder&lt;/code&gt;&lt;/a&gt;: Finds all docstrings in a given module, and uses a &lt;a href=&quot;#doctest.DocTestParser&quot;&gt;&lt;code&gt;DocTestParser&lt;/code&gt;&lt;/a&gt; to create a &lt;a href=&quot;#doctest.DocTest&quot;&gt;&lt;code&gt;DocTest&lt;/code&gt;&lt;/a&gt; from every docstring that contains interactive examples.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ae3f8638df824501c3a9f8e9bf514060ca83b04" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#doctest.DocTestParser&quot;&gt;&lt;code&gt;DocTestParser&lt;/code&gt;&lt;/a&gt; defines the following methods:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0f81c291488b57378b8ba8208449b785a3a5b7b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#doctest.DocTestParser&quot;&gt;&lt;code&gt;DocTestParser&lt;/code&gt;&lt;/a&gt;: Creates a &lt;a href=&quot;#doctest.DocTest&quot;&gt;&lt;code&gt;DocTest&lt;/code&gt;&lt;/a&gt; object from a string (such as an object&amp;rsquo;s docstring).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3332939c78c75b1bede0ce8a43186f82aa8d2915" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#doctest.DocTestRunner&quot;&gt;&lt;code&gt;DocTestRunner&lt;/code&gt;&lt;/a&gt;: Executes the examples in a &lt;a href=&quot;#doctest.DocTest&quot;&gt;&lt;code&gt;DocTest&lt;/code&gt;&lt;/a&gt;, and uses an &lt;a href=&quot;#doctest.OutputChecker&quot;&gt;&lt;code&gt;OutputChecker&lt;/code&gt;&lt;/a&gt; to verify their output.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92a7eb0a9b47054f47c8c59c462b62522be61deb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#doctest.Example&quot;&gt;&lt;code&gt;Example&lt;/code&gt;&lt;/a&gt; defines the following attributes. They are initialized by the constructor, and should not be modified directly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6aba5b38aed512e446f96ecee391a6daf4807b72" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#doctest.Example&quot;&gt;&lt;code&gt;Example&lt;/code&gt;&lt;/a&gt;: A single Python &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-statement&quot;&gt;statement&lt;/a&gt;, paired with its expected output.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="543f68a4e20aeaa9bc8a3151e2cf876fe3f9ef95" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#doctest.OutputChecker&quot;&gt;&lt;code&gt;OutputChecker&lt;/code&gt;&lt;/a&gt; defines the following methods:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="422e118750b9ed3d40c3a886065e6df38093b0bc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#doctest.OutputChecker&quot;&gt;&lt;code&gt;OutputChecker&lt;/code&gt;&lt;/a&gt;: Compares the actual output from a doctest example with the expected output, and decides whether they match.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a6960f80ee21dab3ecc80e47b102c3a12626165" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#doctest.UnexpectedException&quot;&gt;&lt;code&gt;UnexpectedException&lt;/code&gt;&lt;/a&gt; defines the following attributes:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9442bf37f4afba5908c03408e0674c83a6c28c30" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#email.charset.Charset&quot;&gt;&lt;code&gt;Charset&lt;/code&gt;&lt;/a&gt; instances also have the following methods:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e17e76780ca4cb65b07f12f3a8e1cb51ab0e9a3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#email.charset.Charset&quot;&gt;&lt;code&gt;Charset&lt;/code&gt;&lt;/a&gt; instances have the following data attributes:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5efb9b31cfccb15092b734dfac4d13a34e7da062" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#email.header.decode_header&quot;&gt;&lt;code&gt;decode_header()&lt;/code&gt;&lt;/a&gt; takes a header value string and returns a sequence of pairs of the format &lt;code&gt;(decoded_string, charset)&lt;/code&gt; where &lt;em&gt;charset&lt;/em&gt; is the name of the character set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5e52c7b1c8d17f4fdb2d992abbc3240911e5277" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#email.message.EmailMessage&quot;&gt;&lt;code&gt;EmailMessage&lt;/code&gt;&lt;/a&gt; objects have the following instance attributes:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bcb35608c1ba55cf88697b85a24030b85ed6051e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#email.message.Message&quot;&gt;&lt;code&gt;Message&lt;/code&gt;&lt;/a&gt; objects can also optionally contain two instance attributes, which can be used when generating the plain text of a MIME message.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d573e77eb75a954e84d98221f87a76da7fe9797" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#email.policy.Policy&quot;&gt;&lt;code&gt;Policy&lt;/code&gt;&lt;/a&gt; instances are immutable, but they can be cloned, accepting the same keyword arguments as the class constructor and returning a new &lt;a href=&quot;#email.policy.Policy&quot;&gt;&lt;code&gt;Policy&lt;/code&gt;&lt;/a&gt; instance that is a copy of the original but with the specified attributes values changed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30f1414928b1e93a3566b7a99b8d0338be26fdc4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#enum.Enum&quot;&gt;&lt;code&gt;Enum&lt;/code&gt;&lt;/a&gt; classes always evaluate as &lt;a href=&quot;constants#True&quot;&gt;&lt;code&gt;True&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6216aac7e8541f66bb1bef646923f102c027779" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#enum.Enum&quot;&gt;&lt;code&gt;Enum&lt;/code&gt;&lt;/a&gt; members are instances of their &lt;a href=&quot;#enum.Enum&quot;&gt;&lt;code&gt;Enum&lt;/code&gt;&lt;/a&gt; class, and are normally accessed as &lt;code&gt;EnumClass.member&lt;/code&gt;. Under certain circumstances they can also be accessed as &lt;code&gt;EnumClass.member.member&lt;/code&gt;, but you should never do this as that lookup may fail or, worse, return something besides the &lt;a href=&quot;#enum.Enum&quot;&gt;&lt;code&gt;Enum&lt;/code&gt;&lt;/a&gt; member you are looking for (this is another good reason to use all-uppercase names for members):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6db8f2a8a798a8ec5d99930bb57bc3dacb86bd01" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#enum.Enum&quot;&gt;&lt;code&gt;Enum&lt;/code&gt;&lt;/a&gt; members that are mixed with non-&lt;a href=&quot;#enum.Enum&quot;&gt;&lt;code&gt;Enum&lt;/code&gt;&lt;/a&gt; types (such as &lt;a href=&quot;functions#int&quot;&gt;&lt;code&gt;int&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;stdtypes#str&quot;&gt;&lt;code&gt;str&lt;/code&gt;&lt;/a&gt;, etc.) are evaluated according to the mixed-in type&amp;rsquo;s rules; otherwise, all members evaluate as &lt;a href=&quot;constants#True&quot;&gt;&lt;code&gt;True&lt;/code&gt;&lt;/a&gt;. To make your own Enum&amp;rsquo;s boolean evaluation depend on the member&amp;rsquo;s value add the following to your class:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f161c436aea780f35abc817ce0036d48865b6da" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#enum.IntEnum&quot;&gt;&lt;code&gt;IntEnum&lt;/code&gt;&lt;/a&gt; values behave like integers in other ways you&amp;rsquo;d expect:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ba920043eeec04376be5d93975db5ceeb585eb5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#epilog&quot;&gt;epilog&lt;/a&gt; - Text to display after the argument help (default: none)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ca5741d11069558447d72497b97abd7c1c01539" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#faulthandler.enable&quot;&gt;&lt;code&gt;enable()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#faulthandler.dump_traceback_later&quot;&gt;&lt;code&gt;dump_traceback_later()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#faulthandler.register&quot;&gt;&lt;code&gt;register()&lt;/code&gt;&lt;/a&gt; keep the file descriptor of their &lt;em&gt;file&lt;/em&gt; argument. If the file is closed and its file descriptor is reused by a new file, or if &lt;a href=&quot;os#os.dup2&quot;&gt;&lt;code&gt;os.dup2()&lt;/code&gt;&lt;/a&gt; is used to replace the file descriptor, the traceback will be written into a different file. Call these functions again each time that the file is replaced.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b7ea8a497c4e8441bef30a4f9d9e49136d8e2b1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#formatter-class&quot;&gt;formatter_class&lt;/a&gt; - A class for customizing the help output</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a08be2b88d4eea303d9eb58c44e9e697fd6e81f1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#fromfile-prefix-chars&quot;&gt;fromfile_prefix_chars&lt;/a&gt; - The set of characters that prefix files from which additional arguments should be read (default: &lt;code&gt;None&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="724f713987d2a8755bedf138c4611251534a5304" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#ftplib.FTP&quot;&gt;&lt;code&gt;FTP&lt;/code&gt;&lt;/a&gt; instances have the following methods:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3e0f97680d4038f8917f6bfdbd660a973bf17ab" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#ftplib.FTP_TLS&quot;&gt;&lt;code&gt;FTP_TLS&lt;/code&gt;&lt;/a&gt; class inherits from &lt;a href=&quot;#ftplib.FTP&quot;&gt;&lt;code&gt;FTP&lt;/code&gt;&lt;/a&gt;, defining these additional objects:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="377c5c22a060d19326cf99dcc3a961c8b8c4859a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#functools.partial&quot;&gt;&lt;code&gt;partial&lt;/code&gt;&lt;/a&gt; objects are callable objects created by &lt;a href=&quot;#functools.partial&quot;&gt;&lt;code&gt;partial()&lt;/code&gt;&lt;/a&gt;. They have three read-only attributes:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="789d17049ba0cca26394b5c8e865b674d5667021" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#functools.partial&quot;&gt;&lt;code&gt;partial&lt;/code&gt;&lt;/a&gt; objects are like &lt;code&gt;function&lt;/code&gt; objects in that they are callable, weak referencable, and can have attributes. There are some important differences. For instance, the &lt;a href=&quot;stdtypes#definition.__name__&quot;&gt;&lt;code&gt;__name__&lt;/code&gt;&lt;/a&gt; and &lt;code&gt;__doc__&lt;/code&gt; attributes are not created automatically. Also, &lt;a href=&quot;#functools.partial&quot;&gt;&lt;code&gt;partial&lt;/code&gt;&lt;/a&gt; objects defined in classes behave like static methods and do not transform into bound methods during instance attribute look-up.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3cb94c782361f3dffdbc1f12f938987de9a9771e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#functools.update_wrapper&quot;&gt;&lt;code&gt;update_wrapper()&lt;/code&gt;&lt;/a&gt; may be used with callables other than functions. Any attributes named in &lt;em&gt;assigned&lt;/em&gt; or &lt;em&gt;updated&lt;/em&gt; that are missing from the object being wrapped are ignored (i.e. this function will not attempt to set them on the wrapper function). &lt;a href=&quot;exceptions#AttributeError&quot;&gt;&lt;code&gt;AttributeError&lt;/code&gt;&lt;/a&gt; is still raised if the wrapper function itself is missing any attributes named in &lt;em&gt;updated&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a18ce3edfd620dd3072cb56fafb75b0d4add4a2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#gettext.GNUTranslations&quot;&gt;&lt;code&gt;GNUTranslations&lt;/code&gt;&lt;/a&gt; parses optional metadata out of the translation catalog. It is convention with GNU &lt;strong&gt;gettext&lt;/strong&gt; to include metadata as the translation for the empty string. This metadata is in &lt;a href=&quot;https://tools.ietf.org/html/rfc822.html&quot; id=&quot;index-9&quot;&gt;&lt;strong&gt;RFC 822&lt;/strong&gt;&lt;/a&gt;-style &lt;code&gt;key: value&lt;/code&gt; pairs, and should contain the &lt;code&gt;Project-Id-Version&lt;/code&gt; key. If the key &lt;code&gt;Content-Type&lt;/code&gt; is found, then the &lt;code&gt;charset&lt;/code&gt; property is used to initialize the &amp;ldquo;protected&amp;rdquo; &lt;code&gt;_charset&lt;/code&gt; instance variable, defaulting to &lt;code&gt;None&lt;/code&gt; if not found. If the charset encoding is specified, then all message ids and message strings read from the catalog are converted to Unicode using this encoding, else ASCII is assumed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="199bff1705f460311ae56ec1cf5d12ff58be0334" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#gettext.find&quot;&gt;&lt;code&gt;find()&lt;/code&gt;&lt;/a&gt; then expands and normalizes the languages, and then iterates through them, searching for an existing file built of these components:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="033aeb4db5f3b9e5fcdcd21516d0e89502c583f5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#gzip.GzipFile&quot;&gt;&lt;code&gt;GzipFile&lt;/code&gt;&lt;/a&gt; also provides the following method and attribute:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c71ec5bcea4ef87cb10a80d97f22bfbf23bb9e48" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#gzip.GzipFile&quot;&gt;&lt;code&gt;GzipFile&lt;/code&gt;&lt;/a&gt; supports the &lt;a href=&quot;io#io.BufferedIOBase&quot;&gt;&lt;code&gt;io.BufferedIOBase&lt;/code&gt;&lt;/a&gt; interface, including iteration and the &lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#with&quot;&gt;&lt;code&gt;with&lt;/code&gt;&lt;/a&gt; statement. Only the &lt;code&gt;truncate()&lt;/code&gt; method isn&amp;rsquo;t implemented.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2221f1864ed664ec04b5c2db905954d0b9ceee6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#help&quot;&gt;help&lt;/a&gt; - A brief description of what the argument does.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="533d2d291c198725f40f053639259e8049bd1065" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#help&quot;&gt;help&lt;/a&gt; - help for sub-parser group in help output, by default &lt;code&gt;None&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="718e323e41356a9cca00c968db9bfcb16d55fcf5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#html.parser.HTMLParser&quot;&gt;&lt;code&gt;HTMLParser&lt;/code&gt;&lt;/a&gt; instances have the following methods:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ba156b04cc2e16a86e85d4e973cb0b552b5219d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#http.client.HTTPConnection&quot;&gt;&lt;code&gt;HTTPConnection&lt;/code&gt;&lt;/a&gt; instances have the following methods:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95b21086f076b910179770c4c609475b16c837fe" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#http.client.parse_headers&quot;&gt;&lt;code&gt;parse_headers()&lt;/code&gt;&lt;/a&gt; does not parse the start-line of a HTTP message; it only parses the &lt;code&gt;Name: value&lt;/code&gt; lines. The file has to be ready to read these field lines, so the first line should already be consumed before calling the function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c38b98185cf5036ed76537d5514171e3860583d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#http.cookiejar.Cookie&quot;&gt;&lt;code&gt;Cookie&lt;/code&gt;&lt;/a&gt; instances have Python attributes roughly corresponding to the standard cookie-attributes specified in the various cookie standards. The correspondence is not one-to-one, because there are complicated rules for assigning default values, because the &lt;code&gt;max-age&lt;/code&gt; and &lt;code&gt;expires&lt;/code&gt; cookie-attributes contain equivalent information, and because &lt;a href=&quot;https://tools.ietf.org/html/rfc2109.html&quot; id=&quot;index-21&quot;&gt;&lt;strong&gt;RFC 2109&lt;/strong&gt;&lt;/a&gt; cookies may be &amp;lsquo;downgraded&amp;rsquo; by &lt;a href=&quot;#module-http.cookiejar&quot;&gt;&lt;code&gt;http.cookiejar&lt;/code&gt;&lt;/a&gt; from version 1 to version 0 (Netscape) cookies.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc98e3e416d08fc96bdfdfce47b7f06822af143e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#http.cookiejar.CookieJar&quot;&gt;&lt;code&gt;CookieJar&lt;/code&gt;&lt;/a&gt; has the following methods:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a810b520f5ef1ba305f16a683d2ec269931ad7a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#http.cookiejar.CookieJar&quot;&gt;&lt;code&gt;CookieJar&lt;/code&gt;&lt;/a&gt; objects support the &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-iterator&quot;&gt;iterator&lt;/a&gt; protocol for iterating over contained &lt;a href=&quot;#http.cookiejar.Cookie&quot;&gt;&lt;code&gt;Cookie&lt;/code&gt;&lt;/a&gt; objects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4850fbd5edb0fc9e5e907cbb4d2ea4b5a03f4a72" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#http.cookiejar.DefaultCookiePolicy&quot;&gt;&lt;code&gt;DefaultCookiePolicy&lt;/code&gt;&lt;/a&gt; implements the following additional methods:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ca7782af31c1bca35ba09c4b3c86a944001bb93" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#http.cookiejar.DefaultCookiePolicy&quot;&gt;&lt;code&gt;DefaultCookiePolicy&lt;/code&gt;&lt;/a&gt; implements the standard accept / reject rules for Netscape and &lt;a href=&quot;https://tools.ietf.org/html/rfc2965.html&quot; id=&quot;index-2&quot;&gt;&lt;strong&gt;RFC 2965&lt;/strong&gt;&lt;/a&gt; cookies. By default, &lt;a href=&quot;https://tools.ietf.org/html/rfc2109.html&quot; id=&quot;index-3&quot;&gt;&lt;strong&gt;RFC 2109&lt;/strong&gt;&lt;/a&gt; cookies (ie. cookies received in a &lt;em&gt;Set-Cookie&lt;/em&gt; header with a version cookie-attribute of 1) are treated according to the RFC 2965 rules. However, if RFC 2965 handling is turned off or &lt;a href=&quot;#http.cookiejar.DefaultCookiePolicy.rfc2109_as_netscape&quot;&gt;&lt;code&gt;rfc2109_as_netscape&lt;/code&gt;&lt;/a&gt; is &lt;code&gt;True&lt;/code&gt;, RFC 2109 cookies are &amp;lsquo;downgraded&amp;rsquo; by the &lt;a href=&quot;#http.cookiejar.CookieJar&quot;&gt;&lt;code&gt;CookieJar&lt;/code&gt;&lt;/a&gt; instance to Netscape cookies, by setting the &lt;code&gt;version&lt;/code&gt; attribute of the &lt;a href=&quot;#http.cookiejar.Cookie&quot;&gt;&lt;code&gt;Cookie&lt;/code&gt;&lt;/a&gt; instance to 0. &lt;a href=&quot;#http.cookiejar.DefaultCookiePolicy&quot;&gt;&lt;code&gt;DefaultCookiePolicy&lt;/code&gt;&lt;/a&gt; also provides some parameters to allow some fine-tuning of policy.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6f1143f2d6e54e3813d6ee2e6d8e80520aa05ca" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#http.cookiejar.DefaultCookiePolicy&quot;&gt;&lt;code&gt;DefaultCookiePolicy&lt;/code&gt;&lt;/a&gt; instances have the following attributes, which are all initialised from the constructor arguments of the same name, and which may all be assigned to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7aa391e8908d3435276e406f84e9c6bd139a2ca" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#http.cookiejar.FileCookieJar&quot;&gt;&lt;code&gt;FileCookieJar&lt;/code&gt;&lt;/a&gt; implements the following additional methods:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd100804d40acc642e57172ff67de04b15a01f12" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#http.cookiejar.FileCookieJar&quot;&gt;&lt;code&gt;FileCookieJar&lt;/code&gt;&lt;/a&gt; instances have the following public attributes:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7db6e09c9053dc7cf56c31a31f04159af3f53b1e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#http.cookiejar.FileCookieJar.revert&quot;&gt;&lt;code&gt;revert()&lt;/code&gt;&lt;/a&gt; can raise the same exceptions as &lt;a href=&quot;#http.cookiejar.FileCookieJar.load&quot;&gt;&lt;code&gt;load()&lt;/code&gt;&lt;/a&gt;. If there is a failure, the object&amp;rsquo;s state will not be altered.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9220613847d8d3f2dce9ad2891e782e42ebb8f7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#http.server.BaseHTTPRequestHandler&quot;&gt;&lt;code&gt;BaseHTTPRequestHandler&lt;/code&gt;&lt;/a&gt; has the following attributes:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca1f8d785dd2e79490e55a20f250c985436d4263" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#http.server.BaseHTTPRequestHandler&quot;&gt;&lt;code&gt;BaseHTTPRequestHandler&lt;/code&gt;&lt;/a&gt; has the following instance variables:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7e2b141420983d2adfa9dcff88f799785c29897" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#http.server.CGIHTTPRequestHandler&quot;&gt;&lt;code&gt;CGIHTTPRequestHandler&lt;/code&gt;&lt;/a&gt; can be enabled in the command line by passing the &lt;code&gt;--cgi&lt;/code&gt; option:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8f08ef0e27918ea9dd82fa2a0778aea75b941ea" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#inspect.getattr_static&quot;&gt;&lt;code&gt;getattr_static()&lt;/code&gt;&lt;/a&gt; does not resolve descriptors, for example slot descriptors or getset descriptors on objects implemented in C. The descriptor object is returned instead of the underlying attribute.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="708c88fe8f2ded3840ad45237685f9f3af34531b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#inspect.getmembers&quot;&gt;&lt;code&gt;getmembers()&lt;/code&gt;&lt;/a&gt; will only return class attributes defined in the metaclass when the argument is a class and those attributes have been listed in the metaclass&amp;rsquo; custom &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__dir__&quot;&gt;&lt;code&gt;__dir__()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3bfd8cda6c8000d358c51c19f0ef55c8841bd572" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#io.BufferedIOBase&quot;&gt;&lt;code&gt;BufferedIOBase&lt;/code&gt;&lt;/a&gt; provides or overrides these methods and attribute in addition to those from &lt;a href=&quot;#io.IOBase&quot;&gt;&lt;code&gt;IOBase&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2abf7c90eec812cdef14d85c023ca3e0928761cb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#io.BufferedRWPair&quot;&gt;&lt;code&gt;BufferedRWPair&lt;/code&gt;&lt;/a&gt; does not attempt to synchronize accesses to its underlying raw streams. You should not pass it the same object as reader and writer; use &lt;a href=&quot;#io.BufferedRandom&quot;&gt;&lt;code&gt;BufferedRandom&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4f48e95316a761977f7e5ca0ca6a60c21f4afda" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#io.BufferedRWPair&quot;&gt;&lt;code&gt;BufferedRWPair&lt;/code&gt;&lt;/a&gt; implements all of &lt;a href=&quot;#io.BufferedIOBase&quot;&gt;&lt;code&gt;BufferedIOBase&lt;/code&gt;&lt;/a&gt;&amp;rsquo;s methods except for &lt;a href=&quot;#io.BufferedIOBase.detach&quot;&gt;&lt;code&gt;detach()&lt;/code&gt;&lt;/a&gt;, which raises &lt;a href=&quot;#io.UnsupportedOperation&quot;&gt;&lt;code&gt;UnsupportedOperation&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8cb1e9b9a6793f14aa638b887200a8f359c44586" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#io.BufferedRandom&quot;&gt;&lt;code&gt;BufferedRandom&lt;/code&gt;&lt;/a&gt; is capable of anything &lt;a href=&quot;#io.BufferedReader&quot;&gt;&lt;code&gt;BufferedReader&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#io.BufferedWriter&quot;&gt;&lt;code&gt;BufferedWriter&lt;/code&gt;&lt;/a&gt; can do. In addition, &lt;code&gt;seek()&lt;/code&gt; and &lt;code&gt;tell()&lt;/code&gt; are guaranteed to be implemented.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d3ddb3821782da5834c8d5534b3e90dee4cf6d3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#io.BufferedReader&quot;&gt;&lt;code&gt;BufferedReader&lt;/code&gt;&lt;/a&gt; provides or overrides these methods in addition to those from &lt;a href=&quot;#io.BufferedIOBase&quot;&gt;&lt;code&gt;BufferedIOBase&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#io.IOBase&quot;&gt;&lt;code&gt;IOBase&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d513c8ddf96afd7be156395d7db7cd9e3a03fbbf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#io.BufferedWriter&quot;&gt;&lt;code&gt;BufferedWriter&lt;/code&gt;&lt;/a&gt; provides or overrides these methods in addition to those from &lt;a href=&quot;#io.BufferedIOBase&quot;&gt;&lt;code&gt;BufferedIOBase&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#io.IOBase&quot;&gt;&lt;code&gt;IOBase&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="201b0b6b6d10043a42824657f6bd0b86169c256c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#io.BytesIO&quot;&gt;&lt;code&gt;BytesIO&lt;/code&gt;&lt;/a&gt; provides or overrides these methods in addition to those from &lt;a href=&quot;#io.BufferedIOBase&quot;&gt;&lt;code&gt;BufferedIOBase&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#io.IOBase&quot;&gt;&lt;code&gt;IOBase&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b2cb70c52220f90eb308e91cc7210393b6949a7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#io.FileIO&quot;&gt;&lt;code&gt;FileIO&lt;/code&gt;&lt;/a&gt; objects are thread-safe to the extent that the operating system calls (such as &lt;code&gt;read(2)&lt;/code&gt; under Unix) they wrap are thread-safe too.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afac23749242e96bb17de181311f7cbca70b2c27" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#io.FileIO&quot;&gt;&lt;code&gt;FileIO&lt;/code&gt;&lt;/a&gt; represents an OS-level file containing bytes data. It implements the &lt;a href=&quot;#io.RawIOBase&quot;&gt;&lt;code&gt;RawIOBase&lt;/code&gt;&lt;/a&gt; interface (and therefore the &lt;a href=&quot;#io.IOBase&quot;&gt;&lt;code&gt;IOBase&lt;/code&gt;&lt;/a&gt; interface, too).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="725b08ed340c3f307d6b1cba59fb10e1c9ebaa27" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#io.IOBase&quot;&gt;&lt;code&gt;IOBase&lt;/code&gt;&lt;/a&gt; (and its subclasses) supports the iterator protocol, meaning that an &lt;a href=&quot;#io.IOBase&quot;&gt;&lt;code&gt;IOBase&lt;/code&gt;&lt;/a&gt; object can be iterated over yielding the lines in a stream. Lines are defined slightly differently depending on whether the stream is a binary stream (yielding bytes), or a text stream (yielding character strings). See &lt;a href=&quot;#io.IOBase.readline&quot;&gt;&lt;code&gt;readline()&lt;/code&gt;&lt;/a&gt; below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3438b7595dce1cfd371470db65e5cad602515d74" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#io.IOBase&quot;&gt;&lt;code&gt;IOBase&lt;/code&gt;&lt;/a&gt; is also a context manager and therefore supports the &lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#with&quot;&gt;&lt;code&gt;with&lt;/code&gt;&lt;/a&gt; statement. In this example, &lt;em&gt;file&lt;/em&gt; is closed after the &lt;code&gt;with&lt;/code&gt; statement&amp;rsquo;s suite is finished&amp;mdash;even if an exception occurs:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5641670ee79158c14c264ad6d72949a342745a8c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#io.IOBase&quot;&gt;&lt;code&gt;IOBase&lt;/code&gt;&lt;/a&gt; provides these data attributes and methods:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d050f95f235f7711a3d49f15441897d59ccb0cfe" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#io.StringIO&quot;&gt;&lt;code&gt;StringIO&lt;/code&gt;&lt;/a&gt; provides this method in addition to those from &lt;a href=&quot;#io.TextIOBase&quot;&gt;&lt;code&gt;TextIOBase&lt;/code&gt;&lt;/a&gt; and its parents:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="900c249388381c204b345550768cb4d31dada53e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#io.StringIO&quot;&gt;&lt;code&gt;StringIO&lt;/code&gt;&lt;/a&gt;, however, is a native in-memory unicode container and will exhibit similar speed to &lt;a href=&quot;#io.BytesIO&quot;&gt;&lt;code&gt;BytesIO&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45dc5cad9577751b5850fdf3fc4c4c4f15c92100" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#io.TextIOBase&quot;&gt;&lt;code&gt;TextIOBase&lt;/code&gt;&lt;/a&gt; provides or overrides these data attributes and methods in addition to those from &lt;a href=&quot;#io.IOBase&quot;&gt;&lt;code&gt;IOBase&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54526b6b971b2861199a709aee41166b813056df" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#io.TextIOWrapper&quot;&gt;&lt;code&gt;TextIOWrapper&lt;/code&gt;&lt;/a&gt; objects are not thread-safe.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc559b0e636f88cd88ebe1e911afcd3cecc1f0ea" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#io.TextIOWrapper&quot;&gt;&lt;code&gt;TextIOWrapper&lt;/code&gt;&lt;/a&gt; provides these members in addition to those of &lt;a href=&quot;#io.TextIOBase&quot;&gt;&lt;code&gt;TextIOBase&lt;/code&gt;&lt;/a&gt; and its parents:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1bdbf54d6e8ce05a77906c62228bdca7e9df80df" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#ipaddress.IPv4Interface&quot;&gt;&lt;code&gt;IPv4Interface&lt;/code&gt;&lt;/a&gt; is a subclass of &lt;a href=&quot;#ipaddress.IPv4Address&quot;&gt;&lt;code&gt;IPv4Address&lt;/code&gt;&lt;/a&gt;, so it inherits all the attributes from that class. In addition, the following attributes are available:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7537de9fdfeba7045fc90919bf7c808d39b47e0c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#ipaddress.IPv6Interface&quot;&gt;&lt;code&gt;IPv6Interface&lt;/code&gt;&lt;/a&gt; is a subclass of &lt;a href=&quot;#ipaddress.IPv6Address&quot;&gt;&lt;code&gt;IPv6Address&lt;/code&gt;&lt;/a&gt;, so it inherits all the attributes from that class. In addition, the following attributes are available:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="584a29c18d31d4ed29102a514b326b86ec8b1588" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#itertools.groupby&quot;&gt;&lt;code&gt;groupby()&lt;/code&gt;&lt;/a&gt; is roughly equivalent to:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99b0ce33cbabc5be7ab1a01b8a9fa14f9fee9e4c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#json.JSONDecodeError&quot;&gt;&lt;code&gt;JSONDecodeError&lt;/code&gt;&lt;/a&gt; will be raised if the given JSON document is not valid.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f477b2c0b1b0889dc2613c1fab8e353e46339ee" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#list.sort&quot;&gt;&lt;code&gt;sort()&lt;/code&gt;&lt;/a&gt; accepts two arguments that can only be passed by keyword (&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#keyword-only-parameter&quot;&gt;keyword-only arguments&lt;/a&gt;):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f362526ae07e906cb4956720a62f389ce3aba00" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#locale.setlocale&quot;&gt;&lt;code&gt;setlocale()&lt;/code&gt;&lt;/a&gt; is not thread-safe on most systems. Applications typically start with a call of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d33574b75b3ad4f566c09e20e4d3ec4c4f163f54" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#logging.Formatter&quot;&gt;&lt;code&gt;Formatter&lt;/code&gt;&lt;/a&gt; objects have the following attributes and methods. They are responsible for converting a &lt;a href=&quot;#logging.LogRecord&quot;&gt;&lt;code&gt;LogRecord&lt;/code&gt;&lt;/a&gt; to (usually) a string which can be interpreted by either a human or an external system. The base &lt;a href=&quot;#logging.Formatter&quot;&gt;&lt;code&gt;Formatter&lt;/code&gt;&lt;/a&gt; allows a formatting string to be specified. If none is supplied, the default value of &lt;code&gt;'%(message)s'&lt;/code&gt; is used, which just includes the message in the logging call. To have additional items of information in the formatted output (such as a timestamp), keep reading.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92dff7eb6392cc02c0c6f17576e3ccc18962e53b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#logging.LogRecord&quot;&gt;&lt;code&gt;LogRecord&lt;/code&gt;&lt;/a&gt; instances are created automatically by the &lt;a href=&quot;#logging.Logger&quot;&gt;&lt;code&gt;Logger&lt;/code&gt;&lt;/a&gt; every time something is logged, and can be created manually via &lt;a href=&quot;#logging.makeLogRecord&quot;&gt;&lt;code&gt;makeLogRecord()&lt;/code&gt;&lt;/a&gt; (for example, from a pickled event received over the wire).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85da56427b9bd11eb48bbe91370c8c7da7fb1dfa" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#logging.LoggerAdapter&quot;&gt;&lt;code&gt;LoggerAdapter&lt;/code&gt;&lt;/a&gt; instances are used to conveniently pass contextual information into logging calls. For a usage example, see the section on &lt;a href=&quot;https://docs.python.org/3.8/howto/logging-cookbook.html#context-info&quot;&gt;adding contextual information to your logging output&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa4741ac529f5a849122903edd2b7fc91342d398" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#logging.config.dictConfig&quot;&gt;&lt;code&gt;dictConfig()&lt;/code&gt;&lt;/a&gt; calls &lt;code&gt;dictConfigClass&lt;/code&gt; passing the specified dictionary, and then calls the &lt;code&gt;configure()&lt;/code&gt; method on the returned object to put the configuration into effect:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9027a8b7d32089b6f9ec1812180b9f28019cf48e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#logging.handlers.MemoryHandler&quot;&gt;&lt;code&gt;MemoryHandler&lt;/code&gt;&lt;/a&gt; is a subclass of the more general &lt;a href=&quot;#logging.handlers.BufferingHandler&quot;&gt;&lt;code&gt;BufferingHandler&lt;/code&gt;&lt;/a&gt;, which is an abstract class. This buffers logging records in memory. Whenever each record is added to the buffer, a check is made by calling &lt;code&gt;shouldFlush()&lt;/code&gt; to see if the buffer should be flushed. If it should, then &lt;code&gt;flush()&lt;/code&gt; is expected to do the flushing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f48292bf1fcdd5290291acec1cbbe6775eb8d91" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#lzma.LZMAFile&quot;&gt;&lt;code&gt;LZMAFile&lt;/code&gt;&lt;/a&gt; supports all the members specified by &lt;a href=&quot;io#io.BufferedIOBase&quot;&gt;&lt;code&gt;io.BufferedIOBase&lt;/code&gt;&lt;/a&gt;, except for &lt;code&gt;detach()&lt;/code&gt; and &lt;code&gt;truncate()&lt;/code&gt;. Iteration and the &lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#with&quot;&gt;&lt;code&gt;with&lt;/code&gt;&lt;/a&gt; statement are supported.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2dc76192636bc966449a24b1cf5b6340167ac21" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#mailbox.Babyl&quot;&gt;&lt;code&gt;Babyl&lt;/code&gt;&lt;/a&gt; instances have all of the methods of &lt;a href=&quot;#mailbox.Mailbox&quot;&gt;&lt;code&gt;Mailbox&lt;/code&gt;&lt;/a&gt; in addition to the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9c28ff75b1621d6a2c485f4b59109e444d46c00" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#mailbox.BabylMessage&quot;&gt;&lt;code&gt;BabylMessage&lt;/code&gt;&lt;/a&gt; instances offer the following methods:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f2a1c68397c0b49d59762d972cf7cfb32ab8988" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#mailbox.BabylMessage&quot;&gt;&lt;code&gt;BabylMessage&lt;/code&gt;&lt;/a&gt; state</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be11652a1cb7c9656de96606c2969f37f0333897" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#mailbox.MH&quot;&gt;&lt;code&gt;MH&lt;/code&gt;&lt;/a&gt; instances do not keep any open files, so this method is equivalent to &lt;a href=&quot;#mailbox.MH.unlock&quot;&gt;&lt;code&gt;unlock()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be5d6a373441c3f3207ac6586da6dd375c355762" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#mailbox.MH&quot;&gt;&lt;code&gt;MH&lt;/code&gt;&lt;/a&gt; instances have all of the methods of &lt;a href=&quot;#mailbox.Mailbox&quot;&gt;&lt;code&gt;Mailbox&lt;/code&gt;&lt;/a&gt; in addition to the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97a1d24a358e208ee200392ab7aa6ca56689c5ae" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#mailbox.MHMessage&quot;&gt;&lt;code&gt;MHMessage&lt;/code&gt;&lt;/a&gt; instances offer the following methods:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2689b69b95eea0e7984884d6c3dc1fbf70ba855d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#mailbox.MHMessage&quot;&gt;&lt;code&gt;MHMessage&lt;/code&gt;&lt;/a&gt; state</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1dfc1107ff89d91d2c193333e31d1aaf9c86a49" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#mailbox.MMDFMessage&quot;&gt;&lt;code&gt;MMDFMessage&lt;/code&gt;&lt;/a&gt; instances offer the following methods, which are identical to those offered by &lt;a href=&quot;#mailbox.mboxMessage&quot;&gt;&lt;code&gt;mboxMessage&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d79fb634b9af42ae97894b36dd55c597934a38e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#mailbox.MMDFMessage&quot;&gt;&lt;code&gt;MMDFMessage&lt;/code&gt;&lt;/a&gt; state</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1b246efd7c66e001994af1a51246a519632fec8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#mailbox.Mailbox&quot;&gt;&lt;code&gt;Mailbox&lt;/code&gt;&lt;/a&gt; instances have the following methods:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb34f0d57c6d6006162645fc1b94a3e03b83d63c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#mailbox.Mailbox&quot;&gt;&lt;code&gt;Mailbox&lt;/code&gt;&lt;/a&gt; interface semantics differ from dictionary semantics in some noteworthy ways. Each time a message is requested, a new representation (typically a &lt;a href=&quot;#mailbox.Message&quot;&gt;&lt;code&gt;Message&lt;/code&gt;&lt;/a&gt; instance) is generated based upon the current state of the mailbox. Similarly, when a message is added to a &lt;a href=&quot;#mailbox.Mailbox&quot;&gt;&lt;code&gt;Mailbox&lt;/code&gt;&lt;/a&gt; instance, the provided message representation&amp;rsquo;s contents are copied. In neither case is a reference to the message representation kept by the &lt;a href=&quot;#mailbox.Mailbox&quot;&gt;&lt;code&gt;Mailbox&lt;/code&gt;&lt;/a&gt; instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c13a2f7944a309436ced504aab6ba3d87557a14a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#mailbox.Maildir&quot;&gt;&lt;code&gt;Maildir&lt;/code&gt;&lt;/a&gt; instances do not keep any open files and the underlying mailboxes do not support locking, so this method does nothing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6947cf4c501e7089ee70664ec22184381ec9f8bc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#mailbox.Maildir&quot;&gt;&lt;code&gt;Maildir&lt;/code&gt;&lt;/a&gt; instances have all of the methods of &lt;a href=&quot;#mailbox.Mailbox&quot;&gt;&lt;code&gt;Mailbox&lt;/code&gt;&lt;/a&gt; in addition to the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d83975bd4f3a67d3871464a353735be6163ac1d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#mailbox.MaildirMessage&quot;&gt;&lt;code&gt;MaildirMessage&lt;/code&gt;&lt;/a&gt; instances offer the following methods:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0153c5f0b348932b8d1821d8c24e3c43b75bec5b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#mailbox.MaildirMessage&quot;&gt;&lt;code&gt;MaildirMessage&lt;/code&gt;&lt;/a&gt; state</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62faa0eac46c36ba74bc0f36a292890f84ab17c8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#mailbox.mboxMessage&quot;&gt;&lt;code&gt;mboxMessage&lt;/code&gt;&lt;/a&gt; instances offer the following methods:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16c78c483acefbca51941a3904bcb7e7573bb82d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#mailbox.mboxMessage&quot;&gt;&lt;code&gt;mboxMessage&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#mailbox.MMDFMessage&quot;&gt;&lt;code&gt;MMDFMessage&lt;/code&gt;&lt;/a&gt; state</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a18d3c0dfa744be51cf9d4fcd82531c773c1f745" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#mailbox.mboxMessage&quot;&gt;&lt;code&gt;mboxMessage&lt;/code&gt;&lt;/a&gt; state</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f09671515505d974da70f1f75b2b89c7b64bdba" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#memoryview&quot;&gt;&lt;code&gt;memoryview&lt;/code&gt;&lt;/a&gt; has several methods:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29a3bb9c98829c55f52a0874036d079bf5b4fc99" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#memoryview&quot;&gt;&lt;code&gt;memoryview&lt;/code&gt;&lt;/a&gt; objects allow Python code to access the internal data of an object that supports the &lt;a href=&quot;https://docs.python.org/3.8/c-api/buffer.html#bufferobjects&quot;&gt;buffer protocol&lt;/a&gt; without copying.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bea64ea4f38a3a58e4378974983ba5ed75a73ac3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#metavar&quot;&gt;metavar&lt;/a&gt; - A name for the argument in usage messages.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07d9b4fcf90075aacb96f6d54cf5f0c71bd38152" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#metavar&quot;&gt;metavar&lt;/a&gt; - string presenting available sub-commands in help; by default it is &lt;code&gt;None&lt;/code&gt; and presents sub-commands in form {cmd1, cmd2, ..}</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="462ec9c2e5ae57f931c190bf61f004c847f04645" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#mmap.mmap&quot;&gt;&lt;code&gt;mmap&lt;/code&gt;&lt;/a&gt; can also be used as a context manager in a &lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#with&quot;&gt;&lt;code&gt;with&lt;/code&gt;&lt;/a&gt; statement:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ce6f1aa57f73f48f2b28eca43afbe31b4bee325" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#module-__future__&quot;&gt;&lt;code&gt;__future__&lt;/code&gt;&lt;/a&gt; is a real module, and serves three purposes:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8610bcf0c8c997278c51edef7a0059de30115bba" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#module-argparse&quot;&gt;&lt;code&gt;argparse&lt;/code&gt;&lt;/a&gt; supports silencing the help entry for certain options, by setting the &lt;code&gt;help&lt;/code&gt; value to &lt;code&gt;argparse.SUPPRESS&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97b02d4277721f35c62531593e457d07e02ad9e8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#module-cProfile&quot;&gt;&lt;code&gt;cProfile&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#module-profile&quot;&gt;&lt;code&gt;profile&lt;/code&gt;&lt;/a&gt; provide &lt;em&gt;deterministic profiling&lt;/em&gt; of Python programs. A &lt;em&gt;profile&lt;/em&gt; is a set of statistics that describes how often and for how long various parts of the program executed. These statistics can be formatted into reports via the &lt;a href=&quot;#module-pstats&quot;&gt;&lt;code&gt;pstats&lt;/code&gt;&lt;/a&gt; module.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b3b1fc0d826a731be226b41e24c7e2129752583" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#module-cProfile&quot;&gt;&lt;code&gt;cProfile&lt;/code&gt;&lt;/a&gt; is recommended for most users; it&amp;rsquo;s a C extension with reasonable overhead that makes it suitable for profiling long-running programs. Based on &lt;code&gt;lsprof&lt;/code&gt;, contributed by Brett Rosen and Ted Czotter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="407171b97973ad986e1af71a897a02e67898e4bd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#module-configparser&quot;&gt;&lt;code&gt;configparser&lt;/code&gt;&lt;/a&gt; objects behave as close to actual dictionaries as possible. The mapping interface is complete and adheres to the &lt;a href=&quot;collections.abc#collections.abc.MutableMapping&quot;&gt;&lt;code&gt;MutableMapping&lt;/code&gt;&lt;/a&gt; ABC. However, there are a few differences that should be taken into account:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54d07345bd9127d1a1c64e04c13f79fca512861a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#module-ctypes&quot;&gt;&lt;code&gt;ctypes&lt;/code&gt;&lt;/a&gt; allows creating C callable function pointers from Python callables. These are sometimes called &lt;em&gt;callback functions&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a61ba3e5b2608c384854f4bc1b0a8f3fc31920d8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#module-ctypes&quot;&gt;&lt;code&gt;ctypes&lt;/code&gt;&lt;/a&gt; can access values like this with the &lt;code&gt;in_dll()&lt;/code&gt; class methods of the type. &lt;em&gt;pythonapi&lt;/em&gt; is a predefined symbol giving access to the Python C api:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ec536b8b915d3ddbab8d170134ef9b42547b516" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#module-ctypes&quot;&gt;&lt;code&gt;ctypes&lt;/code&gt;&lt;/a&gt; checks for &lt;code&gt;NULL&lt;/code&gt; when dereferencing pointers (but dereferencing invalid non-&lt;code&gt;NULL&lt;/code&gt; pointers would crash Python):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="234211f87d3dcf5be8d13b9591b397b56b352a28" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#module-ctypes&quot;&gt;&lt;code&gt;ctypes&lt;/code&gt;&lt;/a&gt; defines a number of primitive C compatible data types:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6f6fc4d3c32622502ff744ce5c4c23cd8ac941b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#module-ctypes&quot;&gt;&lt;code&gt;ctypes&lt;/code&gt;&lt;/a&gt; does not support passing unions or structures with bit-fields to functions by value. While this may work on 32-bit x86, it&amp;rsquo;s not guaranteed by the library to work in the general case. Unions and structures with bit-fields should always be passed to functions by pointer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ea919c282ea78624fe7d23e5fd1d9cebc98563f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#module-ctypes&quot;&gt;&lt;code&gt;ctypes&lt;/code&gt;&lt;/a&gt; exports the &lt;a href=&quot;#ctypes.byref&quot;&gt;&lt;code&gt;byref()&lt;/code&gt;&lt;/a&gt; function which is used to pass parameters by reference. The same effect can be achieved with the &lt;a href=&quot;#ctypes.pointer&quot;&gt;&lt;code&gt;pointer()&lt;/code&gt;&lt;/a&gt; function, although &lt;a href=&quot;#ctypes.pointer&quot;&gt;&lt;code&gt;pointer()&lt;/code&gt;&lt;/a&gt; does a lot more work since it constructs a real pointer object, so it is faster to use &lt;a href=&quot;#ctypes.byref&quot;&gt;&lt;code&gt;byref()&lt;/code&gt;&lt;/a&gt; if you don&amp;rsquo;t need the pointer object in Python itself:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71b84d86e8effeac462b64991f6debe42f4c7458" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#module-ctypes&quot;&gt;&lt;code&gt;ctypes&lt;/code&gt;&lt;/a&gt; exports the &lt;em&gt;cdll&lt;/em&gt;, and on Windows &lt;em&gt;windll&lt;/em&gt; and &lt;em&gt;oledll&lt;/em&gt; objects, for loading dynamic link libraries.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="662ef022e58a03857e431cc42eb5f961ecd633e5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#module-ctypes&quot;&gt;&lt;code&gt;ctypes&lt;/code&gt;&lt;/a&gt; is a foreign function library for Python. It provides C compatible data types, and allows calling functions in DLLs or shared libraries. It can be used to wrap these libraries in pure Python.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d01dd22c4654033a3b3c78301090140602fb5ea" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#module-ctypes&quot;&gt;&lt;code&gt;ctypes&lt;/code&gt;&lt;/a&gt; provides some support for variable-sized arrays and structures.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3195a995a0743954a6922d59d5ae185bb54382bb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#module-ctypes&quot;&gt;&lt;code&gt;ctypes&lt;/code&gt;&lt;/a&gt; uses the native byte order for Structures and Unions. To build structures with non-native byte order, you can use one of the &lt;a href=&quot;#ctypes.BigEndianStructure&quot;&gt;&lt;code&gt;BigEndianStructure&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#ctypes.LittleEndianStructure&quot;&gt;&lt;code&gt;LittleEndianStructure&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;BigEndianUnion&lt;/code&gt;, and &lt;code&gt;LittleEndianUnion&lt;/code&gt; base classes. These classes cannot contain pointer fields.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2fbd7340acf39d126b3efc7133e21c84040dbb42" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#module-dbm&quot;&gt;&lt;code&gt;dbm&lt;/code&gt;&lt;/a&gt; is a generic interface to variants of the DBM database &amp;mdash; &lt;a href=&quot;#module-dbm.gnu&quot;&gt;&lt;code&gt;dbm.gnu&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#module-dbm.ndbm&quot;&gt;&lt;code&gt;dbm.ndbm&lt;/code&gt;&lt;/a&gt;. If none of these modules is installed, the slow-but-simple implementation in module &lt;a href=&quot;#module-dbm.dumb&quot;&gt;&lt;code&gt;dbm.dumb&lt;/code&gt;&lt;/a&gt; will be used. There is a &lt;a href=&quot;https://www.jcea.es/programacion/pybsddb.htm&quot;&gt;third party interface&lt;/a&gt; to the Oracle Berkeley DB.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9adbf9bdf2d4f4a6ee96ae1861f834e980f4c61" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#module-doctest&quot;&gt;&lt;code&gt;doctest&lt;/code&gt;&lt;/a&gt; is serious about requiring exact matches in expected output. If even a single character doesn&amp;rsquo;t match, the test fails. This will probably surprise you a few times, as you learn exactly what Python does and doesn&amp;rsquo;t guarantee about output. For example, when printing a set, Python doesn&amp;rsquo;t guarantee that the element is printed in any particular order, so a test like</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f63b6875c2ec4f8ded1a5b05a656574132b997d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#module-doctest&quot;&gt;&lt;code&gt;doctest&lt;/code&gt;&lt;/a&gt; then examines docstrings in module &lt;code&gt;M&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="768ab174778a159503823ec6a08bccb4864b3485" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#module-ensurepip&quot;&gt;&lt;code&gt;ensurepip&lt;/code&gt;&lt;/a&gt; exposes two functions for programmatic use:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d476d34cd0f1a466f2ea345258cd6555a7c47997" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#module-http&quot;&gt;&lt;code&gt;http&lt;/code&gt;&lt;/a&gt; is a package that collects several modules for working with the HyperText Transfer Protocol:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e53f2423d1eb5e37d3daf5c08e73d076611c16a1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#module-http&quot;&gt;&lt;code&gt;http&lt;/code&gt;&lt;/a&gt; is also a module that defines a number of HTTP status codes and associated messages through the &lt;a href=&quot;#http.HTTPStatus&quot;&gt;&lt;code&gt;http.HTTPStatus&lt;/code&gt;&lt;/a&gt; enum:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0ace1a628232ab9f0c3958f74e5929330bb256a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#module-http.server&quot;&gt;&lt;code&gt;http.server&lt;/code&gt;&lt;/a&gt; can also be invoked directly using the &lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#cmdoption-m&quot;&gt;&lt;code&gt;-m&lt;/code&gt;&lt;/a&gt; switch of the interpreter with a &lt;code&gt;port number&lt;/code&gt; argument. Similar to the previous example, this serves files relative to the current directory:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac0a3c7ec53409c8ea37b90efdc0a4c73f7fa122" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#module-http.server&quot;&gt;&lt;code&gt;http.server&lt;/code&gt;&lt;/a&gt; is not recommended for production. It only implements basic security checks.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ff6d5081dddbae37670495c659854e02bba3460" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#module-ipaddress&quot;&gt;&lt;code&gt;ipaddress&lt;/code&gt;&lt;/a&gt; provides the capabilities to create, manipulate and operate on IPv4 and IPv6 addresses and networks.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="294929e3782f8a8a2ac6203632800bd53898b09e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#module-json&quot;&gt;&lt;code&gt;json&lt;/code&gt;&lt;/a&gt; exposes an API familiar to users of the standard library &lt;a href=&quot;marshal#module-marshal&quot;&gt;&lt;code&gt;marshal&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;pickle#module-pickle&quot;&gt;&lt;code&gt;pickle&lt;/code&gt;&lt;/a&gt; modules.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b949b900e6855b1f293ec12b148ec8df01fba391" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#module-msilib&quot;&gt;&lt;code&gt;msilib&lt;/code&gt;&lt;/a&gt; provides a few subpackages that contain only schema and table definitions. Currently, these definitions are based on MSI version 2.0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a4ab9df2f982f8e8a67b00d6e2f3350a691e73c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#module-msilib&quot;&gt;&lt;code&gt;msilib&lt;/code&gt;&lt;/a&gt; provides several classes that wrap the GUI tables in an MSI database. However, no standard user interface is provided; use &lt;a href=&quot;https://docs.python.org/3.8/distutils/apiref.html#module-distutils.command.bdist_msi&quot;&gt;&lt;code&gt;bdist_msi&lt;/code&gt;&lt;/a&gt; to create MSI files with a user-interface for installing Python packages.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78ae2626c9e6b847c6e060c85dc433dcc76d2296" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#module-multiprocessing&quot;&gt;&lt;code&gt;multiprocessing&lt;/code&gt;&lt;/a&gt; contains equivalents of all the synchronization primitives from &lt;a href=&quot;threading#module-threading&quot;&gt;&lt;code&gt;threading&lt;/code&gt;&lt;/a&gt;. For instance one can use a lock to ensure that only one process prints to standard output at a time:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ab07accb93cb82b5045f5991cdeb430c1542b35" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#module-multiprocessing&quot;&gt;&lt;code&gt;multiprocessing&lt;/code&gt;&lt;/a&gt; contains no analogues of &lt;a href=&quot;threading#threading.active_count&quot;&gt;&lt;code&gt;threading.active_count()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;threading#threading.enumerate&quot;&gt;&lt;code&gt;threading.enumerate()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;threading#threading.settrace&quot;&gt;&lt;code&gt;threading.settrace()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;threading#threading.setprofile&quot;&gt;&lt;code&gt;threading.setprofile()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;threading#threading.Timer&quot;&gt;&lt;code&gt;threading.Timer&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;threading#threading.local&quot;&gt;&lt;code&gt;threading.local&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06ce058ff0dda96bdc149e1b5eb7bc4cf16657df" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#module-multiprocessing&quot;&gt;&lt;code&gt;multiprocessing&lt;/code&gt;&lt;/a&gt; is a package that supports spawning processes using an API similar to the &lt;a href=&quot;threading#module-threading&quot;&gt;&lt;code&gt;threading&lt;/code&gt;&lt;/a&gt; module. The &lt;a href=&quot;#module-multiprocessing&quot;&gt;&lt;code&gt;multiprocessing&lt;/code&gt;&lt;/a&gt; package offers both local and remote concurrency, effectively side-stepping the &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-global-interpreter-lock&quot;&gt;Global Interpreter Lock&lt;/a&gt; by using subprocesses instead of threads. Due to this, the &lt;a href=&quot;#module-multiprocessing&quot;&gt;&lt;code&gt;multiprocessing&lt;/code&gt;&lt;/a&gt; module allows the programmer to fully leverage multiple processors on a given machine. It runs on both Unix and Windows.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9a2ac731919175f2efffc7b12bd0b54f128f960" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#module-multiprocessing&quot;&gt;&lt;code&gt;multiprocessing&lt;/code&gt;&lt;/a&gt; originally unconditionally called:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49603c88a89afc06b50b7c3a47859329fc343686" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#module-multiprocessing&quot;&gt;&lt;code&gt;multiprocessing&lt;/code&gt;&lt;/a&gt; supports two types of communication channel between processes:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16c6230064bab9d83da42e7febde3dd6b576d392" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#module-multiprocessing&quot;&gt;&lt;code&gt;multiprocessing&lt;/code&gt;&lt;/a&gt; uses the usual &lt;a href=&quot;queue#queue.Empty&quot;&gt;&lt;code&gt;queue.Empty&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;queue#queue.Full&quot;&gt;&lt;code&gt;queue.Full&lt;/code&gt;&lt;/a&gt; exceptions to signal a timeout. They are not available in the &lt;a href=&quot;#module-multiprocessing&quot;&gt;&lt;code&gt;multiprocessing&lt;/code&gt;&lt;/a&gt; namespace so you need to import them from &lt;a href=&quot;queue#module-queue&quot;&gt;&lt;code&gt;queue&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="793051090865d889bcf1e60df4a0c9ae0e82c12f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#module-multiprocessing.dummy&quot;&gt;&lt;code&gt;multiprocessing.dummy&lt;/code&gt;&lt;/a&gt; replicates the API of &lt;a href=&quot;#module-multiprocessing&quot;&gt;&lt;code&gt;multiprocessing&lt;/code&gt;&lt;/a&gt; but is no more than a wrapper around the &lt;a href=&quot;threading#module-threading&quot;&gt;&lt;code&gt;threading&lt;/code&gt;&lt;/a&gt; module.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04ffd6d9b86f87ac67a3993129fd866dc52d329d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#module-ossaudiodev&quot;&gt;&lt;code&gt;ossaudiodev&lt;/code&gt;&lt;/a&gt; defines the following variables and functions:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0dc445a423ea5a9e0f033c19c2e72758c39ac9cb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#module-profile&quot;&gt;&lt;code&gt;profile&lt;/code&gt;&lt;/a&gt;, a pure Python module whose interface is imitated by &lt;a href=&quot;#module-cProfile&quot;&gt;&lt;code&gt;cProfile&lt;/code&gt;&lt;/a&gt;, but which adds significant overhead to profiled programs. If you&amp;rsquo;re trying to extend the profiler in some way, the task might be easier with this module. Originally designed and written by Jim Roskind.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38812840d551d43fda7742c3c18a87e7af4abe8e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#module-sysconfig&quot;&gt;&lt;code&gt;sysconfig&lt;/code&gt;&lt;/a&gt; provides some functions to determine these paths.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87c3ec610815c829c258a8571729b1ccbbec6bd0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#module-sysconfig&quot;&gt;&lt;code&gt;sysconfig&lt;/code&gt;&lt;/a&gt; puts all variables found in these files in a dictionary that can be accessed using &lt;a href=&quot;#sysconfig.get_config_vars&quot;&gt;&lt;code&gt;get_config_vars()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#sysconfig.get_config_var&quot;&gt;&lt;code&gt;get_config_var()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a006a73a45ad79405e76937390cf34a4e87fd30d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#module-sysconfig&quot;&gt;&lt;code&gt;sysconfig&lt;/code&gt;&lt;/a&gt; stores installation paths corresponding to each path name, for each platform, with variables to be expanded. For instance the &lt;em&gt;stdlib&lt;/em&gt; path for the &lt;em&gt;nt&lt;/em&gt; scheme is: &lt;code&gt;{base}/Lib&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c47063892a843a9607322d88ec637ba489ecfde3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#module-test.support&quot;&gt;&lt;code&gt;test.support&lt;/code&gt;&lt;/a&gt; is not a public module. It is documented here to help Python developers write tests. The API of this module is subject to change without backwards compatibility concerns between releases.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f21c9bfcc3d50451d25bf7cecdef4a94d0a3e971" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#module-unittest.mock&quot;&gt;&lt;code&gt;unittest.mock&lt;/code&gt;&lt;/a&gt; is a library for testing in Python. It allows you to replace parts of your system under test with mock objects and make assertions about how they have been used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30391a1877be1cbecfca6ea3a7979d74d03eb782" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#module-unittest.mock&quot;&gt;&lt;code&gt;unittest.mock&lt;/code&gt;&lt;/a&gt; provides a core &lt;a href=&quot;#unittest.mock.Mock&quot;&gt;&lt;code&gt;Mock&lt;/code&gt;&lt;/a&gt; class removing the need to create a host of stubs throughout your test suite. After performing an action, you can make assertions about which methods / attributes were used and arguments they were called with. You can also specify return values and set needed attributes in the normal way.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="214f7faa3e94cb6cc19958584b3f5b1c5d8da3c7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#module-wsgiref&quot;&gt;&lt;code&gt;wsgiref&lt;/code&gt;&lt;/a&gt; is a reference implementation of the WSGI specification that can be used to add WSGI support to a web server or framework. It provides utilities for manipulating WSGI environment variables and response headers, base classes for implementing WSGI servers, a demo HTTP server that serves WSGI applications, and a validation tool that checks WSGI servers and applications for conformance to the WSGI specification (&lt;a href=&quot;https://www.python.org/dev/peps/pep-3333&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;PEP 3333&lt;/strong&gt;&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f97559de5868f34d482e7ca9761aa4f475e9942" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#module-xml.dom.minidom&quot;&gt;&lt;code&gt;xml.dom.minidom&lt;/code&gt;&lt;/a&gt; is a minimal implementation of the Document Object Model interface, with an API similar to that in other languages. It is intended to be simpler than the full DOM and also significantly smaller. Users who are not already proficient with the DOM should consider using the &lt;a href=&quot;xml.etree.elementtree#module-xml.etree.ElementTree&quot;&gt;&lt;code&gt;xml.etree.ElementTree&lt;/code&gt;&lt;/a&gt; module for their XML processing instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03324f4af77d69f4d23a6ed835409e1db9be836e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#multiprocessing.JoinableQueue&quot;&gt;&lt;code&gt;JoinableQueue&lt;/code&gt;&lt;/a&gt;, a &lt;a href=&quot;#multiprocessing.Queue&quot;&gt;&lt;code&gt;Queue&lt;/code&gt;&lt;/a&gt; subclass, is a queue which additionally has &lt;a href=&quot;#multiprocessing.JoinableQueue.task_done&quot;&gt;&lt;code&gt;task_done()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#multiprocessing.JoinableQueue.join&quot;&gt;&lt;code&gt;join()&lt;/code&gt;&lt;/a&gt; methods.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2af0dd9bb94b3b8644df2d583c6768544e2b2c8c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#multiprocessing.Lock&quot;&gt;&lt;code&gt;Lock&lt;/code&gt;&lt;/a&gt; supports the &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-context-manager&quot;&gt;context manager&lt;/a&gt; protocol and thus may be used in &lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#with&quot;&gt;&lt;code&gt;with&lt;/code&gt;&lt;/a&gt; statements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afcaabcb873060d3eecfae0c81f06aac7e02e2f3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#multiprocessing.Process&quot;&gt;&lt;code&gt;Process&lt;/code&gt;&lt;/a&gt; and exceptions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2984da8a1035e77c2786602938cd4c2eed4e18e7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#multiprocessing.Queue&quot;&gt;&lt;code&gt;Queue&lt;/code&gt;&lt;/a&gt; implements all the methods of &lt;a href=&quot;queue#queue.Queue&quot;&gt;&lt;code&gt;queue.Queue&lt;/code&gt;&lt;/a&gt; except for &lt;a href=&quot;queue#queue.Queue.task_done&quot;&gt;&lt;code&gt;task_done()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;queue#queue.Queue.join&quot;&gt;&lt;code&gt;join()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06b001187e7ac8c8296939baa52c74cd034db739" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#multiprocessing.Queue&quot;&gt;&lt;code&gt;multiprocessing.Queue&lt;/code&gt;&lt;/a&gt; has a few additional methods not found in &lt;a href=&quot;queue#queue.Queue&quot;&gt;&lt;code&gt;queue.Queue&lt;/code&gt;&lt;/a&gt;. These methods are usually unnecessary for most code:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="706279fcb19ba46d71d81ee5d4a5e79d1023f7cf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#multiprocessing.RLock&quot;&gt;&lt;code&gt;RLock&lt;/code&gt;&lt;/a&gt; supports the &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-context-manager&quot;&gt;context manager&lt;/a&gt; protocol and thus may be used in &lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#with&quot;&gt;&lt;code&gt;with&lt;/code&gt;&lt;/a&gt; statements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b04c8d41b034942a3982955dc13881a608a3ba7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#multiprocessing.managers.BaseManager&quot;&gt;&lt;code&gt;BaseManager&lt;/code&gt;&lt;/a&gt; instances also have one read-only property:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0935b65bf1194f0040bcf0840b4801c7c0aae7f9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#multiprocessing.set_start_method&quot;&gt;&lt;code&gt;set_start_method()&lt;/code&gt;&lt;/a&gt; should not be used more than once in the program.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e054e7ed4b29989eb4a27d8ef7bbd00ffea61cf6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#name-or-flags&quot;&gt;name or flags&lt;/a&gt; - Either a name or a list of option strings, e.g. &lt;code&gt;foo&lt;/code&gt; or &lt;code&gt;-f, --foo&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e206a7726fe87988be71d16cd6a09ff637aa91b3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#namespace&quot;&gt;namespace&lt;/a&gt; - An object to take the attributes. The default is a new empty &lt;a href=&quot;#argparse.Namespace&quot;&gt;&lt;code&gt;Namespace&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55086ce4beb5a87803c3a4b584262a791493b7b3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#nargs&quot;&gt;nargs&lt;/a&gt; - The number of command-line arguments that should be consumed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19ff6bf59ba551e73efbbc66329ca67420d36d4f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#object&quot;&gt;&lt;code&gt;object&lt;/code&gt;&lt;/a&gt; does &lt;em&gt;not&lt;/em&gt; have a &lt;a href=&quot;stdtypes#object.__dict__&quot;&gt;&lt;code&gt;__dict__&lt;/code&gt;&lt;/a&gt;, so you can&amp;rsquo;t assign arbitrary attributes to an instance of the &lt;a href=&quot;#object&quot;&gt;&lt;code&gt;object&lt;/code&gt;&lt;/a&gt; class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35c1e06d59bd811bcdab7edd7afc79dbc97d551e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#object.__getnewargs__&quot;&gt;&lt;code&gt;__getnewargs__()&lt;/code&gt;&lt;/a&gt; will not be called if &lt;a href=&quot;#object.__getnewargs_ex__&quot;&gt;&lt;code&gt;__getnewargs_ex__()&lt;/code&gt;&lt;/a&gt; is defined.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="027a38591a361ac70ff03092c2d3fee155fe0ab8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#os.environb&quot;&gt;&lt;code&gt;environb&lt;/code&gt;&lt;/a&gt; is only available if &lt;a href=&quot;#os.supports_bytes_environ&quot;&gt;&lt;code&gt;supports_bytes_environ&lt;/code&gt;&lt;/a&gt; is &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="010561334aea66fe52063ab7e3cfe05a3141902e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#os.fsdecode&quot;&gt;&lt;code&gt;fsdecode()&lt;/code&gt;&lt;/a&gt; is the reverse function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c4cc0fdc7571054b9148af162f667e4a5f6ff2f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#os.fsencode&quot;&gt;&lt;code&gt;fsencode()&lt;/code&gt;&lt;/a&gt; is the reverse function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6cb27f9ad96f7f2b0454a1544a3d47d1eb04e3a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#os.fstat&quot;&gt;&lt;code&gt;fstat()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#os.lstat&quot;&gt;&lt;code&gt;lstat()&lt;/code&gt;&lt;/a&gt; functions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9998428e67a86fb9b25f8eea505b3972a4f5b080" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#os.getenvb&quot;&gt;&lt;code&gt;getenvb()&lt;/code&gt;&lt;/a&gt; is only available if &lt;a href=&quot;#os.supports_bytes_environ&quot;&gt;&lt;code&gt;supports_bytes_environ&lt;/code&gt;&lt;/a&gt; is &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ad68faf9f45d2975b51119264a2158ce7486a76" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#os.makedirs&quot;&gt;&lt;code&gt;makedirs()&lt;/code&gt;&lt;/a&gt; will become confused if the path elements to create include &lt;a href=&quot;#os.pardir&quot;&gt;&lt;code&gt;pardir&lt;/code&gt;&lt;/a&gt; (eg. &amp;ldquo;..&amp;rdquo; on UNIX systems).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f2f98805b2f54d352a8375259a6a65cfd2d0bd6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#os.scandir&quot;&gt;&lt;code&gt;scandir()&lt;/code&gt;&lt;/a&gt; will provide as much of this information as possible without making additional system calls. When a &lt;code&gt;stat()&lt;/code&gt; or &lt;code&gt;lstat()&lt;/code&gt; system call is made, the &lt;code&gt;os.DirEntry&lt;/code&gt; object will cache the result.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70f4332d09d026a608d70821a0b344fbd0809db4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#os.startfile&quot;&gt;&lt;code&gt;startfile()&lt;/code&gt;&lt;/a&gt; returns as soon as the associated application is launched. There is no option to wait for the application to close, and no way to retrieve the application&amp;rsquo;s exit status. The &lt;em&gt;path&lt;/em&gt; parameter is relative to the current directory. If you want to use an absolute path, make sure the first character is not a slash (&lt;code&gt;'/'&lt;/code&gt;); the underlying Win32 &lt;code&gt;ShellExecute()&lt;/code&gt; function doesn&amp;rsquo;t work if it is. Use the &lt;a href=&quot;os.path#os.path.normpath&quot;&gt;&lt;code&gt;os.path.normpath()&lt;/code&gt;&lt;/a&gt; function to ensure that the path is properly encoded for Win32.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a94a3c93a59492c0ea858bcfa1feb3dc52bac312" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#os.system&quot;&gt;&lt;code&gt;system&lt;/code&gt;&lt;/a&gt; - system time</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ddf90d9387476944a31936f830d565960ae3e66e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#os.utime&quot;&gt;&lt;code&gt;utime()&lt;/code&gt;&lt;/a&gt; takes two optional parameters, &lt;em&gt;times&lt;/em&gt; and &lt;em&gt;ns&lt;/em&gt;. These specify the times set on &lt;em&gt;path&lt;/em&gt; and are used as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a877f4dd7924dc9dcc8e0075dc1b9da6da74bea3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#parents&quot;&gt;parents&lt;/a&gt; - A list of &lt;a href=&quot;#argparse.ArgumentParser&quot;&gt;&lt;code&gt;ArgumentParser&lt;/code&gt;&lt;/a&gt; objects whose arguments should also be included</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df1560a7f1a4a12cf898cdc9a78a10a773f11f0e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#pathlib.Path.expanduser&quot;&gt;&lt;code&gt;Path.expanduser()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#pathlib.Path.home&quot;&gt;&lt;code&gt;Path.home()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d490f688eab04bc380db10faef12d6e8806a324" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#pathlib.Path.stat&quot;&gt;&lt;code&gt;Path.stat()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#pathlib.Path.owner&quot;&gt;&lt;code&gt;Path.owner()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#pathlib.Path.group&quot;&gt;&lt;code&gt;Path.group()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="700d7429acad0652e1314a766252a9d15cecfa57" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#pdb.Pdb&quot;&gt;&lt;code&gt;Pdb&lt;/code&gt;&lt;/a&gt; is the debugger class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28e88f65c8644a51eb49ccf95e6df1d142be3f3d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#pickle.PickleBuffer&quot;&gt;&lt;code&gt;PickleBuffer&lt;/code&gt;&lt;/a&gt; is itself a buffer provider, therefore it is possible to pass it to other APIs expecting a buffer-providing object, such as &lt;a href=&quot;stdtypes#memoryview&quot;&gt;&lt;code&gt;memoryview&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb9743627b93c3232b8c69b1e03bcc3891ee53ea" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#pickle.PickleBuffer&quot;&gt;&lt;code&gt;PickleBuffer&lt;/code&gt;&lt;/a&gt; objects can only be serialized using pickle protocol 5 or higher. They are eligible for &lt;a href=&quot;#pickle-oob&quot;&gt;out-of-band serialization&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cad5ae716b1d8c9e4fddd77bd665a5bddccddfad" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#plistlib.FMT_BINARY&quot;&gt;&lt;code&gt;FMT_BINARY&lt;/code&gt;&lt;/a&gt;: Binary formatted plist file</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bb6a94c80759879e939c6924f1e70a6e2a08737" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#plistlib.FMT_BINARY&quot;&gt;&lt;code&gt;FMT_BINARY&lt;/code&gt;&lt;/a&gt;: Binary plist format</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f171cb9d7c0b15c817dfc7537016fe9aab58d093" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#plistlib.FMT_XML&quot;&gt;&lt;code&gt;FMT_XML&lt;/code&gt;&lt;/a&gt;: XML file format</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43d25de6140dc0e637ef03c81a51d4139663350d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#plistlib.FMT_XML&quot;&gt;&lt;code&gt;FMT_XML&lt;/code&gt;&lt;/a&gt;: XML formatted plist file</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e2eaf6d4d7a6ee6c404c9704798b0f7e9046067" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#pprint.PrettyPrinter&quot;&gt;&lt;code&gt;PrettyPrinter&lt;/code&gt;&lt;/a&gt; instances have the following methods:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="560bc4da7fa6f6d92691145d8c0b780235de7355" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#prefix-chars&quot;&gt;prefix_chars&lt;/a&gt; - The set of characters that prefix optional arguments (default: &amp;lsquo;-&amp;lsquo;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a26ad3e71288fd29e6ed8970d0c37aad5a05280" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#prefix-matching&quot;&gt;Prefix matching&lt;/a&gt; rules apply to &lt;code&gt;parse_known_args()&lt;/code&gt;. The parser may consume an option even if it&amp;rsquo;s just a prefix of one of its known options, instead of leaving it in the remaining arguments list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d3da27627e579d6543a0f9386b8d05fcbdd73c9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#prog&quot;&gt;prog&lt;/a&gt; - The name of the program (default: &lt;code&gt;sys.argv[0]&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e7c7e857caa2ee0c0ef7f174fb090ce632dbe0d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#pstats.Stats&quot;&gt;&lt;code&gt;Stats&lt;/code&gt;&lt;/a&gt; objects have the following methods:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf52f4a89ba6544d2fbc3b03f509d853b6e36b9c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#queue.SimpleQueue&quot;&gt;&lt;code&gt;SimpleQueue&lt;/code&gt;&lt;/a&gt; objects provide the public methods described below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40873616d654e384a8f8fd8588a05c9b075e7d94" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#re.findall&quot;&gt;&lt;code&gt;findall()&lt;/code&gt;&lt;/a&gt; matches &lt;em&gt;all&lt;/em&gt; occurrences of a pattern, not just the first one as &lt;a href=&quot;#re.search&quot;&gt;&lt;code&gt;search()&lt;/code&gt;&lt;/a&gt; does. For example, if a writer wanted to find all of the adverbs in some text, they might use &lt;a href=&quot;#re.findall&quot;&gt;&lt;code&gt;findall()&lt;/code&gt;&lt;/a&gt; in the following manner:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b17348960b718ac1d60cfd2811520e26863585e4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#re.split&quot;&gt;&lt;code&gt;split()&lt;/code&gt;&lt;/a&gt; splits a string into a list delimited by the passed pattern. The method is invaluable for converting textual data into data structures that can be easily read and modified by Python as demonstrated in the following example that creates a phonebook.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2ee816edb2a3154dbed32bec1ef2dff21a89d4a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#re.sub&quot;&gt;&lt;code&gt;sub()&lt;/code&gt;&lt;/a&gt; replaces every occurrence of a pattern with a string or the result of a function. This example demonstrates using &lt;a href=&quot;#re.sub&quot;&gt;&lt;code&gt;sub()&lt;/code&gt;&lt;/a&gt; with a function to &amp;ldquo;munge&amp;rdquo; text, or randomize the order of all the characters in each word of a sentence except for the first and last characters:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efeec45bf28c50892c85f7f7305865c411ad31f6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#reprlib.Repr&quot;&gt;&lt;code&gt;Repr&lt;/code&gt;&lt;/a&gt; instances provide several attributes which can be used to provide size limits for the representations of different object types, and methods which format specific object types.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="207c2455e70a2e887e2c73b5c311470fbaa41be9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#required&quot;&gt;required&lt;/a&gt; - Whether or not a subcommand must be provided, by default &lt;code&gt;False&lt;/code&gt; (added in 3.7)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c52eed142583478b4ea3e3f1b8bbcf937f6a5cf6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#required&quot;&gt;required&lt;/a&gt; - Whether or not the command-line option may be omitted (optionals only).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a24e80afc11eebf34773e45c6c854022edf0741" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sched.scheduler&quot;&gt;&lt;code&gt;scheduler&lt;/code&gt;&lt;/a&gt; instances have the following methods and attributes:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="603e0349ae1bf2434dc4ff4eb5e844746910e387" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#selectors.DefaultSelector&quot;&gt;&lt;code&gt;DefaultSelector&lt;/code&gt;&lt;/a&gt; is an alias to the most efficient implementation available on the current platform: this should be the default choice for most users.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7bfe1f259c1784d7ac7898160ca66a20366c0b3c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#shlex.quote&quot;&gt;&lt;code&gt;quote()&lt;/code&gt;&lt;/a&gt; lets you plug the security hole:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9d79ac5ddc80ca7ed414690e320eb4a51625c67" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#shutil.copy&quot;&gt;&lt;code&gt;copy()&lt;/code&gt;&lt;/a&gt; copies the file data and the file&amp;rsquo;s permission mode (see &lt;a href=&quot;os#os.chmod&quot;&gt;&lt;code&gt;os.chmod()&lt;/code&gt;&lt;/a&gt;). Other metadata, like the file&amp;rsquo;s creation and modification times, is not preserved. To preserve all file metadata from the original, use &lt;a href=&quot;#shutil.copy2&quot;&gt;&lt;code&gt;copy2()&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5c891512e8b05b6e7cddd1d9dda5ecd134a5a27" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#shutil.copy2&quot;&gt;&lt;code&gt;copy2()&lt;/code&gt;&lt;/a&gt; uses &lt;a href=&quot;#shutil.copystat&quot;&gt;&lt;code&gt;copystat()&lt;/code&gt;&lt;/a&gt; to copy the file metadata. Please see &lt;a href=&quot;#shutil.copystat&quot;&gt;&lt;code&gt;copystat()&lt;/code&gt;&lt;/a&gt; for more information about platform support for modifying symbolic link metadata.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a23065a516fae4e986055971249b42f39027a6d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#signal.SIG_BLOCK&quot;&gt;&lt;code&gt;SIG_BLOCK&lt;/code&gt;&lt;/a&gt;: The set of blocked signals is the union of the current set and the &lt;em&gt;mask&lt;/em&gt; argument.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd0d935aa2fecf0493587a94fbfd0f61a28fc22b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#signal.SIG_SETMASK&quot;&gt;&lt;code&gt;SIG_SETMASK&lt;/code&gt;&lt;/a&gt;: The set of blocked signals is set to the &lt;em&gt;mask&lt;/em&gt; argument.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5879c4b57f836b305535eac7e2e174f77dfe2092" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#signal.SIG_UNBLOCK&quot;&gt;&lt;code&gt;SIG_UNBLOCK&lt;/code&gt;&lt;/a&gt;: The signals in &lt;em&gt;mask&lt;/em&gt; are removed from the current set of blocked signals. It is permissible to attempt to unblock a signal which is not blocked.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="482bbfc72f2e87f2aa8d256a8e33ebfe5feb3aa0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#socket.AF_ALG&quot;&gt;&lt;code&gt;AF_ALG&lt;/code&gt;&lt;/a&gt; is a Linux-only socket based interface to Kernel cryptography. An algorithm socket is configured with a tuple of two to four elements &lt;code&gt;(type, name [, feat [, mask]])&lt;/code&gt;, where:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df536194415e1ca1c320279fd9459d566a4b2058" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#socket.AF_PACKET&quot;&gt;&lt;code&gt;AF_PACKET&lt;/code&gt;&lt;/a&gt; is a low-level interface directly to network devices. The packets are represented by the tuple &lt;code&gt;(ifname, proto[, pkttype[, hatype[, addr]]])&lt;/code&gt; where:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea703e80b7f21f4cfee2f92c39e51ca86cf0b092" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#socket.AF_QIPCRTR&quot;&gt;&lt;code&gt;AF_QIPCRTR&lt;/code&gt;&lt;/a&gt; is a Linux-only socket based interface for communicating with services running on co-processors in Qualcomm platforms. The address family is represented as a &lt;code&gt;(node, port)&lt;/code&gt; tuple where the &lt;em&gt;node&lt;/em&gt; and &lt;em&gt;port&lt;/em&gt; are non-negative integers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a7a0a10ba7dec56c423dc9129bbadb31119d30c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#socket.AF_VSOCK&quot;&gt;&lt;code&gt;AF_VSOCK&lt;/code&gt;&lt;/a&gt; allows communication between virtual machines and their hosts. The sockets are represented as a &lt;code&gt;(CID, port)&lt;/code&gt; tuple where the context ID or CID and port are integers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="daeda219b4093cf36c54ab49773a0316a60238b5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#socket.CAN_ISOTP&quot;&gt;&lt;code&gt;CAN_ISOTP&lt;/code&gt;&lt;/a&gt; protocol require a tuple &lt;code&gt;(interface, rx_addr, tx_addr)&lt;/code&gt; where both additional parameters are unsigned long integer that represent a CAN identifier (standard or extended).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4555981aac888d8064b85928e7057a5a30929885" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#socket.close&quot;&gt;&lt;code&gt;close()&lt;/code&gt;&lt;/a&gt; releases the resource associated with a connection but does not necessarily close the connection immediately. If you want to close the connection in a timely fashion, call &lt;a href=&quot;#socket.socket.shutdown&quot;&gt;&lt;code&gt;shutdown()&lt;/code&gt;&lt;/a&gt; before &lt;a href=&quot;#socket.close&quot;&gt;&lt;code&gt;close()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0b3798ee4adcdb1ff22be84405043716a135eaa" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#socket.inet_aton&quot;&gt;&lt;code&gt;inet_aton()&lt;/code&gt;&lt;/a&gt; also accepts strings with less than three dots; see the Unix manual page &lt;em&gt;&lt;a href=&quot;https://manpages.debian.org/inet(3)&quot;&gt;inet(3)&lt;/a&gt;&lt;/em&gt; for details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b83b69f99b76afd962ebe3f980446195ec548d4d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#socket.inet_aton&quot;&gt;&lt;code&gt;inet_aton()&lt;/code&gt;&lt;/a&gt; does not support IPv6, and &lt;a href=&quot;#socket.inet_pton&quot;&gt;&lt;code&gt;inet_pton()&lt;/code&gt;&lt;/a&gt; should be used instead for IPv4/v6 dual stack support.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4468c17e5aad9246f127395aa50efe7285433607" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#socketserver.ForkingMixIn&quot;&gt;&lt;code&gt;ForkingMixIn&lt;/code&gt;&lt;/a&gt; and the Forking classes mentioned below are only available on POSIX platforms that support &lt;a href=&quot;os#os.fork&quot;&gt;&lt;code&gt;fork()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ecb9d5741e28da479ddcb559ca577ec91c8e080a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#socketserver.TCPServer&quot;&gt;&lt;code&gt;socketserver.TCPServer&lt;/code&gt;&lt;/a&gt; Example</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef35ed04c2ba20709a8cbe8b828f51a7e8689f9d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#socketserver.UDPServer&quot;&gt;&lt;code&gt;socketserver.UDPServer&lt;/code&gt;&lt;/a&gt; Example</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="500adec272551052886927afb687622dcc282e8f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sqlite3.Cursor.execute&quot;&gt;&lt;code&gt;execute()&lt;/code&gt;&lt;/a&gt; will only execute a single SQL statement. If you try to execute more than one statement with it, it will raise a &lt;a href=&quot;#sqlite3.Warning&quot;&gt;&lt;code&gt;Warning&lt;/code&gt;&lt;/a&gt;. Use &lt;a href=&quot;#sqlite3.Cursor.executescript&quot;&gt;&lt;code&gt;executescript()&lt;/code&gt;&lt;/a&gt; if you want to execute multiple SQL statements with one call.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d912f14f42845f5ed5939626e6bcab414a412edf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#ssl.CertificateError&quot;&gt;&lt;code&gt;CertificateError&lt;/code&gt;&lt;/a&gt; is raised on failure. On success, the function returns nothing:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a363091ed3a0c343a9355acfac17655444da9137" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#ssl.SSLContext&quot;&gt;&lt;code&gt;SSLContext&lt;/code&gt;&lt;/a&gt; disables SSLv2 with &lt;a href=&quot;#ssl.OP_NO_SSLv2&quot;&gt;&lt;code&gt;OP_NO_SSLv2&lt;/code&gt;&lt;/a&gt; by default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ab012b2fd560cb8431d30aaa3116233ca627965" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#ssl.SSLContext&quot;&gt;&lt;code&gt;SSLContext&lt;/code&gt;&lt;/a&gt; disables SSLv3 with &lt;a href=&quot;#ssl.OP_NO_SSLv3&quot;&gt;&lt;code&gt;OP_NO_SSLv3&lt;/code&gt;&lt;/a&gt; by default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fddd79a227ff4772a3e20a8c06c5b16ccaef5d9a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#ssl.SSLContext&quot;&gt;&lt;code&gt;SSLContext&lt;/code&gt;&lt;/a&gt; objects have the following methods and attributes:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24b88f74ce90237f0241f86f6764920c18eeeb95" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#ssl.SSLContext.set_default_verify_paths&quot;&gt;&lt;code&gt;SSLContext.set_default_verify_paths()&lt;/code&gt;&lt;/a&gt; ignores the env vars &lt;code id=&quot;index-20&quot;&gt;SSL_CERT_FILE&lt;/code&gt; and &lt;code id=&quot;index-21&quot;&gt;SSL_CERT_PATH&lt;/code&gt; although &lt;a href=&quot;#ssl.get_default_verify_paths&quot;&gt;&lt;code&gt;get_default_verify_paths()&lt;/code&gt;&lt;/a&gt; still reports them.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a574cb247da6c848a0e8680fb36161dfd87e789e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#ssl.create_default_context&quot;&gt;&lt;code&gt;create_default_context()&lt;/code&gt;&lt;/a&gt; lets the &lt;a href=&quot;#module-ssl&quot;&gt;&lt;code&gt;ssl&lt;/code&gt;&lt;/a&gt; module choose security settings for a given purpose.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aeefa5b8aece28f43d9c91ecf59d92821f6b87f0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#stat.S_IFDOOR&quot;&gt;&lt;code&gt;S_IFDOOR&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#stat.S_IFPORT&quot;&gt;&lt;code&gt;S_IFPORT&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#stat.S_IFWHT&quot;&gt;&lt;code&gt;S_IFWHT&lt;/code&gt;&lt;/a&gt; are defined as 0 when the platform does not have support for the file types.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ba051df58e0aa39f169badd0319744a281f9d1e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#statistics.NormalDist&quot;&gt;&lt;code&gt;NormalDist&lt;/code&gt;&lt;/a&gt; Examples and Recipes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88b77ad2c2c61244324656a30b29b20ad1032498" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#statistics.NormalDist&quot;&gt;&lt;code&gt;NormalDist&lt;/code&gt;&lt;/a&gt; is a tool for creating and manipulating normal distributions of a &lt;a href=&quot;http://www.stat.yale.edu/Courses/1997-98/101/ranvar.htm&quot;&gt;random variable&lt;/a&gt;. It is a class that treats the mean and standard deviation of data measurements as a single entity.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8d1d40c41e873fdede1540fc2b9462266d0229d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#statistics.NormalDist&quot;&gt;&lt;code&gt;NormalDist&lt;/code&gt;&lt;/a&gt; readily solves classic probability problems.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e696cbed7025faab670b06aafd40eaa03bea6c3a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#statistics.StatisticsError&quot;&gt;&lt;code&gt;StatisticsError&lt;/code&gt;&lt;/a&gt; is raised if &lt;em&gt;data&lt;/em&gt; is empty, or any element is less than zero.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7af3a5cb3d5bd8fdc1548bd993fbe937e4254d80" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#string.Formatter.format_field&quot;&gt;&lt;code&gt;format_field()&lt;/code&gt;&lt;/a&gt; simply calls the global &lt;a href=&quot;functions#format&quot;&gt;&lt;code&gt;format()&lt;/code&gt;&lt;/a&gt; built-in. The method is provided so that subclasses can override it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f0fec6869a80fbc2ff0b2991405fd5edb803410" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#string.Template&quot;&gt;&lt;code&gt;Template&lt;/code&gt;&lt;/a&gt; instances also provide one public data attribute:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="940b112799693aa091efe5c2944b8f0629ddc078" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#subprocess.Popen&quot;&gt;&lt;code&gt;Popen&lt;/code&gt;&lt;/a&gt; raises an exception if the execution fails.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="706495cb51ad10b7e6dcefd3a0bbe585021a10d2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#subprocess.Popen.communicate&quot;&gt;&lt;code&gt;communicate()&lt;/code&gt;&lt;/a&gt; returns a tuple &lt;code&gt;(stdout_data, stderr_data)&lt;/code&gt;. The data will be strings if streams were opened in text mode; otherwise, bytes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="122da96940b819ad71840fd8f473352a4c07b3df" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#subprocess.SW_HIDE&quot;&gt;&lt;code&gt;SW_HIDE&lt;/code&gt;&lt;/a&gt; is provided for this attribute. It is used when &lt;a href=&quot;#subprocess.Popen&quot;&gt;&lt;code&gt;Popen&lt;/code&gt;&lt;/a&gt; is called with &lt;code&gt;shell=True&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4db7b5563bddfaa3e1947bbe11dc2d2dc8bfaa2e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#subprocess.check_call&quot;&gt;&lt;code&gt;check_call()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#subprocess.check_output&quot;&gt;&lt;code&gt;check_output()&lt;/code&gt;&lt;/a&gt; will raise &lt;a href=&quot;#subprocess.CalledProcessError&quot;&gt;&lt;code&gt;CalledProcessError&lt;/code&gt;&lt;/a&gt; if the called process returns a non-zero return code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb8edd6fba6e426acb927a85d3406d6da0d95e02" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sys.getsizeof&quot;&gt;&lt;code&gt;getsizeof()&lt;/code&gt;&lt;/a&gt; calls the object&amp;rsquo;s &lt;code&gt;__sizeof__&lt;/code&gt; method and adds an additional garbage collector overhead if the object is managed by the garbage collector.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5bada06f56a551b35e2ce6385d5232b2510cf21f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sys.implementation&quot;&gt;&lt;code&gt;sys.implementation&lt;/code&gt;&lt;/a&gt; may contain additional attributes specific to the Python implementation. These non-standard attributes must start with an underscore, and are not described here. Regardless of its contents, &lt;a href=&quot;#sys.implementation&quot;&gt;&lt;code&gt;sys.implementation&lt;/code&gt;&lt;/a&gt; will not change during a run of the interpreter, nor between implementation versions. (It may change between Python language versions, however.) See &lt;a href=&quot;https://www.python.org/dev/peps/pep-0421&quot; id=&quot;index-14&quot;&gt;&lt;strong&gt;PEP 421&lt;/strong&gt;&lt;/a&gt; for more information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7de13218b91537f2c6c4d790f44e6b8c5437e04" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sys.unraisablehook&quot;&gt;&lt;code&gt;sys.unraisablehook()&lt;/code&gt;&lt;/a&gt; can be overridden to control how unraisable exceptions are handled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af1d955951e8ed9ee08abe63aeab4b8ed5676ad0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sysconfig.get_path&quot;&gt;&lt;code&gt;get_path()&lt;/code&gt;&lt;/a&gt; will use the variables returned by &lt;a href=&quot;#sysconfig.get_config_vars&quot;&gt;&lt;code&gt;get_config_vars()&lt;/code&gt;&lt;/a&gt; to expand the path. All variables have default values for each platform so one may call this function and get the default value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d12486f37f39ef9b62e0ec9f82c4ddf11a30c6bd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#tarfile.TarInfo&quot;&gt;&lt;code&gt;TarInfo&lt;/code&gt;&lt;/a&gt; objects are returned by &lt;a href=&quot;#tarfile.TarFile&quot;&gt;&lt;code&gt;TarFile&lt;/code&gt;&lt;/a&gt;&amp;rsquo;s methods &lt;code&gt;getmember()&lt;/code&gt;, &lt;code&gt;getmembers()&lt;/code&gt; and &lt;code&gt;gettarinfo()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb55801a480fe43ef65e87eb2ea1141dfa319f38" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#telnetlib.Telnet&quot;&gt;&lt;code&gt;Telnet&lt;/code&gt;&lt;/a&gt; instances have the following methods:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a4ddaa72fdbe6763df11bd6eb0148ffa0ddcaa2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#telnetlib.Telnet&quot;&gt;&lt;code&gt;Telnet&lt;/code&gt;&lt;/a&gt; represents a connection to a Telnet server. The instance is initially not connected by default; the &lt;a href=&quot;#telnetlib.Telnet.open&quot;&gt;&lt;code&gt;open()&lt;/code&gt;&lt;/a&gt; method must be used to establish a connection. Alternatively, the host name and optional port number can be passed to the constructor too, in which case the connection to the server will be established before the constructor returns. The optional &lt;em&gt;timeout&lt;/em&gt; parameter specifies a timeout in seconds for blocking operations like the connection attempt (if not specified, the global default timeout setting will be used).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32a950b5d45deba59e2257be170323cfc4be4ef9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#tempfile.mkdtemp&quot;&gt;&lt;code&gt;mkdtemp()&lt;/code&gt;&lt;/a&gt; returns the absolute pathname of the new directory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="204450194fe0a0879687e8f716faee890f99f825" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#tempfile.mkstemp&quot;&gt;&lt;code&gt;mkstemp()&lt;/code&gt;&lt;/a&gt; returns a tuple containing an OS-level handle to an open file (as would be returned by &lt;a href=&quot;os#os.open&quot;&gt;&lt;code&gt;os.open()&lt;/code&gt;&lt;/a&gt;) and the absolute pathname of that file, in that order.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3644feaacb0db8a325c4cae968d2b57e75a7133b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#textwrap.TextWrapper&quot;&gt;&lt;code&gt;TextWrapper&lt;/code&gt;&lt;/a&gt; also provides some public methods, analogous to the module-level convenience functions:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8dcb29a86249de3b71fe79b833a3d3611c080ef6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#textwrap.TextWrapper.fix_sentence_endings&quot;&gt;&lt;code&gt;fix_sentence_endings&lt;/code&gt;&lt;/a&gt; is false by default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f194a88a823d4ddabeea7a79c92ed31909b22e7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#textwrap.wrap&quot;&gt;&lt;code&gt;wrap()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#textwrap.fill&quot;&gt;&lt;code&gt;fill()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#textwrap.shorten&quot;&gt;&lt;code&gt;shorten()&lt;/code&gt;&lt;/a&gt; work by creating a &lt;a href=&quot;#textwrap.TextWrapper&quot;&gt;&lt;code&gt;TextWrapper&lt;/code&gt;&lt;/a&gt; instance and calling a single method on it. That instance is not reused, so for applications that process many text strings using &lt;a href=&quot;#textwrap.wrap&quot;&gt;&lt;code&gt;wrap()&lt;/code&gt;&lt;/a&gt; and/or &lt;a href=&quot;#textwrap.fill&quot;&gt;&lt;code&gt;fill()&lt;/code&gt;&lt;/a&gt;, it may be more efficient to create your own &lt;a href=&quot;#textwrap.TextWrapper&quot;&gt;&lt;code&gt;TextWrapper&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5c820fa9b0a4eea9964d4d4e2ccb16a93813437" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#threading.Semaphore&quot;&gt;&lt;code&gt;Semaphore&lt;/code&gt;&lt;/a&gt; Example</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21040c589805e61376662f0b5d2307182d021287" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#threading.Thread.join&quot;&gt;&lt;code&gt;join()&lt;/code&gt;&lt;/a&gt; raises a &lt;a href=&quot;exceptions#RuntimeError&quot;&gt;&lt;code&gt;RuntimeError&lt;/code&gt;&lt;/a&gt; if an attempt is made to join the current thread as that would cause a deadlock. It is also an error to &lt;a href=&quot;#threading.Thread.join&quot;&gt;&lt;code&gt;join()&lt;/code&gt;&lt;/a&gt; a thread before it has been started and attempts to do so raise the same exception.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="092ffcc867124292606acdefca0b00036e878f8f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#threading.excepthook&quot;&gt;&lt;code&gt;threading.excepthook()&lt;/code&gt;&lt;/a&gt; can be overridden to control how uncaught exceptions raised by &lt;a href=&quot;#threading.Thread.run&quot;&gt;&lt;code&gt;Thread.run()&lt;/code&gt;&lt;/a&gt; are handled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf6cd28a5a0c63cba18c27a28dbe983739921aaf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#time.struct_time&quot;&gt;&lt;code&gt;struct_time&lt;/code&gt;&lt;/a&gt; in UTC</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="499177cbfe226da86b68335b6a2102c0993ff3a7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#time.struct_time&quot;&gt;&lt;code&gt;struct_time&lt;/code&gt;&lt;/a&gt; in local time</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a79ab5c71363eb7330679832a40c4be6175edcb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#timeit.default_timer&quot;&gt;&lt;code&gt;default_timer()&lt;/code&gt;&lt;/a&gt; measurements can be affected by other programs running on the same machine, so the best thing to do when accurate timing is necessary is to repeat the timing a few times and use the best time. The &lt;a href=&quot;#cmdoption-timeit-r&quot;&gt;&lt;code&gt;-r&lt;/code&gt;&lt;/a&gt; option is good for this; the default of 5 repetitions is probably enough in most cases. You can use &lt;a href=&quot;time#time.process_time&quot;&gt;&lt;code&gt;time.process_time()&lt;/code&gt;&lt;/a&gt; to measure CPU time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36483c16dad58a240b71d4de13de6100d9bba22e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#tokenize.tokenize&quot;&gt;&lt;code&gt;tokenize()&lt;/code&gt;&lt;/a&gt; determines the source encoding of the file by looking for a UTF-8 BOM or encoding cookie, according to &lt;a href=&quot;https://www.python.org/dev/peps/pep-0263&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;PEP 263&lt;/strong&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32e27eebd3e0f021c8379d446c10899c852df14c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#tokenize.tokenize&quot;&gt;&lt;code&gt;tokenize()&lt;/code&gt;&lt;/a&gt; needs to detect the encoding of source files it tokenizes. The function it uses to do this is available:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f753f9f4b16ed0a6f315ee534717f61058687676" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#traceback.FrameSummary&quot;&gt;&lt;code&gt;FrameSummary&lt;/code&gt;&lt;/a&gt; objects represent a single frame in a traceback.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93ea3fa1a3162132489e4353c61b9bec90aa516c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#traceback.StackSummary&quot;&gt;&lt;code&gt;StackSummary&lt;/code&gt;&lt;/a&gt; objects represent a call stack ready for formatting.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4eb25827b8bfff5bd018dca6ea2ef181f369f7be" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#traceback.TracebackException&quot;&gt;&lt;code&gt;TracebackException&lt;/code&gt;&lt;/a&gt; objects are created from actual exceptions to capture data for later printing in a lightweight fashion.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7cf701da5bf360d18a8cd35e66c424a7fe2be275" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#tracemalloc.Snapshot.compare_to&quot;&gt;&lt;code&gt;Snapshot.compare_to()&lt;/code&gt;&lt;/a&gt; returns a list of &lt;a href=&quot;#tracemalloc.StatisticDiff&quot;&gt;&lt;code&gt;StatisticDiff&lt;/code&gt;&lt;/a&gt; instances. See also the &lt;a href=&quot;#tracemalloc.Statistic&quot;&gt;&lt;code&gt;Statistic&lt;/code&gt;&lt;/a&gt; class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bfb1b2351f92af6ec8f941602270beb3677f5a60" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#tracemalloc.Snapshot.statistics&quot;&gt;&lt;code&gt;Snapshot.statistics()&lt;/code&gt;&lt;/a&gt; returns a list of &lt;a href=&quot;#tracemalloc.Statistic&quot;&gt;&lt;code&gt;Statistic&lt;/code&gt;&lt;/a&gt; instances.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c781610b3c7168f18c4a30d30212aa3605516c70" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#turtle.RawTurtle&quot;&gt;&lt;code&gt;RawTurtle&lt;/code&gt;&lt;/a&gt; (alias: &lt;a href=&quot;#turtle.RawPen&quot;&gt;&lt;code&gt;RawPen&lt;/code&gt;&lt;/a&gt;) defines Turtle objects which draw on a &lt;a href=&quot;#turtle.TurtleScreen&quot;&gt;&lt;code&gt;TurtleScreen&lt;/code&gt;&lt;/a&gt;. Its constructor needs a Canvas, ScrolledCanvas or TurtleScreen as argument, so the RawTurtle objects know where to draw.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbac0f775a48b3325cabe44cd5cc420539f9db2b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#type&quot;&gt;type&lt;/a&gt; - The type to which the command-line argument should be converted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ed668dac454ab003b399b1d5941db1e44f20a92" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#typing.Any&quot;&gt;&lt;code&gt;Any&lt;/code&gt;&lt;/a&gt; is compatible with every type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55fc766753426b52ad8dafb0f29d898a6f29daaa" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#typing.ClassVar&quot;&gt;&lt;code&gt;ClassVar&lt;/code&gt;&lt;/a&gt; accepts only types and cannot be further subscribed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e1c9fcd2f95b68b52645b404f2b757f5871feb8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#typing.ClassVar&quot;&gt;&lt;code&gt;ClassVar&lt;/code&gt;&lt;/a&gt; is not a class itself, and should not be used with &lt;a href=&quot;functions#isinstance&quot;&gt;&lt;code&gt;isinstance()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;functions#issubclass&quot;&gt;&lt;code&gt;issubclass()&lt;/code&gt;&lt;/a&gt;. &lt;a href=&quot;#typing.ClassVar&quot;&gt;&lt;code&gt;ClassVar&lt;/code&gt;&lt;/a&gt; does not change Python runtime behavior, but it can be used by third-party type checkers. For example, a type checker might flag the following code as an error:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d52619c641d90d1cb6d82e7c0a9861bb3f35ec1d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#unittest.TestCase&quot;&gt;&lt;code&gt;TestCase&lt;/code&gt;&lt;/a&gt; instances provide three groups of methods: one group used to run the test, another used by the test implementation to check conditions and report failures, and some inquiry methods allowing information about the test itself to be gathered.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5b863c836afc53015d6e4d1c48801ab3aa00be1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#unittest.TestCase.doCleanups&quot;&gt;&lt;code&gt;doCleanups()&lt;/code&gt;&lt;/a&gt; pops methods off the stack of cleanup functions one at a time, so it can be called at any time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="396e8a331df05b907d4abec9e85b8751e2bc2d04" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#unittest.TestCase.setUp&quot;&gt;&lt;code&gt;TestCase.setUp()&lt;/code&gt;&lt;/a&gt; can also skip the test. This is useful when a resource that needs to be set up is not available.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2975a64dcf528b003140ff17ce73fb696b25dd79" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#unittest.TestLoader&quot;&gt;&lt;code&gt;TestLoader&lt;/code&gt;&lt;/a&gt; objects have the following attributes:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5cad58472689dc8d52f0e386d4e1ba242b6dc89e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#unittest.TestLoader&quot;&gt;&lt;code&gt;TestLoader&lt;/code&gt;&lt;/a&gt; objects have the following methods:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1a240994852fcc2a0e44e8ab29cbe94bd5f405f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#unittest.TestResult&quot;&gt;&lt;code&gt;TestResult&lt;/code&gt;&lt;/a&gt; instances have the following attributes that will be of interest when inspecting the results of running a set of tests:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74adfc86d68fc44d0c1be075a7b1dee88e736195" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#unittest.TestSuite&quot;&gt;&lt;code&gt;TestSuite&lt;/code&gt;&lt;/a&gt; objects behave much like &lt;a href=&quot;#unittest.TestCase&quot;&gt;&lt;code&gt;TestCase&lt;/code&gt;&lt;/a&gt; objects, except they do not actually implement a test. Instead, they are used to aggregate tests into groups of tests that should be run together. Some additional methods are available to add tests to &lt;a href=&quot;#unittest.TestSuite&quot;&gt;&lt;code&gt;TestSuite&lt;/code&gt;&lt;/a&gt; instances:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03d3bbd9c5e9a5fcade8885bd2a0c27562c408f3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#unittest.TestSuite&quot;&gt;&lt;code&gt;TestSuite&lt;/code&gt;&lt;/a&gt; shares the following methods with &lt;a href=&quot;#unittest.TestCase&quot;&gt;&lt;code&gt;TestCase&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8772aef43cc0f37fba93d236c207bdb9f5e6813d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#unittest.doModuleCleanups&quot;&gt;&lt;code&gt;doModuleCleanups()&lt;/code&gt;&lt;/a&gt; pops methods off the stack of cleanup functions one at a time, so it can be called at any time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a91305de8507ac83c8c471b82c35e6114321f73" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#unittest.mock.ANY&quot;&gt;&lt;code&gt;ANY&lt;/code&gt;&lt;/a&gt; can also be used in comparisons with call lists like &lt;a href=&quot;#unittest.mock.Mock.mock_calls&quot;&gt;&lt;code&gt;mock_calls&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1070df6710178f4b0f77f0512102c3c30b0d7041" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#unittest.mock.FILTER_DIR&quot;&gt;&lt;code&gt;FILTER_DIR&lt;/code&gt;&lt;/a&gt; is a module level variable that controls the way mock objects respond to &lt;a href=&quot;functions#dir&quot;&gt;&lt;code&gt;dir()&lt;/code&gt;&lt;/a&gt; (only for Python 2.6 or more recent). The default is &lt;code&gt;True&lt;/code&gt;, which uses the filtering described below, to only show useful members. If you dislike this filtering, or need to switch it off for diagnostic purposes, then set &lt;code&gt;mock.FILTER_DIR = False&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45771aa6e516383e7facae95159d31f10254fe55" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#unittest.mock.MagicMock&quot;&gt;&lt;code&gt;MagicMock&lt;/code&gt;&lt;/a&gt; is a subclass of &lt;a href=&quot;#unittest.mock.Mock&quot;&gt;&lt;code&gt;Mock&lt;/code&gt;&lt;/a&gt; with all the magic methods pre-created and ready to use. There are also non-callable variants, useful when you are mocking out objects that aren&amp;rsquo;t callable: &lt;a href=&quot;#unittest.mock.NonCallableMock&quot;&gt;&lt;code&gt;NonCallableMock&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#unittest.mock.NonCallableMagicMock&quot;&gt;&lt;code&gt;NonCallableMagicMock&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d3a70b5dc2ccf054e91009b1a3bd14c2f021006" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#unittest.mock.Mock&quot;&gt;&lt;code&gt;Mock&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#unittest.mock.MagicMock&quot;&gt;&lt;code&gt;MagicMock&lt;/code&gt;&lt;/a&gt; objects create all attributes and methods as you access them and store details of how they have been used. You can configure them, to specify return values or limit what attributes are available, and then make assertions about how they have been used:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a02488f6e8b10e862669d2bc5a5389924d685e0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#unittest.mock.Mock&quot;&gt;&lt;code&gt;Mock&lt;/code&gt;&lt;/a&gt; is a flexible mock object intended to replace the use of stubs and test doubles throughout your code. Mocks are callable and create attributes as new mocks when you access them &lt;a href=&quot;#id3&quot; id=&quot;id1&quot;&gt;1&lt;/a&gt;. Accessing the same attribute will always return the same mock. Mocks record how you use them, allowing you to make assertions about what your code has done to them.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c0c1263a67dde9aa6856c27f4ba54d29d53c470" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#unittest.mock.Mock&quot;&gt;&lt;code&gt;Mock&lt;/code&gt;&lt;/a&gt; is a very powerful and flexible object, but it suffers from two flaws when used to mock out objects from a system under test. One of these flaws is specific to the &lt;a href=&quot;#unittest.mock.Mock&quot;&gt;&lt;code&gt;Mock&lt;/code&gt;&lt;/a&gt; api and the other is a more general problem with using mock objects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e81b9b64f712149a2fc14f8814283d97c14ca8c1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#unittest.mock.Mock&quot;&gt;&lt;code&gt;Mock&lt;/code&gt;&lt;/a&gt; objects limit the results of &lt;code&gt;dir(some_mock)&lt;/code&gt; to useful results. For mocks with a &lt;em&gt;spec&lt;/em&gt; this includes all the permitted attributes for the mock.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a8e9bd32fac08624f8094f41598e8bbb405b756" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#unittest.mock.Mock&quot;&gt;&lt;code&gt;Mock&lt;/code&gt;&lt;/a&gt; supports mocking the Python protocol methods, also known as &amp;ldquo;magic methods&amp;rdquo;. This allows mock objects to replace containers or other objects that implement Python protocols.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41b33ae3317f7b02d5615d0fdfb18dcc6900304c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#unittest.mock.Mock.__class__&quot;&gt;&lt;code&gt;__class__&lt;/code&gt;&lt;/a&gt; is assignable to, this allows a mock to pass an &lt;a href=&quot;functions#isinstance&quot;&gt;&lt;code&gt;isinstance()&lt;/code&gt;&lt;/a&gt; check without forcing you to use a spec:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="feb017efea255fad51674a9ff8fc9822b7eca1c3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#unittest.mock.Mock.call_args&quot;&gt;&lt;code&gt;call_args&lt;/code&gt;&lt;/a&gt;, along with members of the lists &lt;a href=&quot;#unittest.mock.Mock.call_args_list&quot;&gt;&lt;code&gt;call_args_list&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#unittest.mock.Mock.method_calls&quot;&gt;&lt;code&gt;method_calls&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#unittest.mock.Mock.mock_calls&quot;&gt;&lt;code&gt;mock_calls&lt;/code&gt;&lt;/a&gt; are &lt;a href=&quot;#unittest.mock.call&quot;&gt;&lt;code&gt;call&lt;/code&gt;&lt;/a&gt; objects. These are tuples, so they can be unpacked to get at the individual arguments and make more complex assertions. See &lt;a href=&quot;#calls-as-tuples&quot;&gt;calls as tuples&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="100629e9b36544f9fa9b7eefa4f64f414f141690" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#unittest.mock.Mock.configure_mock&quot;&gt;&lt;code&gt;configure_mock()&lt;/code&gt;&lt;/a&gt; exists to make it easier to do configuration after the mock has been created.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4b9e5d27f9ecaa4f70fa10d43daf8b009f94ef4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#unittest.mock.Mock.mock_calls&quot;&gt;&lt;code&gt;mock_calls&lt;/code&gt;&lt;/a&gt; records &lt;em&gt;all&lt;/em&gt; calls to the mock object, its methods, magic methods &lt;em&gt;and&lt;/em&gt; return value mocks.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd540f3a2146ee0984c02aa2ce91fb317e1b2bbd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#unittest.mock.Mock.return_value&quot;&gt;&lt;code&gt;return_value&lt;/code&gt;&lt;/a&gt; can also be set in the constructor:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2fae1805cff59bcbfe7ee55bf4e989559348893" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#unittest.mock.Mock.side_effect&quot;&gt;&lt;code&gt;side_effect&lt;/code&gt;&lt;/a&gt; can be set in the constructor. Here&amp;rsquo;s an example that adds one to the value the mock is called with and returns it:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="663c2e3c0ff9627cc3dba730eea5b775a750f1bc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#unittest.mock.call&quot;&gt;&lt;code&gt;call()&lt;/code&gt;&lt;/a&gt; is a helper object for making simpler assertions, for comparing with &lt;a href=&quot;#unittest.mock.Mock.call_args&quot;&gt;&lt;code&gt;call_args&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#unittest.mock.Mock.call_args_list&quot;&gt;&lt;code&gt;call_args_list&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#unittest.mock.Mock.mock_calls&quot;&gt;&lt;code&gt;mock_calls&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#unittest.mock.Mock.method_calls&quot;&gt;&lt;code&gt;method_calls&lt;/code&gt;&lt;/a&gt;. &lt;a href=&quot;#unittest.mock.call&quot;&gt;&lt;code&gt;call()&lt;/code&gt;&lt;/a&gt; can also be used with &lt;a href=&quot;#unittest.mock.Mock.assert_has_calls&quot;&gt;&lt;code&gt;assert_has_calls()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d2ae0423814682b87547710444b28b0b712ed75" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#unittest.mock.call.call_list&quot;&gt;&lt;code&gt;call_list()&lt;/code&gt;&lt;/a&gt; can construct the sequence of calls from the same chained call:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7591a05fba8d531101c65b3635fc9abe95faeed3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#unittest.mock.create_autospec&quot;&gt;&lt;code&gt;create_autospec()&lt;/code&gt;&lt;/a&gt; also takes arbitrary keyword arguments that are passed to the constructor of the created mock.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a75d411d15d6369beb95474ab23024f0999d1aef" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#unittest.mock.create_autospec&quot;&gt;&lt;code&gt;create_autospec()&lt;/code&gt;&lt;/a&gt; can also be used on classes, where it copies the signature of the &lt;code&gt;__init__&lt;/code&gt; method, and on callable objects where it copies the signature of the &lt;code&gt;__call__&lt;/code&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e536645d600bf96e55624dadf411725a5b8f18c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#unittest.mock.patch&quot;&gt;&lt;code&gt;patch()&lt;/code&gt;&lt;/a&gt; acts as a function decorator, class decorator or a context manager. Inside the body of the function or with statement, the &lt;em&gt;target&lt;/em&gt; is patched with a &lt;em&gt;new&lt;/em&gt; object. When the function/with statement exits the patch is undone.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90ab8f996fb547515f7de9ef664bb5e77f94aed9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#unittest.mock.patch&quot;&gt;&lt;code&gt;patch()&lt;/code&gt;&lt;/a&gt; as function decorator, creating the mock for you and passing it into the decorated function:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f0846037ef272035b0013e9c5430db4d9119ce6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#unittest.mock.patch&quot;&gt;&lt;code&gt;patch()&lt;/code&gt;&lt;/a&gt; is straightforward to use. The key is to do the patching in the right namespace. See the section &lt;a href=&quot;#id6&quot;&gt;where to patch&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4c3443ecfbe5bb0f10a00a71ac044d6cd6f17e9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#unittest.mock.patch&quot;&gt;&lt;code&gt;patch()&lt;/code&gt;&lt;/a&gt; takes arbitrary keyword arguments. These will be passed to the &lt;a href=&quot;#unittest.mock.Mock&quot;&gt;&lt;code&gt;Mock&lt;/code&gt;&lt;/a&gt; (or &lt;em&gt;new_callable&lt;/em&gt;) on construction.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f34f5a365abcef0937fe48a704dbda1595042bc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#unittest.mock.patch&quot;&gt;&lt;code&gt;patch()&lt;/code&gt;&lt;/a&gt; works by (temporarily) changing the object that a &lt;em&gt;name&lt;/em&gt; points to with another one. There can be many names pointing to any individual object, so for patching to work you must ensure that you patch the name used by the system under test.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4812f25bf783824b19d944686ea522000811f442" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#unittest.mock.patch.dict&quot;&gt;&lt;code&gt;patch.dict()&lt;/code&gt;&lt;/a&gt; can also be called with arbitrary keyword arguments to set values in the dictionary.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2c97c768d1ec73d9e7bee5487d96bde8c5ae9f2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#unittest.mock.patch.dict&quot;&gt;&lt;code&gt;patch.dict()&lt;/code&gt;&lt;/a&gt; can be used as a context manager, decorator or class decorator:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de68701e185558e1855fc84debad7c83ea2b56d1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#unittest.mock.patch.dict&quot;&gt;&lt;code&gt;patch.dict()&lt;/code&gt;&lt;/a&gt; can be used to add members to a dictionary, or simply let a test change a dictionary, and ensure the dictionary is restored when the test ends.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a520e94efcaa68c5b34b13cee601682af56b76f1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#unittest.mock.patch.dict&quot;&gt;&lt;code&gt;patch.dict()&lt;/code&gt;&lt;/a&gt; can be used with dictionary like objects that aren&amp;rsquo;t actually dictionaries. At the very minimum they must support item getting, setting, deleting and either iteration or membership test. This corresponds to the magic methods &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__getitem__&quot;&gt;&lt;code&gt;__getitem__()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__setitem__&quot;&gt;&lt;code&gt;__setitem__()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__delitem__&quot;&gt;&lt;code&gt;__delitem__()&lt;/code&gt;&lt;/a&gt; and either &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__iter__&quot;&gt;&lt;code&gt;__iter__()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__contains__&quot;&gt;&lt;code&gt;__contains__()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d10daa3909fd49335ba961995749c24a7d40cae" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#unittest.mock.patch.multiple&quot;&gt;&lt;code&gt;patch.multiple()&lt;/code&gt;&lt;/a&gt; can be nested with other &lt;code&gt;patch&lt;/code&gt; decorators, but put arguments passed by keyword &lt;em&gt;after&lt;/em&gt; any of the standard arguments created by &lt;a href=&quot;#unittest.mock.patch&quot;&gt;&lt;code&gt;patch()&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbee2b136c8ee11ef28521cab0b48a7e63e10ee2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#unittest.mock.patch.multiple&quot;&gt;&lt;code&gt;patch.multiple()&lt;/code&gt;&lt;/a&gt; can be used as a decorator, class decorator or a context manager. The arguments &lt;em&gt;spec&lt;/em&gt;, &lt;em&gt;spec_set&lt;/em&gt;, &lt;em&gt;create&lt;/em&gt;, &lt;em&gt;autospec&lt;/em&gt; and &lt;em&gt;new_callable&lt;/em&gt; have the same meaning as for &lt;a href=&quot;#unittest.mock.patch&quot;&gt;&lt;code&gt;patch()&lt;/code&gt;&lt;/a&gt;. These arguments will be applied to &lt;em&gt;all&lt;/em&gt; patches done by &lt;a href=&quot;#unittest.mock.patch.multiple&quot;&gt;&lt;code&gt;patch.multiple()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b44066751ec51f16d6f1c8b3e049e578741c8089" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#unittest.mock.patch.object&quot;&gt;&lt;code&gt;patch.object()&lt;/code&gt;&lt;/a&gt; can be used as a decorator, class decorator or a context manager. Arguments &lt;em&gt;new&lt;/em&gt;, &lt;em&gt;spec&lt;/em&gt;, &lt;em&gt;create&lt;/em&gt;, &lt;em&gt;spec_set&lt;/em&gt;, &lt;em&gt;autospec&lt;/em&gt; and &lt;em&gt;new_callable&lt;/em&gt; have the same meaning as for &lt;a href=&quot;#unittest.mock.patch&quot;&gt;&lt;code&gt;patch()&lt;/code&gt;&lt;/a&gt;. Like &lt;a href=&quot;#unittest.mock.patch&quot;&gt;&lt;code&gt;patch()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#unittest.mock.patch.object&quot;&gt;&lt;code&gt;patch.object()&lt;/code&gt;&lt;/a&gt; takes arbitrary keyword arguments for configuring the mock object it creates.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f022ea08cb2d117df5b23e8975abc578364f3165" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#urllib.request.BaseHandler&quot;&gt;&lt;code&gt;BaseHandler&lt;/code&gt;&lt;/a&gt; objects provide a couple of methods that are directly useful, and others that are meant to be used by derived classes. These are intended for direct use:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="774643659f15713b50270e9b3aca2678bdcc370b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#urllib.request.CacheFTPHandler&quot;&gt;&lt;code&gt;CacheFTPHandler&lt;/code&gt;&lt;/a&gt; objects are &lt;a href=&quot;#urllib.request.FTPHandler&quot;&gt;&lt;code&gt;FTPHandler&lt;/code&gt;&lt;/a&gt; objects with the following additional methods:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a535bcfc12c945e86b2892350704a53a05e1861" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#urllib.request.FancyURLopener&quot;&gt;&lt;code&gt;FancyURLopener&lt;/code&gt;&lt;/a&gt; subclasses &lt;a href=&quot;#urllib.request.URLopener&quot;&gt;&lt;code&gt;URLopener&lt;/code&gt;&lt;/a&gt; providing default handling for the following HTTP response codes: 301, 302, 303, 307 and 401. For the 30x response codes listed above, the &lt;em&gt;Location&lt;/em&gt; header is used to fetch the actual URL. For 401 response codes (authentication required), basic HTTP authentication is performed. For the 30x response codes, recursion is bounded by the value of the &lt;em&gt;maxtries&lt;/em&gt; attribute, which defaults to 10.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3e8471a05d3d026cf09015fa1aa429915d55973" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#urllib.request.HTTPCookieProcessor&quot;&gt;&lt;code&gt;HTTPCookieProcessor&lt;/code&gt;&lt;/a&gt; instances have one attribute:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed559984296391f26e5a1ce904bd270c6987aa9d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#urllib.request.OpenerDirector&quot;&gt;&lt;code&gt;OpenerDirector&lt;/code&gt;&lt;/a&gt; automatically adds a &lt;em&gt;User-Agent&lt;/em&gt; header to every &lt;a href=&quot;#urllib.request.Request&quot;&gt;&lt;code&gt;Request&lt;/code&gt;&lt;/a&gt;. To change this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f58b7fb1c72f3291619b1a688cdd0884b0bf666b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#urllib.request.OpenerDirector&quot;&gt;&lt;code&gt;OpenerDirector&lt;/code&gt;&lt;/a&gt; instances have the following methods:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb6ace86222e222a090b714518670c86d1d4f767" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#urllib.request.URLopener&quot;&gt;&lt;code&gt;URLopener&lt;/code&gt;&lt;/a&gt; objects will raise an &lt;a href=&quot;exceptions#OSError&quot;&gt;&lt;code&gt;OSError&lt;/code&gt;&lt;/a&gt; exception if the server returns an error code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f14ebd0dfa9a2626977213c49c7eed522460a140" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#urllib.request.build_opener&quot;&gt;&lt;code&gt;build_opener()&lt;/code&gt;&lt;/a&gt; provides many handlers by default, including a &lt;a href=&quot;#urllib.request.ProxyHandler&quot;&gt;&lt;code&gt;ProxyHandler&lt;/code&gt;&lt;/a&gt;. By default, &lt;a href=&quot;#urllib.request.ProxyHandler&quot;&gt;&lt;code&gt;ProxyHandler&lt;/code&gt;&lt;/a&gt; uses the environment variables named &lt;code&gt;&amp;lt;scheme&amp;gt;_proxy&lt;/code&gt;, where &lt;code&gt;&amp;lt;scheme&amp;gt;&lt;/code&gt; is the URL scheme involved. For example, the &lt;code id=&quot;index-9&quot;&gt;http_proxy&lt;/code&gt; environment variable is read to obtain the HTTP proxy&amp;rsquo;s URL.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c5d0bfd1faf4d27738216cefc89fccc82b88abb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#urllib.request.urlretrieve&quot;&gt;&lt;code&gt;urlretrieve()&lt;/code&gt;&lt;/a&gt; will raise &lt;code&gt;ContentTooShortError&lt;/code&gt; when it detects that the amount of data available was less than the expected amount (which is the size reported by a &lt;em&gt;Content-Length&lt;/em&gt; header). This can occur, for example, when the download is interrupted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e90dbeecbb76ca306e20d120ff3ace90bb9a0ae" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#usage&quot;&gt;usage&lt;/a&gt; - The string describing the program usage (default: generated from arguments added to parser)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d33b6de8f88a68c160ba4947cfb68c5691d1bc9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#uu.decode&quot;&gt;&lt;code&gt;decode()&lt;/code&gt;&lt;/a&gt; may print a warning to standard error if the input was produced by an incorrect uuencoder and Python could recover from that error. Setting &lt;em&gt;quiet&lt;/em&gt; to a true value silences this warning.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0616bf6444b2655989eafb676a65e1efdf3c4b40" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#uuid.UUID&quot;&gt;&lt;code&gt;UUID&lt;/code&gt;&lt;/a&gt; instances have these read-only attributes:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffe451ebcda16ce05ea4b542972db2dea356080d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#weakref.WeakKeyDictionary&quot;&gt;&lt;code&gt;WeakKeyDictionary&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#weakref.WeakValueDictionary&quot;&gt;&lt;code&gt;WeakValueDictionary&lt;/code&gt;&lt;/a&gt; use weak references in their implementation, setting up callback functions on the weak references that notify the weak dictionaries when a key or value has been reclaimed by garbage collection. &lt;a href=&quot;#weakref.WeakSet&quot;&gt;&lt;code&gt;WeakSet&lt;/code&gt;&lt;/a&gt; implements the &lt;a href=&quot;stdtypes#set&quot;&gt;&lt;code&gt;set&lt;/code&gt;&lt;/a&gt; interface, but keeps weak references to its elements, just like a &lt;a href=&quot;#weakref.WeakKeyDictionary&quot;&gt;&lt;code&gt;WeakKeyDictionary&lt;/code&gt;&lt;/a&gt; does.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="079e2fffe69a0bd470685477e9b191d251a7076f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#weakref.WeakKeyDictionary&quot;&gt;&lt;code&gt;WeakKeyDictionary&lt;/code&gt;&lt;/a&gt; objects have an additional method that exposes the internal references directly. The references are not guaranteed to be &amp;ldquo;live&amp;rdquo; at the time they are used, so the result of calling the references needs to be checked before being used. This can be used to avoid creating references that will cause the garbage collector to keep the keys around longer than needed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4182393b3b49f4cf83f24ab33d17c9ccffc0f127" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#weakref.WeakValueDictionary&quot;&gt;&lt;code&gt;WeakValueDictionary&lt;/code&gt;&lt;/a&gt; objects have an additional method that has the same issues as the &lt;code&gt;keyrefs()&lt;/code&gt; method of &lt;a href=&quot;#weakref.WeakKeyDictionary&quot;&gt;&lt;code&gt;WeakKeyDictionary&lt;/code&gt;&lt;/a&gt; objects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="023b1cf0223528502668be84d525b9797f30d1e5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#weakref.finalize&quot;&gt;&lt;code&gt;finalize&lt;/code&gt;&lt;/a&gt; provides a straight forward way to register a cleanup function to be called when an object is garbage collected. This is simpler to use than setting up a callback function on a raw weak reference, since the module automatically ensures that the finalizer remains alive until the object is collected.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c58d6962edd07a341dc880d6d3eeafd661f0e75f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#winsound.PlaySound&quot;&gt;&lt;code&gt;PlaySound()&lt;/code&gt;&lt;/a&gt;&lt;em&gt;name&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6106e13f000f4d13159099a26156c28b6318bced" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#wsgiref.handlers.BaseHandler&quot;&gt;&lt;code&gt;BaseHandler&lt;/code&gt;&lt;/a&gt; instances have only one method intended for external use:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c68f4266cbecc28940401461aa9f8f4741ec407d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#wsgiref.headers.Headers&quot;&gt;&lt;code&gt;Headers&lt;/code&gt;&lt;/a&gt; objects also support &lt;code&gt;keys()&lt;/code&gt;, &lt;code&gt;values()&lt;/code&gt;, and &lt;code&gt;items()&lt;/code&gt; methods. The lists returned by &lt;code&gt;keys()&lt;/code&gt; and &lt;code&gt;items()&lt;/code&gt; can include the same key more than once if there is a multi-valued header. The &lt;code&gt;len()&lt;/code&gt; of a &lt;a href=&quot;#wsgiref.headers.Headers&quot;&gt;&lt;code&gt;Headers&lt;/code&gt;&lt;/a&gt; object is the same as the length of its &lt;code&gt;items()&lt;/code&gt;, which is the same as the length of the wrapped header list. In fact, the &lt;code&gt;items()&lt;/code&gt; method just returns a copy of the wrapped header list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6510d49a294dc4b6e940f9107bb6fdc026bc3b63" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#wsgiref.headers.Headers&quot;&gt;&lt;code&gt;Headers&lt;/code&gt;&lt;/a&gt; objects support typical mapping operations including &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__getitem__&quot;&gt;&lt;code&gt;__getitem__()&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;get()&lt;/code&gt;, &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__setitem__&quot;&gt;&lt;code&gt;__setitem__()&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;setdefault()&lt;/code&gt;, &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__delitem__&quot;&gt;&lt;code&gt;__delitem__()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__contains__&quot;&gt;&lt;code&gt;__contains__()&lt;/code&gt;&lt;/a&gt;. For each of these methods, the key is the header name (treated case-insensitively), and the value is the first value associated with that header name. Setting a header deletes any existing values for that header, then adds a new value at the end of the wrapped header list. Headers&amp;rsquo; existing order is generally maintained, with new headers added to the end of the wrapped list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d0f2a4edf89050072842608a52a98cdcba47804" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#wsgiref.simple_server.WSGIServer&quot;&gt;&lt;code&gt;WSGIServer&lt;/code&gt;&lt;/a&gt; is a subclass of &lt;a href=&quot;http.server#http.server.HTTPServer&quot;&gt;&lt;code&gt;http.server.HTTPServer&lt;/code&gt;&lt;/a&gt;, so all of its methods (such as &lt;code&gt;serve_forever()&lt;/code&gt; and &lt;code&gt;handle_request()&lt;/code&gt;) are available. &lt;a href=&quot;#wsgiref.simple_server.WSGIServer&quot;&gt;&lt;code&gt;WSGIServer&lt;/code&gt;&lt;/a&gt; also provides these WSGI-specific methods:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed64c4c41cca18fc208bbe4912e564502cd9112f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#xdrlib.Packer&quot;&gt;&lt;code&gt;Packer&lt;/code&gt;&lt;/a&gt; instances have the following methods:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36c3373e4db257c527e7b3b126f0792097658f32" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#xdrlib.Packer&quot;&gt;&lt;code&gt;Packer&lt;/code&gt;&lt;/a&gt; is the class for packing data into XDR representation. The &lt;a href=&quot;#xdrlib.Packer&quot;&gt;&lt;code&gt;Packer&lt;/code&gt;&lt;/a&gt; class is instantiated with no arguments.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94448daf87b77d27727b14e8673c311b9a9ec95b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#xml.etree.ElementTree.Element&quot;&gt;&lt;code&gt;Element&lt;/code&gt;&lt;/a&gt; has some useful methods that help iterate recursively over all the sub-tree below it (its children, their children, and so on). For example, &lt;a href=&quot;#xml.etree.ElementTree.Element.iter&quot;&gt;&lt;code&gt;Element.iter()&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79a2935e7a3eea6a28ee89759cb37954495751fe" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#xml.etree.ElementTree.Element&quot;&gt;&lt;code&gt;Element&lt;/code&gt;&lt;/a&gt; objects also support the following sequence type methods for working with subelements: &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__delitem__&quot;&gt;&lt;code&gt;__delitem__()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__getitem__&quot;&gt;&lt;code&gt;__getitem__()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__setitem__&quot;&gt;&lt;code&gt;__setitem__()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__len__&quot;&gt;&lt;code&gt;__len__()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a2fed83e0245745436047da7ec75073fc7daa1a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#xml.etree.ElementTree.Element.findall&quot;&gt;&lt;code&gt;Element.findall()&lt;/code&gt;&lt;/a&gt; finds only elements with a tag which are direct children of the current element. &lt;a href=&quot;#xml.etree.ElementTree.Element.find&quot;&gt;&lt;code&gt;Element.find()&lt;/code&gt;&lt;/a&gt; finds the &lt;em&gt;first&lt;/em&gt; child with a particular tag, and &lt;a href=&quot;#xml.etree.ElementTree.Element.text&quot;&gt;&lt;code&gt;Element.text&lt;/code&gt;&lt;/a&gt; accesses the element&amp;rsquo;s text content. &lt;a href=&quot;#xml.etree.ElementTree.Element.get&quot;&gt;&lt;code&gt;Element.get()&lt;/code&gt;&lt;/a&gt; accesses the element&amp;rsquo;s attributes:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8accc47fe19c8837485a5ed2817135fc939296b3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#xml.etree.ElementTree.ElementTree&quot;&gt;&lt;code&gt;ElementTree&lt;/code&gt;&lt;/a&gt; provides a simple way to build XML documents and write them to files. The &lt;a href=&quot;#xml.etree.ElementTree.ElementTree.write&quot;&gt;&lt;code&gt;ElementTree.write()&lt;/code&gt;&lt;/a&gt; method serves this purpose.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7b7a303c8733d25c685bffe8dffc215252889a5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#xml.etree.ElementTree.XMLParser.feed&quot;&gt;&lt;code&gt;XMLParser.feed()&lt;/code&gt;&lt;/a&gt; calls &lt;em&gt;target&lt;/em&gt;&amp;rsquo;s &lt;code&gt;start(tag, attrs_dict)&lt;/code&gt; method for each opening tag, its &lt;code&gt;end(tag)&lt;/code&gt; method for each closing tag, and data is processed by method &lt;code&gt;data(data)&lt;/code&gt;. For further supported callback methods, see the &lt;a href=&quot;#xml.etree.ElementTree.TreeBuilder&quot;&gt;&lt;code&gt;TreeBuilder&lt;/code&gt;&lt;/a&gt; class. &lt;a href=&quot;#xml.etree.ElementTree.XMLParser.close&quot;&gt;&lt;code&gt;XMLParser.close()&lt;/code&gt;&lt;/a&gt; calls &lt;em&gt;target&lt;/em&gt;&amp;rsquo;s method &lt;code&gt;close()&lt;/code&gt;. &lt;a href=&quot;#xml.etree.ElementTree.XMLParser&quot;&gt;&lt;code&gt;XMLParser&lt;/code&gt;&lt;/a&gt; can be used not only for building a tree structure. This is an example of counting the maximum depth of an XML file:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35771670c7968e831f1f2e7f2b3cab16312b9317" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#xml.etree.ElementTree.XMLPullParser&quot;&gt;&lt;code&gt;XMLPullParser&lt;/code&gt;&lt;/a&gt; only guarantees that it has seen the &amp;ldquo;&amp;gt;&amp;rdquo; character of a starting tag when it emits a &amp;ldquo;start&amp;rdquo; event, so the attributes are defined, but the contents of the text and tail attributes are undefined at that point. The same applies to the element children; they may or may not be present.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3ea71118340eb50b63af0d6f6a44b3aa5d5d850" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#xml.etree.ElementTree.fromstring&quot;&gt;&lt;code&gt;fromstring()&lt;/code&gt;&lt;/a&gt; parses XML from a string directly into an &lt;a href=&quot;#xml.etree.ElementTree.Element&quot;&gt;&lt;code&gt;Element&lt;/code&gt;&lt;/a&gt;, which is the root element of the parsed tree. Other parsing functions may create an &lt;a href=&quot;#xml.etree.ElementTree.ElementTree&quot;&gt;&lt;code&gt;ElementTree&lt;/code&gt;&lt;/a&gt;. Check the documentation to be sure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dcdd0c7df94719f39b947ee21424a80bdc5ae026" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#xml.etree.ElementTree.iterparse&quot;&gt;&lt;code&gt;iterparse()&lt;/code&gt;&lt;/a&gt; only guarantees that it has seen the &amp;ldquo;&amp;gt;&amp;rdquo; character of a starting tag when it emits a &amp;ldquo;start&amp;rdquo; event, so the attributes are defined, but the contents of the text and tail attributes are undefined at that point. The same applies to the element children; they may or may not be present.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c08cdf2bb7ebc10b73391ad596a622de97fafbcd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#xml.parsers.expat.ExpatError&quot;&gt;&lt;code&gt;ExpatError&lt;/code&gt;&lt;/a&gt; exceptions have a number of interesting attributes:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02ffc13568539c0443909ab791d76c329512289f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#xml.sax.handler.DTDHandler&quot;&gt;&lt;code&gt;DTDHandler&lt;/code&gt;&lt;/a&gt; instances provide the following methods:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d57da0c912cf7d44f5a322c743be850a864a8b1d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#xmlrpc.client.Binary&quot;&gt;&lt;code&gt;Binary&lt;/code&gt;&lt;/a&gt; objects have the following methods, supported mainly for internal use by the marshalling/unmarshalling code:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ae73665fbf7177a8487eec29bd199c7a68796d9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#xmlrpc.client.Binary&quot;&gt;&lt;code&gt;Binary&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;stdtypes#bytearray&quot;&gt;&lt;code&gt;bytearray&lt;/code&gt;&lt;/a&gt;. Returned type depends on the value of the &lt;em&gt;use_builtin_types&lt;/em&gt; flag.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a5eb36e0a09437f23a56a109dde5ec95a53642c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#xmlrpc.client.DateTime&quot;&gt;&lt;code&gt;DateTime&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;datetime#datetime.datetime&quot;&gt;&lt;code&gt;datetime.datetime&lt;/code&gt;&lt;/a&gt;. Returned type depends on values of &lt;em&gt;use_builtin_types&lt;/em&gt; and &lt;em&gt;use_datetime&lt;/em&gt; flags.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe62926db4ffc65310a4cca30b284f055e30f90f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#zip&quot;&gt;&lt;code&gt;zip()&lt;/code&gt;&lt;/a&gt; in conjunction with the &lt;code&gt;*&lt;/code&gt; operator can be used to unzip a list:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2beb52099c2fab77f7b87cc882f11661883b906" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#zip&quot;&gt;&lt;code&gt;zip()&lt;/code&gt;&lt;/a&gt; should only be used with unequal length inputs when you don&amp;rsquo;t care about trailing, unmatched values from the longer iterables. If those values are important, use &lt;a href=&quot;itertools#itertools.zip_longest&quot;&gt;&lt;code&gt;itertools.zip_longest()&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="180a0d8e42ba203d6f3752a78b24223c47d2169a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#zipfile.ZipFile.open&quot;&gt;&lt;code&gt;open()&lt;/code&gt;&lt;/a&gt; is also a context manager and therefore supports the &lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#with&quot;&gt;&lt;code&gt;with&lt;/code&gt;&lt;/a&gt; statement:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8a52c74a77ba516989a6c40514fb59d2de56fa2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#zipimport.ZipImportError&quot;&gt;&lt;code&gt;ZipImportError&lt;/code&gt;&lt;/a&gt; is raised if &lt;em&gt;archivepath&lt;/em&gt; doesn&amp;rsquo;t point to a valid ZIP archive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a76fb562f8e589b2c375fbc30682297c7815cd3f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#zipimport.zipimporter&quot;&gt;&lt;code&gt;zipimporter&lt;/code&gt;&lt;/a&gt; is the class for importing ZIP files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f803cf85ce51af39a29c1afa5483d692174cd82d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;asyncio-eventloop#asyncio-example-call-later&quot;&gt;Using loop.call_later()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4382475df6ce27527ec098a6ea16bd9cf85b32a8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;asyncio-eventloop#asyncio-example-lowlevel-helloworld&quot;&gt;Using asyncio.get_event_loop() and loop.run_forever()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="001cf52249293d604dcad1b637d25d708a651652" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;asyncio-eventloop#asyncio-example-unix-signals&quot;&gt;Using loop.add_signal_handler()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="824da9fa83100f7495ab7d54bc0e20b355dc8c5f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;asyncio-eventloop#asyncio-example-watch-fd&quot;&gt;Using add_reader() to watch an FD for read events&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c78fb58d6480a53b06b7ca4099a0867d49e287ca" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;asyncio-eventloop#asyncio.ProactorEventLoop&quot;&gt;&lt;code&gt;ProactorEventLoop&lt;/code&gt;&lt;/a&gt; has the following limitations:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3dac74d61e6af78593f40c0f301d8715ce404884" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;asyncio-eventloop#asyncio.SelectorEventLoop&quot;&gt;&lt;code&gt;SelectorEventLoop&lt;/code&gt;&lt;/a&gt; has the following limitations:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="395a2dcfc61497fa6266a7756883b6130208d02a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;asyncio-eventloop#asyncio.loop.add_reader&quot;&gt;&lt;code&gt;loop.add_reader()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;asyncio-eventloop#asyncio.loop.add_writer&quot;&gt;&lt;code&gt;loop.add_writer()&lt;/code&gt;&lt;/a&gt; cannot be used to monitor file I/O.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bac952f62bd728b72560e8ac17b67325855e648" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;asyncio-eventloop#asyncio.loop.add_reader&quot;&gt;&lt;code&gt;loop.add_reader()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;asyncio-eventloop#asyncio.loop.add_writer&quot;&gt;&lt;code&gt;loop.add_writer()&lt;/code&gt;&lt;/a&gt; only accept socket handles (e.g. pipe file descriptors are not supported).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14de1f41df17fa2775bccbabde087d637a5ff102" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;asyncio-eventloop#asyncio.loop.add_signal_handler&quot;&gt;&lt;code&gt;loop.add_signal_handler()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;asyncio-eventloop#asyncio.loop.remove_signal_handler&quot;&gt;&lt;code&gt;loop.remove_signal_handler()&lt;/code&gt;&lt;/a&gt; are not supported.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bae8b992a8a05052c9b5975a700f0b10f2aea56c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;asyncio-eventloop#asyncio.loop.create_unix_connection&quot;&gt;&lt;code&gt;loop.create_unix_connection()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;asyncio-eventloop#asyncio.loop.create_unix_server&quot;&gt;&lt;code&gt;loop.create_unix_server()&lt;/code&gt;&lt;/a&gt; are not supported. The &lt;a href=&quot;socket#socket.AF_UNIX&quot;&gt;&lt;code&gt;socket.AF_UNIX&lt;/code&gt;&lt;/a&gt; socket family is specific to Unix.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83cae06ec17351eb97a87bc1ae73a885d72617ae" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;asyncio-future#asyncio-example-future&quot;&gt;Using asyncio.get_running_loop()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="768fe6cb0ca08c99b9f7e24b7565c977121c594d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;asyncio-future#asyncio-futures&quot;&gt;bridge&lt;/a&gt; callback-based libraries and code with async/await syntax.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1cf24824edffd41ee468f03aec77a5ff04605f9f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;asyncio-protocol#asyncio-example-subprocess-proto&quot;&gt;Using loop.subprocess_exec()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abb830d9a8f3b0456dbc972ba387ea99484de15d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;asyncio-queue#asyncio-example-queue-dist&quot;&gt;Using asyncio.Queue to distribute workload between several Tasks&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4622a9e590e89c5af14f7468d598df8eb874c37e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;asyncio-stream#asyncio-example-stream&quot;&gt;Example TCP client&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="646331441857d069327129d8e28d944a435cc066" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;asyncio-subprocess#asyncio-example-subprocess-shell&quot;&gt;Executing a shell command&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e054c36bb8af1d29b9f9bd0c0845bbb4d268f56" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;asyncio-subprocess#asyncio-subprocess&quot;&gt;Subprocesses&lt;/a&gt; are not supported, i.e. &lt;a href=&quot;asyncio-eventloop#asyncio.loop.subprocess_exec&quot;&gt;&lt;code&gt;loop.subprocess_exec()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;asyncio-eventloop#asyncio.loop.subprocess_shell&quot;&gt;&lt;code&gt;loop.subprocess_shell()&lt;/code&gt;&lt;/a&gt; methods are not implemented.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5ea641f6a93d6793f719e5642f77b49f2353f41" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;asyncio-sync#asyncio-example-sync-event&quot;&gt;Using asyncio.Event&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac1cb6bf22e5d25a1e9a29a17318b265dc3c1c7a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;asyncio-sync#asyncio-sync&quot;&gt;synchronize&lt;/a&gt; concurrent code;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b6487c7a376185610e905a0cc77c9bd65a93f8b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;asyncio-task#asyncio-example-gather&quot;&gt;Using asyncio.gather() to run things in parallel&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58aefb43a6caff14da5c3fbf0af4c7a5c2a6b00f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;asyncio-task#asyncio-example-sleep&quot;&gt;Using asyncio.sleep()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f093e23dc875d921ba8e4ecd7d30fc3aa9c2548f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;asyncio-task#asyncio-example-task-cancel&quot;&gt;Cancellation&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5911fb451596fe2583ddfab9ac852b7973cc497b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;asyncio-task#asyncio-example-task-cancel&quot;&gt;Handling CancelledError to run code on cancellation request&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de7dd14925222b1b5e5566c003547171d03ef22b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;asyncio-task#asyncio-example-waitfor&quot;&gt;Using asyncio.wait_for() to enforce a timeout&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50940aab3132e582ec1339b8e17fd14ef21833a9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;asyncio-task#coroutine&quot;&gt;run Python coroutines&lt;/a&gt; concurrently and have full control over their execution;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1007a89acb3d662afe718aae4fd3f90c7e1f5e5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;base64#base64.encodebytes&quot;&gt;&lt;code&gt;base64.encodebytes()&lt;/code&gt;&lt;/a&gt; / &lt;a href=&quot;base64#base64.decodebytes&quot;&gt;&lt;code&gt;base64.decodebytes()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11c14b23232f1d0f96b0f9172fabd91e8b16dd86" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;binascii#binascii.b2a_hex&quot;&gt;&lt;code&gt;binascii.b2a_hex()&lt;/code&gt;&lt;/a&gt; / &lt;a href=&quot;binascii#binascii.a2b_hex&quot;&gt;&lt;code&gt;binascii.a2b_hex()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8a57bb02aa94b7be52ec51d1866a76db68aabb9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;bz2#bz2.compress&quot;&gt;&lt;code&gt;bz2.compress()&lt;/code&gt;&lt;/a&gt; / &lt;a href=&quot;bz2#bz2.decompress&quot;&gt;&lt;code&gt;bz2.decompress()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e870d074016687fa38674ca721bc561d65567a45" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;collections#collections.deque&quot;&gt;&lt;code&gt;collections.deque&lt;/code&gt;&lt;/a&gt; is an alternative implementation of unbounded queues with fast atomic &lt;a href=&quot;collections#collections.deque.append&quot;&gt;&lt;code&gt;append()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;collections#collections.deque.popleft&quot;&gt;&lt;code&gt;popleft()&lt;/code&gt;&lt;/a&gt; operations that do not require locking and also support indexing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e84a254d4cf802de588977033b62bf2476e4ac4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;concurrent.futures#module-concurrent.futures&quot;&gt;&lt;code&gt;concurrent.futures&lt;/code&gt;&lt;/a&gt; &amp;ndash; Launching parallel tasks</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb9f5cee78dc0ca16dae45b64757244c4193a1ea" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;constants#None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt;: Autodetect the file format</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e613bb273245a070f711e7e9d2b1e0fc69b6cfd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;constants#True&quot;&gt;&lt;code&gt;True&lt;/code&gt;&lt;/a&gt; if a transaction is active (there are uncommitted changes), &lt;a href=&quot;constants#False&quot;&gt;&lt;code&gt;False&lt;/code&gt;&lt;/a&gt; otherwise. Read-only attribute.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58a6295c3f6d833ac0b402445a642fdc2e057d32" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ctypes#ctypes._CData.from_buffer&quot;&gt;[1]&lt;/a&gt;&lt;a href=&quot;ctypes#ctypes._CData.from_buffer_copy&quot;&gt;[2]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="714f00aabf7fe67cb40561e605acbb5940409708" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;decimal#decimal.Decimal&quot;&gt;&lt;code&gt;decimal.Decimal&lt;/code&gt;&lt;/a&gt;. Returned type only.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4456e38fe6912f6f5ff8e42d7d6ca3695184f960" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;enum#enum.IntEnum&quot;&gt;&lt;code&gt;enum.IntEnum&lt;/code&gt;&lt;/a&gt; collection of ALERT_DESCRIPTION_* constants.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f934805abd13c3978f5d561c2a7eeb7d4e2f9038" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;enum#enum.IntEnum&quot;&gt;&lt;code&gt;enum.IntEnum&lt;/code&gt;&lt;/a&gt; collection of CERT_* constants.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d1d94cc49f0420c6a56b05c782fa8af653df72e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;enum#enum.IntEnum&quot;&gt;&lt;code&gt;enum.IntEnum&lt;/code&gt;&lt;/a&gt; collection of SSL and TLS versions for &lt;a href=&quot;#ssl.SSLContext.maximum_version&quot;&gt;&lt;code&gt;SSLContext.maximum_version&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#ssl.SSLContext.minimum_version&quot;&gt;&lt;code&gt;SSLContext.minimum_version&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="669e5758a4213417d5d77828094b5a4009ebe301" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;enum#enum.IntEnum&quot;&gt;&lt;code&gt;enum.IntEnum&lt;/code&gt;&lt;/a&gt; collection of SSL_ERROR_* constants.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41851f2907a12af631ac0c184be83690b70909d2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;enum#enum.IntFlag&quot;&gt;&lt;code&gt;enum.IntFlag&lt;/code&gt;&lt;/a&gt; collection of OP_* constants.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed8eaa3e99923c1810e96abf72bcdb7fe4b238be" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;enum#enum.IntFlag&quot;&gt;&lt;code&gt;enum.IntFlag&lt;/code&gt;&lt;/a&gt; collection of VERIFY_* constants.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01a02a025cb0436114d42086106f0dbd8aca135c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;exceptions#FileExistsError&quot;&gt;&lt;code&gt;FileExistsError&lt;/code&gt;&lt;/a&gt; is now raised if the file opened in exclusive creation mode (&lt;code&gt;'x'&lt;/code&gt;) already exists.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ea4d72576748b2c69944d8dd1622bf4fd32600d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;exceptions#IOError&quot;&gt;&lt;code&gt;IOError&lt;/code&gt;&lt;/a&gt; used to be raised, it is now an alias of &lt;a href=&quot;exceptions#OSError&quot;&gt;&lt;code&gt;OSError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce19862bf8f65bf27de1883bf0be9308367c87a7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;exceptions#OSError&quot;&gt;&lt;code&gt;OSError&lt;/code&gt;&lt;/a&gt; is raised when the function is called by an unprivileged user.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32136607a78775c73cf05fc43a3144d00fc1a3eb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;exceptions#TypeError&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; is raised if &lt;em&gt;func&lt;/em&gt; is not a Python function or method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae5cf09b7ed295be8a5aebc407b0f78291304357" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;exceptions#TypeError&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; will be raised if a field without a default value follows a field with a default value. This is true either when this occurs in a single class, or as a result of class inheritance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0fa359bd0fd15291a6e5d7889adc1c99ae50003" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; is raised if &lt;strong&gt;name&lt;/strong&gt; is a relative module name but package is a false value (e.g. &lt;code&gt;None&lt;/code&gt; or the empty string). &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; is also raised a relative name would escape its containing package (e.g. requesting &lt;code&gt;..bacon&lt;/code&gt; from within the &lt;code&gt;spam&lt;/code&gt; package).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0431313001db21d4250a1b3db743db1727a1a838" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; is raised if a cycle is encountered.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12835bcbede4ec0dccc6a597bab1b6c7c7c68fcd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; is raised if the date_string and format can&amp;rsquo;t be parsed by &lt;a href=&quot;time#time.strptime&quot;&gt;&lt;code&gt;time.strptime()&lt;/code&gt;&lt;/a&gt; or if it returns a value which isn&amp;rsquo;t a time tuple. For a complete list of formatting directives, see &lt;a href=&quot;#strftime-strptime-behavior&quot;&gt;strftime() and strptime() Behavior&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d58c763f8205fdc2fffa29feccdb4f7f7e8c18e4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; is raised unless &lt;code&gt;1 &amp;lt;= ordinal &amp;lt;=
date.max.toordinal()&lt;/code&gt;. For any date &lt;em&gt;d&lt;/em&gt;, &lt;code&gt;date.fromordinal(d.toordinal()) == d&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fbb0c1725c07b368f81d57b070a705ca7635778" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; is raised when you call an &lt;code&gt;stdcall&lt;/code&gt; function with the &lt;code&gt;cdecl&lt;/code&gt; calling convention, or vice versa:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="645c32ac108ed28339abea9f2594e4ab0551003d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; will be raised on an invalid &lt;em&gt;timespec&lt;/em&gt; argument.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b940dcf209d1f77cd6fe07c4db3e81426ab2b7c4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; will be raised on an invalid &lt;em&gt;timespec&lt;/em&gt; argument:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6962b7bf7edf70ff09da2539b478d7fc3d662708" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ftplib#ftplib.FTP.sendcmd&quot;&gt;[1]&lt;/a&gt;&lt;a href=&quot;ftplib#ftplib.FTP.voidcmd&quot;&gt;[2]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8075ef70f9eb264b280db46d032610c2d351e16" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;functions#eval&quot;&gt;[1]&lt;/a&gt;&lt;a href=&quot;functions#exec&quot;&gt;[2]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4c40508d612fdad7b26cb1ab01a3065461255de" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;functions#float&quot;&gt;&lt;code&gt;float&lt;/code&gt;&lt;/a&gt;. Values get the &lt;code&gt;&amp;lt;double&amp;gt;&lt;/code&gt; tag.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3267765ac77dd0accb7ea77fe3ec926afbd1adb2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;functions#int&quot;&gt;&lt;code&gt;int&lt;/code&gt;&lt;/a&gt; in range from -2147483648 to 2147483647. Values get the &lt;code&gt;&amp;lt;int&amp;gt;&lt;/code&gt; tag.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b7b658d52d2cc1bd6627b800fab54f766aec2c9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;functions#open&quot;&gt;[1]&lt;/a&gt;&lt;a href=&quot;io#io.open&quot;&gt;[2]&lt;/a&gt;&lt;a href=&quot;os#os.open&quot;&gt;[3]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b298d06e6d8252bf848b5b0970945a4cc8020622" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;functools#functools.partial&quot;&gt;&lt;code&gt;functools.partial()&lt;/code&gt;&lt;/a&gt; can be used to pass parameters to the callback, e.g.:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b9b5515aa963251b4764d99df672394fcf81b6b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;glob#glob.glob&quot;&gt;[1]&lt;/a&gt;&lt;a href=&quot;glob#glob.iglob&quot;&gt;[2]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bdf50f9122d37569f4312713de92c18fefd41dd2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;html.entities#module-html.entities&quot;&gt;&lt;code&gt;html.entities&lt;/code&gt;&lt;/a&gt; &amp;ndash; HTML entity definitions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="115b29a1ea7549ff874c9cb13a6c7bcfe96d11f8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;html.parser#module-html.parser&quot;&gt;&lt;code&gt;html.parser&lt;/code&gt;&lt;/a&gt; &amp;ndash; HTML/XHTML parser with lenient parsing mode</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5de2b0e547b81de3681c3da11c6af31539f5e718" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http.client#module-http.client&quot;&gt;&lt;code&gt;http.client&lt;/code&gt;&lt;/a&gt; is a low-level HTTP protocol client; for high-level URL opening use &lt;a href=&quot;urllib.request#module-urllib.request&quot;&gt;&lt;code&gt;urllib.request&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29184972921fadd9f0705d88ee4d903ea6b96e19" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http.cookiejar#module-http.cookiejar&quot;&gt;&lt;code&gt;http.cookiejar&lt;/code&gt;&lt;/a&gt; provides persistence of cookies</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9668d5a692dcfafca80a9dc59fc1682c5e5b5a33" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http.cookies#module-http.cookies&quot;&gt;&lt;code&gt;http.cookies&lt;/code&gt;&lt;/a&gt; has utilities for implementing state management with cookies</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebcc0447d020db0974d51d7ddee89ae7192b0b4d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http.server#module-http.server&quot;&gt;&lt;code&gt;http.server&lt;/code&gt;&lt;/a&gt; contains basic HTTP server classes based on &lt;a href=&quot;socketserver#module-socketserver&quot;&gt;&lt;code&gt;socketserver&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59d345e2f9d43a6d7d1d7874c8dcb17b795386d0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://json.org&quot;&gt;JSON (JavaScript Object Notation)&lt;/a&gt;, specified by &lt;a href=&quot;https://tools.ietf.org/html/rfc7159.html&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;RFC 7159&lt;/strong&gt;&lt;/a&gt; (which obsoletes &lt;a href=&quot;https://tools.ietf.org/html/rfc4627.html&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;RFC 4627&lt;/strong&gt;&lt;/a&gt;) and by &lt;a href=&quot;http://www.ecma-international.org/publications/standards/Ecma-404.htm&quot;&gt;ECMA-404&lt;/a&gt;, is a lightweight data interchange format inspired by &lt;a href=&quot;https://en.wikipedia.org/wiki/JavaScript&quot;&gt;JavaScript&lt;/a&gt; object literal syntax (although it is not a strict subset of JavaScript &lt;a href=&quot;#rfc-errata&quot; id=&quot;id1&quot;&gt;1&lt;/a&gt; ).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93ec98965351e6c9ad3b351341e707f37dfc8878" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://nbviewer.jupyter.org/url/norvig.com/ipython/Economics.ipynb&quot;&gt;Economics Simulation&lt;/a&gt; a simulation of a marketplace by &lt;a href=&quot;http://norvig.com/bio.html&quot;&gt;Peter Norvig&lt;/a&gt; that shows effective use of many of the tools and distributions provided by this module (gauss, uniform, sample, betavariate, choice, triangular, and randrange).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f649f4ff0960caf220fa21e494dd01d617abf4c2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://nbviewer.jupyter.org/url/norvig.com/ipython/Probability.ipynb&quot;&gt;A Concrete Introduction to Probability (using Python)&lt;/a&gt; a tutorial by &lt;a href=&quot;http://norvig.com/bio.html&quot;&gt;Peter Norvig&lt;/a&gt; covering the basics of probability theory, how to write simulations, and how to perform data analysis using Python.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b7266197b7bdda6b6278bf5d5d927f429097447" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://tix.sourceforge.net/dist/current/man/html/TixCmd/TixIntro.htm&quot;&gt;Tix&lt;/a&gt; introduces over 40 widget classes to the &lt;a href=&quot;tkinter#module-tkinter&quot;&gt;&lt;code&gt;tkinter&lt;/code&gt;&lt;/a&gt; repertoire.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7516b181e52ff38172f82bded7fabc937cb14b97" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://tix.sourceforge.net/dist/current/man/html/TixCmd/compound.htm&quot;&gt;Compound&lt;/a&gt; image types can be used to create images that consists of multiple horizontal lines; each line is composed of a series of items (texts, bitmaps, images or spaces) arranged from left to right. For example, a compound image can be used to display a bitmap and a text string simultaneously in a Tk &lt;code&gt;Button&lt;/code&gt; widget.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="811ec9dc861be3b8b21b2325ea95fe0a94548b78" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://tix.sourceforge.net/dist/current/man/html/TixCmd/pixmap.htm&quot;&gt;pixmap&lt;/a&gt; capabilities to all &lt;a href=&quot;#module-tkinter.tix&quot;&gt;&lt;code&gt;tkinter.tix&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;tkinter#module-tkinter&quot;&gt;&lt;code&gt;tkinter&lt;/code&gt;&lt;/a&gt; widgets to create color images from XPM files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4007d9ce17f3875fa1eb78b7162f73e63f47f5d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://udrepper.livejournal.com/20407.html&quot;&gt;Secure File Descriptor Handling&lt;/a&gt; for a more thorough explanation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="daeec00adca03a1caba7dabe6dfe1ac94d668f69" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://www.java2s.com/Tutorial/Cpp/0380__set-multiset/Catalog0380__set-multiset.htm&quot;&gt;C++ multisets&lt;/a&gt; tutorial with examples.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ae68be1a16dfd7298f1e2af4c501923996b640c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://blake2.net&quot;&gt;BLAKE2&lt;/a&gt; is a cryptographic hash function defined in &lt;a href=&quot;https://tools.ietf.org/html/rfc7693.html&quot; id=&quot;index-5&quot;&gt;&lt;strong&gt;RFC 7693&lt;/strong&gt;&lt;/a&gt; that comes in two flavors:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e492792ef99a2856866b2056e2e4cdaecb8792b6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://blake2.net&quot;&gt;BLAKE2&lt;/a&gt; was designed by &lt;em&gt;Jean-Philippe Aumasson&lt;/em&gt;, &lt;em&gt;Samuel Neves&lt;/em&gt;, &lt;em&gt;Zooko Wilcox-O&amp;rsquo;Hearn&lt;/em&gt;, and &lt;em&gt;Christian Winnerlein&lt;/em&gt; based on &lt;a href=&quot;https://en.wikipedia.org/wiki/NIST_hash_function_competition&quot;&gt;SHA-3&lt;/a&gt; finalist &lt;a href=&quot;https://131002.net/blake/&quot;&gt;BLAKE&lt;/a&gt; created by &lt;em&gt;Jean-Philippe Aumasson&lt;/em&gt;, &lt;em&gt;Luca Henzen&lt;/em&gt;, &lt;em&gt;Willi Meier&lt;/em&gt;, and &lt;em&gt;Raphael C.-W. Phan&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6af84567e300fad67a6ffce925f64225be70c8f8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://code.activestate.com/recipes/576642/&quot;&gt;Persistent dictionary recipe&lt;/a&gt; with widely supported storage formats and having the speed of native dictionaries.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2bf31840453821198b3fd9050afb927b9d279d3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://code.activestate.com/recipes/576694/&quot;&gt;OrderedSet recipe&lt;/a&gt; for an example built on &lt;a href=&quot;#collections.abc.MutableSet&quot;&gt;&lt;code&gt;MutableSet&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7f2e170e1c6eef020d72d157729f3fae1438397" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://code.activestate.com/recipes/576707/&quot;&gt;Complementary-Multiply-with-Carry recipe&lt;/a&gt; for a compatible alternative random number generator with a long period and comparatively simple update operations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e989768cffd9aa89e93cb70b061fd4c205abe8b7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://code.activestate.com/recipes/576729/&quot;&gt;Simple version control recipe&lt;/a&gt; for a small application built with &lt;a href=&quot;#difflib.SequenceMatcher&quot;&gt;&lt;code&gt;SequenceMatcher&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b293944b0a48003504237b5e0ba44427f2e900b7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://code.activestate.com/recipes/577197-sortedcollection/&quot;&gt;SortedCollection recipe&lt;/a&gt; that uses bisect to build a full-featured collection class with straight-forward search methods and support for a key-function. The keys are precomputed to save unnecessary calls to the key function during searches.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2b12b97444ff3f181934241a24aee131f8e61f0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.microsoft.com/en-ca/windows/desktop/FileIO/i-o-completion-ports&quot;&gt;MSDN documentation on I/O Completion Ports&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7308b1a71ce44238c883835b69541912e866520c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.8/c-api/sys.html#c.PySys_AddAuditHook&quot;&gt;[1]&lt;/a&gt;&lt;a href=&quot;sys#sys.addaudithook&quot;&gt;[2]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44ffd65846a4c07b8ad32560e66d4b5eeb630e71" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-coroutine&quot;&gt;Coroutine&lt;/a&gt; objects and instances of the &lt;a href=&quot;#collections.abc.Coroutine&quot;&gt;&lt;code&gt;Coroutine&lt;/code&gt;&lt;/a&gt; ABC are all instances of this ABC.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffdd1d4475daf4b7bc2f43359bff32cb074dc24b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-coroutine&quot;&gt;Coroutines&lt;/a&gt; declared with the async/await syntax is the preferred way of writing asyncio applications. For example, the following snippet of code (requires Python 3.7+) prints &amp;ldquo;hello&amp;rdquo;, waits 1 second, and then prints &amp;ldquo;world&amp;rdquo;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c59505fbefcee5596b205e25804b614da6d2ab2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-file-object&quot;&gt;File objects&lt;/a&gt; used by the interpreter for standard input, output and errors:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6e0c905bbfed96877a686e4805a7168afedf3fe" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-finder&quot;&gt;Finder&lt;/a&gt; for modules declared in the Windows registry. This class implements the &lt;a href=&quot;#importlib.abc.MetaPathFinder&quot;&gt;&lt;code&gt;importlib.abc.MetaPathFinder&lt;/code&gt;&lt;/a&gt; ABC.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00f8cb5827dfec93268ca1b3c868794c0bbb7bfc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-loader&quot;&gt;Loader&lt;/a&gt; that wraps Python&amp;rsquo;s &amp;ldquo;classic&amp;rdquo; import algorithm.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7cdec2262f26a8e5777ae482f587b0b5ed75b2a0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.8/library/intro.html#availability&quot;&gt;Availability&lt;/a&gt;: Android.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6fd53f69f2064a2721e7865050690de6e3aa27f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.8/library/intro.html#availability&quot;&gt;Availability&lt;/a&gt;: BSD, OSX.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff992ade8c505b85c4e78fc9d507d7b9700ae31e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.8/library/intro.html#availability&quot;&gt;Availability&lt;/a&gt;: FreeBSD 9 or later.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a756b191daa16b064ab811633faa0b971233ffa8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.8/library/intro.html#availability&quot;&gt;Availability&lt;/a&gt;: FreeBSD, NetBSD 7 or later, OpenBSD.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21e8fc99cbe4dcf8af3fc75db2e396f27c74ba51" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.8/library/intro.html#availability&quot;&gt;Availability&lt;/a&gt;: FreeBSD, OpenBSD 5.5 or later.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fffe6ff798202f2228fb5a0fcd0500b750f3af3d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.8/library/intro.html#availability&quot;&gt;Availability&lt;/a&gt;: LibreSSL ignores the environment vars &lt;code&gt;openssl_cafile_env&lt;/code&gt; and &lt;code&gt;openssl_capath_env&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e79de2e247d63d50299b918f6adbdf08db23fc3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.8/library/intro.html#availability&quot;&gt;Availability&lt;/a&gt;: Linux &amp;gt;= 2.2.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2923f281aa7bfc33ca463c8c3ca5b5ac3ec27744" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.8/library/intro.html#availability&quot;&gt;Availability&lt;/a&gt;: Linux &amp;gt;= 2.6.25.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83f45edd50e4820e28cabbf6b3d952b891028c3b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.8/library/intro.html#availability&quot;&gt;Availability&lt;/a&gt;: Linux &amp;gt;= 2.6.27.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5979098c0b9c273f037197bd9e264c101b065c1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.8/library/intro.html#availability&quot;&gt;Availability&lt;/a&gt;: Linux &amp;gt;= 2.6.30.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb9e8c9b548a8f9b498a2a0df072af5ba331fad2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.8/library/intro.html#availability&quot;&gt;Availability&lt;/a&gt;: Linux &amp;gt;= 2.6.38.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fc14731b1100dbbe618e4c8aabe1271864644b9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.8/library/intro.html#availability&quot;&gt;Availability&lt;/a&gt;: Linux &amp;gt;= 3.6.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b3eb0168b9fa1d1ba83e421f2387fba4daab46c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.8/library/intro.html#availability&quot;&gt;Availability&lt;/a&gt;: Linux &amp;gt;= 4.7.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbc2b8c768717045b5381569767d22f5df668450" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.8/library/intro.html#availability&quot;&gt;Availability&lt;/a&gt;: Linux &amp;gt;= 4.8 QEMU &amp;gt;= 2.8 ESX &amp;gt;= 4.0 ESX Workstation &amp;gt;= 6.5.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e3e694f1bb5db045a99b22069681681731400c0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.8/library/intro.html#availability&quot;&gt;Availability&lt;/a&gt;: Linux &amp;gt;= 4.8.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6a7788b894f535fbac3f0d8b59983187bc79f30" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.8/library/intro.html#availability&quot;&gt;Availability&lt;/a&gt;: Linux 2.6.12 or later.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ba1102a00e9a029806a38b9e45ea8103f4f1d5a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.8/library/intro.html#availability&quot;&gt;Availability&lt;/a&gt;: Linux 2.6.25 or later.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1a63073ca89729d461945180917c802c785c06c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.8/library/intro.html#availability&quot;&gt;Availability&lt;/a&gt;: Linux 2.6.28 and newer, macOS 10.12 and newer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7e4d7ba1e3ac876ba78d05da316570bd4d6a48b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.8/library/intro.html#availability&quot;&gt;Availability&lt;/a&gt;: Linux 2.6.30 and newer, FreeBSD 6.0 and newer, OpenBSD 2.7 and newer. Using flags requires Linux 4.6 or newer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c827b4e89fe7ea675dfd736e2237b192321c6179" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.8/library/intro.html#availability&quot;&gt;Availability&lt;/a&gt;: Linux 2.6.30 and newer, FreeBSD 6.0 and newer, OpenBSD 2.7 and newer. Using flags requires Linux 4.7 or newer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df2b73c66c45926cc2aa118a7fa8373fef4c4a1c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.8/library/intro.html#availability&quot;&gt;Availability&lt;/a&gt;: Linux 2.6.36 or later with glibc 2.13 or later.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3b2b6a38d76f5da5541cdc8b68d0fa4c3fdf8f8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.8/library/intro.html#availability&quot;&gt;Availability&lt;/a&gt;: Linux 2.6.38, some algorithm types require more recent Kernels.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c5e7019f74bb4ccbe0115f7300abc8206c7e031" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.8/library/intro.html#availability&quot;&gt;Availability&lt;/a&gt;: Linux 2.6.39 or later.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21e4d39a8d9b53b678f5b72776799719f41f6923" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.8/library/intro.html#availability&quot;&gt;Availability&lt;/a&gt;: Linux 2.6.8 or later.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5771062cc120a432002f474a150593f9425a1650" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.8/library/intro.html#availability&quot;&gt;Availability&lt;/a&gt;: Linux 3.17 and newer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a31b7679f5933f11fed10ace5f805ed55940f305" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.8/library/intro.html#availability&quot;&gt;Availability&lt;/a&gt;: Linux 3.17 or newer with glibc 2.27 or newer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c28bade66e75b7cbebcd8f211d0a08c72255a3f8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.8/library/intro.html#availability&quot;&gt;Availability&lt;/a&gt;: Linux 3.17 or newer with glibc 2.27 or newer. The &lt;code&gt;MFD_HUGE*&lt;/code&gt; flags are only available since Linux 4.14.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1edbbe380964bf2b997c9bf342575981dac7570" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.8/library/intro.html#availability&quot;&gt;Availability&lt;/a&gt;: Linux 4.14 and newer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ea3c46ddfa87df266a9e0866c34b115d2f9f366" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.8/library/intro.html#availability&quot;&gt;Availability&lt;/a&gt;: Linux 4.6 and newer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4a372e8724f04b50a77dfb0333c62d830f17e8a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.8/library/intro.html#availability&quot;&gt;Availability&lt;/a&gt;: Linux 4.7 and newer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8126d92e58b84df572a41dd478aa23bdd9cdf6d9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.8/library/intro.html#availability&quot;&gt;Availability&lt;/a&gt;: Linux kernel &amp;gt;= 4.5 or glibc &amp;gt;= 2.27.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd3b4e7d5ba7a339b01d9afb0c1daaf35380665c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.8/library/intro.html#availability&quot;&gt;Availability&lt;/a&gt;: OpenSSL 1.0.2+.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d05fe6d5b6554d440d5948888070e4ca11508229" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.8/library/intro.html#availability&quot;&gt;Availability&lt;/a&gt;: OpenSSL 1.1+.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec6587fb23d3cac05ba27535dc4dfc926b5e2a7f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.8/library/intro.html#availability&quot;&gt;Availability&lt;/a&gt;: POSIX &amp;amp; Windows.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="858febadab1c14598784651ccc492fee8a74aa94" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.8/library/intro.html#availability&quot;&gt;Availability&lt;/a&gt;: Requires &lt;a href=&quot;#threading.get_native_id&quot;&gt;&lt;code&gt;get_native_id()&lt;/code&gt;&lt;/a&gt; function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a2628834ca39185296b874bee3b5ff93cdbcd33" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.8/library/intro.html#availability&quot;&gt;Availability&lt;/a&gt;: See &lt;a href=&quot;#os.posix_spawn&quot;&gt;&lt;code&gt;posix_spawn()&lt;/code&gt;&lt;/a&gt; documentation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="141b049f700d85b67c2ef8567737e77c76964a42" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.8/library/intro.html#availability&quot;&gt;Availability&lt;/a&gt;: Solaris.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b7b9251e796fbd185c08f2699db873dfe0e2612" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.8/library/intro.html#availability&quot;&gt;Availability&lt;/a&gt;: Unix</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a6a5b617ac77504a374b695ea163446e6dba96c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.8/library/intro.html#availability&quot;&gt;Availability&lt;/a&gt;: Unix (maybe not all platforms), Windows.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7be10b48e159bc7d996788229ca711ab291578cf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.8/library/intro.html#availability&quot;&gt;Availability&lt;/a&gt;: Unix (see the man page for &lt;em&gt;&lt;a href=&quot;https://manpages.debian.org/pthread_getcpuclockid(3)&quot;&gt;pthread_getcpuclockid(3)&lt;/a&gt;&lt;/em&gt; for further information).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cab64852e120b11ac033cf8a36eddc95a3ab2802" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.8/library/intro.html#availability&quot;&gt;Availability&lt;/a&gt;: Unix, Windows.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0cd852453906c25d541e019475671b24de19b3cd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.8/library/intro.html#availability&quot;&gt;Availability&lt;/a&gt;: Unix, Windows. &lt;a href=&quot;#os.spawnlp&quot;&gt;&lt;code&gt;spawnlp()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#os.spawnlpe&quot;&gt;&lt;code&gt;spawnlpe()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#os.spawnvp&quot;&gt;&lt;code&gt;spawnvp()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#os.spawnvpe&quot;&gt;&lt;code&gt;spawnvpe()&lt;/code&gt;&lt;/a&gt; are not available on Windows. &lt;a href=&quot;#os.spawnle&quot;&gt;&lt;code&gt;spawnle()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#os.spawnve&quot;&gt;&lt;code&gt;spawnve()&lt;/code&gt;&lt;/a&gt; are not thread-safe on Windows; we advise you to use the &lt;a href=&quot;subprocess#module-subprocess&quot;&gt;&lt;code&gt;subprocess&lt;/code&gt;&lt;/a&gt; module instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a881d735b574701d6f2a59cf2726eb7d650392a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.8/library/intro.html#availability&quot;&gt;Availability&lt;/a&gt;: Unix.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a355b797f4157d852f5f0b38fea78964e0bc4ccd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.8/library/intro.html#availability&quot;&gt;Availability&lt;/a&gt;: Unix. Not available on VxWorks.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a154f243efd5657848682e09c07833e2717806f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.8/library/intro.html#availability&quot;&gt;Availability&lt;/a&gt;: Unix. See the man page &lt;em&gt;&lt;a href=&quot;https://manpages.debian.org/alarm(2)&quot;&gt;alarm(2)&lt;/a&gt;&lt;/em&gt; for further information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d6c0ab89bfc1f8e5bca6461b228a48c2d4b1c96" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.8/library/intro.html#availability&quot;&gt;Availability&lt;/a&gt;: Unix. See the man page &lt;em&gt;&lt;a href=&quot;https://manpages.debian.org/pthread_kill(3)&quot;&gt;pthread_kill(3)&lt;/a&gt;&lt;/em&gt; for further information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05833bdfa96418e35bb2687d653f85e160e8fffa" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.8/library/intro.html#availability&quot;&gt;Availability&lt;/a&gt;: Unix. See the man page &lt;em&gt;&lt;a href=&quot;https://manpages.debian.org/siginterrupt(3)&quot;&gt;siginterrupt(3)&lt;/a&gt;&lt;/em&gt; for further information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ac2a6b0a2fe3c005cfdaecbc999d05131885892" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.8/library/intro.html#availability&quot;&gt;Availability&lt;/a&gt;: Unix. See the man page &lt;em&gt;&lt;a href=&quot;https://manpages.debian.org/signal(2)&quot;&gt;signal(2)&lt;/a&gt;&lt;/em&gt; for further information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="801e2256c076229379e2cd5641ffeae79214ab0a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.8/library/intro.html#availability&quot;&gt;Availability&lt;/a&gt;: Unix. See the man page &lt;em&gt;&lt;a href=&quot;https://manpages.debian.org/sigpending(2)&quot;&gt;sigpending(2)&lt;/a&gt;&lt;/em&gt; for further information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5508ae21e03e95ec74d7bcdab5be46acf2d687df" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.8/library/intro.html#availability&quot;&gt;Availability&lt;/a&gt;: Unix. See the man page &lt;em&gt;&lt;a href=&quot;https://manpages.debian.org/sigprocmask(3)&quot;&gt;sigprocmask(3)&lt;/a&gt;&lt;/em&gt; and &lt;em&gt;&lt;a href=&quot;https://manpages.debian.org/pthread_sigmask(3)&quot;&gt;pthread_sigmask(3)&lt;/a&gt;&lt;/em&gt; for further information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a83285c3541631079a1dfbb09a8bf30ec550f9a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.8/library/intro.html#availability&quot;&gt;Availability&lt;/a&gt;: Unix. See the man page &lt;em&gt;&lt;a href=&quot;https://manpages.debian.org/sigtimedwait(2)&quot;&gt;sigtimedwait(2)&lt;/a&gt;&lt;/em&gt; for further information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e9980dd2d8069b5bbfb3bd2d4d989b389acc5ad" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.8/library/intro.html#availability&quot;&gt;Availability&lt;/a&gt;: Unix. See the man page &lt;em&gt;&lt;a href=&quot;https://manpages.debian.org/sigwait(3)&quot;&gt;sigwait(3)&lt;/a&gt;&lt;/em&gt; for further information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e62b5fe606eb8be427a3099a2734279146c8845" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.8/library/intro.html#availability&quot;&gt;Availability&lt;/a&gt;: Unix. See the man page &lt;em&gt;&lt;a href=&quot;https://manpages.debian.org/sigwaitinfo(2)&quot;&gt;sigwaitinfo(2)&lt;/a&gt;&lt;/em&gt; for further information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24f6d2ed373b9835c0501352159a369fd7713185" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.8/library/intro.html#availability&quot;&gt;Availability&lt;/a&gt;: Windows only.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d54feea6f3cce8e89e2f2a976056df6d4a5ae203" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.8/library/intro.html#availability&quot;&gt;Availability&lt;/a&gt;: Windows, FreeBSD, Linux, macOS, OpenBSD, NetBSD, AIX.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4317f54c6cf4d0021edcaf0f5d3d52633c65c7f1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.8/library/intro.html#availability&quot;&gt;Availability&lt;/a&gt;: Windows, Linux, Unix systems supporting &lt;code&gt;CLOCK_THREAD_CPUTIME_ID&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="571cd19957f22f79de3973b5b6121ea2af046cd1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.8/library/intro.html#availability&quot;&gt;Availability&lt;/a&gt;: Windows, systems with POSIX threads.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c96439d0f97634528966f65b0caf38de6ab5cbb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.8/library/intro.html#availability&quot;&gt;Availability&lt;/a&gt;: Windows.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd8f23dec67e321f82bfa803d74dcc6671d29ea2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.8/library/intro.html#availability&quot;&gt;Availability&lt;/a&gt;: macOS 10.12 and newer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4cccbcb0e677cb523a8fa7a5e02cddfc49e5c25" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.8/library/intro.html#availability&quot;&gt;Availability&lt;/a&gt;: most Unix platforms, possibly others.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c1f68fd1f5ee17e9bc9ffd4b858fa35d5f8617f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.8/library/intro.html#availability&quot;&gt;Availability&lt;/a&gt;: most flavors of Unix, Windows.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92b6534648c4384c8ec9cf302c7b26ae7d71b497" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.8/library/intro.html#availability&quot;&gt;Availability&lt;/a&gt;: most flavors of Unix.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea4773e92e4bc7f7a89d9920f796c1f6c5aa827e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.8/library/intro.html#availability&quot;&gt;Availability&lt;/a&gt;: not available with LibreSSL and OpenSSL &amp;gt; 1.1.0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31d6ddf6ff25d08e9457297ae263dfa4ec49c268" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.8/library/intro.html#availability&quot;&gt;Availability&lt;/a&gt;: recent flavors of Unix.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c115a6529a011be3320ec77a39c988efafb83f31" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.8/library/intro.html#availability&quot;&gt;Availability&lt;/a&gt;: some Unix systems.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2525a1224adabc9e6c8d4b23d7db6deca7ed7134" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.8/library/intro.html#availability&quot;&gt;Availability&lt;/a&gt;: some flavors of Unix.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67909c6b2fecd7ada769b8bbf1683e139584cec2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__getattr__&quot;&gt;&lt;code&gt;__getattr__()&lt;/code&gt;&lt;/a&gt; has special behavior: It allows loading a shared library by accessing it as attribute of a library loader instance. The result is cached, so repeated attribute accesses return the same library each time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c115d329751421c47babd7769a308ea3cd140127" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__hash__&quot;&gt;&lt;code&gt;__hash__()&lt;/code&gt;&lt;/a&gt; is used by built-in &lt;a href=&quot;functions#hash&quot;&gt;&lt;code&gt;hash()&lt;/code&gt;&lt;/a&gt;, and when objects are added to hashed collections such as dictionaries and sets. Having a &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__hash__&quot;&gt;&lt;code&gt;__hash__()&lt;/code&gt;&lt;/a&gt; implies that instances of the class are immutable. Mutability is a complicated property that depends on the programmer&amp;rsquo;s intent, the existence and behavior of &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__eq__&quot;&gt;&lt;code&gt;__eq__()&lt;/code&gt;&lt;/a&gt;, and the values of the &lt;code&gt;eq&lt;/code&gt; and &lt;code&gt;frozen&lt;/code&gt; flags in the &lt;a href=&quot;#dataclasses.dataclass&quot;&gt;&lt;code&gt;dataclass()&lt;/code&gt;&lt;/a&gt; decorator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec7c1842c622efad5ec3d490538bc50ba7aa422e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__new__&quot;&gt;&lt;code&gt;__new__()&lt;/code&gt;&lt;/a&gt; must be used whenever you want to customize the actual value of the &lt;a href=&quot;#enum.Enum&quot;&gt;&lt;code&gt;Enum&lt;/code&gt;&lt;/a&gt; member. Any other modifications may go in either &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__new__&quot;&gt;&lt;code&gt;__new__()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__init__&quot;&gt;&lt;code&gt;__init__()&lt;/code&gt;&lt;/a&gt;, with &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__init__&quot;&gt;&lt;code&gt;__init__()&lt;/code&gt;&lt;/a&gt; being preferred.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffeec5eca52c7825b3a24bed81f152c95cb5d81e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__new__&quot;&gt;&lt;code&gt;__new__()&lt;/code&gt;&lt;/a&gt;, if specified, must create and return the enum members; it is also a very good idea to set the member&amp;rsquo;s &lt;code&gt;_value_&lt;/code&gt; appropriately. Once all the members are created it is no longer used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7292f12f4a8a27f50592e65e665649cca34d392" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.8/reference/lexical_analysis.html#f-strings&quot;&gt;Formatted string literals&lt;/a&gt;, &lt;a href=&quot;stdtypes#str.format&quot;&gt;&lt;code&gt;str.format()&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;functions#format&quot;&gt;&lt;code&gt;format()&lt;/code&gt;&lt;/a&gt; will use the mixed-in type&amp;rsquo;s &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__format__&quot;&gt;&lt;code&gt;__format__()&lt;/code&gt;&lt;/a&gt;. If the &lt;a href=&quot;#enum.Enum&quot;&gt;&lt;code&gt;Enum&lt;/code&gt;&lt;/a&gt; class&amp;rsquo;s &lt;a href=&quot;stdtypes#str&quot;&gt;&lt;code&gt;str()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;functions#repr&quot;&gt;&lt;code&gt;repr()&lt;/code&gt;&lt;/a&gt; is desired, use the &lt;code&gt;!s&lt;/code&gt; or &lt;code&gt;!r&lt;/code&gt; format codes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97aa317ef2a0df4bfe75d880f60c49c6f5422f16" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#cmdoption-o&quot;&gt;&lt;code&gt;-O&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#cmdoption-oo&quot;&gt;&lt;code&gt;-OO&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad296f62523ad457249547760c593dc2d2e7caec" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#id5&quot;&gt;&lt;code&gt;-X&lt;/code&gt;&lt;/a&gt;&lt;code&gt;dev&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67c1cf9911a32f272d6ecfa1114ad3a191d1861a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#id5&quot;&gt;&lt;code&gt;-X&lt;/code&gt;&lt;/a&gt;&lt;code&gt;utf8&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e255ce3b510f2a28123ba6b3e0b0409358a6b258" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#using-on-general&quot;&gt;Command line and environment&lt;/a&gt; - CPython command line details</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7904a415e2ed0dc9af7d67d5ee3a4931f2a1c955" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#using-on-interface-options&quot;&gt;Interface options&lt;/a&gt; for equivalent functionality on the command line (&lt;code&gt;python path/to/script&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a434d17daae32db68cac8a1c70ca9d6524c29b80" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://en.wikipedia.org/wiki/Document_type_definition&quot;&gt;DTD&lt;/a&gt; retrieval</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6dfa32be87dd032482ee7af2c80c52017c2f8a50" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://en.wikipedia.org/wiki/Hyperbolic_function&quot;&gt;Hyperbolic functions&lt;/a&gt; are analogs of trigonometric functions that are based on hyperbolas instead of circles.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c859252a5d36ccc32013c07ec1122755feecd79" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://greentreesnakes.readthedocs.io/&quot;&gt;Green Tree Snakes&lt;/a&gt;, an external documentation resource, has good details on working with Python ASTs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b71647a4e5003d4774b16e70125d49463aada09f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://msdn.microsoft.com/en-us/library/bb432265.aspx&quot;&gt;FCICreate&lt;/a&gt;&lt;a href=&quot;https://msdn.microsoft.com/en-us/library/windows/desktop/aa379205.aspx&quot;&gt;UuidCreate&lt;/a&gt;&lt;a href=&quot;https://msdn.microsoft.com/en-us/library/windows/desktop/aa379352.aspx&quot;&gt;UuidToString&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16cbd24fa7b5e380783aff7fefa4da67350dd5f0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://msdn.microsoft.com/en-us/library/windows/desktop/aa368286.aspx&quot;&gt;Dialog Table&lt;/a&gt;&lt;a href=&quot;https://msdn.microsoft.com/en-us/library/windows/desktop/aa368044.aspx&quot;&gt;Control Table&lt;/a&gt;&lt;a href=&quot;https://msdn.microsoft.com/en-us/library/windows/desktop/aa368039.aspx&quot;&gt;Control Types&lt;/a&gt;&lt;a href=&quot;https://msdn.microsoft.com/en-us/library/windows/desktop/aa368035.aspx&quot;&gt;ControlCondition Table&lt;/a&gt;&lt;a href=&quot;https://msdn.microsoft.com/en-us/library/windows/desktop/aa368037.aspx&quot;&gt;ControlEvent Table&lt;/a&gt;&lt;a href=&quot;https://msdn.microsoft.com/en-us/library/windows/desktop/aa368559.aspx&quot;&gt;EventMapping Table&lt;/a&gt;&lt;a href=&quot;https://msdn.microsoft.com/en-us/library/windows/desktop/aa370962.aspx&quot;&gt;RadioButton Table&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1f8dbe06ed7c82e0113c4d78922f2e44537f87a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://msdn.microsoft.com/en-us/library/windows/desktop/aa368295.aspx&quot;&gt;Directory Table&lt;/a&gt;&lt;a href=&quot;https://msdn.microsoft.com/en-us/library/windows/desktop/aa368596.aspx&quot;&gt;File Table&lt;/a&gt;&lt;a href=&quot;https://msdn.microsoft.com/en-us/library/windows/desktop/aa368007.aspx&quot;&gt;Component Table&lt;/a&gt;&lt;a href=&quot;https://msdn.microsoft.com/en-us/library/windows/desktop/aa368579.aspx&quot;&gt;FeatureComponents Table&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b9c3d5fe45a49e00499e27cf061a696785f4b1e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://msdn.microsoft.com/en-us/library/windows/desktop/aa370082.aspx&quot;&gt;MSIDatabaseOpenView&lt;/a&gt;&lt;a href=&quot;https://msdn.microsoft.com/en-us/library/windows/desktop/aa370075.aspx&quot;&gt;MSIDatabaseCommit&lt;/a&gt;&lt;a href=&quot;https://msdn.microsoft.com/en-us/library/windows/desktop/aa370301.aspx&quot;&gt;MSIGetSummaryInformation&lt;/a&gt;&lt;a href=&quot;https://msdn.microsoft.com/en-us/library/windows/desktop/aa370067.aspx&quot;&gt;MsiCloseHandle&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="907886d3e64bf9a4a3b8e9e298ae811685341198" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://msdn.microsoft.com/en-us/library/windows/desktop/aa370366.aspx&quot;&gt;MsiRecordGetFieldCount&lt;/a&gt;&lt;a href=&quot;https://msdn.microsoft.com/en-us/library/windows/desktop/aa370373.aspx&quot;&gt;MsiRecordSetString&lt;/a&gt;&lt;a href=&quot;https://msdn.microsoft.com/en-us/library/windows/desktop/aa370372.aspx&quot;&gt;MsiRecordSetStream&lt;/a&gt;&lt;a href=&quot;https://msdn.microsoft.com/en-us/library/windows/desktop/aa370371.aspx&quot;&gt;MsiRecordSetInteger&lt;/a&gt;&lt;a href=&quot;https://msdn.microsoft.com/en-us/library/windows/desktop/aa370364.aspx&quot;&gt;MsiRecordClearData&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e8feefb98b8375d63541b898ccb07207c125423" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://msdn.microsoft.com/en-us/library/windows/desktop/aa370409.aspx&quot;&gt;MsiSummaryInfoGetProperty&lt;/a&gt;&lt;a href=&quot;https://msdn.microsoft.com/en-us/library/windows/desktop/aa370488.aspx&quot;&gt;MsiSummaryInfoGetPropertyCount&lt;/a&gt;&lt;a href=&quot;https://msdn.microsoft.com/en-us/library/windows/desktop/aa370491.aspx&quot;&gt;MsiSummaryInfoSetProperty&lt;/a&gt;&lt;a href=&quot;https://msdn.microsoft.com/en-us/library/windows/desktop/aa370490.aspx&quot;&gt;MsiSummaryInfoPersist&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c7b512d237bec4f0eaaf4c3df06056f167441dc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://msdn.microsoft.com/en-us/library/windows/desktop/aa370513.aspx&quot;&gt;MsiViewExecute&lt;/a&gt;&lt;a href=&quot;https://msdn.microsoft.com/en-us/library/windows/desktop/aa370516.aspx&quot;&gt;MSIViewGetColumnInfo&lt;/a&gt;&lt;a href=&quot;https://msdn.microsoft.com/en-us/library/windows/desktop/aa370514.aspx&quot;&gt;MsiViewFetch&lt;/a&gt;&lt;a href=&quot;https://msdn.microsoft.com/en-us/library/windows/desktop/aa370519.aspx&quot;&gt;MsiViewModify&lt;/a&gt;&lt;a href=&quot;https://msdn.microsoft.com/en-us/library/windows/desktop/aa370510.aspx&quot;&gt;MsiViewClose&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8785a282c8650e2a80556729a89d008182297d82" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://pypi.org/project/defusedexpat/&quot;&gt;defusedexpat&lt;/a&gt; provides a modified libexpat and a patched &lt;code&gt;pyexpat&lt;/code&gt; module that have countermeasures against entity expansion DoS attacks. The &lt;code&gt;defusedexpat&lt;/code&gt; module still allows a sane and configurable amount of entity expansions. The modifications may be included in some future release of Python, but will not be included in any bugfix releases of Python because they break backward compatibility.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d606a9b82d9a00e28d1b21cd978020e5e3f1411" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://pypi.org/project/defusedxml/&quot;&gt;defusedxml&lt;/a&gt; is a pure Python package with modified subclasses of all stdlib XML parsers that prevent any potentially malicious operation. Use of this package is recommended for any server code that parses untrusted XML data. The package also ships with example exploits and extended documentation on more XML exploits such as XPath injection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fc157b89595a8f3aaccc5c63f84172f870e406a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://tools.ietf.org/html/rfc1014.html&quot; id=&quot;index-2&quot;&gt;&lt;strong&gt;RFC 1014&lt;/strong&gt;&lt;/a&gt; - XDR: External Data Representation Standard</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8255d8669cc7cd018c0597e5cc875f59d1d8ab6d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://tools.ietf.org/html/rfc1521.html&quot; id=&quot;index-9&quot;&gt;&lt;strong&gt;RFC 1521&lt;/strong&gt;&lt;/a&gt; - MIME (Multipurpose Internet Mail Extensions) Part One: Mechanisms for Specifying and Describing the Format of Internet Message Bodies</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e03d067e5908ef1b8b0d6d76e3cbed9ef9eeb656" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://tools.ietf.org/html/rfc1738.html&quot; id=&quot;index-12&quot;&gt;&lt;strong&gt;RFC 1738&lt;/strong&gt;&lt;/a&gt; - Uniform Resource Locators (URL)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee0fa224b173fa5a6f706e2cb7ae6fbb473b5af8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://tools.ietf.org/html/rfc1808.html&quot; id=&quot;index-11&quot;&gt;&lt;strong&gt;RFC 1808&lt;/strong&gt;&lt;/a&gt; - Relative Uniform Resource Locators</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff1bdca5810ec1e6284928cbcc872c4db6775fed" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://tools.ietf.org/html/rfc1832.html&quot; id=&quot;index-4&quot;&gt;&lt;strong&gt;RFC 1832&lt;/strong&gt;&lt;/a&gt; - XDR: External Data Representation Standard</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06f8c34d492e76346f76cd494c7cb44c0f0ddc08" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://tools.ietf.org/html/rfc1869.html&quot; id=&quot;index-5&quot;&gt;&lt;strong&gt;RFC 1869&lt;/strong&gt;&lt;/a&gt; - SMTP Service Extensions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9140f6b034c6a044c97c65d0e7b550f225dd2c1d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://tools.ietf.org/html/rfc2045.html&quot; id=&quot;index-5&quot;&gt;&lt;strong&gt;RFC 2045&lt;/strong&gt;&lt;/a&gt; defines a message&amp;rsquo;s default type to be &lt;em&gt;text/plain&lt;/em&gt; unless it appears inside a &lt;em&gt;multipart/digest&lt;/em&gt; container, in which case it would be &lt;em&gt;message/rfc822&lt;/em&gt;. If the &lt;em&gt;Content-Type&lt;/em&gt; header has an invalid type specification, &lt;a href=&quot;https://tools.ietf.org/html/rfc2045.html&quot; id=&quot;index-6&quot;&gt;&lt;strong&gt;RFC 2045&lt;/strong&gt;&lt;/a&gt; mandates that the default type be &lt;em&gt;text/plain&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5a122b048c72934f4d39570101d7f608a865754" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://tools.ietf.org/html/rfc2109.html&quot; id=&quot;index-3&quot;&gt;&lt;strong&gt;RFC 2109&lt;/strong&gt;&lt;/a&gt; - HTTP State Management Mechanism</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47cb4202b71a898353f940bc68cf20c255d7044f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://tools.ietf.org/html/rfc2109.html&quot; id=&quot;index-6&quot;&gt;&lt;strong&gt;RFC 2109&lt;/strong&gt;&lt;/a&gt; - HTTP State Management Mechanism</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3dbf07e2d53e763784dd60059d7215c28f3c5b58" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://tools.ietf.org/html/rfc2368.html&quot; id=&quot;index-10&quot;&gt;&lt;strong&gt;RFC 2368&lt;/strong&gt;&lt;/a&gt; - The mailto URL scheme.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2bacfcd4c08880b248871c908162645c2c2a7de1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://tools.ietf.org/html/rfc2396.html&quot; id=&quot;index-9&quot;&gt;&lt;strong&gt;RFC 2396&lt;/strong&gt;&lt;/a&gt; - Uniform Resource Identifiers (URI): Generic Syntax</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d0e5f6b57592592200e28d67de60d8d54b2d828" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://tools.ietf.org/html/rfc2732.html&quot; id=&quot;index-8&quot;&gt;&lt;strong&gt;RFC 2732&lt;/strong&gt;&lt;/a&gt; - Format for Literal IPv6 Addresses in URL&amp;rsquo;s.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3e34776dc8fbf5a4a57036fc2e1a497393aabac" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://tools.ietf.org/html/rfc2822.html&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;RFC 2822&lt;/strong&gt;&lt;/a&gt; is the base standard that describes the format of email messages. It derives from the older &lt;a href=&quot;https://tools.ietf.org/html/rfc822.html&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;RFC 822&lt;/strong&gt;&lt;/a&gt; standard which came into widespread use at a time when most email was composed of ASCII characters only. &lt;a href=&quot;https://tools.ietf.org/html/rfc2822.html&quot; id=&quot;index-2&quot;&gt;&lt;strong&gt;RFC 2822&lt;/strong&gt;&lt;/a&gt; is a specification written assuming email contains only 7-bit ASCII characters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8a850c091c63de49cc71d84836dfaca33e0e772" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://tools.ietf.org/html/rfc2964.html&quot; id=&quot;index-10&quot;&gt;&lt;strong&gt;RFC 2964&lt;/strong&gt;&lt;/a&gt; - Use of HTTP State Management</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d697e6703240f43c3ead47899b925ba5824b4942" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://tools.ietf.org/html/rfc2965.html&quot; id=&quot;index-17&quot;&gt;&lt;strong&gt;RFC 2965&lt;/strong&gt;&lt;/a&gt; protocol strictness switches:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d78911cb90335ffc1dc579a43247c8e89572d1f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://tools.ietf.org/html/rfc2965.html&quot; id=&quot;index-8&quot;&gt;&lt;strong&gt;RFC 2965&lt;/strong&gt;&lt;/a&gt; - HTTP State Management Mechanism</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="284862831a8638eca43245e1363947ca141e5d0f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://tools.ietf.org/html/rfc3454.html&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;RFC 3454&lt;/strong&gt;&lt;/a&gt; defines a procedure for &amp;ldquo;preparing&amp;rdquo; Unicode strings in internet protocols. Before passing strings onto the wire, they are processed with the preparation procedure, after which they have a certain normalized form. The RFC defines a set of tables, which can be combined into profiles. Each profile must define which tables it uses, and what other optional parts of the &lt;code&gt;stringprep&lt;/code&gt; procedure are part of the profile. One example of a &lt;code&gt;stringprep&lt;/code&gt; profile is &lt;code&gt;nameprep&lt;/code&gt;, which is used for internationalized domain names.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91d65ebad5ecda8971dca63fb3a82d21e23460c5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://tools.ietf.org/html/rfc3548.html&quot; id=&quot;index-6&quot;&gt;&lt;strong&gt;RFC 3548&lt;/strong&gt;&lt;/a&gt; allows for optional mapping of the digit 0 (zero) to the letter O (oh), and for optional mapping of the digit 1 (one) to either the letter I (eye) or letter L (el). The optional argument &lt;em&gt;map01&lt;/em&gt; when not &lt;code&gt;None&lt;/code&gt;, specifies which letter the digit 1 should be mapped to (when &lt;em&gt;map01&lt;/em&gt; is not &lt;code&gt;None&lt;/code&gt;, the digit 0 is always mapped to the letter O). For security purposes the default is &lt;code&gt;None&lt;/code&gt;, so that 0 and 1 are not allowed in the input.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7a357c215b507253598cd8d680a390d26d1e893" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://tools.ietf.org/html/rfc3986.html&quot; id=&quot;index-7&quot;&gt;&lt;strong&gt;RFC 3986&lt;/strong&gt;&lt;/a&gt; - Uniform Resource Identifiers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5020d2e5753e3cd7275d6fc5b2bbcde08e2cdfbc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://tools.ietf.org/html/rfc4122.html&quot; id=&quot;index-11&quot;&gt;&lt;strong&gt;RFC 4122&lt;/strong&gt;&lt;/a&gt; - A Universally Unique IDentifier (UUID) URN Namespace</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d055dd319630e43539064ce4baa8902cd40a6a88" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://tools.ietf.org/html/rfc5322.html&quot; id=&quot;index-7&quot;&gt;&lt;strong&gt;RFC 5322&lt;/strong&gt;&lt;/a&gt; specifies a very specific format for dates within email headers. The &lt;code&gt;DateHeader&lt;/code&gt; parser recognizes that date format, as well as recognizing a number of variant forms that are sometimes found &amp;ldquo;in the wild&amp;rdquo;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65305d75d2bfa7688b54145d90ae9a11ff3d989e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://tools.ietf.org/html/rfc821.html&quot; id=&quot;index-4&quot;&gt;&lt;strong&gt;RFC 821&lt;/strong&gt;&lt;/a&gt; - Simple Mail Transfer Protocol</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92231a723d666abf2e0515fe89875cdd0c0b4c06" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://tools.ietf.org/html/rfc854.html&quot; id=&quot;index-2&quot;&gt;&lt;strong&gt;RFC 854&lt;/strong&gt;&lt;/a&gt; - Telnet Protocol Specification</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2997014b6331d71544797ea559eb475d887cf356" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://www.gnu.org/software/smalltalk/manual-base/html_node/Bag.html&quot;&gt;Bag class&lt;/a&gt; in Smalltalk.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca333b452a6f6ad9479e61688b44c83e66b2f329" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://www.python.org/dev/peps/pep-0205&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;PEP 205&lt;/strong&gt;&lt;/a&gt; - Weak References</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8dc59a0ced5900b2e0fc8257399fd996d42b214d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://www.python.org/dev/peps/pep-0227&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;PEP 227&lt;/strong&gt;&lt;/a&gt;: &lt;em&gt;Statically Nested Scopes&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fc77793cecde5a543e0db0673f3c52092ab38e5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://www.python.org/dev/peps/pep-0238&quot; id=&quot;index-2&quot;&gt;&lt;strong&gt;PEP 238&lt;/strong&gt;&lt;/a&gt;: &lt;em&gt;Changing the Division Operator&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d23c8c96ea300affa52210b556f0d113aa4e288e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://www.python.org/dev/peps/pep-0249&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;PEP 249&lt;/strong&gt;&lt;/a&gt; - Database API Specification 2.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a261a7bc3be8329f4554d33ffab231451eecac8e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://www.python.org/dev/peps/pep-0255&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;PEP 255&lt;/strong&gt;&lt;/a&gt;: &lt;em&gt;Simple Generators&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca87799777d83fcc80dd280ebf04217823b3b872" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://www.python.org/dev/peps/pep-0273&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;PEP 273&lt;/strong&gt;&lt;/a&gt; - Import Modules from Zip Archives</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a826a5fc15d66e239791e15fc7a5ea539b8b00c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://www.python.org/dev/peps/pep-0282&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;PEP 282&lt;/strong&gt;&lt;/a&gt; - A Logging System</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="051b62a79f2a6ca35d8ab93113d42654c00e90c8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://www.python.org/dev/peps/pep-0302&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;PEP 302&lt;/strong&gt;&lt;/a&gt; Finder that wraps Python&amp;rsquo;s &amp;ldquo;classic&amp;rdquo; import algorithm.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02203b221e04b3e97a8385462160a696180220ac" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://www.python.org/dev/peps/pep-0302&quot; id=&quot;index-3&quot;&gt;&lt;strong&gt;PEP 302&lt;/strong&gt;&lt;/a&gt; - New Import Hooks</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46e9af2b805434852d6c64cb60f8a2f13f0a1348" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://www.python.org/dev/peps/pep-0305&quot; id=&quot;index-2&quot;&gt;&lt;strong&gt;PEP 305&lt;/strong&gt;&lt;/a&gt; - CSV File API</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e3893c9afc4d9187a5bc54dad1bf0a7b2a99061" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://www.python.org/dev/peps/pep-0324&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;PEP 324&lt;/strong&gt;&lt;/a&gt; &amp;ndash; PEP proposing the subprocess module</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98c7be39e17a82d560bd807822118cee8ff3b9d2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://www.python.org/dev/peps/pep-0328&quot; id=&quot;index-3&quot;&gt;&lt;strong&gt;PEP 328&lt;/strong&gt;&lt;/a&gt;: &lt;em&gt;Imports: Multi-Line and Absolute/Relative&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81e717daefa9a631788b771e5e9d3eed65dd92d2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://www.python.org/dev/peps/pep-0338&quot; id=&quot;index-6&quot;&gt;&lt;strong&gt;PEP 338&lt;/strong&gt;&lt;/a&gt; &amp;ndash; Executing modules as scripts</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="941a1390d7f9db0451e737c32f078b657c6c8538" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://www.python.org/dev/peps/pep-0343&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;PEP 343&lt;/strong&gt;&lt;/a&gt; - The &amp;ldquo;with&amp;rdquo; statement</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c34d49ebba57ec85cc86e53ce3e68deb4103b2f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://www.python.org/dev/peps/pep-0343&quot; id=&quot;index-4&quot;&gt;&lt;strong&gt;PEP 343&lt;/strong&gt;&lt;/a&gt;: &lt;em&gt;The &amp;ldquo;with&amp;rdquo; Statement&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e3619488188183a462dc07db0d7fa06f7d278cd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://www.python.org/dev/peps/pep-0362&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;PEP 362&lt;/strong&gt;&lt;/a&gt; - Function Signature Object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="178e6e7e9f9ce0db7e34c0551fbbad9d7f57aae6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://www.python.org/dev/peps/pep-0366&quot; id=&quot;index-7&quot;&gt;&lt;strong&gt;PEP 366&lt;/strong&gt;&lt;/a&gt; &amp;ndash; Main module explicit relative imports</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f764945475d3fac04119a7e3a1fe116e2f0c1cbe" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://www.python.org/dev/peps/pep-0370&quot; id=&quot;index-12&quot;&gt;&lt;strong&gt;PEP 370&lt;/strong&gt;&lt;/a&gt; &amp;ndash; Per user site-packages directory</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d70761bbd86b1b7016ca525d7aeae7e4d4b458c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://www.python.org/dev/peps/pep-0428&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;PEP 428&lt;/strong&gt;&lt;/a&gt;: The pathlib module &amp;ndash; object-oriented filesystem paths.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f7110568fad512fa5780c55042b2f04843328c5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://www.python.org/dev/peps/pep-0451&quot; id=&quot;index-8&quot;&gt;&lt;strong&gt;PEP 451&lt;/strong&gt;&lt;/a&gt; &amp;ndash; A ModuleSpec Type for the Import System</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20e132673e36b31e8ac7714a79104ab9b9415307" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://www.python.org/dev/peps/pep-0453&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;PEP 453&lt;/strong&gt;&lt;/a&gt;: Explicit bootstrapping of pip in Python installations</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1130bebe3a0585ac85f5e9f1c5c6bb8f4b0d455" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://www.python.org/dev/peps/pep-0461&quot; id=&quot;index-47&quot;&gt;&lt;strong&gt;PEP 461&lt;/strong&gt;&lt;/a&gt; - Adding % formatting to bytes and bytearray</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5d0c1e18b37370ab4d497976162d7fb4d6c66a6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://www.python.org/dev/peps/pep-0479&quot; id=&quot;index-7&quot;&gt;&lt;strong&gt;PEP 479&lt;/strong&gt;&lt;/a&gt;: &lt;em&gt;StopIteration handling inside generators&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2af95db1d1cd9ae8a0fbf3b81ac9c648788b6dee" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://www.python.org/dev/peps/pep-0485&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;PEP 485&lt;/strong&gt;&lt;/a&gt; &amp;ndash; A function for testing approximate equality</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec713f10ae73b9fa7f3645c578a7c4270c4dd0f9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://www.python.org/dev/peps/pep-0544&quot; id=&quot;index-11&quot;&gt;&lt;strong&gt;PEP 544&lt;/strong&gt;&lt;/a&gt; allows to solve this problem by allowing users to write the above code without explicit base classes in the class definition, allowing &lt;code&gt;Bucket&lt;/code&gt; to be implicitly considered a subtype of both &lt;code&gt;Sized&lt;/code&gt; and &lt;code&gt;Iterable[int]&lt;/code&gt; by static type checkers. This is known as &lt;em&gt;structural subtyping&lt;/em&gt; (or static duck-typing):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e00e989e8742b681d096ba52d3dd34807cb6b9ad" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://www.python.org/dev/peps/pep-0560&quot; id=&quot;index-2&quot;&gt;&lt;strong&gt;PEP 560&lt;/strong&gt;&lt;/a&gt; - Core support for typing module and generic types</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b82fe6ab8a040fffaf280536a51891c355e27a1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://www.python.org/dev/peps/pep-0563&quot; id=&quot;index-8&quot;&gt;&lt;strong&gt;PEP 563&lt;/strong&gt;&lt;/a&gt;: &lt;em&gt;Postponed evaluation of annotations&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="613dae09e386bcc977ae60723e29ca275ba30b5f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://www.python.org/dev/peps/pep-0574&quot; id=&quot;index-8&quot;&gt;&lt;strong&gt;PEP 574&lt;/strong&gt;&lt;/a&gt; &amp;ndash; Pickle protocol 5 with out-of-band data</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47179477580a520814c523dfb86f18bf02ea5c48" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://www.python.org/dev/peps/pep-3105&quot; id=&quot;index-5&quot;&gt;&lt;strong&gt;PEP 3105&lt;/strong&gt;&lt;/a&gt;: &lt;em&gt;Make print a function&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a51b7160a63fe7afc1d77480a8fb978d81a6dfe5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://www.python.org/dev/peps/pep-3112&quot; id=&quot;index-6&quot;&gt;&lt;strong&gt;PEP 3112&lt;/strong&gt;&lt;/a&gt;: &lt;em&gt;Bytes literals in Python 3000&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c9007d2cd5c49c5329d51b96d3cc78ad406a8ff" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://www.python.org/dev/peps/pep-3115&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;PEP 3115&lt;/strong&gt;&lt;/a&gt; - Metaclasses in Python 3000</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f410a6cabc34a30a1ffe7520737a16af07da51a3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://www.python.org/dev/peps/pep-3148&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;PEP 3148&lt;/strong&gt;&lt;/a&gt; &amp;ndash; futures - execute computations asynchronously</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99453e2ebc2f0aed1e20b622460c129335ca434f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://www.python.org/dev/peps/pep-3151&quot; id=&quot;index-7&quot;&gt;&lt;strong&gt;PEP 3151&lt;/strong&gt;&lt;/a&gt; - Reworking the OS and IO exception hierarchy</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="569979da6c6cd11e3da222a0aaf7a0c5f5171951" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://www.w3.org/TR/xml-c14n2/&quot;&gt;C14N 2.0&lt;/a&gt; transformation function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c45f391af5bee850de0de58d21ca059d8e1d2abc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://www.youtube.com/watch?v=Iq9DzN6mvYA&quot;&gt;Statistics for Hackers&lt;/a&gt; a video tutorial by &lt;a href=&quot;https://us.pycon.org/2016/speaker/profile/295/&quot;&gt;Jake Vanderplas&lt;/a&gt; on statistical analysis using just a few fundamental concepts including simulation, sampling, shuffling, and cross-validation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a21d2c535a28214be3e063189cfdeed63ec97635" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;logging#logging.captureWarnings&quot;&gt;&lt;code&gt;logging.captureWarnings()&lt;/code&gt;&lt;/a&gt; allows you to handle all warnings with the standard logging infrastructure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec75c39fa91eb692b05d8aecfaeeb4234dfd05db" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;marshal#module-marshal&quot;&gt;&lt;code&gt;marshal&lt;/code&gt;&lt;/a&gt; cannot be used to serialize user-defined classes and their instances. &lt;a href=&quot;#module-pickle&quot;&gt;&lt;code&gt;pickle&lt;/code&gt;&lt;/a&gt; can save and restore class instances transparently, however the class definition must be importable and live in the same module as when the object was stored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="810813a2a6ef64fa346e6382c9cc8c21810d8552" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;nntplib#nntplib.NNTP&quot;&gt;[1]&lt;/a&gt;&lt;a href=&quot;nntplib#nntplib.NNTP_SSL&quot;&gt;[2]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c80eef3afaa243287bc76e5657b6c88d515b4a60" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;os#os.fsencode&quot;&gt;&lt;code&gt;os.fsencode()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;os#os.fsdecode&quot;&gt;&lt;code&gt;os.fsdecode()&lt;/code&gt;&lt;/a&gt; should be used to ensure that the correct encoding and errors mode are used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9d55c45a7d82ed90e788e0e98f9e9eddc50fa94" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;os#os.ftruncate&quot;&gt;[1]&lt;/a&gt;&lt;a href=&quot;os#os.truncate&quot;&gt;[2]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6cc713cad8f7be1182dfd0722114f9ef91e9221d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;os#os.name&quot;&gt;&lt;code&gt;os.name&lt;/code&gt;&lt;/a&gt; has a coarser granularity. &lt;a href=&quot;os#os.uname&quot;&gt;&lt;code&gt;os.uname()&lt;/code&gt;&lt;/a&gt; gives system-dependent version information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e964f9d1cb7ef11f47617f5d23a8b484848e9ef8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;os#os.remove&quot;&gt;&lt;code&gt;os.remove()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;os#os.unlink&quot;&gt;&lt;code&gt;os.unlink()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04abba0bc1284e4b264bbf9685a7632fefc22a29" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;poplib#poplib.POP3&quot;&gt;[1]&lt;/a&gt;&lt;a href=&quot;poplib#poplib.POP3_SSL&quot;&gt;[2]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3eb766819b8aa1c1b528562e2f44c468df4fc092" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;poplib#poplib.POP3&quot;&gt;[1]&lt;/a&gt;&lt;a href=&quot;poplib#popplib.POP3_SSL&quot;&gt;[2]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce09066e50c9c7dfd5b56dc2d782e3b98b0211ee" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;pyexpat#module-xml.parsers.expat&quot;&gt;&lt;code&gt;xml.parsers.expat&lt;/code&gt;&lt;/a&gt;: the Expat parser binding</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffade159d98dab01253c095070b2760cad96ea1e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;quopri#quopri.encode&quot;&gt;&lt;code&gt;quopri.encode()&lt;/code&gt;&lt;/a&gt; with &lt;code&gt;quotetabs=True&lt;/code&gt; / &lt;a href=&quot;quopri#quopri.decode&quot;&gt;&lt;code&gt;quopri.decode()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3adae86809f19ae252a9f479634d7c1053d13611" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;select#select.devpoll&quot;&gt;&lt;code&gt;select.devpoll()&lt;/code&gt;&lt;/a&gt;-based selector.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb41febd30644c7b7caf0418956f23aa56245d8a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;select#select.epoll&quot;&gt;&lt;code&gt;select.epoll()&lt;/code&gt;&lt;/a&gt;-based selector.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="390866a4dd99e2aece0c63cb9f5211edc9876ddc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;select#select.kqueue&quot;&gt;&lt;code&gt;select.kqueue()&lt;/code&gt;&lt;/a&gt;-based selector.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="297f30e13184596902e4879af3db28edec5db8e9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;select#select.poll&quot;&gt;&lt;code&gt;select.poll()&lt;/code&gt;&lt;/a&gt;-based selector.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f9fb0622b05a691ca5620febca29e99f609e23a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;select#select.select&quot;&gt;&lt;code&gt;select.select()&lt;/code&gt;&lt;/a&gt;-based selector.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a46a00e2feca8319187af58c6969f3ea962731a0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;selectors#selectors.SelectSelector&quot;&gt;&lt;code&gt;SelectSelector&lt;/code&gt;&lt;/a&gt; is used to wait on socket events: it supports sockets and is limited to 512 sockets.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d30a94b8ed9ed4643c41c7ecd3c717d593a4e233" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;shlex#shlex.split&quot;&gt;&lt;code&gt;shlex.split()&lt;/code&gt;&lt;/a&gt; can be useful when determining the correct tokenization for &lt;em&gt;args&lt;/em&gt;, especially in complex cases:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0f2596e55366f422ec33695d731b29283a56c42" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;shutil#shutil.get_terminal_size&quot;&gt;&lt;code&gt;shutil.get_terminal_size()&lt;/code&gt;&lt;/a&gt; is the high-level function which should normally be used, &lt;code&gt;os.get_terminal_size&lt;/code&gt; is the low-level implementation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29d6741e04db1db2a93d80e0f730bfa7d1e40e06" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;socket#socket.gethostbyname&quot;&gt;[1]&lt;/a&gt;&lt;a href=&quot;socket#socket.gethostbyname_ex&quot;&gt;[2]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4b883628f83c5113dd8f737b5e20b61f3a7accb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;socket#socket.socket.connect&quot;&gt;[1]&lt;/a&gt;&lt;a href=&quot;socket#socket.socket.connect_ex&quot;&gt;[2]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd3746afe00d119a5feb0805c21c8e45a2f5de2d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;socket#socket.socket.getpeername&quot;&gt;&lt;code&gt;getpeername()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;socket#socket.socket.getsockname&quot;&gt;&lt;code&gt;getsockname()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b741436ba8e3f366ddb99bc7c27874600df437b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;socket#socket.socket.getsockopt&quot;&gt;&lt;code&gt;getsockopt()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;socket#socket.socket.setsockopt&quot;&gt;&lt;code&gt;setsockopt()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55213ec1e1fdbb5c8fcf1a31a268ded1ef20b094" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;socket#socket.socket.gettimeout&quot;&gt;&lt;code&gt;gettimeout()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;socket#socket.socket.settimeout&quot;&gt;&lt;code&gt;settimeout()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;socket#socket.socket.setblocking&quot;&gt;&lt;code&gt;setblocking()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06aa776f2c887132d0fee84106fe2965c2a020fa" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;socket#socket.socket.recv&quot;&gt;&lt;code&gt;recv()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;socket#socket.socket.recv_into&quot;&gt;&lt;code&gt;recv_into()&lt;/code&gt;&lt;/a&gt; (but passing a non-zero &lt;code&gt;flags&lt;/code&gt; argument is not allowed)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e2f14cb3d1075bc57b56e796ed6cf10f474093c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;socket#socket.socket.send&quot;&gt;&lt;code&gt;send()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;socket#socket.socket.sendall&quot;&gt;&lt;code&gt;sendall()&lt;/code&gt;&lt;/a&gt; (with the same limitation)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3b408f4644db3ec46a296456785a822e6a3a014" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;socket#socket.socket.sendfile&quot;&gt;&lt;code&gt;sendfile()&lt;/code&gt;&lt;/a&gt; (but &lt;a href=&quot;os#os.sendfile&quot;&gt;&lt;code&gt;os.sendfile&lt;/code&gt;&lt;/a&gt; will be used for plain-text sockets only, else &lt;a href=&quot;socket#socket.socket.send&quot;&gt;&lt;code&gt;send()&lt;/code&gt;&lt;/a&gt; will be used)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f22da6cfc46ec701d72e4375f4e304037d4b7b95" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;stdtypes#dict&quot;&gt;&lt;code&gt;dict&lt;/code&gt;&lt;/a&gt;. Keys must be strings, values may be any conformable type. Objects of user-defined classes can be passed in; only their &lt;a href=&quot;stdtypes#object.__dict__&quot;&gt;&lt;code&gt;__dict__&lt;/code&gt;&lt;/a&gt; attribute is transmitted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9deaeaaa8d99b0baafdf1aa1f364e3b0aee28f2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;stdtypes#int.bit_length&quot;&gt;&lt;code&gt;int.bit_length()&lt;/code&gt;&lt;/a&gt; returns the number of bits necessary to represent an integer in binary, excluding the sign and leading zeros.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16d0d0ad607177dda255fa0fc96b8b4eb910bbe8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;stdtypes#list&quot;&gt;&lt;code&gt;list&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;stdtypes#tuple&quot;&gt;&lt;code&gt;tuple&lt;/code&gt;&lt;/a&gt; containing conformable elements. Arrays are returned as &lt;a href=&quot;stdtypes#list&quot;&gt;&lt;code&gt;lists&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2321ffb1bb6a068fa9572248cd83245998d6bbdd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;stdtypes#str&quot;&gt;&lt;code&gt;str&lt;/code&gt;&lt;/a&gt;;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4ac5aaa5d766c3927bce838558d7914db8d5946" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;sys#sys.excepthook&quot;&gt;&lt;code&gt;sys.excepthook()&lt;/code&gt;&lt;/a&gt; handles uncaught exceptions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4efdf2b661d7872d5dca935e7c425cbbb69cdeae" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;sys#sys.platform&quot;&gt;&lt;code&gt;sys.platform&lt;/code&gt;&lt;/a&gt; has a finer granularity. &lt;a href=&quot;#os.uname&quot;&gt;&lt;code&gt;os.uname()&lt;/code&gt;&lt;/a&gt; gives system-dependent version information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e349ca194ba338a7186a5a0fd71a2e000703a884" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;tempfile#tempfile.NamedTemporaryFile&quot;&gt;[1]&lt;/a&gt;&lt;a href=&quot;tempfile#tempfile.TemporaryFile&quot;&gt;[2]&lt;/a&gt;&lt;a href=&quot;tempfile#tempfile.mkstemp&quot;&gt;[3]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53ff0d968044dc6e1640a86bbe5df5ac30f388fd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;tempfile#tempfile.TemporaryDirectory&quot;&gt;[1]&lt;/a&gt;&lt;a href=&quot;tempfile#tempfile.mkdtemp&quot;&gt;[2]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a0545558c81a57984ae85e70759794f35b11e3e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;threading#threading.Lock&quot;&gt;&lt;code&gt;threading.Lock&lt;/code&gt;&lt;/a&gt; is an example of a reusable, but not reentrant, context manager (for a reentrant lock, it is necessary to use &lt;a href=&quot;threading#threading.RLock&quot;&gt;&lt;code&gt;threading.RLock&lt;/code&gt;&lt;/a&gt; instead).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8f6030a669fd3028bef35eef93b3ec76f516f27" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;threading#threading.RLock&quot;&gt;&lt;code&gt;threading.RLock&lt;/code&gt;&lt;/a&gt; is an example of a reentrant context manager, as are &lt;a href=&quot;#contextlib.suppress&quot;&gt;&lt;code&gt;suppress()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#contextlib.redirect_stdout&quot;&gt;&lt;code&gt;redirect_stdout()&lt;/code&gt;&lt;/a&gt;. Here&amp;rsquo;s a very simple example of reentrant use:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c33ba6f0fc14483f345463f0c5e7dae3d3fe2e0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;types#types.MappingProxyType&quot;&gt;&lt;code&gt;types.MappingProxyType&lt;/code&gt;&lt;/a&gt; can be used to create a read-only view of a &lt;a href=&quot;#dict&quot;&gt;&lt;code&gt;dict&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="858d41006255d2dab84484fde929c8be724bdb9c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;urllib.error#module-urllib.error&quot;&gt;&lt;code&gt;urllib.error&lt;/code&gt;&lt;/a&gt; containing the exceptions raised by &lt;a href=&quot;urllib.request#module-urllib.request&quot;&gt;&lt;code&gt;urllib.request&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a34e6744582f9ff95c47077e763c19b6d9e7808d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;urllib.parse#module-urllib.parse&quot;&gt;&lt;code&gt;urllib.parse&lt;/code&gt;&lt;/a&gt; for parsing URLs</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc2f4abe2283da2dea1b9a97b6158c4a7957591d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;urllib.request#module-urllib.request&quot;&gt;&lt;code&gt;urllib.request&lt;/code&gt;&lt;/a&gt; for opening and reading URLs</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="982d428fefa8db1012560beb05ab8ab2b7f2f5d8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;urllib.robotparser#module-urllib.robotparser&quot;&gt;&lt;code&gt;urllib.robotparser&lt;/code&gt;&lt;/a&gt; for parsing &lt;code&gt;robots.txt&lt;/code&gt; files</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6e026fbe9f0b9f7fbc3aeb844ac3270c22b5d5e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;uu#uu.encode&quot;&gt;&lt;code&gt;uu.encode()&lt;/code&gt;&lt;/a&gt; / &lt;a href=&quot;uu#uu.decode&quot;&gt;&lt;code&gt;uu.decode()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9bdb7db3e33161cd85f1cae2db2671834855e85" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;winreg#winreg.CreateKey&quot;&gt;[1]&lt;/a&gt;&lt;a href=&quot;winreg#winreg.CreateKeyEx&quot;&gt;[2]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b598f461b8764514a4fd968ddddea755d372f081" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;winreg#winreg.CreateKey&quot;&gt;[1]&lt;/a&gt;&lt;a href=&quot;winreg#winreg.CreateKeyEx&quot;&gt;[2]&lt;/a&gt;&lt;a href=&quot;winreg#winreg.OpenKey&quot;&gt;[3]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c03e0985f555c8d2f417ed24be37f51c6d3d58a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;winreg#winreg.DeleteKey&quot;&gt;[1]&lt;/a&gt;&lt;a href=&quot;winreg#winreg.DeleteKeyEx&quot;&gt;[2]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a3dfee327cbfd46dfef0cddbc865bdc9b9fb0fa" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;winreg#winreg.QueryValue&quot;&gt;[1]&lt;/a&gt;&lt;a href=&quot;winreg#winreg.QueryValueEx&quot;&gt;[2]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4351c64126895bf6ae87fe9664e2b9a03c6a8d8f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;winreg#winreg.SetValue&quot;&gt;[1]&lt;/a&gt;&lt;a href=&quot;winreg#winreg.SetValueEx&quot;&gt;[2]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3f3d8c5d16862412a24ff59b3e0066d16b4925e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;xml.dom#module-xml.dom&quot;&gt;&lt;code&gt;xml.dom&lt;/code&gt;&lt;/a&gt;: the DOM API definition</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b7eb6111a53c57116d135b2e2c76d97d18c3d5f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;xml.dom.minidom#module-xml.dom.minidom&quot;&gt;&lt;code&gt;xml.dom.minidom&lt;/code&gt;&lt;/a&gt; doesn&amp;rsquo;t expand external entities and simply returns the unexpanded entity verbatim.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7350437ca1f5220157e6b6c94aef6977c57f498" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;xml.dom.minidom#module-xml.dom.minidom&quot;&gt;&lt;code&gt;xml.dom.minidom&lt;/code&gt;&lt;/a&gt;: a minimal DOM implementation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9c0a0caab9909d8656fb26b537078ed9c73a705" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;xml.dom.pulldom#module-xml.dom.pulldom&quot;&gt;&lt;code&gt;xml.dom.pulldom&lt;/code&gt;&lt;/a&gt;: support for building partial DOM trees</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30c349cb0a1157e41c1da350a0b98b46b42db13f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;xml.etree.elementtree#module-xml.etree.ElementTree&quot;&gt;&lt;code&gt;xml.etree.ElementTree&lt;/code&gt;&lt;/a&gt; doesn&amp;rsquo;t expand external entities and raises a &lt;code&gt;ParserError&lt;/code&gt; when an entity occurs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77a96522ee3a2ec3433d5a7e97559c5d7565dbe8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;xml.etree.elementtree#module-xml.etree.ElementTree&quot;&gt;&lt;code&gt;xml.etree.ElementTree&lt;/code&gt;&lt;/a&gt;: the ElementTree API, a simple and lightweight XML processor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2256a2cead20aa9a237e985a735a66a67c577de2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;xml.sax#module-xml.sax&quot;&gt;&lt;code&gt;xml.sax&lt;/code&gt;&lt;/a&gt;: SAX2 base classes and convenience functions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d4fa144bc90b123938dad99cff9728e3ca81cce" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;zlib#zlib.compress&quot;&gt;&lt;code&gt;zlib.compress()&lt;/code&gt;&lt;/a&gt; / &lt;a href=&quot;zlib#zlib.decompress&quot;&gt;&lt;code&gt;zlib.decompress()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24e9072c39ad0c9e9606f1826136aa782939eb5a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;+Infinity&quot;&lt;/code&gt;, indicating that the operand is positive infinity.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1951da6521c3d85b8643731d9e9bd73f20b00fd0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;+Normal&quot;&lt;/code&gt;, indicating that the operand is a positive normal number.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f659260ee5a8588a77add5a723786a48fa162b5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;+Subnormal&quot;&lt;/code&gt;, indicating that the operand is positive and subnormal.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9903c84dd946ed2f4694d827df9240ac054b181" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;+Zero&quot;&lt;/code&gt;, indicating that the operand is a positive zero.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd2993831a009c6ec1a779810c5d0367d3dc9f89" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;-Infinity&quot;&lt;/code&gt;, indicating that the operand is negative infinity.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca4322f2d2cbc0444dd2596532b76037add251e0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;-Normal&quot;&lt;/code&gt;, indicating that the operand is a negative normal number.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6c130284e564cc546daf1e016cd10a136e0bd05" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;-Subnormal&quot;&lt;/code&gt;, indicating that the operand is negative and subnormal.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="490d50fabdcb7247eefeccbdd8fbd2f83167330d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;-Zero&quot;&lt;/code&gt;, indicating that the operand is a negative zero.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfd5e472a203450bddf8941e6e9938355cdb0dff" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;NaN&quot;&lt;/code&gt;, indicating that the operand is a quiet NaN (Not a Number).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5149b13db72dd7538bcb3e2d43fed1d6a9302ec8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;c_call&quot;&lt;/code&gt;: A C function is about to be called.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9f850032fccc4e2f600160adaf810930373db55" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;c_exception&quot;&lt;/code&gt;: A C function has raised an exception.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef51cfa438b2edcb5d80969e5b1a83d6f7feb8f1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;c_return&quot;&lt;/code&gt;: A C function has returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13d11c8adc043fef07049ef349bae55e4c237013" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;call&quot;&lt;/code&gt;: A function is about to be called, or another code block entered.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d4fda3e2b73c4d3e435939a6437b66fe22659f7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;exception&quot;&lt;/code&gt;: An exception has occurred.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="581820441b319714d83f79664e50991f7cd7ed9e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;line&quot;&lt;/code&gt;: A new line of code is going to be executed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da79f882f184e36d724a407e22f35c65b8ce1417" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;return&quot;&lt;/code&gt;: A function or other code block is about to return.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1571ed4da272eb9723ba6dd563f449277ad28a2d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;sNaN&quot;&lt;/code&gt;, indicating that the operand is a signaling NaN.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96bd9332932e72892b5a94af5cc385b29080a9b4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$$&lt;/code&gt; is an escape; it is replaced with a single &lt;code&gt;$&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58c3ae6b727dcde667cdf1622e19078707b7d853" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$identifier&lt;/code&gt; names a substitution placeholder matching a mapping key of &lt;code&gt;&quot;identifier&quot;&lt;/code&gt;. By default, &lt;code&gt;&quot;identifier&quot;&lt;/code&gt; is restricted to any case-insensitive ASCII alphanumeric string (including underscores) that starts with an underscore or ASCII letter. The first non-identifier character after the &lt;code&gt;$&lt;/code&gt; character terminates this placeholder specification.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="edf8f663daf0d0f2e941a5b19996241f13e302eb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;${identifier}&lt;/code&gt; is equivalent to &lt;code&gt;$identifier&lt;/code&gt;. It is required when valid identifier characters follow the placeholder but are not part of the placeholder, such as &lt;code&gt;&quot;${noun}ification&quot;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f97c4fe051f32e6160e2bf6d58d4d837e9f89b6d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;%e&lt;/code&gt;, &lt;code&gt;%E&lt;/code&gt;, &lt;code&gt;%f&lt;/code&gt;, &lt;code&gt;%g&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70175f848a290b693762479c692a31c337f394ce" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;%x&lt;/code&gt;, &lt;code&gt;%X&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61b445480aa4640a8bb466019304a7fb70eea15e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;lt;protocol&amp;gt;_error()&lt;/code&gt; &amp;mdash; signal that the handler knows how to handle errors from (non-&lt;code&gt;http&lt;/code&gt;) &lt;em&gt;protocol&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca48eefbfeae3f89f5c146aa6148d5e8d974f535" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;lt;protocol&amp;gt;_open()&lt;/code&gt; &amp;mdash; signal that the handler knows how to open &lt;em&gt;protocol&lt;/em&gt; URLs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f781fab33d9d24bde1831771d36d2f6af6bd7a87" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;lt;protocol&amp;gt;_request()&lt;/code&gt; &amp;mdash; signal that the handler knows how to pre-process &lt;em&gt;protocol&lt;/em&gt; requests.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d9dec87328d966378084235e8fae7a70229713e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;lt;protocol&amp;gt;_response()&lt;/code&gt; &amp;mdash; signal that the handler knows how to post-process &lt;em&gt;protocol&lt;/em&gt; responses.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d59ff2d2853b4f186f3440ece56364361ee42b1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'*'&lt;/code&gt;. All command-line arguments present are gathered into a list. Note that it generally doesn&amp;rsquo;t make much sense to have more than one positional argument with &lt;code&gt;nargs='*'&lt;/code&gt;, but multiple optional arguments with &lt;code&gt;nargs='*'&lt;/code&gt; is possible. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1eee821c4ee558a62f1436e96b6536ee1c4f346" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'+'&lt;/code&gt;. Just like &lt;code&gt;'*'&lt;/code&gt;, all command-line args present are gathered into a list. Additionally, an error message will be generated if there wasn&amp;rsquo;t at least one command-line argument present. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7fdb1881997e9d4b21d64714a7c76b2c778dc110" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'?'&lt;/code&gt;. One argument will be consumed from the command line if possible, and produced as a single item. If no command-line argument is present, the value from &lt;a href=&quot;#default&quot;&gt;default&lt;/a&gt; will be produced. Note that for optional arguments, there is an additional case - the option string is present but not followed by a command-line argument. In this case the value from &lt;a href=&quot;#const&quot;&gt;const&lt;/a&gt; will be produced. Some examples to illustrate this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae62ea0bfa937e66e84166a9e23a781c45613ad7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'\u'&lt;/code&gt;, &lt;code&gt;'\U'&lt;/code&gt;, and &lt;code&gt;'\N'&lt;/code&gt; escape sequences are only recognized in Unicode patterns. In bytes patterns they are errors. Unknown escapes of ASCII letters are reserved for future use and treated as errors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc0059e4f8b92f5385ccd893ef5b8eeef274015d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'__main__'&lt;/code&gt; is the name of the scope in which top-level code executes. A module&amp;rsquo;s __name__ is set equal to &lt;code&gt;'__main__'&lt;/code&gt; when read from standard input, a script, or from an interactive prompt.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a5fbd21e5e58418163c3adb848ad467b05d250d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'append'&lt;/code&gt; - This stores a list, and appends each argument value to the list. This is useful to allow an option to be specified multiple times. Example usage:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf19bf46b56222e48573e964388f844b62ff5123" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'append_const'&lt;/code&gt; - This stores a list, and appends the value specified by the &lt;a href=&quot;#const&quot;&gt;const&lt;/a&gt; keyword argument to the list. (Note that the &lt;a href=&quot;#const&quot;&gt;const&lt;/a&gt; keyword argument defaults to &lt;code&gt;None&lt;/code&gt;.) The &lt;code&gt;'append_const'&lt;/code&gt; action is typically useful when multiple arguments need to store constants to the same list. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8bb873102e52e33a71e85744cf52f09c9e3608b2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'auto'&lt;/code&gt;: Same as &lt;code&gt;'seconds'&lt;/code&gt; if &lt;a href=&quot;#datetime.datetime.microsecond&quot;&gt;&lt;code&gt;microsecond&lt;/code&gt;&lt;/a&gt; is 0, same as &lt;code&gt;'microseconds'&lt;/code&gt; otherwise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be04250d7310b0fad61b99de57e535440a9a5bd0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'auto'&lt;/code&gt;: Same as &lt;code&gt;'seconds'&lt;/code&gt; if &lt;a href=&quot;#datetime.time.microsecond&quot;&gt;&lt;code&gt;microsecond&lt;/code&gt;&lt;/a&gt; is 0, same as &lt;code&gt;'microseconds'&lt;/code&gt; otherwise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2115129fd2bcf61d10d22c7c5b09c1130b27a128" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'backslashreplace'&lt;/code&gt; replaces malformed data by Python&amp;rsquo;s backslashed escape sequences.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc132d0e5d5ae50656aa0f7d1fce95598cdc4df6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'cipher'&lt;/code&gt;: a three-value tuple containing the name of the cipher being used, the version of the SSL protocol that defines its use, and the number of secret bits being used; result of &lt;a href=&quot;ssl#ssl.SSLSocket.cipher&quot;&gt;&lt;code&gt;ssl.SSLSocket.cipher()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01f2e656faa5143a4863c0873281df2d1bcc116f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'compression'&lt;/code&gt;: the compression algorithm being used as a string, or &lt;code&gt;None&lt;/code&gt; if the connection isn&amp;rsquo;t compressed; result of &lt;a href=&quot;ssl#ssl.SSLSocket.compression&quot;&gt;&lt;code&gt;ssl.SSLSocket.compression()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fba3128115d93a1d8f79313d096dcb88f2e42a6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'count'&lt;/code&gt; - This counts the number of times a keyword argument occurs. For example, this is useful for increasing verbosity levels:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9589d4e8fad6acab391d15068c7f877c175453f3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'extend'&lt;/code&gt; - This stores a list, and extends each argument value to the list. Example usage:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c08248f8e0083d6d51ae3e5830486f9f493b57f4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'help'&lt;/code&gt; - This prints a complete help message for all the options in the current parser and then exits. By default a help action is automatically added to the parser. See &lt;a href=&quot;#argparse.ArgumentParser&quot;&gt;&lt;code&gt;ArgumentParser&lt;/code&gt;&lt;/a&gt; for details of how the output is created.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bdb113ed0feefb81b2df0054dcbda7d9a962cb6f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'hours'&lt;/code&gt;: Include the &lt;a href=&quot;#datetime.datetime.hour&quot;&gt;&lt;code&gt;hour&lt;/code&gt;&lt;/a&gt; in the two-digit &lt;code&gt;HH&lt;/code&gt; format.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="536ecf7cf154aa4178a30129d463e0c2f6c32cad" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'hours'&lt;/code&gt;: Include the &lt;a href=&quot;#datetime.time.hour&quot;&gt;&lt;code&gt;hour&lt;/code&gt;&lt;/a&gt; in the two-digit &lt;code&gt;HH&lt;/code&gt; format.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a09c0a03756dd7f0c9d93fc0747a96adbcc3e343" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'ignore'&lt;/code&gt; ignores errors. Note that ignoring encoding errors can lead to data loss.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="108dcd2625fb2212623762c58c02c7795e85063e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'microseconds'&lt;/code&gt;: Include full time in &lt;code&gt;HH:MM:SS.ffffff&lt;/code&gt; format.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8852119e753d000fd6f33859d97a6fb2eb985d5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'milliseconds'&lt;/code&gt;: Include full time, but truncate fractional second part to milliseconds. &lt;code&gt;HH:MM:SS.sss&lt;/code&gt; format.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f131b7a98df841a966a528576670693f0153c28" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'minutes'&lt;/code&gt;: Include &lt;a href=&quot;#datetime.datetime.hour&quot;&gt;&lt;code&gt;hour&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#datetime.datetime.minute&quot;&gt;&lt;code&gt;minute&lt;/code&gt;&lt;/a&gt; in &lt;code&gt;HH:MM&lt;/code&gt; format.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a34b97dac8ecb58e51519deeaf583383afd087c8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'minutes'&lt;/code&gt;: Include &lt;a href=&quot;#datetime.time.hour&quot;&gt;&lt;code&gt;hour&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#datetime.time.minute&quot;&gt;&lt;code&gt;minute&lt;/code&gt;&lt;/a&gt; in &lt;code&gt;HH:MM&lt;/code&gt; format.</source>
          <target state="new"/>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
