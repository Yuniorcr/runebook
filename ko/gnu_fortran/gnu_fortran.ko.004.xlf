<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="gnu_fortran">
    <body>
      <group id="gnu_fortran">
        <trans-unit id="c72eafe79816a171589425f21b5ee3853eab2154" translate="yes" xml:space="preserve">
          <source>However, there is no implicit conversion of &lt;code&gt;INTEGER&lt;/code&gt; values in &lt;code&gt;if&lt;/code&gt;-statements, nor of &lt;code&gt;LOGICAL&lt;/code&gt; or &lt;code&gt;INTEGER&lt;/code&gt; values in I/O operations.</source>
          <target state="translated">그러나 &lt;code&gt;if&lt;/code&gt; -statement 의 &lt;code&gt;INTEGER&lt;/code&gt; 값 이나 I / O 조작 의 &lt;code&gt;LOGICAL&lt;/code&gt; 또는 &lt;code&gt;INTEGER&lt;/code&gt; 값 의 암시 적 변환은 없습니다 .</target>
        </trans-unit>
        <trans-unit id="73f5c57e154aae15fe5d06283f6d7bb16f6892c8" translate="yes" xml:space="preserve">
          <source>Hyperbolic cosine function</source>
          <target state="translated">쌍곡 코사인 함수</target>
        </trans-unit>
        <trans-unit id="08b1f0af57ea1a2b7459e48acc5e76d5fda0a5b7" translate="yes" xml:space="preserve">
          <source>Hyperbolic sine function</source>
          <target state="translated">쌍곡 사인 함수</target>
        </trans-unit>
        <trans-unit id="284573e0d60520a3cdd6241a351ab32ed82ca6a5" translate="yes" xml:space="preserve">
          <source>Hyperbolic tangent function</source>
          <target state="translated">쌍곡 탄젠트 함수</target>
        </trans-unit>
        <trans-unit id="ca73ab65568cd125c2d27a22bbd9e863c10b675d" translate="yes" xml:space="preserve">
          <source>I</source>
          <target state="translated">I</target>
        </trans-unit>
        <trans-unit id="a2030ea2f432870a6132f1db7f1762dbb30a620f" translate="yes" xml:space="preserve">
          <source>ID of device containing directory entry for file (0 if not available)</source>
          <target state="translated">파일의 디렉토리 항목을 포함하는 장치의 ID (사용할 수없는 경우 0)</target>
        </trans-unit>
        <trans-unit id="a193bdaa6021d5364bbe2609be9d2faf185ec606" translate="yes" xml:space="preserve">
          <source>IEEE exceptions. Possible values are (bitwise or-ed) zero (0, default) no trapping, &lt;code&gt;GFC_FPE_INVALID&lt;/code&gt; (1), &lt;code&gt;GFC_FPE_DENORMAL&lt;/code&gt; (2), &lt;code&gt;GFC_FPE_ZERO&lt;/code&gt; (4), &lt;code&gt;GFC_FPE_OVERFLOW&lt;/code&gt; (8), &lt;code&gt;GFC_FPE_UNDERFLOW&lt;/code&gt; (16), and &lt;code&gt;GFC_FPE_INEXACT&lt;/code&gt; (32).</source>
          <target state="translated">IEEE 예외. 가능한 값은 (비트 단위 또는 0) 0 (기본값) 트래핑 없음, &lt;code&gt;GFC_FPE_INVALID&lt;/code&gt; (1), &lt;code&gt;GFC_FPE_DENORMAL&lt;/code&gt; (2), &lt;code&gt;GFC_FPE_ZERO&lt;/code&gt; (4), &lt;code&gt;GFC_FPE_OVERFLOW&lt;/code&gt; (8), &lt;code&gt;GFC_FPE_UNDERFLOW&lt;/code&gt; (16) 및 &lt;code&gt;GFC_FPE_INEXACT&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="2e3241fd2a39f2c176f1e2098caf0ac274f20caf" translate="yes" xml:space="preserve">
          <source>IERRNO</source>
          <target state="translated">IERRNO</target>
        </trans-unit>
        <trans-unit id="06cea26e613b201cc0303bb153dcffe700cd5f7e" translate="yes" xml:space="preserve">
          <source>INTENT(INOUT) argument; shall have the same dynamic type and type paramters on all images of the current team. If it is an array, it shall have the same shape on all images.</source>
          <target state="translated">INTENT (INOUT) 인수; 현재 팀의 모든 이미지에서 동일한 동적 유형 및 유형 매개 변수를 가져야합니다. 배열이면 모든 이미지에서 같은 모양이어야합니다.</target>
        </trans-unit>
        <trans-unit id="af6e8ebe1a8995dc4c80d5c7b59b8df676aef3bc" translate="yes" xml:space="preserve">
          <source>ISATTY</source>
          <target state="translated">ISATTY</target>
        </trans-unit>
        <trans-unit id="730d9d2639ecb89963ba051da9b2e1feb646f3fb" translate="yes" xml:space="preserve">
          <source>ISHFT</source>
          <target state="translated">ISHFT</target>
        </trans-unit>
        <trans-unit id="71062a16ecbc32ab65547342e30aafe98166156f" translate="yes" xml:space="preserve">
          <source>ISHFTC</source>
          <target state="translated">ISHFTC</target>
        </trans-unit>
        <trans-unit id="d3598064a005c9665604827e0d1142d0f24d392d" translate="yes" xml:space="preserve">
          <source>Identifies the preconnected unit identified by the asterisk (&lt;code&gt;*&lt;/code&gt;) in &lt;code&gt;READ&lt;/code&gt; statement.</source>
          <target state="translated">&lt;code&gt;READ&lt;/code&gt; 문 에서 별표 ( &lt;code&gt;*&lt;/code&gt; )로 식별 된 사전 연결된 장치를 식별 합니다.</target>
        </trans-unit>
        <trans-unit id="5c4138de01e70695c4f83698de37bcbd957777c6" translate="yes" xml:space="preserve">
          <source>Identifies the preconnected unit identified by the asterisk (&lt;code&gt;*&lt;/code&gt;) in &lt;code&gt;WRITE&lt;/code&gt; statement.</source>
          <target state="translated">&lt;code&gt;WRITE&lt;/code&gt; 문 에서 별표 ( &lt;code&gt;*&lt;/code&gt; )로 식별 된 사전 연결된 장치를 식별 합니다.</target>
        </trans-unit>
        <trans-unit id="2c71d01f0c008cc0d18c6edf795ed3cc6a5e8872" translate="yes" xml:space="preserve">
          <source>Identifies the preconnected unit used for error reporting.</source>
          <target state="translated">오류보고에 사용되는 사전 연결된 장치를 식별합니다.</target>
        </trans-unit>
        <trans-unit id="751c68a3471b1c791efaee0a8e7c24ea0c266efd" translate="yes" xml:space="preserve">
          <source>If</source>
          <target state="translated">If</target>
        </trans-unit>
        <trans-unit id="3a61b4fd5650c4daa3b2a9265605dd6cff085d06" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;RANDOM_SEED&lt;/code&gt; is called without arguments, it is seeded with random data retrieved from the operating system.</source>
          <target state="translated">경우 &lt;code&gt;RANDOM_SEED&lt;/code&gt; 가 인수없이 호출, 운영 체제에서 검색 임의의 데이터로 시드된다.</target>
        </trans-unit>
        <trans-unit id="a430df188f74594bd44ce59b28c82e6a1b08080c" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;SIGNAL&lt;/code&gt; is called as a subroutine and the &lt;var&gt;STATUS&lt;/var&gt; argument is supplied, it is set to the value returned by &lt;code&gt;signal(2)&lt;/code&gt;.</source>
          <target state="translated">경우 &lt;code&gt;SIGNAL&lt;/code&gt; 이 서브 루틴과 같이 호출 &lt;var&gt;STATUS&lt;/var&gt; 인수가 제공되고, 이는 의해 리턴 된 값으로 설정 &lt;code&gt;signal(2)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1078750f850f24ef8ed59ba94f88ccd29ffa6bf1" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;A&lt;/var&gt; and &lt;var&gt;P&lt;/var&gt; are of type &lt;code&gt;INTEGER&lt;/code&gt;:</source>
          <target state="translated">&lt;var&gt;A&lt;/var&gt; 와 &lt;var&gt;P&lt;/var&gt; 가 &lt;code&gt;INTEGER&lt;/code&gt; 유형 인 경우 :</target>
        </trans-unit>
        <trans-unit id="f324aec4bb7bb53a08d884c16168791f5b3a1cef" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;A&lt;/var&gt; and &lt;var&gt;P&lt;/var&gt; are of type &lt;code&gt;REAL&lt;/code&gt;:</source>
          <target state="translated">&lt;var&gt;A&lt;/var&gt; 와 &lt;var&gt;P&lt;/var&gt; 가 &lt;code&gt;REAL&lt;/code&gt; 유형 인 경우 :</target>
        </trans-unit>
        <trans-unit id="787d8dcb6987a2e7fed3ee4bcb5357088e968c9e" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;A&lt;/var&gt; is of type &lt;code&gt;COMPLEX&lt;/code&gt;, rule B is applied to the real part of &lt;var&gt;A&lt;/var&gt;.</source>
          <target state="translated">&lt;var&gt;A&lt;/var&gt; 가 &lt;code&gt;COMPLEX&lt;/code&gt; 유형 인 경우 규칙 B가 &lt;var&gt;A&lt;/var&gt; 의 실제 부분에 적용됩니다 .</target>
        </trans-unit>
        <trans-unit id="3568afbbf365fa99784c80b14432f5784b0d87c6" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;A&lt;/var&gt; is of type &lt;code&gt;INTEGER&lt;/code&gt;, &lt;code&gt;INT(A) = A&lt;/code&gt;</source>
          <target state="translated">경우 &lt;var&gt;A&lt;/var&gt; 는 유형이다 &lt;code&gt;INTEGER&lt;/code&gt; , &lt;code&gt;INT(A) = A&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c8a4b03f219d2078d67148162446be881477149d" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;A&lt;/var&gt; is of type &lt;code&gt;REAL&lt;/code&gt; and &lt;em&gt;|A| &amp;lt; 1&lt;/em&gt;, &lt;code&gt;INT(A)&lt;/code&gt; equals &lt;code&gt;0&lt;/code&gt;. If &lt;em&gt;|A| \geq 1&lt;/em&gt;, then &lt;code&gt;INT(A)&lt;/code&gt; is the integer whose magnitude is the largest integer that does not exceed the magnitude of &lt;var&gt;A&lt;/var&gt; and whose sign is the same as the sign of &lt;var&gt;A&lt;/var&gt;.</source>
          <target state="translated">경우 &lt;var&gt;A&lt;/var&gt; 는 타입이다 &lt;code&gt;REAL&lt;/code&gt; 및 &lt;em&gt;| A | &amp;lt;1&lt;/em&gt; 이면 &lt;code&gt;INT(A)&lt;/code&gt; &lt;code&gt;0&lt;/code&gt; 과 같습니다 . 만약 &lt;em&gt;| A | \ GEQ 한&lt;/em&gt; 다음, &lt;code&gt;INT(A)&lt;/code&gt; 그 진폭의 크기를 초과하지 않는 최대의 정수 정수이며 &lt;var&gt;A&lt;/var&gt; 하고, 그 부호의 부호와 동일한 &lt;var&gt;A&lt;/var&gt; 가 .</target>
        </trans-unit>
        <trans-unit id="c227901640d5c82c0a60dbb8d477897529947ef0" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;BACK&lt;/var&gt; is either absent or equals &lt;code&gt;FALSE&lt;/code&gt;, this function returns the position of the leftmost character of &lt;var&gt;STRING&lt;/var&gt; that is in &lt;var&gt;SET&lt;/var&gt;. If &lt;var&gt;BACK&lt;/var&gt; equals &lt;code&gt;TRUE&lt;/code&gt;, the rightmost position is returned. If no character of &lt;var&gt;SET&lt;/var&gt; is found in &lt;var&gt;STRING&lt;/var&gt;, the result is zero.</source>
          <target state="translated">경우 &lt;var&gt;BACK&lt;/var&gt; 이 중 결석 또는 동일 &lt;code&gt;FALSE&lt;/code&gt; 를 ,이 기능의 가장 왼쪽 문자의 위치를 반환 &lt;var&gt;STRING&lt;/var&gt; 에 &lt;var&gt;SET&lt;/var&gt; 를 . 경우 &lt;var&gt;BACK&lt;/var&gt; 가 동일 &lt;code&gt;TRUE&lt;/code&gt; , 가장 오른쪽 위치가 반환됩니다. &lt;var&gt;STRING&lt;/var&gt; 에서 &lt;var&gt;SET&lt;/var&gt; 문자를 찾지 못하면 결과는 0입니다.</target>
        </trans-unit>
        <trans-unit id="bae8289dac32f7049050111a508aa6d31f905b1e" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;BACK&lt;/var&gt; is either absent or equals &lt;code&gt;FALSE&lt;/code&gt;, this function returns the position of the leftmost character of &lt;var&gt;STRING&lt;/var&gt; that is not in &lt;var&gt;SET&lt;/var&gt;. If &lt;var&gt;BACK&lt;/var&gt; equals &lt;code&gt;TRUE&lt;/code&gt;, the rightmost position is returned. If all characters of &lt;var&gt;STRING&lt;/var&gt; are found in &lt;var&gt;SET&lt;/var&gt;, the result is zero.</source>
          <target state="translated">경우 &lt;var&gt;BACK&lt;/var&gt; 이 중 결석 또는 동일 &lt;code&gt;FALSE&lt;/code&gt; 를 ,이 기능의 가장 왼쪽 문자의 위치를 반환 &lt;var&gt;STRING&lt;/var&gt; 에없는 &lt;var&gt;SET&lt;/var&gt; 를 . 경우 &lt;var&gt;BACK&lt;/var&gt; 가 동일 &lt;code&gt;TRUE&lt;/code&gt; , 가장 오른쪽 위치가 반환됩니다. &lt;var&gt;STRING&lt;/var&gt; 의 모든 문자가 &lt;var&gt;SET&lt;/var&gt; 에서 발견 되면 결과는 0입니다.</target>
        </trans-unit>
        <trans-unit id="d7df80a1bc0f609e77a72dba0be99d71554ebf20" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;COMMAND&lt;/var&gt; is present, stores the entire command line that was used to invoke the program in &lt;var&gt;COMMAND&lt;/var&gt;. If &lt;var&gt;LENGTH&lt;/var&gt; is present, it is assigned the length of the command line. If &lt;var&gt;STATUS&lt;/var&gt; is present, it is assigned 0 upon success of the command, -1 if &lt;var&gt;COMMAND&lt;/var&gt; is too short to store the command line, or a positive value in case of an error.</source>
          <target state="translated">경우 &lt;var&gt;COMMAND&lt;/var&gt; 가 존재하고, 저장 프로그램의 호출에 사용 된 전체 커맨드 라인 &lt;var&gt;COMMAND&lt;/var&gt; . 경우 &lt;var&gt;LENGTH&lt;/var&gt; 존재하고, 명령 행의 길이를 할당됩니다. 경우 &lt;var&gt;STATUS&lt;/var&gt; 존재하고,이 명령의 성공시에 0을 할당하고, -1 경우 &lt;var&gt;COMMAND&lt;/var&gt; 은 커맨드 라인 또는 오류의 경우에는 양의 값을 저장하기에 너무 짧다.</target>
        </trans-unit>
        <trans-unit id="13adf8626c0c7a13cecf0100df54a2e72db93886" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;DIM&lt;/var&gt; is absent, a scalar with the bitwise ALL of all elements in &lt;var&gt;ARRAY&lt;/var&gt; is returned. Otherwise, an array of rank n-1, where n equals the rank of &lt;var&gt;ARRAY&lt;/var&gt;, and a shape similar to that of &lt;var&gt;ARRAY&lt;/var&gt; with dimension &lt;var&gt;DIM&lt;/var&gt; dropped is returned.</source>
          <target state="translated">경우 &lt;var&gt;DIM&lt;/var&gt; 이 존재하지 않는, 모든 요소의 비트 ALL와 스칼라 &lt;var&gt;ARRAY&lt;/var&gt; 반환됩니다. 그렇지 않으면 n이 &lt;var&gt;ARRAY&lt;/var&gt; 의 순위와 동일한 순위 n-1 의 &lt;var&gt;ARRAY&lt;/var&gt; 있고 차원 &lt;var&gt;DIM&lt;/var&gt; 이 삭제 된 ARRAY 와 유사한 모양 이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="1b4ceea29a6e978fd206476ab9b58f140c1867eb" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;DIM&lt;/var&gt; is absent, a scalar with the bitwise OR of all elements in &lt;var&gt;ARRAY&lt;/var&gt; is returned. Otherwise, an array of rank n-1, where n equals the rank of &lt;var&gt;ARRAY&lt;/var&gt;, and a shape similar to that of &lt;var&gt;ARRAY&lt;/var&gt; with dimension &lt;var&gt;DIM&lt;/var&gt; dropped is returned.</source>
          <target state="translated">경우 &lt;var&gt;DIM&lt;/var&gt; 은 결석의 비트와 OR의 모든 요소의 스칼라 &lt;var&gt;ARRAY&lt;/var&gt; 반환됩니다. 그렇지 않으면 n이 &lt;var&gt;ARRAY&lt;/var&gt; 의 순위와 동일한 순위 n-1 의 &lt;var&gt;ARRAY&lt;/var&gt; 있고 차원 &lt;var&gt;DIM&lt;/var&gt; 이 삭제 된 ARRAY 와 유사한 모양 이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="22ef142fb26214ffd98b0771af12aba00d6884e7" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;DIM&lt;/var&gt; is absent, a scalar with the bitwise XOR of all elements in &lt;var&gt;ARRAY&lt;/var&gt; is returned. Otherwise, an array of rank n-1, where n equals the rank of &lt;var&gt;ARRAY&lt;/var&gt;, and a shape similar to that of &lt;var&gt;ARRAY&lt;/var&gt; with dimension &lt;var&gt;DIM&lt;/var&gt; dropped is returned.</source>
          <target state="translated">경우 &lt;var&gt;DIM&lt;/var&gt; 이 존재하지 않는, 모든 요소의 비트 XOR와 스칼라 &lt;var&gt;ARRAY&lt;/var&gt; 반환됩니다. 그렇지 않으면 n이 &lt;var&gt;ARRAY&lt;/var&gt; 의 순위와 동일한 순위 n-1 의 &lt;var&gt;ARRAY&lt;/var&gt; 있고 차원 &lt;var&gt;DIM&lt;/var&gt; 이 삭제 된 ARRAY 와 유사한 모양 이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="3d101583ce24a5514b74d8e390a29aa99cdc4c16" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;DIM&lt;/var&gt; is absent, a scalar with the parity of all elements in &lt;var&gt;MASK&lt;/var&gt; is returned, i.e. true if an odd number of elements is &lt;code&gt;.true.&lt;/code&gt; and false otherwise. If &lt;var&gt;DIM&lt;/var&gt; is present, an array of rank &lt;em&gt;n-1&lt;/em&gt;, where &lt;em&gt;n&lt;/em&gt; equals the rank of &lt;var&gt;ARRAY&lt;/var&gt;, and a shape similar to that of &lt;var&gt;MASK&lt;/var&gt; with dimension &lt;var&gt;DIM&lt;/var&gt; dropped is returned.</source>
          <target state="translated">경우 &lt;var&gt;DIM&lt;/var&gt; 이 존재하지 않는, 모든 요소의 패리티 스칼라 &lt;var&gt;MASK&lt;/var&gt; , 반환되는 요소의 홀수 인 경우는 true, 즉 &lt;code&gt;.true.&lt;/code&gt; 그렇지 않으면 거짓. 경우 &lt;var&gt;DIM&lt;/var&gt; 이 존재하는 랭크의 배열을 &lt;em&gt;N-1&lt;/em&gt; , &lt;em&gt;N&lt;/em&gt; 의 랭크와 동일 &lt;var&gt;ARRAY&lt;/var&gt; 과 유사한, 및 형상 &lt;var&gt;MASK&lt;/var&gt; 치수 &lt;var&gt;DIM&lt;/var&gt; 은 반환 감소.</target>
        </trans-unit>
        <trans-unit id="1096dc661ae1572b58d2c6af2b9071f2c5fafaa4" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;DIM&lt;/var&gt; is absent, a scalar with the product of all elements in &lt;var&gt;ARRAY&lt;/var&gt; is returned. Otherwise, an array of rank n-1, where n equals the rank of &lt;var&gt;ARRAY&lt;/var&gt;, and a shape similar to that of &lt;var&gt;ARRAY&lt;/var&gt; with dimension &lt;var&gt;DIM&lt;/var&gt; dropped is returned.</source>
          <target state="translated">경우 &lt;var&gt;DIM&lt;/var&gt; 이 존재하지 않는, 모든 요소의 제품과 스칼라 &lt;var&gt;ARRAY&lt;/var&gt; 반환됩니다. 그렇지 않으면 n이 &lt;var&gt;ARRAY&lt;/var&gt; 의 순위와 동일한 순위 n-1 의 &lt;var&gt;ARRAY&lt;/var&gt; 있고 차원 &lt;var&gt;DIM&lt;/var&gt; 이 삭제 된 ARRAY 와 유사한 모양 이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="e541aaa7572f36229ceef42a43c656acea1e8bb9" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;DIM&lt;/var&gt; is absent, a scalar with the square root of the sum of all elements in &lt;var&gt;ARRAY&lt;/var&gt; squared is returned. Otherwise, an array of rank &lt;em&gt;n-1&lt;/em&gt;, where &lt;em&gt;n&lt;/em&gt; equals the rank of &lt;var&gt;ARRAY&lt;/var&gt;, and a shape similar to that of &lt;var&gt;ARRAY&lt;/var&gt; with dimension &lt;var&gt;DIM&lt;/var&gt; dropped is returned.</source>
          <target state="translated">경우 &lt;var&gt;DIM&lt;/var&gt; 이 존재하지 않는, 모든 요소의 합계의 제곱근와 스칼라 &lt;var&gt;ARRAY&lt;/var&gt; 반환됩니다 제곱. 그렇지 않으면, 랭크의 어레이 &lt;em&gt;N-1&lt;/em&gt; , &lt;em&gt;N은&lt;/em&gt; 의 랭크와 동일 &lt;var&gt;ARRAY&lt;/var&gt; 과 유사한 형상 &lt;var&gt;ARRAY&lt;/var&gt; 치수 &lt;var&gt;DIM&lt;/var&gt; 은 삭제가 반환된다.</target>
        </trans-unit>
        <trans-unit id="085958485125e81c5e61847bf66d0aee92f3dce0" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;DIM&lt;/var&gt; is absent, a scalar with the sum of all elements in &lt;var&gt;ARRAY&lt;/var&gt; is returned. Otherwise, an array of rank n-1, where n equals the rank of &lt;var&gt;ARRAY&lt;/var&gt;, and a shape similar to that of &lt;var&gt;ARRAY&lt;/var&gt; with dimension &lt;var&gt;DIM&lt;/var&gt; dropped is returned.</source>
          <target state="translated">경우 &lt;var&gt;DIM&lt;/var&gt; 은 존재하지 않고, 모든 요소의 합과 스칼라 &lt;var&gt;ARRAY&lt;/var&gt; 리턴한다. 그렇지 않으면 n이 &lt;var&gt;ARRAY&lt;/var&gt; 의 순위와 동일한 순위 n-1 의 &lt;var&gt;ARRAY&lt;/var&gt; 있고 차원 &lt;var&gt;DIM&lt;/var&gt; 이 삭제 된 ARRAY 와 유사한 모양 이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="b1a36d3e115cd67f113c82de10704b209833020f" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;DIM&lt;/var&gt; is absent, or if &lt;var&gt;ARRAY&lt;/var&gt; has a rank of one, the result is a scalar. If &lt;var&gt;DIM&lt;/var&gt; is present, the result is an array with a rank one less than the rank of &lt;var&gt;ARRAY&lt;/var&gt;, and a size corresponding to the size of &lt;var&gt;ARRAY&lt;/var&gt; with the &lt;var&gt;DIM&lt;/var&gt; dimension removed. In all cases, the result is of the same type and kind as &lt;var&gt;ARRAY&lt;/var&gt;.</source>
          <target state="translated">경우 &lt;var&gt;DIM&lt;/var&gt; 이 존재하지 않는 경우, 또는 &lt;var&gt;ARRAY&lt;/var&gt; 는 하나의 계급을 가지고, 결과는 스칼라이다. 경우 &lt;var&gt;DIM&lt;/var&gt; 이 존재하는, 결과의 순위보다 낮은 순위의 하나와 배열 &lt;var&gt;ARRAY&lt;/var&gt; 및 크기에 대응하는 크기 &lt;var&gt;ARRAY&lt;/var&gt; 와 &lt;var&gt;DIM&lt;/var&gt; 을 제거 차원. 모든 경우에 결과는 &lt;var&gt;ARRAY&lt;/var&gt; 와 동일한 유형 및 종류 입니다.</target>
        </trans-unit>
        <trans-unit id="f4f1740ce67b0a136c527b69e40e614512c47fef" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;DIM&lt;/var&gt; is absent, the result is a rank-one array with a length equal to the rank of &lt;var&gt;ARRAY&lt;/var&gt;. If &lt;var&gt;DIM&lt;/var&gt; is present, the result is an array with a rank one less than the rank of &lt;var&gt;ARRAY&lt;/var&gt;, and a size corresponding to the size of &lt;var&gt;ARRAY&lt;/var&gt; with the &lt;var&gt;DIM&lt;/var&gt; dimension removed. If &lt;var&gt;DIM&lt;/var&gt; is present and &lt;var&gt;ARRAY&lt;/var&gt; has a rank of one, the result is a scalar. In all cases, the result is of default &lt;code&gt;INTEGER&lt;/code&gt; type.</source>
          <target state="translated">경우 &lt;var&gt;DIM&lt;/var&gt; 은 존재하지 않고, 그 결과는 길이 랭크 온 어레이의 랭크와 동일 &lt;var&gt;ARRAY&lt;/var&gt; . 경우 &lt;var&gt;DIM&lt;/var&gt; 이 존재하는, 결과의 순위보다 낮은 순위의 하나와 배열 &lt;var&gt;ARRAY&lt;/var&gt; 및 크기에 대응하는 크기 &lt;var&gt;ARRAY&lt;/var&gt; 와 &lt;var&gt;DIM&lt;/var&gt; 을 제거 차원. 경우 &lt;var&gt;DIM&lt;/var&gt; 이 존재하고 &lt;var&gt;ARRAY&lt;/var&gt; 은 하나의 랭크를 가지며, 결과는 스칼라이다. 모든 경우에 결과는 기본 &lt;code&gt;INTEGER&lt;/code&gt; 유형입니다.</target>
        </trans-unit>
        <trans-unit id="e0a18fb7791cac7ccb5df0808e21080f7e3df672" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;MOLD&lt;/var&gt; is present, a disassociated pointer of the same type is returned, otherwise the type is determined by context.</source>
          <target state="translated">경우 &lt;var&gt;MOLD&lt;/var&gt; 가 존재하고, 동일한 종류의 해리 된 포인터는 달리 타입 문맥에 의해 결정되고, 리턴한다.</target>
        </trans-unit>
        <trans-unit id="4805ac2e7679668b17c230a50e5dfc8210b2a520" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;X&lt;/var&gt; and &lt;var&gt;Y&lt;/var&gt; are both of &lt;code&gt;INTEGER&lt;/code&gt; type, then the return value is of default &lt;code&gt;COMPLEX&lt;/code&gt; type.</source>
          <target state="translated">경우 &lt;var&gt;X&lt;/var&gt; 와 &lt;var&gt;Y&lt;/var&gt; 가 모두있는 &lt;code&gt;INTEGER&lt;/code&gt; 의 유형, 반환 값은 기본이다 &lt;code&gt;COMPLEX&lt;/code&gt; 유형입니다.</target>
        </trans-unit>
        <trans-unit id="3ea9f1af128bb03f13953367ac18efbca3384c44" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;X&lt;/var&gt; and &lt;var&gt;Y&lt;/var&gt; are of &lt;code&gt;REAL&lt;/code&gt; type, or one is of &lt;code&gt;REAL&lt;/code&gt; type and one is of &lt;code&gt;INTEGER&lt;/code&gt; type, then the return value is of &lt;code&gt;COMPLEX&lt;/code&gt; type with a kind equal to that of the &lt;code&gt;REAL&lt;/code&gt; argument with the highest precision.</source>
          <target state="translated">경우 &lt;var&gt;X&lt;/var&gt; 및 &lt;var&gt;Y&lt;/var&gt; 는 로되어 &lt;code&gt;REAL&lt;/code&gt; 유형 또는 하나이며 &lt;code&gt;REAL&lt;/code&gt; 유형 및 하나이며 &lt;code&gt;INTEGER&lt;/code&gt; 의 유형, 반환 값은이다 &lt;code&gt;COMPLEX&lt;/code&gt; 의 것과 종류 등호 형 &lt;code&gt;REAL&lt;/code&gt; 높은 정밀도 인수.</target>
        </trans-unit>
        <trans-unit id="ed01b8059b7d2ec0ef0fe711efed30b152aff6d3" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;result_image&lt;/var&gt; is nonzero, the data in the array descriptor &lt;var&gt;a&lt;/var&gt; on all images except of the specified one become undefined; hence, the library may make use of this.</source>
          <target state="translated">&lt;var&gt;result_image&lt;/var&gt; 가 0이 아닌 경우 , 지정된 배열 이미지를 제외한 모든 이미지 의 배열 디스크립터 &lt;var&gt;a&lt;/var&gt; 의 데이터는 정의되지 않습니다. 따라서, 라이브러리는 이것을 이용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ec421619945b96ecfab309ee14aa30ba12913726" translate="yes" xml:space="preserve">
          <source>If GNU Fortran invokes the preprocessor, &lt;code&gt;__GFORTRAN__&lt;/code&gt; is defined and &lt;code&gt;__GNUC__&lt;/code&gt;, &lt;code&gt;__GNUC_MINOR__&lt;/code&gt; and &lt;code&gt;__GNUC_PATCHLEVEL__&lt;/code&gt; can be used to determine the version of the compiler. See &lt;a href=&quot;http://gcc.gnu.org/onlinedocs/cpp/index.html#Top&quot;&gt;Overview&lt;/a&gt; in The C Preprocessor for details.</source>
          <target state="translated">GNU Fortran이 전처리기를 호출하면 &lt;code&gt;__GFORTRAN__&lt;/code&gt; 이 정의되고 &lt;code&gt;__GNUC__&lt;/code&gt; , &lt;code&gt;__GNUC_MINOR__&lt;/code&gt; 및 &lt;code&gt;__GNUC_PATCHLEVEL__&lt;/code&gt; 을 사용하여 컴파일러 버전을 확인할 수 있습니다. 자세한 내용 은 C 전 처리기 &lt;a href=&quot;http://gcc.gnu.org/onlinedocs/cpp/index.html#Top&quot;&gt;개요&lt;/a&gt; 를 참조 하십시오.</target>
        </trans-unit>
        <trans-unit id="8aa49cf1f64e48996c1d0a0273207fed8e566fab" translate="yes" xml:space="preserve">
          <source>If a pointer is a dummy-argument of an interoperable procedure, it usually has to be declared using the &lt;code&gt;VALUE&lt;/code&gt; attribute. &lt;code&gt;void*&lt;/code&gt; matches &lt;code&gt;TYPE(C_PTR), VALUE&lt;/code&gt;, while &lt;code&gt;TYPE(C_PTR)&lt;/code&gt; alone matches &lt;code&gt;void**&lt;/code&gt;.</source>
          <target state="translated">포인터가 상호 운용 가능한 프로 시저의 더미 인수 인 경우 일반적으로 &lt;code&gt;VALUE&lt;/code&gt; 속성을 사용하여 선언해야 합니다. &lt;code&gt;void*&lt;/code&gt; 는 &lt;code&gt;TYPE(C_PTR), VALUE&lt;/code&gt; 와 일치 하지만 &lt;code&gt;TYPE(C_PTR)&lt;/code&gt; 만으로는 &lt;code&gt;void**&lt;/code&gt; 와 일치 합니다.</target>
        </trans-unit>
        <trans-unit id="270a49439209ea4b63b930a85c8327c687f86bee" translate="yes" xml:space="preserve">
          <source>If a pointer is declared with a kind that is too small, the compiler will issue a warning; the resulting binary will probably not work correctly, because the memory addresses stored in the pointers may be truncated. It is safer to omit the first line of the above example; if explicit declaration of ipt&amp;rsquo;s type is omitted, then the compiler will ensure that ipt is an integer variable large enough to hold a pointer.</source>
          <target state="translated">포인터가 너무 작은 종류로 선언되면 컴파일러는 경고를 발행합니다. 포인터에 저장된 메모리 주소가 잘릴 수 있으므로 결과 바이너리가 제대로 작동하지 않을 수 있습니다. 위 예제의 첫 번째 줄을 생략하는 것이 더 안전합니다. ipt 유형의 명시 적 선언이 생략되면 컴파일러는 ipt가 포인터를 보유 할만큼 큰 정수 변수인지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="6205b51ec116d6f29ddbd7526e78389a57a9fe3f" translate="yes" xml:space="preserve">
          <source>If a preprocessed file includes another file with the Fortran &lt;code&gt;INCLUDE&lt;/code&gt; statement, the included file is not preprocessed. To preprocess included files, use the equivalent preprocessor statement &lt;code&gt;#include&lt;/code&gt;.</source>
          <target state="translated">사전 처리 된 파일에 Fortran &lt;code&gt;INCLUDE&lt;/code&gt; 문 이있는 다른 파일 이 포함 된 경우 포함 된 파일은 사전 처리되지 않습니다. 포함 된 파일을 사전 처리하려면 동등한 사전 처리기 명령문 &lt;code&gt;#include&lt;/code&gt; 를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="c793038d857dfcf448d3d50ee18a082670440f84" translate="yes" xml:space="preserve">
          <source>If a symbolic link was connected, using the &lt;code&gt;CLOSE&lt;/code&gt; statement with a &lt;code&gt;STATUS=&quot;DELETE&quot;&lt;/code&gt; specifier will cause the symbolic link itself to be deleted, not its target.</source>
          <target state="translated">기호 링크가 연결된 경우 &lt;code&gt;STATUS=&quot;DELETE&quot;&lt;/code&gt; 지정자 와 함께 &lt;code&gt;CLOSE&lt;/code&gt; 문을 사용 하면 기호 링크 자체가 대상이 아닌 삭제됩니다.</target>
        </trans-unit>
        <trans-unit id="66ba08c3e137747457bc54e1306f43a80741fb66" translate="yes" xml:space="preserve">
          <source>If a time source is available, time will be reported with microsecond resolution. If no time source is available, &lt;var&gt;TIME&lt;/var&gt; is set to &lt;code&gt;-1.0&lt;/code&gt;.</source>
          <target state="translated">시간 소스가 사용 가능한 경우 시간은 마이크로 초 해상도로보고됩니다. 사용 가능한 시간 소스가 없으면 &lt;var&gt;TIME&lt;/var&gt; 은 &lt;code&gt;-1.0&lt;/code&gt; 으로 설정됩니다 .</target>
        </trans-unit>
        <trans-unit id="79ee220669dde56b667d0f418ae2f46bd9f4b8b8" translate="yes" xml:space="preserve">
          <source>If either &lt;var&gt;I&lt;/var&gt; or &lt;var&gt;J&lt;/var&gt; is a BOZ constant, it is first converted as if by the intrinsic function &lt;code&gt;INT&lt;/code&gt; to an integer type with the kind type parameter of the other.</source>
          <target state="translated">어느 경우에 &lt;var&gt;I&lt;/var&gt; 또는 &lt;var&gt;J&lt;/var&gt; 는 BOZ 상수이며, 이는 첫번째 고유 함수로 변환되는 것처럼 &lt;code&gt;INT&lt;/code&gt; 다른 종류의 입력 매개 변수로 정수 타입.</target>
        </trans-unit>
        <trans-unit id="37a5117e34644f5490394288d1874142b1127534" translate="yes" xml:space="preserve">
          <source>If non zero, enable backtracing on run-time errors. Default: off. (Default in the compiler: on.) Note: Installs a signal handler and requires command-line initialization using &lt;code&gt;_gfortran_set_args&lt;/code&gt;.</source>
          <target state="translated">0이 아닌 경우 런타임 오류시 역 추적을 사용하십시오. 기본값 : 꺼짐. (컴파일러의 기본값 : on) 참고 : 신호 핸들러를 설치하고 &lt;code&gt;_gfortran_set_args&lt;/code&gt; 를 사용하여 명령 행 초기화가 필요합니다 .</target>
        </trans-unit>
        <trans-unit id="2945b1104d38ee16308682eb39eb3ad0261b75c3" translate="yes" xml:space="preserve">
          <source>If non zero, enable pedantic checking. Default: off.</source>
          <target state="translated">0이 아닌 경우, Pedantic Check를 활성화하십시오. 기본값 : 꺼짐.</target>
        </trans-unit>
        <trans-unit id="9b7de549d64b0928d2f0858914503089586d959e" translate="yes" xml:space="preserve">
          <source>If non zero, supports signed zeros. Default: enabled.</source>
          <target state="translated">0이 아닌 경우 부호있는 0을 지원합니다. 기본값 : 활성화</target>
        </trans-unit>
        <trans-unit id="e83981aa8f04d54ca9a7287dcf1ccff28136904a" translate="yes" xml:space="preserve">
          <source>If that fails, generate an error</source>
          <target state="translated">실패하면 오류를 생성하십시오</target>
        </trans-unit>
        <trans-unit id="9fba7a91976192b8b2868a06f508fa60d8679649" translate="yes" xml:space="preserve">
          <source>If that fails, try to open with &lt;code&gt;ACTION='READ'&lt;/code&gt;</source>
          <target state="translated">실패하면 &lt;code&gt;ACTION='READ'&lt;/code&gt; 로 열어보십시오.</target>
        </trans-unit>
        <trans-unit id="2800c2a21007bee3dec3060323c68f5f6fb06466" translate="yes" xml:space="preserve">
          <source>If that fails, try to open with &lt;code&gt;ACTION='WRITE'&lt;/code&gt;</source>
          <target state="translated">실패하면 &lt;code&gt;ACTION='WRITE'&lt;/code&gt; 로 열어보십시오.</target>
        </trans-unit>
        <trans-unit id="1b48081916ed179b6e4ad6819d5cce35a6e4a467" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;GFORTRAN_ERROR_BACKTRACE&lt;/code&gt; variable is set to &amp;lsquo;</source>
          <target state="translated">는 IF &lt;code&gt;GFORTRAN_ERROR_BACKTRACE&lt;/code&gt; 의 변수 '로 설정</target>
        </trans-unit>
        <trans-unit id="d3136adbb3394d43aa3bb33236016421d44a4d0d" translate="yes" xml:space="preserve">
          <source>If the Fortran intrinsic &lt;code&gt;this_image&lt;/code&gt; is invoked without an argument, which is the only permitted form in Fortran 2008, GCC passes &lt;code&gt;0&lt;/code&gt; as first argument.</source>
          <target state="translated">Fortran 내장 함수 &lt;code&gt;this_image&lt;/code&gt; 가 Fortran 2008에서 유일하게 허용되는 형식 인 인수없이 호출 된 경우 GCC는 &lt;code&gt;0&lt;/code&gt; 을 첫 번째 인수로 전달합니다.</target>
        </trans-unit>
        <trans-unit id="c95ebf758f9ca85c34e73f3d6fad26c666242086" translate="yes" xml:space="preserve">
          <source>If the arguments are numeric, the return value is a scalar of numeric type, &lt;code&gt;INTEGER&lt;/code&gt;, &lt;code&gt;REAL&lt;/code&gt;, or &lt;code&gt;COMPLEX&lt;/code&gt;. If the arguments are &lt;code&gt;LOGICAL&lt;/code&gt;, the return value is &lt;code&gt;.TRUE.&lt;/code&gt; or &lt;code&gt;.FALSE.&lt;/code&gt;.</source>
          <target state="translated">인수가 숫자 인 경우 리턴 값은 숫자 유형, &lt;code&gt;INTEGER&lt;/code&gt; , &lt;code&gt;REAL&lt;/code&gt; 또는 &lt;code&gt;COMPLEX&lt;/code&gt; 의 스칼라입니다 . 인수가 &lt;code&gt;LOGICAL&lt;/code&gt; 인 경우 리턴 값은 &lt;code&gt;.TRUE.&lt;/code&gt; 또는 &lt;code&gt;.FALSE.&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f054ca8be9a9d0c72b5ae2769d8b45202fa48433" translate="yes" xml:space="preserve">
          <source>If the bitwise representation of the result is longer than that of &lt;var&gt;SOURCE&lt;/var&gt;, then the leading bits of the result correspond to those of &lt;var&gt;SOURCE&lt;/var&gt; and any trailing bits are filled arbitrarily.</source>
          <target state="translated">결과의 비트 단위 표시가 &lt;var&gt;SOURCE&lt;/var&gt; 의 비트 단위 표시보다 길면 결과 의 선행 비트가 &lt;var&gt;SOURCE&lt;/var&gt; 의 비트와 일치하고 후행 비트가 임의로 채워집니다.</target>
        </trans-unit>
        <trans-unit id="120422193be3b2c04c10d49efe55d47b3f1c3932" translate="yes" xml:space="preserve">
          <source>If the first letter is &amp;lsquo;</source>
          <target state="translated">첫 글자가 '</target>
        </trans-unit>
        <trans-unit id="e72db38f13efda499fee4edb330453697f0c69f6" translate="yes" xml:space="preserve">
          <source>If the rank of &lt;var&gt;MASK&lt;/var&gt; is one, then &lt;code&gt;ALL(MASK,DIM)&lt;/code&gt; is equivalent to &lt;code&gt;ALL(MASK)&lt;/code&gt;. If the rank is greater than one, then &lt;code&gt;ALL(MASK,DIM)&lt;/code&gt; is determined by applying &lt;code&gt;ALL&lt;/code&gt; to the array sections.</source>
          <target state="translated">&lt;var&gt;MASK&lt;/var&gt; 의 순위 가 1이면 &lt;code&gt;ALL(MASK,DIM)&lt;/code&gt; 은 &lt;code&gt;ALL(MASK)&lt;/code&gt; 와 같습니다 . 순위가 1보다 크면 &lt;code&gt;ALL&lt;/code&gt; 을 배열 섹션 에 적용하여 ALL &lt;code&gt;ALL(MASK,DIM)&lt;/code&gt; 을 결정 합니다.</target>
        </trans-unit>
        <trans-unit id="edabf5693136a93d948b4ff56cf046859238c8b6" translate="yes" xml:space="preserve">
          <source>If the rank of &lt;var&gt;MASK&lt;/var&gt; is one, then &lt;code&gt;ANY(MASK,DIM)&lt;/code&gt; is equivalent to &lt;code&gt;ANY(MASK)&lt;/code&gt;. If the rank is greater than one, then &lt;code&gt;ANY(MASK,DIM)&lt;/code&gt; is determined by applying &lt;code&gt;ANY&lt;/code&gt; to the array sections.</source>
          <target state="translated">&lt;var&gt;MASK&lt;/var&gt; 의 순위 가 1이면 &lt;code&gt;ANY(MASK,DIM)&lt;/code&gt; 은 &lt;code&gt;ANY(MASK)&lt;/code&gt; 와 같습니다 . 순위가 1보다 크면 배열 섹션에 &lt;code&gt;ANY&lt;/code&gt; 를 적용하여 ANY &lt;code&gt;ANY(MASK,DIM)&lt;/code&gt; 을 결정 합니다.</target>
        </trans-unit>
        <trans-unit id="f8d64d94a276b7efd6a450976fd76d81f4734d91" translate="yes" xml:space="preserve">
          <source>If there is no clock, or querying the clock fails, &lt;var&gt;COUNT&lt;/var&gt; is set to &lt;code&gt;-HUGE(COUNT)&lt;/code&gt;, and &lt;var&gt;COUNT_RATE&lt;/var&gt; and &lt;var&gt;COUNT_MAX&lt;/var&gt; are set to zero.</source>
          <target state="translated">시계가 없거나 시계 쿼리에 실패하면 &lt;var&gt;COUNT&lt;/var&gt; 는 &lt;code&gt;-HUGE(COUNT)&lt;/code&gt; 로 설정 되고 &lt;var&gt;COUNT_RATE&lt;/var&gt; 및 &lt;var&gt;COUNT_MAX&lt;/var&gt; 는 0으로 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="0aee4afea693faf480212e1e7dfd95c798d52751" translate="yes" xml:space="preserve">
          <source>If you are invoking the preprocessor from a shell or shell-like program you may need to use the shell&amp;rsquo;s quoting syntax to protect characters such as spaces that have a meaning in the shell syntax.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfd8030eb2edd0056e23821b85e42b891e989a80" translate="yes" xml:space="preserve">
          <source>If you wish to define a function-like macro on the command line, write its argument list with surrounding parentheses before the equals sign (if any). Parentheses are meaningful to most shells, so you will need to quote the option. With sh and csh, &lt;code&gt;-D'name(args...)=definition'&lt;/code&gt; works.</source>
          <target state="translated">명령 행에서 함수와 유사한 매크로를 정의하려면 등호 (있는 경우) 앞에 주변 괄호로 인수 목록을 작성하십시오. 괄호는 대부분의 셸에 의미가 있으므로 옵션을 인용해야합니다. sh와 csh를 사용하면 &lt;code&gt;-D'name(args...)=definition'&lt;/code&gt; 작동합니다.</target>
        </trans-unit>
        <trans-unit id="04ca06c25e3b103a5def6afd489b6cd7d559af0e" translate="yes" xml:space="preserve">
          <source>If your &lt;code&gt;PROGRAM&lt;/code&gt; is compiled with GNU Fortran, you shall not call any of the following functions. The libgfortran initialization functions are shown in C syntax but using C bindings they are also accessible from Fortran.</source>
          <target state="translated">귀하의 경우 &lt;code&gt;PROGRAM&lt;/code&gt; GNU 포트란 컴파일, 다음과 같은 함수를 호출 할 수 없다. libgfortran 초기화 함수는 C 구문으로 표시되지만 C 바인딩을 사용하면 Fortran에서도 액세스 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7b7811944597dfb197f92017300fe575c1e6d8fa" translate="yes" xml:space="preserve">
          <source>Imaginary part of complex number</source>
          <target state="translated">복소수의 허수 부</target>
        </trans-unit>
        <trans-unit id="d40989c1b3476144c255ec4259eba3ce2da510bc" translate="yes" xml:space="preserve">
          <source>In Fortran 95, &lt;var&gt;MOLD&lt;/var&gt; is optional. Please note that Fortran 2003 includes cases where it is required.</source>
          <target state="translated">Fortran 95에서 &lt;var&gt;MOLD&lt;/var&gt; 는 선택 사항입니다. Fortran 2003에는 필요한 경우가 포함되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="69ccc0ad4a795443852d0414bea4f450fb98e45b" translate="yes" xml:space="preserve">
          <source>In addition to the integer named constants required by the Fortran 2003 standard and &lt;code&gt;C_PTRDIFF_T&lt;/code&gt; of TS 29113, GNU Fortran provides as an extension named constants for the 128-bit integer types supported by the C compiler: &lt;code&gt;C_INT128_T, C_INT_LEAST128_T, C_INT_FAST128_T&lt;/code&gt;. Furthermore, if &lt;code&gt;__float128&lt;/code&gt; is supported in C, the named constants &lt;code&gt;C_FLOAT128, C_FLOAT128_COMPLEX&lt;/code&gt; are defined.</source>
          <target state="translated">Fortran 2003 표준 및 TS 29113의 &lt;code&gt;C_PTRDIFF_T&lt;/code&gt; 에 필요한 정수라는 정수 외에도 GNU Fortran은 C 컴파일러에서 지원하는 128 비트 정수 유형에 대한 상수라는 확장명을 제공합니다 : &lt;code&gt;C_INT128_T, C_INT_LEAST128_T, C_INT_FAST128_T&lt;/code&gt; . 또한 C에서 &lt;code&gt;__float128&lt;/code&gt; 이 지원되는 경우 명명 된 상수 &lt;code&gt;C_FLOAT128, C_FLOAT128_COMPLEX&lt;/code&gt; 가 정의됩니다.</target>
        </trans-unit>
        <trans-unit id="fdf9ec6ed309890d53d99fc78359f555c5651364" translate="yes" xml:space="preserve">
          <source>In addition to the side-effects of the</source>
          <target state="translated">의 부작용 외에도</target>
        </trans-unit>
        <trans-unit id="e4c83bd1a6109e6237ea72a8009a77256465b5c9" translate="yes" xml:space="preserve">
          <source>In either syntax, &lt;var&gt;NAME&lt;/var&gt; is set to the current hostname if it can be obtained, or to a blank string otherwise.</source>
          <target state="translated">어느 구문에서나 &lt;var&gt;NAME&lt;/var&gt; 은 현재 호스트 이름을 얻을 수 있으면 현재 호스트 이름 으로 설정되고 그렇지 않으면 빈 문자열로 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="4b3f7f2c6a27fb95424a533185943a79976b344b" translate="yes" xml:space="preserve">
          <source>In either syntax, &lt;var&gt;OFFSET&lt;/var&gt; is set to the current offset of unit number &lt;var&gt;UNIT&lt;/var&gt;, or to &lt;em&gt;-1&lt;/em&gt; if the unit is not currently open.</source>
          <target state="translated">어느 구문에서나, &lt;var&gt;OFFSET&lt;/var&gt; 은 장치 번호 &lt;var&gt;UNIT&lt;/var&gt; 의 현재 오프셋으로 설정 되거나 장치가 현재 열려 있지 않으면 &lt;em&gt;-1로 설정&lt;/em&gt; 됩니다.</target>
        </trans-unit>
        <trans-unit id="0fecffd6b5f755444307eb28961141e31a1c766b" translate="yes" xml:space="preserve">
          <source>In either syntax, &lt;var&gt;STATUS&lt;/var&gt; is set to &lt;code&gt;0&lt;/code&gt; on success and nonzero otherwise.</source>
          <target state="translated">어느 구문에서나 &lt;var&gt;STATUS&lt;/var&gt; 는 성공 하면 &lt;code&gt;0&lt;/code&gt; 으로 설정되고 그렇지 않으면 0이 아닌 값 으로 설정됩니다 .</target>
        </trans-unit>
        <trans-unit id="b8ad9b22c36e0a0cc1ddbb6f42678f53e869cab4" translate="yes" xml:space="preserve">
          <source>In either syntax, &lt;var&gt;TIME&lt;/var&gt; is set to the process&amp;rsquo;s current runtime in seconds.</source>
          <target state="translated">두 구문 중 하나에서 &lt;var&gt;TIME&lt;/var&gt; 은 초 단위로 프로세스의 현재 런타임으로 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="2e6aed1d78f88e9d18636b5643ba18fedb3a8d16" translate="yes" xml:space="preserve">
          <source>In future versions of GNU Fortran we hope to improve naming and linking issues so that debugging always involves using the names as they appear in the source, even if the names as seen by the linker are mangled to prevent accidental linking between procedures with incompatible interfaces.</source>
          <target state="translated">GNU Fortran의 향후 버전에서는 이름 지정 및 연결 문제를 개선하여 링커에서 표시되는 이름이 호환되지 않는 인터페이스를 가진 프로 시저간에 우연히 연결되는 것을 방지하기 위해 소스에 표시되는 이름을 사용하여 디버깅하는 것이 항상 필요합니다.</target>
        </trans-unit>
        <trans-unit id="682aa0385ff59c7e7f0df2e399b34d89bb84d37e" translate="yes" xml:space="preserve">
          <source>In general only one process may hold an exclusive (write) lock for a given file at a time, whereas many processes may hold shared (read) locks for the same file.</source>
          <target state="translated">일반적으로 한 프로세스는 한 번에 한 파일에 대해 독점 (쓰기) 잠금을 보유 할 수있는 반면, 많은 프로세스는 동일한 파일에 대해 공유 (읽기) 잠금을 보유 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="11733b5bf581b466263165d87641395f955cea01" translate="yes" xml:space="preserve">
          <source>In general, Hollerith constants were used to provide a rudimentary facility for handling character strings in early Fortran compilers, prior to the introduction of &lt;code&gt;CHARACTER&lt;/code&gt; variables in Fortran 77; in those cases, the standard-compliant equivalent is to convert the program to use proper character strings. On occasion, there may be a case where the intent is specifically to initialize a numeric variable with a given byte sequence. In these cases, the same result can be obtained by using the &lt;code&gt;TRANSFER&lt;/code&gt; statement, as in this example.</source>
          <target state="translated">일반적으로 Hollerith 상수는 Fortran 77에서 &lt;code&gt;CHARACTER&lt;/code&gt; 변수를 도입하기 전에 초기 Fortran 컴파일러에서 문자열을 처리하기위한 기초 기능을 제공하는 데 사용되었습니다 . 이 경우 표준 호환 기능은 적절한 문자열을 사용하도록 프로그램을 변환하는 것입니다. 때로는 주어진 바이트 시퀀스로 숫자 변수를 초기화하려는 의도가있을 수 있습니다. 이 경우, 이 예에서와 같이 &lt;code&gt;TRANSFER&lt;/code&gt; 문 을 사용하여 동일한 결과를 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="3005d2a5b0048e9a66797ab9dd31951081c4bfcb" translate="yes" xml:space="preserve">
          <source>In general, the lexical comparison intrinsics &lt;code&gt;LGE&lt;/code&gt;, &lt;code&gt;LGT&lt;/code&gt;, &lt;code&gt;LLE&lt;/code&gt;, and &lt;code&gt;LLT&lt;/code&gt; differ from the corresponding intrinsic operators &lt;code&gt;.GE.&lt;/code&gt;, &lt;code&gt;.GT.&lt;/code&gt;, &lt;code&gt;.LE.&lt;/code&gt;, and &lt;code&gt;.LT.&lt;/code&gt;, in that the latter use the processor&amp;rsquo;s character ordering (which is not ASCII on some targets), whereas the former always use the ASCII ordering.</source>
          <target state="translated">일반적으로 어휘 비교 내장 함수 &lt;code&gt;LGE&lt;/code&gt; , &lt;code&gt;LGT&lt;/code&gt; , &lt;code&gt;LLE&lt;/code&gt; 및 &lt;code&gt;LLT&lt;/code&gt; 는 해당 내장 연산자와 &lt;code&gt;.GE.&lt;/code&gt; , &lt;code&gt;.GT.&lt;/code&gt; , &lt;code&gt;.LE.&lt;/code&gt; 및 &lt;code&gt;.LT.&lt;/code&gt; 후자는 프로세서의 문자 순서 (일부 대상에서는 ASCII가 아님)를 사용하는 반면, 전자는 항상 ASCII 순서를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="0dab67ef81fbc2cf5b532bcced05c8d632840eeb" translate="yes" xml:space="preserve">
          <source>In many cases, record structures can easily be converted to derived types. To convert, replace &lt;code&gt;STRUCTURE /&lt;/code&gt;&lt;var&gt;structure-name&lt;/var&gt;&lt;code&gt;/&lt;/code&gt; by &lt;code&gt;TYPE&lt;/code&gt;&lt;var&gt;type-name&lt;/var&gt;. Additionally, replace &lt;code&gt;RECORD /&lt;/code&gt;&lt;var&gt;structure-name&lt;/var&gt;&lt;code&gt;/&lt;/code&gt; by &lt;code&gt;TYPE(&lt;/code&gt;&lt;var&gt;type-name&lt;/var&gt;&lt;code&gt;)&lt;/code&gt;. Finally, in the component access, replace the period (&lt;code&gt;.&lt;/code&gt;) by the percent sign (&lt;code&gt;%&lt;/code&gt;).</source>
          <target state="translated">대부분의 경우 레코드 구조를 파생 유형으로 쉽게 변환 할 수 있습니다. 변환하려면 &lt;code&gt;STRUCTURE /&lt;/code&gt; &lt;var&gt;structure-name&lt;/var&gt; &lt;code&gt;/&lt;/code&gt; 을 &lt;code&gt;TYPE&lt;/code&gt; &lt;var&gt;type-name&lt;/var&gt; 으로 바꾸십시오 . 또한 &lt;code&gt;RECORD /&lt;/code&gt; &lt;var&gt;structure-name&lt;/var&gt; &lt;code&gt;/&lt;/code&gt; 을 &lt;code&gt;TYPE(&lt;/code&gt; &lt;var&gt;type-name&lt;/var&gt; &lt;code&gt;)&lt;/code&gt; 로 바꾸십시오 . 마지막으로 구성 요소 액세스에서 마침표 ( &lt;code&gt;.&lt;/code&gt; )를 백분율 기호 ( &lt;code&gt;%&lt;/code&gt; )로 바꿉니다 .</target>
        </trans-unit>
        <trans-unit id="0648491e382f18999a2f067315445f7ebaa0939e" translate="yes" xml:space="preserve">
          <source>In order to ensure that exactly the same variable type and kind is used in C and Fortran, the named constants shall be used which are defined in the &lt;code&gt;ISO_C_BINDING&lt;/code&gt; intrinsic module. That module contains named constants for kind parameters and character named constants for the escape sequences in C. For a list of the constants, see &lt;a href=&quot;iso_005fc_005fbinding#ISO_005fC_005fBINDING&quot;&gt;ISO_C_BINDING&lt;/a&gt;.</source>
          <target state="translated">C와 Fortran에서 정확히 동일한 변수 유형과 종류가 사용되도록하려면 &lt;code&gt;ISO_C_BINDING&lt;/code&gt; 내장 모듈에 정의 된 명명 된 상수를 사용해야 합니다. 이 모듈에는 C의 이스케이프 시퀀스에 대한 종류 매개 변수에 대한 명명 된 상수와 문자 명명 된 상수가 포함되어 있습니다. 상수 목록은 &lt;a href=&quot;iso_005fc_005fbinding#ISO_005fC_005fBINDING&quot;&gt;ISO_C_BINDING을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="4dded5a37175f7ffa40d2521119b83926ef80ecd" translate="yes" xml:space="preserve">
          <source>In pointer assignments, the lower bound may be specified and the remapping of elements is supported.</source>
          <target state="translated">포인터 할당에서 하한을 지정할 수 있으며 요소 재 매핑이 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="9a9554f88847fea6ab90bea5802c11697f7a3ee0" translate="yes" xml:space="preserve">
          <source>In some cases, options have positive and negative forms; the negative form of</source>
          <target state="translated">어떤 경우에는 옵션이 긍정적이고 부정적인 형태를 가지고 있습니다. 부정적인 형태</target>
        </trans-unit>
        <trans-unit id="5149b1ed084672c9ec0ec3353aaacbfdf41bfffe" translate="yes" xml:space="preserve">
          <source>In some circumstances GNU Fortran may pass assumed shape array sections via a descriptor describing a noncontiguous area of memory. This option adds code to the function prologue to repack the data into a contiguous block at runtime.</source>
          <target state="translated">일부 상황에서 GNU Fortran은 비 연속 메모리 영역을 설명하는 설명자를 통해 가정 된 모양 배열 섹션을 전달할 수 있습니다. 이 옵션은 코드를 함수 프롤로그에 추가하여 런타임시 데이터를 연속 블록으로 재 포장합니다.</target>
        </trans-unit>
        <trans-unit id="c8eb6455f16b20593f90d24237c6bdb4520e28e5" translate="yes" xml:space="preserve">
          <source>In structure constructors the components with default values may be omitted.</source>
          <target state="translated">구조 생성자에서 기본값을 가진 구성 요소는 생략 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="537abfab462914e4757b57a352ae0dc7b793564b" translate="yes" xml:space="preserve">
          <source>In this example, compiled with</source>
          <target state="translated">이 예제에서</target>
        </trans-unit>
        <trans-unit id="07cb31bca62cff4f95743e6b79af3ba46e72cb14" translate="yes" xml:space="preserve">
          <source>Increment the event count of the specified event variable.</source>
          <target state="translated">지정된 이벤트 변수의 이벤트 수를 늘리십시오.</target>
        </trans-unit>
        <trans-unit id="855a2a17b0fbf5528e545bca722f90e661449c08" translate="yes" xml:space="preserve">
          <source>Index of command line options</source>
          <target state="translated">명령 행 옵션 색인</target>
        </trans-unit>
        <trans-unit id="a03606ae3e04c28dd8c3c995889f8b3280710d0b" translate="yes" xml:space="preserve">
          <source>Index of concepts</source>
          <target state="translated">개념 색인</target>
        </trans-unit>
        <trans-unit id="1e7d43666bf3b2650dba2a9f64e77713b2ac49b8" translate="yes" xml:space="preserve">
          <source>Index of the last non-blank character in a string</source>
          <target state="translated">문자열에서 공백이 아닌 마지막 문자의 색인</target>
        </trans-unit>
        <trans-unit id="258d5665915eb737b3ffa288907ee3cb5379cc4b" translate="yes" xml:space="preserve">
          <source>Indicates which kind of coarray variable should be registered.</source>
          <target state="translated">어떤 종류의 coarray 변수를 등록해야하는지 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="c983db075023d5087854377ceb7219b72a057430" translate="yes" xml:space="preserve">
          <source>Influencing runtime behavior</source>
          <target state="translated">런타임 동작에 영향</target>
        </trans-unit>
        <trans-unit id="15bf912f9b96901bc25e2e28741483df5743f6b9" translate="yes" xml:space="preserve">
          <source>Influencing runtime behavior with environment variables</source>
          <target state="translated">환경 변수와 런타임 동작에 영향</target>
        </trans-unit>
        <trans-unit id="59028ca14e0c6d288c6a052d5a2dc42f08c39212" translate="yes" xml:space="preserve">
          <source>Influencing runtime behavior with environment variables.</source>
          <target state="translated">환경 변수와 런타임 동작에 영향을줍니다.</target>
        </trans-unit>
        <trans-unit id="089379f644d0a2e54c077a56eb6a1c0b62673e19" translate="yes" xml:space="preserve">
          <source>Influencing the linking step</source>
          <target state="translated">연결 단계에 영향을 미침</target>
        </trans-unit>
        <trans-unit id="080f1e9a6e2cab41869cd5a7281f008e51e71667" translate="yes" xml:space="preserve">
          <source>Inhibit generation of linemarkers in the output from the preprocessor. This might be useful when running the preprocessor on something that is not C code, and will be sent to a program which might be confused by the linemarkers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fcc5e3d617d6c17c77a1d953cf2728b24751cbd6" translate="yes" xml:space="preserve">
          <source>Initialiation function</source>
          <target state="translated">초기화 기능</target>
        </trans-unit>
        <trans-unit id="2e0396835aa69623283cf8c4d5a3fce0a28e42a9" translate="yes" xml:space="preserve">
          <source>Initialize a pseudo-random number sequence</source>
          <target state="translated">의사 난수 시퀀스 초기화</target>
        </trans-unit>
        <trans-unit id="18969234f3dbfdf448abc9f07e07414d5833db11" translate="yes" xml:space="preserve">
          <source>Inode number</source>
          <target state="translated">아이 노드 번호</target>
        </trans-unit>
        <trans-unit id="5f5fc3d18458465ac674c7631652c1c7d2ce08bb" translate="yes" xml:space="preserve">
          <source>Inquiry function</source>
          <target state="translated">문의 기능</target>
        </trans-unit>
        <trans-unit id="3d6c75cbc521feb99c6a7347bc090e5a414d216e" translate="yes" xml:space="preserve">
          <source>Inquiry function of the module &lt;code&gt;ISO_C_BINDING&lt;/code&gt;</source>
          <target state="translated">모듈 &lt;code&gt;ISO_C_BINDING&lt;/code&gt; 의 조회 기능</target>
        </trans-unit>
        <trans-unit id="6fa1284a63ab352b7adb7730845c2d60f9ec8c81" translate="yes" xml:space="preserve">
          <source>Inquiry function of the module &lt;code&gt;ISO_FORTRAN_ENV&lt;/code&gt;</source>
          <target state="translated">모듈 &lt;code&gt;ISO_FORTRAN_ENV&lt;/code&gt; 의 조회 기능</target>
        </trans-unit>
        <trans-unit id="8d347b78eae1040e6c2e3af8a81eff39ce7c4ba4" translate="yes" xml:space="preserve">
          <source>Inquiry function.</source>
          <target state="translated">문의 기능.</target>
        </trans-unit>
        <trans-unit id="b467d38e8e8ec401f7e3d3e5fbc380b0606c24eb" translate="yes" xml:space="preserve">
          <source>Instead of the normal output, generate a list of &lt;code&gt;'#define'&lt;/code&gt; directives for all the macros defined during the execution of the preprocessor, including predefined macros. This gives you a way of finding out what is predefined in your version of the preprocessor. Assuming you have no file</source>
          <target state="translated">일반 출력 대신 사전 정의 된 매크로를 포함하여 전 처리기 실행 중에 정의 된 모든 매크로에 대해 &lt;code&gt;'#define'&lt;/code&gt; 지시문 목록을 생성하십시오 . 이를 통해 사용중인 프리 프로세서 버전에서 사전 정의 된 사항을 찾을 수 있습니다. 파일이 없다고 가정</target>
        </trans-unit>
        <trans-unit id="82abf44d41a7eb36ed7fbb8dd6051e4b232d0eb7" translate="yes" xml:space="preserve">
          <source>Integer ceiling function</source>
          <target state="translated">정수 천장 기능</target>
        </trans-unit>
        <trans-unit id="c17da705ac770a7ed5b64c10fff1ce30eba371e2" translate="yes" xml:space="preserve">
          <source>Integer floor function</source>
          <target state="translated">정수 층 기능</target>
        </trans-unit>
        <trans-unit id="d153183c2b102358ab42c8a9266295b87571d808" translate="yes" xml:space="preserve">
          <source>Integer pseudo-random number</source>
          <target state="translated">정수 의사 난수</target>
        </trans-unit>
        <trans-unit id="36c91780a0ad422c17848a20d98b100fbb0ba6a9" translate="yes" xml:space="preserve">
          <source>Integer-to-character conversion function</source>
          <target state="translated">정수에서 문자로의 변환 기능</target>
        </trans-unit>
        <trans-unit id="3e8022007834e4b9e711afb0aecb5beea8de278c" translate="yes" xml:space="preserve">
          <source>Internal procedures can now be used as actual argument.</source>
          <target state="translated">내부 절차를 이제 실제 인수로 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3ea695c02686d0654f7cf052be369e507ef605b5" translate="yes" xml:space="preserve">
          <source>Interoperability with C</source>
          <target state="translated">C와의 상호 운용성</target>
        </trans-unit>
        <trans-unit id="ca8dda04ec6d3b26ee2e7f2458ba686c9738c79c" translate="yes" xml:space="preserve">
          <source>Interoperability with C including enumerations,</source>
          <target state="translated">열거를 포함하여 C와의 상호 운용성</target>
        </trans-unit>
        <trans-unit id="86829ad3d6d997f70f78d27780f0cf075410b820" translate="yes" xml:space="preserve">
          <source>Interoperable function or pointer to such function.</source>
          <target state="translated">상호 운용 가능한 기능 또는 해당 기능에 대한 포인터.</target>
        </trans-unit>
        <trans-unit id="ce4c368f3ed824dc8164a38717d5d52e7a148e37" translate="yes" xml:space="preserve">
          <source>Interprets the bitwise representation of &lt;var&gt;SOURCE&lt;/var&gt; in memory as if it is the representation of a variable or array of the same type and type parameters as &lt;var&gt;MOLD&lt;/var&gt;.</source>
          <target state="translated">&lt;var&gt;MOLD&lt;/var&gt; 와 동일한 유형 및 유형 매개 변수의 변수 또는 배열을 나타내는 것처럼 메모리에서 &lt;var&gt;SOURCE&lt;/var&gt; 의 비트 별 표현을 해석합니다 .</target>
        </trans-unit>
        <trans-unit id="06d5cd3afd8a1e5afe724389ed7a6dda1460110d" translate="yes" xml:space="preserve">
          <source>Intrinsic</source>
          <target state="translated">Intrinsic</target>
        </trans-unit>
        <trans-unit id="8574ef4dc29cda605f841d54e91231d3f51f9e9c" translate="yes" xml:space="preserve">
          <source>Intrinsic modules supported by GNU Fortran.</source>
          <target state="translated">GNU Fortran이 지원하는 내장 모듈.</target>
        </trans-unit>
        <trans-unit id="3f172962919e8c11cac8a85f1f0fcd4bc5ff75f2" translate="yes" xml:space="preserve">
          <source>Intrinsic procedures supported by GNU Fortran.</source>
          <target state="translated">GNU Fortran에서 지원하는 내장 프로 시저</target>
        </trans-unit>
        <trans-unit id="71fce086c51628d5bd9a450c387660bb0aee5a07" translate="yes" xml:space="preserve">
          <source>Intrinsics &lt;code&gt;command_argument_count&lt;/code&gt;, &lt;code&gt;get_command&lt;/code&gt;, &lt;code&gt;get_command_argument&lt;/code&gt;, and &lt;code&gt;get_environment_variable&lt;/code&gt;.</source>
          <target state="translated">내장 함수 &lt;code&gt;command_argument_count&lt;/code&gt; , &lt;code&gt;get_command&lt;/code&gt; , &lt;code&gt;get_command_argument&lt;/code&gt; 및 &lt;code&gt;get_environment_variable&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2473e96bc614a911821242119918a241a41836d6" translate="yes" xml:space="preserve">
          <source>Introduction</source>
          <target state="translated">Introduction</target>
        </trans-unit>
        <trans-unit id="4522e015c0c2c2c66147149e813c48fa6b586dac" translate="yes" xml:space="preserve">
          <source>Invalid Hollerith constants examples:</source>
          <target state="translated">잘못된 홀레리스 상수 예제 :</target>
        </trans-unit>
        <trans-unit id="3ab4428e1147454e5ebc285c9ebe19024c2f601f" translate="yes" xml:space="preserve">
          <source>Inverse function: &lt;a href=&quot;acos#ACOS&quot;&gt;ACOS&lt;/a&gt; Degrees function: &lt;a href=&quot;cosd#COSD&quot;&gt;COSD&lt;/a&gt;</source>
          <target state="translated">역함수 : &lt;a href=&quot;acos#ACOS&quot;&gt;ACOS&lt;/a&gt; 도 기능 : &lt;a href=&quot;cosd#COSD&quot;&gt;COSD&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e659da28d62524d8cdf014483f4fb841770c2677" translate="yes" xml:space="preserve">
          <source>Inverse function: &lt;a href=&quot;acosd#ACOSD&quot;&gt;ACOSD&lt;/a&gt; Radians function: &lt;a href=&quot;cos#COS&quot;&gt;COS&lt;/a&gt;</source>
          <target state="translated">역함수 : &lt;a href=&quot;acosd#ACOSD&quot;&gt;ACOSD&lt;/a&gt; 라디안 기능 : &lt;a href=&quot;cos#COS&quot;&gt;COS&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2c730845af0c1b961ed0df82ddeab279271940a7" translate="yes" xml:space="preserve">
          <source>Inverse function: &lt;a href=&quot;acosh#ACOSH&quot;&gt;ACOSH&lt;/a&gt;</source>
          <target state="translated">역함수 : &lt;a href=&quot;acosh#ACOSH&quot;&gt;ACOSH&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ab30c1127417d76ec70db58d1d5b0b475c1c0467" translate="yes" xml:space="preserve">
          <source>Inverse function: &lt;a href=&quot;asin#ASIN&quot;&gt;ASIN&lt;/a&gt; Degrees function: &lt;a href=&quot;sind#SIND&quot;&gt;SIND&lt;/a&gt;</source>
          <target state="translated">역함수 : &lt;a href=&quot;asin#ASIN&quot;&gt;ASIN&lt;/a&gt; 도 함수 : &lt;a href=&quot;sind#SIND&quot;&gt;SIND&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="21903afe07c41672f8bcfd60933ce0975e725257" translate="yes" xml:space="preserve">
          <source>Inverse function: &lt;a href=&quot;asind#ASIND&quot;&gt;ASIND&lt;/a&gt; Radians function: &lt;a href=&quot;sin#SIN&quot;&gt;SIN&lt;/a&gt;</source>
          <target state="translated">역함수 : &lt;a href=&quot;asind#ASIND&quot;&gt;ASIND&lt;/a&gt; 라디안 기능 : &lt;a href=&quot;sin#SIN&quot;&gt;SIN&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e4ddf7ff77ce5df27c9b1fe2db56c35f5901b057" translate="yes" xml:space="preserve">
          <source>Inverse function: &lt;a href=&quot;atan#ATAN&quot;&gt;ATAN&lt;/a&gt; Degrees function: &lt;a href=&quot;tand#TAND&quot;&gt;TAND&lt;/a&gt;</source>
          <target state="translated">역함수 : &lt;a href=&quot;atan#ATAN&quot;&gt;ATAN&lt;/a&gt; 도 기능 : &lt;a href=&quot;tand#TAND&quot;&gt;TAND&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="97f66d110b94fc89e5a8827725b047e57862ab3f" translate="yes" xml:space="preserve">
          <source>Inverse function: &lt;a href=&quot;atand#ATAND&quot;&gt;ATAND&lt;/a&gt; Radians function: &lt;a href=&quot;tan#TAN&quot;&gt;TAN&lt;/a&gt;</source>
          <target state="translated">역함수 : &lt;a href=&quot;atand#ATAND&quot;&gt;ATAND&lt;/a&gt; 라디안 기능 : &lt;a href=&quot;tan#TAN&quot;&gt;TAN&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="44dbc090688e2c6d84a7e3d31b609d35154a0906" translate="yes" xml:space="preserve">
          <source>Inverse function: &lt;a href=&quot;cos#COS&quot;&gt;COS&lt;/a&gt; Degrees function: &lt;a href=&quot;acosd#ACOSD&quot;&gt;ACOSD&lt;/a&gt;</source>
          <target state="translated">역함수 : &lt;a href=&quot;cos#COS&quot;&gt;COS&lt;/a&gt; 도 기능 : &lt;a href=&quot;acosd#ACOSD&quot;&gt;ACOSD&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ce356b22fa4a2bc0fe1c54a4dd8d797ad7bfcaf9" translate="yes" xml:space="preserve">
          <source>Inverse function: &lt;a href=&quot;cosd#COSD&quot;&gt;COSD&lt;/a&gt; Radians function: &lt;a href=&quot;acos#ACOS&quot;&gt;ACOS&lt;/a&gt;</source>
          <target state="translated">역함수 : &lt;a href=&quot;cosd#COSD&quot;&gt;COSD&lt;/a&gt; 라디안 기능 : &lt;a href=&quot;acos#ACOS&quot;&gt;ACOS&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="50a3b7886f2c9ddd99a594fd1c713960fb8c55f6" translate="yes" xml:space="preserve">
          <source>Inverse function: &lt;a href=&quot;cosh#COSH&quot;&gt;COSH&lt;/a&gt;</source>
          <target state="translated">역함수 : &lt;a href=&quot;cosh#COSH&quot;&gt;COSH&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="dd8f0aecc7affdbcefb2d37c7c883e9329055375" translate="yes" xml:space="preserve">
          <source>Inverse function: &lt;a href=&quot;sin#SIN&quot;&gt;SIN&lt;/a&gt; Degrees function: &lt;a href=&quot;asind#ASIND&quot;&gt;ASIND&lt;/a&gt;</source>
          <target state="translated">역함수 : &lt;a href=&quot;sin#SIN&quot;&gt;SIN&lt;/a&gt; 도 기능 : &lt;a href=&quot;asind#ASIND&quot;&gt;ASIND&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="769f516a1b9daf103ffd05af4973bd00c3d70177" translate="yes" xml:space="preserve">
          <source>Inverse function: &lt;a href=&quot;sind#SIND&quot;&gt;SIND&lt;/a&gt; Radians function: &lt;a href=&quot;asin#ASIN&quot;&gt;ASIN&lt;/a&gt;</source>
          <target state="translated">역함수 : &lt;a href=&quot;sind#SIND&quot;&gt;SIND&lt;/a&gt; 라디안 기능 : &lt;a href=&quot;asin#ASIN&quot;&gt;ASIN&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d3c6e812ab63ab95cb61e4af0a4c09256c5d7b33" translate="yes" xml:space="preserve">
          <source>Inverse function: &lt;a href=&quot;sinh#SINH&quot;&gt;SINH&lt;/a&gt;</source>
          <target state="translated">역함수 : &lt;a href=&quot;sinh#SINH&quot;&gt;SINH&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e955fcb7303aa8ac90ee4bd691afe9ed597f1dc4" translate="yes" xml:space="preserve">
          <source>Inverse function: &lt;a href=&quot;tan#TAN&quot;&gt;TAN&lt;/a&gt; Degrees function: &lt;a href=&quot;atand#ATAND&quot;&gt;ATAND&lt;/a&gt;</source>
          <target state="translated">역함수 : &lt;a href=&quot;tan#TAN&quot;&gt;TAN&lt;/a&gt; 도 기능 : &lt;a href=&quot;atand#ATAND&quot;&gt;ATAND&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="51d8a333f87a2bc95b53b411b6e89d96c16f38a0" translate="yes" xml:space="preserve">
          <source>Inverse function: &lt;a href=&quot;tand#TAND&quot;&gt;TAND&lt;/a&gt; Radians function: &lt;a href=&quot;atan#ATAN&quot;&gt;ATAN&lt;/a&gt;</source>
          <target state="translated">역함수 : &lt;a href=&quot;tand#TAND&quot;&gt;TAND&lt;/a&gt; 라디안 기능 : &lt;a href=&quot;atan#ATAN&quot;&gt;ATAN&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b528c05813b82f9af4b9a185510cfd1260c1fae6" translate="yes" xml:space="preserve">
          <source>Inverse function: &lt;a href=&quot;tanh#TANH&quot;&gt;TANH&lt;/a&gt;</source>
          <target state="translated">역함수 : &lt;a href=&quot;tanh#TANH&quot;&gt;TANH&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="49325c46f12ca8fa7ba40de02370d73f83794354" translate="yes" xml:space="preserve">
          <source>Inverse hyperbolic cosine function</source>
          <target state="translated">역 쌍곡 코사인 함수</target>
        </trans-unit>
        <trans-unit id="cac925ae4ac839399d8ef388bd329ec0d26c1d29" translate="yes" xml:space="preserve">
          <source>Inverse hyperbolic sine function</source>
          <target state="translated">역 쌍곡 사인 함수</target>
        </trans-unit>
        <trans-unit id="0db0733c3f4bfd7f7f1099904e6328177953adb8" translate="yes" xml:space="preserve">
          <source>Inverse hyperbolic tangent function</source>
          <target state="translated">역 쌍곡 탄젠트 함수</target>
        </trans-unit>
        <trans-unit id="f5af7ec888758d9d53bf652c52979a25f8e3623f" translate="yes" xml:space="preserve">
          <source>Invoked for an &lt;code&gt;ERROR STOP&lt;/code&gt; statement which has a string as argument. The function should terminate the program with a nonzero-exit code.</source>
          <target state="translated">문자열을 인수로 갖는 &lt;code&gt;ERROR STOP&lt;/code&gt; 문에 대해 호출되었습니다 . 함수는 0이 아닌 종료 코드로 프로그램을 종료해야합니다.</target>
        </trans-unit>
        <trans-unit id="8207ba46926c95fdfba52f9e026f7c7fdb5e4a6e" translate="yes" xml:space="preserve">
          <source>Invoked for an &lt;code&gt;ERROR STOP&lt;/code&gt; statement which has an integer argument. The function should terminate the program with the specified exit code.</source>
          <target state="translated">정수 인수가 있는 &lt;code&gt;ERROR STOP&lt;/code&gt; 문에 대해 호출되었습니다 . 함수는 지정된 종료 코드로 프로그램을 종료해야합니다.</target>
        </trans-unit>
        <trans-unit id="97d0241f2b7a253e981af184c49cd1b59bc6acd4" translate="yes" xml:space="preserve">
          <source>Invoked for an &lt;code&gt;FAIL IMAGE&lt;/code&gt; statement. The function should terminate the current image.</source>
          <target state="translated">&lt;code&gt;FAIL IMAGE&lt;/code&gt; 문을 호출했습니다 . 이 기능은 현재 이미지를 종료해야합니다.</target>
        </trans-unit>
        <trans-unit id="7e70fc78693cf558e9f17390cf9c5d86c3019ab4" translate="yes" xml:space="preserve">
          <source>Issue warnings for uses of extensions to Fortran 95.</source>
          <target state="translated">Fortran 95의 확장 사용에 대한 경고를 발행합니다.</target>
        </trans-unit>
        <trans-unit id="dd61e5275e1f681ad5e5dd004c73d1fb3a4044f6" translate="yes" xml:space="preserve">
          <source>It also affects the search paths used by &lt;code&gt;cpp&lt;/code&gt; when used to preprocess Fortran source.</source>
          <target state="translated">또한 포트란 소스를 사전 처리하는 데 사용될 때 &lt;code&gt;cpp&lt;/code&gt; 에서 사용하는 검색 경로에 영향을줍니다 .</target>
        </trans-unit>
        <trans-unit id="e485e2677d67b75a3eeace8e611b67c503bb4075" translate="yes" xml:space="preserve">
          <source>It can be used as in the following Fortran code:</source>
          <target state="translated">다음 포트란 코드에서와 같이 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="58ad43f55b6a0800158167ce3cda6a3fa601488a" translate="yes" xml:space="preserve">
          <source>It is permitted to have &lt;code&gt;image_index&lt;/code&gt; equal the current image; the memory of the send-to and the send-from might (partially) overlap in that case. The implementation has to take care that it handles this case, e.g. using &lt;code&gt;memmove&lt;/code&gt; which handles (partially) overlapping memory. If &lt;var&gt;may_require_tmp&lt;/var&gt; is true, the library might additionally create a temporary variable, unless additional checks show that this is not required (e.g. because walking backward is possible or because both arrays are contiguous and &lt;code&gt;memmove&lt;/code&gt; takes care of overlap issues).</source>
          <target state="translated">&lt;code&gt;image_index&lt;/code&gt; 가 현재 이미지와 같도록 허용됩니다 . 이 경우 송신 및 송신의 메모리가 (부분적으로) 겹칠 수 있습니다. 구현 &lt;code&gt;memmove&lt;/code&gt; 부분을 ​​처리해야합니다 ( 예 : 부분적으로 겹치는 메모리를 처리 하는 memmove 사용 ). 경우 &lt;var&gt;may_require_tmp&lt;/var&gt; 는 사실이다 추가 점검이 필요하지 않음을 표시하지 않는 한, 라이브러리가 추가로 임시 변수를 만들 수 있습니다 (예를 들어 걷기 뒤로 가능하다 나 때문에 두 배열이 인접하고 있기 때문에 &lt;code&gt;memmove&lt;/code&gt; 를가 오버랩 문제를 처리한다).</target>
        </trans-unit>
        <trans-unit id="dc7bf055a79bd11bd2208152a491b6149734aa62" translate="yes" xml:space="preserve">
          <source>It is permitted to have &lt;var&gt;image_index&lt;/var&gt; equal the current image; the memory of the send-to and the send-from might (partially) overlap in that case. The implementation has to take care that it handles this case, e.g. using &lt;code&gt;memmove&lt;/code&gt; which handles (partially) overlapping memory. If &lt;var&gt;may_require_tmp&lt;/var&gt; is true, the library might additionally create a temporary variable, unless additional checks show that this is not required (e.g. because walking backward is possible or because both arrays are contiguous and &lt;code&gt;memmove&lt;/code&gt; takes care of overlap issues).</source>
          <target state="translated">&lt;var&gt;image_index&lt;/var&gt; 가 현재 이미지와 같도록 허용됩니다 . 이 경우 송신 및 송신의 메모리가 (부분적으로) 겹칠 수 있습니다. 구현 &lt;code&gt;memmove&lt;/code&gt; 부분을 ​​처리해야합니다 ( 예 : 부분적으로 겹치는 메모리를 처리 하는 memmove 사용 ). 경우 &lt;var&gt;may_require_tmp&lt;/var&gt; 는 사실이다 추가 점검이 필요하지 않음을 표시하지 않는 한, 라이브러리가 추가로 임시 변수를 만들 수 있습니다 (예를 들어 걷기 뒤로 가능하다 나 때문에 두 배열이 인접하고 있기 때문에 &lt;code&gt;memmove&lt;/code&gt; 를가 오버랩 문제를 처리한다).</target>
        </trans-unit>
        <trans-unit id="a2d5c2291fa6c9aa224c10d949c0ac0ceb468485" translate="yes" xml:space="preserve">
          <source>It is permitted to have the same image index for both &lt;var&gt;src_image_index&lt;/var&gt; and &lt;var&gt;dst_image_index&lt;/var&gt;; the memory of the send-to and the send-from might (partially) overlap in that case. The implementation has to take care that it handles this case, e.g. using &lt;code&gt;memmove&lt;/code&gt; which handles (partially) overlapping memory. If &lt;var&gt;may_require_tmp&lt;/var&gt; is true, the library might additionally create a temporary variable, unless additional checks show that this is not required (e.g. because walking backward is possible or because both arrays are contiguous and &lt;code&gt;memmove&lt;/code&gt; takes care of overlap issues).</source>
          <target state="translated">&lt;var&gt;src_image_index&lt;/var&gt; 와 &lt;var&gt;dst_image_index&lt;/var&gt; 모두에 대해 동일한 이미지 인덱스를 가질 수 있습니다 . 이 경우 송신 및 송신의 메모리가 (부분적으로) 겹칠 수 있습니다. 구현 &lt;code&gt;memmove&lt;/code&gt; 부분을 ​​처리해야합니다 ( 예 : 부분적으로 겹치는 메모리를 처리 하는 memmove 사용 ). 경우 &lt;var&gt;may_require_tmp&lt;/var&gt; 는 사실이다 추가 점검이 필요하지 않음을 표시하지 않는 한, 라이브러리가 추가로 임시 변수를 만들 수 있습니다 (예를 들어 걷기 뒤로 가능하다 나 때문에 두 배열이 인접하고 있기 때문에 &lt;code&gt;memmove&lt;/code&gt; 를가 오버랩 문제를 처리한다).</target>
        </trans-unit>
        <trans-unit id="23e3d64e0c8933af103e00d37bc3d8532257663c" translate="yes" xml:space="preserve">
          <source>It should be noted that the default terminator is &amp;lsquo;</source>
          <target state="translated">기본 종료자는 '</target>
        </trans-unit>
        <trans-unit id="58668e7669fd564d99db5d581fcdb6a5618440b5" translate="yes" xml:space="preserve">
          <source>J</source>
          <target state="translated">J</target>
        </trans-unit>
        <trans-unit id="a7ee38bb7be4fc44198cb2685d9601dcf2b9f569" translate="yes" xml:space="preserve">
          <source>K</source>
          <target state="translated">K</target>
        </trans-unit>
        <trans-unit id="98c6f61d08ed6b303581b5da803e632e815f9d37" translate="yes" xml:space="preserve">
          <source>Keyword Index</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1551a7ee1f78cee50211b592c2734b9386d2d54b" translate="yes" xml:space="preserve">
          <source>Kind of an entity</source>
          <target state="translated">실체의 종류</target>
        </trans-unit>
        <trans-unit id="8ab7ef4c7064e68c557c3a8cf2ef3e7c6827bc9b" translate="yes" xml:space="preserve">
          <source>Kind type parameters to specify a REAL type with a storage size of 32, 64, and 128 bits. It is negative if a target platform does not support the particular kind. (Fortran 2008 or later.)</source>
          <target state="translated">저장 영역 크기가 32, 64 및 128 비트 인 REAL 유형을 지정하는 Kind 유형 매개 변수. 대상 플랫폼이 특정 종류를 지원하지 않으면 부정적입니다. (Fortran 2008 이상)</target>
        </trans-unit>
        <trans-unit id="6207b0c4f6cd1630e99259a3a5e5d62ebe5ded86" translate="yes" xml:space="preserve">
          <source>Kind type parameters to specify an INTEGER type with a storage size of 16, 32, and 64 bits. It is negative if a target platform does not support the particular kind. (Fortran 2008 or later.)</source>
          <target state="translated">저장 영역 크기가 16, 32 및 64 비트 인 INTEGER 유형을 지정하기위한 Kind 유형 매개 변수. 대상 플랫폼이 특정 종류를 지원하지 않으면 부정적입니다. (Fortran 2008 이상)</target>
        </trans-unit>
        <trans-unit id="c1bbd9d8f7a0645057266fc203d231a2b9fd6447" translate="yes" xml:space="preserve">
          <source>LINK</source>
          <target state="translated">LINK</target>
        </trans-unit>
        <trans-unit id="b0ecd94326a96753bed5e705196ed32be1af1a1a" translate="yes" xml:space="preserve">
          <source>Language extensions implemented by GNU Fortran.</source>
          <target state="translated">GNU Fortran에 의해 구현 된 언어 확장.</target>
        </trans-unit>
        <trans-unit id="2c660404ea442e1eacb0483cb61766a558579dc4" translate="yes" xml:space="preserve">
          <source>Largest number of a kind</source>
          <target state="translated">종류의 가장 큰 수</target>
        </trans-unit>
        <trans-unit id="d27ea870e756a4996b6e5548e72dad903dff893f" translate="yes" xml:space="preserve">
          <source>Last access time</source>
          <target state="translated">마지막 액세스 시간</target>
        </trans-unit>
        <trans-unit id="8a6b3c229485ed0ca87c2d135388d2f0dd0020a2" translate="yes" xml:space="preserve">
          <source>Last file status change time</source>
          <target state="translated">마지막 파일 상태 변경 시간</target>
        </trans-unit>
        <trans-unit id="97ae7c6bdca85d087ad5892abd46d332ae4415d4" translate="yes" xml:space="preserve">
          <source>Last modification time</source>
          <target state="translated">마지막 수정 시간</target>
        </trans-unit>
        <trans-unit id="dcab630ce3ed0f326db0fc209c0308636c56ab09" translate="yes" xml:space="preserve">
          <source>Leading character</source>
          <target state="translated">최고의 캐릭터</target>
        </trans-unit>
        <trans-unit id="c50e2841612a85e1a253a41b513fa0211128a88b" translate="yes" xml:space="preserve">
          <source>Left adjust a string</source>
          <target state="translated">줄을 왼쪽으로 조정</target>
        </trans-unit>
        <trans-unit id="e5cd0abd2433ed52bdfa0032b224cf261eb8b35c" translate="yes" xml:space="preserve">
          <source>Left justified mask</source>
          <target state="translated">왼쪽 자리 맞추기 마스크</target>
        </trans-unit>
        <trans-unit id="5ab1c2256c381beee948a90f36638f4339d1df90" translate="yes" xml:space="preserve">
          <source>Left shift</source>
          <target state="translated">왼쪽 교대</target>
        </trans-unit>
        <trans-unit id="5975510c214c4daa847ad52688b3993dab1724b1" translate="yes" xml:space="preserve">
          <source>Left shift bits</source>
          <target state="translated">왼쪽 시프트 비트</target>
        </trans-unit>
        <trans-unit id="eae5ee73fa32f8c98c922b726711d7840f3b7a59" translate="yes" xml:space="preserve">
          <source>Legacy interpretation of the first character (see below)</source>
          <target state="translated">첫 문자의 레거시 해석 (아래 참조)</target>
        </trans-unit>
        <trans-unit id="a4f0d30e010d441ea1cae9788d6624b7a03b4f62" translate="yes" xml:space="preserve">
          <source>Length of a character entity</source>
          <target state="translated">문자 엔터티의 길이</target>
        </trans-unit>
        <trans-unit id="5e0cf8576d2b87deafe30f3ebe465833b937ff48" translate="yes" xml:space="preserve">
          <source>Length of a character entity without trailing blank characters</source>
          <target state="translated">후행 공백 문자가없는 문자 엔티티의 길이</target>
        </trans-unit>
        <trans-unit id="97227c7273c040f5a30a4fecde9ce6689f49b389" translate="yes" xml:space="preserve">
          <source>Length of the record marker; valid values are 4 and 8. Default is 4.</source>
          <target state="translated">레코드 마커의 길이; 유효한 값은 4와 8입니다. 기본값은 4입니다.</target>
        </trans-unit>
        <trans-unit id="79f84d2bc2c7088755e410ed7ac734998ccc977b" translate="yes" xml:space="preserve">
          <source>Let us consider two examples of actually passing a procedure pointer from C to Fortran and vice versa. Note that these examples are also very similar to passing ordinary pointers between both languages. First, consider this code in C:</source>
          <target state="translated">실제로 C에서 Fortran으로 그리고 그 반대로 프로 시저 포인터를 전달하는 두 가지 예를 살펴 보겠습니다. 이 예제는 두 언어간에 일반 포인터를 전달하는 것과 매우 유사합니다. 먼저 C에서이 코드를 고려하십시오.</target>
        </trans-unit>
        <trans-unit id="8fa146da0d449532fb6d500f41fb6c02db2554a8" translate="yes" xml:space="preserve">
          <source>Lexical greater than</source>
          <target state="translated">보다 큰 어휘</target>
        </trans-unit>
        <trans-unit id="03a5d19db628a415dffa91613d7e2037efbd2de9" translate="yes" xml:space="preserve">
          <source>Lexical greater than or equal</source>
          <target state="translated">어휘 이상</target>
        </trans-unit>
        <trans-unit id="adb6ceebebe3a25726b836e321122b8cb4b78bc2" translate="yes" xml:space="preserve">
          <source>Lexical less than</source>
          <target state="translated">보다 적은 어휘</target>
        </trans-unit>
        <trans-unit id="6cc4078414eccf52f3a6459f0f48c06874b32d0e" translate="yes" xml:space="preserve">
          <source>Lexical less than or equal</source>
          <target state="translated">어휘 이하</target>
        </trans-unit>
        <trans-unit id="e393ce2d408e8663d0b0f4462207f1faff5ef4eb" translate="yes" xml:space="preserve">
          <source>Library-based coarray parallelization; a suitable GNU Fortran coarray library needs to be linked.</source>
          <target state="translated">라이브러리 기반의 거친 병렬화; 적합한 GNU Fortran Coarray 라이브러리를 연결해야합니다.</target>
        </trans-unit>
        <trans-unit id="7e0ff6d065b5d622b994bd5180d901b19bf13b11" translate="yes" xml:space="preserve">
          <source>Licensed under the GNU Free Documentation License, Version 1.3.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7e02c95fe85052fcadf9745a5f1d0358088d936" translate="yes" xml:space="preserve">
          <source>Like</source>
          <target state="translated">Like</target>
        </trans-unit>
        <trans-unit id="6262ff73128a0abefed72254f810c542a985e42e" translate="yes" xml:space="preserve">
          <source>Limits the maximum number of error messages to &lt;var&gt;n&lt;/var&gt;, at which point GNU Fortran bails out rather than attempting to continue processing the source code. If &lt;var&gt;n&lt;/var&gt; is 0, there is no limit on the number of error messages produced.</source>
          <target state="translated">최대 오류 메시지 수를 &lt;var&gt;n&lt;/var&gt; 으로 제한합니다 .이 시점에서 GNU Fortran은 소스 코드 처리를 계속 시도하지 않고 구제합니다. 경우 &lt;var&gt;n&lt;/var&gt; 은 0, 생성 된 오류 메시지의 수에는 제한이 없습니다.</target>
        </trans-unit>
        <trans-unit id="7d3822d503f6fdfaf315e8b54cd553dfda61cad1" translate="yes" xml:space="preserve">
          <source>Line feed (no carriage return)</source>
          <target state="translated">줄 바꿈 (캐리지 리턴 없음)</target>
        </trans-unit>
        <trans-unit id="a7504c594decfccdceb396e539782bb13df31875" translate="yes" xml:space="preserve">
          <source>Line feed and carriage return</source>
          <target state="translated">줄 바꿈 및 캐리지 리턴</target>
        </trans-unit>
        <trans-unit id="cc3832473f0fadd93e7db6ba18539dd5bce2d5c1" translate="yes" xml:space="preserve">
          <source>Link Options</source>
          <target state="translated">링크 옵션</target>
        </trans-unit>
        <trans-unit id="5c73f7483a9660d9e6ff95a01a0a1f185435d435" translate="yes" xml:space="preserve">
          <source>Locate and gather machine code already generated to perform actions requested by statements in the user&amp;rsquo;s program. This machine code is organized into &lt;em&gt;modules&lt;/em&gt; and is located and &lt;em&gt;linked&lt;/em&gt; to the user program.</source>
          <target state="translated">사용자 프로그램의 명령문에서 요청한 조치를 수행하기 위해 이미 생성 된 기계 코드를 찾아 수집하십시오. 이 기계 코드는 &lt;em&gt;모듈&lt;/em&gt; 로 구성되며 사용자 프로그램에 위치하고 &lt;em&gt;링크&lt;/em&gt; 됩니다.</target>
        </trans-unit>
        <trans-unit id="d5605d6d0152b66a08b94c86e31207ddbd756d6b" translate="yes" xml:space="preserve">
          <source>Location of the maximum value within an array</source>
          <target state="translated">배열 내 최대 값의 위치</target>
        </trans-unit>
        <trans-unit id="c2a05018eee48b3efb66f96399c2b6e9d3f2f66a" translate="yes" xml:space="preserve">
          <source>Location of the minimum value within an array</source>
          <target state="translated">배열 내 최소값의 위치</target>
        </trans-unit>
        <trans-unit id="b4ec6e9affa4ece7fba1ac47c3eb67ea70ebf2d5" translate="yes" xml:space="preserve">
          <source>Locking a lock variable</source>
          <target state="translated">잠금 변수 잠금</target>
        </trans-unit>
        <trans-unit id="53207c28b36272341ba0c50e132652d9949df450" translate="yes" xml:space="preserve">
          <source>Logarithm function</source>
          <target state="translated">대수 함수</target>
        </trans-unit>
        <trans-unit id="61502f1c9040dfb4a05cefb27795439a9f39f510" translate="yes" xml:space="preserve">
          <source>Logarithm of the Gamma function</source>
          <target state="translated">감마 함수의 로그</target>
        </trans-unit>
        <trans-unit id="0890c5cd9a5eabf96a35cb4d43e56b2db315d809" translate="yes" xml:space="preserve">
          <source>Logarithm of the Gamma function: &lt;a href=&quot;log_005fgamma#LOG_005fGAMMA&quot;&gt;LOG_GAMMA&lt;/a&gt;</source>
          <target state="translated">감마 함수의 로그 : &lt;a href=&quot;log_005fgamma#LOG_005fGAMMA&quot;&gt;LOG_GAMMA&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="122f1700f952290f57d9cb80437f579187bf8842" translate="yes" xml:space="preserve">
          <source>Logical</source>
          <target state="translated">Logical</target>
        </trans-unit>
        <trans-unit id="ff5d5c519f4c3bb77429911d9e4777ff8d9f0131" translate="yes" xml:space="preserve">
          <source>Logical negation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43e0a1bfc4057bbcec52468b1517173b5e402eec" translate="yes" xml:space="preserve">
          <source>Low level file positioning subroutine</source>
          <target state="translated">저수준 파일 위치 지정 서브 루틴</target>
        </trans-unit>
        <trans-unit id="5dbb72a6ed735ce06b4a67f2d869b891dab189f9" translate="yes" xml:space="preserve">
          <source>Lower codimension bounds of an array</source>
          <target state="translated">배열의 낮은 차원 범위</target>
        </trans-unit>
        <trans-unit id="11215b7bf0841d27a5542e991b7cc4da462c7b19" translate="yes" xml:space="preserve">
          <source>Lower dimension bounds of an array</source>
          <target state="translated">배열의 하한치</target>
        </trans-unit>
        <trans-unit id="63dc4f1b4f7c5a980c804c9400f843d0f50eb072" translate="yes" xml:space="preserve">
          <source>MALLOC</source>
          <target state="translated">MALLOC</target>
        </trans-unit>
        <trans-unit id="36903c3f68704d6a6a98ad41acdb673f1272e159" translate="yes" xml:space="preserve">
          <source>MASKL</source>
          <target state="translated">MASKL</target>
        </trans-unit>
        <trans-unit id="983840beaf1b22f9bfc69fc65b37ae2b76ef4371" translate="yes" xml:space="preserve">
          <source>MASKR</source>
          <target state="translated">MASKR</target>
        </trans-unit>
        <trans-unit id="ec4b11bad0edbdb99e67935796df60d779713be8" translate="yes" xml:space="preserve">
          <source>MOD</source>
          <target state="translated">MOD</target>
        </trans-unit>
        <trans-unit id="e20b6c854bf67b1252c620404eef921f96fbd978" translate="yes" xml:space="preserve">
          <source>MODULO</source>
          <target state="translated">MODULO</target>
        </trans-unit>
        <trans-unit id="7c494dff151c0770a74273286a611f6cf7fde933" translate="yes" xml:space="preserve">
          <source>Make an assertion with the predicate &lt;var&gt;predicate&lt;/var&gt; and answer &lt;var&gt;answer&lt;/var&gt;. This form is preferred to the older form -A predicate(answer), which is still supported, because it does not use shell special characters.</source>
          <target state="translated">술어와 주장합니다 &lt;var&gt;predicate&lt;/var&gt; 및 응답 &lt;var&gt;answer&lt;/var&gt; . 이 양식은 쉘 특수 문자를 사용하지 않기 때문에 여전히 지원되는 이전 양식 인 -A 술어 (답)보다 선호됩니다.</target>
        </trans-unit>
        <trans-unit id="f9981881244615e30e0e6d9dc9076b060714fa91" translate="yes" xml:space="preserve">
          <source>Makes a (hard) link from file &lt;var&gt;PATH1&lt;/var&gt; to &lt;var&gt;PATH2&lt;/var&gt;. A null character (&lt;code&gt;CHAR(0)&lt;/code&gt;) can be used to mark the end of the names in &lt;var&gt;PATH1&lt;/var&gt; and &lt;var&gt;PATH2&lt;/var&gt;; otherwise, trailing blanks in the file names are ignored. If the &lt;var&gt;STATUS&lt;/var&gt; argument is supplied, it contains 0 on success or a nonzero error code upon return; see &lt;code&gt;link(2)&lt;/code&gt;.</source>
          <target state="translated">파일 &lt;var&gt;PATH1&lt;/var&gt; 에서 &lt;var&gt;PATH2&lt;/var&gt; 로 (하드) 링크 를 만듭니다 . 널 문자 ( &lt;code&gt;CHAR(0)&lt;/code&gt; )를 사용하여 &lt;var&gt;PATH1&lt;/var&gt; 및 &lt;var&gt;PATH2&lt;/var&gt; 에서 이름의 끝을 표시 할 수 있습니다 . 그렇지 않으면 파일 이름의 후미 공백은 무시됩니다. 는 IF &lt;var&gt;STATUS&lt;/var&gt; 인수가 제공되고, 그것은 성공 또는 반환시 제로가 아닌 에러 코드에 0이 포함되어; &lt;code&gt;link(2)&lt;/code&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="49905b0210758db0722fab7b9950412f5f87df59" translate="yes" xml:space="preserve">
          <source>Makes a symbolic link from file &lt;var&gt;PATH1&lt;/var&gt; to &lt;var&gt;PATH2&lt;/var&gt;. A null character (&lt;code&gt;CHAR(0)&lt;/code&gt;) can be used to mark the end of the names in &lt;var&gt;PATH1&lt;/var&gt; and &lt;var&gt;PATH2&lt;/var&gt;; otherwise, trailing blanks in the file names are ignored. If the &lt;var&gt;STATUS&lt;/var&gt; argument is supplied, it contains 0 on success or a nonzero error code upon return; see &lt;code&gt;symlink(2)&lt;/code&gt;. If the system does not supply &lt;code&gt;symlink(2)&lt;/code&gt;, &lt;code&gt;ENOSYS&lt;/code&gt; is returned.</source>
          <target state="translated">파일 &lt;var&gt;PATH1&lt;/var&gt; 에서 &lt;var&gt;PATH2&lt;/var&gt; 로 심볼릭 링크를 만듭니다 . 널 문자 ( &lt;code&gt;CHAR(0)&lt;/code&gt; )를 사용하여 &lt;var&gt;PATH1&lt;/var&gt; 및 &lt;var&gt;PATH2&lt;/var&gt; 에서 이름의 끝을 표시 할 수 있습니다 . 그렇지 않으면 파일 이름의 후미 공백은 무시됩니다. 는 IF &lt;var&gt;STATUS&lt;/var&gt; 인수가 제공되고, 그것은 성공 또는 반환시 제로가 아닌 에러 코드에 0이 포함되어; &lt;code&gt;symlink(2)&lt;/code&gt; 참조하십시오 . 시스템이 제공하지 않는 경우 &lt;code&gt;symlink(2)&lt;/code&gt; , &lt;code&gt;ENOSYS&lt;/code&gt; 는 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="a6997537ee8d9bf18bd573772e8d029eb0ddd30e" translate="yes" xml:space="preserve">
          <source>Malformed environment variables are silently ignored.</source>
          <target state="translated">변형 된 환경 변수는 자동으로 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="2d364109921998597b145456b1c7c702647c48dd" translate="yes" xml:space="preserve">
          <source>Many Fortran compilers including GNU Fortran allow passing the source code through a C preprocessor (CPP; sometimes also called the Fortran preprocessor, FPP) to allow for conditional compilation. In the case of GNU Fortran, this is the GNU C Preprocessor in the traditional mode. On systems with case-preserving file names, the preprocessor is automatically invoked if the filename extension is</source>
          <target state="translated">GNU Fortran을 포함한 많은 Fortran 컴파일러는 조건부 컴파일을 허용하기 위해 CPP (CPP; 때때로 포트란 프리 프로세서라고도 함)를 통해 소스 코드를 전달할 수 있습니다. GNU Fortran의 경우, 이것은 전통적인 모드의 GNU C 프리 프로세서입니다. 대소 문자를 보존하는 파일 이름을 가진 시스템에서 파일 이름 확장자가 다음과 같은 경우 프리 프로세서가 자동으로 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="b673cea4bac8f2c92b06cf37ddae5c74e850a3ee" translate="yes" xml:space="preserve">
          <source>Many constraints have been relaxed, in particular for the &lt;code&gt;C_LOC&lt;/code&gt; and &lt;code&gt;C_F_POINTER&lt;/code&gt; intrinsics.</source>
          <target state="translated">특히 &lt;code&gt;C_LOC&lt;/code&gt; 및 &lt;code&gt;C_F_POINTER&lt;/code&gt; 내장 함수에 대한 많은 제약이 완화되었습니다 .</target>
        </trans-unit>
        <trans-unit id="1bb1ed3f7deaffd6b922f0a465d51e4749b2b686" translate="yes" xml:space="preserve">
          <source>Many of the intrinsic procedures take one or more optional arguments. This document follows the convention used in the Fortran 95 standard, and denotes such arguments by square brackets.</source>
          <target state="translated">여러 내장 프로시 저는 하나 이상의 선택적 인수를 사용합니다. 이 문서는 Fortran 95 표준에 사용 된 규칙을 따르며 이러한 인수를 대괄호로 표시합니다.</target>
        </trans-unit>
        <trans-unit id="396c600df716b715e6908527e0552afed1093e6a" translate="yes" xml:space="preserve">
          <source>Many, if not most, floating point operations incur loss of precision due to rounding, and hence the &lt;code&gt;ffpe-trap=inexact&lt;/code&gt; is likely to be uninteresting in practice.</source>
          <target state="translated">대부분은 아니지만 대부분의 부동 소수점 연산은 반올림으로 인해 정밀도 손실이 발생하므로 &lt;code&gt;ffpe-trap=inexact&lt;/code&gt; 는 실제로 흥미롭지 않을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2b5b41a91b43e9925f1cd6b05ad283cf52bbea89" translate="yes" xml:space="preserve">
          <source>Mark the image failed and end its execution</source>
          <target state="translated">이미지를 실패로 표시하고 실행을 종료합니다</target>
        </trans-unit>
        <trans-unit id="57a7bcef18b966adc5917142f6dfcf4595ac7dd2" translate="yes" xml:space="preserve">
          <source>Maximal value on the current set of images</source>
          <target state="translated">현재 이미지 세트의 최대 값</target>
        </trans-unit>
        <trans-unit id="bdc686c0246cdac33e35defd5fe4bd798a773c19" translate="yes" xml:space="preserve">
          <source>Maximum exponent of a real kind</source>
          <target state="translated">실제 종류의 최대 지수</target>
        </trans-unit>
        <trans-unit id="ae84c2d859909ea35ff046f6e7f08b7dac76e3a9" translate="yes" xml:space="preserve">
          <source>Maximum value of an argument list</source>
          <target state="translated">인수 목록의 최대 값</target>
        </trans-unit>
        <trans-unit id="2e98ec5a4c500987af4bebd0ba84d3fcc5da115a" translate="yes" xml:space="preserve">
          <source>Maximum value of an array</source>
          <target state="translated">배열의 최대 값</target>
        </trans-unit>
        <trans-unit id="5ca249738368eabb30a5dd0ba4743ef0d5bef5ca" translate="yes" xml:space="preserve">
          <source>May be any type, not scalar.</source>
          <target state="translated">스칼라가 아닌 모든 유형이 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5a70f7f5c27686a9e445d040ea92624267b0231a" translate="yes" xml:space="preserve">
          <source>May be of any type and may be a pointer, scalar or array value, or a dummy procedure. It shall be the name of an optional dummy argument accessible within the current subroutine or function.</source>
          <target state="translated">임의의 유형일 수 있으며 포인터, 스칼라 또는 배열 값 또는 더미 프로 시저 일 수 있습니다. 현재 서브 루틴 또는 함수 내에서 액세스 할 수있는 선택적 더미 인수의 이름이어야합니다.</target>
        </trans-unit>
        <trans-unit id="ad1518ab4ae95b3379acd6791637e69195bb3600" translate="yes" xml:space="preserve">
          <source>May be of any type.</source>
          <target state="translated">모든 유형이 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="19cd7d185cfd95a703e62d43597e9ae28e0646e5" translate="yes" xml:space="preserve">
          <source>Meaning</source>
          <target state="translated">Meaning</target>
        </trans-unit>
        <trans-unit id="0039b07a426b375d2db61be98aee0327a2657758" translate="yes" xml:space="preserve">
          <source>Memory de-allocation subroutine</source>
          <target state="translated">메모리 할당 해제 서브 루틴</target>
        </trans-unit>
        <trans-unit id="6faf3a93240169eec874248543e2a8cfb9062ded" translate="yes" xml:space="preserve">
          <source>Merge arrays</source>
          <target state="translated">배열 병합</target>
        </trans-unit>
        <trans-unit id="210fd7b2cd9db062d1329f1e5b0a8a82ca9c3590" translate="yes" xml:space="preserve">
          <source>Merge of bits under mask</source>
          <target state="translated">마스크 아래 비트 병합</target>
        </trans-unit>
        <trans-unit id="1a12929304d9f9f57d87d98236f2d31ecf700ee7" translate="yes" xml:space="preserve">
          <source>Minimal value on the current set of images</source>
          <target state="translated">현재 이미지 세트에서 최소값</target>
        </trans-unit>
        <trans-unit id="13494276ec60f4f45c15f65149ca4d485ee52760" translate="yes" xml:space="preserve">
          <source>Minimum exponent of a real kind</source>
          <target state="translated">실제 종류의 최소 지수</target>
        </trans-unit>
        <trans-unit id="a40a8ea17d9eafa46b96a9e052b46d1d5cf8cdde" translate="yes" xml:space="preserve">
          <source>Minimum value of an argument list</source>
          <target state="translated">인수 목록의 최소값</target>
        </trans-unit>
        <trans-unit id="c7f2eebd1f3b99c2b9bfcb4d3b2e01a11fdfdf05" translate="yes" xml:space="preserve">
          <source>Minimum value of an array</source>
          <target state="translated">배열의 최소값</target>
        </trans-unit>
        <trans-unit id="ce6ac60b5209583d2c84178e2e54de000370b01e" translate="yes" xml:space="preserve">
          <source>Minor I/O features: Rounding during formatted output, using of a decimal comma instead of a decimal point, setting whether a plus sign should appear for positive numbers. On systems where &lt;code&gt;strtod&lt;/code&gt; honours the rounding mode, the rounding mode is also supported for input.</source>
          <target state="translated">사소한 I / O 기능 : 소수점 대신 십진수 쉼표를 사용하여 양수에 더하기 부호를 표시할지 여부를 설정하여 형식화 된 출력 중에 반올림합니다. &lt;code&gt;strtod&lt;/code&gt; 가 반올림 모드를 따르는 시스템에서 반올림 모드도 입력에 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="cc0fb90fb5ba6cd619cb7bf263ddc973b12ef58e" translate="yes" xml:space="preserve">
          <source>Minor features: obsolesce diagnostics for &lt;code&gt;ENTRY&lt;/code&gt; with</source>
          <target state="translated">마이너 기능 : 더 이상 사용되지 않는 진단을위한 &lt;code&gt;ENTRY&lt;/code&gt; 와</target>
        </trans-unit>
        <trans-unit id="94aba0202969b49894cf803b4c278527365b7469" translate="yes" xml:space="preserve">
          <source>Minutes after the hour, range 0&amp;ndash;59</source>
          <target state="translated">시간 후 분, 범위 0&amp;ndash;59</target>
        </trans-unit>
        <trans-unit id="ecf73226c355aa5cdfc5bbeb7c21b91d47cc2cec" translate="yes" xml:space="preserve">
          <source>Modulo function</source>
          <target state="translated">모듈로 기능</target>
        </trans-unit>
        <trans-unit id="be27ead4cd43dafd5f62ecf16341e6a06cff89e8" translate="yes" xml:space="preserve">
          <source>Moreover, the following two named constants are defined:</source>
          <target state="translated">또한 다음 두 명명 된 상수가 정의됩니다.</target>
        </trans-unit>
        <trans-unit id="ec1de17a62dee02240eeb1321c2ac46bdf9cd493" translate="yes" xml:space="preserve">
          <source>Most of them have both positive and negative forms; the negative form of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83c68f4bba4e9e38a1bbfa571e43d34f91d5c9b4" translate="yes" xml:space="preserve">
          <source>Move allocation from one object to another</source>
          <target state="translated">한 객체에서 다른 객체로 할당 이동</target>
        </trans-unit>
        <trans-unit id="c6c16867333023efac7eafed5dca46bf3ab1163d" translate="yes" xml:space="preserve">
          <source>Move bits from one integer to another</source>
          <target state="translated">한 정수에서 다른 정수로 비트 이동</target>
        </trans-unit>
        <trans-unit id="26ec42657587dfb7c7efadb4172795e66a93699b" translate="yes" xml:space="preserve">
          <source>Moves &lt;var&gt;LEN&lt;/var&gt; bits from positions &lt;var&gt;FROMPOS&lt;/var&gt; through &lt;code&gt;FROMPOS+LEN-1&lt;/code&gt; of &lt;var&gt;FROM&lt;/var&gt; to positions &lt;var&gt;TOPOS&lt;/var&gt; through &lt;code&gt;TOPOS+LEN-1&lt;/code&gt; of &lt;var&gt;TO&lt;/var&gt;. The portion of argument &lt;var&gt;TO&lt;/var&gt; not affected by the movement of bits is unchanged. The values of &lt;code&gt;FROMPOS+LEN-1&lt;/code&gt; and &lt;code&gt;TOPOS+LEN-1&lt;/code&gt; must be less than &lt;code&gt;BIT_SIZE(FROM)&lt;/code&gt;.</source>
          <target state="translated">이동 &lt;var&gt;LEN&lt;/var&gt; 된 포지션에서의 비트 &lt;var&gt;FROMPOS&lt;/var&gt; 를 통해 &lt;code&gt;FROMPOS+LEN-1&lt;/code&gt; 의 &lt;var&gt;FROM&lt;/var&gt; 포지션에 &lt;var&gt;TOPOS&lt;/var&gt; 통해 &lt;code&gt;TOPOS+LEN-1&lt;/code&gt; 의 &lt;var&gt;TO&lt;/var&gt; . 비트 이동에 영향을받지 않는 인수 &lt;var&gt;TO&lt;/var&gt; 의 부분 은 변경되지 않습니다. &lt;code&gt;FROMPOS+LEN-1&lt;/code&gt; 및 &lt;code&gt;TOPOS+LEN-1&lt;/code&gt; 의 값은 &lt;code&gt;BIT_SIZE(FROM)&lt;/code&gt; 보다 작아야 합니다 .</target>
        </trans-unit>
        <trans-unit id="3e4057b4c0c68b27f68d0f3d39f8433e8f255761" translate="yes" xml:space="preserve">
          <source>Moves &lt;var&gt;UNIT&lt;/var&gt; to the specified &lt;var&gt;OFFSET&lt;/var&gt;. If &lt;var&gt;WHENCE&lt;/var&gt; is set to 0, the &lt;var&gt;OFFSET&lt;/var&gt; is taken as an absolute value &lt;code&gt;SEEK_SET&lt;/code&gt;, if set to 1, &lt;var&gt;OFFSET&lt;/var&gt; is taken to be relative to the current position &lt;code&gt;SEEK_CUR&lt;/code&gt;, and if set to 2 relative to the end of the file &lt;code&gt;SEEK_END&lt;/code&gt;. On error, &lt;var&gt;STATUS&lt;/var&gt; is set to a nonzero value. If &lt;var&gt;STATUS&lt;/var&gt; the seek fails silently.</source>
          <target state="translated">&lt;var&gt;UNIT&lt;/var&gt; 을 지정된 &lt;var&gt;OFFSET&lt;/var&gt; 로 이동 합니다 . 경우 &lt;var&gt;WHENCE&lt;/var&gt; 가 0으로 설정되면,이 &lt;var&gt;OFFSET&lt;/var&gt; 절대 값으로한다 &lt;code&gt;SEEK_SET&lt;/code&gt; 1로 설정이되면 &lt;var&gt;OFFSET&lt;/var&gt; 현재 위치를 기준에 촬영 &lt;code&gt;SEEK_CUR&lt;/code&gt; 하고 설정하면 파일의 마지막 2 상대적인 &lt;code&gt;SEEK_END&lt;/code&gt; . 오류가 발생하면 &lt;var&gt;STATUS&lt;/var&gt; 는 0이 아닌 값으로 설정됩니다. 만약 &lt;var&gt;STATUS&lt;/var&gt; (가) 추구가 자동으로 실패합니다.</target>
        </trans-unit>
        <trans-unit id="f57598c9ccd62944b03316edb796ce4fa5b37ff9" translate="yes" xml:space="preserve">
          <source>Multiplies the elements of &lt;var&gt;ARRAY&lt;/var&gt; along dimension &lt;var&gt;DIM&lt;/var&gt; if the corresponding element in &lt;var&gt;MASK&lt;/var&gt; is &lt;code&gt;TRUE&lt;/code&gt;.</source>
          <target state="translated">&lt;var&gt;MASK&lt;/var&gt; 의 해당 요소 가 &lt;code&gt;TRUE&lt;/code&gt; 인 경우 치수 &lt;var&gt;DIM&lt;/var&gt; 을 따라 &lt;var&gt;ARRAY&lt;/var&gt; 요소를 곱 합니다 .</target>
        </trans-unit>
        <trans-unit id="b51a60734da64be0e618bacbea2865a8a7dcd669" translate="yes" xml:space="preserve">
          <source>N</source>
          <target state="translated">N</target>
        </trans-unit>
        <trans-unit id="1417d2118bba6440275b87c20f5035f45f639b28" translate="yes" xml:space="preserve">
          <source>NOTE A simple implementation could be</source>
          <target state="translated">참고 간단한 구현은</target>
        </trans-unit>
        <trans-unit id="e69fc18a69727f31dc484cc6cc5d98f4552fffd6" translate="yes" xml:space="preserve">
          <source>NOTES</source>
          <target state="translated">NOTES</target>
        </trans-unit>
        <trans-unit id="eef19c54306daa69eda49c0272623bdb5e2b341f" translate="yes" xml:space="preserve">
          <source>NULL</source>
          <target state="translated">NULL</target>
        </trans-unit>
        <trans-unit id="709a23220f2c3d64d1e1d6d18c4d5280f8d82fca" translate="yes" xml:space="preserve">
          <source>Name</source>
          <target state="translated">Name</target>
        </trans-unit>
        <trans-unit id="ee6356c71fa0b6e9767d843fec6c0b93d6e692c5" translate="yes" xml:space="preserve">
          <source>Named constant</source>
          <target state="translated">명명 된 상수</target>
        </trans-unit>
        <trans-unit id="6a6c7e0277e044cae83fe0440e0bf51944981016" translate="yes" xml:space="preserve">
          <source>Namelist input/output for internal files.</source>
          <target state="translated">내부 파일의 이름 목록 입 / 출력.</target>
        </trans-unit>
        <trans-unit id="c91dc3d90db29e1e2609e81b01946841c00bec62" translate="yes" xml:space="preserve">
          <source>Nearest representable number</source>
          <target state="translated">가장 가까운 숫자</target>
        </trans-unit>
        <trans-unit id="78a5b6c328ee914e416c03a5cb7cebfcc15278c5" translate="yes" xml:space="preserve">
          <source>Nearest whole number</source>
          <target state="translated">가장 가까운 정수</target>
        </trans-unit>
        <trans-unit id="7c2410fcc35447dc77477d434b407df9fb9153c4" translate="yes" xml:space="preserve">
          <source>New line</source>
          <target state="translated">줄 바꿈</target>
        </trans-unit>
        <trans-unit id="85999ae5cdf0a7237e8bf4b5d1aa802e5c6e9763" translate="yes" xml:space="preserve">
          <source>New line character</source>
          <target state="translated">줄 바꾸기 문자</target>
        </trans-unit>
        <trans-unit id="9eb767b92650dbd25846d979102119fb0feef3b1" translate="yes" xml:space="preserve">
          <source>New page</source>
          <target state="translated">새 페이지</target>
        </trans-unit>
        <trans-unit id="f0de1ac5e17b1c46e1c0def8e40eea51984873cc" translate="yes" xml:space="preserve">
          <source>Next, we want to call a C routine that expects a procedure pointer argument and pass it a Fortran procedure (which clearly must be interoperable!). Again, the C function may be:</source>
          <target state="translated">다음으로 프로 시저 포인터 인수를 기대하는 C 루틴을 호출하고 Fortran 프로 시저를 전달합니다 (상호 적으로 상호 운영 가능해야 함). 다시 C 함수는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="0886c994b731569b46ca06857829b7c09f0dbcf7" translate="yes" xml:space="preserve">
          <source>Next: &lt;a href=&quot;_005fgfortran_005fcaf_005fderegister#g_t_005fgfortran_005fcaf_005fderegister&quot;&gt;_gfortran_caf_deregister&lt;/a&gt;, Previous: &lt;a href=&quot;_005fgfortran_005fcaf_005fstopped_005fimages#g_t_005fgfortran_005fcaf_005fstopped_005fimages&quot;&gt;_gfortran_caf_stopped_images&lt;/a&gt;, Up: &lt;a href=&quot;function-abi-documentation#Function-ABI-Documentation&quot;&gt;Function ABI Documentation&lt;/a&gt; [&lt;a href=&quot;index#SEC_Contents&quot;&gt;Contents&lt;/a&gt;][&lt;a href=&quot;https://gcc.gnu.org/onlinedocs/gcc-7.2.0/gfortran/Option-Index.html#Option-Index&quot;&gt;Index&lt;/a&gt;]</source>
          <target state="translated">다음 : &lt;a href=&quot;_005fgfortran_005fcaf_005fderegister#g_t_005fgfortran_005fcaf_005fderegister&quot;&gt;_gfortran_caf_deregister&lt;/a&gt; , 이전 : &lt;a href=&quot;_005fgfortran_005fcaf_005fstopped_005fimages#g_t_005fgfortran_005fcaf_005fstopped_005fimages&quot;&gt;_gfortran_caf_stopped_images&lt;/a&gt; , 위 : &lt;a href=&quot;function-abi-documentation#Function-ABI-Documentation&quot;&gt;기능 ABI 문서&lt;/a&gt; [ &lt;a href=&quot;index#SEC_Contents&quot;&gt;목차&lt;/a&gt; ] [ &lt;a href=&quot;https://gcc.gnu.org/onlinedocs/gcc-7.2.0/gfortran/Option-Index.html#Option-Index&quot;&gt;색인&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="f99e4d97560a59f1ae61a57ac2941026aeabf520" translate="yes" xml:space="preserve">
          <source>Next: &lt;a href=&quot;_005fgfortran_005fcaf_005fevent_005fquery#g_t_005fgfortran_005fcaf_005fevent_005fquery&quot;&gt;_gfortran_caf_event_query&lt;/a&gt;, Previous: &lt;a href=&quot;_005fgfortran_005fcaf_005fevent_005fpost#g_t_005fgfortran_005fcaf_005fevent_005fpost&quot;&gt;_gfortran_caf_event_post&lt;/a&gt;, Up: &lt;a href=&quot;function-abi-documentation#Function-ABI-Documentation&quot;&gt;Function ABI Documentation&lt;/a&gt; [&lt;a href=&quot;index#SEC_Contents&quot;&gt;Contents&lt;/a&gt;][&lt;a href=&quot;https://gcc.gnu.org/onlinedocs/gcc-7.2.0/gfortran/Option-Index.html#Option-Index&quot;&gt;Index&lt;/a&gt;]</source>
          <target state="translated">다음 : &lt;a href=&quot;_005fgfortran_005fcaf_005fevent_005fquery#g_t_005fgfortran_005fcaf_005fevent_005fquery&quot;&gt;_gfortran_caf_event_query&lt;/a&gt; , 이전 : &lt;a href=&quot;_005fgfortran_005fcaf_005fevent_005fpost#g_t_005fgfortran_005fcaf_005fevent_005fpost&quot;&gt;_gfortran_caf_event_post&lt;/a&gt; , 위 : &lt;a href=&quot;function-abi-documentation#Function-ABI-Documentation&quot;&gt;기능 ABI 문서&lt;/a&gt; [ &lt;a href=&quot;index#SEC_Contents&quot;&gt;목차&lt;/a&gt; ] [ &lt;a href=&quot;https://gcc.gnu.org/onlinedocs/gcc-7.2.0/gfortran/Option-Index.html#Option-Index&quot;&gt;색인&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="4b82c23410ace2f5fda1706aa366b4ad8d45a3e3" translate="yes" xml:space="preserve">
          <source>Next: &lt;a href=&quot;_005fgfortran_005fcaf_005fget#g_t_005fgfortran_005fcaf_005fget&quot;&gt;_gfortran_caf_get&lt;/a&gt;, Previous: &lt;a href=&quot;_005fgfortran_005fcaf_005fis_005fpresent#g_t_005fgfortran_005fcaf_005fis_005fpresent&quot;&gt;_gfortran_caf_is_present&lt;/a&gt;, Up: &lt;a href=&quot;function-abi-documentation#Function-ABI-Documentation&quot;&gt;Function ABI Documentation&lt;/a&gt; [&lt;a href=&quot;index#SEC_Contents&quot;&gt;Contents&lt;/a&gt;][&lt;a href=&quot;https://gcc.gnu.org/onlinedocs/gcc-7.2.0/gfortran/Option-Index.html#Option-Index&quot;&gt;Index&lt;/a&gt;]</source>
          <target state="translated">다음 : &lt;a href=&quot;_005fgfortran_005fcaf_005fget#g_t_005fgfortran_005fcaf_005fget&quot;&gt;_gfortran_caf_get&lt;/a&gt; , 이전 : &lt;a href=&quot;_005fgfortran_005fcaf_005fis_005fpresent#g_t_005fgfortran_005fcaf_005fis_005fpresent&quot;&gt;_gfortran_caf_is_present&lt;/a&gt; , 위 : &lt;a href=&quot;function-abi-documentation#Function-ABI-Documentation&quot;&gt;기능 ABI 문서&lt;/a&gt; [ &lt;a href=&quot;index#SEC_Contents&quot;&gt;목차&lt;/a&gt; ] [ &lt;a href=&quot;https://gcc.gnu.org/onlinedocs/gcc-7.2.0/gfortran/Option-Index.html#Option-Index&quot;&gt;색인&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="47cdb49dc8cabbfdcfdd35e9da4e2fd349985cda" translate="yes" xml:space="preserve">
          <source>Next: &lt;a href=&quot;_005fgfortran_005fcaf_005fget_005fby_005fref#g_t_005fgfortran_005fcaf_005fget_005fby_005fref&quot;&gt;_gfortran_caf_get_by_ref&lt;/a&gt;, Previous: &lt;a href=&quot;_005fgfortran_005fcaf_005fsendget#g_t_005fgfortran_005fcaf_005fsendget&quot;&gt;_gfortran_caf_sendget&lt;/a&gt;, Up: &lt;a href=&quot;function-abi-documentation#Function-ABI-Documentation&quot;&gt;Function ABI Documentation&lt;/a&gt; [&lt;a href=&quot;index#SEC_Contents&quot;&gt;Contents&lt;/a&gt;][&lt;a href=&quot;https://gcc.gnu.org/onlinedocs/gcc-7.2.0/gfortran/Option-Index.html#Option-Index&quot;&gt;Index&lt;/a&gt;]</source>
          <target state="translated">다음 : &lt;a href=&quot;_005fgfortran_005fcaf_005fget_005fby_005fref#g_t_005fgfortran_005fcaf_005fget_005fby_005fref&quot;&gt;_gfortran_caf_get_by_ref&lt;/a&gt; , 이전 : &lt;a href=&quot;_005fgfortran_005fcaf_005fsendget#g_t_005fgfortran_005fcaf_005fsendget&quot;&gt;_gfortran_caf_sendget&lt;/a&gt; , 위 : &lt;a href=&quot;function-abi-documentation#Function-ABI-Documentation&quot;&gt;기능 ABI 문서&lt;/a&gt; [ &lt;a href=&quot;index#SEC_Contents&quot;&gt;목차&lt;/a&gt; ] [ &lt;a href=&quot;https://gcc.gnu.org/onlinedocs/gcc-7.2.0/gfortran/Option-Index.html#Option-Index&quot;&gt;색인&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="4468152963cbb0a33d455e84276e3840d5c57eb0" translate="yes" xml:space="preserve">
          <source>Next: &lt;a href=&quot;_005fgfortran_005fcaf_005flock#g_t_005fgfortran_005fcaf_005flock&quot;&gt;_gfortran_caf_lock&lt;/a&gt;, Previous: &lt;a href=&quot;_005fgfortran_005fcaf_005fget_005fby_005fref#g_t_005fgfortran_005fcaf_005fget_005fby_005fref&quot;&gt;_gfortran_caf_get_by_ref&lt;/a&gt;, Up: &lt;a href=&quot;function-abi-documentation#Function-ABI-Documentation&quot;&gt;Function ABI Documentation&lt;/a&gt; [&lt;a href=&quot;index#SEC_Contents&quot;&gt;Contents&lt;/a&gt;][&lt;a href=&quot;https://gcc.gnu.org/onlinedocs/gcc-7.2.0/gfortran/Option-Index.html#Option-Index&quot;&gt;Index&lt;/a&gt;]</source>
          <target state="translated">다음 : &lt;a href=&quot;_005fgfortran_005fcaf_005flock#g_t_005fgfortran_005fcaf_005flock&quot;&gt;_gfortran_caf_lock&lt;/a&gt; , 이전 : &lt;a href=&quot;_005fgfortran_005fcaf_005fget_005fby_005fref#g_t_005fgfortran_005fcaf_005fget_005fby_005fref&quot;&gt;_gfortran_caf_get_by_ref&lt;/a&gt; , 위 : &lt;a href=&quot;function-abi-documentation#Function-ABI-Documentation&quot;&gt;기능 ABI 문서&lt;/a&gt; [ &lt;a href=&quot;index#SEC_Contents&quot;&gt;목차&lt;/a&gt; ] [ &lt;a href=&quot;https://gcc.gnu.org/onlinedocs/gcc-7.2.0/gfortran/Option-Index.html#Option-Index&quot;&gt;색인&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="c40c85cc57c3c0a6f2c398d359c15b6a7569aa4e" translate="yes" xml:space="preserve">
          <source>Next: &lt;a href=&quot;_005fgfortran_005fcaf_005fsend_005fby_005fref#g_t_005fgfortran_005fcaf_005fsend_005fby_005fref&quot;&gt;_gfortran_caf_send_by_ref&lt;/a&gt;, Previous: &lt;a href=&quot;_005fgfortran_005fcaf_005fget#g_t_005fgfortran_005fcaf_005fget&quot;&gt;_gfortran_caf_get&lt;/a&gt;, Up: &lt;a href=&quot;function-abi-documentation#Function-ABI-Documentation&quot;&gt;Function ABI Documentation&lt;/a&gt; [&lt;a href=&quot;index#SEC_Contents&quot;&gt;Contents&lt;/a&gt;][&lt;a href=&quot;https://gcc.gnu.org/onlinedocs/gcc-7.2.0/gfortran/Option-Index.html#Option-Index&quot;&gt;Index&lt;/a&gt;]</source>
          <target state="translated">다음 : &lt;a href=&quot;_005fgfortran_005fcaf_005fsend_005fby_005fref#g_t_005fgfortran_005fcaf_005fsend_005fby_005fref&quot;&gt;_gfortran_caf_send_by_ref&lt;/a&gt; , 이전 : &lt;a href=&quot;_005fgfortran_005fcaf_005fget#g_t_005fgfortran_005fcaf_005fget&quot;&gt;_gfortran_caf_get&lt;/a&gt; , Up : &lt;a href=&quot;function-abi-documentation#Function-ABI-Documentation&quot;&gt;기능 ABI 문서&lt;/a&gt; [ &lt;a href=&quot;index#SEC_Contents&quot;&gt;목차&lt;/a&gt; ] [ &lt;a href=&quot;https://gcc.gnu.org/onlinedocs/gcc-7.2.0/gfortran/Option-Index.html#Option-Index&quot;&gt;색인&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="366d5e09ebddb4dd168832b386cd38bcf9d4d293" translate="yes" xml:space="preserve">
          <source>Next: &lt;a href=&quot;_005fgfortran_005fcaf_005fsendget#g_t_005fgfortran_005fcaf_005fsendget&quot;&gt;_gfortran_caf_sendget&lt;/a&gt;, Previous: &lt;a href=&quot;_005fgfortran_005fcaf_005fsend#g_t_005fgfortran_005fcaf_005fsend&quot;&gt;_gfortran_caf_send&lt;/a&gt;, Up: &lt;a href=&quot;function-abi-documentation#Function-ABI-Documentation&quot;&gt;Function ABI Documentation&lt;/a&gt; [&lt;a href=&quot;index#SEC_Contents&quot;&gt;Contents&lt;/a&gt;][&lt;a href=&quot;https://gcc.gnu.org/onlinedocs/gcc-7.2.0/gfortran/Option-Index.html#Option-Index&quot;&gt;Index&lt;/a&gt;]</source>
          <target state="translated">다음 : &lt;a href=&quot;_005fgfortran_005fcaf_005fsendget#g_t_005fgfortran_005fcaf_005fsendget&quot;&gt;_gfortran_caf_sendget&lt;/a&gt; , 이전 : &lt;a href=&quot;_005fgfortran_005fcaf_005fsend#g_t_005fgfortran_005fcaf_005fsend&quot;&gt;_gfortran_caf_send&lt;/a&gt; , Up : &lt;a href=&quot;function-abi-documentation#Function-ABI-Documentation&quot;&gt;기능 ABI 문서&lt;/a&gt; [ &lt;a href=&quot;index#SEC_Contents&quot;&gt;목차&lt;/a&gt; ] [ &lt;a href=&quot;https://gcc.gnu.org/onlinedocs/gcc-7.2.0/gfortran/Option-Index.html#Option-Index&quot;&gt;색인&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="3af12fd838b9a784474265cf423415a28545b855" translate="yes" xml:space="preserve">
          <source>Next: &lt;a href=&quot;_005fgfortran_005fcaf_005fsendget_005fby_005fref#g_t_005fgfortran_005fcaf_005fsendget_005fby_005fref&quot;&gt;_gfortran_caf_sendget_by_ref&lt;/a&gt;, Previous: &lt;a href=&quot;_005fgfortran_005fcaf_005fsend_005fby_005fref#g_t_005fgfortran_005fcaf_005fsend_005fby_005fref&quot;&gt;_gfortran_caf_send_by_ref&lt;/a&gt;, Up: &lt;a href=&quot;function-abi-documentation#Function-ABI-Documentation&quot;&gt;Function ABI Documentation&lt;/a&gt; [&lt;a href=&quot;index#SEC_Contents&quot;&gt;Contents&lt;/a&gt;][&lt;a href=&quot;https://gcc.gnu.org/onlinedocs/gcc-7.2.0/gfortran/Option-Index.html#Option-Index&quot;&gt;Index&lt;/a&gt;]</source>
          <target state="translated">다음 : &lt;a href=&quot;_005fgfortran_005fcaf_005fsendget_005fby_005fref#g_t_005fgfortran_005fcaf_005fsendget_005fby_005fref&quot;&gt;_gfortran_caf_sendget_by_ref&lt;/a&gt; , 이전 : &lt;a href=&quot;_005fgfortran_005fcaf_005fsend_005fby_005fref#g_t_005fgfortran_005fcaf_005fsend_005fby_005fref&quot;&gt;_gfortran_caf_send_by_ref&lt;/a&gt; , 위 : &lt;a href=&quot;function-abi-documentation#Function-ABI-Documentation&quot;&gt;기능 ABI 문서&lt;/a&gt; [ &lt;a href=&quot;index#SEC_Contents&quot;&gt;목차&lt;/a&gt; ] [ &lt;a href=&quot;https://gcc.gnu.org/onlinedocs/gcc-7.2.0/gfortran/Option-Index.html#Option-Index&quot;&gt;색인&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="06cc744f0d939286c7b9f1c3d89870b817d63206" translate="yes" xml:space="preserve">
          <source>Next: &lt;a href=&quot;_005fgfortran_005fset_005fconvert#g_t_005fgfortran_005fset_005fconvert&quot;&gt;_gfortran_set_convert&lt;/a&gt;, Previous: &lt;a href=&quot;_005fgfortran_005fset_005fargs#g_t_005fgfortran_005fset_005fargs&quot;&gt;_gfortran_set_args&lt;/a&gt;, Up: &lt;a href=&quot;non_002dfortran-main-program#Non_002dFortran-Main-Program&quot;&gt;Non-Fortran Main Program&lt;/a&gt; [&lt;a href=&quot;index#SEC_Contents&quot;&gt;Contents&lt;/a&gt;][&lt;a href=&quot;https://gcc.gnu.org/onlinedocs/gcc-7.2.0/gfortran/Option-Index.html#Option-Index&quot;&gt;Index&lt;/a&gt;]</source>
          <target state="translated">다음 : &lt;a href=&quot;_005fgfortran_005fset_005fconvert#g_t_005fgfortran_005fset_005fconvert&quot;&gt;_gfortran_set_convert&lt;/a&gt; , 이전 : &lt;a href=&quot;_005fgfortran_005fset_005fargs#g_t_005fgfortran_005fset_005fargs&quot;&gt;_gfortran_set_args&lt;/a&gt; , 위 : &lt;a href=&quot;non_002dfortran-main-program#Non_002dFortran-Main-Program&quot;&gt;비 Fortran 주 프로그램&lt;/a&gt; [ &lt;a href=&quot;index#SEC_Contents&quot;&gt;목차&lt;/a&gt; ] [ &lt;a href=&quot;https://gcc.gnu.org/onlinedocs/gcc-7.2.0/gfortran/Option-Index.html#Option-Index&quot;&gt;색인&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="fa95d0941621698e032728314f9cf103c607303d" translate="yes" xml:space="preserve">
          <source>Next: &lt;a href=&quot;abort#ABORT&quot;&gt;ABORT&lt;/a&gt;, Up: &lt;a href=&quot;intrinsic-procedures#Intrinsic-Procedures&quot;&gt;Intrinsic Procedures&lt;/a&gt; [&lt;a href=&quot;index#SEC_Contents&quot;&gt;Contents&lt;/a&gt;][&lt;a href=&quot;https://gcc.gnu.org/onlinedocs/gcc-7.2.0/gfortran/Option-Index.html#Option-Index&quot;&gt;Index&lt;/a&gt;]</source>
          <target state="translated">다음 : &lt;a href=&quot;abort#ABORT&quot;&gt;ABORT&lt;/a&gt; , 위로 : &lt;a href=&quot;intrinsic-procedures#Intrinsic-Procedures&quot;&gt;본질적 절차&lt;/a&gt; [ &lt;a href=&quot;index#SEC_Contents&quot;&gt;목차&lt;/a&gt; ] [ &lt;a href=&quot;https://gcc.gnu.org/onlinedocs/gcc-7.2.0/gfortran/Option-Index.html#Option-Index&quot;&gt;색인&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="113616f69a25ba977bc4ed8e44991a040c579ebc" translate="yes" xml:space="preserve">
          <source>Next: &lt;a href=&quot;allocated#ALLOCATED&quot;&gt;ALLOCATED&lt;/a&gt;, Previous: &lt;a href=&quot;alarm#ALARM&quot;&gt;ALARM&lt;/a&gt;, Up: &lt;a href=&quot;intrinsic-procedures#Intrinsic-Procedures&quot;&gt;Intrinsic Procedures&lt;/a&gt; [&lt;a href=&quot;index#SEC_Contents&quot;&gt;Contents&lt;/a&gt;][&lt;a href=&quot;https://gcc.gnu.org/onlinedocs/gcc-7.2.0/gfortran/Option-Index.html#Option-Index&quot;&gt;Index&lt;/a&gt;]</source>
          <target state="translated">다음 : &lt;a href=&quot;allocated#ALLOCATED&quot;&gt;ALLOCATED&lt;/a&gt; , 이전 : &lt;a href=&quot;alarm#ALARM&quot;&gt;ALARM&lt;/a&gt; , 위로 : &lt;a href=&quot;intrinsic-procedures#Intrinsic-Procedures&quot;&gt;고유 프로 시저&lt;/a&gt; [ &lt;a href=&quot;index#SEC_Contents&quot;&gt;목차&lt;/a&gt; ] [ &lt;a href=&quot;https://gcc.gnu.org/onlinedocs/gcc-7.2.0/gfortran/Option-Index.html#Option-Index&quot;&gt;색인&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="7b3efb9a98aa546228dc8c534e4820754dcc8d18" translate="yes" xml:space="preserve">
          <source>Next: &lt;a href=&quot;asin#ASIN&quot;&gt;ASIN&lt;/a&gt;, Previous: &lt;a href=&quot;anint#ANINT&quot;&gt;ANINT&lt;/a&gt;, Up: &lt;a href=&quot;intrinsic-procedures#Intrinsic-Procedures&quot;&gt;Intrinsic Procedures&lt;/a&gt; [&lt;a href=&quot;index#SEC_Contents&quot;&gt;Contents&lt;/a&gt;][&lt;a href=&quot;https://gcc.gnu.org/onlinedocs/gcc-7.2.0/gfortran/Option-Index.html#Option-Index&quot;&gt;Index&lt;/a&gt;]</source>
          <target state="translated">다음 : &lt;a href=&quot;asin#ASIN&quot;&gt;ASIN&lt;/a&gt; , 이전 : &lt;a href=&quot;anint#ANINT&quot;&gt;ANINT&lt;/a&gt; , 위 : &lt;a href=&quot;intrinsic-procedures#Intrinsic-Procedures&quot;&gt;고유 프로 시저&lt;/a&gt; [ &lt;a href=&quot;index#SEC_Contents&quot;&gt;목차&lt;/a&gt; ] [ &lt;a href=&quot;https://gcc.gnu.org/onlinedocs/gcc-7.2.0/gfortran/Option-Index.html#Option-Index&quot;&gt;색인&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="d722cb2a86eb63da1cf32401227c151d8c600ba9" translate="yes" xml:space="preserve">
          <source>Next: &lt;a href=&quot;atan#ATAN&quot;&gt;ATAN&lt;/a&gt;, Previous: &lt;a href=&quot;asinh#ASINH&quot;&gt;ASINH&lt;/a&gt;, Up: &lt;a href=&quot;intrinsic-procedures#Intrinsic-Procedures&quot;&gt;Intrinsic Procedures&lt;/a&gt; [&lt;a href=&quot;index#SEC_Contents&quot;&gt;Contents&lt;/a&gt;][&lt;a href=&quot;https://gcc.gnu.org/onlinedocs/gcc-7.2.0/gfortran/Option-Index.html#Option-Index&quot;&gt;Index&lt;/a&gt;]</source>
          <target state="translated">다음 : &lt;a href=&quot;atan#ATAN&quot;&gt;ATAN&lt;/a&gt; , 이전 : &lt;a href=&quot;asinh#ASINH&quot;&gt;ASINH&lt;/a&gt; , Up : &lt;a href=&quot;intrinsic-procedures#Intrinsic-Procedures&quot;&gt;고유 프로 시저&lt;/a&gt; [ &lt;a href=&quot;index#SEC_Contents&quot;&gt;목차&lt;/a&gt; ] [ &lt;a href=&quot;https://gcc.gnu.org/onlinedocs/gcc-7.2.0/gfortran/Option-Index.html#Option-Index&quot;&gt;색인&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="5806a2f4848b6e9929ce07735bc8f2360bc54886" translate="yes" xml:space="preserve">
          <source>Next: &lt;a href=&quot;atan2d#ATAN2D&quot;&gt;ATAN2D&lt;/a&gt;, Previous: &lt;a href=&quot;atand#ATAND&quot;&gt;ATAND&lt;/a&gt;, Up: &lt;a href=&quot;intrinsic-procedures#Intrinsic-Procedures&quot;&gt;Intrinsic Procedures&lt;/a&gt; [&lt;a href=&quot;index#SEC_Contents&quot;&gt;Contents&lt;/a&gt;][&lt;a href=&quot;https://gcc.gnu.org/onlinedocs/gcc-7.2.0/gfortran/Option-Index.html#Option-Index&quot;&gt;Index&lt;/a&gt;]</source>
          <target state="translated">다음 : &lt;a href=&quot;atan2d#ATAN2D&quot;&gt;ATAN2D&lt;/a&gt; , 이전 : &lt;a href=&quot;atand#ATAND&quot;&gt;ATAND&lt;/a&gt; , Up : &lt;a href=&quot;intrinsic-procedures#Intrinsic-Procedures&quot;&gt;고유 프로 시저&lt;/a&gt; [ &lt;a href=&quot;index#SEC_Contents&quot;&gt;목차&lt;/a&gt; ] [ &lt;a href=&quot;https://gcc.gnu.org/onlinedocs/gcc-7.2.0/gfortran/Option-Index.html#Option-Index&quot;&gt;색인&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="bcbca989d5381c211efcce4ace6e641e5f9aa755" translate="yes" xml:space="preserve">
          <source>Next: &lt;a href=&quot;atanh#ATANH&quot;&gt;ATANH&lt;/a&gt;, Previous: &lt;a href=&quot;atan2#ATAN2&quot;&gt;ATAN2&lt;/a&gt;, Up: &lt;a href=&quot;intrinsic-procedures#Intrinsic-Procedures&quot;&gt;Intrinsic Procedures&lt;/a&gt; [&lt;a href=&quot;index#SEC_Contents&quot;&gt;Contents&lt;/a&gt;][&lt;a href=&quot;https://gcc.gnu.org/onlinedocs/gcc-7.2.0/gfortran/Option-Index.html#Option-Index&quot;&gt;Index&lt;/a&gt;]</source>
          <target state="translated">다음 : &lt;a href=&quot;atanh#ATANH&quot;&gt;ATANH&lt;/a&gt; , 이전 : &lt;a href=&quot;atan2#ATAN2&quot;&gt;ATAN2&lt;/a&gt; , Up : &lt;a href=&quot;intrinsic-procedures#Intrinsic-Procedures&quot;&gt;고유 프로 시저&lt;/a&gt; [ &lt;a href=&quot;index#SEC_Contents&quot;&gt;목차&lt;/a&gt; ] [ &lt;a href=&quot;https://gcc.gnu.org/onlinedocs/gcc-7.2.0/gfortran/Option-Index.html#Option-Index&quot;&gt;색인&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="f45b258dcda7777e9ea75a7b58eb3f03a6e1c931" translate="yes" xml:space="preserve">
          <source>Next: &lt;a href=&quot;bessel_005fy0#BESSEL_005fY0&quot;&gt;BESSEL_Y0&lt;/a&gt;, Previous: &lt;a href=&quot;bessel_005fj1#BESSEL_005fJ1&quot;&gt;BESSEL_J1&lt;/a&gt;, Up: &lt;a href=&quot;intrinsic-procedures#Intrinsic-Procedures&quot;&gt;Intrinsic Procedures&lt;/a&gt; [&lt;a href=&quot;index#SEC_Contents&quot;&gt;Contents&lt;/a&gt;][&lt;a href=&quot;https://gcc.gnu.org/onlinedocs/gcc-7.2.0/gfortran/Option-Index.html#Option-Index&quot;&gt;Index&lt;/a&gt;]</source>
          <target state="translated">다음 : &lt;a href=&quot;bessel_005fy0#BESSEL_005fY0&quot;&gt;BESSEL_Y0&lt;/a&gt; , 이전 : &lt;a href=&quot;bessel_005fj1#BESSEL_005fJ1&quot;&gt;BESSEL_J1&lt;/a&gt; , Up : &lt;a href=&quot;intrinsic-procedures#Intrinsic-Procedures&quot;&gt;고유 프로 시저&lt;/a&gt; [ &lt;a href=&quot;index#SEC_Contents&quot;&gt;목차&lt;/a&gt; ] [ &lt;a href=&quot;https://gcc.gnu.org/onlinedocs/gcc-7.2.0/gfortran/Option-Index.html#Option-Index&quot;&gt;색인&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="9328720fbee8aa402f1dd5fda1da0852291d1f86" translate="yes" xml:space="preserve">
          <source>Next: &lt;a href=&quot;bge#BGE&quot;&gt;BGE&lt;/a&gt;, Previous: &lt;a href=&quot;bessel_005fy1#BESSEL_005fY1&quot;&gt;BESSEL_Y1&lt;/a&gt;, Up: &lt;a href=&quot;intrinsic-procedures#Intrinsic-Procedures&quot;&gt;Intrinsic Procedures&lt;/a&gt; [&lt;a href=&quot;index#SEC_Contents&quot;&gt;Contents&lt;/a&gt;][&lt;a href=&quot;https://gcc.gnu.org/onlinedocs/gcc-7.2.0/gfortran/Option-Index.html#Option-Index&quot;&gt;Index&lt;/a&gt;]</source>
          <target state="translated">다음 : &lt;a href=&quot;bge#BGE&quot;&gt;BGE&lt;/a&gt; , 이전 : &lt;a href=&quot;bessel_005fy1#BESSEL_005fY1&quot;&gt;BESSEL_Y1&lt;/a&gt; , 위로 : &lt;a href=&quot;intrinsic-procedures#Intrinsic-Procedures&quot;&gt;고유 프로 시저&lt;/a&gt; [ &lt;a href=&quot;index#SEC_Contents&quot;&gt;목차&lt;/a&gt; ] [ &lt;a href=&quot;https://gcc.gnu.org/onlinedocs/gcc-7.2.0/gfortran/Option-Index.html#Option-Index&quot;&gt;색인&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="855f40c68e434eea615c437a1f07824481d6fe54" translate="yes" xml:space="preserve">
          <source>Next: &lt;a href=&quot;caf_005fteam_005ft#caf_005fteam_005ft&quot;&gt;caf_team_t&lt;/a&gt;, Previous: &lt;a href=&quot;caf_005fderegister_005ft#caf_005fderegister_005ft&quot;&gt;caf_deregister_t&lt;/a&gt;, Up: &lt;a href=&quot;type-and-enum-abi-documentation#Type-and-enum-ABI-Documentation&quot;&gt;Type and enum ABI Documentation&lt;/a&gt; [&lt;a href=&quot;index#SEC_Contents&quot;&gt;Contents&lt;/a&gt;][&lt;a href=&quot;https://gcc.gnu.org/onlinedocs/gcc-7.2.0/gfortran/Option-Index.html#Option-Index&quot;&gt;Index&lt;/a&gt;]</source>
          <target state="translated">다음 : &lt;a href=&quot;caf_005fteam_005ft#caf_005fteam_005ft&quot;&gt;caf_team_t&lt;/a&gt; , 이전 : &lt;a href=&quot;caf_005fderegister_005ft#caf_005fderegister_005ft&quot;&gt;caf_deregister_t&lt;/a&gt; , Up : &lt;a href=&quot;type-and-enum-abi-documentation#Type-and-enum-ABI-Documentation&quot;&gt;ABI 문서 유형 및 열거&lt;/a&gt; [ &lt;a href=&quot;index#SEC_Contents&quot;&gt;목차&lt;/a&gt; ] [ &lt;a href=&quot;https://gcc.gnu.org/onlinedocs/gcc-7.2.0/gfortran/Option-Index.html#Option-Index&quot;&gt;색인&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="8e5b578eb4c109ee291f237782d49ab010354cf1" translate="yes" xml:space="preserve">
          <source>Next: &lt;a href=&quot;co_005fsum#CO_005fSUM&quot;&gt;CO_SUM&lt;/a&gt;, Previous: &lt;a href=&quot;co_005fmin#CO_005fMIN&quot;&gt;CO_MIN&lt;/a&gt;, Up: &lt;a href=&quot;intrinsic-procedures#Intrinsic-Procedures&quot;&gt;Intrinsic Procedures&lt;/a&gt; [&lt;a href=&quot;index#SEC_Contents&quot;&gt;Contents&lt;/a&gt;][&lt;a href=&quot;https://gcc.gnu.org/onlinedocs/gcc-7.2.0/gfortran/Option-Index.html#Option-Index&quot;&gt;Index&lt;/a&gt;]</source>
          <target state="translated">다음 : &lt;a href=&quot;co_005fsum#CO_005fSUM&quot;&gt;CO_SUM&lt;/a&gt; , 이전 : &lt;a href=&quot;co_005fmin#CO_005fMIN&quot;&gt;CO_MIN&lt;/a&gt; , 위로 : &lt;a href=&quot;intrinsic-procedures#Intrinsic-Procedures&quot;&gt;고유 프로 시저&lt;/a&gt; [ &lt;a href=&quot;index#SEC_Contents&quot;&gt;목차&lt;/a&gt; ] [ &lt;a href=&quot;https://gcc.gnu.org/onlinedocs/gcc-7.2.0/gfortran/Option-Index.html#Option-Index&quot;&gt;색인&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="a602a95ce3e2f9213c2bc6f3c134a27f16a9cef7" translate="yes" xml:space="preserve">
          <source>Next: &lt;a href=&quot;convert-specifier#CONVERT-specifier&quot;&gt;CONVERT specifier&lt;/a&gt;, Previous: &lt;a href=&quot;hollerith-constants-support#Hollerith-constants-support&quot;&gt;Hollerith constants support&lt;/a&gt;, Up: &lt;a href=&quot;extensions-implemented-in-gnu-fortran#Extensions-implemented-in-GNU-Fortran&quot;&gt;Extensions implemented in GNU Fortran&lt;/a&gt; [&lt;a href=&quot;index#SEC_Contents&quot;&gt;Contents&lt;/a&gt;][&lt;a href=&quot;https://gcc.gnu.org/onlinedocs/gcc-7.2.0/gfortran/Option-Index.html#Option-Index&quot;&gt;Index&lt;/a&gt;]</source>
          <target state="translated">다음 : &lt;a href=&quot;convert-specifier#CONVERT-specifier&quot;&gt;CONVERT 지정자&lt;/a&gt; , 이전 : &lt;a href=&quot;hollerith-constants-support#Hollerith-constants-support&quot;&gt;Hollerith 상수 지원&lt;/a&gt; , Up : &lt;a href=&quot;extensions-implemented-in-gnu-fortran#Extensions-implemented-in-GNU-Fortran&quot;&gt;GNU Fortran에서 구현 된 확장&lt;/a&gt; [ &lt;a href=&quot;index#SEC_Contents&quot;&gt;Contents&lt;/a&gt; ] [ &lt;a href=&quot;https://gcc.gnu.org/onlinedocs/gcc-7.2.0/gfortran/Option-Index.html#Option-Index&quot;&gt;Index&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="4486b6804aff2861fd5af69f9387c57eb5b04f6b" translate="yes" xml:space="preserve">
          <source>Next: &lt;a href=&quot;cpu_005ftime#CPU_005fTIME&quot;&gt;CPU_TIME&lt;/a&gt;, Previous: &lt;a href=&quot;cotand#COTAND&quot;&gt;COTAND&lt;/a&gt;, Up: &lt;a href=&quot;intrinsic-procedures#Intrinsic-Procedures&quot;&gt;Intrinsic Procedures&lt;/a&gt; [&lt;a href=&quot;index#SEC_Contents&quot;&gt;Contents&lt;/a&gt;][&lt;a href=&quot;https://gcc.gnu.org/onlinedocs/gcc-7.2.0/gfortran/Option-Index.html#Option-Index&quot;&gt;Index&lt;/a&gt;]</source>
          <target state="translated">다음 : &lt;a href=&quot;cpu_005ftime#CPU_005fTIME&quot;&gt;CPU_TIME&lt;/a&gt; , 이전 : &lt;a href=&quot;cotand#COTAND&quot;&gt;COTAND&lt;/a&gt; , Up : &lt;a href=&quot;intrinsic-procedures#Intrinsic-Procedures&quot;&gt;고유 프로 시저&lt;/a&gt; [ &lt;a href=&quot;index#SEC_Contents&quot;&gt;목차&lt;/a&gt; ] [ &lt;a href=&quot;https://gcc.gnu.org/onlinedocs/gcc-7.2.0/gfortran/Option-Index.html#Option-Index&quot;&gt;색인&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="b6c80f7937e8156fe1d3bf506d0ee98a82f3c692" translate="yes" xml:space="preserve">
          <source>Next: &lt;a href=&quot;data-consistency-and-durability#Data-consistency-and-durability&quot;&gt;Data consistency and durability&lt;/a&gt;, Previous: &lt;a href=&quot;internal-representation-of-logical-variables#Internal-representation-of-LOGICAL-variables&quot;&gt;Internal representation of LOGICAL variables&lt;/a&gt;, Up: &lt;a href=&quot;compiler-characteristics#Compiler-Characteristics&quot;&gt;Compiler Characteristics&lt;/a&gt; [&lt;a href=&quot;index#SEC_Contents&quot;&gt;Contents&lt;/a&gt;][&lt;a href=&quot;https://gcc.gnu.org/onlinedocs/gcc-7.2.0/gfortran/Option-Index.html#Option-Index&quot;&gt;Index&lt;/a&gt;]</source>
          <target state="translated">다음 : &lt;a href=&quot;data-consistency-and-durability#Data-consistency-and-durability&quot;&gt;데이터 일관성 및 내구성&lt;/a&gt; , 이전 : &lt;a href=&quot;internal-representation-of-logical-variables#Internal-representation-of-LOGICAL-variables&quot;&gt;LOGICAL 변수의 내부 표현&lt;/a&gt; , 위 : &lt;a href=&quot;compiler-characteristics#Compiler-Characteristics&quot;&gt;컴파일러 특성&lt;/a&gt; [ &lt;a href=&quot;index#SEC_Contents&quot;&gt;목차&lt;/a&gt; ] [ &lt;a href=&quot;https://gcc.gnu.org/onlinedocs/gcc-7.2.0/gfortran/Option-Index.html#Option-Index&quot;&gt;색인&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="f5236680a1a25af7492127615eaa073e60f2c47d" translate="yes" xml:space="preserve">
          <source>Next: &lt;a href=&quot;dble#DBLE&quot;&gt;DBLE&lt;/a&gt;, Previous: &lt;a href=&quot;ctime#CTIME&quot;&gt;CTIME&lt;/a&gt;, Up: &lt;a href=&quot;intrinsic-procedures#Intrinsic-Procedures&quot;&gt;Intrinsic Procedures&lt;/a&gt; [&lt;a href=&quot;index#SEC_Contents&quot;&gt;Contents&lt;/a&gt;][&lt;a href=&quot;https://gcc.gnu.org/onlinedocs/gcc-7.2.0/gfortran/Option-Index.html#Option-Index&quot;&gt;Index&lt;/a&gt;]</source>
          <target state="translated">다음 : &lt;a href=&quot;dble#DBLE&quot;&gt;DBLE&lt;/a&gt; , 이전 : &lt;a href=&quot;ctime#CTIME&quot;&gt;CTIME&lt;/a&gt; , Up : &lt;a href=&quot;intrinsic-procedures#Intrinsic-Procedures&quot;&gt;고유 프로 시저&lt;/a&gt; [ &lt;a href=&quot;index#SEC_Contents&quot;&gt;목차&lt;/a&gt; ] [ &lt;a href=&quot;https://gcc.gnu.org/onlinedocs/gcc-7.2.0/gfortran/Option-Index.html#Option-Index&quot;&gt;색인&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="a9c6b19dcb95ee53efce009387b881286a084c40" translate="yes" xml:space="preserve">
          <source>Next: &lt;a href=&quot;debugging-options#Debugging-Options&quot;&gt;Debugging Options&lt;/a&gt;, Previous: &lt;a href=&quot;preprocessing-options#Preprocessing-Options&quot;&gt;Preprocessing Options&lt;/a&gt;, Up: &lt;a href=&quot;invoking-gnu-fortran#Invoking-GNU-Fortran&quot;&gt;Invoking GNU Fortran&lt;/a&gt; [&lt;a href=&quot;index#SEC_Contents&quot;&gt;Contents&lt;/a&gt;][&lt;a href=&quot;https://gcc.gnu.org/onlinedocs/gcc-7.2.0/gfortran/Option-Index.html#Option-Index&quot;&gt;Index&lt;/a&gt;]</source>
          <target state="translated">다음 : &lt;a href=&quot;debugging-options#Debugging-Options&quot;&gt;디버깅 옵션&lt;/a&gt; , 이전 : &lt;a href=&quot;preprocessing-options#Preprocessing-Options&quot;&gt;전처리 옵션&lt;/a&gt; , 위로 : &lt;a href=&quot;invoking-gnu-fortran#Invoking-GNU-Fortran&quot;&gt;GNU Fortran 호출&lt;/a&gt; [ &lt;a href=&quot;index#SEC_Contents&quot;&gt;목차&lt;/a&gt; ] [ &lt;a href=&quot;https://gcc.gnu.org/onlinedocs/gcc-7.2.0/gfortran/Option-Index.html#Option-Index&quot;&gt;색인&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="deb7154ae12b45c2fcbb40d9aee27bd557b5fe58" translate="yes" xml:space="preserve">
          <source>Next: &lt;a href=&quot;directory-options#Directory-Options&quot;&gt;Directory Options&lt;/a&gt;, Previous: &lt;a href=&quot;error-and-warning-options#Error-and-Warning-Options&quot;&gt;Error and Warning Options&lt;/a&gt;, Up: &lt;a href=&quot;invoking-gnu-fortran#Invoking-GNU-Fortran&quot;&gt;Invoking GNU Fortran&lt;/a&gt; [&lt;a href=&quot;index#SEC_Contents&quot;&gt;Contents&lt;/a&gt;][&lt;a href=&quot;https://gcc.gnu.org/onlinedocs/gcc-7.2.0/gfortran/Option-Index.html#Option-Index&quot;&gt;Index&lt;/a&gt;]</source>
          <target state="translated">다음 : &lt;a href=&quot;directory-options#Directory-Options&quot;&gt;디렉토리 옵션&lt;/a&gt; , 이전 : &lt;a href=&quot;error-and-warning-options#Error-and-Warning-Options&quot;&gt;오류 및 경고 옵션&lt;/a&gt; , 위로 : &lt;a href=&quot;invoking-gnu-fortran#Invoking-GNU-Fortran&quot;&gt;GNU Fortran 호출&lt;/a&gt; [ &lt;a href=&quot;index#SEC_Contents&quot;&gt;목차&lt;/a&gt; ] [ &lt;a href=&quot;https://gcc.gnu.org/onlinedocs/gcc-7.2.0/gfortran/Option-Index.html#Option-Index&quot;&gt;색인&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="f6811d04595fdb9b0a76b58cfaf89e299a015b6a" translate="yes" xml:space="preserve">
          <source>Next: &lt;a href=&quot;environment-variables#Environment-Variables&quot;&gt;Environment Variables&lt;/a&gt;, Previous: &lt;a href=&quot;runtime-options#Runtime-Options&quot;&gt;Runtime Options&lt;/a&gt;, Up: &lt;a href=&quot;invoking-gnu-fortran#Invoking-GNU-Fortran&quot;&gt;Invoking GNU Fortran&lt;/a&gt; [&lt;a href=&quot;index#SEC_Contents&quot;&gt;Contents&lt;/a&gt;][&lt;a href=&quot;https://gcc.gnu.org/onlinedocs/gcc-7.2.0/gfortran/Option-Index.html#Option-Index&quot;&gt;Index&lt;/a&gt;]</source>
          <target state="translated">다음 : &lt;a href=&quot;environment-variables#Environment-Variables&quot;&gt;환경 변수&lt;/a&gt; , 이전 : &lt;a href=&quot;runtime-options#Runtime-Options&quot;&gt;런타임 옵션&lt;/a&gt; , 위로 : &lt;a href=&quot;invoking-gnu-fortran#Invoking-GNU-Fortran&quot;&gt;GNU Fortran 호출&lt;/a&gt; [ &lt;a href=&quot;index#SEC_Contents&quot;&gt;목차&lt;/a&gt; ] [ &lt;a href=&quot;https://gcc.gnu.org/onlinedocs/gcc-7.2.0/gfortran/Option-Index.html#Option-Index&quot;&gt;색인&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="153ac1d60f9134fd871a7a8576b90e9978f5fedd" translate="yes" xml:space="preserve">
          <source>Next: &lt;a href=&quot;eoshift#EOSHIFT&quot;&gt;EOSHIFT&lt;/a&gt;, Previous: &lt;a href=&quot;dshiftr#DSHIFTR&quot;&gt;DSHIFTR&lt;/a&gt;, Up: &lt;a href=&quot;intrinsic-procedures#Intrinsic-Procedures&quot;&gt;Intrinsic Procedures&lt;/a&gt; [&lt;a href=&quot;index#SEC_Contents&quot;&gt;Contents&lt;/a&gt;][&lt;a href=&quot;https://gcc.gnu.org/onlinedocs/gcc-7.2.0/gfortran/Option-Index.html#Option-Index&quot;&gt;Index&lt;/a&gt;]</source>
          <target state="translated">다음 : &lt;a href=&quot;eoshift#EOSHIFT&quot;&gt;EOSHIFT&lt;/a&gt; , 이전 : &lt;a href=&quot;dshiftr#DSHIFTR&quot;&gt;DSHIFTR&lt;/a&gt; , 위로 : &lt;a href=&quot;intrinsic-procedures#Intrinsic-Procedures&quot;&gt;본질적 절차&lt;/a&gt; [ &lt;a href=&quot;index#SEC_Contents&quot;&gt;목차&lt;/a&gt; ] [ &lt;a href=&quot;https://gcc.gnu.org/onlinedocs/gcc-7.2.0/gfortran/Option-Index.html#Option-Index&quot;&gt;색인&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="9f455134c0e1a3802c65ace55eac72dde631f791" translate="yes" xml:space="preserve">
          <source>Next: &lt;a href=&quot;epsilon#EPSILON&quot;&gt;EPSILON&lt;/a&gt;, Previous: &lt;a href=&quot;dtime#DTIME&quot;&gt;DTIME&lt;/a&gt;, Up: &lt;a href=&quot;intrinsic-procedures#Intrinsic-Procedures&quot;&gt;Intrinsic Procedures&lt;/a&gt; [&lt;a href=&quot;index#SEC_Contents&quot;&gt;Contents&lt;/a&gt;][&lt;a href=&quot;https://gcc.gnu.org/onlinedocs/gcc-7.2.0/gfortran/Option-Index.html#Option-Index&quot;&gt;Index&lt;/a&gt;]</source>
          <target state="translated">다음 : &lt;a href=&quot;epsilon#EPSILON&quot;&gt;EPSILON&lt;/a&gt; , 이전 : &lt;a href=&quot;dtime#DTIME&quot;&gt;DTIME&lt;/a&gt; , Up : &lt;a href=&quot;intrinsic-procedures#Intrinsic-Procedures&quot;&gt;고유 프로 시저&lt;/a&gt; [ &lt;a href=&quot;index#SEC_Contents&quot;&gt;목차&lt;/a&gt; ] [ &lt;a href=&quot;https://gcc.gnu.org/onlinedocs/gcc-7.2.0/gfortran/Option-Index.html#Option-Index&quot;&gt;색인&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="b75c5b2d82dc8c476574a559d175a43352f7c851" translate="yes" xml:space="preserve">
          <source>Next: &lt;a href=&quot;error-and-warning-options#Error-and-Warning-Options&quot;&gt;Error and Warning Options&lt;/a&gt;, Previous: &lt;a href=&quot;fortran-dialect-options#Fortran-Dialect-Options&quot;&gt;Fortran Dialect Options&lt;/a&gt;, Up: &lt;a href=&quot;invoking-gnu-fortran#Invoking-GNU-Fortran&quot;&gt;Invoking GNU Fortran&lt;/a&gt; [&lt;a href=&quot;index#SEC_Contents&quot;&gt;Contents&lt;/a&gt;][&lt;a href=&quot;https://gcc.gnu.org/onlinedocs/gcc-7.2.0/gfortran/Option-Index.html#Option-Index&quot;&gt;Index&lt;/a&gt;]</source>
          <target state="translated">다음 : &lt;a href=&quot;error-and-warning-options#Error-and-Warning-Options&quot;&gt;오류 및 경고 옵션&lt;/a&gt; , 이전 : &lt;a href=&quot;fortran-dialect-options#Fortran-Dialect-Options&quot;&gt;Fortran Dialect 옵션&lt;/a&gt; , 위로 : &lt;a href=&quot;invoking-gnu-fortran#Invoking-GNU-Fortran&quot;&gt;GNU Fortran 호출&lt;/a&gt; [ &lt;a href=&quot;index#SEC_Contents&quot;&gt;목차&lt;/a&gt; ] [ &lt;a href=&quot;https://gcc.gnu.org/onlinedocs/gcc-7.2.0/gfortran/Option-Index.html#Option-Index&quot;&gt;색인&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="dcca43a265bd6b79dc9a5578b4b6a31b52319057" translate="yes" xml:space="preserve">
          <source>Next: &lt;a href=&quot;event_005fquery#EVENT_005fQUERY&quot;&gt;EVENT_QUERY&lt;/a&gt;, Previous: &lt;a href=&quot;erfc_005fscaled#ERFC_005fSCALED&quot;&gt;ERFC_SCALED&lt;/a&gt;, Up: &lt;a href=&quot;intrinsic-procedures#Intrinsic-Procedures&quot;&gt;Intrinsic Procedures&lt;/a&gt; [&lt;a href=&quot;index#SEC_Contents&quot;&gt;Contents&lt;/a&gt;][&lt;a href=&quot;https://gcc.gnu.org/onlinedocs/gcc-7.2.0/gfortran/Option-Index.html#Option-Index&quot;&gt;Index&lt;/a&gt;]</source>
          <target state="translated">다음 : &lt;a href=&quot;event_005fquery#EVENT_005fQUERY&quot;&gt;EVENT_QUERY&lt;/a&gt; , 이전 : &lt;a href=&quot;erfc_005fscaled#ERFC_005fSCALED&quot;&gt;ERFC_SCALED&lt;/a&gt; , Up : &lt;a href=&quot;intrinsic-procedures#Intrinsic-Procedures&quot;&gt;고유 프로 시저&lt;/a&gt; [ &lt;a href=&quot;index#SEC_Contents&quot;&gt;목차&lt;/a&gt; ] [ &lt;a href=&quot;https://gcc.gnu.org/onlinedocs/gcc-7.2.0/gfortran/Option-Index.html#Option-Index&quot;&gt;색인&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="4c0ed4b16c724503593d427e936c8ddd34cca819" translate="yes" xml:space="preserve">
          <source>Next: &lt;a href=&quot;exit#EXIT&quot;&gt;EXIT&lt;/a&gt;, Previous: &lt;a href=&quot;event_005fquery#EVENT_005fQUERY&quot;&gt;EVENT_QUERY&lt;/a&gt;, Up: &lt;a href=&quot;intrinsic-procedures#Intrinsic-Procedures&quot;&gt;Intrinsic Procedures&lt;/a&gt; [&lt;a href=&quot;index#SEC_Contents&quot;&gt;Contents&lt;/a&gt;][&lt;a href=&quot;https://gcc.gnu.org/onlinedocs/gcc-7.2.0/gfortran/Option-Index.html#Option-Index&quot;&gt;Index&lt;/a&gt;]</source>
          <target state="translated">다음 : &lt;a href=&quot;exit#EXIT&quot;&gt;EXIT&lt;/a&gt; , 이전 : &lt;a href=&quot;event_005fquery#EVENT_005fQUERY&quot;&gt;EVENT_QUERY&lt;/a&gt; , Up : &lt;a href=&quot;intrinsic-procedures#Intrinsic-Procedures&quot;&gt;고유 프로 시저&lt;/a&gt; [ &lt;a href=&quot;index#SEC_Contents&quot;&gt;목차&lt;/a&gt; ] [ &lt;a href=&quot;https://gcc.gnu.org/onlinedocs/gcc-7.2.0/gfortran/Option-Index.html#Option-Index&quot;&gt;색인&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="ec23025f9230ca3477538b9b24fb444ffe08ab89" translate="yes" xml:space="preserve">
          <source>Next: &lt;a href=&quot;extensions-not-implemented-in-gnu-fortran#Extensions-not-implemented-in-GNU-Fortran&quot;&gt;Extensions not implemented in GNU Fortran&lt;/a&gt;, Up: &lt;a href=&quot;extensions#Extensions&quot;&gt;Extensions&lt;/a&gt; [&lt;a href=&quot;index#SEC_Contents&quot;&gt;Contents&lt;/a&gt;][&lt;a href=&quot;https://gcc.gnu.org/onlinedocs/gcc-7.2.0/gfortran/Option-Index.html#Option-Index&quot;&gt;Index&lt;/a&gt;]</source>
          <target state="translated">다음 : &lt;a href=&quot;extensions-not-implemented-in-gnu-fortran#Extensions-not-implemented-in-GNU-Fortran&quot;&gt;GNU Fortran에서 구현되지 않은 확장&lt;/a&gt; , 업 : &lt;a href=&quot;extensions#Extensions&quot;&gt;확장&lt;/a&gt; [ &lt;a href=&quot;index#SEC_Contents&quot;&gt;목차&lt;/a&gt; ] [ &lt;a href=&quot;https://gcc.gnu.org/onlinedocs/gcc-7.2.0/gfortran/Option-Index.html#Option-Index&quot;&gt;색인&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="46848c5bcd926a6ede97d9695f06da76a3c20a54" translate="yes" xml:space="preserve">
          <source>Next: &lt;a href=&quot;files-opened-without-an-explicit-action_003d-specifier#Files-opened-without-an-explicit-ACTION_003d-specifier&quot;&gt;Files opened without an explicit ACTION= specifier&lt;/a&gt;, Previous: &lt;a href=&quot;thread_002dsafety-of-the-runtime-library#Thread_002dsafety-of-the-runtime-library&quot;&gt;Thread-safety of the runtime library&lt;/a&gt;, Up: &lt;a href=&quot;compiler-characteristics#Compiler-Characteristics&quot;&gt;Compiler Characteristics&lt;/a&gt; [&lt;a href=&quot;index#SEC_Contents&quot;&gt;Contents&lt;/a&gt;][&lt;a href=&quot;https://gcc.gnu.org/onlinedocs/gcc-7.2.0/gfortran/Option-Index.html#Option-Index&quot;&gt;Index&lt;/a&gt;]</source>
          <target state="translated">다음 : &lt;a href=&quot;files-opened-without-an-explicit-action_003d-specifier#Files-opened-without-an-explicit-ACTION_003d-specifier&quot;&gt;명시 적 ACTION = 지정자없이 열린 파일&lt;/a&gt; , 이전 : &lt;a href=&quot;thread_002dsafety-of-the-runtime-library#Thread_002dsafety-of-the-runtime-library&quot;&gt;런타임 라이브러리의 스레드 안전성&lt;/a&gt; , Up : &lt;a href=&quot;compiler-characteristics#Compiler-Characteristics&quot;&gt;컴파일러 특성&lt;/a&gt; [ &lt;a href=&quot;index#SEC_Contents&quot;&gt;목차&lt;/a&gt; ] [ &lt;a href=&quot;https://gcc.gnu.org/onlinedocs/gcc-7.2.0/gfortran/Option-Index.html#Option-Index&quot;&gt;색인&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="6c6dcf5778bf4a9781efd9813a78d5e8165468ea" translate="yes" xml:space="preserve">
          <source>Next: &lt;a href=&quot;fortran-2008-status#Fortran-2008-status&quot;&gt;Fortran 2008 status&lt;/a&gt;, Up: &lt;a href=&quot;fortran-2003-and-2008-status#Fortran-2003-and-2008-status&quot;&gt;Fortran 2003 and 2008 status&lt;/a&gt; [&lt;a href=&quot;index#SEC_Contents&quot;&gt;Contents&lt;/a&gt;][&lt;a href=&quot;https://gcc.gnu.org/onlinedocs/gcc-7.2.0/gfortran/Option-Index.html#Option-Index&quot;&gt;Index&lt;/a&gt;]</source>
          <target state="translated">다음 : &lt;a href=&quot;fortran-2008-status#Fortran-2008-status&quot;&gt;Fortran 2008 상태&lt;/a&gt; , Up : &lt;a href=&quot;fortran-2003-and-2008-status#Fortran-2003-and-2008-status&quot;&gt;Fortran 2003 및 2008 상태&lt;/a&gt; [ &lt;a href=&quot;index#SEC_Contents&quot;&gt;목차&lt;/a&gt; ] [ &lt;a href=&quot;https://gcc.gnu.org/onlinedocs/gcc-7.2.0/gfortran/Option-Index.html#Option-Index&quot;&gt;색인&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="b939dfbf59ed0735f786d0a0f7a1824000ff45b6" translate="yes" xml:space="preserve">
          <source>Next: &lt;a href=&quot;fortran-dialect-options#Fortran-Dialect-Options&quot;&gt;Fortran Dialect Options&lt;/a&gt;, Up: &lt;a href=&quot;invoking-gnu-fortran#Invoking-GNU-Fortran&quot;&gt;Invoking GNU Fortran&lt;/a&gt; [&lt;a href=&quot;index#SEC_Contents&quot;&gt;Contents&lt;/a&gt;][&lt;a href=&quot;https://gcc.gnu.org/onlinedocs/gcc-7.2.0/gfortran/Option-Index.html#Option-Index&quot;&gt;Index&lt;/a&gt;]</source>
          <target state="translated">다음 : &lt;a href=&quot;fortran-dialect-options#Fortran-Dialect-Options&quot;&gt;포트란 방언 옵션&lt;/a&gt; , 위로 : &lt;a href=&quot;invoking-gnu-fortran#Invoking-GNU-Fortran&quot;&gt;GNU 포트란 호출하기&lt;/a&gt; [ &lt;a href=&quot;index#SEC_Contents&quot;&gt;목차&lt;/a&gt; ] [ &lt;a href=&quot;https://gcc.gnu.org/onlinedocs/gcc-7.2.0/gfortran/Option-Index.html#Option-Index&quot;&gt;색인&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="8ecc16ddd6ea2c3805d5556021d05c08d07b23a9" translate="yes" xml:space="preserve">
          <source>Next: &lt;a href=&quot;fstat#FSTAT&quot;&gt;FSTAT&lt;/a&gt;, Previous: &lt;a href=&quot;free#FREE&quot;&gt;FREE&lt;/a&gt;, Up: &lt;a href=&quot;intrinsic-procedures#Intrinsic-Procedures&quot;&gt;Intrinsic Procedures&lt;/a&gt; [&lt;a href=&quot;index#SEC_Contents&quot;&gt;Contents&lt;/a&gt;][&lt;a href=&quot;https://gcc.gnu.org/onlinedocs/gcc-7.2.0/gfortran/Option-Index.html#Option-Index&quot;&gt;Index&lt;/a&gt;]</source>
          <target state="translated">다음 : &lt;a href=&quot;fstat#FSTAT&quot;&gt;FSTAT&lt;/a&gt; , Previous : &lt;a href=&quot;free#FREE&quot;&gt;FREE&lt;/a&gt; , Up : &lt;a href=&quot;intrinsic-procedures#Intrinsic-Procedures&quot;&gt;고유 프로 시저&lt;/a&gt; [ &lt;a href=&quot;index#SEC_Contents&quot;&gt;목차&lt;/a&gt; ] [ &lt;a href=&quot;https://gcc.gnu.org/onlinedocs/gcc-7.2.0/gfortran/Option-Index.html#Option-Index&quot;&gt;색인&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="53326b3f4c748b6f71c0cb33c4c065ff84bd2394" translate="yes" xml:space="preserve">
          <source>Next: &lt;a href=&quot;further-interoperability-of-fortran-with-c#Further-Interoperability-of-Fortran-with-C&quot;&gt;Further Interoperability of Fortran with C&lt;/a&gt;, Previous: &lt;a href=&quot;interoperable-subroutines-and-functions#Interoperable-Subroutines-and-Functions&quot;&gt;Interoperable Subroutines and Functions&lt;/a&gt;, Up: &lt;a href=&quot;interoperability-with-c#Interoperability-with-C&quot;&gt;Interoperability with C&lt;/a&gt; [&lt;a href=&quot;index#SEC_Contents&quot;&gt;Contents&lt;/a&gt;][&lt;a href=&quot;https://gcc.gnu.org/onlinedocs/gcc-7.2.0/gfortran/Option-Index.html#Option-Index&quot;&gt;Index&lt;/a&gt;]</source>
          <target state="translated">다음 : &lt;a href=&quot;further-interoperability-of-fortran-with-c#Further-Interoperability-of-Fortran-with-C&quot;&gt;C와 포트란의 또한 상호 운용성&lt;/a&gt; : 이전 &lt;a href=&quot;interoperable-subroutines-and-functions#Interoperable-Subroutines-and-Functions&quot;&gt;상호 운용 서브 루틴과 함수&lt;/a&gt; , 위 : &lt;a href=&quot;interoperability-with-c#Interoperability-with-C&quot;&gt;상호 운용성 C와&lt;/a&gt; [ &lt;a href=&quot;index#SEC_Contents&quot;&gt;내용&lt;/a&gt; ] [ &lt;a href=&quot;https://gcc.gnu.org/onlinedocs/gcc-7.2.0/gfortran/Option-Index.html#Option-Index&quot;&gt;색인&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="dc0da481ef5ae250646e5acf09691b39d03cb228" translate="yes" xml:space="preserve">
          <source>Next: &lt;a href=&quot;getgid#GETGID&quot;&gt;GETGID&lt;/a&gt;, Previous: &lt;a href=&quot;getenv#GETENV&quot;&gt;GETENV&lt;/a&gt;, Up: &lt;a href=&quot;intrinsic-procedures#Intrinsic-Procedures&quot;&gt;Intrinsic Procedures&lt;/a&gt; [&lt;a href=&quot;index#SEC_Contents&quot;&gt;Contents&lt;/a&gt;][&lt;a href=&quot;https://gcc.gnu.org/onlinedocs/gcc-7.2.0/gfortran/Option-Index.html#Option-Index&quot;&gt;Index&lt;/a&gt;]</source>
          <target state="translated">다음 : &lt;a href=&quot;getgid#GETGID&quot;&gt;GETGID&lt;/a&gt; , 이전 : &lt;a href=&quot;getenv#GETENV&quot;&gt;GETENV&lt;/a&gt; , 위 : &lt;a href=&quot;intrinsic-procedures#Intrinsic-Procedures&quot;&gt;고유 프로 시저&lt;/a&gt; [ &lt;a href=&quot;index#SEC_Contents&quot;&gt;목차&lt;/a&gt; ] [ &lt;a href=&quot;https://gcc.gnu.org/onlinedocs/gcc-7.2.0/gfortran/Option-Index.html#Option-Index&quot;&gt;색인&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="7fa81c18c7e8089136181bee5a6d34c75edba630" translate="yes" xml:space="preserve">
          <source>Next: &lt;a href=&quot;gfortran_005ferror_005fbacktrace#GFORTRAN_005fERROR_005fBACKTRACE&quot;&gt;GFORTRAN_ERROR_BACKTRACE&lt;/a&gt;, Previous: &lt;a href=&quot;gfortran_005flist_005fseparator#GFORTRAN_005fLIST_005fSEPARATOR&quot;&gt;GFORTRAN_LIST_SEPARATOR&lt;/a&gt;, Up: &lt;a href=&quot;runtime#Runtime&quot;&gt;Runtime&lt;/a&gt; [&lt;a href=&quot;index#SEC_Contents&quot;&gt;Contents&lt;/a&gt;][&lt;a href=&quot;https://gcc.gnu.org/onlinedocs/gcc-7.2.0/gfortran/Option-Index.html#Option-Index&quot;&gt;Index&lt;/a&gt;]</source>
          <target state="translated">다음 : &lt;a href=&quot;gfortran_005ferror_005fbacktrace#GFORTRAN_005fERROR_005fBACKTRACE&quot;&gt;GFORTRAN_ERROR_BACKTRACE&lt;/a&gt; , 이전 : &lt;a href=&quot;gfortran_005flist_005fseparator#GFORTRAN_005fLIST_005fSEPARATOR&quot;&gt;GFORTRAN_LIST_SEPARATOR&lt;/a&gt; , Up : &lt;a href=&quot;runtime#Runtime&quot;&gt;런타임&lt;/a&gt; [ &lt;a href=&quot;index#SEC_Contents&quot;&gt;목차&lt;/a&gt; ] [ &lt;a href=&quot;https://gcc.gnu.org/onlinedocs/gcc-7.2.0/gfortran/Option-Index.html#Option-Index&quot;&gt;색인&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="51cc7aea2f09797412b0f2e2b2f97e573006e460" translate="yes" xml:space="preserve">
          <source>Next: &lt;a href=&quot;gnu-fortran-and-gcc#GNU-Fortran-and-GCC&quot;&gt;GNU Fortran and GCC&lt;/a&gt;, Up: &lt;a href=&quot;introduction#Introduction&quot;&gt;Introduction&lt;/a&gt; [&lt;a href=&quot;index#SEC_Contents&quot;&gt;Contents&lt;/a&gt;][&lt;a href=&quot;https://gcc.gnu.org/onlinedocs/gcc-7.2.0/gfortran/Option-Index.html#Option-Index&quot;&gt;Index&lt;/a&gt;]</source>
          <target state="translated">다음 : &lt;a href=&quot;gnu-fortran-and-gcc#GNU-Fortran-and-GCC&quot;&gt;GNU Fortran 및 GCC&lt;/a&gt; , 위로 : &lt;a href=&quot;introduction#Introduction&quot;&gt;소개&lt;/a&gt; [ &lt;a href=&quot;index#SEC_Contents&quot;&gt;목차&lt;/a&gt; ] [ &lt;a href=&quot;https://gcc.gnu.org/onlinedocs/gcc-7.2.0/gfortran/Option-Index.html#Option-Index&quot;&gt;색인&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="7697cdd6bf6640a7de6099b4465df4f56528800c" translate="yes" xml:space="preserve">
          <source>Next: &lt;a href=&quot;idate#IDATE&quot;&gt;IDATE&lt;/a&gt;, Previous: &lt;a href=&quot;ibset#IBSET&quot;&gt;IBSET&lt;/a&gt;, Up: &lt;a href=&quot;intrinsic-procedures#Intrinsic-Procedures&quot;&gt;Intrinsic Procedures&lt;/a&gt; [&lt;a href=&quot;index#SEC_Contents&quot;&gt;Contents&lt;/a&gt;][&lt;a href=&quot;https://gcc.gnu.org/onlinedocs/gcc-7.2.0/gfortran/Option-Index.html#Option-Index&quot;&gt;Index&lt;/a&gt;]</source>
          <target state="translated">다음 : &lt;a href=&quot;idate#IDATE&quot;&gt;IDATE&lt;/a&gt; , 이전 : &lt;a href=&quot;ibset#IBSET&quot;&gt;IBSET&lt;/a&gt; , Up : &lt;a href=&quot;intrinsic-procedures#Intrinsic-Procedures&quot;&gt;고유 프로 시저&lt;/a&gt; [ &lt;a href=&quot;index#SEC_Contents&quot;&gt;목차&lt;/a&gt; ] [ &lt;a href=&quot;https://gcc.gnu.org/onlinedocs/gcc-7.2.0/gfortran/Option-Index.html#Option-Index&quot;&gt;색인&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="44c9fe8c87adf1f6db7423d97d78bc094177e8aa" translate="yes" xml:space="preserve">
          <source>Next: &lt;a href=&quot;ieee-modules#IEEE-modules&quot;&gt;IEEE modules&lt;/a&gt;, Previous: &lt;a href=&quot;iso_005ffortran_005fenv#ISO_005fFORTRAN_005fENV&quot;&gt;ISO_FORTRAN_ENV&lt;/a&gt;, Up: &lt;a href=&quot;intrinsic-modules#Intrinsic-Modules&quot;&gt;Intrinsic Modules&lt;/a&gt; [&lt;a href=&quot;index#SEC_Contents&quot;&gt;Contents&lt;/a&gt;][&lt;a href=&quot;https://gcc.gnu.org/onlinedocs/gcc-7.2.0/gfortran/Option-Index.html#Option-Index&quot;&gt;Index&lt;/a&gt;]</source>
          <target state="translated">다음 : &lt;a href=&quot;ieee-modules#IEEE-modules&quot;&gt;IEEE 모듈&lt;/a&gt; , 이전 : &lt;a href=&quot;iso_005ffortran_005fenv#ISO_005fFORTRAN_005fENV&quot;&gt;ISO_FORTRAN_ENV&lt;/a&gt; , Up : &lt;a href=&quot;intrinsic-modules#Intrinsic-Modules&quot;&gt;내장 모듈&lt;/a&gt; [ &lt;a href=&quot;index#SEC_Contents&quot;&gt;목차&lt;/a&gt; ] [ &lt;a href=&quot;https://gcc.gnu.org/onlinedocs/gcc-7.2.0/gfortran/Option-Index.html#Option-Index&quot;&gt;색인&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="018d1c0dca3c70db85e626a8db8d3850e8c35081" translate="yes" xml:space="preserve">
          <source>Next: &lt;a href=&quot;intrinsic-modules#Intrinsic-Modules&quot;&gt;Intrinsic Modules&lt;/a&gt;, Previous: &lt;a href=&quot;coarray-programming#Coarray-Programming&quot;&gt;Coarray Programming&lt;/a&gt;, Up: &lt;a href=&quot;index#Top&quot;&gt;Top&lt;/a&gt; [&lt;a href=&quot;index#SEC_Contents&quot;&gt;Contents&lt;/a&gt;][&lt;a href=&quot;https://gcc.gnu.org/onlinedocs/gcc-7.2.0/gfortran/Option-Index.html#Option-Index&quot;&gt;Index&lt;/a&gt;]</source>
          <target state="translated">다음 : &lt;a href=&quot;intrinsic-modules#Intrinsic-Modules&quot;&gt;내장 모듈&lt;/a&gt; , 이전 : &lt;a href=&quot;coarray-programming#Coarray-Programming&quot;&gt;Coarray Programming&lt;/a&gt; , 위로 : &lt;a href=&quot;index#Top&quot;&gt;맨 위로&lt;/a&gt; [ &lt;a href=&quot;index#SEC_Contents&quot;&gt;목차&lt;/a&gt; ] [ &lt;a href=&quot;https://gcc.gnu.org/onlinedocs/gcc-7.2.0/gfortran/Option-Index.html#Option-Index&quot;&gt;색인&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="b4bf0b0293db0afd54491a17d0d123b47d89bb83" translate="yes" xml:space="preserve">
          <source>Next: &lt;a href=&quot;introduction#Introduction&quot;&gt;Introduction&lt;/a&gt;, Up: &lt;a href=&quot;https://gcc.gnu.org/onlinedocs/gcc-7.2.0/dir/index.html&quot;&gt;(dir)&lt;/a&gt; [&lt;a href=&quot;#SEC_Contents&quot;&gt;Contents&lt;/a&gt;][&lt;a href=&quot;https://gcc.gnu.org/onlinedocs/gcc-7.2.0/gfortran/Option-Index.html#Option-Index&quot;&gt;Index&lt;/a&gt;]</source>
          <target state="translated">다음 : &lt;a href=&quot;introduction#Introduction&quot;&gt;소개&lt;/a&gt; , 위로 : &lt;a href=&quot;https://gcc.gnu.org/onlinedocs/gcc-7.2.0/dir/index.html&quot;&gt;(dir)&lt;/a&gt; [ &lt;a href=&quot;#SEC_Contents&quot;&gt;목차&lt;/a&gt; ] [ &lt;a href=&quot;https://gcc.gnu.org/onlinedocs/gcc-7.2.0/gfortran/Option-Index.html#Option-Index&quot;&gt;색인&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="c7524979a98ed53073fca4f60067c05b00029b24" translate="yes" xml:space="preserve">
          <source>Next: &lt;a href=&quot;iso_005fc_005fbinding#ISO_005fC_005fBINDING&quot;&gt;ISO_C_BINDING&lt;/a&gt;, Up: &lt;a href=&quot;intrinsic-modules#Intrinsic-Modules&quot;&gt;Intrinsic Modules&lt;/a&gt; [&lt;a href=&quot;index#SEC_Contents&quot;&gt;Contents&lt;/a&gt;][&lt;a href=&quot;https://gcc.gnu.org/onlinedocs/gcc-7.2.0/gfortran/Option-Index.html#Option-Index&quot;&gt;Index&lt;/a&gt;]</source>
          <target state="translated">다음 : &lt;a href=&quot;iso_005fc_005fbinding#ISO_005fC_005fBINDING&quot;&gt;ISO_C_BINDING&lt;/a&gt; , Up : &lt;a href=&quot;intrinsic-modules#Intrinsic-Modules&quot;&gt;내장 모듈&lt;/a&gt; [ &lt;a href=&quot;index#SEC_Contents&quot;&gt;목차&lt;/a&gt; ] [ &lt;a href=&quot;https://gcc.gnu.org/onlinedocs/gcc-7.2.0/gfortran/Option-Index.html#Option-Index&quot;&gt;색인&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="10c0b25d88a984ba15ffe67314aa125736dcd76e" translate="yes" xml:space="preserve">
          <source>Next: &lt;a href=&quot;legacy-parameter-statements#Legacy-PARAMETER-statements&quot;&gt;Legacy PARAMETER statements&lt;/a&gt;, Previous: &lt;a href=&quot;bitwise-logical-operators#Bitwise-logical-operators&quot;&gt;Bitwise logical operators&lt;/a&gt;, Up: &lt;a href=&quot;extensions-implemented-in-gnu-fortran#Extensions-implemented-in-GNU-Fortran&quot;&gt;Extensions implemented in GNU Fortran&lt;/a&gt; [&lt;a href=&quot;index#SEC_Contents&quot;&gt;Contents&lt;/a&gt;][&lt;a href=&quot;https://gcc.gnu.org/onlinedocs/gcc-7.2.0/gfortran/Option-Index.html#Option-Index&quot;&gt;Index&lt;/a&gt;]</source>
          <target state="translated">다음 : &lt;a href=&quot;legacy-parameter-statements#Legacy-PARAMETER-statements&quot;&gt;레거시 PARAMETER 문&lt;/a&gt; , 이전 : &lt;a href=&quot;bitwise-logical-operators#Bitwise-logical-operators&quot;&gt;비트 논리 연산자&lt;/a&gt; , Up : &lt;a href=&quot;extensions-implemented-in-gnu-fortran#Extensions-implemented-in-GNU-Fortran&quot;&gt;GNU Fortran에서 구현 된 확장&lt;/a&gt; [ &lt;a href=&quot;index#SEC_Contents&quot;&gt;목차&lt;/a&gt; ] [ &lt;a href=&quot;https://gcc.gnu.org/onlinedocs/gcc-7.2.0/gfortran/Option-Index.html#Option-Index&quot;&gt;색인&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="19df84ccde500a9753d79e2761ab482b11405a33" translate="yes" xml:space="preserve">
          <source>Next: &lt;a href=&quot;maxval#MAXVAL&quot;&gt;MAXVAL&lt;/a&gt;, Previous: &lt;a href=&quot;maxexponent#MAXEXPONENT&quot;&gt;MAXEXPONENT&lt;/a&gt;, Up: &lt;a href=&quot;intrinsic-procedures#Intrinsic-Procedures&quot;&gt;Intrinsic Procedures&lt;/a&gt; [&lt;a href=&quot;index#SEC_Contents&quot;&gt;Contents&lt;/a&gt;][&lt;a href=&quot;https://gcc.gnu.org/onlinedocs/gcc-7.2.0/gfortran/Option-Index.html#Option-Index&quot;&gt;Index&lt;/a&gt;]</source>
          <target state="translated">다음 : &lt;a href=&quot;maxval#MAXVAL&quot;&gt;MAXVAL&lt;/a&gt; , 이전 : &lt;a href=&quot;maxexponent#MAXEXPONENT&quot;&gt;MAXEXPONENT&lt;/a&gt; , 위로 : &lt;a href=&quot;intrinsic-procedures#Intrinsic-Procedures&quot;&gt;고유 프로 시저&lt;/a&gt; [ &lt;a href=&quot;index#SEC_Contents&quot;&gt;목차&lt;/a&gt; ] [ &lt;a href=&quot;https://gcc.gnu.org/onlinedocs/gcc-7.2.0/gfortran/Option-Index.html#Option-Index&quot;&gt;색인&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="d5b65caa9458a8e7392c07e8442242a39739c121" translate="yes" xml:space="preserve">
          <source>Next: &lt;a href=&quot;minval#MINVAL&quot;&gt;MINVAL&lt;/a&gt;, Previous: &lt;a href=&quot;minexponent#MINEXPONENT&quot;&gt;MINEXPONENT&lt;/a&gt;, Up: &lt;a href=&quot;intrinsic-procedures#Intrinsic-Procedures&quot;&gt;Intrinsic Procedures&lt;/a&gt; [&lt;a href=&quot;index#SEC_Contents&quot;&gt;Contents&lt;/a&gt;][&lt;a href=&quot;https://gcc.gnu.org/onlinedocs/gcc-7.2.0/gfortran/Option-Index.html#Option-Index&quot;&gt;Index&lt;/a&gt;]</source>
          <target state="translated">다음 : &lt;a href=&quot;minval#MINVAL&quot;&gt;MINVAL&lt;/a&gt; , 이전 : &lt;a href=&quot;minexponent#MINEXPONENT&quot;&gt;MINEXPONENT&lt;/a&gt; , 위로 : &lt;a href=&quot;intrinsic-procedures#Intrinsic-Procedures&quot;&gt;고유 프로 시저&lt;/a&gt; [ &lt;a href=&quot;index#SEC_Contents&quot;&gt;목차&lt;/a&gt; ] [ &lt;a href=&quot;https://gcc.gnu.org/onlinedocs/gcc-7.2.0/gfortran/Option-Index.html#Option-Index&quot;&gt;색인&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="a49bfb4556ad2c4103e08c670e1d13332e80420c" translate="yes" xml:space="preserve">
          <source>Next: &lt;a href=&quot;naming-and-argument_002dpassing-conventions#Naming-and-argument_002dpassing-conventions&quot;&gt;Naming and argument-passing conventions&lt;/a&gt;, Previous: &lt;a href=&quot;gnu-fortran-compiler-directives#GNU-Fortran-Compiler-Directives&quot;&gt;GNU Fortran Compiler Directives&lt;/a&gt;, Up: &lt;a href=&quot;mixed_002dlanguage-programming#Mixed_002dLanguage-Programming&quot;&gt;Mixed-Language Programming&lt;/a&gt; [&lt;a href=&quot;index#SEC_Contents&quot;&gt;Contents&lt;/a&gt;][&lt;a href=&quot;https://gcc.gnu.org/onlinedocs/gcc-7.2.0/gfortran/Option-Index.html#Option-Index&quot;&gt;Index&lt;/a&gt;]</source>
          <target state="translated">다음 : &lt;a href=&quot;naming-and-argument_002dpassing-conventions#Naming-and-argument_002dpassing-conventions&quot;&gt;명명 및 인수 전달 규칙&lt;/a&gt; , 이전 : &lt;a href=&quot;gnu-fortran-compiler-directives#GNU-Fortran-Compiler-Directives&quot;&gt;GNU Fortran 컴파일러 지시문&lt;/a&gt; , 위로 : &lt;a href=&quot;mixed_002dlanguage-programming#Mixed_002dLanguage-Programming&quot;&gt;혼합 언어 프로그래밍&lt;/a&gt; [ &lt;a href=&quot;index#SEC_Contents&quot;&gt;목차&lt;/a&gt; ] [ &lt;a href=&quot;https://gcc.gnu.org/onlinedocs/gcc-7.2.0/gfortran/Option-Index.html#Option-Index&quot;&gt;색인&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="59f7a569848e3c4dede888d38c672ca859dfa7d1" translate="yes" xml:space="preserve">
          <source>Next: &lt;a href=&quot;non_002dfortran-main-program#Non_002dFortran-Main-Program&quot;&gt;Non-Fortran Main Program&lt;/a&gt;, Previous: &lt;a href=&quot;interoperability-with-c#Interoperability-with-C&quot;&gt;Interoperability with C&lt;/a&gt;, Up: &lt;a href=&quot;mixed_002dlanguage-programming#Mixed_002dLanguage-Programming&quot;&gt;Mixed-Language Programming&lt;/a&gt; [&lt;a href=&quot;index#SEC_Contents&quot;&gt;Contents&lt;/a&gt;][&lt;a href=&quot;https://gcc.gnu.org/onlinedocs/gcc-7.2.0/gfortran/Option-Index.html#Option-Index&quot;&gt;Index&lt;/a&gt;]</source>
          <target state="translated">다음 : &lt;a href=&quot;non_002dfortran-main-program#Non_002dFortran-Main-Program&quot;&gt;비 Fortran 주 프로그램&lt;/a&gt; , 이전 : &lt;a href=&quot;interoperability-with-c#Interoperability-with-C&quot;&gt;C와의 상호 운용성&lt;/a&gt; , 위로 : &lt;a href=&quot;mixed_002dlanguage-programming#Mixed_002dLanguage-Programming&quot;&gt;혼합 언어 프로그래밍&lt;/a&gt; [ &lt;a href=&quot;index#SEC_Contents&quot;&gt;목차&lt;/a&gt; ] [ &lt;a href=&quot;https://gcc.gnu.org/onlinedocs/gcc-7.2.0/gfortran/Option-Index.html#Option-Index&quot;&gt;색인&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="144713f310de7941db438abf9ed7a3d3d1214522" translate="yes" xml:space="preserve">
          <source>Next: &lt;a href=&quot;openacc#OpenACC&quot;&gt;OpenACC&lt;/a&gt;, Previous: &lt;a href=&quot;convert-specifier#CONVERT-specifier&quot;&gt;CONVERT specifier&lt;/a&gt;, Up: &lt;a href=&quot;extensions-implemented-in-gnu-fortran#Extensions-implemented-in-GNU-Fortran&quot;&gt;Extensions implemented in GNU Fortran&lt;/a&gt; [&lt;a href=&quot;index#SEC_Contents&quot;&gt;Contents&lt;/a&gt;][&lt;a href=&quot;https://gcc.gnu.org/onlinedocs/gcc-7.2.0/gfortran/Option-Index.html#Option-Index&quot;&gt;Index&lt;/a&gt;]</source>
          <target state="translated">다음 : &lt;a href=&quot;openacc#OpenACC&quot;&gt;OpenACC&lt;/a&gt; , 이전 : &lt;a href=&quot;convert-specifier#CONVERT-specifier&quot;&gt;CONVERT 지정자&lt;/a&gt; , Up : &lt;a href=&quot;extensions-implemented-in-gnu-fortran#Extensions-implemented-in-GNU-Fortran&quot;&gt;GNU Fortran에서 구현 된 확장&lt;/a&gt; [ &lt;a href=&quot;index#SEC_Contents&quot;&gt;목차&lt;/a&gt; ] [ &lt;a href=&quot;https://gcc.gnu.org/onlinedocs/gcc-7.2.0/gfortran/Option-Index.html#Option-Index&quot;&gt;색인&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="e3f0646243338097c38f79b300e8c4fdb974326e" translate="yes" xml:space="preserve">
          <source>Next: &lt;a href=&quot;openmp#OpenMP&quot;&gt;OpenMP&lt;/a&gt;, Previous: &lt;a href=&quot;cray-pointers#Cray-pointers&quot;&gt;Cray pointers&lt;/a&gt;, Up: &lt;a href=&quot;extensions-implemented-in-gnu-fortran#Extensions-implemented-in-GNU-Fortran&quot;&gt;Extensions implemented in GNU Fortran&lt;/a&gt; [&lt;a href=&quot;index#SEC_Contents&quot;&gt;Contents&lt;/a&gt;][&lt;a href=&quot;https://gcc.gnu.org/onlinedocs/gcc-7.2.0/gfortran/Option-Index.html#Option-Index&quot;&gt;Index&lt;/a&gt;]</source>
          <target state="translated">다음 : &lt;a href=&quot;openmp#OpenMP&quot;&gt;OpenMP&lt;/a&gt; , 이전 : &lt;a href=&quot;cray-pointers#Cray-pointers&quot;&gt;Cray pointers&lt;/a&gt; , Up : &lt;a href=&quot;extensions-implemented-in-gnu-fortran#Extensions-implemented-in-GNU-Fortran&quot;&gt;GNU Fortran에서 구현 된 확장&lt;/a&gt; [ &lt;a href=&quot;index#SEC_Contents&quot;&gt;Contents&lt;/a&gt; ] [ &lt;a href=&quot;https://gcc.gnu.org/onlinedocs/gcc-7.2.0/gfortran/Option-Index.html#Option-Index&quot;&gt;Index&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="0d3df5a7ec23371f4749dea67246c37044ce5ba5" translate="yes" xml:space="preserve">
          <source>Next: &lt;a href=&quot;parity#PARITY&quot;&gt;PARITY&lt;/a&gt;, Previous: &lt;a href=&quot;or#OR&quot;&gt;OR&lt;/a&gt;, Up: &lt;a href=&quot;intrinsic-procedures#Intrinsic-Procedures&quot;&gt;Intrinsic Procedures&lt;/a&gt; [&lt;a href=&quot;index#SEC_Contents&quot;&gt;Contents&lt;/a&gt;][&lt;a href=&quot;https://gcc.gnu.org/onlinedocs/gcc-7.2.0/gfortran/Option-Index.html#Option-Index&quot;&gt;Index&lt;/a&gt;]</source>
          <target state="translated">다음 : &lt;a href=&quot;parity#PARITY&quot;&gt;PARITY&lt;/a&gt; , 이전 : &lt;a href=&quot;or#OR&quot;&gt;OR&lt;/a&gt; , 위 : &lt;a href=&quot;intrinsic-procedures#Intrinsic-Procedures&quot;&gt;고유 프로 시저&lt;/a&gt; [ &lt;a href=&quot;index#SEC_Contents&quot;&gt;목차&lt;/a&gt; ] [ &lt;a href=&quot;https://gcc.gnu.org/onlinedocs/gcc-7.2.0/gfortran/Option-Index.html#Option-Index&quot;&gt;색인&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="bdd150b97ebef4c39527b53399d690bb0f982a17" translate="yes" xml:space="preserve">
          <source>Next: &lt;a href=&quot;preprocessing-and-conditional-compilation#Preprocessing-and-conditional-compilation&quot;&gt;Preprocessing and conditional compilation&lt;/a&gt;, Previous: &lt;a href=&quot;about-gnu-fortran#About-GNU-Fortran&quot;&gt;About GNU Fortran&lt;/a&gt;, Up: &lt;a href=&quot;introduction#Introduction&quot;&gt;Introduction&lt;/a&gt; [&lt;a href=&quot;index#SEC_Contents&quot;&gt;Contents&lt;/a&gt;][&lt;a href=&quot;https://gcc.gnu.org/onlinedocs/gcc-7.2.0/gfortran/Option-Index.html#Option-Index&quot;&gt;Index&lt;/a&gt;]</source>
          <target state="translated">다음 : &lt;a href=&quot;preprocessing-and-conditional-compilation#Preprocessing-and-conditional-compilation&quot;&gt;전처리 및 조건부 컴파일&lt;/a&gt; , 이전 : &lt;a href=&quot;about-gnu-fortran#About-GNU-Fortran&quot;&gt;GNU Fortran 정보&lt;/a&gt; , 위로 : &lt;a href=&quot;introduction#Introduction&quot;&gt;소개&lt;/a&gt; [ &lt;a href=&quot;index#SEC_Contents&quot;&gt;목차&lt;/a&gt; ] [ &lt;a href=&quot;https://gcc.gnu.org/onlinedocs/gcc-7.2.0/gfortran/Option-Index.html#Option-Index&quot;&gt;색인&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="3fd42398580bcc47d86936a449544909378b976a" translate="yes" xml:space="preserve">
          <source>Next: &lt;a href=&quot;preprocessing-options#Preprocessing-Options&quot;&gt;Preprocessing Options&lt;/a&gt;, Previous: &lt;a href=&quot;option-summary#Option-Summary&quot;&gt;Option Summary&lt;/a&gt;, Up: &lt;a href=&quot;invoking-gnu-fortran#Invoking-GNU-Fortran&quot;&gt;Invoking GNU Fortran&lt;/a&gt; [&lt;a href=&quot;index#SEC_Contents&quot;&gt;Contents&lt;/a&gt;][&lt;a href=&quot;https://gcc.gnu.org/onlinedocs/gcc-7.2.0/gfortran/Option-Index.html#Option-Index&quot;&gt;Index&lt;/a&gt;]</source>
          <target state="translated">다음 : &lt;a href=&quot;preprocessing-options#Preprocessing-Options&quot;&gt;전처리 옵션&lt;/a&gt; , 이전 : &lt;a href=&quot;option-summary#Option-Summary&quot;&gt;옵션 요약&lt;/a&gt; , 위로 : &lt;a href=&quot;invoking-gnu-fortran#Invoking-GNU-Fortran&quot;&gt;GNU Fortran 호출&lt;/a&gt; [ &lt;a href=&quot;index#SEC_Contents&quot;&gt;목차&lt;/a&gt; ] [ &lt;a href=&quot;https://gcc.gnu.org/onlinedocs/gcc-7.2.0/gfortran/Option-Index.html#Option-Index&quot;&gt;색인&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="6f36e94e02b4ec30e06a43c76fd8d7ca7005f96d" translate="yes" xml:space="preserve">
          <source>Next: &lt;a href=&quot;range#RANGE&quot;&gt;RANGE&lt;/a&gt;, Previous: &lt;a href=&quot;random_005fnumber#RANDOM_005fNUMBER&quot;&gt;RANDOM_NUMBER&lt;/a&gt;, Up: &lt;a href=&quot;intrinsic-procedures#Intrinsic-Procedures&quot;&gt;Intrinsic Procedures&lt;/a&gt; [&lt;a href=&quot;index#SEC_Contents&quot;&gt;Contents&lt;/a&gt;][&lt;a href=&quot;https://gcc.gnu.org/onlinedocs/gcc-7.2.0/gfortran/Option-Index.html#Option-Index&quot;&gt;Index&lt;/a&gt;]</source>
          <target state="translated">다음 : &lt;a href=&quot;range#RANGE&quot;&gt;RANGE&lt;/a&gt; , 이전 : &lt;a href=&quot;random_005fnumber#RANDOM_005fNUMBER&quot;&gt;RANDOM_NUMBER&lt;/a&gt; , 위로 : &lt;a href=&quot;intrinsic-procedures#Intrinsic-Procedures&quot;&gt;고유 프로 시저&lt;/a&gt; [ &lt;a href=&quot;index#SEC_Contents&quot;&gt;목차&lt;/a&gt; ] [ &lt;a href=&quot;https://gcc.gnu.org/onlinedocs/gcc-7.2.0/gfortran/Option-Index.html#Option-Index&quot;&gt;색인&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="c6b47ab4d2dfdd4936fecfd7719b475df976b590" translate="yes" xml:space="preserve">
          <source>Next: &lt;a href=&quot;real-array-indices#Real-array-indices&quot;&gt;Real array indices&lt;/a&gt;, Previous: &lt;a href=&quot;q-exponent_002dletter#Q-exponent_002dletter&quot;&gt;&lt;code&gt;Q&lt;/code&gt; exponent-letter&lt;/a&gt;, Up: &lt;a href=&quot;extensions-implemented-in-gnu-fortran#Extensions-implemented-in-GNU-Fortran&quot;&gt;Extensions implemented in GNU Fortran&lt;/a&gt; [&lt;a href=&quot;index#SEC_Contents&quot;&gt;Contents&lt;/a&gt;][&lt;a href=&quot;https://gcc.gnu.org/onlinedocs/gcc-7.2.0/gfortran/Option-Index.html#Option-Index&quot;&gt;Index&lt;/a&gt;]</source>
          <target state="translated">다음 : &lt;a href=&quot;real-array-indices#Real-array-indices&quot;&gt;실제 배열 인덱스&lt;/a&gt; , 이전 : &lt;a href=&quot;q-exponent_002dletter#Q-exponent_002dletter&quot;&gt; &lt;code&gt;Q&lt;/code&gt; exponent-letter&lt;/a&gt; , Up : &lt;a href=&quot;extensions-implemented-in-gnu-fortran#Extensions-implemented-in-GNU-Fortran&quot;&gt;GNU Fortran에서 구현 된 확장&lt;/a&gt; [ &lt;a href=&quot;index#SEC_Contents&quot;&gt;Contents&lt;/a&gt; ] [ &lt;a href=&quot;https://gcc.gnu.org/onlinedocs/gcc-7.2.0/gfortran/Option-Index.html#Option-Index&quot;&gt;Index&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="55da1b4934d0001bd923c116dc9838f8c5a646ca" translate="yes" xml:space="preserve">
          <source>Next: &lt;a href=&quot;rename#RENAME&quot;&gt;RENAME&lt;/a&gt;, Previous: &lt;a href=&quot;rank#RANK&quot;&gt;RANK&lt;/a&gt;, Up: &lt;a href=&quot;intrinsic-procedures#Intrinsic-Procedures&quot;&gt;Intrinsic Procedures&lt;/a&gt; [&lt;a href=&quot;index#SEC_Contents&quot;&gt;Contents&lt;/a&gt;][&lt;a href=&quot;https://gcc.gnu.org/onlinedocs/gcc-7.2.0/gfortran/Option-Index.html#Option-Index&quot;&gt;Index&lt;/a&gt;]</source>
          <target state="translated">다음 : &lt;a href=&quot;rename#RENAME&quot;&gt;RENAME&lt;/a&gt; , 이전 : &lt;a href=&quot;rank#RANK&quot;&gt;RANK&lt;/a&gt; , 위 : &lt;a href=&quot;intrinsic-procedures#Intrinsic-Procedures&quot;&gt;고유 프로 시저&lt;/a&gt; [ &lt;a href=&quot;index#SEC_Contents&quot;&gt;목차&lt;/a&gt; ] [ &lt;a href=&quot;https://gcc.gnu.org/onlinedocs/gcc-7.2.0/gfortran/Option-Index.html#Option-Index&quot;&gt;색인&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="3cd713417e190dc0f3c40007b6f58f3bf6f84ca9" translate="yes" xml:space="preserve">
          <source>Next: &lt;a href=&quot;runtime#Runtime&quot;&gt;Runtime&lt;/a&gt;, Previous: &lt;a href=&quot;introduction#Introduction&quot;&gt;Introduction&lt;/a&gt;, Up: &lt;a href=&quot;index#Top&quot;&gt;Top&lt;/a&gt; [&lt;a href=&quot;index#SEC_Contents&quot;&gt;Contents&lt;/a&gt;][&lt;a href=&quot;https://gcc.gnu.org/onlinedocs/gcc-7.2.0/gfortran/Option-Index.html#Option-Index&quot;&gt;Index&lt;/a&gt;]</source>
          <target state="translated">다음 : &lt;a href=&quot;runtime#Runtime&quot;&gt;런타임&lt;/a&gt; , 이전 : &lt;a href=&quot;introduction#Introduction&quot;&gt;소개&lt;/a&gt; , 위로 : &lt;a href=&quot;index#Top&quot;&gt;맨 위로&lt;/a&gt; [ &lt;a href=&quot;index#SEC_Contents&quot;&gt;목차&lt;/a&gt; ] [ &lt;a href=&quot;https://gcc.gnu.org/onlinedocs/gcc-7.2.0/gfortran/Option-Index.html#Option-Index&quot;&gt;색인&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="02cbcf4c3b49be337eb6b7da99e58c2ff383ccd1" translate="yes" xml:space="preserve">
          <source>Next: &lt;a href=&quot;set_005fexponent#SET_005fEXPONENT&quot;&gt;SET_EXPONENT&lt;/a&gt;, Previous: &lt;a href=&quot;selected_005fint_005fkind#SELECTED_005fINT_005fKIND&quot;&gt;SELECTED_INT_KIND&lt;/a&gt;, Up: &lt;a href=&quot;intrinsic-procedures#Intrinsic-Procedures&quot;&gt;Intrinsic Procedures&lt;/a&gt; [&lt;a href=&quot;index#SEC_Contents&quot;&gt;Contents&lt;/a&gt;][&lt;a href=&quot;https://gcc.gnu.org/onlinedocs/gcc-7.2.0/gfortran/Option-Index.html#Option-Index&quot;&gt;Index&lt;/a&gt;]</source>
          <target state="translated">다음 : &lt;a href=&quot;set_005fexponent#SET_005fEXPONENT&quot;&gt;SET_EXPONENT&lt;/a&gt; , 이전 : &lt;a href=&quot;selected_005fint_005fkind#SELECTED_005fINT_005fKIND&quot;&gt;SELECTED_INT_KIND&lt;/a&gt; , Up : &lt;a href=&quot;intrinsic-procedures#Intrinsic-Procedures&quot;&gt;고유 프로 시저&lt;/a&gt; [ &lt;a href=&quot;index#SEC_Contents&quot;&gt;목차&lt;/a&gt; ] [ &lt;a href=&quot;https://gcc.gnu.org/onlinedocs/gcc-7.2.0/gfortran/Option-Index.html#Option-Index&quot;&gt;색인&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="8222a9084512ca225a4685b3c74db721e23369d3" translate="yes" xml:space="preserve">
          <source>Next: &lt;a href=&quot;standards#Standards&quot;&gt;Standards&lt;/a&gt;, Previous: &lt;a href=&quot;gnu-fortran-and-g77#GNU-Fortran-and-G77&quot;&gt;GNU Fortran and G77&lt;/a&gt;, Up: &lt;a href=&quot;introduction#Introduction&quot;&gt;Introduction&lt;/a&gt; [&lt;a href=&quot;index#SEC_Contents&quot;&gt;Contents&lt;/a&gt;][&lt;a href=&quot;https://gcc.gnu.org/onlinedocs/gcc-7.2.0/gfortran/Option-Index.html#Option-Index&quot;&gt;Index&lt;/a&gt;]</source>
          <target state="translated">다음 : &lt;a href=&quot;standards#Standards&quot;&gt;표준&lt;/a&gt; , 이전 : &lt;a href=&quot;gnu-fortran-and-g77#GNU-Fortran-and-G77&quot;&gt;GNU Fortran 및 G77&lt;/a&gt; , 위로 : &lt;a href=&quot;introduction#Introduction&quot;&gt;소개&lt;/a&gt; [ &lt;a href=&quot;index#SEC_Contents&quot;&gt;목차&lt;/a&gt; ] [ &lt;a href=&quot;https://gcc.gnu.org/onlinedocs/gcc-7.2.0/gfortran/Option-Index.html#Option-Index&quot;&gt;색인&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="88e7dff5a2fc141f9d10193e17e9d496e12cef6f" translate="yes" xml:space="preserve">
          <source>Next: &lt;a href=&quot;storage_005fsize#STORAGE_005fSIZE&quot;&gt;STORAGE_SIZE&lt;/a&gt;, Previous: &lt;a href=&quot;srand#SRAND&quot;&gt;SRAND&lt;/a&gt;, Up: &lt;a href=&quot;intrinsic-procedures#Intrinsic-Procedures&quot;&gt;Intrinsic Procedures&lt;/a&gt; [&lt;a href=&quot;index#SEC_Contents&quot;&gt;Contents&lt;/a&gt;][&lt;a href=&quot;https://gcc.gnu.org/onlinedocs/gcc-7.2.0/gfortran/Option-Index.html#Option-Index&quot;&gt;Index&lt;/a&gt;]</source>
          <target state="translated">다음 : &lt;a href=&quot;storage_005fsize#STORAGE_005fSIZE&quot;&gt;STORAGE_SIZE&lt;/a&gt; , 이전 : &lt;a href=&quot;srand#SRAND&quot;&gt;SRAND&lt;/a&gt; , 위 : &lt;a href=&quot;intrinsic-procedures#Intrinsic-Procedures&quot;&gt;고유 프로 시저&lt;/a&gt; [ &lt;a href=&quot;index#SEC_Contents&quot;&gt;목차&lt;/a&gt; ] [ &lt;a href=&quot;https://gcc.gnu.org/onlinedocs/gcc-7.2.0/gfortran/Option-Index.html#Option-Index&quot;&gt;색인&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="471d9cbab720e837acc114cb71a060247b3db3e7" translate="yes" xml:space="preserve">
          <source>Next: &lt;a href=&quot;tan#TAN&quot;&gt;TAN&lt;/a&gt;, Previous: &lt;a href=&quot;system#SYSTEM&quot;&gt;SYSTEM&lt;/a&gt;, Up: &lt;a href=&quot;intrinsic-procedures#Intrinsic-Procedures&quot;&gt;Intrinsic Procedures&lt;/a&gt; [&lt;a href=&quot;index#SEC_Contents&quot;&gt;Contents&lt;/a&gt;][&lt;a href=&quot;https://gcc.gnu.org/onlinedocs/gcc-7.2.0/gfortran/Option-Index.html#Option-Index&quot;&gt;Index&lt;/a&gt;]</source>
          <target state="translated">다음 : &lt;a href=&quot;tan#TAN&quot;&gt;TAN&lt;/a&gt; , 이전 : &lt;a href=&quot;system#SYSTEM&quot;&gt;SYSTEM&lt;/a&gt; , 위로 : &lt;a href=&quot;intrinsic-procedures#Intrinsic-Procedures&quot;&gt;고유 프로 시저&lt;/a&gt; [ &lt;a href=&quot;index#SEC_Contents&quot;&gt;목차&lt;/a&gt; ] [ &lt;a href=&quot;https://gcc.gnu.org/onlinedocs/gcc-7.2.0/gfortran/Option-Index.html#Option-Index&quot;&gt;색인&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="2427f2d63a58273157ad97731255a15513cb135c" translate="yes" xml:space="preserve">
          <source>Next: &lt;a href=&quot;time#TIME&quot;&gt;TIME&lt;/a&gt;, Previous: &lt;a href=&quot;tanh#TANH&quot;&gt;TANH&lt;/a&gt;, Up: &lt;a href=&quot;intrinsic-procedures#Intrinsic-Procedures&quot;&gt;Intrinsic Procedures&lt;/a&gt; [&lt;a href=&quot;index#SEC_Contents&quot;&gt;Contents&lt;/a&gt;][&lt;a href=&quot;https://gcc.gnu.org/onlinedocs/gcc-7.2.0/gfortran/Option-Index.html#Option-Index&quot;&gt;Index&lt;/a&gt;]</source>
          <target state="translated">다음 : &lt;a href=&quot;time#TIME&quot;&gt;TIME&lt;/a&gt; , 이전 : &lt;a href=&quot;tanh#TANH&quot;&gt;TANH&lt;/a&gt; , Up : &lt;a href=&quot;intrinsic-procedures#Intrinsic-Procedures&quot;&gt;고유 프로 시저&lt;/a&gt; [ &lt;a href=&quot;index#SEC_Contents&quot;&gt;목차&lt;/a&gt; ] [ &lt;a href=&quot;https://gcc.gnu.org/onlinedocs/gcc-7.2.0/gfortran/Option-Index.html#Option-Index&quot;&gt;색인&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="1a9120d98222d6efc48808a6f24a6dd7d049f38c" translate="yes" xml:space="preserve">
          <source>Next: &lt;a href=&quot;transpose#TRANSPOSE&quot;&gt;TRANSPOSE&lt;/a&gt;, Previous: &lt;a href=&quot;trailz#TRAILZ&quot;&gt;TRAILZ&lt;/a&gt;, Up: &lt;a href=&quot;intrinsic-procedures#Intrinsic-Procedures&quot;&gt;Intrinsic Procedures&lt;/a&gt; [&lt;a href=&quot;index#SEC_Contents&quot;&gt;Contents&lt;/a&gt;][&lt;a href=&quot;https://gcc.gnu.org/onlinedocs/gcc-7.2.0/gfortran/Option-Index.html#Option-Index&quot;&gt;Index&lt;/a&gt;]</source>
          <target state="translated">다음 : &lt;a href=&quot;transpose#TRANSPOSE&quot;&gt;TRANSPOSE&lt;/a&gt; , 이전 : &lt;a href=&quot;trailz#TRAILZ&quot;&gt;TRAILZ&lt;/a&gt; , 위로 : &lt;a href=&quot;intrinsic-procedures#Intrinsic-Procedures&quot;&gt;고유 프로 시저&lt;/a&gt; [ &lt;a href=&quot;index#SEC_Contents&quot;&gt;목차&lt;/a&gt; ] [ &lt;a href=&quot;https://gcc.gnu.org/onlinedocs/gcc-7.2.0/gfortran/Option-Index.html#Option-Index&quot;&gt;색인&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="b77658af5cc72ef016c5f7328ca30859cb5eb521" translate="yes" xml:space="preserve">
          <source>Next: &lt;a href=&quot;ts-29113-status#TS-29113-status&quot;&gt;TS 29113 status&lt;/a&gt;, Previous: &lt;a href=&quot;fortran-2003-status#Fortran-2003-status&quot;&gt;Fortran 2003 status&lt;/a&gt;, Up: &lt;a href=&quot;fortran-2003-and-2008-status#Fortran-2003-and-2008-status&quot;&gt;Fortran 2003 and 2008 status&lt;/a&gt; [&lt;a href=&quot;index#SEC_Contents&quot;&gt;Contents&lt;/a&gt;][&lt;a href=&quot;https://gcc.gnu.org/onlinedocs/gcc-7.2.0/gfortran/Option-Index.html#Option-Index&quot;&gt;Index&lt;/a&gt;]</source>
          <target state="translated">다음 : &lt;a href=&quot;ts-29113-status#TS-29113-status&quot;&gt;TS 29113 상태&lt;/a&gt; , 이전 : &lt;a href=&quot;fortran-2003-status#Fortran-2003-status&quot;&gt;Fortran 2003 상태&lt;/a&gt; , 위로 : &lt;a href=&quot;fortran-2003-and-2008-status#Fortran-2003-and-2008-status&quot;&gt;Fortran 2003 및 2008 상태&lt;/a&gt; [ &lt;a href=&quot;index#SEC_Contents&quot;&gt;목차&lt;/a&gt; ] [ &lt;a href=&quot;https://gcc.gnu.org/onlinedocs/gcc-7.2.0/gfortran/Option-Index.html#Option-Index&quot;&gt;색인&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="6c7d1af592510a6b6ef2a9b78d050e30209fbb33" translate="yes" xml:space="preserve">
          <source>Next: &lt;a href=&quot;type-variants-for-integer-intrinsics#Type-variants-for-integer-intrinsics&quot;&gt;Type variants for integer intrinsics&lt;/a&gt;, Previous: &lt;a href=&quot;structure-and-record#STRUCTURE-and-RECORD&quot;&gt;STRUCTURE and RECORD&lt;/a&gt;, Up: &lt;a href=&quot;extensions-implemented-in-gnu-fortran#Extensions-implemented-in-GNU-Fortran&quot;&gt;Extensions implemented in GNU Fortran&lt;/a&gt; [&lt;a href=&quot;index#SEC_Contents&quot;&gt;Contents&lt;/a&gt;][&lt;a href=&quot;https://gcc.gnu.org/onlinedocs/gcc-7.2.0/gfortran/Option-Index.html#Option-Index&quot;&gt;Index&lt;/a&gt;]</source>
          <target state="translated">다음 : &lt;a href=&quot;type-variants-for-integer-intrinsics#Type-variants-for-integer-intrinsics&quot;&gt;정수 내장 함수의 유형 변형&lt;/a&gt; , 이전 : &lt;a href=&quot;structure-and-record#STRUCTURE-and-RECORD&quot;&gt;STRUCTURE 및 RECORD&lt;/a&gt; , Up : &lt;a href=&quot;extensions-implemented-in-gnu-fortran#Extensions-implemented-in-GNU-Fortran&quot;&gt;GNU Fortran에서 구현 된 확장&lt;/a&gt; [ &lt;a href=&quot;index#SEC_Contents&quot;&gt;Contents&lt;/a&gt; ] [ &lt;a href=&quot;https://gcc.gnu.org/onlinedocs/gcc-7.2.0/gfortran/Option-Index.html#Option-Index&quot;&gt;Index&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="413033a5bb14938d31b1f08a694711723726cff8" translate="yes" xml:space="preserve">
          <source>Next: &lt;a href=&quot;union-and-map#UNION-and-MAP&quot;&gt;UNION and MAP&lt;/a&gt;, Previous: &lt;a href=&quot;read_002fwrite-after-eof-marker#Read_002fWrite-after-EOF-marker&quot;&gt;Read/Write after EOF marker&lt;/a&gt;, Up: &lt;a href=&quot;extensions-implemented-in-gnu-fortran#Extensions-implemented-in-GNU-Fortran&quot;&gt;Extensions implemented in GNU Fortran&lt;/a&gt; [&lt;a href=&quot;index#SEC_Contents&quot;&gt;Contents&lt;/a&gt;][&lt;a href=&quot;https://gcc.gnu.org/onlinedocs/gcc-7.2.0/gfortran/Option-Index.html#Option-Index&quot;&gt;Index&lt;/a&gt;]</source>
          <target state="translated">다음 : &lt;a href=&quot;union-and-map#UNION-and-MAP&quot;&gt;UNION 및 MAP&lt;/a&gt; , 이전 : &lt;a href=&quot;read_002fwrite-after-eof-marker#Read_002fWrite-after-EOF-marker&quot;&gt;EOF 마커 후 읽기 / 쓰기&lt;/a&gt; , 위로 : &lt;a href=&quot;extensions-implemented-in-gnu-fortran#Extensions-implemented-in-GNU-Fortran&quot;&gt;GNU Fortran에서 구현 된 확장&lt;/a&gt; [ &lt;a href=&quot;index#SEC_Contents&quot;&gt;Contents&lt;/a&gt; ] [ &lt;a href=&quot;https://gcc.gnu.org/onlinedocs/gcc-7.2.0/gfortran/Option-Index.html#Option-Index&quot;&gt;Index&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="314e48a78ac9fa7ef56078a2a2a2ffb5d4db8925" translate="yes" xml:space="preserve">
          <source>Next: &lt;a href=&quot;working-with-pointers#Working-with-Pointers&quot;&gt;Working with Pointers&lt;/a&gt;, Previous: &lt;a href=&quot;interoperable-global-variables#Interoperable-Global-Variables&quot;&gt;Interoperable Global Variables&lt;/a&gt;, Up: &lt;a href=&quot;interoperability-with-c#Interoperability-with-C&quot;&gt;Interoperability with C&lt;/a&gt; [&lt;a href=&quot;index#SEC_Contents&quot;&gt;Contents&lt;/a&gt;][&lt;a href=&quot;https://gcc.gnu.org/onlinedocs/gcc-7.2.0/gfortran/Option-Index.html#Option-Index&quot;&gt;Index&lt;/a&gt;]</source>
          <target state="translated">다음 : &lt;a href=&quot;working-with-pointers#Working-with-Pointers&quot;&gt;포인터 작업&lt;/a&gt; , 이전 : &lt;a href=&quot;interoperable-global-variables#Interoperable-Global-Variables&quot;&gt;상호 운용 가능한 전역 변수&lt;/a&gt; , 위로 : &lt;a href=&quot;interoperability-with-c#Interoperability-with-C&quot;&gt;C와의 상호 운용성&lt;/a&gt; [ &lt;a href=&quot;index#SEC_Contents&quot;&gt;목차&lt;/a&gt; ] [ &lt;a href=&quot;https://gcc.gnu.org/onlinedocs/gcc-7.2.0/gfortran/Option-Index.html#Option-Index&quot;&gt;색인&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="5ba0dc9c6f05e791ea2f5c30d044bfc69d5fec8f" translate="yes" xml:space="preserve">
          <source>Next: &lt;a href=&quot;x-format-descriptor-without-count-field#X-format-descriptor-without-count-field&quot;&gt;X format descriptor without count field&lt;/a&gt;, Previous: &lt;a href=&quot;old_002dstyle-variable-initialization#Old_002dstyle-variable-initialization&quot;&gt;Old-style variable initialization&lt;/a&gt;, Up: &lt;a href=&quot;extensions-implemented-in-gnu-fortran#Extensions-implemented-in-GNU-Fortran&quot;&gt;Extensions implemented in GNU Fortran&lt;/a&gt; [&lt;a href=&quot;index#SEC_Contents&quot;&gt;Contents&lt;/a&gt;][&lt;a href=&quot;https://gcc.gnu.org/onlinedocs/gcc-7.2.0/gfortran/Option-Index.html#Option-Index&quot;&gt;Index&lt;/a&gt;]</source>
          <target state="translated">다음 : &lt;a href=&quot;x-format-descriptor-without-count-field#X-format-descriptor-without-count-field&quot;&gt;count 필드가없는 X 형식 설명자&lt;/a&gt; , Previous : &lt;a href=&quot;old_002dstyle-variable-initialization#Old_002dstyle-variable-initialization&quot;&gt;구식 변수 초기화&lt;/a&gt; , Up : &lt;a href=&quot;extensions-implemented-in-gnu-fortran#Extensions-implemented-in-GNU-Fortran&quot;&gt;GNU Fortran에서 구현 된 확장&lt;/a&gt; [ &lt;a href=&quot;index#SEC_Contents&quot;&gt;목차&lt;/a&gt; ] [ &lt;a href=&quot;https://gcc.gnu.org/onlinedocs/gcc-7.2.0/gfortran/Option-Index.html#Option-Index&quot;&gt;색인&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="59f5c0783b76f06f0d19c05789a67590a8109885" translate="yes" xml:space="preserve">
          <source>No intrinsic exists to convert between a numeric value and a formatted character string representation &amp;ndash; for instance, given the &lt;code&gt;CHARACTER&lt;/code&gt; value &lt;code&gt;'154'&lt;/code&gt;, obtaining an &lt;code&gt;INTEGER&lt;/code&gt; or &lt;code&gt;REAL&lt;/code&gt; value with the value 154, or vice versa. Instead, this functionality is provided by internal-file I/O, as in the following example:</source>
          <target state="translated">예를 들어, &lt;code&gt;CHARACTER&lt;/code&gt; 값 &lt;code&gt;'154'&lt;/code&gt; 가 주어지면 값이 154 인 &lt;code&gt;INTEGER&lt;/code&gt; 또는 &lt;code&gt;REAL&lt;/code&gt; 값을 얻 거나 그 반대의 경우 와 같이 숫자 값과 형식화 된 문자열 표현간에 변환 할 내장 함수가 없습니다 . 대신이 기능은 다음 예제와 같이 내부 파일 I / O에서 제공합니다.</target>
        </trans-unit>
        <trans-unit id="f8e9588378fa1734d088110502f5010ba417de51" translate="yes" xml:space="preserve">
          <source>No separator between records</source>
          <target state="translated">레코드 사이에 구분 기호가 없습니다</target>
        </trans-unit>
        <trans-unit id="09f3ce6db4f94f713cb22be03bc29f91c7e27164" translate="yes" xml:space="preserve">
          <source>Non-pointer variables with &lt;code&gt;TARGET&lt;/code&gt; attribute can be used as actual argument to &lt;code&gt;POINTER&lt;/code&gt; dummies with &lt;code&gt;INTENT(IN)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;TARGET&lt;/code&gt; 속성을 가진 비 포인터 변수 는 &lt;code&gt;INTENT(IN)&lt;/code&gt; &lt;code&gt;POINTER&lt;/code&gt; 더미에 대한 실제 인수로 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="afe2bf8dda1239bf312bb0f9cc95282355f87856" translate="yes" xml:space="preserve">
          <source>Nonalloatable coarrays have to be registered prior use from remote images. In order to guarantee this, they have to be registered before the main program. This can be achieved by creating constructor functions. That is what GCC does such that also nonallocatable coarrays the memory is allocated and no static memory is used. The token permits to identify the coarray; to the processor, the token is a nonaliasing pointer. The library can, for instance, store the base address of the coarray in the token, some handle or a more complicated struct. The library may also store the array descriptor &lt;var&gt;DESC&lt;/var&gt; when its rank is non-zero.</source>
          <target state="translated">원격 이미지를 통해 사전에 합금화 할 수없는 굵은 선을 등록해야합니다. 이를 보장하려면 메인 프로그램 전에 등록해야합니다. 생성자 함수를 만들어서 달성 할 수 있습니다. 이것이 GCC가 수행 할 수있는 것은 할당 할 수없는 거친 배열에도 메모리가 할당되고 정적 메모리는 사용되지 않습니다. 토큰은 굵은 선을 식별 할 수 있습니다. 프로세서에서 토큰은 비 앨리어싱 포인터입니다. 예를 들어, 라이브러리는 굵은 꼴의 기본 주소를 토큰, 일부 핸들 또는 더 복잡한 구조체에 저장할 수 있습니다. 라이브러리는 순위가 0이 아닌 경우 배열 디스크립터 &lt;var&gt;DESC&lt;/var&gt; 를 저장할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="6eef6648406c333a4035cd5e60d0bf2ecf2606d7" translate="yes" xml:space="preserve">
          <source>None</source>
          <target state="translated">None</target>
        </trans-unit>
        <trans-unit id="9a9707be07da6862114abd49d2570046d4810ca5" translate="yes" xml:space="preserve">
          <source>None.</source>
          <target state="translated">None.</target>
        </trans-unit>
        <trans-unit id="d5a8f130ad0ce8e17ea62550e29ab4aa1511bec2" translate="yes" xml:space="preserve">
          <source>Normally &lt;code&gt;%LOC&lt;/code&gt; is allowed only in parameter lists. However the intrinsic function &lt;code&gt;LOC&lt;/code&gt; does the same thing, and is usable as the right-hand-side of assignments. For compatibility, GNU Fortran supports the use of &lt;code&gt;%LOC&lt;/code&gt; as an alias for the builtin &lt;code&gt;LOC&lt;/code&gt; with</source>
          <target state="translated">일반적으로 &lt;code&gt;%LOC&lt;/code&gt; 는 매개 변수 목록에서만 허용됩니다. 그러나 내장 함수 &lt;code&gt;LOC&lt;/code&gt; 는 동일한 작업을 수행하며 할당의 오른쪽으로 사용할 수 있습니다. 호환성을 위해 GNU 포트란의 사용을 지원합니다 &lt;code&gt;%LOC&lt;/code&gt; 내장에 대한 별칭으로 &lt;code&gt;LOC&lt;/code&gt; 와를</target>
        </trans-unit>
        <trans-unit id="bf9692e469136a4123089c8e5bef987162bd00d5" translate="yes" xml:space="preserve">
          <source>Not all these elements are relevant on all systems. If an element is not relevant, it is returned as 0.</source>
          <target state="translated">이러한 모든 요소가 모든 시스템과 관련이있는 것은 아닙니다. 요소가 관련이 없으면 0으로 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="f9a4113bd9ede143bb2302d6df4a5dd6809acfdc" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;GETENV&lt;/code&gt; need not be thread-safe. It is the responsibility of the user to ensure that the environment is not being updated concurrently with a call to the &lt;code&gt;GETENV&lt;/code&gt; intrinsic.</source>
          <target state="translated">참고 &lt;code&gt;GETENV&lt;/code&gt; 가 스레드 안전 할 필요는 없다. &lt;code&gt;GETENV&lt;/code&gt; 내장 호출로 환경이 동시에 업데이트되지 않도록하는 것은 사용자의 책임입니다 .</target>
        </trans-unit>
        <trans-unit id="d09a6b7603f4c686a6c657819bdd9f41de1d8ae4" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;GET_ENVIRONMENT_VARIABLE&lt;/code&gt; need not be thread-safe. It is the responsibility of the user to ensure that the environment is not being updated concurrently with a call to the &lt;code&gt;GET_ENVIRONMENT_VARIABLE&lt;/code&gt; intrinsic.</source>
          <target state="translated">참고 &lt;code&gt;GET_ENVIRONMENT_VARIABLE&lt;/code&gt; 가 스레드 안전 할 필요는 없다. 환경이 &lt;code&gt;GET_ENVIRONMENT_VARIABLE&lt;/code&gt; 내장 함수에 대한 호출과 동시에 업데이트되지 않도록하는 것은 사용자의 책임입니다 .</target>
        </trans-unit>
        <trans-unit id="9428370488177c8b3d8b83b6a9c6a0e3d97c1423" translate="yes" xml:space="preserve">
          <source>Note that &lt;var&gt;TIME&lt;/var&gt; may contain a, system dependent, arbitrary offset and may not start with &lt;code&gt;0.0&lt;/code&gt;. For &lt;code&gt;CPU_TIME&lt;/code&gt;, the absolute value is meaningless, only differences between subsequent calls to this subroutine, as shown in the example below, should be used.</source>
          <target state="translated">참고 &lt;var&gt;TIME&lt;/var&gt; 은 포함될 수 종속 시스템은 임의적이고 오프셋으로 시작되지 않을 &lt;code&gt;0.0&lt;/code&gt; . 들면 &lt;code&gt;CPU_TIME&lt;/code&gt; 아래 표기 한 예에 나타낸 바와 같이, 절대 값이 서브 루틴에 대한 후속 호출 간의 차이점 만 의미가있다.</target>
        </trans-unit>
        <trans-unit id="724abbd829e6cc2361d4ae2fff6eee278972db14" translate="yes" xml:space="preserve">
          <source>Note that array dimensions are reversely ordered in C and that arrays in C always start with index 0 while in Fortran they start by default with 1. Thus, an array declaration &lt;code&gt;A(n,m)&lt;/code&gt; in Fortran matches &lt;code&gt;A[m][n]&lt;/code&gt; in C and accessing the element &lt;code&gt;A(i,j)&lt;/code&gt; matches &lt;code&gt;A[j-1][i-1]&lt;/code&gt;. The element following &lt;code&gt;A(i,j)&lt;/code&gt; (C: &lt;code&gt;A[j-1][i-1]&lt;/code&gt;; assuming &lt;em&gt;i &amp;lt; n&lt;/em&gt;) in memory is &lt;code&gt;A(i+1,j)&lt;/code&gt; (C: &lt;code&gt;A[j-1][i]&lt;/code&gt;).</source>
          <target state="translated">배열 차원은 C에서 역순으로 정렬되며 C의 배열은 항상 인덱스 0으로 시작하지만 Fortran에서는 기본적으로 1로 시작합니다. 따라서 Fortran의 배열 선언 &lt;code&gt;A(n,m)&lt;/code&gt; 은 &lt;code&gt;A[m][n]&lt;/code&gt; 과 일치합니다 . C에서 &lt;code&gt;A(i,j)&lt;/code&gt; 요소에 액세스하면 &lt;code&gt;A[j-1][i-1]&lt;/code&gt; 과 일치 합니다. 메모리에서 &lt;code&gt;A(i,j)&lt;/code&gt; 다음 요소 (C : &lt;code&gt;A[j-1][i-1]&lt;/code&gt; ; &lt;em&gt;i &amp;lt;n&lt;/em&gt; 이라고 가정 )는 &lt;code&gt;A(i+1,j)&lt;/code&gt; (C : &lt;code&gt;A[j-1][i]&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="8df0b8d11a3017d38fa311af3f8b1cf5d5d8bfc1" translate="yes" xml:space="preserve">
          <source>Note that in a multi-threaded program (e.g. using OpenMP directives), each thread will have its own random number state. For details of the seeding procedure, see the documentation for the &lt;code&gt;RANDOM_SEED&lt;/code&gt; intrinsic.</source>
          <target state="translated">다중 스레드 프로그램 (예 : OpenMP 지시문 사용)에서 각 스레드는 고유 한 난수 상태를 갖습니다. 시딩 절차에 대한 자세한 내용은 &lt;code&gt;RANDOM_SEED&lt;/code&gt; 내장 문서를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="0492db9b2e09c6a81e9368a1ecea6ff4b686c186" translate="yes" xml:space="preserve">
          <source>Note that initializing an &lt;code&gt;INTEGER&lt;/code&gt; variable with a statement such as &lt;code&gt;DATA i/Z'FFFFFFFF'/&lt;/code&gt; will give an integer overflow error rather than the desired result of &lt;em&gt;-1&lt;/em&gt; when &lt;code&gt;i&lt;/code&gt; is a 32-bit integer on a system that supports 64-bit integers. The &amp;lsquo;</source>
          <target state="translated">&lt;code&gt;DATA i/Z'FFFFFFFF'/&lt;/code&gt; 와 같은 명령문으로 &lt;code&gt;INTEGER&lt;/code&gt; 변수 를 초기화하면 64 비트 정수를 지원하는 시스템에서 &lt;code&gt;i&lt;/code&gt; 가 32 비트 정수인 경우 원하는 결과 &lt;em&gt;-1&lt;/em&gt; 대신 정수 오버 플로우 오류가 발생 합니다. . '&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b6268da71b8d3fed9a7df585844be9dd2d2cc358" translate="yes" xml:space="preserve">
          <source>Note that just because the names match does &lt;em&gt;not&lt;/em&gt; mean that the interface implemented by GNU Fortran for an external name matches the interface implemented by some other language for that same name. That is, getting code produced by GNU Fortran to link to code produced by some other compiler using this or any other method can be only a small part of the overall solution&amp;mdash;getting the code generated by both compilers to agree on issues other than naming can require significant effort, and, unlike naming disagreements, linkers normally cannot detect disagreements in these other areas.</source>
          <target state="translated">이름이 일치 한다고해서 외부 이름에 대해 GNU Fortran이 구현 한 인터페이스가 동일한 이름에 대해 다른 언어로 구현 된 인터페이스와 일치한다는 의미 는 &lt;em&gt;아닙니다&lt;/em&gt; . 즉,이 방법이나 다른 방법을 사용하여 GNU Fortran이 생성 한 코드를 다른 컴파일러가 생성 한 코드에 링크하도록하는 것은 전체 솔루션의 일부일 수 있습니다. 상당한 노력이 필요하며, 명명 불일치와 달리 링커는 일반적으로 이러한 다른 영역에서 불일치를 감지 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="2eb739454e5576698283f004a3baaf93d546e745" translate="yes" xml:space="preserve">
          <source>Note that pointer arguments also frequently need the &lt;code&gt;VALUE&lt;/code&gt; attribute, see &lt;a href=&quot;working-with-pointers#Working-with-Pointers&quot;&gt;Working with Pointers&lt;/a&gt;.</source>
          <target state="translated">포인터 인수에도 종종 &lt;code&gt;VALUE&lt;/code&gt; 속성이 필요합니다 ( &lt;a href=&quot;working-with-pointers#Working-with-Pointers&quot;&gt;포인터 작업&lt;/a&gt; 참조) .</target>
        </trans-unit>
        <trans-unit id="643a90b7cc572aa8f24a2a4aeec18309319e74d7" translate="yes" xml:space="preserve">
          <source>Note that the</source>
          <target state="translated">참고</target>
        </trans-unit>
        <trans-unit id="c4ffab44d1000739ba584c6f7da775a57eec48c0" translate="yes" xml:space="preserve">
          <source>Note that the &lt;code&gt;FGET&lt;/code&gt; intrinsic is provided for backwards compatibility with &lt;code&gt;g77&lt;/code&gt;. GNU Fortran provides the Fortran 2003 Stream facility. Programmers should consider the use of new stream IO feature in new code for future portability. See also &lt;a href=&quot;fortran-2003-status#Fortran-2003-status&quot;&gt;Fortran 2003 status&lt;/a&gt;.</source>
          <target state="translated">있습니다 &lt;code&gt;FGET&lt;/code&gt; 의 고유은 이전 버전과의 호환성을 위해 제공됩니다 &lt;code&gt;g77&lt;/code&gt; . GNU Fortran은 Fortran 2003 스트림 기능을 제공합니다. 프로그래머는 향후 이식성을 위해 새로운 코드에서 새로운 스트림 IO 기능을 사용하는 것을 고려해야합니다. &lt;a href=&quot;fortran-2003-status#Fortran-2003-status&quot;&gt;Fortran 2003 status&lt;/a&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="2b300932207361024e4ba1ed8208d90addb927f3" translate="yes" xml:space="preserve">
          <source>Note that the &lt;code&gt;system&lt;/code&gt; function need not be thread-safe. It is the responsibility of the user to ensure that &lt;code&gt;system&lt;/code&gt; is not called concurrently.</source>
          <target state="translated">주의 &lt;code&gt;system&lt;/code&gt; 함수가 스레드 안전 할 필요는 없다. &lt;code&gt;system&lt;/code&gt; 이 동시에 호출되지 않도록하는 것은 사용자의 책임입니다 .</target>
        </trans-unit>
        <trans-unit id="85a90d8db26d77a0ba7651999d8ecf5008c11016" translate="yes" xml:space="preserve">
          <source>Note that the assignment of a scalar to an array is permitted. In addition, the library has to handle numeric-type conversion and for strings, padding and different character kinds.</source>
          <target state="translated">스칼라를 배열에 할당하는 것이 허용됩니다. 또한 라이브러리는 숫자 형식 변환과 문자열, 패딩 및 다양한 문자 종류를 처리해야합니다.</target>
        </trans-unit>
        <trans-unit id="af5d34475b687fba19b9985fef68c630cd211a96" translate="yes" xml:space="preserve">
          <source>Note that the library has to handle numeric-type conversion and for strings, padding and different character kinds.</source>
          <target state="translated">라이브러리는 숫자 유형 변환과 문자열, 패딩 및 다양한 문자 종류를 처리해야합니다.</target>
        </trans-unit>
        <trans-unit id="5f64f00b7e1d7561343d5c9de1e9e90a10342082" translate="yes" xml:space="preserve">
          <source>Note that this conversion will occur if at least one operand is of integral type. As a result, a logical operand will be converted to an integer when the other operand is an integer in a logical operation. In this case, &lt;code&gt;.TRUE.&lt;/code&gt; is converted to &lt;code&gt;1&lt;/code&gt; and &lt;code&gt;.FALSE.&lt;/code&gt; to &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="translated">이 변환은 하나 이상의 피연산자가 정수 유형 인 경우에 발생합니다. 결과적으로 다른 피연산자가 논리 연산에서 정수인 경우 논리 피연산자는 정수로 변환됩니다. 이 경우 &lt;code&gt;.TRUE.&lt;/code&gt; &lt;code&gt;1&lt;/code&gt; 과 &lt;code&gt;.FALSE.&lt;/code&gt; 로 변환됩니다 . 에 &lt;code&gt;0&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d32318606d957bff5cc6453287f341aa288c1a6e" translate="yes" xml:space="preserve">
          <source>Note that this is an experimental feature, incomplete, and subject to change in future versions of GCC. See &lt;a href=&quot;https://gcc.gnu.org/wiki/OpenACC&quot;&gt;https://gcc.gnu.org/wiki/OpenACC&lt;/a&gt; for more information.</source>
          <target state="translated">이는 실험적인 기능이며 불완전하며 향후 GCC 버전에서 변경 될 수 있습니다. 자세한 내용은 &lt;a href=&quot;https://gcc.gnu.org/wiki/OpenACC&quot;&gt;https://gcc.gnu.org/wiki/OpenACC&lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="5719c026b3b364ce2031eb5fb13e494c260bea1b" translate="yes" xml:space="preserve">
          <source>Note that variables which are explicitly initialized in declarations or in &lt;code&gt;DATA&lt;/code&gt; statements automatically acquire the &lt;code&gt;SAVE&lt;/code&gt; attribute.</source>
          <target state="translated">선언이나 &lt;code&gt;DATA&lt;/code&gt; 문 에서 명시 적으로 초기화 된 변수는 자동으로 &lt;code&gt;SAVE&lt;/code&gt; 특성을 얻습니다 .</target>
        </trans-unit>
        <trans-unit id="ceb9f48edd061366f9a394cd45db21d066208b99" translate="yes" xml:space="preserve">
          <source>Note, however, that &lt;code&gt;TYPE(*)&lt;/code&gt; only accepts scalar arguments, unless the &lt;code&gt;DIMENSION&lt;/code&gt; is explicitly specified. As &lt;code&gt;DIMENSION(*)&lt;/code&gt; only supports array (including array elements) but no scalars, it is not a full replacement for &lt;code&gt;C_LOC&lt;/code&gt;. On the other hand, assumed-type assumed-rank dummy arguments (&lt;code&gt;TYPE(*), DIMENSION(..)&lt;/code&gt;) allow for both scalars and arrays, but require special code on the callee side to handle the array descriptor.</source>
          <target state="translated">그러나 &lt;code&gt;DIMENSION&lt;/code&gt; 을 명시 적으로 지정 하지 않으면 &lt;code&gt;TYPE(*)&lt;/code&gt; 은 스칼라 인수 만 허용 합니다. 마찬가지로 &lt;code&gt;DIMENSION(*)&lt;/code&gt; 단지 (배열 요소를 포함) 어레이하지만 스칼라를 지원하기 때문에위한 완전한 여분 아니다 &lt;code&gt;C_LOC&lt;/code&gt; . 반면, 가정 유형 가정 순위 더미 인수 ( &lt;code&gt;TYPE(*), DIMENSION(..)&lt;/code&gt; )는 스칼라와 배열을 모두 허용하지만 배열 설명자를 처리하려면 수신자 측에 특수 코드가 필요합니다.</target>
        </trans-unit>
        <trans-unit id="83423c198b6099edba08f185f940042d5dba3b79" translate="yes" xml:space="preserve">
          <source>Note:</source>
          <target state="translated">Note:</target>
        </trans-unit>
        <trans-unit id="06ec448757ab0d461600f5726a5d3fbeb29ee937" translate="yes" xml:space="preserve">
          <source>Note: Currently, GNU Fortran does not support the array descriptor (dope vector) as specified in the Technical Specification, but uses an array descriptor with different fields. The Chasm Language Interoperability Tools, &lt;a href=&quot;http://chasm-interop.sourceforge.net/&quot;&gt;http://chasm-interop.sourceforge.net/&lt;/a&gt;, provide an interface to GNU Fortran&amp;rsquo;s array descriptor.</source>
          <target state="translated">참고 : 현재 GNU Fortran은 기술 사양에 지정된 배열 설명자 (도프 벡터)를 지원하지 않지만 필드가 다른 배열 설명자를 사용합니다. Chasm Language Interoperability Tools ( &lt;a href=&quot;http://chasm-interop.sourceforge.net/&quot;&gt;http://chasm-interop.sourceforge.net/&lt;/a&gt; )는 GNU Fortran의 배열 설명자에 대한 인터페이스를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="bda0ab1eeb6cd0ce9fdfa4b078d9fbe22a43bba1" translate="yes" xml:space="preserve">
          <source>Note: In the future this may also include other forms of checking, e.g., checking substring references.</source>
          <target state="translated">참고 : 앞으로는 다른 형식의 검사 (예 : 하위 문자열 참조 검사)도 포함될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="89ace1158b7aa64bba3bf887a0e518662f0af8c7" translate="yes" xml:space="preserve">
          <source>Note: The warning is only printed once per location.</source>
          <target state="translated">참고 : 경고는 위치 당 한 번만 인쇄됩니다.</target>
        </trans-unit>
        <trans-unit id="9c3befe7e22c8667bc957541f49b0ee79970b588" translate="yes" xml:space="preserve">
          <source>Notes:</source>
          <target state="translated">Notes:</target>
        </trans-unit>
        <trans-unit id="b62a5d065d926f5ac84b0a0fa0edaf2ee4fe7a12" translate="yes" xml:space="preserve">
          <source>Null pointers (including &lt;code&gt;NULL()&lt;/code&gt;) and not-allocated variables can be used as actual argument to optional non-pointer, non-allocatable dummy arguments, denoting an absent argument.</source>
          <target state="translated">널 포인터 ( &lt;code&gt;NULL()&lt;/code&gt; ) 및 할당되지 않은 변수는 선택적인 비 포인터, 할당 불가능한 더미 인수에 대한 실제 인수로 사용할 수 있으며 인수가 없음을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="66becde1907b2ea47dd72508e0ba88a8a59db56e" translate="yes" xml:space="preserve">
          <source>Number of bits set</source>
          <target state="translated">비트 수 설정</target>
        </trans-unit>
        <trans-unit id="ff1b052dbeb67238bbc44157b877f0ec5b34e85c" translate="yes" xml:space="preserve">
          <source>Number of blocks allocated (-1 if not available)</source>
          <target state="translated">할당 된 블록 수 (사용할 수없는 경우 -1)</target>
        </trans-unit>
        <trans-unit id="47f08cacb10562f2a83dc90f5805f7a9a6c89a33" translate="yes" xml:space="preserve">
          <source>Number of days since Sunday, range 0&amp;ndash;6</source>
          <target state="translated">일요일 이후의 일 수, 범위 0&amp;ndash;6</target>
        </trans-unit>
        <trans-unit id="e110986fe0fa2ef3141d3cfa2f47a37526d860a0" translate="yes" xml:space="preserve">
          <source>Number of images</source>
          <target state="translated">이미지 수</target>
        </trans-unit>
        <trans-unit id="fdc37770edd8de99a01b6d25f46f0250036ac7ae" translate="yes" xml:space="preserve">
          <source>Number of leading zero bits of an integer</source>
          <target state="translated">정수의 선행 0 비트 수</target>
        </trans-unit>
        <trans-unit id="a3275a16ef5f550e3a9777e377a1e501bfdab390" translate="yes" xml:space="preserve">
          <source>Number of links</source>
          <target state="translated">링크 수</target>
        </trans-unit>
        <trans-unit id="f4dc77ae1d9e332a6f5838f60193c10563e04838" translate="yes" xml:space="preserve">
          <source>Number of months since January, range 0&amp;ndash;11</source>
          <target state="translated">1 월 이후의 개월 수 (0&amp;ndash;11 범위)</target>
        </trans-unit>
        <trans-unit id="e16ba369e76f8ff0a6572719261f465061fdfe74" translate="yes" xml:space="preserve">
          <source>Number of trailing zero bits of an integer</source>
          <target state="translated">정수의 후행 0 비트 수</target>
        </trans-unit>
        <trans-unit id="30a62380404b3b267a5c4e21b5e111455d09031e" translate="yes" xml:space="preserve">
          <source>Numeric</source>
          <target state="translated">Numeric</target>
        </trans-unit>
        <trans-unit id="ee51e073da81fd57ffa6120e365108d0dffb43f1" translate="yes" xml:space="preserve">
          <source>Obtain the C address of a procedure</source>
          <target state="translated">절차의 C 주소를 얻습니다</target>
        </trans-unit>
        <trans-unit id="a7bb5b7e32480087e2fdb2a1b1e9df92eebe17ce" translate="yes" xml:space="preserve">
          <source>Obtain the C address of an object</source>
          <target state="translated">객체의 C 주소를 얻습니다</target>
        </trans-unit>
        <trans-unit id="733abab1a15c197f5021c3d3e2d99f66dbfb001d" translate="yes" xml:space="preserve">
          <source>Obtaining the value of a variable atomically</source>
          <target state="translated">원자 적으로 변수의 값 얻기</target>
        </trans-unit>
        <trans-unit id="0bb11d089e173fd344f11980aa63730eec1cfe22" translate="yes" xml:space="preserve">
          <source>Old-style use of &amp;lsquo;</source>
          <target state="translated">'의 구식 사용</target>
        </trans-unit>
        <trans-unit id="a2a01d4ca6f8f100cbd3d4d79210deca4d95f8c0" translate="yes" xml:space="preserve">
          <source>On POSIX systems, you can request that all data is transferred to the storage device by calling the &lt;code&gt;fsync&lt;/code&gt; function, with the POSIX file descriptor of the I/O unit as argument (retrieved with GNU intrinsic &lt;code&gt;FNUM&lt;/code&gt;). The following example shows how:</source>
          <target state="translated">POSIX 시스템에서는 I / O 장치의 POSIX 파일 디스크립터를 인수 (GNU 내장 &lt;code&gt;FNUM&lt;/code&gt; 으로 검색)와 함께 &lt;code&gt;fsync&lt;/code&gt; 함수 를 호출하여 모든 데이터가 저장 장치로 전송되도록 요청할 수 있습니다 . 다음 예제는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="12e7f6b017d40505701d13f8a985c048a2b45983" translate="yes" xml:space="preserve">
          <source>On glibc-based systems, OpenMP enabled applications cannot be statically linked due to limitations of the underlying pthreads-implementation. It might be possible to get a working solution if &lt;code&gt;-Wl,--whole-archive -lpthread -Wl,--no-whole-archive&lt;/code&gt; is added to the command line. However, this is not supported by &lt;code&gt;gcc&lt;/code&gt; and thus not recommended.</source>
          <target state="translated">glibc 기반 시스템에서 기본 pthreads 구현의 제한으로 인해 OpenMP 지원 응용 프로그램을 정적으로 연결할 수 없습니다. &lt;code&gt;-Wl,--whole-archive -lpthread -Wl,--no-whole-archive&lt;/code&gt; 가 명령 행에 추가 되면 작업 솔루션을 얻을 수 있습니다 . 그러나 이것은 &lt;code&gt;gcc&lt;/code&gt; 에서 지원 하지 않으므로 권장하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="04f79a499f7d72cd79670baf1b39413cf67e49c1" translate="yes" xml:space="preserve">
          <source>On some systems, procedures and global variables (module variables and &lt;code&gt;COMMON&lt;/code&gt; blocks) need special handling to be accessible when they are in a shared library. The following attributes are available:</source>
          <target state="translated">일부 시스템에서는 프로 시저 및 전역 변수 (모듈 변수 및 &lt;code&gt;COMMON&lt;/code&gt; 블록)가 공유 라이브러리에있을 때 액세스 할 수 있도록 특별한 처리가 필요합니다. 다음과 같은 속성을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="47322040adf06b71f362aea92753f5851d86b784" translate="yes" xml:space="preserve">
          <source>On some systems, the underlying timings are represented using types with sufficiently small limits that overflows (wrap around) are possible, such as 32-bit types. Therefore, the values returned by this intrinsic might be, or become, negative, or numerically less than previous values, during a single run of the compiled program.</source>
          <target state="translated">일부 시스템에서 기본 타이밍은 32 비트 유형과 같이 오버 플로우 (랩 어라운드)가 가능한 충분히 작은 한계를 가진 유형을 사용하여 표시됩니다. 따라서이 내장 함수에서 반환 된 값은 컴파일 된 프로그램을 한 번 실행하는 동안 음수이거나 이전 값보다 숫자가 작을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f61759f6ed3890f04c249dd91cb9dd263d93f566" translate="yes" xml:space="preserve">
          <source>On systems that provide</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07ee8d0fdf93e090b1f57bcee57b2ae7b06a8eee" translate="yes" xml:space="preserve">
          <source>On the MinGW target, the directory returned by the &lt;code&gt;GetTempPath&lt;/code&gt; function. Alternatively, on the Cygwin target, the &lt;code&gt;TMP&lt;/code&gt; and &lt;code&gt;TEMP&lt;/code&gt; environment variables, if they exist, in that order.</source>
          <target state="translated">MinGW 대상에서 &lt;code&gt;GetTempPath&lt;/code&gt; 함수가 반환 한 디렉토리 입니다. 또는 Cygwin 대상에서 &lt;code&gt;TMP&lt;/code&gt; 및 &lt;code&gt;TEMP&lt;/code&gt; 환경 변수 (있는 경우)가 순서대로 있습니다.</target>
        </trans-unit>
        <trans-unit id="16b8f5a70407d020355a02c665efcf512778b05e" translate="yes" xml:space="preserve">
          <source>On the Windows platform, the version with &lt;var&gt;kind=4&lt;/var&gt; arguments uses the &lt;code&gt;GetTickCount&lt;/code&gt; function, whereas the &lt;var&gt;kind=8&lt;/var&gt; version uses &lt;code&gt;QueryPerformanceCounter&lt;/code&gt; and &lt;code&gt;QueryPerformanceCounterFrequency&lt;/code&gt;. For more information, and potential caveats, please see the platform documentation.</source>
          <target state="translated">Windows 플랫폼에서 &lt;var&gt;kind=4&lt;/var&gt; 인수가 있는 버전 은 &lt;code&gt;GetTickCount&lt;/code&gt; 함수를 사용하지만 &lt;var&gt;kind=8&lt;/var&gt; 버전은 &lt;code&gt;QueryPerformanceCounter&lt;/code&gt; 및 &lt;code&gt;QueryPerformanceCounterFrequency&lt;/code&gt; 를 사용 합니다. 자세한 내용과 잠재적 경고에 대해서는 플랫폼 설명서를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="e35edbcf9b53e992f19170d481fdc4fd98480199" translate="yes" xml:space="preserve">
          <source>One line feed between records (default)</source>
          <target state="translated">레코드 간 한 줄 피드 (기본값)</target>
        </trans-unit>
        <trans-unit id="41c99df0ba2459ad70c6cb72e9a46e2a6e8d9027" translate="yes" xml:space="preserve">
          <source>Only significant when</source>
          <target state="translated">중요한 경우에만</target>
        </trans-unit>
        <trans-unit id="fcc68b383682db709a9166e665766fcd902b2ad2" translate="yes" xml:space="preserve">
          <source>Opaque pointer to represent a team-handle. This type is a stand-in for the future implementation of teams. It is about to change without further notice.</source>
          <target state="translated">팀 핸들을 나타내는 불투명 포인터. 이 유형은 향후 팀 구현을위한 표준입니다. 추후 공지없이 변경 될 예정입니다.</target>
        </trans-unit>
        <trans-unit id="802b48e116b59b82aa7d37d5ce4583c61f5ad838" translate="yes" xml:space="preserve">
          <source>OpenACC Application Programming Interface v2.0</source>
          <target state="translated">OpenACC 응용 프로그래밍 인터페이스 v2.0</target>
        </trans-unit>
        <trans-unit id="f5bb820ffe55a1c4f7f37dc7f2adaf3b90e7ae64" translate="yes" xml:space="preserve">
          <source>OpenACC is an application programming interface (API) that supports offloading of code to accelerator devices. It consists of a set of compiler directives, library routines, and environment variables that influence run-time behavior.</source>
          <target state="translated">OpenACC는 코드를 가속기 장치로 오프로드하는 것을 지원하는 API (응용 프로그래밍 인터페이스)입니다. 런타임 동작에 영향을주는 컴파일러 지시문, 라이브러리 루틴 및 환경 변수 세트로 구성됩니다.</target>
        </trans-unit>
        <trans-unit id="c4f42afc0137056f2547dddee077a8893c7c0335" translate="yes" xml:space="preserve">
          <source>OpenMP (Open Multi-Processing) is an application programming interface (API) that supports multi-platform shared memory multiprocessing programming in C/C++ and Fortran on many architectures, including Unix and Microsoft Windows platforms. It consists of a set of compiler directives, library routines, and environment variables that influence run-time behavior.</source>
          <target state="translated">OpenMP (Open Multi-Processing)는 Unix 및 Microsoft Windows 플랫폼을 포함한 많은 아키텍처에서 C / C ++ 및 Fortran의 다중 플랫폼 공유 메모리 다중 처리 프로그래밍을 지원하는 API (응용 프로그래밍 인터페이스)입니다. 런타임 동작에 영향을주는 컴파일러 지시문, 라이브러리 루틴 및 환경 변수 세트로 구성됩니다.</target>
        </trans-unit>
        <trans-unit id="8b9f0af27ee41aea23dd75b086ccaab2d414313e" translate="yes" xml:space="preserve">
          <source>OpenMP Application Program Interface v4.5</source>
          <target state="translated">OpenMP 응용 프로그램 인터페이스 v4.5</target>
        </trans-unit>
        <trans-unit id="d0e687b079fb70f2208d1f8d2c75d64d74925496" translate="yes" xml:space="preserve">
          <source>Operator</source>
          <target state="translated">Operator</target>
        </trans-unit>
        <trans-unit id="2c7ca22e5600046b144f3d24624f25c564332dee" translate="yes" xml:space="preserve">
          <source>Option Index</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48945fda6c17d686363d5183bb3c39690f1e7726" translate="yes" xml:space="preserve">
          <source>Options passed to the compiler</source>
          <target state="translated">컴파일러에 전달 된 옵션</target>
        </trans-unit>
        <trans-unit id="74d6d563333ba52b4c5ea636840c0e6845a21420" translate="yes" xml:space="preserve">
          <source>Other flags enabled by this switch are:</source>
          <target state="translated">이 스위치로 활성화 된 다른 플래그는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="0a6514709ce45799c9611d2f989136e0a99eb3bf" translate="yes" xml:space="preserve">
          <source>Otherwise, with this option, an external name such as &lt;code&gt;MAX_COUNT&lt;/code&gt; is implemented as a reference to the link-time external symbol &lt;code&gt;max_count__&lt;/code&gt;, instead of &lt;code&gt;max_count_&lt;/code&gt;. This is required for compatibility with &lt;code&gt;g77&lt;/code&gt; and &lt;code&gt;f2c&lt;/code&gt;, and is implied by use of the</source>
          <target state="translated">그렇지 않으면이 옵션을 사용하면 &lt;code&gt;MAX_COUNT&lt;/code&gt; 와 같은 외부 이름 이 &lt;code&gt;max_count_&lt;/code&gt; 대신 링크 타임 외부 기호 &lt;code&gt;max_count__&lt;/code&gt; 에 대한 참조로 구현됩니다 . 이것은 &lt;code&gt;g77&lt;/code&gt; 및 &lt;code&gt;f2c&lt;/code&gt; 와의 호환성을 위해 필요 하며</target>
        </trans-unit>
        <trans-unit id="1dde64e363b6994a9c86a118d350dc4f266d578d" translate="yes" xml:space="preserve">
          <source>Output &lt;code&gt;'#include'&lt;/code&gt; directives in addition to the result of preprocessing.</source>
          <target state="translated">전처리 결과와 함께 &lt;code&gt;'#include'&lt;/code&gt; 지시문을 출력 합니다.</target>
        </trans-unit>
        <trans-unit id="7ec9ca4d715199b089af5de23f7ac0f5c33f5cc5" translate="yes" xml:space="preserve">
          <source>Output separating character(s)</source>
          <target state="translated">분리 문자 출력</target>
        </trans-unit>
        <trans-unit id="049a6e0d39abc4f4b61a8402d63a003f45ebbd54" translate="yes" xml:space="preserve">
          <source>Output the internal parse tree after translating the source program into internal representation. Only really useful for debugging the GNU Fortran compiler itself.</source>
          <target state="translated">소스 프로그램을 내부 표현으로 변환 한 후 내부 구문 분석 트리를 출력하십시오. GNU Fortran 컴파일러 자체를 디버깅 할 때만 유용합니다.</target>
        </trans-unit>
        <trans-unit id="f079cf82231824831cbdcfee66afe3eca67557f6" translate="yes" xml:space="preserve">
          <source>Output the internal parse tree after translating the source program into internal representation. Only really useful for debugging the GNU Fortran compiler itself. This option is deprecated; use &lt;code&gt;-fdump-fortran-original&lt;/code&gt; instead.</source>
          <target state="translated">소스 프로그램을 내부 표현으로 변환 한 후 내부 구문 분석 트리를 출력하십시오. GNU Fortran 컴파일러 자체를 디버깅 할 때만 유용합니다. 이 옵션은 더 이상 사용되지 않습니다. 사용 &lt;code&gt;-fdump-fortran-original&lt;/code&gt; 대신.</target>
        </trans-unit>
        <trans-unit id="19b4212d1270db9fecb872eb55d55a4623a51798" translate="yes" xml:space="preserve">
          <source>Output the parse tree after front-end optimization. Only really useful for debugging the GNU Fortran compiler itself.</source>
          <target state="translated">프론트 엔드 최적화 후 구문 분석 트리를 출력하십시오. GNU Fortran 컴파일러 자체를 디버깅 할 때만 유용합니다.</target>
        </trans-unit>
        <trans-unit id="2ad51469697a69d77e4dcc2b16290dc625c1725b" translate="yes" xml:space="preserve">
          <source>Overprinting</source>
          <target state="translated">Overprinting</target>
        </trans-unit>
        <trans-unit id="48a75e7d06bee25f05d21fbcd7985cbe3dc0f1bd" translate="yes" xml:space="preserve">
          <source>Overprinting (no advance)</source>
          <target state="translated">중복 인쇄 (사전 없음)</target>
        </trans-unit>
        <trans-unit id="21006e5db840943dd401c3c0d3393102d0e40842" translate="yes" xml:space="preserve">
          <source>Owner&amp;rsquo;s gid</source>
          <target state="translated">소유주</target>
        </trans-unit>
        <trans-unit id="bc953f940adefbd3d194a168291ef11edb029374" translate="yes" xml:space="preserve">
          <source>Owner&amp;rsquo;s uid</source>
          <target state="translated">소유자의 UID</target>
        </trans-unit>
        <trans-unit id="6fcb6973e5866c4f785dbac99992209c3deb6f56" translate="yes" xml:space="preserve">
          <source>PERROR</source>
          <target state="translated">PERROR</target>
        </trans-unit>
        <trans-unit id="964bd5656c7a016ef0c9ada7382da7ca1fee27a4" translate="yes" xml:space="preserve">
          <source>PRODUCT</source>
          <target state="translated">PRODUCT</target>
        </trans-unit>
        <trans-unit id="43e5a5cc98c84aad675e1f5a3811f793169a2579" translate="yes" xml:space="preserve">
          <source>Pack an array into an array of rank one</source>
          <target state="translated">배열을 순위 1의 배열로 묶습니다.</target>
        </trans-unit>
        <trans-unit id="9d799a2979091ad29c697b9fbf05f972e59218b5" translate="yes" xml:space="preserve">
          <source>Parity of the number of bits set</source>
          <target state="translated">설정된 비트 수의 패리티</target>
        </trans-unit>
        <trans-unit id="7996240e9ec60517273e2572d4e2e1f9a0bf3284" translate="yes" xml:space="preserve">
          <source>Part I: Invoking GNU Fortran</source>
          <target state="translated">1 부 : GNU 포트란 호출</target>
        </trans-unit>
        <trans-unit id="2cf9db06c515d3ddc73d3e3859ee4729bcb2de2b" translate="yes" xml:space="preserve">
          <source>Part II: Language Reference</source>
          <target state="translated">파트 II : 언어 참조</target>
        </trans-unit>
        <trans-unit id="d28336c64804913385c13c2e8eb52dfe1af1e6f7" translate="yes" xml:space="preserve">
          <source>Passes the command &lt;var&gt;COMMAND&lt;/var&gt; to a shell (see &lt;code&gt;system(3)&lt;/code&gt;). If argument &lt;var&gt;STATUS&lt;/var&gt; is present, it contains the value returned by &lt;code&gt;system(3)&lt;/code&gt;, which is presumably 0 if the shell command succeeded. Note that which shell is used to invoke the command is system-dependent and environment-dependent.</source>
          <target state="translated">명령 &lt;var&gt;COMMAND&lt;/var&gt; 를 쉘에 전달합니다 ( &lt;code&gt;system(3)&lt;/code&gt; 참조 ). &lt;var&gt;STATUS&lt;/var&gt; 인수 가 존재하면 &lt;code&gt;system(3)&lt;/code&gt; 리턴 한 값을 포함하며 , 쉘 명령이 성공한 경우 0입니다. 명령을 호출하는 데 사용되는 쉘은 시스템 및 환경에 따라 다릅니다.</target>
        </trans-unit>
        <trans-unit id="1b2b99b877c651a1782bcf98ec81aa469e228dbb" translate="yes" xml:space="preserve">
          <source>Performs a matrix multiplication on numeric or logical arguments.</source>
          <target state="translated">숫자 또는 논리 인수에 행렬 곱셈을 수행합니다.</target>
        </trans-unit>
        <trans-unit id="813909da923068de4b80faba54cf9661fb546cc5" translate="yes" xml:space="preserve">
          <source>Please note that GNU Fortran provides the Fortran 2003 Stream facility. Programmers should consider the use of new stream IO feature in new code for future portability. See also &lt;a href=&quot;fortran-2003-status#Fortran-2003-status&quot;&gt;Fortran 2003 status&lt;/a&gt;.</source>
          <target state="translated">GNU Fortran은 Fortran 2003 Stream 기능을 제공합니다. 프로그래머는 향후 이식성을 위해 새로운 코드에서 새로운 스트림 IO 기능을 사용하는 것을 고려해야합니다. &lt;a href=&quot;fortran-2003-status#Fortran-2003-status&quot;&gt;Fortran 2003 status&lt;/a&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="fa7bc9c8f0b42a0a5d21f2281c64c3b4f24f58f2" translate="yes" xml:space="preserve">
          <source>Please note that in GNU Fortran, these two sets of intrinsics (&lt;code&gt;RAND&lt;/code&gt;, &lt;code&gt;IRAND&lt;/code&gt; and &lt;code&gt;SRAND&lt;/code&gt; on the one hand, &lt;code&gt;RANDOM_NUMBER&lt;/code&gt; and &lt;code&gt;RANDOM_SEED&lt;/code&gt; on the other hand) access two independent pseudo-random number generators.</source>
          <target state="translated">GNU Fortran에서이 두 내장 함수 ( 한편으로는 &lt;code&gt;RAND&lt;/code&gt; , &lt;code&gt;IRAND&lt;/code&gt; 및 &lt;code&gt;SRAND&lt;/code&gt; , 다른 한편으로는 &lt;code&gt;RANDOM_NUMBER&lt;/code&gt; 및 &lt;code&gt;RANDOM_SEED&lt;/code&gt; )는 두 개의 독립적 인 의사 난수 생성기에 액세스합니다.</target>
        </trans-unit>
        <trans-unit id="5da73b2879dd6c7d1424ac8e32e68cb5dc6cd162" translate="yes" xml:space="preserve">
          <source>Please note, that this implementation is thread safe if used within OpenMP directives, i.e., its state will be consistent while called from multiple threads. However, if &lt;code&gt;DTIME&lt;/code&gt; is called from multiple threads, the result is still the time since the last invocation. This may not give the intended results. If possible, use &lt;code&gt;CPU_TIME&lt;/code&gt; instead.</source>
          <target state="translated">이 구현은 OpenMP 지시문 내에서 사용되는 경우 스레드 안전합니다. 즉, 여러 스레드에서 호출되는 동안 해당 상태가 일관됩니다. 그러나 여러 스레드에서 &lt;code&gt;DTIME&lt;/code&gt; 을 호출 한 경우 에도 마지막 호출 이후 시간이 계속됩니다. 의도 한 결과를 얻지 못할 수 있습니다. 가능하면 &lt;code&gt;CPU_TIME&lt;/code&gt; 을 대신 사용 하십시오 .</target>
        </trans-unit>
        <trans-unit id="b092b192a4d648e172b4a375b0666e778cde5015" translate="yes" xml:space="preserve">
          <source>Please note:</source>
          <target state="translated">참고 :</target>
        </trans-unit>
        <trans-unit id="94da1cf066c95bd8c992d2c60a9e2bda67407f74" translate="yes" xml:space="preserve">
          <source>Pointer arithmetic is valid with Cray pointers, but it is not the same as C pointer arithmetic. Cray pointers are just ordinary integers, so the user is responsible for determining how many bytes to add to a pointer in order to increment it. Consider the following example:</source>
          <target state="translated">포인터 산술은 Cray 포인터에서 유효하지만 C 포인터 산술과 동일하지 않습니다. 크레이 포인터는 단지 일반적인 정수이므로 사용자는 포인터를 증가시키기 위해 포인터에 추가 할 바이트 수를 결정해야합니다. 다음 예제를 고려하십시오.</target>
        </trans-unit>
        <trans-unit id="fa85b7a2c6b924068750dc9be8923d3de63c6cfc" translate="yes" xml:space="preserve">
          <source>Pointer/pointee pairs are declared in statements of the form:</source>
          <target state="translated">포인터 / 포인터 쌍은 다음 형식의 문장으로 선언됩니다.</target>
        </trans-unit>
        <trans-unit id="c7f29d99fd6a6e0d0819156163e126809613b840" translate="yes" xml:space="preserve">
          <source>Pointers including procedure pointers and those in a derived type (pointer components) can now be initialized by a target instead of only by &lt;code&gt;NULL&lt;/code&gt;.</source>
          <target state="translated">프로 시저 포인터 및 파생 된 유형 (포인터 컴포넌트)을 포함하는 포인터는 이제 &lt;code&gt;NULL&lt;/code&gt; 로만 대신 대상으로 초기화 될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="d9faed1c330b5c2318a30adc5278e204178a467c" translate="yes" xml:space="preserve">
          <source>Polymorphic entities (&amp;ldquo;&lt;code&gt;CLASS&lt;/code&gt;&amp;rdquo;) for derived types and unlimited polymorphism (&amp;ldquo;&lt;code&gt;CLASS(*)&lt;/code&gt;&amp;rdquo;) &amp;ndash; including &lt;code&gt;SAME_TYPE_AS&lt;/code&gt;, &lt;code&gt;EXTENDS_TYPE_OF&lt;/code&gt; and &lt;code&gt;SELECT TYPE&lt;/code&gt; for scalars and arrays and finalization.</source>
          <target state="translated">파생 유형 및 무한 다형성 (&amp;ldquo; &lt;code&gt;CLASS(*)&lt;/code&gt; &amp;rdquo;)에 대한 다형성 엔터티 (&amp;ldquo; &lt;code&gt;CLASS&lt;/code&gt; &amp;rdquo;) &amp;ndash; &lt;code&gt;SAME_TYPE_AS&lt;/code&gt; , &lt;code&gt;EXTENDS_TYPE_OF&lt;/code&gt; 및 스칼라 및 배열에 대한 &lt;code&gt;SELECT TYPE&lt;/code&gt; 및 종료를 포함합니다.</target>
        </trans-unit>
        <trans-unit id="c34c9a50b345b1c4e8de1d279b14fc51316efc05" translate="yes" xml:space="preserve">
          <source>Popular values for &lt;var&gt;n&lt;/var&gt; include 72 (the standard and the default), 80 (card image), and 132 (corresponding to &amp;ldquo;extended-source&amp;rdquo; options in some popular compilers). &lt;var&gt;n&lt;/var&gt; may also be &amp;lsquo;</source>
          <target state="translated">&lt;var&gt;n&lt;/var&gt; 의 인기 값 은 72 (표준 및 기본값), 80 (카드 이미지) 및 132 (일부 인기 컴파일러의 &quot;확장 소스&quot;옵션에 해당)입니다. &lt;var&gt;n&lt;/var&gt; 은 '</target>
        </trans-unit>
        <trans-unit id="43961c9783621d3b1501833d80b2708317d64014" translate="yes" xml:space="preserve">
          <source>Position of a substring within a string</source>
          <target state="translated">문자열 내 하위 문자열의 위치</target>
        </trans-unit>
        <trans-unit id="8a4421d7ce618ef5e51024c273f2f7fd364823ee" translate="yes" xml:space="preserve">
          <source>Positive difference</source>
          <target state="translated">긍정적 인 차이</target>
        </trans-unit>
        <trans-unit id="f2723124ed203b84036ae3eafe109e54fb05b87d" translate="yes" xml:space="preserve">
          <source>Positive, scalar default-integer constant used as STAT= return value if the argument in the statement requires communication with an image, which has is in the failed state. (TS 18508 or later.)</source>
          <target state="translated">명령문의 인수가 실패 상태 인 이미지와 통신해야하는 경우 STAT = 리턴 값으로 사용되는 양의 스칼라 기본 정수 상수. (TS 18508 이상)</target>
        </trans-unit>
        <trans-unit id="fd427f4ed18fd873f9d744b6904a336c7bb7477d" translate="yes" xml:space="preserve">
          <source>Positive, scalar default-integer constant used as STAT= return value if the argument in the statement requires synchronisation with an image, which has initiated the termination of the execution. (Fortran 2008 or later.)</source>
          <target state="translated">명령문의 인수가 이미지와의 동기화가 필요한 경우 실행 종료를 시작한 경우 STAT = 리턴 값으로 사용되는 양의 스칼라 기본 정수 상수. (Fortran 2008 이상)</target>
        </trans-unit>
        <trans-unit id="4f5461b2b4dd5f4c8b4ccb33c1cc90f22406e958" translate="yes" xml:space="preserve">
          <source>Post an event</source>
          <target state="translated">이벤트 게시</target>
        </trans-unit>
        <trans-unit id="c647105056e253fc65667f55fcc8604c6c25b3e5" translate="yes" xml:space="preserve">
          <source>Predefine name as a macro, with definition &lt;code&gt;1&lt;/code&gt;.</source>
          <target state="translated">정의가 &lt;code&gt;1&lt;/code&gt; 인 매크로로 사전 정의 된 이름 .</target>
        </trans-unit>
        <trans-unit id="b1eef140451d333cac5a6bcd1f4fe2010bd2abd7" translate="yes" xml:space="preserve">
          <source>Preferred I/O block size (-1 if not available)</source>
          <target state="translated">기본 I / O 블록 크기 (사용할 수없는 경우 -1)</target>
        </trans-unit>
        <trans-unit id="40a7b318b2180a1eea0d2cdfcfe0f0063a794160" translate="yes" xml:space="preserve">
          <source>Preprocessing Options</source>
          <target state="translated">전처리 옵션</target>
        </trans-unit>
        <trans-unit id="3ec1f4538c9a0e3f79c7a64d1e1f2818e3ec924a" translate="yes" xml:space="preserve">
          <source>Preprocessor related options. See section &lt;a href=&quot;preprocessing-and-conditional-compilation#Preprocessing-and-conditional-compilation&quot;&gt;Preprocessing and conditional compilation&lt;/a&gt; for more detailed information on preprocessing in &lt;code&gt;gfortran&lt;/code&gt;.</source>
          <target state="translated">전 처리기 관련 옵션. &lt;code&gt;gfortran&lt;/code&gt; 의 전처리에 대한 자세한 정보는 전처리 &lt;a href=&quot;preprocessing-and-conditional-compilation#Preprocessing-and-conditional-compilation&quot;&gt;및 조건부 컴파일&lt;/a&gt; 섹션을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="a7d9cfb6b0f4f68b9a81d03b945f7cc16162fbe7" translate="yes" xml:space="preserve">
          <source>Previous: &lt;a href=&quot;_005fgfortran_005fcaf_005fco_005fsum#g_t_005fgfortran_005fcaf_005fco_005fsum&quot;&gt;_gfortran_caf_co_sum&lt;/a&gt;, Up: &lt;a href=&quot;function-abi-documentation#Function-ABI-Documentation&quot;&gt;Function ABI Documentation&lt;/a&gt; [&lt;a href=&quot;index#SEC_Contents&quot;&gt;Contents&lt;/a&gt;][&lt;a href=&quot;https://gcc.gnu.org/onlinedocs/gcc-7.2.0/gfortran/Option-Index.html#Option-Index&quot;&gt;Index&lt;/a&gt;]</source>
          <target state="translated">Previous : &lt;a href=&quot;_005fgfortran_005fcaf_005fco_005fsum#g_t_005fgfortran_005fcaf_005fco_005fsum&quot;&gt;_gfortran_caf_co_sum&lt;/a&gt; , Up : &lt;a href=&quot;function-abi-documentation#Function-ABI-Documentation&quot;&gt;기능 ABI 문서&lt;/a&gt; [ &lt;a href=&quot;index#SEC_Contents&quot;&gt;목차&lt;/a&gt; ] [ &lt;a href=&quot;https://gcc.gnu.org/onlinedocs/gcc-7.2.0/gfortran/Option-Index.html#Option-Index&quot;&gt;색인&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="87d10b1bef971d0603567c3c65370e38ad1b8060" translate="yes" xml:space="preserve">
          <source>Previous: &lt;a href=&quot;naming-conventions#Naming-conventions&quot;&gt;Naming conventions&lt;/a&gt;, Up: &lt;a href=&quot;naming-and-argument_002dpassing-conventions#Naming-and-argument_002dpassing-conventions&quot;&gt;Naming and argument-passing conventions&lt;/a&gt; [&lt;a href=&quot;index#SEC_Contents&quot;&gt;Contents&lt;/a&gt;][&lt;a href=&quot;https://gcc.gnu.org/onlinedocs/gcc-7.2.0/gfortran/Option-Index.html#Option-Index&quot;&gt;Index&lt;/a&gt;]</source>
          <target state="translated">Previous : &lt;a href=&quot;naming-conventions#Naming-conventions&quot;&gt;명명 규칙&lt;/a&gt; , Up : &lt;a href=&quot;naming-and-argument_002dpassing-conventions#Naming-and-argument_002dpassing-conventions&quot;&gt;명명 및 인수 전달 규칙&lt;/a&gt; [ &lt;a href=&quot;index#SEC_Contents&quot;&gt;목차&lt;/a&gt; ] [ &lt;a href=&quot;https://gcc.gnu.org/onlinedocs/gcc-7.2.0/gfortran/Option-Index.html#Option-Index&quot;&gt;색인&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="31d8f770d45cf5b5588efdbce6041a9c0fef02b4" translate="yes" xml:space="preserve">
          <source>Previous: &lt;a href=&quot;type-and-enum-abi-documentation#Type-and-enum-ABI-Documentation&quot;&gt;Type and enum ABI Documentation&lt;/a&gt;, Up: &lt;a href=&quot;coarray-programming#Coarray-Programming&quot;&gt;Coarray Programming&lt;/a&gt; [&lt;a href=&quot;index#SEC_Contents&quot;&gt;Contents&lt;/a&gt;][&lt;a href=&quot;https://gcc.gnu.org/onlinedocs/gcc-7.2.0/gfortran/Option-Index.html#Option-Index&quot;&gt;Index&lt;/a&gt;]</source>
          <target state="translated">Previous : &lt;a href=&quot;type-and-enum-abi-documentation#Type-and-enum-ABI-Documentation&quot;&gt;유형 및 열거 형 ABI 설명서&lt;/a&gt; , Up : &lt;a href=&quot;coarray-programming#Coarray-Programming&quot;&gt;Coarray Programming&lt;/a&gt; [ &lt;a href=&quot;index#SEC_Contents&quot;&gt;목차&lt;/a&gt; ] [ &lt;a href=&quot;https://gcc.gnu.org/onlinedocs/gcc-7.2.0/gfortran/Option-Index.html#Option-Index&quot;&gt;색인&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="92c4c1971734c8eab2b0c2ef1ff1e9298f6ccc26" translate="yes" xml:space="preserve">
          <source>Previous: &lt;a href=&quot;working-with-pointers#Working-with-Pointers&quot;&gt;Working with Pointers&lt;/a&gt;, Up: &lt;a href=&quot;interoperability-with-c#Interoperability-with-C&quot;&gt;Interoperability with C&lt;/a&gt; [&lt;a href=&quot;index#SEC_Contents&quot;&gt;Contents&lt;/a&gt;][&lt;a href=&quot;https://gcc.gnu.org/onlinedocs/gcc-7.2.0/gfortran/Option-Index.html#Option-Index&quot;&gt;Index&lt;/a&gt;]</source>
          <target state="translated">Previous : &lt;a href=&quot;working-with-pointers#Working-with-Pointers&quot;&gt;포인터 작업&lt;/a&gt; , Up : &lt;a href=&quot;interoperability-with-c#Interoperability-with-C&quot;&gt;C와의 상호 운용성&lt;/a&gt; [ &lt;a href=&quot;index#SEC_Contents&quot;&gt;목차&lt;/a&gt; ] [ &lt;a href=&quot;https://gcc.gnu.org/onlinedocs/gcc-7.2.0/gfortran/Option-Index.html#Option-Index&quot;&gt;색인&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="a6bb9d1450c43cefd066f2c7341cf8cd86e9bd51" translate="yes" xml:space="preserve">
          <source>Print leading + where permitted</source>
          <target state="translated">행간 인쇄 + 허용되는 경우</target>
        </trans-unit>
        <trans-unit id="97ebf11b6345734fa01d4a496fd987189b92f4db" translate="yes" xml:space="preserve">
          <source>Print system error message</source>
          <target state="translated">인쇄 시스템 오류 메시지</target>
        </trans-unit>
        <trans-unit id="a3c0f9bec7d0625d20c3142e1d8d388dff3c9dc1" translate="yes" xml:space="preserve">
          <source>Print the name of each header file used, in addition to other normal activities. Each name is indented to show how deep in the &lt;code&gt;'#include'&lt;/code&gt; stack it is.</source>
          <target state="translated">다른 일반적인 활동 외에 사용 된 각 헤더 파일의 이름을 인쇄하십시오. 각 이름은 &lt;code&gt;'#include'&lt;/code&gt; 스택 의 깊이를 보여주기 위해 들여 쓰기됩니다 .</target>
        </trans-unit>
        <trans-unit id="13b3a062d3f220b94878645c788e35e344e763a7" translate="yes" xml:space="preserve">
          <source>Prints (on the C &lt;code&gt;stderr&lt;/code&gt; stream) a newline-terminated error message corresponding to the last system error. This is prefixed by &lt;var&gt;STRING&lt;/var&gt;, a colon and a space. See &lt;code&gt;perror(3)&lt;/code&gt;.</source>
          <target state="translated">C &lt;code&gt;stderr&lt;/code&gt; 스트림에서 마지막 시스템 오류에 해당하는 줄 바꿈 종료 오류 메시지를 인쇄합니다. 콜론과 공백이 &lt;var&gt;STRING&lt;/var&gt; 으로 시작됩니다 . &lt;code&gt;perror(3)&lt;/code&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="7d092df748797cbd6127732a5c8e96ed2d9f2602" translate="yes" xml:space="preserve">
          <source>Procedure pointers are handled analogously to pointers; the C type is &lt;code&gt;TYPE(C_FUNPTR)&lt;/code&gt; and the intrinsic conversion procedures are &lt;code&gt;C_F_PROCPOINTER&lt;/code&gt; and &lt;code&gt;C_FUNLOC&lt;/code&gt;.</source>
          <target state="translated">프로 시저 포인터는 포인터와 유사하게 처리됩니다. C 유형은 &lt;code&gt;TYPE(C_FUNPTR)&lt;/code&gt; 이고 고유 변환 절차는 &lt;code&gt;C_F_PROCPOINTER&lt;/code&gt; 및 &lt;code&gt;C_FUNLOC&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="199d18d52a5d3e64cf2744079c521b6d2d4aa2fb" translate="yes" xml:space="preserve">
          <source>Procedure pointers including procedure-pointer components with &lt;code&gt;PASS&lt;/code&gt; attribute.</source>
          <target state="translated">&lt;code&gt;PASS&lt;/code&gt; 속성을 가진 프로 시저 포인터 구성 요소를 포함하는 프로 시저 포인터</target>
        </trans-unit>
        <trans-unit id="44db8e5e32f5ad7aa1beb6d5312b1b72ae5c51b4" translate="yes" xml:space="preserve">
          <source>Procedures which are bound to a derived type (type-bound procedures) including &lt;code&gt;PASS&lt;/code&gt;, &lt;code&gt;PROCEDURE&lt;/code&gt; and &lt;code&gt;GENERIC&lt;/code&gt;, and operators bound to a type.</source>
          <target state="translated">&lt;code&gt;PASS&lt;/code&gt; , &lt;code&gt;PROCEDURE&lt;/code&gt; 및 &lt;code&gt;GENERIC&lt;/code&gt; 을 포함하여 파생 된 유형 (유형 바인딩 된 프로 시저)에 바인딩 된 프로 시저 및 유형에 바인딩 된 연산자</target>
        </trans-unit>
        <trans-unit id="0c94e2be529e948d83d22fde4653baf3f59925a4" translate="yes" xml:space="preserve">
          <source>Process ID function</source>
          <target state="translated">프로세스 ID 기능</target>
        </trans-unit>
        <trans-unit id="57e0d5f4d15efe2de2baa38cee222d6d3cfa9a94" translate="yes" xml:space="preserve">
          <source>Produce a warning if a real-literal-constant contains a &lt;code&gt;q&lt;/code&gt; exponent-letter.</source>
          <target state="translated">실제 리터럴 상수에 &lt;code&gt;q&lt;/code&gt; 지수 문자 가 포함 된 경우 경고를 생성하십시오 .</target>
        </trans-unit>
        <trans-unit id="13ee3fdada6f62d633bc6690a4bd40295358dff8" translate="yes" xml:space="preserve">
          <source>Produce a warning when &amp;ldquo;suspicious&amp;rdquo; code constructs are encountered. While technically legal these usually indicate that an error has been made.</source>
          <target state="translated">&quot;의심스러운&quot;코드 구성이 발생하면 경고를 생성합니다. 기술적으로 합법적이지만 일반적으로 오류가 발생했음을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="48d10a60330a0dbfe20c1306c7bb32b36f13fdc6" translate="yes" xml:space="preserve">
          <source>Produce a warning when numerical constant expressions are encountered, which yield an UNDERFLOW during compilation. Enabled by default.</source>
          <target state="translated">숫자 상수 표현식이 발견되면 경고를 생성하여 컴파일 중에 UNDERFLOW를 생성합니다. 기본적으로 활성화되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="888c11a0d840c7f6411561a2f7bb2d447eb34353" translate="yes" xml:space="preserve">
          <source>Product of array elements</source>
          <target state="translated">배열 요소의 곱</target>
        </trans-unit>
        <trans-unit id="53e890d5f0fffe09587c55dce74e9a6febf59b5c" translate="yes" xml:space="preserve">
          <source>Projects</source>
          <target state="translated">Projects</target>
        </trans-unit>
        <trans-unit id="b55afeae061537f9d4f00a095156cff2a7fdbfa0" translate="yes" xml:space="preserve">
          <source>Promote all &lt;code&gt;INTEGER(KIND=4)&lt;/code&gt; entities to an &lt;code&gt;INTEGER(KIND=8)&lt;/code&gt; entities. If &lt;code&gt;KIND=8&lt;/code&gt; is unavailable, then an error will be issued. This option should be used with care and may not be suitable for your codes. Areas of possible concern include calls to external procedures, alignment in &lt;code&gt;EQUIVALENCE&lt;/code&gt; and/or &lt;code&gt;COMMON&lt;/code&gt;, generic interfaces, BOZ literal constant conversion, and I/O. Inspection of the intermediate representation of the translated Fortran code, produced by</source>
          <target state="translated">모든 &lt;code&gt;INTEGER(KIND=4)&lt;/code&gt; 엔티티를 &lt;code&gt;INTEGER(KIND=8)&lt;/code&gt; 엔티티로 승격하십시오 . 경우 &lt;code&gt;KIND=8&lt;/code&gt; 사용할 수 없습니다, 다음 오류가 발급됩니다. 이 옵션은주의해서 사용해야하며 코드에 적합하지 않을 수 있습니다. 가능한 관심 영역은 외부 프로 시저 호출, &lt;code&gt;EQUIVALENCE&lt;/code&gt; 및 / 또는 &lt;code&gt;COMMON&lt;/code&gt; 정렬 , 일반 인터페이스, BOZ 리터럴 상수 변환 및 I / O입니다. 번역 된 포트란 코드의 중간 표현 검사</target>
        </trans-unit>
        <trans-unit id="de50d1ba76c90eb1d66a6b47f2f4b47451dcd6eb" translate="yes" xml:space="preserve">
          <source>Promote all &lt;code&gt;REAL(KIND=M)&lt;/code&gt; entities to &lt;code&gt;REAL(KIND=N)&lt;/code&gt; entities. If &lt;code&gt;REAL(KIND=N)&lt;/code&gt; is unavailable, then an error will be issued. All other real kind types are unaffected by this option. These options should be used with care and may not be suitable for your codes. Areas of possible concern include calls to external procedures, alignment in &lt;code&gt;EQUIVALENCE&lt;/code&gt; and/or &lt;code&gt;COMMON&lt;/code&gt;, generic interfaces, BOZ literal constant conversion, and I/O. Inspection of the intermediate representation of the translated Fortran code, produced by</source>
          <target state="translated">모든 &lt;code&gt;REAL(KIND=M)&lt;/code&gt; 엔티티를 &lt;code&gt;REAL(KIND=N)&lt;/code&gt; 엔티티로 승격하십시오 . 경우 &lt;code&gt;REAL(KIND=N)&lt;/code&gt; 사용할 후 에러가 발행된다. 다른 모든 실제 유형은이 옵션의 영향을받지 않습니다. 이 옵션은주의해서 사용해야하며 코드에 적합하지 않을 수 있습니다. 가능한 관심 영역은 외부 프로 시저 호출, &lt;code&gt;EQUIVALENCE&lt;/code&gt; 및 / 또는 &lt;code&gt;COMMON&lt;/code&gt; 정렬 , 일반 인터페이스, BOZ 리터럴 상수 변환 및 I / O입니다. 번역 된 포트란 코드의 중간 표현 검사</target>
        </trans-unit>
        <trans-unit id="4d970e24b22fc0f6e277e6e1b9c10241b2293ff1" translate="yes" xml:space="preserve">
          <source>Prompting</source>
          <target state="translated">Prompting</target>
        </trans-unit>
        <trans-unit id="e3db19e90351c81a97e675f08dca5933ab2300d2" translate="yes" xml:space="preserve">
          <source>Proposed Extensions</source>
          <target state="translated">제안 된 확장</target>
        </trans-unit>
        <trans-unit id="a75c2520586325667a1286e64c3455b3fd1ff5a2" translate="yes" xml:space="preserve">
          <source>Provide information in the generated machine code that can make it easier to find bugs in the program (using a debugging tool, called a &lt;em&gt;debugger&lt;/em&gt;, such as the GNU Debugger &lt;code&gt;gdb&lt;/code&gt;).</source>
          <target state="translated">생성 된 머신 코드에 정보를 제공하여 프로그램에서 버그를 쉽게 찾을 수 있도록합니다 ( GNU 디버거 &lt;code&gt;gdb&lt;/code&gt; 와 같은 &lt;em&gt;디버거&lt;/em&gt; 라고하는 디버깅 도구 사용 ).</target>
        </trans-unit>
        <trans-unit id="b77c6d0204499637744e3994eb55d5a8bb470cf0" translate="yes" xml:space="preserve">
          <source>Provide optional information about the translation passes from the source code to machine code. This can help a user of the compiler to find the cause of certain bugs which may not be obvious in the source code, but may be more easily found at a lower level compiler output. It also helps developers to find bugs in the compiler itself.</source>
          <target state="translated">소스 코드에서 기계 코드로의 변환 패스에 대한 선택적 정보를 제공하십시오. 이는 컴파일러 사용자가 소스 코드에서 명확하지 않지만 하위 레벨 컴파일러 출력에서보다 쉽게 ​​찾을 수있는 특정 버그의 원인을 찾는 데 도움이 될 수 있습니다. 또한 개발자가 컴파일러 자체에서 버그를 찾을 수 있도록 도와줍니다.</target>
        </trans-unit>
        <trans-unit id="7ed9ae773ed61023d9933122fb21bbbc2c04e253" translate="yes" xml:space="preserve">
          <source>Provide the user with information about the reasons why the compiler is unable to create a binary from the source code. Usually this will be the case if the source code is flawed. The Fortran 90 standard requires that the compiler can point out mistakes to the user. An incorrect usage of the language causes an &lt;em&gt;error message&lt;/em&gt;.</source>
          <target state="translated">컴파일러가 소스 코드에서 바이너리를 작성할 수없는 이유에 대한 정보를 사용자에게 제공하십시오. 일반적으로 소스 코드에 결함이있는 경우에 해당합니다. Fortran 90 표준에서는 컴파일러가 사용자에게 실수를 지적 할 수 있어야합니다. 언어를 잘못 사용하면 &lt;em&gt;오류 메시지가 나타납니다&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="909db5eb0e1b9292b4d975ca6b0fd2e82b4bb47e" translate="yes" xml:space="preserve">
          <source>Pseudo-random number</source>
          <target state="translated">의사 난수</target>
        </trans-unit>
        <trans-unit id="579a7acadd5f22fba9efcaa3c828e6c13c68aaea" translate="yes" xml:space="preserve">
          <source>Pure subroutine</source>
          <target state="translated">순수한 서브 루틴</target>
        </trans-unit>
        <trans-unit id="2f5f88397a19782271a358bded55e68096f2ef71" translate="yes" xml:space="preserve">
          <source>Query dynamic type for extension</source>
          <target state="translated">확장을위한 쿼리 동적 유형</target>
        </trans-unit>
        <trans-unit id="0df438339c33a8643f7fd168a36371353010a7a7" translate="yes" xml:space="preserve">
          <source>Query dynamic type for extension.</source>
          <target state="translated">확장을위한 쿼리 동적 유형.</target>
        </trans-unit>
        <trans-unit id="edd4886b77d8b6e970c8345809c78684aa1ddf02" translate="yes" xml:space="preserve">
          <source>Query dynamic types for equality</source>
          <target state="translated">동등성을위한 동적 유형 쿼리</target>
        </trans-unit>
        <trans-unit id="c8c4d609281429eb5186cd250ef9630b2474cc22" translate="yes" xml:space="preserve">
          <source>Query dynamic types for equality.</source>
          <target state="translated">동적 유형이 동일한 지 쿼리하십시오.</target>
        </trans-unit>
        <trans-unit id="3eed78b83ab60872b9a96907ce720eed87713b18" translate="yes" xml:space="preserve">
          <source>Query event count</source>
          <target state="translated">쿼리 이벤트 수</target>
        </trans-unit>
        <trans-unit id="5d9211b86dee9a3c593770b61de98e3545eddad0" translate="yes" xml:space="preserve">
          <source>Query the status of an image</source>
          <target state="translated">이미지 상태 조회</target>
        </trans-unit>
        <trans-unit id="5bbdfe86e65cbb3a60624dd936f1de65a4f568e0" translate="yes" xml:space="preserve">
          <source>Query whether a coarray event has occurred</source>
          <target state="translated">거친 사건이 발생했는지 쿼리</target>
        </trans-unit>
        <trans-unit id="708f0ab8f54b828797efd98eb92cb5f851c444f0" translate="yes" xml:space="preserve">
          <source>Query whether an allocatable or pointer component in a derived type coarray is allocated</source>
          <target state="translated">파생 된 유형 coarray의 할당 가능 또는 포인터 구성 요소가 할당되는지 조회</target>
        </trans-unit>
        <trans-unit id="68d5cc4a5c736d61d608f7a7d7f1cda0c658af37" translate="yes" xml:space="preserve">
          <source>Querying of the namelist when inputting from stdin. After at least one space, entering &amp;lsquo;</source>
          <target state="translated">stdin에서 입력 할 때 이름 목록을 쿼리합니다. 하나 이상의 공백을 입력 한 후 '</target>
        </trans-unit>
        <trans-unit id="5e9691cd0a4e2376da115e3c1e8dbb7ef68c3e19" translate="yes" xml:space="preserve">
          <source>Querying the image number</source>
          <target state="translated">이미지 번호 쿼리</target>
        </trans-unit>
        <trans-unit id="30c64ca7b42abe031d48fa6c76aac6ae0cb197e2" translate="yes" xml:space="preserve">
          <source>Querying the maximal number of images</source>
          <target state="translated">최대 이미지 수 쿼리</target>
        </trans-unit>
        <trans-unit id="2b42c823f76426efb3c69829a0fd4edff57afc98" translate="yes" xml:space="preserve">
          <source>RANDOM_NUMBER</source>
          <target state="translated">RANDOM_NUMBER</target>
        </trans-unit>
        <trans-unit id="e9cfcf1ed94f186da9d07f805d39597b66ef95d9" translate="yes" xml:space="preserve">
          <source>RANDOM_SEED</source>
          <target state="translated">RANDOM_SEED</target>
        </trans-unit>
        <trans-unit id="3b330731a188b19fdf61999609e5e9b932bb400b" translate="yes" xml:space="preserve">
          <source>REAL</source>
          <target state="translated">REAL</target>
        </trans-unit>
        <trans-unit id="7d84a3e5b07a2b5d39bd388741475d8fdca9644b" translate="yes" xml:space="preserve">
          <source>RRSPACING</source>
          <target state="translated">RRSPACING</target>
        </trans-unit>
        <trans-unit id="3a32fcec1ddd2e520fb2d6e9d97ed3896c07ce0d" translate="yes" xml:space="preserve">
          <source>Radians</source>
          <target state="translated">Radians</target>
        </trans-unit>
        <trans-unit id="a3f9157be4fde8f029725f1b459856f45d81b1f5" translate="yes" xml:space="preserve">
          <source>Rank of a data object</source>
          <target state="translated">데이터 객체의 순위</target>
        </trans-unit>
        <trans-unit id="6265c150435be8993bdc284b5236ec8abc2fad7d" translate="yes" xml:space="preserve">
          <source>Read a single character in stream mode</source>
          <target state="translated">스트림 모드에서 단일 문자 읽기</target>
        </trans-unit>
        <trans-unit id="6c633534fc1dcbd9c71e2b96cb72e36cc2662281" translate="yes" xml:space="preserve">
          <source>Read a single character in stream mode by bypassing normal formatted output. Stream I/O should not be mixed with normal record-oriented (formatted or unformatted) I/O on the same unit; the results are unpredictable.</source>
          <target state="translated">일반 형식의 출력을 무시하여 스트림 모드에서 단일 문자를 읽습니다. 스트림 I / O는 동일한 장치에서 일반 레코드 지향 (포맷되거나 형식화되지 않은) I / O와 혼합되어서는 안됩니다. 결과는 예측할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="1ecb48a96fb1f599257704f953bcfd32df4636d1" translate="yes" xml:space="preserve">
          <source>Read a single character in stream mode from stdin</source>
          <target state="translated">stdin에서 스트림 모드로 단일 문자 읽기</target>
        </trans-unit>
        <trans-unit id="40e6d5cc66aee9a85ab48f5b952a51c535b7fcce" translate="yes" xml:space="preserve">
          <source>Read a single character in stream mode from stdin by bypassing normal formatted output. Stream I/O should not be mixed with normal record-oriented (formatted or unformatted) I/O on the same unit; the results are unpredictable.</source>
          <target state="translated">표준 형식의 출력을 무시하여 stdin에서 스트림 모드의 단일 문자를 읽습니다. 스트림 I / O는 동일한 장치에서 일반 레코드 지향 (포맷되거나 형식화되지 않은) I / O와 혼합되어서는 안됩니다. 결과는 예측할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="1dc2621115158c83661b1f08a00ba067cab374d5" translate="yes" xml:space="preserve">
          <source>Read a user&amp;rsquo;s program, stored in a file and containing instructions written in Fortran 77, Fortran 90, Fortran 95, Fortran 2003 or Fortran 2008. This file contains &lt;em&gt;source code&lt;/em&gt;.</source>
          <target state="translated">파일에 저장되어 있고 포트란 77, 포트란 90, 포트란 95, 포트란 2003 또는 포트란 2008로 작성된 명령어가 들어있는 사용자 프로그램을 읽으십시오.이 파일에는 &lt;em&gt;소스 코드&lt;/em&gt; 가 포함되어 &lt;em&gt;있습니다&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="85b4efea8401571f231b81413b510c260f922c70" translate="yes" xml:space="preserve">
          <source>Real pseudo-random number</source>
          <target state="translated">실제 의사 난수</target>
        </trans-unit>
        <trans-unit id="4d82bf67110a67e1072286d2f3f5043a2d366ad4" translate="yes" xml:space="preserve">
          <source>Reallocation on assignment: If an intrinsic assignment is used, an allocatable variable on the left-hand side is automatically allocated (if unallocated) or reallocated (if the shape is different). Currently, scalar deferred character length left-hand sides are correctly handled but arrays are not yet fully implemented.</source>
          <target state="translated">할당 재 할당 : 고유 할당을 사용하는 경우 왼쪽의 할당 가능한 변수가 자동으로 할당 (할당되지 않은 경우) 또는 재 할당됩니다 (모양이 다른 경우). 현재 스칼라 지연 문자 길이 왼쪽이 올바르게 처리되지만 배열이 아직 완전히 구현되지 않았습니다.</target>
        </trans-unit>
        <trans-unit id="471e0ab6c79c61a68b1bf7675103e3b09c060ef3" translate="yes" xml:space="preserve">
          <source>Reciprocal of the relative spacing</source>
          <target state="translated">상대 간격의 역수</target>
        </trans-unit>
        <trans-unit id="915219d1724598e53858bdf9be534914daf51c91" translate="yes" xml:space="preserve">
          <source>Record structures are a pre-Fortran-90 vendor extension to create user-defined aggregate data types. Support for record structures in GNU Fortran can be enabled with the</source>
          <target state="translated">레코드 구조는 사용자 정의 집계 데이터 형식을 만들기위한 Fortran-90 이전 공급 업체 확장입니다. GNU Fortran에서 레코드 구조에 대한 지원은</target>
        </trans-unit>
        <trans-unit id="784ed76b00380aa96ebb35d5f4282f756339bf78" translate="yes" xml:space="preserve">
          <source>Reduces with bitwise AND the elements of &lt;var&gt;ARRAY&lt;/var&gt; along dimension &lt;var&gt;DIM&lt;/var&gt; if the corresponding element in &lt;var&gt;MASK&lt;/var&gt; is &lt;code&gt;TRUE&lt;/code&gt;.</source>
          <target state="translated">&lt;var&gt;MASK&lt;/var&gt; 의 해당 요소 가 &lt;code&gt;TRUE&lt;/code&gt; 인 경우 치수 &lt;var&gt;DIM&lt;/var&gt; 을 따라 비트 단위 AND &lt;var&gt;ARRAY&lt;/var&gt; 요소로 줄입니다 .</target>
        </trans-unit>
        <trans-unit id="b3e358a11dc1812c2cae2cd4678cf9f9217aa256" translate="yes" xml:space="preserve">
          <source>Reduces with bitwise OR (inclusive or) the elements of &lt;var&gt;ARRAY&lt;/var&gt; along dimension &lt;var&gt;DIM&lt;/var&gt; if the corresponding element in &lt;var&gt;MASK&lt;/var&gt; is &lt;code&gt;TRUE&lt;/code&gt;.</source>
          <target state="translated">&lt;var&gt;MASK&lt;/var&gt; 의 해당 요소 가 &lt;code&gt;TRUE&lt;/code&gt; 인 경우 치수 &lt;var&gt;DIM&lt;/var&gt; 을 따라 &lt;var&gt;ARRAY&lt;/var&gt; 요소를 비트 단위 OR (포함)로 줄입니다 .</target>
        </trans-unit>
        <trans-unit id="af11996db1d7d8cb30f228d093cbf1b235b41677" translate="yes" xml:space="preserve">
          <source>Reduces with bitwise XOR (exclusive or) the elements of &lt;var&gt;ARRAY&lt;/var&gt; along dimension &lt;var&gt;DIM&lt;/var&gt; if the corresponding element in &lt;var&gt;MASK&lt;/var&gt; is &lt;code&gt;TRUE&lt;/code&gt;.</source>
          <target state="translated">&lt;var&gt;MASK&lt;/var&gt; 의 해당 요소 가 &lt;code&gt;TRUE&lt;/code&gt; 인 경우 치수 &lt;var&gt;DIM&lt;/var&gt; 을 따라 &lt;var&gt;ARRAY&lt;/var&gt; 요소를 비트 단위 XOR (제외 또는)로 줄입니다 .</target>
        </trans-unit>
        <trans-unit id="93683af5b225a1c4d29feb9eb20aa0d0f5d6f1a2" translate="yes" xml:space="preserve">
          <source>Reduction of values on the current set of images</source>
          <target state="translated">현재 이미지 세트에서 값 감소</target>
        </trans-unit>
        <trans-unit id="31cd255ab70f8dd97db678a96e329251cb6734f5" translate="yes" xml:space="preserve">
          <source>Reduction with exclusive OR</source>
          <target state="translated">독점적 인 OR로 감소</target>
        </trans-unit>
        <trans-unit id="b85f78462a60787bc304b820a6262cd46439da2e" translate="yes" xml:space="preserve">
          <source>Reference atomically a value of a kind-4 integer or logical variable.</source>
          <target state="translated">원자 적으로 종류 -4 정수 또는 논리 변수의 값을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="61a1d967d3429d1413f82c801cf5e474fb4664d7" translate="yes" xml:space="preserve">
          <source>Registering coarrays</source>
          <target state="translated">거친 등록</target>
        </trans-unit>
        <trans-unit id="48e5972f3d0080237634a6d20f2a3e2e1a7ba301" translate="yes" xml:space="preserve">
          <source>Registers memory for a coarray and creates a token to identify the coarray. The routine is called for both coarrays with &lt;code&gt;SAVE&lt;/code&gt; attribute and using an explicit &lt;code&gt;ALLOCATE&lt;/code&gt; statement. If an error occurs and &lt;var&gt;STAT&lt;/var&gt; is a &lt;code&gt;NULL&lt;/code&gt; pointer, the function shall abort with printing an error message and starting the error termination. If no error occurs and &lt;var&gt;STAT&lt;/var&gt; is present, it shall be set to zero. Otherwise, it shall be set to a positive value and, if not-&lt;code&gt;NULL&lt;/code&gt;, &lt;var&gt;ERRMSG&lt;/var&gt; shall be set to a string describing the failure. The routine shall register the memory provided in the &lt;code&gt;DATA&lt;/code&gt;-component of the array descriptor &lt;var&gt;DESC&lt;/var&gt;, when that component is non-&lt;code&gt;NULL&lt;/code&gt;, else it shall allocate sufficient memory and provide a pointer to it in the &lt;code&gt;DATA&lt;/code&gt;-component of &lt;var&gt;DESC&lt;/var&gt;. The array descriptor has rank zero, when a scalar object is to be registered and the array descriptor may be invalid after the call to &lt;code&gt;_gfortran_caf_register&lt;/code&gt;. When an array is to be allocated the descriptor persists.</source>
          <target state="translated">Coarray에 메모리를 등록하고 Coarray를 식별하기위한 토큰을 만듭니다. 루틴은 &lt;code&gt;SAVE&lt;/code&gt; 속성을 가진 명시 적 &lt;code&gt;ALLOCATE&lt;/code&gt; 문을 사용하여 두 개의 coarray에 대해 호출됩니다 . 오류가 발생하고 &lt;var&gt;STAT&lt;/var&gt; 가 &lt;code&gt;NULL&lt;/code&gt; 포인터 인 경우, 오류 메시지를 인쇄하고 오류 종료를 시작하면 기능이 중단됩니다. 오류가 발생하지 않고 &lt;var&gt;STAT&lt;/var&gt; 가 있으면 0으로 설정해야합니다. 그렇지 않으면 양의 값으로 설정되고 &lt;code&gt;NULL&lt;/code&gt; 이 &lt;var&gt;ERRMSG&lt;/var&gt; 경우 ERRMSG 는 실패를 설명하는 문자열로 설정됩니다. 루틴 은 어레이 디스크립터 &lt;var&gt;DESC&lt;/var&gt; 의 &lt;code&gt;DATA&lt;/code&gt; 구성 요소에 제공된 메모리를 등록해야한다그 구성 요소가 아닌 경우에는, &lt;code&gt;NULL&lt;/code&gt; 이 , 다른 충분한 메모리를 할당하고, 그것의 포인터를 제공한다 &lt;code&gt;DATA&lt;/code&gt; 의 -component &lt;var&gt;DESC&lt;/var&gt; . 스칼라 객체가 등록 될 때 배열 디스크립터의 순위는 0이며 배열 디스크립터는 &lt;code&gt;_gfortran_caf_register&lt;/code&gt; 호출 후 유효하지 않을 수 있습니다 . 배열이 할당 될 때 설명자는 지속됩니다.</target>
        </trans-unit>
        <trans-unit id="41da4187cd2b99c72a3cb41751a0cbbe05c006bb" translate="yes" xml:space="preserve">
          <source>Reinitialize the random number generator</source>
          <target state="translated">난수 생성기를 다시 초기화하십시오.</target>
        </trans-unit>
        <trans-unit id="e2759caed45735290834e38462e732a81cee56c4" translate="yes" xml:space="preserve">
          <source>Release a lock on the given image on a scalar locking variable or for the given array element for an array-valued variable. Unlocking a lock variable which is unlocked or has been locked by a different image is an error.</source>
          <target state="translated">스칼라 잠금 변수의 주어진 이미지 또는 배열 값 변수의 주어진 배열 요소에 대한 잠금을 해제하십시오. 잠금 해제되었거나 다른 이미지에 의해 잠긴 잠금 변수를 잠금 해제하면 오류가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="99bf836454f5297688a5c3366d71671762d19667" translate="yes" xml:space="preserve">
          <source>Remainder function</source>
          <target state="translated">나머지 기능</target>
        </trans-unit>
        <trans-unit id="69a8dab9134fe025f24077593fb24ede484056c9" translate="yes" xml:space="preserve">
          <source>Remove a file from the file system</source>
          <target state="translated">파일 시스템에서 파일 제거</target>
        </trans-unit>
        <trans-unit id="75daff2ae29c142545843c90e6030b2f78262d49" translate="yes" xml:space="preserve">
          <source>Remove trailing blank characters of a string</source>
          <target state="translated">문자열의 후행 공백 문자 제거</target>
        </trans-unit>
        <trans-unit id="04cd2eeaa53a0aff0def3d317266ccd0e4cf76a4" translate="yes" xml:space="preserve">
          <source>Removes trailing blank characters of a string.</source>
          <target state="translated">문자열의 후행 공백 문자를 제거합니다.</target>
        </trans-unit>
        <trans-unit id="c0904861ebe57004a8eb3d40b476d16313409d99" translate="yes" xml:space="preserve">
          <source>Rename a file</source>
          <target state="translated">파일 이름 바꾸기</target>
        </trans-unit>
        <trans-unit id="1daa37d6ee9979f9e02cfb1e0e4c19c7f572ff74" translate="yes" xml:space="preserve">
          <source>Renames a file from file &lt;var&gt;PATH1&lt;/var&gt; to &lt;var&gt;PATH2&lt;/var&gt;. A null character (&lt;code&gt;CHAR(0)&lt;/code&gt;) can be used to mark the end of the names in &lt;var&gt;PATH1&lt;/var&gt; and &lt;var&gt;PATH2&lt;/var&gt;; otherwise, trailing blanks in the file names are ignored. If the &lt;var&gt;STATUS&lt;/var&gt; argument is supplied, it contains 0 on success or a nonzero error code upon return; see &lt;code&gt;rename(2)&lt;/code&gt;.</source>
          <target state="translated">파일을 &lt;var&gt;PATH1&lt;/var&gt; 에서 &lt;var&gt;PATH2&lt;/var&gt; 로 이름을 바꿉니다 . 널 문자 ( &lt;code&gt;CHAR(0)&lt;/code&gt; )를 사용하여 &lt;var&gt;PATH1&lt;/var&gt; 및 &lt;var&gt;PATH2&lt;/var&gt; 에서 이름의 끝을 표시 할 수 있습니다 . 그렇지 않으면 파일 이름의 후미 공백은 무시됩니다. 는 IF &lt;var&gt;STATUS&lt;/var&gt; 인수가 제공되고, 그것은 성공 또는 반환시 제로가 아닌 에러 코드에 0이 포함되어; &lt;code&gt;rename(2)&lt;/code&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="85e0a93d29dbbd83c2f3bc2015263dea2d3f9324" translate="yes" xml:space="preserve">
          <source>Renaming of operators in the &lt;code&gt;USE&lt;/code&gt; statement.</source>
          <target state="translated">&lt;code&gt;USE&lt;/code&gt; 문 에서 연산자 이름 바꾸기</target>
        </trans-unit>
        <trans-unit id="2e581e75cfb4021d4ffe896a38f78e2449789b26" translate="yes" xml:space="preserve">
          <source>Repeated string concatenation</source>
          <target state="translated">반복되는 문자열 연결</target>
        </trans-unit>
        <trans-unit id="ce6766a6042303fa42095a66757665a7cae15c5c" translate="yes" xml:space="preserve">
          <source>Replicates a &lt;var&gt;SOURCE&lt;/var&gt; array &lt;var&gt;NCOPIES&lt;/var&gt; times along a specified dimension &lt;var&gt;DIM&lt;/var&gt;.</source>
          <target state="translated">지정된 차원 &lt;var&gt;DIM&lt;/var&gt; 을 따라 &lt;var&gt;SOURCE&lt;/var&gt; 배열 &lt;var&gt;NCOPIES&lt;/var&gt; 시간을 복제합니다 .</target>
        </trans-unit>
        <trans-unit id="eb7c5c9149fda9ae33c15aae55240d384ad4d6de" translate="yes" xml:space="preserve">
          <source>Reshapes &lt;var&gt;SOURCE&lt;/var&gt; to correspond to &lt;var&gt;SHAPE&lt;/var&gt;. If necessary, the new array may be padded with elements from &lt;var&gt;PAD&lt;/var&gt; or permuted as defined by &lt;var&gt;ORDER&lt;/var&gt;.</source>
          <target state="translated">&lt;var&gt;SOURCE&lt;/var&gt; 를 &lt;var&gt;SHAPE&lt;/var&gt; 에 맞게 재구성합니다 . 필요한 경우 새 배열은 &lt;var&gt;PAD&lt;/var&gt; 의 요소로 채워지 거나 &lt;var&gt;ORDER&lt;/var&gt; 에 정의 된대로 치환 될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="0f6ea2c811a763951c58a57ddcfa818ce7dd6036" translate="yes" xml:space="preserve">
          <source>Restarts or queries the state of the pseudorandom number generator used by &lt;code&gt;RANDOM_NUMBER&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;RANDOM_NUMBER&lt;/code&gt; 가 사용하는 의사 난수 생성기의 상태를 다시 시작하거나 쿼리합니다 .</target>
        </trans-unit>
        <trans-unit id="9c1841dd4c2e3c1c94c94256287b4650766cc8c0" translate="yes" xml:space="preserve">
          <source>Result variable, when the function result is passed by reference</source>
          <target state="translated">함수 결과가 참조로 전달 될 때 결과 변수</target>
        </trans-unit>
        <trans-unit id="8756e79136a71f6138fdfc9532c3e5bb4001dc9d" translate="yes" xml:space="preserve">
          <source>Results of INQUIRE statements of the &amp;ldquo;inquire by file&amp;rdquo; form will relate to the target of the symbolic link. For example, &lt;code&gt;INQUIRE(FILE=&quot;foo&quot;,EXIST=ex)&lt;/code&gt; will set &lt;var&gt;ex&lt;/var&gt; to &lt;var&gt;.true.&lt;/var&gt; if &lt;var&gt;foo&lt;/var&gt; is a symbolic link pointing to an existing file, and &lt;var&gt;.false.&lt;/var&gt; if &lt;var&gt;foo&lt;/var&gt; points to an non-existing file (&amp;ldquo;dangling&amp;rdquo; symbolic link).</source>
          <target state="translated">&quot;파일로 조회&quot;양식의 INQUIRE 문의 결과는 기호 링크의 대상과 관련이 있습니다. 예를 들어, &lt;code&gt;INQUIRE(FILE=&quot;foo&quot;,EXIST=ex)&lt;/code&gt; 는 &lt;var&gt;ex&lt;/var&gt; 를 &lt;var&gt;.true.&lt;/var&gt; 설정 합니다. &lt;var&gt;foo&lt;/var&gt; 가 기존 파일을 가리키는 기호 링크 인 경우 &lt;var&gt;.false.&lt;/var&gt; &lt;var&gt;foo&lt;/var&gt; 가 존재하지 않는 파일을 가리키는 경우 (&amp;ldquo;dangling&amp;rdquo;기호 링크).</target>
        </trans-unit>
        <trans-unit id="39872aca8622556709c278843185a802ee13f0ad" translate="yes" xml:space="preserve">
          <source>Retrieve the &lt;var&gt;NUMBER&lt;/var&gt;-th argument that was passed on the command line when the containing program was invoked.</source>
          <target state="translated">포함하는 프로그램이 호출 될 때 명령 행에 전달 된 &lt;var&gt;NUMBER&lt;/var&gt; 번째 인수를 검색하십시오 .</target>
        </trans-unit>
        <trans-unit id="e17d8380adaa5b95a7b7e6cc06a8ce90d970c2b2" translate="yes" xml:space="preserve">
          <source>Retrieve the &lt;var&gt;POS&lt;/var&gt;-th argument that was passed on the command line when the containing program was invoked.</source>
          <target state="translated">포함하는 프로그램이 호출 될 때 명령 행에 전달 된 &lt;var&gt;POS&lt;/var&gt; -th 인수를 검색하십시오 .</target>
        </trans-unit>
        <trans-unit id="ba4faddf7a9bcaaf6210dcd89ff506bb411822ce" translate="yes" xml:space="preserve">
          <source>Retrieve the entire command line that was used to invoke the program.</source>
          <target state="translated">프로그램을 호출하는 데 사용 된 전체 명령 행을 검색하십시오.</target>
        </trans-unit>
        <trans-unit id="4c1e5a7cada914e75af14688987532cfa7f73ee8" translate="yes" xml:space="preserve">
          <source>Retrieves the current position within an open file.</source>
          <target state="translated">열린 파일 내에서 현재 위치를 검색합니다.</target>
        </trans-unit>
        <trans-unit id="b3b6f84f10f45dac0e3c576f1ec0f644fb979ced" translate="yes" xml:space="preserve">
          <source>Retrieves the host name of the system on which the program is running.</source>
          <target state="translated">프로그램이 실행중인 시스템의 호스트 이름을 검색합니다.</target>
        </trans-unit>
        <trans-unit id="88f2b3f5a0eff8fce83b5ded45c3cac6f39abfd9" translate="yes" xml:space="preserve">
          <source>Return Type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b783597c37d987dbcea2bae3a3fcf5e48c96a247" translate="yes" xml:space="preserve">
          <source>Return Value:</source>
          <target state="translated">반환 값 :</target>
        </trans-unit>
        <trans-unit id="4c7ad2a40cb7385baa2c6598c01190ddba7299ec" translate="yes" xml:space="preserve">
          <source>Return the event count of the specified event variable.</source>
          <target state="translated">지정된 이벤트 변수의 이벤트 수를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="41b1fb407b7fa442b77381701968fb175362cf78" translate="yes" xml:space="preserve">
          <source>Return type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f0f4aca16fcfaa6cac730d783925636f5e4b5c8" translate="yes" xml:space="preserve">
          <source>Return value:</source>
          <target state="translated">반환 값 :</target>
        </trans-unit>
        <trans-unit id="fca3a57e8a28efd64e8eaabe575d077326fdd157" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;.TRUE.&lt;/code&gt; if &lt;code&gt;STRING_A &amp;gt; STRING_B&lt;/code&gt;, and &lt;code&gt;.FALSE.&lt;/code&gt; otherwise, based on the ASCII ordering.</source>
          <target state="translated">&lt;code&gt;.TRUE.&lt;/code&gt; 리턴 합니다. &lt;code&gt;STRING_A &amp;gt; STRING_B&lt;/code&gt; 및 &lt;code&gt;.FALSE.&lt;/code&gt; 경우 그렇지 않으면 ASCII 순서를 기반으로합니다.</target>
        </trans-unit>
        <trans-unit id="a30230c381062c3272532d9917feda14f87b279a" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;.TRUE.&lt;/code&gt; if &lt;code&gt;STRING_A &amp;gt;= STRING_B&lt;/code&gt;, and &lt;code&gt;.FALSE.&lt;/code&gt; otherwise, based on the ASCII ordering.</source>
          <target state="translated">&lt;code&gt;.TRUE.&lt;/code&gt; 리턴 합니다. 만약 &lt;code&gt;STRING_A &amp;gt;= STRING_B&lt;/code&gt; 및 &lt;code&gt;.FALSE.&lt;/code&gt; 그렇지 않으면 ASCII 순서를 기반으로합니다.</target>
        </trans-unit>
        <trans-unit id="83a22c30d472c699ab6ca03de792ca43643ff98c" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;.TRUE.&lt;/code&gt; if &lt;code&gt;STRING_A &amp;lt; STRING_B&lt;/code&gt;, and &lt;code&gt;.FALSE.&lt;/code&gt; otherwise, based on the ASCII ordering.</source>
          <target state="translated">&lt;code&gt;.TRUE.&lt;/code&gt; 리턴 합니다. &lt;code&gt;STRING_A &amp;lt; STRING_B&lt;/code&gt; 및 &lt;code&gt;.FALSE.&lt;/code&gt; 경우 그렇지 않으면 ASCII 순서를 기반으로합니다.</target>
        </trans-unit>
        <trans-unit id="fed8c97351617c9fbbef532774c8548f7a846e3b" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;.TRUE.&lt;/code&gt; if &lt;code&gt;STRING_A &amp;lt;= STRING_B&lt;/code&gt;, and &lt;code&gt;.FALSE.&lt;/code&gt; otherwise, based on the ASCII ordering.</source>
          <target state="translated">&lt;code&gt;.TRUE.&lt;/code&gt; 리턴 합니다. 만약 &lt;code&gt;STRING_A &amp;lt;= STRING_B&lt;/code&gt; 및 &lt;code&gt;.FALSE.&lt;/code&gt; 그렇지 않으면 ASCII 순서를 기반으로합니다.</target>
        </trans-unit>
        <trans-unit id="5abfb67c8541727c319808f772c72f43845c3e71" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;.TRUE.&lt;/code&gt; if the &lt;var&gt;UNIT&lt;/var&gt; is connected to a terminal device, &lt;code&gt;.FALSE.&lt;/code&gt; otherwise.</source>
          <target state="translated">&lt;code&gt;.TRUE.&lt;/code&gt; 리턴 합니다. &lt;var&gt;UNIT&lt;/var&gt; 가 터미널 장치에 연결된 경우 &lt;code&gt;.FALSE.&lt;/code&gt; 그렇지 않으면.</target>
        </trans-unit>
        <trans-unit id="97fda5c930193a70555b648b314e7a42e55a3c15" translate="yes" xml:space="preserve">
          <source>Returns &lt;var&gt;A&lt;/var&gt; with the fractional portion of its magnitude eliminated by rounding to the nearest whole number and with its sign preserved, converted to an &lt;code&gt;INTEGER&lt;/code&gt; of the default kind.</source>
          <target state="translated">가장 가까운 정수로 반올림하여 부호의 소수 부분을 제거하고 부호를 유지하여 &lt;var&gt;A&lt;/var&gt; 를 반환 하고 기본 종류 의 &lt;code&gt;INTEGER&lt;/code&gt; 로 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="29bb8e1f9725a880a765cf48d05187cfecd05e2f" translate="yes" xml:space="preserve">
          <source>Returns a &lt;code&gt;LOGICAL&lt;/code&gt; of the default kind, which &lt;code&gt;.TRUE.&lt;/code&gt; if &lt;var&gt;I&lt;/var&gt; has the value which indicates an end of file condition for &lt;code&gt;IOSTAT=&lt;/code&gt; specifiers, and is &lt;code&gt;.FALSE.&lt;/code&gt; otherwise.</source>
          <target state="translated">기본 종류 의 &lt;code&gt;LOGICAL&lt;/code&gt; 인 &lt;code&gt;.TRUE.&lt;/code&gt; 를 반환합니다. 만약 &lt;var&gt;I&lt;/var&gt; 를 위한 파일의 종료 조건을 나타내는 값을 갖는 &lt;code&gt;IOSTAT=&lt;/code&gt; 지정자되고 &lt;code&gt;.FALSE.&lt;/code&gt; 그렇지 않으면.</target>
        </trans-unit>
        <trans-unit id="c8d7ad2ffac283f91e5ea69c07b0a2e4f13fae46" translate="yes" xml:space="preserve">
          <source>Returns a &lt;code&gt;REAL(4)&lt;/code&gt; value representing the elapsed CPU time in seconds. This provides the same functionality as the standard &lt;code&gt;CPU_TIME&lt;/code&gt; intrinsic, and is only included for backwards compatibility.</source>
          <target state="translated">경과 된 CPU 시간을 초 단위로 나타내는 &lt;code&gt;REAL(4)&lt;/code&gt; 값을 반환합니다 . 이는 표준 &lt;code&gt;CPU_TIME&lt;/code&gt; 내장 함수와 동일한 기능을 제공하며 이전 버전과의 호환성을 위해서만 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="9ab6f91549d22c5ab0143e17cd49e264d2e2f94b" translate="yes" xml:space="preserve">
          <source>Returns a &lt;code&gt;REAL&lt;/code&gt; value representing the elapsed CPU time in seconds. This is useful for testing segments of code to determine execution time.</source>
          <target state="translated">경과 된 CPU 시간을 초 단위로 나타내는 &lt;code&gt;REAL&lt;/code&gt; 값을 반환합니다 . 이는 코드 세그먼트를 테스트하여 실행 시간을 결정하는 데 유용합니다.</target>
        </trans-unit>
        <trans-unit id="0e71181c416a72586dc6d6cd1812469dca751e1d" translate="yes" xml:space="preserve">
          <source>Returns a &lt;var&gt;CHARACTER&lt;/var&gt; scalar of length one with the new-line character of the same kind as parameter &lt;var&gt;C&lt;/var&gt;.</source>
          <target state="translated">매개 변수 &lt;var&gt;C&lt;/var&gt; 와 같은 종류의 개행 문자를 갖는 길이가 1 인 &lt;var&gt;CHARACTER&lt;/var&gt; 스칼라를 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="dda3b7f3e33fd7e902b6e0b004df575ab9281ada" translate="yes" xml:space="preserve">
          <source>Returns a default-kind &lt;code&gt;LOGICAL&lt;/code&gt;. The returned value is &lt;code&gt;TRUE&lt;/code&gt; if &lt;var&gt;X&lt;/var&gt; is a NaN and &lt;code&gt;FALSE&lt;/code&gt; otherwise.</source>
          <target state="translated">기본 종류 &lt;code&gt;LOGICAL&lt;/code&gt; 을 반환합니다 . &lt;var&gt;X&lt;/var&gt; 가 NaN 이면 반환 값은 &lt;code&gt;TRUE&lt;/code&gt; 이고 , 그렇지 않으면 &lt;code&gt;FALSE&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="968a20a1733d304249f6595e31cd39ab4681fb2b" translate="yes" xml:space="preserve">
          <source>Returns a disassociated pointer.</source>
          <target state="translated">분리 된 포인터를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="d40fc1b4008818961411264c77b22e144fe80999" translate="yes" xml:space="preserve">
          <source>Returns a scalar &lt;code&gt;INTEGER&lt;/code&gt;, which is &lt;code&gt;0&lt;/code&gt; if the file is accessible in the given mode; otherwise or if an invalid argument has been given for &lt;code&gt;MODE&lt;/code&gt; the value &lt;code&gt;1&lt;/code&gt; is returned.</source>
          <target state="translated">반환 스칼라 &lt;code&gt;INTEGER&lt;/code&gt; 이며, &lt;code&gt;0&lt;/code&gt; 파일이 주어진 모드에서 액세스 할 수있는 경우; 그렇지 않으면 또는 &lt;code&gt;MODE&lt;/code&gt; 에 유효하지 않은 인수가 제공된 경우 값 &lt;code&gt;1&lt;/code&gt; 이 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="113730818dac044b8abef03fa47255d085ba2e2b" translate="yes" xml:space="preserve">
          <source>Returns a single pseudorandom number or an array of pseudorandom numbers from the uniform distribution over the range &lt;em&gt;0 \leq x &amp;lt; 1&lt;/em&gt;.</source>
          <target state="translated">&lt;em&gt;0 \ leq x &amp;lt;1&lt;/em&gt; 범위의 균일 분포에서 단일 의사 난수 또는 의사 난수 배열을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="3eaabbceb650c0dce2372ea8785041cec68b675f" translate="yes" xml:space="preserve">
          <source>Returns an array of same type and rank as the &lt;var&gt;ARRAY&lt;/var&gt; argument.</source>
          <target state="translated">&lt;var&gt;ARRAY&lt;/var&gt; 인수 와 동일한 유형 및 순위의 배열을 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="7d21f6aa4c9d03bd43024ebdefc0b9bf130924eb" translate="yes" xml:space="preserve">
          <source>Returns either &lt;code&gt;TRUE&lt;/code&gt; if the optional argument &lt;var&gt;A&lt;/var&gt; is present, or &lt;code&gt;FALSE&lt;/code&gt; otherwise.</source>
          <target state="translated">반환 값 중 하나를 &lt;code&gt;TRUE&lt;/code&gt; 선택적 인수의 경우 &lt;var&gt;A&lt;/var&gt; 는 현재, 또는이다 &lt;code&gt;FALSE&lt;/code&gt; 그렇지.</target>
        </trans-unit>
        <trans-unit id="2e8f77aa34a4a8bf0c21026d2d2de8073807d426" translate="yes" xml:space="preserve">
          <source>Returns the address of a variable</source>
          <target state="translated">변수의 주소를 반환</target>
        </trans-unit>
        <trans-unit id="33e1b8ea8741869980212836e0538425f9dfd3e3" translate="yes" xml:space="preserve">
          <source>Returns the argument with the largest (most positive) value.</source>
          <target state="translated">가장 큰 (양수) 값을 가진 인수를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="12955fa5c732f992e73c9f2b21b4da0313fd91ea" translate="yes" xml:space="preserve">
          <source>Returns the argument with the smallest (most negative) value.</source>
          <target state="translated">가장 작은 (가장 음수) 값을 가진 인수를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="b3fecba5b3bf7d6b6d5208c195e2cafccfdb1c1b" translate="yes" xml:space="preserve">
          <source>Returns the cosubscript for this image.</source>
          <target state="translated">이 이미지의 첨자를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="54b236c4ced867ee7292155739b0f47e8f40030e" translate="yes" xml:space="preserve">
          <source>Returns the current time encoded as an integer (in the manner of the function &lt;code&gt;time(3)&lt;/code&gt; in the C standard library). This value is suitable for passing to &lt;a href=&quot;ctime#CTIME&quot;&gt;CTIME&lt;/a&gt;, &lt;a href=&quot;gmtime#GMTIME&quot;&gt;GMTIME&lt;/a&gt;, and &lt;a href=&quot;ltime#LTIME&quot;&gt;LTIME&lt;/a&gt;.</source>
          <target state="translated">정수로 인코딩 된 현재 시간을 반환합니다 ( C 표준 라이브러리 의 함수 &lt;code&gt;time(3)&lt;/code&gt; 방식 ). 이 값은 &lt;a href=&quot;ctime#CTIME&quot;&gt;CTIME&lt;/a&gt; , &lt;a href=&quot;gmtime#GMTIME&quot;&gt;GMTIME&lt;/a&gt; 및 &lt;a href=&quot;ltime#LTIME&quot;&gt;LTIME으로&lt;/a&gt; 전달하는 데 적합합니다 .</target>
        </trans-unit>
        <trans-unit id="36a56ff29c21603b26dbfc0e505334ad34f1f55f" translate="yes" xml:space="preserve">
          <source>Returns the image index belonging to a cosubscript.</source>
          <target state="translated">공동 첨자에 속하는 이미지 인덱스를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="78c520bc22dc7d785c56b218d030b258ffc49aa7" translate="yes" xml:space="preserve">
          <source>Returns the last system error number, as given by the C &lt;code&gt;errno&lt;/code&gt; variable.</source>
          <target state="translated">C &lt;code&gt;errno&lt;/code&gt; 변수가 제공 한 마지막 시스템 오류 번호를 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="2d33296bb35bf49a0c90e017a90ea0a3df2f46ae" translate="yes" xml:space="preserve">
          <source>Returns the length of a character string, ignoring any trailing blanks.</source>
          <target state="translated">후행 공백을 무시하고 문자열의 길이를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="0ea4b63fc73fde737de5964fca1b77266dac011a" translate="yes" xml:space="preserve">
          <source>Returns the length of a character string, ignoring any trailing blanks. This is identical to the standard &lt;code&gt;LEN_TRIM&lt;/code&gt; intrinsic, and is only included for backwards compatibility.</source>
          <target state="translated">후행 공백을 무시하고 문자열의 길이를 반환합니다. 이는 표준 &lt;code&gt;LEN_TRIM&lt;/code&gt; 내장 함수와 동일 하며 이전 버전과의 호환성을 위해서만 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="ee8a5d1f142397d0a94264d40425e1cf483521d7" translate="yes" xml:space="preserve">
          <source>Returns the length of a character string. If &lt;var&gt;STRING&lt;/var&gt; is an array, the length of an element of &lt;var&gt;STRING&lt;/var&gt; is returned. Note that &lt;var&gt;STRING&lt;/var&gt; need not be defined when this intrinsic is invoked, since only the length, not the content, of &lt;var&gt;STRING&lt;/var&gt; is needed.</source>
          <target state="translated">문자열의 길이를 반환합니다. 경우 &lt;var&gt;STRING&lt;/var&gt; 배열이며, 소자의 길이 &lt;var&gt;STRING&lt;/var&gt; 이 반환된다. 참고 &lt;var&gt;STRING&lt;/var&gt; 이 내장 함수가 호출 될 때의, 유일한 길이 때문에,하지의 내용을 정의 할 필요가 없다 &lt;var&gt;STRING&lt;/var&gt; 이 필요합니다.</target>
        </trans-unit>
        <trans-unit id="23e76b528b882e1edc2eee844e355b76d95a988e" translate="yes" xml:space="preserve">
          <source>Returns the lower bounds of a coarray, or a single lower cobound along the &lt;var&gt;DIM&lt;/var&gt; codimension.</source>
          <target state="translated">Coimray의 하한 또는 &lt;var&gt;DIM&lt;/var&gt; Codimension을 따라 단일 하한을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="4d7c5d2ebddfaf234afb2b725fc4dc5740a007fc" translate="yes" xml:space="preserve">
          <source>Returns the lower bounds of an array, or a single lower bound along the &lt;var&gt;DIM&lt;/var&gt; dimension.</source>
          <target state="translated">배열의 하한 또는 &lt;var&gt;DIM&lt;/var&gt; 차원을 따라 하나의 하한을 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="5bb3a43ca1e7bf0cc9bd7c962591f0744075b2b0" translate="yes" xml:space="preserve">
          <source>Returns the number of clock ticks since the start of the process, based on the function &lt;code&gt;clock(3)&lt;/code&gt; in the C standard library.</source>
          <target state="translated">C 표준 라이브러리의 &lt;code&gt;clock(3)&lt;/code&gt; 함수를 기반으로 프로세스 시작 이후 클럭 틱 수를 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="19876a082f942859cfbeaea51ba4ff68962d768d" translate="yes" xml:space="preserve">
          <source>Returns the number of images.</source>
          <target state="translated">이미지 수를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="013d9e8b3ca94f09540f0b5d277b6839b75e62ea" translate="yes" xml:space="preserve">
          <source>Returns the numerical group ID of the current process.</source>
          <target state="translated">현재 프로세스의 숫자 그룹 ID를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="e70e4e1d0604ba02e0a479c7803d52806f6f8640" translate="yes" xml:space="preserve">
          <source>Returns the numerical process identifier of the current process.</source>
          <target state="translated">현재 프로세스의 숫자 프로세스 식별자를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="382e7d4ef104261b2fe92b7b89d69ed01ef289b4" translate="yes" xml:space="preserve">
          <source>Returns the numerical user ID of the current process.</source>
          <target state="translated">현재 프로세스의 숫자 사용자 ID를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="d105e73f67ab7f1af6667f255d8bb66c24112bb3" translate="yes" xml:space="preserve">
          <source>Returns the position of the start of the first occurrence of string &lt;var&gt;SUBSTRING&lt;/var&gt; as a substring in &lt;var&gt;STRING&lt;/var&gt;, counting from one. If &lt;var&gt;SUBSTRING&lt;/var&gt; is not present in &lt;var&gt;STRING&lt;/var&gt;, zero is returned. If the &lt;var&gt;BACK&lt;/var&gt; argument is present and true, the return value is the start of the last occurrence rather than the first.</source>
          <target state="translated">문자열 &lt;var&gt;SUBSTRING&lt;/var&gt; 의 첫 번째 발생 시작 위치를 &lt;var&gt;STRING&lt;/var&gt; 의 하위 문자열로 리턴합니다 (1부터 시작) . 경우 &lt;var&gt;SUBSTRING&lt;/var&gt; 에 존재하지 않는 &lt;var&gt;STRING&lt;/var&gt; , 0을 반환한다. 는 IF &lt;var&gt;BACK&lt;/var&gt; 의 인수가 존재하고 사실, 반환 값은 오히려 처음보다 마지막에 출현의 시작입니다.</target>
        </trans-unit>
        <trans-unit id="d974443f12cdccd1ab7edb28239c2c38d974fb5a" translate="yes" xml:space="preserve">
          <source>Returns the storage size of argument &lt;var&gt;A&lt;/var&gt; in bits.</source>
          <target state="translated">인수 &lt;var&gt;A&lt;/var&gt; 의 저장 크기를 비트 단위로 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="030fed1a4a2d8688a3064b28762f70afc4f33f9f" translate="yes" xml:space="preserve">
          <source>Returns the system error message corresponding to the last system error. This resembles the functionality of &lt;code&gt;strerror(3)&lt;/code&gt; in C.</source>
          <target state="translated">마지막 시스템 오류에 해당하는 시스템 오류 메시지를 반환합니다. 이것은 C에서 &lt;code&gt;strerror(3)&lt;/code&gt; 의 기능과 유사합니다 .</target>
        </trans-unit>
        <trans-unit id="c5db6aa6b94304631cf2d1e844160a324a3e9659" translate="yes" xml:space="preserve">
          <source>Returns the upper bounds of an array, or a single upper bound along the &lt;var&gt;DIM&lt;/var&gt; dimension.</source>
          <target state="translated">배열의 상한 또는 &lt;var&gt;DIM&lt;/var&gt; 차원을 따라 단일 상한을 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="d6800caeea6d410da018bd455bee29f1e1ed3571" translate="yes" xml:space="preserve">
          <source>Returns the upper cobounds of a coarray, or a single upper cobound along the &lt;var&gt;DIM&lt;/var&gt; codimension.</source>
          <target state="translated">Coarray의 상위 Cobounds 또는 &lt;var&gt;DIM&lt;/var&gt; Codimension을 따라 단일 상위 Cobound를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="f7a03c748490662d071e2d69385f0a2818ef7052" translate="yes" xml:space="preserve">
          <source>Right adjust a string</source>
          <target state="translated">줄을 오른쪽으로 조정</target>
        </trans-unit>
        <trans-unit id="1961283cddaa930494cae150067a7581a93e5c7e" translate="yes" xml:space="preserve">
          <source>Right justified mask</source>
          <target state="translated">오른쪽 정렬 마스크</target>
        </trans-unit>
        <trans-unit id="75e640dab9c72b92ec931b703f79d317fa079e48" translate="yes" xml:space="preserve">
          <source>Right shift</source>
          <target state="translated">오른쪽 교대</target>
        </trans-unit>
        <trans-unit id="0fc507ea72a97072f7267fc53460470d60e1970b" translate="yes" xml:space="preserve">
          <source>Right shift bits</source>
          <target state="translated">오른쪽 시프트 비트</target>
        </trans-unit>
        <trans-unit id="3139db62c1e590d67d85e0488d8e8356f4d7d300" translate="yes" xml:space="preserve">
          <source>Right shift with fill</source>
          <target state="translated">채우기로 오른쪽 이동</target>
        </trans-unit>
        <trans-unit id="9b24f0575d77ccaa5dbc4903cc08b8ba4237af70" translate="yes" xml:space="preserve">
          <source>Run time since start in seconds.</source>
          <target state="translated">시작 이후 실행 시간 (초)</target>
        </trans-unit>
        <trans-unit id="90c76e4e2264f0583f28d2cfeea755ff61b99d84" translate="yes" xml:space="preserve">
          <source>Runtime Options</source>
          <target state="translated">런타임 옵션</target>
        </trans-unit>
        <trans-unit id="27d02afe98208e564519a22e45d26ab8e697c48a" translate="yes" xml:space="preserve">
          <source>SAME_TYPE_AS</source>
          <target state="translated">SAME_TYPE_AS</target>
        </trans-unit>
        <trans-unit id="dd15369004030cf6385a8b3d0b972142f444a2a3" translate="yes" xml:space="preserve">
          <source>SELECTED_REAL_KIND</source>
          <target state="translated">SELECTED_REAL_KIND</target>
        </trans-unit>
        <trans-unit id="cbfe91baa47787adeb127a36f02e122b726a873e" translate="yes" xml:space="preserve">
          <source>SHAPE</source>
          <target state="translated">SHAPE</target>
        </trans-unit>
        <trans-unit id="766a32c46d75039cf0e1bb3076dfffce9cee9f83" translate="yes" xml:space="preserve">
          <source>SPACING</source>
          <target state="translated">SPACING</target>
        </trans-unit>
        <trans-unit id="2c798885ebfbe383227dbd5c2205277f8af9d524" translate="yes" xml:space="preserve">
          <source>SUM</source>
          <target state="translated">SUM</target>
        </trans-unit>
        <trans-unit id="29d43743c43bda9873fc7a79c99f2ec4b6b442b1" translate="yes" xml:space="preserve">
          <source>SYSTEM</source>
          <target state="translated">SYSTEM</target>
        </trans-unit>
        <trans-unit id="4b2d87f4223d14d97876e6c21b4dc80dfbe2238b" translate="yes" xml:space="preserve">
          <source>Same type as &lt;var&gt;ARRAY&lt;/var&gt;.</source>
          <target state="translated">&lt;var&gt;ARRAY&lt;/var&gt; 와 동일한 유형 입니다.</target>
        </trans-unit>
        <trans-unit id="28b56ea75da837d4da05bac97e10c42ed48847e7" translate="yes" xml:space="preserve">
          <source>Sat Aug 19 18:13:14 1995</source>
          <target state="translated">토 8 월 19 일 18:13:14 1995</target>
        </trans-unit>
        <trans-unit id="f1075035fad46864ee7101bd713a6ac3eee82840" translate="yes" xml:space="preserve">
          <source>Save command-line arguments</source>
          <target state="translated">명령 줄 인수 저장</target>
        </trans-unit>
        <trans-unit id="571f4d7d7433006a0242937222632be440092f79" translate="yes" xml:space="preserve">
          <source>Scalar &lt;code&gt;CHARACTER&lt;/code&gt; of default kind giving the file permission. &lt;var&gt;MODE&lt;/var&gt; uses the same syntax as the &lt;code&gt;chmod&lt;/code&gt; utility as defined by the POSIX standard. The argument shall either be a string of a nonnegative octal number or a symbolic mode.</source>
          <target state="translated">파일 권한을 부여하는 기본 종류의 스칼라 &lt;code&gt;CHARACTER&lt;/code&gt; . &lt;var&gt;MODE&lt;/var&gt; 는 POSIX 표준으로 정의 된 &lt;code&gt;chmod&lt;/code&gt; 유틸리티와 동일한 구문을 사용합니다 . 인수는 음이 아닌 8 진수 문자열이거나 기호 모드 여야합니다.</target>
        </trans-unit>
        <trans-unit id="4b2385ed82321b96dca1928651839fa4f146adb4" translate="yes" xml:space="preserve">
          <source>Scalar &lt;code&gt;CHARACTER&lt;/code&gt; of default kind with the file access mode, may be any concatenation of &lt;code&gt;&quot;r&quot;&lt;/code&gt; (readable), &lt;code&gt;&quot;w&quot;&lt;/code&gt; (writable) and &lt;code&gt;&quot;x&quot;&lt;/code&gt; (executable), or &lt;code&gt;&quot; &quot;&lt;/code&gt; to check for existence.</source>
          <target state="translated">파일 액세스 모드를 사용하는 기본 종류의 스칼라 &lt;code&gt;CHARACTER&lt;/code&gt; 는 존재 여부를 확인하기 위해 &lt;code&gt;&quot;r&quot;&lt;/code&gt; (읽기 가능), &lt;code&gt;&quot;w&quot;&lt;/code&gt; (쓰기 가능) 및 &lt;code&gt;&quot;x&quot;&lt;/code&gt; (실행 가능) 또는 &lt;code&gt;&quot; &quot;&lt;/code&gt; 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="49875211f73d2ee0109c382325a80cc977b46041" translate="yes" xml:space="preserve">
          <source>Scalar &lt;code&gt;CHARACTER&lt;/code&gt; of default kind with the file name. Tailing blank are ignored unless the character &lt;code&gt;achar(0)&lt;/code&gt; is present, then all characters up to and excluding &lt;code&gt;achar(0)&lt;/code&gt; are used as file name.</source>
          <target state="translated">파일 이름을 가진 기본 종류의 스칼라 &lt;code&gt;CHARACTER&lt;/code&gt; . 빈을 미행하는 문자하지 않는 한 무시됩니다 &lt;code&gt;achar(0)&lt;/code&gt; 존재, 다음과 제외까지의 모든 문자 &lt;code&gt;achar(0)&lt;/code&gt; 파일 이름으로 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="dd951a309ff236aeb57ebe416c718bf00910549d" translate="yes" xml:space="preserve">
          <source>Scalar &lt;code&gt;CHARACTER&lt;/code&gt; of default kind with the file name. Trailing blanks are ignored unless the character &lt;code&gt;achar(0)&lt;/code&gt; is present, then all characters up to and excluding &lt;code&gt;achar(0)&lt;/code&gt; are used as the file name.</source>
          <target state="translated">파일 이름을 가진 기본 종류의 스칼라 &lt;code&gt;CHARACTER&lt;/code&gt; . 후행 공백은 문자하지 않는 한 무시됩니다 &lt;code&gt;achar(0)&lt;/code&gt; 현재, 모든 문자와 제외하고 최대입니다 &lt;code&gt;achar(0)&lt;/code&gt; 파일 이름으로 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="8ddd61a296af4ed744aaa937194f1926b3dd5a97" translate="yes" xml:space="preserve">
          <source>Scalar coarray or coindexed variable of either integer type with &lt;code&gt;ATOMIC_INT_KIND&lt;/code&gt; kind or logical type with &lt;code&gt;ATOMIC_LOGICAL_KIND&lt;/code&gt; kind.</source>
          <target state="translated">스칼라 coarray이나와 두 정수 유형의 coindexed 변수 &lt;code&gt;ATOMIC_INT_KIND&lt;/code&gt; 의 종류 또는 논리적 유형 &lt;code&gt;ATOMIC_LOGICAL_KIND&lt;/code&gt; 의 종류.</target>
        </trans-unit>
        <trans-unit id="656dc7ecef7b71803d9e089fc017467abb882500" translate="yes" xml:space="preserve">
          <source>Scalar coarray or coindexed variable of integer type with &lt;code&gt;ATOMIC_INT_KIND&lt;/code&gt; kind.</source>
          <target state="translated">&lt;code&gt;ATOMIC_INT_KIND&lt;/code&gt; 종류 의 정수 유형의 스칼라 굵은 선 또는 공 인덱싱 된 변수입니다 .</target>
        </trans-unit>
        <trans-unit id="93cf1b98bcbac3e780a8d600a8cbc0855afe85bc" translate="yes" xml:space="preserve">
          <source>Scalar coarray or coindexed variable of integer type with &lt;code&gt;ATOMIC_INT_KIND&lt;/code&gt; kind. &lt;code&gt;ATOMIC_LOGICAL_KIND&lt;/code&gt; kind.</source>
          <target state="translated">&lt;code&gt;ATOMIC_INT_KIND&lt;/code&gt; 종류 의 정수 유형의 스칼라 굵은 선 또는 공 인덱싱 된 변수입니다 . &lt;code&gt;ATOMIC_LOGICAL_KIND&lt;/code&gt; 종류.</target>
        </trans-unit>
        <trans-unit id="356d04470148a87612b05230010896c2cc309356" translate="yes" xml:space="preserve">
          <source>Scalar default integer with the value of the image index which corresponds to the cosubscripts. For invalid cosubscripts the result is zero.</source>
          <target state="translated">보조 첨자에 해당하는 이미지 인덱스의 값이있는 스칼라 기본 정수 유효하지 않은 공동 첨자의 경우 결과는 0입니다.</target>
        </trans-unit>
        <trans-unit id="5c64dca0f2589281dfc0f1304a53c7800f6c7177" translate="yes" xml:space="preserve">
          <source>Scalar default-integer constant used as STAT= return value by &lt;code&gt;LOCK&lt;/code&gt; to denote that the lock variable is locked by the executing image. (Fortran 2008 or later.)</source>
          <target state="translated">잠금 변수가 실행 이미지에 의해 잠 겼음을 표시하기 위해 &lt;code&gt;LOCK&lt;/code&gt; 에 의한 STAT = 리턴 값으로 사용되는 스칼라 기본 정수 상수 . (Fortran 2008 이상)</target>
        </trans-unit>
        <trans-unit id="df0767ae40125d3c285d50dc060d184fe92013ed" translate="yes" xml:space="preserve">
          <source>Scalar default-integer constant used as STAT= return value by &lt;code&gt;UNLOCK&lt;/code&gt; to denote that the lock variable is locked by another image. (Fortran 2008 or later.)</source>
          <target state="translated">잠금 변수가 다른 이미지에 의해 잠겨 있음을 나타 내기 위해 &lt;code&gt;UNLOCK&lt;/code&gt; 에 의해 STAT = 반환 값으로 사용되는 스칼라 기본 정수 상수 . (Fortran 2008 이상)</target>
        </trans-unit>
        <trans-unit id="478480fcf0947b9942467bf58a9168d519cdda3e" translate="yes" xml:space="preserve">
          <source>Scalar default-integer constant used as STAT= return value by &lt;code&gt;UNLOCK&lt;/code&gt; to denote that the lock variable is unlocked. (Fortran 2008 or later.)</source>
          <target state="translated">잠금 변수가 잠금 해제되었음을 표시하기 위해 &lt;code&gt;UNLOCK&lt;/code&gt; 에 의해 STAT = 리턴 값으로 사용되는 스칼라 기본 정수 상수 . (Fortran 2008 이상)</target>
        </trans-unit>
        <trans-unit id="98ced51dad3c4951b9f24ab82c761383abb79a14" translate="yes" xml:space="preserve">
          <source>Scalar default-integer constant, used by &lt;code&gt;INQUIRE&lt;/code&gt; for the &lt;code&gt;IOSTAT=&lt;/code&gt; specifier to denote an that a unit number identifies an internal unit. (Fortran 2008 or later.)</source>
          <target state="translated">&lt;code&gt;INQUIRE&lt;/code&gt; 에서 &lt;code&gt;IOSTAT=&lt;/code&gt; 지정자로 사용하여 단위 번호가 내부 단위를 식별한다는 표시를 나타내는 스칼라 기본 정수 상수 . (Fortran 2008 이상)</target>
        </trans-unit>
        <trans-unit id="72787ecaec62ae0755d96b78ad526f661890817c" translate="yes" xml:space="preserve">
          <source>Scalar default-kind integer. If &lt;var&gt;DISTANCE&lt;/var&gt; is not present or has value 0, the number of images in the current team is returned. For values smaller or equal distance to the initial team, it returns the number of images index on the ancestor team which has a distance of &lt;var&gt;DISTANCE&lt;/var&gt; from the invoking team. If &lt;var&gt;DISTANCE&lt;/var&gt; is larger than the distance to the initial team, the number of images of the initial team is returned. If &lt;var&gt;FAILED&lt;/var&gt; is not present the total number of images is returned; if it has the value &lt;code&gt;.TRUE.&lt;/code&gt;, the number of failed images is returned, otherwise, the number of images which do have not the failed status.</source>
          <target state="translated">스칼라 기본 종류 정수 경우 &lt;var&gt;DISTANCE&lt;/var&gt; 없거나 0 값을 가지고, 현재 팀의 이미지의 수가 반환된다. 초기 팀 값보다 작거나 동등한 거리, 그 거리가있는 상위 팀의 영상 인덱스의 수를 반환 &lt;var&gt;DISTANCE&lt;/var&gt; 호출 팀있다. 경우 &lt;var&gt;DISTANCE&lt;/var&gt; 초기 팀까지의 거리보다 큰 초기 팀의 이미지의 수가 반환된다. 경우 &lt;var&gt;FAILED&lt;/var&gt; 존재하지 않는 이미지의 총 수는 반환된다; 값이 &lt;code&gt;.TRUE.&lt;/code&gt; 경우 실패한 이미지 수를 반환하고, 그렇지 않으면 실패 상태가 아닌 이미지 수를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="11b63357169fc9f99895df9ec6572ff81e4a171c" translate="yes" xml:space="preserve">
          <source>Scalar of the same type and kind as &lt;var&gt;ATOM&lt;/var&gt;.</source>
          <target state="translated">&lt;var&gt;ATOM&lt;/var&gt; 과 동일한 유형 및 종류의 스칼라 .</target>
        </trans-unit>
        <trans-unit id="deb976dd63b43efd6ab0ee9797b84f7890d37ce7" translate="yes" xml:space="preserve">
          <source>Scalar of the same type as &lt;var&gt;ATOM&lt;/var&gt;. If the kind is different, the value is converted to the kind of &lt;var&gt;ATOM&lt;/var&gt;.</source>
          <target state="translated">&lt;var&gt;ATOM&lt;/var&gt; 과 동일한 유형의 스칼라 . 종류가 다른 경우 값은 &lt;var&gt;ATOM&lt;/var&gt; 종류로 변환됩니다 .</target>
        </trans-unit>
        <trans-unit id="1ac4312088e39067179fb03af73dd4d3371ebd01" translate="yes" xml:space="preserve">
          <source>Scalar of the type &lt;code&gt;C_PTR&lt;/code&gt; or &lt;code&gt;C_FUNPTR&lt;/code&gt;.</source>
          <target state="translated">유형의 스칼라 &lt;code&gt;C_PTR&lt;/code&gt; 또는 &lt;code&gt;C_FUNPTR&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7aba6128be72a381f333a836a5a2b4f0bcc1c5b5" translate="yes" xml:space="preserve">
          <source>Scalar variable of the same type and kind as &lt;var&gt;ATOM&lt;/var&gt;.</source>
          <target state="translated">&lt;var&gt;ATOM&lt;/var&gt; 과 동일한 유형 및 종류의 스칼라 변수 .</target>
        </trans-unit>
        <trans-unit id="82460eb493ea626a535f0e7ea5ac5fbd03d5bc07" translate="yes" xml:space="preserve">
          <source>Scalar variable of the same type as &lt;var&gt;ATOM&lt;/var&gt;. If kind is different, the value is converted to the kind of &lt;var&gt;ATOM&lt;/var&gt;.</source>
          <target state="translated">&lt;var&gt;ATOM&lt;/var&gt; 과 동일한 유형의 스칼라 변수 . kind가 다르면 값은 &lt;var&gt;ATOM&lt;/var&gt; 종류로 변환됩니다 .</target>
        </trans-unit>
        <trans-unit id="c524dc39227d8c096deaec919a2adefbbf5f1ba0" translate="yes" xml:space="preserve">
          <source>Scale a real value</source>
          <target state="translated">실제 가치 확장</target>
        </trans-unit>
        <trans-unit id="44375d930f00af9ff7979c1b1fd76ca9f3265459" translate="yes" xml:space="preserve">
          <source>Scan a string for the absence of a set of characters</source>
          <target state="translated">문자 세트가 없는지 문자열을 스캔하십시오.</target>
        </trans-unit>
        <trans-unit id="fd8a5a35cd07d87851001e2f9e045b5f13d12ea3" translate="yes" xml:space="preserve">
          <source>Scan a string for the presence of a set of characters</source>
          <target state="translated">일련의 문자가 있는지 문자열을 스캔하십시오.</target>
        </trans-unit>
        <trans-unit id="8511fe8599cb873237f6b7003092e6b82f0377b9" translate="yes" xml:space="preserve">
          <source>Scans a &lt;var&gt;STRING&lt;/var&gt; for any of the characters in a &lt;var&gt;SET&lt;/var&gt; of characters.</source>
          <target state="translated">문자 &lt;var&gt;SET&lt;/var&gt; 의 문자를 &lt;var&gt;STRING&lt;/var&gt; 에서 스캔합니다 .</target>
        </trans-unit>
        <trans-unit id="99913c9c998f78d6a69c773b797b208b9e4e587f" translate="yes" xml:space="preserve">
          <source>Search &lt;var&gt;dir&lt;/var&gt; for header files, after all directories specified by</source>
          <target state="translated">로 지정된 모든 디렉토리 다음에 헤더 파일에 대한 &lt;var&gt;dir&lt;/var&gt; 검색</target>
        </trans-unit>
        <trans-unit id="473bfee08b86ad75828ca07c6482cb2966bf5ea0" translate="yes" xml:space="preserve">
          <source>Search &lt;var&gt;dir&lt;/var&gt; for include files, but do it after all directories specified with</source>
          <target state="translated">포함 파일에 대한 &lt;var&gt;dir&lt;/var&gt; 를 검색하십시오.</target>
        </trans-unit>
        <trans-unit id="98487752cc98fa43ed5758596f3f244e65fc97de" translate="yes" xml:space="preserve">
          <source>Search &lt;var&gt;dir&lt;/var&gt; only for header files requested with &lt;code&gt;#include &quot;file&quot;&lt;/code&gt;; they are not searched for &lt;code&gt;#include &amp;lt;file&amp;gt;&lt;/code&gt;, before all directories specified by</source>
          <target state="translated">&lt;code&gt;#include &quot;file&quot;&lt;/code&gt; 로 요청 된 헤더 파일에 대해서만 &lt;var&gt;dir&lt;/var&gt; 검색 하십시오 . 에 의해 지정된 모든 디렉토리 전에 &lt;code&gt;#include &amp;lt;file&amp;gt;&lt;/code&gt; 을 검색하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="1b1a4fd07f85774d9b4132c8a79138dc4331a6ae" translate="yes" xml:space="preserve">
          <source>Seconds after the minute, range 0&amp;ndash;59 or 0&amp;ndash;61 to allow for leap seconds</source>
          <target state="translated">분 후 초, 윤초를 허용하도록 0&amp;ndash;59 또는 0&amp;ndash;61 범위</target>
        </trans-unit>
        <trans-unit id="cb594d27830e100f09b14d8016de15b5e0278e32" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;code-gen-options#Code-Gen-Options&quot;&gt;Options for code generation conventions&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;code-gen-options#Code-Gen-Options&quot;&gt;코드 생성 규칙 옵션을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="c7ee67e44bf18180621aec0c773b338a61c05220" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;convert-specifier#CONVERT-specifier&quot;&gt;CONVERT specifier&lt;/a&gt;, for an alternative way to specify the data representation for unformatted files. See &lt;a href=&quot;runtime-options#Runtime-Options&quot;&gt;Runtime Options&lt;/a&gt;, for setting a default data representation for the whole program. The &lt;code&gt;CONVERT&lt;/code&gt; specifier overrides the</source>
          <target state="translated">형식화되지 않은 파일의 데이터 표시를 지정하는 다른 방법 은 &lt;a href=&quot;convert-specifier#CONVERT-specifier&quot;&gt;CONVERT 지정자를&lt;/a&gt; 참조하십시오 . 전체 프로그램의 기본 데이터 표현을 설정하려면 &lt;a href=&quot;runtime-options#Runtime-Options&quot;&gt;런타임 옵션을&lt;/a&gt; 참조하십시오 . &lt;code&gt;CONVERT&lt;/code&gt; 의 지정자를 겹쳐</target>
        </trans-unit>
        <trans-unit id="f65cbab836c705adb8bba84c2d60a34fc04b7fa1" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;debugging-options#Debugging-Options&quot;&gt;Options for debugging your program or GNU Fortran&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;debugging-options#Debugging-Options&quot;&gt;프로그램 디버깅 옵션 또는 GNU Fortran을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="f383855ac4889e92f8dfc1b631021b8d6f2a24b4" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;directory-options#Directory-Options&quot;&gt;Options for directory search&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;directory-options#Directory-Options&quot;&gt;디렉토리 검색 옵션을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="9ee0478afab4289fad02f693bda8c9933aa3b4cd" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;error-and-warning-options#Error-and-Warning-Options&quot;&gt;Options to request or suppress errors and warnings&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;error-and-warning-options#Error-and-Warning-Options&quot;&gt;오류 및 경고를 요청하거나 억제하는 옵션을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="1e97e0f6aa50e7a3d8b34189dfcba1cd7c8504de" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;fortran-dialect-options#Fortran-Dialect-Options&quot;&gt;Options controlling Fortran dialect&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;fortran-dialect-options#Fortran-Dialect-Options&quot;&gt;포트란 방언 제어 옵션을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="3e4f0ea1babc2e5bcbdfcffe4e806a41b18680b9" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;getarg#GETARG&quot;&gt;GETARG&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;getarg#GETARG&quot;&gt;GETARG&lt;/a&gt; 참조</target>
        </trans-unit>
        <trans-unit id="ae6806ae8f8aab10ae7b3cc8e3be39fd1e998910" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;http://gcc.gnu.org/onlinedocs/gcc/Code-Gen-Options.html#Code-Gen-Options&quot;&gt;Options for Code Generation Conventions&lt;/a&gt; in Using the GNU Compiler Collection (GCC), for information on more options offered by the GBE shared by &lt;code&gt;gfortran&lt;/code&gt;, &lt;code&gt;gcc&lt;/code&gt;, and other GNU compilers.</source>
          <target state="translated">&lt;code&gt;gfortran&lt;/code&gt; , &lt;code&gt;gcc&lt;/code&gt; 및 기타 GNU 컴파일러가 공유하는 GBE가 제공하는 추가 옵션에 대한 정보는 GNU 컴파일러 모음 (GCC) 사용의 &lt;a href=&quot;http://gcc.gnu.org/onlinedocs/gcc/Code-Gen-Options.html#Code-Gen-Options&quot;&gt;코드 생성 규칙 옵션을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="9c9f169fcbd98421bab9d94bb021f4a9cf8e2222" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;http://gcc.gnu.org/onlinedocs/gcc/Debugging-Options.html#Debugging-Options&quot;&gt;Options for Debugging Your Program or GCC&lt;/a&gt; in Using the GNU Compiler Collection (GCC), for more information on debugging options.</source>
          <target state="translated">&lt;a href=&quot;http://gcc.gnu.org/onlinedocs/gcc/Debugging-Options.html#Debugging-Options&quot;&gt;디버깅 옵션에 대한&lt;/a&gt; 자세한 내용 은 GNU 컴파일러 모음 (GCC) 사용에서 프로그램 또는 GCC 디버깅 옵션을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="94f10e93c2e6cec30ad680560400747a68ed9369" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;http://gcc.gnu.org/onlinedocs/gcc/Directory-Options.html#Directory-Options&quot;&gt;Options for Directory Search&lt;/a&gt; in Using the GNU Compiler Collection (GCC), for information on the</source>
          <target state="translated">GCC (GNU Compiler Collection) 사용에서 &lt;a href=&quot;http://gcc.gnu.org/onlinedocs/gcc/Directory-Options.html#Directory-Options&quot;&gt;디렉토리 검색 옵션을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="518cac3f51c363893346e32be887056e8211c428" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;http://gcc.gnu.org/onlinedocs/gcc/Environment-Variables.html#Environment-Variables&quot;&gt;Environment Variables Affecting GCC&lt;/a&gt; in Using the GNU Compiler Collection (GCC), for information on environment variables.</source>
          <target state="translated">&lt;a href=&quot;http://gcc.gnu.org/onlinedocs/gcc/Environment-Variables.html#Environment-Variables&quot;&gt;환경 변수에&lt;/a&gt; 대한 정보는 GCC (GNU Compiler Collection) 사용에서 GCC 에 영향을 미치는 환경 변수를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="9eb014c3de0931743b30e2d5050db5cdb749db64" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;http://gcc.gnu.org/onlinedocs/gcc/Invoking-GCC.html#Invoking-GCC&quot;&gt;GCC Command Options&lt;/a&gt; in Using the GNU Compiler Collection (GCC), for information on the non-Fortran-specific aspects of the &lt;code&gt;gcc&lt;/code&gt; command (and, therefore, the &lt;code&gt;gfortran&lt;/code&gt; command).</source>
          <target state="translated">&lt;code&gt;gcc&lt;/code&gt; 명령 (및 &lt;code&gt;gfortran&lt;/code&gt; 명령) 의 비 Fortran 특정 측면에 대한 정보는 GNU 컴파일러 모음 (GCC) 사용의 &lt;a href=&quot;http://gcc.gnu.org/onlinedocs/gcc/Invoking-GCC.html#Invoking-GCC&quot;&gt;GCC 명령 옵션&lt;/a&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="80c94f2f471941ffe1d00221b3bd10c65dd0f4f4" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;http://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#Warning-Options&quot;&gt;Options to Request or Suppress Errors and Warnings&lt;/a&gt; in Using the GNU Compiler Collection (GCC), for information on more options offered by the GBE shared by &lt;code&gt;gfortran&lt;/code&gt;, &lt;code&gt;gcc&lt;/code&gt; and other GNU compilers.</source>
          <target state="translated">&lt;code&gt;gfortran&lt;/code&gt; , &lt;code&gt;gcc&lt;/code&gt; 및 기타 GNU 컴파일러가 공유하는 GBE가 제공하는 추가 옵션에 대한 정보는 GNU 컴파일러 모음 (GCC) 사용시 &lt;a href=&quot;http://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#Warning-Options&quot;&gt;오류 및 경고를 요청하거나 억제하는 옵션을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="f0d55ce3de68fafab89c365e9f758d51a71584c9" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;ichar#ICHAR&quot;&gt;ICHAR&lt;/a&gt; for a discussion of converting between numerical values and formatted string representations.</source>
          <target state="translated">숫자 값과 형식화 된 문자열 표현 간의 변환에 대한 설명은 &lt;a href=&quot;ichar#ICHAR&quot;&gt;ICHAR&lt;/a&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="5f450b7433fcafa821293f6b49939d71f658d434" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;link-options#Link-Options&quot;&gt;Options for influencing the linking step&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;link-options#Link-Options&quot;&gt;연결 단계에 영향을주는 옵션을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="af7516d8c4c7663a50e29d155d1a17ba0ccca994" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;preprocessing-options#Preprocessing-Options&quot;&gt;Enable and customize preprocessing&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;preprocessing-options#Preprocessing-Options&quot;&gt;전처리 사용 및 사용자 정의를&lt;/a&gt; 참조 하십시오 .</target>
        </trans-unit>
        <trans-unit id="ad3babe55a6ae2502193308be44825eae183ad66" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;runtime#Runtime&quot;&gt;Runtime&lt;/a&gt;, for environment variables that affect the run-time behavior of programs compiled with GNU Fortran.</source>
          <target state="translated">GNU Fortran으로 컴파일 된 프로그램의 런타임 동작에 영향을주는 환경 변수는 &lt;a href=&quot;runtime#Runtime&quot;&gt;런타임을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="f9d3ca9d30ff4049bfc542be83677b25e5dd8e76" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;runtime-options#Runtime-Options&quot;&gt;Options for influencing runtime behavior&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;runtime-options#Runtime-Options&quot;&gt;런타임 작동에 영향을주는 옵션을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="b2a0d49f343c9b49a69c68054f5194d1378b65a3" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;stat#STAT&quot;&gt;STAT&lt;/a&gt; for an example.</source>
          <target state="translated">예는 &lt;a href=&quot;stat#STAT&quot;&gt;STAT&lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="e4781354bc9a49b96f0db0041cd5293d422de468" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;time8#TIME8&quot;&gt;TIME8&lt;/a&gt;, for information on a similar intrinsic that might be portable to more GNU Fortran implementations, though to fewer Fortran compilers.</source>
          <target state="translated">Fortran 컴파일러는 적지 만 더 많은 GNU Fortran 구현에 이식 할 수있는 유사한 내장 함수에 대한 정보는 &lt;a href=&quot;time8#TIME8&quot;&gt;TIME8을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="aec5e95d489c70ad035aadb862418cf1ab175120" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;GETPID&lt;/code&gt; for an example.</source>
          <target state="translated">예는 &lt;code&gt;GETPID&lt;/code&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="564afc931c80a8cdca4bf4283085c938edbaa6a5" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;HUGE&lt;/code&gt; for an example.</source>
          <target state="translated">예를 들어 &lt;code&gt;HUGE&lt;/code&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="ef348037a2566a724632c723e3e1b1b236931ec5" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;MALLOC&lt;/code&gt; for an example.</source>
          <target state="translated">예를 들어 &lt;code&gt;MALLOC&lt;/code&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="44e86b32ef78c80838a3f0dc7c6b98761a95473f" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;MAXEXPONENT&lt;/code&gt; for an example.</source>
          <target state="translated">예는 &lt;code&gt;MAXEXPONENT&lt;/code&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="48ad56902fb7a3275acdb83fc165479e7e41d425" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;PRECISION&lt;/code&gt; for an example.</source>
          <target state="translated">예를 보려면 &lt;code&gt;PRECISION&lt;/code&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="e3bfeb5db219c7bf364e24a9bffc8732cb7ba415" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;RAND&lt;/code&gt; and &lt;code&gt;IRAND&lt;/code&gt; for examples.</source>
          <target state="translated">예는 &lt;code&gt;RAND&lt;/code&gt; 및 &lt;code&gt;IRAND&lt;/code&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="61a08f389a25b863d0fca5015a2885ff6fd5c8cd" translate="yes" xml:space="preserve">
          <source>See Also:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96079925a60ea31b47374ec664a6fdb0e5d40d82" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;argument-passing-conventions#Argument-passing-conventions&quot;&gt;Argument passing conventions&lt;/a&gt; and &lt;a href=&quot;interoperability-with-c#Interoperability-with-C&quot;&gt;Interoperability with C&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;argument-passing-conventions#Argument-passing-conventions&quot;&gt;인수 전달 규칙&lt;/a&gt; 및 &lt;a href=&quot;interoperability-with-c#Interoperability-with-C&quot;&gt;C와의 상호 운용성을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="7a0496e196573493a3e83a413c99be3cbd814e53" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;further-interoperability-of-fortran-with-c#Further-Interoperability-of-Fortran-with-C&quot;&gt;Further Interoperability of Fortran with C&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;further-interoperability-of-fortran-with-c#Further-Interoperability-of-Fortran-with-C&quot;&gt;Fortran과 C의 추가 상호 운용성을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="371a87eafb4de078ff674d69a5a89c186532eb49" translate="yes" xml:space="preserve">
          <source>See also:</source>
          <target state="translated">또한보십시오:</target>
        </trans-unit>
        <trans-unit id="49571cb2d31b301c61bf73fea83a7c10f5e9105e" translate="yes" xml:space="preserve">
          <source>Select values from two arrays according to a logical mask. The result is equal to &lt;var&gt;TSOURCE&lt;/var&gt; if &lt;var&gt;MASK&lt;/var&gt; is &lt;code&gt;.TRUE.&lt;/code&gt;, or equal to &lt;var&gt;FSOURCE&lt;/var&gt; if it is &lt;code&gt;.FALSE.&lt;/code&gt;.</source>
          <target state="translated">논리 마스크에 따라 두 배열에서 값을 선택하십시오. 결과는 동일하다 &lt;var&gt;TSOURCE&lt;/var&gt; 경우 &lt;var&gt;MASK&lt;/var&gt; 가 인 &lt;code&gt;.TRUE.&lt;/code&gt; &lt;code&gt;.FALSE.&lt;/code&gt; 경우 &lt;var&gt;FSOURCE&lt;/var&gt; 와 같습니다 . .</target>
        </trans-unit>
        <trans-unit id="d5ab465545c759cbca44eb94ab6522ac24bd4f3d" translate="yes" xml:space="preserve">
          <source>Send a signal to a process</source>
          <target state="translated">프로세스에 신호 보내기</target>
        </trans-unit>
        <trans-unit id="12e6769614b817b56db0aea7630b8b2d5e7576b6" translate="yes" xml:space="preserve">
          <source>Sending data between remote images</source>
          <target state="translated">원격 이미지간에 데이터 전송</target>
        </trans-unit>
        <trans-unit id="b33f6d08980433face8a43b3b5ea2d170916d7d7" translate="yes" xml:space="preserve">
          <source>Sending data between remote images using enhanced references</source>
          <target state="translated">강화 된 참조를 사용하여 원격 이미지간에 데이터 전송</target>
        </trans-unit>
        <trans-unit id="e3efc491821e8b644596eba323e2b75aecdc0aac" translate="yes" xml:space="preserve">
          <source>Sending data from a local image to a remote image</source>
          <target state="translated">로컬 이미지에서 원격 이미지로 데이터 전송</target>
        </trans-unit>
        <trans-unit id="2bce63b4ef1442c7f868c6a5399298ffa2951c4e" translate="yes" xml:space="preserve">
          <source>Sending data from a local image to a remote image using enhanced references</source>
          <target state="translated">향상된 참조를 사용하여 로컬 이미지에서 원격 이미지로 데이터 보내기</target>
        </trans-unit>
        <trans-unit id="6dabeb262e6881fea86dca3b79e01031c184d027" translate="yes" xml:space="preserve">
          <source>Sending data to all images</source>
          <target state="translated">모든 이미지로 데이터 전송</target>
        </trans-unit>
        <trans-unit id="4f6ca4e5c94c6f3c60b445c017c3c28e03346732" translate="yes" xml:space="preserve">
          <source>Sends the signal specified by &lt;var&gt;SIGNAL&lt;/var&gt; to the process &lt;var&gt;PID&lt;/var&gt;. See &lt;code&gt;kill(2)&lt;/code&gt;.</source>
          <target state="translated">&lt;var&gt;SIGNAL&lt;/var&gt; 로 지정된 신호 를 프로세스 &lt;var&gt;PID&lt;/var&gt; 로 보냅니다 . &lt;code&gt;kill(2)&lt;/code&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="d08d44bc8a4dbcf6de8043d516b7d1a22903dbb9" translate="yes" xml:space="preserve">
          <source>Separator for list output</source>
          <target state="translated">리스트 출력을위한 구분자</target>
        </trans-unit>
        <trans-unit id="1df07c94c81f1971100124aecdfbcafa581a35e3" translate="yes" xml:space="preserve">
          <source>Set an alarm clock</source>
          <target state="translated">알람 시계 설정</target>
        </trans-unit>
        <trans-unit id="74ac9d50523f1673421b0c721779b30b77ea1cc9" translate="yes" xml:space="preserve">
          <source>Set bit</source>
          <target state="translated">비트 설정</target>
        </trans-unit>
        <trans-unit id="b076cf57a832c8424ab0250c17687bf87a14e4cc" translate="yes" xml:space="preserve">
          <source>Set column after which characters are ignored in typical fixed-form lines in the source file, and through which spaces are assumed (as if padded to that length) after the ends of short fixed-form lines.</source>
          <target state="translated">소스 파일의 일반적인 고정 양식 행에서 문자를 무시한 후 짧은 고정 양식 행의 끝 이후에 공백이 해당 길이로 채워지는 것처럼 열을 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="a548ee28bcb834df7f7e2ddad7cc05efea07a60e" translate="yes" xml:space="preserve">
          <source>Set column after which characters are ignored in typical free-form lines in the source file. The default value is 132. &lt;var&gt;n&lt;/var&gt; may be &amp;lsquo;</source>
          <target state="translated">소스 파일의 일반적인 자유 형식 행에서 문자가 무시되는 열을 설정하십시오. 기본값은 132입니다. &lt;var&gt;n&lt;/var&gt; 은 '</target>
        </trans-unit>
        <trans-unit id="1a1deacbea2d1ba688c80425aa79e574ddd2f983" translate="yes" xml:space="preserve">
          <source>Set endian conversion</source>
          <target state="translated">엔디안 변환 설정</target>
        </trans-unit>
        <trans-unit id="06267b5385dc56e30fc36f97d6b724787c48ec2b" translate="yes" xml:space="preserve">
          <source>Set endianness for unformatted I/O</source>
          <target state="translated">형식화되지 않은 I / O에 엔디안 설정</target>
        </trans-unit>
        <trans-unit id="aadaff9da86d2db0aab16600842bd0c8ed126de0" translate="yes" xml:space="preserve">
          <source>Set length of record markers</source>
          <target state="translated">레코드 마커 길이 설정</target>
        </trans-unit>
        <trans-unit id="e1d266917292a54b505aa79b4a533c74b5c2f2a7" translate="yes" xml:space="preserve">
          <source>Set library option flags</source>
          <target state="translated">라이브러리 옵션 플래그 설정</target>
        </trans-unit>
        <trans-unit id="38a05810c4a21572ed04f1c3fc2a3532aa0771f3" translate="yes" xml:space="preserve">
          <source>Set subrecord length</source>
          <target state="translated">서브 레코드 길이 설정</target>
        </trans-unit>
        <trans-unit id="bba3553ca627f777e83253424f7b4fe2d0d30d31" translate="yes" xml:space="preserve">
          <source>Set the &lt;code&gt;DOUBLE PRECISION&lt;/code&gt; type to an 8 byte wide type. Do nothing if this is already the default. If</source>
          <target state="translated">설정 &lt;code&gt;DOUBLE PRECISION&lt;/code&gt; 의 8 바이트 폭 유형 유형입니다. 이것이 이미 기본값이면 아무 것도하지 마십시오. 만약</target>
        </trans-unit>
        <trans-unit id="7a97af621321eb8ae64d1438377ec7451d401dc7" translate="yes" xml:space="preserve">
          <source>Set the default accessibility of module entities to &lt;code&gt;PRIVATE&lt;/code&gt;. Use-associated entities will not be accessible unless they are explicitly declared as &lt;code&gt;PUBLIC&lt;/code&gt;.</source>
          <target state="translated">모듈 엔티티의 기본 액세스 가능성을 &lt;code&gt;PRIVATE&lt;/code&gt; 로 설정하십시오 . &lt;code&gt;PUBLIC&lt;/code&gt; 으로 명시 적으로 선언되지 않으면 사용 관련 엔터티에 액세스 할 수 없습니다 .</target>
        </trans-unit>
        <trans-unit id="0da8390b78ac7a05ca954805f9def79a63da3403" translate="yes" xml:space="preserve">
          <source>Set the default integer and logical types to an 8 byte wide type. This option also affects the kind of integer constants like &lt;code&gt;42&lt;/code&gt;. Unlike</source>
          <target state="translated">기본 정수 및 논리 유형을 8 바이트 너비 유형으로 설정하십시오. 이 옵션은 &lt;code&gt;42&lt;/code&gt; 와 같은 정수 상수의 종류에도 영향을줍니다 . 같지 않은</target>
        </trans-unit>
        <trans-unit id="5bcc1c67bdb8dc5925eab0e99ee4d1fc357f4082" translate="yes" xml:space="preserve">
          <source>Set the default real type to an 8 byte wide type. This option also affects the kind of non-double real constants like &lt;code&gt;1.0&lt;/code&gt;, and does promote the default width of &lt;code&gt;DOUBLE PRECISION&lt;/code&gt; to 16 bytes if possible, unless &lt;code&gt;-fdefault-double-8&lt;/code&gt; is given, too. Unlike</source>
          <target state="translated">기본 실수 유형을 8 바이트 너비 유형으로 설정하십시오. 이 옵션은 또한 &lt;code&gt;1.0&lt;/code&gt; 과 같은 비 이중 실수 상수의 종류에 영향을 미치며 &lt;code&gt;-fdefault-double-8&lt;/code&gt; 이 지정 되지 않는 한 가능하면 &lt;code&gt;DOUBLE PRECISION&lt;/code&gt; 의 기본 너비 를 16 바이트로 승격시킵니다 . 같지 않은</target>
        </trans-unit>
        <trans-unit id="57d8ca1007fb9a3cc8f610c3e363d7623ea48424" translate="yes" xml:space="preserve">
          <source>Set the exponent of the model</source>
          <target state="translated">모형의 지수를 설정합니다</target>
        </trans-unit>
        <trans-unit id="3685b960ed79d75d7efccd14c9343786586bccf5" translate="yes" xml:space="preserve">
          <source>Set the file creation mask</source>
          <target state="translated">파일 생성 마스크 설정</target>
        </trans-unit>
        <trans-unit id="eda62e125cadc81001f59ec7fc3cc18f3d977a47" translate="yes" xml:space="preserve">
          <source>Set when a Floating Point Exception should be raised</source>
          <target state="translated">부동 소수점 예외가 발생해야 할 때 설정</target>
        </trans-unit>
        <trans-unit id="79989c587db769ea75b0446f3779f51d8599b0a0" translate="yes" xml:space="preserve">
          <source>Sets the file creation mask to &lt;var&gt;MASK&lt;/var&gt;. If called as a function, it returns the old value. If called as a subroutine and argument &lt;var&gt;OLD&lt;/var&gt; if it is supplied, it is set to the old value. See &lt;code&gt;umask(2)&lt;/code&gt;.</source>
          <target state="translated">파일 작성 마스크를 &lt;var&gt;MASK&lt;/var&gt; 로 설정합니다 . 함수로 호출되면 이전 값을 반환합니다. 서브 루틴으로 호출되고 제공된 경우 &lt;var&gt;OLD&lt;/var&gt; 인수 는 이전 값으로 설정됩니다. &lt;code&gt;umask(2)&lt;/code&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="910143c6a07e8619f80f1975ada0d2f1c997ff84" translate="yes" xml:space="preserve">
          <source>Setting a variable atomically</source>
          <target state="translated">원자 적으로 변수 설정</target>
        </trans-unit>
        <trans-unit id="293788249b45f5cd8c435eb704980897c4af744c" translate="yes" xml:space="preserve">
          <source>Setting the environment variables should be done on the command line or via the &lt;code&gt;export&lt;/code&gt; command for &lt;code&gt;sh&lt;/code&gt;-compatible shells and via &lt;code&gt;setenv&lt;/code&gt; for &lt;code&gt;csh&lt;/code&gt;-compatible shells.</source>
          <target state="translated">환경 변수 설정은 명령 행 또는 &lt;code&gt;sh&lt;/code&gt; 호환 쉘 의 &lt;code&gt;export&lt;/code&gt; 명령 및 &lt;code&gt;csh&lt;/code&gt; 호환 쉘의 &lt;code&gt;setenv&lt;/code&gt; 를 통해 수행해야합니다 .</target>
        </trans-unit>
        <trans-unit id="33b05131fad45e3cf6ee01702cf363c30830f1a3" translate="yes" xml:space="preserve">
          <source>Shall be &lt;code&gt;INTEGER&lt;/code&gt;, &lt;code&gt;REAL&lt;/code&gt;, or &lt;code&gt;COMPLEX&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;INTEGER&lt;/code&gt; , &lt;code&gt;REAL&lt;/code&gt; 또는 &lt;code&gt;COMPLEX&lt;/code&gt; 이어야 합니다.</target>
        </trans-unit>
        <trans-unit id="20ee3f6419c04632d30d3d3ce2967c3b832d1405" translate="yes" xml:space="preserve">
          <source>Shall be a default &lt;code&gt;CHARACTER&lt;/code&gt; scalar.</source>
          <target state="translated">기본 &lt;code&gt;CHARACTER&lt;/code&gt; 스칼라 여야합니다 .</target>
        </trans-unit>
        <trans-unit id="0577ef13449faa749be7482583b27121efd458ca" translate="yes" xml:space="preserve">
          <source>Shall be a non-negative scalar of type &lt;code&gt;INTEGER&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;INTEGER&lt;/code&gt; 유형의 음이 아닌 스칼라 여야합니다 .</target>
        </trans-unit>
        <trans-unit id="24382720ef0dd3b51378722db7769b72dfcea851" translate="yes" xml:space="preserve">
          <source>Shall be a scalar &lt;code&gt;CHARACTER&lt;/code&gt;, with &lt;code&gt;INTENT(IN)&lt;/code&gt;</source>
          <target state="translated">스칼라한다 &lt;code&gt;CHARACTER&lt;/code&gt; 와, &lt;code&gt;INTENT(IN)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="72ff53ecc9008dfaa4ec405183d2fe58557b1cfc" translate="yes" xml:space="preserve">
          <source>Shall be a scalar &lt;code&gt;INTEGER(kind=4)&lt;/code&gt;.</source>
          <target state="translated">스칼라 &lt;code&gt;INTEGER(kind=4)&lt;/code&gt; 이어야합니다 .</target>
        </trans-unit>
        <trans-unit id="2cdb2523dbec7e66f6c408dca890f46e1f4d8f8e" translate="yes" xml:space="preserve">
          <source>Shall be a scalar &lt;code&gt;INTEGER&lt;/code&gt; of kind 4.</source>
          <target state="translated">종류가 4 인 스칼라 &lt;code&gt;INTEGER&lt;/code&gt; 여야합니다 .</target>
        </trans-unit>
        <trans-unit id="7825a9a19e902a0ce040ccb014f0a6e1b100b0d2" translate="yes" xml:space="preserve">
          <source>Shall be a scalar &lt;code&gt;INTEGER&lt;/code&gt;, with &lt;code&gt;INTENT(IN)&lt;/code&gt;</source>
          <target state="translated">스칼라한다 &lt;code&gt;INTEGER&lt;/code&gt; 와, &lt;code&gt;INTENT(IN)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e1e8f5dc2b2c3f6ba37bc2c80b5242816809d25e" translate="yes" xml:space="preserve">
          <source>Shall be a scalar &lt;code&gt;INTEGER&lt;/code&gt;.</source>
          <target state="translated">스칼라 &lt;code&gt;INTEGER&lt;/code&gt; 이어야합니다 .</target>
        </trans-unit>
        <trans-unit id="c3be32d12a43bd7e76e3f25e442f64e5f84783ce" translate="yes" xml:space="preserve">
          <source>Shall be a scalar and of the default character type.</source>
          <target state="translated">스칼라이고 기본 문자 유형이어야합니다.</target>
        </trans-unit>
        <trans-unit id="ea4910203762489c2a81bd92ef4bd26f8653fe0f" translate="yes" xml:space="preserve">
          <source>Shall be a scalar and of type &lt;code&gt;INTEGER&lt;/code&gt;.</source>
          <target state="translated">스칼라이고 &lt;code&gt;INTEGER&lt;/code&gt; 유형이어야합니다 .</target>
        </trans-unit>
        <trans-unit id="2c6ed0ff623ca24ae10a38574fcc1b06f0ef1259" translate="yes" xml:space="preserve">
          <source>Shall be a scalar constant expression of type &lt;code&gt;INTEGER&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;INTEGER&lt;/code&gt; 유형의 스칼라 상수 표현식이어야합니다 .</target>
        </trans-unit>
        <trans-unit id="4bc95a42151543635ca12f56d8aea01570a87938" translate="yes" xml:space="preserve">
          <source>Shall be a scalar integer, with &lt;code&gt;INTENT(IN)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;INTENT(IN)&lt;/code&gt; 스칼라 정수 여야합니다.</target>
        </trans-unit>
        <trans-unit id="a8f6b53c351c012c86b2f6c77a92b194dde3a30e" translate="yes" xml:space="preserve">
          <source>Shall be a scalar of the same type and kind as &lt;var&gt;A&lt;/var&gt; and not equal to zero.</source>
          <target state="translated">&lt;var&gt;A&lt;/var&gt; 와 동일한 유형 및 종류의 스칼라 여야하며 0이 아닙니다.</target>
        </trans-unit>
        <trans-unit id="7f847c0b93a3770a46a1f8d232712c30ea00ef61" translate="yes" xml:space="preserve">
          <source>Shall be a scalar of the same type and kind as &lt;var&gt;A&lt;/var&gt;. It shall not be zero.</source>
          <target state="translated">&lt;var&gt;A&lt;/var&gt; 와 동일한 유형 및 종류의 스칼라 여야합니다 . 0이 아니어야한다.</target>
        </trans-unit>
        <trans-unit id="1308f95b04ba0493b4fb979ac3c987e12612180b" translate="yes" xml:space="preserve">
          <source>Shall be a scalar of type &lt;code&gt;CHARACTER&lt;/code&gt; and of default kind.</source>
          <target state="translated">&lt;code&gt;CHARACTER&lt;/code&gt; 유형 및 기본 유형의 스칼라 여야합니다 .</target>
        </trans-unit>
        <trans-unit id="53ca359a584489be2bf9b73766dbfdaf8a234750" translate="yes" xml:space="preserve">
          <source>Shall be a scalar of type &lt;code&gt;CHARACTER&lt;/code&gt;, with &lt;code&gt;INTENT(IN)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;INTENT(IN)&lt;/code&gt; 하여 &lt;code&gt;CHARACTER&lt;/code&gt; 유형의 스칼라 여야합니다.</target>
        </trans-unit>
        <trans-unit id="d4eaa17ef222a2659b3f96516c9eb2563179b64c" translate="yes" xml:space="preserve">
          <source>Shall be a scalar of type &lt;code&gt;CHARACTER&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;CHARACTER&lt;/code&gt; 유형의 스칼라 여야합니다 .</target>
        </trans-unit>
        <trans-unit id="2d62c4aee71edb37bff5a76cae286a89df54bd8f" translate="yes" xml:space="preserve">
          <source>Shall be a scalar of type &lt;code&gt;INTEGER&lt;/code&gt; and of default kind, &lt;em&gt;&lt;var&gt;NUMBER&lt;/var&gt; \geq 0&lt;/em&gt;</source>
          <target state="translated">&lt;code&gt;INTEGER&lt;/code&gt; 유형의 스칼라 여야하며 기본 유형은 &lt;em&gt; &lt;var&gt;NUMBER&lt;/var&gt; \ geq 0입니다.&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="29dca200f5cd92b44312b06301a1704678227941" translate="yes" xml:space="preserve">
          <source>Shall be a scalar of type &lt;code&gt;INTEGER&lt;/code&gt; or &lt;code&gt;REAL&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;INTEGER&lt;/code&gt; 또는 &lt;code&gt;REAL&lt;/code&gt; 유형의 스칼라 여야합니다 .</target>
        </trans-unit>
        <trans-unit id="5986c6fbabe1967ab47f83aa40cbfdd948f00d41" translate="yes" xml:space="preserve">
          <source>Shall be a scalar of type &lt;code&gt;INTEGER&lt;/code&gt; with a value in the range from 1 to n+1, where n equals the rank of &lt;var&gt;SOURCE&lt;/var&gt;.</source>
          <target state="translated">1에서 n + 1 사이의 값을 갖는 &lt;code&gt;INTEGER&lt;/code&gt; 유형의 스칼라 여야합니다 . 여기서 n은 &lt;var&gt;SOURCE&lt;/var&gt; 의 순위와 같습니다 .</target>
        </trans-unit>
        <trans-unit id="77405eb9a1faaa29764c1092d56a0cd6f607881d" translate="yes" xml:space="preserve">
          <source>Shall be a scalar of type &lt;code&gt;INTEGER&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;INTEGER&lt;/code&gt; 유형의 스칼라 여야합니다 .</target>
        </trans-unit>
        <trans-unit id="d4ba6573a6d551633f5e2f893be82386d5fe9545" translate="yes" xml:space="preserve">
          <source>Shall be a scalar of type &lt;code&gt;INTEGER&lt;/code&gt;. Its value shall be either 0, 1 or 2.</source>
          <target state="translated">&lt;code&gt;INTEGER&lt;/code&gt; 유형의 스칼라 여야합니다 . 그 값은 0, 1 또는 2입니다.</target>
        </trans-unit>
        <trans-unit id="d1a741eef922a65ea652925f0f37a83c99535fc8" translate="yes" xml:space="preserve">
          <source>Shall be a scalar or an array of any type and a rank less than seven.</source>
          <target state="translated">스칼라이거나 모든 유형의 배열이며 7보다 작은 순위입니다.</target>
        </trans-unit>
        <trans-unit id="e03d11cf58b776a3ae2b93f695a6adcdba0f414f" translate="yes" xml:space="preserve">
          <source>Shall be a scalar or an array of any type.</source>
          <target state="translated">스칼라 또는 모든 유형의 배열이어야합니다.</target>
        </trans-unit>
        <trans-unit id="5b502cb2e0593494d3c2485f1bdfaebadb1770f8" translate="yes" xml:space="preserve">
          <source>Shall be a scalar or an array of type &lt;code&gt;INTEGER&lt;/code&gt; .</source>
          <target state="translated">스칼라이거나 &lt;code&gt;INTEGER&lt;/code&gt; 유형의 배열이어야합니다 .</target>
        </trans-unit>
        <trans-unit id="a67c1af833bff15e7593e5172f406a5de917db32" translate="yes" xml:space="preserve">
          <source>Shall be a scalar or an array of type &lt;code&gt;INTEGER&lt;/code&gt;.</source>
          <target state="translated">스칼라이거나 &lt;code&gt;INTEGER&lt;/code&gt; 유형의 배열이어야합니다 .</target>
        </trans-unit>
        <trans-unit id="1f62fc8637de5938f4a1413fd3821a6ce46731a9" translate="yes" xml:space="preserve">
          <source>Shall be a scalar or an array of type &lt;code&gt;REAL&lt;/code&gt;.</source>
          <target state="translated">스칼라이거나 &lt;code&gt;REAL&lt;/code&gt; 유형의 배열이어야합니다 .</target>
        </trans-unit>
        <trans-unit id="7264f51573858292eb519571be9df1d9d3712a70" translate="yes" xml:space="preserve">
          <source>Shall be a scalar or an array of type &lt;code&gt;REAL&lt;/code&gt;; for &lt;code&gt;BESSEL_JN(N1, N2, X)&lt;/code&gt; it shall be scalar.</source>
          <target state="translated">스칼라이거나 &lt;code&gt;REAL&lt;/code&gt; 유형의 배열이어야합니다 . 위한 &lt;code&gt;BESSEL_JN(N1, N2, X)&lt;/code&gt; 는 라한다.</target>
        </trans-unit>
        <trans-unit id="ee5dc39b2c04da9f1d4c9988f83abf99bf4523fb" translate="yes" xml:space="preserve">
          <source>Shall be a scalar or an array of type &lt;code&gt;REAL&lt;/code&gt;; for &lt;code&gt;BESSEL_YN(N1, N2, X)&lt;/code&gt; it shall be scalar.</source>
          <target state="translated">스칼라이거나 &lt;code&gt;REAL&lt;/code&gt; 유형의 배열이어야합니다 . 위한 &lt;code&gt;BESSEL_YN(N1, N2, X)&lt;/code&gt; 는 라한다.</target>
        </trans-unit>
        <trans-unit id="ca80405169a9525af1dd71d14b33f25b6c650074" translate="yes" xml:space="preserve">
          <source>Shall be a scalar or array of any type.</source>
          <target state="translated">스칼라 또는 모든 유형의 배열이어야합니다.</target>
        </trans-unit>
        <trans-unit id="002b59464abafed92c478dc27f9e2d8606d4fca2" translate="yes" xml:space="preserve">
          <source>Shall be a scalar or array of type &lt;code&gt;CHARACTER&lt;/code&gt;, with &lt;code&gt;INTENT(IN)&lt;/code&gt;</source>
          <target state="translated">스칼라 또는 유형의 배열한다 &lt;code&gt;CHARACTER&lt;/code&gt; 함께, &lt;code&gt;INTENT(IN)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="20f5c6a1cf509e7fd175d9318ba654ca4fee07d1" translate="yes" xml:space="preserve">
          <source>Shall be an &lt;code&gt;INTEGER&lt;/code&gt; of the default kind.</source>
          <target state="translated">기본 종류 의 &lt;code&gt;INTEGER&lt;/code&gt; 여야합니다 .</target>
        </trans-unit>
        <trans-unit id="916cf36687d3dacbc22e269bba5f34fa2ec4cbbe" translate="yes" xml:space="preserve">
          <source>Shall be an array of any type and have a rank of two.</source>
          <target state="translated">모든 유형의 배열이어야하며 순위는 2입니다.</target>
        </trans-unit>
        <trans-unit id="4333fea6f24cdb843ef17863bc186cd033271784" translate="yes" xml:space="preserve">
          <source>Shall be an array of any type and rank one. It shall have at least as many elements as &lt;var&gt;MASK&lt;/var&gt; has &lt;code&gt;TRUE&lt;/code&gt; values.</source>
          <target state="translated">모든 유형의 배열이며 순위를 매 깁니다. &lt;var&gt;MASK&lt;/var&gt; 가 &lt;code&gt;TRUE&lt;/code&gt; 값을 갖는 수 만큼의 요소를 가져야 합니다.</target>
        </trans-unit>
        <trans-unit id="484a28ecdcb8b31b61b43e84a286864a6d1467f7" translate="yes" xml:space="preserve">
          <source>Shall be an array of any type.</source>
          <target state="translated">모든 유형의 배열이어야합니다.</target>
        </trans-unit>
        <trans-unit id="fdc766833a88978db0726379e66f8300fe9b37e4" translate="yes" xml:space="preserve">
          <source>Shall be an array of any type. If &lt;var&gt;ARRAY&lt;/var&gt; is a pointer it must be associated and allocatable arrays must be allocated.</source>
          <target state="translated">모든 유형의 배열이어야합니다. &lt;var&gt;ARRAY&lt;/var&gt; 가 포인터 인 경우 포인터가 연결되어 있고 할당 가능한 배열이 할당되어야합니다.</target>
        </trans-unit>
        <trans-unit id="2576eef9d9860b1f4132bbaf36dfc3590e84e9eb" translate="yes" xml:space="preserve">
          <source>Shall be an array of type &lt;code&gt;INTEGER&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;INTEGER&lt;/code&gt; 유형의 배열이어야 함</target>
        </trans-unit>
        <trans-unit id="da0a7461f71e51a11994f725a4e3b4dc8e1814b5" translate="yes" xml:space="preserve">
          <source>Shall be an array of type &lt;code&gt;INTEGER&lt;/code&gt; or &lt;code&gt;REAL&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;INTEGER&lt;/code&gt; 또는 &lt;code&gt;REAL&lt;/code&gt; 유형의 배열이어야합니다 .</target>
        </trans-unit>
        <trans-unit id="0e62d00b494e039660318dadf9b4e9c2ed913959" translate="yes" xml:space="preserve">
          <source>Shall be an array of type &lt;code&gt;INTEGER&lt;/code&gt;, &lt;code&gt;REAL&lt;/code&gt; or &lt;code&gt;COMPLEX&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;INTEGER&lt;/code&gt; , &lt;code&gt;REAL&lt;/code&gt; 또는 &lt;code&gt;COMPLEX&lt;/code&gt; 유형의 배열이어야합니다 .</target>
        </trans-unit>
        <trans-unit id="97e9458ab3548b2f0237e70dbc36f9ab495455c6" translate="yes" xml:space="preserve">
          <source>Shall be an array of type &lt;code&gt;LOGICAL&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;LOGICAL&lt;/code&gt; 유형의 배열이어야 함</target>
        </trans-unit>
        <trans-unit id="f87bcae2ce9b15f7f05be210eefae51d345f4526" translate="yes" xml:space="preserve">
          <source>Shall be an array of type &lt;code&gt;LOGICAL&lt;/code&gt; and of the same size as &lt;var&gt;ARRAY&lt;/var&gt;. Alternatively, it may be a &lt;code&gt;LOGICAL&lt;/code&gt; scalar.</source>
          <target state="translated">&lt;code&gt;LOGICAL&lt;/code&gt; 유형의 배열이며 &lt;var&gt;ARRAY&lt;/var&gt; 와 크기가 동일해야합니다 . 또는 &lt;code&gt;LOGICAL&lt;/code&gt; 스칼라 일 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="40a9d208cd6a4de27f38032d8a872be59f9017ff" translate="yes" xml:space="preserve">
          <source>Shall be an array of type &lt;code&gt;LOGICAL&lt;/code&gt;, and conformable with &lt;var&gt;ARRAY&lt;/var&gt;.</source>
          <target state="translated">&lt;code&gt;LOGICAL&lt;/code&gt; 유형의 배열이어야하며 &lt;var&gt;ARRAY&lt;/var&gt; 와 호환 가능해야 합니다.</target>
        </trans-unit>
        <trans-unit id="f76ab68d71ac96f905cbbe7b0bdaa1960dc6c028" translate="yes" xml:space="preserve">
          <source>Shall be an array of type &lt;code&gt;LOGICAL&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;LOGICAL&lt;/code&gt; 유형의 배열이어야합니다 .</target>
        </trans-unit>
        <trans-unit id="5cfea8295c106b32bc0f67d4075c669fb687b689" translate="yes" xml:space="preserve">
          <source>Shall be an array of type &lt;code&gt;REAL&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;REAL&lt;/code&gt; 유형의 배열이어야 함</target>
        </trans-unit>
        <trans-unit id="0379dd2c41732f142701b2e564b3123590cb7309" translate="yes" xml:space="preserve">
          <source>Shall be an array or scalar of any type. If &lt;var&gt;SOURCE&lt;/var&gt; is a pointer it must be associated and allocatable arrays must be allocated.</source>
          <target state="translated">모든 유형의 배열 또는 스칼라 여야합니다. &lt;var&gt;SOURCE&lt;/var&gt; 가 포인터 인 경우 에는 포인터가 연결되어 있고 할당 가능한 배열이 할당되어야합니다.</target>
        </trans-unit>
        <trans-unit id="6edb72b8a1c1d50f196baa3bf4ca91d5c01a29a8" translate="yes" xml:space="preserve">
          <source>Shall be an array, of any type.</source>
          <target state="translated">모든 유형의 배열이어야합니다.</target>
        </trans-unit>
        <trans-unit id="a4a1dac87ce83316e2bb0c0e97594b9089d8d927" translate="yes" xml:space="preserve">
          <source>Shall be an coarray, of any type.</source>
          <target state="translated">모든 유형의 굵은 선이되어야합니다.</target>
        </trans-unit>
        <trans-unit id="9e08c7bd86fa5a9427f282ff93e6a15bb4b3881d" translate="yes" xml:space="preserve">
          <source>Shall be an object of extensible declared type or unlimited polymorphic.</source>
          <target state="translated">확장 가능한 선언 유형 또는 무제한 다형성의 객체 여야합니다.</target>
        </trans-unit>
        <trans-unit id="0a2d8ecbc0f6187a439f1d1ed50a2d1cf7534af9" translate="yes" xml:space="preserve">
          <source>Shall be of &lt;code&gt;INTEGER&lt;/code&gt; type, and of the same kind as &lt;var&gt;I&lt;/var&gt;.</source>
          <target state="translated">&lt;code&gt;INTEGER&lt;/code&gt; 유형 이어야 하고 &lt;var&gt;I&lt;/var&gt; 와 같은 종류 여야 합니다.</target>
        </trans-unit>
        <trans-unit id="d2ce648c67cf6a6f2be6dd996bf73797edd4d26f" translate="yes" xml:space="preserve">
          <source>Shall be of &lt;code&gt;INTEGER&lt;/code&gt; type.</source>
          <target state="translated">&lt;code&gt;INTEGER&lt;/code&gt; 유형 이어야 합니다.</target>
        </trans-unit>
        <trans-unit id="8d906b2de34e53ce4f61a286854e22c56c5df58f" translate="yes" xml:space="preserve">
          <source>Shall be of default &lt;code&gt;CHARACTER&lt;/code&gt; type.</source>
          <target state="translated">기본 &lt;code&gt;CHARACTER&lt;/code&gt; 유형 이어야 합니다.</target>
        </trans-unit>
        <trans-unit id="e086b2556fea559c384548188fd5cb18c743846b" translate="yes" xml:space="preserve">
          <source>Shall be of the same type and kind as &lt;var&gt;A&lt;/var&gt;</source>
          <target state="translated">&lt;var&gt;A&lt;/var&gt; 와 동일한 유형 및 종류 여야합니다 .</target>
        </trans-unit>
        <trans-unit id="81b9cb37f1d2941befc9f5cde9d41c357d11bb3c" translate="yes" xml:space="preserve">
          <source>Shall be of the same type and type parameters as &lt;var&gt;TSOURCE&lt;/var&gt;.</source>
          <target state="translated">&lt;var&gt;TSOURCE&lt;/var&gt; 와 유형 및 유형 매개 변수가 동일해야합니다 .</target>
        </trans-unit>
        <trans-unit id="42d113abe0aa910b6bbf9bd6dabdec01c2abe73e" translate="yes" xml:space="preserve">
          <source>Shall be of the same type as &lt;var&gt;VECTOR&lt;/var&gt; and have the same shape as &lt;var&gt;MASK&lt;/var&gt;.</source>
          <target state="translated">&lt;var&gt;VECTOR&lt;/var&gt; 와 같은 유형이어야 하고 &lt;var&gt;MASK&lt;/var&gt; 와 모양이 동일해야합니다 .</target>
        </trans-unit>
        <trans-unit id="5707f76b00af0fa1d21bee8e354737814a4dbaf9" translate="yes" xml:space="preserve">
          <source>Shall be of the type &lt;code&gt;INTEGER&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;INTEGER&lt;/code&gt; 유형이어야합니다 .</target>
        </trans-unit>
        <trans-unit id="527a32fc2ed58834387c0ff805e5321f55af36c8" translate="yes" xml:space="preserve">
          <source>Shall be of type &lt;code&gt;CHARACTER&lt;/code&gt; and of default kind.</source>
          <target state="translated">&lt;code&gt;CHARACTER&lt;/code&gt; 유형 이고 기본 유형이어야 합니다.</target>
        </trans-unit>
        <trans-unit id="6f945a8f474d172f5646a5ea2d27e2607a679e59" translate="yes" xml:space="preserve">
          <source>Shall be of type &lt;code&gt;CHARACTER&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;CHARACTER&lt;/code&gt; 유형이어야합니다 .</target>
        </trans-unit>
        <trans-unit id="7ceb38fc352b73528ee676f6ca189108fdd525e6" translate="yes" xml:space="preserve">
          <source>Shall be of type &lt;code&gt;INTEGER&lt;/code&gt; and an array of rank one. Its values must be positive or zero.</source>
          <target state="translated">&lt;code&gt;INTEGER&lt;/code&gt; 유형 이고 순위 1의 배열 이어야 합니다. 값은 양수이거나 0이어야합니다.</target>
        </trans-unit>
        <trans-unit id="f28df60bd6d365697a79dd37ef7f62cc6751be36" translate="yes" xml:space="preserve">
          <source>Shall be of type &lt;code&gt;INTEGER&lt;/code&gt; and not wider than the default integer kind; &lt;em&gt;&lt;var&gt;POS&lt;/var&gt; \geq 0&lt;/em&gt;</source>
          <target state="translated">&lt;code&gt;INTEGER&lt;/code&gt; 유형 이어야하며 기본 정수 종류보다 넓지 않아야합니다. &lt;em&gt; &lt;var&gt;POS&lt;/var&gt; \ geq 0&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="343858f174e47f944fa6303eccf275ff512f7e1f" translate="yes" xml:space="preserve">
          <source>Shall be of type &lt;code&gt;INTEGER&lt;/code&gt; and of the same kind as &lt;var&gt;I&lt;/var&gt;.</source>
          <target state="translated">&lt;code&gt;INTEGER&lt;/code&gt; 유형이고 &lt;var&gt;I&lt;/var&gt; 와 같은 종류 여야 합니다.</target>
        </trans-unit>
        <trans-unit id="d6eab5501089c8bfdb2c667817ad027b0ac027e6" translate="yes" xml:space="preserve">
          <source>Shall be of type &lt;code&gt;INTEGER&lt;/code&gt; or &lt;code&gt;REAL&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;INTEGER&lt;/code&gt; 또는 &lt;code&gt;REAL&lt;/code&gt; 유형이어야합니다.</target>
        </trans-unit>
        <trans-unit id="954d209e5b0b12864535f24908ed1b6795815f3c" translate="yes" xml:space="preserve">
          <source>Shall be of type &lt;code&gt;INTEGER&lt;/code&gt; or a BOZ constant.</source>
          <target state="translated">&lt;code&gt;INTEGER&lt;/code&gt; 유형 이거나 BOZ 상수 여야 합니다.</target>
        </trans-unit>
        <trans-unit id="985219633a7a221ce7429a593a7ea98cfdb906ee" translate="yes" xml:space="preserve">
          <source>Shall be of type &lt;code&gt;INTEGER&lt;/code&gt; or a BOZ constant. If both &lt;var&gt;I&lt;/var&gt; and &lt;var&gt;J&lt;/var&gt; have integer type, then they shall have the same kind type parameter. &lt;var&gt;I&lt;/var&gt; and &lt;var&gt;J&lt;/var&gt; shall not both be BOZ constants.</source>
          <target state="translated">&lt;code&gt;INTEGER&lt;/code&gt; 유형 이거나 BOZ 상수 여야 합니다. &lt;var&gt;I&lt;/var&gt; 와 &lt;var&gt;J&lt;/var&gt; 가 모두 정수 유형 인 경우 동일한 종류 유형 매개 변수를 가져야합니다. &lt;var&gt;I&lt;/var&gt; 와 &lt;var&gt;J&lt;/var&gt; 는 둘 다 BOZ 상수가 될 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="9d3c1d4e0560d485dd43b4ebc34a355f876a6c7a" translate="yes" xml:space="preserve">
          <source>Shall be of type &lt;code&gt;INTEGER&lt;/code&gt;, &lt;code&gt;REAL&lt;/code&gt; or &lt;code&gt;COMPLEX&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;INTEGER&lt;/code&gt; , &lt;code&gt;REAL&lt;/code&gt; 또는 &lt;code&gt;COMPLEX&lt;/code&gt; 유형이어야 합니다.</target>
        </trans-unit>
        <trans-unit id="74c873ed5080dd40a90b878971029469034ffb7a" translate="yes" xml:space="preserve">
          <source>Shall be of type &lt;code&gt;INTEGER&lt;/code&gt;, &lt;code&gt;REAL&lt;/code&gt;, or &lt;code&gt;COMPLEX&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;INTEGER&lt;/code&gt; , &lt;code&gt;REAL&lt;/code&gt; 또는 &lt;code&gt;COMPLEX&lt;/code&gt; 유형이어야 합니다.</target>
        </trans-unit>
        <trans-unit id="a45da5aea5ca8b5b47b9217c3a5a4bf1292a5e85" translate="yes" xml:space="preserve">
          <source>Shall be of type &lt;code&gt;INTEGER&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;INTEGER&lt;/code&gt; 유형이어야합니다 .</target>
        </trans-unit>
        <trans-unit id="79acf4bfdeb561f395641b666b8eeb527fa7f30b" translate="yes" xml:space="preserve">
          <source>Shall be of type &lt;code&gt;INTEGER&lt;/code&gt;. It shall be nonnegative. If &lt;var&gt;I&lt;/var&gt; is not a BOZ constant, then &lt;var&gt;SHIFT&lt;/var&gt; shall be less than or equal to &lt;code&gt;BIT_SIZE(I)&lt;/code&gt;; otherwise, &lt;var&gt;SHIFT&lt;/var&gt; shall be less than or equal to &lt;code&gt;BIT_SIZE(J)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;INTEGER&lt;/code&gt; 유형이어야합니다 . 음이 아니어야합니다. &lt;var&gt;I&lt;/var&gt; 가 BOZ 상수가 아닌 경우 &lt;var&gt;SHIFT&lt;/var&gt; 는 &lt;code&gt;BIT_SIZE(I)&lt;/code&gt; 보다 작거나 같아야합니다 . 그렇지 않으면, &lt;var&gt;SHIFT&lt;/var&gt; 는 &lt;code&gt;BIT_SIZE(J)&lt;/code&gt; 보다 작거나 같아야합니다 .</target>
        </trans-unit>
        <trans-unit id="ea95c31f7dd63216b1c7aa45165bfcd39cccf538" translate="yes" xml:space="preserve">
          <source>Shall be of type &lt;code&gt;LOGICAL&lt;/code&gt;, &lt;code&gt;INTEGER&lt;/code&gt;, &lt;code&gt;REAL&lt;/code&gt;, &lt;code&gt;COMPLEX&lt;/code&gt; or &lt;code&gt;CHARACTER&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;LOGICAL&lt;/code&gt; , &lt;code&gt;INTEGER&lt;/code&gt; , &lt;code&gt;REAL&lt;/code&gt; , &lt;code&gt;COMPLEX&lt;/code&gt; 또는 &lt;code&gt;CHARACTER&lt;/code&gt; 유형이어야 합니다.</target>
        </trans-unit>
        <trans-unit id="52a77199c0cffb898cb5c75c7be6f898ad36befa" translate="yes" xml:space="preserve">
          <source>Shall be of type &lt;code&gt;LOGICAL&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;LOGICAL&lt;/code&gt; 유형이어야합니다 .</target>
        </trans-unit>
        <trans-unit id="ad37da23a598e497f520e30369bdfdbe6701e4e2" translate="yes" xml:space="preserve">
          <source>Shall be of type &lt;code&gt;REAL(4)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;REAL(4)&lt;/code&gt; 유형이어야 합니다.</target>
        </trans-unit>
        <trans-unit id="bd182ad1d388affbb086f80f8aba65df378eb104" translate="yes" xml:space="preserve">
          <source>Shall be of type &lt;code&gt;REAL&lt;/code&gt; and neither zero nor a negative integer.</source>
          <target state="translated">&lt;code&gt;REAL&lt;/code&gt; 유형이어야하며 0 또는 음의 정수가 아닙니다.</target>
        </trans-unit>
        <trans-unit id="5b999ba086341cd3dfb75258cd7695eaacbafda1" translate="yes" xml:space="preserve">
          <source>Shall be of type &lt;code&gt;REAL&lt;/code&gt; and not equal to zero.</source>
          <target state="translated">&lt;code&gt;REAL&lt;/code&gt; 유형이어야 하며 0과 같지 않아야합니다.</target>
        </trans-unit>
        <trans-unit id="107c391232bbe283ec363877b424fb428d8f5e57" translate="yes" xml:space="preserve">
          <source>Shall be of type &lt;code&gt;REAL&lt;/code&gt; or &lt;code&gt;COMPLEX&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;REAL&lt;/code&gt; 또는 &lt;code&gt;COMPLEX&lt;/code&gt; 유형이어야 합니다.</target>
        </trans-unit>
        <trans-unit id="359814fb1296ceee4b5ef2bc8f72cb5b61d75397" translate="yes" xml:space="preserve">
          <source>Shall be of type &lt;code&gt;REAL&lt;/code&gt; or &lt;code&gt;INTEGER&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;REAL&lt;/code&gt; 또는 &lt;code&gt;INTEGER&lt;/code&gt; 유형이어야 합니다.</target>
        </trans-unit>
        <trans-unit id="be9a87d1634016043c1bd7b02cc6f661e39ee0d2" translate="yes" xml:space="preserve">
          <source>Shall be of type &lt;code&gt;REAL&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;REAL&lt;/code&gt; 유형이어야합니다 .</target>
        </trans-unit>
        <trans-unit id="61218d30df40f791c380df71487f1be95d84fde5" translate="yes" xml:space="preserve">
          <source>Shall be scalar and of type &lt;code&gt;CHARACTER&lt;/code&gt;.</source>
          <target state="translated">스칼라이고 &lt;code&gt;CHARACTER&lt;/code&gt; 유형이어야 합니다.</target>
        </trans-unit>
        <trans-unit id="5b9614ea139357e98391668919a3060003e7eff2" translate="yes" xml:space="preserve">
          <source>Shall be scalar and of type &lt;code&gt;INTEGER&lt;/code&gt;.</source>
          <target state="translated">스칼라이고 &lt;code&gt;INTEGER&lt;/code&gt; 유형이어야 합니다.</target>
        </trans-unit>
        <trans-unit id="dcea1eb59b6b7dd483e7250d1580b2f0d59dc8c3" translate="yes" xml:space="preserve">
          <source>Shall have either the POINTER or TARGET attribute. It shall not be a coindexed object. It shall either be a variable with interoperable type and kind type parameters, or be a scalar, nonpolymorphic variable with no length type parameters.</source>
          <target state="translated">POINTER 또는 TARGET 속성이 있어야합니다. 공동 인덱싱 된 객체가 아니어야합니다. 상호 운용 가능한 유형 및 종류 유형 매개 변수가있는 변수이거나 길이 유형 매개 변수가없는 스칼라 비다 형성 변수 여야합니다.</target>
        </trans-unit>
        <trans-unit id="b8a8b605dbff49425b285257e265a9db15849f6a" translate="yes" xml:space="preserve">
          <source>Shall of type &lt;code&gt;CHARACTER&lt;/code&gt; and of default</source>
          <target state="translated">&lt;code&gt;CHARACTER&lt;/code&gt; 유형 및 기본값</target>
        </trans-unit>
        <trans-unit id="51d10107fbe472343ae4471df4e0b50709328691" translate="yes" xml:space="preserve">
          <source>Shall of type &lt;code&gt;CHARACTER&lt;/code&gt; and of default kind.</source>
          <target state="translated">&lt;code&gt;CHARACTER&lt;/code&gt; 유형 이고 기본 유형 이어야 합니다.</target>
        </trans-unit>
        <trans-unit id="59679a6e8770200d753263d42992ef3ad88ffcda" translate="yes" xml:space="preserve">
          <source>Shall of type &lt;code&gt;INTEGER&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;INTEGER&lt;/code&gt; 유형의 Shall입니다 .</target>
        </trans-unit>
        <trans-unit id="083654838cf828c8f9e9acfd7ba8415e957c97e9" translate="yes" xml:space="preserve">
          <source>Shared (read) lock</source>
          <target state="translated">공유 (읽기) 잠금</target>
        </trans-unit>
        <trans-unit id="24a2669a9744063ea3431e093dad3e241f456603" translate="yes" xml:space="preserve">
          <source>Shift bits</source>
          <target state="translated">시프트 비트</target>
        </trans-unit>
        <trans-unit id="29e2a6b7a9c9ff43661cd10d5b5292993a1cb4d9" translate="yes" xml:space="preserve">
          <source>Shift bits circularly</source>
          <target state="translated">비트를 원형으로 이동</target>
        </trans-unit>
        <trans-unit id="dfe491f4c15e6a3a57cef7ef5658d06a18ca9681" translate="yes" xml:space="preserve">
          <source>Short Table of Contents</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6410fa3e9afe342ffd817f52334796138bd31d1d" translate="yes" xml:space="preserve">
          <source>Short form</source>
          <target state="translated">짧은 형식</target>
        </trans-unit>
        <trans-unit id="ae2c35bbc8a3e749558e0855f51b68c3a1c1041e" translate="yes" xml:space="preserve">
          <source>Show a backtrace</source>
          <target state="translated">역 추적 표시</target>
        </trans-unit>
        <trans-unit id="ecff78d7ae95d6244eae6c6673661491f05df28a" translate="yes" xml:space="preserve">
          <source>Show a warning when invoking &lt;code&gt;STOP&lt;/code&gt; and &lt;code&gt;ERROR STOP&lt;/code&gt; if a floating-point exception occurred. Possible values are (bitwise or-ed) &lt;code&gt;GFC_FPE_INVALID&lt;/code&gt; (1), &lt;code&gt;GFC_FPE_DENORMAL&lt;/code&gt; (2), &lt;code&gt;GFC_FPE_ZERO&lt;/code&gt; (4), &lt;code&gt;GFC_FPE_OVERFLOW&lt;/code&gt; (8), &lt;code&gt;GFC_FPE_UNDERFLOW&lt;/code&gt; (16), &lt;code&gt;GFC_FPE_INEXACT&lt;/code&gt; (32). Default: None (0). (Default in the compiler: &lt;code&gt;GFC_FPE_INVALID | GFC_FPE_DENORMAL |
GFC_FPE_ZERO | GFC_FPE_OVERFLOW | GFC_FPE_UNDERFLOW&lt;/code&gt;.)</source>
          <target state="translated">부동 소수점 예외가 발생한 경우 &lt;code&gt;STOP&lt;/code&gt; 및 &lt;code&gt;ERROR STOP&lt;/code&gt; 을 호출 할 때 경고를 표시하십시오 . 가능한 값은 (비트 단위) &lt;code&gt;GFC_FPE_INVALID&lt;/code&gt; (1), &lt;code&gt;GFC_FPE_DENORMAL&lt;/code&gt; (2), &lt;code&gt;GFC_FPE_ZERO&lt;/code&gt; (4), &lt;code&gt;GFC_FPE_OVERFLOW&lt;/code&gt; (8), &lt;code&gt;GFC_FPE_UNDERFLOW&lt;/code&gt; (16), &lt;code&gt;GFC_FPE_INEXACT&lt;/code&gt; (32)입니다. 기본값 : 없음 (0) (컴파일러의 기본값 : &lt;code&gt;GFC_FPE_INVALID | GFC_FPE_DENORMAL | GFC_FPE_ZERO | GFC_FPE_OVERFLOW | GFC_FPE_UNDERFLOW&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="7f335dbc317b84bd09397d4430be9c08d45dc4c4" translate="yes" xml:space="preserve">
          <source>Show backtrace on run-time errors</source>
          <target state="translated">런타임 오류시 역 추적 표시</target>
        </trans-unit>
        <trans-unit id="b2fe220ce46ad3e61fa43b264dd8ded31e5c7a2f" translate="yes" xml:space="preserve">
          <source>Show location for runtime errors</source>
          <target state="translated">런타임 오류 위치 표시</target>
        </trans-unit>
        <trans-unit id="b9e6e21299565d17654368a67dced2b97efb0b7f" translate="yes" xml:space="preserve">
          <source>Sign copying function</source>
          <target state="translated">부호 복사 기능</target>
        </trans-unit>
        <trans-unit id="aa54822d1cb32774ba5ea7ed1c36aab22020b631" translate="yes" xml:space="preserve">
          <source>Signal handler (&lt;code&gt;INTEGER FUNCTION&lt;/code&gt; or &lt;code&gt;SUBROUTINE&lt;/code&gt;) or dummy/global &lt;code&gt;INTEGER&lt;/code&gt; scalar. &lt;code&gt;INTEGER&lt;/code&gt;. It is &lt;code&gt;INTENT(IN)&lt;/code&gt;.</source>
          <target state="translated">신호 처리기 ( &lt;code&gt;INTEGER FUNCTION&lt;/code&gt; 또는 &lt;code&gt;SUBROUTINE&lt;/code&gt; ) 또는 더미 / 글로벌 &lt;code&gt;INTEGER&lt;/code&gt; 스칼라. &lt;code&gt;INTEGER&lt;/code&gt; . 그것은이다 &lt;code&gt;INTENT(IN)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="434f789a75433f30ae5c8b87b09a522352fd7e80" translate="yes" xml:space="preserve">
          <source>Signal handler (&lt;code&gt;INTEGER FUNCTION&lt;/code&gt; or &lt;code&gt;SUBROUTINE&lt;/code&gt;) or dummy/global &lt;code&gt;INTEGER&lt;/code&gt; scalar. The scalar values may be either &lt;code&gt;SIG_IGN=1&lt;/code&gt; to ignore the alarm generated or &lt;code&gt;SIG_DFL=0&lt;/code&gt; to set the default action. It is &lt;code&gt;INTENT(IN)&lt;/code&gt;.</source>
          <target state="translated">신호 처리기 ( &lt;code&gt;INTEGER FUNCTION&lt;/code&gt; 또는 &lt;code&gt;SUBROUTINE&lt;/code&gt; ) 또는 더미 / 글로벌 &lt;code&gt;INTEGER&lt;/code&gt; 스칼라. 스칼라 값은 생성 된 알람을 무시하기 위해 &lt;code&gt;SIG_IGN=1&lt;/code&gt; 이거나 기본 동작을 설정하기 위해 &lt;code&gt;SIG_DFL=0&lt;/code&gt; 일 수 있습니다. 그것은이다 &lt;code&gt;INTENT(IN)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d5839f31c80bbe22e4ca5c919be73ef68fe0c48b" translate="yes" xml:space="preserve">
          <source>Signal handling subroutine (or function)</source>
          <target state="translated">신호 처리 서브 루틴 (또는 기능)</target>
        </trans-unit>
        <trans-unit id="a51ebb79e9543118703366d216afe4ef926bd390" translate="yes" xml:space="preserve">
          <source>Significant digits function</source>
          <target state="translated">유효 숫자 기능</target>
        </trans-unit>
        <trans-unit id="e3df63517ac1354e83a34133483110df10d44593" translate="yes" xml:space="preserve">
          <source>Similar to the D/C prefixes to real functions to specify the input/output types, GNU Fortran offers B/I/J/K prefixes to integer functions for compatibility with DEC programs. The types implied by each are:</source>
          <target state="translated">입력 / 출력 유형을 지정하기위한 실제 함수에 대한 D / C 접두사와 유사하게 GNU Fortran은 DEC 프로그램과의 호환성을 위해 정수 함수에 B / I / J / K 접두사를 제공합니다. 각각의 의미는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="305ae2b905b83f178ceea47d33d714854572bcd5" translate="yes" xml:space="preserve">
          <source>Similarly, replace a code fragment like</source>
          <target state="translated">마찬가지로 코드 조각을 바꾸십시오.</target>
        </trans-unit>
        <trans-unit id="8b47373c28af15534b0ccf85af5f48cb65a5356f" translate="yes" xml:space="preserve">
          <source>Since Fortran 2003 (ISO/IEC 1539-1:2004(E)) there is a standardized way to generate procedure and derived-type declarations and global variables which are interoperable with C (ISO/IEC 9899:1999). The &lt;code&gt;bind(C)&lt;/code&gt; attribute has been added to inform the compiler that a symbol shall be interoperable with C; also, some constraints are added. Note, however, that not all C features have a Fortran equivalent or vice versa. For instance, neither C&amp;rsquo;s unsigned integers nor C&amp;rsquo;s functions with variable number of arguments have an equivalent in Fortran.</source>
          <target state="translated">Fortran 2003 (ISO / IEC 1539-1 : 2004 (E)) 이후 C와 상호 운용 가능한 프로 시저 및 파생 형식 선언과 전역 변수를 생성하는 표준화 된 방법이 있습니다 (ISO / IEC 9899 : 1999). &lt;code&gt;bind(C)&lt;/code&gt; 속성을 상징 C와 상호되어야한다고 컴파일러에 알리는 추가되었다; 또한 일부 제약 조건이 추가되었습니다. 그러나 모든 C 기능에 Fortran 기능이있는 것은 아니며 그 반대도 마찬가지입니다. 예를 들어, C의 부호없는 정수 나 가변 개수의 인수를 가진 C의 함수는 포트란에서 동일하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="2b558a3010ff27c938b2481c330c617fd7674187" translate="yes" xml:space="preserve">
          <source>Sine function</source>
          <target state="translated">사인 기능</target>
        </trans-unit>
        <trans-unit id="0fd8e331b5a0e7bf18e7b4682be7c54ae74f4cef" translate="yes" xml:space="preserve">
          <source>Sine function, degrees</source>
          <target state="translated">사인 함수,도</target>
        </trans-unit>
        <trans-unit id="c20b8c7b39beb05e14dc6ae8ef85d6db93979710" translate="yes" xml:space="preserve">
          <source>Single-image mode, i.e. &lt;code&gt;num_images()&lt;/code&gt; is always one.</source>
          <target state="translated">단일 이미지 모드, 즉 &lt;code&gt;num_images()&lt;/code&gt; 는 항상 하나입니다.</target>
        </trans-unit>
        <trans-unit id="0a1e9e2cc00f9cc3e5d7b651a2ce919268bbbe5c" translate="yes" xml:space="preserve">
          <source>Size in bits of the character storage unit.</source>
          <target state="translated">문자 저장 장치의 비트 크기입니다.</target>
        </trans-unit>
        <trans-unit id="847b0443e51c912262b22b5372e7aced274e6a31" translate="yes" xml:space="preserve">
          <source>Size in bits of the file-storage unit.</source>
          <target state="translated">파일 저장 장치의 비트 크기입니다.</target>
        </trans-unit>
        <trans-unit id="d110ab79f7fe17d53cc0b03c0c29ea1f42384796" translate="yes" xml:space="preserve">
          <source>Size in bytes of an expression</source>
          <target state="translated">표현식의 크기 (바이트)</target>
        </trans-unit>
        <trans-unit id="8703cd257ba0428f4c26f356a7f327e820390280" translate="yes" xml:space="preserve">
          <source>Skip line</source>
          <target state="translated">줄넘기</target>
        </trans-unit>
        <trans-unit id="83b4eb15bdd4f8ad4bef962a3f9dd58927cc70d1" translate="yes" xml:space="preserve">
          <source>Sleep for the specified number of seconds</source>
          <target state="translated">지정된 시간 (초) 동안 절전</target>
        </trans-unit>
        <trans-unit id="851fc3df194bcf3118f479bace1ad57a8d234c3d" translate="yes" xml:space="preserve">
          <source>Smallest distance between two numbers of a given type</source>
          <target state="translated">주어진 유형의 두 숫자 사이의 최소 거리</target>
        </trans-unit>
        <trans-unit id="6f04ff8dc3c8e63b97e01decc57e6caa7034a213" translate="yes" xml:space="preserve">
          <source>Smallest positive number of a real kind</source>
          <target state="translated">실제 종류의 최소 양수</target>
        </trans-unit>
        <trans-unit id="be514a30cc613020d7191a9562e5e8387969a6b7" translate="yes" xml:space="preserve">
          <source>Some Fortran compilers, including &lt;code&gt;g77&lt;/code&gt;, let the user declare &lt;code&gt;COMMON&lt;/code&gt; with the &lt;code&gt;VOLATILE&lt;/code&gt; attribute. This is invalid standard Fortran syntax and is not supported by &lt;code&gt;gfortran&lt;/code&gt;. Note that &lt;code&gt;gfortran&lt;/code&gt; accepts &lt;code&gt;VOLATILE&lt;/code&gt; variables in &lt;code&gt;COMMON&lt;/code&gt; blocks since revision 4.3.</source>
          <target state="translated">&lt;code&gt;g77&lt;/code&gt; 을 포함한 일부 포트란 컴파일러 는 사용자 가 &lt;code&gt;VOLATILE&lt;/code&gt; 속성을 사용하여 &lt;code&gt;COMMON&lt;/code&gt; 을 선언하도록 합니다. 이것은 유효하지 않은 표준 포트란 구문이며 &lt;code&gt;gfortran&lt;/code&gt; 에서 지원하지 않습니다 . 참고 것을 &lt;code&gt;gfortran&lt;/code&gt; 은 받아 &lt;code&gt;VOLATILE&lt;/code&gt; 변수 &lt;code&gt;COMMON&lt;/code&gt; 버전 4.3 이후 블록.</target>
        </trans-unit>
        <trans-unit id="b417dcb7f0cdd38035c49c88211f0b0ecfa4dc4a" translate="yes" xml:space="preserve">
          <source>Some Fortran compilers, including &lt;code&gt;g77&lt;/code&gt;, let the user declare &lt;code&gt;OPEN( ... NAME=)&lt;/code&gt;. This is invalid standard Fortran syntax and is not supported by &lt;code&gt;gfortran&lt;/code&gt;. &lt;code&gt;OPEN( ... NAME=)&lt;/code&gt; should be replaced with &lt;code&gt;OPEN( ... FILE=)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;g77&lt;/code&gt; 을 포함한 일부 포트란 컴파일러 는 사용자가 &lt;code&gt;OPEN( ... NAME=)&lt;/code&gt; 선언하도록합니다 . 이것은 유효하지 않은 표준 포트란 구문이며 &lt;code&gt;gfortran&lt;/code&gt; 에서 지원하지 않습니다 . &lt;code&gt;OPEN( ... NAME=)&lt;/code&gt; 은 &lt;code&gt;OPEN( ... FILE=)&lt;/code&gt; 로 바꿔야 합니다.</target>
        </trans-unit>
        <trans-unit id="9aa16018396488e45984185fe32c12dca4e437df" translate="yes" xml:space="preserve">
          <source>Some Fortran compilers, including &lt;code&gt;g77&lt;/code&gt;, let the user declare complex functions with the syntax &lt;code&gt;COMPLEX FUNCTION name*16()&lt;/code&gt;, as well as &lt;code&gt;COMPLEX*16 FUNCTION name()&lt;/code&gt;. Both are non-standard, legacy extensions. &lt;code&gt;gfortran&lt;/code&gt; accepts the latter form, which is more common, but not the former.</source>
          <target state="translated">&lt;code&gt;g77&lt;/code&gt; 을 포함한 일부 포트란 컴파일러 는 &lt;code&gt;COMPLEX*16 FUNCTION name()&lt;/code&gt; 뿐만 아니라 &lt;code&gt;COMPLEX FUNCTION name*16()&lt;/code&gt; 구문을 사용하여 복잡한 함수를 선언 할 수 있습니다 . 둘 다 비표준 레거시 확장입니다. &lt;code&gt;gfortran&lt;/code&gt; 은 후자의 형식을 허용하지만, 더 일반적이지만 전자는 아닙니다.</target>
        </trans-unit>
        <trans-unit id="330e58c7cf201e9e8951112c4f8340857d962f7d" translate="yes" xml:space="preserve">
          <source>Some checks require that</source>
          <target state="translated">일부 검사에는</target>
        </trans-unit>
        <trans-unit id="8b93ec6372e9d82f250934c32fab66809a012a76" translate="yes" xml:space="preserve">
          <source>Some legacy codes rely on allowing &lt;code&gt;READ&lt;/code&gt; or &lt;code&gt;WRITE&lt;/code&gt; after the EOF file marker in order to find the end of a file. GNU Fortran normally rejects these codes with a run-time error message and suggests the user consider &lt;code&gt;BACKSPACE&lt;/code&gt; or &lt;code&gt;REWIND&lt;/code&gt; to properly position the file before the EOF marker. As an extension, the run-time error may be disabled using -std=legacy.</source>
          <target state="translated">일부 레거시 코드는 파일 끝을 찾기 위해 EOF 파일 마커 다음에 &lt;code&gt;READ&lt;/code&gt; 또는 &lt;code&gt;WRITE&lt;/code&gt; 를 허용하는 데 의존 합니다. GNU Fortran은 일반적으로 런타임 오류 메시지와 함께 이러한 코드를 거부하고 사용자 가 파일을 EOF 마커 앞에 올바르게 배치하기 위해 &lt;code&gt;BACKSPACE&lt;/code&gt; 또는 &lt;code&gt;REWIND&lt;/code&gt; 를 고려하도록 제안합니다 . 확장으로, 런타임 오류는 -std = legacy를 사용하여 비활성화 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c03465045a7324a27b28a2683aefc5ea96f79fad" translate="yes" xml:space="preserve">
          <source>Some of these have no effect when compiling programs written in Fortran.</source>
          <target state="translated">이 중 일부는 Fortran으로 작성된 프로그램을 컴파일 할 때 영향을 미치지 않습니다.</target>
        </trans-unit>
        <trans-unit id="32c528c0b130160ed58ee14f8bbba2d7a132054b" translate="yes" xml:space="preserve">
          <source>Some users try to use</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36b93f1d8852ced513a1665df75b215fa78d8b4f" translate="yes" xml:space="preserve">
          <source>Source files with</source>
          <target state="translated">소스 파일</target>
        </trans-unit>
        <trans-unit id="2c92c7afcac737084215f99693bbc5bccfb8b5c6" translate="yes" xml:space="preserve">
          <source>Specific names:</source>
          <target state="translated">특정 이름 :</target>
        </trans-unit>
        <trans-unit id="95c59c79b4cdd1fc7b8e82868c219069dbfbbe1c" translate="yes" xml:space="preserve">
          <source>Specifically,</source>
          <target state="translated">Specifically,</target>
        </trans-unit>
        <trans-unit id="b7d7c4da380841e46021fb0ca037b1a5efba92c6" translate="yes" xml:space="preserve">
          <source>Specify &lt;var&gt;prefix&lt;/var&gt; as the prefix for subsequent</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42cafcca0fb6829439dd4875c78d1ab99c05367a" translate="yes" xml:space="preserve">
          <source>Specify a list of floating point exception traps to enable. On most systems, if a floating point exception occurs and the trap for that exception is enabled, a SIGFPE signal will be sent and the program being aborted, producing a core file useful for debugging. &lt;var&gt;list&lt;/var&gt; is a (possibly empty) comma-separated list of the following exceptions: &amp;lsquo;</source>
          <target state="translated">사용할 부동 소수점 예외 트랩 목록을 지정하십시오. 대부분의 시스템에서 부동 소수점 예외가 발생하고 해당 예외에 대한 트랩이 활성화되면 SIGFPE 신호가 전송되고 프로그램이 중단되어 디버깅에 유용한 코어 파일이 생성됩니다. &lt;var&gt;list&lt;/var&gt; 는 쉼표로 구분 된 다음 예외 목록입니다. '</target>
        </trans-unit>
        <trans-unit id="d14f5b9fb87fc452c90c5fd85eec58bb8af5c343" translate="yes" xml:space="preserve">
          <source>Specify a list of floating-point exceptions, whose flag status is printed to &lt;code&gt;ERROR_UNIT&lt;/code&gt; when invoking &lt;code&gt;STOP&lt;/code&gt; and &lt;code&gt;ERROR STOP&lt;/code&gt;. &lt;var&gt;list&lt;/var&gt; can be either &amp;lsquo;</source>
          <target state="translated">&lt;code&gt;STOP&lt;/code&gt; 및 &lt;code&gt;ERROR STOP&lt;/code&gt; 호출시 플래그 상태가 &lt;code&gt;ERROR_UNIT&lt;/code&gt; 로 인쇄되는 부동 소수점 예외 목록을 지정하십시오 . &lt;var&gt;list&lt;/var&gt; 은 '</target>
        </trans-unit>
        <trans-unit id="007bee526510282de934eac4e9bb4f5a71b15290" translate="yes" xml:space="preserve">
          <source>Specify that no implicit typing is allowed, unless overridden by explicit &lt;code&gt;IMPLICIT&lt;/code&gt; statements. This is the equivalent of adding &lt;code&gt;implicit none&lt;/code&gt; to the start of every procedure.</source>
          <target state="translated">명시 적 &lt;code&gt;IMPLICIT&lt;/code&gt; 문 으로 겹쳐 쓰지 않는 한 내재 된 타이핑이 허용되지 않도록 지정하십시오 . 이것은 모든 프로 시저의 시작에 &lt;code&gt;implicit none&lt;/code&gt; 을 추가하는 것과 같습니다 .</target>
        </trans-unit>
        <trans-unit id="934047251e46abde54628aa3fda3c2f88b9ff87a" translate="yes" xml:space="preserve">
          <source>Specify the layout used by the source file. The free form layout was introduced in Fortran 90. Fixed form was traditionally used in older Fortran programs. When neither option is specified, the source form is determined by the file extension.</source>
          <target state="translated">소스 파일이 사용하는 레이아웃을 지정하십시오. 자유 형식 레이아웃은 Fortran 90에서 도입되었습니다. 고정 형식은 전통적으로 이전 Fortran 프로그램에서 사용되었습니다. 옵션을 지정하지 않으면 파일 형식에 따라 소스 형식이 결정됩니다.</target>
        </trans-unit>
        <trans-unit id="ee9feccb43afe74e83bac143a53815e66e124b9b" translate="yes" xml:space="preserve">
          <source>Specify the length of record markers for unformatted files. Valid values for &lt;var&gt;length&lt;/var&gt; are 4 and 8. Default is 4. &lt;em&gt;This is different from previous versions of &lt;code&gt;gfortran&lt;/code&gt;&lt;/em&gt;, which specified a default record marker length of 8 on most systems. If you want to read or write files compatible with earlier versions of &lt;code&gt;gfortran&lt;/code&gt;, use</source>
          <target state="translated">형식화되지 않은 파일의 레코드 마커 길이를 지정하십시오. &lt;var&gt;length&lt;/var&gt; 의 유효한 값 은 4와 8입니다. 기본값은 4입니다. &lt;em&gt;이는 &lt;code&gt;gfortran&lt;/code&gt; &lt;/em&gt; 대부분의 시스템에서 기본 레코드 마커 길이를 8로 지정한 &lt;em&gt;이전 버전의 &lt;/em&gt;&lt;em&gt;gfortran&lt;/em&gt; 과 &lt;em&gt;다릅니다&lt;/em&gt; . 이전 버전의 &lt;code&gt;gfortran&lt;/code&gt; 과 호환되는 파일을 읽거나 쓰 려면</target>
        </trans-unit>
        <trans-unit id="26e44f89fd4b4a7cb11e8742aba60a9407fbdab5" translate="yes" xml:space="preserve">
          <source>Specify the maximum allowed identifier length. Typical values are 31 (Fortran 95) and 63 (Fortran 2003 and Fortran 2008).</source>
          <target state="translated">허용되는 최대 식별자 길이를 지정하십시오. 일반적인 값은 31 (Fortran 95) 및 63 (Fortran 2003 및 Fortran 2008)입니다.</target>
        </trans-unit>
        <trans-unit id="f842c86bbc70731f99d854a980b060de5b3876ec" translate="yes" xml:space="preserve">
          <source>Specify the maximum length for a subrecord. The maximum permitted value for length is 2147483639, which is also the default. Only really useful for use by the gfortran testsuite.</source>
          <target state="translated">서브 레코드의 최대 길이를 지정하십시오. 길이에 허용되는 최대 값은 2147483639이며 기본값입니다. gfortran testsuite에서 사용하기에 정말 유용합니다.</target>
        </trans-unit>
        <trans-unit id="e92aac594a200fd2711a82227e38fe172fea18e0" translate="yes" xml:space="preserve">
          <source>Specify the representation of data for unformatted files. Valid values for conversion are: &amp;lsquo;</source>
          <target state="translated">형식화되지 않은 파일에 대한 데이터 표시를 지정하십시오. 변환에 유효한 값은 '</target>
        </trans-unit>
        <trans-unit id="cf4ed15eea461bb8014411c266c96a1a9fc59ec1" translate="yes" xml:space="preserve">
          <source>Specify the standard to which the program is expected to conform, which may be one of &amp;lsquo;</source>
          <target state="translated">프로그램이 준수 할 것으로 예상되는 표준을 지정하십시오.</target>
        </trans-unit>
        <trans-unit id="c4fb77efc8cd285dcec19a190e5fd370517a59b0" translate="yes" xml:space="preserve">
          <source>Specifying conventions for function calls, data layout and register usage.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="edf758a512fcb7f79183738aac054c2326607ccf" translate="yes" xml:space="preserve">
          <source>Square-root function</source>
          <target state="translated">제곱근 함수</target>
        </trans-unit>
        <trans-unit id="2dfa66079d9b7229409430972fd5f1567d78a3b6" translate="yes" xml:space="preserve">
          <source>Standard</source>
          <target state="translated">Standard</target>
        </trans-unit>
        <trans-unit id="fdf0b1772ed9fe8b027fb1bdbf1f5645c72d2142" translate="yes" xml:space="preserve">
          <source>Standard-warning flag; prints a warning to standard error. Default: &lt;code&gt;GFC_STD_F95_DEL | GFC_STD_LEGACY&lt;/code&gt;.</source>
          <target state="translated">표준 경고 플래그; 표준 오류에 경고를 인쇄합니다. 기본값 : &lt;code&gt;GFC_STD_F95_DEL | GFC_STD_LEGACY&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1827308ecb2a0054500ee8ceacdbae700a527098" translate="yes" xml:space="preserve">
          <source>Standard:</source>
          <target state="translated">Standard:</target>
        </trans-unit>
        <trans-unit id="bf57eaa8a992cef83f9a8cc2b5ba8cdf1caa7f14" translate="yes" xml:space="preserve">
          <source>Standards supported by GNU Fortran.</source>
          <target state="translated">GNU Fortran에서 지원하는 표준.</target>
        </trans-unit>
        <trans-unit id="15e149932fc991487b43d88fbb3c88557a30ae2f" translate="yes" xml:space="preserve">
          <source>Status of GNU Fortran, roadmap, proposed extensions.</source>
          <target state="translated">GNU Fortran의 상태, 로드맵, 확장 제안.</target>
        </trans-unit>
        <trans-unit id="3fd5c058e1730e08895ad358c106e74bc0ca8e5e" translate="yes" xml:space="preserve">
          <source>Status of a C pointer</source>
          <target state="translated">C 포인터의 상태</target>
        </trans-unit>
        <trans-unit id="10ca235b257ccd0860d76314611059c238401ef9" translate="yes" xml:space="preserve">
          <source>Status of a pointer or pointer/target pair</source>
          <target state="translated">포인터 또는 포인터 / 대상 쌍의 상태</target>
        </trans-unit>
        <trans-unit id="a1220a311dc382a2a6d99c70419cb6dd623e3905" translate="yes" xml:space="preserve">
          <source>Status of allocatable entity</source>
          <target state="translated">할당 가능한 실체의 상태</target>
        </trans-unit>
        <trans-unit id="e16c0b4b39eba191712c74c7827bcc81ed270e11" translate="yes" xml:space="preserve">
          <source>Storage size in bits</source>
          <target state="translated">비트 단위의 스토리지 크기</target>
        </trans-unit>
        <trans-unit id="b0a03f9b3f2e03ebe7958367b1639444f18c777e" translate="yes" xml:space="preserve">
          <source>Store the elements of &lt;var&gt;VECTOR&lt;/var&gt; in an array of higher rank.</source>
          <target state="translated">&lt;var&gt;VECTOR&lt;/var&gt; 의 요소 를 더 높은 순위의 배열에 저장하십시오 .</target>
        </trans-unit>
        <trans-unit id="1d3c6a85f92b40e5d5652603eea6753e9e44b23c" translate="yes" xml:space="preserve">
          <source>Stores the current user name in &lt;var&gt;LOGIN&lt;/var&gt;. (On systems where POSIX functions &lt;code&gt;geteuid&lt;/code&gt; and &lt;code&gt;getpwuid&lt;/code&gt; are not available, and the &lt;code&gt;getlogin&lt;/code&gt; function is not implemented either, this will return a blank string.)</source>
          <target state="translated">현재 사용자 이름을 &lt;var&gt;LOGIN&lt;/var&gt; 에 저장합니다 . (POSIX 함수 &lt;code&gt;geteuid&lt;/code&gt; 및 &lt;code&gt;getpwuid&lt;/code&gt; 를 사용할 수없고 &lt;code&gt;getlogin&lt;/code&gt; 함수도 구현되지 않은 시스템에서는 공백 문자열을 리턴합니다.)</target>
        </trans-unit>
        <trans-unit id="5b89887b0b3769cb75ec7b6a11daec7fdd6c0f77" translate="yes" xml:space="preserve">
          <source>Stores the elements of &lt;var&gt;ARRAY&lt;/var&gt; in an array of rank one.</source>
          <target state="translated">&lt;var&gt;ARRAY&lt;/var&gt; 의 요소 를 순위 1의 배열로 저장합니다 .</target>
        </trans-unit>
        <trans-unit id="9b0f2fee5b79b050c6ce64cfa28372afec04f15e" translate="yes" xml:space="preserve">
          <source>Stores the value of &lt;var&gt;NAME&lt;/var&gt; in &lt;var&gt;VALUE&lt;/var&gt;. If &lt;var&gt;VALUE&lt;/var&gt; is not large enough to hold the data, it is truncated. If &lt;var&gt;NAME&lt;/var&gt; is not set, &lt;var&gt;VALUE&lt;/var&gt; will be filled with blanks.</source>
          <target state="translated">상점의 값 &lt;var&gt;NAME&lt;/var&gt; 에 &lt;var&gt;VALUE&lt;/var&gt; . 경우 &lt;var&gt;VALUE&lt;/var&gt; 데이터를 보유 할 충분한이 아닌, 잘립니다. 경우 &lt;var&gt;NAME&lt;/var&gt; 설정되지 않은 &lt;var&gt;VALUE&lt;/var&gt; 공백으로 채워집니다.</target>
        </trans-unit>
        <trans-unit id="227f47ad25f7c5b494804a9dd6a35a5495ff91dc" translate="yes" xml:space="preserve">
          <source>Stores the value of &lt;var&gt;NAME&lt;/var&gt; in &lt;var&gt;VALUE&lt;/var&gt;. If &lt;var&gt;VALUE&lt;/var&gt; is not large enough to hold the data, it is truncated. If &lt;var&gt;NAME&lt;/var&gt; is not set, &lt;var&gt;VALUE&lt;/var&gt; will be filled with blanks. Argument &lt;var&gt;LENGTH&lt;/var&gt; contains the length needed for storing the environment variable &lt;var&gt;NAME&lt;/var&gt; or zero if it is not present. &lt;var&gt;STATUS&lt;/var&gt; is -1 if &lt;var&gt;VALUE&lt;/var&gt; is present but too short for the environment variable; it is 1 if the environment variable does not exist and 2 if the processor does not support environment variables; in all other cases &lt;var&gt;STATUS&lt;/var&gt; is zero. If &lt;var&gt;TRIM_NAME&lt;/var&gt; is present with the value &lt;code&gt;.FALSE.&lt;/code&gt;, the trailing blanks in &lt;var&gt;NAME&lt;/var&gt; are significant; otherwise they are not part of the environment variable name.</source>
          <target state="translated">상점의 값 &lt;var&gt;NAME&lt;/var&gt; 에 &lt;var&gt;VALUE&lt;/var&gt; . 경우 &lt;var&gt;VALUE&lt;/var&gt; 데이터를 보유 할 충분한이 아닌, 잘립니다. 경우 &lt;var&gt;NAME&lt;/var&gt; 설정되지 않은 &lt;var&gt;VALUE&lt;/var&gt; 공백으로 채워집니다. 인수 &lt;var&gt;LENGTH&lt;/var&gt; 는 환경 변수 &lt;var&gt;NAME&lt;/var&gt; 을 저장하는 데 필요한 길이를 포함 하거나 존재하지 않는 경우 0을 포함합니다. &lt;var&gt;VALUE&lt;/var&gt; 가 있지만 환경 변수에 비해 너무 짧은 경우 &lt;var&gt;STATUS&lt;/var&gt; 는 -1입니다 . 환경 변수가 없으면 1이고 프로세서가 환경 변수를 지원하지 않으면 2입니다. 다른 모든 경우에는 &lt;var&gt;STATUS&lt;/var&gt; 가 0입니다. 경우 &lt;var&gt;TRIM_NAME&lt;/var&gt; 는 값으로 존재 &lt;code&gt;.FALSE.&lt;/code&gt; &lt;var&gt;NAME&lt;/var&gt; 의 후행 공백 은 중요합니다. 그렇지 않으면 환경 변수 이름의 일부가 아닙니다.</target>
        </trans-unit>
        <trans-unit id="2bd7e5fcdbe4f6544e81555a5624d8c4d66ac1d0" translate="yes" xml:space="preserve">
          <source>Strings are handled quite differently in C and Fortran. In C a string is a &lt;code&gt;NUL&lt;/code&gt;-terminated array of characters while in Fortran each string has a length associated with it and is thus not terminated (by e.g. &lt;code&gt;NUL&lt;/code&gt;). For example, if one wants to use the following C function,</source>
          <target state="translated">문자열은 C와 Fortran에서 상당히 다르게 처리됩니다. C에서 문자열은 &lt;code&gt;NUL&lt;/code&gt; 로 끝나는 문자 배열이며 Fortran에서 각 문자열은 길이가 연관되어 있으므로 종료되지 않습니다 (예 : &lt;code&gt;NUL&lt;/code&gt; ). 예를 들어 다음 C 함수를 사용하려는 경우</target>
        </trans-unit>
        <trans-unit id="0c8c3b89be632fb9b2103e87e817938089482e20" translate="yes" xml:space="preserve">
          <source>Structure types may be declared nested within another parent structure. The syntax is:</source>
          <target state="translated">구조 유형은 다른 상위 구조 내에 중첩되어 선언 될 수 있습니다. 구문은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="57d3bcdf7da6a7f377bf807ee9383a5cca867462" translate="yes" xml:space="preserve">
          <source>Structures act like derived types with the &lt;code&gt;SEQUENCE&lt;/code&gt; attribute. Otherwise they may contain no specifiers.</source>
          <target state="translated">구조는 &lt;code&gt;SEQUENCE&lt;/code&gt; 속성 이있는 파생 유형처럼 작동 합니다. 그렇지 않으면 지정자를 포함하지 않을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f3f83e75b3335d3b26aab4293c8147cdcb21fe5a" translate="yes" xml:space="preserve">
          <source>Structures may contain &lt;code&gt;UNION&lt;/code&gt; blocks. For more detail see the section on &lt;a href=&quot;union-and-map#UNION-and-MAP&quot;&gt;UNION and MAP&lt;/a&gt;.</source>
          <target state="translated">구조체는 &lt;code&gt;UNION&lt;/code&gt; 블록을 포함 할 수 있습니다 . 자세한 내용은 &lt;a href=&quot;union-and-map#UNION-and-MAP&quot;&gt;UNION 및 MAP&lt;/a&gt; 섹션을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="647a9b88c6ba11fd20ea096190f7b379a270fde4" translate="yes" xml:space="preserve">
          <source>Structures may share names with other symbols. For example, the following is invalid for derived types, but valid for structures:</source>
          <target state="translated">구조는 다른 기호와 이름을 공유 할 수 있습니다. 예를 들어, 다음은 파생 유형에는 유효하지 않지만 구조에는 유효합니다.</target>
        </trans-unit>
        <trans-unit id="f84e4ab7045c48258995a851c353c186a922bfd8" translate="yes" xml:space="preserve">
          <source>Structures support old-style initialization of components, like those described in &lt;a href=&quot;old_002dstyle-variable-initialization#Old_002dstyle-variable-initialization&quot;&gt;Old-style variable initialization&lt;/a&gt;. For array initializers, an initializer may contain a repeat specification of the form &lt;code&gt;&amp;lt;literal-integer&amp;gt; * &amp;lt;constant-initializer&amp;gt;&lt;/code&gt;. The value of the integer indicates the number of times to repeat the constant initializer when expanding the initializer list.</source>
          <target state="translated">구조는 구식 &lt;a href=&quot;old_002dstyle-variable-initialization#Old_002dstyle-variable-initialization&quot;&gt;변수 초기화에&lt;/a&gt; 설명 된 것과 같이 구식 구성 요소의 초기화를 지원 합니다. 배열 이니셜 라이저의 경우 이니셜 라이저는 &lt;code&gt;&amp;lt;literal-integer&amp;gt; * &amp;lt;constant-initializer&amp;gt;&lt;/code&gt; 형식의 반복 스펙을 포함 할 수 있습니다 . 정수 값은 이니셜 라이저 목록을 확장 할 때 상수 이니셜 라이저를 반복 할 횟수를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="02fab76969984e9a43b1602c03ad65def9839419" translate="yes" xml:space="preserve">
          <source>Submodules are supported. It should noted that &lt;code&gt;MODULEs&lt;/code&gt; do not produce the smod file needed by the descendent &lt;code&gt;SUBMODULEs&lt;/code&gt; unless they contain at least one &lt;code&gt;MODULE PROCEDURE&lt;/code&gt; interface. The reason for this is that &lt;code&gt;SUBMODULEs&lt;/code&gt; are useless without &lt;code&gt;MODULE PROCEDUREs&lt;/code&gt;. See http://j3-fortran.org/doc/meeting/207/15-209.txt for a discussion and a draft interpretation. Adopting this interpretation has the advantage that code that does not use submodules does not generate smod files.</source>
          <target state="translated">서브 모듈이 지원됩니다. 그것은 주목해야 &lt;code&gt;MODULEs&lt;/code&gt; 후손을 필요로하는 smod 파일을 생성하지 않는 &lt;code&gt;SUBMODULEs&lt;/code&gt; 들은 적어도 하나의에 포함하지 않는 &lt;code&gt;MODULE PROCEDURE&lt;/code&gt; 인터페이스를. 그 이유는 &lt;code&gt;SUBMODULEs&lt;/code&gt; 이 &lt;code&gt;MODULE PROCEDUREs&lt;/code&gt; 없이는 쓸모 없기 때문입니다 . 토론 및 초안 해석에 대해서는 http://j3-fortran.org/doc/meeting/207/15-209.txt를 참조하십시오. 이 해석을 채택하면 하위 모듈을 사용하지 않는 코드가 smod 파일을 생성하지 않는다는 이점이 있습니다.</target>
        </trans-unit>
        <trans-unit id="d1889bba143969c108d68eb72184e742c5e04cfb" translate="yes" xml:space="preserve">
          <source>Subroutine</source>
          <target state="translated">Subroutine</target>
        </trans-unit>
        <trans-unit id="754c0d9c9ba9ef9d6d7c88e404d79d19fdd48d2f" translate="yes" xml:space="preserve">
          <source>Subroutine (or function) to convert a time into a string</source>
          <target state="translated">시간을 문자열로 변환하는 서브 루틴 (또는 함수)</target>
        </trans-unit>
        <trans-unit id="e3c323a853729ad8093638531ea3340eab0a9593" translate="yes" xml:space="preserve">
          <source>Subroutine (or function) to get the current time as a string</source>
          <target state="translated">현재 시간을 문자열로 가져 오는 서브 루틴 (또는 함수)</target>
        </trans-unit>
        <trans-unit id="4583f6b494968a4f6d91c5d628260c1424017395" translate="yes" xml:space="preserve">
          <source>Subroutine, function</source>
          <target state="translated">서브 루틴, 기능</target>
        </trans-unit>
        <trans-unit id="e058745ed0f2b958d88be66a81db31ac623dc424" translate="yes" xml:space="preserve">
          <source>Subroutines and functions have to have the &lt;code&gt;BIND(C)&lt;/code&gt; attribute to be compatible with C. The dummy argument declaration is relatively straightforward. However, one needs to be careful because C uses call-by-value by default while Fortran behaves usually similar to call-by-reference. Furthermore, strings and pointers are handled differently. Note that in Fortran 2003 and 2008 only explicit size and assumed-size arrays are supported but not assumed-shape or deferred-shape (i.e. allocatable or pointer) arrays. However, those are allowed since the Technical Specification 29113, see &lt;a href=&quot;further-interoperability-of-fortran-with-c#Further-Interoperability-of-Fortran-with-C&quot;&gt;Further Interoperability of Fortran with C&lt;/a&gt;</source>
          <target state="translated">서브 루틴 및 함수는 &lt;code&gt;BIND(C)&lt;/code&gt; 와 호환되도록 BIND (C) 속성 을 가져야합니다 . 더미 인수 선언은 비교적 간단합니다. 그러나 C는 기본적으로 값별 호출을 사용하지만 포트란은 일반적으로 호출 기준과 유사하게 작동하므로주의해야합니다. 또한 문자열과 포인터는 다르게 처리됩니다. Fortran 2003 및 2008에서는 명시 적 크기 및 가정 된 크기 배열 만 지원되지만 가정 된 모양 또는 지연된 모양 (예 : 할당 가능 또는 포인터) 배열은 지원되지 않습니다. 그러나 기술 사양 29113부터 허용됩니다. &lt;a href=&quot;further-interoperability-of-fortran-with-c#Further-Interoperability-of-Fortran-with-C&quot;&gt;Fortran과 C의 추가 상호 운용성을&lt;/a&gt; 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="84e1c1ab85abe90d71fa3c8975edc11fbe3572b9" translate="yes" xml:space="preserve">
          <source>Subroutines do not return a value (matching C99&amp;rsquo;s &lt;code&gt;void&lt;/code&gt;) while functions either return a value as specified in the platform ABI or the result variable is passed as hidden argument to the function and no result is returned. A hidden result variable is used when the result variable is an array or of type &lt;code&gt;CHARACTER&lt;/code&gt;.</source>
          <target state="translated">함수가 플랫폼 ABI에 지정된대로 값을 리턴하거나 결과 변수가 함수에 숨겨진 인수로 전달되고 결과가 리턴되지 않는 동안 서브 루틴은 값을 리턴하지 않습니다 (C99의 &lt;code&gt;void&lt;/code&gt; 와 일치 ). 숨겨진 결과 변수는 결과 변수가 배열이거나 &lt;code&gt;CHARACTER&lt;/code&gt; 유형 인 경우에 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="fa26f312b9334a5a4f8f1fab093a66686392740c" translate="yes" xml:space="preserve">
          <source>Subsequent invocations of &lt;code&gt;DTIME&lt;/code&gt; return values accumulated since the previous invocation.</source>
          <target state="translated">이후에 호출 된 &lt;code&gt;DTIME&lt;/code&gt; 반환 값은 이전 호출 이후 누적 된 값입니다.</target>
        </trans-unit>
        <trans-unit id="49ab4445ec4faa01525289dc23a91fc3fe290857" translate="yes" xml:space="preserve">
          <source>Sum of array elements</source>
          <target state="translated">배열 요소의 합</target>
        </trans-unit>
        <trans-unit id="a5f92ff8b9a66ff56d741b1139022df1c2c24f85" translate="yes" xml:space="preserve">
          <source>Sum of values on the current set of images</source>
          <target state="translated">현재 이미지 세트의 값 합계</target>
        </trans-unit>
        <trans-unit id="9d80f8cda5d91e566d1de99e8f316869b58a87b4" translate="yes" xml:space="preserve">
          <source>Support for &lt;code&gt;ALLOCATE&lt;/code&gt; with &lt;code&gt;MOLD&lt;/code&gt;.</source>
          <target state="translated">지원 &lt;code&gt;ALLOCATE&lt;/code&gt; 와 &lt;code&gt;MOLD&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c1d0ae6890c6068e3b32ebf3cd312809dcb1f2fe" translate="yes" xml:space="preserve">
          <source>Support for Unicode characters (ISO 10646) and UTF-8, including the &lt;code&gt;SELECTED_CHAR_KIND&lt;/code&gt; and &lt;code&gt;NEW_LINE&lt;/code&gt; intrinsic functions.</source>
          <target state="translated">&lt;code&gt;SELECTED_CHAR_KIND&lt;/code&gt; 및 &lt;code&gt;NEW_LINE&lt;/code&gt; 내장 함수를 포함하여 유니 코드 문자 (ISO 10646) 및 UTF-8을 지원 합니다.</target>
        </trans-unit>
        <trans-unit id="f45c1318bd9d40a8fdeeff4b420e3be5188abf93" translate="yes" xml:space="preserve">
          <source>Support for binary, octal and hexadecimal (BOZ) constants in the intrinsic functions &lt;code&gt;INT&lt;/code&gt;, &lt;code&gt;REAL&lt;/code&gt;, &lt;code&gt;CMPLX&lt;/code&gt; and &lt;code&gt;DBLE&lt;/code&gt;.</source>
          <target state="translated">내장 함수 &lt;code&gt;INT&lt;/code&gt; , &lt;code&gt;REAL&lt;/code&gt; , &lt;code&gt;CMPLX&lt;/code&gt; 및 &lt;code&gt;DBLE&lt;/code&gt; 에서 2 진, 8 진 및 16 진 (BOZ) 상수를 지원합니다 .</target>
        </trans-unit>
        <trans-unit id="a6f66e7238910c46fd66a5f462079be9d2ff0e61" translate="yes" xml:space="preserve">
          <source>Support for namelist variables with allocatable and pointer attribute and nonconstant length type parameter.</source>
          <target state="translated">할당 가능하고 포인터 속성과 불변 길이 유형 매개 변수를 사용하여 이름 목록 변수를 지원합니다.</target>
        </trans-unit>
        <trans-unit id="e8d4519abbef8f7502d6f73fde411179a797c8cb" translate="yes" xml:space="preserve">
          <source>Support for the &lt;code&gt;CONTIGUOUS&lt;/code&gt; attribute.</source>
          <target state="translated">&lt;code&gt;CONTIGUOUS&lt;/code&gt; 속성을 지원 합니다.</target>
        </trans-unit>
        <trans-unit id="43e2920a5744f6c6c78233c29d4f8f6a373e1208" translate="yes" xml:space="preserve">
          <source>Support for the &lt;code&gt;IMPURE&lt;/code&gt; attribute for procedures, which allows for &lt;code&gt;ELEMENTAL&lt;/code&gt; procedures without the restrictions of &lt;code&gt;PURE&lt;/code&gt;.</source>
          <target state="translated">에 대한 지원 &lt;code&gt;IMPURE&lt;/code&gt; 수 있습니다 절차에 대한 속성, &lt;code&gt;ELEMENTAL&lt;/code&gt; 의 제한없이 절차 &lt;code&gt;PURE&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5a8ea217867460fff7ab67c41efd35c13b62b84c" translate="yes" xml:space="preserve">
          <source>Support for the &lt;code&gt;STORAGE_SIZE&lt;/code&gt; intrinsic inquiry function.</source>
          <target state="translated">&lt;code&gt;STORAGE_SIZE&lt;/code&gt; 고유 조회 기능 지원</target>
        </trans-unit>
        <trans-unit id="af639b2dcc59077cad6ad238d91096cac3652058" translate="yes" xml:space="preserve">
          <source>Support for the asynchronous input/output syntax; however, the data transfer is currently always synchronously performed.</source>
          <target state="translated">비동기 입력 / 출력 구문 지원; 그러나 데이터 전송은 항상 동 기적으로 수행됩니다.</target>
        </trans-unit>
        <trans-unit id="40fd23d38d68170936acfd22c3e88b67e9799f61" translate="yes" xml:space="preserve">
          <source>Support for the declaration of enumeration constants via the &lt;code id=&quot;index-fshort_002denums-1&quot;&gt;ENUM&lt;/code&gt; and &lt;code&gt;ENUMERATOR&lt;/code&gt; statements. Interoperability with &lt;code&gt;gcc&lt;/code&gt; is guaranteed also for the case where the &lt;code&gt;-fshort-enums&lt;/code&gt; command line option is given.</source>
          <target state="translated">&lt;code id=&quot;index-fshort_002denums-1&quot;&gt;ENUM&lt;/code&gt; 및 &lt;code&gt;ENUMERATOR&lt;/code&gt; 문을 통한 열거 상수 선언 지원 &lt;code&gt;-fshort-enums&lt;/code&gt; 명령 행 옵션이 제공 되는 경우에도 &lt;code&gt;gcc&lt;/code&gt; 와의 상호 운용성 이 보장 됩니다.</target>
        </trans-unit>
        <trans-unit id="32d8dba928fb9d3055d9746ebac9b9dda4cfa98f" translate="yes" xml:space="preserve">
          <source>Support of the &lt;code&gt;EXECUTE_COMMAND_LINE&lt;/code&gt; intrinsic subroutine.</source>
          <target state="translated">&lt;code&gt;EXECUTE_COMMAND_LINE&lt;/code&gt; 내장 서브 루틴 지원</target>
        </trans-unit>
        <trans-unit id="f6e60c3b89cf2f18ac57a98b47c681dc87b11d64" translate="yes" xml:space="preserve">
          <source>Support of the &lt;code&gt;PARITY&lt;/code&gt; intrinsic functions.</source>
          <target state="translated">&lt;code&gt;PARITY&lt;/code&gt; 내장 함수 지원 .</target>
        </trans-unit>
        <trans-unit id="8ef004d704e215229e2c3c35bf2c6848afe98297" translate="yes" xml:space="preserve">
          <source>Symbol tables, measurements, and debugging dumps.</source>
          <target state="translated">심볼 테이블, 측정 및 디버깅 덤프</target>
        </trans-unit>
        <trans-unit id="d309885a631254e163dd5e47ee38bdffe18fa286" translate="yes" xml:space="preserve">
          <source>Synchronization between the specified images; the program only continues on a given image after this function has been called on all images specified for that image. Note that one image can wait for all other images in the current team (e.g. via &lt;code&gt;sync images(*)&lt;/code&gt;) while those only wait for that specific image. Additionally, &lt;code&gt;sync images&lt;/code&gt; ensures that all pending data transfers of previous segments have completed.</source>
          <target state="translated">지정된 이미지 간의 동기화 프로그램은 해당 이미지에 지정된 모든 이미지에서이 함수가 호출 된 후에 만 ​​주어진 이미지에서 계속됩니다. 하나의 이미지는 현재 팀의 다른 모든 이미지 (예 : &lt;code&gt;sync images(*)&lt;/code&gt; 를 통해 )를 기다리는 동안 해당 이미지 만 기다립니다. 또한 &lt;code&gt;sync images&lt;/code&gt; 하면 이전 세그먼트의 보류중인 모든 데이터 전송이 완료됩니다.</target>
        </trans-unit>
        <trans-unit id="a447f210957da5de9925077a7b89f12227a84bd2" translate="yes" xml:space="preserve">
          <source>Synchronization of all images in the current team; the program only continues on a given image after this function has been called on all images of the current team. Additionally, it ensures that all pending data transfers of previous segment have completed.</source>
          <target state="translated">현재 팀의 모든 이미지 동기화 이 기능이 현재 팀의 모든 이미지에서 호출 된 후 프로그램은 주어진 이미지에서만 계속됩니다. 또한 이전 세그먼트의 모든 보류중인 데이터 전송이 완료되었는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="1de8dba368e7754dc199c99b017f5c51265ee8dc" translate="yes" xml:space="preserve">
          <source>Syntax:</source>
          <target state="translated">Syntax:</target>
        </trans-unit>
        <trans-unit id="295f55db186a0ed6dbe566eddb168e6f5cb08730" translate="yes" xml:space="preserve">
          <source>System time in seconds.</source>
          <target state="translated">시스템 시간 (초)</target>
        </trans-unit>
        <trans-unit id="aaaa94dbfd3889bcf9729fe071f31cfb5a17c80d" translate="yes" xml:space="preserve">
          <source>TR 15581:</source>
          <target state="translated">TR 15581 :</target>
        </trans-unit>
        <trans-unit id="20a23b405dd9b6ceefd61dd375a6f94480eb9e72" translate="yes" xml:space="preserve">
          <source>TS 18508 or later</source>
          <target state="translated">TS 18508 이상</target>
        </trans-unit>
        <trans-unit id="23f0f18bceb08edf425ceb039bfcc4fdead29ecb" translate="yes" xml:space="preserve">
          <source>TS 29113</source>
          <target state="translated">TS 29113</target>
        </trans-unit>
        <trans-unit id="19bf927f2de0d8da70e9718788baed87c5c813b3" translate="yes" xml:space="preserve">
          <source>TTYNAM</source>
          <target state="translated">TTYNAM</target>
        </trans-unit>
        <trans-unit id="9730d4326a7b8a0d13c2be3b7fe29b80ad152bf6" translate="yes" xml:space="preserve">
          <source>Table of Contents</source>
          <target state="translated">목차</target>
        </trans-unit>
        <trans-unit id="1d70668be1ee6fefa104cf95c84c93674f0ed6fa" translate="yes" xml:space="preserve">
          <source>Tangent function</source>
          <target state="translated">탄젠트 함수</target>
        </trans-unit>
        <trans-unit id="c5024eeaa18746b9c8e2e0438e9092ac03e18b8b" translate="yes" xml:space="preserve">
          <source>Tangent function, degrees</source>
          <target state="translated">탄젠트 함수,도</target>
        </trans-unit>
        <trans-unit id="f394cc412fd3be14e86981af1ff41d5819e50239" translate="yes" xml:space="preserve">
          <source>Technical Specification (TS) 18508 or later</source>
          <target state="translated">기술 사양 (TS) 18508 이상</target>
        </trans-unit>
        <trans-unit id="4643e7131e59d0687a8f4c65bed9455384a9a815" translate="yes" xml:space="preserve">
          <source>Technical Specification (TS) 29113</source>
          <target state="translated">기술 사양 (TS) 29113</target>
        </trans-unit>
        <trans-unit id="30df28638fe52ef8b926a803c3916d26c4afd8c4" translate="yes" xml:space="preserve">
          <source>Test for end-of-file value</source>
          <target state="translated">파일 끝 값 테스트</target>
        </trans-unit>
        <trans-unit id="d1df02844df432961ad4933504ac2f4370bb30de" translate="yes" xml:space="preserve">
          <source>Test for end-of-record value</source>
          <target state="translated">레코드 끝 값 테스트</target>
        </trans-unit>
        <trans-unit id="cd30c28c0790cde5a79ae8e7287e8f083133a716" translate="yes" xml:space="preserve">
          <source>Tests for a NaN</source>
          <target state="translated">NaN 테스트</target>
        </trans-unit>
        <trans-unit id="93ef0dd827103681fcee453b78be2ff14e1a261d" translate="yes" xml:space="preserve">
          <source>The</source>
          <target state="translated">The</target>
        </trans-unit>
        <trans-unit id="920b44ba9703f20cc99c30f463396e1bfe7a030f" translate="yes" xml:space="preserve">
          <source>The &lt;code id=&quot;index-ACCESS_003d_0027STREAM_0027-I_002fO&quot;&gt;OPEN&lt;/code&gt; statement supports the &lt;code&gt;ACCESS='STREAM'&lt;/code&gt; specifier, allowing I/O without any record structure.</source>
          <target state="translated">&lt;code id=&quot;index-ACCESS_003d_0027STREAM_0027-I_002fO&quot;&gt;OPEN&lt;/code&gt; 문은 지원 &lt;code&gt;ACCESS='STREAM'&lt;/code&gt; 어떤 레코드 구조없이 I / O를 수 있도록 지정합니다.</target>
        </trans-unit>
        <trans-unit id="45096fc8f1ab49cab0a6901a7e71262ecf34c360" translate="yes" xml:space="preserve">
          <source>The &lt;code id=&quot;index-statement_002c-IMPORT&quot;&gt;IMPORT&lt;/code&gt; statement, allowing to import host-associated derived types.</source>
          <target state="translated">&lt;code id=&quot;index-statement_002c-IMPORT&quot;&gt;IMPORT&lt;/code&gt; 문은 수입 할 수 있도록 파생 된 형식을 호스트 관련.</target>
        </trans-unit>
        <trans-unit id="b9f84c4b5337ae02ab73e33c59078953e36c7099" translate="yes" xml:space="preserve">
          <source>The &lt;code id=&quot;index-statement_002c-PROTECTED&quot;&gt;PROTECTED&lt;/code&gt; statement and attribute.</source>
          <target state="translated">&lt;code id=&quot;index-statement_002c-PROTECTED&quot;&gt;PROTECTED&lt;/code&gt; 문 및 속성.</target>
        </trans-unit>
        <trans-unit id="3e88bfdb12c0cf835fe3109c5bb3213b4b76a81a" translate="yes" xml:space="preserve">
          <source>The &lt;code id=&quot;index-statement_002c-VALUE&quot;&gt;VALUE&lt;/code&gt; statement and attribute.</source>
          <target state="translated">&lt;code id=&quot;index-statement_002c-VALUE&quot;&gt;VALUE&lt;/code&gt; 의 성명 및 속성.</target>
        </trans-unit>
        <trans-unit id="86514f2a65e089b234b1d9556b0bcb1cadae651d" translate="yes" xml:space="preserve">
          <source>The &lt;code id=&quot;index-statement_002c-VOLATILE&quot;&gt;VOLATILE&lt;/code&gt; statement and attribute.</source>
          <target state="translated">&lt;code id=&quot;index-statement_002c-VOLATILE&quot;&gt;VOLATILE&lt;/code&gt; 문 및 속성.</target>
        </trans-unit>
        <trans-unit id="5504146bf19d4e68b6fec560b42b55f404d0020a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ASSOCIATE&lt;/code&gt; construct.</source>
          <target state="translated">&lt;code&gt;ASSOCIATE&lt;/code&gt; 의 구조.</target>
        </trans-unit>
        <trans-unit id="a9c1917fafd7b5d9b38f2c94ec28f4e4c439891b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ASYNCHRONOUS&lt;/code&gt; attribute has been clarified and extended to allow its use with asynchronous communication in user-provided libraries such as in implementations of the Message Passing Interface specification.</source>
          <target state="translated">&lt;code&gt;ASYNCHRONOUS&lt;/code&gt; 특성 정화 및 인터페이스 사양을 통과하는 메시지의 구현 예에서와 같이 사용자가 제공하는 라이브러리 비동기 통신과의 사용을 허용하도록 확장되었다.</target>
        </trans-unit>
        <trans-unit id="38e0615ffeb6018f5b0ce9056ef423f13d5eca97" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;BLOCK&lt;/code&gt; construct is supported.</source>
          <target state="translated">&lt;code&gt;BLOCK&lt;/code&gt; 구조가 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="ffc580d700e7004f2cd49fc0c083d55e80b601e8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CARRIAGECONTROL&lt;/code&gt; specifier allows a user to control line termination settings between output records for an I/O unit. The specifier has no meaning for readonly files. When &lt;code&gt;CARRAIGECONTROL&lt;/code&gt; is specified upon opening a unit for formatted writing, the exact &lt;code&gt;CARRIAGECONTROL&lt;/code&gt; setting determines what characters to write between output records. The syntax is:</source>
          <target state="translated">&lt;code&gt;CARRIAGECONTROL&lt;/code&gt; 의 지정은 I / O 장치에 대한 출력 레코드 사이의 제어 라인 종단 설정을 사용자에게 허용한다. 이 지정자는 읽기 전용 파일에는 의미가 없습니다. 포맷 된 쓰기를 위해 장치를 열 때 &lt;code&gt;CARRAIGECONTROL&lt;/code&gt; 을 지정하면 정확한 &lt;code&gt;CARRIAGECONTROL&lt;/code&gt; 설정에 따라 출력 레코드간에 쓸 문자가 결정됩니다. 구문은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="fba2fe960da19bc62f070f27b6550cdb35ebb169" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;COMMAND&lt;/code&gt; argument is passed to the shell and executed, using the C library&amp;rsquo;s &lt;code&gt;system&lt;/code&gt; call. (The shell is &lt;code&gt;sh&lt;/code&gt; on Unix systems, and &lt;code&gt;cmd.exe&lt;/code&gt; on Windows.) If &lt;code&gt;WAIT&lt;/code&gt; is present and has the value false, the execution of the command is asynchronous if the system supports it; otherwise, the command is executed synchronously.</source>
          <target state="translated">&lt;code&gt;COMMAND&lt;/code&gt; 인수는 C 라이브러리의 사용, 쉘에 전달되고 실행되는 &lt;code&gt;system&lt;/code&gt; 호출을. (쉘은 Unix 시스템에서는 &lt;code&gt;sh&lt;/code&gt; 이고 Windows 에서는 &lt;code&gt;cmd.exe&lt;/code&gt; 입니다.) &lt;code&gt;WAIT&lt;/code&gt; 가 있고 값이 false 인 경우 시스템에서 지원하는 경우 명령 실행은 비동기식입니다. 그렇지 않으면 명령이 동 기적으로 실행됩니다.</target>
        </trans-unit>
        <trans-unit id="6ed18c8819b983c42d20b38a26c488521983db98" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CO_MIN&lt;/code&gt; and &lt;code&gt;CO_MAX&lt;/code&gt; and &lt;code&gt;SUM&lt;/code&gt; reduction intrinsics. And the &lt;code&gt;CO_BROADCAST&lt;/code&gt; and &lt;code&gt;CO_REDUCE&lt;/code&gt; intrinsic, except that those do not support polymorphic types or types with allocatable, pointer or polymorphic components.</source>
          <target state="translated">&lt;code&gt;CO_MIN&lt;/code&gt; 및 &lt;code&gt;CO_MAX&lt;/code&gt; 및 &lt;code&gt;SUM&lt;/code&gt; 감소 내장 함수. 그리고 &lt;code&gt;CO_BROADCAST&lt;/code&gt; 및 &lt;code&gt;CO_REDUCE&lt;/code&gt; 내장 함수는, 사람들은 할당 가능한, 포인터 나 다형성 구성 요소와 다형성 유형 또는 유형을 지원하지 않는 점을 제외하고.</target>
        </trans-unit>
        <trans-unit id="7352f03cc2aead00770267e37d8a0c4c87f4e930" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DO CONCURRENT&lt;/code&gt; construct is supported.</source>
          <target state="translated">&lt;code&gt;DO CONCURRENT&lt;/code&gt; 의 구조가 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="facfde94d1951d5b65a2e66bfc6848f3e67203f0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;EXECUTE_COMMAND_LINE&lt;/code&gt; and &lt;code&gt;SYSTEM&lt;/code&gt; intrinsics are implemented with the &lt;code&gt;system&lt;/code&gt; function, which need not be thread-safe. It is the responsibility of the user to ensure that &lt;code&gt;system&lt;/code&gt; is not called concurrently.</source>
          <target state="translated">&lt;code&gt;EXECUTE_COMMAND_LINE&lt;/code&gt; 및 &lt;code&gt;SYSTEM&lt;/code&gt; 내장 함수가 구현되는 &lt;code&gt;system&lt;/code&gt; 이 될 스레드 안전하지 않아도 기능. &lt;code&gt;system&lt;/code&gt; 이 동시에 호출되지 않도록하는 것은 사용자의 책임입니다 .</target>
        </trans-unit>
        <trans-unit id="8420e4c7eee1e1983bfaef583dedee78915cf077" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;EXIT&lt;/code&gt; statement (with construct-name) can be now be used to leave not only the &lt;code&gt;DO&lt;/code&gt; but also the &lt;code&gt;ASSOCIATE&lt;/code&gt;, &lt;code&gt;BLOCK&lt;/code&gt;, &lt;code&gt;IF&lt;/code&gt;, &lt;code&gt;SELECT CASE&lt;/code&gt; and &lt;code&gt;SELECT TYPE&lt;/code&gt; constructs.</source>
          <target state="translated">&lt;code&gt;EXIT&lt;/code&gt; 의 (구조-이름) 문은 이제뿐만 아니라두고 사용 할 수있다 &lt;code&gt;DO&lt;/code&gt; 뿐만 아니라 &lt;code&gt;ASSOCIATE&lt;/code&gt; , &lt;code&gt;BLOCK&lt;/code&gt; , &lt;code&gt;IF&lt;/code&gt; , &lt;code&gt;SELECT CASE&lt;/code&gt; 및 &lt;code&gt;SELECT TYPE&lt;/code&gt; 구조를.</target>
        </trans-unit>
        <trans-unit id="76bb23be6fc1777a8c9f6b4768f70589bbfaa859" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;FLUSH&lt;/code&gt; intrinsic and the Fortran 2003 &lt;code&gt;FLUSH&lt;/code&gt; statement have identical effect: they flush the runtime library&amp;rsquo;s I/O buffer so that the data becomes visible to other processes. This does not guarantee that the data is committed to disk.</source>
          <target state="translated">&lt;code&gt;FLUSH&lt;/code&gt; 의 고유 및 포트란 2003 &lt;code&gt;FLUSH&lt;/code&gt; 의 문은 동일한 효과를 가지고 그들은 런타임 라이브러리의 I를 플러시 / O 버퍼 때문에 데이터가 다른 프로세스에 표시되고있다. 이로 인해 데이터가 디스크에 커밋 된 것은 아닙니다.</target>
        </trans-unit>
        <trans-unit id="4472b4380d9da0c52e01a008ea10625f54d3a97c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;IEEE_EXCEPTIONS&lt;/code&gt;, &lt;code&gt;IEEE_ARITHMETIC&lt;/code&gt;, and &lt;code&gt;IEEE_FEATURES&lt;/code&gt; intrinsic modules provide support for exceptions and IEEE arithmetic, as defined in Fortran 2003 and later standards, and the IEC 60559:1989 standard (&lt;em&gt;Binary floating-point arithmetic for microprocessor systems&lt;/em&gt;). These modules are only provided on the following supported platforms:</source>
          <target state="translated">&lt;code&gt;IEEE_EXCEPTIONS&lt;/code&gt; , &lt;code&gt;IEEE_ARITHMETIC&lt;/code&gt; , 그리고 &lt;code&gt;IEEE_FEATURES&lt;/code&gt; 1989 표준 (: 포트란 2003 이상 표준 및 IEC 60559에 정의 된 고유 모듈, 예외 IEEE 연산에 대한 지원을 제공하는 &lt;em&gt;마이크로 프로세서 시스템을위한 이진 부동 소수점 연산&lt;/em&gt; ). 이 모듈은 다음과 같은 지원되는 플랫폼에서만 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="e2d10dd9bfad9a2504d6cfce17c495c7bd19775c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;INT{8,16,32}&lt;/code&gt; and &lt;code&gt;REAL{32,64,128}&lt;/code&gt; kind type parameters and the array-valued named constants &lt;code&gt;INTEGER_KINDS&lt;/code&gt;, &lt;code&gt;LOGICAL_KINDS&lt;/code&gt;, &lt;code&gt;REAL_KINDS&lt;/code&gt; and &lt;code&gt;CHARACTER_KINDS&lt;/code&gt; of the intrinsic module &lt;code&gt;ISO_FORTRAN_ENV&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;INT{8,16,32}&lt;/code&gt; 및 &lt;code&gt;REAL{32,64,128}&lt;/code&gt; 종류 형 파라미터 배열 값이라는 상수 &lt;code&gt;INTEGER_KINDS&lt;/code&gt; , &lt;code&gt;LOGICAL_KINDS&lt;/code&gt; , &lt;code&gt;REAL_KINDS&lt;/code&gt; 및 &lt;code&gt;CHARACTER_KINDS&lt;/code&gt; 극한 모듈의 &lt;code&gt;ISO_FORTRAN_ENV&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="623d48a4c3d0da47e5e58dcde9bf455eb5ce3ad9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ISO_C_BINDING&lt;/code&gt; module provides the following named constants of type default integer, which can be used as KIND type parameters.</source>
          <target state="translated">&lt;code&gt;ISO_C_BINDING&lt;/code&gt; 모듈은 종류 유형 매개 변수로 사용할 수 있습니다 유형의 기본 정수, 다음과 같은 명명 된 상수를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="f41e5b4de452a6667599104354b103f86d77b54c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ISO_FORTRAN_ENV&lt;/code&gt; module provides the following scalar default-integer named constants:</source>
          <target state="translated">&lt;code&gt;ISO_FORTRAN_ENV&lt;/code&gt; 의 모듈은 다음 스칼라 기본 정수라는 이름의 상수를 제공합니다 :</target>
        </trans-unit>
        <trans-unit id="1f855677a2dceb909d0cee17c462b23e03ca44e3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;KIND&lt;/code&gt; type parameters supported by GNU Fortran for the primitive data types are:</source>
          <target state="translated">&lt;code&gt;KIND&lt;/code&gt; 원시 데이터 유형에 대한 GNU 포트란가 지원하는 형식 매개 변수는 다음과 같습니다</target>
        </trans-unit>
        <trans-unit id="7b5b85b6b306cd2f682e99e50b6f6e728ca4c66b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;KIND&lt;/code&gt; value matches the storage size in bytes, except for &lt;code&gt;COMPLEX&lt;/code&gt; where the storage size is twice as much (or both real and imaginary part are a real value of the given size). It is recommended to use the &lt;a href=&quot;selected_005fchar_005fkind#SELECTED_005fCHAR_005fKIND&quot;&gt;SELECTED_CHAR_KIND&lt;/a&gt;, &lt;a href=&quot;selected_005fint_005fkind#SELECTED_005fINT_005fKIND&quot;&gt;SELECTED_INT_KIND&lt;/a&gt; and &lt;a href=&quot;selected_005freal_005fkind#SELECTED_005fREAL_005fKIND&quot;&gt;SELECTED_REAL_KIND&lt;/a&gt; intrinsics or the &lt;code&gt;INT8&lt;/code&gt;, &lt;code&gt;INT16&lt;/code&gt;, &lt;code&gt;INT32&lt;/code&gt;, &lt;code&gt;INT64&lt;/code&gt;, &lt;code&gt;REAL32&lt;/code&gt;, &lt;code&gt;REAL64&lt;/code&gt;, and &lt;code&gt;REAL128&lt;/code&gt; parameters of the &lt;code&gt;ISO_FORTRAN_ENV&lt;/code&gt; module instead of the concrete values. The available kind parameters can be found in the constant arrays &lt;code&gt;CHARACTER_KINDS&lt;/code&gt;, &lt;code&gt;INTEGER_KINDS&lt;/code&gt;, &lt;code&gt;LOGICAL_KINDS&lt;/code&gt; and &lt;code&gt;REAL_KINDS&lt;/code&gt; in the &lt;a href=&quot;iso_005ffortran_005fenv#ISO_005fFORTRAN_005fENV&quot;&gt;ISO_FORTRAN_ENV&lt;/a&gt; module. For C interoperability, the kind parameters of the &lt;a href=&quot;iso_005fc_005fbinding#ISO_005fC_005fBINDING&quot;&gt;ISO_C_BINDING&lt;/a&gt; module should be used.</source>
          <target state="translated">&lt;code&gt;KIND&lt;/code&gt; 의 값은 바이트 단위로 저장 크기를 일치 제외 &lt;code&gt;COMPLEX&lt;/code&gt; 많은 (또는 모두 실수 및 허수 부분은 주어진 크기의 실제 값이다)로 저장 크기는 배이다. 사용하는 것이 좋습니다 &lt;a href=&quot;selected_005fchar_005fkind#SELECTED_005fCHAR_005fKIND&quot;&gt;SELECTED_CHAR_KIND&lt;/a&gt; , &lt;a href=&quot;selected_005fint_005fkind#SELECTED_005fINT_005fKIND&quot;&gt;SELECTED_INT_KIND&lt;/a&gt; 및 &lt;a href=&quot;selected_005freal_005fkind#SELECTED_005fREAL_005fKIND&quot;&gt;SELECTED_REAL_KIND&lt;/a&gt; 내장 함수 또는 &lt;code&gt;INT8&lt;/code&gt; , &lt;code&gt;INT16&lt;/code&gt; , &lt;code&gt;INT32&lt;/code&gt; , &lt;code&gt;INT64&lt;/code&gt; , &lt;code&gt;REAL32&lt;/code&gt; , &lt;code&gt;REAL64&lt;/code&gt; 및 &lt;code&gt;REAL128&lt;/code&gt; 의 의 매개 변수 &lt;code&gt;ISO_FORTRAN_ENV&lt;/code&gt; 의 대신 콘크리트 값의 모듈을. 사용 가능한 종류 매개 변수는 상수 배열 &lt;code&gt;CHARACTER_KINDS&lt;/code&gt; 에서 찾을 수 있습니다., &lt;code&gt;INTEGER_KINDS&lt;/code&gt; , &lt;code&gt;LOGICAL_KINDS&lt;/code&gt; 및 &lt;code&gt;REAL_KINDS&lt;/code&gt; 에 &lt;a href=&quot;iso_005ffortran_005fenv#ISO_005fFORTRAN_005fENV&quot;&gt;ISO_FORTRAN_ENV 용&lt;/a&gt; 모듈. C 상호 운용성을 위해 &lt;a href=&quot;iso_005fc_005fbinding#ISO_005fC_005fBINDING&quot;&gt;ISO_C_BINDING&lt;/a&gt; 모듈 의 종류 매개 변수를 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="c14960744dc39f2917ab47918b56e09549fa09ae" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;OPEN&lt;/code&gt; statement now supports the &lt;code&gt;NEWUNIT=&lt;/code&gt; option, which returns a unique file unit, thus preventing inadvertent use of the same unit in different parts of the program.</source>
          <target state="translated">&lt;code&gt;OPEN&lt;/code&gt; 문은 이제 지원 &lt;code&gt;NEWUNIT=&lt;/code&gt; 따라서 프로그램의 다른 부분에 동일한 단위의 부주의 한 사용을 방지 고유 한 파일 단위를 반환 옵션을.</target>
        </trans-unit>
        <trans-unit id="0484a82fa69d5c454cde2d61223f01650e4258e9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;OPTIONAL&lt;/code&gt; attribute is allowed for dummy arguments of &lt;code&gt;BIND(C) procedures.&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;OPTIONAL&lt;/code&gt; 속성의 더미 인수 허용 &lt;code&gt;BIND(C) procedures.&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="446b2ae73b92f72f1aa6827cb25bb3c4e22eacc8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;OPTIONAL&lt;/code&gt; attribute is now allowed for dummy arguments; an absent argument matches a &lt;code&gt;NULL&lt;/code&gt; pointer.</source>
          <target state="translated">&lt;code&gt;OPTIONAL&lt;/code&gt; 속성은 이제 더미 인수 허용됩니다; 없는 인수는 &lt;code&gt;NULL&lt;/code&gt; 포인터 와 일치합니다 .</target>
        </trans-unit>
        <trans-unit id="130a2a358c87406b9053bdb06b11a394a4f0190a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;PRIVATE&lt;/code&gt; and &lt;code&gt;PUBLIC&lt;/code&gt; attributes may be given individually to derived-type components.</source>
          <target state="translated">&lt;code&gt;PRIVATE&lt;/code&gt; 과 &lt;code&gt;PUBLIC&lt;/code&gt; 속성은 파생 형 구성 요소에 개별적으로 부여 할 수있다.</target>
        </trans-unit>
        <trans-unit id="5d7ae7019ee00782d790b61f71bce853aa5c2eb9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;P_tmpdir&lt;/code&gt; macro if it is defined, otherwise the directory</source>
          <target state="translated">&lt;code&gt;P_tmpdir&lt;/code&gt; 의 이 정의 된 경우 매크로, 그렇지 않으면 디렉토리</target>
        </trans-unit>
        <trans-unit id="99fe1852daa15bf731aa12c7f8980de427d6e9a5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;RANK&lt;/code&gt; intrinsic is supported.</source>
          <target state="translated">&lt;code&gt;RANK&lt;/code&gt; 의 내장 함수는 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="6f8f45b8e26fae1560b822cf9dde4c60cc30bea6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;READONLY&lt;/code&gt; specifier may be given upon opening a unit, and is equivalent to specifying &lt;code&gt;ACTION='READ'&lt;/code&gt;, except that the file may not be deleted on close (i.e. &lt;code&gt;CLOSE&lt;/code&gt; with &lt;code&gt;STATUS=&quot;DELETE&quot;&lt;/code&gt;). The syntax is:</source>
          <target state="translated">&lt;code&gt;READONLY&lt;/code&gt; 지정은 장치를 열 때 주어진 및 지정에 해당 할 수있다 &lt;code&gt;ACTION='READ'&lt;/code&gt; (즉, 파일 닫기에 삭제되지 않을 것을 제외하고는, &lt;code&gt;CLOSE&lt;/code&gt; 으로 &lt;code&gt;STATUS=&quot;DELETE&quot;&lt;/code&gt; ). 구문은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="6d70d8ed9058b9888c753685590b471ef3b12dcd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SHARE&lt;/code&gt; specifier allows system-level locking on a unit upon opening it for controlled access from multiple processes/threads. The &lt;code&gt;SHARE&lt;/code&gt; specifier has several forms:</source>
          <target state="translated">&lt;code&gt;SHARE&lt;/code&gt; 의 지정은 여러 프로세스 / 스레드로부터 액세스 제어를 열 때 단위의 시스템 레벨 잠금을 허용한다. &lt;code&gt;SHARE&lt;/code&gt; 의 지정은 여러 가지 형태가 있습니다 :</target>
        </trans-unit>
        <trans-unit id="90d6590bae02fc5b90b294ff7aa4b4bc9def5ef5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SHORT&lt;/code&gt; intrinsic is equivalent to &lt;code&gt;INT2&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;SHORT&lt;/code&gt; 내장 함수는 동일합니다 &lt;code&gt;INT2&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="96dc890ec2c865a859ecac209ee0e6d122506a4e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SIGNAL&lt;/code&gt; function returns the value returned by &lt;code&gt;signal(2)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;SIGNAL&lt;/code&gt; 의 함수에 의해 리턴 된 값이 반환 &lt;code&gt;signal(2)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c29c229dedf88da4f005066da51eaa763b4829a5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;STOP&lt;/code&gt; and the new &lt;code&gt;ERROR STOP&lt;/code&gt; statements now support all constant expressions. Both show the signals which were signaling at termination.</source>
          <target state="translated">&lt;code&gt;STOP&lt;/code&gt; 새로운 &lt;code&gt;ERROR STOP&lt;/code&gt; 문은 이제 모든 상수 식을 지원합니다. 둘 다 종료시 신호를 보내는 신호를 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="fb32f1cbbaf47293cdfbc55ad1c740d0690ed614" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;g0&lt;/code&gt; format descriptor and unlimited format items.</source>
          <target state="translated">&lt;code&gt;g0&lt;/code&gt; 형식 기술자 및 무제한 형식 항목.</target>
        </trans-unit>
        <trans-unit id="33892e073ac4756ea4fbabe940f91a33cfef0b30" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;gfortran&lt;/code&gt; command itself, which also might be installed as the system&amp;rsquo;s &lt;code&gt;f95&lt;/code&gt; command. &lt;code&gt;gfortran&lt;/code&gt; is just another driver program, but specifically for the Fortran compiler only. The difference with &lt;code&gt;gcc&lt;/code&gt; is that &lt;code&gt;gfortran&lt;/code&gt; will automatically link the correct libraries to your program.</source>
          <target state="translated">&lt;code&gt;gfortran&lt;/code&gt; 또한 시스템으로 설치 될 수있는 명령 자체 &lt;code&gt;f95&lt;/code&gt; 명령. &lt;code&gt;gfortran&lt;/code&gt; 은 또 다른 드라이버 프로그램이지만 특히 Fortran 컴파일러 전용입니다. &lt;code&gt;gcc&lt;/code&gt; 와의 차이점 은 &lt;code&gt;gfortran&lt;/code&gt; 이 자동으로 올바른 라이브러리를 프로그램에 연결 한다는 것입니다.</target>
        </trans-unit>
        <trans-unit id="48bdc9dfb548241d9dbdeb1a94f5e15866dfda82" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;gfortran&lt;/code&gt; command supports all the options supported by the &lt;code&gt;gcc&lt;/code&gt; command. Only options specific to GNU Fortran are documented here.</source>
          <target state="translated">&lt;code&gt;gfortran&lt;/code&gt; 명령을 지원하는 모든 옵션을 지원하는 &lt;code&gt;gcc&lt;/code&gt; 명령을 사용합니다. 여기에는 GNU Fortran과 관련된 옵션 만 설명되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="90b01ed347cee40ea87ddd6df74acb866e67c65d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;gfortran&lt;/code&gt; compiler currently does not make use of any environment variables to control its operation above and beyond those that affect the operation of &lt;code&gt;gcc&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;gfortran&lt;/code&gt; 컴파일러는 현재 위의 작동에 영향을주는 이상 동작을 제어하는 환경 변수를 사용하지 않는 &lt;code&gt;gcc&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2dd4bb303202ec15ee6f4d5a0b61b1f1bd854722" translate="yes" xml:space="preserve">
          <source>The &lt;var&gt;opr_flags&lt;/var&gt; denote the following; the values are bitwise ored. &lt;code&gt;GFC_CAF_BYREF&lt;/code&gt; (1) if the result should be returned by reference; &lt;code&gt;GFC_CAF_HIDDENLEN&lt;/code&gt; (2) whether the result and argument string lengths shall be specified as hidden arguments; &lt;code&gt;GFC_CAF_ARG_VALUE&lt;/code&gt; (4) whether the arguments shall be passed by value, &lt;code&gt;GFC_CAF_ARG_DESC&lt;/code&gt; (8) whether the arguments shall be passed by descriptor.</source>
          <target state="translated">&lt;var&gt;opr_flags&lt;/var&gt; 는 다음을 표시; 값은 비트 단위입니다. &lt;code&gt;GFC_CAF_BYREF&lt;/code&gt; (1) 결과가 참조로 반환되어야하는 경우; &lt;code&gt;GFC_CAF_HIDDENLEN&lt;/code&gt; (2) 결과 및 인수 문자열 길이가 숨겨진 인수로 지정되는지 여부; &lt;code&gt;GFC_CAF_ARG_VALUE&lt;/code&gt; (4) 인수가 값으로 전달되는지 여부, &lt;code&gt;GFC_CAF_ARG_DESC&lt;/code&gt; (8) 인수가 설명자에 의해 전달되는지 여부</target>
        </trans-unit>
        <trans-unit id="b9506e81a5231697b8ef5d703abb9251b59fa068" translate="yes" xml:space="preserve">
          <source>The Fortran 95 standard specifies in Part 2 (ISO/IEC 1539-2:2000) varying length character strings. While GNU Fortran currently does not support such strings directly, there exist two Fortran implementations for them, which work with GNU Fortran. They can be found at &lt;a href=&quot;http://www.fortran.com/iso_varying_string.f95&quot;&gt;http://www.fortran.com/iso_varying_string.f95&lt;/a&gt; and at &lt;a href=&quot;ftp://ftp.nag.co.uk/sc22wg5/ISO_VARYING_STRING/&quot;&gt;ftp://ftp.nag.co.uk/sc22wg5/ISO_VARYING_STRING/&lt;/a&gt;.</source>
          <target state="translated">Fortran 95 표준은 Part 2 (ISO / IEC 1539-2 : 2000) 가변 길이 문자열을 지정합니다. GNU Fortran은 현재 이러한 문자열을 직접 지원하지 않지만 GNU Fortran과 함께 작동하는 Fortran 구현에는 두 가지가 있습니다. &lt;a href=&quot;http://www.fortran.com/iso_varying_string.f95&quot;&gt;http://www.fortran.com/iso_varying_string.f95&lt;/a&gt; 및 &lt;a href=&quot;ftp://ftp.nag.co.uk/sc22wg5/ISO_VARYING_STRING/&quot;&gt;ftp://ftp.nag.co.uk/sc22wg5/ISO_VARYING_STRING/&lt;/a&gt; 에서 찾을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="009794e423653684d6efce277fa7832d799ddf47" translate="yes" xml:space="preserve">
          <source>The Fortran compiler itself, (&lt;code&gt;f951&lt;/code&gt;). This is the GNU Fortran parser and code generator, linked to and interfaced with the GCC backend library. &lt;code&gt;f951&lt;/code&gt; &amp;ldquo;translates&amp;rdquo; the source code to assembler code. You would typically not use this program directly; instead, the &lt;code&gt;gcc&lt;/code&gt; or &lt;code&gt;gfortran&lt;/code&gt; driver programs will call it for you.</source>
          <target state="translated">포트란 컴파일러 자체 ( &lt;code&gt;f951&lt;/code&gt; ) GCC 백엔드 라이브러리에 연결되고 인터페이스 된 GNU Fortran 파서 및 코드 생성기입니다. &lt;code&gt;f951&lt;/code&gt; 은 소스 코드를 어셈블러 코드로 &quot;번역&quot;합니다. 일반적으로이 프로그램을 직접 사용하지 않습니다. 대신 &lt;code&gt;gcc&lt;/code&gt; 또는 &lt;code&gt;gfortran&lt;/code&gt; 드라이버 프로그램이이를 호출합니다.</target>
        </trans-unit>
        <trans-unit id="ec6dfd15fd670e41586b27bbfd4703af2a1b6760" translate="yes" xml:space="preserve">
          <source>The Fortran preprocessor</source>
          <target state="translated">포트란 전 처리기</target>
        </trans-unit>
        <trans-unit id="ad3d4fe55137b8c62beb83fbb82a02828095a6c8" translate="yes" xml:space="preserve">
          <source>The Fortran standard describes how a conforming program shall behave; however, the exact implementation is not standardized. In order to allow the user to choose specific implementation details, compiler directives can be used to set attributes of variables and procedures which are not part of the standard. Whether a given attribute is supported and its exact effects depend on both the operating system and on the processor; see &lt;a href=&quot;http://gcc.gnu.org/onlinedocs/gcc/index.html#Top&quot;&gt;C Extensions&lt;/a&gt; in Using the GNU Compiler Collection (GCC) for details.</source>
          <target state="translated">포트란 표준은 적합한 프로그램의 작동 방식을 설명합니다. 그러나 정확한 구현은 표준화되지 않았습니다. 사용자가 특정 구현 세부 사항을 선택할 수 있도록하기 위해 컴파일러 지시문을 사용하여 표준의 일부가 아닌 변수 및 프로 시저의 속성을 설정할 수 있습니다. 주어진 속성이 지원되는지와 그 정확한 효과는 운영 체제와 프로세서에 따라 다릅니다. 자세한 내용 은 GNU 컴파일러 모음 (GCC) 사용의 &lt;a href=&quot;http://gcc.gnu.org/onlinedocs/gcc/index.html#Top&quot;&gt;C 확장&lt;/a&gt; 을 참조 하십시오.</target>
        </trans-unit>
        <trans-unit id="f942ce9e5f69d0a4e5d8d37a5af7e78fd8456694" translate="yes" xml:space="preserve">
          <source>The Fortran standard does not specify how variables of &lt;code&gt;LOGICAL&lt;/code&gt; type are represented, beyond requiring that &lt;code&gt;LOGICAL&lt;/code&gt; variables of default kind have the same storage size as default &lt;code&gt;INTEGER&lt;/code&gt; and &lt;code&gt;REAL&lt;/code&gt; variables. The GNU Fortran internal representation is as follows.</source>
          <target state="translated">Fortran 표준은 기본 유형의 &lt;code&gt;LOGICAL&lt;/code&gt; 변수가 기본 &lt;code&gt;INTEGER&lt;/code&gt; 및 &lt;code&gt;REAL&lt;/code&gt; 변수 와 동일한 스토리지 크기를 갖도록 요구하는 것 외에 &lt;code&gt;LOGICAL&lt;/code&gt; 유형의 변수 가 표시되는 방법을 지정하지 않습니다 . GNU 포트란 내부 표현은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="343e4104efb344dcbb7395ba37595b3f6eebc6c3" translate="yes" xml:space="preserve">
          <source>The Fortran standard says that if an &lt;code&gt;OPEN&lt;/code&gt; statement is executed without an explicit &lt;code&gt;ACTION=&lt;/code&gt; specifier, the default value is processor dependent. GNU Fortran behaves as follows:</source>
          <target state="translated">Fortran 표준에 따르면 명시적인 &lt;code&gt;ACTION=&lt;/code&gt; 지정자 없이 &lt;code&gt;OPEN&lt;/code&gt; 문을 실행 하면 기본값은 프로세서에 따라 다릅니다. GNU 포트란은 다음과 같이 동작합니다 :</target>
        </trans-unit>
        <trans-unit id="3468ddae9c32c6132d7433792f69e8085de61ab0" translate="yes" xml:space="preserve">
          <source>The Fortran standard specifies the intrinsic subroutines &lt;code&gt;RANDOM_SEED&lt;/code&gt; to initialize the pseudo-random number generator and &lt;code&gt;RANDOM_NUMBER&lt;/code&gt; to generate pseudo-random numbers. These subroutines should be used in new codes.</source>
          <target state="translated">포트란 표준 은 의사 난수 생성기를 초기화하기 위해 내장 서브 루틴 &lt;code&gt;RANDOM_SEED&lt;/code&gt; 를 지정하고 의사 난수 를 생성하기 위해 &lt;code&gt;RANDOM_NUMBER&lt;/code&gt; 를 지정합니다. 이 서브 루틴은 새 코드에서 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="ed2098b9ade0e09e6d19a1cfed3d9877a4a07f3e" translate="yes" xml:space="preserve">
          <source>The GNU Fortran Compiler</source>
          <target state="translated">GNU 포트란 컴파일러</target>
        </trans-unit>
        <trans-unit id="a86e23567bee92f7afe6a3e8f22674d854ff4fc7" translate="yes" xml:space="preserve">
          <source>The GNU Fortran compiler consists of several components:</source>
          <target state="translated">GNU Fortran 컴파일러는 여러 구성 요소로 구성됩니다.</target>
        </trans-unit>
        <trans-unit id="b6e0258122355889b39a591c1a0665968276e2d2" translate="yes" xml:space="preserve">
          <source>The GNU Fortran compiler front end was designed initially as a free replacement for, or alternative to, the Unix &lt;code&gt;f95&lt;/code&gt; command; &lt;code&gt;gfortran&lt;/code&gt; is the command you will use to invoke the compiler.</source>
          <target state="translated">GNU Fortran 컴파일러 프론트 엔드는 초기에 Unix &lt;code&gt;f95&lt;/code&gt; 명령을 대체하거나 무료로 설계되었습니다 . &lt;code&gt;gfortran&lt;/code&gt; 은 컴파일러를 호출하는 데 사용할 명령입니다.</target>
        </trans-unit>
        <trans-unit id="b5aafb173dca7bc2d8d896b9d8e7d39d4704948a" translate="yes" xml:space="preserve">
          <source>The GNU Fortran compiler implements ISO/IEC 1539:1997 (Fortran 95). As such, it can also compile essentially all standard-compliant Fortran 90 and Fortran 77 programs. It also supports the ISO/IEC TR-15581 enhancements to allocatable arrays.</source>
          <target state="translated">GNU Fortran 컴파일러는 ISO / IEC 1539 : 1997 (Fortran 95)을 구현합니다. 따라서 기본적으로 모든 표준 호환 Fortran 90 및 Fortran 77 프로그램을 컴파일 할 수도 있습니다. 또한 할당 가능한 어레이에 대한 ISO / IEC TR-15581 개선 사항을 지원합니다.</target>
        </trans-unit>
        <trans-unit id="8c88254eafa29d9db6b67efa85623636d35bd630" translate="yes" xml:space="preserve">
          <source>The GNU Fortran compiler is able to compile nearly all standard-compliant Fortran 95, Fortran 90, and Fortran 77 programs, including a number of standard and non-standard extensions, and can be used on real-world programs. In particular, the supported extensions include OpenMP, Cray-style pointers, some old vendor extensions, and several Fortran 2003 and Fortran 2008 features, including TR 15581. However, it is still under development and has a few remaining rough edges. There also is initial support for OpenACC. Note that this is an experimental feature, incomplete, and subject to change in future versions of GCC. See &lt;a href=&quot;https://gcc.gnu.org/wiki/OpenACC&quot;&gt;https://gcc.gnu.org/wiki/OpenACC&lt;/a&gt; for more information.</source>
          <target state="translated">GNU Fortran 컴파일러는 여러 표준 및 비표준 확장을 포함하여 거의 모든 표준 호환 Fortran 95, Fortran 90 및 Fortran 77 프로그램을 컴파일 할 수 있으며 실제 프로그램에서 사용할 수 있습니다. 특히 지원되는 확장 기능에는 OpenMP, Cray 스타일 포인터, 일부 기존 공급 업체 확장 기능 및 TR 15581을 포함한 여러 Fortran 2003 및 Fortran 2008 기능이 포함됩니다. 그러나 아직 개발 중이며 아직까지 남아 있지 않습니다. OpenACC에 대한 초기 지원도 있습니다. 이는 실험적인 기능이며 불완전하며 향후 GCC 버전에서 변경 될 수 있습니다. 자세한 내용은 &lt;a href=&quot;https://gcc.gnu.org/wiki/OpenACC&quot;&gt;https://gcc.gnu.org/wiki/OpenACC&lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="e4c17b1581b31031502b23bda06531c79972425c" translate="yes" xml:space="preserve">
          <source>The GNU Fortran compiler is the successor to &lt;code&gt;g77&lt;/code&gt;, the Fortran 77 front end included in GCC prior to version 4. It is an entirely new program that has been designed to provide Fortran 95 support and extensibility for future Fortran language standards, as well as providing backwards compatibility for Fortran 77 and nearly all of the GNU language extensions supported by &lt;code&gt;g77&lt;/code&gt;.</source>
          <target state="translated">GNU Fortran 컴파일러는 버전 4 이전에 GCC에 포함 된 Fortran 77 프론트 엔드 인 &lt;code&gt;g77&lt;/code&gt; 의 후속 버전으로, 향후 Fortran 언어 표준에 대한 Fortran 95 지원 및 확장 성을 제공하고 제공하는 완전히 새로운 프로그램입니다. Fortran 77과 &lt;code&gt;g77&lt;/code&gt; 에서 지원하는 거의 모든 GNU 언어 확장에 대한 하위 호환성 .</target>
        </trans-unit>
        <trans-unit id="cac65f53cd2c43cff089a4bf4d8a82ed91c22b77" translate="yes" xml:space="preserve">
          <source>The GNU Fortran compiler supports several of the new features of Fortran 2008; the &lt;a href=&quot;https://gcc.gnu.org/wiki/Fortran2008Status&quot;&gt;wiki&lt;/a&gt; has some information about the current Fortran 2008 implementation status. In particular, the following is implemented.</source>
          <target state="translated">GNU Fortran 컴파일러는 Fortran 2008의 몇 가지 새로운 기능을 지원합니다. &lt;a href=&quot;https://gcc.gnu.org/wiki/Fortran2008Status&quot;&gt;위키는&lt;/a&gt; 현재 포트란 2008 구현의 상태에 대한 정보를 가지고있다. 특히, 다음이 구현된다.</target>
        </trans-unit>
        <trans-unit id="f16c4381d75e9e903798c6d0750bfce9473cb30f" translate="yes" xml:space="preserve">
          <source>The GNU Fortran compiler supports the Fortran 77, 90 and 95 standards completely, parts of the Fortran 2003 and Fortran 2008 standards, and several vendor extensions. The development goal is to provide the following features:</source>
          <target state="translated">GNU Fortran 컴파일러는 Fortran 77, 90 및 95 표준, Fortran 2003 및 Fortran 2008 표준의 일부 및 여러 공급 업체 확장을 완벽하게 지원합니다. 개발 목표는 다음 기능을 제공하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="cf8aa17bd72d2642db35eba29c9d44052f01912b" translate="yes" xml:space="preserve">
          <source>The GNU Fortran runtime library uses various C library functions that depend on the locale, such as &lt;code&gt;strtod&lt;/code&gt; and &lt;code&gt;snprintf&lt;/code&gt;. In order to work correctly in locale-aware programs that set the locale using &lt;code&gt;setlocale&lt;/code&gt;, the locale is reset to the default &amp;ldquo;C&amp;rdquo; locale while executing a formatted &lt;code&gt;READ&lt;/code&gt; or &lt;code&gt;WRITE&lt;/code&gt; statement. On targets supporting the POSIX 2008 per-thread locale functions (e.g. &lt;code&gt;newlocale&lt;/code&gt;, &lt;code&gt;uselocale&lt;/code&gt;, &lt;code&gt;freelocale&lt;/code&gt;), these are used and thus the global locale set using &lt;code&gt;setlocale&lt;/code&gt; or the per-thread locales in other threads are not affected. However, on targets lacking this functionality, the global LC_NUMERIC locale is set to &amp;ldquo;C&amp;rdquo; during the formatted I/O. Thus, on such targets it&amp;rsquo;s not safe to call &lt;code&gt;setlocale&lt;/code&gt; concurrently from another thread while a Fortran formatted I/O operation is in progress. Also, other threads doing something dependent on the LC_NUMERIC locale might not work correctly if a formatted I/O operation is in progress in another thread.</source>
          <target state="translated">GNU Fortran 런타임 라이브러리는 &lt;code&gt;strtod&lt;/code&gt; 및 &lt;code&gt;snprintf&lt;/code&gt; 와 같이 로케일에 따라 다양한 C 라이브러리 함수를 사용합니다 . &lt;code&gt;setlocale&lt;/code&gt; 을 사용하여 로케일을 설정하는 로케일 인식 프로그램에서 올바르게 작동하려면 형식화 된 &lt;code&gt;READ&lt;/code&gt; 또는 &lt;code&gt;WRITE&lt;/code&gt; 문 을 실행하는 동안 로케일이 기본 &quot;C&quot;로케일로 재설정됩니다 . POSIX 2008 스레드 별 로케일 기능 (예 : &lt;code&gt;newlocale&lt;/code&gt; , &lt;code&gt;uselocale&lt;/code&gt; , &lt;code&gt;freelocale&lt;/code&gt; )을 지원하는 대상 에서는이 기능이 사용되므로 &lt;code&gt;setlocale&lt;/code&gt; 을 사용하는 전역 로케일이 설정됩니다.또는 다른 스레드의 스레드 별 로캘은 영향을받지 않습니다. 그러나이 기능이없는 대상에서는 형식화 된 I / O 중에 전역 LC_NUMERIC 로캘이 &quot;C&quot;로 설정됩니다. 따라서 이러한 대상에서는 Fortran 형식의 I / O 작업이 진행되는 동안 다른 스레드에서 &lt;code&gt;setlocale&lt;/code&gt; 을 동시에 호출하는 것이 안전하지 않습니다 . 또한 다른 스레드에서 형식화 된 I / O 작업이 진행중인 경우 LC_NUMERIC 로케일에 종속 된 작업을 수행하는 다른 스레드가 올바르게 작동하지 않을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9b35057219d65638d45dfe5a7ce889a9fb76a1fa" translate="yes" xml:space="preserve">
          <source>The GNU Fortran runtime library, (&lt;code&gt;libgfortran&lt;/code&gt;), supports being called concurrently from multiple threads with the following exceptions.</source>
          <target state="translated">GNU Fortran 런타임 라이브러리 ( &lt;code&gt;libgfortran&lt;/code&gt; )는 다음 예외를 제외하고 여러 스레드에서 동시에 호출되는 것을 지원합니다.</target>
        </trans-unit>
        <trans-unit id="751255d6b7fed456e722786ee0892905efe0f7ec" translate="yes" xml:space="preserve">
          <source>The ID of the remote image; must be a positive number.</source>
          <target state="translated">원격 이미지의 ID입니다. 양수 여야합니다.</target>
        </trans-unit>
        <trans-unit id="f72c6d4f312bbaa7e04aa9df26448b1968119bc2" translate="yes" xml:space="preserve">
          <source>The Network File System (NFS) implements a relaxed consistency model called open-to-close consistency. Closing a file forces dirty data and metadata to be flushed to the server, and opening a file forces the client to contact the server in order to revalidate cached data. &lt;code&gt;fsync&lt;/code&gt; will also force a flush of dirty data and metadata to the server. Similar to &lt;code&gt;open&lt;/code&gt; and &lt;code&gt;close&lt;/code&gt;, acquiring and releasing &lt;code&gt;fcntl&lt;/code&gt; file locks, if the server supports them, will also force cache validation and flushing dirty data and metadata.</source>
          <target state="translated">NFS (Network File System)는 개방형 일관성이라는 완화 된 일관성 모델을 구현합니다. 파일을 닫으면 더티 데이터와 메타 데이터가 서버로 플러시되고 파일을 열면 캐시 된 데이터를 다시 확인하기 위해 클라이언트가 서버에 접속하게됩니다. &lt;code&gt;fsync&lt;/code&gt; 는 서버에 더티 데이터 및 메타 데이터를 강제로 플러시합니다. &lt;code&gt;fcntl&lt;/code&gt; 파일 잠금을 획득 및 해제 하는 서버가 파일을 지원하는 경우 &lt;code&gt;open&lt;/code&gt; 및 &lt;code&gt;close&lt;/code&gt; 와 마찬가지로 캐시 유효성 검사를 강제 실행하고 더티 데이터 및 메타 데이터를 플러시합니다.</target>
        </trans-unit>
        <trans-unit id="bd6dc7792ca0a2cfc823d88ecf5b9feaea4152d0" translate="yes" xml:space="preserve">
          <source>The OpenACC Fortran runtime library routines are provided both in a form of a Fortran 90 module named &lt;code&gt;openacc&lt;/code&gt; and in a form of a Fortran &lt;code&gt;include&lt;/code&gt; file named</source>
          <target state="translated">OpenACC Fortran 런타임 라이브러리 루틴은 &lt;code&gt;openacc&lt;/code&gt; 라는 Fortran 90 모듈 형식과 Fortran &lt;code&gt;include&lt;/code&gt; 파일 형식으로 제공 됩니다.</target>
        </trans-unit>
        <trans-unit id="2c37c4afd6e44605ff1420c752a933c0483e4d7c" translate="yes" xml:space="preserve">
          <source>The OpenACC Fortran runtime library routines are provided both in a form of a Fortran 90 module, named &lt;code&gt;OPENACC&lt;/code&gt;, and in form of a Fortran &lt;code&gt;include&lt;/code&gt; file named</source>
          <target state="translated">OpenACC Fortran 런타임 라이브러리 루틴은 &lt;code&gt;OPENACC&lt;/code&gt; 라는 Fortran 90 모듈 형식과 Fortran &lt;code&gt;include&lt;/code&gt; 파일 형식으로 제공 됩니다.</target>
        </trans-unit>
        <trans-unit id="b162d56706fe657a604a41e81f820948ae0a6787" translate="yes" xml:space="preserve">
          <source>The OpenMP Fortran runtime library routines are provided both in a form of a Fortran 90 module named &lt;code&gt;omp_lib&lt;/code&gt; and in a form of a Fortran &lt;code&gt;include&lt;/code&gt; file named</source>
          <target state="translated">OpenMP Fortran 런타임 라이브러리 루틴은 &lt;code&gt;omp_lib&lt;/code&gt; 라는 Fortran 90 모듈 형식과 Fortran &lt;code&gt;include&lt;/code&gt; 파일 형식으로 제공 됩니다.</target>
        </trans-unit>
        <trans-unit id="13188ccaf005a832d681af76a79fc6feb9c5b704" translate="yes" xml:space="preserve">
          <source>The OpenMP Fortran runtime library routines are provided both in a form of two Fortran 90 modules, named &lt;code&gt;OMP_LIB&lt;/code&gt; and &lt;code&gt;OMP_LIB_KINDS&lt;/code&gt;, and in a form of a Fortran &lt;code&gt;include&lt;/code&gt; file named</source>
          <target state="translated">OpenMP Fortran 런타임 라이브러리 루틴은 &lt;code&gt;OMP_LIB&lt;/code&gt; 및 &lt;code&gt;OMP_LIB_KINDS&lt;/code&gt; 라는 두 개의 포트란 90 모듈 형식과 Fortran &lt;code&gt;include&lt;/code&gt; 파일 형식으로 제공 됩니다.</target>
        </trans-unit>
        <trans-unit id="e0804f408c1c7791959def4cf9173ba8322256c9" translate="yes" xml:space="preserve">
          <source>The Technical Specification ISO/IEC TS 29113:2012 on further interoperability of Fortran with C extends the interoperability support of Fortran 2003 and Fortran 2008. Besides removing some restrictions and constraints, it adds assumed-type (&lt;code&gt;TYPE(*)&lt;/code&gt;) and assumed-rank (&lt;code&gt;dimension&lt;/code&gt;) variables and allows for interoperability of assumed-shape, assumed-rank and deferred-shape arrays, including allocatables and pointers.</source>
          <target state="translated">기술 규격 ISO / IEC TS 29113 : 2012 C와 포트란의 추가 상호 운용성에 그것이 가정 형을 추가, 몇 가지 제한과 제약을 제거 외에도 포트란 2003 및 포트란 2008의 상호 운용성 지원을 확장 ( &lt;code&gt;TYPE(*)&lt;/code&gt; )과 가정 순위 ( &lt;code&gt;dimension&lt;/code&gt; ) 변수를 사용하고 할당 가능한 포인터 및 포인터를 포함하여 가정 된 모양, 가정 된 순위 및 지연된 모양 배열의 상호 운용성을 허용합니다.</target>
        </trans-unit>
        <trans-unit id="0036793a75f2c12bebaeaa6416cd015d29ee8645" translate="yes" xml:space="preserve">
          <source>The Technical Specification adds the following new features, which are supported by GNU Fortran:</source>
          <target state="translated">기술 사양에는 GNU Fortran에서 지원하는 다음과 같은 새로운 기능이 추가되었습니다.</target>
        </trans-unit>
        <trans-unit id="658fb8dc8cd8568fd26b6c7ad3e5834abad14e61" translate="yes" xml:space="preserve">
          <source>The Windows platform supports a relaxed metadata consistency model, where file metadata is written to the directory lazily. This means that, for instance, the &lt;code&gt;dir&lt;/code&gt; command can show a stale size for a file. One can force a directory metadata update by closing the unit, or by calling &lt;code&gt;_commit&lt;/code&gt; on the file descriptor. Note, though, that &lt;code&gt;_commit&lt;/code&gt; will force all dirty data to stable storage, which is often a very slow operation.</source>
          <target state="translated">Windows 플랫폼은 파일 메타 데이터가 느리게 디렉토리에 기록되는 편안한 메타 데이터 일관성 모델을 지원합니다. 예를 들어, &lt;code&gt;dir&lt;/code&gt; 명령은 파일의 오래된 크기를 표시 할 수 있습니다. 장치를 닫거나 파일 설명자에서 &lt;code&gt;_commit&lt;/code&gt; 을 호출하여 디렉토리 메타 데이터를 강제로 업데이트 할 수 있습니다 . 그러나 &lt;code&gt;_commit&lt;/code&gt; 은 모든 더티 데이터를 안정된 스토리지로 강제합니다. 이는 종종 매우 느린 작업입니다.</target>
        </trans-unit>
        <trans-unit id="654a287bf20a139f0b3790d36ea6acf003979f70" translate="yes" xml:space="preserve">
          <source>The argument shall be a scalar or array of the type &lt;code&gt;CHARACTER&lt;/code&gt;.</source>
          <target state="translated">인수는 &lt;code&gt;CHARACTER&lt;/code&gt; 유형의 스칼라 또는 배열이어야합니다 .</target>
        </trans-unit>
        <trans-unit id="c29b12cc20765956b21cc35cd2fc3afd82d07424" translate="yes" xml:space="preserve">
          <source>The argument shall be an &lt;code&gt;ALLOCATABLE&lt;/code&gt; array.</source>
          <target state="translated">인수는 &lt;code&gt;ALLOCATABLE&lt;/code&gt; 배열 이어야합니다 .</target>
        </trans-unit>
        <trans-unit id="c7f0d61951015ae19514ccfd39726f8e0f68e0f0" translate="yes" xml:space="preserve">
          <source>The argument shall be an &lt;code&gt;ALLOCATABLE&lt;/code&gt; scalar.</source>
          <target state="translated">인수는 &lt;code&gt;ALLOCATABLE&lt;/code&gt; 스칼라 여야합니다 .</target>
        </trans-unit>
        <trans-unit id="3085d24db139936fd3e707668818fc9cf3f201ee" translate="yes" xml:space="preserve">
          <source>The argument shall be an interoperable data entity.</source>
          <target state="translated">인수는 상호 운용 가능한 데이터 실체이어야한다.</target>
        </trans-unit>
        <trans-unit id="f4cb9d5b25ecf77eeaf5c2c6659792540bbea7d9" translate="yes" xml:space="preserve">
          <source>The argument shall be of any type, rank or shape.</source>
          <target state="translated">논증은 모든 유형, 등급 또는 형태이어야한다.</target>
        </trans-unit>
        <trans-unit id="bf9808a4cb971aadbfb8c22d6409aafb5d1d3ca5" translate="yes" xml:space="preserve">
          <source>The arguments are passed in the following order</source>
          <target state="translated">인수는 다음 순서로 전달됩니다.</target>
        </trans-unit>
        <trans-unit id="902a1c9145148c09875d60b409e8033b912ccc04" translate="yes" xml:space="preserve">
          <source>The arguments in the order in which they appear in the Fortran declaration</source>
          <target state="translated">Fortran 선언에 나타나는 순서대로 인수</target>
        </trans-unit>
        <trans-unit id="d3ab2b963b552f787db38de5520f601ed9cf6b2e" translate="yes" xml:space="preserve">
          <source>The association status of neither &lt;var&gt;POINTER&lt;/var&gt; nor &lt;var&gt;TARGET&lt;/var&gt; shall be undefined.</source>
          <target state="translated">&lt;var&gt;POINTER&lt;/var&gt; 와 &lt;var&gt;TARGET&lt;/var&gt; 의 연결 상태는 정의되어 있지 않습니다.</target>
        </trans-unit>
        <trans-unit id="2d3222e54c956ce12b9063356b76a2bd3d5a43dd" translate="yes" xml:space="preserve">
          <source>The attributes are specified using the syntax</source>
          <target state="translated">속성은 구문을 사용하여 지정됩니다</target>
        </trans-unit>
        <trans-unit id="52153740f05ba1061ad18cf77b4afdee2ee2b1bd" translate="yes" xml:space="preserve">
          <source>The beginning of the resulting array is made up of elements whose &lt;var&gt;MASK&lt;/var&gt; equals &lt;code&gt;TRUE&lt;/code&gt;. Afterwards, positions are filled with elements taken from &lt;var&gt;VECTOR&lt;/var&gt;.</source>
          <target state="translated">결과적인 어레이의 시작은 그 요소로 구성된다 &lt;var&gt;MASK&lt;/var&gt; 동일 &lt;code&gt;TRUE&lt;/code&gt; . 그 후, 위치는 &lt;var&gt;VECTOR&lt;/var&gt; 에서 가져온 요소로 채워집니다 .</target>
        </trans-unit>
        <trans-unit id="f7a5f8fef42522dd71f4166ec2668f5cb21f5dea" translate="yes" xml:space="preserve">
          <source>The behavior of locking may vary with your operating system. On POSIX systems, locking is implemented with &lt;code&gt;fcntl&lt;/code&gt;. Consult your corresponding operating system&amp;rsquo;s manual pages for further details. Locking via &lt;code&gt;SHARE=&lt;/code&gt; is not supported on other systems.</source>
          <target state="translated">잠금 동작은 운영 체제에 따라 다를 수 있습니다. POSIX 시스템에서 잠금은 &lt;code&gt;fcntl&lt;/code&gt; 로 구현됩니다 . 자세한 내용은 해당 운영 체제 설명서 페이지를 참조하십시오. 다른 시스템에서는 &lt;code&gt;SHARE=&lt;/code&gt; 를 통한 잠금 이 지원되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="d9d8015fbee17bbe3e3af5c1d8b5f8bd6cdfc1d2" translate="yes" xml:space="preserve">
          <source>The behavior of the &lt;code&gt;gfortran&lt;/code&gt; can be influenced by environment variables.</source>
          <target state="translated">&lt;code&gt;gfortran&lt;/code&gt; 의 행동은 환경 변수에 의해 영향을받을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d6942940da48df8c19c43e3c5cc2fb7ca79818e0" translate="yes" xml:space="preserve">
          <source>The calling conventions used by &lt;code&gt;g77&lt;/code&gt; (originally implemented in &lt;code&gt;f2c&lt;/code&gt;) require functions that return type default &lt;code&gt;REAL&lt;/code&gt; to actually return the C type &lt;code&gt;double&lt;/code&gt;, and functions that return type &lt;code&gt;COMPLEX&lt;/code&gt; to return the values via an extra argument in the calling sequence that points to where to store the return value. Under the default GNU calling conventions, such functions simply return their results as they would in GNU C&amp;mdash;default &lt;code&gt;REAL&lt;/code&gt; functions return the C type &lt;code&gt;float&lt;/code&gt;, and &lt;code&gt;COMPLEX&lt;/code&gt; functions return the GNU C type &lt;code&gt;complex&lt;/code&gt;. Additionally, this option implies the</source>
          <target state="translated">&lt;code&gt;g77&lt;/code&gt; 에서 사용 된 호출 규칙 (원래 &lt;code&gt;f2c&lt;/code&gt; 에서 구현 됨 )에는 실제로 C 유형 &lt;code&gt;double&lt;/code&gt; 을 리턴하기 위해 기본 &lt;code&gt;REAL&lt;/code&gt; 유형 을 리턴하는 함수와 호출 순서에서 추가 인수를 통해 값을 리턴하기 위해 &lt;code&gt;COMPLEX&lt;/code&gt; 유형 을 리턴하는 함수가 필요 합니다. 반환 값을 저장하십시오. 기본 GNU 호출 규칙에 따라 이러한 함수는 GNU C에서와 같이 결과를 반환합니다. 기본 &lt;code&gt;REAL&lt;/code&gt; 함수는 C 유형 &lt;code&gt;float&lt;/code&gt; 을 반환 하고 &lt;code&gt;COMPLEX&lt;/code&gt; 함수는 GNU C 유형 &lt;code&gt;complex&lt;/code&gt; 를 반환합니다 . 또한이 옵션은</target>
        </trans-unit>
        <trans-unit id="83642ae96d29e2aaae156d9114f7851e07970824" translate="yes" xml:space="preserve">
          <source>The character length and/or coarray token and offset for the first argument which is a &lt;code&gt;CHARACTER&lt;/code&gt; or a nonallocatable coarray dummy argument, followed by the hidden arguments of the next dummy argument of such a type</source>
          <target state="translated">&lt;code&gt;CHARACTER&lt;/code&gt; 또는 할당 할 수없는 coarray dummy 인수 인 첫 번째 인수에 대한 문자 길이 및 / 또는 coarray 토큰 및 오프셋 , 그런 다음 해당 유형의 다음 더미 인수의 숨겨진 인수</target>
        </trans-unit>
        <trans-unit id="c1786395782e5235153efa9f6f8df9676c39c1ed" translate="yes" xml:space="preserve">
          <source>The compiler will also attempt to diagnose cases where the user&amp;rsquo;s program contains a correct usage of the language, but instructs the computer to do something questionable. This kind of diagnostics message is called a &lt;em&gt;warning message&lt;/em&gt;.</source>
          <target state="translated">컴파일러는 또한 사용자 프로그램에 올바른 언어 사용법이 포함 된 경우를 진단하려고 시도하지만 컴퓨터가 의심스러운 일을하도록 지시합니다. 이러한 종류의 진단 메시지를 &lt;em&gt;경고 메시지&lt;/em&gt; 라고 &lt;em&gt;합니다&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="40b2633dc0a0fa6d71335e07988d9d232de17b77" translate="yes" xml:space="preserve">
          <source>The contents of &lt;var&gt;definition&lt;/var&gt; are tokenized and processed as if they appeared during translation phase three in a &lt;code&gt;'#define'&lt;/code&gt; directive. In particular, the definition will be truncated by embedded newline characters.</source>
          <target state="translated">&lt;var&gt;definition&lt;/var&gt; 의 내용은 번역 단계 3에서 &lt;code&gt;'#define'&lt;/code&gt; 지시문 에 나타난 것처럼 토큰 화되고 처리됩니다 . 특히, 정의는 포함 된 개행 문자로 잘립니다.</target>
        </trans-unit>
        <trans-unit id="bb09eb93715088013f1929e082c2a0ff1a73c85b" translate="yes" xml:space="preserve">
          <source>The converted date and time as a string.</source>
          <target state="translated">문자열로 변환 된 날짜 및 시간입니다.</target>
        </trans-unit>
        <trans-unit id="09a7ff67b0be082040277b623a5d7743cf031595" translate="yes" xml:space="preserve">
          <source>The current date and time as a string.</source>
          <target state="translated">문자열로 현재 날짜와 시간입니다.</target>
        </trans-unit>
        <trans-unit id="9a76961f3d4ead31ef02238eeedb1ff048e69f90" translate="yes" xml:space="preserve">
          <source>The day of the month</source>
          <target state="translated">달의 날</target>
        </trans-unit>
        <trans-unit id="be15d8b45854b97b75ca5365a21a53c16c5426b5" translate="yes" xml:space="preserve">
          <source>The default is the current directory.</source>
          <target state="translated">기본값은 현재 디렉토리입니다.</target>
        </trans-unit>
        <trans-unit id="afd88a4ce669a627e8ed2141940577056f3cee4a" translate="yes" xml:space="preserve">
          <source>The default value for &lt;var&gt;n&lt;/var&gt; is 30.</source>
          <target state="translated">&lt;var&gt;n&lt;/var&gt; 의 기본값 은 30입니다.</target>
        </trans-unit>
        <trans-unit id="6081ff4a2f1a98d5994fbdeaaff108054f7c80f2" translate="yes" xml:space="preserve">
          <source>The default value for &lt;var&gt;n&lt;/var&gt; is 30. The &lt;code&gt;-fblas-matmul-limit&lt;/code&gt; can be used to change this value.</source>
          <target state="translated">&lt;var&gt;n&lt;/var&gt; 의 기본값 은 30입니다. &lt;code&gt;-fblas-matmul-limit&lt;/code&gt; 를 사용하여이 값을 변경할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4e0bd620edc6c8f8c11c308674d5d8ebb6bd435d" translate="yes" xml:space="preserve">
          <source>The default value for &lt;var&gt;n&lt;/var&gt; is 32768.</source>
          <target state="translated">&lt;var&gt;n&lt;/var&gt; 의 기본값 은 32768입니다.</target>
        </trans-unit>
        <trans-unit id="de3947a056fb111220388e968e34231ffc300e82" translate="yes" xml:space="preserve">
          <source>The default value for &lt;var&gt;n&lt;/var&gt; is 65535.</source>
          <target state="translated">&lt;var&gt;n&lt;/var&gt; 의 기본값 은 65535입니다.</target>
        </trans-unit>
        <trans-unit id="5e1b7c9b3ca972a313b3f30beeb11b9788881ead" translate="yes" xml:space="preserve">
          <source>The elements in &lt;code&gt;VALUES&lt;/code&gt; are the same as described by &lt;a href=&quot;stat#STAT&quot;&gt;STAT&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;VALUES&lt;/code&gt; 의 요소는 &lt;a href=&quot;stat#STAT&quot;&gt;STAT에서&lt;/a&gt; 설명한 것과 같습니다 .</target>
        </trans-unit>
        <trans-unit id="033c72c0536773e0786f7804d1e733d75b24c826" translate="yes" xml:space="preserve">
          <source>The elements of &lt;var&gt;VALUES&lt;/var&gt; are assigned as follows:</source>
          <target state="translated">&lt;var&gt;VALUES&lt;/var&gt; 의 요소는 다음과 같이 지정됩니다.</target>
        </trans-unit>
        <trans-unit id="7f7c2cef3c3bca696197fa9ee308b75d474d58e8" translate="yes" xml:space="preserve">
          <source>The elements that are obtained and stored in the array &lt;code&gt;VALUES&lt;/code&gt;:</source>
          <target state="translated">배열 &lt;code&gt;VALUES&lt;/code&gt; 에서 얻어지고 저장된 요소 :</target>
        </trans-unit>
        <trans-unit id="9bc395b0e32b76c23e65159bbc447af7185cbf8f" translate="yes" xml:space="preserve">
          <source>The enumeration of the &lt;code&gt;KIND&lt;/code&gt; type parameter is processor defined in the Fortran 95 standard. GNU Fortran defines the default integer type and default real type by &lt;code&gt;INTEGER(KIND=4)&lt;/code&gt; and &lt;code&gt;REAL(KIND=4)&lt;/code&gt;, respectively. The standard mandates that both data types shall have another kind, which have more precision. On typical target architectures supported by &lt;code&gt;gfortran&lt;/code&gt;, this kind type parameter is &lt;code&gt;KIND=8&lt;/code&gt;. Hence, &lt;code&gt;REAL(KIND=8)&lt;/code&gt; and &lt;code&gt;DOUBLE PRECISION&lt;/code&gt; are equivalent. In the description of generic intrinsic procedures, the kind type parameter will be specified by &lt;code&gt;KIND=*&lt;/code&gt;, and in the description of specific names for an intrinsic procedure the kind type parameter will be explicitly given (e.g., &lt;code&gt;REAL(KIND=4)&lt;/code&gt; or &lt;code&gt;REAL(KIND=8)&lt;/code&gt;). Finally, for brevity the optional &lt;code&gt;KIND=&lt;/code&gt; syntax will be omitted.</source>
          <target state="translated">&lt;code&gt;KIND&lt;/code&gt; 유형 매개 변수 의 열거 는 Fortran 95 표준에 정의 된 프로세서입니다. GNU Fortran은 기본 정수 유형과 기본 실수 유형을 각각 &lt;code&gt;INTEGER(KIND=4)&lt;/code&gt; 및 &lt;code&gt;REAL(KIND=4)&lt;/code&gt; 로 정의합니다. 표준은 두 데이터 유형이 더 정밀한 다른 종류를 갖도록 규정하고 있습니다. &lt;code&gt;gfortran&lt;/code&gt; 이 지원하는 일반적인 대상 아키텍처 에서이 종류 유형 매개 변수는 &lt;code&gt;KIND=8&lt;/code&gt; 입니다. 따라서 &lt;code&gt;REAL(KIND=8)&lt;/code&gt; 과 &lt;code&gt;DOUBLE PRECISION&lt;/code&gt; 은 동일합니다. 일반 내장 프로 시저에 대한 설명에서 종류 유형 매개 변수는 &lt;code&gt;KIND=*&lt;/code&gt; 로 지정됩니다.고유 프로 시저의 특정 이름에 대한 설명에서 종류 유형 매개 변수가 명시 적으로 지정됩니다 (예 : &lt;code&gt;REAL(KIND=4)&lt;/code&gt; 또는 &lt;code&gt;REAL(KIND=8)&lt;/code&gt; ). 마지막으로, 간결성을 위해 선택적 &lt;code&gt;KIND=&lt;/code&gt; 구문은 생략됩니다.</target>
        </trans-unit>
        <trans-unit id="5997a422a269154f4da86699d6d5627f1620205a" translate="yes" xml:space="preserve">
          <source>The environment variable &lt;code&gt;TMPDIR&lt;/code&gt;, if it exists.</source>
          <target state="translated">존재하는 경우 환경 변수 &lt;code&gt;TMPDIR&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6ad5592ca62c9e4dbab81bd5c8cdab68c384f08c" translate="yes" xml:space="preserve">
          <source>The environment variable named &lt;code&gt;GFORTRAN_UNBUFFERED_PRECONNECTED&lt;/code&gt; controls whether I/O on a preconnected unit (i.e. STDOUT or STDERR) is unbuffered. If the first letter is &amp;lsquo;</source>
          <target state="translated">&lt;code&gt;GFORTRAN_UNBUFFERED_PRECONNECTED&lt;/code&gt; 라는 환경 변수 는 사전 연결된 장치 (예 : STDOUT 또는 STDERR)의 I / O가 버퍼되지 않는지를 제어합니다. 첫 글자가 '</target>
        </trans-unit>
        <trans-unit id="28076ae533efc7e87e76a39c013c678e2ef8fe89" translate="yes" xml:space="preserve">
          <source>The example will print &lt;code&gt;.TRUE.&lt;/code&gt; unless you are using a platform where default &lt;code&gt;REAL&lt;/code&gt; variables are unusually padded.</source>
          <target state="translated">이 예는 &lt;code&gt;.TRUE.&lt;/code&gt; 를 인쇄 합니다. 기본 &lt;code&gt;REAL&lt;/code&gt; 변수가 비정상적으로 채워지는 플랫폼을 사용하지 않는 한 .</target>
        </trans-unit>
        <trans-unit id="dde3ffa6e0a5937d5242afca72235900ea87f1a5" translate="yes" xml:space="preserve">
          <source>The first three exceptions (&amp;lsquo;</source>
          <target state="translated">처음 세 가지 예외 ( '</target>
        </trans-unit>
        <trans-unit id="c8087b1d24c24061a4385b6875129e6230ef3371" translate="yes" xml:space="preserve">
          <source>The following bit intrinsics: &lt;code&gt;LEADZ&lt;/code&gt; and &lt;code&gt;TRAILZ&lt;/code&gt; for counting the number of leading and trailing zero bits, &lt;code&gt;POPCNT&lt;/code&gt; and &lt;code&gt;POPPAR&lt;/code&gt; for counting the number of one bits and returning the parity; &lt;code&gt;BGE&lt;/code&gt;, &lt;code&gt;BGT&lt;/code&gt;, &lt;code&gt;BLE&lt;/code&gt;, and &lt;code&gt;BLT&lt;/code&gt; for bitwise comparisons; &lt;code&gt;DSHIFTL&lt;/code&gt; and &lt;code&gt;DSHIFTR&lt;/code&gt; for combined left and right shifts, &lt;code&gt;MASKL&lt;/code&gt; and &lt;code&gt;MASKR&lt;/code&gt; for simple left and right justified masks, &lt;code&gt;MERGE_BITS&lt;/code&gt; for a bitwise merge using a mask, &lt;code&gt;SHIFTA&lt;/code&gt;, &lt;code&gt;SHIFTL&lt;/code&gt; and &lt;code&gt;SHIFTR&lt;/code&gt; for shift operations, and the transformational bit intrinsics &lt;code&gt;IALL&lt;/code&gt;, &lt;code&gt;IANY&lt;/code&gt; and &lt;code&gt;IPARITY&lt;/code&gt;.</source>
          <target state="translated">다음의 비트 내장 함수 : &lt;code&gt;LEADZ&lt;/code&gt; 및 &lt;code&gt;TRAILZ&lt;/code&gt; : 선행 및 후행 0 비트 수를 계산하기위한 &lt;code&gt;POPCNT&lt;/code&gt; 및 &lt;code&gt;POPPAR&lt;/code&gt; , 1 비트 수를 계산하고 패리티를 반환하기 위해; 비트 비교를위한 &lt;code&gt;BGE&lt;/code&gt; , &lt;code&gt;BGT&lt;/code&gt; , &lt;code&gt;BLE&lt;/code&gt; 및 &lt;code&gt;BLT&lt;/code&gt; ; &lt;code&gt;DSHIFTL&lt;/code&gt; 및 &lt;code&gt;DSHIFTR&lt;/code&gt; 에 대한 좌우 이동, 결합 &lt;code&gt;MASKL&lt;/code&gt; 및 &lt;code&gt;MASKR&lt;/code&gt; 간단한 왼쪽과 오른쪽 정당화 마스크를 들면, &lt;code&gt;MERGE_BITS&lt;/code&gt; 비트 단위 병합 마스크를 사용하여, &lt;code&gt;SHIFTA&lt;/code&gt; , &lt;code&gt;SHIFTL&lt;/code&gt; 및 &lt;code&gt;SHIFTR&lt;/code&gt; 시프트 연산 및 내장 변혁 비트 &lt;code&gt;IALL&lt;/code&gt; , &lt;code&gt;IANY&lt;/code&gt; 및 &lt;code&gt;IPARITY&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8970c27cc5c469b869cc2ade5383e4da26f39a17" translate="yes" xml:space="preserve">
          <source>The following example demonstrates the use of &lt;code&gt;MALLOC&lt;/code&gt; and &lt;code&gt;FREE&lt;/code&gt; with Cray pointers.</source>
          <target state="translated">다음은 &lt;code&gt;MALLOC&lt;/code&gt; 포인터와 함께 MALLOC 및 &lt;code&gt;FREE&lt;/code&gt; 를 사용하는 예 입니다.</target>
        </trans-unit>
        <trans-unit id="f8bd3fffd0f6b34419ed864fea14b8601f5d70b0" translate="yes" xml:space="preserve">
          <source>The following example will trigger the warning.</source>
          <target state="translated">다음 예제는 경고를 트리거합니다.</target>
        </trans-unit>
        <trans-unit id="2913bb4e65d16b424d8ca27c80c3e250f268938c" translate="yes" xml:space="preserve">
          <source>The following intrinsic procedures are provided by the module; their definition can be found in the section Intrinsic Procedures of this manual.</source>
          <target state="translated">다음과 같은 고유 절차가 모듈에 의해 제공됩니다. 그것들의 정의는이 매뉴얼의 고유 절차 섹션에서 찾을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ada37ca8a632dfe6e4852ecc1cb13184db9338f8" translate="yes" xml:space="preserve">
          <source>The following options control the details of the Fortran dialect accepted by the compiler:</source>
          <target state="translated">다음 옵션은 컴파일러가 승인 한 포트란 언어의 세부 사항을 제어합니다.</target>
        </trans-unit>
        <trans-unit id="85087ac1547792f91bb2dcd97bc3422cf74eb2cd" translate="yes" xml:space="preserve">
          <source>The following scalar integer named constants of the kind &lt;code&gt;omp_sched_kind&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;omp_sched_kind&lt;/code&gt; 종류의 상수라는 이름의 다음 스칼라 정수 :</target>
        </trans-unit>
        <trans-unit id="603d726be70c4628da0cf7e3682b94dbfb03d8ff" translate="yes" xml:space="preserve">
          <source>The function &lt;code&gt;strncpy&lt;/code&gt; copies at most &lt;var&gt;n&lt;/var&gt; characters from string &lt;var&gt;s2&lt;/var&gt; to &lt;var&gt;s1&lt;/var&gt; and returns &lt;var&gt;s1&lt;/var&gt;. In the following example, we ignore the return value:</source>
          <target state="translated">함수 &lt;code&gt;strncpy&lt;/code&gt; 최대 사본 &lt;var&gt;n&lt;/var&gt; 개의 문자열의 문자 &lt;var&gt;s2&lt;/var&gt; 에 &lt;var&gt;s1&lt;/var&gt; 돌아갑니다 &lt;var&gt;s1&lt;/var&gt; . 다음 예제에서는 반환 값을 무시합니다.</target>
        </trans-unit>
        <trans-unit id="1f140bb11d30fcc711f7462e5f5491e89a3b16fe" translate="yes" xml:space="preserve">
          <source>The function is modelled after the initialization function of the Message Passing Interface (MPI) specification. Due to the way coarray registration works, it might not be the first call to the library. If the main program is not written in Fortran and only a library uses coarrays, it can happen that this function is never called. Therefore, it is recommended that the library does not rely on the passed arguments and whether the call has been done.</source>
          <target state="translated">이 기능은 MPI (Message Passing Interface) 사양의 초기화 기능에 따라 모델링됩니다. Coarray 등록이 작동하는 방식으로 인해 라이브러리에 대한 첫 번째 호출이 아닐 수 있습니다. 주 프로그램이 Fortran으로 작성되지 않았고 라이브러리에서만 거친 배열을 사용하는 경우이 함수가 호출되지 않을 수 있습니다. 따라서 라이브러리는 전달 된 인수 및 호출 완료 여부에 의존하지 않는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="f205b8375c358255f0e939ddc3c86991dab3599c" translate="yes" xml:space="preserve">
          <source>The hour of the day</source>
          <target state="translated">하루 중 시간</target>
        </trans-unit>
        <trans-unit id="6f831d2d92f2cd6201b108abd02b2fb4cc9cbb9c" translate="yes" xml:space="preserve">
          <source>The intrinsic modules &lt;code&gt;ISO_FORTRAN_ENVIRONMENT&lt;/code&gt; is supported, which contains parameters of the I/O units, storage sizes. Additionally, procedures for C interoperability are available in the &lt;code&gt;ISO_C_BINDING&lt;/code&gt; module.</source>
          <target state="translated">내장 모듈 &lt;code&gt;ISO_FORTRAN_ENVIRONMENT&lt;/code&gt; 가 지원되며 여기에는 I / O 장치의 매개 변수, 스토리지 크기가 포함됩니다. 또한 C 상호 운용성 절차는 &lt;code&gt;ISO_C_BINDING&lt;/code&gt; 모듈 에서 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="bbf82e705c7474e43231c43083be398386d3d47d" translate="yes" xml:space="preserve">
          <source>The intrinsic procedures are described in &lt;a href=&quot;intrinsic-procedures#Intrinsic-Procedures&quot;&gt;Intrinsic Procedures&lt;/a&gt;.</source>
          <target state="translated">고유 절차에 설명되어 &lt;a href=&quot;intrinsic-procedures#Intrinsic-Procedures&quot;&gt;내장 프로 시저&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="5d3f6df925c962870bf09525c5774480699fcb43" translate="yes" xml:space="preserve">
          <source>The intrinsic procedures provided by GNU Fortran include all of the intrinsic procedures required by the Fortran 95 standard, a set of intrinsic procedures for backwards compatibility with G77, and a selection of intrinsic procedures from the Fortran 2003 and Fortran 2008 standards. Any conflict between a description here and a description in either the Fortran 95 standard, the Fortran 2003 standard or the Fortran 2008 standard is unintentional, and the standard(s) should be considered authoritative.</source>
          <target state="translated">GNU Fortran에서 제공하는 내장 프로 시저에는 Fortran 95 표준에서 요구하는 내장 프로 시저, G77과의 하위 호환성을위한 내장 프로 시저 및 Fortran 2003 및 Fortran 2008 표준에서 선택한 내장 프로 시저가 포함됩니다. 여기에있는 설명과 Fortran 95 표준, Fortran 2003 표준 또는 Fortran 2008 표준에 대한 설명이 상충되는 것은 의도하지 않은 것이며 표준을 신뢰할만한 것으로 간주해야합니다.</target>
        </trans-unit>
        <trans-unit id="c3a97e9d05103e47e93ebb972ec72888aa73ecf5" translate="yes" xml:space="preserve">
          <source>The kind of the return value is that of &lt;var&gt;A&lt;/var&gt; and &lt;var&gt;B&lt;/var&gt;. If &lt;em&gt;B\ge 0&lt;/em&gt; then the result is &lt;code&gt;ABS(A)&lt;/code&gt;, else it is &lt;code&gt;-ABS(A)&lt;/code&gt;.</source>
          <target state="translated">반환 값의 종류는 &lt;var&gt;A&lt;/var&gt; 와 &lt;var&gt;B&lt;/var&gt; 의 종류입니다 . 경우 &lt;em&gt;B \ GE 0&lt;/em&gt; 그 결과는 &lt;code&gt;ABS(A)&lt;/code&gt; , 그렇지 않으면이다 &lt;code&gt;-ABS(A)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e19560adedc7d80cd2a060527546158047faf6eb" translate="yes" xml:space="preserve">
          <source>The kind value (only 4; always &lt;code&gt;int&lt;/code&gt;)</source>
          <target state="translated">종류 값 (만 4; 항상 &lt;code&gt;int&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="2552e39dc70331a8aa86d12b478502e860329874" translate="yes" xml:space="preserve">
          <source>The last statement does not set &lt;code&gt;ipt&lt;/code&gt; to the address of &lt;code&gt;target(1)&lt;/code&gt;, as it would in C pointer arithmetic. Adding &lt;code&gt;1&lt;/code&gt; to &lt;code&gt;ipt&lt;/code&gt; just adds one byte to the address stored in &lt;code&gt;ipt&lt;/code&gt;.</source>
          <target state="translated">마지막 명령문은 C 포인터 산술에서와 같이 &lt;code&gt;ipt&lt;/code&gt; 를 &lt;code&gt;target(1)&lt;/code&gt; 의 주소로 설정하지 않습니다 . 추가 &lt;code&gt;1&lt;/code&gt; 를 위해 &lt;code&gt;ipt&lt;/code&gt; 단지에 저장된 주소로 한 바이트를 추가 &lt;code&gt;ipt&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="99501e539a24dfcaf866a60813b018007a141d1b" translate="yes" xml:space="preserve">
          <source>The latest version of the Fortran standard is ISO/IEC 1539-1:2010, informally known as Fortran 2008. The official version is available from International Organization for Standardization (ISO) or its national member organizations. The the final draft (FDIS) can be downloaded free of charge from &lt;a href=&quot;http://www.nag.co.uk/sc22wg5/links.html&quot;&gt;http://www.nag.co.uk/sc22wg5/links.html&lt;/a&gt;. Fortran is developed by the Working Group 5 of Sub-Committee 22 of the Joint Technical Committee 1 of the International Organization for Standardization and the International Electrotechnical Commission (IEC). This group is known as &lt;a href=&quot;http://www.nag.co.uk/sc22wg5/&quot;&gt;WG5&lt;/a&gt;.</source>
          <target state="translated">Fortran 표준의 최신 버전은 ISO / IEC 1539-1 : 2010이며, 비공식적으로 Fortran 2008로 알려져 있습니다. 공식 버전은 ISO (International Organization for Standardization) 또는 해당 국가 회원 기관에서 구할 수 있습니다. 최종 초안 (FDIS)은 &lt;a href=&quot;http://www.nag.co.uk/sc22wg5/links.html&quot;&gt;http://www.nag.co.uk/sc22wg5/links.html&lt;/a&gt; 에서 무료로 다운로드 할 수 있습니다 . 포트란은 국제 표준화기구와 국제 전기 기술위원회 (IEC)의 공동 기술위원회 1의 소위원회 22의 실무 그룹 5에 의해 개발되었습니다. 이 그룹을 &lt;a href=&quot;http://www.nag.co.uk/sc22wg5/&quot;&gt;WG5라고&lt;/a&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="c14caae37d6399f1b81a88b624ba59a05e54554f" translate="yes" xml:space="preserve">
          <source>The list of flag values</source>
          <target state="translated">플래그 값 목록</target>
        </trans-unit>
        <trans-unit id="df3cfb1cd2f37ba7061bc73c61065b00effc2d77" translate="yes" xml:space="preserve">
          <source>The long history of the Fortran language, its wide use and broad userbase, the large number of different compiler vendors and the lack of some features crucial to users in the first standards have lead to the existence of a number of important extensions to the language. While some of the most useful or popular extensions are supported by the GNU Fortran compiler, not all existing extensions are supported. This section aims at listing these extensions and offering advice on how best make code that uses them running with the GNU Fortran compiler.</source>
          <target state="translated">Fortran 언어의 오랜 역사, 광범위한 사용 및 광범위한 사용자 기반, 수많은 다른 컴파일러 공급 업체 및 첫 번째 표준에서 사용자에게 중요한 일부 기능의 부족으로 인해 언어에 대한 여러 가지 중요한 확장이 존재했습니다. 가장 유용하거나 널리 사용되는 확장 중 일부는 GNU Fortran 컴파일러에서 지원하지만 기존 확장이 모두 지원되는 것은 아닙니다. 이 섹션은 이러한 확장을 나열하고 GNU Fortran 컴파일러에서 실행되는 확장을 사용하는 코드를 가장 잘 만드는 방법에 대한 조언을 제공하는 것을 목표로합니다.</target>
        </trans-unit>
        <trans-unit id="83102d012b5f2690ec7ea35661bc1c657132aef7" translate="yes" xml:space="preserve">
          <source>The mathematical intrinsics &lt;code&gt;ASINH&lt;/code&gt;, &lt;code&gt;ACOSH&lt;/code&gt;, &lt;code&gt;ATANH&lt;/code&gt;, &lt;code&gt;ERF&lt;/code&gt;, &lt;code&gt;ERFC&lt;/code&gt;, &lt;code&gt;GAMMA&lt;/code&gt;, &lt;code&gt;LOG_GAMMA&lt;/code&gt;, &lt;code&gt;BESSEL_J0&lt;/code&gt;, &lt;code&gt;BESSEL_J1&lt;/code&gt;, &lt;code&gt;BESSEL_JN&lt;/code&gt;, &lt;code&gt;BESSEL_Y0&lt;/code&gt;, &lt;code&gt;BESSEL_Y1&lt;/code&gt;, &lt;code&gt;BESSEL_YN&lt;/code&gt;, &lt;code&gt;HYPOT&lt;/code&gt;, &lt;code&gt;NORM2&lt;/code&gt;, and &lt;code&gt;ERFC_SCALED&lt;/code&gt;.</source>
          <target state="translated">수학 내장 &lt;code&gt;ASINH&lt;/code&gt; , &lt;code&gt;ACOSH&lt;/code&gt; , &lt;code&gt;ATANH&lt;/code&gt; , &lt;code&gt;ERF&lt;/code&gt; , &lt;code&gt;ERFC&lt;/code&gt; , &lt;code&gt;GAMMA&lt;/code&gt; , &lt;code&gt;LOG_GAMMA&lt;/code&gt; , &lt;code&gt;BESSEL_J0&lt;/code&gt; , &lt;code&gt;BESSEL_J1&lt;/code&gt; , &lt;code&gt;BESSEL_JN&lt;/code&gt; , &lt;code&gt;BESSEL_Y0&lt;/code&gt; , &lt;code&gt;BESSEL_Y1&lt;/code&gt; , &lt;code&gt;BESSEL_YN&lt;/code&gt; , &lt;code&gt;HYPOT&lt;/code&gt; , &lt;code&gt;NORM2&lt;/code&gt; 및 &lt;code&gt;ERFC_SCALED&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="78d2bd807e5b06ed3ef91838f2dd14f3d6e2bdd1" translate="yes" xml:space="preserve">
          <source>The matrix product of &lt;var&gt;MATRIX_A&lt;/var&gt; and &lt;var&gt;MATRIX_B&lt;/var&gt;. The type and kind of the result follow the usual type and kind promotion rules, as for the &lt;code&gt;*&lt;/code&gt; or &lt;code&gt;.AND.&lt;/code&gt; operators.</source>
          <target state="translated">&lt;var&gt;MATRIX_A&lt;/var&gt; 및 &lt;var&gt;MATRIX_B&lt;/var&gt; 의 행렬 곱입니다 . 결과의 유형 및 종류는 &lt;code&gt;*&lt;/code&gt; 또는 &lt;code&gt;.AND.&lt;/code&gt; 와 같이 일반적인 유형 및 종류 프로모션 규칙을 따릅니다 . 연산자.</target>
        </trans-unit>
        <trans-unit id="5973cba2ae0843b61550cf03a263e93dc0620a94" translate="yes" xml:space="preserve">
          <source>The milliseconds of the second</source>
          <target state="translated">초의 밀리 초</target>
        </trans-unit>
        <trans-unit id="de9e1eb40ce234e0eb55388878f2d3beb8da36c6" translate="yes" xml:space="preserve">
          <source>The minutes of the hour</source>
          <target state="translated">시간의 분</target>
        </trans-unit>
        <trans-unit id="ac9fca5a560e5f0b6bd87f3de4a0fe0e23ab9db8" translate="yes" xml:space="preserve">
          <source>The module also provides the following intrinsic procedures: &lt;a href=&quot;compiler_005foptions#COMPILER_005fOPTIONS&quot;&gt;COMPILER_OPTIONS&lt;/a&gt; and &lt;a href=&quot;compiler_005fversion#COMPILER_005fVERSION&quot;&gt;COMPILER_VERSION&lt;/a&gt;.</source>
          <target state="translated">이 모듈은 &lt;a href=&quot;compiler_005foptions#COMPILER_005fOPTIONS&quot;&gt;COMPILER_OPTIONS&lt;/a&gt; 및 &lt;a href=&quot;compiler_005fversion#COMPILER_005fVERSION&quot;&gt;COMPILER_VERSION&lt;/a&gt; 과 같은 내장 프로시 저도 제공합니다 .</target>
        </trans-unit>
        <trans-unit id="4fbbd289a9596abae933087b47f053d429e65f7d" translate="yes" xml:space="preserve">
          <source>The module procedures &lt;code&gt;C_SIZEOF&lt;/code&gt; of the intrinsic module &lt;code&gt;ISO_C_BINDINGS&lt;/code&gt; and &lt;code&gt;COMPILER_VERSION&lt;/code&gt; and &lt;code&gt;COMPILER_OPTIONS&lt;/code&gt; of &lt;code&gt;ISO_FORTRAN_ENV&lt;/code&gt;.</source>
          <target state="translated">내장 모듈 &lt;code&gt;ISO_C_BINDINGS&lt;/code&gt; 및 &lt;code&gt;COMPILER_VERSION&lt;/code&gt; 및 &lt;code&gt;COMPILER_OPTIONS&lt;/code&gt; 의 모듈 프로 시저 &lt;code&gt;C_SIZEOF&lt;/code&gt; 는 &lt;code&gt;ISO_FORTRAN_ENV&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="1bf2fd8696d9efa3ae6499c75c752554419071da" translate="yes" xml:space="preserve">
          <source>The module provides the following derived type:</source>
          <target state="translated">이 모듈은 다음과 같은 파생 유형을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="85bd9b3470d6b725783d42bf082a0cb559a3b801" translate="yes" xml:space="preserve">
          <source>The month</source>
          <target state="translated">달</target>
        </trans-unit>
        <trans-unit id="f961831b1f81d2be1d02b084c3cd9d9dce974b73" translate="yes" xml:space="preserve">
          <source>The new atomic ADD, CAS, FETCH and ADD/OR/XOR, OR and XOR intrinsics.</source>
          <target state="translated">새로운 원자 ADD, CAS, FETCH 및 ADD / OR / XOR, OR 및 XOR 내장 함수.</target>
        </trans-unit>
        <trans-unit id="8a68d6c04ced71dedf9b791a0532251f792987fa" translate="yes" xml:space="preserve">
          <source>The number of command line arguments, type &lt;code&gt;INTEGER(4)&lt;/code&gt;.</source>
          <target state="translated">명령 행 인수의 수는 &lt;code&gt;INTEGER(4)&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="28ac0cb67a39e50904fd8db682a80b5b86ccb71b" translate="yes" xml:space="preserve">
          <source>The pointee may have its type declared before or after the pointer statement, and its array specification (if any) may be declared before, during, or after the pointer statement. The pointer may be declared as an integer prior to the pointer statement. However, some machines have default integer sizes that are different than the size of a pointer, and so the following code is not portable:</source>
          <target state="translated">포인트의 타입은 포인터 명령문 이전 또는 이후에 선언 될 수 있으며, 배열 스펙 (있는 경우)은 포인터 명령문 이전, 도중 또는 이후에 선언 될 수 있습니다. 포인터는 포인터 문 앞에 정수로 선언 될 수 있습니다. 그러나 일부 컴퓨터에는 포인터 크기와 다른 기본 정수 크기가 있으므로 다음 코드는 이식성이 없습니다.</target>
        </trans-unit>
        <trans-unit id="82ad746c9a8e959e2241217fbecddfb6571e3885" translate="yes" xml:space="preserve">
          <source>The pointer can also be set by a call to the &lt;code&gt;MALLOC&lt;/code&gt; intrinsic (see &lt;a href=&quot;malloc#MALLOC&quot;&gt;MALLOC&lt;/a&gt;).</source>
          <target state="translated">&lt;code&gt;MALLOC&lt;/code&gt; 내장 함수를 호출하여 포인터를 설정할 수도 있습니다 ( &lt;a href=&quot;malloc#MALLOC&quot;&gt;MALLOC&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="d82fca16c833ec97657ceefbe369524dc0e91839" translate="yes" xml:space="preserve">
          <source>The pointer is an integer that is intended to hold a memory address. The pointee may be an array or scalar. A pointee can be an assumed size array&amp;mdash;that is, the last dimension may be left unspecified by using a &lt;code&gt;*&lt;/code&gt; in place of a value&amp;mdash;but a pointee cannot be an assumed shape array. No space is allocated for the pointee.</source>
          <target state="translated">포인터는 메모리 주소를 보유하기위한 정수입니다. 포인트는 배열 또는 스칼라 일 수 있습니다. Pointee는 가정 된 크기 배열 일 수 있습니다. 즉, 값 대신 &lt;code&gt;*&lt;/code&gt; 를 사용하여 마지막 치수를 지정 하지 않은 채로 둘 수 있지만 Pointee는 가정 된 모양 배열 일 수 없습니다. 포인트를위한 공간이 할당되지 않았습니다.</target>
        </trans-unit>
        <trans-unit id="edc6ff0bad8686091a157ad08c8fbdf716450259" translate="yes" xml:space="preserve">
          <source>The preprocessor is run in traditional mode. Any restrictions of the file-format, especially the limits on line length, apply for preprocessed output as well, so it might be advisable to use the</source>
          <target state="translated">전처리 기는 일반 모드에서 실행됩니다. 파일 형식의 제한 사항, 특히 줄 길이 제한은 사전 처리 된 출력에도 적용되므로 다음을 사용하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="d11196b888ce30b46aae4f982989c07a7377fc5a" translate="yes" xml:space="preserve">
          <source>The primary work remaining to be done on GNU Fortran falls into three categories: bug fixing (primarily regarding the treatment of invalid code and providing useful error messages), improving the compiler optimizations and the performance of compiled code, and extending the compiler to support future standards&amp;mdash;in particular, Fortran 2003 and Fortran 2008.</source>
          <target state="translated">GNU Fortran에서 수행해야 할 주요 작업은 버그 수정 (주로 유효하지 않은 코드 처리 및 유용한 오류 메시지 제공), 컴파일러 최적화 및 컴파일 된 코드 성능 개선, 향후 지원을 위해 컴파일러 확장의 세 가지 범주로 분류됩니다. 표준, 특히 Fortran 2003 및 Fortran 2008.</target>
        </trans-unit>
        <trans-unit id="1a7e508ad73d5578febfb8c27f50521b2db25611" translate="yes" xml:space="preserve">
          <source>The references make up a single linked list of reference operations. The &lt;code&gt;NEXT&lt;/code&gt; member links to the next reference or NULL to indicate the end of the chain. Component and array refs can be arbitrarly mixed as long as they comply to the Fortran standard.</source>
          <target state="translated">참조는 단일 연결된 참조 작업 목록을 구성합니다. &lt;code&gt;NEXT&lt;/code&gt; 다음 참조 또는 NULL에 멤버 링크는 체인의 끝을 나타냅니다. 구성 요소 및 배열 참조는 Fortran 표준을 준수하는 한 임의로 혼합 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b9076206c5d405bf6f807b1746a63915ce80160d" translate="yes" xml:space="preserve">
          <source>The result has the same type as &lt;var&gt;MATRIX&lt;/var&gt;, and has shape &lt;code&gt;(/ m, n /)&lt;/code&gt; if &lt;var&gt;MATRIX&lt;/var&gt; has shape &lt;code&gt;(/ n, m /)&lt;/code&gt;.</source>
          <target state="translated">결과는 &lt;var&gt;MATRIX&lt;/var&gt; 와 유형이 동일하며 &lt;var&gt;MATRIX&lt;/var&gt; 가 shape &lt;code&gt;(/ n, m /)&lt;/code&gt; 경우 shape &lt;code&gt;(/ m, n /)&lt;/code&gt; /) 입니다.</target>
        </trans-unit>
        <trans-unit id="014378ad23cd5775570f0b602a3bf185eb59f741" translate="yes" xml:space="preserve">
          <source>The result has the same type as &lt;var&gt;MOLD&lt;/var&gt;, with the bit level representation of &lt;var&gt;SOURCE&lt;/var&gt;. If &lt;var&gt;SIZE&lt;/var&gt; is present, the result is a one-dimensional array of length &lt;var&gt;SIZE&lt;/var&gt;. If &lt;var&gt;SIZE&lt;/var&gt; is absent but &lt;var&gt;MOLD&lt;/var&gt; is an array (of any size or shape), the result is a one- dimensional array of the minimum length needed to contain the entirety of the bitwise representation of &lt;var&gt;SOURCE&lt;/var&gt;. If &lt;var&gt;SIZE&lt;/var&gt; is absent and &lt;var&gt;MOLD&lt;/var&gt; is a scalar, the result is a scalar.</source>
          <target state="translated">결과는 비트 레벨 표시가 &lt;var&gt;SOURCE&lt;/var&gt; 인 &lt;var&gt;MOLD&lt;/var&gt; 와 동일한 유형을 갖습니다 . 않으면 &lt;var&gt;SIZE&lt;/var&gt; 가 존재하는 결과는 길이가 1 차원 배열 &lt;var&gt;SIZE&lt;/var&gt; . 않으면 &lt;var&gt;SIZE&lt;/var&gt; 가 존재하지만, &lt;var&gt;MOLD&lt;/var&gt; (임의의 크기 또는 모양) 배열이고, 그 결과의 비트 표현의 전체를 포함하는 데 필요한 최소 길이의 일차원 배열 &lt;var&gt;SOURCE&lt;/var&gt; 를 . 경우 &lt;var&gt;SIZE&lt;/var&gt; 결석과 &lt;var&gt;MOLD&lt;/var&gt; 스칼라, 결과는 스칼라이다.</target>
        </trans-unit>
        <trans-unit id="a68687c8549863575b2d1c9bf7b1ca4264320d9d" translate="yes" xml:space="preserve">
          <source>The result is a scalar integer with the kind type parameter specified by KIND (or default integer type if KIND is missing). The result value is the size expressed in bits for an element of an array that has the dynamic type and type parameters of A.</source>
          <target state="translated">결과는 KIND (또는 KIND가없는 경우 기본 정수 유형)에 의해 지정된 종류 유형 매개 변수를 갖는 스칼라 정수입니다. 결과 값은 동적 유형 및 유형 매개 변수가 A 인 배열 요소의 비트 단위로 표시되는 크기입니다.</target>
        </trans-unit>
        <trans-unit id="39bf8e391d67c0f2010dc85b407d43eb48d6de2a" translate="yes" xml:space="preserve">
          <source>The result is an array of rank one and the same type as that of &lt;var&gt;ARRAY&lt;/var&gt;. If &lt;var&gt;VECTOR&lt;/var&gt; is present, the result size is that of &lt;var&gt;VECTOR&lt;/var&gt;, the number of &lt;code&gt;TRUE&lt;/code&gt; values in &lt;var&gt;MASK&lt;/var&gt; otherwise.</source>
          <target state="translated">결과는 순위 1의 배열이며 &lt;var&gt;ARRAY&lt;/var&gt; 와 동일한 유형 입니다. &lt;var&gt;VECTOR&lt;/var&gt; 가있는 경우 결과 크기는 &lt;var&gt;VECTOR&lt;/var&gt; 의 크기이며 , 그렇지 않으면 &lt;var&gt;MASK&lt;/var&gt; 의 &lt;code&gt;TRUE&lt;/code&gt; 값 수입니다 .</target>
        </trans-unit>
        <trans-unit id="4025446bd70d2ade2a070e30d6f3cf8cec9739c4" translate="yes" xml:space="preserve">
          <source>The result is an array of shape &lt;var&gt;SHAPE&lt;/var&gt; with the same type as &lt;var&gt;SOURCE&lt;/var&gt;.</source>
          <target state="translated">결과는 &lt;var&gt;SOURCE&lt;/var&gt; 와 동일한 유형의 &lt;var&gt;SHAPE&lt;/var&gt; 모양 배열입니다 .</target>
        </trans-unit>
        <trans-unit id="caf3d4238004921443d030bab99fdc05077039f5" translate="yes" xml:space="preserve">
          <source>The result is an array of the same type as &lt;var&gt;SOURCE&lt;/var&gt; and has rank n+1 where n equals the rank of &lt;var&gt;SOURCE&lt;/var&gt;.</source>
          <target state="translated">결과는 &lt;var&gt;SOURCE&lt;/var&gt; 와 동일한 유형의 배열이며 n + 1의 순위를 가지며 여기서 n은 &lt;var&gt;SOURCE&lt;/var&gt; 의 순위와 같습니다 .</target>
        </trans-unit>
        <trans-unit id="16ad010fed23e9c42a5271e94f9380c348a5f3ce" translate="yes" xml:space="preserve">
          <source>The result is of the same type and kind as &lt;var&gt;I&lt;/var&gt;.</source>
          <target state="translated">결과는 &lt;var&gt;I&lt;/var&gt; 와 동일한 유형 및 종류 입니다.</target>
        </trans-unit>
        <trans-unit id="4b3f5ee6869b34c8f18722a19275a070f74f33ef" translate="yes" xml:space="preserve">
          <source>The result is of the same type and type parameters as &lt;var&gt;TSOURCE&lt;/var&gt;.</source>
          <target state="translated">결과는 &lt;var&gt;TSOURCE&lt;/var&gt; 와 동일한 유형 및 유형 매개 변수 입니다.</target>
        </trans-unit>
        <trans-unit id="a5a1b4f69afd30fb54c8ad11e272f1c7796dcce0" translate="yes" xml:space="preserve">
          <source>The result is of the same type as &lt;var&gt;ARRAY&lt;/var&gt;.</source>
          <target state="translated">결과는 &lt;var&gt;ARRAY&lt;/var&gt; 와 동일한 유형 입니다.</target>
        </trans-unit>
        <trans-unit id="fee307d9896a5a4f398bba0853efcee815c547b3" translate="yes" xml:space="preserve">
          <source>The result is of the same type as &lt;var&gt;MASK&lt;/var&gt;.</source>
          <target state="translated">결과는 &lt;var&gt;MASK&lt;/var&gt; 와 동일한 유형 입니다.</target>
        </trans-unit>
        <trans-unit id="aeec9ae939b9f90cc0b1a5ab35509e8aa59521ec" translate="yes" xml:space="preserve">
          <source>The result is of the same type as the input argument &lt;var&gt;X&lt;/var&gt;.</source>
          <target state="translated">결과는 입력 인수 &lt;var&gt;X&lt;/var&gt; 와 동일한 유형 입니다.</target>
        </trans-unit>
        <trans-unit id="0dd172b45c8c6ce576351c27db65501195a07cff" translate="yes" xml:space="preserve">
          <source>The resulting array corresponds to &lt;var&gt;FIELD&lt;/var&gt; with &lt;code&gt;TRUE&lt;/code&gt; elements of &lt;var&gt;MASK&lt;/var&gt; replaced by values from &lt;var&gt;VECTOR&lt;/var&gt; in array element order.</source>
          <target state="translated">결과적으로 어레이에 대응 &lt;var&gt;FIELD&lt;/var&gt; 와 &lt;code&gt;TRUE&lt;/code&gt; 요소 &lt;var&gt;MASK&lt;/var&gt; 는 의 값으로 대체 &lt;var&gt;VECTOR&lt;/var&gt; 배열 요소 순서.</target>
        </trans-unit>
        <trans-unit id="6a76ff807cd4f7fad937ddf22c68201244c7e2ea" translate="yes" xml:space="preserve">
          <source>The return type is &lt;code&gt;INTEGER&lt;/code&gt;, of the same kind as the argument.</source>
          <target state="translated">반환 유형은 인수와 같은 종류의 &lt;code&gt;INTEGER&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="0d9747c612e80d9727d1e322ccbe25cb6d7d30de" translate="yes" xml:space="preserve">
          <source>The return type is &lt;code&gt;INTEGER&lt;/code&gt;, of the same kind as the arguments. (If the argument kinds differ, it is of the same kind as the larger argument.)</source>
          <target state="translated">리턴 유형은 인수와 동일한 종류의 &lt;code&gt;INTEGER&lt;/code&gt; 입니다. (인수 종류가 다른 경우, 큰 인수와 같은 종류입니다.)</target>
        </trans-unit>
        <trans-unit id="db897dd66079baaeb0abc536a3e107532500fe6e" translate="yes" xml:space="preserve">
          <source>The return type is either a scalar &lt;code&gt;INTEGER&lt;/code&gt; or a scalar &lt;code&gt;LOGICAL&lt;/code&gt;. If the kind type parameters differ, then the smaller kind type is implicitly converted to larger kind, and the return has the larger kind.</source>
          <target state="translated">리턴 유형은 스칼라 &lt;code&gt;INTEGER&lt;/code&gt; 또는 스칼라 &lt;code&gt;LOGICAL&lt;/code&gt; 입니다. 종류 유형 매개 변수가 다르면 작은 종류 유형이 암시 적으로 더 큰 종류로 변환되고 반환 값이 더 큰 종류입니다.</target>
        </trans-unit>
        <trans-unit id="1384fad504be36d901099fcfca5b3b4c6cec0fe2" translate="yes" xml:space="preserve">
          <source>The return value corresponds to the maximum value among the arguments, and has the same type and kind as the first argument.</source>
          <target state="translated">반환 값은 인수 중 최대 값에 해당하며 첫 번째 인수와 동일한 유형 및 종류를 갖습니다.</target>
        </trans-unit>
        <trans-unit id="41f2dd4b57f79bc03d726b80a316468b988840b9" translate="yes" xml:space="preserve">
          <source>The return value has same type and kind as &lt;var&gt;X&lt;/var&gt;, and its value is in degrees.</source>
          <target state="translated">반환 값은 &lt;var&gt;X&lt;/var&gt; 와 유형 및 종류가 같 으며 값은 도입니다.</target>
        </trans-unit>
        <trans-unit id="a806490f0d2d64535668b1a4b916e4db9c1398a8" translate="yes" xml:space="preserve">
          <source>The return value has same type and kind as &lt;var&gt;X&lt;/var&gt;, and its value is in radians.</source>
          <target state="translated">반환 값은 &lt;var&gt;X&lt;/var&gt; 와 유형 및 종류가 같 으며 값은 라디안입니다.</target>
        </trans-unit>
        <trans-unit id="9a40fb5e89dbedf38fec02fdade8a21c0cd90094" translate="yes" xml:space="preserve">
          <source>The return value has same type and kind as &lt;var&gt;X&lt;/var&gt;.</source>
          <target state="translated">리턴 값은 &lt;var&gt;X&lt;/var&gt; 와 유형 및 종류가 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="7dd59c4dd88e8a6b4634ca6ed2439c4422a307ca" translate="yes" xml:space="preserve">
          <source>The return value has same type and kind as &lt;var&gt;X&lt;/var&gt;. If &lt;var&gt;X&lt;/var&gt; is complex, the imaginary part of the result is in radians and lies between &lt;em&gt;-\pi/2 \leq \Im \atanh(x) \leq \pi/2&lt;/em&gt;.</source>
          <target state="translated">리턴 값은 &lt;var&gt;X&lt;/var&gt; 와 유형 및 종류가 동일합니다 . 경우 &lt;var&gt;X&lt;/var&gt; 가 복잡하고, 결과의 허수 부분 사이 라디안 거짓 인 &lt;em&gt;\ PI / 2 \ 당량 \ 임 \ ATANH (X) \ 당량 \ PI / 2 -&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="8d9d6228247d17e5d5f6a0da787e2bd85eac256f" translate="yes" xml:space="preserve">
          <source>The return value has same type and kind as &lt;var&gt;X&lt;/var&gt;. If &lt;var&gt;X&lt;/var&gt; is complex, the imaginary part of the result is in radians. If &lt;var&gt;X&lt;/var&gt; is &lt;code&gt;REAL&lt;/code&gt;, the return value has a lower bound of one, &lt;em&gt;\cosh (x) \geq 1&lt;/em&gt;.</source>
          <target state="translated">리턴 값은 &lt;var&gt;X&lt;/var&gt; 와 유형 및 종류가 동일합니다 . 경우 &lt;var&gt;X&lt;/var&gt; 가 복잡, 결과의 허수 부분은 라디안이다. 경우 &lt;var&gt;X&lt;/var&gt; 는 이다 &lt;code&gt;REAL&lt;/code&gt; 낮은 하나로 결합, 리턴 값이 있으며, &lt;em&gt;\ COSH (X) \ GEQ 1&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="89bf91ac114652d69f299b6d4d95ccbf7b2761c7" translate="yes" xml:space="preserve">
          <source>The return value has same type and kind as &lt;var&gt;X&lt;/var&gt;. If &lt;var&gt;X&lt;/var&gt; is complex, the imaginary part of the result is in radians. If &lt;var&gt;X&lt;/var&gt; is &lt;code&gt;REAL&lt;/code&gt;, the return value lies in the range &lt;em&gt;- 1 \leq tanh(x) \leq 1 &lt;/em&gt;.</source>
          <target state="translated">리턴 값은 &lt;var&gt;X&lt;/var&gt; 와 유형 및 종류가 동일합니다 . 경우 &lt;var&gt;X&lt;/var&gt; 가 복잡, 결과의 허수 부분은 라디안이다. 경우 &lt;var&gt;X&lt;/var&gt; 는 이다 &lt;code&gt;REAL&lt;/code&gt; , 범위의 반환 값 거짓 &lt;em&gt;- 1 \ 당량 TANH (X) \ 1 당량&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="5fe801780ced09fd4afe1a60bb385e4305af80fa" translate="yes" xml:space="preserve">
          <source>The return value has the same type and kind as &lt;var&gt;X&lt;/var&gt;. If &lt;var&gt;X&lt;/var&gt; is complex, the imaginary part of the result is in radians and lies between &lt;em&gt;0 \leq \Im \acosh(x) \leq \pi&lt;/em&gt;.</source>
          <target state="translated">리턴 값은 &lt;var&gt;X&lt;/var&gt; 와 유형 및 종류가 같습니다 . 경우 &lt;var&gt;X&lt;/var&gt; 가 복잡하고, 결과의 허수 부 라디안 사이에 놓여 &lt;em&gt;0 \ 당량 \ 임 \ ACOSH (X) \ 당량 \ PI&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="a74180aa97f45c0d516e1a00ce60136f6f1e9b39" translate="yes" xml:space="preserve">
          <source>The return value has the same type and kind type parameter as &lt;var&gt;X&lt;/var&gt;.</source>
          <target state="translated">리턴 값은 &lt;var&gt;X&lt;/var&gt; 와 동일한 유형 및 종류 유형 매개 변수를 갖습니다 .</target>
        </trans-unit>
        <trans-unit id="5d15f94e997d0f5b361f670cafac0a2222fe985e" translate="yes" xml:space="preserve">
          <source>The return value has the same type and kind type parameter as &lt;var&gt;Y&lt;/var&gt;. It is the principal value of the complex number &lt;em&gt;X + i Y&lt;/em&gt;. If &lt;var&gt;X&lt;/var&gt; is nonzero, then it lies in the range &lt;em&gt;-180 \le \atan (x) \leq 180&lt;/em&gt;. The sign is positive if &lt;var&gt;Y&lt;/var&gt; is positive. If &lt;var&gt;Y&lt;/var&gt; is zero, then the return value is zero if &lt;var&gt;X&lt;/var&gt; is strictly positive, &lt;em&gt;180&lt;/em&gt; if &lt;var&gt;X&lt;/var&gt; is negative and &lt;var&gt;Y&lt;/var&gt; is positive zero (or the processor does not handle signed zeros), and &lt;em&gt;-180&lt;/em&gt; if &lt;var&gt;X&lt;/var&gt; is negative and &lt;var&gt;Y&lt;/var&gt; is negative zero. Finally, if &lt;var&gt;X&lt;/var&gt; is zero, then the magnitude of the result is &lt;em&gt;90&lt;/em&gt;.</source>
          <target state="translated">반환 값은 &lt;var&gt;Y&lt;/var&gt; 와 같은 유형 및 종류 유형 매개 변수를 갖습니다 . 복소수 &lt;em&gt;X + i Y의 주값&lt;/em&gt; 입니다. &lt;var&gt;X&lt;/var&gt; 가 0이 아닌 경우 &lt;em&gt;-180 \ le \ atan (x) \ leq 180 범위에&lt;/em&gt; 있습니다. &lt;var&gt;Y&lt;/var&gt; 가 양수 이면 부호가 양수입니다. 경우 &lt;var&gt;Y&lt;/var&gt; 가 0 인 경우, 반환 값은 제로 &lt;var&gt;X&lt;/var&gt; 는 엄격히 긍정적, &lt;em&gt;180&lt;/em&gt; 경우 &lt;var&gt;X&lt;/var&gt; 는 음수이고 &lt;var&gt;Y&lt;/var&gt; 가 양의 제로 (또는 서명 제로 처리하지 않는 프로세서), 및 &lt;em&gt;-180&lt;/em&gt; 경우 &lt;var&gt;X&lt;/var&gt; 는 음수이고 &lt;var&gt;Y&lt;/var&gt; 가 음의 제로 . 마지막으로 &lt;var&gt;X&lt;/var&gt; 이 0이면 결과의 크기는 &lt;em&gt;90&lt;/em&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="1d5092c3fbd9dbad3920df4cbd1bd52dd5c0c2c9" translate="yes" xml:space="preserve">
          <source>The return value has the same type and kind type parameter as &lt;var&gt;Y&lt;/var&gt;. It is the principal value of the complex number &lt;em&gt;X + i Y&lt;/em&gt;. If &lt;var&gt;X&lt;/var&gt; is nonzero, then it lies in the range &lt;em&gt;-\pi \le \atan (x) \leq \pi&lt;/em&gt;. The sign is positive if &lt;var&gt;Y&lt;/var&gt; is positive. If &lt;var&gt;Y&lt;/var&gt; is zero, then the return value is zero if &lt;var&gt;X&lt;/var&gt; is strictly positive, &lt;em&gt;\pi&lt;/em&gt; if &lt;var&gt;X&lt;/var&gt; is negative and &lt;var&gt;Y&lt;/var&gt; is positive zero (or the processor does not handle signed zeros), and &lt;em&gt;-\pi&lt;/em&gt; if &lt;var&gt;X&lt;/var&gt; is negative and &lt;var&gt;Y&lt;/var&gt; is negative zero. Finally, if &lt;var&gt;X&lt;/var&gt; is zero, then the magnitude of the result is &lt;em&gt;\pi/2&lt;/em&gt;.</source>
          <target state="translated">반환 값은 &lt;var&gt;Y&lt;/var&gt; 와 같은 유형 및 종류 유형 매개 변수를 갖습니다 . 복소수 &lt;em&gt;X + i Y의 주값&lt;/em&gt; 입니다. &lt;var&gt;X&lt;/var&gt; 가 0이 아닌 경우 &lt;em&gt;-\ pi \ le \ atan (x) \ leq \ pi 범위에&lt;/em&gt; 있습니다. &lt;var&gt;Y&lt;/var&gt; 가 양수 이면 부호가 양수입니다. 경우 &lt;var&gt;Y&lt;/var&gt; 가 0 인 경우, 반환 값은 제로 &lt;var&gt;X&lt;/var&gt; 는 엄격히 긍정적이다 &lt;em&gt;\ PI&lt;/em&gt; 경우 &lt;var&gt;X&lt;/var&gt; 는 음수이고 &lt;var&gt;Y&lt;/var&gt; 가 양의 제로 (또는 서명 제로 처리하지 않는 프로세서), 및 &lt;em&gt;- \ PI&lt;/em&gt; 경우 &lt;var&gt;X&lt;/var&gt; 는 음수이며, &lt;var&gt;Y&lt;/var&gt; 가 이고 음수 0. 마지막으로 &lt;var&gt;X&lt;/var&gt; 0이면 결과의 크기는 &lt;em&gt;\ pi / 2&lt;/em&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="15b0990d245ac1e04bef250969565b8004ceb56d" translate="yes" xml:space="preserve">
          <source>The return value is a &lt;code&gt;INTEGER(2)&lt;/code&gt; variable.</source>
          <target state="translated">리턴 값은 &lt;code&gt;INTEGER(2)&lt;/code&gt; 변수입니다.</target>
        </trans-unit>
        <trans-unit id="d6f87ba7e6be0ef2e71b7a91808dab20a89d7585" translate="yes" xml:space="preserve">
          <source>The return value is a &lt;code&gt;INTEGER(4)&lt;/code&gt; variable.</source>
          <target state="translated">리턴 값은 &lt;code&gt;INTEGER(4)&lt;/code&gt; 변수입니다.</target>
        </trans-unit>
        <trans-unit id="5ea8d059fb67cf3459e9c3e08c7c24ccec166bc4" translate="yes" xml:space="preserve">
          <source>The return value is a &lt;code&gt;INTEGER(8)&lt;/code&gt; variable.</source>
          <target state="translated">리턴 값은 &lt;code&gt;INTEGER(8)&lt;/code&gt; 변수입니다.</target>
        </trans-unit>
        <trans-unit id="df9439bbde12ee0f35a32a1dffa8c5249cf46558" translate="yes" xml:space="preserve">
          <source>The return value is a &lt;code&gt;LOGICAL&lt;/code&gt; value equal to &lt;var&gt;L&lt;/var&gt;, with a kind corresponding to &lt;var&gt;KIND&lt;/var&gt;, or of the default logical kind if &lt;var&gt;KIND&lt;/var&gt; is not given.</source>
          <target state="translated">리턴 값은 &lt;var&gt;L&lt;/var&gt; 과 동일한 &lt;code&gt;LOGICAL&lt;/code&gt; 값 이며, &lt;var&gt;KIND&lt;/var&gt; 에 해당하는 종류 또는 &lt;var&gt;KIND&lt;/var&gt; 가 제공되지 않은 경우 기본 논리 종류 입니다.</target>
        </trans-unit>
        <trans-unit id="22ea07110cc5f7db44d2ff16a73e671b95bbe6dd" translate="yes" xml:space="preserve">
          <source>The return value is a default-kind string with system-dependent length. It contains the compiler flags used to compile the file, which called the &lt;code&gt;COMPILER_OPTIONS&lt;/code&gt; intrinsic.</source>
          <target state="translated">반환 값은 시스템 종속 길이를 가진 기본 종류 문자열입니다. 여기에는 &lt;code&gt;COMPILER_OPTIONS&lt;/code&gt; 내장 이라고하는 파일을 컴파일하는 데 사용되는 컴파일러 플래그가 포함되어 있습니다 .</target>
        </trans-unit>
        <trans-unit id="ddc8f5a04f7a464176949bc835658f57ff01772e" translate="yes" xml:space="preserve">
          <source>The return value is a default-kind string with system-dependent length. It contains the name of the compiler and its version number.</source>
          <target state="translated">반환 값은 시스템 종속 길이를 가진 기본 종류 문자열입니다. 컴파일러 이름과 버전 번호가 포함되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="c52346d77132aa714f34b568b1b471e5d175e038" translate="yes" xml:space="preserve">
          <source>The return value is a scalar &lt;code&gt;LOGICAL&lt;/code&gt; with the default logical kind type parameter. If the argument is allocated, then the result is &lt;code&gt;.TRUE.&lt;/code&gt;; otherwise, it returns &lt;code&gt;.FALSE.&lt;/code&gt;</source>
          <target state="translated">리턴 값은 기본 논리 종류 유형 매개 변수 가있는 스칼라 &lt;code&gt;LOGICAL&lt;/code&gt; 입니다. 인수가 할당되면 결과는 &lt;code&gt;.TRUE.&lt;/code&gt; ; 그렇지 않으면 &lt;code&gt;.FALSE.&lt;/code&gt; 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="bccf2ae3d39e9c9c4218b80d3033754ba82d9219" translate="yes" xml:space="preserve">
          <source>The return value is a scalar of type &lt;code&gt;INTEGER(4)&lt;/code&gt;, equal to the number of clock ticks since the start of the process, or &lt;code&gt;-1&lt;/code&gt; if the system does not support &lt;code&gt;clock(3)&lt;/code&gt;.</source>
          <target state="translated">리턴 값은 &lt;code&gt;INTEGER(4)&lt;/code&gt; 유형의 스칼라로 , 프로세스 시작 이후의 클럭 틱 수와 같거나 시스템이 &lt;code&gt;clock(3)&lt;/code&gt; 지원하지 않는 경우 &lt;code&gt;-1&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="35d1bd5a4c55d354110899e909e2c5f80ffc0d81" translate="yes" xml:space="preserve">
          <source>The return value is a scalar of type &lt;code&gt;INTEGER(4)&lt;/code&gt;.</source>
          <target state="translated">리턴 값은 &lt;code&gt;INTEGER(4)&lt;/code&gt; 유형의 스칼라입니다 .</target>
        </trans-unit>
        <trans-unit id="c55599fe430d7990d2eeacbb5c225e7e442a0655" translate="yes" xml:space="preserve">
          <source>The return value is a scalar of type &lt;code&gt;INTEGER(8)&lt;/code&gt;, equal to the number of clock ticks since the start of the process, or &lt;code&gt;-1&lt;/code&gt; if the system does not support &lt;code&gt;clock(3)&lt;/code&gt;.</source>
          <target state="translated">리턴 값은 &lt;code&gt;INTEGER(8)&lt;/code&gt; 유형의 스칼라로 , 프로세스 시작 이후의 클럭 틱 수와 같거나 시스템이 &lt;code&gt;clock(3)&lt;/code&gt; 지원하지 않는 경우 &lt;code&gt;-1&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="56084ca53c227e3668e2ecadf03faeb6fb0ef56b" translate="yes" xml:space="preserve">
          <source>The return value is a scalar of type &lt;code&gt;INTEGER(8)&lt;/code&gt;.</source>
          <target state="translated">리턴 값은 &lt;code&gt;INTEGER(8)&lt;/code&gt; 유형의 스칼라입니다 .</target>
        </trans-unit>
        <trans-unit id="a6a43be5bd77f5f2d359074140268e54aa67ad3a" translate="yes" xml:space="preserve">
          <source>The return value is a scalar of type &lt;code&gt;INTEGER&lt;/code&gt; and of the default integer kind.</source>
          <target state="translated">리턴 값은 &lt;code&gt;INTEGER&lt;/code&gt; 유형 및 기본 정수 유형의 스칼라입니다 .</target>
        </trans-unit>
        <trans-unit id="14964769ca338d06f2fc526b27000918dc2fb400" translate="yes" xml:space="preserve">
          <source>The return value is a scalar of type &lt;code&gt;REAL&lt;/code&gt;. It has the same kind as &lt;var&gt;X&lt;/var&gt;.</source>
          <target state="translated">반환 값은 &lt;code&gt;REAL&lt;/code&gt; 유형의 스칼라입니다 . &lt;var&gt;X&lt;/var&gt; 와 같은 종류 입니다.</target>
        </trans-unit>
        <trans-unit id="2b9521c34a35f957b19b76fc1d730dedfa2ddb44" translate="yes" xml:space="preserve">
          <source>The return value is a scalar of type default logical. It is true if and only if the dynamic type of A is an extension type of the dynamic type of MOLD.</source>
          <target state="translated">리턴 값은 기본 논리 유형의 스칼라입니다. 동적 유형 A가 동적 유형 MOLD의 확장 유형 인 경우에만 해당됩니다.</target>
        </trans-unit>
        <trans-unit id="f202be64abd4bcabd9aacd5ea8bba256904b79f0" translate="yes" xml:space="preserve">
          <source>The return value is a scalar of type default logical. It is true if and only if the dynamic type of A is the same as the dynamic type of B.</source>
          <target state="translated">리턴 값은 기본 논리 유형의 스칼라입니다. A의 동적 유형이 B의 동적 유형과 동일한 경우에만 해당됩니다.</target>
        </trans-unit>
        <trans-unit id="6fa22ed92a5ea22b7cd38548bf7c3121b62811d5" translate="yes" xml:space="preserve">
          <source>The return value is an &lt;code&gt;INTEGER&lt;/code&gt; of default kind.</source>
          <target state="translated">리턴 값은 디폴트 종류 의 &lt;code&gt;INTEGER&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="4bdffa50d6a7e92d9559930fc19ff75c4798ea4d" translate="yes" xml:space="preserve">
          <source>The return value is of &lt;code&gt;COMPLEX&lt;/code&gt; type, with a kind equal to &lt;var&gt;KIND&lt;/var&gt; if it is specified. If &lt;var&gt;KIND&lt;/var&gt; is not specified, the result is of the default &lt;code&gt;COMPLEX&lt;/code&gt; kind, regardless of the kinds of &lt;var&gt;X&lt;/var&gt; and &lt;var&gt;Y&lt;/var&gt;.</source>
          <target state="translated">리턴 값은 &lt;code&gt;COMPLEX&lt;/code&gt; 유형이며, 지정된 경우 &lt;var&gt;KIND&lt;/var&gt; 와 같은 종류를 갖습니다 . 경우 &lt;var&gt;KIND&lt;/var&gt; 지정되지 않은, 결과는 기본이다 &lt;code&gt;COMPLEX&lt;/code&gt; 관계의 종류, 종류의 &lt;var&gt;X&lt;/var&gt; 및 &lt;var&gt;Y&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="4752c10f396812e7d8ded79ade01b82e2ebd0099" translate="yes" xml:space="preserve">
          <source>The return value is of &lt;code&gt;INTEGER(kind=4)&lt;/code&gt; type.</source>
          <target state="translated">리턴 값은 &lt;code&gt;INTEGER(kind=4)&lt;/code&gt; 유형입니다.</target>
        </trans-unit>
        <trans-unit id="1bc97e989ddfc84607a7c5085407a3d33a1541e9" translate="yes" xml:space="preserve">
          <source>The return value is of &lt;code&gt;REAL&lt;/code&gt; type and the default kind.</source>
          <target state="translated">리턴 값은 &lt;code&gt;REAL&lt;/code&gt; 유형이며 기본 유형입니다.</target>
        </trans-unit>
        <trans-unit id="aad856021fa407419683ad9a3fac296f47d6d76d" translate="yes" xml:space="preserve">
          <source>The return value is of same type as the argument.</source>
          <target state="translated">리턴 값은 인수와 동일한 유형입니다.</target>
        </trans-unit>
        <trans-unit id="206f99b2aaaf3cd6381c428c8f89f2a61ecb674d" translate="yes" xml:space="preserve">
          <source>The return value is of the same type and kind as &lt;var&gt;X&lt;/var&gt;</source>
          <target state="translated">반환 값은 &lt;var&gt;X&lt;/var&gt; 와 동일한 유형 및 종류입니다.</target>
        </trans-unit>
        <trans-unit id="8f66fdc0ad54cb4f5ddb1282ff7460c8ffb064f1" translate="yes" xml:space="preserve">
          <source>The return value is of the same type and kind as &lt;var&gt;X&lt;/var&gt;. If &lt;var&gt;X&lt;/var&gt; is complex, the imaginary part of the result is in radians and lies between &lt;em&gt;-\pi/2 \leq \Im \asinh(x) \leq \pi/2&lt;/em&gt;.</source>
          <target state="translated">리턴 값은 &lt;var&gt;X&lt;/var&gt; 와 동일한 유형 및 종류 입니다. 경우 &lt;var&gt;X&lt;/var&gt; 가 복잡하고, 결과의 허수 부분 사이 라디안 거짓 인 &lt;em&gt;\ PI / 2 \ 당량 \ 임 \ ASINH (X) \ 당량 \ PI / 2 -&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="44fe9e4df5c52d474b1edef9c15df2d57ff202f5" translate="yes" xml:space="preserve">
          <source>The return value is of the same type and kind as &lt;var&gt;X&lt;/var&gt;. If &lt;var&gt;Y&lt;/var&gt; is present, the result is identical to &lt;code&gt;ATAN2(Y,X)&lt;/code&gt;. Otherwise, it the arcus tangent of &lt;var&gt;X&lt;/var&gt;, where the real part of the result is in radians and lies in the range &lt;em&gt;-\pi/2 \leq \Re \atan(x) \leq \pi/2&lt;/em&gt;.</source>
          <target state="translated">리턴 값은 &lt;var&gt;X&lt;/var&gt; 와 동일한 유형 및 종류 입니다. 경우 &lt;var&gt;Y&lt;/var&gt; 가 존재하는 결과는 동일하다 &lt;code&gt;ATAN2(Y,X)&lt;/code&gt; . 그렇지 않으면 &lt;var&gt;X&lt;/var&gt; 의 아크 탄젠트입니다 . 여기서 결과의 실제 부분은 라디안이며 &lt;em&gt;-\ pi / 2 \ leq \ Re \ atan (x) \ leq \ pi / 2 범위에&lt;/em&gt; 있습니다.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
