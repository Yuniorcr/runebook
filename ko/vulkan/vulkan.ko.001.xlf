<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="vulkan">
    <body>
      <group id="vulkan">
        <trans-unit id="6e6a619fbea69a23d66f5da845fd6ac373eea455" translate="yes" xml:space="preserve">
          <source>&amp;and; is bitwise and,</source>
          <target state="translated">&amp;and;는 비트 단위이며</target>
        </trans-unit>
        <trans-unit id="5c4d58d3611a8bd94aeb9b64711c26e9d8896207" translate="yes" xml:space="preserve">
          <source>&amp;copy; 2014&amp;ndash;2017 Khronos Group Inc.</source>
          <target state="translated">&amp;copy; 2014&amp;ndash;2017 Khronos Group Inc.</target>
        </trans-unit>
        <trans-unit id="a44e7977c0e138646aae2102778ce25fab7f9a02" translate="yes" xml:space="preserve">
          <source>&amp;not; (s &amp;and; d)</source>
          <target state="translated">&amp;not; (s &amp;and; d)</target>
        </trans-unit>
        <trans-unit id="50c494451d7bb22cf572966f9de0cb50ee159f87" translate="yes" xml:space="preserve">
          <source>&amp;not; (s &amp;oplus; d)</source>
          <target state="translated">&amp;not; (s &amp;oplus; d)</target>
        </trans-unit>
        <trans-unit id="af02e9daa67208deb54263d0c954d1c082195c67" translate="yes" xml:space="preserve">
          <source>&amp;not; (s &amp;or; d)</source>
          <target state="translated">&amp;not; (s &amp;or; d)</target>
        </trans-unit>
        <trans-unit id="a0a5bee98047a65610bcaf1ec2319446df84559d" translate="yes" xml:space="preserve">
          <source>&amp;not; d</source>
          <target state="translated">&amp;not; d</target>
        </trans-unit>
        <trans-unit id="eeba25a59b7351d95bd5b078c4e5af67c8061e29" translate="yes" xml:space="preserve">
          <source>&amp;not; is bitwise invert,</source>
          <target state="translated">&amp;not;는 비트 단위입니다.</target>
        </trans-unit>
        <trans-unit id="d71d3f1ad1c823b9b31ed9ca4a144489b9b4ae2d" translate="yes" xml:space="preserve">
          <source>&amp;not; s</source>
          <target state="translated">&amp;not; s</target>
        </trans-unit>
        <trans-unit id="bd1422280047b94205ccf6c6f877150ec4b33caf" translate="yes" xml:space="preserve">
          <source>&amp;not; s &amp;and; d</source>
          <target state="translated">&amp;not; s &amp;and; d</target>
        </trans-unit>
        <trans-unit id="9127722302f80b5bc7064ed874462b6ac3efd461" translate="yes" xml:space="preserve">
          <source>&amp;not; s &amp;or; d</source>
          <target state="translated">&amp;not; s &amp;or; d</target>
        </trans-unit>
        <trans-unit id="60db0aeca723c0496b88a1a7fab4fd813a4043a1" translate="yes" xml:space="preserve">
          <source>&amp;oplus; is bitwise exclusive or,</source>
          <target state="translated">&amp;oplus;는 비트 배타적이거나</target>
        </trans-unit>
        <trans-unit id="21f30465e3e5dc97425831eb07002c737a132e25" translate="yes" xml:space="preserve">
          <source>&amp;or; is bitwise or,</source>
          <target state="translated">&amp;or;는 비트 단위이거나</target>
        </trans-unit>
        <trans-unit id="644189fcd4587c49a6cf4c67a89c344a0b4a6670" translate="yes" xml:space="preserve">
          <source>(0,0,0) which indicates that only whole mip levels &lt;strong&gt;must&lt;/strong&gt; be transferred using the image transfer operations on the corresponding queues. In this case, the following restrictions apply to all offset and extent parameters of image transfer operations:</source>
          <target state="translated">(0,0,0) : 해당 큐에서 이미지 전송 조작을 사용하여 전체 밉 레벨 만 전송 &lt;strong&gt;해야&lt;/strong&gt; 함 을 나타냅니다 . 이 경우 이미지 전송 작업의 모든 오프셋 및 범위 매개 변수에 다음 제한이 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="fd8e0c2ec76efcae76201697be1a7669ed9f63c3" translate="yes" xml:space="preserve">
          <source>(1-A&lt;sub&gt;c&lt;/sub&gt;,1-A&lt;sub&gt;c&lt;/sub&gt;,1-A&lt;sub&gt;c&lt;/sub&gt;)</source>
          <target state="translated">(1-A&lt;sub&gt;c&lt;/sub&gt;,1-A&lt;sub&gt;c&lt;/sub&gt;,1-A&lt;sub&gt;c&lt;/sub&gt;)</target>
        </trans-unit>
        <trans-unit id="314b363da18db648060616712987e87d0f2dc8ce" translate="yes" xml:space="preserve">
          <source>(1-A&lt;sub&gt;d&lt;/sub&gt;,1-A&lt;sub&gt;d&lt;/sub&gt;,1-A&lt;sub&gt;d&lt;/sub&gt;)</source>
          <target state="translated">(1-A&lt;sub&gt;d&lt;/sub&gt;,1-A&lt;sub&gt;d&lt;/sub&gt;,1-A&lt;sub&gt;d&lt;/sub&gt;)</target>
        </trans-unit>
        <trans-unit id="7deb22686376d27534af3144c4c18e574f672c22" translate="yes" xml:space="preserve">
          <source>(1-A&lt;sub&gt;s0&lt;/sub&gt;,1-A&lt;sub&gt;s0&lt;/sub&gt;,1-A&lt;sub&gt;s0&lt;/sub&gt;)</source>
          <target state="translated">(1-A&lt;sub&gt;s0&lt;/sub&gt;,1-A&lt;sub&gt;s0&lt;/sub&gt;,1-A&lt;sub&gt;s0&lt;/sub&gt;)</target>
        </trans-unit>
        <trans-unit id="a4a7b80d99e6c9826ac2dd1c7f13c95b789bfcb4" translate="yes" xml:space="preserve">
          <source>(1-A&lt;sub&gt;s1&lt;/sub&gt;,1-A&lt;sub&gt;s1&lt;/sub&gt;,1-A&lt;sub&gt;s1&lt;/sub&gt;)</source>
          <target state="translated">(1-A&lt;sub&gt;s1&lt;/sub&gt;,1-A&lt;sub&gt;s1&lt;/sub&gt;,1-A&lt;sub&gt;s1&lt;/sub&gt;)</target>
        </trans-unit>
        <trans-unit id="4f8549d0f1820403e2d883984b3997d9f7ede80a" translate="yes" xml:space="preserve">
          <source>(1-R&lt;sub&gt;c&lt;/sub&gt;,1-G&lt;sub&gt;c&lt;/sub&gt;,1-B&lt;sub&gt;c&lt;/sub&gt;)</source>
          <target state="translated">(1-R&lt;sub&gt;c&lt;/sub&gt;,1-G&lt;sub&gt;c&lt;/sub&gt;,1-B&lt;sub&gt;c&lt;/sub&gt;)</target>
        </trans-unit>
        <trans-unit id="cc5aba667e99a01cdbd1e5f34a462e79cee75cc7" translate="yes" xml:space="preserve">
          <source>(1-R&lt;sub&gt;d&lt;/sub&gt;,1-G&lt;sub&gt;d&lt;/sub&gt;,1-B&lt;sub&gt;d&lt;/sub&gt;)</source>
          <target state="translated">(1-R&lt;sub&gt;d&lt;/sub&gt;,1-G&lt;sub&gt;d&lt;/sub&gt;,1-B&lt;sub&gt;d&lt;/sub&gt;)</target>
        </trans-unit>
        <trans-unit id="e8e26f555681e2a0f3b45f2123b5bab9d839f9f3" translate="yes" xml:space="preserve">
          <source>(1-R&lt;sub&gt;s0&lt;/sub&gt;,1-G&lt;sub&gt;s0&lt;/sub&gt;,1-B&lt;sub&gt;s0&lt;/sub&gt;)</source>
          <target state="translated">(1-R&lt;sub&gt;s0&lt;/sub&gt;,1-G&lt;sub&gt;s0&lt;/sub&gt;,1-B&lt;sub&gt;s0&lt;/sub&gt;)</target>
        </trans-unit>
        <trans-unit id="02a49a4e0a4d9a1867901e16005c27278de70301" translate="yes" xml:space="preserve">
          <source>(1-R&lt;sub&gt;s1&lt;/sub&gt;,1-G&lt;sub&gt;s1&lt;/sub&gt;,1-B&lt;sub&gt;s1&lt;/sub&gt;)</source>
          <target state="translated">(1-R&lt;sub&gt;s1&lt;/sub&gt;,1-G&lt;sub&gt;s1&lt;/sub&gt;,1-B&lt;sub&gt;s1&lt;/sub&gt;)</target>
        </trans-unit>
        <trans-unit id="b07a323e81ac25db01d399077c4e092f1ac765d1" translate="yes" xml:space="preserve">
          <source>(&lt;code&gt;baseArrayLayer&lt;/code&gt; + &lt;code&gt;layerCount&lt;/code&gt;) &lt;strong&gt;must&lt;/strong&gt; be less than or equal to the &lt;code&gt;arrayLayers&lt;/code&gt; specified in &lt;a href=&quot;#VkImageCreateInfo&quot;&gt;VkImageCreateInfo&lt;/a&gt; when the image was created</source>
          <target state="translated">( &lt;code&gt;baseArrayLayer&lt;/code&gt; + &lt;code&gt;layerCount&lt;/code&gt; 는 ) &lt;strong&gt;해야&lt;/strong&gt; 미만이거나 동일 &lt;code&gt;arrayLayers&lt;/code&gt; 에 지정된 &lt;a href=&quot;#VkImageCreateInfo&quot;&gt;VkImageCreateInfo&lt;/a&gt; 이미지가 생성되었을 때</target>
        </trans-unit>
        <trans-unit id="5121f61954d68f1f95cacc4afc261aaf23d0cab8" translate="yes" xml:space="preserve">
          <source>(&lt;code&gt;indexSize&lt;/code&gt; * (&lt;code&gt;firstIndex&lt;/code&gt; + &lt;code&gt;indexCount&lt;/code&gt;) + &lt;code&gt;offset&lt;/code&gt;) &lt;strong&gt;must&lt;/strong&gt; be less than or equal to the size of the currently bound index buffer, with &lt;code&gt;indexSize&lt;/code&gt; being based on the type specified by &lt;code&gt;indexType&lt;/code&gt;, where the index buffer, &lt;code&gt;indexType&lt;/code&gt;, and &lt;code&gt;offset&lt;/code&gt; are specified via &lt;code&gt;vkCmdBindIndexBuffer&lt;/code&gt;</source>
          <target state="translated">( &lt;code&gt;indexSize&lt;/code&gt; * ( &lt;code&gt;firstIndex&lt;/code&gt; + &lt;code&gt;indexCount&lt;/code&gt; ) + &lt;code&gt;offset&lt;/code&gt; ) &lt;strong&gt;은&lt;/strong&gt; 현재 바인딩 된 인덱스 버퍼의 크기보다 작거나 같아야하며 &lt;code&gt;indexSize&lt;/code&gt; 는 &lt;code&gt;indexType&lt;/code&gt; 에 의해 지정된 유형을 기반으로합니다 . 여기서 index 버퍼, &lt;code&gt;indexType&lt;/code&gt; 및 &lt;code&gt;offset&lt;/code&gt; 은 다음을 통해 지정됩니다. &lt;code&gt;vkCmdBindIndexBuffer&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e8f5d778a131090c0902e6b68409468edf359c1e" translate="yes" xml:space="preserve">
          <source>(&lt;code&gt;indexSize&lt;/code&gt; * (&lt;code&gt;firstIndex&lt;/code&gt; + &lt;code&gt;indexCount&lt;/code&gt;) + &lt;code&gt;offset&lt;/code&gt;) &lt;strong&gt;must&lt;/strong&gt; be less than or equal to the size of the currently bound index buffer, with indexSize being based on the type specified by &lt;code&gt;indexType&lt;/code&gt;, where the index buffer, &lt;code&gt;indexType&lt;/code&gt;, and &lt;code&gt;offset&lt;/code&gt; are specified via &lt;code&gt;vkCmdBindIndexBuffer&lt;/code&gt;</source>
          <target state="translated">( &lt;code&gt;indexSize&lt;/code&gt; * ( &lt;code&gt;firstIndex&lt;/code&gt; + &lt;code&gt;indexCount&lt;/code&gt; ) + &lt;code&gt;offset&lt;/code&gt; ) &lt;strong&gt;은&lt;/strong&gt; 현재 바인딩 된 인덱스 버퍼의 크기보다 작거나 같아야하며 indexSize는 &lt;code&gt;indexType&lt;/code&gt; 에 의해 지정된 유형을 기반으로합니다 . 여기서 index 버퍼, &lt;code&gt;indexType&lt;/code&gt; 및 &lt;code&gt;offset&lt;/code&gt; 은 다음을 통해 지정됩니다. &lt;code&gt;vkCmdBindIndexBuffer&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e76f116d492ebdb6a6b67f9c23ec7ed6834e6bdb" translate="yes" xml:space="preserve">
          <source>(&lt;code&gt;x&lt;/code&gt; + &lt;code&gt;width&lt;/code&gt;) &lt;strong&gt;must&lt;/strong&gt; be less than or equal to &lt;code&gt;viewportBoundsRange&lt;/code&gt;[1]</source>
          <target state="translated">( &lt;code&gt;x&lt;/code&gt; + &lt;code&gt;width&lt;/code&gt; ) &lt;strong&gt;는 &lt;/strong&gt; &lt;code&gt;viewportBoundsRange&lt;/code&gt; [1] 보다 작거나 같아야합니다 .</target>
        </trans-unit>
        <trans-unit id="f6f97a1c591d810911293580a4b8d05f86b03727" translate="yes" xml:space="preserve">
          <source>(&lt;code&gt;y&lt;/code&gt; + &lt;code&gt;height&lt;/code&gt;) &lt;strong&gt;must&lt;/strong&gt; be less than or equal to &lt;code&gt;viewportBoundsRange&lt;/code&gt;[1]</source>
          <target state="translated">( &lt;code&gt;y&lt;/code&gt; + &lt;code&gt;height&lt;/code&gt; ) &lt;strong&gt;는 &lt;/strong&gt; &lt;code&gt;viewportBoundsRange&lt;/code&gt; [1] 보다 작거나 같아야합니다 .</target>
        </trans-unit>
        <trans-unit id="68544c28a23257284963f21e4091ff4d4bf37e89" translate="yes" xml:space="preserve">
          <source>(A&lt;sub&gt;c&lt;/sub&gt;,A&lt;sub&gt;c&lt;/sub&gt;,A&lt;sub&gt;c&lt;/sub&gt;)</source>
          <target state="translated">(A&lt;sub&gt;c&lt;/sub&gt;,A&lt;sub&gt;c&lt;/sub&gt;,A&lt;sub&gt;c&lt;/sub&gt;)</target>
        </trans-unit>
        <trans-unit id="2a6aec90aaeb07d95f588f1f4bf7a5a95e0c0b51" translate="yes" xml:space="preserve">
          <source>(A&lt;sub&gt;d&lt;/sub&gt;,A&lt;sub&gt;d&lt;/sub&gt;,A&lt;sub&gt;d&lt;/sub&gt;)</source>
          <target state="translated">(A&lt;sub&gt;d&lt;/sub&gt;,A&lt;sub&gt;d&lt;/sub&gt;,A&lt;sub&gt;d&lt;/sub&gt;)</target>
        </trans-unit>
        <trans-unit id="6d42c1e8343b9cf00f379b8c8fe025f4b6b0459b" translate="yes" xml:space="preserve">
          <source>(A&lt;sub&gt;s0&lt;/sub&gt;,A&lt;sub&gt;s0&lt;/sub&gt;,A&lt;sub&gt;s0&lt;/sub&gt;)</source>
          <target state="translated">(A&lt;sub&gt;s0&lt;/sub&gt;,A&lt;sub&gt;s0&lt;/sub&gt;,A&lt;sub&gt;s0&lt;/sub&gt;)</target>
        </trans-unit>
        <trans-unit id="02fba9e8edab8582116c4950377e532cf988e471" translate="yes" xml:space="preserve">
          <source>(A&lt;sub&gt;s1&lt;/sub&gt;,A&lt;sub&gt;s1&lt;/sub&gt;,A&lt;sub&gt;s1&lt;/sub&gt;)</source>
          <target state="translated">(A&lt;sub&gt;s1&lt;/sub&gt;,A&lt;sub&gt;s1&lt;/sub&gt;,A&lt;sub&gt;s1&lt;/sub&gt;)</target>
        </trans-unit>
        <trans-unit id="7ecf978849156c742fcef6c9516f8de375d8b4c8" translate="yes" xml:space="preserve">
          <source>(A&lt;sub&gt;x&lt;/sub&gt;, A&lt;sub&gt;y&lt;/sub&gt;, A&lt;sub&gt;z&lt;/sub&gt;) where A&lt;sub&gt;x&lt;/sub&gt;, A&lt;sub&gt;y&lt;/sub&gt;, and A&lt;sub&gt;z&lt;/sub&gt; are all integer powers of two. In this case the following restrictions apply to all image transfer operations:</source>
          <target state="translated">(A &lt;sub&gt;x&lt;/sub&gt; , A &lt;sub&gt;y&lt;/sub&gt; , A &lt;sub&gt;z&lt;/sub&gt; ) 여기서 A &lt;sub&gt;x&lt;/sub&gt; , A &lt;sub&gt;y&lt;/sub&gt; 및 A &lt;sub&gt;z&lt;/sub&gt; 는 모두 2의 정수 제곱입니다. 이 경우 모든 이미지 전송 작업에 다음 제한이 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="5c1ac1b94604223175ce24df5389b97c2176dd28" translate="yes" xml:space="preserve">
          <source>(R&lt;sub&gt;c&lt;/sub&gt;,G&lt;sub&gt;c&lt;/sub&gt;,B&lt;sub&gt;c&lt;/sub&gt;)</source>
          <target state="translated">(R&lt;sub&gt;c&lt;/sub&gt;,G&lt;sub&gt;c&lt;/sub&gt;,B&lt;sub&gt;c&lt;/sub&gt;)</target>
        </trans-unit>
        <trans-unit id="e4014f128d46d9c9a4689f4628d072e13a10bf13" translate="yes" xml:space="preserve">
          <source>(R&lt;sub&gt;d&lt;/sub&gt;,G&lt;sub&gt;d&lt;/sub&gt;,B&lt;sub&gt;d&lt;/sub&gt;)</source>
          <target state="translated">(R&lt;sub&gt;d&lt;/sub&gt;,G&lt;sub&gt;d&lt;/sub&gt;,B&lt;sub&gt;d&lt;/sub&gt;)</target>
        </trans-unit>
        <trans-unit id="8efe9e53fdbbaf27b320f99a5b56e1cfd1a6e862" translate="yes" xml:space="preserve">
          <source>(R&lt;sub&gt;s0&lt;/sub&gt;,G&lt;sub&gt;s0&lt;/sub&gt;,B&lt;sub&gt;s0&lt;/sub&gt;)</source>
          <target state="translated">(R&lt;sub&gt;s0&lt;/sub&gt;,G&lt;sub&gt;s0&lt;/sub&gt;,B&lt;sub&gt;s0&lt;/sub&gt;)</target>
        </trans-unit>
        <trans-unit id="f762d5d7504b5b361a64ad93ccdb188849d5045c" translate="yes" xml:space="preserve">
          <source>(R&lt;sub&gt;s1&lt;/sub&gt;,G&lt;sub&gt;s1&lt;/sub&gt;,B&lt;sub&gt;s1&lt;/sub&gt;)</source>
          <target state="translated">(R&lt;sub&gt;s1&lt;/sub&gt;,G&lt;sub&gt;s1&lt;/sub&gt;,B&lt;sub&gt;s1&lt;/sub&gt;)</target>
        </trans-unit>
        <trans-unit id="ac1450c322f0212314bcc63018f16dfbda458e6a" translate="yes" xml:space="preserve">
          <source>(f,f,f); f = min(A&lt;sub&gt;s0&lt;/sub&gt;,1-A&lt;sub&gt;d&lt;/sub&gt;)</source>
          <target state="translated">(f, f, f); f = 최소 (A &lt;sub&gt;s0&lt;/sub&gt; , 1-A &lt;sub&gt;d&lt;/sub&gt; )</target>
        </trans-unit>
        <trans-unit id="a5fd0181f65f8f44f27d7aa962b5fcc8c84f4e37" translate="yes" xml:space="preserve">
          <source>* (any &lt;code&gt;pName&lt;/code&gt; not covered above)</source>
          <target state="translated">* ( 위에 포함되지 않은 모든 &lt;code&gt;pName&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="b6589fc6ab0dc82cf12099d1c2d40ab994e8410c" translate="yes" xml:space="preserve">
          <source>0</source>
          <target state="translated">0</target>
        </trans-unit>
        <trans-unit id="a5ee1b197e16d4d6d9181e4b1eb2ea21bf8a46a1" translate="yes" xml:space="preserve">
          <source>0, 1, or the maximum representable positive integer value, for signed or unsigned integer components</source>
          <target state="translated">부호있는 또는 부호없는 정수 구성 요소의 경우 0, 1 또는 최대 표현 가능한 양의 정수 값</target>
        </trans-unit>
        <trans-unit id="081eeb5aab815730d4cd0479a0aac9fce8f1508d" translate="yes" xml:space="preserve">
          <source>0.0 or 1.0, for floating-point components</source>
          <target state="translated">부동 소수점 구성 요소의 경우 0.0 또는 1.0</target>
        </trans-unit>
        <trans-unit id="227d3862f50aaff9a6483beea2a9a0653705ee8e" translate="yes" xml:space="preserve">
          <source>1-A&lt;sub&gt;c&lt;/sub&gt;</source>
          <target state="translated">1-A&lt;sub&gt;c&lt;/sub&gt;</target>
        </trans-unit>
        <trans-unit id="68bb8a7271c851713042c18b38822565ff81c657" translate="yes" xml:space="preserve">
          <source>1-A&lt;sub&gt;d&lt;/sub&gt;</source>
          <target state="translated">1-A&lt;sub&gt;d&lt;/sub&gt;</target>
        </trans-unit>
        <trans-unit id="c915951adcf1c294fae48c5db250d401358f76cb" translate="yes" xml:space="preserve">
          <source>1-A&lt;sub&gt;s0&lt;/sub&gt;</source>
          <target state="translated">1-A&lt;sub&gt;s0&lt;/sub&gt;</target>
        </trans-unit>
        <trans-unit id="e1d8799b755113f61278767016559d2fa7f1394c" translate="yes" xml:space="preserve">
          <source>1-A&lt;sub&gt;s1&lt;/sub&gt;</source>
          <target state="translated">1-A&lt;sub&gt;s1&lt;/sub&gt;</target>
        </trans-unit>
        <trans-unit id="a6ce66887773dd2f10404d921161cdccff52a983" translate="yes" xml:space="preserve">
          <source>1D, 0, 0</source>
          <target state="translated">1D, 0, 0</target>
        </trans-unit>
        <trans-unit id="bde27cb9cacffeb2666c321880ca4e5ec1f92dce" translate="yes" xml:space="preserve">
          <source>1D, 1, 0</source>
          <target state="translated">1D, 1, 0</target>
        </trans-unit>
        <trans-unit id="728d148103e32cde9d97b9ea212f45dde3695571" translate="yes" xml:space="preserve">
          <source>2D, 0, 0</source>
          <target state="translated">2D, 0, 0</target>
        </trans-unit>
        <trans-unit id="4fe0ef6ef8e47f80e9de8b10285bcf195e4ff415" translate="yes" xml:space="preserve">
          <source>2D, 0, 1</source>
          <target state="translated">2D, 0, 1</target>
        </trans-unit>
        <trans-unit id="3a32f42f9b084590c0e4aacb30c5d8cfb708cb9e" translate="yes" xml:space="preserve">
          <source>2D, 1, 0</source>
          <target state="translated">2D, 1, 0</target>
        </trans-unit>
        <trans-unit id="41e6883c5d7b3ec74bb69176f65ba816f0aeb810" translate="yes" xml:space="preserve">
          <source>2D, 1, 1</source>
          <target state="translated">2D, 1, 1</target>
        </trans-unit>
        <trans-unit id="e73b1ef9066e2c3ec69638f7130a6245754a2180" translate="yes" xml:space="preserve">
          <source>3D textures are blitted slice by slice. Slices in the source region bounded by &lt;code&gt;srcOffsets&lt;/code&gt;[0].&lt;code&gt;z&lt;/code&gt; and &lt;code&gt;srcOffsets&lt;/code&gt;[1].&lt;code&gt;z&lt;/code&gt; are copied to slices in the destination region bounded by &lt;code&gt;dstOffsets&lt;/code&gt;[0].&lt;code&gt;z&lt;/code&gt; and &lt;code&gt;dstOffsets&lt;/code&gt;[1].&lt;code&gt;z&lt;/code&gt;. For each destination slice, a source z coordinate is linearly interpolated between &lt;code&gt;srcOffsets&lt;/code&gt;[0].&lt;code&gt;z&lt;/code&gt; and &lt;code&gt;srcOffsets&lt;/code&gt;[1].&lt;code&gt;z&lt;/code&gt;. If the &lt;code&gt;filter&lt;/code&gt; parameter is &lt;code&gt;VK_FILTER_LINEAR&lt;/code&gt; then the value sampled from the source image is taken by doing linear filtering using the interpolated z coordinate. If &lt;code&gt;filter&lt;/code&gt; parameter is &lt;code&gt;VK_FILTER_NEAREST&lt;/code&gt; then value sampled from the source image is taken from the single nearest slice (with undefined rounding mode).</source>
          <target state="translated">3D 텍스처는 슬라이스별로 블리트됩니다. &lt;code&gt;srcOffsets&lt;/code&gt; [0]에 의해 경계가 지정된 소스 영역의 슬라이스 . &lt;code&gt;z&lt;/code&gt; 및 &lt;code&gt;srcOffsets&lt;/code&gt; [1]. &lt;code&gt;z&lt;/code&gt; 는 &lt;code&gt;dstOffsets&lt;/code&gt; [0]으로 경계가 지정된 대상 영역의 슬라이스로 복사됩니다 . &lt;code&gt;z&lt;/code&gt; 및 &lt;code&gt;dstOffsets&lt;/code&gt; [1]. &lt;code&gt;z&lt;/code&gt; . 각 대상 슬라이스에 대해 소스 z 좌표가 &lt;code&gt;srcOffsets&lt;/code&gt; [0] 사이에 선형 보간 됩니다. &lt;code&gt;z&lt;/code&gt; 및 &lt;code&gt;srcOffsets&lt;/code&gt; [1]. &lt;code&gt;z&lt;/code&gt; . 는 IF &lt;code&gt;filter&lt;/code&gt; 파라미터이다 &lt;code&gt;VK_FILTER_LINEAR&lt;/code&gt; 그런 다음 보간 된 z 좌표를 사용하여 선형 필터링을 수행하여 소스 이미지에서 샘플링 된 값을 가져옵니다. &lt;code&gt;filter&lt;/code&gt; 매개 변수가 &lt;code&gt;VK_FILTER_NEAREST&lt;/code&gt; 인 경우 소스 이미지에서 샘플링 된 값은 정의되지 않은 라운딩 모드를 사용하여 가장 가까운 단일 슬라이스에서 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="110da08dfd91aec27780343b820d5b1185179ebc" translate="yes" xml:space="preserve">
          <source>3D, 0, 0</source>
          <target state="translated">3D, 0, 0</target>
        </trans-unit>
        <trans-unit id="90d1953ff4f05a01d6cf793669e700bb118f5c7b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#PFN_vkAllocationFunction&quot;&gt;PFN_vkAllocationFunction&lt;/a&gt;, &lt;a href=&quot;#PFN_vkFreeFunction&quot;&gt;PFN_vkFreeFunction&lt;/a&gt;, &lt;a href=&quot;#PFN_vkInternalAllocationNotification&quot;&gt;PFN_vkInternalAllocationNotification&lt;/a&gt;, &lt;a href=&quot;#PFN_vkInternalFreeNotification&quot;&gt;PFN_vkInternalFreeNotification&lt;/a&gt;, &lt;a href=&quot;#PFN_vkReallocationFunction&quot;&gt;PFN_vkReallocationFunction&lt;/a&gt;, &lt;a href=&quot;#vkAllocateMemory&quot;&gt;vkAllocateMemory&lt;/a&gt;, &lt;a href=&quot;#vkCreateBuffer&quot;&gt;vkCreateBuffer&lt;/a&gt;, &lt;a href=&quot;#vkCreateBufferView&quot;&gt;vkCreateBufferView&lt;/a&gt;, &lt;a href=&quot;#vkCreateCommandPool&quot;&gt;vkCreateCommandPool&lt;/a&gt;, &lt;a href=&quot;#vkCreateComputePipelines&quot;&gt;vkCreateComputePipelines&lt;/a&gt;, &lt;a href=&quot;#vkCreateDescriptorPool&quot;&gt;vkCreateDescriptorPool&lt;/a&gt;, &lt;a href=&quot;#vkCreateDescriptorSetLayout&quot;&gt;vkCreateDescriptorSetLayout&lt;/a&gt;, &lt;a href=&quot;#vkCreateDevice&quot;&gt;vkCreateDevice&lt;/a&gt;, &lt;a href=&quot;#vkCreateEvent&quot;&gt;vkCreateEvent&lt;/a&gt;, &lt;a href=&quot;#vkCreateFence&quot;&gt;vkCreateFence&lt;/a&gt;, &lt;a href=&quot;#vkCreateFramebuffer&quot;&gt;vkCreateFramebuffer&lt;/a&gt;, &lt;a href=&quot;#vkCreateGraphicsPipelines&quot;&gt;vkCreateGraphicsPipelines&lt;/a&gt;, &lt;a href=&quot;#vkCreateImage&quot;&gt;vkCreateImage&lt;/a&gt;, &lt;a href=&quot;#vkCreateImageView&quot;&gt;vkCreateImageView&lt;/a&gt;, &lt;a href=&quot;#vkCreateInstance&quot;&gt;vkCreateInstance&lt;/a&gt;, &lt;a href=&quot;#vkCreatePipelineCache&quot;&gt;vkCreatePipelineCache&lt;/a&gt;, &lt;a href=&quot;#vkCreatePipelineLayout&quot;&gt;vkCreatePipelineLayout&lt;/a&gt;, &lt;a href=&quot;#vkCreateQueryPool&quot;&gt;vkCreateQueryPool&lt;/a&gt;, &lt;a href=&quot;#vkCreateRenderPass&quot;&gt;vkCreateRenderPass&lt;/a&gt;, &lt;a href=&quot;#vkCreateSampler&quot;&gt;vkCreateSampler&lt;/a&gt;, &lt;a href=&quot;#vkCreateSemaphore&quot;&gt;vkCreateSemaphore&lt;/a&gt;, &lt;a href=&quot;#vkCreateShaderModule&quot;&gt;vkCreateShaderModule&lt;/a&gt;, &lt;a href=&quot;#vkDestroyBuffer&quot;&gt;vkDestroyBuffer&lt;/a&gt;, &lt;a href=&quot;#vkDestroyBufferView&quot;&gt;vkDestroyBufferView&lt;/a&gt;, &lt;a href=&quot;#vkDestroyCommandPool&quot;&gt;vkDestroyCommandPool&lt;/a&gt;, &lt;a href=&quot;#vkDestroyDescriptorPool&quot;&gt;vkDestroyDescriptorPool&lt;/a&gt;, &lt;a href=&quot;#vkDestroyDescriptorSetLayout&quot;&gt;vkDestroyDescriptorSetLayout&lt;/a&gt;, &lt;a href=&quot;#vkDestroyDevice&quot;&gt;vkDestroyDevice&lt;/a&gt;, &lt;a href=&quot;#vkDestroyEvent&quot;&gt;vkDestroyEvent&lt;/a&gt;, &lt;a href=&quot;#vkDestroyFence&quot;&gt;vkDestroyFence&lt;/a&gt;, &lt;a href=&quot;#vkDestroyFramebuffer&quot;&gt;vkDestroyFramebuffer&lt;/a&gt;, &lt;a href=&quot;#vkDestroyImage&quot;&gt;vkDestroyImage&lt;/a&gt;, &lt;a href=&quot;#vkDestroyImageView&quot;&gt;vkDestroyImageView&lt;/a&gt;, &lt;a href=&quot;#vkDestroyInstance&quot;&gt;vkDestroyInstance&lt;/a&gt;, &lt;a href=&quot;#vkDestroyPipeline&quot;&gt;vkDestroyPipeline&lt;/a&gt;, &lt;a href=&quot;#vkDestroyPipelineCache&quot;&gt;vkDestroyPipelineCache&lt;/a&gt;, &lt;a href=&quot;#vkDestroyPipelineLayout&quot;&gt;vkDestroyPipelineLayout&lt;/a&gt;, &lt;a href=&quot;#vkDestroyQueryPool&quot;&gt;vkDestroyQueryPool&lt;/a&gt;, &lt;a href=&quot;#vkDestroyRenderPass&quot;&gt;vkDestroyRenderPass&lt;/a&gt;, &lt;a href=&quot;#vkDestroySampler&quot;&gt;vkDestroySampler&lt;/a&gt;, &lt;a href=&quot;#vkDestroySemaphore&quot;&gt;vkDestroySemaphore&lt;/a&gt;, &lt;a href=&quot;#vkDestroyShaderModule&quot;&gt;vkDestroyShaderModule&lt;/a&gt;, &lt;a href=&quot;#vkFreeMemory&quot;&gt;vkFreeMemory&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#PFN_vkAllocationFunction&quot;&gt;PFN_vkAllocationFunction&lt;/a&gt; , &lt;a href=&quot;#PFN_vkFreeFunction&quot;&gt;PFN_vkFreeFunction&lt;/a&gt; , &lt;a href=&quot;#PFN_vkInternalAllocationNotification&quot;&gt;PFN_vkInternalAllocationNotification&lt;/a&gt; , &lt;a href=&quot;#PFN_vkInternalFreeNotification&quot;&gt;PFN_vkInternalFreeNotification&lt;/a&gt; , &lt;a href=&quot;#PFN_vkReallocationFunction&quot;&gt;PFN_vkReallocationFunction&lt;/a&gt; , &lt;a href=&quot;#vkAllocateMemory&quot;&gt;vkAllocateMemory&lt;/a&gt; , &lt;a href=&quot;#vkCreateBuffer&quot;&gt;vkCreateBuffer&lt;/a&gt; , &lt;a href=&quot;#vkCreateBufferView&quot;&gt;vkCreateBufferView&lt;/a&gt; , &lt;a href=&quot;#vkCreateCommandPool&quot;&gt;vkCreateCommandPool&lt;/a&gt; , &lt;a href=&quot;#vkCreateComputePipelines&quot;&gt;vkCreateComputePipelines&lt;/a&gt; , &lt;a href=&quot;#vkCreateDescriptorPool&quot;&gt;vkCreateDescriptorPool&lt;/a&gt; , &lt;a href=&quot;#vkCreateDescriptorSetLayout&quot;&gt;vkCreateDescriptorSetLayout&lt;/a&gt; , &lt;a href=&quot;#vkCreateDevice&quot;&gt;vkCreateDevice&lt;/a&gt; , &lt;a href=&quot;#vkCreateEvent&quot;&gt;vkCreateEvent&lt;/a&gt; , &lt;a href=&quot;#vkCreateFence&quot;&gt;vkCreateFence&lt;/a&gt; , &lt;a href=&quot;#vkCreateFramebuffer&quot;&gt;vkCreateFramebuffer&lt;/a&gt; , &lt;a href=&quot;#vkCreateGraphicsPipelines&quot;&gt;vkCreateGraphicsPipelines&lt;/a&gt; , &lt;a href=&quot;#vkCreateImage&quot;&gt;vkCreateImage&lt;/a&gt;, &lt;a href=&quot;#vkCreateImageView&quot;&gt;vkCreateImageView&lt;/a&gt; , &lt;a href=&quot;#vkCreateInstance&quot;&gt;vkCreateInstance&lt;/a&gt; , &lt;a href=&quot;#vkCreatePipelineCache&quot;&gt;vkCreatePipelineCache&lt;/a&gt; , &lt;a href=&quot;#vkCreatePipelineLayout&quot;&gt;vkCreatePipelineLayout&lt;/a&gt; , &lt;a href=&quot;#vkCreateQueryPool&quot;&gt;vkCreateQueryPool&lt;/a&gt; , &lt;a href=&quot;#vkCreateRenderPass&quot;&gt;vkCreateRenderPass&lt;/a&gt; , &lt;a href=&quot;#vkCreateSampler&quot;&gt;vkCreateSampler&lt;/a&gt; , &lt;a href=&quot;#vkCreateSemaphore&quot;&gt;vkCreateSemaphore&lt;/a&gt; , &lt;a href=&quot;#vkCreateShaderModule&quot;&gt;vkCreateShaderModule&lt;/a&gt; , &lt;a href=&quot;#vkDestroyBuffer&quot;&gt;vkDestroyBuffer&lt;/a&gt; , &lt;a href=&quot;#vkDestroyBufferView&quot;&gt;vkDestroyBufferView&lt;/a&gt; , &lt;a href=&quot;#vkDestroyCommandPool&quot;&gt;vkDestroyCommandPool&lt;/a&gt; , &lt;a href=&quot;#vkDestroyDescriptorPool&quot;&gt;vkDestroyDescriptorPool&lt;/a&gt; , &lt;a href=&quot;#vkDestroyDescriptorSetLayout&quot;&gt;vkDestroyDescriptorSetLayout&lt;/a&gt; , &lt;a href=&quot;#vkDestroyDevice&quot;&gt;vkDestroyDevice&lt;/a&gt; , &lt;a href=&quot;#vkDestroyEvent&quot;&gt;vkDestroyEvent&lt;/a&gt; , &lt;a href=&quot;#vkDestroyFence&quot;&gt;vkDestroyFence&lt;/a&gt; , &lt;a href=&quot;#vkDestroyFramebuffer&quot;&gt;vkDestroyFramebuffer&lt;/a&gt; ,&lt;a href=&quot;#vkDestroyImage&quot;&gt;vkDestroyImage&lt;/a&gt; , &lt;a href=&quot;#vkDestroyImageView&quot;&gt;vkDestroyImageView&lt;/a&gt; , &lt;a href=&quot;#vkDestroyInstance&quot;&gt;vkDestroyInstance&lt;/a&gt; , &lt;a href=&quot;#vkDestroyPipeline&quot;&gt;vkDestroyPipeline&lt;/a&gt; , &lt;a href=&quot;#vkDestroyPipelineCache&quot;&gt;vkDestroyPipelineCache&lt;/a&gt; , &lt;a href=&quot;#vkDestroyPipelineLayout&quot;&gt;vkDestroyPipelineLayout&lt;/a&gt; , &lt;a href=&quot;#vkDestroyQueryPool&quot;&gt;vkDestroyQueryPool&lt;/a&gt; , &lt;a href=&quot;#vkDestroyRenderPass&quot;&gt;vkDestroyRenderPass&lt;/a&gt; , &lt;a href=&quot;#vkDestroySampler&quot;&gt;vkDestroySampler&lt;/a&gt; , &lt;a href=&quot;#vkDestroySemaphore&quot;&gt;vkDestroySemaphore&lt;/a&gt; , &lt;a href=&quot;#vkDestroyShaderModule&quot;&gt;vkDestroyShaderModule&lt;/a&gt; , &lt;a href=&quot;#vkFreeMemory&quot;&gt;vkFreeMemory&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="04b5a4269ca90984e60e2c4e6058ad768d0edef3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#PFN_vkInternalAllocationNotification&quot;&gt;PFN_vkInternalAllocationNotification&lt;/a&gt;, &lt;a href=&quot;#PFN_vkInternalFreeNotification&quot;&gt;PFN_vkInternalFreeNotification&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#PFN_vkInternalAllocationNotification&quot;&gt;PFN_vkInternalAllocationNotification&lt;/a&gt; , &lt;a href=&quot;#PFN_vkInternalFreeNotification&quot;&gt;PFN_vkInternalFreeNotification&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8572f13bbe625a06948158b7e8fe455012ef9f09" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#PFN_vkVoidFunction&quot;&gt;PFN_vkVoidFunction&lt;/a&gt;, &lt;a href=&quot;#VkDevice&quot;&gt;VkDevice&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#PFN_vkVoidFunction&quot;&gt;PFN_vkVoidFunction&lt;/a&gt; , &lt;a href=&quot;#VkDevice&quot;&gt;VkDevice&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2bf001e29ce365afe5c8d64a214c12f782328947" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#PFN_vkVoidFunction&quot;&gt;PFN_vkVoidFunction&lt;/a&gt;, &lt;a href=&quot;#VkInstance&quot;&gt;VkInstance&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#PFN_vkVoidFunction&quot;&gt;PFN_vkVoidFunction&lt;/a&gt; , &lt;a href=&quot;#VkInstance&quot;&gt;VkInstance&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="42f87d7e5f22c9dacfd3b87673fad730784525b5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkAccessFlagBits&quot;&gt;VkAccessFlagBits&lt;/a&gt;, &lt;a href=&quot;#VkBufferMemoryBarrier&quot;&gt;VkBufferMemoryBarrier&lt;/a&gt;, &lt;a href=&quot;#VkImageMemoryBarrier&quot;&gt;VkImageMemoryBarrier&lt;/a&gt;, &lt;a href=&quot;#VkMemoryBarrier&quot;&gt;VkMemoryBarrier&lt;/a&gt;, &lt;a href=&quot;#VkSubpassDependency&quot;&gt;VkSubpassDependency&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkAccessFlagBits&quot;&gt;VkAccessFlagBits&lt;/a&gt; , &lt;a href=&quot;#VkBufferMemoryBarrier&quot;&gt;VkBufferMemoryBarrier&lt;/a&gt; , &lt;a href=&quot;#VkImageMemoryBarrier&quot;&gt;VkImageMemoryBarrier&lt;/a&gt; , &lt;a href=&quot;#VkMemoryBarrier&quot;&gt;VkMemoryBarrier&lt;/a&gt; , &lt;a href=&quot;#VkSubpassDependency&quot;&gt;VkSubpassDependency&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="fd0e0a0a3d2b137808cd11a32d4381d7684e12b8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkAccessFlags&quot;&gt;VkAccessFlags&lt;/a&gt;, &lt;a href=&quot;#VkBuffer&quot;&gt;VkBuffer&lt;/a&gt;, &lt;code&gt;VkDeviceSize&lt;/code&gt;, &lt;a href=&quot;#VkStructureType&quot;&gt;VkStructureType&lt;/a&gt;, &lt;a href=&quot;#vkCmdPipelineBarrier&quot;&gt;vkCmdPipelineBarrier&lt;/a&gt;, &lt;a href=&quot;#vkCmdWaitEvents&quot;&gt;vkCmdWaitEvents&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkAccessFlags&quot;&gt;VkAccessFlags&lt;/a&gt; , &lt;a href=&quot;#VkBuffer&quot;&gt;VkBuffer&lt;/a&gt; , &lt;code&gt;VkDeviceSize&lt;/code&gt; , &lt;a href=&quot;#VkStructureType&quot;&gt;VkStructureType&lt;/a&gt; , &lt;a href=&quot;#vkCmdPipelineBarrier&quot;&gt;vkCmdPipelineBarrier&lt;/a&gt; , &lt;a href=&quot;#vkCmdWaitEvents&quot;&gt;vkCmdWaitEvents&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ac002ad94a0fb2bc526ed4a47c2b370cf98e11cf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkAccessFlags&quot;&gt;VkAccessFlags&lt;/a&gt;, &lt;a href=&quot;#VkDependencyFlags&quot;&gt;VkDependencyFlags&lt;/a&gt;, &lt;a href=&quot;#VkPipelineStageFlags&quot;&gt;VkPipelineStageFlags&lt;/a&gt;, &lt;a href=&quot;#VkRenderPassCreateInfo&quot;&gt;VkRenderPassCreateInfo&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkAccessFlags&quot;&gt;VkAccessFlags&lt;/a&gt; , &lt;a href=&quot;#VkDependencyFlags&quot;&gt;VkDependencyFlags&lt;/a&gt; , &lt;a href=&quot;#VkPipelineStageFlags&quot;&gt;VkPipelineStageFlags&lt;/a&gt; , &lt;a href=&quot;#VkRenderPassCreateInfo&quot;&gt;VkRenderPassCreateInfo&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c68ac0c0bcac2b2b41e0fd18b9cd71429474f4e9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkAccessFlags&quot;&gt;VkAccessFlags&lt;/a&gt;, &lt;a href=&quot;#VkImage&quot;&gt;VkImage&lt;/a&gt;, &lt;a href=&quot;#VkImageLayout&quot;&gt;VkImageLayout&lt;/a&gt;, &lt;a href=&quot;#VkImageSubresourceRange&quot;&gt;VkImageSubresourceRange&lt;/a&gt;, &lt;a href=&quot;#VkStructureType&quot;&gt;VkStructureType&lt;/a&gt;, &lt;a href=&quot;#vkCmdPipelineBarrier&quot;&gt;vkCmdPipelineBarrier&lt;/a&gt;, &lt;a href=&quot;#vkCmdWaitEvents&quot;&gt;vkCmdWaitEvents&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkAccessFlags&quot;&gt;VkAccessFlags&lt;/a&gt; , &lt;a href=&quot;#VkImage&quot;&gt;VkImage&lt;/a&gt; , &lt;a href=&quot;#VkImageLayout&quot;&gt;VkImageLayout&lt;/a&gt; , &lt;a href=&quot;#VkImageSubresourceRange&quot;&gt;VkImageSubresourceRange&lt;/a&gt; , &lt;a href=&quot;#VkStructureType&quot;&gt;VkStructureType&lt;/a&gt; , &lt;a href=&quot;#vkCmdPipelineBarrier&quot;&gt;vkCmdPipelineBarrier&lt;/a&gt; , &lt;a href=&quot;#vkCmdWaitEvents&quot;&gt;vkCmdWaitEvents&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3daf9ffb1748eda617b625416670d3359cac2db0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkAccessFlags&quot;&gt;VkAccessFlags&lt;/a&gt;, &lt;a href=&quot;#VkStructureType&quot;&gt;VkStructureType&lt;/a&gt;, &lt;a href=&quot;#vkCmdPipelineBarrier&quot;&gt;vkCmdPipelineBarrier&lt;/a&gt;, &lt;a href=&quot;#vkCmdWaitEvents&quot;&gt;vkCmdWaitEvents&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkAccessFlags&quot;&gt;VkAccessFlags&lt;/a&gt; , &lt;a href=&quot;#VkStructureType&quot;&gt;VkStructureType&lt;/a&gt; , &lt;a href=&quot;#vkCmdPipelineBarrier&quot;&gt;vkCmdPipelineBarrier&lt;/a&gt; , &lt;a href=&quot;#vkCmdWaitEvents&quot;&gt;vkCmdWaitEvents&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4fe4ad21ac95d59bcd9626278217092818d05de2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkAllocationCallbacks&quot;&gt;VkAllocationCallbacks&lt;/a&gt;, &lt;a href=&quot;#VkBuffer&quot;&gt;VkBuffer&lt;/a&gt;, &lt;a href=&quot;#VkBufferCreateInfo&quot;&gt;VkBufferCreateInfo&lt;/a&gt;, &lt;a href=&quot;#VkDevice&quot;&gt;VkDevice&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkAllocationCallbacks&quot;&gt;VkAllocationCallbacks&lt;/a&gt; , &lt;a href=&quot;#VkBuffer&quot;&gt;VkBuffer&lt;/a&gt; , &lt;a href=&quot;#VkBufferCreateInfo&quot;&gt;VkBufferCreateInfo&lt;/a&gt; , &lt;a href=&quot;#VkDevice&quot;&gt;VkDevice&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="fedbec076c5c3f35db8b08f1c42720975edfc6e0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkAllocationCallbacks&quot;&gt;VkAllocationCallbacks&lt;/a&gt;, &lt;a href=&quot;#VkBuffer&quot;&gt;VkBuffer&lt;/a&gt;, &lt;a href=&quot;#VkDevice&quot;&gt;VkDevice&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkAllocationCallbacks&quot;&gt;VkAllocationCallbacks&lt;/a&gt; , &lt;a href=&quot;#VkBuffer&quot;&gt;VkBuffer&lt;/a&gt; , &lt;a href=&quot;#VkDevice&quot;&gt;VkDevice&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b90f377362aaed0261d971b1ea33aff44252bb9b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkAllocationCallbacks&quot;&gt;VkAllocationCallbacks&lt;/a&gt;, &lt;a href=&quot;#VkBufferView&quot;&gt;VkBufferView&lt;/a&gt;, &lt;a href=&quot;#VkBufferViewCreateInfo&quot;&gt;VkBufferViewCreateInfo&lt;/a&gt;, &lt;a href=&quot;#VkDevice&quot;&gt;VkDevice&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkAllocationCallbacks&quot;&gt;VkAllocationCallbacks&lt;/a&gt; , &lt;a href=&quot;#VkBufferView&quot;&gt;VkBufferView&lt;/a&gt; , &lt;a href=&quot;#VkBufferViewCreateInfo&quot;&gt;VkBufferViewCreateInfo&lt;/a&gt; , &lt;a href=&quot;#VkDevice&quot;&gt;VkDevice&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b8589cf1a3b2acef40067d3842d7cdaff9ce0a0b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkAllocationCallbacks&quot;&gt;VkAllocationCallbacks&lt;/a&gt;, &lt;a href=&quot;#VkBufferView&quot;&gt;VkBufferView&lt;/a&gt;, &lt;a href=&quot;#VkDevice&quot;&gt;VkDevice&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkAllocationCallbacks&quot;&gt;VkAllocationCallbacks&lt;/a&gt; , &lt;a href=&quot;#VkBufferView&quot;&gt;VkBufferView&lt;/a&gt; , &lt;a href=&quot;#VkDevice&quot;&gt;VkDevice&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3674d5924966d8116a9946f5718c613602fc4a14" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkAllocationCallbacks&quot;&gt;VkAllocationCallbacks&lt;/a&gt;, &lt;a href=&quot;#VkCommandPool&quot;&gt;VkCommandPool&lt;/a&gt;, &lt;a href=&quot;#VkCommandPoolCreateInfo&quot;&gt;VkCommandPoolCreateInfo&lt;/a&gt;, &lt;a href=&quot;#VkDevice&quot;&gt;VkDevice&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkAllocationCallbacks&quot;&gt;VkAllocationCallbacks&lt;/a&gt; , &lt;a href=&quot;#VkCommandPool&quot;&gt;VkCommandPool&lt;/a&gt; , &lt;a href=&quot;#VkCommandPoolCreateInfo&quot;&gt;VkCommandPoolCreateInfo&lt;/a&gt; , &lt;a href=&quot;#VkDevice&quot;&gt;VkDevice&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="98f7bb8c1d3cf5531c22b01cfabe43b2db7d8023" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkAllocationCallbacks&quot;&gt;VkAllocationCallbacks&lt;/a&gt;, &lt;a href=&quot;#VkCommandPool&quot;&gt;VkCommandPool&lt;/a&gt;, &lt;a href=&quot;#VkDevice&quot;&gt;VkDevice&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkAllocationCallbacks&quot;&gt;VkAllocationCallbacks&lt;/a&gt; , &lt;a href=&quot;#VkCommandPool&quot;&gt;VkCommandPool&lt;/a&gt; , &lt;a href=&quot;#VkDevice&quot;&gt;VkDevice&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="999135fb67c029b74405637245c61a6721ee6925" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkAllocationCallbacks&quot;&gt;VkAllocationCallbacks&lt;/a&gt;, &lt;a href=&quot;#VkComputePipelineCreateInfo&quot;&gt;VkComputePipelineCreateInfo&lt;/a&gt;, &lt;a href=&quot;#VkDevice&quot;&gt;VkDevice&lt;/a&gt;, &lt;a href=&quot;#VkPipeline&quot;&gt;VkPipeline&lt;/a&gt;, &lt;a href=&quot;#VkPipelineCache&quot;&gt;VkPipelineCache&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkAllocationCallbacks&quot;&gt;VkAllocationCallbacks&lt;/a&gt; , &lt;a href=&quot;#VkComputePipelineCreateInfo&quot;&gt;VkComputePipelineCreateInfo&lt;/a&gt; , &lt;a href=&quot;#VkDevice&quot;&gt;VkDevice&lt;/a&gt; , &lt;a href=&quot;#VkPipeline&quot;&gt;VkPipeline&lt;/a&gt; , &lt;a href=&quot;#VkPipelineCache&quot;&gt;VkPipelineCache&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="cd820f422904fb762e775aa57585c9308ef0a63e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkAllocationCallbacks&quot;&gt;VkAllocationCallbacks&lt;/a&gt;, &lt;a href=&quot;#VkDescriptorPool&quot;&gt;VkDescriptorPool&lt;/a&gt;, &lt;a href=&quot;#VkDescriptorPoolCreateInfo&quot;&gt;VkDescriptorPoolCreateInfo&lt;/a&gt;, &lt;a href=&quot;#VkDevice&quot;&gt;VkDevice&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkAllocationCallbacks&quot;&gt;VkAllocationCallbacks&lt;/a&gt; , &lt;a href=&quot;#VkDescriptorPool&quot;&gt;VkDescriptorPool&lt;/a&gt; , &lt;a href=&quot;#VkDescriptorPoolCreateInfo&quot;&gt;VkDescriptorPoolCreateInfo&lt;/a&gt; , &lt;a href=&quot;#VkDevice&quot;&gt;VkDevice&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="93aa67ff51d36c04ad6242e615892aa4ed5f4fa5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkAllocationCallbacks&quot;&gt;VkAllocationCallbacks&lt;/a&gt;, &lt;a href=&quot;#VkDescriptorPool&quot;&gt;VkDescriptorPool&lt;/a&gt;, &lt;a href=&quot;#VkDevice&quot;&gt;VkDevice&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkAllocationCallbacks&quot;&gt;VkAllocationCallbacks&lt;/a&gt; , &lt;a href=&quot;#VkDescriptorPool&quot;&gt;VkDescriptorPool&lt;/a&gt; , &lt;a href=&quot;#VkDevice&quot;&gt;VkDevice&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="af962d46dac54c9b6376eefc5ca0e7a0bb110d28" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkAllocationCallbacks&quot;&gt;VkAllocationCallbacks&lt;/a&gt;, &lt;a href=&quot;#VkDescriptorSetLayout&quot;&gt;VkDescriptorSetLayout&lt;/a&gt;, &lt;a href=&quot;#VkDescriptorSetLayoutCreateInfo&quot;&gt;VkDescriptorSetLayoutCreateInfo&lt;/a&gt;, &lt;a href=&quot;#VkDevice&quot;&gt;VkDevice&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkAllocationCallbacks&quot;&gt;VkAllocationCallbacks&lt;/a&gt; , &lt;a href=&quot;#VkDescriptorSetLayout&quot;&gt;VkDescriptorSetLayout&lt;/a&gt; , &lt;a href=&quot;#VkDescriptorSetLayoutCreateInfo&quot;&gt;VkDescriptorSetLayoutCreateInfo&lt;/a&gt; , &lt;a href=&quot;#VkDevice&quot;&gt;VkDevice&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="368222b46faea5ea831e6a23866577794c90d888" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkAllocationCallbacks&quot;&gt;VkAllocationCallbacks&lt;/a&gt;, &lt;a href=&quot;#VkDescriptorSetLayout&quot;&gt;VkDescriptorSetLayout&lt;/a&gt;, &lt;a href=&quot;#VkDevice&quot;&gt;VkDevice&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkAllocationCallbacks&quot;&gt;VkAllocationCallbacks&lt;/a&gt; , &lt;a href=&quot;#VkDescriptorSetLayout&quot;&gt;VkDescriptorSetLayout&lt;/a&gt; , &lt;a href=&quot;#VkDevice&quot;&gt;VkDevice&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="34acc7ba9673e8d7b73255a1c5bb67df5bc856f4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkAllocationCallbacks&quot;&gt;VkAllocationCallbacks&lt;/a&gt;, &lt;a href=&quot;#VkDevice&quot;&gt;VkDevice&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkAllocationCallbacks&quot;&gt;VkAllocationCallbacks&lt;/a&gt; , &lt;a href=&quot;#VkDevice&quot;&gt;VkDevice&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="08710e13d6649194cf6f373595566a501a4e1b36" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkAllocationCallbacks&quot;&gt;VkAllocationCallbacks&lt;/a&gt;, &lt;a href=&quot;#VkDevice&quot;&gt;VkDevice&lt;/a&gt;, &lt;a href=&quot;#VkDeviceCreateInfo&quot;&gt;VkDeviceCreateInfo&lt;/a&gt;, &lt;a href=&quot;#VkPhysicalDevice&quot;&gt;VkPhysicalDevice&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkAllocationCallbacks&quot;&gt;VkAllocationCallbacks&lt;/a&gt; , &lt;a href=&quot;#VkDevice&quot;&gt;VkDevice&lt;/a&gt; , &lt;a href=&quot;#VkDeviceCreateInfo&quot;&gt;VkDeviceCreateInfo&lt;/a&gt; , &lt;a href=&quot;#VkPhysicalDevice&quot;&gt;VkPhysicalDevice&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="80d41d3d386121938005a721e4ce924a208f2a0a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkAllocationCallbacks&quot;&gt;VkAllocationCallbacks&lt;/a&gt;, &lt;a href=&quot;#VkDevice&quot;&gt;VkDevice&lt;/a&gt;, &lt;a href=&quot;#VkDeviceMemory&quot;&gt;VkDeviceMemory&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkAllocationCallbacks&quot;&gt;VkAllocationCallbacks&lt;/a&gt; , &lt;a href=&quot;#VkDevice&quot;&gt;VkDevice&lt;/a&gt; , &lt;a href=&quot;#VkDeviceMemory&quot;&gt;VkDeviceMemory&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="23e7624c93d7c09b470bf3a684bd405b15d83d82" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkAllocationCallbacks&quot;&gt;VkAllocationCallbacks&lt;/a&gt;, &lt;a href=&quot;#VkDevice&quot;&gt;VkDevice&lt;/a&gt;, &lt;a href=&quot;#VkDeviceMemory&quot;&gt;VkDeviceMemory&lt;/a&gt;, &lt;a href=&quot;#VkMemoryAllocateInfo&quot;&gt;VkMemoryAllocateInfo&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkAllocationCallbacks&quot;&gt;VkAllocationCallbacks&lt;/a&gt; , &lt;a href=&quot;#VkDevice&quot;&gt;VkDevice&lt;/a&gt; , &lt;a href=&quot;#VkDeviceMemory&quot;&gt;VkDeviceMemory&lt;/a&gt; , &lt;a href=&quot;#VkMemoryAllocateInfo&quot;&gt;VkMemoryAllocateInfo&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3b8fbd413d934308956a8ef584c48c903790700c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkAllocationCallbacks&quot;&gt;VkAllocationCallbacks&lt;/a&gt;, &lt;a href=&quot;#VkDevice&quot;&gt;VkDevice&lt;/a&gt;, &lt;a href=&quot;#VkEvent&quot;&gt;VkEvent&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkAllocationCallbacks&quot;&gt;VkAllocationCallbacks&lt;/a&gt; , &lt;a href=&quot;#VkDevice&quot;&gt;VkDevice&lt;/a&gt; , &lt;a href=&quot;#VkEvent&quot;&gt;VkEvent&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ced818b0c16885788175e7b8a24d35d1b46c514c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkAllocationCallbacks&quot;&gt;VkAllocationCallbacks&lt;/a&gt;, &lt;a href=&quot;#VkDevice&quot;&gt;VkDevice&lt;/a&gt;, &lt;a href=&quot;#VkEvent&quot;&gt;VkEvent&lt;/a&gt;, &lt;a href=&quot;#VkEventCreateInfo&quot;&gt;VkEventCreateInfo&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkAllocationCallbacks&quot;&gt;VkAllocationCallbacks&lt;/a&gt; , &lt;a href=&quot;#VkDevice&quot;&gt;VkDevice&lt;/a&gt; , &lt;a href=&quot;#VkEvent&quot;&gt;VkEvent&lt;/a&gt; , &lt;a href=&quot;#VkEventCreateInfo&quot;&gt;VkEventCreateInfo&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="799386cec731eac2a15aa5943900fa417f327f91" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkAllocationCallbacks&quot;&gt;VkAllocationCallbacks&lt;/a&gt;, &lt;a href=&quot;#VkDevice&quot;&gt;VkDevice&lt;/a&gt;, &lt;a href=&quot;#VkFence&quot;&gt;VkFence&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkAllocationCallbacks&quot;&gt;VkAllocationCallbacks&lt;/a&gt; , &lt;a href=&quot;#VkDevice&quot;&gt;VkDevice&lt;/a&gt; , &lt;a href=&quot;#VkFence&quot;&gt;VkFence&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="50db2ed990afa5599f4839f002fca073c555dc28" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkAllocationCallbacks&quot;&gt;VkAllocationCallbacks&lt;/a&gt;, &lt;a href=&quot;#VkDevice&quot;&gt;VkDevice&lt;/a&gt;, &lt;a href=&quot;#VkFence&quot;&gt;VkFence&lt;/a&gt;, &lt;a href=&quot;#VkFenceCreateInfo&quot;&gt;VkFenceCreateInfo&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkAllocationCallbacks&quot;&gt;VkAllocationCallbacks&lt;/a&gt; , &lt;a href=&quot;#VkDevice&quot;&gt;VkDevice&lt;/a&gt; , &lt;a href=&quot;#VkFence&quot;&gt;VkFence&lt;/a&gt; , &lt;a href=&quot;#VkFenceCreateInfo&quot;&gt;VkFenceCreateInfo&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2ed92b7f1405934c9ebf530e64e4ad6ef551ea95" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkAllocationCallbacks&quot;&gt;VkAllocationCallbacks&lt;/a&gt;, &lt;a href=&quot;#VkDevice&quot;&gt;VkDevice&lt;/a&gt;, &lt;a href=&quot;#VkFramebuffer&quot;&gt;VkFramebuffer&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkAllocationCallbacks&quot;&gt;VkAllocationCallbacks&lt;/a&gt; , &lt;a href=&quot;#VkDevice&quot;&gt;VkDevice&lt;/a&gt; , &lt;a href=&quot;#VkFramebuffer&quot;&gt;VkFramebuffer&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5d7e0590e62df3ee0bb3c461ee1bdab029ba0ebf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkAllocationCallbacks&quot;&gt;VkAllocationCallbacks&lt;/a&gt;, &lt;a href=&quot;#VkDevice&quot;&gt;VkDevice&lt;/a&gt;, &lt;a href=&quot;#VkFramebuffer&quot;&gt;VkFramebuffer&lt;/a&gt;, &lt;a href=&quot;#VkFramebufferCreateInfo&quot;&gt;VkFramebufferCreateInfo&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkAllocationCallbacks&quot;&gt;VkAllocationCallbacks&lt;/a&gt; , &lt;a href=&quot;#VkDevice&quot;&gt;VkDevice&lt;/a&gt; , &lt;a href=&quot;#VkFramebuffer&quot;&gt;VkFramebuffer&lt;/a&gt; , &lt;a href=&quot;#VkFramebufferCreateInfo&quot;&gt;VkFramebufferCreateInfo&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="fcd3eccd1b0abd4f41c9b3229057fc4ef0a3c602" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkAllocationCallbacks&quot;&gt;VkAllocationCallbacks&lt;/a&gt;, &lt;a href=&quot;#VkDevice&quot;&gt;VkDevice&lt;/a&gt;, &lt;a href=&quot;#VkGraphicsPipelineCreateInfo&quot;&gt;VkGraphicsPipelineCreateInfo&lt;/a&gt;, &lt;a href=&quot;#VkPipeline&quot;&gt;VkPipeline&lt;/a&gt;, &lt;a href=&quot;#VkPipelineCache&quot;&gt;VkPipelineCache&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkAllocationCallbacks&quot;&gt;VkAllocationCallbacks&lt;/a&gt; , &lt;a href=&quot;#VkDevice&quot;&gt;VkDevice&lt;/a&gt; , &lt;a href=&quot;#VkGraphicsPipelineCreateInfo&quot;&gt;VkGraphicsPipelineCreateInfo&lt;/a&gt; , &lt;a href=&quot;#VkPipeline&quot;&gt;VkPipeline&lt;/a&gt; , &lt;a href=&quot;#VkPipelineCache&quot;&gt;VkPipelineCache&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="122b8a3de1b1d16d49f501ffa18c6fdedc0449e1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkAllocationCallbacks&quot;&gt;VkAllocationCallbacks&lt;/a&gt;, &lt;a href=&quot;#VkDevice&quot;&gt;VkDevice&lt;/a&gt;, &lt;a href=&quot;#VkImage&quot;&gt;VkImage&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkAllocationCallbacks&quot;&gt;VkAllocationCallbacks&lt;/a&gt; , &lt;a href=&quot;#VkDevice&quot;&gt;VkDevice&lt;/a&gt; , &lt;a href=&quot;#VkImage&quot;&gt;VkImage&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5750903f0720fc66ca70aae82fafd93adef1232e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkAllocationCallbacks&quot;&gt;VkAllocationCallbacks&lt;/a&gt;, &lt;a href=&quot;#VkDevice&quot;&gt;VkDevice&lt;/a&gt;, &lt;a href=&quot;#VkImage&quot;&gt;VkImage&lt;/a&gt;, &lt;a href=&quot;#VkImageCreateInfo&quot;&gt;VkImageCreateInfo&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkAllocationCallbacks&quot;&gt;VkAllocationCallbacks&lt;/a&gt; , &lt;a href=&quot;#VkDevice&quot;&gt;VkDevice&lt;/a&gt; , &lt;a href=&quot;#VkImage&quot;&gt;VkImage&lt;/a&gt; , &lt;a href=&quot;#VkImageCreateInfo&quot;&gt;VkImageCreateInfo&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="502ea977936692d7d4cd6d5c380ad5c5ea59e68d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkAllocationCallbacks&quot;&gt;VkAllocationCallbacks&lt;/a&gt;, &lt;a href=&quot;#VkDevice&quot;&gt;VkDevice&lt;/a&gt;, &lt;a href=&quot;#VkImageView&quot;&gt;VkImageView&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkAllocationCallbacks&quot;&gt;VkAllocationCallbacks&lt;/a&gt; , &lt;a href=&quot;#VkDevice&quot;&gt;VkDevice&lt;/a&gt; , &lt;a href=&quot;#VkImageView&quot;&gt;VkImageView&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="334844afabbcc1efb0e97f9ca7ec972658bfa4a5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkAllocationCallbacks&quot;&gt;VkAllocationCallbacks&lt;/a&gt;, &lt;a href=&quot;#VkDevice&quot;&gt;VkDevice&lt;/a&gt;, &lt;a href=&quot;#VkImageView&quot;&gt;VkImageView&lt;/a&gt;, &lt;a href=&quot;#VkImageViewCreateInfo&quot;&gt;VkImageViewCreateInfo&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkAllocationCallbacks&quot;&gt;VkAllocationCallbacks&lt;/a&gt; , &lt;a href=&quot;#VkDevice&quot;&gt;VkDevice&lt;/a&gt; , &lt;a href=&quot;#VkImageView&quot;&gt;VkImageView&lt;/a&gt; , &lt;a href=&quot;#VkImageViewCreateInfo&quot;&gt;VkImageViewCreateInfo&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0b3d63fd1888f0f7e16bf01057041fb7b546442d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkAllocationCallbacks&quot;&gt;VkAllocationCallbacks&lt;/a&gt;, &lt;a href=&quot;#VkDevice&quot;&gt;VkDevice&lt;/a&gt;, &lt;a href=&quot;#VkPipeline&quot;&gt;VkPipeline&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkAllocationCallbacks&quot;&gt;VkAllocationCallbacks&lt;/a&gt; , &lt;a href=&quot;#VkDevice&quot;&gt;VkDevice&lt;/a&gt; , &lt;a href=&quot;#VkPipeline&quot;&gt;VkPipeline&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="dd6bf21fbe90a08bc3a5c12c2bf8b37121dd474e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkAllocationCallbacks&quot;&gt;VkAllocationCallbacks&lt;/a&gt;, &lt;a href=&quot;#VkDevice&quot;&gt;VkDevice&lt;/a&gt;, &lt;a href=&quot;#VkPipelineCache&quot;&gt;VkPipelineCache&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkAllocationCallbacks&quot;&gt;VkAllocationCallbacks&lt;/a&gt; , &lt;a href=&quot;#VkDevice&quot;&gt;VkDevice&lt;/a&gt; , &lt;a href=&quot;#VkPipelineCache&quot;&gt;VkPipelineCache&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5c11161964aa9d585ee4011565fee55a7ded731c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkAllocationCallbacks&quot;&gt;VkAllocationCallbacks&lt;/a&gt;, &lt;a href=&quot;#VkDevice&quot;&gt;VkDevice&lt;/a&gt;, &lt;a href=&quot;#VkPipelineCache&quot;&gt;VkPipelineCache&lt;/a&gt;, &lt;a href=&quot;#VkPipelineCacheCreateInfo&quot;&gt;VkPipelineCacheCreateInfo&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkAllocationCallbacks&quot;&gt;VkAllocationCallbacks&lt;/a&gt; , &lt;a href=&quot;#VkDevice&quot;&gt;VkDevice&lt;/a&gt; , &lt;a href=&quot;#VkPipelineCache&quot;&gt;VkPipelineCache&lt;/a&gt; , &lt;a href=&quot;#VkPipelineCacheCreateInfo&quot;&gt;VkPipelineCacheCreateInfo&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d977acc9edd8cdaecd6e74fd1970348324242085" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkAllocationCallbacks&quot;&gt;VkAllocationCallbacks&lt;/a&gt;, &lt;a href=&quot;#VkDevice&quot;&gt;VkDevice&lt;/a&gt;, &lt;a href=&quot;#VkPipelineLayout&quot;&gt;VkPipelineLayout&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkAllocationCallbacks&quot;&gt;VkAllocationCallbacks&lt;/a&gt; , &lt;a href=&quot;#VkDevice&quot;&gt;VkDevice&lt;/a&gt; , &lt;a href=&quot;#VkPipelineLayout&quot;&gt;VkPipelineLayout&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="cddaad329a4399fef58e44fcd4989b2e30f6b320" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkAllocationCallbacks&quot;&gt;VkAllocationCallbacks&lt;/a&gt;, &lt;a href=&quot;#VkDevice&quot;&gt;VkDevice&lt;/a&gt;, &lt;a href=&quot;#VkPipelineLayout&quot;&gt;VkPipelineLayout&lt;/a&gt;, &lt;a href=&quot;#VkPipelineLayoutCreateInfo&quot;&gt;VkPipelineLayoutCreateInfo&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkAllocationCallbacks&quot;&gt;VkAllocationCallbacks&lt;/a&gt; , &lt;a href=&quot;#VkDevice&quot;&gt;VkDevice&lt;/a&gt; , &lt;a href=&quot;#VkPipelineLayout&quot;&gt;VkPipelineLayout&lt;/a&gt; , &lt;a href=&quot;#VkPipelineLayoutCreateInfo&quot;&gt;VkPipelineLayoutCreateInfo&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="bc2bc278634524f8eb7d578640e91390506d4f38" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkAllocationCallbacks&quot;&gt;VkAllocationCallbacks&lt;/a&gt;, &lt;a href=&quot;#VkDevice&quot;&gt;VkDevice&lt;/a&gt;, &lt;a href=&quot;#VkQueryPool&quot;&gt;VkQueryPool&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkAllocationCallbacks&quot;&gt;VkAllocationCallbacks&lt;/a&gt; , &lt;a href=&quot;#VkDevice&quot;&gt;VkDevice&lt;/a&gt; , &lt;a href=&quot;#VkQueryPool&quot;&gt;VkQueryPool&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="74f9d3c89a53b5f0e72b3ef477293e65d49ecfd0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkAllocationCallbacks&quot;&gt;VkAllocationCallbacks&lt;/a&gt;, &lt;a href=&quot;#VkDevice&quot;&gt;VkDevice&lt;/a&gt;, &lt;a href=&quot;#VkQueryPool&quot;&gt;VkQueryPool&lt;/a&gt;, &lt;a href=&quot;#VkQueryPoolCreateInfo&quot;&gt;VkQueryPoolCreateInfo&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkAllocationCallbacks&quot;&gt;VkAllocationCallbacks&lt;/a&gt; , &lt;a href=&quot;#VkDevice&quot;&gt;VkDevice&lt;/a&gt; , &lt;a href=&quot;#VkQueryPool&quot;&gt;VkQueryPool&lt;/a&gt; , &lt;a href=&quot;#VkQueryPoolCreateInfo&quot;&gt;VkQueryPoolCreateInfo&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e6346bd55afbbc8c71bc47f100fd06a7948e6c38" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkAllocationCallbacks&quot;&gt;VkAllocationCallbacks&lt;/a&gt;, &lt;a href=&quot;#VkDevice&quot;&gt;VkDevice&lt;/a&gt;, &lt;a href=&quot;#VkRenderPass&quot;&gt;VkRenderPass&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkAllocationCallbacks&quot;&gt;VkAllocationCallbacks&lt;/a&gt; , &lt;a href=&quot;#VkDevice&quot;&gt;VkDevice&lt;/a&gt; , &lt;a href=&quot;#VkRenderPass&quot;&gt;VkRenderPass&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="751b42e1d16d8123569b5c3ad43f2ef19d654b30" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkAllocationCallbacks&quot;&gt;VkAllocationCallbacks&lt;/a&gt;, &lt;a href=&quot;#VkDevice&quot;&gt;VkDevice&lt;/a&gt;, &lt;a href=&quot;#VkRenderPass&quot;&gt;VkRenderPass&lt;/a&gt;, &lt;a href=&quot;#VkRenderPassCreateInfo&quot;&gt;VkRenderPassCreateInfo&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkAllocationCallbacks&quot;&gt;VkAllocationCallbacks&lt;/a&gt; , &lt;a href=&quot;#VkDevice&quot;&gt;VkDevice&lt;/a&gt; , &lt;a href=&quot;#VkRenderPass&quot;&gt;VkRenderPass&lt;/a&gt; , &lt;a href=&quot;#VkRenderPassCreateInfo&quot;&gt;VkRenderPassCreateInfo&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b9d4807cf25f99c98d6ce9c17da81339c6e54b3c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkAllocationCallbacks&quot;&gt;VkAllocationCallbacks&lt;/a&gt;, &lt;a href=&quot;#VkDevice&quot;&gt;VkDevice&lt;/a&gt;, &lt;a href=&quot;#VkSampler&quot;&gt;VkSampler&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkAllocationCallbacks&quot;&gt;VkAllocationCallbacks&lt;/a&gt; , &lt;a href=&quot;#VkDevice&quot;&gt;VkDevice&lt;/a&gt; , &lt;a href=&quot;#VkSampler&quot;&gt;VkSampler&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e776d6651d37163f29675835a65884a4b0b11997" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkAllocationCallbacks&quot;&gt;VkAllocationCallbacks&lt;/a&gt;, &lt;a href=&quot;#VkDevice&quot;&gt;VkDevice&lt;/a&gt;, &lt;a href=&quot;#VkSampler&quot;&gt;VkSampler&lt;/a&gt;, &lt;a href=&quot;#VkSamplerCreateInfo&quot;&gt;VkSamplerCreateInfo&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkAllocationCallbacks&quot;&gt;VkAllocationCallbacks&lt;/a&gt; , &lt;a href=&quot;#VkDevice&quot;&gt;VkDevice&lt;/a&gt; , &lt;a href=&quot;#VkSampler&quot;&gt;VkSampler&lt;/a&gt; , &lt;a href=&quot;#VkSamplerCreateInfo&quot;&gt;VkSamplerCreateInfo&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9bd3414c6940628236e69c79095aafefcc362456" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkAllocationCallbacks&quot;&gt;VkAllocationCallbacks&lt;/a&gt;, &lt;a href=&quot;#VkDevice&quot;&gt;VkDevice&lt;/a&gt;, &lt;a href=&quot;#VkSemaphore&quot;&gt;VkSemaphore&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkAllocationCallbacks&quot;&gt;VkAllocationCallbacks&lt;/a&gt; , &lt;a href=&quot;#VkDevice&quot;&gt;VkDevice&lt;/a&gt; , &lt;a href=&quot;#VkSemaphore&quot;&gt;VkSemaphore&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="dc840d537bdc5e38504d41376eb2c49954e10af8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkAllocationCallbacks&quot;&gt;VkAllocationCallbacks&lt;/a&gt;, &lt;a href=&quot;#VkDevice&quot;&gt;VkDevice&lt;/a&gt;, &lt;a href=&quot;#VkSemaphore&quot;&gt;VkSemaphore&lt;/a&gt;, &lt;a href=&quot;#VkSemaphoreCreateInfo&quot;&gt;VkSemaphoreCreateInfo&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkAllocationCallbacks&quot;&gt;VkAllocationCallbacks&lt;/a&gt; , &lt;a href=&quot;#VkDevice&quot;&gt;VkDevice&lt;/a&gt; , &lt;a href=&quot;#VkSemaphore&quot;&gt;VkSemaphore&lt;/a&gt; , &lt;a href=&quot;#VkSemaphoreCreateInfo&quot;&gt;VkSemaphoreCreateInfo&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6f21fea9951008616c46533d6490e1195a3ca2f7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkAllocationCallbacks&quot;&gt;VkAllocationCallbacks&lt;/a&gt;, &lt;a href=&quot;#VkDevice&quot;&gt;VkDevice&lt;/a&gt;, &lt;a href=&quot;#VkShaderModule&quot;&gt;VkShaderModule&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkAllocationCallbacks&quot;&gt;VkAllocationCallbacks&lt;/a&gt; , &lt;a href=&quot;#VkDevice&quot;&gt;VkDevice&lt;/a&gt; , &lt;a href=&quot;#VkShaderModule&quot;&gt;VkShaderModule&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="51fbdb6f01dc13578f7e3e24bc82e9aa947d16fb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkAllocationCallbacks&quot;&gt;VkAllocationCallbacks&lt;/a&gt;, &lt;a href=&quot;#VkDevice&quot;&gt;VkDevice&lt;/a&gt;, &lt;a href=&quot;#VkShaderModule&quot;&gt;VkShaderModule&lt;/a&gt;, &lt;a href=&quot;#VkShaderModuleCreateInfo&quot;&gt;VkShaderModuleCreateInfo&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkAllocationCallbacks&quot;&gt;VkAllocationCallbacks&lt;/a&gt; , &lt;a href=&quot;#VkDevice&quot;&gt;VkDevice&lt;/a&gt; , &lt;a href=&quot;#VkShaderModule&quot;&gt;VkShaderModule&lt;/a&gt; , &lt;a href=&quot;#VkShaderModuleCreateInfo&quot;&gt;VkShaderModuleCreateInfo&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="84d6ce3824c93eea5666e6e1cb86b3d2f79409ed" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkAllocationCallbacks&quot;&gt;VkAllocationCallbacks&lt;/a&gt;, &lt;a href=&quot;#VkInstance&quot;&gt;VkInstance&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkAllocationCallbacks&quot;&gt;VkAllocationCallbacks&lt;/a&gt; , &lt;a href=&quot;#VkInstance&quot;&gt;VkInstance&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9397e4482913da86017c954ebd9fa685a484b03d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkAllocationCallbacks&quot;&gt;VkAllocationCallbacks&lt;/a&gt;, &lt;a href=&quot;#VkInstance&quot;&gt;VkInstance&lt;/a&gt;, &lt;a href=&quot;#VkInstanceCreateInfo&quot;&gt;VkInstanceCreateInfo&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkAllocationCallbacks&quot;&gt;VkAllocationCallbacks&lt;/a&gt; , &lt;a href=&quot;#VkInstance&quot;&gt;VkInstance&lt;/a&gt; , &lt;a href=&quot;#VkInstanceCreateInfo&quot;&gt;VkInstanceCreateInfo&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="08593f8f641d99ce34438a817c0dce9ecf2680f7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkApplicationInfo&quot;&gt;VkApplicationInfo&lt;/a&gt;, &lt;a href=&quot;#VkBindSparseInfo&quot;&gt;VkBindSparseInfo&lt;/a&gt;, &lt;a href=&quot;#VkBufferCreateInfo&quot;&gt;VkBufferCreateInfo&lt;/a&gt;, &lt;a href=&quot;#VkBufferMemoryBarrier&quot;&gt;VkBufferMemoryBarrier&lt;/a&gt;, &lt;a href=&quot;#VkBufferViewCreateInfo&quot;&gt;VkBufferViewCreateInfo&lt;/a&gt;, &lt;a href=&quot;#VkCommandBufferAllocateInfo&quot;&gt;VkCommandBufferAllocateInfo&lt;/a&gt;, &lt;a href=&quot;#VkCommandBufferBeginInfo&quot;&gt;VkCommandBufferBeginInfo&lt;/a&gt;, &lt;a href=&quot;#VkCommandBufferInheritanceInfo&quot;&gt;VkCommandBufferInheritanceInfo&lt;/a&gt;, &lt;a href=&quot;#VkCommandPoolCreateInfo&quot;&gt;VkCommandPoolCreateInfo&lt;/a&gt;, &lt;a href=&quot;#VkComputePipelineCreateInfo&quot;&gt;VkComputePipelineCreateInfo&lt;/a&gt;, &lt;a href=&quot;#VkCopyDescriptorSet&quot;&gt;VkCopyDescriptorSet&lt;/a&gt;, &lt;a href=&quot;#VkDescriptorPoolCreateInfo&quot;&gt;VkDescriptorPoolCreateInfo&lt;/a&gt;, &lt;a href=&quot;#VkDescriptorSetAllocateInfo&quot;&gt;VkDescriptorSetAllocateInfo&lt;/a&gt;, &lt;a href=&quot;#VkDescriptorSetLayoutCreateInfo&quot;&gt;VkDescriptorSetLayoutCreateInfo&lt;/a&gt;, &lt;a href=&quot;#VkDeviceCreateInfo&quot;&gt;VkDeviceCreateInfo&lt;/a&gt;, &lt;a href=&quot;#VkDeviceQueueCreateInfo&quot;&gt;VkDeviceQueueCreateInfo&lt;/a&gt;, &lt;a href=&quot;#VkEventCreateInfo&quot;&gt;VkEventCreateInfo&lt;/a&gt;, &lt;a href=&quot;#VkFenceCreateInfo&quot;&gt;VkFenceCreateInfo&lt;/a&gt;, &lt;a href=&quot;#VkFramebufferCreateInfo&quot;&gt;VkFramebufferCreateInfo&lt;/a&gt;, &lt;a href=&quot;#VkGraphicsPipelineCreateInfo&quot;&gt;VkGraphicsPipelineCreateInfo&lt;/a&gt;, &lt;a href=&quot;#VkImageCreateInfo&quot;&gt;VkImageCreateInfo&lt;/a&gt;, &lt;a href=&quot;#VkImageMemoryBarrier&quot;&gt;VkImageMemoryBarrier&lt;/a&gt;, &lt;a href=&quot;#VkImageViewCreateInfo&quot;&gt;VkImageViewCreateInfo&lt;/a&gt;, &lt;a href=&quot;#VkInstanceCreateInfo&quot;&gt;VkInstanceCreateInfo&lt;/a&gt;, &lt;a href=&quot;#VkMappedMemoryRange&quot;&gt;VkMappedMemoryRange&lt;/a&gt;, &lt;a href=&quot;#VkMemoryAllocateInfo&quot;&gt;VkMemoryAllocateInfo&lt;/a&gt;, &lt;a href=&quot;#VkMemoryBarrier&quot;&gt;VkMemoryBarrier&lt;/a&gt;, &lt;a href=&quot;#VkPipelineCacheCreateInfo&quot;&gt;VkPipelineCacheCreateInfo&lt;/a&gt;, &lt;a href=&quot;#VkPipelineColorBlendStateCreateInfo&quot;&gt;VkPipelineColorBlendStateCreateInfo&lt;/a&gt;, &lt;a href=&quot;#VkPipelineDepthStencilStateCreateInfo&quot;&gt;VkPipelineDepthStencilStateCreateInfo&lt;/a&gt;, &lt;a href=&quot;#VkPipelineDynamicStateCreateInfo&quot;&gt;VkPipelineDynamicStateCreateInfo&lt;/a&gt;, &lt;a href=&quot;#VkPipelineInputAssemblyStateCreateInfo&quot;&gt;VkPipelineInputAssemblyStateCreateInfo&lt;/a&gt;, &lt;a href=&quot;#VkPipelineLayoutCreateInfo&quot;&gt;VkPipelineLayoutCreateInfo&lt;/a&gt;, &lt;a href=&quot;#VkPipelineMultisampleStateCreateInfo&quot;&gt;VkPipelineMultisampleStateCreateInfo&lt;/a&gt;, &lt;a href=&quot;#VkPipelineRasterizationStateCreateInfo&quot;&gt;VkPipelineRasterizationStateCreateInfo&lt;/a&gt;, &lt;a href=&quot;#VkPipelineShaderStageCreateInfo&quot;&gt;VkPipelineShaderStageCreateInfo&lt;/a&gt;, &lt;a href=&quot;#VkPipelineTessellationStateCreateInfo&quot;&gt;VkPipelineTessellationStateCreateInfo&lt;/a&gt;, &lt;a href=&quot;#VkPipelineVertexInputStateCreateInfo&quot;&gt;VkPipelineVertexInputStateCreateInfo&lt;/a&gt;, &lt;a href=&quot;#VkPipelineViewportStateCreateInfo&quot;&gt;VkPipelineViewportStateCreateInfo&lt;/a&gt;, &lt;a href=&quot;#VkQueryPoolCreateInfo&quot;&gt;VkQueryPoolCreateInfo&lt;/a&gt;, &lt;a href=&quot;#VkRenderPassBeginInfo&quot;&gt;VkRenderPassBeginInfo&lt;/a&gt;, &lt;a href=&quot;#VkRenderPassCreateInfo&quot;&gt;VkRenderPassCreateInfo&lt;/a&gt;, &lt;a href=&quot;#VkSamplerCreateInfo&quot;&gt;VkSamplerCreateInfo&lt;/a&gt;, &lt;a href=&quot;#VkSemaphoreCreateInfo&quot;&gt;VkSemaphoreCreateInfo&lt;/a&gt;, &lt;a href=&quot;#VkShaderModuleCreateInfo&quot;&gt;VkShaderModuleCreateInfo&lt;/a&gt;, &lt;a href=&quot;#VkSubmitInfo&quot;&gt;VkSubmitInfo&lt;/a&gt;, &lt;a href=&quot;#VkWriteDescriptorSet&quot;&gt;VkWriteDescriptorSet&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkApplicationInfo&quot;&gt;VkApplicationInfo&lt;/a&gt; , &lt;a href=&quot;#VkBindSparseInfo&quot;&gt;VkBindSparseInfo&lt;/a&gt; , &lt;a href=&quot;#VkBufferCreateInfo&quot;&gt;VkBufferCreateInfo&lt;/a&gt; , &lt;a href=&quot;#VkBufferMemoryBarrier&quot;&gt;VkBufferMemoryBarrier&lt;/a&gt; , &lt;a href=&quot;#VkBufferViewCreateInfo&quot;&gt;VkBufferViewCreateInfo&lt;/a&gt; , &lt;a href=&quot;#VkCommandBufferAllocateInfo&quot;&gt;VkCommandBufferAllocateInfo&lt;/a&gt; , &lt;a href=&quot;#VkCommandBufferBeginInfo&quot;&gt;VkCommandBufferBeginInfo&lt;/a&gt; , &lt;a href=&quot;#VkCommandBufferInheritanceInfo&quot;&gt;VkCommandBufferInheritanceInfo&lt;/a&gt; , &lt;a href=&quot;#VkCommandPoolCreateInfo&quot;&gt;VkCommandPoolCreateInfo&lt;/a&gt; , &lt;a href=&quot;#VkComputePipelineCreateInfo&quot;&gt;VkComputePipelineCreateInfo&lt;/a&gt; , &lt;a href=&quot;#VkCopyDescriptorSet&quot;&gt;VkCopyDescriptorSet&lt;/a&gt; , &lt;a href=&quot;#VkDescriptorPoolCreateInfo&quot;&gt;VkDescriptorPoolCreateInfo&lt;/a&gt; , &lt;a href=&quot;#VkDescriptorSetAllocateInfo&quot;&gt;VkDescriptorSetAllocateInfo&lt;/a&gt; , &lt;a href=&quot;#VkDescriptorSetLayoutCreateInfo&quot;&gt;VkDescriptorSetLayoutCreateInfo&lt;/a&gt; , &lt;a href=&quot;#VkDeviceCreateInfo&quot;&gt;VkDeviceCreateInfo&lt;/a&gt; , &lt;a href=&quot;#VkDeviceQueueCreateInfo&quot;&gt;VkDeviceQueueCreateInfo&lt;/a&gt; , &lt;a href=&quot;#VkEventCreateInfo&quot;&gt;VkEventCreateInfo&lt;/a&gt;, &lt;a href=&quot;#VkFenceCreateInfo&quot;&gt;VkFenceCreateInfo&lt;/a&gt; , &lt;a href=&quot;#VkFramebufferCreateInfo&quot;&gt;VkFramebufferCreateInfo&lt;/a&gt; , &lt;a href=&quot;#VkGraphicsPipelineCreateInfo&quot;&gt;VkGraphicsPipelineCreateInfo&lt;/a&gt; , &lt;a href=&quot;#VkImageCreateInfo&quot;&gt;VkImageCreateInfo&lt;/a&gt; , &lt;a href=&quot;#VkImageMemoryBarrier&quot;&gt;VkImageMemoryBarrier&lt;/a&gt; , &lt;a href=&quot;#VkImageViewCreateInfo&quot;&gt;VkImageViewCreateInfo&lt;/a&gt; , &lt;a href=&quot;#VkInstanceCreateInfo&quot;&gt;VkInstanceCreateInfo&lt;/a&gt; , &lt;a href=&quot;#VkMappedMemoryRange&quot;&gt;VkMappedMemoryRange&lt;/a&gt; , &lt;a href=&quot;#VkMemoryAllocateInfo&quot;&gt;VkMemoryAllocateInfo&lt;/a&gt; , &lt;a href=&quot;#VkMemoryBarrier&quot;&gt;VkMemoryBarrier&lt;/a&gt; , &lt;a href=&quot;#VkPipelineCacheCreateInfo&quot;&gt;VkPipelineCacheCreateInfo&lt;/a&gt; , &lt;a href=&quot;#VkPipelineColorBlendStateCreateInfo&quot;&gt;VkPipelineColorBlendStateCreateInfo&lt;/a&gt; , &lt;a href=&quot;#VkPipelineDepthStencilStateCreateInfo&quot;&gt;VkPipelineDepthStencilStateCreateInfo&lt;/a&gt; , &lt;a href=&quot;#VkPipelineDynamicStateCreateInfo&quot;&gt;VkPipelineDynamicStateCreateInfo&lt;/a&gt; , &lt;a href=&quot;#VkPipelineInputAssemblyStateCreateInfo&quot;&gt;VkPipelineInputAssemblyStateCreateInfo&lt;/a&gt; , &lt;a href=&quot;#VkPipelineLayoutCreateInfo&quot;&gt;VkPipelineLayoutCreateInfo&lt;/a&gt; ,&lt;a href=&quot;#VkPipelineMultisampleStateCreateInfo&quot;&gt;VkPipelineMultisampleStateCreateInfo&lt;/a&gt; , &lt;a href=&quot;#VkPipelineRasterizationStateCreateInfo&quot;&gt;VkPipelineRasterizationStateCreateInfo&lt;/a&gt; , &lt;a href=&quot;#VkPipelineShaderStageCreateInfo&quot;&gt;VkPipelineShaderStageCreateInfo&lt;/a&gt; , &lt;a href=&quot;#VkPipelineTessellationStateCreateInfo&quot;&gt;VkPipelineTessellationStateCreateInfo&lt;/a&gt; , &lt;a href=&quot;#VkPipelineVertexInputStateCreateInfo&quot;&gt;VkPipelineVertexInputStateCreateInfo&lt;/a&gt; , &lt;a href=&quot;#VkPipelineViewportStateCreateInfo&quot;&gt;VkPipelineViewportStateCreateInfo&lt;/a&gt; , &lt;a href=&quot;#VkQueryPoolCreateInfo&quot;&gt;VkQueryPoolCreateInfo&lt;/a&gt; , &lt;a href=&quot;#VkRenderPassBeginInfo&quot;&gt;VkRenderPassBeginInfo&lt;/a&gt; , &lt;a href=&quot;#VkRenderPassCreateInfo&quot;&gt;VkRenderPassCreateInfo&lt;/a&gt; , &lt;a href=&quot;#VkSamplerCreateInfo&quot;&gt;VkSamplerCreateInfo&lt;/a&gt; , &lt;a href=&quot;#VkSemaphoreCreateInfo&quot;&gt;VkSemaphoreCreateInfo&lt;/a&gt; , &lt;a href=&quot;#VkShaderModuleCreateInfo&quot;&gt;VkShaderModuleCreateInfo&lt;/a&gt; , &lt;a href=&quot;#VkSubmitInfo&quot;&gt;VkSubmitInfo&lt;/a&gt; , &lt;a href=&quot;#VkWriteDescriptorSet&quot;&gt;VkWriteDescriptorSet&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f6ffc1ac2e093d189e296b4ffec8a0ddc204a84e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkApplicationInfo&quot;&gt;VkApplicationInfo&lt;/a&gt;, &lt;a href=&quot;#VkInstanceCreateFlags&quot;&gt;VkInstanceCreateFlags&lt;/a&gt;, &lt;a href=&quot;#VkStructureType&quot;&gt;VkStructureType&lt;/a&gt;, &lt;a href=&quot;#vkCreateInstance&quot;&gt;vkCreateInstance&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkApplicationInfo&quot;&gt;VkApplicationInfo&lt;/a&gt; , &lt;a href=&quot;#VkInstanceCreateFlags&quot;&gt;VkInstanceCreateFlags&lt;/a&gt; , &lt;a href=&quot;#VkStructureType&quot;&gt;VkStructureType&lt;/a&gt; , &lt;a href=&quot;#vkCreateInstance&quot;&gt;vkCreateInstance&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="bf297b253efa81b7402ae64dd279b410a9a49a51" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkApplicationInfo&quot;&gt;VkApplicationInfo&lt;/a&gt;, &lt;a href=&quot;#vkCreateInstance&quot;&gt;vkCreateInstance&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkApplicationInfo&quot;&gt;VkApplicationInfo&lt;/a&gt; , &lt;a href=&quot;#vkCreateInstance&quot;&gt;vkCreateInstance&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="05fbb573aef4b8dc27fe28f82f0d1a349c2b15b9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkAttachmentDescription&quot;&gt;VkAttachmentDescription&lt;/a&gt;, &lt;a href=&quot;#VkAttachmentDescriptionFlagBits&quot;&gt;VkAttachmentDescriptionFlagBits&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkAttachmentDescription&quot;&gt;VkAttachmentDescription&lt;/a&gt; , &lt;a href=&quot;#VkAttachmentDescriptionFlagBits&quot;&gt;VkAttachmentDescriptionFlagBits&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ed71599eaf7e4b00485240225ce92ef55c3a2061" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkAttachmentDescription&quot;&gt;VkAttachmentDescription&lt;/a&gt;, &lt;a href=&quot;#VkAttachmentReference&quot;&gt;VkAttachmentReference&lt;/a&gt;, &lt;a href=&quot;#VkDescriptorImageInfo&quot;&gt;VkDescriptorImageInfo&lt;/a&gt;, &lt;a href=&quot;#VkImageCreateInfo&quot;&gt;VkImageCreateInfo&lt;/a&gt;, &lt;a href=&quot;#VkImageMemoryBarrier&quot;&gt;VkImageMemoryBarrier&lt;/a&gt;, &lt;a href=&quot;#vkCmdBlitImage&quot;&gt;vkCmdBlitImage&lt;/a&gt;, &lt;a href=&quot;#vkCmdClearColorImage&quot;&gt;vkCmdClearColorImage&lt;/a&gt;, &lt;a href=&quot;#vkCmdClearDepthStencilImage&quot;&gt;vkCmdClearDepthStencilImage&lt;/a&gt;, &lt;a href=&quot;#vkCmdCopyBufferToImage&quot;&gt;vkCmdCopyBufferToImage&lt;/a&gt;, &lt;a href=&quot;#vkCmdCopyImage&quot;&gt;vkCmdCopyImage&lt;/a&gt;, &lt;a href=&quot;#vkCmdCopyImageToBuffer&quot;&gt;vkCmdCopyImageToBuffer&lt;/a&gt;, &lt;a href=&quot;#vkCmdResolveImage&quot;&gt;vkCmdResolveImage&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkAttachmentDescription&quot;&gt;VkAttachmentDescription&lt;/a&gt; , &lt;a href=&quot;#VkAttachmentReference&quot;&gt;VkAttachmentReference&lt;/a&gt; , &lt;a href=&quot;#VkDescriptorImageInfo&quot;&gt;VkDescriptorImageInfo&lt;/a&gt; , &lt;a href=&quot;#VkImageCreateInfo&quot;&gt;VkImageCreateInfo&lt;/a&gt; , &lt;a href=&quot;#VkImageMemoryBarrier&quot;&gt;VkImageMemoryBarrier&lt;/a&gt; , &lt;a href=&quot;#vkCmdBlitImage&quot;&gt;vkCmdBlitImage&lt;/a&gt; , &lt;a href=&quot;#vkCmdClearColorImage&quot;&gt;vkCmdClearColorImage&lt;/a&gt; , &lt;a href=&quot;#vkCmdClearDepthStencilImage&quot;&gt;vkCmdClearDepthStencilImage&lt;/a&gt; , &lt;a href=&quot;#vkCmdCopyBufferToImage&quot;&gt;vkCmdCopyBufferToImage&lt;/a&gt; , &lt;a href=&quot;#vkCmdCopyImage&quot;&gt;vkCmdCopyImageTo&lt;/a&gt; , &lt;a href=&quot;#vkCmdCopyImageToBuffer&quot;&gt;vkCmdCopyImageTo&lt;/a&gt; , &lt;a href=&quot;#vkCmdResolveImage&quot;&gt;vkCmd 복사 이미지 복사&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4471c843834f494ee3e16d5722c94b3e96293fbc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkAttachmentDescription&quot;&gt;VkAttachmentDescription&lt;/a&gt;, &lt;a href=&quot;#VkBufferViewCreateInfo&quot;&gt;VkBufferViewCreateInfo&lt;/a&gt;, &lt;a href=&quot;#VkImageCreateInfo&quot;&gt;VkImageCreateInfo&lt;/a&gt;, &lt;a href=&quot;#VkImageViewCreateInfo&quot;&gt;VkImageViewCreateInfo&lt;/a&gt;, &lt;a href=&quot;#VkVertexInputAttributeDescription&quot;&gt;VkVertexInputAttributeDescription&lt;/a&gt;, &lt;a href=&quot;#vkGetPhysicalDeviceFormatProperties&quot;&gt;vkGetPhysicalDeviceFormatProperties&lt;/a&gt;, &lt;a href=&quot;#vkGetPhysicalDeviceImageFormatProperties&quot;&gt;vkGetPhysicalDeviceImageFormatProperties&lt;/a&gt;, &lt;a href=&quot;#vkGetPhysicalDeviceSparseImageFormatProperties&quot;&gt;vkGetPhysicalDeviceSparseImageFormatProperties&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkAttachmentDescription&quot;&gt;VkAttachmentDescription&lt;/a&gt; , &lt;a href=&quot;#VkBufferViewCreateInfo&quot;&gt;VkBufferViewCreateInfo&lt;/a&gt; , &lt;a href=&quot;#VkImageCreateInfo&quot;&gt;VkImageCreateInfo&lt;/a&gt; , &lt;a href=&quot;#VkImageViewCreateInfo&quot;&gt;VkImageViewCreateInfo&lt;/a&gt; , &lt;a href=&quot;#VkVertexInputAttributeDescription&quot;&gt;VkVertexInputAttributeDescription&lt;/a&gt; , &lt;a href=&quot;#vkGetPhysicalDeviceFormatProperties&quot;&gt;vkGetPhysicalDeviceFormatProperties&lt;/a&gt; , &lt;a href=&quot;#vkGetPhysicalDeviceImageFormatProperties&quot;&gt;vkGetPhysicalDeviceImageFormatProperties&lt;/a&gt; , &lt;a href=&quot;#vkGetPhysicalDeviceSparseImageFormatProperties&quot;&gt;vkGetPhysicalDeviceSparseImageFormatProperties&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="504f25daaa9575e35314d947ff1f04534cd2e024" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkAttachmentDescription&quot;&gt;VkAttachmentDescription&lt;/a&gt;, &lt;a href=&quot;#VkImageCreateInfo&quot;&gt;VkImageCreateInfo&lt;/a&gt;, &lt;a href=&quot;#VkPipelineMultisampleStateCreateInfo&quot;&gt;VkPipelineMultisampleStateCreateInfo&lt;/a&gt;, &lt;a href=&quot;#VkSampleCountFlags&quot;&gt;VkSampleCountFlags&lt;/a&gt;, &lt;a href=&quot;#vkGetPhysicalDeviceSparseImageFormatProperties&quot;&gt;vkGetPhysicalDeviceSparseImageFormatProperties&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkAttachmentDescription&quot;&gt;VkAttachmentDescription&lt;/a&gt; , &lt;a href=&quot;#VkImageCreateInfo&quot;&gt;VkImageCreateInfo&lt;/a&gt; , &lt;a href=&quot;#VkPipelineMultisampleStateCreateInfo&quot;&gt;VkPipelineMultisampleStateCreateInfo&lt;/a&gt; , &lt;a href=&quot;#VkSampleCountFlags&quot;&gt;VkSampleCountFlags&lt;/a&gt; , &lt;a href=&quot;#vkGetPhysicalDeviceSparseImageFormatProperties&quot;&gt;vkGetPhysicalDeviceSparseImageFormatProperties&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="22e25397d967d7e9e561c5ae8ebc5a6fc17550b7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkAttachmentDescription&quot;&gt;VkAttachmentDescription&lt;/a&gt;, &lt;a href=&quot;#VkRenderPassCreateFlags&quot;&gt;VkRenderPassCreateFlags&lt;/a&gt;, &lt;a href=&quot;#VkStructureType&quot;&gt;VkStructureType&lt;/a&gt;, &lt;a href=&quot;#VkSubpassDependency&quot;&gt;VkSubpassDependency&lt;/a&gt;, &lt;a href=&quot;#VkSubpassDescription&quot;&gt;VkSubpassDescription&lt;/a&gt;, &lt;a href=&quot;#vkCreateRenderPass&quot;&gt;vkCreateRenderPass&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkAttachmentDescription&quot;&gt;VkAttachmentDescription&lt;/a&gt; , &lt;a href=&quot;#VkRenderPassCreateFlags&quot;&gt;VkRenderPassCreateFlags&lt;/a&gt; , &lt;a href=&quot;#VkStructureType&quot;&gt;VkStructureType&lt;/a&gt; , &lt;a href=&quot;#VkSubpassDependency&quot;&gt;VkSubpassDependency&lt;/a&gt; , &lt;a href=&quot;#VkSubpassDescription&quot;&gt;VkSubpassDescription&lt;/a&gt; , &lt;a href=&quot;#vkCreateRenderPass&quot;&gt;vkCreateRenderPass&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7aa7fd1418896db153c8300f61e0a46c8c30b35e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkAttachmentDescriptionFlags&quot;&gt;VkAttachmentDescriptionFlags&lt;/a&gt;, &lt;a href=&quot;#VkAttachmentLoadOp&quot;&gt;VkAttachmentLoadOp&lt;/a&gt;, &lt;a href=&quot;#VkAttachmentStoreOp&quot;&gt;VkAttachmentStoreOp&lt;/a&gt;, &lt;a href=&quot;#VkFormat&quot;&gt;VkFormat&lt;/a&gt;, &lt;a href=&quot;#VkImageLayout&quot;&gt;VkImageLayout&lt;/a&gt;, &lt;a href=&quot;#VkRenderPassCreateInfo&quot;&gt;VkRenderPassCreateInfo&lt;/a&gt;, &lt;a href=&quot;#VkSampleCountFlagBits&quot;&gt;VkSampleCountFlagBits&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkAttachmentDescriptionFlags&quot;&gt;VkAttachmentDescriptionFlags&lt;/a&gt; , &lt;a href=&quot;#VkAttachmentLoadOp&quot;&gt;VkAttachmentLoadOp&lt;/a&gt; , &lt;a href=&quot;#VkAttachmentStoreOp&quot;&gt;VkAttachmentStoreOp&lt;/a&gt; , &lt;a href=&quot;#VkFormat&quot;&gt;VkFormat&lt;/a&gt; , &lt;a href=&quot;#VkImageLayout&quot;&gt;VkImageLayout&lt;/a&gt; , &lt;a href=&quot;#VkRenderPassCreateInfo&quot;&gt;VkRenderPassCreateInfo&lt;/a&gt; , &lt;a href=&quot;#VkSampleCountFlagBits&quot;&gt;VkSampleCountFlagBits&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e22a83584e0ef127c5acc10ebed2408f20cd4952" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkAttachmentReference&quot;&gt;VkAttachmentReference&lt;/a&gt;, &lt;a href=&quot;#VkPipelineBindPoint&quot;&gt;VkPipelineBindPoint&lt;/a&gt;, &lt;a href=&quot;#VkRenderPassCreateInfo&quot;&gt;VkRenderPassCreateInfo&lt;/a&gt;, &lt;a href=&quot;#VkSubpassDescriptionFlags&quot;&gt;VkSubpassDescriptionFlags&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkAttachmentReference&quot;&gt;VkAttachmentReference&lt;/a&gt; , &lt;a href=&quot;#VkPipelineBindPoint&quot;&gt;VkPipelineBindPoint&lt;/a&gt; , &lt;a href=&quot;#VkRenderPassCreateInfo&quot;&gt;VkRenderPassCreateInfo&lt;/a&gt; , &lt;a href=&quot;#VkSubpassDescriptionFlags&quot;&gt;VkSubpassDescriptionFlags&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="20c0e8ae20f54eb3e527f0b74dc026901a1380fc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkBindSparseInfo&quot;&gt;VkBindSparseInfo&lt;/a&gt;, &lt;a href=&quot;#VkBuffer&quot;&gt;VkBuffer&lt;/a&gt;, &lt;a href=&quot;#VkSparseMemoryBind&quot;&gt;VkSparseMemoryBind&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkBindSparseInfo&quot;&gt;VkBindSparseInfo&lt;/a&gt; , &lt;a href=&quot;#VkBuffer&quot;&gt;VkBuffer&lt;/a&gt; , &lt;a href=&quot;#VkSparseMemoryBind&quot;&gt;VkSparseMemoryBind&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="56e0099920b81801cdfdec6b8a8c04b7019f9d4a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkBindSparseInfo&quot;&gt;VkBindSparseInfo&lt;/a&gt;, &lt;a href=&quot;#VkFence&quot;&gt;VkFence&lt;/a&gt;, &lt;a href=&quot;#VkQueue&quot;&gt;VkQueue&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkBindSparseInfo&quot;&gt;VkBindSparseInfo&lt;/a&gt; , &lt;a href=&quot;#VkFence&quot;&gt;VkFence&lt;/a&gt; , &lt;a href=&quot;#VkQueue&quot;&gt;VkQueue&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a64abef53fea37804f3a7cfca9aad50db4fcd790" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkBindSparseInfo&quot;&gt;VkBindSparseInfo&lt;/a&gt;, &lt;a href=&quot;#VkImage&quot;&gt;VkImage&lt;/a&gt;, &lt;a href=&quot;#VkSparseImageMemoryBind&quot;&gt;VkSparseImageMemoryBind&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkBindSparseInfo&quot;&gt;VkBindSparseInfo&lt;/a&gt; , &lt;a href=&quot;#VkImage&quot;&gt;VkImage&lt;/a&gt; , &lt;a href=&quot;#VkSparseImageMemoryBind&quot;&gt;VkSparseImageMemoryBind&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="59174fde15521e229152d41fa8772d0d174aa536" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkBindSparseInfo&quot;&gt;VkBindSparseInfo&lt;/a&gt;, &lt;a href=&quot;#VkImage&quot;&gt;VkImage&lt;/a&gt;, &lt;a href=&quot;#VkSparseMemoryBind&quot;&gt;VkSparseMemoryBind&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkBindSparseInfo&quot;&gt;VkBindSparseInfo&lt;/a&gt; , &lt;a href=&quot;#VkImage&quot;&gt;VkImage&lt;/a&gt; , &lt;a href=&quot;#VkSparseMemoryBind&quot;&gt;VkSparseMemoryBind&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e3008a745d56463609f859e5d2d17e940fc7c3b7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkBindSparseInfo&quot;&gt;VkBindSparseInfo&lt;/a&gt;, &lt;a href=&quot;#VkSubmitInfo&quot;&gt;VkSubmitInfo&lt;/a&gt;, &lt;a href=&quot;#vkCreateSemaphore&quot;&gt;vkCreateSemaphore&lt;/a&gt;, &lt;a href=&quot;#vkDestroySemaphore&quot;&gt;vkDestroySemaphore&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkBindSparseInfo&quot;&gt;VkBindSparseInfo&lt;/a&gt; , &lt;a href=&quot;#VkSubmitInfo&quot;&gt;VkSubmitInfo&lt;/a&gt; , &lt;a href=&quot;#vkCreateSemaphore&quot;&gt;vkCreateSemaphore&lt;/a&gt; , &lt;a href=&quot;#vkDestroySemaphore&quot;&gt;vkDestroySemaphore&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="cbdefecd09f2acaf8e1f4e6feb5fcc6c345cd3fc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkBlendFactor&quot;&gt;VkBlendFactor&lt;/a&gt;, &lt;a href=&quot;#VkBlendOp&quot;&gt;VkBlendOp&lt;/a&gt;, &lt;code&gt;VkBool32&lt;/code&gt;, &lt;a href=&quot;#VkColorComponentFlags&quot;&gt;VkColorComponentFlags&lt;/a&gt;, &lt;a href=&quot;#VkPipelineColorBlendStateCreateInfo&quot;&gt;VkPipelineColorBlendStateCreateInfo&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkBlendFactor&quot;&gt;VkBlendFactor&lt;/a&gt; , &lt;a href=&quot;#VkBlendOp&quot;&gt;VkBlendOp&lt;/a&gt; , &lt;code&gt;VkBool32&lt;/code&gt; , &lt;a href=&quot;#VkColorComponentFlags&quot;&gt;VkColorComponentFlags&lt;/a&gt; , &lt;a href=&quot;#VkPipelineColorBlendStateCreateInfo&quot;&gt;VkPipelineColorBlendStateCreateInfo&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ec22627676bd529420fe96276670357c017038fc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkBuffer&quot;&gt;VkBuffer&lt;/a&gt;, &lt;a href=&quot;#VkBufferCopy&quot;&gt;VkBufferCopy&lt;/a&gt;, &lt;a href=&quot;#VkCommandBuffer&quot;&gt;VkCommandBuffer&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkBuffer&quot;&gt;VkBuffer&lt;/a&gt; , &lt;a href=&quot;#VkBufferCopy&quot;&gt;VkBufferCopy&lt;/a&gt; , &lt;a href=&quot;#VkCommandBuffer&quot;&gt;VkCommandBuffer&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0bd6432dc92a136c03e2fb14857797806cbbb054" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkBuffer&quot;&gt;VkBuffer&lt;/a&gt;, &lt;a href=&quot;#VkBufferImageCopy&quot;&gt;VkBufferImageCopy&lt;/a&gt;, &lt;a href=&quot;#VkCommandBuffer&quot;&gt;VkCommandBuffer&lt;/a&gt;, &lt;a href=&quot;#VkImage&quot;&gt;VkImage&lt;/a&gt;, &lt;a href=&quot;#VkImageLayout&quot;&gt;VkImageLayout&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkBuffer&quot;&gt;VkBuffer&lt;/a&gt; , &lt;a href=&quot;#VkBufferImageCopy&quot;&gt;VkBufferImageCopy&lt;/a&gt; , &lt;a href=&quot;#VkCommandBuffer&quot;&gt;VkCommandBuffer&lt;/a&gt; , &lt;a href=&quot;#VkImage&quot;&gt;VkImage&lt;/a&gt; , &lt;a href=&quot;#VkImageLayout&quot;&gt;VkImageLayout&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="26e2de5fa662d7d2618023f0e17d98b58c9f15f0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkBuffer&quot;&gt;VkBuffer&lt;/a&gt;, &lt;a href=&quot;#VkBufferViewCreateFlags&quot;&gt;VkBufferViewCreateFlags&lt;/a&gt;, &lt;code&gt;VkDeviceSize&lt;/code&gt;, &lt;a href=&quot;#VkFormat&quot;&gt;VkFormat&lt;/a&gt;, &lt;a href=&quot;#VkStructureType&quot;&gt;VkStructureType&lt;/a&gt;, &lt;a href=&quot;#vkCreateBufferView&quot;&gt;vkCreateBufferView&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkBuffer&quot;&gt;VkBuffer&lt;/a&gt; , &lt;a href=&quot;#VkBufferViewCreateFlags&quot;&gt;VkBufferViewCreateFlags&lt;/a&gt; , &lt;code&gt;VkDeviceSize&lt;/code&gt; , &lt;a href=&quot;#VkFormat&quot;&gt;VkFormat&lt;/a&gt; , &lt;a href=&quot;#VkStructureType&quot;&gt;VkStructureType&lt;/a&gt; , &lt;a href=&quot;#vkCreateBufferView&quot;&gt;vkCreateBufferView&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="fd3db4c06c943da961bc1254aa3927dc4aca4963" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkBuffer&quot;&gt;VkBuffer&lt;/a&gt;, &lt;a href=&quot;#VkCommandBuffer&quot;&gt;VkCommandBuffer&lt;/a&gt;, &lt;code&gt;VkDeviceSize&lt;/code&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkBuffer&quot;&gt;VkBuffer&lt;/a&gt; , &lt;a href=&quot;#VkCommandBuffer&quot;&gt;VkCommandBuffer&lt;/a&gt; , &lt;code&gt;VkDeviceSize&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="74f675e1660542ebed163bfd86999e742e8563bd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkBuffer&quot;&gt;VkBuffer&lt;/a&gt;, &lt;a href=&quot;#VkCommandBuffer&quot;&gt;VkCommandBuffer&lt;/a&gt;, &lt;code&gt;VkDeviceSize&lt;/code&gt;, &lt;a href=&quot;#VkIndexType&quot;&gt;VkIndexType&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkBuffer&quot;&gt;VkBuffer&lt;/a&gt; , &lt;a href=&quot;#VkCommandBuffer&quot;&gt;VkCommandBuffer&lt;/a&gt; , &lt;code&gt;VkDeviceSize&lt;/code&gt; , &lt;a href=&quot;#VkIndexType&quot;&gt;VkIndexType&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d18fa5c49e49f62a0dfc6ba4e915861c609d254a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkBuffer&quot;&gt;VkBuffer&lt;/a&gt;, &lt;a href=&quot;#VkCommandBuffer&quot;&gt;VkCommandBuffer&lt;/a&gt;, &lt;code&gt;VkDeviceSize&lt;/code&gt;, &lt;a href=&quot;#VkQueryPool&quot;&gt;VkQueryPool&lt;/a&gt;, &lt;a href=&quot;#VkQueryResultFlags&quot;&gt;VkQueryResultFlags&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkBuffer&quot;&gt;VkBuffer&lt;/a&gt; , &lt;a href=&quot;#VkCommandBuffer&quot;&gt;VkCommandBuffer&lt;/a&gt; , &lt;code&gt;VkDeviceSize&lt;/code&gt; , &lt;a href=&quot;#VkQueryPool&quot;&gt;VkQueryPool&lt;/a&gt; , &lt;a href=&quot;#VkQueryResultFlags&quot;&gt;VkQueryResultFlags&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="047c285f5af124fa7be52c56797409efdc3a9af4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkBuffer&quot;&gt;VkBuffer&lt;/a&gt;, &lt;a href=&quot;#VkDevice&quot;&gt;VkDevice&lt;/a&gt;, &lt;a href=&quot;#VkDeviceMemory&quot;&gt;VkDeviceMemory&lt;/a&gt;, &lt;code&gt;VkDeviceSize&lt;/code&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkBuffer&quot;&gt;VkBuffer&lt;/a&gt; , &lt;a href=&quot;#VkDevice&quot;&gt;VkDevice&lt;/a&gt; , &lt;a href=&quot;#VkDeviceMemory&quot;&gt;VkDeviceMemory&lt;/a&gt; , &lt;code&gt;VkDeviceSize&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b8689e67eaeda9552f4aa3417c0e6687e9631ea5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkBuffer&quot;&gt;VkBuffer&lt;/a&gt;, &lt;a href=&quot;#VkDevice&quot;&gt;VkDevice&lt;/a&gt;, &lt;a href=&quot;#VkMemoryRequirements&quot;&gt;VkMemoryRequirements&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkBuffer&quot;&gt;VkBuffer&lt;/a&gt; , &lt;a href=&quot;#VkDevice&quot;&gt;VkDevice&lt;/a&gt; , &lt;a href=&quot;#VkMemoryRequirements&quot;&gt;VkMemory 요구 사항&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9ef63a63517f7dff2ca69fc94d629fe04d4758be" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkBuffer&quot;&gt;VkBuffer&lt;/a&gt;, &lt;code&gt;VkDeviceSize&lt;/code&gt;, &lt;a href=&quot;#VkWriteDescriptorSet&quot;&gt;VkWriteDescriptorSet&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkBuffer&quot;&gt;VkBuffer&lt;/a&gt; , &lt;code&gt;VkDeviceSize&lt;/code&gt; , &lt;a href=&quot;#VkWriteDescriptorSet&quot;&gt;VkWriteDescriptorSet&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="38dfda29c58cc5c3613f5fb45be8d6dfd62c9895" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkBufferCopy&quot;&gt;VkBufferCopy&lt;/a&gt;, &lt;a href=&quot;#VkBufferCreateInfo&quot;&gt;VkBufferCreateInfo&lt;/a&gt;, &lt;a href=&quot;#VkBufferImageCopy&quot;&gt;VkBufferImageCopy&lt;/a&gt;, &lt;a href=&quot;#VkBufferMemoryBarrier&quot;&gt;VkBufferMemoryBarrier&lt;/a&gt;, &lt;a href=&quot;#VkBufferViewCreateInfo&quot;&gt;VkBufferViewCreateInfo&lt;/a&gt;, &lt;a href=&quot;#VkDescriptorBufferInfo&quot;&gt;VkDescriptorBufferInfo&lt;/a&gt;, &lt;a href=&quot;#VkImageFormatProperties&quot;&gt;VkImageFormatProperties&lt;/a&gt;, &lt;a href=&quot;#VkMappedMemoryRange&quot;&gt;VkMappedMemoryRange&lt;/a&gt;, &lt;a href=&quot;#VkMemoryAllocateInfo&quot;&gt;VkMemoryAllocateInfo&lt;/a&gt;, &lt;a href=&quot;#VkMemoryHeap&quot;&gt;VkMemoryHeap&lt;/a&gt;, &lt;a href=&quot;#VkMemoryRequirements&quot;&gt;VkMemoryRequirements&lt;/a&gt;, &lt;a href=&quot;#VkPhysicalDeviceLimits&quot;&gt;VkPhysicalDeviceLimits&lt;/a&gt;, &lt;a href=&quot;#VkSparseImageMemoryBind&quot;&gt;VkSparseImageMemoryBind&lt;/a&gt;, &lt;a href=&quot;#VkSparseImageMemoryRequirements&quot;&gt;VkSparseImageMemoryRequirements&lt;/a&gt;, &lt;a href=&quot;#VkSparseMemoryBind&quot;&gt;VkSparseMemoryBind&lt;/a&gt;, &lt;a href=&quot;#VkSubresourceLayout&quot;&gt;VkSubresourceLayout&lt;/a&gt;, &lt;a href=&quot;#vkBindBufferMemory&quot;&gt;vkBindBufferMemory&lt;/a&gt;, &lt;a href=&quot;#vkBindImageMemory&quot;&gt;vkBindImageMemory&lt;/a&gt;, &lt;a href=&quot;#vkCmdBindIndexBuffer&quot;&gt;vkCmdBindIndexBuffer&lt;/a&gt;, &lt;a href=&quot;#vkCmdBindVertexBuffers&quot;&gt;vkCmdBindVertexBuffers&lt;/a&gt;, &lt;a href=&quot;#vkCmdCopyQueryPoolResults&quot;&gt;vkCmdCopyQueryPoolResults&lt;/a&gt;, &lt;a href=&quot;#vkCmdDispatchIndirect&quot;&gt;vkCmdDispatchIndirect&lt;/a&gt;, &lt;a href=&quot;#vkCmdDrawIndexedIndirect&quot;&gt;vkCmdDrawIndexedIndirect&lt;/a&gt;, &lt;a href=&quot;#vkCmdDrawIndirect&quot;&gt;vkCmdDrawIndirect&lt;/a&gt;, &lt;a href=&quot;#vkCmdFillBuffer&quot;&gt;vkCmdFillBuffer&lt;/a&gt;, &lt;a href=&quot;#vkCmdUpdateBuffer&quot;&gt;vkCmdUpdateBuffer&lt;/a&gt;, &lt;a href=&quot;#vkGetDeviceMemoryCommitment&quot;&gt;vkGetDeviceMemoryCommitment&lt;/a&gt;, &lt;a href=&quot;#vkGetQueryPoolResults&quot;&gt;vkGetQueryPoolResults&lt;/a&gt;, &lt;a href=&quot;#vkMapMemory&quot;&gt;vkMapMemory&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkBufferCopy&quot;&gt;VkBufferCopy&lt;/a&gt; , &lt;a href=&quot;#VkBufferCreateInfo&quot;&gt;VkBufferCreateInfo&lt;/a&gt; , &lt;a href=&quot;#VkBufferImageCopy&quot;&gt;VkBufferImageCopy&lt;/a&gt; , &lt;a href=&quot;#VkBufferMemoryBarrier&quot;&gt;VkBufferMemoryBarrier&lt;/a&gt; , &lt;a href=&quot;#VkBufferViewCreateInfo&quot;&gt;VkBufferViewCreateInfo&lt;/a&gt; , &lt;a href=&quot;#VkDescriptorBufferInfo&quot;&gt;VkDescriptorBufferInfo&lt;/a&gt; , &lt;a href=&quot;#VkImageFormatProperties&quot;&gt;VkImageFormatProperties&lt;/a&gt; , &lt;a href=&quot;#VkMappedMemoryRange&quot;&gt;VkMappedMemoryRange&lt;/a&gt; , &lt;a href=&quot;#VkMemoryAllocateInfo&quot;&gt;VkMemoryAllocateInfo&lt;/a&gt; , &lt;a href=&quot;#VkMemoryHeap&quot;&gt;VkMemoryHeap&lt;/a&gt; , &lt;a href=&quot;#VkMemoryRequirements&quot;&gt;VkMemoryRequirements&lt;/a&gt; , &lt;a href=&quot;#VkPhysicalDeviceLimits&quot;&gt;VkPhysicalDeviceLimits&lt;/a&gt; , &lt;a href=&quot;#VkSparseImageMemoryBind&quot;&gt;VkSparseImageMemoryBind&lt;/a&gt; , &lt;a href=&quot;#VkSparseImageMemoryRequirements&quot;&gt;VkSparseImageMemoryRequirements&lt;/a&gt; , &lt;a href=&quot;#VkSparseMemoryBind&quot;&gt;VkSparseMemoryBind&lt;/a&gt; , &lt;a href=&quot;#VkSubresourceLayout&quot;&gt;VkSubresourceLayout&lt;/a&gt; , &lt;a href=&quot;#vkBindBufferMemory&quot;&gt;vkBindBufferMemory&lt;/a&gt; , &lt;a href=&quot;#vkBindImageMemory&quot;&gt;vkBindImageMemory&lt;/a&gt; ,&lt;a href=&quot;#vkCmdBindIndexBuffer&quot;&gt;vkCmdBindIndexBuffer&lt;/a&gt; , &lt;a href=&quot;#vkCmdBindVertexBuffers&quot;&gt;vkCmdBindVertexBuffers&lt;/a&gt; , &lt;a href=&quot;#vkCmdCopyQueryPoolResults&quot;&gt;vkCmdCopyQueryPoolResults&lt;/a&gt; , &lt;a href=&quot;#vkCmdDispatchIndirect&quot;&gt;vkCmdDispatchIndirect&lt;/a&gt; , &lt;a href=&quot;#vkCmdDrawIndexedIndirect&quot;&gt;vkCmdDrawIndexedIndirect&lt;/a&gt; , &lt;a href=&quot;#vkCmdDrawIndirect&quot;&gt;vkCmdDrawIndirect&lt;/a&gt; , &lt;a href=&quot;#vkCmdFillBuffer&quot;&gt;vkCmdFillBuffer&lt;/a&gt; , &lt;a href=&quot;#vkCmdUpdateBuffer&quot;&gt;vkCmdUpdateBuffer&lt;/a&gt; , &lt;a href=&quot;#vkGetDeviceMemoryCommitment&quot;&gt;vkGetDeviceMemoryCommitmentResult vkGetDeviceMemoryCommitmentResult vkGetDeviceMemoryCommitmentResult vkGetDeviceMemoryCommitment vkGetDeviceMemoryCommitmentResult vkGetDeviceMemoryCommitmentResult vkGetDeviceMemoryCommitmentResult vkGetCMemoryBindIndexBuffer&lt;/a&gt; , &lt;a href=&quot;#vkGetQueryPoolResults&quot;&gt;vkCmdBindVertexBuffers&lt;/a&gt; , &lt;a href=&quot;#vkMapMemory&quot;&gt;vkCmdCopyQueryPoolResults&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3bbdac856738f79c1f9b7d5370e7eee53590d1f6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkBufferCreateFlagBits&quot;&gt;VkBufferCreateFlagBits&lt;/a&gt;, &lt;a href=&quot;#VkBufferCreateInfo&quot;&gt;VkBufferCreateInfo&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkBufferCreateFlagBits&quot;&gt;VkBufferCreateFlagBits&lt;/a&gt; , &lt;a href=&quot;#VkBufferCreateInfo&quot;&gt;VkBufferCreateInfo&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6bc49f26ffd8bea74a4ab746f24ed62830799ba3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkBufferCreateFlags&quot;&gt;VkBufferCreateFlags&lt;/a&gt;, &lt;a href=&quot;#VkBufferUsageFlags&quot;&gt;VkBufferUsageFlags&lt;/a&gt;, &lt;code&gt;VkDeviceSize&lt;/code&gt;, &lt;a href=&quot;#VkSharingMode&quot;&gt;VkSharingMode&lt;/a&gt;, &lt;a href=&quot;#VkStructureType&quot;&gt;VkStructureType&lt;/a&gt;, &lt;a href=&quot;#vkCreateBuffer&quot;&gt;vkCreateBuffer&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkBufferCreateFlags&quot;&gt;VkBufferCreateFlags&lt;/a&gt; , &lt;a href=&quot;#VkBufferUsageFlags&quot;&gt;VkBufferUsageFlags&lt;/a&gt; , &lt;code&gt;VkDeviceSize&lt;/code&gt; , &lt;a href=&quot;#VkSharingMode&quot;&gt;VkSharingMode&lt;/a&gt; , &lt;a href=&quot;#VkStructureType&quot;&gt;VkStructureType&lt;/a&gt; , &lt;a href=&quot;#vkCreateBuffer&quot;&gt;vkCreateBuffer&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="af6f2b5c8a22b94c9f02da13bd65118a30e78505" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkBufferCreateInfo&quot;&gt;VkBufferCreateInfo&lt;/a&gt;, &lt;a href=&quot;#VkBufferUsageFlagBits&quot;&gt;VkBufferUsageFlagBits&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkBufferCreateInfo&quot;&gt;VkBufferCreateInfo&lt;/a&gt; , &lt;a href=&quot;#VkBufferUsageFlagBits&quot;&gt;VkBufferUsageFlagBits&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9953fde498b904dd9b3df21b2bc1f72e369507ca" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkBufferCreateInfo&quot;&gt;VkBufferCreateInfo&lt;/a&gt;, &lt;a href=&quot;#VkImageCreateInfo&quot;&gt;VkImageCreateInfo&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkBufferCreateInfo&quot;&gt;VkBufferCreateInfo&lt;/a&gt; , &lt;a href=&quot;#VkImageCreateInfo&quot;&gt;VkImageCreateInfo&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ef5fb1aaa26be03b4e6d15cd7573b74341bce777" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkBufferImageCopy&quot;&gt;VkBufferImageCopy&lt;/a&gt;, &lt;a href=&quot;#VkImageAspectFlags&quot;&gt;VkImageAspectFlags&lt;/a&gt;, &lt;a href=&quot;#VkImageBlit&quot;&gt;VkImageBlit&lt;/a&gt;, &lt;a href=&quot;#VkImageCopy&quot;&gt;VkImageCopy&lt;/a&gt;, &lt;a href=&quot;#VkImageResolve&quot;&gt;VkImageResolve&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkBufferImageCopy&quot;&gt;VkBufferImageCopy&lt;/a&gt; , &lt;a href=&quot;#VkImageAspectFlags&quot;&gt;VkImageAspectFlags&lt;/a&gt; , &lt;a href=&quot;#VkImageBlit&quot;&gt;VkImageBlit&lt;/a&gt; , &lt;a href=&quot;#VkImageCopy&quot;&gt;VkImageCopy&lt;/a&gt; , &lt;a href=&quot;#VkImageResolve&quot;&gt;VkImageResolve&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="155863622ad3796e49bed1b09b06282b617c118a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkBufferImageCopy&quot;&gt;VkBufferImageCopy&lt;/a&gt;, &lt;a href=&quot;#VkImageBlit&quot;&gt;VkImageBlit&lt;/a&gt;, &lt;a href=&quot;#VkImageCopy&quot;&gt;VkImageCopy&lt;/a&gt;, &lt;a href=&quot;#VkImageResolve&quot;&gt;VkImageResolve&lt;/a&gt;, &lt;a href=&quot;#VkSparseImageMemoryBind&quot;&gt;VkSparseImageMemoryBind&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkBufferImageCopy&quot;&gt;VkBufferImageCopy&lt;/a&gt; , &lt;a href=&quot;#VkImageBlit&quot;&gt;VkImageBlit&lt;/a&gt; , &lt;a href=&quot;#VkImageCopy&quot;&gt;VkImageCopy&lt;/a&gt; , &lt;a href=&quot;#VkImageResolve&quot;&gt;VkImageResolve&lt;/a&gt; , &lt;a href=&quot;#VkSparseImageMemoryBind&quot;&gt;VkSparseImageMemoryBind&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="303917ee537a875ed9a1885db5db1d3e472027aa" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkBufferImageCopy&quot;&gt;VkBufferImageCopy&lt;/a&gt;, &lt;a href=&quot;#VkImageCopy&quot;&gt;VkImageCopy&lt;/a&gt;, &lt;a href=&quot;#VkImageCreateInfo&quot;&gt;VkImageCreateInfo&lt;/a&gt;, &lt;a href=&quot;#VkImageFormatProperties&quot;&gt;VkImageFormatProperties&lt;/a&gt;, &lt;a href=&quot;#VkImageResolve&quot;&gt;VkImageResolve&lt;/a&gt;, &lt;a href=&quot;#VkQueueFamilyProperties&quot;&gt;VkQueueFamilyProperties&lt;/a&gt;, &lt;a href=&quot;#VkSparseImageFormatProperties&quot;&gt;VkSparseImageFormatProperties&lt;/a&gt;, &lt;a href=&quot;#VkSparseImageMemoryBind&quot;&gt;VkSparseImageMemoryBind&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkBufferImageCopy&quot;&gt;VkBufferImageCopy&lt;/a&gt; , &lt;a href=&quot;#VkImageCopy&quot;&gt;VkImageCopy&lt;/a&gt; , &lt;a href=&quot;#VkImageCreateInfo&quot;&gt;VkImageCreateInfo&lt;/a&gt; , &lt;a href=&quot;#VkImageFormatProperties&quot;&gt;VkImageFormatProperties&lt;/a&gt; , &lt;a href=&quot;#VkImageResolve&quot;&gt;VkImageResolve&lt;/a&gt; , &lt;a href=&quot;#VkQueueFamilyProperties&quot;&gt;VkQueueFamilyProperties&lt;/a&gt; , &lt;a href=&quot;#VkSparseImageFormatProperties&quot;&gt;VkSparseImageFormatProperties&lt;/a&gt; , &lt;a href=&quot;#VkSparseImageMemoryBind&quot;&gt;VkSparseImageMemoryBind&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3fe706c6263da3fd681d4661c4e91234ef16b4d0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkBufferMemoryBarrier&quot;&gt;VkBufferMemoryBarrier&lt;/a&gt;, &lt;a href=&quot;#VkBufferViewCreateInfo&quot;&gt;VkBufferViewCreateInfo&lt;/a&gt;, &lt;a href=&quot;#VkDescriptorBufferInfo&quot;&gt;VkDescriptorBufferInfo&lt;/a&gt;, &lt;a href=&quot;#VkSparseBufferMemoryBindInfo&quot;&gt;VkSparseBufferMemoryBindInfo&lt;/a&gt;, &lt;a href=&quot;#vkBindBufferMemory&quot;&gt;vkBindBufferMemory&lt;/a&gt;, &lt;a href=&quot;#vkCmdBindIndexBuffer&quot;&gt;vkCmdBindIndexBuffer&lt;/a&gt;, &lt;a href=&quot;#vkCmdBindVertexBuffers&quot;&gt;vkCmdBindVertexBuffers&lt;/a&gt;, &lt;a href=&quot;#vkCmdCopyBuffer&quot;&gt;vkCmdCopyBuffer&lt;/a&gt;, &lt;a href=&quot;#vkCmdCopyBufferToImage&quot;&gt;vkCmdCopyBufferToImage&lt;/a&gt;, &lt;a href=&quot;#vkCmdCopyImageToBuffer&quot;&gt;vkCmdCopyImageToBuffer&lt;/a&gt;, &lt;a href=&quot;#vkCmdCopyQueryPoolResults&quot;&gt;vkCmdCopyQueryPoolResults&lt;/a&gt;, &lt;a href=&quot;#vkCmdDispatchIndirect&quot;&gt;vkCmdDispatchIndirect&lt;/a&gt;, &lt;a href=&quot;#vkCmdDrawIndexedIndirect&quot;&gt;vkCmdDrawIndexedIndirect&lt;/a&gt;, &lt;a href=&quot;#vkCmdDrawIndirect&quot;&gt;vkCmdDrawIndirect&lt;/a&gt;, &lt;a href=&quot;#vkCmdFillBuffer&quot;&gt;vkCmdFillBuffer&lt;/a&gt;, &lt;a href=&quot;#vkCmdUpdateBuffer&quot;&gt;vkCmdUpdateBuffer&lt;/a&gt;, &lt;a href=&quot;#vkCreateBuffer&quot;&gt;vkCreateBuffer&lt;/a&gt;, &lt;a href=&quot;#vkDestroyBuffer&quot;&gt;vkDestroyBuffer&lt;/a&gt;, &lt;a href=&quot;#vkGetBufferMemoryRequirements&quot;&gt;vkGetBufferMemoryRequirements&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkBufferMemoryBarrier&quot;&gt;VkBufferMemoryBarrier&lt;/a&gt; , &lt;a href=&quot;#VkBufferViewCreateInfo&quot;&gt;VkBufferViewCreateInfo&lt;/a&gt; , &lt;a href=&quot;#VkDescriptorBufferInfo&quot;&gt;VkDescriptorBufferInfo&lt;/a&gt; , &lt;a href=&quot;#VkSparseBufferMemoryBindInfo&quot;&gt;VkSparseBufferMemoryBindInfo&lt;/a&gt; , &lt;a href=&quot;#vkBindBufferMemory&quot;&gt;vkBindBufferMemory&lt;/a&gt; , &lt;a href=&quot;#vkCmdBindIndexBuffer&quot;&gt;vkCmdBindIndexBuffer&lt;/a&gt; , &lt;a href=&quot;#vkCmdBindVertexBuffers&quot;&gt;vkCmdBindVertexBuffers&lt;/a&gt; , &lt;a href=&quot;#vkCmdCopyBuffer&quot;&gt;vkCmdCopyBuffer&lt;/a&gt; , &lt;a href=&quot;#vkCmdCopyBufferToImage&quot;&gt;vkCmdCopyBufferToImage&lt;/a&gt; , &lt;a href=&quot;#vkCmdCopyImageToBuffer&quot;&gt;vkCmdCopyImageToBuffer&lt;/a&gt; , &lt;a href=&quot;#vkCmdCopyQueryPoolResults&quot;&gt;vkCmdCopyQueryPoolResults&lt;/a&gt; , &lt;a href=&quot;#vkCmdDispatchIndirect&quot;&gt;vkCmdDispatchIndirect&lt;/a&gt; , &lt;a href=&quot;#vkCmdDrawIndexedIndirect&quot;&gt;vkCmdDrawIndexedIndirect&lt;/a&gt; , &lt;a href=&quot;#vkCmdDrawIndirect&quot;&gt;vkCmdDrawIndirect&lt;/a&gt; , &lt;a href=&quot;#vkCmdFillBuffer&quot;&gt;vkCmdFillBuffer&lt;/a&gt; , &lt;a href=&quot;#vkCmdUpdateBuffer&quot;&gt;vkCmdUpdateBuffer&lt;/a&gt; , &lt;a href=&quot;#vkCreateBuffer&quot;&gt;vkCreateBuffer&lt;/a&gt; , &lt;a href=&quot;#vkDestroyBuffer&quot;&gt;vkDestroyBuffer&lt;/a&gt;, &lt;a href=&quot;#vkGetBufferMemoryRequirements&quot;&gt;vkGetBufferMemoryRequirements&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d7b2645ecc68ce6c58cd3e940c78e4ee688ba31b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkBufferMemoryBarrier&quot;&gt;VkBufferMemoryBarrier&lt;/a&gt;, &lt;a href=&quot;#VkCommandBuffer&quot;&gt;VkCommandBuffer&lt;/a&gt;, &lt;a href=&quot;#VkDependencyFlags&quot;&gt;VkDependencyFlags&lt;/a&gt;, &lt;a href=&quot;#VkImageMemoryBarrier&quot;&gt;VkImageMemoryBarrier&lt;/a&gt;, &lt;a href=&quot;#VkMemoryBarrier&quot;&gt;VkMemoryBarrier&lt;/a&gt;, &lt;a href=&quot;#VkPipelineStageFlags&quot;&gt;VkPipelineStageFlags&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkBufferMemoryBarrier&quot;&gt;VkBufferMemoryBarrier&lt;/a&gt; , &lt;a href=&quot;#VkCommandBuffer&quot;&gt;VkCommandBuffer&lt;/a&gt; , &lt;a href=&quot;#VkDependencyFlags&quot;&gt;VkDependencyFlags&lt;/a&gt; , &lt;a href=&quot;#VkImageMemoryBarrier&quot;&gt;VkImageMemoryBarrier&lt;/a&gt; , &lt;a href=&quot;#VkMemoryBarrier&quot;&gt;VkMemoryBarrier&lt;/a&gt; , &lt;a href=&quot;#VkPipelineStageFlags&quot;&gt;VkPipelineStageFlags&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="29a7184c0dfe6b0f52b83bdb7bdb146aa68b0328" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkBufferMemoryBarrier&quot;&gt;VkBufferMemoryBarrier&lt;/a&gt;, &lt;a href=&quot;#VkCommandBuffer&quot;&gt;VkCommandBuffer&lt;/a&gt;, &lt;a href=&quot;#VkEvent&quot;&gt;VkEvent&lt;/a&gt;, &lt;a href=&quot;#VkImageMemoryBarrier&quot;&gt;VkImageMemoryBarrier&lt;/a&gt;, &lt;a href=&quot;#VkMemoryBarrier&quot;&gt;VkMemoryBarrier&lt;/a&gt;, &lt;a href=&quot;#VkPipelineStageFlags&quot;&gt;VkPipelineStageFlags&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkBufferMemoryBarrier&quot;&gt;VkBufferMemoryBarrier&lt;/a&gt; , &lt;a href=&quot;#VkCommandBuffer&quot;&gt;VkCommandBuffer&lt;/a&gt; , &lt;a href=&quot;#VkEvent&quot;&gt;VkEvent&lt;/a&gt; , &lt;a href=&quot;#VkImageMemoryBarrier&quot;&gt;VkImageMemoryBarrier&lt;/a&gt; , &lt;a href=&quot;#VkMemoryBarrier&quot;&gt;VkMemoryBarrier&lt;/a&gt; , &lt;a href=&quot;#VkPipelineStageFlags&quot;&gt;VkPipelineStageFlags&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0b7036bbb05d573e486a74dda98475bc723c2912" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkBufferView&quot;&gt;VkBufferView&lt;/a&gt;, &lt;a href=&quot;#VkDescriptorBufferInfo&quot;&gt;VkDescriptorBufferInfo&lt;/a&gt;, &lt;a href=&quot;#VkDescriptorImageInfo&quot;&gt;VkDescriptorImageInfo&lt;/a&gt;, &lt;a href=&quot;#VkDescriptorSet&quot;&gt;VkDescriptorSet&lt;/a&gt;, &lt;a href=&quot;#VkDescriptorType&quot;&gt;VkDescriptorType&lt;/a&gt;, &lt;a href=&quot;#VkStructureType&quot;&gt;VkStructureType&lt;/a&gt;, &lt;a href=&quot;#vkUpdateDescriptorSets&quot;&gt;vkUpdateDescriptorSets&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkBufferView&quot;&gt;VkBufferView&lt;/a&gt; , &lt;a href=&quot;#VkDescriptorBufferInfo&quot;&gt;VkDescriptorBufferInfo&lt;/a&gt; , &lt;a href=&quot;#VkDescriptorImageInfo&quot;&gt;VkDescriptorImageInfo&lt;/a&gt; , &lt;a href=&quot;#VkDescriptorSet&quot;&gt;VkDescriptorSet&lt;/a&gt; , &lt;a href=&quot;#VkDescriptorType&quot;&gt;VkDescriptorType&lt;/a&gt; , &lt;a href=&quot;#VkStructureType&quot;&gt;VkStructureType&lt;/a&gt; , &lt;a href=&quot;#vkUpdateDescriptorSets&quot;&gt;vkUpdateDescriptorSets&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1697e58949bff4cdff331bfa9461d1f218d1c499" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkClearAttachment&quot;&gt;VkClearAttachment&lt;/a&gt;, &lt;a href=&quot;#VkClearColorValue&quot;&gt;VkClearColorValue&lt;/a&gt;, &lt;a href=&quot;#VkClearDepthStencilValue&quot;&gt;VkClearDepthStencilValue&lt;/a&gt;, &lt;a href=&quot;#VkRenderPassBeginInfo&quot;&gt;VkRenderPassBeginInfo&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkClearAttachment&quot;&gt;VkClearAttachment&lt;/a&gt; , &lt;a href=&quot;#VkClearColorValue&quot;&gt;VkClearColorValue&lt;/a&gt; , &lt;a href=&quot;#VkClearDepthStencilValue&quot;&gt;VkClearDepthStencilValue&lt;/a&gt; , &lt;a href=&quot;#VkRenderPassBeginInfo&quot;&gt;VkRenderPassBeginInfo&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9b97b1324399ba783ab74b9701f07989bcb4ef6a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkClearAttachment&quot;&gt;VkClearAttachment&lt;/a&gt;, &lt;a href=&quot;#VkClearRect&quot;&gt;VkClearRect&lt;/a&gt;, &lt;a href=&quot;#VkCommandBuffer&quot;&gt;VkCommandBuffer&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkClearAttachment&quot;&gt;VkClearAttachment&lt;/a&gt; , &lt;a href=&quot;#VkClearRect&quot;&gt;VkClearRect&lt;/a&gt; , &lt;a href=&quot;#VkCommandBuffer&quot;&gt;VkCommandBuffer&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="56d17f7c30739bdd444e9bed05570a05337df1ac" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkClearAttachment&quot;&gt;VkClearAttachment&lt;/a&gt;, &lt;a href=&quot;#VkImageAspectFlagBits&quot;&gt;VkImageAspectFlagBits&lt;/a&gt;, &lt;a href=&quot;#VkImageSubresource&quot;&gt;VkImageSubresource&lt;/a&gt;, &lt;a href=&quot;#VkImageSubresourceLayers&quot;&gt;VkImageSubresourceLayers&lt;/a&gt;, &lt;a href=&quot;#VkImageSubresourceRange&quot;&gt;VkImageSubresourceRange&lt;/a&gt;, &lt;a href=&quot;#VkSparseImageFormatProperties&quot;&gt;VkSparseImageFormatProperties&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkClearAttachment&quot;&gt;VkClearAttachment&lt;/a&gt; , &lt;a href=&quot;#VkImageAspectFlagBits&quot;&gt;VkImageAspectFlagBits&lt;/a&gt; , &lt;a href=&quot;#VkImageSubresource&quot;&gt;VkImageSubresource&lt;/a&gt; , &lt;a href=&quot;#VkImageSubresourceLayers&quot;&gt;VkImageSubresourceLayers&lt;/a&gt; , &lt;a href=&quot;#VkImageSubresourceRange&quot;&gt;VkImageSubresourceRange&lt;/a&gt; , &lt;a href=&quot;#VkSparseImageFormatProperties&quot;&gt;VkSparseImageFormatProperties&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b6498f8388f6719b4dfa9326ea872712982aacd7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkClearColorValue&quot;&gt;VkClearColorValue&lt;/a&gt;, &lt;a href=&quot;#VkCommandBuffer&quot;&gt;VkCommandBuffer&lt;/a&gt;, &lt;a href=&quot;#VkImage&quot;&gt;VkImage&lt;/a&gt;, &lt;a href=&quot;#VkImageLayout&quot;&gt;VkImageLayout&lt;/a&gt;, &lt;a href=&quot;#VkImageSubresourceRange&quot;&gt;VkImageSubresourceRange&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkClearColorValue&quot;&gt;VkClearColorValue&lt;/a&gt; , &lt;a href=&quot;#VkCommandBuffer&quot;&gt;VkCommandBuffer&lt;/a&gt; , &lt;a href=&quot;#VkImage&quot;&gt;VkImage&lt;/a&gt; , &lt;a href=&quot;#VkImageLayout&quot;&gt;VkImageLayout&lt;/a&gt; , &lt;a href=&quot;#VkImageSubresourceRange&quot;&gt;VkImageSubresourceRange&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ed973e23e8ade8df9f2fa941a3dfb63e71f9eb44" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkClearDepthStencilValue&quot;&gt;VkClearDepthStencilValue&lt;/a&gt;, &lt;a href=&quot;#VkCommandBuffer&quot;&gt;VkCommandBuffer&lt;/a&gt;, &lt;a href=&quot;#VkImage&quot;&gt;VkImage&lt;/a&gt;, &lt;a href=&quot;#VkImageLayout&quot;&gt;VkImageLayout&lt;/a&gt;, &lt;a href=&quot;#VkImageSubresourceRange&quot;&gt;VkImageSubresourceRange&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkClearDepthStencilValue&quot;&gt;VkClearDepthStencilValue&lt;/a&gt; , &lt;a href=&quot;#VkCommandBuffer&quot;&gt;VkCommandBuffer&lt;/a&gt; , &lt;a href=&quot;#VkImage&quot;&gt;VkImage&lt;/a&gt; , &lt;a href=&quot;#VkImageLayout&quot;&gt;VkImageLayout&lt;/a&gt; , &lt;a href=&quot;#VkImageSubresourceRange&quot;&gt;VkImageSubresourceRange&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="bdfc1becab9511ea3c920d60f35b4e09b7264042" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkClearRect&quot;&gt;VkClearRect&lt;/a&gt;, &lt;a href=&quot;#VkExtent2D&quot;&gt;VkExtent2D&lt;/a&gt;, &lt;a href=&quot;#VkOffset2D&quot;&gt;VkOffset2D&lt;/a&gt;, &lt;a href=&quot;#VkPipelineViewportStateCreateInfo&quot;&gt;VkPipelineViewportStateCreateInfo&lt;/a&gt;, &lt;a href=&quot;#VkRenderPassBeginInfo&quot;&gt;VkRenderPassBeginInfo&lt;/a&gt;, &lt;a href=&quot;#vkCmdSetScissor&quot;&gt;vkCmdSetScissor&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkClearRect&quot;&gt;VkClearRect&lt;/a&gt; , &lt;a href=&quot;#VkExtent2D&quot;&gt;VkExtent2D&lt;/a&gt; , &lt;a href=&quot;#VkOffset2D&quot;&gt;VkOffset2D&lt;/a&gt; , &lt;a href=&quot;#VkPipelineViewportStateCreateInfo&quot;&gt;VkPipelineViewportStateCreateInfo&lt;/a&gt; , &lt;a href=&quot;#VkRenderPassBeginInfo&quot;&gt;VkRenderPassBeginInfo&lt;/a&gt; , &lt;a href=&quot;#vkCmdSetScissor&quot;&gt;vkCmdSetScissor&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="10855e315a57c6166260a08aece4fc5db8885492" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkClearValue&quot;&gt;VkClearValue&lt;/a&gt;, &lt;a href=&quot;#VkFramebuffer&quot;&gt;VkFramebuffer&lt;/a&gt;, &lt;a href=&quot;#VkRect2D&quot;&gt;VkRect2D&lt;/a&gt;, &lt;a href=&quot;#VkRenderPass&quot;&gt;VkRenderPass&lt;/a&gt;, &lt;a href=&quot;#VkStructureType&quot;&gt;VkStructureType&lt;/a&gt;, &lt;a href=&quot;#vkCmdBeginRenderPass&quot;&gt;vkCmdBeginRenderPass&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkClearValue&quot;&gt;VkClearValue&lt;/a&gt; , &lt;a href=&quot;#VkFramebuffer&quot;&gt;VkFramebuffer&lt;/a&gt; , &lt;a href=&quot;#VkRect2D&quot;&gt;VkRect2D&lt;/a&gt; , &lt;a href=&quot;#VkRenderPass&quot;&gt;VkRenderPass&lt;/a&gt; , &lt;a href=&quot;#VkStructureType&quot;&gt;VkStructureType&lt;/a&gt; , &lt;a href=&quot;#vkCmdBeginRenderPass&quot;&gt;vkCmdBeginRenderPass&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7b272d20c75ca679859f7cce001cccc5eafc4951" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkClearValue&quot;&gt;VkClearValue&lt;/a&gt;, &lt;a href=&quot;#VkImageAspectFlags&quot;&gt;VkImageAspectFlags&lt;/a&gt;, &lt;a href=&quot;#vkCmdClearAttachments&quot;&gt;vkCmdClearAttachments&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkClearValue&quot;&gt;VkClearValue&lt;/a&gt; , &lt;a href=&quot;#VkImageAspectFlags&quot;&gt;VkImageAspectFlags&lt;/a&gt; , &lt;a href=&quot;#vkCmdClearAttachments&quot;&gt;vkCmdClearAttachments&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="39e7eeccba1f66449390871a90c39d299b95aa00" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkClearValue&quot;&gt;VkClearValue&lt;/a&gt;, &lt;a href=&quot;#vkCmdClearColorImage&quot;&gt;vkCmdClearColorImage&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkClearValue&quot;&gt;VkClearValue&lt;/a&gt; , &lt;a href=&quot;#vkCmdClearColorImage&quot;&gt;vkCmdClearColorImage&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d51cd7fe5fd54373c4c97d70cfc487bda4f413a0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkClearValue&quot;&gt;VkClearValue&lt;/a&gt;, &lt;a href=&quot;#vkCmdClearDepthStencilImage&quot;&gt;vkCmdClearDepthStencilImage&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkClearValue&quot;&gt;VkClearValue&lt;/a&gt; , &lt;a href=&quot;#vkCmdClearDepthStencilImage&quot;&gt;vkCmdClearDepthStencilImage&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1118af0710722e8cd6ade3a7b5600bef80b5be94" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkColorComponentFlagBits&quot;&gt;VkColorComponentFlagBits&lt;/a&gt;, &lt;a href=&quot;#VkPipelineColorBlendAttachmentState&quot;&gt;VkPipelineColorBlendAttachmentState&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkColorComponentFlagBits&quot;&gt;VkColorComponentFlagBits&lt;/a&gt; , &lt;a href=&quot;#VkPipelineColorBlendAttachmentState&quot;&gt;VkPipelineColorBlendAttachmentState&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="608f4de6ae2c20e618091de74ecd5d99f573f59a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkCommandBuffer&quot;&gt;VkCommandBuffer&lt;/a&gt;, &lt;a href=&quot;#VkCommandBufferAllocateInfo&quot;&gt;VkCommandBufferAllocateInfo&lt;/a&gt;, &lt;a href=&quot;#VkDevice&quot;&gt;VkDevice&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkCommandBuffer&quot;&gt;VkCommandBuffer&lt;/a&gt; , &lt;a href=&quot;#VkCommandBufferAllocateInfo&quot;&gt;VkCommandBufferAllocateInfo&lt;/a&gt; , &lt;a href=&quot;#VkDevice&quot;&gt;VkDevice&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="65d22a158ecefcff68ebcfa6487bf24b009f388c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkCommandBuffer&quot;&gt;VkCommandBuffer&lt;/a&gt;, &lt;a href=&quot;#VkCommandBufferBeginInfo&quot;&gt;VkCommandBufferBeginInfo&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkCommandBuffer&quot;&gt;VkCommandBuffer&lt;/a&gt; , &lt;a href=&quot;#VkCommandBufferBeginInfo&quot;&gt;VkCommandBufferBeginInfo&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9f3cc752f7db3a89284893d602675136490e5d64" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkCommandBuffer&quot;&gt;VkCommandBuffer&lt;/a&gt;, &lt;a href=&quot;#VkCommandBufferResetFlags&quot;&gt;VkCommandBufferResetFlags&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkCommandBuffer&quot;&gt;VkCommandBuffer&lt;/a&gt; , &lt;a href=&quot;#VkCommandBufferResetFlags&quot;&gt;VkCommandBufferResetFlags&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="636f27f99ae827ce45bb6caf8102ad7a044d057d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkCommandBuffer&quot;&gt;VkCommandBuffer&lt;/a&gt;, &lt;a href=&quot;#VkCommandPool&quot;&gt;VkCommandPool&lt;/a&gt;, &lt;a href=&quot;#VkDevice&quot;&gt;VkDevice&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkCommandBuffer&quot;&gt;VkCommandBuffer&lt;/a&gt; , &lt;a href=&quot;#VkCommandPool&quot;&gt;VkCommandPool&lt;/a&gt; , &lt;a href=&quot;#VkDevice&quot;&gt;VkDevice&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5ccd046f70521151ce5fbbd39ef59177383d821a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkCommandBuffer&quot;&gt;VkCommandBuffer&lt;/a&gt;, &lt;a href=&quot;#VkDescriptorSet&quot;&gt;VkDescriptorSet&lt;/a&gt;, &lt;a href=&quot;#VkPipelineBindPoint&quot;&gt;VkPipelineBindPoint&lt;/a&gt;, &lt;a href=&quot;#VkPipelineLayout&quot;&gt;VkPipelineLayout&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkCommandBuffer&quot;&gt;VkCommandBuffer&lt;/a&gt; , &lt;a href=&quot;#VkDescriptorSet&quot;&gt;VkDescriptorSet&lt;/a&gt; , &lt;a href=&quot;#VkPipelineBindPoint&quot;&gt;VkPipelineBindPoint&lt;/a&gt; , &lt;a href=&quot;#VkPipelineLayout&quot;&gt;VkPipelineLayout&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ea178c5ca9aa62629f64a4941fa0bbc1fb41991e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkCommandBuffer&quot;&gt;VkCommandBuffer&lt;/a&gt;, &lt;a href=&quot;#VkDevice&quot;&gt;VkDevice&lt;/a&gt;, &lt;a href=&quot;#VkInstance&quot;&gt;VkInstance&lt;/a&gt;, &lt;a href=&quot;#VkPhysicalDevice&quot;&gt;VkPhysicalDevice&lt;/a&gt;, &lt;a href=&quot;#VkQueue&quot;&gt;VkQueue&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkCommandBuffer&quot;&gt;VkCommandBuffer&lt;/a&gt; , &lt;a href=&quot;#VkDevice&quot;&gt;VkDevice&lt;/a&gt; , &lt;a href=&quot;#VkInstance&quot;&gt;VkInstance&lt;/a&gt; , &lt;a href=&quot;#VkPhysicalDevice&quot;&gt;VkPhysicalDevice&lt;/a&gt; , &lt;a href=&quot;#VkQueue&quot;&gt;VkQueue&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="005521c86c1b85b6c855fa0eac9e947f354628da" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkCommandBuffer&quot;&gt;VkCommandBuffer&lt;/a&gt;, &lt;a href=&quot;#VkEvent&quot;&gt;VkEvent&lt;/a&gt;, &lt;a href=&quot;#VkPipelineStageFlags&quot;&gt;VkPipelineStageFlags&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkCommandBuffer&quot;&gt;VkCommandBuffer&lt;/a&gt; , &lt;a href=&quot;#VkEvent&quot;&gt;VkEvent&lt;/a&gt; , &lt;a href=&quot;#VkPipelineStageFlags&quot;&gt;VkPipelineStageFlags&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6b00069a205d320d12274f5adf6d3a8b8a1cd711" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkCommandBuffer&quot;&gt;VkCommandBuffer&lt;/a&gt;, &lt;a href=&quot;#VkFilter&quot;&gt;VkFilter&lt;/a&gt;, &lt;a href=&quot;#VkImage&quot;&gt;VkImage&lt;/a&gt;, &lt;a href=&quot;#VkImageBlit&quot;&gt;VkImageBlit&lt;/a&gt;, &lt;a href=&quot;#VkImageLayout&quot;&gt;VkImageLayout&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkCommandBuffer&quot;&gt;VkCommandBuffer&lt;/a&gt; , &lt;a href=&quot;#VkFilter&quot;&gt;VkFilter&lt;/a&gt; , &lt;a href=&quot;#VkImage&quot;&gt;VkImage&lt;/a&gt; , &lt;a href=&quot;#VkImageBlit&quot;&gt;VkImageBlit&lt;/a&gt; , &lt;a href=&quot;#VkImageLayout&quot;&gt;VkImageLayout&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="73a48a48090573e4857df867292d7e887b867785" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkCommandBuffer&quot;&gt;VkCommandBuffer&lt;/a&gt;, &lt;a href=&quot;#VkImage&quot;&gt;VkImage&lt;/a&gt;, &lt;a href=&quot;#VkImageCopy&quot;&gt;VkImageCopy&lt;/a&gt;, &lt;a href=&quot;#VkImageLayout&quot;&gt;VkImageLayout&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkCommandBuffer&quot;&gt;VkCommandBuffer&lt;/a&gt; , &lt;a href=&quot;#VkImage&quot;&gt;VkImage&lt;/a&gt; , &lt;a href=&quot;#VkImageCopy&quot;&gt;VkImageCopy&lt;/a&gt; , &lt;a href=&quot;#VkImageLayout&quot;&gt;VkImageLayout&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="230f9ec3643f5179df04a3909e36acc6fc855457" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkCommandBuffer&quot;&gt;VkCommandBuffer&lt;/a&gt;, &lt;a href=&quot;#VkImage&quot;&gt;VkImage&lt;/a&gt;, &lt;a href=&quot;#VkImageLayout&quot;&gt;VkImageLayout&lt;/a&gt;, &lt;a href=&quot;#VkImageResolve&quot;&gt;VkImageResolve&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkCommandBuffer&quot;&gt;VkCommandBuffer&lt;/a&gt; , &lt;a href=&quot;#VkImage&quot;&gt;VkImage&lt;/a&gt; , &lt;a href=&quot;#VkImageLayout&quot;&gt;VkImageLayout&lt;/a&gt; , &lt;a href=&quot;#VkImageResolve&quot;&gt;VkImageResolve&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="30a172f589d87b4ab1a79ba4e99fbead2de861e6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkCommandBuffer&quot;&gt;VkCommandBuffer&lt;/a&gt;, &lt;a href=&quot;#VkPipeline&quot;&gt;VkPipeline&lt;/a&gt;, &lt;a href=&quot;#VkPipelineBindPoint&quot;&gt;VkPipelineBindPoint&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkCommandBuffer&quot;&gt;VkCommandBuffer&lt;/a&gt; , &lt;a href=&quot;#VkPipeline&quot;&gt;VkPipeline&lt;/a&gt; , &lt;a href=&quot;#VkPipelineBindPoint&quot;&gt;VkPipelineBindPoint&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="49be5deed1f19da5eace67b6736811bba06d5e71" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkCommandBuffer&quot;&gt;VkCommandBuffer&lt;/a&gt;, &lt;a href=&quot;#VkPipelineLayout&quot;&gt;VkPipelineLayout&lt;/a&gt;, &lt;a href=&quot;#VkShaderStageFlags&quot;&gt;VkShaderStageFlags&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkCommandBuffer&quot;&gt;VkCommandBuffer&lt;/a&gt; , &lt;a href=&quot;#VkPipelineLayout&quot;&gt;VkPipelineLayout&lt;/a&gt; , &lt;a href=&quot;#VkShaderStageFlags&quot;&gt;VkShaderStageFlags&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a3e9ae1ba21de38e07e8c2beb8769b564b3c10e1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkCommandBuffer&quot;&gt;VkCommandBuffer&lt;/a&gt;, &lt;a href=&quot;#VkPipelineStageFlagBits&quot;&gt;VkPipelineStageFlagBits&lt;/a&gt;, &lt;a href=&quot;#VkQueryPool&quot;&gt;VkQueryPool&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkCommandBuffer&quot;&gt;VkCommandBuffer&lt;/a&gt; , &lt;a href=&quot;#VkPipelineStageFlagBits&quot;&gt;VkPipelineStageFlagBits&lt;/a&gt; , &lt;a href=&quot;#VkQueryPool&quot;&gt;VkQueryPool&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7cb41eeda8afc91330e381904647fcaa4f95db71" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkCommandBuffer&quot;&gt;VkCommandBuffer&lt;/a&gt;, &lt;a href=&quot;#VkPipelineStageFlags&quot;&gt;VkPipelineStageFlags&lt;/a&gt;, &lt;a href=&quot;#VkSemaphore&quot;&gt;VkSemaphore&lt;/a&gt;, &lt;a href=&quot;#VkStructureType&quot;&gt;VkStructureType&lt;/a&gt;, &lt;a href=&quot;#vkQueueSubmit&quot;&gt;vkQueueSubmit&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkCommandBuffer&quot;&gt;VkCommandBuffer&lt;/a&gt; , &lt;a href=&quot;#VkPipelineStageFlags&quot;&gt;VkPipelineStageFlags&lt;/a&gt; , &lt;a href=&quot;#VkSemaphore&quot;&gt;VkSemaphore&lt;/a&gt; , &lt;a href=&quot;#VkStructureType&quot;&gt;VkStructureType&lt;/a&gt; , &lt;a href=&quot;#vkQueueSubmit&quot;&gt;vkQueueSubmit&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d1c84e94f1d3607e567b0b60e7d3ab769dc720fb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkCommandBuffer&quot;&gt;VkCommandBuffer&lt;/a&gt;, &lt;a href=&quot;#VkQueryControlFlags&quot;&gt;VkQueryControlFlags&lt;/a&gt;, &lt;a href=&quot;#VkQueryPool&quot;&gt;VkQueryPool&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkCommandBuffer&quot;&gt;VkCommandBuffer&lt;/a&gt; , &lt;a href=&quot;#VkQueryControlFlags&quot;&gt;VkQueryControlFlags&lt;/a&gt; , &lt;a href=&quot;#VkQueryPool&quot;&gt;VkQueryPool&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="24fe2284fd26a8ee77ffa03c61c5cc52f869b8c9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkCommandBuffer&quot;&gt;VkCommandBuffer&lt;/a&gt;, &lt;a href=&quot;#VkQueryPool&quot;&gt;VkQueryPool&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkCommandBuffer&quot;&gt;VkCommandBuffer&lt;/a&gt; , &lt;a href=&quot;#VkQueryPool&quot;&gt;VkQueryPool&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c3e1df65697be486b831d81436bdb814e71da51d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkCommandBuffer&quot;&gt;VkCommandBuffer&lt;/a&gt;, &lt;a href=&quot;#VkRect2D&quot;&gt;VkRect2D&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkCommandBuffer&quot;&gt;VkCommandBuffer&lt;/a&gt; , &lt;a href=&quot;#VkRect2D&quot;&gt;VkRect2D&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="197d0c0fbf67002dfff3a1a9250d574e6d863813" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkCommandBuffer&quot;&gt;VkCommandBuffer&lt;/a&gt;, &lt;a href=&quot;#VkRenderPassBeginInfo&quot;&gt;VkRenderPassBeginInfo&lt;/a&gt;, &lt;a href=&quot;#VkSubpassContents&quot;&gt;VkSubpassContents&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkCommandBuffer&quot;&gt;VkCommandBuffer&lt;/a&gt; , &lt;a href=&quot;#VkRenderPassBeginInfo&quot;&gt;VkRenderPassBeginInfo&lt;/a&gt; , &lt;a href=&quot;#VkSubpassContents&quot;&gt;VkSubpassContents&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="14d59e233fa7659f731663f8e9d5b0c7cd71fc24" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkCommandBuffer&quot;&gt;VkCommandBuffer&lt;/a&gt;, &lt;a href=&quot;#VkStencilFaceFlags&quot;&gt;VkStencilFaceFlags&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkCommandBuffer&quot;&gt;VkCommandBuffer&lt;/a&gt; , &lt;a href=&quot;#VkStencilFaceFlags&quot;&gt;VkStencilFaceFlags&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="47eb4478a14db0667684fddb753c19ba516eb35f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkCommandBuffer&quot;&gt;VkCommandBuffer&lt;/a&gt;, &lt;a href=&quot;#VkSubpassContents&quot;&gt;VkSubpassContents&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkCommandBuffer&quot;&gt;VkCommandBuffer&lt;/a&gt; , &lt;a href=&quot;#VkSubpassContents&quot;&gt;VkSubpassContents&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="cac17d77450d2a0426a7234ed9d49103c01513af" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkCommandBuffer&quot;&gt;VkCommandBuffer&lt;/a&gt;, &lt;a href=&quot;#VkViewport&quot;&gt;VkViewport&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkCommandBuffer&quot;&gt;VkCommandBuffer&lt;/a&gt; , &lt;a href=&quot;#VkViewport&quot;&gt;VkViewport&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b07582a9ea4d897f082fcf5ad0733eaafc9fe60b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkCommandBufferAllocateInfo&quot;&gt;VkCommandBufferAllocateInfo&lt;/a&gt;, &lt;a href=&quot;#vkCreateCommandPool&quot;&gt;vkCreateCommandPool&lt;/a&gt;, &lt;a href=&quot;#vkDestroyCommandPool&quot;&gt;vkDestroyCommandPool&lt;/a&gt;, &lt;a href=&quot;#vkFreeCommandBuffers&quot;&gt;vkFreeCommandBuffers&lt;/a&gt;, &lt;a href=&quot;#vkResetCommandPool&quot;&gt;vkResetCommandPool&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkCommandBufferAllocateInfo&quot;&gt;VkCommandBufferAllocateInfo&lt;/a&gt; , &lt;a href=&quot;#vkCreateCommandPool&quot;&gt;vkCreateCommandPool&lt;/a&gt; , &lt;a href=&quot;#vkDestroyCommandPool&quot;&gt;vkDestroyCommandPool&lt;/a&gt; , &lt;a href=&quot;#vkFreeCommandBuffers&quot;&gt;vkFreeCommandBuffers&lt;/a&gt; , &lt;a href=&quot;#vkResetCommandPool&quot;&gt;vkResetCommandPool&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d0a9157295d2da9d448bcc4b1935e0d42c04a561" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkCommandBufferBeginInfo&quot;&gt;VkCommandBufferBeginInfo&lt;/a&gt;, &lt;a href=&quot;#VkCommandBufferUsageFlagBits&quot;&gt;VkCommandBufferUsageFlagBits&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkCommandBufferBeginInfo&quot;&gt;VkCommandBufferBeginInfo&lt;/a&gt; , &lt;a href=&quot;#VkCommandBufferUsageFlagBits&quot;&gt;VkCommandBufferUsageFlagBits&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="454c0dfef7c4fca66cb9ae4ded7d5d6a8844e6b3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkCommandBufferInheritanceInfo&quot;&gt;VkCommandBufferInheritanceInfo&lt;/a&gt;, &lt;a href=&quot;#VkCommandBufferUsageFlags&quot;&gt;VkCommandBufferUsageFlags&lt;/a&gt;, &lt;a href=&quot;#VkStructureType&quot;&gt;VkStructureType&lt;/a&gt;, &lt;a href=&quot;#vkBeginCommandBuffer&quot;&gt;vkBeginCommandBuffer&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkCommandBufferInheritanceInfo&quot;&gt;VkCommandBufferInheritanceInfo&lt;/a&gt; , &lt;a href=&quot;#VkCommandBufferUsageFlags&quot;&gt;VkCommandBufferUsageFlags&lt;/a&gt; , &lt;a href=&quot;#VkStructureType&quot;&gt;VkStructureType&lt;/a&gt; , &lt;a href=&quot;#vkBeginCommandBuffer&quot;&gt;vkBeginCommandBuffer&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="11945ff1a882aa8feea77bb89fb7a86ba4a9ca4e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkCommandBufferInheritanceInfo&quot;&gt;VkCommandBufferInheritanceInfo&lt;/a&gt;, &lt;a href=&quot;#VkFramebufferCreateInfo&quot;&gt;VkFramebufferCreateInfo&lt;/a&gt;, &lt;a href=&quot;#VkGraphicsPipelineCreateInfo&quot;&gt;VkGraphicsPipelineCreateInfo&lt;/a&gt;, &lt;a href=&quot;#VkRenderPassBeginInfo&quot;&gt;VkRenderPassBeginInfo&lt;/a&gt;, &lt;a href=&quot;#vkCreateRenderPass&quot;&gt;vkCreateRenderPass&lt;/a&gt;, &lt;a href=&quot;#vkDestroyRenderPass&quot;&gt;vkDestroyRenderPass&lt;/a&gt;, &lt;a href=&quot;#vkGetRenderAreaGranularity&quot;&gt;vkGetRenderAreaGranularity&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkCommandBufferInheritanceInfo&quot;&gt;VkCommandBufferInheritanceInfo&lt;/a&gt; , &lt;a href=&quot;#VkFramebufferCreateInfo&quot;&gt;VkFramebufferCreateInfo&lt;/a&gt; , &lt;a href=&quot;#VkGraphicsPipelineCreateInfo&quot;&gt;VkGraphicsPipelineCreateInfo&lt;/a&gt; , &lt;a href=&quot;#VkRenderPassBeginInfo&quot;&gt;VkRenderPassBeginInfo&lt;/a&gt; , &lt;a href=&quot;#vkCreateRenderPass&quot;&gt;vkCreateRenderPass&lt;/a&gt; , &lt;a href=&quot;#vkDestroyRenderPass&quot;&gt;vkDestroyRenderPass&lt;/a&gt; , &lt;a href=&quot;#vkGetRenderAreaGranularity&quot;&gt;vkGetRenderAreaGranularity&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6a70591847a44d3e33d6007e966ae18d58f813f6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkCommandBufferInheritanceInfo&quot;&gt;VkCommandBufferInheritanceInfo&lt;/a&gt;, &lt;a href=&quot;#VkPhysicalDeviceFeatures&quot;&gt;VkPhysicalDeviceFeatures&lt;/a&gt;, &lt;a href=&quot;#VkPhysicalDeviceLimits&quot;&gt;VkPhysicalDeviceLimits&lt;/a&gt;, &lt;a href=&quot;#VkPhysicalDeviceSparseProperties&quot;&gt;VkPhysicalDeviceSparseProperties&lt;/a&gt;, &lt;a href=&quot;#VkPipelineColorBlendAttachmentState&quot;&gt;VkPipelineColorBlendAttachmentState&lt;/a&gt;, &lt;a href=&quot;#VkPipelineColorBlendStateCreateInfo&quot;&gt;VkPipelineColorBlendStateCreateInfo&lt;/a&gt;, &lt;a href=&quot;#VkPipelineDepthStencilStateCreateInfo&quot;&gt;VkPipelineDepthStencilStateCreateInfo&lt;/a&gt;, &lt;a href=&quot;#VkPipelineInputAssemblyStateCreateInfo&quot;&gt;VkPipelineInputAssemblyStateCreateInfo&lt;/a&gt;, &lt;a href=&quot;#VkPipelineMultisampleStateCreateInfo&quot;&gt;VkPipelineMultisampleStateCreateInfo&lt;/a&gt;, &lt;a href=&quot;#VkPipelineRasterizationStateCreateInfo&quot;&gt;VkPipelineRasterizationStateCreateInfo&lt;/a&gt;, &lt;a href=&quot;#VkSamplerCreateInfo&quot;&gt;VkSamplerCreateInfo&lt;/a&gt;, &lt;a href=&quot;#vkWaitForFences&quot;&gt;vkWaitForFences&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkCommandBufferInheritanceInfo&quot;&gt;VkCommandBufferInheritanceInfo&lt;/a&gt; , &lt;a href=&quot;#VkPhysicalDeviceFeatures&quot;&gt;VkPhysicalDeviceFeatures&lt;/a&gt; , &lt;a href=&quot;#VkPhysicalDeviceLimits&quot;&gt;VkPhysicalDeviceLimits&lt;/a&gt; , &lt;a href=&quot;#VkPhysicalDeviceSparseProperties&quot;&gt;VkPhysicalDeviceSparseProperties&lt;/a&gt; , &lt;a href=&quot;#VkPipelineColorBlendAttachmentState&quot;&gt;VkPipelineColorBlendAttachmentState&lt;/a&gt; , &lt;a href=&quot;#VkPipelineColorBlendStateCreateInfo&quot;&gt;VkPipelineColorBlendStateCreateInfo&lt;/a&gt; , &lt;a href=&quot;#VkPipelineDepthStencilStateCreateInfo&quot;&gt;VkPipelineDepthStencilStateCreateInfo&lt;/a&gt; , &lt;a href=&quot;#VkPipelineInputAssemblyStateCreateInfo&quot;&gt;VkPipelineInputAssemblyStateCreateInfo&lt;/a&gt; , &lt;a href=&quot;#VkPipelineMultisampleStateCreateInfo&quot;&gt;VkPipelineMultisampleStateCreateInfo&lt;/a&gt; , &lt;a href=&quot;#VkPipelineRasterizationStateCreateInfo&quot;&gt;VkPipelineRasterizationStateCreateInfo&lt;/a&gt; , &lt;a href=&quot;#VkSamplerCreateInfo&quot;&gt;VkSamplerCreateInfo&lt;/a&gt; , &lt;a href=&quot;#vkWaitForFences&quot;&gt;vkWaitForFences&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ef4e79d3279cf438c71be3ed9577d91f98b99497" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkCommandBufferInheritanceInfo&quot;&gt;VkCommandBufferInheritanceInfo&lt;/a&gt;, &lt;a href=&quot;#VkQueryControlFlagBits&quot;&gt;VkQueryControlFlagBits&lt;/a&gt;, &lt;a href=&quot;#vkCmdBeginQuery&quot;&gt;vkCmdBeginQuery&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkCommandBufferInheritanceInfo&quot;&gt;VkCommandBufferInheritanceInfo&lt;/a&gt; , &lt;a href=&quot;#VkQueryControlFlagBits&quot;&gt;VkQueryControlFlagBits&lt;/a&gt; , &lt;a href=&quot;#vkCmdBeginQuery&quot;&gt;vkCmdBeginQuery&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="509a9b5acd8e1a763207b4306c5142ce35094fc0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkCommandBufferInheritanceInfo&quot;&gt;VkCommandBufferInheritanceInfo&lt;/a&gt;, &lt;a href=&quot;#VkQueryPipelineStatisticFlagBits&quot;&gt;VkQueryPipelineStatisticFlagBits&lt;/a&gt;, &lt;a href=&quot;#VkQueryPoolCreateInfo&quot;&gt;VkQueryPoolCreateInfo&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkCommandBufferInheritanceInfo&quot;&gt;VkCommandBufferInheritanceInfo&lt;/a&gt; , &lt;a href=&quot;#VkQueryPipelineStatisticFlagBits&quot;&gt;VkQueryPipelineStatisticFlagBits&lt;/a&gt; , &lt;a href=&quot;#VkQueryPoolCreateInfo&quot;&gt;VkQueryPoolCreateInfo&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="cd4e1bd8a8675ebdddb3e7561e376629a5d3df7a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkCommandBufferInheritanceInfo&quot;&gt;VkCommandBufferInheritanceInfo&lt;/a&gt;, &lt;a href=&quot;#VkRenderPassBeginInfo&quot;&gt;VkRenderPassBeginInfo&lt;/a&gt;, &lt;a href=&quot;#vkCreateFramebuffer&quot;&gt;vkCreateFramebuffer&lt;/a&gt;, &lt;a href=&quot;#vkDestroyFramebuffer&quot;&gt;vkDestroyFramebuffer&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkCommandBufferInheritanceInfo&quot;&gt;VkCommandBufferInheritanceInfo&lt;/a&gt; , &lt;a href=&quot;#VkRenderPassBeginInfo&quot;&gt;VkRenderPassBeginInfo&lt;/a&gt; , &lt;a href=&quot;#vkCreateFramebuffer&quot;&gt;vkCreateFramebuffer&lt;/a&gt; , &lt;a href=&quot;#vkDestroyFramebuffer&quot;&gt;vkDestroyFramebuffer&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ac85af5f259b848ca1517af9be74350aeba77e9b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkCommandBufferLevel&quot;&gt;VkCommandBufferLevel&lt;/a&gt;, &lt;a href=&quot;#VkCommandPool&quot;&gt;VkCommandPool&lt;/a&gt;, &lt;a href=&quot;#VkStructureType&quot;&gt;VkStructureType&lt;/a&gt;, &lt;a href=&quot;#vkAllocateCommandBuffers&quot;&gt;vkAllocateCommandBuffers&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkCommandBufferLevel&quot;&gt;VkCommandBufferLevel&lt;/a&gt; , &lt;a href=&quot;#VkCommandPool&quot;&gt;VkCommandPool&lt;/a&gt; , &lt;a href=&quot;#VkStructureType&quot;&gt;VkStructureType&lt;/a&gt; , &lt;a href=&quot;#vkAllocateCommandBuffers&quot;&gt;vkAllocateCommandBuffers&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8098b34551fc08761b7163d6f6924593ca0843bd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkCommandBufferResetFlagBits&quot;&gt;VkCommandBufferResetFlagBits&lt;/a&gt;, &lt;a href=&quot;#vkResetCommandBuffer&quot;&gt;vkResetCommandBuffer&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkCommandBufferResetFlagBits&quot;&gt;VkCommandBufferResetFlagBits&lt;/a&gt; , &lt;a href=&quot;#vkResetCommandBuffer&quot;&gt;vkResetCommandBuffer&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6e56b4b60c6ebe2979367c52bd9ebeef7cf1a473" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkCommandPool&quot;&gt;VkCommandPool&lt;/a&gt;, &lt;a href=&quot;#VkCommandPoolResetFlags&quot;&gt;VkCommandPoolResetFlags&lt;/a&gt;, &lt;a href=&quot;#VkDevice&quot;&gt;VkDevice&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkCommandPool&quot;&gt;VkCommandPool&lt;/a&gt; , &lt;a href=&quot;#VkCommandPoolResetFlags&quot;&gt;VkCommandPoolResetFlags&lt;/a&gt; , &lt;a href=&quot;#VkDevice&quot;&gt;VkDevice&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c7d2ebe4e83f8920365be6a07077804ecebb8e84" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkCommandPoolCreateFlagBits&quot;&gt;VkCommandPoolCreateFlagBits&lt;/a&gt;, &lt;a href=&quot;#VkCommandPoolCreateInfo&quot;&gt;VkCommandPoolCreateInfo&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkCommandPoolCreateFlagBits&quot;&gt;VkCommandPoolCreateFlagBits&lt;/a&gt; , &lt;a href=&quot;#VkCommandPoolCreateInfo&quot;&gt;VkCommandPoolCreateInfo&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e75afe5345a3bb11f548213a65b2e06aba65552a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkCommandPoolCreateFlags&quot;&gt;VkCommandPoolCreateFlags&lt;/a&gt;, &lt;a href=&quot;#VkStructureType&quot;&gt;VkStructureType&lt;/a&gt;, &lt;a href=&quot;#vkCreateCommandPool&quot;&gt;vkCreateCommandPool&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkCommandPoolCreateFlags&quot;&gt;VkCommandPoolCreateFlags&lt;/a&gt; , &lt;a href=&quot;#VkStructureType&quot;&gt;VkStructureType&lt;/a&gt; , &lt;a href=&quot;#vkCreateCommandPool&quot;&gt;vkCreateCommandPool&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="09184b0985fa9db57287254542ee9998065e0d26" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkCommandPoolResetFlagBits&quot;&gt;VkCommandPoolResetFlagBits&lt;/a&gt;, &lt;a href=&quot;#vkResetCommandPool&quot;&gt;vkResetCommandPool&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkCommandPoolResetFlagBits&quot;&gt;VkCommandPoolResetFlagBits&lt;/a&gt; , &lt;a href=&quot;#vkResetCommandPool&quot;&gt;vkResetCommandPool&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7de3ae64c1ded20536d71759c4351f42daa8161d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkCompareOp&quot;&gt;VkCompareOp&lt;/a&gt;, &lt;a href=&quot;#VkPipelineDepthStencilStateCreateInfo&quot;&gt;VkPipelineDepthStencilStateCreateInfo&lt;/a&gt;, &lt;a href=&quot;#VkStencilOp&quot;&gt;VkStencilOp&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkCompareOp&quot;&gt;VkCompareOp&lt;/a&gt; , &lt;a href=&quot;#VkPipelineDepthStencilStateCreateInfo&quot;&gt;VkPipelineDepthStencilStateCreateInfo&lt;/a&gt; , &lt;a href=&quot;#VkStencilOp&quot;&gt;VkStencilOp&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e539d6b6619c635781c92e7640523ae4181a317f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkComponentMapping&quot;&gt;VkComponentMapping&lt;/a&gt;, &lt;a href=&quot;#VkFormat&quot;&gt;VkFormat&lt;/a&gt;, &lt;a href=&quot;#VkImage&quot;&gt;VkImage&lt;/a&gt;, &lt;a href=&quot;#VkImageSubresourceRange&quot;&gt;VkImageSubresourceRange&lt;/a&gt;, &lt;a href=&quot;#VkImageViewCreateFlags&quot;&gt;VkImageViewCreateFlags&lt;/a&gt;, &lt;a href=&quot;#VkImageViewType&quot;&gt;VkImageViewType&lt;/a&gt;, &lt;a href=&quot;#VkStructureType&quot;&gt;VkStructureType&lt;/a&gt;, &lt;a href=&quot;#vkCreateImageView&quot;&gt;vkCreateImageView&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkComponentMapping&quot;&gt;VkComponentMapping&lt;/a&gt; , &lt;a href=&quot;#VkFormat&quot;&gt;VkFormat&lt;/a&gt; , &lt;a href=&quot;#VkImage&quot;&gt;VkImage&lt;/a&gt; , &lt;a href=&quot;#VkImageSubresourceRange&quot;&gt;VkImageSubresourceRange&lt;/a&gt; , &lt;a href=&quot;#VkImageViewCreateFlags&quot;&gt;VkImageViewCreateFlags&lt;/a&gt; , &lt;a href=&quot;#VkImageViewType&quot;&gt;VkImageViewType&lt;/a&gt; , &lt;a href=&quot;#VkStructureType&quot;&gt;VkStructureType&lt;/a&gt; , &lt;a href=&quot;#vkCreateImageView&quot;&gt;vkCreateImageView&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a9d4bbc914142fa34f0c4cc966c004a04d645cdf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkComponentSwizzle&quot;&gt;VkComponentSwizzle&lt;/a&gt;, &lt;a href=&quot;#VkImageViewCreateInfo&quot;&gt;VkImageViewCreateInfo&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkComponentSwizzle&quot;&gt;VkComponentSwizzle&lt;/a&gt; , &lt;a href=&quot;#VkImageViewCreateInfo&quot;&gt;VkImageViewCreateInfo&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="01cb4c520ff0d5e8dcb885f2c0a88c8e9dbc8102" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkComputePipelineCreateInfo&quot;&gt;VkComputePipelineCreateInfo&lt;/a&gt;, &lt;a href=&quot;#VkGraphicsPipelineCreateInfo&quot;&gt;VkGraphicsPipelineCreateInfo&lt;/a&gt;, &lt;a href=&quot;#VkPipelineCreateFlagBits&quot;&gt;VkPipelineCreateFlagBits&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkComputePipelineCreateInfo&quot;&gt;VkComputePipelineCreateInfo&lt;/a&gt; , &lt;a href=&quot;#VkGraphicsPipelineCreateInfo&quot;&gt;VkGraphicsPipelineCreateInfo&lt;/a&gt; , &lt;a href=&quot;#VkPipelineCreateFlagBits&quot;&gt;VkPipelineCreateFlagBits&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ee0db7882f6ed19242560acf7549e89109f1c829" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkComputePipelineCreateInfo&quot;&gt;VkComputePipelineCreateInfo&lt;/a&gt;, &lt;a href=&quot;#VkGraphicsPipelineCreateInfo&quot;&gt;VkGraphicsPipelineCreateInfo&lt;/a&gt;, &lt;a href=&quot;#VkPipelineShaderStageCreateFlags&quot;&gt;VkPipelineShaderStageCreateFlags&lt;/a&gt;, &lt;a href=&quot;#VkShaderModule&quot;&gt;VkShaderModule&lt;/a&gt;, &lt;a href=&quot;#VkShaderStageFlagBits&quot;&gt;VkShaderStageFlagBits&lt;/a&gt;, &lt;a href=&quot;#VkSpecializationInfo&quot;&gt;VkSpecializationInfo&lt;/a&gt;, &lt;a href=&quot;#VkStructureType&quot;&gt;VkStructureType&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkComputePipelineCreateInfo&quot;&gt;VkComputePipelineCreateInfo&lt;/a&gt; , &lt;a href=&quot;#VkGraphicsPipelineCreateInfo&quot;&gt;VkGraphicsPipelineCreateInfo&lt;/a&gt; , &lt;a href=&quot;#VkPipelineShaderStageCreateFlags&quot;&gt;VkPipelineShaderStageCreateFlags&lt;/a&gt; , &lt;a href=&quot;#VkShaderModule&quot;&gt;VkShaderModule&lt;/a&gt; , &lt;a href=&quot;#VkShaderStageFlagBits&quot;&gt;VkShaderStageFlagBits&lt;/a&gt; , &lt;a href=&quot;#VkSpecializationInfo&quot;&gt;VkSpecializationInfo&lt;/a&gt; , &lt;a href=&quot;#VkStructureType&quot;&gt;VkStructureType&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1e86eff18c3ea27fbe280b213801f07eaff4ab08" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkComputePipelineCreateInfo&quot;&gt;VkComputePipelineCreateInfo&lt;/a&gt;, &lt;a href=&quot;#VkGraphicsPipelineCreateInfo&quot;&gt;VkGraphicsPipelineCreateInfo&lt;/a&gt;, &lt;a href=&quot;#vkCmdBindDescriptorSets&quot;&gt;vkCmdBindDescriptorSets&lt;/a&gt;, &lt;a href=&quot;#vkCmdPushConstants&quot;&gt;vkCmdPushConstants&lt;/a&gt;, &lt;a href=&quot;#vkCreatePipelineLayout&quot;&gt;vkCreatePipelineLayout&lt;/a&gt;, &lt;a href=&quot;#vkDestroyPipelineLayout&quot;&gt;vkDestroyPipelineLayout&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkComputePipelineCreateInfo&quot;&gt;VkComputePipelineCreateInfo&lt;/a&gt; , &lt;a href=&quot;#VkGraphicsPipelineCreateInfo&quot;&gt;VkGraphicsPipelineCreateInfo&lt;/a&gt; , &lt;a href=&quot;#vkCmdBindDescriptorSets&quot;&gt;vkCmdBindDescriptorSets&lt;/a&gt; , &lt;a href=&quot;#vkCmdPushConstants&quot;&gt;vkCmdPushConstants&lt;/a&gt; , &lt;a href=&quot;#vkCreatePipelineLayout&quot;&gt;vkCreatePipelineLayout&lt;/a&gt; , &lt;a href=&quot;#vkDestroyPipelineLayout&quot;&gt;vkDestroyPipelineLayout&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1d5c3f4b65465b4a5e7d039363fdb09f621697af" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkComputePipelineCreateInfo&quot;&gt;VkComputePipelineCreateInfo&lt;/a&gt;, &lt;a href=&quot;#VkGraphicsPipelineCreateInfo&quot;&gt;VkGraphicsPipelineCreateInfo&lt;/a&gt;, &lt;a href=&quot;#vkCmdBindPipeline&quot;&gt;vkCmdBindPipeline&lt;/a&gt;, &lt;a href=&quot;#vkCreateComputePipelines&quot;&gt;vkCreateComputePipelines&lt;/a&gt;, &lt;a href=&quot;#vkCreateGraphicsPipelines&quot;&gt;vkCreateGraphicsPipelines&lt;/a&gt;, &lt;a href=&quot;#vkDestroyPipeline&quot;&gt;vkDestroyPipeline&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkComputePipelineCreateInfo&quot;&gt;VkComputePipelineCreateInfo&lt;/a&gt; , &lt;a href=&quot;#VkGraphicsPipelineCreateInfo&quot;&gt;VkGraphicsPipelineCreateInfo&lt;/a&gt; , &lt;a href=&quot;#vkCmdBindPipeline&quot;&gt;vkCmdBindPipeline&lt;/a&gt; , &lt;a href=&quot;#vkCreateComputePipelines&quot;&gt;vkCreateComputePipelines&lt;/a&gt; , &lt;a href=&quot;#vkCreateGraphicsPipelines&quot;&gt;vkCreateGraphicsPipelines&lt;/a&gt; , &lt;a href=&quot;#vkDestroyPipeline&quot;&gt;vkDestroyPipeline&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="476f54c3ebbea1f3f93525abf4995f578890b044" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkCopyDescriptorSet&quot;&gt;VkCopyDescriptorSet&lt;/a&gt;, &lt;a href=&quot;#VkDevice&quot;&gt;VkDevice&lt;/a&gt;, &lt;a href=&quot;#VkWriteDescriptorSet&quot;&gt;VkWriteDescriptorSet&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkCopyDescriptorSet&quot;&gt;VkCopyDescriptorSet&lt;/a&gt; , &lt;a href=&quot;#VkDevice&quot;&gt;VkDevice&lt;/a&gt; , &lt;a href=&quot;#VkWriteDescriptorSet&quot;&gt;VkWriteDescriptorSet&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ca24eb7a30427c0222803b82457c5d2c9112d00a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkCopyDescriptorSet&quot;&gt;VkCopyDescriptorSet&lt;/a&gt;, &lt;a href=&quot;#VkWriteDescriptorSet&quot;&gt;VkWriteDescriptorSet&lt;/a&gt;, &lt;a href=&quot;#vkAllocateDescriptorSets&quot;&gt;vkAllocateDescriptorSets&lt;/a&gt;, &lt;a href=&quot;#vkCmdBindDescriptorSets&quot;&gt;vkCmdBindDescriptorSets&lt;/a&gt;, &lt;a href=&quot;#vkFreeDescriptorSets&quot;&gt;vkFreeDescriptorSets&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkCopyDescriptorSet&quot;&gt;VkCopyDescriptorSet&lt;/a&gt; , &lt;a href=&quot;#VkWriteDescriptorSet&quot;&gt;VkWriteDescriptorSet&lt;/a&gt; , &lt;a href=&quot;#vkAllocateDescriptorSets&quot;&gt;vkAllocateDescriptorSets&lt;/a&gt; , &lt;a href=&quot;#vkCmdBindDescriptorSets&quot;&gt;vkCmdBindDescriptorSets&lt;/a&gt; , &lt;a href=&quot;#vkFreeDescriptorSets&quot;&gt;vkFreeDescriptorSets&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="fc151e2d44e1f4877ea7826a26631c6c6d10b35c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkCullModeFlagBits&quot;&gt;VkCullModeFlagBits&lt;/a&gt;, &lt;a href=&quot;#VkPipelineRasterizationStateCreateInfo&quot;&gt;VkPipelineRasterizationStateCreateInfo&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkCullModeFlagBits&quot;&gt;VkCullModeFlagBits&lt;/a&gt; , &lt;a href=&quot;#VkPipelineRasterizationStateCreateInfo&quot;&gt;VkPipelineRasterizationStateCreateInfo&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="69808c29224eaaccb8b1cc28473b296abb59d78e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkDependencyFlagBits&quot;&gt;VkDependencyFlagBits&lt;/a&gt;, &lt;a href=&quot;#VkSubpassDependency&quot;&gt;VkSubpassDependency&lt;/a&gt;, &lt;a href=&quot;#vkCmdPipelineBarrier&quot;&gt;vkCmdPipelineBarrier&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkDependencyFlagBits&quot;&gt;VkDependencyFlagBits&lt;/a&gt; , &lt;a href=&quot;#VkSubpassDependency&quot;&gt;VkSubpassDependency&lt;/a&gt; , &lt;a href=&quot;#vkCmdPipelineBarrier&quot;&gt;vkCmdPipelineBarrier&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="725da9c8fdb03bcd5e5480a7cac570a5791747f3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkDescriptorImageInfo&quot;&gt;VkDescriptorImageInfo&lt;/a&gt;, &lt;a href=&quot;#VkDescriptorSetLayoutBinding&quot;&gt;VkDescriptorSetLayoutBinding&lt;/a&gt;, &lt;a href=&quot;#vkCreateSampler&quot;&gt;vkCreateSampler&lt;/a&gt;, &lt;a href=&quot;#vkDestroySampler&quot;&gt;vkDestroySampler&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkDescriptorImageInfo&quot;&gt;VkDescriptorImageInfo&lt;/a&gt; , &lt;a href=&quot;#VkDescriptorSetLayoutBinding&quot;&gt;VkDescriptorSetLayoutBinding&lt;/a&gt; , &lt;a href=&quot;#vkCreateSampler&quot;&gt;vkCreateSampler&lt;/a&gt; , &lt;a href=&quot;#vkDestroySampler&quot;&gt;vkDestroySampler&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="19306e192547cfaeb83db92017c01efe5e9c69c1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkDescriptorImageInfo&quot;&gt;VkDescriptorImageInfo&lt;/a&gt;, &lt;a href=&quot;#VkFramebufferCreateInfo&quot;&gt;VkFramebufferCreateInfo&lt;/a&gt;, &lt;a href=&quot;#vkCreateImageView&quot;&gt;vkCreateImageView&lt;/a&gt;, &lt;a href=&quot;#vkDestroyImageView&quot;&gt;vkDestroyImageView&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkDescriptorImageInfo&quot;&gt;VkDescriptorImageInfo&lt;/a&gt; , &lt;a href=&quot;#VkFramebufferCreateInfo&quot;&gt;VkFramebufferCreateInfo&lt;/a&gt; , &lt;a href=&quot;#vkCreateImageView&quot;&gt;vkCreateImageView&lt;/a&gt; , &lt;a href=&quot;#vkDestroyImageView&quot;&gt;vkDestroyImageView&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="aa60ad891b5deaab31ab6521e5ad8a3bce46d1a1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkDescriptorPool&quot;&gt;VkDescriptorPool&lt;/a&gt;, &lt;a href=&quot;#VkDescriptorPoolResetFlags&quot;&gt;VkDescriptorPoolResetFlags&lt;/a&gt;, &lt;a href=&quot;#VkDevice&quot;&gt;VkDevice&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkDescriptorPool&quot;&gt;VkDescriptorPool&lt;/a&gt; , &lt;a href=&quot;#VkDescriptorPoolResetFlags&quot;&gt;VkDescriptorPoolResetFlags&lt;/a&gt; , &lt;a href=&quot;#VkDevice&quot;&gt;VkDevice&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="fec0ac2021fba9ad02378b274c534478e0338251" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkDescriptorPool&quot;&gt;VkDescriptorPool&lt;/a&gt;, &lt;a href=&quot;#VkDescriptorSet&quot;&gt;VkDescriptorSet&lt;/a&gt;, &lt;a href=&quot;#VkDevice&quot;&gt;VkDevice&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkDescriptorPool&quot;&gt;VkDescriptorPool&lt;/a&gt; , &lt;a href=&quot;#VkDescriptorSet&quot;&gt;VkDescriptorSet&lt;/a&gt; , &lt;a href=&quot;#VkDevice&quot;&gt;VkDevice&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d19f88ad15ea85c2cfec1709fdf6d09e680b926c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkDescriptorPool&quot;&gt;VkDescriptorPool&lt;/a&gt;, &lt;a href=&quot;#VkDescriptorSetLayout&quot;&gt;VkDescriptorSetLayout&lt;/a&gt;, &lt;a href=&quot;#VkStructureType&quot;&gt;VkStructureType&lt;/a&gt;, &lt;a href=&quot;#vkAllocateDescriptorSets&quot;&gt;vkAllocateDescriptorSets&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkDescriptorPool&quot;&gt;VkDescriptorPool&lt;/a&gt; , &lt;a href=&quot;#VkDescriptorSetLayout&quot;&gt;VkDescriptorSetLayout&lt;/a&gt; , &lt;a href=&quot;#VkStructureType&quot;&gt;VkStructureType&lt;/a&gt; , &lt;a href=&quot;#vkAllocateDescriptorSets&quot;&gt;vkAllocateDescriptorSets&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d370ee001fa262f27846d4cd355d41076e99d52e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkDescriptorPoolCreateFlagBits&quot;&gt;VkDescriptorPoolCreateFlagBits&lt;/a&gt;, &lt;a href=&quot;#VkDescriptorPoolCreateInfo&quot;&gt;VkDescriptorPoolCreateInfo&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkDescriptorPoolCreateFlagBits&quot;&gt;VkDescriptorPoolCreateFlagBits&lt;/a&gt; , &lt;a href=&quot;#VkDescriptorPoolCreateInfo&quot;&gt;VkDescriptorPoolCreateInfo&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e8d674848d8b327705f5286a2bdc73ef8d616e6c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkDescriptorPoolCreateFlags&quot;&gt;VkDescriptorPoolCreateFlags&lt;/a&gt;, &lt;a href=&quot;#VkDescriptorPoolSize&quot;&gt;VkDescriptorPoolSize&lt;/a&gt;, &lt;a href=&quot;#VkStructureType&quot;&gt;VkStructureType&lt;/a&gt;, &lt;a href=&quot;#vkCreateDescriptorPool&quot;&gt;vkCreateDescriptorPool&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkDescriptorPoolCreateFlags&quot;&gt;VkDescriptorPoolCreateFlags&lt;/a&gt; , &lt;a href=&quot;#VkDescriptorPoolSize&quot;&gt;VkDescriptorPoolSize&lt;/a&gt; , &lt;a href=&quot;#VkStructureType&quot;&gt;VkStructureType&lt;/a&gt; , &lt;a href=&quot;#vkCreateDescriptorPool&quot;&gt;vkCreateDescriptorPool&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="37ddff45e495011de74595a32767d0c336de05aa" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkDescriptorPoolCreateInfo&quot;&gt;VkDescriptorPoolCreateInfo&lt;/a&gt;, &lt;a href=&quot;#VkDescriptorType&quot;&gt;VkDescriptorType&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkDescriptorPoolCreateInfo&quot;&gt;VkDescriptorPoolCreateInfo&lt;/a&gt; , &lt;a href=&quot;#VkDescriptorType&quot;&gt;VkDescriptorType&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6751326654f018564ac438b3f18d44a1c88369e9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkDescriptorPoolSize&quot;&gt;VkDescriptorPoolSize&lt;/a&gt;, &lt;a href=&quot;#VkDescriptorSetLayoutBinding&quot;&gt;VkDescriptorSetLayoutBinding&lt;/a&gt;, &lt;a href=&quot;#VkWriteDescriptorSet&quot;&gt;VkWriteDescriptorSet&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkDescriptorPoolSize&quot;&gt;VkDescriptorPoolSize&lt;/a&gt; , &lt;a href=&quot;#VkDescriptorSetLayoutBinding&quot;&gt;VkDescriptorSetLayoutBinding&lt;/a&gt; , &lt;a href=&quot;#VkWriteDescriptorSet&quot;&gt;VkWriteDescriptorSet&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="59f43782a1818e9861b29683f6ea17452a6137b7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkDescriptorSet&quot;&gt;VkDescriptorSet&lt;/a&gt;, &lt;a href=&quot;#VkDescriptorSetAllocateInfo&quot;&gt;VkDescriptorSetAllocateInfo&lt;/a&gt;, &lt;a href=&quot;#VkDevice&quot;&gt;VkDevice&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkDescriptorSet&quot;&gt;VkDescriptorSet&lt;/a&gt; , &lt;a href=&quot;#VkDescriptorSetAllocateInfo&quot;&gt;VkDescriptorSetAllocateInfo&lt;/a&gt; , &lt;a href=&quot;#VkDevice&quot;&gt;VkDevice&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="94bd7f9e84e7d384288353d062079f823d2c99b5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkDescriptorSet&quot;&gt;VkDescriptorSet&lt;/a&gt;, &lt;a href=&quot;#VkStructureType&quot;&gt;VkStructureType&lt;/a&gt;, &lt;a href=&quot;#vkUpdateDescriptorSets&quot;&gt;vkUpdateDescriptorSets&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkDescriptorSet&quot;&gt;VkDescriptorSet&lt;/a&gt; , &lt;a href=&quot;#VkStructureType&quot;&gt;VkStructureType&lt;/a&gt; , &lt;a href=&quot;#vkUpdateDescriptorSets&quot;&gt;vkUpdateDescriptorSets&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="72866591009aac9addb93cf4c6ca29491f129c5a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkDescriptorSetAllocateInfo&quot;&gt;VkDescriptorSetAllocateInfo&lt;/a&gt;, &lt;a href=&quot;#VkPipelineLayoutCreateInfo&quot;&gt;VkPipelineLayoutCreateInfo&lt;/a&gt;, &lt;a href=&quot;#vkCreateDescriptorSetLayout&quot;&gt;vkCreateDescriptorSetLayout&lt;/a&gt;, &lt;a href=&quot;#vkDestroyDescriptorSetLayout&quot;&gt;vkDestroyDescriptorSetLayout&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkDescriptorSetAllocateInfo&quot;&gt;VkDescriptorSetAllocateInfo&lt;/a&gt; , &lt;a href=&quot;#VkPipelineLayoutCreateInfo&quot;&gt;VkPipelineLayoutCreateInfo&lt;/a&gt; , &lt;a href=&quot;#vkCreateDescriptorSetLayout&quot;&gt;vkCreateDescriptorSetLayout&lt;/a&gt; , &lt;a href=&quot;#vkDestroyDescriptorSetLayout&quot;&gt;vkDestroyDescriptorSetLayout&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="eef6dea45e69cb72a976da0ab5624205dfd72409" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkDescriptorSetAllocateInfo&quot;&gt;VkDescriptorSetAllocateInfo&lt;/a&gt;, &lt;a href=&quot;#vkCreateDescriptorPool&quot;&gt;vkCreateDescriptorPool&lt;/a&gt;, &lt;a href=&quot;#vkDestroyDescriptorPool&quot;&gt;vkDestroyDescriptorPool&lt;/a&gt;, &lt;a href=&quot;#vkFreeDescriptorSets&quot;&gt;vkFreeDescriptorSets&lt;/a&gt;, &lt;a href=&quot;#vkResetDescriptorPool&quot;&gt;vkResetDescriptorPool&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkDescriptorSetAllocateInfo&quot;&gt;VkDescriptorSetAllocateInfo&lt;/a&gt; , &lt;a href=&quot;#vkCreateDescriptorPool&quot;&gt;vkCreateDescriptorPool&lt;/a&gt; , &lt;a href=&quot;#vkDestroyDescriptorPool&quot;&gt;vkDestroyDescriptorPool&lt;/a&gt; , &lt;a href=&quot;#vkFreeDescriptorSets&quot;&gt;vkFreeDescriptorSets&lt;/a&gt; , &lt;a href=&quot;#vkResetDescriptorPool&quot;&gt;vkResetDescriptorPool&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="56f11596ce14c458576f7be8ecd1183a920c118b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkDescriptorSetLayout&quot;&gt;VkDescriptorSetLayout&lt;/a&gt;, &lt;a href=&quot;#VkPipelineLayoutCreateFlags&quot;&gt;VkPipelineLayoutCreateFlags&lt;/a&gt;, &lt;a href=&quot;#VkPushConstantRange&quot;&gt;VkPushConstantRange&lt;/a&gt;, &lt;a href=&quot;#VkStructureType&quot;&gt;VkStructureType&lt;/a&gt;, &lt;a href=&quot;#vkCreatePipelineLayout&quot;&gt;vkCreatePipelineLayout&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkDescriptorSetLayout&quot;&gt;VkDescriptorSetLayout&lt;/a&gt; , &lt;a href=&quot;#VkPipelineLayoutCreateFlags&quot;&gt;VkPipelineLayoutCreateFlags&lt;/a&gt; , &lt;a href=&quot;#VkPushConstantRange&quot;&gt;VkPushConstantRange&lt;/a&gt; , &lt;a href=&quot;#VkStructureType&quot;&gt;VkStructureType&lt;/a&gt; , &lt;a href=&quot;#vkCreatePipelineLayout&quot;&gt;vkCreatePipelineLayout&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9ed371263f383030843ce39f99100b5557d000e3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkDescriptorSetLayoutBinding&quot;&gt;VkDescriptorSetLayoutBinding&lt;/a&gt;, &lt;a href=&quot;#VkDescriptorSetLayoutCreateFlags&quot;&gt;VkDescriptorSetLayoutCreateFlags&lt;/a&gt;, &lt;a href=&quot;#VkStructureType&quot;&gt;VkStructureType&lt;/a&gt;, &lt;a href=&quot;#vkCreateDescriptorSetLayout&quot;&gt;vkCreateDescriptorSetLayout&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkDescriptorSetLayoutBinding&quot;&gt;VkDescriptorSetLayoutBinding&lt;/a&gt; , &lt;a href=&quot;#VkDescriptorSetLayoutCreateFlags&quot;&gt;VkDescriptorSetLayoutCreateFlags&lt;/a&gt; , &lt;a href=&quot;#VkStructureType&quot;&gt;VkStructureType&lt;/a&gt; , &lt;a href=&quot;#vkCreateDescriptorSetLayout&quot;&gt;vkCreateDescriptorSetLayout&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="90aa6c10034e62323cf610453846c68d72751f30" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkDescriptorSetLayoutBinding&quot;&gt;VkDescriptorSetLayoutBinding&lt;/a&gt;, &lt;a href=&quot;#VkPushConstantRange&quot;&gt;VkPushConstantRange&lt;/a&gt;, &lt;a href=&quot;#VkShaderStageFlagBits&quot;&gt;VkShaderStageFlagBits&lt;/a&gt;, &lt;a href=&quot;#vkCmdPushConstants&quot;&gt;vkCmdPushConstants&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkDescriptorSetLayoutBinding&quot;&gt;VkDescriptorSetLayoutBinding&lt;/a&gt; , &lt;a href=&quot;#VkPushConstantRange&quot;&gt;VkPushConstantRange&lt;/a&gt; , &lt;a href=&quot;#VkShaderStageFlagBits&quot;&gt;VkShaderStageFlagBits&lt;/a&gt; , &lt;a href=&quot;#vkCmdPushConstants&quot;&gt;vkCmdPushConstants&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="74b4c5ed4cabc803360e9b42acea55fa981e13f1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkDescriptorSetLayoutCreateFlagBits&quot;&gt;VkDescriptorSetLayoutCreateFlagBits&lt;/a&gt;, &lt;a href=&quot;#VkDescriptorSetLayoutCreateInfo&quot;&gt;VkDescriptorSetLayoutCreateInfo&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkDescriptorSetLayoutCreateFlagBits&quot;&gt;VkDescriptorSetLayoutCreateFlagBits&lt;/a&gt; , &lt;a href=&quot;#VkDescriptorSetLayoutCreateInfo&quot;&gt;VkDescriptorSetLayoutCreateInfo&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="94ba285ea96ac658867dff3158a9c3937ae2cf28" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkDescriptorSetLayoutCreateInfo&quot;&gt;VkDescriptorSetLayoutCreateInfo&lt;/a&gt;, &lt;a href=&quot;#VkDescriptorType&quot;&gt;VkDescriptorType&lt;/a&gt;, &lt;a href=&quot;#VkSampler&quot;&gt;VkSampler&lt;/a&gt;, &lt;a href=&quot;#VkShaderStageFlags&quot;&gt;VkShaderStageFlags&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkDescriptorSetLayoutCreateInfo&quot;&gt;VkDescriptorSetLayoutCreateInfo&lt;/a&gt; , &lt;a href=&quot;#VkDescriptorType&quot;&gt;VkDescriptorType&lt;/a&gt; , &lt;a href=&quot;#VkSampler&quot;&gt;VkSampler&lt;/a&gt; , &lt;a href=&quot;#VkShaderStageFlags&quot;&gt;VkShaderStageFlags&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="fc0779817cc4b785bcf2a5b781e565740df9c4a7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkDevice&quot;&gt;VkDevice&lt;/a&gt;, &lt;a href=&quot;#VkDeviceMemory&quot;&gt;VkDeviceMemory&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkDevice&quot;&gt;VkDevice&lt;/a&gt; , &lt;a href=&quot;#VkDeviceMemory&quot;&gt;VkDeviceMemory&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="81a9a778c753a3f19210c2b7371262cfc360fda8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkDevice&quot;&gt;VkDevice&lt;/a&gt;, &lt;a href=&quot;#VkDeviceMemory&quot;&gt;VkDeviceMemory&lt;/a&gt;, &lt;code&gt;VkDeviceSize&lt;/code&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkDevice&quot;&gt;VkDevice&lt;/a&gt; , &lt;a href=&quot;#VkDeviceMemory&quot;&gt;VkDeviceMemory&lt;/a&gt; , &lt;code&gt;VkDeviceSize&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3d3b521ab1df2e39980edaad65fd9aba205daaa1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkDevice&quot;&gt;VkDevice&lt;/a&gt;, &lt;a href=&quot;#VkDeviceMemory&quot;&gt;VkDeviceMemory&lt;/a&gt;, &lt;code&gt;VkDeviceSize&lt;/code&gt;, &lt;a href=&quot;#VkImage&quot;&gt;VkImage&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkDevice&quot;&gt;VkDevice&lt;/a&gt; , &lt;a href=&quot;#VkDeviceMemory&quot;&gt;VkDeviceMemory&lt;/a&gt; , &lt;code&gt;VkDeviceSize&lt;/code&gt; , &lt;a href=&quot;#VkImage&quot;&gt;VkImage&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7e358a0b6300b9d9c358fe69ea4fb6e0ec63370d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkDevice&quot;&gt;VkDevice&lt;/a&gt;, &lt;a href=&quot;#VkDeviceMemory&quot;&gt;VkDeviceMemory&lt;/a&gt;, &lt;code&gt;VkDeviceSize&lt;/code&gt;, &lt;a href=&quot;#VkMemoryMapFlags&quot;&gt;VkMemoryMapFlags&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkDevice&quot;&gt;VkDevice&lt;/a&gt; , &lt;a href=&quot;#VkDeviceMemory&quot;&gt;VkDeviceMemory&lt;/a&gt; , &lt;code&gt;VkDeviceSize&lt;/code&gt; , &lt;a href=&quot;#VkMemoryMapFlags&quot;&gt;VkMemoryMapFlags&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5431c72c7e57b1b2785e4f9600f2ed0ea7fca445" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkDevice&quot;&gt;VkDevice&lt;/a&gt;, &lt;a href=&quot;#VkEvent&quot;&gt;VkEvent&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkDevice&quot;&gt;VkDevice&lt;/a&gt; , &lt;a href=&quot;#VkEvent&quot;&gt;VkEvent&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="dbb87e116acd403bde4f4ac18daeb06afe2c4ca4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkDevice&quot;&gt;VkDevice&lt;/a&gt;, &lt;a href=&quot;#VkExtent2D&quot;&gt;VkExtent2D&lt;/a&gt;, &lt;a href=&quot;#VkRenderPass&quot;&gt;VkRenderPass&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkDevice&quot;&gt;VkDevice&lt;/a&gt; , &lt;a href=&quot;#VkExtent2D&quot;&gt;VkExtent2D&lt;/a&gt; , &lt;a href=&quot;#VkRenderPass&quot;&gt;VkRenderPass&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8439f169db20301460727b58cf72e249bd114a6c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkDevice&quot;&gt;VkDevice&lt;/a&gt;, &lt;a href=&quot;#VkFence&quot;&gt;VkFence&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkDevice&quot;&gt;VkDevice&lt;/a&gt; , &lt;a href=&quot;#VkFence&quot;&gt;VkFence&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="16063b7ef820d362e9aa095a95418a3726a5776b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkDevice&quot;&gt;VkDevice&lt;/a&gt;, &lt;a href=&quot;#VkImage&quot;&gt;VkImage&lt;/a&gt;, &lt;a href=&quot;#VkImageSubresource&quot;&gt;VkImageSubresource&lt;/a&gt;, &lt;a href=&quot;#VkSubresourceLayout&quot;&gt;VkSubresourceLayout&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkDevice&quot;&gt;VkDevice&lt;/a&gt; , &lt;a href=&quot;#VkImage&quot;&gt;VkImage&lt;/a&gt; , &lt;a href=&quot;#VkImageSubresource&quot;&gt;VkImageSubresource&lt;/a&gt; , &lt;a href=&quot;#VkSubresourceLayout&quot;&gt;VkSubresourceLayout&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="45ccfe20039167a1f18a2b2cc498736190433594" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkDevice&quot;&gt;VkDevice&lt;/a&gt;, &lt;a href=&quot;#VkImage&quot;&gt;VkImage&lt;/a&gt;, &lt;a href=&quot;#VkMemoryRequirements&quot;&gt;VkMemoryRequirements&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkDevice&quot;&gt;VkDevice&lt;/a&gt; , &lt;a href=&quot;#VkImage&quot;&gt;VkImage&lt;/a&gt; , &lt;a href=&quot;#VkMemoryRequirements&quot;&gt;VkMemoryRequirements&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c4629000c40d53ac346b799df8e3582dd4a26644" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkDevice&quot;&gt;VkDevice&lt;/a&gt;, &lt;a href=&quot;#VkImage&quot;&gt;VkImage&lt;/a&gt;, &lt;a href=&quot;#VkSparseImageMemoryRequirements&quot;&gt;VkSparseImageMemoryRequirements&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkDevice&quot;&gt;VkDevice&lt;/a&gt; , &lt;a href=&quot;#VkImage&quot;&gt;VkImage&lt;/a&gt; , &lt;a href=&quot;#VkSparseImageMemoryRequirements&quot;&gt;VkSparseImageMemory 요구 사항&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="511f00280b96bfece328cef66978d8f28088718b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkDevice&quot;&gt;VkDevice&lt;/a&gt;, &lt;a href=&quot;#VkMappedMemoryRange&quot;&gt;VkMappedMemoryRange&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkDevice&quot;&gt;VkDevice&lt;/a&gt; , &lt;a href=&quot;#VkMappedMemoryRange&quot;&gt;VkMappedMemoryRange&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6ffffaf03976481cbfd6889f460dcb6270fd3262" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkDevice&quot;&gt;VkDevice&lt;/a&gt;, &lt;a href=&quot;#VkPipelineCache&quot;&gt;VkPipelineCache&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkDevice&quot;&gt;VkDevice&lt;/a&gt; , &lt;a href=&quot;#VkPipelineCache&quot;&gt;VkPipelineCache&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="094c34758f516d669e52219b32ee63671c2d21db" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkDevice&quot;&gt;VkDevice&lt;/a&gt;, &lt;a href=&quot;#VkQueue&quot;&gt;VkQueue&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkDevice&quot;&gt;VkDevice&lt;/a&gt; , &lt;a href=&quot;#VkQueue&quot;&gt;VkQueue&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="aa359aefc8770dc18f467ef1003d96e58e38e77f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkDevice&quot;&gt;VkDevice&lt;/a&gt;, &lt;code&gt;VkDeviceSize&lt;/code&gt;, &lt;a href=&quot;#VkQueryPool&quot;&gt;VkQueryPool&lt;/a&gt;, &lt;a href=&quot;#VkQueryResultFlags&quot;&gt;VkQueryResultFlags&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkDevice&quot;&gt;VkDevice&lt;/a&gt; , &lt;code&gt;VkDeviceSize&lt;/code&gt; , &lt;a href=&quot;#VkQueryPool&quot;&gt;VkQueryPool&lt;/a&gt; , &lt;a href=&quot;#VkQueryResultFlags&quot;&gt;VkQueryResultFlags&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6d1c8df2b6ceb5a4af3279d6d88b7c4222b80402" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkDeviceCreateFlags&quot;&gt;VkDeviceCreateFlags&lt;/a&gt;, &lt;a href=&quot;#VkDeviceQueueCreateInfo&quot;&gt;VkDeviceQueueCreateInfo&lt;/a&gt;, &lt;a href=&quot;#VkPhysicalDeviceFeatures&quot;&gt;VkPhysicalDeviceFeatures&lt;/a&gt;, &lt;a href=&quot;#VkStructureType&quot;&gt;VkStructureType&lt;/a&gt;, &lt;a href=&quot;#vkCreateDevice&quot;&gt;vkCreateDevice&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkDeviceCreateFlags&quot;&gt;VkDeviceCreateFlags&lt;/a&gt; , &lt;a href=&quot;#VkDeviceQueueCreateInfo&quot;&gt;VkDeviceQueueCreateInfo&lt;/a&gt; , &lt;a href=&quot;#VkPhysicalDeviceFeatures&quot;&gt;VkPhysicalDeviceFeatures&lt;/a&gt; ,&lt;a href=&quot;#VkStructureType&quot;&gt; VkStructureType&lt;/a&gt; , &lt;a href=&quot;#vkCreateDevice&quot;&gt;vkCreateDevice&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2b8313b43b62f1b98837111568838e6bd5ff6bc6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkDeviceCreateInfo&quot;&gt;VkDeviceCreateInfo&lt;/a&gt;, &lt;a href=&quot;#VkDeviceQueueCreateFlags&quot;&gt;VkDeviceQueueCreateFlags&lt;/a&gt;, &lt;a href=&quot;#VkStructureType&quot;&gt;VkStructureType&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkDeviceCreateInfo&quot;&gt;VkDeviceCreateInfo&lt;/a&gt; , &lt;a href=&quot;#VkDeviceQueueCreateFlags&quot;&gt;VkDeviceQueueCreateFlags&lt;/a&gt; , &lt;a href=&quot;#VkStructureType&quot;&gt;VkStructureType&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5d0e4d2017427f9c36001b258f541c3f4742e67b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkDeviceMemory&quot;&gt;VkDeviceMemory&lt;/a&gt;, &lt;code&gt;VkDeviceSize&lt;/code&gt;, &lt;a href=&quot;#VkExtent3D&quot;&gt;VkExtent3D&lt;/a&gt;, &lt;a href=&quot;#VkImageSubresource&quot;&gt;VkImageSubresource&lt;/a&gt;, &lt;a href=&quot;#VkOffset3D&quot;&gt;VkOffset3D&lt;/a&gt;, &lt;a href=&quot;#VkSparseImageMemoryBindInfo&quot;&gt;VkSparseImageMemoryBindInfo&lt;/a&gt;, &lt;a href=&quot;#VkSparseMemoryBindFlags&quot;&gt;VkSparseMemoryBindFlags&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkDeviceMemory&quot;&gt;VkDeviceMemory&lt;/a&gt; , &lt;code&gt;VkDeviceSize&lt;/code&gt; , &lt;a href=&quot;#VkExtent3D&quot;&gt;VkExtent3D&lt;/a&gt; , &lt;a href=&quot;#VkImageSubresource&quot;&gt;VkImageSubresource&lt;/a&gt; , &lt;a href=&quot;#VkOffset3D&quot;&gt;VkOffset3D&lt;/a&gt; , &lt;a href=&quot;#VkSparseImageMemoryBindInfo&quot;&gt;VkSparseImageMemoryBindInfo&lt;/a&gt; , &lt;a href=&quot;#VkSparseMemoryBindFlags&quot;&gt;VkSparseMemoryBindFlags&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b460f3fa85957d00b2f2fe7992ab865bacf2aa14" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkDeviceMemory&quot;&gt;VkDeviceMemory&lt;/a&gt;, &lt;code&gt;VkDeviceSize&lt;/code&gt;, &lt;a href=&quot;#VkSparseBufferMemoryBindInfo&quot;&gt;VkSparseBufferMemoryBindInfo&lt;/a&gt;, &lt;a href=&quot;#VkSparseImageOpaqueMemoryBindInfo&quot;&gt;VkSparseImageOpaqueMemoryBindInfo&lt;/a&gt;, &lt;a href=&quot;#VkSparseMemoryBindFlags&quot;&gt;VkSparseMemoryBindFlags&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkDeviceMemory&quot;&gt;VkDeviceMemory&lt;/a&gt; , &lt;code&gt;VkDeviceSize&lt;/code&gt; , &lt;a href=&quot;#VkSparseBufferMemoryBindInfo&quot;&gt;VkSparseBufferMemoryBindInfo&lt;/a&gt; , &lt;a href=&quot;#VkSparseImageOpaqueMemoryBindInfo&quot;&gt;VkSparseImageOpaqueMemoryBindInfo&lt;/a&gt; , &lt;a href=&quot;#VkSparseMemoryBindFlags&quot;&gt;VkSparseMemoryBindFlags&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="dff6df30f58e5f386f66c1a5eb525ae761d01c84" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkDeviceMemory&quot;&gt;VkDeviceMemory&lt;/a&gt;, &lt;code&gt;VkDeviceSize&lt;/code&gt;, &lt;a href=&quot;#VkStructureType&quot;&gt;VkStructureType&lt;/a&gt;, &lt;a href=&quot;#vkFlushMappedMemoryRanges&quot;&gt;vkFlushMappedMemoryRanges&lt;/a&gt;, &lt;a href=&quot;#vkInvalidateMappedMemoryRanges&quot;&gt;vkInvalidateMappedMemoryRanges&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkDeviceMemory&quot;&gt;VkDeviceMemory&lt;/a&gt; , &lt;code&gt;VkDeviceSize&lt;/code&gt; , &lt;a href=&quot;#VkStructureType&quot;&gt;VkStructureType&lt;/a&gt; , &lt;a href=&quot;#vkFlushMappedMemoryRanges&quot;&gt;vkFlushMappedMemoryRanges&lt;/a&gt; , &lt;a href=&quot;#vkInvalidateMappedMemoryRanges&quot;&gt;vkInvalidateMappedMemoryRanges&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="cf2480df1a2992caf1406e5cd04c4f987558d794" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkDynamicState&quot;&gt;VkDynamicState&lt;/a&gt;, &lt;a href=&quot;#VkGraphicsPipelineCreateInfo&quot;&gt;VkGraphicsPipelineCreateInfo&lt;/a&gt;, &lt;a href=&quot;#VkPipelineDynamicStateCreateFlags&quot;&gt;VkPipelineDynamicStateCreateFlags&lt;/a&gt;, &lt;a href=&quot;#VkStructureType&quot;&gt;VkStructureType&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkDynamicState&quot;&gt;VkDynamicState&lt;/a&gt; , &lt;a href=&quot;#VkGraphicsPipelineCreateInfo&quot;&gt;VkGraphicsPipelineCreateInfo&lt;/a&gt; , &lt;a href=&quot;#VkPipelineDynamicStateCreateFlags&quot;&gt;VkPipelineDynamicStateCreateFlags&lt;/a&gt; , &lt;a href=&quot;#VkStructureType&quot;&gt;VkStructureType&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ad5f532143b3a7e25ef6bb0544bf3b32ec6f5dab" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkEventCreateFlags&quot;&gt;VkEventCreateFlags&lt;/a&gt;, &lt;a href=&quot;#VkStructureType&quot;&gt;VkStructureType&lt;/a&gt;, &lt;a href=&quot;#vkCreateEvent&quot;&gt;vkCreateEvent&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkEventCreateFlags&quot;&gt;VkEventCreateFlags&lt;/a&gt; , &lt;a href=&quot;#VkStructureType&quot;&gt;VkStructureType&lt;/a&gt; , &lt;a href=&quot;#vkCreateEvent&quot;&gt;vkCreateEvent&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a89e8f7c3b9916d89f8deec039258325d4714d1a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkExtensionProperties&quot;&gt;VkExtensionProperties&lt;/a&gt;, &lt;a href=&quot;#VkPhysicalDevice&quot;&gt;VkPhysicalDevice&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkExtensionProperties&quot;&gt;VkExtensionProperties&lt;/a&gt; , &lt;a href=&quot;#VkPhysicalDevice&quot;&gt;VkPhysicalDevice&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d0abe1ea9c650480d440ca2794e0c7bb6ab034b6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkExtent3D&quot;&gt;VkExtent3D&lt;/a&gt;, &lt;a href=&quot;#VkFormat&quot;&gt;VkFormat&lt;/a&gt;, &lt;a href=&quot;#VkImageCreateFlags&quot;&gt;VkImageCreateFlags&lt;/a&gt;, &lt;a href=&quot;#VkImageLayout&quot;&gt;VkImageLayout&lt;/a&gt;, &lt;a href=&quot;#VkImageTiling&quot;&gt;VkImageTiling&lt;/a&gt;, &lt;a href=&quot;#VkImageType&quot;&gt;VkImageType&lt;/a&gt;, &lt;a href=&quot;#VkImageUsageFlags&quot;&gt;VkImageUsageFlags&lt;/a&gt;, &lt;a href=&quot;#VkSampleCountFlagBits&quot;&gt;VkSampleCountFlagBits&lt;/a&gt;, &lt;a href=&quot;#VkSharingMode&quot;&gt;VkSharingMode&lt;/a&gt;, &lt;a href=&quot;#VkStructureType&quot;&gt;VkStructureType&lt;/a&gt;, &lt;a href=&quot;#vkCreateImage&quot;&gt;vkCreateImage&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkExtent3D&quot;&gt;VkExtent3D&lt;/a&gt; , &lt;a href=&quot;#VkFormat&quot;&gt;VkFormat&lt;/a&gt; , &lt;a href=&quot;#VkImageCreateFlags&quot;&gt;VkImageCreateFlags&lt;/a&gt; , &lt;a href=&quot;#VkImageLayout&quot;&gt;VkImageLayout&lt;/a&gt; , &lt;a href=&quot;#VkImageTiling&quot;&gt;VkImageTiling&lt;/a&gt; , &lt;a href=&quot;#VkImageType&quot;&gt;VkImageType&lt;/a&gt; , &lt;a href=&quot;#VkImageUsageFlags&quot;&gt;VkImageUsageFlags&lt;/a&gt; , &lt;a href=&quot;#VkSampleCountFlagBits&quot;&gt;VkSampleCountFlagBits&lt;/a&gt; , &lt;a href=&quot;#VkSharingMode&quot;&gt;VkSharingMode&lt;/a&gt; , &lt;a href=&quot;#VkStructureType&quot;&gt;VkStructureType&lt;/a&gt; , &lt;a href=&quot;#vkCreateImage&quot;&gt;vkCreateImage&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="fa91067a7dcd2b27ef783a6dcd35f17c7ec9a38c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkExtent3D&quot;&gt;VkExtent3D&lt;/a&gt;, &lt;a href=&quot;#VkImageAspectFlags&quot;&gt;VkImageAspectFlags&lt;/a&gt;, &lt;a href=&quot;#VkSparseImageFormatFlags&quot;&gt;VkSparseImageFormatFlags&lt;/a&gt;, &lt;a href=&quot;#VkSparseImageMemoryRequirements&quot;&gt;VkSparseImageMemoryRequirements&lt;/a&gt;, &lt;a href=&quot;#vkGetPhysicalDeviceSparseImageFormatProperties&quot;&gt;vkGetPhysicalDeviceSparseImageFormatProperties&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkExtent3D&quot;&gt;VkExtent3D&lt;/a&gt; , &lt;a href=&quot;#VkImageAspectFlags&quot;&gt;VkImageAspectFlags&lt;/a&gt; , &lt;a href=&quot;#VkSparseImageFormatFlags&quot;&gt;VkSparseImageFormatFlags&lt;/a&gt; , &lt;a href=&quot;#VkSparseImageMemoryRequirements&quot;&gt;VkSparseImageMemoryRequirements&lt;/a&gt; , &lt;a href=&quot;#vkGetPhysicalDeviceSparseImageFormatProperties&quot;&gt;vkGetPhysicalDeviceSparseImageFormatProperties&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="59b59b62f085c9b5138cfbe82f4c80a89c002270" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkExtent3D&quot;&gt;VkExtent3D&lt;/a&gt;, &lt;a href=&quot;#VkImageSubresourceLayers&quot;&gt;VkImageSubresourceLayers&lt;/a&gt;, &lt;a href=&quot;#VkOffset3D&quot;&gt;VkOffset3D&lt;/a&gt;, &lt;a href=&quot;#vkCmdCopyImage&quot;&gt;vkCmdCopyImage&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkExtent3D&quot;&gt;VkExtent3D&lt;/a&gt; , &lt;a href=&quot;#VkImageSubresourceLayers&quot;&gt;VkImageSubresourceLayers&lt;/a&gt; , &lt;a href=&quot;#VkOffset3D&quot;&gt;VkOffset3D&lt;/a&gt; , &lt;a href=&quot;#vkCmdCopyImage&quot;&gt;vkCmdCopyImage&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="951817eef9bd3949f089b33d3e1ecc5f68ead307" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkExtent3D&quot;&gt;VkExtent3D&lt;/a&gt;, &lt;a href=&quot;#VkImageSubresourceLayers&quot;&gt;VkImageSubresourceLayers&lt;/a&gt;, &lt;a href=&quot;#VkOffset3D&quot;&gt;VkOffset3D&lt;/a&gt;, &lt;a href=&quot;#vkCmdResolveImage&quot;&gt;vkCmdResolveImage&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkExtent3D&quot;&gt;VkExtent3D&lt;/a&gt; , &lt;a href=&quot;#VkImageSubresourceLayers&quot;&gt;VkImageSubresourceLayers&lt;/a&gt; , &lt;a href=&quot;#VkOffset3D&quot;&gt;VkOffset3D&lt;/a&gt; , &lt;a href=&quot;#vkCmdResolveImage&quot;&gt;vkCmdResolveImage&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7022873cb2bd5aba7b52c8dac4f4c13ac2f3982e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkExtent3D&quot;&gt;VkExtent3D&lt;/a&gt;, &lt;a href=&quot;#VkQueueFlags&quot;&gt;VkQueueFlags&lt;/a&gt;, &lt;a href=&quot;#vkGetPhysicalDeviceQueueFamilyProperties&quot;&gt;vkGetPhysicalDeviceQueueFamilyProperties&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkExtent3D&quot;&gt;VkExtent3D&lt;/a&gt; , &lt;a href=&quot;#VkQueueFlags&quot;&gt;VkQueueFlags&lt;/a&gt; ,&lt;a href=&quot;#vkGetPhysicalDeviceQueueFamilyProperties&quot;&gt; vkGetPhysicalDeviceQueueFamilyProperties&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3dc3fa952813ebac97d7ff8834efde4c2ff8d14c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkFence&quot;&gt;VkFence&lt;/a&gt;, &lt;a href=&quot;#VkQueue&quot;&gt;VkQueue&lt;/a&gt;, &lt;a href=&quot;#VkSubmitInfo&quot;&gt;VkSubmitInfo&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkFence&quot;&gt;VkFence&lt;/a&gt; , &lt;a href=&quot;#VkQueue&quot;&gt;VkQueue&lt;/a&gt; ,&lt;a href=&quot;#VkSubmitInfo&quot;&gt; VkSubmitInfo&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3f8e368bfa2d4a3f88d2685f7042b01291af9ba7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkFenceCreateFlagBits&quot;&gt;VkFenceCreateFlagBits&lt;/a&gt;, &lt;a href=&quot;#VkFenceCreateInfo&quot;&gt;VkFenceCreateInfo&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkFenceCreateFlagBits&quot;&gt;VkFenceCreateFlagBits&lt;/a&gt; ,&lt;a href=&quot;#VkFenceCreateInfo&quot;&gt; VkFenceCreateInfo&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5b1ebce1032d7900dad23c72e12d6d1960146051" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkFenceCreateFlags&quot;&gt;VkFenceCreateFlags&lt;/a&gt;, &lt;a href=&quot;#VkStructureType&quot;&gt;VkStructureType&lt;/a&gt;, &lt;a href=&quot;#vkCreateFence&quot;&gt;vkCreateFence&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkFenceCreateFlags&quot;&gt;VkFenceCreateFlags&lt;/a&gt; , &lt;a href=&quot;#VkStructureType&quot;&gt;VkStructureType&lt;/a&gt; ,&lt;a href=&quot;#vkCreateFence&quot;&gt; vkCreateFence&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c833f9434ed0a8e9512190bcf93213fc4de8a030" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkFormat&quot;&gt;VkFormat&lt;/a&gt;, &lt;a href=&quot;#VkFormatProperties&quot;&gt;VkFormatProperties&lt;/a&gt;, &lt;a href=&quot;#VkPhysicalDevice&quot;&gt;VkPhysicalDevice&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkFormat&quot;&gt;VkFormat&lt;/a&gt; , &lt;a href=&quot;#VkFormatProperties&quot;&gt;VkFormatProperties&lt;/a&gt; ,&lt;a href=&quot;#VkPhysicalDevice&quot;&gt; VkPhysicalDevice&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b55102655db155e9b08d32c4c87ea3661dad1816" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkFormat&quot;&gt;VkFormat&lt;/a&gt;, &lt;a href=&quot;#VkImageCreateFlags&quot;&gt;VkImageCreateFlags&lt;/a&gt;, &lt;a href=&quot;#VkImageFormatProperties&quot;&gt;VkImageFormatProperties&lt;/a&gt;, &lt;a href=&quot;#VkImageTiling&quot;&gt;VkImageTiling&lt;/a&gt;, &lt;a href=&quot;#VkImageType&quot;&gt;VkImageType&lt;/a&gt;, &lt;a href=&quot;#VkImageUsageFlags&quot;&gt;VkImageUsageFlags&lt;/a&gt;, &lt;a href=&quot;#VkPhysicalDevice&quot;&gt;VkPhysicalDevice&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkFormat&quot;&gt;VkFormat&lt;/a&gt; , &lt;a href=&quot;#VkImageCreateFlags&quot;&gt;VkImageCreateFlags&lt;/a&gt; , &lt;a href=&quot;#VkImageFormatProperties&quot;&gt;VkImageFormatProperties&lt;/a&gt; , &lt;a href=&quot;#VkImageTiling&quot;&gt;VkImageTiling&lt;/a&gt; , &lt;a href=&quot;#VkImageType&quot;&gt;VkImageType&lt;/a&gt; , &lt;a href=&quot;#VkImageUsageFlags&quot;&gt;VkImageUsageFlags&lt;/a&gt; ,&lt;a href=&quot;#VkPhysicalDevice&quot;&gt; VkPhysicalDevice&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3e6d673fdbd17c81d3d31800db386bd6c87190fd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkFormat&quot;&gt;VkFormat&lt;/a&gt;, &lt;a href=&quot;#VkImageTiling&quot;&gt;VkImageTiling&lt;/a&gt;, &lt;a href=&quot;#VkImageType&quot;&gt;VkImageType&lt;/a&gt;, &lt;a href=&quot;#VkImageUsageFlags&quot;&gt;VkImageUsageFlags&lt;/a&gt;, &lt;a href=&quot;#VkPhysicalDevice&quot;&gt;VkPhysicalDevice&lt;/a&gt;, &lt;a href=&quot;#VkSampleCountFlagBits&quot;&gt;VkSampleCountFlagBits&lt;/a&gt;, &lt;a href=&quot;#VkSparseImageFormatProperties&quot;&gt;VkSparseImageFormatProperties&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkFormat&quot;&gt;VkFormat&lt;/a&gt; , &lt;a href=&quot;#VkImageTiling&quot;&gt;VkImageTiling&lt;/a&gt; , &lt;a href=&quot;#VkImageType&quot;&gt;VkImageType&lt;/a&gt; , &lt;a href=&quot;#VkImageUsageFlags&quot;&gt;VkImageUsageFlags&lt;/a&gt; , &lt;a href=&quot;#VkPhysicalDevice&quot;&gt;VkPhysicalDevice&lt;/a&gt; , &lt;a href=&quot;#VkSampleCountFlagBits&quot;&gt;VkSampleCountFlagBits&lt;/a&gt; , &lt;a href=&quot;#VkSparseImageFormatProperties&quot;&gt;VkSparseImageFormatProperties&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="bfb12c56fcf26107d1bc26c6714f5cd902e84a16" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkFormat&quot;&gt;VkFormat&lt;/a&gt;, &lt;a href=&quot;#VkPipelineVertexInputStateCreateInfo&quot;&gt;VkPipelineVertexInputStateCreateInfo&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkFormat&quot;&gt;VkFormat&lt;/a&gt; ,&lt;a href=&quot;#VkPipelineVertexInputStateCreateInfo&quot;&gt; VkPipelineVertexInputStateCreateInfo&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="daede78879b95db6b83b02d904e7681c29fd2a1e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkFormatFeatureFlagBits&quot;&gt;VkFormatFeatureFlagBits&lt;/a&gt;, &lt;a href=&quot;#VkFormatProperties&quot;&gt;VkFormatProperties&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkFormatFeatureFlagBits&quot;&gt;VkFormatFeatureFlagBits&lt;/a&gt; ,&lt;a href=&quot;#VkFormatProperties&quot;&gt; VkFormatProperties&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="cca4bc1b63ca022e7b5df883c35c6548abdb51f9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkFormatFeatureFlags&quot;&gt;VkFormatFeatureFlags&lt;/a&gt;, &lt;a href=&quot;#vkGetPhysicalDeviceFormatProperties&quot;&gt;vkGetPhysicalDeviceFormatProperties&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkFormatFeatureFlags&quot;&gt;VkFormatFeatureFlags&lt;/a&gt; ,&lt;a href=&quot;#vkGetPhysicalDeviceFormatProperties&quot;&gt; vkGetPhysicalDeviceFormatProperties&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ecb439caeed1b7522a407e0502f391a74e976787" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkFramebufferCreateFlags&quot;&gt;VkFramebufferCreateFlags&lt;/a&gt;, &lt;a href=&quot;#VkImageView&quot;&gt;VkImageView&lt;/a&gt;, &lt;a href=&quot;#VkRenderPass&quot;&gt;VkRenderPass&lt;/a&gt;, &lt;a href=&quot;#VkStructureType&quot;&gt;VkStructureType&lt;/a&gt;, &lt;a href=&quot;#vkCreateFramebuffer&quot;&gt;vkCreateFramebuffer&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkFramebufferCreateFlags&quot;&gt;VkFramebufferCreateFlags&lt;/a&gt; , &lt;a href=&quot;#VkImageView&quot;&gt;VkImageView&lt;/a&gt; , &lt;a href=&quot;#VkRenderPass&quot;&gt;VkRenderPass&lt;/a&gt; , &lt;a href=&quot;#VkStructureType&quot;&gt;VkStructureType&lt;/a&gt; ,&lt;a href=&quot;#vkCreateFramebuffer&quot;&gt; vkCreateFramebuffer&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0bf2bc9bc0a043e5c2737b39586373b729072841" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkGraphicsPipelineCreateInfo&quot;&gt;VkGraphicsPipelineCreateInfo&lt;/a&gt;, &lt;a href=&quot;#VkPipelineTessellationStateCreateFlags&quot;&gt;VkPipelineTessellationStateCreateFlags&lt;/a&gt;, &lt;a href=&quot;#VkStructureType&quot;&gt;VkStructureType&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkGraphicsPipelineCreateInfo&quot;&gt;VkGraphicsPipelineCreateInfo&lt;/a&gt; , &lt;a href=&quot;#VkPipelineTessellationStateCreateFlags&quot;&gt;VkPipelineTessellationStateCreateFlags&lt;/a&gt; , &lt;a href=&quot;#VkStructureType&quot;&gt;VkStructureType&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="fe2b2226e09e180797f6c2f61438a4caf92208d6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkGraphicsPipelineCreateInfo&quot;&gt;VkGraphicsPipelineCreateInfo&lt;/a&gt;, &lt;a href=&quot;#VkPipelineVertexInputStateCreateFlags&quot;&gt;VkPipelineVertexInputStateCreateFlags&lt;/a&gt;, &lt;a href=&quot;#VkStructureType&quot;&gt;VkStructureType&lt;/a&gt;, &lt;a href=&quot;#VkVertexInputAttributeDescription&quot;&gt;VkVertexInputAttributeDescription&lt;/a&gt;, &lt;a href=&quot;#VkVertexInputBindingDescription&quot;&gt;VkVertexInputBindingDescription&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkGraphicsPipelineCreateInfo&quot;&gt;VkGraphicsPipelineCreateInfo&lt;/a&gt; , &lt;a href=&quot;#VkPipelineVertexInputStateCreateFlags&quot;&gt;VkPipelineVertexInputStateCreateFlags&lt;/a&gt; , &lt;a href=&quot;#VkStructureType&quot;&gt;VkStructureType&lt;/a&gt; , &lt;a href=&quot;#VkVertexInputAttributeDescription&quot;&gt;VkVertexInputAttributeDescription&lt;/a&gt; , &lt;a href=&quot;#VkVertexInputBindingDescription&quot;&gt;VkVertexInputBindingDescription&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="91f243a0c2c2062924b99228c2343fa0a6bf10a3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkGraphicsPipelineCreateInfo&quot;&gt;VkGraphicsPipelineCreateInfo&lt;/a&gt;, &lt;a href=&quot;#VkPipelineViewportStateCreateFlags&quot;&gt;VkPipelineViewportStateCreateFlags&lt;/a&gt;, &lt;a href=&quot;#VkRect2D&quot;&gt;VkRect2D&lt;/a&gt;, &lt;a href=&quot;#VkStructureType&quot;&gt;VkStructureType&lt;/a&gt;, &lt;a href=&quot;#VkViewport&quot;&gt;VkViewport&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkGraphicsPipelineCreateInfo&quot;&gt;VkGraphicsPipelineCreateInfo&lt;/a&gt; , &lt;a href=&quot;#VkPipelineViewportStateCreateFlags&quot;&gt;VkPipelineViewportStateCreateFlags&lt;/a&gt; , &lt;a href=&quot;#VkRect2D&quot;&gt;VkRect2D&lt;/a&gt; , &lt;a href=&quot;#VkStructureType&quot;&gt;VkStructureType&lt;/a&gt; ,&lt;a href=&quot;#VkViewport&quot;&gt; VkViewport&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f7e775b2f672a46c2993becd343aba2bb71a02e6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkImageAspectFlags&quot;&gt;VkImageAspectFlags&lt;/a&gt;, &lt;a href=&quot;#VkImageMemoryBarrier&quot;&gt;VkImageMemoryBarrier&lt;/a&gt;, &lt;a href=&quot;#VkImageViewCreateInfo&quot;&gt;VkImageViewCreateInfo&lt;/a&gt;, &lt;a href=&quot;#vkCmdClearColorImage&quot;&gt;vkCmdClearColorImage&lt;/a&gt;, &lt;a href=&quot;#vkCmdClearDepthStencilImage&quot;&gt;vkCmdClearDepthStencilImage&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkImageAspectFlags&quot;&gt;VkImageAspectFlags&lt;/a&gt; , &lt;a href=&quot;#VkImageMemoryBarrier&quot;&gt;VkImageMemoryBarrier&lt;/a&gt; , &lt;a href=&quot;#VkImageViewCreateInfo&quot;&gt;VkImageViewCreateInfo&lt;/a&gt; , &lt;a href=&quot;#vkCmdClearColorImage&quot;&gt;vkCmdClearColorImage&lt;/a&gt; ,&lt;a href=&quot;#vkCmdClearDepthStencilImage&quot;&gt; vkCmdClearDepthStencilImage&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="81e4c23678c366fa49a9319e9a0c414270da36ee" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkImageAspectFlags&quot;&gt;VkImageAspectFlags&lt;/a&gt;, &lt;a href=&quot;#VkSparseImageMemoryBind&quot;&gt;VkSparseImageMemoryBind&lt;/a&gt;, &lt;a href=&quot;#vkGetImageSubresourceLayout&quot;&gt;vkGetImageSubresourceLayout&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkImageAspectFlags&quot;&gt;VkImageAspectFlags&lt;/a&gt; , &lt;a href=&quot;#VkSparseImageMemoryBind&quot;&gt;VkSparseImageMemoryBind&lt;/a&gt; , &lt;a href=&quot;#vkGetImageSubresourceLayout&quot;&gt;vkGetImageSubresourceLayout&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="463bf0b652bf7a29a491f841c44f1a9de15096c0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkImageCreateFlagBits&quot;&gt;VkImageCreateFlagBits&lt;/a&gt;, &lt;a href=&quot;#VkImageCreateInfo&quot;&gt;VkImageCreateInfo&lt;/a&gt;, &lt;a href=&quot;#vkGetPhysicalDeviceImageFormatProperties&quot;&gt;vkGetPhysicalDeviceImageFormatProperties&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkImageCreateFlagBits&quot;&gt;VkImageCreateFlagBits&lt;/a&gt; , &lt;a href=&quot;#VkImageCreateInfo&quot;&gt;VkImageCreateInfo&lt;/a&gt; , &lt;a href=&quot;#vkGetPhysicalDeviceImageFormatProperties&quot;&gt;vkGetPhysicalDeviceImageFormatProperties&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e0b38a6a4561d49ccb8db7b2b2ab560c0c6820f3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkImageCreateInfo&quot;&gt;VkImageCreateInfo&lt;/a&gt;, &lt;a href=&quot;#VkImageUsageFlagBits&quot;&gt;VkImageUsageFlagBits&lt;/a&gt;, &lt;a href=&quot;#vkGetPhysicalDeviceImageFormatProperties&quot;&gt;vkGetPhysicalDeviceImageFormatProperties&lt;/a&gt;, &lt;a href=&quot;#vkGetPhysicalDeviceSparseImageFormatProperties&quot;&gt;vkGetPhysicalDeviceSparseImageFormatProperties&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkImageCreateInfo&quot;&gt;VkImageCreateInfo&lt;/a&gt; , &lt;a href=&quot;#VkImageUsageFlagBits&quot;&gt;VkImageUsageFlagBits&lt;/a&gt; , &lt;a href=&quot;#vkGetPhysicalDeviceImageFormatProperties&quot;&gt;vkGetPhysicalDeviceImageFormatProperties&lt;/a&gt; ,&lt;a href=&quot;#vkGetPhysicalDeviceSparseImageFormatProperties&quot;&gt; vkGetPhysicalDeviceSparseImageFormatProperties&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f63015936660b0893fe90681491f9bfe453fb784" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkImageCreateInfo&quot;&gt;VkImageCreateInfo&lt;/a&gt;, &lt;a href=&quot;#vkGetPhysicalDeviceImageFormatProperties&quot;&gt;vkGetPhysicalDeviceImageFormatProperties&lt;/a&gt;, &lt;a href=&quot;#vkGetPhysicalDeviceSparseImageFormatProperties&quot;&gt;vkGetPhysicalDeviceSparseImageFormatProperties&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkImageCreateInfo&quot;&gt;VkImageCreateInfo&lt;/a&gt; , &lt;a href=&quot;#vkGetPhysicalDeviceImageFormatProperties&quot;&gt;vkGetPhysicalDeviceImageFormatProperties&lt;/a&gt; ,&lt;a href=&quot;#vkGetPhysicalDeviceSparseImageFormatProperties&quot;&gt; vkGetPhysicalDeviceSparseImageFormatProperties&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="80ef8ded587cb14438bb6da6820a9a477bb88ceb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkImageFormatProperties&quot;&gt;VkImageFormatProperties&lt;/a&gt;, &lt;a href=&quot;#VkPhysicalDeviceLimits&quot;&gt;VkPhysicalDeviceLimits&lt;/a&gt;, &lt;a href=&quot;#VkSampleCountFlagBits&quot;&gt;VkSampleCountFlagBits&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkImageFormatProperties&quot;&gt;VkImageFormatProperties&lt;/a&gt; , &lt;a href=&quot;#VkPhysicalDeviceLimits&quot;&gt;VkPhysicalDeviceLimits&lt;/a&gt; ,&lt;a href=&quot;#VkSampleCountFlagBits&quot;&gt; VkSampleCountFlagBits&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d76e5bfec14568b5631b3c47589e1e76df540ac2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkImageLayout&quot;&gt;VkImageLayout&lt;/a&gt;, &lt;a href=&quot;#VkImageView&quot;&gt;VkImageView&lt;/a&gt;, &lt;a href=&quot;#VkSampler&quot;&gt;VkSampler&lt;/a&gt;, &lt;a href=&quot;#VkWriteDescriptorSet&quot;&gt;VkWriteDescriptorSet&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkImageLayout&quot;&gt;VkImageLayout&lt;/a&gt; , &lt;a href=&quot;#VkImageView&quot;&gt;VkImageView&lt;/a&gt; , &lt;a href=&quot;#VkSampler&quot;&gt;VkSampler&lt;/a&gt; , &lt;a href=&quot;#VkWriteDescriptorSet&quot;&gt;VkWriteDescriptorSet&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ea6fdb7281a2e98cef44fe4f41fac27406272cf4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkImageLayout&quot;&gt;VkImageLayout&lt;/a&gt;, &lt;a href=&quot;#VkSubpassDescription&quot;&gt;VkSubpassDescription&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkImageLayout&quot;&gt;VkImageLayout&lt;/a&gt; , &lt;a href=&quot;#VkSubpassDescription&quot;&gt;VkSubpassDescription&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="acfdf272529c30d49c6982903f6040814c749b3e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkImageMemoryBarrier&quot;&gt;VkImageMemoryBarrier&lt;/a&gt;, &lt;a href=&quot;#VkImageViewCreateInfo&quot;&gt;VkImageViewCreateInfo&lt;/a&gt;, &lt;a href=&quot;#VkSparseImageMemoryBindInfo&quot;&gt;VkSparseImageMemoryBindInfo&lt;/a&gt;, &lt;a href=&quot;#VkSparseImageOpaqueMemoryBindInfo&quot;&gt;VkSparseImageOpaqueMemoryBindInfo&lt;/a&gt;, &lt;a href=&quot;#vkBindImageMemory&quot;&gt;vkBindImageMemory&lt;/a&gt;, &lt;a href=&quot;#vkCmdBlitImage&quot;&gt;vkCmdBlitImage&lt;/a&gt;, &lt;a href=&quot;#vkCmdClearColorImage&quot;&gt;vkCmdClearColorImage&lt;/a&gt;, &lt;a href=&quot;#vkCmdClearDepthStencilImage&quot;&gt;vkCmdClearDepthStencilImage&lt;/a&gt;, &lt;a href=&quot;#vkCmdCopyBufferToImage&quot;&gt;vkCmdCopyBufferToImage&lt;/a&gt;, &lt;a href=&quot;#vkCmdCopyImage&quot;&gt;vkCmdCopyImage&lt;/a&gt;, &lt;a href=&quot;#vkCmdCopyImageToBuffer&quot;&gt;vkCmdCopyImageToBuffer&lt;/a&gt;, &lt;a href=&quot;#vkCmdResolveImage&quot;&gt;vkCmdResolveImage&lt;/a&gt;, &lt;a href=&quot;#vkCreateImage&quot;&gt;vkCreateImage&lt;/a&gt;, &lt;a href=&quot;#vkDestroyImage&quot;&gt;vkDestroyImage&lt;/a&gt;, &lt;a href=&quot;#vkGetImageMemoryRequirements&quot;&gt;vkGetImageMemoryRequirements&lt;/a&gt;, &lt;a href=&quot;#vkGetImageSparseMemoryRequirements&quot;&gt;vkGetImageSparseMemoryRequirements&lt;/a&gt;, &lt;a href=&quot;#vkGetImageSubresourceLayout&quot;&gt;vkGetImageSubresourceLayout&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkImageMemoryBarrier&quot;&gt;VkImageMemoryBarrier&lt;/a&gt; , &lt;a href=&quot;#VkImageViewCreateInfo&quot;&gt;VkImageViewCreateInfo&lt;/a&gt; , &lt;a href=&quot;#VkSparseImageMemoryBindInfo&quot;&gt;VkSparseImageMemoryBindInfo&lt;/a&gt; , &lt;a href=&quot;#VkSparseImageOpaqueMemoryBindInfo&quot;&gt;VkSparseImageOpaqueMemoryBindInfo&lt;/a&gt; , &lt;a href=&quot;#vkBindImageMemory&quot;&gt;vkBindImageMemory&lt;/a&gt; , &lt;a href=&quot;#vkCmdBlitImage&quot;&gt;vkCmdBlitImage&lt;/a&gt; , &lt;a href=&quot;#vkCmdClearColorImage&quot;&gt;vkCmdClearColorImage&lt;/a&gt; , &lt;a href=&quot;#vkCmdClearDepthStencilImage&quot;&gt;vkCmdClearDepthStencilImage&lt;/a&gt; , &lt;a href=&quot;#vkCmdCopyBufferToImage&quot;&gt;vkCmdCopyBufferToImage&lt;/a&gt; , &lt;a href=&quot;#vkCmdCopyImage&quot;&gt;vkCmdCopyImage&lt;/a&gt; , &lt;a href=&quot;#vkCmdCopyImageToBuffer&quot;&gt;vkCmdCopyImageToBuffer&lt;/a&gt; , &lt;a href=&quot;#vkCmdResolveImage&quot;&gt;vkCmdResolveImage&lt;/a&gt; , &lt;a href=&quot;#vkCreateImage&quot;&gt;vkCreateImage&lt;/a&gt; , &lt;a href=&quot;#vkDestroyImage&quot;&gt;vkDestroyImage&lt;/a&gt; , &lt;a href=&quot;#vkGetImageMemoryRequirements&quot;&gt;vkGetImageMemoryRequirements&lt;/a&gt; , &lt;a href=&quot;#vkGetImageSparseMemoryRequirements&quot;&gt;vkGetImageSparseMemoryRequirements&lt;/a&gt; , &lt;a href=&quot;#vkGetImageSubresourceLayout&quot;&gt;vkGetImageSubresourceLayout&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="68f4785c7364fb8a3973eb28082cc3dc2e8c94f4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkImageSubresourceLayers&quot;&gt;VkImageSubresourceLayers&lt;/a&gt;, &lt;a href=&quot;#VkOffset3D&quot;&gt;VkOffset3D&lt;/a&gt;, &lt;a href=&quot;#vkCmdBlitImage&quot;&gt;vkCmdBlitImage&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkImageSubresourceLayers&quot;&gt;VkImageSubresourceLayers&lt;/a&gt; , &lt;a href=&quot;#VkOffset3D&quot;&gt;VkOffset3D&lt;/a&gt; , &lt;a href=&quot;#vkCmdBlitImage&quot;&gt;vkCmdBlitImage&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="345edb2d6a67ed7541ce216eee8681906928030e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkInstance&quot;&gt;VkInstance&lt;/a&gt;, &lt;a href=&quot;#VkPhysicalDevice&quot;&gt;VkPhysicalDevice&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkInstance&quot;&gt;VkInstance&lt;/a&gt; , &lt;a href=&quot;#VkPhysicalDevice&quot;&gt;VkPhysicalDevice&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="addc375ad9b9ed4d25c500f633a8dffd1de22d91" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkInstanceCreateInfo&quot;&gt;VkInstanceCreateInfo&lt;/a&gt;, &lt;a href=&quot;#VkStructureType&quot;&gt;VkStructureType&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkInstanceCreateInfo&quot;&gt;VkInstanceCreateInfo&lt;/a&gt; , &lt;a href=&quot;#VkStructureType&quot;&gt;VkStructureType&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="46267d59a4d2760a4b2440082058fce828f52963" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkLayerProperties&quot;&gt;VkLayerProperties&lt;/a&gt;, &lt;a href=&quot;#VkPhysicalDevice&quot;&gt;VkPhysicalDevice&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkLayerProperties&quot;&gt;VkLayerProperties&lt;/a&gt; , &lt;a href=&quot;#VkPhysicalDevice&quot;&gt;VkPhysicalDevice&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="90474997ea0f06600455cff36f58c8f055d90755" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkMappedMemoryRange&quot;&gt;VkMappedMemoryRange&lt;/a&gt;, &lt;a href=&quot;#VkSparseImageMemoryBind&quot;&gt;VkSparseImageMemoryBind&lt;/a&gt;, &lt;a href=&quot;#VkSparseMemoryBind&quot;&gt;VkSparseMemoryBind&lt;/a&gt;, &lt;a href=&quot;#vkAllocateMemory&quot;&gt;vkAllocateMemory&lt;/a&gt;, &lt;a href=&quot;#vkBindBufferMemory&quot;&gt;vkBindBufferMemory&lt;/a&gt;, &lt;a href=&quot;#vkBindImageMemory&quot;&gt;vkBindImageMemory&lt;/a&gt;, &lt;a href=&quot;#vkFreeMemory&quot;&gt;vkFreeMemory&lt;/a&gt;, &lt;a href=&quot;#vkGetDeviceMemoryCommitment&quot;&gt;vkGetDeviceMemoryCommitment&lt;/a&gt;, &lt;a href=&quot;#vkMapMemory&quot;&gt;vkMapMemory&lt;/a&gt;, &lt;a href=&quot;#vkUnmapMemory&quot;&gt;vkUnmapMemory&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkMappedMemoryRange&quot;&gt;VkMappedMemoryRange&lt;/a&gt; , &lt;a href=&quot;#VkSparseImageMemoryBind&quot;&gt;VkSparseImageMemoryBind&lt;/a&gt; , &lt;a href=&quot;#VkSparseMemoryBind&quot;&gt;VkSparseMemoryBind&lt;/a&gt; , &lt;a href=&quot;#vkAllocateMemory&quot;&gt;vkAllocateMemory&lt;/a&gt; , &lt;a href=&quot;#vkBindBufferMemory&quot;&gt;vkBindBufferMemory&lt;/a&gt; , &lt;a href=&quot;#vkBindImageMemory&quot;&gt;vkBindImageMemory&lt;/a&gt; , &lt;a href=&quot;#vkFreeMemory&quot;&gt;vkFreeMemory&lt;/a&gt; , &lt;a href=&quot;#vkGetDeviceMemoryCommitment&quot;&gt;vkGetDeviceMemoryCommitment&lt;/a&gt; , &lt;a href=&quot;#vkMapMemory&quot;&gt;vkMapMemory&lt;/a&gt; , &lt;a href=&quot;#vkUnmapMemory&quot;&gt;vkUnmapMemory&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="cf413e6078abb698af13de158f5a359a12bdd669" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkMemoryHeap&quot;&gt;VkMemoryHeap&lt;/a&gt;, &lt;a href=&quot;#VkMemoryHeapFlagBits&quot;&gt;VkMemoryHeapFlagBits&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkMemoryHeap&quot;&gt;VkMemoryHeap&lt;/a&gt; , &lt;a href=&quot;#VkMemoryHeapFlagBits&quot;&gt;VkMemoryHeapFlagBits&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="50f3541a785070ff4812d8c14e9867e1e3b14033" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkMemoryHeap&quot;&gt;VkMemoryHeap&lt;/a&gt;, &lt;a href=&quot;#VkMemoryType&quot;&gt;VkMemoryType&lt;/a&gt;, &lt;a href=&quot;#vkGetPhysicalDeviceMemoryProperties&quot;&gt;vkGetPhysicalDeviceMemoryProperties&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkMemoryHeap&quot;&gt;VkMemoryHeap&lt;/a&gt; , &lt;a href=&quot;#VkMemoryType&quot;&gt;VkMemoryType&lt;/a&gt; , &lt;a href=&quot;#vkGetPhysicalDeviceMemoryProperties&quot;&gt;vkGetPhysicalDeviceMemoryProperties&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5f18b48a48e24cd0ee90bd42af4f776f4496deaa" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkMemoryPropertyFlagBits&quot;&gt;VkMemoryPropertyFlagBits&lt;/a&gt;, &lt;a href=&quot;#VkMemoryType&quot;&gt;VkMemoryType&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkMemoryPropertyFlagBits&quot;&gt;VkMemoryPropertyFlagBits&lt;/a&gt; , &lt;a href=&quot;#VkMemoryType&quot;&gt;VkMemoryType&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7ae13be3c977dd8875ed08bb91370b9405cd4779" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkMemoryPropertyFlags&quot;&gt;VkMemoryPropertyFlags&lt;/a&gt;, &lt;a href=&quot;#VkPhysicalDeviceMemoryProperties&quot;&gt;VkPhysicalDeviceMemoryProperties&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkMemoryPropertyFlags&quot;&gt;VkMemoryPropertyFlags&lt;/a&gt; , &lt;a href=&quot;#VkPhysicalDeviceMemoryProperties&quot;&gt;VkPhysicalDeviceMemoryProperties&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="005500bed7361999257a27f30a854c9280993a07" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkPhysicalDevice&quot;&gt;VkPhysicalDevice&lt;/a&gt;, &lt;a href=&quot;#VkPhysicalDeviceFeatures&quot;&gt;VkPhysicalDeviceFeatures&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkPhysicalDevice&quot;&gt;VkPhysicalDevice&lt;/a&gt; , &lt;a href=&quot;#VkPhysicalDeviceFeatures&quot;&gt;VkPhysicalDevice 특징&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="10e3476f089e594092965b55fa6b8662bc26a7f2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkPhysicalDevice&quot;&gt;VkPhysicalDevice&lt;/a&gt;, &lt;a href=&quot;#VkPhysicalDeviceMemoryProperties&quot;&gt;VkPhysicalDeviceMemoryProperties&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkPhysicalDevice&quot;&gt;VkPhysicalDevice&lt;/a&gt; , &lt;a href=&quot;#VkPhysicalDeviceMemoryProperties&quot;&gt;VkPhysicalDeviceMemoryProperties&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="631e0ebf39c314e365ba01190ca0290e2811b166" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkPhysicalDevice&quot;&gt;VkPhysicalDevice&lt;/a&gt;, &lt;a href=&quot;#VkPhysicalDeviceProperties&quot;&gt;VkPhysicalDeviceProperties&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkPhysicalDevice&quot;&gt;VkPhysicalDevice&lt;/a&gt; , &lt;a href=&quot;#VkPhysicalDeviceProperties&quot;&gt;VkPhysicalDeviceProperties&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="879ec433f36421b8eaf57de4f3c11cabcb5c4585" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkPhysicalDevice&quot;&gt;VkPhysicalDevice&lt;/a&gt;, &lt;a href=&quot;#VkQueueFamilyProperties&quot;&gt;VkQueueFamilyProperties&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkPhysicalDevice&quot;&gt;VkPhysicalDevice&lt;/a&gt; , &lt;a href=&quot;#VkQueueFamilyProperties&quot;&gt;VkQueueFamilyProperties&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="97b81a336e4001bc1f2d988f2541b767f1bd9116" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkPhysicalDeviceLimits&quot;&gt;VkPhysicalDeviceLimits&lt;/a&gt;, &lt;a href=&quot;#VkPhysicalDeviceSparseProperties&quot;&gt;VkPhysicalDeviceSparseProperties&lt;/a&gt;, &lt;a href=&quot;#VkPhysicalDeviceType&quot;&gt;VkPhysicalDeviceType&lt;/a&gt;, &lt;a href=&quot;#vkGetPhysicalDeviceProperties&quot;&gt;vkGetPhysicalDeviceProperties&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkPhysicalDeviceLimits&quot;&gt;VkPhysicalDeviceLimits&lt;/a&gt; , &lt;a href=&quot;#VkPhysicalDeviceSparseProperties&quot;&gt;VkPhysicalDeviceSparseProperties&lt;/a&gt; , &lt;a href=&quot;#VkPhysicalDeviceType&quot;&gt;VkPhysicalDeviceType&lt;/a&gt; , &lt;a href=&quot;#vkGetPhysicalDeviceProperties&quot;&gt;vkGetPhysicalDeviceProperties&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0f3dc568aaaf7e036d9af49bb7b8bd1970ce2884" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkPipeline&quot;&gt;VkPipeline&lt;/a&gt;, &lt;a href=&quot;#VkPipelineColorBlendStateCreateInfo&quot;&gt;VkPipelineColorBlendStateCreateInfo&lt;/a&gt;, &lt;a href=&quot;#VkPipelineCreateFlags&quot;&gt;VkPipelineCreateFlags&lt;/a&gt;, &lt;a href=&quot;#VkPipelineDepthStencilStateCreateInfo&quot;&gt;VkPipelineDepthStencilStateCreateInfo&lt;/a&gt;, &lt;a href=&quot;#VkPipelineDynamicStateCreateInfo&quot;&gt;VkPipelineDynamicStateCreateInfo&lt;/a&gt;, &lt;a href=&quot;#VkPipelineInputAssemblyStateCreateInfo&quot;&gt;VkPipelineInputAssemblyStateCreateInfo&lt;/a&gt;, &lt;a href=&quot;#VkPipelineLayout&quot;&gt;VkPipelineLayout&lt;/a&gt;, &lt;a href=&quot;#VkPipelineMultisampleStateCreateInfo&quot;&gt;VkPipelineMultisampleStateCreateInfo&lt;/a&gt;, &lt;a href=&quot;#VkPipelineRasterizationStateCreateInfo&quot;&gt;VkPipelineRasterizationStateCreateInfo&lt;/a&gt;, &lt;a href=&quot;#VkPipelineShaderStageCreateInfo&quot;&gt;VkPipelineShaderStageCreateInfo&lt;/a&gt;, &lt;a href=&quot;#VkPipelineTessellationStateCreateInfo&quot;&gt;VkPipelineTessellationStateCreateInfo&lt;/a&gt;, &lt;a href=&quot;#VkPipelineVertexInputStateCreateInfo&quot;&gt;VkPipelineVertexInputStateCreateInfo&lt;/a&gt;, &lt;a href=&quot;#VkPipelineViewportStateCreateInfo&quot;&gt;VkPipelineViewportStateCreateInfo&lt;/a&gt;, &lt;a href=&quot;#VkRenderPass&quot;&gt;VkRenderPass&lt;/a&gt;, &lt;a href=&quot;#VkStructureType&quot;&gt;VkStructureType&lt;/a&gt;, &lt;a href=&quot;#vkCreateGraphicsPipelines&quot;&gt;vkCreateGraphicsPipelines&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkPipeline&quot;&gt;VkPipeline&lt;/a&gt; , &lt;a href=&quot;#VkPipelineColorBlendStateCreateInfo&quot;&gt;VkPipelineColorBlendStateCreateInfo&lt;/a&gt; , &lt;a href=&quot;#VkPipelineCreateFlags&quot;&gt;VkPipelineCreateFlags&lt;/a&gt; , &lt;a href=&quot;#VkPipelineDepthStencilStateCreateInfo&quot;&gt;VkPipelineDepthStencilStateCreateInfo&lt;/a&gt; , &lt;a href=&quot;#VkPipelineDynamicStateCreateInfo&quot;&gt;VkPipelineDynamicStateCreateInfo&lt;/a&gt; , &lt;a href=&quot;#VkPipelineInputAssemblyStateCreateInfo&quot;&gt;VkPipelineInputAssemblyStateCreateInfo&lt;/a&gt; , &lt;a href=&quot;#VkPipelineLayout&quot;&gt;VkPipelineLayout&lt;/a&gt; , &lt;a href=&quot;#VkPipelineMultisampleStateCreateInfo&quot;&gt;VkPipelineMultisampleStateCreateInfo&lt;/a&gt; , &lt;a href=&quot;#VkPipelineRasterizationStateCreateInfo&quot;&gt;VkPipelineRasterizationStateCreateInfo&lt;/a&gt; , &lt;a href=&quot;#VkPipelineShaderStageCreateInfo&quot;&gt;VkPipelineShaderStageCreateInfo&lt;/a&gt; , &lt;a href=&quot;#VkPipelineTessellationStateCreateInfo&quot;&gt;VkPipelineTessellationStateCreateInfo&lt;/a&gt; , &lt;a href=&quot;#VkPipelineVertexInputStateCreateInfo&quot;&gt;VkPipelineVertexInputStateCreateInfo&lt;/a&gt; , &lt;a href=&quot;#VkPipelineViewportStateCreateInfo&quot;&gt;VkPipelineViewportStateCreateInfo&lt;/a&gt; , &lt;a href=&quot;#VkRenderPass&quot;&gt;VkRenderPass&lt;/a&gt; , &lt;a href=&quot;#vkCreateGraphicsPipelines&quot;&gt;vkCreateGraphicsPipelines&lt;/a&gt;&lt;a href=&quot;#VkStructureType&quot;&gt; VkStructureType&lt;/a&gt; ,</target>
        </trans-unit>
        <trans-unit id="19ed4eec3b3375427f6595871f58420b32d42721" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkPipeline&quot;&gt;VkPipeline&lt;/a&gt;, &lt;a href=&quot;#VkPipelineCreateFlags&quot;&gt;VkPipelineCreateFlags&lt;/a&gt;, &lt;a href=&quot;#VkPipelineLayout&quot;&gt;VkPipelineLayout&lt;/a&gt;, &lt;a href=&quot;#VkPipelineShaderStageCreateInfo&quot;&gt;VkPipelineShaderStageCreateInfo&lt;/a&gt;, &lt;a href=&quot;#VkStructureType&quot;&gt;VkStructureType&lt;/a&gt;, &lt;a href=&quot;#vkCreateComputePipelines&quot;&gt;vkCreateComputePipelines&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkPipeline&quot;&gt;VkPipeline&lt;/a&gt; , &lt;a href=&quot;#VkPipelineCreateFlags&quot;&gt;VkPipelineCreateFlags&lt;/a&gt; , &lt;a href=&quot;#VkPipelineLayout&quot;&gt;VkPipelineLayout&lt;/a&gt; , &lt;a href=&quot;#VkPipelineShaderStageCreateInfo&quot;&gt;VkPipelineShaderStageCreateInfo&lt;/a&gt; , &lt;a href=&quot;#VkStructureType&quot;&gt;VkStructureType&lt;/a&gt; , &lt;a href=&quot;#vkCreateComputePipelines&quot;&gt;vkCreateComputePipelines&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7d1ccad0747fd0d6813ac98dfb8359a783446d07" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkPipelineCacheCreateFlags&quot;&gt;VkPipelineCacheCreateFlags&lt;/a&gt;, &lt;a href=&quot;#VkStructureType&quot;&gt;VkStructureType&lt;/a&gt;, &lt;a href=&quot;#vkCreatePipelineCache&quot;&gt;vkCreatePipelineCache&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkPipelineCacheCreateFlags&quot;&gt;VkPipelineCacheCreateFlags&lt;/a&gt; , &lt;a href=&quot;#VkStructureType&quot;&gt;VkStructureType&lt;/a&gt; , &lt;a href=&quot;#vkCreatePipelineCache&quot;&gt;vkCreatePipelineCache&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="312bc35b7f60d420519d8da5ec58cbcc60980dfc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkPipelineDepthStencilStateCreateInfo&quot;&gt;VkPipelineDepthStencilStateCreateInfo&lt;/a&gt;, &lt;a href=&quot;#VkSamplerCreateInfo&quot;&gt;VkSamplerCreateInfo&lt;/a&gt;, &lt;a href=&quot;#VkStencilOpState&quot;&gt;VkStencilOpState&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkPipelineDepthStencilStateCreateInfo&quot;&gt;VkPipelineDepthStencilStateCreateInfo&lt;/a&gt; , &lt;a href=&quot;#VkSamplerCreateInfo&quot;&gt;VkSamplerCreateInfo&lt;/a&gt; , &lt;a href=&quot;#VkStencilOpState&quot;&gt;VkStencilOpState&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="df8f0c9be61a0e51d4c13676d38a9b922a5121cf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkPipelineLayoutCreateInfo&quot;&gt;VkPipelineLayoutCreateInfo&lt;/a&gt;, &lt;a href=&quot;#VkShaderStageFlags&quot;&gt;VkShaderStageFlags&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkPipelineLayoutCreateInfo&quot;&gt;VkPipelineLayoutCreateInfo&lt;/a&gt; , &lt;a href=&quot;#VkShaderStageFlags&quot;&gt;VkShaderStageFlags&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8a7b4204b2ffd96fbdb0aaa28210afd70b64e311" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkPipelineShaderStageCreateInfo&quot;&gt;VkPipelineShaderStageCreateInfo&lt;/a&gt;, &lt;a href=&quot;#VkShaderStageFlags&quot;&gt;VkShaderStageFlags&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkPipelineShaderStageCreateInfo&quot;&gt;VkPipelineShaderStageCreateInfo&lt;/a&gt; , &lt;a href=&quot;#VkShaderStageFlags&quot;&gt;VkShaderStageFlags&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8d0f1991d0f5af68eb34d92d0c9e19af3b1b50d2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkPipelineShaderStageCreateInfo&quot;&gt;VkPipelineShaderStageCreateInfo&lt;/a&gt;, &lt;a href=&quot;#VkSpecializationMapEntry&quot;&gt;VkSpecializationMapEntry&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkPipelineShaderStageCreateInfo&quot;&gt;VkPipelineShaderStageCreateInfo&lt;/a&gt; , &lt;a href=&quot;#VkSpecializationMapEntry&quot;&gt;VkSpecializationMapEntry&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="848e534713536608503fd383b10e8e69514f12d1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkPipelineShaderStageCreateInfo&quot;&gt;VkPipelineShaderStageCreateInfo&lt;/a&gt;, &lt;a href=&quot;#vkCreateShaderModule&quot;&gt;vkCreateShaderModule&lt;/a&gt;, &lt;a href=&quot;#vkDestroyShaderModule&quot;&gt;vkDestroyShaderModule&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkPipelineShaderStageCreateInfo&quot;&gt;VkPipelineShaderStageCreateInfo&lt;/a&gt; , &lt;a href=&quot;#vkCreateShaderModule&quot;&gt;vkCreateShaderModule&lt;/a&gt; , &lt;a href=&quot;#vkDestroyShaderModule&quot;&gt;vkDestroyShaderModule&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3df41003bf4c2f2b775ef4fa289305fab053e694" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkPipelineStageFlagBits&quot;&gt;VkPipelineStageFlagBits&lt;/a&gt;, &lt;a href=&quot;#VkSubmitInfo&quot;&gt;VkSubmitInfo&lt;/a&gt;, &lt;a href=&quot;#VkSubpassDependency&quot;&gt;VkSubpassDependency&lt;/a&gt;, &lt;a href=&quot;#vkCmdPipelineBarrier&quot;&gt;vkCmdPipelineBarrier&lt;/a&gt;, &lt;a href=&quot;#vkCmdResetEvent&quot;&gt;vkCmdResetEvent&lt;/a&gt;, &lt;a href=&quot;#vkCmdSetEvent&quot;&gt;vkCmdSetEvent&lt;/a&gt;, &lt;a href=&quot;#vkCmdWaitEvents&quot;&gt;vkCmdWaitEvents&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkPipelineStageFlagBits&quot;&gt;VkPipelineStageFlagBits&lt;/a&gt; , &lt;a href=&quot;#VkSubmitInfo&quot;&gt;VkSubmitInfo&lt;/a&gt; , &lt;a href=&quot;#VkSubpassDependency&quot;&gt;VkSubpassDependency&lt;/a&gt; , &lt;a href=&quot;#vkCmdPipelineBarrier&quot;&gt;vkCmdPipelineBarrier&lt;/a&gt; , &lt;a href=&quot;#vkCmdResetEvent&quot;&gt;vkCmdResetEvent&lt;/a&gt; , &lt;a href=&quot;#vkCmdSetEvent&quot;&gt;vkCmdSetEvent&lt;/a&gt; , &lt;a href=&quot;#vkCmdWaitEvents&quot;&gt;vkCmdWaitEvents&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9d8227bfb87466d00e444fa865480c316cf60558" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkPipelineStageFlags&quot;&gt;VkPipelineStageFlags&lt;/a&gt;, &lt;a href=&quot;#vkCmdWriteTimestamp&quot;&gt;vkCmdWriteTimestamp&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkPipelineStageFlags&quot;&gt;VkPipelineStageFlags&lt;/a&gt; , &lt;a href=&quot;#vkCmdWriteTimestamp&quot;&gt;vkCmdWriteTimestamp&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="fb55f3691f2e4e0f56255595a0fa9880c13569e7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkPipelineVertexInputStateCreateInfo&quot;&gt;VkPipelineVertexInputStateCreateInfo&lt;/a&gt;, &lt;a href=&quot;#VkVertexInputRate&quot;&gt;VkVertexInputRate&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkPipelineVertexInputStateCreateInfo&quot;&gt;VkPipelineVertexInputStateCreateInfo&lt;/a&gt; , &lt;a href=&quot;#VkVertexInputRate&quot;&gt;VkVertexInputRate&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="471ceaa51ce59ecb4d293c2b148239fbc5758bcf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkPipelineViewportStateCreateInfo&quot;&gt;VkPipelineViewportStateCreateInfo&lt;/a&gt;, &lt;a href=&quot;#vkCmdSetViewport&quot;&gt;vkCmdSetViewport&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkPipelineViewportStateCreateInfo&quot;&gt;VkPipelineViewportStateCreateInfo&lt;/a&gt; , &lt;a href=&quot;#vkCmdSetViewport&quot;&gt;vkCmdSetViewport&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="de884c825b69293ffc1dbc9a940e17a4ea580d57" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkQueryPipelineStatisticFlags&quot;&gt;VkQueryPipelineStatisticFlags&lt;/a&gt;, &lt;a href=&quot;#VkQueryPoolCreateFlags&quot;&gt;VkQueryPoolCreateFlags&lt;/a&gt;, &lt;a href=&quot;#VkQueryType&quot;&gt;VkQueryType&lt;/a&gt;, &lt;a href=&quot;#VkStructureType&quot;&gt;VkStructureType&lt;/a&gt;, &lt;a href=&quot;#vkCreateQueryPool&quot;&gt;vkCreateQueryPool&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkQueryPipelineStatisticFlags&quot;&gt;VkQueryPipelineStatisticFlags&lt;/a&gt; , &lt;a href=&quot;#VkQueryPoolCreateFlags&quot;&gt;VkQueryPoolCreateFlags&lt;/a&gt; , &lt;a href=&quot;#VkQueryType&quot;&gt;VkQueryType&lt;/a&gt; , &lt;a href=&quot;#VkStructureType&quot;&gt;VkStructureType&lt;/a&gt; , &lt;a href=&quot;#vkCreateQueryPool&quot;&gt;vkCreateQueryPool&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e063960bc07bcff57ce8166a5082a9cec5c77046" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkQueryResultFlagBits&quot;&gt;VkQueryResultFlagBits&lt;/a&gt;, &lt;a href=&quot;#vkCmdCopyQueryPoolResults&quot;&gt;vkCmdCopyQueryPoolResults&lt;/a&gt;, &lt;a href=&quot;#vkGetQueryPoolResults&quot;&gt;vkGetQueryPoolResults&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkQueryResultFlagBits&quot;&gt;VkQueryResultFlagBits&lt;/a&gt; , &lt;a href=&quot;#vkCmdCopyQueryPoolResults&quot;&gt;vkCmdCopyQueryPoolResults&lt;/a&gt; , &lt;a href=&quot;#vkGetQueryPoolResults&quot;&gt;vkGetQueryPoolResults&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="bcf651f75dd254c31c551ad26d759bea5f263879" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkQueueFamilyProperties&quot;&gt;VkQueueFamilyProperties&lt;/a&gt;, &lt;a href=&quot;#VkQueueFlagBits&quot;&gt;VkQueueFlagBits&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkQueueFamilyProperties&quot;&gt;VkQueueFamilyProperties&lt;/a&gt; , &lt;a href=&quot;#VkQueueFlagBits&quot;&gt;VkQueueFlagBits&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="dfcca64ddd2efee0d662218c9c4fbf05f1b62645" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkRect2D&quot;&gt;VkRect2D&lt;/a&gt;, &lt;a href=&quot;#vkCmdClearAttachments&quot;&gt;vkCmdClearAttachments&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkRect2D&quot;&gt;VkRect2D&lt;/a&gt; , &lt;a href=&quot;#vkCmdClearAttachments&quot;&gt;vkCmdClearAttachments&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="268ccc9f9b298310b3f54341167ce22eb15fcc03" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkRect2D&quot;&gt;VkRect2D&lt;/a&gt;, &lt;a href=&quot;#vkGetRenderAreaGranularity&quot;&gt;vkGetRenderAreaGranularity&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkRect2D&quot;&gt;VkRect2D&lt;/a&gt; , &lt;a href=&quot;#vkGetRenderAreaGranularity&quot;&gt;vkGetRenderAreaGranularity&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0d27588a7728468f61c5dc18efc03a79c72c0a10" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkSamplerCreateInfo&quot;&gt;VkSamplerCreateInfo&lt;/a&gt;, &lt;a href=&quot;#vkCmdBlitImage&quot;&gt;vkCmdBlitImage&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkSamplerCreateInfo&quot;&gt;VkSamplerCreateInfo&lt;/a&gt; , &lt;a href=&quot;#vkCmdBlitImage&quot;&gt;vkCmdBlitImage&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="72558e559288ac27bde7ce014b0bbcb32c29085d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkSemaphore&quot;&gt;VkSemaphore&lt;/a&gt;, &lt;a href=&quot;#VkSparseBufferMemoryBindInfo&quot;&gt;VkSparseBufferMemoryBindInfo&lt;/a&gt;, &lt;a href=&quot;#VkSparseImageMemoryBindInfo&quot;&gt;VkSparseImageMemoryBindInfo&lt;/a&gt;, &lt;a href=&quot;#VkSparseImageOpaqueMemoryBindInfo&quot;&gt;VkSparseImageOpaqueMemoryBindInfo&lt;/a&gt;, &lt;a href=&quot;#VkStructureType&quot;&gt;VkStructureType&lt;/a&gt;, &lt;a href=&quot;#vkQueueBindSparse&quot;&gt;vkQueueBindSparse&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkSemaphore&quot;&gt;VkSemaphore&lt;/a&gt; , &lt;a href=&quot;#VkSparseBufferMemoryBindInfo&quot;&gt;VkSparseBufferMemoryBindInfo&lt;/a&gt; , &lt;a href=&quot;#VkSparseImageMemoryBindInfo&quot;&gt;VkSparseImageMemoryBindInfo&lt;/a&gt; , &lt;a href=&quot;#VkSparseImageOpaqueMemoryBindInfo&quot;&gt;VkSparseImageOpaqueMemoryBindInfo&lt;/a&gt; , &lt;a href=&quot;#VkStructureType&quot;&gt;VkStructureType&lt;/a&gt; , &lt;a href=&quot;#vkQueueBindSparse&quot;&gt;vkQueueBindSparse&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b67c4fb89ed22c006f2cf87f7dd15515d084b40f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkSemaphoreCreateFlags&quot;&gt;VkSemaphoreCreateFlags&lt;/a&gt;, &lt;a href=&quot;#VkStructureType&quot;&gt;VkStructureType&lt;/a&gt;, &lt;a href=&quot;#vkCreateSemaphore&quot;&gt;vkCreateSemaphore&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkSemaphoreCreateFlags&quot;&gt;VkSemaphoreCreateFlags&lt;/a&gt; , &lt;a href=&quot;#VkStructureType&quot;&gt;VkStructureType&lt;/a&gt; , &lt;a href=&quot;#vkCreateSemaphore&quot;&gt;vkCreateSemaphore&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ed1e6556a6429cbc379bb6f552784d043e8955f8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkShaderModuleCreateFlags&quot;&gt;VkShaderModuleCreateFlags&lt;/a&gt;, &lt;a href=&quot;#VkStructureType&quot;&gt;VkStructureType&lt;/a&gt;, &lt;a href=&quot;#vkCreateShaderModule&quot;&gt;vkCreateShaderModule&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkShaderModuleCreateFlags&quot;&gt;VkShaderModuleCreateFlags&lt;/a&gt; , &lt;a href=&quot;#VkStructureType&quot;&gt;VkStructureType&lt;/a&gt; , &lt;a href=&quot;#vkCreateShaderModule&quot;&gt;vkCreateShaderModule&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b936e80bbf936aaa746aa1bb7253333bfb0ef7fc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkSparseImageFormatFlagBits&quot;&gt;VkSparseImageFormatFlagBits&lt;/a&gt;, &lt;a href=&quot;#VkSparseImageFormatProperties&quot;&gt;VkSparseImageFormatProperties&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkSparseImageFormatFlagBits&quot;&gt;VkSparseImageFormatFlagBits&lt;/a&gt; , &lt;a href=&quot;#VkSparseImageFormatProperties&quot;&gt;VkSparseImageFormatProperties&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="537cd4d815705f08d5d38d0e3cb7fea05552c104" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkSparseImageMemoryBind&quot;&gt;VkSparseImageMemoryBind&lt;/a&gt;, &lt;a href=&quot;#VkSparseMemoryBind&quot;&gt;VkSparseMemoryBind&lt;/a&gt;, &lt;a href=&quot;#VkSparseMemoryBindFlagBits&quot;&gt;VkSparseMemoryBindFlagBits&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkSparseImageMemoryBind&quot;&gt;VkSparseImageMemoryBind&lt;/a&gt; , &lt;a href=&quot;#VkSparseMemoryBind&quot;&gt;VkSparseMemoryBind&lt;/a&gt; , &lt;a href=&quot;#VkSparseMemoryBindFlagBits&quot;&gt;VkSparseMemoryBindFlagBits&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ab1f2369776de86a171935232781af6e22961014" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkStencilFaceFlagBits&quot;&gt;VkStencilFaceFlagBits&lt;/a&gt;, &lt;a href=&quot;#vkCmdSetStencilCompareMask&quot;&gt;vkCmdSetStencilCompareMask&lt;/a&gt;, &lt;a href=&quot;#vkCmdSetStencilReference&quot;&gt;vkCmdSetStencilReference&lt;/a&gt;, &lt;a href=&quot;#vkCmdSetStencilWriteMask&quot;&gt;vkCmdSetStencilWriteMask&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkStencilFaceFlagBits&quot;&gt;VkStencilFaceFlagBits&lt;/a&gt; , &lt;a href=&quot;#vkCmdSetStencilCompareMask&quot;&gt;vkCmdSetStencilCompareMask&lt;/a&gt; , &lt;a href=&quot;#vkCmdSetStencilReference&quot;&gt;vkCmdSetStencilReference&lt;/a&gt; , &lt;a href=&quot;#vkCmdSetStencilWriteMask&quot;&gt;vkCmdSetStencilWriteMask&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="66f634190e11bb4a5cf7429c5966845369904d27" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkSubmitInfo&quot;&gt;VkSubmitInfo&lt;/a&gt;, &lt;a href=&quot;#vkAllocateCommandBuffers&quot;&gt;vkAllocateCommandBuffers&lt;/a&gt;, &lt;a href=&quot;#vkBeginCommandBuffer&quot;&gt;vkBeginCommandBuffer&lt;/a&gt;, &lt;a href=&quot;#vkCmdBeginQuery&quot;&gt;vkCmdBeginQuery&lt;/a&gt;, &lt;a href=&quot;#vkCmdBeginRenderPass&quot;&gt;vkCmdBeginRenderPass&lt;/a&gt;, &lt;a href=&quot;#vkCmdBindDescriptorSets&quot;&gt;vkCmdBindDescriptorSets&lt;/a&gt;, &lt;a href=&quot;#vkCmdBindIndexBuffer&quot;&gt;vkCmdBindIndexBuffer&lt;/a&gt;, &lt;a href=&quot;#vkCmdBindPipeline&quot;&gt;vkCmdBindPipeline&lt;/a&gt;, &lt;a href=&quot;#vkCmdBindVertexBuffers&quot;&gt;vkCmdBindVertexBuffers&lt;/a&gt;, &lt;a href=&quot;#vkCmdBlitImage&quot;&gt;vkCmdBlitImage&lt;/a&gt;, &lt;a href=&quot;#vkCmdClearAttachments&quot;&gt;vkCmdClearAttachments&lt;/a&gt;, &lt;a href=&quot;#vkCmdClearColorImage&quot;&gt;vkCmdClearColorImage&lt;/a&gt;, &lt;a href=&quot;#vkCmdClearDepthStencilImage&quot;&gt;vkCmdClearDepthStencilImage&lt;/a&gt;, &lt;a href=&quot;#vkCmdCopyBuffer&quot;&gt;vkCmdCopyBuffer&lt;/a&gt;, &lt;a href=&quot;#vkCmdCopyBufferToImage&quot;&gt;vkCmdCopyBufferToImage&lt;/a&gt;, &lt;a href=&quot;#vkCmdCopyImage&quot;&gt;vkCmdCopyImage&lt;/a&gt;, &lt;a href=&quot;#vkCmdCopyImageToBuffer&quot;&gt;vkCmdCopyImageToBuffer&lt;/a&gt;, &lt;a href=&quot;#vkCmdCopyQueryPoolResults&quot;&gt;vkCmdCopyQueryPoolResults&lt;/a&gt;, &lt;a href=&quot;#vkCmdDispatch&quot;&gt;vkCmdDispatch&lt;/a&gt;, &lt;a href=&quot;#vkCmdDispatchIndirect&quot;&gt;vkCmdDispatchIndirect&lt;/a&gt;, &lt;a href=&quot;#vkCmdDraw&quot;&gt;vkCmdDraw&lt;/a&gt;, &lt;a href=&quot;#vkCmdDrawIndexed&quot;&gt;vkCmdDrawIndexed&lt;/a&gt;, &lt;a href=&quot;#vkCmdDrawIndexedIndirect&quot;&gt;vkCmdDrawIndexedIndirect&lt;/a&gt;, &lt;a href=&quot;#vkCmdDrawIndirect&quot;&gt;vkCmdDrawIndirect&lt;/a&gt;, &lt;a href=&quot;#vkCmdEndQuery&quot;&gt;vkCmdEndQuery&lt;/a&gt;, &lt;a href=&quot;#vkCmdEndRenderPass&quot;&gt;vkCmdEndRenderPass&lt;/a&gt;, &lt;a href=&quot;#vkCmdExecuteCommands&quot;&gt;vkCmdExecuteCommands&lt;/a&gt;, &lt;a href=&quot;#vkCmdFillBuffer&quot;&gt;vkCmdFillBuffer&lt;/a&gt;, &lt;a href=&quot;#vkCmdNextSubpass&quot;&gt;vkCmdNextSubpass&lt;/a&gt;, &lt;a href=&quot;#vkCmdPipelineBarrier&quot;&gt;vkCmdPipelineBarrier&lt;/a&gt;, &lt;a href=&quot;#vkCmdPushConstants&quot;&gt;vkCmdPushConstants&lt;/a&gt;, &lt;a href=&quot;#vkCmdResetEvent&quot;&gt;vkCmdResetEvent&lt;/a&gt;, &lt;a href=&quot;#vkCmdResetQueryPool&quot;&gt;vkCmdResetQueryPool&lt;/a&gt;, &lt;a href=&quot;#vkCmdResolveImage&quot;&gt;vkCmdResolveImage&lt;/a&gt;, &lt;a href=&quot;#vkCmdSetBlendConstants&quot;&gt;vkCmdSetBlendConstants&lt;/a&gt;, &lt;a href=&quot;#vkCmdSetDepthBias&quot;&gt;vkCmdSetDepthBias&lt;/a&gt;, &lt;a href=&quot;#vkCmdSetDepthBounds&quot;&gt;vkCmdSetDepthBounds&lt;/a&gt;, &lt;a href=&quot;#vkCmdSetEvent&quot;&gt;vkCmdSetEvent&lt;/a&gt;, &lt;a href=&quot;#vkCmdSetLineWidth&quot;&gt;vkCmdSetLineWidth&lt;/a&gt;, &lt;a href=&quot;#vkCmdSetScissor&quot;&gt;vkCmdSetScissor&lt;/a&gt;, &lt;a href=&quot;#vkCmdSetStencilCompareMask&quot;&gt;vkCmdSetStencilCompareMask&lt;/a&gt;, &lt;a href=&quot;#vkCmdSetStencilReference&quot;&gt;vkCmdSetStencilReference&lt;/a&gt;, &lt;a href=&quot;#vkCmdSetStencilWriteMask&quot;&gt;vkCmdSetStencilWriteMask&lt;/a&gt;, &lt;a href=&quot;#vkCmdSetViewport&quot;&gt;vkCmdSetViewport&lt;/a&gt;, &lt;a href=&quot;#vkCmdUpdateBuffer&quot;&gt;vkCmdUpdateBuffer&lt;/a&gt;, &lt;a href=&quot;#vkCmdWaitEvents&quot;&gt;vkCmdWaitEvents&lt;/a&gt;, &lt;a href=&quot;#vkCmdWriteTimestamp&quot;&gt;vkCmdWriteTimestamp&lt;/a&gt;, &lt;a href=&quot;#vkEndCommandBuffer&quot;&gt;vkEndCommandBuffer&lt;/a&gt;, &lt;a href=&quot;#vkFreeCommandBuffers&quot;&gt;vkFreeCommandBuffers&lt;/a&gt;, &lt;a href=&quot;#vkResetCommandBuffer&quot;&gt;vkResetCommandBuffer&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkSubmitInfo&quot;&gt;VkSubmitInfo&lt;/a&gt; , &lt;a href=&quot;#vkAllocateCommandBuffers&quot;&gt;vkAllocateCommandBuffers&lt;/a&gt; , &lt;a href=&quot;#vkBeginCommandBuffer&quot;&gt;vkBeginCommandBuffer&lt;/a&gt; , &lt;a href=&quot;#vkCmdBeginQuery&quot;&gt;vkCmdBeginQuery&lt;/a&gt; , &lt;a href=&quot;#vkCmdBeginRenderPass&quot;&gt;vkCmdBeginRenderPass&lt;/a&gt; , &lt;a href=&quot;#vkCmdBindDescriptorSets&quot;&gt;vkCmdBindDescriptorSets&lt;/a&gt; , &lt;a href=&quot;#vkCmdBindIndexBuffer&quot;&gt;vkCmdBindIndexBuffer&lt;/a&gt; , &lt;a href=&quot;#vkCmdBindPipeline&quot;&gt;vkCmdBindPipeline&lt;/a&gt; , &lt;a href=&quot;#vkCmdBindVertexBuffers&quot;&gt;vkCmdBindVertexBuffers&lt;/a&gt; , &lt;a href=&quot;#vkCmdBlitImage&quot;&gt;vkCmdBlitImage&lt;/a&gt; , &lt;a href=&quot;#vkCmdClearAttachments&quot;&gt;vkCmdClearAttachments&lt;/a&gt; , &lt;a href=&quot;#vkCmdClearColorImage&quot;&gt;vkCmdClearColorImage&lt;/a&gt; , &lt;a href=&quot;#vkCmdClearDepthStencilImage&quot;&gt;vkCmdClearDepthStencilImage&lt;/a&gt; , &lt;a href=&quot;#vkCmdCopyBuffer&quot;&gt;vkCmdCopyBuffer&lt;/a&gt; , &lt;a href=&quot;#vkCmdCopyBufferToImage&quot;&gt;vkCmdCopyBufferToImage&lt;/a&gt; , &lt;a href=&quot;#vkCmdCopyImage&quot;&gt;vkCmdCopyImage&lt;/a&gt; , &lt;a href=&quot;#vkCmdCopyImageToBuffer&quot;&gt;vkCmdCopyImageToBuffer&lt;/a&gt; , &lt;a href=&quot;#vkCmdCopyQueryPoolResults&quot;&gt;vkCmdCopyQueryPoolResults&lt;/a&gt; ,&lt;a href=&quot;#vkCmdDispatch&quot;&gt;vkCmdDispatch&lt;/a&gt; , &lt;a href=&quot;#vkCmdDispatchIndirect&quot;&gt;vkCmdDispatchIndirect&lt;/a&gt; , &lt;a href=&quot;#vkCmdDraw&quot;&gt;vkCmdDraw&lt;/a&gt; , &lt;a href=&quot;#vkCmdDrawIndexed&quot;&gt;vkCmdDrawIndexed&lt;/a&gt; , &lt;a href=&quot;#vkCmdDrawIndexedIndirect&quot;&gt;vkCmdDrawIndexedIndirect&lt;/a&gt; , &lt;a href=&quot;#vkCmdDrawIndirect&quot;&gt;vkCmdDrawIndirect&lt;/a&gt; , &lt;a href=&quot;#vkCmdEndQuery&quot;&gt;vkCmdEndQuery&lt;/a&gt; , &lt;a href=&quot;#vkCmdEndRenderPass&quot;&gt;vkCmdEndRenderPass&lt;/a&gt; , &lt;a href=&quot;#vkCmdExecuteCommands&quot;&gt;vkCmdExecuteCommands&lt;/a&gt; , &lt;a href=&quot;#vkCmdFillBuffer&quot;&gt;vkCmdFillBuffer&lt;/a&gt; , &lt;a href=&quot;#vkCmdNextSubpass&quot;&gt;vkCmdNextSubpass&lt;/a&gt; , &lt;a href=&quot;#vkCmdPipelineBarrier&quot;&gt;vkCmdPipelineBarrier&lt;/a&gt; , &lt;a href=&quot;#vkCmdPushConstants&quot;&gt;vkCmdPushConstants&lt;/a&gt; , &lt;a href=&quot;#vkCmdResetEvent&quot;&gt;vkCmdResetEvent&lt;/a&gt; , &lt;a href=&quot;#vkCmdResetQueryPool&quot;&gt;vkCmdResetQueryPool&lt;/a&gt; , &lt;a href=&quot;#vkCmdResolveImage&quot;&gt;vkCmdResolveImage&lt;/a&gt; , &lt;a href=&quot;#vkCmdSetBlendConstants&quot;&gt;vkCmdSetBlendConstants&lt;/a&gt; , &lt;a href=&quot;#vkCmdSetDepthBias&quot;&gt;vkCmdSetDepthBias&lt;/a&gt; , &lt;a href=&quot;#vkCmdSetDepthBounds&quot;&gt; vkCmdSetDepthBounds&lt;/a&gt;, &lt;a href=&quot;#vkCmdSetEvent&quot;&gt;vkCmdSetEvent&lt;/a&gt; , &lt;a href=&quot;#vkCmdSetLineWidth&quot;&gt;vkCmdSetLineWidth&lt;/a&gt; , &lt;a href=&quot;#vkCmdSetScissor&quot;&gt;vkCmdSetScissor&lt;/a&gt; , &lt;a href=&quot;#vkCmdSetStencilCompareMask&quot;&gt;vkCmdSetStencilCompareMask&lt;/a&gt; , &lt;a href=&quot;#vkCmdSetStencilReference&quot;&gt;vkCmdSetStencilReference&lt;/a&gt; , &lt;a href=&quot;#vkCmdSetStencilWriteMask&quot;&gt;vkCmdSetStencilWriteMask&lt;/a&gt; , &lt;a href=&quot;#vkCmdSetViewport&quot;&gt;vkCmdSetViewport&lt;/a&gt; , &lt;a href=&quot;#vkCmdUpdateBuffer&quot;&gt;vkCmdUpdateBuffer&lt;/a&gt; , &lt;a href=&quot;#vkCmdWaitEvents&quot;&gt;vkCmdWaitEvents&lt;/a&gt; , &lt;a href=&quot;#vkCmdWriteTimestamp&quot;&gt;vkCmdWriteTimestamp&lt;/a&gt; , &lt;a href=&quot;#vkEndCommandBuffer&quot;&gt;vkEndCommandBuffer&lt;/a&gt; , &lt;a href=&quot;#vkFreeCommandBuffers&quot;&gt;vkFreeCommandBuffers&lt;/a&gt; , &lt;a href=&quot;#vkResetCommandBuffer&quot;&gt;vkResetCommandBuffer&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="70781602911899836d39a8e72b338101018b70dd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkSubpassDescription&quot;&gt;VkSubpassDescription&lt;/a&gt;, &lt;a href=&quot;#VkSubpassDescriptionFlagBits&quot;&gt;VkSubpassDescriptionFlagBits&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkSubpassDescription&quot;&gt;VkSubpassDescription&lt;/a&gt; , &lt;a href=&quot;#VkSubpassDescriptionFlagBits&quot;&gt;VkSubpassDescriptionFlagBits&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9aa962716ff9a80a69873a5057dc994abc4f7c4e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkSubpassDescription&quot;&gt;VkSubpassDescription&lt;/a&gt;, &lt;a href=&quot;#vkCmdBindDescriptorSets&quot;&gt;vkCmdBindDescriptorSets&lt;/a&gt;, &lt;a href=&quot;#vkCmdBindPipeline&quot;&gt;vkCmdBindPipeline&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkSubpassDescription&quot;&gt;VkSubpassDescription&lt;/a&gt; , &lt;a href=&quot;#vkCmdBindDescriptorSets&quot;&gt;vkCmdBindDescriptorSets&lt;/a&gt; , &lt;a href=&quot;#vkCmdBindPipeline&quot;&gt;vkCmdBindPipeline&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="48c1e9fb9b6b00c09ffcf3aaa375fc14a3b3fcc4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#VkWriteDescriptorSet&quot;&gt;VkWriteDescriptorSet&lt;/a&gt;, &lt;a href=&quot;#vkCreateBufferView&quot;&gt;vkCreateBufferView&lt;/a&gt;, &lt;a href=&quot;#vkDestroyBufferView&quot;&gt;vkDestroyBufferView&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkWriteDescriptorSet&quot;&gt;VkWriteDescriptorSet&lt;/a&gt; , &lt;a href=&quot;#vkCreateBufferView&quot;&gt;vkCreateBufferView&lt;/a&gt; , &lt;a href=&quot;#vkDestroyBufferView&quot;&gt;vkDestroyBufferView&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7c4302ead29b915946f6d3b5cda4b652a02d99a4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#vkAllocateCommandBuffers&quot;&gt;vkAllocateCommandBuffers&lt;/a&gt;, &lt;a href=&quot;#vkAllocateDescriptorSets&quot;&gt;vkAllocateDescriptorSets&lt;/a&gt;, &lt;a href=&quot;#vkAllocateMemory&quot;&gt;vkAllocateMemory&lt;/a&gt;, &lt;a href=&quot;#vkBindBufferMemory&quot;&gt;vkBindBufferMemory&lt;/a&gt;, &lt;a href=&quot;#vkBindImageMemory&quot;&gt;vkBindImageMemory&lt;/a&gt;, &lt;a href=&quot;#vkCreateBuffer&quot;&gt;vkCreateBuffer&lt;/a&gt;, &lt;a href=&quot;#vkCreateBufferView&quot;&gt;vkCreateBufferView&lt;/a&gt;, &lt;a href=&quot;#vkCreateCommandPool&quot;&gt;vkCreateCommandPool&lt;/a&gt;, &lt;a href=&quot;#vkCreateComputePipelines&quot;&gt;vkCreateComputePipelines&lt;/a&gt;, &lt;a href=&quot;#vkCreateDescriptorPool&quot;&gt;vkCreateDescriptorPool&lt;/a&gt;, &lt;a href=&quot;#vkCreateDescriptorSetLayout&quot;&gt;vkCreateDescriptorSetLayout&lt;/a&gt;, &lt;a href=&quot;#vkCreateDevice&quot;&gt;vkCreateDevice&lt;/a&gt;, &lt;a href=&quot;#vkCreateEvent&quot;&gt;vkCreateEvent&lt;/a&gt;, &lt;a href=&quot;#vkCreateFence&quot;&gt;vkCreateFence&lt;/a&gt;, &lt;a href=&quot;#vkCreateFramebuffer&quot;&gt;vkCreateFramebuffer&lt;/a&gt;, &lt;a href=&quot;#vkCreateGraphicsPipelines&quot;&gt;vkCreateGraphicsPipelines&lt;/a&gt;, &lt;a href=&quot;#vkCreateImage&quot;&gt;vkCreateImage&lt;/a&gt;, &lt;a href=&quot;#vkCreateImageView&quot;&gt;vkCreateImageView&lt;/a&gt;, &lt;a href=&quot;#vkCreatePipelineCache&quot;&gt;vkCreatePipelineCache&lt;/a&gt;, &lt;a href=&quot;#vkCreatePipelineLayout&quot;&gt;vkCreatePipelineLayout&lt;/a&gt;, &lt;a href=&quot;#vkCreateQueryPool&quot;&gt;vkCreateQueryPool&lt;/a&gt;, &lt;a href=&quot;#vkCreateRenderPass&quot;&gt;vkCreateRenderPass&lt;/a&gt;, &lt;a href=&quot;#vkCreateSampler&quot;&gt;vkCreateSampler&lt;/a&gt;, &lt;a href=&quot;#vkCreateSemaphore&quot;&gt;vkCreateSemaphore&lt;/a&gt;, &lt;a href=&quot;#vkCreateShaderModule&quot;&gt;vkCreateShaderModule&lt;/a&gt;, &lt;a href=&quot;#vkDestroyBuffer&quot;&gt;vkDestroyBuffer&lt;/a&gt;, &lt;a href=&quot;#vkDestroyBufferView&quot;&gt;vkDestroyBufferView&lt;/a&gt;, &lt;a href=&quot;#vkDestroyCommandPool&quot;&gt;vkDestroyCommandPool&lt;/a&gt;, &lt;a href=&quot;#vkDestroyDescriptorPool&quot;&gt;vkDestroyDescriptorPool&lt;/a&gt;, &lt;a href=&quot;#vkDestroyDescriptorSetLayout&quot;&gt;vkDestroyDescriptorSetLayout&lt;/a&gt;, &lt;a href=&quot;#vkDestroyDevice&quot;&gt;vkDestroyDevice&lt;/a&gt;, &lt;a href=&quot;#vkDestroyEvent&quot;&gt;vkDestroyEvent&lt;/a&gt;, &lt;a href=&quot;#vkDestroyFence&quot;&gt;vkDestroyFence&lt;/a&gt;, &lt;a href=&quot;#vkDestroyFramebuffer&quot;&gt;vkDestroyFramebuffer&lt;/a&gt;, &lt;a href=&quot;#vkDestroyImage&quot;&gt;vkDestroyImage&lt;/a&gt;, &lt;a href=&quot;#vkDestroyImageView&quot;&gt;vkDestroyImageView&lt;/a&gt;, &lt;a href=&quot;#vkDestroyPipeline&quot;&gt;vkDestroyPipeline&lt;/a&gt;, &lt;a href=&quot;#vkDestroyPipelineCache&quot;&gt;vkDestroyPipelineCache&lt;/a&gt;, &lt;a href=&quot;#vkDestroyPipelineLayout&quot;&gt;vkDestroyPipelineLayout&lt;/a&gt;, &lt;a href=&quot;#vkDestroyQueryPool&quot;&gt;vkDestroyQueryPool&lt;/a&gt;, &lt;a href=&quot;#vkDestroyRenderPass&quot;&gt;vkDestroyRenderPass&lt;/a&gt;, &lt;a href=&quot;#vkDestroySampler&quot;&gt;vkDestroySampler&lt;/a&gt;, &lt;a href=&quot;#vkDestroySemaphore&quot;&gt;vkDestroySemaphore&lt;/a&gt;, &lt;a href=&quot;#vkDestroyShaderModule&quot;&gt;vkDestroyShaderModule&lt;/a&gt;, &lt;a href=&quot;#vkDeviceWaitIdle&quot;&gt;vkDeviceWaitIdle&lt;/a&gt;, &lt;a href=&quot;#vkFlushMappedMemoryRanges&quot;&gt;vkFlushMappedMemoryRanges&lt;/a&gt;, &lt;a href=&quot;#vkFreeCommandBuffers&quot;&gt;vkFreeCommandBuffers&lt;/a&gt;, &lt;a href=&quot;#vkFreeDescriptorSets&quot;&gt;vkFreeDescriptorSets&lt;/a&gt;, &lt;a href=&quot;#vkFreeMemory&quot;&gt;vkFreeMemory&lt;/a&gt;, &lt;a href=&quot;#vkGetBufferMemoryRequirements&quot;&gt;vkGetBufferMemoryRequirements&lt;/a&gt;, &lt;a href=&quot;#vkGetDeviceMemoryCommitment&quot;&gt;vkGetDeviceMemoryCommitment&lt;/a&gt;, &lt;a href=&quot;#vkGetDeviceProcAddr&quot;&gt;vkGetDeviceProcAddr&lt;/a&gt;, &lt;a href=&quot;#vkGetDeviceQueue&quot;&gt;vkGetDeviceQueue&lt;/a&gt;, &lt;a href=&quot;#vkGetEventStatus&quot;&gt;vkGetEventStatus&lt;/a&gt;, &lt;a href=&quot;#vkGetFenceStatus&quot;&gt;vkGetFenceStatus&lt;/a&gt;, &lt;a href=&quot;#vkGetImageMemoryRequirements&quot;&gt;vkGetImageMemoryRequirements&lt;/a&gt;, &lt;a href=&quot;#vkGetImageSparseMemoryRequirements&quot;&gt;vkGetImageSparseMemoryRequirements&lt;/a&gt;, &lt;a href=&quot;#vkGetImageSubresourceLayout&quot;&gt;vkGetImageSubresourceLayout&lt;/a&gt;, &lt;a href=&quot;#vkGetPipelineCacheData&quot;&gt;vkGetPipelineCacheData&lt;/a&gt;, &lt;a href=&quot;#vkGetQueryPoolResults&quot;&gt;vkGetQueryPoolResults&lt;/a&gt;, &lt;a href=&quot;#vkGetRenderAreaGranularity&quot;&gt;vkGetRenderAreaGranularity&lt;/a&gt;, &lt;a href=&quot;#vkInvalidateMappedMemoryRanges&quot;&gt;vkInvalidateMappedMemoryRanges&lt;/a&gt;, &lt;a href=&quot;#vkMapMemory&quot;&gt;vkMapMemory&lt;/a&gt;, &lt;a href=&quot;#vkMergePipelineCaches&quot;&gt;vkMergePipelineCaches&lt;/a&gt;, &lt;a href=&quot;#vkResetCommandPool&quot;&gt;vkResetCommandPool&lt;/a&gt;, &lt;a href=&quot;#vkResetDescriptorPool&quot;&gt;vkResetDescriptorPool&lt;/a&gt;, &lt;a href=&quot;#vkResetEvent&quot;&gt;vkResetEvent&lt;/a&gt;, &lt;a href=&quot;#vkResetFences&quot;&gt;vkResetFences&lt;/a&gt;, &lt;a href=&quot;#vkSetEvent&quot;&gt;vkSetEvent&lt;/a&gt;, &lt;a href=&quot;#vkUnmapMemory&quot;&gt;vkUnmapMemory&lt;/a&gt;, &lt;a href=&quot;#vkUpdateDescriptorSets&quot;&gt;vkUpdateDescriptorSets&lt;/a&gt;, &lt;a href=&quot;#vkWaitForFences&quot;&gt;vkWaitForFences&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#vkAllocateCommandBuffers&quot;&gt;vkAllocateCommandBuffers&lt;/a&gt; , &lt;a href=&quot;#vkAllocateDescriptorSets&quot;&gt;vkAllocateDescriptorSets&lt;/a&gt; , &lt;a href=&quot;#vkAllocateMemory&quot;&gt;vkAllocateMemory&lt;/a&gt; , &lt;a href=&quot;#vkBindBufferMemory&quot;&gt;vkBindBufferMemory&lt;/a&gt; , &lt;a href=&quot;#vkBindImageMemory&quot;&gt;vkBindImageMemory&lt;/a&gt; , &lt;a href=&quot;#vkCreateBuffer&quot;&gt;vkCreateBuffer&lt;/a&gt; , &lt;a href=&quot;#vkCreateBufferView&quot;&gt;vkCreateBufferView&lt;/a&gt; , &lt;a href=&quot;#vkCreateCommandPool&quot;&gt;vkCreateCommandPool&lt;/a&gt; , &lt;a href=&quot;#vkCreateComputePipelines&quot;&gt;vkCreateComputePipelines&lt;/a&gt; , &lt;a href=&quot;#vkCreateDescriptorPool&quot;&gt;vkCreateDescriptorPool&lt;/a&gt; , &lt;a href=&quot;#vkCreateDescriptorSetLayout&quot;&gt;vkCreateDescriptorSetLayout&lt;/a&gt; , &lt;a href=&quot;#vkCreateDevice&quot;&gt;vkCreateDevice&lt;/a&gt; , &lt;a href=&quot;#vkCreateEvent&quot;&gt;vkCreateEvent&lt;/a&gt; , &lt;a href=&quot;#vkCreateFence&quot;&gt;vkCreateFence&lt;/a&gt; , &lt;a href=&quot;#vkCreateFramebuffer&quot;&gt;vkCreateFramebuffer&lt;/a&gt; , &lt;a href=&quot;#vkCreateGraphicsPipelines&quot;&gt;vkCreateGraphicsPipelines&lt;/a&gt; , &lt;a href=&quot;#vkCreateImage&quot;&gt;vkCreateImage&lt;/a&gt; , &lt;a href=&quot;#vkCreateImageView&quot;&gt;vkCreateImageView&lt;/a&gt; ,&lt;a href=&quot;#vkCreatePipelineCache&quot;&gt;vkCreatePipelineCache&lt;/a&gt; , &lt;a href=&quot;#vkCreatePipelineLayout&quot;&gt;vkCreatePipelineLayout&lt;/a&gt; , &lt;a href=&quot;#vkCreateQueryPool&quot;&gt;vkCreateQueryPool&lt;/a&gt; , &lt;a href=&quot;#vkCreateRenderPass&quot;&gt;vkCreateRenderPass&lt;/a&gt; , &lt;a href=&quot;#vkCreateSampler&quot;&gt;vkCreateSampler&lt;/a&gt; , &lt;a href=&quot;#vkCreateSemaphore&quot;&gt;vkCreateSemaphore&lt;/a&gt; , &lt;a href=&quot;#vkCreateShaderModule&quot;&gt;vkCreateShaderModule&lt;/a&gt; , &lt;a href=&quot;#vkDestroyBuffer&quot;&gt;vkDestroyBuffer&lt;/a&gt; , &lt;a href=&quot;#vkDestroyBufferView&quot;&gt;vkDestroyBufferView&lt;/a&gt; , &lt;a href=&quot;#vkDestroyCommandPool&quot;&gt;vkDestroyCommandPool&lt;/a&gt; , &lt;a href=&quot;#vkDestroyDescriptorPool&quot;&gt;vkDestroyDescriptorPool&lt;/a&gt; , &lt;a href=&quot;#vkDestroyDescriptorSetLayout&quot;&gt;vkDestroyDescriptorSetLayout&lt;/a&gt; , &lt;a href=&quot;#vkDestroyDevice&quot;&gt;vkDestroyDevice&lt;/a&gt; , &lt;a href=&quot;#vkDestroyEvent&quot;&gt;vkDestroyEvent&lt;/a&gt; , &lt;a href=&quot;#vkDestroyFence&quot;&gt;vkDestroyFence&lt;/a&gt; , &lt;a href=&quot;#vkDestroyFramebuffer&quot;&gt;vkDestroyFramebuffer&lt;/a&gt; , &lt;a href=&quot;#vkDestroyImage&quot;&gt;vkDestroyImage&lt;/a&gt; , &lt;a href=&quot;#vkDestroyImageView&quot;&gt;vkDestroyImageView&lt;/a&gt; ,&lt;a href=&quot;#vkDestroyPipeline&quot;&gt;vkDestroyPipeline&lt;/a&gt; , &lt;a href=&quot;#vkDestroyPipelineCache&quot;&gt;vkDestroyPipelineCache&lt;/a&gt; , &lt;a href=&quot;#vkDestroyPipelineLayout&quot;&gt;vkDestroyPipelineLayout&lt;/a&gt; , &lt;a href=&quot;#vkDestroyQueryPool&quot;&gt;vkDestroyQueryPool&lt;/a&gt; , &lt;a href=&quot;#vkDestroyRenderPass&quot;&gt;vkDestroyRenderPass&lt;/a&gt; , &lt;a href=&quot;#vkDestroySampler&quot;&gt;vkDestroySampler&lt;/a&gt; , &lt;a href=&quot;#vkDestroySemaphore&quot;&gt;vkDestroySemaphore&lt;/a&gt; , &lt;a href=&quot;#vkDestroyShaderModule&quot;&gt;vkDestroyShaderModule&lt;/a&gt; , &lt;a href=&quot;#vkDeviceWaitIdle&quot;&gt;vkDeviceWaitIdle&lt;/a&gt; , &lt;a href=&quot;#vkFlushMappedMemoryRanges&quot;&gt;vkFlushMappedMemoryRanges&lt;/a&gt; , &lt;a href=&quot;#vkFreeCommandBuffers&quot;&gt;vkFreeCommandBuffers&lt;/a&gt; , &lt;a href=&quot;#vkFreeDescriptorSets&quot;&gt;vkFreeDescriptorSets&lt;/a&gt; , &lt;a href=&quot;#vkFreeMemory&quot;&gt;vkFreeMemory&lt;/a&gt; , &lt;a href=&quot;#vkGetBufferMemoryRequirements&quot;&gt;vkGetBufferMemoryRequirements&lt;/a&gt; , &lt;a href=&quot;#vkGetDeviceMemoryCommitment&quot;&gt;vkGetDeviceMemoryCommitment&lt;/a&gt; , &lt;a href=&quot;#vkGetDeviceProcAddr&quot;&gt;vkGetDeviceProcAddr&lt;/a&gt; , &lt;a href=&quot;#vkGetDeviceQueue&quot;&gt;vkGetDeviceQueue&lt;/a&gt; , &lt;a href=&quot;#vkGetEventStatus&quot;&gt;vkGetEventStatus&lt;/a&gt; ,&lt;a href=&quot;#vkGetFenceStatus&quot;&gt;vkGetFenceStatus&lt;/a&gt; , &lt;a href=&quot;#vkGetImageMemoryRequirements&quot;&gt;vkGetImageMemoryRequirements&lt;/a&gt; , &lt;a href=&quot;#vkGetImageSparseMemoryRequirements&quot;&gt;vkGetImageSparseMemoryRequirements&lt;/a&gt; , &lt;a href=&quot;#vkGetImageSubresourceLayout&quot;&gt;vkGetImageSubresourceLayout&lt;/a&gt; , &lt;a href=&quot;#vkGetPipelineCacheData&quot;&gt;vkGetPipelineCacheData&lt;/a&gt; , &lt;a href=&quot;#vkGetQueryPoolResults&quot;&gt;vkGetQueryPoolResults&lt;/a&gt; , &lt;a href=&quot;#vkGetRenderAreaGranularity&quot;&gt;vkGetRenderAreaGranularity&lt;/a&gt; , &lt;a href=&quot;#vkInvalidateMappedMemoryRanges&quot;&gt;vkInvalidateMappedMemoryRanges&lt;/a&gt; , &lt;a href=&quot;#vkMapMemory&quot;&gt;vkMapMemory&lt;/a&gt; , &lt;a href=&quot;#vkMergePipelineCaches&quot;&gt;vkMergePipelineCaches&lt;/a&gt; , &lt;a href=&quot;#vkResetCommandPool&quot;&gt;vkResetCommandPool&lt;/a&gt; , &lt;a href=&quot;#vkResetDescriptorPool&quot;&gt;vkResetDescriptorPool&lt;/a&gt; , &lt;a href=&quot;#vkResetEvent&quot;&gt;vkResetEvent&lt;/a&gt; , &lt;a href=&quot;#vkResetFences&quot;&gt;vkResetFences&lt;/a&gt; , &lt;a href=&quot;#vkSetEvent&quot;&gt;vkSetEvent&lt;/a&gt; , &lt;a href=&quot;#vkUnmapMemory&quot;&gt;vkUnmapMemory&lt;/a&gt; , &lt;a href=&quot;#vkUpdateDescriptorSets&quot;&gt;vkUpdateDescriptorSets&lt;/a&gt; , &lt;a href=&quot;#vkWaitForFences&quot;&gt;vkWaitForFences&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0257f8b4f28b8f546cb0cf36b60bad4f85fab0eb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#vkCmdBeginQuery&quot;&gt;vkCmdBeginQuery&lt;/a&gt;, &lt;a href=&quot;#vkCmdCopyQueryPoolResults&quot;&gt;vkCmdCopyQueryPoolResults&lt;/a&gt;, &lt;a href=&quot;#vkCmdEndQuery&quot;&gt;vkCmdEndQuery&lt;/a&gt;, &lt;a href=&quot;#vkCmdResetQueryPool&quot;&gt;vkCmdResetQueryPool&lt;/a&gt;, &lt;a href=&quot;#vkCmdWriteTimestamp&quot;&gt;vkCmdWriteTimestamp&lt;/a&gt;, &lt;a href=&quot;#vkCreateQueryPool&quot;&gt;vkCreateQueryPool&lt;/a&gt;, &lt;a href=&quot;#vkDestroyQueryPool&quot;&gt;vkDestroyQueryPool&lt;/a&gt;, &lt;a href=&quot;#vkGetQueryPoolResults&quot;&gt;vkGetQueryPoolResults&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#vkCmdBeginQuery&quot;&gt;vkCmdBeginQuery&lt;/a&gt; , &lt;a href=&quot;#vkCmdCopyQueryPoolResults&quot;&gt;vkCmdCopyQueryPoolResults&lt;/a&gt; , &lt;a href=&quot;#vkCmdEndQuery&quot;&gt;vkCmdEndQuery&lt;/a&gt; , &lt;a href=&quot;#vkCmdResetQueryPool&quot;&gt;vkCmdResetQueryPool&lt;/a&gt; , &lt;a href=&quot;#vkCmdWriteTimestamp&quot;&gt;vkCmdWriteTimestamp&lt;/a&gt; , &lt;a href=&quot;#vkCreateQueryPool&quot;&gt;vkCreateQueryPool&lt;/a&gt; , &lt;a href=&quot;#vkDestroyQueryPool&quot;&gt;vkDestroyQueryPool&lt;/a&gt; , &lt;a href=&quot;#vkGetQueryPoolResults&quot;&gt;vkGetQueryPoolResults&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="bfcd3e2a623cd1bd26fe433d49e8147090275386" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#vkCmdBeginRenderPass&quot;&gt;vkCmdBeginRenderPass&lt;/a&gt;, &lt;a href=&quot;#vkCmdNextSubpass&quot;&gt;vkCmdNextSubpass&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#vkCmdBeginRenderPass&quot;&gt;vkCmdBeginRenderPass&lt;/a&gt; , &lt;a href=&quot;#vkCmdNextSubpass&quot;&gt;vkCmdNext 서브 패스&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6e549739bc7910732bd74533c844d36d1af895d8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#vkCmdCopyQueryPoolResults&quot;&gt;vkCmdCopyQueryPoolResults&lt;/a&gt;&lt;strong&gt;can&lt;/strong&gt; then be called to copy the timestamp value from the query pool into buffer memory, with ordering and synchronization behavior equivalent to how other queries operate. Timestamp values &lt;strong&gt;can&lt;/strong&gt; also be retrieved from the query pool using &lt;a href=&quot;#vkGetQueryPoolResults&quot;&gt;vkGetQueryPoolResults&lt;/a&gt;. As with other queries, the query &lt;strong&gt;must&lt;/strong&gt; be reset using &lt;a href=&quot;#vkCmdResetQueryPool&quot;&gt;vkCmdResetQueryPool&lt;/a&gt; before requesting the timestamp value be written to it.</source>
          <target state="translated">&lt;a href=&quot;#vkCmdCopyQueryPoolResults&quot;&gt;&lt;/a&gt;그런 다음 vkCmdCopyQueryPoolResults &lt;strong&gt;를&lt;/strong&gt; 호출하여 다른 쿼리의 작동 방식과 동일한 순서 및 동기화 동작으로 쿼리 풀에서 타임 스탬프 값을 버퍼 메모리로 복사 &lt;strong&gt;할 수 있습니다&lt;/strong&gt; . &lt;a href=&quot;#vkGetQueryPoolResults&quot;&gt;vkGetQueryPoolResults를&lt;/a&gt; 사용하여 쿼리 풀에서 타임 스탬프 값 &lt;strong&gt;을&lt;/strong&gt; 검색 &lt;strong&gt;할&lt;/strong&gt; 수도 있습니다 . 다른 쿼리와 마찬가지로 타임 스탬프 값을 요청하기 전에 &lt;a href=&quot;#vkCmdResetQueryPool&quot;&gt;vkCmdResetQueryPool&lt;/a&gt; 을 사용하여 쿼리 &lt;strong&gt;를&lt;/strong&gt; 재설정 &lt;strong&gt;해야&lt;/strong&gt; 합니다.&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="313af3229e568d77ca501e226816dd18430622fd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#vkCmdResetEvent&quot;&gt;vkCmdResetEvent&lt;/a&gt;, &lt;a href=&quot;#vkCmdSetEvent&quot;&gt;vkCmdSetEvent&lt;/a&gt;, &lt;a href=&quot;#vkCmdWaitEvents&quot;&gt;vkCmdWaitEvents&lt;/a&gt;, &lt;a href=&quot;#vkCreateEvent&quot;&gt;vkCreateEvent&lt;/a&gt;, &lt;a href=&quot;#vkDestroyEvent&quot;&gt;vkDestroyEvent&lt;/a&gt;, &lt;a href=&quot;#vkGetEventStatus&quot;&gt;vkGetEventStatus&lt;/a&gt;, &lt;a href=&quot;#vkResetEvent&quot;&gt;vkResetEvent&lt;/a&gt;, &lt;a href=&quot;#vkSetEvent&quot;&gt;vkSetEvent&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#vkCmdResetEvent&quot;&gt;vkCmdResetEvent&lt;/a&gt; , &lt;a href=&quot;#vkCmdSetEvent&quot;&gt;vkCmdSetEvent&lt;/a&gt; , &lt;a href=&quot;#vkCmdWaitEvents&quot;&gt;vkCmdWaitEvents&lt;/a&gt; , &lt;a href=&quot;#vkCreateEvent&quot;&gt;vkCreateEvent&lt;/a&gt; , &lt;a href=&quot;#vkDestroyEvent&quot;&gt;vkDestroyEvent&lt;/a&gt; , &lt;a href=&quot;#vkGetEventStatus&quot;&gt;vkGetEventStatus&lt;/a&gt; , &lt;a href=&quot;#vkResetEvent&quot;&gt;vkResetEvent&lt;/a&gt; , &lt;a href=&quot;#vkSetEvent&quot;&gt;vkSetEvent&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7e563d7753fb5a2e0f4689104153bf497b84a8f5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#vkCmdWaitEvents&quot;&gt;vkCmdWaitEvents&lt;/a&gt; is used with &lt;a href=&quot;#vkCmdSetEvent&quot;&gt;vkCmdSetEvent&lt;/a&gt; to define a memory dependency between two sets of action commands, roughly in the same way as pipeline barriers, but split into two commands such that work between the two &lt;strong&gt;may&lt;/strong&gt; execute unhindered.</source>
          <target state="translated">&lt;a href=&quot;#vkCmdWaitEvents&quot;&gt;vkCmdWaitEvents는&lt;/a&gt; 함께 사용 &lt;a href=&quot;#vkCmdSetEvent&quot;&gt;vkCmdSetEvent&lt;/a&gt; 둘 사이 작업되도록 두 개의 명령어로 대략 파이프 장벽와 동일하게 동작 명령의 세트이지만 분할 메모리 간의 종속성을 정의 할 &lt;strong&gt;수있다&lt;/strong&gt; 방해받지 않고 실행한다.</target>
        </trans-unit>
        <trans-unit id="564873cc404450411bae64918fc5c1a67a7b1a17" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#vkCreateComputePipelines&quot;&gt;vkCreateComputePipelines&lt;/a&gt;, &lt;a href=&quot;#vkCreateGraphicsPipelines&quot;&gt;vkCreateGraphicsPipelines&lt;/a&gt;, &lt;a href=&quot;#vkCreatePipelineCache&quot;&gt;vkCreatePipelineCache&lt;/a&gt;, &lt;a href=&quot;#vkDestroyPipelineCache&quot;&gt;vkDestroyPipelineCache&lt;/a&gt;, &lt;a href=&quot;#vkGetPipelineCacheData&quot;&gt;vkGetPipelineCacheData&lt;/a&gt;, &lt;a href=&quot;#vkMergePipelineCaches&quot;&gt;vkMergePipelineCaches&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#vkCreateComputePipelines&quot;&gt;vkCreateComputePipelines&lt;/a&gt; , &lt;a href=&quot;#vkCreateGraphicsPipelines&quot;&gt;vkCreateGraphicsPipelines&lt;/a&gt; , &lt;a href=&quot;#vkCreatePipelineCache&quot;&gt;vkCreatePipelineCache&lt;/a&gt; , &lt;a href=&quot;#vkDestroyPipelineCache&quot;&gt;vkDestroyPipelineCache&lt;/a&gt; , &lt;a href=&quot;#vkGetPipelineCacheData&quot;&gt;vkGetPipelineCacheData&lt;/a&gt; , &lt;a href=&quot;#vkMergePipelineCaches&quot;&gt;vkMergePipelineCaches&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="65cad706151dc504696f12d10b5845ce494c456d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#vkCreateDevice&quot;&gt;vkCreateDevice&lt;/a&gt;, &lt;a href=&quot;#vkEnumerateDeviceExtensionProperties&quot;&gt;vkEnumerateDeviceExtensionProperties&lt;/a&gt;, &lt;a href=&quot;#vkEnumerateDeviceLayerProperties&quot;&gt;vkEnumerateDeviceLayerProperties&lt;/a&gt;, &lt;a href=&quot;#vkEnumeratePhysicalDevices&quot;&gt;vkEnumeratePhysicalDevices&lt;/a&gt;, &lt;a href=&quot;#vkGetPhysicalDeviceFeatures&quot;&gt;vkGetPhysicalDeviceFeatures&lt;/a&gt;, &lt;a href=&quot;#vkGetPhysicalDeviceFormatProperties&quot;&gt;vkGetPhysicalDeviceFormatProperties&lt;/a&gt;, &lt;a href=&quot;#vkGetPhysicalDeviceImageFormatProperties&quot;&gt;vkGetPhysicalDeviceImageFormatProperties&lt;/a&gt;, &lt;a href=&quot;#vkGetPhysicalDeviceMemoryProperties&quot;&gt;vkGetPhysicalDeviceMemoryProperties&lt;/a&gt;, &lt;a href=&quot;#vkGetPhysicalDeviceProperties&quot;&gt;vkGetPhysicalDeviceProperties&lt;/a&gt;, &lt;a href=&quot;#vkGetPhysicalDeviceQueueFamilyProperties&quot;&gt;vkGetPhysicalDeviceQueueFamilyProperties&lt;/a&gt;, &lt;a href=&quot;#vkGetPhysicalDeviceSparseImageFormatProperties&quot;&gt;vkGetPhysicalDeviceSparseImageFormatProperties&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#vkCreateDevice&quot;&gt;vkCreateDevice&lt;/a&gt; , &lt;a href=&quot;#vkEnumerateDeviceExtensionProperties&quot;&gt;vkEnumerateDeviceExtensionProperties&lt;/a&gt; , &lt;a href=&quot;#vkEnumerateDeviceLayerProperties&quot;&gt;vkEnumerateDeviceLayerProperties&lt;/a&gt; , &lt;a href=&quot;#vkEnumeratePhysicalDevices&quot;&gt;vkEnumeratePhysicalDevices&lt;/a&gt; , &lt;a href=&quot;#vkGetPhysicalDeviceFeatures&quot;&gt;vkGetPhysicalDeviceFeatures&lt;/a&gt; , &lt;a href=&quot;#vkGetPhysicalDeviceFormatProperties&quot;&gt;vkGetPhysicalDeviceFormatProperties&lt;/a&gt; , &lt;a href=&quot;#vkGetPhysicalDeviceImageFormatProperties&quot;&gt;vkGetPhysicalDeviceImageFormatProperties&lt;/a&gt; , &lt;a href=&quot;#vkGetPhysicalDeviceMemoryProperties&quot;&gt;vkGetPhysicalDeviceMemoryProperties&lt;/a&gt; , &lt;a href=&quot;#vkGetPhysicalDeviceProperties&quot;&gt;vkGetPhysicalDeviceProperties&lt;/a&gt; , &lt;a href=&quot;#vkGetPhysicalDeviceQueueFamilyProperties&quot;&gt;vkGetPhysicalDeviceQueueFamilyProperties&lt;/a&gt; , &lt;a href=&quot;#vkGetPhysicalDeviceSparseImageFormatProperties&quot;&gt;vkGetPhysicalDeviceSparseImageFormatProperties&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5095d2b3bf128cb22d0b36f38db86a287cd0e5e5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#vkCreateFence&quot;&gt;vkCreateFence&lt;/a&gt;, &lt;a href=&quot;#vkDestroyFence&quot;&gt;vkDestroyFence&lt;/a&gt;, &lt;a href=&quot;#vkGetFenceStatus&quot;&gt;vkGetFenceStatus&lt;/a&gt;, &lt;a href=&quot;#vkQueueBindSparse&quot;&gt;vkQueueBindSparse&lt;/a&gt;, &lt;a href=&quot;#vkQueueSubmit&quot;&gt;vkQueueSubmit&lt;/a&gt;, &lt;a href=&quot;#vkResetFences&quot;&gt;vkResetFences&lt;/a&gt;, &lt;a href=&quot;#vkWaitForFences&quot;&gt;vkWaitForFences&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#vkCreateFence&quot;&gt;vkCreateFence&lt;/a&gt; , &lt;a href=&quot;#vkDestroyFence&quot;&gt;vkDestroyFence&lt;/a&gt; , &lt;a href=&quot;#vkGetFenceStatus&quot;&gt;vkGetFenceStatus&lt;/a&gt; , &lt;a href=&quot;#vkQueueBindSparse&quot;&gt;vkQueueBindSparse&lt;/a&gt; , &lt;a href=&quot;#vkQueueSubmit&quot;&gt;vkQueueSubmit&lt;/a&gt; , &lt;a href=&quot;#vkResetFences&quot;&gt;vkResetFences&lt;/a&gt; , &lt;a href=&quot;#vkWaitForFences&quot;&gt;vkWaitForFences&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="050faefb7903ad186a0fee1e8b0ffd76a536a6bc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#vkCreateInstance&quot;&gt;vkCreateInstance&lt;/a&gt;, &lt;a href=&quot;#vkDestroyInstance&quot;&gt;vkDestroyInstance&lt;/a&gt;, &lt;a href=&quot;#vkEnumeratePhysicalDevices&quot;&gt;vkEnumeratePhysicalDevices&lt;/a&gt;, &lt;a href=&quot;#vkGetInstanceProcAddr&quot;&gt;vkGetInstanceProcAddr&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#vkCreateInstance&quot;&gt;vkCreateInstance&lt;/a&gt; , &lt;a href=&quot;#vkDestroyInstance&quot;&gt;vkDestroyInstance&lt;/a&gt; , &lt;a href=&quot;#vkEnumeratePhysicalDevices&quot;&gt;vkEnumeratePhysicalDevices&lt;/a&gt; , &lt;a href=&quot;#vkGetInstanceProcAddr&quot;&gt;vkGetInstanceProcAddr&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4317cd262f792b5907eef3f543bebab7551f93e5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#vkCreateInstance&quot;&gt;vkCreateInstance&lt;/a&gt;, &lt;a href=&quot;#vkGetPhysicalDeviceProperties&quot;&gt;vkGetPhysicalDeviceProperties&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#vkCreateInstance&quot;&gt;vkCreateInstance&lt;/a&gt; , &lt;a href=&quot;#vkGetPhysicalDeviceProperties&quot;&gt;vkGetPhysicalDeviceProperties&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3c4fff0f3ef4b025bf766dc53f7914230b61d024" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#vkCreatePipelineCache&quot;&gt;vkCreatePipelineCache&lt;/a&gt;, &lt;a href=&quot;#vkGetPipelineCacheData&quot;&gt;vkGetPipelineCacheData&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#vkCreatePipelineCache&quot;&gt;vkCreatePipelineCache&lt;/a&gt; , &lt;a href=&quot;#vkGetPipelineCacheData&quot;&gt;vkGetPipelineCacheData&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ac624fbb7f1cac4a9bd2ebc64eb7c424692ae87d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#vkEnumerateDeviceExtensionProperties&quot;&gt;vkEnumerateDeviceExtensionProperties&lt;/a&gt;, &lt;a href=&quot;#vkEnumerateInstanceExtensionProperties&quot;&gt;vkEnumerateInstanceExtensionProperties&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#vkEnumerateDeviceExtensionProperties&quot;&gt;vkEnumerateDeviceExtensionProperties&lt;/a&gt; , &lt;a href=&quot;#vkEnumerateInstanceExtensionProperties&quot;&gt;vkEnumerateInstanceExtensionProperties&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a305085cef64dc57d470a499d00d3bcdeef40e6b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#vkEnumerateDeviceLayerProperties&quot;&gt;vkEnumerateDeviceLayerProperties&lt;/a&gt;, &lt;a href=&quot;#vkEnumerateInstanceLayerProperties&quot;&gt;vkEnumerateInstanceLayerProperties&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#vkEnumerateDeviceLayerProperties&quot;&gt;vkEnumerateDeviceLayerProperties&lt;/a&gt; , &lt;a href=&quot;#vkEnumerateInstanceLayerProperties&quot;&gt;vkEnumerateInstanceLayerProperties&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6d23230eb5bb88c60fb021698b76eb882f44cda4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#vkGetDeviceProcAddr&quot;&gt;vkGetDeviceProcAddr&lt;/a&gt;, &lt;a href=&quot;#vkGetInstanceProcAddr&quot;&gt;vkGetInstanceProcAddr&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#vkGetDeviceProcAddr&quot;&gt;vkGetDeviceProcAddr&lt;/a&gt; , &lt;a href=&quot;#vkGetInstanceProcAddr&quot;&gt;vkGetInstanceProcAddr&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c02fad269f290248b27f4b728b9b1bf82d4f90cf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#vkGetDeviceQueue&quot;&gt;vkGetDeviceQueue&lt;/a&gt;, &lt;a href=&quot;#vkQueueBindSparse&quot;&gt;vkQueueBindSparse&lt;/a&gt;, &lt;a href=&quot;#vkQueueSubmit&quot;&gt;vkQueueSubmit&lt;/a&gt;, &lt;a href=&quot;#vkQueueWaitIdle&quot;&gt;vkQueueWaitIdle&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#vkGetDeviceQueue&quot;&gt;vkGetDeviceQueue&lt;/a&gt; , &lt;a href=&quot;#vkQueueBindSparse&quot;&gt;vkQueueBindSparse&lt;/a&gt; , &lt;a href=&quot;#vkQueueSubmit&quot;&gt;vkQueueSubmit&lt;/a&gt; , &lt;a href=&quot;#vkQueueWaitIdle&quot;&gt;vkQueueWaitIdle&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2f199afc3a181b8082ed27ac96af08340104acdf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#vkGetImageSubresourceLayout&quot;&gt;vkGetImageSubresourceLayout&lt;/a&gt; is invariant for the lifetime of a single image.</source>
          <target state="translated">&lt;a href=&quot;#vkGetImageSubresourceLayout&quot;&gt;vkGetImageSubresourceLayout&lt;/a&gt; 은 단일 이미지의 수명 동안 변하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="9d38b6035ef8d3d0295441b42969458cf2899559" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#vkGetPhysicalDeviceFormatProperties&quot;&gt;vkGetPhysicalDeviceFormatProperties&lt;/a&gt; and &lt;a href=&quot;#vkGetPhysicalDeviceImageFormatProperties&quot;&gt;vkGetPhysicalDeviceImageFormatProperties&lt;/a&gt;&lt;strong&gt;can&lt;/strong&gt; be used to check for additional supported properties of individual formats.</source>
          <target state="translated">&lt;a href=&quot;#vkGetPhysicalDeviceFormatProperties&quot;&gt;vkGetPhysicalDeviceFormatProperties&lt;/a&gt; 및 &lt;a href=&quot;#vkGetPhysicalDeviceImageFormatProperties&quot;&gt;vkGetPhysicalDeviceImageFormatProperties &lt;/a&gt;&lt;strong&gt;를&lt;/strong&gt; 사용하여 개별 형식의 추가 지원 속성을 확인할 &lt;strong&gt;수&lt;/strong&gt; 있습니다.</target>
        </trans-unit>
        <trans-unit id="74b89664886450e137b4f8341344a5609db1433b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;A&lt;/code&gt; is a &lt;a href=&quot;#VkComponentSwizzle&quot;&gt;VkComponentSwizzle&lt;/a&gt; specifying the component value placed in the A component of the output vector.</source>
          <target state="translated">&lt;code&gt;A&lt;/code&gt; 는 출력 벡터의 A 구성 요소에 배치 된 구성 요소 값을 지정 하는 &lt;a href=&quot;#VkComponentSwizzle&quot;&gt;VkComponentSwizzle&lt;/a&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="13f2a650ae11d7815a4b0563efc8183c6887ece1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_ACCESS_COLOR_ATTACHMENT_READ_BIT&lt;/code&gt; specifies read access to a &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#renderpass&quot;&gt;color attachment&lt;/a&gt;, such as via &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#framebuffer-blending&quot;&gt;blending&lt;/a&gt;, &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#framebuffer-logicop&quot;&gt;logic operations&lt;/a&gt;, or via certain &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#renderpass-load-store-ops&quot;&gt;subpass load operations&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;VK_ACCESS_COLOR_ATTACHMENT_READ_BIT&lt;/code&gt; 는 &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#framebuffer-blending&quot;&gt;블렌딩&lt;/a&gt; , &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#framebuffer-logicop&quot;&gt;논리 연산&lt;/a&gt; 또는 특정 &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#renderpass-load-store-ops&quot;&gt;서브 패스로드 연산&lt;/a&gt; 과 같은 &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#renderpass&quot;&gt;색상 첨부 파일에&lt;/a&gt; 대한 읽기 액세스를 지정 합니다 .</target>
        </trans-unit>
        <trans-unit id="1fe45054b9e32275b376906a22f013567027ba9a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_ACCESS_COLOR_ATTACHMENT_WRITE_BIT&lt;/code&gt; specifies write access to a &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#renderpass&quot;&gt;color or resolve attachment&lt;/a&gt; during a &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#renderpass&quot;&gt;render pass&lt;/a&gt; or via certain &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#renderpass-load-store-ops&quot;&gt;subpass load and store operations&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;VK_ACCESS_COLOR_ATTACHMENT_WRITE_BIT&lt;/code&gt; 는 &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#renderpass&quot;&gt;렌더링 패스&lt;/a&gt; 동안 또는 특정 &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#renderpass-load-store-ops&quot;&gt;서브 패스로드 및 저장 작업을&lt;/a&gt; 통해 &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#renderpass&quot;&gt;색상에&lt;/a&gt; 대한 쓰기 액세스 또는 첨부 파일 확인 을 지정 합니다 .</target>
        </trans-unit>
        <trans-unit id="eacfa263490a697a1b5b8fb5c21b95d261303987" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_ACCESS_DEPTH_STENCIL_ATTACHMENT_READ_BIT&lt;/code&gt; specifies read access to a &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#renderpass&quot;&gt;depth/stencil attachment&lt;/a&gt;, via &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#fragops-ds-state&quot;&gt;depth or stencil operations&lt;/a&gt; or via certain &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#renderpass-load-store-ops&quot;&gt;subpass load operations&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;VK_ACCESS_DEPTH_STENCIL_ATTACHMENT_READ_BIT&lt;/code&gt; 는 &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#fragops-ds-state&quot;&gt;깊이 또는 스텐실 작업&lt;/a&gt; 또는 특정 &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#renderpass-load-store-ops&quot;&gt;서브 패스로드 작업을&lt;/a&gt; 통해 &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#renderpass&quot;&gt;깊이 / 스텐실 부착물에&lt;/a&gt; 대한 읽기 액세스를 지정 합니다 .</target>
        </trans-unit>
        <trans-unit id="f8e53788d5b1fa054e16966ca0eb0aa12395f16b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_ACCESS_DEPTH_STENCIL_ATTACHMENT_WRITE_BIT&lt;/code&gt; specifies write access to a &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#renderpass&quot;&gt;depth/stencil attachment&lt;/a&gt;, via &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#fragops-ds-state&quot;&gt;depth or stencil operations&lt;/a&gt; or via certain &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#renderpass-load-store-ops&quot;&gt;subpass load and store operations&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;VK_ACCESS_DEPTH_STENCIL_ATTACHMENT_WRITE_BIT&lt;/code&gt; 는 &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#fragops-ds-state&quot;&gt;깊이 또는 스텐실 작업&lt;/a&gt; 또는 특정 &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#renderpass-load-store-ops&quot;&gt;서브 패스로드 및 저장 작업을&lt;/a&gt; 통해 &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#renderpass&quot;&gt;깊이 / 스텐실 부착물에&lt;/a&gt; 대한 쓰기 액세스를 지정 합니다 .</target>
        </trans-unit>
        <trans-unit id="972acc01a1b58772ab7593ffa7b08c9b045c02ef" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_ACCESS_HOST_READ_BIT&lt;/code&gt; specifies read access by a host operation. Accesses of this type are not performed through a resource, but directly on memory.</source>
          <target state="translated">&lt;code&gt;VK_ACCESS_HOST_READ_BIT&lt;/code&gt; 는 호스트 작업에 의한 읽기 액세스를 지정합니다. 이 유형의 액세스는 리소스를 통해 수행되지 않고 메모리에서 직접 수행됩니다.</target>
        </trans-unit>
        <trans-unit id="98ef62423e23f7e84bc163c4bf40ec1d73af87dc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_ACCESS_HOST_WRITE_BIT&lt;/code&gt; specifies write access by a host operation. Accesses of this type are not performed through a resource, but directly on memory.</source>
          <target state="translated">&lt;code&gt;VK_ACCESS_HOST_WRITE_BIT&lt;/code&gt; 는 호스트 작업에 의한 쓰기 액세스를 지정합니다. 이 유형의 액세스는 리소스를 통해 수행되지 않고 메모리에서 직접 수행됩니다.</target>
        </trans-unit>
        <trans-unit id="999443ab9d3e87999bed290f2842952082d8742f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_ACCESS_INDEX_READ_BIT&lt;/code&gt; specifies read access to an index buffer as part of an indexed drawing command, bound by &lt;a href=&quot;#vkCmdBindIndexBuffer&quot;&gt;vkCmdBindIndexBuffer&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;VK_ACCESS_INDEX_READ_BIT&lt;/code&gt; 는 &lt;a href=&quot;#vkCmdBindIndexBuffer&quot;&gt;vkCmdBindIndexBuffer&lt;/a&gt; 에 의해 바인딩 된 인덱스 드로잉 명령의 일부로 인덱스 버퍼에 대한 읽기 액세스를 지정합니다 .</target>
        </trans-unit>
        <trans-unit id="272a89ab4b8f2e68e239ddb8a18dd0704b13dce9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_ACCESS_INDIRECT_COMMAND_READ_BIT&lt;/code&gt; specifies read access to an indirect command structure read as part of an indirect drawing or dispatch command.</source>
          <target state="translated">&lt;code&gt;VK_ACCESS_INDIRECT_COMMAND_READ_BIT&lt;/code&gt; 는 간접 드로잉 또는 디스패치 명령의 일부로 읽은 간접 명령 구조에 대한 읽기 액세스를 지정합니다.</target>
        </trans-unit>
        <trans-unit id="0c83d6501a04a050c6b173f277146b96f9030a89" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_ACCESS_INPUT_ATTACHMENT_READ_BIT&lt;/code&gt; specifies read access to an &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#renderpass&quot;&gt;input attachment&lt;/a&gt; within a renderpass during fragment shading.</source>
          <target state="translated">&lt;code&gt;VK_ACCESS_INPUT_ATTACHMENT_READ_BIT&lt;/code&gt; 는 프래그먼트 쉐이딩 동안 렌더 패스 내에서 &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#renderpass&quot;&gt;입력 첨부 파일&lt;/a&gt; 에 대한 읽기 액세스를 지정합니다 .</target>
        </trans-unit>
        <trans-unit id="a8cdc2a7127ccb20f95d1b527f4191d82a2d7158" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_ACCESS_MEMORY_READ_BIT&lt;/code&gt; specifies read access via non-specific entities. These entities include the Vulkan device and host, but &lt;strong&gt;may&lt;/strong&gt; also include entities external to the Vulkan device or otherwise not part of the core Vulkan pipeline. When included in a destination access mask, makes all available writes visible to all future read accesses on entities known to the Vulkan device.</source>
          <target state="translated">&lt;code&gt;VK_ACCESS_MEMORY_READ_BIT&lt;/code&gt; 는 비 특정 엔티티를 통한 읽기 액세스를 지정합니다. 이러한 엔티티에는 Vulkan 디바이스 및 호스트 &lt;strong&gt;가&lt;/strong&gt; 포함 되지만 Vulkan 디바이스 외부에 있거나 코어 Vulkan 파이프 라인의 일부가 아닌 엔티티도 포함될 &lt;strong&gt;수&lt;/strong&gt; 있습니다. 대상 액세스 마스크에 포함되면 사용 가능한 모든 쓰기가 Vulkan 장치에 알려진 엔터티에 대한 모든 향후 읽기 액세스에 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="7c27d726fcc7b0d0f0db18673f9b0426d2c8dfae" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_ACCESS_MEMORY_WRITE_BIT&lt;/code&gt; specifies write access via non-specific entities. These entities include the Vulkan device and host, but &lt;strong&gt;may&lt;/strong&gt; also include entities external to the Vulkan device or otherwise not part of the core Vulkan pipeline. When included in a source access mask, all writes that are performed by entities known to the Vulkan device are made available. When included in a destination access mask, makes all available writes visible to all future write accesses on entities known to the Vulkan device.</source>
          <target state="translated">&lt;code&gt;VK_ACCESS_MEMORY_WRITE_BIT&lt;/code&gt; 는 비 특정 엔티티를 통한 쓰기 액세스를 지정합니다. 이러한 엔티티에는 Vulkan 디바이스 및 호스트 &lt;strong&gt;가&lt;/strong&gt; 포함 되지만 Vulkan 디바이스 외부에 있거나 코어 Vulkan 파이프 라인의 일부가 아닌 엔티티도 포함될 &lt;strong&gt;수&lt;/strong&gt; 있습니다. 소스 액세스 마스크에 포함되면 Vulkan 장치에 알려진 엔터티가 수행하는 모든 쓰기를 사용할 수 있습니다. 대상 액세스 마스크에 포함되면 사용 가능한 모든 쓰기가 Vulkan 장치에 알려진 엔터티에 대한 모든 향후 쓰기 액세스에 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="87d74a5b27d3fa2fcc44ee8fc3e4510a48e76c54" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_ACCESS_SHADER_READ_BIT&lt;/code&gt; specifies read access to a &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#descriptorsets-storagebuffer&quot;&gt;storage buffer&lt;/a&gt;, &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#descriptorsets-uniformtexelbuffer&quot;&gt;uniform texel buffer&lt;/a&gt;, &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#descriptorsets-storagetexelbuffer&quot;&gt;storage texel buffer&lt;/a&gt;, &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#descriptorsets-sampledimage&quot;&gt;sampled image&lt;/a&gt;, or &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#descriptorsets-storageimage&quot;&gt;storage image&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;VK_ACCESS_SHADER_READ_BIT&lt;/code&gt; 는 &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#descriptorsets-storagebuffer&quot;&gt;스토리지 버퍼&lt;/a&gt; , &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#descriptorsets-uniformtexelbuffer&quot;&gt;균일 한 텍셀 버퍼&lt;/a&gt; , &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#descriptorsets-storagetexelbuffer&quot;&gt;스토리지 텍셀 버퍼&lt;/a&gt; , &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#descriptorsets-sampledimage&quot;&gt;샘플링 된 이미지&lt;/a&gt; 또는 &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#descriptorsets-storageimage&quot;&gt;스토리지 이미지에&lt;/a&gt; 대한 읽기 액세스를 지정합니다 .</target>
        </trans-unit>
        <trans-unit id="4904ba2d876baa7af328cc7275ad097942455241" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_ACCESS_SHADER_WRITE_BIT&lt;/code&gt; specifies write access to a &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#descriptorsets-storagebuffer&quot;&gt;storage buffer&lt;/a&gt;, &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#descriptorsets-storagetexelbuffer&quot;&gt;storage texel buffer&lt;/a&gt;, or &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#descriptorsets-storageimage&quot;&gt;storage image&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;VK_ACCESS_SHADER_WRITE_BIT&lt;/code&gt; 는 &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#descriptorsets-storagebuffer&quot;&gt;스토리지 버퍼&lt;/a&gt; , &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#descriptorsets-storagetexelbuffer&quot;&gt;스토리지 텍셀 버퍼&lt;/a&gt; 또는 &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#descriptorsets-storageimage&quot;&gt;스토리지 이미지에&lt;/a&gt; 대한 쓰기 액세스를 지정합니다 .</target>
        </trans-unit>
        <trans-unit id="2f1ba6d6313a05d59d4bf3086664e6334643a3a5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_ACCESS_TRANSFER_READ_BIT&lt;/code&gt; specifies read access to an image or buffer in a &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#copies&quot;&gt;copy&lt;/a&gt; operation.</source>
          <target state="translated">&lt;code&gt;VK_ACCESS_TRANSFER_READ_BIT&lt;/code&gt; 는 &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#copies&quot;&gt;복사&lt;/a&gt; 작업 에서 이미지 또는 버퍼에 대한 읽기 액세스를 지정 합니다.</target>
        </trans-unit>
        <trans-unit id="6e1df1e59a82a639249f21dbce80ecced820c137" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_ACCESS_TRANSFER_WRITE_BIT&lt;/code&gt; specifies write access to an image or buffer in a &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#clears&quot;&gt;clear&lt;/a&gt; or &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#copies&quot;&gt;copy&lt;/a&gt; operation.</source>
          <target state="translated">&lt;code&gt;VK_ACCESS_TRANSFER_WRITE_BIT&lt;/code&gt; 는 &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#clears&quot;&gt;지우기&lt;/a&gt; 또는 &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#copies&quot;&gt;복사&lt;/a&gt; 작업 에서 이미지 또는 버퍼에 대한 쓰기 액세스를 지정 합니다.</target>
        </trans-unit>
        <trans-unit id="df1eb40c32586134368566851ce1af94365d60d0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_ACCESS_UNIFORM_READ_BIT&lt;/code&gt; specifies read access to a &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#descriptorsets-uniformbuffer&quot;&gt;uniform buffer&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;VK_ACCESS_UNIFORM_READ_BIT&lt;/code&gt; 는 &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#descriptorsets-uniformbuffer&quot;&gt;균일 버퍼에&lt;/a&gt; 대한 읽기 액세스를 지정합니다 .</target>
        </trans-unit>
        <trans-unit id="07fcc98ad10c3989e438be75fc6542f0c475f9ed" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_ACCESS_VERTEX_ATTRIBUTE_READ_BIT&lt;/code&gt; specifies read access to a vertex buffer as part of a drawing command, bound by &lt;a href=&quot;#vkCmdBindVertexBuffers&quot;&gt;vkCmdBindVertexBuffers&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;VK_ACCESS_VERTEX_ATTRIBUTE_READ_BIT&lt;/code&gt; 는 &lt;a href=&quot;#vkCmdBindVertexBuffers&quot;&gt;vkCmdBindVertexBuffers&lt;/a&gt; 에 의해 바인딩 된 그리기 명령의 일부로 정점 버퍼에 대한 읽기 액세스를 지정합니다 .</target>
        </trans-unit>
        <trans-unit id="eaafaf18d15d3096a2184fec690e02437def3817" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_API_VERSION&lt;/code&gt; is now commented out of vulkan.h and &lt;strong&gt;cannot&lt;/strong&gt; be used.</source>
          <target state="translated">&lt;code&gt;VK_API_VERSION&lt;/code&gt; 은 vulkan.h에서 주석 처리되어 &lt;strong&gt;사용할 수 없습니다&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="599ed18e62878e1ed0fd765bcdd33b7a95b4836c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_API_VERSION_1_0&lt;/code&gt; returns the API version number for Vulkan 1.0. The patch version number in this macro will always be zero. The supported patch version for a physical device &lt;strong&gt;can&lt;/strong&gt; be queried with &lt;a href=&quot;#vkGetPhysicalDeviceProperties&quot;&gt;vkGetPhysicalDeviceProperties&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;VK_API_VERSION_1_0&lt;/code&gt; 은 Vulkan 1.0의 API 버전 번호를 반환합니다. 이 매크로의 패치 버전 번호는 항상 0입니다. 물리적 장치에 대해 지원되는 패치 버전은 &lt;a href=&quot;#vkGetPhysicalDeviceProperties&quot;&gt;vkGetPhysicalDeviceProperties&lt;/a&gt; 로 쿼리 &lt;strong&gt;할 수&lt;/strong&gt; 있습니다 .</target>
        </trans-unit>
        <trans-unit id="29a11de0a4b52c8e685e707967a917572bd5a39f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_ATTACHMENT_DESCRIPTION_MAY_ALIAS_BIT&lt;/code&gt; specifies that the attachment aliases the same device memory as other attachments.</source>
          <target state="translated">&lt;code&gt;VK_ATTACHMENT_DESCRIPTION_MAY_ALIAS_BIT&lt;/code&gt; 는 부착물이 다른 부착물과 동일한 장치 메모리를 별칭으로 지정합니다.</target>
        </trans-unit>
        <trans-unit id="9c022081c2ae1925be0ee4b6cd6a515952130940" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_ATTACHMENT_LOAD_OP_CLEAR&lt;/code&gt; specifies that the contents within the render area will be cleared to a uniform value, which is specified when a render pass instance is begun. For attachments with a depth/stencil format, this uses the access type &lt;code&gt;VK_ACCESS_DEPTH_STENCIL_ATTACHMENT_WRITE_BIT&lt;/code&gt;. For attachments with a color format, this uses the access type &lt;code&gt;VK_ACCESS_COLOR_ATTACHMENT_WRITE_BIT&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;VK_ATTACHMENT_LOAD_OP_CLEAR&lt;/code&gt; 는 렌더 패스 인스턴스가 시작될 때 지정되는 렌더 영역 내의 내용이 균일 한 값으로 지워지도록 지정합니다. 깊이 / 스텐실 형식의 첨부 파일에는 &lt;code&gt;VK_ACCESS_DEPTH_STENCIL_ATTACHMENT_WRITE_BIT&lt;/code&gt; 액세스 유형을 사용합니다 . 색상 형식의 첨부 파일에는 &lt;code&gt;VK_ACCESS_COLOR_ATTACHMENT_WRITE_BIT&lt;/code&gt; 액세스 유형을 사용합니다 .</target>
        </trans-unit>
        <trans-unit id="2341901383272927510eb49e61e055ba79df92ac" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_ATTACHMENT_LOAD_OP_DONT_CARE&lt;/code&gt; specifies that the previous contents within the area need not be preserved; the contents of the attachment will be undefined inside the render area. For attachments with a depth/stencil format, this uses the access type &lt;code&gt;VK_ACCESS_DEPTH_STENCIL_ATTACHMENT_WRITE_BIT&lt;/code&gt;. For attachments with a color format, this uses the access type &lt;code&gt;VK_ACCESS_COLOR_ATTACHMENT_WRITE_BIT&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;VK_ATTACHMENT_LOAD_OP_DONT_CARE&lt;/code&gt; 는 영역 내의 이전 내용을 보존 할 필요가 없도록 지정합니다. 첨부 내용은 렌더링 영역 내에서 정의되지 않습니다. 깊이 / 스텐실 형식의 첨부 파일에는 &lt;code&gt;VK_ACCESS_DEPTH_STENCIL_ATTACHMENT_WRITE_BIT&lt;/code&gt; 액세스 유형을 사용합니다 . 색상 형식의 첨부 파일에는 &lt;code&gt;VK_ACCESS_COLOR_ATTACHMENT_WRITE_BIT&lt;/code&gt; 액세스 유형을 사용합니다 .</target>
        </trans-unit>
        <trans-unit id="d4c0f3833539d781c66f94003e4610d406886d8e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_ATTACHMENT_LOAD_OP_LOAD&lt;/code&gt; specifies that the previous contents of the image within the render area will be preserved. For attachments with a depth/stencil format, this uses the access type &lt;code&gt;VK_ACCESS_DEPTH_STENCIL_ATTACHMENT_READ_BIT&lt;/code&gt;. For attachments with a color format, this uses the access type &lt;code&gt;VK_ACCESS_COLOR_ATTACHMENT_READ_BIT&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;VK_ATTACHMENT_LOAD_OP_LOAD&lt;/code&gt; 는 렌더링 영역 내에서 이미지의 이전 내용이 유지되도록 지정합니다. 깊이 / 스텐실 형식의 첨부 파일에는 &lt;code&gt;VK_ACCESS_DEPTH_STENCIL_ATTACHMENT_READ_BIT&lt;/code&gt; 액세스 유형을 사용합니다 . 색상 형식의 첨부 파일에는 &lt;code&gt;VK_ACCESS_COLOR_ATTACHMENT_READ_BIT&lt;/code&gt; 액세스 유형을 사용합니다 .</target>
        </trans-unit>
        <trans-unit id="165d1cfa69d0f429def8f3535b91200736b9abc2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_ATTACHMENT_STORE_OP_DONT_CARE&lt;/code&gt; specifies the contents within the render area are not needed after rendering, and &lt;strong&gt;may&lt;/strong&gt; be discarded; the contents of the attachment will be undefined inside the render area. For attachments with a depth/stencil format, this uses the access type &lt;code&gt;VK_ACCESS_DEPTH_STENCIL_ATTACHMENT_WRITE_BIT&lt;/code&gt;. For attachments with a color format, this uses the access type &lt;code&gt;VK_ACCESS_COLOR_ATTACHMENT_WRITE_BIT&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;VK_ATTACHMENT_STORE_OP_DONT_CARE&lt;/code&gt; 는 렌더 영역 내의 내용이 렌더링 후에 필요하지 않고 버려 &lt;strong&gt;질 수&lt;/strong&gt; 있음을 지정합니다. 첨부 내용은 렌더링 영역 내에서 정의되지 않습니다. 깊이 / 스텐실 형식의 첨부 파일에는 &lt;code&gt;VK_ACCESS_DEPTH_STENCIL_ATTACHMENT_WRITE_BIT&lt;/code&gt; 액세스 유형을 사용합니다 . 색상 형식의 첨부 파일에는 &lt;code&gt;VK_ACCESS_COLOR_ATTACHMENT_WRITE_BIT&lt;/code&gt; 액세스 유형을 사용합니다 .</target>
        </trans-unit>
        <trans-unit id="308ce746ac227ef92c5dd97213b2e8b3d3db89f1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_ATTACHMENT_STORE_OP_STORE&lt;/code&gt; specifies the contents generated during the render pass and within the render area are written to memory. For attachments with a depth/stencil format, this uses the access type &lt;code&gt;VK_ACCESS_DEPTH_STENCIL_ATTACHMENT_WRITE_BIT&lt;/code&gt;. For attachments with a color format, this uses the access type &lt;code&gt;VK_ACCESS_COLOR_ATTACHMENT_WRITE_BIT&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;VK_ATTACHMENT_STORE_OP_STORE&lt;/code&gt; 는 렌더 패스 동안 생성되고 렌더링 영역 내에서 메모리에 기록되는 내용을 지정합니다. 깊이 / 스텐실 형식의 첨부 파일에는 &lt;code&gt;VK_ACCESS_DEPTH_STENCIL_ATTACHMENT_WRITE_BIT&lt;/code&gt; 액세스 유형을 사용합니다 . 색상 형식의 첨부 파일에는 &lt;code&gt;VK_ACCESS_COLOR_ATTACHMENT_WRITE_BIT&lt;/code&gt; 액세스 유형을 사용합니다 .</target>
        </trans-unit>
        <trans-unit id="fdbf9420e62957185a8fd218255a6d07b9e9b12f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_BORDER_COLOR_FLOAT_OPAQUE_BLACK&lt;/code&gt; specifies an opaque, floating-point format, black color.</source>
          <target state="translated">&lt;code&gt;VK_BORDER_COLOR_FLOAT_OPAQUE_BLACK&lt;/code&gt; 은 불투명 한 부동 소수점 형식 인 검은 색을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="f337ef472fe4e2e75eb12e23142558d7d4e34650" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_BORDER_COLOR_FLOAT_OPAQUE_WHITE&lt;/code&gt; specifies an opaque, floating-point format, white color.</source>
          <target state="translated">&lt;code&gt;VK_BORDER_COLOR_FLOAT_OPAQUE_WHITE&lt;/code&gt; 는 불투명 한 부동 소수점 형식의 흰색을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="3cef6d8712a6c4d867dde23374feb1940a592f1b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_BORDER_COLOR_FLOAT_TRANSPARENT_BLACK&lt;/code&gt; specifies a transparent, floating-point format, black color.</source>
          <target state="translated">&lt;code&gt;VK_BORDER_COLOR_FLOAT_TRANSPARENT_BLACK&lt;/code&gt; 은 투명한 부동 소수점 형식 인 검은 색을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="2b1deb0b05c632921e5888b29998c3463578dc22" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_BORDER_COLOR_INT_OPAQUE_BLACK&lt;/code&gt; specifies an opaque, integer format, black color.</source>
          <target state="translated">&lt;code&gt;VK_BORDER_COLOR_INT_OPAQUE_BLACK&lt;/code&gt; 은 불투명하고 정수 형식 인 검은 색을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="f69a76b99e43005361d6182730c64041f3270e42" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_BORDER_COLOR_INT_OPAQUE_WHITE&lt;/code&gt; specifies an opaque, integer format, white color.</source>
          <target state="translated">&lt;code&gt;VK_BORDER_COLOR_INT_OPAQUE_WHITE&lt;/code&gt; 는 불투명 한 정수 형식의 흰색을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="969453d958c080389f8e6a6973b8b145fb8ecab5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_BORDER_COLOR_INT_TRANSPARENT_BLACK&lt;/code&gt; specifies a transparent, integer format, black color.</source>
          <target state="translated">&lt;code&gt;VK_BORDER_COLOR_INT_TRANSPARENT_BLACK&lt;/code&gt; 은 투명한 정수 형식의 검은 색을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="ef3a6c65075be144496bafa05f44551083106874" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_BUFFER_CREATE_SPARSE_ALIASED_BIT&lt;/code&gt; specifies that the buffer will be backed using sparse memory binding with memory ranges that might also simultaneously be backing another buffer (or another portion of the same buffer). Buffers created with this flag &lt;strong&gt;must&lt;/strong&gt; also be created with the &lt;code&gt;VK_BUFFER_CREATE_SPARSE_BINDING_BIT&lt;/code&gt; flag.</source>
          <target state="translated">&lt;code&gt;VK_BUFFER_CREATE_SPARSE_ALIASED_BIT&lt;/code&gt; 는 다른 버퍼 (또는 동일한 버퍼의 다른 부분)를 동시에 백업 할 수있는 메모리 범위와 스파 스 메모리 바인딩을 사용하여 버퍼가 백업 되도록 지정합니다. 이 플래그로 작성된 버퍼 도 &lt;code&gt;VK_BUFFER_CREATE_SPARSE_BINDING_BIT&lt;/code&gt; 플래그 로 작성 &lt;strong&gt;해야합니다&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="a4b2faa8181100f2f090cf3a57e21b39f15abf08" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_BUFFER_CREATE_SPARSE_BINDING_BIT&lt;/code&gt; specifies that the buffer will be backed using sparse memory binding.</source>
          <target state="translated">&lt;code&gt;VK_BUFFER_CREATE_SPARSE_BINDING_BIT&lt;/code&gt; 는 희소 메모리 바인딩을 사용하여 버퍼가 백업 되도록 지정합니다.</target>
        </trans-unit>
        <trans-unit id="53a8efb2a901439a34c9656ba829945895e361e8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_BUFFER_CREATE_SPARSE_RESIDENCY_BIT&lt;/code&gt; specifies that the buffer &lt;strong&gt;can&lt;/strong&gt; be partially backed using sparse memory binding. Buffers created with this flag &lt;strong&gt;must&lt;/strong&gt; also be created with the &lt;code&gt;VK_BUFFER_CREATE_SPARSE_BINDING_BIT&lt;/code&gt; flag.</source>
          <target state="translated">&lt;code&gt;VK_BUFFER_CREATE_SPARSE_RESIDENCY_BIT&lt;/code&gt; 는 스파 스 메모리 바인딩을 사용하여 버퍼 &lt;strong&gt;를&lt;/strong&gt; 부분적으로 백업 &lt;strong&gt;할 수&lt;/strong&gt; 있도록 지정합니다 . 이 플래그로 작성된 버퍼 도 &lt;code&gt;VK_BUFFER_CREATE_SPARSE_BINDING_BIT&lt;/code&gt; 플래그 로 작성 &lt;strong&gt;해야합니다&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="41bd8929929310ae3c73a07b4480afd7bd6b1a34" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_BUFFER_USAGE_INDEX_BUFFER_BIT&lt;/code&gt; specifies that the buffer is suitable for passing as the &lt;code&gt;buffer&lt;/code&gt; parameter to &lt;code&gt;vkCmdBindIndexBuffer&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;VK_BUFFER_USAGE_INDEX_BUFFER_BIT&lt;/code&gt; 는 버퍼가 &lt;code&gt;buffer&lt;/code&gt; 매개 변수로 &lt;code&gt;vkCmdBindIndexBuffer&lt;/code&gt; 에 전달하기에 적합 함을 지정합니다 .</target>
        </trans-unit>
        <trans-unit id="52d555c8c88350a69fb85e30720e746c6bbd3d3f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_BUFFER_USAGE_INDIRECT_BUFFER_BIT&lt;/code&gt; specifies that the buffer is suitable for passing as the &lt;code&gt;buffer&lt;/code&gt; parameter to &lt;code&gt;vkCmdDrawIndirect&lt;/code&gt;, &lt;code&gt;vkCmdDrawIndexedIndirect&lt;/code&gt;, or &lt;code&gt;vkCmdDispatchIndirect&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;VK_BUFFER_USAGE_INDIRECT_BUFFER_BIT&lt;/code&gt; 는 버퍼가 &lt;code&gt;vkCmdDrawIndirect&lt;/code&gt; , &lt;code&gt;vkCmdDrawIndexedIndirect&lt;/code&gt; 또는 &lt;code&gt;vkCmdDispatchIndirect&lt;/code&gt; 에 &lt;code&gt;buffer&lt;/code&gt; 매개 변수로 전달하기에 적합 하도록 지정합니다 .</target>
        </trans-unit>
        <trans-unit id="f223f1be464bf3ea42531afc4332795a128780f3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_BUFFER_USAGE_STORAGE_BUFFER_BIT&lt;/code&gt; specifies that the buffer &lt;strong&gt;can&lt;/strong&gt; be used in a &lt;code&gt;VkDescriptorBufferInfo&lt;/code&gt; suitable for occupying a &lt;code&gt;VkDescriptorSet&lt;/code&gt; slot either of type &lt;code&gt;VK_DESCRIPTOR_TYPE_STORAGE_BUFFER&lt;/code&gt; or &lt;code&gt;VK_DESCRIPTOR_TYPE_STORAGE_BUFFER_DYNAMIC&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;VK_BUFFER_USAGE_STORAGE_BUFFER_BIT&lt;/code&gt; 는 &lt;code&gt;VK_DESCRIPTOR_TYPE_STORAGE_BUFFER&lt;/code&gt; 또는 &lt;code&gt;VK_DESCRIPTOR_TYPE_STORAGE_BUFFER_DYNAMIC&lt;/code&gt; 유형 의 &lt;code&gt;VkDescriptorSet&lt;/code&gt; 슬롯 을 점유하기에 적합한 &lt;code&gt;VkDescriptorBufferInfo&lt;/code&gt; 에서 버퍼를 &lt;strong&gt;사용할 수&lt;/strong&gt; 있도록 지정합니다 .</target>
        </trans-unit>
        <trans-unit id="49ae5abee85506492d73f4596bde5a0645502458" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_BUFFER_USAGE_STORAGE_TEXEL_BUFFER_BIT&lt;/code&gt; specifies that the buffer &lt;strong&gt;can&lt;/strong&gt; be used to create a &lt;code&gt;VkBufferView&lt;/code&gt; suitable for occupying a &lt;code&gt;VkDescriptorSet&lt;/code&gt; slot of type &lt;code&gt;VK_DESCRIPTOR_TYPE_STORAGE_TEXEL_BUFFER&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;VK_BUFFER_USAGE_STORAGE_TEXEL_BUFFER_BIT&lt;/code&gt; 의 지정 버퍼는 &lt;strong&gt;수&lt;/strong&gt; 크리에이트하는데 사용될 &lt;code&gt;VkBufferView&lt;/code&gt; 점유 적합한 &lt;code&gt;VkDescriptorSet&lt;/code&gt; 의 형태의 슬롯 &lt;code&gt;VK_DESCRIPTOR_TYPE_STORAGE_TEXEL_BUFFER&lt;/code&gt; 를 .</target>
        </trans-unit>
        <trans-unit id="34c0c4d5f028cf2e17b23e898842b2b9ed4c6792" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_BUFFER_USAGE_TRANSFER_DST_BIT&lt;/code&gt; specifies that the buffer &lt;strong&gt;can&lt;/strong&gt; be used as the destination of a transfer command.</source>
          <target state="translated">&lt;code&gt;VK_BUFFER_USAGE_TRANSFER_DST_BIT&lt;/code&gt; 는 버퍼 가 전송 명령의 대상으로 사용될 &lt;strong&gt;수&lt;/strong&gt; 있도록 지정합니다 .</target>
        </trans-unit>
        <trans-unit id="6c0a5d7812ca950ca8f7590e93fe17093183ec83" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_BUFFER_USAGE_TRANSFER_SRC_BIT&lt;/code&gt; specifies that the buffer &lt;strong&gt;can&lt;/strong&gt; be used as the source of a &lt;em&gt;transfer command&lt;/em&gt; (see the definition of &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-pipeline-stages-transfer&quot;&gt;&lt;code&gt;VK_PIPELINE_STAGE_TRANSFER_BIT&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">&lt;code&gt;VK_BUFFER_USAGE_TRANSFER_SRC_BIT&lt;/code&gt; 는 버퍼 &lt;strong&gt;가 &lt;/strong&gt;&lt;em&gt;전송 명령&lt;/em&gt; 의 소스로 사용될 &lt;strong&gt;수&lt;/strong&gt; 있도록 지정합니다 ( &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-pipeline-stages-transfer&quot;&gt; &lt;code&gt;VK_PIPELINE_STAGE_TRANSFER_BIT&lt;/code&gt; &lt;/a&gt; 의 정의 참조 ).</target>
        </trans-unit>
        <trans-unit id="54f9047a6eca7a079aba7ddf76cd3f4fedc8a988" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_BUFFER_USAGE_UNIFORM_BUFFER_BIT&lt;/code&gt; specifies that the buffer &lt;strong&gt;can&lt;/strong&gt; be used in a &lt;code&gt;VkDescriptorBufferInfo&lt;/code&gt; suitable for occupying a &lt;code&gt;VkDescriptorSet&lt;/code&gt; slot either of type &lt;code&gt;VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER&lt;/code&gt; or &lt;code&gt;VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER_DYNAMIC&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;VK_BUFFER_USAGE_UNIFORM_BUFFER_BIT&lt;/code&gt; 는 &lt;code&gt;VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER&lt;/code&gt; 또는 &lt;code&gt;VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER_DYNAMIC&lt;/code&gt; 유형 의 &lt;code&gt;VkDescriptorSet&lt;/code&gt; 슬롯 을 점유하기에 적합한 &lt;code&gt;VkDescriptorBufferInfo&lt;/code&gt; 에서 버퍼를 &lt;strong&gt;사용할 수&lt;/strong&gt; 있도록 지정합니다 .</target>
        </trans-unit>
        <trans-unit id="46b7a647af689ad2084a8c038d005940a1764d03" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_BUFFER_USAGE_UNIFORM_TEXEL_BUFFER_BIT&lt;/code&gt; specifies that the buffer &lt;strong&gt;can&lt;/strong&gt; be used to create a &lt;code&gt;VkBufferView&lt;/code&gt; suitable for occupying a &lt;code&gt;VkDescriptorSet&lt;/code&gt; slot of type &lt;code&gt;VK_DESCRIPTOR_TYPE_UNIFORM_TEXEL_BUFFER&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;VK_BUFFER_USAGE_UNIFORM_TEXEL_BUFFER_BIT&lt;/code&gt; 의 지정 버퍼는 &lt;strong&gt;수&lt;/strong&gt; 크리에이트하는데 사용될 &lt;code&gt;VkBufferView&lt;/code&gt; 점유 적합한 &lt;code&gt;VkDescriptorSet&lt;/code&gt; 의 형태의 슬롯 &lt;code&gt;VK_DESCRIPTOR_TYPE_UNIFORM_TEXEL_BUFFER&lt;/code&gt; 를 .</target>
        </trans-unit>
        <trans-unit id="d14e9de2d4876014028f1e2be1dbdd793fa26e32" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_BUFFER_USAGE_VERTEX_BUFFER_BIT&lt;/code&gt; specifies that the buffer is suitable for passing as an element of the &lt;code&gt;pBuffers&lt;/code&gt; array to &lt;code&gt;vkCmdBindVertexBuffers&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;VK_BUFFER_USAGE_VERTEX_BUFFER_BIT&lt;/code&gt; 의 버퍼의 요소로 전달하기에 적합하도록 지정 &lt;code&gt;pBuffers&lt;/code&gt; 에 배열 &lt;code&gt;vkCmdBindVertexBuffers&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="85b3288b4f18c9863bdc48aac71ac463791cd842" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_COLOR_COMPONENT_A_BIT&lt;/code&gt; specifies that the A value is written to the color attachment for the appropriate sample. Otherwise, the value in memory is unmodified.</source>
          <target state="translated">&lt;code&gt;VK_COLOR_COMPONENT_A_BIT&lt;/code&gt; 는 A 값이 적절한 샘플의 색상 첨부 파일에 기록되도록 지정합니다. 그렇지 않으면 메모리의 값이 수정되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="3c4752b10e63015ebd7eebf5d3ac98791279616f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_COLOR_COMPONENT_B_BIT&lt;/code&gt; specifies that the B value is written to the color attachment for the appropriate sample. Otherwise, the value in memory is unmodified.</source>
          <target state="translated">&lt;code&gt;VK_COLOR_COMPONENT_B_BIT&lt;/code&gt; 는 B 값이 적절한 샘플의 색상 첨부 파일에 기록되도록 지정합니다. 그렇지 않으면 메모리의 값이 수정되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="5042536e04dba2eb494583e422295c6558dcdf9b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_COLOR_COMPONENT_G_BIT&lt;/code&gt; specifies that the G value is written to the color attachment for the appropriate sample. Otherwise, the value in memory is unmodified.</source>
          <target state="translated">&lt;code&gt;VK_COLOR_COMPONENT_G_BIT&lt;/code&gt; 는 G 값이 해당 샘플의 색상 첨부 파일에 기록되도록 지정합니다. 그렇지 않으면 메모리의 값이 수정되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="89c9208e386fbaa583ab1f9d2a6c42deceb50147" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_COLOR_COMPONENT_R_BIT&lt;/code&gt; specifies that the R value is written to the color attachment for the appropriate sample. Otherwise, the value in memory is unmodified.</source>
          <target state="translated">&lt;code&gt;VK_COLOR_COMPONENT_R_BIT&lt;/code&gt; 는 R 값이 해당 샘플의 색상 첨부 파일에 기록되도록 지정합니다. 그렇지 않으면 메모리의 값이 수정되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="19dd63fd6494915316216a6a91b318f45ae992e6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_COMMAND_BUFFER_LEVEL_PRIMARY&lt;/code&gt; specifies a primary command buffer.</source>
          <target state="translated">&lt;code&gt;VK_COMMAND_BUFFER_LEVEL_PRIMARY&lt;/code&gt; 는 기본 명령 버퍼를 지정합니다.</target>
        </trans-unit>
        <trans-unit id="51af683edb539bf8aab62eb6bc3b70a3dd46d09e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_COMMAND_BUFFER_LEVEL_SECONDARY&lt;/code&gt; specifies a secondary command buffer.</source>
          <target state="translated">&lt;code&gt;VK_COMMAND_BUFFER_LEVEL_SECONDARY&lt;/code&gt; 는 보조 명령 버퍼를 지정합니다.</target>
        </trans-unit>
        <trans-unit id="6e35eda718883af9e2e23b5893e4fe63fc5ba075" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_COMMAND_BUFFER_RESET_RELEASE_RESOURCES_BIT&lt;/code&gt; specifies that most or all memory resources currently owned by the command buffer &lt;strong&gt;should&lt;/strong&gt; be returned to the parent command pool. If this flag is not set, then the command buffer &lt;strong&gt;may&lt;/strong&gt; hold onto memory resources and reuse them when recording commands. &lt;code&gt;commandBuffer&lt;/code&gt; is moved to the &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#commandbuffers-lifecycle&quot;&gt;initial state&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;VK_COMMAND_BUFFER_RESET_RELEASE_RESOURCES_BIT&lt;/code&gt; 는 현재 명령 버퍼 &lt;strong&gt;가&lt;/strong&gt; 소유 한 대부분 또는 모든 메모리 자원 이 상위 명령 풀로 리턴되도록 지정합니다. 이 플래그를 설정하지 않으면 명령 버퍼 &lt;strong&gt;가&lt;/strong&gt; 메모리 자원을 보유하고 명령을 기록 할 때이를 재사용 할 수 있습니다. &lt;code&gt;commandBuffer&lt;/code&gt; 가 &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#commandbuffers-lifecycle&quot;&gt;초기 상태&lt;/a&gt; 로 이동합니다 .</target>
        </trans-unit>
        <trans-unit id="9fa9fcd01f5e387d17340e00850d1f5fa729a06f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT&lt;/code&gt; specifies that each recording of the command buffer will only be submitted once, and the command buffer will be reset and recorded again between each submission.</source>
          <target state="translated">&lt;code&gt;VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT&lt;/code&gt; 는 명령 버퍼의 각 기록이 한 번만 제출되고 명령 버퍼가 재설정되어 각 제출 사이에 다시 기록되도록 지정합니다.</target>
        </trans-unit>
        <trans-unit id="e7bec118eb641158f9fbc593259fbd2f7f436cc8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_COMMAND_BUFFER_USAGE_RENDER_PASS_CONTINUE_BIT&lt;/code&gt; specifies that a secondary command buffer is considered to be entirely inside a render pass. If this is a primary command buffer, then this bit is ignored.</source>
          <target state="translated">&lt;code&gt;VK_COMMAND_BUFFER_USAGE_RENDER_PASS_CONTINUE_BIT&lt;/code&gt; 는 보조 명령 버퍼가 렌더 패스 내부에 있다고 간주하도록 지정합니다. 이것이 1 차 명령 버퍼 인 경우이 비트는 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="7e9fc37823f909c6bb8ba0d00bf8308f89d698c2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_COMMAND_BUFFER_USAGE_SIMULTANEOUS_USE_BIT&lt;/code&gt; specifies that a command buffer &lt;strong&gt;can&lt;/strong&gt; be resubmitted to a queue while it is in the &lt;em&gt;pending state&lt;/em&gt;, and recorded into multiple primary command buffers.</source>
          <target state="translated">&lt;code&gt;VK_COMMAND_BUFFER_USAGE_SIMULTANEOUS_USE_BIT&lt;/code&gt; 는 명령 버퍼 &lt;strong&gt;가&lt;/strong&gt; 큐가 &lt;em&gt;보류 상태&lt;/em&gt; 에있는 동안 큐에 다시 제출 되어 여러 기본 명령 버퍼에 기록 될 &lt;strong&gt;수&lt;/strong&gt; 있도록 지정합니다 .</target>
        </trans-unit>
        <trans-unit id="ebee26ca0c317d053dbee5ded9c18defd31e0565" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_COMMAND_POOL_CREATE_RESET_COMMAND_BUFFER_BIT&lt;/code&gt; allows any command buffer allocated from a pool to be individually reset to the &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#commandbuffers-lifecycle&quot;&gt;initial state&lt;/a&gt;; either by calling &lt;a href=&quot;#vkResetCommandBuffer&quot;&gt;vkResetCommandBuffer&lt;/a&gt;, or via the implicit reset when calling &lt;a href=&quot;#vkBeginCommandBuffer&quot;&gt;vkBeginCommandBuffer&lt;/a&gt;. If this flag is not set on a pool, then &lt;code&gt;vkResetCommandBuffer&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; not be called for any command buffer allocated from that pool.</source>
          <target state="translated">&lt;code&gt;VK_COMMAND_POOL_CREATE_RESET_COMMAND_BUFFER_BIT&lt;/code&gt; 를 통해 풀에서 할당 된 모든 명령 버퍼를 개별적으로 &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#commandbuffers-lifecycle&quot;&gt;초기 상태로&lt;/a&gt; 재설정 할 수 있습니다 . 중 하나에 의해 호출 &lt;a href=&quot;#vkResetCommandBuffer&quot;&gt;vkResetCommandBuffer를&lt;/a&gt; , 또는 암시 적 리셋을 통해 호출 할 때 &lt;a href=&quot;#vkBeginCommandBuffer&quot;&gt;vkBeginCommandBuffer을&lt;/a&gt; . 이 플래그가 풀에 설정되어 있지 않으면 해당 풀에서 할당 된 명령 버퍼에 대해 &lt;code&gt;vkResetCommandBuffer&lt;/code&gt; &lt;strong&gt;를&lt;/strong&gt; 호출하면 안됩니다.</target>
        </trans-unit>
        <trans-unit id="1c4ca7133aeb33982bcd36bab12484479ed7fb6d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_COMMAND_POOL_CREATE_TRANSIENT_BIT&lt;/code&gt; indicates that command buffers allocated from the pool will be short-lived, meaning that they will be reset or freed in a relatively short timeframe. This flag &lt;strong&gt;may&lt;/strong&gt; be used by the implementation to control memory allocation behavior within the pool.</source>
          <target state="translated">&lt;code&gt;VK_COMMAND_POOL_CREATE_TRANSIENT_BIT&lt;/code&gt; 는 풀에서 할당 된 명령 버퍼의 수명이 짧아 비교적 짧은 시간 내에 재설정되거나 해제 됨을 나타냅니다. 이 플래그 &lt;strong&gt;는&lt;/strong&gt; 구현에서 풀 내 메모리 할당 동작을 제어하는 ​​데 사용될 &lt;strong&gt;수&lt;/strong&gt; 있습니다.</target>
        </trans-unit>
        <trans-unit id="7902eb8f184e91af6ebfd1df2af9028c1125d15a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_COMMAND_POOL_RESET_RELEASE_RESOURCES_BIT&lt;/code&gt; specifies that resetting a command pool recycles all of the resources from the command pool back to the system.</source>
          <target state="translated">&lt;code&gt;VK_COMMAND_POOL_RESET_RELEASE_RESOURCES_BIT&lt;/code&gt; 는 명령 풀을 재설정하면 명령 풀에서 시스템으로 모든 자원이 다시 재생 되도록 지정합니다.</target>
        </trans-unit>
        <trans-unit id="4cf4ca5eb6edcded55d032df8da8b8bcd5edefec" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_COMPARE_OP_ALWAYS&lt;/code&gt; specifies that the test always passes.</source>
          <target state="translated">&lt;code&gt;VK_COMPARE_OP_ALWAYS&lt;/code&gt; 는 테스트가 항상 통과 하도록 지정합니다.</target>
        </trans-unit>
        <trans-unit id="7a0bd2ccb0a1a159545ee56605b090e73ef75cea" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_COMPARE_OP_EQUAL&lt;/code&gt; specifies that the test passes when R = S.</source>
          <target state="translated">&lt;code&gt;VK_COMPARE_OP_EQUAL&lt;/code&gt; 은 R = S 일 때 테스트가 통과 하도록 지정합니다.</target>
        </trans-unit>
        <trans-unit id="eec42e9e6ab9da646b8b015c254cc1ed095f981e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_COMPARE_OP_GREATER&lt;/code&gt; specifies that the test passes when R &amp;gt; S.</source>
          <target state="translated">&lt;code&gt;VK_COMPARE_OP_GREATER&lt;/code&gt; 는 R&amp;gt; S 일 때 테스트가 통과 하도록 지정합니다.</target>
        </trans-unit>
        <trans-unit id="b8154e99277e7836fd0a1df8aeb8e14cf11d2480" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_COMPARE_OP_GREATER_OR_EQUAL&lt;/code&gt; specifies that the test passes when R &amp;ge; S.</source>
          <target state="translated">&lt;code&gt;VK_COMPARE_OP_GREATER_OR_EQUAL&lt;/code&gt; 은 R &amp;ge; S 일 때 테스트를 통과 하도록 지정합니다.</target>
        </trans-unit>
        <trans-unit id="2f04b2fe00e3369f0df0caf7e1dfc4fa2e74386a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_COMPARE_OP_LESS&lt;/code&gt; specifies that the test passes when R &amp;lt; S.</source>
          <target state="translated">&lt;code&gt;VK_COMPARE_OP_LESS&lt;/code&gt; 는 R &amp;lt;S 일 때 테스트가 통과 하도록 지정합니다.</target>
        </trans-unit>
        <trans-unit id="63f24782b42a82e69ed03e6e5ba2ab5c8003012d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_COMPARE_OP_LESS_OR_EQUAL&lt;/code&gt; specifies that the test passes when R &amp;le; S.</source>
          <target state="translated">&lt;code&gt;VK_COMPARE_OP_LESS_OR_EQUAL&lt;/code&gt; 은 R &amp;le; S 일 때 테스트가 통과 하도록 지정합니다.</target>
        </trans-unit>
        <trans-unit id="176345cc772b8b23f04db1c5f9ba77fd33c8ed4c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_COMPARE_OP_NEVER&lt;/code&gt; specifies that the test never passes.</source>
          <target state="translated">&lt;code&gt;VK_COMPARE_OP_NEVER&lt;/code&gt; 는 테스트가 절대 통과하지 않도록 지정합니다.</target>
        </trans-unit>
        <trans-unit id="2e0b7589edc7163c63134c304890ce9d62441576" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_COMPARE_OP_NOT_EQUAL&lt;/code&gt; specifies that the test passes when R &amp;ne; S.</source>
          <target state="translated">&lt;code&gt;VK_COMPARE_OP_NOT_EQUAL&lt;/code&gt; 은 R &amp;ne; S 일 때 테스트가 통과 하도록 지정합니다.</target>
        </trans-unit>
        <trans-unit id="262ee5ad5c448e4c5e806e3adbab872a3a783c28" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_COMPONENT_SWIZZLE_A&lt;/code&gt; specifies that the component is set to the value of the A component of the image.</source>
          <target state="translated">&lt;code&gt;VK_COMPONENT_SWIZZLE_A&lt;/code&gt; 는 구성 요소가 이미지의 A 구성 요소 값으로 설정되도록 지정합니다.</target>
        </trans-unit>
        <trans-unit id="62e1e2436adee0bd558cde39f38b5149c431f56c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_COMPONENT_SWIZZLE_B&lt;/code&gt; specifies that the component is set to the value of the B component of the image.</source>
          <target state="translated">&lt;code&gt;VK_COMPONENT_SWIZZLE_B&lt;/code&gt; 는 구성 요소가 이미지의 B 구성 요소 값으로 설정되도록 지정합니다.</target>
        </trans-unit>
        <trans-unit id="a550cf1fb07fcb1879097346b241d1a2ebc4cc34" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_COMPONENT_SWIZZLE_G&lt;/code&gt; specifies that the component is set to the value of the G component of the image.</source>
          <target state="translated">&lt;code&gt;VK_COMPONENT_SWIZZLE_G&lt;/code&gt; 는 구성 요소가 이미지의 G 구성 요소 값으로 설정되도록 지정합니다.</target>
        </trans-unit>
        <trans-unit id="1470425a003bd95f8bd7a1eba40af0da79a71470" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_COMPONENT_SWIZZLE_IDENTITY&lt;/code&gt; specifies that the component is set to the identity swizzle.</source>
          <target state="translated">&lt;code&gt;VK_COMPONENT_SWIZZLE_IDENTITY&lt;/code&gt; 는 구성 요소가 ID 스위 즐로 설정되도록 지정합니다.</target>
        </trans-unit>
        <trans-unit id="ff8191c8ea2b507ea3af5b896cf51dca0aa90bbf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_COMPONENT_SWIZZLE_ONE&lt;/code&gt; specifies that the component is set to either 1 or 1.0, depending on whether the type of the image view format is integer or floating-point respectively, as determined by the &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-formats-definition&quot;&gt;Format Definition&lt;/a&gt; section for each &lt;a href=&quot;#VkFormat&quot;&gt;VkFormat&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;VK_COMPONENT_SWIZZLE_ONE&lt;/code&gt; 은 각 &lt;a href=&quot;#VkFormat&quot;&gt;VkFormat에&lt;/a&gt; 대한 &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-formats-definition&quot;&gt;형식 정의&lt;/a&gt; 섹션에 의해 결정된대로 이미지보기 형식의 유형이 각각 정수 또는 부동 소수점인지에 따라 구성 요소가 1 또는 1.0으로 설정되도록 지정합니다 .</target>
        </trans-unit>
        <trans-unit id="745dc0350d85d697f275090cc71e2455b8edc82f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_COMPONENT_SWIZZLE_R&lt;/code&gt; specifies that the component is set to the value of the R component of the image.</source>
          <target state="translated">&lt;code&gt;VK_COMPONENT_SWIZZLE_R&lt;/code&gt; 은 구성 요소가 이미지의 R 구성 요소 값으로 설정되도록 지정합니다.</target>
        </trans-unit>
        <trans-unit id="1050f1f70cee41b57f4e88a49613fb3da31e4465" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_COMPONENT_SWIZZLE_ZERO&lt;/code&gt; specifies that the component is set to zero.</source>
          <target state="translated">&lt;code&gt;VK_COMPONENT_SWIZZLE_ZERO&lt;/code&gt; 는 구성 요소가 0으로 설정되도록 지정합니다.</target>
        </trans-unit>
        <trans-unit id="c0a95d2fbb25c6a342240a9baefde0af0aceabfb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_CULL_MODE_BACK_BIT&lt;/code&gt; specifies that back-facing triangles are discarded</source>
          <target state="translated">&lt;code&gt;VK_CULL_MODE_BACK_BIT&lt;/code&gt; 는 후면 삼각형을 버리는 것으로 지정합니다.</target>
        </trans-unit>
        <trans-unit id="35ab898a82f34243b8c79e3d46623c311ab4ff49" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_CULL_MODE_FRONT_AND_BACK&lt;/code&gt; specifies that all triangles are discarded.</source>
          <target state="translated">&lt;code&gt;VK_CULL_MODE_FRONT_AND_BACK&lt;/code&gt; 은 모든 삼각형이 삭제 되도록 지정합니다.</target>
        </trans-unit>
        <trans-unit id="f447770bae66d3efeb484e8d48ad00e7ccd6e7a1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_CULL_MODE_FRONT_BIT&lt;/code&gt; specifies that front-facing triangles are discarded</source>
          <target state="translated">&lt;code&gt;VK_CULL_MODE_FRONT_BIT&lt;/code&gt; 는 정면 삼각형을 무시 하도록 지정합니다.</target>
        </trans-unit>
        <trans-unit id="29e673e9f3a6532096dcfec253967b260354c1d6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_CULL_MODE_NONE&lt;/code&gt; specifies that no triangles are discarded</source>
          <target state="translated">&lt;code&gt;VK_CULL_MODE_NONE&lt;/code&gt; 은 삼각형을 버리지 않도록 지정합니다.</target>
        </trans-unit>
        <trans-unit id="0ddd2845a450c6ea1089221d20d6065a95b6a74a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_DEFINE_HANDLE&lt;/code&gt; defines a &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#fundamentals-objectmodel-overview&quot;&gt;dispatchable handle&lt;/a&gt; type.</source>
          <target state="translated">&lt;code&gt;VK_DEFINE_HANDLE&lt;/code&gt; 은 &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#fundamentals-objectmodel-overview&quot;&gt;디스패치 가능 핸들&lt;/a&gt; 유형을 정의합니다 .</target>
        </trans-unit>
        <trans-unit id="d6d5ed929802580a4b2598ee2eea2768f63f6f00" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_DEFINE_NON_DISPATCHABLE_HANDLE&lt;/code&gt; defines a &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#fundamentals-objectmodel-overview&quot;&gt;non-dispatchable handle&lt;/a&gt; type.</source>
          <target state="translated">&lt;code&gt;VK_DEFINE_NON_DISPATCHABLE_HANDLE&lt;/code&gt; 은 &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#fundamentals-objectmodel-overview&quot;&gt;디스패치&lt;/a&gt; 할 수 없는 핸들 유형을 정의합니다 .</target>
        </trans-unit>
        <trans-unit id="7f91ba808974791675ecf0f0a79f5f001b70f208" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_DEPENDENCY_BY_REGION_BIT&lt;/code&gt; specifies that dependencies will be &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-framebuffer-regions&quot;&gt;framebuffer-local&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;VK_DEPENDENCY_BY_REGION_BIT&lt;/code&gt; 는 종속성이 &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-framebuffer-regions&quot;&gt;framebuffer-local&lt;/a&gt; 이되도록 지정합니다 .</target>
        </trans-unit>
        <trans-unit id="c5eb58f13c8423f79edf8f692958691a29a3308d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_DESCRIPTOR_POOL_CREATE_FREE_DESCRIPTOR_SET_BIT&lt;/code&gt; specifies that descriptor sets &lt;strong&gt;can&lt;/strong&gt; return their individual allocations to the pool, i.e. all of &lt;a href=&quot;#vkAllocateDescriptorSets&quot;&gt;vkAllocateDescriptorSets&lt;/a&gt;, &lt;a href=&quot;#vkFreeDescriptorSets&quot;&gt;vkFreeDescriptorSets&lt;/a&gt;, and &lt;a href=&quot;#vkResetDescriptorPool&quot;&gt;vkResetDescriptorPool&lt;/a&gt; are allowed. Otherwise, descriptor sets allocated from the pool &lt;strong&gt;must&lt;/strong&gt; not be individually freed back to the pool, i.e. only &lt;a href=&quot;#vkAllocateDescriptorSets&quot;&gt;vkAllocateDescriptorSets&lt;/a&gt; and &lt;a href=&quot;#vkResetDescriptorPool&quot;&gt;vkResetDescriptorPool&lt;/a&gt; are allowed.</source>
          <target state="translated">&lt;code&gt;VK_DESCRIPTOR_POOL_CREATE_FREE_DESCRIPTOR_SET_BIT&lt;/code&gt; 는 디스크립터 세트 &lt;strong&gt;가&lt;/strong&gt; 개별 할당을 풀에 리턴 &lt;strong&gt;할 수 &lt;/strong&gt;있도록 지정합니다 . 즉, 모든 &lt;a href=&quot;#vkAllocateDescriptorSets&quot;&gt;vkAllocateDescriptorSets&lt;/a&gt; , &lt;a href=&quot;#vkFreeDescriptorSets&quot;&gt;vkFreeDescriptorSets&lt;/a&gt; 및 &lt;a href=&quot;#vkResetDescriptorPool&quot;&gt;vkResetDescriptorPool&lt;/a&gt; 이 허용됩니다. 그렇지 않으면, 풀에서 할당 된 기술자 세트가 &lt;strong&gt;있어야&lt;/strong&gt; 개별적으로 풀에 다시 해제되지 즉, 단지 &lt;a href=&quot;#vkAllocateDescriptorSets&quot;&gt;vkAllocateDescriptorSets&lt;/a&gt; 및 &lt;a href=&quot;#vkResetDescriptorPool&quot;&gt;vkResetDescriptorPool이&lt;/a&gt; 허용됩니다.</target>
        </trans-unit>
        <trans-unit id="7b87e78f4242a502d0cdbcf6b61712368203100c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_DESCRIPTOR_TYPE_SAMPLER&lt;/code&gt;, &lt;code&gt;VK_DESCRIPTOR_TYPE_COMBINED_IMAGE_SAMPLER&lt;/code&gt;, &lt;code&gt;VK_DESCRIPTOR_TYPE_SAMPLED_IMAGE&lt;/code&gt;, &lt;code&gt;VK_DESCRIPTOR_TYPE_STORAGE_IMAGE&lt;/code&gt;, or &lt;code&gt;VK_DESCRIPTOR_TYPE_INPUT_ATTACHMENT&lt;/code&gt; specify that the elements of the &lt;a href=&quot;#VkWriteDescriptorSet&quot;&gt;VkWriteDescriptorSet&lt;/a&gt;::&lt;code&gt;pImageInfo&lt;/code&gt; array of &lt;a href=&quot;#VkDescriptorImageInfo&quot;&gt;VkDescriptorImageInfo&lt;/a&gt; structures will be used to update the descriptors, and other arrays will be ignored.</source>
          <target state="translated">&lt;code&gt;VK_DESCRIPTOR_TYPE_SAMPLER&lt;/code&gt; , &lt;code&gt;VK_DESCRIPTOR_TYPE_COMBINED_IMAGE_SAMPLER&lt;/code&gt; , &lt;code&gt;VK_DESCRIPTOR_TYPE_SAMPLED_IMAGE&lt;/code&gt; , &lt;code&gt;VK_DESCRIPTOR_TYPE_STORAGE_IMAGE&lt;/code&gt; , 또는 &lt;code&gt;VK_DESCRIPTOR_TYPE_INPUT_ATTACHMENT&lt;/code&gt; 는 의 요소를 지정 &lt;a href=&quot;#VkWriteDescriptorSet&quot;&gt;VkWriteDescriptorSet&lt;/a&gt; :: &lt;code&gt;pImageInfo&lt;/code&gt; 의 배열 &lt;a href=&quot;#VkDescriptorImageInfo&quot;&gt;VkDescriptorImageInfo의&lt;/a&gt; 구조가 설명을 업데이트하는 데 사용되며, 다른 배열은 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="b1260a9d8c287cb6c92cbfd7f5abe1d8af99cfce" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER&lt;/code&gt;, &lt;code&gt;VK_DESCRIPTOR_TYPE_STORAGE_BUFFER&lt;/code&gt;, &lt;code&gt;VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER_DYNAMIC&lt;/code&gt;, or &lt;code&gt;VK_DESCRIPTOR_TYPE_STORAGE_BUFFER_DYNAMIC&lt;/code&gt; specify that the elements of the &lt;a href=&quot;#VkWriteDescriptorSet&quot;&gt;VkWriteDescriptorSet&lt;/a&gt;::&lt;code&gt;pBufferInfo&lt;/code&gt; array of &lt;a href=&quot;#VkDescriptorBufferInfo&quot;&gt;VkDescriptorBufferInfo&lt;/a&gt; structures will be used to update the descriptors, and other arrays will be ignored.</source>
          <target state="translated">&lt;code&gt;VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER&lt;/code&gt; , &lt;code&gt;VK_DESCRIPTOR_TYPE_STORAGE_BUFFER&lt;/code&gt; , &lt;code&gt;VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER_DYNAMIC&lt;/code&gt; , 또는 &lt;code&gt;VK_DESCRIPTOR_TYPE_STORAGE_BUFFER_DYNAMIC&lt;/code&gt; 는 의 요소를 지정 &lt;a href=&quot;#VkWriteDescriptorSet&quot;&gt;VkWriteDescriptorSet&lt;/a&gt; :: &lt;code&gt;pBufferInfo&lt;/code&gt; 의 배열 &lt;a href=&quot;#VkDescriptorBufferInfo&quot;&gt;VkDescriptorBufferInfo의&lt;/a&gt; 구조가 설명을 업데이트하는 데 사용되며, 다른 배열은 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="8a91be8c24f703f4f78930c62c5610fc937ebfbc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_DESCRIPTOR_TYPE_UNIFORM_TEXEL_BUFFER&lt;/code&gt; or &lt;code&gt;VK_DESCRIPTOR_TYPE_STORAGE_TEXEL_BUFFER&lt;/code&gt; specify that the &lt;a href=&quot;#VkWriteDescriptorSet&quot;&gt;VkWriteDescriptorSet&lt;/a&gt;::&lt;code&gt;pTexelBufferView&lt;/code&gt; array will be used to update the descriptors, and other arrays will be ignored.</source>
          <target state="translated">&lt;code&gt;VK_DESCRIPTOR_TYPE_UNIFORM_TEXEL_BUFFER&lt;/code&gt; 또는 &lt;code&gt;VK_DESCRIPTOR_TYPE_STORAGE_TEXEL_BUFFER&lt;/code&gt; 는 &lt;a href=&quot;#VkWriteDescriptorSet&quot;&gt;VkWriteDescriptorSet&lt;/a&gt; :: &lt;code&gt;pTexelBufferView&lt;/code&gt; 배열을 사용하여 설명자를 업데이트하고 다른 배열은 무시하도록 지정합니다.</target>
        </trans-unit>
        <trans-unit id="a042388a92aa6b272bf17f705a1048b06fe3b375" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_DYNAMIC_STATE_BLEND_CONSTANTS&lt;/code&gt; specifies that the &lt;code&gt;blendConstants&lt;/code&gt; state in &lt;code&gt;VkPipelineColorBlendStateCreateInfo&lt;/code&gt; will be ignored and &lt;strong&gt;must&lt;/strong&gt; be set dynamically with &lt;a href=&quot;#vkCmdSetBlendConstants&quot;&gt;vkCmdSetBlendConstants&lt;/a&gt; before any draws are performed with a pipeline state with &lt;code&gt;VkPipelineColorBlendAttachmentState&lt;/code&gt; member &lt;code&gt;blendEnable&lt;/code&gt; set to &lt;code&gt;VK_TRUE&lt;/code&gt; and any of the blend functions using a constant blend color.</source>
          <target state="translated">&lt;code&gt;VK_DYNAMIC_STATE_BLEND_CONSTANTS&lt;/code&gt; 의 것을 지정 &lt;code&gt;blendConstants&lt;/code&gt; 의 에서 상태 &lt;code&gt;VkPipelineColorBlendStateCreateInfo&lt;/code&gt; 가 무시되고 &lt;strong&gt;있어야&lt;/strong&gt; 동적으로 설정할 수 &lt;a href=&quot;#vkCmdSetBlendConstants&quot;&gt;vkCmdSetBlendConstants&lt;/a&gt; 라도와 파이프 라인 상태와 수행립니다 전에 &lt;code&gt;VkPipelineColorBlendAttachmentState&lt;/code&gt; 의 멤버 &lt;code&gt;blendEnable&lt;/code&gt; 로 설정 &lt;code&gt;VK_TRUE&lt;/code&gt; 일정한 혼합 색상을 사용하여 혼합 기능의.</target>
        </trans-unit>
        <trans-unit id="77fa00074b64ce821fc07dd23a5cd4384e509622" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_DYNAMIC_STATE_DEPTH_BIAS&lt;/code&gt; specifies that the &lt;code&gt;depthBiasConstantFactor&lt;/code&gt;, &lt;code&gt;depthBiasClamp&lt;/code&gt; and &lt;code&gt;depthBiasSlopeFactor&lt;/code&gt; states in &lt;code&gt;VkPipelineRasterizationStateCreateInfo&lt;/code&gt; will be ignored and &lt;strong&gt;must&lt;/strong&gt; be set dynamically with &lt;a href=&quot;#vkCmdSetDepthBias&quot;&gt;vkCmdSetDepthBias&lt;/a&gt; before any draws are performed with &lt;code&gt;depthBiasEnable&lt;/code&gt; in &lt;code&gt;VkPipelineRasterizationStateCreateInfo&lt;/code&gt; set to &lt;code&gt;VK_TRUE&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;VK_DYNAMIC_STATE_DEPTH_BIAS&lt;/code&gt; 의 것을 지정 &lt;code&gt;depthBiasConstantFactor&lt;/code&gt; , &lt;code&gt;depthBiasClamp&lt;/code&gt; 및 &lt;code&gt;depthBiasSlopeFactor&lt;/code&gt; 의 에서 국가 &lt;code&gt;VkPipelineRasterizationStateCreateInfo&lt;/code&gt; 이 무시되고 &lt;strong&gt;있어야&lt;/strong&gt; 동적으로 설정할 수 &lt;a href=&quot;#vkCmdSetDepthBias&quot;&gt;vkCmdSetDepthBias&lt;/a&gt; 하나가 수행되어 그립니다 전에 &lt;code&gt;depthBiasEnable&lt;/code&gt; 에 &lt;code&gt;VkPipelineRasterizationStateCreateInfo&lt;/code&gt; 의 로 설정 &lt;code&gt;VK_TRUE&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="67bb162c3519b7888f88c0586e5df5f358cdb850" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_DYNAMIC_STATE_DEPTH_BOUNDS&lt;/code&gt; specifies that the &lt;code&gt;minDepthBounds&lt;/code&gt; and &lt;code&gt;maxDepthBounds&lt;/code&gt; states of &lt;a href=&quot;#VkPipelineDepthStencilStateCreateInfo&quot;&gt;VkPipelineDepthStencilStateCreateInfo&lt;/a&gt; will be ignored and &lt;strong&gt;must&lt;/strong&gt; be set dynamically with &lt;a href=&quot;#vkCmdSetDepthBounds&quot;&gt;vkCmdSetDepthBounds&lt;/a&gt; before any draws are performed with a pipeline state with &lt;code&gt;VkPipelineDepthStencilStateCreateInfo&lt;/code&gt; member &lt;code&gt;depthBoundsTestEnable&lt;/code&gt; set to &lt;code&gt;VK_TRUE&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;VK_DYNAMIC_STATE_DEPTH_BOUNDS&lt;/code&gt; 의 것을 지정 &lt;code&gt;minDepthBounds&lt;/code&gt; 및 &lt;code&gt;maxDepthBounds&lt;/code&gt; 의 상태 &lt;a href=&quot;#VkPipelineDepthStencilStateCreateInfo&quot;&gt;VkPipelineDepthStencilStateCreateInfo이&lt;/a&gt; 무시되고 &lt;strong&gt;있어야&lt;/strong&gt; 동적으로 설정할 수 &lt;a href=&quot;#vkCmdSetDepthBounds&quot;&gt;vkCmdSetDepthBounds&lt;/a&gt; 라도와 파이프 라인 상태와 수행립니다 전에 &lt;code&gt;VkPipelineDepthStencilStateCreateInfo&lt;/code&gt; 의 멤버 &lt;code&gt;depthBoundsTestEnable&lt;/code&gt; 로 설정 &lt;code&gt;VK_TRUE&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f63c3fb5b604fc09584eab3bc087bdcb0ce3a587" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_DYNAMIC_STATE_LINE_WIDTH&lt;/code&gt; specifies that the &lt;code&gt;lineWidth&lt;/code&gt; state in &lt;code&gt;VkPipelineRasterizationStateCreateInfo&lt;/code&gt; will be ignored and &lt;strong&gt;must&lt;/strong&gt; be set dynamically with &lt;a href=&quot;#vkCmdSetLineWidth&quot;&gt;vkCmdSetLineWidth&lt;/a&gt; before any draw commands that generate line primitives for the rasterizer.</source>
          <target state="translated">&lt;code&gt;VK_DYNAMIC_STATE_LINE_WIDTH&lt;/code&gt; 것을 지정 &lt;code&gt;lineWidth&lt;/code&gt; 의 상태 &lt;code&gt;VkPipelineRasterizationStateCreateInfo&lt;/code&gt; 가 무시되고 &lt;strong&gt;있어야&lt;/strong&gt; 동적으로 설정할 수 &lt;a href=&quot;#vkCmdSetLineWidth&quot;&gt;vkCmdSetLineWidth&lt;/a&gt; 래스터 라이저에 대한 라인 프리미티브를 생성하는 어떤 그리기 명령을하기 전에.</target>
        </trans-unit>
        <trans-unit id="ad5cc827d2b8395709134e7892fe0393b10658bd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_DYNAMIC_STATE_SCISSOR&lt;/code&gt; specifies that the &lt;code&gt;pScissors&lt;/code&gt; state in &lt;code&gt;VkPipelineViewportStateCreateInfo&lt;/code&gt; will be ignored and &lt;strong&gt;must&lt;/strong&gt; be set dynamically with &lt;a href=&quot;#vkCmdSetScissor&quot;&gt;vkCmdSetScissor&lt;/a&gt; before any draw commands. The number of scissor rectangles used by a pipeline is still specified by the &lt;code&gt;scissorCount&lt;/code&gt; member of &lt;code&gt;VkPipelineViewportStateCreateInfo&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;VK_DYNAMIC_STATE_SCISSOR&lt;/code&gt; 의 것을 지정 &lt;code&gt;pScissors&lt;/code&gt; 의 에서 상태 &lt;code&gt;VkPipelineViewportStateCreateInfo&lt;/code&gt; 가 무시되고 &lt;strong&gt;있어야&lt;/strong&gt; 동적으로 설정할 수 &lt;a href=&quot;#vkCmdSetScissor&quot;&gt;vkCmdSetScissor&lt;/a&gt; 어떤 그리기 명령을하기 전에. 파이프 라인에서 사용하는 가위 사각형의 수는 여전히로 지정 &lt;code&gt;scissorCount&lt;/code&gt; 의 회원 &lt;code&gt;VkPipelineViewportStateCreateInfo&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d58d67f3859d25644da2697ac01a9ca60822ee4c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_DYNAMIC_STATE_STENCIL_COMPARE_MASK&lt;/code&gt; specifies that the &lt;code&gt;compareMask&lt;/code&gt; state in &lt;code&gt;VkPipelineDepthStencilStateCreateInfo&lt;/code&gt; for both &lt;code&gt;front&lt;/code&gt; and &lt;code&gt;back&lt;/code&gt; will be ignored and &lt;strong&gt;must&lt;/strong&gt; be set dynamically with &lt;a href=&quot;#vkCmdSetStencilCompareMask&quot;&gt;vkCmdSetStencilCompareMask&lt;/a&gt; before any draws are performed with a pipeline state with &lt;code&gt;VkPipelineDepthStencilStateCreateInfo&lt;/code&gt; member &lt;code&gt;stencilTestEnable&lt;/code&gt; set to &lt;code&gt;VK_TRUE&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;VK_DYNAMIC_STATE_STENCIL_COMPARE_MASK&lt;/code&gt; 의 것을 지정 &lt;code&gt;compareMask&lt;/code&gt; 의 에서 상태 &lt;code&gt;VkPipelineDepthStencilStateCreateInfo&lt;/code&gt; 모두 &lt;code&gt;front&lt;/code&gt; 과 &lt;code&gt;back&lt;/code&gt; 무시되고 &lt;strong&gt;있어야&lt;/strong&gt; 동적으로 설정할 수 &lt;a href=&quot;#vkCmdSetStencilCompareMask&quot;&gt;vkCmdSetStencilCompareMask&lt;/a&gt; 라도와 파이프 라인 상태와 수행립니다 전에 &lt;code&gt;VkPipelineDepthStencilStateCreateInfo&lt;/code&gt; 의 멤버 &lt;code&gt;stencilTestEnable&lt;/code&gt; 로 설정 &lt;code&gt;VK_TRUE&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9bf3b93e9f45eee07ef4eebb8fc0da6fc32ac970" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_DYNAMIC_STATE_STENCIL_REFERENCE&lt;/code&gt; specifies that the &lt;code&gt;reference&lt;/code&gt; state in &lt;code&gt;VkPipelineDepthStencilStateCreateInfo&lt;/code&gt; for both &lt;code&gt;front&lt;/code&gt; and &lt;code&gt;back&lt;/code&gt; will be ignored and &lt;strong&gt;must&lt;/strong&gt; be set dynamically with &lt;a href=&quot;#vkCmdSetStencilReference&quot;&gt;vkCmdSetStencilReference&lt;/a&gt; before any draws are performed with a pipeline state with &lt;code&gt;VkPipelineDepthStencilStateCreateInfo&lt;/code&gt; member &lt;code&gt;stencilTestEnable&lt;/code&gt; set to &lt;code&gt;VK_TRUE&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;VK_DYNAMIC_STATE_STENCIL_REFERENCE&lt;/code&gt; 는 &lt;code&gt;VkPipelineDepthStencilStateCreateInfo&lt;/code&gt; 에서 &lt;code&gt;front&lt;/code&gt; 과 &lt;code&gt;back&lt;/code&gt; 모두 에 대한 &lt;code&gt;reference&lt;/code&gt; 상태 가 무시되고 &lt;code&gt;VkPipelineDepthStencilStateCreateInfo&lt;/code&gt; 멤버 &lt;code&gt;stencilTestEnable&lt;/code&gt; 을 VkPipelineDepthStencilStateCreateInfo 로 파이프 라인 상태로 수행하기 전에 &lt;a href=&quot;#vkCmdSetStencilReference&quot;&gt;vkCmdSetStencilReference로&lt;/a&gt; 동적으로 설정 &lt;strong&gt;되어야&lt;/strong&gt; 함 을 &lt;code&gt;VK_TRUE&lt;/code&gt; &lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="66a0953126a01eb2dc582ada451987d1ea540576" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_DYNAMIC_STATE_STENCIL_WRITE_MASK&lt;/code&gt; specifies that the &lt;code&gt;writeMask&lt;/code&gt; state in &lt;code&gt;VkPipelineDepthStencilStateCreateInfo&lt;/code&gt; for both &lt;code&gt;front&lt;/code&gt; and &lt;code&gt;back&lt;/code&gt; will be ignored and &lt;strong&gt;must&lt;/strong&gt; be set dynamically with &lt;a href=&quot;#vkCmdSetStencilWriteMask&quot;&gt;vkCmdSetStencilWriteMask&lt;/a&gt; before any draws are performed with a pipeline state with &lt;code&gt;VkPipelineDepthStencilStateCreateInfo&lt;/code&gt; member &lt;code&gt;stencilTestEnable&lt;/code&gt; set to &lt;code&gt;VK_TRUE&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;VK_DYNAMIC_STATE_STENCIL_WRITE_MASK&lt;/code&gt; 의 것을 지정 &lt;code&gt;writeMask&lt;/code&gt; 의 에서 상태 &lt;code&gt;VkPipelineDepthStencilStateCreateInfo&lt;/code&gt; 모두 &lt;code&gt;front&lt;/code&gt; 과 &lt;code&gt;back&lt;/code&gt; 무시되고 &lt;strong&gt;있어야&lt;/strong&gt; 동적으로 설정할 수 &lt;a href=&quot;#vkCmdSetStencilWriteMask&quot;&gt;vkCmdSetStencilWriteMask&lt;/a&gt; 라도와 파이프 라인 상태와 수행립니다 전에 &lt;code&gt;VkPipelineDepthStencilStateCreateInfo&lt;/code&gt; 의 멤버 &lt;code&gt;stencilTestEnable&lt;/code&gt; 로 설정 &lt;code&gt;VK_TRUE&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0d8cd3afae77fecb4bcc5e650fc7bf5832f7c945" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_DYNAMIC_STATE_VIEWPORT&lt;/code&gt; specifies that the &lt;code&gt;pViewports&lt;/code&gt; state in &lt;code&gt;VkPipelineViewportStateCreateInfo&lt;/code&gt; will be ignored and &lt;strong&gt;must&lt;/strong&gt; be set dynamically with &lt;a href=&quot;#vkCmdSetViewport&quot;&gt;vkCmdSetViewport&lt;/a&gt; before any draw commands. The number of viewports used by a pipeline is still specified by the &lt;code&gt;viewportCount&lt;/code&gt; member of &lt;code&gt;VkPipelineViewportStateCreateInfo&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;VK_DYNAMIC_STATE_VIEWPORT&lt;/code&gt; 의 것을 지정 &lt;code&gt;pViewports&lt;/code&gt; 의 에서 상태 &lt;code&gt;VkPipelineViewportStateCreateInfo&lt;/code&gt; 가 무시되고 &lt;strong&gt;있어야&lt;/strong&gt; 동적으로 설정할 수 &lt;a href=&quot;#vkCmdSetViewport&quot;&gt;vkCmdSetViewport&lt;/a&gt; 어떤 그리기 명령을하기 전에. 파이프 라인에서 사용하는 뷰포트 수는 여전히 &lt;code&gt;VkPipelineViewportStateCreateInfo&lt;/code&gt; 의 &lt;code&gt;viewportCount&lt;/code&gt; 멤버에 의해 지정됩니다 .</target>
        </trans-unit>
        <trans-unit id="fdb6187304c4d31e62f3f76f3f6dba6850a1d6e0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_ERROR_DEVICE_LOST&lt;/code&gt; The logical or physical device has been lost. See &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#devsandqueues-lost-device&quot;&gt;Lost Device&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;VK_ERROR_DEVICE_LOST&lt;/code&gt; 논리적 또는 물리적 장치가 손실되었습니다. &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#devsandqueues-lost-device&quot;&gt;분실 기기&lt;/a&gt; 참조</target>
        </trans-unit>
        <trans-unit id="d6a2e267a2a76eb321ff68f5a850fbbfa035674b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_ERROR_EXTENSION_NOT_PRESENT&lt;/code&gt; A requested extension is not supported.</source>
          <target state="translated">&lt;code&gt;VK_ERROR_EXTENSION_NOT_PRESENT&lt;/code&gt; 요청한 확장이 지원되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="84195f4850bc424f2823a0968bb184fc764e8c1f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_ERROR_FEATURE_NOT_PRESENT&lt;/code&gt; A requested feature is not supported.</source>
          <target state="translated">&lt;code&gt;VK_ERROR_FEATURE_NOT_PRESENT&lt;/code&gt; 요청한 기능이 지원되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="2d6003784c69fa9a0c63ec0e8f082ef7821f345e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_ERROR_FORMAT_NOT_SUPPORTED&lt;/code&gt; A requested format is not supported on this device.</source>
          <target state="translated">&lt;code&gt;VK_ERROR_FORMAT_NOT_SUPPORTED&lt;/code&gt; 요청 된 형식이이 장치에서 지원되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="525b811bb63f665169af147d94cba525353e0bc3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_ERROR_FRAGMENTED_POOL&lt;/code&gt; A pool allocation has failed due to fragmentation of the pool&amp;rsquo;s memory. This &lt;strong&gt;must&lt;/strong&gt; only be returned if no attempt to allocate host or device memory was made to accomodate the new allocation.</source>
          <target state="translated">&lt;code&gt;VK_ERROR_FRAGMENTED_POOL&lt;/code&gt; 풀 메모리 조각화로 인해 풀 할당에 실패했습니다. 이것은 새로운 할당을 수용하기 위해 호스트 또는 장치 메모리를 할당하려는 시도가없는 경우에만 리턴 &lt;strong&gt;되어야합니다&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="029904dc1741dd5b60013bb9c77600628af36152" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_ERROR_INCOMPATIBLE_DRIVER&lt;/code&gt; The requested version of Vulkan is not supported by the driver or is otherwise incompatible for implementation-specific reasons.</source>
          <target state="translated">&lt;code&gt;VK_ERROR_INCOMPATIBLE_DRIVER&lt;/code&gt; 요청한 Vulkan 버전이 드라이버에서 지원되지 않거나 구현 관련 이유로 호환되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="0f3ec8eb4f1abdcd551e79548b50f7a716f2bfeb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_ERROR_INITIALIZATION_FAILED&lt;/code&gt; Initialization of an object could not be completed for implementation-specific reasons.</source>
          <target state="translated">&lt;code&gt;VK_ERROR_INITIALIZATION_FAILED&lt;/code&gt; 구현 고유의 이유로 개체의 초기화를 완료 할 수 없었습니다.</target>
        </trans-unit>
        <trans-unit id="f9f27713a7d89da75391810d82e1c079bd886a4d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_ERROR_LAYER_NOT_PRESENT&lt;/code&gt; A requested layer is not present or could not be loaded.</source>
          <target state="translated">&lt;code&gt;VK_ERROR_LAYER_NOT_PRESENT&lt;/code&gt; 요청 된 레이어가 없거나로드 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="9116f39c730806e8046477796749ef422617cfb4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_ERROR_MEMORY_MAP_FAILED&lt;/code&gt; Mapping of a memory object has failed.</source>
          <target state="translated">&lt;code&gt;VK_ERROR_MEMORY_MAP_FAILED&lt;/code&gt; 메모리 객체의 매핑에 실패했습니다.</target>
        </trans-unit>
        <trans-unit id="a0938ee431d8ee337579243c13a110855eb09183" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_ERROR_OUT_OF_DEVICE_MEMORY&lt;/code&gt; A device memory allocation has failed.</source>
          <target state="translated">&lt;code&gt;VK_ERROR_OUT_OF_DEVICE_MEMORY&lt;/code&gt; 장치 메모리 할당에 실패했습니다.</target>
        </trans-unit>
        <trans-unit id="f466043e9d5af870c1a21749a381851b969416a4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_ERROR_OUT_OF_HOST_MEMORY&lt;/code&gt; A host memory allocation has failed.</source>
          <target state="translated">&lt;code&gt;VK_ERROR_OUT_OF_HOST_MEMORY&lt;/code&gt; 호스트 메모리 할당에 실패했습니다.</target>
        </trans-unit>
        <trans-unit id="6feadc0256698a2274a702f9434c4c562806949c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_ERROR_TOO_MANY_OBJECTS&lt;/code&gt; Too many objects of the type have already been created.</source>
          <target state="translated">&lt;code&gt;VK_ERROR_TOO_MANY_OBJECTS&lt;/code&gt; 유형이 너무 많은 오브젝트가 이미 작성되었습니다.</target>
        </trans-unit>
        <trans-unit id="b3c48beec3e50bd811af8f0f54c68280f3c96694" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_EVENT_RESET&lt;/code&gt; An event is unsignaled</source>
          <target state="translated">&lt;code&gt;VK_EVENT_RESET&lt;/code&gt; 이벤트가 서명되지 않았습니다</target>
        </trans-unit>
        <trans-unit id="6368f906f0137de88edb0bf441c73bfeb01590c5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_EVENT_SET&lt;/code&gt; An event is signaled</source>
          <target state="translated">&lt;code&gt;VK_EVENT_SET&lt;/code&gt; 이벤트가 발생했다</target>
        </trans-unit>
        <trans-unit id="3dd0c1414391a87c1cc56eea23869c9d0ac1056c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_FENCE_CREATE_SIGNALED_BIT&lt;/code&gt; specifies that the fence object is created in the signaled state. Otherwise, it is created in the unsignaled state.</source>
          <target state="translated">&lt;code&gt;VK_FENCE_CREATE_SIGNALED_BIT&lt;/code&gt; 는 차단 오브젝트가 신호 상태로 작성 되도록 지정합니다. 그렇지 않으면, 서명되지 않은 상태로 작성됩니다.</target>
        </trans-unit>
        <trans-unit id="29f9b26ad48489e79ce135947ddb94aa70562d94" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_FILTER_LINEAR&lt;/code&gt; specifies linear filtering.</source>
          <target state="translated">&lt;code&gt;VK_FILTER_LINEAR&lt;/code&gt; 은 선형 필터링을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="a68af695a654b2ef92ebf39a28dcc53f534f1045" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_FILTER_NEAREST&lt;/code&gt; specifies nearest filtering.</source>
          <target state="translated">&lt;code&gt;VK_FILTER_NEAREST&lt;/code&gt; 는 가장 가까운 필터링을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="ade286d5e079fb71fd2d054ad9d1a77dba44084f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_FORMAT_A1R5G5B5_UNORM_PACK16&lt;/code&gt; specifies a four-component, 16-bit packed unsigned normalized format that has a 1-bit A component in bit 15, a 5-bit R component in bits 10..14, a 5-bit G component in bits 5..9, and a 5-bit B component in bits 0..4.</source>
          <target state="translated">&lt;code&gt;VK_FORMAT_A1R5G5B5_UNORM_PACK16&lt;/code&gt; 은 비트 15의 1 비트 A 구성 요소, 비트 10..14의 5 비트 R 구성 요소, 비트 5의 5 비트 G 구성 요소를 갖는 4 성분 16 비트 팩형 부호없는 표준화 형식을 지정합니다. 비트 9에서 5 비트 B 구성 요소.</target>
        </trans-unit>
        <trans-unit id="bd6d8373d9aa188de34a8c17c9b59624fe51d13d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_FORMAT_A2B10G10R10_SINT_PACK32&lt;/code&gt; specifies a four-component, 32-bit packed signed integer format that has a 2-bit A component in bits 30..31, a 10-bit B component in bits 20..29, a 10-bit G component in bits 10..19, and a 10-bit R component in bits 0..9.</source>
          <target state="translated">&lt;code&gt;VK_FORMAT_A2B10G10R10_SINT_PACK32&lt;/code&gt; 는 비트 30..31의 2 비트 A 구성 요소, 비트 20..29의 10 비트 B 구성 요소, 비트의 10 비트 G 구성 요소를 갖는 4 개의 구성 요소, 32 비트 팩형 부호있는 정수 형식을 지정합니다. 비트 0..9의 10 비트 R 구성 요소.</target>
        </trans-unit>
        <trans-unit id="2a4a385314b6c7785fc6f567e138790df383beb2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_FORMAT_A2B10G10R10_SNORM_PACK32&lt;/code&gt; specifies a four-component, 32-bit packed signed normalized format that has a 2-bit A component in bits 30..31, a 10-bit B component in bits 20..29, a 10-bit G component in bits 10..19, and a 10-bit R component in bits 0..9.</source>
          <target state="translated">&lt;code&gt;VK_FORMAT_A2B10G10R10_SNORM_PACK32&lt;/code&gt; 는 비트 30..31의 2 비트 A 구성 요소, 비트 20..29의 10 비트 B 구성 요소, 비트의 10 비트 G 구성 요소를 갖는 4 성분, 32 비트 팩형 부호있는 정규화 된 형식을 지정합니다. 비트 0..9의 10 비트 R 구성 요소.</target>
        </trans-unit>
        <trans-unit id="d27dd209ca057159f1f1c367d2606607d7c77fba" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_FORMAT_A2B10G10R10_SSCALED_PACK32&lt;/code&gt; specifies a four-component, 32-bit packed signed scaled integer format that has a 2-bit A component in bits 30..31, a 10-bit B component in bits 20..29, a 10-bit G component in bits 10..19, and a 10-bit R component in bits 0..9.</source>
          <target state="translated">&lt;code&gt;VK_FORMAT_A2B10G10R10_SSCALED_PACK32&lt;/code&gt; 는 비트 30..31의 2 비트 A 구성 요소, 비트 20..29의 10 비트 B 구성 요소, 비트 10..29의 10 비트 B 구성 요소를 갖는 4 성분, 32 비트 팩형 부호있는 스케일 정수 형식을 지정합니다. 비트 10..19 및 비트 0..9의 10 비트 R 구성 요소.</target>
        </trans-unit>
        <trans-unit id="8ba8478e63575b3b564e69137d67860dbcd8b8d2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_FORMAT_A2B10G10R10_UINT_PACK32&lt;/code&gt; specifies a four-component, 32-bit packed unsigned integer format that has a 2-bit A component in bits 30..31, a 10-bit B component in bits 20..29, a 10-bit G component in bits 10..19, and a 10-bit R component in bits 0..9.</source>
          <target state="translated">&lt;code&gt;VK_FORMAT_A2B10G10R10_UINT_PACK32&lt;/code&gt; 는 비트 30..31의 2 비트 A 구성 요소, 비트 20..29의 10 비트 B 구성 요소, 비트의 10 비트 G 구성 요소를 갖는 4 성분, 32 비트 팩형 부호없는 정수 형식을 지정합니다. 비트 0..9의 10 비트 R 구성 요소.</target>
        </trans-unit>
        <trans-unit id="e8ba54df7126afc8194869ad3b79a2208751fa30" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_FORMAT_A2B10G10R10_UNORM_PACK32&lt;/code&gt; specifies a four-component, 32-bit packed unsigned normalized format that has a 2-bit A component in bits 30..31, a 10-bit B component in bits 20..29, a 10-bit G component in bits 10..19, and a 10-bit R component in bits 0..9.</source>
          <target state="translated">&lt;code&gt;VK_FORMAT_A2B10G10R10_UNORM_PACK32&lt;/code&gt; 는 비트 30..31의 2 비트 A 구성 요소, 비트 20..29의 10 비트 B 구성 요소, 비트의 10 비트 G 구성 요소를 갖는 4 개의 구성 요소, 32 비트 팩형 부호없는 표준화 형식을 지정합니다. 비트 0..9의 10 비트 R 구성 요소.</target>
        </trans-unit>
        <trans-unit id="ff6dcf9c0d2e3ba7d0d6331bb6d6d242f7a86503" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_FORMAT_A2B10G10R10_USCALED_PACK32&lt;/code&gt; specifies a four-component, 32-bit packed unsigned scaled integer format that has a 2-bit A component in bits 30..31, a 10-bit B component in bits 20..29, a 10-bit G component in bits 10..19, and a 10-bit R component in bits 0..9.</source>
          <target state="translated">&lt;code&gt;VK_FORMAT_A2B10G10R10_USCALED_PACK32&lt;/code&gt; 는 비트 30..31의 2 비트 A 구성 요소, 비트 20..29의 10 비트 B 구성 요소, 비트 20..29의 10 비트 B 구성 요소를 갖는 4 성분, 32 비트 팩형 부호없는 스케일링 정수 형식을 지정합니다. 비트 10..19 및 비트 0..9의 10 비트 R 구성 요소.</target>
        </trans-unit>
        <trans-unit id="f8c2beb51461a44cbfabcc97db6d367047b51e04" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_FORMAT_A2R10G10B10_SINT_PACK32&lt;/code&gt; specifies a four-component, 32-bit packed signed integer format that has a 2-bit A component in bits 30..31, a 10-bit R component in bits 20..29, a 10-bit G component in bits 10..19, and a 10-bit B component in bits 0..9.</source>
          <target state="translated">&lt;code&gt;VK_FORMAT_A2R10G10B10_SINT_PACK32&lt;/code&gt; 는 비트 30..31의 2 비트 A 구성 요소, 비트 20..29의 10 비트 R 구성 요소, 비트의 10 비트 G 구성 요소를 갖는 4 성분 32 비트 팩형 부호있는 정수 형식을 지정합니다. 비트 0..9의 10 비트 B 구성 요소.</target>
        </trans-unit>
        <trans-unit id="ca7113a1810208c542dd3964823136138e47195c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_FORMAT_A2R10G10B10_SNORM_PACK32&lt;/code&gt; specifies a four-component, 32-bit packed signed normalized format that has a 2-bit A component in bits 30..31, a 10-bit R component in bits 20..29, a 10-bit G component in bits 10..19, and a 10-bit B component in bits 0..9.</source>
          <target state="translated">&lt;code&gt;VK_FORMAT_A2R10G10B10_SNORM_PACK32&lt;/code&gt; 는 비트 30..31의 2 비트 A 구성 요소, 비트 20..29의 10 비트 R 구성 요소, 비트의 10 비트 G 구성 요소를 갖는 4 성분, 32 비트 팩형 부호있는 정규화 된 형식을 지정합니다. 비트 0..9의 10 비트 B 구성 요소.</target>
        </trans-unit>
        <trans-unit id="384ee4ed5ebe627924dccd7b07db2232e6b2fb1c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_FORMAT_A2R10G10B10_SSCALED_PACK32&lt;/code&gt; specifies a four-component, 32-bit packed signed scaled integer format that has a 2-bit A component in bits 30..31, a 10-bit R component in bits 20..29, a 10-bit G component in bits 10..19, and a 10-bit B component in bits 0..9.</source>
          <target state="translated">&lt;code&gt;VK_FORMAT_A2R10G10B10_SSCALED_PACK32&lt;/code&gt; 는 비트 30..31의 2 비트 A 구성 요소, 비트 20..29의 10 비트 R 구성 요소, 비트 20..29의 10 비트 R 구성 요소를 갖는 4 성분 32 비트 팩형 부호있는 정수 형식을 지정합니다. 비트 10..19 및 비트 0..9의 10 비트 B 구성 요소.</target>
        </trans-unit>
        <trans-unit id="9af32a5a7fbd92c20378a17584858b5691f4e243" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_FORMAT_A2R10G10B10_UINT_PACK32&lt;/code&gt; specifies a four-component, 32-bit packed unsigned integer format that has a 2-bit A component in bits 30..31, a 10-bit R component in bits 20..29, a 10-bit G component in bits 10..19, and a 10-bit B component in bits 0..9.</source>
          <target state="translated">&lt;code&gt;VK_FORMAT_A2R10G10B10_UINT_PACK32&lt;/code&gt; 는 비트 30..31의 2 비트 A 구성 요소, 비트 20..29의 10 비트 R 구성 요소, 비트의 10 비트 G 구성 요소를 갖는 4 성분 32 비트 팩형 부호없는 정수 형식을 지정합니다. 비트 0..9의 10 비트 B 구성 요소.</target>
        </trans-unit>
        <trans-unit id="8cf78dea3f2fed6f75b1a87a056997f754268353" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_FORMAT_A2R10G10B10_UNORM_PACK32&lt;/code&gt; specifies a four-component, 32-bit packed unsigned normalized format that has a 2-bit A component in bits 30..31, a 10-bit R component in bits 20..29, a 10-bit G component in bits 10..19, and a 10-bit B component in bits 0..9.</source>
          <target state="translated">&lt;code&gt;VK_FORMAT_A2R10G10B10_UNORM_PACK32&lt;/code&gt; 는 비트 30..31의 2 비트 A 구성 요소, 비트 20..29의 10 비트 R 구성 요소, 비트의 10 비트 G 구성 요소를 갖는 4 성분, 32 비트 팩형 부호없는 표준화 형식을 지정합니다. 비트 0..9의 10 비트 B 구성 요소.</target>
        </trans-unit>
        <trans-unit id="335a2f4c3850990260561c72f70972742f36d0ba" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_FORMAT_A2R10G10B10_USCALED_PACK32&lt;/code&gt; specifies a four-component, 32-bit packed unsigned scaled integer format that has a 2-bit A component in bits 30..31, a 10-bit R component in bits 20..29, a 10-bit G component in bits 10..19, and a 10-bit B component in bits 0..9.</source>
          <target state="translated">&lt;code&gt;VK_FORMAT_A2R10G10B10_USCALED_PACK32&lt;/code&gt; 는 비트 30..31의 2 비트 A 구성 요소, 비트 20..29의 10 비트 R 구성 요소, 비트 20..29의 10 비트 R 구성 요소를 갖는 4 성분, 32 비트 팩형 부호없는 스케일링 정수 형식을 지정합니다. 비트 10..19 및 비트 0..9의 10 비트 B 구성 요소.</target>
        </trans-unit>
        <trans-unit id="d40d100ceb9cb118498cd8c025adf4e8a9577140" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_FORMAT_A8B8G8R8_SINT_PACK32&lt;/code&gt; specifies a four-component, 32-bit packed signed integer format that has an 8-bit A component in bits 24..31, an 8-bit B component in bits 16..23, an 8-bit G component in bits 8..15, and an 8-bit R component in bits 0..7.</source>
          <target state="translated">&lt;code&gt;VK_FORMAT_A8B8G8R8_SINT_PACK32&lt;/code&gt; 는 비트 24..31의 8 비트 A 구성 요소, 비트 16..23의 8 비트 B 구성 요소, 비트의 8 비트 G 구성 요소를 갖는 4 개의 구성 요소, 32 비트 팩형 부호있는 정수 형식을 지정합니다. 8..15 및 비트 0..7의 8 비트 R 구성 요소</target>
        </trans-unit>
        <trans-unit id="0ab808c837999ea779b88616cab77132cecd4bde" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_FORMAT_A8B8G8R8_SNORM_PACK32&lt;/code&gt; specifies a four-component, 32-bit packed signed normalized format that has an 8-bit A component in bits 24..31, an 8-bit B component in bits 16..23, an 8-bit G component in bits 8..15, and an 8-bit R component in bits 0..7.</source>
          <target state="translated">&lt;code&gt;VK_FORMAT_A8B8G8R8_SNORM_PACK32&lt;/code&gt; 는 비트 24..31의 8 비트 A 구성 요소, 비트 16..23의 8 비트 B 구성 요소, 비트의 8 비트 G 구성 요소를 갖는 4 개의 구성 요소, 32 비트 팩형 부호있는 정규화 된 형식을 지정합니다. 8..15 및 비트 0..7의 8 비트 R 구성 요소</target>
        </trans-unit>
        <trans-unit id="2747f5df0dc54f4522f0e2f23e43cf543940dd72" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_FORMAT_A8B8G8R8_SRGB_PACK32&lt;/code&gt; specifies a four-component, 32-bit packed unsigned normalized format that has an 8-bit A component in bits 24..31, an 8-bit B component stored with sRGB nonlinear encoding in bits 16..23, an 8-bit G component stored with sRGB nonlinear encoding in bits 8..15, and an 8-bit R component stored with sRGB nonlinear encoding in bits 0..7.</source>
          <target state="translated">&lt;code&gt;VK_FORMAT_A8B8G8R8_SRGB_PACK32&lt;/code&gt; 는 비트 24..31 의 8 비트 A 구성 요소, 비트 16..23의 sRGB 비선형 인코딩으로 저장된 8 비트 B 구성 요소를 갖는 4 개의 구성 요소, 32 비트 팩형 부호없는 표준화 형식을 지정합니다. 비트 8..15에서 sRGB 비선형 인코딩으로 저장된 비트 G 구성 요소 및 비트 0..7에서 sRGB 비선형 인코딩으로 저장된 8 비트 R 구성 요소.</target>
        </trans-unit>
        <trans-unit id="4420b3ba833a4b88dcf3b011d3506f8c3fe6bf15" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_FORMAT_A8B8G8R8_SSCALED_PACK32&lt;/code&gt; specifies a four-component, 32-bit packed signed scaled integer format that has an 8-bit A component in bits 24..31, an 8-bit B component in bits 16..23, an 8-bit G component in bits 8..15, and an 8-bit R component in bits 0..7.</source>
          <target state="translated">&lt;code&gt;VK_FORMAT_A8B8G8R8_SSCALED_PACK32&lt;/code&gt; 는 비트 24..31의 8 비트 A 구성 요소, 비트 16..23의 8 비트 B 구성 요소, 비트 16..23의 8 비트 G 구성 요소를 갖는 4 개의 구성 요소, 32 비트 팩형 부호있는 스케일링 정수 형식을 지정합니다. 비트 8..15 및 비트 0..7의 8 비트 R 구성 요소.</target>
        </trans-unit>
        <trans-unit id="0b6bee3bc0e028980fe57ce9125401a78c399796" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_FORMAT_A8B8G8R8_UINT_PACK32&lt;/code&gt; specifies a four-component, 32-bit packed unsigned integer format that has an 8-bit A component in bits 24..31, an 8-bit B component in bits 16..23, an 8-bit G component in bits 8..15, and an 8-bit R component in bits 0..7.</source>
          <target state="translated">&lt;code&gt;VK_FORMAT_A8B8G8R8_UINT_PACK32&lt;/code&gt; 는 비트 24..31의 8 비트 A 구성 요소, 비트 16..23의 8 비트 B 구성 요소, 비트의 8 비트 G 구성 요소를 갖는 4 성분, 32 비트 팩형 부호없는 정수 형식을 지정합니다. 8..15 및 비트 0..7의 8 비트 R 구성 요소</target>
        </trans-unit>
        <trans-unit id="ecd6c0fbe8d6d77f4c94843f806ff2cb06fa5dd6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_FORMAT_A8B8G8R8_UNORM_PACK32&lt;/code&gt; specifies a four-component, 32-bit packed unsigned normalized format that has an 8-bit A component in bits 24..31, an 8-bit B component in bits 16..23, an 8-bit G component in bits 8..15, and an 8-bit R component in bits 0..7.</source>
          <target state="translated">&lt;code&gt;VK_FORMAT_A8B8G8R8_UNORM_PACK32&lt;/code&gt; 는 비트 24..31의 8 비트 A 구성 요소, 비트 16..23의 8 비트 B 구성 요소, 비트의 8 비트 G 구성 요소를 갖는 4 개의 구성 요소, 32 비트 팩형 부호없는 표준화 형식을 지정합니다. 8..15 및 비트 0..7의 8 비트 R 구성 요소</target>
        </trans-unit>
        <trans-unit id="b69ace6cb76a32acb595789c43ce81687f868e5a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_FORMAT_A8B8G8R8_USCALED_PACK32&lt;/code&gt; specifies a four-component, 32-bit packed unsigned scaled integer format that has an 8-bit A component in bits 24..31, an 8-bit B component in bits 16..23, an 8-bit G component in bits 8..15, and an 8-bit R component in bits 0..7.</source>
          <target state="translated">&lt;code&gt;VK_FORMAT_A8B8G8R8_USCALED_PACK32&lt;/code&gt; 는 비트 24..31의 8 비트 A 구성 요소, 비트 16..23의 8 비트 B 구성 요소, 비트 16..23의 8 비트 G 구성 요소를 갖는 4 성분, 32 비트 팩형 부호없는 스케일링 정수 형식을 지정합니다. 비트 8..15 및 비트 0..7의 8 비트 R 구성 요소.</target>
        </trans-unit>
        <trans-unit id="c80aac431ca832c381dc3ac32ccc5b88fb1f9f28" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_FORMAT_ASTC_10x10_SRGB_BLOCK&lt;/code&gt; specifies a four-component, ASTC compressed format where each 128-bit compressed texel block encodes a 10&amp;times;10 rectangle of unsigned normalized RGBA texel data with sRGB nonlinear encoding applied to the RGB components.</source>
          <target state="translated">&lt;code&gt;VK_FORMAT_ASTC_10x10_SRGB_BLOCK&lt;/code&gt; 은 각 128 비트 압축 텍셀 블록이 RGB 구성 요소에 적용된 sRGB 비선형 인코딩을 사용하여 10x10 직사각형의 서명되지 않은 정규화 된 RGBA 텍셀 데이터를 인코딩하는 4 가지 구성 요소 ASTC 압축 형식을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="36a14e558eeb12a6b7e1d924cf4072ff6ee2f7c0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_FORMAT_ASTC_10x10_UNORM_BLOCK&lt;/code&gt; specifies a four-component, ASTC compressed format where each 128-bit compressed texel block encodes a 10&amp;times;10 rectangle of unsigned normalized RGBA texel data.</source>
          <target state="translated">&lt;code&gt;VK_FORMAT_ASTC_10x10_UNORM_BLOCK&lt;/code&gt; 은 각 128 비트 압축 텍셀 블록이 10x10 직사각형의 부호없는 정규화 된 RGBA 텍셀 데이터를 인코딩하는 4 가지 구성 요소 ASTC 압축 형식을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="dc0c335783336e4c421d611a27c8cd48cadc0fe4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_FORMAT_ASTC_10x5_SRGB_BLOCK&lt;/code&gt; specifies a four-component, ASTC compressed format where each 128-bit compressed texel block encodes a 10&amp;times;5 rectangle of unsigned normalized RGBA texel data with sRGB nonlinear encoding applied to the RGB components.</source>
          <target state="translated">&lt;code&gt;VK_FORMAT_ASTC_10x5_SRGB_BLOCK&lt;/code&gt; 은 각 128 비트 압축 텍셀 블록이 RGB 구성 요소에 적용된 sRGB 비선형 인코딩을 사용하여 10x5 사각형의 서명되지 않은 정규화 된 RGBA 텍셀 데이터를 인코딩하는 4 가지 구성 요소 ASTC 압축 형식을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="b81f530185dbd7ee1b724c4530e9d4997479aef1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_FORMAT_ASTC_10x5_UNORM_BLOCK&lt;/code&gt; specifies a four-component, ASTC compressed format where each 128-bit compressed texel block encodes a 10&amp;times;5 rectangle of unsigned normalized RGBA texel data.</source>
          <target state="translated">&lt;code&gt;VK_FORMAT_ASTC_10x5_UNORM_BLOCK&lt;/code&gt; 은 각 128 비트 압축 텍셀 블록이 10x5 사각형의 부호없는 정규화 된 RGBA 텍셀 데이터를 인코딩하는 4 가지 구성 요소 ASTC 압축 형식을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="8d79546d15c9dce51fea7e761e0c5e77bb519935" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_FORMAT_ASTC_10x6_SRGB_BLOCK&lt;/code&gt; specifies a four-component, ASTC compressed format where each 128-bit compressed texel block encodes a 10&amp;times;6 rectangle of unsigned normalized RGBA texel data with sRGB nonlinear encoding applied to the RGB components.</source>
          <target state="translated">&lt;code&gt;VK_FORMAT_ASTC_10x6_SRGB_BLOCK&lt;/code&gt; 은 각 128 비트 압축 텍셀 블록이 RGB 구성 요소에 적용된 sRGB 비선형 인코딩을 사용하여 10x6 직사각형의 서명되지 않은 정규화 된 RGBA 텍셀 데이터를 인코딩하는 4 가지 구성 요소 ASTC 압축 형식을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="d5384c70e2d94054e369d988448dce610212954c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_FORMAT_ASTC_10x6_UNORM_BLOCK&lt;/code&gt; specifies a four-component, ASTC compressed format where each 128-bit compressed texel block encodes a 10&amp;times;6 rectangle of unsigned normalized RGBA texel data.</source>
          <target state="translated">&lt;code&gt;VK_FORMAT_ASTC_10x6_UNORM_BLOCK&lt;/code&gt; 은 각 128 비트 압축 텍셀 블록이 10x6 사각형의 부호없는 정규화 된 RGBA 텍셀 데이터를 인코딩하는 4 가지 구성 요소 ASTC 압축 형식을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="aa76ee9cca9a73f2b539e56834b6036995110c35" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_FORMAT_ASTC_10x8_SRGB_BLOCK&lt;/code&gt; specifies a four-component, ASTC compressed format where each 128-bit compressed texel block encodes a 10&amp;times;8 rectangle of unsigned normalized RGBA texel data with sRGB nonlinear encoding applied to the RGB components.</source>
          <target state="translated">&lt;code&gt;VK_FORMAT_ASTC_10x8_SRGB_BLOCK&lt;/code&gt; 은 각 128 비트 압축 텍셀 블록이 RGB 구성 요소에 적용된 sRGB 비선형 인코딩을 사용하여 10x8 사각형의 서명되지 않은 정규화 된 RGBA 텍셀 데이터를 인코딩하는 4 가지 구성 요소 ASTC 압축 형식을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="78761a362c576908c59f54d1bb11bc2bf304cfa4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_FORMAT_ASTC_10x8_UNORM_BLOCK&lt;/code&gt; specifies a four-component, ASTC compressed format where each 128-bit compressed texel block encodes a 10&amp;times;8 rectangle of unsigned normalized RGBA texel data.</source>
          <target state="translated">&lt;code&gt;VK_FORMAT_ASTC_10x8_UNORM_BLOCK&lt;/code&gt; 은 각 128 비트 압축 텍셀 블록이 10x8 사각형의 부호없는 정규화 된 RGBA 텍셀 데이터를 인코딩하는 4 가지 구성 요소 ASTC 압축 형식을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="e53eb202ff1852afff215b5f053a7abaa9f8d3bf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_FORMAT_ASTC_12x10_SRGB_BLOCK&lt;/code&gt; specifies a four-component, ASTC compressed format where each 128-bit compressed texel block encodes a 12&amp;times;10 rectangle of unsigned normalized RGBA texel data with sRGB nonlinear encoding applied to the RGB components.</source>
          <target state="translated">&lt;code&gt;VK_FORMAT_ASTC_12x10_SRGB_BLOCK&lt;/code&gt; 은 각 128 비트 압축 텍셀 블록이 RGB 구성 요소에 적용된 sRGB 비선형 인코딩을 사용하여 12x10 직사각형의 서명되지 않은 정규화 된 RGBA 텍셀 데이터를 인코딩하는 4 가지 구성 요소 ASTC 압축 형식을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="432e34fa29fa2ed3fc11098d2e39c1a34bde55f4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_FORMAT_ASTC_12x10_UNORM_BLOCK&lt;/code&gt; specifies a four-component, ASTC compressed format where each 128-bit compressed texel block encodes a 12&amp;times;10 rectangle of unsigned normalized RGBA texel data.</source>
          <target state="translated">&lt;code&gt;VK_FORMAT_ASTC_12x10_UNORM_BLOCK&lt;/code&gt; 은 각 128 비트 압축 텍셀 블록이 서명되지 않은 정규화 된 RGBA 텍셀 데이터의 12x10 사각형을 인코딩하는 4 가지 구성 요소 ASTC 압축 형식을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="c9a74b869934aa2c1d3ea12a588fd1336cb98ff6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_FORMAT_ASTC_12x12_SRGB_BLOCK&lt;/code&gt; specifies a four-component, ASTC compressed format where each 128-bit compressed texel block encodes a 12&amp;times;12 rectangle of unsigned normalized RGBA texel data with sRGB nonlinear encoding applied to the RGB components.</source>
          <target state="translated">&lt;code&gt;VK_FORMAT_ASTC_12x12_SRGB_BLOCK&lt;/code&gt; 은 각 128 비트 압축 텍셀 블록이 RGB 구성 요소에 적용된 sRGB 비선형 인코딩을 사용하여 12x12 직사각형의 서명되지 않은 정규화 된 RGBA 텍셀 데이터를 인코딩하는 4 가지 구성 요소 ASTC 압축 형식을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="72114cff8b8bc87000b32078ed44ed0d0340e6dc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_FORMAT_ASTC_12x12_UNORM_BLOCK&lt;/code&gt; specifies a four-component, ASTC compressed format where each 128-bit compressed texel block encodes a 12&amp;times;12 rectangle of unsigned normalized RGBA texel data.</source>
          <target state="translated">&lt;code&gt;VK_FORMAT_ASTC_12x12_UNORM_BLOCK&lt;/code&gt; 은 각 128 비트 압축 텍셀 블록이 12x12 직사각형의 부호없는 정규화 된 RGBA 텍셀 데이터를 인코딩하는 4 가지 구성 요소 ASTC 압축 형식을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="01166b36eaf94e16df223bc3164c8965fb3cef2e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_FORMAT_ASTC_4x4_SRGB_BLOCK&lt;/code&gt; specifies a four-component, ASTC compressed format where each 128-bit compressed texel block encodes a 4&amp;times;4 rectangle of unsigned normalized RGBA texel data with sRGB nonlinear encoding applied to the RGB components.</source>
          <target state="translated">&lt;code&gt;VK_FORMAT_ASTC_4x4_SRGB_BLOCK&lt;/code&gt; 은 각 128 비트 압축 텍셀 블록이 RGB 구성 요소에 적용된 sRGB 비선형 인코딩을 사용하여 4x4 직사각형의 부호없는 정규화 된 RGBA 텍셀 데이터를 인코딩하는 4 가지 구성 요소 ASTC 압축 형식을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="976a99d15dc4dc4580199805551df39f8f1d3cf8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_FORMAT_ASTC_4x4_UNORM_BLOCK&lt;/code&gt; specifies a four-component, ASTC compressed format where each 128-bit compressed texel block encodes a 4&amp;times;4 rectangle of unsigned normalized RGBA texel data.</source>
          <target state="translated">&lt;code&gt;VK_FORMAT_ASTC_4x4_UNORM_BLOCK&lt;/code&gt; 은 각 128 비트 압축 텍셀 블록이 서명되지 않은 정규화 된 RGBA 텍셀 데이터의 4x4 사각형을 인코딩하는 4 가지 구성 요소 ASTC 압축 형식을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="c56fc2be893793b70d69079a89f5a603dc926fb2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_FORMAT_ASTC_5x4_SRGB_BLOCK&lt;/code&gt; specifies a four-component, ASTC compressed format where each 128-bit compressed texel block encodes a 5&amp;times;4 rectangle of unsigned normalized RGBA texel data with sRGB nonlinear encoding applied to the RGB components.</source>
          <target state="translated">&lt;code&gt;VK_FORMAT_ASTC_5x4_SRGB_BLOCK&lt;/code&gt; 은 각 128 비트 압축 텍셀 블록이 RGB 구성 요소에 적용된 sRGB 비선형 인코딩을 사용하여 서명되지 않은 정규화 된 RGBA 텍셀 데이터의 5x4 사각형을 인코딩하는 4 가지 구성 요소 ASTC 압축 형식을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="b5e76327ae139dd09cc05dd6f585d3a359d873a0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_FORMAT_ASTC_5x4_UNORM_BLOCK&lt;/code&gt; specifies a four-component, ASTC compressed format where each 128-bit compressed texel block encodes a 5&amp;times;4 rectangle of unsigned normalized RGBA texel data.</source>
          <target state="translated">&lt;code&gt;VK_FORMAT_ASTC_5x4_UNORM_BLOCK&lt;/code&gt; 은 각 128 비트 압축 텍셀 블록이 서명되지 않은 정규화 된 RGBA 텍셀 데이터의 5x4 사각형을 인코딩하는 4 가지 구성 요소 ASTC 압축 형식을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="2fc723724eed2da3b2d903dea58d5fe442f4d081" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_FORMAT_ASTC_5x5_SRGB_BLOCK&lt;/code&gt; specifies a four-component, ASTC compressed format where each 128-bit compressed texel block encodes a 5&amp;times;5 rectangle of unsigned normalized RGBA texel data with sRGB nonlinear encoding applied to the RGB components.</source>
          <target state="translated">&lt;code&gt;VK_FORMAT_ASTC_5x5_SRGB_BLOCK&lt;/code&gt; 은 각 128 비트 압축 텍셀 블록이 RGB 구성 요소에 적용된 sRGB 비선형 인코딩을 사용하여 5x5 사각형의 부호없는 정규화 된 RGBA 텍셀 데이터를 인코딩하는 4 가지 구성 요소 ASTC 압축 형식을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="bfee215a87d62cc96802d25822a57e727405081d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_FORMAT_ASTC_5x5_UNORM_BLOCK&lt;/code&gt; specifies a four-component, ASTC compressed format where each 128-bit compressed texel block encodes a 5&amp;times;5 rectangle of unsigned normalized RGBA texel data.</source>
          <target state="translated">&lt;code&gt;VK_FORMAT_ASTC_5x5_UNORM_BLOCK&lt;/code&gt; 은 각 128 비트 압축 텍셀 블록이 서명되지 않은 정규화 된 RGBA 텍셀 데이터의 5x5 사각형을 인코딩하는 4 가지 구성 요소 ASTC 압축 형식을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="c5392ec9ff974e3335a420eb175f93664db6f770" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_FORMAT_ASTC_6x5_SRGB_BLOCK&lt;/code&gt; specifies a four-component, ASTC compressed format where each 128-bit compressed texel block encodes a 6&amp;times;5 rectangle of unsigned normalized RGBA texel data with sRGB nonlinear encoding applied to the RGB components.</source>
          <target state="translated">&lt;code&gt;VK_FORMAT_ASTC_6x5_SRGB_BLOCK&lt;/code&gt; 은 각 128 비트 압축 텍셀 블록이 RGB 구성 요소에 적용된 sRGB 비선형 인코딩을 사용하여 서명되지 않은 정규화 된 RGBA 텍셀 데이터의 6x5 사각형을 인코딩하는 4 가지 구성 요소 ASTC 압축 형식을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="6fdf707d80adfa0f2558aa62fbd3fa2cdc590596" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_FORMAT_ASTC_6x5_UNORM_BLOCK&lt;/code&gt; specifies a four-component, ASTC compressed format where each 128-bit compressed texel block encodes a 6&amp;times;5 rectangle of unsigned normalized RGBA texel data.</source>
          <target state="translated">&lt;code&gt;VK_FORMAT_ASTC_6x5_UNORM_BLOCK&lt;/code&gt; 은 각 128 비트 압축 텍셀 블록이 서명되지 않은 정규화 된 RGBA 텍셀 데이터의 6x5 사각형을 인코딩하는 4 가지 구성 요소 ASTC 압축 형식을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="3deff485358059711297427cd23fc4cd76491997" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_FORMAT_ASTC_6x6_SRGB_BLOCK&lt;/code&gt; specifies a four-component, ASTC compressed format where each 128-bit compressed texel block encodes a 6&amp;times;6 rectangle of unsigned normalized RGBA texel data with sRGB nonlinear encoding applied to the RGB components.</source>
          <target state="translated">&lt;code&gt;VK_FORMAT_ASTC_6x6_SRGB_BLOCK&lt;/code&gt; 은 각 128 비트 압축 텍셀 블록이 RGB 구성 요소에 적용된 sRGB 비선형 인코딩을 사용하여 서명되지 않은 정규화 된 RGBA 텍셀 데이터의 6x6 사각형을 인코딩하는 4 가지 구성 요소 ASTC 압축 형식을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="0e703497e685e9acc92f2e3676fd5858e0dd2de9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_FORMAT_ASTC_6x6_UNORM_BLOCK&lt;/code&gt; specifies a four-component, ASTC compressed format where each 128-bit compressed texel block encodes a 6&amp;times;6 rectangle of unsigned normalized RGBA texel data.</source>
          <target state="translated">&lt;code&gt;VK_FORMAT_ASTC_6x6_UNORM_BLOCK&lt;/code&gt; 은 각 128 비트 압축 텍셀 블록이 서명되지 않은 정규화 된 RGBA 텍셀 데이터의 6x6 사각형을 인코딩하는 4 가지 구성 요소 ASTC 압축 형식을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="60ce1fc55a5949fe1575a149e1ac3c58f6fc37be" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_FORMAT_ASTC_8x5_SRGB_BLOCK&lt;/code&gt; specifies a four-component, ASTC compressed format where each 128-bit compressed texel block encodes an 8&amp;times;5 rectangle of unsigned normalized RGBA texel data with sRGB nonlinear encoding applied to the RGB components.</source>
          <target state="translated">&lt;code&gt;VK_FORMAT_ASTC_8x5_SRGB_BLOCK&lt;/code&gt; 은 각 128 비트 압축 텍셀 블록이 RGB 구성 요소에 적용된 sRGB 비선형 인코딩을 사용하여 서명되지 않은 정규화 된 RGBA 텍셀 데이터의 8x5 사각형을 인코딩하는 4 가지 구성 요소 ASTC 압축 형식을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="a8067b9073ec449372942d35d4404d643862a2af" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_FORMAT_ASTC_8x5_UNORM_BLOCK&lt;/code&gt; specifies a four-component, ASTC compressed format where each 128-bit compressed texel block encodes an 8&amp;times;5 rectangle of unsigned normalized RGBA texel data.</source>
          <target state="translated">&lt;code&gt;VK_FORMAT_ASTC_8x5_UNORM_BLOCK&lt;/code&gt; 은 각 128 비트 압축 텍셀 블록이 8x5 사각형의 부호없는 정규화 된 RGBA 텍셀 데이터를 인코딩하는 4 가지 구성 요소 ASTC 압축 형식을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="29dcc49bb7fd84176e516ea20a0ec76c837d41eb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_FORMAT_ASTC_8x6_SRGB_BLOCK&lt;/code&gt; specifies a four-component, ASTC compressed format where each 128-bit compressed texel block encodes an 8&amp;times;6 rectangle of unsigned normalized RGBA texel data with sRGB nonlinear encoding applied to the RGB components.</source>
          <target state="translated">&lt;code&gt;VK_FORMAT_ASTC_8x6_SRGB_BLOCK&lt;/code&gt; 은 각 128 비트 압축 텍셀 블록이 RGB 구성 요소에 적용된 sRGB 비선형 인코딩을 사용하여 서명되지 않은 정규화 된 RGBA 텍셀 데이터의 8x6 사각형을 인코딩하는 4 가지 구성 요소 ASTC 압축 형식을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="0b4d7fe6b64aae554f611639f05557df6953ee17" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_FORMAT_ASTC_8x6_UNORM_BLOCK&lt;/code&gt; specifies a four-component, ASTC compressed format where each 128-bit compressed texel block encodes an 8&amp;times;6 rectangle of unsigned normalized RGBA texel data.</source>
          <target state="translated">&lt;code&gt;VK_FORMAT_ASTC_8x6_UNORM_BLOCK&lt;/code&gt; 은 각 128 비트 압축 텍셀 블록이 8x6 사각형의 부호없는 정규화 된 RGBA 텍셀 데이터를 인코딩하는 4 가지 구성 요소 ASTC 압축 형식을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="f6e409b036157ee6ea9d2ef3c703a181eb1ec22a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_FORMAT_ASTC_8x8_SRGB_BLOCK&lt;/code&gt; specifies a four-component, ASTC compressed format where each 128-bit compressed texel block encodes an 8&amp;times;8 rectangle of unsigned normalized RGBA texel data with sRGB nonlinear encoding applied to the RGB components.</source>
          <target state="translated">&lt;code&gt;VK_FORMAT_ASTC_8x8_SRGB_BLOCK&lt;/code&gt; 은 각 128 비트 압축 텍셀 블록이 RGB 구성 요소에 적용된 sRGB 비선형 인코딩을 사용하여 서명되지 않은 정규화 된 RGBA 텍셀 데이터의 8x8 사각형을 인코딩하는 4 가지 구성 요소 ASTC 압축 형식을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="5536f629a3523dec13ca0b97c81a341ea618319c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_FORMAT_ASTC_8x8_UNORM_BLOCK&lt;/code&gt; specifies a four-component, ASTC compressed format where each 128-bit compressed texel block encodes an 8&amp;times;8 rectangle of unsigned normalized RGBA texel data.</source>
          <target state="translated">&lt;code&gt;VK_FORMAT_ASTC_8x8_UNORM_BLOCK&lt;/code&gt; 은 각 128 비트 압축 텍셀 블록이 8x8 사각형의 부호없는 정규화 된 RGBA 텍셀 데이터를 인코딩하는 4 가지 구성 요소 ASTC 압축 형식을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="25a7344d058ed9386acc57bee960eaae69b31f35" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_FORMAT_B10G11R11_UFLOAT_PACK32&lt;/code&gt; specifies a three-component, 32-bit packed unsigned floating-point format that has a 10-bit B component in bits 22..31, an 11-bit G component in bits 11..21, an 11-bit R component in bits 0..10. See &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#fundamentals-fp10&quot;&gt;html/vkspec.html#fundamentals-fp10&lt;/a&gt; and &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#fundamentals-fp11&quot;&gt;html/vkspec.html#fundamentals-fp11&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;VK_FORMAT_B10G11R11_UFLOAT_PACK32&lt;/code&gt; 는 비트 22..31의 10 비트 B 구성 요소, 비트 11..21의 11 비트 G 구성 요소, 11 비트 R 구성 요소를 갖는 3 성분, 32 비트 팩형 부호없는 부동 소수점 형식을 지정합니다. 비트 0..10. 참조 &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#fundamentals-fp10&quot;&gt;HTML / vkspec.html # 기본-fp10&lt;/a&gt; 및 &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#fundamentals-fp11&quot;&gt;HTML / vkspec.html # 기본-FP11을&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="6a6ce36b9c587586ef54bf35aca9e42a4e8dcb96" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_FORMAT_B4G4R4A4_UNORM_PACK16&lt;/code&gt; specifies a four-component, 16-bit packed unsigned normalized format that has a 4-bit B component in bits 12..15, a 4-bit G component in bits 8..11, a 4-bit R component in bits 4..7, and a 4-bit A component in bits 0..3.</source>
          <target state="translated">&lt;code&gt;VK_FORMAT_B4G4R4A4_UNORM_PACK16&lt;/code&gt; 은 비트 12..15의 4 비트 B 구성 요소, 비트 8..11의 4 비트 G 구성 요소, 비트의 4 비트 R 구성 요소를 갖는 4 성분 16 비트 팩형 부호없는 정규화 된 형식을 지정합니다. 4..7 및 비트 0..3의 4 비트 A 구성 요소</target>
        </trans-unit>
        <trans-unit id="55cf531357a0b6e33f159a41f61e78f07ee697cd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_FORMAT_B5G5R5A1_UNORM_PACK16&lt;/code&gt; specifies a four-component, 16-bit packed unsigned normalized format that has a 5-bit B component in bits 11..15, a 5-bit G component in bits 6..10, a 5-bit R component in bits 1..5, and a 1-bit A component in bit 0.</source>
          <target state="translated">&lt;code&gt;VK_FORMAT_B5G5R5A1_UNORM_PACK16&lt;/code&gt; 은 비트 11..15의 5 비트 B 구성 요소, 비트 6..10의 5 비트 G 구성 요소, 비트의 5 비트 R 구성 요소를 갖는 4 성분 16 비트 팩형 부호없는 표준화 형식을 지정합니다. 1..5 및 비트 0의 1 비트 A 구성 요소</target>
        </trans-unit>
        <trans-unit id="56af43b577614aefc488b80f4e5342a692b4bfcf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_FORMAT_B5G6R5_UNORM_PACK16&lt;/code&gt; specifies a three-component, 16-bit packed unsigned normalized format that has a 5-bit B component in bits 11..15, a 6-bit G component in bits 5..10, and a 5-bit R component in bits 0..4.</source>
          <target state="translated">&lt;code&gt;VK_FORMAT_B5G6R5_UNORM_PACK16&lt;/code&gt; 은 비트 11..15의 5 비트 B 구성 요소, 비트 5..10의 6 비트 G 구성 요소 및 비트 5..10의 5 비트 R 구성 요소를 갖는 3 성분 16 비트 팩형 부호없는 표준화 형식을 지정합니다. 비트 0..4.</target>
        </trans-unit>
        <trans-unit id="60efee25e5d3257f870ad01773a492696cc979ba" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_FORMAT_B8G8R8A8_SINT&lt;/code&gt; specifies a four-component, 32-bit signed integer format that has an 8-bit B component in byte 0, an 8-bit G component in byte 1, an 8-bit R component in byte 2, and an 8-bit A component in byte 3.</source>
          <target state="translated">&lt;code&gt;VK_FORMAT_B8G8R8A8_SINT&lt;/code&gt; 는 바이트 0의 8 비트 B 구성 요소, 바이트 1의 8 비트 G 구성 요소, 바이트 2의 8 비트 R 구성 요소 및 8 비트를 갖는 4 성분 32 비트 부호있는 정수 형식을 지정합니다. 바이트 3의 구성 요소</target>
        </trans-unit>
        <trans-unit id="f96cbf12748f55c6867718cb15a5a039704f6388" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_FORMAT_B8G8R8A8_SNORM&lt;/code&gt; specifies a four-component, 32-bit signed normalized format that has an 8-bit B component in byte 0, an 8-bit G component in byte 1, an 8-bit R component in byte 2, and an 8-bit A component in byte 3.</source>
          <target state="translated">&lt;code&gt;VK_FORMAT_B8G8R8A8_SNORM&lt;/code&gt; 은 바이트 0의 8 비트 B 구성 요소, 바이트 1의 8 비트 G 구성 요소, 바이트 2의 8 비트 R 구성 요소 및 8 비트를 갖는 4 개의 구성 요소, 32 비트 부호있는 정규화 된 형식을 지정합니다. 바이트 3의 구성 요소</target>
        </trans-unit>
        <trans-unit id="795c072965d74d87b6acd0b54c47a3af92e3e03f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_FORMAT_B8G8R8A8_SRGB&lt;/code&gt; specifies a four-component, 32-bit unsigned normalized format that has an 8-bit B component stored with sRGB nonlinear encoding in byte 0, an 8-bit G component stored with sRGB nonlinear encoding in byte 1, an 8-bit R component stored with sRGB nonlinear encoding in byte 2, and an 8-bit A component in byte 3.</source>
          <target state="translated">&lt;code&gt;VK_FORMAT_B8G8R8A8_SRGB&lt;/code&gt; 는 바이트 0으로 sRGB 비선형 인코딩으로 저장된 8 비트 B 구성 요소, 바이트 1에서 sRGB 비선형 인코딩으로 저장된 8 비트 G 구성 요소, 8 비트 R로 구성된 4 성분, 32 비트 부호없는 정규화 된 형식을 지정합니다. 바이트 2에 sRGB 비선형 인코딩과 바이트 3에 8 비트 A 구성 요소가 저장된 구성 요소</target>
        </trans-unit>
        <trans-unit id="99ccd556fb17307691460a1fa4d7d290057a2791" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_FORMAT_B8G8R8A8_SSCALED&lt;/code&gt; specifies a four-component, 32-bit signed scaled format that has an 8-bit B component in byte 0, an 8-bit G component in byte 1, an 8-bit R component in byte 2, and an 8-bit A component in byte 3.</source>
          <target state="translated">&lt;code&gt;VK_FORMAT_B8G8R8A8_SSCALED&lt;/code&gt; 는 바이트 0의 8 비트 B 구성 요소, 바이트 1의 8 비트 G 구성 요소, 바이트 2의 8 비트 R 구성 요소 및 8 비트의 4 가지 구성 요소, 32 비트 부호있는 스케일 형식을 지정합니다. 바이트 3의 구성 요소</target>
        </trans-unit>
        <trans-unit id="034b194c33c7e94ef4c2da6ca7a9c7e21acd78d6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_FORMAT_B8G8R8A8_UINT&lt;/code&gt; specifies a four-component, 32-bit unsigned integer format that has an 8-bit B component in byte 0, an 8-bit G component in byte 1, an 8-bit R component in byte 2, and an 8-bit A component in byte 3.</source>
          <target state="translated">&lt;code&gt;VK_FORMAT_B8G8R8A8_UINT&lt;/code&gt; 는 바이트 0의 8 비트 B 구성 요소, 바이트 1의 8 비트 G 구성 요소, 바이트 2의 8 비트 R 구성 요소 및 8 비트를 갖는 4 성분 32 비트 부호없는 정수 형식을 지정합니다. 바이트 3의 구성 요소</target>
        </trans-unit>
        <trans-unit id="8d00f0c27e89fb6787f9bdc99ad89e9bc9e2692e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_FORMAT_B8G8R8A8_UNORM&lt;/code&gt; specifies a four-component, 32-bit unsigned normalized format that has an 8-bit B component in byte 0, an 8-bit G component in byte 1, an 8-bit R component in byte 2, and an 8-bit A component in byte 3.</source>
          <target state="translated">&lt;code&gt;VK_FORMAT_B8G8R8A8_UNORM&lt;/code&gt; 은 바이트 0의 8 비트 B 구성 요소, 바이트 1의 8 비트 G 구성 요소, 바이트 2의 8 비트 R 구성 요소 및 8 비트를 갖는 4 성분 32 비트 부호없는 정규화 된 형식을 지정합니다. 바이트 3의 구성 요소</target>
        </trans-unit>
        <trans-unit id="bba2ba1bbbdc5af233bc9ab3a805478c1c5954a4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_FORMAT_B8G8R8A8_USCALED&lt;/code&gt; specifies a four-component, 32-bit unsigned scaled format that has an 8-bit B component in byte 0, an 8-bit G component in byte 1, an 8-bit R component in byte 2, and an 8-bit A component in byte 3.</source>
          <target state="translated">&lt;code&gt;VK_FORMAT_B8G8R8A8_USCALED&lt;/code&gt; 는 바이트 0의 8 비트 B 구성 요소, 바이트 1의 8 비트 G 구성 요소, 바이트 2의 8 비트 R 구성 요소 및 8 비트를 갖는 4 성분, 32 비트 부호없는 스케일 형식을 지정합니다. 바이트 3의 구성 요소</target>
        </trans-unit>
        <trans-unit id="f688746d4b576d64ce33e7703a43afff8c9d893c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_FORMAT_B8G8R8_SINT&lt;/code&gt; specifies a three-component, 24-bit signed integer format that has an 8-bit B component in byte 0, an 8-bit G component in byte 1, and an 8-bit R component in byte 2.</source>
          <target state="translated">&lt;code&gt;VK_FORMAT_B8G8R8_SINT&lt;/code&gt; 는 바이트 0에 8 비트 B 구성 요소, 바이트 1에 8 비트 G 구성 요소 및 바이트 2에 8 비트 R 구성 요소가있는 3 성분, 24 비트 부호있는 정수 형식을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="f676d764c4ed78e0a50308c577dc4bf94a6aa6b4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_FORMAT_B8G8R8_SNORM&lt;/code&gt; specifies a three-component, 24-bit signed normalized format that has an 8-bit B component in byte 0, an 8-bit G component in byte 1, and an 8-bit R component in byte 2.</source>
          <target state="translated">&lt;code&gt;VK_FORMAT_B8G8R8_SNORM&lt;/code&gt; 은 바이트 0의 8 비트 B 구성 요소, 바이트 1의 8 비트 G 구성 요소 및 바이트 2의 8 비트 R 구성 요소를 갖는 3 성분, 24 비트 부호있는 정규화 된 형식을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="b58368edb6607e72f482c6aaff0523f9d57308ca" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_FORMAT_B8G8R8_SRGB&lt;/code&gt; specifies a three-component, 24-bit unsigned normalized format that has an 8-bit B component stored with sRGB nonlinear encoding in byte 0, an 8-bit G component stored with sRGB nonlinear encoding in byte 1, and an 8-bit R component stored with sRGB nonlinear encoding in byte 2.</source>
          <target state="translated">&lt;code&gt;VK_FORMAT_B8G8R8_SRGB&lt;/code&gt; 는 바이트 0에서 sRGB 비선형 인코딩으로 저장된 8 비트 B 구성 요소, 바이트 1에서 sRGB 비선형 인코딩으로 저장된 8 비트 G 구성 요소 및 8 비트로 구성된 3 성분, 24 비트 부호없는 정규화 된 형식을 지정합니다. 바이트 2에 sRGB 비선형 인코딩으로 저장된 R 구성 요소</target>
        </trans-unit>
        <trans-unit id="d35554ea70fc6401f084ada76bbd5742de9b0e6e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_FORMAT_B8G8R8_SSCALED&lt;/code&gt; specifies a three-component, 24-bit signed scaled format that has an 8-bit B component in byte 0, an 8-bit G component in byte 1, and an 8-bit R component in byte 2.</source>
          <target state="translated">&lt;code&gt;VK_FORMAT_B8G8R8_SSCALED&lt;/code&gt; 는 바이트 0의 8 비트 B 구성 요소, 바이트 1의 8 비트 G 구성 요소 및 바이트 2의 8 비트 R 구성 요소를 갖는 3 성분, 24 비트 부호있는 스케일 형식을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="9a62dadbd17b6fae532168e835460b651c17a8bb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_FORMAT_B8G8R8_UINT&lt;/code&gt; specifies a three-component, 24-bit unsigned integer format that has an 8-bit B component in byte 0, an 8-bit G component in byte 1, and an 8-bit R component in byte 2.</source>
          <target state="translated">&lt;code&gt;VK_FORMAT_B8G8R8_UINT&lt;/code&gt; 는 바이트 0의 8 비트 B 구성 요소, 바이트 1의 8 비트 G 구성 요소 및 바이트 2의 8 비트 R 구성 요소를 갖는 3 성분, 24 비트 부호없는 정수 형식을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="1f0a00f004091371b9b1cbd0fcff22e4f1790732" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_FORMAT_B8G8R8_UNORM&lt;/code&gt; specifies a three-component, 24-bit unsigned normalized format that has an 8-bit B component in byte 0, an 8-bit G component in byte 1, and an 8-bit R component in byte 2.</source>
          <target state="translated">&lt;code&gt;VK_FORMAT_B8G8R8_UNORM&lt;/code&gt; 은 바이트 0의 8 비트 B 구성 요소, 바이트 1의 8 비트 G 구성 요소 및 바이트 2의 8 비트 R 구성 요소를 갖는 3 성분, 24 비트 부호없는 정규화 된 형식을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="4f41ab4f5953e50c70c2c97a677d270aba6685f4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_FORMAT_B8G8R8_USCALED&lt;/code&gt; specifies a three-component, 24-bit unsigned scaled format that has an 8-bit B component in byte 0, an 8-bit G component in byte 1, and an 8-bit R component in byte 2.</source>
          <target state="translated">&lt;code&gt;VK_FORMAT_B8G8R8_USCALED&lt;/code&gt; 는 바이트 0의 8 비트 B 구성 요소, 바이트 1의 8 비트 G 구성 요소 및 바이트 2의 8 비트 R 구성 요소를 갖는 3 성분, 24 비트 부호없는 스케일 형식을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="968bf53ec47561c1489a91f7282f478b2dd69738" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_FORMAT_BC1_RGBA_SRGB_BLOCK&lt;/code&gt; specifies a four-component, block-compressed format where each 64-bit compressed texel block encodes a 4&amp;times;4 rectangle of unsigned normalized RGB texel data with sRGB nonlinear encoding, and provides 1 bit of alpha.</source>
          <target state="translated">&lt;code&gt;VK_FORMAT_BC1_RGBA_SRGB_BLOCK&lt;/code&gt; 은 각 64 비트 압축 텍셀 블록이 sRGB 비선형 인코딩을 사용하여 4x4 직사각형의 부호없는 정규화 된 RGB 텍셀 데이터를 인코딩하고 1 비트의 알파를 제공하는 4 가지 구성 요소, 블록 압축 형식을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="8c44d28b126fb8e1cb87ae976883d0224384f59e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_FORMAT_BC1_RGBA_UNORM_BLOCK&lt;/code&gt; specifies a four-component, block-compressed format where each 64-bit compressed texel block encodes a 4&amp;times;4 rectangle of unsigned normalized RGB texel data, and provides 1 bit of alpha.</source>
          <target state="translated">&lt;code&gt;VK_FORMAT_BC1_RGBA_UNORM_BLOCK&lt;/code&gt; 은 각 64 비트 압축 텍셀 블록이 4x4 직사각형의 부호없는 정규화 된 RGB 텍셀 데이터를 인코딩하고 1 비트의 알파를 제공하는 4 가지 구성 요소, 블록 압축 형식을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="e2de25e6f257d48597feb25bf868c9370a335213" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_FORMAT_BC1_RGB_SRGB_BLOCK&lt;/code&gt; specifies a three-component, block-compressed format where each 64-bit compressed texel block encodes a 4&amp;times;4 rectangle of unsigned normalized RGB texel data with sRGB nonlinear encoding. This format has no alpha and is considered opaque.</source>
          <target state="translated">&lt;code&gt;VK_FORMAT_BC1_RGB_SRGB_BLOCK&lt;/code&gt; 은 각 64 비트 압축 텍셀 블록이 sRGB 비선형 인코딩을 사용하여 서명되지 않은 정규화 된 RGB 텍셀 데이터의 4 &amp;times; 4 사각형을 인코딩하는 3 가지 구성 요소, 블록 압축 형식을 지정합니다. 이 형식은 알파가 없으며 불투명 한 것으로 간주됩니다.</target>
        </trans-unit>
        <trans-unit id="d2d03bb3aa29675dba5f64c152509a5fb0b91d9c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_FORMAT_BC1_RGB_UNORM_BLOCK&lt;/code&gt; specifies a three-component, block-compressed format where each 64-bit compressed texel block encodes a 4&amp;times;4 rectangle of unsigned normalized RGB texel data. This format has no alpha and is considered opaque.</source>
          <target state="translated">&lt;code&gt;VK_FORMAT_BC1_RGB_UNORM_BLOCK&lt;/code&gt; 은 각각의 64 비트 압축 텍셀 블록이 부호없는 정규화 된 RGB 텍셀 데이터의 4 &amp;times; 4 사각형을 인코딩하는 3 성분 블록 압축 형식을 지정합니다. 이 형식은 알파가 없으며 불투명 한 것으로 간주됩니다.</target>
        </trans-unit>
        <trans-unit id="3c04f04c14a3f197aa9dc4f757a7ca9954625ab9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_FORMAT_BC2_SRGB_BLOCK&lt;/code&gt; specifies a four-component, block-compressed format where each 128-bit compressed texel block encodes a 4&amp;times;4 rectangle of unsigned normalized RGBA texel data with the first 64 bits encoding alpha values followed by 64 bits encoding RGB values with sRGB nonlinear encoding.</source>
          <target state="translated">&lt;code&gt;VK_FORMAT_BC2_SRGB_BLOCK&lt;/code&gt; 은 각 128 비트 압축 텍셀 블록이 4x4 직사각형의 서명되지 않은 정규화 된 RGBA 텍셀 데이터를 첫 번째 64 비트 인코딩 알파 값으로 인코딩 한 다음 64 비트 인코딩 sRGB 비선형 인코딩으로 RGB 값을 인코딩하는 4 성분 블록 압축 형식을 지정합니다. .</target>
        </trans-unit>
        <trans-unit id="57f3c7784ae5028e98b9f14e376f8b11a9001e92" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_FORMAT_BC2_UNORM_BLOCK&lt;/code&gt; specifies a four-component, block-compressed format where each 128-bit compressed texel block encodes a 4&amp;times;4 rectangle of unsigned normalized RGBA texel data with the first 64 bits encoding alpha values followed by 64 bits encoding RGB values.</source>
          <target state="translated">&lt;code&gt;VK_FORMAT_BC2_UNORM_BLOCK&lt;/code&gt; 은 각 128 비트 압축 텍셀 블록이 4x4 사각형의 부호없는 정규화 된 RGBA 텍셀 데이터를 인코딩하고 첫 64 비트는 알파 값을 인코딩하고 64 비트는 RGB 값을 인코딩합니다.</target>
        </trans-unit>
        <trans-unit id="48048e8beae4af060ac22ec471dbbf0b5707e273" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_FORMAT_BC3_SRGB_BLOCK&lt;/code&gt; specifies a four-component, block-compressed format where each 128-bit compressed texel block encodes a 4&amp;times;4 rectangle of unsigned normalized RGBA texel data with the first 64 bits encoding alpha values followed by 64 bits encoding RGB values with sRGB nonlinear encoding.</source>
          <target state="translated">&lt;code&gt;VK_FORMAT_BC3_SRGB_BLOCK&lt;/code&gt; 은 각각의 128 비트 압축 텍셀 블록이 4x4 직사각형의 서명되지 않은 정규화 된 RGBA 텍셀 데이터를 첫 번째 64 비트 인코딩 알파 값으로 인코딩 한 다음 64 비트 인코딩 RGB 값을 sRGB 비선형 인코딩으로 RGB 값으로 인코딩하는 4 성분 블록 압축 형식을 지정합니다. .</target>
        </trans-unit>
        <trans-unit id="44dea89599ede4a258e14591a9b6eaf6513ac438" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_FORMAT_BC3_UNORM_BLOCK&lt;/code&gt; specifies a four-component, block-compressed format where each 128-bit compressed texel block encodes a 4&amp;times;4 rectangle of unsigned normalized RGBA texel data with the first 64 bits encoding alpha values followed by 64 bits encoding RGB values.</source>
          <target state="translated">&lt;code&gt;VK_FORMAT_BC3_UNORM_BLOCK&lt;/code&gt; 은 각각의 128 비트 압축 텍셀 블록이 4x4 사각형의 부호없는 정규화 된 RGBA 텍셀 데이터를 첫 64 비트 인코딩 알파 값과 64 비트 인코딩 RGB 값으로 인코딩하는 4 성분 블록 압축 형식을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="8b5a3e557c834eebd23734965163aa672f001984" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_FORMAT_BC4_SNORM_BLOCK&lt;/code&gt; specifies a one-component, block-compressed format where each 64-bit compressed texel block encodes a 4&amp;times;4 rectangle of signed normalized red texel data.</source>
          <target state="translated">&lt;code&gt;VK_FORMAT_BC4_SNORM_BLOCK&lt;/code&gt; 은 각각의 64 비트 압축 텍셀 블록이 4x4 사각형의 부호있는 정규화 된 빨간색 텍셀 데이터를 인코딩하는 한 구성 요소의 블록 압축 형식을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="d134a93266d067de8d8107d75a173d0f6d16b178" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_FORMAT_BC4_UNORM_BLOCK&lt;/code&gt; specifies a one-component, block-compressed format where each 64-bit compressed texel block encodes a 4&amp;times;4 rectangle of unsigned normalized red texel data.</source>
          <target state="translated">&lt;code&gt;VK_FORMAT_BC4_UNORM_BLOCK&lt;/code&gt; 은 각각의 64 비트 압축 텍셀 블록이 부호없는 정규화 된 빨간색 텍셀 데이터의 4x4 사각형을 인코딩하는 한 구성 요소의 블록 압축 형식을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="d45a6890079d799709f929e91e9895dd133917b9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_FORMAT_BC5_SNORM_BLOCK&lt;/code&gt; specifies a two-component, block-compressed format where each 128-bit compressed texel block encodes a 4&amp;times;4 rectangle of signed normalized RG texel data with the first 64 bits encoding red values followed by 64 bits encoding green values.</source>
          <target state="translated">&lt;code&gt;VK_FORMAT_BC5_SNORM_BLOCK&lt;/code&gt; 은 각 128 비트 압축 텍셀 블록이 4x4 직사각형의 서명 된 정규화 된 RG 텍셀 데이터를 첫 번째 64 비트 인코딩 빨간색 값으로 인코딩 한 다음 64 비트 인코딩 녹색 값으로 인코딩하는 2 성분 블록 압축 형식을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="c2c5545d6b1c299ace9208e860f5f0d979969843" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_FORMAT_BC5_UNORM_BLOCK&lt;/code&gt; specifies a two-component, block-compressed format where each 128-bit compressed texel block encodes a 4&amp;times;4 rectangle of unsigned normalized RG texel data with the first 64 bits encoding red values followed by 64 bits encoding green values.</source>
          <target state="translated">&lt;code&gt;VK_FORMAT_BC5_UNORM_BLOCK&lt;/code&gt; 은 각각의 128 비트 압축 텍셀 블록이 서명되지 않은 정규화 된 RG 텍셀 데이터의 4x4 직사각형을 첫 번째 64 비트 인코딩 빨간색 값과 64 비트 인코딩 녹색 값으로 인코딩하는 2 성분 블록 압축 형식을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="2efc7ba89b593b0c90088a13b1c4321fe23d5eb1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_FORMAT_BC6H_SFLOAT_BLOCK&lt;/code&gt; specifies a three-component, block-compressed format where each 128-bit compressed texel block encodes a 4&amp;times;4 rectangle of signed floating-point RGB texel data.</source>
          <target state="translated">&lt;code&gt;VK_FORMAT_BC6H_SFLOAT_BLOCK&lt;/code&gt; 은 각 128 비트 압축 텍셀 블록이 4x4 사각형의 부호있는 부동 소수점 RGB 텍셀 데이터를 인코딩하는 3 성분 블록 압축 형식을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="6c836086d84a220ab8b0d33581e42e9ad3d5ed65" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_FORMAT_BC6H_UFLOAT_BLOCK&lt;/code&gt; specifies a three-component, block-compressed format where each 128-bit compressed texel block encodes a 4&amp;times;4 rectangle of unsigned floating-point RGB texel data.</source>
          <target state="translated">&lt;code&gt;VK_FORMAT_BC6H_UFLOAT_BLOCK&lt;/code&gt; 은 각각의 128 비트 압축 텍셀 블록이 부호없는 부동 소수점 RGB 텍셀 데이터의 4 &amp;times; 4 사각형을 인코딩하는 3 성분 블록 압축 형식을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="ac0ad1d17444ba153882098639a5466e10ae77fd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_FORMAT_BC7_SRGB_BLOCK&lt;/code&gt; specifies a four-component, block-compressed format where each 128-bit compressed texel block encodes a 4&amp;times;4 rectangle of unsigned normalized RGBA texel data with sRGB nonlinear encoding applied to the RGB components.</source>
          <target state="translated">&lt;code&gt;VK_FORMAT_BC7_SRGB_BLOCK&lt;/code&gt; 은 각 128 비트 압축 텍셀 블록이 RGB 구성 요소에 적용된 sRGB 비선형 인코딩을 사용하여 서명되지 않은 정규화 된 RGBA 텍셀 데이터의 4 &amp;times; 4 사각형을 인코딩하는 4 가지 구성 요소, 블록 압축 형식을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="639c424b9d042d83f4b5053965d2cb85c6fd4464" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_FORMAT_BC7_UNORM_BLOCK&lt;/code&gt; specifies a four-component, block-compressed format where each 128-bit compressed texel block encodes a 4&amp;times;4 rectangle of unsigned normalized RGBA texel data.</source>
          <target state="translated">&lt;code&gt;VK_FORMAT_BC7_UNORM_BLOCK&lt;/code&gt; 은 각 128 비트 압축 텍셀 블록이 4x4 사각형의 부호없는 정규화 된 RGBA 텍셀 데이터를 인코딩하는 4 가지 구성 요소, 블록 압축 형식을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="106ef58628e92d49d5e7d59bb6c7eda948ec7aed" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_FORMAT_D16_UNORM&lt;/code&gt; specifies a one-component, 16-bit unsigned normalized format that has a single 16-bit depth component.</source>
          <target state="translated">&lt;code&gt;VK_FORMAT_D16_UNORM&lt;/code&gt; 은 단일 16 비트 심도 구성 요소가있는 단일 구성 요소, 16 비트 부호없는 정규화 된 형식을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="36439ef25e4086febaa97bb810c1ad24b9c81c6c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_FORMAT_D16_UNORM_S8_UINT&lt;/code&gt; specifies a two-component, 24-bit format that has 16 unsigned normalized bits in the depth component and 8 unsigned integer bits in the stencil component.</source>
          <target state="translated">&lt;code&gt;VK_FORMAT_D16_UNORM_S8_UINT&lt;/code&gt; 는 심도 구성 요소에는 16 개의 부호없는 정규화 된 비트와 스텐실 구성 요소에는 8 개의 부호없는 정수 비트가있는 2 성분, 24 비트 형식을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="264bad904cfaa206e35d8c72e69295abf5ddd5ec" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_FORMAT_D24_UNORM_S8_UINT&lt;/code&gt; specifies a two-component, 32-bit packed format that has 8 unsigned integer bits in the stencil component, and 24 unsigned normalized bits in the depth component.</source>
          <target state="translated">&lt;code&gt;VK_FORMAT_D24_UNORM_S8_UINT&lt;/code&gt; 는 스텐실 구성 요소에 8 개의 부호없는 정수 비트가 있고 깊이 구성 요소에 24 개의 부호없는 정규화 된 비트가있는 2 성분, 32 비트 팩 형식을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="276fc24a9b58e0dcf96ef5263b86b2b51bfde28a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_FORMAT_D32_SFLOAT&lt;/code&gt; specifies a one-component, 32-bit signed floating-point format that has 32-bits in the depth component.</source>
          <target state="translated">&lt;code&gt;VK_FORMAT_D32_SFLOAT&lt;/code&gt; 는 심도 구성 요소에 32 비트가있는 단일 구성 요소, 32 비트 부호있는 부동 소수점 형식을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="88d927ab3366de172bcfc7aae8b71167e68ccfe1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_FORMAT_D32_SFLOAT_S8_UINT&lt;/code&gt; specifies a two-component format that has 32 signed float bits in the depth component and 8 unsigned integer bits in the stencil component. There are optionally: 24-bits that are unused.</source>
          <target state="translated">&lt;code&gt;VK_FORMAT_D32_SFLOAT_S8_UINT&lt;/code&gt; 는 심도 구성 요소에 부호있는 32 비트 부동 소수점 비트와 스텐실 구성 요소에 8 개의 부호없는 정수 비트가있는 2 성분 형식을 지정합니다. 선택적으로 다음과 같은 것이 있습니다 : 사용되지 않는 24 비트.</target>
        </trans-unit>
        <trans-unit id="d82d74022fc0251f7820606e64ca7087d55b9b95" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_FORMAT_E5B9G9R9_UFLOAT_PACK32&lt;/code&gt; specifies a three-component, 32-bit packed unsigned floating-point format that has a 5-bit shared exponent in bits 27..31, a 9-bit B component mantissa in bits 18..26, a 9-bit G component mantissa in bits 9..17, and a 9-bit R component mantissa in bits 0..8.</source>
          <target state="translated">&lt;code&gt;VK_FORMAT_E5B9G9R9_UFLOAT_PACK32&lt;/code&gt; 는 비트 27..31의 5 비트 공유 지수, 비트 18..26의 9 비트 B 구성 요소 가수, 비트 18..26의 9 비트 G의 3 비트, 32 비트 팩형 부호없는 부동 소수점 형식을 지정합니다. 비트 9..17의 컴포넌트 가수 및 비트 0..8의 9 비트 R 컴포넌트 가수.</target>
        </trans-unit>
        <trans-unit id="8b33437af50b0efb93ae5807924861fe017be16d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_FORMAT_EAC_R11G11_SNORM_BLOCK&lt;/code&gt; specifies a two-component, ETC2 compressed format where each 128-bit compressed texel block encodes a 4&amp;times;4 rectangle of signed normalized RG texel data with the first 64 bits encoding red values followed by 64 bits encoding green values.</source>
          <target state="translated">&lt;code&gt;VK_FORMAT_EAC_R11G11_SNORM_BLOCK&lt;/code&gt; 은 각각의 128 비트 압축 텍셀 블록이 4x4 사각형의 부호있는 정규화 된 RG 텍셀 데이터를 인코딩하고 첫 번째 64 비트는 빨간색 값을 인코딩하고 64 비트는 녹색 값을 인코딩하는 2 성분 ETC2 압축 형식을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="5ce9a101d55a2763f6d2c9f6f859fe9f0a7f2401" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_FORMAT_EAC_R11G11_UNORM_BLOCK&lt;/code&gt; specifies a two-component, ETC2 compressed format where each 128-bit compressed texel block encodes a 4&amp;times;4 rectangle of unsigned normalized RG texel data with the first 64 bits encoding red values followed by 64 bits encoding green values.</source>
          <target state="translated">&lt;code&gt;VK_FORMAT_EAC_R11G11_UNORM_BLOCK&lt;/code&gt; 은 각각의 128 비트 압축 텍셀 블록이 4x4 직사각형의 서명되지 않은 정규화 된 RG 텍셀 데이터를 인코딩하여 첫 번째 64 비트 인코딩 빨강 값과 64 비트 인코딩 녹색 값을 인코딩하는 2 성분 ETC2 압축 형식을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="7f863374108d03133f5694d517b86162fc3c7ba9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_FORMAT_EAC_R11_SNORM_BLOCK&lt;/code&gt; specifies a one-component, ETC2 compressed format where each 64-bit compressed texel block encodes a 4&amp;times;4 rectangle of signed normalized red texel data.</source>
          <target state="translated">&lt;code&gt;VK_FORMAT_EAC_R11_SNORM_BLOCK&lt;/code&gt; 은 각 64 비트 압축 텍셀 블록이 4x4 사각형의 서명 된 정규화 된 빨간색 텍셀 데이터를 인코딩하는 단일 구성 요소 ETC2 압축 형식을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="568b54daacf46067ab1013b72a4eef7c5481817e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_FORMAT_EAC_R11_UNORM_BLOCK&lt;/code&gt; specifies a one-component, ETC2 compressed format where each 64-bit compressed texel block encodes a 4&amp;times;4 rectangle of unsigned normalized red texel data.</source>
          <target state="translated">&lt;code&gt;VK_FORMAT_EAC_R11_UNORM_BLOCK&lt;/code&gt; 은 각 64 비트 압축 텍셀 블록이 4x4 직사각형의 부호없는 정규화 된 빨간색 텍셀 데이터를 인코딩하는 단일 구성 요소 ETC2 압축 형식을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="6f4ff8547fd97826c8114c494814061b524d004a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_FORMAT_ETC2_R8G8B8A1_SRGB_BLOCK&lt;/code&gt; specifies a four-component, ETC2 compressed format where each 64-bit compressed texel block encodes a 4&amp;times;4 rectangle of unsigned normalized RGB texel data with sRGB nonlinear encoding, and provides 1 bit of alpha.</source>
          <target state="translated">&lt;code&gt;VK_FORMAT_ETC2_R8G8B8A1_SRGB_BLOCK&lt;/code&gt; 은 각각의 64 비트 압축 텍셀 블록이 sRGB 비선형 인코딩을 사용하여 4x4 직사각형의 서명되지 않은 정규화 된 RGB 텍셀 데이터를 인코딩하고 1 비트의 알파를 제공하는 4 성분 ETC2 압축 형식을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="8890d209c2327221a14adb912f8ffb019d76b634" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_FORMAT_ETC2_R8G8B8A1_UNORM_BLOCK&lt;/code&gt; specifies a four-component, ETC2 compressed format where each 64-bit compressed texel block encodes a 4&amp;times;4 rectangle of unsigned normalized RGB texel data, and provides 1 bit of alpha.</source>
          <target state="translated">&lt;code&gt;VK_FORMAT_ETC2_R8G8B8A1_UNORM_BLOCK&lt;/code&gt; 은 각각의 64 비트 압축 텍셀 블록이 4x4 직사각형의 부호없는 정규화 된 RGB 텍셀 데이터를 인코딩하고 1 비트의 알파를 제공하는 4 성분 ETC2 압축 형식을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="e6a527a03545ead38f305bbff75491b1fff222bf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_FORMAT_ETC2_R8G8B8A8_SRGB_BLOCK&lt;/code&gt; specifies a four-component, ETC2 compressed format where each 128-bit compressed texel block encodes a 4&amp;times;4 rectangle of unsigned normalized RGBA texel data with the first 64 bits encoding alpha values followed by 64 bits encoding RGB values with sRGB nonlinear encoding applied.</source>
          <target state="translated">&lt;code&gt;VK_FORMAT_ETC2_R8G8B8A8_SRGB_BLOCK&lt;/code&gt; 은 각 128 비트 압축 텍셀 블록이 4x4 직사각형의 부호없는 정규화 된 RGBA 텍셀 데이터를 인코딩하고 첫 번째 64 비트 인코딩 알파 값과 64 비트 인코딩 RGB 값, sRGB 비선형 인코딩이 적용된 RGB 값을 64 비트 인코딩하는 4 성분 ETC2 압축 형식을 지정합니다. .</target>
        </trans-unit>
        <trans-unit id="c13d9cc75b9e1daf9243a284a60b85b5e3b07887" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_FORMAT_ETC2_R8G8B8A8_UNORM_BLOCK&lt;/code&gt; specifies a four-component, ETC2 compressed format where each 128-bit compressed texel block encodes a 4&amp;times;4 rectangle of unsigned normalized RGBA texel data with the first 64 bits encoding alpha values followed by 64 bits encoding RGB values.</source>
          <target state="translated">&lt;code&gt;VK_FORMAT_ETC2_R8G8B8A8_UNORM_BLOCK&lt;/code&gt; 은 각각의 128 비트 압축 텍셀 블록이 4x4 사각형의 부호없는 정규화 된 RGBA 텍셀 데이터를 인코딩하고 첫 64 비트는 알파 값을 인코딩 한 다음 64 비트는 RGB 값을 인코딩하는 64 비트로 인코딩하는 4 성분 ETC2 압축 형식을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="c1d0897e57268b8963ffdf7c0012b487ee8bffe1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_FORMAT_ETC2_R8G8B8_SRGB_BLOCK&lt;/code&gt; specifies a three-component, ETC2 compressed format where each 64-bit compressed texel block encodes a 4&amp;times;4 rectangle of unsigned normalized RGB texel data with sRGB nonlinear encoding. This format has no alpha and is considered opaque.</source>
          <target state="translated">&lt;code&gt;VK_FORMAT_ETC2_R8G8B8_SRGB_BLOCK&lt;/code&gt; 은 각 64 비트 압축 텍셀 블록이 sRGB 비선형 인코딩을 사용하여 4x4 직사각형의 부호없는 정규화 된 RGB 텍셀 데이터를 인코딩하는 3 가지 구성 요소 ETC2 압축 형식을 지정합니다. 이 형식은 알파가 없으며 불투명 한 것으로 간주됩니다.</target>
        </trans-unit>
        <trans-unit id="183b7f72cef01f687afc9640c72df933cc27f659" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_FORMAT_ETC2_R8G8B8_UNORM_BLOCK&lt;/code&gt; specifies a three-component, ETC2 compressed format where each 64-bit compressed texel block encodes a 4&amp;times;4 rectangle of unsigned normalized RGB texel data. This format has no alpha and is considered opaque.</source>
          <target state="translated">&lt;code&gt;VK_FORMAT_ETC2_R8G8B8_UNORM_BLOCK&lt;/code&gt; 은 각 64 비트 압축 텍셀 블록이 4x4 사각형의 부호없는 정규화 된 RGB 텍셀 데이터를 인코딩하는 3 성분 ETC2 압축 형식을 지정합니다. 이 형식은 알파가 없으며 불투명 한 것으로 간주됩니다.</target>
        </trans-unit>
        <trans-unit id="8273daffb38cf946c4cdb403074da10a72c9405d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_FORMAT_FEATURE_BLIT_DST_BIT&lt;/code&gt; specifies that an image &lt;strong&gt;can&lt;/strong&gt; be used as &lt;code&gt;dstImage&lt;/code&gt; for the &lt;code&gt;vkCmdBlitImage&lt;/code&gt; command.</source>
          <target state="translated">&lt;code&gt;VK_FORMAT_FEATURE_BLIT_DST_BIT&lt;/code&gt; 의 화상이되도록 지정 &lt;strong&gt;수&lt;/strong&gt; 로 사용할 수 &lt;code&gt;dstImage&lt;/code&gt; 위한 &lt;code&gt;vkCmdBlitImage&lt;/code&gt; 의 명령.</target>
        </trans-unit>
        <trans-unit id="668e0002b333c8e5dad3dd84f77ea85abc662a61" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_FORMAT_FEATURE_BLIT_SRC_BIT&lt;/code&gt; specifies that an image &lt;strong&gt;can&lt;/strong&gt; be used as &lt;code&gt;srcImage&lt;/code&gt; for the &lt;code&gt;vkCmdBlitImage&lt;/code&gt; command.</source>
          <target state="translated">&lt;code&gt;VK_FORMAT_FEATURE_BLIT_SRC_BIT&lt;/code&gt; 의 화상이되도록 지정 &lt;strong&gt;수&lt;/strong&gt; 로 사용할 수 &lt;code&gt;srcImage&lt;/code&gt; 위한 &lt;code&gt;vkCmdBlitImage&lt;/code&gt; 의 명령.</target>
        </trans-unit>
        <trans-unit id="f6e0c9b8d665464d3ad968de5df3f21b43a703dd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_FORMAT_FEATURE_COLOR_ATTACHMENT_BIT&lt;/code&gt; specifies that an image view &lt;strong&gt;can&lt;/strong&gt; be used as a framebuffer color attachment and as an input attachment.</source>
          <target state="translated">&lt;code&gt;VK_FORMAT_FEATURE_COLOR_ATTACHMENT_BIT&lt;/code&gt; 는 이미지 뷰 &lt;strong&gt;를&lt;/strong&gt; 프레임 버퍼 컬러 첨부 및 입력 첨부로 사용할 &lt;strong&gt;수&lt;/strong&gt; 있도록 지정합니다 .</target>
        </trans-unit>
        <trans-unit id="641813c67cb32ddc422b25b87ea160653ddeece6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_FORMAT_FEATURE_COLOR_ATTACHMENT_BLEND_BIT&lt;/code&gt; specifies that an image view &lt;strong&gt;can&lt;/strong&gt; be used as a framebuffer color attachment that supports blending and as an input attachment.</source>
          <target state="translated">&lt;code&gt;VK_FORMAT_FEATURE_COLOR_ATTACHMENT_BLEND_BIT&lt;/code&gt; 는 이미지보기 &lt;strong&gt;를&lt;/strong&gt; 블렌딩을 지원하는 프레임 버퍼 색상 첨부 및 입력 첨부로 사용할 &lt;strong&gt;수&lt;/strong&gt; 있도록 지정합니다 .</target>
        </trans-unit>
        <trans-unit id="3ff1d8678d9d8d8ffda9d2cf5ee6f11294c48f01" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_FORMAT_FEATURE_DEPTH_STENCIL_ATTACHMENT_BIT&lt;/code&gt; specifies that an image view &lt;strong&gt;can&lt;/strong&gt; be used as a framebuffer depth/stencil attachment and as an input attachment.</source>
          <target state="translated">&lt;code&gt;VK_FORMAT_FEATURE_DEPTH_STENCIL_ATTACHMENT_BIT&lt;/code&gt; 는 이미지 뷰 &lt;strong&gt;를&lt;/strong&gt; 프레임 버퍼 깊이 / 스텐실 부착 및 입력 부착으로 사용할 &lt;strong&gt;수&lt;/strong&gt; 있도록 지정합니다 .</target>
        </trans-unit>
        <trans-unit id="73dd656ddfce83aca916e10e334ac9e198586e07" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_FORMAT_FEATURE_SAMPLED_IMAGE_BIT&lt;/code&gt; specifies that an image view &lt;strong&gt;can&lt;/strong&gt; be &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#descriptorsets-sampledimage&quot;&gt;sampled from&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;VK_FORMAT_FEATURE_SAMPLED_IMAGE_BIT&lt;/code&gt; 는에서 이미지보기 &lt;strong&gt;를 &lt;/strong&gt;&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#descriptorsets-sampledimage&quot;&gt;샘플링 &lt;/a&gt;&lt;strong&gt;할 수&lt;/strong&gt; 있도록 지정합니다 .</target>
        </trans-unit>
        <trans-unit id="c36a6dc28c4afac2075ea66314357b7d0b06f387" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_LINEAR_BIT&lt;/code&gt; specifies that if &lt;code&gt;VK_FORMAT_FEATURE_SAMPLED_IMAGE_BIT&lt;/code&gt; is also set, an image view &lt;strong&gt;can&lt;/strong&gt; be used with a sampler that has either of &lt;code&gt;magFilter&lt;/code&gt; or &lt;code&gt;minFilter&lt;/code&gt; set to &lt;code&gt;VK_FILTER_LINEAR&lt;/code&gt;, or &lt;code&gt;mipmapMode&lt;/code&gt; set to &lt;code&gt;VK_SAMPLER_MIPMAP_MODE_LINEAR&lt;/code&gt;. If &lt;code&gt;VK_FORMAT_FEATURE_BLIT_SRC_BIT&lt;/code&gt; is also set, an image can be used as the &lt;code&gt;srcImage&lt;/code&gt; to &lt;a href=&quot;#vkCmdBlitImage&quot;&gt;vkCmdBlitImage&lt;/a&gt; with a &lt;code&gt;filter&lt;/code&gt; of &lt;code&gt;VK_FILTER_LINEAR&lt;/code&gt;. This bit &lt;strong&gt;must&lt;/strong&gt; only be exposed for formats that also support the &lt;code&gt;VK_FORMAT_FEATURE_SAMPLED_IMAGE_BIT&lt;/code&gt; or &lt;code&gt;VK_FORMAT_FEATURE_BLIT_SRC_BIT&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_LINEAR_BIT&lt;/code&gt; 의 경우임을 지정 &lt;code&gt;VK_FORMAT_FEATURE_SAMPLED_IMAGE_BIT&lt;/code&gt; 가 또한 설정되어, 화상이보기 &lt;strong&gt;수&lt;/strong&gt; 중 어느 갖는 샘플러 사용 &lt;code&gt;magFilter&lt;/code&gt; 또는 &lt;code&gt;minFilter&lt;/code&gt; 로 설정 &lt;code&gt;VK_FILTER_LINEAR&lt;/code&gt; 또는 &lt;code&gt;mipmapMode&lt;/code&gt; 용 으로 설정 &lt;code&gt;VK_SAMPLER_MIPMAP_MODE_LINEAR&lt;/code&gt; . 경우 &lt;code&gt;VK_FORMAT_FEATURE_BLIT_SRC_BIT&lt;/code&gt; 가 또한 설정되어, 화상은로서 사용될 수 &lt;code&gt;srcImage&lt;/code&gt; 에 &lt;a href=&quot;#vkCmdBlitImage&quot;&gt;vkCmdBlitImage&lt;/a&gt; A의 &lt;code&gt;filter&lt;/code&gt; 의 &lt;code&gt;VK_FILTER_LINEAR&lt;/code&gt; . 이 비트는 &lt;strong&gt;해야한다&lt;/strong&gt; 에만도를 지원하는 것을 형식에 대해 노출 &lt;code&gt;VK_FORMAT_FEATURE_SAMPLED_IMAGE_BIT&lt;/code&gt; 또는 &lt;code&gt;VK_FORMAT_FEATURE_BLIT_SRC_BIT&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="01d58c19e6b8c033ce7aab2f1669504c8b527df5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_FORMAT_FEATURE_STORAGE_IMAGE_ATOMIC_BIT&lt;/code&gt; specifies that an image view &lt;strong&gt;can&lt;/strong&gt; be used as storage image that supports atomic operations.</source>
          <target state="translated">&lt;code&gt;VK_FORMAT_FEATURE_STORAGE_IMAGE_ATOMIC_BIT&lt;/code&gt; 는 이미지보기 &lt;strong&gt;를&lt;/strong&gt; 원자 연산을 지원하는 스토리지 이미지로 사용할 &lt;strong&gt;수&lt;/strong&gt; 있도록 지정합니다 .</target>
        </trans-unit>
        <trans-unit id="9a09ae9f383c2e00ed1cd72aa1756098639ae303" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_FORMAT_FEATURE_STORAGE_IMAGE_BIT&lt;/code&gt; specifies that an image view &lt;strong&gt;can&lt;/strong&gt; be used as a &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#descriptorsets-storageimage&quot;&gt;storage images&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;VK_FORMAT_FEATURE_STORAGE_IMAGE_BIT&lt;/code&gt; 는 이미지보기 &lt;strong&gt;를 &lt;/strong&gt;&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#descriptorsets-storageimage&quot;&gt;스토리지 이미지&lt;/a&gt; 로 사용할 &lt;strong&gt;수&lt;/strong&gt; 있도록 지정합니다 .</target>
        </trans-unit>
        <trans-unit id="a7cb6d5ce5b5cf5b638edd49ea5cbfb1563fc460" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_FORMAT_FEATURE_STORAGE_TEXEL_BUFFER_ATOMIC_BIT&lt;/code&gt; specifies that atomic operations are supported on &lt;code&gt;VK_DESCRIPTOR_TYPE_STORAGE_TEXEL_BUFFER&lt;/code&gt; with this format.</source>
          <target state="translated">&lt;code&gt;VK_FORMAT_FEATURE_STORAGE_TEXEL_BUFFER_ATOMIC_BIT&lt;/code&gt; 는 &lt;code&gt;VK_DESCRIPTOR_TYPE_STORAGE_TEXEL_BUFFER&lt;/code&gt; 에서이 형식의 원자 연산이 지원 되도록 지정 합니다.</target>
        </trans-unit>
        <trans-unit id="1d34be3d9dedafa049ef5b6cb2d7238593ef935e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_FORMAT_FEATURE_STORAGE_TEXEL_BUFFER_BIT&lt;/code&gt; specifies that the format &lt;strong&gt;can&lt;/strong&gt; be used to create a buffer view that &lt;strong&gt;can&lt;/strong&gt; be bound to a &lt;code&gt;VK_DESCRIPTOR_TYPE_STORAGE_TEXEL_BUFFER&lt;/code&gt; descriptor.</source>
          <target state="translated">&lt;code&gt;VK_FORMAT_FEATURE_STORAGE_TEXEL_BUFFER_BIT&lt;/code&gt; 는 &lt;code&gt;VK_DESCRIPTOR_TYPE_STORAGE_TEXEL_BUFFER&lt;/code&gt; 디스크립터에 바인딩 &lt;strong&gt;할 수&lt;/strong&gt; 있는 버퍼보기를 작성하는 데 형식을 &lt;strong&gt;사용할 수&lt;/strong&gt; 있도록 지정합니다 .&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8a9c6bf1751c7d3d89d988c6612c1d0194bdc534" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_FORMAT_FEATURE_UNIFORM_TEXEL_BUFFER_BIT&lt;/code&gt; specifies that the format &lt;strong&gt;can&lt;/strong&gt; be used to create a buffer view that &lt;strong&gt;can&lt;/strong&gt; be bound to a &lt;code&gt;VK_DESCRIPTOR_TYPE_UNIFORM_TEXEL_BUFFER&lt;/code&gt; descriptor.</source>
          <target state="translated">&lt;code&gt;VK_FORMAT_FEATURE_UNIFORM_TEXEL_BUFFER_BIT&lt;/code&gt; 는 &lt;code&gt;VK_DESCRIPTOR_TYPE_UNIFORM_TEXEL_BUFFER&lt;/code&gt; 디스크립터에 바인딩 &lt;strong&gt;할 수&lt;/strong&gt; 있는 버퍼보기를 작성하는 데 형식을 &lt;strong&gt;사용할 수&lt;/strong&gt; 있도록 지정합니다 .&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="32a16953788d337900ea7420ed722e3a0f5af592" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_FORMAT_FEATURE_VERTEX_BUFFER_BIT&lt;/code&gt; specifies that the format &lt;strong&gt;can&lt;/strong&gt; be used as a vertex attribute format (&lt;code&gt;VkVertexInputAttributeDescription&lt;/code&gt;::&lt;code&gt;format&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;VK_FORMAT_FEATURE_VERTEX_BUFFER_BIT&lt;/code&gt; 는 형식 &lt;strong&gt;을&lt;/strong&gt; 정점 속성 형식 ( &lt;code&gt;VkVertexInputAttributeDescription&lt;/code&gt; :: &lt;code&gt;format&lt;/code&gt; ) 으로 사용할 &lt;strong&gt;수&lt;/strong&gt; 있도록 지정합니다 .</target>
        </trans-unit>
        <trans-unit id="8c1a336afbca9ebaca8da16467b3138e5a1ea7a3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_FORMAT_R16G16B16A16_SFLOAT&lt;/code&gt; specifies a four-component, 64-bit signed floating-point format that has a 16-bit R component in bytes 0..1, a 16-bit G component in bytes 2..3, a 16-bit B component in bytes 4..5, and a 16-bit A component in bytes 6..7.</source>
          <target state="translated">&lt;code&gt;VK_FORMAT_R16G16B16A16_SFLOAT&lt;/code&gt; 는 바이트 0..1의 16 비트 R 구성 요소, 바이트 2..3의 16 비트 G 구성 요소, 16 비트 B 구성 요소의 4 성분 64 비트 부호있는 부동 소수점 형식을 지정합니다. 바이트 4..5 및 바이트 6..7의 16 비트 A 구성 요소.</target>
        </trans-unit>
        <trans-unit id="5b09f38284b4ea88d45e30eecb609e3c02ae416c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_FORMAT_R16G16B16A16_SINT&lt;/code&gt; specifies a four-component, 64-bit signed integer format that has a 16-bit R component in bytes 0..1, a 16-bit G component in bytes 2..3, a 16-bit B component in bytes 4..5, and a 16-bit A component in bytes 6..7.</source>
          <target state="translated">&lt;code&gt;VK_FORMAT_R16G16B16A16_SINT&lt;/code&gt; 는 바이트 0..1의 16 비트 R 구성 요소, 바이트 2..3의 16 비트 G 구성 요소, 바이트 4의 16 비트 B 구성 요소가있는 4 성분 64 비트 부호있는 정수 형식을 지정합니다. ..5 및 바이트 6..7의 16 비트 A 구성 요소.</target>
        </trans-unit>
        <trans-unit id="bce2ae9eb1fe8821ebd8ab209ef5c2706a4b5b37" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_FORMAT_R16G16B16A16_SNORM&lt;/code&gt; specifies a four-component, 64-bit signed normalized format that has a 16-bit R component in bytes 0..1, a 16-bit G component in bytes 2..3, a 16-bit B component in bytes 4..5, and a 16-bit A component in bytes 6..7.</source>
          <target state="translated">&lt;code&gt;VK_FORMAT_R16G16B16A16_SNORM&lt;/code&gt; 은 바이트 0..1의 16 비트 R 구성 요소, 바이트 2..3의 16 비트 G 구성 요소, 바이트 4의 16 비트 B 구성 요소를 갖는 4 성분 64 비트 부호있는 정규화 된 형식을 지정합니다. ..5 및 바이트 6..7의 16 비트 A 구성 요소.</target>
        </trans-unit>
        <trans-unit id="beb094a28cea11df42c437258bf26d2b6145c80a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_FORMAT_R16G16B16A16_SSCALED&lt;/code&gt; specifies a four-component, 64-bit signed scaled integer format that has a 16-bit R component in bytes 0..1, a 16-bit G component in bytes 2..3, a 16-bit B component in bytes 4..5, and a 16-bit A component in bytes 6..7.</source>
          <target state="translated">&lt;code&gt;VK_FORMAT_R16G16B16A16_SSCALED&lt;/code&gt; 는 바이트 0..1의 16 비트 R 구성 요소, 바이트 2..3의 16 비트 G 구성 요소, 바이트의 16 비트 B 구성 요소를 갖는 4 성분 64 비트 부호있는 스케일링 정수 형식을 지정합니다. 4..5 및 바이트 단위의 16 비트 A 구성 요소 6..7.</target>
        </trans-unit>
        <trans-unit id="ec93acb964bf98c25f2d12ab57560b39d5b7b221" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_FORMAT_R16G16B16A16_UINT&lt;/code&gt; specifies a four-component, 64-bit unsigned integer format that has a 16-bit R component in bytes 0..1, a 16-bit G component in bytes 2..3, a 16-bit B component in bytes 4..5, and a 16-bit A component in bytes 6..7.</source>
          <target state="translated">&lt;code&gt;VK_FORMAT_R16G16B16A16_UINT&lt;/code&gt; 는 바이트 0..1의 16 비트 R 구성 요소, 바이트 2..3의 16 비트 G 구성 요소, 바이트 4의 16 비트 B 구성 요소를 갖는 4 성분 64 비트 부호없는 정수 형식을 지정합니다. ..5 및 바이트 6..7의 16 비트 A 구성 요소.</target>
        </trans-unit>
        <trans-unit id="5fb7f50328791aa234c05d6953d67cae4eaabf4d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_FORMAT_R16G16B16A16_UNORM&lt;/code&gt; specifies a four-component, 64-bit unsigned normalized format that has a 16-bit R component in bytes 0..1, a 16-bit G component in bytes 2..3, a 16-bit B component in bytes 4..5, and a 16-bit A component in bytes 6..7.</source>
          <target state="translated">&lt;code&gt;VK_FORMAT_R16G16B16A16_UNORM&lt;/code&gt; 은 바이트 0..1의 16 비트 R 구성 요소, 바이트 2..3의 16 비트 G 구성 요소, 바이트 4의 16 비트 B 구성 요소를 갖는 4 성분 64 비트 부호없는 정규화 된 형식을 지정합니다. ..5 및 바이트 6..7의 16 비트 A 구성 요소.</target>
        </trans-unit>
        <trans-unit id="27094bb3c7f994b0e857b3e1daae985166026793" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_FORMAT_R16G16B16A16_USCALED&lt;/code&gt; specifies a four-component, 64-bit unsigned scaled integer format that has a 16-bit R component in bytes 0..1, a 16-bit G component in bytes 2..3, a 16-bit B component in bytes 4..5, and a 16-bit A component in bytes 6..7.</source>
          <target state="translated">&lt;code&gt;VK_FORMAT_R16G16B16A16_USCALED&lt;/code&gt; 는 바이트 0..1의 16 비트 R 구성 요소, 바이트 2..3의 16 비트 G 구성 요소, 바이트의 16 비트 B 구성 요소를 갖는 4 성분 64 비트 부호없는 스케일링 정수 형식을 지정합니다. 4..5 및 바이트 단위의 16 비트 A 구성 요소 6..7.</target>
        </trans-unit>
        <trans-unit id="225bc35ca39438b8c7a028d231c3d07f7f10e034" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_FORMAT_R16G16B16_SFLOAT&lt;/code&gt; specifies a three-component, 48-bit signed floating-point format that has a 16-bit R component in bytes 0..1, a 16-bit G component in bytes 2..3, and a 16-bit B component in bytes 4..5.</source>
          <target state="translated">&lt;code&gt;VK_FORMAT_R16G16B16_SFLOAT&lt;/code&gt; 는 바이트 0..1의 16 비트 R 구성 요소, 바이트 2..3의 16 비트 G 구성 요소 및 16 비트 B 구성 요소를 갖는 3 개의 구성 요소, 48 비트 부호있는 부동 소수점 형식을 지정합니다. 바이트 단위 4..5.</target>
        </trans-unit>
        <trans-unit id="f77e8c195f81a9bdce97b24b96cd50233d8f4ebb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_FORMAT_R16G16B16_SINT&lt;/code&gt; specifies a three-component, 48-bit signed integer format that has a 16-bit R component in bytes 0..1, a 16-bit G component in bytes 2..3, and a 16-bit B component in bytes 4..5.</source>
          <target state="translated">&lt;code&gt;VK_FORMAT_R16G16B16_SINT&lt;/code&gt; 는 바이트 0..1의 16 비트 R 구성 요소, 바이트 2..3의 16 비트 G 구성 요소 및 바이트의 16 비트 B 구성 요소를 갖는 3 성분, 48 비트 부호있는 정수 형식을 지정합니다. 4..5.</target>
        </trans-unit>
        <trans-unit id="8882505c5da333abcdbb368b6b4c7584a97ad504" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_FORMAT_R16G16B16_SNORM&lt;/code&gt; specifies a three-component, 48-bit signed normalized format that has a 16-bit R component in bytes 0..1, a 16-bit G component in bytes 2..3, and a 16-bit B component in bytes 4..5.</source>
          <target state="translated">&lt;code&gt;VK_FORMAT_R16G16B16_SNORM&lt;/code&gt; 은 바이트 0..1의 16 비트 R 구성 요소, 바이트 2..3의 16 비트 G 구성 요소 및 바이트의 16 비트 B 구성 요소를 갖는 3 성분, 48 비트 부호있는 정규화 된 형식을 지정합니다. 4..5.</target>
        </trans-unit>
        <trans-unit id="6c7a898ef4adb96d309b96a86e9c07699d12223b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_FORMAT_R16G16B16_SSCALED&lt;/code&gt; specifies a three-component, 48-bit signed scaled integer format that has a 16-bit R component in bytes 0..1, a 16-bit G component in bytes 2..3, and a 16-bit B component in bytes 4..5.</source>
          <target state="translated">&lt;code&gt;VK_FORMAT_R16G16B16_SSCALED&lt;/code&gt; 는 바이트 0..1의 16 비트 R 구성 요소, 바이트 2..3의 16 비트 G 구성 요소 및 16 비트 B 구성 요소의 3 성분, 48 비트 부호있는 스케일링 정수 형식을 지정합니다. 바이트 4..5.</target>
        </trans-unit>
        <trans-unit id="dc106b55becc8788fb65ce9501d70f4f1b9ead4c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_FORMAT_R16G16B16_UINT&lt;/code&gt; specifies a three-component, 48-bit unsigned integer format that has a 16-bit R component in bytes 0..1, a 16-bit G component in bytes 2..3, and a 16-bit B component in bytes 4..5.</source>
          <target state="translated">&lt;code&gt;VK_FORMAT_R16G16B16_UINT&lt;/code&gt; 는 바이트 0..1의 16 비트 R 구성 요소, 바이트 2..3의 16 비트 G 구성 요소 및 바이트의 16 비트 B 구성 요소를 갖는 3 성분, 48 비트 부호없는 정수 형식을 지정합니다. 4..5.</target>
        </trans-unit>
        <trans-unit id="f164be44c1e9ac14778be4737fbc8ab51f056453" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_FORMAT_R16G16B16_UNORM&lt;/code&gt; specifies a three-component, 48-bit unsigned normalized format that has a 16-bit R component in bytes 0..1, a 16-bit G component in bytes 2..3, and a 16-bit B component in bytes 4..5.</source>
          <target state="translated">&lt;code&gt;VK_FORMAT_R16G16B16_UNORM&lt;/code&gt; 은 바이트 0..1의 16 비트 R 구성 요소, 바이트 2..3의 16 비트 G 구성 요소 및 바이트의 16 비트 B 구성 요소를 갖는 3 개의 구성 요소, 48 비트 부호없는 정규화 된 형식을 지정합니다. 4..5.</target>
        </trans-unit>
        <trans-unit id="a258398505290e102a4854dd97dcbc0c89fcd1bc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_FORMAT_R16G16B16_USCALED&lt;/code&gt; specifies a three-component, 48-bit unsigned scaled integer format that has a 16-bit R component in bytes 0..1, a 16-bit G component in bytes 2..3, and a 16-bit B component in bytes 4..5.</source>
          <target state="translated">&lt;code&gt;VK_FORMAT_R16G16B16_USCALED&lt;/code&gt; 는 바이트 0..1의 16 비트 R 구성 요소, 바이트 2..3의 16 비트 G 구성 요소 및 16 비트 B의 16 비트 B 구성 요소를 갖는 3 성분, 48 비트 부호없는 스케일링 정수 형식을 지정합니다. 바이트 4..5.</target>
        </trans-unit>
        <trans-unit id="81902829206351eabdae0a3cb8299fd5051a6065" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_FORMAT_R16G16_SFLOAT&lt;/code&gt; specifies a two-component, 32-bit signed floating-point format that has a 16-bit R component in bytes 0..1, and a 16-bit G component in bytes 2..3.</source>
          <target state="translated">&lt;code&gt;VK_FORMAT_R16G16_SFLOAT&lt;/code&gt; 는 바이트 0..1의 16 비트 R 구성 요소와 바이트 2..3의 16 비트 G 구성 요소를 갖는 2 성분, 32 비트 부호있는 부동 소수점 형식을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="195695ed0e8509631688081e9e470362f5413078" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_FORMAT_R16G16_SINT&lt;/code&gt; specifies a two-component, 32-bit signed integer format that has a 16-bit R component in bytes 0..1, and a 16-bit G component in bytes 2..3.</source>
          <target state="translated">&lt;code&gt;VK_FORMAT_R16G16_SINT&lt;/code&gt; 는 바이트 0..1의 16 비트 R 구성 요소와 바이트 2..3의 16 비트 G 구성 요소를 갖는 2 성분 32 비트 부호있는 정수 형식을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="48431d04f6899d1192a003247c3a6b4051e4b7f4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_FORMAT_R16G16_SNORM&lt;/code&gt; specifies a two-component, 32-bit signed normalized format that has a 16-bit R component in bytes 0..1, and a 16-bit G component in bytes 2..3.</source>
          <target state="translated">&lt;code&gt;VK_FORMAT_R16G16_SNORM&lt;/code&gt; 은 바이트 0..1의 16 비트 R 구성 요소와 바이트 2..3의 16 비트 G 구성 요소를 갖는 2 성분, 32 비트 부호있는 정규화 된 형식을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="61ac5be6d21dbd4e3c8f7936cbd3bb14a836d47c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_FORMAT_R16G16_SSCALED&lt;/code&gt; specifies a two-component, 32-bit signed scaled integer format that has a 16-bit R component in bytes 0..1, and a 16-bit G component in bytes 2..3.</source>
          <target state="translated">&lt;code&gt;VK_FORMAT_R16G16_SSCALED&lt;/code&gt; 는 바이트 0..1의 16 비트 R 구성 요소와 바이트 2..3의 16 비트 G 구성 요소를 갖는 2 성분, 32 비트 부호있는 스케일 정수 형식을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="3020b2f78f357773711fb53c3498d34863779ff9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_FORMAT_R16G16_UINT&lt;/code&gt; specifies a two-component, 32-bit unsigned integer format that has a 16-bit R component in bytes 0..1, and a 16-bit G component in bytes 2..3.</source>
          <target state="translated">&lt;code&gt;VK_FORMAT_R16G16_UINT&lt;/code&gt; 는 바이트 0..1의 16 비트 R 구성 요소와 바이트 2..3의 16 비트 G 구성 요소를 갖는 2 성분 32 비트 부호없는 정수 형식을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="737627405ae2aaf8d9259d103838445ddbdbe528" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_FORMAT_R16G16_UNORM&lt;/code&gt; specifies a two-component, 32-bit unsigned normalized format that has a 16-bit R component in bytes 0..1, and a 16-bit G component in bytes 2..3.</source>
          <target state="translated">&lt;code&gt;VK_FORMAT_R16G16_UNORM&lt;/code&gt; 은 바이트 0..1의 16 비트 R 구성 요소와 바이트 2..3의 16 비트 G 구성 요소를 갖는 2 성분, 32 비트 부호없는 정규화 된 형식을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="97d2d0619daba21eaa01c2f1b4762608fbdc8da0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_FORMAT_R16G16_USCALED&lt;/code&gt; specifies a two-component, 32-bit unsigned scaled integer format that has a 16-bit R component in bytes 0..1, and a 16-bit G component in bytes 2..3.</source>
          <target state="translated">&lt;code&gt;VK_FORMAT_R16G16_USCALED&lt;/code&gt; 는 바이트 0..1의 16 비트 R 구성 요소와 바이트 2..3의 16 비트 G 구성 요소를 갖는 2 성분, 32 비트 부호없는 스케일링 정수 형식을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="446e477e946b5cb57b3bd788c765c74ca4e724cb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_FORMAT_R16_SFLOAT&lt;/code&gt; specifies a one-component, 16-bit signed floating-point format that has a single 16-bit R component.</source>
          <target state="translated">&lt;code&gt;VK_FORMAT_R16_SFLOAT&lt;/code&gt; 는 단일 16 비트 R 구성 요소가있는 단일 구성 요소, 16 비트 부호있는 부동 소수점 형식을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="52daf0a01a2913ea64aa558e2250d4a7f39e827e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_FORMAT_R16_SINT&lt;/code&gt; specifies a one-component, 16-bit signed integer format that has a single 16-bit R component.</source>
          <target state="translated">&lt;code&gt;VK_FORMAT_R16_SINT&lt;/code&gt; 는 단일 16 비트 R 구성 요소가있는 단일 구성 요소, 16 비트 부호있는 정수 형식을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="69be3fc860685240dc2f6615fd82853ebffe6797" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_FORMAT_R16_SNORM&lt;/code&gt; specifies a one-component, 16-bit signed normalized format that has a single 16-bit R component.</source>
          <target state="translated">&lt;code&gt;VK_FORMAT_R16_SNORM&lt;/code&gt; 은 단일 16 비트 R 구성 요소가있는 단일 구성 요소, 16 비트 부호있는 정규화 된 형식을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="050d5b11e439d116452f4f7b7e9126d9deba7a28" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_FORMAT_R16_SSCALED&lt;/code&gt; specifies a one-component, 16-bit signed scaled integer format that has a single 16-bit R component.</source>
          <target state="translated">&lt;code&gt;VK_FORMAT_R16_SSCALED&lt;/code&gt; 는 단일 16 비트 R 구성 요소가있는 단일 구성 요소, 16 비트 부호있는 스케일 정수 형식을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="4f7afe8842518325db66a0e57504bc6fc37159d1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_FORMAT_R16_UINT&lt;/code&gt; specifies a one-component, 16-bit unsigned integer format that has a single 16-bit R component.</source>
          <target state="translated">&lt;code&gt;VK_FORMAT_R16_UINT&lt;/code&gt; 는 단일 16 비트 R 구성 요소가있는 단일 구성 요소, 16 비트 부호없는 정수 형식을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="e62304f4827bf73537edf9cabbe830769105c214" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_FORMAT_R16_UNORM&lt;/code&gt; specifies a one-component, 16-bit unsigned normalized format that has a single 16-bit R component.</source>
          <target state="translated">&lt;code&gt;VK_FORMAT_R16_UNORM&lt;/code&gt; 은 단일 16 비트 R 구성 요소가있는 단일 구성 요소, 16 비트 부호없는 정규화 된 형식을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="cc389e5af1edd73f418e3abaa90efda8e4ddcfc0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_FORMAT_R16_USCALED&lt;/code&gt; specifies a one-component, 16-bit unsigned scaled integer format that has a single 16-bit R component.</source>
          <target state="translated">&lt;code&gt;VK_FORMAT_R16_USCALED&lt;/code&gt; 는 단일 16 비트 R 구성 요소가있는 단일 구성 요소, 16 비트 부호없는 스케일링 정수 형식을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="92a64e40e351ef93ec14ed3533757d6bc93d3992" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_FORMAT_R32G32B32A32_SFLOAT&lt;/code&gt; specifies a four-component, 128-bit signed floating-point format that has a 32-bit R component in bytes 0..3, a 32-bit G component in bytes 4..7, a 32-bit B component in bytes 8..11, and a 32-bit A component in bytes 12..15.</source>
          <target state="translated">&lt;code&gt;VK_FORMAT_R32G32B32A32_SFLOAT&lt;/code&gt; 는 바이트 0..3의 32 비트 R 구성 요소, 바이트 4..7의 32 비트 G 구성 요소, 32 비트 B 구성 요소의 4 성분 128 비트 부호있는 부동 소수점 형식을 지정합니다. 바이트 8..11 및 바이트 12..15의 32 비트 A 구성 요소</target>
        </trans-unit>
        <trans-unit id="e35f03698675372201fca9a0736e063eebc08c77" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_FORMAT_R32G32B32A32_SINT&lt;/code&gt; specifies a four-component, 128-bit signed integer format that has a 32-bit R component in bytes 0..3, a 32-bit G component in bytes 4..7, a 32-bit B component in bytes 8..11, and a 32-bit A component in bytes 12..15.</source>
          <target state="translated">&lt;code&gt;VK_FORMAT_R32G32B32A32_SINT&lt;/code&gt; 는 바이트 0..3의 32 비트 R 구성 요소, 바이트 4..7의 32 비트 G 구성 요소, 바이트 8의 32 비트 B 구성 요소가있는 4 성분 128 비트 부호있는 정수 형식을 지정합니다. ..11 및 바이트 12..15의 32 비트 A 구성 요소</target>
        </trans-unit>
        <trans-unit id="6e911d6792e148642465e9f1bbf386e489ddea23" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_FORMAT_R32G32B32A32_UINT&lt;/code&gt; specifies a four-component, 128-bit unsigned integer format that has a 32-bit R component in bytes 0..3, a 32-bit G component in bytes 4..7, a 32-bit B component in bytes 8..11, and a 32-bit A component in bytes 12..15.</source>
          <target state="translated">&lt;code&gt;VK_FORMAT_R32G32B32A32_UINT&lt;/code&gt; 는 바이트 0..3의 32 비트 R 구성 요소, 바이트 4..7의 32 비트 G 구성 요소, 바이트 8의 32 비트 B 구성 요소를 갖는 4 성분 128 비트 부호없는 정수 형식을 지정합니다. ..11 및 바이트 12..15의 32 비트 A 구성 요소</target>
        </trans-unit>
        <trans-unit id="ee9f859c1ab969bdd990237083627744bc4c78cd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_FORMAT_R32G32B32_SFLOAT&lt;/code&gt; specifies a three-component, 96-bit signed floating-point format that has a 32-bit R component in bytes 0..3, a 32-bit G component in bytes 4..7, and a 32-bit B component in bytes 8..11.</source>
          <target state="translated">&lt;code&gt;VK_FORMAT_R32G32B32_SFLOAT&lt;/code&gt; 는 바이트 0..3의 32 비트 R 구성 요소, 바이트 4..7의 32 비트 G 구성 요소 및 32 비트 B 구성 요소를 갖는 3 성분, 96 비트 부호있는 부동 소수점 형식을 지정합니다. 바이트 단위 8..11.</target>
        </trans-unit>
        <trans-unit id="a29fd857cc9bfc5f2ad050eb4ab6a9fee8ffc445" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_FORMAT_R32G32B32_SINT&lt;/code&gt; specifies a three-component, 96-bit signed integer format that has a 32-bit R component in bytes 0..3, a 32-bit G component in bytes 4..7, and a 32-bit B component in bytes 8..11.</source>
          <target state="translated">&lt;code&gt;VK_FORMAT_R32G32B32_SINT&lt;/code&gt; 는 바이트 0..3의 32 비트 R 구성 요소, 바이트 4..7의 32 비트 G 구성 요소 및 바이트의 32 비트 B 구성 요소를 갖는 3 성분, 96 비트 부호있는 정수 형식을 지정합니다. 8..11.</target>
        </trans-unit>
        <trans-unit id="1c7aa96897b43c0755bc5a63eb8d316a51429274" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_FORMAT_R32G32B32_UINT&lt;/code&gt; specifies a three-component, 96-bit unsigned integer format that has a 32-bit R component in bytes 0..3, a 32-bit G component in bytes 4..7, and a 32-bit B component in bytes 8..11.</source>
          <target state="translated">&lt;code&gt;VK_FORMAT_R32G32B32_UINT&lt;/code&gt; 는 바이트 0..3의 32 비트 R 구성 요소, 바이트 4..7의 32 비트 G 구성 요소 및 바이트의 32 비트 B 구성 요소를 갖는 3 성분, 96 비트 부호없는 정수 형식을 지정합니다. 8..11.</target>
        </trans-unit>
        <trans-unit id="8ad45a741435723b6f4d217a0033794888998d23" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_FORMAT_R32G32_SFLOAT&lt;/code&gt; specifies a two-component, 64-bit signed floating-point format that has a 32-bit R component in bytes 0..3, and a 32-bit G component in bytes 4..7.</source>
          <target state="translated">&lt;code&gt;VK_FORMAT_R32G32_SFLOAT&lt;/code&gt; 는 바이트 0..3의 32 비트 R 구성 요소와 바이트 4..7의 32 비트 G 구성 요소를 갖는 2 성분 64 비트 부호있는 부동 소수점 형식을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="350742f68871926b34c88aa2fee99685a2de0293" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_FORMAT_R32G32_SINT&lt;/code&gt; specifies a two-component, 64-bit signed integer format that has a 32-bit R component in bytes 0..3, and a 32-bit G component in bytes 4..7.</source>
          <target state="translated">&lt;code&gt;VK_FORMAT_R32G32_SINT&lt;/code&gt; 는 바이트 0..3의 32 비트 R 구성 요소와 바이트 4..7의 32 비트 G 구성 요소를 갖는 2 성분 64 비트 부호있는 정수 형식을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="dc40a5827b7fa6d7649edbc508ebead4b63f47d3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_FORMAT_R32G32_UINT&lt;/code&gt; specifies a two-component, 64-bit unsigned integer format that has a 32-bit R component in bytes 0..3, and a 32-bit G component in bytes 4..7.</source>
          <target state="translated">&lt;code&gt;VK_FORMAT_R32G32_UINT&lt;/code&gt; 는 바이트 0..3의 32 비트 R 구성 요소와 바이트 4..7의 32 비트 G 구성 요소를 갖는 2 성분 64 비트 부호없는 정수 형식을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="2156973ce72110b4f0d6a9c517e85e74858b6476" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_FORMAT_R32_SFLOAT&lt;/code&gt; specifies a one-component, 32-bit signed floating-point format that has a single 32-bit R component.</source>
          <target state="translated">&lt;code&gt;VK_FORMAT_R32_SFLOAT&lt;/code&gt; 는 단일 32 비트 R 구성 요소가있는 단일 구성 요소, 32 비트 부호있는 부동 소수점 형식을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="c07a3aaa2d337d777dc9868f941d8eed90526b96" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_FORMAT_R32_SINT&lt;/code&gt; specifies a one-component, 32-bit signed integer format that has a single 32-bit R component.</source>
          <target state="translated">&lt;code&gt;VK_FORMAT_R32_SINT&lt;/code&gt; 는 단일 32 비트 R 구성 요소가있는 단일 구성 요소, 32 비트 부호있는 정수 형식을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="7ac40eaed85ea7d167c1685f2790253ae055111a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_FORMAT_R32_UINT&lt;/code&gt; specifies a one-component, 32-bit unsigned integer format that has a single 32-bit R component.</source>
          <target state="translated">&lt;code&gt;VK_FORMAT_R32_UINT&lt;/code&gt; 는 단일 32 비트 R 구성 요소가있는 단일 구성 요소, 32 비트 부호없는 정수 형식을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="a25a0e8671727860c0da97860dfe71c43bd4bc8f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_FORMAT_R4G4B4A4_UNORM_PACK16&lt;/code&gt; specifies a four-component, 16-bit packed unsigned normalized format that has a 4-bit R component in bits 12..15, a 4-bit G component in bits 8..11, a 4-bit B component in bits 4..7, and a 4-bit A component in bits 0..3.</source>
          <target state="translated">&lt;code&gt;VK_FORMAT_R4G4B4A4_UNORM_PACK16&lt;/code&gt; 은 비트 12..15의 4 비트 R 구성 요소, 비트 8..11의 4 비트 G 구성 요소, 비트의 4 비트 B 구성 요소를 갖는 4 성분 16 비트 팩형 부호없는 정규화 된 형식을 지정합니다. 4..7 및 비트 0..3의 4 비트 A 구성 요소</target>
        </trans-unit>
        <trans-unit id="5c133e4bbc778dc8911994d8eee26275256b24f7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_FORMAT_R4G4_UNORM_PACK8&lt;/code&gt; specifies a two-component, 8-bit packed unsigned normalized format that has a 4-bit R component in bits 4..7, and a 4-bit G component in bits 0..3.</source>
          <target state="translated">&lt;code&gt;VK_FORMAT_R4G4_UNORM_PACK8&lt;/code&gt; 은 비트 4..7에 4 비트 R 구성 요소와 비트 0..3에 4 비트 G 구성 요소를 갖는 2 성분, 8 비트 팩형 부호없는 정규화 된 형식을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="5239eb769888b1c4d8aaf938903a91ee0c2d1f93" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_FORMAT_R5G5B5A1_UNORM_PACK16&lt;/code&gt; specifies a four-component, 16-bit packed unsigned normalized format that has a 5-bit R component in bits 11..15, a 5-bit G component in bits 6..10, a 5-bit B component in bits 1..5, and a 1-bit A component in bit 0.</source>
          <target state="translated">&lt;code&gt;VK_FORMAT_R5G5B5A1_UNORM_PACK16&lt;/code&gt; 은 비트 11..15의 5 비트 R 구성 요소, 비트 6..10의 5 비트 G 구성 요소, 비트의 5 비트 B 구성 요소를 갖는 4 성분 16 비트 팩형 부호없는 표준화 형식을 지정합니다. 1..5 및 비트 0의 1 비트 A 구성 요소</target>
        </trans-unit>
        <trans-unit id="a9830ecc4dd214c4343f11a579d82225953e6387" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_FORMAT_R5G6B5_UNORM_PACK16&lt;/code&gt; specifies a three-component, 16-bit packed unsigned normalized format that has a 5-bit R component in bits 11..15, a 6-bit G component in bits 5..10, and a 5-bit B component in bits 0..4.</source>
          <target state="translated">&lt;code&gt;VK_FORMAT_R5G6B5_UNORM_PACK16&lt;/code&gt; 은 비트 11..15의 5 비트 R 구성 요소, 비트 5..10의 6 비트 G 구성 요소 및 비트 5..10의 5 비트 B 구성 요소를 갖는 3 성분 16 비트 팩형 부호없는 표준화 형식을 지정합니다. 비트 0..4.</target>
        </trans-unit>
        <trans-unit id="14765cfaac6d4408912b5b55c020373f92e6e970" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_FORMAT_R64G64B64A64_SFLOAT&lt;/code&gt; specifies a four-component, 256-bit signed floating-point format that has a 64-bit R component in bytes 0..7, a 64-bit G component in bytes 8..15, a 64-bit B component in bytes 16..23, and a 64-bit A component in bytes 24..31.</source>
          <target state="translated">&lt;code&gt;VK_FORMAT_R64G64B64A64_SFLOAT&lt;/code&gt; 는 바이트 0..7의 64 비트 R 구성 요소, 바이트 8..15의 64 비트 G 구성 요소, 64 비트 B 구성 요소의 4 성분 256 비트 부호있는 부동 소수점 형식을 지정합니다. 바이트 16..23 및 바이트 24..31의 64 비트 A 구성 요소</target>
        </trans-unit>
        <trans-unit id="259c1c5ef43b730131d2b24e04a9c09c7c16f28c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_FORMAT_R64G64B64A64_SINT&lt;/code&gt; specifies a four-component, 256-bit signed integer format that has a 64-bit R component in bytes 0..7, a 64-bit G component in bytes 8..15, a 64-bit B component in bytes 16..23, and a 64-bit A component in bytes 24..31.</source>
          <target state="translated">&lt;code&gt;VK_FORMAT_R64G64B64A64_SINT&lt;/code&gt; 는 바이트 0..7의 64 비트 R 구성 요소, 바이트 8..15의 64 비트 G 구성 요소, 바이트 16의 64 비트 B 구성 요소가있는 4 성분 256 비트 부호있는 정수 형식을 지정합니다. ..23 및 바이트 24..31의 64 비트 A 구성 요소</target>
        </trans-unit>
        <trans-unit id="09d8ec112ea9dde13117907c2a6bfba3af992985" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_FORMAT_R64G64B64A64_UINT&lt;/code&gt; specifies a four-component, 256-bit unsigned integer format that has a 64-bit R component in bytes 0..7, a 64-bit G component in bytes 8..15, a 64-bit B component in bytes 16..23, and a 64-bit A component in bytes 24..31.</source>
          <target state="translated">&lt;code&gt;VK_FORMAT_R64G64B64A64_UINT&lt;/code&gt; 는 바이트 0..7의 64 비트 R 구성 요소, 바이트 8..15의 64 비트 G 구성 요소, 바이트 16의 64 비트 B 구성 요소를 갖는 4 성분 256 비트 부호없는 정수 형식을 지정합니다. ..23 및 바이트 24..31의 64 비트 A 구성 요소</target>
        </trans-unit>
        <trans-unit id="5a14479dfb6dd35bb73f979ccddfdcb437321d28" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_FORMAT_R64G64B64_SFLOAT&lt;/code&gt; specifies a three-component, 192-bit signed floating-point format that has a 64-bit R component in bytes 0..7, a 64-bit G component in bytes 8..15, and a 64-bit B component in bytes 16..23.</source>
          <target state="translated">&lt;code&gt;VK_FORMAT_R64G64B64_SFLOAT&lt;/code&gt; 는 바이트 0..7의 64 비트 R 구성 요소, 바이트 8..15의 64 비트 G 구성 요소 및 64 비트 B 구성 요소를 갖는 3 개의 구성 요소, 192 비트 부호있는 부동 소수점 형식을 지정합니다. 바이트 16..23.</target>
        </trans-unit>
        <trans-unit id="ea5256a55668212a27a6dffdfabc51bba614e12b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_FORMAT_R64G64B64_SINT&lt;/code&gt; specifies a three-component, 192-bit signed integer format that has a 64-bit R component in bytes 0..7, a 64-bit G component in bytes 8..15, and a 64-bit B component in bytes 16..23.</source>
          <target state="translated">&lt;code&gt;VK_FORMAT_R64G64B64_SINT&lt;/code&gt; 는 바이트 0..7의 64 비트 R 구성 요소, 바이트 8..15의 64 비트 G 구성 요소 및 바이트의 64 비트 B 구성 요소를 갖는 3 개의 구성 요소, 192 비트 부호있는 정수 형식을 지정합니다. 16..23.</target>
        </trans-unit>
        <trans-unit id="9d64a65876fe113b21e98238eb011b7983d98b31" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_FORMAT_R64G64B64_UINT&lt;/code&gt; specifies a three-component, 192-bit unsigned integer format that has a 64-bit R component in bytes 0..7, a 64-bit G component in bytes 8..15, and a 64-bit B component in bytes 16..23.</source>
          <target state="translated">&lt;code&gt;VK_FORMAT_R64G64B64_UINT&lt;/code&gt; 는 바이트 0..7의 64 비트 R 구성 요소, 바이트 8..15의 64 비트 G 구성 요소 및 바이트의 64 비트 B 구성 요소를 갖는 3 성분, 192 비트 부호없는 정수 형식을 지정합니다. 16..23.</target>
        </trans-unit>
        <trans-unit id="15fde7a0bc1369fd1aa40807ea4aea3acf995741" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_FORMAT_R64G64_SFLOAT&lt;/code&gt; specifies a two-component, 128-bit signed floating-point format that has a 64-bit R component in bytes 0..7, and a 64-bit G component in bytes 8..15.</source>
          <target state="translated">&lt;code&gt;VK_FORMAT_R64G64_SFLOAT&lt;/code&gt; 는 바이트 0..7의 64 비트 R 구성 요소와 바이트 8..15의 64 비트 G 구성 요소가있는 2 성분 128 비트 부호있는 부동 소수점 형식을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="1956b07a48624929cfaf9d679029f59f119036bb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_FORMAT_R64G64_SINT&lt;/code&gt; specifies a two-component, 128-bit signed integer format that has a 64-bit R component in bytes 0..7, and a 64-bit G component in bytes 8..15.</source>
          <target state="translated">&lt;code&gt;VK_FORMAT_R64G64_SINT&lt;/code&gt; 는 바이트 0..7의 64 비트 R 구성 요소와 바이트 8..15의 64 비트 G 구성 요소를 갖는 2 성분 128 비트 부호있는 정수 형식을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="35e1823b27ef792928878c9c703ba54f77a493cc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_FORMAT_R64G64_UINT&lt;/code&gt; specifies a two-component, 128-bit unsigned integer format that has a 64-bit R component in bytes 0..7, and a 64-bit G component in bytes 8..15.</source>
          <target state="translated">&lt;code&gt;VK_FORMAT_R64G64_UINT&lt;/code&gt; 는 바이트 0..7의 64 비트 R 구성 요소와 바이트 8..15의 64 비트 G 구성 요소를 갖는 2 성분, 128 비트 부호없는 정수 형식을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="b9e9bef5748880f0cdde7d11be172d714828866c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_FORMAT_R64_SFLOAT&lt;/code&gt; specifies a one-component, 64-bit signed floating-point format that has a single 64-bit R component.</source>
          <target state="translated">&lt;code&gt;VK_FORMAT_R64_SFLOAT&lt;/code&gt; 는 단일 64 비트 R 구성 요소가있는 단일 구성 요소, 64 비트 부호있는 부동 소수점 형식을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="192bbeb2362f9a9c5b41e63e117e077c1b5e04f0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_FORMAT_R64_SINT&lt;/code&gt; specifies a one-component, 64-bit signed integer format that has a single 64-bit R component.</source>
          <target state="translated">&lt;code&gt;VK_FORMAT_R64_SINT&lt;/code&gt; 는 단일 64 비트 R 구성 요소가있는 단일 구성 요소, 64 비트 부호있는 정수 형식을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="b80e4fec735a14bd8a3bb538de4daf8d27f34d1c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_FORMAT_R64_UINT&lt;/code&gt; specifies a one-component, 64-bit unsigned integer format that has a single 64-bit R component.</source>
          <target state="translated">&lt;code&gt;VK_FORMAT_R64_UINT&lt;/code&gt; 는 단일 64 비트 R 구성 요소가있는 단일 구성 요소, 64 비트 부호없는 정수 형식을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="592472b96b981663b09a58a170f1d62e87ceca6d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_FORMAT_R8G8B8A8_SINT&lt;/code&gt; specifies a four-component, 32-bit signed integer format that has an 8-bit R component in byte 0, an 8-bit G component in byte 1, an 8-bit B component in byte 2, and an 8-bit A component in byte 3.</source>
          <target state="translated">&lt;code&gt;VK_FORMAT_R8G8B8A8_SINT&lt;/code&gt; 는 바이트 0의 8 비트 R 구성 요소, 바이트 1의 8 비트 G 구성 요소, 바이트 2의 8 비트 B 구성 요소 및 8 비트의 4 성분, 32 비트 부호있는 정수 형식을 지정합니다. 바이트 3의 구성 요소</target>
        </trans-unit>
        <trans-unit id="a7baafd113dc75859699ddd233e2f80071caf98f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_FORMAT_R8G8B8A8_SNORM&lt;/code&gt; specifies a four-component, 32-bit signed normalized format that has an 8-bit R component in byte 0, an 8-bit G component in byte 1, an 8-bit B component in byte 2, and an 8-bit A component in byte 3.</source>
          <target state="translated">&lt;code&gt;VK_FORMAT_R8G8B8A8_SNORM&lt;/code&gt; 은 바이트 0의 8 비트 R 구성 요소, 바이트 1의 8 비트 G 구성 요소, 바이트 2의 8 비트 B 구성 요소 및 8 비트의 4 가지 구성 요소, 32 비트 부호있는 정규화 된 형식을 지정합니다. 바이트 3의 구성 요소</target>
        </trans-unit>
        <trans-unit id="8cf041a152913fd71dbcea596e28aea0802fdeef" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_FORMAT_R8G8B8A8_SRGB&lt;/code&gt; specifies a four-component, 32-bit unsigned normalized format that has an 8-bit R component stored with sRGB nonlinear encoding in byte 0, an 8-bit G component stored with sRGB nonlinear encoding in byte 1, an 8-bit B component stored with sRGB nonlinear encoding in byte 2, and an 8-bit A component in byte 3.</source>
          <target state="translated">&lt;code&gt;VK_FORMAT_R8G8B8A8_SRGB&lt;/code&gt; 는 바이트 0에서 sRGB 비선형 인코딩으로 저장된 8 비트 R 구성 요소, 바이트 1에서 sRGB 비선형 인코딩으로 저장된 8 비트 G 구성 요소, 8 비트 B로 구성된 4 성분, 32 비트 부호없는 정규화 된 형식을 지정합니다. 바이트 2에 sRGB 비선형 인코딩과 바이트 3에 8 비트 A 구성 요소가 저장된 구성 요소</target>
        </trans-unit>
        <trans-unit id="f001bfa37d78f6d56c05584a812f2f919c3463be" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_FORMAT_R8G8B8A8_SSCALED&lt;/code&gt; specifies a four-component, 32-bit signed scaled format that has an 8-bit R component in byte 0, an 8-bit G component in byte 1, an 8-bit B component in byte 2, and an 8-bit A component in byte 3.</source>
          <target state="translated">&lt;code&gt;VK_FORMAT_R8G8B8A8_SSCALED&lt;/code&gt; 는 바이트 0의 8 비트 R 구성 요소, 바이트 1의 8 비트 G 구성 요소, 바이트 2의 8 비트 B 구성 요소 및 8 비트의 4 가지 구성 요소, 32 비트 부호있는 스케일 형식을 지정합니다. 바이트 3의 구성 요소</target>
        </trans-unit>
        <trans-unit id="90620c03f3bd11eacf5395cf29a2d77007f1dbd8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_FORMAT_R8G8B8A8_UINT&lt;/code&gt; specifies a four-component, 32-bit unsigned integer format that has an 8-bit R component in byte 0, an 8-bit G component in byte 1, an 8-bit B component in byte 2, and an 8-bit A component in byte 3.</source>
          <target state="translated">&lt;code&gt;VK_FORMAT_R8G8B8A8_UINT&lt;/code&gt; 는 바이트 0의 8 비트 R 구성 요소, 바이트 1의 8 비트 G 구성 요소, 바이트 2의 8 비트 B 구성 요소 및 8 비트의 4 성분, 32 비트 부호없는 정수 형식을 지정합니다. 바이트 3의 구성 요소</target>
        </trans-unit>
        <trans-unit id="29456d4bc1b5c0867992b3b766294c47e0e7c8dd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_FORMAT_R8G8B8A8_UNORM&lt;/code&gt; specifies a four-component, 32-bit unsigned normalized format that has an 8-bit R component in byte 0, an 8-bit G component in byte 1, an 8-bit B component in byte 2, and an 8-bit A component in byte 3.</source>
          <target state="translated">&lt;code&gt;VK_FORMAT_R8G8B8A8_UNORM&lt;/code&gt; 은 바이트 0의 8 비트 R 구성 요소, 바이트 1의 8 비트 G 구성 요소, 바이트 2의 8 비트 B 구성 요소 및 8 비트를 갖는 4 성분 32 비트 부호없는 정규화 된 형식을 지정합니다. 바이트 3의 구성 요소</target>
        </trans-unit>
        <trans-unit id="91d7a4cf83dd87c28a435636f2cafa406fa7221b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_FORMAT_R8G8B8A8_USCALED&lt;/code&gt; specifies a four-component, 32-bit unsigned scaled format that has an 8-bit R component in byte 0, an 8-bit G component in byte 1, an 8-bit B component in byte 2, and an 8-bit A component in byte 3.</source>
          <target state="translated">&lt;code&gt;VK_FORMAT_R8G8B8A8_USCALED&lt;/code&gt; 는 바이트 0의 8 비트 R 구성 요소, 바이트 1의 8 비트 G 구성 요소, 바이트 2의 8 비트 B 구성 요소 및 8 비트의 4 성분, 32 비트 부호없는 스케일 형식을 지정합니다. 바이트 3의 구성 요소</target>
        </trans-unit>
        <trans-unit id="4b3e75fa87b75cc183d5e2b101382ea0f3b1916e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_FORMAT_R8G8B8_SINT&lt;/code&gt; specifies a three-component, 24-bit signed integer format that has an 8-bit R component in byte 0, an 8-bit G component in byte 1, and an 8-bit B component in byte 2.</source>
          <target state="translated">&lt;code&gt;VK_FORMAT_R8G8B8_SINT&lt;/code&gt; 는 바이트 0의 8 비트 R 구성 요소, 바이트 1의 8 비트 G 구성 요소 및 바이트 2의 8 비트 B 구성 요소를 갖는 3 성분, 24 비트 부호있는 정수 형식을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="6a87e2de80a0b6aed12e0e78b77db65233a7c1a1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_FORMAT_R8G8B8_SNORM&lt;/code&gt; specifies a three-component, 24-bit signed normalized format that has an 8-bit R component in byte 0, an 8-bit G component in byte 1, and an 8-bit B component in byte 2.</source>
          <target state="translated">&lt;code&gt;VK_FORMAT_R8G8B8_SNORM&lt;/code&gt; 은 바이트 0의 8 비트 R 구성 요소, 바이트 1의 8 비트 G 구성 요소 및 바이트 2의 8 비트 B 구성 요소를 갖는 3 성분, 24 비트 부호있는 정규화 된 형식을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="aeada3b2b7a2d6ad9d2fdf5fdec6ade6c5612a33" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_FORMAT_R8G8B8_SRGB&lt;/code&gt; specifies a three-component, 24-bit unsigned normalized format that has an 8-bit R component stored with sRGB nonlinear encoding in byte 0, an 8-bit G component stored with sRGB nonlinear encoding in byte 1, and an 8-bit B component stored with sRGB nonlinear encoding in byte 2.</source>
          <target state="translated">&lt;code&gt;VK_FORMAT_R8G8B8_SRGB&lt;/code&gt; 는 바이트 0에서 sRGB 비선형 인코딩으로 저장된 8 비트 R 구성 요소, 바이트 1에서 sRGB 비선형 인코딩으로 저장된 8 비트 G 구성 요소 및 8 비트로 구성된 3 성분, 24 비트 부호없는 정규화 된 형식을 지정합니다. 바이트 2에 sRGB 비선형 인코딩으로 저장된 B 구성 요소</target>
        </trans-unit>
        <trans-unit id="fe3deae20c95fe1e4791e4d579a7f010474cd366" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_FORMAT_R8G8B8_SSCALED&lt;/code&gt; specifies a three-component, 24-bit signed scaled format that has an 8-bit R component in byte 0, an 8-bit G component in byte 1, and an 8-bit B component in byte 2.</source>
          <target state="translated">&lt;code&gt;VK_FORMAT_R8G8B8_SSCALED&lt;/code&gt; 는 바이트 0의 8 비트 R 구성 요소, 바이트 1의 8 비트 G 구성 요소 및 바이트 2의 8 비트 B 구성 요소를 갖는 3 성분, 24 비트 부호있는 스케일 형식을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="ded60c79aeeecadd0198caab8748144bf782f164" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_FORMAT_R8G8B8_UINT&lt;/code&gt; specifies a three-component, 24-bit unsigned integer format that has an 8-bit R component in byte 0, an 8-bit G component in byte 1, and an 8-bit B component in byte 2.</source>
          <target state="translated">&lt;code&gt;VK_FORMAT_R8G8B8_UINT&lt;/code&gt; 는 바이트 0의 8 비트 R 구성 요소, 바이트 1의 8 비트 G 구성 요소 및 바이트 2의 8 비트 B 구성 요소를 갖는 3 성분, 24 비트 부호없는 정수 형식을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="4b9b4a47425ad8cf8c887b91cc0e49057f10eee8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_FORMAT_R8G8B8_UNORM&lt;/code&gt; specifies a three-component, 24-bit unsigned normalized format that has an 8-bit R component in byte 0, an 8-bit G component in byte 1, and an 8-bit B component in byte 2.</source>
          <target state="translated">&lt;code&gt;VK_FORMAT_R8G8B8_UNORM&lt;/code&gt; 은 바이트 0의 8 비트 R 구성 요소, 바이트 1의 8 비트 G 구성 요소 및 바이트 2의 8 비트 B 구성 요소를 갖는 3 성분, 24 비트 부호없는 정규화 된 형식을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="91a235fcfa9a57c094e6238333453265f5703af3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_FORMAT_R8G8B8_USCALED&lt;/code&gt; specifies a three-component, 24-bit unsigned scaled format that has an 8-bit R component in byte 0, an 8-bit G component in byte 1, and an 8-bit B component in byte 2.</source>
          <target state="translated">&lt;code&gt;VK_FORMAT_R8G8B8_USCALED&lt;/code&gt; 는 바이트 0의 8 비트 R 구성 요소, 바이트 1의 8 비트 G 구성 요소 및 바이트 2의 8 비트 B 구성 요소를 갖는 3 성분, 24 비트 부호없는 스케일 형식을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="419382ecd82405ab9791d51ab89052950406fa10" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_FORMAT_R8G8_SINT&lt;/code&gt; specifies a two-component, 16-bit signed integer format that has an 8-bit R component in byte 0, and an 8-bit G component in byte 1.</source>
          <target state="translated">&lt;code&gt;VK_FORMAT_R8G8_SINT&lt;/code&gt; 는 바이트 0에 8 비트 R 구성 요소가 있고 바이트 1에 8 비트 G 구성 요소가있는 2 성분 16 비트 부호있는 정수 형식을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="d188be644921ea9175acb5c4eabe1085cf36ec0c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_FORMAT_R8G8_SNORM&lt;/code&gt; specifies a two-component, 16-bit signed normalized format that has an 8-bit R component in byte 0, and an 8-bit G component in byte 1.</source>
          <target state="translated">&lt;code&gt;VK_FORMAT_R8G8_SNORM&lt;/code&gt; 은 바이트 0에 8 비트 R 구성 요소가 있고 바이트 1에 8 비트 G 구성 요소가있는 2 성분 16 비트 부호있는 정규화 된 형식을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="da83a0d4ba4d0d54f47a42d921e25029092e5ad3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_FORMAT_R8G8_SRGB&lt;/code&gt; specifies a two-component, 16-bit unsigned normalized format that has an 8-bit R component stored with sRGB nonlinear encoding in byte 0, and an 8-bit G component stored with sRGB nonlinear encoding in byte 1.</source>
          <target state="translated">&lt;code&gt;VK_FORMAT_R8G8_SRGB&lt;/code&gt; 는 바이트 0에서 sRGB 비선형 인코딩으로 저장된 8 비트 R 구성 요소와 바이트 1에서 sRGB 비선형 인코딩으로 저장된 8 비트 G 구성 요소를 갖는 2 성분, 16 비트 부호없는 정규화 된 형식을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="d9ed7a6c17df143abe50ad2756b3d8e46edfcf8d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_FORMAT_R8G8_SSCALED&lt;/code&gt; specifies a two-component, 16-bit signed scaled integer format that has an 8-bit R component in byte 0, and an 8-bit G component in byte 1.</source>
          <target state="translated">&lt;code&gt;VK_FORMAT_R8G8_SSCALED&lt;/code&gt; 는 바이트 0에 8 비트 R 구성 요소가 있고 바이트 1에 8 비트 G 구성 요소가있는 2 성분 16 비트 부호있는 스케일 정수 형식을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="d6951d1fba2be41eb91b1244c29ecac41b62f636" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_FORMAT_R8G8_UINT&lt;/code&gt; specifies a two-component, 16-bit unsigned integer format that has an 8-bit R component in byte 0, and an 8-bit G component in byte 1.</source>
          <target state="translated">&lt;code&gt;VK_FORMAT_R8G8_UINT&lt;/code&gt; 는 바이트 0에 8 비트 R 구성 요소가 있고 바이트 1에 8 비트 G 구성 요소가있는 2 성분 16 비트 부호없는 정수 형식을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="cc3aa3d09029ab47dc0569a34d10cbf4ac5d7f89" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_FORMAT_R8G8_UNORM&lt;/code&gt; specifies a two-component, 16-bit unsigned normalized format that has an 8-bit R component in byte 0, and an 8-bit G component in byte 1.</source>
          <target state="translated">&lt;code&gt;VK_FORMAT_R8G8_UNORM&lt;/code&gt; 은 바이트 0에 8 비트 R 구성 요소와 바이트 1에 8 비트 G 구성 요소를 갖는 2 성분 16 비트 부호없는 정규화 된 형식을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="8aadeeaf61f546ab399c46943e9c665cc90733da" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_FORMAT_R8G8_USCALED&lt;/code&gt; specifies a two-component, 16-bit unsigned scaled integer format that has an 8-bit R component in byte 0, and an 8-bit G component in byte 1.</source>
          <target state="translated">&lt;code&gt;VK_FORMAT_R8G8_USCALED&lt;/code&gt; 는 바이트 0에 8 비트 R 구성 요소가 있고 바이트 1에 8 비트 G 구성 요소가있는 2 성분 16 비트 부호없는 스케일 정수 형식을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="b109620efc282bea03652f2dff96f33a1938cb91" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_FORMAT_R8_SINT&lt;/code&gt; specifies a one-component, 8-bit signed integer format that has a single 8-bit R component.</source>
          <target state="translated">&lt;code&gt;VK_FORMAT_R8_SINT&lt;/code&gt; 는 단일 8 비트 R 구성 요소가있는 단일 구성 요소, 8 비트 부호있는 정수 형식을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="659ab2fc4fbbdc23bea7a43ac9fe9bf9d981e0ce" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_FORMAT_R8_SNORM&lt;/code&gt; specifies a one-component, 8-bit signed normalized format that has a single 8-bit R component.</source>
          <target state="translated">&lt;code&gt;VK_FORMAT_R8_SNORM&lt;/code&gt; 은 단일 8 비트 R 구성 요소가있는 단일 구성 요소, 8 비트 부호있는 정규화 된 형식을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="7e1e959e3888d020b5c0096da1e3ea96602d0fcf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_FORMAT_R8_SRGB&lt;/code&gt; specifies a one-component, 8-bit unsigned normalized format that has a single 8-bit R component stored with sRGB nonlinear encoding.</source>
          <target state="translated">&lt;code&gt;VK_FORMAT_R8_SRGB&lt;/code&gt; 는 sRGB 비선형 인코딩으로 저장된 단일 8 비트 R 구성 요소가있는 단일 구성 요소, 8 비트 부호없는 정규화 된 형식을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="1de8ac5fa559ed1cd400434ea4c88117e0cdbb0f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_FORMAT_R8_SSCALED&lt;/code&gt; specifies a one-component, 8-bit signed scaled integer format that has a single 8-bit R component.</source>
          <target state="translated">&lt;code&gt;VK_FORMAT_R8_SSCALED&lt;/code&gt; 는 단일 8 비트 R 구성 요소가있는 단일 구성 요소, 8 비트 부호있는 스케일 정수 형식을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="584e5b59cf72ab13a02617e9196b7607f632f56c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_FORMAT_R8_UINT&lt;/code&gt; specifies a one-component, 8-bit unsigned integer format that has a single 8-bit R component.</source>
          <target state="translated">&lt;code&gt;VK_FORMAT_R8_UINT&lt;/code&gt; 는 단일 8 비트 R 구성 요소가있는 단일 구성 요소, 8 비트 부호없는 정수 형식을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="2d8b4fbe904581a8f14fb61b9a13182c2709e613" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_FORMAT_R8_UNORM&lt;/code&gt; specifies a one-component, 8-bit unsigned normalized format that has a single 8-bit R component.</source>
          <target state="translated">&lt;code&gt;VK_FORMAT_R8_UNORM&lt;/code&gt; 은 단일 8 비트 R 구성 요소가있는 단일 구성 요소, 8 비트 부호없는 정규화 된 형식을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="057722cff157c0b5ce551c58f9975db2acd57083" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_FORMAT_R8_USCALED&lt;/code&gt; specifies a one-component, 8-bit unsigned scaled integer format that has a single 8-bit R component.</source>
          <target state="translated">&lt;code&gt;VK_FORMAT_R8_USCALED&lt;/code&gt; 는 단일 8 비트 R 구성 요소가있는 단일 구성 요소, 8 비트 부호없는 스케일링 정수 형식을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="e8f8f79246721f9e2cc223bffb5d68c0de4a7747" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_FORMAT_S8_UINT&lt;/code&gt; specifies a one-component, 8-bit unsigned integer format that has 8-bits in the stencil component.</source>
          <target state="translated">&lt;code&gt;VK_FORMAT_S8_UINT&lt;/code&gt; 는 스텐실 구성 요소에 8 비트가있는 단일 구성 요소의 8 비트 부호없는 정수 형식을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="e9aa10ee86223b80b5c745cb19fde81e0598ee3a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_FORMAT_UNDEFINED&lt;/code&gt; indicates that the format is not specified.</source>
          <target state="translated">&lt;code&gt;VK_FORMAT_UNDEFINED&lt;/code&gt; 는 형식이 지정되지 않았 음을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="8bf117b796629fac5f7024a6f20d44ed4b507807" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_FORMAT_X8_D24_UNORM_PACK32&lt;/code&gt; specifies a two-component, 32-bit format that has 24 unsigned normalized bits in the depth component and, optionally:, 8 bits that are unused.</source>
          <target state="translated">&lt;code&gt;VK_FORMAT_X8_D24_UNORM_PACK32&lt;/code&gt; 는 심도 구성 요소에 24 개의 부호없는 정규화 된 비트와 선택적으로 사용되지 않는 8 비트를 갖는 2 개 구성 요소, 32 비트 형식을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="568d4b76399cc6285270824e50adb03e71421558" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_FRONT_FACE_CLOCKWISE&lt;/code&gt; specifies that a triangle with negative area is considered front-facing.</source>
          <target state="translated">&lt;code&gt;VK_FRONT_FACE_CLOCKWISE&lt;/code&gt; 는 음의 영역을 가진 삼각형이 전면을 고려 하도록 지정합니다.</target>
        </trans-unit>
        <trans-unit id="34e9296253f44d4d536fa6bfc7c4a638a3751fd6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_FRONT_FACE_COUNTER_CLOCKWISE&lt;/code&gt; specifies that a triangle with positive area is considered front-facing.</source>
          <target state="translated">&lt;code&gt;VK_FRONT_FACE_COUNTER_CLOCKWISE&lt;/code&gt; 는 양의 영역이있는 삼각형을 정면으로 간주 하도록 지정합니다.</target>
        </trans-unit>
        <trans-unit id="0935e174d9115d0dd88bc7a8b7968638863f6271" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_HEADER_VERSION&lt;/code&gt; is the version number of the vulkan.h header. This value is currently kept synchronized with the release number of the Specification. However, it is not guaranteed to remain synchronized, since most Specification updates have no effect on vulkan.h.</source>
          <target state="translated">&lt;code&gt;VK_HEADER_VERSION&lt;/code&gt; 은 vulkan.h 헤더의 버전 번호입니다. 이 값은 현재 사양의 릴리스 번호와 동기화 된 상태로 유지됩니다. 그러나 대부분의 사양 업데이트는 vulkan.h에 영향을 미치지 않으므로 동기화 된 상태를 유지할 수는 없습니다.</target>
        </trans-unit>
        <trans-unit id="30f8bdd2c882dd2ec64b6c92139f247cbb15d432" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_IMAGE_ASPECT_COLOR_BIT&lt;/code&gt; specifies the color aspect.</source>
          <target state="translated">&lt;code&gt;VK_IMAGE_ASPECT_COLOR_BIT&lt;/code&gt; 는 색상 측면을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="0323b885fdde616075299ee4dbeb9f3fcdc276b4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_IMAGE_ASPECT_DEPTH_BIT&lt;/code&gt; specifies the depth aspect.</source>
          <target state="translated">&lt;code&gt;VK_IMAGE_ASPECT_DEPTH_BIT&lt;/code&gt; 는 깊이 화면을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="9e960c5d534c1f8f1c739d30fd241a01bbcd2a64" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_IMAGE_ASPECT_METADATA_BIT&lt;/code&gt; specifies the metadata aspect, used for sparse &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#sparsememory&quot;&gt;sparse resource&lt;/a&gt; operations.</source>
          <target state="translated">&lt;code&gt;VK_IMAGE_ASPECT_METADATA_BIT&lt;/code&gt; 는 스파 &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#sparsememory&quot;&gt;스&lt;/a&gt; 스파 스 리소스 작업에 사용되는 메타 데이터 측면을 지정합니다 .</target>
        </trans-unit>
        <trans-unit id="5829691d00ff674a99689074919379fc459e22f5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_IMAGE_ASPECT_STENCIL_BIT&lt;/code&gt; specifies the stencil aspect.</source>
          <target state="translated">&lt;code&gt;VK_IMAGE_ASPECT_STENCIL_BIT&lt;/code&gt; 는 스텐실 측면을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="761bdc8aa38c55a1e674bbd59163d5cb25ecc413" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_IMAGE_CREATE_CUBE_COMPATIBLE_BIT&lt;/code&gt; specifies that the image &lt;strong&gt;can&lt;/strong&gt; be used to create a &lt;code&gt;VkImageView&lt;/code&gt; of type &lt;code&gt;VK_IMAGE_VIEW_TYPE_CUBE&lt;/code&gt; or &lt;code&gt;VK_IMAGE_VIEW_TYPE_CUBE_ARRAY&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;VK_IMAGE_CREATE_CUBE_COMPATIBLE_BIT&lt;/code&gt; 의 지정은 영상은 &lt;strong&gt;수&lt;/strong&gt; 크리에이트하는데 사용될 &lt;code&gt;VkImageView&lt;/code&gt; 형 &lt;code&gt;VK_IMAGE_VIEW_TYPE_CUBE&lt;/code&gt; 또는 &lt;code&gt;VK_IMAGE_VIEW_TYPE_CUBE_ARRAY&lt;/code&gt; 를 .</target>
        </trans-unit>
        <trans-unit id="b34f0cba867bb51b885a1f264d62658bea06da49" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_IMAGE_CREATE_MUTABLE_FORMAT_BIT&lt;/code&gt; specifies that the image &lt;strong&gt;can&lt;/strong&gt; be used to create a &lt;code&gt;VkImageView&lt;/code&gt; with a different format from the image.</source>
          <target state="translated">&lt;code&gt;VK_IMAGE_CREATE_MUTABLE_FORMAT_BIT&lt;/code&gt; 는 이미지 &lt;strong&gt;를&lt;/strong&gt; 다른 형식으로 &lt;code&gt;VkImageView&lt;/code&gt; 를 만드는 데 사용할 &lt;strong&gt;수&lt;/strong&gt; 있도록 지정합니다 .</target>
        </trans-unit>
        <trans-unit id="b1f7f483eae85fcae691c183fe15903970e6bccc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_IMAGE_CREATE_SPARSE_ALIASED_BIT&lt;/code&gt; specifies that the image will be backed using sparse memory binding with memory ranges that might also simultaneously be backing another image (or another portion of the same image). Images created with this flag &lt;strong&gt;must&lt;/strong&gt; also be created with the &lt;code&gt;VK_IMAGE_CREATE_SPARSE_BINDING_BIT&lt;/code&gt; flag</source>
          <target state="translated">&lt;code&gt;VK_IMAGE_CREATE_SPARSE_ALIASED_BIT&lt;/code&gt; 는 다른 이미지 (또는 동일한 이미지의 다른 부분)를 동시에 백업 할 수있는 메모리 범위를 가진 스파 스 메모리 바인딩을 사용하여 이미지가 백업 되도록 지정합니다. 이 플래그로 작성된 이미지 도 &lt;code&gt;VK_IMAGE_CREATE_SPARSE_BINDING_BIT&lt;/code&gt; 플래그 로 작성 &lt;strong&gt;해야합니다.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a629d7ea244b452101d878b517f45fd27de308e1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_IMAGE_CREATE_SPARSE_BINDING_BIT&lt;/code&gt; specifies that the image will be backed using sparse memory binding.</source>
          <target state="translated">&lt;code&gt;VK_IMAGE_CREATE_SPARSE_BINDING_BIT&lt;/code&gt; 는 이미지가 스파 스 메모리 바인딩을 사용하여 백업 되도록 지정합니다.</target>
        </trans-unit>
        <trans-unit id="dbcdc0d5c3734ddf35fc1a23aa032ad26602cd64" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_IMAGE_CREATE_SPARSE_RESIDENCY_BIT&lt;/code&gt; specifies that the image &lt;strong&gt;can&lt;/strong&gt; be partially backed using sparse memory binding. Images created with this flag &lt;strong&gt;must&lt;/strong&gt; also be created with the &lt;code&gt;VK_IMAGE_CREATE_SPARSE_BINDING_BIT&lt;/code&gt; flag.</source>
          <target state="translated">&lt;code&gt;VK_IMAGE_CREATE_SPARSE_RESIDENCY_BIT&lt;/code&gt; 는 스파 스 메모리 바인딩을 사용하여 이미지 &lt;strong&gt;를&lt;/strong&gt; 부분적으로 백업 &lt;strong&gt;할 수&lt;/strong&gt; 있도록 지정합니다 . 이 플래그로 작성된 이미지 도 &lt;code&gt;VK_IMAGE_CREATE_SPARSE_BINDING_BIT&lt;/code&gt; 플래그 로 작성 &lt;strong&gt;해야합니다&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="15145ebf49904bdd0d2db4e1d45fc09cec0afdba" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_IMAGE_LAYOUT_COLOR_ATTACHMENT_OPTIMAL&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; only be used as a color or resolve attachment in a &lt;code&gt;VkFramebuffer&lt;/code&gt;. This layout is valid only for image subresources of images created with the &lt;code&gt;VK_IMAGE_USAGE_COLOR_ATTACHMENT_BIT&lt;/code&gt; usage bit enabled.</source>
          <target state="translated">&lt;code&gt;VK_IMAGE_LAYOUT_COLOR_ATTACHMENT_OPTIMAL&lt;/code&gt; &lt;strong&gt;은 &lt;/strong&gt;VkFramebuffer 에서 색상으로 사용되거나 첨부 파일로 해석 &lt;code&gt;VkFramebuffer&lt;/code&gt; 합니다. 이 레이아웃은 &lt;code&gt;VK_IMAGE_USAGE_COLOR_ATTACHMENT_BIT&lt;/code&gt; 사용 비트를 활성화 하여 생성 된 이미지의 이미지 하위 리소스에만 유효합니다 .</target>
        </trans-unit>
        <trans-unit id="292396818dfc1f8344f14224d56a61f0e6b91c22" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_IMAGE_LAYOUT_DEPTH_STENCIL_ATTACHMENT_OPTIMAL&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; only be used as a depth/stencil attachment in a &lt;code&gt;VkFramebuffer&lt;/code&gt;. This layout is valid only for image subresources of images created with the &lt;code&gt;VK_IMAGE_USAGE_DEPTH_STENCIL_ATTACHMENT_BIT&lt;/code&gt; usage bit enabled.</source>
          <target state="translated">&lt;code&gt;VK_IMAGE_LAYOUT_DEPTH_STENCIL_ATTACHMENT_OPTIMAL&lt;/code&gt; &lt;strong&gt;은 &lt;/strong&gt;VkFramebuffer 에서 깊이 / 스텐실 첨부 파일 &lt;code&gt;VkFramebuffer&lt;/code&gt; 합니다. 이 레이아웃은 &lt;code&gt;VK_IMAGE_USAGE_DEPTH_STENCIL_ATTACHMENT_BIT&lt;/code&gt; 사용 비트가 활성화 된 이미지의 이미지 하위 리소스에만 유효합니다 .</target>
        </trans-unit>
        <trans-unit id="b22ef0be4182bd9d2cba3620ff2d5e6b9dc23eab" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_IMAGE_LAYOUT_DEPTH_STENCIL_READ_ONLY_OPTIMAL&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; only be used as a read-only depth/stencil attachment in a &lt;code&gt;VkFramebuffer&lt;/code&gt; and/or as a read-only image in a shader (which &lt;strong&gt;can&lt;/strong&gt; be read as a sampled image, combined image/sampler and/or input attachment). This layout is valid only for image subresources of images created with the &lt;code&gt;VK_IMAGE_USAGE_DEPTH_STENCIL_ATTACHMENT_BIT&lt;/code&gt; usage bit enabled. Only image subresources of images created with &lt;code&gt;VK_IMAGE_USAGE_SAMPLED_BIT&lt;/code&gt;&lt;strong&gt;can&lt;/strong&gt; be used as a sampled image or combined image/sampler in a shader. Similarly, only image subresources of images created with &lt;code&gt;VK_IMAGE_USAGE_INPUT_ATTACHMENT_BIT&lt;/code&gt;&lt;strong&gt;can&lt;/strong&gt; be used as input attachments.</source>
          <target state="translated">&lt;code&gt;VK_IMAGE_LAYOUT_DEPTH_STENCIL_READ_ONLY_OPTIMAL&lt;/code&gt; 는&lt;strong&gt;해야&lt;/strong&gt; 만의 판독 전용 깊이 / 스텐실 첨부 사용될 &lt;code&gt;VkFramebuffer&lt;/code&gt; 및 / 또는 셰이더 읽기 전용 화상 (AS &lt;strong&gt;수&lt;/strong&gt; 샘플링 화상으로서 판독, 결합 화상 / 샘플러 및 / 또는 입력 첨부). 이 레이아웃은 &lt;code&gt;VK_IMAGE_USAGE_DEPTH_STENCIL_ATTACHMENT_BIT&lt;/code&gt; 사용 비트가 활성화 된 이미지의 이미지 하위 리소스에만 유효합니다 . &lt;code&gt;VK_IMAGE_USAGE_SAMPLED_BIT&lt;/code&gt; 로 생성 된 이미지의 이미지 하위 리소스 만 셰이더에서 샘플링 된 이미지 또는 결합 된 이미지 / 샘플러로 사용할 &lt;strong&gt;수&lt;/strong&gt; 있습니다. 마찬가지로 &lt;code&gt;VK_IMAGE_USAGE_INPUT_ATTACHMENT_BIT&lt;/code&gt; 로 만든 이미지의 이미지 하위 리소스 만 입력 첨부 파일로 사용할 &lt;strong&gt;수&lt;/strong&gt; 있습니다.</target>
        </trans-unit>
        <trans-unit id="c9c2fe10dbdedf7e4c9c8bac00738c49c4036fd9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_IMAGE_LAYOUT_GENERAL&lt;/code&gt; supports all types of device access.</source>
          <target state="translated">&lt;code&gt;VK_IMAGE_LAYOUT_GENERAL&lt;/code&gt; 은 모든 유형의 장치 액세스를 지원합니다.</target>
        </trans-unit>
        <trans-unit id="730f5d1a2417707de1dc4b99e5f7305e984458c0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_IMAGE_LAYOUT_PREINITIALIZED&lt;/code&gt; does not support device access. This layout &lt;strong&gt;must&lt;/strong&gt; only be used as the &lt;code&gt;initialLayout&lt;/code&gt; member of &lt;code&gt;VkImageCreateInfo&lt;/code&gt; or &lt;code&gt;VkAttachmentDescription&lt;/code&gt;, or as the &lt;code&gt;oldLayout&lt;/code&gt; in an image transition. When transitioning out of this layout, the contents of the memory are preserved. This layout is intended to be used as the initial layout for an image whose contents are written by the host, and hence the data &lt;strong&gt;can&lt;/strong&gt; be written to memory immediately, without first executing a layout transition. Currently, &lt;code&gt;VK_IMAGE_LAYOUT_PREINITIALIZED&lt;/code&gt; is only useful with &lt;code&gt;VK_IMAGE_TILING_LINEAR&lt;/code&gt; images because there is not a standard layout defined for &lt;code&gt;VK_IMAGE_TILING_OPTIMAL&lt;/code&gt; images.</source>
          <target state="translated">&lt;code&gt;VK_IMAGE_LAYOUT_PREINITIALIZED&lt;/code&gt; 는 장치 액세스를 지원하지 않습니다. 이 레이아웃 &lt;strong&gt;은 &lt;/strong&gt; &lt;code&gt;VkImageCreateInfo&lt;/code&gt; 또는 &lt;code&gt;VkAttachmentDescription&lt;/code&gt; 의 &lt;code&gt;initialLayout&lt;/code&gt; 멤버 또는 이미지 전환시 &lt;code&gt;oldLayout&lt;/code&gt; 으로 만 사용해야 합니다. 이 레이아웃에서 전환하면 메모리의 내용이 유지됩니다. 이 레이아웃은 호스트가 내용을 쓴 이미지의 초기 레이아웃으로 사용되므로 먼저 레이아웃 전환을 실행하지 않고도 데이터 를 메모리에 즉시 쓸 &lt;strong&gt;수&lt;/strong&gt; 있습니다. 현재 &lt;code&gt;VK_IMAGE_LAYOUT_PREINITIALIZED&lt;/code&gt; 은 만 유용 &lt;code&gt;VK_IMAGE_TILING_LINEAR&lt;/code&gt; &lt;strong&gt;&lt;/strong&gt; &lt;code&gt;VK_IMAGE_TILING_OPTIMAL&lt;/code&gt; 이미지에 정의 된 표준 레이아웃이 없기 때문에 이미지.</target>
        </trans-unit>
        <trans-unit id="a56ec793995b1ca0f1e6094a1042c4ba117c0a22" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_IMAGE_LAYOUT_SHADER_READ_ONLY_OPTIMAL&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; only be used as a read-only image in a shader (which &lt;strong&gt;can&lt;/strong&gt; be read as a sampled image, combined image/sampler and/or input attachment). This layout is valid only for image subresources of images created with the &lt;code&gt;VK_IMAGE_USAGE_SAMPLED_BIT&lt;/code&gt; or &lt;code&gt;VK_IMAGE_USAGE_INPUT_ATTACHMENT_BIT&lt;/code&gt; usage bit enabled.</source>
          <target state="translated">&lt;code&gt;VK_IMAGE_LAYOUT_SHADER_READ_ONLY_OPTIMAL&lt;/code&gt; &lt;strong&gt;은&lt;/strong&gt; 셰이더에서 읽기 전용 이미지로만 &lt;strong&gt;사용해야합니다&lt;/strong&gt; ( 샘플링 된 이미지, 결합 된 이미지 / 샘플러 및 / 또는 입력 첨부 파일로 읽을 &lt;strong&gt;수&lt;/strong&gt; 있음). 이 레이아웃은 &lt;code&gt;VK_IMAGE_USAGE_SAMPLED_BIT&lt;/code&gt; 또는 &lt;code&gt;VK_IMAGE_USAGE_INPUT_ATTACHMENT_BIT&lt;/code&gt; 사용 비트가 활성화 된 이미지의 이미지 하위 리소스에만 유효합니다 .</target>
        </trans-unit>
        <trans-unit id="fe769712d05308dacf3ad4ec22d47a98c36609e9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; only be used as a destination image of a transfer command. This layout is valid only for image subresources of images created with the &lt;code&gt;VK_IMAGE_USAGE_TRANSFER_DST_BIT&lt;/code&gt; usage bit enabled.</source>
          <target state="translated">&lt;code&gt;VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL&lt;/code&gt; &lt;strong&gt;은&lt;/strong&gt; 전송 명령의 대상 이미지로만 &lt;strong&gt;사용해야합니다&lt;/strong&gt; . 이 레이아웃은 &lt;code&gt;VK_IMAGE_USAGE_TRANSFER_DST_BIT&lt;/code&gt; 사용 비트가 활성화 된 이미지의 이미지 하위 리소스에만 유효합니다 .</target>
        </trans-unit>
        <trans-unit id="aea9e868962acc400a51bd66fb6217347d83f55b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; only be used as a source image of a transfer command (see the definition of &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-pipeline-stages-transfer&quot;&gt;&lt;code&gt;VK_PIPELINE_STAGE_TRANSFER_BIT&lt;/code&gt;&lt;/a&gt;). This layout is valid only for image subresources of images created with the &lt;code&gt;VK_IMAGE_USAGE_TRANSFER_SRC_BIT&lt;/code&gt; usage bit enabled.</source>
          <target state="translated">&lt;code&gt;VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL&lt;/code&gt; &lt;strong&gt;은&lt;/strong&gt; 전송 명령의 소스 이미지로만 &lt;strong&gt;사용해야합니다&lt;/strong&gt; ( &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-pipeline-stages-transfer&quot;&gt; &lt;code&gt;VK_PIPELINE_STAGE_TRANSFER_BIT&lt;/code&gt; &lt;/a&gt; 정의 참조 ). 이 레이아웃은 &lt;code&gt;VK_IMAGE_USAGE_TRANSFER_SRC_BIT&lt;/code&gt; 사용 비트가 활성화 된 이미지의 이미지 하위 리소스에만 유효합니다 .</target>
        </trans-unit>
        <trans-unit id="00551e13a036e115319d12974924141946b1195d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_IMAGE_LAYOUT_UNDEFINED&lt;/code&gt; does not support device access. This layout &lt;strong&gt;must&lt;/strong&gt; only be used as the &lt;code&gt;initialLayout&lt;/code&gt; member of &lt;code&gt;VkImageCreateInfo&lt;/code&gt; or &lt;code&gt;VkAttachmentDescription&lt;/code&gt;, or as the &lt;code&gt;oldLayout&lt;/code&gt; in an image transition. When transitioning out of this layout, the contents of the memory are not guaranteed to be preserved.</source>
          <target state="translated">&lt;code&gt;VK_IMAGE_LAYOUT_UNDEFINED&lt;/code&gt; 는 장치 액세스를 지원하지 않습니다. 이 레이아웃 &lt;strong&gt;은 &lt;/strong&gt; &lt;code&gt;VkImageCreateInfo&lt;/code&gt; 또는 &lt;code&gt;VkAttachmentDescription&lt;/code&gt; 의 &lt;code&gt;initialLayout&lt;/code&gt; 멤버 또는 이미지 전환시 &lt;code&gt;oldLayout&lt;/code&gt; 으로 만 사용해야 합니다. 이 레이아웃에서 전환 할 때 메모리의 내용이 보존되지 않을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5f6823cd0bb0b7783d0ecf3e52da997b6cbf3a92" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_IMAGE_TILING_LINEAR&lt;/code&gt; specifies linear tiling (texels are laid out in memory in row-major order, possibly with some padding on each row).</source>
          <target state="translated">&lt;code&gt;VK_IMAGE_TILING_LINEAR&lt;/code&gt; 는 선형 타일링을 지정합니다 (텍셀은 각 행에 약간의 패딩이있는 행 주요 순서로 메모리에 배치됨 ).</target>
        </trans-unit>
        <trans-unit id="ec74c5c87f8882f0fd14aa1ae03b83b6df24058e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_IMAGE_TILING_OPTIMAL&lt;/code&gt; specifies optimal tiling (texels are laid out in an implementation-dependent arrangement, for more optimal memory access).</source>
          <target state="translated">&lt;code&gt;VK_IMAGE_TILING_OPTIMAL&lt;/code&gt; 은 최적의 타일링을 지정합니다 (보다 최적의 메모리 액세스를 위해 텍셀이 구현 종속 배열로 배치됨 ).</target>
        </trans-unit>
        <trans-unit id="931209da3c2635a119f1dc295ec9900babd409ad" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_IMAGE_TYPE_1D&lt;/code&gt; specifies a one-dimensional image.</source>
          <target state="translated">&lt;code&gt;VK_IMAGE_TYPE_1D&lt;/code&gt; 는 1 차원 이미지를 지정합니다.</target>
        </trans-unit>
        <trans-unit id="5a40209ca6164fa0b487385157b2d03dde464ad0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_IMAGE_TYPE_2D&lt;/code&gt; specifies a two-dimensional image.</source>
          <target state="translated">&lt;code&gt;VK_IMAGE_TYPE_2D&lt;/code&gt; 는 2 차원 이미지를 지정합니다.</target>
        </trans-unit>
        <trans-unit id="bc432a5eb0d57b6b90ab5df9e1dd900f609e5c7c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_IMAGE_TYPE_3D&lt;/code&gt; specifies a three-dimensional image.</source>
          <target state="translated">&lt;code&gt;VK_IMAGE_TYPE_3D&lt;/code&gt; 는 3 차원 이미지를 지정합니다.</target>
        </trans-unit>
        <trans-unit id="32cee321a9c7b1ae71853e291d45711fc60df514" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_IMAGE_USAGE_COLOR_ATTACHMENT_BIT&lt;/code&gt; specifies that the image &lt;strong&gt;can&lt;/strong&gt; be used to create a &lt;code&gt;VkImageView&lt;/code&gt; suitable for use as a color or resolve attachment in a &lt;code&gt;VkFramebuffer&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;VK_IMAGE_USAGE_COLOR_ATTACHMENT_BIT&lt;/code&gt; 에 지정 화상은 &lt;strong&gt;수&lt;/strong&gt; 크리에이트하는데 사용될 &lt;code&gt;VkImageView&lt;/code&gt; A의 색상 또는 리졸 첨부로서 사용하기에 적합한 &lt;code&gt;VkFramebuffer&lt;/code&gt; 를 .</target>
        </trans-unit>
        <trans-unit id="3d02a907b3f5fbd026fa7f0cfe8190a736b1523d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_IMAGE_USAGE_DEPTH_STENCIL_ATTACHMENT_BIT&lt;/code&gt; specifies that the image &lt;strong&gt;can&lt;/strong&gt; be used to create a &lt;code&gt;VkImageView&lt;/code&gt; suitable for use as a depth/stencil attachment in a &lt;code&gt;VkFramebuffer&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;VK_IMAGE_USAGE_DEPTH_STENCIL_ATTACHMENT_BIT&lt;/code&gt; 의 화상이되도록 지정 &lt;strong&gt;수&lt;/strong&gt; 크리에이트하는데 사용될 &lt;code&gt;VkImageView&lt;/code&gt; A의 깊이 / 스텐실 부착물로서 사용하기에 적합한 &lt;code&gt;VkFramebuffer&lt;/code&gt; 를 .</target>
        </trans-unit>
        <trans-unit id="175e8cede0b1d1353cc0db4ed53f1fbe460add60" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_IMAGE_USAGE_INPUT_ATTACHMENT_BIT&lt;/code&gt; specifies that the image &lt;strong&gt;can&lt;/strong&gt; be used to create a &lt;code&gt;VkImageView&lt;/code&gt; suitable for occupying &lt;code&gt;VkDescriptorSet&lt;/code&gt; slot of type &lt;code&gt;VK_DESCRIPTOR_TYPE_INPUT_ATTACHMENT&lt;/code&gt;; be read from a shader as an input attachment; and be used as an input attachment in a framebuffer.</source>
          <target state="translated">&lt;code&gt;VK_IMAGE_USAGE_INPUT_ATTACHMENT_BIT&lt;/code&gt; 의 화상이되도록 지정 &lt;strong&gt;수&lt;/strong&gt; 크리에이트하는데 사용될 &lt;code&gt;VkImageView&lt;/code&gt; 점유 적합한 &lt;code&gt;VkDescriptorSet&lt;/code&gt; 의 타입의 슬롯 &lt;code&gt;VK_DESCRIPTOR_TYPE_INPUT_ATTACHMENT&lt;/code&gt; 을 ; 셰이더에서 입력 첨부 파일로 읽습니다. 프레임 버퍼에서 입력 첨부 파일로 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="0b3c6a6d22f049b8c053b983ad9b2fe2ae3b152e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_IMAGE_USAGE_SAMPLED_BIT&lt;/code&gt; specifies that the image &lt;strong&gt;can&lt;/strong&gt; be used to create a &lt;code&gt;VkImageView&lt;/code&gt; suitable for occupying a &lt;code&gt;VkDescriptorSet&lt;/code&gt; slot either of type &lt;code&gt;VK_DESCRIPTOR_TYPE_SAMPLED_IMAGE&lt;/code&gt; or &lt;code&gt;VK_DESCRIPTOR_TYPE_COMBINED_IMAGE_SAMPLER&lt;/code&gt;, and be sampled by a shader.</source>
          <target state="translated">&lt;code&gt;VK_IMAGE_USAGE_SAMPLED_BIT&lt;/code&gt; 는 &lt;code&gt;VK_DESCRIPTOR_TYPE_SAMPLED_IMAGE&lt;/code&gt; 또는 &lt;code&gt;VK_DESCRIPTOR_TYPE_COMBINED_IMAGE_SAMPLER&lt;/code&gt; 유형 중 하나 인 &lt;code&gt;VkDescriptorSet&lt;/code&gt; 슬롯 을 점유하기에 적합한 &lt;code&gt;VkImageView&lt;/code&gt; 를 작성하는 데 이미지 &lt;strong&gt;를&lt;/strong&gt; 사용 하고 셰이더로 샘플링하도록 지정합니다.</target>
        </trans-unit>
        <trans-unit id="e4576e926902ab7a5af1b470ed8c197fdabb50db" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_IMAGE_USAGE_STORAGE_BIT&lt;/code&gt; specifies that the image &lt;strong&gt;can&lt;/strong&gt; be used to create a &lt;code&gt;VkImageView&lt;/code&gt; suitable for occupying a &lt;code&gt;VkDescriptorSet&lt;/code&gt; slot of type &lt;code&gt;VK_DESCRIPTOR_TYPE_STORAGE_IMAGE&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;VK_IMAGE_USAGE_STORAGE_BIT&lt;/code&gt; 에 지정 화상은 &lt;strong&gt;수&lt;/strong&gt; 크리에이트하는데 사용될 &lt;code&gt;VkImageView&lt;/code&gt; 점유 적합한 &lt;code&gt;VkDescriptorSet&lt;/code&gt; 의 타입의 슬롯 &lt;code&gt;VK_DESCRIPTOR_TYPE_STORAGE_IMAGE&lt;/code&gt; 를 .</target>
        </trans-unit>
        <trans-unit id="bb085e2c09c470ef4ed22cdc77f1a5dca98e7937" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_IMAGE_USAGE_TRANSFER_DST_BIT&lt;/code&gt; specifies that the image &lt;strong&gt;can&lt;/strong&gt; be used as the destination of a transfer command.</source>
          <target state="translated">&lt;code&gt;VK_IMAGE_USAGE_TRANSFER_DST_BIT&lt;/code&gt; 는 이미지 &lt;strong&gt;를&lt;/strong&gt; 전송 명령의 대상으로 사용할 &lt;strong&gt;수&lt;/strong&gt; 있도록 지정합니다 .</target>
        </trans-unit>
        <trans-unit id="0322bbcfa4b13f1538b06362c9d55bad05efa003" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_IMAGE_USAGE_TRANSFER_SRC_BIT&lt;/code&gt; specifies that the image &lt;strong&gt;can&lt;/strong&gt; be used as the source of a transfer command.</source>
          <target state="translated">&lt;code&gt;VK_IMAGE_USAGE_TRANSFER_SRC_BIT&lt;/code&gt; 는 이미지 &lt;strong&gt;를&lt;/strong&gt; 전송 명령의 소스로 사용할 &lt;strong&gt;수&lt;/strong&gt; 있도록 지정합니다 .</target>
        </trans-unit>
        <trans-unit id="95ce3bee9f181cdf5ffa9c545a6c39b8e2ad83b7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_IMAGE_USAGE_TRANSIENT_ATTACHMENT_BIT&lt;/code&gt; specifies that the memory bound to this image will have been allocated with the &lt;code&gt;VK_MEMORY_PROPERTY_LAZILY_ALLOCATED_BIT&lt;/code&gt; (see &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#memory&quot;&gt;html/vkspec.html#memory&lt;/a&gt; for more detail). This bit &lt;strong&gt;can&lt;/strong&gt; be set for any image that &lt;strong&gt;can&lt;/strong&gt; be used to create a &lt;code&gt;VkImageView&lt;/code&gt; suitable for use as a color, resolve, depth/stencil, or input attachment.</source>
          <target state="translated">&lt;code&gt;VK_IMAGE_USAGE_TRANSIENT_ATTACHMENT_BIT&lt;/code&gt; 는이 이미지에 바인딩 된 메모리가 &lt;code&gt;VK_MEMORY_PROPERTY_LAZILY_ALLOCATED_BIT&lt;/code&gt; 로 할당되도록 지정합니다 (자세한 내용은 &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#memory&quot;&gt;html / vkspec.html # memory&lt;/a&gt; 참조). 이 비트 &lt;strong&gt;는&lt;/strong&gt; 색상, &lt;code&gt;VkImageView&lt;/code&gt; , 깊이 / 스텐실 또는 입력 첨부 파일로 사용하기에 적합한 VkImageView 를 만드는 데 사용할 &lt;strong&gt;수&lt;/strong&gt; 있는 모든 이미지에 대해 &lt;strong&gt;설정할 수&lt;/strong&gt; 있습니다 .</target>
        </trans-unit>
        <trans-unit id="463d557f6fee67fdda0b576025efcc0e829f7bfa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_INCOMPLETE&lt;/code&gt; A return array was too small for the result</source>
          <target state="translated">&lt;code&gt;VK_INCOMPLETE&lt;/code&gt; 반환 배열이 너무 작아 결과가</target>
        </trans-unit>
        <trans-unit id="d8645176981b2e3ae9013fc7439293a666d7bf14" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_INDEX_TYPE_UINT16&lt;/code&gt; specifies that indices are 16-bit unsigned integer values.</source>
          <target state="translated">&lt;code&gt;VK_INDEX_TYPE_UINT16&lt;/code&gt; 은 인덱스가 부호없는 16 비트 정수 값 임을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="3224d2d6fa8a9b12b95802c2358cfcedb4617fa5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_INDEX_TYPE_UINT32&lt;/code&gt; specifies that indices are 32-bit unsigned integer values.</source>
          <target state="translated">&lt;code&gt;VK_INDEX_TYPE_UINT32&lt;/code&gt; 는 인덱스가 부호없는 32 비트 정수 값 임을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="81feb44664f872d5007a52170f354c62270f4e3e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_INTERNAL_ALLOCATION_TYPE_EXECUTABLE&lt;/code&gt; specifies that the allocation is intended for execution by the host.</source>
          <target state="translated">&lt;code&gt;VK_INTERNAL_ALLOCATION_TYPE_EXECUTABLE&lt;/code&gt; 은 할당이 호스트에서 실행되도록 지정합니다.</target>
        </trans-unit>
        <trans-unit id="f31cdb977724418d2c9e55562f4cf2934226b90a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_MAKE_VERSION&lt;/code&gt; constructs an API version number.</source>
          <target state="translated">&lt;code&gt;VK_MAKE_VERSION&lt;/code&gt; 은 API 버전 번호를 구성합니다.</target>
        </trans-unit>
        <trans-unit id="28f253c028a67535532e556c9afb8404b82e940e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_MEMORY_HEAP_DEVICE_LOCAL_BIT&lt;/code&gt; indicates that the heap corresponds to device local memory. Device local memory &lt;strong&gt;may&lt;/strong&gt; have different performance characteristics than host local memory, and &lt;strong&gt;may&lt;/strong&gt; support different memory property flags.</source>
          <target state="translated">&lt;code&gt;VK_MEMORY_HEAP_DEVICE_LOCAL_BIT&lt;/code&gt; 는 힙이 장치 로컬 메모리에 해당함을 나타냅니다. 장치 로컬 메모리 &lt;strong&gt;는&lt;/strong&gt; 호스트 로컬 메모리와 다른 성능 특성을 가질 &lt;strong&gt;수&lt;/strong&gt; 있으며 다른 메모리 속성 플래그를 지원할 &lt;strong&gt;수 있습니다&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="8c0a2aeed75b416e9ce66eef74c71f0d93ccddff" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_MEMORY_PROPERTY_DEVICE_LOCAL_BIT&lt;/code&gt; bit indicates that memory allocated with this type is the most efficient for device access. This property will only be set for memory types belonging to heaps with the &lt;code&gt;VK_MEMORY_HEAP_DEVICE_LOCAL_BIT&lt;/code&gt; set.</source>
          <target state="translated">&lt;code&gt;VK_MEMORY_PROPERTY_DEVICE_LOCAL_BIT&lt;/code&gt; 비트는이 유형으로 할당 된 메모리가 장치 액세스에 가장 효율적임을 나타냅니다. 이 특성은 &lt;code&gt;VK_MEMORY_HEAP_DEVICE_LOCAL_BIT&lt;/code&gt; 가 설정된 힙에 속하는 메모리 유형에 대해서만 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="7f43935477755f64a4d5f46dde4a7bf7a32c9ff5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_MEMORY_PROPERTY_DEVICE_LOCAL_BIT&lt;/code&gt; | &lt;code&gt;VK_MEMORY_PROPERTY_HOST_VISIBLE_BIT&lt;/code&gt; | &lt;code&gt;VK_MEMORY_PROPERTY_HOST_CACHED_BIT&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;VK_MEMORY_PROPERTY_DEVICE_LOCAL_BIT&lt;/code&gt; | &lt;code&gt;VK_MEMORY_PROPERTY_HOST_VISIBLE_BIT&lt;/code&gt; | &lt;code&gt;VK_MEMORY_PROPERTY_HOST_CACHED_BIT&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b99149c4c001887f62d55c4534d113c4ab63d64f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_MEMORY_PROPERTY_DEVICE_LOCAL_BIT&lt;/code&gt; | &lt;code&gt;VK_MEMORY_PROPERTY_HOST_VISIBLE_BIT&lt;/code&gt; | &lt;code&gt;VK_MEMORY_PROPERTY_HOST_CACHED_BIT&lt;/code&gt; | &lt;code&gt;VK_MEMORY_PROPERTY_HOST_COHERENT_BIT&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;VK_MEMORY_PROPERTY_DEVICE_LOCAL_BIT&lt;/code&gt; | &lt;code&gt;VK_MEMORY_PROPERTY_HOST_VISIBLE_BIT&lt;/code&gt; | &lt;code&gt;VK_MEMORY_PROPERTY_HOST_CACHED_BIT&lt;/code&gt; | &lt;code&gt;VK_MEMORY_PROPERTY_HOST_COHERENT_BIT&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8dae54de58f08bbf4229cde30c91f9ea6fa75cb4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_MEMORY_PROPERTY_DEVICE_LOCAL_BIT&lt;/code&gt; | &lt;code&gt;VK_MEMORY_PROPERTY_HOST_VISIBLE_BIT&lt;/code&gt; | &lt;code&gt;VK_MEMORY_PROPERTY_HOST_COHERENT_BIT&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;VK_MEMORY_PROPERTY_DEVICE_LOCAL_BIT&lt;/code&gt; | &lt;code&gt;VK_MEMORY_PROPERTY_HOST_VISIBLE_BIT&lt;/code&gt; | &lt;code&gt;VK_MEMORY_PROPERTY_HOST_COHERENT_BIT&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="068c6c25f19913de86538c844c172c4d2cd9366d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_MEMORY_PROPERTY_DEVICE_LOCAL_BIT&lt;/code&gt; | &lt;code&gt;VK_MEMORY_PROPERTY_LAZILY_ALLOCATED_BIT&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;VK_MEMORY_PROPERTY_DEVICE_LOCAL_BIT&lt;/code&gt; | &lt;code&gt;VK_MEMORY_PROPERTY_LAZILY_ALLOCATED_BIT&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="711b39261aff57e83297dda31f401becd0d00888" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_MEMORY_PROPERTY_HOST_CACHED_BIT&lt;/code&gt; bit indicates that memory allocated with this type is cached on the host. Host memory accesses to uncached memory are slower than to cached memory, however uncached memory is always host coherent.</source>
          <target state="translated">&lt;code&gt;VK_MEMORY_PROPERTY_HOST_CACHED_BIT&lt;/code&gt; 비트는이 유형으로 할당 된 메모리가 호스트에서 캐시됨을 나타냅니다. 캐시되지 않은 메모리에 대한 호스트 메모리 액세스는 캐시 된 메모리보다 느리지 만 캐시되지 않은 메모리는 항상 호스트 일관성입니다.</target>
        </trans-unit>
        <trans-unit id="64d1e89582628d530a1670524f58fdd47d8ef43e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_MEMORY_PROPERTY_HOST_COHERENT_BIT&lt;/code&gt; bit indicates that the host cache management commands &lt;a href=&quot;#vkFlushMappedMemoryRanges&quot;&gt;vkFlushMappedMemoryRanges&lt;/a&gt; and &lt;a href=&quot;#vkInvalidateMappedMemoryRanges&quot;&gt;vkInvalidateMappedMemoryRanges&lt;/a&gt; are not needed to flush host writes to the device or make device writes visible to the host, respectively.</source>
          <target state="translated">&lt;code&gt;VK_MEMORY_PROPERTY_HOST_COHERENT_BIT&lt;/code&gt; 비트는 호스트 캐시 관리 명령 &lt;a href=&quot;#vkFlushMappedMemoryRanges&quot;&gt;vkFlushMappedMemoryRanges&lt;/a&gt; 및 &lt;a href=&quot;#vkInvalidateMappedMemoryRanges&quot;&gt;vkInvalidateMappedMemoryRanges&lt;/a&gt; 가 장치에 대한 호스트 쓰기를 플러시하거나 장치 쓰기를 호스트에 각각 표시하는 데 필요하지 않음을 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="03cd1158dd104e446837994d43a57be58ca4f21d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_MEMORY_PROPERTY_HOST_VISIBLE_BIT&lt;/code&gt; bit indicates that memory allocated with this type &lt;strong&gt;can&lt;/strong&gt; be mapped for host access using &lt;a href=&quot;#vkMapMemory&quot;&gt;vkMapMemory&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;VK_MEMORY_PROPERTY_HOST_VISIBLE_BIT&lt;/code&gt; 비트는이 유형으로 할당 된 메모리가 &lt;a href=&quot;#vkMapMemory&quot;&gt;vkMapMemory를&lt;/a&gt; 사용하여 호스트 액세스를 위해 맵핑 될 &lt;strong&gt;수&lt;/strong&gt; 있음을 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="0c851b198b5410dad9cda07ea9f019f623c31bc6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_MEMORY_PROPERTY_HOST_VISIBLE_BIT&lt;/code&gt; | &lt;code&gt;VK_MEMORY_PROPERTY_HOST_CACHED_BIT&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;VK_MEMORY_PROPERTY_HOST_VISIBLE_BIT&lt;/code&gt; | &lt;code&gt;VK_MEMORY_PROPERTY_HOST_CACHED_BIT&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b09491b253a09ce04ae53903c998c7f24620481f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_MEMORY_PROPERTY_HOST_VISIBLE_BIT&lt;/code&gt; | &lt;code&gt;VK_MEMORY_PROPERTY_HOST_CACHED_BIT&lt;/code&gt; | &lt;code&gt;VK_MEMORY_PROPERTY_HOST_COHERENT_BIT&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;VK_MEMORY_PROPERTY_HOST_VISIBLE_BIT&lt;/code&gt; | &lt;code&gt;VK_MEMORY_PROPERTY_HOST_CACHED_BIT&lt;/code&gt; | &lt;code&gt;VK_MEMORY_PROPERTY_HOST_COHERENT_BIT&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="44f1fb99efdef1159e1ec9cf2095c3f7ca458013" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_MEMORY_PROPERTY_HOST_VISIBLE_BIT&lt;/code&gt; | &lt;code&gt;VK_MEMORY_PROPERTY_HOST_COHERENT_BIT&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;VK_MEMORY_PROPERTY_HOST_VISIBLE_BIT&lt;/code&gt; | &lt;code&gt;VK_MEMORY_PROPERTY_HOST_COHERENT_BIT&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="fe886eae09d974442d11d6f523f2127ae8ea2d7d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_MEMORY_PROPERTY_LAZILY_ALLOCATED_BIT&lt;/code&gt; bit indicates that the memory type only allows device access to the memory. Memory types &lt;strong&gt;must&lt;/strong&gt; not have both &lt;code&gt;VK_MEMORY_PROPERTY_LAZILY_ALLOCATED_BIT&lt;/code&gt; and &lt;code&gt;VK_MEMORY_PROPERTY_HOST_VISIBLE_BIT&lt;/code&gt; set. Additionally, the object&amp;rsquo;s backing memory &lt;strong&gt;may&lt;/strong&gt; be provided by the implementation lazily as specified in &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#memory-device-lazy_allocation&quot;&gt;Lazily Allocated Memory&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;VK_MEMORY_PROPERTY_LAZILY_ALLOCATED_BIT&lt;/code&gt; 비트는 메모리 유형이 메모리에 대한 장치 액세스 만 허용 함을 나타냅니다. 메모리 유형 에는 &lt;code&gt;VK_MEMORY_PROPERTY_LAZILY_ALLOCATED_BIT&lt;/code&gt; 및 &lt;code&gt;VK_MEMORY_PROPERTY_HOST_VISIBLE_BIT&lt;/code&gt; 가 모두 설정 되어서 &lt;strong&gt;는&lt;/strong&gt; 안됩니다 . 또한 객체의 백업 메모리 &lt;strong&gt;는&lt;/strong&gt; Lazily &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#memory-device-lazy_allocation&quot;&gt;Allocated Memory에&lt;/a&gt; 지정된대로 느리게 구현하여 제공 &lt;strong&gt;할 수&lt;/strong&gt; 있습니다 .&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b2237ef2d67b30721e4d71f5b34bc1bfee7176d8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_NOT_READY&lt;/code&gt; A fence or query has not yet completed</source>
          <target state="translated">&lt;code&gt;VK_NOT_READY&lt;/code&gt; 펜스 또는 쿼리가 아직 완료되지 않았습니다</target>
        </trans-unit>
        <trans-unit id="70a26e3f11c20d16c6bddbd95c78e78b2b8c19f0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_NULL_HANDLE&lt;/code&gt; is a reserved value representing a non-valid object handle. It may be passed to and returned from Vulkan commands only when &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#fundamentals-validusage-handles&quot;&gt;specifically allowed&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;VK_NULL_HANDLE&lt;/code&gt; 은 유효하지 않은 객체 핸들을 나타내는 예약 된 값입니다. &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#fundamentals-validusage-handles&quot;&gt;특별히 허용 된&lt;/a&gt; 경우에만 Vulkan 명령으로 전달 및 반환 될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="3ccf545f7091c63ce9d60cdccf72f377cb8312dd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_PHYSICAL_DEVICE_TYPE_CPU&lt;/code&gt; - the device is typically running on the same processors as the host.</source>
          <target state="translated">&lt;code&gt;VK_PHYSICAL_DEVICE_TYPE_CPU&lt;/code&gt; - 장치는 일반적으로 호스트와 동일한 프로세서에서 실행됩니다.</target>
        </trans-unit>
        <trans-unit id="9cb529d72041e4d11e53d098a0cf481d922b7954" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_PHYSICAL_DEVICE_TYPE_DISCRETE_GPU&lt;/code&gt; - the device is typically a separate processor connected to the host via an interlink.</source>
          <target state="translated">&lt;code&gt;VK_PHYSICAL_DEVICE_TYPE_DISCRETE_GPU&lt;/code&gt; - 장치는 일반적으로 인터링크를 통해 호스트에 연결된 별도의 프로세서입니다.</target>
        </trans-unit>
        <trans-unit id="7782145d937ae2b6f99768b0441aa1f4d081c3b5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_PHYSICAL_DEVICE_TYPE_INTEGRATED_GPU&lt;/code&gt; - the device is typically one embedded in or tightly coupled with the host.</source>
          <target state="translated">&lt;code&gt;VK_PHYSICAL_DEVICE_TYPE_INTEGRATED_GPU&lt;/code&gt; - 장치는 일반적으로 호스트에 내장되거나 밀접하게 연결된 장치입니다.</target>
        </trans-unit>
        <trans-unit id="db1c4e2cdf0bc7be5622a52dd0b57d292d9ae829" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_PHYSICAL_DEVICE_TYPE_OTHER&lt;/code&gt; - the device does not match any other available types.</source>
          <target state="translated">&lt;code&gt;VK_PHYSICAL_DEVICE_TYPE_OTHER&lt;/code&gt; - 기기가 사용 가능한 다른 유형과 일치하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="da5866e904b1ed8e14f515c1bd93223d4502a2a5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_PHYSICAL_DEVICE_TYPE_VIRTUAL_GPU&lt;/code&gt; - the device is typically a virtual node in a virtualization environment.</source>
          <target state="translated">&lt;code&gt;VK_PHYSICAL_DEVICE_TYPE_VIRTUAL_GPU&lt;/code&gt; - 장치는 일반적으로 가상화 환경에서 가상 노드입니다.</target>
        </trans-unit>
        <trans-unit id="14ae481603f49d0fec13c9826993960ecf9be40b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_PIPELINE_BIND_POINT_COMPUTE&lt;/code&gt; specifies binding as a compute pipeline.</source>
          <target state="translated">&lt;code&gt;VK_PIPELINE_BIND_POINT_COMPUTE&lt;/code&gt; 는 바인딩을 계산 파이프 라인으로 지정합니다.</target>
        </trans-unit>
        <trans-unit id="a33bbf4f005f0cfc1c66686076ac1f0d4cda31f5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_PIPELINE_BIND_POINT_GRAPHICS&lt;/code&gt; specifies binding as a graphics pipeline.</source>
          <target state="translated">&lt;code&gt;VK_PIPELINE_BIND_POINT_GRAPHICS&lt;/code&gt; 는 바인딩을 그래픽 파이프 라인으로 지정합니다.</target>
        </trans-unit>
        <trans-unit id="ab26f910951b39b2de28d9e7b3abef3e2c909ad8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_PIPELINE_CACHE_HEADER_VERSION_ONE&lt;/code&gt; specifies version one of the pipeline cache.</source>
          <target state="translated">&lt;code&gt;VK_PIPELINE_CACHE_HEADER_VERSION_ONE&lt;/code&gt; 은 파이프 라인 캐시의 버전 1을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="1f2251247a56c3782dc27cc37d7cabaeee3ec61a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_PIPELINE_CREATE_ALLOW_DERIVATIVES_BIT&lt;/code&gt; specifies that the pipeline to be created is allowed to be the parent of a pipeline that will be created in a subsequent call to &lt;a href=&quot;#vkCreateGraphicsPipelines&quot;&gt;vkCreateGraphicsPipelines&lt;/a&gt; or &lt;a href=&quot;#vkCreateComputePipelines&quot;&gt;vkCreateComputePipelines&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;VK_PIPELINE_CREATE_ALLOW_DERIVATIVES_BIT&lt;/code&gt; 는 작성할 파이프 라인이 &lt;a href=&quot;#vkCreateGraphicsPipelines&quot;&gt;vkCreateGraphicsPipelines&lt;/a&gt; 또는 &lt;a href=&quot;#vkCreateComputePipelines&quot;&gt;vkCreateComputePipelines&lt;/a&gt; 에 대한 후속 호출에서 작성 될 파이프 라인의 상위가되도록 지정 합니다.</target>
        </trans-unit>
        <trans-unit id="f0772e31e3c85ebb4d1073245fb95788d2ac2a8d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_PIPELINE_CREATE_DERIVATIVE_BIT&lt;/code&gt; specifies that the pipeline to be created will be a child of a previously created parent pipeline.</source>
          <target state="translated">&lt;code&gt;VK_PIPELINE_CREATE_DERIVATIVE_BIT&lt;/code&gt; 는 생성 될 파이프 라인이 이전에 생성 된 부모 파이프 라인의 자식이되도록 지정합니다.</target>
        </trans-unit>
        <trans-unit id="4da57bc930d3a7e0c1a5f570ae4d5e6020f46f64" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_PIPELINE_CREATE_DISABLE_OPTIMIZATION_BIT&lt;/code&gt; specifies that the created pipeline will not be optimized. Using this flag &lt;strong&gt;may&lt;/strong&gt; reduce the time taken to create the pipeline.</source>
          <target state="translated">&lt;code&gt;VK_PIPELINE_CREATE_DISABLE_OPTIMIZATION_BIT&lt;/code&gt; 는 생성 된 파이프 라인이 최적화되지 않도록 지정합니다. 이 플래그 를 사용하면 파이프 라인을 만드는 데 걸리는 시간 &lt;strong&gt;이&lt;/strong&gt; 줄어들 &lt;strong&gt;수&lt;/strong&gt; 있습니다.</target>
        </trans-unit>
        <trans-unit id="4205cb505fe97af9b2a2d389fb6e495156d337ce" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_PIPELINE_STAGE_ALL_COMMANDS_BIT&lt;/code&gt; is equivalent to the logical OR of every other pipeline stage flag that is supported on the queue it is used with.</source>
          <target state="translated">&lt;code&gt;VK_PIPELINE_STAGE_ALL_COMMANDS_BIT&lt;/code&gt; 는 사용되는 큐에서 지원되는 다른 모든 파이프 라인 스테이지 플래그의 논리 OR과 같습니다.</target>
        </trans-unit>
        <trans-unit id="a3dd23802da3da0e9e2626cae125aaba9f579d92" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_PIPELINE_STAGE_ALL_GRAPHICS_BIT&lt;/code&gt; specifies the execution of all graphics pipeline stages, and is equivalent to the logical OR of:</source>
          <target state="translated">&lt;code&gt;VK_PIPELINE_STAGE_ALL_GRAPHICS_BIT&lt;/code&gt; 는 모든 그래픽 파이프 라인 단계의 실행을 지정하며 다음의 논리적 OR과 같습니다.</target>
        </trans-unit>
        <trans-unit id="3039e30ab359e22c42de21b32353eb4696bcec9f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_PIPELINE_STAGE_BOTTOM_OF_PIPE_BIT&lt;/code&gt; and &lt;code&gt;VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT&lt;/code&gt; are useful for accomplishing layout transitions and queue ownership operations when the required execution dependency is satisfied by other means - for example, semaphore operations between queues.</source>
          <target state="translated">&lt;code&gt;VK_PIPELINE_STAGE_BOTTOM_OF_PIPE_BIT&lt;/code&gt; 및 &lt;code&gt;VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT&lt;/code&gt; 는 다른 실행 수단 (예 : 큐 간 세마포어 조작)으로 필요한 실행 종속성이 충족 될 때 레이아웃 전환 및 큐 소유권 조작을 수행하는 데 유용합니다.</target>
        </trans-unit>
        <trans-unit id="13ed6ee12713b72571c154445624b743ac492372" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_PIPELINE_STAGE_BOTTOM_OF_PIPE_BIT&lt;/code&gt; specifies the final stage in the pipeline where operations generated by all commands complete execution.</source>
          <target state="translated">&lt;code&gt;VK_PIPELINE_STAGE_BOTTOM_OF_PIPE_BIT&lt;/code&gt; 는 모든 명령에 의해 생성 된 작업이 실행을 완료하는 파이프 라인의 최종 단계를 지정합니다.</target>
        </trans-unit>
        <trans-unit id="07d36a550d598cb972f372f00676e17c4de68677" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT&lt;/code&gt; specifies the stage of the pipeline after blending where the final color values are output from the pipeline. This stage also includes &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#renderpass-load-store-ops&quot;&gt;subpass load and store operations&lt;/a&gt; and multisample resolve operations for framebuffer attachments with a color format.</source>
          <target state="translated">&lt;code&gt;VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT&lt;/code&gt; 는 최종 색상 값이 파이프 라인에서 출력되는 블렌딩 후 파이프 라인의 단계를 지정합니다. 이 단계에는 &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#renderpass-load-store-ops&quot;&gt;서브 패스로드 및 저장 작업&lt;/a&gt; 과 컬러 형식의 프레임 버퍼 부착을위한 멀티 샘플 확인 작업 도 포함 됩니다.</target>
        </trans-unit>
        <trans-unit id="adc27ff1ea9888c2c924c81c89bc6516eb9f427d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_PIPELINE_STAGE_COMPUTE_SHADER_BIT&lt;/code&gt; specifies the execution of a compute shader.</source>
          <target state="translated">&lt;code&gt;VK_PIPELINE_STAGE_COMPUTE_SHADER_BIT&lt;/code&gt; 는 계산 셰이더의 실행을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="24f33b77ad9a921b8ffa7ad9d11d98cce2b9dd43" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_PIPELINE_STAGE_DRAW_INDIRECT_BIT&lt;/code&gt; specifies the stage of the pipeline where Draw/DispatchIndirect data structures are consumed.</source>
          <target state="translated">&lt;code&gt;VK_PIPELINE_STAGE_DRAW_INDIRECT_BIT&lt;/code&gt; 는 Draw / DispatchIndirect 데이터 구조가 사용되는 파이프 라인의 단계를 지정합니다.</target>
        </trans-unit>
        <trans-unit id="7af3e4f80ba4bafe966b9dacb725ef8d73f732e5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_PIPELINE_STAGE_EARLY_FRAGMENT_TESTS_BIT&lt;/code&gt; specifies the stage of the pipeline where early fragment tests (depth and stencil tests before fragment shading) are performed. This stage also includes &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#renderpass-load-store-ops&quot;&gt;subpass load operations&lt;/a&gt; for framebuffer attachments with a depth/stencil format.</source>
          <target state="translated">&lt;code&gt;VK_PIPELINE_STAGE_EARLY_FRAGMENT_TESTS_BIT&lt;/code&gt; 는 초기 조각 테스트 (조각 음영 전 깊이 및 스텐실 테스트)가 수행되는 파이프 라인 단계를 지정합니다. 이 단계에는 깊이 / 스텐실 형식의 프레임 버퍼 부착을위한 &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#renderpass-load-store-ops&quot;&gt;서브 패스로드 작업&lt;/a&gt; 도 포함 됩니다.</target>
        </trans-unit>
        <trans-unit id="77d72c2c8e70d2eda7a8c828ec75e0a2915c498c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_PIPELINE_STAGE_EARLY_FRAGMENT_TESTS_BIT&lt;/code&gt;, or &lt;code&gt;VK_PIPELINE_STAGE_LATE_FRAGMENT_TESTS_BIT&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;VK_PIPELINE_STAGE_EARLY_FRAGMENT_TESTS_BIT&lt;/code&gt; 또는 &lt;code&gt;VK_PIPELINE_STAGE_LATE_FRAGMENT_TESTS_BIT&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e515a7eb652ada2a117d95404b05dea197230098" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_PIPELINE_STAGE_FRAGMENT_SHADER_BIT&lt;/code&gt; specifies the fragment shader stage.</source>
          <target state="translated">&lt;code&gt;VK_PIPELINE_STAGE_FRAGMENT_SHADER_BIT&lt;/code&gt; 는 프래그먼트 셰이더 스테이지를 지정합니다.</target>
        </trans-unit>
        <trans-unit id="ea5395d9f2386f4d6c8967ed4ed85e1f51c1109f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_PIPELINE_STAGE_GEOMETRY_SHADER_BIT&lt;/code&gt; specifies the geometry shader stage.</source>
          <target state="translated">&lt;code&gt;VK_PIPELINE_STAGE_GEOMETRY_SHADER_BIT&lt;/code&gt; 는 지오메트리 셰이더 스테이지를 지정합니다.</target>
        </trans-unit>
        <trans-unit id="2763909584cd4407abae0258a23b2c764a4ca364" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_PIPELINE_STAGE_HOST_BIT&lt;/code&gt; specifies a pseudo-stage indicating execution on the host of reads/writes of device memory. This stage is not invoked by any commands recorded in a command buffer.</source>
          <target state="translated">&lt;code&gt;VK_PIPELINE_STAGE_HOST_BIT&lt;/code&gt; 는 장치 메모리의 읽기 / 쓰기 호스트에서 실행을 나타내는 의사 단계를 지정합니다. 이 단계는 명령 버퍼에 기록 된 명령에 의해 호출되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="7c0edc6dc56e9be51e4d9084afd37ef8cb07396b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_PIPELINE_STAGE_LATE_FRAGMENT_TESTS_BIT&lt;/code&gt; specifies the stage of the pipeline where late fragment tests (depth and stencil tests after fragment shading) are performed. This stage also includes &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#renderpass-load-store-ops&quot;&gt;subpass store operations&lt;/a&gt; for framebuffer attachments with a depth/stencil format.</source>
          <target state="translated">&lt;code&gt;VK_PIPELINE_STAGE_LATE_FRAGMENT_TESTS_BIT&lt;/code&gt; 는 후기 단편 테스트 (프래그먼트 셰이딩 후 깊이 및 스텐실 테스트)가 수행되는 파이프 라인의 단계를 지정합니다. 이 단계에는 깊이 / 스텐실 형식의 프레임 버퍼 부착을위한 &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#renderpass-load-store-ops&quot;&gt;서브 패스 저장 작업&lt;/a&gt; 도 포함 됩니다.</target>
        </trans-unit>
        <trans-unit id="1fc3368837537bb1a7f4d2291c1e6d408afa21dd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_PIPELINE_STAGE_TESSELLATION_CONTROL_SHADER_BIT&lt;/code&gt; specifies the tessellation control shader stage.</source>
          <target state="translated">&lt;code&gt;VK_PIPELINE_STAGE_TESSELLATION_CONTROL_SHADER_BIT&lt;/code&gt; 는 테셀레이션 제어 셰이더 단계를 지정합니다.</target>
        </trans-unit>
        <trans-unit id="67b0c74d17c306daf57611e787fb7c520c513b7a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_PIPELINE_STAGE_TESSELLATION_EVALUATION_SHADER_BIT&lt;/code&gt; specifies the tessellation evaluation shader stage.</source>
          <target state="translated">&lt;code&gt;VK_PIPELINE_STAGE_TESSELLATION_EVALUATION_SHADER_BIT&lt;/code&gt; 는 테셀레이션 평가 셰이더 단계를 지정합니다.</target>
        </trans-unit>
        <trans-unit id="a5a51aa5a5202b198816578f5b356cf7df1a3099" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT&lt;/code&gt; specifies the stage of the pipeline where any commands are initially received by the queue.</source>
          <target state="translated">&lt;code&gt;VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT&lt;/code&gt; 는 대기열에서 명령을 처음 수신하는 파이프 라인 단계를 지정합니다.</target>
        </trans-unit>
        <trans-unit id="6ef78a4e63ef59419d2d5afaca8dba084077c4e7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_PIPELINE_STAGE_TRANSFER_BIT&lt;/code&gt; specifies the execution of copy commands. This includes the operations resulting from all &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#copies&quot;&gt;copy commands&lt;/a&gt;, &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#clears&quot;&gt;clear commands&lt;/a&gt; (with the exception of &lt;a href=&quot;#vkCmdClearAttachments&quot;&gt;vkCmdClearAttachments&lt;/a&gt;), and &lt;a href=&quot;#vkCmdCopyQueryPoolResults&quot;&gt;vkCmdCopyQueryPoolResults&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;VK_PIPELINE_STAGE_TRANSFER_BIT&lt;/code&gt; 는 복사 명령의 실행을 지정합니다. 여기에는 모든 &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#copies&quot;&gt;복사 명령&lt;/a&gt; , &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#clears&quot;&gt;clear 명령&lt;/a&gt; ( &lt;a href=&quot;#vkCmdClearAttachments&quot;&gt;vkCmdClearAttachments&lt;/a&gt; 제외 ) 및 &lt;a href=&quot;#vkCmdCopyQueryPoolResults&quot;&gt;vkCmdCopyQueryPoolResults로&lt;/a&gt; 인한 작업이 포함됩니다 .</target>
        </trans-unit>
        <trans-unit id="db58a479477c881bad8a12790ce2065333ff99cf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_PIPELINE_STAGE_VERTEX_INPUT_BIT&lt;/code&gt; specifies the stage of the pipeline where vertex and index buffers are consumed.</source>
          <target state="translated">&lt;code&gt;VK_PIPELINE_STAGE_VERTEX_INPUT_BIT&lt;/code&gt; 는 정점 및 인덱스 버퍼가 사용되는 파이프 라인 단계를 지정합니다.</target>
        </trans-unit>
        <trans-unit id="02e8fc033d8381612bb0f9966c75c9a317ca5472" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_PIPELINE_STAGE_VERTEX_SHADER_BIT&lt;/code&gt; specifies the vertex shader stage.</source>
          <target state="translated">&lt;code&gt;VK_PIPELINE_STAGE_VERTEX_SHADER_BIT&lt;/code&gt; 는 꼭짓점 셰이더 단계를 지정합니다.</target>
        </trans-unit>
        <trans-unit id="1d58e11238a7185b6c363f6da1b43850f8646dae" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_PIPELINE_STAGE_VERTEX_SHADER_BIT&lt;/code&gt;, &lt;code&gt;VK_PIPELINE_STAGE_TESSELLATION_CONTROL_SHADER_BIT&lt;/code&gt;, &lt;code&gt;VK_PIPELINE_STAGE_TESSELLATION_EVALUATION_SHADER_BIT&lt;/code&gt;, &lt;code&gt;VK_PIPELINE_STAGE_GEOMETRY_SHADER_BIT&lt;/code&gt;, &lt;code&gt;VK_PIPELINE_STAGE_FRAGMENT_SHADER_BIT&lt;/code&gt;, or &lt;code&gt;VK_PIPELINE_STAGE_COMPUTE_SHADER_BIT&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;VK_PIPELINE_STAGE_VERTEX_SHADER_BIT&lt;/code&gt; , &lt;code&gt;VK_PIPELINE_STAGE_TESSELLATION_CONTROL_SHADER_BIT&lt;/code&gt; , &lt;code&gt;VK_PIPELINE_STAGE_TESSELLATION_EVALUATION_SHADER_BIT&lt;/code&gt; , &lt;code&gt;VK_PIPELINE_STAGE_GEOMETRY_SHADER_BIT&lt;/code&gt; , &lt;code&gt;VK_PIPELINE_STAGE_FRAGMENT_SHADER_BIT&lt;/code&gt; , 또는 &lt;code&gt;VK_PIPELINE_STAGE_COMPUTE_SHADER_BIT&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7a39445b5ac3dc220293ecd0456f3171c3790f9a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_POLYGON_MODE_FILL&lt;/code&gt; specifies that polygons are rendered using the polygon rasterization rules in this section.</source>
          <target state="translated">&lt;code&gt;VK_POLYGON_MODE_FILL&lt;/code&gt; 은이 섹션의 다각형 래스터 화 규칙을 사용하여 다각형을 렌더링 하도록 지정합니다.</target>
        </trans-unit>
        <trans-unit id="ee50c020987426edeb8bacf2b3b8730517f7fc42" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_POLYGON_MODE_LINE&lt;/code&gt; specifies that polygon edges are drawn as line segments.</source>
          <target state="translated">&lt;code&gt;VK_POLYGON_MODE_LINE&lt;/code&gt; 은 다각형 모서리가 선 세그먼트로 그려 지도록 지정합니다.</target>
        </trans-unit>
        <trans-unit id="6c390bedaa5517bbc1cd20307664b56e129d3bf5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_POLYGON_MODE_POINT&lt;/code&gt; specifies that polygon vertices are drawn as points.</source>
          <target state="translated">&lt;code&gt;VK_POLYGON_MODE_POINT&lt;/code&gt; 는 다각형 정점이 점으로 그려 지도록 지정합니다.</target>
        </trans-unit>
        <trans-unit id="d335f18ae00830c15feaa10ce08274cc456ead1d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_QUERY_CONTROL_PRECISE_BIT&lt;/code&gt; specifies the precision of &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#queries-occlusion&quot;&gt;occlusion queries&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;VK_QUERY_CONTROL_PRECISE_BIT&lt;/code&gt; 는 &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#queries-occlusion&quot;&gt;오 클루 전 쿼리&lt;/a&gt; 의 정밀도를 지정 합니다 .</target>
        </trans-unit>
        <trans-unit id="a8fb30d9ef9e13347ffdb53ff84b701960a0d690" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_QUERY_PIPELINE_STATISTIC_CLIPPING_INVOCATIONS_BIT&lt;/code&gt; specifies that queries managed by the pool will count the number of primitives processed by the &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#vertexpostproc-clipping&quot;&gt;Primitive Clipping&lt;/a&gt; stage of the pipeline. The counter&amp;rsquo;s value is incremented each time a primitive reaches the primitive clipping stage.</source>
          <target state="translated">&lt;code&gt;VK_QUERY_PIPELINE_STATISTIC_CLIPPING_INVOCATIONS_BIT&lt;/code&gt; 는 풀에서 관리하는 쿼리 가 파이프 라인 의 &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#vertexpostproc-clipping&quot;&gt;기본 클리핑&lt;/a&gt; 단계에서 처리 한 기본 수를 계산하도록 지정합니다 . 프리미티브가 프리미티브 클리핑 단계에 도달 할 때마다 카운터의 값이 증가합니다.</target>
        </trans-unit>
        <trans-unit id="a4f11cf4659b546fc3771ea28f002c453f95afc4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_QUERY_PIPELINE_STATISTIC_CLIPPING_PRIMITIVES_BIT&lt;/code&gt; specifies that queries managed by the pool will count the number of primitives output by the &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#vertexpostproc-clipping&quot;&gt;Primitive Clipping&lt;/a&gt; stage of the pipeline. The counter&amp;rsquo;s value is incremented each time a primitive passes the primitive clipping stage. The actual number of primitives output by the primitive clipping stage for a particular input primitive is implementation-dependent but &lt;strong&gt;must&lt;/strong&gt; satisfy the following conditions:</source>
          <target state="translated">&lt;code&gt;VK_QUERY_PIPELINE_STATISTIC_CLIPPING_PRIMITIVES_BIT&lt;/code&gt; 는 풀에서 관리하는 쿼리 가 파이프 라인 의 &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#vertexpostproc-clipping&quot;&gt;기본 클리핑&lt;/a&gt; 단계에서 출력 된 기본 수를 계산하도록 지정합니다 . 프리미티브가 프리미티브 클리핑 단계를 통과 할 때마다 카운터의 값이 증가합니다. 특정 입력 프리미티브에 대한 프리미티브 클리핑 단계에서 출력되는 프리미티브 수는 구현에 따라 다르지만 다음 조건을 충족 &lt;strong&gt;해야합니다&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="546340696193d78481264052948d6f36d318a5e5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_QUERY_PIPELINE_STATISTIC_COMPUTE_SHADER_INVOCATIONS_BIT&lt;/code&gt; specifies that queries managed by the pool will count the number of compute shader invocations. The counter&amp;rsquo;s value is incremented every time the compute shader is invoked. Implementations &lt;strong&gt;may&lt;/strong&gt; skip the execution of certain compute shader invocations or execute additional compute shader invocations for implementation-dependent reasons as long as the results of rendering otherwise remain unchanged.</source>
          <target state="translated">&lt;code&gt;VK_QUERY_PIPELINE_STATISTIC_COMPUTE_SHADER_INVOCATIONS_BIT&lt;/code&gt; 는 풀에서 관리하는 쿼리가 계산 셰이더 호출 수를 계산 하도록 지정합니다. 계산 셰이더가 호출 될 때마다 카운터 값이 증가합니다. 구현 &lt;strong&gt;있다&lt;/strong&gt; 특정 컴퓨팅 쉐이더 호출의 실행을 이동하거나 렌더링 결과가 변하지만큼로서 구현 의존적 이유로 추가적인 계산 셰이더 호출을 실행한다.</target>
        </trans-unit>
        <trans-unit id="3ce19797e3be6c4a332468d419c5cf3f8fad7add" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_QUERY_PIPELINE_STATISTIC_FRAGMENT_SHADER_INVOCATIONS_BIT&lt;/code&gt; specifies that queries managed by the pool will count the number of fragment shader invocations. The counter&amp;rsquo;s value is incremented each time the fragment shader is &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#shaders-fragment-execution&quot;&gt;invoked&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;VK_QUERY_PIPELINE_STATISTIC_FRAGMENT_SHADER_INVOCATIONS_BIT&lt;/code&gt; 는 풀에서 관리하는 쿼리가 조각 셰이더 호출 수를 계산하도록 지정합니다. 카운터의 값은 프래그먼트 셰이더가 &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#shaders-fragment-execution&quot;&gt;호출&lt;/a&gt; 될 때마다 증가합니다 .</target>
        </trans-unit>
        <trans-unit id="5721195128aecf4149c415377f994e9228dd4e23" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_QUERY_PIPELINE_STATISTIC_GEOMETRY_SHADER_INVOCATIONS_BIT&lt;/code&gt; specifies that queries managed by the pool will count the number of geometry shader invocations. This counter&amp;rsquo;s value is incremented each time a geometry shader is &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#shaders-geometry-execution&quot;&gt;invoked&lt;/a&gt;. In the case of &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#geometry-invocations&quot;&gt;instanced geometry shaders&lt;/a&gt;, the geometry shader invocations count is incremented for each separate instanced invocation.</source>
          <target state="translated">&lt;code&gt;VK_QUERY_PIPELINE_STATISTIC_GEOMETRY_SHADER_INVOCATIONS_BIT&lt;/code&gt; 는 풀에서 관리하는 쿼리가 지오메트리 쉐이더 호출 수를 계산하도록 지정합니다. 이 카운터의 값은 지오메트리 셰이더가 &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#shaders-geometry-execution&quot;&gt;호출&lt;/a&gt; 될 때마다 증가합니다 . 의 경우 &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#geometry-invocations&quot;&gt;인스턴스화 지오메트리 쉐이더&lt;/a&gt; , 지오메트리 쉐이더 호출 카운트 증분 각각 별도 인스턴스화 호출 용.</target>
        </trans-unit>
        <trans-unit id="8001abb232dc9536b1018657682d527cb77160a0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_QUERY_PIPELINE_STATISTIC_GEOMETRY_SHADER_PRIMITIVES_BIT&lt;/code&gt; specifies that queries managed by the pool will count the number of primitives generated by geometry shader invocations. The counter&amp;rsquo;s value is incremented each time the geometry shader emits a primitive. Restarting primitive topology using the SPIR-V instructions &lt;code&gt;OpEndPrimitive&lt;/code&gt; or &lt;code&gt;OpEndStreamPrimitive&lt;/code&gt; has no effect on the geometry shader output primitives count.</source>
          <target state="translated">&lt;code&gt;VK_QUERY_PIPELINE_STATISTIC_GEOMETRY_SHADER_PRIMITIVES_BIT&lt;/code&gt; 는 풀에서 관리하는 쿼리가 지오메트리 셰이더 호출에 의해 생성 된 프리미티브 수를 계산하도록 지정합니다. 카운터의 값은 지오메트리 쉐이더가 프리미티브를 방출 할 때마다 증가합니다. SPIR-V 명령어 &lt;code&gt;OpEndPrimitive&lt;/code&gt; 또는 &lt;code&gt;OpEndStreamPrimitive&lt;/code&gt; 를 사용하여 기본 토폴로지를 다시 시작해 도 지오메트리 셰이더 출력 기본 수에 영향을 미치지 않습니다.</target>
        </trans-unit>
        <trans-unit id="08ccfbf4006d34dcf8d7b001253e72ce3793d01b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_QUERY_PIPELINE_STATISTIC_INPUT_ASSEMBLY_PRIMITIVES_BIT&lt;/code&gt; specifies that queries managed by the pool will count the number of primitives processed by the &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#drawing&quot;&gt;input assembly&lt;/a&gt; stage. If primitive restart is enabled, restarting the primitive topology has no effect on the count. Incomplete primitives &lt;strong&gt;may&lt;/strong&gt; be counted.</source>
          <target state="translated">&lt;code&gt;VK_QUERY_PIPELINE_STATISTIC_INPUT_ASSEMBLY_PRIMITIVES_BIT&lt;/code&gt; 는 풀에서 관리하는 쿼리가 &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#drawing&quot;&gt;입력 어셈블리&lt;/a&gt; 단계 에서 처리 한 프리미티브 수를 계산하도록 지정합니다 . 기본 재시작이 사용 가능한 경우 기본 토폴로지를 다시 시작해도 계수에 영향을 미치지 않습니다. 불완전한 프리미티브 &lt;strong&gt;가&lt;/strong&gt; 계산 &lt;strong&gt;될 수&lt;/strong&gt; 있습니다.</target>
        </trans-unit>
        <trans-unit id="b6c9ae62fb6857d0b687b59a14bcb9a8456f4154" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_QUERY_PIPELINE_STATISTIC_INPUT_ASSEMBLY_VERTICES_BIT&lt;/code&gt; specifies that queries managed by the pool will count the number of vertices processed by the &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#drawing&quot;&gt;input assembly&lt;/a&gt; stage. Vertices corresponding to incomplete primitives &lt;strong&gt;may&lt;/strong&gt; contribute to the count.</source>
          <target state="translated">&lt;code&gt;VK_QUERY_PIPELINE_STATISTIC_INPUT_ASSEMBLY_VERTICES_BIT&lt;/code&gt; 는 풀에서 관리하는 쿼리가 &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#drawing&quot;&gt;입력 어셈블리&lt;/a&gt; 단계 에서 처리 한 정점 수를 계산하도록 지정합니다 . 불완전한 기본 요소에 해당하는 정점은 &lt;strong&gt;수&lt;/strong&gt; 개수에 기여한다.</target>
        </trans-unit>
        <trans-unit id="d5663c3592807b54b65efe7c68611056ac6a1551" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_QUERY_PIPELINE_STATISTIC_TESSELLATION_CONTROL_SHADER_PATCHES_BIT&lt;/code&gt; specifies that queries managed by the pool will count the number of patches processed by the tessellation control shader. The counter&amp;rsquo;s value is incremented once for each patch for which a tessellation control shader is &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#shaders-tessellation-control-execution&quot;&gt;invoked&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;VK_QUERY_PIPELINE_STATISTIC_TESSELLATION_CONTROL_SHADER_PATCHES_BIT&lt;/code&gt; 는 풀에서 관리하는 쿼리가 공간 분할 컨트롤 셰이더가 처리 한 패치 수를 계산하도록 지정합니다. 테셀레이션 컨트롤 셰이더가 &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#shaders-tessellation-control-execution&quot;&gt;호출&lt;/a&gt; 되는 각 패치마다 카운터의 값이 한 번 증가 합니다.</target>
        </trans-unit>
        <trans-unit id="eadde7b219d7df0e6109269ff40a94075f589766" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_QUERY_PIPELINE_STATISTIC_TESSELLATION_EVALUATION_SHADER_INVOCATIONS_BIT&lt;/code&gt; specifies that queries managed by the pool will count the number of invocations of the tessellation evaluation shader. The counter&amp;rsquo;s value is incremented each time the tessellation evaluation shader is &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#shaders-tessellation-evaluation-execution&quot;&gt;invoked&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;VK_QUERY_PIPELINE_STATISTIC_TESSELLATION_EVALUATION_SHADER_INVOCATIONS_BIT&lt;/code&gt; 는 풀에서 관리하는 쿼리가 공간 분할 평가 셰이더의 호출 횟수를 계산하도록 지정합니다. 테셀레이션 평가 셰이더가 &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#shaders-tessellation-evaluation-execution&quot;&gt;호출&lt;/a&gt; 될 때마다 카운터 값이 증가합니다 .</target>
        </trans-unit>
        <trans-unit id="d642ea1891eec37f7ad8f3230c575d52725152c4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_QUERY_PIPELINE_STATISTIC_VERTEX_SHADER_INVOCATIONS_BIT&lt;/code&gt; specifies that queries managed by the pool will count the number of vertex shader invocations. This counter&amp;rsquo;s value is incremented each time a vertex shader is &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#shaders-vertex-execution&quot;&gt;invoked&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;VK_QUERY_PIPELINE_STATISTIC_VERTEX_SHADER_INVOCATIONS_BIT&lt;/code&gt; 는 풀에서 관리하는 쿼리가 버텍스 쉐이더 호출 수를 계산하도록 지정합니다. 이 카운터의 값은 꼭짓점 셰이더가 &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#shaders-vertex-execution&quot;&gt;호출&lt;/a&gt; 될 때마다 증가합니다 .</target>
        </trans-unit>
        <trans-unit id="0b0e26bcd4d3d94b4d6669728e8b73a28d666a6c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_QUERY_RESULT_64_BIT&lt;/code&gt; specifies the results will be written as an array of 64-bit unsigned integer values. If this bit is not set, the results will be written as an array of 32-bit unsigned integer values.</source>
          <target state="translated">&lt;code&gt;VK_QUERY_RESULT_64_BIT&lt;/code&gt; 는 결과가 부호없는 64 비트 정수 값의 배열로 작성 되도록 지정합니다. 이 비트가 설정되지 않으면 결과는 부호없는 32 비트 정수 값의 배열로 기록됩니다.</target>
        </trans-unit>
        <trans-unit id="59a2b0ab9395e8fe7d73271da131380af2238e32" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_QUERY_RESULT_PARTIAL_BIT&lt;/code&gt; specifies that returning partial results is acceptable.</source>
          <target state="translated">&lt;code&gt;VK_QUERY_RESULT_PARTIAL_BIT&lt;/code&gt; 는 부분 결과 반환이 허용 되도록 지정합니다.</target>
        </trans-unit>
        <trans-unit id="eed19bd13eae7f34d85c2b4bb9d3f915d559d4d6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_QUERY_RESULT_PARTIAL_BIT&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; not be used if the pool&amp;rsquo;s &lt;code&gt;queryType&lt;/code&gt; is &lt;code&gt;VK_QUERY_TYPE_TIMESTAMP&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;VK_QUERY_RESULT_PARTIAL_BIT&lt;/code&gt; 풀의 &lt;code&gt;queryType&lt;/code&gt; 이 &lt;code&gt;VK_QUERY_TYPE_TIMESTAMP&lt;/code&gt; 인 경우 VK_QUERY_RESULT_PARTIAL_BIT &lt;strong&gt;를 사용&lt;/strong&gt; 하지 않아야 &lt;strong&gt;합니다&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="a009fc40fda804caf01bfe2acee673e3b214fcd8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_QUERY_RESULT_WAIT_BIT&lt;/code&gt; specifies that Vulkan will wait for each query&amp;rsquo;s status to become available before retrieving its results.</source>
          <target state="translated">&lt;code&gt;VK_QUERY_RESULT_WAIT_BIT&lt;/code&gt; 는 Vulkan이 결과를 검색하기 전에 각 쿼리의 상태가 사용 가능할 때까지 대기 하도록 지정합니다.</target>
        </trans-unit>
        <trans-unit id="b706c4a7e5edc02de09f7ed17ad15cd9e6cae833" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_QUERY_RESULT_WITH_AVAILABILITY_BIT&lt;/code&gt; specifies that the availability status accompanies the results.</source>
          <target state="translated">&lt;code&gt;VK_QUERY_RESULT_WITH_AVAILABILITY_BIT&lt;/code&gt; 는 가용성 상태가 결과와 함께 제공 되도록 지정합니다.</target>
        </trans-unit>
        <trans-unit id="43d43ad5e2a69cbaa0ef43a58750553d0284ae8d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_QUERY_TYPE_OCCLUSION&lt;/code&gt; specifies an &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#queries-occlusion&quot;&gt;occlusion query&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;VK_QUERY_TYPE_OCCLUSION&lt;/code&gt; 은 &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#queries-occlusion&quot;&gt;폐색 쿼리를&lt;/a&gt; 지정합니다 .</target>
        </trans-unit>
        <trans-unit id="0371f030ae56d5eb9fd149935c5b836feb7dfeab" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_QUERY_TYPE_PIPELINE_STATISTICS&lt;/code&gt; specifies a &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#queries-pipestats&quot;&gt;pipeline statistics query&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;VK_QUERY_TYPE_PIPELINE_STATISTICS&lt;/code&gt; 는 &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#queries-pipestats&quot;&gt;파이프 라인 통계 쿼리를&lt;/a&gt; 지정 합니다 .</target>
        </trans-unit>
        <trans-unit id="de2b458284b9759b8498d85995b62a596d9ddd91" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_QUERY_TYPE_TIMESTAMP&lt;/code&gt; specifies a &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#queries-timestamps&quot;&gt;timestamp query&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;VK_QUERY_TYPE_TIMESTAMP&lt;/code&gt; 는 &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#queries-timestamps&quot;&gt;타임 스탬프 쿼리를&lt;/a&gt; 지정 합니다 .</target>
        </trans-unit>
        <trans-unit id="2be346f05eaf34d380d3e7bd7c82ddf761d245ca" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_QUEUE_COMPUTE_BIT&lt;/code&gt; indicates that queues in this queue family support compute operations.</source>
          <target state="translated">&lt;code&gt;VK_QUEUE_COMPUTE_BIT&lt;/code&gt; 는이 큐 제품군의 큐가 계산 조작을 지원함을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="83162fe76f9c28469a58820ea4939be242f8428b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_QUEUE_GRAPHICS_BIT&lt;/code&gt; indicates that queues in this queue family support graphics operations.</source>
          <target state="translated">&lt;code&gt;VK_QUEUE_GRAPHICS_BIT&lt;/code&gt; 는이 대기열 제품군의 대기열이 그래픽 작업을 지원함을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="038f9b50c1cde8e5a81c7693b33f3de81a02964a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_QUEUE_SPARSE_BINDING_BIT&lt;/code&gt; indicates that queues in this queue family support sparse memory management operations (see &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#sparsememory&quot;&gt;Sparse Resources&lt;/a&gt;). If any of the sparse resource features are enabled, then at least one queue family &lt;strong&gt;must&lt;/strong&gt; support this bit.</source>
          <target state="translated">&lt;code&gt;VK_QUEUE_SPARSE_BINDING_BIT&lt;/code&gt; 는이 큐 제품군의 큐가 희소 메모리 관리 조작을 지원함을 나타냅니다 ( &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#sparsememory&quot;&gt;스파 스 자원&lt;/a&gt; 참조 ). 스파 스 리소스 기능 중 하나라도 활성화 된 경우 하나 이상의 큐 제품군 이이 비트 &lt;strong&gt;를&lt;/strong&gt; 지원 &lt;strong&gt;해야합니다&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="ed6c4115cb9a0d20497e0a632c6ac4f120980e06" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_QUEUE_TRANSFER_BIT&lt;/code&gt; indicates that queues in this queue family support transfer operations.</source>
          <target state="translated">&lt;code&gt;VK_QUEUE_TRANSFER_BIT&lt;/code&gt; 는이 큐 제품군의 큐가 전송 조작을 지원함을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="f3a215eafb57b2be78028335c7976819ceca762a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_SAMPLER_ADDRESS_MODE_CLAMP_TO_BORDER&lt;/code&gt; specifies that the clamp to border wrap mode will be used.</source>
          <target state="translated">&lt;code&gt;VK_SAMPLER_ADDRESS_MODE_CLAMP_TO_BORDER&lt;/code&gt; 는 클램프 대 보더 랩 모드가 사용 되도록 지정합니다.</target>
        </trans-unit>
        <trans-unit id="c7f63791a43a1761b4ffb12b42646ee61f6c62f0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_SAMPLER_ADDRESS_MODE_CLAMP_TO_EDGE&lt;/code&gt; specifies that the clamp to edge wrap mode will be used.</source>
          <target state="translated">&lt;code&gt;VK_SAMPLER_ADDRESS_MODE_CLAMP_TO_EDGE&lt;/code&gt; 는 클램프 대 에지 랩 모드가 사용 되도록 지정합니다.</target>
        </trans-unit>
        <trans-unit id="8629688292358341b49350f363920bb89bc2c878" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_SAMPLER_ADDRESS_MODE_MIRRORED_REPEAT&lt;/code&gt; specifies that the mirrored repeat wrap mode will be used.</source>
          <target state="translated">&lt;code&gt;VK_SAMPLER_ADDRESS_MODE_MIRRORED_REPEAT&lt;/code&gt; 는 미러 된 반복 랩 모드가 사용 되도록 지정합니다.</target>
        </trans-unit>
        <trans-unit id="1fadac6ac49587d323aafa9a2268f70560bd78d5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_SAMPLER_ADDRESS_MODE_MIRROR_CLAMP_TO_EDGE&lt;/code&gt; specifies that the mirror clamp to edge wrap mode will be used. This is only valid if the VK_KHR_mirror_clamp_to_edge extension is enabled.</source>
          <target state="translated">&lt;code&gt;VK_SAMPLER_ADDRESS_MODE_MIRROR_CLAMP_TO_EDGE&lt;/code&gt; 는 미러 클램프 대 에지 랩 모드가 사용 되도록 지정합니다. VK_KHR_mirror_clamp_to_edge 확장이 활성화 된 경우에만 유효합니다.</target>
        </trans-unit>
        <trans-unit id="4bd08548dc5099e88182c044f614c976914baeb2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_SAMPLER_ADDRESS_MODE_REPEAT&lt;/code&gt; specifies that the repeat wrap mode will be used.</source>
          <target state="translated">&lt;code&gt;VK_SAMPLER_ADDRESS_MODE_REPEAT&lt;/code&gt; 는 반복 랩 모드가 사용 되도록 지정합니다.</target>
        </trans-unit>
        <trans-unit id="c8d41e0ea1d409c392372b853ec2d3f7ab151af6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_SAMPLER_MIPMAP_MODE_LINEAR&lt;/code&gt; specifies linear filtering.</source>
          <target state="translated">&lt;code&gt;VK_SAMPLER_MIPMAP_MODE_LINEAR&lt;/code&gt; 은 선형 필터링을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="df7dc4d1f65f08f099c121e273fbafd9cf7235c0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_SAMPLER_MIPMAP_MODE_NEAREST&lt;/code&gt; specifies nearest filtering.</source>
          <target state="translated">&lt;code&gt;VK_SAMPLER_MIPMAP_MODE_NEAREST&lt;/code&gt; 는 가장 가까운 필터링을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="879aecbe6d3700866e4d38749e676e738bc5ab45" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_SAMPLE_COUNT_16_BIT&lt;/code&gt; specifies an image with 16 samples per pixel.</source>
          <target state="translated">&lt;code&gt;VK_SAMPLE_COUNT_16_BIT&lt;/code&gt; 는 픽셀 당 16 개의 샘플로 이미지를 지정합니다.</target>
        </trans-unit>
        <trans-unit id="2d9eac527394b81f828642e0e6c842218cae55ed" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_SAMPLE_COUNT_1_BIT&lt;/code&gt; specifies an image with one sample per pixel.</source>
          <target state="translated">&lt;code&gt;VK_SAMPLE_COUNT_1_BIT&lt;/code&gt; 는 픽셀 당 하나의 샘플로 이미지를 지정합니다.</target>
        </trans-unit>
        <trans-unit id="05c932787efc27b9c99dde2f8f0428199a827253" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_SAMPLE_COUNT_2_BIT&lt;/code&gt; specifies an image with 2 samples per pixel.</source>
          <target state="translated">&lt;code&gt;VK_SAMPLE_COUNT_2_BIT&lt;/code&gt; 는 픽셀 당 2 개의 샘플로 이미지를 지정합니다.</target>
        </trans-unit>
        <trans-unit id="6e6d134739f05ffc03a5573550eb69765ab312ba" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_SAMPLE_COUNT_32_BIT&lt;/code&gt; specifies an image with 32 samples per pixel.</source>
          <target state="translated">&lt;code&gt;VK_SAMPLE_COUNT_32_BIT&lt;/code&gt; 는 픽셀 당 32 개의 샘플로 이미지를 지정합니다.</target>
        </trans-unit>
        <trans-unit id="3ca858103bb2ba9dddb772d7b8cd8076389367f3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_SAMPLE_COUNT_4_BIT&lt;/code&gt; specifies an image with 4 samples per pixel.</source>
          <target state="translated">&lt;code&gt;VK_SAMPLE_COUNT_4_BIT&lt;/code&gt; 는 픽셀 당 4 개의 샘플로 이미지를 지정합니다.</target>
        </trans-unit>
        <trans-unit id="f2c09c91e649436a6897dbd458e5656efa0a7352" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_SAMPLE_COUNT_64_BIT&lt;/code&gt; specifies an image with 64 samples per pixel.</source>
          <target state="translated">&lt;code&gt;VK_SAMPLE_COUNT_64_BIT&lt;/code&gt; 는 픽셀 당 64 개의 샘플로 이미지를 지정합니다.</target>
        </trans-unit>
        <trans-unit id="0de22ccc60f4fe5c25fd01a523fc315ecab41eb0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_SAMPLE_COUNT_8_BIT&lt;/code&gt; specifies an image with 8 samples per pixel.</source>
          <target state="translated">&lt;code&gt;VK_SAMPLE_COUNT_8_BIT&lt;/code&gt; 는 픽셀 당 8 개의 샘플로 이미지를 지정합니다.</target>
        </trans-unit>
        <trans-unit id="ef198ebd46d3d57d36e7544d2c33d003fc26a13b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_SHADER_STAGE_ALL&lt;/code&gt; is a combination of bits used as shorthand to specify all shader stages supported by the device, including all additional stages which are introduced by extensions.</source>
          <target state="translated">&lt;code&gt;VK_SHADER_STAGE_ALL&lt;/code&gt; 은 확장에서 도입 된 모든 추가 스테이지를 포함하여 장치에서 지원하는 모든 셰이더 스테이지를 지정하기 위해 속기로 사용되는 비트의 조합입니다.</target>
        </trans-unit>
        <trans-unit id="4c0e915e4cab475ba9b90376256c0876cb270ba1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_SHADER_STAGE_ALL_GRAPHICS&lt;/code&gt; is a combination of bits used as shorthand to specify all graphics stages defined above (excluding the compute stage).</source>
          <target state="translated">&lt;code&gt;VK_SHADER_STAGE_ALL_GRAPHICS&lt;/code&gt; 는 위에서 정의 된 모든 그래픽 단계 (컴퓨팅 단계 제외)를 지정하기 위해 속기로 사용되는 비트의 조합입니다.</target>
        </trans-unit>
        <trans-unit id="c216a083b58ce8d9ac915cbcee2daa30c4631f8c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_SHADER_STAGE_COMPUTE_BIT&lt;/code&gt; specifies the compute stage.</source>
          <target state="translated">&lt;code&gt;VK_SHADER_STAGE_COMPUTE_BIT&lt;/code&gt; 는 계산 단계를 지정합니다.</target>
        </trans-unit>
        <trans-unit id="f4ba7cb59dd8577d45f5f042b19091cac2272f28" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_SHADER_STAGE_FRAGMENT_BIT&lt;/code&gt; specifies the fragment stage.</source>
          <target state="translated">&lt;code&gt;VK_SHADER_STAGE_FRAGMENT_BIT&lt;/code&gt; 는 프래그먼트 스테이지를 지정합니다.</target>
        </trans-unit>
        <trans-unit id="4707488072c597b6da2262da47332f288147755f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_SHADER_STAGE_GEOMETRY_BIT&lt;/code&gt; specifies the geometry stage.</source>
          <target state="translated">&lt;code&gt;VK_SHADER_STAGE_GEOMETRY_BIT&lt;/code&gt; 는 지오메트리 스테이지를 지정합니다.</target>
        </trans-unit>
        <trans-unit id="b47335bacb6ceee3fd75f6491a40ac91fd33cb19" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_SHADER_STAGE_TESSELLATION_CONTROL_BIT&lt;/code&gt; specifies the tessellation control stage.</source>
          <target state="translated">&lt;code&gt;VK_SHADER_STAGE_TESSELLATION_CONTROL_BIT&lt;/code&gt; 는 테셀레이션 제어 단계를 지정합니다.</target>
        </trans-unit>
        <trans-unit id="e5ab1c4548442e7b12d39be317516a142f3113d4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_SHADER_STAGE_TESSELLATION_EVALUATION_BIT&lt;/code&gt; specifies the tessellation evaluation stage.</source>
          <target state="translated">&lt;code&gt;VK_SHADER_STAGE_TESSELLATION_EVALUATION_BIT&lt;/code&gt; 는 테셀레이션 평가 단계를 지정합니다.</target>
        </trans-unit>
        <trans-unit id="39d6f31fb0881648d9837c023afe99cbb0134cd6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_SHADER_STAGE_VERTEX_BIT&lt;/code&gt; specifies the vertex stage.</source>
          <target state="translated">&lt;code&gt;VK_SHADER_STAGE_VERTEX_BIT&lt;/code&gt; 는 정점 스테이지를 지정합니다.</target>
        </trans-unit>
        <trans-unit id="74bef545cee74ac4092365393529c1858467154b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_SHARING_MODE_CONCURRENT&lt;/code&gt; specifies that concurrent access to any range or image subresource of the object from multiple queue families is supported.</source>
          <target state="translated">&lt;code&gt;VK_SHARING_MODE_CONCURRENT&lt;/code&gt; 는 여러 큐 패밀리에서 오브젝트의 범위 또는 이미지 하위 자원에 대한 동시 액세스가 지원되도록 지정합니다.</target>
        </trans-unit>
        <trans-unit id="271120f40e7275b8fc80f0d615f66bf675c01697" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_SHARING_MODE_CONCURRENT&lt;/code&gt;&lt;strong&gt;may&lt;/strong&gt; result in lower performance access to the buffer or image than &lt;code&gt;VK_SHARING_MODE_EXCLUSIVE&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;VK_SHARING_MODE_CONCURRENT&lt;/code&gt; 는&lt;strong&gt;수&lt;/strong&gt; 보다 버퍼 또는 이미지 낮은 성능 액세스 될 &lt;code&gt;VK_SHARING_MODE_EXCLUSIVE&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0b310fa4e15e607cfccf2829880b33154db87567" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_SHARING_MODE_EXCLUSIVE&lt;/code&gt; specifies that access to any range or image subresource of the object will be exclusive to a single queue family at a time.</source>
          <target state="translated">&lt;code&gt;VK_SHARING_MODE_EXCLUSIVE&lt;/code&gt; 는 개체의 모든 범위 또는 이미지 하위 리소스에 대한 액세스가 한 번에 하나의 큐 제품군에만 적용되도록 지정합니다.</target>
        </trans-unit>
        <trans-unit id="f7daa3335b10f068cee54694deabebcf2a5cf017" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_SPARSE_IMAGE_FORMAT_ALIGNED_MIP_SIZE_BIT&lt;/code&gt; specifies that the first mip level whose dimensions are not integer multiples of the corresponding dimensions of the sparse image block begins the mip tail region.</source>
          <target state="translated">&lt;code&gt;VK_SPARSE_IMAGE_FORMAT_ALIGNED_MIP_SIZE_BIT&lt;/code&gt; 는 희소 이미지 블록의 해당 차원의 정수 배수가 아닌 차원의 첫 번째 밉 레벨이 밉 테일 영역을 시작하도록 지정합니다.</target>
        </trans-unit>
        <trans-unit id="4a1f86202129e7d7ffcbeb37757e010fd9bd3b2b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_SPARSE_IMAGE_FORMAT_NONSTANDARD_BLOCK_SIZE_BIT&lt;/code&gt; specifies that the image uses non-standard sparse image block dimensions, and the &lt;code&gt;imageGranularity&lt;/code&gt; values do not match the standard sparse image block dimensions for the given pixel format.</source>
          <target state="translated">&lt;code&gt;VK_SPARSE_IMAGE_FORMAT_NONSTANDARD_BLOCK_SIZE_BIT&lt;/code&gt; 는 이미지가 비표준 희소 이미지 블록 크기를 사용하고 &lt;code&gt;imageGranularity&lt;/code&gt; 값이 지정된 픽셀 형식의 표준 희소 이미지 블록 크기와 일치하지 않도록 지정합니다.</target>
        </trans-unit>
        <trans-unit id="69bc883b603f0ff768ca1c204e23b279d4464048" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_SPARSE_IMAGE_FORMAT_SINGLE_MIPTAIL_BIT&lt;/code&gt; specifies that the image uses a single mip tail region for all array layers.</source>
          <target state="translated">&lt;code&gt;VK_SPARSE_IMAGE_FORMAT_SINGLE_MIPTAIL_BIT&lt;/code&gt; 는 이미지가 모든 배열 레이어에 단일 밉 테일 영역을 사용하도록 지정합니다.</target>
        </trans-unit>
        <trans-unit id="21b8c2d0c1a0e5f56581b4673ac45163f1d95d55" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_SPARSE_MEMORY_BIND_METADATA_BIT&lt;/code&gt; specifies that the memory being bound is only for the metadata aspect.</source>
          <target state="translated">&lt;code&gt;VK_SPARSE_MEMORY_BIND_METADATA_BIT&lt;/code&gt; 는 바인딩되는 메모리가 메타 데이터 측면에만 해당 되도록 지정합니다.</target>
        </trans-unit>
        <trans-unit id="175486553b889304c53b1aeb40c24a482e7e5ee3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_STENCIL_FACE_BACK_BIT&lt;/code&gt; specifies that only the back set of stencil state is updated.</source>
          <target state="translated">&lt;code&gt;VK_STENCIL_FACE_BACK_BIT&lt;/code&gt; 는 스텐실 상태의 백 세트 만 업데이트 되도록 지정합니다.</target>
        </trans-unit>
        <trans-unit id="5e56d7b2186e2840b96882d6cff7cd1b832a7e1d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_STENCIL_FACE_FRONT_BIT&lt;/code&gt; specifies that only the front set of stencil state is updated.</source>
          <target state="translated">&lt;code&gt;VK_STENCIL_FACE_FRONT_BIT&lt;/code&gt; 는 스텐실 상태의 전면 세트 만 업데이트 되도록 지정합니다.</target>
        </trans-unit>
        <trans-unit id="da89a97a697bcd9af99a39059903bcca3e7e6329" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_STENCIL_FRONT_AND_BACK&lt;/code&gt; is the combination of &lt;code&gt;VK_STENCIL_FACE_FRONT_BIT&lt;/code&gt; and &lt;code&gt;VK_STENCIL_FACE_BACK_BIT&lt;/code&gt;, and specifies that both sets of stencil state are updated.</source>
          <target state="translated">&lt;code&gt;VK_STENCIL_FRONT_AND_BACK&lt;/code&gt; 은 &lt;code&gt;VK_STENCIL_FACE_FRONT_BIT&lt;/code&gt; 및 &lt;code&gt;VK_STENCIL_FACE_BACK_BIT&lt;/code&gt; 의 조합이며 두 스텐실 상태 세트가 업데이트되도록 지정합니다.</target>
        </trans-unit>
        <trans-unit id="1834119979e186d4cbf6de1d44ab7e41268dd7d3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_STENCIL_OP_DECREMENT_AND_CLAMP&lt;/code&gt; decrements the current value and clamps to 0.</source>
          <target state="translated">&lt;code&gt;VK_STENCIL_OP_DECREMENT_AND_CLAMP&lt;/code&gt; 는 현재 값을 낮추고 0으로 고정합니다.</target>
        </trans-unit>
        <trans-unit id="846f0d4731200c655611de1904bfc0a10fd8dc15" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_STENCIL_OP_DECREMENT_AND_WRAP&lt;/code&gt; decrements the current value and wraps to the maximum possible value when the value would go below 0.</source>
          <target state="translated">&lt;code&gt;VK_STENCIL_OP_DECREMENT_AND_WRAP&lt;/code&gt; 는 현재 값을 감소시키고 값이 0 미만이되면 가능한 최대 값으로 줄 바꿈합니다.</target>
        </trans-unit>
        <trans-unit id="44a4eb68fe199732e4b5115b42fa31e959ae30be" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_STENCIL_OP_INCREMENT_AND_CLAMP&lt;/code&gt; increments the current value and clamps to the maximum representable unsigned value.</source>
          <target state="translated">&lt;code&gt;VK_STENCIL_OP_INCREMENT_AND_CLAMP&lt;/code&gt; 는 현재 값을 증가시키고 표시 가능한 최대 부호없는 값으로 고정합니다.</target>
        </trans-unit>
        <trans-unit id="775f3f640f3d4c3fcf1dc220fc720f0961c93bab" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_STENCIL_OP_INCREMENT_AND_WRAP&lt;/code&gt; increments the current value and wraps to 0 when the maximum value would have been exceeded.</source>
          <target state="translated">&lt;code&gt;VK_STENCIL_OP_INCREMENT_AND_WRAP&lt;/code&gt; 는 현재 값을 증가시키고 최대 값을 초과하면 0으로 줄 바꿈합니다.</target>
        </trans-unit>
        <trans-unit id="6cb875921297717e3b4061558b05daab85630eda" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_STENCIL_OP_INVERT&lt;/code&gt; bitwise-inverts the current value.</source>
          <target state="translated">&lt;code&gt;VK_STENCIL_OP_INVERT&lt;/code&gt; 는 현재 값을 비트 단위로 반전시킵니다.</target>
        </trans-unit>
        <trans-unit id="ba71678bbe015d91855d4e8f6e80a7fe531789b5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_STENCIL_OP_KEEP&lt;/code&gt; keeps the current value.</source>
          <target state="translated">&lt;code&gt;VK_STENCIL_OP_KEEP&lt;/code&gt; 는 현재 값을 유지합니다.</target>
        </trans-unit>
        <trans-unit id="f0b57caf6caa3a70a3825b5732cc23850bc72bb4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_STENCIL_OP_REPLACE&lt;/code&gt; sets the value to &lt;code&gt;reference&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;VK_STENCIL_OP_REPLACE&lt;/code&gt; 는 값을 &lt;code&gt;reference&lt;/code&gt; 로 설정합니다 .</target>
        </trans-unit>
        <trans-unit id="8c1850274cbc831efbc4e2ed5611ef635b6c42ba" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_STENCIL_OP_ZERO&lt;/code&gt; sets the value to 0.</source>
          <target state="translated">&lt;code&gt;VK_STENCIL_OP_ZERO&lt;/code&gt; 는 값을 0으로 설정합니다.</target>
        </trans-unit>
        <trans-unit id="665883d6c45c17fea4ecf85961573365eefa6c21" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_SUBPASS_CONTENTS_INLINE&lt;/code&gt; specifies that the contents of the subpass will be recorded inline in the primary command buffer, and secondary command buffers &lt;strong&gt;must&lt;/strong&gt; not be executed within the subpass.</source>
          <target state="translated">&lt;code&gt;VK_SUBPASS_CONTENTS_INLINE&lt;/code&gt; 은 서브 패스의 내용이 1 차 명령 버퍼에 인라인으로 기록되고 2 차 명령 버퍼 &lt;strong&gt;가&lt;/strong&gt; 서브 패스 내에서 실행되지 않도록 지정합니다.</target>
        </trans-unit>
        <trans-unit id="69ecc595e1af4766825a3630ccf80999229b33ea" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_SUBPASS_CONTENTS_SECONDARY_COMMAND_BUFFERS&lt;/code&gt; specifies that the contents are recorded in secondary command buffers that will be called from the primary command buffer, and &lt;a href=&quot;#vkCmdExecuteCommands&quot;&gt;vkCmdExecuteCommands&lt;/a&gt; is the only valid command on the command buffer until &lt;a href=&quot;#vkCmdNextSubpass&quot;&gt;vkCmdNextSubpass&lt;/a&gt; or &lt;a href=&quot;#vkCmdEndRenderPass&quot;&gt;vkCmdEndRenderPass&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;VK_SUBPASS_CONTENTS_SECONDARY_COMMAND_BUFFERS&lt;/code&gt; 는 컨텐츠가 1 차 명령 버퍼에서 호출 될 2 차 명령 버퍼에 기록 되도록 지정하고 &lt;a href=&quot;#vkCmdExecuteCommands&quot;&gt;vkCmdExecuteCommands&lt;/a&gt; 는 &lt;a href=&quot;#vkCmdNextSubpass&quot;&gt;vkCmdNextSubpass&lt;/a&gt; 또는 &lt;a href=&quot;#vkCmdEndRenderPass&quot;&gt;vkCmdEndRenderPass&lt;/a&gt; 까지 명령 버퍼에서 유일하게 유효한 명령입니다 .</target>
        </trans-unit>
        <trans-unit id="23cff7e9c45e552dc7ce1ed07969ca1c7ac8072f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_SUCCESS&lt;/code&gt; Command successfully completed</source>
          <target state="translated">&lt;code&gt;VK_SUCCESS&lt;/code&gt; 명령이 성공적으로 완료되었습니다</target>
        </trans-unit>
        <trans-unit id="ef4a4fdbfdc7098c2d70623d171799d5435dddce" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_SYSTEM_ALLOCATION_SCOPE_CACHE&lt;/code&gt; specifies that the allocation is scoped to the lifetime of a &lt;code&gt;VkPipelineCache&lt;/code&gt; object.</source>
          <target state="translated">&lt;code&gt;VK_SYSTEM_ALLOCATION_SCOPE_CACHE&lt;/code&gt; 는 할당 범위가 &lt;code&gt;VkPipelineCache&lt;/code&gt; 개체 의 수명 범위로 지정되도록 지정 합니다.</target>
        </trans-unit>
        <trans-unit id="cbba0d90c471cb7a8a5334d6b42ae06c459dc283" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_SYSTEM_ALLOCATION_SCOPE_COMMAND&lt;/code&gt; specifies that the allocation is scoped to the duration of the Vulkan command.</source>
          <target state="translated">&lt;code&gt;VK_SYSTEM_ALLOCATION_SCOPE_COMMAND&lt;/code&gt; 는 할당이 Vulkan 명령의 지속 시간 범위로 지정되도록 지정합니다.</target>
        </trans-unit>
        <trans-unit id="0e717333dc3f637fbfb625c92649ccb9d94d2cf0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_SYSTEM_ALLOCATION_SCOPE_DEVICE&lt;/code&gt; specifies that the allocation is scoped to the lifetime of the Vulkan device.</source>
          <target state="translated">&lt;code&gt;VK_SYSTEM_ALLOCATION_SCOPE_DEVICE&lt;/code&gt; 는 할당이 Vulkan 장치의 수명 범위로 지정되도록 지정합니다.</target>
        </trans-unit>
        <trans-unit id="e7786d86e3aacecd6d01c9f425af6b2963689b9a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_SYSTEM_ALLOCATION_SCOPE_INSTANCE&lt;/code&gt; specifies that the allocation is scoped to the lifetime of the Vulkan instance.</source>
          <target state="translated">&lt;code&gt;VK_SYSTEM_ALLOCATION_SCOPE_INSTANCE&lt;/code&gt; 는 할당이 Vulkan 인스턴스의 수명 범위로 지정되도록 지정합니다.</target>
        </trans-unit>
        <trans-unit id="62b85ca335047d7b99e5bfaaa45aa2a73c4bf0e8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_SYSTEM_ALLOCATION_SCOPE_OBJECT&lt;/code&gt; specifies that the allocation is scoped to the lifetime of the Vulkan object that is being created or used.</source>
          <target state="translated">&lt;code&gt;VK_SYSTEM_ALLOCATION_SCOPE_OBJECT&lt;/code&gt; 는 할당이 작성되거나 사용되는 Vulkan 객체의 수명 범위로 지정되도록 지정합니다.</target>
        </trans-unit>
        <trans-unit id="d843b033a5731d9158abae6d88a11cf60dc90eb2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_TIMEOUT&lt;/code&gt; A wait operation has not completed in the specified time</source>
          <target state="translated">&lt;code&gt;VK_TIMEOUT&lt;/code&gt; 대기 시간이 지정된 시간 내에 완료되지 않았습니다</target>
        </trans-unit>
        <trans-unit id="332461cc711146e80393ccd949d3650fafa616a5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_TRUE&lt;/code&gt; represents a boolean &lt;strong&gt;True&lt;/strong&gt; (integer 1) value, and &lt;code&gt;VK_FALSE&lt;/code&gt; a boolean &lt;strong&gt;False&lt;/strong&gt; (integer 0) value.</source>
          <target state="translated">&lt;code&gt;VK_TRUE&lt;/code&gt; 는 부울 &lt;strong&gt;True&lt;/strong&gt; (정수 1) 값을 &lt;code&gt;VK_FALSE&lt;/code&gt; 는 부울 &lt;strong&gt;False&lt;/strong&gt; (정수 0) 값을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="247e722a56d69833a878dede233d48ccdc573377" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_VERSION_MAJOR&lt;/code&gt; extracts the API major version number from a packed version number:</source>
          <target state="translated">&lt;code&gt;VK_VERSION_MAJOR&lt;/code&gt; 는 압축 버전 번호에서 API 주 버전 번호를 추출합니다.</target>
        </trans-unit>
        <trans-unit id="65d6f69725073bd7a4f65a23671e82234f377556" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_VERSION_MINOR&lt;/code&gt; extracts the API minor version number from a packed version number:</source>
          <target state="translated">&lt;code&gt;VK_VERSION_MINOR&lt;/code&gt; 은 압축 버전 번호에서 API 부 버전 번호를 추출합니다.</target>
        </trans-unit>
        <trans-unit id="a1093b01c0f5c679e1ea64bbaaed1a72218a7f41" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_VERSION_PATCH&lt;/code&gt; extracts the API patch version number from a packed version number:</source>
          <target state="translated">&lt;code&gt;VK_VERSION_PATCH&lt;/code&gt; 는 압축 버전 번호에서 API 패치 버전 번호를 추출합니다.</target>
        </trans-unit>
        <trans-unit id="69dc3eed29428bfcedaa661698c15763b466ccc2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_VERTEX_INPUT_RATE_INSTANCE&lt;/code&gt; specifies that vertex attribute addressing is a function of the instance index.</source>
          <target state="translated">&lt;code&gt;VK_VERTEX_INPUT_RATE_INSTANCE&lt;/code&gt; 는 정점 속성 주소 지정이 인스턴스 색인의 함수 임을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="50a4420b33ba6074cdadf7ddf2adb7c3a60f8491" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VK_VERTEX_INPUT_RATE_VERTEX&lt;/code&gt; specifies that vertex attribute addressing is a function of the vertex index.</source>
          <target state="translated">&lt;code&gt;VK_VERTEX_INPUT_RATE_VERTEX&lt;/code&gt; 는 꼭짓점 속성 주소 지정이 꼭짓점 인덱스의 함수 임을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="82fd9441258ab6e757982f1212971e730f5032dd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VkAccessFlags&lt;/code&gt; is a mask of zero or more &lt;a href=&quot;#VkAccessFlagBits&quot;&gt;VkAccessFlagBits&lt;/a&gt;. It is used as a member and/or parameter of the structures and commands in the See Also section below.</source>
          <target state="translated">&lt;code&gt;VkAccessFlags&lt;/code&gt; 는 0 개 이상의 &lt;a href=&quot;#VkAccessFlagBits&quot;&gt;VkAccessFlagBits&lt;/a&gt; 마스크입니다 . 아래 참조 섹션에서 구조 및 명령의 멤버 및 / 또는 매개 변수로 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="fa3c4ba2faecb000735256a62096162bbcc8701a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VkAttachmentDescriptionFlags&lt;/code&gt; is a mask of zero or more &lt;a href=&quot;#VkAttachmentDescriptionFlagBits&quot;&gt;VkAttachmentDescriptionFlagBits&lt;/a&gt;. It is used as a member and/or parameter of the structures and commands in the See Also section below.</source>
          <target state="translated">&lt;code&gt;VkAttachmentDescriptionFlags&lt;/code&gt; 는 0 개 이상의 &lt;a href=&quot;#VkAttachmentDescriptionFlagBits&quot;&gt;VkAttachmentDescriptionFlagBits&lt;/a&gt; 의 마스크입니다 . 아래 참조 섹션에서 구조 및 명령의 멤버 및 / 또는 매개 변수로 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="125bf909770589a7d314b6b961994e6a23317d67" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VkBool32&lt;/code&gt; represents boolean &lt;code&gt;True&lt;/code&gt; and &lt;code&gt;False&lt;/code&gt; values, since C does not have a sufficiently portable built-in boolean type:</source>
          <target state="translated">&lt;code&gt;VkBool32&lt;/code&gt; C에는 이식성이 뛰어난 내장형 부울 유형이 없으므로 VkBool32 는 부울 &lt;code&gt;True&lt;/code&gt; 및 &lt;code&gt;False&lt;/code&gt; 값을 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="eab5adde99b3c4ca267ca6095a2fa51f510abb2c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VkBool32&lt;/code&gt;, &lt;a href=&quot;#VkBorderColor&quot;&gt;VkBorderColor&lt;/a&gt;, &lt;a href=&quot;#VkCompareOp&quot;&gt;VkCompareOp&lt;/a&gt;, &lt;a href=&quot;#VkFilter&quot;&gt;VkFilter&lt;/a&gt;, &lt;a href=&quot;#VkSamplerAddressMode&quot;&gt;VkSamplerAddressMode&lt;/a&gt;, &lt;a href=&quot;#VkSamplerCreateFlags&quot;&gt;VkSamplerCreateFlags&lt;/a&gt;, &lt;a href=&quot;#VkSamplerMipmapMode&quot;&gt;VkSamplerMipmapMode&lt;/a&gt;, &lt;a href=&quot;#VkStructureType&quot;&gt;VkStructureType&lt;/a&gt;, &lt;a href=&quot;#vkCreateSampler&quot;&gt;vkCreateSampler&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;VkBool32&lt;/code&gt; , &lt;a href=&quot;#VkBorderColor&quot;&gt;VkBorderColor&lt;/a&gt; , &lt;a href=&quot;#VkCompareOp&quot;&gt;VkCompareOp&lt;/a&gt; , &lt;a href=&quot;#VkFilter&quot;&gt;VkFilter&lt;/a&gt; , &lt;a href=&quot;#VkSamplerAddressMode&quot;&gt;VkSamplerAddressMode&lt;/a&gt; , &lt;a href=&quot;#VkSamplerCreateFlags&quot;&gt;VkSamplerCreateFlags&lt;/a&gt; , &lt;a href=&quot;#VkSamplerMipmapMode&quot;&gt;VkSamplerMipmapMode&lt;/a&gt; , &lt;a href=&quot;#VkStructureType&quot;&gt;VkStructureType&lt;/a&gt; , &lt;a href=&quot;#vkCreateSampler&quot;&gt;vkCreateSampler&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="59b1a272df2aaaa4cc1eb8e29e51d1d715c60843" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VkBool32&lt;/code&gt;, &lt;a href=&quot;#VkCommandBufferBeginInfo&quot;&gt;VkCommandBufferBeginInfo&lt;/a&gt;, &lt;a href=&quot;#VkFramebuffer&quot;&gt;VkFramebuffer&lt;/a&gt;, &lt;a href=&quot;#VkQueryControlFlags&quot;&gt;VkQueryControlFlags&lt;/a&gt;, &lt;a href=&quot;#VkQueryPipelineStatisticFlags&quot;&gt;VkQueryPipelineStatisticFlags&lt;/a&gt;, &lt;a href=&quot;#VkRenderPass&quot;&gt;VkRenderPass&lt;/a&gt;, &lt;a href=&quot;#VkStructureType&quot;&gt;VkStructureType&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;VkBool32&lt;/code&gt; , &lt;a href=&quot;#VkCommandBufferBeginInfo&quot;&gt;VkCommandBufferBeginInfo&lt;/a&gt; , &lt;a href=&quot;#VkFramebuffer&quot;&gt;VkFramebuffer&lt;/a&gt; , &lt;a href=&quot;#VkQueryControlFlags&quot;&gt;VkQueryControlFlags&lt;/a&gt; , &lt;a href=&quot;#VkQueryPipelineStatisticFlags&quot;&gt;VkQueryPipelineStatisticFlags&lt;/a&gt; , &lt;a href=&quot;#VkRenderPass&quot;&gt;VkRenderPass&lt;/a&gt; , &lt;a href=&quot;#VkStructureType&quot;&gt;VkStructureType&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="243fb7f80cce313ccbf9157f88efb409e840338c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VkBool32&lt;/code&gt;, &lt;a href=&quot;#VkCompareOp&quot;&gt;VkCompareOp&lt;/a&gt;, &lt;a href=&quot;#VkGraphicsPipelineCreateInfo&quot;&gt;VkGraphicsPipelineCreateInfo&lt;/a&gt;, &lt;a href=&quot;#VkPipelineDepthStencilStateCreateFlags&quot;&gt;VkPipelineDepthStencilStateCreateFlags&lt;/a&gt;, &lt;a href=&quot;#VkStencilOpState&quot;&gt;VkStencilOpState&lt;/a&gt;, &lt;a href=&quot;#VkStructureType&quot;&gt;VkStructureType&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;VkBool32&lt;/code&gt; , &lt;a href=&quot;#VkCompareOp&quot;&gt;VkCompareOp&lt;/a&gt; , &lt;a href=&quot;#VkGraphicsPipelineCreateInfo&quot;&gt;VkGraphicsPipelineCreateInfo&lt;/a&gt; , &lt;a href=&quot;#VkPipelineDepthStencilStateCreateFlags&quot;&gt;VkPipelineDepthStencilStateCreateFlags&lt;/a&gt; , &lt;a href=&quot;#VkStencilOpState&quot;&gt;VkStencilOpState&lt;/a&gt; , &lt;a href=&quot;#VkStructureType&quot;&gt;VkStructureType&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="526499de0b926168692b46ef5df0231416f69a39" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VkBool32&lt;/code&gt;, &lt;a href=&quot;#VkCullModeFlags&quot;&gt;VkCullModeFlags&lt;/a&gt;, &lt;a href=&quot;#VkFrontFace&quot;&gt;VkFrontFace&lt;/a&gt;, &lt;a href=&quot;#VkGraphicsPipelineCreateInfo&quot;&gt;VkGraphicsPipelineCreateInfo&lt;/a&gt;, &lt;a href=&quot;#VkPipelineRasterizationStateCreateFlags&quot;&gt;VkPipelineRasterizationStateCreateFlags&lt;/a&gt;, &lt;a href=&quot;#VkPolygonMode&quot;&gt;VkPolygonMode&lt;/a&gt;, &lt;a href=&quot;#VkStructureType&quot;&gt;VkStructureType&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;VkBool32&lt;/code&gt; , &lt;a href=&quot;#VkCullModeFlags&quot;&gt;VkCullModeFlags&lt;/a&gt; , &lt;a href=&quot;#VkFrontFace&quot;&gt;VkFrontFace&lt;/a&gt; , &lt;a href=&quot;#VkGraphicsPipelineCreateInfo&quot;&gt;VkGraphicsPipelineCreateInfo&lt;/a&gt; , &lt;a href=&quot;#VkPipelineRasterizationStateCreateFlags&quot;&gt;VkPipelineRasterizationStateCreateFlags&lt;/a&gt; , &lt;a href=&quot;#VkPolygonMode&quot;&gt;VkPolygonMode&lt;/a&gt; , &lt;a href=&quot;#VkStructureType&quot;&gt;VkStructureType&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="30fac3a2d390deb087f59b768afb783ce051a9bc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VkBool32&lt;/code&gt;, &lt;a href=&quot;#VkDevice&quot;&gt;VkDevice&lt;/a&gt;, &lt;a href=&quot;#VkFence&quot;&gt;VkFence&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;VkBool32&lt;/code&gt; , &lt;a href=&quot;#VkDevice&quot;&gt;VkDevice&lt;/a&gt; , &lt;a href=&quot;#VkFence&quot;&gt;VkFence&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9b5effea18a0365c10202f20fba99f8000f958d3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VkBool32&lt;/code&gt;, &lt;a href=&quot;#VkDeviceCreateInfo&quot;&gt;VkDeviceCreateInfo&lt;/a&gt;, &lt;a href=&quot;#vkGetPhysicalDeviceFeatures&quot;&gt;vkGetPhysicalDeviceFeatures&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;VkBool32&lt;/code&gt; , &lt;a href=&quot;#VkDeviceCreateInfo&quot;&gt;VkDeviceCreateInfo&lt;/a&gt; , &lt;a href=&quot;#vkGetPhysicalDeviceFeatures&quot;&gt;vkGetPhysicalDeviceFeatures&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a365b15cbbdd2b254e2b84ab8ed8849933cd71f2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VkBool32&lt;/code&gt;, &lt;a href=&quot;#VkGraphicsPipelineCreateInfo&quot;&gt;VkGraphicsPipelineCreateInfo&lt;/a&gt;, &lt;a href=&quot;#VkLogicOp&quot;&gt;VkLogicOp&lt;/a&gt;, &lt;a href=&quot;#VkPipelineColorBlendAttachmentState&quot;&gt;VkPipelineColorBlendAttachmentState&lt;/a&gt;, &lt;a href=&quot;#VkPipelineColorBlendStateCreateFlags&quot;&gt;VkPipelineColorBlendStateCreateFlags&lt;/a&gt;, &lt;a href=&quot;#VkStructureType&quot;&gt;VkStructureType&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;VkBool32&lt;/code&gt; , &lt;a href=&quot;#VkGraphicsPipelineCreateInfo&quot;&gt;VkGraphicsPipelineCreateInfo&lt;/a&gt; , &lt;a href=&quot;#VkLogicOp&quot;&gt;VkLogicOp&lt;/a&gt; , &lt;a href=&quot;#VkPipelineColorBlendAttachmentState&quot;&gt;VkPipelineColorBlendAttachmentState&lt;/a&gt; , &lt;a href=&quot;#VkPipelineColorBlendStateCreateFlags&quot;&gt;VkPipelineColorBlendStateCreateFlags&lt;/a&gt; , &lt;a href=&quot;#VkStructureType&quot;&gt;VkStructureType&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b563c1524fb76e87cf9543e27697c001c06a674c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VkBool32&lt;/code&gt;, &lt;a href=&quot;#VkGraphicsPipelineCreateInfo&quot;&gt;VkGraphicsPipelineCreateInfo&lt;/a&gt;, &lt;a href=&quot;#VkPipelineInputAssemblyStateCreateFlags&quot;&gt;VkPipelineInputAssemblyStateCreateFlags&lt;/a&gt;, &lt;a href=&quot;#VkPrimitiveTopology&quot;&gt;VkPrimitiveTopology&lt;/a&gt;, &lt;a href=&quot;#VkStructureType&quot;&gt;VkStructureType&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;VkBool32&lt;/code&gt; , &lt;a href=&quot;#VkGraphicsPipelineCreateInfo&quot;&gt;VkGraphicsPipelineCreateInfo&lt;/a&gt; , &lt;a href=&quot;#VkPipelineInputAssemblyStateCreateFlags&quot;&gt;VkPipelineInputAssemblyStateCreateFlags&lt;/a&gt; , &lt;a href=&quot;#VkPrimitiveTopology&quot;&gt;VkPrimitiveTopology&lt;/a&gt; , &lt;a href=&quot;#VkStructureType&quot;&gt;VkStructureType&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="637a811c2f8996c233af0742976a076c9ffd50f1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VkBool32&lt;/code&gt;, &lt;a href=&quot;#VkGraphicsPipelineCreateInfo&quot;&gt;VkGraphicsPipelineCreateInfo&lt;/a&gt;, &lt;a href=&quot;#VkPipelineMultisampleStateCreateFlags&quot;&gt;VkPipelineMultisampleStateCreateFlags&lt;/a&gt;, &lt;a href=&quot;#VkSampleCountFlagBits&quot;&gt;VkSampleCountFlagBits&lt;/a&gt;, &lt;code&gt;VkSampleMask&lt;/code&gt;, &lt;a href=&quot;#VkStructureType&quot;&gt;VkStructureType&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;VkBool32&lt;/code&gt; , &lt;a href=&quot;#VkGraphicsPipelineCreateInfo&quot;&gt;VkGraphicsPipelineCreateInfo&lt;/a&gt; , &lt;a href=&quot;#VkPipelineMultisampleStateCreateFlags&quot;&gt;VkPipelineMultisampleStateCreateFlags&lt;/a&gt; , &lt;a href=&quot;#VkSampleCountFlagBits&quot;&gt;VkSampleCountFlagBits&lt;/a&gt; , &lt;code&gt;VkSampleMask&lt;/code&gt; , &lt;a href=&quot;#VkStructureType&quot;&gt;VkStructureType&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="455d98910cbbc53c7b081023091501fe534e54d5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VkBool32&lt;/code&gt;, &lt;a href=&quot;#VkPhysicalDeviceProperties&quot;&gt;VkPhysicalDeviceProperties&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;VkBool32&lt;/code&gt; , &lt;a href=&quot;#VkPhysicalDeviceProperties&quot;&gt;VkPhysicalDeviceProperties&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8822df8c68e2fa35e1b26ee58258328a9f4a8e94" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VkBool32&lt;/code&gt;, &lt;code&gt;VkDeviceSize&lt;/code&gt;, &lt;a href=&quot;#VkPhysicalDeviceProperties&quot;&gt;VkPhysicalDeviceProperties&lt;/a&gt;, &lt;a href=&quot;#VkSampleCountFlags&quot;&gt;VkSampleCountFlags&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;VkBool32&lt;/code&gt; , &lt;code&gt;VkDeviceSize&lt;/code&gt; , &lt;a href=&quot;#VkPhysicalDeviceProperties&quot;&gt;VkPhysicalDeviceProperties&lt;/a&gt; , &lt;a href=&quot;#VkSampleCountFlags&quot;&gt;VkSampleCountFlags&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c085da1284476d011fa0d9686008ef23d7b95188" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VkBufferCreateFlags&lt;/code&gt; is a mask of zero or more &lt;a href=&quot;#VkBufferCreateFlagBits&quot;&gt;VkBufferCreateFlagBits&lt;/a&gt;. It is used as a member and/or parameter of the structures and commands in the See Also section below.</source>
          <target state="translated">&lt;code&gt;VkBufferCreateFlags&lt;/code&gt; 는 0 개 이상의 &lt;a href=&quot;#VkBufferCreateFlagBits&quot;&gt;VkBufferCreateFlagBits&lt;/a&gt; 마스크입니다 . 아래 참조 섹션에서 구조 및 명령의 멤버 및 / 또는 매개 변수로 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="ccbafe3f89c0ecf185fa21623a94f4b028363884" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VkBufferUsageFlags&lt;/code&gt; is a mask of zero or more &lt;a href=&quot;#VkBufferUsageFlagBits&quot;&gt;VkBufferUsageFlagBits&lt;/a&gt;. It is used as a member and/or parameter of the structures and commands in the See Also section below.</source>
          <target state="translated">&lt;code&gt;VkBufferUsageFlags&lt;/code&gt; 는 0 개 이상의 &lt;a href=&quot;#VkBufferUsageFlagBits&quot;&gt;VkBufferUsageFlagBits&lt;/a&gt; 마스크입니다 . 아래 참조 섹션에서 구조 및 명령의 멤버 및 / 또는 매개 변수로 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="fcc593babb05d6d0bfb67dd7dc3e4ad69010fa3e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VkBufferViewCreateFlags&lt;/code&gt; is a mask of zero or more &lt;a href=&quot;#VkBufferViewCreateFlagBits&quot;&gt;VkBufferViewCreateFlagBits&lt;/a&gt;. It is used as a member and/or parameter of the structures and commands in the See Also section below.</source>
          <target state="translated">&lt;code&gt;VkBufferViewCreateFlags&lt;/code&gt; 는 0 개 이상의 &lt;a href=&quot;#VkBufferViewCreateFlagBits&quot;&gt;VkBufferViewCreateFlagBits&lt;/a&gt; 의 마스크입니다 . 아래 참조 섹션에서 구조 및 명령의 멤버 및 / 또는 매개 변수로 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="28477f910e57483407eae1319bee0d112720242e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VkColorComponentFlags&lt;/code&gt; is a mask of zero or more &lt;a href=&quot;#VkColorComponentFlagBits&quot;&gt;VkColorComponentFlagBits&lt;/a&gt;. It is used as a member and/or parameter of the structures and commands in the See Also section below.</source>
          <target state="translated">&lt;code&gt;VkColorComponentFlags&lt;/code&gt; 는 0 개 이상의 &lt;a href=&quot;#VkColorComponentFlagBits&quot;&gt;VkColorComponentFlagBits&lt;/a&gt; 의 마스크입니다 . 아래 참조 섹션에서 구조 및 명령의 멤버 및 / 또는 매개 변수로 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="fbc9f8ae3bb5cdea1e69de88cd052e5de5c6eda8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VkCommandBufferResetFlags&lt;/code&gt; is a mask of zero or more &lt;a href=&quot;#VkCommandBufferResetFlagBits&quot;&gt;VkCommandBufferResetFlagBits&lt;/a&gt;. It is used as a member and/or parameter of the structures and commands in the See Also section below.</source>
          <target state="translated">&lt;code&gt;VkCommandBufferResetFlags&lt;/code&gt; 는 0 개 이상의 &lt;a href=&quot;#VkCommandBufferResetFlagBits&quot;&gt;VkCommandBufferResetFlagBits&lt;/a&gt; 마스크입니다 . 아래 참조 섹션에서 구조 및 명령의 멤버 및 / 또는 매개 변수로 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="53fe0948edc303c09e53358ffecff77c5248e79d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VkCommandBufferUsageFlags&lt;/code&gt; is a mask of zero or more &lt;a href=&quot;#VkCommandBufferUsageFlagBits&quot;&gt;VkCommandBufferUsageFlagBits&lt;/a&gt;. It is used as a member and/or parameter of the structures and commands in the See Also section below.</source>
          <target state="translated">&lt;code&gt;VkCommandBufferUsageFlags&lt;/code&gt; 는 0 개 이상의 &lt;a href=&quot;#VkCommandBufferUsageFlagBits&quot;&gt;VkCommandBufferUsageFlagBits&lt;/a&gt; 마스크입니다 . 아래 참조 섹션에서 구조 및 명령의 멤버 및 / 또는 매개 변수로 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="6d62d86a1940346520ab78f636701ba19e969ced" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VkCommandPoolCreateFlags&lt;/code&gt; is a mask of zero or more &lt;a href=&quot;#VkCommandPoolCreateFlagBits&quot;&gt;VkCommandPoolCreateFlagBits&lt;/a&gt;. It is used as a member and/or parameter of the structures and commands in the See Also section below.</source>
          <target state="translated">&lt;code&gt;VkCommandPoolCreateFlags&lt;/code&gt; 는 0 개 이상의 &lt;a href=&quot;#VkCommandPoolCreateFlagBits&quot;&gt;VkCommandPoolCreateFlagBits&lt;/a&gt; 마스크입니다 . 아래 참조 섹션에서 구조 및 명령의 멤버 및 / 또는 매개 변수로 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="698ace27e79d9711b20cb2456bec30f6fc72d28b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VkCommandPoolResetFlags&lt;/code&gt; is a mask of zero or more &lt;a href=&quot;#VkCommandPoolResetFlagBits&quot;&gt;VkCommandPoolResetFlagBits&lt;/a&gt;. It is used as a member and/or parameter of the structures and commands in the See Also section below.</source>
          <target state="translated">&lt;code&gt;VkCommandPoolResetFlags&lt;/code&gt; 는 0 개 이상의 &lt;a href=&quot;#VkCommandPoolResetFlagBits&quot;&gt;VkCommandPoolResetFlagBits&lt;/a&gt; 마스크입니다 . 아래 참조 섹션에서 구조 및 명령의 멤버 및 / 또는 매개 변수로 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="97c1c42191b1c88256a766c0ed7f9ded8ca99819" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VkCullModeFlags&lt;/code&gt; is a mask of zero or more &lt;a href=&quot;#VkCullModeFlagBits&quot;&gt;VkCullModeFlagBits&lt;/a&gt;. It is used as a member and/or parameter of the structures and commands in the See Also section below.</source>
          <target state="translated">&lt;code&gt;VkCullModeFlags&lt;/code&gt; 는 0 개 이상의 &lt;a href=&quot;#VkCullModeFlagBits&quot;&gt;VkCullModeFlagBits&lt;/a&gt; 마스크입니다 . 아래 참고 섹션에서 구조 및 명령의 멤버 및 / 또는 매개 변수로 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="1fd399ff46da3cbb7c6bb0b9d3cf7942d38a4f47" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VkDependencyFlags&lt;/code&gt; is a mask of zero or more &lt;a href=&quot;#VkDependencyFlagBits&quot;&gt;VkDependencyFlagBits&lt;/a&gt;. It is used as a member and/or parameter of the structures and commands in the See Also section below.</source>
          <target state="translated">&lt;code&gt;VkDependencyFlags&lt;/code&gt; 는 0 개 이상의 &lt;a href=&quot;#VkDependencyFlagBits&quot;&gt;VkDependencyFlagBits&lt;/a&gt; 마스크입니다 . 아래 참고 섹션에서 구조 및 명령의 멤버 및 / 또는 매개 변수로 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="f25f1ee688a9eae0fcdfa6a970b435c631374067" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VkDescriptorPoolCreateFlags&lt;/code&gt; is a mask of zero or more &lt;a href=&quot;#VkDescriptorPoolCreateFlagBits&quot;&gt;VkDescriptorPoolCreateFlagBits&lt;/a&gt;. It is used as a member and/or parameter of the structures and commands in the See Also section below.</source>
          <target state="translated">&lt;code&gt;VkDescriptorPoolCreateFlags&lt;/code&gt; 는 0 개 이상의 &lt;a href=&quot;#VkDescriptorPoolCreateFlagBits&quot;&gt;VkDescriptorPoolCreateFlagBits&lt;/a&gt; 의 마스크입니다 . 아래 참조 섹션에서 구조 및 명령의 멤버 및 / 또는 매개 변수로 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="8f8cdf14486ed6d3ad1941eb14bf517c6f061207" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VkDescriptorPoolResetFlags&lt;/code&gt; is a mask of zero or more &lt;a href=&quot;#VkDescriptorPoolResetFlagBits&quot;&gt;VkDescriptorPoolResetFlagBits&lt;/a&gt;. It is used as a member and/or parameter of the structures and commands in the See Also section below.</source>
          <target state="translated">&lt;code&gt;VkDescriptorPoolResetFlags&lt;/code&gt; 는 0 개 이상의 &lt;a href=&quot;#VkDescriptorPoolResetFlagBits&quot;&gt;VkDescriptorPoolResetFlagBits&lt;/a&gt; 의 마스크입니다 . 아래 참고 섹션에서 구조 및 명령의 멤버 및 / 또는 매개 변수로 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="d347626b6214ae07b12d12eb188315ef57216d91" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VkDescriptorSetLayoutCreateFlags&lt;/code&gt; is a mask of zero or more &lt;a href=&quot;#VkDescriptorSetLayoutCreateFlagBits&quot;&gt;VkDescriptorSetLayoutCreateFlagBits&lt;/a&gt;. It is used as a member and/or parameter of the structures and commands in the See Also section below.</source>
          <target state="translated">&lt;code&gt;VkDescriptorSetLayoutCreateFlags&lt;/code&gt; 는 0 개 이상의 &lt;a href=&quot;#VkDescriptorSetLayoutCreateFlagBits&quot;&gt;VkDescriptorSetLayoutCreateFlagBits&lt;/a&gt; 의 마스크입니다 . 아래 참고 섹션에서 구조 및 명령의 멤버 및 / 또는 매개 변수로 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="755ab506b2a4cf7a7435d95172dcaf26f8e994d2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VkDeviceCreateFlags&lt;/code&gt; is a mask of zero or more &lt;a href=&quot;#VkDeviceCreateFlagBits&quot;&gt;VkDeviceCreateFlagBits&lt;/a&gt;. It is used as a member and/or parameter of the structures and commands in the See Also section below.</source>
          <target state="translated">&lt;code&gt;VkDeviceCreateFlags&lt;/code&gt; 는 0 개 이상의 &lt;a href=&quot;#VkDeviceCreateFlagBits&quot;&gt;VkDeviceCreateFlagBits&lt;/a&gt; 마스크입니다 . 아래 참고 섹션에서 구조 및 명령의 멤버 및 / 또는 매개 변수로 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="3ff73613fab7adbbfd325858604ee98b1c673a55" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VkDeviceQueueCreateFlags&lt;/code&gt; is a mask of zero or more &lt;a href=&quot;#VkDeviceQueueCreateFlagBits&quot;&gt;VkDeviceQueueCreateFlagBits&lt;/a&gt;. It is used as a member and/or parameter of the structures and commands in the See Also section below.</source>
          <target state="translated">&lt;code&gt;VkDeviceQueueCreateFlags&lt;/code&gt; 는 0 개 이상의 &lt;a href=&quot;#VkDeviceQueueCreateFlagBits&quot;&gt;VkDeviceQueueCreateFlagBits&lt;/a&gt; 마스크입니다 . 아래 참고 섹션에서 구조 및 명령의 멤버 및 / 또는 매개 변수로 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="75e8de9865e78a3b5bb1122f303f16a08775b74c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VkDeviceSize&lt;/code&gt; represents device memory size and offset values:</source>
          <target state="translated">&lt;code&gt;VkDeviceSize&lt;/code&gt; 는 장치 메모리 크기 및 오프셋 값을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="dc7e1cc901deae1affbee3393ffc9b71caf5219f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VkDeviceSize&lt;/code&gt;, &lt;a href=&quot;#VkExtent3D&quot;&gt;VkExtent3D&lt;/a&gt;, &lt;a href=&quot;#VkImageSubresourceLayers&quot;&gt;VkImageSubresourceLayers&lt;/a&gt;, &lt;a href=&quot;#VkOffset3D&quot;&gt;VkOffset3D&lt;/a&gt;, &lt;a href=&quot;#vkCmdCopyBufferToImage&quot;&gt;vkCmdCopyBufferToImage&lt;/a&gt;, &lt;a href=&quot;#vkCmdCopyImageToBuffer&quot;&gt;vkCmdCopyImageToBuffer&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;VkDeviceSize&lt;/code&gt; , &lt;a href=&quot;#VkExtent3D&quot;&gt;VkExtent3D&lt;/a&gt; , &lt;a href=&quot;#VkImageSubresourceLayers&quot;&gt;VkImageSubresourceLayers&lt;/a&gt; , &lt;a href=&quot;#VkOffset3D&quot;&gt;VkOffset3D&lt;/a&gt; , &lt;a href=&quot;#vkCmdCopyBufferToImage&quot;&gt;vkCmdCopyBufferToImage&lt;/a&gt; , &lt;a href=&quot;#vkCmdCopyImageToBuffer&quot;&gt;vkCmdCopyImageToBuffer&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ee54463caed6de30b0bcd1fdb1887f429e491434" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VkDeviceSize&lt;/code&gt;, &lt;a href=&quot;#VkExtent3D&quot;&gt;VkExtent3D&lt;/a&gt;, &lt;a href=&quot;#VkSampleCountFlags&quot;&gt;VkSampleCountFlags&lt;/a&gt;, &lt;a href=&quot;#vkGetPhysicalDeviceImageFormatProperties&quot;&gt;vkGetPhysicalDeviceImageFormatProperties&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;VkDeviceSize&lt;/code&gt; , &lt;a href=&quot;#VkExtent3D&quot;&gt;VkExtent3D&lt;/a&gt; , &lt;a href=&quot;#VkSampleCountFlags&quot;&gt;VkSampleCountFlags&lt;/a&gt; , &lt;a href=&quot;#vkGetPhysicalDeviceImageFormatProperties&quot;&gt;vkGetPhysicalDeviceImageFormatProperties&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="fb91e613d8225ed872ceccbea92a0e9fdc128385" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VkDeviceSize&lt;/code&gt;, &lt;a href=&quot;#VkMemoryHeapFlags&quot;&gt;VkMemoryHeapFlags&lt;/a&gt;, &lt;a href=&quot;#VkPhysicalDeviceMemoryProperties&quot;&gt;VkPhysicalDeviceMemoryProperties&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;VkDeviceSize&lt;/code&gt; , &lt;a href=&quot;#VkMemoryHeapFlags&quot;&gt;VkMemoryHeapFlags&lt;/a&gt; , &lt;a href=&quot;#VkPhysicalDeviceMemoryProperties&quot;&gt;VkPhysicalDeviceMemoryProperties&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="737c39f00018efc2d79bdacbd60b296b4fd0ffba" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VkDeviceSize&lt;/code&gt;, &lt;a href=&quot;#VkSparseImageFormatProperties&quot;&gt;VkSparseImageFormatProperties&lt;/a&gt;, &lt;a href=&quot;#vkGetImageSparseMemoryRequirements&quot;&gt;vkGetImageSparseMemoryRequirements&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;VkDeviceSize&lt;/code&gt; , &lt;a href=&quot;#VkSparseImageFormatProperties&quot;&gt;VkSparseImageFormatProperties&lt;/a&gt; , &lt;a href=&quot;#vkGetImageSparseMemoryRequirements&quot;&gt;vkGetImageSparseMemoryRequirements&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="03d55f7fbca1f93598b516a654c51b587b3d0898" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VkDeviceSize&lt;/code&gt;, &lt;a href=&quot;#VkStructureType&quot;&gt;VkStructureType&lt;/a&gt;, &lt;a href=&quot;#vkAllocateMemory&quot;&gt;vkAllocateMemory&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;VkDeviceSize&lt;/code&gt; , &lt;a href=&quot;#VkStructureType&quot;&gt;VkStructureType&lt;/a&gt; , &lt;a href=&quot;#vkAllocateMemory&quot;&gt;vkAllocateMemory&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9cd5de406ae9d621ffdbd9a3f5da2b96977c0999" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VkDeviceSize&lt;/code&gt;, &lt;a href=&quot;#vkCmdCopyBuffer&quot;&gt;vkCmdCopyBuffer&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;VkDeviceSize&lt;/code&gt; , &lt;a href=&quot;#vkCmdCopyBuffer&quot;&gt;vkCmdCopyBuffer&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="699e183dc1bae0c9cbd6da80d1bb09d66e90cbb3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VkDeviceSize&lt;/code&gt;, &lt;a href=&quot;#vkGetBufferMemoryRequirements&quot;&gt;vkGetBufferMemoryRequirements&lt;/a&gt;, &lt;a href=&quot;#vkGetImageMemoryRequirements&quot;&gt;vkGetImageMemoryRequirements&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;VkDeviceSize&lt;/code&gt; , &lt;a href=&quot;#vkGetBufferMemoryRequirements&quot;&gt;vkGetBufferMemoryRequirements&lt;/a&gt; , &lt;a href=&quot;#vkGetImageMemoryRequirements&quot;&gt;vkGetImageMemoryRequirements&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5ce9ef0432b82acf05221efd1f9068d98d4d8b47" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VkDeviceSize&lt;/code&gt;, &lt;a href=&quot;#vkGetImageSubresourceLayout&quot;&gt;vkGetImageSubresourceLayout&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;VkDeviceSize&lt;/code&gt; , &lt;a href=&quot;#vkGetImageSubresourceLayout&quot;&gt;vkGetImageSubresourceLayout&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d7457424d619ebb5f84355cb9c7277b5e6f2a8e2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VkEventCreateFlags&lt;/code&gt; is a mask of zero or more &lt;a href=&quot;#VkEventCreateFlagBits&quot;&gt;VkEventCreateFlagBits&lt;/a&gt;. It is used as a member and/or parameter of the structures and commands in the See Also section below.</source>
          <target state="translated">&lt;code&gt;VkEventCreateFlags&lt;/code&gt; 는 0 개 이상의 &lt;a href=&quot;#VkEventCreateFlagBits&quot;&gt;VkEventCreateFlagBits&lt;/a&gt; 마스크입니다 . 아래 참고 섹션에서 구조 및 명령의 멤버 및 / 또는 매개 변수로 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="9d5e5c3940af23a92291a97d8f48c4f769967a53" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VkFenceCreateFlags&lt;/code&gt; is a mask of zero or more &lt;a href=&quot;#VkFenceCreateFlagBits&quot;&gt;VkFenceCreateFlagBits&lt;/a&gt;. It is used as a member and/or parameter of the structures and commands in the See Also section below.</source>
          <target state="translated">&lt;code&gt;VkFenceCreateFlags&lt;/code&gt; 는 0 개 이상의 &lt;a href=&quot;#VkFenceCreateFlagBits&quot;&gt;VkFenceCreateFlagBits&lt;/a&gt; 마스크입니다 . 아래 참고 섹션에서 구조 및 명령의 멤버 및 / 또는 매개 변수로 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="4a983a514fd8a1ce5095830b81a1e461adf3ed24" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VkFormatFeatureFlags&lt;/code&gt; is a mask of zero or more &lt;a href=&quot;#VkFormatFeatureFlagBits&quot;&gt;VkFormatFeatureFlagBits&lt;/a&gt;. It is used as a member and/or parameter of the structures and commands in the See Also section below.</source>
          <target state="translated">&lt;code&gt;VkFormatFeatureFlags&lt;/code&gt; 는 0 개 이상의 &lt;a href=&quot;#VkFormatFeatureFlagBits&quot;&gt;VkFormatFeatureFlagBits&lt;/a&gt; 마스크입니다 . 아래 참고 섹션에서 구조 및 명령의 멤버 및 / 또는 매개 변수로 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="593b63424ea62ee9f114da30ced9fdf5007ebd70" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VkFramebufferCreateFlags&lt;/code&gt; is a mask of zero or more &lt;a href=&quot;#VkFramebufferCreateFlagBits&quot;&gt;VkFramebufferCreateFlagBits&lt;/a&gt;. It is used as a member and/or parameter of the structures and commands in the See Also section below.</source>
          <target state="translated">&lt;code&gt;VkFramebufferCreateFlags&lt;/code&gt; 는 0 개 이상의 &lt;a href=&quot;#VkFramebufferCreateFlagBits&quot;&gt;VkFramebufferCreateFlagBits&lt;/a&gt; 의 마스크입니다 . 아래 참고 섹션에서 구조 및 명령의 멤버 및 / 또는 매개 변수로 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="c4e2ac12271b54939482aebcd28e4482ce548652" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VkImageAspectFlags&lt;/code&gt; is a mask of zero or more &lt;a href=&quot;#VkImageAspectFlagBits&quot;&gt;VkImageAspectFlagBits&lt;/a&gt;. It is used as a member and/or parameter of the structures and commands in the See Also section below.</source>
          <target state="translated">&lt;code&gt;VkImageAspectFlags&lt;/code&gt; 는 0 개 이상의 &lt;a href=&quot;#VkImageAspectFlagBits&quot;&gt;VkImageAspectFlagBits&lt;/a&gt; 마스크입니다 . 아래 참고 섹션에서 구조 및 명령의 멤버 및 / 또는 매개 변수로 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="0fedfd85ba4322c692c7e89478f194447539ea54" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VkImageCreateFlags&lt;/code&gt; is a mask of zero or more &lt;a href=&quot;#VkImageCreateFlagBits&quot;&gt;VkImageCreateFlagBits&lt;/a&gt;. It is used as a member and/or parameter of the structures and commands in the See Also section below.</source>
          <target state="translated">&lt;code&gt;VkImageCreateFlags&lt;/code&gt; 는 0 개 이상의 &lt;a href=&quot;#VkImageCreateFlagBits&quot;&gt;VkImageCreateFlagBits&lt;/a&gt; 마스크입니다 . 아래 참고 섹션에서 구조 및 명령의 멤버 및 / 또는 매개 변수로 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="b429c577160305606e90b4d3de736a27c9b7c836" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VkImageUsageFlags&lt;/code&gt; is a mask of zero or more &lt;a href=&quot;#VkImageUsageFlagBits&quot;&gt;VkImageUsageFlagBits&lt;/a&gt;. It is used as a member and/or parameter of the structures and commands in the See Also section below.</source>
          <target state="translated">&lt;code&gt;VkImageUsageFlags&lt;/code&gt; 는 0 개 이상의 &lt;a href=&quot;#VkImageUsageFlagBits&quot;&gt;VkImageUsageFlagBits&lt;/a&gt; 마스크입니다 . 아래 참고 섹션에서 구조 및 명령의 멤버 및 / 또는 매개 변수로 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="8ddd9076cc0c54811aef60b487c1c893e0929693" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VkImageViewCreateFlags&lt;/code&gt; is a mask of zero or more &lt;a href=&quot;#VkImageViewCreateFlagBits&quot;&gt;VkImageViewCreateFlagBits&lt;/a&gt;. It is used as a member and/or parameter of the structures and commands in the See Also section below.</source>
          <target state="translated">&lt;code&gt;VkImageViewCreateFlags&lt;/code&gt; 는 0 개 이상의 &lt;a href=&quot;#VkImageViewCreateFlagBits&quot;&gt;VkImageViewCreateFlagBits&lt;/a&gt; 의 마스크입니다 . 아래 참고 섹션에서 구조 및 명령의 멤버 및 / 또는 매개 변수로 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="55da9d567973b41d3534fabe99a74e2b49a469d9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VkInstanceCreateFlags&lt;/code&gt; is a mask of zero or more &lt;a href=&quot;#VkInstanceCreateFlagBits&quot;&gt;VkInstanceCreateFlagBits&lt;/a&gt;. It is used as a member and/or parameter of the structures and commands in the See Also section below.</source>
          <target state="translated">&lt;code&gt;VkInstanceCreateFlags&lt;/code&gt; 는 0 개 이상의 &lt;a href=&quot;#VkInstanceCreateFlagBits&quot;&gt;VkInstanceCreateFlagBits&lt;/a&gt; 마스크입니다 . 아래 참고 섹션에서 구조 및 명령의 멤버 및 / 또는 매개 변수로 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="9b3d3e97a49dd1ec2372bd580e704ec3635099be" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VkMemoryHeapFlags&lt;/code&gt; is a mask of zero or more &lt;a href=&quot;#VkMemoryHeapFlagBits&quot;&gt;VkMemoryHeapFlagBits&lt;/a&gt;. It is used as a member and/or parameter of the structures and commands in the See Also section below.</source>
          <target state="translated">&lt;code&gt;VkMemoryHeapFlags&lt;/code&gt; 는 0 개 이상의 &lt;a href=&quot;#VkMemoryHeapFlagBits&quot;&gt;VkMemoryHeapFlagBits&lt;/a&gt; 마스크입니다 . 아래 참고 섹션에서 구조 및 명령의 멤버 및 / 또는 매개 변수로 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="71ff6c8f97a6cb5708f8701c6ba30deffe54133c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VkMemoryMapFlags&lt;/code&gt; is a mask of zero or more &lt;a href=&quot;#VkMemoryMapFlagBits&quot;&gt;VkMemoryMapFlagBits&lt;/a&gt;. It is used as a member and/or parameter of the structures and commands in the See Also section below.</source>
          <target state="translated">&lt;code&gt;VkMemoryMapFlags&lt;/code&gt; 는 0 개 이상의 &lt;a href=&quot;#VkMemoryMapFlagBits&quot;&gt;VkMemoryMapFlagBits&lt;/a&gt; 마스크입니다 . 아래 참고 섹션에서 구조 및 명령의 멤버 및 / 또는 매개 변수로 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="5010479bcc50971926e78f5d6804bfd37c8f63e0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VkMemoryPropertyFlags&lt;/code&gt; is a mask of zero or more &lt;a href=&quot;#VkMemoryPropertyFlagBits&quot;&gt;VkMemoryPropertyFlagBits&lt;/a&gt;. It is used as a member and/or parameter of the structures and commands in the See Also section below.</source>
          <target state="translated">&lt;code&gt;VkMemoryPropertyFlags&lt;/code&gt; 는 0 개 이상의 &lt;a href=&quot;#VkMemoryPropertyFlagBits&quot;&gt;VkMemoryPropertyFlagBits&lt;/a&gt; 마스크입니다 . 아래 참고 섹션에서 구조 및 명령의 멤버 및 / 또는 매개 변수로 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="d53c9a4c9dc2266b86dc09b1eb198595e9dac954" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VkPipelineCacheCreateFlags&lt;/code&gt; is a mask of zero or more &lt;a href=&quot;#VkPipelineCacheCreateFlagBits&quot;&gt;VkPipelineCacheCreateFlagBits&lt;/a&gt;. It is used as a member and/or parameter of the structures and commands in the See Also section below.</source>
          <target state="translated">&lt;code&gt;VkPipelineCacheCreateFlags&lt;/code&gt; 는 0 개 이상의 &lt;a href=&quot;#VkPipelineCacheCreateFlagBits&quot;&gt;VkPipelineCacheCreateFlagBits&lt;/a&gt; 의 마스크입니다 . 아래 참고 섹션에서 구조 및 명령의 멤버 및 / 또는 매개 변수로 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="50ada10fff0d2d907cb2aaca07e874e32da4e84f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VkPipelineColorBlendStateCreateFlags&lt;/code&gt; is a mask of zero or more &lt;a href=&quot;#VkPipelineColorBlendStateCreateFlagBits&quot;&gt;VkPipelineColorBlendStateCreateFlagBits&lt;/a&gt;. It is used as a member and/or parameter of the structures and commands in the See Also section below.</source>
          <target state="translated">&lt;code&gt;VkPipelineColorBlendStateCreateFlags&lt;/code&gt; 는 0 개 이상의 &lt;a href=&quot;#VkPipelineColorBlendStateCreateFlagBits&quot;&gt;VkPipelineColorBlendStateCreateFlagBits&lt;/a&gt; 마스크입니다 . 아래 참고 섹션에서 구조 및 명령의 멤버 및 / 또는 매개 변수로 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="fed096a9a402b01c5e47b1759ebf8cef24ffb499" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VkPipelineCreateFlags&lt;/code&gt; is a mask of zero or more &lt;a href=&quot;#VkPipelineCreateFlagBits&quot;&gt;VkPipelineCreateFlagBits&lt;/a&gt;. It is used as a member and/or parameter of the structures and commands in the See Also section below.</source>
          <target state="translated">&lt;code&gt;VkPipelineCreateFlags&lt;/code&gt; 는 0 개 이상의 &lt;a href=&quot;#VkPipelineCreateFlagBits&quot;&gt;VkPipelineCreateFlagBits&lt;/a&gt; 마스크입니다 . 아래 참고 섹션에서 구조 및 명령의 멤버 및 / 또는 매개 변수로 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="f07b1ed126be59ec32f0bf45fadcf4eb58ec6800" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VkPipelineDepthStencilStateCreateFlags&lt;/code&gt; is a mask of zero or more &lt;a href=&quot;#VkPipelineDepthStencilStateCreateFlagBits&quot;&gt;VkPipelineDepthStencilStateCreateFlagBits&lt;/a&gt;. It is used as a member and/or parameter of the structures and commands in the See Also section below.</source>
          <target state="translated">&lt;code&gt;VkPipelineDepthStencilStateCreateFlags&lt;/code&gt; 는 0 개 이상의 &lt;a href=&quot;#VkPipelineDepthStencilStateCreateFlagBits&quot;&gt;VkPipelineDepthStencilStateCreateFlagBits&lt;/a&gt; 마스크입니다 . 아래 참고 섹션에서 구조 및 명령의 멤버 및 / 또는 매개 변수로 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="7533612dc8f7fe542c7178d7b7d887e8dd76434d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VkPipelineDynamicStateCreateFlags&lt;/code&gt; is a mask of zero or more &lt;a href=&quot;#VkPipelineDynamicStateCreateFlagBits&quot;&gt;VkPipelineDynamicStateCreateFlagBits&lt;/a&gt;. It is used as a member and/or parameter of the structures and commands in the See Also section below.</source>
          <target state="translated">&lt;code&gt;VkPipelineDynamicStateCreateFlags&lt;/code&gt; 는 0 개 이상의 &lt;a href=&quot;#VkPipelineDynamicStateCreateFlagBits&quot;&gt;VkPipelineDynamicStateCreateFlagBits&lt;/a&gt; 마스크입니다 . 아래 참고 섹션에서 구조 및 명령의 멤버 및 / 또는 매개 변수로 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="ccd870edcb2eb0a2eba207bd67a6dd87e70ab4aa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VkPipelineInputAssemblyStateCreateFlags&lt;/code&gt; is a mask of zero or more &lt;a href=&quot;#VkPipelineInputAssemblyStateCreateFlagBits&quot;&gt;VkPipelineInputAssemblyStateCreateFlagBits&lt;/a&gt;. It is used as a member and/or parameter of the structures and commands in the See Also section below.</source>
          <target state="translated">&lt;code&gt;VkPipelineInputAssemblyStateCreateFlags&lt;/code&gt; 는 0 개 이상의 &lt;a href=&quot;#VkPipelineInputAssemblyStateCreateFlagBits&quot;&gt;VkPipelineInputAssemblyStateCreateFlagBits&lt;/a&gt; 마스크입니다 . 아래 참고 섹션에서 구조 및 명령의 멤버 및 / 또는 매개 변수로 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="5aadf74a1ac45a432ae20dcc4bb4f30852a8d4e2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VkPipelineLayoutCreateFlags&lt;/code&gt; is a mask of zero or more &lt;a href=&quot;#VkPipelineLayoutCreateFlagBits&quot;&gt;VkPipelineLayoutCreateFlagBits&lt;/a&gt;. It is used as a member and/or parameter of the structures and commands in the See Also section below.</source>
          <target state="translated">&lt;code&gt;VkPipelineLayoutCreateFlags&lt;/code&gt; 는 0 개 이상의 &lt;a href=&quot;#VkPipelineLayoutCreateFlagBits&quot;&gt;VkPipelineLayoutCreateFlagBits&lt;/a&gt; 의 마스크입니다 . 아래 참고 섹션에서 구조 및 명령의 멤버 및 / 또는 매개 변수로 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="41c65d3630cbae2e165f14abbaf120ceaaef2b0b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VkPipelineMultisampleStateCreateFlags&lt;/code&gt; is a mask of zero or more &lt;a href=&quot;#VkPipelineMultisampleStateCreateFlagBits&quot;&gt;VkPipelineMultisampleStateCreateFlagBits&lt;/a&gt;. It is used as a member and/or parameter of the structures and commands in the See Also section below.</source>
          <target state="translated">&lt;code&gt;VkPipelineMultisampleStateCreateFlags&lt;/code&gt; 는 0 개 이상의 &lt;a href=&quot;#VkPipelineMultisampleStateCreateFlagBits&quot;&gt;VkPipelineMultisampleStateCreateFlagBits&lt;/a&gt; 마스크입니다 . 아래 참고 섹션에서 구조 및 명령의 멤버 및 / 또는 매개 변수로 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="8e7c771e2f9ca8a398fa55cfee58352b639e7d82" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VkPipelineRasterizationStateCreateFlags&lt;/code&gt; is a mask of zero or more &lt;a href=&quot;#VkPipelineRasterizationStateCreateFlagBits&quot;&gt;VkPipelineRasterizationStateCreateFlagBits&lt;/a&gt;. It is used as a member and/or parameter of the structures and commands in the See Also section below.</source>
          <target state="translated">&lt;code&gt;VkPipelineRasterizationStateCreateFlags&lt;/code&gt; 는 0 개 이상의 &lt;a href=&quot;#VkPipelineRasterizationStateCreateFlagBits&quot;&gt;VkPipelineRasterizationStateCreateFlagBits&lt;/a&gt; 의 마스크입니다 . 아래 참고 섹션에서 구조 및 명령의 멤버 및 / 또는 매개 변수로 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="1d1fa2cd5b9e1d7ff94bdb19194dd87de898f84f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VkPipelineShaderStageCreateFlags&lt;/code&gt; is a mask of zero or more &lt;a href=&quot;#VkPipelineShaderStageCreateFlagBits&quot;&gt;VkPipelineShaderStageCreateFlagBits&lt;/a&gt;. It is used as a member and/or parameter of the structures and commands in the See Also section below.</source>
          <target state="translated">&lt;code&gt;VkPipelineShaderStageCreateFlags&lt;/code&gt; 는 0 개 이상의 &lt;a href=&quot;#VkPipelineShaderStageCreateFlagBits&quot;&gt;VkPipelineShaderStageCreateFlagBits&lt;/a&gt; 마스크입니다 . 아래 참고 섹션에서 구조 및 명령의 멤버 및 / 또는 매개 변수로 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="903fe78da4481d427e13799d8657cfabdb3e3fa7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VkPipelineStageFlags&lt;/code&gt; is a mask of zero or more &lt;a href=&quot;#VkPipelineStageFlagBits&quot;&gt;VkPipelineStageFlagBits&lt;/a&gt;. It is used as a member and/or parameter of the structures and commands in the See Also section below.</source>
          <target state="translated">&lt;code&gt;VkPipelineStageFlags&lt;/code&gt; 는 0 개 이상의 &lt;a href=&quot;#VkPipelineStageFlagBits&quot;&gt;VkPipelineStageFlagBits&lt;/a&gt; 마스크입니다 . 아래 참고 섹션에서 구조 및 명령의 멤버 및 / 또는 매개 변수로 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="45292f5a5fe36f97ffeecafcb8a5acff53081fa7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VkPipelineTessellationStateCreateFlags&lt;/code&gt; is a mask of zero or more &lt;a href=&quot;#VkPipelineTessellationStateCreateFlagBits&quot;&gt;VkPipelineTessellationStateCreateFlagBits&lt;/a&gt;. It is used as a member and/or parameter of the structures and commands in the See Also section below.</source>
          <target state="translated">&lt;code&gt;VkPipelineTessellationStateCreateFlags&lt;/code&gt; 는 0 개 이상의 &lt;a href=&quot;#VkPipelineTessellationStateCreateFlagBits&quot;&gt;VkPipelineTessellationStateCreateFlagBits&lt;/a&gt; 마스크입니다 . 아래 참고 섹션에서 구조 및 명령의 멤버 및 / 또는 매개 변수로 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="cbdbec8579445abeca9768b9bb06fd91cf63984f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VkPipelineVertexInputStateCreateFlags&lt;/code&gt; is a mask of zero or more &lt;a href=&quot;#VkPipelineVertexInputStateCreateFlagBits&quot;&gt;VkPipelineVertexInputStateCreateFlagBits&lt;/a&gt;. It is used as a member and/or parameter of the structures and commands in the See Also section below.</source>
          <target state="translated">&lt;code&gt;VkPipelineVertexInputStateCreateFlags&lt;/code&gt; 는 0 개 이상의 &lt;a href=&quot;#VkPipelineVertexInputStateCreateFlagBits&quot;&gt;VkPipelineVertexInputStateCreateFlagBits&lt;/a&gt; 의 마스크입니다 . 아래 참고 섹션에서 구조 및 명령의 멤버 및 / 또는 매개 변수로 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="63f2e336d93dcd9999404bc5a4ea4cb766410106" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VkPipelineViewportStateCreateFlags&lt;/code&gt; is a mask of zero or more &lt;a href=&quot;#VkPipelineViewportStateCreateFlagBits&quot;&gt;VkPipelineViewportStateCreateFlagBits&lt;/a&gt;. It is used as a member and/or parameter of the structures and commands in the See Also section below.</source>
          <target state="translated">&lt;code&gt;VkPipelineViewportStateCreateFlags&lt;/code&gt; 는 0 개 이상의 &lt;a href=&quot;#VkPipelineViewportStateCreateFlagBits&quot;&gt;VkPipelineViewportStateCreateFlagBits&lt;/a&gt; 마스크입니다 . 아래 참고 섹션에서 구조 및 명령의 멤버 및 / 또는 매개 변수로 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="966b38cbf026cb0e61f440af0d1ffd013638d7a5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VkQueryControlFlags&lt;/code&gt; is a mask of zero or more &lt;a href=&quot;#VkQueryControlFlagBits&quot;&gt;VkQueryControlFlagBits&lt;/a&gt;. It is used as a member and/or parameter of the structures and commands in the See Also section below.</source>
          <target state="translated">&lt;code&gt;VkQueryControlFlags&lt;/code&gt; 는 0 개 이상의 &lt;a href=&quot;#VkQueryControlFlagBits&quot;&gt;VkQueryControlFlagBits&lt;/a&gt; 마스크입니다 . 아래 참고 섹션에서 구조 및 명령의 멤버 및 / 또는 매개 변수로 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="315f010a0d8002361891e6c1f061a685b94a303a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VkQueryPipelineStatisticFlags&lt;/code&gt; is a mask of zero or more &lt;a href=&quot;#VkQueryPipelineStatisticFlagBits&quot;&gt;VkQueryPipelineStatisticFlagBits&lt;/a&gt;. It is used as a member and/or parameter of the structures and commands in the See Also section below.</source>
          <target state="translated">&lt;code&gt;VkQueryPipelineStatisticFlags&lt;/code&gt; 는 0 개 이상의 &lt;a href=&quot;#VkQueryPipelineStatisticFlagBits&quot;&gt;VkQueryPipelineStatisticFlagBits&lt;/a&gt; 마스크입니다 . 아래 참고 섹션에서 구조 및 명령의 멤버 및 / 또는 매개 변수로 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="71beb8daaaa09efecd70f137eaf2f273ef581c08" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VkQueryPoolCreateFlags&lt;/code&gt; is a mask of zero or more &lt;a href=&quot;#VkQueryPoolCreateFlagBits&quot;&gt;VkQueryPoolCreateFlagBits&lt;/a&gt;. It is used as a member and/or parameter of the structures and commands in the See Also section below.</source>
          <target state="translated">&lt;code&gt;VkQueryPoolCreateFlags&lt;/code&gt; 는 0 개 이상의 &lt;a href=&quot;#VkQueryPoolCreateFlagBits&quot;&gt;VkQueryPoolCreateFlagBits&lt;/a&gt; 마스크입니다 . 아래 참고 섹션에서 구조 및 명령의 멤버 및 / 또는 매개 변수로 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="55e32786fb983fb82cfe4605404f761a7420d9cf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VkQueryResultFlags&lt;/code&gt; is a mask of zero or more &lt;a href=&quot;#VkQueryResultFlagBits&quot;&gt;VkQueryResultFlagBits&lt;/a&gt;. It is used as a member and/or parameter of the structures and commands in the See Also section below.</source>
          <target state="translated">&lt;code&gt;VkQueryResultFlags&lt;/code&gt; 는 0 개 이상의 &lt;a href=&quot;#VkQueryResultFlagBits&quot;&gt;VkQueryResultFlagBits&lt;/a&gt; 마스크입니다 . 아래 참고 섹션에서 구조 및 명령의 멤버 및 / 또는 매개 변수로 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="7fbcd9e013a36c7b0bce6d1dc56ca1ec5982e71a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VkQueueFlags&lt;/code&gt; is a mask of zero or more &lt;a href=&quot;#VkQueueFlagBits&quot;&gt;VkQueueFlagBits&lt;/a&gt;. It is used as a member and/or parameter of the structures and commands in the See Also section below.</source>
          <target state="translated">&lt;code&gt;VkQueueFlags&lt;/code&gt; 는 0 개 이상의 &lt;a href=&quot;#VkQueueFlagBits&quot;&gt;VkQueueFlagBits&lt;/a&gt; 마스크입니다 . 아래 참고 섹션에서 구조 및 명령의 멤버 및 / 또는 매개 변수로 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="439a47aae3b2420b82534caaec4979ead4ccb1ee" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VkRenderPassCreateFlags&lt;/code&gt; is a mask of zero or more &lt;a href=&quot;#VkRenderPassCreateFlagBits&quot;&gt;VkRenderPassCreateFlagBits&lt;/a&gt;. It is used as a member and/or parameter of the structures and commands in the See Also section below.</source>
          <target state="translated">&lt;code&gt;VkRenderPassCreateFlags&lt;/code&gt; 는 0 개 이상의 &lt;a href=&quot;#VkRenderPassCreateFlagBits&quot;&gt;VkRenderPassCreateFlagBits&lt;/a&gt; 마스크입니다 . 아래 참고 섹션에서 구조 및 명령의 멤버 및 / 또는 매개 변수로 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="1d5aa97ccf98d6dca658bf4d63f0c448886ae1a2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VkSampleCountFlags&lt;/code&gt; is a mask of zero or more &lt;a href=&quot;#VkSampleCountFlagBits&quot;&gt;VkSampleCountFlagBits&lt;/a&gt;. It is used as a member and/or parameter of the structures and commands in the See Also section below.</source>
          <target state="translated">&lt;code&gt;VkSampleCountFlags&lt;/code&gt; 는 0 개 이상의 &lt;a href=&quot;#VkSampleCountFlagBits&quot;&gt;VkSampleCountFlagBits&lt;/a&gt; 의 마스크입니다 . 아래 참고 섹션에서 구조 및 명령의 멤버 및 / 또는 매개 변수로 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="94478e0c4891f1731a44d59dc14f05c0fc3e982e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VkSampler&lt;/code&gt; objects represent the state of an image sampler which is used by the implementation to read image data and apply filtering and other transformations for the shader.</source>
          <target state="translated">&lt;code&gt;VkSampler&lt;/code&gt; 객체는 구현에서 이미지 데이터를 읽고 쉐이더에 필터링 및 기타 변환을 적용하는 데 사용되는 이미지 샘플러의 상태를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="0f2237478c0530a14a755053f2bb4888fb5945ee" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VkSamplerCreateFlags&lt;/code&gt; is a mask of zero or more &lt;a href=&quot;#VkSamplerCreateFlagBits&quot;&gt;VkSamplerCreateFlagBits&lt;/a&gt;. It is used as a member and/or parameter of the structures and commands in the See Also section below.</source>
          <target state="translated">&lt;code&gt;VkSamplerCreateFlags&lt;/code&gt; 는 0 개 이상의 &lt;a href=&quot;#VkSamplerCreateFlagBits&quot;&gt;VkSamplerCreateFlagBits&lt;/a&gt; 마스크입니다 . 아래 참고 섹션에서 구조 및 명령의 멤버 및 / 또는 매개 변수로 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="71544eb12c3478f23dab930db783efb8ab798947" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VkSemaphoreCreateFlags&lt;/code&gt; is a mask of zero or more &lt;a href=&quot;#VkSemaphoreCreateFlagBits&quot;&gt;VkSemaphoreCreateFlagBits&lt;/a&gt;. It is used as a member and/or parameter of the structures and commands in the See Also section below.</source>
          <target state="translated">&lt;code&gt;VkSemaphoreCreateFlags&lt;/code&gt; 는 0 개 이상의 &lt;a href=&quot;#VkSemaphoreCreateFlagBits&quot;&gt;VkSemaphoreCreateFlagBits&lt;/a&gt; 마스크입니다 . 아래 참고 섹션에서 구조 및 명령의 멤버 및 / 또는 매개 변수로 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="4bc200c8963329120b8b46c3696f4f3f7f9ea772" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VkShaderModuleCreateFlags&lt;/code&gt; is a mask of zero or more &lt;a href=&quot;#VkShaderModuleCreateFlagBits&quot;&gt;VkShaderModuleCreateFlagBits&lt;/a&gt;. It is used as a member and/or parameter of the structures and commands in the See Also section below.</source>
          <target state="translated">&lt;code&gt;VkShaderModuleCreateFlags&lt;/code&gt; 는 0 개 이상의 &lt;a href=&quot;#VkShaderModuleCreateFlagBits&quot;&gt;VkShaderModuleCreateFlagBits&lt;/a&gt; 의 마스크입니다 . 아래 참고 섹션에서 구조 및 명령의 멤버 및 / 또는 매개 변수로 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="e48152bb7953c497a045a98d249f8f67ca68b9be" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VkShaderStageFlags&lt;/code&gt; is a mask of zero or more &lt;a href=&quot;#VkShaderStageFlagBits&quot;&gt;VkShaderStageFlagBits&lt;/a&gt;. It is used as a member and/or parameter of the structures and commands in the See Also section below.</source>
          <target state="translated">&lt;code&gt;VkShaderStageFlags&lt;/code&gt; 는 0 개 이상의 &lt;a href=&quot;#VkShaderStageFlagBits&quot;&gt;VkShaderStageFlagBits&lt;/a&gt; 마스크입니다 . 아래 참고 섹션에서 구조 및 명령의 멤버 및 / 또는 매개 변수로 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="2773c7b8574658f6a0bd4c16adf7cf23905f5732" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VkSparseImageFormatFlags&lt;/code&gt; is a mask of zero or more &lt;a href=&quot;#VkSparseImageFormatFlagBits&quot;&gt;VkSparseImageFormatFlagBits&lt;/a&gt;. It is used as a member and/or parameter of the structures and commands in the See Also section below.</source>
          <target state="translated">&lt;code&gt;VkSparseImageFormatFlags&lt;/code&gt; 는 0 개 이상의 &lt;a href=&quot;#VkSparseImageFormatFlagBits&quot;&gt;VkSparseImageFormatFlagBits&lt;/a&gt; 마스크입니다 . 아래 참고 섹션에서 구조 및 명령의 멤버 및 / 또는 매개 변수로 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="44be8bb1015ce8327efec292d9340b0f2c1f6779" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VkSparseMemoryBindFlags&lt;/code&gt; is a mask of zero or more &lt;a href=&quot;#VkSparseMemoryBindFlagBits&quot;&gt;VkSparseMemoryBindFlagBits&lt;/a&gt;. It is used as a member and/or parameter of the structures and commands in the See Also section below.</source>
          <target state="translated">&lt;code&gt;VkSparseMemoryBindFlags&lt;/code&gt; 는 0 개 이상의 &lt;a href=&quot;#VkSparseMemoryBindFlagBits&quot;&gt;VkSparseMemoryBindFlagBits&lt;/a&gt; 마스크입니다 . 아래 참고 섹션에서 구조 및 명령의 멤버 및 / 또는 매개 변수로 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="6bd36a130d8bbb9197b4060733ce7dcfbf4a6607" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VkStencilFaceFlags&lt;/code&gt; is a mask of zero or more &lt;a href=&quot;#VkStencilFaceFlagBits&quot;&gt;VkStencilFaceFlagBits&lt;/a&gt;. It is used as a member and/or parameter of the structures and commands in the See Also section below.</source>
          <target state="translated">&lt;code&gt;VkStencilFaceFlags&lt;/code&gt; 는 0 개 이상의 &lt;a href=&quot;#VkStencilFaceFlagBits&quot;&gt;VkStencilFaceFlagBits&lt;/a&gt; 마스크입니다 . 아래 참고 섹션에서 구조 및 명령의 멤버 및 / 또는 매개 변수로 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="6c870002200f9c05634f64cf3f3bc34fe5d1d8a1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VkSubpassDescriptionFlags&lt;/code&gt; is a mask of zero or more &lt;a href=&quot;#VkSubpassDescriptionFlagBits&quot;&gt;VkSubpassDescriptionFlagBits&lt;/a&gt;. It is used as a member and/or parameter of the structures and commands in the See Also section below.</source>
          <target state="translated">&lt;code&gt;VkSubpassDescriptionFlags&lt;/code&gt; 는 0 개 이상의 &lt;a href=&quot;#VkSubpassDescriptionFlagBits&quot;&gt;VkSubpassDescriptionFlagBits&lt;/a&gt; 마스크입니다 . 아래 참고 섹션에서 구조 및 명령의 멤버 및 / 또는 매개 변수로 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="4784a7acd5ead1c13e9a2a99a77002fcda4f4b73" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be a valid &lt;a href=&quot;#VkComponentSwizzle&quot;&gt;VkComponentSwizzle&lt;/a&gt; value</source>
          <target state="translated">&lt;code&gt;a&lt;/code&gt; &lt;strong&gt;있어야&lt;/strong&gt; 유효한 될 &lt;a href=&quot;#VkComponentSwizzle&quot;&gt;VkComponentSwizzle의&lt;/a&gt; 값</target>
        </trans-unit>
        <trans-unit id="f13c269704551079584e0212a46d539d8a1915c8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;addressModeU&lt;/code&gt; and &lt;code&gt;addressModeV&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; each be either &lt;code&gt;VK_SAMPLER_ADDRESS_MODE_CLAMP_TO_EDGE&lt;/code&gt; or &lt;code&gt;VK_SAMPLER_ADDRESS_MODE_CLAMP_TO_BORDER&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;addressModeU&lt;/code&gt; 및 &lt;code&gt;addressModeV&lt;/code&gt; &lt;strong&gt;는&lt;/strong&gt; 각각 &lt;code&gt;VK_SAMPLER_ADDRESS_MODE_CLAMP_TO_EDGE&lt;/code&gt; 또는 &lt;code&gt;VK_SAMPLER_ADDRESS_MODE_CLAMP_TO_BORDER&lt;/code&gt; 중 하나 &lt;strong&gt;여야합니다&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="fa45454ff1ab2633b3bd05143c5f7da895cab3a3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;addressModeU&lt;/code&gt; is a &lt;a href=&quot;#VkSamplerAddressMode&quot;&gt;VkSamplerAddressMode&lt;/a&gt; value specifying the addressing mode for outside [0..1] range for U coordinate.</source>
          <target state="translated">&lt;code&gt;addressModeU&lt;/code&gt; 는 U 좌표에 대한 [0..1] 범위 밖의 주소 지정 모드를 지정 하는 &lt;a href=&quot;#VkSamplerAddressMode&quot;&gt;VkSamplerAddressMode&lt;/a&gt; 값입니다.</target>
        </trans-unit>
        <trans-unit id="60cf55021925348e52f73700d822f73407a71d1a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;addressModeU&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be a valid &lt;a href=&quot;#VkSamplerAddressMode&quot;&gt;VkSamplerAddressMode&lt;/a&gt; value</source>
          <target state="translated">&lt;code&gt;addressModeU&lt;/code&gt; &lt;strong&gt;는&lt;/strong&gt; 유효한 &lt;a href=&quot;#VkSamplerAddressMode&quot;&gt;VkSamplerAddressMode&lt;/a&gt; 값 이어야 합니다.</target>
        </trans-unit>
        <trans-unit id="08e0a728bcdd2cbf69d823c949aa7367431b9d0b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;addressModeV&lt;/code&gt; is a &lt;a href=&quot;#VkSamplerAddressMode&quot;&gt;VkSamplerAddressMode&lt;/a&gt; value specifying the addressing mode for outside [0..1] range for V coordinate.</source>
          <target state="translated">&lt;code&gt;addressModeV&lt;/code&gt; 는 V 좌표에 대한 [0..1] 범위 밖의 주소 지정 모드를 지정 하는 &lt;a href=&quot;#VkSamplerAddressMode&quot;&gt;VkSamplerAddressMode&lt;/a&gt; 값입니다.</target>
        </trans-unit>
        <trans-unit id="45df039018209836c81ba5e2da8605c311b83a21" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;addressModeV&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be a valid &lt;a href=&quot;#VkSamplerAddressMode&quot;&gt;VkSamplerAddressMode&lt;/a&gt; value</source>
          <target state="translated">&lt;code&gt;addressModeV&lt;/code&gt; &lt;strong&gt;는&lt;/strong&gt; 유효한 &lt;a href=&quot;#VkSamplerAddressMode&quot;&gt;VkSamplerAddressMode&lt;/a&gt; 값 이어야 합니다.</target>
        </trans-unit>
        <trans-unit id="fb89a8cecb091d8aa8879979b5a84f7d414ae11c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;addressModeW&lt;/code&gt; is a &lt;a href=&quot;#VkSamplerAddressMode&quot;&gt;VkSamplerAddressMode&lt;/a&gt; value specifying the addressing mode for outside [0..1] range for W coordinate.</source>
          <target state="translated">&lt;code&gt;addressModeW&lt;/code&gt; 는 W 좌표의 [0..1] 범위 밖의 주소 지정 모드를 지정 하는 &lt;a href=&quot;#VkSamplerAddressMode&quot;&gt;VkSamplerAddressMode&lt;/a&gt; 값입니다.</target>
        </trans-unit>
        <trans-unit id="8ec2753b4078ec23099d4693dd7575b92c8c1b83" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;addressModeW&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be a valid &lt;a href=&quot;#VkSamplerAddressMode&quot;&gt;VkSamplerAddressMode&lt;/a&gt; value</source>
          <target state="translated">&lt;code&gt;addressModeW&lt;/code&gt; &lt;strong&gt;는&lt;/strong&gt; 유효한 &lt;a href=&quot;#VkSamplerAddressMode&quot;&gt;VkSamplerAddressMode&lt;/a&gt; 값 이어야 합니다.</target>
        </trans-unit>
        <trans-unit id="9ac630455643021d265d7d5a0466e058654a3bd4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;alignment&lt;/code&gt; is the alignment, in bytes, of the offset within the allocation &lt;strong&gt;required&lt;/strong&gt; for the resource.</source>
          <target state="translated">&lt;code&gt;alignment&lt;/code&gt; 은 자원에 &lt;strong&gt;필요한&lt;/strong&gt; 할당 내 오프셋의 정렬 (바이트)입니다 .</target>
        </trans-unit>
        <trans-unit id="1d95ef57bfbada0bee6fb2ea52f50e4fd0bd7b8a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;alignment&lt;/code&gt; is the requested alignment of the allocation in bytes and &lt;strong&gt;must&lt;/strong&gt; be a power of two.</source>
          <target state="translated">&lt;code&gt;alignment&lt;/code&gt; 는 할당 된 바이트 단위의 할당 된 정렬 이며 2의 거듭 제곱 &lt;strong&gt;이어야합니다&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="21b4c4c0cdc153eff8ef3072a6b2b770ebcdc3b0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;allocationScope&lt;/code&gt; is a &lt;a href=&quot;#VkSystemAllocationScope&quot;&gt;VkSystemAllocationScope&lt;/a&gt; value specifying the allocation scope of the lifetime of the allocation, as described &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#memory-host-allocation-scope&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;allocationScope&lt;/code&gt; 범위는 &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#memory-host-allocation-scope&quot;&gt;여기에&lt;/a&gt; 설명 된대로 할당 수명의 할당 범위를 지정 하는 &lt;a href=&quot;#VkSystemAllocationScope&quot;&gt;VkSystemAllocationScope&lt;/a&gt; 값 입니다.</target>
        </trans-unit>
        <trans-unit id="c69d282fc58dcb9e9720f89c3e14f3e62f67216f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;allocationSize&lt;/code&gt; is the size of the allocation in bytes</source>
          <target state="translated">&lt;code&gt;allocationSize&lt;/code&gt; 크기는 바이트 단위의 할당 크기입니다.</target>
        </trans-unit>
        <trans-unit id="1b9fe4ce7365348b55faa19323c06cdac76b1975" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;allocationSize&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be greater than &lt;code&gt;0&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;allocationSize&lt;/code&gt; 크기는 &lt;code&gt;0&lt;/code&gt; 보다 커야 &lt;strong&gt;합니다.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="fe2480387bcb0a68a6d2939f82cbe7a7a16e42b0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;allocationSize&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be less than or equal to the amount of memory available to the &lt;code&gt;VkMemoryHeap&lt;/code&gt; specified by &lt;code&gt;memoryTypeIndex&lt;/code&gt; and the calling command&amp;rsquo;s &lt;code&gt;VkDevice&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;allocationSize&lt;/code&gt; 가&lt;strong&gt;있어야합니다&lt;/strong&gt; 보다 작거나 사용할 수있는 메모리의 양을 동일 &lt;code&gt;VkMemoryHeap&lt;/code&gt; 에 의해 지정된 &lt;code&gt;memoryTypeIndex&lt;/code&gt; 및 호출 명령의 &lt;code&gt;VkDevice&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c3e8b51f43d2f8f4fdd9b39de994f14efd11c6b2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;allocationType&lt;/code&gt; is a &lt;a href=&quot;#VkInternalAllocationType&quot;&gt;VkInternalAllocationType&lt;/a&gt; value specifying the requested type of an allocation.</source>
          <target state="translated">&lt;code&gt;allocationType&lt;/code&gt; 는 A는 &lt;a href=&quot;#VkInternalAllocationType&quot;&gt;VkInternalAllocationType의&lt;/a&gt; 할당 요청의 유형을 지정하는 값.</target>
        </trans-unit>
        <trans-unit id="4192cbc7176ab7bc70ffbcb95df691b01e9a2570" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;alphaBlendOp&lt;/code&gt; selects which blend operation is use to calculate the alpha values to write to the color attachment.</source>
          <target state="translated">&lt;code&gt;alphaBlendOp&lt;/code&gt; 는 색상 첨부 파일에 쓸 알파 값을 계산하는 데 사용할 혼합 작업을 선택합니다.</target>
        </trans-unit>
        <trans-unit id="9a068c2f30854a02959082b7d6761043eabf48f1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;alphaBlendOp&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be a valid &lt;a href=&quot;#VkBlendOp&quot;&gt;VkBlendOp&lt;/a&gt; value</source>
          <target state="translated">&lt;code&gt;alphaBlendOp&lt;/code&gt; &lt;strong&gt;는&lt;/strong&gt; 유효한 &lt;a href=&quot;#VkBlendOp&quot;&gt;VkBlendOp&lt;/a&gt; 값 이어야 합니다.</target>
        </trans-unit>
        <trans-unit id="3253b4fe2c2cabe44fae579828d74b9a6f0d83fd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;alphaToCoverageEnable&lt;/code&gt; controls whether a temporary coverage value is generated based on the alpha component of the fragment&amp;rsquo;s first color output as specified in the &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#fragops-covg&quot;&gt;Multisample Coverage&lt;/a&gt; section.</source>
          <target state="translated">&lt;code&gt;alphaToCoverageEnable&lt;/code&gt; 은 &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#fragops-covg&quot;&gt;멀티 샘플 적용 범위&lt;/a&gt; 섹션에 지정된 조각의 첫 번째 색상 출력의 알파 구성 요소를 기반으로 임시 적용 범위 값을 생성할지 여부를 제어합니다 .</target>
        </trans-unit>
        <trans-unit id="92f26297c89607d9c9148130b16e2828593bcae1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;alphaToOne&lt;/code&gt; indicates whether the implementation is able to replace the alpha value of the color fragment output from the fragment shader with the maximum representable alpha value for fixed-point colors or 1.0 for floating-point colors. If this feature is not enabled, then the &lt;code&gt;alphaToOneEnable&lt;/code&gt; member of the &lt;code&gt;VkPipelineMultisampleStateCreateInfo&lt;/code&gt; structure &lt;strong&gt;must&lt;/strong&gt; be set to &lt;code&gt;VK_FALSE&lt;/code&gt;. Otherwise setting &lt;code&gt;alphaToOneEnable&lt;/code&gt; to &lt;code&gt;VK_TRUE&lt;/code&gt; will enable alpha-to-one behavior.</source>
          <target state="translated">&lt;code&gt;alphaToOne&lt;/code&gt; 은 구현에서 조각 셰이더에서 출력되는 색상 조각의 알파 값을 고정 소수점 색의 경우 최대 표현 가능한 알파 값으로, 부동 소수점 색의 경우 1.0으로 대체 할 수 있는지 여부를 나타냅니다. 이 기능이 활성화되어 있지 않으면 &lt;code&gt;alphaToOneEnable&lt;/code&gt; 의 의 구성원 &lt;code&gt;VkPipelineMultisampleStateCreateInfo&lt;/code&gt; 의 구조는 &lt;strong&gt;해야한다&lt;/strong&gt; 로 설정 &lt;code&gt;VK_FALSE&lt;/code&gt; . 그렇지 않으면 &lt;code&gt;alphaToOneEnable&lt;/code&gt; 을 &lt;code&gt;VK_TRUE&lt;/code&gt; 로 설정하면 알파 대 일 동작이 활성화됩니다.</target>
        </trans-unit>
        <trans-unit id="0bc826f70619d8799254dd36121eaeca0b91162d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;alphaToOneEnable&lt;/code&gt; controls whether the alpha component of the fragment&amp;rsquo;s first color output is replaced with one as described in &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#fragops-covg&quot;&gt;Multisample Coverage&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;alphaToOneEnable&lt;/code&gt; 은 조각의 첫 번째 색상 출력의 알파 구성 요소가 &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#fragops-covg&quot;&gt;Multisample Coverage에&lt;/a&gt; 설명 된대로 대체되는지 여부를 제어합니다 .</target>
        </trans-unit>
        <trans-unit id="91e5dbaa84202527c3c53783735245555b8437bd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;anisotropyEnable&lt;/code&gt; is &lt;code&gt;VK_TRUE&lt;/code&gt; to enable anisotropic filtering, as described in the &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#textures-texel-anisotropic-filtering&quot;&gt;Texel Anisotropic Filtering&lt;/a&gt; section, or &lt;code&gt;VK_FALSE&lt;/code&gt; otherwise.</source>
          <target state="translated">&lt;code&gt;anisotropyEnable&lt;/code&gt; &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#textures-texel-anisotropic-filtering&quot;&gt;Texel Anisotropic Filtering&lt;/a&gt; 섹션에 설명 된대로 anisotropyEnable 은 &lt;code&gt;VK_TRUE&lt;/code&gt; 이며, 그렇지 않으면 &lt;code&gt;VK_FALSE&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="4d2208cedc63b437f8314696219929b72e5cfce9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;anisotropyEnable&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be &lt;code&gt;VK_FALSE&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;anisotropyEnable&lt;/code&gt; &lt;strong&gt;은 &lt;/strong&gt; &lt;code&gt;VK_FALSE&lt;/code&gt; &lt;strong&gt;여야&lt;/strong&gt; 합니다 .</target>
        </trans-unit>
        <trans-unit id="6cef4ba761fbccf07251ca72ceba3b456f8462b9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;apiVersion&lt;/code&gt; is the version of Vulkan supported by the device, encoded as described in the &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#fundamentals-versionnum&quot;&gt;API Version Numbers and Semantics&lt;/a&gt; section.</source>
          <target state="translated">&lt;code&gt;apiVersion&lt;/code&gt; 은 장치에서 지원하는 Vulkan 버전이며 &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#fundamentals-versionnum&quot;&gt;API 버전 번호 및 의미&lt;/a&gt; 섹션에 설명 된대로 인코딩됩니다 .</target>
        </trans-unit>
        <trans-unit id="ff32abd94ce7ce5d8b825b21d1c07c1f4a6a2cd8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;apiVersion&lt;/code&gt; is the version of the Vulkan API against which the application expects to run, encoded as described in the &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#fundamentals-versionnum&quot;&gt;API Version Numbers and Semantics&lt;/a&gt; section. If &lt;code&gt;apiVersion&lt;/code&gt; is 0 the implementation &lt;strong&gt;must&lt;/strong&gt; ignore it, otherwise if the implementation does not support the requested &lt;code&gt;apiVersion&lt;/code&gt;, or an effective substitute for &lt;code&gt;apiVersion&lt;/code&gt;, it &lt;strong&gt;must&lt;/strong&gt; return &lt;code&gt;VK_ERROR_INCOMPATIBLE_DRIVER&lt;/code&gt;. The patch version number specified in &lt;code&gt;apiVersion&lt;/code&gt; is ignored when creating an instance object. Only the major and minor versions of the instance &lt;strong&gt;must&lt;/strong&gt; match those requested in &lt;code&gt;apiVersion&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;apiVersion&lt;/code&gt; 은 &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#fundamentals-versionnum&quot;&gt;API 버전 번호 및 시맨틱&lt;/a&gt; 섹션에 설명 된대로 애플리케이션이 실행될 것으로 예상되는 Vulkan API 버전입니다 . 경우 &lt;code&gt;apiVersion&lt;/code&gt; 가 0 구현 &lt;strong&gt;해야한다&lt;/strong&gt; 구현이 요청 된 지원하지 않는 다른 경우, 그것을 무시 &lt;code&gt;apiVersion&lt;/code&gt; , 또는에 대한 효과적인 대체 &lt;code&gt;apiVersion&lt;/code&gt; 를 , 그것은 &lt;strong&gt;해야한다&lt;/strong&gt; 반환 &lt;code&gt;VK_ERROR_INCOMPATIBLE_DRIVER&lt;/code&gt; 을 . 인스턴스 객체를 만들 때 &lt;code&gt;apiVersion&lt;/code&gt; 에 지정된 패치 버전 번호 는 무시됩니다. 인스턴스의 메이저 버전과 마이너 버전 만 &lt;code&gt;apiVersion&lt;/code&gt; 에서 요청 된 버전과 일치 &lt;strong&gt;해야합니다&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="dbaaa56eff361d348f5777e1be73c1e376a9f496" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;applicationVersion&lt;/code&gt; is an unsigned integer variable containing the developer-supplied version number of the application.</source>
          <target state="translated">&lt;code&gt;applicationVersion&lt;/code&gt; 은 개발자가 제공 한 응용 프로그램의 버전 번호를 포함하는 부호없는 정수 변수입니다.</target>
        </trans-unit>
        <trans-unit id="40b601c803dfa5d95c27032dcdda023a37baf224" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;arrayLayer&lt;/code&gt; selects the array layer.</source>
          <target state="translated">&lt;code&gt;arrayLayer&lt;/code&gt; 는 배열 레이어를 선택합니다.</target>
        </trans-unit>
        <trans-unit id="2e3e328291314fe7e1b4110acd0fcf02c8a6e46d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;arrayLayer&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be less than the &lt;code&gt;arrayLayers&lt;/code&gt; specified in &lt;a href=&quot;#VkImageCreateInfo&quot;&gt;VkImageCreateInfo&lt;/a&gt; when the image was created</source>
          <target state="translated">&lt;code&gt;arrayLayer&lt;/code&gt; 이&lt;strong&gt;있어야합니다&lt;/strong&gt; 미만 &lt;code&gt;arrayLayers&lt;/code&gt; 에 지정된 &lt;a href=&quot;#VkImageCreateInfo&quot;&gt;VkImageCreateInfo&lt;/a&gt; 이미지를 만들 때</target>
        </trans-unit>
        <trans-unit id="6497e47219d4ce740746d1d25f2a85a8b97219ea" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;arrayLayers&lt;/code&gt; &amp;ge; 1</source>
          <target state="translated">&lt;code&gt;arrayLayers&lt;/code&gt; &amp;ge; 1</target>
        </trans-unit>
        <trans-unit id="bfac79367a175c72d077e59089e3925227791895" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;arrayLayers&lt;/code&gt; &amp;ge; 6</source>
          <target state="translated">&lt;code&gt;arrayLayers&lt;/code&gt; &amp;ge; 6</target>
        </trans-unit>
        <trans-unit id="cf1ae49a48246586f570406545d196536405bece" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;arrayLayers&lt;/code&gt; &amp;ge; 6 &amp;times; &lt;em&gt;N&lt;/em&gt;</source>
          <target state="translated">&lt;code&gt;arrayLayers&lt;/code&gt; &amp;ge; 6 &amp;times; &lt;em&gt;N&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="f7371027d4a8beb2c2d98ce8558cc5d455fdb34a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;arrayLayers&lt;/code&gt; = 1</source>
          <target state="translated">&lt;code&gt;arrayLayers&lt;/code&gt; = 1</target>
        </trans-unit>
        <trans-unit id="72b9ed02b1d985a819b2b5ae39d6d665788bbcce" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;arrayLayers&lt;/code&gt; = ci.&lt;code&gt;arrayLayers&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;arrayLayers&lt;/code&gt; = ci. &lt;code&gt;arrayLayers&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="20816b04074088d2bad93d171d463877f75b4f34" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;arrayLayers&lt;/code&gt; is 1</source>
          <target state="translated">&lt;code&gt;arrayLayers&lt;/code&gt; 는 1</target>
        </trans-unit>
        <trans-unit id="2be53258cd8ab7ec84e6b048be2c74378898dae7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;arrayLayers&lt;/code&gt; is the number of layers in the image.</source>
          <target state="translated">&lt;code&gt;arrayLayers&lt;/code&gt; 는 이미지의 레이어 수입니다.</target>
        </trans-unit>
        <trans-unit id="c2cc3e6420eaca7af313a68c2cf154a7a97229cf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;arrayLayers&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be greater than &lt;code&gt;0&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;arrayLayers&lt;/code&gt; &lt;strong&gt;는 &lt;/strong&gt; &lt;code&gt;0&lt;/code&gt; 보다 커야 &lt;strong&gt;합니다.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f52e3138aaaad6550d65e8c0262ff08f8de70163" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;arrayLayers&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be less than or equal to &lt;code&gt;VkImageFormatProperties&lt;/code&gt;::&lt;code&gt;maxArrayLayers&lt;/code&gt; (as returned by &lt;code&gt;vkGetPhysicalDeviceImageFormatProperties&lt;/code&gt; with &lt;code&gt;format&lt;/code&gt;, &lt;code&gt;imageType&lt;/code&gt;, &lt;code&gt;tiling&lt;/code&gt;, &lt;code&gt;usage&lt;/code&gt;, and &lt;code&gt;flags&lt;/code&gt; equal to those in this structure)</source>
          <target state="translated">&lt;code&gt;arrayLayers&lt;/code&gt; 는&lt;strong&gt;해야&lt;/strong&gt; 미만이거나 동일 &lt;code&gt;VkImageFormatProperties&lt;/code&gt; :: &lt;code&gt;maxArrayLayers&lt;/code&gt; (의해 반환 &lt;code&gt;vkGetPhysicalDeviceImageFormatProperties&lt;/code&gt; 와 &lt;code&gt;format&lt;/code&gt; , &lt;code&gt;imageType&lt;/code&gt; , &lt;code&gt;tiling&lt;/code&gt; , &lt;code&gt;usage&lt;/code&gt; , 및 &lt;code&gt;flags&lt;/code&gt; 이 구조에서와 같음)</target>
        </trans-unit>
        <trans-unit id="b71df0efb302b928fcdd8816c12dbde4a9755302" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;arrayPitch&lt;/code&gt; describes the number of bytes between each array layer of an image.</source>
          <target state="translated">&lt;code&gt;arrayPitch&lt;/code&gt; 는 이미지의 각 배열 레이어 사이의 바이트 수를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="573e67c4f56f9909fd1a885a4393e7f4d783686a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;arrayPitch&lt;/code&gt; is undefined for images that were not created as arrays. &lt;code&gt;depthPitch&lt;/code&gt; is defined only for 3D images.</source>
          <target state="translated">&lt;code&gt;arrayPitch&lt;/code&gt; 배열로 생성되지 않은 이미지에 대해서는 arrayPitch 가 정의되지 않습니다. &lt;code&gt;depthPitch&lt;/code&gt; 는 3D 이미지에만 정의됩니다.</target>
        </trans-unit>
        <trans-unit id="fd6761bb18985538b8b7cd1228eb6cd70309bc4f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;aspectMask&lt;/code&gt; is a &lt;a href=&quot;#VkImageAspectFlags&quot;&gt;VkImageAspectFlags&lt;/a&gt; selecting the image &lt;em&gt;aspect&lt;/em&gt;.</source>
          <target state="translated">&lt;code&gt;aspectMask&lt;/code&gt; 는 A는 &lt;a href=&quot;#VkImageAspectFlags&quot;&gt;VkImageAspectFlags&lt;/a&gt; 화상 선택 &lt;em&gt;측면&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="baed1a231345aa466fb508fd5123918b6184a18a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;aspectMask&lt;/code&gt; is a bitmask &lt;a href=&quot;#VkImageAspectFlagBits&quot;&gt;VkImageAspectFlagBits&lt;/a&gt; specifying which aspects of the image the properties apply to.</source>
          <target state="translated">&lt;code&gt;aspectMask&lt;/code&gt; 는 속성이 적용되는 이미지의 측면을 지정 하는 비트 마스크 &lt;a href=&quot;#VkImageAspectFlagBits&quot;&gt;VkImageAspectFlagBits&lt;/a&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="8f52742a39758e974076aea1a504198389e8821a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;aspectMask&lt;/code&gt; is a bitmask of &lt;a href=&quot;#VkImageAspectFlagBits&quot;&gt;VkImageAspectFlagBits&lt;/a&gt; specifying which aspect(s) of the image are included in the view.</source>
          <target state="translated">&lt;code&gt;aspectMask&lt;/code&gt; 는 VkImageAspectFlagBits 의 비트 마스크로 , 이미지의 어떤 측면이 뷰에 포함 &lt;a href=&quot;#VkImageAspectFlagBits&quot;&gt;되는지&lt;/a&gt; 지정합니다.</target>
        </trans-unit>
        <trans-unit id="9712e58a2c1da2eda7b23fea253962e6273b5e41" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;aspectMask&lt;/code&gt; is a combination of &lt;a href=&quot;#VkImageAspectFlagBits&quot;&gt;VkImageAspectFlagBits&lt;/a&gt;, selecting the color, depth and/or stencil aspects to be copied.</source>
          <target state="translated">&lt;code&gt;aspectMask&lt;/code&gt; 는 VkImageAspectFlagBits 의 조합으로 &lt;a href=&quot;#VkImageAspectFlagBits&quot;&gt;복사&lt;/a&gt; 할 색상, 깊이 및 / 또는 스텐실 측면을 선택합니다.</target>
        </trans-unit>
        <trans-unit id="f15c669b44f4cec95538d47157bc90f3c429e1fb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;aspectMask&lt;/code&gt; is a mask selecting the color, depth and/or stencil aspects of the attachment to be cleared. &lt;code&gt;aspectMask&lt;/code&gt;&lt;strong&gt;can&lt;/strong&gt; include &lt;code&gt;VK_IMAGE_ASPECT_COLOR_BIT&lt;/code&gt; for color attachments, &lt;code&gt;VK_IMAGE_ASPECT_DEPTH_BIT&lt;/code&gt; for depth/stencil attachments with a depth component, and &lt;code&gt;VK_IMAGE_ASPECT_STENCIL_BIT&lt;/code&gt; for depth/stencil attachments with a stencil component. If the subpass&amp;rsquo;s depth/stencil attachment is &lt;code&gt;VK_ATTACHMENT_UNUSED&lt;/code&gt;, then the clear has no effect.</source>
          <target state="translated">&lt;code&gt;aspectMask&lt;/code&gt; 는 제거 할 첨부 파일의 색상, 깊이 및 / 또는 스텐실 측면을 선택하는 마스크입니다. &lt;code&gt;aspectMask&lt;/code&gt; 가&lt;strong&gt;있다&lt;/strong&gt; 포함 &lt;code&gt;VK_IMAGE_ASPECT_COLOR_BIT&lt;/code&gt; 컬러 첨부, &lt;code&gt;VK_IMAGE_ASPECT_DEPTH_BIT&lt;/code&gt; 깊이 성분과 깊이 / 스텐실 첨부 한 &lt;code&gt;VK_IMAGE_ASPECT_STENCIL_BIT&lt;/code&gt; 스텐실 성분과 깊이 / 스텐실 첨부한다. 서브 패스의 깊이 / 스텐실 부착물이 &lt;code&gt;VK_ATTACHMENT_UNUSED&lt;/code&gt; 이면 클리어가 적용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="d8c2924c45becf0f35eeeae9d1c56f6dffce2f11" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;aspectMask&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be a valid combination of &lt;a href=&quot;#VkImageAspectFlagBits&quot;&gt;VkImageAspectFlagBits&lt;/a&gt; values</source>
          <target state="translated">&lt;code&gt;aspectMask&lt;/code&gt; &lt;strong&gt;는 &lt;/strong&gt;&lt;a href=&quot;#VkImageAspectFlagBits&quot;&gt;VkImageAspectFlagBits&lt;/a&gt; 값 의 유효한 조합 이어야 합니다.</target>
        </trans-unit>
        <trans-unit id="eb697737976bc686003afbff5e93de15b0c822be" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;aspectMask&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be only &lt;code&gt;VK_IMAGE_ASPECT_COLOR_BIT&lt;/code&gt;, &lt;code&gt;VK_IMAGE_ASPECT_DEPTH_BIT&lt;/code&gt; or &lt;code&gt;VK_IMAGE_ASPECT_STENCIL_BIT&lt;/code&gt; if &lt;code&gt;format&lt;/code&gt; is a color, depth-only or stencil-only format, respectively. If using a depth/stencil format with both depth and stencil components, &lt;code&gt;aspectMask&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; include at least one of &lt;code&gt;VK_IMAGE_ASPECT_DEPTH_BIT&lt;/code&gt; and &lt;code&gt;VK_IMAGE_ASPECT_STENCIL_BIT&lt;/code&gt;, and &lt;strong&gt;can&lt;/strong&gt; include both.</source>
          <target state="translated">&lt;code&gt;aspectMask&lt;/code&gt; 가&lt;strong&gt;있어야&lt;/strong&gt; 만 할 &lt;code&gt;VK_IMAGE_ASPECT_COLOR_BIT&lt;/code&gt; , &lt;code&gt;VK_IMAGE_ASPECT_DEPTH_BIT&lt;/code&gt; 또는 &lt;code&gt;VK_IMAGE_ASPECT_STENCIL_BIT&lt;/code&gt; 경우 &lt;code&gt;format&lt;/code&gt; 각각 색상, 깊이 전용 또는 스텐실 전용 형식입니다. 깊이와 스텐실 구성 요소를 모두 깊이 / 스텐실 형식을 사용하는 경우, &lt;code&gt;aspectMask&lt;/code&gt; 이&lt;strong&gt;있어야합니다&lt;/strong&gt; 적어도 하나를 포함 &lt;code&gt;VK_IMAGE_ASPECT_DEPTH_BIT&lt;/code&gt; 및 &lt;code&gt;VK_IMAGE_ASPECT_STENCIL_BIT&lt;/code&gt; , 그리고 &lt;strong&gt;수&lt;/strong&gt; 를 모두 포함한다.</target>
        </trans-unit>
        <trans-unit id="400ef372c416a524dc02d10508cf3a1dc77d4adf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;aspectMask&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; not be &lt;code&gt;0&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;aspectMask&lt;/code&gt; 는&lt;strong&gt;있어야&lt;/strong&gt; 하지 &lt;code&gt;0&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="81c809546fc1b761d5b5f3363d455afeae72552a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;aspectMask&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; not contain &lt;code&gt;VK_IMAGE_ASPECT_METADATA_BIT&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;aspectMask&lt;/code&gt; &lt;strong&gt;는 &lt;/strong&gt;VK_IMAGE_ASPECT_METADATA_BIT &lt;strong&gt;를&lt;/strong&gt; 포함하지 않아야합니다 &lt;code&gt;VK_IMAGE_ASPECT_METADATA_BIT&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1b9ee6c5f65be7ebfae3dd99a8da0de57f453b71" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;aspectMask&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; not include &lt;code&gt;VK_IMAGE_ASPECT_METADATA_BIT&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;aspectMask&lt;/code&gt; 이&lt;strong&gt;있어야&lt;/strong&gt; 포함되지 &lt;code&gt;VK_IMAGE_ASPECT_METADATA_BIT&lt;/code&gt; 을</target>
        </trans-unit>
        <trans-unit id="78610a7729d27a86e46e1353129115648dd3e21d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;attachment&lt;/code&gt; is the index of the attachment of the render pass, and corresponds to the index of the corresponding element in the &lt;code&gt;pAttachments&lt;/code&gt; array of the &lt;code&gt;VkRenderPassCreateInfo&lt;/code&gt; structure. If any color or depth/stencil attachments are &lt;code&gt;VK_ATTACHMENT_UNUSED&lt;/code&gt;, then no writes occur for those attachments.</source>
          <target state="translated">&lt;code&gt;attachment&lt;/code&gt; 는 렌더 패스의 첨부 색인이며 &lt;code&gt;VkRenderPassCreateInfo&lt;/code&gt; 구조 의 &lt;code&gt;pAttachments&lt;/code&gt; 배열에있는 해당 요소의 색인에 해당 합니다. 색상 또는 깊이 / 스텐실 첨부 파일이 &lt;code&gt;VK_ATTACHMENT_UNUSED&lt;/code&gt; 인 경우 해당 첨부 파일에 대한 쓰기가 발생하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="a3389064fabd9fd56f356ade74781c7a11714b9b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;attachmentCount&lt;/code&gt; is the number of &lt;code&gt;VkPipelineColorBlendAttachmentState&lt;/code&gt; elements in &lt;code&gt;pAttachments&lt;/code&gt;. This value &lt;strong&gt;must&lt;/strong&gt; equal the &lt;code&gt;colorAttachmentCount&lt;/code&gt; for the subpass in which this pipeline is used.</source>
          <target state="translated">&lt;code&gt;attachmentCount&lt;/code&gt; 는 수있다 &lt;code&gt;VkPipelineColorBlendAttachmentState&lt;/code&gt; 의 요소 &lt;code&gt;pAttachments&lt;/code&gt; . 이 값 &lt;strong&gt;은&lt;/strong&gt; 이 파이프 라인이 사용되는 서브 패스 의 &lt;code&gt;colorAttachmentCount&lt;/code&gt; 와 같아야합니다 .</target>
        </trans-unit>
        <trans-unit id="33d6f44c5168a4782d90d5ec5f5910be1d668329" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;attachmentCount&lt;/code&gt; is the number of attachments used by this render pass, or zero indicating no attachments. Attachments are referred to by zero-based indices in the range [0,&lt;code&gt;attachmentCount&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;attachmentCount&lt;/code&gt; 는이 렌더 패스에서 사용되는 첨부 파일 수이거나 첨부 파일이 없음을 나타내는 0입니다. 첨부는 [0, &lt;code&gt;attachmentCount&lt;/code&gt; ) 범위의 0부터 시작하는 인덱스로 참조됩니다.</target>
        </trans-unit>
        <trans-unit id="02ea5db5f80a379dc7c67a5678bb8bbc2b384b6b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;attachmentCount&lt;/code&gt; is the number of attachments.</source>
          <target state="translated">&lt;code&gt;attachmentCount&lt;/code&gt; 는 첨부 파일 수입니다.</target>
        </trans-unit>
        <trans-unit id="f40b8ac63d96d1ab6ada62ec5b61122669a24d95" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;attachmentCount&lt;/code&gt; is the number of entries in the &lt;code&gt;pAttachments&lt;/code&gt; array.</source>
          <target state="translated">&lt;code&gt;attachmentCount&lt;/code&gt; 는 &lt;code&gt;pAttachments&lt;/code&gt; 배열 의 항목 수입니다 .</target>
        </trans-unit>
        <trans-unit id="059dd5ff38ebc897771e3a9acf8905ac5f45e0c6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;attachmentCount&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be equal to the attachment count specified in &lt;code&gt;renderPass&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;attachmentCount&lt;/code&gt; &lt;strong&gt;는 &lt;/strong&gt; &lt;code&gt;renderPass&lt;/code&gt; 에 지정된 첨부 파일 수와 같아야합니다.</target>
        </trans-unit>
        <trans-unit id="ea5fc82029e999192454ba7194ba6ad56bcb01cc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;attachmentCount&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be greater than &lt;code&gt;0&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;attachmentCount&lt;/code&gt; &lt;strong&gt;는 &lt;/strong&gt; &lt;code&gt;0&lt;/code&gt; 보다 커야 &lt;strong&gt;합니다.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="063dd30c44724bd526d76b8c5f9a3a35a0c75184" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;b&lt;/code&gt; is a &lt;a href=&quot;#VkComponentSwizzle&quot;&gt;VkComponentSwizzle&lt;/a&gt; specifying the component value placed in the B component of the output vector.</source>
          <target state="translated">&lt;code&gt;b&lt;/code&gt; 는 출력 벡터의 B 구성 요소에 배치 된 구성 요소 값을 지정 하는 &lt;a href=&quot;#VkComponentSwizzle&quot;&gt;VkComponentSwizzle&lt;/a&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="30bebe300d511d6783c3c28a6bc7a87f32815074" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;b&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be a valid &lt;a href=&quot;#VkComponentSwizzle&quot;&gt;VkComponentSwizzle&lt;/a&gt; value</source>
          <target state="translated">&lt;code&gt;b&lt;/code&gt; &lt;strong&gt;는&lt;/strong&gt; 유효한 &lt;a href=&quot;#VkComponentSwizzle&quot;&gt;VkComponentSwizzle&lt;/a&gt; 값 이어야 합니다</target>
        </trans-unit>
        <trans-unit id="6a5b269e1aca27f469709b3b20616e6836bdbc91" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;back&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be a valid &lt;code&gt;VkStencilOpState&lt;/code&gt; structure</source>
          <target state="translated">&lt;code&gt;back&lt;/code&gt; &lt;strong&gt;은&lt;/strong&gt; 유효한 &lt;code&gt;VkStencilOpState&lt;/code&gt; 구조 &lt;strong&gt;여야&lt;/strong&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="96aa15ea709fd394c6fb0c8419c5c76447f816c2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;baseArrayLayer&lt;/code&gt; &amp;ge; 0</source>
          <target state="translated">&lt;code&gt;baseArrayLayer&lt;/code&gt; &amp;ge; 0</target>
        </trans-unit>
        <trans-unit id="d74222545f4f97aae0182940265458d8121f5720" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;baseArrayLayer&lt;/code&gt; = 0</source>
          <target state="translated">&lt;code&gt;baseArrayLayer&lt;/code&gt; = 0</target>
        </trans-unit>
        <trans-unit id="e0c8abca5436bb4abb1754672bda2a2892d511fa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;baseArrayLayer&lt;/code&gt; and &lt;code&gt;layerCount&lt;/code&gt; are members of the &lt;code&gt;subresourceRange&lt;/code&gt; member.</source>
          <target state="translated">&lt;code&gt;baseArrayLayer&lt;/code&gt; 및 &lt;code&gt;layerCount&lt;/code&gt; 는 &lt;code&gt;subresourceRange&lt;/code&gt; 멤버의 멤버입니다.</target>
        </trans-unit>
        <trans-unit id="572b020f9bdd993a67d7fd2d966bbf07db5d5bfb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;baseArrayLayer&lt;/code&gt; and &lt;code&gt;layerCount&lt;/code&gt; are the starting layer and number of layers to copy.</source>
          <target state="translated">&lt;code&gt;baseArrayLayer&lt;/code&gt; 및 &lt;code&gt;layerCount&lt;/code&gt; 는 복사 할 시작 레이어 및 레이어 수입니다.</target>
        </trans-unit>
        <trans-unit id="5d0e65f56d09b23d531db10cd730bbe48e602133" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;baseArrayLayer&lt;/code&gt; is the first array layer accessible to the view.</source>
          <target state="translated">&lt;code&gt;baseArrayLayer&lt;/code&gt; 는 뷰에 액세스 할 수있는 첫 번째 배열 레이어입니다.</target>
        </trans-unit>
        <trans-unit id="3302b2a7a9e149a661399f228c75a5516afc69c0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;baseArrayLayer&lt;/code&gt; is the first layer to be cleared.</source>
          <target state="translated">&lt;code&gt;baseArrayLayer&lt;/code&gt; 는 첫 번째로 지워지 는 레이어입니다.</target>
        </trans-unit>
        <trans-unit id="4826b9527d39bfb8ad2fabe683adc0cc89a806ae" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;baseMipLevel&lt;/code&gt; is the first mipmap level accessible to the view.</source>
          <target state="translated">&lt;code&gt;baseMipLevel&lt;/code&gt; 은 뷰에 액세스 할 수있는 첫 번째 밉맵 레벨입니다.</target>
        </trans-unit>
        <trans-unit id="3c3ceea6f328a15ca7b205e1cc3c7fed81884ab2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;basePipelineHandle&lt;/code&gt; is a pipeline to derive from</source>
          <target state="translated">&lt;code&gt;basePipelineHandle&lt;/code&gt; 은 파이프 라인에서 파생되는 파이프 라인입니다.</target>
        </trans-unit>
        <trans-unit id="8d6dacc93ca73157b6e671521c157cc7a41903be" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;basePipelineHandle&lt;/code&gt; is a pipeline to derive from.</source>
          <target state="translated">&lt;code&gt;basePipelineHandle&lt;/code&gt; 은 파생되는 파이프 라인입니다.</target>
        </trans-unit>
        <trans-unit id="91a642ebfbf67d70a607157849c854eb1fdd30db" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;basePipelineIndex&lt;/code&gt; is an index into the &lt;code&gt;pCreateInfos&lt;/code&gt; parameter to use as a pipeline to derive from</source>
          <target state="translated">&lt;code&gt;basePipelineIndex&lt;/code&gt; 는 &lt;code&gt;pCreateInfos&lt;/code&gt; 매개 변수에 대한 색인으로, 파이프 라인으로 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="4c09f1fdbb399577a98b17298933fcebc50c9b47" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;basePipelineIndex&lt;/code&gt; is an index into the &lt;code&gt;pCreateInfos&lt;/code&gt; parameter to use as a pipeline to derive from.</source>
          <target state="translated">&lt;code&gt;basePipelineIndex&lt;/code&gt; 는 &lt;code&gt;pCreateInfos&lt;/code&gt; 매개 변수에 대한 인덱스로, 파생 파이프 라인으로 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="bac7697326084d1207ef659959ed88b37b829c26" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;bindCount&lt;/code&gt; is the number of &lt;code&gt;VkSparseImageMemoryBind&lt;/code&gt; structures in pBinds array</source>
          <target state="translated">&lt;code&gt;bindCount&lt;/code&gt; 는 pBinds 배열 의 &lt;code&gt;VkSparseImageMemoryBind&lt;/code&gt; 구조 수입니다.</target>
        </trans-unit>
        <trans-unit id="17715dd25d09baff4ad7620e9c375ff0a7f6dd03" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;bindCount&lt;/code&gt; is the number of &lt;code&gt;VkSparseMemoryBind&lt;/code&gt; structures in the &lt;code&gt;pBinds&lt;/code&gt; array.</source>
          <target state="translated">&lt;code&gt;bindCount&lt;/code&gt; 는 &lt;code&gt;pBinds&lt;/code&gt; 배열 의 &lt;code&gt;VkSparseMemoryBind&lt;/code&gt; 구조 수입니다 .</target>
        </trans-unit>
        <trans-unit id="5fe0160206100957926751cc0ad947eeb56fc65e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;bindCount&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be greater than &lt;code&gt;0&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;bindCount&lt;/code&gt; &lt;strong&gt;는 &lt;/strong&gt; &lt;code&gt;0&lt;/code&gt; 보다 커야 &lt;strong&gt;합니다.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="143a437f92b07ef3239a0723c7deb6da2f1f8fa6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;bindInfoCount&lt;/code&gt; is the number of elements in the &lt;code&gt;pBindInfo&lt;/code&gt; array.</source>
          <target state="translated">&lt;code&gt;bindInfoCount&lt;/code&gt; 는 &lt;code&gt;pBindInfo&lt;/code&gt; 배열 의 요소 수입니다 .</target>
        </trans-unit>
        <trans-unit id="907c4e7ccca06731cfc9425c71a83b36609f48f0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;binding&lt;/code&gt; is the binding number of this entry and corresponds to a resource of the same binding number in the shader stages.</source>
          <target state="translated">&lt;code&gt;binding&lt;/code&gt; 은이 항목의 바인딩 번호이며 셰이더 단계에서 동일한 바인딩 번호의 리소스에 해당합니다.</target>
        </trans-unit>
        <trans-unit id="f8aaac13fd66f03a35822e7ef4d67da486278c38" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;binding&lt;/code&gt; is the binding number that this structure describes.</source>
          <target state="translated">&lt;code&gt;binding&lt;/code&gt; 은이 구조가 설명하는 바인딩 번호입니다.</target>
        </trans-unit>
        <trans-unit id="013e39b09466e2c97f0e42fbf27fe6a4dc242e90" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;binding&lt;/code&gt; is the binding number which this attribute takes its data from.</source>
          <target state="translated">&lt;code&gt;binding&lt;/code&gt; 은이 속성이 데이터를 가져 오는 바인딩 번호입니다.</target>
        </trans-unit>
        <trans-unit id="002f753b1f5fe462209d08d87f91dd8b0d230cb7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;binding&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be less than &lt;code&gt;VkPhysicalDeviceLimits&lt;/code&gt;::&lt;code&gt;maxVertexInputBindings&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;binding&lt;/code&gt; &lt;strong&gt;은 &lt;/strong&gt; &lt;code&gt;VkPhysicalDeviceLimits&lt;/code&gt; 보다 작아야합니다. :: &lt;code&gt;maxVertexInputBindings&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c4a0984bae517457d5f2e4a7837abbf8fa0c603d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;bindingCount&lt;/code&gt; is the number of elements in &lt;code&gt;pBindings&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;bindingCount&lt;/code&gt; 는 &lt;code&gt;pBindings&lt;/code&gt; 의 요소 수입니다 .</target>
        </trans-unit>
        <trans-unit id="47e861c1b607e0a7a1b8099898205fa3596c82ee" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;bindingCount&lt;/code&gt; is the number of vertex input bindings whose state is updated by the command.</source>
          <target state="translated">&lt;code&gt;bindingCount&lt;/code&gt; 는 명령에 의해 상태가 업데이트되는 정점 입력 바인딩 수입니다.</target>
        </trans-unit>
        <trans-unit id="276d6aaba68479e1e9dd0c3a83a94e0bf87f76f4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;bindingCount&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be greater than &lt;code&gt;0&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;bindingCount&lt;/code&gt; &lt;strong&gt;는 &lt;/strong&gt; &lt;code&gt;0&lt;/code&gt; 보다 커야 &lt;strong&gt;합니다.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="018119c25fc5d2a5d1755995902e938ef19d94a0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;blendConstants&lt;/code&gt; is an array of four values specifying the R, G, B, and A components of the blend constant color used in blending, depending on the &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#framebuffer-blendfactors&quot;&gt;blend factor&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;blendConstants&lt;/code&gt; 는 &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#framebuffer-blendfactors&quot;&gt;블렌드 팩터&lt;/a&gt; 에 따라 블렌딩에 사용되는 블렌드 상수 색상의 R, G, B 및 A 구성 요소를 지정하는 4 개의 값으로 구성된 배열입니다 .</target>
        </trans-unit>
        <trans-unit id="677824f0dea911f21d87ccde6574ae8116dbf4de" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;blendConstants&lt;/code&gt; is an array of four values used as the R, G, B, and A components of the blend constant that are used in blending, depending on the &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#framebuffer-blendfactors&quot;&gt;blend factor&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;blendConstants&lt;/code&gt; 는 &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#framebuffer-blendfactors&quot;&gt;블렌드 팩터&lt;/a&gt; 에 따라 블렌딩에 사용되는 블렌드 상수의 R, G, B 및 A 구성 요소로 사용되는 네 가지 값의 배열입니다 .</target>
        </trans-unit>
        <trans-unit id="b68c0372e5e8835ced79cd2346209e886bc618a0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;blendEnable&lt;/code&gt; controls whether blending is enabled for the corresponding color attachment. If blending is not enabled, the source fragment&amp;rsquo;s color for that attachment is passed through unmodified.</source>
          <target state="translated">&lt;code&gt;blendEnable&lt;/code&gt; 은 해당 색상 첨부 파일에 대해 혼합을 사용할지 여부를 제어합니다. 블렌딩을 사용하지 않으면 해당 첨부 파일의 소스 조각 색상이 수정되지 않은 상태로 전달됩니다.</target>
        </trans-unit>
        <trans-unit id="1f1cf00ae7bde83322e7e4f221a584fa84cf0b9b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;borderColor&lt;/code&gt; is a &lt;a href=&quot;#VkBorderColor&quot;&gt;VkBorderColor&lt;/a&gt; value specifying the predefined border color to use.</source>
          <target state="translated">&lt;code&gt;borderColor&lt;/code&gt; 는 사용할 사전 정의 된 테두리 색상을 지정 하는 &lt;a href=&quot;#VkBorderColor&quot;&gt;VkBorderColor&lt;/a&gt; 값입니다.</target>
        </trans-unit>
        <trans-unit id="1aa84b9d3f64debfa3040ce1ee5ad23e9d176a8b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;buffer&lt;/code&gt; is a &lt;code&gt;VkBuffer&lt;/code&gt; on which the view will be created.</source>
          <target state="translated">&lt;code&gt;buffer&lt;/code&gt; 는 뷰가 생성 될 &lt;code&gt;VkBuffer&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="a7a7655614542c22267f9ec52d52c36d8676b8bb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;buffer&lt;/code&gt; is a handle to the buffer whose backing memory is affected by the barrier.</source>
          <target state="translated">&lt;code&gt;buffer&lt;/code&gt; 는 백업 메모리가 장벽의 영향을받는 버퍼 에 대한 핸들입니다.</target>
        </trans-unit>
        <trans-unit id="33eecf1f617f0245eca54622c4d28e66371dafb9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;buffer&lt;/code&gt; is the &lt;code&gt;VkBuffer&lt;/code&gt; object to be bound.</source>
          <target state="translated">&lt;code&gt;buffer&lt;/code&gt; 는 바인딩 할 &lt;code&gt;VkBuffer&lt;/code&gt; 객체입니다.</target>
        </trans-unit>
        <trans-unit id="49ddb78ff6d363f62d50c2ab65a06e54cb473ef1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;buffer&lt;/code&gt; is the buffer being bound.</source>
          <target state="translated">&lt;code&gt;buffer&lt;/code&gt; 는 바인딩되는 버퍼 입니다.</target>
        </trans-unit>
        <trans-unit id="164294f83acba3653dddd166278956f549c72eaa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;buffer&lt;/code&gt; is the buffer containing dispatch parameters.</source>
          <target state="translated">&lt;code&gt;buffer&lt;/code&gt; 는 디스패치 매개 변수를 포함하는 버퍼입니다.</target>
        </trans-unit>
        <trans-unit id="6af09a28c9e98c919774674661aec39292078e7f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;buffer&lt;/code&gt; is the buffer containing draw parameters.</source>
          <target state="translated">&lt;code&gt;buffer&lt;/code&gt; 는 그리기 매개 변수를 포함하는 버퍼입니다.</target>
        </trans-unit>
        <trans-unit id="d275781de79351df1ce5d3625b5a9fc197404ac9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;buffer&lt;/code&gt; is the buffer resource.</source>
          <target state="translated">&lt;code&gt;buffer&lt;/code&gt; 는 버퍼 리소스입니다.</target>
        </trans-unit>
        <trans-unit id="78313da8b9ac94e84e55a4b5d1c1cb2b8573d295" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;buffer&lt;/code&gt; is the buffer to be attached to memory.</source>
          <target state="translated">&lt;code&gt;buffer&lt;/code&gt; 는 메모리에 첨부 할 버퍼입니다.</target>
        </trans-unit>
        <trans-unit id="a97d9223a11133876736c7d5497a87d42b804815" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;buffer&lt;/code&gt; is the buffer to destroy.</source>
          <target state="translated">&lt;code&gt;buffer&lt;/code&gt; 는 파괴 할 버퍼입니다.</target>
        </trans-unit>
        <trans-unit id="8be5645cb03af85390c1bfee107d2047c85fecb0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;buffer&lt;/code&gt; is the buffer to query.</source>
          <target state="translated">&lt;code&gt;buffer&lt;/code&gt; 는 쿼리 할 버퍼입니다.</target>
        </trans-unit>
        <trans-unit id="b601a5efe5ba02de18d2e926288f74eea435c5f5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;buffer&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be a valid &lt;code&gt;VkBuffer&lt;/code&gt; handle</source>
          <target state="translated">&lt;code&gt;buffer&lt;/code&gt; &lt;strong&gt;는&lt;/strong&gt; 유효한 &lt;code&gt;VkBuffer&lt;/code&gt; 핸들 &lt;strong&gt;이어야합니다&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="da01670fe0215192b6cdf0e86df7463c6a99bd65" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;buffer&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; have been created with a &lt;code&gt;usage&lt;/code&gt; value containing at least one of &lt;code&gt;VK_BUFFER_USAGE_UNIFORM_TEXEL_BUFFER_BIT&lt;/code&gt; or &lt;code&gt;VK_BUFFER_USAGE_STORAGE_TEXEL_BUFFER_BIT&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;buffer&lt;/code&gt; &lt;code&gt;VK_BUFFER_USAGE_UNIFORM_TEXEL_BUFFER_BIT&lt;/code&gt; 또는 &lt;code&gt;VK_BUFFER_USAGE_STORAGE_TEXEL_BUFFER_BIT&lt;/code&gt; 중 하나 이상을 포함 하는 &lt;code&gt;usage&lt;/code&gt; 값 으로 버퍼 &lt;strong&gt;를&lt;/strong&gt; 작성 &lt;strong&gt;해야합니다.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2424cd9b7b79c77a06237162888d85971be0794c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;buffer&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; have been created with the &lt;code&gt;VK_BUFFER_USAGE_INDEX_BUFFER_BIT&lt;/code&gt; flag</source>
          <target state="translated">&lt;code&gt;buffer&lt;/code&gt; &lt;strong&gt;는 &lt;/strong&gt; &lt;code&gt;VK_BUFFER_USAGE_INDEX_BUFFER_BIT&lt;/code&gt; 플래그 로 작성 &lt;strong&gt;되어야합니다.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7a59d35258d4a66bffd6d3a7b1cb21fe84a51c49" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;buffer&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; have been created with the &lt;code&gt;VK_BUFFER_USAGE_INDIRECT_BUFFER_BIT&lt;/code&gt; bit set</source>
          <target state="translated">&lt;code&gt;buffer&lt;/code&gt; &lt;strong&gt;는 &lt;/strong&gt; &lt;code&gt;VK_BUFFER_USAGE_INDIRECT_BUFFER_BIT&lt;/code&gt; 비트 세트 로 작성 &lt;strong&gt;되어야합니다.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="54614f08a8b9831c2e0820d7e1cfd00fe80aa8a7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;buffer&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; have been created, allocated, or retrieved from &lt;code&gt;device&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;buffer&lt;/code&gt; &lt;strong&gt;는 &lt;/strong&gt; &lt;code&gt;device&lt;/code&gt; 에서 생성, 할당 또는 검색 &lt;strong&gt;되어야합니다&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3342b97a910044877f13502714b03e4e390a9f79" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;buffer&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; not already be backed by a memory object</source>
          <target state="translated">&lt;code&gt;buffer&lt;/code&gt; &lt;strong&gt;는&lt;/strong&gt; 이미 메모리 객체에 의해 백업되어서 &lt;strong&gt;는&lt;/strong&gt; 안됩니다</target>
        </trans-unit>
        <trans-unit id="8d9127fa71b6a2990a0b7c7b65268fa4d1e63c39" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;buffer&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; not have been created with any sparse memory binding flags</source>
          <target state="translated">&lt;code&gt;buffer&lt;/code&gt; 스파 스 메모리 바인딩 플래그를 사용하여 버퍼를 만들면 &lt;strong&gt;안됩니다&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1c1b2a59cf8f5a4a9eb97db006e47dfaf5171cd6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;bufferBindCount&lt;/code&gt; is the number of sparse buffer bindings to perform in the batch.</source>
          <target state="translated">&lt;code&gt;bufferBindCount&lt;/code&gt; 는 일괄 처리에서 수행 할 스파 스 버퍼 바인딩 수입니다.</target>
        </trans-unit>
        <trans-unit id="94876181e9f695c1ef5500a93ac7ae2778586a4e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;bufferFeatures&lt;/code&gt; is a bitmask of &lt;a href=&quot;#VkFormatFeatureFlagBits&quot;&gt;VkFormatFeatureFlagBits&lt;/a&gt; specifying features supported by buffers.</source>
          <target state="translated">&lt;code&gt;bufferFeatures&lt;/code&gt; 는 버퍼에서 지원하는 기능을 지정하는 &lt;a href=&quot;#VkFormatFeatureFlagBits&quot;&gt;VkFormatFeatureFlagBits&lt;/a&gt; 의 비트 마스크입니다 .</target>
        </trans-unit>
        <trans-unit id="3f9362ce688b971b043de99e03e3224eea92eeb6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;bufferImageGranularity&lt;/code&gt; is the granularity, in bytes, at which buffer or linear image resources, and optimal image resources &lt;strong&gt;can&lt;/strong&gt; be bound to adjacent offsets in the same &lt;code&gt;VkDeviceMemory&lt;/code&gt; object without aliasing. See &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#resources-bufferimagegranularity&quot;&gt;Buffer-Image Granularity&lt;/a&gt; for more details.</source>
          <target state="translated">&lt;code&gt;bufferImageGranularity&lt;/code&gt; 는 버퍼 또는 선형 이미지 리소스 및 최적의 이미지 리소스 를 앨리어싱없이 동일한 &lt;code&gt;VkDeviceMemory&lt;/code&gt; 개체 의 인접한 오프셋에 바인딩 &lt;strong&gt;할 수&lt;/strong&gt; 있는 단위 (바이트) 입니다. 자세한 내용은 &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#resources-bufferimagegranularity&quot;&gt;버퍼 이미지 세분성&lt;/a&gt; 을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="28460ce53ce1a30d8a8265cad0b29a53e3a8e2ca" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;bufferImageHeight&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be &lt;code&gt;0&lt;/code&gt;, or greater than or equal to the &lt;code&gt;height&lt;/code&gt; member of &lt;code&gt;imageExtent&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;bufferImageHeight&lt;/code&gt; 는&lt;strong&gt;해야&lt;/strong&gt; 할 &lt;code&gt;0&lt;/code&gt; 또는 이상을 또는 동일 &lt;code&gt;height&lt;/code&gt; 의 부재 &lt;code&gt;imageExtent&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ff8f1b9773c50fd88512bf44cf5b7c45e24f95c6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;bufferMemoryBarrierCount&lt;/code&gt; is the length of the &lt;code&gt;pBufferMemoryBarriers&lt;/code&gt; array.</source>
          <target state="translated">&lt;code&gt;bufferMemoryBarrierCount&lt;/code&gt; 는 &lt;code&gt;pBufferMemoryBarriers&lt;/code&gt; 배열 의 길이입니다 .</target>
        </trans-unit>
        <trans-unit id="b03832e3e78d23380acebeb533fca77591576e09" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;bufferOffset&lt;/code&gt; is the offset in bytes from the start of the buffer object where the image data is copied from or to.</source>
          <target state="translated">&lt;code&gt;bufferOffset&lt;/code&gt; 은 이미지 데이터가 복사되는 버퍼 객체의 시작부터 바이트 단위의 오프셋입니다.</target>
        </trans-unit>
        <trans-unit id="26e01b3fc1be7fd3a5003dce5e90c30c509691bc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;bufferOffset&lt;/code&gt;, &lt;code&gt;bufferRowLength&lt;/code&gt;, &lt;code&gt;bufferImageHeight&lt;/code&gt; and all members of &lt;code&gt;imageOffset&lt;/code&gt; and &lt;code&gt;imageExtent&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; respect the image transfer granularity requirements of the queue family that it will be submitted against, as described in &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#devsandqueues-physical-device-enumeration&quot;&gt;Physical Device Enumeration&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;bufferOffset&lt;/code&gt; , &lt;code&gt;bufferRowLength&lt;/code&gt; , &lt;code&gt;bufferImageHeight&lt;/code&gt; 및 &lt;code&gt;imageOffset&lt;/code&gt; 및 &lt;code&gt;imageExtent&lt;/code&gt; 의 모든 멤버는 &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#devsandqueues-physical-device-enumeration&quot;&gt;실제 디바이스 열거에&lt;/a&gt; 설명 된대로 제출 될 큐 제품군의 이미지 전송 세분성 요구 사항을 준수 &lt;strong&gt;해야합니다.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="dd777b4f30dde5b65e934ba9cf1287e3a8733d22" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;bufferOffset&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be a multiple of &lt;code&gt;4&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;bufferOffset&lt;/code&gt; &lt;strong&gt;은 &lt;/strong&gt; &lt;code&gt;4&lt;/code&gt; 의 배수 &lt;strong&gt;여야합니다&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7175e7aeb8b4818a07cf73e97d4c6670db73f1f6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;bufferRowLength&lt;/code&gt; and &lt;code&gt;bufferImageHeight&lt;/code&gt; specify the data in buffer memory as a subregion of a larger two- or three-dimensional image, and control the addressing calculations of data in buffer memory. If either of these values is zero, that aspect of the buffer memory is considered to be tightly packed according to the &lt;code&gt;imageExtent&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;bufferRowLength&lt;/code&gt; 및 &lt;code&gt;bufferImageHeight&lt;/code&gt; 는 버퍼 메모리의 데이터를 더 큰 2 차원 또는 3 차원 이미지의 하위 영역으로 지정하고 버퍼 메모리의 데이터 주소 지정 계산을 제어합니다. 이러한 값 중 하나가 0이면 버퍼 메모리의 해당 측면이 &lt;code&gt;imageExtent&lt;/code&gt; 에 따라 밀접하게 압축 된 것으로 간주됩니다 .</target>
        </trans-unit>
        <trans-unit id="70979f5a0d4743341b528d218bb16bc9c1228dc2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;bufferRowLength&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be &lt;code&gt;0&lt;/code&gt;, or greater than or equal to the &lt;code&gt;width&lt;/code&gt; member of &lt;code&gt;imageExtent&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;bufferRowLength&lt;/code&gt; 는&lt;strong&gt;해야&lt;/strong&gt; 할 &lt;code&gt;0&lt;/code&gt; 또는 이상을 또는 동일한 &lt;code&gt;width&lt;/code&gt; 의 부재 &lt;code&gt;imageExtent&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4fe3c3332a88d98a0d92730d8974111eb847c936" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;bufferView&lt;/code&gt; is the buffer view to destroy.</source>
          <target state="translated">&lt;code&gt;bufferView&lt;/code&gt; 는 제거 할 버퍼 뷰입니다.</target>
        </trans-unit>
        <trans-unit id="38577215f7f4eab60b95ed063c4f0dc8742c704a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;clearValue&lt;/code&gt; is the color or depth/stencil value to clear the attachment to, as described in &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#clears-values&quot;&gt;Clear Values&lt;/a&gt; below.</source>
          <target state="translated">&lt;code&gt;clearValue&lt;/code&gt; 는 아래의 &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#clears-values&quot;&gt;Clear Values에&lt;/a&gt; 설명 된대로 첨부 파일을 지우는 색상 또는 깊이 / 스텐실 값 입니다.</target>
        </trans-unit>
        <trans-unit id="0012df3982de5cc057cad979c19b47832048b918" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;clearValue&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be a valid &lt;code&gt;VkClearValue&lt;/code&gt; union</source>
          <target state="translated">&lt;code&gt;clearValue&lt;/code&gt; &lt;strong&gt;는&lt;/strong&gt; 유효한 &lt;code&gt;VkClearValue&lt;/code&gt; 공용체 &lt;strong&gt;여야&lt;/strong&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="d0d8cb86ace555acbcd769da0a8b04b7199ecb22" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;clearValueCount&lt;/code&gt; is the number of elements in &lt;code&gt;pClearValues&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;clearValueCount&lt;/code&gt; 는 요소의 개수 &lt;code&gt;pClearValues&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cf8e441929825f3735150696aeb30ea95635c431" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;clearValueCount&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be greater than the largest attachment index in &lt;code&gt;renderPass&lt;/code&gt; that specifies a &lt;code&gt;loadOp&lt;/code&gt; (or &lt;code&gt;stencilLoadOp&lt;/code&gt;, if the attachment has a depth/stencil format) of &lt;code&gt;VK_ATTACHMENT_LOAD_OP_CLEAR&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;clearValueCount&lt;/code&gt; 는&lt;strong&gt;해야&lt;/strong&gt; 최대 부착 인덱스보다 커야 &lt;code&gt;renderPass&lt;/code&gt; 것을 규정하는 &lt;code&gt;loadOp&lt;/code&gt; (또는 &lt;code&gt;stencilLoadOp&lt;/code&gt; 첨부가있는 경우, 깊이 / 스텐실 포맷)의 &lt;code&gt;VK_ATTACHMENT_LOAD_OP_CLEAR&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="994f9a8e2ece9362911847bba73f8ddab96529c1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;codeSize&lt;/code&gt; is the size, in bytes, of the code pointed to by &lt;code&gt;pCode&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;codeSize&lt;/code&gt; 가 가리키는 코드의 크기 (바이트)입니다 &lt;code&gt;pCode&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4600d96757c6004a9ec60bcf5d1df22de24e187d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;codeSize&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be a multiple of 4</source>
          <target state="translated">&lt;code&gt;codeSize&lt;/code&gt; &lt;strong&gt;는&lt;/strong&gt; 4의 배수 &lt;strong&gt;여야합니다&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="48f40b8b467a4c8b05639b717ee22ccbaffaf94c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;codeSize&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be greater than 0</source>
          <target state="translated">&lt;code&gt;codeSize&lt;/code&gt; &lt;strong&gt;는&lt;/strong&gt; 0보다 커야 &lt;strong&gt;합니다&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="301a1e2a15eb8b18e7fb7da7cda7eb1cbcc8ac22" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;color&lt;/code&gt; specifies the color image clear values to use when clearing a color image or attachment.</source>
          <target state="translated">&lt;code&gt;color&lt;/code&gt; 는 컬러 이미지 또는 첨부 파일을 지울 때 사용할 컬러 이미지 지우기 값을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="bacd059db9502bf0e0eed18cc554d55ecf541e56" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;colorAttachment&lt;/code&gt; is only meaningful if &lt;code&gt;VK_IMAGE_ASPECT_COLOR_BIT&lt;/code&gt; is set in &lt;code&gt;aspectMask&lt;/code&gt;, in which case it is an index to the &lt;code&gt;pColorAttachments&lt;/code&gt; array in the &lt;a href=&quot;#VkSubpassDescription&quot;&gt;VkSubpassDescription&lt;/a&gt; structure of the current subpass which selects the color attachment to clear. If &lt;code&gt;colorAttachment&lt;/code&gt; is &lt;code&gt;VK_ATTACHMENT_UNUSED&lt;/code&gt; then the clear has no effect.</source>
          <target state="translated">&lt;code&gt;colorAttachment&lt;/code&gt; 는 경우에만 의미가 &lt;code&gt;VK_IMAGE_ASPECT_COLOR_BIT&lt;/code&gt; 가 설정된다 &lt;code&gt;aspectMask&lt;/code&gt; ,이 경우는 행 인덱스이고 &lt;code&gt;pColorAttachments&lt;/code&gt; 의 에 배열 &lt;a href=&quot;#VkSubpassDescription&quot;&gt;VkSubpassDescription의&lt;/a&gt; 클리어 컬러 첨부 선택 현재 subpass 구조. 경우 &lt;code&gt;colorAttachment&lt;/code&gt; 가 되어 &lt;code&gt;VK_ATTACHMENT_UNUSED&lt;/code&gt; 다음 맑은는 효과가 없습니다.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
