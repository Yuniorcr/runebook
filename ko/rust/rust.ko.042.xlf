<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="rust">
    <body>
      <group id="rust">
        <trans-unit id="043075ce176dd25e531f92a1093f419f3c621bfa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;T:&amp;nbsp;'static&amp;gt; &lt;a href=&quot;struct.localkey&quot;&gt;LocalKey&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/thread/local.rs.html#210-260&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;T:&amp;nbsp;'static&amp;gt; &lt;a href=&quot;struct.localkey&quot;&gt;LocalKey&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/thread/local.rs.html#210-260&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a802bc3bb967a5cf27aa5ec46e583bc2b7f4e04d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;T:&amp;nbsp;'static&amp;gt; Debug for &lt;a href=&quot;../thread/struct.localkey&quot;&gt;LocalKey&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/thread/local.rs.html#96-100&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;T:&amp;nbsp;'static&amp;gt; Debug for &lt;a href=&quot;../thread/struct.localkey&quot;&gt;LocalKey&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/thread/local.rs.html#96-100&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="aae4d2385bfb461e942353bf48ced387162a9727" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;../../clone/trait.clone&quot;&gt;Clone&lt;/a&gt;&amp;gt; &lt;a href=&quot;../../clone/trait.clone&quot;&gt;Clone&lt;/a&gt; for &lt;a href=&quot;enum.trysenderror&quot;&gt;TrySendError&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/mpsc/mod.rs.html#618&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;../../clone/trait.clone&quot;&gt;Clone&lt;/a&gt;&amp;gt; &lt;a href=&quot;../../clone/trait.clone&quot;&gt;Clone&lt;/a&gt; for &lt;a href=&quot;enum.trysenderror&quot;&gt;TrySendError&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/mpsc/mod.rs.html#618&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="34166f60b2e5156b03e73a5709749258f31aeae6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;../../clone/trait.clone&quot;&gt;Clone&lt;/a&gt;&amp;gt; &lt;a href=&quot;../../clone/trait.clone&quot;&gt;Clone&lt;/a&gt; for &lt;a href=&quot;struct.senderror&quot;&gt;SendError&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/mpsc/mod.rs.html#555&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;../../clone/trait.clone&quot;&gt;Clone&lt;/a&gt;&amp;gt; &lt;a href=&quot;../../clone/trait.clone&quot;&gt;Clone&lt;/a&gt; for &lt;a href=&quot;struct.senderror&quot;&gt;SendError&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/mpsc/mod.rs.html#555&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="74387d47f70d17f1b274d16fea5d29c958191be1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;../../clone/trait.clone&quot;&gt;Clone&lt;/a&gt;, S:&amp;nbsp;&lt;a href=&quot;../../clone/trait.clone&quot;&gt;Clone&lt;/a&gt;&amp;gt; &lt;a href=&quot;../../clone/trait.clone&quot;&gt;Clone&lt;/a&gt; for &lt;a href=&quot;../struct.hashset&quot;&gt;HashSet&lt;/a&gt;&amp;lt;T, S&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/collections/hash/set.rs.html#109&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;../../clone/trait.clone&quot;&gt;Clone&lt;/a&gt;, S:&amp;nbsp;&lt;a href=&quot;../../clone/trait.clone&quot;&gt;Clone&lt;/a&gt;&amp;gt; &lt;a href=&quot;../../clone/trait.clone&quot;&gt;Clone&lt;/a&gt; for &lt;a href=&quot;../struct.hashset&quot;&gt;HashSet&lt;/a&gt;&amp;lt;T, S&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/collections/hash/set.rs.html#109&quot;&gt; [src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a2f8324c8040582ddafa26467afeb19facd803be" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;../../cmp/trait.eq&quot;&gt;Eq&lt;/a&gt;&amp;gt; &lt;a href=&quot;../../cmp/trait.eq&quot;&gt;Eq&lt;/a&gt; for &lt;a href=&quot;enum.trysenderror&quot;&gt;TrySendError&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/mpsc/mod.rs.html#618&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;../../cmp/trait.eq&quot;&gt;Eq&lt;/a&gt;&amp;gt; &lt;a href=&quot;../../cmp/trait.eq&quot;&gt;Eq&lt;/a&gt; for &lt;a href=&quot;enum.trysenderror&quot;&gt;TrySendError&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/mpsc/mod.rs.html#618&quot;&gt;[SRC]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b9bf9379b38ce373d85dfddd8193527decf1395b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;../../cmp/trait.eq&quot;&gt;Eq&lt;/a&gt;&amp;gt; &lt;a href=&quot;../../cmp/trait.eq&quot;&gt;Eq&lt;/a&gt; for &lt;a href=&quot;struct.senderror&quot;&gt;SendError&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/mpsc/mod.rs.html#555&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;../../cmp/trait.eq&quot;&gt;Eq&lt;/a&gt;&amp;gt; &lt;a href=&quot;../../cmp/trait.eq&quot;&gt;Eq&lt;/a&gt; for &lt;a href=&quot;struct.senderror&quot;&gt;SendError&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/mpsc/mod.rs.html#555&quot;&gt;[SRC]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0d7e2adecf3f8616895058639448f47c6e7da4d5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;../../cmp/trait.partialeq&quot;&gt;PartialEq&lt;/a&gt;&amp;gt; &lt;a href=&quot;../../cmp/trait.partialeq&quot;&gt;PartialEq&lt;/a&gt;&amp;lt;&lt;a href=&quot;enum.trysenderror&quot;&gt;TrySendError&lt;/a&gt;&amp;lt;T&amp;gt;&amp;gt; for &lt;a href=&quot;enum.trysenderror&quot;&gt;TrySendError&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/mpsc/mod.rs.html#618&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;../../cmp/trait.partialeq&quot;&gt;PartialEq&lt;/a&gt;&amp;gt; &lt;a href=&quot;../../cmp/trait.partialeq&quot;&gt;PartialEq&lt;/a&gt;&amp;lt;&lt;a href=&quot;enum.trysenderror&quot;&gt;TrySendError&lt;/a&gt;&amp;lt;T&amp;gt;&amp;gt; for &lt;a href=&quot;enum.trysenderror&quot;&gt;TrySendError&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/mpsc/mod.rs.html#618&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="49b8a5dfbb1e4fc6b5114aba81ff64dddaa0e6e9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;../../cmp/trait.partialeq&quot;&gt;PartialEq&lt;/a&gt;&amp;gt; &lt;a href=&quot;../../cmp/trait.partialeq&quot;&gt;PartialEq&lt;/a&gt;&amp;lt;&lt;a href=&quot;struct.senderror&quot;&gt;SendError&lt;/a&gt;&amp;lt;T&amp;gt;&amp;gt; for &lt;a href=&quot;struct.senderror&quot;&gt;SendError&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/mpsc/mod.rs.html#555&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;../../cmp/trait.partialeq&quot;&gt;PartialEq&lt;/a&gt;&amp;gt; &lt;a href=&quot;../../cmp/trait.partialeq&quot;&gt;PartialEq&lt;/a&gt;&amp;lt;&lt;a href=&quot;struct.senderror&quot;&gt;SendError&lt;/a&gt;&amp;lt;T&amp;gt;&amp;gt; for &lt;a href=&quot;struct.senderror&quot;&gt;SendError&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/mpsc/mod.rs.html#555&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8e6b0aae60349e9ad455bfe54e164c60b88d2c1b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;../../fmt/trait.debug&quot;&gt;Debug&lt;/a&gt;&amp;gt; &lt;a href=&quot;../../fmt/trait.debug&quot;&gt;Debug&lt;/a&gt; for &lt;a href=&quot;struct.intoiter&quot;&gt;IntoIter&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/mpsc/mod.rs.html#440&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;../../fmt/trait.debug&quot;&gt;Debug&lt;/a&gt;&amp;gt; &lt;a href=&quot;../../fmt/trait.debug&quot;&gt;Debug&lt;/a&gt; for &lt;a href=&quot;struct.intoiter&quot;&gt;IntoIter&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/mpsc/mod.rs.html#440&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3a7aeceb62dd702b2d1c266bbebae8718356d8be" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;../../hash/trait.hash&quot;&gt;Hash&lt;/a&gt; + &lt;a href=&quot;../../cmp/trait.eq&quot;&gt;Eq&lt;/a&gt;&amp;gt; &lt;a href=&quot;../struct.hashset&quot;&gt;HashSet&lt;/a&gt;&amp;lt;T, &lt;a href=&quot;../hash_map/struct.randomstate&quot;&gt;RandomState&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/collections/hash/set.rs.html#115-150&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;../../hash/trait.hash&quot;&gt;Hash&lt;/a&gt; + &lt;a href=&quot;../../cmp/trait.eq&quot;&gt;Eq&lt;/a&gt;&amp;gt; &lt;a href=&quot;../struct.hashset&quot;&gt;HashSet&lt;/a&gt;&amp;lt;T, &lt;a href=&quot;../hash_map/struct.randomstate&quot;&gt;RandomState&lt;/a&gt;&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/collections/hash/set.rs.html#115-150&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9ad9db0cbe770ee822e1398a61c8a0e8fa887441" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;../../marker/trait.copy&quot;&gt;Copy&lt;/a&gt;&amp;gt; &lt;a href=&quot;../../marker/trait.copy&quot;&gt;Copy&lt;/a&gt; for &lt;a href=&quot;enum.trysenderror&quot;&gt;TrySendError&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/mpsc/mod.rs.html#618&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;../../marker/trait.copy&quot;&gt;Copy&lt;/a&gt;&amp;gt; &lt;a href=&quot;../../marker/trait.copy&quot;&gt;Copy&lt;/a&gt; for &lt;a href=&quot;enum.trysenderror&quot;&gt;TrySendError&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/mpsc/mod.rs.html#618&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9cc2b0756b27101f3780951c573f77b915b82e44" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;../../marker/trait.copy&quot;&gt;Copy&lt;/a&gt;&amp;gt; &lt;a href=&quot;../../marker/trait.copy&quot;&gt;Copy&lt;/a&gt; for &lt;a href=&quot;struct.senderror&quot;&gt;SendError&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/mpsc/mod.rs.html#555&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;../../marker/trait.copy&quot;&gt;Copy&lt;/a&gt;&amp;gt; &lt;a href=&quot;../../marker/trait.copy&quot;&gt;Copy&lt;/a&gt; for &lt;a href=&quot;struct.senderror&quot;&gt;SendError&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/mpsc/mod.rs.html#555&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8e3f06b2b53ffc235543adeb4989d50a3b862d78" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;../../marker/trait.send&quot;&gt;Send&lt;/a&gt;&amp;gt; &lt;a href=&quot;../../error/trait.error&quot;&gt;Error&lt;/a&gt; for &lt;a href=&quot;enum.trysenderror&quot;&gt;TrySendError&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/mpsc/mod.rs.html#1615-1631&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;../../marker/trait.send&quot;&gt;Send&lt;/a&gt;&amp;gt; &lt;a href=&quot;../../error/trait.error&quot;&gt;Error&lt;/a&gt; for &lt;a href=&quot;enum.trysenderror&quot;&gt;TrySendError&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/mpsc/mod.rs.html#1615-1631&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="39e2aee665752d3b5a39a4589e62cc3f3fc49287" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;../../marker/trait.send&quot;&gt;Send&lt;/a&gt;&amp;gt; &lt;a href=&quot;../../error/trait.error&quot;&gt;Error&lt;/a&gt; for &lt;a href=&quot;struct.senderror&quot;&gt;SendError&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/mpsc/mod.rs.html#1580-1588&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;../../marker/trait.send&quot;&gt;Send&lt;/a&gt;&amp;gt; &lt;a href=&quot;../../error/trait.error&quot;&gt;Error&lt;/a&gt; for &lt;a href=&quot;struct.senderror&quot;&gt;SendError&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/mpsc/mod.rs.html#1580-1588&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="17c7433b7f4bfe33f69a88a19f06bd83d45ba903" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;../../marker/trait.send&quot;&gt;Send&lt;/a&gt;&amp;gt; &lt;a href=&quot;../../marker/trait.send&quot;&gt;Send&lt;/a&gt; for &lt;a href=&quot;struct.receiver&quot;&gt;Receiver&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/mpsc/mod.rs.html#325&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;../../marker/trait.send&quot;&gt;Send&lt;/a&gt;&amp;gt; &lt;a href=&quot;../../marker/trait.send&quot;&gt;Send&lt;/a&gt; for &lt;a href=&quot;struct.receiver&quot;&gt;Receiver&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/mpsc/mod.rs.html#325&quot;&gt;[SRC]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="292ecd6243d130eae079ae1f887a57ae1cd669c2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;../../marker/trait.send&quot;&gt;Send&lt;/a&gt;&amp;gt; &lt;a href=&quot;../../marker/trait.send&quot;&gt;Send&lt;/a&gt; for &lt;a href=&quot;struct.sender&quot;&gt;Sender&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/mpsc/mod.rs.html#485&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;../../marker/trait.send&quot;&gt;Send&lt;/a&gt;&amp;gt; &lt;a href=&quot;../../marker/trait.send&quot;&gt;Send&lt;/a&gt; for &lt;a href=&quot;struct.sender&quot;&gt;Sender&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/mpsc/mod.rs.html#485&quot;&gt;[SRC]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1d5e857498d48e60ec32526cbd5e877b5353d52a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;../../marker/trait.send&quot;&gt;Send&lt;/a&gt;&amp;gt; &lt;a href=&quot;../../marker/trait.send&quot;&gt;Send&lt;/a&gt; for &lt;a href=&quot;struct.syncsender&quot;&gt;SyncSender&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/mpsc/mod.rs.html#543&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;../../marker/trait.send&quot;&gt;Send&lt;/a&gt;&amp;gt; &lt;a href=&quot;../../marker/trait.send&quot;&gt;Send&lt;/a&gt; for &lt;a href=&quot;struct.syncsender&quot;&gt;SyncSender&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/mpsc/mod.rs.html#543&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8d161d8005760617762da0ff26c0878e163f9109" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;../clone/trait.clone&quot;&gt;Clone&lt;/a&gt;&amp;gt; &lt;a href=&quot;../clone/trait.clone&quot;&gt;Clone&lt;/a&gt; for &lt;a href=&quot;struct.cursor&quot;&gt;Cursor&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/io/cursor.rs.html#75&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;../clone/trait.clone&quot;&gt;Clone&lt;/a&gt;&amp;gt; &lt;a href=&quot;../clone/trait.clone&quot;&gt;Clone&lt;/a&gt; for &lt;a href=&quot;struct.cursor&quot;&gt;Cursor&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/io/cursor.rs.html#75&quot;&gt;[SRC]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="352cc29f31d348cfe6b22ae898fe94137baf8ccc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;../clone/trait.clone&quot;&gt;Clone&lt;/a&gt;, S:&amp;nbsp;&lt;a href=&quot;../clone/trait.clone&quot;&gt;Clone&lt;/a&gt;&amp;gt; &lt;a href=&quot;../clone/trait.clone&quot;&gt;Clone&lt;/a&gt; for &lt;a href=&quot;struct.hashset&quot;&gt;HashSet&lt;/a&gt;&amp;lt;T, S&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/collections/hash/set.rs.html#109&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;../clone/trait.clone&quot;&gt;Clone&lt;/a&gt;, S:&amp;nbsp;&lt;a href=&quot;../clone/trait.clone&quot;&gt;Clone&lt;/a&gt;&amp;gt; &lt;a href=&quot;../clone/trait.clone&quot;&gt;Clone&lt;/a&gt; for &lt;a href=&quot;struct.hashset&quot;&gt;HashSet&lt;/a&gt;&amp;lt;T, S&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/collections/hash/set.rs.html#109&quot;&gt; [src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e72fd60e70ac68bcb392c96b27be8c761309c4f4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;../default/trait.default&quot;&gt;Default&lt;/a&gt;&amp;gt; &lt;a href=&quot;../default/trait.default&quot;&gt;Default&lt;/a&gt; for &lt;a href=&quot;struct.cursor&quot;&gt;Cursor&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/io/cursor.rs.html#75&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;../default/trait.default&quot;&gt;Default&lt;/a&gt;&amp;gt; &lt;a href=&quot;../default/trait.default&quot;&gt;Default&lt;/a&gt; for &lt;a href=&quot;struct.cursor&quot;&gt;Cursor&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/io/cursor.rs.html#75&quot;&gt;[SRC]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2f596c41a5ce3e9c9fe1c13a88a72f5712a0855e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;../default/trait.default&quot;&gt;Default&lt;/a&gt;&amp;gt; &lt;a href=&quot;../default/trait.default&quot;&gt;Default&lt;/a&gt; for &lt;a href=&quot;struct.rwlock&quot;&gt;RwLock&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/rwlock.rs.html#445-450&quot;&gt;[src]&lt;/a&gt;1.10.0</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;../default/trait.default&quot;&gt;Default&lt;/a&gt;&amp;gt; &lt;a href=&quot;../default/trait.default&quot;&gt;Default&lt;/a&gt; for &lt;a href=&quot;struct.rwlock&quot;&gt;RwLock&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/rwlock.rs.html#445-450&quot;&gt;[SRC]&lt;/a&gt; 1.10.0</target>
        </trans-unit>
        <trans-unit id="96a7e02dba974e1a8d41d6499f5e150ed055bd4c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;../error/trait.error&quot;&gt;Error&lt;/a&gt;&amp;gt; &lt;a href=&quot;../error/trait.error&quot;&gt;Error&lt;/a&gt; for &lt;a href=&quot;struct.box&quot;&gt;Box&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/error.rs.html#554-567&quot;&gt;[src]&lt;/a&gt;1.8.0</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;../error/trait.error&quot;&gt;Error&lt;/a&gt;&amp;gt; &lt;a href=&quot;../error/trait.error&quot;&gt;Error&lt;/a&gt; for &lt;a href=&quot;struct.box&quot;&gt;Box&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/error.rs.html#554-567&quot;&gt;[SRC]&lt;/a&gt; 1.8.0</target>
        </trans-unit>
        <trans-unit id="b0c30f05b3ffbfd42cf006d7819bad85cb22a48c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;../fmt/trait.debug&quot;&gt;Debug&lt;/a&gt;&amp;gt; &lt;a href=&quot;../fmt/trait.debug&quot;&gt;Debug&lt;/a&gt; for &lt;a href=&quot;struct.assertunwindsafe&quot;&gt;AssertUnwindSafe&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/panic.rs.html#320-326&quot;&gt;[src]&lt;/a&gt;1.16.0</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;../fmt/trait.debug&quot;&gt;Debug&lt;/a&gt;&amp;gt; &lt;a href=&quot;../fmt/trait.debug&quot;&gt;Debug&lt;/a&gt; for &lt;a href=&quot;struct.assertunwindsafe&quot;&gt;AssertUnwindSafe&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/panic.rs.html#320-326&quot;&gt;[src]&lt;/a&gt; 1.16.0에 대한 디버그</target>
        </trans-unit>
        <trans-unit id="4c3c1170452d976d7b6ef74eb8ce48726d8f543a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;../fmt/trait.debug&quot;&gt;Debug&lt;/a&gt;&amp;gt; &lt;a href=&quot;../fmt/trait.debug&quot;&gt;Debug&lt;/a&gt; for &lt;a href=&quot;struct.cursor&quot;&gt;Cursor&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/io/cursor.rs.html#75&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;../fmt/trait.debug&quot;&gt;Debug&lt;/a&gt;&amp;gt; &lt;a href=&quot;../fmt/trait.debug&quot;&gt;Debug&lt;/a&gt; for &lt;a href=&quot;struct.cursor&quot;&gt;Cursor&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/io/cursor.rs.html#75&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5258a5bd65a615a005bb7bda66dcde3adecf10b3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;../fmt/trait.debug&quot;&gt;Debug&lt;/a&gt;&amp;gt; &lt;a href=&quot;../fmt/trait.debug&quot;&gt;Debug&lt;/a&gt; for &lt;a href=&quot;struct.take&quot;&gt;Take&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/io/mod.rs.html#1981&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;../fmt/trait.debug&quot;&gt;Debug&lt;/a&gt;&amp;gt; &lt;a href=&quot;../fmt/trait.debug&quot;&gt;Debug&lt;/a&gt; for &lt;a href=&quot;struct.take&quot;&gt;Take&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/io/mod.rs.html#1981&quot;&gt; [src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c50f56c6386c7bd0dd0357baff01c7cc1be23263" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;../fmt/trait.debug&quot;&gt;Debug&lt;/a&gt;, U:&amp;nbsp;&lt;a href=&quot;../fmt/trait.debug&quot;&gt;Debug&lt;/a&gt;&amp;gt; &lt;a href=&quot;../fmt/trait.debug&quot;&gt;Debug&lt;/a&gt; for &lt;a href=&quot;struct.chain&quot;&gt;Chain&lt;/a&gt;&amp;lt;T, U&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/io/mod.rs.html#1912-1919&quot;&gt;[src]&lt;/a&gt;1.16.0</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;../fmt/trait.debug&quot;&gt;Debug&lt;/a&gt;, U:&amp;nbsp;&lt;a href=&quot;../fmt/trait.debug&quot;&gt;Debug&lt;/a&gt;&amp;gt; &lt;a href=&quot;../fmt/trait.debug&quot;&gt;Debug&lt;/a&gt; for &lt;a href=&quot;struct.chain&quot;&gt;Chain&lt;/a&gt;&amp;lt;T, U&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/io/mod.rs.html#1912-1919&quot;&gt;[src]&lt;/a&gt; 1.16.0에 대한 디버그</target>
        </trans-unit>
        <trans-unit id="d41afdc49ee5f70bd9f57c8c3d7ba27907e1e188" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;../hash/trait.hash&quot;&gt;Hash&lt;/a&gt; + &lt;a href=&quot;../cmp/trait.eq&quot;&gt;Eq&lt;/a&gt;&amp;gt; &lt;a href=&quot;struct.hashset&quot;&gt;HashSet&lt;/a&gt;&amp;lt;T, &lt;a href=&quot;hash_map/struct.randomstate&quot;&gt;RandomState&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/collections/hash/set.rs.html#115-150&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;../hash/trait.hash&quot;&gt;Hash&lt;/a&gt; + &lt;a href=&quot;../cmp/trait.eq&quot;&gt;Eq&lt;/a&gt;&amp;gt; &lt;a href=&quot;struct.hashset&quot;&gt;HashSet&lt;/a&gt;&amp;lt;T, &lt;a href=&quot;hash_map/struct.randomstate&quot;&gt;RandomState&lt;/a&gt;&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/collections/hash/set.rs.html#115-150&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="75173a795182a0dc92bfb676c55fe9f64c7d0441" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;../marker/trait.send&quot;&gt;Send&lt;/a&gt;&amp;gt; Error for &lt;a href=&quot;../sync/mpsc/enum.trysenderror&quot;&gt;TrySendError&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/mpsc/mod.rs.html#1615-1631&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;../marker/trait.send&quot;&gt;Send&lt;/a&gt;&amp;gt; Error for &lt;a href=&quot;../sync/mpsc/enum.trysenderror&quot;&gt;TrySendError&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/mpsc/mod.rs.html#1615-1631&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f2b257100c8be9a03409fa9eb88a9dcb33f83663" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;../marker/trait.send&quot;&gt;Send&lt;/a&gt;&amp;gt; Error for &lt;a href=&quot;../sync/mpsc/struct.senderror&quot;&gt;SendError&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/mpsc/mod.rs.html#1580-1588&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;../marker/trait.send&quot;&gt;Send&lt;/a&gt;&amp;gt; Error for &lt;a href=&quot;../sync/mpsc/struct.senderror&quot;&gt;SendError&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/mpsc/mod.rs.html#1580-1588&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="676c0772b1b45247bb97556fbcbbb96ab9361aea" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;../panic/trait.refunwindsafe&quot;&gt;RefUnwindSafe&lt;/a&gt; + ?&lt;a href=&quot;../marker/trait.sized&quot;&gt;Sized&lt;/a&gt;&amp;gt; &lt;a href=&quot;../panic/trait.unwindsafe&quot;&gt;UnwindSafe&lt;/a&gt; for &lt;a href=&quot;struct.arc&quot;&gt;Arc&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/panic.rs.html#227&quot;&gt;[src]&lt;/a&gt;1.9.0</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;../panic/trait.refunwindsafe&quot;&gt;RefUnwindSafe&lt;/a&gt; + ?&lt;a href=&quot;../marker/trait.sized&quot;&gt;Sized&lt;/a&gt;&amp;gt; &lt;a href=&quot;../panic/trait.unwindsafe&quot;&gt;UnwindSafe&lt;/a&gt; for &lt;a href=&quot;struct.arc&quot;&gt;Arc&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/panic.rs.html#227&quot;&gt;[src]&lt;/a&gt; 1.9.0</target>
        </trans-unit>
        <trans-unit id="9ad2aeae778a337e9c4c18f834f17b52d2818256" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;../panic/trait.refunwindsafe&quot;&gt;RefUnwindSafe&lt;/a&gt; + ?&lt;a href=&quot;../marker/trait.sized&quot;&gt;Sized&lt;/a&gt;&amp;gt; &lt;a href=&quot;../panic/trait.unwindsafe&quot;&gt;UnwindSafe&lt;/a&gt; for &lt;a href=&quot;struct.nonnull&quot;&gt;NonNull&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/panic.rs.html#213&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;../panic/trait.refunwindsafe&quot;&gt;RefUnwindSafe&lt;/a&gt; + ?&lt;a href=&quot;../marker/trait.sized&quot;&gt;Sized&lt;/a&gt;&amp;gt; &lt;a href=&quot;../panic/trait.unwindsafe&quot;&gt;UnwindSafe&lt;/a&gt; for &lt;a href=&quot;struct.nonnull&quot;&gt;NonNull&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/panic.rs.html#213&quot;&gt; [src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="cf8ae500994cd1d3c213649ea84bd85cdf32fb92" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;../panic/trait.refunwindsafe&quot;&gt;RefUnwindSafe&lt;/a&gt; + ?&lt;a href=&quot;../marker/trait.sized&quot;&gt;Sized&lt;/a&gt;&amp;gt; &lt;a href=&quot;../panic/trait.unwindsafe&quot;&gt;UnwindSafe&lt;/a&gt; for &lt;a href=&quot;struct.rc&quot;&gt;Rc&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/panic.rs.html#225&quot;&gt;[src]&lt;/a&gt;1.9.0</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;../panic/trait.refunwindsafe&quot;&gt;RefUnwindSafe&lt;/a&gt; + ?&lt;a href=&quot;../marker/trait.sized&quot;&gt;Sized&lt;/a&gt;&amp;gt; &lt;a href=&quot;../panic/trait.unwindsafe&quot;&gt;UnwindSafe&lt;/a&gt; for &lt;a href=&quot;struct.rc&quot;&gt;Rc&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/panic.rs.html#225&quot;&gt;[src]&lt;/a&gt; 1.9.0에 대해 UnwindSafe</target>
        </trans-unit>
        <trans-unit id="f62d97f961961d604b9f449f5dab62ac38001fbc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;panic/trait.refunwindsafe&quot;&gt;RefUnwindSafe&lt;/a&gt; + ?&lt;a href=&quot;marker/trait.sized&quot;&gt;Sized&lt;/a&gt;&amp;gt; &lt;a href=&quot;panic/trait.unwindsafe&quot;&gt;UnwindSafe&lt;/a&gt; for &lt;a href=&quot;primitive.pointer&quot;&gt;*const T&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/panic.rs.html#207&quot;&gt;[src]&lt;/a&gt;1.9.0</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;panic/trait.refunwindsafe&quot;&gt;RefUnwindSafe&lt;/a&gt; + ?&lt;a href=&quot;marker/trait.sized&quot;&gt;Sized&lt;/a&gt;&amp;gt; &lt;a href=&quot;panic/trait.unwindsafe&quot;&gt;UnwindSafe&lt;/a&gt; for &lt;a href=&quot;primitive.pointer&quot;&gt;*const T&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/panic.rs.html#207&quot;&gt; [SRC]&lt;/a&gt; 1.9.0</target>
        </trans-unit>
        <trans-unit id="ac34a5248c80c5b18f0e39ecf73caabbec0c0c5f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;panic/trait.refunwindsafe&quot;&gt;RefUnwindSafe&lt;/a&gt; + ?&lt;a href=&quot;marker/trait.sized&quot;&gt;Sized&lt;/a&gt;&amp;gt; &lt;a href=&quot;panic/trait.unwindsafe&quot;&gt;UnwindSafe&lt;/a&gt; for &lt;a href=&quot;primitive.pointer&quot;&gt;*mut T&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/panic.rs.html#209&quot;&gt;[src]&lt;/a&gt;1.9.0</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;panic/trait.refunwindsafe&quot;&gt;RefUnwindSafe&lt;/a&gt; + ?&lt;a href=&quot;marker/trait.sized&quot;&gt;Sized&lt;/a&gt;&amp;gt; &lt;a href=&quot;panic/trait.unwindsafe&quot;&gt;UnwindSafe&lt;/a&gt; for &lt;a href=&quot;primitive.pointer&quot;&gt;*mut T&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/panic.rs.html#209&quot;&gt; [src]&lt;/a&gt; 1.9.0에 대해 UnwindSafe</target>
        </trans-unit>
        <trans-unit id="547c9da1fb7d494d49127e01f59076ee29abaaaf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;trait.bufread&quot;&gt;BufRead&lt;/a&gt;&amp;gt; &lt;a href=&quot;trait.bufread&quot;&gt;BufRead&lt;/a&gt; for &lt;a href=&quot;struct.take&quot;&gt;Take&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/io/mod.rs.html#2152-2170&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;trait.bufread&quot;&gt;BufRead&lt;/a&gt;&amp;gt; &lt;a href=&quot;trait.bufread&quot;&gt;BufRead&lt;/a&gt; for &lt;a href=&quot;struct.take&quot;&gt;Take&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/io/mod.rs.html#2152-2170&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="21b00fd58387b2df50846d2e210c27ee4d10c7e6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;trait.bufread&quot;&gt;BufRead&lt;/a&gt;&amp;gt; BufRead for &lt;a href=&quot;struct.take&quot;&gt;Take&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/io/mod.rs.html#2152-2170&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;trait.bufread&quot;&gt;BufRead&lt;/a&gt;&amp;gt; BufRead for &lt;a href=&quot;struct.take&quot;&gt;Take&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/io/mod.rs.html#2152-2170&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5fbd44a7d18bc6c2a41fa8bf1f90e640c11004cb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;trait.bufread&quot;&gt;BufRead&lt;/a&gt;, U:&amp;nbsp;&lt;a href=&quot;trait.bufread&quot;&gt;BufRead&lt;/a&gt;&amp;gt; &lt;a href=&quot;trait.bufread&quot;&gt;BufRead&lt;/a&gt; for &lt;a href=&quot;struct.chain&quot;&gt;Chain&lt;/a&gt;&amp;lt;T, U&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/io/mod.rs.html#1954-1972&quot;&gt;[src]&lt;/a&gt;1.9.0</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;trait.bufread&quot;&gt;BufRead&lt;/a&gt;, U:&amp;nbsp;&lt;a href=&quot;trait.bufread&quot;&gt;BufRead&lt;/a&gt;&amp;gt; &lt;a href=&quot;trait.bufread&quot;&gt;BufRead&lt;/a&gt; for &lt;a href=&quot;struct.chain&quot;&gt;Chain&lt;/a&gt;&amp;lt;T, U&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/io/mod.rs.html#1954-1972&quot;&gt;[src]&lt;/a&gt; 1.9.0</target>
        </trans-unit>
        <trans-unit id="9cd99f1027b46c6035c5fb5a77aaf3a2ca2f21d0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;trait.bufread&quot;&gt;BufRead&lt;/a&gt;, U:&amp;nbsp;&lt;a href=&quot;trait.bufread&quot;&gt;BufRead&lt;/a&gt;&amp;gt; BufRead for &lt;a href=&quot;struct.chain&quot;&gt;Chain&lt;/a&gt;&amp;lt;T, U&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/io/mod.rs.html#1954-1972&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;trait.bufread&quot;&gt;BufRead&lt;/a&gt;, U:&amp;nbsp;&lt;a href=&quot;trait.bufread&quot;&gt;BufRead&lt;/a&gt;&amp;gt; BufRead for &lt;a href=&quot;struct.chain&quot;&gt;Chain&lt;/a&gt;&amp;lt;T, U&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/io/mod.rs.html#1954-1972&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="46f996ff62ea1fe9e16ab66ef6dee4578bc7138e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;trait.clone&quot;&gt;Clone&lt;/a&gt;&amp;gt; Clone for &lt;a href=&quot;../io/struct.cursor&quot;&gt;Cursor&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/io/cursor.rs.html#75&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;trait.clone&quot;&gt;Clone&lt;/a&gt;&amp;gt; Clone for &lt;a href=&quot;../io/struct.cursor&quot;&gt;Cursor&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/io/cursor.rs.html#75&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="50706b2920d840527b0d5c7ab02289878f1ee92f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;trait.clone&quot;&gt;Clone&lt;/a&gt;&amp;gt; Clone for &lt;a href=&quot;../sync/mpsc/enum.trysenderror&quot;&gt;TrySendError&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/mpsc/mod.rs.html#618&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;trait.clone&quot;&gt;Clone&lt;/a&gt;&amp;gt; Clone for &lt;a href=&quot;../sync/mpsc/enum.trysenderror&quot;&gt;TrySendError&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/mpsc/mod.rs.html#618&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a18e6c6dda5ebe73385d9abb12370d01e6d44e60" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;trait.clone&quot;&gt;Clone&lt;/a&gt;&amp;gt; Clone for &lt;a href=&quot;../sync/mpsc/struct.senderror&quot;&gt;SendError&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/mpsc/mod.rs.html#555&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;trait.clone&quot;&gt;Clone&lt;/a&gt;&amp;gt; Clone for &lt;a href=&quot;../sync/mpsc/struct.senderror&quot;&gt;SendError&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/mpsc/mod.rs.html#555&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c6f241da6150470860c0b9623afcd9f51b3595de" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;trait.clone&quot;&gt;Clone&lt;/a&gt;, S:&amp;nbsp;&lt;a href=&quot;trait.clone&quot;&gt;Clone&lt;/a&gt;&amp;gt; Clone for std::collections::&lt;a href=&quot;../collections/struct.hashset&quot;&gt;HashSet&lt;/a&gt;&amp;lt;T, S&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/collections/hash/set.rs.html#109&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;trait.clone&quot;&gt;Clone&lt;/a&gt;, S:&amp;nbsp;&lt;a href=&quot;trait.clone&quot;&gt;Clone&lt;/a&gt;&amp;gt; Clone for std::collections::&lt;a href=&quot;../collections/struct.hashset&quot;&gt;HashSet&lt;/a&gt;&amp;lt;T, S&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/collections/hash/set.rs.html#109&quot;&gt;[src]에 &lt;/a&gt;대한 복제</target>
        </trans-unit>
        <trans-unit id="35f372758697638bc2bedeb1ccf8353f2b1f5541" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;trait.copy&quot;&gt;Copy&lt;/a&gt;&amp;gt; Copy for &lt;a href=&quot;../sync/mpsc/enum.trysenderror&quot;&gt;TrySendError&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/mpsc/mod.rs.html#618&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;trait.copy&quot;&gt;Copy&lt;/a&gt;&amp;gt; Copy for &lt;a href=&quot;../sync/mpsc/enum.trysenderror&quot;&gt;TrySendError&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/mpsc/mod.rs.html#618&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f37bdf5919e259977d0defb52abcfe810ee27673" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;trait.copy&quot;&gt;Copy&lt;/a&gt;&amp;gt; Copy for &lt;a href=&quot;../sync/mpsc/struct.senderror&quot;&gt;SendError&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/mpsc/mod.rs.html#555&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;trait.copy&quot;&gt;Copy&lt;/a&gt;&amp;gt; Copy for &lt;a href=&quot;../sync/mpsc/struct.senderror&quot;&gt;SendError&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/mpsc/mod.rs.html#555&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="163ce41f58d6729ecc204c03d25e42aa1fa2ac12" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;trait.debug&quot;&gt;Debug&lt;/a&gt;&amp;gt; Debug for &lt;a href=&quot;../io/struct.cursor&quot;&gt;Cursor&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/io/cursor.rs.html#75&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;trait.debug&quot;&gt;Debug&lt;/a&gt;&amp;gt; Debug for &lt;a href=&quot;../io/struct.cursor&quot;&gt;Cursor&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/io/cursor.rs.html#75&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9b05ccd915c0f69fab8694c43bb4d7c451a056eb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;trait.debug&quot;&gt;Debug&lt;/a&gt;&amp;gt; Debug for &lt;a href=&quot;../panic/struct.assertunwindsafe&quot;&gt;AssertUnwindSafe&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/panic.rs.html#320-326&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;trait.debug&quot;&gt;Debug&lt;/a&gt;&amp;gt; Debug for &lt;a href=&quot;../panic/struct.assertunwindsafe&quot;&gt;AssertUnwindSafe&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/panic.rs.html#320-326&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="be28c27d17b38d4f8f316e20e22202371caf638d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;trait.debug&quot;&gt;Debug&lt;/a&gt;&amp;gt; Debug for std::io::&lt;a href=&quot;../io/struct.take&quot;&gt;Take&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/io/mod.rs.html#1981&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;trait.debug&quot;&gt;Debug&lt;/a&gt;&amp;gt; Debug for std::io::&lt;a href=&quot;../io/struct.take&quot;&gt;Take&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/io/mod.rs.html#1981&quot;&gt; [src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e9294f9da252e8e88fb1b6950e443aa10f151b85" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;trait.debug&quot;&gt;Debug&lt;/a&gt;&amp;gt; Debug for std::sync::mpsc::&lt;a href=&quot;../sync/mpsc/struct.intoiter&quot;&gt;IntoIter&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/mpsc/mod.rs.html#440&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;trait.debug&quot;&gt;Debug&lt;/a&gt;&amp;gt; Debug for std::sync::mpsc::&lt;a href=&quot;../sync/mpsc/struct.intoiter&quot;&gt;IntoIter&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/mpsc/mod.rs.html#440&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="05b5124d90474cf2790a80c6934eccdab24bf186" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;trait.debug&quot;&gt;Debug&lt;/a&gt;, U:&amp;nbsp;&lt;a href=&quot;trait.debug&quot;&gt;Debug&lt;/a&gt;&amp;gt; Debug for std::io::&lt;a href=&quot;../io/struct.chain&quot;&gt;Chain&lt;/a&gt;&amp;lt;T, U&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/io/mod.rs.html#1912-1919&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;trait.debug&quot;&gt;Debug&lt;/a&gt;, U:&amp;nbsp;&lt;a href=&quot;trait.debug&quot;&gt;Debug&lt;/a&gt;&amp;gt; Debug for std::io::&lt;a href=&quot;../io/struct.chain&quot;&gt;Chain&lt;/a&gt;&amp;lt;T, U&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/io/mod.rs.html#1912-1919&quot;&gt;[src]에 &lt;/a&gt;대한 디버그</target>
        </trans-unit>
        <trans-unit id="0e13cb4033c8eca6589226886d7df158a5feaae1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;trait.default&quot;&gt;Default&lt;/a&gt;&amp;gt; Default for &lt;a href=&quot;../io/struct.cursor&quot;&gt;Cursor&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/io/cursor.rs.html#75&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;trait.default&quot;&gt;Default&lt;/a&gt;&amp;gt; Default for &lt;a href=&quot;../io/struct.cursor&quot;&gt;Cursor&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/io/cursor.rs.html#75&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5bd997446d3e77c7d6a1408887f1a454aeb2e8cb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;trait.default&quot;&gt;Default&lt;/a&gt;&amp;gt; Default for &lt;a href=&quot;../sync/struct.rwlock&quot;&gt;RwLock&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/rwlock.rs.html#445-450&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;trait.default&quot;&gt;Default&lt;/a&gt;&amp;gt; Default for &lt;a href=&quot;../sync/struct.rwlock&quot;&gt;RwLock&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/rwlock.rs.html#445-450&quot;&gt;[src]의 &lt;/a&gt;기본값</target>
        </trans-unit>
        <trans-unit id="8d3e5e59465127a2475af07083f7ad82a798ce55" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;trait.eq&quot;&gt;Eq&lt;/a&gt;&amp;gt; Eq for &lt;a href=&quot;../sync/mpsc/enum.trysenderror&quot;&gt;TrySendError&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/mpsc/mod.rs.html#618&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;trait.eq&quot;&gt;Eq&lt;/a&gt;&amp;gt; Eq for &lt;a href=&quot;../sync/mpsc/enum.trysenderror&quot;&gt;TrySendError&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/mpsc/mod.rs.html#618&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a47d4b8db7a88cb469225520717012ab145867ec" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;trait.eq&quot;&gt;Eq&lt;/a&gt;&amp;gt; Eq for &lt;a href=&quot;../sync/mpsc/struct.senderror&quot;&gt;SendError&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/mpsc/mod.rs.html#555&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;trait.eq&quot;&gt;Eq&lt;/a&gt;&amp;gt; Eq for &lt;a href=&quot;../sync/mpsc/struct.senderror&quot;&gt;SendError&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/mpsc/mod.rs.html#555&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a98cd304bd639cc1e1071696453f41fe583cc904" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;trait.error&quot;&gt;Error&lt;/a&gt;&amp;gt; Error for &lt;a href=&quot;../boxed/struct.box&quot;&gt;Box&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/error.rs.html#554-567&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;trait.error&quot;&gt;Error&lt;/a&gt;&amp;gt; Error for &lt;a href=&quot;../boxed/struct.box&quot;&gt;Box&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/error.rs.html#554-567&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7625b17855b33b16e95109bb7b1f7f8b675fb3fe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;trait.partialeq&quot;&gt;PartialEq&lt;/a&gt;&amp;gt; PartialEq&amp;lt;&lt;a href=&quot;../sync/mpsc/enum.trysenderror&quot;&gt;TrySendError&lt;/a&gt;&amp;lt;T&amp;gt;&amp;gt; for &lt;a href=&quot;../sync/mpsc/enum.trysenderror&quot;&gt;TrySendError&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/mpsc/mod.rs.html#618&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;trait.partialeq&quot;&gt;PartialEq&lt;/a&gt;&amp;gt; PartialEq&amp;lt;&lt;a href=&quot;../sync/mpsc/enum.trysenderror&quot;&gt;TrySendError&lt;/a&gt;&amp;lt;T&amp;gt;&amp;gt; for &lt;a href=&quot;../sync/mpsc/enum.trysenderror&quot;&gt;TrySendError&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/mpsc/mod.rs.html#618&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a630f1a277a495e6d883bf17adbb744bf3527ad6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;trait.partialeq&quot;&gt;PartialEq&lt;/a&gt;&amp;gt; PartialEq&amp;lt;&lt;a href=&quot;../sync/mpsc/struct.senderror&quot;&gt;SendError&lt;/a&gt;&amp;lt;T&amp;gt;&amp;gt; for &lt;a href=&quot;../sync/mpsc/struct.senderror&quot;&gt;SendError&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/mpsc/mod.rs.html#555&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;trait.partialeq&quot;&gt;PartialEq&lt;/a&gt;&amp;gt; PartialEq&amp;lt;&lt;a href=&quot;../sync/mpsc/struct.senderror&quot;&gt;SendError&lt;/a&gt;&amp;lt;T&amp;gt;&amp;gt; for &lt;a href=&quot;../sync/mpsc/struct.senderror&quot;&gt;SendError&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/mpsc/mod.rs.html#555&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0c31fd41b381bdd9f2daf8894708d3fb3b23de72" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;trait.read&quot;&gt;Read&lt;/a&gt;&amp;gt; &lt;a href=&quot;trait.read&quot;&gt;Read&lt;/a&gt; for &lt;a href=&quot;struct.take&quot;&gt;Take&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/io/mod.rs.html#2127-2149&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;trait.read&quot;&gt;Read&lt;/a&gt;&amp;gt; &lt;a href=&quot;trait.read&quot;&gt;Read&lt;/a&gt; for &lt;a href=&quot;struct.take&quot;&gt;Take&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/io/mod.rs.html#2127-2149&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="032a827f3c39829f96f98ac41f5f73bfdf0e30c5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;trait.read&quot;&gt;Read&lt;/a&gt;&amp;gt; Read for &lt;a href=&quot;struct.take&quot;&gt;Take&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/io/mod.rs.html#2127-2149&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;trait.read&quot;&gt;Read&lt;/a&gt;&amp;gt; Read for &lt;a href=&quot;struct.take&quot;&gt;Take&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/io/mod.rs.html#2127-2149&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d55cd7c64fce5add6cb266a23b746d45f8396f15" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;trait.read&quot;&gt;Read&lt;/a&gt;, U:&amp;nbsp;&lt;a href=&quot;trait.read&quot;&gt;Read&lt;/a&gt;&amp;gt; &lt;a href=&quot;trait.read&quot;&gt;Read&lt;/a&gt; for &lt;a href=&quot;struct.chain&quot;&gt;Chain&lt;/a&gt;&amp;lt;T, U&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/io/mod.rs.html#1922-1951&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;trait.read&quot;&gt;Read&lt;/a&gt;, U:&amp;nbsp;&lt;a href=&quot;trait.read&quot;&gt;Read&lt;/a&gt;&amp;gt; &lt;a href=&quot;trait.read&quot;&gt;Read&lt;/a&gt; for &lt;a href=&quot;struct.chain&quot;&gt;Chain&lt;/a&gt;&amp;lt;T, U&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/io/mod.rs.html#1922-1951&quot;&gt; [src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0ca1788a210847d7b8c2555cbde6f8844bd121d6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;trait.read&quot;&gt;Read&lt;/a&gt;, U:&amp;nbsp;&lt;a href=&quot;trait.read&quot;&gt;Read&lt;/a&gt;&amp;gt; Read for &lt;a href=&quot;struct.chain&quot;&gt;Chain&lt;/a&gt;&amp;lt;T, U&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/io/mod.rs.html#1922-1951&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;trait.read&quot;&gt;Read&lt;/a&gt;, U:&amp;nbsp;&lt;a href=&quot;trait.read&quot;&gt;Read&lt;/a&gt;&amp;gt; Read for &lt;a href=&quot;struct.chain&quot;&gt;Chain&lt;/a&gt;&amp;lt;T, U&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/io/mod.rs.html#1922-1951&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="21cee83b76cba7d18a73dfae06b9e1cf19ce8b00" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;trait.refunwindsafe&quot;&gt;RefUnwindSafe&lt;/a&gt; + ?&lt;a href=&quot;../marker/trait.sized&quot;&gt;Sized&lt;/a&gt;&amp;gt; UnwindSafe for &lt;a href=&quot;../primitive.pointer&quot;&gt;*const T&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/panic.rs.html#207&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;trait.refunwindsafe&quot;&gt;RefUnwindSafe&lt;/a&gt; + ?&lt;a href=&quot;../marker/trait.sized&quot;&gt;Sized&lt;/a&gt;&amp;gt; UnwindSafe for &lt;a href=&quot;../primitive.pointer&quot;&gt;*const T&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/panic.rs.html#207&quot;&gt; [src]에 &lt;/a&gt;대해 크기 조정 &amp;gt; UnwindSafe</target>
        </trans-unit>
        <trans-unit id="4cd3d8c7456da7742cd1767e75431dc451eeed59" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;trait.refunwindsafe&quot;&gt;RefUnwindSafe&lt;/a&gt; + ?&lt;a href=&quot;../marker/trait.sized&quot;&gt;Sized&lt;/a&gt;&amp;gt; UnwindSafe for &lt;a href=&quot;../primitive.pointer&quot;&gt;*mut T&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/panic.rs.html#209&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;trait.refunwindsafe&quot;&gt;RefUnwindSafe&lt;/a&gt; + ?&lt;a href=&quot;../marker/trait.sized&quot;&gt;Sized&lt;/a&gt;&amp;gt; UnwindSafe for &lt;a href=&quot;../primitive.pointer&quot;&gt;*mut T&lt;/a&gt;&lt;/code&gt; 대한 UnwindSafe &lt;a href=&quot;https://doc.rust-lang.org/src/std/panic.rs.html#209&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="99beb36f5c1961cf02e1af9d58612ccc5a9607c7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;trait.refunwindsafe&quot;&gt;RefUnwindSafe&lt;/a&gt; + ?&lt;a href=&quot;../marker/trait.sized&quot;&gt;Sized&lt;/a&gt;&amp;gt; UnwindSafe for &lt;a href=&quot;../ptr/struct.nonnull&quot;&gt;NonNull&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/panic.rs.html#213&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;trait.refunwindsafe&quot;&gt;RefUnwindSafe&lt;/a&gt; + ?&lt;a href=&quot;../marker/trait.sized&quot;&gt;Sized&lt;/a&gt;&amp;gt; UnwindSafe for &lt;a href=&quot;../ptr/struct.nonnull&quot;&gt;NonNull&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/panic.rs.html#213&quot;&gt; [src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3a04a0e424b935aa942b4e198d4f2dfc5b8f81f3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;trait.refunwindsafe&quot;&gt;RefUnwindSafe&lt;/a&gt; + ?&lt;a href=&quot;../marker/trait.sized&quot;&gt;Sized&lt;/a&gt;&amp;gt; UnwindSafe for &lt;a href=&quot;../rc/struct.rc&quot;&gt;Rc&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/panic.rs.html#225&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;trait.refunwindsafe&quot;&gt;RefUnwindSafe&lt;/a&gt; + ?&lt;a href=&quot;../marker/trait.sized&quot;&gt;Sized&lt;/a&gt;&amp;gt; UnwindSafe for &lt;a href=&quot;../rc/struct.rc&quot;&gt;Rc&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/panic.rs.html#225&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7fbde3b1d65d03dac73129686e3bb3f54ab756c4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;trait.refunwindsafe&quot;&gt;RefUnwindSafe&lt;/a&gt; + ?&lt;a href=&quot;../marker/trait.sized&quot;&gt;Sized&lt;/a&gt;&amp;gt; UnwindSafe for &lt;a href=&quot;../sync/struct.arc&quot;&gt;Arc&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/panic.rs.html#227&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;trait.refunwindsafe&quot;&gt;RefUnwindSafe&lt;/a&gt; + ?&lt;a href=&quot;../marker/trait.sized&quot;&gt;Sized&lt;/a&gt;&amp;gt; UnwindSafe for &lt;a href=&quot;../sync/struct.arc&quot;&gt;Arc&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/panic.rs.html#227&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="86bb2fb48894f00c3e4a9d3a44f707fc39285565" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;trait.send&quot;&gt;Send&lt;/a&gt;&amp;gt; Send for &lt;a href=&quot;../sync/mpsc/struct.receiver&quot;&gt;Receiver&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/mpsc/mod.rs.html#325&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;trait.send&quot;&gt;Send&lt;/a&gt;&amp;gt; Send for &lt;a href=&quot;../sync/mpsc/struct.receiver&quot;&gt;Receiver&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/mpsc/mod.rs.html#325&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5de29965db047bd3060e3a4827dc15ddb825bcbd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;trait.send&quot;&gt;Send&lt;/a&gt;&amp;gt; Send for &lt;a href=&quot;../sync/mpsc/struct.sender&quot;&gt;Sender&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/mpsc/mod.rs.html#485&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;trait.send&quot;&gt;Send&lt;/a&gt;&amp;gt; Send for &lt;a href=&quot;../sync/mpsc/struct.sender&quot;&gt;Sender&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/mpsc/mod.rs.html#485&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="dc40cdad592341fddce7f1c9fef4ecdabc9011d9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;trait.send&quot;&gt;Send&lt;/a&gt;&amp;gt; Send for &lt;a href=&quot;../sync/mpsc/struct.syncsender&quot;&gt;SyncSender&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/mpsc/mod.rs.html#543&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;trait.send&quot;&gt;Send&lt;/a&gt;&amp;gt; Send for &lt;a href=&quot;../sync/mpsc/struct.syncsender&quot;&gt;SyncSender&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/mpsc/mod.rs.html#543&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="fb6e95222b6832ab61746d4a8162bc548e204647" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;trait.unwindsafe&quot;&gt;UnwindSafe&lt;/a&gt; + ?&lt;a href=&quot;../marker/trait.sized&quot;&gt;Sized&lt;/a&gt;&amp;gt; &lt;a href=&quot;trait.unwindsafe&quot;&gt;UnwindSafe&lt;/a&gt; for Unique&amp;lt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/panic.rs.html#211&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;trait.unwindsafe&quot;&gt;UnwindSafe&lt;/a&gt; + ?&lt;a href=&quot;../marker/trait.sized&quot;&gt;Sized&lt;/a&gt;&amp;gt; &lt;a href=&quot;trait.unwindsafe&quot;&gt;UnwindSafe&lt;/a&gt; for Unique&amp;lt;T&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/panic.rs.html#211&quot;&gt;[SRC]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a75d9d6ffdeb332f80c0923f6135204fa63f8a26" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;T:&amp;nbsp;?&lt;a href=&quot;../marker/trait.sized&quot;&gt;Sized&lt;/a&gt; + &lt;a href=&quot;../default/trait.default&quot;&gt;Default&lt;/a&gt;&amp;gt; &lt;a href=&quot;../default/trait.default&quot;&gt;Default&lt;/a&gt; for &lt;a href=&quot;struct.mutex&quot;&gt;Mutex&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/mutex.rs.html#387-392&quot;&gt;[src]&lt;/a&gt;1.10.0</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;T:&amp;nbsp;?&lt;a href=&quot;../marker/trait.sized&quot;&gt;Sized&lt;/a&gt; + &lt;a href=&quot;../default/trait.default&quot;&gt;Default&lt;/a&gt;&amp;gt; &lt;a href=&quot;../default/trait.default&quot;&gt;Default&lt;/a&gt; for &lt;a href=&quot;struct.mutex&quot;&gt;Mutex&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/mutex.rs.html#387-392&quot;&gt;[SRC]&lt;/a&gt; 1.10.0</target>
        </trans-unit>
        <trans-unit id="21f0accbae517f3223b98f567166bddcda0b880e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;T:&amp;nbsp;?&lt;a href=&quot;../marker/trait.sized&quot;&gt;Sized&lt;/a&gt; + &lt;a href=&quot;../fmt/trait.debug&quot;&gt;Debug&lt;/a&gt;&amp;gt; &lt;a href=&quot;../fmt/trait.debug&quot;&gt;Debug&lt;/a&gt; for &lt;a href=&quot;struct.mutex&quot;&gt;Mutex&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/mutex.rs.html#395-414&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;T:&amp;nbsp;?&lt;a href=&quot;../marker/trait.sized&quot;&gt;Sized&lt;/a&gt; + &lt;a href=&quot;../fmt/trait.debug&quot;&gt;Debug&lt;/a&gt;&amp;gt; &lt;a href=&quot;../fmt/trait.debug&quot;&gt;Debug&lt;/a&gt; for &lt;a href=&quot;struct.mutex&quot;&gt;Mutex&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/mutex.rs.html#395-414&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="426b4e32fd7b248566c9917d920f61e47becdffc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;T:&amp;nbsp;?&lt;a href=&quot;../marker/trait.sized&quot;&gt;Sized&lt;/a&gt; + &lt;a href=&quot;../fmt/trait.debug&quot;&gt;Debug&lt;/a&gt;&amp;gt; &lt;a href=&quot;../fmt/trait.debug&quot;&gt;Debug&lt;/a&gt; for &lt;a href=&quot;struct.rwlock&quot;&gt;RwLock&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/rwlock.rs.html#423-442&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;T:&amp;nbsp;?&lt;a href=&quot;../marker/trait.sized&quot;&gt;Sized&lt;/a&gt; + &lt;a href=&quot;../fmt/trait.debug&quot;&gt;Debug&lt;/a&gt;&amp;gt; &lt;a href=&quot;../fmt/trait.debug&quot;&gt;Debug&lt;/a&gt; for &lt;a href=&quot;struct.rwlock&quot;&gt;RwLock&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/rwlock.rs.html#423-442&quot;&gt;[src]에 &lt;/a&gt;대한 디버그</target>
        </trans-unit>
        <trans-unit id="10ca7c9b2ccea9a05f297f1066d3408e47ce4775" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;T:&amp;nbsp;?&lt;a href=&quot;../marker/trait.sized&quot;&gt;Sized&lt;/a&gt; + &lt;a href=&quot;../marker/trait.send&quot;&gt;Send&lt;/a&gt; + &lt;a href=&quot;../marker/trait.sync&quot;&gt;Sync&lt;/a&gt;&amp;gt; &lt;a href=&quot;../marker/trait.sync&quot;&gt;Sync&lt;/a&gt; for &lt;a href=&quot;struct.rwlock&quot;&gt;RwLock&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/rwlock.rs.html#76&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;T:&amp;nbsp;?&lt;a href=&quot;../marker/trait.sized&quot;&gt;Sized&lt;/a&gt; + &lt;a href=&quot;../marker/trait.send&quot;&gt;Send&lt;/a&gt; + &lt;a href=&quot;../marker/trait.sync&quot;&gt;Sync&lt;/a&gt;&amp;gt; &lt;a href=&quot;../marker/trait.sync&quot;&gt;Sync&lt;/a&gt; for &lt;a href=&quot;struct.rwlock&quot;&gt;RwLock&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/rwlock.rs.html#76&quot;&gt;[SRC]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d15812025a9f2d288dd7bc31b93dd1fbb9e17e97" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;T:&amp;nbsp;?&lt;a href=&quot;../marker/trait.sized&quot;&gt;Sized&lt;/a&gt; + &lt;a href=&quot;../marker/trait.send&quot;&gt;Send&lt;/a&gt;&amp;gt; &lt;a href=&quot;../marker/trait.send&quot;&gt;Send&lt;/a&gt; for &lt;a href=&quot;struct.mutex&quot;&gt;Mutex&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/mutex.rs.html#125&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;T:&amp;nbsp;?&lt;a href=&quot;../marker/trait.sized&quot;&gt;Sized&lt;/a&gt; + &lt;a href=&quot;../marker/trait.send&quot;&gt;Send&lt;/a&gt;&amp;gt; &lt;a href=&quot;../marker/trait.send&quot;&gt;Send&lt;/a&gt; for &lt;a href=&quot;struct.mutex&quot;&gt;Mutex&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/mutex.rs.html#125&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3d478115af173168bc28efb242edd30f78a0a9c8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;T:&amp;nbsp;?&lt;a href=&quot;../marker/trait.sized&quot;&gt;Sized&lt;/a&gt; + &lt;a href=&quot;../marker/trait.send&quot;&gt;Send&lt;/a&gt;&amp;gt; &lt;a href=&quot;../marker/trait.send&quot;&gt;Send&lt;/a&gt; for &lt;a href=&quot;struct.rwlock&quot;&gt;RwLock&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/rwlock.rs.html#74&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;T:&amp;nbsp;?&lt;a href=&quot;../marker/trait.sized&quot;&gt;Sized&lt;/a&gt; + &lt;a href=&quot;../marker/trait.send&quot;&gt;Send&lt;/a&gt;&amp;gt; &lt;a href=&quot;../marker/trait.send&quot;&gt;Send&lt;/a&gt; for &lt;a href=&quot;struct.rwlock&quot;&gt;RwLock&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/rwlock.rs.html#74&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4d23a118b38589cf456b6f9e5d04b1eca995f2ea" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;T:&amp;nbsp;?&lt;a href=&quot;../marker/trait.sized&quot;&gt;Sized&lt;/a&gt; + &lt;a href=&quot;../marker/trait.send&quot;&gt;Send&lt;/a&gt;&amp;gt; &lt;a href=&quot;../marker/trait.sync&quot;&gt;Sync&lt;/a&gt; for &lt;a href=&quot;struct.mutex&quot;&gt;Mutex&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/mutex.rs.html#127&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;T:&amp;nbsp;?&lt;a href=&quot;../marker/trait.sized&quot;&gt;Sized&lt;/a&gt; + &lt;a href=&quot;../marker/trait.send&quot;&gt;Send&lt;/a&gt;&amp;gt; &lt;a href=&quot;../marker/trait.sync&quot;&gt;Sync&lt;/a&gt; for &lt;a href=&quot;struct.mutex&quot;&gt;Mutex&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/mutex.rs.html#127&quot;&gt; [src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5622e69c25a0e1fae7563d8e79d86a1f6e2c4faa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;T:&amp;nbsp;?&lt;a href=&quot;../marker/trait.sized&quot;&gt;Sized&lt;/a&gt; + &lt;a href=&quot;trait.debug&quot;&gt;Debug&lt;/a&gt;&amp;gt; Debug for &lt;a href=&quot;../sync/struct.mutex&quot;&gt;Mutex&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/mutex.rs.html#395-414&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;T:&amp;nbsp;?&lt;a href=&quot;../marker/trait.sized&quot;&gt;Sized&lt;/a&gt; + &lt;a href=&quot;trait.debug&quot;&gt;Debug&lt;/a&gt;&amp;gt; Debug for &lt;a href=&quot;../sync/struct.mutex&quot;&gt;Mutex&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/mutex.rs.html#395-414&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="61133ea873c26ca3c0f42c3ac1483928a466b954" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;T:&amp;nbsp;?&lt;a href=&quot;../marker/trait.sized&quot;&gt;Sized&lt;/a&gt; + &lt;a href=&quot;trait.debug&quot;&gt;Debug&lt;/a&gt;&amp;gt; Debug for &lt;a href=&quot;../sync/struct.rwlock&quot;&gt;RwLock&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/rwlock.rs.html#423-442&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;T:&amp;nbsp;?&lt;a href=&quot;../marker/trait.sized&quot;&gt;Sized&lt;/a&gt; + &lt;a href=&quot;trait.debug&quot;&gt;Debug&lt;/a&gt;&amp;gt; Debug for &lt;a href=&quot;../sync/struct.rwlock&quot;&gt;RwLock&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/rwlock.rs.html#423-442&quot;&gt;[src]에 &lt;/a&gt;대한 디버그</target>
        </trans-unit>
        <trans-unit id="4476a1e1ec362ee5166c359729ed71e7cc594318" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;T:&amp;nbsp;?&lt;a href=&quot;../marker/trait.sized&quot;&gt;Sized&lt;/a&gt; + &lt;a href=&quot;trait.default&quot;&gt;Default&lt;/a&gt;&amp;gt; Default for &lt;a href=&quot;../sync/struct.mutex&quot;&gt;Mutex&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/mutex.rs.html#387-392&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;T:&amp;nbsp;?&lt;a href=&quot;../marker/trait.sized&quot;&gt;Sized&lt;/a&gt; + &lt;a href=&quot;trait.default&quot;&gt;Default&lt;/a&gt;&amp;gt; Default for &lt;a href=&quot;../sync/struct.mutex&quot;&gt;Mutex&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/mutex.rs.html#387-392&quot;&gt;[src]의 &lt;/a&gt;기본값</target>
        </trans-unit>
        <trans-unit id="4b11ee55ef39854f9a6c7d40f9bff41e13d944f6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;T:&amp;nbsp;?&lt;a href=&quot;../marker/trait.sized&quot;&gt;Sized&lt;/a&gt;&amp;gt; !&lt;a href=&quot;../panic/trait.refunwindsafe&quot;&gt;RefUnwindSafe&lt;/a&gt; for &lt;a href=&quot;struct.unsafecell&quot;&gt;UnsafeCell&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/panic.rs.html#234&quot;&gt;[src]&lt;/a&gt;1.9.0</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;T:&amp;nbsp;?&lt;a href=&quot;../marker/trait.sized&quot;&gt;Sized&lt;/a&gt;&amp;gt; !&lt;a href=&quot;../panic/trait.refunwindsafe&quot;&gt;RefUnwindSafe&lt;/a&gt; for &lt;a href=&quot;struct.unsafecell&quot;&gt;UnsafeCell&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/panic.rs.html#234&quot;&gt;[src]&lt;/a&gt; 1.9.0에 대한 RefUnwindSafe</target>
        </trans-unit>
        <trans-unit id="e36d1bd827b5a97b3ab3cc61a66c275eb55a769c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;T:&amp;nbsp;?&lt;a href=&quot;../marker/trait.sized&quot;&gt;Sized&lt;/a&gt;&amp;gt; !RefUnwindSafe for &lt;a href=&quot;../cell/struct.unsafecell&quot;&gt;UnsafeCell&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/panic.rs.html#234&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;T:&amp;nbsp;?&lt;a href=&quot;../marker/trait.sized&quot;&gt;Sized&lt;/a&gt;&amp;gt; !RefUnwindSafe for &lt;a href=&quot;../cell/struct.unsafecell&quot;&gt;UnsafeCell&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/panic.rs.html#234&quot;&gt;[src] &lt;/a&gt;크기 &amp;gt;! RefUnwindSafe</target>
        </trans-unit>
        <trans-unit id="0875182ba6edc27f33841d8dc48817e107c835de" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;T:&amp;nbsp;?&lt;a href=&quot;../marker/trait.sized&quot;&gt;Sized&lt;/a&gt;&amp;gt; &lt;a href=&quot;../ops/trait.drop&quot;&gt;Drop&lt;/a&gt; for &lt;a href=&quot;struct.mutex&quot;&gt;Mutex&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/mutex.rs.html#364-373&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;T:&amp;nbsp;?&lt;a href=&quot;../marker/trait.sized&quot;&gt;Sized&lt;/a&gt;&amp;gt; &lt;a href=&quot;../ops/trait.drop&quot;&gt;Drop&lt;/a&gt; for &lt;a href=&quot;struct.mutex&quot;&gt;Mutex&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/mutex.rs.html#364-373&quot;&gt;[SRC]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="17e73aece41076d55e7be7ca00cd2dcc11dd7de3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;T:&amp;nbsp;?&lt;a href=&quot;../marker/trait.sized&quot;&gt;Sized&lt;/a&gt;&amp;gt; &lt;a href=&quot;../ops/trait.drop&quot;&gt;Drop&lt;/a&gt; for &lt;a href=&quot;struct.rwlock&quot;&gt;RwLock&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/rwlock.rs.html#415-420&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;T:&amp;nbsp;?&lt;a href=&quot;../marker/trait.sized&quot;&gt;Sized&lt;/a&gt;&amp;gt; &lt;a href=&quot;../ops/trait.drop&quot;&gt;Drop&lt;/a&gt; for &lt;a href=&quot;struct.rwlock&quot;&gt;RwLock&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/rwlock.rs.html#415-420&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="479108d446251c4267e608c67e65b43bc43c25e9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;T:&amp;nbsp;?&lt;a href=&quot;../marker/trait.sized&quot;&gt;Sized&lt;/a&gt;&amp;gt; &lt;a href=&quot;../panic/trait.refunwindsafe&quot;&gt;RefUnwindSafe&lt;/a&gt; for &lt;a href=&quot;struct.mutex&quot;&gt;Mutex&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/panic.rs.html#239&quot;&gt;[src]&lt;/a&gt;1.12.0</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;T:&amp;nbsp;?&lt;a href=&quot;../marker/trait.sized&quot;&gt;Sized&lt;/a&gt;&amp;gt; &lt;a href=&quot;../panic/trait.refunwindsafe&quot;&gt;RefUnwindSafe&lt;/a&gt; for &lt;a href=&quot;struct.mutex&quot;&gt;Mutex&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/panic.rs.html#239&quot;&gt;[SRC]&lt;/a&gt; 1.12.0</target>
        </trans-unit>
        <trans-unit id="ff703a5df5cd41e4641ba4b31c3959dc838f8798" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;T:&amp;nbsp;?&lt;a href=&quot;../marker/trait.sized&quot;&gt;Sized&lt;/a&gt;&amp;gt; &lt;a href=&quot;../panic/trait.refunwindsafe&quot;&gt;RefUnwindSafe&lt;/a&gt; for &lt;a href=&quot;struct.rwlock&quot;&gt;RwLock&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/panic.rs.html#241&quot;&gt;[src]&lt;/a&gt;1.12.0</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;T:&amp;nbsp;?&lt;a href=&quot;../marker/trait.sized&quot;&gt;Sized&lt;/a&gt;&amp;gt; &lt;a href=&quot;../panic/trait.refunwindsafe&quot;&gt;RefUnwindSafe&lt;/a&gt; for &lt;a href=&quot;struct.rwlock&quot;&gt;RwLock&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/panic.rs.html#241&quot;&gt;[SRC]&lt;/a&gt; 1.12.0</target>
        </trans-unit>
        <trans-unit id="99116f78913fcb684f5583ecc25b8344de84705c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;T:&amp;nbsp;?&lt;a href=&quot;../marker/trait.sized&quot;&gt;Sized&lt;/a&gt;&amp;gt; &lt;a href=&quot;../panic/trait.unwindsafe&quot;&gt;UnwindSafe&lt;/a&gt; for &lt;a href=&quot;struct.mutex&quot;&gt;Mutex&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/panic.rs.html#215&quot;&gt;[src]&lt;/a&gt;1.9.0</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;T:&amp;nbsp;?&lt;a href=&quot;../marker/trait.sized&quot;&gt;Sized&lt;/a&gt;&amp;gt; &lt;a href=&quot;../panic/trait.unwindsafe&quot;&gt;UnwindSafe&lt;/a&gt; for &lt;a href=&quot;struct.mutex&quot;&gt;Mutex&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/panic.rs.html#215&quot;&gt;[src]&lt;/a&gt; 1.9.0에 대해 UnwindSafe</target>
        </trans-unit>
        <trans-unit id="d49c129728719b5058c4e69ac308b70408120f0c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;T:&amp;nbsp;?&lt;a href=&quot;../marker/trait.sized&quot;&gt;Sized&lt;/a&gt;&amp;gt; &lt;a href=&quot;../panic/trait.unwindsafe&quot;&gt;UnwindSafe&lt;/a&gt; for &lt;a href=&quot;struct.rwlock&quot;&gt;RwLock&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/panic.rs.html#217&quot;&gt;[src]&lt;/a&gt;1.9.0</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;T:&amp;nbsp;?&lt;a href=&quot;../marker/trait.sized&quot;&gt;Sized&lt;/a&gt;&amp;gt; &lt;a href=&quot;../panic/trait.unwindsafe&quot;&gt;UnwindSafe&lt;/a&gt; for &lt;a href=&quot;struct.rwlock&quot;&gt;RwLock&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/panic.rs.html#217&quot;&gt;[src]&lt;/a&gt; 1.9.0에 대해 UnwindSafe</target>
        </trans-unit>
        <trans-unit id="82828c10eb084ba48ba0e360b22b553e1cf0ba89" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;T:&amp;nbsp;?&lt;a href=&quot;../marker/trait.sized&quot;&gt;Sized&lt;/a&gt;&amp;gt; &lt;a href=&quot;struct.mutex&quot;&gt;Mutex&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/mutex.rs.html#181-361&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;T:&amp;nbsp;?&lt;a href=&quot;../marker/trait.sized&quot;&gt;Sized&lt;/a&gt;&amp;gt; &lt;a href=&quot;struct.mutex&quot;&gt;Mutex&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/mutex.rs.html#181-361&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8d03e1bf77b0a7e4ef27d5ec22e1b135af619af6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;T:&amp;nbsp;?&lt;a href=&quot;../marker/trait.sized&quot;&gt;Sized&lt;/a&gt;&amp;gt; &lt;a href=&quot;struct.rwlock&quot;&gt;RwLock&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/rwlock.rs.html#141-412&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;T:&amp;nbsp;?&lt;a href=&quot;../marker/trait.sized&quot;&gt;Sized&lt;/a&gt;&amp;gt; &lt;a href=&quot;struct.rwlock&quot;&gt;RwLock&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/rwlock.rs.html#141-412&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1e402ffde266c5287460a89c4ded4de93e035ccf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;T:&amp;nbsp;?&lt;a href=&quot;../marker/trait.sized&quot;&gt;Sized&lt;/a&gt;&amp;gt; Drop for &lt;a href=&quot;../sync/struct.mutex&quot;&gt;Mutex&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/mutex.rs.html#364-373&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;T:&amp;nbsp;?&lt;a href=&quot;../marker/trait.sized&quot;&gt;Sized&lt;/a&gt;&amp;gt; Drop for &lt;a href=&quot;../sync/struct.mutex&quot;&gt;Mutex&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/mutex.rs.html#364-373&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a8aa97a0fa40a9ae50b9c91acc0934f28d702b27" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;T:&amp;nbsp;?&lt;a href=&quot;../marker/trait.sized&quot;&gt;Sized&lt;/a&gt;&amp;gt; Drop for &lt;a href=&quot;../sync/struct.rwlock&quot;&gt;RwLock&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/rwlock.rs.html#415-420&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;T:&amp;nbsp;?&lt;a href=&quot;../marker/trait.sized&quot;&gt;Sized&lt;/a&gt;&amp;gt; Drop for &lt;a href=&quot;../sync/struct.rwlock&quot;&gt;RwLock&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/rwlock.rs.html#415-420&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="23a963f8d278e1c662a1c19b4cb0a362b55a09bc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;T:&amp;nbsp;?&lt;a href=&quot;../marker/trait.sized&quot;&gt;Sized&lt;/a&gt;&amp;gt; RefUnwindSafe for &lt;a href=&quot;../sync/struct.mutex&quot;&gt;Mutex&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/panic.rs.html#239&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;T:&amp;nbsp;?&lt;a href=&quot;../marker/trait.sized&quot;&gt;Sized&lt;/a&gt;&amp;gt; RefUnwindSafe for &lt;a href=&quot;../sync/struct.mutex&quot;&gt;Mutex&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/panic.rs.html#239&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d79cca7d526d86fe06b5a84a67d124c680fbf505" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;T:&amp;nbsp;?&lt;a href=&quot;../marker/trait.sized&quot;&gt;Sized&lt;/a&gt;&amp;gt; RefUnwindSafe for &lt;a href=&quot;../sync/struct.rwlock&quot;&gt;RwLock&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/panic.rs.html#241&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;T:&amp;nbsp;?&lt;a href=&quot;../marker/trait.sized&quot;&gt;Sized&lt;/a&gt;&amp;gt; RefUnwindSafe for &lt;a href=&quot;../sync/struct.rwlock&quot;&gt;RwLock&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/panic.rs.html#241&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="16f78879f45a31cc98c5a5e6ecb2909bc430eb45" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;T:&amp;nbsp;?&lt;a href=&quot;../marker/trait.sized&quot;&gt;Sized&lt;/a&gt;&amp;gt; UnwindSafe for &lt;a href=&quot;../sync/struct.mutex&quot;&gt;Mutex&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/panic.rs.html#215&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;T:&amp;nbsp;?&lt;a href=&quot;../marker/trait.sized&quot;&gt;Sized&lt;/a&gt;&amp;gt; UnwindSafe for &lt;a href=&quot;../sync/struct.mutex&quot;&gt;Mutex&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/panic.rs.html#215&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f8bdf8c174ec2c046ca5cb18a26233600a2380b9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;T:&amp;nbsp;?&lt;a href=&quot;../marker/trait.sized&quot;&gt;Sized&lt;/a&gt;&amp;gt; UnwindSafe for &lt;a href=&quot;../sync/struct.rwlock&quot;&gt;RwLock&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/panic.rs.html#217&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;T:&amp;nbsp;?&lt;a href=&quot;../marker/trait.sized&quot;&gt;Sized&lt;/a&gt;&amp;gt; UnwindSafe for &lt;a href=&quot;../sync/struct.rwlock&quot;&gt;RwLock&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/panic.rs.html#217&quot;&gt; [src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="66612e1235f9b75e87508148e808899704c721b9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;T:&amp;nbsp;?&lt;a href=&quot;trait.sized&quot;&gt;Sized&lt;/a&gt; + &lt;a href=&quot;trait.send&quot;&gt;Send&lt;/a&gt; + &lt;a href=&quot;trait.sync&quot;&gt;Sync&lt;/a&gt;&amp;gt; Sync for &lt;a href=&quot;../sync/struct.rwlock&quot;&gt;RwLock&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/rwlock.rs.html#76&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;T:&amp;nbsp;?&lt;a href=&quot;trait.sized&quot;&gt;Sized&lt;/a&gt; + &lt;a href=&quot;trait.send&quot;&gt;Send&lt;/a&gt; + &lt;a href=&quot;trait.sync&quot;&gt;Sync&lt;/a&gt;&amp;gt; Sync for &lt;a href=&quot;../sync/struct.rwlock&quot;&gt;RwLock&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/rwlock.rs.html#76&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4e0aa75f4f62563ee0d5e0897cd51ba4e76b614e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;T:&amp;nbsp;?&lt;a href=&quot;trait.sized&quot;&gt;Sized&lt;/a&gt; + &lt;a href=&quot;trait.send&quot;&gt;Send&lt;/a&gt;&amp;gt; Send for &lt;a href=&quot;../sync/struct.mutex&quot;&gt;Mutex&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/mutex.rs.html#125&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;T:&amp;nbsp;?&lt;a href=&quot;trait.sized&quot;&gt;Sized&lt;/a&gt; + &lt;a href=&quot;trait.send&quot;&gt;Send&lt;/a&gt;&amp;gt; Send for &lt;a href=&quot;../sync/struct.mutex&quot;&gt;Mutex&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/mutex.rs.html#125&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="35dbddc158549210d432825a5ef0ab1aec80edc4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;T:&amp;nbsp;?&lt;a href=&quot;trait.sized&quot;&gt;Sized&lt;/a&gt; + &lt;a href=&quot;trait.send&quot;&gt;Send&lt;/a&gt;&amp;gt; Send for &lt;a href=&quot;../sync/struct.rwlock&quot;&gt;RwLock&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/rwlock.rs.html#74&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;T:&amp;nbsp;?&lt;a href=&quot;trait.sized&quot;&gt;Sized&lt;/a&gt; + &lt;a href=&quot;trait.send&quot;&gt;Send&lt;/a&gt;&amp;gt; Send for &lt;a href=&quot;../sync/struct.rwlock&quot;&gt;RwLock&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/rwlock.rs.html#74&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0a30163738ba6c6b99855e56e576d5e08b2be4d8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;T:&amp;nbsp;?&lt;a href=&quot;trait.sized&quot;&gt;Sized&lt;/a&gt; + &lt;a href=&quot;trait.send&quot;&gt;Send&lt;/a&gt;&amp;gt; Sync for &lt;a href=&quot;../sync/struct.mutex&quot;&gt;Mutex&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/mutex.rs.html#127&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;T:&amp;nbsp;?&lt;a href=&quot;trait.sized&quot;&gt;Sized&lt;/a&gt; + &lt;a href=&quot;trait.send&quot;&gt;Send&lt;/a&gt;&amp;gt; Sync for &lt;a href=&quot;../sync/struct.mutex&quot;&gt;Mutex&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/mutex.rs.html#127&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4b3d70b5076759acee505bf39303e05b734856c3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;W&amp;gt; &lt;a href=&quot;../convert/trait.from&quot;&gt;From&lt;/a&gt;&amp;lt;&lt;a href=&quot;struct.intoinnererror&quot;&gt;IntoInnerError&lt;/a&gt;&amp;lt;W&amp;gt;&amp;gt; for &lt;a href=&quot;struct.error&quot;&gt;Error&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/io/buffered.rs.html#728-730&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;W&amp;gt; &lt;a href=&quot;../convert/trait.from&quot;&gt;From&lt;/a&gt;&amp;lt;&lt;a href=&quot;struct.intoinnererror&quot;&gt;IntoInnerError&lt;/a&gt;&amp;lt;W&amp;gt;&amp;gt; for &lt;a href=&quot;struct.error&quot;&gt;Error&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/io/buffered.rs.html#728-730&quot;&gt; [src]의 경우 &lt;/a&gt;&amp;lt; IntoInnerError &amp;lt;W &amp;gt;&amp;gt; 에서 impl &amp;lt;W&amp;gt;</target>
        </trans-unit>
        <trans-unit id="a02c980049cb4878538706a3cc36de84546d2bea" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;W&amp;gt; &lt;a href=&quot;../fmt/trait.display&quot;&gt;Display&lt;/a&gt; for &lt;a href=&quot;struct.intoinnererror&quot;&gt;IntoInnerError&lt;/a&gt;&amp;lt;W&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/io/buffered.rs.html#740-744&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;W&amp;gt; &lt;a href=&quot;../fmt/trait.display&quot;&gt;Display&lt;/a&gt; for &lt;a href=&quot;struct.intoinnererror&quot;&gt;IntoInnerError&lt;/a&gt;&amp;lt;W&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/io/buffered.rs.html#740-744&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e0c02314ad81257bccb25ccddbfcb050d7f11081" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;W&amp;gt; &lt;a href=&quot;struct.intoinnererror&quot;&gt;IntoInnerError&lt;/a&gt;&amp;lt;W&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/io/buffered.rs.html#661-725&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;W&amp;gt; &lt;a href=&quot;struct.intoinnererror&quot;&gt;IntoInnerError&lt;/a&gt;&amp;lt;W&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/io/buffered.rs.html#661-725&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="da74d5273ecef506e1f14079146ee6de01bc17f4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;W&amp;gt; Display for &lt;a href=&quot;../io/struct.intoinnererror&quot;&gt;IntoInnerError&lt;/a&gt;&amp;lt;W&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/io/buffered.rs.html#740-744&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;W&amp;gt; Display for &lt;a href=&quot;../io/struct.intoinnererror&quot;&gt;IntoInnerError&lt;/a&gt;&amp;lt;W&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/io/buffered.rs.html#740-744&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="fd2349b273a2ba9a0189c550844428f21dbc36d6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;W&amp;gt; From&amp;lt;&lt;a href=&quot;../io/struct.intoinnererror&quot;&gt;IntoInnerError&lt;/a&gt;&amp;lt;W&amp;gt;&amp;gt; for &lt;a href=&quot;../io/struct.error&quot;&gt;Error&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/io/buffered.rs.html#728-730&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;W&amp;gt; From&amp;lt;&lt;a href=&quot;../io/struct.intoinnererror&quot;&gt;IntoInnerError&lt;/a&gt;&amp;lt;W&amp;gt;&amp;gt; for &lt;a href=&quot;../io/struct.error&quot;&gt;Error&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/io/buffered.rs.html#728-730&quot;&gt; [src]의 경우 &lt;/a&gt;impl &amp;lt;W&amp;gt; 시작 &amp;lt; IntoInnerError &amp;lt;W &amp;gt;&amp;gt;</target>
        </trans-unit>
        <trans-unit id="93c937c3b18bef016c8cd4d96a5daaf1d1d79aaa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;W:&amp;nbsp;&lt;a href=&quot;../fmt/trait.debug&quot;&gt;Debug&lt;/a&gt;&amp;gt; &lt;a href=&quot;../fmt/trait.debug&quot;&gt;Debug&lt;/a&gt; for &lt;a href=&quot;struct.intoinnererror&quot;&gt;IntoInnerError&lt;/a&gt;&amp;lt;W&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/io/buffered.rs.html#445&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;W:&amp;nbsp;&lt;a href=&quot;../fmt/trait.debug&quot;&gt;Debug&lt;/a&gt;&amp;gt; &lt;a href=&quot;../fmt/trait.debug&quot;&gt;Debug&lt;/a&gt; for &lt;a href=&quot;struct.intoinnererror&quot;&gt;IntoInnerError&lt;/a&gt;&amp;lt;W&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/io/buffered.rs.html#445&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="39725e47fd73db2639a773522885648c64cab5e0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;W:&amp;nbsp;&lt;a href=&quot;../io/trait.write&quot;&gt;Write&lt;/a&gt; + ?&lt;a href=&quot;../marker/trait.sized&quot;&gt;Sized&lt;/a&gt;&amp;gt; &lt;a href=&quot;../io/trait.write&quot;&gt;Write&lt;/a&gt; for &lt;a href=&quot;struct.box&quot;&gt;Box&lt;/a&gt;&amp;lt;W&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/io/impls.rs.html#122-143&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;W:&amp;nbsp;&lt;a href=&quot;../io/trait.write&quot;&gt;Write&lt;/a&gt; + ?&lt;a href=&quot;../marker/trait.sized&quot;&gt;Sized&lt;/a&gt;&amp;gt; &lt;a href=&quot;../io/trait.write&quot;&gt;Write&lt;/a&gt; for &lt;a href=&quot;struct.box&quot;&gt;Box&lt;/a&gt;&amp;lt;W&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/io/impls.rs.html#122-143&quot;&gt;[SRC]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0571f848ab4321a0894cfdc8098b6ade3a09b8ca" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;W:&amp;nbsp;&lt;a href=&quot;../io/trait.write&quot;&gt;Write&lt;/a&gt;&amp;gt; Debug for &lt;a href=&quot;../io/struct.bufwriter&quot;&gt;BufWriter&lt;/a&gt;&amp;lt;W&amp;gt; where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;W: &lt;a href=&quot;trait.debug&quot;&gt;Debug&lt;/a&gt;,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/io/buffered.rs.html#632-639&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;W:&amp;nbsp;&lt;a href=&quot;../io/trait.write&quot;&gt;Write&lt;/a&gt;&amp;gt; Debug for &lt;a href=&quot;../io/struct.bufwriter&quot;&gt;BufWriter&lt;/a&gt;&amp;lt;W&amp;gt; where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;W: &lt;a href=&quot;trait.debug&quot;&gt;Debug&lt;/a&gt;,&amp;nbsp;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/io/buffered.rs.html#632-639&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="790f3ea91c3924d57be998b1eb547aeaccbb1095" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;W:&amp;nbsp;&lt;a href=&quot;../io/trait.write&quot;&gt;Write&lt;/a&gt;&amp;gt; Debug for &lt;a href=&quot;../io/struct.linewriter&quot;&gt;LineWriter&lt;/a&gt;&amp;lt;W&amp;gt; where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;W: &lt;a href=&quot;trait.debug&quot;&gt;Debug&lt;/a&gt;,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/io/buffered.rs.html#982-990&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;W:&amp;nbsp;&lt;a href=&quot;../io/trait.write&quot;&gt;Write&lt;/a&gt;&amp;gt; Debug for &lt;a href=&quot;../io/struct.linewriter&quot;&gt;LineWriter&lt;/a&gt;&amp;lt;W&amp;gt; where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;W: &lt;a href=&quot;trait.debug&quot;&gt;Debug&lt;/a&gt;,&amp;nbsp;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/io/buffered.rs.html#982-990&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="37ba4ba0656c30df13d8744b22aa4b241fc17413" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;W:&amp;nbsp;&lt;a href=&quot;../io/trait.write&quot;&gt;Write&lt;/a&gt;&amp;gt; Drop for &lt;a href=&quot;../io/struct.bufwriter&quot;&gt;BufWriter&lt;/a&gt;&amp;lt;W&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/io/buffered.rs.html#652-659&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;W:&amp;nbsp;&lt;a href=&quot;../io/trait.write&quot;&gt;Write&lt;/a&gt;&amp;gt; Drop for &lt;a href=&quot;../io/struct.bufwriter&quot;&gt;BufWriter&lt;/a&gt;&amp;lt;W&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/io/buffered.rs.html#652-659&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1576b3ac8d9f4046d9b971fba1259a9c48fdb890" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;W:&amp;nbsp;&lt;a href=&quot;../marker/trait.send&quot;&gt;Send&lt;/a&gt; + &lt;a href=&quot;../fmt/trait.debug&quot;&gt;Debug&lt;/a&gt;&amp;gt; &lt;a href=&quot;../error/trait.error&quot;&gt;Error&lt;/a&gt; for &lt;a href=&quot;struct.intoinnererror&quot;&gt;IntoInnerError&lt;/a&gt;&amp;lt;W&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/io/buffered.rs.html#733-737&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;W:&amp;nbsp;&lt;a href=&quot;../marker/trait.send&quot;&gt;Send&lt;/a&gt; + &lt;a href=&quot;../fmt/trait.debug&quot;&gt;Debug&lt;/a&gt;&amp;gt; &lt;a href=&quot;../error/trait.error&quot;&gt;Error&lt;/a&gt; for &lt;a href=&quot;struct.intoinnererror&quot;&gt;IntoInnerError&lt;/a&gt;&amp;lt;W&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/io/buffered.rs.html#733-737&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7ac669904b3d0dde5cf2cb2bca211c1096c9e864" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;W:&amp;nbsp;&lt;a href=&quot;../marker/trait.send&quot;&gt;Send&lt;/a&gt; + &lt;a href=&quot;../fmt/trait.debug&quot;&gt;Debug&lt;/a&gt;&amp;gt; Error for &lt;a href=&quot;../io/struct.intoinnererror&quot;&gt;IntoInnerError&lt;/a&gt;&amp;lt;W&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/io/buffered.rs.html#733-737&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;W:&amp;nbsp;&lt;a href=&quot;../marker/trait.send&quot;&gt;Send&lt;/a&gt; + &lt;a href=&quot;../fmt/trait.debug&quot;&gt;Debug&lt;/a&gt;&amp;gt; Error for &lt;a href=&quot;../io/struct.intoinnererror&quot;&gt;IntoInnerError&lt;/a&gt;&amp;lt;W&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/io/buffered.rs.html#733-737&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3fcaf6d492e5cb1018060dc04c66871b8b188f26" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;W:&amp;nbsp;&lt;a href=&quot;trait.debug&quot;&gt;Debug&lt;/a&gt;&amp;gt; Debug for &lt;a href=&quot;../io/struct.intoinnererror&quot;&gt;IntoInnerError&lt;/a&gt;&amp;lt;W&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/io/buffered.rs.html#445&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;W:&amp;nbsp;&lt;a href=&quot;trait.debug&quot;&gt;Debug&lt;/a&gt;&amp;gt; Debug for &lt;a href=&quot;../io/struct.intoinnererror&quot;&gt;IntoInnerError&lt;/a&gt;&amp;lt;W&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/io/buffered.rs.html#445&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="740b80d5c98687287e286c275264244cc6aaa836" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;W:&amp;nbsp;&lt;a href=&quot;trait.write&quot;&gt;Write&lt;/a&gt; + &lt;a href=&quot;trait.seek&quot;&gt;Seek&lt;/a&gt;&amp;gt; &lt;a href=&quot;trait.seek&quot;&gt;Seek&lt;/a&gt; for &lt;a href=&quot;struct.bufwriter&quot;&gt;BufWriter&lt;/a&gt;&amp;lt;W&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/io/buffered.rs.html#642-649&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;W:&amp;nbsp;&lt;a href=&quot;trait.write&quot;&gt;Write&lt;/a&gt; + &lt;a href=&quot;trait.seek&quot;&gt;Seek&lt;/a&gt;&amp;gt; &lt;a href=&quot;trait.seek&quot;&gt;Seek&lt;/a&gt; for &lt;a href=&quot;struct.bufwriter&quot;&gt;BufWriter&lt;/a&gt;&amp;lt;W&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/io/buffered.rs.html#642-649&quot;&gt;[SRC]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="81783591c4c71cc231ef91a47adc0c7e01608661" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;W:&amp;nbsp;&lt;a href=&quot;trait.write&quot;&gt;Write&lt;/a&gt; + &lt;a href=&quot;trait.seek&quot;&gt;Seek&lt;/a&gt;&amp;gt; Seek for &lt;a href=&quot;struct.bufwriter&quot;&gt;BufWriter&lt;/a&gt;&amp;lt;W&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/io/buffered.rs.html#642-649&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;W:&amp;nbsp;&lt;a href=&quot;trait.write&quot;&gt;Write&lt;/a&gt; + &lt;a href=&quot;trait.seek&quot;&gt;Seek&lt;/a&gt;&amp;gt; Seek for &lt;a href=&quot;struct.bufwriter&quot;&gt;BufWriter&lt;/a&gt;&amp;lt;W&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/io/buffered.rs.html#642-649&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="aec03852553c9808fcb710703899d3c35bc25e79" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;W:&amp;nbsp;&lt;a href=&quot;trait.write&quot;&gt;Write&lt;/a&gt; + ?&lt;a href=&quot;../marker/trait.sized&quot;&gt;Sized&lt;/a&gt;&amp;gt; Write for &lt;a href=&quot;../boxed/struct.box&quot;&gt;Box&lt;/a&gt;&amp;lt;W&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/io/impls.rs.html#122-143&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;W:&amp;nbsp;&lt;a href=&quot;trait.write&quot;&gt;Write&lt;/a&gt; + ?&lt;a href=&quot;../marker/trait.sized&quot;&gt;Sized&lt;/a&gt;&amp;gt; Write for &lt;a href=&quot;../boxed/struct.box&quot;&gt;Box&lt;/a&gt;&amp;lt;W&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/io/impls.rs.html#122-143&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="90e015522f7a0f2726d5d632e69d5f3c81e379d0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;W:&amp;nbsp;&lt;a href=&quot;trait.write&quot;&gt;Write&lt;/a&gt;&amp;gt; &lt;a href=&quot;../fmt/trait.debug&quot;&gt;Debug&lt;/a&gt; for &lt;a href=&quot;struct.bufwriter&quot;&gt;BufWriter&lt;/a&gt;&amp;lt;W&amp;gt; where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;W: &lt;a href=&quot;../fmt/trait.debug&quot;&gt;Debug&lt;/a&gt;,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/io/buffered.rs.html#632-639&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;W:&amp;nbsp;&lt;a href=&quot;trait.write&quot;&gt;Write&lt;/a&gt;&amp;gt; &lt;a href=&quot;../fmt/trait.debug&quot;&gt;Debug&lt;/a&gt; for &lt;a href=&quot;struct.bufwriter&quot;&gt;BufWriter&lt;/a&gt;&amp;lt;W&amp;gt; where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;W: &lt;a href=&quot;../fmt/trait.debug&quot;&gt;Debug&lt;/a&gt;,&amp;nbsp;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/io/buffered.rs.html#632-639&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="bd4d39d703899b0d1378d0740724155e2bbf033d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;W:&amp;nbsp;&lt;a href=&quot;trait.write&quot;&gt;Write&lt;/a&gt;&amp;gt; &lt;a href=&quot;../fmt/trait.debug&quot;&gt;Debug&lt;/a&gt; for &lt;a href=&quot;struct.linewriter&quot;&gt;LineWriter&lt;/a&gt;&amp;lt;W&amp;gt; where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;W: &lt;a href=&quot;../fmt/trait.debug&quot;&gt;Debug&lt;/a&gt;,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/io/buffered.rs.html#982-990&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;W:&amp;nbsp;&lt;a href=&quot;trait.write&quot;&gt;Write&lt;/a&gt;&amp;gt; &lt;a href=&quot;../fmt/trait.debug&quot;&gt;Debug&lt;/a&gt; for &lt;a href=&quot;struct.linewriter&quot;&gt;LineWriter&lt;/a&gt;&amp;lt;W&amp;gt; where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;W: &lt;a href=&quot;../fmt/trait.debug&quot;&gt;Debug&lt;/a&gt;,&amp;nbsp;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/io/buffered.rs.html#982-990&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f9b2d0bea5f580cbc686ba478736c559d47ae885" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;W:&amp;nbsp;&lt;a href=&quot;trait.write&quot;&gt;Write&lt;/a&gt;&amp;gt; &lt;a href=&quot;../ops/trait.drop&quot;&gt;Drop&lt;/a&gt; for &lt;a href=&quot;struct.bufwriter&quot;&gt;BufWriter&lt;/a&gt;&amp;lt;W&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/io/buffered.rs.html#652-659&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;W:&amp;nbsp;&lt;a href=&quot;trait.write&quot;&gt;Write&lt;/a&gt;&amp;gt; &lt;a href=&quot;../ops/trait.drop&quot;&gt;Drop&lt;/a&gt; for &lt;a href=&quot;struct.bufwriter&quot;&gt;BufWriter&lt;/a&gt;&amp;lt;W&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/io/buffered.rs.html#652-659&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="42792a014b701e70522af6c2510d60af80e8698b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;W:&amp;nbsp;&lt;a href=&quot;trait.write&quot;&gt;Write&lt;/a&gt;&amp;gt; &lt;a href=&quot;struct.bufwriter&quot;&gt;BufWriter&lt;/a&gt;&amp;lt;W&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/io/buffered.rs.html#449-593&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;W:&amp;nbsp;&lt;a href=&quot;trait.write&quot;&gt;Write&lt;/a&gt;&amp;gt; &lt;a href=&quot;struct.bufwriter&quot;&gt;BufWriter&lt;/a&gt;&amp;lt;W&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/io/buffered.rs.html#449-593&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9068863c133489e2895071f9044f57e26321b092" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;W:&amp;nbsp;&lt;a href=&quot;trait.write&quot;&gt;Write&lt;/a&gt;&amp;gt; &lt;a href=&quot;struct.linewriter&quot;&gt;LineWriter&lt;/a&gt;&amp;lt;W&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/io/buffered.rs.html#816-934&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;W:&amp;nbsp;&lt;a href=&quot;trait.write&quot;&gt;Write&lt;/a&gt;&amp;gt; &lt;a href=&quot;struct.linewriter&quot;&gt;LineWriter&lt;/a&gt;&amp;lt;W&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/io/buffered.rs.html#816-934&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5d5310ce39089a15474e4d5339d0a8159e4a29d6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;W:&amp;nbsp;&lt;a href=&quot;trait.write&quot;&gt;Write&lt;/a&gt;&amp;gt; &lt;a href=&quot;trait.write&quot;&gt;Write&lt;/a&gt; for &lt;a href=&quot;struct.bufwriter&quot;&gt;BufWriter&lt;/a&gt;&amp;lt;W&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/io/buffered.rs.html#596-629&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;W:&amp;nbsp;&lt;a href=&quot;trait.write&quot;&gt;Write&lt;/a&gt;&amp;gt; &lt;a href=&quot;trait.write&quot;&gt;Write&lt;/a&gt; for &lt;a href=&quot;struct.bufwriter&quot;&gt;BufWriter&lt;/a&gt;&amp;lt;W&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/io/buffered.rs.html#596-629&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2f26ad1112c18027f8528e2f5fba1c5c9b97d467" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;W:&amp;nbsp;&lt;a href=&quot;trait.write&quot;&gt;Write&lt;/a&gt;&amp;gt; &lt;a href=&quot;trait.write&quot;&gt;Write&lt;/a&gt; for &lt;a href=&quot;struct.linewriter&quot;&gt;LineWriter&lt;/a&gt;&amp;lt;W&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/io/buffered.rs.html#937-979&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;W:&amp;nbsp;&lt;a href=&quot;trait.write&quot;&gt;Write&lt;/a&gt;&amp;gt; &lt;a href=&quot;trait.write&quot;&gt;Write&lt;/a&gt; for &lt;a href=&quot;struct.linewriter&quot;&gt;LineWriter&lt;/a&gt;&amp;lt;W&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/io/buffered.rs.html#937-979&quot;&gt;[SRC]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d866c879f00a871d2c61a6d8f1527538564d193f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;W:&amp;nbsp;&lt;a href=&quot;trait.write&quot;&gt;Write&lt;/a&gt;&amp;gt; Write for &lt;a href=&quot;struct.bufwriter&quot;&gt;BufWriter&lt;/a&gt;&amp;lt;W&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/io/buffered.rs.html#596-629&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;W:&amp;nbsp;&lt;a href=&quot;trait.write&quot;&gt;Write&lt;/a&gt;&amp;gt; Write for &lt;a href=&quot;struct.bufwriter&quot;&gt;BufWriter&lt;/a&gt;&amp;lt;W&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/io/buffered.rs.html#596-629&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d579e6a736ab1ebf2b2e2a62eebdbbadddda4575" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;W:&amp;nbsp;&lt;a href=&quot;trait.write&quot;&gt;Write&lt;/a&gt;&amp;gt; Write for &lt;a href=&quot;struct.linewriter&quot;&gt;LineWriter&lt;/a&gt;&amp;lt;W&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/io/buffered.rs.html#937-979&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;W:&amp;nbsp;&lt;a href=&quot;trait.write&quot;&gt;Write&lt;/a&gt;&amp;gt; Write for &lt;a href=&quot;struct.linewriter&quot;&gt;LineWriter&lt;/a&gt;&amp;lt;W&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/io/buffered.rs.html#937-979&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5637c0f9456004c95eef1e95096299e4d38a86ae" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;Y, R&amp;gt; &lt;a href=&quot;../clone/trait.clone&quot;&gt;Clone&lt;/a&gt; for &lt;a href=&quot;enum.generatorstate&quot;&gt;GeneratorState&lt;/a&gt;&amp;lt;Y, R&amp;gt; where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;R: &lt;a href=&quot;../clone/trait.clone&quot;&gt;Clone&lt;/a&gt;,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Y: &lt;a href=&quot;../clone/trait.clone&quot;&gt;Clone&lt;/a&gt;,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/generator.rs.html#9&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;Y, R&amp;gt; &lt;a href=&quot;../clone/trait.clone&quot;&gt;Clone&lt;/a&gt; for &lt;a href=&quot;enum.generatorstate&quot;&gt;GeneratorState&lt;/a&gt;&amp;lt;Y, R&amp;gt; where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;R: &lt;a href=&quot;../clone/trait.clone&quot;&gt;Clone&lt;/a&gt;,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Y: &lt;a href=&quot;../clone/trait.clone&quot;&gt;Clone&lt;/a&gt;,&amp;nbsp;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/generator.rs.html#9&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b76a08d00b806c2fbcb1301a867670018c1f69d1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;Y, R&amp;gt; &lt;a href=&quot;../cmp/trait.eq&quot;&gt;Eq&lt;/a&gt; for &lt;a href=&quot;enum.generatorstate&quot;&gt;GeneratorState&lt;/a&gt;&amp;lt;Y, R&amp;gt; where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;R: &lt;a href=&quot;../cmp/trait.eq&quot;&gt;Eq&lt;/a&gt;,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Y: &lt;a href=&quot;../cmp/trait.eq&quot;&gt;Eq&lt;/a&gt;,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/generator.rs.html#9&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;Y, R&amp;gt; &lt;a href=&quot;../cmp/trait.eq&quot;&gt;Eq&lt;/a&gt; for &lt;a href=&quot;enum.generatorstate&quot;&gt;GeneratorState&lt;/a&gt;&amp;lt;Y, R&amp;gt; where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;R: &lt;a href=&quot;../cmp/trait.eq&quot;&gt;Eq&lt;/a&gt;,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Y: &lt;a href=&quot;../cmp/trait.eq&quot;&gt;Eq&lt;/a&gt;,&amp;nbsp;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/generator.rs.html#9&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="28214db2a7119725b6b7320eb1f263ad67491a9c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;Y, R&amp;gt; &lt;a href=&quot;../cmp/trait.ord&quot;&gt;Ord&lt;/a&gt; for &lt;a href=&quot;enum.generatorstate&quot;&gt;GeneratorState&lt;/a&gt;&amp;lt;Y, R&amp;gt; where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;R: &lt;a href=&quot;../cmp/trait.ord&quot;&gt;Ord&lt;/a&gt;,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Y: &lt;a href=&quot;../cmp/trait.ord&quot;&gt;Ord&lt;/a&gt;,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/generator.rs.html#9&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;Y, R&amp;gt; &lt;a href=&quot;../cmp/trait.ord&quot;&gt;Ord&lt;/a&gt; for &lt;a href=&quot;enum.generatorstate&quot;&gt;GeneratorState&lt;/a&gt;&amp;lt;Y, R&amp;gt; where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;R: &lt;a href=&quot;../cmp/trait.ord&quot;&gt;Ord&lt;/a&gt;,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Y: &lt;a href=&quot;../cmp/trait.ord&quot;&gt;Ord&lt;/a&gt;,&amp;nbsp;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/generator.rs.html#9&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="14a3a640ee93e9275b917cb7efd042e9b8e33d6e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;Y, R&amp;gt; &lt;a href=&quot;../cmp/trait.partialeq&quot;&gt;PartialEq&lt;/a&gt;&amp;lt;&lt;a href=&quot;enum.generatorstate&quot;&gt;GeneratorState&lt;/a&gt;&amp;lt;Y, R&amp;gt;&amp;gt; for &lt;a href=&quot;enum.generatorstate&quot;&gt;GeneratorState&lt;/a&gt;&amp;lt;Y, R&amp;gt; where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;R: &lt;a href=&quot;../cmp/trait.partialeq&quot;&gt;PartialEq&lt;/a&gt;&amp;lt;R&amp;gt;,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Y: &lt;a href=&quot;../cmp/trait.partialeq&quot;&gt;PartialEq&lt;/a&gt;&amp;lt;Y&amp;gt;,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/generator.rs.html#9&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;Y, R&amp;gt; &lt;a href=&quot;../cmp/trait.partialeq&quot;&gt;PartialEq&lt;/a&gt;&amp;lt;&lt;a href=&quot;enum.generatorstate&quot;&gt;GeneratorState&lt;/a&gt;&amp;lt;Y, R&amp;gt;&amp;gt; for &lt;a href=&quot;enum.generatorstate&quot;&gt;GeneratorState&lt;/a&gt;&amp;lt;Y, R&amp;gt; where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;R: &lt;a href=&quot;../cmp/trait.partialeq&quot;&gt;PartialEq&lt;/a&gt;&amp;lt;R&amp;gt;,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Y: &lt;a href=&quot;../cmp/trait.partialeq&quot;&gt;PartialEq&lt;/a&gt;&amp;lt;Y&amp;gt;,&amp;nbsp;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/generator.rs.html#9&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ec07e95b8fa244bcb5e0aec2d6221d92be85ef7f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;Y, R&amp;gt; &lt;a href=&quot;../cmp/trait.partialord&quot;&gt;PartialOrd&lt;/a&gt;&amp;lt;&lt;a href=&quot;enum.generatorstate&quot;&gt;GeneratorState&lt;/a&gt;&amp;lt;Y, R&amp;gt;&amp;gt; for &lt;a href=&quot;enum.generatorstate&quot;&gt;GeneratorState&lt;/a&gt;&amp;lt;Y, R&amp;gt; where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;R: &lt;a href=&quot;../cmp/trait.partialord&quot;&gt;PartialOrd&lt;/a&gt;&amp;lt;R&amp;gt;,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Y: &lt;a href=&quot;../cmp/trait.partialord&quot;&gt;PartialOrd&lt;/a&gt;&amp;lt;Y&amp;gt;,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/generator.rs.html#9&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;Y, R&amp;gt; &lt;a href=&quot;../cmp/trait.partialord&quot;&gt;PartialOrd&lt;/a&gt;&amp;lt;&lt;a href=&quot;enum.generatorstate&quot;&gt;GeneratorState&lt;/a&gt;&amp;lt;Y, R&amp;gt;&amp;gt; for &lt;a href=&quot;enum.generatorstate&quot;&gt;GeneratorState&lt;/a&gt;&amp;lt;Y, R&amp;gt; where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;R: &lt;a href=&quot;../cmp/trait.partialord&quot;&gt;PartialOrd&lt;/a&gt;&amp;lt;R&amp;gt;,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Y: &lt;a href=&quot;../cmp/trait.partialord&quot;&gt;PartialOrd&lt;/a&gt;&amp;lt;Y&amp;gt;,&amp;nbsp;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/generator.rs.html#9&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0f152ff91f96304735b9f9747937bb1bf2dfc3e4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;Y, R&amp;gt; &lt;a href=&quot;../fmt/trait.debug&quot;&gt;Debug&lt;/a&gt; for &lt;a href=&quot;enum.generatorstate&quot;&gt;GeneratorState&lt;/a&gt;&amp;lt;Y, R&amp;gt; where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;R: &lt;a href=&quot;../fmt/trait.debug&quot;&gt;Debug&lt;/a&gt;,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Y: &lt;a href=&quot;../fmt/trait.debug&quot;&gt;Debug&lt;/a&gt;,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/generator.rs.html#9&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;Y, R&amp;gt; &lt;a href=&quot;../fmt/trait.debug&quot;&gt;Debug&lt;/a&gt; for &lt;a href=&quot;enum.generatorstate&quot;&gt;GeneratorState&lt;/a&gt;&amp;lt;Y, R&amp;gt; where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;R: &lt;a href=&quot;../fmt/trait.debug&quot;&gt;Debug&lt;/a&gt;,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Y: &lt;a href=&quot;../fmt/trait.debug&quot;&gt;Debug&lt;/a&gt;,&amp;nbsp;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/generator.rs.html#9&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="db2b568b6c74e23d0e91cdc3b00b27d1d9da1c31" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;Y, R&amp;gt; &lt;a href=&quot;../hash/trait.hash&quot;&gt;Hash&lt;/a&gt; for &lt;a href=&quot;enum.generatorstate&quot;&gt;GeneratorState&lt;/a&gt;&amp;lt;Y, R&amp;gt; where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;R: &lt;a href=&quot;../hash/trait.hash&quot;&gt;Hash&lt;/a&gt;,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Y: &lt;a href=&quot;../hash/trait.hash&quot;&gt;Hash&lt;/a&gt;,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/generator.rs.html#9&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;Y, R&amp;gt; &lt;a href=&quot;../hash/trait.hash&quot;&gt;Hash&lt;/a&gt; for &lt;a href=&quot;enum.generatorstate&quot;&gt;GeneratorState&lt;/a&gt;&amp;lt;Y, R&amp;gt; where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;R: &lt;a href=&quot;../hash/trait.hash&quot;&gt;Hash&lt;/a&gt;,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Y: &lt;a href=&quot;../hash/trait.hash&quot;&gt;Hash&lt;/a&gt;,&amp;nbsp;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/generator.rs.html#9&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3921f3a96a3f93ff3ea4508e1c904a5698757b43" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;Y, R&amp;gt; &lt;a href=&quot;../marker/trait.copy&quot;&gt;Copy&lt;/a&gt; for &lt;a href=&quot;enum.generatorstate&quot;&gt;GeneratorState&lt;/a&gt;&amp;lt;Y, R&amp;gt; where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;R: &lt;a href=&quot;../marker/trait.copy&quot;&gt;Copy&lt;/a&gt;,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Y: &lt;a href=&quot;../marker/trait.copy&quot;&gt;Copy&lt;/a&gt;,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/generator.rs.html#9&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;Y, R&amp;gt; &lt;a href=&quot;../marker/trait.copy&quot;&gt;Copy&lt;/a&gt; for &lt;a href=&quot;enum.generatorstate&quot;&gt;GeneratorState&lt;/a&gt;&amp;lt;Y, R&amp;gt; where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;R: &lt;a href=&quot;../marker/trait.copy&quot;&gt;Copy&lt;/a&gt;,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Y: &lt;a href=&quot;../marker/trait.copy&quot;&gt;Copy&lt;/a&gt;,&amp;nbsp;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/generator.rs.html#9&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3084a6a26e1aba9435cf60bd0c9605017ed3b0a7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;Y, R&amp;gt; Clone for &lt;a href=&quot;../ops/enum.generatorstate&quot;&gt;GeneratorState&lt;/a&gt;&amp;lt;Y, R&amp;gt; where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;R: &lt;a href=&quot;trait.clone&quot;&gt;Clone&lt;/a&gt;,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Y: &lt;a href=&quot;trait.clone&quot;&gt;Clone&lt;/a&gt;,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/generator.rs.html#9&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;Y, R&amp;gt; Clone for &lt;a href=&quot;../ops/enum.generatorstate&quot;&gt;GeneratorState&lt;/a&gt;&amp;lt;Y, R&amp;gt; where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;R: &lt;a href=&quot;trait.clone&quot;&gt;Clone&lt;/a&gt;,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Y: &lt;a href=&quot;trait.clone&quot;&gt;Clone&lt;/a&gt;,&amp;nbsp;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/generator.rs.html#9&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4a52ff228389409f259731f44a89891f3f21658f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;Y, R&amp;gt; Copy for &lt;a href=&quot;../ops/enum.generatorstate&quot;&gt;GeneratorState&lt;/a&gt;&amp;lt;Y, R&amp;gt; where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;R: &lt;a href=&quot;trait.copy&quot;&gt;Copy&lt;/a&gt;,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Y: &lt;a href=&quot;trait.copy&quot;&gt;Copy&lt;/a&gt;,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/generator.rs.html#9&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;Y, R&amp;gt; Copy for &lt;a href=&quot;../ops/enum.generatorstate&quot;&gt;GeneratorState&lt;/a&gt;&amp;lt;Y, R&amp;gt; where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;R: &lt;a href=&quot;trait.copy&quot;&gt;Copy&lt;/a&gt;,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Y: &lt;a href=&quot;trait.copy&quot;&gt;Copy&lt;/a&gt;,&amp;nbsp;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/generator.rs.html#9&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ecb27558adca7fbfe911679932cdc9934929b705" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;Y, R&amp;gt; Debug for &lt;a href=&quot;../ops/enum.generatorstate&quot;&gt;GeneratorState&lt;/a&gt;&amp;lt;Y, R&amp;gt; where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;R: &lt;a href=&quot;trait.debug&quot;&gt;Debug&lt;/a&gt;,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Y: &lt;a href=&quot;trait.debug&quot;&gt;Debug&lt;/a&gt;,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/generator.rs.html#9&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;Y, R&amp;gt; Debug for &lt;a href=&quot;../ops/enum.generatorstate&quot;&gt;GeneratorState&lt;/a&gt;&amp;lt;Y, R&amp;gt; where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;R: &lt;a href=&quot;trait.debug&quot;&gt;Debug&lt;/a&gt;,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Y: &lt;a href=&quot;trait.debug&quot;&gt;Debug&lt;/a&gt;,&amp;nbsp;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/generator.rs.html#9&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0fc9780dc968491e36f2477391aebff2ee9ba87d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;Y, R&amp;gt; Eq for &lt;a href=&quot;../ops/enum.generatorstate&quot;&gt;GeneratorState&lt;/a&gt;&amp;lt;Y, R&amp;gt; where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;R: &lt;a href=&quot;trait.eq&quot;&gt;Eq&lt;/a&gt;,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Y: &lt;a href=&quot;trait.eq&quot;&gt;Eq&lt;/a&gt;,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/generator.rs.html#9&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;Y, R&amp;gt; Eq for &lt;a href=&quot;../ops/enum.generatorstate&quot;&gt;GeneratorState&lt;/a&gt;&amp;lt;Y, R&amp;gt; where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;R: &lt;a href=&quot;trait.eq&quot;&gt;Eq&lt;/a&gt;,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Y: &lt;a href=&quot;trait.eq&quot;&gt;Eq&lt;/a&gt;,&amp;nbsp;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/generator.rs.html#9&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="efc4a802638b9bd065c585b32f0c97a117d289c8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;Y, R&amp;gt; Hash for &lt;a href=&quot;../ops/enum.generatorstate&quot;&gt;GeneratorState&lt;/a&gt;&amp;lt;Y, R&amp;gt; where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;R: &lt;a href=&quot;trait.hash&quot;&gt;Hash&lt;/a&gt;,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Y: &lt;a href=&quot;trait.hash&quot;&gt;Hash&lt;/a&gt;,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/generator.rs.html#9&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;Y, R&amp;gt; Hash for &lt;a href=&quot;../ops/enum.generatorstate&quot;&gt;GeneratorState&lt;/a&gt;&amp;lt;Y, R&amp;gt; where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;R: &lt;a href=&quot;trait.hash&quot;&gt;Hash&lt;/a&gt;,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Y: &lt;a href=&quot;trait.hash&quot;&gt;Hash&lt;/a&gt;,&amp;nbsp;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/generator.rs.html#9&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="bd5263b05d3c6be93b91ff6f3741a2b3e8e25d85" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;Y, R&amp;gt; Ord for &lt;a href=&quot;../ops/enum.generatorstate&quot;&gt;GeneratorState&lt;/a&gt;&amp;lt;Y, R&amp;gt; where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;R: &lt;a href=&quot;trait.ord&quot;&gt;Ord&lt;/a&gt;,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Y: &lt;a href=&quot;trait.ord&quot;&gt;Ord&lt;/a&gt;,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/generator.rs.html#9&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;Y, R&amp;gt; Ord for &lt;a href=&quot;../ops/enum.generatorstate&quot;&gt;GeneratorState&lt;/a&gt;&amp;lt;Y, R&amp;gt; where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;R: &lt;a href=&quot;trait.ord&quot;&gt;Ord&lt;/a&gt;,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Y: &lt;a href=&quot;trait.ord&quot;&gt;Ord&lt;/a&gt;,&amp;nbsp;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/generator.rs.html#9&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0fcabed6ddbb04024945a8ae7cd0c131d81cba52" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;Y, R&amp;gt; PartialEq&amp;lt;&lt;a href=&quot;../ops/enum.generatorstate&quot;&gt;GeneratorState&lt;/a&gt;&amp;lt;Y, R&amp;gt;&amp;gt; for &lt;a href=&quot;../ops/enum.generatorstate&quot;&gt;GeneratorState&lt;/a&gt;&amp;lt;Y, R&amp;gt; where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;R: &lt;a href=&quot;trait.partialeq&quot;&gt;PartialEq&lt;/a&gt;&amp;lt;R&amp;gt;,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Y: &lt;a href=&quot;trait.partialeq&quot;&gt;PartialEq&lt;/a&gt;&amp;lt;Y&amp;gt;,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/generator.rs.html#9&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;Y, R&amp;gt; PartialEq&amp;lt;&lt;a href=&quot;../ops/enum.generatorstate&quot;&gt;GeneratorState&lt;/a&gt;&amp;lt;Y, R&amp;gt;&amp;gt; for &lt;a href=&quot;../ops/enum.generatorstate&quot;&gt;GeneratorState&lt;/a&gt;&amp;lt;Y, R&amp;gt; where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;R: &lt;a href=&quot;trait.partialeq&quot;&gt;PartialEq&lt;/a&gt;&amp;lt;R&amp;gt;,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Y: &lt;a href=&quot;trait.partialeq&quot;&gt;PartialEq&lt;/a&gt;&amp;lt;Y&amp;gt;,&amp;nbsp;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/generator.rs.html#9&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="268729f4f3cb41242e938317a196415a88765c96" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;Y, R&amp;gt; PartialOrd&amp;lt;&lt;a href=&quot;../ops/enum.generatorstate&quot;&gt;GeneratorState&lt;/a&gt;&amp;lt;Y, R&amp;gt;&amp;gt; for &lt;a href=&quot;../ops/enum.generatorstate&quot;&gt;GeneratorState&lt;/a&gt;&amp;lt;Y, R&amp;gt; where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;R: &lt;a href=&quot;trait.partialord&quot;&gt;PartialOrd&lt;/a&gt;&amp;lt;R&amp;gt;,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Y: &lt;a href=&quot;trait.partialord&quot;&gt;PartialOrd&lt;/a&gt;&amp;lt;Y&amp;gt;,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/generator.rs.html#9&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;Y, R&amp;gt; PartialOrd&amp;lt;&lt;a href=&quot;../ops/enum.generatorstate&quot;&gt;GeneratorState&lt;/a&gt;&amp;lt;Y, R&amp;gt;&amp;gt; for &lt;a href=&quot;../ops/enum.generatorstate&quot;&gt;GeneratorState&lt;/a&gt;&amp;lt;Y, R&amp;gt; where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;R: &lt;a href=&quot;trait.partialord&quot;&gt;PartialOrd&lt;/a&gt;&amp;lt;R&amp;gt;,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Y: &lt;a href=&quot;trait.partialord&quot;&gt;PartialOrd&lt;/a&gt;&amp;lt;Y&amp;gt;,&amp;nbsp;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/generator.rs.html#9&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f0525519f645d447e6a4b1ad3dc5f10a8c32d6c7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&lt;/code&gt; - implement inherent or trait functionality</source>
          <target state="translated">&lt;code&gt;impl&lt;/code&gt; - 고유 또는 특성 기능 구현</target>
        </trans-unit>
        <trans-unit id="184ff4f3ccf97181c1e7d13190fee789ec30dbaa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&lt;/code&gt;&lt;a href=&quot;generics&quot;&gt;&lt;em&gt;Generics&lt;/em&gt;&lt;/a&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;a href=&quot;../types#type-expressions&quot;&gt;&lt;em&gt;Type&lt;/em&gt;&lt;/a&gt;&lt;a href=&quot;generics#where-clauses&quot;&gt;&lt;em&gt;WhereClause&lt;/em&gt;&lt;/a&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;code&gt;{&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;impl&lt;/code&gt;&lt;a href=&quot;generics&quot;&gt;&lt;em&gt;Generics&lt;/em&gt;&lt;/a&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;a href=&quot;../types#type-expressions&quot;&gt;&lt;em&gt;Type&lt;/em&gt;&lt;/a&gt;&lt;a href=&quot;generics#where-clauses&quot;&gt;&lt;em&gt;WhereClause&lt;/em&gt;&lt;/a&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;code&gt;{&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8bb19a5f0089329ff5fc36688c371e3b510abdcf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;in&lt;/code&gt; - part of &lt;code&gt;for&lt;/code&gt; loop syntax</source>
          <target state="translated">&lt;code&gt;in&lt;/code&gt; - &lt;code&gt;for&lt;/code&gt; 루프 구문의 일부</target>
        </trans-unit>
        <trans-unit id="30ecb2f02ce38d58d4aa4a7c9f2c938d614049d2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;init&lt;/code&gt; is unsafe because it returns a zeroed-out datum, which is unsafe unless &lt;code&gt;T&lt;/code&gt; is &lt;code&gt;Copy&lt;/code&gt;. Also, even if T is &lt;code&gt;Copy&lt;/code&gt;, an all-zero value may not correspond to any legitimate state for the type in question.</source>
          <target state="translated">&lt;code&gt;init&lt;/code&gt; 는 제로 아웃 된 데이텀을 반환하기 때문에 안전하지 않습니다. &lt;code&gt;T&lt;/code&gt; 가 &lt;code&gt;Copy&lt;/code&gt; 가 아니면 안전하지 않습니다 . 또한 T가 &lt;code&gt;Copy&lt;/code&gt; 인 경우에도 모두 0 값은 해당 유형의 합법적 상태에 해당하지 않을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="858c85332c7a6ae3719f1490daf3f32734cafad1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;inner&lt;/code&gt;'s File Location</source>
          <target state="translated">&lt;code&gt;inner&lt;/code&gt; 의 파일 위치</target>
        </trans-unit>
        <trans-unit id="488e0faba8216ef29b582fa846291a33548d945c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;inner&lt;/code&gt;'s Module Path</source>
          <target state="translated">&lt;code&gt;inner&lt;/code&gt; 의 모듈 경로</target>
        </trans-unit>
        <trans-unit id="2bd2ca825452dc91b9eb5cc3803ada20ad55e2b5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;into_iter()&lt;/code&gt;, which iterates over &lt;code&gt;T&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;into_iter()&lt;/code&gt; , &lt;code&gt;T&lt;/code&gt; 를 반복 합니다.</target>
        </trans-unit>
        <trans-unit id="908ce4b4276fdf90442dace8bd2507b8573748bb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;into_iter&lt;/code&gt; transforms the actual collection into an iterator over its contents by-value. This is great when the collection itself is no longer needed, and the values are needed elsewhere. Using &lt;code&gt;extend&lt;/code&gt; with &lt;code&gt;into_iter&lt;/code&gt; is the main way that contents of one collection are moved into another. &lt;code&gt;extend&lt;/code&gt; automatically calls &lt;code&gt;into_iter&lt;/code&gt;, and takes any &lt;code&gt;T: &lt;/code&gt;&lt;a href=&quot;../iter/trait.intoiterator&quot;&gt;&lt;code&gt;IntoIterator&lt;/code&gt;&lt;/a&gt;. Calling &lt;code&gt;collect&lt;/code&gt; on an iterator itself is also a great way to convert one collection into another. Both of these methods should internally use the capacity management tools discussed in the previous section to do this as efficiently as possible.</source>
          <target state="translated">&lt;code&gt;into_iter&lt;/code&gt; 는 실제 컬렉션을 내용 별 값을 기준으로 반복자로 변환합니다. 이것은 컬렉션 자체가 더 이상 필요하지 않고 다른 곳에 값이 필요할 때 유용합니다. &lt;code&gt;into_iter&lt;/code&gt; 와 함께 &lt;code&gt;extend&lt;/code&gt; 를 사용하면 한 컬렉션의 내용이 다른 컬렉션으로 이동하는 주요 방법입니다. &lt;code&gt;extend&lt;/code&gt; 는 자동으로 &lt;code&gt;into_iter&lt;/code&gt; 를 호출 하고 &lt;code&gt;T: &lt;/code&gt; &lt;a href=&quot;../iter/trait.intoiterator&quot;&gt; &lt;code&gt;IntoIterator&lt;/code&gt; 를&lt;/a&gt; 취합니다 . 반복자 자체에서 &lt;code&gt;collect&lt;/code&gt; 을 호출 하는 것도 한 컬렉션을 다른 컬렉션으로 변환하는 좋은 방법입니다. 이 두 가지 방법 모두 내부 섹션에서 설명한 용량 관리 도구를 사용하여 가능한 한 효율적으로 수행해야합니다.</target>
        </trans-unit>
        <trans-unit id="650648fa6f8b804b549eb061425615eb02051ac0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;item&lt;/code&gt;: an &lt;a href=&quot;items&quot;&gt;&lt;em&gt;Item&lt;/em&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;item&lt;/code&gt; : &lt;a href=&quot;items&quot;&gt;&lt;em&gt;품목&lt;/em&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f86c8363726e9f6a7ea9fae8904907f991e374c0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;iter()&lt;/code&gt;, which iterates over &lt;code&gt;&amp;amp;T&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;iter()&lt;/code&gt; , &lt;code&gt;&amp;amp;T&lt;/code&gt; 반복 합니다.</target>
        </trans-unit>
        <trans-unit id="e35b8ef3bb9383339e086a0eae88a4aa52b9fa7f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;iter.find_map(f)&lt;/code&gt; is equivalent to &lt;code&gt;iter.filter_map(f).next()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;iter.find_map(f)&lt;/code&gt; 는 &lt;code&gt;iter.filter_map(f).next()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="31a2e44d603997626475db15f45fdf5ff6e09830" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;iter&lt;/code&gt; provides an iterator of immutable references to all the contents of a collection in the most &quot;natural&quot; order. For sequence collections like &lt;a href=&quot;../vec/struct.vec&quot;&gt;&lt;code&gt;Vec&lt;/code&gt;&lt;/a&gt;, this means the items will be yielded in increasing order of index starting at 0. For ordered collections like &lt;a href=&quot;struct.btreemap&quot;&gt;&lt;code&gt;BTreeMap&lt;/code&gt;&lt;/a&gt;, this means that the items will be yielded in sorted order. For unordered collections like &lt;a href=&quot;struct.hashmap&quot;&gt;&lt;code&gt;HashMap&lt;/code&gt;&lt;/a&gt;, the items will be yielded in whatever order the internal representation made most convenient. This is great for reading through all the contents of the collection.</source>
          <target state="translated">&lt;code&gt;iter&lt;/code&gt; 는 가장 &quot;자연적인&quot;순서로 컬렉션의 모든 내용에 대한 불변 참조의 반복자를 제공합니다. &lt;a href=&quot;../vec/struct.vec&quot;&gt; &lt;code&gt;Vec&lt;/code&gt; &lt;/a&gt; 과 같은 시퀀스 콜렉션의 경우 이는 항목이 0부터 시작하여 색인 순서대로 증가 함을 의미합니다. &lt;a href=&quot;struct.btreemap&quot;&gt; &lt;code&gt;BTreeMap&lt;/code&gt; &lt;/a&gt; 과 같은 정렬 된 콜렉션의 경우 항목이 정렬 된 순서로 산출됩니다. &lt;a href=&quot;struct.hashmap&quot;&gt; &lt;code&gt;HashMap&lt;/code&gt; &lt;/a&gt; 과 같은 정렬되지 않은 컬렉션의 경우 내부 표현이 가장 편리한 순서로 항목이 생성됩니다. 이것은 컬렉션의 모든 내용을 읽는 데 좋습니다.</target>
        </trans-unit>
        <trans-unit id="8c525b7bcda795b7d93ffe5d335f77685fef5ea1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;iter_mut()&lt;/code&gt;, which iterates over &lt;code&gt;&amp;amp;mut T&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;iter_mut()&lt;/code&gt; , &lt;code&gt;&amp;amp;mut T&lt;/code&gt; 반복 합니다.</target>
        </trans-unit>
        <trans-unit id="37819f5586bdf028bb35a52d901fe1afb9740745" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;iter_mut&lt;/code&gt; provides an iterator of &lt;em&gt;mutable&lt;/em&gt; references in the same order as &lt;code&gt;iter&lt;/code&gt;. This is great for mutating all the contents of the collection.</source>
          <target state="translated">&lt;code&gt;iter_mut&lt;/code&gt; 는 &lt;code&gt;iter&lt;/code&gt; 와 동일한 순서로 &lt;em&gt;변경 가능한&lt;/em&gt; 참조 의 반복자를 제공합니다 . 컬렉션의 모든 내용을 변경하는 데 좋습니다.</target>
        </trans-unit>
        <trans-unit id="0201e3c1512b2026496fb180a73cf9bc9ed78830" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;language&lt;/code&gt;: a context-free language.</source>
          <target state="translated">&lt;code&gt;language&lt;/code&gt; : 문맥이없는 언어.</target>
        </trans-unit>
        <trans-unit id="6857c646e18211dd671c4234055f2f82520a4333" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;layout&lt;/code&gt; must &lt;em&gt;fit&lt;/em&gt; that block of memory,</source>
          <target state="translated">&lt;code&gt;layout&lt;/code&gt; 은 해당 메모리 블록에 &lt;em&gt;맞아야&lt;/em&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="2f9b1698b2ef014a8d22f6ffe29d6b48a60fb957" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;layout&lt;/code&gt; must &lt;em&gt;fit&lt;/em&gt; the &lt;code&gt;ptr&lt;/code&gt; (see above). (The &lt;code&gt;new_size&lt;/code&gt; argument need not fit it.)</source>
          <target state="translated">&lt;code&gt;layout&lt;/code&gt; 은 &lt;code&gt;ptr&lt;/code&gt; 에&lt;em&gt;맞아야&lt;/em&gt; 합니다 (위 참조). ( &lt;code&gt;new_size&lt;/code&gt; 인수는 맞지 않아도됩니다.)</target>
        </trans-unit>
        <trans-unit id="f7b2d14cd9dec3f77fa4819ed728088543633861" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;layout&lt;/code&gt; must &lt;em&gt;fit&lt;/em&gt; the &lt;code&gt;ptr&lt;/code&gt; (see above); note the &lt;code&gt;new_size&lt;/code&gt; argument need not fit it,</source>
          <target state="translated">&lt;code&gt;layout&lt;/code&gt; 은 &lt;code&gt;ptr&lt;/code&gt; 에&lt;em&gt;맞아야&lt;/em&gt; 합니다 (위 참조). 메모 &lt;code&gt;new_size&lt;/code&gt; 의 인수 필요성이 맞지,</target>
        </trans-unit>
        <trans-unit id="bf5b1cfc8087c1e1c178dd077efa63f6bccb807e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;layout&lt;/code&gt; must be the same layout that was used to allocate that block of memory,</source>
          <target state="translated">&lt;code&gt;layout&lt;/code&gt; 은 해당 메모리 블록을 할당하는 데 사용한 레이아웃과 동일해야합니다.</target>
        </trans-unit>
        <trans-unit id="25e003f488803d253799e3dc93942592b978c006" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;length&lt;/code&gt; needs to be less than or equal to &lt;code&gt;capacity&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;length&lt;/code&gt; 는 &lt;code&gt;capacity&lt;/code&gt; 보다 작거나 같아야합니다 .</target>
        </trans-unit>
        <trans-unit id="5fd444dfc07f29ef6d510893cae808ef5c72f739" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;let ref x = temp()&lt;/code&gt;. In this case, the temporary is created using a ref binding, but the result is the same: the lifetime is extended to the enclosing block.</source>
          <target state="translated">&lt;code&gt;let ref x = temp()&lt;/code&gt; . 이 경우 임시 바인딩은 참조 바인딩을 사용하여 작성되지만 결과는 동일합니다. 수명이 둘러싸는 블록으로 연장됩니다.</target>
        </trans-unit>
        <trans-unit id="71a451b2b52e63dc61b8f2d00f1e6b62a15334f6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;let x = &amp;amp;temp()&lt;/code&gt;. Here, the same temporary is being assigned into &lt;code&gt;x&lt;/code&gt;, rather than being passed as a parameter, and hence the temporary's lifetime is considered to be the enclosing block.</source>
          <target state="translated">&lt;code&gt;let x = &amp;amp;temp()&lt;/code&gt; . 여기서 동일한 임시가 매개 변수로 전달되지 않고 &lt;code&gt;x&lt;/code&gt; 에 지정 되므로 임시 수명은 둘러싸는 블록으로 간주됩니다.</target>
        </trans-unit>
        <trans-unit id="58137df5ad12ad27581331f88d18f8cbafb56800" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;let x = SomeStruct { foo: &amp;amp;temp() }&lt;/code&gt;. As in the previous case, the temporary is assigned into a struct which is then assigned into a binding, and hence it is given the lifetime of the enclosing block.</source>
          <target state="translated">&lt;code&gt;let x = SomeStruct { foo: &amp;amp;temp() }&lt;/code&gt; . 이전의 경우와 마찬가지로 임시는 구조체에 할당 된 다음 바인딩에 할당되므로 엔 클로징 블록의 수명이 주어집니다.</target>
        </trans-unit>
        <trans-unit id="b34ba0e33fd1a1f9d0a17593c298b44094bfeee9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;let x = [ &amp;amp;temp() ]&lt;/code&gt;. As in the previous case, the temporary is assigned into an array which is then assigned into a binding, and hence it is given the lifetime of the enclosing block.</source>
          <target state="translated">&lt;code&gt;let x = [ &amp;amp;temp() ]&lt;/code&gt; . 이전의 경우와 마찬가지로 임시는 배열에 할당 된 다음 바인딩에 할당되므로 엔 클로징 블록의 수명이 주어집니다.</target>
        </trans-unit>
        <trans-unit id="a0476596ee64bfabff75d15b38bd3ce011cbfed0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;let x = foo(&amp;amp;temp())&lt;/code&gt;. The expression &lt;code&gt;temp()&lt;/code&gt; is a value expression. As it is being borrowed, a temporary is created which will be freed after the innermost enclosing statement; in this case, the &lt;code&gt;let&lt;/code&gt; declaration.</source>
          <target state="translated">&lt;code&gt;let x = foo(&amp;amp;temp())&lt;/code&gt; . 발현 &lt;code&gt;temp()&lt;/code&gt; 값으로 표현된다. 빌릴 때 가장 안쪽에있는 진술 후에 해방 될 임시가 만들어집니다. 이 경우 &lt;code&gt;let&lt;/code&gt; 선언입니다.</target>
        </trans-unit>
        <trans-unit id="d725072cc0129dd81534f55b4b5567f2520b033c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;let x = if foo(&amp;amp;temp()) {bar()} else {baz()};&lt;/code&gt;. The expression &lt;code&gt;temp()&lt;/code&gt; is a value expression. As the temporary is created in the condition expression of an &lt;code&gt;if&lt;/code&gt;, it will be freed at the end of the condition expression; in this example before the call to &lt;code&gt;bar&lt;/code&gt; or &lt;code&gt;baz&lt;/code&gt; is made.</source>
          <target state="translated">&lt;code&gt;let x = if foo(&amp;amp;temp()) {bar()} else {baz()};&lt;/code&gt; . 발현 &lt;code&gt;temp()&lt;/code&gt; 값으로 표현된다. 임시 조건은 &lt;code&gt;if&lt;/code&gt; 의 조건 표현식에서 작성되므로 조건 표현식의 끝에서 해제됩니다. 이 예에서 호출하기 전에 &lt;code&gt;bar&lt;/code&gt; 또는 &lt;code&gt;baz&lt;/code&gt; 이루어진다.</target>
        </trans-unit>
        <trans-unit id="b9e90c0c83ac293ea85b163ee684e4788e256e3a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;let x = if temp().must_run_bar {bar()} else {baz()};&lt;/code&gt;. Here we assume the type of &lt;code&gt;temp()&lt;/code&gt; is a struct with a boolean field &lt;code&gt;must_run_bar&lt;/code&gt;. As the previous example, the temporary corresponding to &lt;code&gt;temp()&lt;/code&gt; will be freed at the end of the condition expression.</source>
          <target state="translated">&lt;code&gt;let x = if temp().must_run_bar {bar()} else {baz()};&lt;/code&gt; . 여기에서는 &lt;code&gt;temp()&lt;/code&gt; 유형이 부울 필드 &lt;code&gt;must_run_bar&lt;/code&gt; 를 가진 구조체 라고 가정합니다 . 이전 예제와 같이 &lt;code&gt;temp()&lt;/code&gt; 해당하는 임시 는 조건 표현식의 끝에서 해제됩니다.</target>
        </trans-unit>
        <trans-unit id="75d91ad41986b3ea206b99af860fa53eb8dbf4f4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;let x = temp().foo()&lt;/code&gt;. This is the same as the previous example, except that the value of &lt;code&gt;temp()&lt;/code&gt; is being borrowed via autoref on a method-call. Here we are assuming that &lt;code&gt;foo()&lt;/code&gt; is an &lt;code&gt;&amp;amp;self&lt;/code&gt; method defined in some trait, say &lt;code&gt;Foo&lt;/code&gt;. In other words, the expression &lt;code&gt;temp().foo()&lt;/code&gt; is equivalent to &lt;code&gt;Foo::foo(&amp;amp;temp())&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;let x = temp().foo()&lt;/code&gt; . &lt;code&gt;temp()&lt;/code&gt; 의 값이 메소드 호출에서 자동 참조를 통해 빌려 온다는 점을 제외하면 이전 예제와 동일합니다 . 여기서 우리는 &lt;code&gt;foo()&lt;/code&gt; 가 일부 특성에 정의 된 &lt;code&gt;&amp;amp;self&lt;/code&gt; 메소드 라고 가정합니다 . &lt;code&gt;Foo&lt;/code&gt; 라고 말합니다 . 즉, &lt;code&gt;temp().foo()&lt;/code&gt; 표현식 은 &lt;code&gt;Foo::foo(&amp;amp;temp())&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="eb620c9b59e12a9311e96cb48aea3b2431f47cb5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;let&lt;/code&gt; - bind a variable</source>
          <target state="translated">&lt;code&gt;let&lt;/code&gt; - 변수를 바인딩</target>
        </trans-unit>
        <trans-unit id="6b776172d356ffcb9dd1ee020b2f44b56c7785dd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;let&lt;/code&gt; declarations</source>
          <target state="translated">&lt;code&gt;let&lt;/code&gt; 선언</target>
        </trans-unit>
        <trans-unit id="ffdd0d324cc89e7ba70dc5a463c8e51e25427f42" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;let&lt;/code&gt; statements</source>
          <target state="translated">&lt;code&gt;let&lt;/code&gt; 문을</target>
        </trans-unit>
        <trans-unit id="3f6988c99bb96d42adb99c1e16a47a967bd9f952" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;let&lt;/code&gt; statements where an explicit type is given.</source>
          <target state="translated">&lt;code&gt;let&lt;/code&gt; 명시 적 유형이 주어 문을.</target>
        </trans-unit>
        <trans-unit id="bb6dde5d672c23dcccae3b0a0885f494c82b4ab5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;lifetime&lt;/code&gt;: a &lt;a href=&quot;tokens#lifetimes-and-loop-labels&quot;&gt;LIFETIME_TOKEN&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;lifetime&lt;/code&gt; : &lt;a href=&quot;tokens#lifetimes-and-loop-labels&quot;&gt;LIFETIME_TOKEN&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1c41dd8b9cc67b686d0234e023bde90f8e17533f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;literal&lt;/code&gt;: matches &lt;code&gt;-&lt;/code&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;a href=&quot;expressions/literal-expr&quot;&gt;&lt;em&gt;LiteralExpression&lt;/em&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;literal&lt;/code&gt; : 일치 &lt;code&gt;-&lt;/code&gt; &lt;sup&gt;? &lt;/sup&gt;&lt;a href=&quot;expressions/literal-expr&quot;&gt;&lt;em&gt;리터럴 표현&lt;/em&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="cc0220d5be1778c063f4075827f94379d15d8236" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;load&lt;/code&gt; takes an &lt;a href=&quot;enum.ordering&quot;&gt;&lt;code&gt;Ordering&lt;/code&gt;&lt;/a&gt; argument which describes the memory ordering of this operation. Possible values are &lt;a href=&quot;enum.ordering#variant.SeqCst&quot;&gt;&lt;code&gt;SeqCst&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;enum.ordering#variant.Acquire&quot;&gt;&lt;code&gt;Acquire&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;enum.ordering#variant.Relaxed&quot;&gt;&lt;code&gt;Relaxed&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;load&lt;/code&gt; 는 이 작업의 메모리 순서를 설명 하는 &lt;a href=&quot;enum.ordering&quot;&gt; &lt;code&gt;Ordering&lt;/code&gt; &lt;/a&gt; 인수를 사용합니다. 가능한 값은 &lt;a href=&quot;enum.ordering#variant.SeqCst&quot;&gt; &lt;code&gt;SeqCst&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;enum.ordering#variant.Acquire&quot;&gt; &lt;code&gt;Acquire&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;enum.ordering#variant.Relaxed&quot;&gt; &lt;code&gt;Relaxed&lt;/code&gt; &lt;/a&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="8bfd0ba1d1cc83e054ea9da06c5d13219bda9d3f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;loop&lt;/code&gt; - loop unconditionally</source>
          <target state="translated">&lt;code&gt;loop&lt;/code&gt; -무조건 루프</target>
        </trans-unit>
        <trans-unit id="d43014574e59af3930cf6de0a2e87bdb403e9a77" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;loop&lt;/code&gt; is used to define the simplest kind of loop supported in Rust. It runs the code inside it until the code uses &lt;code&gt;break&lt;/code&gt; or the program exits.</source>
          <target state="translated">&lt;code&gt;loop&lt;/code&gt; 는 Rust에서 지원되는 가장 간단한 종류의 루프를 정의하는 데 사용됩니다. 코드가 &lt;code&gt;break&lt;/code&gt; 를 사용 하거나 프로그램이 종료 될 때까지 코드를 실행합니다 .</target>
        </trans-unit>
        <trans-unit id="ed7eb40d17b4898ce73d0484b93d37bbbca2cd44" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;loop&lt;/code&gt;&lt;a href=&quot;block-expr&quot;&gt;&lt;em&gt;BlockExpression&lt;/em&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;loop&lt;/code&gt;&lt;a href=&quot;block-expr&quot;&gt;&lt;em&gt;BlockExpression&lt;/em&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="de5a687e475f403e06aafe448fba7357725d0277" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;macro parser&lt;/code&gt;: the bit of code in the Rust parser that will parse the input using a grammar derived from all of the matchers.</source>
          <target state="translated">&lt;code&gt;macro parser&lt;/code&gt; : Rust 파서의 코드 비트로 모든 매처에서 파생 된 문법을 사용하여 입력을 구문 분석합니다.</target>
        </trans-unit>
        <trans-unit id="a0a20a43ace139830b723ea96b7b62b3a3f170f6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;macro&lt;/code&gt;: anything invokable as &lt;code&gt;foo!(...)&lt;/code&gt; in source code.</source>
          <target state="translated">&lt;code&gt;macro&lt;/code&gt; : 소스 코드에서 &lt;code&gt;foo!(...)&lt;/code&gt; 로 호출 할 수없는 모든 것</target>
        </trans-unit>
        <trans-unit id="6c6287b8dfab0a52f52790e4fbdb25f98e75223d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;macro_rules&lt;/code&gt; allows users to define syntax extension in a declarative way. We call such extensions &quot;macros by example&quot; or simply &quot;macros&quot;.</source>
          <target state="translated">&lt;code&gt;macro_rules&lt;/code&gt; 를 사용하면 선언적 방식으로 구문 확장을 정의 할 수 있습니다. 이러한 확장을 &quot;예를 들어 매크로&quot;또는 간단히 &quot;매크로&quot;라고합니다.</target>
        </trans-unit>
        <trans-unit id="82273132576c01dcee3c2196c79b5c13c49e7015" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;macro_rules&lt;/code&gt;&lt;code&gt;!&lt;/code&gt;&lt;a href=&quot;identifiers&quot;&gt;IDENTIFIER&lt;/a&gt;&lt;em&gt;MacroRulesDef&lt;/em&gt;</source>
          <target state="translated">&lt;code&gt;macro_rules&lt;/code&gt;&lt;code&gt;!&lt;/code&gt;&lt;a href=&quot;identifiers&quot;&gt;IDENTIFIER&lt;/a&gt;&lt;em&gt;MacroRulesDef&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="e662cdf06cb5f8f9c86e14efc4831f6d9711f827" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;map()&lt;/code&gt; is conceptually similar to a &lt;a href=&quot;../../book/ch03-05-control-flow#looping-through-a-collection-with-for&quot;&gt;&lt;code&gt;for&lt;/code&gt;&lt;/a&gt; loop. However, as &lt;code&gt;map()&lt;/code&gt; is lazy, it is best used when you're already working with other iterators. If you're doing some sort of looping for a side effect, it's considered more idiomatic to use &lt;a href=&quot;../../book/ch03-05-control-flow#looping-through-a-collection-with-for&quot;&gt;&lt;code&gt;for&lt;/code&gt;&lt;/a&gt; than &lt;code&gt;map()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;map()&lt;/code&gt; 은 개념적으로 &lt;a href=&quot;../../book/ch03-05-control-flow#looping-through-a-collection-with-for&quot;&gt; &lt;code&gt;for&lt;/code&gt; &lt;/a&gt; 루프 와 유사합니다 . 그러나 &lt;code&gt;map()&lt;/code&gt; 이 게으 르기 때문에 이미 다른 반복자와 작업 할 때 가장 잘 사용됩니다. 당신이 부작용에 대한 루프의 일종을하고 있다면, 그것은 사용하는 것이 더 관용적 간주 &lt;a href=&quot;../../book/ch03-05-control-flow#looping-through-a-collection-with-for&quot;&gt; &lt;code&gt;for&lt;/code&gt; &lt;/a&gt; 보다 &lt;code&gt;map()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="67f7d199bc83dfa05d1bc2fbb071ba8a245e62d6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;map()&lt;/code&gt; transforms one iterator into another, by means of its argument: something that implements &lt;a href=&quot;../ops/trait.fnmut&quot;&gt;&lt;code&gt;FnMut&lt;/code&gt;&lt;/a&gt;. It produces a new iterator which calls this closure on each element of the original iterator.</source>
          <target state="translated">&lt;code&gt;map()&lt;/code&gt; 은 인수를 사용하여 하나의 반복자를 다른 반복자로 변환합니다. &lt;a href=&quot;../ops/trait.fnmut&quot;&gt; &lt;code&gt;FnMut&lt;/code&gt; &lt;/a&gt; 을 구현하는 무언가 . . 원래 반복자의 각 요소에서이 클로저를 호출하는 새로운 반복자를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="e4366b0124f5c086716cac28bad5e3df91d7e15b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;match&lt;/code&gt; - match a value to patterns</source>
          <target state="translated">&lt;code&gt;match&lt;/code&gt; - 값을 패턴과 일치</target>
        </trans-unit>
        <trans-unit id="dfba3076fe9afe871fd741b878f1ff57daae5d7d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;match&lt;/code&gt; blocks have their patterns matched in order, so, for example, putting a wildcard arm above a more specific arm will make the latter arm irrelevant.</source>
          <target state="translated">&lt;code&gt;match&lt;/code&gt; 블록은 패턴이 순서대로 일치하므로, 예를 들어 와일드 카드 팔을보다 구체적인 팔 위에두면 후자 팔은 관련이 없습니다.</target>
        </trans-unit>
        <trans-unit id="8f0b04b6545c1be3c46698b408dd17d32283f788" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;match&lt;/code&gt; expressions</source>
          <target state="translated">&lt;code&gt;match&lt;/code&gt; 표현</target>
        </trans-unit>
        <trans-unit id="4f1b9652d2e33e07cc107dc2f0ad580874e30d05" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;match&lt;/code&gt;&lt;a href=&quot;../expressions&quot;&gt;&lt;em&gt;Expression&lt;/em&gt;&lt;/a&gt;&lt;sub&gt;&lt;em&gt;except struct expression&lt;/em&gt;&lt;/sub&gt;&lt;code&gt;{&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;match&lt;/code&gt; &lt;a href=&quot;../expressions&quot;&gt;&lt;em&gt;식 &lt;/em&gt;&lt;/a&gt;&lt;sub&gt;&lt;em&gt;구조체의 발현을 제외하고&lt;/em&gt;&lt;/sub&gt; &lt;code&gt;{&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b2e499a6d19f7cb126e7e1c49c6e92af1c99a130" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;matcher&lt;/code&gt;: the left-hand-side of a rule in a &lt;code&gt;macro_rules&lt;/code&gt; invocation, or a subportion thereof.</source>
          <target state="translated">&lt;code&gt;matcher&lt;/code&gt; : &lt;code&gt;macro_rules&lt;/code&gt; 호출 에서 규칙의 왼쪽 또는 그 부분.</target>
        </trans-unit>
        <trans-unit id="49d3f4359ed8b249be629e6365cced2d5114b434" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;meta&lt;/code&gt;: a &lt;a href=&quot;attributes#meta-item-attribute-syntax&quot;&gt;&lt;em&gt;MetaItem&lt;/em&gt;&lt;/a&gt;, the contents of an attribute</source>
          <target state="translated">&lt;code&gt;meta&lt;/code&gt; : &lt;a href=&quot;attributes#meta-item-attribute-syntax&quot;&gt;&lt;em&gt;MetaItem&lt;/em&gt;&lt;/a&gt; , 속성의 내용</target>
        </trans-unit>
        <trans-unit id="d60ebef21be8afdeef56e7541ac1a619b8598961" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;mod&lt;/code&gt; - define a module</source>
          <target state="translated">&lt;code&gt;mod&lt;/code&gt; 모듈을 정의</target>
        </trans-unit>
        <trans-unit id="f3462c4c9ec4f725d3453d110e1bfb8763f681e9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;mod&lt;/code&gt;&lt;a href=&quot;../identifiers&quot;&gt;IDENTIFIER&lt;/a&gt;&lt;code&gt;;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;mod&lt;/code&gt;&lt;a href=&quot;../identifiers&quot;&gt;IDENTIFIER&lt;/a&gt;&lt;code&gt;;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4f13af2b7e97ad16010507f39a05ad6ee2021cf1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;move&lt;/code&gt; - make a closure take ownership of all its captures</source>
          <target state="translated">&lt;code&gt;move&lt;/code&gt; -폐쇄가 모든 캡처의 소유권을 갖도록합니다.</target>
        </trans-unit>
        <trans-unit id="35ee64baeab599d232258bebe9d05e4a13d2401c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;move&lt;/code&gt;&lt;sup&gt;?&lt;/sup&gt;</source>
          <target state="translated">&lt;code&gt;move&lt;/code&gt;&lt;sup&gt;?&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="49662560b54e3906a31f283c66a490c8ee044406" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;mut&lt;/code&gt; - denote mutability in references, raw pointers, or pattern bindings</source>
          <target state="translated">&lt;code&gt;mut&lt;/code&gt; - 참조, 원시 포인터 또는 패턴 바인딩의 가변성을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="b543c8475568f6cd7fdaa60353ac856f876f428c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;mut&lt;/code&gt;&lt;a href=&quot;../identifiers&quot;&gt;IDENTIFIER&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;mut&lt;/code&gt;&lt;a href=&quot;../identifiers&quot;&gt;IDENTIFIER&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2d8c501d55f0d92b8e7be57ada28e76a5f824640" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;new_len&lt;/code&gt; must be less than or equal to &lt;a href=&quot;#method.capacity&quot;&gt;&lt;code&gt;capacity()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;new_len&lt;/code&gt; 은 &lt;a href=&quot;#method.capacity&quot;&gt; &lt;code&gt;capacity()&lt;/code&gt; &lt;/a&gt; 이하 여야합니다 .</target>
        </trans-unit>
        <trans-unit id="de622d49667f22827b598d71b82eeae43d0cad92" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;new_size&lt;/code&gt; must be greater than zero.</source>
          <target state="translated">&lt;code&gt;new_size&lt;/code&gt; 는 0보다 커야합니다.</target>
        </trans-unit>
        <trans-unit id="ed2850bf8dac308ad886b52cdaf9e3957fab1fa2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;new_size&lt;/code&gt; must not be greater than &lt;code&gt;layout.size()&lt;/code&gt; (and must be greater than zero),</source>
          <target state="translated">&lt;code&gt;new_size&lt;/code&gt; 는 &lt;code&gt;layout.size()&lt;/code&gt; 보다 크지 않아야 하며 0보다 커야합니다.</target>
        </trans-unit>
        <trans-unit id="35e3ec7f4271ee7a3c0c618966184b2cf90c457e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;new_size&lt;/code&gt; must not be less than &lt;code&gt;layout.size()&lt;/code&gt;,</source>
          <target state="translated">&lt;code&gt;new_size&lt;/code&gt; 는 &lt;code&gt;layout.size()&lt;/code&gt; 이상이어야합니다 .</target>
        </trans-unit>
        <trans-unit id="578633e0d25e404880d149fe743faeed79ed7ec1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;new_size&lt;/code&gt;, when rounded up to the nearest multiple of &lt;code&gt;layout.align()&lt;/code&gt;, must not overflow (i.e., the rounded value must be less than &lt;code&gt;usize::MAX&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;new_size&lt;/code&gt; 는 &lt;code&gt;layout.align()&lt;/code&gt; 의 가장 가까운 배수로 반올림 될 때 넘치지 않아야합니다 (즉, 반올림 된 값은 &lt;code&gt;usize::MAX&lt;/code&gt; 보다 작아야 합니다 ).</target>
        </trans-unit>
        <trans-unit id="c790e4079b555989bd49a4e4df696f81956e5931" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;next()&lt;/code&gt; and &lt;code&gt;next_back()&lt;/code&gt; need to behave as the two ends of a range of values, that is they can not &quot;walk past each other&quot;.</source>
          <target state="translated">&lt;code&gt;next()&lt;/code&gt; 및 &lt;code&gt;next_back()&lt;/code&gt; 은 값 범위의 두 끝으로서 작동해야합니다. 즉, &quot;서로 지나갈 수 없습니다&quot;.</target>
        </trans-unit>
        <trans-unit id="dc03708d4b3e4e1a3d1ccf1997e157cad4b5655d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;not()&lt;/code&gt; with a configuration predicate. It is true if its predicate is false and false if its predicate is true.</source>
          <target state="translated">&lt;code&gt;not()&lt;/code&gt; 구성 술어가있는 not () . 술어가 거짓이면 true이고 술어가 참이면 false입니다.</target>
        </trans-unit>
        <trans-unit id="2192ff114b1aeb434615529e749d9e96060cfd3f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;not&lt;/code&gt;&lt;code&gt;(&lt;/code&gt;&lt;em&gt;ConfigurationPredicate&lt;/em&gt;&lt;code&gt;)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;not&lt;/code&gt;&lt;code&gt;(&lt;/code&gt;&lt;em&gt;ConfigurationPredicate&lt;/em&gt;&lt;code&gt;)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c177f23822fee534105483778732cc9f3a183561" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;note&lt;/code&gt; &amp;mdash; Specifies a string that should be included in the deprecation message. This is typically used to provide an explanation about the deprecation and preferred alternatives.</source>
          <target state="translated">&lt;code&gt;note&lt;/code&gt; &amp;mdash; 지원 중단 메시지에 포함 할 문자열을 지정합니다. 이것은 일반적으로 지원 중단 및 선호되는 대안에 대한 설명을 제공하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="2f27d53cbfb1c69c0047bef1df7a53996f67739e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;nth()&lt;/code&gt; will return &lt;a href=&quot;../option/enum.option#variant.None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt; if &lt;code&gt;n&lt;/code&gt; is greater than or equal to the length of the iterator.</source>
          <target state="translated">&lt;code&gt;nth()&lt;/code&gt; 리턴 것 &lt;a href=&quot;../option/enum.option#variant.None&quot;&gt; &lt;code&gt;None&lt;/code&gt; &lt;/a&gt; 경우 &lt;code&gt;n&lt;/code&gt; 이 보다 큰 또는 반복기의 길이와 동일.</target>
        </trans-unit>
        <trans-unit id="3d7c5d305a57c5ad7f80d05c1d52834437a77fe7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;nth_back()&lt;/code&gt; will return &lt;a href=&quot;../option/enum.option#variant.None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt; if &lt;code&gt;n&lt;/code&gt; is greater than or equal to the length of the iterator.</source>
          <target state="translated">&lt;code&gt;nth_back()&lt;/code&gt; &lt;code&gt;n&lt;/code&gt; 이 반복자의 길이보다 크거나 같은 경우 nth_back () 은 &lt;a href=&quot;../option/enum.option#variant.None&quot;&gt; &lt;code&gt;None&lt;/code&gt; &lt;/a&gt; 을 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="56e3621545ffb513772d311cf9be52e840a7da83" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;o&lt;/code&gt; &amp;rArr; &lt;a href=&quot;trait.octal&quot;&gt;&lt;code&gt;Octal&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;o&lt;/code&gt; &amp;rArr; &lt;a href=&quot;trait.octal&quot;&gt; &lt;code&gt;Octal&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e1f75c275e14ea5638dd6d590318a3c8bf1c8cb4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;o&lt;/code&gt; formatting.</source>
          <target state="translated">&lt;code&gt;o&lt;/code&gt; 서식.</target>
        </trans-unit>
        <trans-unit id="20cce486740389f1d5738f34ccecfed323be3639" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;p&lt;/code&gt; &amp;rArr; &lt;a href=&quot;trait.pointer&quot;&gt;&lt;code&gt;Pointer&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;p&lt;/code&gt; &amp;rArr; &lt;a href=&quot;trait.pointer&quot;&gt; &lt;code&gt;Pointer&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="360942977c79e331a3a8464d736dd5d71915c56e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;p&lt;/code&gt; formatting.</source>
          <target state="translated">&lt;code&gt;p&lt;/code&gt; 형식.</target>
        </trans-unit>
        <trans-unit id="190cbefced0a1808c6388593add68e2947f18f43" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;parse&lt;/code&gt; can parse any type that implements the &lt;a href=&quot;str/trait.fromstr&quot;&gt;&lt;code&gt;FromStr&lt;/code&gt;&lt;/a&gt; trait.</source>
          <target state="translated">&lt;code&gt;parse&lt;/code&gt; 은 &lt;a href=&quot;str/trait.fromstr&quot;&gt; &lt;code&gt;FromStr&lt;/code&gt; &lt;/a&gt; 특성 을 구현하는 모든 유형을 구문 분석 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="293f7d5ce46515832fdf3fe705bdf4ccf490c5a3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pat: type&lt;/code&gt;, &lt;code&gt;ident: type&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;pat: type&lt;/code&gt; , &lt;code&gt;ident: type&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5bf2ca04852220f7f0966d0d2316ccea928b0523" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pat&lt;/code&gt; may only be followed by one of: &lt;code&gt;=&amp;gt;&lt;/code&gt;, &lt;code&gt;,&lt;/code&gt;, &lt;code&gt;=&lt;/code&gt;, &lt;code&gt;|&lt;/code&gt;, &lt;code&gt;if&lt;/code&gt;, or &lt;code&gt;in&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;pat&lt;/code&gt; 단지 하나의 뒤에는 수 &lt;code&gt;=&amp;gt;&lt;/code&gt; , &lt;code&gt;,&lt;/code&gt; , &lt;code&gt;=&lt;/code&gt; , &lt;code&gt;|&lt;/code&gt; , &lt;code&gt;if&lt;/code&gt; , 또는 &lt;code&gt;in&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d322a979efb924539a918c172e6431056aab5037" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pat&lt;/code&gt;: a &lt;a href=&quot;patterns&quot;&gt;&lt;em&gt;Pattern&lt;/em&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;pat&lt;/code&gt; : &lt;a href=&quot;patterns&quot;&gt;&lt;em&gt;패턴&lt;/em&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7d1f6da81ce745a0b93980b2e3f737e3409475af" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;path::&amp;lt;...&amp;gt;&lt;/code&gt;, &lt;code&gt;method::&amp;lt;...&amp;gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;path::&amp;lt;...&amp;gt;&lt;/code&gt; , &lt;code&gt;method::&amp;lt;...&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1d3ea949aec2d359f48702d56aa94147df267d46" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;path&lt;/code&gt; already exists.</source>
          <target state="translated">&lt;code&gt;path&lt;/code&gt; 이미 존재합니다.</target>
        </trans-unit>
        <trans-unit id="2d4168095a748d7358dd07871a8d1825e9b913ba" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;path&lt;/code&gt; and &lt;code&gt;ty&lt;/code&gt; may only be followed by one of: &lt;code&gt;=&amp;gt;&lt;/code&gt;, &lt;code&gt;,&lt;/code&gt;, &lt;code&gt;=&lt;/code&gt;, &lt;code&gt;|&lt;/code&gt;, &lt;code&gt;;&lt;/code&gt;, &lt;code&gt;:&lt;/code&gt;, &lt;code&gt;&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;gt;&amp;gt;&lt;/code&gt;, &lt;code&gt;[&lt;/code&gt;, &lt;code&gt;{&lt;/code&gt;, &lt;code&gt;as&lt;/code&gt;, &lt;code&gt;where&lt;/code&gt;, or a macro variable of &lt;code&gt;block&lt;/code&gt; fragment specifier.</source>
          <target state="translated">&lt;code&gt;path&lt;/code&gt; 및 &lt;code&gt;ty&lt;/code&gt; 단지 하나의 뒤에는 수 &lt;code&gt;=&amp;gt;&lt;/code&gt; , &lt;code&gt;,&lt;/code&gt; , &lt;code&gt;=&lt;/code&gt; , &lt;code&gt;|&lt;/code&gt; , &lt;code&gt;;&lt;/code&gt; , &lt;code&gt;:&lt;/code&gt; , &lt;code&gt;&amp;gt;&lt;/code&gt; , &lt;code&gt;&amp;gt;&amp;gt;&lt;/code&gt; , &lt;code&gt;[&lt;/code&gt; , &lt;code&gt;{&lt;/code&gt; , &lt;code&gt;as&lt;/code&gt; , &lt;code&gt;where&lt;/code&gt; 또는 &lt;code&gt;block&lt;/code&gt; 조각 지정자 의 매크로 변수 .</target>
        </trans-unit>
        <trans-unit id="122aa7f8c8d3e74625fdea0701e8791222b62df8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;path&lt;/code&gt; does not exist.</source>
          <target state="translated">&lt;code&gt;path&lt;/code&gt; 가 존재하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="eec160ea04755003d0325fae2c97b0610ec38f98" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;path&lt;/code&gt; is not a symbolic link.</source>
          <target state="translated">&lt;code&gt;path&lt;/code&gt; 는 심볼릭 링크가 아닙니다.</target>
        </trans-unit>
        <trans-unit id="9fe8d91c25a88a11813340fa8960010fd740dd86" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;path&lt;/code&gt; points to a directory.</source>
          <target state="translated">&lt;code&gt;path&lt;/code&gt; 는 디렉토리를 가리 킵니다.</target>
        </trans-unit>
        <trans-unit id="bc7d3530ef55ff8f2e2ea7b711cec32dd803949a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;path&lt;/code&gt;: a &lt;a href=&quot;paths#paths-in-types&quot;&gt;&lt;em&gt;TypePath&lt;/em&gt;&lt;/a&gt; style path</source>
          <target state="translated">&lt;code&gt;path&lt;/code&gt; : &lt;a href=&quot;paths#paths-in-types&quot;&gt;&lt;em&gt;TypePath&lt;/em&gt;&lt;/a&gt; 스타일 경로</target>
        </trans-unit>
        <trans-unit id="3aeb6a95b9bb64eb7301ee964f59fd6f2bad2d6d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;position()&lt;/code&gt; is short-circuiting; in other words, it will stop processing as soon as it finds a &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;position()&lt;/code&gt; 이 단락되었습니다. 즉, &lt;code&gt;true&lt;/code&gt; 를 발견하면 처리를 중지 합니다 .</target>
        </trans-unit>
        <trans-unit id="a77ff08b387d2123d312f7dc0c9f0a010db1bf10" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;position()&lt;/code&gt; takes a closure that returns &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt;. It applies this closure to each element of the iterator, and if one of them returns &lt;code&gt;true&lt;/code&gt;, then &lt;code&gt;position()&lt;/code&gt; returns &lt;a href=&quot;../option/enum.option#variant.Some&quot;&gt;&lt;code&gt;Some(index)&lt;/code&gt;&lt;/a&gt;. If all of them return &lt;code&gt;false&lt;/code&gt;, it returns &lt;a href=&quot;../option/enum.option#variant.None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;position()&lt;/code&gt; 은 &lt;code&gt;true&lt;/code&gt; 또는 &lt;code&gt;false&lt;/code&gt; 를 반환하는 클로저를 사용합니다 . 이 클로저를 반복자의 각 요소에 적용하고 그중 하나가 &lt;code&gt;true&lt;/code&gt; 를 반환 하면 &lt;code&gt;position()&lt;/code&gt; 은 &lt;a href=&quot;../option/enum.option#variant.Some&quot;&gt; &lt;code&gt;Some(index)&lt;/code&gt; &lt;/a&gt; 반환합니다 . 모두 &lt;code&gt;false&lt;/code&gt; 를 반환하면 &lt;a href=&quot;../option/enum.option#variant.None&quot;&gt; &lt;code&gt;None&lt;/code&gt; &lt;/a&gt; 을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="0ae0ae8b31ae213c17c24b4b4e64fa68ea0864ef" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ptr&lt;/code&gt; must be currently allocated via this allocator,</source>
          <target state="translated">&lt;code&gt;ptr&lt;/code&gt; 은 현재이 할당자를 통해 할당되어야합니다.</target>
        </trans-unit>
        <trans-unit id="e34744a0d10c190463b762b39debe9b176030206" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ptr&lt;/code&gt; must be non-null.</source>
          <target state="translated">&lt;code&gt;ptr&lt;/code&gt; 은 널이 아니어야합니다.</target>
        </trans-unit>
        <trans-unit id="35d670a5397ff10d3a6550a1dc4c62b1d8cc1eaa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ptr&lt;/code&gt; must denote a block of memory currently allocated via this allocator</source>
          <target state="translated">&lt;code&gt;ptr&lt;/code&gt; 은이 할당자를 통해 현재 할당 된 메모리 블록을 나타내야합니다.</target>
        </trans-unit>
        <trans-unit id="12068198cfce6c81a5022dd5b1bec0de89ed6019" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ptr&lt;/code&gt; must denote a block of memory currently allocated via this allocator,</source>
          <target state="translated">&lt;code&gt;ptr&lt;/code&gt; 은이 할당자를 통해 현재 할당 된 메모리 블록을 나타내야합니다.</target>
        </trans-unit>
        <trans-unit id="9e9b2ae0672c1d431fa9f5b46c7dd4fa34681b5e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ptr&lt;/code&gt; needs to have been previously allocated via &lt;a href=&quot;../string/struct.string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt;/&lt;code&gt;Vec&amp;lt;T&amp;gt;&lt;/code&gt; (at least, it's highly likely to be incorrect if it wasn't).</source>
          <target state="translated">&lt;code&gt;ptr&lt;/code&gt; 은 이전에 &lt;a href=&quot;../string/struct.string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt; / &lt;code&gt;Vec&amp;lt;T&amp;gt;&lt;/code&gt; 를 통해 할당되어 있어야합니다 (적어도 그렇지 않으면 잘못되었을 가능성이 높습니다).</target>
        </trans-unit>
        <trans-unit id="7a630e90d76d8d484503d08533b0cfae42a4c465" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ptr&lt;/code&gt;'s &lt;code&gt;T&lt;/code&gt; needs to have the same size and alignment as it was allocated with.</source>
          <target state="translated">&lt;code&gt;ptr&lt;/code&gt; 의 &lt;code&gt;T&lt;/code&gt; 는 할당 된 크기와 정렬이 같아야합니다.</target>
        </trans-unit>
        <trans-unit id="3716c897be4542682afec1ccd5f2b7a00a78a499" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub(crate)&lt;/code&gt; makes an item visible within the current crate.</source>
          <target state="translated">&lt;code&gt;pub(crate)&lt;/code&gt; 는 아이템을 현재 상자 안에 보이게합니다.</target>
        </trans-unit>
        <trans-unit id="e244e5c6210bbaeafb8a20af2bd53f7f634e9d92" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub(in path)&lt;/code&gt; makes an item visible within the provided &lt;code&gt;path&lt;/code&gt;. &lt;code&gt;path&lt;/code&gt; must be a parent module of the item whose visibility is being declared.</source>
          <target state="translated">&lt;code&gt;pub(in path)&lt;/code&gt; 는 제공된 &lt;code&gt;path&lt;/code&gt; 내에 항목을 표시 합니다 . &lt;code&gt;path&lt;/code&gt; 는 가시성이 선언되는 항목의 상위 모듈이어야합니다.</target>
        </trans-unit>
        <trans-unit id="7f2e98367a724327f63f5b73009472cb3e139320" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub(in path)&lt;/code&gt;, &lt;code&gt;pub(crate)&lt;/code&gt;, &lt;code&gt;pub(super)&lt;/code&gt;, and &lt;code&gt;pub(self)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;pub(in path)&lt;/code&gt; , &lt;code&gt;pub(crate)&lt;/code&gt; , &lt;code&gt;pub(super)&lt;/code&gt; 및 &lt;code&gt;pub(self)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5d6fa93376a74580a8a18e9c3023defaeec815f0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub(self)&lt;/code&gt; makes an item visible to the current module. This is equivalent to &lt;code&gt;pub(in self)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;pub(self)&lt;/code&gt; 는 아이템을 현재 모듈에 보이게합니다. 이것은 &lt;code&gt;pub(in self)&lt;/code&gt; 와 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="ed18bc09fd5d8672a156418d5af9c753fc33dc75" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub(super)&lt;/code&gt; makes an item visible to the parent module. This is equivalent to &lt;code&gt;pub(in super)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;pub(super)&lt;/code&gt; 는 항목을 상위 모듈에 표시합니다. 이것은 &lt;code&gt;pub(in super)&lt;/code&gt; 와 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="a1be70fc2abd812619326b7d5f484cb66c683356" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub&lt;/code&gt; - denote public visibility in struct fields, &lt;code&gt;impl&lt;/code&gt; blocks, or modules</source>
          <target state="translated">&lt;code&gt;pub&lt;/code&gt; - 구조체 분야에서 나타낸다 공공 가시성 &lt;code&gt;impl&lt;/code&gt; 블록 또는 모듈</target>
        </trans-unit>
        <trans-unit id="5c7277d7b9e326c8e7cd0225ac28502af51b85c3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub&lt;/code&gt;&lt;sup&gt;?&lt;/sup&gt;</source>
          <target state="translated">&lt;code&gt;pub&lt;/code&gt;&lt;sup&gt;?&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="cbc45e05a8267e7a3bdf40fcaa4d87714bd3c619" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;r&quot;...&quot;&lt;/code&gt;, &lt;code&gt;r#&quot;...&quot;#&lt;/code&gt;, &lt;code&gt;r##&quot;...&quot;##&lt;/code&gt;, etc.</source>
          <target state="translated">&lt;code&gt;r&quot;...&quot;&lt;/code&gt; , &lt;code&gt;r#&quot;...&quot;#&lt;/code&gt; , &lt;code&gt;r##&quot;...&quot;##&lt;/code&gt; 등</target>
        </trans-unit>
        <trans-unit id="3f1ef34dfac0fbdff6a58587b64f54cfadfbab83" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;r&lt;/code&gt; RAW_STRING_CONTENT</source>
          <target state="translated">&lt;code&gt;r&lt;/code&gt; RAW_STRING_CONTENT</target>
        </trans-unit>
        <trans-unit id="b3496df7f964b3da68df1770f73523cff9459893" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;read&lt;/code&gt; creates a bitwise copy of &lt;code&gt;T&lt;/code&gt;, regardless of whether &lt;code&gt;T&lt;/code&gt; is &lt;a href=&quot;../marker/trait.copy&quot;&gt;&lt;code&gt;Copy&lt;/code&gt;&lt;/a&gt;. If &lt;code&gt;T&lt;/code&gt; is not &lt;a href=&quot;../marker/trait.copy&quot;&gt;&lt;code&gt;Copy&lt;/code&gt;&lt;/a&gt;, using both the returned value and the value at &lt;code&gt;*src&lt;/code&gt; can violate memory safety. Note that assigning to &lt;code&gt;*src&lt;/code&gt; counts as a use because it will attempt to drop the value at &lt;code&gt;*src&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;read&lt;/code&gt; 는 &lt;code&gt;T&lt;/code&gt; 가 &lt;a href=&quot;../marker/trait.copy&quot;&gt; &lt;code&gt;Copy&lt;/code&gt; &lt;/a&gt; 인지 여부에 관계없이 &lt;code&gt;T&lt;/code&gt; 의 비트 단위 복사본을 만듭니다 . &lt;code&gt;T&lt;/code&gt; 가 &lt;a href=&quot;../marker/trait.copy&quot;&gt; &lt;code&gt;Copy&lt;/code&gt; &lt;/a&gt; 가 아닌 경우 리턴 된 값과 &lt;code&gt;*src&lt;/code&gt; 의 값을 모두 사용하면 메모리 안전을 위반할 수 있습니다. 에 할당합니다 &lt;code&gt;*src&lt;/code&gt; 용도로 계산하는 것은 그것의 값을 드롭을 시도하기 때문에 &lt;code&gt;*src&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="79aec6cdde39a19b7d9a9a800222b6ad5595ce43" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ref&lt;/code&gt; - bind by reference</source>
          <target state="translated">&lt;code&gt;ref&lt;/code&gt; -참조로 바인딩</target>
        </trans-unit>
        <trans-unit id="38457fb066838f03c4b2e9c59b4180790259129a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ref&lt;/code&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;code&gt;mut&lt;/code&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;a href=&quot;identifiers&quot;&gt;IDENTIFIER&lt;/a&gt; (&lt;code&gt;@&lt;/code&gt;&lt;a href=&quot;patterns#patterns&quot;&gt;&lt;em&gt;Pattern&lt;/em&gt;&lt;/a&gt; ) &lt;sup&gt;?&lt;/sup&gt;</source>
          <target state="translated">&lt;code&gt;ref&lt;/code&gt; &lt;sup&gt;? &lt;/sup&gt; &lt;code&gt;mut&lt;/code&gt; &lt;sup&gt;? &lt;/sup&gt;&lt;a href=&quot;identifiers&quot;&gt;IDENTIFIER&lt;/a&gt; ( &lt;code&gt;@&lt;/code&gt; &lt;a href=&quot;patterns#patterns&quot;&gt;&lt;em&gt;패턴&lt;/em&gt;&lt;/a&gt; ) &lt;sup&gt;?&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="9454523b62c6c9dc19c0e79cd1c9c70bc5714f0c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;repetition&lt;/code&gt; : a fragment that follows a regular repeating pattern</source>
          <target state="translated">&lt;code&gt;repetition&lt;/code&gt; : 규칙적인 반복 패턴을 따르는 조각</target>
        </trans-unit>
        <trans-unit id="4548cf0b854b0433c6e4f6378c8dcc6fa06e9627" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;replace&lt;/code&gt; allows consumption of a struct field by replacing it with another value. Without &lt;code&gt;replace&lt;/code&gt; you can run into issues like these:</source>
          <target state="translated">&lt;code&gt;replace&lt;/code&gt; 구조체 필드를 다른 값으로 바꾸어 소비 할 수 있습니다. &lt;code&gt;replace&lt;/code&gt; 하지 않으면 다음과 같은 문제가 발생할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e0267f0c7b2765a197ed1365af284f22a1f3e107" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;replace&lt;/code&gt; creates a new &lt;a href=&quot;string/struct.string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt;, and copies the data from this string slice into it. While doing so, it attempts to find matches of a pattern. If it finds any, it replaces them with the replacement string slice.</source>
          <target state="translated">&lt;code&gt;replace&lt;/code&gt; 새 &lt;a href=&quot;string/struct.string&quot;&gt; &lt;code&gt;String&lt;/code&gt; 을&lt;/a&gt; 만들고이 문자열 슬라이스의 데이터를 복사합니다. 그렇게하는 동안 패턴과 일치하는 것을 찾으려고 시도합니다. 발견되면 대체 문자열 슬라이스로 대체합니다.</target>
        </trans-unit>
        <trans-unit id="e65ccabcad8d607cfa9500600b305c3d751e4bf9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;replacen&lt;/code&gt; creates a new &lt;a href=&quot;string/struct.string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt;, and copies the data from this string slice into it. While doing so, it attempts to find matches of a pattern. If it finds any, it replaces them with the replacement string slice at most &lt;code&gt;count&lt;/code&gt; times.</source>
          <target state="translated">&lt;code&gt;replacen&lt;/code&gt; 은 새 &lt;a href=&quot;string/struct.string&quot;&gt; &lt;code&gt;String&lt;/code&gt; 을&lt;/a&gt; 만들고이 문자열 슬라이스의 데이터를 복사합니다. 그렇게하는 동안 패턴과 일치하는 것을 찾으려고 시도합니다. 발견되면, 대부분의 &lt;code&gt;count&lt;/code&gt; 만큼 대체 문자열 슬라이스로 대체합니다 .</target>
        </trans-unit>
        <trans-unit id="7b0a2e84d7415dc958fe7758bd7cf63a180bb417" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;return&lt;/code&gt; - return from function</source>
          <target state="translated">&lt;code&gt;return&lt;/code&gt; - 함수에서 반환</target>
        </trans-unit>
        <trans-unit id="c15a670ff1938000c192dad14fac98a79e2e3ac2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;return&lt;/code&gt; expressions</source>
          <target state="translated">&lt;code&gt;return&lt;/code&gt; 식 반환</target>
        </trans-unit>
        <trans-unit id="67a81bce7735c4c8dcc873ea0d8ed586e63971f3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;return&lt;/code&gt;&lt;a href=&quot;../expressions&quot;&gt;&lt;em&gt;Expression&lt;/em&gt;&lt;/a&gt;&lt;sup&gt;?&lt;/sup&gt;</source>
          <target state="translated">&lt;code&gt;return&lt;/code&gt;&lt;a href=&quot;../expressions&quot;&gt;&lt;em&gt;Expression&lt;/em&gt;&lt;/a&gt;&lt;sup&gt;?&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="0c20b32549eb0c3e50bf26b6136d1fcb33d1aca0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;return&lt;/code&gt;&lt;code&gt;break&lt;/code&gt; closures</source>
          <target state="translated">&lt;code&gt;return&lt;/code&gt; &lt;code&gt;break&lt;/code&gt; 폐쇄</target>
        </trans-unit>
        <trans-unit id="f231dbdc06422e9ea5b9cfe17ce77515dd672e8a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;rfind()&lt;/code&gt; is short-circuiting; in other words, it will stop processing as soon as the closure returns &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;rfind()&lt;/code&gt; 가 단락되었습니다. 즉, 클로저가 &lt;code&gt;true&lt;/code&gt; 를 반환하자마자 처리를 중지 합니다 .</target>
        </trans-unit>
        <trans-unit id="d97aff1d14d8fb997058b7557012d977906f7ad3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;rfind()&lt;/code&gt; takes a closure that returns &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt;. It applies this closure to each element of the iterator, starting at the end, and if any of them return &lt;code&gt;true&lt;/code&gt;, then &lt;code&gt;rfind()&lt;/code&gt; returns &lt;a href=&quot;../option/enum.option#variant.Some&quot;&gt;&lt;code&gt;Some(element)&lt;/code&gt;&lt;/a&gt;. If they all return &lt;code&gt;false&lt;/code&gt;, it returns &lt;a href=&quot;../option/enum.option#variant.None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;rfind()&lt;/code&gt; 는 다음을 리턴하는 클로저를 사용합니다. &lt;code&gt;true&lt;/code&gt; 또는 &lt;code&gt;false&lt;/code&gt; . 이 클로저는 마지막부터 시작하여 반복자의 각 요소에 적용되며 , 그 중 하나가 &lt;code&gt;true&lt;/code&gt; 를 &lt;code&gt;rfind()&lt;/code&gt; 하면 rfind () 는 &lt;a href=&quot;../option/enum.option#variant.Some&quot;&gt; &lt;code&gt;Some(element)&lt;/code&gt; &lt;/a&gt; 반환합니다 . 모두 &lt;code&gt;false&lt;/code&gt; 를 반환하면 &lt;a href=&quot;../option/enum.option#variant.None&quot;&gt; &lt;code&gt;None&lt;/code&gt; &lt;/a&gt; 을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="0469fbc0fcd72dff61e3038e1b41c1ee7696ac80" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;rfold()&lt;/code&gt; takes two arguments: an initial value, and a closure with two arguments: an 'accumulator', and an element. The closure returns the value that the accumulator should have for the next iteration.</source>
          <target state="translated">&lt;code&gt;rfold()&lt;/code&gt; 는 두 개의 인수, 즉 초기 값과 두 개의 인수가있는 클로저 인 '누적 기'와 요소를 갖습니다. 클로저는 다음 반복에 대해 누산기의 값을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="c315b4e152c3d9045dd11786d11f385ee7391d4f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;rposition()&lt;/code&gt; is short-circuiting; in other words, it will stop processing as soon as it finds a &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;rposition()&lt;/code&gt; 이 단락되었습니다. 즉, &lt;code&gt;true&lt;/code&gt; 를 발견하면 처리를 중지 합니다 .</target>
        </trans-unit>
        <trans-unit id="3f8832ab36f0d97e64ef12568fd3b388e8fc770d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;rposition()&lt;/code&gt; takes a closure that returns &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt;. It applies this closure to each element of the iterator, starting from the end, and if one of them returns &lt;code&gt;true&lt;/code&gt;, then &lt;code&gt;rposition()&lt;/code&gt; returns &lt;a href=&quot;../option/enum.option#variant.Some&quot;&gt;&lt;code&gt;Some(index)&lt;/code&gt;&lt;/a&gt;. If all of them return &lt;code&gt;false&lt;/code&gt;, it returns &lt;a href=&quot;../option/enum.option#variant.None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;rposition()&lt;/code&gt; 은 &lt;code&gt;true&lt;/code&gt; 또는 &lt;code&gt;false&lt;/code&gt; 를 반환하는 클로저를 사용합니다. . 이 클로저는 끝부터 시작하여 반복자의 각 요소에 적용되며 그중 하나가 &lt;code&gt;true&lt;/code&gt; 를 반환 하면 &lt;code&gt;rposition()&lt;/code&gt; 은 &lt;a href=&quot;../option/enum.option#variant.Some&quot;&gt; &lt;code&gt;Some(index)&lt;/code&gt; &lt;/a&gt; 반환합니다 . 모두 &lt;code&gt;false&lt;/code&gt; 를 반환하면 &lt;a href=&quot;../option/enum.option#variant.None&quot;&gt; &lt;code&gt;None&lt;/code&gt; &lt;/a&gt; 을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="44187ffc6652aaa7c984920b559cb964fc11164b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;scan()&lt;/code&gt; takes two arguments: an initial value which seeds the internal state, and a closure with two arguments, the first being a mutable reference to the internal state and the second an iterator element. The closure can assign to the internal state to share state between iterations.</source>
          <target state="translated">&lt;code&gt;scan()&lt;/code&gt; 은 두 가지 인수, 즉 내부 상태를 시드하는 초기 값과 두 개의 인수를 가진 클로저를 사용합니다. 첫 번째는 내부 상태에 대한 변경 가능한 참조이고 두 번째는 반복자 요소입니다. 클로저는 내부 상태를 할당하여 반복간에 상태를 공유 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b7e4087a59d7db17a93ec98d1a6e141c27cefeb5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;self&lt;/code&gt; - method subject or current module</source>
          <target state="translated">&lt;code&gt;self&lt;/code&gt; 방법 주제 또는 현재 모듈</target>
        </trans-unit>
        <trans-unit id="5a57893af25bf81ba3c2d3e57e6480c1e0642a56" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;self&lt;/code&gt; resolves the path relative to the current module. &lt;code&gt;self&lt;/code&gt; can only be used as the first segment, without a preceding &lt;code&gt;::&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;self&lt;/code&gt; 는 현재 모듈과 관련된 경로를 확인합니다. &lt;code&gt;self&lt;/code&gt; 는 선행 &lt;code&gt;::&lt;/code&gt; 없이 첫 번째 세그먼트로만 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="82740239487244545117186e09a09c10f8b9fdfd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;separated complex NT&lt;/code&gt;: a complex NT that has its own separator token.</source>
          <target state="translated">&lt;code&gt;separated complex NT&lt;/code&gt; : 자체 분리기 토큰이있는 복합 NT.</target>
        </trans-unit>
        <trans-unit id="05b574e7c6fd33234ec611e29bcd10bb6d5d9405" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;separator token&lt;/code&gt;: an optional delimiter token in an complex NT that separates each pair of elements in the matched repetition.</source>
          <target state="translated">&lt;code&gt;separator token&lt;/code&gt; : 복잡한 NT의 선택적 분리기 토큰으로 일치하는 반복에서 각 요소 쌍을 분리합니다.</target>
        </trans-unit>
        <trans-unit id="f640c658e0dc190b95d5120e0f41acc1036e6277" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;simple NT&lt;/code&gt;: a &quot;meta-variable&quot; non-terminal (further discussion below).</source>
          <target state="translated">&lt;code&gt;simple NT&lt;/code&gt; : &quot;메타 변수&quot;비 터미널 (아래에 자세히 설명).</target>
        </trans-unit>
        <trans-unit id="1f33d4f90ab86cc078ac8802a8cffe79680a48bd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;since&lt;/code&gt; &amp;mdash; Specifies a version number when the item was deprecated. &lt;code&gt;rustc&lt;/code&gt; does not currently interpret the string, but external tools like &lt;a href=&quot;https://github.com/rust-lang/rust-clippy&quot;&gt;Clippy&lt;/a&gt; may check the validity of the value.</source>
          <target state="translated">&lt;code&gt;since&lt;/code&gt; &amp;mdash; 항목이 사용되지 않는 버전 번호를 지정합니다. &lt;code&gt;rustc&lt;/code&gt; 는 현재 문자열을 해석하지 않지만 &lt;a href=&quot;https://github.com/rust-lang/rust-clippy&quot;&gt;Clippy&lt;/a&gt; 와 같은 외부 도구 는 값의 유효성을 검사 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e6561540a07c369427c9b5c968c7291f45dab48b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;size&lt;/code&gt;, when rounded up to the nearest multiple of &lt;code&gt;align&lt;/code&gt;, must not overflow (i.e., the rounded value must be less than &lt;code&gt;usize::MAX&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;size&lt;/code&gt; , 가장 가까운 &lt;code&gt;align&lt;/code&gt; 배수로 반올림 될 때 넘치지 않아야합니다 (즉, 반올림 된 값은 &lt;code&gt;usize::MAX&lt;/code&gt; 보다 작아야 합니다 ).</target>
        </trans-unit>
        <trans-unit id="d17aa1d875dfa9b462d34dfe331e338ba203115a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;size_hint()&lt;/code&gt; is primarily intended to be used for optimizations such as reserving space for the elements of the iterator, but must not be trusted to e.g., omit bounds checks in unsafe code. An incorrect implementation of &lt;code&gt;size_hint()&lt;/code&gt; should not lead to memory safety violations.</source>
          <target state="translated">&lt;code&gt;size_hint()&lt;/code&gt; 는 주로 반복자 요소의 공간을 예약하는 등의 최적화에 사용되지만 안전하지 않은 코드에서 경계 검사를 생략하는 것으로 신뢰해서는 안됩니다. &lt;code&gt;size_hint()&lt;/code&gt; 잘못 구현 하면 메모리 안전 위반이 발생하지 않아야합니다.</target>
        </trans-unit>
        <trans-unit id="4f70e02bad1fb8a115ec2bfeaeadee2c07c0caa1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;skip_while()&lt;/code&gt; takes a closure as an argument. It will call this closure on each element of the iterator, and ignore elements until it returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;skip_while()&lt;/code&gt; 은 인수로 클로저를 사용합니다. 반복자의 각 요소에 대해이 클로저를 호출하고 &lt;code&gt;false&lt;/code&gt; 를 반환 할 때까지 요소를 무시합니다 .</target>
        </trans-unit>
        <trans-unit id="2325ded05106fa9a2bed447d21025c84f50f5ea3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;src&lt;/code&gt; is the range within &lt;code&gt;self&lt;/code&gt; to copy from. &lt;code&gt;dest&lt;/code&gt; is the starting index of the range within &lt;code&gt;self&lt;/code&gt; to copy to, which will have the same length as &lt;code&gt;src&lt;/code&gt;. The two ranges may overlap. The ends of the two ranges must be less than or equal to &lt;code&gt;self.len()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;src&lt;/code&gt; 는 복사 할 &lt;code&gt;self&lt;/code&gt; 내의 범위 입니다. &lt;code&gt;dest&lt;/code&gt; 는 복사 할 &lt;code&gt;self&lt;/code&gt; 내에서 범위의 시작 색인이며 &lt;code&gt;src&lt;/code&gt; 와 길이가 같습니다. . 두 범위가 겹칠 수 있습니다. 두 범위의 끝은 &lt;code&gt;self.len()&lt;/code&gt; 이하 여야합니다 .</target>
        </trans-unit>
        <trans-unit id="c0917646d8728988487d064fac2c14f59a665065" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;src&lt;/code&gt; must be &lt;a href=&quot;../ptr/index#safety&quot;&gt;valid&lt;/a&gt; for reads of &lt;code&gt;count * size_of::&amp;lt;T&amp;gt;()&lt;/code&gt; bytes.</source>
          <target state="translated">&lt;code&gt;src&lt;/code&gt; 는 읽기에 &lt;a href=&quot;../ptr/index#safety&quot;&gt;유효&lt;/a&gt; 해야합니다. &lt;code&gt;count * size_of::&amp;lt;T&amp;gt;()&lt;/code&gt; 바이트 .</target>
        </trans-unit>
        <trans-unit id="154a0d95375b0182f8e4fdfa80a253d710d41383" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;src&lt;/code&gt; must be &lt;a href=&quot;index#safety&quot;&gt;valid&lt;/a&gt; for reads of &lt;code&gt;count * size_of::&amp;lt;T&amp;gt;()&lt;/code&gt; bytes.</source>
          <target state="translated">&lt;code&gt;src&lt;/code&gt; 는 읽기에 &lt;a href=&quot;index#safety&quot;&gt;유효&lt;/a&gt; 해야합니다. &lt;code&gt;count * size_of::&amp;lt;T&amp;gt;()&lt;/code&gt; 바이트 .</target>
        </trans-unit>
        <trans-unit id="c3932aaae250c78900aaba45274ae965ddbcd18a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;src&lt;/code&gt; must be &lt;a href=&quot;index#safety&quot;&gt;valid&lt;/a&gt; for reads.</source>
          <target state="translated">&lt;code&gt;src&lt;/code&gt; 는 읽기에 &lt;a href=&quot;index#safety&quot;&gt;유효&lt;/a&gt; 해야합니다 .</target>
        </trans-unit>
        <trans-unit id="1eb5075986eee387a9acdc56f4940da2f7a19994" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;src&lt;/code&gt; must be properly aligned.</source>
          <target state="translated">&lt;code&gt;src&lt;/code&gt; 가 올바르게 정렬되어야합니다.</target>
        </trans-unit>
        <trans-unit id="f441a811656a0c3dd4a6016a7503878191979ea2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;src&lt;/code&gt; must be properly aligned. Use &lt;a href=&quot;fn.read_unaligned&quot;&gt;&lt;code&gt;read_unaligned&lt;/code&gt;&lt;/a&gt; if this is not the case.</source>
          <target state="translated">&lt;code&gt;src&lt;/code&gt; 가 올바르게 정렬되어야합니다. &lt;a href=&quot;fn.read_unaligned&quot;&gt; &lt;code&gt;read_unaligned&lt;/code&gt; &lt;/a&gt; 않은 경우 read_unaligned를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="25e236aef0934c86a0d74b6088d301f4eaca2720" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;static&lt;/code&gt; &amp;mdash; Indicates a static library.</source>
          <target state="translated">&lt;code&gt;static&lt;/code&gt; &amp;mdash; 정적 라이브러리를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="64cb1a64239891af05cbbbc93d77402f661c4c47" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;static&lt;/code&gt; - global variable or lifetime lasting the entire program execution</source>
          <target state="translated">&lt;code&gt;static&lt;/code&gt; - 전체 프로그램 실행을 지속시키는 전역 변수 또는 수명</target>
        </trans-unit>
        <trans-unit id="ebbc410882f7d5448c407ca5659024240a6dda57" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;static&lt;/code&gt; and &lt;code&gt;const&lt;/code&gt; statements (similar to &lt;code&gt;let&lt;/code&gt; statements).</source>
          <target state="translated">&lt;code&gt;static&lt;/code&gt; 및 &lt;code&gt;const&lt;/code&gt; 문 ( &lt;code&gt;let&lt;/code&gt; 문과 유사 )</target>
        </trans-unit>
        <trans-unit id="c95a320ef3efcbc4189ba9ec5c6dd858f287b25e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;static&lt;/code&gt;&lt;code&gt;mut&lt;/code&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;a href=&quot;../identifiers&quot;&gt;IDENTIFIER&lt;/a&gt;&lt;code&gt;:&lt;/code&gt;&lt;a href=&quot;../types#type-expressions&quot;&gt;&lt;em&gt;Type&lt;/em&gt;&lt;/a&gt;&lt;code&gt;;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;static&lt;/code&gt;&lt;code&gt;mut&lt;/code&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;a href=&quot;../identifiers&quot;&gt;IDENTIFIER&lt;/a&gt;&lt;code&gt;:&lt;/code&gt;&lt;a href=&quot;../types#type-expressions&quot;&gt;&lt;em&gt;Type&lt;/em&gt;&lt;/a&gt;&lt;code&gt;;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0919ec1ea19851132893298b32894f6e70049d6d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;static&lt;/code&gt;&lt;code&gt;mut&lt;/code&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;a href=&quot;../identifiers&quot;&gt;IDENTIFIER&lt;/a&gt;&lt;code&gt;:&lt;/code&gt;&lt;a href=&quot;../types#type-expressions&quot;&gt;&lt;em&gt;Type&lt;/em&gt;&lt;/a&gt;&lt;code&gt;=&lt;/code&gt;&lt;a href=&quot;../expressions&quot;&gt;&lt;em&gt;Expression&lt;/em&gt;&lt;/a&gt;&lt;code&gt;;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;static&lt;/code&gt;&lt;code&gt;mut&lt;/code&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;a href=&quot;../identifiers&quot;&gt;IDENTIFIER&lt;/a&gt;&lt;code&gt;:&lt;/code&gt;&lt;a href=&quot;../types#type-expressions&quot;&gt;&lt;em&gt;Type&lt;/em&gt;&lt;/a&gt;&lt;code&gt;=&lt;/code&gt;&lt;a href=&quot;../expressions&quot;&gt;&lt;em&gt;Expression&lt;/em&gt;&lt;/a&gt;&lt;code&gt;;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="bcb4b5702c1587354d79a6cfe054038f4afdf76a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;std::*&lt;/code&gt; modules</source>
          <target state="translated">&lt;code&gt;std::*&lt;/code&gt; 모듈</target>
        </trans-unit>
        <trans-unit id="4f28c89525ec17874a17d9bd45904c60323a26a7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;std&lt;/code&gt; is available to all Rust crates by default. Therefore, the standard library can be accessed in &lt;a href=&quot;../book/ch07-02-defining-modules-to-control-scope-and-privacy&quot;&gt;&lt;code&gt;use&lt;/code&gt;&lt;/a&gt; statements through the path &lt;code&gt;std&lt;/code&gt;, as in &lt;a href=&quot;env/index&quot;&gt;&lt;code&gt;use std::env&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;std&lt;/code&gt; 는 기본적으로 모든 녹 상자에 사용할 수 있습니다. 따라서 표준 라이브러리는 &lt;a href=&quot;env/index&quot;&gt; &lt;code&gt;use std::env&lt;/code&gt; &lt;/a&gt; 와 같이 &lt;code&gt;std&lt;/code&gt; 경로를 통해 &lt;a href=&quot;../book/ch07-02-defining-modules-to-control-scope-and-privacy&quot;&gt; &lt;code&gt;use&lt;/code&gt; &lt;/a&gt; 문 에서 액세스 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="1547b82dd2d11f511fe70c22b40a48ae8af6fcc4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;stmt&lt;/code&gt;: a &lt;a href=&quot;statements&quot;&gt;&lt;em&gt;Statement&lt;/em&gt;&lt;/a&gt; without the trailing semicolon (except for item statements that require semicolons)</source>
          <target state="translated">&lt;code&gt;stmt&lt;/code&gt; 하십시오 &lt;a href=&quot;statements&quot;&gt;&lt;em&gt;문&lt;/em&gt;&lt;/a&gt; (세미콜론을 필요로 항목 문 제외) 후행 세미콜론이없는</target>
        </trans-unit>
        <trans-unit id="ceaa90f7c3072ac3a54aa7d6730427ba6ddb60c7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;store&lt;/code&gt; takes an &lt;a href=&quot;enum.ordering&quot;&gt;&lt;code&gt;Ordering&lt;/code&gt;&lt;/a&gt; argument which describes the memory ordering of this operation. Possible values are &lt;a href=&quot;enum.ordering#variant.SeqCst&quot;&gt;&lt;code&gt;SeqCst&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;enum.ordering#variant.Release&quot;&gt;&lt;code&gt;Release&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;enum.ordering#variant.Relaxed&quot;&gt;&lt;code&gt;Relaxed&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;store&lt;/code&gt; 는 이 작업의 메모리 순서를 설명 하는 &lt;a href=&quot;enum.ordering&quot;&gt; &lt;code&gt;Ordering&lt;/code&gt; &lt;/a&gt; 인수를 사용합니다. 가능한 값은&lt;a href=&quot;enum.ordering#variant.SeqCst&quot;&gt; &lt;code&gt;SeqCst&lt;/code&gt; &lt;/a&gt; ,&lt;a href=&quot;enum.ordering#variant.Release&quot;&gt; &lt;code&gt;Release&lt;/code&gt; &lt;/a&gt; 및&lt;a href=&quot;enum.ordering#variant.Relaxed&quot;&gt; &lt;code&gt;Relaxed&lt;/code&gt; &lt;/a&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="90ca25a4f034af9b8f70f21c2dbba7f666343917" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;str&lt;/code&gt; Layout</source>
          <target state="translated">&lt;code&gt;str&lt;/code&gt; 레이아웃</target>
        </trans-unit>
        <trans-unit id="f30de198812b944ea0c38ae5504032c4739c470e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;struct&lt;/code&gt; - define a structure</source>
          <target state="translated">&lt;code&gt;struct&lt;/code&gt; - 구조를 정의</target>
        </trans-unit>
        <trans-unit id="2c6d46f9db815f3033748933785f1777882d397c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;struct&lt;/code&gt; literal</source>
          <target state="translated">&lt;code&gt;struct&lt;/code&gt; 리터럴</target>
        </trans-unit>
        <trans-unit id="b36187fc68c888f2b17d4ce077c877670a9fd135" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;struct&lt;/code&gt; types are analogous to &lt;code&gt;struct&lt;/code&gt; types in C, the &lt;em&gt;record&lt;/em&gt; types of the ML family, or the &lt;em&gt;struct&lt;/em&gt; types of the Lisp family.</source>
          <target state="translated">&lt;code&gt;struct&lt;/code&gt; 타입은 &lt;code&gt;struct&lt;/code&gt; C의 유형의 &lt;em&gt;기록&lt;/em&gt; 우도 가족의 유형, 또는 &lt;em&gt;구조체&lt;/em&gt; 리스프 계열의 유형.</target>
        </trans-unit>
        <trans-unit id="be5f6f327cf8b30e85ebbea7ea5017ce1ec6c3d3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;struct&lt;/code&gt;&lt;a href=&quot;../identifiers&quot;&gt;IDENTIFIER&lt;/a&gt;&lt;a href=&quot;generics&quot;&gt;&lt;em&gt;Generics&lt;/em&gt;&lt;/a&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;a href=&quot;generics#where-clauses&quot;&gt;&lt;em&gt;WhereClause&lt;/em&gt;&lt;/a&gt;&lt;sup&gt;?&lt;/sup&gt; ( &lt;code&gt;{&lt;/code&gt;&lt;em&gt;StructFields&lt;/em&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;code&gt;}&lt;/code&gt; | &lt;code&gt;;&lt;/code&gt; )</source>
          <target state="translated">&lt;code&gt;struct&lt;/code&gt; &lt;a href=&quot;../identifiers&quot;&gt;IDENTIFIER &lt;/a&gt;&lt;a href=&quot;generics&quot;&gt;&lt;em&gt;제네릭&lt;/em&gt;&lt;/a&gt;&lt;sup&gt; ? &lt;/sup&gt;&lt;a href=&quot;generics#where-clauses&quot;&gt;&lt;em&gt;WhereClause&lt;/em&gt;&lt;/a&gt;&lt;sup&gt; ? &lt;/sup&gt;( &lt;code&gt;{&lt;/code&gt; &lt;em&gt;StructFields &lt;/em&gt;&lt;sup&gt;? &lt;/sup&gt; &lt;code&gt;}&lt;/code&gt; | &lt;code&gt;;&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="0a1ee96ffae5bfefba492eb9b5a6edea8df103dd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;struct&lt;/code&gt;&lt;a href=&quot;../identifiers&quot;&gt;IDENTIFIER&lt;/a&gt;&lt;a href=&quot;generics&quot;&gt;&lt;em&gt;Generics&lt;/em&gt;&lt;/a&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;code&gt;(&lt;/code&gt;&lt;em&gt;TupleFields&lt;/em&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;code&gt;)&lt;/code&gt;&lt;a href=&quot;generics#where-clauses&quot;&gt;&lt;em&gt;WhereClause&lt;/em&gt;&lt;/a&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;code&gt;;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;struct&lt;/code&gt;&lt;a href=&quot;../identifiers&quot;&gt;IDENTIFIER&lt;/a&gt;&lt;a href=&quot;generics&quot;&gt;&lt;em&gt;Generics&lt;/em&gt;&lt;/a&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;code&gt;(&lt;/code&gt;&lt;em&gt;TupleFields&lt;/em&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;code&gt;)&lt;/code&gt;&lt;a href=&quot;generics#where-clauses&quot;&gt;&lt;em&gt;WhereClause&lt;/em&gt;&lt;/a&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;code&gt;;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="687ed7a00a27f7e2aef40cd3dd0438bf344c064a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;super&lt;/code&gt; - parent module of the current module</source>
          <target state="translated">&lt;code&gt;super&lt;/code&gt; - 현재 모듈의 부모 모듈</target>
        </trans-unit>
        <trans-unit id="0e7befa38ed89799a44b49feb18b6dc7bc329e1f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;super&lt;/code&gt; in a path resolves to the parent module. It may only be used in leading segments of the path, possibly after an initial &lt;code&gt;self&lt;/code&gt; segment.</source>
          <target state="translated">&lt;code&gt;super&lt;/code&gt; 경로의 super 는 상위 모듈로 해석됩니다. 초기 &lt;code&gt;self&lt;/code&gt; 세그먼트 이후에 경로의 선행 세그먼트에서만 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="6d05db176698bd65d99d4cfba8bd0a8376a5b0f8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;super&lt;/code&gt; may be repeated several times after the first &lt;code&gt;super&lt;/code&gt; or &lt;code&gt;self&lt;/code&gt; to refer to ancestor modules.</source>
          <target state="translated">&lt;code&gt;super&lt;/code&gt; 는 상위 상위 모듈을 참조하기 위해 첫 번째 &lt;code&gt;super&lt;/code&gt; 또는 &lt;code&gt;self&lt;/code&gt; 이후에 여러 번 반복 될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="f0cd48e5eef0ee4e5ad3fc6a5b00fe0f25cee1d4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;swap&lt;/code&gt; takes an &lt;a href=&quot;enum.ordering&quot;&gt;&lt;code&gt;Ordering&lt;/code&gt;&lt;/a&gt; argument which describes the memory ordering of this operation. All ordering modes are possible. Note that using &lt;a href=&quot;enum.ordering#variant.Acquire&quot;&gt;&lt;code&gt;Acquire&lt;/code&gt;&lt;/a&gt; makes the store part of this operation &lt;a href=&quot;enum.ordering#variant.Relaxed&quot;&gt;&lt;code&gt;Relaxed&lt;/code&gt;&lt;/a&gt;, and using &lt;a href=&quot;enum.ordering#variant.Release&quot;&gt;&lt;code&gt;Release&lt;/code&gt;&lt;/a&gt; makes the load part &lt;a href=&quot;enum.ordering#variant.Relaxed&quot;&gt;&lt;code&gt;Relaxed&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;swap&lt;/code&gt; 은이 작업의 메모리 순서를 설명 하는 &lt;a href=&quot;enum.ordering&quot;&gt; &lt;code&gt;Ordering&lt;/code&gt; &lt;/a&gt; 인수를 사용합니다. 모든 주문 모드가 가능합니다. 사용합니다 &lt;a href=&quot;enum.ordering#variant.Acquire&quot;&gt; &lt;code&gt;Acquire&lt;/code&gt; &lt;/a&gt; 이 작업의 저장 부분하게 &lt;a href=&quot;enum.ordering#variant.Relaxed&quot;&gt; &lt;code&gt;Relaxed&lt;/code&gt; &lt;/a&gt; 하고 사용하여 &lt;a href=&quot;enum.ordering#variant.Release&quot;&gt; &lt;code&gt;Release&lt;/code&gt; &lt;/a&gt; 사용하면로드 부분이 &lt;a href=&quot;enum.ordering#variant.Relaxed&quot;&gt; &lt;code&gt;Relaxed&lt;/code&gt; 가&lt;/a&gt; 됩니다.</target>
        </trans-unit>
        <trans-unit id="f9a833f8c39d11f72a5179fc587e7727914596ce" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;take()&lt;/code&gt; is often used with an infinite iterator, to make it finite:</source>
          <target state="translated">&lt;code&gt;take()&lt;/code&gt; 는 종종 무한 반복자와 함께 사용되어 유한하게 만듭니다.</target>
        </trans-unit>
        <trans-unit id="0c6d4555814b5e27a40b3405726eb1875f9f77f9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;take&lt;/code&gt; allows taking ownership of a struct field by replacing it with an &quot;empty&quot; value. Without &lt;code&gt;take&lt;/code&gt; you can run into issues like these:</source>
          <target state="translated">&lt;code&gt;take&lt;/code&gt; 는 구조체 필드를 &quot;빈&quot;값으로 바꾸어 소유권을 가질 수 있습니다. &lt;code&gt;take&lt;/code&gt; 않으면 다음과 같은 문제가 발생할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1c4d5a989bdc653ef5b9d0180573ae1225eeeaa4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;take_while()&lt;/code&gt; takes a closure as an argument. It will call this closure on each element of the iterator, and yield elements while it returns &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;take_while()&lt;/code&gt; 은 인수로 클로저를 사용합니다. 반복자의 각 요소 에서이 클로저를 호출하고 &lt;code&gt;true&lt;/code&gt; 를 반환하는 동안 요소를 생성 합니다 .</target>
        </trans-unit>
        <trans-unit id="dca38561eaa0d2b3485495e518384f88d58e295a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;to_drop&lt;/code&gt; must be &lt;a href=&quot;../ptr/index#safety&quot;&gt;valid&lt;/a&gt; for reads.</source>
          <target state="translated">&lt;code&gt;to_drop&lt;/code&gt; 은 읽기에 &lt;a href=&quot;../ptr/index#safety&quot;&gt;유효&lt;/a&gt; 해야합니다 .</target>
        </trans-unit>
        <trans-unit id="24250e71bc280dcaf012673fb61adf6115e05b76" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;to_drop&lt;/code&gt; must be &lt;a href=&quot;index#safety&quot;&gt;valid&lt;/a&gt; for reads.</source>
          <target state="translated">&lt;code&gt;to_drop&lt;/code&gt; 은&lt;a href=&quot;index#safety&quot;&gt;&lt;/a&gt;읽기에 유효.</target>
        </trans-unit>
        <trans-unit id="d65e1efb8b6b95806276fa89628096da65f3bf25" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;to_drop&lt;/code&gt; must be properly aligned. See the example below for how to drop an unaligned pointer.</source>
          <target state="translated">&lt;code&gt;to_drop&lt;/code&gt; 이 올바르게 정렬되어야합니다. 정렬되지 않은 포인터를 삭제하는 방법은 아래 예를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="36c9576b6f91bb2b8f6fa3a3a3fecf3d0448b670" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;token tree&lt;/code&gt;: a tree structure formed from tokens (the leaves), complex NT's, and finite sequences of token trees.</source>
          <target state="translated">&lt;code&gt;token tree&lt;/code&gt; : 토큰 (잎), 복잡한 NT 및 유한 토큰 트리 시퀀스로 구성된 트리 구조.</target>
        </trans-unit>
        <trans-unit id="dbae8bf5fef61c9952693677560e652cecf324f2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;token&lt;/code&gt;: an atomic element of a matcher; i.e. identifiers, operators, open/close delimiters, &lt;em&gt;and&lt;/em&gt; simple NT's.</source>
          <target state="translated">&lt;code&gt;token&lt;/code&gt; : 매처의 원자 요소; 즉 식별자, 연산자, 열기 / 닫기 구분 기호,&lt;em&gt; 및&lt;/em&gt; 간단한 NT입니다.</target>
        </trans-unit>
        <trans-unit id="1d261cfc33b3f42c8d5de636d023e7ee9d3539b5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;trait + trait&lt;/code&gt;, &lt;code&gt;'a + trait&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;trait + trait&lt;/code&gt; , &lt;code&gt;'a + trait&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e8aeb78903d253f17ce950d7ce86cc47925788b9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;trait&lt;/code&gt; - define a trait</source>
          <target state="translated">&lt;code&gt;trait&lt;/code&gt; - 정의</target>
        </trans-unit>
        <trans-unit id="034f61b98a2845dfb551b61c03baf0c796699104" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;transmute&lt;/code&gt; is &lt;strong&gt;incredibly&lt;/strong&gt; unsafe. There are a vast number of ways to cause &lt;a href=&quot;../../reference/behavior-considered-undefined&quot;&gt;undefined behavior&lt;/a&gt; with this function. &lt;code&gt;transmute&lt;/code&gt; should be the absolute last resort.</source>
          <target state="translated">&lt;code&gt;transmute&lt;/code&gt; 은 &lt;strong&gt;엄청나게&lt;/strong&gt; 안전하지 않습니다. 이 함수로 &lt;a href=&quot;../../reference/behavior-considered-undefined&quot;&gt;정의되지 않은 동작&lt;/a&gt; 을 일으키는 방법은 여러 가지가 있습니다 . &lt;code&gt;transmute&lt;/code&gt; 은 최후의 수단이되어야합니다.</target>
        </trans-unit>
        <trans-unit id="175fcd7de10c60db7596f63e7d92b1ff5ef63a16" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;transmute&lt;/code&gt; is semantically equivalent to a bitwise move of one type into another. It copies the bits from the source value into the destination value, then forgets the original. It's equivalent to C's &lt;code&gt;memcpy&lt;/code&gt; under the hood, just like &lt;code&gt;transmute_copy&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;transmute&lt;/code&gt; 은 의미 적으로 한 유형이 다른 유형으로 비트 단위로 이동하는 것과 같습니다. 소스 값에서 대상 값으로 비트를 복사 한 다음 원래 값을 잊습니다. 마치 C의 &lt;code&gt;memcpy&lt;/code&gt; 와 동일합니다. &lt;code&gt;transmute_copy&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9b1e6c4a8fa90bfd9b072eb1e4ad10fb9a5cfe0f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;true&lt;/code&gt; - Boolean true literal</source>
          <target state="translated">&lt;code&gt;true&lt;/code&gt; 부울 true 리터럴</target>
        </trans-unit>
        <trans-unit id="3d1d9f6406c7cd419678ba2a518aa0edbb8a78ce" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;try!&lt;/code&gt; matches the given &lt;a href=&quot;result/enum.result&quot;&gt;&lt;code&gt;Result&lt;/code&gt;&lt;/a&gt;. In case of the &lt;code&gt;Ok&lt;/code&gt; variant, the expression has the value of the wrapped value.</source>
          <target state="translated">&lt;code&gt;try!&lt;/code&gt; 주어진 &lt;a href=&quot;result/enum.result&quot;&gt; &lt;code&gt;Result&lt;/code&gt; &lt;/a&gt; 와 일치합니다 . 의 경우에 &lt;code&gt;Ok&lt;/code&gt; 변이체 발현은 래핑 값의 값을 갖는다.</target>
        </trans-unit>
        <trans-unit id="29f7e94d4a82f9517634d924c7d5bc9b59da6428" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;try_fold()&lt;/code&gt; takes two arguments: an initial value, and a closure with two arguments: an 'accumulator', and an element. The closure either returns successfully, with the value that the accumulator should have for the next iteration, or it returns failure, with an error value that is propagated back to the caller immediately (short-circuiting).</source>
          <target state="translated">&lt;code&gt;try_fold()&lt;/code&gt; 는 두 개의 인수, 즉 초기 값과 두 개의 인수가있는 클로저 인 '누적 기'및 요소를 갖습니다. 클로저는 다음 반복을 위해 누산기가 가져야하는 값과 함께 성공적으로 반환되거나 호출자에게 즉시 전파되는 오류 값과 함께 실패를 반환합니다 (단락).</target>
        </trans-unit>
        <trans-unit id="c9dbb3dbc94673c47f6803251cb5fae592f24819" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;tt&lt;/code&gt;: a &lt;a href=&quot;macros#macro-invocation&quot;&gt;&lt;em&gt;TokenTree&lt;/em&gt;&lt;/a&gt; (a single &lt;a href=&quot;tokens&quot;&gt;token&lt;/a&gt; or tokens in matching delimiters &lt;code&gt;()&lt;/code&gt;, &lt;code&gt;[]&lt;/code&gt;, or &lt;code&gt;{}&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;tt&lt;/code&gt; : &lt;a href=&quot;macros#macro-invocation&quot;&gt;&lt;em&gt;TokenTree&lt;/em&gt;&lt;/a&gt; ( 일치하는 구분 기호 &lt;code&gt;()&lt;/code&gt; , &lt;code&gt;[]&lt;/code&gt; 또는 &lt;code&gt;{}&lt;/code&gt; 의 단일 &lt;a href=&quot;tokens&quot;&gt;토큰&lt;/a&gt; 또는 토큰 ) )</target>
        </trans-unit>
        <trans-unit id="3dd7fa85f0428b74821618eabd4dcdc9c6129636" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ty&lt;/code&gt;: a &lt;a href=&quot;types#type-expressions&quot;&gt;&lt;em&gt;Type&lt;/em&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;ty&lt;/code&gt; : &lt;a href=&quot;types#type-expressions&quot;&gt;&lt;em&gt;유형&lt;/em&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1f19156090f13c0e758f648128584dd095e3ac88" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;type::ident&lt;/code&gt;, &lt;code&gt;&amp;lt;type as trait&amp;gt;::ident&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;type::ident&lt;/code&gt; , &lt;code&gt;&amp;lt;type as trait&amp;gt;::ident&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a6243bc35c4a5f7d3ba99fbf79ca05c5c7638dca" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;type&lt;/code&gt; - define a type alias or associated type</source>
          <target state="translated">&lt;code&gt;type&lt;/code&gt; -유형 별명 또는 연관된 유형을 정의하십시오.</target>
        </trans-unit>
        <trans-unit id="78453e1a389a3cd1eccac228fea75d93571f7806" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;type&lt;/code&gt;&lt;a href=&quot;../identifiers&quot;&gt;IDENTIFIER&lt;/a&gt; ( &lt;code&gt;:&lt;/code&gt;&lt;a href=&quot;../trait-bounds&quot;&gt;&lt;em&gt;TypeParamBounds&lt;/em&gt;&lt;/a&gt;&lt;sup&gt;?&lt;/sup&gt; )&lt;sup&gt;?&lt;/sup&gt;&lt;code&gt;;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;type&lt;/code&gt; &lt;a href=&quot;../identifiers&quot;&gt;IDENTIFIER&lt;/a&gt; ( &lt;code&gt;:&lt;/code&gt; &lt;a href=&quot;../trait-bounds&quot;&gt;&lt;em&gt;TypeParamBounds&lt;/em&gt;&lt;/a&gt;&lt;sup&gt; ?&lt;/sup&gt; ) &lt;sup&gt;? &lt;/sup&gt; &lt;code&gt;;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9c75fe9982ba1b848a81443152678ea4e87f76cb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;type&lt;/code&gt;&lt;a href=&quot;../identifiers&quot;&gt;IDENTIFIER&lt;/a&gt;&lt;a href=&quot;generics&quot;&gt;&lt;em&gt;Generics&lt;/em&gt;&lt;/a&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;a href=&quot;generics#where-clauses&quot;&gt;&lt;em&gt;WhereClause&lt;/em&gt;&lt;/a&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;code&gt;=&lt;/code&gt;&lt;a href=&quot;../types#type-expressions&quot;&gt;&lt;em&gt;Type&lt;/em&gt;&lt;/a&gt;&lt;code&gt;;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;type&lt;/code&gt;&lt;a href=&quot;../identifiers&quot;&gt;IDENTIFIER&lt;/a&gt;&lt;a href=&quot;generics&quot;&gt;&lt;em&gt;Generics&lt;/em&gt;&lt;/a&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;a href=&quot;generics#where-clauses&quot;&gt;&lt;em&gt;WhereClause&lt;/em&gt;&lt;/a&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;code&gt;=&lt;/code&gt;&lt;a href=&quot;../types#type-expressions&quot;&gt;&lt;em&gt;Type&lt;/em&gt;&lt;/a&gt;&lt;code&gt;;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3614618f326b5e16471f9332f930fafb0c388b66" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;u16&lt;/code&gt; is treated as port of the newly created &lt;a href=&quot;../net/enum.socketaddr&quot;&gt;&lt;code&gt;SocketAddr&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;u16&lt;/code&gt; 은 새로 작성된 &lt;a href=&quot;../net/enum.socketaddr&quot;&gt; &lt;code&gt;SocketAddr&lt;/code&gt; 의&lt;/a&gt; 포트로 취급됩니다 .</target>
        </trans-unit>
        <trans-unit id="eea0a10535447994d2273798613463f4b3980fec" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;u16&lt;/code&gt; is treated as port of the newly created &lt;a href=&quot;enum.socketaddr&quot;&gt;&lt;code&gt;SocketAddr&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;u16&lt;/code&gt; 은 새로 작성된 &lt;a href=&quot;enum.socketaddr&quot;&gt; &lt;code&gt;SocketAddr&lt;/code&gt; 의&lt;/a&gt; 포트로 취급됩니다 .</target>
        </trans-unit>
        <trans-unit id="2f1a6326a774c35e62bb7b315b36c24be7cf202f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;u8&lt;/code&gt; to &lt;code&gt;char&lt;/code&gt; cast</source>
          <target state="translated">&lt;code&gt;u8&lt;/code&gt; 에 &lt;code&gt;char&lt;/code&gt; 캐스트</target>
        </trans-unit>
        <trans-unit id="e4f26eb956911719088b5c0bffbc986b5f9b7de3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;u8&lt;/code&gt; | &lt;code&gt;u16&lt;/code&gt; | &lt;code&gt;u32&lt;/code&gt; | &lt;code&gt;u64&lt;/code&gt; | &lt;code&gt;u128&lt;/code&gt; | &lt;code&gt;usize&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;u8&lt;/code&gt; | &lt;code&gt;u16&lt;/code&gt; | &lt;code&gt;u32&lt;/code&gt; | &lt;code&gt;u64&lt;/code&gt; | &lt;code&gt;u128&lt;/code&gt; | &lt;code&gt;usize&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d2337112e72d044e1b4d70325534427ef28ed7a4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;u8&lt;/code&gt; | &lt;code&gt;u16&lt;/code&gt;, Block | Item</source>
          <target state="translated">&lt;code&gt;u8&lt;/code&gt; | &lt;code&gt;u16&lt;/code&gt; , 블록 | 안건</target>
        </trans-unit>
        <trans-unit id="bd0d1066cf75fe5975a75c82dc257a3da4846bc8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;u8&lt;/code&gt;, &lt;code&gt;i8&lt;/code&gt;, &lt;code&gt;u16&lt;/code&gt;, &lt;code&gt;i16&lt;/code&gt;, &lt;code&gt;u32&lt;/code&gt;, &lt;code&gt;i32&lt;/code&gt;, &lt;code&gt;u64&lt;/code&gt;, &lt;code&gt;i64&lt;/code&gt;, &lt;code&gt;u128&lt;/code&gt;, &lt;code&gt;i128&lt;/code&gt;, &lt;code&gt;usize&lt;/code&gt;, &lt;code&gt;isize&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;u8&lt;/code&gt; , &lt;code&gt;i8&lt;/code&gt; , &lt;code&gt;u16&lt;/code&gt; , &lt;code&gt;i16&lt;/code&gt; , &lt;code&gt;u32&lt;/code&gt; , &lt;code&gt;i32&lt;/code&gt; , &lt;code&gt;u64&lt;/code&gt; , &lt;code&gt;i64&lt;/code&gt; , &lt;code&gt;u128&lt;/code&gt; , &lt;code&gt;i128&lt;/code&gt; , &lt;code&gt;usize&lt;/code&gt; , &lt;code&gt;isize&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="af4d4aaa5d7119b01bc4b46793c55424d1c7bdc5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;uninit&lt;/code&gt; is unsafe because there is no guarantee of what its contents are. In particular its drop-flag may be set to any state, which means it may claim either dropped or undropped. In the general case one must use &lt;code&gt;ptr::write&lt;/code&gt; to initialize memory previous set to the result of &lt;code&gt;uninit&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;uninit&lt;/code&gt; 는 내용이 무엇인지 보장하지 않기 때문에 안전하지 않습니다. 특히, 그 낙하 플래그는 임의의 상태로 설정 될 수 있으며, 이는 낙하 또는 낙하를 주장 할 수 있음을 의미한다. 일반적인 경우에는 &lt;code&gt;ptr::write&lt;/code&gt; 를 사용 하여 이전 설정을 &lt;code&gt;uninit&lt;/code&gt; 의 결과로 초기화 해야합니다. .</target>
        </trans-unit>
        <trans-unit id="e84734326b9228c078d992e678358f7019aa6589" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;union&lt;/code&gt; is used to declare a &lt;a href=&quot;items/unions&quot;&gt;union&lt;/a&gt; and is only a keyword when used in a union declaration.</source>
          <target state="translated">&lt;code&gt;union&lt;/code&gt; 선언하는 데 사용되는 &lt;a href=&quot;items/unions&quot;&gt;조합을&lt;/a&gt; 및 노동 조합의 선언에 사용되는 경우에만 키워드입니다.</target>
        </trans-unit>
        <trans-unit id="bc3b8191e2485b33816d2e7cf9395ebd6f0b1a38" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;union&lt;/code&gt;&lt;a href=&quot;../identifiers&quot;&gt;IDENTIFIER&lt;/a&gt;&lt;a href=&quot;generics&quot;&gt;&lt;em&gt;Generics&lt;/em&gt;&lt;/a&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;a href=&quot;generics#where-clauses&quot;&gt;&lt;em&gt;WhereClause&lt;/em&gt;&lt;/a&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;code&gt;{&lt;/code&gt;&lt;a href=&quot;structs&quot;&gt;&lt;em&gt;StructFields&lt;/em&gt;&lt;/a&gt;&lt;code&gt;}&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;union&lt;/code&gt;&lt;a href=&quot;../identifiers&quot;&gt;IDENTIFIER&lt;/a&gt;&lt;a href=&quot;generics&quot;&gt;&lt;em&gt;Generics&lt;/em&gt;&lt;/a&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;a href=&quot;generics#where-clauses&quot;&gt;&lt;em&gt;WhereClause&lt;/em&gt;&lt;/a&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;code&gt;{&lt;/code&gt;&lt;a href=&quot;structs&quot;&gt;&lt;em&gt;StructFields&lt;/em&gt;&lt;/a&gt;&lt;code&gt;}&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b9fa04d3e3ffb533a96f1c314a534c52676f2f4c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unix&lt;/code&gt; and &lt;code&gt;windows&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;unix&lt;/code&gt; 와 &lt;code&gt;windows&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="348330ca3bbf2eb4cff6e672d042e105af48ddcc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unix&lt;/code&gt; is set if &lt;code&gt;target_family = &quot;unix&quot;&lt;/code&gt; is set and &lt;code&gt;windows&lt;/code&gt; is set if &lt;code&gt;target_family = &quot;windows&quot;&lt;/code&gt; is set.</source>
          <target state="translated">&lt;code&gt;unix&lt;/code&gt; 경우 설정 &lt;code&gt;target_family = &quot;unix&quot;&lt;/code&gt; 설정되어 있고 &lt;code&gt;windows&lt;/code&gt; 설정되어있는 경우 &lt;code&gt;target_family = &quot;windows&quot;&lt;/code&gt; 세트입니다.</target>
        </trans-unit>
        <trans-unit id="805f2b9152d73be6994ac2a9ed4f55d25b3958ec" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe&lt;/code&gt; - denote unsafe code, functions, traits, or implementations</source>
          <target state="translated">&lt;code&gt;unsafe&lt;/code&gt; -안전하지 않은 코드, 함수, 특성 또는 구현을 나타냅니다</target>
        </trans-unit>
        <trans-unit id="b8f5446501043cd72eba942178b8c8f9d7127e09" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe&lt;/code&gt; blocks</source>
          <target state="translated">&lt;code&gt;unsafe&lt;/code&gt; 블록</target>
        </trans-unit>
        <trans-unit id="e8e3345d0d20542f3961bfada324b4be5ae460c2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe&lt;/code&gt; blocks and &lt;code&gt;const unsafe fn&lt;/code&gt; are allowed, but the body/block may only do the following unsafe operations:</source>
          <target state="translated">&lt;code&gt;unsafe&lt;/code&gt; 블록 및 &lt;code&gt;const unsafe fn&lt;/code&gt; 은 허용되지만 본문 / 블록은 다음과 같은 안전하지 않은 작업 만 수행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="fa370f536df8b7e006c8811ff9b5f6d3390758b4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe&lt;/code&gt;&lt;em&gt;BlockExpression&lt;/em&gt;</source>
          <target state="translated">&lt;code&gt;unsafe&lt;/code&gt;&lt;em&gt;BlockExpression&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="a6b449b84465a6dfedf9fdd8c4060055ec11634f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe&lt;/code&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;code&gt;impl&lt;/code&gt;&lt;a href=&quot;generics&quot;&gt;&lt;em&gt;Generics&lt;/em&gt;&lt;/a&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;code&gt;!&lt;/code&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;a href=&quot;../paths#paths-in-types&quot;&gt;&lt;em&gt;TypePath&lt;/em&gt;&lt;/a&gt;&lt;code&gt;for&lt;/code&gt;&lt;a href=&quot;../types#type-expressions&quot;&gt;&lt;em&gt;Type&lt;/em&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;unsafe&lt;/code&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;code&gt;impl&lt;/code&gt;&lt;a href=&quot;generics&quot;&gt;&lt;em&gt;Generics&lt;/em&gt;&lt;/a&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;code&gt;!&lt;/code&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;a href=&quot;../paths#paths-in-types&quot;&gt;&lt;em&gt;TypePath&lt;/em&gt;&lt;/a&gt;&lt;code&gt;for&lt;/code&gt;&lt;a href=&quot;../types#type-expressions&quot;&gt;&lt;em&gt;Type&lt;/em&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c213f71744e3496c0a4c469e371467c7ccc65dc9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe&lt;/code&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;code&gt;trait&lt;/code&gt;&lt;a href=&quot;../identifiers&quot;&gt;IDENTIFIER&lt;/a&gt;&lt;a href=&quot;generics&quot;&gt;&lt;em&gt;Generics&lt;/em&gt;&lt;/a&gt;&lt;sup&gt;?&lt;/sup&gt; ( &lt;code&gt;:&lt;/code&gt;&lt;a href=&quot;../trait-bounds&quot;&gt;&lt;em&gt;TypeParamBounds&lt;/em&gt;&lt;/a&gt;&lt;sup&gt;?&lt;/sup&gt; )&lt;sup&gt;?&lt;/sup&gt;&lt;a href=&quot;generics#where-clauses&quot;&gt;&lt;em&gt;WhereClause&lt;/em&gt;&lt;/a&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;code&gt;{&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;unsafe&lt;/code&gt; &lt;sup&gt;않습니까? &lt;/sup&gt; &lt;code&gt;trait&lt;/code&gt; &lt;a href=&quot;../identifiers&quot;&gt;ID &lt;/a&gt;&lt;a href=&quot;generics&quot;&gt;&lt;em&gt;제네릭&lt;/em&gt;&lt;/a&gt;&lt;sup&gt; ? &lt;/sup&gt;( &lt;code&gt;:&lt;/code&gt; &lt;a href=&quot;../trait-bounds&quot;&gt;&lt;em&gt;TypeParamBounds&lt;/em&gt;&lt;/a&gt;&lt;sup&gt; ?&lt;/sup&gt; ) &lt;sup&gt;? &lt;/sup&gt;&lt;a href=&quot;generics#where-clauses&quot;&gt;&lt;em&gt;WhereClause&lt;/em&gt;&lt;/a&gt;&lt;sup&gt; ? &lt;/sup&gt; &lt;code&gt;{&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="abb0a77ab71ec0bbd26928506e21321581be6903" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unzip()&lt;/code&gt; consumes an entire iterator of pairs, producing two collections: one from the left elements of the pairs, and one from the right elements.</source>
          <target state="translated">&lt;code&gt;unzip()&lt;/code&gt; 은 쌍의 전체 반복자를 소비하여 쌍의 왼쪽 요소에서 하나와 오른쪽 요소에서 두 개의 콜렉션을 생성합니다.</target>
        </trans-unit>
        <trans-unit id="f456905a1d3d6d03c7b6621576a3403358714371" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;use&lt;/code&gt; - bring symbols into scope</source>
          <target state="translated">&lt;code&gt;use&lt;/code&gt; -기호를 범위 내로 가져 오기</target>
        </trans-unit>
        <trans-unit id="14ae1a9aead1dddc54a27bba1ba6f3f1e2e22e18" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;use&lt;/code&gt; Paths</source>
          <target state="translated">&lt;code&gt;use&lt;/code&gt; 경로 사용</target>
        </trans-unit>
        <trans-unit id="5169fc857a584a19af23b472571ef92b6980c9ba" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;use&lt;/code&gt; Visibility</source>
          <target state="translated">&lt;code&gt;use&lt;/code&gt; 가시성 사용</target>
        </trans-unit>
        <trans-unit id="f1bde37586217501db68bfc7d52534b8fcfd6058" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;use&lt;/code&gt; declarations</source>
          <target state="translated">&lt;code&gt;use&lt;/code&gt; 선언 사용</target>
        </trans-unit>
        <trans-unit id="232f6c6cf9d575813a9014b62ed17c56d46c8564" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;use&lt;/code&gt;&lt;em&gt;UseTree&lt;/em&gt;&lt;code&gt;;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;use&lt;/code&gt;&lt;em&gt;UseTree&lt;/em&gt;&lt;code&gt;;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="66200641914a8ccaf8f122b32177d225ef47c976" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;use_max&lt;/code&gt; is the capacity that was (or would have been) returned when (if) the block was allocated via a call to &lt;code&gt;alloc_excess&lt;/code&gt; or &lt;code&gt;realloc_excess&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;use_max&lt;/code&gt; 는 블록이 &lt;code&gt;alloc_excess&lt;/code&gt; 또는 &lt;code&gt;realloc_excess&lt;/code&gt; 에 대한 호출을 통해 할당 될 때 반환 된 용량이거나 반환 된 용량입니다. .</target>
        </trans-unit>
        <trans-unit id="d608195115134d4ea9fea4472362792947f140f0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;use_min&lt;/code&gt; is &lt;code&gt;self.usable_size(layout).0&lt;/code&gt;, and</source>
          <target state="translated">&lt;code&gt;use_min&lt;/code&gt; 은 &lt;code&gt;self.usable_size(layout).0&lt;/code&gt; 이며</target>
        </trans-unit>
        <trans-unit id="55b38fa0b1ef7073555973d244758d06cb19996e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;usize&lt;/code&gt; and &lt;code&gt;isize&lt;/code&gt; have a size big enough to contain every address on the target platform. For example, on a 32 bit target, this is 4 bytes and on a 64 bit target, this is 8 bytes.</source>
          <target state="translated">&lt;code&gt;usize&lt;/code&gt; 및 &lt;code&gt;isize&lt;/code&gt; 는 대상 플랫폼의 모든 주소를 포함 할 수있을만큼 큰 크기를 갖습니다. 예를 들어, 32 비트 대상에서는 4 바이트이고 64 비트 대상에서는 8 바이트입니다.</target>
        </trans-unit>
        <trans-unit id="8517555f62051bd887048d0f96f8011d175bf39e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;var = expr&lt;/code&gt;, &lt;code&gt;ident = type&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;var = expr&lt;/code&gt; , &lt;code&gt;ident = type&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2e1f1b24a5b6675ef99987af788624aa2117200b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;variant(x, ..)&lt;/code&gt;, &lt;code&gt;struct_type { x, .. }&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;variant(x, ..)&lt;/code&gt; , &lt;code&gt;struct_type { x, .. }&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="75ce46d92480cdcd4600e7f8c69b733a667507a2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;vec!&lt;/code&gt; allows &lt;code&gt;Vec&lt;/code&gt;s to be defined with the same syntax as array expressions. There are two forms of this macro:</source>
          <target state="translated">&lt;code&gt;vec!&lt;/code&gt; 허용 &lt;code&gt;Vec&lt;/code&gt; 들 어레이와 같은 표현 구문으로 정의된다. 이 매크로에는 두 가지 형태가 있습니다.</target>
        </trans-unit>
        <trans-unit id="fbd1def4fd4e7409afc8f13d7310b1ad7193138a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;vec![x; n]&lt;/code&gt;, &lt;code&gt;vec![a, b, c, d]&lt;/code&gt;, and &lt;a href=&quot;struct.vec#method.with_capacity&quot;&gt;&lt;code&gt;Vec::with_capacity(n)&lt;/code&gt;&lt;/a&gt;, will all produce a &lt;code&gt;Vec&lt;/code&gt; with exactly the requested capacity. If &lt;a href=&quot;struct.vec#method.len&quot;&gt;&lt;code&gt;len&lt;/code&gt;&lt;/a&gt;&lt;code&gt;==&lt;/code&gt;&lt;a href=&quot;struct.vec#method.capacity&quot;&gt;&lt;code&gt;capacity&lt;/code&gt;&lt;/a&gt;, (as is the case for the &lt;a href=&quot;../macro.vec&quot;&gt;&lt;code&gt;vec!&lt;/code&gt;&lt;/a&gt; macro), then a &lt;code&gt;Vec&amp;lt;T&amp;gt;&lt;/code&gt; can be converted to and from a &lt;a href=&quot;../boxed/struct.box&quot;&gt;&lt;code&gt;Box&amp;lt;[T]&amp;gt;&lt;/code&gt;&lt;/a&gt; without reallocating or moving the elements.</source>
          <target state="translated">&lt;code&gt;vec![x; n]&lt;/code&gt; , &lt;code&gt;vec![a, b, c, d]&lt;/code&gt; 및 &lt;a href=&quot;struct.vec#method.with_capacity&quot;&gt; &lt;code&gt;Vec::with_capacity(n)&lt;/code&gt; &lt;/a&gt; 은 모두 정확히 요청 된 용량 의 &lt;code&gt;Vec&lt;/code&gt; 을 생성합니다 . 경우 &lt;a href=&quot;struct.vec#method.len&quot;&gt; &lt;code&gt;len&lt;/code&gt; &lt;/a&gt; &lt;code&gt;==&lt;/code&gt; &lt;a href=&quot;struct.vec#method.capacity&quot;&gt; &lt;code&gt;capacity&lt;/code&gt; &lt;/a&gt; (의 경우와 같이, &lt;a href=&quot;../macro.vec&quot;&gt; &lt;code&gt;vec!&lt;/code&gt; &lt;/a&gt; 매크로) 다음 &lt;code&gt;Vec&amp;lt;T&amp;gt;&lt;/code&gt; A를으로부터 전환 될 수 &lt;a href=&quot;../boxed/struct.box&quot;&gt; &lt;code&gt;Box&amp;lt;[T]&amp;gt;&lt;/code&gt; &lt;/a&gt; 재 할당 또는 요소를 이동하지 않고.</target>
        </trans-unit>
        <trans-unit id="2d08b44ca2e8c97b5ffc525b474768abf57a3776" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;vis&lt;/code&gt; may only be followed by one of: &lt;code&gt;,&lt;/code&gt;, an identifier other than a non-raw &lt;code&gt;priv&lt;/code&gt;, any token that can begin a type, or a metavariable with a &lt;code&gt;ident&lt;/code&gt;, &lt;code&gt;ty&lt;/code&gt;, or &lt;code&gt;path&lt;/code&gt; fragment specifier.</source>
          <target state="translated">&lt;code&gt;vis&lt;/code&gt; 오직 하나의 뒤에는 수 &lt;code&gt;,&lt;/code&gt; 비 원료 이외 식별자 &lt;code&gt;priv&lt;/code&gt; , 형태, 또는 함께 metavariable 시작할 수있는 토큰 &lt;code&gt;ident&lt;/code&gt; , &lt;code&gt;ty&lt;/code&gt; , 또는 &lt;code&gt;path&lt;/code&gt; 단편 지정자.</target>
        </trans-unit>
        <trans-unit id="f91c2c8cc6543bfd4e86094ff90e3a9ce854567d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;vis&lt;/code&gt;: a possibly empty &lt;a href=&quot;visibility-and-privacy&quot;&gt;&lt;em&gt;Visibility&lt;/em&gt;&lt;/a&gt; qualifier</source>
          <target state="translated">&lt;code&gt;vis&lt;/code&gt; : 비어있는 &lt;a href=&quot;visibility-and-privacy&quot;&gt;&lt;em&gt;가시성&lt;/em&gt;&lt;/a&gt; 한정자</target>
        </trans-unit>
        <trans-unit id="76143324a8d362fe9906ff5b06906dd181169374" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;warn(C)&lt;/code&gt; warns about violations of &lt;code&gt;C&lt;/code&gt; but continues compilation.</source>
          <target state="translated">&lt;code&gt;warn(C)&lt;/code&gt; 위반에 대해 경고 &lt;code&gt;C&lt;/code&gt; 있지만 컴파일을 계속합니다.</target>
        </trans-unit>
        <trans-unit id="5ed18d103b24e9d9ef79833b0840427fc16e4165" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;where&lt;/code&gt; ( &lt;em&gt;WhereClauseItem&lt;/em&gt;&lt;code&gt;,&lt;/code&gt; )&lt;sup&gt;*&lt;/sup&gt;&lt;em&gt;WhereClauseItem&lt;/em&gt;&lt;sup&gt;?&lt;/sup&gt;</source>
          <target state="translated">&lt;code&gt;where&lt;/code&gt; ( &lt;em&gt;WhereClauseItem &lt;/em&gt; &lt;code&gt;,&lt;/code&gt; ) &lt;sup&gt;* &lt;/sup&gt;&lt;em&gt;WhereClauseItem &lt;/em&gt;&lt;sup&gt;?&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="46fff36fad83b20aa97b4640a9571fd166f8cb3e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;where&lt;/code&gt; - denote clauses that constrain a type</source>
          <target state="translated">&lt;code&gt;where&lt;/code&gt; - 유형을 제한 나타낸다 절</target>
        </trans-unit>
        <trans-unit id="6e107977b55bce4f228fbc34edfc92b750ccde8f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;where&lt;/code&gt; clauses must use generic type parameters: it does not make sense to use them otherwise. An example causing this error:</source>
          <target state="translated">&lt;code&gt;where&lt;/code&gt; 절은 제네릭 형식 매개 변수를 사용해야합니다. 이 오류를 일으키는 예는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="a805febf23aefbedce95cfd9e535dfc8d88a2060" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;while foo(&amp;amp;temp()) {bar();}&lt;/code&gt;. The temporary containing the return value from the call to &lt;code&gt;temp()&lt;/code&gt; is created in the loop conditional expression. Hence it will be freed at the end of the loop conditional expression; in this example before the call to &lt;code&gt;bar&lt;/code&gt; if the loop body is executed.</source>
          <target state="translated">&lt;code&gt;while foo(&amp;amp;temp()) {bar();}&lt;/code&gt; 입니다. &lt;code&gt;temp()&lt;/code&gt; 호출의 리턴 값을 포함하는 임시 는 루프 조건식에 작성됩니다. 따라서 루프 조건식이 끝나면 해제됩니다. 이 예제 에서 루프 본문이 실행되는 경우 &lt;code&gt;bar&lt;/code&gt; 호출 전에 .</target>
        </trans-unit>
        <trans-unit id="2198a7aaf735574c836bd8137d8e90a6901689d2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;while let&lt;/code&gt; expressions</source>
          <target state="translated">&lt;code&gt;while let&lt;/code&gt; 식 을 보자</target>
        </trans-unit>
        <trans-unit id="921bef7a3e65fdbb7f908d578534f5b7317761c5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;while&lt;/code&gt; - loop conditionally based on the result of an expression</source>
          <target state="translated">&lt;code&gt;while&lt;/code&gt; - 표현식 결과에 따라 조건부 루프</target>
        </trans-unit>
        <trans-unit id="a9b4d0912cc7b8dba0ecbcf87816f452ee5f70dc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;while&lt;/code&gt;&lt;a href=&quot;../expressions&quot;&gt;&lt;em&gt;Expression&lt;/em&gt;&lt;/a&gt;&lt;sub&gt;except struct expression&lt;/sub&gt;&lt;a href=&quot;block-expr&quot;&gt;&lt;em&gt;BlockExpression&lt;/em&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;while&lt;/code&gt; &lt;a href=&quot;../expressions&quot;&gt;&lt;em&gt;표현&lt;/em&gt;&lt;/a&gt;&lt;sub&gt; 구조체 발현을 제외하고 &lt;/sub&gt;&lt;a href=&quot;block-expr&quot;&gt;&lt;em&gt;BlockExpression&lt;/em&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="82a119d968bd20b54a077326e844d3f9dfc3789f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;while&lt;/code&gt;&lt;code&gt;let&lt;/code&gt;&lt;a href=&quot;match-expr&quot;&gt;&lt;em&gt;MatchArmPatterns&lt;/em&gt;&lt;/a&gt;&lt;code&gt;=&lt;/code&gt;&lt;a href=&quot;../expressions&quot;&gt;&lt;em&gt;Expression&lt;/em&gt;&lt;/a&gt;&lt;sub&gt;except struct expression&lt;/sub&gt;&lt;a href=&quot;block-expr&quot;&gt;&lt;em&gt;BlockExpression&lt;/em&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;while&lt;/code&gt; &lt;sub&gt;구조체 &lt;/sub&gt;&lt;a href=&quot;../expressions&quot;&gt;&lt;em&gt;식을&lt;/em&gt;&lt;/a&gt;&lt;sub&gt; 제외하고 &lt;/sub&gt;&lt;a href=&quot;match-expr&quot;&gt;&lt;em&gt;MatchArmPatterns&lt;/em&gt;&lt;/a&gt; &lt;code&gt;=&lt;/code&gt; &lt;em&gt;식&lt;/em&gt; 을 &lt;code&gt;let&lt;/code&gt; 하면서 &lt;a href=&quot;block-expr&quot;&gt;&lt;em&gt;BlockExpression&lt;/em&gt;&lt;/a&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;sub&gt;&lt;/sub&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="9725c6db67ef47c4123c705d0b5bcff6ee2a61d5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;write&lt;/code&gt; does not drop the contents of &lt;code&gt;dst&lt;/code&gt;. This is safe, but it could leak allocations or resources, so care should be taken not to overwrite an object that should be dropped.</source>
          <target state="translated">&lt;code&gt;write&lt;/code&gt; 는 &lt;code&gt;dst&lt;/code&gt; 의 내용을 삭제하지 않습니다 . 이것은 안전하지만 할당 또는 리소스가 유출 될 수 있으므로 삭제해야하는 객체를 덮어 쓰지 않도록주의해야합니다.</target>
        </trans-unit>
        <trans-unit id="ddc34afa23fa651f44486b9ec6afe1675fa1ae1f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;write_bytes&lt;/code&gt; is similar to C's &lt;a href=&quot;https://en.cppreference.com/w/c/string/byte/memset&quot;&gt;&lt;code&gt;memset&lt;/code&gt;&lt;/a&gt;, but sets &lt;code&gt;count * size_of::&amp;lt;T&amp;gt;()&lt;/code&gt; bytes to &lt;code&gt;val&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;write_bytes&lt;/code&gt; 는 C의 &lt;a href=&quot;https://en.cppreference.com/w/c/string/byte/memset&quot;&gt; &lt;code&gt;memset&lt;/code&gt; &lt;/a&gt; 과 비슷 하지만 &lt;code&gt;count * size_of::&amp;lt;T&amp;gt;()&lt;/code&gt; 바이트를 &lt;code&gt;val&lt;/code&gt; 로 설정 합니다.</target>
        </trans-unit>
        <trans-unit id="054a9108334d065897c67d31900457afaf2eff38" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;write_unaligned&lt;/code&gt; does not drop the contents of &lt;code&gt;dst&lt;/code&gt;. This is safe, but it could leak allocations or resources, so care should be taken not to overwrite an object that should be dropped.</source>
          <target state="translated">&lt;code&gt;write_unaligned&lt;/code&gt; 는 &lt;code&gt;dst&lt;/code&gt; 의 내용을 삭제하지 않습니다 . 이것은 안전하지만 할당 또는 리소스가 유출 될 수 있으므로 삭제해야하는 객체를 덮어 쓰지 않도록주의해야합니다.</target>
        </trans-unit>
        <trans-unit id="0cb4125bd17c272925aea82766043022e2093246" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;write_volatile&lt;/code&gt; does not drop the contents of &lt;code&gt;dst&lt;/code&gt;. This is safe, but it could leak allocations or resources, so care should be taken not to overwrite an object that should be dropped.</source>
          <target state="translated">&lt;code&gt;write_volatile&lt;/code&gt; 은 &lt;code&gt;dst&lt;/code&gt; 의 내용을 삭제하지 않습니다 . 이것은 안전하지만 할당 또는 리소스가 유출 될 수 있으므로 삭제해야하는 객체를 덮어 쓰지 않도록주의해야합니다.</target>
        </trans-unit>
        <trans-unit id="8276083d136c27da43c9907e5cdba7fc594950a2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x &amp;gt;= 0&lt;/code&gt;: &lt;code&gt;arctan(y/x)&lt;/code&gt; -&amp;gt; &lt;code&gt;[-pi/2, pi/2]&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;x &amp;gt;= 0&lt;/code&gt; : &lt;code&gt;arctan(y/x)&lt;/code&gt; -&amp;gt; &lt;code&gt;[-pi/2, pi/2]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0b5bbf457f12b8925eeebe054ee2e7627ea0aa6b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x = 0&lt;/code&gt;, &lt;code&gt;y = 0&lt;/code&gt;: &lt;code&gt;0&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;x = 0&lt;/code&gt; , &lt;code&gt;y = 0&lt;/code&gt; : &lt;code&gt;0&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="cac4e5a63b3dddd8eb480045393d001706c0c924" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x86&lt;/code&gt; or &lt;code&gt;x86_64&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;x86&lt;/code&gt; 또는 &lt;code&gt;x86_64&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3b00e0b8945f50a14fa61d6e9a2b0332a4c6a1dd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x&lt;/code&gt; &amp;rArr; &lt;a href=&quot;trait.lowerhex&quot;&gt;&lt;code&gt;LowerHex&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; &amp;rArr; &lt;a href=&quot;trait.lowerhex&quot;&gt; &lt;code&gt;LowerHex&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="025160341e85be696bd147a9a4541ba42341e742" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x&lt;/code&gt; formatting.</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; 형식.</target>
        </trans-unit>
        <trans-unit id="e6a735703e80ddf3d43a9cb53dbbf35cd6648332" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x&lt;/code&gt;, &lt;code&gt;while&lt;/code&gt;, &lt;code&gt;*&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; , &lt;code&gt;while&lt;/code&gt; , &lt;code&gt;*&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="aa6059b34937a8c76b7e69ee691d0f5c18fd74f4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x?&lt;/code&gt; &amp;rArr; &lt;a href=&quot;trait.debug&quot;&gt;&lt;code&gt;Debug&lt;/code&gt;&lt;/a&gt; with lower-case hexadecimal integers</source>
          <target state="translated">&lt;code&gt;x?&lt;/code&gt; &amp;rArr; 소문자 16 진 정수로 &lt;a href=&quot;trait.debug&quot;&gt; &lt;code&gt;Debug&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c010c672c012cef8144a3c2ea0d4da05d2e7fa96" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;y &amp;gt;= 0&lt;/code&gt;: &lt;code&gt;arctan(y/x) + pi&lt;/code&gt; -&amp;gt; &lt;code&gt;(pi/2, pi]&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;y &amp;gt;= 0&lt;/code&gt; : &lt;code&gt;arctan(y/x) + pi&lt;/code&gt; &amp;gt; &lt;code&gt;(pi/2, pi]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9913280959bcf6536763f373a06fe85b3b866062" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;y &amp;lt; 0&lt;/code&gt;: &lt;code&gt;arctan(y/x) - pi&lt;/code&gt; -&amp;gt; &lt;code&gt;(-pi, -pi/2)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;y &amp;lt; 0&lt;/code&gt; : &lt;code&gt;arctan(y/x) - pi&lt;/code&gt; &lt;code&gt;(-pi, -pi/2)&lt;/code&gt; &amp;gt; (-pi, -pi / 2)</target>
        </trans-unit>
        <trans-unit id="dc3dc24bbc59a13785c638cfa29eb558067b929c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;zip()&lt;/code&gt; is often used to zip an infinite iterator to a finite one. This works because the finite iterator will eventually return &lt;a href=&quot;../option/enum.option#variant.None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt;, ending the zipper. Zipping with &lt;code&gt;(0..)&lt;/code&gt; can look a lot like &lt;a href=&quot;trait.iterator#method.enumerate&quot;&gt;&lt;code&gt;enumerate&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">&lt;code&gt;zip()&lt;/code&gt; 은 종종 무한 반복자를 유한 반복자로 압축하는 데 사용됩니다. 유한 반복자는 결국 &lt;a href=&quot;../option/enum.option#variant.None&quot;&gt; &lt;code&gt;None&lt;/code&gt; 을&lt;/a&gt; 반환 하고 지퍼를 끝내기 때문에 작동합니다 . &lt;code&gt;(0..)&lt;/code&gt; 압축하면 &lt;a href=&quot;trait.iterator#method.enumerate&quot;&gt; &lt;code&gt;enumerate&lt;/code&gt; &lt;/a&gt; 처럼 보일 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="1ae414c709e33c3350c16c90713b290b063a371c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;zip()&lt;/code&gt; returns a new iterator that will iterate over two other iterators, returning a tuple where the first element comes from the first iterator, and the second element comes from the second iterator.</source>
          <target state="translated">&lt;code&gt;zip()&lt;/code&gt; 은 두 개의 다른 반복자를 반복하는 새 반복자를 반환하여 첫 번째 요소는 첫 번째 반복자에서, 두 번째 요소는 두 번째 반복자에서 오는 튜플을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="c747b39d424c4c127d32ba50d56d1da6309879fc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{&lt;/code&gt;&lt;a href=&quot;structs&quot;&gt;&lt;em&gt;StructFields&lt;/em&gt;&lt;/a&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;code&gt;}&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;{&lt;/code&gt;&lt;a href=&quot;structs&quot;&gt;&lt;em&gt;StructFields&lt;/em&gt;&lt;/a&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;code&gt;}&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d32b0513d1b98e371087b4eb163c3d26f2ab32e9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{&lt;/code&gt;&lt;code&gt;}&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;{&lt;/code&gt;&lt;code&gt;}&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7ed79972f6f7f79a47068e04e16add33aff259f3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;|&lt;/code&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;a href=&quot;../patterns&quot;&gt;&lt;em&gt;Pattern&lt;/em&gt;&lt;/a&gt; ( &lt;code&gt;|&lt;/code&gt;&lt;a href=&quot;../patterns&quot;&gt;&lt;em&gt;Pattern&lt;/em&gt;&lt;/a&gt; )&lt;sup&gt;*&lt;/sup&gt;</source>
          <target state="translated">&lt;code&gt;|&lt;/code&gt; &lt;sup&gt;? &lt;/sup&gt;&lt;a href=&quot;../patterns&quot;&gt;&lt;em&gt;패턴&lt;/em&gt;&lt;/a&gt; ( &lt;code&gt;|&lt;/code&gt; &lt;a href=&quot;../patterns&quot;&gt;&lt;em&gt;패턴&lt;/em&gt;&lt;/a&gt; ) &lt;sup&gt;*&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="3e9e4a1d79413f2c783c3985129cfcd9ace14a8b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;~&lt;/code&gt;&lt;a href=&quot;expressions&quot;&gt;&lt;em&gt;Expression&lt;/em&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;~&lt;/code&gt;&lt;a href=&quot;expressions&quot;&gt;&lt;em&gt;Expression&lt;/em&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="fc377ffbf59e15917ded85798b6434d0c79d5fe0" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;&lt;a href=&quot;../primitive.array&quot;&gt;See also the array primitive type&lt;/a&gt;.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;a href=&quot;../primitive.array&quot;&gt;array primitive type도 참조하십시오&lt;/a&gt; .&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="5afe898a7ddade3301b919bc7b98efe0e6058fdb" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;&lt;a href=&quot;../primitive.f32&quot;&gt;See also the &lt;code&gt;f32&lt;/code&gt; primitive type&lt;/a&gt;.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;a href=&quot;../primitive.f32&quot;&gt; &lt;code&gt;f32&lt;/code&gt; 기본 유형 도 참조하십시오&lt;/a&gt; .&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="9bc08298e33e2ecdf0888a6a61ec82422f09c61a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;&lt;a href=&quot;../primitive.f64&quot;&gt;See also the &lt;code&gt;f64&lt;/code&gt; primitive type&lt;/a&gt;.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;a href=&quot;../primitive.f64&quot;&gt; &lt;code&gt;f64&lt;/code&gt; 프리미티브 유형 도 참조하십시오&lt;/a&gt; .&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="0d0a06c6bcf39135bd01b7dd5810efffad07bfba" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;&lt;a href=&quot;../primitive.i128&quot;&gt;See also the &lt;code&gt;i128&lt;/code&gt; primitive type&lt;/a&gt;.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;a href=&quot;../primitive.i128&quot;&gt; &lt;code&gt;i128&lt;/code&gt; 프리미티브 유형 도 참조하십시오&lt;/a&gt; .&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="e46d7c1a98001ada23aacc00ad0acfcec133f38e" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;&lt;a href=&quot;../primitive.i16&quot;&gt;See also the &lt;code&gt;i16&lt;/code&gt; primitive type&lt;/a&gt;.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;a href=&quot;../primitive.i16&quot;&gt; &lt;code&gt;i16&lt;/code&gt; 프리미티브 유형 도 참조하십시오&lt;/a&gt; .&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="93b00deff3e36bdc53fed2a9cac7284ea7b0c778" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;&lt;a href=&quot;../primitive.i32&quot;&gt;See also the &lt;code&gt;i32&lt;/code&gt; primitive type&lt;/a&gt;.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;a href=&quot;../primitive.i32&quot;&gt; &lt;code&gt;i32&lt;/code&gt; 기본 유형 도 참조하십시오&lt;/a&gt; .&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="156e0a557d174e90ddf6cf3583116c84a9dee15c" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;&lt;a href=&quot;../primitive.i64&quot;&gt;See also the &lt;code&gt;i64&lt;/code&gt; primitive type&lt;/a&gt;.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;a href=&quot;../primitive.i64&quot;&gt; &lt;code&gt;i64&lt;/code&gt; 기본 유형 도 참조하십시오&lt;/a&gt; .&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="fc160ff8ffee74ff77604c7ce32bf62e1fd258b7" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;&lt;a href=&quot;../primitive.i8&quot;&gt;See also the &lt;code&gt;i8&lt;/code&gt; primitive type&lt;/a&gt;.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;a href=&quot;../primitive.i8&quot;&gt; &lt;code&gt;i8&lt;/code&gt; 프리미티브 유형 도 참조하십시오&lt;/a&gt; .&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d16336f499199cbfb74f9b6f69e3d9e23882b4b8" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;&lt;a href=&quot;../primitive.isize&quot;&gt;See also the &lt;code&gt;isize&lt;/code&gt; primitive type&lt;/a&gt;.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;a href=&quot;../primitive.isize&quot;&gt; &lt;code&gt;isize&lt;/code&gt; primitive type 도 참조하십시오&lt;/a&gt; .&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="e0cb4b94b9c8c01463e93bd16e042cf95ee2c64e" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;&lt;a href=&quot;../primitive.pointer&quot;&gt;See also the pointer primitive types&lt;/a&gt;.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;a href=&quot;../primitive.pointer&quot;&gt;포인터 기본 유형도 참조하십시오&lt;/a&gt; .&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d4d3d757af0c56fd5735b0d5301a2da0f9ee1ef8" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;See also the slice primitive type&lt;/a&gt;.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;슬라이스 기본 형식도 참조하십시오&lt;/a&gt; .&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="012dc525e54452ca9e5513daa2b317478262a8a4" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;&lt;a href=&quot;../primitive.str&quot;&gt;See also the &lt;code&gt;str&lt;/code&gt; primitive type&lt;/a&gt;.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;a href=&quot;../primitive.str&quot;&gt; &lt;code&gt;str&lt;/code&gt; primitive type 도 참조하십시오&lt;/a&gt; .&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="afff95f99c68cafc1f9bbcaac001052edd8b1e40" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;&lt;a href=&quot;../primitive.u128&quot;&gt;See also the &lt;code&gt;u128&lt;/code&gt; primitive type&lt;/a&gt;.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;a href=&quot;../primitive.u128&quot;&gt; &lt;code&gt;u128&lt;/code&gt; 프리미티브 유형 도 참조하십시오&lt;/a&gt; .&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="3d7f056041f87bf11e5967e21149325855cafcbf" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;&lt;a href=&quot;../primitive.u16&quot;&gt;See also the &lt;code&gt;u16&lt;/code&gt; primitive type&lt;/a&gt;.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;a href=&quot;../primitive.u16&quot;&gt; &lt;code&gt;u16&lt;/code&gt; 프리미티브 유형 도 참조하십시오&lt;/a&gt; .&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="641d2f36ab10c6cd94d2d3af160150ae5d6727f4" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;&lt;a href=&quot;../primitive.u32&quot;&gt;See also the &lt;code&gt;u32&lt;/code&gt; primitive type&lt;/a&gt;.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;a href=&quot;../primitive.u32&quot;&gt; &lt;code&gt;u32&lt;/code&gt; 기본 유형 도 참조하십시오&lt;/a&gt; .&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="441e0403b4acb7dc1b791d3f82a64c9dc1aac5b4" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;&lt;a href=&quot;../primitive.u64&quot;&gt;See also the &lt;code&gt;u64&lt;/code&gt; primitive type&lt;/a&gt;.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;a href=&quot;../primitive.u64&quot;&gt; &lt;code&gt;u64&lt;/code&gt; 기본 유형 도 참조하십시오&lt;/a&gt; .&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d8f6f83eb8a6b4c59043b83e50c484d60b96451f" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;&lt;a href=&quot;../primitive.u8&quot;&gt;See also the &lt;code&gt;u8&lt;/code&gt; primitive type&lt;/a&gt;.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;a href=&quot;../primitive.u8&quot;&gt; &lt;code&gt;u8&lt;/code&gt; 프리미티브 유형 도 참조하십시오&lt;/a&gt; .&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="21c2215b2e7378f4350b9cbb17bd270077b8f7d9" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;&lt;a href=&quot;../primitive.usize&quot;&gt;See also the &lt;code&gt;usize&lt;/code&gt; primitive type&lt;/a&gt;.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;a href=&quot;../primitive.usize&quot;&gt; &lt;code&gt;usize&lt;/code&gt; primitive type 도 참조하십시오&lt;/a&gt; .&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="3755d956ff02149ee56f84f936c4a79c5e59a075" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;&lt;a href=&quot;f32/index&quot;&gt;See also the &lt;code&gt;std::f32&lt;/code&gt; module&lt;/a&gt;.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;a href=&quot;f32/index&quot;&gt; &lt;code&gt;std::f32&lt;/code&gt; 모듈 도 참조하십시오&lt;/a&gt; .&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="3e3247c982f613de71992993ea86d058c3974dc4" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;&lt;a href=&quot;f64/index&quot;&gt;See also the &lt;code&gt;std::f64&lt;/code&gt; module&lt;/a&gt;.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;a href=&quot;f64/index&quot;&gt; &lt;code&gt;std::f64&lt;/code&gt; 모듈 도 참조하십시오&lt;/a&gt; .&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="edf3d15d8745c67fb84d8994eaddf9d1e04c5e0d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;&lt;a href=&quot;i128/index&quot;&gt;See also the &lt;code&gt;std::i128&lt;/code&gt; module&lt;/a&gt;.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;a href=&quot;i128/index&quot;&gt; &lt;code&gt;std::i128&lt;/code&gt; 모듈 도 참조하십시오&lt;/a&gt; .&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="be30ad00b808390fe80fd2391b71bb056a65227e" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;&lt;a href=&quot;i16/index&quot;&gt;See also the &lt;code&gt;std::i16&lt;/code&gt; module&lt;/a&gt;.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;a href=&quot;i16/index&quot;&gt; &lt;code&gt;std::i16&lt;/code&gt; 모듈 도 참조하십시오&lt;/a&gt; .&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="188b02eb10822e25f1f315068f6a8f2057abb225" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;&lt;a href=&quot;i32/index&quot;&gt;See also the &lt;code&gt;std::i32&lt;/code&gt; module&lt;/a&gt;.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;a href=&quot;i32/index&quot;&gt; &lt;code&gt;std::i32&lt;/code&gt; 모듈 도 참조하십시오&lt;/a&gt; .&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="6ceac7726866419e153d0d3c52994db5fe0ef8e8" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;&lt;a href=&quot;i64/index&quot;&gt;See also the &lt;code&gt;std::i64&lt;/code&gt; module&lt;/a&gt;.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;a href=&quot;i64/index&quot;&gt; &lt;code&gt;std::i64&lt;/code&gt; 모듈 도 참조하십시오&lt;/a&gt; .&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="7691514b6d93900c7943a77ca07f2b0b9ba7da66" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;&lt;a href=&quot;i8/index&quot;&gt;See also the &lt;code&gt;std::i8&lt;/code&gt; module&lt;/a&gt;.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;a href=&quot;i8/index&quot;&gt; &lt;code&gt;std::i8&lt;/code&gt; 모듈 도 참조하십시오&lt;/a&gt; .&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="183e6c4e2632c343159b5362cf5789fcf8d616e6" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;&lt;a href=&quot;isize/index&quot;&gt;See also the &lt;code&gt;std::isize&lt;/code&gt; module&lt;/a&gt;.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;a href=&quot;isize/index&quot;&gt; &lt;code&gt;std::isize&lt;/code&gt; 모듈 도 참조하십시오&lt;/a&gt; .&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="52008a607ee91e4a6ca2a87dfc01495af8b05bad" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;&lt;a href=&quot;ptr/index&quot;&gt;See also the &lt;code&gt;std::ptr&lt;/code&gt; module&lt;/a&gt;.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;a href=&quot;ptr/index&quot;&gt; &lt;code&gt;std::ptr&lt;/code&gt; 모듈 도 참조하십시오&lt;/a&gt; .&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b446fb280d5ecf908446abb0aaa3bfc2a2b109a3" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;&lt;a href=&quot;slice/index&quot;&gt;See also the &lt;code&gt;std::slice&lt;/code&gt; module&lt;/a&gt;.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;a href=&quot;slice/index&quot;&gt; &lt;code&gt;std::slice&lt;/code&gt; 모듈 도 참조하십시오&lt;/a&gt; .&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="9589ef92f30f110cfa700b0f3b19b545732f4789" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;&lt;a href=&quot;str/index&quot;&gt;See also the &lt;code&gt;std::str&lt;/code&gt; module&lt;/a&gt;.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;a href=&quot;str/index&quot;&gt; &lt;code&gt;std::str&lt;/code&gt; 모듈 도 참조하십시오&lt;/a&gt; .&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="97669e507582d88ff0ecc27318b816708a20d07a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;&lt;a href=&quot;u128/index&quot;&gt;See also the &lt;code&gt;std::u128&lt;/code&gt; module&lt;/a&gt;.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;a href=&quot;u128/index&quot;&gt; &lt;code&gt;std::u128&lt;/code&gt; 모듈 도 참조하십시오&lt;/a&gt; .&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="2f74a6f3e8587d7a4384628b6eb04ac060fa5f73" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;&lt;a href=&quot;u16/index&quot;&gt;See also the &lt;code&gt;std::u16&lt;/code&gt; module&lt;/a&gt;.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;a href=&quot;u16/index&quot;&gt; &lt;code&gt;std::u16&lt;/code&gt; 모듈 도 참조하십시오&lt;/a&gt; .&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="8ecd6227400d1feb039e4d2713cbd95f6fe31597" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;&lt;a href=&quot;u32/index&quot;&gt;See also the &lt;code&gt;std::u32&lt;/code&gt; module&lt;/a&gt;.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;a href=&quot;u32/index&quot;&gt; &lt;code&gt;std::u32&lt;/code&gt; 모듈 도 참조하십시오&lt;/a&gt; .&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="5b3976137d48100bdcd7648dfb2518526966187b" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;&lt;a href=&quot;u64/index&quot;&gt;See also the &lt;code&gt;std::u64&lt;/code&gt; module&lt;/a&gt;.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;a href=&quot;u64/index&quot;&gt; &lt;code&gt;std::u64&lt;/code&gt; 모듈 도 참조하십시오&lt;/a&gt; .&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b14a4674db1787eb1f4f3f6326efac88545cfae0" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;&lt;a href=&quot;u8/index&quot;&gt;See also the &lt;code&gt;std::u8&lt;/code&gt; module&lt;/a&gt;.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;a href=&quot;u8/index&quot;&gt; &lt;code&gt;std::u8&lt;/code&gt; 모듈 도 참조하십시오&lt;/a&gt; .&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="9e26dfc27379e83ee98ee0278a32aa28cd01c29f" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;&lt;a href=&quot;usize/index&quot;&gt;See also the &lt;code&gt;std::usize&lt;/code&gt; module&lt;/a&gt;.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;a href=&quot;usize/index&quot;&gt; &lt;code&gt;std::usize&lt;/code&gt; 모듈 도 참조하십시오&lt;/a&gt; .&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="171845cf214853b0c7d13267275f2e59cc8fd49d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;A &lt;code&gt;\r&lt;/code&gt; not followed by a &lt;code&gt;\n&lt;/code&gt;&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt; &lt;code&gt;\r&lt;/code&gt; a로 따르지 &lt;code&gt;\n&lt;/code&gt; &lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="896fb33c45a7e28daf5fae1c1416751fa7aa0637" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Abi&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;아비&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="7af965bf10928c2c6e2403bc2ce7cb98a024f8ae" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;ArithmeticOrLogicalExpression&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;산술 논리식&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="8850228ae2540294c04b59c901a233548818abeb" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;ArrayElements&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;ArrayElements&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="18b5944dcf636a5c91ca30d2b3c07609b0f80acf" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;ArrayExpression&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;ArrayExpression&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="86753a06ca9f7ba368a8897e80566a8268300ea4" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;ArrayType&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;배열 유형&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="7b8fdd377339508be889cf902ef8a135a53cd2a3" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;AsClause&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;AsClause&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="b9c4b414bb510492d52d2adbfa0dd809e951b767" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;AssignmentExpression&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;과제 표현&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="2daea7f8aeef67fba1c92d781f3c640fb18296cc" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Associated Items&lt;/em&gt; are the items declared in &lt;a href=&quot;traits&quot;&gt;traits&lt;/a&gt; or defined in &lt;a href=&quot;implementations&quot;&gt;implementations&lt;/a&gt;. They are called this because they are defined on an associate type &amp;mdash; the type in the implementation. They are a subset of the kinds of items you can declare in a module. Specifically, there are &lt;a href=&quot;associated-items#associated-functions-and-methods&quot;&gt;associated functions&lt;/a&gt; (including methods), &lt;a href=&quot;associated-items#associated-types&quot;&gt;associated types&lt;/a&gt;, and &lt;a href=&quot;associated-items#associated-constants&quot;&gt;associated constants&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;관련 항목&lt;/em&gt; 은 &lt;a href=&quot;traits&quot;&gt;특성으로&lt;/a&gt; 선언 되거나 &lt;a href=&quot;implementations&quot;&gt;구현에&lt;/a&gt; 정의 된 항목 입니다. 그것들은 연관 타입 (구현의 타입)에 정의되어 있기 때문에 이것을 호출합니다. 모듈에서 선언 할 수있는 항목의 하위 집합입니다. 특히 &lt;a href=&quot;associated-items#associated-functions-and-methods&quot;&gt;관련 함수&lt;/a&gt; (메소드 포함), &lt;a href=&quot;associated-items#associated-types&quot;&gt;관련 유형&lt;/a&gt; 및 &lt;a href=&quot;associated-items#associated-constants&quot;&gt;관련 상수가&lt;/a&gt; 있습니다.</target>
        </trans-unit>
        <trans-unit id="9ac109c8aaa6a1b884c029e2991539365303f4a2" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Associated constants&lt;/em&gt; are &lt;a href=&quot;constant-items&quot;&gt;constants&lt;/a&gt; associated with a type.</source>
          <target state="translated">&lt;em&gt;연관된 상수&lt;/em&gt; 는 유형과 연관된 &lt;a href=&quot;constant-items&quot;&gt;상수&lt;/a&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="27a22d074f123889d3225fe003a61829bf9e9847" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Associated functions&lt;/em&gt; are &lt;a href=&quot;functions&quot;&gt;functions&lt;/a&gt; associated with a type.</source>
          <target state="translated">&lt;em&gt;연관된 함수&lt;/em&gt; 는 유형과 연관된 &lt;a href=&quot;functions&quot;&gt;함수&lt;/a&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="6a668d2d58269c25414ad3ff72866e24064ff941" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Associated types&lt;/em&gt; are &lt;a href=&quot;type-aliases&quot;&gt;type aliases&lt;/a&gt; associated with another type. Associated types cannot be defined in &lt;a href=&quot;implementations#inherent-implementations&quot;&gt;inherent implementations&lt;/a&gt; nor can they be given a default implementation in traits.</source>
          <target state="translated">&lt;em&gt;연관된 유형&lt;/em&gt; 은 다른 유형과 연관된 &lt;a href=&quot;type-aliases&quot;&gt;유형 별명&lt;/a&gt; 입니다. 연관된 유형은 &lt;a href=&quot;implementations#inherent-implementations&quot;&gt;고유 구현&lt;/a&gt; 에서 정의 될 수 없으며 특성에서 기본 구현으로 제공 될 수도 없습니다 .</target>
        </trans-unit>
        <trans-unit id="5b66769226f7c43473e0e95bd7bfc4ced1c33421" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Associated types&lt;/em&gt; connect a type placeholder with a trait such that the trait method definitions can use these placeholder types in their signatures. The implementor of a trait will specify the concrete type to be used in this type&amp;rsquo;s place for the particular implementation. That way, we can define a trait that uses some types without needing to know exactly what those types are until the trait is implemented.</source>
          <target state="translated">&lt;em&gt;연관된 유형&lt;/em&gt; 은 유형 플레이스 홀더를 특성과 연결하여 특성 메소드 정의가 해당 플레이스 홀더 유형을 서명에 사용할 수 있도록합니다. 특성의 구현자는 특정 구현을 위해이 유형의 장소에서 사용될 구체적인 유형을 지정합니다. 이렇게하면 특성이 구현 될 때까지 해당 유형이 무엇인지 정확히 알 필요없이 일부 유형을 사용하는 특성을 정의 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0cf2912c53086da65e70188ef9bf7b9fc7a20c2e" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Attr&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;속성&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="f838c004e01c1eeaed35c161adee827f056b1dfa" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;AttrInput&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;AttrInput&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="6d22677ee607ab5d87346790036a43373e395d1f" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Attribute macros&lt;/em&gt; define new &lt;a href=&quot;attributes&quot;&gt;attributes&lt;/a&gt; which can be attached to &lt;a href=&quot;items&quot;&gt;items&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;속성 매크로&lt;/em&gt; 는 &lt;a href=&quot;items&quot;&gt;항목에&lt;/a&gt; 첨부 할 수있는 새로운 &lt;a href=&quot;attributes&quot;&gt;속성&lt;/a&gt; 을 정의 합니다 .</target>
        </trans-unit>
        <trans-unit id="9a0dc24b964f44bd5547f633daf6cbf9d76b638e" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;BareFunctionReturnType&lt;/em&gt;:</source>
          <target state="translated">&lt;em&gt;BareFunctionReturnType&lt;/em&gt;:</target>
        </trans-unit>
        <trans-unit id="0a33b45f4dc92b88f285a44ace162de9c75018a7" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;BareFunctionType&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;BareFunctionType&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="08e49cdb20a45fa41c61e0d32fb166ba3c7463a0" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;BlockCommentOrDoc&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;BlockCommentOrDoc&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="cc638e7cdced8011de5e0eb90479bc2e8b83b608" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;BlockExpression&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;BlockExpression&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="6441cdd8ad7428fa0bb45b030365eb53981fcbcd" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;BlockExpression&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;블록 표현&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="bf3f4642938316db2257c5eaa0402f8005ef001a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;BorrowExpression&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;BorrowExpression&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="86343c9272ae9ae53dc6f5e0f2704ab99eab5baa" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;BorrowExpression&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;차용 표현&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="af1528833b5928011eebcdd68a634088db06a41b" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;BreakExpression&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;BreakExpression&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="84eee52c54b688323da4dea745c5529909707675" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;CallExpression&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;CallExpression&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="f85ca38240bd386d80ee61a93ce3c4f89a83c0b1" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;CallParams&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;CallParams&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="70306b863cdb9fc80d1150ee1893c4b854c286a2" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;CfgAttrAttribute&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;CfgAttrAttribute&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="a7459f3fb67f3c84ad0db3116391795340975d38" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;CfgAttrs&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;CfgAttrs&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="d89db728f2d366b1b26c0701467c8f598308edf7" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;ClosureExpression&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;마감 표현&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="57b7aa70faf777ea546a54a39ebe1db8b7da71d8" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;ClosureParam&lt;/em&gt; (&lt;code&gt;,&lt;/code&gt;&lt;em&gt;ClosureParam&lt;/em&gt;)&lt;sup&gt;*&lt;/sup&gt;&lt;code&gt;,&lt;/code&gt;&lt;sup&gt;?&lt;/sup&gt;</source>
          <target state="translated">&lt;em&gt;ClosureParam&lt;/em&gt; ( &lt;code&gt;,&lt;/code&gt; &lt;em&gt;ClosureParam&lt;/em&gt; ) &lt;sup&gt;* &lt;/sup&gt; &lt;code&gt;,&lt;/code&gt; &lt;sup&gt;?&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="934a15c08190ec04166bdec8c7630ec61065a12f" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;ClosureParam&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;ClosureParam&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="91debf9a8dc0617494d29a7ae3c60c0497dcb73e" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;ClosureParameters&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;ClosureParameters&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="6179a001625f5bc7462572316bf4b62222738aba" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Closures&lt;/em&gt;, a function-like construct you can store in a variable</source>
          <target state="translated">&lt;em&gt;&lt;/em&gt;변수에 저장할 수있는 함수형 구조 인 &lt;em&gt;Closures&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="8d4bde915497a96a99a619eb31908e6f6a25f66f" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;ComparisonExpression&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;비교 표현식&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="2987b6f39aba0488f464403134153b55e5806493" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Compound types&lt;/em&gt; can group multiple values into one type. Rust has two primitive compound types: tuples and arrays.</source>
          <target state="translated">&lt;em&gt;복합 유형&lt;/em&gt; 은 여러 값을 하나의 유형으로 그룹화 할 수 있습니다. Rust에는 튜플과 배열이라는 두 가지 기본 복합 유형이 있습니다.</target>
        </trans-unit>
        <trans-unit id="60e102c6b06e65ff9f5d576023fdf32a474f2082" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;CompoundAssignmentExpression&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;CompoundAssignmentExpression&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="bb646db9e45009650f92db559a38f16a7f8e2ef8" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Conditionally compiled source code&lt;/em&gt; is source code that may or may not be considered a part of the source code depending on certain conditions.  Source code can be conditionally compiled using &lt;a href=&quot;attributes&quot;&gt;attributes&lt;/a&gt;, &lt;a href=&quot;conditional-compilation#the-cfg-attribute&quot;&gt;&lt;code&gt;cfg&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;conditional-compilation#the-cfg_attr-attribute&quot;&gt;&lt;code&gt;cfg_attr&lt;/code&gt;&lt;/a&gt;, and the built-in &lt;a href=&quot;conditional-compilation#the-cfg-macro&quot;&gt;&lt;code&gt;cfg&lt;/code&gt; macro&lt;/a&gt;. These conditions are based on the target architecture of the compiled crate, arbitrary values passed to the compiler, and a few other miscellaneous things further described below in detail.</source>
          <target state="translated">&lt;em&gt;조건부로 컴파일 된 소스 코드&lt;/em&gt; 는 특정 조건에 따라 소스 코드의 일부로 간주되거나 고려되지 않을 수있는 소스 코드입니다. &lt;a href=&quot;attributes&quot;&gt;속성&lt;/a&gt; , &lt;a href=&quot;conditional-compilation#the-cfg-attribute&quot;&gt; &lt;code&gt;cfg&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;conditional-compilation#the-cfg_attr-attribute&quot;&gt; &lt;code&gt;cfg_attr&lt;/code&gt; &lt;/a&gt; 및 내장 &lt;a href=&quot;conditional-compilation#the-cfg-macro&quot;&gt; &lt;code&gt;cfg&lt;/code&gt; 매크로를&lt;/a&gt; 사용하여 소스 코드를 조건부로 컴파일 할 수 있습니다 . 이러한 조건은 컴파일 된 크레이트의 대상 아키텍처, 컴파일러에 전달 된 임의의 값 및 아래에 자세히 설명 된 기타 기타 사항을 기반으로합니다.</target>
        </trans-unit>
        <trans-unit id="804879068ad65b1104b5c96ff86fc5dcadf047e6" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Configuration options&lt;/em&gt; are names and key-value pairs that are either set or unset. Names are written as a single identifier such as, for example, &lt;code&gt;unix&lt;/code&gt;. Key-value pairs are written as an identifier, &lt;code&gt;=&lt;/code&gt;, and then a string. For example, &lt;code&gt;target_arch = &quot;x86_64&quot;&lt;/code&gt; is a configuration option.</source>
          <target state="translated">&lt;em&gt;구성 옵션&lt;/em&gt; 은 설정 또는 설정 해제 된 이름 및 키-값 쌍입니다. 이름은 예를 들어 &lt;code&gt;unix&lt;/code&gt; 와 같은 단일 식별자로 작성됩니다 . 키-값 쌍은 식별자, &lt;code&gt;=&lt;/code&gt; 및 문자열로 작성됩니다. 예를 들어 &lt;code&gt;target_arch = &quot;x86_64&quot;&lt;/code&gt; 는 구성 옵션입니다.</target>
        </trans-unit>
        <trans-unit id="5fd8ccd8ef14d64b54dcb73071bdd435858764ff" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;ConfigurationAll&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;ConfigurationAll&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="2a3f3490554aae2a1d05d22716ecbc21e7a0008d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;ConfigurationAny&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;ConfigurationAny&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="40baa237b3e5d609aa99144c9113a95044546f0e" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;ConfigurationNot&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;ConfigurationNot&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="7092727ee4218d2aa4c23ace8b1ff8f8643c46ae" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;ConfigurationOption&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;ConfigurationOption&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d624df479df18156c3af914bf1922ad9f4caa8fd" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;ConfigurationOption&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;구성 옵션&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="5ad4964f057a83107f2eb1c72ee64caf3eacf36b" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;ConfigurationPredicate&lt;/em&gt; (&lt;code&gt;,&lt;/code&gt;&lt;em&gt;ConfigurationPredicate&lt;/em&gt;)&lt;sup&gt;*&lt;/sup&gt;&lt;code&gt;,&lt;/code&gt;&lt;sup&gt;?&lt;/sup&gt;</source>
          <target state="translated">&lt;em&gt;ConfigurationPredicate&lt;/em&gt; ( &lt;code&gt;,&lt;/code&gt; &lt;em&gt;ConfigurationPredicate&lt;/em&gt; ) &lt;sup&gt;* &lt;/sup&gt; &lt;code&gt;,&lt;/code&gt; &lt;sup&gt;?&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="f1296f5daec2c617bdc3dd3f2f359fb7f679e202" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;ConfigurationPredicate&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;구성 술어&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="cb0936b7a69327261de8e0b0c03f3d56f0d00fd1" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;ConfigurationPredicateList&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;ConfigurationPredicateList&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="012cc76248fe9505eddab45a5035f8eae8d9318f" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;ConstantItem&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;ConstantItem&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="9531d18a1e12260e962aa3594378fd4dee19a8b4" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;ContinueExpression&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;ContinueExpression&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="64cb78e1be5024c4314dec53c07cc0240fe7e8f7" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Crate&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;상자&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="9e27cd4ebba2623a3adbf84e0fc68a0aafe5b354" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;CrateRef&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;크레이트 참조&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="09a4c07aae2d970ef44b5c5ec76a82f1d3f31ed5" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;DelimTokenTree&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;DelimTokenTree&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="9c6909aef579ed884ef08c1950f045984b47eaa5" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;DelimTokenTree&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;DelimTokenTree&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="cb711f6d1258a2d9fde66b31f4e41b3ff4f4d5e1" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Deref coercion&lt;/em&gt; is a convenience that Rust performs on arguments to functions and methods. Deref coercion converts a reference to a type that implements &lt;code&gt;Deref&lt;/code&gt; into a reference to a type that &lt;code&gt;Deref&lt;/code&gt; can convert the original type into. Deref coercion happens automatically when we pass a reference to a particular type&amp;rsquo;s value as an argument to a function or method that doesn&amp;rsquo;t match the parameter type in the function or method definition. A sequence of calls to the &lt;code&gt;deref&lt;/code&gt; method converts the type we provided into the type the parameter needs.</source>
          <target state="translated">&lt;em&gt;역 참조 강제&lt;/em&gt; 는 Rust가 함수와 메소드에 대한 인수에 대해 수행하는 편의입니다. Deref 강제 변환은 &lt;code&gt;Deref&lt;/code&gt; 를 구현하는 형식 으로 참조를 변환하여 &lt;code&gt;Deref&lt;/code&gt; 가 원래 형식을 변환 할 수있는 형식으로 변환합니다. 참조 강제 변환은 함수 또는 메소드 정의의 매개 변수 유형과 일치하지 않는 함수 또는 메소드에 대한 인수로 특정 유형의 값에 대한 참조를 전달할 때 자동으로 발생합니다. &lt;code&gt;deref&lt;/code&gt; 메소드에 대한 일련의 호출은 제공된 유형을 매개 변수에 필요한 유형으로 변환합니다.</target>
        </trans-unit>
        <trans-unit id="37eed1edd1a8cde28e85b8c1ad70682884b34cfc" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;DereferenceExpression&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;역 참조&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="76f75031d02347fc664901b1f2bf13fed47fb373" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Derive macros&lt;/em&gt; define new inputs for the &lt;a href=&quot;attributes/derive&quot;&gt;&lt;code&gt;derive&lt;/code&gt; attribute&lt;/a&gt;. These macros can create new &lt;a href=&quot;items&quot;&gt;items&lt;/a&gt; given the token stream of a &lt;a href=&quot;items/structs&quot;&gt;struct&lt;/a&gt;, &lt;a href=&quot;items/enumerations&quot;&gt;enum&lt;/a&gt;, or &lt;a href=&quot;items/unions&quot;&gt;union&lt;/a&gt;. They can also define &lt;a href=&quot;procedural-macros#derive-macro-helper-attributes&quot;&gt;derive macro helper attributes&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;파생 매크로&lt;/em&gt; 는 &lt;a href=&quot;attributes/derive&quot;&gt; &lt;code&gt;derive&lt;/code&gt; 속성에&lt;/a&gt; 대한 새로운 입력을 정의 합니다 . 이 매크로는 &lt;a href=&quot;items/structs&quot;&gt;struct&lt;/a&gt; , &lt;a href=&quot;items/enumerations&quot;&gt;enum&lt;/a&gt; 또는 &lt;a href=&quot;items/unions&quot;&gt;union&lt;/a&gt; 의 토큰 스트림이 주어지면 새 &lt;a href=&quot;items&quot;&gt;항목을&lt;/a&gt; 만들 수 있습니다 . 또한 &lt;a href=&quot;procedural-macros#derive-macro-helper-attributes&quot;&gt;파생 매크로 도우미 속성을&lt;/a&gt; 정의 할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="119a91c56447c43f1658acfafd5f4d75a39e168e" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;EnumExprField&lt;/em&gt; (&lt;code&gt;,&lt;/code&gt;&lt;em&gt;EnumExprField&lt;/em&gt;)&lt;sup&gt;*&lt;/sup&gt;&lt;code&gt;,&lt;/code&gt;&lt;sup&gt;?&lt;/sup&gt;</source>
          <target state="translated">&lt;em&gt;EnumExprField&lt;/em&gt; ( &lt;code&gt;,&lt;/code&gt; &lt;em&gt;EnumExprField&lt;/em&gt; ) &lt;sup&gt;* &lt;/sup&gt; &lt;code&gt;,&lt;/code&gt; &lt;sup&gt;?&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="af63d6116b0ffd79b25d33ee20cdc2c652857fec" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;EnumExprField&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;EnumExprField&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="1f26b60ccfa5cdd6e5115153df20e841973bdc24" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;EnumExprFieldless&lt;/em&gt; : &lt;a href=&quot;../paths#paths-in-expressions&quot;&gt;&lt;em&gt;PathInExpression&lt;/em&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;em&gt;EnumExprFieldless&lt;/em&gt; : &lt;a href=&quot;../paths#paths-in-expressions&quot;&gt;&lt;em&gt;PathInExpression&lt;/em&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5a3e247b5324fe26d81405de894f9ae01cd12c71" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;EnumExprFields&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;EnumExprFields&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="a1e63e280dcac737e7087d81c417bb2ab6ef170a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;EnumExprStruct&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;EnumExprStruct&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="81a31b2effb76cd9ae25598167249ffe2927f24d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;EnumExprStruct&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;EnumExprStruct&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="872818237167326d46f7d79f82a474d7620d59e8" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;EnumExprTuple&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;EnumExprTuple&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="7a247d38a26600c1d6ab239677aae501828c23bb" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;EnumItem&lt;/em&gt; ( &lt;code&gt;,&lt;/code&gt;&lt;em&gt;EnumItem&lt;/em&gt; )&lt;sup&gt;*&lt;/sup&gt;&lt;code&gt;,&lt;/code&gt;&lt;sup&gt;?&lt;/sup&gt;</source>
          <target state="translated">&lt;em&gt;EnumItem&lt;/em&gt; ( &lt;code&gt;,&lt;/code&gt; &lt;em&gt;EnumItem&lt;/em&gt; ) &lt;sup&gt;* &lt;/sup&gt; &lt;code&gt;,&lt;/code&gt; &lt;sup&gt;?&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="c96047187a48e4499f3d9eb09874509e7dcf5a6b" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;EnumItem&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;항목&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="f1d208e299cd6d7197f344b241477faf59f14365" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;EnumItemDiscriminant&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;EnumItemDiscriminant&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="392efbedcf0e93dd1c123943deacda31699a635d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;EnumItemStruct&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;EnumItemStruct&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="535fb7350a5f7ecf9c99b545d4d08879625019c9" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;EnumItemTuple&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;EnumItemTuple&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="560d9a1d9be288e4fd935c185e48e368caa0cd50" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;EnumItems&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;EnumItems&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="480d1890c3d2b2e50731052f78fb268c56243900" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Enumeration&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;열거&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="8f62338d6b7c311d14624b530b32b048db1ab97a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;EnumerationVariantExpression&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;열거 형 VariantExpression&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="dd5815fe88c57026716044be8c2b7d220a9fa4cc" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;ErrorPropagationExpression&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;ErrorPropagationExpression&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="cb9ee65024268a75134206e6a4c99f7d8fa0f89f" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;ExampleGrammar&lt;/em&gt;:</source>
          <target state="translated">&lt;em&gt;ExampleGrammar&lt;/em&gt;:</target>
        </trans-unit>
        <trans-unit id="80c44d7022c9adcdd921a5b80aee11712f70fc05" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Expression&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;표현&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="e58544a48f06924557169ef1418c4689a451c875" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;ExpressionStatement&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;ExpressionStatement&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="7cc396823b918359020f355cf1dc9da18933258b" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;ExpressionWithBlock&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;ExpressionWithBlock&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="596bbce5f87bab0fd29d812454db376d6aca155e" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;ExpressionWithoutBlock&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;ExpressionWithoutBlock&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="6c94d5af9134aa8b1f09f00ed31c6f369919f09c" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;ExpressionWithoutBlock&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;ExpressionWithoutBlock&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="446e71b1899f357476dc9ae92fa474c0107ed591" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;ExternBlock&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;ExternBlock&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="1b561479775d2c9407f5fd110e063fb310a737a2" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;ExternCrate&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;ExternCrate&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="c7cf4477548c689d6a4ea7f06ba8c1d3681deb95" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;ExternalFunctionItem&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;ExternalFunctionItem&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="37172998df85b0e7dd731b75e4d62eb9a9c7b379" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;ExternalItem&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;ExternalItem&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="c0d8bdffca78d8882e397411de97d66a0f45e54d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;ExternalItem&lt;/em&gt;&lt;sup&gt;*&lt;/sup&gt;</source>
          <target state="translated">&lt;em&gt;ExternalItem&lt;/em&gt;&lt;sup&gt;*&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="08bd64786f839eb621640ebd233ca37b6a4950c3" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;ExternalStaticItem&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;ExternalStaticItem&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="ca497f47dd18f54d8f558a5e7a74e5f715f1a983" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;FieldExpression&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;FieldExpression&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="7a09c2fd212d136b9c8764d23e72ed1626095d14" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;ForLifetimes&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;평생&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="fb5f5509306f986a8ce27f23fda17690166842f4" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;ForLifetimes&lt;/em&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;a href=&quot;../types#type-expressions&quot;&gt;&lt;em&gt;Type&lt;/em&gt;&lt;/a&gt;&lt;code&gt;:&lt;/code&gt;&lt;a href=&quot;../trait-bounds&quot;&gt;&lt;em&gt;TypeParamBounds&lt;/em&gt;&lt;/a&gt;&lt;sup&gt;?&lt;/sup&gt;</source>
          <target state="translated">&lt;em&gt;ForLifetimes&lt;/em&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;a href=&quot;../types#type-expressions&quot;&gt;&lt;em&gt;Type&lt;/em&gt;&lt;/a&gt;&lt;code&gt;:&lt;/code&gt;&lt;a href=&quot;../trait-bounds&quot;&gt;&lt;em&gt;TypeParamBounds&lt;/em&gt;&lt;/a&gt;&lt;sup&gt;?&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="162bb590eada5f15f64a539675ab6a6a7f5751fb" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Function-like procedural macros&lt;/em&gt; are procedural macros that are invoked using the macro invocation operator (&lt;code&gt;!&lt;/code&gt;).</source>
          <target state="translated">&lt;em&gt;함수형 절차 매크로&lt;/em&gt; 는 매크로 호출 연산자 ( &lt;code&gt;!&lt;/code&gt; )를 사용하여 호출되는 절차 매크로입니다 .</target>
        </trans-unit>
        <trans-unit id="ec28b24ac72ab68956c914d032226ef2400adbed" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Function&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;기능&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="8168d63a8074aab909c34b26df738e48ecfde250" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;FunctionParam&lt;/em&gt; (&lt;code&gt;,&lt;/code&gt;&lt;em&gt;FunctionParam&lt;/em&gt;)&lt;sup&gt;*&lt;/sup&gt;&lt;code&gt;,&lt;/code&gt;&lt;sup&gt;?&lt;/sup&gt;</source>
          <target state="translated">&lt;em&gt;FunctionParam&lt;/em&gt; ( &lt;code&gt;,&lt;/code&gt; &lt;em&gt;FunctionParam&lt;/em&gt; ) &lt;sup&gt;* &lt;/sup&gt; &lt;code&gt;,&lt;/code&gt; &lt;sup&gt;?&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="9c894aa89db1ffe8f9db0eef51225568cfe54120" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;FunctionParam&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;기능 매개 변수&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="0f42bf8375c939e33e16809b4a34a1ac2d861f69" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;FunctionParameters&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;기능 매개 변수&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="9a31e1b61e366904b87a234a9c76e83e22d71da6" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;FunctionParametersMaybeNamedVariadic&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;함수 매개 변수 명&lt;/em&gt; : &lt;em&gt;Variadic&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="1c3279a6ddd347e91a65b511c22f09a8aeb666d8" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;FunctionQualifiers&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;기능 한정자&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="39418f8af9ab5576f6c64f1ee2ad007aa5750e01" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;FunctionQualifiers&lt;/em&gt;&lt;code&gt;fn&lt;/code&gt;&lt;a href=&quot;../identifiers&quot;&gt;IDENTIFIER&lt;/a&gt;&lt;a href=&quot;generics&quot;&gt;&lt;em&gt;Generics&lt;/em&gt;&lt;/a&gt;&lt;sup&gt;?&lt;/sup&gt;</source>
          <target state="translated">&lt;em&gt;FunctionQualifiers&lt;/em&gt;&lt;code&gt;fn&lt;/code&gt;&lt;a href=&quot;../identifiers&quot;&gt;IDENTIFIER&lt;/a&gt;&lt;a href=&quot;generics&quot;&gt;&lt;em&gt;Generics&lt;/em&gt;&lt;/a&gt;&lt;sup&gt;?&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="788b2713b2513627be56a9c05d69615eb51c0722" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;FunctionReturnType&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;FunctionReturnType&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="38b65471a255a2036cede5bcb3d47f5c080c49c8" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;FunctionReturnType&lt;/em&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;a href=&quot;generics#where-clauses&quot;&gt;&lt;em&gt;WhereClause&lt;/em&gt;&lt;/a&gt;&lt;sup&gt;?&lt;/sup&gt;</source>
          <target state="translated">&lt;em&gt;FunctionReturnType&lt;/em&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;a href=&quot;generics#where-clauses&quot;&gt;&lt;em&gt;WhereClause&lt;/em&gt;&lt;/a&gt;&lt;sup&gt;?&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="c5e08598325a6fef007cf94d3ecd46442c7fafee" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;GenericArgs&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;GenericArgs&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="c54e63947d01d4af369104ad05fe28f3eb40ce84" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;GenericArgsBinding&lt;/em&gt; (&lt;code&gt;,&lt;/code&gt;&lt;em&gt;GenericArgsBinding&lt;/em&gt;)&lt;sup&gt;*&lt;/sup&gt;</source>
          <target state="translated">&lt;em&gt;GenericArgsBinding&lt;/em&gt; ( &lt;code&gt;,&lt;/code&gt; &lt;em&gt;GenericArgsBinding&lt;/em&gt; ) &lt;sup&gt;*&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="6f38617bda8c69b2aad0962cd10c3412991b5c0b" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;GenericArgsBinding&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;GenericArgsBinding&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="81dc2ce7abba66a5df4eb392835de6eb00035c8c" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;GenericArgsBindings&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;GenericArgsBindings&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="b73f8a4aab172b4a6c9574ba65d5bb321d657dd1" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;GenericArgsLifetimes&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;GenericArgsLifetimes&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="f8a974f32d33a7bd75a95fdf90a18c5c1e6073d9" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;GenericArgsTypes&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;GenericArgsTypes&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="3c24974b6beee6e1f7b208bc03c9dcc3fc124d86" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;GenericParams&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;GenericParams&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="da9e88754d1d196b1d9ba3e958771b23d53dadb1" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Generics&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;제네릭&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="ea913979d94c8460bf48a0d160d405c6a3cb364e" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;GroupedExpression&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;GroupedExpression&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="d9335cb7193c14f1c28286092073632a0e0c482a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;GroupedPattern&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;그룹화 패턴&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="1d7c2bcd43e46897232ff538bfc77694fb9d1cf3" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;IdentifierPattern&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;식별자 패턴&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="552a257d41f0a82c496a8c9d9d5ff9cf5f001458" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;IfExpression&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;IfExpression&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="bf2626f317e3f10399cb330cefe01d92a99d8b6f" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;IfLetExpression&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;IfLetExpression&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="79ee94938a3f8246e8c14f54e7a997fd1ad6c760" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;ImplTraitType&lt;/em&gt; : &lt;code&gt;impl&lt;/code&gt;&lt;a href=&quot;../trait-bounds&quot;&gt;&lt;em&gt;TypeParamBounds&lt;/em&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;em&gt;ImplTraitType&lt;/em&gt; : &lt;code&gt;impl&lt;/code&gt; &lt;a href=&quot;../trait-bounds&quot;&gt;&lt;em&gt;TypeParamBounds&lt;/em&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="05613b00e6dd0110b60f330b7e46df5b89a82cd7" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;ImplTraitTypeOneBound&lt;/em&gt; : &lt;code&gt;impl&lt;/code&gt;&lt;a href=&quot;../trait-bounds&quot;&gt;&lt;em&gt;TraitBound&lt;/em&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;em&gt;ImplTraitTypeOneBound&lt;/em&gt; : &lt;code&gt;impl&lt;/code&gt; &lt;a href=&quot;../trait-bounds&quot;&gt;&lt;em&gt;TraitBound&lt;/em&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d4fd05262d3d8919770d7462003fd7944b0dd430" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Implementation&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;구현&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="0cfcf205225b502eeddd6cc3a859a4ac35782fa4" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Incorrect&lt;/em&gt; usage of this function: initializing a reference with zero.</source>
          <target state="translated">&lt;em&gt;&lt;/em&gt;이 함수의 &lt;em&gt;잘못된&lt;/em&gt; 사용법 : 0으로 참조 초기화.</target>
        </trans-unit>
        <trans-unit id="28628453b676c4b17b657f804b1cdabf0268307f" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Incorrect&lt;/em&gt; usage of this function: initializing a struct with zero, where some fields cannot hold 0 as a valid value.</source>
          <target state="translated">&lt;em&gt;&lt;/em&gt;이 함수의 &lt;em&gt;잘못된&lt;/em&gt; 사용법 : 0으로 구조체를 초기화하는 경우 일부 필드는 0을 유효한 값으로 보유 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="1e35375dd8ca064ff4be0792decd69979e2a94f1" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Incorrect&lt;/em&gt; usage of this method:</source>
          <target state="translated">&lt;em&gt;&lt;/em&gt;이 방법의 &lt;em&gt;잘못된&lt;/em&gt; 사용법 :</target>
        </trans-unit>
        <trans-unit id="bf29de4a8b94f53e344a29577c238666b6c4f853" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;IndexExpression&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;IndexExpression&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="c94ff0faba99ce65f8412731449d7be18d1e3771" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;InferredType&lt;/em&gt; : &lt;code&gt;_&lt;/code&gt;</source>
          <target state="translated">&lt;em&gt;유추 유형&lt;/em&gt; : &lt;code&gt;_&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="95b1cb6f36e254b0e037447afbf413b63c98f580" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;InfiniteLoopExpression&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;InfiniteLoopExpression&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="6a29190f932069fb30261267a0f7f6a8f0edf508" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;InfiniteLoopExpression&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;InfiniteLoopExpression&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="863ac61ae9beee9e20887415b53077b2cd587cc4" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;InherentImpl&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;고유 Impl&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="a79afb1ce32a4539826399a2e1aefd3500e2864c" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;InherentImpl&lt;/em&gt; | &lt;em&gt;TraitImpl&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;InherentImpl&lt;/em&gt; | &lt;em&gt;특성&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="25f84d39eb0b9d4931e76839cb6cce77d4382f61" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;InherentImplItem&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;InherentImplItem&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="2eff57e7451fa06aafae25f01ccf8779642171cf" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;InherentImplItem&lt;/em&gt;&lt;sup&gt;*&lt;/sup&gt;</source>
          <target state="translated">&lt;em&gt;InherentImplItem&lt;/em&gt;&lt;sup&gt;*&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="9d5c07a8ba88eeed78b7d7e38091e5c9ecaa5fca" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Inheritance&lt;/em&gt; is a mechanism whereby an object can inherit from another object&amp;rsquo;s definition, thus gaining the parent object&amp;rsquo;s data and behavior without you having to define them again.</source>
          <target state="translated">&lt;em&gt;상속&lt;/em&gt; 은 객체가 다른 객체의 정의에서 상속되어 부모 객체의 데이터와 동작을 다시 정의하지 않고도 얻을 수있는 메커니즘입니다.</target>
        </trans-unit>
        <trans-unit id="37b838e42be8ffd5750f71b0c368c67cc7d9cc92" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Inner attributes&lt;/em&gt;, written with a bang (&lt;code&gt;!&lt;/code&gt;) after the hash (&lt;code&gt;#&lt;/code&gt;), apply to the item that the attribute is declared within. &lt;em&gt;Outer attributes&lt;/em&gt;, written without the bang after the hash, apply to the thing that follows the attribute.</source>
          <target state="translated">&lt;em&gt;&lt;/em&gt;해시 ( &lt;code&gt;#&lt;/code&gt; ) 다음에 뱅 ( &lt;code&gt;!&lt;/code&gt; )으로 작성된 &lt;em&gt;내부 속성&lt;/em&gt; 은 속성이 선언 된 항목에 적용됩니다. 해시 후 뱅없이 작성되는 &lt;em&gt;외부 속성은 속성&lt;/em&gt; 뒤에 오는 것에 적용됩니다.&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b21dd44482c776a4ae70c27fc6354483a4a31457" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;InnerAttribute&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;InnerAttribute&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="6a4a98cd6f0b1230436493f0b5d42df54fbefc46" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Interior mutability&lt;/em&gt; is a design pattern in Rust that allows you to mutate data even when there are immutable references to that data; normally, this action is disallowed by the borrowing rules. To mutate data, the pattern uses &lt;code&gt;unsafe&lt;/code&gt; code inside a data structure to bend Rust&amp;rsquo;s usual rules that govern mutation and borrowing. We haven&amp;rsquo;t yet covered unsafe code; we will in Chapter 19. We can use types that use the interior mutability pattern when we can ensure that the borrowing rules will be followed at runtime, even though the compiler can&amp;rsquo;t guarantee that. The &lt;code&gt;unsafe&lt;/code&gt; code involved is then wrapped in a safe API, and the outer type is still immutable.</source>
          <target state="translated">&lt;em&gt;내부 변경 가능성&lt;/em&gt; 은 Rust의 디자인 패턴으로, 해당 데이터에 대한 변경 불가능한 참조가있는 경우에도 데이터를 변경할 수 있습니다. 일반적으로이 조치는 차용 규칙에 따라 허용되지 않습니다. 데이터를 돌연변이시키기 위해 패턴은 데이터 구조 내에서 &lt;code&gt;unsafe&lt;/code&gt; 코드를 사용하여 돌연변이 및 차용을 제어하는 ​​Rust의 일반적인 규칙을 구부립니다. 안전하지 않은 코드는 아직 다루지 않았습니다. 컴파일러가 보장 할 수는 없지만 런타임에 차용 규칙이 준수되도록 보장 할 때 내부 변경 패턴을 사용하는 유형을 사용할 수 있습니다. &lt;code&gt;unsafe&lt;/code&gt; 관련 코드는 안전한 API에 싸여 있으며, 외부 형태는 여전히 불변이다.</target>
        </trans-unit>
        <trans-unit id="91f906ea541949971bce8092251fb34ad2874f01" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;IsolatedCR&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;절연 CR&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="15b1db203d17ae708a602c52e1b8b0a79a33743c" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;It's much nicer!&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;훨씬 좋습니다!&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="3589cc7a2650a6a39893a4f30ad24db14bcc98c3" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;ItalicCamelCase&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;ItalicCamelCase&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="8e4294d2f533011b09278da1f0928e3fabf6c585" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Item&lt;/em&gt;:</source>
          <target state="translated">&lt;em&gt;Item&lt;/em&gt;:</target>
        </trans-unit>
        <trans-unit id="35eaaafb0e0cfcbe9059a1b585f1a998f21adff7" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;IteratorLoopExpression&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;IteratorLoopExpression&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="c5c5224fda773552cba7aaab8d33158d49416eb2" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Iterators&lt;/em&gt;, a way of processing a series of elements</source>
          <target state="translated">&lt;em&gt;&lt;/em&gt;일련의 요소를 처리하는 방법 인 &lt;em&gt;반복자&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="6878bb942a50edb04c637f441255c08839fd8b5e" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;LazyBooleanExpression&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;LazyBooleanExpression&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="e4ec5679d98469d83e30b728ef14a087b47cc5ad" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;LetStatement&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;LetStatement&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="50e44bb3a7ace5b8fd084f781de2033f5d340501" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;LetStatement&lt;/em&gt;, &lt;em&gt;Item&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;LetStatement&lt;/em&gt; , &lt;em&gt;항목&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="39582c4eee46618d53ec3ef9cb470cd2be058e46" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Lifetime&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;일생&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="0ea24f230231f68a2b34565b7dcca2f3da5ddd71" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Lifetime&lt;/em&gt; | &lt;em&gt;TraitBound&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;일생&lt;/em&gt; | &lt;em&gt;TraitBound&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="4ebf62dff1412adf1ae4b162299598ee5a032a6e" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;LifetimeBounds&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;평생 경계&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="060de76296a6782922ad4030917b108ef8967b15" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;LifetimeParam&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;LifetimeParam&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="db9dbc6cc32224342ea50dccd96dda25d69288f1" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;LifetimeParams&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;LifetimeParams&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="03a0239bb786012518cf2c6c045b55b7937dfe9b" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;LifetimeParams&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;LifetimeParams&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="0b9e9f262b361c2f9cde92cf65edeac7a44b031e" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;LifetimeWhereClauseItem&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;LifetimeWhereClauseItem&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b5e16a802a7971ac6b243273fb14a2dccf57bf67" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;LifetimeWhereClauseItem&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;LifetimeWhereClauseItem&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="2edfdb6001688b168202c1220fd23770fbcb9d2b" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Literal patterns&lt;/em&gt; match exactly the same value as what is created by the literal. Since negative numbers are not &lt;a href=&quot;expressions/literal-expr&quot;&gt;literals&lt;/a&gt;, literal patterns also accept an optional minus sign before the literal, which acts like the negation operator.</source>
          <target state="translated">&lt;em&gt;리터럴 패턴&lt;/em&gt; 은 리터럴에서 작성된 것과 정확히 동일한 값을 찾습니다. 음수는 &lt;a href=&quot;expressions/literal-expr&quot;&gt;리터럴&lt;/a&gt; 이 아니기 때문에 리터럴 패턴은 리터럴 앞에 마이너스 부호 (선택 사항)를 허용하며 이는 부정 연산자처럼 작동합니다.</target>
        </trans-unit>
        <trans-unit id="464b5ac4b1f4a4fffbbf7466eec695e49502c6aa" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;LiteralExpression&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;LiteralExpression&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="80ad5e778c4821aa8ad4533e2e1b28aceca96a97" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;LiteralExpression&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;리터럴 표현&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="b2462e40e7f72a721e3006bfd0b52a9aee146737" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;LiteralPattern&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;LiteralPattern&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="e24c33e733c079f39066482083d99720d7a590a0" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;LiteralPattern&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;리터럴 패턴&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="884209fe2f2a76e7cda80f39d4d922f1c38b8004" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;LoopExpression&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;LoopExpression&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="14ce3d029e799f142eb096754128bfcb245b572f" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;LoopLabel&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;LoopLabel&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="899f19ae53fdd000cfcb9c004274efe07708a07c" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;MacroFragSpec&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;MacroFragSpec&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="3da67bc64cc6b58442ceabf314b6d8f315774765" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;MacroInvocation&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;MacroInvocation&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="86736fdf72b16f87485cb2da5b9702f1f15e0d0d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;MacroInvocationSemi&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;MacroInvocationSemi&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d0c25696e65bad5ef16fa4cff7c02ac72724ed33" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;MacroInvocationSemi&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;MacroInvocationSemi&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="1314757d6629df1286f781c412bcb2a7cfc877cd" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;MacroItem&lt;/em&gt;:</source>
          <target state="translated">&lt;em&gt;MacroItem&lt;/em&gt;:</target>
        </trans-unit>
        <trans-unit id="107065ee19fe1d1535cd6a2549f6ef154a38aad6" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;MacroMatch&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;매크로 매치&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="10f1c042b96121396ef40d4d223f94b891eadae1" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;MacroMatch&lt;/em&gt;&lt;sup&gt;+&lt;/sup&gt;</source>
          <target state="translated">&lt;em&gt;MacroMatch&lt;/em&gt;&lt;sup&gt;+&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="aa73b9a1272ca09d2634ea23fbb5d95ac193c417" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;MacroMatcher&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;매크로 매치&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="c85576888e4fc3cc4860eb43185db02056a40314" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;MacroMatcher&lt;/em&gt;&lt;code&gt;=&amp;gt;&lt;/code&gt;&lt;em&gt;MacroTranscriber&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;MacroMatcher&lt;/em&gt;&lt;code&gt;=&amp;gt;&lt;/code&gt;&lt;em&gt;MacroTranscriber&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="5ffe14d46b6069b4bd1e26e86ac80bb7d5bc67f4" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;MacroRepOp&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;MacroRepOp&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="5a2b0452859a72cf796927f33eb344fb43ce17a2" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;MacroRepSep&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;MacroRepSep&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="b47a89691628c051ab5d56c0b0874a4768743618" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;MacroRule&lt;/em&gt; ( &lt;code&gt;;&lt;/code&gt;&lt;em&gt;MacroRule&lt;/em&gt; )&lt;sup&gt;*&lt;/sup&gt;&lt;code&gt;;&lt;/code&gt;&lt;sup&gt;?&lt;/sup&gt;</source>
          <target state="translated">&lt;em&gt;MacroRule&lt;/em&gt; ( &lt;code&gt;;&lt;/code&gt; &lt;em&gt;매크로 룰&lt;/em&gt; ) &lt;sup&gt;* &lt;/sup&gt; &lt;code&gt;;&lt;/code&gt; &lt;sup&gt;?&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="7a3a64afb6e6e4c9cb8013297f3aecf634458b77" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;MacroRule&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;MacroRule&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="e0d02c2687f0b8d0a3ec1e79a5d0a4e723aaa459" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;MacroRules&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;MacroRules&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="300a4e1e637630e5311d1580fa57ad0907c4949c" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;MacroRulesDef&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;MacroRulesDef&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="7432d8c5ee6a6f8435e41ebcb841a8e9e3efbe09" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;MacroRulesDefinition&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;MacroRules 정의&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="0aa63b176d3289e7d5fe278979b47b6351d1c8f5" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;MacroTranscriber&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;MacroTranscriber&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="301310ca509d88b71bdcbce85bca8484407c855a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;MatchArm&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;MatchArm&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="8ef8dd7b9ee9553c116df71c870c9fe2196820b0" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;MatchArm&lt;/em&gt;&lt;code&gt;=&amp;gt;&lt;/code&gt; ( &lt;a href=&quot;block-expr#block-expressions&quot;&gt;&lt;em&gt;BlockExpression&lt;/em&gt;&lt;/a&gt; | &lt;a href=&quot;../expressions&quot;&gt;&lt;em&gt;Expression&lt;/em&gt;&lt;/a&gt; ) &lt;code&gt;,&lt;/code&gt;&lt;sup&gt;?&lt;/sup&gt;</source>
          <target state="translated">&lt;em&gt;MatchArm &lt;/em&gt; &lt;code&gt;=&amp;gt;&lt;/code&gt; ( &lt;a href=&quot;block-expr#block-expressions&quot;&gt;&lt;em&gt;BlockExpression&lt;/em&gt;&lt;/a&gt; | &lt;a href=&quot;../expressions&quot;&gt;&lt;em&gt;식&lt;/em&gt;&lt;/a&gt; ) &lt;code&gt;,&lt;/code&gt; &lt;sup&gt;?&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="af2a8e7c1bb63707445e68194a98566db9ae9c62" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;MatchArmGuard&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;MatchArmGuard&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="872ab4d9cba4ef81fd6eff181c3df94d111b4c90" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;MatchArmPatterns&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;MatchArmPatterns&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="51d70fe968fee1e7e37c530e278c9f179e55c999" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;MatchArms&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;MatchArms&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="b0dcf9c9f72e6c885154f72e9f84114403538d7f" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;MatchArms&lt;/em&gt;&lt;sup&gt;?&lt;/sup&gt;</source>
          <target state="translated">&lt;em&gt;MatchArms&lt;/em&gt;&lt;sup&gt;?&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="93cef99b84f5880c91ba6132e54cffaa8bb07cb1" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;MatchExpression&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;MatchExpression&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="59546d2d50e5e2644feb3600d82325e80727d837" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;MaybeNamedFunctionParameters&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;MaybeNamedFunctionParameters&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="e3e8698bcc99e08a21191034a6f81b16c183dbab" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;MaybeNamedFunctionParameters&lt;/em&gt; | &lt;em&gt;MaybeNamedFunctionParametersVariadic&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;MaybeNamedFunctionParameters&lt;/em&gt; | &lt;em&gt;아마 명명 된 함수 매개 변수 변수&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="bdf70a1b2c190ce80402e5ed97a8e9f90da84521" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;MaybeNamedFunctionParametersVariadic&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;MaybeNamedFunctionParametersVariadic&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="ec466b5c020581c11646855a10025f8789e4720d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;MaybeNamedParam&lt;/em&gt; ( &lt;code&gt;,&lt;/code&gt;&lt;em&gt;MaybeNamedParam&lt;/em&gt; )&lt;sup&gt;*&lt;/sup&gt;&lt;code&gt;,&lt;/code&gt;&lt;sup&gt;?&lt;/sup&gt;</source>
          <target state="translated">&lt;em&gt;MaybeNamedParam&lt;/em&gt; ( &lt;code&gt;,&lt;/code&gt; &lt;em&gt;MaybeNamedParam&lt;/em&gt; ) &lt;sup&gt;* &lt;/sup&gt; &lt;code&gt;,&lt;/code&gt; &lt;sup&gt;?&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="de8577b4b4d9a6ef30f90cc872d3edd2da01d708" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;MaybeNamedParam&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;MaybeNamedParam&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="a3e31631cab04f772c43505b41bc02828d169566" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Message-passing&lt;/em&gt; concurrency, where channels send messages between threads</source>
          <target state="translated">&lt;em&gt;&lt;/em&gt;채널이 스레드간에 메시지를 보내는 메시지 &lt;em&gt;전달&lt;/em&gt; 동시성</target>
        </trans-unit>
        <trans-unit id="6421221bdae5d3f17103c8797dccdfa396e56c64" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;MetaItem&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;MetaItem&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="cd9d222feeff596ac3ec40241e21471c3875c6ca" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;MetaItem&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;메타 아이템&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="631b2977683a81dc7b858b95988c10709eeca01c" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;MetaItemInner&lt;/em&gt; ( &lt;code&gt;,&lt;/code&gt; MetaItemInner )&lt;sup&gt;*&lt;/sup&gt;&lt;code&gt;,&lt;/code&gt;&lt;sup&gt;?&lt;/sup&gt;</source>
          <target state="translated">&lt;em&gt;MetaItemInner&lt;/em&gt; ( &lt;code&gt;,&lt;/code&gt; MetaItemInner) &lt;sup&gt;* &lt;/sup&gt; &lt;code&gt;,&lt;/code&gt; &lt;sup&gt;?&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="a0a236982f9fe3679818752e8c83dbdada7e61fd" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;MetaItemInner&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;MetaItemInner&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="a46470f7df8921c8404bc47b518414ef4ebe4e99" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;MetaListIdents&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;MetaListIdents&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="9b89767b1e8283ee44c2da2f824ccf3cf13cf9e9" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;MetaListIdents&lt;/em&gt;:</source>
          <target state="translated">&lt;em&gt;MetaListIdents&lt;/em&gt;:</target>
        </trans-unit>
        <trans-unit id="69329eee070eb64bdd8e9ebfd52d7a97bd2bd718" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;MetaListNameValueStr&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;MetaListNameValueStr&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="253f2c53a18a5eb7f5cdbfb33a96efc6d67efb57" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;MetaListNameValueStr&lt;/em&gt;:</source>
          <target state="translated">&lt;em&gt;MetaListNameValueStr&lt;/em&gt;:</target>
        </trans-unit>
        <trans-unit id="525440e46ebe819cb3f49893ee89b9befcb43c78" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;MetaListPaths&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;MetaListPaths&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="623b1dde663ef9f165bf458c94a79025f4f511f9" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;MetaListPaths&lt;/em&gt;:</source>
          <target state="translated">&lt;em&gt;MetaListPaths&lt;/em&gt;:</target>
        </trans-unit>
        <trans-unit id="0d1903ff0a2527be2a0e272eab75174749d6fc10" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;MetaNameValueStr&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;MetaNameValueStr&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b219e52aa36ab2d3868c212bf29298e8f3e03d76" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;MetaNameValueStr&lt;/em&gt;:</source>
          <target state="translated">&lt;em&gt;MetaNameValueStr&lt;/em&gt;:</target>
        </trans-unit>
        <trans-unit id="8dda892455f17857ab98d3e2fac0ec83a1144173" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;MetaSeq&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;MetaSeq&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="3e86baf44bbbc009b1410a0c45820c7a75b171b9" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;MetaWord&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;MetaWord&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="4f27a607b80b63639e5c352b9449a8087cf31209" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;MetaWord&lt;/em&gt;:</source>
          <target state="translated">&lt;em&gt;MetaWord&lt;/em&gt;:</target>
        </trans-unit>
        <trans-unit id="7cc1d093a2803d4f22d129156c7ea0623492edd7" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Method&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;방법&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="116ae302839cf2f314903962433adec3cd7ac223" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;MethodCallExpression&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;MethodCallExpression&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="6d1e1b8c482fe8dac376ede8bea2c4c40be8d75d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Methods&lt;/em&gt; are similar to functions: they&amp;rsquo;re declared with the &lt;code&gt;fn&lt;/code&gt; keyword and their name, they can have parameters and a return value, and they contain some code that is run when they&amp;rsquo;re called from somewhere else. However, methods are different from functions in that they&amp;rsquo;re defined within the context of a struct (or an enum or a trait object, which we cover in Chapters 6 and 17, respectively), and their first parameter is always &lt;code&gt;self&lt;/code&gt;, which represents the instance of the struct the method is being called on.</source>
          <target state="translated">&lt;em&gt;메소드&lt;/em&gt; 는 함수와 유사합니다. &lt;code&gt;fn&lt;/code&gt; 키워드와 이름으로 선언되고 매개 변수와 리턴 값을 가질 수 있으며 다른 곳에서 호출 될 때 실행되는 코드를 포함합니다. 그러나 메소드는 구조체 (또는 6 장과 17 장에서 각각 열거하는 열거 형 또는 특성 객체)의 컨텍스트 내에서 정의되며 함수의 첫 번째 매개 변수는 항상 &lt;code&gt;self&lt;/code&gt; 입니다 . 메소드가 호출되는 구조체의 인스턴스</target>
        </trans-unit>
        <trans-unit id="02da3ae59b83d41fac0ece7c0e674a6453dd1a2b" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Module&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;Module&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="12a97132963c0e60bc212205136da7166461dc92" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Module&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;모듈&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="83b4121f259948e1d6bf06a38eadea9b08bfc769" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Modules&lt;/em&gt; let us organize code within a crate into groups for readability and easy reuse. Modules also control the &lt;em&gt;privacy&lt;/em&gt; of items, which is whether an item can be used by outside code (&lt;em&gt;public&lt;/em&gt;) or is an internal implementation detail and not available for outside use (&lt;em&gt;private&lt;/em&gt;).</source>
          <target state="translated">&lt;em&gt;모듈을 사용&lt;/em&gt; 하면 상자 안에있는 코드를 그룹으로 구성하여 쉽게 읽을 수 있고 쉽게 재사용 할 수 있습니다. 모듈은 또한 아이템 의 &lt;em&gt;프라이버시&lt;/em&gt; 를 제어하는데 , 이는 아이템이 외부 코드에 의해 사용될 수 있는지 ( &lt;em&gt;public&lt;/em&gt; ) 또는 내부 구현 세부 사항이며 외부에서 사용할 수 없는지 ( &lt;em&gt;private&lt;/em&gt; ) 여부입니다.</target>
        </trans-unit>
        <trans-unit id="2795bcf66d84e6f66e4e78f1f52e5e397edb297a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Mutex&lt;/em&gt; is an abbreviation for &lt;em&gt;mutual exclusion&lt;/em&gt;, as in, a mutex allows only one thread to access some data at any given time. To access the data in a mutex, a thread must first signal that it wants access by asking to acquire the mutex&amp;rsquo;s &lt;em&gt;lock&lt;/em&gt;. The lock is a data structure that is part of the mutex that keeps track of who currently has exclusive access to the data. Therefore, the mutex is described as &lt;em&gt;guarding&lt;/em&gt; the data it holds via the locking system.</source>
          <target state="translated">&lt;em&gt;뮤텍스&lt;/em&gt; 는 &lt;em&gt;상호 배제&lt;/em&gt; 의 약자입니다 . 뮤텍스는 하나의 스레드 만 주어진 시간에 일부 데이터에 액세스 할 수 있도록 허용합니다. 뮤텍스의 데이터에 액세스하려면 스레드는 먼저 뮤텍스의 &lt;em&gt;잠금&lt;/em&gt; 을 획득하도록 요청하여 액세스를 원한다는 신호를 보내야합니다 . 잠금은 현재 데이터에 독점적으로 액세스 할 수있는 사람을 추적하는 뮤텍스의 일부인 데이터 구조입니다. 따라서 뮤텍스는 잠금 시스템을 통해 보유한 데이터 를 &lt;em&gt;보호&lt;/em&gt; 하는 것으로 설명됩니다 .</target>
        </trans-unit>
        <trans-unit id="c141f34947bfe55e1f46d1e448bdd473c2e41277" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;NamedFunctionParam&lt;/em&gt; ( &lt;code&gt;,&lt;/code&gt;&lt;em&gt;NamedFunctionParam&lt;/em&gt; )&lt;sup&gt;*&lt;/sup&gt;&lt;code&gt;,&lt;/code&gt;&lt;sup&gt;?&lt;/sup&gt;</source>
          <target state="translated">&lt;em&gt;NamedFunctionParam&lt;/em&gt; ( &lt;code&gt;,&lt;/code&gt; &lt;em&gt;NamedFunctionParam&lt;/em&gt; ) &lt;sup&gt;* &lt;/sup&gt; &lt;code&gt;,&lt;/code&gt; &lt;sup&gt;?&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="177e1ec2a1a343f8b157386f08366b0643b92099" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;NamedFunctionParam&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;명명 된 함수 매개 변수&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="9c1536bd5b283e57a048ae939494854cc91bcee5" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;NamedFunctionParameters&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;NamedFunctionParameters&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="efc20863a7794bc34aebfc1e0f3ff83907a77f44" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;NamedFunctionParametersWithVariadics&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;변수가있는 명명 된 기능 매개 변수&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="209ca2070cdd0548a6ec072ee0f642ab57d0d9b0" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;NegationExpression&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;부정 표현&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="85373d9d19e2d5e6a72b0d46955723308c982fbc" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;NeverType&lt;/em&gt; : &lt;code&gt;!&lt;/code&gt;</source>
          <target state="translated">&lt;em&gt;NeverType&lt;/em&gt; : &lt;code&gt;!&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c4a7de36936293c2079a21203197e69abd8fdff0" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Non-capturing closures&lt;/em&gt; are closures that don't capture anything from their environment. They can be coerced to function pointers (&lt;code&gt;fn&lt;/code&gt;) with the matching signature.</source>
          <target state="translated">&lt;em&gt;비 캡처 클로저&lt;/em&gt; 는 환경에서 어떤 것도 캡처하지 않는 클로저입니다. 일치하는 서명 으로 함수 포인터 ( &lt;code&gt;fn&lt;/code&gt; ) 로 강제 변환 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="4dd380afc1048d6388f700be958b8b6c54432a25" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Non-reference patterns&lt;/em&gt; include all patterns except bindings, &lt;a href=&quot;patterns#wildcard-pattern&quot;&gt;wildcard patterns&lt;/a&gt; (&lt;code&gt;_&lt;/code&gt;), &lt;a href=&quot;patterns#path-patterns&quot;&gt;&lt;code&gt;const&lt;/code&gt; patterns&lt;/a&gt; of reference types, and &lt;a href=&quot;patterns#reference-patterns&quot;&gt;reference patterns&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;비 참조 패턴&lt;/em&gt; 에는 바인딩, &lt;a href=&quot;patterns#wildcard-pattern&quot;&gt;와일드 카드 패턴&lt;/a&gt; ( &lt;code&gt;_&lt;/code&gt; ), 참조 유형의 &lt;a href=&quot;patterns#path-patterns&quot;&gt; &lt;code&gt;const&lt;/code&gt; 패턴&lt;/a&gt; 및 &lt;a href=&quot;patterns#reference-patterns&quot;&gt;참조 패턴을&lt;/a&gt; 제외한 모든 &lt;em&gt;패턴이&lt;/em&gt; 포함됩니다 .</target>
        </trans-unit>
        <trans-unit id="c87699403d42475f0b497d21fa62cf5035ebcee2" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Note: The actual definition of &lt;a href=&quot;../io/trait.write&quot;&gt;&lt;code&gt;Write&lt;/code&gt;&lt;/a&gt; uses &lt;a href=&quot;../io/type.result&quot;&gt;&lt;code&gt;io::Result&lt;/code&gt;&lt;/a&gt;, which is just a synonym for &lt;a href=&quot;enum.result&quot;&gt;&lt;code&gt;Result&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&amp;lt;T, &lt;/code&gt;&lt;a href=&quot;../io/struct.error&quot;&gt;&lt;code&gt;io::Error&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&amp;gt;&lt;/code&gt;.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;참고 : 실제 &lt;a href=&quot;../io/trait.write&quot;&gt; &lt;code&gt;Write&lt;/code&gt; &lt;/a&gt; 정의 는 &lt;a href=&quot;../io/type.result&quot;&gt; &lt;code&gt;io::Result&lt;/code&gt; &lt;/a&gt; 사용합니다 . 이는 &lt;a href=&quot;enum.result&quot;&gt; &lt;code&gt;Result&lt;/code&gt; &lt;/a&gt; &lt;code&gt;&amp;lt;T, &lt;/code&gt; &lt;a href=&quot;../io/struct.error&quot;&gt; &lt;code&gt;io::Error&lt;/code&gt; &lt;/a&gt; &lt;code&gt;&amp;gt;&lt;/code&gt; 의 동의어입니다 .&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="70b104ca519b1781e89b16883d9ec4abee1ce28d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Note&lt;/em&gt;: Currently, no overflow checking is done for the &lt;a href=&quot;../iter/trait.intoiterator&quot;&gt;&lt;code&gt;Iterator&lt;/code&gt;&lt;/a&gt; implementation; if you use an integer range and the integer overflows, it might panic in debug mode or create an endless loop in release mode. &lt;strong&gt;This overflow behavior might change in the future.&lt;/strong&gt;</source>
          <target state="translated">&lt;em&gt;참고&lt;/em&gt; : 현재 &lt;a href=&quot;../iter/trait.intoiterator&quot;&gt; &lt;code&gt;Iterator&lt;/code&gt; &lt;/a&gt; 구현 에서는 오버 플로우 검사가 수행되지 않습니다 . 정수 범위를 사용하고 정수 오버플로가 발생하면 디버그 모드에서 패닉이 발생하거나 릴리스 모드에서 무한 루프가 생성 될 수 있습니다. &lt;strong&gt;이 오버플로 동작은 나중에 변경 될 수 있습니다.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1e802f553e220dd18bf4818941d72e6a9dc76bc2" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;OperatorExpression&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;운영 자식&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="707bdb59efd6df1d04ef0a97e7761ae6368376ae" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;OuterAttribute&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;OuterAttribute&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="61f4c3add2cbf87a1ebb0e51006bbc38d76a9f38" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;OuterAttribute&lt;/em&gt;&lt;sup&gt;*&lt;/sup&gt;</source>
          <target state="translated">&lt;em&gt;OuterAttribute&lt;/em&gt;&lt;sup&gt;*&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="6fbb1da1d7470d11a25428cf31c46f6a27063b7f" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;ParenthesizedType&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;ParenthesizedType&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="8b7acc2936472747aad080689d7ab467ef52624a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;ParenthesizedType&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;괄호로 묶은 유형&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="e44566e2561c2eb7a6760edc74d9f4edecae92f5" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Path patterns&lt;/em&gt; are patterns that refer either to constant values or to structs or enum variants that have no fields.</source>
          <target state="translated">&lt;em&gt;경로 패턴&lt;/em&gt; 은 상수 값 또는 필드가없는 구조체 또는 열거 형 변형을 참조하는 패턴입니다.</target>
        </trans-unit>
        <trans-unit id="9bcee4bd86adf42333cbfbdb5021dc5e4de35bfd" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;PathExprSegment&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;PathExprSegment&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="6866344cc2c77f90134a1e4d8664a91ddb6a1e6c" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;PathExpression&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;PathExpression&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="3b21ff3120356d5734116a476d3f58af846cfa68" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;PathIdentSegment&lt;/em&gt; (&lt;code&gt;::&lt;/code&gt;&lt;em&gt;GenericArgs&lt;/em&gt;)&lt;sup&gt;?&lt;/sup&gt;</source>
          <target state="translated">&lt;em&gt;PathIdentSegment&lt;/em&gt; ( &lt;code&gt;::&lt;/code&gt; &lt;em&gt;GenericArgs&lt;/em&gt; ) &lt;sup&gt;?&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="4f2ab1dc66ffbe80c3e3eb05499904b9752b616b" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;PathIdentSegment&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;PathIdentSegment&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="519c591d68e404044ea856e26adda836058be072" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;PathIdentSegment&lt;/em&gt;&lt;code&gt;::&lt;/code&gt;&lt;sup&gt;?&lt;/sup&gt; (&lt;a href=&quot;paths#paths-in-expressions&quot;&gt;&lt;em&gt;GenericArgs&lt;/em&gt;&lt;/a&gt; | &lt;em&gt;TypePathFn&lt;/em&gt;)&lt;sup&gt;?&lt;/sup&gt;</source>
          <target state="translated">&lt;em&gt;PathIdentSegment &lt;/em&gt; &lt;code&gt;::&lt;/code&gt; &lt;sup&gt;? &lt;/sup&gt;( &lt;a href=&quot;paths#paths-in-expressions&quot;&gt;&lt;em&gt;GenericArgs&lt;/em&gt;&lt;/a&gt; | &lt;em&gt;TypePathFn&lt;/em&gt; ) &lt;sup&gt;?&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="2fae05622c303c1d4eccd9ca25430d9d32917508" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;PathInExpression&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;PathInExpression&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="3de904317f4b7c125296f50803a5214ebd2270a5" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;PathInExpression&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;PathInExpression&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="8cb7cab543206666211bb802cc27b3ce29047765" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;PathPattern&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;PathPattern&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="655915425e7447753811d878f0caf9ea904e20d7" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Pattern&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;패턴&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="6ea4d82b3bba42a2dc742d0b085995b0ec2a5047" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;PredicateLoopExpression&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;술어 루프 표현&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="d3cd25c56d27f14b1134b4e294f89b2590b57963" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Procedural macros&lt;/em&gt; allow creating syntax extensions as execution of a function. Procedural macros come in one of three flavors:</source>
          <target state="translated">&lt;em&gt;절차 적 매크로를&lt;/em&gt; 사용하면 함수 실행으로 구문 확장을 만들 수 있습니다. 절차 적 매크로는 세 가지 맛 중 하나입니다.</target>
        </trans-unit>
        <trans-unit id="b72a8031347aaf18a58618d59af907d6c8eb9013" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;QualifiedPathInExpression&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;QualifiedPathInExpression&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="77fb3b42cb3dd1ced63e0329de85c328c846330d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;QualifiedPathInType&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;QualifiedPathInType&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="8c80a51014e86782790035357c12fab1f5ffdba3" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;QualifiedPathType&lt;/em&gt; (&lt;code&gt;::&lt;/code&gt;&lt;em&gt;PathExprSegment&lt;/em&gt;)&lt;sup&gt;+&lt;/sup&gt;</source>
          <target state="translated">&lt;em&gt;QualifiedPathType&lt;/em&gt; ( &lt;code&gt;::&lt;/code&gt; &lt;em&gt;PathExprSegment&lt;/em&gt; ) &lt;sup&gt;+&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="04f0ea3553ecb7b0b5c8b2bef5c9d0d391a2da64" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;QualifiedPathType&lt;/em&gt; (&lt;code&gt;::&lt;/code&gt;&lt;em&gt;TypePathSegment&lt;/em&gt;)&lt;sup&gt;+&lt;/sup&gt;</source>
          <target state="translated">&lt;em&gt;QualifiedPathType&lt;/em&gt; ( &lt;code&gt;::&lt;/code&gt; &lt;em&gt;TypePathSegment&lt;/em&gt; ) &lt;sup&gt;+&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="4c26401cc9a8056bf9b2a2a79e730a48613992d0" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;QualifiedPathType&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;QualifiedPathType&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="135a398a47f9295958865e188f2406e097785d05" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;RangeExpr&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;RangeExpr&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="f7a9f296c9a093396885dfd5991001d600043f24" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;RangeExpr&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;RangeExpr&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="3e653b374c01c7c5dec8665cf4b6535aa5c5e1de" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;RangeExpression&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;RangeExpression&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="920b763f29d5ca056654f00f7ffa9c69fe46209a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;RangeFromExpr&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;RangeFromExpr&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="ea2f802e68ac2369c7598af82179afc86b1e0b6e" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;RangeFromExpr&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;RangeFromExpr&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="363671b9548fb436fda9c9b87cba616cf37f641b" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;RangeFullExpr&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;RangeFullExpr&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="85f26367c428a460c7b8099c16615e492b299ee1" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;RangeFullExpr&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;RangeFullExpr&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="126c1a4b65ea9632a7efbfb0fe1c9a1d350f463b" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;RangeInclusiveExpr&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;RangeInclusiveExpr&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="19898a1d631dc21ba75a2493d9f0afca74a49f53" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;RangeInclusiveExpr&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;RangeInclusiveExpr&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="0a1c66b8f9a46931d432ab8cd938cd1959062e1f" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;RangePattern&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;RangePattern&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="9c16f86e2eb7ae21d849c20b2a94807de0634de8" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;RangePatternBound&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;RangePatternBound&lt;/em&gt; : 범위 패턴</target>
        </trans-unit>
        <trans-unit id="73bf4ee3f8f843c79f33f8120c7889ebeb1f871d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;RangePatternBound&lt;/em&gt;&lt;code&gt;..=&lt;/code&gt;&lt;em&gt;RangePatternBound&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;RangePatternBound&lt;/em&gt;&lt;code&gt;..=&lt;/code&gt;&lt;em&gt;RangePatternBound&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b91cce69b109a1113c0f1301b3921f6c0d8c9841" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;RangeToExpr&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;RangeToExpr&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="056f04414a6072c6d8a7d5278b753371763d0866" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;RangeToExpr&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;RangeToExpr&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="c0a3c68e83ea112500ca6f8241341ce0c95b83e8" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;RangeToInclusiveExpr&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;RangeToInclusiveExpr&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="48d09923603391e16f14398b177229e34d2e4358" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;RangeToInclusiveExpr&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;RangeToInclusiveExpr&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="122d0ec9354f5c94b472176c44d7a71f69f7003b" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Raw identifiers&lt;/em&gt; are the syntax that lets you use keywords where they wouldn&amp;rsquo;t normally be allowed. You use a raw identifier by prefixing a keyword with &lt;code&gt;r#&lt;/code&gt;.</source>
          <target state="translated">&lt;em&gt;원시 식별자&lt;/em&gt; 는 일반적으로 허용되지 않는 키워드를 사용할 수있는 구문입니다. 키워드 앞에 &lt;code&gt;r#&lt;/code&gt; 을 붙여서 원시 식별자를 사용합니다 .</target>
        </trans-unit>
        <trans-unit id="beb7fd319e09e40c039ed0e647571be692b1855c" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;RawPointerType&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;RawPointerType&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="bbdab98148adb37f1fd44c8053155f959bcbd95a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;ReferencePattern&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;참조 패턴&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="395e4a70cb5a7f0d9cf660245c9441944ed4492a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;ReferenceType&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;ReferenceType&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="009634e33886b0d3afe59323b0dfb20337a5713e" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;ReturnExpression&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;ReturnExpression&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="6995779224fa4b3c0e17b2c0a7c11e16c2d79815" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;See &lt;a href=&quot;../unsafe-blocks&quot;&gt;&lt;code&gt;unsafe&lt;/code&gt; block&lt;/a&gt; for more information on when to use &lt;code&gt;unsafe&lt;/code&gt;&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;참조 &lt;a href=&quot;../unsafe-blocks&quot;&gt; &lt;code&gt;unsafe&lt;/code&gt; 블록을&lt;/a&gt; 사용하는 경우에 대한 자세한 내용은 &lt;code&gt;unsafe&lt;/code&gt; &lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="ab791639c0e3785d063efb8b6c7566c0199d057f" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;See also the function &lt;a href=&quot;fn.set_alloc_error_hook&quot;&gt;&lt;code&gt;set_alloc_error_hook&lt;/code&gt;&lt;/a&gt;.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;a href=&quot;fn.set_alloc_error_hook&quot;&gt; &lt;code&gt;set_alloc_error_hook&lt;/code&gt; &lt;/a&gt; 함수도 참조하십시오 .&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="5813e441679317ceb3a63f6e1a90700dbc6169a3" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;See also the function &lt;a href=&quot;fn.set_hook&quot;&gt;&lt;code&gt;set_hook&lt;/code&gt;&lt;/a&gt;.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;a href=&quot;fn.set_hook&quot;&gt; &lt;code&gt;set_hook&lt;/code&gt; &lt;/a&gt; 함수도 참조하십시오 .&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d97539b5ffa0ef84ac1570d65777c1c03aa27113" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;See also the traits &lt;a href=&quot;ops/trait.fn&quot;&gt;&lt;code&gt;Fn&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;ops/trait.fnmut&quot;&gt;&lt;code&gt;FnMut&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;ops/trait.fnonce&quot;&gt;&lt;code&gt;FnOnce&lt;/code&gt;&lt;/a&gt;.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;a href=&quot;ops/trait.fn&quot;&gt; &lt;code&gt;Fn&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;ops/trait.fnmut&quot;&gt; &lt;code&gt;FnMut&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;ops/trait.fnonce&quot;&gt; &lt;code&gt;FnOnce&lt;/code&gt; &lt;/a&gt; 특성도 참조하십시오 .&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="42d2d11002016447d13712109a6707c15283f050" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;See the &lt;a href=&quot;index&quot;&gt;&lt;code&gt;pin&lt;/code&gt; module&lt;/a&gt; documentation for an explanation of pinning.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;고정에 대한 설명은 &lt;a href=&quot;index&quot;&gt; &lt;code&gt;pin&lt;/code&gt; 모듈&lt;/a&gt; 설명서를 참조하십시오 .&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="5438bca624c396667e7b6deac3c984f7f2e82c10" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;SelfParam&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;셀프 파람&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="db4af228731279d394e3046af1d9e82aa1512ac3" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Shared-state&lt;/em&gt; concurrency, where multiple threads have access to some piece of data</source>
          <target state="translated">&lt;em&gt;공유 상태&lt;/em&gt;여러 스레드가 일부 데이터에 액세스 할 수있는 동시성</target>
        </trans-unit>
        <trans-unit id="d92f6128170d5621eab7e2ceb2d70a694ce8c6db" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;SimplePath&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;SimplePath&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="0b742875ad3c0b5a35438c2af92edfd0de93ba9d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;SimplePath&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;SimplePath&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="68150a373debcb76a880319decd58fb043d731d6" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;SimplePathSegment&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;SimplePathSegment&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="0324cd3da292de895d59cdae2cacefbad3e79e47" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;SlicePattern&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;슬라이스 패턴&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="96410cd37f6f4dea7c598221484d3b2edd47c848" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;SliceType&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;슬라이스 유형&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="8ff80eb69934e90a9bfaaff015c59b5ca994b9a7" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Smart pointers&lt;/em&gt;, on the other hand, are data structures that not only act like a pointer but also have additional metadata and capabilities. The concept of smart pointers isn&amp;rsquo;t unique to Rust: smart pointers originated in C++ and exist in other languages as well. In Rust, the different smart pointers defined in the standard library provide functionality beyond that provided by references. One example that we&amp;rsquo;ll explore in this chapter is the &lt;em&gt;reference counting&lt;/em&gt; smart pointer type. This pointer enables you to have multiple owners of data by keeping track of the number of owners and, when no owners remain, cleaning up the data.</source>
          <target state="translated">&lt;em&gt;&lt;/em&gt;반면에 &lt;em&gt;스마트 포인터&lt;/em&gt; 는 포인터처럼 작동 할뿐만 아니라 추가 메타 데이터와 기능이있는 데이터 구조입니다. 스마트 포인터의 개념은 Rust 고유의 개념이 아닙니다. 스마트 포인터는 C ++에서 시작되었으며 다른 언어에서도 존재합니다. Rust에서 표준 라이브러리에 정의 된 다양한 스마트 포인터는 참조에서 제공하는 것 이상의 기능을 제공합니다. 이 장에서 살펴볼 한 가지 예는 &lt;em&gt;참조 카운팅&lt;/em&gt; 스마트 포인터 유형입니다. 이 포인터를 사용하면 소유자 수를 추적하고 소유자가없는 경우 데이터를 정리하여 여러 데이터 소유자를 가질 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="253b660cc8be4465d9b8ddd37b6607dc6b51ea77" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Statement&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;성명&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="26a623aabcd120adedebbfc207e47e8c9cfe6dbc" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Statements&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;성명서&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="f461b10420ba8e20055ecc8b1a33e58f3b5ee363" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Statements&lt;/em&gt;&lt;sup&gt;?&lt;/sup&gt;</source>
          <target state="translated">&lt;em&gt;Statements&lt;/em&gt;&lt;sup&gt;?&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="7ebdfb0ba3d68cd6c1c0c7c808149dc0f3e08735" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;StaticItem&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;정적 항목&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="d8f8c4e4ebe6a1807a58735dd36e3530ebfc7941" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Struct&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;구조&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="52de2279345f8eaf6d3b9e9c7795289b76503d5a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;StructBase&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;StructBase&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="3e68420d222a81975d88531202a554741fffad0f" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;StructExprField&lt;/em&gt; (&lt;code&gt;,&lt;/code&gt;&lt;em&gt;StructExprField&lt;/em&gt;)&lt;sup&gt;*&lt;/sup&gt; (&lt;code&gt;,&lt;/code&gt;&lt;em&gt;StructBase&lt;/em&gt; | &lt;code&gt;,&lt;/code&gt;&lt;sup&gt;?&lt;/sup&gt;)</source>
          <target state="translated">&lt;em&gt;StructExprField&lt;/em&gt; ( &lt;code&gt;,&lt;/code&gt; &lt;em&gt;StructExprField&lt;/em&gt; ) &lt;sup&gt;*&lt;/sup&gt; ( &lt;code&gt;,&lt;/code&gt; &lt;em&gt;StructBase&lt;/em&gt; | &lt;code&gt;,&lt;/code&gt; &lt;sup&gt;?&lt;/sup&gt; )</target>
        </trans-unit>
        <trans-unit id="ba0ff6935d6ae7e74f48961a1cc8ea925fb0432a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;StructExprField&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;StructExprField&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="524c2b5dba514f3a256359d4d6e99a80046aee79" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;StructExprFields&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;StructExprFields&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="1c7ac038df32af7bf2bedcfcebd8fee418a53e36" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;StructExprStruct&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;StructExprStruct&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="95f24431f7f433e9b111cdeb800975e2c6e55d0c" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;StructExprStruct&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;StructExprStruct&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="6de6378cef86647803576068cd25d307bc2350b9" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;StructExprTuple&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;StructExprTuple&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="61ababa832b8ff99e7349a379374adddff95127a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;StructExprUnit&lt;/em&gt; : &lt;a href=&quot;../paths#paths-in-expressions&quot;&gt;&lt;em&gt;PathInExpression&lt;/em&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;em&gt;StructExprUnit&lt;/em&gt; : &lt;a href=&quot;../paths#paths-in-expressions&quot;&gt;&lt;em&gt;PathInExpression&lt;/em&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="92355bdddc574903ee30863a71b7025c51d74961" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;StructExpression&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;StructExpression&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="566e949e4f05b2c3cfb42ec91c7ec84804cfcce4" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;StructField&lt;/em&gt; (&lt;code&gt;,&lt;/code&gt;&lt;em&gt;StructField&lt;/em&gt;)&lt;sup&gt;*&lt;/sup&gt;&lt;code&gt;,&lt;/code&gt;&lt;sup&gt;?&lt;/sup&gt;</source>
          <target state="translated">&lt;em&gt;StructField&lt;/em&gt; ( &lt;code&gt;,&lt;/code&gt; &lt;em&gt;StructField&lt;/em&gt; ) &lt;sup&gt;* &lt;/sup&gt; &lt;code&gt;,&lt;/code&gt; &lt;sup&gt;?&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="9a81102e1c82570d28ba1ed11e2d83d0367aef8a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;StructField&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;StructField&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="b287480750338275a7af1d6a5b7aad82bb060b6a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;StructFields&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;StructFields&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="2bc73189662b63d3361c96b56002244624e69b6d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;StructPattern&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;StructPattern&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="210e692a7c3e16c9edf54f6c2392a561a1618c7f" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;StructPatternElements&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;StructPatternElements&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="39d6ef08ece264673dc6b967b150bae385d05b06" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;StructPatternElements&lt;/em&gt;&lt;sup&gt;?&lt;/sup&gt;</source>
          <target state="translated">&lt;em&gt;StructPatternElements&lt;/em&gt;&lt;sup&gt;?&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="238986fb7c84a86b855335c64191a4e00b6cbb02" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;StructPatternEtCetera&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;StructPatternEtCetera&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="dbf37477a9316ac6d3b788abc2dc349da0d57a12" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;StructPatternField&lt;/em&gt; (&lt;code&gt;,&lt;/code&gt;&lt;em&gt;StructPatternField&lt;/em&gt;) &lt;sup&gt;*&lt;/sup&gt;</source>
          <target state="translated">&lt;em&gt;StructPatternField&lt;/em&gt; ( &lt;code&gt;,&lt;/code&gt; &lt;em&gt;StructPatternField&lt;/em&gt; )&lt;sup&gt; *&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="9f596823fc1b43f97ed24051c4fd4ebb4203a65d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;StructPatternField&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;StructPatternField&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="f4a10981df34d23c369c9a6a0648c68dcbf8aaae" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;StructPatternFields&lt;/em&gt; (&lt;code&gt;,&lt;/code&gt; | &lt;code&gt;,&lt;/code&gt;&lt;em&gt;StructPatternEtCetera&lt;/em&gt;)&lt;sup&gt;?&lt;/sup&gt;</source>
          <target state="translated">&lt;em&gt;StructPatternFields&lt;/em&gt; ( &lt;code&gt;,&lt;/code&gt; | &lt;code&gt;,&lt;/code&gt; &lt;em&gt;StructPatternEtCetera&lt;/em&gt; ) &lt;sup&gt;?&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="fccf1153a8be4b68ce951da35c0661394670ab0f" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;StructPatternFields&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;StructPatternFields&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="37314f8f642d31d4e4564ef3ba2e2309e3e2d3a8" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;StructStruct&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;StructStruct&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="30c3ada6c51caeba99cd9d386f477d7aeaf83b53" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;StructStruct&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;StructStruct&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="697dfdce9bf3d9b41f94517d0194ddf489983e3a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;This trait (&lt;code&gt;Fn&lt;/code&gt;) is not to be confused with &lt;a href=&quot;../primitive.fn&quot;&gt;function pointers&lt;/a&gt; (&lt;code&gt;fn&lt;/code&gt;).&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;이 특성 ( &lt;code&gt;Fn&lt;/code&gt; )을 &lt;a href=&quot;../primitive.fn&quot;&gt;함수 포인터&lt;/a&gt; ( &lt;code&gt;fn&lt;/code&gt; ) 와 혼동하지 마십시오 .&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="91d944359a1bf8307d79c422c78262d9c0aec213" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;TokenTree&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;토큰 트리&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="2017c51c85a49d1a852c3fbcde11cec60a9770fa" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Trait&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;특성&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="8f1b04dca43b7cfc7c69bb4af366545ceb5cac93" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;TraitBound&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;TraitBound&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="69592ca3ff1513e3be0359c2d1e9d62b068f9cfd" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;TraitConst&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;TraitConst&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="97642c40f2a81ad79da9dd23372db0cae60029dd" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;TraitFunc&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;TraitFunc&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="2bff8c8b32dfde9becdad8eae0c57efb0b637ebc" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;TraitFunc&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;TraitFunc&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="ccb6375dd90976afd53f0381f82559e851230993" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;TraitFunctionDecl&lt;/em&gt; ( &lt;code&gt;;&lt;/code&gt; | &lt;a href=&quot;../expressions/block-expr&quot;&gt;&lt;em&gt;BlockExpression&lt;/em&gt;&lt;/a&gt; )</source>
          <target state="translated">&lt;em&gt;TraitFunctionDecl&lt;/em&gt; ( &lt;code&gt;;&lt;/code&gt; | &lt;a href=&quot;../expressions/block-expr&quot;&gt;&lt;em&gt;BlockExpression&lt;/em&gt;&lt;/a&gt; )</target>
        </trans-unit>
        <trans-unit id="a8860991019f8c63d82dc67b054c4a0c9a23a4f1" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;TraitFunctionDecl&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;TraitFunctionDecl&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="1edaa550e25dd7fde1873d474f96d031a4017cbd" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;TraitFunctionParam&lt;/em&gt; (&lt;code&gt;,&lt;/code&gt;&lt;em&gt;TraitFunctionParam&lt;/em&gt;)&lt;sup&gt;*&lt;/sup&gt;&lt;code&gt;,&lt;/code&gt;&lt;sup&gt;?&lt;/sup&gt;</source>
          <target state="translated">&lt;em&gt;TraitFunctionParam&lt;/em&gt; ( &lt;code&gt;,&lt;/code&gt; &lt;em&gt;TraitFunctionParam&lt;/em&gt; ) &lt;sup&gt;* &lt;/sup&gt; &lt;code&gt;,&lt;/code&gt; &lt;sup&gt; ?&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="06d10b607e829541bf1f81fd98aab71758f19f48" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;TraitFunctionParam&lt;/em&gt;&lt;sup&gt;&lt;a href=&quot;traits#parameter-patterns&quot;&gt;&amp;dagger;&lt;/a&gt;&lt;/sup&gt; :</source>
          <target state="translated">&lt;em&gt;TraitFunctionParam &lt;/em&gt;&lt;sup&gt;&lt;a href=&quot;traits#parameter-patterns&quot;&gt;&amp;dagger;&lt;/a&gt;&lt;/sup&gt; :</target>
        </trans-unit>
        <trans-unit id="a304cd39ecff7dfdf794e47ad36c15dfbbc30542" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;TraitFunctionParameters&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;TraitFunctionParameters&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="75defe812406ddb68a95aeda39c25e43d70aa012" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;TraitImpl&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;특성&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="c39bd3ba05d7bf507ec884d8e1702a2c0b69c5b0" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;TraitImplItem&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;TraitImplItem&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="e93aaffcb29c8c74184121078f4b21b7c5416378" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;TraitImplItem&lt;/em&gt;&lt;sup&gt;*&lt;/sup&gt;</source>
          <target state="translated">&lt;em&gt;TraitImplItem&lt;/em&gt;&lt;sup&gt;*&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="9615e2378bf81154c725f2b3d137b61337d67b8e" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;TraitItem&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;품목&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="c432af0ce759fb8a417605aca32e642204b833dd" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;TraitItem&lt;/em&gt;&lt;sup&gt;*&lt;/sup&gt;</source>
          <target state="translated">&lt;em&gt;TraitItem&lt;/em&gt;&lt;sup&gt;*&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="bf4c27a989d13969f392dc056bde2eb918b684f2" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;TraitMethod&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;특성 방법&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="791b15e5455d4a95a0273c137120e140492b3e97" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;TraitMethodDecl&lt;/em&gt; ( &lt;code&gt;;&lt;/code&gt; | &lt;a href=&quot;../expressions/block-expr&quot;&gt;&lt;em&gt;BlockExpression&lt;/em&gt;&lt;/a&gt; )</source>
          <target state="translated">&lt;em&gt;TraitMethodDecl&lt;/em&gt; ( &lt;code&gt;;&lt;/code&gt; | &lt;a href=&quot;../expressions/block-expr&quot;&gt;&lt;em&gt;BlockExpression&lt;/em&gt;&lt;/a&gt; )</target>
        </trans-unit>
        <trans-unit id="23e30546f4c27238213b7a7d90d7983989fd08a0" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;TraitMethodDecl&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;TraitMethodDecl&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="f845415b3371af4a9129112e68d3ca8790ac2c2f" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;TraitObjectType&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;TraitObjectType&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="559a479177d1c18edecb461b5ab5dafaa0b24a60" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;TraitObjectTypeOneBound&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;TraitObjectTypeOneBound&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="00367738ee72462454e7cefc5497751d3b2dd2d8" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;TraitType&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;특성 유형&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="88fb9e46d8f66f4eefea0a0d09b786fb08ff77bb" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;TupleElements&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;튜플 요소&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="82ca008d064e6f22f73764cbb41705b3661743c0" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;TupleExpression&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;TupleExpression&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="b2be422d56678c4beb25054bbb013f90df3f36ad" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;TupleField&lt;/em&gt; (&lt;code&gt;,&lt;/code&gt;&lt;em&gt;TupleField&lt;/em&gt;)&lt;sup&gt;*&lt;/sup&gt;&lt;code&gt;,&lt;/code&gt;&lt;sup&gt;?&lt;/sup&gt;</source>
          <target state="translated">&lt;em&gt;TupleField&lt;/em&gt; ( &lt;code&gt;,&lt;/code&gt; &lt;em&gt;TupleField&lt;/em&gt; ) &lt;sup&gt;* &lt;/sup&gt; &lt;code&gt;,&lt;/code&gt; &lt;sup&gt;?&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="d1964c69c34169ddb45c023b8f6ad7804e8784a9" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;TupleField&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;튜플 필드&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="7f2fc45439a6ac05238e8033d3cafbac51cca003" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;TupleFields&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;튜플 필드&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="8b561f8148edf91fc8ceba4d6d7f08151b328e44" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;TupleIndexingExpression&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;TupleIndexingExpression&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="82636c0586552b7db7833ce549c8c2fee23bca69" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;TuplePattern&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;튜플 패턴&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="28bab88d51b0299abc9e03fea50716b7fc4cb76e" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;TuplePatternItems&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;TuplePatternItems&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="63a42f8cc9d12ee22bbd928872038e51b2e84a96" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;TupleStruct&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;튜플 구조&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="55b0f11f035f5785aec4eee7a34e3cd60a0b8788" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;TupleStructItems&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;TupleStructItems&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="e626c4062aed9330f99f19598396153bc65ab2c4" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;TupleStructPattern&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;TupleStructPattern&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="b0af4e3e1c043681b4e7e98dd6f497431ff99f36" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;TupleType&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;튜플 유형&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="36197e9dcc19894ea01b3a33c74db9be233fa5b2" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Type&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;Type&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="acb7cfdb169b01b2056fd4b70ce695b6dce975ab" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Type&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;유형&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="6580f30f2fbb91f0c202a16b5526ebec104ef496" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;TypeAlias&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;TypeAlias&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="a85ec990c24c83498baea143d931c7990a230d47" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;TypeBoundWhereClauseItem&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;TypeBoundWhereClauseItem&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="cee61c431d57aafff44991227e4c69fe1cdf53de" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;TypeCastExpression&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;TypeCastExpression&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="f1cd8e81e1617639d66de79aea2715d0ace7acad" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;TypeNoBounds&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;TypeNoBounds&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="5424aab74d0d2fe39cdbd91f014de769d880a226" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;TypeNoBounds&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;TypeNoBounds&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="5d9c8a26eb599b91e226d0a8bce641cb0ac7132f" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;TypeParam&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;TypeParam&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="80fe390e286fbce96ff6498e206bd07fcdb725b3" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;TypeParamBound&lt;/em&gt; ( &lt;code&gt;+&lt;/code&gt;&lt;em&gt;TypeParamBound&lt;/em&gt; )&lt;sup&gt;*&lt;/sup&gt;&lt;code&gt;+&lt;/code&gt;&lt;sup&gt;?&lt;/sup&gt;</source>
          <target state="translated">&lt;em&gt;TypeParamBound&lt;/em&gt; ( &lt;code&gt;+&lt;/code&gt; &lt;em&gt;TypeParamBound&lt;/em&gt; ) &lt;sup&gt;* &lt;/sup&gt; &lt;code&gt;+&lt;/code&gt; &lt;sup&gt;?&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="0191bd504228dd677a10483ab9eb36cde3d82d86" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;TypeParamBound&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;TypeParamBound&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="149b7266088edec9953b0bb5ea7594bff53ee9e3" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;TypeParamBounds&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;TypeParamBounds&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="323f8099b5cc4fcb6313ce7c8ad6f5c5b99c7699" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;TypeParams&lt;/em&gt;:</source>
          <target state="translated">&lt;em&gt;TypeParams&lt;/em&gt;:</target>
        </trans-unit>
        <trans-unit id="3e8dd9667f560979efe1f5c373fccd047664263f" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;TypePath&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;TypePath&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="ec3b0747981182a147f649cbca42c150573d2cbb" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;TypePathFn&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;TypePathFn&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="adac299c0d146ed47076cfb530c5e9cad37370c0" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;TypePathFnInputs&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;TypePathFnInputs&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="5d0639cb5518a2640ee102f46e684dc647486f0a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;TypePathSegment&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;TypePathSegment&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="dc8474ac4310cfa625a58db09eda48a6193fdce3" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Union&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;연합&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="ef35f21f99ec1e61037f284bf1cabe5f9e9e272b" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;UnsafeBlockExpression&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;UnsafeBlockExpression&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="4054dfafbaa8bb2a66ecccf5b3ebb00ee96ffe74" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;UseDeclaration&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;사용 선언&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="f50876417424d4d896476cb7f20d89dd7713485a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;UseTree&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;UseTree&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="71ebdef7d7317084043d257adb8cb88491987d82" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;VisItem&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;VisItem&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="43fd81989c8fb8be977c8584a63a2a9b4265eb46" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;VisItem&lt;/em&gt;:</source>
          <target state="translated">&lt;em&gt;VisItem&lt;/em&gt;:</target>
        </trans-unit>
        <trans-unit id="2ccf92fd74eccfb92144612b5643b6134e7f98b2" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Visibility&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;가시성&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="d45de78fa9ccdf83478ce3380d866ccb6658db66" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Where clauses&lt;/em&gt; provide another way to specify bounds on type and lifetime parameters as well as a way to specify bounds on types that aren't type parameters.</source>
          <target state="translated">&lt;em&gt;where 절&lt;/em&gt; 은 형식 및 수명 매개 변수에 대한 경계를 지정하는 다른 방법과 형식 매개 변수가 아닌 형식에 대한 경계를 지정하는 방법을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="ff786522e51ee848c23ade94d46bd1a722a44ef6" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;WhereClause&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;WhereClause&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="2f425d58e216b8abdf730282aec2e2ced920cf8e" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;WhereClauseItem&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;WhereClauseItem&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="5754695102dfe3cd0f49e9d18dc6e5bd798aace5" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;WildcardPattern&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;와일드 카드&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="302c963be9788a72ba07e67b0021b52f4c796ab2" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;any ASCII (i.e 0x00 to 0x7F), except&lt;/em&gt;&lt;code&gt;&quot;&lt;/code&gt;, &lt;code&gt;\&lt;/code&gt;&lt;em&gt;and IsolatedCR&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;/em&gt; &lt;code&gt;&quot;&lt;/code&gt; , &lt;code&gt;\&lt;/code&gt; 를&lt;em&gt;제외한 모든 ASCII (0x00 ~ 0x7F)&lt;/em&gt;&lt;em&gt; 및 IsolatedCR을&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b45bef9788c16b898f5430e15f0ffd77c1e56277" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;any ASCII (i.e. 0x00 to 0x7F), except&lt;/em&gt;&lt;code&gt;'&lt;/code&gt;, &lt;code&gt;\&lt;/code&gt;, \n, \r or \t</source>
          <target state="translated">&lt;em&gt;&lt;/em&gt; &lt;code&gt;'&lt;/code&gt; , &lt;code&gt;\&lt;/code&gt; 를&lt;em&gt;제외한 모든 ASCII (0x00 ~ 0x7F)&lt;/em&gt; , \ n, \ r 또는 \ t를</target>
        </trans-unit>
        <trans-unit id="1f7743746809b99884ae23fba74c25051171b18d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;any ASCII (i.e. 0x00 to 0x7F)&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;모든 ASCII (예 : 0x00 ~ 0x7F)&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d2c2a89bc15e15ebf0ac33105fd923646f79fb71" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;by Steve Klabnik and Carol Nichols, with contributions from the Rust Community&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;Steve Klabnik과 Carol Nichols, Rust 커뮤니티의 기여&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="11422e22a39de0af093535e24fc8505d168c2bb0" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;nothing&lt;/em&gt; &amp;rArr; &lt;a href=&quot;trait.display&quot;&gt;&lt;code&gt;Display&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;em&gt;아무것도 없음&lt;/em&gt; &amp;rArr; &lt;a href=&quot;trait.display&quot;&gt; &lt;code&gt;Display&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9f06557a4f67dee5e955068615617812bd7b49d0" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;structfield.__pad0&quot;&gt;&lt;code id=&quot;__pad0.v&quot;&gt;__pad0: &lt;a href=&quot;../../raw/type.c_int&quot;&gt;c_int&lt;/a&gt;&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;structfield.__pad0&quot;&gt; &lt;code id=&quot;__pad0.v&quot;&gt;__pad0: &lt;a href=&quot;../../raw/type.c_int&quot;&gt;c_int&lt;/a&gt;&lt;/code&gt; &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="5677f02800461e733fbf31ef92f786a12d6f671e" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;structfield.__unused&quot;&gt;&lt;code id=&quot;__unused.v&quot;&gt;__unused: &lt;a href=&quot;../../../primitive.array&quot;&gt;[&lt;/a&gt;&lt;a href=&quot;../../raw/type.c_long&quot;&gt;c_long&lt;/a&gt;&lt;a href=&quot;../../../primitive.array&quot;&gt;; 3]&lt;/a&gt;&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;structfield.__unused&quot;&gt; &lt;code id=&quot;__unused.v&quot;&gt;__unused: &lt;a href=&quot;../../../primitive.array&quot;&gt;[&lt;/a&gt;&lt;a href=&quot;../../raw/type.c_long&quot;&gt;c_long&lt;/a&gt;&lt;a href=&quot;../../../primitive.array&quot;&gt;; 3]&lt;/a&gt;&lt;/code&gt; &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="8810ba453083a9187a21a12b15eb7a149bea36c1" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;structfield.data&quot;&gt;&lt;code id=&quot;data.v&quot;&gt;data: &lt;a href=&quot;../primitive.pointer&quot;&gt;*mut &lt;/a&gt;&lt;a href=&quot;../primitive.unit&quot;&gt;()&lt;/a&gt;&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;structfield.data&quot;&gt; &lt;code id=&quot;data.v&quot;&gt;data: &lt;a href=&quot;../primitive.pointer&quot;&gt;*mut &lt;/a&gt;&lt;a href=&quot;../primitive.unit&quot;&gt;()&lt;/a&gt;&lt;/code&gt; &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="da329b4a7a67a97d64b4cf6cc5010bf78c39c6d9" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;structfield.end&quot;&gt;&lt;code id=&quot;end.v&quot;&gt;end: Idx&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;structfield.end&quot;&gt; &lt;code id=&quot;end.v&quot;&gt;end: Idx&lt;/code&gt; &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="b13577b6feccf3971f23407018824a3bef45ebf9" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;structfield.major&quot;&gt;&lt;code id=&quot;major.v&quot;&gt;major: &lt;a href=&quot;../primitive.u32&quot;&gt;u32&lt;/a&gt;&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;structfield.major&quot;&gt; &lt;code id=&quot;major.v&quot;&gt;major: &lt;a href=&quot;../primitive.u32&quot;&gt;u32&lt;/a&gt;&lt;/code&gt; &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="180d30d6da1a5642ab4b3ac7ec2eaa9132a9a0f7" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;structfield.micro&quot;&gt;&lt;code id=&quot;micro.v&quot;&gt;micro: &lt;a href=&quot;../primitive.u32&quot;&gt;u32&lt;/a&gt;&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;structfield.micro&quot;&gt; &lt;code id=&quot;micro.v&quot;&gt;micro: &lt;a href=&quot;../primitive.u32&quot;&gt;u32&lt;/a&gt;&lt;/code&gt; &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="416703e1955def8a64303bc8dc479d6065856279" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;structfield.minor&quot;&gt;&lt;code id=&quot;minor.v&quot;&gt;minor: &lt;a href=&quot;../primitive.u32&quot;&gt;u32&lt;/a&gt;&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;structfield.minor&quot;&gt; &lt;code id=&quot;minor.v&quot;&gt;minor: &lt;a href=&quot;../primitive.u32&quot;&gt;u32&lt;/a&gt;&lt;/code&gt; &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="73a043f1f7253ee911b4231525dd4e3356df5001" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;structfield.st_atime&quot;&gt;&lt;code id=&quot;st_atime.v&quot;&gt;st_atime: &lt;a href=&quot;../../../primitive.i64&quot;&gt;i64&lt;/a&gt;&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;structfield.st_atime&quot;&gt; &lt;code id=&quot;st_atime.v&quot;&gt;st_atime: &lt;a href=&quot;../../../primitive.i64&quot;&gt;i64&lt;/a&gt;&lt;/code&gt; &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="0f6395466b333dbe35b1ed9267380cf6ebc61b7c" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;structfield.st_atime_nsec&quot;&gt;&lt;code id=&quot;st_atime_nsec.v&quot;&gt;st_atime_nsec: &lt;a href=&quot;../../raw/type.c_long&quot;&gt;c_long&lt;/a&gt;&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;structfield.st_atime_nsec&quot;&gt; &lt;code id=&quot;st_atime_nsec.v&quot;&gt;st_atime_nsec: &lt;a href=&quot;../../raw/type.c_long&quot;&gt;c_long&lt;/a&gt;&lt;/code&gt; &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="084cbb4253fac525903fe6cb3af050f521ae48ab" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;structfield.st_blksize&quot;&gt;&lt;code id=&quot;st_blksize.v&quot;&gt;st_blksize: &lt;a href=&quot;../../../primitive.i64&quot;&gt;i64&lt;/a&gt;&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;structfield.st_blksize&quot;&gt; &lt;code id=&quot;st_blksize.v&quot;&gt;st_blksize: &lt;a href=&quot;../../../primitive.i64&quot;&gt;i64&lt;/a&gt;&lt;/code&gt; &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="b3971e6c694e7fbd63db0f0bedebd2c9b3181e73" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;structfield.st_blocks&quot;&gt;&lt;code id=&quot;st_blocks.v&quot;&gt;st_blocks: &lt;a href=&quot;../../../primitive.i64&quot;&gt;i64&lt;/a&gt;&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;structfield.st_blocks&quot;&gt; &lt;code id=&quot;st_blocks.v&quot;&gt;st_blocks: &lt;a href=&quot;../../../primitive.i64&quot;&gt;i64&lt;/a&gt;&lt;/code&gt; &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="4dfcbef09a11b9bfd30285716478de2f114a05da" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;structfield.st_ctime&quot;&gt;&lt;code id=&quot;st_ctime.v&quot;&gt;st_ctime: &lt;a href=&quot;../../../primitive.i64&quot;&gt;i64&lt;/a&gt;&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;structfield.st_ctime&quot;&gt; &lt;code id=&quot;st_ctime.v&quot;&gt;st_ctime: &lt;a href=&quot;../../../primitive.i64&quot;&gt;i64&lt;/a&gt;&lt;/code&gt; &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="29688f2aab6b1e81b77a9bd8f260ec2ebac3c0ba" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;structfield.st_ctime_nsec&quot;&gt;&lt;code id=&quot;st_ctime_nsec.v&quot;&gt;st_ctime_nsec: &lt;a href=&quot;../../raw/type.c_long&quot;&gt;c_long&lt;/a&gt;&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;structfield.st_ctime_nsec&quot;&gt; &lt;code id=&quot;st_ctime_nsec.v&quot;&gt;st_ctime_nsec: &lt;a href=&quot;../../raw/type.c_long&quot;&gt;c_long&lt;/a&gt;&lt;/code&gt; &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="9697dcc912c6b9171594847f38a2631d99d4bfc7" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;structfield.st_dev&quot;&gt;&lt;code id=&quot;st_dev.v&quot;&gt;st_dev: &lt;a href=&quot;../../../primitive.u64&quot;&gt;u64&lt;/a&gt;&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;structfield.st_dev&quot;&gt; &lt;code id=&quot;st_dev.v&quot;&gt;st_dev: &lt;a href=&quot;../../../primitive.u64&quot;&gt;u64&lt;/a&gt;&lt;/code&gt; &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="6e708b7c08677d2226d492b09bc57f021de593f4" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;structfield.st_gid&quot;&gt;&lt;code id=&quot;st_gid.v&quot;&gt;st_gid: &lt;a href=&quot;../../../primitive.u32&quot;&gt;u32&lt;/a&gt;&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;structfield.st_gid&quot;&gt; &lt;code id=&quot;st_gid.v&quot;&gt;st_gid: &lt;a href=&quot;../../../primitive.u32&quot;&gt;u32&lt;/a&gt;&lt;/code&gt; &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="537f8b3679513c1355553fedd3faf79ae6540555" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;structfield.st_ino&quot;&gt;&lt;code id=&quot;st_ino.v&quot;&gt;st_ino: &lt;a href=&quot;../../../primitive.u64&quot;&gt;u64&lt;/a&gt;&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;structfield.st_ino&quot;&gt; &lt;code id=&quot;st_ino.v&quot;&gt;st_ino: &lt;a href=&quot;../../../primitive.u64&quot;&gt;u64&lt;/a&gt;&lt;/code&gt; &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="8e5a73d56e9ec1691cc0b77c93c60d9eb6ae0127" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;structfield.st_mode&quot;&gt;&lt;code id=&quot;st_mode.v&quot;&gt;st_mode: &lt;a href=&quot;../../../primitive.u32&quot;&gt;u32&lt;/a&gt;&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;structfield.st_mode&quot;&gt; &lt;code id=&quot;st_mode.v&quot;&gt;st_mode: &lt;a href=&quot;../../../primitive.u32&quot;&gt;u32&lt;/a&gt;&lt;/code&gt; &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="413b5e14b5dfc07ddd073f68f742388395ec9660" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;structfield.st_mtime&quot;&gt;&lt;code id=&quot;st_mtime.v&quot;&gt;st_mtime: &lt;a href=&quot;../../../primitive.i64&quot;&gt;i64&lt;/a&gt;&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;structfield.st_mtime&quot;&gt; &lt;code id=&quot;st_mtime.v&quot;&gt;st_mtime: &lt;a href=&quot;../../../primitive.i64&quot;&gt;i64&lt;/a&gt;&lt;/code&gt; &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="534c9e596a4c78975da3107baefb599a862104f3" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;structfield.st_mtime_nsec&quot;&gt;&lt;code id=&quot;st_mtime_nsec.v&quot;&gt;st_mtime_nsec: &lt;a href=&quot;../../raw/type.c_long&quot;&gt;c_long&lt;/a&gt;&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;structfield.st_mtime_nsec&quot;&gt; &lt;code id=&quot;st_mtime_nsec.v&quot;&gt;st_mtime_nsec: &lt;a href=&quot;../../raw/type.c_long&quot;&gt;c_long&lt;/a&gt;&lt;/code&gt; &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="7b5692c36ead107be34df7bdeb0d0074f52b37a5" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;structfield.st_nlink&quot;&gt;&lt;code id=&quot;st_nlink.v&quot;&gt;st_nlink: &lt;a href=&quot;../../../primitive.u64&quot;&gt;u64&lt;/a&gt;&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;structfield.st_nlink&quot;&gt; &lt;code id=&quot;st_nlink.v&quot;&gt;st_nlink: &lt;a href=&quot;../../../primitive.u64&quot;&gt;u64&lt;/a&gt;&lt;/code&gt; &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="1273a6096f46f541222315f10648ed37ee993ea9" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;structfield.st_rdev&quot;&gt;&lt;code id=&quot;st_rdev.v&quot;&gt;st_rdev: &lt;a href=&quot;../../../primitive.u64&quot;&gt;u64&lt;/a&gt;&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;structfield.st_rdev&quot;&gt; &lt;code id=&quot;st_rdev.v&quot;&gt;st_rdev: &lt;a href=&quot;../../../primitive.u64&quot;&gt;u64&lt;/a&gt;&lt;/code&gt; &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="fd7bf2eea86eaa3c6a503716f0877168d1e72843" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;structfield.st_size&quot;&gt;&lt;code id=&quot;st_size.v&quot;&gt;st_size: &lt;a href=&quot;../../../primitive.i64&quot;&gt;i64&lt;/a&gt;&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;structfield.st_size&quot;&gt; &lt;code id=&quot;st_size.v&quot;&gt;st_size: &lt;a href=&quot;../../../primitive.i64&quot;&gt;i64&lt;/a&gt;&lt;/code&gt; &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="ddb60037ec6366dc35d9714f06b0fd9c774f5d44" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;structfield.st_uid&quot;&gt;&lt;code id=&quot;st_uid.v&quot;&gt;st_uid: &lt;a href=&quot;../../../primitive.u32&quot;&gt;u32&lt;/a&gt;&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;structfield.st_uid&quot;&gt; &lt;code id=&quot;st_uid.v&quot;&gt;st_uid: &lt;a href=&quot;../../../primitive.u32&quot;&gt;u32&lt;/a&gt;&lt;/code&gt; &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="eddff13a75a62b336450792dac9389705ff5535e" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;structfield.start&quot;&gt;&lt;code id=&quot;start.v&quot;&gt;start: Idx&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;structfield.start&quot;&gt; &lt;code id=&quot;start.v&quot;&gt;start: Idx&lt;/code&gt; &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="595c429917c7e83bb5ea003723a3dad4fbc3892c" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;structfield.status&quot;&gt;&lt;code id=&quot;status.v&quot;&gt;status: &lt;a href=&quot;struct.exitstatus&quot;&gt;ExitStatus&lt;/a&gt;&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;structfield.status&quot;&gt; &lt;code id=&quot;status.v&quot;&gt;status: &lt;a href=&quot;struct.exitstatus&quot;&gt;ExitStatus&lt;/a&gt;&lt;/code&gt; &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="825360808bc06e18c7f2405dabacd498f4219908" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;structfield.stderr&quot;&gt;&lt;code id=&quot;stderr.v&quot;&gt;stderr: &lt;a href=&quot;../option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&lt;a href=&quot;struct.childstderr&quot;&gt;ChildStderr&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;structfield.stderr&quot;&gt; &lt;code id=&quot;stderr.v&quot;&gt;stderr: &lt;a href=&quot;../option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&lt;a href=&quot;struct.childstderr&quot;&gt;ChildStderr&lt;/a&gt;&amp;gt;&lt;/code&gt; &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="98259434ff21e599526464c9c321fa1c184d2e5b" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;structfield.stderr&quot;&gt;&lt;code id=&quot;stderr.v&quot;&gt;stderr: &lt;a href=&quot;../vec/struct.vec&quot;&gt;Vec&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;structfield.stderr&quot;&gt; &lt;code id=&quot;stderr.v&quot;&gt;stderr: &lt;a href=&quot;../vec/struct.vec&quot;&gt;Vec&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&amp;gt;&lt;/code&gt; &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="47b26a9e0d20f6cfab3b55fbedd302f4e67d3a6c" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;structfield.stdin&quot;&gt;&lt;code id=&quot;stdin.v&quot;&gt;stdin: &lt;a href=&quot;../option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&lt;a href=&quot;struct.childstdin&quot;&gt;ChildStdin&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;structfield.stdin&quot;&gt; &lt;code id=&quot;stdin.v&quot;&gt;stdin: &lt;a href=&quot;../option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&lt;a href=&quot;struct.childstdin&quot;&gt;ChildStdin&lt;/a&gt;&amp;gt;&lt;/code&gt; &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="2c0a7a091d0d9050c602ca56d1525931ad7deea2" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;structfield.stdout&quot;&gt;&lt;code id=&quot;stdout.v&quot;&gt;stdout: &lt;a href=&quot;../option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&lt;a href=&quot;struct.childstdout&quot;&gt;ChildStdout&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;structfield.stdout&quot;&gt; &lt;code id=&quot;stdout.v&quot;&gt;stdout: &lt;a href=&quot;../option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&lt;a href=&quot;struct.childstdout&quot;&gt;ChildStdout&lt;/a&gt;&amp;gt;&lt;/code&gt; &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="df1647dd486f6b3f232e94bbe3907a6c0233f73d" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;structfield.stdout&quot;&gt;&lt;code id=&quot;stdout.v&quot;&gt;stdout: &lt;a href=&quot;../vec/struct.vec&quot;&gt;Vec&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;structfield.stdout&quot;&gt; &lt;code id=&quot;stdout.v&quot;&gt;stdout: &lt;a href=&quot;../vec/struct.vec&quot;&gt;Vec&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&amp;gt;&lt;/code&gt; &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="f5df205eb14bf75f9a41d2d8686bf3e7bbd3b5a7" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;structfield.vtable&quot;&gt;&lt;code id=&quot;vtable.v&quot;&gt;vtable: &lt;a href=&quot;../primitive.pointer&quot;&gt;*mut &lt;/a&gt;&lt;a href=&quot;../primitive.unit&quot;&gt;()&lt;/a&gt;&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;structfield.vtable&quot;&gt; &lt;code id=&quot;vtable.v&quot;&gt;vtable: &lt;a href=&quot;../primitive.pointer&quot;&gt;*mut &lt;/a&gt;&lt;a href=&quot;../primitive.unit&quot;&gt;()&lt;/a&gt;&lt;/code&gt; &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="946b4825a836b123aed1b0db3bdee153a15764b5" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.AcqRel&quot;&gt;&lt;code id=&quot;AcqRel.v&quot;&gt;AcqRel&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.AcqRel&quot;&gt;&lt;code id=&quot;AcqRel.v&quot;&gt;AcqRel&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="4230cc993ac07ca6573267284010ddeec6c0e7b1" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.Acquire&quot;&gt;&lt;code id=&quot;Acquire.v&quot;&gt;Acquire&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.Acquire&quot;&gt;&lt;code id=&quot;Acquire.v&quot;&gt;Acquire&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="dc03c50ab33c44b4d36f66bde38b884449d85298" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.AddrInUse&quot;&gt;&lt;code id=&quot;AddrInUse.v&quot;&gt;AddrInUse&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.AddrInUse&quot;&gt;&lt;code id=&quot;AddrInUse.v&quot;&gt;AddrInUse&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="1e2f3ad358c4f9376ca5812807bdd724fa113d13" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.AddrNotAvailable&quot;&gt;&lt;code id=&quot;AddrNotAvailable.v&quot;&gt;AddrNotAvailable&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.AddrNotAvailable&quot;&gt;&lt;code id=&quot;AddrNotAvailable.v&quot;&gt;AddrNotAvailable&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="a44f465c3041a29d11e1e21b6969999191177828" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.AdminLocal&quot;&gt;&lt;code id=&quot;AdminLocal.v&quot;&gt;AdminLocal&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.AdminLocal&quot;&gt;&lt;code id=&quot;AdminLocal.v&quot;&gt;AdminLocal&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="4a1aab14de7e04e1624f4f2b9dc6fdff082be47a" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.AllocErr&quot;&gt;&lt;code id=&quot;AllocErr.v&quot;&gt;AllocErr&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.AllocErr&quot;&gt;&lt;code id=&quot;AllocErr.v&quot;&gt;AllocErr&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="8c56e960d29aea402847dc3cb9c2765608c50e01" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.AlreadyExists&quot;&gt;&lt;code id=&quot;AlreadyExists.v&quot;&gt;AlreadyExists&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.AlreadyExists&quot;&gt;&lt;code id=&quot;AlreadyExists.v&quot;&gt;AlreadyExists&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="2103b11c02c41b20de7b764371ab1bb036ab3215" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.Borrowed&quot;&gt;&lt;code id=&quot;Borrowed.v&quot;&gt;Borrowed(&lt;a href=&quot;../primitive.reference&quot;&gt;&amp;amp;'a &lt;/a&gt;B)&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.Borrowed&quot;&gt; &lt;code id=&quot;Borrowed.v&quot;&gt;Borrowed(&lt;a href=&quot;../primitive.reference&quot;&gt;&amp;amp;'a &lt;/a&gt;B)&lt;/code&gt; &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="6e4494920de112b3e89be4c3786787e2a871ce5a" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.Both&quot;&gt;&lt;code id=&quot;Both.v&quot;&gt;Both&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.Both&quot;&gt;&lt;code id=&quot;Both.v&quot;&gt;Both&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="195633d52548a9956e44a14bb98d903a93470814" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.BrokenPipe&quot;&gt;&lt;code id=&quot;BrokenPipe.v&quot;&gt;BrokenPipe&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.BrokenPipe&quot;&gt;&lt;code id=&quot;BrokenPipe.v&quot;&gt;BrokenPipe&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="c06dc18f824fba3f7eed99af71c6c15e25b0f467" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.CapacityOverflow&quot;&gt;&lt;code id=&quot;CapacityOverflow.v&quot;&gt;CapacityOverflow&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.CapacityOverflow&quot;&gt;&lt;code id=&quot;CapacityOverflow.v&quot;&gt;CapacityOverflow&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="119cdee165ba265ebe5e4af818c7cf2037a1cdee" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.Center&quot;&gt;&lt;code id=&quot;Center.v&quot;&gt;Center&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.Center&quot;&gt;&lt;code id=&quot;Center.v&quot;&gt;Center&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="19bc00cf17ef0759c612db31b403eb94011a38f4" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.Complete&quot;&gt;&lt;code id=&quot;Complete.v&quot;&gt;Complete(R)&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.Complete&quot;&gt;&lt;code id=&quot;Complete.v&quot;&gt;Complete(R)&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="a14409bce0e2fae9b46e220d9d0c91d82f930c2a" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.ConnectionAborted&quot;&gt;&lt;code id=&quot;ConnectionAborted.v&quot;&gt;ConnectionAborted&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.ConnectionAborted&quot;&gt;&lt;code id=&quot;ConnectionAborted.v&quot;&gt;ConnectionAborted&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="9b8f4dcd7d9a633c50319b6e301160353718a09b" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.ConnectionRefused&quot;&gt;&lt;code id=&quot;ConnectionRefused.v&quot;&gt;ConnectionRefused&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.ConnectionRefused&quot;&gt;&lt;code id=&quot;ConnectionRefused.v&quot;&gt;ConnectionRefused&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="fb1ea9fb34f773addb085d7bcfeffdf0a1415e16" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.ConnectionReset&quot;&gt;&lt;code id=&quot;ConnectionReset.v&quot;&gt;ConnectionReset&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.ConnectionReset&quot;&gt;&lt;code id=&quot;ConnectionReset.v&quot;&gt;ConnectionReset&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="ce7593f8f4bb701502df6d50e2a38596b5c8a53d" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.CurDir&quot;&gt;&lt;code id=&quot;CurDir.v&quot;&gt;CurDir&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.CurDir&quot;&gt;&lt;code id=&quot;CurDir.v&quot;&gt;CurDir&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="84c1a1e1ada471c42be621e237a9254c3b5880aa" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.Current&quot;&gt;&lt;code id=&quot;Current.v&quot;&gt;Current(&lt;a href=&quot;../primitive.i64&quot;&gt;i64&lt;/a&gt;)&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.Current&quot;&gt;&lt;code id=&quot;Current.v&quot;&gt;Current(&lt;a href=&quot;../primitive.i64&quot;&gt;i64&lt;/a&gt;)&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="8555525de0dceb6fc1426858d8f93bcde834077e" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.DeviceNS&quot;&gt;&lt;code id=&quot;DeviceNS.v&quot;&gt;DeviceNS(&amp;amp;'a &lt;a href=&quot;../ffi/struct.osstr&quot;&gt;OsStr&lt;/a&gt;)&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.DeviceNS&quot;&gt; &lt;code id=&quot;DeviceNS.v&quot;&gt;DeviceNS(&amp;amp;'a &lt;a href=&quot;../ffi/struct.osstr&quot;&gt;OsStr&lt;/a&gt;)&lt;/code&gt; &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="dd839a797c1a40f3f1e67eb9f42850b9214871d8" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.Disconnected&quot;&gt;&lt;code id=&quot;Disconnected.v&quot;&gt;Disconnected(T)&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.Disconnected&quot;&gt;&lt;code id=&quot;Disconnected.v&quot;&gt;Disconnected(T)&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="233b8a56070e10c5a6edb89ca81599295404f11c" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.Disconnected&quot;&gt;&lt;code id=&quot;Disconnected.v&quot;&gt;Disconnected&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.Disconnected&quot;&gt;&lt;code id=&quot;Disconnected.v&quot;&gt;Disconnected&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="c0eb1ad83d989c28d2123be40143869034589ee9" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.Disk&quot;&gt;&lt;code id=&quot;Disk.v&quot;&gt;Disk(&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;)&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.Disk&quot;&gt;&lt;code id=&quot;Disk.v&quot;&gt;Disk(&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;)&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="6e365e1d981853ff8abacf24d6c798e85b26da8b" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.Done&quot;&gt;&lt;code id=&quot;Done.v&quot;&gt;Done&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.Done&quot;&gt;&lt;code id=&quot;Done.v&quot;&gt;Done&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="ebd1e2656a25389b38042a2ee93aa0b0274a99a9" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.Empty&quot;&gt;&lt;code id=&quot;Empty.v&quot;&gt;Empty&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.Empty&quot;&gt;&lt;code id=&quot;Empty.v&quot;&gt;Empty&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="0a848e76f7264564f321770ded44bb9b7a1b6a35" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.End&quot;&gt;&lt;code id=&quot;End.v&quot;&gt;End(&lt;a href=&quot;../primitive.i64&quot;&gt;i64&lt;/a&gt;)&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.End&quot;&gt;&lt;code id=&quot;End.v&quot;&gt;End(&lt;a href=&quot;../primitive.i64&quot;&gt;i64&lt;/a&gt;)&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="8723331951b34d82be19c1ce625b1ee6fce56d46" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.Equal&quot;&gt;&lt;code id=&quot;Equal.v&quot;&gt;Equal&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.Equal&quot;&gt;&lt;code id=&quot;Equal.v&quot;&gt;Equal&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="f2ab196f2f7910502ba63d388b2f3e81b93c0c1e" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.Err&quot;&gt;&lt;code id=&quot;Err.v&quot;&gt;Err(E)&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.Err&quot;&gt;&lt;code id=&quot;Err.v&quot;&gt;Err(E)&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="b06630fdb5853b0a418ffdd873576b5d9c8e2b2b" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.Excluded&quot;&gt;&lt;code id=&quot;Excluded.v&quot;&gt;Excluded(T)&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.Excluded&quot;&gt;&lt;code id=&quot;Excluded.v&quot;&gt;Excluded(T)&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="cd86649b7c0dfd7f171f39f3053fd365094c5c2f" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.Full&quot;&gt;&lt;code id=&quot;Full.v&quot;&gt;Full(T)&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.Full&quot;&gt;&lt;code id=&quot;Full.v&quot;&gt;Full(T)&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="0530d6c549164d07b8b93ef5281b06fb1cb9fe7b" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.Global&quot;&gt;&lt;code id=&quot;Global.v&quot;&gt;Global&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.Global&quot;&gt;&lt;code id=&quot;Global.v&quot;&gt;Global&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="c6051a7f005811e75ec6c3941285e0a20030184a" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.Greater&quot;&gt;&lt;code id=&quot;Greater.v&quot;&gt;Greater&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.Greater&quot;&gt;&lt;code id=&quot;Greater.v&quot;&gt;Greater&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="28027264a8441670c966494a873a91c837582fed" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.Included&quot;&gt;&lt;code id=&quot;Included.v&quot;&gt;Included(T)&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.Included&quot;&gt;&lt;code id=&quot;Included.v&quot;&gt;Included(T)&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="97b749903f93feeafc24b841c8f5eab4658dac32" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.Infinite&quot;&gt;&lt;code id=&quot;Infinite.v&quot;&gt;Infinite&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.Infinite&quot;&gt;&lt;code id=&quot;Infinite.v&quot;&gt;Infinite&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="29801ef3d9b2a5ad56cd3314f21e2ed90897033b" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.InterfaceLocal&quot;&gt;&lt;code id=&quot;InterfaceLocal.v&quot;&gt;InterfaceLocal&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.InterfaceLocal&quot;&gt;&lt;code id=&quot;InterfaceLocal.v&quot;&gt;InterfaceLocal&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="a153734777372f0e6fe6c60d5d2d4e768d9a00e2" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.Interrupted&quot;&gt;&lt;code id=&quot;Interrupted.v&quot;&gt;Interrupted&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.Interrupted&quot;&gt;&lt;code id=&quot;Interrupted.v&quot;&gt;Interrupted&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="944cde559a80f504150d19aac1a4186667a904f3" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.InvalidData&quot;&gt;&lt;code id=&quot;InvalidData.v&quot;&gt;InvalidData&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.InvalidData&quot;&gt;&lt;code id=&quot;InvalidData.v&quot;&gt;InvalidData&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="861dfeecaacd5ddd3f7f53e4e01501b19aed3c2e" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.InvalidDigit&quot;&gt;&lt;code id=&quot;InvalidDigit.v&quot;&gt;InvalidDigit&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.InvalidDigit&quot;&gt;&lt;code id=&quot;InvalidDigit.v&quot;&gt;InvalidDigit&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="cec6b2f0a96ccb9826f2699dd136b03c65975f65" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.InvalidInput&quot;&gt;&lt;code id=&quot;InvalidInput.v&quot;&gt;InvalidInput&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.InvalidInput&quot;&gt;&lt;code id=&quot;InvalidInput.v&quot;&gt;InvalidInput&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="1c48a08f5e35337d1285fa3d1f5ea2fa86b8980a" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.Left&quot;&gt;&lt;code id=&quot;Left.v&quot;&gt;Left&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.Left&quot;&gt;&lt;code id=&quot;Left.v&quot;&gt;Left&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="bfc5b4925fbc65a6078ed6e61288122455b8da20" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.Less&quot;&gt;&lt;code id=&quot;Less.v&quot;&gt;Less&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.Less&quot;&gt;&lt;code id=&quot;Less.v&quot;&gt;Less&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="04c2e527909a275828dbb2bc9c176ac1614afb9a" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.LinkLocal&quot;&gt;&lt;code id=&quot;LinkLocal.v&quot;&gt;LinkLocal&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.LinkLocal&quot;&gt;&lt;code id=&quot;LinkLocal.v&quot;&gt;LinkLocal&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="3a3be082674449bec271275edbb5b3bdedbea9cf" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.Match&quot;&gt;&lt;code id=&quot;Match.v&quot;&gt;Match(&lt;a href=&quot;../../primitive.usize&quot;&gt;usize&lt;/a&gt;,&amp;nbsp;&lt;a href=&quot;../../primitive.usize&quot;&gt;usize&lt;/a&gt;)&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.Match&quot;&gt;&lt;code id=&quot;Match.v&quot;&gt;Match(&lt;a href=&quot;../../primitive.usize&quot;&gt;usize&lt;/a&gt;,&amp;nbsp;&lt;a href=&quot;../../primitive.usize&quot;&gt;usize&lt;/a&gt;)&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="33c57e7136af06da2673c92afbecc78b42d4bb8d" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.Nan&quot;&gt;&lt;code id=&quot;Nan.v&quot;&gt;Nan&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.Nan&quot;&gt;&lt;code id=&quot;Nan.v&quot;&gt;Nan&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="1833b9dfa5fa15a79300095828f4a1061fcca6ae" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.None&quot;&gt;&lt;code id=&quot;None.v&quot;&gt;None&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.None&quot;&gt;&lt;code id=&quot;None.v&quot;&gt;None&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="8b7f9960f8fede66e69c8346c0fe55971b394846" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.Normal&quot;&gt;&lt;code id=&quot;Normal.v&quot;&gt;Normal(&amp;amp;'a &lt;a href=&quot;../ffi/struct.osstr&quot;&gt;OsStr&lt;/a&gt;)&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.Normal&quot;&gt; &lt;code id=&quot;Normal.v&quot;&gt;Normal(&amp;amp;'a &lt;a href=&quot;../ffi/struct.osstr&quot;&gt;OsStr&lt;/a&gt;)&lt;/code&gt; &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="73e37be22e9836d151f22b696fa4cc08cde49c7a" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.Normal&quot;&gt;&lt;code id=&quot;Normal.v&quot;&gt;Normal&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.Normal&quot;&gt;&lt;code id=&quot;Normal.v&quot;&gt;Normal&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="302bdd905be9ba572bf55602011599880b543fb0" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.NotConnected&quot;&gt;&lt;code id=&quot;NotConnected.v&quot;&gt;NotConnected&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.NotConnected&quot;&gt;&lt;code id=&quot;NotConnected.v&quot;&gt;NotConnected&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="bf20326c7704ca8a2d60e0103d4eef981db0a71b" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.NotPresent&quot;&gt;&lt;code id=&quot;NotPresent.v&quot;&gt;NotPresent&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.NotPresent&quot;&gt;&lt;code id=&quot;NotPresent.v&quot;&gt;NotPresent&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="bd6891d626f18686dd978498d564a3a9dd632671" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.NotUnicode&quot;&gt;&lt;code id=&quot;NotUnicode.v&quot;&gt;NotUnicode(&lt;a href=&quot;../ffi/struct.osstring&quot;&gt;OsString&lt;/a&gt;)&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.NotUnicode&quot;&gt;&lt;code id=&quot;NotUnicode.v&quot;&gt;NotUnicode(&lt;a href=&quot;../ffi/struct.osstring&quot;&gt;OsString&lt;/a&gt;)&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="58ca30b68e1ee1141f60c556208edc9df2863f7a" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.Occupied&quot;&gt;&lt;code id=&quot;Occupied.v&quot;&gt;Occupied(&lt;a href=&quot;struct.occupiedentry&quot;&gt;OccupiedEntry&lt;/a&gt;&amp;lt;'a, K, V&amp;gt;)&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.Occupied&quot;&gt; &lt;code id=&quot;Occupied.v&quot;&gt;Occupied(&lt;a href=&quot;struct.occupiedentry&quot;&gt;OccupiedEntry&lt;/a&gt;&amp;lt;'a, K, V&amp;gt;)&lt;/code&gt; &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="79d84ac84d7562b64ee8b46eb17bc54857797e35" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.Occupied&quot;&gt;&lt;code id=&quot;Occupied.v&quot;&gt;Occupied(&lt;a href=&quot;struct.rawoccupiedentrymut&quot;&gt;RawOccupiedEntryMut&lt;/a&gt;&amp;lt;'a, K, V&amp;gt;)&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.Occupied&quot;&gt; &lt;code id=&quot;Occupied.v&quot;&gt;Occupied(&lt;a href=&quot;struct.rawoccupiedentrymut&quot;&gt;RawOccupiedEntryMut&lt;/a&gt;&amp;lt;'a, K, V&amp;gt;)&lt;/code&gt; &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="fd094f1fe30e236145ad34a6ef2aeae32c47c024" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.Ok&quot;&gt;&lt;code id=&quot;Ok.v&quot;&gt;Ok(T)&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.Ok&quot;&gt;&lt;code id=&quot;Ok.v&quot;&gt;Ok(T)&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="ad29067dc1ddb6390eecde4b19ddb7b4e48556ec" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.OrganizationLocal&quot;&gt;&lt;code id=&quot;OrganizationLocal.v&quot;&gt;OrganizationLocal&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.OrganizationLocal&quot;&gt;&lt;code id=&quot;OrganizationLocal.v&quot;&gt;OrganizationLocal&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="614945d762d7b7f3ca7d4d33a62bfa4cf751b4f5" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.Other&quot;&gt;&lt;code id=&quot;Other.v&quot;&gt;Other&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.Other&quot;&gt;&lt;code id=&quot;Other.v&quot;&gt;Other&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="1f80b89959df88b9a4c7a182108e33e7ae034e34" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.Overflow&quot;&gt;&lt;code id=&quot;Overflow.v&quot;&gt;Overflow&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.Overflow&quot;&gt;&lt;code id=&quot;Overflow.v&quot;&gt;Overflow&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="0a7ec9dfedf294e598bbdf184ee94ac142f649e2" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.Owned&quot;&gt;&lt;code id=&quot;Owned.v&quot;&gt;Owned(&amp;lt;B as &lt;a href=&quot;trait.toowned&quot;&gt;ToOwned&lt;/a&gt;&amp;gt;::&lt;a href=&quot;trait.toowned#associatedtype.Owned&quot;&gt;Owned&lt;/a&gt;)&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.Owned&quot;&gt; &lt;code id=&quot;Owned.v&quot;&gt;Owned(&amp;lt;B as &lt;a href=&quot;trait.toowned&quot;&gt;ToOwned&lt;/a&gt;&amp;gt;::&lt;a href=&quot;trait.toowned#associatedtype.Owned&quot;&gt;Owned&lt;/a&gt;)&lt;/code&gt; &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="366f13f97df38e7760f99f4ed4e6f443cb52b78a" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.ParentDir&quot;&gt;&lt;code id=&quot;ParentDir.v&quot;&gt;ParentDir&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.ParentDir&quot;&gt;&lt;code id=&quot;ParentDir.v&quot;&gt;ParentDir&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="8fca49f6b1e54b2f6eb0e0614b84b19a82a57a2d" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.Pending&quot;&gt;&lt;code id=&quot;Pending.v&quot;&gt;Pending&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.Pending&quot;&gt;&lt;code id=&quot;Pending.v&quot;&gt;Pending&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="f8ea77fa0d82d545e02bfa5a78c7b86db79b230a" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.PermissionDenied&quot;&gt;&lt;code id=&quot;PermissionDenied.v&quot;&gt;PermissionDenied&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.PermissionDenied&quot;&gt;&lt;code id=&quot;PermissionDenied.v&quot;&gt;PermissionDenied&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="426c64483da2ed8fb22c4d0ef80fe7462462dec0" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.Poisoned&quot;&gt;&lt;code id=&quot;Poisoned.v&quot;&gt;Poisoned(&lt;a href=&quot;struct.poisonerror&quot;&gt;PoisonError&lt;/a&gt;&amp;lt;T&amp;gt;)&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.Poisoned&quot;&gt;&lt;code id=&quot;Poisoned.v&quot;&gt;Poisoned(&lt;a href=&quot;struct.poisonerror&quot;&gt;PoisonError&lt;/a&gt;&amp;lt;T&amp;gt;)&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="aabf6ec799b83a62729dd8ddca3e66fd2e29a1b0" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.Prefix&quot;&gt;&lt;code id=&quot;Prefix.v&quot;&gt;Prefix(&lt;a href=&quot;struct.prefixcomponent&quot;&gt;PrefixComponent&lt;/a&gt;&amp;lt;'a&amp;gt;)&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.Prefix&quot;&gt;&lt;code id=&quot;Prefix.v&quot;&gt;Prefix(&lt;a href=&quot;struct.prefixcomponent&quot;&gt;PrefixComponent&lt;/a&gt;&amp;lt;'a&amp;gt;)&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="3de0621cd9bcefb6247dfd9619970dbd8debeda9" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.Read&quot;&gt;&lt;code id=&quot;Read.v&quot;&gt;Read&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.Read&quot;&gt;&lt;code id=&quot;Read.v&quot;&gt;Read&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="e1efd3f72ec0589cd90bdcc31f61d490b9e1ba0b" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.Ready&quot;&gt;&lt;code id=&quot;Ready.v&quot;&gt;Ready(T)&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.Ready&quot;&gt;&lt;code id=&quot;Ready.v&quot;&gt;Ready(T)&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="288a138d722b4ebc06719c5a87497ea19f4b32b2" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.RealmLocal&quot;&gt;&lt;code id=&quot;RealmLocal.v&quot;&gt;RealmLocal&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.RealmLocal&quot;&gt;&lt;code id=&quot;RealmLocal.v&quot;&gt;RealmLocal&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="9f7194b11e9652ccc63640018e61ad9fa189051d" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.Reject&quot;&gt;&lt;code id=&quot;Reject.v&quot;&gt;Reject(&lt;a href=&quot;../../primitive.usize&quot;&gt;usize&lt;/a&gt;,&amp;nbsp;&lt;a href=&quot;../../primitive.usize&quot;&gt;usize&lt;/a&gt;)&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.Reject&quot;&gt;&lt;code id=&quot;Reject.v&quot;&gt;Reject(&lt;a href=&quot;../../primitive.usize&quot;&gt;usize&lt;/a&gt;,&amp;nbsp;&lt;a href=&quot;../../primitive.usize&quot;&gt;usize&lt;/a&gt;)&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="aa24735ea4548068cac195fa82eac6028e590e9b" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.Release&quot;&gt;&lt;code id=&quot;Release.v&quot;&gt;Release&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.Release&quot;&gt;&lt;code id=&quot;Release.v&quot;&gt;Release&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="06c0431051b594fb99ab03870fd7e8251b995997" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.Right&quot;&gt;&lt;code id=&quot;Right.v&quot;&gt;Right&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.Right&quot;&gt;&lt;code id=&quot;Right.v&quot;&gt;Right&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="2bc13f3a3f558e67936274b79305e4dc6242a960" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.RootDir&quot;&gt;&lt;code id=&quot;RootDir.v&quot;&gt;RootDir&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.RootDir&quot;&gt;&lt;code id=&quot;RootDir.v&quot;&gt;RootDir&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="d5a6c2f3840abf373975c58db866fd05566f07fa" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.SeqCst&quot;&gt;&lt;code id=&quot;SeqCst.v&quot;&gt;SeqCst&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.SeqCst&quot;&gt;&lt;code id=&quot;SeqCst.v&quot;&gt;SeqCst&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="700fbd54368779d7c9e308dc4255e5f268c517b1" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.SiteLocal&quot;&gt;&lt;code id=&quot;SiteLocal.v&quot;&gt;SiteLocal&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.SiteLocal&quot;&gt;&lt;code id=&quot;SiteLocal.v&quot;&gt;SiteLocal&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="42457a7c802e96aa7ca550c99c3489f984533ece" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.Some&quot;&gt;&lt;code id=&quot;Some.v&quot;&gt;Some(T)&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.Some&quot;&gt;&lt;code id=&quot;Some.v&quot;&gt;Some(T)&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="ba0ec412b4f5daa35203a6a7d1344b09c477fe1a" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.Start&quot;&gt;&lt;code id=&quot;Start.v&quot;&gt;Start(&lt;a href=&quot;../primitive.u64&quot;&gt;u64&lt;/a&gt;)&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.Start&quot;&gt;&lt;code id=&quot;Start.v&quot;&gt;Start(&lt;a href=&quot;../primitive.u64&quot;&gt;u64&lt;/a&gt;)&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="119bce8494f5d1c83df82c443bac86537d0fe2c9" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.Subnormal&quot;&gt;&lt;code id=&quot;Subnormal.v&quot;&gt;Subnormal&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.Subnormal&quot;&gt;&lt;code id=&quot;Subnormal.v&quot;&gt;Subnormal&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="5d2078249f3a354ac09a4548a73efd3c5aa98f30" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.Timeout&quot;&gt;&lt;code id=&quot;Timeout.v&quot;&gt;Timeout&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.Timeout&quot;&gt;&lt;code id=&quot;Timeout.v&quot;&gt;Timeout&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="b7657da1c54904b1a94f601ce854c30560cfe56f" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.UNC&quot;&gt;&lt;code id=&quot;UNC.v&quot;&gt;UNC(&amp;amp;'a &lt;a href=&quot;../ffi/struct.osstr&quot;&gt;OsStr&lt;/a&gt;,&amp;nbsp;&amp;amp;'a &lt;a href=&quot;../ffi/struct.osstr&quot;&gt;OsStr&lt;/a&gt;)&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.UNC&quot;&gt; &lt;code id=&quot;UNC.v&quot;&gt;UNC(&amp;amp;'a &lt;a href=&quot;../ffi/struct.osstr&quot;&gt;OsStr&lt;/a&gt;,&amp;nbsp;&amp;amp;'a &lt;a href=&quot;../ffi/struct.osstr&quot;&gt;OsStr&lt;/a&gt;)&lt;/code&gt; &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="7251262f6418487ba30792246a9f626d6a25f83c" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.Unbounded&quot;&gt;&lt;code id=&quot;Unbounded.v&quot;&gt;Unbounded&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.Unbounded&quot;&gt;&lt;code id=&quot;Unbounded.v&quot;&gt;Unbounded&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="6504115f74e762170d71f0c01803aa1433e0ce47" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.Underflow&quot;&gt;&lt;code id=&quot;Underflow.v&quot;&gt;Underflow&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.Underflow&quot;&gt;&lt;code id=&quot;Underflow.v&quot;&gt;Underflow&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="238e882f1739488ba7a030da1c404786df9579f9" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.UnexpectedEof&quot;&gt;&lt;code id=&quot;UnexpectedEof.v&quot;&gt;UnexpectedEof&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.UnexpectedEof&quot;&gt;&lt;code id=&quot;UnexpectedEof.v&quot;&gt;UnexpectedEof&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="a8dd251a1207d4e11e3d10d61c6d014b2646ff37" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.V4&quot;&gt;&lt;code id=&quot;V4.v&quot;&gt;V4(&lt;a href=&quot;struct.ipv4addr&quot;&gt;Ipv4Addr&lt;/a&gt;)&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.V4&quot;&gt;&lt;code id=&quot;V4.v&quot;&gt;V4(&lt;a href=&quot;struct.ipv4addr&quot;&gt;Ipv4Addr&lt;/a&gt;)&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="900d145487fbb075cf35b7f31871559fc4e06aea" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.V4&quot;&gt;&lt;code id=&quot;V4.v&quot;&gt;V4(&lt;a href=&quot;struct.socketaddrv4&quot;&gt;SocketAddrV4&lt;/a&gt;)&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.V4&quot;&gt;&lt;code id=&quot;V4.v&quot;&gt;V4(&lt;a href=&quot;struct.socketaddrv4&quot;&gt;SocketAddrV4&lt;/a&gt;)&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="ccd5990162f9019755ca0861aec17eeb838635c5" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.V6&quot;&gt;&lt;code id=&quot;V6.v&quot;&gt;V6(&lt;a href=&quot;struct.ipv6addr&quot;&gt;Ipv6Addr&lt;/a&gt;)&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.V6&quot;&gt;&lt;code id=&quot;V6.v&quot;&gt;V6(&lt;a href=&quot;struct.ipv6addr&quot;&gt;Ipv6Addr&lt;/a&gt;)&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="df27b63255e5ca4dd10ee3931d89a214cb7a79e8" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.V6&quot;&gt;&lt;code id=&quot;V6.v&quot;&gt;V6(&lt;a href=&quot;struct.socketaddrv6&quot;&gt;SocketAddrV6&lt;/a&gt;)&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.V6&quot;&gt;&lt;code id=&quot;V6.v&quot;&gt;V6(&lt;a href=&quot;struct.socketaddrv6&quot;&gt;SocketAddrV6&lt;/a&gt;)&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="b1ea069ef9327f5c3a1a861557ea04c82575ae3c" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.Vacant&quot;&gt;&lt;code id=&quot;Vacant.v&quot;&gt;Vacant(&lt;a href=&quot;struct.rawvacantentrymut&quot;&gt;RawVacantEntryMut&lt;/a&gt;&amp;lt;'a, K, V, S&amp;gt;)&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.Vacant&quot;&gt; &lt;code id=&quot;Vacant.v&quot;&gt;Vacant(&lt;a href=&quot;struct.rawvacantentrymut&quot;&gt;RawVacantEntryMut&lt;/a&gt;&amp;lt;'a, K, V, S&amp;gt;)&lt;/code&gt; &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="a3f52e8e92525a9484f9ea21a413660d15607c54" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.Vacant&quot;&gt;&lt;code id=&quot;Vacant.v&quot;&gt;Vacant(&lt;a href=&quot;struct.vacantentry&quot;&gt;VacantEntry&lt;/a&gt;&amp;lt;'a, K, V&amp;gt;)&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.Vacant&quot;&gt; &lt;code id=&quot;Vacant.v&quot;&gt;Vacant(&lt;a href=&quot;struct.vacantentry&quot;&gt;VacantEntry&lt;/a&gt;&amp;lt;'a, K, V&amp;gt;)&lt;/code&gt; &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="cc590a03de1082f370b8b404e093e91ac5cb0306" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.Verbatim&quot;&gt;&lt;code id=&quot;Verbatim.v&quot;&gt;Verbatim(&amp;amp;'a &lt;a href=&quot;../ffi/struct.osstr&quot;&gt;OsStr&lt;/a&gt;)&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.Verbatim&quot;&gt; &lt;code id=&quot;Verbatim.v&quot;&gt;Verbatim(&amp;amp;'a &lt;a href=&quot;../ffi/struct.osstr&quot;&gt;OsStr&lt;/a&gt;)&lt;/code&gt; &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="5aa296add133e61d06a6d4259d1fb0881eb7bd39" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.VerbatimDisk&quot;&gt;&lt;code id=&quot;VerbatimDisk.v&quot;&gt;VerbatimDisk(&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;)&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.VerbatimDisk&quot;&gt;&lt;code id=&quot;VerbatimDisk.v&quot;&gt;VerbatimDisk(&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;)&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="f6b929546a75faa42e8181de8ca57bcfbd173f85" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.VerbatimUNC&quot;&gt;&lt;code id=&quot;VerbatimUNC.v&quot;&gt;VerbatimUNC(&amp;amp;'a &lt;a href=&quot;../ffi/struct.osstr&quot;&gt;OsStr&lt;/a&gt;,&amp;nbsp;&amp;amp;'a &lt;a href=&quot;../ffi/struct.osstr&quot;&gt;OsStr&lt;/a&gt;)&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.VerbatimUNC&quot;&gt; &lt;code id=&quot;VerbatimUNC.v&quot;&gt;VerbatimUNC(&amp;amp;'a &lt;a href=&quot;../ffi/struct.osstr&quot;&gt;OsStr&lt;/a&gt;,&amp;nbsp;&amp;amp;'a &lt;a href=&quot;../ffi/struct.osstr&quot;&gt;OsStr&lt;/a&gt;)&lt;/code&gt; &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="9cd9ad739de8cce934db346fc40fc958c8b3429e" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.WouldBlock&quot;&gt;&lt;code id=&quot;WouldBlock.v&quot;&gt;WouldBlock&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.WouldBlock&quot;&gt;&lt;code id=&quot;WouldBlock.v&quot;&gt;WouldBlock&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="31c97026aa6d07f6414185d909730c36779144a9" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.Write&quot;&gt;&lt;code id=&quot;Write.v&quot;&gt;Write&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.Write&quot;&gt;&lt;code id=&quot;Write.v&quot;&gt;Write&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="61e6c90d5de31882b090799d674e61ef0d0f389c" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.WriteZero&quot;&gt;&lt;code id=&quot;WriteZero.v&quot;&gt;WriteZero&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.WriteZero&quot;&gt;&lt;code id=&quot;WriteZero.v&quot;&gt;WriteZero&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="dc8ede49b45bb296751c2a5d3ace189c5a80e69c" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.Yielded&quot;&gt;&lt;code id=&quot;Yielded.v&quot;&gt;Yielded(Y)&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.Yielded&quot;&gt;&lt;code id=&quot;Yielded.v&quot;&gt;Yielded(Y)&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="6b8f56e3c79b5975e1be195dd3734989bee366c7" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.Zero&quot;&gt;&lt;code id=&quot;Zero.v&quot;&gt;Zero&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.Zero&quot;&gt;&lt;code id=&quot;Zero.v&quot;&gt;Zero&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="8d30ecbd2f33931b54af81e7b1473f6ce8c0ba0d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;a href=&quot;https://github.com/rust-lang/rust/issues/10184&quot;&gt;NOTE: currently this will cause Undefined Behavior if the rounded value cannot be represented by the target integer type&lt;/a&gt;&lt;/strong&gt;. This includes Inf and NaN. This is a bug and will be fixed.</source>
          <target state="translated">&lt;strong&gt;&lt;a href=&quot;https://github.com/rust-lang/rust/issues/10184&quot;&gt;참고 : 현재 반올림 된 값을 대상 정수 유형으로 나타낼 수없는 경우 정의되지 않은 동작이 발생합니다&lt;/a&gt;&lt;/strong&gt; . 여기에는 Inf 및 NaN이 포함됩니다. 이것은 버그이며 수정 될 것입니다.</target>
        </trans-unit>
        <trans-unit id="92971d62fe3186475f026398e7a0174099738633" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;a href=&quot;https://github.com/rust-lang/rust/issues/15536&quot;&gt;NOTE: currently this will cause Undefined Behavior if the value is finite but larger or smaller than the largest or smallest finite value representable by f32&lt;/a&gt;&lt;/strong&gt;. This is a bug and will be fixed.</source>
          <target state="translated">&lt;strong&gt;&lt;a href=&quot;https://github.com/rust-lang/rust/issues/15536&quot;&gt;참고 : 현재 값이 유한하지만 f32로 나타낼 수있는 최대 또는 최소 유한 값보다 크거나 작은 경우 정의되지 않은 동작이 발생합니다.&lt;/a&gt;&lt;/strong&gt; . 이것은 버그이며 수정 될 것입니다.</target>
        </trans-unit>
        <trans-unit id="1afbb08e18a2a8950ebdff5b3534ae0f7e3fd83f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;em&gt;Note&lt;/em&gt;&lt;/strong&gt;: The &lt;code&gt;rustc&lt;/code&gt; compiler automatically inlines functions based on internal heuristics. Incorrectly inlining functions can make the program slower, so this attribute should be used with care.</source>
          <target state="translated">&lt;strong&gt;&lt;em&gt;참고&lt;/em&gt;&lt;/strong&gt; : &lt;code&gt;rustc&lt;/code&gt; 컴파일러는 내부 휴리스틱을 기반으로 함수를 자동으로 인라인합니다. 함수를 잘못 인라인하면 프로그램 속도가 느려질 수 있으므로이 속성을주의해서 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="52af196e2df7d6d1d70d4b20971e00ada5feef77" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;em&gt;Warning:&lt;/em&gt;&lt;/strong&gt; Dereferencing an unaligned pointer is &lt;a href=&quot;behavior-considered-undefined&quot;&gt;undefined behavior&lt;/a&gt; and it is possible to &lt;a href=&quot;https://github.com/rust-lang/rust/issues/27060&quot;&gt;safely create unaligned pointers to &lt;code&gt;packed&lt;/code&gt; fields&lt;/a&gt;. Like all ways to create undefined behavior in safe Rust, this is a bug.</source>
          <target state="translated">&lt;strong&gt;&lt;em&gt;경고 :&lt;/em&gt;&lt;/strong&gt; 정렬되지 않은 포인터를 참조 해제하는 것은&lt;a href=&quot;behavior-considered-undefined&quot;&gt; 정의되지 않은 동작&lt;/a&gt; 이며&lt;a href=&quot;https://github.com/rust-lang/rust/issues/27060&quot;&gt; &lt;code&gt;packed&lt;/code&gt; &lt;/a&gt; 필드에 대해 정렬되지 않은 포인터를 안전하게 만들 수 있습니다 . 안전한 Rust에서 정의되지 않은 동작을 만드는 모든 방법과 마찬가지로 이것은 버그입니다.</target>
        </trans-unit>
        <trans-unit id="641eae7d16c8e6d62bab0c62010b11532ce2de80" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;em&gt;Warning:&lt;/em&gt;&lt;/strong&gt; For &lt;a href=&quot;../types/trait-object&quot;&gt;trait objects&lt;/a&gt;, if there is an inherent method of the same name as a trait method, it will give a compiler error when trying to call the method in a method call expression. Instead, you can call the method using &lt;a href=&quot;call-expr#disambiguating-function-calls&quot;&gt;disambiguating function call syntax&lt;/a&gt;, in which case it calls the trait method, not the inherent method. There is no way to call the inherent method. Just don't define inherent methods on trait objects with the same name a trait method and you'll be fine.</source>
          <target state="translated">&lt;strong&gt;&lt;em&gt;경고 :&lt;/em&gt;&lt;/strong&gt; 들어&lt;a href=&quot;../types/trait-object&quot;&gt; 특성 객체를&lt;/a&gt; 형질 방법과 동일한 이름의 고유 한 방법이있는 경우, 메소드 호출 식의 메소드를 호출 할 때, 그것은 컴파일러 오류를 줄 것이다. 대신&lt;a href=&quot;call-expr#disambiguating-function-calls&quot;&gt; 명확성있는 함수 호출 구문을&lt;/a&gt; 사용하여 메소드를 호출 할 수 있습니다.이 경우 고유 메소드가 아닌 특성 메소드를 호출합니다. 고유 메소드를 호출 할 방법이 없습니다. 특성 이름과 같은 특성을 가진 특성 오브젝트에 고유 한 메소드를 정의하지 않아도됩니다.</target>
        </trans-unit>
        <trans-unit id="14f5badea1be2736539096eaf684db8c5d26b01b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;em&gt;Warning:&lt;/em&gt;&lt;/strong&gt; The following list is not exhaustive. There is no formal model of Rust's semantics for what is and is not allowed in unsafe code, so there may be more behavior considered unsafe. The following list is just what we know for sure is undefined behavior. Please read the &lt;a href=&quot;https://doc.rust-lang.org/nomicon/index.html&quot;&gt;Rustonomicon&lt;/a&gt; before writing unsafe code.</source>
          <target state="translated">&lt;strong&gt;&lt;em&gt;경고 :&lt;/em&gt;&lt;/strong&gt; 다음 목록은 전체가 아닙니다. 안전하지 않은 코드에서 허용되는 것과 허용되지 않는 것에 대한 Rust 의미의 공식 모델은 없으므로 안전하지 않은 것으로 간주되는 동작이 더있을 수 있습니다. 다음 목록은 정의되지 않은 동작입니다. 안전하지 않은 코드를 작성하기 전에&lt;a href=&quot;https://doc.rust-lang.org/nomicon/index.html&quot;&gt; Rustonomicon을&lt;/a&gt; 읽으십시오.</target>
        </trans-unit>
        <trans-unit id="0029a09af0cc0f5afc1611697c9ad1ed7b7d0cfc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;em&gt;Warning:&lt;/em&gt;&lt;/strong&gt; With two trait object types, even when the complete set of traits is the same, if the base traits differ, the type is different. For example, &lt;code&gt;dyn Send + Sync&lt;/code&gt; is a different type from &lt;code&gt;dyn Sync + Send&lt;/code&gt;. See &lt;a href=&quot;https://github.com/rust-lang/rust/issues/33140&quot;&gt;issue 33140&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;&lt;em&gt;경고 :&lt;/em&gt;&lt;/strong&gt; 두 개의 특성 오브젝트 유형을 사용하면 전체 특성 세트가 동일하더라도 기본 특성이 다르면 유형이 다릅니다. 예를 들어, &lt;code&gt;dyn Send + Sync&lt;/code&gt; 는 &lt;code&gt;dyn Sync + Send&lt;/code&gt; 와 다른 유형입니다. &lt;a href=&quot;https://github.com/rust-lang/rust/issues/33140&quot;&gt;이슈 33140을&lt;/a&gt; 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="ee107fe206809602998471109ca3cf88bae2bbb4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;sup&gt;Lexer 2015&lt;/sup&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;sup&gt;렉서 2015&lt;/sup&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="086e314e305cc39ba4d4b327b89e5d7a0d8c6f03" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;sup&gt;Lexer 2018+&lt;/sup&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;sup&gt;렉서 2018+&lt;/sup&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="32563aa7feb766e8d7e65307f8bc48e47003b702" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;sup&gt;Lexer:&lt;/sup&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;sup&gt;Lexer:&lt;/sup&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a3ac7aad80402b534d708e407025f17f7772a4ae" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;sup&gt;Lexer&lt;/sup&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;sup&gt;Lexer&lt;/sup&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="13ea811ecc594e94181b24eb80a75c60e5e29672" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;sup&gt;Syntax:&lt;/sup&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;sup&gt;Syntax:&lt;/sup&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4284bd4d709ac711e8c06bbdaf51939ae42316ff" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;sup&gt;Syntax&lt;/sup&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;sup&gt;Syntax&lt;/sup&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="04d38a540329625df538c94f4f56761b0074d0fa" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Character size&lt;/strong&gt; - C strings may use &lt;code&gt;char&lt;/code&gt; or &lt;code&gt;wchar_t&lt;/code&gt;-sized characters; please &lt;strong&gt;note&lt;/strong&gt; that C's &lt;code&gt;char&lt;/code&gt; is different from Rust's. The C standard leaves the actual sizes of those types open to interpretation, but defines different APIs for strings made up of each character type. Rust strings are always UTF-8, so different Unicode characters will be encoded in a variable number of bytes each. The Rust type &lt;a href=&quot;../primitive.char&quot;&gt;&lt;code&gt;char&lt;/code&gt;&lt;/a&gt; represents a '&lt;a href=&quot;http://www.unicode.org/glossary/#unicode_scalar_value&quot;&gt;Unicode scalar value&lt;/a&gt;', which is similar to, but not the same as, a '&lt;a href=&quot;http://www.unicode.org/glossary/#code_point&quot;&gt;Unicode code point&lt;/a&gt;'.</source>
          <target state="translated">&lt;strong&gt;문자 크기&lt;/strong&gt; -C 문자열은 &lt;code&gt;char&lt;/code&gt; 또는 &lt;code&gt;wchar_t&lt;/code&gt; 크기의 문자를 사용할 수 있습니다 . 제발 &lt;strong&gt;주의&lt;/strong&gt; C의 것을 &lt;code&gt;char&lt;/code&gt; 녹의 다릅니다. C 표준은 이러한 유형의 실제 크기를 해석하기 위해 개방하지만 각 문자 유형으로 구성된 문자열에 대해 서로 다른 API를 정의합니다. 녹 문자열은 항상 UTF-8이므로 다른 유니 코드 문자는 각각 가변 바이트 수로 인코딩됩니다. Rust 타입 &lt;a href=&quot;../primitive.char&quot;&gt; &lt;code&gt;char&lt;/code&gt; &lt;/a&gt; 는 ' &lt;a href=&quot;http://www.unicode.org/glossary/#unicode_scalar_value&quot;&gt;유니 코드 스칼라 값&lt;/a&gt; '을 나타내며, 이는 ' &lt;a href=&quot;http://www.unicode.org/glossary/#code_point&quot;&gt;유니 코드 코드 포인트&lt;/a&gt; ' 와 유사하지만 동일하지는 않습니다 .</target>
        </trans-unit>
        <trans-unit id="700eaca40cee125f38cc4d75b02d62979fde8825" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Crates:&lt;/strong&gt; A tree of modules that produces a library or executable</source>
          <target state="translated">&lt;strong&gt;상자 :&lt;/strong&gt; 라이브러리 또는 실행 파일을 생성하는 모듈 트리</target>
        </trans-unit>
        <trans-unit id="6b8b3462b6d6c541b754f0aec381f7e706c421ab" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Edition Differences&lt;/strong&gt;: In the 2015 Edition, the crate root contains a variety of different items, including external crates, default crates such as &lt;code&gt;std&lt;/code&gt; and &lt;code&gt;core&lt;/code&gt;, and items in the top level of the crate (including &lt;code&gt;use&lt;/code&gt; imports).</source>
          <target state="translated">&lt;strong&gt;판 차이&lt;/strong&gt; : 2015 년 판에서 상자 루트 외부 상자 등 다양한 항목의 다양한 포함 기본적는 같은 상자 &lt;code&gt;std&lt;/code&gt; 및 &lt;code&gt;core&lt;/code&gt; (를 포함하여 상자의 상단 레벨 및 아이템 &lt;code&gt;use&lt;/code&gt; 수입).</target>
        </trans-unit>
        <trans-unit id="e088bfe5ad018353c64bdbb01968dcde42ba3d14" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Edition Differences&lt;/strong&gt;: In the 2015 edition, &lt;code&gt;use&lt;/code&gt; paths also allow accessing items in the crate root. Using the example above, the following &lt;code&gt;use&lt;/code&gt; paths work in 2015 but not 2018:</source>
          <target state="translated">&lt;strong&gt;판의 차이는&lt;/strong&gt; : 2015 에디션에서 &lt;code&gt;use&lt;/code&gt; 경로는 또한 상자 루트의 항목을 액세스 할 수 있습니다. 위의 예를 사용하면 다음과 같은 &lt;code&gt;use&lt;/code&gt; 경로가 2015 년에 작동하지만 2018 년에는 작동하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="627f712f9b93a0a851f59c926530c05272107ff4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Edition Differences&lt;/strong&gt;: In the 2015 edition, crates in the extern prelude cannot be referenced via &lt;a href=&quot;use-declarations&quot;&gt;use declarations&lt;/a&gt;, so it is generally standard practice to include &lt;code&gt;extern crate&lt;/code&gt; declarations to bring them into scope.</source>
          <target state="translated">&lt;strong&gt;판의 차이점&lt;/strong&gt; : 2015 판에서 extern prelude의 상자는 &lt;a href=&quot;use-declarations&quot;&gt;use declarations&lt;/a&gt; 를 통해 참조 할 수 없으므로 일반적으로 &lt;code&gt;extern crate&lt;/code&gt; 선언을 포함 시켜 범위를 넓히는 것이 표준 관행 입니다.</target>
        </trans-unit>
        <trans-unit id="f5085a0b269138950b893252f1966657953ef4b0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Edition Differences&lt;/strong&gt;: In the 2015 edition, if the first bound of the trait object is a path that starts with &lt;code&gt;::&lt;/code&gt;, then the &lt;code&gt;dyn&lt;/code&gt; will be treated as a part of the path. The first path can be put in parenthesis to get around this. As such, if you want a trait object with the trait &lt;code&gt;::your_module::Trait&lt;/code&gt;, you should write it as &lt;code&gt;dyn (::your_module::Trait)&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;판 차이&lt;/strong&gt; : 2015 판에서 trait 객체의 첫 번째 경계가 &lt;code&gt;::&lt;/code&gt; 로 시작하는 경로 인 경우 &lt;code&gt;dyn&lt;/code&gt; 은 경로의 일부로 처리됩니다. 이 문제를 해결하기 위해 첫 번째 경로를 괄호 안에 넣을 수 있습니다. 따라서 &lt;code&gt;::your_module::Trait&lt;/code&gt; 특성을 가진 특성 오브젝트를 원하면 &lt;code&gt;dyn (::your_module::Trait)&lt;/code&gt; 로 작성해야합니다 .</target>
        </trans-unit>
        <trans-unit id="d876e32afa65f2d220b1dd922c7a25c124ae5c8d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Edition Differences&lt;/strong&gt;: In the 2015 edition, it is possible to declare trait methods with anonymous parameters (e.g. &lt;code&gt;fn foo(u8)&lt;/code&gt;). This is deprecated and an error as of the 2018 edition. All parameters must have an argument name.</source>
          <target state="translated">&lt;strong&gt;에디션 차이&lt;/strong&gt; : 2015 년 에디션에서는 익명 매개 변수 (예 : &lt;code&gt;fn foo(u8)&lt;/code&gt; )를 사용하여 특성 메소드를 선언 할 수 있습니다 . 이 기능은 더 이상 사용되지 않으며 2018 년판에서 오류가 발생했습니다. 모든 매개 변수에는 인수 이름이 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="d8a4eb3a8ecd26bd2a8200c1aa407e7c962a47c5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Edition Differences&lt;/strong&gt;: In the 2015 edition, this syntax is valid that is disallowed as of the 2018 edition.</source>
          <target state="translated">&lt;strong&gt;판 차이&lt;/strong&gt; : 2015 판에서이 구문은 2018 판에서 허용되지 않는 것으로 유효합니다.</target>
        </trans-unit>
        <trans-unit id="e6c48e95dbd2c5b344112038b2d6d28be512c6e3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Edition Differences&lt;/strong&gt;: Starting with the 2018 edition, paths for &lt;code&gt;pub(in path)&lt;/code&gt; must start with &lt;code&gt;crate&lt;/code&gt;, &lt;code&gt;self&lt;/code&gt;, or &lt;code&gt;super&lt;/code&gt;. The 2015 edition may also use paths starting with &lt;code&gt;::&lt;/code&gt; or modules from the crate root.</source>
          <target state="translated">&lt;strong&gt;에디션 차이&lt;/strong&gt; : 2018 년판부터 &lt;code&gt;pub(in path)&lt;/code&gt; 는 &lt;code&gt;crate&lt;/code&gt; , &lt;code&gt;self&lt;/code&gt; 또는 &lt;code&gt;super&lt;/code&gt; 로 시작해야합니다 . 2015 년판은 &lt;code&gt;::&lt;/code&gt; 로 시작하는 경로 나 상자 루트의 모듈을 사용할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="2bd803d8196215afbdb722ca42ff6863ebfdce05" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Encodings&lt;/strong&gt; - Rust strings are UTF-8, but C strings may use other encodings. If you are using a string from C, you should check its encoding explicitly, rather than just assuming that it is UTF-8 like you can do in Rust.</source>
          <target state="translated">&lt;strong&gt;인코딩&lt;/strong&gt; -녹 문자열은 UTF-8이지만 C 문자열은 다른 인코딩을 사용할 수 있습니다. C의 문자열을 사용하는 경우 Rust에서와 같이 UTF-8이라고 가정하기보다는 인코딩을 명시 적으로 확인해야합니다.</target>
        </trans-unit>
        <trans-unit id="c4744b4de56ac84ab4967b9e79393a7382d93137" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Errors&lt;/strong&gt;: If the function returns a &lt;code&gt;Result&lt;/code&gt;, describing the kinds of errors that might occur and what conditions might cause those errors to be returned can be helpful to callers so they can write code to handle the different kinds of errors in different ways.</source>
          <target state="translated">&lt;strong&gt;오류&lt;/strong&gt; : 함수가 &lt;code&gt;Result&lt;/code&gt; 를 반환하는 경우 발생할 수있는 오류 종류와 해당 오류가 반환되는 조건을 설명하면 호출자에게 도움이되므로 다양한 종류의 오류를 다른 방식으로 처리하는 코드를 작성할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ab2c858e00d5352d65014ede49ecfd4f78f2629f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;From C to Rust:&lt;/strong&gt;&lt;a href=&quot;struct.cstr&quot;&gt;&lt;code&gt;CStr&lt;/code&gt;&lt;/a&gt; represents a borrowed C string; it is what you would use to wrap a raw &lt;code&gt;*const &lt;/code&gt;&lt;a href=&quot;../primitive.u8&quot;&gt;&lt;code&gt;u8&lt;/code&gt;&lt;/a&gt; that you got from a C function. A &lt;a href=&quot;struct.cstr&quot;&gt;&lt;code&gt;CStr&lt;/code&gt;&lt;/a&gt; is guaranteed to be a nul-terminated array of bytes. Once you have a &lt;a href=&quot;struct.cstr&quot;&gt;&lt;code&gt;CStr&lt;/code&gt;&lt;/a&gt;, you can convert it to a Rust &lt;a href=&quot;../primitive.str&quot;&gt;&lt;code&gt;&amp;amp;str&lt;/code&gt;&lt;/a&gt; if it's valid UTF-8, or lossily convert it by adding replacement characters.</source>
          <target state="translated">&lt;strong&gt;C에서 Rust로 : &lt;/strong&gt;&lt;a href=&quot;struct.cstr&quot;&gt; &lt;code&gt;CStr&lt;/code&gt; &lt;/a&gt; 은 빌린 C 문자열을 나타냅니다. C 함수에서 얻은 원시 &lt;code&gt;*const &lt;/code&gt; &lt;a href=&quot;../primitive.u8&quot;&gt; &lt;code&gt;u8&lt;/code&gt; &lt;/a&gt; 을 래핑하는 데 사용할 것 입니다. &lt;a href=&quot;struct.cstr&quot;&gt; &lt;code&gt;CStr&lt;/code&gt; &lt;/a&gt; 바이트의 NUL 종료 배열이 보장됩니다. 당신은 일단 &lt;a href=&quot;struct.cstr&quot;&gt; &lt;code&gt;CStr&lt;/code&gt; &lt;/a&gt; , 당신은 녹로 변환 할 수 있습니다 &lt;a href=&quot;../primitive.str&quot;&gt; &lt;code&gt;&amp;amp;str&lt;/code&gt; &lt;/a&gt; 이 유효 UTF-8 인 경우, 또는 lossily 대체 문자를 추가하여 변환합니다.</target>
        </trans-unit>
        <trans-unit id="6a880c7c09fd0c1f69a3098a3095ef95bac0a546" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;From Rust to C:&lt;/strong&gt;&lt;a href=&quot;struct.cstring&quot;&gt;&lt;code&gt;CString&lt;/code&gt;&lt;/a&gt; represents an owned, C-friendly string: it is nul-terminated, and has no internal nul characters. Rust code can create a &lt;a href=&quot;struct.cstring&quot;&gt;&lt;code&gt;CString&lt;/code&gt;&lt;/a&gt; out of a normal string (provided that the string doesn't have nul characters in the middle), and then use a variety of methods to obtain a raw &lt;code&gt;*mut &lt;/code&gt;&lt;a href=&quot;../primitive.u8&quot;&gt;&lt;code&gt;u8&lt;/code&gt;&lt;/a&gt; that can then be passed as an argument to functions which use the C conventions for strings.</source>
          <target state="translated">&lt;strong&gt;Rust에서 C로 : &lt;/strong&gt;&lt;a href=&quot;struct.cstring&quot;&gt; &lt;code&gt;CString&lt;/code&gt; &lt;/a&gt; 은 소유되고 C에 친숙한 문자열을 나타냅니다. Null로 끝나고 내부 NUL 문자가 없습니다. 녹 코드는 일반 문자열 에서 &lt;a href=&quot;struct.cstring&quot;&gt; &lt;code&gt;CString&lt;/code&gt; &lt;/a&gt; 을 생성하고 (문자열에 중간에 널 문자가없는 경우) 다양한 메소드를 사용하여 원시 &lt;code&gt;*mut &lt;/code&gt; &lt;a href=&quot;../primitive.u8&quot;&gt; &lt;code&gt;u8&lt;/code&gt; &lt;/a&gt; 을 얻 습니다. 문자열에 C 규칙을 사용하는 함수</target>
        </trans-unit>
        <trans-unit id="c2238adb64a05e56adbe151507af6c19abcbbbc4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;From a Rust string&lt;/strong&gt;: &lt;code&gt;OsString&lt;/code&gt; implements &lt;a href=&quot;../convert/trait.from&quot;&gt;&lt;code&gt;From&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&amp;lt;&lt;/code&gt;&lt;a href=&quot;../string/struct.string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&amp;gt;&lt;/code&gt;, so you can use &lt;code&gt;my_string.from&lt;/code&gt; to create an &lt;code&gt;OsString&lt;/code&gt; from a normal Rust string.</source>
          <target state="translated">&lt;strong&gt;Rust 문자열에서&lt;/strong&gt; : &lt;code&gt;OsString&lt;/code&gt; 은 &lt;a href=&quot;../convert/trait.from&quot;&gt; &lt;code&gt;From&lt;/code&gt; &lt;/a&gt; &lt;code&gt;&amp;lt;&lt;/code&gt; &lt;a href=&quot;../string/struct.string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt; &lt;code&gt;&amp;gt;&lt;/code&gt; 을 구현 하므로 &lt;code&gt;my_string.from&lt;/code&gt; 을 사용하여 일반 Rust 문자열에서 &lt;code&gt;OsString&lt;/code&gt; 을 만들 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="adfbc9f4c9b7bf87cce69244480b633a8de2c39f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;From slices:&lt;/strong&gt; Just like you can start with an empty Rust &lt;a href=&quot;../string/struct.string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; and then &lt;a href=&quot;../string/struct.string#method.push_str&quot;&gt;&lt;code&gt;push_str&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&amp;amp;str&lt;/code&gt; sub-string slices into it, you can create an empty &lt;code&gt;OsString&lt;/code&gt; with the &lt;a href=&quot;#method.new&quot;&gt;&lt;code&gt;new&lt;/code&gt;&lt;/a&gt; method and then push string slices into it with the &lt;a href=&quot;#method.push&quot;&gt;&lt;code&gt;push&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">&lt;strong&gt;조각에서 :&lt;/strong&gt; 그냥 당신이 빈 녹 시작할 수와 같은 &lt;a href=&quot;../string/struct.string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt; 다음과 &lt;a href=&quot;../string/struct.string#method.push_str&quot;&gt; &lt;code&gt;push_str&lt;/code&gt; &lt;/a&gt; &lt;code&gt;&amp;amp;str&lt;/code&gt; 하위 문자열 조각 그것으로, 당신은 빈 만들 수 있습니다 &lt;code&gt;OsString&lt;/code&gt; 와 &lt;a href=&quot;#method.new&quot;&gt; &lt;code&gt;new&lt;/code&gt; &lt;/a&gt; 방법을 다음과 그것으로 문자열 조각을 밀어 &lt;a href=&quot;#method.push&quot;&gt; &lt;code&gt;push&lt;/code&gt; &lt;/a&gt; 방법.</target>
        </trans-unit>
        <trans-unit id="629ec911ccd79d718629d3b5e11521368319be97" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Internal nul characters&lt;/strong&gt; - When C strings have a nul terminator character, this usually means that they cannot have nul characters in the middle &amp;mdash; a nul character would essentially truncate the string. Rust strings &lt;em&gt;can&lt;/em&gt; have nul characters in the middle, because nul does not have to mark the end of the string in Rust.</source>
          <target state="translated">&lt;strong&gt;내부 널 문자&lt;/strong&gt; -C 문자열에 &lt;strong&gt;널&lt;/strong&gt; 종료 문자가있는 경우 일반적으로 중간에 &lt;strong&gt;널 문자&lt;/strong&gt; 를 사용할 수 없음을 의미합니다. 널 문자는 본질적으로 문자열을 자릅니다. Null은 Rust에서 문자열 의 끝을 표시 할 필요가 없기 때문에 Rust 문자열 &lt;em&gt;은&lt;/em&gt; 중간에 널 문자를 가질 &lt;em&gt;수&lt;/em&gt; 있습니다.</target>
        </trans-unit>
        <trans-unit id="b41d1a37bb22ed7e91444167c781b032f81cc870" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Modules&lt;/strong&gt; and &lt;strong&gt;use:&lt;/strong&gt; Let you control the organization, scope, and privacy of paths</source>
          <target state="translated">&lt;strong&gt;모듈&lt;/strong&gt; 및 &lt;strong&gt;사용 :&lt;/strong&gt; 경로의 조직, 범위 및 개인 정보를 제어 할 수 있습니다</target>
        </trans-unit>
        <trans-unit id="060d89d923956472cc05e7319b76fa9d50a7e876" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;NOTE: The third invariant is currently unenforced due to historical oversight and significant reliance on the behaviour. It is currently undecided what to do about this going forward. Macros that do not respect the behaviour may become invalid in a future edition of Rust. See the &lt;a href=&quot;https://github.com/rust-lang/rust/issues/56575&quot;&gt;tracking issue&lt;/a&gt;.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;참고 : 세 번째 불변은 현재 역사적 감독과 행동에 대한 상당한 의존으로 인해 시행되지 않습니다. 현재 이것에 대해 어떻게해야할지 결정되지 않았습니다. 동작을 존중하지 않는 매크로는 다음 버전의 Rust에서 유효하지 않을 수 있습니다. &lt;a href=&quot;https://github.com/rust-lang/rust/issues/56575&quot;&gt;추적 문제를&lt;/a&gt; 참조하십시오 .&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="379a60c8e2b4b827557b233553a6bc6c82683fa1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;NOTE&lt;/strong&gt;: If a parent of the given path doesn't exist, this function will return an error. To create a directory and all its missing parents at the same time, use the &lt;a href=&quot;fn.create_dir_all&quot;&gt;&lt;code&gt;create_dir_all&lt;/code&gt;&lt;/a&gt; function.</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; : 주어진 경로의 부모가 존재하지 않으면이 함수는 오류를 반환합니다. 디렉토리와 누락 된 모든 상위를 동시에 작성하려면 &lt;a href=&quot;fn.create_dir_all&quot;&gt; &lt;code&gt;create_dir_all&lt;/code&gt; &lt;/a&gt; 함수를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="6558cd07ee1a59a066bae7f1a7d1d4e7129c19ab" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note: This trait must not fail&lt;/strong&gt;. If the conversion can fail, use &lt;a href=&quot;trait.tryfrom&quot;&gt;&lt;code&gt;TryFrom&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;참고 :이 특성은 실패하지 않아야합니다&lt;/strong&gt; . 변환이 실패하면 &lt;a href=&quot;trait.tryfrom&quot;&gt; &lt;code&gt;TryFrom&lt;/code&gt; 을&lt;/a&gt; 사용 하십시오 .</target>
        </trans-unit>
        <trans-unit id="fc7fd5e949a51b13efc359ef4faae3bf584089ed" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note: This trait must not fail&lt;/strong&gt;. If the conversion can fail, use &lt;a href=&quot;trait.tryinto&quot;&gt;&lt;code&gt;TryInto&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;참고 :이 특성은 실패하지 않아야합니다&lt;/strong&gt; . 변환이 실패하면 &lt;a href=&quot;trait.tryinto&quot;&gt; &lt;code&gt;TryInto&lt;/code&gt; 를&lt;/a&gt; 사용 하십시오 .</target>
        </trans-unit>
        <trans-unit id="a5b6ef596678a6ec7ac86f37d73d853ca889a37a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note: This trait must not fail&lt;/strong&gt;. If the conversion can fail, use a dedicated method which returns an &lt;a href=&quot;../option/enum.option&quot;&gt;&lt;code&gt;Option&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/a&gt; or a &lt;a href=&quot;../result/enum.result&quot;&gt;&lt;code&gt;Result&amp;lt;T, E&amp;gt;&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;참고 :이 특성은 실패하지 않아야합니다&lt;/strong&gt; . 변환이 실패하면 &lt;a href=&quot;../option/enum.option&quot;&gt; &lt;code&gt;Option&amp;lt;T&amp;gt;&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;../result/enum.result&quot;&gt; &lt;code&gt;Result&amp;lt;T, E&amp;gt;&lt;/code&gt; &lt;/a&gt; 를 리턴하는 전용 메소드를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="9f7d81ecf2a6b96e00a858ce77d080e3c485f5c1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; If you need to borrow a string that was allocated by foreign code, use &lt;a href=&quot;struct.cstr&quot;&gt;&lt;code&gt;CStr&lt;/code&gt;&lt;/a&gt;. If you need to take ownership of a string that was allocated by foreign code, you will need to make your own provisions for freeing it appropriately, likely with the foreign code's API to do that.</source>
          <target state="translated">&lt;strong&gt;참고 :&lt;/strong&gt; 외부 코드로 할당 된 문자열을 빌려야하는 경우 &lt;a href=&quot;struct.cstr&quot;&gt; &lt;code&gt;CStr&lt;/code&gt; 을&lt;/a&gt; 사용하십시오 . 외부 코드에 의해 할당 된 문자열의 소유권을 가져야하는 경우, 외부 코드의 API를 사용하여 적절하게 해제하기위한 자체 규정을 작성해야합니다.</target>
        </trans-unit>
        <trans-unit id="bf68398fddb94f0a1abd51db31ce0b9347bd8495" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: Additional crates that ship with &lt;code&gt;rustc&lt;/code&gt;, such as &lt;a href=&quot;https://doc.rust-lang.org/proc_macro/index.html&quot;&gt;&lt;code&gt;proc_macro&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://doc.rust-lang.org/alloc/index.html&quot;&gt;&lt;code&gt;alloc&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;https://doc.rust-lang.org/test/index.html&quot;&gt;&lt;code&gt;test&lt;/code&gt;&lt;/a&gt;, are not automatically included with the &lt;code&gt;--extern&lt;/code&gt; flag when using Cargo. They must be brought into scope with an &lt;code&gt;extern crate&lt;/code&gt; declaration, even in the 2018 edition.</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; : 함께 제공하는 것이 추가 상자 &lt;code&gt;rustc&lt;/code&gt; 등, &lt;a href=&quot;https://doc.rust-lang.org/proc_macro/index.html&quot;&gt; &lt;code&gt;proc_macro&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;https://doc.rust-lang.org/alloc/index.html&quot;&gt; &lt;code&gt;alloc&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;https://doc.rust-lang.org/test/index.html&quot;&gt; &lt;code&gt;test&lt;/code&gt; &lt;/a&gt; 자동으로 포함되지 않은 &lt;code&gt;--extern&lt;/code&gt; 화물을 사용하는 경우 플래그. 그것들은 2018 년 판에서도 &lt;code&gt;extern crate&lt;/code&gt; 선언 으로 범위 안에 들어와야합니다.</target>
        </trans-unit>
        <trans-unit id="0e534aae954895e78357179a1ac94a40dd8cf86b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: For &lt;code&gt;rustc&lt;/code&gt;, arbitrary-set configuration options are set using the &lt;a href=&quot;https://doc.rust-lang.org/rustc/command-line-arguments.html#a--cfg-configure-the-compilation-environment&quot;&gt;&lt;code&gt;--cfg&lt;/code&gt;&lt;/a&gt; flag.</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; : &lt;code&gt;rustc&lt;/code&gt; 의 경우 임의 설정 구성 옵션은 &lt;a href=&quot;https://doc.rust-lang.org/rustc/command-line-arguments.html#a--cfg-configure-the-compilation-environment&quot;&gt; &lt;code&gt;--cfg&lt;/code&gt; &lt;/a&gt; 플래그를 사용하여 설정됩니다 .</target>
        </trans-unit>
        <trans-unit id="c424a34ea4d877226958104553992541e3787ae9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: In the past, the Rust community used the terms &quot;Unambiguous Function Call Syntax&quot;, &quot;Universal Function Call Syntax&quot;, or &quot;UFCS&quot;, in documentation, issues, RFCs, and other community writings. However, the term lacks descriptive power and potentially confuses the issue at hand. We mention it here for searchability's sake.</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; : 과거 Rust 커뮤니티는 문서, 문제, RFC 및 기타 커뮤니티 문서에서 &quot;명확한 함수 호출 구문&quot;, &quot;범용 함수 호출 구문&quot;또는 &quot;UFCS&quot;라는 용어를 사용했습니다. 그러나이 용어는 설명력이 부족하여 현재 문제를 혼동 할 수 있습니다. 검색 가능성을 위해 여기에 언급했습니다.</target>
        </trans-unit>
        <trans-unit id="2ee6a6f44b42148913ce05336e8333f03b878a8a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: On platforms that do not support receiving spin-loop hints this function does not do anything at all.</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; : 스핀 루프 힌트 수신을 지원하지 않는 플랫폼에서는이 기능이 전혀 작동하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="3cd7dc42d46fc1a7eaf8316e86e18b4771b7a37c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: Previous to &lt;code&gt;rustc&lt;/code&gt; 1.30, using &lt;code&gt;mod.rs&lt;/code&gt; files was the way to load a module with nested children. It is encouraged to use the new naming convention as it is more consistent, and avoids having many files named &lt;code&gt;mod.rs&lt;/code&gt; within a project.</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; : &lt;code&gt;rustc&lt;/code&gt; 1.30 이전 버전 에서는 &lt;code&gt;mod.rs&lt;/code&gt; 파일을 사용하여 중첩 된 하위가있는 모듈을로드했습니다. 새로운 이름 지정 규칙을보다 일관성있게 사용하는 것이 &lt;code&gt;mod.rs&lt;/code&gt; 프로젝트 내에 mod.rs 라는 많은 파일이 없어야 합니다.</target>
        </trans-unit>
        <trans-unit id="09dbeb2a0b5b6ab350517ca73457c241b60699f0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: The &lt;code&gt;cfg_attr&lt;/code&gt; can expand to another &lt;code&gt;cfg_attr&lt;/code&gt;. For example, &lt;code&gt;#[cfg_attr(linux, cfg_attr(feature = &quot;multithreaded&quot;, some_other_attribute))&lt;/code&gt; is valid. This example would be equivalent to &lt;code&gt;#[cfg_attr(all(linux, feature =&quot;multithreaded&quot;), some_other_attribute)]&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;주&lt;/strong&gt; : &lt;code&gt;cfg_attr&lt;/code&gt; 은 다른 &lt;code&gt;cfg_attr&lt;/code&gt; 로 확장 될 수 있습니다 . 예를 들어, &lt;code&gt;#[cfg_attr(linux, cfg_attr(feature = &quot;multithreaded&quot;, some_other_attribute))&lt;/code&gt; 가 유효합니다. 이 예제는 &lt;code&gt;#[cfg_attr(all(linux, feature =&quot;multithreaded&quot;), some_other_attribute)]&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="542e5e434f17a5e7fe96f177447ca260c03e5782" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: The &lt;code&gt;rustc&lt;/code&gt; test harness supports the &lt;code&gt;--include-ignored&lt;/code&gt; flag to force ignored tests to be run.</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; : &lt;code&gt;rustc&lt;/code&gt; 테스트 하네스는 &lt;code&gt;--include-ignored&lt;/code&gt; 플래그를 지원하여 무시 된 테스트를 강제로 실행합니다.</target>
        </trans-unit>
        <trans-unit id="2e578eea7529dc499f5ab70e8ee02f1a3a04f7e6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: This function returns an array of length 2, 4 or 8 bytes depending on the target pointer size.</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; :이 함수는 대상 포인터 크기에 따라 길이가 2, 4 또는 8 바이트 인 배열을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="204f556d6eb284d02edf2bf12e7415dff429dcbd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: This function takes an array of length 2, 4 or 8 bytes depending on the target pointer size.</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; :이 함수는 대상 포인터 크기에 따라 길이가 2, 4 또는 8 바이트 인 배열을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="205669dd54e34ac0f225ea4e8c1e039e92861b84" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: This is an example note.</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; :이 예제는 참고입니다.</target>
        </trans-unit>
        <trans-unit id="4f8175ab0b6ced026c78c226ce62e4e0326a00cb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: This method is currently implemented as a 0-cost cast, but it is planned to alter its definition in the future to perform the length calculation whenever this method is called.</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; :이 메소드는 현재 0 비용 캐스트로 구현되지만이 메소드가 호출 될 때마다 길이 계산을 수행하도록 나중에 정의를 변경할 계획입니다.</target>
        </trans-unit>
        <trans-unit id="9364ca407d4e4789b372b4d12ec8ebcdd47debe7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: This method is currently implemented as a constant-time cast, but it is planned to alter its definition in the future to perform the length calculation whenever this method is called.</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; :이 메소드는 현재 상수 시간 캐스트로 구현되지만이 메소드가 호출 될 때마다 길이 계산을 수행하도록 나중에 정의를 변경할 계획입니다.</target>
        </trans-unit>
        <trans-unit id="9acff81794f805a2a107dfa5d332d79517391aa9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: This method is currently implemented to check for validity after a constant-time cast, but it is planned to alter its definition in the future to perform the length calculation in addition to the UTF-8 check whenever this method is called.</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; :이 메소드는 현재 일정 시간 캐스트 후에 유효성을 검사하기 위해 구현되었지만이 메소드가 호출 될 때마다 UTF-8 검사 외에 길이 계산을 수행하도록 나중에 정의를 변경하려고합니다.</target>
        </trans-unit>
        <trans-unit id="d5c5be5853f961e5512f727adc94106859254411" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: This operation is intended to be a 0-cost cast but it is currently implemented with an up-front calculation of the length of the string. This is not guaranteed to always be the case.</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; :이 작업은 비용이 0 인 캐스트를 목표로하지만 현재 문자열 길이를 사전 계산하여 구현합니다. 항상 그런 것은 아닙니다.</target>
        </trans-unit>
        <trans-unit id="f5df3103e6447e1ad2ce9490f42afb19650917b3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: Undefined behavior affects the entire program. For example, calling a function in C that exhibits undefined behavior of C means your entire program contains undefined behaviour that can also affect the Rust code. And vice versa, undefined behavior in Rust can cause adverse affects on code executed by any FFI calls to other languages.</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; : 정의되지 않은 동작은 전체 프로그램에 영향을줍니다. 예를 들어 C에서 정의되지 않은 C 동작을 나타내는 함수를 호출하면 전체 프로그램에 Rust 코드에도 영향을 줄 수있는 정의되지 않은 동작이 포함됩니다. 반대로 Rust에서 정의되지 않은 동작은 다른 언어에 대한 FFI 호출로 실행 된 코드에 부정적인 영향을 줄 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9bf566863d0e6c1f93fa47ff736f9ade81dd38c3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: When using Cargo, Procedural macro crates are defined with the &lt;code&gt;proc-macro&lt;/code&gt; key in your manifest:</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; :화물을 사용할 때 절차 적 매크로 상자는 매니페스트 의 &lt;code&gt;proc-macro&lt;/code&gt; 키로 정의됩니다 .</target>
        </trans-unit>
        <trans-unit id="a7f8ef7c18d1ebc911a4b8802c9c294409605f53" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: Whitespace around the &lt;code&gt;=&lt;/code&gt; is ignored. &lt;code&gt;foo=&quot;bar&quot;&lt;/code&gt; and &lt;code&gt;foo = &quot;bar&quot;&lt;/code&gt; are equivalent configuration options.</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; : &lt;code&gt;=&lt;/code&gt; 주위의 공백 은 무시됩니다. &lt;code&gt;foo=&quot;bar&quot;&lt;/code&gt; 및 &lt;code&gt;foo = &quot;bar&quot;&lt;/code&gt; 는 동등한 구성 옵션입니다.</target>
        </trans-unit>
        <trans-unit id="ca0b8f99436f4b7d93b7e3e4bd936fecc9cacde1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: that the outer &lt;code&gt;match&lt;/code&gt; is used to ensure that any &lt;a href=&quot;../expressions#temporary-lifetimes&quot;&gt;temporary values&lt;/a&gt; in &lt;code&gt;iter_expr&lt;/code&gt; don't get dropped before the loop is finished. &lt;code&gt;next&lt;/code&gt; is declared before being assigned because it results in types being inferred correctly more often.</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; : 외부 것을 &lt;code&gt;match&lt;/code&gt; 모든 것을 보장하기 위해 사용되는 &lt;a href=&quot;../expressions#temporary-lifetimes&quot;&gt;임시 값&lt;/a&gt; 에 &lt;code&gt;iter_expr&lt;/code&gt; 는 루프가 완료되기 전에 떨어되지 않습니다. &lt;code&gt;next&lt;/code&gt; 는 타입이 더 정확하게 추론되기 때문에 할당되기 전에 선언됩니다.</target>
        </trans-unit>
        <trans-unit id="3d08b1d0d9771f64d914289f8a909594611ec769" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: this list is more restrictive than what you can write in regular constants</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; :이 목록은 일반 상수로 작성할 수있는 것보다 제한적입니다</target>
        </trans-unit>
        <trans-unit id="484956955d43e1da5356d63148d3bf3ffefed245" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Nul terminators and implicit string lengths&lt;/strong&gt; - Often, C strings are nul-terminated, i.e., they have a &lt;code&gt;\0&lt;/code&gt; character at the end. The length of a string buffer is not stored, but has to be calculated; to compute the length of a string, C code must manually call a function like &lt;code&gt;strlen()&lt;/code&gt; for &lt;code&gt;char&lt;/code&gt;-based strings, or &lt;code&gt;wcslen()&lt;/code&gt; for &lt;code&gt;wchar_t&lt;/code&gt;-based ones. Those functions return the number of characters in the string excluding the nul terminator, so the buffer length is really &lt;code&gt;len+1&lt;/code&gt; characters. Rust strings don't have a nul terminator; their length is always stored and does not need to be calculated. While in Rust accessing a string's length is a O(1) operation (because the length is stored); in C it is an O(length) operation because the length needs to be computed by scanning the string for the nul terminator.</source>
          <target state="translated">&lt;strong&gt;널 종결 자 및 암시 적 문자열 길이&lt;/strong&gt; -종종 C 문자열은 널로 종료됩니다. 즉, 끝에 &lt;code&gt;\0&lt;/code&gt; 문자가 있습니다. 문자열 버퍼의 길이는 저장되지 않지만 계산되어야합니다. 문자열의 길이를 계산하기 위해, C 코드를 수동으로 같은 함수를 호출해야합니다 &lt;code&gt;strlen()&lt;/code&gt; 에 대한 &lt;code&gt;char&lt;/code&gt; 문자열 기반, 또는 &lt;code&gt;wcslen()&lt;/code&gt; 에 대한 &lt;code&gt;wchar_t&lt;/code&gt; 를 기반 것. 이러한 함수는 null 종료자를 제외한 문자열의 문자 수를 반환하므로 버퍼 길이는 실제로 &lt;code&gt;len+1&lt;/code&gt; 입니다.문자. 녹 문자열에는 널 종결자가 없습니다. 길이는 항상 저장되므로 계산할 필요가 없습니다. Rust에서 문자열의 길이에 접근하는 것은 (길이가 저장되어 있기 때문에) O (1) 연산입니다; C에서는 길이가 널 종결 자에 대해 스캔하여 계산되어야하므로 O (길이) 연산입니다.</target>
        </trans-unit>
        <trans-unit id="b3a55015f9b574b249377781d35ad1256b26e09a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Packages:&lt;/strong&gt; A Cargo feature that lets you build, test, and share crates</source>
          <target state="translated">&lt;strong&gt;패키지 :&lt;/strong&gt; 상자를 제작, 테스트 및 공유 할 수있는화물 기능</target>
        </trans-unit>
        <trans-unit id="b9614e48c420558746aa5a195f1ca3514d9bdb89" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Panics&lt;/strong&gt;: The scenarios in which the function being documented could panic. Callers of the function who don&amp;rsquo;t want their programs to panic should make sure they don&amp;rsquo;t call the function in these situations.</source>
          <target state="translated">&lt;strong&gt;패닉&lt;/strong&gt; : 문서화되는 기능이 패닉 될 수있는 시나리오. 프로그램을 당황하게하지 않으려는 함수 호출자는 이러한 상황에서 함수를 호출하지 않아야합니다.</target>
        </trans-unit>
        <trans-unit id="48ddec251d4b93c950c826aa556ff50e924f3f09" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Paths:&lt;/strong&gt; A way of naming an item, such as a struct, function, or module</source>
          <target state="translated">&lt;strong&gt;경로 :&lt;/strong&gt; 구조체, 함수 또는 모듈과 같은 항목의 이름을 지정하는 방법</target>
        </trans-unit>
        <trans-unit id="481513e92d2c79e9922e6fdaeaecbe26904d2dbb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Safety&lt;/strong&gt;: If the function is &lt;code&gt;unsafe&lt;/code&gt; to call (we discuss unsafety in Chapter 19), there should be a section explaining why the function is unsafe and covering the invariants that the function expects callers to uphold.</source>
          <target state="translated">&lt;strong&gt;안전&lt;/strong&gt; : 함수가 호출하기 에 &lt;code&gt;unsafe&lt;/code&gt; 경우 (19 장의 안전 에 대해 논의), 함수가 안전하지 않은 이유를 설명하고 함수가 호출자가 유지할 것으로 예상되는 불변을 다루는 섹션이 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="7e43e997b28aeec3b9c71554f3cb60497761adcd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Supertraits&lt;/strong&gt; are traits that are required to be implemented for a type to implement a specific trait. Furthermore, anywhere a &lt;a href=&quot;generics&quot;&gt;generic&lt;/a&gt; or &lt;a href=&quot;../types/trait-object&quot;&gt;trait object&lt;/a&gt; is bounded by a trait, it has access to the associated items of its supertraits.</source>
          <target state="translated">&lt;strong&gt;초&lt;/strong&gt; 특성은 유형이 특정 특성을 구현하기 위해 구현되어야하는 특성입니다. 또한, &lt;a href=&quot;generics&quot;&gt;일반 &lt;/a&gt;&lt;a href=&quot;../types/trait-object&quot;&gt;객체&lt;/a&gt; 또는 특성 객체 가 특성에 의해 구속되는 곳이면, 해당 상위 특성의 관련 항목에 액세스 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8f3ae627337dcbcd948c51fd96893635d151265e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;This functon is deprecated.&lt;/strong&gt; Use &lt;a href=&quot;union.maybeuninit&quot;&gt;&lt;code&gt;MaybeUninit&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">&lt;strong&gt;이 기능은 더 이상 사용되지 않습니다. &lt;/strong&gt;사용 &lt;a href=&quot;union.maybeuninit&quot;&gt; &lt;code&gt;MaybeUninit&amp;lt;T&amp;gt;&lt;/code&gt; &lt;/a&gt; 대신.</target>
        </trans-unit>
        <trans-unit id="90d5331accb6d1f759b6d533c2ffbb7485074384" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;This method is soft-deprecated.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;이 방법은 더 이상 사용되지 않습니다.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7cd5055ffa46d984c313532603ca78647862a3d6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Unix&lt;/strong&gt;: On Unix-like platforms, it is unlikely that all 32 bits of &lt;code&gt;exit&lt;/code&gt; will be visible to a parent process inspecting the exit code. On most Unix-like platforms, only the eight least-significant bits are considered.</source>
          <target state="translated">&lt;strong&gt;유닉스 (Unix)&lt;/strong&gt; : 유닉스 계열의 플랫폼에서는 종료 코드를 검사하는 상위 프로세스가 모든 32 비트 &lt;code&gt;exit&lt;/code&gt; 를 볼 수 없을 것입니다. 대부분의 유닉스 계열 플랫폼에서는 8 개의 최하위 비트 만 고려됩니다.</target>
        </trans-unit>
        <trans-unit id="4c1aa9b3c8e196e8c2b0242b80db4f7600ac8956" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Version &amp;amp; Edition Differences&lt;/strong&gt;: Prior to Rust 1.30, &lt;code&gt;$crate&lt;/code&gt; and &lt;code&gt;local_inner_macros&lt;/code&gt; (below) were unsupported. They were added alongside path-based imports of macros (described above), to ensure that helper macros did not need to be manually imported by users of a macro-exporting crate. Crates written for earlier versions of Rust that use helper macros need to be modified to use &lt;code&gt;$crate&lt;/code&gt; or &lt;code&gt;local_inner_macros&lt;/code&gt; to work well with path-based imports.</source>
          <target state="translated">&lt;strong&gt;버전 및 에디션 차이&lt;/strong&gt; : Rust 1.30 이전에는 &lt;code&gt;$crate&lt;/code&gt; 및 &lt;code&gt;local_inner_macros&lt;/code&gt; (아래)가 지원되지 않았습니다. 매크로 내보내기 상자의 사용자가 도우미 매크로를 수동으로 가져올 필요가 없도록 경로 기반 매크로 가져 오기 (위에서 설명)와 함께 추가되었습니다. 도우미 매크로를 사용하는 이전 버전의 Rust 용으로 작성된 &lt;code&gt;$crate&lt;/code&gt; 는 경로 기반 가져 오기에서 잘 작동 하도록 $ crate 또는 &lt;code&gt;local_inner_macros&lt;/code&gt; 를 사용하도록 수정해야합니다 .</target>
        </trans-unit>
        <trans-unit id="a61fe7dcc9b944b7aa4bb3863418ae332c93ffba" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;WARNING&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;WARNING&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="70d92d3e972f8d8fddf85474fbc20df429ca9e9a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Warning&lt;/strong&gt;: While various forms of this were discussed in &lt;a href=&quot;https://github.com/rust-lang/rfcs/pull/1937&quot;&gt;RFC #1937&lt;/a&gt;, it was ultimately cut from that RFC, and thus this type is more subject to change even than the usual unstable item churn.</source>
          <target state="translated">&lt;strong&gt;경고&lt;/strong&gt; : &lt;a href=&quot;https://github.com/rust-lang/rfcs/pull/1937&quot;&gt;RFC # 1937&lt;/a&gt; 에서 다양한 형태가 논의되었지만 궁극적으로 RFC에서 제거되었으므로이 유형은 일반적인 불안정한 항목 변동보다 더 변경 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="430cf372e21694405a7f29b4ea7aae36bbc30335" translate="yes" xml:space="preserve">
          <source>&lt;sup&gt;1&lt;/sup&gt;</source>
          <target state="translated">&lt;sup&gt;1&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="0a5afaa9ee5bac968c87333877722aa1495b952b" translate="yes" xml:space="preserve">
          <source>&lt;sup&gt;2&lt;/sup&gt;</source>
          <target state="translated">&lt;sup&gt;2&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="a4ab7f7217b5214e279ea052fb2ed3cfbd58c8f2" translate="yes" xml:space="preserve">
          <source>A &quot;meta item&quot; is the syntax used for the &lt;em&gt;Attr&lt;/em&gt; rule by most &lt;a href=&quot;attributes#built-in-attributes-index&quot;&gt;built-in attributes&lt;/a&gt; and the &lt;a href=&quot;macros-by-example&quot;&gt;&lt;code&gt;meta&lt;/code&gt; macro fragment specifier&lt;/a&gt;. It has the following grammar:</source>
          <target state="translated">&quot;메타 항목&quot;은 대부분의 &lt;a href=&quot;attributes#built-in-attributes-index&quot;&gt;기본 제공 속성&lt;/a&gt; 및 &lt;a href=&quot;macros-by-example&quot;&gt; &lt;code&gt;meta&lt;/code&gt; &lt;/a&gt; 매크로 조각 지정자 에서 &lt;em&gt;Attr&lt;/em&gt; 규칙에 사용되는 구문 입니다. 문법은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="22d3a6ec1e16d0b77c16e420bbe8e26c33c2811f" translate="yes" xml:space="preserve">
          <source>A &quot;stack allocated string&quot;:</source>
          <target state="translated">&quot;스택 할당 문자열&quot;:</target>
        </trans-unit>
        <trans-unit id="b64a876ef415d016ec9dc92ffaf76e9ab89ca04f" translate="yes" xml:space="preserve">
          <source>A 'radix' here is sometimes also called a 'base'. A radix of two indicates a binary number, a radix of ten, decimal, and a radix of sixteen, hexadecimal, to give some common values. Arbitrary radices are supported.</source>
          <target state="translated">여기서 '기수'는 때때로 '베이스'라고도합니다. 2의 기수는 2 진 수, 10의 기수, 10 진수 및 16의 16 진 기수를 나타내며 공통 값을 제공합니다. 임의의 기수가 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="41c53bc2a64d3e62babdedd9c3047a7e08995ee3" translate="yes" xml:space="preserve">
          <source>A (half-open) range bounded inclusively below and exclusively above (&lt;code&gt;start..end&lt;/code&gt;).</source>
          <target state="translated">(반 개방) 범위는 ( &lt;code&gt;start..end&lt;/code&gt; ) 아래 및 배타적으로 포함됩니다 .</target>
        </trans-unit>
        <trans-unit id="c1847a494c164bc5812c67ca50bfe2768f6e254d" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;../expressions/closure-expr&quot;&gt;closure expression&lt;/a&gt; produces a closure value with a unique, anonymous type that cannot be written out. A closure type is approximately equivalent to a struct which contains the captured variables. For instance, the following closure:</source>
          <target state="translated">&lt;a href=&quot;../expressions/closure-expr&quot;&gt;폐쇄 식을&lt;/a&gt; 기입 할 수없는 고유 한 익명 형식으로 폐쇄 값을 생성합니다. 클로저 유형은 캡처 된 변수를 포함하는 구조체와 거의 같습니다. 예를 들어, 다음 클로저 :</target>
        </trans-unit>
        <trans-unit id="3cfb72d2748a10ee8855d86ad887d39ff3f43dfe" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;../paths&quot;&gt;path&lt;/a&gt; used as an expression context denotes either a local variable or an item. Path expressions that resolve to local or static variables are &lt;a href=&quot;../expressions#place-expressions-and-value-expressions&quot;&gt;place expressions&lt;/a&gt;, other paths are &lt;a href=&quot;../expressions#place-expressions-and-value-expressions&quot;&gt;value expressions&lt;/a&gt;. Using a &lt;a href=&quot;../items/static-items#mutable-statics&quot;&gt;&lt;code&gt;static mut&lt;/code&gt;&lt;/a&gt; variable requires an &lt;a href=&quot;block-expr#unsafe-blocks&quot;&gt;&lt;code&gt;unsafe&lt;/code&gt; block&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../paths&quot;&gt;클리핑&lt;/a&gt; 식 컨텍스트 나타낸다 로컬 변수 있거나 항목으로서 사용된다. 로컬 또는 정적 변수로 해석되는 경로 표현식은 &lt;a href=&quot;../expressions#place-expressions-and-value-expressions&quot;&gt;장소 표현식&lt;/a&gt; 이고 다른 경로는 &lt;a href=&quot;../expressions#place-expressions-and-value-expressions&quot;&gt;값 표현식&lt;/a&gt; 입니다. 사용하여 A &lt;a href=&quot;../items/static-items#mutable-statics&quot;&gt; &lt;code&gt;static mut&lt;/code&gt; &lt;/a&gt; 변수 것은 필요 &lt;a href=&quot;block-expr#unsafe-blocks&quot;&gt; &lt;code&gt;unsafe&lt;/code&gt; 블록&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="8c135626ccc454eee440ccf3a13f0ec15be919ba" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;../primitive.char&quot;&gt;&lt;code&gt;char&lt;/code&gt;&lt;/a&gt; is a &lt;a href=&quot;http://www.unicode.org/glossary/#unicode_scalar_value&quot;&gt;Unicode Scalar Value&lt;/a&gt;, which means that it is a &lt;a href=&quot;http://www.unicode.org/glossary/#code_point&quot;&gt;Code Point&lt;/a&gt;, but only ones within a certain range. &lt;code&gt;MAX&lt;/code&gt; is the highest valid code point that's a valid &lt;a href=&quot;http://www.unicode.org/glossary/#unicode_scalar_value&quot;&gt;Unicode Scalar Value&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../primitive.char&quot;&gt; &lt;code&gt;char&lt;/code&gt; &lt;/a&gt; A는 &lt;a href=&quot;http://www.unicode.org/glossary/#unicode_scalar_value&quot;&gt;유니 코드 스칼라 값&lt;/a&gt; 하는 그것이 있다는 것을 의미, &lt;a href=&quot;http://www.unicode.org/glossary/#code_point&quot;&gt;코드 포인트&lt;/a&gt; 하지만, 특정 범위 내에서 유일한 사람. &lt;code&gt;MAX&lt;/code&gt; 는 유효한 &lt;a href=&quot;http://www.unicode.org/glossary/#unicode_scalar_value&quot;&gt;유니 코드 스칼라 값인&lt;/a&gt; 가장 높은 유효한 코드 포인트입니다 .</target>
        </trans-unit>
        <trans-unit id="817aefb1123a860203996fe1bc087199cf9a9301" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;fn.null&quot;&gt;null&lt;/a&gt; pointer is &lt;em&gt;never&lt;/em&gt; valid, not even for accesses of &lt;a href=&quot;https://doc.rust-lang.org/nomicon/exotic-sizes.html#zero-sized-types-zsts&quot;&gt;size zero&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;fn.null&quot;&gt;널&lt;/a&gt; 포인터는 &lt;em&gt;결코&lt;/em&gt; 조차의 액세스에 대한 유효한 &lt;a href=&quot;https://doc.rust-lang.org/nomicon/exotic-sizes.html#zero-sized-types-zsts&quot;&gt;크기 제로&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="64470c49d997c71e612fbbb1108517461ba5028e" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;items/associated-items#methods&quot;&gt;method&lt;/a&gt; defined in an &lt;a href=&quot;items/implementations#inherent-implementations&quot;&gt;inherent implementation&lt;/a&gt;, not in a trait implementation.</source>
          <target state="translated">&lt;a href=&quot;items/associated-items#methods&quot;&gt;방법은&lt;/a&gt; 에 정의 된 &lt;a href=&quot;items/implementations#inherent-implementations&quot;&gt;고유 구현&lt;/a&gt; 하지 않는 특성 구현에.</target>
        </trans-unit>
        <trans-unit id="2929c70726dc937049a9f5950f13c4723ad1c193" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;loop-expr#infinite-loops&quot;&gt;&lt;code&gt;loop&lt;/code&gt; expression&lt;/a&gt; denotes an infinite loop.</source>
          <target state="translated">&lt;a href=&quot;loop-expr#infinite-loops&quot;&gt; &lt;code&gt;loop&lt;/code&gt; 발현은&lt;/a&gt; 무한 루프를 나타낸다.</target>
        </trans-unit>
        <trans-unit id="e86e93a58bbbbc71c44b9b885a659ff826ce9490" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;loop-expr#iterator-loops&quot;&gt;&lt;code&gt;for&lt;/code&gt; expression&lt;/a&gt; extracts values from an iterator, looping until the iterator is empty.</source>
          <target state="translated">&lt;a href=&quot;loop-expr#iterator-loops&quot;&gt; &lt;code&gt;for&lt;/code&gt; 표현&lt;/a&gt; 반복자가 빌 때까지 반복 반복자에서 추출 값.</target>
        </trans-unit>
        <trans-unit id="78d2df8a50ce969bca66a5211eeeb6570b3f1784" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;loop-expr#predicate-loops&quot;&gt;&lt;code&gt;while&lt;/code&gt; expression&lt;/a&gt; loops until a predicate is false.</source>
          <target state="translated">A는 &lt;a href=&quot;loop-expr#predicate-loops&quot;&gt; &lt;code&gt;while&lt;/code&gt; 표현&lt;/a&gt; 루프 술어가 거짓이 될 때까지.</target>
        </trans-unit>
        <trans-unit id="506fd8c66fe2c3330ab3ababc69a27680d58db08" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;loop-expr#predicate-pattern-loops&quot;&gt;&lt;code&gt;while let&lt;/code&gt; expression&lt;/a&gt; tests a pattern.</source>
          <target state="translated">&lt;a href=&quot;loop-expr#predicate-pattern-loops&quot;&gt; &lt;code&gt;while let&lt;/code&gt; 표현&lt;/a&gt; 패턴을 테스트합니다.</target>
        </trans-unit>
        <trans-unit id="8b1f2559cf32a60aeffbe295d8dcc8b7d2d1bc74" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;struct.path&quot;&gt;&lt;code&gt;Path&lt;/code&gt;&lt;/a&gt; might contain non-Unicode data. This &lt;code&gt;struct&lt;/code&gt; implements the &lt;a href=&quot;../fmt/trait.display&quot;&gt;&lt;code&gt;Display&lt;/code&gt;&lt;/a&gt; trait in a way that mitigates that. It is created by the &lt;a href=&quot;struct.path#method.display&quot;&gt;&lt;code&gt;display&lt;/code&gt;&lt;/a&gt; method on &lt;a href=&quot;struct.path&quot;&gt;&lt;code&gt;Path&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;struct.path&quot;&gt; &lt;code&gt;Path&lt;/code&gt; &lt;/a&gt; 유니 코드가 아닌 데이터를 포함 할 수 있습니다. 이 &lt;code&gt;struct&lt;/code&gt; 는 &lt;a href=&quot;../fmt/trait.display&quot;&gt; &lt;code&gt;Display&lt;/code&gt; &lt;/a&gt; 특성을 완화하는 방식으로 구현합니다 . &lt;a href=&quot;struct.path&quot;&gt; &lt;code&gt;Path&lt;/code&gt; &lt;/a&gt; 의 &lt;a href=&quot;struct.path#method.display&quot;&gt; &lt;code&gt;display&lt;/code&gt; &lt;/a&gt; 방법으로 작성됩니다 .</target>
        </trans-unit>
        <trans-unit id="8ad6cb9fb2de3ff94c9692c27c57c7195ec6d6cb" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;struct.pin&quot;&gt;&lt;code&gt;Pin&amp;lt;P&amp;gt;&lt;/code&gt;&lt;/a&gt; ensures that the pointee of any pointer type &lt;code&gt;P&lt;/code&gt; has a stable location in memory, meaning it cannot be moved elsewhere and its memory cannot be deallocated until it gets dropped. We say that the pointee is &quot;pinned&quot;.</source>
          <target state="translated">&lt;a href=&quot;struct.pin&quot;&gt; &lt;code&gt;Pin&amp;lt;P&amp;gt;&lt;/code&gt; &lt;/a&gt; 모든 포인터 타입의 pointee되도록 &lt;code&gt;P&lt;/code&gt; 가 다른 곳으로 이동 될 수없고 떨어 때까지 메모리가 해제 될 수없는 것을 의미 메모리 안정된 위치에있다. 우리는 그 포인트가 고정되어 있다고 말합니다.</target>
        </trans-unit>
        <trans-unit id="a15e8cc8aa6158fcb3389cfdaf6e7e84bacae80c" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;struct.sender&quot;&gt;&lt;code&gt;Sender&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;struct.syncsender&quot;&gt;&lt;code&gt;SyncSender&lt;/code&gt;&lt;/a&gt; is used to send data to a &lt;a href=&quot;struct.receiver&quot;&gt;&lt;code&gt;Receiver&lt;/code&gt;&lt;/a&gt;. Both senders are clone-able (multi-producer) such that many threads can send simultaneously to one receiver (single-consumer).</source>
          <target state="translated">&lt;a href=&quot;struct.sender&quot;&gt; &lt;code&gt;Sender&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;struct.syncsender&quot;&gt; &lt;code&gt;SyncSender&lt;/code&gt; 는&lt;/a&gt; (A)에 데이터를 전송하는 데 사용되는 &lt;a href=&quot;struct.receiver&quot;&gt; &lt;code&gt;Receiver&lt;/code&gt; &lt;/a&gt; . 두 발신자 모두 복제 가능 (다중 생산자)이므로 많은 스레드가 한 수신자 (단일 소비자)에게 동시에 보낼 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e878b6c48911644ea2ee908e204d14d9ba8414f3" translate="yes" xml:space="preserve">
          <source>A &lt;code id=&quot;a-worker-struct-responsible-for-sending-code-from-the-threadpool-to-a-thread&quot;&gt;Worker&lt;/code&gt; Struct Responsible for Sending Code from the &lt;code&gt;ThreadPool&lt;/code&gt; to a Thread</source>
          <target state="translated">&lt;code&gt;ThreadPool&lt;/code&gt; 에서 스레드 로 코드를 보내는 책임이 있는 &lt;code id=&quot;a-worker-struct-responsible-for-sending-code-from-the-threadpool-to-a-thread&quot;&gt;Worker&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="cb1329292e0705741bc6efb49bebc4980736dafb" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;#![feature]&lt;/code&gt; attribute was declared for a feature that is stable in the current edition, but not in all editions.</source>
          <target state="translated">&lt;code&gt;#![feature]&lt;/code&gt; 속성이 있지만 모든 버전에서 현재 버전에서 안정 기능에 대한 선언했다.</target>
        </trans-unit>
        <trans-unit id="aaa8a708af81269c0b5576d02729333db199fa1d" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;#![feature]&lt;/code&gt; attribute was declared multiple times.</source>
          <target state="translated">&lt;code&gt;#![feature]&lt;/code&gt; 속성은 여러 번 선언했다.</target>
        </trans-unit>
        <trans-unit id="12a617fa960129a71a59055ffc0553333e4d1938" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;#[marker]&lt;/code&gt; trait contained an associated item.</source>
          <target state="translated">&lt;code&gt;#[marker]&lt;/code&gt; 특성은 연관된 항목을 포함 하였다.</target>
        </trans-unit>
        <trans-unit id="0a9d6b916ce0da508f854e05a1feec7e0befaef9" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;#[repr(inttype)]&lt;/code&gt; must be provided on an &lt;code&gt;enum&lt;/code&gt; if it has a non-unit variant with a discriminant, or where there are both unit variants with discriminants and non-unit variants. This restriction ensures that there is a well-defined way to extract a variant's discriminant from a value; for instance:</source>
          <target state="translated">&lt;code&gt;#[repr(inttype)]&lt;/code&gt; 온 제공해야 &lt;code&gt;enum&lt;/code&gt; 그것이 판별 가진 비 단위 변형이있는 경우, 또는이 두 곳 유닛 판별 식 및 비 변형 부 변이체. 이 제한은 값에서 변형의 판별 변수를 추출하는 잘 정의 된 방법을 보장합니다. 예를 들어 :</target>
        </trans-unit>
        <trans-unit id="c012898141fc2cec018c7c222ae43346e5dd5f44" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;&amp;amp;T&lt;/code&gt; reference can be released to safe code and there it can co-exist with other &lt;code&gt;&amp;amp;T&lt;/code&gt; references, but not with a &lt;code&gt;&amp;amp;mut T&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&amp;amp;T&lt;/code&gt; 참조 안전 코드에 출시 될 수 있으며이 공존 할 수있는 다른과 &lt;code&gt;&amp;amp;T&lt;/code&gt; 아니지만과, 참고 문헌 &lt;code&gt;&amp;amp;mut T&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3ec5710ef1f0b84eb29b3c1cc1f924e822fb56fa" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;&amp;amp;mut T&lt;/code&gt; reference may be released to safe code provided neither other &lt;code&gt;&amp;amp;mut T&lt;/code&gt; nor &lt;code&gt;&amp;amp;T&lt;/code&gt; co-exist with it. A &lt;code&gt;&amp;amp;mut T&lt;/code&gt; must always be unique.</source>
          <target state="translated">&lt;code&gt;&amp;amp;mut T&lt;/code&gt; 기준은 어느 다른 제공된 안전한 코드로 방출 될 수있다 &lt;code&gt;&amp;amp;mut T&lt;/code&gt; 나 &lt;code&gt;&amp;amp;T&lt;/code&gt; 그것과 공존. &lt;code&gt;&amp;amp;mut T&lt;/code&gt; 항상 고유해야합니다.</target>
        </trans-unit>
        <trans-unit id="40585fc29df20c1219babfcdddcfc95974719e32" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;&amp;amp;str&lt;/code&gt; is made up of two components: a pointer to some bytes, and a length. You can look at these with the &lt;a href=&quot;#method.as_ptr&quot;&gt;&lt;code&gt;as_ptr&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#method.len&quot;&gt;&lt;code&gt;len&lt;/code&gt;&lt;/a&gt; methods:</source>
          <target state="translated">&lt;code&gt;&amp;amp;str&lt;/code&gt; 몇 바이트에 대한 포인터와 길이 : 두 가지 구성 요소로 구성되어 있습니다. &lt;a href=&quot;#method.as_ptr&quot;&gt; &lt;code&gt;as_ptr&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#method.len&quot;&gt; &lt;code&gt;len&lt;/code&gt; &lt;/a&gt; 메소드를 사용하여 이를 확인할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="35fb8d8640dfbea523c47310a34e3d854229d236" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;BarrierWaitResult&lt;/code&gt; is returned by &lt;a href=&quot;struct.barrier#method.wait&quot;&gt;&lt;code&gt;wait&lt;/code&gt;&lt;/a&gt; when all threads in the &lt;a href=&quot;struct.barrier&quot;&gt;&lt;code&gt;Barrier&lt;/code&gt;&lt;/a&gt; have rendezvoused.</source>
          <target state="translated">&lt;code&gt;BarrierWaitResult&lt;/code&gt; 은 에 의해 반환되는 &lt;a href=&quot;struct.barrier#method.wait&quot;&gt; &lt;code&gt;wait&lt;/code&gt; &lt;/a&gt; 의 모든 스레드 때 &lt;a href=&quot;struct.barrier&quot;&gt; &lt;code&gt;Barrier&lt;/code&gt; &lt;/a&gt; 랑데부했다.</target>
        </trans-unit>
        <trans-unit id="a33fe1ab5786729bf200982553a4a40b28677c12" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;BufRead&lt;/code&gt; is a type of &lt;code&gt;Read&lt;/code&gt;er which has an internal buffer, allowing it to perform extra ways of reading.</source>
          <target state="translated">&lt;code&gt;BufRead&lt;/code&gt; 은 의 유형입니다 &lt;code&gt;Read&lt;/code&gt; 는 읽기의 추가 방법을 수행 할 수 있도록, 내부 버퍼를 가지고 어.</target>
        </trans-unit>
        <trans-unit id="c2a7d564e1881467808b1da26fc7f621d550ac35" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;BuildHasher&lt;/code&gt; is typically used (e.g., by &lt;a href=&quot;../collections/struct.hashmap&quot;&gt;&lt;code&gt;HashMap&lt;/code&gt;&lt;/a&gt;) to create &lt;a href=&quot;trait.hasher&quot;&gt;&lt;code&gt;Hasher&lt;/code&gt;&lt;/a&gt;s for each key such that they are hashed independently of one another, since &lt;a href=&quot;trait.hasher&quot;&gt;&lt;code&gt;Hasher&lt;/code&gt;&lt;/a&gt;s contain state.</source>
          <target state="translated">&lt;code&gt;BuildHasher&lt;/code&gt; 는 일반적으로 (기준, 예를 들어 사용 &lt;a href=&quot;../collections/struct.hashmap&quot;&gt; &lt;code&gt;HashMap&lt;/code&gt; &lt;/a&gt; 만들) &lt;a href=&quot;trait.hasher&quot;&gt; &lt;code&gt;Hasher&lt;/code&gt; &lt;/a&gt; 때문에, 그들은 서로 독립적으로 해싱하는 각 키에 대한 예들 &lt;a href=&quot;trait.hasher&quot;&gt; &lt;code&gt;Hasher&lt;/code&gt; &lt;/a&gt; 들 상태를 포함한다.</target>
        </trans-unit>
        <trans-unit id="5ac6d9ca4b25b818aa6f9cb17715ea50c25bf2ef" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;CString&lt;/code&gt; is created from either a byte slice or a byte vector, or anything that implements &lt;a href=&quot;../convert/trait.into&quot;&gt;&lt;code&gt;Into&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&amp;lt;&lt;/code&gt;&lt;a href=&quot;../vec/struct.vec&quot;&gt;&lt;code&gt;Vec&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&amp;lt;&lt;/code&gt;&lt;a href=&quot;../primitive.u8&quot;&gt;&lt;code&gt;u8&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&amp;gt;&amp;gt;&lt;/code&gt; (for example, you can build a &lt;code&gt;CString&lt;/code&gt; straight out of a &lt;a href=&quot;../string/struct.string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; or a &lt;a href=&quot;../primitive.str&quot;&gt;&lt;code&gt;&amp;amp;str&lt;/code&gt;&lt;/a&gt;, since both implement that trait).</source>
          <target state="translated">&lt;code&gt;CString&lt;/code&gt; 을은 바이트 슬라이스 또는 바이트 벡터, 또는 아무것도 중 하나에서 생성되는 구현 &lt;a href=&quot;../convert/trait.into&quot;&gt; &lt;code&gt;Into&lt;/code&gt; &lt;/a&gt; &lt;code&gt;&amp;lt;&lt;/code&gt; &lt;a href=&quot;../vec/struct.vec&quot;&gt; &lt;code&gt;Vec&lt;/code&gt; &lt;/a&gt; &lt;code&gt;&amp;lt;&lt;/code&gt; &lt;a href=&quot;../primitive.u8&quot;&gt; &lt;code&gt;u8&lt;/code&gt; &lt;/a&gt; &lt;code&gt;&amp;gt;&amp;gt;&lt;/code&gt; (예를 들어, 당신이 만들 수 &lt;code&gt;CString&lt;/code&gt; 을을 똑바로 밖으로의 &lt;a href=&quot;../string/struct.string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;../primitive.str&quot;&gt; &lt;code&gt;&amp;amp;str&lt;/code&gt; &lt;/a&gt; 모두 그 특성을 구현하기 때문에,).</target>
        </trans-unit>
        <trans-unit id="bef22157720da42f049eda44831ae9039ff96672" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Component&lt;/code&gt; roughly corresponds to a substring between path separators (&lt;code&gt;/&lt;/code&gt; or ).</source>
          <target state="translated">&lt;code&gt;Component&lt;/code&gt; 대략 경로 분리기 (문자열 사이에 상당 &lt;code&gt;/&lt;/code&gt; OR).</target>
        </trans-unit>
        <trans-unit id="592f6bf36d948cda2dbd34364696113591fa1887" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Cursor&lt;/code&gt; wraps an in-memory buffer and provides it with a &lt;a href=&quot;trait.seek&quot;&gt;&lt;code&gt;Seek&lt;/code&gt;&lt;/a&gt; implementation.</source>
          <target state="translated">&lt;code&gt;Cursor&lt;/code&gt; 메모리 내 버퍼 랩과 함께 제공 &lt;a href=&quot;trait.seek&quot;&gt; &lt;code&gt;Seek&lt;/code&gt; &lt;/a&gt; 구현.</target>
        </trans-unit>
        <trans-unit id="a89cb140638fa3cd771cb02496374d776ad6d007" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Duration&lt;/code&gt; type to represent a span of time, typically used for system timeouts.</source>
          <target state="translated">&lt;code&gt;Duration&lt;/code&gt; 유형은 일반적으로 시스템 시간 제한에 사용되는 시간의 범위를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="e39d340a59cb5b2bb2e11548f7d50ffd50cdcaa5" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Formatter&lt;/code&gt; represents various options related to formatting. Users do not construct &lt;code&gt;Formatter&lt;/code&gt;s directly; a mutable reference to one is passed to the &lt;code&gt;fmt&lt;/code&gt; method of all formatting traits, like &lt;a href=&quot;trait.debug&quot;&gt;&lt;code&gt;Debug&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;trait.display&quot;&gt;&lt;code&gt;Display&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;Formatter&lt;/code&gt; 포맷과 관련된 다양한 옵션을 의미합니다. 사용자는 &lt;code&gt;Formatter&lt;/code&gt; 를 직접 구성하지 않습니다 . 하나에 대한 변경 가능한 참조는 &lt;a href=&quot;trait.debug&quot;&gt; &lt;code&gt;Debug&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;trait.display&quot;&gt; &lt;code&gt;Display&lt;/code&gt; &lt;/a&gt; 와 같은 모든 형식화 특성 의 &lt;code&gt;fmt&lt;/code&gt; 메소드로 전달됩니다 .</target>
        </trans-unit>
        <trans-unit id="921821ce37ee7be55d1f4cd9ec14a09989a7422f" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;HashMap&lt;/code&gt; with fixed list of elements can be initialized from an array:</source>
          <target state="translated">고정 요소 목록이 있는 &lt;code&gt;HashMap&lt;/code&gt; 은 배열에서 초기화 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9e3e7578434780dbd4d9d999f38a9955ea8f8204" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;HashSet&lt;/code&gt; with fixed list of elements can be initialized from an array:</source>
          <target state="translated">&lt;code&gt;HashSet&lt;/code&gt; 의 요소 고정리스트가 배열에서 초기화 될 수있다 :</target>
        </trans-unit>
        <trans-unit id="9b7c01af6b5011fee801753cdfcb67030ddd18ba" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;JoinHandle&lt;/code&gt;&lt;em&gt;detaches&lt;/em&gt; the associated thread when it is dropped, which means that there is no longer any handle to thread and no way to &lt;code&gt;join&lt;/code&gt; on it.</source>
          <target state="translated">&lt;code&gt;JoinHandle&lt;/code&gt; 는&lt;em&gt;분리&lt;/em&gt; 가 더 이상 스레드 어떤 핸들 할 수있는 방법이 있다고하는 수단 제거 될 때 관련 스레드 &lt;code&gt;join&lt;/code&gt; 거기에있다.</target>
        </trans-unit>
        <trans-unit id="134a2452be93d4c2cdb1b9f1f0542b4b65ecae3d" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;LocalKey&lt;/code&gt;'s initializer cannot recursively depend on itself, and using a &lt;code&gt;LocalKey&lt;/code&gt; in this way will cause the initializer to infinitely recurse on the first call to &lt;code&gt;with&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;LocalKey&lt;/code&gt; 의 초기화는 재귀 자체에 의존하지 수 있으며, 사용 &lt;code&gt;LocalKey&lt;/code&gt; 을 이런 식으로하는 최초의 호출에 무한 같이 Recurse에 초기화 원인이됩니다 &lt;code&gt;with&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c72c40c2b2da09870992c3f25ebf2fd884c3cef5" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Match&lt;/code&gt; result needs to contain the whole matched pattern, however &lt;code&gt;Reject&lt;/code&gt; results may be split up into arbitrary many adjacent fragments. Both ranges may have zero length.</source>
          <target state="translated">&lt;code&gt;Match&lt;/code&gt; 결과 그러나, 전체 매칭 패턴을 포함 할 필요가 &lt;code&gt;Reject&lt;/code&gt; 결과는 임의의 다수의 인접한 조각으로 분할 될 수있다. 두 범위 모두 길이가 0 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5668f2d21fa477474ed4b8f6c89c068e50ff97ac" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Pattern&amp;lt;'a&amp;gt;&lt;/code&gt; expresses that the implementing type can be used as a string pattern for searching in a &lt;code&gt;&amp;amp;'a str&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Pattern&amp;lt;'a&amp;gt;&lt;/code&gt; 표현하는 형태가 구현에 검색하는 문자열 패턴으로서 사용될 수 &lt;code&gt;&amp;amp;'a str&lt;/code&gt; .</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
