<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="rust">
    <body>
      <group id="rust">
        <trans-unit id="691499df965f712a43ae65c1614c977032337079" translate="yes" xml:space="preserve">
          <source>Skip::product</source>
          <target state="translated">Skip::product</target>
        </trans-unit>
        <trans-unit id="2cfb56bc1abe3ee9eacbe6e1bf0440aeda494cd5" translate="yes" xml:space="preserve">
          <source>Skip::rev</source>
          <target state="translated">Skip::rev</target>
        </trans-unit>
        <trans-unit id="0480cefdfad343de236e3b69c19f0c4377b5e322" translate="yes" xml:space="preserve">
          <source>Skip::rfind</source>
          <target state="translated">Skip::rfind</target>
        </trans-unit>
        <trans-unit id="769a4497620dd9facd3c69ccfc0dad2e78eafc81" translate="yes" xml:space="preserve">
          <source>Skip::rfold</source>
          <target state="translated">Skip::rfold</target>
        </trans-unit>
        <trans-unit id="932d2a0b7f9aa1aa05317836e0f63443976068eb" translate="yes" xml:space="preserve">
          <source>Skip::rposition</source>
          <target state="translated">Skip::rposition</target>
        </trans-unit>
        <trans-unit id="a721c32fcaf7b2dbd6fab9a691bffaa10e317dcb" translate="yes" xml:space="preserve">
          <source>Skip::scan</source>
          <target state="translated">Skip::scan</target>
        </trans-unit>
        <trans-unit id="019356e9e0e60bb58c85bb7605bb1dff8fbb644b" translate="yes" xml:space="preserve">
          <source>Skip::size_hint</source>
          <target state="translated">Skip::size_hint</target>
        </trans-unit>
        <trans-unit id="605b884d4e68ad0652454fe028c2b2b2d0bf1f55" translate="yes" xml:space="preserve">
          <source>Skip::skip</source>
          <target state="translated">Skip::skip</target>
        </trans-unit>
        <trans-unit id="a84c497b977bf164cf38b614420a401bf122afec" translate="yes" xml:space="preserve">
          <source>Skip::skip_while</source>
          <target state="translated">Skip::skip_while</target>
        </trans-unit>
        <trans-unit id="72c015c31df7b28c6bf48d72fcf7687cd5cc5f08" translate="yes" xml:space="preserve">
          <source>Skip::step_by</source>
          <target state="translated">Skip::step_by</target>
        </trans-unit>
        <trans-unit id="b24eeb276057c34c15267d264cdde7e24b28e94c" translate="yes" xml:space="preserve">
          <source>Skip::sum</source>
          <target state="translated">Skip::sum</target>
        </trans-unit>
        <trans-unit id="786fbffb58c10870fc6472b0f9ebe8e005834e6e" translate="yes" xml:space="preserve">
          <source>Skip::take</source>
          <target state="translated">Skip::take</target>
        </trans-unit>
        <trans-unit id="6a7a19f72cb62542178db1b5acfc97dbf3534f4b" translate="yes" xml:space="preserve">
          <source>Skip::take_while</source>
          <target state="translated">Skip::take_while</target>
        </trans-unit>
        <trans-unit id="61a46f4a7c5265079c849af4f618df1736685196" translate="yes" xml:space="preserve">
          <source>Skip::to_owned</source>
          <target state="translated">Skip::to_owned</target>
        </trans-unit>
        <trans-unit id="c176adab52c0482523c3a0bdfc430057f640bc68" translate="yes" xml:space="preserve">
          <source>Skip::try_fold</source>
          <target state="translated">Skip::try_fold</target>
        </trans-unit>
        <trans-unit id="bc4fbff9cdd49a0c0ec58c470298314a0d351890" translate="yes" xml:space="preserve">
          <source>Skip::try_for_each</source>
          <target state="translated">Skip::try_for_each</target>
        </trans-unit>
        <trans-unit id="3a6ff77afd53390d404c04b4d8b824a12d11fe69" translate="yes" xml:space="preserve">
          <source>Skip::try_from</source>
          <target state="translated">Skip::try_from</target>
        </trans-unit>
        <trans-unit id="0ff3cc9a1085dadeb6133ba9f367559c2327c721" translate="yes" xml:space="preserve">
          <source>Skip::try_into</source>
          <target state="translated">Skip::try_into</target>
        </trans-unit>
        <trans-unit id="3e4ddfb53f35b3ff6209898a989c06b6d31b6a15" translate="yes" xml:space="preserve">
          <source>Skip::try_rfold</source>
          <target state="translated">Skip::try_rfold</target>
        </trans-unit>
        <trans-unit id="4d0b4d7dcbb0aec04511db37ea98be0fcaf79295" translate="yes" xml:space="preserve">
          <source>Skip::type_id</source>
          <target state="translated">Skip::type_id</target>
        </trans-unit>
        <trans-unit id="f66f20cf5e4ce8073947e7bdcea46c6358bf9608" translate="yes" xml:space="preserve">
          <source>Skip::unzip</source>
          <target state="translated">Skip::unzip</target>
        </trans-unit>
        <trans-unit id="8932bfb221e72115e120c13485894171d4582d0e" translate="yes" xml:space="preserve">
          <source>Skip::zip</source>
          <target state="translated">Skip::zip</target>
        </trans-unit>
        <trans-unit id="22e179bea92af551a86509fda88cb097314902ec" translate="yes" xml:space="preserve">
          <source>SkipWhile</source>
          <target state="translated">SkipWhile</target>
        </trans-unit>
        <trans-unit id="a251611a5ac9647617f802344994207a8b4db01a" translate="yes" xml:space="preserve">
          <source>SkipWhile::all</source>
          <target state="translated">SkipWhile::all</target>
        </trans-unit>
        <trans-unit id="2ae549195f30071a0e9d8d90c2e8583a38099511" translate="yes" xml:space="preserve">
          <source>SkipWhile::any</source>
          <target state="translated">SkipWhile::any</target>
        </trans-unit>
        <trans-unit id="98baaebe6857101ea22467675357020bb4fcd7a9" translate="yes" xml:space="preserve">
          <source>SkipWhile::borrow</source>
          <target state="translated">SkipWhile::borrow</target>
        </trans-unit>
        <trans-unit id="ce2e2f99def3c54e6795960ad9510b8130f483f0" translate="yes" xml:space="preserve">
          <source>SkipWhile::borrow_mut</source>
          <target state="translated">SkipWhile::borrow_mut</target>
        </trans-unit>
        <trans-unit id="c64071d1ca91b85edf166d56a370e88fe51d3b6d" translate="yes" xml:space="preserve">
          <source>SkipWhile::by_ref</source>
          <target state="translated">SkipWhile::by_ref</target>
        </trans-unit>
        <trans-unit id="b884d6e3b0cc117790f90239ec9dbd1eac5f13e4" translate="yes" xml:space="preserve">
          <source>SkipWhile::chain</source>
          <target state="translated">SkipWhile::chain</target>
        </trans-unit>
        <trans-unit id="cfc70cf8aed73488e407b6a7889ed7a8418ac602" translate="yes" xml:space="preserve">
          <source>SkipWhile::clone</source>
          <target state="translated">SkipWhile::clone</target>
        </trans-unit>
        <trans-unit id="acb8841d5260a38a1c9a9e05a7fab9292b8b7432" translate="yes" xml:space="preserve">
          <source>SkipWhile::clone_from</source>
          <target state="translated">SkipWhile::clone_from</target>
        </trans-unit>
        <trans-unit id="23f06ee81a3fc0167121fb8614c94b17561b2d77" translate="yes" xml:space="preserve">
          <source>SkipWhile::clone_into</source>
          <target state="translated">SkipWhile::clone_into</target>
        </trans-unit>
        <trans-unit id="8f58781a9269c6913f408bde07a5a2294de2446c" translate="yes" xml:space="preserve">
          <source>SkipWhile::cloned</source>
          <target state="translated">SkipWhile::cloned</target>
        </trans-unit>
        <trans-unit id="d4bbd6d43c74619248fe631024a5933fc3b97d5c" translate="yes" xml:space="preserve">
          <source>SkipWhile::cmp</source>
          <target state="translated">SkipWhile::cmp</target>
        </trans-unit>
        <trans-unit id="07c66ff1c2afbc10eb23e76ea19f3a092d94be54" translate="yes" xml:space="preserve">
          <source>SkipWhile::collect</source>
          <target state="translated">SkipWhile::collect</target>
        </trans-unit>
        <trans-unit id="514f5d9b2ee067a9a9ff4a4372834b6f2a4a029d" translate="yes" xml:space="preserve">
          <source>SkipWhile::copied</source>
          <target state="translated">SkipWhile::copied</target>
        </trans-unit>
        <trans-unit id="b39287b6c7743f091fb51959b8ed9fc02fc1c441" translate="yes" xml:space="preserve">
          <source>SkipWhile::count</source>
          <target state="translated">SkipWhile::count</target>
        </trans-unit>
        <trans-unit id="b372492b95553200f08ed5d8376e3d5b6576ce37" translate="yes" xml:space="preserve">
          <source>SkipWhile::cycle</source>
          <target state="translated">SkipWhile::cycle</target>
        </trans-unit>
        <trans-unit id="8de5e9639de9bf1bdfd7ee1683e67a7fe1b00ae5" translate="yes" xml:space="preserve">
          <source>SkipWhile::enumerate</source>
          <target state="translated">SkipWhile::enumerate</target>
        </trans-unit>
        <trans-unit id="3bc9577a92b59142e8578d161b13a1218a9fd0f8" translate="yes" xml:space="preserve">
          <source>SkipWhile::eq</source>
          <target state="translated">SkipWhile::eq</target>
        </trans-unit>
        <trans-unit id="bdb5592467ce942b2dd3afbb042a05ca026980fe" translate="yes" xml:space="preserve">
          <source>SkipWhile::filter</source>
          <target state="translated">SkipWhile::filter</target>
        </trans-unit>
        <trans-unit id="a4820567d9d6b30953a49ae15c41d964dba436eb" translate="yes" xml:space="preserve">
          <source>SkipWhile::filter_map</source>
          <target state="translated">SkipWhile::filter_map</target>
        </trans-unit>
        <trans-unit id="f4406599d75121d440746ae6a4d7f7780b74a7cd" translate="yes" xml:space="preserve">
          <source>SkipWhile::find</source>
          <target state="translated">SkipWhile::find</target>
        </trans-unit>
        <trans-unit id="719989fc5cfa90ef05d766b5b2d16a9e9f2cdaec" translate="yes" xml:space="preserve">
          <source>SkipWhile::find_map</source>
          <target state="translated">SkipWhile::find_map</target>
        </trans-unit>
        <trans-unit id="11659c0940aa3e200438cdeb7d9d829adaada9c8" translate="yes" xml:space="preserve">
          <source>SkipWhile::flat_map</source>
          <target state="translated">SkipWhile::flat_map</target>
        </trans-unit>
        <trans-unit id="eb45e6310d61b51a6f8e05810a0a9936481b0f76" translate="yes" xml:space="preserve">
          <source>SkipWhile::flatten</source>
          <target state="translated">SkipWhile::flatten</target>
        </trans-unit>
        <trans-unit id="3717dc2daffe5d4b403a4ca71a02890431980d8c" translate="yes" xml:space="preserve">
          <source>SkipWhile::fmt</source>
          <target state="translated">SkipWhile::fmt</target>
        </trans-unit>
        <trans-unit id="6fde0ea9ce42ccbfc6d6d7195a3168b240db9631" translate="yes" xml:space="preserve">
          <source>SkipWhile::fold</source>
          <target state="translated">SkipWhile::fold</target>
        </trans-unit>
        <trans-unit id="50caa2bd8e84ee483a82d00cc9915273efd59ac4" translate="yes" xml:space="preserve">
          <source>SkipWhile::for_each</source>
          <target state="translated">SkipWhile::for_each</target>
        </trans-unit>
        <trans-unit id="84ff07782bb5f48c0970cd148af80cb045a0eac0" translate="yes" xml:space="preserve">
          <source>SkipWhile::from</source>
          <target state="translated">SkipWhile::from</target>
        </trans-unit>
        <trans-unit id="754ae44be63a5b026814434cd281e24557f66cdb" translate="yes" xml:space="preserve">
          <source>SkipWhile::fuse</source>
          <target state="translated">SkipWhile::fuse</target>
        </trans-unit>
        <trans-unit id="e7c0f6e0d8dd018d9e212577757ec3b99507a73c" translate="yes" xml:space="preserve">
          <source>SkipWhile::ge</source>
          <target state="translated">SkipWhile::ge</target>
        </trans-unit>
        <trans-unit id="add5b99883ab21fed5358f11a1e9df18abb3be62" translate="yes" xml:space="preserve">
          <source>SkipWhile::gt</source>
          <target state="translated">SkipWhile::gt</target>
        </trans-unit>
        <trans-unit id="6bf9339ed08e9bb39b3d1ee30f930256d5188169" translate="yes" xml:space="preserve">
          <source>SkipWhile::inspect</source>
          <target state="translated">SkipWhile::inspect</target>
        </trans-unit>
        <trans-unit id="c1ff330f5ce8c23a7ad4ae6e8a2d96352b366c30" translate="yes" xml:space="preserve">
          <source>SkipWhile::into</source>
          <target state="translated">SkipWhile::into</target>
        </trans-unit>
        <trans-unit id="0f10f4984c69a0e0da2f055eec7170dc535a19b5" translate="yes" xml:space="preserve">
          <source>SkipWhile::into_iter</source>
          <target state="translated">SkipWhile::into_iter</target>
        </trans-unit>
        <trans-unit id="137eb73e5cdd03b27635d4bc69c4197194535aac" translate="yes" xml:space="preserve">
          <source>SkipWhile::is_sorted</source>
          <target state="translated">SkipWhile::is_sorted</target>
        </trans-unit>
        <trans-unit id="68f8c6e87e6e587a32da249478bba4ada1e29934" translate="yes" xml:space="preserve">
          <source>SkipWhile::is_sorted_by</source>
          <target state="translated">SkipWhile::is_sorted_by</target>
        </trans-unit>
        <trans-unit id="73a054a3c41f51790c051964baf7b2c43240f041" translate="yes" xml:space="preserve">
          <source>SkipWhile::is_sorted_by_key</source>
          <target state="translated">SkipWhile::is_sorted_by_key</target>
        </trans-unit>
        <trans-unit id="17b146d86e99d5592fe3427358624989bfbde86a" translate="yes" xml:space="preserve">
          <source>SkipWhile::last</source>
          <target state="translated">SkipWhile::last</target>
        </trans-unit>
        <trans-unit id="e9af22e02429653f1e5e05d885c6f9c3a2b8d11c" translate="yes" xml:space="preserve">
          <source>SkipWhile::le</source>
          <target state="translated">SkipWhile::le</target>
        </trans-unit>
        <trans-unit id="0364dacead75cc42dd00a0f9c451a6a421f03a24" translate="yes" xml:space="preserve">
          <source>SkipWhile::lt</source>
          <target state="translated">SkipWhile::lt</target>
        </trans-unit>
        <trans-unit id="c5698741d64b9f591e0fdc7367422c2732e1e5c5" translate="yes" xml:space="preserve">
          <source>SkipWhile::map</source>
          <target state="translated">SkipWhile::map</target>
        </trans-unit>
        <trans-unit id="ec412fa6842f2575adf5d3fb75c664a4852eedf8" translate="yes" xml:space="preserve">
          <source>SkipWhile::max</source>
          <target state="translated">SkipWhile::max</target>
        </trans-unit>
        <trans-unit id="0a0616fff10b52d273e49c0e5ac50ae16e2e2c07" translate="yes" xml:space="preserve">
          <source>SkipWhile::max_by</source>
          <target state="translated">SkipWhile::max_by</target>
        </trans-unit>
        <trans-unit id="d7587f5d81d60f3ea50c6983e15764f4e5dd9150" translate="yes" xml:space="preserve">
          <source>SkipWhile::max_by_key</source>
          <target state="translated">SkipWhile::max_by_key</target>
        </trans-unit>
        <trans-unit id="52358d799e74f228b4f92a70c2807042b6cca1f2" translate="yes" xml:space="preserve">
          <source>SkipWhile::min</source>
          <target state="translated">SkipWhile::min</target>
        </trans-unit>
        <trans-unit id="73f597f3beaf6b11d49b5d22aecf078de23f6bd0" translate="yes" xml:space="preserve">
          <source>SkipWhile::min_by</source>
          <target state="translated">SkipWhile::min_by</target>
        </trans-unit>
        <trans-unit id="5a1a140874972b854960962e46f7276e2af59e01" translate="yes" xml:space="preserve">
          <source>SkipWhile::min_by_key</source>
          <target state="translated">SkipWhile::min_by_key</target>
        </trans-unit>
        <trans-unit id="183883d7b1286b35bcc0572cad98b0334c5d761a" translate="yes" xml:space="preserve">
          <source>SkipWhile::ne</source>
          <target state="translated">SkipWhile::ne</target>
        </trans-unit>
        <trans-unit id="6808d12fec2558ee9e7d9db84926b66fbdfca8a5" translate="yes" xml:space="preserve">
          <source>SkipWhile::next</source>
          <target state="translated">SkipWhile::next</target>
        </trans-unit>
        <trans-unit id="048ee149a8b3bdb60154996c24b928e7eae9e765" translate="yes" xml:space="preserve">
          <source>SkipWhile::nth</source>
          <target state="translated">SkipWhile::nth</target>
        </trans-unit>
        <trans-unit id="edf2c6724fae8ee0a9d4aa2c7dcb71ea3ad5286e" translate="yes" xml:space="preserve">
          <source>SkipWhile::partial_cmp</source>
          <target state="translated">SkipWhile::partial_cmp</target>
        </trans-unit>
        <trans-unit id="235286e617118ef2eedf3de3d0ebf82026f8fd5d" translate="yes" xml:space="preserve">
          <source>SkipWhile::partition</source>
          <target state="translated">SkipWhile::partition</target>
        </trans-unit>
        <trans-unit id="ac388412dbf3931e3b5ea83b1c7d9712285bcb38" translate="yes" xml:space="preserve">
          <source>SkipWhile::peekable</source>
          <target state="translated">SkipWhile::peekable</target>
        </trans-unit>
        <trans-unit id="07e918bf1b8f1a943e4aa4437dea685dd0df01b7" translate="yes" xml:space="preserve">
          <source>SkipWhile::position</source>
          <target state="translated">SkipWhile::position</target>
        </trans-unit>
        <trans-unit id="0e320f453b91cba9a36d985bd6e2429ffa0e8064" translate="yes" xml:space="preserve">
          <source>SkipWhile::product</source>
          <target state="translated">SkipWhile::product</target>
        </trans-unit>
        <trans-unit id="c640a2bb803f9e27faec1b403698fd2e5f2317e0" translate="yes" xml:space="preserve">
          <source>SkipWhile::rev</source>
          <target state="translated">SkipWhile::rev</target>
        </trans-unit>
        <trans-unit id="be0da2c868e6e89f9992a40468321a3b7785fc27" translate="yes" xml:space="preserve">
          <source>SkipWhile::rposition</source>
          <target state="translated">SkipWhile::rposition</target>
        </trans-unit>
        <trans-unit id="6da80a895515ebcde023348aaab45576a62e8242" translate="yes" xml:space="preserve">
          <source>SkipWhile::scan</source>
          <target state="translated">SkipWhile::scan</target>
        </trans-unit>
        <trans-unit id="2a18e5a45186e93c570ed7bc1be516990e9d8596" translate="yes" xml:space="preserve">
          <source>SkipWhile::size_hint</source>
          <target state="translated">SkipWhile::size_hint</target>
        </trans-unit>
        <trans-unit id="b2f6ae931605aef6528f5eea7e1adc04d9d521b5" translate="yes" xml:space="preserve">
          <source>SkipWhile::skip</source>
          <target state="translated">SkipWhile::skip</target>
        </trans-unit>
        <trans-unit id="14349868da94b723f6e3342b39932c98acce80b3" translate="yes" xml:space="preserve">
          <source>SkipWhile::skip_while</source>
          <target state="translated">SkipWhile::skip_while</target>
        </trans-unit>
        <trans-unit id="24b712d0e65ede1461313b83ed15cb426add409e" translate="yes" xml:space="preserve">
          <source>SkipWhile::step_by</source>
          <target state="translated">SkipWhile::step_by</target>
        </trans-unit>
        <trans-unit id="307822395f63d85b6d4ad3f4f5d8695ff56b05c7" translate="yes" xml:space="preserve">
          <source>SkipWhile::sum</source>
          <target state="translated">SkipWhile::sum</target>
        </trans-unit>
        <trans-unit id="b5ebfade771014ee60f290ee3f34856921c4965a" translate="yes" xml:space="preserve">
          <source>SkipWhile::take</source>
          <target state="translated">SkipWhile::take</target>
        </trans-unit>
        <trans-unit id="ccec794ebfdc1546c5df129f1d4ff37a111976d1" translate="yes" xml:space="preserve">
          <source>SkipWhile::take_while</source>
          <target state="translated">SkipWhile::take_while</target>
        </trans-unit>
        <trans-unit id="39b22a520487262ca064f7848b2d0e2cdf9801b7" translate="yes" xml:space="preserve">
          <source>SkipWhile::to_owned</source>
          <target state="translated">SkipWhile::to_owned</target>
        </trans-unit>
        <trans-unit id="d8b0ab2cf16dc0748bb4549ffb37f837e39f5dba" translate="yes" xml:space="preserve">
          <source>SkipWhile::try_fold</source>
          <target state="translated">SkipWhile::try_fold</target>
        </trans-unit>
        <trans-unit id="0a1e9cd3d27da6ea2f47c61b83974e7ad5cee996" translate="yes" xml:space="preserve">
          <source>SkipWhile::try_for_each</source>
          <target state="translated">SkipWhile::try_for_each</target>
        </trans-unit>
        <trans-unit id="3f8a1565c038614fe428a25de2a00d13c06a46d4" translate="yes" xml:space="preserve">
          <source>SkipWhile::try_from</source>
          <target state="translated">SkipWhile::try_from</target>
        </trans-unit>
        <trans-unit id="b5986509cedc2dd0d67c67f3110a76f983758512" translate="yes" xml:space="preserve">
          <source>SkipWhile::try_into</source>
          <target state="translated">SkipWhile::try_into</target>
        </trans-unit>
        <trans-unit id="034417ac3e34efa5dff73aa36d45ff52950bafaf" translate="yes" xml:space="preserve">
          <source>SkipWhile::type_id</source>
          <target state="translated">SkipWhile::type_id</target>
        </trans-unit>
        <trans-unit id="aa8085a3efd31556a82ba60ccda975bf65ad2268" translate="yes" xml:space="preserve">
          <source>SkipWhile::unzip</source>
          <target state="translated">SkipWhile::unzip</target>
        </trans-unit>
        <trans-unit id="a701a8dc1340972d721fb7163deea6fd76dafdf3" translate="yes" xml:space="preserve">
          <source>SkipWhile::zip</source>
          <target state="translated">SkipWhile::zip</target>
        </trans-unit>
        <trans-unit id="a2c169fcee2a0e0599001b3215f71adf47f0699e" translate="yes" xml:space="preserve">
          <source>Slash</source>
          <target state="translated">Slash</target>
        </trans-unit>
        <trans-unit id="01ce38023820b6dfa8f41557520ebca667e1ad59" translate="yes" xml:space="preserve">
          <source>SlashEq</source>
          <target state="translated">SlashEq</target>
        </trans-unit>
        <trans-unit id="0c8525a31f225d6db84222cdc68f43cb8c6c18bf" translate="yes" xml:space="preserve">
          <source>Slice</source>
          <target state="translated">Slice</target>
        </trans-unit>
        <trans-unit id="34e7eb0ad02d68841a482e6343474939a06188ca" translate="yes" xml:space="preserve">
          <source>Slice Layout</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="769f0ac84c24a3608c1a3219a0a737194226fde7" translate="yes" xml:space="preserve">
          <source>Slice patterns</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e49fa811ea06da1bbcb6ce9682db443bbcb90e6" translate="yes" xml:space="preserve">
          <source>Slice patterns can match both arrays of fixed size and slices of dynamic size.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2a9b1a1f4c9d64f18dacb35757c94c4dba09de1" translate="yes" xml:space="preserve">
          <source>Slice types</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19695157734085157c78fbe17854f5408e269cc7" translate="yes" xml:space="preserve">
          <source>SliceConcatExt</source>
          <target state="translated">SliceConcatExt</target>
        </trans-unit>
        <trans-unit id="fa0533cad21e882e60e6470f5bbc433b34d70004" translate="yes" xml:space="preserve">
          <source>SliceConcatExt::concat</source>
          <target state="translated">SliceConcatExt::concat</target>
        </trans-unit>
        <trans-unit id="413a1df9b8364943cc23688168d5136007df7cd0" translate="yes" xml:space="preserve">
          <source>SliceConcatExt::connect</source>
          <target state="translated">SliceConcatExt::connect</target>
        </trans-unit>
        <trans-unit id="9785208fcb75d3242fa124a38e51980ffbd6d547" translate="yes" xml:space="preserve">
          <source>SliceConcatExt::join</source>
          <target state="translated">SliceConcatExt::join</target>
        </trans-unit>
        <trans-unit id="3e40446492e38511497e76ecb094b6028ead119a" translate="yes" xml:space="preserve">
          <source>SliceIndex</source>
          <target state="translated">SliceIndex</target>
        </trans-unit>
        <trans-unit id="6ce54ae25502325520f32754715055e196288255" translate="yes" xml:space="preserve">
          <source>SliceIndex::get</source>
          <target state="translated">SliceIndex::get</target>
        </trans-unit>
        <trans-unit id="572d3ba13df857766a6ae76c80fb65fabe4524e9" translate="yes" xml:space="preserve">
          <source>SliceIndex::get_mut</source>
          <target state="translated">SliceIndex::get_mut</target>
        </trans-unit>
        <trans-unit id="d0175e753163e484a6a27fba6d5bc114ef60ba17" translate="yes" xml:space="preserve">
          <source>SliceIndex::get_unchecked</source>
          <target state="translated">SliceIndex::get_unchecked</target>
        </trans-unit>
        <trans-unit id="f443fce2352caf6b4c8b798713f211deff2a2933" translate="yes" xml:space="preserve">
          <source>SliceIndex::get_unchecked_mut</source>
          <target state="translated">SliceIndex::get_unchecked_mut</target>
        </trans-unit>
        <trans-unit id="7916b515f5353dea5a33113689e5b4aeb6fc1a48" translate="yes" xml:space="preserve">
          <source>SliceIndex::index</source>
          <target state="translated">SliceIndex::index</target>
        </trans-unit>
        <trans-unit id="afb808e647e6e4fc8f460862d19066860e2d10b3" translate="yes" xml:space="preserve">
          <source>SliceIndex::index_mut</source>
          <target state="translated">SliceIndex::index_mut</target>
        </trans-unit>
        <trans-unit id="f144ad4093e39f92a8b125982226bc32f5fbad6c" translate="yes" xml:space="preserve">
          <source>Slices are a view into a block of memory represented as a pointer and a length.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92d46edfcdc60ce1b717ef56f1d122c47640c96a" translate="yes" xml:space="preserve">
          <source>Slices are also compared by their length (fat pointers):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eca1373d0eca9016bccd6079114ae36016d11777" translate="yes" xml:space="preserve">
          <source>Slices are either mutable or shared. The shared slice type is &lt;code&gt;&amp;amp;[T]&lt;/code&gt;, while the mutable slice type is &lt;code&gt;&amp;amp;mut [T]&lt;/code&gt;, where &lt;code&gt;T&lt;/code&gt; represents the element type. For example, you can mutate the block of memory that a mutable slice points to:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="399a28c583a0d46cb74512eb0c802ebe3fdcca4b" translate="yes" xml:space="preserve">
          <source>Slices can only be handled through some kind of &lt;em&gt;pointer&lt;/em&gt;, and as such come in many flavors such as:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78267e28e81cb8eb425db97c7c9bfe2fadd9598a" translate="yes" xml:space="preserve">
          <source>Slices have the same layout as the section of the array they slice.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b8d3bff7b282e8424f968f9e948b9dc2006e7fb" translate="yes" xml:space="preserve">
          <source>Slicing</source>
          <target state="translated">Slicing</target>
        </trans-unit>
        <trans-unit id="6b5423b129b4d84874f0627bbd4fe8799ddf84f1" translate="yes" xml:space="preserve">
          <source>Slicing Strings</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fae28e1d5e9f8d8129325c2a7488d0feff194552" translate="yes" xml:space="preserve">
          <source>Slightly simplified, the relevant parts of &lt;code&gt;HashMap&amp;lt;K, V&amp;gt;&lt;/code&gt; look like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1678b1d39516a61fe21f13e53c26f8494d328ac0" translate="yes" xml:space="preserve">
          <source>Small details, such as where &lt;code&gt;join&lt;/code&gt; is called, can affect whether or not your threads run at the same time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55ae7c282af0b63d2784182817786afd115171b8" translate="yes" xml:space="preserve">
          <source>Smallest finite &lt;code&gt;f32&lt;/code&gt; value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3efc1f33cd5c2f54b38a7ec43b4874db20a71c8c" translate="yes" xml:space="preserve">
          <source>Smallest finite &lt;code&gt;f64&lt;/code&gt; value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11079465374ccbdcd10e62557b51a729b8f92e19" translate="yes" xml:space="preserve">
          <source>Smallest positive normal &lt;code&gt;f32&lt;/code&gt; value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ff046c02ca4aa23e9ac84b74059747fa266f688" translate="yes" xml:space="preserve">
          <source>Smallest positive normal &lt;code&gt;f64&lt;/code&gt; value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d0cbc1ceeeee81e325edc2271fdb116c132030c" translate="yes" xml:space="preserve">
          <source>Smart Pointers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5966fa5e593332b4a5ba3c51105fe7097a2c40d7" translate="yes" xml:space="preserve">
          <source>Smart pointers are usually implemented using structs. The characteristic that distinguishes a smart pointer from an ordinary struct is that smart pointers implement the &lt;code&gt;Deref&lt;/code&gt; and &lt;code&gt;Drop&lt;/code&gt; traits. The &lt;code&gt;Deref&lt;/code&gt; trait allows an instance of the smart pointer struct to behave like a reference so you can write code that works with either references or smart pointers. The &lt;code&gt;Drop&lt;/code&gt; trait allows you to customize the code that is run when an instance of the smart pointer goes out of scope. In this chapter, we&amp;rsquo;ll discuss both traits and demonstrate why they&amp;rsquo;re important to smart pointers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7fafb080819da713ce19c2d9024c6ed5ebb639bb" translate="yes" xml:space="preserve">
          <source>So although a &lt;code&gt;&amp;amp;T&lt;/code&gt; is a single value that stores the memory address of where the &lt;code&gt;T&lt;/code&gt; is located, a &lt;code&gt;&amp;amp;str&lt;/code&gt; is &lt;em&gt;two&lt;/em&gt; values: the address of the &lt;code&gt;str&lt;/code&gt; and its length. As such, we can know the size of a &lt;code&gt;&amp;amp;str&lt;/code&gt; value at compile time: it&amp;rsquo;s twice the length of a &lt;code&gt;usize&lt;/code&gt;. That is, we always know the size of a &lt;code&gt;&amp;amp;str&lt;/code&gt;, no matter how long the string it refers to is. In general, this is the way in which dynamically sized types are used in Rust: they have an extra bit of metadata that stores the size of the dynamic information. The golden rule of dynamically sized types is that we must always put values of dynamically sized types behind a pointer of some kind.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c16bbee2a76d4ec726e1d72f7adeb6ec7f08a4b3" translate="yes" xml:space="preserve">
          <source>So far we&amp;rsquo;ve used only the most basic features of Cargo to build, run, and test our code, but it can do a lot more. In this chapter, we&amp;rsquo;ll discuss some of its other, more advanced features to show you how to do the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2fe8f00779014a1d9cc882174e66ad8f5580069b" translate="yes" xml:space="preserve">
          <source>So far we&amp;rsquo;ve worked only with numbers, but Rust supports letters too. Rust&amp;rsquo;s &lt;code&gt;char&lt;/code&gt; type is the language&amp;rsquo;s most primitive alphabetic type, and the following code shows one way to use it. (Note that &lt;code&gt;char&lt;/code&gt; literals are specified with single quotes, as opposed to string literals, which use double quotes.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00aafa05a852a94e93631ef3de3a49f8b21ad2df" translate="yes" xml:space="preserve">
          <source>So far, all the examples in this chapter defined multiple modules in one file. When modules get large, you might want to move their definitions to a separate file to make the code easier to navigate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ecfb53b194c3f5b057d9cda7a0b0656c0bbd71b" translate="yes" xml:space="preserve">
          <source>So far, we&amp;rsquo;ve demonstrated that calling &lt;code&gt;Rc::clone&lt;/code&gt; increases the &lt;code&gt;strong_count&lt;/code&gt; of an &lt;code&gt;Rc&amp;lt;T&amp;gt;&lt;/code&gt; instance, and an &lt;code&gt;Rc&amp;lt;T&amp;gt;&lt;/code&gt; instance is only cleaned up if its &lt;code&gt;strong_count&lt;/code&gt; is 0. You can also create a &lt;em&gt;weak reference&lt;/em&gt; to the value within an &lt;code&gt;Rc&amp;lt;T&amp;gt;&lt;/code&gt; instance by calling &lt;code&gt;Rc::downgrade&lt;/code&gt; and passing a reference to the &lt;code&gt;Rc&amp;lt;T&amp;gt;&lt;/code&gt;. When you call &lt;code&gt;Rc::downgrade&lt;/code&gt;, you get a smart pointer of type &lt;code&gt;Weak&amp;lt;T&amp;gt;&lt;/code&gt;. Instead of increasing the &lt;code&gt;strong_count&lt;/code&gt; in the &lt;code&gt;Rc&amp;lt;T&amp;gt;&lt;/code&gt; instance by 1, calling &lt;code&gt;Rc::downgrade&lt;/code&gt; increases the &lt;code&gt;weak_count&lt;/code&gt; by 1. The &lt;code&gt;Rc&amp;lt;T&amp;gt;&lt;/code&gt; type uses &lt;code&gt;weak_count&lt;/code&gt; to keep track of how many &lt;code&gt;Weak&amp;lt;T&amp;gt;&lt;/code&gt; references exist, similar to &lt;code&gt;strong_count&lt;/code&gt;. The difference is the &lt;code&gt;weak_count&lt;/code&gt; doesn&amp;rsquo;t need to be 0 for the &lt;code&gt;Rc&amp;lt;T&amp;gt;&lt;/code&gt; instance to be cleaned up.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d415f69b7962c9c2a42c33ce1eada2a42f0bbd5" translate="yes" xml:space="preserve">
          <source>So far, we&amp;rsquo;ve extracted the logic responsible for parsing the command line arguments from &lt;code&gt;main&lt;/code&gt; and placed it in the &lt;code&gt;parse_config&lt;/code&gt; function. Doing so helped us to see that the &lt;code&gt;query&lt;/code&gt; and &lt;code&gt;filename&lt;/code&gt; values were related and that relationship should be conveyed in our code. We then added a &lt;code&gt;Config&lt;/code&gt; struct to name the related purpose of &lt;code&gt;query&lt;/code&gt; and &lt;code&gt;filename&lt;/code&gt; and to be able to return the values&amp;rsquo; names as struct field names from the &lt;code&gt;parse_config&lt;/code&gt; function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31792465eea309944f93175f35f9662ee847ff84" translate="yes" xml:space="preserve">
          <source>So far, we&amp;rsquo;ve only defined structs to hold owned types. It&amp;rsquo;s possible for structs to hold references, but in that case we would need to add a lifetime annotation on every reference in the struct&amp;rsquo;s definition. Listing 10-25 has a struct named &lt;code&gt;ImportantExcerpt&lt;/code&gt; that holds a string slice.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e4c617f5787ec277cad1062392545472df08030" translate="yes" xml:space="preserve">
          <source>So far, we&amp;rsquo;ve written tests that panic when they fail. We can also write tests that use &lt;code&gt;Result&amp;lt;T, E&amp;gt;&lt;/code&gt;! Here&amp;rsquo;s the test from Listing 11-1, rewritten to use &lt;code&gt;Result&amp;lt;T, E&amp;gt;&lt;/code&gt; and return an &lt;code&gt;Err&lt;/code&gt; instead of panicking:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8622855d6f00ed43ee6c71fb4080061585e00e0" translate="yes" xml:space="preserve">
          <source>So for example there is a &lt;a href=&quot;primitive.i32&quot;&gt;page for the primitive type &lt;code&gt;i32&lt;/code&gt;&lt;/a&gt; that lists all the methods that can be called on 32-bit integers (very useful), and there is a &lt;a href=&quot;i32/index&quot;&gt;page for the module &lt;code&gt;std::i32&lt;/code&gt;&lt;/a&gt; that documents the constant values &lt;a href=&quot;i32/constant.min&quot;&gt;&lt;code&gt;MIN&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;i32/constant.max&quot;&gt;&lt;code&gt;MAX&lt;/code&gt;&lt;/a&gt; (rarely useful).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab510d0df8ff03139c6bde1653955915d7b63d9c" translate="yes" xml:space="preserve">
          <source>So how do we get a published post? We want to enforce the rule that a draft post has to be reviewed and approved before it can be published. A post in the pending review state should still not display any content. Let&amp;rsquo;s implement these constraints by adding another struct, &lt;code&gt;PendingReviewPost&lt;/code&gt;, defining the &lt;code&gt;request_review&lt;/code&gt; method on &lt;code&gt;DraftPost&lt;/code&gt; to return a &lt;code&gt;PendingReviewPost&lt;/code&gt;, and defining an &lt;code&gt;approve&lt;/code&gt; method on &lt;code&gt;PendingReviewPost&lt;/code&gt; to return a &lt;code&gt;Post&lt;/code&gt;, as shown in Listing 17-20:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41cfc4a146acbbdc3e7cbb1dc74c09ee0aee7f91" translate="yes" xml:space="preserve">
          <source>So how do you decide when you should call &lt;code&gt;panic!&lt;/code&gt; and when you should return &lt;code&gt;Result&lt;/code&gt;? When code panics, there&amp;rsquo;s no way to recover. You could call &lt;code&gt;panic!&lt;/code&gt; for any error situation, whether there&amp;rsquo;s a possible way to recover or not, but then you&amp;rsquo;re making the decision on behalf of the code calling your code that a situation is unrecoverable. When you choose to return a &lt;code&gt;Result&lt;/code&gt; value, you give the calling code options rather than making the decision for it. The calling code could choose to attempt to recover in a way that&amp;rsquo;s appropriate for its situation, or it could decide that an &lt;code&gt;Err&lt;/code&gt; value in this case is unrecoverable, so it can call &lt;code&gt;panic!&lt;/code&gt; and turn your recoverable error into an unrecoverable one. Therefore, returning &lt;code&gt;Result&lt;/code&gt; is a good default choice when you&amp;rsquo;re defining a function that might fail.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7bee6cab338aeb3ff333063f830e83a375530ced" translate="yes" xml:space="preserve">
          <source>So how do you know which type of integer to use? If you&amp;rsquo;re unsure, Rust&amp;rsquo;s defaults are generally good choices, and integer types default to &lt;code&gt;i32&lt;/code&gt;: this type is generally the fastest, even on 64-bit systems. The primary situation in which you&amp;rsquo;d use &lt;code&gt;isize&lt;/code&gt; or &lt;code&gt;usize&lt;/code&gt; is when indexing some sort of collection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff2c62bc2f0b0ef57e58a2f6531efebdcbc69010" translate="yes" xml:space="preserve">
          <source>So how do you learn about these new features? Rust&amp;rsquo;s development model follows a &lt;em&gt;Request For Comments (RFC) process&lt;/em&gt;. If you&amp;rsquo;d like an improvement in Rust, you can write up a proposal, called an RFC.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a431eb6b7f65a188b9084e0b248314b342aef52a" translate="yes" xml:space="preserve">
          <source>So instead of &lt;code&gt;Rc&amp;lt;T&amp;gt;&lt;/code&gt;, we&amp;rsquo;ll make the type of &lt;code&gt;parent&lt;/code&gt; use &lt;code&gt;Weak&amp;lt;T&amp;gt;&lt;/code&gt;, specifically a &lt;code&gt;RefCell&amp;lt;Weak&amp;lt;Node&amp;gt;&amp;gt;&lt;/code&gt;. Now our &lt;code&gt;Node&lt;/code&gt; struct definition looks like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7d94a46d4c8df2f4221ca14314326a2bd0b53cc" translate="yes" xml:space="preserve">
          <source>So now that the purpose of the &lt;code&gt;parse_config&lt;/code&gt; function is to create a &lt;code&gt;Config&lt;/code&gt; instance, we can change &lt;code&gt;parse_config&lt;/code&gt; from a plain function to a function named &lt;code&gt;new&lt;/code&gt; that is associated with the &lt;code&gt;Config&lt;/code&gt; struct. Making this change will make the code more idiomatic. We can create instances of types in the standard library, such as &lt;code&gt;String&lt;/code&gt;, by calling &lt;code&gt;String::new&lt;/code&gt;. Similarly, by changing &lt;code&gt;parse_config&lt;/code&gt; into a &lt;code&gt;new&lt;/code&gt; function associated with &lt;code&gt;Config&lt;/code&gt;, we&amp;rsquo;ll be able to create instances of &lt;code&gt;Config&lt;/code&gt; by calling &lt;code&gt;Config::new&lt;/code&gt;. Listing 12-7 shows the changes we need to make.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f074b0771df976fb716af57669f38fc08493992b" translate="yes" xml:space="preserve">
          <source>So this, for example, can only be done on types implementing &lt;code&gt;Unpin&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e77e163b0a6f38404491eda0a512dc9b1b67ed8" translate="yes" xml:space="preserve">
          <source>So we know we want to update the definition of &lt;code&gt;Worker&lt;/code&gt; like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4be5fd758b3b88db54e58e5c1f6997e8740355a" translate="yes" xml:space="preserve">
          <source>So what do we do? In this case, you already know the answer: we make the types of &lt;code&gt;s1&lt;/code&gt; and &lt;code&gt;s2&lt;/code&gt; a &lt;code&gt;&amp;amp;str&lt;/code&gt; rather than a &lt;code&gt;str&lt;/code&gt;. Recall that in the &lt;a href=&quot;ch04-03-slices#string-slices&quot;&gt;&amp;ldquo;String Slices&amp;rdquo;&lt;/a&gt; section of Chapter 4, we said the slice data structure stores the starting position and the length of the slice.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c32c5415e3271d676a4ba9d1e43c6961dc8eb8d5" translate="yes" xml:space="preserve">
          <source>So what happens if we try to modify something we&amp;rsquo;re borrowing? Try the code in Listing 4-6. Spoiler alert: it doesn&amp;rsquo;t work!</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ad1c29cb1977f541537e5923d038a2f846397f6" translate="yes" xml:space="preserve">
          <source>So what types are &lt;code&gt;Copy&lt;/code&gt;? You can check the documentation for the given type to be sure, but as a general rule, any group of simple scalar values can be &lt;code&gt;Copy&lt;/code&gt;, and nothing that requires allocation or is some form of resource is &lt;code&gt;Copy&lt;/code&gt;. Here are some of the types that are &lt;code&gt;Copy&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7d596654860b048147570b1da4292f50a003e3c" translate="yes" xml:space="preserve">
          <source>So, for example, the following is not allowed:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8972432c4affa16f8f98b7b09f7f4b89c9affbb9" translate="yes" xml:space="preserve">
          <source>So, how do you get the &lt;code&gt;T&lt;/code&gt; value out of a &lt;code&gt;Some&lt;/code&gt; variant when you have a value of type &lt;code&gt;Option&amp;lt;T&amp;gt;&lt;/code&gt; so you can use that value? The &lt;code&gt;Option&amp;lt;T&amp;gt;&lt;/code&gt; enum has a large number of methods that are useful in a variety of situations; you can check them out in &lt;a href=&quot;../std/option/enum.option&quot;&gt;its documentation&lt;/a&gt;. Becoming familiar with the methods on &lt;code&gt;Option&amp;lt;T&amp;gt;&lt;/code&gt; will be extremely useful in your journey with Rust.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6054892d83d4ff63740ad87325aa1edbc9c2ed83" translate="yes" xml:space="preserve">
          <source>So, in order to solve this error, either use statics which are &lt;code&gt;Sync&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3efb8fcaca7cf44d29993d4584dcd65be6752ad8" translate="yes" xml:space="preserve">
          <source>So, what&amp;rsquo;s the difference here? Why can &lt;code&gt;String&lt;/code&gt; be mutated but literals cannot? The difference is how these two types deal with memory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="982f4e650d509676fd2fc1befb07f1f97185e427" translate="yes" xml:space="preserve">
          <source>SocketAddr</source>
          <target state="translated">SocketAddr</target>
        </trans-unit>
        <trans-unit id="7b76e6fef13b8c151a69cc1489b6030db22c8df5" translate="yes" xml:space="preserve">
          <source>SocketAddr::borrow</source>
          <target state="translated">SocketAddr::borrow</target>
        </trans-unit>
        <trans-unit id="05e5c4f99fe9e01eb67955d1e0c15c5de404bc09" translate="yes" xml:space="preserve">
          <source>SocketAddr::borrow_mut</source>
          <target state="translated">SocketAddr::borrow_mut</target>
        </trans-unit>
        <trans-unit id="10b9b6dd1dca90bba53547883240ba388344d678" translate="yes" xml:space="preserve">
          <source>SocketAddr::clone</source>
          <target state="translated">SocketAddr::clone</target>
        </trans-unit>
        <trans-unit id="7e82ae1ad37713c7946ec73ae8e4a4b129b91b5d" translate="yes" xml:space="preserve">
          <source>SocketAddr::clone_from</source>
          <target state="translated">SocketAddr::clone_from</target>
        </trans-unit>
        <trans-unit id="fa9172cd6e3157231bd216e413365c39529dcb5b" translate="yes" xml:space="preserve">
          <source>SocketAddr::clone_into</source>
          <target state="translated">SocketAddr::clone_into</target>
        </trans-unit>
        <trans-unit id="8c755b826cc428e128fb193cc9198929fc151997" translate="yes" xml:space="preserve">
          <source>SocketAddr::eq</source>
          <target state="translated">SocketAddr::eq</target>
        </trans-unit>
        <trans-unit id="7eea75763a3736da07cda2f6f9a742ff5cc2508b" translate="yes" xml:space="preserve">
          <source>SocketAddr::fmt</source>
          <target state="translated">SocketAddr::fmt</target>
        </trans-unit>
        <trans-unit id="9746b01dbeb72b517f1582ab0ba63bf19762561d" translate="yes" xml:space="preserve">
          <source>SocketAddr::from</source>
          <target state="translated">SocketAddr::from</target>
        </trans-unit>
        <trans-unit id="7bab699fce83466661a1331294a6a61fffdb12c0" translate="yes" xml:space="preserve">
          <source>SocketAddr::from_str</source>
          <target state="translated">SocketAddr::from_str</target>
        </trans-unit>
        <trans-unit id="d0abc27d9ac8e920ff65d558ec4fab556aeb72f0" translate="yes" xml:space="preserve">
          <source>SocketAddr::hash</source>
          <target state="translated">SocketAddr::hash</target>
        </trans-unit>
        <trans-unit id="57f9440e0b1557e8a687b6cbbe68aebc372b810d" translate="yes" xml:space="preserve">
          <source>SocketAddr::hash_slice</source>
          <target state="translated">SocketAddr::hash_slice</target>
        </trans-unit>
        <trans-unit id="359dc56742e672e37102044d1a5837358b05c259" translate="yes" xml:space="preserve">
          <source>SocketAddr::into</source>
          <target state="translated">SocketAddr::into</target>
        </trans-unit>
        <trans-unit id="a72bff1fc4a8d70b73e024e3e77a5a7e15b3d8ef" translate="yes" xml:space="preserve">
          <source>SocketAddr::ip</source>
          <target state="translated">SocketAddr::ip</target>
        </trans-unit>
        <trans-unit id="df313c9acddcd250f8a5dd524b4694a23c721582" translate="yes" xml:space="preserve">
          <source>SocketAddr::is_ipv4</source>
          <target state="translated">SocketAddr::is_ipv4</target>
        </trans-unit>
        <trans-unit id="724fde3cc837842047612e83a0b060b424072291" translate="yes" xml:space="preserve">
          <source>SocketAddr::is_ipv6</source>
          <target state="translated">SocketAddr::is_ipv6</target>
        </trans-unit>
        <trans-unit id="b48285083c13b1d25e0fd32d224dd7224d4b5713" translate="yes" xml:space="preserve">
          <source>SocketAddr::ne</source>
          <target state="translated">SocketAddr::ne</target>
        </trans-unit>
        <trans-unit id="97b42db1f2e774c922a5711eb4bd452eb11e4a7a" translate="yes" xml:space="preserve">
          <source>SocketAddr::new</source>
          <target state="translated">SocketAddr::new</target>
        </trans-unit>
        <trans-unit id="f69565f34ef1fada1cb2f0d63fc92ba0efa235b9" translate="yes" xml:space="preserve">
          <source>SocketAddr::port</source>
          <target state="translated">SocketAddr::port</target>
        </trans-unit>
        <trans-unit id="774b4e1f005f22ee8c0b028c287f01dbea22e030" translate="yes" xml:space="preserve">
          <source>SocketAddr::set_ip</source>
          <target state="translated">SocketAddr::set_ip</target>
        </trans-unit>
        <trans-unit id="bec32854bf21e824a4fa9a0d7b44db616df52318" translate="yes" xml:space="preserve">
          <source>SocketAddr::set_port</source>
          <target state="translated">SocketAddr::set_port</target>
        </trans-unit>
        <trans-unit id="fe4346a026d7ffb567366d36af1b79417d962103" translate="yes" xml:space="preserve">
          <source>SocketAddr::to_owned</source>
          <target state="translated">SocketAddr::to_owned</target>
        </trans-unit>
        <trans-unit id="7b71632e29ab8b9a928be8a15d7afca736749a51" translate="yes" xml:space="preserve">
          <source>SocketAddr::to_socket_addrs</source>
          <target state="translated">SocketAddr::to_socket_addrs</target>
        </trans-unit>
        <trans-unit id="4f6b5c00f68c140936e9f3f32ee6059cc024fad4" translate="yes" xml:space="preserve">
          <source>SocketAddr::to_string</source>
          <target state="translated">SocketAddr::to_string</target>
        </trans-unit>
        <trans-unit id="c6ca6f5af2b971219538a2091097aaa41b1dc436" translate="yes" xml:space="preserve">
          <source>SocketAddr::try_from</source>
          <target state="translated">SocketAddr::try_from</target>
        </trans-unit>
        <trans-unit id="716746fffcc0460fa5b5b7b39b39fed16701c2d4" translate="yes" xml:space="preserve">
          <source>SocketAddr::try_into</source>
          <target state="translated">SocketAddr::try_into</target>
        </trans-unit>
        <trans-unit id="d4f1c48b673e9c03d6894ddac4a6f76e75db3196" translate="yes" xml:space="preserve">
          <source>SocketAddr::type_id</source>
          <target state="translated">SocketAddr::type_id</target>
        </trans-unit>
        <trans-unit id="2e411fdc7242c1962d9bdc180a582206cc8b1d30" translate="yes" xml:space="preserve">
          <source>SocketAddrV4</source>
          <target state="translated">SocketAddrV4</target>
        </trans-unit>
        <trans-unit id="75e3b74af97586957cb6bbcbf99b5e8d1adde136" translate="yes" xml:space="preserve">
          <source>SocketAddrV4::borrow</source>
          <target state="translated">SocketAddrV4::borrow</target>
        </trans-unit>
        <trans-unit id="4d361b6e156dc3dfb56ca0e8e0dc4e0a5b168d12" translate="yes" xml:space="preserve">
          <source>SocketAddrV4::borrow_mut</source>
          <target state="translated">SocketAddrV4::borrow_mut</target>
        </trans-unit>
        <trans-unit id="a1fd56f672c607cb9273c197c816a7a4e2905e2a" translate="yes" xml:space="preserve">
          <source>SocketAddrV4::clone</source>
          <target state="translated">SocketAddrV4::clone</target>
        </trans-unit>
        <trans-unit id="3a37da63ee2c37711495f1eebc7170e9d20c2609" translate="yes" xml:space="preserve">
          <source>SocketAddrV4::clone_from</source>
          <target state="translated">SocketAddrV4::clone_from</target>
        </trans-unit>
        <trans-unit id="eb0a32006835b5434f6c3ba39cf20d627c257026" translate="yes" xml:space="preserve">
          <source>SocketAddrV4::clone_into</source>
          <target state="translated">SocketAddrV4::clone_into</target>
        </trans-unit>
        <trans-unit id="c1b4fe28184db8300439d430dc3c94116411c119" translate="yes" xml:space="preserve">
          <source>SocketAddrV4::eq</source>
          <target state="translated">SocketAddrV4::eq</target>
        </trans-unit>
        <trans-unit id="5304bbfe77b1b3ff9948bed9e44e2ba835bc1752" translate="yes" xml:space="preserve">
          <source>SocketAddrV4::fmt</source>
          <target state="translated">SocketAddrV4::fmt</target>
        </trans-unit>
        <trans-unit id="ba7642e89ba5ff37a9528b98decffb956584dd07" translate="yes" xml:space="preserve">
          <source>SocketAddrV4::from</source>
          <target state="translated">SocketAddrV4::from</target>
        </trans-unit>
        <trans-unit id="d54305f480b5f9920ddea513082584583ab11f04" translate="yes" xml:space="preserve">
          <source>SocketAddrV4::from_str</source>
          <target state="translated">SocketAddrV4::from_str</target>
        </trans-unit>
        <trans-unit id="a61d7b0786ad97e5ccdc2d9753e797a4e92ceab5" translate="yes" xml:space="preserve">
          <source>SocketAddrV4::hash</source>
          <target state="translated">SocketAddrV4::hash</target>
        </trans-unit>
        <trans-unit id="36cdd68ef7364910489bb755ad11d3244886227e" translate="yes" xml:space="preserve">
          <source>SocketAddrV4::hash_slice</source>
          <target state="translated">SocketAddrV4::hash_slice</target>
        </trans-unit>
        <trans-unit id="265192c0953c9652e01d051111cd4c4e244a073a" translate="yes" xml:space="preserve">
          <source>SocketAddrV4::into</source>
          <target state="translated">SocketAddrV4::into</target>
        </trans-unit>
        <trans-unit id="bcc9b01a8b6ac6bf9cb18abecd80c612d96f295a" translate="yes" xml:space="preserve">
          <source>SocketAddrV4::ip</source>
          <target state="translated">SocketAddrV4::ip</target>
        </trans-unit>
        <trans-unit id="5c7bb0a2c9ab349475d12c0f3a7876c8313171b3" translate="yes" xml:space="preserve">
          <source>SocketAddrV4::ne</source>
          <target state="translated">SocketAddrV4::ne</target>
        </trans-unit>
        <trans-unit id="7648d57b2179c40c2995d5dcef0f39436334e915" translate="yes" xml:space="preserve">
          <source>SocketAddrV4::new</source>
          <target state="translated">SocketAddrV4::new</target>
        </trans-unit>
        <trans-unit id="34fa3c9cd9b21d78c26a87925462b3a1f0dd159a" translate="yes" xml:space="preserve">
          <source>SocketAddrV4::port</source>
          <target state="translated">SocketAddrV4::port</target>
        </trans-unit>
        <trans-unit id="6b1645a03590fa2c425bcd5e3d55a48fe687747b" translate="yes" xml:space="preserve">
          <source>SocketAddrV4::set_ip</source>
          <target state="translated">SocketAddrV4::set_ip</target>
        </trans-unit>
        <trans-unit id="442bc9fb004c3435d748d287fb4e657d12819afc" translate="yes" xml:space="preserve">
          <source>SocketAddrV4::set_port</source>
          <target state="translated">SocketAddrV4::set_port</target>
        </trans-unit>
        <trans-unit id="f94c8e8bc5e342413fde74ba98069b330530abe5" translate="yes" xml:space="preserve">
          <source>SocketAddrV4::to_owned</source>
          <target state="translated">SocketAddrV4::to_owned</target>
        </trans-unit>
        <trans-unit id="4c076e0e279fcac5fe930bd7f231dc463c4af910" translate="yes" xml:space="preserve">
          <source>SocketAddrV4::to_socket_addrs</source>
          <target state="translated">SocketAddrV4::to_socket_addrs</target>
        </trans-unit>
        <trans-unit id="50b24a72ad9bcf56ea6d4dfc00a1cc1f4ae545d2" translate="yes" xml:space="preserve">
          <source>SocketAddrV4::to_string</source>
          <target state="translated">SocketAddrV4::to_string</target>
        </trans-unit>
        <trans-unit id="891c0dd9ce25ec71be3534cbafc45fd3ae05f1b7" translate="yes" xml:space="preserve">
          <source>SocketAddrV4::try_from</source>
          <target state="translated">SocketAddrV4::try_from</target>
        </trans-unit>
        <trans-unit id="a9ac2fe099f08b7d16bb0a49954f312840871371" translate="yes" xml:space="preserve">
          <source>SocketAddrV4::try_into</source>
          <target state="translated">SocketAddrV4::try_into</target>
        </trans-unit>
        <trans-unit id="46aaa31435425799c133d708c8ea7559ef69b6bd" translate="yes" xml:space="preserve">
          <source>SocketAddrV4::type_id</source>
          <target state="translated">SocketAddrV4::type_id</target>
        </trans-unit>
        <trans-unit id="2a82ed719ff88f86747881e650245de3a45b485d" translate="yes" xml:space="preserve">
          <source>SocketAddrV6</source>
          <target state="translated">SocketAddrV6</target>
        </trans-unit>
        <trans-unit id="6f3d80be251a7c9f7ee0eec1539c2ee8cd14b150" translate="yes" xml:space="preserve">
          <source>SocketAddrV6::borrow</source>
          <target state="translated">SocketAddrV6::borrow</target>
        </trans-unit>
        <trans-unit id="9f5ed8415f745a24c04e8a4298b04a1d147b4e44" translate="yes" xml:space="preserve">
          <source>SocketAddrV6::borrow_mut</source>
          <target state="translated">SocketAddrV6::borrow_mut</target>
        </trans-unit>
        <trans-unit id="fcd19982de7f53a2ffc007e3fb4d960e721ab4b0" translate="yes" xml:space="preserve">
          <source>SocketAddrV6::clone</source>
          <target state="translated">SocketAddrV6::clone</target>
        </trans-unit>
        <trans-unit id="f55e0b0afcd5d8fe69f272a554104970de30ed37" translate="yes" xml:space="preserve">
          <source>SocketAddrV6::clone_from</source>
          <target state="translated">SocketAddrV6::clone_from</target>
        </trans-unit>
        <trans-unit id="7e02937dcdb8092cfdb1e06a3c0629a45ec8c613" translate="yes" xml:space="preserve">
          <source>SocketAddrV6::clone_into</source>
          <target state="translated">SocketAddrV6::clone_into</target>
        </trans-unit>
        <trans-unit id="3a6b8b2f9e3b425d85568b95ab8297e1715430ee" translate="yes" xml:space="preserve">
          <source>SocketAddrV6::eq</source>
          <target state="translated">SocketAddrV6::eq</target>
        </trans-unit>
        <trans-unit id="cb0432227f015e547a695d18bc763c7ad5b1f137" translate="yes" xml:space="preserve">
          <source>SocketAddrV6::flowinfo</source>
          <target state="translated">SocketAddrV6::flowinfo</target>
        </trans-unit>
        <trans-unit id="57023336af76787be2e4c534237c60dd312a8304" translate="yes" xml:space="preserve">
          <source>SocketAddrV6::fmt</source>
          <target state="translated">SocketAddrV6::fmt</target>
        </trans-unit>
        <trans-unit id="0b4276728eb5db2c8481e59e288ff98e624226e7" translate="yes" xml:space="preserve">
          <source>SocketAddrV6::from</source>
          <target state="translated">SocketAddrV6::from</target>
        </trans-unit>
        <trans-unit id="8a421da1861aecbff43ed6db92d3ca4ea955db4c" translate="yes" xml:space="preserve">
          <source>SocketAddrV6::from_str</source>
          <target state="translated">SocketAddrV6::from_str</target>
        </trans-unit>
        <trans-unit id="4af0a4a2dc3890a6999679693ab7ede3ce48f504" translate="yes" xml:space="preserve">
          <source>SocketAddrV6::hash</source>
          <target state="translated">SocketAddrV6::hash</target>
        </trans-unit>
        <trans-unit id="c1cd7639e97b734ebc4359a46f77b5338b196005" translate="yes" xml:space="preserve">
          <source>SocketAddrV6::hash_slice</source>
          <target state="translated">SocketAddrV6::hash_slice</target>
        </trans-unit>
        <trans-unit id="eea88942dd8e116f8bae7c475306c1e25d577fc8" translate="yes" xml:space="preserve">
          <source>SocketAddrV6::into</source>
          <target state="translated">SocketAddrV6::into</target>
        </trans-unit>
        <trans-unit id="ec4829a1fc51f808a3166d1207d8edcc1a96cd57" translate="yes" xml:space="preserve">
          <source>SocketAddrV6::ip</source>
          <target state="translated">SocketAddrV6::ip</target>
        </trans-unit>
        <trans-unit id="77a714a3ad557f314e500819551d941d06155cd8" translate="yes" xml:space="preserve">
          <source>SocketAddrV6::ne</source>
          <target state="translated">SocketAddrV6::ne</target>
        </trans-unit>
        <trans-unit id="44494c573299c5132f1a609984c69c57ef01e76c" translate="yes" xml:space="preserve">
          <source>SocketAddrV6::new</source>
          <target state="translated">SocketAddrV6::new</target>
        </trans-unit>
        <trans-unit id="1ab36b09219f39990eea0f3e64c06c333fb4504f" translate="yes" xml:space="preserve">
          <source>SocketAddrV6::port</source>
          <target state="translated">SocketAddrV6::port</target>
        </trans-unit>
        <trans-unit id="447b45ff4d0e34372ef8fa330fe8bfba6659e704" translate="yes" xml:space="preserve">
          <source>SocketAddrV6::scope_id</source>
          <target state="translated">SocketAddrV6::scope_id</target>
        </trans-unit>
        <trans-unit id="b421d8a1202f7aaab572adbdb5b1325f4621aa33" translate="yes" xml:space="preserve">
          <source>SocketAddrV6::set_flowinfo</source>
          <target state="translated">SocketAddrV6::set_flowinfo</target>
        </trans-unit>
        <trans-unit id="10fca5b860af2d166e62ee77d423bcffe6454b57" translate="yes" xml:space="preserve">
          <source>SocketAddrV6::set_ip</source>
          <target state="translated">SocketAddrV6::set_ip</target>
        </trans-unit>
        <trans-unit id="af698b7eac5ec17fbd3fb4347ccebc949b6a519e" translate="yes" xml:space="preserve">
          <source>SocketAddrV6::set_port</source>
          <target state="translated">SocketAddrV6::set_port</target>
        </trans-unit>
        <trans-unit id="7be377fcf0d2ff4ef23b1db072ec95367859ac22" translate="yes" xml:space="preserve">
          <source>SocketAddrV6::set_scope_id</source>
          <target state="translated">SocketAddrV6::set_scope_id</target>
        </trans-unit>
        <trans-unit id="5a8a41fe1eb5e9516e083308b063d5b9514970b3" translate="yes" xml:space="preserve">
          <source>SocketAddrV6::to_owned</source>
          <target state="translated">SocketAddrV6::to_owned</target>
        </trans-unit>
        <trans-unit id="d048fbae3ef9e243530f04ac9a777559ef665914" translate="yes" xml:space="preserve">
          <source>SocketAddrV6::to_socket_addrs</source>
          <target state="translated">SocketAddrV6::to_socket_addrs</target>
        </trans-unit>
        <trans-unit id="c2627bba75f17c17b79e53ad84b1106fd67cecab" translate="yes" xml:space="preserve">
          <source>SocketAddrV6::to_string</source>
          <target state="translated">SocketAddrV6::to_string</target>
        </trans-unit>
        <trans-unit id="bd4e5413241d810aaf8cbb9ec4b872862307c3d4" translate="yes" xml:space="preserve">
          <source>SocketAddrV6::try_from</source>
          <target state="translated">SocketAddrV6::try_from</target>
        </trans-unit>
        <trans-unit id="d18c4f695f7bea37405e4856fbc0c64bee129e7e" translate="yes" xml:space="preserve">
          <source>SocketAddrV6::try_into</source>
          <target state="translated">SocketAddrV6::try_into</target>
        </trans-unit>
        <trans-unit id="14104db8b94a9a8b11d37bdfd84939c50560053b" translate="yes" xml:space="preserve">
          <source>SocketAddrV6::type_id</source>
          <target state="translated">SocketAddrV6::type_id</target>
        </trans-unit>
        <trans-unit id="0c2066f053f508b4c0c843ade1ac1437bac212a7" translate="yes" xml:space="preserve">
          <source>Solution #1: Bind the pattern's values the same way.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="913e14ce2731e1f5c5084ef479e21694820c85a9" translate="yes" xml:space="preserve">
          <source>Solution #1: Rename the item.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="228f8e354c6932ad110d73d004853969429e19ac" translate="yes" xml:space="preserve">
          <source>Solution #2: Implement the &lt;code&gt;Copy&lt;/code&gt; trait for the &lt;code&gt;X&lt;/code&gt; structure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7b19c62d01a7e3e5709bf524ce576fa1d6ddcb8" translate="yes" xml:space="preserve">
          <source>Solution #2: Import the crate with a different name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0563a8d6ac0a042a4a8e127d3a94d1467ee40577" translate="yes" xml:space="preserve">
          <source>Some additional &lt;em&gt;escapes&lt;/em&gt; are available in either byte or non-raw byte string literals. An escape starts with a &lt;code&gt;U+005C&lt;/code&gt; (&lt;code&gt;\&lt;/code&gt;) and continues with one of the following forms:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b26e19347b2f0fbbb46e779d09457187a4ad813" translate="yes" xml:space="preserve">
          <source>Some additional &lt;em&gt;escapes&lt;/em&gt; are available in either character or non-raw string literals. An escape starts with a &lt;code&gt;U+005C&lt;/code&gt; (&lt;code&gt;\&lt;/code&gt;) and continues with one of the following forms:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b058503db09aa39221c4a7fe1f4a51447d81392" translate="yes" xml:space="preserve">
          <source>Some command line options go to &lt;code&gt;cargo test&lt;/code&gt;, and some go to the resulting test binary. To separate these two types of arguments, you list the arguments that go to &lt;code&gt;cargo test&lt;/code&gt; followed by the separator &lt;code&gt;--&lt;/code&gt; and then the ones that go to the test binary. Running &lt;code&gt;cargo test --help&lt;/code&gt; displays the options you can use with &lt;code&gt;cargo test&lt;/code&gt;, and running &lt;code&gt;cargo test -- --help&lt;/code&gt; displays the options you can use after the separator &lt;code&gt;--&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3bc8a5b5ab004f33f3d313ba2f0c49c5b66a7ca4" translate="yes" xml:space="preserve">
          <source>Some examples of attributes:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2243be5a688dbf232c39ca5d950ae959b2ee998b" translate="yes" xml:space="preserve">
          <source>Some examples of meta items are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f158a3a6ebb6ae4f387bb83ae0c0dc6662470a7" translate="yes" xml:space="preserve">
          <source>Some examples of the &lt;a href=&quot;../macro.format&quot;&gt;&lt;code&gt;format!&lt;/code&gt;&lt;/a&gt; extension are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9573b985828840e7a24788ac2cb2800024df3d0" translate="yes" xml:space="preserve">
          <source>Some examples of the output from both traits:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa3c6a4e85d404223aa99965ce20b1fdf220b8c7" translate="yes" xml:space="preserve">
          <source>Some examples on functions:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01706013cfdbcb0fc543d3c97784f3f4c235d630" translate="yes" xml:space="preserve">
          <source>Some examples:</source>
          <target state="translated">몇 가지 예 :</target>
        </trans-unit>
        <trans-unit id="68f160c42cafa15f86d6a95981d29c57e9030b96" translate="yes" xml:space="preserve">
          <source>Some items form an implicit scope for the declaration of sub-items. In other words, within a function or module, declarations of items can (in many cases) be mixed with the statements, control blocks, and similar artifacts that otherwise compose the item body. The meaning of these scoped items is the same as if the item was declared outside the scope &amp;mdash; it is still a static item &amp;mdash; except that the item's &lt;em&gt;path name&lt;/em&gt; within the module namespace is qualified by the name of the enclosing item, or is private to the enclosing item (in the case of functions). The grammar specifies the exact locations in which sub-item declarations may appear.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad868bf29644aa3c2d96a099950b1be49e222d52" translate="yes" xml:space="preserve">
          <source>Some languages call this operation flatmap.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec744582d348ac916573975c541aa67c7110d8fa" translate="yes" xml:space="preserve">
          <source>Some of the methods require that a layout &lt;em&gt;fit&lt;/em&gt; a memory block. What it means for a layout to &quot;fit&quot; a memory block means (or equivalently, for a memory block to &quot;fit&quot; a layout) is that the following two conditions must hold:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95bb46f84c997c823dac7e6e0d9bce09adabf3dc" translate="yes" xml:space="preserve">
          <source>Some of the methods require that a memory block be &lt;em&gt;currently allocated&lt;/em&gt; via an allocator. This means that:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="222076c2af94120505dcdff91bf0dd46c85e1ae9" translate="yes" xml:space="preserve">
          <source>Some of these traits are imported by the prelude, so they are available in every Rust program. Only operators backed by traits can be overloaded. For example, the addition operator (&lt;code&gt;+&lt;/code&gt;) can be overloaded through the &lt;a href=&quot;trait.add&quot;&gt;&lt;code&gt;Add&lt;/code&gt;&lt;/a&gt; trait, but since the assignment operator (&lt;code&gt;=&lt;/code&gt;) has no backing trait, there is no way of overloading its semantics. Additionally, this module does not provide any mechanism to create new operators. If traitless overloading or custom operators are required, you should look toward macros or compiler plugins to extend Rust's syntax.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f01c5fd014f6ba000dfac578d5888065f628161a" translate="yes" xml:space="preserve">
          <source>Some platforms do not provide access to the current timeout.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="358e5fe641941b3b99590f3b5a62dbfefcd41b19" translate="yes" xml:space="preserve">
          <source>Some possible values:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c829abe4cbf6dda3204f3a6987ef00d5c7d24bd" translate="yes" xml:space="preserve">
          <source>Some programs allow arguments &lt;em&gt;and&lt;/em&gt; environment variables for the same configuration. In those cases, the programs decide that one or the other takes precedence. For another exercise on your own, try controlling case insensitivity through either a command line argument or an environment variable. Decide whether the command line argument or the environment variable should take precedence if the program is run with one set to case sensitive and one set to case insensitive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abe7b976e1b0d3e4291f7926f32c54bb5f29a679" translate="yes" xml:space="preserve">
          <source>Some rules in the grammar &amp;mdash; notably &lt;a href=&quot;expressions/operator-expr#borrow-operators&quot;&gt;unary operators&lt;/a&gt;, &lt;a href=&quot;expressions/operator-expr#arithmetic-and-logical-binary-operators&quot;&gt;binary operators&lt;/a&gt;, and &lt;a href=&quot;keywords&quot;&gt;keywords&lt;/a&gt; &amp;mdash; are given in a simplified form: as a listing of printable strings. These cases form a subset of the rules regarding the &lt;a href=&quot;tokens&quot;&gt;token&lt;/a&gt; rule, and are assumed to be the result of a lexical-analysis phase feeding the parser, driven by a</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7b4fd9fd085cf7f8062ca0116154d54b2f67425" translate="yes" xml:space="preserve">
          <source>Some type parameters have the same name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44cd5246860ce8877c0c50833e18009c3c5adbcd" translate="yes" xml:space="preserve">
          <source>Some types can't be copied safely. For example, copying &lt;code&gt;&amp;amp;mut T&lt;/code&gt; would create an aliased mutable reference. Copying &lt;a href=&quot;../string/struct.string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; would duplicate responsibility for managing the &lt;a href=&quot;../string/struct.string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt;'s buffer, leading to a double free.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="395f2accbb2c55d74192ec105383cfaec91e432d" translate="yes" xml:space="preserve">
          <source>Some types have no ownership semantics at all and are trivial to duplicate. An example is &lt;code&gt;i32&lt;/code&gt; and the other number types. We don't have to call &lt;code&gt;.clone()&lt;/code&gt; to clone them, because they are marked &lt;code&gt;Copy&lt;/code&gt; in addition to &lt;code&gt;Clone&lt;/code&gt;. Implicit cloning is more convenient in this case. We can mark our own types &lt;code&gt;Copy&lt;/code&gt; if all their members also are marked &lt;code&gt;Copy&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8827ce6f7fbbe39876def8741d8f6c0f34bda4ac" translate="yes" xml:space="preserve">
          <source>Some types make it possible to go from borrowed to owned, usually by implementing the &lt;code&gt;Clone&lt;/code&gt; trait. But &lt;code&gt;Clone&lt;/code&gt; works only for going from &lt;code&gt;&amp;amp;T&lt;/code&gt; to &lt;code&gt;T&lt;/code&gt;. The &lt;code&gt;ToOwned&lt;/code&gt; trait generalizes &lt;code&gt;Clone&lt;/code&gt; to construct owned data from any borrow of a given type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fa499ad14d540d4ab748c3f63c14c59562feb8d" translate="yes" xml:space="preserve">
          <source>Some value &lt;code&gt;T&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="878090a0fad65a133ac057071000349608e90593" translate="yes" xml:space="preserve">
          <source>Somehow reclaim the ownership.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04c99ebec2739e6e397c7eed6e9e1c2df41e5a11" translate="yes" xml:space="preserve">
          <source>Something that implements &lt;code&gt;DoubleEndedIterator&lt;/code&gt; has one extra capability over something that implements &lt;a href=&quot;trait.iterator&quot;&gt;&lt;code&gt;Iterator&lt;/code&gt;&lt;/a&gt;: the ability to also take &lt;code&gt;Item&lt;/code&gt;s from the back, as well as the front.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e879dd2e95b609ab6dd974536decd029eefa2e22" translate="yes" xml:space="preserve">
          <source>Sometimes a certain value is used many times throughout a program, and it can become inconvenient to copy it over and over. What's more, it's not always possible or desirable to make it a variable that gets carried around to each function that needs it. In these cases, the &lt;code&gt;const&lt;/code&gt; keyword provides a convenient alternative to code duplication.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b4ce2023b0107d37a404740c834f4e456c69887" translate="yes" xml:space="preserve">
          <source>Sometimes a few specific tests can be very time-consuming to execute, so you might want to exclude them during most runs of &lt;code&gt;cargo test&lt;/code&gt;. Rather than listing as arguments all tests you do want to run, you can instead annotate the time-consuming tests using the &lt;code&gt;ignore&lt;/code&gt; attribute to exclude them, as shown here:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22420dec705f5672d2fbfde1a393dbcf1c213a8d" translate="yes" xml:space="preserve">
          <source>Sometimes a type needs be mutated while having multiple aliases. In Rust this is achieved using a pattern called &lt;em&gt;interior mutability&lt;/em&gt;. A type has interior mutability if its internal state can be changed through a &lt;a href=&quot;types/pointer#shared-references-&quot;&gt;shared reference&lt;/a&gt; to it. This goes against the usual &lt;a href=&quot;behavior-considered-undefined&quot;&gt;requirement&lt;/a&gt; that the value pointed to by a shared reference is not mutated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9720e6d76f55a2ee93872054183df80d4aae5ef" translate="yes" xml:space="preserve">
          <source>Sometimes it&amp;rsquo;s useful to have default behavior for some or all of the methods in a trait instead of requiring implementations for all methods on every type. Then, as we implement the trait on a particular type, we can keep or override each method&amp;rsquo;s default behavior.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0682d5f8323b14fe072519e99ff0b6b6bc710c2" translate="yes" xml:space="preserve">
          <source>Sometimes we don't need to move the value. Using a reference, we can let another function borrow the value without changing its ownership. In the example below, we don't actually have to move our string to &lt;code&gt;calculate_length&lt;/code&gt;, we can give it a reference to it with &lt;code&gt;&amp;amp;&lt;/code&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="354a53eabe5fcae89d7d1b83e827a4a82dec495d" translate="yes" xml:space="preserve">
          <source>Sometimes we don't want a reference, but a duplicate. All types marked &lt;code&gt;Clone&lt;/code&gt; can be duplicated by calling &lt;code&gt;.clone()&lt;/code&gt;. Subsequent changes to a clone do not affect the original variable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff912c381f4928aab54a72b634a6064d57ffd41a" translate="yes" xml:space="preserve">
          <source>Sometimes, bad things happen in your code, and there&amp;rsquo;s nothing you can do about it. In these cases, Rust has the &lt;code&gt;panic!&lt;/code&gt; macro. When the &lt;code&gt;panic!&lt;/code&gt; macro executes, your program will print a failure message, unwind and clean up the stack, and then quit. This most commonly occurs when a bug of some kind has been detected and it&amp;rsquo;s not clear to the programmer how to handle the error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0e1220c83bd29682d8aeeb6c70d9bd1fcc32412" translate="yes" xml:space="preserve">
          <source>Sometimes, running a full test suite can take a long time. If you&amp;rsquo;re working on code in a particular area, you might want to run only the tests pertaining to that code. You can choose which tests to run by passing &lt;code&gt;cargo test&lt;/code&gt; the name or names of the test(s) you want to run as an argument.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33934c254a892896c6e91fea97bdb219087bd1a5" translate="yes" xml:space="preserve">
          <source>Sometimes, you might need one trait to use another trait&amp;rsquo;s functionality. In this case, you need to rely on the dependent trait also being implemented. The trait you rely on is a &lt;em&gt;supertrait&lt;/em&gt; of the trait you&amp;rsquo;re implementing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7dd2749cfb5be67fe5b24695dba8809079cc076a" translate="yes" xml:space="preserve">
          <source>Sometimes, you want to fall back to some kind of default value, and don't particularly care what it is. This comes up often with &lt;code&gt;struct&lt;/code&gt;s that define a set of options:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5542a442b57c4e85de5da2fb88f9df18bb1e825" translate="yes" xml:space="preserve">
          <source>Sometimes, you&amp;rsquo;ll see multiple messages printed for one browser request; the reason might be that the browser is making a request for the page as well as a request for other resources, like the &lt;em&gt;favicon.ico&lt;/em&gt; icon that appears in the browser tab.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd4fa08a56f591f3a44dac915c98df209a1bd2bf" translate="yes" xml:space="preserve">
          <source>Sometimes, your Rust code might need to interact with code written in another language. For this, Rust has a keyword, &lt;code&gt;extern&lt;/code&gt;, that facilitates the creation and use of a &lt;em&gt;Foreign Function Interface (FFI)&lt;/em&gt;. An FFI is a way for a programming language to define functions and enable a different (foreign) programming language to call those functions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a41bcc58d5abfba7380b0c52ec09f547cfe68f0e" translate="yes" xml:space="preserve">
          <source>Soon we&amp;rsquo;ll define the &lt;code&gt;impl_hello_macro&lt;/code&gt; function, which is where we&amp;rsquo;ll build the new Rust code we want to include. But before we do, note that the output for our derive macro is also a &lt;code&gt;TokenStream&lt;/code&gt;. The returned &lt;code&gt;TokenStream&lt;/code&gt; is added to the code that our crate users write, so when they compile their crate, they&amp;rsquo;ll get the extra functionality that we provide in the modified &lt;code&gt;TokenStream&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8426200d0f6fa7ad9d762b86260809e08c44014e" translate="yes" xml:space="preserve">
          <source>Sorts the slice with a comparator function, but may not preserve the order of equal elements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b82ccd89f52b63e5b4440242a27febda3e964e83" translate="yes" xml:space="preserve">
          <source>Sorts the slice with a comparator function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbc7bc291a372357db09800ac2e37d3ac779ef97" translate="yes" xml:space="preserve">
          <source>Sorts the slice with a key extraction function, but may not preserve the order of equal elements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f84fa97c498bfa88df86d33d1265c8844c055a6" translate="yes" xml:space="preserve">
          <source>Sorts the slice with a key extraction function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0017e05bd16c8d58c49a577c9b4b892ce88f07b2" translate="yes" xml:space="preserve">
          <source>Sorts the slice, but may not preserve the order of equal elements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7818ee857300496e42253e304ef95d74874e5e7b" translate="yes" xml:space="preserve">
          <source>Sorts the slice.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b37110e5b01350732eac4676af2611966b9ccef" translate="yes" xml:space="preserve">
          <source>Source Code</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da9fb400dd20d98034fe54139d4b1854fa050f78" translate="yes" xml:space="preserve">
          <source>Source File</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5ce2cc6a5699323b6831e47e5174d91fe3c8511" translate="yes" xml:space="preserve">
          <source>Spawning a process</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7454c02ba355d0433ce7be23ac48b7b250144890" translate="yes" xml:space="preserve">
          <source>Spawning a thread</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="483805b840862ed495832b49431de70641c81f46" translate="yes" xml:space="preserve">
          <source>Spawns a new thread by taking ownership of the &lt;code&gt;Builder&lt;/code&gt;, and returns an &lt;a href=&quot;../io/type.result&quot;&gt;&lt;code&gt;io::Result&lt;/code&gt;&lt;/a&gt; to its &lt;a href=&quot;struct.joinhandle&quot;&gt;&lt;code&gt;JoinHandle&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92e23ac918399fba2469fc0427afc1b87a34fe41" translate="yes" xml:space="preserve">
          <source>Spawns a new thread without any lifetime restrictions by taking ownership of the &lt;code&gt;Builder&lt;/code&gt;, and returns an &lt;a href=&quot;../io/type.result&quot;&gt;&lt;code&gt;io::Result&lt;/code&gt;&lt;/a&gt; to its &lt;a href=&quot;struct.joinhandle&quot;&gt;&lt;code&gt;JoinHandle&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05b9b0a3d86e039bcc54742ca681657104d05e1f" translate="yes" xml:space="preserve">
          <source>Spawns a new thread, returning a &lt;a href=&quot;struct.joinhandle&quot;&gt;&lt;code&gt;JoinHandle&lt;/code&gt;&lt;/a&gt; for it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="325ea90d05b6256fb997f282a35a193bb878a063" translate="yes" xml:space="preserve">
          <source>Speaking of different ways to write this function, Listing 9-9 shows that there&amp;rsquo;s a way to make this even shorter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8528f5513b210fdc5ba63bbf7c9fcc5a49feb440" translate="yes" xml:space="preserve">
          <source>Special types and traits</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac4fd7fd5b591159d1aee83a6b7504035d209e56" translate="yes" xml:space="preserve">
          <source>Specialization only allows you to override &lt;code&gt;default&lt;/code&gt; functions in implementations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d00577e9194f109a205fbc91c68f0a3e7799e4d" translate="yes" xml:space="preserve">
          <source>Specifically, &lt;code&gt;size_hint()&lt;/code&gt; returns a tuple where the first element is the lower bound, and the second element is the upper bound.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80bb8eabe8ca6d37cb7c125a325bc00d052360f7" translate="yes" xml:space="preserve">
          <source>Specifically, you&amp;rsquo;ll learn about variables, basic types, functions, comments, and control flow. These foundations will be in every Rust program, and learning them early will give you a strong core to start from.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d422ba73af671dffcac7951c667b3d3523e7f2d" translate="yes" xml:space="preserve">
          <source>Specifies parameters to generic type in a type (e.g., &lt;code&gt;Vec&amp;lt;u8&amp;gt;&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5848c6c54e7cf62a457a1ca7b8601c6891978fe7" translate="yes" xml:space="preserve">
          <source>Specifies parameters to generic type, function, or method in an expression; often referred to as turbofish (e.g., &lt;code&gt;&quot;42&quot;.parse::&amp;lt;i32&amp;gt;()&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68e65850f75a9e00d279c77db1c7ca3ab3d82f87" translate="yes" xml:space="preserve">
          <source>Specifies the file extension used for shared libraries on this platform that goes after the dot. Example value is &lt;code&gt;so&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9cefdece2a06c3c0efa70639ac46798ab027b1c3" translate="yes" xml:space="preserve">
          <source>Specifies the file extension, if any, used for executable binaries on this platform. Example value is &lt;code&gt;exe&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8d9d5fb786047c6ab8ade0bb17752bf87883d0c" translate="yes" xml:space="preserve">
          <source>Specifies the filename prefix used for shared libraries on this platform. Example value is &lt;code&gt;lib&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="616edeb7819affd938929d61c6ce30b2bccea100" translate="yes" xml:space="preserve">
          <source>Specifies the filename suffix used for executable binaries on this platform. Example value is &lt;code&gt;.exe&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="092de69a444716b03c470d8e276de2d325391db4" translate="yes" xml:space="preserve">
          <source>Specifies the filename suffix used for shared libraries on this platform. Example value is &lt;code&gt;.so&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d28aa36d621dad03992a1432875cb351ee9c51a" translate="yes" xml:space="preserve">
          <source>Specify the code to run when a value goes out of scope by implementing the &lt;code&gt;Drop&lt;/code&gt; trait. The &lt;code&gt;Drop&lt;/code&gt; trait requires you to implement one method named &lt;code&gt;drop&lt;/code&gt; that takes a mutable reference to &lt;code&gt;self&lt;/code&gt;. To see when Rust calls &lt;code&gt;drop&lt;/code&gt;, let&amp;rsquo;s implement &lt;code&gt;drop&lt;/code&gt; with &lt;code&gt;println!&lt;/code&gt; statements for now.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53bce43a089241f4c2fafff5a8b175cee67180c5" translate="yes" xml:space="preserve">
          <source>Specifying Multiple Trait Bounds with the &lt;code id=&quot;specifying-multiple-trait-bounds-with-the--syntax&quot;&gt;+&lt;/code&gt; Syntax</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64d10a40d688450eabd55d43552d23834ffba599" translate="yes" xml:space="preserve">
          <source>Specifying Placeholder Types in Trait Definitions with Associated Types</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da26747b5b8c997ced717129fbec68e2cdbe7a45" translate="yes" xml:space="preserve">
          <source>Specifying a relative path with &lt;code&gt;use&lt;/code&gt; is slightly different. Instead of starting from a name in the current scope, we must start the path given to &lt;code&gt;use&lt;/code&gt; with the keyword &lt;code&gt;self&lt;/code&gt;. Listing 7-12 shows how to specify a relative path to get the same behavior as in Listing 7-11.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc11eff720809c4cd493109eac5dc2d81ef40e9c" translate="yes" xml:space="preserve">
          <source>Specifying the trait name before the method name clarifies to Rust which implementation of &lt;code&gt;fly&lt;/code&gt; we want to call. We could also write &lt;code&gt;Human::fly(&amp;amp;person)&lt;/code&gt;, which is equivalent to the &lt;code&gt;person.fly()&lt;/code&gt; that we used in Listing 19-18, but this is a bit longer to write if we don&amp;rsquo;t need to disambiguate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fdd3fcfb95f79f565b62aab40aff6c5797f83dce" translate="yes" xml:space="preserve">
          <source>Splice</source>
          <target state="translated">Splice</target>
        </trans-unit>
        <trans-unit id="102a13cdf7dd5683f20ca56504f851ec5d4093f7" translate="yes" xml:space="preserve">
          <source>Splice::all</source>
          <target state="translated">Splice::all</target>
        </trans-unit>
        <trans-unit id="babc83a710145cf29ba5445f9a833761727d85e2" translate="yes" xml:space="preserve">
          <source>Splice::any</source>
          <target state="translated">Splice::any</target>
        </trans-unit>
        <trans-unit id="a39117cda9a6799d2b046f5064ad27e81c8b7d5e" translate="yes" xml:space="preserve">
          <source>Splice::borrow</source>
          <target state="translated">Splice::borrow</target>
        </trans-unit>
        <trans-unit id="022eb3a4b4a3bd40f080da9a0e93e67b820b75b9" translate="yes" xml:space="preserve">
          <source>Splice::borrow_mut</source>
          <target state="translated">Splice::borrow_mut</target>
        </trans-unit>
        <trans-unit id="ff7eb6c2e890ee28b4d42522a568ad4b9b48c363" translate="yes" xml:space="preserve">
          <source>Splice::by_ref</source>
          <target state="translated">Splice::by_ref</target>
        </trans-unit>
        <trans-unit id="62d42f608770ea5ae5c702b0103a25bb0ca13a0f" translate="yes" xml:space="preserve">
          <source>Splice::chain</source>
          <target state="translated">Splice::chain</target>
        </trans-unit>
        <trans-unit id="451464e9658673df48db7da7c1a46940dbb41ff8" translate="yes" xml:space="preserve">
          <source>Splice::cloned</source>
          <target state="translated">Splice::cloned</target>
        </trans-unit>
        <trans-unit id="2bbc8d6617fd04cbf168523ef4090fec6bf1a14d" translate="yes" xml:space="preserve">
          <source>Splice::cmp</source>
          <target state="translated">Splice::cmp</target>
        </trans-unit>
        <trans-unit id="5f8a1da44559a77b748b3f6abf002f9d0db173bf" translate="yes" xml:space="preserve">
          <source>Splice::collect</source>
          <target state="translated">Splice::collect</target>
        </trans-unit>
        <trans-unit id="3b7f7a8c970a343e1eaadb07c2da66c9efd7e77d" translate="yes" xml:space="preserve">
          <source>Splice::copied</source>
          <target state="translated">Splice::copied</target>
        </trans-unit>
        <trans-unit id="ba54e7ed93441b38a9b01983d469ce12f568db6f" translate="yes" xml:space="preserve">
          <source>Splice::count</source>
          <target state="translated">Splice::count</target>
        </trans-unit>
        <trans-unit id="45d4337a700716d7839d3746c85fc7fc40d5988a" translate="yes" xml:space="preserve">
          <source>Splice::cycle</source>
          <target state="translated">Splice::cycle</target>
        </trans-unit>
        <trans-unit id="53242c9915296db70b6a71a2cde8eb9109c0f23d" translate="yes" xml:space="preserve">
          <source>Splice::drop</source>
          <target state="translated">Splice::drop</target>
        </trans-unit>
        <trans-unit id="0071535faec3336e523e6d1a1272b46979258d35" translate="yes" xml:space="preserve">
          <source>Splice::enumerate</source>
          <target state="translated">Splice::enumerate</target>
        </trans-unit>
        <trans-unit id="01e94ace5d2cfe2543e74dfb7fa0055a44ee9fea" translate="yes" xml:space="preserve">
          <source>Splice::eq</source>
          <target state="translated">Splice::eq</target>
        </trans-unit>
        <trans-unit id="dd000471f364dceac679d4352065fa0ae0e8c457" translate="yes" xml:space="preserve">
          <source>Splice::filter</source>
          <target state="translated">Splice::filter</target>
        </trans-unit>
        <trans-unit id="5e358571c8faf5b751e10a1cd686dd036ecc316c" translate="yes" xml:space="preserve">
          <source>Splice::filter_map</source>
          <target state="translated">Splice::filter_map</target>
        </trans-unit>
        <trans-unit id="961a4aa3a919c6a8b919240300dc2fd22d2c1c91" translate="yes" xml:space="preserve">
          <source>Splice::find</source>
          <target state="translated">Splice::find</target>
        </trans-unit>
        <trans-unit id="486f11abd990d21f3257c01a71e7f28db5506a8c" translate="yes" xml:space="preserve">
          <source>Splice::find_map</source>
          <target state="translated">Splice::find_map</target>
        </trans-unit>
        <trans-unit id="8f321bf0b2ca33ebb6a97663107e3617ec2c137e" translate="yes" xml:space="preserve">
          <source>Splice::flat_map</source>
          <target state="translated">Splice::flat_map</target>
        </trans-unit>
        <trans-unit id="499eeb25b3b20a78fb1cd8b34ee0f1a13abf1370" translate="yes" xml:space="preserve">
          <source>Splice::flatten</source>
          <target state="translated">Splice::flatten</target>
        </trans-unit>
        <trans-unit id="ce5fb222ef2ec7c095e8b6e325fe96997504ba61" translate="yes" xml:space="preserve">
          <source>Splice::fmt</source>
          <target state="translated">Splice::fmt</target>
        </trans-unit>
        <trans-unit id="c6a7ba92d0ef033b5d48af7d964a50a86e18162a" translate="yes" xml:space="preserve">
          <source>Splice::fold</source>
          <target state="translated">Splice::fold</target>
        </trans-unit>
        <trans-unit id="e82705600b1f26364c718836b0449d586d4eb1ea" translate="yes" xml:space="preserve">
          <source>Splice::for_each</source>
          <target state="translated">Splice::for_each</target>
        </trans-unit>
        <trans-unit id="21323427a2a29a43c17c997c3dbd79b674bfb4e8" translate="yes" xml:space="preserve">
          <source>Splice::from</source>
          <target state="translated">Splice::from</target>
        </trans-unit>
        <trans-unit id="a7cead373f4b952225e0764832f3c62efdc4a6cf" translate="yes" xml:space="preserve">
          <source>Splice::fuse</source>
          <target state="translated">Splice::fuse</target>
        </trans-unit>
        <trans-unit id="aa50f3408da9d84c54899b17015b29bbede05d5b" translate="yes" xml:space="preserve">
          <source>Splice::ge</source>
          <target state="translated">Splice::ge</target>
        </trans-unit>
        <trans-unit id="e32ac27b7a480cce928d49c2b1bc40e73780fecd" translate="yes" xml:space="preserve">
          <source>Splice::gt</source>
          <target state="translated">Splice::gt</target>
        </trans-unit>
        <trans-unit id="38eceb5e345323b05e52c82393da17d52e70cbe9" translate="yes" xml:space="preserve">
          <source>Splice::inspect</source>
          <target state="translated">Splice::inspect</target>
        </trans-unit>
        <trans-unit id="491d5b0b46d1c2d818131b73e335fe5ca82e5b48" translate="yes" xml:space="preserve">
          <source>Splice::into</source>
          <target state="translated">Splice::into</target>
        </trans-unit>
        <trans-unit id="98f2ae726cd2762c1db54d8758051fc1261e16cf" translate="yes" xml:space="preserve">
          <source>Splice::into_iter</source>
          <target state="translated">Splice::into_iter</target>
        </trans-unit>
        <trans-unit id="383d95f7f63652db96cc3aec4aa2d1b740db1135" translate="yes" xml:space="preserve">
          <source>Splice::is_empty</source>
          <target state="translated">Splice::is_empty</target>
        </trans-unit>
        <trans-unit id="e65d1565e1f581593a8ecd6e860dd977c23b52c9" translate="yes" xml:space="preserve">
          <source>Splice::is_sorted</source>
          <target state="translated">Splice::is_sorted</target>
        </trans-unit>
        <trans-unit id="4fcaeab7099b38cf11d286c70e6781f06cf82691" translate="yes" xml:space="preserve">
          <source>Splice::is_sorted_by</source>
          <target state="translated">Splice::is_sorted_by</target>
        </trans-unit>
        <trans-unit id="18bddef0dba34d9e52d2fa579f0e69e1694f8f0e" translate="yes" xml:space="preserve">
          <source>Splice::is_sorted_by_key</source>
          <target state="translated">Splice::is_sorted_by_key</target>
        </trans-unit>
        <trans-unit id="ba7524a53544c3d3016b167f7fc9deb79720b18f" translate="yes" xml:space="preserve">
          <source>Splice::last</source>
          <target state="translated">Splice::last</target>
        </trans-unit>
        <trans-unit id="f570faebe931a784fb2709e99800059f3f92a268" translate="yes" xml:space="preserve">
          <source>Splice::le</source>
          <target state="translated">Splice::le</target>
        </trans-unit>
        <trans-unit id="ac9374e537a63770b62a448312472a9dc3d4a8ab" translate="yes" xml:space="preserve">
          <source>Splice::len</source>
          <target state="translated">Splice::len</target>
        </trans-unit>
        <trans-unit id="6d78866daf059bac4c1db0a3f185ee417ae09fe8" translate="yes" xml:space="preserve">
          <source>Splice::lt</source>
          <target state="translated">Splice::lt</target>
        </trans-unit>
        <trans-unit id="363a586253b0de42e9bc51b01820d6cd56b4a63e" translate="yes" xml:space="preserve">
          <source>Splice::map</source>
          <target state="translated">Splice::map</target>
        </trans-unit>
        <trans-unit id="c5cfae9189da826784c424506a8955cf97bff5a5" translate="yes" xml:space="preserve">
          <source>Splice::max</source>
          <target state="translated">Splice::max</target>
        </trans-unit>
        <trans-unit id="a8c3e4f24cc13f365be780b3805514395ccbc405" translate="yes" xml:space="preserve">
          <source>Splice::max_by</source>
          <target state="translated">Splice::max_by</target>
        </trans-unit>
        <trans-unit id="8229392864f24a74b716976cb653abe3703dd9f1" translate="yes" xml:space="preserve">
          <source>Splice::max_by_key</source>
          <target state="translated">Splice::max_by_key</target>
        </trans-unit>
        <trans-unit id="d703d1486f11021ef75c055680b2b99db9b75899" translate="yes" xml:space="preserve">
          <source>Splice::min</source>
          <target state="translated">Splice::min</target>
        </trans-unit>
        <trans-unit id="0ab332500f5703d676d91657b86bf9e1965dcf11" translate="yes" xml:space="preserve">
          <source>Splice::min_by</source>
          <target state="translated">Splice::min_by</target>
        </trans-unit>
        <trans-unit id="1f553ce50563a0a28d5de7bfe1638bab7dca6dc2" translate="yes" xml:space="preserve">
          <source>Splice::min_by_key</source>
          <target state="translated">Splice::min_by_key</target>
        </trans-unit>
        <trans-unit id="ba29255cd5c58d38127acf8b53877bd8c7828c4f" translate="yes" xml:space="preserve">
          <source>Splice::ne</source>
          <target state="translated">Splice::ne</target>
        </trans-unit>
        <trans-unit id="30d321559302113af9914b75260c174c9412f906" translate="yes" xml:space="preserve">
          <source>Splice::next</source>
          <target state="translated">Splice::next</target>
        </trans-unit>
        <trans-unit id="b4a407cbe153bcddb6c861793351fb23454f3a5b" translate="yes" xml:space="preserve">
          <source>Splice::next_back</source>
          <target state="translated">Splice::next_back</target>
        </trans-unit>
        <trans-unit id="cf6219bb4e39772af2093b7bc00b413958c3ae44" translate="yes" xml:space="preserve">
          <source>Splice::nth</source>
          <target state="translated">Splice::nth</target>
        </trans-unit>
        <trans-unit id="a5a9ee518d12670f202aa4ce6973ff33a0df7922" translate="yes" xml:space="preserve">
          <source>Splice::nth_back</source>
          <target state="translated">Splice::nth_back</target>
        </trans-unit>
        <trans-unit id="9b21bc4e106668f934eb7f233a9ca2cc44a6a913" translate="yes" xml:space="preserve">
          <source>Splice::partial_cmp</source>
          <target state="translated">Splice::partial_cmp</target>
        </trans-unit>
        <trans-unit id="1dee4e2895d327033ad3c3b66c820542684a464e" translate="yes" xml:space="preserve">
          <source>Splice::partition</source>
          <target state="translated">Splice::partition</target>
        </trans-unit>
        <trans-unit id="aa1db17c392f556e335fcce5561711bb05a03b92" translate="yes" xml:space="preserve">
          <source>Splice::peekable</source>
          <target state="translated">Splice::peekable</target>
        </trans-unit>
        <trans-unit id="1eadd0033d01820bc0d97f1f2e33d53eb5ec1779" translate="yes" xml:space="preserve">
          <source>Splice::position</source>
          <target state="translated">Splice::position</target>
        </trans-unit>
        <trans-unit id="666018549e296c04d8c5c52771470078bbb7862a" translate="yes" xml:space="preserve">
          <source>Splice::product</source>
          <target state="translated">Splice::product</target>
        </trans-unit>
        <trans-unit id="ecd9316bd8bc61c51b016bdd8cd9883015f5c3cd" translate="yes" xml:space="preserve">
          <source>Splice::rev</source>
          <target state="translated">Splice::rev</target>
        </trans-unit>
        <trans-unit id="7386f1859ba07bbd5f17923107c38e480304fbfe" translate="yes" xml:space="preserve">
          <source>Splice::rfind</source>
          <target state="translated">Splice::rfind</target>
        </trans-unit>
        <trans-unit id="24ba7570e44bb8b3aea278a77720639f4e59dfd0" translate="yes" xml:space="preserve">
          <source>Splice::rfold</source>
          <target state="translated">Splice::rfold</target>
        </trans-unit>
        <trans-unit id="ec2cdc5eaa84d8e2631b6832f7d4a8fdd17a6bc4" translate="yes" xml:space="preserve">
          <source>Splice::rposition</source>
          <target state="translated">Splice::rposition</target>
        </trans-unit>
        <trans-unit id="fabc1d12e61dba4a5c5c2c6b1924c2c5f8609f4c" translate="yes" xml:space="preserve">
          <source>Splice::scan</source>
          <target state="translated">Splice::scan</target>
        </trans-unit>
        <trans-unit id="8d5ee36fd72fb3460109d468d4d74555827a0ee9" translate="yes" xml:space="preserve">
          <source>Splice::size_hint</source>
          <target state="translated">Splice::size_hint</target>
        </trans-unit>
        <trans-unit id="09f288b17a862c019979176e29e7ccea42d1dedc" translate="yes" xml:space="preserve">
          <source>Splice::skip</source>
          <target state="translated">Splice::skip</target>
        </trans-unit>
        <trans-unit id="3d180d62d277f379bb8a60b4f1823d06b1bfa2e6" translate="yes" xml:space="preserve">
          <source>Splice::skip_while</source>
          <target state="translated">Splice::skip_while</target>
        </trans-unit>
        <trans-unit id="cd11d5291334a37b5de45419d0b7eedb5e4469cb" translate="yes" xml:space="preserve">
          <source>Splice::step_by</source>
          <target state="translated">Splice::step_by</target>
        </trans-unit>
        <trans-unit id="831a4f097a3c47319b54babc561d38910f170c02" translate="yes" xml:space="preserve">
          <source>Splice::sum</source>
          <target state="translated">Splice::sum</target>
        </trans-unit>
        <trans-unit id="3c5d879dcd505f6b39c7518de9b235dc8c01e4fc" translate="yes" xml:space="preserve">
          <source>Splice::take</source>
          <target state="translated">Splice::take</target>
        </trans-unit>
        <trans-unit id="2d71962fbf8d0ead68d89535d6778944abcdc679" translate="yes" xml:space="preserve">
          <source>Splice::take_while</source>
          <target state="translated">Splice::take_while</target>
        </trans-unit>
        <trans-unit id="38f93c9f33eeb59968290a7e0897c1f55f96c687" translate="yes" xml:space="preserve">
          <source>Splice::try_fold</source>
          <target state="translated">Splice::try_fold</target>
        </trans-unit>
        <trans-unit id="724df3527b404d3a53b3e31356080824d05c7816" translate="yes" xml:space="preserve">
          <source>Splice::try_for_each</source>
          <target state="translated">Splice::try_for_each</target>
        </trans-unit>
        <trans-unit id="fd574e8628936827c6ae9027b872e02aa508a457" translate="yes" xml:space="preserve">
          <source>Splice::try_from</source>
          <target state="translated">Splice::try_from</target>
        </trans-unit>
        <trans-unit id="eb53ae611017056488d398b33cbbc3d7954de6ee" translate="yes" xml:space="preserve">
          <source>Splice::try_into</source>
          <target state="translated">Splice::try_into</target>
        </trans-unit>
        <trans-unit id="44e12332c99bd4ce49d2bb351c49223807207dd9" translate="yes" xml:space="preserve">
          <source>Splice::try_rfold</source>
          <target state="translated">Splice::try_rfold</target>
        </trans-unit>
        <trans-unit id="161d232f5fe792d5ecbec788482e69487e0c0d56" translate="yes" xml:space="preserve">
          <source>Splice::type_id</source>
          <target state="translated">Splice::type_id</target>
        </trans-unit>
        <trans-unit id="1bbfd48d60c0a4558b463911dbf85558f413ffa6" translate="yes" xml:space="preserve">
          <source>Splice::unzip</source>
          <target state="translated">Splice::unzip</target>
        </trans-unit>
        <trans-unit id="08e4a64b53c528f2a546f45e3fc516d0e8819ad4" translate="yes" xml:space="preserve">
          <source>Splice::zip</source>
          <target state="translated">Splice::zip</target>
        </trans-unit>
        <trans-unit id="fc8230b4119ad4b994db2324d71f4e0ae7ad932c" translate="yes" xml:space="preserve">
          <source>Split</source>
          <target state="translated">Split</target>
        </trans-unit>
        <trans-unit id="b97656a3c38e1335485a4b3a9614459a6c47d666" translate="yes" xml:space="preserve">
          <source>Split your program into a &lt;em&gt;main.rs&lt;/em&gt; and a &lt;em&gt;lib.rs&lt;/em&gt; and move your program&amp;rsquo;s logic to &lt;em&gt;lib.rs&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50d9b1e83df2fc97d5402e500dababd9cd5b96e5" translate="yes" xml:space="preserve">
          <source>Split::all</source>
          <target state="translated">Split::all</target>
        </trans-unit>
        <trans-unit id="c3ffc2df77467ddf70ca7e247ca14fe7bf5358c5" translate="yes" xml:space="preserve">
          <source>Split::any</source>
          <target state="translated">Split::any</target>
        </trans-unit>
        <trans-unit id="ddee622860a4181fe41501ad32f30df9891bae71" translate="yes" xml:space="preserve">
          <source>Split::borrow</source>
          <target state="translated">Split::borrow</target>
        </trans-unit>
        <trans-unit id="fd8aa3f4c0c069bec8b3cc99e23a4f97d1e387e5" translate="yes" xml:space="preserve">
          <source>Split::borrow_mut</source>
          <target state="translated">Split::borrow_mut</target>
        </trans-unit>
        <trans-unit id="60a9acc7030fe94d73196e5eb6bc9945c2cb214d" translate="yes" xml:space="preserve">
          <source>Split::by_ref</source>
          <target state="translated">Split::by_ref</target>
        </trans-unit>
        <trans-unit id="07781b46907c350ec31533fd95ff333fb83f4672" translate="yes" xml:space="preserve">
          <source>Split::chain</source>
          <target state="translated">Split::chain</target>
        </trans-unit>
        <trans-unit id="01414495bfb2107bcb842363eaa2aaefde42adcb" translate="yes" xml:space="preserve">
          <source>Split::clone</source>
          <target state="translated">Split::clone</target>
        </trans-unit>
        <trans-unit id="8fa94e8f3a6947468861d014a2242e7e533419de" translate="yes" xml:space="preserve">
          <source>Split::clone_from</source>
          <target state="translated">Split::clone_from</target>
        </trans-unit>
        <trans-unit id="9fabd2265062c7c41c7e60fd2c8e2d73bfd612ce" translate="yes" xml:space="preserve">
          <source>Split::clone_into</source>
          <target state="translated">Split::clone_into</target>
        </trans-unit>
        <trans-unit id="11b7d114dd91e3f592d1c2b7c0ca525a9ce90a2b" translate="yes" xml:space="preserve">
          <source>Split::cloned</source>
          <target state="translated">Split::cloned</target>
        </trans-unit>
        <trans-unit id="f1939db29648a91dd7990b7724eaa4701118728c" translate="yes" xml:space="preserve">
          <source>Split::cmp</source>
          <target state="translated">Split::cmp</target>
        </trans-unit>
        <trans-unit id="feb6a82b0f70e568351ee948035313650d3cdcae" translate="yes" xml:space="preserve">
          <source>Split::collect</source>
          <target state="translated">Split::collect</target>
        </trans-unit>
        <trans-unit id="f42c61d8dcd2768f77ba1f6b43cf6d82bfd95a0c" translate="yes" xml:space="preserve">
          <source>Split::copied</source>
          <target state="translated">Split::copied</target>
        </trans-unit>
        <trans-unit id="11a6cf772057ae6ae09af76efbe481b7757c7027" translate="yes" xml:space="preserve">
          <source>Split::count</source>
          <target state="translated">Split::count</target>
        </trans-unit>
        <trans-unit id="a5c31ec93192ead6403df1675cb15b6ee7b4d58b" translate="yes" xml:space="preserve">
          <source>Split::cycle</source>
          <target state="translated">Split::cycle</target>
        </trans-unit>
        <trans-unit id="290ea8f15ce52868f93720412912e4fac41386bc" translate="yes" xml:space="preserve">
          <source>Split::enumerate</source>
          <target state="translated">Split::enumerate</target>
        </trans-unit>
        <trans-unit id="6470537034febc0a41d05fe1b8c54e6642ed5710" translate="yes" xml:space="preserve">
          <source>Split::eq</source>
          <target state="translated">Split::eq</target>
        </trans-unit>
        <trans-unit id="3e0182cc7cce03790b888fd7e5621fa6310f5671" translate="yes" xml:space="preserve">
          <source>Split::filter</source>
          <target state="translated">Split::filter</target>
        </trans-unit>
        <trans-unit id="e022fab0242f750d87a4773ec168842ee2272b50" translate="yes" xml:space="preserve">
          <source>Split::filter_map</source>
          <target state="translated">Split::filter_map</target>
        </trans-unit>
        <trans-unit id="e47d64b530b616f401c93bae4ee8bf3ff9c2c2ad" translate="yes" xml:space="preserve">
          <source>Split::find</source>
          <target state="translated">Split::find</target>
        </trans-unit>
        <trans-unit id="276ea1a6ed0ab1a1afa6d11176c14710591f7017" translate="yes" xml:space="preserve">
          <source>Split::find_map</source>
          <target state="translated">Split::find_map</target>
        </trans-unit>
        <trans-unit id="dbc673f557faad90dab8cfd1589d478be4cca50d" translate="yes" xml:space="preserve">
          <source>Split::flat_map</source>
          <target state="translated">Split::flat_map</target>
        </trans-unit>
        <trans-unit id="3eb3bdbfcf189cdbddc53ee7c555d0c894120388" translate="yes" xml:space="preserve">
          <source>Split::flatten</source>
          <target state="translated">Split::flatten</target>
        </trans-unit>
        <trans-unit id="0d8b40866f46797be348740ff483561e720809ce" translate="yes" xml:space="preserve">
          <source>Split::fmt</source>
          <target state="translated">Split::fmt</target>
        </trans-unit>
        <trans-unit id="8a69413ed1025ab5a65e6ad7a67e546a9b1537d6" translate="yes" xml:space="preserve">
          <source>Split::fold</source>
          <target state="translated">Split::fold</target>
        </trans-unit>
        <trans-unit id="3adabc4c500f9a537343e92dac5c4991923519ed" translate="yes" xml:space="preserve">
          <source>Split::for_each</source>
          <target state="translated">Split::for_each</target>
        </trans-unit>
        <trans-unit id="441247b5ec062b07c88a33c5175e2910780529cc" translate="yes" xml:space="preserve">
          <source>Split::from</source>
          <target state="translated">Split::from</target>
        </trans-unit>
        <trans-unit id="b1a6fc85bc1161a4514f86f6e96450c7f841e4e4" translate="yes" xml:space="preserve">
          <source>Split::fuse</source>
          <target state="translated">Split::fuse</target>
        </trans-unit>
        <trans-unit id="5aac8922d817b4d53555c678b593594282426858" translate="yes" xml:space="preserve">
          <source>Split::ge</source>
          <target state="translated">Split::ge</target>
        </trans-unit>
        <trans-unit id="feaa50f076eb0484c6e0fefa6a6827d3da0bd1c7" translate="yes" xml:space="preserve">
          <source>Split::gt</source>
          <target state="translated">Split::gt</target>
        </trans-unit>
        <trans-unit id="7bd592077ce46ab7b90f4261897ca14b87ec5194" translate="yes" xml:space="preserve">
          <source>Split::inspect</source>
          <target state="translated">Split::inspect</target>
        </trans-unit>
        <trans-unit id="588a8db2c9edb4b478b5d1594d123060d448e1a9" translate="yes" xml:space="preserve">
          <source>Split::into</source>
          <target state="translated">Split::into</target>
        </trans-unit>
        <trans-unit id="e970a8d04d9e36a414020b04dff64a969290f0f1" translate="yes" xml:space="preserve">
          <source>Split::into_iter</source>
          <target state="translated">Split::into_iter</target>
        </trans-unit>
        <trans-unit id="0a8f968378caa772c20086c35351d82df1837972" translate="yes" xml:space="preserve">
          <source>Split::is_sorted</source>
          <target state="translated">Split::is_sorted</target>
        </trans-unit>
        <trans-unit id="34056b76c665f7be79e8651e1c8f20d425717c78" translate="yes" xml:space="preserve">
          <source>Split::is_sorted_by</source>
          <target state="translated">Split::is_sorted_by</target>
        </trans-unit>
        <trans-unit id="76b13879897a61dc42dca33af29cc9bc2fc2760d" translate="yes" xml:space="preserve">
          <source>Split::is_sorted_by_key</source>
          <target state="translated">Split::is_sorted_by_key</target>
        </trans-unit>
        <trans-unit id="9bc119d9f67f43b057707fffaec9815374669138" translate="yes" xml:space="preserve">
          <source>Split::last</source>
          <target state="translated">Split::last</target>
        </trans-unit>
        <trans-unit id="e5d43b05e2041fda9086dcf3f35965b6a24007b5" translate="yes" xml:space="preserve">
          <source>Split::le</source>
          <target state="translated">Split::le</target>
        </trans-unit>
        <trans-unit id="ba589e923802be4e070003ef40aa8845efddce27" translate="yes" xml:space="preserve">
          <source>Split::lt</source>
          <target state="translated">Split::lt</target>
        </trans-unit>
        <trans-unit id="b38fb187055514eb72383463c85da215f3da4fe1" translate="yes" xml:space="preserve">
          <source>Split::map</source>
          <target state="translated">Split::map</target>
        </trans-unit>
        <trans-unit id="e010482e64f9c285ae88cf82df5b76db7cf2b649" translate="yes" xml:space="preserve">
          <source>Split::max</source>
          <target state="translated">Split::max</target>
        </trans-unit>
        <trans-unit id="5eab3fa296e8537a093d5f5e8063c2f02f582fba" translate="yes" xml:space="preserve">
          <source>Split::max_by</source>
          <target state="translated">Split::max_by</target>
        </trans-unit>
        <trans-unit id="258517aa4008cfc72777c2376c53d21374bd5656" translate="yes" xml:space="preserve">
          <source>Split::max_by_key</source>
          <target state="translated">Split::max_by_key</target>
        </trans-unit>
        <trans-unit id="bc50a26f402b344fb899caf810b0def30e5d1dca" translate="yes" xml:space="preserve">
          <source>Split::min</source>
          <target state="translated">Split::min</target>
        </trans-unit>
        <trans-unit id="f1ad32652850da8822d09826affb4648a0d39632" translate="yes" xml:space="preserve">
          <source>Split::min_by</source>
          <target state="translated">Split::min_by</target>
        </trans-unit>
        <trans-unit id="fee1bae7b3b47edea9d46ac3dac894f4fd1614c5" translate="yes" xml:space="preserve">
          <source>Split::min_by_key</source>
          <target state="translated">Split::min_by_key</target>
        </trans-unit>
        <trans-unit id="ab21044e56e236570fbb48ceb8f4b82b8833a4fe" translate="yes" xml:space="preserve">
          <source>Split::ne</source>
          <target state="translated">Split::ne</target>
        </trans-unit>
        <trans-unit id="69e1332ab0eef325213c7889d02322cfa1281bb4" translate="yes" xml:space="preserve">
          <source>Split::next</source>
          <target state="translated">Split::next</target>
        </trans-unit>
        <trans-unit id="2cd815c7af10d8b0bc5d16dbaa70a6b69527c1b7" translate="yes" xml:space="preserve">
          <source>Split::next_back</source>
          <target state="translated">Split::next_back</target>
        </trans-unit>
        <trans-unit id="4e856029c7f1d106a5cf5fc1becf8a15422b108e" translate="yes" xml:space="preserve">
          <source>Split::nth</source>
          <target state="translated">Split::nth</target>
        </trans-unit>
        <trans-unit id="7b4860833d4ad747b5e65a8f370fada4a1432fd6" translate="yes" xml:space="preserve">
          <source>Split::nth_back</source>
          <target state="translated">Split::nth_back</target>
        </trans-unit>
        <trans-unit id="dc1b0229941cf8b20d138b1023eebccf8451cf32" translate="yes" xml:space="preserve">
          <source>Split::partial_cmp</source>
          <target state="translated">Split::partial_cmp</target>
        </trans-unit>
        <trans-unit id="c7d9913162c3677d8bac12afb6a694f5f105a9f8" translate="yes" xml:space="preserve">
          <source>Split::partition</source>
          <target state="translated">Split::partition</target>
        </trans-unit>
        <trans-unit id="961d77a032a928d54913ed6eca45b6e06e6c8174" translate="yes" xml:space="preserve">
          <source>Split::peekable</source>
          <target state="translated">Split::peekable</target>
        </trans-unit>
        <trans-unit id="ae9169bc8be272cfa23e68cd5f4e426a1e2b3961" translate="yes" xml:space="preserve">
          <source>Split::position</source>
          <target state="translated">Split::position</target>
        </trans-unit>
        <trans-unit id="87890f06d77b6968728d8ee9694097de4c610bb8" translate="yes" xml:space="preserve">
          <source>Split::product</source>
          <target state="translated">Split::product</target>
        </trans-unit>
        <trans-unit id="35213fb752a5b5bbb276ab01ac84176b7251c52d" translate="yes" xml:space="preserve">
          <source>Split::rev</source>
          <target state="translated">Split::rev</target>
        </trans-unit>
        <trans-unit id="ee209e46c7f8b6e5cd6aed47575d93ce798e401f" translate="yes" xml:space="preserve">
          <source>Split::rfind</source>
          <target state="translated">Split::rfind</target>
        </trans-unit>
        <trans-unit id="32d95393bf8ae13a3852962e06783efb871b80a6" translate="yes" xml:space="preserve">
          <source>Split::rfold</source>
          <target state="translated">Split::rfold</target>
        </trans-unit>
        <trans-unit id="07f05471920b2b3f6656d2b04abe680cef524a88" translate="yes" xml:space="preserve">
          <source>Split::rposition</source>
          <target state="translated">Split::rposition</target>
        </trans-unit>
        <trans-unit id="7a1c3c74c8ae0725d19081f4a1ca841d9fd2dec7" translate="yes" xml:space="preserve">
          <source>Split::scan</source>
          <target state="translated">Split::scan</target>
        </trans-unit>
        <trans-unit id="7c0fc0bdc609dfa382892d64a2a7e3a2efeff0de" translate="yes" xml:space="preserve">
          <source>Split::size_hint</source>
          <target state="translated">Split::size_hint</target>
        </trans-unit>
        <trans-unit id="5af2bd4e57bf3b46ae39e915378f1f2dbc608a46" translate="yes" xml:space="preserve">
          <source>Split::skip</source>
          <target state="translated">Split::skip</target>
        </trans-unit>
        <trans-unit id="740bee51d776f693585c9e5594be146cb3db6aa1" translate="yes" xml:space="preserve">
          <source>Split::skip_while</source>
          <target state="translated">Split::skip_while</target>
        </trans-unit>
        <trans-unit id="0d27ff1a798e23835ac66bd88e625680c9c8c9f7" translate="yes" xml:space="preserve">
          <source>Split::step_by</source>
          <target state="translated">Split::step_by</target>
        </trans-unit>
        <trans-unit id="179b66ffe02b59141755cfc1241777501fd7543e" translate="yes" xml:space="preserve">
          <source>Split::sum</source>
          <target state="translated">Split::sum</target>
        </trans-unit>
        <trans-unit id="6d463898bdb1cb53234bbf848897fcbba8190ee0" translate="yes" xml:space="preserve">
          <source>Split::take</source>
          <target state="translated">Split::take</target>
        </trans-unit>
        <trans-unit id="7f6a952a1692b07553718cdc67d432973b1261e1" translate="yes" xml:space="preserve">
          <source>Split::take_while</source>
          <target state="translated">Split::take_while</target>
        </trans-unit>
        <trans-unit id="9ca43b1a3f4230d0fef2b187d47fb55d37acabdf" translate="yes" xml:space="preserve">
          <source>Split::to_owned</source>
          <target state="translated">Split::to_owned</target>
        </trans-unit>
        <trans-unit id="b50e56f5abdcbb35ebe7d1b6cc547e72ace802bd" translate="yes" xml:space="preserve">
          <source>Split::try_fold</source>
          <target state="translated">Split::try_fold</target>
        </trans-unit>
        <trans-unit id="015e63b25160f6122fe77dd744701849d9a03a5f" translate="yes" xml:space="preserve">
          <source>Split::try_for_each</source>
          <target state="translated">Split::try_for_each</target>
        </trans-unit>
        <trans-unit id="68511a9a23952d6eccceb051a625074d14965f9a" translate="yes" xml:space="preserve">
          <source>Split::try_from</source>
          <target state="translated">Split::try_from</target>
        </trans-unit>
        <trans-unit id="31717709fc95ec449f7ce525fcbd0b5e5f3174f9" translate="yes" xml:space="preserve">
          <source>Split::try_into</source>
          <target state="translated">Split::try_into</target>
        </trans-unit>
        <trans-unit id="784b035c4e8a4134d459c72a4ea7e69712c8c22e" translate="yes" xml:space="preserve">
          <source>Split::try_rfold</source>
          <target state="translated">Split::try_rfold</target>
        </trans-unit>
        <trans-unit id="e3c1ce2c5493f1c93f55d45c9500cdbc16c2ca3b" translate="yes" xml:space="preserve">
          <source>Split::type_id</source>
          <target state="translated">Split::type_id</target>
        </trans-unit>
        <trans-unit id="8f95043837c49c3998da677e92b7a8f0155033d9" translate="yes" xml:space="preserve">
          <source>Split::unzip</source>
          <target state="translated">Split::unzip</target>
        </trans-unit>
        <trans-unit id="93f6cd29447a8f906199ee1ad7e5720c410a92aa" translate="yes" xml:space="preserve">
          <source>Split::zip</source>
          <target state="translated">Split::zip</target>
        </trans-unit>
        <trans-unit id="126441d014f1cdde4fdac3cf99d9f344d0bb738b" translate="yes" xml:space="preserve">
          <source>SplitAsciiWhitespace</source>
          <target state="translated">SplitAsciiWhitespace</target>
        </trans-unit>
        <trans-unit id="1a0393d90d30f312db7ace8ae16c5d8e83f07cf8" translate="yes" xml:space="preserve">
          <source>SplitAsciiWhitespace::all</source>
          <target state="translated">SplitAsciiWhitespace::all</target>
        </trans-unit>
        <trans-unit id="80e240cfb292a71b796ce9a9722f1db158dff38d" translate="yes" xml:space="preserve">
          <source>SplitAsciiWhitespace::any</source>
          <target state="translated">SplitAsciiWhitespace::any</target>
        </trans-unit>
        <trans-unit id="4056ffa7082c494913e3962285b8d66bad26f48f" translate="yes" xml:space="preserve">
          <source>SplitAsciiWhitespace::borrow</source>
          <target state="translated">SplitAsciiWhitespace::borrow</target>
        </trans-unit>
        <trans-unit id="4ecb54d68e57f98ef8b096145f822aad8723da51" translate="yes" xml:space="preserve">
          <source>SplitAsciiWhitespace::borrow_mut</source>
          <target state="translated">SplitAsciiWhitespace::borrow_mut</target>
        </trans-unit>
        <trans-unit id="35d40b06c1ff423c4ece2e8e26dfdb363af15974" translate="yes" xml:space="preserve">
          <source>SplitAsciiWhitespace::by_ref</source>
          <target state="translated">SplitAsciiWhitespace::by_ref</target>
        </trans-unit>
        <trans-unit id="3f2e1fcae7af96f2dc58b6072c0d1b0f150d1ae6" translate="yes" xml:space="preserve">
          <source>SplitAsciiWhitespace::chain</source>
          <target state="translated">SplitAsciiWhitespace::chain</target>
        </trans-unit>
        <trans-unit id="97ad72f7c00e04dc3282ab746019df15b15c4bc9" translate="yes" xml:space="preserve">
          <source>SplitAsciiWhitespace::clone</source>
          <target state="translated">SplitAsciiWhitespace::clone</target>
        </trans-unit>
        <trans-unit id="1576477caecfd8aec2064710b011e54b8d2b6071" translate="yes" xml:space="preserve">
          <source>SplitAsciiWhitespace::clone_from</source>
          <target state="translated">SplitAsciiWhitespace::clone_from</target>
        </trans-unit>
        <trans-unit id="27b9026274da398d76f9e9878799eb4b6464c4f1" translate="yes" xml:space="preserve">
          <source>SplitAsciiWhitespace::clone_into</source>
          <target state="translated">SplitAsciiWhitespace::clone_into</target>
        </trans-unit>
        <trans-unit id="a649c1c5639f12c498882f17faeb39196654582e" translate="yes" xml:space="preserve">
          <source>SplitAsciiWhitespace::cloned</source>
          <target state="translated">SplitAsciiWhitespace::cloned</target>
        </trans-unit>
        <trans-unit id="b8f818785a93160d09f563d3660592bc69c103ba" translate="yes" xml:space="preserve">
          <source>SplitAsciiWhitespace::cmp</source>
          <target state="translated">SplitAsciiWhitespace::cmp</target>
        </trans-unit>
        <trans-unit id="41c9c933147b5754f438d23f1e177d6638cbd2ad" translate="yes" xml:space="preserve">
          <source>SplitAsciiWhitespace::collect</source>
          <target state="translated">SplitAsciiWhitespace::collect</target>
        </trans-unit>
        <trans-unit id="0609f416eb86d1e403dbb9e3e349736676f93264" translate="yes" xml:space="preserve">
          <source>SplitAsciiWhitespace::copied</source>
          <target state="translated">SplitAsciiWhitespace::copied</target>
        </trans-unit>
        <trans-unit id="e09df544770b8509355f5dc78044291f19a3674e" translate="yes" xml:space="preserve">
          <source>SplitAsciiWhitespace::count</source>
          <target state="translated">SplitAsciiWhitespace::count</target>
        </trans-unit>
        <trans-unit id="ea2c872cc37c8bfe914e1c20225cb89633985deb" translate="yes" xml:space="preserve">
          <source>SplitAsciiWhitespace::cycle</source>
          <target state="translated">SplitAsciiWhitespace::cycle</target>
        </trans-unit>
        <trans-unit id="5662cbbe89ef49905be3ea7f1fdfd8b154b608d7" translate="yes" xml:space="preserve">
          <source>SplitAsciiWhitespace::enumerate</source>
          <target state="translated">SplitAsciiWhitespace::enumerate</target>
        </trans-unit>
        <trans-unit id="c1183a2c05484a76906656646293d93d281ca2fb" translate="yes" xml:space="preserve">
          <source>SplitAsciiWhitespace::eq</source>
          <target state="translated">SplitAsciiWhitespace::eq</target>
        </trans-unit>
        <trans-unit id="91b1919a54aed7ea3b10bbb74cad9e2278d1723f" translate="yes" xml:space="preserve">
          <source>SplitAsciiWhitespace::filter</source>
          <target state="translated">SplitAsciiWhitespace::filter</target>
        </trans-unit>
        <trans-unit id="76b1bcc4cb577b92b3bc2feceb82586f2f361424" translate="yes" xml:space="preserve">
          <source>SplitAsciiWhitespace::filter_map</source>
          <target state="translated">SplitAsciiWhitespace::filter_map</target>
        </trans-unit>
        <trans-unit id="9ff29c8778bd9b2f81ce751c494427625b066d43" translate="yes" xml:space="preserve">
          <source>SplitAsciiWhitespace::find</source>
          <target state="translated">SplitAsciiWhitespace::find</target>
        </trans-unit>
        <trans-unit id="df5a125787532b0b925bb44ea57bd7fe3dcf07b8" translate="yes" xml:space="preserve">
          <source>SplitAsciiWhitespace::find_map</source>
          <target state="translated">SplitAsciiWhitespace::find_map</target>
        </trans-unit>
        <trans-unit id="76f9c5019ea5f7c69e93e5d48f7ae23992ecf9a0" translate="yes" xml:space="preserve">
          <source>SplitAsciiWhitespace::flat_map</source>
          <target state="translated">SplitAsciiWhitespace::flat_map</target>
        </trans-unit>
        <trans-unit id="4b4cde4fdaefa4d559290e0699d32b4a404b5bda" translate="yes" xml:space="preserve">
          <source>SplitAsciiWhitespace::flatten</source>
          <target state="translated">SplitAsciiWhitespace::flatten</target>
        </trans-unit>
        <trans-unit id="e58b5fe3af09d951acbc08a6e2dd4e3b1707df55" translate="yes" xml:space="preserve">
          <source>SplitAsciiWhitespace::fmt</source>
          <target state="translated">SplitAsciiWhitespace::fmt</target>
        </trans-unit>
        <trans-unit id="57c353e0e941c86b78416e5bfd1e7d0ce29d69a3" translate="yes" xml:space="preserve">
          <source>SplitAsciiWhitespace::fold</source>
          <target state="translated">SplitAsciiWhitespace::fold</target>
        </trans-unit>
        <trans-unit id="6184a4204bcd6ae617cc28215c432427aeabc001" translate="yes" xml:space="preserve">
          <source>SplitAsciiWhitespace::for_each</source>
          <target state="translated">SplitAsciiWhitespace::for_each</target>
        </trans-unit>
        <trans-unit id="0f43fe4e291dadcf528141c23de7e3f59c7e9e8b" translate="yes" xml:space="preserve">
          <source>SplitAsciiWhitespace::from</source>
          <target state="translated">SplitAsciiWhitespace::from</target>
        </trans-unit>
        <trans-unit id="a1c033af232b37ef66143377ab5969536437610b" translate="yes" xml:space="preserve">
          <source>SplitAsciiWhitespace::fuse</source>
          <target state="translated">SplitAsciiWhitespace::fuse</target>
        </trans-unit>
        <trans-unit id="310b67ad4f4983ccba3e2d8c240103561dda9d7b" translate="yes" xml:space="preserve">
          <source>SplitAsciiWhitespace::ge</source>
          <target state="translated">SplitAsciiWhitespace::ge</target>
        </trans-unit>
        <trans-unit id="2a0ff36ce7bbe1b9615ebde75af1161098e4520b" translate="yes" xml:space="preserve">
          <source>SplitAsciiWhitespace::gt</source>
          <target state="translated">SplitAsciiWhitespace::gt</target>
        </trans-unit>
        <trans-unit id="59bae30052c567c9b9ce625b0eeb78c2a684eb02" translate="yes" xml:space="preserve">
          <source>SplitAsciiWhitespace::inspect</source>
          <target state="translated">SplitAsciiWhitespace::inspect</target>
        </trans-unit>
        <trans-unit id="069da77511094ed76dbbf1425acb3643a8d8c019" translate="yes" xml:space="preserve">
          <source>SplitAsciiWhitespace::into</source>
          <target state="translated">SplitAsciiWhitespace::into</target>
        </trans-unit>
        <trans-unit id="0b7e370c0a366ad830b5ca184deed03b75134ae6" translate="yes" xml:space="preserve">
          <source>SplitAsciiWhitespace::into_iter</source>
          <target state="translated">SplitAsciiWhitespace::into_iter</target>
        </trans-unit>
        <trans-unit id="2e689227dafd5929f003b950b47dc64a8c99cd16" translate="yes" xml:space="preserve">
          <source>SplitAsciiWhitespace::is_sorted</source>
          <target state="translated">SplitAsciiWhitespace::is_sorted</target>
        </trans-unit>
        <trans-unit id="11748df1d77daa90c258ec57aa9ed89c40f92d6e" translate="yes" xml:space="preserve">
          <source>SplitAsciiWhitespace::is_sorted_by</source>
          <target state="translated">SplitAsciiWhitespace::is_sorted_by</target>
        </trans-unit>
        <trans-unit id="f26f028c49d0003e5394959ffd46f3ce538ebae2" translate="yes" xml:space="preserve">
          <source>SplitAsciiWhitespace::is_sorted_by_key</source>
          <target state="translated">SplitAsciiWhitespace::is_sorted_by_key</target>
        </trans-unit>
        <trans-unit id="528e446454f64307260cdb5a9ece2b8172e3d19a" translate="yes" xml:space="preserve">
          <source>SplitAsciiWhitespace::last</source>
          <target state="translated">SplitAsciiWhitespace::last</target>
        </trans-unit>
        <trans-unit id="36423e071337db8c4a041c7a563d9c217a5ead49" translate="yes" xml:space="preserve">
          <source>SplitAsciiWhitespace::le</source>
          <target state="translated">SplitAsciiWhitespace::le</target>
        </trans-unit>
        <trans-unit id="72f1b824d265d3ab654d3d10700a66929e998456" translate="yes" xml:space="preserve">
          <source>SplitAsciiWhitespace::lt</source>
          <target state="translated">SplitAsciiWhitespace::lt</target>
        </trans-unit>
        <trans-unit id="4ef418a46604bf013d6a9b465e38d7f0c5ad99f3" translate="yes" xml:space="preserve">
          <source>SplitAsciiWhitespace::map</source>
          <target state="translated">SplitAsciiWhitespace::map</target>
        </trans-unit>
        <trans-unit id="9be46a6d947252ec6a1dd251fb4e0fcc2f6119e2" translate="yes" xml:space="preserve">
          <source>SplitAsciiWhitespace::max</source>
          <target state="translated">SplitAsciiWhitespace::max</target>
        </trans-unit>
        <trans-unit id="127e45fa2c12983d00df5fab27b5b8e195384207" translate="yes" xml:space="preserve">
          <source>SplitAsciiWhitespace::max_by</source>
          <target state="translated">SplitAsciiWhitespace::max_by</target>
        </trans-unit>
        <trans-unit id="1c6df694cc86df818a30e5b112a49a4205c39eb2" translate="yes" xml:space="preserve">
          <source>SplitAsciiWhitespace::max_by_key</source>
          <target state="translated">SplitAsciiWhitespace::max_by_key</target>
        </trans-unit>
        <trans-unit id="be2847e2c36c5bde77cdbe695d9a22650c0c12e2" translate="yes" xml:space="preserve">
          <source>SplitAsciiWhitespace::min</source>
          <target state="translated">SplitAsciiWhitespace::min</target>
        </trans-unit>
        <trans-unit id="5fba24b9cbe2f52e16529f2bbf82de6a19203c5a" translate="yes" xml:space="preserve">
          <source>SplitAsciiWhitespace::min_by</source>
          <target state="translated">SplitAsciiWhitespace::min_by</target>
        </trans-unit>
        <trans-unit id="aae362e0111ad6ca4337cd1ae93b061988acee85" translate="yes" xml:space="preserve">
          <source>SplitAsciiWhitespace::min_by_key</source>
          <target state="translated">SplitAsciiWhitespace::min_by_key</target>
        </trans-unit>
        <trans-unit id="c67248bea73f211db9a542d83ddb9a36d94b5afd" translate="yes" xml:space="preserve">
          <source>SplitAsciiWhitespace::ne</source>
          <target state="translated">SplitAsciiWhitespace::ne</target>
        </trans-unit>
        <trans-unit id="82893c758771243e61a8413ef50f1562d3c1e12b" translate="yes" xml:space="preserve">
          <source>SplitAsciiWhitespace::next</source>
          <target state="translated">SplitAsciiWhitespace::next</target>
        </trans-unit>
        <trans-unit id="9015cf406b343904881630d5e945b44f9de54418" translate="yes" xml:space="preserve">
          <source>SplitAsciiWhitespace::next_back</source>
          <target state="translated">SplitAsciiWhitespace::next_back</target>
        </trans-unit>
        <trans-unit id="800ffb6ace87d9335f20155619137664404e736f" translate="yes" xml:space="preserve">
          <source>SplitAsciiWhitespace::nth</source>
          <target state="translated">SplitAsciiWhitespace::nth</target>
        </trans-unit>
        <trans-unit id="d803c25fe950079c1ee0fcdc2cb07c6d7b6e5c86" translate="yes" xml:space="preserve">
          <source>SplitAsciiWhitespace::nth_back</source>
          <target state="translated">SplitAsciiWhitespace::nth_back</target>
        </trans-unit>
        <trans-unit id="dafe039e0602461f999aaffd35c6aa3cceab09eb" translate="yes" xml:space="preserve">
          <source>SplitAsciiWhitespace::partial_cmp</source>
          <target state="translated">SplitAsciiWhitespace::partial_cmp</target>
        </trans-unit>
        <trans-unit id="dcc86fb07b1239a5e6fba657205cf35cef67501a" translate="yes" xml:space="preserve">
          <source>SplitAsciiWhitespace::partition</source>
          <target state="translated">SplitAsciiWhitespace::partition</target>
        </trans-unit>
        <trans-unit id="111e562523a8602ffc04e4a6072c974f779b738f" translate="yes" xml:space="preserve">
          <source>SplitAsciiWhitespace::peekable</source>
          <target state="translated">SplitAsciiWhitespace::peekable</target>
        </trans-unit>
        <trans-unit id="af368f70215bf75f17802631e1fc5f718f626e27" translate="yes" xml:space="preserve">
          <source>SplitAsciiWhitespace::position</source>
          <target state="translated">SplitAsciiWhitespace::position</target>
        </trans-unit>
        <trans-unit id="cb77328d8d1ee014b57f24c2ccc88ce5b8e62c1d" translate="yes" xml:space="preserve">
          <source>SplitAsciiWhitespace::product</source>
          <target state="translated">SplitAsciiWhitespace::product</target>
        </trans-unit>
        <trans-unit id="7a50e4bb4d9e8a0173382540fd87b867aae2d288" translate="yes" xml:space="preserve">
          <source>SplitAsciiWhitespace::rev</source>
          <target state="translated">SplitAsciiWhitespace::rev</target>
        </trans-unit>
        <trans-unit id="16e496a0b8ed19b3f842cf913785bb9aa4fc8961" translate="yes" xml:space="preserve">
          <source>SplitAsciiWhitespace::rfind</source>
          <target state="translated">SplitAsciiWhitespace::rfind</target>
        </trans-unit>
        <trans-unit id="1715f991533f4675efb8b6c56d86be138a40da7a" translate="yes" xml:space="preserve">
          <source>SplitAsciiWhitespace::rfold</source>
          <target state="translated">SplitAsciiWhitespace::rfold</target>
        </trans-unit>
        <trans-unit id="e2b34504a07710470c1959e1f83ab83920ea1290" translate="yes" xml:space="preserve">
          <source>SplitAsciiWhitespace::rposition</source>
          <target state="translated">SplitAsciiWhitespace::rposition</target>
        </trans-unit>
        <trans-unit id="65bbacf4df364edec256188ba99abe9ed0cbcfe9" translate="yes" xml:space="preserve">
          <source>SplitAsciiWhitespace::scan</source>
          <target state="translated">SplitAsciiWhitespace::scan</target>
        </trans-unit>
        <trans-unit id="0f32ba62e7a1465fc1d1effcdec4fa37d30ff203" translate="yes" xml:space="preserve">
          <source>SplitAsciiWhitespace::size_hint</source>
          <target state="translated">SplitAsciiWhitespace::size_hint</target>
        </trans-unit>
        <trans-unit id="690c47d40b3f54f05b2ab7a4627a079915fe351d" translate="yes" xml:space="preserve">
          <source>SplitAsciiWhitespace::skip</source>
          <target state="translated">SplitAsciiWhitespace::skip</target>
        </trans-unit>
        <trans-unit id="8a2c9001716ae0239a5bbf8359a3ec445e81acb3" translate="yes" xml:space="preserve">
          <source>SplitAsciiWhitespace::skip_while</source>
          <target state="translated">SplitAsciiWhitespace::skip_while</target>
        </trans-unit>
        <trans-unit id="217fca41bc16a021f8ab7c549af56a114f593a0e" translate="yes" xml:space="preserve">
          <source>SplitAsciiWhitespace::step_by</source>
          <target state="translated">SplitAsciiWhitespace::step_by</target>
        </trans-unit>
        <trans-unit id="0aced7b4ec8d99679bfbd1ae84d621cb721f1bf9" translate="yes" xml:space="preserve">
          <source>SplitAsciiWhitespace::sum</source>
          <target state="translated">SplitAsciiWhitespace::sum</target>
        </trans-unit>
        <trans-unit id="91dd9c3d22777c96c94075aefbab05b3d2288f45" translate="yes" xml:space="preserve">
          <source>SplitAsciiWhitespace::take</source>
          <target state="translated">SplitAsciiWhitespace::take</target>
        </trans-unit>
        <trans-unit id="7cbbf417b286e13398b71757444e4f8752f5b529" translate="yes" xml:space="preserve">
          <source>SplitAsciiWhitespace::take_while</source>
          <target state="translated">SplitAsciiWhitespace::take_while</target>
        </trans-unit>
        <trans-unit id="f3de387ae43a9572825277de4ce2b214d342dd7e" translate="yes" xml:space="preserve">
          <source>SplitAsciiWhitespace::to_owned</source>
          <target state="translated">SplitAsciiWhitespace::to_owned</target>
        </trans-unit>
        <trans-unit id="ecc0da33afce2dc7e10369c26b360220d1d78e32" translate="yes" xml:space="preserve">
          <source>SplitAsciiWhitespace::try_fold</source>
          <target state="translated">SplitAsciiWhitespace::try_fold</target>
        </trans-unit>
        <trans-unit id="1f60c9615c55654daec7a4cf006038d497e6b0b7" translate="yes" xml:space="preserve">
          <source>SplitAsciiWhitespace::try_for_each</source>
          <target state="translated">SplitAsciiWhitespace::try_for_each</target>
        </trans-unit>
        <trans-unit id="c2294684e72bfd9a84b5012da3bcc907529b9cfc" translate="yes" xml:space="preserve">
          <source>SplitAsciiWhitespace::try_from</source>
          <target state="translated">SplitAsciiWhitespace::try_from</target>
        </trans-unit>
        <trans-unit id="2b0b05327dad549e95544d31f8876fa08eb481a1" translate="yes" xml:space="preserve">
          <source>SplitAsciiWhitespace::try_into</source>
          <target state="translated">SplitAsciiWhitespace::try_into</target>
        </trans-unit>
        <trans-unit id="2cffb23622e9856698308f79023e5010597e0426" translate="yes" xml:space="preserve">
          <source>SplitAsciiWhitespace::try_rfold</source>
          <target state="translated">SplitAsciiWhitespace::try_rfold</target>
        </trans-unit>
        <trans-unit id="53ddbab2216aea28798a718405d3ea5674b5b71c" translate="yes" xml:space="preserve">
          <source>SplitAsciiWhitespace::type_id</source>
          <target state="translated">SplitAsciiWhitespace::type_id</target>
        </trans-unit>
        <trans-unit id="808e6a2877c52b21ba18e8a5ed73755ab37122ac" translate="yes" xml:space="preserve">
          <source>SplitAsciiWhitespace::unzip</source>
          <target state="translated">SplitAsciiWhitespace::unzip</target>
        </trans-unit>
        <trans-unit id="a8f2029938b77a34b0d281702e7c3381b8c65da6" translate="yes" xml:space="preserve">
          <source>SplitAsciiWhitespace::zip</source>
          <target state="translated">SplitAsciiWhitespace::zip</target>
        </trans-unit>
        <trans-unit id="fea4bc9ee6da0bf1ba0b8639d2f7171e8c27b627" translate="yes" xml:space="preserve">
          <source>SplitMut</source>
          <target state="translated">SplitMut</target>
        </trans-unit>
        <trans-unit id="20206e90fcc4395df7feeeec3587e4fdf0c908f9" translate="yes" xml:space="preserve">
          <source>SplitMut::all</source>
          <target state="translated">SplitMut::all</target>
        </trans-unit>
        <trans-unit id="a5e736eff61c632c906ccc2055616d0e72b6e186" translate="yes" xml:space="preserve">
          <source>SplitMut::any</source>
          <target state="translated">SplitMut::any</target>
        </trans-unit>
        <trans-unit id="b71a732cfe7ae698c523092d708a2350233050ef" translate="yes" xml:space="preserve">
          <source>SplitMut::borrow</source>
          <target state="translated">SplitMut::borrow</target>
        </trans-unit>
        <trans-unit id="fb571d070b4af0c2364088c2ebd063c995b0ddf5" translate="yes" xml:space="preserve">
          <source>SplitMut::borrow_mut</source>
          <target state="translated">SplitMut::borrow_mut</target>
        </trans-unit>
        <trans-unit id="b562dfd918c487d57df4688eec5336c81d02a867" translate="yes" xml:space="preserve">
          <source>SplitMut::by_ref</source>
          <target state="translated">SplitMut::by_ref</target>
        </trans-unit>
        <trans-unit id="f5a6ea0a5254cd7fa04309b98118cc9a4253494f" translate="yes" xml:space="preserve">
          <source>SplitMut::chain</source>
          <target state="translated">SplitMut::chain</target>
        </trans-unit>
        <trans-unit id="4eace10a6db11151f8b1c52e939d52f4ce5d86e3" translate="yes" xml:space="preserve">
          <source>SplitMut::cloned</source>
          <target state="translated">SplitMut::cloned</target>
        </trans-unit>
        <trans-unit id="f0acc5792c7f2b777a795150aadee0760acc5090" translate="yes" xml:space="preserve">
          <source>SplitMut::cmp</source>
          <target state="translated">SplitMut::cmp</target>
        </trans-unit>
        <trans-unit id="c38c2137231b60394ac5c2e3f4bb57a19fbb9575" translate="yes" xml:space="preserve">
          <source>SplitMut::collect</source>
          <target state="translated">SplitMut::collect</target>
        </trans-unit>
        <trans-unit id="2ed1683fcd240c755198fcd38588b405eea9dfe7" translate="yes" xml:space="preserve">
          <source>SplitMut::copied</source>
          <target state="translated">SplitMut::copied</target>
        </trans-unit>
        <trans-unit id="c13e6d8a785dc692a0639f0e32e4a8c64fcee4a4" translate="yes" xml:space="preserve">
          <source>SplitMut::count</source>
          <target state="translated">SplitMut::count</target>
        </trans-unit>
        <trans-unit id="4c7a0ba794c7e18b97214f0ec8aa0c514fdf408e" translate="yes" xml:space="preserve">
          <source>SplitMut::cycle</source>
          <target state="translated">SplitMut::cycle</target>
        </trans-unit>
        <trans-unit id="2232d7b04b4bf06a4c92d2a9b9691552c014c3f9" translate="yes" xml:space="preserve">
          <source>SplitMut::enumerate</source>
          <target state="translated">SplitMut::enumerate</target>
        </trans-unit>
        <trans-unit id="846661ba130aa85c29ead92d060a256c90b6734f" translate="yes" xml:space="preserve">
          <source>SplitMut::eq</source>
          <target state="translated">SplitMut::eq</target>
        </trans-unit>
        <trans-unit id="0189cb2a15812d4ef3b0fbd404fee90b9e1c2423" translate="yes" xml:space="preserve">
          <source>SplitMut::filter</source>
          <target state="translated">SplitMut::filter</target>
        </trans-unit>
        <trans-unit id="edc992f7708a7411f1faa75438b2bdacb44710f9" translate="yes" xml:space="preserve">
          <source>SplitMut::filter_map</source>
          <target state="translated">SplitMut::filter_map</target>
        </trans-unit>
        <trans-unit id="3a9885ecd88a39b6bb0b519ce04d23246fafd898" translate="yes" xml:space="preserve">
          <source>SplitMut::find</source>
          <target state="translated">SplitMut::find</target>
        </trans-unit>
        <trans-unit id="d635d90f1b6ece770ef2f36f7f64b12f4cb3904d" translate="yes" xml:space="preserve">
          <source>SplitMut::find_map</source>
          <target state="translated">SplitMut::find_map</target>
        </trans-unit>
        <trans-unit id="302f584a59e59164ec4a4b5bd8c6e13223ea03d3" translate="yes" xml:space="preserve">
          <source>SplitMut::flat_map</source>
          <target state="translated">SplitMut::flat_map</target>
        </trans-unit>
        <trans-unit id="5d4f110597153143a0a3650309b2c50c7fd902e7" translate="yes" xml:space="preserve">
          <source>SplitMut::flatten</source>
          <target state="translated">SplitMut::flatten</target>
        </trans-unit>
        <trans-unit id="5099707abaa042e1ffb0d89dd5dbb06c549395b8" translate="yes" xml:space="preserve">
          <source>SplitMut::fmt</source>
          <target state="translated">SplitMut::fmt</target>
        </trans-unit>
        <trans-unit id="aed14cdc4bd5fb853c1c2392b5e7dc619e76d60a" translate="yes" xml:space="preserve">
          <source>SplitMut::fold</source>
          <target state="translated">SplitMut::fold</target>
        </trans-unit>
        <trans-unit id="73aa634ae991252e43a303480dc0ed056f0340d5" translate="yes" xml:space="preserve">
          <source>SplitMut::for_each</source>
          <target state="translated">SplitMut::for_each</target>
        </trans-unit>
        <trans-unit id="2852a96161b9ecc71293c8fe9b3dab11d0ae1552" translate="yes" xml:space="preserve">
          <source>SplitMut::from</source>
          <target state="translated">SplitMut::from</target>
        </trans-unit>
        <trans-unit id="6143cfe4d589a7d6717f45153116e86253256ecf" translate="yes" xml:space="preserve">
          <source>SplitMut::fuse</source>
          <target state="translated">SplitMut::fuse</target>
        </trans-unit>
        <trans-unit id="89536afa53b6b6dc8c71f1de1b91d789011c5d9f" translate="yes" xml:space="preserve">
          <source>SplitMut::ge</source>
          <target state="translated">SplitMut::ge</target>
        </trans-unit>
        <trans-unit id="a10b89f6079d7a532cd04577ec701b7fa1c150bf" translate="yes" xml:space="preserve">
          <source>SplitMut::gt</source>
          <target state="translated">SplitMut::gt</target>
        </trans-unit>
        <trans-unit id="9791c41d4deefe7a2df85b0d0dc7716e0980a802" translate="yes" xml:space="preserve">
          <source>SplitMut::inspect</source>
          <target state="translated">SplitMut::inspect</target>
        </trans-unit>
        <trans-unit id="2e9b92dd317f57917d610f26e5b4684dfcd1faca" translate="yes" xml:space="preserve">
          <source>SplitMut::into</source>
          <target state="translated">SplitMut::into</target>
        </trans-unit>
        <trans-unit id="c494d7a4b6814217996661cca35583783cb08e6d" translate="yes" xml:space="preserve">
          <source>SplitMut::into_iter</source>
          <target state="translated">SplitMut::into_iter</target>
        </trans-unit>
        <trans-unit id="bd0b5e2be5227e216a5b1571efa44177559e250c" translate="yes" xml:space="preserve">
          <source>SplitMut::is_sorted</source>
          <target state="translated">SplitMut::is_sorted</target>
        </trans-unit>
        <trans-unit id="f5935f25264d3c7818e7454c6b771624cc3018a1" translate="yes" xml:space="preserve">
          <source>SplitMut::is_sorted_by</source>
          <target state="translated">SplitMut::is_sorted_by</target>
        </trans-unit>
        <trans-unit id="ca6bb363ed6ba8e746509979f646f40911baff59" translate="yes" xml:space="preserve">
          <source>SplitMut::is_sorted_by_key</source>
          <target state="translated">SplitMut::is_sorted_by_key</target>
        </trans-unit>
        <trans-unit id="0bab1c560e39cdbb9b32a04c72e27770f0675860" translate="yes" xml:space="preserve">
          <source>SplitMut::last</source>
          <target state="translated">SplitMut::last</target>
        </trans-unit>
        <trans-unit id="de5ff505373a03db4bc6e1c2423dc90e725ccf1d" translate="yes" xml:space="preserve">
          <source>SplitMut::le</source>
          <target state="translated">SplitMut::le</target>
        </trans-unit>
        <trans-unit id="5485825db66e1ec2af52a05773f218aa68975db4" translate="yes" xml:space="preserve">
          <source>SplitMut::lt</source>
          <target state="translated">SplitMut::lt</target>
        </trans-unit>
        <trans-unit id="bd6834e13f4c5195d21cd5d559d6242f832b47dd" translate="yes" xml:space="preserve">
          <source>SplitMut::map</source>
          <target state="translated">SplitMut::map</target>
        </trans-unit>
        <trans-unit id="c0b4fcf226d9d2003cbdc6e6bcc64c81e072d854" translate="yes" xml:space="preserve">
          <source>SplitMut::max</source>
          <target state="translated">SplitMut::max</target>
        </trans-unit>
        <trans-unit id="54140c9550aafbc4e20ff15fa0e5e0a94290a93b" translate="yes" xml:space="preserve">
          <source>SplitMut::max_by</source>
          <target state="translated">SplitMut::max_by</target>
        </trans-unit>
        <trans-unit id="8eb2b9ac27b077e103ac0412edd18591a84e5907" translate="yes" xml:space="preserve">
          <source>SplitMut::max_by_key</source>
          <target state="translated">SplitMut::max_by_key</target>
        </trans-unit>
        <trans-unit id="6665443d5d217dc2f7fe86247c1bbac2934415aa" translate="yes" xml:space="preserve">
          <source>SplitMut::min</source>
          <target state="translated">SplitMut::min</target>
        </trans-unit>
        <trans-unit id="f4a96f6c160a7ed3e79564d0cff3badb853b2f6a" translate="yes" xml:space="preserve">
          <source>SplitMut::min_by</source>
          <target state="translated">SplitMut::min_by</target>
        </trans-unit>
        <trans-unit id="3b46f65b9c4046f1da460b7e24eb5462b74a57e9" translate="yes" xml:space="preserve">
          <source>SplitMut::min_by_key</source>
          <target state="translated">SplitMut::min_by_key</target>
        </trans-unit>
        <trans-unit id="30957514e25fa430fe59e4b67ccb699eadd7e6ac" translate="yes" xml:space="preserve">
          <source>SplitMut::ne</source>
          <target state="translated">SplitMut::ne</target>
        </trans-unit>
        <trans-unit id="37372ea2a5031dd483e65cd5cd3612700e496ee8" translate="yes" xml:space="preserve">
          <source>SplitMut::next</source>
          <target state="translated">SplitMut::next</target>
        </trans-unit>
        <trans-unit id="cefb6f6029ac920475c0b403fd90848015dc9534" translate="yes" xml:space="preserve">
          <source>SplitMut::next_back</source>
          <target state="translated">SplitMut::next_back</target>
        </trans-unit>
        <trans-unit id="ee2301f8b42dc90c989136ded153d020ad5d7675" translate="yes" xml:space="preserve">
          <source>SplitMut::nth</source>
          <target state="translated">SplitMut::nth</target>
        </trans-unit>
        <trans-unit id="2c63b5f36f6d206c4812d641ea388572cec30fed" translate="yes" xml:space="preserve">
          <source>SplitMut::nth_back</source>
          <target state="translated">SplitMut::nth_back</target>
        </trans-unit>
        <trans-unit id="d17454d80fde91f9e9c65cdd86720e46e6e0b313" translate="yes" xml:space="preserve">
          <source>SplitMut::partial_cmp</source>
          <target state="translated">SplitMut::partial_cmp</target>
        </trans-unit>
        <trans-unit id="e1fde268ce94515a7e4a1a7cfbc882255f1594a7" translate="yes" xml:space="preserve">
          <source>SplitMut::partition</source>
          <target state="translated">SplitMut::partition</target>
        </trans-unit>
        <trans-unit id="c96cb0feba3dacbbc5b762291a840a8050aa61de" translate="yes" xml:space="preserve">
          <source>SplitMut::peekable</source>
          <target state="translated">SplitMut::peekable</target>
        </trans-unit>
        <trans-unit id="f8444b29f2ac3d1f7deb66730af9fa3ee8cdd548" translate="yes" xml:space="preserve">
          <source>SplitMut::position</source>
          <target state="translated">SplitMut::position</target>
        </trans-unit>
        <trans-unit id="5ccab74320ecb86a7e67746e0bd6af936ae7f505" translate="yes" xml:space="preserve">
          <source>SplitMut::product</source>
          <target state="translated">SplitMut::product</target>
        </trans-unit>
        <trans-unit id="628ba356aca57ecbdae880df99459db0cf443cd7" translate="yes" xml:space="preserve">
          <source>SplitMut::rev</source>
          <target state="translated">SplitMut::rev</target>
        </trans-unit>
        <trans-unit id="f26246a1486622aa329878355bf05623a81ce9be" translate="yes" xml:space="preserve">
          <source>SplitMut::rfind</source>
          <target state="translated">SplitMut::rfind</target>
        </trans-unit>
        <trans-unit id="3b544bc118ab36de53257f4bd5d45f58adad6a7e" translate="yes" xml:space="preserve">
          <source>SplitMut::rfold</source>
          <target state="translated">SplitMut::rfold</target>
        </trans-unit>
        <trans-unit id="eca3055cedf3ba5364f16f949bfbbb61473a1124" translate="yes" xml:space="preserve">
          <source>SplitMut::rposition</source>
          <target state="translated">SplitMut::rposition</target>
        </trans-unit>
        <trans-unit id="3a098145ea0946d93efbe7baf21f05a89bf7ec07" translate="yes" xml:space="preserve">
          <source>SplitMut::scan</source>
          <target state="translated">SplitMut::scan</target>
        </trans-unit>
        <trans-unit id="061e9c4a19805c6d5769b81858d416ce425f8c1f" translate="yes" xml:space="preserve">
          <source>SplitMut::size_hint</source>
          <target state="translated">SplitMut::size_hint</target>
        </trans-unit>
        <trans-unit id="1f53a493ed3bb4e2cd0887d2a4091fba1a5a31f1" translate="yes" xml:space="preserve">
          <source>SplitMut::skip</source>
          <target state="translated">SplitMut::skip</target>
        </trans-unit>
        <trans-unit id="68eebe6bd72f45df24cb588cda23ac503a34a2b1" translate="yes" xml:space="preserve">
          <source>SplitMut::skip_while</source>
          <target state="translated">SplitMut::skip_while</target>
        </trans-unit>
        <trans-unit id="13d1bd3f1e09c0f698859b9d9e41592a7556ee64" translate="yes" xml:space="preserve">
          <source>SplitMut::step_by</source>
          <target state="translated">SplitMut::step_by</target>
        </trans-unit>
        <trans-unit id="298d9044c7bdda094f311f1fd94aae26d5abfd34" translate="yes" xml:space="preserve">
          <source>SplitMut::sum</source>
          <target state="translated">SplitMut::sum</target>
        </trans-unit>
        <trans-unit id="990dd1698269f85fbf5446bbde7a4833dc9ac601" translate="yes" xml:space="preserve">
          <source>SplitMut::take</source>
          <target state="translated">SplitMut::take</target>
        </trans-unit>
        <trans-unit id="6f5728524fd7240e3b30406730fe5c12bcb73e86" translate="yes" xml:space="preserve">
          <source>SplitMut::take_while</source>
          <target state="translated">SplitMut::take_while</target>
        </trans-unit>
        <trans-unit id="f02c923d285cc8d43703f446a3f5941ed72a5403" translate="yes" xml:space="preserve">
          <source>SplitMut::try_fold</source>
          <target state="translated">SplitMut::try_fold</target>
        </trans-unit>
        <trans-unit id="c2e6f99080f6d6a48c899e62ec7a31ec8e823694" translate="yes" xml:space="preserve">
          <source>SplitMut::try_for_each</source>
          <target state="translated">SplitMut::try_for_each</target>
        </trans-unit>
        <trans-unit id="bff0b93e0bc80beaab7376ac083610d07f858ea2" translate="yes" xml:space="preserve">
          <source>SplitMut::try_from</source>
          <target state="translated">SplitMut::try_from</target>
        </trans-unit>
        <trans-unit id="9900dd1b01ab865e71a8b9620368ee396732e68d" translate="yes" xml:space="preserve">
          <source>SplitMut::try_into</source>
          <target state="translated">SplitMut::try_into</target>
        </trans-unit>
        <trans-unit id="8e9ab1bbfc05ef43646065397d47b9e01ed301ed" translate="yes" xml:space="preserve">
          <source>SplitMut::try_rfold</source>
          <target state="translated">SplitMut::try_rfold</target>
        </trans-unit>
        <trans-unit id="ee86b9f65b2c2e9e017cf3d1d25e875e9b29c342" translate="yes" xml:space="preserve">
          <source>SplitMut::type_id</source>
          <target state="translated">SplitMut::type_id</target>
        </trans-unit>
        <trans-unit id="5412d53b0d28fed40234eae1cd0b12f8cb2eaded" translate="yes" xml:space="preserve">
          <source>SplitMut::unzip</source>
          <target state="translated">SplitMut::unzip</target>
        </trans-unit>
        <trans-unit id="4e5275a4a48054490c51798e482b88273fc37f9d" translate="yes" xml:space="preserve">
          <source>SplitMut::zip</source>
          <target state="translated">SplitMut::zip</target>
        </trans-unit>
        <trans-unit id="84cfaf9bc325cc024ba8d73b2f03f1f0b940f375" translate="yes" xml:space="preserve">
          <source>SplitN</source>
          <target state="translated">SplitN</target>
        </trans-unit>
        <trans-unit id="122739cc4318bd1f17b9ecdcf64503694d129b07" translate="yes" xml:space="preserve">
          <source>SplitN::all</source>
          <target state="translated">SplitN::all</target>
        </trans-unit>
        <trans-unit id="f22a50edd00e4694503cf3374a70577df0b3e533" translate="yes" xml:space="preserve">
          <source>SplitN::any</source>
          <target state="translated">SplitN::any</target>
        </trans-unit>
        <trans-unit id="336bcfdda643a5e1e9c28174874ec96704590db4" translate="yes" xml:space="preserve">
          <source>SplitN::borrow</source>
          <target state="translated">SplitN::borrow</target>
        </trans-unit>
        <trans-unit id="490b0d78c0681f8492f7af42daa3a7def5d70a27" translate="yes" xml:space="preserve">
          <source>SplitN::borrow_mut</source>
          <target state="translated">SplitN::borrow_mut</target>
        </trans-unit>
        <trans-unit id="3bd7504cf511166bc478563f699dfa4bbe634ffe" translate="yes" xml:space="preserve">
          <source>SplitN::by_ref</source>
          <target state="translated">SplitN::by_ref</target>
        </trans-unit>
        <trans-unit id="7ef14ea09d563f6244a306d2a2fb1777b4968a13" translate="yes" xml:space="preserve">
          <source>SplitN::chain</source>
          <target state="translated">SplitN::chain</target>
        </trans-unit>
        <trans-unit id="ef43f93e7129f677ba8bb87619e9b4bdfcb97d3a" translate="yes" xml:space="preserve">
          <source>SplitN::clone</source>
          <target state="translated">SplitN::clone</target>
        </trans-unit>
        <trans-unit id="fb6e1769c703590e4216e06d016494cb27f7d2c1" translate="yes" xml:space="preserve">
          <source>SplitN::clone_from</source>
          <target state="translated">SplitN::clone_from</target>
        </trans-unit>
        <trans-unit id="c9a61b9009525e282d49323582f8b56f31b5b08a" translate="yes" xml:space="preserve">
          <source>SplitN::clone_into</source>
          <target state="translated">SplitN::clone_into</target>
        </trans-unit>
        <trans-unit id="4312e557df7befa3bf2dbb3dc60b50e5a0b4771d" translate="yes" xml:space="preserve">
          <source>SplitN::cloned</source>
          <target state="translated">SplitN::cloned</target>
        </trans-unit>
        <trans-unit id="3476733cfab685ad5f068f4e1628ce32cf01a4a4" translate="yes" xml:space="preserve">
          <source>SplitN::cmp</source>
          <target state="translated">SplitN::cmp</target>
        </trans-unit>
        <trans-unit id="ec93a1f80200a136680eda5efbcd79bc4210ce8c" translate="yes" xml:space="preserve">
          <source>SplitN::collect</source>
          <target state="translated">SplitN::collect</target>
        </trans-unit>
        <trans-unit id="62783fc3a5b18489dcc3ea45742e157a5335f0f9" translate="yes" xml:space="preserve">
          <source>SplitN::copied</source>
          <target state="translated">SplitN::copied</target>
        </trans-unit>
        <trans-unit id="dccfd6459163a470f07c9501e050ab2c502b5307" translate="yes" xml:space="preserve">
          <source>SplitN::count</source>
          <target state="translated">SplitN::count</target>
        </trans-unit>
        <trans-unit id="02499e5ba89665bd94c9c835be4db2449a2ccef6" translate="yes" xml:space="preserve">
          <source>SplitN::cycle</source>
          <target state="translated">SplitN::cycle</target>
        </trans-unit>
        <trans-unit id="e6a5b0f346075645754d0b71e13524100e59ff98" translate="yes" xml:space="preserve">
          <source>SplitN::enumerate</source>
          <target state="translated">SplitN::enumerate</target>
        </trans-unit>
        <trans-unit id="3d18b3008357613dc445c918b35bc97d7a069176" translate="yes" xml:space="preserve">
          <source>SplitN::eq</source>
          <target state="translated">SplitN::eq</target>
        </trans-unit>
        <trans-unit id="d54d53ea7aea91a96a76e27c4385fbead44b7c5e" translate="yes" xml:space="preserve">
          <source>SplitN::filter</source>
          <target state="translated">SplitN::filter</target>
        </trans-unit>
        <trans-unit id="a3777ec6f8731741ef7dc6517f5f311b440269d1" translate="yes" xml:space="preserve">
          <source>SplitN::filter_map</source>
          <target state="translated">SplitN::filter_map</target>
        </trans-unit>
        <trans-unit id="df220dc5e55d1e47fca0f72bff502436ac832bfe" translate="yes" xml:space="preserve">
          <source>SplitN::find</source>
          <target state="translated">SplitN::find</target>
        </trans-unit>
        <trans-unit id="0c5ed15b954402a97c57458f3f5fc41a98dcc792" translate="yes" xml:space="preserve">
          <source>SplitN::find_map</source>
          <target state="translated">SplitN::find_map</target>
        </trans-unit>
        <trans-unit id="98d41110c2558fc567d8923ff520ebad7bb5eaf3" translate="yes" xml:space="preserve">
          <source>SplitN::flat_map</source>
          <target state="translated">SplitN::flat_map</target>
        </trans-unit>
        <trans-unit id="80a6a8cf3ba46f779ef8d18c4bd3403365057478" translate="yes" xml:space="preserve">
          <source>SplitN::flatten</source>
          <target state="translated">SplitN::flatten</target>
        </trans-unit>
        <trans-unit id="5d87df857db806ea96763e81d2646a039765e3dd" translate="yes" xml:space="preserve">
          <source>SplitN::fmt</source>
          <target state="translated">SplitN::fmt</target>
        </trans-unit>
        <trans-unit id="e9832127e3fa28bea6bd8412ac21e2ad3e8c0310" translate="yes" xml:space="preserve">
          <source>SplitN::fold</source>
          <target state="translated">SplitN::fold</target>
        </trans-unit>
        <trans-unit id="1834a8473d4bec69f12d9dc52c8b383aeed7fe0f" translate="yes" xml:space="preserve">
          <source>SplitN::for_each</source>
          <target state="translated">SplitN::for_each</target>
        </trans-unit>
        <trans-unit id="d2c893944b190fa3b860239523e5791fdd571c0e" translate="yes" xml:space="preserve">
          <source>SplitN::from</source>
          <target state="translated">SplitN::from</target>
        </trans-unit>
        <trans-unit id="da81f035cef35745d353a2035446f599f4983e33" translate="yes" xml:space="preserve">
          <source>SplitN::fuse</source>
          <target state="translated">SplitN::fuse</target>
        </trans-unit>
        <trans-unit id="d1fda09cb7d8ec3fbca0339bfaa32bf7bdad7356" translate="yes" xml:space="preserve">
          <source>SplitN::ge</source>
          <target state="translated">SplitN::ge</target>
        </trans-unit>
        <trans-unit id="aa731f7a4b02d3b0a81fe4b654c437870c8d34b6" translate="yes" xml:space="preserve">
          <source>SplitN::gt</source>
          <target state="translated">SplitN::gt</target>
        </trans-unit>
        <trans-unit id="c5618febbcf525c645381667581e58703662edd0" translate="yes" xml:space="preserve">
          <source>SplitN::inspect</source>
          <target state="translated">SplitN::inspect</target>
        </trans-unit>
        <trans-unit id="8bb460910139af21ac29118fb663910d592e882f" translate="yes" xml:space="preserve">
          <source>SplitN::into</source>
          <target state="translated">SplitN::into</target>
        </trans-unit>
        <trans-unit id="e1042f51982fc7dbc155002d451ce4e1ca574dca" translate="yes" xml:space="preserve">
          <source>SplitN::into_iter</source>
          <target state="translated">SplitN::into_iter</target>
        </trans-unit>
        <trans-unit id="8463463f8a36a64e44101c34593800e1bc905f29" translate="yes" xml:space="preserve">
          <source>SplitN::is_sorted</source>
          <target state="translated">SplitN::is_sorted</target>
        </trans-unit>
        <trans-unit id="b5af2679a1b0859700692f13ec99ed4f729d0d23" translate="yes" xml:space="preserve">
          <source>SplitN::is_sorted_by</source>
          <target state="translated">SplitN::is_sorted_by</target>
        </trans-unit>
        <trans-unit id="faa9b81c956435b32cb3748bb185a2e8b58d3a13" translate="yes" xml:space="preserve">
          <source>SplitN::is_sorted_by_key</source>
          <target state="translated">SplitN::is_sorted_by_key</target>
        </trans-unit>
        <trans-unit id="95889fb9614babcc26a11cdea5748581c7c88d65" translate="yes" xml:space="preserve">
          <source>SplitN::last</source>
          <target state="translated">SplitN::last</target>
        </trans-unit>
        <trans-unit id="e97daab9d7578e2931baa7d1d46cd78e6376313a" translate="yes" xml:space="preserve">
          <source>SplitN::le</source>
          <target state="translated">SplitN::le</target>
        </trans-unit>
        <trans-unit id="028d068db19bdb09ad13cd9b8462734d9757ed4b" translate="yes" xml:space="preserve">
          <source>SplitN::lt</source>
          <target state="translated">SplitN::lt</target>
        </trans-unit>
        <trans-unit id="307fa967c67a2ce84e64f0b3818337bbd9d621d3" translate="yes" xml:space="preserve">
          <source>SplitN::map</source>
          <target state="translated">SplitN::map</target>
        </trans-unit>
        <trans-unit id="f1e758cba3c4683313000028f0c50e9f8b040a9e" translate="yes" xml:space="preserve">
          <source>SplitN::max</source>
          <target state="translated">SplitN::max</target>
        </trans-unit>
        <trans-unit id="75c2e8ce37698bfde673be74257adcbcc7b88295" translate="yes" xml:space="preserve">
          <source>SplitN::max_by</source>
          <target state="translated">SplitN::max_by</target>
        </trans-unit>
        <trans-unit id="33f258f7c5a1f3da0faa0548afc4c8c25706e6f0" translate="yes" xml:space="preserve">
          <source>SplitN::max_by_key</source>
          <target state="translated">SplitN::max_by_key</target>
        </trans-unit>
        <trans-unit id="54ac5b81e18ab0f8c92abe64ccc4f5301b02fc8b" translate="yes" xml:space="preserve">
          <source>SplitN::min</source>
          <target state="translated">SplitN::min</target>
        </trans-unit>
        <trans-unit id="b9a9686df44477991685521397f094f623314564" translate="yes" xml:space="preserve">
          <source>SplitN::min_by</source>
          <target state="translated">SplitN::min_by</target>
        </trans-unit>
        <trans-unit id="0eded5e718c37a846c755f2507832792cf7bfde5" translate="yes" xml:space="preserve">
          <source>SplitN::min_by_key</source>
          <target state="translated">SplitN::min_by_key</target>
        </trans-unit>
        <trans-unit id="68338043b35f857554c965714c90308819ddf388" translate="yes" xml:space="preserve">
          <source>SplitN::ne</source>
          <target state="translated">SplitN::ne</target>
        </trans-unit>
        <trans-unit id="ed6941fc5b27d1832efe7268ecbb911be8c6a16c" translate="yes" xml:space="preserve">
          <source>SplitN::next</source>
          <target state="translated">SplitN::next</target>
        </trans-unit>
        <trans-unit id="8d78abab34e9057d07d0fb5bc365979243499aac" translate="yes" xml:space="preserve">
          <source>SplitN::nth</source>
          <target state="translated">SplitN::nth</target>
        </trans-unit>
        <trans-unit id="e1b96349e7b005cb27ed10fd7583c3c122868a91" translate="yes" xml:space="preserve">
          <source>SplitN::partial_cmp</source>
          <target state="translated">SplitN::partial_cmp</target>
        </trans-unit>
        <trans-unit id="e3d9fa88c318832c6af7e7c7311f01d9978c47c6" translate="yes" xml:space="preserve">
          <source>SplitN::partition</source>
          <target state="translated">SplitN::partition</target>
        </trans-unit>
        <trans-unit id="f5cabce5868b7653c7e52336618a295286430046" translate="yes" xml:space="preserve">
          <source>SplitN::peekable</source>
          <target state="translated">SplitN::peekable</target>
        </trans-unit>
        <trans-unit id="974c8b6afca8ebb48f8f3ff5ece0eb8ffd55909f" translate="yes" xml:space="preserve">
          <source>SplitN::position</source>
          <target state="translated">SplitN::position</target>
        </trans-unit>
        <trans-unit id="8688e6ca520758cfb193536575d8f729a67cdd37" translate="yes" xml:space="preserve">
          <source>SplitN::product</source>
          <target state="translated">SplitN::product</target>
        </trans-unit>
        <trans-unit id="191e23eb02b3b7c67f52a633c039415b22b95b14" translate="yes" xml:space="preserve">
          <source>SplitN::rev</source>
          <target state="translated">SplitN::rev</target>
        </trans-unit>
        <trans-unit id="a55bfcd72970297b44c4e59d676de9ba3711bf64" translate="yes" xml:space="preserve">
          <source>SplitN::rposition</source>
          <target state="translated">SplitN::rposition</target>
        </trans-unit>
        <trans-unit id="5410bc76c40307385588b0b6d5c39a0d74265064" translate="yes" xml:space="preserve">
          <source>SplitN::scan</source>
          <target state="translated">SplitN::scan</target>
        </trans-unit>
        <trans-unit id="435fa26b031ae4d199174bcbc3d795df2087b1b5" translate="yes" xml:space="preserve">
          <source>SplitN::size_hint</source>
          <target state="translated">SplitN::size_hint</target>
        </trans-unit>
        <trans-unit id="495748c4da8d66742956405a3eada3abc1ebff04" translate="yes" xml:space="preserve">
          <source>SplitN::skip</source>
          <target state="translated">SplitN::skip</target>
        </trans-unit>
        <trans-unit id="6f36e16ed19c5224b87c544f0e92c8433a66b3b6" translate="yes" xml:space="preserve">
          <source>SplitN::skip_while</source>
          <target state="translated">SplitN::skip_while</target>
        </trans-unit>
        <trans-unit id="fc330722be71050cea54d16a8bf776b1244f6090" translate="yes" xml:space="preserve">
          <source>SplitN::step_by</source>
          <target state="translated">SplitN::step_by</target>
        </trans-unit>
        <trans-unit id="fc92ae01a6c4930351b4ef1ae82d8220a544936c" translate="yes" xml:space="preserve">
          <source>SplitN::sum</source>
          <target state="translated">SplitN::sum</target>
        </trans-unit>
        <trans-unit id="914ed2a8fc50777e1c082f41134b2b1f3f199c0b" translate="yes" xml:space="preserve">
          <source>SplitN::take</source>
          <target state="translated">SplitN::take</target>
        </trans-unit>
        <trans-unit id="c0b9cf8b5a279495349959e0936942f8c893dd65" translate="yes" xml:space="preserve">
          <source>SplitN::take_while</source>
          <target state="translated">SplitN::take_while</target>
        </trans-unit>
        <trans-unit id="8a17c8faeb884b01df70ea9aedafbea6c9e56234" translate="yes" xml:space="preserve">
          <source>SplitN::to_owned</source>
          <target state="translated">SplitN::to_owned</target>
        </trans-unit>
        <trans-unit id="d9cfaaff73dc1534a24fc707da5e0daa472edd2a" translate="yes" xml:space="preserve">
          <source>SplitN::try_fold</source>
          <target state="translated">SplitN::try_fold</target>
        </trans-unit>
        <trans-unit id="871ac84a3325fa781171370dec4d4e81593149f3" translate="yes" xml:space="preserve">
          <source>SplitN::try_for_each</source>
          <target state="translated">SplitN::try_for_each</target>
        </trans-unit>
        <trans-unit id="85319574adacf15e91791d48524fc096d71f6cfd" translate="yes" xml:space="preserve">
          <source>SplitN::try_from</source>
          <target state="translated">SplitN::try_from</target>
        </trans-unit>
        <trans-unit id="3b99ca99bba0ef038a7c1d5f8d8a182ba56f328b" translate="yes" xml:space="preserve">
          <source>SplitN::try_into</source>
          <target state="translated">SplitN::try_into</target>
        </trans-unit>
        <trans-unit id="4646de3a3fe2f07ea85477fb52285e49f53a1cf1" translate="yes" xml:space="preserve">
          <source>SplitN::type_id</source>
          <target state="translated">SplitN::type_id</target>
        </trans-unit>
        <trans-unit id="f49e5a4e63257e311308f8360781592c18f70410" translate="yes" xml:space="preserve">
          <source>SplitN::unzip</source>
          <target state="translated">SplitN::unzip</target>
        </trans-unit>
        <trans-unit id="8f152e20d90c1bc5f244fe76d7ddb23dc2b822f0" translate="yes" xml:space="preserve">
          <source>SplitN::zip</source>
          <target state="translated">SplitN::zip</target>
        </trans-unit>
        <trans-unit id="37f53f27df8a1e82b06b34901a971d08ceefaf3c" translate="yes" xml:space="preserve">
          <source>SplitNMut</source>
          <target state="translated">SplitNMut</target>
        </trans-unit>
        <trans-unit id="4c0e338962bdbbfc29ce29cc826ccca9f18dd5d7" translate="yes" xml:space="preserve">
          <source>SplitNMut::all</source>
          <target state="translated">SplitNMut::all</target>
        </trans-unit>
        <trans-unit id="c47eedee42d52d9fb8ec91b13118b22a6fd2c148" translate="yes" xml:space="preserve">
          <source>SplitNMut::any</source>
          <target state="translated">SplitNMut::any</target>
        </trans-unit>
        <trans-unit id="e49c8c20ae615b0c4cb6c25fc6c29c1057dbd2d4" translate="yes" xml:space="preserve">
          <source>SplitNMut::borrow</source>
          <target state="translated">SplitNMut::borrow</target>
        </trans-unit>
        <trans-unit id="c9b0d189b4d8f4a09740b9dc37fef976b4b0a7c8" translate="yes" xml:space="preserve">
          <source>SplitNMut::borrow_mut</source>
          <target state="translated">SplitNMut::borrow_mut</target>
        </trans-unit>
        <trans-unit id="c30a28755b28eae83a0128bd575ea45d1445f248" translate="yes" xml:space="preserve">
          <source>SplitNMut::by_ref</source>
          <target state="translated">SplitNMut::by_ref</target>
        </trans-unit>
        <trans-unit id="4cee4fd56377c8d4c737a159c4626eb9b66b0abd" translate="yes" xml:space="preserve">
          <source>SplitNMut::chain</source>
          <target state="translated">SplitNMut::chain</target>
        </trans-unit>
        <trans-unit id="48872779a65635a20c7efbd50dec9071cf416868" translate="yes" xml:space="preserve">
          <source>SplitNMut::cloned</source>
          <target state="translated">SplitNMut::cloned</target>
        </trans-unit>
        <trans-unit id="136be0de650548dccf182a46618f53fb577b02c8" translate="yes" xml:space="preserve">
          <source>SplitNMut::cmp</source>
          <target state="translated">SplitNMut::cmp</target>
        </trans-unit>
        <trans-unit id="6fa41a9fc3044e9e0a18e9ae5ec96b6e0be20d93" translate="yes" xml:space="preserve">
          <source>SplitNMut::collect</source>
          <target state="translated">SplitNMut::collect</target>
        </trans-unit>
        <trans-unit id="539e380600f3cf3a398bedb5ea5ac9faa86e3bd2" translate="yes" xml:space="preserve">
          <source>SplitNMut::copied</source>
          <target state="translated">SplitNMut::copied</target>
        </trans-unit>
        <trans-unit id="2274ac91cf6da704ec8620d24b7c91e7e3a0eb08" translate="yes" xml:space="preserve">
          <source>SplitNMut::count</source>
          <target state="translated">SplitNMut::count</target>
        </trans-unit>
        <trans-unit id="605e1c5227d054d4a043a2e31b51bc7663e413f6" translate="yes" xml:space="preserve">
          <source>SplitNMut::cycle</source>
          <target state="translated">SplitNMut::cycle</target>
        </trans-unit>
        <trans-unit id="97821e6bfcd7e54b98d576388e7877979b57cad5" translate="yes" xml:space="preserve">
          <source>SplitNMut::enumerate</source>
          <target state="translated">SplitNMut::enumerate</target>
        </trans-unit>
        <trans-unit id="f64bc79a9760b64a3611b9c1a200fe6953bb5d91" translate="yes" xml:space="preserve">
          <source>SplitNMut::eq</source>
          <target state="translated">SplitNMut::eq</target>
        </trans-unit>
        <trans-unit id="7e3820c2690f61a72e05851bf81b24e11ade74f5" translate="yes" xml:space="preserve">
          <source>SplitNMut::filter</source>
          <target state="translated">SplitNMut::filter</target>
        </trans-unit>
        <trans-unit id="cf701ab6ae23e84f217a1644b271553fab59b484" translate="yes" xml:space="preserve">
          <source>SplitNMut::filter_map</source>
          <target state="translated">SplitNMut::filter_map</target>
        </trans-unit>
        <trans-unit id="b4da8042a147027f8d622ce501ea15b83f6b7239" translate="yes" xml:space="preserve">
          <source>SplitNMut::find</source>
          <target state="translated">SplitNMut::find</target>
        </trans-unit>
        <trans-unit id="7f01897f6836b7fcc7b7abaab25f0db4f47d9a0e" translate="yes" xml:space="preserve">
          <source>SplitNMut::find_map</source>
          <target state="translated">SplitNMut::find_map</target>
        </trans-unit>
        <trans-unit id="632cc2377e06466fd8139a1e3b82897ba3aad182" translate="yes" xml:space="preserve">
          <source>SplitNMut::flat_map</source>
          <target state="translated">SplitNMut::flat_map</target>
        </trans-unit>
        <trans-unit id="7d61f56bb2bd62c551fb454570e1002c65f8e0d6" translate="yes" xml:space="preserve">
          <source>SplitNMut::flatten</source>
          <target state="translated">SplitNMut::flatten</target>
        </trans-unit>
        <trans-unit id="0dea7da0d6e45d6a8174a8df0e0cdad6f9af6992" translate="yes" xml:space="preserve">
          <source>SplitNMut::fmt</source>
          <target state="translated">SplitNMut::fmt</target>
        </trans-unit>
        <trans-unit id="933cb3c024bff66f63b42715c659ec4ed5ab427b" translate="yes" xml:space="preserve">
          <source>SplitNMut::fold</source>
          <target state="translated">SplitNMut::fold</target>
        </trans-unit>
        <trans-unit id="0f8977d28b6e4f6d4cbf0582820764b7dccfc1e6" translate="yes" xml:space="preserve">
          <source>SplitNMut::for_each</source>
          <target state="translated">SplitNMut::for_each</target>
        </trans-unit>
        <trans-unit id="0c579c727e80083a312253a77c4beaff91e6de3e" translate="yes" xml:space="preserve">
          <source>SplitNMut::from</source>
          <target state="translated">SplitNMut::from</target>
        </trans-unit>
        <trans-unit id="25429d25e481c3c08c825c5d40c9054a1e62d368" translate="yes" xml:space="preserve">
          <source>SplitNMut::fuse</source>
          <target state="translated">SplitNMut::fuse</target>
        </trans-unit>
        <trans-unit id="2adeddd6086e37d9999f95255c521d8fd1340be0" translate="yes" xml:space="preserve">
          <source>SplitNMut::ge</source>
          <target state="translated">SplitNMut::ge</target>
        </trans-unit>
        <trans-unit id="c588cf62255c1ab0a8711fa004ba5fe334206d65" translate="yes" xml:space="preserve">
          <source>SplitNMut::gt</source>
          <target state="translated">SplitNMut::gt</target>
        </trans-unit>
        <trans-unit id="edc2c238a403b4882bbd5d050bc089826c959abe" translate="yes" xml:space="preserve">
          <source>SplitNMut::inspect</source>
          <target state="translated">SplitNMut::inspect</target>
        </trans-unit>
        <trans-unit id="d1e9b9a48ffffd32edcb025916c55122fe9f5093" translate="yes" xml:space="preserve">
          <source>SplitNMut::into</source>
          <target state="translated">SplitNMut::into</target>
        </trans-unit>
        <trans-unit id="54b9fa0fc0c6efeea3b1bf9f2f6ed4a2606fd980" translate="yes" xml:space="preserve">
          <source>SplitNMut::into_iter</source>
          <target state="translated">SplitNMut::into_iter</target>
        </trans-unit>
        <trans-unit id="8cee2a2c07cc63a9afc3c746a8ae10737e22a7e5" translate="yes" xml:space="preserve">
          <source>SplitNMut::is_sorted</source>
          <target state="translated">SplitNMut::is_sorted</target>
        </trans-unit>
        <trans-unit id="57c830641ceb4a77f1a978890a1d0858ecf11e85" translate="yes" xml:space="preserve">
          <source>SplitNMut::is_sorted_by</source>
          <target state="translated">SplitNMut::is_sorted_by</target>
        </trans-unit>
        <trans-unit id="017061da8a5bf0d758e0b8a23a787c7e30bc38b8" translate="yes" xml:space="preserve">
          <source>SplitNMut::is_sorted_by_key</source>
          <target state="translated">SplitNMut::is_sorted_by_key</target>
        </trans-unit>
        <trans-unit id="9056b917ae8d9911661189718ca7f2c454a0ae4d" translate="yes" xml:space="preserve">
          <source>SplitNMut::last</source>
          <target state="translated">SplitNMut::last</target>
        </trans-unit>
        <trans-unit id="76296c2a39c2177e659dc061adde050bf166095d" translate="yes" xml:space="preserve">
          <source>SplitNMut::le</source>
          <target state="translated">SplitNMut::le</target>
        </trans-unit>
        <trans-unit id="91045453f4e83beb6f056ffd764031695b65d058" translate="yes" xml:space="preserve">
          <source>SplitNMut::lt</source>
          <target state="translated">SplitNMut::lt</target>
        </trans-unit>
        <trans-unit id="3396ae835432a2640e4b743bd5e9c1a32606f138" translate="yes" xml:space="preserve">
          <source>SplitNMut::map</source>
          <target state="translated">SplitNMut::map</target>
        </trans-unit>
        <trans-unit id="209efacf4d587c105d733cca25095d03793ece6a" translate="yes" xml:space="preserve">
          <source>SplitNMut::max</source>
          <target state="translated">SplitNMut::max</target>
        </trans-unit>
        <trans-unit id="287c9cbce4c84663fa5c6ad76d0b898fe7b12a72" translate="yes" xml:space="preserve">
          <source>SplitNMut::max_by</source>
          <target state="translated">SplitNMut::max_by</target>
        </trans-unit>
        <trans-unit id="5a48c762d71fececea5967ad45f9c482979955bc" translate="yes" xml:space="preserve">
          <source>SplitNMut::max_by_key</source>
          <target state="translated">SplitNMut::max_by_key</target>
        </trans-unit>
        <trans-unit id="13d6b2a062d40c56e264109030e1084da951c3f6" translate="yes" xml:space="preserve">
          <source>SplitNMut::min</source>
          <target state="translated">SplitNMut::min</target>
        </trans-unit>
        <trans-unit id="92c1d5f9da2c477e2875ee1e54546716f584d742" translate="yes" xml:space="preserve">
          <source>SplitNMut::min_by</source>
          <target state="translated">SplitNMut::min_by</target>
        </trans-unit>
        <trans-unit id="cb4cf67fa183bc4195c8a335896088905c209d8e" translate="yes" xml:space="preserve">
          <source>SplitNMut::min_by_key</source>
          <target state="translated">SplitNMut::min_by_key</target>
        </trans-unit>
        <trans-unit id="e422085bfbae789622692a9f57482510de70a51c" translate="yes" xml:space="preserve">
          <source>SplitNMut::ne</source>
          <target state="translated">SplitNMut::ne</target>
        </trans-unit>
        <trans-unit id="79701a290397f83dff7191fc5d522087d64b94ad" translate="yes" xml:space="preserve">
          <source>SplitNMut::next</source>
          <target state="translated">SplitNMut::next</target>
        </trans-unit>
        <trans-unit id="1f3af99622e8b046c0dafa0e70815c8a440e6d96" translate="yes" xml:space="preserve">
          <source>SplitNMut::nth</source>
          <target state="translated">SplitNMut::nth</target>
        </trans-unit>
        <trans-unit id="1ba51ebb31573ee9a87ca245b7dad3e618c6afaf" translate="yes" xml:space="preserve">
          <source>SplitNMut::partial_cmp</source>
          <target state="translated">SplitNMut::partial_cmp</target>
        </trans-unit>
        <trans-unit id="7a68bf0b6edddb7e68babe6af2515cd4a71f32bf" translate="yes" xml:space="preserve">
          <source>SplitNMut::partition</source>
          <target state="translated">SplitNMut::partition</target>
        </trans-unit>
        <trans-unit id="9e2b52abf4624a0f31359d085ea9282907f3ce13" translate="yes" xml:space="preserve">
          <source>SplitNMut::peekable</source>
          <target state="translated">SplitNMut::peekable</target>
        </trans-unit>
        <trans-unit id="9eca2690b3367c1435eb105cfcece74e692a47f5" translate="yes" xml:space="preserve">
          <source>SplitNMut::position</source>
          <target state="translated">SplitNMut::position</target>
        </trans-unit>
        <trans-unit id="da540d19fb430cc61cfcb584f1eecc7702b474d5" translate="yes" xml:space="preserve">
          <source>SplitNMut::product</source>
          <target state="translated">SplitNMut::product</target>
        </trans-unit>
        <trans-unit id="133612340955fa3cfb981ad8291be05f4372a836" translate="yes" xml:space="preserve">
          <source>SplitNMut::rev</source>
          <target state="translated">SplitNMut::rev</target>
        </trans-unit>
        <trans-unit id="343f8e1ef12460ed78461507e7620a1f0528f71f" translate="yes" xml:space="preserve">
          <source>SplitNMut::rposition</source>
          <target state="translated">SplitNMut::rposition</target>
        </trans-unit>
        <trans-unit id="aea64acadcd9a6942de2bda0b5a7a554c09d17b5" translate="yes" xml:space="preserve">
          <source>SplitNMut::scan</source>
          <target state="translated">SplitNMut::scan</target>
        </trans-unit>
        <trans-unit id="bbc6e66edd951ef18e6c581252e98557724ff623" translate="yes" xml:space="preserve">
          <source>SplitNMut::size_hint</source>
          <target state="translated">SplitNMut::size_hint</target>
        </trans-unit>
        <trans-unit id="bcbbf9f169d0b1158cfd33aed850cb1a285ed04b" translate="yes" xml:space="preserve">
          <source>SplitNMut::skip</source>
          <target state="translated">SplitNMut::skip</target>
        </trans-unit>
        <trans-unit id="50e0922664c88a6a9de5cd8ca66589685407e929" translate="yes" xml:space="preserve">
          <source>SplitNMut::skip_while</source>
          <target state="translated">SplitNMut::skip_while</target>
        </trans-unit>
        <trans-unit id="e26f2196c1c4e81517879036c030ac1bf9fb7242" translate="yes" xml:space="preserve">
          <source>SplitNMut::step_by</source>
          <target state="translated">SplitNMut::step_by</target>
        </trans-unit>
        <trans-unit id="22c8deb5450c8dc8765d39e617368d45985d09ca" translate="yes" xml:space="preserve">
          <source>SplitNMut::sum</source>
          <target state="translated">SplitNMut::sum</target>
        </trans-unit>
        <trans-unit id="321673a9cd4fe8f8dd1539d820e59098f0589598" translate="yes" xml:space="preserve">
          <source>SplitNMut::take</source>
          <target state="translated">SplitNMut::take</target>
        </trans-unit>
        <trans-unit id="77c59de28ec49ac8197d5bce7ea567716d9e4f3c" translate="yes" xml:space="preserve">
          <source>SplitNMut::take_while</source>
          <target state="translated">SplitNMut::take_while</target>
        </trans-unit>
        <trans-unit id="d929a36e3ae42c5778bff7a70486b9efe45f49b9" translate="yes" xml:space="preserve">
          <source>SplitNMut::try_fold</source>
          <target state="translated">SplitNMut::try_fold</target>
        </trans-unit>
        <trans-unit id="1e3a2cc95cc68bd1db268249420579015c6b1f1a" translate="yes" xml:space="preserve">
          <source>SplitNMut::try_for_each</source>
          <target state="translated">SplitNMut::try_for_each</target>
        </trans-unit>
        <trans-unit id="5513ba597776f2350b8c04bb4dfea4ebb6afdff9" translate="yes" xml:space="preserve">
          <source>SplitNMut::try_from</source>
          <target state="translated">SplitNMut::try_from</target>
        </trans-unit>
        <trans-unit id="39d347607af42c6a75d0c65f8a8f9382b57f340d" translate="yes" xml:space="preserve">
          <source>SplitNMut::try_into</source>
          <target state="translated">SplitNMut::try_into</target>
        </trans-unit>
        <trans-unit id="481cfa894e1b4c06b8279766b0d45177f62871ab" translate="yes" xml:space="preserve">
          <source>SplitNMut::type_id</source>
          <target state="translated">SplitNMut::type_id</target>
        </trans-unit>
        <trans-unit id="b68dc2de077efc2a96f8d45596a0acd71cf05007" translate="yes" xml:space="preserve">
          <source>SplitNMut::unzip</source>
          <target state="translated">SplitNMut::unzip</target>
        </trans-unit>
        <trans-unit id="b0396af098fd20bc04ef554c33dc5ce21425086e" translate="yes" xml:space="preserve">
          <source>SplitNMut::zip</source>
          <target state="translated">SplitNMut::zip</target>
        </trans-unit>
        <trans-unit id="ecb7b24980fc6948e26c7406d71646df8ef64d9b" translate="yes" xml:space="preserve">
          <source>SplitPaths</source>
          <target state="translated">SplitPaths</target>
        </trans-unit>
        <trans-unit id="bcb92c8d23e31b7a36777e6be769d3f239505088" translate="yes" xml:space="preserve">
          <source>SplitPaths::all</source>
          <target state="translated">SplitPaths::all</target>
        </trans-unit>
        <trans-unit id="b101ce53a83b89861d80d8838391a2cc0a33c44e" translate="yes" xml:space="preserve">
          <source>SplitPaths::any</source>
          <target state="translated">SplitPaths::any</target>
        </trans-unit>
        <trans-unit id="7edab2871d8fc2ec00dc27f02b962160797b6efb" translate="yes" xml:space="preserve">
          <source>SplitPaths::borrow</source>
          <target state="translated">SplitPaths::borrow</target>
        </trans-unit>
        <trans-unit id="d63e1c5be3f98a190f7f0e37c98fb43100453cbe" translate="yes" xml:space="preserve">
          <source>SplitPaths::borrow_mut</source>
          <target state="translated">SplitPaths::borrow_mut</target>
        </trans-unit>
        <trans-unit id="872b2fd231032679a497e2a9a5546e374bd7ce7c" translate="yes" xml:space="preserve">
          <source>SplitPaths::by_ref</source>
          <target state="translated">SplitPaths::by_ref</target>
        </trans-unit>
        <trans-unit id="555f0f50aca9dc26a62aa3d74aaab86b7494e191" translate="yes" xml:space="preserve">
          <source>SplitPaths::chain</source>
          <target state="translated">SplitPaths::chain</target>
        </trans-unit>
        <trans-unit id="f8da78e1024a3b666234e3627801f46b9d1a930c" translate="yes" xml:space="preserve">
          <source>SplitPaths::cloned</source>
          <target state="translated">SplitPaths::cloned</target>
        </trans-unit>
        <trans-unit id="6d3dbd20c7e1433a1b2b38d798f779e3c6ec966c" translate="yes" xml:space="preserve">
          <source>SplitPaths::cmp</source>
          <target state="translated">SplitPaths::cmp</target>
        </trans-unit>
        <trans-unit id="6a464f6e27b55ccea222caf1821e67cd6791511a" translate="yes" xml:space="preserve">
          <source>SplitPaths::collect</source>
          <target state="translated">SplitPaths::collect</target>
        </trans-unit>
        <trans-unit id="08c417fe4992ea54915c1cab35c0560285f9d75b" translate="yes" xml:space="preserve">
          <source>SplitPaths::copied</source>
          <target state="translated">SplitPaths::copied</target>
        </trans-unit>
        <trans-unit id="e1aa6c5f1eaa69159b50997627bb004e6b5a0bae" translate="yes" xml:space="preserve">
          <source>SplitPaths::count</source>
          <target state="translated">SplitPaths::count</target>
        </trans-unit>
        <trans-unit id="aabdd2130c2cd42547f3a394603830047d3fd723" translate="yes" xml:space="preserve">
          <source>SplitPaths::cycle</source>
          <target state="translated">SplitPaths::cycle</target>
        </trans-unit>
        <trans-unit id="5b1b1cbbfedcac997c352e3ca2c867281238a15f" translate="yes" xml:space="preserve">
          <source>SplitPaths::enumerate</source>
          <target state="translated">SplitPaths::enumerate</target>
        </trans-unit>
        <trans-unit id="1c420169f4480d6f5457322b64217abdd3e5bd7c" translate="yes" xml:space="preserve">
          <source>SplitPaths::eq</source>
          <target state="translated">SplitPaths::eq</target>
        </trans-unit>
        <trans-unit id="aa8e9435275a1e06354bc3b45f9f9f789a3eb18f" translate="yes" xml:space="preserve">
          <source>SplitPaths::filter</source>
          <target state="translated">SplitPaths::filter</target>
        </trans-unit>
        <trans-unit id="e97d30671a4a7d6834d87aceea858199751eecaa" translate="yes" xml:space="preserve">
          <source>SplitPaths::filter_map</source>
          <target state="translated">SplitPaths::filter_map</target>
        </trans-unit>
        <trans-unit id="97f6de681bd09653a32550cb13039848bd035818" translate="yes" xml:space="preserve">
          <source>SplitPaths::find</source>
          <target state="translated">SplitPaths::find</target>
        </trans-unit>
        <trans-unit id="242f33772f9eb2884f0fc856dd3b5c0f961fb580" translate="yes" xml:space="preserve">
          <source>SplitPaths::find_map</source>
          <target state="translated">SplitPaths::find_map</target>
        </trans-unit>
        <trans-unit id="af156dee22c40734f8db37001651e09401c3e39a" translate="yes" xml:space="preserve">
          <source>SplitPaths::flat_map</source>
          <target state="translated">SplitPaths::flat_map</target>
        </trans-unit>
        <trans-unit id="63f57f66ff0933a5e761dacd442dfab0947db56a" translate="yes" xml:space="preserve">
          <source>SplitPaths::flatten</source>
          <target state="translated">SplitPaths::flatten</target>
        </trans-unit>
        <trans-unit id="52e7917086c54b0102e89bcf686a68f09cba8a8a" translate="yes" xml:space="preserve">
          <source>SplitPaths::fmt</source>
          <target state="translated">SplitPaths::fmt</target>
        </trans-unit>
        <trans-unit id="ac78f2314441a7e6a5b6aa08e56d2b458f6f64c2" translate="yes" xml:space="preserve">
          <source>SplitPaths::fold</source>
          <target state="translated">SplitPaths::fold</target>
        </trans-unit>
        <trans-unit id="e4c6b998489cb43b7c1d3b243f46ec64cf4b961e" translate="yes" xml:space="preserve">
          <source>SplitPaths::for_each</source>
          <target state="translated">SplitPaths::for_each</target>
        </trans-unit>
        <trans-unit id="b973fee85043a2bfd47b8c44e9a87497f686b3f9" translate="yes" xml:space="preserve">
          <source>SplitPaths::from</source>
          <target state="translated">SplitPaths::from</target>
        </trans-unit>
        <trans-unit id="3bf5eab1cc26a1aa9c3b09c9ebcddb2cc9d9fefa" translate="yes" xml:space="preserve">
          <source>SplitPaths::fuse</source>
          <target state="translated">SplitPaths::fuse</target>
        </trans-unit>
        <trans-unit id="66a74f31a75f31d9f4606c3bbe793946e4b2058a" translate="yes" xml:space="preserve">
          <source>SplitPaths::ge</source>
          <target state="translated">SplitPaths::ge</target>
        </trans-unit>
        <trans-unit id="3d00fbf250dd66828c4d855d4ce41ba851e67a71" translate="yes" xml:space="preserve">
          <source>SplitPaths::gt</source>
          <target state="translated">SplitPaths::gt</target>
        </trans-unit>
        <trans-unit id="6086e87966eb11856a9acd55db3cefff3ade118a" translate="yes" xml:space="preserve">
          <source>SplitPaths::inspect</source>
          <target state="translated">SplitPaths::inspect</target>
        </trans-unit>
        <trans-unit id="d07aca8edcece15681932841d44b738c74ab182a" translate="yes" xml:space="preserve">
          <source>SplitPaths::into</source>
          <target state="translated">SplitPaths::into</target>
        </trans-unit>
        <trans-unit id="ff254ca9d77f264b35b2dab31abb141c0fa3b642" translate="yes" xml:space="preserve">
          <source>SplitPaths::into_iter</source>
          <target state="translated">SplitPaths::into_iter</target>
        </trans-unit>
        <trans-unit id="7bbc041ee18092c370d9b59ee1ab89ff80385817" translate="yes" xml:space="preserve">
          <source>SplitPaths::is_sorted</source>
          <target state="translated">SplitPaths::is_sorted</target>
        </trans-unit>
        <trans-unit id="2d1385167d048dbdad2a83faf27af36f9330ba0f" translate="yes" xml:space="preserve">
          <source>SplitPaths::is_sorted_by</source>
          <target state="translated">SplitPaths::is_sorted_by</target>
        </trans-unit>
        <trans-unit id="baf0fb484e3f25b983930a036489e00dbd0abbfe" translate="yes" xml:space="preserve">
          <source>SplitPaths::is_sorted_by_key</source>
          <target state="translated">SplitPaths::is_sorted_by_key</target>
        </trans-unit>
        <trans-unit id="49b14c246f569f5a72ef462272493557285bf4da" translate="yes" xml:space="preserve">
          <source>SplitPaths::last</source>
          <target state="translated">SplitPaths::last</target>
        </trans-unit>
        <trans-unit id="d54eeb3db204787a6be902783ae307e65bb4533e" translate="yes" xml:space="preserve">
          <source>SplitPaths::le</source>
          <target state="translated">SplitPaths::le</target>
        </trans-unit>
        <trans-unit id="6a66e98727957116ef32c12432ff3e9b8f74579c" translate="yes" xml:space="preserve">
          <source>SplitPaths::lt</source>
          <target state="translated">SplitPaths::lt</target>
        </trans-unit>
        <trans-unit id="082eecb07196b30489eb1de2d253960a31ae9de8" translate="yes" xml:space="preserve">
          <source>SplitPaths::map</source>
          <target state="translated">SplitPaths::map</target>
        </trans-unit>
        <trans-unit id="d961bb4a4da05c4cc6bd8be664195718378f6393" translate="yes" xml:space="preserve">
          <source>SplitPaths::max</source>
          <target state="translated">SplitPaths::max</target>
        </trans-unit>
        <trans-unit id="bf9488d97e87e5ca97bc245d015ad9b69840a48d" translate="yes" xml:space="preserve">
          <source>SplitPaths::max_by</source>
          <target state="translated">SplitPaths::max_by</target>
        </trans-unit>
        <trans-unit id="ecbee064365f6f01775ca0d6f889e1453f1a84e6" translate="yes" xml:space="preserve">
          <source>SplitPaths::max_by_key</source>
          <target state="translated">SplitPaths::max_by_key</target>
        </trans-unit>
        <trans-unit id="72fcf5b015c2f0e764545b5b54c5e0792fefb8f2" translate="yes" xml:space="preserve">
          <source>SplitPaths::min</source>
          <target state="translated">SplitPaths::min</target>
        </trans-unit>
        <trans-unit id="dddb2780536d062fbb09a41de95820680f05cc0f" translate="yes" xml:space="preserve">
          <source>SplitPaths::min_by</source>
          <target state="translated">SplitPaths::min_by</target>
        </trans-unit>
        <trans-unit id="1daf3b7a999f386586425142fbb61e80360b54b4" translate="yes" xml:space="preserve">
          <source>SplitPaths::min_by_key</source>
          <target state="translated">SplitPaths::min_by_key</target>
        </trans-unit>
        <trans-unit id="00ccc956bc9231cc61442e592f8714aeeb02f6db" translate="yes" xml:space="preserve">
          <source>SplitPaths::ne</source>
          <target state="translated">SplitPaths::ne</target>
        </trans-unit>
        <trans-unit id="9c8dd2303bd1406b3252cebfe0c5c50e07ccf0ac" translate="yes" xml:space="preserve">
          <source>SplitPaths::next</source>
          <target state="translated">SplitPaths::next</target>
        </trans-unit>
        <trans-unit id="5b06df44ee9d2f501fb4e44e54e439ff319ac763" translate="yes" xml:space="preserve">
          <source>SplitPaths::nth</source>
          <target state="translated">SplitPaths::nth</target>
        </trans-unit>
        <trans-unit id="8a7577dcf7945b5c0b1ef8a01bf3f49a2b062a05" translate="yes" xml:space="preserve">
          <source>SplitPaths::partial_cmp</source>
          <target state="translated">SplitPaths::partial_cmp</target>
        </trans-unit>
        <trans-unit id="e3a94933a5c5013f8aeb214ec5e6c4265e2f0a75" translate="yes" xml:space="preserve">
          <source>SplitPaths::partition</source>
          <target state="translated">SplitPaths::partition</target>
        </trans-unit>
        <trans-unit id="ddcf9df03995fe93cc04c3756a65084c05030755" translate="yes" xml:space="preserve">
          <source>SplitPaths::peekable</source>
          <target state="translated">SplitPaths::peekable</target>
        </trans-unit>
        <trans-unit id="b9af4d960c0273dcb290d802b6ba16fc5180ee87" translate="yes" xml:space="preserve">
          <source>SplitPaths::position</source>
          <target state="translated">SplitPaths::position</target>
        </trans-unit>
        <trans-unit id="484e2a485b010e532c5c383c753ef2e4c9c89830" translate="yes" xml:space="preserve">
          <source>SplitPaths::product</source>
          <target state="translated">SplitPaths::product</target>
        </trans-unit>
        <trans-unit id="f6a17c538ce77ee2aee0b9d5ff8720a55dce8290" translate="yes" xml:space="preserve">
          <source>SplitPaths::rev</source>
          <target state="translated">SplitPaths::rev</target>
        </trans-unit>
        <trans-unit id="ee13b2c3289f5472df1a209686457a991b30da1e" translate="yes" xml:space="preserve">
          <source>SplitPaths::rposition</source>
          <target state="translated">SplitPaths::rposition</target>
        </trans-unit>
        <trans-unit id="7b2d518e3f65551746e1155a8038b680e562f7f2" translate="yes" xml:space="preserve">
          <source>SplitPaths::scan</source>
          <target state="translated">SplitPaths::scan</target>
        </trans-unit>
        <trans-unit id="dd1f2e3027a4e41b375294326c16f1df22240618" translate="yes" xml:space="preserve">
          <source>SplitPaths::size_hint</source>
          <target state="translated">SplitPaths::size_hint</target>
        </trans-unit>
        <trans-unit id="9eaa0877ae5670efebe87193ab761b104a0e1d27" translate="yes" xml:space="preserve">
          <source>SplitPaths::skip</source>
          <target state="translated">SplitPaths::skip</target>
        </trans-unit>
        <trans-unit id="48fea43cda63ddf3963977e2806535209d47d108" translate="yes" xml:space="preserve">
          <source>SplitPaths::skip_while</source>
          <target state="translated">SplitPaths::skip_while</target>
        </trans-unit>
        <trans-unit id="611214f2355235037fe6a699a1b4dae33a49284f" translate="yes" xml:space="preserve">
          <source>SplitPaths::step_by</source>
          <target state="translated">SplitPaths::step_by</target>
        </trans-unit>
        <trans-unit id="c8e2aac28508e79b1bc1a27334dd56f4745b1505" translate="yes" xml:space="preserve">
          <source>SplitPaths::sum</source>
          <target state="translated">SplitPaths::sum</target>
        </trans-unit>
        <trans-unit id="70b722d33259c52398c1f31c4df9f91bc3264484" translate="yes" xml:space="preserve">
          <source>SplitPaths::take</source>
          <target state="translated">SplitPaths::take</target>
        </trans-unit>
        <trans-unit id="1566a58c462568b175c6915431d46aa0dc9653ae" translate="yes" xml:space="preserve">
          <source>SplitPaths::take_while</source>
          <target state="translated">SplitPaths::take_while</target>
        </trans-unit>
        <trans-unit id="1fdce33b4d5d093bf11418de18375be7b3e189d1" translate="yes" xml:space="preserve">
          <source>SplitPaths::try_fold</source>
          <target state="translated">SplitPaths::try_fold</target>
        </trans-unit>
        <trans-unit id="afcc77e9b591283fd30de0d2dd28b0319b902b0c" translate="yes" xml:space="preserve">
          <source>SplitPaths::try_for_each</source>
          <target state="translated">SplitPaths::try_for_each</target>
        </trans-unit>
        <trans-unit id="12d549a302a6eeff342f9c71a2e0738fc3721c4d" translate="yes" xml:space="preserve">
          <source>SplitPaths::try_from</source>
          <target state="translated">SplitPaths::try_from</target>
        </trans-unit>
        <trans-unit id="faaafdaeeb33007687ea493cd834f38e35a1edd9" translate="yes" xml:space="preserve">
          <source>SplitPaths::try_into</source>
          <target state="translated">SplitPaths::try_into</target>
        </trans-unit>
        <trans-unit id="e407661d44f4fb8c89a66d593047673927709a65" translate="yes" xml:space="preserve">
          <source>SplitPaths::type_id</source>
          <target state="translated">SplitPaths::type_id</target>
        </trans-unit>
        <trans-unit id="835d6074f82e2823251c383a74fe5635ecb04877" translate="yes" xml:space="preserve">
          <source>SplitPaths::unzip</source>
          <target state="translated">SplitPaths::unzip</target>
        </trans-unit>
        <trans-unit id="08b87f4df808ddfe84ce1f35d06eb5ef3f203bc6" translate="yes" xml:space="preserve">
          <source>SplitPaths::zip</source>
          <target state="translated">SplitPaths::zip</target>
        </trans-unit>
        <trans-unit id="ac800ba35cc502dad71f3e16156e075e0d1b20c6" translate="yes" xml:space="preserve">
          <source>SplitTerminator</source>
          <target state="translated">SplitTerminator</target>
        </trans-unit>
        <trans-unit id="3dfddd3a03b2b2efa61e35c3e0acdf13382de453" translate="yes" xml:space="preserve">
          <source>SplitTerminator::all</source>
          <target state="translated">SplitTerminator::all</target>
        </trans-unit>
        <trans-unit id="6d145bf6f2d3c0b41d5774a3bf1796b7a46a6336" translate="yes" xml:space="preserve">
          <source>SplitTerminator::any</source>
          <target state="translated">SplitTerminator::any</target>
        </trans-unit>
        <trans-unit id="77d8cd697d6a7825dd5ef8f5738df059f64cb325" translate="yes" xml:space="preserve">
          <source>SplitTerminator::borrow</source>
          <target state="translated">SplitTerminator::borrow</target>
        </trans-unit>
        <trans-unit id="50989ea027412feb64dbc8c464a249a6297dea45" translate="yes" xml:space="preserve">
          <source>SplitTerminator::borrow_mut</source>
          <target state="translated">SplitTerminator::borrow_mut</target>
        </trans-unit>
        <trans-unit id="a1c8d5e3ac2a4569ff6f3abee2441478deb31965" translate="yes" xml:space="preserve">
          <source>SplitTerminator::by_ref</source>
          <target state="translated">SplitTerminator::by_ref</target>
        </trans-unit>
        <trans-unit id="fdfc335d822feda60777fdb258e0ea27c35eeb8b" translate="yes" xml:space="preserve">
          <source>SplitTerminator::chain</source>
          <target state="translated">SplitTerminator::chain</target>
        </trans-unit>
        <trans-unit id="d373af134fb22391e4fa6c25df54d62d1057d093" translate="yes" xml:space="preserve">
          <source>SplitTerminator::clone</source>
          <target state="translated">SplitTerminator::clone</target>
        </trans-unit>
        <trans-unit id="649999e39a8879ea310fc9a335515170923afbea" translate="yes" xml:space="preserve">
          <source>SplitTerminator::clone_from</source>
          <target state="translated">SplitTerminator::clone_from</target>
        </trans-unit>
        <trans-unit id="8e50a88544f84d14b665f77b02f8bb50318bb9b2" translate="yes" xml:space="preserve">
          <source>SplitTerminator::clone_into</source>
          <target state="translated">SplitTerminator::clone_into</target>
        </trans-unit>
        <trans-unit id="b30f4bdc0a991c0d4ebc74bdb197c38cfc1b29c9" translate="yes" xml:space="preserve">
          <source>SplitTerminator::cloned</source>
          <target state="translated">SplitTerminator::cloned</target>
        </trans-unit>
        <trans-unit id="052863724631317ef99c9fd11e65801287344662" translate="yes" xml:space="preserve">
          <source>SplitTerminator::cmp</source>
          <target state="translated">SplitTerminator::cmp</target>
        </trans-unit>
        <trans-unit id="6fefa4a277dc92bcd974294eb926630edfdf8818" translate="yes" xml:space="preserve">
          <source>SplitTerminator::collect</source>
          <target state="translated">SplitTerminator::collect</target>
        </trans-unit>
        <trans-unit id="83e9fa65b305bd9f40140b85248eca5a27331eca" translate="yes" xml:space="preserve">
          <source>SplitTerminator::copied</source>
          <target state="translated">SplitTerminator::copied</target>
        </trans-unit>
        <trans-unit id="08f283cb446bc58d9dd7270c2b0a775853b9a817" translate="yes" xml:space="preserve">
          <source>SplitTerminator::count</source>
          <target state="translated">SplitTerminator::count</target>
        </trans-unit>
        <trans-unit id="c497c9992ed339eb12c3bc8322b4e1f9f774a721" translate="yes" xml:space="preserve">
          <source>SplitTerminator::cycle</source>
          <target state="translated">SplitTerminator::cycle</target>
        </trans-unit>
        <trans-unit id="e6f991cdf1b9781f4e58864bbacd759235edb144" translate="yes" xml:space="preserve">
          <source>SplitTerminator::enumerate</source>
          <target state="translated">SplitTerminator::enumerate</target>
        </trans-unit>
        <trans-unit id="f121bc31dd2d937daa6baaa0de3f5458a0ba80aa" translate="yes" xml:space="preserve">
          <source>SplitTerminator::eq</source>
          <target state="translated">SplitTerminator::eq</target>
        </trans-unit>
        <trans-unit id="f6ba310936bc5b4c8fae40287b69c2e6bc6f8211" translate="yes" xml:space="preserve">
          <source>SplitTerminator::filter</source>
          <target state="translated">SplitTerminator::filter</target>
        </trans-unit>
        <trans-unit id="1df94e368abab48792a1bd38f1072e88861ccacc" translate="yes" xml:space="preserve">
          <source>SplitTerminator::filter_map</source>
          <target state="translated">SplitTerminator::filter_map</target>
        </trans-unit>
        <trans-unit id="8b98d476bddbebd64c560e67756612a4fefebf18" translate="yes" xml:space="preserve">
          <source>SplitTerminator::find</source>
          <target state="translated">SplitTerminator::find</target>
        </trans-unit>
        <trans-unit id="6b97dc3b9f6b43ad45efeb0242d3b8afc43f8044" translate="yes" xml:space="preserve">
          <source>SplitTerminator::find_map</source>
          <target state="translated">SplitTerminator::find_map</target>
        </trans-unit>
        <trans-unit id="530cba5eda60ff65d4879a40f46f434550d6948f" translate="yes" xml:space="preserve">
          <source>SplitTerminator::flat_map</source>
          <target state="translated">SplitTerminator::flat_map</target>
        </trans-unit>
        <trans-unit id="1d8c272e11b71c20193d95f0b616f219a27752f5" translate="yes" xml:space="preserve">
          <source>SplitTerminator::flatten</source>
          <target state="translated">SplitTerminator::flatten</target>
        </trans-unit>
        <trans-unit id="d87cce0d57f0058ef7001d18dc3e9334fee901f0" translate="yes" xml:space="preserve">
          <source>SplitTerminator::fmt</source>
          <target state="translated">SplitTerminator::fmt</target>
        </trans-unit>
        <trans-unit id="78e13320a1711e1bf555ecbbaeea661d1fdc50c7" translate="yes" xml:space="preserve">
          <source>SplitTerminator::fold</source>
          <target state="translated">SplitTerminator::fold</target>
        </trans-unit>
        <trans-unit id="b9e19562d07909957ee546bd23b6fd9925f4b2a8" translate="yes" xml:space="preserve">
          <source>SplitTerminator::for_each</source>
          <target state="translated">SplitTerminator::for_each</target>
        </trans-unit>
        <trans-unit id="1772a3f081c8f1967ba62e89b3f2f9e428d30ee5" translate="yes" xml:space="preserve">
          <source>SplitTerminator::from</source>
          <target state="translated">SplitTerminator::from</target>
        </trans-unit>
        <trans-unit id="08a991b83a9c555c7cd6a12481e4b498f8b3643e" translate="yes" xml:space="preserve">
          <source>SplitTerminator::fuse</source>
          <target state="translated">SplitTerminator::fuse</target>
        </trans-unit>
        <trans-unit id="cf93c09be9dc1007af657826972fe8d8239b070f" translate="yes" xml:space="preserve">
          <source>SplitTerminator::ge</source>
          <target state="translated">SplitTerminator::ge</target>
        </trans-unit>
        <trans-unit id="1712ab115ad9215c113caf1bd39823197c40f3a6" translate="yes" xml:space="preserve">
          <source>SplitTerminator::gt</source>
          <target state="translated">SplitTerminator::gt</target>
        </trans-unit>
        <trans-unit id="bd0fb477aa448f951348a7dc44f482cf90225442" translate="yes" xml:space="preserve">
          <source>SplitTerminator::inspect</source>
          <target state="translated">SplitTerminator::inspect</target>
        </trans-unit>
        <trans-unit id="039ee876a860d4e44961af9b43f5ed5677ec812c" translate="yes" xml:space="preserve">
          <source>SplitTerminator::into</source>
          <target state="translated">SplitTerminator::into</target>
        </trans-unit>
        <trans-unit id="8579b53be7815228dbea950d5f71dfde9e196e9a" translate="yes" xml:space="preserve">
          <source>SplitTerminator::into_iter</source>
          <target state="translated">SplitTerminator::into_iter</target>
        </trans-unit>
        <trans-unit id="203f000c5ae1a99728ddccd24ae9db70743655d5" translate="yes" xml:space="preserve">
          <source>SplitTerminator::is_sorted</source>
          <target state="translated">SplitTerminator::is_sorted</target>
        </trans-unit>
        <trans-unit id="e20b851578e0f47043b1a6851686b0fbd895f6ef" translate="yes" xml:space="preserve">
          <source>SplitTerminator::is_sorted_by</source>
          <target state="translated">SplitTerminator::is_sorted_by</target>
        </trans-unit>
        <trans-unit id="ce6474b719aaf454bc0bb27f76bbab414232c2f3" translate="yes" xml:space="preserve">
          <source>SplitTerminator::is_sorted_by_key</source>
          <target state="translated">SplitTerminator::is_sorted_by_key</target>
        </trans-unit>
        <trans-unit id="cee10910dd45f468415c8b8b43a9d25511e76c53" translate="yes" xml:space="preserve">
          <source>SplitTerminator::last</source>
          <target state="translated">SplitTerminator::last</target>
        </trans-unit>
        <trans-unit id="4b75fee58f8b85e0e14d8a453a9497d445cf2d8b" translate="yes" xml:space="preserve">
          <source>SplitTerminator::le</source>
          <target state="translated">SplitTerminator::le</target>
        </trans-unit>
        <trans-unit id="9f7c7a8ec5b5462dbea737b53f06134c1ce90b43" translate="yes" xml:space="preserve">
          <source>SplitTerminator::lt</source>
          <target state="translated">SplitTerminator::lt</target>
        </trans-unit>
        <trans-unit id="6952f32b6533f9e292bd7523dafda673d622df72" translate="yes" xml:space="preserve">
          <source>SplitTerminator::map</source>
          <target state="translated">SplitTerminator::map</target>
        </trans-unit>
        <trans-unit id="f3f8a67663f0d2e394877c083984f108c1636054" translate="yes" xml:space="preserve">
          <source>SplitTerminator::max</source>
          <target state="translated">SplitTerminator::max</target>
        </trans-unit>
        <trans-unit id="b756586a5ac8f82160f99eb00e4289951709320b" translate="yes" xml:space="preserve">
          <source>SplitTerminator::max_by</source>
          <target state="translated">SplitTerminator::max_by</target>
        </trans-unit>
        <trans-unit id="e314891338ab5f8114988ee456d63c781a36f32a" translate="yes" xml:space="preserve">
          <source>SplitTerminator::max_by_key</source>
          <target state="translated">SplitTerminator::max_by_key</target>
        </trans-unit>
        <trans-unit id="d1ea0dfe222509d99a91cdd5b01c5413c97a93c4" translate="yes" xml:space="preserve">
          <source>SplitTerminator::min</source>
          <target state="translated">SplitTerminator::min</target>
        </trans-unit>
        <trans-unit id="28e9b95e625be69614427abdf9a31450618c029d" translate="yes" xml:space="preserve">
          <source>SplitTerminator::min_by</source>
          <target state="translated">SplitTerminator::min_by</target>
        </trans-unit>
        <trans-unit id="14d70b461ffe0d2318f956a24695e6e911aa84ce" translate="yes" xml:space="preserve">
          <source>SplitTerminator::min_by_key</source>
          <target state="translated">SplitTerminator::min_by_key</target>
        </trans-unit>
        <trans-unit id="92c61c87787baaa7ec731f7b73b7ca5b46584a43" translate="yes" xml:space="preserve">
          <source>SplitTerminator::ne</source>
          <target state="translated">SplitTerminator::ne</target>
        </trans-unit>
        <trans-unit id="4502f2c8550b0b20b56993ec9147cc3ea6dbe307" translate="yes" xml:space="preserve">
          <source>SplitTerminator::next</source>
          <target state="translated">SplitTerminator::next</target>
        </trans-unit>
        <trans-unit id="bf92f3369b02f98f9b3313cd7420efa8bc65f2d8" translate="yes" xml:space="preserve">
          <source>SplitTerminator::next_back</source>
          <target state="translated">SplitTerminator::next_back</target>
        </trans-unit>
        <trans-unit id="01a787c39ebd163c664c0c159c3525dbe266d1c4" translate="yes" xml:space="preserve">
          <source>SplitTerminator::nth</source>
          <target state="translated">SplitTerminator::nth</target>
        </trans-unit>
        <trans-unit id="e7bda2df1f78699cdee4734bcbf15e8321c2d2d4" translate="yes" xml:space="preserve">
          <source>SplitTerminator::nth_back</source>
          <target state="translated">SplitTerminator::nth_back</target>
        </trans-unit>
        <trans-unit id="015cb75acda9e2295a91e85cf5c841cdee9a6f45" translate="yes" xml:space="preserve">
          <source>SplitTerminator::partial_cmp</source>
          <target state="translated">SplitTerminator::partial_cmp</target>
        </trans-unit>
        <trans-unit id="c8be41e5b6ac9cdc6accac78e4ad83e68cce981b" translate="yes" xml:space="preserve">
          <source>SplitTerminator::partition</source>
          <target state="translated">SplitTerminator::partition</target>
        </trans-unit>
        <trans-unit id="6056d7facef6fc0e57ab9cdec662207006d1db7a" translate="yes" xml:space="preserve">
          <source>SplitTerminator::peekable</source>
          <target state="translated">SplitTerminator::peekable</target>
        </trans-unit>
        <trans-unit id="e9572de7e06e1b4529ca8af608e7ec9b280ee09b" translate="yes" xml:space="preserve">
          <source>SplitTerminator::position</source>
          <target state="translated">SplitTerminator::position</target>
        </trans-unit>
        <trans-unit id="3d12529ace96c93730848890d09a24a9666bf905" translate="yes" xml:space="preserve">
          <source>SplitTerminator::product</source>
          <target state="translated">SplitTerminator::product</target>
        </trans-unit>
        <trans-unit id="322ada9a80624f99387f05c64179776efe23645a" translate="yes" xml:space="preserve">
          <source>SplitTerminator::rev</source>
          <target state="translated">SplitTerminator::rev</target>
        </trans-unit>
        <trans-unit id="bf130e5510794740fc5cced11f5c17f9c74cf40b" translate="yes" xml:space="preserve">
          <source>SplitTerminator::rfind</source>
          <target state="translated">SplitTerminator::rfind</target>
        </trans-unit>
        <trans-unit id="9add4d406fcad2bfa44d2fbd79f02986a280605a" translate="yes" xml:space="preserve">
          <source>SplitTerminator::rfold</source>
          <target state="translated">SplitTerminator::rfold</target>
        </trans-unit>
        <trans-unit id="a4dab96e433f6a52b810923bb86ae53205a67fd8" translate="yes" xml:space="preserve">
          <source>SplitTerminator::rposition</source>
          <target state="translated">SplitTerminator::rposition</target>
        </trans-unit>
        <trans-unit id="c0902eb12641d8f9d4f511b34415c04a0329adcc" translate="yes" xml:space="preserve">
          <source>SplitTerminator::scan</source>
          <target state="translated">SplitTerminator::scan</target>
        </trans-unit>
        <trans-unit id="72f0747a555170122a4a464e907135a5aec5c500" translate="yes" xml:space="preserve">
          <source>SplitTerminator::size_hint</source>
          <target state="translated">SplitTerminator::size_hint</target>
        </trans-unit>
        <trans-unit id="731791546b783a3a17fb5fdd849f8662c2a96d28" translate="yes" xml:space="preserve">
          <source>SplitTerminator::skip</source>
          <target state="translated">SplitTerminator::skip</target>
        </trans-unit>
        <trans-unit id="5f59fbab5ff69d7006c4997dfa6543bcb8efc2e2" translate="yes" xml:space="preserve">
          <source>SplitTerminator::skip_while</source>
          <target state="translated">SplitTerminator::skip_while</target>
        </trans-unit>
        <trans-unit id="96028bb246d5ef5f695f6eec323b5143ce025223" translate="yes" xml:space="preserve">
          <source>SplitTerminator::step_by</source>
          <target state="translated">SplitTerminator::step_by</target>
        </trans-unit>
        <trans-unit id="117741a6c4d27bf6129a0acc97d1bdfe427b08ec" translate="yes" xml:space="preserve">
          <source>SplitTerminator::sum</source>
          <target state="translated">SplitTerminator::sum</target>
        </trans-unit>
        <trans-unit id="c515ff634d608e15ad9fbdd1d1531e4c68411b5b" translate="yes" xml:space="preserve">
          <source>SplitTerminator::take</source>
          <target state="translated">SplitTerminator::take</target>
        </trans-unit>
        <trans-unit id="5cf98e7a68d83c210a4263e1916caa86acb9c9c8" translate="yes" xml:space="preserve">
          <source>SplitTerminator::take_while</source>
          <target state="translated">SplitTerminator::take_while</target>
        </trans-unit>
        <trans-unit id="861094e281e54d326096ef75dc340ea9ed5fdafa" translate="yes" xml:space="preserve">
          <source>SplitTerminator::to_owned</source>
          <target state="translated">SplitTerminator::to_owned</target>
        </trans-unit>
        <trans-unit id="57399833a557fae4d16f529364090d91abc62f70" translate="yes" xml:space="preserve">
          <source>SplitTerminator::try_fold</source>
          <target state="translated">SplitTerminator::try_fold</target>
        </trans-unit>
        <trans-unit id="ed69a55a60b0dc8aff4fa3c8279c0d1c84802007" translate="yes" xml:space="preserve">
          <source>SplitTerminator::try_for_each</source>
          <target state="translated">SplitTerminator::try_for_each</target>
        </trans-unit>
        <trans-unit id="de629b920ad1d2612c26196f2b6ee8cdb520cc49" translate="yes" xml:space="preserve">
          <source>SplitTerminator::try_from</source>
          <target state="translated">SplitTerminator::try_from</target>
        </trans-unit>
        <trans-unit id="332e3b292de74dc3cda79ea7c5e8a45ad067fa5a" translate="yes" xml:space="preserve">
          <source>SplitTerminator::try_into</source>
          <target state="translated">SplitTerminator::try_into</target>
        </trans-unit>
        <trans-unit id="bb522064061fc90169707544cc0c3e1dcde8a4cb" translate="yes" xml:space="preserve">
          <source>SplitTerminator::try_rfold</source>
          <target state="translated">SplitTerminator::try_rfold</target>
        </trans-unit>
        <trans-unit id="0532365a2020a6055375409c941063eefb220011" translate="yes" xml:space="preserve">
          <source>SplitTerminator::type_id</source>
          <target state="translated">SplitTerminator::type_id</target>
        </trans-unit>
        <trans-unit id="3a212a0f91a988408af82b1c40bfef645fe0a97f" translate="yes" xml:space="preserve">
          <source>SplitTerminator::unzip</source>
          <target state="translated">SplitTerminator::unzip</target>
        </trans-unit>
        <trans-unit id="49e5fca68c1874ca42cecb54e1fdf88e9b42662d" translate="yes" xml:space="preserve">
          <source>SplitTerminator::zip</source>
          <target state="translated">SplitTerminator::zip</target>
        </trans-unit>
        <trans-unit id="0fc8284dad4b669bb80e2de7590dfdf9da9301e3" translate="yes" xml:space="preserve">
          <source>SplitWhitespace</source>
          <target state="translated">SplitWhitespace</target>
        </trans-unit>
        <trans-unit id="406a973dadb2c3a579bdff527b9e1a1799095b5b" translate="yes" xml:space="preserve">
          <source>SplitWhitespace::all</source>
          <target state="translated">SplitWhitespace::all</target>
        </trans-unit>
        <trans-unit id="7a0b727cca3b5fc299668d2aecd41e1ef9057673" translate="yes" xml:space="preserve">
          <source>SplitWhitespace::any</source>
          <target state="translated">SplitWhitespace::any</target>
        </trans-unit>
        <trans-unit id="6a0851d9dc017081c0d0a5da4f41fb5b0a8b8865" translate="yes" xml:space="preserve">
          <source>SplitWhitespace::borrow</source>
          <target state="translated">SplitWhitespace::borrow</target>
        </trans-unit>
        <trans-unit id="8a4514e1cdce35f144ba9dca479b74538f3757dc" translate="yes" xml:space="preserve">
          <source>SplitWhitespace::borrow_mut</source>
          <target state="translated">SplitWhitespace::borrow_mut</target>
        </trans-unit>
        <trans-unit id="ee46cb40501cffdbd0e2f674fa16559ee2fa1930" translate="yes" xml:space="preserve">
          <source>SplitWhitespace::by_ref</source>
          <target state="translated">SplitWhitespace::by_ref</target>
        </trans-unit>
        <trans-unit id="b6d72529403ad5ddb5d8c934add87b5421032a72" translate="yes" xml:space="preserve">
          <source>SplitWhitespace::chain</source>
          <target state="translated">SplitWhitespace::chain</target>
        </trans-unit>
        <trans-unit id="0289d178411735ba84c18bd3ee64365b0bda88a3" translate="yes" xml:space="preserve">
          <source>SplitWhitespace::clone</source>
          <target state="translated">SplitWhitespace::clone</target>
        </trans-unit>
        <trans-unit id="240abd9bef0babaaeb300852945793b85fa1fd33" translate="yes" xml:space="preserve">
          <source>SplitWhitespace::clone_from</source>
          <target state="translated">SplitWhitespace::clone_from</target>
        </trans-unit>
        <trans-unit id="35631945f6d2febb9592b44160a41371faee3b8a" translate="yes" xml:space="preserve">
          <source>SplitWhitespace::clone_into</source>
          <target state="translated">SplitWhitespace::clone_into</target>
        </trans-unit>
        <trans-unit id="f9b6196f69893bcb5e60c3fe33306248ca9499aa" translate="yes" xml:space="preserve">
          <source>SplitWhitespace::cloned</source>
          <target state="translated">SplitWhitespace::cloned</target>
        </trans-unit>
        <trans-unit id="323002bd4683780cfad8b471cd3d19947ee48c2d" translate="yes" xml:space="preserve">
          <source>SplitWhitespace::cmp</source>
          <target state="translated">SplitWhitespace::cmp</target>
        </trans-unit>
        <trans-unit id="595714e554a75a70008656c6a9dc3bd96c90fc81" translate="yes" xml:space="preserve">
          <source>SplitWhitespace::collect</source>
          <target state="translated">SplitWhitespace::collect</target>
        </trans-unit>
        <trans-unit id="9a3995607d5632583a57a729310f7fe4170a971b" translate="yes" xml:space="preserve">
          <source>SplitWhitespace::copied</source>
          <target state="translated">SplitWhitespace::copied</target>
        </trans-unit>
        <trans-unit id="f1c6ae282e629e11be05b6866f9616c055092dac" translate="yes" xml:space="preserve">
          <source>SplitWhitespace::count</source>
          <target state="translated">SplitWhitespace::count</target>
        </trans-unit>
        <trans-unit id="54b33d3f876a271f503b29b8feb37518f42fa110" translate="yes" xml:space="preserve">
          <source>SplitWhitespace::cycle</source>
          <target state="translated">SplitWhitespace::cycle</target>
        </trans-unit>
        <trans-unit id="45ba20b1f99efddca675516ddacb4df223f4f98d" translate="yes" xml:space="preserve">
          <source>SplitWhitespace::enumerate</source>
          <target state="translated">SplitWhitespace::enumerate</target>
        </trans-unit>
        <trans-unit id="b90f90009a03b0cf33f5415de3933b39ffa1bb40" translate="yes" xml:space="preserve">
          <source>SplitWhitespace::eq</source>
          <target state="translated">SplitWhitespace::eq</target>
        </trans-unit>
        <trans-unit id="76f4d069c2edad7d8fc0f2bb7d250294fe7d70d1" translate="yes" xml:space="preserve">
          <source>SplitWhitespace::filter</source>
          <target state="translated">SplitWhitespace::filter</target>
        </trans-unit>
        <trans-unit id="9bba43096119b0f6b36c36b7e43a713dec40e56c" translate="yes" xml:space="preserve">
          <source>SplitWhitespace::filter_map</source>
          <target state="translated">SplitWhitespace::filter_map</target>
        </trans-unit>
        <trans-unit id="0385a02a5dc5dc77b456857a52cd1d82a9b4c628" translate="yes" xml:space="preserve">
          <source>SplitWhitespace::find</source>
          <target state="translated">SplitWhitespace::find</target>
        </trans-unit>
        <trans-unit id="9330498dfa95a460042fe16cc1f03ba969835d9a" translate="yes" xml:space="preserve">
          <source>SplitWhitespace::find_map</source>
          <target state="translated">SplitWhitespace::find_map</target>
        </trans-unit>
        <trans-unit id="63c52c97eee788e4f280042cb4bc1f4c77fce829" translate="yes" xml:space="preserve">
          <source>SplitWhitespace::flat_map</source>
          <target state="translated">SplitWhitespace::flat_map</target>
        </trans-unit>
        <trans-unit id="ab0e2cd73923eb5e87908de544639bd5698bbd83" translate="yes" xml:space="preserve">
          <source>SplitWhitespace::flatten</source>
          <target state="translated">SplitWhitespace::flatten</target>
        </trans-unit>
        <trans-unit id="b100fef026b3215fb491642adf47be43199f3559" translate="yes" xml:space="preserve">
          <source>SplitWhitespace::fmt</source>
          <target state="translated">SplitWhitespace::fmt</target>
        </trans-unit>
        <trans-unit id="e66f7d5aeb73cec650ea90744eac17f1673baa99" translate="yes" xml:space="preserve">
          <source>SplitWhitespace::fold</source>
          <target state="translated">SplitWhitespace::fold</target>
        </trans-unit>
        <trans-unit id="ba000f6fa66f1bc3fd20cabc60989fc7ef2358fd" translate="yes" xml:space="preserve">
          <source>SplitWhitespace::for_each</source>
          <target state="translated">SplitWhitespace::for_each</target>
        </trans-unit>
        <trans-unit id="635625c246e08c1bb142c0fa310e4dc0ceadebfd" translate="yes" xml:space="preserve">
          <source>SplitWhitespace::from</source>
          <target state="translated">SplitWhitespace::from</target>
        </trans-unit>
        <trans-unit id="487b5a4f18d048193d7d866cfd550b5544de8cf9" translate="yes" xml:space="preserve">
          <source>SplitWhitespace::fuse</source>
          <target state="translated">SplitWhitespace::fuse</target>
        </trans-unit>
        <trans-unit id="9ff63039707787eba40da8131bfa8d191359160c" translate="yes" xml:space="preserve">
          <source>SplitWhitespace::ge</source>
          <target state="translated">SplitWhitespace::ge</target>
        </trans-unit>
        <trans-unit id="e37bde9e519ba307e956606a51f73b91149981b0" translate="yes" xml:space="preserve">
          <source>SplitWhitespace::gt</source>
          <target state="translated">SplitWhitespace::gt</target>
        </trans-unit>
        <trans-unit id="1f50b6c1c905ed40a9c11ce60d5a77da036c0fa0" translate="yes" xml:space="preserve">
          <source>SplitWhitespace::inspect</source>
          <target state="translated">SplitWhitespace::inspect</target>
        </trans-unit>
        <trans-unit id="62d53b3b02cff0d1c3191b77105b80e42661e3b5" translate="yes" xml:space="preserve">
          <source>SplitWhitespace::into</source>
          <target state="translated">SplitWhitespace::into</target>
        </trans-unit>
        <trans-unit id="2f15f925e6003328895f08585bc95ebbe6f9775b" translate="yes" xml:space="preserve">
          <source>SplitWhitespace::into_iter</source>
          <target state="translated">SplitWhitespace::into_iter</target>
        </trans-unit>
        <trans-unit id="14a0316f936a53ad671fe18f1fea2b67901bc0c7" translate="yes" xml:space="preserve">
          <source>SplitWhitespace::is_sorted</source>
          <target state="translated">SplitWhitespace::is_sorted</target>
        </trans-unit>
        <trans-unit id="487ae9ea724ab814e3c43bfbd15993c8a69ea8b4" translate="yes" xml:space="preserve">
          <source>SplitWhitespace::is_sorted_by</source>
          <target state="translated">SplitWhitespace::is_sorted_by</target>
        </trans-unit>
        <trans-unit id="f9106866d37e4cd75620d6676980652f8b368c18" translate="yes" xml:space="preserve">
          <source>SplitWhitespace::is_sorted_by_key</source>
          <target state="translated">SplitWhitespace::is_sorted_by_key</target>
        </trans-unit>
        <trans-unit id="33c593072789773d65b55c76b7ce179a4f2f4e70" translate="yes" xml:space="preserve">
          <source>SplitWhitespace::last</source>
          <target state="translated">SplitWhitespace::last</target>
        </trans-unit>
        <trans-unit id="451fab20c167390d2114e67dd6859d2f117a357a" translate="yes" xml:space="preserve">
          <source>SplitWhitespace::le</source>
          <target state="translated">SplitWhitespace::le</target>
        </trans-unit>
        <trans-unit id="d153652edf1463f43aec8d4ef31342c8ad1b5ea7" translate="yes" xml:space="preserve">
          <source>SplitWhitespace::lt</source>
          <target state="translated">SplitWhitespace::lt</target>
        </trans-unit>
        <trans-unit id="675eabeff3950ea901a151d8fb925e68cef6fc51" translate="yes" xml:space="preserve">
          <source>SplitWhitespace::map</source>
          <target state="translated">SplitWhitespace::map</target>
        </trans-unit>
        <trans-unit id="66c31c53e8867c80437ae18c96ce2d1407607bc0" translate="yes" xml:space="preserve">
          <source>SplitWhitespace::max</source>
          <target state="translated">SplitWhitespace::max</target>
        </trans-unit>
        <trans-unit id="bce8bb8c08eeffaa7ec8e7eceaba18ddf3d9e868" translate="yes" xml:space="preserve">
          <source>SplitWhitespace::max_by</source>
          <target state="translated">SplitWhitespace::max_by</target>
        </trans-unit>
        <trans-unit id="4e52552b3c91d3db3e36a590d5d2a4fca9056143" translate="yes" xml:space="preserve">
          <source>SplitWhitespace::max_by_key</source>
          <target state="translated">SplitWhitespace::max_by_key</target>
        </trans-unit>
        <trans-unit id="e47e509a3ac4aadd3dce05f8b3f5251240604d1c" translate="yes" xml:space="preserve">
          <source>SplitWhitespace::min</source>
          <target state="translated">SplitWhitespace::min</target>
        </trans-unit>
        <trans-unit id="f2a14864baeea700df9fc79908cd2f16fa9cd80b" translate="yes" xml:space="preserve">
          <source>SplitWhitespace::min_by</source>
          <target state="translated">SplitWhitespace::min_by</target>
        </trans-unit>
        <trans-unit id="8adfe6817f5176ca1a326b5f9a5ba5ff23a2bbbd" translate="yes" xml:space="preserve">
          <source>SplitWhitespace::min_by_key</source>
          <target state="translated">SplitWhitespace::min_by_key</target>
        </trans-unit>
        <trans-unit id="5df29694e66bf30bf71735307cfd64a2dc8ec736" translate="yes" xml:space="preserve">
          <source>SplitWhitespace::ne</source>
          <target state="translated">SplitWhitespace::ne</target>
        </trans-unit>
        <trans-unit id="41cef2e1132987490f0a42e383bdcf34d7373d52" translate="yes" xml:space="preserve">
          <source>SplitWhitespace::next</source>
          <target state="translated">SplitWhitespace::next</target>
        </trans-unit>
        <trans-unit id="2708b96f1dc67757e6f16324303b23b71d8b82c8" translate="yes" xml:space="preserve">
          <source>SplitWhitespace::next_back</source>
          <target state="translated">SplitWhitespace::next_back</target>
        </trans-unit>
        <trans-unit id="e56877b2c9cf9a0f13baa05436fef700e898a942" translate="yes" xml:space="preserve">
          <source>SplitWhitespace::nth</source>
          <target state="translated">SplitWhitespace::nth</target>
        </trans-unit>
        <trans-unit id="aa960d600120b8cc1c5dd6ffd4a75fc0b9d2eacb" translate="yes" xml:space="preserve">
          <source>SplitWhitespace::nth_back</source>
          <target state="translated">SplitWhitespace::nth_back</target>
        </trans-unit>
        <trans-unit id="aeed59dda3a0b73f94f0646f9e6328d77ffbed57" translate="yes" xml:space="preserve">
          <source>SplitWhitespace::partial_cmp</source>
          <target state="translated">SplitWhitespace::partial_cmp</target>
        </trans-unit>
        <trans-unit id="ebd39b9625a8c3abb274e6856b4cfb4db1cff2d6" translate="yes" xml:space="preserve">
          <source>SplitWhitespace::partition</source>
          <target state="translated">SplitWhitespace::partition</target>
        </trans-unit>
        <trans-unit id="6eda338ad857733db74a0ae21186074da1fbc0a1" translate="yes" xml:space="preserve">
          <source>SplitWhitespace::peekable</source>
          <target state="translated">SplitWhitespace::peekable</target>
        </trans-unit>
        <trans-unit id="57425bc1ad48c1b3222e0b3269ebe32ee6992c9b" translate="yes" xml:space="preserve">
          <source>SplitWhitespace::position</source>
          <target state="translated">SplitWhitespace::position</target>
        </trans-unit>
        <trans-unit id="094679ab590585381be58c7f2b817aa748425794" translate="yes" xml:space="preserve">
          <source>SplitWhitespace::product</source>
          <target state="translated">SplitWhitespace::product</target>
        </trans-unit>
        <trans-unit id="ebbfe9f79dad079b2af4491b50487bcf669e8264" translate="yes" xml:space="preserve">
          <source>SplitWhitespace::rev</source>
          <target state="translated">SplitWhitespace::rev</target>
        </trans-unit>
        <trans-unit id="e31627f0082a19b7d76ea7a83e6dbeb7d91004db" translate="yes" xml:space="preserve">
          <source>SplitWhitespace::rfind</source>
          <target state="translated">SplitWhitespace::rfind</target>
        </trans-unit>
        <trans-unit id="9cffbcef5cd3f992e1122bbb092e46ab8eb492fa" translate="yes" xml:space="preserve">
          <source>SplitWhitespace::rfold</source>
          <target state="translated">SplitWhitespace::rfold</target>
        </trans-unit>
        <trans-unit id="a7f96d29045cfcf4cb0c8094b728175309f7453e" translate="yes" xml:space="preserve">
          <source>SplitWhitespace::rposition</source>
          <target state="translated">SplitWhitespace::rposition</target>
        </trans-unit>
        <trans-unit id="5c85b44e71cd50af94e975ff2bff2870327dd3c9" translate="yes" xml:space="preserve">
          <source>SplitWhitespace::scan</source>
          <target state="translated">SplitWhitespace::scan</target>
        </trans-unit>
        <trans-unit id="cadc8bb69f118956b510f4e8e836b63fd621362b" translate="yes" xml:space="preserve">
          <source>SplitWhitespace::size_hint</source>
          <target state="translated">SplitWhitespace::size_hint</target>
        </trans-unit>
        <trans-unit id="300b8bcfd2d1987ba18a29996e27e721d512305b" translate="yes" xml:space="preserve">
          <source>SplitWhitespace::skip</source>
          <target state="translated">SplitWhitespace::skip</target>
        </trans-unit>
        <trans-unit id="7e1305ee72b9febf33d0d8c2decc5ab0fbe9e951" translate="yes" xml:space="preserve">
          <source>SplitWhitespace::skip_while</source>
          <target state="translated">SplitWhitespace::skip_while</target>
        </trans-unit>
        <trans-unit id="9aa8a20f7a2356ace073721a65974dc336d8135d" translate="yes" xml:space="preserve">
          <source>SplitWhitespace::step_by</source>
          <target state="translated">SplitWhitespace::step_by</target>
        </trans-unit>
        <trans-unit id="6dc510b03c33bed5f0f4977ce2d47de07acc52da" translate="yes" xml:space="preserve">
          <source>SplitWhitespace::sum</source>
          <target state="translated">SplitWhitespace::sum</target>
        </trans-unit>
        <trans-unit id="095f60e427ac93b49977e6654880650ea257db18" translate="yes" xml:space="preserve">
          <source>SplitWhitespace::take</source>
          <target state="translated">SplitWhitespace::take</target>
        </trans-unit>
        <trans-unit id="06dd719b634ff0691d1021437da23bdc99bad3b6" translate="yes" xml:space="preserve">
          <source>SplitWhitespace::take_while</source>
          <target state="translated">SplitWhitespace::take_while</target>
        </trans-unit>
        <trans-unit id="da4addd7630a99b2491ae6d4d4423df7f10e4e9e" translate="yes" xml:space="preserve">
          <source>SplitWhitespace::to_owned</source>
          <target state="translated">SplitWhitespace::to_owned</target>
        </trans-unit>
        <trans-unit id="2e43cde1a460af1040e0b6d5faa4321592ccd4de" translate="yes" xml:space="preserve">
          <source>SplitWhitespace::try_fold</source>
          <target state="translated">SplitWhitespace::try_fold</target>
        </trans-unit>
        <trans-unit id="009ca6eb7580ef54ace2cb4cfaeceab2d8a63316" translate="yes" xml:space="preserve">
          <source>SplitWhitespace::try_for_each</source>
          <target state="translated">SplitWhitespace::try_for_each</target>
        </trans-unit>
        <trans-unit id="cd996b956303995b51757484b64db9446a7dadf0" translate="yes" xml:space="preserve">
          <source>SplitWhitespace::try_from</source>
          <target state="translated">SplitWhitespace::try_from</target>
        </trans-unit>
        <trans-unit id="85b2f25212c0ee56a9d9c5727c30ba873187054d" translate="yes" xml:space="preserve">
          <source>SplitWhitespace::try_into</source>
          <target state="translated">SplitWhitespace::try_into</target>
        </trans-unit>
        <trans-unit id="e9717beb311bc14c1ef6a0a963781819580b403b" translate="yes" xml:space="preserve">
          <source>SplitWhitespace::try_rfold</source>
          <target state="translated">SplitWhitespace::try_rfold</target>
        </trans-unit>
        <trans-unit id="389e5c8d99613d41e8e3b8d5d3d4f8db054f78dc" translate="yes" xml:space="preserve">
          <source>SplitWhitespace::type_id</source>
          <target state="translated">SplitWhitespace::type_id</target>
        </trans-unit>
        <trans-unit id="422311385c7427b2cc3043e2549c86f36752f82f" translate="yes" xml:space="preserve">
          <source>SplitWhitespace::unzip</source>
          <target state="translated">SplitWhitespace::unzip</target>
        </trans-unit>
        <trans-unit id="aa161f566be114d3a55bc07ea9101c1de9360d26" translate="yes" xml:space="preserve">
          <source>SplitWhitespace::zip</source>
          <target state="translated">SplitWhitespace::zip</target>
        </trans-unit>
        <trans-unit id="2f5b46ded93de12d8728fc70b5148d048963662b" translate="yes" xml:space="preserve">
          <source>Splits a &lt;code&gt;Ref&lt;/code&gt; into multiple &lt;code&gt;Ref&lt;/code&gt;s for different components of the borrowed data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec24c3773d674bdd1ea4731841438a70a983e119" translate="yes" xml:space="preserve">
          <source>Splits a &lt;code&gt;RefMut&lt;/code&gt; into multiple &lt;code&gt;RefMut&lt;/code&gt;s for different components of the borrowed data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4c5da0d019680f014971939a009ecc45acf1d61" translate="yes" xml:space="preserve">
          <source>Splits a string slice by ASCII whitespace.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f79edb3b644dfd4b6af2f30c1d07f37b4b436de0" translate="yes" xml:space="preserve">
          <source>Splits a string slice by whitespace.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f66875bbcc29c8841c29f8682a18d2e0489fd321" translate="yes" xml:space="preserve">
          <source>Splits the &lt;code&gt;VecDeque&lt;/code&gt; into two at the given index.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1884b7a3f01fde724ee46aba03b14388758c88a5" translate="yes" xml:space="preserve">
          <source>Splits the collection into two at the given index.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a251d083f4250c34d44cc81a7768acb5ccfc434" translate="yes" xml:space="preserve">
          <source>Splits the collection into two at the given key. Returns everything after the given key, including the key.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e68b5852617983921a5c3f821a456727ad15f43" translate="yes" xml:space="preserve">
          <source>Splits the list into two at the given index. Returns everything after the given index, including the index.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88dffa03b216f91ee9a532d86bf3073ce08438e4" translate="yes" xml:space="preserve">
          <source>Splits the string into two at the given index.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="564f7518eda1c3ac4e6e92fabc56690884292a5a" translate="yes" xml:space="preserve">
          <source>Splitting Code into a Library Crate</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47912ae0bd2db7b471d68634375e8957601eb284" translate="yes" xml:space="preserve">
          <source>Splitting a list into evens and odds, reusing the original list:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32d4ee9df69be00683523929ef37cf26f59862e3" translate="yes" xml:space="preserve">
          <source>Splitting an array into evens and odds, reusing the original allocation:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c525284fda9006eb5ceb3235e88061d3dbeb5f8" translate="yes" xml:space="preserve">
          <source>Splitting the computation in your program into multiple threads can improve performance because the program does multiple tasks at the same time, but it also adds complexity. Because threads can run simultaneously, there&amp;rsquo;s no inherent guarantee about the order in which parts of your code on different threads will run. This can lead to problems, such as:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3df01b1d09cb5de541f18c23622a39454071cc11" translate="yes" xml:space="preserve">
          <source>Square brackets</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="785ca9526809c90e3417966be7d5844fd2a0c5c8" translate="yes" xml:space="preserve">
          <source>Stability</source>
          <target state="translated">Stability</target>
        </trans-unit>
        <trans-unit id="5cc3bdd9c363ca3a9fd809e60ca06d32bc3187c4" translate="yes" xml:space="preserve">
          <source>Stability Without Stagnation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d96e5b2dd07c1733b2b013bd82922c22baade37d" translate="yes" xml:space="preserve">
          <source>Stable</source>
          <target state="translated">Stable</target>
        </trans-unit>
        <trans-unit id="ffc22f891506ef585785c9117cd7ddefa2bea494" translate="yes" xml:space="preserve">
          <source>Stack size</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="239e02e3fc11286ecd7df801b799778a0b671da6" translate="yes" xml:space="preserve">
          <source>Stack-Only Data: Copy</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18c193a021a5bc64ccbfd0c59ab71207fcdd2fec" translate="yes" xml:space="preserve">
          <source>Standalone functions that just sit within a module not attached to anything else are common, but most functions will end up being inside &lt;a href=&quot;keyword.impl&quot;&gt;&lt;code&gt;impl&lt;/code&gt;&lt;/a&gt; blocks, either on another type itself, or as a trait impl for that type.</source>
          <target state="new"/>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
