<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="rust">
    <body>
      <group id="rust">
        <trans-unit id="1ca27f9b6840a29f38a33b35b6a75dbc6f57703f" translate="yes" xml:space="preserve">
          <source>Writes some data into this &lt;code&gt;Hasher&lt;/code&gt;. &lt;a href=&quot;hash/trait.hasher#tymethod.write&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b8a4f8c89b109d74c610b85abf9468d80196ad2" translate="yes" xml:space="preserve">
          <source>Writes some data into this &lt;code&gt;Hasher&lt;/code&gt;. &lt;a href=&quot;trait.hasher#tymethod.write&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a2b61198cabc344eec293cea3eb21151c358cad" translate="yes" xml:space="preserve">
          <source>Writes some data to the underlying buffer contained within this formatter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b05105a6d198b6efd15010fe5b3a83555f844ec8" translate="yes" xml:space="preserve">
          <source>Writes some formatted information into this instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73e796ac178d17656628057ad4de2c3715ecb31f" translate="yes" xml:space="preserve">
          <source>Writes to &lt;code&gt;Copy&lt;/code&gt; union fields do not require reads for running destructors, so these writes don't have to be placed in &lt;code&gt;unsafe&lt;/code&gt; blocks</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a04ade11270a59b7a8d9a38b3f59d450099f209" translate="yes" xml:space="preserve">
          <source>Writing Automated Tests</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d9de7655ad92afdb381750f5cb6b0b9d4630db5" translate="yes" xml:space="preserve">
          <source>Writing Code to Pass the Test</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7ec99d9ff26178393f163143686d9bc7fb6a3d1" translate="yes" xml:space="preserve">
          <source>Writing Error Messages to Standard Error Instead of Standard Output</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4a721e4aa8c7261bfa68a1535b4fe4e84e2f28e" translate="yes" xml:space="preserve">
          <source>Writing a Failing Test</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83ca9b1b9c2e5fb239421cfb23f5c54c22d603eb" translate="yes" xml:space="preserve">
          <source>Writing a Failing Test for the Case-Insensitive &lt;code id=&quot;writing-a-failing-test-for-the-case-insensitive-search-function&quot;&gt;search&lt;/code&gt; Function</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="993bd3ebaf1e78a4791f69f6f8988c0b5b0d3ae3" translate="yes" xml:space="preserve">
          <source>Writing a Response</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97d3ede6e5b435ad6b9a77ec03a83113afdfb3a5" translate="yes" xml:space="preserve">
          <source>Writing a program that prints &lt;code&gt;Hello, world!&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="785a0c70580d26564b61ec7b2da0b61477b68b43" translate="yes" xml:space="preserve">
          <source>Writing an array&amp;rsquo;s type this way looks similar to an alternative syntax for initializing an array: if you want to create an array that contains the same value for each element, you can specify the initial value, followed by a semicolon, and then the length of the array in square brackets, as shown here:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f560bd46db71699beed1dbcf4f543ef55a25efce" translate="yes" xml:space="preserve">
          <source>Writing and Running a Rust Program</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c156da0c5e2570a035c5e8bd4f021c50ffb20da" translate="yes" xml:space="preserve">
          <source>Writing both kinds of tests is important to ensure that the pieces of your library are doing what you expect them to, separately and together.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="796c30002159ff15a3a7e4eeec8cf17afe766c5f" translate="yes" xml:space="preserve">
          <source>Writing tests (&lt;a href=&quot;ch11-00-testing&quot;&gt;Chapter 11&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="450f15de86c3b61b38fb7579e1f10bd319432ea8" translate="yes" xml:space="preserve">
          <source>Writing tests so they return a &lt;code&gt;Result&amp;lt;T, E&amp;gt;&lt;/code&gt; enables you to use the question mark operator in the body of tests, which can be a convenient way to write tests that should fail if any operation within them returns an &lt;code&gt;Err&lt;/code&gt; variant.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07bc23942d416a7fef04bbcf5fc194f37c766951" translate="yes" xml:space="preserve">
          <source>Writing this lengthy type in function signatures and as type annotations all over the code can be tiresome and error prone. Imagine having a project full of code like that in Listing 19-24.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07e47a0416a28679b7085ffdf5344062b5fcdd36" translate="yes" xml:space="preserve">
          <source>Yanking a version prevents new projects from starting to depend on that version while allowing all existing projects that depend on it to continue to download and depend on that version. Essentially, a yank means that all projects with a &lt;em&gt;Cargo.lock&lt;/em&gt; will not break, and any future &lt;em&gt;Cargo.lock&lt;/em&gt; files generated will not use the yanked version.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8e5799899abe435ee29b5e571cca4a4951b4912" translate="yes" xml:space="preserve">
          <source>Yields a &lt;a href=&quot;../primitive.str&quot;&gt;&lt;code&gt;&amp;amp;str&lt;/code&gt;&lt;/a&gt; slice if the &lt;code&gt;CStr&lt;/code&gt; contains valid UTF-8.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c7c3595b258ab56decf488e64eb0d24960bf485" translate="yes" xml:space="preserve">
          <source>Yields a &lt;a href=&quot;../primitive.str&quot;&gt;&lt;code&gt;&amp;amp;str&lt;/code&gt;&lt;/a&gt; slice if the &lt;code&gt;OsStr&lt;/code&gt; is valid Unicode.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="195279f44b198c67c27101e6d1db95ba38fd584e" translate="yes" xml:space="preserve">
          <source>Yields a &lt;a href=&quot;../primitive.str&quot;&gt;&lt;code&gt;&amp;amp;str&lt;/code&gt;&lt;/a&gt; slice if the &lt;code&gt;Path&lt;/code&gt; is valid unicode.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="413679a903a004b3c5c40da67ab627b0db5926d2" translate="yes" xml:space="preserve">
          <source>Yields a &lt;code&gt;Result&amp;lt;bool, ParseBoolError&amp;gt;&lt;/code&gt;, because &lt;code&gt;s&lt;/code&gt; may or may not actually be parseable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9230c9fc9c21a74b44c14778be86dfe99887de8" translate="yes" xml:space="preserve">
          <source>Yields the underlying &lt;a href=&quot;../ffi/struct.osstr&quot;&gt;&lt;code&gt;OsStr&lt;/code&gt;&lt;/a&gt; slice.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c744c88f234909706712417b746da8f001876e3" translate="yes" xml:space="preserve">
          <source>Yields the underlying byte vector of this &lt;a href=&quot;../../../ffi/struct.osstring&quot;&gt;&lt;code&gt;OsString&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="827f632b1eb13c813d90204287d7a305ab25fbc3" translate="yes" xml:space="preserve">
          <source>Yields the underlying byte vector of this [&lt;code&gt;OsString&lt;/code&gt;]. &lt;a href=&quot;../os/unix/ffi/trait.osstringext#tymethod.into_vec&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65ae03a65393d6ce8a756fcd3bce6d5e0e587d92" translate="yes" xml:space="preserve">
          <source>You also don&amp;rsquo;t have to worry about problems resulting from accidentally cleaning up values still in use: the ownership system that makes sure references are always valid also ensures that &lt;code&gt;drop&lt;/code&gt; gets called only once when the value is no longer being used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec9b139e5d307ab87a8084c13822b6acd8da7805" translate="yes" xml:space="preserve">
          <source>You are &lt;em&gt;absolutely&lt;/em&gt; certain you &lt;em&gt;really&lt;/em&gt;, &lt;em&gt;truly&lt;/em&gt;, want a doubly linked list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7df51c21931f3ba8153011ff31ac3df483e2b6f2" translate="yes" xml:space="preserve">
          <source>You are trying to use an identifier that is either undefined or not a struct. Erroneous code example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72a4cd7a33eb16fdb9f37ef196e2dcb7606d5372" translate="yes" xml:space="preserve">
          <source>You attempted to use multiple types as bounds for a closure or trait object. Rust does not currently support this. A simple example that causes this error:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f01714756be32bd3190176ff6c1f442b832a1d6" translate="yes" xml:space="preserve">
          <source>You can &lt;a href=&quot;struct.vec#method.push&quot;&gt;&lt;code&gt;push&lt;/code&gt;&lt;/a&gt; values onto the end of a vector (which will grow the vector as needed):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d2a0e1493249f355c1cfdfc3bac39d75c54ff72" translate="yes" xml:space="preserve">
          <source>You can also add a custom message to be printed with the failure message as optional arguments to the &lt;code&gt;assert!&lt;/code&gt;, &lt;code&gt;assert_eq!&lt;/code&gt;, and &lt;code&gt;assert_ne!&lt;/code&gt; macros. Any arguments specified after the one required argument to &lt;code&gt;assert!&lt;/code&gt; or the two required arguments to &lt;code&gt;assert_eq!&lt;/code&gt; and &lt;code&gt;assert_ne!&lt;/code&gt; are passed along to the &lt;code&gt;format!&lt;/code&gt; macro (discussed in Chapter 8 in the &lt;a href=&quot;ch08-02-strings#concatenation-with-the--operator-or-the-format-macro&quot;&gt;&amp;ldquo;Concatenation with the &lt;code&gt;+&lt;/code&gt; Operator or the &lt;code&gt;format!&lt;/code&gt; Macro&amp;rdquo;&lt;/a&gt; section), so you can pass a format string that contains &lt;code&gt;{}&lt;/code&gt; placeholders and values to go in those placeholders. Custom messages are useful to document what an assertion means; when a test fails, you&amp;rsquo;ll have a better idea of what the problem is with the code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6933a535082bef416b84d186746e29a92d0ca26" translate="yes" xml:space="preserve">
          <source>You can also combine these implementations to let the &lt;code&gt;==&lt;/code&gt; operator work with two different types:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99c9da3c8943fcee498c0ed8b484f227e63545a2" translate="yes" xml:space="preserve">
          <source>You can also define structs that don&amp;rsquo;t have any fields! These are called &lt;em&gt;unit-like structs&lt;/em&gt; because they behave similarly to &lt;code&gt;()&lt;/code&gt;, the unit type. Unit-like structs can be useful in situations in which you need to implement a trait on some type but don&amp;rsquo;t have any data that you want to store in the type itself. We&amp;rsquo;ll discuss traits in Chapter 10.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85102a822bf46f84c9e28f5552de9b8522a4dbde" translate="yes" xml:space="preserve">
          <source>You can also define structs that look similar to tuples, called &lt;em&gt;tuple structs&lt;/em&gt;. Tuple structs have the added meaning the struct name provides but don&amp;rsquo;t have names associated with their fields; rather, they just have the types of the fields. Tuple structs are useful when you want to give the whole tuple a name and make the tuple be a different type from other tuples, and naming each field as in a regular struct would be verbose or redundant.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="478834b4ebadfb970a4e8408c36d21f8f75d5297" translate="yes" xml:space="preserve">
          <source>You can also define your own wrapper around &lt;code&gt;System&lt;/code&gt; if you'd like, such as keeping track of the number of all bytes allocated:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2ec90a0a184fc0a34f0ffbecbdb3577a9642216" translate="yes" xml:space="preserve">
          <source>You can also drop both values to take a slice of the entire string. So these are equal:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07fd7e0ceaeb6effa3bef1f17d2c79141e988f86" translate="yes" xml:space="preserve">
          <source>You can also have this error while using a cell type:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2abcc436137e02d2d460f9bb29cc2de726a9488d" translate="yes" xml:space="preserve">
          <source>You can also implement &lt;code&gt;Copy&lt;/code&gt; and &lt;code&gt;Clone&lt;/code&gt; manually:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e0eb8e7e0853f72a4740501ba25eded7eda4cc9" translate="yes" xml:space="preserve">
          <source>You can also rewrite this in terms of &lt;a href=&quot;#method.flat_map&quot;&gt;&lt;code&gt;flat_map()&lt;/code&gt;&lt;/a&gt;, which is preferable in this case since it conveys intent more clearly:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15da995ef7945b8770639a97784385a172b200d0" translate="yes" xml:space="preserve">
          <source>You can also use &lt;code&gt;dbg!()&lt;/code&gt; without a value to just print the file and line whenever it's reached.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9efcd998a1aef5d563a086721600c461fc2c254c" translate="yes" xml:space="preserve">
          <source>You can also use the &lt;code&gt;cargo fix&lt;/code&gt; command to transition your code between different Rust editions. Editions are covered in Appendix E.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e76ec17ba63844ca8928afd80bf3131846fedf2" translate="yes" xml:space="preserve">
          <source>You can also use the &lt;em&gt;or&lt;/em&gt; operator &lt;code&gt;|&lt;/code&gt; in a match guard to specify multiple patterns; the match guard condition will apply to all the patterns. Listing 18-28 shows the precedence of combining a match guard with a pattern that uses &lt;code&gt;|&lt;/code&gt;. The important part of this example is that the &lt;code&gt;if y&lt;/code&gt; match guard applies to &lt;code&gt;4&lt;/code&gt;, &lt;code&gt;5&lt;/code&gt;, &lt;em&gt;and&lt;/em&gt;&lt;code&gt;6&lt;/code&gt;, even though it might look like &lt;code&gt;if y&lt;/code&gt; only applies to &lt;code&gt;6&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76ecf9c07343c46c1d60f065ded4b4f2eb0ea645" translate="yes" xml:space="preserve">
          <source>You can also work with partially initialized arrays, which could be found in low-level datastructures.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6c603fa73cf57e512f35e947ee6f15111e430a7" translate="yes" xml:space="preserve">
          <source>You can append a &lt;a href=&quot;../primitive.char&quot;&gt;&lt;code&gt;char&lt;/code&gt;&lt;/a&gt; to a &lt;code&gt;String&lt;/code&gt; with the &lt;a href=&quot;#method.push&quot;&gt;&lt;code&gt;push&lt;/code&gt;&lt;/a&gt; method, and append a &lt;a href=&quot;../primitive.str&quot;&gt;&lt;code&gt;&amp;amp;str&lt;/code&gt;&lt;/a&gt; with the &lt;a href=&quot;#method.push_str&quot;&gt;&lt;code&gt;push_str&lt;/code&gt;&lt;/a&gt; method:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d11f2c97c83c2645f12b9ebc6ac85c5458f4e32" translate="yes" xml:space="preserve">
          <source>You can build a free-standing crate by adding &lt;code&gt;#![no_std]&lt;/code&gt; to the crate attributes:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b809a385993bf02c8d1206070cc3301b18c3b78c" translate="yes" xml:space="preserve">
          <source>You can contribute to this book by opening an issue or sending a pull request to &lt;a href=&quot;https://github.com/rust-lang-nursery/reference/&quot;&gt;the Rust Reference repository&lt;/a&gt;. If this book does not answer your question, and you think its answer is in scope of it, please do not hesitate to file an issue or ask about it in the &lt;code&gt;#docs&lt;/code&gt; channels on &lt;a href=&quot;https://discord.gg/rust-lang&quot;&gt;Discord&lt;/a&gt;. Knowing what people use this book for the most helps direct our attention to making those sections the best that they can be.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45652675628aa0520caadf107ccf92529cef48c4" translate="yes" xml:space="preserve">
          <source>You can create &lt;code&gt;Path&lt;/code&gt;s from &lt;code&gt;String&lt;/code&gt;s, or even other &lt;code&gt;Path&lt;/code&gt;s:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fab7261ff093b68aeb80217fb17838c264ba793f" translate="yes" xml:space="preserve">
          <source>You can create a &lt;code&gt;String&lt;/code&gt; from a literal string with &lt;a href=&quot;#method.from&quot;&gt;&lt;code&gt;String::from&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e907952e713a332ea657810a208121675e84c04" translate="yes" xml:space="preserve">
          <source>You can create a new &lt;a href=&quot;struct.string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; from an existing one by concatenating with &lt;code&gt;+&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2cc5912ade8e0031b95579911c3cbaa63e5424d5" translate="yes" xml:space="preserve">
          <source>You can create an empty hash map with &lt;code&gt;new&lt;/code&gt; and add elements with &lt;code&gt;insert&lt;/code&gt;. In Listing 8-20, we&amp;rsquo;re keeping track of the scores of two teams whose names are Blue and Yellow. The Blue team starts with 10 points, and the Yellow team starts with 50.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d3270ed21cd27a14044769666f4247cb1a76136" translate="yes" xml:space="preserve">
          <source>You can customize the error message by passing a string as the second parameter:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f50b50da715d70f8535907a48cb0e96ef9c58565" translate="yes" xml:space="preserve">
          <source>You can derive &lt;code&gt;Copy&lt;/code&gt; on any type whose parts all implement &lt;code&gt;Copy&lt;/code&gt;. You can only apply the &lt;code&gt;Copy&lt;/code&gt; trait to types that also implement &lt;code&gt;Clone&lt;/code&gt;, because a type that implements &lt;code&gt;Copy&lt;/code&gt; has a trivial implementation of &lt;code&gt;Clone&lt;/code&gt; that performs the same task as &lt;code&gt;Copy&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83e158e3d2e5e26c76384dd26a124614ad844a55" translate="yes" xml:space="preserve">
          <source>You can derive &lt;code&gt;Hash&lt;/code&gt; with &lt;code&gt;#[derive(Hash)]&lt;/code&gt; if all fields implement &lt;code&gt;Hash&lt;/code&gt;. The resulting hash will be the combination of the values from calling &lt;a href=&quot;#tymethod.hash&quot;&gt;&lt;code&gt;hash&lt;/code&gt;&lt;/a&gt; on each field.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34f5ee2dba48ae74f01f68800a38cc65446beed5" translate="yes" xml:space="preserve">
          <source>You can disambiguate a single-element tuple from a value in parentheses with a comma:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="835ac5995b1f731428fb2c278267c23aa6ba7d51" translate="yes" xml:space="preserve">
          <source>You can explicitly create a &lt;a href=&quot;struct.vec&quot;&gt;&lt;code&gt;Vec&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/a&gt; with &lt;a href=&quot;struct.vec#method.new&quot;&gt;&lt;code&gt;new&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb6b12bc4089e8eb8b5751f247a7b9589c2fe1f2" translate="yes" xml:space="preserve">
          <source>You can find more information about borrowing in the rust-book: http://doc.rust-lang.org/book/ch04-02-references-and-borrowing.html</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb2e5c62e0b55ad5028e27c25a79c338ab8a55a6" translate="yes" xml:space="preserve">
          <source>You can fix this error by finishing using the borrow before the next use of the value:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0aedd4a29ecef931e15839bd3008e9ac572d334a" translate="yes" xml:space="preserve">
          <source>You can have multiple conditions by combining &lt;code&gt;if&lt;/code&gt; and &lt;code&gt;else&lt;/code&gt; in an &lt;code&gt;else if&lt;/code&gt; expression. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3c9603849c73d33443ee6a87ea7d3f7ea9f8eb7" translate="yes" xml:space="preserve">
          <source>You can implement &lt;code&gt;derive&lt;/code&gt; for your own traits through &lt;a href=&quot;../procedural-macros#derive-macros&quot;&gt;procedural macros&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87090e61475fabac741ebc244ff59fd41b674b51" translate="yes" xml:space="preserve">
          <source>You can instead use a single name for the argument:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4e59a25eef48510bd25baeb9f2b6823ad86530a" translate="yes" xml:space="preserve">
          <source>You can look at these with the &lt;a href=&quot;#method.as_ptr&quot;&gt;&lt;code&gt;as_ptr&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#method.len&quot;&gt;&lt;code&gt;len&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#method.capacity&quot;&gt;&lt;code&gt;capacity&lt;/code&gt;&lt;/a&gt; methods:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f474815df87597604ccec4f0ca97d0a759dc6f35" translate="yes" xml:space="preserve">
          <source>You can move elements out of an array with a slice pattern. If you want one element, see &lt;a href=&quot;mem/fn.replace&quot;&gt;&lt;code&gt;mem::replace&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76c186f63e5510473d9dc9b0dc2a5406c5f9eb96" translate="yes" xml:space="preserve">
          <source>You can only define an inherent implementation for a type in the same crate where the type was defined. For example, an &lt;code&gt;impl&lt;/code&gt; block as below is not allowed since &lt;code&gt;Vec&lt;/code&gt; is defined in the standard library:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c813be92d22e2d7b242da8356e7fcb13fc363191" translate="yes" xml:space="preserve">
          <source>You can only implement &lt;code&gt;Copy&lt;/code&gt; for a struct or enum. Both of the following examples will fail, because neither &lt;code&gt;[u8; 256]&lt;/code&gt; nor &lt;code&gt;&amp;amp;'static mut Bar&lt;/code&gt; (mutable reference to &lt;code&gt;Bar&lt;/code&gt;) is a struct or enum:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21f8b607f72c57127cd998f4d58d658ea39f8468" translate="yes" xml:space="preserve">
          <source>You can only make &lt;em&gt;object-safe&lt;/em&gt; traits into trait objects. Some complex rules govern all the properties that make a trait object safe, but in practice, only two rules are relevant. A trait is object safe if all the methods defined in the trait have the following properties:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d710b72f224f5678a735cd21bec78fffa991073c" translate="yes" xml:space="preserve">
          <source>You can override any default setting by adding a different value for it in &lt;em&gt;Cargo.toml&lt;/em&gt;. For example, if we want to use optimization level 1 in the development profile, we can add these two lines to our project&amp;rsquo;s &lt;em&gt;Cargo.toml&lt;/em&gt; file:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a0d0b5c07f4a3701b975bfae52379a7cc4a0a95" translate="yes" xml:space="preserve">
          <source>You can read more about cell types in the API documentation:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49f14d85beebdc2ce97fddebb0687041307b1cc2" translate="yes" xml:space="preserve">
          <source>You can read more about trait objects in the &lt;a href=&quot;reference/types#trait-objects&quot;&gt;Trait Objects&lt;/a&gt; section of the Reference.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0d319729d74877014e187c2ba127457ae956cdc" translate="yes" xml:space="preserve">
          <source>You can run the example one of two ways:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63366b6e44f5163c78736c2914a78fd15427bd3a" translate="yes" xml:space="preserve">
          <source>You can see all of the &lt;em&gt;toolchains&lt;/em&gt; (releases of Rust and associated components) you have installed with &lt;code&gt;rustup&lt;/code&gt; as well. Here&amp;rsquo;s an example on one of your authors&amp;rsquo; Windows computer:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ad8bdb0d1d5a61388700f692f73fc4d634ea4d8" translate="yes" xml:space="preserve">
          <source>You can see how primitive our server is: real libraries would handle the recognition of multiple requests in a much less verbose way!</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef181677ddc6f3265ea6a87f49632fa9f1210138" translate="yes" xml:space="preserve">
          <source>You can see that &lt;code&gt;if let&lt;/code&gt; can also introduce shadowed variables in the same way that &lt;code&gt;match&lt;/code&gt; arms can: the line &lt;code&gt;if let Ok(age) = age&lt;/code&gt; introduces a new shadowed &lt;code&gt;age&lt;/code&gt; variable that contains the value inside the &lt;code&gt;Ok&lt;/code&gt; variant. This means we need to place the &lt;code&gt;if age &amp;gt; 30&lt;/code&gt; condition within that block: we can&amp;rsquo;t combine these two conditions into &lt;code&gt;if let Ok(age) = age &amp;amp;&amp;amp; age &amp;gt; 30&lt;/code&gt;. The shadowed &lt;code&gt;age&lt;/code&gt; we want to compare to 30 isn&amp;rsquo;t valid until the new scope starts with the curly bracket.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6dac8a60a46917dc69183323e9ca6b9442311d9e" translate="yes" xml:space="preserve">
          <source>You can see that the second rule doesn&amp;rsquo;t apply because there is more than one input lifetime. The third rule doesn&amp;rsquo;t apply either, because &lt;code&gt;longest&lt;/code&gt; is a function rather than a method, so none of the parameters are &lt;code&gt;self&lt;/code&gt;. After working through all three rules, we still haven&amp;rsquo;t figured out what the return type&amp;rsquo;s lifetime is. This is why we got an error trying to compile the code in Listing 10-21: the compiler worked through the lifetime elision rules but still couldn&amp;rsquo;t figure out all the lifetimes of the references in the signature.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e4d508ac715cc3acbfdf122afbf7b9a03cd0107" translate="yes" xml:space="preserve">
          <source>You can think of &lt;code&gt;MaybeUninit&amp;lt;T&amp;gt;&lt;/code&gt; as being a bit like &lt;code&gt;Option&amp;lt;T&amp;gt;&lt;/code&gt; but without any of the run-time tracking and without any of the safety checks.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f606e05dadc0999f11ab48116c48743386a6126" translate="yes" xml:space="preserve">
          <source>You can think of &lt;code&gt;flat_map(f)&lt;/code&gt; as the semantic equivalent of &lt;a href=&quot;#method.map&quot;&gt;&lt;code&gt;map&lt;/code&gt;&lt;/a&gt;ping, and then &lt;a href=&quot;#method.flatten&quot;&gt;&lt;code&gt;flatten&lt;/code&gt;&lt;/a&gt;ing as in &lt;code&gt;map(f).flatten()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8b8c98aafd60cb333f24479704313af8e17f2d7" translate="yes" xml:space="preserve">
          <source>You can use &lt;a href=&quot;struct.pathbuf#method.push&quot;&gt;&lt;code&gt;push&lt;/code&gt;&lt;/a&gt; to build up a &lt;code&gt;PathBuf&lt;/code&gt; from components:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79c504057bc14c1c72ecffa07908c9acfa0c3808" translate="yes" xml:space="preserve">
          <source>You can use &lt;code&gt;MaybeUninit&amp;lt;T&amp;gt;&lt;/code&gt; to implement &quot;out-pointers&quot;: instead of returning data from a function, pass it a pointer to some (uninitialized) memory to put the result into. This can be useful when it is important for the caller to control how the memory the result is stored in gets allocated, and you want to avoid unnecessary moves.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45ef701adf9c3ff21ed219e1e0f0ea149a4acfce" translate="yes" xml:space="preserve">
          <source>You can use a &lt;code&gt;repr&lt;/code&gt; attribute to tell the compiler how you want a struct or enum to be laid out in memory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b34b5e340a342b7c6e66a1c66e9ad2f86e01083" translate="yes" xml:space="preserve">
          <source>You can use a slice pattern to move elements out of an array:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8525d6891c1f3e5f989dbf3ba87c59b3e77658c4" translate="yes" xml:space="preserve">
          <source>You can use aliases in order to fix this error. Example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc67eb4f6c079f25d4b841983f28617d8c247116" translate="yes" xml:space="preserve">
          <source>You can use code specified in a &lt;code&gt;Drop&lt;/code&gt; trait implementation in many ways to make cleanup convenient and safe: for instance, you could use it to create your own memory allocator! With the &lt;code&gt;Drop&lt;/code&gt; trait and Rust&amp;rsquo;s ownership system, you don&amp;rsquo;t have to remember to clean up because Rust does it automatically.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f312fe97d3268cd00fae0b76a4dae32c526dd97" translate="yes" xml:space="preserve">
          <source>You can use the &lt;a href=&quot;#method.as_os_str&quot;&gt;&lt;code&gt;as_os_str&lt;/code&gt;&lt;/a&gt; method to get an &lt;code&gt;&amp;amp;&lt;/code&gt;&lt;a href=&quot;struct.osstr&quot;&gt;&lt;code&gt;OsStr&lt;/code&gt;&lt;/a&gt; from an &lt;code&gt;OsString&lt;/code&gt;; this is effectively a borrowed reference to the whole string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1323a49e0cb97eec61d0dde3434ccf676cf86d24" translate="yes" xml:space="preserve">
          <source>You can use the &lt;a href=&quot;fmt/struct.arguments&quot;&gt;&lt;code&gt;fmt::Arguments&lt;/code&gt;&lt;/a&gt; value that &lt;code&gt;format_args!&lt;/code&gt; returns in &lt;code&gt;Debug&lt;/code&gt; and &lt;code&gt;Display&lt;/code&gt; contexts as seen below. The example also shows that &lt;code&gt;Debug&lt;/code&gt; and &lt;code&gt;Display&lt;/code&gt; format to the same thing: the interpolated format string in &lt;code&gt;format_args!&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1f9328d191cf1a4e8041c2b20ff6e3d44a4dd7e" translate="yes" xml:space="preserve">
          <source>You can use the &lt;code&gt;Arguments&amp;lt;'a&amp;gt;&lt;/code&gt; that &lt;a href=&quot;../macro.format_args&quot;&gt;&lt;code&gt;format_args!&lt;/code&gt;&lt;/a&gt; returns in &lt;code&gt;Debug&lt;/code&gt; and &lt;code&gt;Display&lt;/code&gt; contexts as seen below. The example also shows that &lt;code&gt;Debug&lt;/code&gt; and &lt;code&gt;Display&lt;/code&gt; format to the same thing: the interpolated format string in &lt;code&gt;format_args!&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0d2c3ab842592962de40df3105ee889292b2624" translate="yes" xml:space="preserve">
          <source>You can write integer literals in any of the forms shown in Table 3-2. Note that all number literals except the byte literal allow a type suffix, such as &lt;code&gt;57u8&lt;/code&gt;, and &lt;code&gt;_&lt;/code&gt; as a visual separator, such as &lt;code&gt;1_000&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e3a6a5d5ad9495618c32d7df9601c8b0c36186e" translate="yes" xml:space="preserve">
          <source>You can&amp;rsquo;t use the &lt;code&gt;#[should_panic]&lt;/code&gt; annotation on tests that use &lt;code&gt;Result&amp;lt;T, E&amp;gt;&lt;/code&gt;. Instead, you should return an &lt;code&gt;Err&lt;/code&gt; value directly when the test should fail.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68b6d283a51fc88197c307fe06aa87e325990277" translate="yes" xml:space="preserve">
          <source>You can't import a type or module when the name of the item being imported is the same as another type or submodule defined in the module.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f50f1788e3104b1887e0fe5929d8e14061698fab" translate="yes" xml:space="preserve">
          <source>You can't import a value whose name is the same as another value defined in the module.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a643c6311bbc95c59da6d6b04e51680a574a830" translate="yes" xml:space="preserve">
          <source>You can't use type or const parameters on foreign items. Example of erroneous code:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe58ca7fd87be4f97f1122198ed215b1d16ba8fe" translate="yes" xml:space="preserve">
          <source>You cannot define a struct (or enum) &lt;code&gt;Foo&lt;/code&gt; that requires an instance of &lt;code&gt;Foo&lt;/code&gt; in order to make a new &lt;code&gt;Foo&lt;/code&gt; value. This is because there would be no way a first instance of &lt;code&gt;Foo&lt;/code&gt; could be made to initialize another instance!</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d56e44b75bd82612a5c898ab88640b149ae542f" translate="yes" xml:space="preserve">
          <source>You cannot import the current module into itself, please remove this import or verify you didn't misspell it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd8026aeec168d950d49b1d853d7fb5eccbde596" translate="yes" xml:space="preserve">
          <source>You choose inheritance for two main reasons. One is for reuse of code: you can implement particular behavior for one type, and inheritance enables you to reuse that implementation for a different type. You can share Rust code using default trait method implementations instead, which you saw in Listing 10-14 when we added a default implementation of the &lt;code&gt;summarize&lt;/code&gt; method on the &lt;code&gt;Summary&lt;/code&gt; trait. Any type implementing the &lt;code&gt;Summary&lt;/code&gt; trait would have the &lt;code&gt;summarize&lt;/code&gt; method available on it without any further code. This is similar to a parent class having an implementation of a method and an inheriting child class also having the implementation of the method. We can also override the default implementation of the &lt;code&gt;summarize&lt;/code&gt; method when we implement the &lt;code&gt;Summary&lt;/code&gt; trait, which is similar to a child class overriding the implementation of a method inherited from a parent class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6eab2426d653eb63791cf922c9fd68c2cf3cc300" translate="yes" xml:space="preserve">
          <source>You could use the &lt;code&gt;while&lt;/code&gt; construct to loop over the elements of a collection, such as an array. For example, let&amp;rsquo;s look at Listing 3-4.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86305ea7dfbd655b97c9fe7b48a6cfa736ccdc12" translate="yes" xml:space="preserve">
          <source>You declare constants using the &lt;code&gt;const&lt;/code&gt; keyword instead of the &lt;code&gt;let&lt;/code&gt; keyword, and the type of the value &lt;em&gt;must&lt;/em&gt; be annotated. We&amp;rsquo;re about to cover types and type annotations in the next section, &lt;a href=&quot;ch03-02-data-types#data-types&quot;&gt;&amp;ldquo;Data Types,&amp;rdquo;&lt;/a&gt; so don&amp;rsquo;t worry about the details right now. Just know that you must always annotate the type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d26c982256875ef965abb7ff2a9ae7d6d8262fa1" translate="yes" xml:space="preserve">
          <source>You declared a pattern as an argument in a foreign function declaration. Erroneous code example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3042e33d1a35dfe59f3b5a52b534fe5ccd3ab130" translate="yes" xml:space="preserve">
          <source>You declared an unknown intrinsic function. Erroneous code example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="209c4b82ebb79e610fb7da013287d442d9de7ccc" translate="yes" xml:space="preserve">
          <source>You declared two fields of a struct with the same name. Erroneous code example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5681291083d07044a63476be05813904d873a94e" translate="yes" xml:space="preserve">
          <source>You gave an invalid number of type parameters to an intrinsic function. Erroneous code example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73e529ed83de9dd32d08048f27abd6e18e54d03b" translate="yes" xml:space="preserve">
          <source>You gave an unnecessary type or const parameter in a type alias. Erroneous code example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef290be095bc0ac42be01bd488ced06e1f432faa" translate="yes" xml:space="preserve">
          <source>You gave too few lifetime arguments. Example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a992fb3e33f43f550919aa8e7cbe12bdd71799a" translate="yes" xml:space="preserve">
          <source>You gave too many lifetime arguments. Erroneous code example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb8cdc3f699d29b35f63008d1337b75507d28ea4" translate="yes" xml:space="preserve">
          <source>You have two solutions:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9dce30760c2f61bac673b91333250ea52ecff835" translate="yes" xml:space="preserve">
          <source>You implemented a trait, overriding one or more of its associated types but did not reimplement its default methods.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca3b4cf5422aeae2f92f99806820d8c1b575cccd" translate="yes" xml:space="preserve">
          <source>You just want a set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="693a8bb9813bf36c49860217c46ff78a91bebee4" translate="yes" xml:space="preserve">
          <source>You just want to remember which keys you've seen.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6267968ef88afc721ff532c17b0b60cff2c548da" translate="yes" xml:space="preserve">
          <source>You made it! That was a sizable chapter: you learned about variables, scalar and compound data types, functions, comments, &lt;code&gt;if&lt;/code&gt; expressions, and loops! If you want to practice with the concepts discussed in this chapter, try building programs to do the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0326a4d7280cc9445cf9fc933301360c8002c40d" translate="yes" xml:space="preserve">
          <source>You may also &lt;code&gt;impl Unpin for Struct&lt;/code&gt;&lt;em&gt;even if&lt;/em&gt; the type of &lt;code&gt;field&lt;/code&gt; is not &lt;code&gt;Unpin&lt;/code&gt;. What that type thinks about pinning is not relevant when no &lt;code&gt;Pin&amp;lt;&amp;amp;mut Field&amp;gt;&lt;/code&gt; is ever created.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d25bc5acf2f68b706c37dcc13c39607795d6a9f" translate="yes" xml:space="preserve">
          <source>You may also find it useful to use &lt;code&gt;partial_cmp()&lt;/code&gt; on your type's fields. Here is an example of &lt;code&gt;Person&lt;/code&gt; types who have a floating-point &lt;code&gt;height&lt;/code&gt; field that is the only field to be used for sorting:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb2b627de2d8f77ac852c488f122afb35b75e986" translate="yes" xml:space="preserve">
          <source>You may see different version numbers (but they will all be compatible with the code, thanks to SemVer!), and the lines may be in a different order.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0aea23757c2d4ea05f9bc0b624b6a983479b8d23" translate="yes" xml:space="preserve">
          <source>You may want to use &lt;a href=&quot;struct.builder#method.spawn&quot;&gt;&lt;code&gt;spawn&lt;/code&gt;&lt;/a&gt; instead of &lt;a href=&quot;fn.spawn&quot;&gt;&lt;code&gt;thread::spawn&lt;/code&gt;&lt;/a&gt;, when you want to recover from a failure to launch a thread, indeed the free function will panic where the &lt;code&gt;Builder&lt;/code&gt; method will return a &lt;a href=&quot;../io/type.result&quot;&gt;&lt;code&gt;io::Result&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e857d3e6ddaa2784fb36ba6a569dbc89bbcf9c2c" translate="yes" xml:space="preserve">
          <source>You might also simply assert success:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="411fd9c69aaa84add9fa6a1d184d14bbf20a0535" translate="yes" xml:space="preserve">
          <source>You might be wondering whether there is a runtime cost when you&amp;rsquo;re using generic type parameters. The good news is that Rust implements generics in such a way that your code doesn&amp;rsquo;t run any slower using generic types than it would with concrete types.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ebcb4010913957f86a0d23be72d6863ae7ba24e" translate="yes" xml:space="preserve">
          <source>You might change it to:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="196ac9c5351705e1e9d296402ef15022404587af" translate="yes" xml:space="preserve">
          <source>You might have noticed that &lt;code&gt;counter&lt;/code&gt; is immutable but we could get a mutable reference to the value inside it; this means &lt;code&gt;Mutex&amp;lt;T&amp;gt;&lt;/code&gt; provides interior mutability, as the &lt;code&gt;Cell&lt;/code&gt; family does. In the same way we used &lt;code&gt;RefCell&amp;lt;T&amp;gt;&lt;/code&gt; in Chapter 15 to allow us to mutate contents inside an &lt;code&gt;Rc&amp;lt;T&amp;gt;&lt;/code&gt;, we use &lt;code&gt;Mutex&amp;lt;T&amp;gt;&lt;/code&gt; to mutate contents inside an &lt;code&gt;Arc&amp;lt;T&amp;gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81ed339c6506ce76f125fbadee32187bafce0758" translate="yes" xml:space="preserve">
          <source>You might have noticed that we&amp;rsquo;re calling &lt;code&gt;unwrap&lt;/code&gt; to cause the &lt;code&gt;hello_macro_derive&lt;/code&gt; function to panic if the call to the &lt;code&gt;syn::parse&lt;/code&gt; function fails here. It&amp;rsquo;s necessary for our procedural macro to panic on errors because &lt;code&gt;proc_macro_derive&lt;/code&gt; functions must return &lt;code&gt;TokenStream&lt;/code&gt; rather than &lt;code&gt;Result&lt;/code&gt; to conform to the procedural macro API. We&amp;rsquo;ve simplified this example by using &lt;code&gt;unwrap&lt;/code&gt;; in production code, you should provide more specific error messages about what went wrong by using &lt;code&gt;panic!&lt;/code&gt; or &lt;code&gt;expect&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4c72451ecb185d797de897da475849b8f847ffa" translate="yes" xml:space="preserve">
          <source>You might instead, if you don't want to handle the error, simply assert success with &lt;a href=&quot;enum.result#method.expect&quot;&gt;&lt;code&gt;expect&lt;/code&gt;&lt;/a&gt;. This will panic if the write fails, providing a marginally useful message indicating why:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6589cc6edb23f47a96ff9516937ce21a834273d2" translate="yes" xml:space="preserve">
          <source>You might see a different ordering of workers and messages printed. We can see how this code works from the messages: workers 0 and 3 got the first two requests, and then on the third request, the server stopped accepting connections. When the &lt;code&gt;ThreadPool&lt;/code&gt; goes out of scope at the end of &lt;code&gt;main&lt;/code&gt;, its &lt;code&gt;Drop&lt;/code&gt; implementation kicks in, and the pool tells all workers to terminate. The workers each print a message when they see the terminate message, and then the thread pool calls &lt;code&gt;join&lt;/code&gt; to shut down each worker thread.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c72b034ac7dca22dec808c9cf485588e7fbd8ad5" translate="yes" xml:space="preserve">
          <source>You might see suggestions to use the &lt;code&gt;'static&lt;/code&gt; lifetime in error messages. But before specifying &lt;code&gt;'static&lt;/code&gt; as the lifetime for a reference, think about whether the reference you have actually lives the entire lifetime of your program or not. You might consider whether you want it to live that long, even if it could. Most of the time, the problem results from attempting to create a dangling reference or a mismatch of the available lifetimes. In such cases, the solution is fixing those problems, not specifying the &lt;code&gt;'static&lt;/code&gt; lifetime.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63505ed6c9546f58e904a69b503f70f3b2975d65" translate="yes" xml:space="preserve">
          <source>You might see the values in another order; it depends on your system. This is what makes concurrency interesting as well as difficult. If you experiment with &lt;code&gt;thread::sleep&lt;/code&gt;, giving it various values in the different threads, each run will be more nondeterministic and create different output each time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a1d43c5cc821b3a1e73ff53937e14c370178589" translate="yes" xml:space="preserve">
          <source>You might then wonder why all primitive types aren&amp;rsquo;t atomic and why standard library types aren&amp;rsquo;t implemented to use &lt;code&gt;Arc&amp;lt;T&amp;gt;&lt;/code&gt; by default. The reason is that thread safety comes with a performance penalty that you only want to pay when you really need to. If you&amp;rsquo;re just performing operations on values within a single thread, your code can run faster if it doesn&amp;rsquo;t have to enforce the guarantees atomics provide.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd9251bb8badf33b5b3088f99faa91186c094eff" translate="yes" xml:space="preserve">
          <source>You must attempt to acquire the lock before using the data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="512b5098c179561bd4c62ac9351616ebcf00f290" translate="yes" xml:space="preserve">
          <source>You must make sure that you uphold the &lt;a href=&quot;#drop-guarantee&quot;&gt;&lt;code&gt;Drop&lt;/code&gt; guarantee&lt;/a&gt;: once your struct is pinned, the memory that contains the content is not overwritten or deallocated without calling the content's destructors. This can be tricky, as witnessed by &lt;a href=&quot;../collections/struct.vecdeque&quot;&gt;&lt;code&gt;VecDeque&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/a&gt;: the destructor of &lt;code&gt;VecDeque&amp;lt;T&amp;gt;&lt;/code&gt; can fail to call &lt;code&gt;drop&lt;/code&gt; on all elements if one of the destructors panics. This violates the &lt;code&gt;Drop&lt;/code&gt; guarantee, because it can lead to elements being deallocated without their destructor being called. (&lt;code&gt;VecDeque&lt;/code&gt; has no pinning projections, so this does not cause unsoundness.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3b9021b2601965141c3fb4dd09ebe81c52813f0" translate="yes" xml:space="preserve">
          <source>You must not offer any other operations that could lead to data being moved out of the structural fields when your type is pinned. For example, if the struct contains an &lt;code&gt;Option&amp;lt;T&amp;gt;&lt;/code&gt; and there is a &lt;code&gt;take&lt;/code&gt;-like operation with type &lt;code&gt;fn(Pin&amp;lt;&amp;amp;mut Struct&amp;lt;T&amp;gt;&amp;gt;) -&amp;gt; Option&amp;lt;T&amp;gt;&lt;/code&gt;, that operation can be used to move a &lt;code&gt;T&lt;/code&gt; out of a pinned &lt;code&gt;Struct&amp;lt;T&amp;gt;&lt;/code&gt; -- which means pinning cannot be structural for the field holding this data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62ca2833ca5cb486a7ab87759a170f3e035adbd8" translate="yes" xml:space="preserve">
          <source>You need to link your code to the relevant crate in order to be able to use it (through Cargo or the &lt;code&gt;-L&lt;/code&gt; option of rustc example). Plugins are crates as well, and you link to them the same way.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32770b9133b89cb0277fb3b811c7f33131f07d54" translate="yes" xml:space="preserve">
          <source>You should get different random numbers, and they should all be numbers between 1 and 100. Great job!</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d37e014e5424795905e10b35dcbbfc90645d1a41" translate="yes" xml:space="preserve">
          <source>You should see the version number, commit hash, and commit date for the latest stable version that has been released in the following format:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4bb15c4affeb1fb21e02b095c6505cc399a1de5" translate="yes" xml:space="preserve">
          <source>You should use ranges to create string slices with caution, because doing so can crash your program.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5609a431bf66e21ded639dc22d4df284c0c4dab" translate="yes" xml:space="preserve">
          <source>You tried to declare an undefined atomic operation function. Erroneous code example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1a863fa4182157ddb7efdff7bcd79894dd1b976" translate="yes" xml:space="preserve">
          <source>You tried to implement methods for a primitive type. Erroneous code example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ca57adb3473c7fcda2a5e14cb2150affeb0b7a3" translate="yes" xml:space="preserve">
          <source>You tried to move out of a value which was borrowed. Erroneous code example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="545469411a7c667814f3bf5bfe5fb3b2d297e5f6" translate="yes" xml:space="preserve">
          <source>You tried to provide a generic argument to a type which doesn't need it. Erroneous code example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be2b15dc95b36de3c1d45fb8ddd11ee16b58649b" translate="yes" xml:space="preserve">
          <source>You tried to provide a lifetime to a type which doesn't need it. See &lt;code&gt;E0109&lt;/code&gt; for more details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4db46c9e8574444f4cfb7fb9e13a0963a31d1d6" translate="yes" xml:space="preserve">
          <source>You tried to supply a type which doesn't implement some trait in a location which expected that trait. This error typically occurs when working with &lt;code&gt;Fn&lt;/code&gt;-based types. Erroneous code example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="167ff7eae934b858061a1902e9bb0a5c62d24c8b" translate="yes" xml:space="preserve">
          <source>You tried to supply an &lt;code&gt;Fn&lt;/code&gt;-based type with an incorrect number of arguments than what was expected.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee2c504f4812cc79039153f6b534ac2268b376e6" translate="yes" xml:space="preserve">
          <source>You tried to use a type which doesn't implement some trait in a place which expected that trait. Erroneous code example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f043de1a04d3f47b2f2141898a6c05a985c90bb" translate="yes" xml:space="preserve">
          <source>You tried to use something which is not a trait in a trait position, such as a bound or &lt;code&gt;impl&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d85882a605a6091380f8447ea32da5124e667bea" translate="yes" xml:space="preserve">
          <source>You tried to use structure-literal syntax to create an item that is not a structure or enum variant.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e502b3f73ed8c4a8f16c59c5846cc713beaa9053" translate="yes" xml:space="preserve">
          <source>You used an associated type which isn't defined in the trait. Erroneous code example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc4a84a36c41c857e979b18f2b8cf40f18b606c2" translate="yes" xml:space="preserve">
          <source>You want a &lt;a href=&quot;../vec/struct.vec&quot;&gt;&lt;code&gt;Vec&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;struct.vecdeque&quot;&gt;&lt;code&gt;VecDeque&lt;/code&gt;&lt;/a&gt; of unknown size, and can't tolerate amortization.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="429529cc1a810b0eca46cf5ff23873f2a58721a5" translate="yes" xml:space="preserve">
          <source>You want a &lt;a href=&quot;../vec/struct.vec&quot;&gt;&lt;code&gt;Vec&lt;/code&gt;&lt;/a&gt; that supports efficient insertion at both ends of the sequence.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0559695de775dc2d4a42d0b0be239e947bd98040" translate="yes" xml:space="preserve">
          <source>You want a cache.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a04ed0c490076b3c6bc236a8e45412e01a832c7" translate="yes" xml:space="preserve">
          <source>You want a double-ended queue (deque).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c125f0662558b8441e0f2b2e1f000892e47cfb2" translate="yes" xml:space="preserve">
          <source>You want a heap-allocated array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e482e7b2ba17ce10eaf983926bd2df92a665b96" translate="yes" xml:space="preserve">
          <source>You want a map sorted by its keys.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6811d3f626f38310b872083f59839dc40adf45e" translate="yes" xml:space="preserve">
          <source>You want a map, with no extra functionality.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47ec6c6f37e5a611470a4fe3872921e071b9d35e" translate="yes" xml:space="preserve">
          <source>You want a priority queue.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45ec6881dc09115683e907ee13147bb4ef94268c" translate="yes" xml:space="preserve">
          <source>You want a queue.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4274817a1179fcc4e8d32e916255f4d9bea0fcd" translate="yes" xml:space="preserve">
          <source>You want a resizable array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc1b84dd373c41e460b6526462c5a95d9b63833c" translate="yes" xml:space="preserve">
          <source>You want a sequence of elements in a particular order, and will only be appending to (or near) the end.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bfb46b766e59892d73fe8fb98696f88c0161713a" translate="yes" xml:space="preserve">
          <source>You want a stack.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4604e0073570a83f9a282ed8ddc03f579ab9add5" translate="yes" xml:space="preserve">
          <source>You want to associate arbitrary keys with an arbitrary value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a717b25180554fee11a8c7238a98a1d986eedfd5" translate="yes" xml:space="preserve">
          <source>You want to be able to get a range of entries on-demand.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82a8ad51acfbf7b362c324e437f11dc082c1b2c8" translate="yes" xml:space="preserve">
          <source>You want to collect items up to be processed or sent elsewhere later, and don't care about any properties of the actual values being stored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e005bf2f6d086fd7281c06db750033422726610a" translate="yes" xml:space="preserve">
          <source>You want to efficiently split and append lists.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c933cf0de25d7f17fc06ec50b65243cd4df88876" translate="yes" xml:space="preserve">
          <source>You want to find the largest or smallest key that is smaller or larger than something.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ab9d7dd47bb44bfa96e786004ea1b3d0d4c594f" translate="yes" xml:space="preserve">
          <source>You want to store a bunch of elements, but only ever want to process the &quot;biggest&quot; or &quot;most important&quot; one at any given time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dff73ddb22e432742f1a3b9903d65c3639aaaa40" translate="yes" xml:space="preserve">
          <source>You would match it using:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="365595fe25d7676cd843b0c763d0879641943db0" translate="yes" xml:space="preserve">
          <source>You would write an array&amp;rsquo;s type by using square brackets, and within the brackets include the type of each element, a semicolon, and then the number of elements in the array, like so:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d66487c6c772cf6ed866bab62bec74334fe25fc" translate="yes" xml:space="preserve">
          <source>You wouldn&amp;rsquo;t want a real-world web server to shut down after serving only two requests. This code just demonstrates that the graceful shutdown and cleanup is in working order.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a9e5344e2be4f99cb398b95cb15f43df043c859" translate="yes" xml:space="preserve">
          <source>You&amp;rsquo;ll find two kinds of chapters in this book: concept chapters and project chapters. In concept chapters, you&amp;rsquo;ll learn about an aspect of Rust. In project chapters, we&amp;rsquo;ll build small programs together, applying what you&amp;rsquo;ve learned so far. Chapters 2, 12, and 20 are project chapters; the rest are concept chapters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85a254ac5bdd3810bbd358a2de0033d8c5d546e1" translate="yes" xml:space="preserve">
          <source>You&amp;rsquo;ll get an error like this because Rust prevents you from using the invalidated reference:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d86880ac82c1881e7a9405d7bd16d7b1f80d76e" translate="yes" xml:space="preserve">
          <source>You&amp;rsquo;ll see different type annotations for other data types.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="584a58976748836676009747cbbda6f121e6c815" translate="yes" xml:space="preserve">
          <source>You&amp;rsquo;ll start by making a directory to store your Rust code. It doesn&amp;rsquo;t matter to Rust where your code lives, but for the exercises and projects in this book, we suggest making a &lt;em&gt;projects&lt;/em&gt; directory in your home directory and keeping all your projects there.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d4e9cdb26a23e07482cc51bd995fb62c80c08b3" translate="yes" xml:space="preserve">
          <source>You&amp;rsquo;ll use default type parameters in two main ways:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76e7b1024235c93bba49e72df5b2007bd3c01f30" translate="yes" xml:space="preserve">
          <source>You&amp;rsquo;re already off to a great start on your Rust journey! In this chapter, you&amp;rsquo;ve learned how to:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="465d6c615ec587094237e6d1868d10e3e6d6c845" translate="yes" xml:space="preserve">
          <source>You&amp;rsquo;ve just run a newly created program, so let&amp;rsquo;s examine each step in the process.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c5f73edb8ee5f2e28f1893521e8701a830fccb7" translate="yes" xml:space="preserve">
          <source>You&amp;rsquo;ve learned that every reference has a lifetime and that you need to specify lifetime parameters for functions or structs that use references. However, in Chapter 4 we had a function in Listing 4-9, which is shown again in Listing 10-26, that compiled without lifetime annotations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44ba14f7fab35608e1f076ddf40f88f87fe95906" translate="yes" xml:space="preserve">
          <source>You&amp;rsquo;ve seen that it&amp;rsquo;s sometimes useful to ignore values in a pattern, such as in the last arm of a &lt;code&gt;match&lt;/code&gt;, to get a catchall that doesn&amp;rsquo;t actually do anything but does account for all remaining possible values. There are a few ways to ignore entire values or parts of values in a pattern: using the &lt;code&gt;_&lt;/code&gt; pattern (which you&amp;rsquo;ve seen), using the &lt;code&gt;_&lt;/code&gt; pattern within another pattern, using a name that starts with an underscore, or using &lt;code&gt;..&lt;/code&gt; to ignore remaining parts of a value. Let&amp;rsquo;s explore how and why to use each of these patterns.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b667051ae799a2fd628bbf6b2a672ad08ac88e85" translate="yes" xml:space="preserve">
          <source>You're interested in what the smallest or largest key-value pair is.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d546e29fcb9280e6885e53aaa2d82bf73b29bc9" translate="yes" xml:space="preserve">
          <source>You're trying to write an inherent implementation for something which isn't a struct nor an enum. Erroneous code example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da3aed35105ef32e1e695100a00108ae53f9a846" translate="yes" xml:space="preserve">
          <source>Your &lt;em&gt;add&lt;/em&gt; directory should now have these directories and files:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e58e4525e175f4af13b0845bead6769f97587a2e" translate="yes" xml:space="preserve">
          <source>Your Rust programs can now express concepts in your domain using structs and enums. Creating custom types to use in your API ensures type safety: the compiler will make certain your functions get only values of the type each function expects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="735c2494d942625911bc7d8957e7d9ab2a88f33c" translate="yes" xml:space="preserve">
          <source>Your code after this point needs to rely on not being in this bad state.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1db1a9fd383f11b588c51cc526365c428c751169" translate="yes" xml:space="preserve">
          <source>Your crate will need a unique name. While you&amp;rsquo;re working on a crate locally, you can name a crate whatever you&amp;rsquo;d like. However, crate names on &lt;a href=&quot;https://crates.io/&quot;&gt;crates.io&lt;/a&gt; are allocated on a first-come, first-served basis. Once a crate name is taken, no one else can publish a crate with that name. Before attempting to publish a crate, search for the name you want to use on the site. If the name has been used by another crate, you will need to find another name and edit the &lt;code&gt;name&lt;/code&gt; field in the &lt;em&gt;Cargo.toml&lt;/em&gt; file under the &lt;code&gt;[package]&lt;/code&gt; section to use the new name for publishing, like so:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a348b9c3e6214e498622aa794c35adc160939e25" translate="yes" xml:space="preserve">
          <source>Your method's lifetime parameters do not match the trait declaration. Erroneous code example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44335ff3d78e212a8ef5be5ae6db1f0effecb38b" translate="yes" xml:space="preserve">
          <source>Your type will be passed as &lt;code&gt;self&lt;/code&gt; by-reference, and then the function should emit output into the &lt;code&gt;f.buf&lt;/code&gt; stream. It is up to each format trait implementation to correctly adhere to the requested formatting parameters. The values of these parameters will be listed in the fields of the &lt;a href=&quot;struct.formatter&quot;&gt;&lt;code&gt;Formatter&lt;/code&gt;&lt;/a&gt; struct. In order to help with this, the &lt;a href=&quot;struct.formatter&quot;&gt;&lt;code&gt;Formatter&lt;/code&gt;&lt;/a&gt; struct also provides some helper methods.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3071115273bb14d2e07d6d6e35d490b903df989f" translate="yes" xml:space="preserve">
          <source>Yup, our error message is being printed to standard output. It&amp;rsquo;s much more useful for error messages like this to be printed to standard error so only data from a successful run ends up in the file. We&amp;rsquo;ll change that.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97c00e76abaf44294d943d621bee4b664ccb6c50" translate="yes" xml:space="preserve">
          <source>Zero, one, or more attributes may be listed. Multiple attributes will each be expanded into separate attributes. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3af9795f2295c7a8a6215bac54db107af616db4" translate="yes" xml:space="preserve">
          <source>Zero-sized type used to mark things that &quot;act like&quot; they own a &lt;code&gt;T&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f59177702b9970bd3419e3823969cd151c4053d7" translate="yes" xml:space="preserve">
          <source>Zero-variant Enums</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aec742c8cd57ac5fee0ad76b17e91c6d76608cb3" translate="yes" xml:space="preserve">
          <source>Zip</source>
          <target state="translated">Zip</target>
        </trans-unit>
        <trans-unit id="7a310c844b5c3ca26bc69255cc0d75ae441b6843" translate="yes" xml:space="preserve">
          <source>Zip::all</source>
          <target state="translated">Zip::all</target>
        </trans-unit>
        <trans-unit id="03d4fc61138a969d2621250df6e71fdffd360059" translate="yes" xml:space="preserve">
          <source>Zip::any</source>
          <target state="translated">Zip::any</target>
        </trans-unit>
        <trans-unit id="6233ce444c406651f5225b3064ff848bae50a22e" translate="yes" xml:space="preserve">
          <source>Zip::borrow</source>
          <target state="translated">Zip::borrow</target>
        </trans-unit>
        <trans-unit id="5267cb651cf3e20907a2a97739f253d7e23ee43f" translate="yes" xml:space="preserve">
          <source>Zip::borrow_mut</source>
          <target state="translated">Zip::borrow_mut</target>
        </trans-unit>
        <trans-unit id="3c43a8142c7d99659a3badd9ef24a3361bab0578" translate="yes" xml:space="preserve">
          <source>Zip::by_ref</source>
          <target state="translated">Zip::by_ref</target>
        </trans-unit>
        <trans-unit id="3e003a22202c186d42da477c6b942e753530005e" translate="yes" xml:space="preserve">
          <source>Zip::chain</source>
          <target state="translated">Zip::chain</target>
        </trans-unit>
        <trans-unit id="7ff754927e7888b256d3739ffbc3dd0fc118871e" translate="yes" xml:space="preserve">
          <source>Zip::clone</source>
          <target state="translated">Zip::clone</target>
        </trans-unit>
        <trans-unit id="a1aeada24d11405b1e77185059074c3497d6513b" translate="yes" xml:space="preserve">
          <source>Zip::clone_from</source>
          <target state="translated">Zip::clone_from</target>
        </trans-unit>
        <trans-unit id="d21c41cfb41d5708171f6488c6d62db3fd4c16c2" translate="yes" xml:space="preserve">
          <source>Zip::clone_into</source>
          <target state="translated">Zip::clone_into</target>
        </trans-unit>
        <trans-unit id="032ee6c7a243fd8cbf95c96efa43d8b132bf2194" translate="yes" xml:space="preserve">
          <source>Zip::cloned</source>
          <target state="translated">Zip::cloned</target>
        </trans-unit>
        <trans-unit id="ffb5124a6ef89ad1b1c0482746735596f403d24a" translate="yes" xml:space="preserve">
          <source>Zip::cmp</source>
          <target state="translated">Zip::cmp</target>
        </trans-unit>
        <trans-unit id="46447ea53c47753f71cf66ca58114d53d2fdb01f" translate="yes" xml:space="preserve">
          <source>Zip::collect</source>
          <target state="translated">Zip::collect</target>
        </trans-unit>
        <trans-unit id="17533b8852fe9b8d306d8f769bc30fd306712eba" translate="yes" xml:space="preserve">
          <source>Zip::copied</source>
          <target state="translated">Zip::copied</target>
        </trans-unit>
        <trans-unit id="9af214749e1a55301d4c2f9e7260245ed45aa562" translate="yes" xml:space="preserve">
          <source>Zip::count</source>
          <target state="translated">Zip::count</target>
        </trans-unit>
        <trans-unit id="6fd7c8047a87acfb4e3792b0030e43359014cc60" translate="yes" xml:space="preserve">
          <source>Zip::cycle</source>
          <target state="translated">Zip::cycle</target>
        </trans-unit>
        <trans-unit id="d1258c7ea1aad373afa11621588a6578490222c2" translate="yes" xml:space="preserve">
          <source>Zip::enumerate</source>
          <target state="translated">Zip::enumerate</target>
        </trans-unit>
        <trans-unit id="c6d190bd6761869fb18c6ddbbd7de7af24d5db4e" translate="yes" xml:space="preserve">
          <source>Zip::eq</source>
          <target state="translated">Zip::eq</target>
        </trans-unit>
        <trans-unit id="327368bacc7d7e5a427321524fbdbc8daabf7148" translate="yes" xml:space="preserve">
          <source>Zip::filter</source>
          <target state="translated">Zip::filter</target>
        </trans-unit>
        <trans-unit id="729ebbffc443285ea1b3b9a987f5475fb2587a55" translate="yes" xml:space="preserve">
          <source>Zip::filter_map</source>
          <target state="translated">Zip::filter_map</target>
        </trans-unit>
        <trans-unit id="8f60540f721598c427a30a82645c6643aad047a3" translate="yes" xml:space="preserve">
          <source>Zip::find</source>
          <target state="translated">Zip::find</target>
        </trans-unit>
        <trans-unit id="71776cd66360ee041f56a382c9e4e7842ab8b31a" translate="yes" xml:space="preserve">
          <source>Zip::find_map</source>
          <target state="translated">Zip::find_map</target>
        </trans-unit>
        <trans-unit id="2c4b877f5f8ec6c5bf5ef8f3e39422d40a6c73be" translate="yes" xml:space="preserve">
          <source>Zip::flat_map</source>
          <target state="translated">Zip::flat_map</target>
        </trans-unit>
        <trans-unit id="724aa05ed30929683e2a861e9cf764114e9f32a4" translate="yes" xml:space="preserve">
          <source>Zip::flatten</source>
          <target state="translated">Zip::flatten</target>
        </trans-unit>
        <trans-unit id="ddcbc7de04e3187c6c1a68b0261f6bd417687b7b" translate="yes" xml:space="preserve">
          <source>Zip::fmt</source>
          <target state="translated">Zip::fmt</target>
        </trans-unit>
        <trans-unit id="f3cb6b923a3ea63c1e7ec36ab7aefa0b495552be" translate="yes" xml:space="preserve">
          <source>Zip::fold</source>
          <target state="translated">Zip::fold</target>
        </trans-unit>
        <trans-unit id="06d865697c853a97aca4285f4298e09c0a84f49e" translate="yes" xml:space="preserve">
          <source>Zip::for_each</source>
          <target state="translated">Zip::for_each</target>
        </trans-unit>
        <trans-unit id="e2cc1438498d2e497108bff98246c9ce2c4d822c" translate="yes" xml:space="preserve">
          <source>Zip::from</source>
          <target state="translated">Zip::from</target>
        </trans-unit>
        <trans-unit id="a70010555f26c82b35f35251e2fb688f0c632b5b" translate="yes" xml:space="preserve">
          <source>Zip::fuse</source>
          <target state="translated">Zip::fuse</target>
        </trans-unit>
        <trans-unit id="28bf12281d77c358a66d465298c5224b33de3343" translate="yes" xml:space="preserve">
          <source>Zip::ge</source>
          <target state="translated">Zip::ge</target>
        </trans-unit>
        <trans-unit id="630a9c9f133302648e103bbf4a010b6519ffa142" translate="yes" xml:space="preserve">
          <source>Zip::gt</source>
          <target state="translated">Zip::gt</target>
        </trans-unit>
        <trans-unit id="520400921d5297bb5c3bf46815fbc204b53894ee" translate="yes" xml:space="preserve">
          <source>Zip::inspect</source>
          <target state="translated">Zip::inspect</target>
        </trans-unit>
        <trans-unit id="82ac77946061ee097722e74f6c3974cc505dbf60" translate="yes" xml:space="preserve">
          <source>Zip::into</source>
          <target state="translated">Zip::into</target>
        </trans-unit>
        <trans-unit id="e57ecec344c31227348ec93c5f315cb21b47782f" translate="yes" xml:space="preserve">
          <source>Zip::into_iter</source>
          <target state="translated">Zip::into_iter</target>
        </trans-unit>
        <trans-unit id="8a782dd7d441daa7e415a484864b33d6fd835b39" translate="yes" xml:space="preserve">
          <source>Zip::is_empty</source>
          <target state="translated">Zip::is_empty</target>
        </trans-unit>
        <trans-unit id="971ae32344047fd5cad30c43a400ff992b97688e" translate="yes" xml:space="preserve">
          <source>Zip::is_sorted</source>
          <target state="translated">Zip::is_sorted</target>
        </trans-unit>
        <trans-unit id="36c92e0d3e7db271544d5bc8318ab5a162555e05" translate="yes" xml:space="preserve">
          <source>Zip::is_sorted_by</source>
          <target state="translated">Zip::is_sorted_by</target>
        </trans-unit>
        <trans-unit id="7cfbc2ce82c6ed8875581847fe7898e98419dc7e" translate="yes" xml:space="preserve">
          <source>Zip::is_sorted_by_key</source>
          <target state="translated">Zip::is_sorted_by_key</target>
        </trans-unit>
        <trans-unit id="bd67b991b006257a47be5522d9eeeebbcbdaf6fb" translate="yes" xml:space="preserve">
          <source>Zip::last</source>
          <target state="translated">Zip::last</target>
        </trans-unit>
        <trans-unit id="0eb7a74dbf60cabe9d6121b317b82dc0e49f47a4" translate="yes" xml:space="preserve">
          <source>Zip::le</source>
          <target state="translated">Zip::le</target>
        </trans-unit>
        <trans-unit id="1bd5ebc9431f770ea4ec4adea5ac3691a2e738cb" translate="yes" xml:space="preserve">
          <source>Zip::len</source>
          <target state="translated">Zip::len</target>
        </trans-unit>
        <trans-unit id="ee4d8494dc795467ef171b4b15538e42d02acd0c" translate="yes" xml:space="preserve">
          <source>Zip::lt</source>
          <target state="translated">Zip::lt</target>
        </trans-unit>
        <trans-unit id="935aa09d6e9b55b2d4ff210d39fc4c92e0932f51" translate="yes" xml:space="preserve">
          <source>Zip::map</source>
          <target state="translated">Zip::map</target>
        </trans-unit>
        <trans-unit id="4fc75a4fa0f693d3acebf430d51b902d6c128ef2" translate="yes" xml:space="preserve">
          <source>Zip::max</source>
          <target state="translated">Zip::max</target>
        </trans-unit>
        <trans-unit id="c631714d0ce7c489952dc9fc8d8e740a111bb9c7" translate="yes" xml:space="preserve">
          <source>Zip::max_by</source>
          <target state="translated">Zip::max_by</target>
        </trans-unit>
        <trans-unit id="0cb8b3df5c45388af7860a4f5cf26948a0bebd9f" translate="yes" xml:space="preserve">
          <source>Zip::max_by_key</source>
          <target state="translated">Zip::max_by_key</target>
        </trans-unit>
        <trans-unit id="7d6c6bc0b21a01d03786ff5a1a731f10ea0689e8" translate="yes" xml:space="preserve">
          <source>Zip::min</source>
          <target state="translated">Zip::min</target>
        </trans-unit>
        <trans-unit id="6f989cc13b0d72dfdada2cddafd23e122ba5419d" translate="yes" xml:space="preserve">
          <source>Zip::min_by</source>
          <target state="translated">Zip::min_by</target>
        </trans-unit>
        <trans-unit id="b3663dbe8a0662d62121115fa16311b00c4a9bbd" translate="yes" xml:space="preserve">
          <source>Zip::min_by_key</source>
          <target state="translated">Zip::min_by_key</target>
        </trans-unit>
        <trans-unit id="fff0a9e69cf0bdfe7fe10bbf6b363a95680a776f" translate="yes" xml:space="preserve">
          <source>Zip::ne</source>
          <target state="translated">Zip::ne</target>
        </trans-unit>
        <trans-unit id="b269708a2aafc91b31410e2aba4dcd563aff8abc" translate="yes" xml:space="preserve">
          <source>Zip::next</source>
          <target state="translated">Zip::next</target>
        </trans-unit>
        <trans-unit id="2dde4011d8eef118f9217a1cd646ccde3938c623" translate="yes" xml:space="preserve">
          <source>Zip::next_back</source>
          <target state="translated">Zip::next_back</target>
        </trans-unit>
        <trans-unit id="24442987a3f5df43d0461b66d983f1d4539d6a35" translate="yes" xml:space="preserve">
          <source>Zip::nth</source>
          <target state="translated">Zip::nth</target>
        </trans-unit>
        <trans-unit id="73aed9553dc8bb9cb23116c6657df0c66b562c98" translate="yes" xml:space="preserve">
          <source>Zip::nth_back</source>
          <target state="translated">Zip::nth_back</target>
        </trans-unit>
        <trans-unit id="f36245983fcc56a347a3bcb16591f090a529d80a" translate="yes" xml:space="preserve">
          <source>Zip::partial_cmp</source>
          <target state="translated">Zip::partial_cmp</target>
        </trans-unit>
        <trans-unit id="3ff556bb92ce21bb4f3ecff1a108f511a6035e0c" translate="yes" xml:space="preserve">
          <source>Zip::partition</source>
          <target state="translated">Zip::partition</target>
        </trans-unit>
        <trans-unit id="5bbd1ffcf3f52be9f20e67acf83cbec105fd89ca" translate="yes" xml:space="preserve">
          <source>Zip::peekable</source>
          <target state="translated">Zip::peekable</target>
        </trans-unit>
        <trans-unit id="95e2078fc3b9c4d957e34a824dc71785f132581f" translate="yes" xml:space="preserve">
          <source>Zip::position</source>
          <target state="translated">Zip::position</target>
        </trans-unit>
        <trans-unit id="7776d865a2b5dbee0629b9862610ea76ee78c525" translate="yes" xml:space="preserve">
          <source>Zip::product</source>
          <target state="translated">Zip::product</target>
        </trans-unit>
        <trans-unit id="b84a8972a030071381e753b4cae6807b09c22f7b" translate="yes" xml:space="preserve">
          <source>Zip::rev</source>
          <target state="translated">Zip::rev</target>
        </trans-unit>
        <trans-unit id="12e4a21f426826504c4afdcc98e55129f4acb97f" translate="yes" xml:space="preserve">
          <source>Zip::rfind</source>
          <target state="translated">Zip::rfind</target>
        </trans-unit>
        <trans-unit id="ae3ab773aa757f6d9052c0f919096672dc662d6a" translate="yes" xml:space="preserve">
          <source>Zip::rfold</source>
          <target state="translated">Zip::rfold</target>
        </trans-unit>
        <trans-unit id="229c97b569e06e032067298b2b9af3f4a8af914e" translate="yes" xml:space="preserve">
          <source>Zip::rposition</source>
          <target state="translated">Zip::rposition</target>
        </trans-unit>
        <trans-unit id="2c8c80468455642a4cf50cec4547978f0374e91f" translate="yes" xml:space="preserve">
          <source>Zip::scan</source>
          <target state="translated">Zip::scan</target>
        </trans-unit>
        <trans-unit id="c4e5e28de27f6ab610c979c784555d09f21a03c7" translate="yes" xml:space="preserve">
          <source>Zip::size_hint</source>
          <target state="translated">Zip::size_hint</target>
        </trans-unit>
        <trans-unit id="b61a7224e1a66ba0310da7f69834dada51d74c5e" translate="yes" xml:space="preserve">
          <source>Zip::skip</source>
          <target state="translated">Zip::skip</target>
        </trans-unit>
        <trans-unit id="6d7cee3ee52479d0c8dc612398197cc356613e14" translate="yes" xml:space="preserve">
          <source>Zip::skip_while</source>
          <target state="translated">Zip::skip_while</target>
        </trans-unit>
        <trans-unit id="6adc47e61c3b41dbda18b7af6dc9221c156688c0" translate="yes" xml:space="preserve">
          <source>Zip::step_by</source>
          <target state="translated">Zip::step_by</target>
        </trans-unit>
        <trans-unit id="f3f124cf4df9c292e48c357bc0791e9ce898c9da" translate="yes" xml:space="preserve">
          <source>Zip::sum</source>
          <target state="translated">Zip::sum</target>
        </trans-unit>
        <trans-unit id="f175b1e810f4d1819f5c88a2accd0396d41bc264" translate="yes" xml:space="preserve">
          <source>Zip::take</source>
          <target state="translated">Zip::take</target>
        </trans-unit>
        <trans-unit id="6bec4ffb892feee169a8e6273f7a6996d7e89238" translate="yes" xml:space="preserve">
          <source>Zip::take_while</source>
          <target state="translated">Zip::take_while</target>
        </trans-unit>
        <trans-unit id="4ea52f182d1900dfbf8091ff783deb8f667d41df" translate="yes" xml:space="preserve">
          <source>Zip::to_owned</source>
          <target state="translated">Zip::to_owned</target>
        </trans-unit>
        <trans-unit id="9933331d7f68de7c2c03f29dae0bf094cb9138d5" translate="yes" xml:space="preserve">
          <source>Zip::try_fold</source>
          <target state="translated">Zip::try_fold</target>
        </trans-unit>
        <trans-unit id="f235a4d9ec8e42f4d51bd96af592c13850f64dc6" translate="yes" xml:space="preserve">
          <source>Zip::try_for_each</source>
          <target state="translated">Zip::try_for_each</target>
        </trans-unit>
        <trans-unit id="7decbd26334531bcda455c16074134e8d73a6700" translate="yes" xml:space="preserve">
          <source>Zip::try_from</source>
          <target state="translated">Zip::try_from</target>
        </trans-unit>
        <trans-unit id="c5141248eb9fe16e09f783e1f020e222a79b8e48" translate="yes" xml:space="preserve">
          <source>Zip::try_into</source>
          <target state="translated">Zip::try_into</target>
        </trans-unit>
        <trans-unit id="d18612b55ec96bf2dfc75a2645b54d52c771d532" translate="yes" xml:space="preserve">
          <source>Zip::try_rfold</source>
          <target state="translated">Zip::try_rfold</target>
        </trans-unit>
        <trans-unit id="11955da5a60532770e3df7376518b35df5e367e1" translate="yes" xml:space="preserve">
          <source>Zip::type_id</source>
          <target state="translated">Zip::type_id</target>
        </trans-unit>
        <trans-unit id="aaa9d97a6e46bd8d81c87c6151407deae1158605" translate="yes" xml:space="preserve">
          <source>Zip::unzip</source>
          <target state="translated">Zip::unzip</target>
        </trans-unit>
        <trans-unit id="53d5d49f7575f97ebc48e3c3987fe4691c11c51e" translate="yes" xml:space="preserve">
          <source>Zip::zip</source>
          <target state="translated">Zip::zip</target>
        </trans-unit>
        <trans-unit id="4dadfbfb45cf2eb517d02044647fd90c3b66fdbb" translate="yes" xml:space="preserve">
          <source>[ - ]</source>
          <target state="translated">[ - ]</target>
        </trans-unit>
        <trans-unit id="cdcd5c9a3a475f2298b5ee3f4258f8207ba10879" translate="yes" xml:space="preserve">
          <source>[ ]</source>
          <target state="translated">[ ]</target>
        </trans-unit>
        <trans-unit id="6c087345d1421bb3092531be87dbc44e9f72787d" translate="yes" xml:space="preserve">
          <source>[&lt;code&gt;Eq&lt;/code&gt;] and [&lt;code&gt;PartialEq&lt;/code&gt;] are traits that allow you to define total and partial equality between values, respectively. Implementing them overloads the &lt;code&gt;==&lt;/code&gt; and &lt;code&gt;!=&lt;/code&gt; operators.</source>
          <target state="translated">[&lt;code&gt;Eq&lt;/code&gt;] and [&lt;code&gt;PartialEq&lt;/code&gt;] are traits that allow you to define total and partial equality between values, respectively. Implementing them overloads the &lt;code&gt;==&lt;/code&gt; and &lt;code&gt;!=&lt;/code&gt; operators.</target>
        </trans-unit>
        <trans-unit id="87dc01ea83dc45f7312a127b799a93104629d350" translate="yes" xml:space="preserve">
          <source>[&lt;code&gt;Ord&lt;/code&gt;] and [&lt;code&gt;PartialOrd&lt;/code&gt;] are traits that allow you to define total and partial orderings between values, respectively. Implementing them overloads the &lt;code&gt;&amp;lt;&lt;/code&gt;, &lt;code&gt;&amp;lt;=&lt;/code&gt;, &lt;code&gt;&amp;gt;&lt;/code&gt;, and &lt;code&gt;&amp;gt;=&lt;/code&gt; operators.</source>
          <target state="translated">[&lt;code&gt;Ord&lt;/code&gt;] and [&lt;code&gt;PartialOrd&lt;/code&gt;] are traits that allow you to define total and partial orderings between values, respectively. Implementing them overloads the &lt;code&gt;&amp;lt;&lt;/code&gt;, &lt;code&gt;&amp;lt;=&lt;/code&gt;, &lt;code&gt;&amp;gt;&lt;/code&gt;, and &lt;code&gt;&amp;gt;=&lt;/code&gt; operators.</target>
        </trans-unit>
        <trans-unit id="59c6d34ccc21d3aed85e642e6bb9ec09027bb697" translate="yes" xml:space="preserve">
          <source>[&lt;code&gt;Ordering&lt;/code&gt;][cmp::Ordering] is an enum returned by the main functions of [&lt;code&gt;Ord&lt;/code&gt;] and [&lt;code&gt;PartialOrd&lt;/code&gt;], and describes an ordering.</source>
          <target state="translated">[&lt;code&gt;Ordering&lt;/code&gt;][cmp::Ordering] is an enum returned by the main functions of [&lt;code&gt;Ord&lt;/code&gt;] and [&lt;code&gt;PartialOrd&lt;/code&gt;], and describes an ordering.</target>
        </trans-unit>
        <trans-unit id="c0258c5c3ce0feb2e34b84e23d6638fcefb6dd15" translate="yes" xml:space="preserve">
          <source>[&lt;code&gt;Reverse&lt;/code&gt;][cmp::Reverse] is a struct that allows you to easily reverse an ordering.</source>
          <target state="translated">[&lt;code&gt;Reverse&lt;/code&gt;][cmp::Reverse] is a struct that allows you to easily reverse an ordering.</target>
        </trans-unit>
        <trans-unit id="840612b717277518665b3fd424e0a5f393324bd8" translate="yes" xml:space="preserve">
          <source>[&lt;code&gt;a&lt;/code&gt;-&lt;code&gt;z&lt;/code&gt;&lt;code&gt;A&lt;/code&gt;-&lt;code&gt;Z&lt;/code&gt;] [&lt;code&gt;a&lt;/code&gt;-&lt;code&gt;z&lt;/code&gt;&lt;code&gt;A&lt;/code&gt;-&lt;code&gt;Z&lt;/code&gt;&lt;code&gt;0&lt;/code&gt;-&lt;code&gt;9&lt;/code&gt;&lt;code&gt;_&lt;/code&gt;]&lt;sup&gt;*&lt;/sup&gt;</source>
          <target state="translated">[&lt;code&gt;a&lt;/code&gt;-&lt;code&gt;z&lt;/code&gt;&lt;code&gt;A&lt;/code&gt;-&lt;code&gt;Z&lt;/code&gt;] [&lt;code&gt;a&lt;/code&gt;-&lt;code&gt;z&lt;/code&gt;&lt;code&gt;A&lt;/code&gt;-&lt;code&gt;Z&lt;/code&gt;&lt;code&gt;0&lt;/code&gt;-&lt;code&gt;9&lt;/code&gt;&lt;code&gt;_&lt;/code&gt;]&lt;sup&gt;*&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="5316fd26c1e27555ff577c62757ff0bc7be48b78" translate="yes" xml:space="preserve">
          <source>[&lt;code&gt;a&lt;/code&gt;-&lt;code&gt;z&lt;/code&gt;]</source>
          <target state="translated">[&lt;code&gt;a&lt;/code&gt;-&lt;code&gt;z&lt;/code&gt;]</target>
        </trans-unit>
        <trans-unit id="5797cdf0352e4f4b04a71322ef5c8a9f3ec2ee7d" translate="yes" xml:space="preserve">
          <source>[&lt;code&gt;b&lt;/code&gt;&lt;code&gt;B&lt;/code&gt;]</source>
          <target state="translated">[&lt;code&gt;b&lt;/code&gt;&lt;code&gt;B&lt;/code&gt;]</target>
        </trans-unit>
        <trans-unit id="667d358a8d4f23753abd06a643d1602bc2a2b481" translate="yes" xml:space="preserve">
          <source>[&lt;code&gt;max&lt;/code&gt;][cmp::max] and [&lt;code&gt;min&lt;/code&gt;][cmp::min] are functions that build off of [&lt;code&gt;Ord&lt;/code&gt;] and allow you to find the maximum or minimum of two values.</source>
          <target state="translated">[&lt;code&gt;max&lt;/code&gt;][cmp::max] and [&lt;code&gt;min&lt;/code&gt;][cmp::min] are functions that build off of [&lt;code&gt;Ord&lt;/code&gt;] and allow you to find the maximum or minimum of two values.</target>
        </trans-unit>
        <trans-unit id="798cde61360d58687a5da27eadb8538f4cc5b282" translate="yes" xml:space="preserve">
          <source>\n, \r, \t, \0</source>
          <target state="translated">\n, \r, \t, \0</target>
        </trans-unit>
        <trans-unit id="fc9847dcc99e708ce77a85aa95896c79139e7dfe" translate="yes" xml:space="preserve">
          <source>\x</source>
          <target state="translated">\x</target>
        </trans-unit>
        <trans-unit id="a1cee21d6e0f739834cc58a3e28c4fd3ad87bed5" translate="yes" xml:space="preserve">
          <source>a - The index of the first element</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="647c3306f39af3d4126ae8189f90519307be8919" translate="yes" xml:space="preserve">
          <source>a &lt;em&gt;virtual method table&lt;/em&gt;, often just called a &lt;em&gt;vtable&lt;/em&gt;, which contains, for each method of &lt;code&gt;SomeTrait&lt;/code&gt; and its &lt;a href=&quot;../items/traits#supertraits&quot;&gt;supertraits&lt;/a&gt; that &lt;code&gt;T&lt;/code&gt; implements, a pointer to &lt;code&gt;T&lt;/code&gt;'s implementation (i.e. a function pointer).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed9cf402e42cb4b61cf6aa833c64fa3ed260a2d6" translate="yes" xml:space="preserve">
          <source>a lower-bound on &lt;code&gt;use_max&lt;/code&gt; can be safely approximated by a call to &lt;code&gt;usable_size&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf56d6a6edc4dd79be4c7f8bddf8f05c5e95f2d7" translate="yes" xml:space="preserve">
          <source>a pointer to an instance of a type &lt;code&gt;T&lt;/code&gt; that implements &lt;code&gt;SomeTrait&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44f331cb1a95831c42b2c4faeff2983aef85e26a" translate="yes" xml:space="preserve">
          <source>a to b repetitions of x</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c51b05b70b3433dc55847cb345257c6b1f51a6b" translate="yes" xml:space="preserve">
          <source>a.b.c.d becomes ::a.b.c.d</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47b2782b7a9f65de5ea3233ec8694e06dc0fda08" translate="yes" xml:space="preserve">
          <source>a.b.c.d becomes ::ffff:a.b.c.d</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07523927973c128520eb9b8598bda2ce98a37579" translate="yes" xml:space="preserve">
          <source>aarch64</source>
          <target state="translated">aarch64</target>
        </trans-unit>
        <trans-unit id="b61646f016483b318b49a910668a966b6ce09ede" translate="yes" xml:space="preserve">
          <source>abort</source>
          <target state="translated">abort</target>
        </trans-unit>
        <trans-unit id="782fd1504901e4fed3c082d147dd6f71e84d5e1a" translate="yes" xml:space="preserve">
          <source>abs_sub</source>
          <target state="translated">abs_sub</target>
        </trans-unit>
        <trans-unit id="5e942a2261672f81ad3519b878a9265eb44fdeba" translate="yes" xml:space="preserve">
          <source>acc</source>
          <target state="translated">acc</target>
        </trans-unit>
        <trans-unit id="9c8b74630568535e88482861294374d8249be802" translate="yes" xml:space="preserve">
          <source>add_assign</source>
          <target state="translated">add_assign</target>
        </trans-unit>
        <trans-unit id="16f4abebb856c512808647f8e82243a474a2f91d" translate="yes" xml:space="preserve">
          <source>add_one</source>
          <target state="translated">add_one</target>
        </trans-unit>
        <trans-unit id="755764ecd42eaa6a0fc8ddfe961aafb684f488d9" translate="yes" xml:space="preserve">
          <source>add_usize</source>
          <target state="translated">add_usize</target>
        </trans-unit>
        <trans-unit id="8d385b76f77849563dbd2cda6d05681c26b5b43d" translate="yes" xml:space="preserve">
          <source>add_with_overflow</source>
          <target state="translated">add_with_overflow</target>
        </trans-unit>
        <trans-unit id="5a463572d1b981e2a77872b15e955c3eb7d1b4c7" translate="yes" xml:space="preserve">
          <source>addresses reserved for future protocols (see &lt;a href=&quot;#method.is_ietf_protocol_assignment&quot;&gt;&lt;code&gt;is_ietf_protocol_assignment()&lt;/code&gt;&lt;/a&gt;, except &lt;code&gt;192.0.0.9/32&lt;/code&gt; and &lt;code&gt;192.0.0.10/32&lt;/code&gt; which are globally routable</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9660633f2412a0146298b33abcc1cf1dcd28b534" translate="yes" xml:space="preserve">
          <source>addresses reserved for future use (see &lt;a href=&quot;#method.is_reserved&quot;&gt;&lt;code&gt;is_reserved()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="953671a24573e569fdbbac82548a708002db4d25" translate="yes" xml:space="preserve">
          <source>addresses reserved for networking devices benchmarking (see &lt;a href=&quot;#method.is_benchmarking&quot;&gt;&lt;code&gt;is_benchmarking&lt;/code&gt;&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5693c5e18a441f4318ebbf81dedded945498666" translate="yes" xml:space="preserve">
          <source>addresses used for documentation (see &lt;a href=&quot;#method.is_documentation&quot;&gt;&lt;code&gt;is_documentation()&lt;/code&gt;&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3dcb342000bb87b3fc28a7b5282adcb207b55ae6" translate="yes" xml:space="preserve">
          <source>align_of</source>
          <target state="translated">align_of</target>
        </trans-unit>
        <trans-unit id="4a91d73389d47986a22fee1f008325c2fa351989" translate="yes" xml:space="preserve">
          <source>align_of_val</source>
          <target state="translated">align_of_val</target>
        </trans-unit>
        <trans-unit id="48a6f93cb24e6643f518cc5dcd2342af8ddb6f65" translate="yes" xml:space="preserve">
          <source>align_offset</source>
          <target state="translated">align_offset</target>
        </trans-unit>
        <trans-unit id="8fd9650b13d1ce9bee4a58170bb608a95b2071dc" translate="yes" xml:space="preserve">
          <source>align_to</source>
          <target state="translated">align_to</target>
        </trans-unit>
        <trans-unit id="fe9b130c16dddfa6ab27f685be9693f1dc39c95e" translate="yes" xml:space="preserve">
          <source>align_to_mut</source>
          <target state="translated">align_to_mut</target>
        </trans-unit>
        <trans-unit id="d87c448044defb778f33158d8ccf94a20531d600" translate="yes" xml:space="preserve">
          <source>all</source>
          <target state="translated">all</target>
        </trans-unit>
        <trans-unit id="8188b14a369cc678029ffe3cd259baf48dbf1fcf" translate="yes" xml:space="preserve">
          <source>all of the parameters being passed to the trait (if there are any) are also foreign.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="acaab3b723a4d70b19f7b4e34895a97f703f7ab8" translate="yes" xml:space="preserve">
          <source>alloc</source>
          <target state="translated">alloc</target>
        </trans-unit>
        <trans-unit id="3713d3e4247c1756e011831d31e7fb3ce237ec16" translate="yes" xml:space="preserve">
          <source>alloc::Alloc</source>
          <target state="translated">alloc::Alloc</target>
        </trans-unit>
        <trans-unit id="8d87eec0a803461d44fe8f6cc6db8702bbaa76c6" translate="yes" xml:space="preserve">
          <source>alloc::AllocErr</source>
          <target state="translated">alloc::AllocErr</target>
        </trans-unit>
        <trans-unit id="4cce4392d71abbffbbdc08a7792b3cceda750be6" translate="yes" xml:space="preserve">
          <source>alloc::CannotReallocInPlace</source>
          <target state="translated">alloc::CannotReallocInPlace</target>
        </trans-unit>
        <trans-unit id="04ee81a211afeff3b00e1961369036f4df16f1fa" translate="yes" xml:space="preserve">
          <source>alloc::Excess</source>
          <target state="translated">alloc::Excess</target>
        </trans-unit>
        <trans-unit id="72e441992369146b5c630c320b71ae7644725fb6" translate="yes" xml:space="preserve">
          <source>alloc::Global</source>
          <target state="translated">alloc::Global</target>
        </trans-unit>
        <trans-unit id="2da52f8d041f4b6b6d7a5b78c2fe8b0b115d9adf" translate="yes" xml:space="preserve">
          <source>alloc::GlobalAlloc</source>
          <target state="translated">alloc::GlobalAlloc</target>
        </trans-unit>
        <trans-unit id="81ea5ce016a204638e49fe774145862d34f7f7b3" translate="yes" xml:space="preserve">
          <source>alloc::Layout</source>
          <target state="translated">alloc::Layout</target>
        </trans-unit>
        <trans-unit id="f9d53658fdbb711766951d7de7bb887d5a628901" translate="yes" xml:space="preserve">
          <source>alloc::LayoutErr</source>
          <target state="translated">alloc::LayoutErr</target>
        </trans-unit>
        <trans-unit id="9691e5f9c2fc33f4bf70bb1a4b99f5d5ba5256be" translate="yes" xml:space="preserve">
          <source>alloc::System</source>
          <target state="translated">alloc::System</target>
        </trans-unit>
        <trans-unit id="ebacf0d42a5ef2f044e83d33a2012a0e9e3eb6fa" translate="yes" xml:space="preserve">
          <source>alloc::alloc</source>
          <target state="translated">alloc::alloc</target>
        </trans-unit>
        <trans-unit id="fe17f70a9e00f141a863343a38d8f3374fea879b" translate="yes" xml:space="preserve">
          <source>alloc::alloc_zeroed</source>
          <target state="translated">alloc::alloc_zeroed</target>
        </trans-unit>
        <trans-unit id="5ee897a217667f07dd12b0fd9f87ec180eb24201" translate="yes" xml:space="preserve">
          <source>alloc::dealloc</source>
          <target state="translated">alloc::dealloc</target>
        </trans-unit>
        <trans-unit id="53acb68d436478455357d483a3c6669e6275729b" translate="yes" xml:space="preserve">
          <source>alloc::handle_alloc_error</source>
          <target state="translated">alloc::handle_alloc_error</target>
        </trans-unit>
        <trans-unit id="52dccb1813c0a4bca67362ff318dae25873cbe68" translate="yes" xml:space="preserve">
          <source>alloc::realloc</source>
          <target state="translated">alloc::realloc</target>
        </trans-unit>
        <trans-unit id="09693d6a818612835d2dd30b1e3aacf597b5a024" translate="yes" xml:space="preserve">
          <source>alloc::set_alloc_error_hook</source>
          <target state="translated">alloc::set_alloc_error_hook</target>
        </trans-unit>
        <trans-unit id="6238019fc16e586c11cd68e7caef6f0063729da5" translate="yes" xml:space="preserve">
          <source>alloc::take_alloc_error_hook</source>
          <target state="translated">alloc::take_alloc_error_hook</target>
        </trans-unit>
        <trans-unit id="83c53ed88121cf9d87a33fa7d50a508abfd10904" translate="yes" xml:space="preserve">
          <source>alloc_zeroed</source>
          <target state="translated">alloc_zeroed</target>
        </trans-unit>
        <trans-unit id="6656018ac96d0295d887ff2893ba9af66ae16af2" translate="yes" xml:space="preserve">
          <source>always</source>
          <target state="translated">always</target>
        </trans-unit>
        <trans-unit id="981163b46efc6d8075aa470b37bda62ed3a3fefc" translate="yes" xml:space="preserve">
          <source>and could then be used to compare a &lt;code&gt;&amp;amp;'a T&lt;/code&gt; with any lifetime to an &lt;code&gt;i32&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="750052fe8a8bd846ac8928c5e6db02c6adcc76b1" translate="yes" xml:space="preserve">
          <source>and now when you call &lt;code&gt;.is_null()&lt;/code&gt; on a raw pointer to &lt;code&gt;Foo&lt;/code&gt;, there's ambiguity.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83e43f9b49b3ffcd306011c0c115dce47d2c5f24" translate="yes" xml:space="preserve">
          <source>and on numeric bindings without an identified concrete type:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c508147b589249a6b3b7c430ecd3d94b45db749" translate="yes" xml:space="preserve">
          <source>and where &lt;code&gt;T&lt;/code&gt; can obtained from &lt;code&gt;U&lt;/code&gt; by &lt;a href=&quot;type-coercions#unsized-coercions&quot;&gt;unsized coercion&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4bbe5b7a4c1eb55652965aee885dd59bd2ee7f4" translate="yes" xml:space="preserve">
          <source>android</source>
          <target state="translated">android</target>
        </trans-unit>
        <trans-unit id="862f53b167b146a23f5518e5145f6a6245bb02b6" translate="yes" xml:space="preserve">
          <source>antisymmetry: if &lt;code&gt;a &amp;lt; b&lt;/code&gt; then &lt;code&gt;!(a &amp;gt; b)&lt;/code&gt;, as well as &lt;code&gt;a &amp;gt; b&lt;/code&gt; implying &lt;code&gt;!(a &amp;lt; b)&lt;/code&gt;; and</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5fe0200d1c7a5139bd18fd22268c4ca8bf45e90" translate="yes" xml:space="preserve">
          <source>any</source>
          <target state="translated">any</target>
        </trans-unit>
        <trans-unit id="fcaadfb6866dc10bfd8f8a29b0f4461b0ed50edb" translate="yes" xml:space="preserve">
          <source>any::Any</source>
          <target state="translated">any::Any</target>
        </trans-unit>
        <trans-unit id="e62666f13dea1258f065ef147656435c17f6f877" translate="yes" xml:space="preserve">
          <source>any::TypeId</source>
          <target state="translated">any::TypeId</target>
        </trans-unit>
        <trans-unit id="db43bff34c78044870bc6b1ae2aa16902bb1bb8a" translate="yes" xml:space="preserve">
          <source>append</source>
          <target state="translated">append</target>
        </trans-unit>
        <trans-unit id="5a36f117812e69f1a5ab7e32a43b6e3db24618b2" translate="yes" xml:space="preserve">
          <source>arch</source>
          <target state="translated">arch</target>
        </trans-unit>
        <trans-unit id="6869438e303080030907368fe4c6f5f0725e38c3" translate="yes" xml:space="preserve">
          <source>are currently twice the size of the size of &lt;code&gt;usize&lt;/code&gt; and have the same alignment.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34b7b49d8b2d0d7a2ec6f158126a2d20e7c98feb" translate="yes" xml:space="preserve">
          <source>are sized but have twice the size of pointers to sized types</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3030e728f154bf51419109efb93b6b8aeec9a976" translate="yes" xml:space="preserve">
          <source>args</source>
          <target state="translated">args</target>
        </trans-unit>
        <trans-unit id="48778bb6c00326b7e6a0d1662f8a94bbc37c9546" translate="yes" xml:space="preserve">
          <source>args_os</source>
          <target state="translated">args_os</target>
        </trans-unit>
        <trans-unit id="045d233d93fbbdefab87c28c0ad65f24ce0f1c7d" translate="yes" xml:space="preserve">
          <source>arith_offset</source>
          <target state="translated">arith_offset</target>
        </trans-unit>
        <trans-unit id="ed945d6b996ff45657c9dc7772143a932c322b66" translate="yes" xml:space="preserve">
          <source>arm</source>
          <target state="translated">arm</target>
        </trans-unit>
        <trans-unit id="19edc1210777ba4d45049c29280d9cc5e1064c25" translate="yes" xml:space="preserve">
          <source>array</source>
          <target state="translated">array</target>
        </trans-unit>
        <trans-unit id="e5ce86c664fd0b87557de3c6117a6d06a224c624" translate="yes" xml:space="preserve">
          <source>array::FixedSizeArray</source>
          <target state="translated">array::FixedSizeArray</target>
        </trans-unit>
        <trans-unit id="1f643f3f224ce56cf13979ca408c876ab93bb124" translate="yes" xml:space="preserve">
          <source>array::TryFromSliceError</source>
          <target state="translated">array::TryFromSliceError</target>
        </trans-unit>
        <trans-unit id="df211ccdd94a63e0bcb9e6ae427a249484a49d60" translate="yes" xml:space="preserve">
          <source>as</source>
          <target state="translated">as</target>
        </trans-unit>
        <trans-unit id="badc4a91c98d928559c19cee96643cd42e973bcf" translate="yes" xml:space="preserve">
          <source>as the last field, this makes the struct itself a</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c798375d2a33b0ae1748ea9e4ac742d81db73080" translate="yes" xml:space="preserve">
          <source>as_bytes</source>
          <target state="translated">as_bytes</target>
        </trans-unit>
        <trans-unit id="1f533defd46c67e831964c1e616953a28424b7f5" translate="yes" xml:space="preserve">
          <source>as_bytes_mut</source>
          <target state="translated">as_bytes_mut</target>
        </trans-unit>
        <trans-unit id="52da7662237f69daa7d7a65b736976bff9628709" translate="yes" xml:space="preserve">
          <source>as_mut</source>
          <target state="translated">as_mut</target>
        </trans-unit>
        <trans-unit id="d10eacb9b05c486f78af4f450aa7999a755d7f47" translate="yes" xml:space="preserve">
          <source>as_mut_ptr</source>
          <target state="translated">as_mut_ptr</target>
        </trans-unit>
        <trans-unit id="1424c5f52b2a89c2260a4530461f91fd04cf8846" translate="yes" xml:space="preserve">
          <source>as_ptr</source>
          <target state="translated">as_ptr</target>
        </trans-unit>
        <trans-unit id="7dc5622cc05f24a7d3db4a0f7d0923ecf2e16317" translate="yes" xml:space="preserve">
          <source>as_ref</source>
          <target state="translated">as_ref</target>
        </trans-unit>
        <trans-unit id="51c066b36ea8b32076964c766f8a0324ca4eb4b9" translate="yes" xml:space="preserve">
          <source>ascii</source>
          <target state="translated">ascii</target>
        </trans-unit>
        <trans-unit id="8ff1681a25b20c801bab8d73419337ee027db723" translate="yes" xml:space="preserve">
          <source>ascii::AsciiExt</source>
          <target state="translated">ascii::AsciiExt</target>
        </trans-unit>
        <trans-unit id="631e6859a5283c4e1135cc6f0054124d31b03481" translate="yes" xml:space="preserve">
          <source>ascii::EscapeDefault</source>
          <target state="translated">ascii::EscapeDefault</target>
        </trans-unit>
        <trans-unit id="e39cf84b9e88706e01aef55a1ee0fd10c8c53f5c" translate="yes" xml:space="preserve">
          <source>ascii::escape_default</source>
          <target state="translated">ascii::escape_default</target>
        </trans-unit>
        <trans-unit id="64b5daad5073849378993ba34e058d7008293097" translate="yes" xml:space="preserve">
          <source>assert</source>
          <target state="translated">assert</target>
        </trans-unit>
        <trans-unit id="3840580c19afa4bd03926d19f4f003660cb2b1b8" translate="yes" xml:space="preserve">
          <source>assert_eq</source>
          <target state="translated">assert_eq</target>
        </trans-unit>
        <trans-unit id="a328184c40212d1416d200e858e5d60641623ea2" translate="yes" xml:space="preserve">
          <source>assert_ne</source>
          <target state="translated">assert_ne</target>
        </trans-unit>
        <trans-unit id="95886eb5950d0e3e0f1cf8b99cae0bcda0b8b6bd" translate="yes" xml:space="preserve">
          <source>assignment expressions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="241954bcee907f91569ccd514a342043fd26e596" translate="yes" xml:space="preserve">
          <source>assignment operator expressions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc4d2630d28bd6a59b5c16b34c34459847319470" translate="yes" xml:space="preserve">
          <source>associated const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0cbaf578cca42685324c8949ca6d772281db3705" translate="yes" xml:space="preserve">
          <source>associated constants</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="661e458eab49bd0ad82cd227b289bfba18305cab" translate="yes" xml:space="preserve">
          <source>assume</source>
          <target state="translated">assume</target>
        </trans-unit>
        <trans-unit id="b7e04b33fdd186ab6bd2deace04ea6b551b9bd4a" translate="yes" xml:space="preserve">
          <source>async</source>
          <target state="translated">async</target>
        </trans-unit>
        <trans-unit id="4e91475d3fae49d1a8a60862b1dbc2d921e7d999" translate="yes" xml:space="preserve">
          <source>atomic</source>
          <target state="translated">atomic</target>
        </trans-unit>
        <trans-unit id="1034a8bcf2ad5bdd2850f2610b72cc5d8b5cacd0" translate="yes" xml:space="preserve">
          <source>atomic::ATOMIC_BOOL_INIT</source>
          <target state="translated">atomic::ATOMIC_BOOL_INIT</target>
        </trans-unit>
        <trans-unit id="cb36c03949d5460f110653c4b99850e82c82d39e" translate="yes" xml:space="preserve">
          <source>atomic::ATOMIC_I16_INIT</source>
          <target state="translated">atomic::ATOMIC_I16_INIT</target>
        </trans-unit>
        <trans-unit id="24de024fd396c57aa3f8d28976612731bf63ab57" translate="yes" xml:space="preserve">
          <source>atomic::ATOMIC_I32_INIT</source>
          <target state="translated">atomic::ATOMIC_I32_INIT</target>
        </trans-unit>
        <trans-unit id="353641497ac3b792f0bd7c4ad7ae5317898a5f70" translate="yes" xml:space="preserve">
          <source>atomic::ATOMIC_I64_INIT</source>
          <target state="translated">atomic::ATOMIC_I64_INIT</target>
        </trans-unit>
        <trans-unit id="5a761269fad3a89dc33d8f755274af9d09eff49e" translate="yes" xml:space="preserve">
          <source>atomic::ATOMIC_I8_INIT</source>
          <target state="translated">atomic::ATOMIC_I8_INIT</target>
        </trans-unit>
        <trans-unit id="d03ea86ea8623584b9728ef4029482119760f5c6" translate="yes" xml:space="preserve">
          <source>atomic::ATOMIC_ISIZE_INIT</source>
          <target state="translated">atomic::ATOMIC_ISIZE_INIT</target>
        </trans-unit>
        <trans-unit id="92332432ba0fbc47a06b86969d84ba4db7cafb48" translate="yes" xml:space="preserve">
          <source>atomic::ATOMIC_U16_INIT</source>
          <target state="translated">atomic::ATOMIC_U16_INIT</target>
        </trans-unit>
        <trans-unit id="6c1385da3b8d9212f7c6f7026e370b634ed8ef6b" translate="yes" xml:space="preserve">
          <source>atomic::ATOMIC_U32_INIT</source>
          <target state="translated">atomic::ATOMIC_U32_INIT</target>
        </trans-unit>
        <trans-unit id="8e01c88191c644638f1a52cdbfb0143307818d5c" translate="yes" xml:space="preserve">
          <source>atomic::ATOMIC_U64_INIT</source>
          <target state="translated">atomic::ATOMIC_U64_INIT</target>
        </trans-unit>
        <trans-unit id="05a5c9ec17d69ac5645d8480a8ba56a3b9f60c10" translate="yes" xml:space="preserve">
          <source>atomic::ATOMIC_U8_INIT</source>
          <target state="translated">atomic::ATOMIC_U8_INIT</target>
        </trans-unit>
        <trans-unit id="ba762c5512ab8a24b14de314147f8bffe57c970f" translate="yes" xml:space="preserve">
          <source>atomic::ATOMIC_USIZE_INIT</source>
          <target state="translated">atomic::ATOMIC_USIZE_INIT</target>
        </trans-unit>
        <trans-unit id="05de1793602602f47c254dc6cdb8167dc5edc7a0" translate="yes" xml:space="preserve">
          <source>atomic::AtomicBool</source>
          <target state="translated">atomic::AtomicBool</target>
        </trans-unit>
        <trans-unit id="9e447c2ab00cf39b9b1d6620d6a9fed3ea808a70" translate="yes" xml:space="preserve">
          <source>atomic::AtomicBool::borrow</source>
          <target state="translated">atomic::AtomicBool::borrow</target>
        </trans-unit>
        <trans-unit id="c68ee51e8f6beb9fa67b654fcfe7ef87f8d61549" translate="yes" xml:space="preserve">
          <source>atomic::AtomicBool::borrow_mut</source>
          <target state="translated">atomic::AtomicBool::borrow_mut</target>
        </trans-unit>
        <trans-unit id="bc7ece4795eca86a32c44d9b7a6d1ee964ec8b04" translate="yes" xml:space="preserve">
          <source>atomic::AtomicBool::compare_and_swap</source>
          <target state="translated">atomic::AtomicBool::compare_and_swap</target>
        </trans-unit>
        <trans-unit id="01227e5752be472ddee52522cd84b709c04bba82" translate="yes" xml:space="preserve">
          <source>atomic::AtomicBool::compare_exchange</source>
          <target state="translated">atomic::AtomicBool::compare_exchange</target>
        </trans-unit>
        <trans-unit id="c51061da01ac56bfc7ef042518593dd67a5c3034" translate="yes" xml:space="preserve">
          <source>atomic::AtomicBool::compare_exchange_weak</source>
          <target state="translated">atomic::AtomicBool::compare_exchange_weak</target>
        </trans-unit>
        <trans-unit id="9576bb081dd4bbf07787542167ea0ab69723c39b" translate="yes" xml:space="preserve">
          <source>atomic::AtomicBool::default</source>
          <target state="translated">atomic::AtomicBool::default</target>
        </trans-unit>
        <trans-unit id="e224b6c248d56b984f9726a5beb37a693cd1c26f" translate="yes" xml:space="preserve">
          <source>atomic::AtomicBool::fetch_and</source>
          <target state="translated">atomic::AtomicBool::fetch_and</target>
        </trans-unit>
        <trans-unit id="e2669df7c8a6850212a769803528a130a2b8a7c5" translate="yes" xml:space="preserve">
          <source>atomic::AtomicBool::fetch_nand</source>
          <target state="translated">atomic::AtomicBool::fetch_nand</target>
        </trans-unit>
        <trans-unit id="fa0c8f48069ecf23ccd8592d95597742aa301c67" translate="yes" xml:space="preserve">
          <source>atomic::AtomicBool::fetch_or</source>
          <target state="translated">atomic::AtomicBool::fetch_or</target>
        </trans-unit>
        <trans-unit id="cb1fc72f7695672c3590d6f3ac06d9ed3870d6d9" translate="yes" xml:space="preserve">
          <source>atomic::AtomicBool::fetch_xor</source>
          <target state="translated">atomic::AtomicBool::fetch_xor</target>
        </trans-unit>
        <trans-unit id="8aac84ec1b2dc679800d4128137ddefa4df78ba7" translate="yes" xml:space="preserve">
          <source>atomic::AtomicBool::fmt</source>
          <target state="translated">atomic::AtomicBool::fmt</target>
        </trans-unit>
        <trans-unit id="8c34405c7774e5da67ee635b1e41c55c72ca251f" translate="yes" xml:space="preserve">
          <source>atomic::AtomicBool::from</source>
          <target state="translated">atomic::AtomicBool::from</target>
        </trans-unit>
        <trans-unit id="4f92b1b994bacbe7ba2c5bea8ef9d22028a4db02" translate="yes" xml:space="preserve">
          <source>atomic::AtomicBool::get_mut</source>
          <target state="translated">atomic::AtomicBool::get_mut</target>
        </trans-unit>
        <trans-unit id="8e53a1ed715929c5c080f09402205e9d95990bd7" translate="yes" xml:space="preserve">
          <source>atomic::AtomicBool::into</source>
          <target state="translated">atomic::AtomicBool::into</target>
        </trans-unit>
        <trans-unit id="2749989a620ef7214d755b45f3251ac035fb4a9c" translate="yes" xml:space="preserve">
          <source>atomic::AtomicBool::into_inner</source>
          <target state="translated">atomic::AtomicBool::into_inner</target>
        </trans-unit>
        <trans-unit id="2efae13f5b2a0971201d319863a78cda80b7a900" translate="yes" xml:space="preserve">
          <source>atomic::AtomicBool::load</source>
          <target state="translated">atomic::AtomicBool::load</target>
        </trans-unit>
        <trans-unit id="f68fd070f0f1344260dab31e9b4695338a5ba485" translate="yes" xml:space="preserve">
          <source>atomic::AtomicBool::new</source>
          <target state="translated">atomic::AtomicBool::new</target>
        </trans-unit>
        <trans-unit id="1f86f68a036b612d378be870c0d9606e953e7c48" translate="yes" xml:space="preserve">
          <source>atomic::AtomicBool::store</source>
          <target state="translated">atomic::AtomicBool::store</target>
        </trans-unit>
        <trans-unit id="979bcef2cc797d278750e287864a6718aa6ce759" translate="yes" xml:space="preserve">
          <source>atomic::AtomicBool::swap</source>
          <target state="translated">atomic::AtomicBool::swap</target>
        </trans-unit>
        <trans-unit id="de75d37b23563f424dafec4869f7fecf9fb72e77" translate="yes" xml:space="preserve">
          <source>atomic::AtomicBool::try_from</source>
          <target state="translated">atomic::AtomicBool::try_from</target>
        </trans-unit>
        <trans-unit id="8a7b63ebd2971777046807fd53d5b5991226d2b1" translate="yes" xml:space="preserve">
          <source>atomic::AtomicBool::try_into</source>
          <target state="translated">atomic::AtomicBool::try_into</target>
        </trans-unit>
        <trans-unit id="35b06bd23a929d5665b1b36f5dad39ad3c49d572" translate="yes" xml:space="preserve">
          <source>atomic::AtomicBool::type_id</source>
          <target state="translated">atomic::AtomicBool::type_id</target>
        </trans-unit>
        <trans-unit id="4763c7b929cba0a74bfe999658220d6a7af2729a" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI16</source>
          <target state="translated">atomic::AtomicI16</target>
        </trans-unit>
        <trans-unit id="4a3407a0c208408f64fffcd651dc9e68f2678628" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI16::borrow</source>
          <target state="translated">atomic::AtomicI16::borrow</target>
        </trans-unit>
        <trans-unit id="7037eb7a323ec4161bf529efcb7b357a6c93f480" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI16::borrow_mut</source>
          <target state="translated">atomic::AtomicI16::borrow_mut</target>
        </trans-unit>
        <trans-unit id="48609070164ed4bbb83c2b159b883c68021a672f" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI16::compare_and_swap</source>
          <target state="translated">atomic::AtomicI16::compare_and_swap</target>
        </trans-unit>
        <trans-unit id="1fe2f96c308ef6f3b40a75646de550a13724a1f5" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI16::compare_exchange</source>
          <target state="translated">atomic::AtomicI16::compare_exchange</target>
        </trans-unit>
        <trans-unit id="2aa21457fb1c32f17e7367b91c794fde64f446df" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI16::compare_exchange_weak</source>
          <target state="translated">atomic::AtomicI16::compare_exchange_weak</target>
        </trans-unit>
        <trans-unit id="799632b0a2380281a16a7e6c7ba965cbe7a8dedc" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI16::default</source>
          <target state="translated">atomic::AtomicI16::default</target>
        </trans-unit>
        <trans-unit id="608c3938543496558fee6ae098033e7192fee777" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI16::fetch_add</source>
          <target state="translated">atomic::AtomicI16::fetch_add</target>
        </trans-unit>
        <trans-unit id="1accec5a63bb7e8931ef4aee6c4b1939e9e5c033" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI16::fetch_and</source>
          <target state="translated">atomic::AtomicI16::fetch_and</target>
        </trans-unit>
        <trans-unit id="68f7561959c96363577e1f69cf706e170b15b971" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI16::fetch_max</source>
          <target state="translated">atomic::AtomicI16::fetch_max</target>
        </trans-unit>
        <trans-unit id="7f6c831b7b705a65008f977164d29ea3da8c4f16" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI16::fetch_min</source>
          <target state="translated">atomic::AtomicI16::fetch_min</target>
        </trans-unit>
        <trans-unit id="1e319a1551d9113cfd4c8d2e7c520bd5aab85b42" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI16::fetch_nand</source>
          <target state="translated">atomic::AtomicI16::fetch_nand</target>
        </trans-unit>
        <trans-unit id="ac0486175db2c33d1793a4f2e5dfe7178abf81f1" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI16::fetch_or</source>
          <target state="translated">atomic::AtomicI16::fetch_or</target>
        </trans-unit>
        <trans-unit id="065e2dcf4f6a4454eb6580ea06fa21e93009d938" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI16::fetch_sub</source>
          <target state="translated">atomic::AtomicI16::fetch_sub</target>
        </trans-unit>
        <trans-unit id="22fc903a12f2b17023b59c6aa62820d840711234" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI16::fetch_update</source>
          <target state="translated">atomic::AtomicI16::fetch_update</target>
        </trans-unit>
        <trans-unit id="36b880de08802099718d328a53bc9c940c762ff2" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI16::fetch_xor</source>
          <target state="translated">atomic::AtomicI16::fetch_xor</target>
        </trans-unit>
        <trans-unit id="b0461e75adc05e5b3f478464649401bf20bd0785" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI16::fmt</source>
          <target state="translated">atomic::AtomicI16::fmt</target>
        </trans-unit>
        <trans-unit id="5c68ce5e4f3872b3f6a8db280ce1f397536427b4" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI16::from</source>
          <target state="translated">atomic::AtomicI16::from</target>
        </trans-unit>
        <trans-unit id="85d5f213c65716baa177acfed9bba6e56bc8c092" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI16::get_mut</source>
          <target state="translated">atomic::AtomicI16::get_mut</target>
        </trans-unit>
        <trans-unit id="5af35cdcca6e2d7eeeb0268da8d15d3ca383798a" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI16::into</source>
          <target state="translated">atomic::AtomicI16::into</target>
        </trans-unit>
        <trans-unit id="fd0c45f1d5385723f287e79d69083b5d78513417" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI16::into_inner</source>
          <target state="translated">atomic::AtomicI16::into_inner</target>
        </trans-unit>
        <trans-unit id="2a86d1845f08b1f6f9de8dab854ffd5944f281db" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI16::load</source>
          <target state="translated">atomic::AtomicI16::load</target>
        </trans-unit>
        <trans-unit id="a355bbe62c010a6b5ecb8cb2c7a093277b18bc4e" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI16::new</source>
          <target state="translated">atomic::AtomicI16::new</target>
        </trans-unit>
        <trans-unit id="d00cb68b66360ce9a43e35aafe48e8ff0c2f663f" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI16::store</source>
          <target state="translated">atomic::AtomicI16::store</target>
        </trans-unit>
        <trans-unit id="7c19cdcb8dc8c74fcc8fd3f29b46dd2c72892dda" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI16::swap</source>
          <target state="translated">atomic::AtomicI16::swap</target>
        </trans-unit>
        <trans-unit id="d846a4119052ce671cc1eec70756733f3c9a0b8b" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI16::try_from</source>
          <target state="translated">atomic::AtomicI16::try_from</target>
        </trans-unit>
        <trans-unit id="f92121d1f6656512ce1c0dc89ca64a6879c2fe79" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI16::try_into</source>
          <target state="translated">atomic::AtomicI16::try_into</target>
        </trans-unit>
        <trans-unit id="678752fc5452c5dcb3a958ac911922fc70f1cfa1" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI16::type_id</source>
          <target state="translated">atomic::AtomicI16::type_id</target>
        </trans-unit>
        <trans-unit id="25c12562a118afb89821c1149f447cbcfef85c8f" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI32</source>
          <target state="translated">atomic::AtomicI32</target>
        </trans-unit>
        <trans-unit id="5899c06a26c90c55944ef5323b41290afa412ede" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI32::borrow</source>
          <target state="translated">atomic::AtomicI32::borrow</target>
        </trans-unit>
        <trans-unit id="0966d39a9c446ced0fe44115476f4ff4766599c3" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI32::borrow_mut</source>
          <target state="translated">atomic::AtomicI32::borrow_mut</target>
        </trans-unit>
        <trans-unit id="13a18501ad3adf521679e888018a5454713003ce" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI32::compare_and_swap</source>
          <target state="translated">atomic::AtomicI32::compare_and_swap</target>
        </trans-unit>
        <trans-unit id="ec2581f11e6f837c0e960b7825f4b082143ca0d5" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI32::compare_exchange</source>
          <target state="translated">atomic::AtomicI32::compare_exchange</target>
        </trans-unit>
        <trans-unit id="b36699c484284aff49f6b79fce15c99a8712bc67" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI32::compare_exchange_weak</source>
          <target state="translated">atomic::AtomicI32::compare_exchange_weak</target>
        </trans-unit>
        <trans-unit id="0cb8e46219c011f6ac55b79b5e3a3fa078b60d86" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI32::default</source>
          <target state="translated">atomic::AtomicI32::default</target>
        </trans-unit>
        <trans-unit id="afd4d186e6b557c1730e240a41b7f1268291a4aa" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI32::fetch_add</source>
          <target state="translated">atomic::AtomicI32::fetch_add</target>
        </trans-unit>
        <trans-unit id="fa601edbd25fd48775781f20f100f8f784b0802e" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI32::fetch_and</source>
          <target state="translated">atomic::AtomicI32::fetch_and</target>
        </trans-unit>
        <trans-unit id="bc614c60229af7ecebfb79759565bf3422894c8e" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI32::fetch_max</source>
          <target state="translated">atomic::AtomicI32::fetch_max</target>
        </trans-unit>
        <trans-unit id="64024a3f252b44a17ccb8e7c483dd5892e2dd7ec" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI32::fetch_min</source>
          <target state="translated">atomic::AtomicI32::fetch_min</target>
        </trans-unit>
        <trans-unit id="fa15286576c1b5b72e3632d0d8bd8be0df4a41ab" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI32::fetch_nand</source>
          <target state="translated">atomic::AtomicI32::fetch_nand</target>
        </trans-unit>
        <trans-unit id="c3f4e128406fee001d99a1a8910a8ae89882d264" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI32::fetch_or</source>
          <target state="translated">atomic::AtomicI32::fetch_or</target>
        </trans-unit>
        <trans-unit id="c25081618fbe7a3e8d18e0af84198d64a6823d90" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI32::fetch_sub</source>
          <target state="translated">atomic::AtomicI32::fetch_sub</target>
        </trans-unit>
        <trans-unit id="89e3a35480f5f86d305834c916dd65fb914f7794" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI32::fetch_update</source>
          <target state="translated">atomic::AtomicI32::fetch_update</target>
        </trans-unit>
        <trans-unit id="bddbf7266f3bf5687069b3417d75588451464303" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI32::fetch_xor</source>
          <target state="translated">atomic::AtomicI32::fetch_xor</target>
        </trans-unit>
        <trans-unit id="9e02c9847065cfd83e89e0ef1cc2655351ab9653" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI32::fmt</source>
          <target state="translated">atomic::AtomicI32::fmt</target>
        </trans-unit>
        <trans-unit id="df6c50a25963dfc88ceefcd2fce2828c8f503a9d" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI32::from</source>
          <target state="translated">atomic::AtomicI32::from</target>
        </trans-unit>
        <trans-unit id="e446b6cb394d3ef682fdf149c58edb16e1c74405" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI32::get_mut</source>
          <target state="translated">atomic::AtomicI32::get_mut</target>
        </trans-unit>
        <trans-unit id="5342af1fe3a9cffc7fd36eff6c10bda4ed49cc55" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI32::into</source>
          <target state="translated">atomic::AtomicI32::into</target>
        </trans-unit>
        <trans-unit id="53bc6a9c61b4afc9fac8c47be255368bc8b7b921" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI32::into_inner</source>
          <target state="translated">atomic::AtomicI32::into_inner</target>
        </trans-unit>
        <trans-unit id="9e6443bc2098fc93d0dde78516f3baf7576d6779" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI32::load</source>
          <target state="translated">atomic::AtomicI32::load</target>
        </trans-unit>
        <trans-unit id="460308e80acd1311b8d3ce763be27e96352d5ff8" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI32::new</source>
          <target state="translated">atomic::AtomicI32::new</target>
        </trans-unit>
        <trans-unit id="9173dbe5bc01be1b350ff1c2d67b6fe79ce8e2ed" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI32::store</source>
          <target state="translated">atomic::AtomicI32::store</target>
        </trans-unit>
        <trans-unit id="7baf7fa91d75cf1673c09d46956094386b38d4b9" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI32::swap</source>
          <target state="translated">atomic::AtomicI32::swap</target>
        </trans-unit>
        <trans-unit id="72886f817c275edd2b618836089bf7b2281241ea" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI32::try_from</source>
          <target state="translated">atomic::AtomicI32::try_from</target>
        </trans-unit>
        <trans-unit id="bd81c103b837f318ad018fbd088f2d0800c992cf" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI32::try_into</source>
          <target state="translated">atomic::AtomicI32::try_into</target>
        </trans-unit>
        <trans-unit id="1bfb15ee005dfd6a4aaf4b6239de0de2eb94f618" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI32::type_id</source>
          <target state="translated">atomic::AtomicI32::type_id</target>
        </trans-unit>
        <trans-unit id="4658c9137c64df71237409c2c82f3f80f256ea9f" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI64</source>
          <target state="translated">atomic::AtomicI64</target>
        </trans-unit>
        <trans-unit id="53cb25ac594629dd0b57f658fcb961f354882ede" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI64::borrow</source>
          <target state="translated">atomic::AtomicI64::borrow</target>
        </trans-unit>
        <trans-unit id="f3191a16fe03e553dfaa29b6cd62f203acacf84a" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI64::borrow_mut</source>
          <target state="translated">atomic::AtomicI64::borrow_mut</target>
        </trans-unit>
        <trans-unit id="fb3a72e8b9c3dc5229590d7187bbcfaf6e279570" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI64::compare_and_swap</source>
          <target state="translated">atomic::AtomicI64::compare_and_swap</target>
        </trans-unit>
        <trans-unit id="f64bbb7220344e1488b1372d516e0658dd8b9d80" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI64::compare_exchange</source>
          <target state="translated">atomic::AtomicI64::compare_exchange</target>
        </trans-unit>
        <trans-unit id="70a6fd8fa523244e0ddacae1678954fd98414732" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI64::compare_exchange_weak</source>
          <target state="translated">atomic::AtomicI64::compare_exchange_weak</target>
        </trans-unit>
        <trans-unit id="1626a76df410c0434b1acf1260ff369fdeb27dd6" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI64::default</source>
          <target state="translated">atomic::AtomicI64::default</target>
        </trans-unit>
        <trans-unit id="bf317f1c5437db6d11d6b2f8091487f98921632b" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI64::fetch_add</source>
          <target state="translated">atomic::AtomicI64::fetch_add</target>
        </trans-unit>
        <trans-unit id="bb415709063b27abb49ee436a390a7fd20ee569c" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI64::fetch_and</source>
          <target state="translated">atomic::AtomicI64::fetch_and</target>
        </trans-unit>
        <trans-unit id="a32efec4906cc6a9b404650721d58939a1d7dc7b" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI64::fetch_max</source>
          <target state="translated">atomic::AtomicI64::fetch_max</target>
        </trans-unit>
        <trans-unit id="a3ecc0c203a0c7ed8230ab4686b7d22b35a773f3" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI64::fetch_min</source>
          <target state="translated">atomic::AtomicI64::fetch_min</target>
        </trans-unit>
        <trans-unit id="021d477c83bd95c07a03e3d9686a861d8f2f6fc3" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI64::fetch_nand</source>
          <target state="translated">atomic::AtomicI64::fetch_nand</target>
        </trans-unit>
        <trans-unit id="2a9d4a8d3bd274c31d21399a4f7b4a37ff8e6e8f" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI64::fetch_or</source>
          <target state="translated">atomic::AtomicI64::fetch_or</target>
        </trans-unit>
        <trans-unit id="2922d5f38306e02c9ab39174e14d0e1ed3706be2" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI64::fetch_sub</source>
          <target state="translated">atomic::AtomicI64::fetch_sub</target>
        </trans-unit>
        <trans-unit id="e2b594a7064368f7bc7037c4eb89741a6503a8a6" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI64::fetch_update</source>
          <target state="translated">atomic::AtomicI64::fetch_update</target>
        </trans-unit>
        <trans-unit id="09f908d0dcb109a257c650a0f1639a4d211cb86d" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI64::fetch_xor</source>
          <target state="translated">atomic::AtomicI64::fetch_xor</target>
        </trans-unit>
        <trans-unit id="8d70028e6173a491bd38b0cbd066bfd416a9c6c8" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI64::fmt</source>
          <target state="translated">atomic::AtomicI64::fmt</target>
        </trans-unit>
        <trans-unit id="d2a525c38f4b819c856c4da1c85863d9df5ce17d" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI64::from</source>
          <target state="translated">atomic::AtomicI64::from</target>
        </trans-unit>
        <trans-unit id="c5ab7a5455d77b324da2665a43c9c5dfcae8b693" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI64::get_mut</source>
          <target state="translated">atomic::AtomicI64::get_mut</target>
        </trans-unit>
        <trans-unit id="7b23e4478a8b0229d75220946ffe26ec3f5305a0" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI64::into</source>
          <target state="translated">atomic::AtomicI64::into</target>
        </trans-unit>
        <trans-unit id="9a7d511910e7c6da7cf99af9154e139ed48d61bd" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI64::into_inner</source>
          <target state="translated">atomic::AtomicI64::into_inner</target>
        </trans-unit>
        <trans-unit id="380b0517f9fbd72aea00634fc1c0aa148e65e79b" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI64::load</source>
          <target state="translated">atomic::AtomicI64::load</target>
        </trans-unit>
        <trans-unit id="c5edd208d19895bd88b8a21af51e2091af80969f" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI64::new</source>
          <target state="translated">atomic::AtomicI64::new</target>
        </trans-unit>
        <trans-unit id="7667bf835c6c6d4d84faf5cfd9aa1fc4321d4a75" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI64::store</source>
          <target state="translated">atomic::AtomicI64::store</target>
        </trans-unit>
        <trans-unit id="fece5af0fd8c79b5c66f9d33c1cad15909803b49" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI64::swap</source>
          <target state="translated">atomic::AtomicI64::swap</target>
        </trans-unit>
        <trans-unit id="592113f7e67fdb170ac5350d72c565a5df32f97b" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI64::try_from</source>
          <target state="translated">atomic::AtomicI64::try_from</target>
        </trans-unit>
        <trans-unit id="f1f67adfce7ebc9bdfffea192a83bac9b0da8836" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI64::try_into</source>
          <target state="translated">atomic::AtomicI64::try_into</target>
        </trans-unit>
        <trans-unit id="d02fefa9b5dddcae5a446add46900a74cc9cfa0c" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI64::type_id</source>
          <target state="translated">atomic::AtomicI64::type_id</target>
        </trans-unit>
        <trans-unit id="17577aff5189c847532030470e98a297e268a8a4" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI8</source>
          <target state="translated">atomic::AtomicI8</target>
        </trans-unit>
        <trans-unit id="291a36b862275d6a3fcb7aa1c2a03435567ce5e4" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI8::borrow</source>
          <target state="translated">atomic::AtomicI8::borrow</target>
        </trans-unit>
        <trans-unit id="fa3d4b8caeaa1c5d4645e4134862b1de3cd5d8e1" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI8::borrow_mut</source>
          <target state="translated">atomic::AtomicI8::borrow_mut</target>
        </trans-unit>
        <trans-unit id="4a73c1b80e2d66316009eccbc375c82eb94c15d3" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI8::compare_and_swap</source>
          <target state="translated">atomic::AtomicI8::compare_and_swap</target>
        </trans-unit>
        <trans-unit id="f27ce33aaadced0c74f23e43576981e9bb80f428" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI8::compare_exchange</source>
          <target state="translated">atomic::AtomicI8::compare_exchange</target>
        </trans-unit>
        <trans-unit id="a1111a9ad31be46a4ec2448191dba1cd8e8302b8" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI8::compare_exchange_weak</source>
          <target state="translated">atomic::AtomicI8::compare_exchange_weak</target>
        </trans-unit>
        <trans-unit id="385fd670ccda01368b84be32c5edd5fa14fe0aed" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI8::default</source>
          <target state="translated">atomic::AtomicI8::default</target>
        </trans-unit>
        <trans-unit id="a56503da5fb407ffdbaacb272679ea4f711284d2" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI8::fetch_add</source>
          <target state="translated">atomic::AtomicI8::fetch_add</target>
        </trans-unit>
        <trans-unit id="54e0d7d5df084eff47d270846b00a3544a0c3d1b" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI8::fetch_and</source>
          <target state="translated">atomic::AtomicI8::fetch_and</target>
        </trans-unit>
        <trans-unit id="1a9ee3da7b6e91f402617c0e1411aa623933681e" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI8::fetch_max</source>
          <target state="translated">atomic::AtomicI8::fetch_max</target>
        </trans-unit>
        <trans-unit id="240eb67aaab8795e70f159b3ba007840ab9acd7b" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI8::fetch_min</source>
          <target state="translated">atomic::AtomicI8::fetch_min</target>
        </trans-unit>
        <trans-unit id="b6340fda6d30f88a99da5616b0ce6c80d8efa1bd" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI8::fetch_nand</source>
          <target state="translated">atomic::AtomicI8::fetch_nand</target>
        </trans-unit>
        <trans-unit id="673f0afe2eb4df2cefeb17918fef4f8c3543ed66" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI8::fetch_or</source>
          <target state="translated">atomic::AtomicI8::fetch_or</target>
        </trans-unit>
        <trans-unit id="a3d50c60f36eea518c58fb980d20f30650813fc6" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI8::fetch_sub</source>
          <target state="translated">atomic::AtomicI8::fetch_sub</target>
        </trans-unit>
        <trans-unit id="c4403b7778fc7040eb2075081873b3e997227837" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI8::fetch_update</source>
          <target state="translated">atomic::AtomicI8::fetch_update</target>
        </trans-unit>
        <trans-unit id="ddc8a90b9080f5825064e468f5a5623d389a3080" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI8::fetch_xor</source>
          <target state="translated">atomic::AtomicI8::fetch_xor</target>
        </trans-unit>
        <trans-unit id="f197bb76fcb1371ee491f486df2a69df3a984bd0" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI8::fmt</source>
          <target state="translated">atomic::AtomicI8::fmt</target>
        </trans-unit>
        <trans-unit id="5b5689ffc805240b6b054886dfa88a6a2f1b2e44" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI8::from</source>
          <target state="translated">atomic::AtomicI8::from</target>
        </trans-unit>
        <trans-unit id="637212c767e002698b6d1077e332796190019f83" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI8::get_mut</source>
          <target state="translated">atomic::AtomicI8::get_mut</target>
        </trans-unit>
        <trans-unit id="1f49ff8f6d891a2817d52c406e0a63f6457bf9da" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI8::into</source>
          <target state="translated">atomic::AtomicI8::into</target>
        </trans-unit>
        <trans-unit id="de9fe5c75d045664ef2b70d646c3622d2abd3dd9" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI8::into_inner</source>
          <target state="translated">atomic::AtomicI8::into_inner</target>
        </trans-unit>
        <trans-unit id="85a8f16b9c13d90146705e863b95304c7b396b44" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI8::load</source>
          <target state="translated">atomic::AtomicI8::load</target>
        </trans-unit>
        <trans-unit id="c61caab41602c693ef1233c9dfb3e4264da9bcbd" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI8::new</source>
          <target state="translated">atomic::AtomicI8::new</target>
        </trans-unit>
        <trans-unit id="69fb793bdcdf5d4a113b5eb2f377cd95a5425f47" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI8::store</source>
          <target state="translated">atomic::AtomicI8::store</target>
        </trans-unit>
        <trans-unit id="e718bcc3cf78b6180303cdba1952f40aa73a78e0" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI8::swap</source>
          <target state="translated">atomic::AtomicI8::swap</target>
        </trans-unit>
        <trans-unit id="861585dbeb7587c43d91f923e5ea5f81d9b01bb5" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI8::try_from</source>
          <target state="translated">atomic::AtomicI8::try_from</target>
        </trans-unit>
        <trans-unit id="ec6b2c1f0e497b05fd1dda3c94b64badbfedff38" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI8::try_into</source>
          <target state="translated">atomic::AtomicI8::try_into</target>
        </trans-unit>
        <trans-unit id="4ccea09c54fa7e235de836c6adc902cdbaa72a62" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI8::type_id</source>
          <target state="translated">atomic::AtomicI8::type_id</target>
        </trans-unit>
        <trans-unit id="bef11aed7b966a22dd0007945fff322aa0bfaeee" translate="yes" xml:space="preserve">
          <source>atomic::AtomicIsize</source>
          <target state="translated">atomic::AtomicIsize</target>
        </trans-unit>
        <trans-unit id="54362f382261d7c1ccbcff1042ffd4c2ab47b3f0" translate="yes" xml:space="preserve">
          <source>atomic::AtomicIsize::borrow</source>
          <target state="translated">atomic::AtomicIsize::borrow</target>
        </trans-unit>
        <trans-unit id="b8eeee1a6a0b27c83006c5323afccf4f5cc4296b" translate="yes" xml:space="preserve">
          <source>atomic::AtomicIsize::borrow_mut</source>
          <target state="translated">atomic::AtomicIsize::borrow_mut</target>
        </trans-unit>
        <trans-unit id="860a8fa7987b24c124e817e5e9c5bc53cd4f1b51" translate="yes" xml:space="preserve">
          <source>atomic::AtomicIsize::compare_and_swap</source>
          <target state="translated">atomic::AtomicIsize::compare_and_swap</target>
        </trans-unit>
        <trans-unit id="d8ddd0bb097ba68565eaa521c4435e06c5836b77" translate="yes" xml:space="preserve">
          <source>atomic::AtomicIsize::compare_exchange</source>
          <target state="translated">atomic::AtomicIsize::compare_exchange</target>
        </trans-unit>
        <trans-unit id="11462e1063e8ec917bcaf625a2a685eb6867e936" translate="yes" xml:space="preserve">
          <source>atomic::AtomicIsize::compare_exchange_weak</source>
          <target state="translated">atomic::AtomicIsize::compare_exchange_weak</target>
        </trans-unit>
        <trans-unit id="fb4dcb6189679a882dcb5af37d698632c09ee34d" translate="yes" xml:space="preserve">
          <source>atomic::AtomicIsize::default</source>
          <target state="translated">atomic::AtomicIsize::default</target>
        </trans-unit>
        <trans-unit id="36acbea7608269e507f89904aee4eab857a73815" translate="yes" xml:space="preserve">
          <source>atomic::AtomicIsize::fetch_add</source>
          <target state="translated">atomic::AtomicIsize::fetch_add</target>
        </trans-unit>
        <trans-unit id="53cea8a84e891cdd8fac3b13b8f267a1a3267068" translate="yes" xml:space="preserve">
          <source>atomic::AtomicIsize::fetch_and</source>
          <target state="translated">atomic::AtomicIsize::fetch_and</target>
        </trans-unit>
        <trans-unit id="f40ee191fc8f9035709e33e4c8994d19801e6c03" translate="yes" xml:space="preserve">
          <source>atomic::AtomicIsize::fetch_max</source>
          <target state="translated">atomic::AtomicIsize::fetch_max</target>
        </trans-unit>
        <trans-unit id="ec28eac891bbe9b9cb1a93426cf981dba1d2b7a4" translate="yes" xml:space="preserve">
          <source>atomic::AtomicIsize::fetch_min</source>
          <target state="translated">atomic::AtomicIsize::fetch_min</target>
        </trans-unit>
        <trans-unit id="d2c06deae406cf8d6788b3298755b5bf58942d61" translate="yes" xml:space="preserve">
          <source>atomic::AtomicIsize::fetch_nand</source>
          <target state="translated">atomic::AtomicIsize::fetch_nand</target>
        </trans-unit>
        <trans-unit id="be4282326da0d3952ba53d457a077ca56259827b" translate="yes" xml:space="preserve">
          <source>atomic::AtomicIsize::fetch_or</source>
          <target state="translated">atomic::AtomicIsize::fetch_or</target>
        </trans-unit>
        <trans-unit id="d10d494157b1500633d33fe7cd7a8876ebf3850e" translate="yes" xml:space="preserve">
          <source>atomic::AtomicIsize::fetch_sub</source>
          <target state="translated">atomic::AtomicIsize::fetch_sub</target>
        </trans-unit>
        <trans-unit id="dd30ef098d0b3aeaa27d2c469327853fe0a8b495" translate="yes" xml:space="preserve">
          <source>atomic::AtomicIsize::fetch_update</source>
          <target state="translated">atomic::AtomicIsize::fetch_update</target>
        </trans-unit>
        <trans-unit id="365d55c3894156f5b3bb1f5c68fd1b8c1dd71d30" translate="yes" xml:space="preserve">
          <source>atomic::AtomicIsize::fetch_xor</source>
          <target state="translated">atomic::AtomicIsize::fetch_xor</target>
        </trans-unit>
        <trans-unit id="90785850751942b1854862cf61f3fabd9b8f95ad" translate="yes" xml:space="preserve">
          <source>atomic::AtomicIsize::fmt</source>
          <target state="translated">atomic::AtomicIsize::fmt</target>
        </trans-unit>
        <trans-unit id="0c195e3dc08f6b0f48e0edd97391ccec6c4ae345" translate="yes" xml:space="preserve">
          <source>atomic::AtomicIsize::from</source>
          <target state="translated">atomic::AtomicIsize::from</target>
        </trans-unit>
        <trans-unit id="cef7ec90446c5e27dda6c36747015381178e62a2" translate="yes" xml:space="preserve">
          <source>atomic::AtomicIsize::get_mut</source>
          <target state="translated">atomic::AtomicIsize::get_mut</target>
        </trans-unit>
        <trans-unit id="d1a77ddb303e9ecaf6f571ddcacff3327098c635" translate="yes" xml:space="preserve">
          <source>atomic::AtomicIsize::into</source>
          <target state="translated">atomic::AtomicIsize::into</target>
        </trans-unit>
        <trans-unit id="2f4209d22c7c9b9e685629b4d20af77def91d7a2" translate="yes" xml:space="preserve">
          <source>atomic::AtomicIsize::into_inner</source>
          <target state="translated">atomic::AtomicIsize::into_inner</target>
        </trans-unit>
        <trans-unit id="929808027e2a00345f1fae855cc387bbbca41e16" translate="yes" xml:space="preserve">
          <source>atomic::AtomicIsize::load</source>
          <target state="translated">atomic::AtomicIsize::load</target>
        </trans-unit>
        <trans-unit id="d2463de923e167b9c3bd299a749c9810ab0c506d" translate="yes" xml:space="preserve">
          <source>atomic::AtomicIsize::new</source>
          <target state="translated">atomic::AtomicIsize::new</target>
        </trans-unit>
        <trans-unit id="887e06213848ca8fefff82251c27d6968b165677" translate="yes" xml:space="preserve">
          <source>atomic::AtomicIsize::store</source>
          <target state="translated">atomic::AtomicIsize::store</target>
        </trans-unit>
        <trans-unit id="a6b84e8aafa304d221a92f9d3fad7481b107d7ad" translate="yes" xml:space="preserve">
          <source>atomic::AtomicIsize::swap</source>
          <target state="translated">atomic::AtomicIsize::swap</target>
        </trans-unit>
        <trans-unit id="051ce1bbf8c84e3508bf6cf26fc776345949d682" translate="yes" xml:space="preserve">
          <source>atomic::AtomicIsize::try_from</source>
          <target state="translated">atomic::AtomicIsize::try_from</target>
        </trans-unit>
        <trans-unit id="8137192e5ce3dfcca13f075de55facc367d6ebe8" translate="yes" xml:space="preserve">
          <source>atomic::AtomicIsize::try_into</source>
          <target state="translated">atomic::AtomicIsize::try_into</target>
        </trans-unit>
        <trans-unit id="e3005290bf2064df8df962c46d0a13a88fe8774f" translate="yes" xml:space="preserve">
          <source>atomic::AtomicIsize::type_id</source>
          <target state="translated">atomic::AtomicIsize::type_id</target>
        </trans-unit>
        <trans-unit id="2a9a75a6153941215c450acaf58a09f098116cd8" translate="yes" xml:space="preserve">
          <source>atomic::AtomicPtr</source>
          <target state="translated">atomic::AtomicPtr</target>
        </trans-unit>
        <trans-unit id="5aa3aa81e10ce2d842b3fa40a197f9d21688a64a" translate="yes" xml:space="preserve">
          <source>atomic::AtomicPtr::borrow</source>
          <target state="translated">atomic::AtomicPtr::borrow</target>
        </trans-unit>
        <trans-unit id="a83d827fd54d17d30ac9a3174fd74cba0738394e" translate="yes" xml:space="preserve">
          <source>atomic::AtomicPtr::borrow_mut</source>
          <target state="translated">atomic::AtomicPtr::borrow_mut</target>
        </trans-unit>
        <trans-unit id="80da036e02670f34e9680bdd25c9c54785c8b061" translate="yes" xml:space="preserve">
          <source>atomic::AtomicPtr::compare_and_swap</source>
          <target state="translated">atomic::AtomicPtr::compare_and_swap</target>
        </trans-unit>
        <trans-unit id="62e835425c0b87e707dd159c4c10562023310e25" translate="yes" xml:space="preserve">
          <source>atomic::AtomicPtr::compare_exchange</source>
          <target state="translated">atomic::AtomicPtr::compare_exchange</target>
        </trans-unit>
        <trans-unit id="b7be432813963fe0b473fee8c9339859bdbe2842" translate="yes" xml:space="preserve">
          <source>atomic::AtomicPtr::compare_exchange_weak</source>
          <target state="translated">atomic::AtomicPtr::compare_exchange_weak</target>
        </trans-unit>
        <trans-unit id="0fa71e5038cd370853c4f8119bdf482da650b042" translate="yes" xml:space="preserve">
          <source>atomic::AtomicPtr::default</source>
          <target state="translated">atomic::AtomicPtr::default</target>
        </trans-unit>
        <trans-unit id="ffc228bfb08868cad1a08f47c5a9b0237dbb31c6" translate="yes" xml:space="preserve">
          <source>atomic::AtomicPtr::fmt</source>
          <target state="translated">atomic::AtomicPtr::fmt</target>
        </trans-unit>
        <trans-unit id="d7e9d7fe6a8bb3b9c070bdbabff51fd2781444f4" translate="yes" xml:space="preserve">
          <source>atomic::AtomicPtr::from</source>
          <target state="translated">atomic::AtomicPtr::from</target>
        </trans-unit>
        <trans-unit id="dad7516541121490eb576091d4eea8ac81d68f07" translate="yes" xml:space="preserve">
          <source>atomic::AtomicPtr::get_mut</source>
          <target state="translated">atomic::AtomicPtr::get_mut</target>
        </trans-unit>
        <trans-unit id="ab6f341aa5b1f4767a60644a4bca4c81139656a0" translate="yes" xml:space="preserve">
          <source>atomic::AtomicPtr::into</source>
          <target state="translated">atomic::AtomicPtr::into</target>
        </trans-unit>
        <trans-unit id="98b799efeac00ea6d7818681fe8ef1c7b76e0e43" translate="yes" xml:space="preserve">
          <source>atomic::AtomicPtr::into_inner</source>
          <target state="translated">atomic::AtomicPtr::into_inner</target>
        </trans-unit>
        <trans-unit id="6e9e1de12d18acc68e2f008f920720c8280c3424" translate="yes" xml:space="preserve">
          <source>atomic::AtomicPtr::load</source>
          <target state="translated">atomic::AtomicPtr::load</target>
        </trans-unit>
        <trans-unit id="af3f9b813e60ae0f382113b94eea57fb3ed36c93" translate="yes" xml:space="preserve">
          <source>atomic::AtomicPtr::new</source>
          <target state="translated">atomic::AtomicPtr::new</target>
        </trans-unit>
        <trans-unit id="c6656237558effa918de93e5e1b58e92a1a7f379" translate="yes" xml:space="preserve">
          <source>atomic::AtomicPtr::store</source>
          <target state="translated">atomic::AtomicPtr::store</target>
        </trans-unit>
        <trans-unit id="fbc40494d18a4a721d1c5cbcf18b18a666074bb4" translate="yes" xml:space="preserve">
          <source>atomic::AtomicPtr::swap</source>
          <target state="translated">atomic::AtomicPtr::swap</target>
        </trans-unit>
        <trans-unit id="fd48a81195ab8fbfa66d4aa1922277b80d68325d" translate="yes" xml:space="preserve">
          <source>atomic::AtomicPtr::try_from</source>
          <target state="translated">atomic::AtomicPtr::try_from</target>
        </trans-unit>
        <trans-unit id="258641d73168abce1b7e9c6217e0c9e5224763d6" translate="yes" xml:space="preserve">
          <source>atomic::AtomicPtr::try_into</source>
          <target state="translated">atomic::AtomicPtr::try_into</target>
        </trans-unit>
        <trans-unit id="f2fae53848ec424c2135c3a162d5b657f81cfe50" translate="yes" xml:space="preserve">
          <source>atomic::AtomicPtr::type_id</source>
          <target state="translated">atomic::AtomicPtr::type_id</target>
        </trans-unit>
        <trans-unit id="3cdcc7623e7b5690a62ebb43ba495a5ed1387b2c" translate="yes" xml:space="preserve">
          <source>atomic::AtomicU16</source>
          <target state="translated">atomic::AtomicU16</target>
        </trans-unit>
        <trans-unit id="ff7ea3a88030ea6489fe81a7d63ca0e287587100" translate="yes" xml:space="preserve">
          <source>atomic::AtomicU16::borrow</source>
          <target state="translated">atomic::AtomicU16::borrow</target>
        </trans-unit>
        <trans-unit id="702ca9342dcc881d94e04132d2e23dbef64762e0" translate="yes" xml:space="preserve">
          <source>atomic::AtomicU16::borrow_mut</source>
          <target state="translated">atomic::AtomicU16::borrow_mut</target>
        </trans-unit>
        <trans-unit id="2fca06da3f4314cd096979fdd0c0b0fd40ed06f0" translate="yes" xml:space="preserve">
          <source>atomic::AtomicU16::compare_and_swap</source>
          <target state="translated">atomic::AtomicU16::compare_and_swap</target>
        </trans-unit>
        <trans-unit id="b802008587496f04e855a25af0de31a793371e27" translate="yes" xml:space="preserve">
          <source>atomic::AtomicU16::compare_exchange</source>
          <target state="translated">atomic::AtomicU16::compare_exchange</target>
        </trans-unit>
        <trans-unit id="2f4a0350caaf1722e5f99074e30c6f60758517af" translate="yes" xml:space="preserve">
          <source>atomic::AtomicU16::compare_exchange_weak</source>
          <target state="translated">atomic::AtomicU16::compare_exchange_weak</target>
        </trans-unit>
        <trans-unit id="2e9f7d4fe81c7fd052a36b2ed466ddd4109fad41" translate="yes" xml:space="preserve">
          <source>atomic::AtomicU16::default</source>
          <target state="translated">atomic::AtomicU16::default</target>
        </trans-unit>
        <trans-unit id="b40bccbe91e528811ca7247c128684c26216c97c" translate="yes" xml:space="preserve">
          <source>atomic::AtomicU16::fetch_add</source>
          <target state="translated">atomic::AtomicU16::fetch_add</target>
        </trans-unit>
        <trans-unit id="e26b73ee7d49b5dede158ddb870c11d1f7610e0b" translate="yes" xml:space="preserve">
          <source>atomic::AtomicU16::fetch_and</source>
          <target state="translated">atomic::AtomicU16::fetch_and</target>
        </trans-unit>
        <trans-unit id="4a4bad432c66969c17f5c443d1611e8914a201f7" translate="yes" xml:space="preserve">
          <source>atomic::AtomicU16::fetch_max</source>
          <target state="translated">atomic::AtomicU16::fetch_max</target>
        </trans-unit>
        <trans-unit id="6b01fba96b33020621611ba1f47be2fd6750e42c" translate="yes" xml:space="preserve">
          <source>atomic::AtomicU16::fetch_min</source>
          <target state="translated">atomic::AtomicU16::fetch_min</target>
        </trans-unit>
        <trans-unit id="043c98304e5ef5ef06179cfbcc9815406c5959be" translate="yes" xml:space="preserve">
          <source>atomic::AtomicU16::fetch_nand</source>
          <target state="translated">atomic::AtomicU16::fetch_nand</target>
        </trans-unit>
        <trans-unit id="513e3d64c7f26e34cd8599e31787dae3334e4768" translate="yes" xml:space="preserve">
          <source>atomic::AtomicU16::fetch_or</source>
          <target state="translated">atomic::AtomicU16::fetch_or</target>
        </trans-unit>
        <trans-unit id="7cf4e0a84b8fc22069f70078586d440bc74c807a" translate="yes" xml:space="preserve">
          <source>atomic::AtomicU16::fetch_sub</source>
          <target state="translated">atomic::AtomicU16::fetch_sub</target>
        </trans-unit>
        <trans-unit id="016454dc69529db298632912ee25b227b5f5a4ce" translate="yes" xml:space="preserve">
          <source>atomic::AtomicU16::fetch_update</source>
          <target state="translated">atomic::AtomicU16::fetch_update</target>
        </trans-unit>
        <trans-unit id="dbd57d11132eee796e12fde6bc43d1e705ce366c" translate="yes" xml:space="preserve">
          <source>atomic::AtomicU16::fetch_xor</source>
          <target state="translated">atomic::AtomicU16::fetch_xor</target>
        </trans-unit>
        <trans-unit id="1a6d19fe08b16b23571a9b3869da5d8cd19d5abe" translate="yes" xml:space="preserve">
          <source>atomic::AtomicU16::fmt</source>
          <target state="translated">atomic::AtomicU16::fmt</target>
        </trans-unit>
        <trans-unit id="d9431e64cf81e915a9d6c30e9a0543b301462ffd" translate="yes" xml:space="preserve">
          <source>atomic::AtomicU16::from</source>
          <target state="translated">atomic::AtomicU16::from</target>
        </trans-unit>
        <trans-unit id="b69205195e8a1c04b8c8b22cb960a7d74129d751" translate="yes" xml:space="preserve">
          <source>atomic::AtomicU16::get_mut</source>
          <target state="translated">atomic::AtomicU16::get_mut</target>
        </trans-unit>
        <trans-unit id="73a556f4a1b14afd202b846c7a97fabbe16c1da8" translate="yes" xml:space="preserve">
          <source>atomic::AtomicU16::into</source>
          <target state="translated">atomic::AtomicU16::into</target>
        </trans-unit>
        <trans-unit id="185238487ac48196ea602044ece70e711b053354" translate="yes" xml:space="preserve">
          <source>atomic::AtomicU16::into_inner</source>
          <target state="translated">atomic::AtomicU16::into_inner</target>
        </trans-unit>
        <trans-unit id="bab56519f729db57bdea5cacceb0e94e2e023d40" translate="yes" xml:space="preserve">
          <source>atomic::AtomicU16::load</source>
          <target state="translated">atomic::AtomicU16::load</target>
        </trans-unit>
        <trans-unit id="2aeee448e97216271c72574765e1f5680a1eeb62" translate="yes" xml:space="preserve">
          <source>atomic::AtomicU16::new</source>
          <target state="translated">atomic::AtomicU16::new</target>
        </trans-unit>
        <trans-unit id="0cb282bff100889f677902e914dde2ba4e3811a1" translate="yes" xml:space="preserve">
          <source>atomic::AtomicU16::store</source>
          <target state="translated">atomic::AtomicU16::store</target>
        </trans-unit>
        <trans-unit id="1c945ac78d8aef0cc859cca9a3b0bec368c2ef2c" translate="yes" xml:space="preserve">
          <source>atomic::AtomicU16::swap</source>
          <target state="translated">atomic::AtomicU16::swap</target>
        </trans-unit>
        <trans-unit id="f5020cb4cd84c5e4a07eb51f69578a5b5971349f" translate="yes" xml:space="preserve">
          <source>atomic::AtomicU16::try_from</source>
          <target state="translated">atomic::AtomicU16::try_from</target>
        </trans-unit>
        <trans-unit id="398c14b46bd757f2f982a911780edf55aac464c5" translate="yes" xml:space="preserve">
          <source>atomic::AtomicU16::try_into</source>
          <target state="translated">atomic::AtomicU16::try_into</target>
        </trans-unit>
        <trans-unit id="c12de8dc546cfdbc9464c1363b1b8482df8dbe6c" translate="yes" xml:space="preserve">
          <source>atomic::AtomicU16::type_id</source>
          <target state="translated">atomic::AtomicU16::type_id</target>
        </trans-unit>
        <trans-unit id="8f6edab293a07d17ac6b8d4a88c54e49494c05be" translate="yes" xml:space="preserve">
          <source>atomic::AtomicU32</source>
          <target state="translated">atomic::AtomicU32</target>
        </trans-unit>
        <trans-unit id="8d7dfd309de1316fb040ee367575d8563fb4f9be" translate="yes" xml:space="preserve">
          <source>atomic::AtomicU32::borrow</source>
          <target state="translated">atomic::AtomicU32::borrow</target>
        </trans-unit>
        <trans-unit id="6fcea9bdd4cd7a50ffbd784398fcdb14cec75655" translate="yes" xml:space="preserve">
          <source>atomic::AtomicU32::borrow_mut</source>
          <target state="translated">atomic::AtomicU32::borrow_mut</target>
        </trans-unit>
        <trans-unit id="c3d27bb136acad8e598a78b8127dc97d52773a22" translate="yes" xml:space="preserve">
          <source>atomic::AtomicU32::compare_and_swap</source>
          <target state="translated">atomic::AtomicU32::compare_and_swap</target>
        </trans-unit>
        <trans-unit id="c591e4892f4970db925391bfe875da2e2c615477" translate="yes" xml:space="preserve">
          <source>atomic::AtomicU32::compare_exchange</source>
          <target state="translated">atomic::AtomicU32::compare_exchange</target>
        </trans-unit>
        <trans-unit id="4a15170fb74d73ac273bf3f108a3b8764666aef6" translate="yes" xml:space="preserve">
          <source>atomic::AtomicU32::compare_exchange_weak</source>
          <target state="translated">atomic::AtomicU32::compare_exchange_weak</target>
        </trans-unit>
        <trans-unit id="087321a1db64242bc0d1809d0f30b5ca03b48b32" translate="yes" xml:space="preserve">
          <source>atomic::AtomicU32::default</source>
          <target state="translated">atomic::AtomicU32::default</target>
        </trans-unit>
        <trans-unit id="0a19da7afca3a721b565789a41ee6af5c18d77d7" translate="yes" xml:space="preserve">
          <source>atomic::AtomicU32::fetch_add</source>
          <target state="translated">atomic::AtomicU32::fetch_add</target>
        </trans-unit>
        <trans-unit id="9deb13ff4812f87cc613a7f257f82aea97208e96" translate="yes" xml:space="preserve">
          <source>atomic::AtomicU32::fetch_and</source>
          <target state="translated">atomic::AtomicU32::fetch_and</target>
        </trans-unit>
        <trans-unit id="ca4ad8920a745d58ae7cbdb7cea6ffa7c066a73f" translate="yes" xml:space="preserve">
          <source>atomic::AtomicU32::fetch_max</source>
          <target state="translated">atomic::AtomicU32::fetch_max</target>
        </trans-unit>
        <trans-unit id="1b6a628119a0a5439057fd757b41e93f111d7e51" translate="yes" xml:space="preserve">
          <source>atomic::AtomicU32::fetch_min</source>
          <target state="translated">atomic::AtomicU32::fetch_min</target>
        </trans-unit>
        <trans-unit id="a91e9b4df93ee69bf002534445f738fe611bdef1" translate="yes" xml:space="preserve">
          <source>atomic::AtomicU32::fetch_nand</source>
          <target state="translated">atomic::AtomicU32::fetch_nand</target>
        </trans-unit>
        <trans-unit id="fff8d2e035cb8c1c25cea1652c532a542baecfed" translate="yes" xml:space="preserve">
          <source>atomic::AtomicU32::fetch_or</source>
          <target state="translated">atomic::AtomicU32::fetch_or</target>
        </trans-unit>
        <trans-unit id="4ab336b0c85995c2cc297c5ce3612a43208094a2" translate="yes" xml:space="preserve">
          <source>atomic::AtomicU32::fetch_sub</source>
          <target state="translated">atomic::AtomicU32::fetch_sub</target>
        </trans-unit>
        <trans-unit id="a6aa4450c3f4bcd2edaf95f866301afddaf25fb1" translate="yes" xml:space="preserve">
          <source>atomic::AtomicU32::fetch_update</source>
          <target state="translated">atomic::AtomicU32::fetch_update</target>
        </trans-unit>
        <trans-unit id="176dc2373a3adc8d1af28f2ec5c14bc3e5fe2bf7" translate="yes" xml:space="preserve">
          <source>atomic::AtomicU32::fetch_xor</source>
          <target state="translated">atomic::AtomicU32::fetch_xor</target>
        </trans-unit>
        <trans-unit id="2a3ca65f9762c112a430a692de01e146a4367958" translate="yes" xml:space="preserve">
          <source>atomic::AtomicU32::fmt</source>
          <target state="translated">atomic::AtomicU32::fmt</target>
        </trans-unit>
        <trans-unit id="5856b96200b16c6cd2d9596b87c10af15a698cc9" translate="yes" xml:space="preserve">
          <source>atomic::AtomicU32::from</source>
          <target state="translated">atomic::AtomicU32::from</target>
        </trans-unit>
        <trans-unit id="7ac0f363f677b89e4ecd94dd098fbdc227f69820" translate="yes" xml:space="preserve">
          <source>atomic::AtomicU32::get_mut</source>
          <target state="translated">atomic::AtomicU32::get_mut</target>
        </trans-unit>
        <trans-unit id="fe2acba243061f2235e133aa0f3a9870abb1fda7" translate="yes" xml:space="preserve">
          <source>atomic::AtomicU32::into</source>
          <target state="translated">atomic::AtomicU32::into</target>
        </trans-unit>
        <trans-unit id="dfa21bc2dbe5e4205700aaf7773d2a55cccec558" translate="yes" xml:space="preserve">
          <source>atomic::AtomicU32::into_inner</source>
          <target state="translated">atomic::AtomicU32::into_inner</target>
        </trans-unit>
        <trans-unit id="f6e4bf59aa1af64e74c25cab2659eeef2679d28b" translate="yes" xml:space="preserve">
          <source>atomic::AtomicU32::load</source>
          <target state="translated">atomic::AtomicU32::load</target>
        </trans-unit>
        <trans-unit id="239c621c5a0505f70f5dea0d4521c896c7a237f6" translate="yes" xml:space="preserve">
          <source>atomic::AtomicU32::new</source>
          <target state="translated">atomic::AtomicU32::new</target>
        </trans-unit>
        <trans-unit id="e53a5e2392972bd2c132c9564379936723fe01bc" translate="yes" xml:space="preserve">
          <source>atomic::AtomicU32::store</source>
          <target state="translated">atomic::AtomicU32::store</target>
        </trans-unit>
        <trans-unit id="e2566ebb765615b20ca2a9ac6a000a81a0760dfd" translate="yes" xml:space="preserve">
          <source>atomic::AtomicU32::swap</source>
          <target state="translated">atomic::AtomicU32::swap</target>
        </trans-unit>
        <trans-unit id="79a41f5caa13ddf1af23625b1a7bf55b964eb9df" translate="yes" xml:space="preserve">
          <source>atomic::AtomicU32::try_from</source>
          <target state="translated">atomic::AtomicU32::try_from</target>
        </trans-unit>
        <trans-unit id="9769d893c6a06c650faf5ed797bb4a9828fdc798" translate="yes" xml:space="preserve">
          <source>atomic::AtomicU32::try_into</source>
          <target state="translated">atomic::AtomicU32::try_into</target>
        </trans-unit>
        <trans-unit id="5e64a69534489f8a63f9ebfbb8c4c5875e040922" translate="yes" xml:space="preserve">
          <source>atomic::AtomicU32::type_id</source>
          <target state="translated">atomic::AtomicU32::type_id</target>
        </trans-unit>
        <trans-unit id="9d2cf1a89c19cce7cc9db71009d1bd9069aeaf8d" translate="yes" xml:space="preserve">
          <source>atomic::AtomicU64</source>
          <target state="translated">atomic::AtomicU64</target>
        </trans-unit>
        <trans-unit id="72eae5220b3ac735609c323f44eb37b6c548e033" translate="yes" xml:space="preserve">
          <source>atomic::AtomicU64::borrow</source>
          <target state="translated">atomic::AtomicU64::borrow</target>
        </trans-unit>
        <trans-unit id="1a93fa820442834281497e38ac999e9eac6555ff" translate="yes" xml:space="preserve">
          <source>atomic::AtomicU64::borrow_mut</source>
          <target state="translated">atomic::AtomicU64::borrow_mut</target>
        </trans-unit>
        <trans-unit id="6f3b59216277b0326b3fab9d5bde44e59367d7f2" translate="yes" xml:space="preserve">
          <source>atomic::AtomicU64::compare_and_swap</source>
          <target state="translated">atomic::AtomicU64::compare_and_swap</target>
        </trans-unit>
        <trans-unit id="76eb91bcda998a343b952224456d621a0b82fcac" translate="yes" xml:space="preserve">
          <source>atomic::AtomicU64::compare_exchange</source>
          <target state="translated">atomic::AtomicU64::compare_exchange</target>
        </trans-unit>
        <trans-unit id="beff75b6bcf6a7d4dc376ec26314608a197e7077" translate="yes" xml:space="preserve">
          <source>atomic::AtomicU64::compare_exchange_weak</source>
          <target state="translated">atomic::AtomicU64::compare_exchange_weak</target>
        </trans-unit>
        <trans-unit id="3c553cf0947cc1a32f080421b03e3de028d77940" translate="yes" xml:space="preserve">
          <source>atomic::AtomicU64::default</source>
          <target state="translated">atomic::AtomicU64::default</target>
        </trans-unit>
        <trans-unit id="a2ad4c124013ec4de32d9261b1e758a379e02138" translate="yes" xml:space="preserve">
          <source>atomic::AtomicU64::fetch_add</source>
          <target state="translated">atomic::AtomicU64::fetch_add</target>
        </trans-unit>
        <trans-unit id="4975e3ecc03b022ba580840b3b8b01a955d986a2" translate="yes" xml:space="preserve">
          <source>atomic::AtomicU64::fetch_and</source>
          <target state="translated">atomic::AtomicU64::fetch_and</target>
        </trans-unit>
        <trans-unit id="a037d3d0beb30ace425d7cc2056701eb8f3e0265" translate="yes" xml:space="preserve">
          <source>atomic::AtomicU64::fetch_max</source>
          <target state="translated">atomic::AtomicU64::fetch_max</target>
        </trans-unit>
        <trans-unit id="2ddfdc29b40f82a9337ca686ddeacc167909f183" translate="yes" xml:space="preserve">
          <source>atomic::AtomicU64::fetch_min</source>
          <target state="translated">atomic::AtomicU64::fetch_min</target>
        </trans-unit>
        <trans-unit id="e12a93bcc4f67c3fff69662b38acad45fd2d026c" translate="yes" xml:space="preserve">
          <source>atomic::AtomicU64::fetch_nand</source>
          <target state="translated">atomic::AtomicU64::fetch_nand</target>
        </trans-unit>
        <trans-unit id="86a54416ad14fda87d5c4c3799cb0cfb6f3451b7" translate="yes" xml:space="preserve">
          <source>atomic::AtomicU64::fetch_or</source>
          <target state="translated">atomic::AtomicU64::fetch_or</target>
        </trans-unit>
        <trans-unit id="818cd2428f09996ad85121d65724667761c74d44" translate="yes" xml:space="preserve">
          <source>atomic::AtomicU64::fetch_sub</source>
          <target state="translated">atomic::AtomicU64::fetch_sub</target>
        </trans-unit>
        <trans-unit id="c05394773b9cc79b6c0e09005545fe4a6efbe926" translate="yes" xml:space="preserve">
          <source>atomic::AtomicU64::fetch_update</source>
          <target state="translated">atomic::AtomicU64::fetch_update</target>
        </trans-unit>
        <trans-unit id="817a8416773ce87ff614b903f969ff87105987bf" translate="yes" xml:space="preserve">
          <source>atomic::AtomicU64::fetch_xor</source>
          <target state="translated">atomic::AtomicU64::fetch_xor</target>
        </trans-unit>
        <trans-unit id="eca28fd2ef97c8f07d37b95d792148ba0c83d393" translate="yes" xml:space="preserve">
          <source>atomic::AtomicU64::fmt</source>
          <target state="translated">atomic::AtomicU64::fmt</target>
        </trans-unit>
        <trans-unit id="86694f944d679e86f90c72aa71b1071305be83c8" translate="yes" xml:space="preserve">
          <source>atomic::AtomicU64::from</source>
          <target state="translated">atomic::AtomicU64::from</target>
        </trans-unit>
        <trans-unit id="be7cd9e355ba80d54b0fe5cf52f688e02a652c49" translate="yes" xml:space="preserve">
          <source>atomic::AtomicU64::get_mut</source>
          <target state="translated">atomic::AtomicU64::get_mut</target>
        </trans-unit>
        <trans-unit id="fe429c99f9903fdeef9ee29ff484171e2730ab2d" translate="yes" xml:space="preserve">
          <source>atomic::AtomicU64::into</source>
          <target state="translated">atomic::AtomicU64::into</target>
        </trans-unit>
        <trans-unit id="e416dd86be1ea850e52636fe34266cf17b8b6bc8" translate="yes" xml:space="preserve">
          <source>atomic::AtomicU64::into_inner</source>
          <target state="translated">atomic::AtomicU64::into_inner</target>
        </trans-unit>
        <trans-unit id="5bb554088f76afae52df701c8d2e676a7e933717" translate="yes" xml:space="preserve">
          <source>atomic::AtomicU64::load</source>
          <target state="translated">atomic::AtomicU64::load</target>
        </trans-unit>
        <trans-unit id="e3b3265a44da7a79099f01690e19959a1ec8da90" translate="yes" xml:space="preserve">
          <source>atomic::AtomicU64::new</source>
          <target state="translated">atomic::AtomicU64::new</target>
        </trans-unit>
        <trans-unit id="fa79fe4fe86323edbd32443011f94b4e5274f649" translate="yes" xml:space="preserve">
          <source>atomic::AtomicU64::store</source>
          <target state="translated">atomic::AtomicU64::store</target>
        </trans-unit>
        <trans-unit id="d30471b64decb3975d6f85f328d78ea744f2ea0b" translate="yes" xml:space="preserve">
          <source>atomic::AtomicU64::swap</source>
          <target state="translated">atomic::AtomicU64::swap</target>
        </trans-unit>
        <trans-unit id="c75e8a2e6d0fe6a8c93df1790503843caa1ed51f" translate="yes" xml:space="preserve">
          <source>atomic::AtomicU64::try_from</source>
          <target state="translated">atomic::AtomicU64::try_from</target>
        </trans-unit>
        <trans-unit id="cd7bee7e6270ae7d2fd7060fceae1c489e4a751b" translate="yes" xml:space="preserve">
          <source>atomic::AtomicU64::try_into</source>
          <target state="translated">atomic::AtomicU64::try_into</target>
        </trans-unit>
        <trans-unit id="5d0ab87e9effce42f7b9d37ae1227590a5b12ca7" translate="yes" xml:space="preserve">
          <source>atomic::AtomicU64::type_id</source>
          <target state="translated">atomic::AtomicU64::type_id</target>
        </trans-unit>
        <trans-unit id="5d40f6ccf9299fd16064d0ff6152f660ae3136ea" translate="yes" xml:space="preserve">
          <source>atomic::AtomicU8</source>
          <target state="translated">atomic::AtomicU8</target>
        </trans-unit>
        <trans-unit id="6dbc2cac2799df6d4947b0c7102b5a3e182992a2" translate="yes" xml:space="preserve">
          <source>atomic::AtomicU8::borrow</source>
          <target state="translated">atomic::AtomicU8::borrow</target>
        </trans-unit>
        <trans-unit id="ee3f001355d14aee168dba13c3c63463a7b073e4" translate="yes" xml:space="preserve">
          <source>atomic::AtomicU8::borrow_mut</source>
          <target state="translated">atomic::AtomicU8::borrow_mut</target>
        </trans-unit>
        <trans-unit id="fec3f88e879e88486868f2a9054879acc9463b0c" translate="yes" xml:space="preserve">
          <source>atomic::AtomicU8::compare_and_swap</source>
          <target state="translated">atomic::AtomicU8::compare_and_swap</target>
        </trans-unit>
        <trans-unit id="03147febbd30c81f8ae97aeba4995fc17c03354e" translate="yes" xml:space="preserve">
          <source>atomic::AtomicU8::compare_exchange</source>
          <target state="translated">atomic::AtomicU8::compare_exchange</target>
        </trans-unit>
        <trans-unit id="e8ccb6e509081e88678a4773e794e63ed14fff6e" translate="yes" xml:space="preserve">
          <source>atomic::AtomicU8::compare_exchange_weak</source>
          <target state="translated">atomic::AtomicU8::compare_exchange_weak</target>
        </trans-unit>
        <trans-unit id="5496d41182a501016ddb0b07b09be0e6e7aa66c1" translate="yes" xml:space="preserve">
          <source>atomic::AtomicU8::default</source>
          <target state="translated">atomic::AtomicU8::default</target>
        </trans-unit>
        <trans-unit id="7be4b964228c9cd0d9ce19c0446dcb49aea6df51" translate="yes" xml:space="preserve">
          <source>atomic::AtomicU8::fetch_add</source>
          <target state="translated">atomic::AtomicU8::fetch_add</target>
        </trans-unit>
        <trans-unit id="5dfaa31115b4a3d820141932b73c2c61e13d590b" translate="yes" xml:space="preserve">
          <source>atomic::AtomicU8::fetch_and</source>
          <target state="translated">atomic::AtomicU8::fetch_and</target>
        </trans-unit>
        <trans-unit id="304d23631f2e9506b1274e558d1173f6641ca5b3" translate="yes" xml:space="preserve">
          <source>atomic::AtomicU8::fetch_max</source>
          <target state="translated">atomic::AtomicU8::fetch_max</target>
        </trans-unit>
        <trans-unit id="59423d1bb5ca10dcfe7d240cffb49746a8429fa2" translate="yes" xml:space="preserve">
          <source>atomic::AtomicU8::fetch_min</source>
          <target state="translated">atomic::AtomicU8::fetch_min</target>
        </trans-unit>
        <trans-unit id="f760bb971dc13394582b5ec4c919df42d18091d9" translate="yes" xml:space="preserve">
          <source>atomic::AtomicU8::fetch_nand</source>
          <target state="translated">atomic::AtomicU8::fetch_nand</target>
        </trans-unit>
        <trans-unit id="0fae34465ccc69d9fc3ad1d27603dd7b8db66ecc" translate="yes" xml:space="preserve">
          <source>atomic::AtomicU8::fetch_or</source>
          <target state="translated">atomic::AtomicU8::fetch_or</target>
        </trans-unit>
        <trans-unit id="ca961f2d2f30958f2f3ed49a8e779ca585ee3f83" translate="yes" xml:space="preserve">
          <source>atomic::AtomicU8::fetch_sub</source>
          <target state="translated">atomic::AtomicU8::fetch_sub</target>
        </trans-unit>
        <trans-unit id="35d670b389be1ed20f93372f376785867facf8fb" translate="yes" xml:space="preserve">
          <source>atomic::AtomicU8::fetch_update</source>
          <target state="translated">atomic::AtomicU8::fetch_update</target>
        </trans-unit>
        <trans-unit id="805b8e36c08876d01b931f3b7ee90e1b3b0b2547" translate="yes" xml:space="preserve">
          <source>atomic::AtomicU8::fetch_xor</source>
          <target state="translated">atomic::AtomicU8::fetch_xor</target>
        </trans-unit>
        <trans-unit id="d88449876f57e9a1371b01ddc21c0b3832ebbf0a" translate="yes" xml:space="preserve">
          <source>atomic::AtomicU8::fmt</source>
          <target state="translated">atomic::AtomicU8::fmt</target>
        </trans-unit>
        <trans-unit id="361d769ab8ba0ef7b23db073af90d19d8a5728e7" translate="yes" xml:space="preserve">
          <source>atomic::AtomicU8::from</source>
          <target state="translated">atomic::AtomicU8::from</target>
        </trans-unit>
        <trans-unit id="68a60d6829e9c0152c8da8475a2e03f0e3db0d4c" translate="yes" xml:space="preserve">
          <source>atomic::AtomicU8::get_mut</source>
          <target state="translated">atomic::AtomicU8::get_mut</target>
        </trans-unit>
        <trans-unit id="8c38a953aea794b334b542297121d77e151f7070" translate="yes" xml:space="preserve">
          <source>atomic::AtomicU8::into</source>
          <target state="translated">atomic::AtomicU8::into</target>
        </trans-unit>
        <trans-unit id="57fdb84bff8d0cb637fc5f4a9febfd315e17b4e0" translate="yes" xml:space="preserve">
          <source>atomic::AtomicU8::into_inner</source>
          <target state="translated">atomic::AtomicU8::into_inner</target>
        </trans-unit>
        <trans-unit id="57da82b7a5cefb581fe0b9ea2d2915abe7d5d0e0" translate="yes" xml:space="preserve">
          <source>atomic::AtomicU8::load</source>
          <target state="translated">atomic::AtomicU8::load</target>
        </trans-unit>
        <trans-unit id="7e669fe868ea3b1c92b2f95b173b43a1fb8be436" translate="yes" xml:space="preserve">
          <source>atomic::AtomicU8::new</source>
          <target state="translated">atomic::AtomicU8::new</target>
        </trans-unit>
        <trans-unit id="e5ca14f88b63a8c01486f318491e39d751275df4" translate="yes" xml:space="preserve">
          <source>atomic::AtomicU8::store</source>
          <target state="translated">atomic::AtomicU8::store</target>
        </trans-unit>
        <trans-unit id="4a0b64f4f24cf58f6df88e1485b39e48e313fd98" translate="yes" xml:space="preserve">
          <source>atomic::AtomicU8::swap</source>
          <target state="translated">atomic::AtomicU8::swap</target>
        </trans-unit>
        <trans-unit id="9fa928cf823302212377fda33224f4c3bbc9dd9a" translate="yes" xml:space="preserve">
          <source>atomic::AtomicU8::try_from</source>
          <target state="translated">atomic::AtomicU8::try_from</target>
        </trans-unit>
        <trans-unit id="2c61e535c9397447498c9f27b3b1e91644da8867" translate="yes" xml:space="preserve">
          <source>atomic::AtomicU8::try_into</source>
          <target state="translated">atomic::AtomicU8::try_into</target>
        </trans-unit>
        <trans-unit id="e044b19ffa41a9bcafa2f418954c4407df4fef92" translate="yes" xml:space="preserve">
          <source>atomic::AtomicU8::type_id</source>
          <target state="translated">atomic::AtomicU8::type_id</target>
        </trans-unit>
        <trans-unit id="1daa8d1c55b2032b413908abdca343762333657c" translate="yes" xml:space="preserve">
          <source>atomic::AtomicUsize</source>
          <target state="translated">atomic::AtomicUsize</target>
        </trans-unit>
        <trans-unit id="f33ab1206bde22b278650924b8cb55ffe7c4fb78" translate="yes" xml:space="preserve">
          <source>atomic::AtomicUsize::borrow</source>
          <target state="translated">atomic::AtomicUsize::borrow</target>
        </trans-unit>
        <trans-unit id="0531359f62881dfc3ef420568af83afb91c81895" translate="yes" xml:space="preserve">
          <source>atomic::AtomicUsize::borrow_mut</source>
          <target state="translated">atomic::AtomicUsize::borrow_mut</target>
        </trans-unit>
        <trans-unit id="e54022fb1fd404c908a003f0d76c3d6af092fd4c" translate="yes" xml:space="preserve">
          <source>atomic::AtomicUsize::compare_and_swap</source>
          <target state="translated">atomic::AtomicUsize::compare_and_swap</target>
        </trans-unit>
        <trans-unit id="41b9f7d2b3dfb9590c79a9745967af775975a8d1" translate="yes" xml:space="preserve">
          <source>atomic::AtomicUsize::compare_exchange</source>
          <target state="translated">atomic::AtomicUsize::compare_exchange</target>
        </trans-unit>
        <trans-unit id="59d98e083e6b82dfacbcd4ff5df92a8fbd6c8627" translate="yes" xml:space="preserve">
          <source>atomic::AtomicUsize::compare_exchange_weak</source>
          <target state="translated">atomic::AtomicUsize::compare_exchange_weak</target>
        </trans-unit>
        <trans-unit id="d43da8cf79fbb779a04765d6320d8deecefc4b77" translate="yes" xml:space="preserve">
          <source>atomic::AtomicUsize::default</source>
          <target state="translated">atomic::AtomicUsize::default</target>
        </trans-unit>
        <trans-unit id="04480ac2516a2b7832eddcfcb8f5606269229981" translate="yes" xml:space="preserve">
          <source>atomic::AtomicUsize::fetch_add</source>
          <target state="translated">atomic::AtomicUsize::fetch_add</target>
        </trans-unit>
        <trans-unit id="667570f287ee3f651772c35a7bea299b3481eafc" translate="yes" xml:space="preserve">
          <source>atomic::AtomicUsize::fetch_and</source>
          <target state="translated">atomic::AtomicUsize::fetch_and</target>
        </trans-unit>
        <trans-unit id="c6bca0c03de55c3d9f988478fc4f8c77340adcf2" translate="yes" xml:space="preserve">
          <source>atomic::AtomicUsize::fetch_max</source>
          <target state="translated">atomic::AtomicUsize::fetch_max</target>
        </trans-unit>
        <trans-unit id="967f1c964cf4fde81c01e339a7a1ef12347210a5" translate="yes" xml:space="preserve">
          <source>atomic::AtomicUsize::fetch_min</source>
          <target state="translated">atomic::AtomicUsize::fetch_min</target>
        </trans-unit>
        <trans-unit id="2768f607502c873ca5e94d5db26b10fd3a2285ae" translate="yes" xml:space="preserve">
          <source>atomic::AtomicUsize::fetch_nand</source>
          <target state="translated">atomic::AtomicUsize::fetch_nand</target>
        </trans-unit>
        <trans-unit id="d36e2b2a73c7324d3898dcf22be5212249944af1" translate="yes" xml:space="preserve">
          <source>atomic::AtomicUsize::fetch_or</source>
          <target state="translated">atomic::AtomicUsize::fetch_or</target>
        </trans-unit>
        <trans-unit id="4adb9ffb04834324519c7ffe73a3f308e5c26c54" translate="yes" xml:space="preserve">
          <source>atomic::AtomicUsize::fetch_sub</source>
          <target state="translated">atomic::AtomicUsize::fetch_sub</target>
        </trans-unit>
        <trans-unit id="8ff8a5d7e589a0d97684e9e6c007af31738d7567" translate="yes" xml:space="preserve">
          <source>atomic::AtomicUsize::fetch_update</source>
          <target state="translated">atomic::AtomicUsize::fetch_update</target>
        </trans-unit>
        <trans-unit id="c17d52396f1c6640fe0a7f2bc3153537a8ba1c9f" translate="yes" xml:space="preserve">
          <source>atomic::AtomicUsize::fetch_xor</source>
          <target state="translated">atomic::AtomicUsize::fetch_xor</target>
        </trans-unit>
        <trans-unit id="14433555505ca19ac37c60cafae6de9f2f2bdbc9" translate="yes" xml:space="preserve">
          <source>atomic::AtomicUsize::fmt</source>
          <target state="translated">atomic::AtomicUsize::fmt</target>
        </trans-unit>
        <trans-unit id="31f1b295512f9d263f44316e1e28c8e491166737" translate="yes" xml:space="preserve">
          <source>atomic::AtomicUsize::from</source>
          <target state="translated">atomic::AtomicUsize::from</target>
        </trans-unit>
        <trans-unit id="53385f066d2afa6ddb1e3bb9973aa6ec534fc654" translate="yes" xml:space="preserve">
          <source>atomic::AtomicUsize::get_mut</source>
          <target state="translated">atomic::AtomicUsize::get_mut</target>
        </trans-unit>
        <trans-unit id="c2ca12a68ed0f3983291188960058f79944c5f2d" translate="yes" xml:space="preserve">
          <source>atomic::AtomicUsize::into</source>
          <target state="translated">atomic::AtomicUsize::into</target>
        </trans-unit>
        <trans-unit id="b2daf39a5a7d751fa6f8e7040ba142687711a2cb" translate="yes" xml:space="preserve">
          <source>atomic::AtomicUsize::into_inner</source>
          <target state="translated">atomic::AtomicUsize::into_inner</target>
        </trans-unit>
        <trans-unit id="7a1860bdd056a1bb70688fbd6abcca45f6d7d956" translate="yes" xml:space="preserve">
          <source>atomic::AtomicUsize::load</source>
          <target state="translated">atomic::AtomicUsize::load</target>
        </trans-unit>
        <trans-unit id="338a0dab7e8cf9ef69e5bfec0887ce88ce1ac392" translate="yes" xml:space="preserve">
          <source>atomic::AtomicUsize::new</source>
          <target state="translated">atomic::AtomicUsize::new</target>
        </trans-unit>
        <trans-unit id="0f2396f6f249e9e4aeb128c31ea72cd91f1877e8" translate="yes" xml:space="preserve">
          <source>atomic::AtomicUsize::store</source>
          <target state="translated">atomic::AtomicUsize::store</target>
        </trans-unit>
        <trans-unit id="991c2b320985f72445ea0f4c7ba013293414bd80" translate="yes" xml:space="preserve">
          <source>atomic::AtomicUsize::swap</source>
          <target state="translated">atomic::AtomicUsize::swap</target>
        </trans-unit>
        <trans-unit id="156dae1354048a68b4363bd21ec8d28a9921e33b" translate="yes" xml:space="preserve">
          <source>atomic::AtomicUsize::try_from</source>
          <target state="translated">atomic::AtomicUsize::try_from</target>
        </trans-unit>
        <trans-unit id="527a62bcc12943fee88c2679f1acad150bd5c9a1" translate="yes" xml:space="preserve">
          <source>atomic::AtomicUsize::try_into</source>
          <target state="translated">atomic::AtomicUsize::try_into</target>
        </trans-unit>
        <trans-unit id="c942b7ded5369e49044da8a9d1a6c208fd10bfad" translate="yes" xml:space="preserve">
          <source>atomic::AtomicUsize::type_id</source>
          <target state="translated">atomic::AtomicUsize::type_id</target>
        </trans-unit>
        <trans-unit id="904fcd4b8e80293b0f5e85ba6713964cc9d11958" translate="yes" xml:space="preserve">
          <source>atomic::Ordering</source>
          <target state="translated">atomic::Ordering</target>
        </trans-unit>
        <trans-unit id="0e4a11093d8999815522a5d01b0d1aee7af894a2" translate="yes" xml:space="preserve">
          <source>atomic::Ordering::borrow</source>
          <target state="translated">atomic::Ordering::borrow</target>
        </trans-unit>
        <trans-unit id="1beba095263dd04d378a6ce1650712df66e028d4" translate="yes" xml:space="preserve">
          <source>atomic::Ordering::borrow_mut</source>
          <target state="translated">atomic::Ordering::borrow_mut</target>
        </trans-unit>
        <trans-unit id="fd77355e7425585a2480ef5657dd0040be4f3696" translate="yes" xml:space="preserve">
          <source>atomic::Ordering::clone</source>
          <target state="translated">atomic::Ordering::clone</target>
        </trans-unit>
        <trans-unit id="d63b4ce4774f8dbc6d543f7fddbdfd97ec353ea3" translate="yes" xml:space="preserve">
          <source>atomic::Ordering::clone_from</source>
          <target state="translated">atomic::Ordering::clone_from</target>
        </trans-unit>
        <trans-unit id="10496ef6cccc69292a0d88ea8da4861b013393ca" translate="yes" xml:space="preserve">
          <source>atomic::Ordering::clone_into</source>
          <target state="translated">atomic::Ordering::clone_into</target>
        </trans-unit>
        <trans-unit id="c93ec2f78b5b58f387b54694608ab23a006460f5" translate="yes" xml:space="preserve">
          <source>atomic::Ordering::eq</source>
          <target state="translated">atomic::Ordering::eq</target>
        </trans-unit>
        <trans-unit id="09ed18df39fc9406311fd8dd5cfd6abb14eb7aea" translate="yes" xml:space="preserve">
          <source>atomic::Ordering::fmt</source>
          <target state="translated">atomic::Ordering::fmt</target>
        </trans-unit>
        <trans-unit id="ccc7c5df51ee01d9631a7f3df176e8cb299fb2af" translate="yes" xml:space="preserve">
          <source>atomic::Ordering::from</source>
          <target state="translated">atomic::Ordering::from</target>
        </trans-unit>
        <trans-unit id="14183d2e32a81b242fe2931ffc9395712f03c653" translate="yes" xml:space="preserve">
          <source>atomic::Ordering::hash</source>
          <target state="translated">atomic::Ordering::hash</target>
        </trans-unit>
        <trans-unit id="f6dd832e879acf566c3c446113138ddb145a0c3a" translate="yes" xml:space="preserve">
          <source>atomic::Ordering::hash_slice</source>
          <target state="translated">atomic::Ordering::hash_slice</target>
        </trans-unit>
        <trans-unit id="c0e6cd3791c580f00cc7c83cb1ef8e8851959916" translate="yes" xml:space="preserve">
          <source>atomic::Ordering::into</source>
          <target state="translated">atomic::Ordering::into</target>
        </trans-unit>
        <trans-unit id="3f9febf11bd55f69b8e7dfd52956908289f8eab7" translate="yes" xml:space="preserve">
          <source>atomic::Ordering::ne</source>
          <target state="translated">atomic::Ordering::ne</target>
        </trans-unit>
        <trans-unit id="1df22980b92f507a0b8b8ccdf0e200e6dcea6e1f" translate="yes" xml:space="preserve">
          <source>atomic::Ordering::to_owned</source>
          <target state="translated">atomic::Ordering::to_owned</target>
        </trans-unit>
        <trans-unit id="bf54c6b21212a676bd3f6e6d58aaefee5d1ada06" translate="yes" xml:space="preserve">
          <source>atomic::Ordering::try_from</source>
          <target state="translated">atomic::Ordering::try_from</target>
        </trans-unit>
        <trans-unit id="387264ddc559d6f1cfae386e4490f62da6a8d157" translate="yes" xml:space="preserve">
          <source>atomic::Ordering::try_into</source>
          <target state="translated">atomic::Ordering::try_into</target>
        </trans-unit>
        <trans-unit id="a82e00d09cd8e2314e3886295fadacbbe0cc1f93" translate="yes" xml:space="preserve">
          <source>atomic::Ordering::type_id</source>
          <target state="translated">atomic::Ordering::type_id</target>
        </trans-unit>
        <trans-unit id="f15a800c13bf39da1ded2ef7d05eab3e16191a32" translate="yes" xml:space="preserve">
          <source>atomic::compiler_fence</source>
          <target state="translated">atomic::compiler_fence</target>
        </trans-unit>
        <trans-unit id="5362fb5a82eee5f373531a73af3118040a896bf7" translate="yes" xml:space="preserve">
          <source>atomic::fence</source>
          <target state="translated">atomic::fence</target>
        </trans-unit>
        <trans-unit id="16ca37b2e4d8b1fa89fb48823d7898fe906d8d72" translate="yes" xml:space="preserve">
          <source>atomic::spin_loop_hint</source>
          <target state="translated">atomic::spin_loop_hint</target>
        </trans-unit>
        <trans-unit id="fb0864221341188b6abc1424f99c82827af2687a" translate="yes" xml:space="preserve">
          <source>atomic_and</source>
          <target state="translated">atomic_and</target>
        </trans-unit>
        <trans-unit id="b6b59f9802fa9016432a6669364ff980541cf0bd" translate="yes" xml:space="preserve">
          <source>atomic_and_acq</source>
          <target state="translated">atomic_and_acq</target>
        </trans-unit>
        <trans-unit id="c6a1e21d7a3cf43462718560eaa304fd633e7400" translate="yes" xml:space="preserve">
          <source>atomic_and_acqrel</source>
          <target state="translated">atomic_and_acqrel</target>
        </trans-unit>
        <trans-unit id="af9695a63b61b26ec485bd1623d4fd83ca8deba5" translate="yes" xml:space="preserve">
          <source>atomic_and_rel</source>
          <target state="translated">atomic_and_rel</target>
        </trans-unit>
        <trans-unit id="2b8a8e623c0361a665baa2c42436b95c26dcad95" translate="yes" xml:space="preserve">
          <source>atomic_and_relaxed</source>
          <target state="translated">atomic_and_relaxed</target>
        </trans-unit>
        <trans-unit id="1ed4bdd7b5ca570d154e2d32bc22fd4bb29c5669" translate="yes" xml:space="preserve">
          <source>atomic_cxchg</source>
          <target state="translated">atomic_cxchg</target>
        </trans-unit>
        <trans-unit id="235355e6c17a77239c05f54e75ff0a71e9553343" translate="yes" xml:space="preserve">
          <source>atomic_cxchg_acq</source>
          <target state="translated">atomic_cxchg_acq</target>
        </trans-unit>
        <trans-unit id="ce5acd456659d4515b22bf0f46ed6156570c0e63" translate="yes" xml:space="preserve">
          <source>atomic_cxchg_acq_failrelaxed</source>
          <target state="translated">atomic_cxchg_acq_failrelaxed</target>
        </trans-unit>
        <trans-unit id="c67e8cc7ec8dcded9ff63c8d4aeab2c04928c223" translate="yes" xml:space="preserve">
          <source>atomic_cxchg_acqrel</source>
          <target state="translated">atomic_cxchg_acqrel</target>
        </trans-unit>
        <trans-unit id="7b08310ba6fb98ca47cc6c1b1aab3075c43b0c13" translate="yes" xml:space="preserve">
          <source>atomic_cxchg_acqrel_failrelaxed</source>
          <target state="translated">atomic_cxchg_acqrel_failrelaxed</target>
        </trans-unit>
        <trans-unit id="70c9166481d7bb6fad7d1e9c4dfd1e16580905a4" translate="yes" xml:space="preserve">
          <source>atomic_cxchg_failacq</source>
          <target state="translated">atomic_cxchg_failacq</target>
        </trans-unit>
        <trans-unit id="3ae798fc5419377183e96ddc905398360ef840cc" translate="yes" xml:space="preserve">
          <source>atomic_cxchg_failrelaxed</source>
          <target state="translated">atomic_cxchg_failrelaxed</target>
        </trans-unit>
        <trans-unit id="341abb937e5c424dbcf691e92ca68b1e43aa7d78" translate="yes" xml:space="preserve">
          <source>atomic_cxchg_rel</source>
          <target state="translated">atomic_cxchg_rel</target>
        </trans-unit>
        <trans-unit id="ba4f4822c733d2bb310d6c4f0881ea5d005ddb51" translate="yes" xml:space="preserve">
          <source>atomic_cxchg_relaxed</source>
          <target state="translated">atomic_cxchg_relaxed</target>
        </trans-unit>
        <trans-unit id="cfffe3c3314cb13ec6ce32e8450952b2d1efbba1" translate="yes" xml:space="preserve">
          <source>atomic_cxchgweak</source>
          <target state="translated">atomic_cxchgweak</target>
        </trans-unit>
        <trans-unit id="87d7ae38cc338bf703fbc89069ce209b3ba3c3b8" translate="yes" xml:space="preserve">
          <source>atomic_cxchgweak_acq</source>
          <target state="translated">atomic_cxchgweak_acq</target>
        </trans-unit>
        <trans-unit id="1da9808fbffff7af4c936271e6db40add843f62c" translate="yes" xml:space="preserve">
          <source>atomic_cxchgweak_acq_failrelaxed</source>
          <target state="translated">atomic_cxchgweak_acq_failrelaxed</target>
        </trans-unit>
        <trans-unit id="bc2e5e476e83d7d632f3284726c0d5f743739a82" translate="yes" xml:space="preserve">
          <source>atomic_cxchgweak_acqrel</source>
          <target state="translated">atomic_cxchgweak_acqrel</target>
        </trans-unit>
        <trans-unit id="0a0de302e207b68bdb1f7da1b2132bfcb0c36f29" translate="yes" xml:space="preserve">
          <source>atomic_cxchgweak_acqrel_failrelaxed</source>
          <target state="translated">atomic_cxchgweak_acqrel_failrelaxed</target>
        </trans-unit>
        <trans-unit id="62a3d2398c6add28a6259ee65e1c5fbb570eb048" translate="yes" xml:space="preserve">
          <source>atomic_cxchgweak_failacq</source>
          <target state="translated">atomic_cxchgweak_failacq</target>
        </trans-unit>
        <trans-unit id="5b17c7214368662bde75c27d9a85113733824a77" translate="yes" xml:space="preserve">
          <source>atomic_cxchgweak_failrelaxed</source>
          <target state="translated">atomic_cxchgweak_failrelaxed</target>
        </trans-unit>
        <trans-unit id="59267eacdc57d647ba05e6967122499b49ffd979" translate="yes" xml:space="preserve">
          <source>atomic_cxchgweak_rel</source>
          <target state="translated">atomic_cxchgweak_rel</target>
        </trans-unit>
        <trans-unit id="ea7c17a6c5258fd112633b88af30604baf7aa959" translate="yes" xml:space="preserve">
          <source>atomic_cxchgweak_relaxed</source>
          <target state="translated">atomic_cxchgweak_relaxed</target>
        </trans-unit>
        <trans-unit id="4d3aa1b2817af8041171525bb27a1f06373bddef" translate="yes" xml:space="preserve">
          <source>atomic_fence</source>
          <target state="translated">atomic_fence</target>
        </trans-unit>
        <trans-unit id="ed72bc1c4457350eccbc94839e2aa02d78466d42" translate="yes" xml:space="preserve">
          <source>atomic_fence_acq</source>
          <target state="translated">atomic_fence_acq</target>
        </trans-unit>
        <trans-unit id="05a487f52440cd721785325c8ea8d3719f346586" translate="yes" xml:space="preserve">
          <source>atomic_fence_acqrel</source>
          <target state="translated">atomic_fence_acqrel</target>
        </trans-unit>
        <trans-unit id="e02037d1ccf972891d5bda4773814a7382dfa7f6" translate="yes" xml:space="preserve">
          <source>atomic_fence_rel</source>
          <target state="translated">atomic_fence_rel</target>
        </trans-unit>
        <trans-unit id="5d00b641af0c653272c9cef17ac1ae430973ba7f" translate="yes" xml:space="preserve">
          <source>atomic_load</source>
          <target state="translated">atomic_load</target>
        </trans-unit>
        <trans-unit id="de5e960b5658eb2bb6e6ff60c494e974efac4b60" translate="yes" xml:space="preserve">
          <source>atomic_load_acq</source>
          <target state="translated">atomic_load_acq</target>
        </trans-unit>
        <trans-unit id="838d4001efe7a2dd46bd37177e170e34ece86972" translate="yes" xml:space="preserve">
          <source>atomic_load_relaxed</source>
          <target state="translated">atomic_load_relaxed</target>
        </trans-unit>
        <trans-unit id="3f2e298179495408aa833cfef78f0b99ab14da41" translate="yes" xml:space="preserve">
          <source>atomic_load_unordered</source>
          <target state="translated">atomic_load_unordered</target>
        </trans-unit>
        <trans-unit id="27de36c8f9b1bffff70d5b5d10a480c9bd5512fd" translate="yes" xml:space="preserve">
          <source>atomic_max</source>
          <target state="translated">atomic_max</target>
        </trans-unit>
        <trans-unit id="776763c1088c86d876676afb6a9021b437585628" translate="yes" xml:space="preserve">
          <source>atomic_max_acq</source>
          <target state="translated">atomic_max_acq</target>
        </trans-unit>
        <trans-unit id="3131af96ced1e4b1afc81847c06c89165cab76d5" translate="yes" xml:space="preserve">
          <source>atomic_max_acqrel</source>
          <target state="translated">atomic_max_acqrel</target>
        </trans-unit>
        <trans-unit id="5b16556927f857dc8ad34f79bafed6d66a817ae8" translate="yes" xml:space="preserve">
          <source>atomic_max_rel</source>
          <target state="translated">atomic_max_rel</target>
        </trans-unit>
        <trans-unit id="5400939863fe26bec5feb684dc34ae0339290646" translate="yes" xml:space="preserve">
          <source>atomic_max_relaxed</source>
          <target state="translated">atomic_max_relaxed</target>
        </trans-unit>
        <trans-unit id="7ceeed640aa00b95910547bc34045c504ef343a4" translate="yes" xml:space="preserve">
          <source>atomic_min</source>
          <target state="translated">atomic_min</target>
        </trans-unit>
        <trans-unit id="a09a2c0316b6cf74fa64c2439e19988151cdfc25" translate="yes" xml:space="preserve">
          <source>atomic_min_acq</source>
          <target state="translated">atomic_min_acq</target>
        </trans-unit>
        <trans-unit id="2fd6dff204a4f95b65193dacbdc978d53f1cb4ea" translate="yes" xml:space="preserve">
          <source>atomic_min_acqrel</source>
          <target state="translated">atomic_min_acqrel</target>
        </trans-unit>
        <trans-unit id="28473edc22f144c81f6f90e08f7fedb6037160bf" translate="yes" xml:space="preserve">
          <source>atomic_min_rel</source>
          <target state="translated">atomic_min_rel</target>
        </trans-unit>
        <trans-unit id="9ada7549606d18c9510525e73f6a03dacbffd6fd" translate="yes" xml:space="preserve">
          <source>atomic_min_relaxed</source>
          <target state="translated">atomic_min_relaxed</target>
        </trans-unit>
        <trans-unit id="c70ec6af43304803896d184469c252ab06ede22a" translate="yes" xml:space="preserve">
          <source>atomic_nand</source>
          <target state="translated">atomic_nand</target>
        </trans-unit>
        <trans-unit id="c974021c2cb7b6e25d44a9fcdccd15b3a807bf5f" translate="yes" xml:space="preserve">
          <source>atomic_nand_acq</source>
          <target state="translated">atomic_nand_acq</target>
        </trans-unit>
        <trans-unit id="ecb5e71e650664cda6e2489188c373904979b833" translate="yes" xml:space="preserve">
          <source>atomic_nand_acqrel</source>
          <target state="translated">atomic_nand_acqrel</target>
        </trans-unit>
        <trans-unit id="1406c4861567dd79167a7d5ddb5f0cc7450d5ee6" translate="yes" xml:space="preserve">
          <source>atomic_nand_rel</source>
          <target state="translated">atomic_nand_rel</target>
        </trans-unit>
        <trans-unit id="4d84499b671267480940694990db873cd4db6d67" translate="yes" xml:space="preserve">
          <source>atomic_nand_relaxed</source>
          <target state="translated">atomic_nand_relaxed</target>
        </trans-unit>
        <trans-unit id="9bbc44bf1d5e6bbba1c93413762a4747b941414b" translate="yes" xml:space="preserve">
          <source>atomic_or</source>
          <target state="translated">atomic_or</target>
        </trans-unit>
        <trans-unit id="7660279ee3db2121712b9bbf0d29813ada24c92a" translate="yes" xml:space="preserve">
          <source>atomic_or_acq</source>
          <target state="translated">atomic_or_acq</target>
        </trans-unit>
        <trans-unit id="5b5e42402d8ddaaff34578d45ff3ac78dfe2f03b" translate="yes" xml:space="preserve">
          <source>atomic_or_acqrel</source>
          <target state="translated">atomic_or_acqrel</target>
        </trans-unit>
        <trans-unit id="35c6d9999e025d97eeb1a58b65030e3f9c1d40cf" translate="yes" xml:space="preserve">
          <source>atomic_or_rel</source>
          <target state="translated">atomic_or_rel</target>
        </trans-unit>
        <trans-unit id="79a0f0ed8cbea585283b9bca322bce28b8146d13" translate="yes" xml:space="preserve">
          <source>atomic_or_relaxed</source>
          <target state="translated">atomic_or_relaxed</target>
        </trans-unit>
        <trans-unit id="78181b1e616ee227455249d718c364ea893a0565" translate="yes" xml:space="preserve">
          <source>atomic_singlethreadfence</source>
          <target state="translated">atomic_singlethreadfence</target>
        </trans-unit>
        <trans-unit id="87ccef509153b2c7cf2bcaec14ef3e970a6b8c61" translate="yes" xml:space="preserve">
          <source>atomic_singlethreadfence_acq</source>
          <target state="translated">atomic_singlethreadfence_acq</target>
        </trans-unit>
        <trans-unit id="39d057b02fa93bf82665f2f149584293cd5a4122" translate="yes" xml:space="preserve">
          <source>atomic_singlethreadfence_acqrel</source>
          <target state="translated">atomic_singlethreadfence_acqrel</target>
        </trans-unit>
        <trans-unit id="5fdc346ca47d82d04e3c64eefe6ba137818c6220" translate="yes" xml:space="preserve">
          <source>atomic_singlethreadfence_rel</source>
          <target state="translated">atomic_singlethreadfence_rel</target>
        </trans-unit>
        <trans-unit id="63c04c28b359fc9a0ca4534387e1f83968d8da32" translate="yes" xml:space="preserve">
          <source>atomic_store</source>
          <target state="translated">atomic_store</target>
        </trans-unit>
        <trans-unit id="27c86077fd4da1560f40136b258f928041d40a5f" translate="yes" xml:space="preserve">
          <source>atomic_store_rel</source>
          <target state="translated">atomic_store_rel</target>
        </trans-unit>
        <trans-unit id="c7764f18e1137ae7fb96284123e365d46d4f9bda" translate="yes" xml:space="preserve">
          <source>atomic_store_relaxed</source>
          <target state="translated">atomic_store_relaxed</target>
        </trans-unit>
        <trans-unit id="f41e186535e1f2ebbcda33c966898b245c64f018" translate="yes" xml:space="preserve">
          <source>atomic_store_unordered</source>
          <target state="translated">atomic_store_unordered</target>
        </trans-unit>
        <trans-unit id="f1ced68f117cf1ea333b931b45d9470a9616c41d" translate="yes" xml:space="preserve">
          <source>atomic_umax</source>
          <target state="translated">atomic_umax</target>
        </trans-unit>
        <trans-unit id="3a54c336ba7ab8976ff2aed8a57df05f179dd25f" translate="yes" xml:space="preserve">
          <source>atomic_umax_acq</source>
          <target state="translated">atomic_umax_acq</target>
        </trans-unit>
        <trans-unit id="9894844f615226283ed149ecac41adf9eb07e9c9" translate="yes" xml:space="preserve">
          <source>atomic_umax_acqrel</source>
          <target state="translated">atomic_umax_acqrel</target>
        </trans-unit>
        <trans-unit id="f45d429c13fa30031d0ecb1414fd02b0d1f6cf7c" translate="yes" xml:space="preserve">
          <source>atomic_umax_rel</source>
          <target state="translated">atomic_umax_rel</target>
        </trans-unit>
        <trans-unit id="75347128e86e7f78b8f666ef203fa8815562772e" translate="yes" xml:space="preserve">
          <source>atomic_umax_relaxed</source>
          <target state="translated">atomic_umax_relaxed</target>
        </trans-unit>
        <trans-unit id="8d472fe3b7c5a50d8f306956c47f74c0ada17389" translate="yes" xml:space="preserve">
          <source>atomic_umin</source>
          <target state="translated">atomic_umin</target>
        </trans-unit>
        <trans-unit id="303c2c703a7c2d77403388792c246cd299de6d28" translate="yes" xml:space="preserve">
          <source>atomic_umin_acq</source>
          <target state="translated">atomic_umin_acq</target>
        </trans-unit>
        <trans-unit id="c33d75f3bc6a3bfb02c3cd5754fe52b7b62121aa" translate="yes" xml:space="preserve">
          <source>atomic_umin_acqrel</source>
          <target state="translated">atomic_umin_acqrel</target>
        </trans-unit>
        <trans-unit id="0b52d55258efd4844745a82a52ef326d48bc4a19" translate="yes" xml:space="preserve">
          <source>atomic_umin_rel</source>
          <target state="translated">atomic_umin_rel</target>
        </trans-unit>
        <trans-unit id="40ca7a9e53239b5cea98faa05d56f43a973276d8" translate="yes" xml:space="preserve">
          <source>atomic_umin_relaxed</source>
          <target state="translated">atomic_umin_relaxed</target>
        </trans-unit>
        <trans-unit id="010c9e61b592e4aa96470cfed6810e483e91f397" translate="yes" xml:space="preserve">
          <source>atomic_xadd</source>
          <target state="translated">atomic_xadd</target>
        </trans-unit>
        <trans-unit id="b0a1162cfdb44e9015ba5f85e8607b0f340f3d35" translate="yes" xml:space="preserve">
          <source>atomic_xadd_acq</source>
          <target state="translated">atomic_xadd_acq</target>
        </trans-unit>
        <trans-unit id="d1ea5817e38c64c4d11b52f6d844a1e6526e4d70" translate="yes" xml:space="preserve">
          <source>atomic_xadd_acqrel</source>
          <target state="translated">atomic_xadd_acqrel</target>
        </trans-unit>
        <trans-unit id="f6a050a5eddc7190bcb02af73697eb27fe0da3b0" translate="yes" xml:space="preserve">
          <source>atomic_xadd_rel</source>
          <target state="translated">atomic_xadd_rel</target>
        </trans-unit>
        <trans-unit id="c3ecb275f808acbebba3cd75baf34ae1dff59610" translate="yes" xml:space="preserve">
          <source>atomic_xadd_relaxed</source>
          <target state="translated">atomic_xadd_relaxed</target>
        </trans-unit>
        <trans-unit id="85b2d7be037de3637eb80e9a13e99f013b831273" translate="yes" xml:space="preserve">
          <source>atomic_xchg</source>
          <target state="translated">atomic_xchg</target>
        </trans-unit>
        <trans-unit id="985da70057a2dd1776035394330de49f871fb0f6" translate="yes" xml:space="preserve">
          <source>atomic_xchg_acq</source>
          <target state="translated">atomic_xchg_acq</target>
        </trans-unit>
        <trans-unit id="52872ac23249ab02424df668b760616c9a66bf02" translate="yes" xml:space="preserve">
          <source>atomic_xchg_acqrel</source>
          <target state="translated">atomic_xchg_acqrel</target>
        </trans-unit>
        <trans-unit id="60d0a04cf6d8a1b601a5ffe7cffaa62d2380979f" translate="yes" xml:space="preserve">
          <source>atomic_xchg_rel</source>
          <target state="translated">atomic_xchg_rel</target>
        </trans-unit>
        <trans-unit id="0a9385153c61616343f84443f11e511b7f61943f" translate="yes" xml:space="preserve">
          <source>atomic_xchg_relaxed</source>
          <target state="translated">atomic_xchg_relaxed</target>
        </trans-unit>
        <trans-unit id="c504a3f42840e8856ab318cf4c98659d6fe00ca5" translate="yes" xml:space="preserve">
          <source>atomic_xor</source>
          <target state="translated">atomic_xor</target>
        </trans-unit>
        <trans-unit id="bb0db5dc6ead09667e004c9b52ee2cc678ba5003" translate="yes" xml:space="preserve">
          <source>atomic_xor_acq</source>
          <target state="translated">atomic_xor_acq</target>
        </trans-unit>
        <trans-unit id="3c24835037fe8a0490a12cf529263bd87ccbb9ab" translate="yes" xml:space="preserve">
          <source>atomic_xor_acqrel</source>
          <target state="translated">atomic_xor_acqrel</target>
        </trans-unit>
        <trans-unit id="af2b160a0405086487e9381cf9d56f8c10f084ae" translate="yes" xml:space="preserve">
          <source>atomic_xor_rel</source>
          <target state="translated">atomic_xor_rel</target>
        </trans-unit>
        <trans-unit id="5d586f0cf5c74efe73c13b41a11f7024298885a5" translate="yes" xml:space="preserve">
          <source>atomic_xor_relaxed</source>
          <target state="translated">atomic_xor_relaxed</target>
        </trans-unit>
        <trans-unit id="0753f4668716b32d5878a7b9dddcb2030f35f158" translate="yes" xml:space="preserve">
          <source>atomic_xsub</source>
          <target state="translated">atomic_xsub</target>
        </trans-unit>
        <trans-unit id="d0023747a518b60243c217d76e3823f38610c219" translate="yes" xml:space="preserve">
          <source>atomic_xsub_acq</source>
          <target state="translated">atomic_xsub_acq</target>
        </trans-unit>
        <trans-unit id="5586788e1ede20a84eeb49ff5c6747462c224386" translate="yes" xml:space="preserve">
          <source>atomic_xsub_acqrel</source>
          <target state="translated">atomic_xsub_acqrel</target>
        </trans-unit>
        <trans-unit id="d60029af89c66e6083b22b272e81563754d2faca" translate="yes" xml:space="preserve">
          <source>atomic_xsub_rel</source>
          <target state="translated">atomic_xsub_rel</target>
        </trans-unit>
        <trans-unit id="26ecc767af4ffd025d16c46a3406a0049dd8fc7b" translate="yes" xml:space="preserve">
          <source>atomic_xsub_relaxed</source>
          <target state="translated">atomic_xsub_relaxed</target>
        </trans-unit>
        <trans-unit id="30118aa1aa8a06fa5365743b3a5db69fc62b9760" translate="yes" xml:space="preserve">
          <source>await</source>
          <target state="translated">await</target>
        </trans-unit>
        <trans-unit id="09f29c2c08d13ce3404be5b509cab19f5e5eacac" translate="yes" xml:space="preserve">
          <source>b - The index of the second element</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7de5b3ed0945766ca6c90b72ab6a5204652360a" translate="yes" xml:space="preserve">
          <source>binary_heap</source>
          <target state="translated">binary_heap</target>
        </trans-unit>
        <trans-unit id="535679e7cead63303006a67e786cce292e3685d9" translate="yes" xml:space="preserve">
          <source>binary_heap::BinaryHeap</source>
          <target state="translated">binary_heap::BinaryHeap</target>
        </trans-unit>
        <trans-unit id="a7b19a4a67a5ab53c3bb18df2ee7fea38eb1460c" translate="yes" xml:space="preserve">
          <source>binary_heap::BinaryHeap::append</source>
          <target state="translated">binary_heap::BinaryHeap::append</target>
        </trans-unit>
        <trans-unit id="6309d85c1707d07e0922953dfa2fe1ddd8b5bb33" translate="yes" xml:space="preserve">
          <source>binary_heap::BinaryHeap::borrow</source>
          <target state="translated">binary_heap::BinaryHeap::borrow</target>
        </trans-unit>
        <trans-unit id="58b2791a0d6a3c59ef667e52e308f72473480bf1" translate="yes" xml:space="preserve">
          <source>binary_heap::BinaryHeap::borrow_mut</source>
          <target state="translated">binary_heap::BinaryHeap::borrow_mut</target>
        </trans-unit>
        <trans-unit id="93aaaef582dad18fdb33f89609b0caa4dbf18abf" translate="yes" xml:space="preserve">
          <source>binary_heap::BinaryHeap::capacity</source>
          <target state="translated">binary_heap::BinaryHeap::capacity</target>
        </trans-unit>
        <trans-unit id="bb094525d645785e9b1e82692252a6ef24306b48" translate="yes" xml:space="preserve">
          <source>binary_heap::BinaryHeap::clear</source>
          <target state="translated">binary_heap::BinaryHeap::clear</target>
        </trans-unit>
        <trans-unit id="bb5bc0911406a1d5809f1cc6b6a8971463a1a14b" translate="yes" xml:space="preserve">
          <source>binary_heap::BinaryHeap::clone</source>
          <target state="translated">binary_heap::BinaryHeap::clone</target>
        </trans-unit>
        <trans-unit id="b35d330cbc3a89f49223ca0cca029a46e4a7195d" translate="yes" xml:space="preserve">
          <source>binary_heap::BinaryHeap::clone_from</source>
          <target state="translated">binary_heap::BinaryHeap::clone_from</target>
        </trans-unit>
        <trans-unit id="28bce8e8d3c947c36ea1fc7baf1354783626b657" translate="yes" xml:space="preserve">
          <source>binary_heap::BinaryHeap::clone_into</source>
          <target state="translated">binary_heap::BinaryHeap::clone_into</target>
        </trans-unit>
        <trans-unit id="d11f1f8b656463359ad9898ec46a012972148294" translate="yes" xml:space="preserve">
          <source>binary_heap::BinaryHeap::default</source>
          <target state="translated">binary_heap::BinaryHeap::default</target>
        </trans-unit>
        <trans-unit id="e8664099ebe1b91db700e86651390cb9112e2888" translate="yes" xml:space="preserve">
          <source>binary_heap::BinaryHeap::drain</source>
          <target state="translated">binary_heap::BinaryHeap::drain</target>
        </trans-unit>
        <trans-unit id="ee439c6b488fae48ed4884765aa928100895455e" translate="yes" xml:space="preserve">
          <source>binary_heap::BinaryHeap::extend</source>
          <target state="translated">binary_heap::BinaryHeap::extend</target>
        </trans-unit>
        <trans-unit id="8a4ddfa8c20a609f1eb3896b39edd9f86c30822d" translate="yes" xml:space="preserve">
          <source>binary_heap::BinaryHeap::fmt</source>
          <target state="translated">binary_heap::BinaryHeap::fmt</target>
        </trans-unit>
        <trans-unit id="dcc12a768f614871e541f27f98c42bf0a44e8a9a" translate="yes" xml:space="preserve">
          <source>binary_heap::BinaryHeap::from</source>
          <target state="translated">binary_heap::BinaryHeap::from</target>
        </trans-unit>
        <trans-unit id="02d82527d34fc0113d30abb441c9eddf3a91f8ea" translate="yes" xml:space="preserve">
          <source>binary_heap::BinaryHeap::from_iter</source>
          <target state="translated">binary_heap::BinaryHeap::from_iter</target>
        </trans-unit>
        <trans-unit id="b43a8a98aed3ce7a63dc330c53c380792c7a14c8" translate="yes" xml:space="preserve">
          <source>binary_heap::BinaryHeap::into</source>
          <target state="translated">binary_heap::BinaryHeap::into</target>
        </trans-unit>
        <trans-unit id="d46b263c075b14336dbd381f7e7d71d4937bbbee" translate="yes" xml:space="preserve">
          <source>binary_heap::BinaryHeap::into_iter</source>
          <target state="translated">binary_heap::BinaryHeap::into_iter</target>
        </trans-unit>
        <trans-unit id="87a69b6e6dd03ebc16a7230539c801593f333bff" translate="yes" xml:space="preserve">
          <source>binary_heap::BinaryHeap::into_sorted_vec</source>
          <target state="translated">binary_heap::BinaryHeap::into_sorted_vec</target>
        </trans-unit>
        <trans-unit id="948fd85c8135e5798615fa606cdefe32d155b1bb" translate="yes" xml:space="preserve">
          <source>binary_heap::BinaryHeap::into_vec</source>
          <target state="translated">binary_heap::BinaryHeap::into_vec</target>
        </trans-unit>
        <trans-unit id="a8a3ac652983420a3a3946ad7869d6ff77b578fc" translate="yes" xml:space="preserve">
          <source>binary_heap::BinaryHeap::is_empty</source>
          <target state="translated">binary_heap::BinaryHeap::is_empty</target>
        </trans-unit>
        <trans-unit id="5241d5bc893b25af11f3fe57058cdbd5c44e83ea" translate="yes" xml:space="preserve">
          <source>binary_heap::BinaryHeap::iter</source>
          <target state="translated">binary_heap::BinaryHeap::iter</target>
        </trans-unit>
        <trans-unit id="91e9840e2eb1c4048f7aa7cee148b899e946d09b" translate="yes" xml:space="preserve">
          <source>binary_heap::BinaryHeap::len</source>
          <target state="translated">binary_heap::BinaryHeap::len</target>
        </trans-unit>
        <trans-unit id="8dd3c412c3472dd109d956f36988728a59da6dc1" translate="yes" xml:space="preserve">
          <source>binary_heap::BinaryHeap::new</source>
          <target state="translated">binary_heap::BinaryHeap::new</target>
        </trans-unit>
        <trans-unit id="51cf1eb2bcca0b27aa68e158a795976ecc628aaf" translate="yes" xml:space="preserve">
          <source>binary_heap::BinaryHeap::peek</source>
          <target state="translated">binary_heap::BinaryHeap::peek</target>
        </trans-unit>
        <trans-unit id="20953f2d7c009df674527da033de366ab5333527" translate="yes" xml:space="preserve">
          <source>binary_heap::BinaryHeap::peek_mut</source>
          <target state="translated">binary_heap::BinaryHeap::peek_mut</target>
        </trans-unit>
        <trans-unit id="efb2d6e6658afffb69173d12dec8fd9d4672fae9" translate="yes" xml:space="preserve">
          <source>binary_heap::BinaryHeap::pop</source>
          <target state="translated">binary_heap::BinaryHeap::pop</target>
        </trans-unit>
        <trans-unit id="008a7ee125d2cc43bbe8b8f866b406c2a0efa254" translate="yes" xml:space="preserve">
          <source>binary_heap::BinaryHeap::push</source>
          <target state="translated">binary_heap::BinaryHeap::push</target>
        </trans-unit>
        <trans-unit id="b60534e8c78e5774c4730a08699717fd80c3f37d" translate="yes" xml:space="preserve">
          <source>binary_heap::BinaryHeap::reserve</source>
          <target state="translated">binary_heap::BinaryHeap::reserve</target>
        </trans-unit>
        <trans-unit id="f99c0747e0355aaa362123130934de5be286440b" translate="yes" xml:space="preserve">
          <source>binary_heap::BinaryHeap::reserve_exact</source>
          <target state="translated">binary_heap::BinaryHeap::reserve_exact</target>
        </trans-unit>
        <trans-unit id="12cf62738d077af950fd683624e9a0cff41794dd" translate="yes" xml:space="preserve">
          <source>binary_heap::BinaryHeap::shrink_to</source>
          <target state="translated">binary_heap::BinaryHeap::shrink_to</target>
        </trans-unit>
        <trans-unit id="29944e928b25c83f5fc68a25efcabf99db1da669" translate="yes" xml:space="preserve">
          <source>binary_heap::BinaryHeap::shrink_to_fit</source>
          <target state="translated">binary_heap::BinaryHeap::shrink_to_fit</target>
        </trans-unit>
        <trans-unit id="4eaf78e7141061189ce018bef85cf78768829f0b" translate="yes" xml:space="preserve">
          <source>binary_heap::BinaryHeap::to_owned</source>
          <target state="translated">binary_heap::BinaryHeap::to_owned</target>
        </trans-unit>
        <trans-unit id="fc8f88998025e78333c59f0499888862e6cc9530" translate="yes" xml:space="preserve">
          <source>binary_heap::BinaryHeap::try_from</source>
          <target state="translated">binary_heap::BinaryHeap::try_from</target>
        </trans-unit>
        <trans-unit id="82534fb3509bf85b245902e24133eea40156ba8d" translate="yes" xml:space="preserve">
          <source>binary_heap::BinaryHeap::try_into</source>
          <target state="translated">binary_heap::BinaryHeap::try_into</target>
        </trans-unit>
        <trans-unit id="8054376985071f1e8fe00fc83358f451b979ca09" translate="yes" xml:space="preserve">
          <source>binary_heap::BinaryHeap::type_id</source>
          <target state="translated">binary_heap::BinaryHeap::type_id</target>
        </trans-unit>
        <trans-unit id="02d03ac5ecc3fdc0958b203c98ebbe46b149a8e4" translate="yes" xml:space="preserve">
          <source>binary_heap::BinaryHeap::with_capacity</source>
          <target state="translated">binary_heap::BinaryHeap::with_capacity</target>
        </trans-unit>
        <trans-unit id="809e3c382c303d78c47d3ea4c4d905f94a986086" translate="yes" xml:space="preserve">
          <source>binary_heap::Drain</source>
          <target state="translated">binary_heap::Drain</target>
        </trans-unit>
        <trans-unit id="98442ec3943499ccba6988be3dca834fdc7e1f88" translate="yes" xml:space="preserve">
          <source>binary_heap::Drain::all</source>
          <target state="translated">binary_heap::Drain::all</target>
        </trans-unit>
        <trans-unit id="0f71fc97d74130697dcd5bb375e3e4571eb6ea03" translate="yes" xml:space="preserve">
          <source>binary_heap::Drain::any</source>
          <target state="translated">binary_heap::Drain::any</target>
        </trans-unit>
        <trans-unit id="f2ef2198b7f86f2fc0a82d002789edb514969a92" translate="yes" xml:space="preserve">
          <source>binary_heap::Drain::borrow</source>
          <target state="translated">binary_heap::Drain::borrow</target>
        </trans-unit>
        <trans-unit id="2cabfa91424370fb5365cc334e91fc29f0876ebd" translate="yes" xml:space="preserve">
          <source>binary_heap::Drain::borrow_mut</source>
          <target state="translated">binary_heap::Drain::borrow_mut</target>
        </trans-unit>
        <trans-unit id="0f109a86889bde2a063352efc60601233f752a0c" translate="yes" xml:space="preserve">
          <source>binary_heap::Drain::by_ref</source>
          <target state="translated">binary_heap::Drain::by_ref</target>
        </trans-unit>
        <trans-unit id="86a534fa5864313dfe70144c1c3222fc0af1946c" translate="yes" xml:space="preserve">
          <source>binary_heap::Drain::chain</source>
          <target state="translated">binary_heap::Drain::chain</target>
        </trans-unit>
        <trans-unit id="0514a16ae24a6309a5eaefef4f8f02866bbbf66d" translate="yes" xml:space="preserve">
          <source>binary_heap::Drain::cloned</source>
          <target state="translated">binary_heap::Drain::cloned</target>
        </trans-unit>
        <trans-unit id="0747d718d71f3629c72b782ed5cb6f41ebea7476" translate="yes" xml:space="preserve">
          <source>binary_heap::Drain::cmp</source>
          <target state="translated">binary_heap::Drain::cmp</target>
        </trans-unit>
        <trans-unit id="5f8a21fe3ab0dace009578e6a7fc18ce7fd5b446" translate="yes" xml:space="preserve">
          <source>binary_heap::Drain::collect</source>
          <target state="translated">binary_heap::Drain::collect</target>
        </trans-unit>
        <trans-unit id="69b824b9678ce0604e50214767e866dc300c5203" translate="yes" xml:space="preserve">
          <source>binary_heap::Drain::copied</source>
          <target state="translated">binary_heap::Drain::copied</target>
        </trans-unit>
        <trans-unit id="150df3506eef64a1d26078cce7452d9131e19fa1" translate="yes" xml:space="preserve">
          <source>binary_heap::Drain::count</source>
          <target state="translated">binary_heap::Drain::count</target>
        </trans-unit>
        <trans-unit id="88ce5d0e0f244e7026228f97b97fffa833aa66d5" translate="yes" xml:space="preserve">
          <source>binary_heap::Drain::cycle</source>
          <target state="translated">binary_heap::Drain::cycle</target>
        </trans-unit>
        <trans-unit id="5a39afc261c0dd9d3eac8a6650c59b2a343b634a" translate="yes" xml:space="preserve">
          <source>binary_heap::Drain::enumerate</source>
          <target state="translated">binary_heap::Drain::enumerate</target>
        </trans-unit>
        <trans-unit id="78d67e756c1821531766c4ed86b0385758eec6ab" translate="yes" xml:space="preserve">
          <source>binary_heap::Drain::eq</source>
          <target state="translated">binary_heap::Drain::eq</target>
        </trans-unit>
        <trans-unit id="eb1688f9b11d4528b9cfd63b16bb17d67910bcf5" translate="yes" xml:space="preserve">
          <source>binary_heap::Drain::filter</source>
          <target state="translated">binary_heap::Drain::filter</target>
        </trans-unit>
        <trans-unit id="5f6fea9b4aaff5940e5f50cce5bb964ba1ce40ef" translate="yes" xml:space="preserve">
          <source>binary_heap::Drain::filter_map</source>
          <target state="translated">binary_heap::Drain::filter_map</target>
        </trans-unit>
        <trans-unit id="2e6f3a807174c420bb8c590a48711d884c865422" translate="yes" xml:space="preserve">
          <source>binary_heap::Drain::find</source>
          <target state="translated">binary_heap::Drain::find</target>
        </trans-unit>
        <trans-unit id="47e1696157a94b931bd0afb1c54d0f3143fb411f" translate="yes" xml:space="preserve">
          <source>binary_heap::Drain::find_map</source>
          <target state="translated">binary_heap::Drain::find_map</target>
        </trans-unit>
        <trans-unit id="fa198ea9e1eae6bbaa43e94334dfc2b4bafadc82" translate="yes" xml:space="preserve">
          <source>binary_heap::Drain::flat_map</source>
          <target state="translated">binary_heap::Drain::flat_map</target>
        </trans-unit>
        <trans-unit id="47faff0db120cb1f4238f0430b71f031c9d8480b" translate="yes" xml:space="preserve">
          <source>binary_heap::Drain::flatten</source>
          <target state="translated">binary_heap::Drain::flatten</target>
        </trans-unit>
        <trans-unit id="dd4417cf0b5e04266b4ae282ad92e7cef22438c2" translate="yes" xml:space="preserve">
          <source>binary_heap::Drain::fmt</source>
          <target state="translated">binary_heap::Drain::fmt</target>
        </trans-unit>
        <trans-unit id="c7c2fa3d76500184e14092f6403533892f9ac90a" translate="yes" xml:space="preserve">
          <source>binary_heap::Drain::fold</source>
          <target state="translated">binary_heap::Drain::fold</target>
        </trans-unit>
        <trans-unit id="2a9167b727081afae5f22416e996a4fcb1fdb976" translate="yes" xml:space="preserve">
          <source>binary_heap::Drain::for_each</source>
          <target state="translated">binary_heap::Drain::for_each</target>
        </trans-unit>
        <trans-unit id="f0f043fdf7493be0e5ad9ec33e7b0c780f860115" translate="yes" xml:space="preserve">
          <source>binary_heap::Drain::from</source>
          <target state="translated">binary_heap::Drain::from</target>
        </trans-unit>
        <trans-unit id="5a140ea928d4b34d11542467e107396f9d5821cd" translate="yes" xml:space="preserve">
          <source>binary_heap::Drain::fuse</source>
          <target state="translated">binary_heap::Drain::fuse</target>
        </trans-unit>
        <trans-unit id="de98c8ca116f47a837d1b12acde670c4f71cd9af" translate="yes" xml:space="preserve">
          <source>binary_heap::Drain::ge</source>
          <target state="translated">binary_heap::Drain::ge</target>
        </trans-unit>
        <trans-unit id="71955545434e4794d3ef5d7f239b683692c9154e" translate="yes" xml:space="preserve">
          <source>binary_heap::Drain::gt</source>
          <target state="translated">binary_heap::Drain::gt</target>
        </trans-unit>
        <trans-unit id="c94dd2480d4135efe7f3988cb7804c62589f3c0c" translate="yes" xml:space="preserve">
          <source>binary_heap::Drain::inspect</source>
          <target state="translated">binary_heap::Drain::inspect</target>
        </trans-unit>
        <trans-unit id="d67cc4b3474dc143a5b2d596debb2279bf0abda1" translate="yes" xml:space="preserve">
          <source>binary_heap::Drain::into</source>
          <target state="translated">binary_heap::Drain::into</target>
        </trans-unit>
        <trans-unit id="1db8b86b32394b4072245aed75334af3df3e353c" translate="yes" xml:space="preserve">
          <source>binary_heap::Drain::into_iter</source>
          <target state="translated">binary_heap::Drain::into_iter</target>
        </trans-unit>
        <trans-unit id="1aefefb863143456abdfe93789f756c7bf39a992" translate="yes" xml:space="preserve">
          <source>binary_heap::Drain::is_empty</source>
          <target state="translated">binary_heap::Drain::is_empty</target>
        </trans-unit>
        <trans-unit id="ee16867ff20e1c51d3ae77dd4b09725a01933d5d" translate="yes" xml:space="preserve">
          <source>binary_heap::Drain::is_sorted</source>
          <target state="translated">binary_heap::Drain::is_sorted</target>
        </trans-unit>
        <trans-unit id="9c2cc87189a3a3e7ddec7576635ae5bcf9c17a2f" translate="yes" xml:space="preserve">
          <source>binary_heap::Drain::is_sorted_by</source>
          <target state="translated">binary_heap::Drain::is_sorted_by</target>
        </trans-unit>
        <trans-unit id="ede8b03fe7541baafb8c0bc62740614fa834e00b" translate="yes" xml:space="preserve">
          <source>binary_heap::Drain::is_sorted_by_key</source>
          <target state="translated">binary_heap::Drain::is_sorted_by_key</target>
        </trans-unit>
        <trans-unit id="7bc9886c6f1cb107def38bb970500ea972d8d257" translate="yes" xml:space="preserve">
          <source>binary_heap::Drain::last</source>
          <target state="translated">binary_heap::Drain::last</target>
        </trans-unit>
        <trans-unit id="a215c94284434a5dfaa34c91f0a4596eb144796c" translate="yes" xml:space="preserve">
          <source>binary_heap::Drain::le</source>
          <target state="translated">binary_heap::Drain::le</target>
        </trans-unit>
        <trans-unit id="74f92328afc673ad598e38fd6f426cd01fc8c868" translate="yes" xml:space="preserve">
          <source>binary_heap::Drain::len</source>
          <target state="translated">binary_heap::Drain::len</target>
        </trans-unit>
        <trans-unit id="b79d527761003187c34a29d4f17c296479fb5471" translate="yes" xml:space="preserve">
          <source>binary_heap::Drain::lt</source>
          <target state="translated">binary_heap::Drain::lt</target>
        </trans-unit>
        <trans-unit id="bd8d9e44eae7681dd2e335b2bc85f4460bd71cdb" translate="yes" xml:space="preserve">
          <source>binary_heap::Drain::map</source>
          <target state="translated">binary_heap::Drain::map</target>
        </trans-unit>
        <trans-unit id="16b2c73cb0a632f35d333546e0cca11f44ae39bc" translate="yes" xml:space="preserve">
          <source>binary_heap::Drain::max</source>
          <target state="translated">binary_heap::Drain::max</target>
        </trans-unit>
        <trans-unit id="7f132f56a2605f70c70fe15f037d6692f1e262a9" translate="yes" xml:space="preserve">
          <source>binary_heap::Drain::max_by</source>
          <target state="translated">binary_heap::Drain::max_by</target>
        </trans-unit>
        <trans-unit id="e28eded1869809dd14bc9009c300e3a9a7539960" translate="yes" xml:space="preserve">
          <source>binary_heap::Drain::max_by_key</source>
          <target state="translated">binary_heap::Drain::max_by_key</target>
        </trans-unit>
        <trans-unit id="993f86917ab152be3b7611de12fdcfb9edde0b7f" translate="yes" xml:space="preserve">
          <source>binary_heap::Drain::min</source>
          <target state="translated">binary_heap::Drain::min</target>
        </trans-unit>
        <trans-unit id="a623455cdca79b9669517ecfce16e06bb79afead" translate="yes" xml:space="preserve">
          <source>binary_heap::Drain::min_by</source>
          <target state="translated">binary_heap::Drain::min_by</target>
        </trans-unit>
        <trans-unit id="48a0f8dab3c2ae87c97972ddf1d22b73a8dd861a" translate="yes" xml:space="preserve">
          <source>binary_heap::Drain::min_by_key</source>
          <target state="translated">binary_heap::Drain::min_by_key</target>
        </trans-unit>
        <trans-unit id="793256e6a50c2adc1fdb1c83364faf90377bc569" translate="yes" xml:space="preserve">
          <source>binary_heap::Drain::ne</source>
          <target state="translated">binary_heap::Drain::ne</target>
        </trans-unit>
        <trans-unit id="3b155a94c626c8d4762bd37fa83aa418a532eafb" translate="yes" xml:space="preserve">
          <source>binary_heap::Drain::next</source>
          <target state="translated">binary_heap::Drain::next</target>
        </trans-unit>
        <trans-unit id="0751de2ab78ad4f80450865a46a852882e040067" translate="yes" xml:space="preserve">
          <source>binary_heap::Drain::next_back</source>
          <target state="translated">binary_heap::Drain::next_back</target>
        </trans-unit>
        <trans-unit id="1128a3e3509421f1c4956d15d990725feb89e21d" translate="yes" xml:space="preserve">
          <source>binary_heap::Drain::nth</source>
          <target state="translated">binary_heap::Drain::nth</target>
        </trans-unit>
        <trans-unit id="1b251682b7f86f1f06ff439076f5b193f1a61f8d" translate="yes" xml:space="preserve">
          <source>binary_heap::Drain::nth_back</source>
          <target state="translated">binary_heap::Drain::nth_back</target>
        </trans-unit>
        <trans-unit id="799a036c12c076b65c6cd36f0658bd1043e9f3a0" translate="yes" xml:space="preserve">
          <source>binary_heap::Drain::partial_cmp</source>
          <target state="translated">binary_heap::Drain::partial_cmp</target>
        </trans-unit>
        <trans-unit id="bf057f3837023b07039d3dba34fba3f8c98d537d" translate="yes" xml:space="preserve">
          <source>binary_heap::Drain::partition</source>
          <target state="translated">binary_heap::Drain::partition</target>
        </trans-unit>
        <trans-unit id="19d9c0cb9aac00a31c35dcac62710f53fefa0087" translate="yes" xml:space="preserve">
          <source>binary_heap::Drain::peekable</source>
          <target state="translated">binary_heap::Drain::peekable</target>
        </trans-unit>
        <trans-unit id="1dd114234938da0ad421b4b99ae02406caac2344" translate="yes" xml:space="preserve">
          <source>binary_heap::Drain::position</source>
          <target state="translated">binary_heap::Drain::position</target>
        </trans-unit>
        <trans-unit id="7c8e4ea8548a6c0ba4a01e98ad09a4d225db78e3" translate="yes" xml:space="preserve">
          <source>binary_heap::Drain::product</source>
          <target state="translated">binary_heap::Drain::product</target>
        </trans-unit>
        <trans-unit id="3406689edbe4a8ee85bb9bfee707f55872d8d831" translate="yes" xml:space="preserve">
          <source>binary_heap::Drain::rev</source>
          <target state="translated">binary_heap::Drain::rev</target>
        </trans-unit>
        <trans-unit id="c32086515a090cef21593219f4bf192cadcc8aeb" translate="yes" xml:space="preserve">
          <source>binary_heap::Drain::rfind</source>
          <target state="translated">binary_heap::Drain::rfind</target>
        </trans-unit>
        <trans-unit id="0a15663268547a87b380662336201b93bfe7b927" translate="yes" xml:space="preserve">
          <source>binary_heap::Drain::rfold</source>
          <target state="translated">binary_heap::Drain::rfold</target>
        </trans-unit>
        <trans-unit id="cc9182145c109f308bcc10b7542a8e4870761269" translate="yes" xml:space="preserve">
          <source>binary_heap::Drain::rposition</source>
          <target state="translated">binary_heap::Drain::rposition</target>
        </trans-unit>
        <trans-unit id="abf4ecff2954a6645b518cbc7ee5375e327de06d" translate="yes" xml:space="preserve">
          <source>binary_heap::Drain::scan</source>
          <target state="translated">binary_heap::Drain::scan</target>
        </trans-unit>
        <trans-unit id="beeaa4e54d6f06bdf6e8d97daf4c6ba97110fe4b" translate="yes" xml:space="preserve">
          <source>binary_heap::Drain::size_hint</source>
          <target state="translated">binary_heap::Drain::size_hint</target>
        </trans-unit>
        <trans-unit id="390617a5ef7eb512e1f64fda29d0817ac8a2de0d" translate="yes" xml:space="preserve">
          <source>binary_heap::Drain::skip</source>
          <target state="translated">binary_heap::Drain::skip</target>
        </trans-unit>
        <trans-unit id="555849f27caa9107975f108bfd2ad233b567a19f" translate="yes" xml:space="preserve">
          <source>binary_heap::Drain::skip_while</source>
          <target state="translated">binary_heap::Drain::skip_while</target>
        </trans-unit>
        <trans-unit id="8e0961ed66cac45e61be913325c8b51410b38fc2" translate="yes" xml:space="preserve">
          <source>binary_heap::Drain::step_by</source>
          <target state="translated">binary_heap::Drain::step_by</target>
        </trans-unit>
        <trans-unit id="4f07e92ace20c9b19349f0f63c4df41bbbcc5707" translate="yes" xml:space="preserve">
          <source>binary_heap::Drain::sum</source>
          <target state="translated">binary_heap::Drain::sum</target>
        </trans-unit>
        <trans-unit id="a04ea36e0e2330711b07a6a31c0583928bb4552c" translate="yes" xml:space="preserve">
          <source>binary_heap::Drain::take</source>
          <target state="translated">binary_heap::Drain::take</target>
        </trans-unit>
        <trans-unit id="ab587fc992980e56029d08879d5094fe4617a80f" translate="yes" xml:space="preserve">
          <source>binary_heap::Drain::take_while</source>
          <target state="translated">binary_heap::Drain::take_while</target>
        </trans-unit>
        <trans-unit id="4b656080d86d63f60154ea36d0aa7fc059a7e982" translate="yes" xml:space="preserve">
          <source>binary_heap::Drain::try_fold</source>
          <target state="translated">binary_heap::Drain::try_fold</target>
        </trans-unit>
        <trans-unit id="28d86853b0e062e5ab8ed8c51f713e90c712461d" translate="yes" xml:space="preserve">
          <source>binary_heap::Drain::try_for_each</source>
          <target state="translated">binary_heap::Drain::try_for_each</target>
        </trans-unit>
        <trans-unit id="b710c37cf3ec416e0420230d343d774306ca211e" translate="yes" xml:space="preserve">
          <source>binary_heap::Drain::try_from</source>
          <target state="translated">binary_heap::Drain::try_from</target>
        </trans-unit>
        <trans-unit id="eb6a6da132feb560ecfc42b7e2f3db5ce73d397f" translate="yes" xml:space="preserve">
          <source>binary_heap::Drain::try_into</source>
          <target state="translated">binary_heap::Drain::try_into</target>
        </trans-unit>
        <trans-unit id="3da8068b193a4ae9036e8227e5fdb05daee77b90" translate="yes" xml:space="preserve">
          <source>binary_heap::Drain::try_rfold</source>
          <target state="translated">binary_heap::Drain::try_rfold</target>
        </trans-unit>
        <trans-unit id="9f12a3cfa9a6efc93d546701e912a5b4427f4d8b" translate="yes" xml:space="preserve">
          <source>binary_heap::Drain::type_id</source>
          <target state="translated">binary_heap::Drain::type_id</target>
        </trans-unit>
        <trans-unit id="d8d246026c424f94f940e71f25dc94355d89f5ca" translate="yes" xml:space="preserve">
          <source>binary_heap::Drain::unzip</source>
          <target state="translated">binary_heap::Drain::unzip</target>
        </trans-unit>
        <trans-unit id="ff10d71be3d8bfbcfcfc66c51e4804a13d594546" translate="yes" xml:space="preserve">
          <source>binary_heap::Drain::zip</source>
          <target state="translated">binary_heap::Drain::zip</target>
        </trans-unit>
        <trans-unit id="4730347c70c8801a3c65c7c441f41997a0dd8d83" translate="yes" xml:space="preserve">
          <source>binary_heap::IntoIter</source>
          <target state="translated">binary_heap::IntoIter</target>
        </trans-unit>
        <trans-unit id="357969ce2187af6917acbb372400cbf58d067d10" translate="yes" xml:space="preserve">
          <source>binary_heap::IntoIter::all</source>
          <target state="translated">binary_heap::IntoIter::all</target>
        </trans-unit>
        <trans-unit id="06a3cc4129638421f2c4cc56e141bb808fa61a45" translate="yes" xml:space="preserve">
          <source>binary_heap::IntoIter::any</source>
          <target state="translated">binary_heap::IntoIter::any</target>
        </trans-unit>
        <trans-unit id="8c38a2e9a3afd2e3d50599af26609ea808c22835" translate="yes" xml:space="preserve">
          <source>binary_heap::IntoIter::borrow</source>
          <target state="translated">binary_heap::IntoIter::borrow</target>
        </trans-unit>
        <trans-unit id="615e0ee94ca8f8c4041c0e745863942d764dbeeb" translate="yes" xml:space="preserve">
          <source>binary_heap::IntoIter::borrow_mut</source>
          <target state="translated">binary_heap::IntoIter::borrow_mut</target>
        </trans-unit>
        <trans-unit id="fdb384f815b4aa5c9d81be72f7a855184b1938ab" translate="yes" xml:space="preserve">
          <source>binary_heap::IntoIter::by_ref</source>
          <target state="translated">binary_heap::IntoIter::by_ref</target>
        </trans-unit>
        <trans-unit id="dc603b6978215f54c3cf795f21c9ea4ef5c0d883" translate="yes" xml:space="preserve">
          <source>binary_heap::IntoIter::chain</source>
          <target state="translated">binary_heap::IntoIter::chain</target>
        </trans-unit>
        <trans-unit id="e54ba3686e36736c767ab4d9bc5247817e144896" translate="yes" xml:space="preserve">
          <source>binary_heap::IntoIter::clone</source>
          <target state="translated">binary_heap::IntoIter::clone</target>
        </trans-unit>
        <trans-unit id="114dc565efa085152027a8c7bf30fe723675a176" translate="yes" xml:space="preserve">
          <source>binary_heap::IntoIter::clone_from</source>
          <target state="translated">binary_heap::IntoIter::clone_from</target>
        </trans-unit>
        <trans-unit id="e7c8594b3ac7e88f12e2919e5c8edc1fb31b9a38" translate="yes" xml:space="preserve">
          <source>binary_heap::IntoIter::clone_into</source>
          <target state="translated">binary_heap::IntoIter::clone_into</target>
        </trans-unit>
        <trans-unit id="acf95949e2eb6cd09b1b7e974f1dacfccf787101" translate="yes" xml:space="preserve">
          <source>binary_heap::IntoIter::cloned</source>
          <target state="translated">binary_heap::IntoIter::cloned</target>
        </trans-unit>
        <trans-unit id="9927cadb33f57ea0589906329b8a90cd996bd49c" translate="yes" xml:space="preserve">
          <source>binary_heap::IntoIter::cmp</source>
          <target state="translated">binary_heap::IntoIter::cmp</target>
        </trans-unit>
        <trans-unit id="6b836ace6172326913f3a72b8fc85301f9eeec93" translate="yes" xml:space="preserve">
          <source>binary_heap::IntoIter::collect</source>
          <target state="translated">binary_heap::IntoIter::collect</target>
        </trans-unit>
        <trans-unit id="f6f784e83968968a550048a6041fbcc3f4c9f82f" translate="yes" xml:space="preserve">
          <source>binary_heap::IntoIter::copied</source>
          <target state="translated">binary_heap::IntoIter::copied</target>
        </trans-unit>
        <trans-unit id="18d7d5f08b85ef2ef09de1dcb58b63d7190272f8" translate="yes" xml:space="preserve">
          <source>binary_heap::IntoIter::count</source>
          <target state="translated">binary_heap::IntoIter::count</target>
        </trans-unit>
        <trans-unit id="1d6519570106d85d25c2dc4955d9768ad68ea7d3" translate="yes" xml:space="preserve">
          <source>binary_heap::IntoIter::cycle</source>
          <target state="translated">binary_heap::IntoIter::cycle</target>
        </trans-unit>
        <trans-unit id="901de96d0e3637dcc590f73dd8dd8dfbbe336438" translate="yes" xml:space="preserve">
          <source>binary_heap::IntoIter::enumerate</source>
          <target state="translated">binary_heap::IntoIter::enumerate</target>
        </trans-unit>
        <trans-unit id="a5daf4ccf1f0d8b03112a40029a47f8a439099d4" translate="yes" xml:space="preserve">
          <source>binary_heap::IntoIter::eq</source>
          <target state="translated">binary_heap::IntoIter::eq</target>
        </trans-unit>
        <trans-unit id="3b8a17bdfeba590bc1b259f7d154f4cc6e64d5e5" translate="yes" xml:space="preserve">
          <source>binary_heap::IntoIter::filter</source>
          <target state="translated">binary_heap::IntoIter::filter</target>
        </trans-unit>
        <trans-unit id="f6e08ebea03b624236879728797a1a2ff3b5ba13" translate="yes" xml:space="preserve">
          <source>binary_heap::IntoIter::filter_map</source>
          <target state="translated">binary_heap::IntoIter::filter_map</target>
        </trans-unit>
        <trans-unit id="b153e8567f1066ec2653b1f8b317079825406a1c" translate="yes" xml:space="preserve">
          <source>binary_heap::IntoIter::find</source>
          <target state="translated">binary_heap::IntoIter::find</target>
        </trans-unit>
        <trans-unit id="ffac48109bc8b19155b1cc2d5530188a730525ee" translate="yes" xml:space="preserve">
          <source>binary_heap::IntoIter::find_map</source>
          <target state="translated">binary_heap::IntoIter::find_map</target>
        </trans-unit>
        <trans-unit id="ef8189a0832952f1824190fbdb521ff9515098c9" translate="yes" xml:space="preserve">
          <source>binary_heap::IntoIter::flat_map</source>
          <target state="translated">binary_heap::IntoIter::flat_map</target>
        </trans-unit>
        <trans-unit id="6037732278175862c40dacb3c91aae8ddcd1dfb6" translate="yes" xml:space="preserve">
          <source>binary_heap::IntoIter::flatten</source>
          <target state="translated">binary_heap::IntoIter::flatten</target>
        </trans-unit>
        <trans-unit id="7aa5d718828f5cc92cf70d4d6e13302877d2652f" translate="yes" xml:space="preserve">
          <source>binary_heap::IntoIter::fmt</source>
          <target state="translated">binary_heap::IntoIter::fmt</target>
        </trans-unit>
        <trans-unit id="8ee92f66516a27539aec7cc0b3afff78fd8ba5ae" translate="yes" xml:space="preserve">
          <source>binary_heap::IntoIter::fold</source>
          <target state="translated">binary_heap::IntoIter::fold</target>
        </trans-unit>
        <trans-unit id="c4298ab6a952db30c2805cf27c140da09098595f" translate="yes" xml:space="preserve">
          <source>binary_heap::IntoIter::for_each</source>
          <target state="translated">binary_heap::IntoIter::for_each</target>
        </trans-unit>
        <trans-unit id="d79347b5f7f0eabbd1f016ffbd7d6e60ba53a8b1" translate="yes" xml:space="preserve">
          <source>binary_heap::IntoIter::from</source>
          <target state="translated">binary_heap::IntoIter::from</target>
        </trans-unit>
        <trans-unit id="7915348f91d20d4fc073cb2d7a2e9397f1a7c41d" translate="yes" xml:space="preserve">
          <source>binary_heap::IntoIter::fuse</source>
          <target state="translated">binary_heap::IntoIter::fuse</target>
        </trans-unit>
        <trans-unit id="8ff34b58361d634a4f448c0a27e142c98bce5431" translate="yes" xml:space="preserve">
          <source>binary_heap::IntoIter::ge</source>
          <target state="translated">binary_heap::IntoIter::ge</target>
        </trans-unit>
        <trans-unit id="efd29423c44fc53e930d47cc8acd35b430265fb3" translate="yes" xml:space="preserve">
          <source>binary_heap::IntoIter::gt</source>
          <target state="translated">binary_heap::IntoIter::gt</target>
        </trans-unit>
        <trans-unit id="22ba81b978c089dfc24718e43062554ea216f090" translate="yes" xml:space="preserve">
          <source>binary_heap::IntoIter::inspect</source>
          <target state="translated">binary_heap::IntoIter::inspect</target>
        </trans-unit>
        <trans-unit id="f26b9a81a79aa201fb7d1f3b3ef12791797041f3" translate="yes" xml:space="preserve">
          <source>binary_heap::IntoIter::into</source>
          <target state="translated">binary_heap::IntoIter::into</target>
        </trans-unit>
        <trans-unit id="fc996ce8cd3662669ab6a335d985e086ac1c47d7" translate="yes" xml:space="preserve">
          <source>binary_heap::IntoIter::into_iter</source>
          <target state="translated">binary_heap::IntoIter::into_iter</target>
        </trans-unit>
        <trans-unit id="220a8e738cb7659fa8d6e4d5e7a97b75a7533459" translate="yes" xml:space="preserve">
          <source>binary_heap::IntoIter::is_empty</source>
          <target state="translated">binary_heap::IntoIter::is_empty</target>
        </trans-unit>
        <trans-unit id="e87fb0c3caf4baca35e74f6c9513f4c7e30b7503" translate="yes" xml:space="preserve">
          <source>binary_heap::IntoIter::is_sorted</source>
          <target state="translated">binary_heap::IntoIter::is_sorted</target>
        </trans-unit>
        <trans-unit id="124727edbd77fe89f01d516de7ff43f3d689adf3" translate="yes" xml:space="preserve">
          <source>binary_heap::IntoIter::is_sorted_by</source>
          <target state="translated">binary_heap::IntoIter::is_sorted_by</target>
        </trans-unit>
        <trans-unit id="7a719ab00f4b0318a6fb0f1fc2d07ea7ebc27526" translate="yes" xml:space="preserve">
          <source>binary_heap::IntoIter::is_sorted_by_key</source>
          <target state="translated">binary_heap::IntoIter::is_sorted_by_key</target>
        </trans-unit>
        <trans-unit id="1ae157978d54bcd0541ab705bf2f3b1b3278379c" translate="yes" xml:space="preserve">
          <source>binary_heap::IntoIter::last</source>
          <target state="translated">binary_heap::IntoIter::last</target>
        </trans-unit>
        <trans-unit id="3c7dd5a0695ddf817fee702f02cd72f1b8e295bc" translate="yes" xml:space="preserve">
          <source>binary_heap::IntoIter::le</source>
          <target state="translated">binary_heap::IntoIter::le</target>
        </trans-unit>
        <trans-unit id="ef52a0c8bc104e283941338e3fc3d0627f35d33d" translate="yes" xml:space="preserve">
          <source>binary_heap::IntoIter::len</source>
          <target state="translated">binary_heap::IntoIter::len</target>
        </trans-unit>
        <trans-unit id="32928fcd565b6d9edb6adb4b3dfafea6d67d079b" translate="yes" xml:space="preserve">
          <source>binary_heap::IntoIter::lt</source>
          <target state="translated">binary_heap::IntoIter::lt</target>
        </trans-unit>
        <trans-unit id="3089eff84dcf54db491be2fdd4b729f2f4b84a2e" translate="yes" xml:space="preserve">
          <source>binary_heap::IntoIter::map</source>
          <target state="translated">binary_heap::IntoIter::map</target>
        </trans-unit>
        <trans-unit id="5d99d7b0c28bbf65165df05f16c392a5d1965051" translate="yes" xml:space="preserve">
          <source>binary_heap::IntoIter::max</source>
          <target state="translated">binary_heap::IntoIter::max</target>
        </trans-unit>
        <trans-unit id="866bf75747d3d88a8bd256849920daf474df9901" translate="yes" xml:space="preserve">
          <source>binary_heap::IntoIter::max_by</source>
          <target state="translated">binary_heap::IntoIter::max_by</target>
        </trans-unit>
        <trans-unit id="2d10c72e19755fbe2867dd36cc5c53bcf2ebc231" translate="yes" xml:space="preserve">
          <source>binary_heap::IntoIter::max_by_key</source>
          <target state="translated">binary_heap::IntoIter::max_by_key</target>
        </trans-unit>
        <trans-unit id="0cc3a2afc6f8f0cf6663802a581093fe04c891e7" translate="yes" xml:space="preserve">
          <source>binary_heap::IntoIter::min</source>
          <target state="translated">binary_heap::IntoIter::min</target>
        </trans-unit>
        <trans-unit id="b15eb5e0589101659268ebcfc30422a7679757e9" translate="yes" xml:space="preserve">
          <source>binary_heap::IntoIter::min_by</source>
          <target state="translated">binary_heap::IntoIter::min_by</target>
        </trans-unit>
        <trans-unit id="bf6635467c5e4b930c71c388c0dafb4e32f61b4a" translate="yes" xml:space="preserve">
          <source>binary_heap::IntoIter::min_by_key</source>
          <target state="translated">binary_heap::IntoIter::min_by_key</target>
        </trans-unit>
        <trans-unit id="539e19939b9d11dbfef4e5a50ec71c3fa98f4891" translate="yes" xml:space="preserve">
          <source>binary_heap::IntoIter::ne</source>
          <target state="translated">binary_heap::IntoIter::ne</target>
        </trans-unit>
        <trans-unit id="fb0ea095be9260975dd63f0662ace4c92f4bc014" translate="yes" xml:space="preserve">
          <source>binary_heap::IntoIter::next</source>
          <target state="translated">binary_heap::IntoIter::next</target>
        </trans-unit>
        <trans-unit id="999cff0095b330c2b33811b54cdcf4121cc718d1" translate="yes" xml:space="preserve">
          <source>binary_heap::IntoIter::next_back</source>
          <target state="translated">binary_heap::IntoIter::next_back</target>
        </trans-unit>
        <trans-unit id="244d3b81ed6215508b5f6769515b0d125175f78d" translate="yes" xml:space="preserve">
          <source>binary_heap::IntoIter::nth</source>
          <target state="translated">binary_heap::IntoIter::nth</target>
        </trans-unit>
        <trans-unit id="29d9755b86897feead3d4c0f2be2b86d6e28dbb2" translate="yes" xml:space="preserve">
          <source>binary_heap::IntoIter::nth_back</source>
          <target state="translated">binary_heap::IntoIter::nth_back</target>
        </trans-unit>
        <trans-unit id="1778e44421514b2691fc1ac71462947f181370c1" translate="yes" xml:space="preserve">
          <source>binary_heap::IntoIter::partial_cmp</source>
          <target state="translated">binary_heap::IntoIter::partial_cmp</target>
        </trans-unit>
        <trans-unit id="3116ac791f65f8aeaebf8852a3066c38bfe2badb" translate="yes" xml:space="preserve">
          <source>binary_heap::IntoIter::partition</source>
          <target state="translated">binary_heap::IntoIter::partition</target>
        </trans-unit>
        <trans-unit id="48417672fed366bbc9e16cb8ff8b0baf4753d323" translate="yes" xml:space="preserve">
          <source>binary_heap::IntoIter::peekable</source>
          <target state="translated">binary_heap::IntoIter::peekable</target>
        </trans-unit>
        <trans-unit id="73d45d194b5730dcf2b047fae0efcc3d409aca87" translate="yes" xml:space="preserve">
          <source>binary_heap::IntoIter::position</source>
          <target state="translated">binary_heap::IntoIter::position</target>
        </trans-unit>
        <trans-unit id="1c7e22ce175cf4b6d4d6e5c170811a6f777e732f" translate="yes" xml:space="preserve">
          <source>binary_heap::IntoIter::product</source>
          <target state="translated">binary_heap::IntoIter::product</target>
        </trans-unit>
        <trans-unit id="a470977990eaa983325aac63388f0d18943ed62e" translate="yes" xml:space="preserve">
          <source>binary_heap::IntoIter::rev</source>
          <target state="translated">binary_heap::IntoIter::rev</target>
        </trans-unit>
        <trans-unit id="7b54f62eaecf22815d6cc6c5362e2d845c5c916b" translate="yes" xml:space="preserve">
          <source>binary_heap::IntoIter::rfind</source>
          <target state="translated">binary_heap::IntoIter::rfind</target>
        </trans-unit>
        <trans-unit id="72a23af1f7a3f3468cd507e65b5ec58431436552" translate="yes" xml:space="preserve">
          <source>binary_heap::IntoIter::rfold</source>
          <target state="translated">binary_heap::IntoIter::rfold</target>
        </trans-unit>
        <trans-unit id="a61ef4e75549313a4c13ed58fe088555b7c3beb2" translate="yes" xml:space="preserve">
          <source>binary_heap::IntoIter::rposition</source>
          <target state="translated">binary_heap::IntoIter::rposition</target>
        </trans-unit>
        <trans-unit id="5ceec4a9f8373a92d9bec2c91b2799bd16ffc956" translate="yes" xml:space="preserve">
          <source>binary_heap::IntoIter::scan</source>
          <target state="translated">binary_heap::IntoIter::scan</target>
        </trans-unit>
        <trans-unit id="c0138aa12bac230c188fb3ce38d3bf0ca0287fe6" translate="yes" xml:space="preserve">
          <source>binary_heap::IntoIter::size_hint</source>
          <target state="translated">binary_heap::IntoIter::size_hint</target>
        </trans-unit>
        <trans-unit id="70d9227e7a0b4592b639f7bfbcc38ea5416abc9d" translate="yes" xml:space="preserve">
          <source>binary_heap::IntoIter::skip</source>
          <target state="translated">binary_heap::IntoIter::skip</target>
        </trans-unit>
        <trans-unit id="621c59134b771ea6fe31d825178fe0a3854f1358" translate="yes" xml:space="preserve">
          <source>binary_heap::IntoIter::skip_while</source>
          <target state="translated">binary_heap::IntoIter::skip_while</target>
        </trans-unit>
        <trans-unit id="60d9c161419cce2506f226ca865bdf736bfea1ec" translate="yes" xml:space="preserve">
          <source>binary_heap::IntoIter::step_by</source>
          <target state="translated">binary_heap::IntoIter::step_by</target>
        </trans-unit>
        <trans-unit id="638d23e3d48be2cd1857b0c2e2a44cc262826742" translate="yes" xml:space="preserve">
          <source>binary_heap::IntoIter::sum</source>
          <target state="translated">binary_heap::IntoIter::sum</target>
        </trans-unit>
        <trans-unit id="4ccf6a1760baaf1e25a0b8b937b1ca5c47a193b1" translate="yes" xml:space="preserve">
          <source>binary_heap::IntoIter::take</source>
          <target state="translated">binary_heap::IntoIter::take</target>
        </trans-unit>
        <trans-unit id="fbac7afb586ed259ffc5efa5d30b96de435254f7" translate="yes" xml:space="preserve">
          <source>binary_heap::IntoIter::take_while</source>
          <target state="translated">binary_heap::IntoIter::take_while</target>
        </trans-unit>
        <trans-unit id="a48de127e40ec6891d516abab133cdc5ac572d73" translate="yes" xml:space="preserve">
          <source>binary_heap::IntoIter::to_owned</source>
          <target state="translated">binary_heap::IntoIter::to_owned</target>
        </trans-unit>
        <trans-unit id="567dd848543fc6cdc80cc1e11d990cdc17d5dec8" translate="yes" xml:space="preserve">
          <source>binary_heap::IntoIter::try_fold</source>
          <target state="translated">binary_heap::IntoIter::try_fold</target>
        </trans-unit>
        <trans-unit id="57cd9d4a97c1bff100e26222a0e7ae505c22271f" translate="yes" xml:space="preserve">
          <source>binary_heap::IntoIter::try_for_each</source>
          <target state="translated">binary_heap::IntoIter::try_for_each</target>
        </trans-unit>
        <trans-unit id="703214ee7e10f3c2163aadf35b335a488f01bc7c" translate="yes" xml:space="preserve">
          <source>binary_heap::IntoIter::try_from</source>
          <target state="translated">binary_heap::IntoIter::try_from</target>
        </trans-unit>
        <trans-unit id="38be70fa577ec502cd18f9ca37dc3d0560af3fcb" translate="yes" xml:space="preserve">
          <source>binary_heap::IntoIter::try_into</source>
          <target state="translated">binary_heap::IntoIter::try_into</target>
        </trans-unit>
        <trans-unit id="39f6eb26f331ed2571323f97545e16aa132588f3" translate="yes" xml:space="preserve">
          <source>binary_heap::IntoIter::try_rfold</source>
          <target state="translated">binary_heap::IntoIter::try_rfold</target>
        </trans-unit>
        <trans-unit id="801578fc90bfa29570cdf45b58564bcfe7c97cb4" translate="yes" xml:space="preserve">
          <source>binary_heap::IntoIter::type_id</source>
          <target state="translated">binary_heap::IntoIter::type_id</target>
        </trans-unit>
        <trans-unit id="8c776c04fa3ff0be614929e2fb77aa693f4ddde3" translate="yes" xml:space="preserve">
          <source>binary_heap::IntoIter::unzip</source>
          <target state="translated">binary_heap::IntoIter::unzip</target>
        </trans-unit>
        <trans-unit id="fe9d0bfac6e91480bdbda138fcb41a5be075a509" translate="yes" xml:space="preserve">
          <source>binary_heap::IntoIter::zip</source>
          <target state="translated">binary_heap::IntoIter::zip</target>
        </trans-unit>
        <trans-unit id="f12503d87ea6e77127b8e571b9da425053c1391a" translate="yes" xml:space="preserve">
          <source>binary_heap::Iter</source>
          <target state="translated">binary_heap::Iter</target>
        </trans-unit>
        <trans-unit id="41630b132b2ae445aac4819c26465ac2ea790495" translate="yes" xml:space="preserve">
          <source>binary_heap::Iter::all</source>
          <target state="translated">binary_heap::Iter::all</target>
        </trans-unit>
        <trans-unit id="29ea5556f51c5b375c3550abe5eae5a31d66d704" translate="yes" xml:space="preserve">
          <source>binary_heap::Iter::any</source>
          <target state="translated">binary_heap::Iter::any</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
