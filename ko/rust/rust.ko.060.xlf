<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="rust">
    <body>
      <group id="rust">
        <trans-unit id="df147c235b6c6f20bb3eda0bb2b8761b14821c40" translate="yes" xml:space="preserve">
          <source>RSplitN::filter_map</source>
          <target state="translated">RSplitN::filter_map</target>
        </trans-unit>
        <trans-unit id="417ff6d3990c2f48cf80350f9e78a069a62cb4cb" translate="yes" xml:space="preserve">
          <source>RSplitN::find</source>
          <target state="translated">RSplitN::find</target>
        </trans-unit>
        <trans-unit id="48efad8887e7a99dca42de1bdd6c565e220de92f" translate="yes" xml:space="preserve">
          <source>RSplitN::find_map</source>
          <target state="translated">RSplitN::find_map</target>
        </trans-unit>
        <trans-unit id="568bc4971846f450ab7901f1a3acd955642c4e80" translate="yes" xml:space="preserve">
          <source>RSplitN::flat_map</source>
          <target state="translated">RSplitN::flat_map</target>
        </trans-unit>
        <trans-unit id="ca316e3e28a0b380b54757903590f9032148b022" translate="yes" xml:space="preserve">
          <source>RSplitN::flatten</source>
          <target state="translated">RSplitN::flatten</target>
        </trans-unit>
        <trans-unit id="d29e8223de0ec8e1535e09302c8b90b7424195b6" translate="yes" xml:space="preserve">
          <source>RSplitN::fmt</source>
          <target state="translated">RSplitN::fmt</target>
        </trans-unit>
        <trans-unit id="9a5fde5712f0f62eb0f3a2a27a58d6fee9ce4be7" translate="yes" xml:space="preserve">
          <source>RSplitN::fold</source>
          <target state="translated">RSplitN::fold</target>
        </trans-unit>
        <trans-unit id="19d821bc3ee2fc3f90776f15c793992d786fae38" translate="yes" xml:space="preserve">
          <source>RSplitN::for_each</source>
          <target state="translated">RSplitN::for_each</target>
        </trans-unit>
        <trans-unit id="4447e90aa2667a4deed6e2eeab1e6249370e1028" translate="yes" xml:space="preserve">
          <source>RSplitN::from</source>
          <target state="translated">RSplitN::from</target>
        </trans-unit>
        <trans-unit id="98202f72607f1fd96a36b9f4053c557db6ad3e68" translate="yes" xml:space="preserve">
          <source>RSplitN::fuse</source>
          <target state="translated">RSplitN::fuse</target>
        </trans-unit>
        <trans-unit id="b214c488dad957a08db8a98d3475c0ca53f7b19d" translate="yes" xml:space="preserve">
          <source>RSplitN::ge</source>
          <target state="translated">RSplitN::ge</target>
        </trans-unit>
        <trans-unit id="54a551bac63fe37cd87216d45a82bb36602a420c" translate="yes" xml:space="preserve">
          <source>RSplitN::gt</source>
          <target state="translated">RSplitN::gt</target>
        </trans-unit>
        <trans-unit id="39f28d602eafe74bd2a536f2cc6f45e2a0e90863" translate="yes" xml:space="preserve">
          <source>RSplitN::inspect</source>
          <target state="translated">RSplitN::inspect</target>
        </trans-unit>
        <trans-unit id="93e9e1ca28247ae5a5156a89c39536f91b15019c" translate="yes" xml:space="preserve">
          <source>RSplitN::into</source>
          <target state="translated">RSplitN::into</target>
        </trans-unit>
        <trans-unit id="94d2ea4d33c575f044ff0e33e5a9ba626dea1cfa" translate="yes" xml:space="preserve">
          <source>RSplitN::into_iter</source>
          <target state="translated">RSplitN::into_iter</target>
        </trans-unit>
        <trans-unit id="2c8978e15befdec535654c4f7d19d9dc88cde481" translate="yes" xml:space="preserve">
          <source>RSplitN::is_sorted</source>
          <target state="translated">RSplitN::is_sorted</target>
        </trans-unit>
        <trans-unit id="62eba0337cde84aa947bdcf31dd18724b470ecb1" translate="yes" xml:space="preserve">
          <source>RSplitN::is_sorted_by</source>
          <target state="translated">RSplitN::is_sorted_by</target>
        </trans-unit>
        <trans-unit id="cffd6237c131cd94770b8b10442eb4ea2cc365e2" translate="yes" xml:space="preserve">
          <source>RSplitN::is_sorted_by_key</source>
          <target state="translated">RSplitN::is_sorted_by_key</target>
        </trans-unit>
        <trans-unit id="e7425f060fff6e8cd59c6c1e37f2e7c081eb7c7a" translate="yes" xml:space="preserve">
          <source>RSplitN::last</source>
          <target state="translated">RSplitN::last</target>
        </trans-unit>
        <trans-unit id="19216c46a6a0681a15a6b888c3d16e2d8d949b77" translate="yes" xml:space="preserve">
          <source>RSplitN::le</source>
          <target state="translated">RSplitN::le</target>
        </trans-unit>
        <trans-unit id="c72118740f3c93f6a13a211b9e6e2cbb11e17172" translate="yes" xml:space="preserve">
          <source>RSplitN::lt</source>
          <target state="translated">RSplitN::lt</target>
        </trans-unit>
        <trans-unit id="01c0562beb163d763a8dbb0fa2889dd7bcbb644c" translate="yes" xml:space="preserve">
          <source>RSplitN::map</source>
          <target state="translated">RSplitN::map</target>
        </trans-unit>
        <trans-unit id="bd34d204f3e43a6ffa0bcf80dc236139c0b75fea" translate="yes" xml:space="preserve">
          <source>RSplitN::max</source>
          <target state="translated">RSplitN::max</target>
        </trans-unit>
        <trans-unit id="9d2d93ce75440439c78a3f370ba32127356cc06d" translate="yes" xml:space="preserve">
          <source>RSplitN::max_by</source>
          <target state="translated">RSplitN::max_by</target>
        </trans-unit>
        <trans-unit id="74cf5947bcd0dfc059363a8ccfad3ae727666b7e" translate="yes" xml:space="preserve">
          <source>RSplitN::max_by_key</source>
          <target state="translated">RSplitN::max_by_key</target>
        </trans-unit>
        <trans-unit id="33a97715074f4b73dbb99d8500f7f9cb558c602c" translate="yes" xml:space="preserve">
          <source>RSplitN::min</source>
          <target state="translated">RSplitN::min</target>
        </trans-unit>
        <trans-unit id="ce138d1f1f791bf1bd1fa864a31f3c096fd195ab" translate="yes" xml:space="preserve">
          <source>RSplitN::min_by</source>
          <target state="translated">RSplitN::min_by</target>
        </trans-unit>
        <trans-unit id="dbf462cbffa4d5ff829932f8348a1d55725a319e" translate="yes" xml:space="preserve">
          <source>RSplitN::min_by_key</source>
          <target state="translated">RSplitN::min_by_key</target>
        </trans-unit>
        <trans-unit id="b1452aa5ecaa9208c94f91476960f8b769bfda5f" translate="yes" xml:space="preserve">
          <source>RSplitN::ne</source>
          <target state="translated">RSplitN::ne</target>
        </trans-unit>
        <trans-unit id="257081d208912eaccc41933cddc4f079bb925c16" translate="yes" xml:space="preserve">
          <source>RSplitN::next</source>
          <target state="translated">RSplitN::next</target>
        </trans-unit>
        <trans-unit id="b81b89d5345316bfd591a0b85ab9e1ff7b141881" translate="yes" xml:space="preserve">
          <source>RSplitN::nth</source>
          <target state="translated">RSplitN::nth</target>
        </trans-unit>
        <trans-unit id="3def93dd680bae0b523c52bbda866841799e093c" translate="yes" xml:space="preserve">
          <source>RSplitN::partial_cmp</source>
          <target state="translated">RSplitN::partial_cmp</target>
        </trans-unit>
        <trans-unit id="6e01a9fcecf924a4a510e46eb41a75390e7e2768" translate="yes" xml:space="preserve">
          <source>RSplitN::partition</source>
          <target state="translated">RSplitN::partition</target>
        </trans-unit>
        <trans-unit id="87a77fe05456b718823038a47f178ac0f958ec5d" translate="yes" xml:space="preserve">
          <source>RSplitN::peekable</source>
          <target state="translated">RSplitN::peekable</target>
        </trans-unit>
        <trans-unit id="3a6ab93a0b2678c66137b68106ed1b0c42f01e12" translate="yes" xml:space="preserve">
          <source>RSplitN::position</source>
          <target state="translated">RSplitN::position</target>
        </trans-unit>
        <trans-unit id="fa10de7fefe6d4a13d929a2f1b0872410a983010" translate="yes" xml:space="preserve">
          <source>RSplitN::product</source>
          <target state="translated">RSplitN::product</target>
        </trans-unit>
        <trans-unit id="95079653a80713ef2cc60a5b81f24159332378c6" translate="yes" xml:space="preserve">
          <source>RSplitN::rev</source>
          <target state="translated">RSplitN::rev</target>
        </trans-unit>
        <trans-unit id="60583acd869bbccaf0071b243b0c2636c551edc7" translate="yes" xml:space="preserve">
          <source>RSplitN::rposition</source>
          <target state="translated">RSplitN::rposition</target>
        </trans-unit>
        <trans-unit id="637e4c141ff34dfd358b40f90466a14cb2b813c3" translate="yes" xml:space="preserve">
          <source>RSplitN::scan</source>
          <target state="translated">RSplitN::scan</target>
        </trans-unit>
        <trans-unit id="569954c4a473a156f75fba5bf436a5ce63289a47" translate="yes" xml:space="preserve">
          <source>RSplitN::size_hint</source>
          <target state="translated">RSplitN::size_hint</target>
        </trans-unit>
        <trans-unit id="8f20ba3e39baec603ff81e30532a4c051577d921" translate="yes" xml:space="preserve">
          <source>RSplitN::skip</source>
          <target state="translated">RSplitN::skip</target>
        </trans-unit>
        <trans-unit id="83cd6df442cdb6903e16d6368c5414b788603b5c" translate="yes" xml:space="preserve">
          <source>RSplitN::skip_while</source>
          <target state="translated">RSplitN::skip_while</target>
        </trans-unit>
        <trans-unit id="014f6f12a421b4e07bd1c76ddc90a4a6cc67db1d" translate="yes" xml:space="preserve">
          <source>RSplitN::step_by</source>
          <target state="translated">RSplitN::step_by</target>
        </trans-unit>
        <trans-unit id="e278957eec80bd4823259b81c34d2d8e2f15329a" translate="yes" xml:space="preserve">
          <source>RSplitN::sum</source>
          <target state="translated">RSplitN::sum</target>
        </trans-unit>
        <trans-unit id="a23d9f64211997cb1e1bb625d71d6e3b96b24823" translate="yes" xml:space="preserve">
          <source>RSplitN::take</source>
          <target state="translated">RSplitN::take</target>
        </trans-unit>
        <trans-unit id="7e8cf3e07273ac657c9d3a9530ccc5e0b60e9aba" translate="yes" xml:space="preserve">
          <source>RSplitN::take_while</source>
          <target state="translated">RSplitN::take_while</target>
        </trans-unit>
        <trans-unit id="718197888dff3cef1abc3c13e95a6d1cc3416df9" translate="yes" xml:space="preserve">
          <source>RSplitN::to_owned</source>
          <target state="translated">RSplitN::to_owned</target>
        </trans-unit>
        <trans-unit id="ced3293d868759e24d4878a3971f53af1fa37e20" translate="yes" xml:space="preserve">
          <source>RSplitN::try_fold</source>
          <target state="translated">RSplitN::try_fold</target>
        </trans-unit>
        <trans-unit id="fabed7e82960749d82eefecac6b53833e92efd7a" translate="yes" xml:space="preserve">
          <source>RSplitN::try_for_each</source>
          <target state="translated">RSplitN::try_for_each</target>
        </trans-unit>
        <trans-unit id="8a1e6a05583f47e04b76dc41ee27318147e45ee1" translate="yes" xml:space="preserve">
          <source>RSplitN::try_from</source>
          <target state="translated">RSplitN::try_from</target>
        </trans-unit>
        <trans-unit id="8fead726174a2e0ca92a507bdacb89a5e6acca2f" translate="yes" xml:space="preserve">
          <source>RSplitN::try_into</source>
          <target state="translated">RSplitN::try_into</target>
        </trans-unit>
        <trans-unit id="1b5b20c3226fabb11365a33c74675995fb76a859" translate="yes" xml:space="preserve">
          <source>RSplitN::type_id</source>
          <target state="translated">RSplitN::type_id</target>
        </trans-unit>
        <trans-unit id="9bc64439b6f957d4549337927e80c8dc2b97c454" translate="yes" xml:space="preserve">
          <source>RSplitN::unzip</source>
          <target state="translated">RSplitN::unzip</target>
        </trans-unit>
        <trans-unit id="b3cc1ae8a9a4da3791dc83684bee1730dfbc62ad" translate="yes" xml:space="preserve">
          <source>RSplitN::zip</source>
          <target state="translated">RSplitN::zip</target>
        </trans-unit>
        <trans-unit id="96b98608c0527720a1c98632d2b8ca993f9e90ff" translate="yes" xml:space="preserve">
          <source>RSplitNMut</source>
          <target state="translated">RSplitNMut</target>
        </trans-unit>
        <trans-unit id="d7dd516414254d3928ba7a34c87640a87c033158" translate="yes" xml:space="preserve">
          <source>RSplitNMut::all</source>
          <target state="translated">RSplitNMut::all</target>
        </trans-unit>
        <trans-unit id="83e16c061944b08697feea42744434406777e436" translate="yes" xml:space="preserve">
          <source>RSplitNMut::any</source>
          <target state="translated">RSplitNMut::any</target>
        </trans-unit>
        <trans-unit id="59298364b0553d6e7c8f75fa3b7a30a2d3cf3029" translate="yes" xml:space="preserve">
          <source>RSplitNMut::borrow</source>
          <target state="translated">RSplitNMut::borrow</target>
        </trans-unit>
        <trans-unit id="4cb3646a3e7be6f771d95bef8bcc584d93787a07" translate="yes" xml:space="preserve">
          <source>RSplitNMut::borrow_mut</source>
          <target state="translated">RSplitNMut::borrow_mut</target>
        </trans-unit>
        <trans-unit id="e28b3a2ba6af41f2ab31f7fe0651d51efd058dd9" translate="yes" xml:space="preserve">
          <source>RSplitNMut::by_ref</source>
          <target state="translated">RSplitNMut::by_ref</target>
        </trans-unit>
        <trans-unit id="de800bcde2d637e8c6af15d196bd200e52432ad5" translate="yes" xml:space="preserve">
          <source>RSplitNMut::chain</source>
          <target state="translated">RSplitNMut::chain</target>
        </trans-unit>
        <trans-unit id="9aeee373c67330127ff0f5ada6f64c12d590f38a" translate="yes" xml:space="preserve">
          <source>RSplitNMut::cloned</source>
          <target state="translated">RSplitNMut::cloned</target>
        </trans-unit>
        <trans-unit id="7e8ff7cacba8f3dad5cba808ef3bea4626bc6f7a" translate="yes" xml:space="preserve">
          <source>RSplitNMut::cmp</source>
          <target state="translated">RSplitNMut::cmp</target>
        </trans-unit>
        <trans-unit id="97a87df9fb7a43de5779290d11763aa4995f185f" translate="yes" xml:space="preserve">
          <source>RSplitNMut::collect</source>
          <target state="translated">RSplitNMut::collect</target>
        </trans-unit>
        <trans-unit id="4a4631bc75ae278b1a95df30c84c011881c7db8e" translate="yes" xml:space="preserve">
          <source>RSplitNMut::copied</source>
          <target state="translated">RSplitNMut::copied</target>
        </trans-unit>
        <trans-unit id="054069cecfdc36ea3fc1b49b5412a440f2dfda5c" translate="yes" xml:space="preserve">
          <source>RSplitNMut::count</source>
          <target state="translated">RSplitNMut::count</target>
        </trans-unit>
        <trans-unit id="41a19a065cfa37f361d0e1a126e06ac449a4ccbf" translate="yes" xml:space="preserve">
          <source>RSplitNMut::cycle</source>
          <target state="translated">RSplitNMut::cycle</target>
        </trans-unit>
        <trans-unit id="a4727b66ab2da55a5b907aafc5c498ff8e97ce11" translate="yes" xml:space="preserve">
          <source>RSplitNMut::enumerate</source>
          <target state="translated">RSplitNMut::enumerate</target>
        </trans-unit>
        <trans-unit id="134bd390a4e3332a32acdc6e08dc5f6f639d07c5" translate="yes" xml:space="preserve">
          <source>RSplitNMut::eq</source>
          <target state="translated">RSplitNMut::eq</target>
        </trans-unit>
        <trans-unit id="c32661469ab3bd7ed31f4bd3b17b9883ffa31018" translate="yes" xml:space="preserve">
          <source>RSplitNMut::filter</source>
          <target state="translated">RSplitNMut::filter</target>
        </trans-unit>
        <trans-unit id="e964b8c38c0e663794e58761e6b2386a8fe43aa6" translate="yes" xml:space="preserve">
          <source>RSplitNMut::filter_map</source>
          <target state="translated">RSplitNMut::filter_map</target>
        </trans-unit>
        <trans-unit id="19a2490225eeae90389edac3fef1d5c1fcfcc11f" translate="yes" xml:space="preserve">
          <source>RSplitNMut::find</source>
          <target state="translated">RSplitNMut::find</target>
        </trans-unit>
        <trans-unit id="73c80bf1e8c2affcc914c59ee8b23cc03c7b9b67" translate="yes" xml:space="preserve">
          <source>RSplitNMut::find_map</source>
          <target state="translated">RSplitNMut::find_map</target>
        </trans-unit>
        <trans-unit id="abd2e1a15327227b7693a5327f55af5dde61946b" translate="yes" xml:space="preserve">
          <source>RSplitNMut::flat_map</source>
          <target state="translated">RSplitNMut::flat_map</target>
        </trans-unit>
        <trans-unit id="31a64c39b8e735a850b1c7bf1d935ca8edc55be2" translate="yes" xml:space="preserve">
          <source>RSplitNMut::flatten</source>
          <target state="translated">RSplitNMut::flatten</target>
        </trans-unit>
        <trans-unit id="8912ce0193fa675d269b67c78d37de32d2cf80ff" translate="yes" xml:space="preserve">
          <source>RSplitNMut::fmt</source>
          <target state="translated">RSplitNMut::fmt</target>
        </trans-unit>
        <trans-unit id="23651e731f772c4bb2b8298cd53a7d4eb57a6d5d" translate="yes" xml:space="preserve">
          <source>RSplitNMut::fold</source>
          <target state="translated">RSplitNMut::fold</target>
        </trans-unit>
        <trans-unit id="67d7c7f07751f7da1d4d7739a4111ee5ae77cf4e" translate="yes" xml:space="preserve">
          <source>RSplitNMut::for_each</source>
          <target state="translated">RSplitNMut::for_each</target>
        </trans-unit>
        <trans-unit id="550c56b96c516ba008835efe3e2c56bedc1b893c" translate="yes" xml:space="preserve">
          <source>RSplitNMut::from</source>
          <target state="translated">RSplitNMut::from</target>
        </trans-unit>
        <trans-unit id="7b58e09d124b3ae62cd4060005d7d87f5a421c94" translate="yes" xml:space="preserve">
          <source>RSplitNMut::fuse</source>
          <target state="translated">RSplitNMut::fuse</target>
        </trans-unit>
        <trans-unit id="99304fbc5bbce67e3493201b941377a0f946d189" translate="yes" xml:space="preserve">
          <source>RSplitNMut::ge</source>
          <target state="translated">RSplitNMut::ge</target>
        </trans-unit>
        <trans-unit id="b4e71928d82cfc45e74c7fdf1c16a15ef035ea75" translate="yes" xml:space="preserve">
          <source>RSplitNMut::gt</source>
          <target state="translated">RSplitNMut::gt</target>
        </trans-unit>
        <trans-unit id="4edcba320780dd9bdc97f90eb1991cd1639f9df2" translate="yes" xml:space="preserve">
          <source>RSplitNMut::inspect</source>
          <target state="translated">RSplitNMut::inspect</target>
        </trans-unit>
        <trans-unit id="ff354fd209490e6a35abc4f5a73dac45b664004a" translate="yes" xml:space="preserve">
          <source>RSplitNMut::into</source>
          <target state="translated">RSplitNMut::into</target>
        </trans-unit>
        <trans-unit id="6f6cebee2bfb2d692bf1f6c6428dc4b923f8792b" translate="yes" xml:space="preserve">
          <source>RSplitNMut::into_iter</source>
          <target state="translated">RSplitNMut::into_iter</target>
        </trans-unit>
        <trans-unit id="27087435b0ef42ed45866c9ff5950b933d8604f6" translate="yes" xml:space="preserve">
          <source>RSplitNMut::is_sorted</source>
          <target state="translated">RSplitNMut::is_sorted</target>
        </trans-unit>
        <trans-unit id="12b79427da40a5e02fb8f89547fa126171cfb95a" translate="yes" xml:space="preserve">
          <source>RSplitNMut::is_sorted_by</source>
          <target state="translated">RSplitNMut::is_sorted_by</target>
        </trans-unit>
        <trans-unit id="b3560ef3266d35b016af9cd117540ae1c45c4e2b" translate="yes" xml:space="preserve">
          <source>RSplitNMut::is_sorted_by_key</source>
          <target state="translated">RSplitNMut::is_sorted_by_key</target>
        </trans-unit>
        <trans-unit id="22779e7dfcdec74510972fabe1fda6249989a3a0" translate="yes" xml:space="preserve">
          <source>RSplitNMut::last</source>
          <target state="translated">RSplitNMut::last</target>
        </trans-unit>
        <trans-unit id="fec22ada0755e194cce37297a211ca7b0ba9cea5" translate="yes" xml:space="preserve">
          <source>RSplitNMut::le</source>
          <target state="translated">RSplitNMut::le</target>
        </trans-unit>
        <trans-unit id="5fe5309c92d765fc84696294f0f68bc8163ccc96" translate="yes" xml:space="preserve">
          <source>RSplitNMut::lt</source>
          <target state="translated">RSplitNMut::lt</target>
        </trans-unit>
        <trans-unit id="db74770dca2166d7d589c6285343744f79ae9d45" translate="yes" xml:space="preserve">
          <source>RSplitNMut::map</source>
          <target state="translated">RSplitNMut::map</target>
        </trans-unit>
        <trans-unit id="2402b01030b7fcdc13fa83a9265ad4c2c8da7ddf" translate="yes" xml:space="preserve">
          <source>RSplitNMut::max</source>
          <target state="translated">RSplitNMut::max</target>
        </trans-unit>
        <trans-unit id="8813083853d2d4960ca3a6349a66579b305a5944" translate="yes" xml:space="preserve">
          <source>RSplitNMut::max_by</source>
          <target state="translated">RSplitNMut::max_by</target>
        </trans-unit>
        <trans-unit id="9bd0ae136f34592f016f475185ef3daf62b393ae" translate="yes" xml:space="preserve">
          <source>RSplitNMut::max_by_key</source>
          <target state="translated">RSplitNMut::max_by_key</target>
        </trans-unit>
        <trans-unit id="93870fdea1511109b9addcdc229e0afdedf21140" translate="yes" xml:space="preserve">
          <source>RSplitNMut::min</source>
          <target state="translated">RSplitNMut::min</target>
        </trans-unit>
        <trans-unit id="4bfef97bdd5afdffaab3ce48ad8ea051fe4eaa95" translate="yes" xml:space="preserve">
          <source>RSplitNMut::min_by</source>
          <target state="translated">RSplitNMut::min_by</target>
        </trans-unit>
        <trans-unit id="af3fa7f8ac6f8feb00ad08cce85f7b15964dd020" translate="yes" xml:space="preserve">
          <source>RSplitNMut::min_by_key</source>
          <target state="translated">RSplitNMut::min_by_key</target>
        </trans-unit>
        <trans-unit id="c25a909bf89e4aa6ac7e9759a731d3849738e2a1" translate="yes" xml:space="preserve">
          <source>RSplitNMut::ne</source>
          <target state="translated">RSplitNMut::ne</target>
        </trans-unit>
        <trans-unit id="a6fcbd61189ca9df4f56db3accd8aa53f22ec442" translate="yes" xml:space="preserve">
          <source>RSplitNMut::next</source>
          <target state="translated">RSplitNMut::next</target>
        </trans-unit>
        <trans-unit id="12a21a93192dec3656c639f0ba86b25f7396a9e9" translate="yes" xml:space="preserve">
          <source>RSplitNMut::nth</source>
          <target state="translated">RSplitNMut::nth</target>
        </trans-unit>
        <trans-unit id="23b36a6c2f23af24631aa09a88910100f4d92c6c" translate="yes" xml:space="preserve">
          <source>RSplitNMut::partial_cmp</source>
          <target state="translated">RSplitNMut::partial_cmp</target>
        </trans-unit>
        <trans-unit id="e2d47e7e9c9a50d9a03b6f64668b545ae56c73be" translate="yes" xml:space="preserve">
          <source>RSplitNMut::partition</source>
          <target state="translated">RSplitNMut::partition</target>
        </trans-unit>
        <trans-unit id="c5664b6943f9825fa8973dafd45e2536fbe7e27e" translate="yes" xml:space="preserve">
          <source>RSplitNMut::peekable</source>
          <target state="translated">RSplitNMut::peekable</target>
        </trans-unit>
        <trans-unit id="e85789627885ed2553083166e738840a8139f1f1" translate="yes" xml:space="preserve">
          <source>RSplitNMut::position</source>
          <target state="translated">RSplitNMut::position</target>
        </trans-unit>
        <trans-unit id="ac5409ee44428cd47f35a4b61bcac39682c63c9e" translate="yes" xml:space="preserve">
          <source>RSplitNMut::product</source>
          <target state="translated">RSplitNMut::product</target>
        </trans-unit>
        <trans-unit id="98f90c47fbb4e8b39081c5e20cc7981ce546d98b" translate="yes" xml:space="preserve">
          <source>RSplitNMut::rev</source>
          <target state="translated">RSplitNMut::rev</target>
        </trans-unit>
        <trans-unit id="f5d13ab63cadafc03e3ae9dac78d11b749ec0a49" translate="yes" xml:space="preserve">
          <source>RSplitNMut::rposition</source>
          <target state="translated">RSplitNMut::rposition</target>
        </trans-unit>
        <trans-unit id="dc81da716886fa666d2e595069e820035abe90d2" translate="yes" xml:space="preserve">
          <source>RSplitNMut::scan</source>
          <target state="translated">RSplitNMut::scan</target>
        </trans-unit>
        <trans-unit id="a8d40a9fcac924df951eec014886781a0e038d57" translate="yes" xml:space="preserve">
          <source>RSplitNMut::size_hint</source>
          <target state="translated">RSplitNMut::size_hint</target>
        </trans-unit>
        <trans-unit id="f1fa63666e05da189fb3da88789672c3a6a8cb31" translate="yes" xml:space="preserve">
          <source>RSplitNMut::skip</source>
          <target state="translated">RSplitNMut::skip</target>
        </trans-unit>
        <trans-unit id="f449fc8626756513eeb5844f6afc63363be311b5" translate="yes" xml:space="preserve">
          <source>RSplitNMut::skip_while</source>
          <target state="translated">RSplitNMut::skip_while</target>
        </trans-unit>
        <trans-unit id="6b5962ac5d9cd00cd3ff64ff5cd7ddb70ddfae75" translate="yes" xml:space="preserve">
          <source>RSplitNMut::step_by</source>
          <target state="translated">RSplitNMut::step_by</target>
        </trans-unit>
        <trans-unit id="b193cd7d2b00aa4246031ddbecd270ce080462cb" translate="yes" xml:space="preserve">
          <source>RSplitNMut::sum</source>
          <target state="translated">RSplitNMut::sum</target>
        </trans-unit>
        <trans-unit id="c753ab03b89617c959d32c6f01824d828d53e56a" translate="yes" xml:space="preserve">
          <source>RSplitNMut::take</source>
          <target state="translated">RSplitNMut::take</target>
        </trans-unit>
        <trans-unit id="ea7323e0182aa026a7cfc84ff0d87320d74dcf16" translate="yes" xml:space="preserve">
          <source>RSplitNMut::take_while</source>
          <target state="translated">RSplitNMut::take_while</target>
        </trans-unit>
        <trans-unit id="e74f89842904b9cb0c50248ecb9dae37667d31c6" translate="yes" xml:space="preserve">
          <source>RSplitNMut::try_fold</source>
          <target state="translated">RSplitNMut::try_fold</target>
        </trans-unit>
        <trans-unit id="33469eee8880e46234e6ba3c05aef3e5c1768366" translate="yes" xml:space="preserve">
          <source>RSplitNMut::try_for_each</source>
          <target state="translated">RSplitNMut::try_for_each</target>
        </trans-unit>
        <trans-unit id="c8dd1ed0440086b5f13f28c5f514bda913fd36d7" translate="yes" xml:space="preserve">
          <source>RSplitNMut::try_from</source>
          <target state="translated">RSplitNMut::try_from</target>
        </trans-unit>
        <trans-unit id="ac5b1c352fdcb4edbab4e77db7958443edfa6a62" translate="yes" xml:space="preserve">
          <source>RSplitNMut::try_into</source>
          <target state="translated">RSplitNMut::try_into</target>
        </trans-unit>
        <trans-unit id="9a0ce9f2a4ba8a2959395b5f2e703cc0c6a85640" translate="yes" xml:space="preserve">
          <source>RSplitNMut::type_id</source>
          <target state="translated">RSplitNMut::type_id</target>
        </trans-unit>
        <trans-unit id="9c633735292e5d91a6f1d5415583e4ec39db2f35" translate="yes" xml:space="preserve">
          <source>RSplitNMut::unzip</source>
          <target state="translated">RSplitNMut::unzip</target>
        </trans-unit>
        <trans-unit id="e23ed1055ca08e71d94a28fa392d58c0253e2b4b" translate="yes" xml:space="preserve">
          <source>RSplitNMut::zip</source>
          <target state="translated">RSplitNMut::zip</target>
        </trans-unit>
        <trans-unit id="23105a5129c5ea1d331b3840560ee09cdf3ff737" translate="yes" xml:space="preserve">
          <source>RSplitTerminator</source>
          <target state="translated">RSplitTerminator</target>
        </trans-unit>
        <trans-unit id="376dd763382d64b792f11c47682b587930e74219" translate="yes" xml:space="preserve">
          <source>RSplitTerminator::all</source>
          <target state="translated">RSplitTerminator::all</target>
        </trans-unit>
        <trans-unit id="6661ecb00f4efee6875d179fe3205bbacce32134" translate="yes" xml:space="preserve">
          <source>RSplitTerminator::any</source>
          <target state="translated">RSplitTerminator::any</target>
        </trans-unit>
        <trans-unit id="d6e7b79a663eb1b53cc5fde166e5f18a252bb661" translate="yes" xml:space="preserve">
          <source>RSplitTerminator::borrow</source>
          <target state="translated">RSplitTerminator::borrow</target>
        </trans-unit>
        <trans-unit id="2f4e18eca2f95b585f03db64d3c2ab5911ae87d2" translate="yes" xml:space="preserve">
          <source>RSplitTerminator::borrow_mut</source>
          <target state="translated">RSplitTerminator::borrow_mut</target>
        </trans-unit>
        <trans-unit id="73febd77f1a2b67b0a8c67a451eaa529658bdf75" translate="yes" xml:space="preserve">
          <source>RSplitTerminator::by_ref</source>
          <target state="translated">RSplitTerminator::by_ref</target>
        </trans-unit>
        <trans-unit id="8e1a4abe75e5f51dc60ca3aebafd319ec438f228" translate="yes" xml:space="preserve">
          <source>RSplitTerminator::chain</source>
          <target state="translated">RSplitTerminator::chain</target>
        </trans-unit>
        <trans-unit id="c40f34846d1f3d4ec3aaf656be502ec1afcc6a28" translate="yes" xml:space="preserve">
          <source>RSplitTerminator::clone</source>
          <target state="translated">RSplitTerminator::clone</target>
        </trans-unit>
        <trans-unit id="2d91f73387ec4ebf2992f5a103e7dd635606704d" translate="yes" xml:space="preserve">
          <source>RSplitTerminator::clone_from</source>
          <target state="translated">RSplitTerminator::clone_from</target>
        </trans-unit>
        <trans-unit id="d1969d86317bd513dc5f53b47b2343625c87f510" translate="yes" xml:space="preserve">
          <source>RSplitTerminator::clone_into</source>
          <target state="translated">RSplitTerminator::clone_into</target>
        </trans-unit>
        <trans-unit id="175b151c874c2be10f6fac851257e6c14869f679" translate="yes" xml:space="preserve">
          <source>RSplitTerminator::cloned</source>
          <target state="translated">RSplitTerminator::cloned</target>
        </trans-unit>
        <trans-unit id="e5ca4aad1ea5b5dfebb9655207e752a13edfb77d" translate="yes" xml:space="preserve">
          <source>RSplitTerminator::cmp</source>
          <target state="translated">RSplitTerminator::cmp</target>
        </trans-unit>
        <trans-unit id="8229609953663a23d27fbec332ebb2772bdd764e" translate="yes" xml:space="preserve">
          <source>RSplitTerminator::collect</source>
          <target state="translated">RSplitTerminator::collect</target>
        </trans-unit>
        <trans-unit id="b00b886882d7af19032225e9ef584a9e8d048193" translate="yes" xml:space="preserve">
          <source>RSplitTerminator::copied</source>
          <target state="translated">RSplitTerminator::copied</target>
        </trans-unit>
        <trans-unit id="0cf6d69b5815c26cfacfaab5624218fc9481d5f6" translate="yes" xml:space="preserve">
          <source>RSplitTerminator::count</source>
          <target state="translated">RSplitTerminator::count</target>
        </trans-unit>
        <trans-unit id="b92c328700717b7c285b0fa4d1ebe58fe8482474" translate="yes" xml:space="preserve">
          <source>RSplitTerminator::cycle</source>
          <target state="translated">RSplitTerminator::cycle</target>
        </trans-unit>
        <trans-unit id="ead3889053232e837c36eb393dce628ad5e95cab" translate="yes" xml:space="preserve">
          <source>RSplitTerminator::enumerate</source>
          <target state="translated">RSplitTerminator::enumerate</target>
        </trans-unit>
        <trans-unit id="ab40f5c5825ded02c34f8f79e4f734362dd494eb" translate="yes" xml:space="preserve">
          <source>RSplitTerminator::eq</source>
          <target state="translated">RSplitTerminator::eq</target>
        </trans-unit>
        <trans-unit id="4070839baeb118ca24d9a7c8fc791f1ef43a7a48" translate="yes" xml:space="preserve">
          <source>RSplitTerminator::filter</source>
          <target state="translated">RSplitTerminator::filter</target>
        </trans-unit>
        <trans-unit id="ee5cd406ba495945a8108d1d285f75b8f42da697" translate="yes" xml:space="preserve">
          <source>RSplitTerminator::filter_map</source>
          <target state="translated">RSplitTerminator::filter_map</target>
        </trans-unit>
        <trans-unit id="9a7152b34a707659ad8514d19be74ea00cb402ff" translate="yes" xml:space="preserve">
          <source>RSplitTerminator::find</source>
          <target state="translated">RSplitTerminator::find</target>
        </trans-unit>
        <trans-unit id="38d5ed36f9d76af7173e8e10fad93055fbb31b5b" translate="yes" xml:space="preserve">
          <source>RSplitTerminator::find_map</source>
          <target state="translated">RSplitTerminator::find_map</target>
        </trans-unit>
        <trans-unit id="e87f485b4665ef3c16be7ed90d0a3127ec5b2df0" translate="yes" xml:space="preserve">
          <source>RSplitTerminator::flat_map</source>
          <target state="translated">RSplitTerminator::flat_map</target>
        </trans-unit>
        <trans-unit id="67b0cafd1c17ea04e9a536da403c712c9599311c" translate="yes" xml:space="preserve">
          <source>RSplitTerminator::flatten</source>
          <target state="translated">RSplitTerminator::flatten</target>
        </trans-unit>
        <trans-unit id="844131694fca5a07a6cfe9852674e2df0bac3a2e" translate="yes" xml:space="preserve">
          <source>RSplitTerminator::fmt</source>
          <target state="translated">RSplitTerminator::fmt</target>
        </trans-unit>
        <trans-unit id="5c8098f9630f14eec062e6c80dd27ee8fbbb4e4e" translate="yes" xml:space="preserve">
          <source>RSplitTerminator::fold</source>
          <target state="translated">RSplitTerminator::fold</target>
        </trans-unit>
        <trans-unit id="fa359771f5e012c759134d493d56a828ff56a0ac" translate="yes" xml:space="preserve">
          <source>RSplitTerminator::for_each</source>
          <target state="translated">RSplitTerminator::for_each</target>
        </trans-unit>
        <trans-unit id="e0cfc5c56f4fc0ed8debb6d029f471e1eea7265b" translate="yes" xml:space="preserve">
          <source>RSplitTerminator::from</source>
          <target state="translated">RSplitTerminator::from</target>
        </trans-unit>
        <trans-unit id="98cdf451e12b88f3f2d727ec3d6c7c4ad773639b" translate="yes" xml:space="preserve">
          <source>RSplitTerminator::fuse</source>
          <target state="translated">RSplitTerminator::fuse</target>
        </trans-unit>
        <trans-unit id="7a24460c9ba9f75b131acdc61bf8300f47cf5f00" translate="yes" xml:space="preserve">
          <source>RSplitTerminator::ge</source>
          <target state="translated">RSplitTerminator::ge</target>
        </trans-unit>
        <trans-unit id="635d595b9c76a5077ff2a9fe6d673e24660b97d9" translate="yes" xml:space="preserve">
          <source>RSplitTerminator::gt</source>
          <target state="translated">RSplitTerminator::gt</target>
        </trans-unit>
        <trans-unit id="77a42cbcd75fb712d4f364479d7b26244918d1f4" translate="yes" xml:space="preserve">
          <source>RSplitTerminator::inspect</source>
          <target state="translated">RSplitTerminator::inspect</target>
        </trans-unit>
        <trans-unit id="4c7b27d061cda4ce5add2f27fb5c87a315fa84dc" translate="yes" xml:space="preserve">
          <source>RSplitTerminator::into</source>
          <target state="translated">RSplitTerminator::into</target>
        </trans-unit>
        <trans-unit id="eacf21840b34e3f5742fe2bd70efbe72362cfc56" translate="yes" xml:space="preserve">
          <source>RSplitTerminator::into_iter</source>
          <target state="translated">RSplitTerminator::into_iter</target>
        </trans-unit>
        <trans-unit id="712dcf3ac552b82bbd48d7f050f4a2c825985286" translate="yes" xml:space="preserve">
          <source>RSplitTerminator::is_sorted</source>
          <target state="translated">RSplitTerminator::is_sorted</target>
        </trans-unit>
        <trans-unit id="bc28f388086fac5eb686bbac704a6addb037943a" translate="yes" xml:space="preserve">
          <source>RSplitTerminator::is_sorted_by</source>
          <target state="translated">RSplitTerminator::is_sorted_by</target>
        </trans-unit>
        <trans-unit id="b356ae369328a2c2712fff7c25a10cb0205901e5" translate="yes" xml:space="preserve">
          <source>RSplitTerminator::is_sorted_by_key</source>
          <target state="translated">RSplitTerminator::is_sorted_by_key</target>
        </trans-unit>
        <trans-unit id="98b79fe2f89a418f53681930624c3b27822d1b67" translate="yes" xml:space="preserve">
          <source>RSplitTerminator::last</source>
          <target state="translated">RSplitTerminator::last</target>
        </trans-unit>
        <trans-unit id="7b335bec3b58e8874d34df1fc422432857fb34dd" translate="yes" xml:space="preserve">
          <source>RSplitTerminator::le</source>
          <target state="translated">RSplitTerminator::le</target>
        </trans-unit>
        <trans-unit id="f8057de5995cc8251fe25385dc6f5ac74c91017f" translate="yes" xml:space="preserve">
          <source>RSplitTerminator::lt</source>
          <target state="translated">RSplitTerminator::lt</target>
        </trans-unit>
        <trans-unit id="ad5a4b923480d6be068887aa1eb03bdd3b82efc3" translate="yes" xml:space="preserve">
          <source>RSplitTerminator::map</source>
          <target state="translated">RSplitTerminator::map</target>
        </trans-unit>
        <trans-unit id="b3d38db9c1628dd37938d85f5b22cd43ed7988e0" translate="yes" xml:space="preserve">
          <source>RSplitTerminator::max</source>
          <target state="translated">RSplitTerminator::max</target>
        </trans-unit>
        <trans-unit id="a94de8e97a7f98b9c08614f0112052be3f2b881d" translate="yes" xml:space="preserve">
          <source>RSplitTerminator::max_by</source>
          <target state="translated">RSplitTerminator::max_by</target>
        </trans-unit>
        <trans-unit id="0bd66e13fe0ef112072373e346b38fcb26478349" translate="yes" xml:space="preserve">
          <source>RSplitTerminator::max_by_key</source>
          <target state="translated">RSplitTerminator::max_by_key</target>
        </trans-unit>
        <trans-unit id="863ce7a875ce8bbfd791a3f0c38a4102bfd82578" translate="yes" xml:space="preserve">
          <source>RSplitTerminator::min</source>
          <target state="translated">RSplitTerminator::min</target>
        </trans-unit>
        <trans-unit id="93cfaf254f8dd17aa426f3e3a1cb63dc72ffebc6" translate="yes" xml:space="preserve">
          <source>RSplitTerminator::min_by</source>
          <target state="translated">RSplitTerminator::min_by</target>
        </trans-unit>
        <trans-unit id="182ba18b5a3de9765649f0e1ba7d114c67be4ec6" translate="yes" xml:space="preserve">
          <source>RSplitTerminator::min_by_key</source>
          <target state="translated">RSplitTerminator::min_by_key</target>
        </trans-unit>
        <trans-unit id="ed30d02c04d20d85741d2c754e3af3108e7c56ee" translate="yes" xml:space="preserve">
          <source>RSplitTerminator::ne</source>
          <target state="translated">RSplitTerminator::ne</target>
        </trans-unit>
        <trans-unit id="c750cae706c94c2a4ecf1f425968cea6954885b7" translate="yes" xml:space="preserve">
          <source>RSplitTerminator::next</source>
          <target state="translated">RSplitTerminator::next</target>
        </trans-unit>
        <trans-unit id="308bcb20bd42b799086a00fea83f1af1f03a618e" translate="yes" xml:space="preserve">
          <source>RSplitTerminator::next_back</source>
          <target state="translated">RSplitTerminator::next_back</target>
        </trans-unit>
        <trans-unit id="e895dc779e9774bc045d9350564a859624dd21b9" translate="yes" xml:space="preserve">
          <source>RSplitTerminator::nth</source>
          <target state="translated">RSplitTerminator::nth</target>
        </trans-unit>
        <trans-unit id="9ea1d30a98c89fb9f5f22523a25571fc219aa2e5" translate="yes" xml:space="preserve">
          <source>RSplitTerminator::nth_back</source>
          <target state="translated">RSplitTerminator::nth_back</target>
        </trans-unit>
        <trans-unit id="5417f0e1a01900dd7f61dc486ac96eb11cf5f913" translate="yes" xml:space="preserve">
          <source>RSplitTerminator::partial_cmp</source>
          <target state="translated">RSplitTerminator::partial_cmp</target>
        </trans-unit>
        <trans-unit id="5123f507815eb31140727d23e4573aa20d29938b" translate="yes" xml:space="preserve">
          <source>RSplitTerminator::partition</source>
          <target state="translated">RSplitTerminator::partition</target>
        </trans-unit>
        <trans-unit id="50d737506722db29fc430132355c175f8281d41d" translate="yes" xml:space="preserve">
          <source>RSplitTerminator::peekable</source>
          <target state="translated">RSplitTerminator::peekable</target>
        </trans-unit>
        <trans-unit id="0d4133de547504bbf2e766f53e728ded2e142485" translate="yes" xml:space="preserve">
          <source>RSplitTerminator::position</source>
          <target state="translated">RSplitTerminator::position</target>
        </trans-unit>
        <trans-unit id="5ccef459eaa564e17410f34b5336da63f8a493ff" translate="yes" xml:space="preserve">
          <source>RSplitTerminator::product</source>
          <target state="translated">RSplitTerminator::product</target>
        </trans-unit>
        <trans-unit id="129d8d39a89ce147b45fd9db594eef11bd49ed61" translate="yes" xml:space="preserve">
          <source>RSplitTerminator::rev</source>
          <target state="translated">RSplitTerminator::rev</target>
        </trans-unit>
        <trans-unit id="ae0e7c51998acebafd04bc98e9abb53c83c25e35" translate="yes" xml:space="preserve">
          <source>RSplitTerminator::rfind</source>
          <target state="translated">RSplitTerminator::rfind</target>
        </trans-unit>
        <trans-unit id="f2acf5fbd88926088d751db0f4c18b3b9203dcfd" translate="yes" xml:space="preserve">
          <source>RSplitTerminator::rfold</source>
          <target state="translated">RSplitTerminator::rfold</target>
        </trans-unit>
        <trans-unit id="95498353326ffcd74a67aacf83adbaeea9b95d84" translate="yes" xml:space="preserve">
          <source>RSplitTerminator::rposition</source>
          <target state="translated">RSplitTerminator::rposition</target>
        </trans-unit>
        <trans-unit id="399dcbcf7e01a73357df7023971212dc3095c0d5" translate="yes" xml:space="preserve">
          <source>RSplitTerminator::scan</source>
          <target state="translated">RSplitTerminator::scan</target>
        </trans-unit>
        <trans-unit id="39d2f3473583e1570f3eeadea978b004bcfd33ee" translate="yes" xml:space="preserve">
          <source>RSplitTerminator::size_hint</source>
          <target state="translated">RSplitTerminator::size_hint</target>
        </trans-unit>
        <trans-unit id="565ccaec76204cb9b4f91ac78db4e11cb493405b" translate="yes" xml:space="preserve">
          <source>RSplitTerminator::skip</source>
          <target state="translated">RSplitTerminator::skip</target>
        </trans-unit>
        <trans-unit id="0fcd8e2b9f14309e3a664c5d26d19d6c93aee882" translate="yes" xml:space="preserve">
          <source>RSplitTerminator::skip_while</source>
          <target state="translated">RSplitTerminator::skip_while</target>
        </trans-unit>
        <trans-unit id="9db7ff66a1a6140d3ae5e4517a390488160018e2" translate="yes" xml:space="preserve">
          <source>RSplitTerminator::step_by</source>
          <target state="translated">RSplitTerminator::step_by</target>
        </trans-unit>
        <trans-unit id="60960f27d1d86c9fe07bf15bb1706d531a593807" translate="yes" xml:space="preserve">
          <source>RSplitTerminator::sum</source>
          <target state="translated">RSplitTerminator::sum</target>
        </trans-unit>
        <trans-unit id="dbdd165b672e45be412e926be12040287828d411" translate="yes" xml:space="preserve">
          <source>RSplitTerminator::take</source>
          <target state="translated">RSplitTerminator::take</target>
        </trans-unit>
        <trans-unit id="300cefdd25280bc8e8e92199185c795b529acac5" translate="yes" xml:space="preserve">
          <source>RSplitTerminator::take_while</source>
          <target state="translated">RSplitTerminator::take_while</target>
        </trans-unit>
        <trans-unit id="6cb1e52c2302ddc963dafcf686e1b8b452778c09" translate="yes" xml:space="preserve">
          <source>RSplitTerminator::to_owned</source>
          <target state="translated">RSplitTerminator::to_owned</target>
        </trans-unit>
        <trans-unit id="3df64fae8c2d182b4c890f992a4a96a16c6d930d" translate="yes" xml:space="preserve">
          <source>RSplitTerminator::try_fold</source>
          <target state="translated">RSplitTerminator::try_fold</target>
        </trans-unit>
        <trans-unit id="53076f85d271b7f911f31b2ea9e298bc84f67401" translate="yes" xml:space="preserve">
          <source>RSplitTerminator::try_for_each</source>
          <target state="translated">RSplitTerminator::try_for_each</target>
        </trans-unit>
        <trans-unit id="3f6626d78bb9fd4617cee32c92528cad7acf0f95" translate="yes" xml:space="preserve">
          <source>RSplitTerminator::try_from</source>
          <target state="translated">RSplitTerminator::try_from</target>
        </trans-unit>
        <trans-unit id="f2426c79645bfdf6d44a91f8a9c390e732b9069b" translate="yes" xml:space="preserve">
          <source>RSplitTerminator::try_into</source>
          <target state="translated">RSplitTerminator::try_into</target>
        </trans-unit>
        <trans-unit id="fb576e10f85f72736665cad29cba75718dceb3ab" translate="yes" xml:space="preserve">
          <source>RSplitTerminator::try_rfold</source>
          <target state="translated">RSplitTerminator::try_rfold</target>
        </trans-unit>
        <trans-unit id="a27efe04c81237800beeedaecb32f5f8262abf3d" translate="yes" xml:space="preserve">
          <source>RSplitTerminator::type_id</source>
          <target state="translated">RSplitTerminator::type_id</target>
        </trans-unit>
        <trans-unit id="82998efd7807c1ba1735f68da31c61d5bebc39d8" translate="yes" xml:space="preserve">
          <source>RSplitTerminator::unzip</source>
          <target state="translated">RSplitTerminator::unzip</target>
        </trans-unit>
        <trans-unit id="dfbf032a3c17bf446152cae49d5176e97bebe494" translate="yes" xml:space="preserve">
          <source>RSplitTerminator::zip</source>
          <target state="translated">RSplitTerminator::zip</target>
        </trans-unit>
        <trans-unit id="53cd2ef88f1ea1f52f1ee4e43579f2496a20e2b4" translate="yes" xml:space="preserve">
          <source>Race conditions, where threads are accessing data or resources in an inconsistent order</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05b7ff8286964885765dea34f9fab7ca90f64b25" translate="yes" xml:space="preserve">
          <source>Raises a number to a floating point power.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="489295fde6cf444e4e8333a9ffbc572bc1ee6949" translate="yes" xml:space="preserve">
          <source>Raises a number to an integer power.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13c52ff7fd51114292e4017f3abbbe69dbaec194" translate="yes" xml:space="preserve">
          <source>Raises an &lt;code&gt;f32&lt;/code&gt; to an &lt;code&gt;f32&lt;/code&gt; power.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afb70931862263c0545b007f693522e2ac071774" translate="yes" xml:space="preserve">
          <source>Raises an &lt;code&gt;f32&lt;/code&gt; to an integer power.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4dd18dbac4881144d1af4414e96c1f369d35eacd" translate="yes" xml:space="preserve">
          <source>Raises an &lt;code&gt;f64&lt;/code&gt; to an &lt;code&gt;f64&lt;/code&gt; power.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a47ab0c44a858429b4e1b08fde0f40990fcea00a" translate="yes" xml:space="preserve">
          <source>Raises an &lt;code&gt;f64&lt;/code&gt; to an integer power.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="519dd25d222e5e8042150391c614b55ced071ff1" translate="yes" xml:space="preserve">
          <source>Raises self to the power of &lt;code&gt;exp&lt;/code&gt;, using exponentiation by squaring.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe91084f9d7c58980cd791bb2c03f445f4027255" translate="yes" xml:space="preserve">
          <source>RandomState</source>
          <target state="translated">RandomState</target>
        </trans-unit>
        <trans-unit id="a16c5bbe4bf996740f257aa1e81bd57e4c52c8dd" translate="yes" xml:space="preserve">
          <source>Range</source>
          <target state="translated">Range</target>
        </trans-unit>
        <trans-unit id="5b00f8b7b91939e86ebf3795be5cbc043d18b8ab" translate="yes" xml:space="preserve">
          <source>Range expressions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f832dad2b504aea2ee84f393f7a6717ce815f106" translate="yes" xml:space="preserve">
          <source>Range patterns</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0188cafef6fc9e08a36b9d1cf8aaa78c714fec7" translate="yes" xml:space="preserve">
          <source>Range patterns for (non-&lt;code&gt;usize&lt;/code&gt; and -&lt;code&gt;isize&lt;/code&gt;) integer and &lt;code&gt;char&lt;/code&gt; types are irrefutable when they span the entire set of possible values of a type. For example, &lt;code&gt;0u8..=255u8&lt;/code&gt; is irrefutable. The range of values for an integer type is the closed range from its minimum to maximum value. The range of values for a &lt;code&gt;char&lt;/code&gt; type are precisely those ranges containing all Unicode Scalar Values: &lt;code&gt;'\u{0000}'..='\u{D7FF}'&lt;/code&gt; and &lt;code&gt;'\u{E000}'..='\u{10FFFF}'&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a40bffab62059f352d0d159e8581cde2455098ef" translate="yes" xml:space="preserve">
          <source>Range patterns match values that are within the closed range defined by its lower and upper bounds. For example, a pattern &lt;code&gt;'m'..='p'&lt;/code&gt; will match only the values &lt;code&gt;'m'&lt;/code&gt;, &lt;code&gt;'n'&lt;/code&gt;, &lt;code&gt;'o'&lt;/code&gt;, and &lt;code&gt;'p'&lt;/code&gt;. The bounds can be literals or paths that point to constant values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70f93f8f5cebd0e60d37417a75491c49b9d12fa6" translate="yes" xml:space="preserve">
          <source>Range patterns only work on scalar types. The accepted types are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f559df88db196acef8d6bdccb60d2ad46635d96" translate="yes" xml:space="preserve">
          <source>Range::all</source>
          <target state="translated">Range::all</target>
        </trans-unit>
        <trans-unit id="dd83871de2fbf26c447528017649e91ced007ae9" translate="yes" xml:space="preserve">
          <source>Range::any</source>
          <target state="translated">Range::any</target>
        </trans-unit>
        <trans-unit id="c67959924b574cad180c537d766784daddeb8db9" translate="yes" xml:space="preserve">
          <source>Range::borrow</source>
          <target state="translated">Range::borrow</target>
        </trans-unit>
        <trans-unit id="7a074f6ca9d65841eaf7dd4f68c0180630d30e3f" translate="yes" xml:space="preserve">
          <source>Range::borrow_mut</source>
          <target state="translated">Range::borrow_mut</target>
        </trans-unit>
        <trans-unit id="5ea8069077cae241ef8dda8330d24958b5ea9421" translate="yes" xml:space="preserve">
          <source>Range::by_ref</source>
          <target state="translated">Range::by_ref</target>
        </trans-unit>
        <trans-unit id="c84f819c8dfcad990d365d95dd308782e702f042" translate="yes" xml:space="preserve">
          <source>Range::chain</source>
          <target state="translated">Range::chain</target>
        </trans-unit>
        <trans-unit id="e85e4047c21fd00a730c1c8294416dd3e79e63b7" translate="yes" xml:space="preserve">
          <source>Range::clone</source>
          <target state="translated">Range::clone</target>
        </trans-unit>
        <trans-unit id="e65fd302c69a14d5483f6ac3a44788c660cf8b64" translate="yes" xml:space="preserve">
          <source>Range::clone_from</source>
          <target state="translated">Range::clone_from</target>
        </trans-unit>
        <trans-unit id="bed78ed3c0645de87943dcb2633a09806f039ed0" translate="yes" xml:space="preserve">
          <source>Range::clone_into</source>
          <target state="translated">Range::clone_into</target>
        </trans-unit>
        <trans-unit id="4d078a7a0c65110a6112a284420616ef39fb18fa" translate="yes" xml:space="preserve">
          <source>Range::cloned</source>
          <target state="translated">Range::cloned</target>
        </trans-unit>
        <trans-unit id="1401c90b49161b2ae3efd6d87c2b75a6d22e2ad6" translate="yes" xml:space="preserve">
          <source>Range::cmp</source>
          <target state="translated">Range::cmp</target>
        </trans-unit>
        <trans-unit id="611cc2fe181df040883fb9dc130619ca3e48437f" translate="yes" xml:space="preserve">
          <source>Range::collect</source>
          <target state="translated">Range::collect</target>
        </trans-unit>
        <trans-unit id="802a3cc826fcf850ed619eec651e0ad0153f9951" translate="yes" xml:space="preserve">
          <source>Range::contains</source>
          <target state="translated">Range::contains</target>
        </trans-unit>
        <trans-unit id="ca302fe6159664d6f66ed563485938d165de83a1" translate="yes" xml:space="preserve">
          <source>Range::copied</source>
          <target state="translated">Range::copied</target>
        </trans-unit>
        <trans-unit id="179ed6453dcb2235d9d76387580dbf943814f73c" translate="yes" xml:space="preserve">
          <source>Range::count</source>
          <target state="translated">Range::count</target>
        </trans-unit>
        <trans-unit id="6fff1ca080959d15901b07693487e48f277b6301" translate="yes" xml:space="preserve">
          <source>Range::cycle</source>
          <target state="translated">Range::cycle</target>
        </trans-unit>
        <trans-unit id="c15dde1658bb8c2ac3263e630f50666cec5377ef" translate="yes" xml:space="preserve">
          <source>Range::end_bound</source>
          <target state="translated">Range::end_bound</target>
        </trans-unit>
        <trans-unit id="465b99cf97082957b419d5c79cbe30980f59b705" translate="yes" xml:space="preserve">
          <source>Range::enumerate</source>
          <target state="translated">Range::enumerate</target>
        </trans-unit>
        <trans-unit id="6e9ceaeecf179201f29f464b8d732738d37c7c66" translate="yes" xml:space="preserve">
          <source>Range::eq</source>
          <target state="translated">Range::eq</target>
        </trans-unit>
        <trans-unit id="f5aa399c2ba36716c60fb9a481dfa72029b9ee82" translate="yes" xml:space="preserve">
          <source>Range::filter</source>
          <target state="translated">Range::filter</target>
        </trans-unit>
        <trans-unit id="4759649d49f8886f349b5952b6399c7b20ec001e" translate="yes" xml:space="preserve">
          <source>Range::filter_map</source>
          <target state="translated">Range::filter_map</target>
        </trans-unit>
        <trans-unit id="4b3b2f7cd389fd63f251815efaff4871b43236f1" translate="yes" xml:space="preserve">
          <source>Range::find</source>
          <target state="translated">Range::find</target>
        </trans-unit>
        <trans-unit id="b1e889cc11cb6f2f9af82b0803c3f386ffde7714" translate="yes" xml:space="preserve">
          <source>Range::find_map</source>
          <target state="translated">Range::find_map</target>
        </trans-unit>
        <trans-unit id="f6d63bd65419fd7e46981a64d4a63a6a89ab2c2f" translate="yes" xml:space="preserve">
          <source>Range::flat_map</source>
          <target state="translated">Range::flat_map</target>
        </trans-unit>
        <trans-unit id="593aa45a3e8be0d2e93837a7d129ce441e921c8f" translate="yes" xml:space="preserve">
          <source>Range::flatten</source>
          <target state="translated">Range::flatten</target>
        </trans-unit>
        <trans-unit id="d23ed2e68594bc7e9abf256d6916d0364045b38b" translate="yes" xml:space="preserve">
          <source>Range::fmt</source>
          <target state="translated">Range::fmt</target>
        </trans-unit>
        <trans-unit id="0ac99d0cc9a3afb0bbd16e5a850a2c1788e7ec6f" translate="yes" xml:space="preserve">
          <source>Range::fold</source>
          <target state="translated">Range::fold</target>
        </trans-unit>
        <trans-unit id="d364387748f720b22b2053f0dedfbdc37c87e1f2" translate="yes" xml:space="preserve">
          <source>Range::for_each</source>
          <target state="translated">Range::for_each</target>
        </trans-unit>
        <trans-unit id="1f5b260a52816c4af9f9dd43d1a4014b10560e68" translate="yes" xml:space="preserve">
          <source>Range::from</source>
          <target state="translated">Range::from</target>
        </trans-unit>
        <trans-unit id="be6c45cdd37f52ea161d18f0c9704ce52628ca2b" translate="yes" xml:space="preserve">
          <source>Range::fuse</source>
          <target state="translated">Range::fuse</target>
        </trans-unit>
        <trans-unit id="33542f1e670e78aaf8fa8bfc99d9be7817f9a5c2" translate="yes" xml:space="preserve">
          <source>Range::ge</source>
          <target state="translated">Range::ge</target>
        </trans-unit>
        <trans-unit id="4cbb56e39b587f47bd391193685aff2792c523f2" translate="yes" xml:space="preserve">
          <source>Range::get</source>
          <target state="translated">Range::get</target>
        </trans-unit>
        <trans-unit id="8043a58fbe57e27affa66aeede9120e9760c7bf9" translate="yes" xml:space="preserve">
          <source>Range::get_mut</source>
          <target state="translated">Range::get_mut</target>
        </trans-unit>
        <trans-unit id="0c8f2096e0d13ccf039dec453fef4f5998f2b2f9" translate="yes" xml:space="preserve">
          <source>Range::get_unchecked</source>
          <target state="translated">Range::get_unchecked</target>
        </trans-unit>
        <trans-unit id="05d33baeb824ed2cac6de28fcdd57d62b1ec803a" translate="yes" xml:space="preserve">
          <source>Range::get_unchecked_mut</source>
          <target state="translated">Range::get_unchecked_mut</target>
        </trans-unit>
        <trans-unit id="06d63e72695ffc55eb70d55785cbe07fe591cacf" translate="yes" xml:space="preserve">
          <source>Range::gt</source>
          <target state="translated">Range::gt</target>
        </trans-unit>
        <trans-unit id="54e0be96c1ba6875be656815ab10f74c040dfb9a" translate="yes" xml:space="preserve">
          <source>Range::hash</source>
          <target state="translated">Range::hash</target>
        </trans-unit>
        <trans-unit id="813248ffa4a1cc64172195053696f111a7520000" translate="yes" xml:space="preserve">
          <source>Range::hash_slice</source>
          <target state="translated">Range::hash_slice</target>
        </trans-unit>
        <trans-unit id="d335caa76f9fc1590b2305426ffbca37dc1f742a" translate="yes" xml:space="preserve">
          <source>Range::index</source>
          <target state="translated">Range::index</target>
        </trans-unit>
        <trans-unit id="4078e52ae35ff0b346eb3896de958b6a6c7af5b2" translate="yes" xml:space="preserve">
          <source>Range::index_mut</source>
          <target state="translated">Range::index_mut</target>
        </trans-unit>
        <trans-unit id="382e2992ceb94073b3f1be0c0ae481d01e3b9e6b" translate="yes" xml:space="preserve">
          <source>Range::inspect</source>
          <target state="translated">Range::inspect</target>
        </trans-unit>
        <trans-unit id="0c1ecbe8680db77aca64b05b5fb73751c7162285" translate="yes" xml:space="preserve">
          <source>Range::into</source>
          <target state="translated">Range::into</target>
        </trans-unit>
        <trans-unit id="90e2a6f5403679b06bc6eb26ac4d972d6139cb75" translate="yes" xml:space="preserve">
          <source>Range::into_iter</source>
          <target state="translated">Range::into_iter</target>
        </trans-unit>
        <trans-unit id="b8e00a693d302723091ff2a2049a4fda31c08ea4" translate="yes" xml:space="preserve">
          <source>Range::is_empty</source>
          <target state="translated">Range::is_empty</target>
        </trans-unit>
        <trans-unit id="b057c8f623f582c338d46eeeae4cc9626126a5c4" translate="yes" xml:space="preserve">
          <source>Range::is_sorted</source>
          <target state="translated">Range::is_sorted</target>
        </trans-unit>
        <trans-unit id="309bfe1aabbdfd03b888c9562bc1e4ccb65a12e1" translate="yes" xml:space="preserve">
          <source>Range::is_sorted_by</source>
          <target state="translated">Range::is_sorted_by</target>
        </trans-unit>
        <trans-unit id="aedd6fd36ac7e85d29243d4f2806f7ddb93ccc9a" translate="yes" xml:space="preserve">
          <source>Range::is_sorted_by_key</source>
          <target state="translated">Range::is_sorted_by_key</target>
        </trans-unit>
        <trans-unit id="ac72de9b320bf2753142f34207c8aaf3ccb52457" translate="yes" xml:space="preserve">
          <source>Range::last</source>
          <target state="translated">Range::last</target>
        </trans-unit>
        <trans-unit id="5dcea39b5da81f5231020afaa22f68b62382ad2f" translate="yes" xml:space="preserve">
          <source>Range::le</source>
          <target state="translated">Range::le</target>
        </trans-unit>
        <trans-unit id="ecd95e8c1c0de11d95e77d50a91acab968b0b6db" translate="yes" xml:space="preserve">
          <source>Range::len</source>
          <target state="translated">Range::len</target>
        </trans-unit>
        <trans-unit id="92588a0188a8e63a7965da6b434cd04ad0898155" translate="yes" xml:space="preserve">
          <source>Range::lt</source>
          <target state="translated">Range::lt</target>
        </trans-unit>
        <trans-unit id="3d0e526bb765648e986a5093db5bead25dfd0f61" translate="yes" xml:space="preserve">
          <source>Range::map</source>
          <target state="translated">Range::map</target>
        </trans-unit>
        <trans-unit id="4420a5e73ae7f22231b4cd302d90b6b1f0ec719b" translate="yes" xml:space="preserve">
          <source>Range::max</source>
          <target state="translated">Range::max</target>
        </trans-unit>
        <trans-unit id="d547ae598bd861b4989ee683089b591575b928d3" translate="yes" xml:space="preserve">
          <source>Range::max_by</source>
          <target state="translated">Range::max_by</target>
        </trans-unit>
        <trans-unit id="284eadb601cdd53313a35cff2e8d02f506fc11a3" translate="yes" xml:space="preserve">
          <source>Range::max_by_key</source>
          <target state="translated">Range::max_by_key</target>
        </trans-unit>
        <trans-unit id="d36bb4cccc68ce506bd1fb0ecc90eeaabd014877" translate="yes" xml:space="preserve">
          <source>Range::min</source>
          <target state="translated">Range::min</target>
        </trans-unit>
        <trans-unit id="b4ee07bda67c6ea255b26f13c13533b0f3d78de3" translate="yes" xml:space="preserve">
          <source>Range::min_by</source>
          <target state="translated">Range::min_by</target>
        </trans-unit>
        <trans-unit id="deeaadcc3adfbd81647403c1152df0886947080e" translate="yes" xml:space="preserve">
          <source>Range::min_by_key</source>
          <target state="translated">Range::min_by_key</target>
        </trans-unit>
        <trans-unit id="ef15d5a1491d8bdec2a4557faa00d78fdba0c99f" translate="yes" xml:space="preserve">
          <source>Range::ne</source>
          <target state="translated">Range::ne</target>
        </trans-unit>
        <trans-unit id="3c9012f61158cc2210365cbae7a2e9cdd608bf5a" translate="yes" xml:space="preserve">
          <source>Range::next</source>
          <target state="translated">Range::next</target>
        </trans-unit>
        <trans-unit id="200d8c63b63041ccd078da2d2b79423d47b0971a" translate="yes" xml:space="preserve">
          <source>Range::next_back</source>
          <target state="translated">Range::next_back</target>
        </trans-unit>
        <trans-unit id="82e1185a1ad806784ded44405c1b0aaed36f120d" translate="yes" xml:space="preserve">
          <source>Range::nth</source>
          <target state="translated">Range::nth</target>
        </trans-unit>
        <trans-unit id="b4d2ebd58ff0f7a7446a06f93e8f52aca9d07a8e" translate="yes" xml:space="preserve">
          <source>Range::nth_back</source>
          <target state="translated">Range::nth_back</target>
        </trans-unit>
        <trans-unit id="ee6585e95a8c2950dcc83e7a5c704bb598052e28" translate="yes" xml:space="preserve">
          <source>Range::partial_cmp</source>
          <target state="translated">Range::partial_cmp</target>
        </trans-unit>
        <trans-unit id="3a88695d4c45372c7691915deb247fd7edbb74db" translate="yes" xml:space="preserve">
          <source>Range::partition</source>
          <target state="translated">Range::partition</target>
        </trans-unit>
        <trans-unit id="fc62517be804ad69706a3d1730430708feae681e" translate="yes" xml:space="preserve">
          <source>Range::peekable</source>
          <target state="translated">Range::peekable</target>
        </trans-unit>
        <trans-unit id="47876532094911bd2379fb5165c5bc05feeb4483" translate="yes" xml:space="preserve">
          <source>Range::position</source>
          <target state="translated">Range::position</target>
        </trans-unit>
        <trans-unit id="b2dfcb3ad90ac92a0b61d0b8287dc1a498651674" translate="yes" xml:space="preserve">
          <source>Range::product</source>
          <target state="translated">Range::product</target>
        </trans-unit>
        <trans-unit id="c7040aed99955510b077183fb621f5949e29c536" translate="yes" xml:space="preserve">
          <source>Range::rev</source>
          <target state="translated">Range::rev</target>
        </trans-unit>
        <trans-unit id="78302c66058c93b75a9cfe6ca04cb3d20684d46b" translate="yes" xml:space="preserve">
          <source>Range::rfind</source>
          <target state="translated">Range::rfind</target>
        </trans-unit>
        <trans-unit id="fcc317387c40295dc438ab973452ddbd366156c5" translate="yes" xml:space="preserve">
          <source>Range::rfold</source>
          <target state="translated">Range::rfold</target>
        </trans-unit>
        <trans-unit id="2ac8c6f1f1b829ac720440d1d1cb0476bcf4a3b5" translate="yes" xml:space="preserve">
          <source>Range::rposition</source>
          <target state="translated">Range::rposition</target>
        </trans-unit>
        <trans-unit id="acac7581fed16f351f4ce617ce3f962b3fe5e631" translate="yes" xml:space="preserve">
          <source>Range::scan</source>
          <target state="translated">Range::scan</target>
        </trans-unit>
        <trans-unit id="20489cdaa02d2a396472371f9f0b90d0d9e3537f" translate="yes" xml:space="preserve">
          <source>Range::size_hint</source>
          <target state="translated">Range::size_hint</target>
        </trans-unit>
        <trans-unit id="548981959927acb6e0ef604f36160108763ffa60" translate="yes" xml:space="preserve">
          <source>Range::skip</source>
          <target state="translated">Range::skip</target>
        </trans-unit>
        <trans-unit id="ccedf47173c12ab2b3a07a328a7e3b284543c49f" translate="yes" xml:space="preserve">
          <source>Range::skip_while</source>
          <target state="translated">Range::skip_while</target>
        </trans-unit>
        <trans-unit id="71f4bdd729941b22dca1987c3d10ad9d6e2cee2b" translate="yes" xml:space="preserve">
          <source>Range::start_bound</source>
          <target state="translated">Range::start_bound</target>
        </trans-unit>
        <trans-unit id="d621d06fdf2b96a464fbf6fdb112d6a23a17e5df" translate="yes" xml:space="preserve">
          <source>Range::step_by</source>
          <target state="translated">Range::step_by</target>
        </trans-unit>
        <trans-unit id="2f0742b84fd06b4e1930f6176ab300753484ca92" translate="yes" xml:space="preserve">
          <source>Range::sum</source>
          <target state="translated">Range::sum</target>
        </trans-unit>
        <trans-unit id="b877e80fbfe83827d446a082b79a5f1ba7893f66" translate="yes" xml:space="preserve">
          <source>Range::take</source>
          <target state="translated">Range::take</target>
        </trans-unit>
        <trans-unit id="fc579b087363f3affd03336bf97118c0bc8057c0" translate="yes" xml:space="preserve">
          <source>Range::take_while</source>
          <target state="translated">Range::take_while</target>
        </trans-unit>
        <trans-unit id="97eb461b703ec1393c26a9c6c254bfd9882db01b" translate="yes" xml:space="preserve">
          <source>Range::to_owned</source>
          <target state="translated">Range::to_owned</target>
        </trans-unit>
        <trans-unit id="45feb080eb4b1ddd22a6b9ffcbba93833ec9f379" translate="yes" xml:space="preserve">
          <source>Range::try_fold</source>
          <target state="translated">Range::try_fold</target>
        </trans-unit>
        <trans-unit id="12a3ea7f1d9c67561052016d42b14ef6ddd1eb57" translate="yes" xml:space="preserve">
          <source>Range::try_for_each</source>
          <target state="translated">Range::try_for_each</target>
        </trans-unit>
        <trans-unit id="ea1885b5602b920f60edd7f24af6b9e80c35c744" translate="yes" xml:space="preserve">
          <source>Range::try_from</source>
          <target state="translated">Range::try_from</target>
        </trans-unit>
        <trans-unit id="445417bf5bdfe11cc173b04f3af76d8aaaea5369" translate="yes" xml:space="preserve">
          <source>Range::try_into</source>
          <target state="translated">Range::try_into</target>
        </trans-unit>
        <trans-unit id="4e87b9f270f923185a54a79b219df83ee10c7ec6" translate="yes" xml:space="preserve">
          <source>Range::try_rfold</source>
          <target state="translated">Range::try_rfold</target>
        </trans-unit>
        <trans-unit id="c6c8dfaa2afb7177624f73136fd318961053e63b" translate="yes" xml:space="preserve">
          <source>Range::type_id</source>
          <target state="translated">Range::type_id</target>
        </trans-unit>
        <trans-unit id="8f1c20bd8003b6111c9990003808d69e7665b26b" translate="yes" xml:space="preserve">
          <source>Range::unzip</source>
          <target state="translated">Range::unzip</target>
        </trans-unit>
        <trans-unit id="02ddcb3851f20d5ee48c74108d73e0146c90d19a" translate="yes" xml:space="preserve">
          <source>Range::zip</source>
          <target state="translated">Range::zip</target>
        </trans-unit>
        <trans-unit id="f5643d95a6bb09210c97ce5e09477db0f1c74c7c" translate="yes" xml:space="preserve">
          <source>RangeBounds</source>
          <target state="translated">RangeBounds</target>
        </trans-unit>
        <trans-unit id="4fc56eb811de8c58ab8a04474804c71cabfd460b" translate="yes" xml:space="preserve">
          <source>RangeBounds::contains</source>
          <target state="translated">RangeBounds::contains</target>
        </trans-unit>
        <trans-unit id="28509abe25ac9b026adb7b6c0ff1db84d940d59c" translate="yes" xml:space="preserve">
          <source>RangeBounds::end_bound</source>
          <target state="translated">RangeBounds::end_bound</target>
        </trans-unit>
        <trans-unit id="ac9bc61b05a0d2d6ce0490358a964b09c6ee113e" translate="yes" xml:space="preserve">
          <source>RangeBounds::start_bound</source>
          <target state="translated">RangeBounds::start_bound</target>
        </trans-unit>
        <trans-unit id="45e56e9b4baae158539951d498856af65aaadb45" translate="yes" xml:space="preserve">
          <source>RangeFrom</source>
          <target state="translated">RangeFrom</target>
        </trans-unit>
        <trans-unit id="af6bb2b48814476539a91011b8029a081fd92e38" translate="yes" xml:space="preserve">
          <source>RangeFrom::all</source>
          <target state="translated">RangeFrom::all</target>
        </trans-unit>
        <trans-unit id="6d766b6d0408737c6ef59679c0f38f45702e34bb" translate="yes" xml:space="preserve">
          <source>RangeFrom::any</source>
          <target state="translated">RangeFrom::any</target>
        </trans-unit>
        <trans-unit id="b1211dc7242b4aecb31785422fe4c7f4a6439397" translate="yes" xml:space="preserve">
          <source>RangeFrom::borrow</source>
          <target state="translated">RangeFrom::borrow</target>
        </trans-unit>
        <trans-unit id="65b7c70816146cb5b2814737a7acacb1ca0dc62d" translate="yes" xml:space="preserve">
          <source>RangeFrom::borrow_mut</source>
          <target state="translated">RangeFrom::borrow_mut</target>
        </trans-unit>
        <trans-unit id="03d0655b4f80825c17cba1651c6f297a8ed13c98" translate="yes" xml:space="preserve">
          <source>RangeFrom::by_ref</source>
          <target state="translated">RangeFrom::by_ref</target>
        </trans-unit>
        <trans-unit id="38a33f5d0c812815d9cecc2dc841860c791e870e" translate="yes" xml:space="preserve">
          <source>RangeFrom::chain</source>
          <target state="translated">RangeFrom::chain</target>
        </trans-unit>
        <trans-unit id="0d3290e5902f7e7664f7a6b9602861a9d6d14112" translate="yes" xml:space="preserve">
          <source>RangeFrom::clone</source>
          <target state="translated">RangeFrom::clone</target>
        </trans-unit>
        <trans-unit id="5654a17d41b8e92e1bad51e672fa9685a9435951" translate="yes" xml:space="preserve">
          <source>RangeFrom::clone_from</source>
          <target state="translated">RangeFrom::clone_from</target>
        </trans-unit>
        <trans-unit id="3a1a19e2876d44cacf8bf7e7ba111c13eb5f5c33" translate="yes" xml:space="preserve">
          <source>RangeFrom::clone_into</source>
          <target state="translated">RangeFrom::clone_into</target>
        </trans-unit>
        <trans-unit id="d4ea5d174fbb5959aa1614c9adf7c2fe78e2846f" translate="yes" xml:space="preserve">
          <source>RangeFrom::cloned</source>
          <target state="translated">RangeFrom::cloned</target>
        </trans-unit>
        <trans-unit id="6c4f9feacda977e4a3a7ae2e13c15a17e640e9a2" translate="yes" xml:space="preserve">
          <source>RangeFrom::cmp</source>
          <target state="translated">RangeFrom::cmp</target>
        </trans-unit>
        <trans-unit id="556a2e61234c64dc3e4f2db68ccb93e8a984aaf4" translate="yes" xml:space="preserve">
          <source>RangeFrom::collect</source>
          <target state="translated">RangeFrom::collect</target>
        </trans-unit>
        <trans-unit id="3287af87f33897befd7315d4b0222b9ec7e0076c" translate="yes" xml:space="preserve">
          <source>RangeFrom::contains</source>
          <target state="translated">RangeFrom::contains</target>
        </trans-unit>
        <trans-unit id="b9e45ff97d9a637dee8ac7a94c7da5f948baa3dc" translate="yes" xml:space="preserve">
          <source>RangeFrom::copied</source>
          <target state="translated">RangeFrom::copied</target>
        </trans-unit>
        <trans-unit id="43e40768c2daa19421b001a005729ccb88568efc" translate="yes" xml:space="preserve">
          <source>RangeFrom::count</source>
          <target state="translated">RangeFrom::count</target>
        </trans-unit>
        <trans-unit id="22b958c32c1e97d437016c23f68fb1a68ca0c223" translate="yes" xml:space="preserve">
          <source>RangeFrom::cycle</source>
          <target state="translated">RangeFrom::cycle</target>
        </trans-unit>
        <trans-unit id="73d55e1230761a6108f3e8d800791e48c352f2f1" translate="yes" xml:space="preserve">
          <source>RangeFrom::end_bound</source>
          <target state="translated">RangeFrom::end_bound</target>
        </trans-unit>
        <trans-unit id="e44be23acec916461f905ee9fa86fda31c23065a" translate="yes" xml:space="preserve">
          <source>RangeFrom::enumerate</source>
          <target state="translated">RangeFrom::enumerate</target>
        </trans-unit>
        <trans-unit id="cb0aa39b90beacd547f50bc97d0bd380851650b6" translate="yes" xml:space="preserve">
          <source>RangeFrom::eq</source>
          <target state="translated">RangeFrom::eq</target>
        </trans-unit>
        <trans-unit id="2a861b835593148963d4a99eb1226ae608292405" translate="yes" xml:space="preserve">
          <source>RangeFrom::filter</source>
          <target state="translated">RangeFrom::filter</target>
        </trans-unit>
        <trans-unit id="79758d4e8b7495221ea962b08658c23f841c01b6" translate="yes" xml:space="preserve">
          <source>RangeFrom::filter_map</source>
          <target state="translated">RangeFrom::filter_map</target>
        </trans-unit>
        <trans-unit id="89a80f5e6cbc093de1974851d3a36c1e9df20fff" translate="yes" xml:space="preserve">
          <source>RangeFrom::find</source>
          <target state="translated">RangeFrom::find</target>
        </trans-unit>
        <trans-unit id="5ea7c4a02d4b25d3aae9dc34862838fae6d5074a" translate="yes" xml:space="preserve">
          <source>RangeFrom::find_map</source>
          <target state="translated">RangeFrom::find_map</target>
        </trans-unit>
        <trans-unit id="5cf4a0616b2af9d526c8ea82e29d7f6e2daccf62" translate="yes" xml:space="preserve">
          <source>RangeFrom::flat_map</source>
          <target state="translated">RangeFrom::flat_map</target>
        </trans-unit>
        <trans-unit id="2383f3fb8c229597e75c3946675e7f92c6033b24" translate="yes" xml:space="preserve">
          <source>RangeFrom::flatten</source>
          <target state="translated">RangeFrom::flatten</target>
        </trans-unit>
        <trans-unit id="63ddddd5522c2eaf1175e7d731c8e6180e400ed3" translate="yes" xml:space="preserve">
          <source>RangeFrom::fmt</source>
          <target state="translated">RangeFrom::fmt</target>
        </trans-unit>
        <trans-unit id="a27259b7f02869f130328a42452ac80283d81dcf" translate="yes" xml:space="preserve">
          <source>RangeFrom::fold</source>
          <target state="translated">RangeFrom::fold</target>
        </trans-unit>
        <trans-unit id="235be94622d653f1dda9eeb9a45f93db3e6753f7" translate="yes" xml:space="preserve">
          <source>RangeFrom::for_each</source>
          <target state="translated">RangeFrom::for_each</target>
        </trans-unit>
        <trans-unit id="21517b5f8648ad1422d2e1455b38e02cfdbb2b90" translate="yes" xml:space="preserve">
          <source>RangeFrom::from</source>
          <target state="translated">RangeFrom::from</target>
        </trans-unit>
        <trans-unit id="5b55b8ce659f00434be100345b3b6365e4a5a039" translate="yes" xml:space="preserve">
          <source>RangeFrom::fuse</source>
          <target state="translated">RangeFrom::fuse</target>
        </trans-unit>
        <trans-unit id="67caf9cedb952ccd5ef65830f51a1a924a5e89c0" translate="yes" xml:space="preserve">
          <source>RangeFrom::ge</source>
          <target state="translated">RangeFrom::ge</target>
        </trans-unit>
        <trans-unit id="732c12e4b87b638994f6db3479e650dce653045b" translate="yes" xml:space="preserve">
          <source>RangeFrom::get</source>
          <target state="translated">RangeFrom::get</target>
        </trans-unit>
        <trans-unit id="33fc9077366907052471d37b0f764cdc2bbafff2" translate="yes" xml:space="preserve">
          <source>RangeFrom::get_mut</source>
          <target state="translated">RangeFrom::get_mut</target>
        </trans-unit>
        <trans-unit id="07c00ee3d0c705b1f026884414b2713047c88f0e" translate="yes" xml:space="preserve">
          <source>RangeFrom::get_unchecked</source>
          <target state="translated">RangeFrom::get_unchecked</target>
        </trans-unit>
        <trans-unit id="be6dd3ecae7951c40aaf9b5cd6758a8754cc1a60" translate="yes" xml:space="preserve">
          <source>RangeFrom::get_unchecked_mut</source>
          <target state="translated">RangeFrom::get_unchecked_mut</target>
        </trans-unit>
        <trans-unit id="dc3e3c8a30b7275bab4bc0cb0376a125d2fdec1b" translate="yes" xml:space="preserve">
          <source>RangeFrom::gt</source>
          <target state="translated">RangeFrom::gt</target>
        </trans-unit>
        <trans-unit id="677548d4468e377082a62bc4e1eaf9de2a3c5a9b" translate="yes" xml:space="preserve">
          <source>RangeFrom::hash</source>
          <target state="translated">RangeFrom::hash</target>
        </trans-unit>
        <trans-unit id="92501b6b66ac1c54403512bb5c51c1a8b47af663" translate="yes" xml:space="preserve">
          <source>RangeFrom::hash_slice</source>
          <target state="translated">RangeFrom::hash_slice</target>
        </trans-unit>
        <trans-unit id="9193c0a5f3a408283710c34a5a118a2d3acd6a57" translate="yes" xml:space="preserve">
          <source>RangeFrom::index</source>
          <target state="translated">RangeFrom::index</target>
        </trans-unit>
        <trans-unit id="a3225eef28e50e32765bd6c74f7086ff78719e2e" translate="yes" xml:space="preserve">
          <source>RangeFrom::index_mut</source>
          <target state="translated">RangeFrom::index_mut</target>
        </trans-unit>
        <trans-unit id="bb04333aae51a72b51346dedf7edf2dfb9843f38" translate="yes" xml:space="preserve">
          <source>RangeFrom::inspect</source>
          <target state="translated">RangeFrom::inspect</target>
        </trans-unit>
        <trans-unit id="088d71d35b97d95f61a59fe4b344c113ff382f6f" translate="yes" xml:space="preserve">
          <source>RangeFrom::into</source>
          <target state="translated">RangeFrom::into</target>
        </trans-unit>
        <trans-unit id="5c231e4dbb01b2db78cf59bf6b1c5dc32c91df72" translate="yes" xml:space="preserve">
          <source>RangeFrom::into_iter</source>
          <target state="translated">RangeFrom::into_iter</target>
        </trans-unit>
        <trans-unit id="94351907d35581d5cd84527000aea17dccaf62a6" translate="yes" xml:space="preserve">
          <source>RangeFrom::is_sorted</source>
          <target state="translated">RangeFrom::is_sorted</target>
        </trans-unit>
        <trans-unit id="ab9861d2d30f5cb228d3a73b0dc387f7eb9ccdaa" translate="yes" xml:space="preserve">
          <source>RangeFrom::is_sorted_by</source>
          <target state="translated">RangeFrom::is_sorted_by</target>
        </trans-unit>
        <trans-unit id="fba1ff995b6eff4ef6a0244dedcc657a824f99e2" translate="yes" xml:space="preserve">
          <source>RangeFrom::is_sorted_by_key</source>
          <target state="translated">RangeFrom::is_sorted_by_key</target>
        </trans-unit>
        <trans-unit id="c9f41fba8d0d15da8cc428dde9ead99a2906e2a0" translate="yes" xml:space="preserve">
          <source>RangeFrom::last</source>
          <target state="translated">RangeFrom::last</target>
        </trans-unit>
        <trans-unit id="687323fc45f02a34206a1a8e985a09cfa04e512f" translate="yes" xml:space="preserve">
          <source>RangeFrom::le</source>
          <target state="translated">RangeFrom::le</target>
        </trans-unit>
        <trans-unit id="8d10046ed5b20470fc0fd2ecb9b51e54c17da624" translate="yes" xml:space="preserve">
          <source>RangeFrom::lt</source>
          <target state="translated">RangeFrom::lt</target>
        </trans-unit>
        <trans-unit id="d3a425c61e40648829eff3990119d082bfc7f9b2" translate="yes" xml:space="preserve">
          <source>RangeFrom::map</source>
          <target state="translated">RangeFrom::map</target>
        </trans-unit>
        <trans-unit id="e8aa32318fbb2a275cc4286c9f9081be16f5d67e" translate="yes" xml:space="preserve">
          <source>RangeFrom::max</source>
          <target state="translated">RangeFrom::max</target>
        </trans-unit>
        <trans-unit id="eca58c099b7365ce170629a4dd34ae028ffc931a" translate="yes" xml:space="preserve">
          <source>RangeFrom::max_by</source>
          <target state="translated">RangeFrom::max_by</target>
        </trans-unit>
        <trans-unit id="31fd0256694b569cc934fd8b48ebe5ea1e0ed0fa" translate="yes" xml:space="preserve">
          <source>RangeFrom::max_by_key</source>
          <target state="translated">RangeFrom::max_by_key</target>
        </trans-unit>
        <trans-unit id="37391d6f18af9b0584d692eddeabd0d1660e2e3f" translate="yes" xml:space="preserve">
          <source>RangeFrom::min</source>
          <target state="translated">RangeFrom::min</target>
        </trans-unit>
        <trans-unit id="55cf16c100696e9a58ab022696b11b310689ccb5" translate="yes" xml:space="preserve">
          <source>RangeFrom::min_by</source>
          <target state="translated">RangeFrom::min_by</target>
        </trans-unit>
        <trans-unit id="95b9d23949e146bcdaa3aa9da28bfea29a3be578" translate="yes" xml:space="preserve">
          <source>RangeFrom::min_by_key</source>
          <target state="translated">RangeFrom::min_by_key</target>
        </trans-unit>
        <trans-unit id="e298b9a567e88e7936e638945b979f2de025b389" translate="yes" xml:space="preserve">
          <source>RangeFrom::ne</source>
          <target state="translated">RangeFrom::ne</target>
        </trans-unit>
        <trans-unit id="b04bc4b3a7120b33c6a3e8fe676e45def8edb821" translate="yes" xml:space="preserve">
          <source>RangeFrom::next</source>
          <target state="translated">RangeFrom::next</target>
        </trans-unit>
        <trans-unit id="2b53e4d2cad07e7b935ea412a6a3a0a035fd0f63" translate="yes" xml:space="preserve">
          <source>RangeFrom::nth</source>
          <target state="translated">RangeFrom::nth</target>
        </trans-unit>
        <trans-unit id="09e4fa2260ce702ccf162fb225c5baca9d7ad9e6" translate="yes" xml:space="preserve">
          <source>RangeFrom::partial_cmp</source>
          <target state="translated">RangeFrom::partial_cmp</target>
        </trans-unit>
        <trans-unit id="6fe48ca0820c303624a60ddce31588bd77324713" translate="yes" xml:space="preserve">
          <source>RangeFrom::partition</source>
          <target state="translated">RangeFrom::partition</target>
        </trans-unit>
        <trans-unit id="c6f1ed9039efaae990c98f873e271b5e7d9a3624" translate="yes" xml:space="preserve">
          <source>RangeFrom::peekable</source>
          <target state="translated">RangeFrom::peekable</target>
        </trans-unit>
        <trans-unit id="e4a791243fea3d939fbb526d8bda5e1c3aa7e9a1" translate="yes" xml:space="preserve">
          <source>RangeFrom::position</source>
          <target state="translated">RangeFrom::position</target>
        </trans-unit>
        <trans-unit id="e22e344b3662d5696c10011ee3f87073c6f564e2" translate="yes" xml:space="preserve">
          <source>RangeFrom::product</source>
          <target state="translated">RangeFrom::product</target>
        </trans-unit>
        <trans-unit id="54621ae608e60b1bcc107962605153a1204f90c3" translate="yes" xml:space="preserve">
          <source>RangeFrom::rev</source>
          <target state="translated">RangeFrom::rev</target>
        </trans-unit>
        <trans-unit id="773603e6071955f07ec46cf812a83405fa76b0b9" translate="yes" xml:space="preserve">
          <source>RangeFrom::rposition</source>
          <target state="translated">RangeFrom::rposition</target>
        </trans-unit>
        <trans-unit id="7fb3e4824013661a873e358e7380a6db27efdd2d" translate="yes" xml:space="preserve">
          <source>RangeFrom::scan</source>
          <target state="translated">RangeFrom::scan</target>
        </trans-unit>
        <trans-unit id="17a38038d1205e89dc9ff9bf54cf58a324c8bb09" translate="yes" xml:space="preserve">
          <source>RangeFrom::size_hint</source>
          <target state="translated">RangeFrom::size_hint</target>
        </trans-unit>
        <trans-unit id="8f4e49c3c05ba46eb49c10c1cfefd70b9487492f" translate="yes" xml:space="preserve">
          <source>RangeFrom::skip</source>
          <target state="translated">RangeFrom::skip</target>
        </trans-unit>
        <trans-unit id="6fd515ae0a8fde13c533f7956824cb7d35a6313c" translate="yes" xml:space="preserve">
          <source>RangeFrom::skip_while</source>
          <target state="translated">RangeFrom::skip_while</target>
        </trans-unit>
        <trans-unit id="3f9098821504bd28eb9b32ce763fc427ad94443c" translate="yes" xml:space="preserve">
          <source>RangeFrom::start_bound</source>
          <target state="translated">RangeFrom::start_bound</target>
        </trans-unit>
        <trans-unit id="38a015367bcd3babd9c6fe5f5a2ba2dcdb19a7c9" translate="yes" xml:space="preserve">
          <source>RangeFrom::step_by</source>
          <target state="translated">RangeFrom::step_by</target>
        </trans-unit>
        <trans-unit id="c1dbc47ee7a1e19bfa52f9a1c67c3268b2a1dc99" translate="yes" xml:space="preserve">
          <source>RangeFrom::sum</source>
          <target state="translated">RangeFrom::sum</target>
        </trans-unit>
        <trans-unit id="4b4153e987b378c47892c873a78094ae66668e06" translate="yes" xml:space="preserve">
          <source>RangeFrom::take</source>
          <target state="translated">RangeFrom::take</target>
        </trans-unit>
        <trans-unit id="e1284f6b3244fde94b279e4ec2029c17db29ed70" translate="yes" xml:space="preserve">
          <source>RangeFrom::take_while</source>
          <target state="translated">RangeFrom::take_while</target>
        </trans-unit>
        <trans-unit id="bc40c8cba22d334e02b8f234eef0adceb8971ec7" translate="yes" xml:space="preserve">
          <source>RangeFrom::to_owned</source>
          <target state="translated">RangeFrom::to_owned</target>
        </trans-unit>
        <trans-unit id="749886fb93e4e2152697f0b7484a2589a850b242" translate="yes" xml:space="preserve">
          <source>RangeFrom::try_fold</source>
          <target state="translated">RangeFrom::try_fold</target>
        </trans-unit>
        <trans-unit id="a0e62fa0dedbcfc0f182bd013c5fa8ab81abbe85" translate="yes" xml:space="preserve">
          <source>RangeFrom::try_for_each</source>
          <target state="translated">RangeFrom::try_for_each</target>
        </trans-unit>
        <trans-unit id="51cff46334ec4eb8ed46b1c3e7b7a7da375d6f61" translate="yes" xml:space="preserve">
          <source>RangeFrom::try_from</source>
          <target state="translated">RangeFrom::try_from</target>
        </trans-unit>
        <trans-unit id="2fa35635225bebb9c21a72047eb71e2571eda0d1" translate="yes" xml:space="preserve">
          <source>RangeFrom::try_into</source>
          <target state="translated">RangeFrom::try_into</target>
        </trans-unit>
        <trans-unit id="847d9ee9bbacb0ca00772c1ea1fd4aa3af1b0c7a" translate="yes" xml:space="preserve">
          <source>RangeFrom::type_id</source>
          <target state="translated">RangeFrom::type_id</target>
        </trans-unit>
        <trans-unit id="273d67f19ffcccf1893ce4a816acd5e986068407" translate="yes" xml:space="preserve">
          <source>RangeFrom::unzip</source>
          <target state="translated">RangeFrom::unzip</target>
        </trans-unit>
        <trans-unit id="de6a3d13330ec1b4dafb204e95a8ca58c126a455" translate="yes" xml:space="preserve">
          <source>RangeFrom::zip</source>
          <target state="translated">RangeFrom::zip</target>
        </trans-unit>
        <trans-unit id="3ef63b29e9c06a746ab8aa29401633cfd6f6c1bb" translate="yes" xml:space="preserve">
          <source>RangeFull</source>
          <target state="translated">RangeFull</target>
        </trans-unit>
        <trans-unit id="4e22bc878f1d01c893667de17b5657d68b17140c" translate="yes" xml:space="preserve">
          <source>RangeFull::borrow</source>
          <target state="translated">RangeFull::borrow</target>
        </trans-unit>
        <trans-unit id="40a15a58f881e62b3dfc976c291f6747a7a51f28" translate="yes" xml:space="preserve">
          <source>RangeFull::borrow_mut</source>
          <target state="translated">RangeFull::borrow_mut</target>
        </trans-unit>
        <trans-unit id="1be73ddb82ba05df7ac0cc44e9154be3ab6a3596" translate="yes" xml:space="preserve">
          <source>RangeFull::clone</source>
          <target state="translated">RangeFull::clone</target>
        </trans-unit>
        <trans-unit id="9019a145d8c13a942b5671d3fb4a11070b75b2af" translate="yes" xml:space="preserve">
          <source>RangeFull::clone_from</source>
          <target state="translated">RangeFull::clone_from</target>
        </trans-unit>
        <trans-unit id="044643b7ee461d846b86d94b0558664ea22e5aac" translate="yes" xml:space="preserve">
          <source>RangeFull::clone_into</source>
          <target state="translated">RangeFull::clone_into</target>
        </trans-unit>
        <trans-unit id="473c67a7838af068aebd4cfcf1c0058859825c4d" translate="yes" xml:space="preserve">
          <source>RangeFull::contains</source>
          <target state="translated">RangeFull::contains</target>
        </trans-unit>
        <trans-unit id="9b9700e6b16c501ec227baea1c02da2876928b50" translate="yes" xml:space="preserve">
          <source>RangeFull::end_bound</source>
          <target state="translated">RangeFull::end_bound</target>
        </trans-unit>
        <trans-unit id="e3a21273a27f232b052d1bf9dc4ea42a817a398a" translate="yes" xml:space="preserve">
          <source>RangeFull::eq</source>
          <target state="translated">RangeFull::eq</target>
        </trans-unit>
        <trans-unit id="1a9949c7dd765b5b71317120ae29894a4e8d137c" translate="yes" xml:space="preserve">
          <source>RangeFull::fmt</source>
          <target state="translated">RangeFull::fmt</target>
        </trans-unit>
        <trans-unit id="cf0d3abe6873f54e4cda8d53be9659e87742924b" translate="yes" xml:space="preserve">
          <source>RangeFull::from</source>
          <target state="translated">RangeFull::from</target>
        </trans-unit>
        <trans-unit id="55c069153f31744bcd7b412237c54e0425607019" translate="yes" xml:space="preserve">
          <source>RangeFull::get</source>
          <target state="translated">RangeFull::get</target>
        </trans-unit>
        <trans-unit id="d60fed57b9371f0ca02176418bbd100227116c8b" translate="yes" xml:space="preserve">
          <source>RangeFull::get_mut</source>
          <target state="translated">RangeFull::get_mut</target>
        </trans-unit>
        <trans-unit id="8f97fc38d32c52704b1fa56653f0fc230b78e805" translate="yes" xml:space="preserve">
          <source>RangeFull::get_unchecked</source>
          <target state="translated">RangeFull::get_unchecked</target>
        </trans-unit>
        <trans-unit id="482f5260844163f3c1ca9129684852192ee1609f" translate="yes" xml:space="preserve">
          <source>RangeFull::get_unchecked_mut</source>
          <target state="translated">RangeFull::get_unchecked_mut</target>
        </trans-unit>
        <trans-unit id="6ecd9e5c281be0810596f4463f709effb810b27c" translate="yes" xml:space="preserve">
          <source>RangeFull::hash</source>
          <target state="translated">RangeFull::hash</target>
        </trans-unit>
        <trans-unit id="6acc7c2ecc2987364895158d33956bf51fbdca82" translate="yes" xml:space="preserve">
          <source>RangeFull::hash_slice</source>
          <target state="translated">RangeFull::hash_slice</target>
        </trans-unit>
        <trans-unit id="a3865c455cddd6e30e213305841ce13a73870f60" translate="yes" xml:space="preserve">
          <source>RangeFull::index</source>
          <target state="translated">RangeFull::index</target>
        </trans-unit>
        <trans-unit id="3ac4db3dc5dab177bd04180665c37f443e981b35" translate="yes" xml:space="preserve">
          <source>RangeFull::index_mut</source>
          <target state="translated">RangeFull::index_mut</target>
        </trans-unit>
        <trans-unit id="b6bc9667079b146fe4a7ad3bb2bcd56198148036" translate="yes" xml:space="preserve">
          <source>RangeFull::into</source>
          <target state="translated">RangeFull::into</target>
        </trans-unit>
        <trans-unit id="4a9bdc94c831d2882711502958991c9960a49410" translate="yes" xml:space="preserve">
          <source>RangeFull::ne</source>
          <target state="translated">RangeFull::ne</target>
        </trans-unit>
        <trans-unit id="2bc663ccd1d9dfb557c55b1ea27405a1343716c8" translate="yes" xml:space="preserve">
          <source>RangeFull::start_bound</source>
          <target state="translated">RangeFull::start_bound</target>
        </trans-unit>
        <trans-unit id="2f424358ab6771e8f9109a24b117f824005fee62" translate="yes" xml:space="preserve">
          <source>RangeFull::to_owned</source>
          <target state="translated">RangeFull::to_owned</target>
        </trans-unit>
        <trans-unit id="98bdee41ff40e121ccfb26433017e1b9b67e78f0" translate="yes" xml:space="preserve">
          <source>RangeFull::try_from</source>
          <target state="translated">RangeFull::try_from</target>
        </trans-unit>
        <trans-unit id="f7c8b64a3804c8f312cc13e8a7dcab5e916083b3" translate="yes" xml:space="preserve">
          <source>RangeFull::try_into</source>
          <target state="translated">RangeFull::try_into</target>
        </trans-unit>
        <trans-unit id="27c230f8513eef66128780e7a2b13f3f5fa93624" translate="yes" xml:space="preserve">
          <source>RangeFull::type_id</source>
          <target state="translated">RangeFull::type_id</target>
        </trans-unit>
        <trans-unit id="f2fa1bde42e8870fc9921fc2e705b5b5a8cbee76" translate="yes" xml:space="preserve">
          <source>RangeInclusive</source>
          <target state="translated">RangeInclusive</target>
        </trans-unit>
        <trans-unit id="78eb5cf8b1e562f422cd255807c0a7463587d47b" translate="yes" xml:space="preserve">
          <source>RangeInclusive::all</source>
          <target state="translated">RangeInclusive::all</target>
        </trans-unit>
        <trans-unit id="1b3c41e075d29ec459c655d4ec4b803581561a46" translate="yes" xml:space="preserve">
          <source>RangeInclusive::any</source>
          <target state="translated">RangeInclusive::any</target>
        </trans-unit>
        <trans-unit id="74ff2f6212f715f44637add7519d3d58eff19aca" translate="yes" xml:space="preserve">
          <source>RangeInclusive::borrow</source>
          <target state="translated">RangeInclusive::borrow</target>
        </trans-unit>
        <trans-unit id="6771dcb5ecbfa24171081ea12186a93e0674ea37" translate="yes" xml:space="preserve">
          <source>RangeInclusive::borrow_mut</source>
          <target state="translated">RangeInclusive::borrow_mut</target>
        </trans-unit>
        <trans-unit id="1b7f4ff95fb37b01f5cab1b1d90f48fa2a4ceed4" translate="yes" xml:space="preserve">
          <source>RangeInclusive::by_ref</source>
          <target state="translated">RangeInclusive::by_ref</target>
        </trans-unit>
        <trans-unit id="71425f91bb6cff550e2c49c383e7688ab17052d5" translate="yes" xml:space="preserve">
          <source>RangeInclusive::chain</source>
          <target state="translated">RangeInclusive::chain</target>
        </trans-unit>
        <trans-unit id="de4f639070af3be4e2e8b4207a46089619e5e6d9" translate="yes" xml:space="preserve">
          <source>RangeInclusive::clone</source>
          <target state="translated">RangeInclusive::clone</target>
        </trans-unit>
        <trans-unit id="9453e6b09c50110e2fc5314f3fce74b180e7d823" translate="yes" xml:space="preserve">
          <source>RangeInclusive::clone_from</source>
          <target state="translated">RangeInclusive::clone_from</target>
        </trans-unit>
        <trans-unit id="7ae546519b7b53e2e394885f4efa8815cf7c0a2b" translate="yes" xml:space="preserve">
          <source>RangeInclusive::clone_into</source>
          <target state="translated">RangeInclusive::clone_into</target>
        </trans-unit>
        <trans-unit id="4689b739746b8a249f63cb6a931cfec2326caaff" translate="yes" xml:space="preserve">
          <source>RangeInclusive::cloned</source>
          <target state="translated">RangeInclusive::cloned</target>
        </trans-unit>
        <trans-unit id="99c4a3e7c08f6b5aec2a9bfb85f841c817031f69" translate="yes" xml:space="preserve">
          <source>RangeInclusive::cmp</source>
          <target state="translated">RangeInclusive::cmp</target>
        </trans-unit>
        <trans-unit id="ac1d7628a04bf268bc5496eeb19d98711dab66a1" translate="yes" xml:space="preserve">
          <source>RangeInclusive::collect</source>
          <target state="translated">RangeInclusive::collect</target>
        </trans-unit>
        <trans-unit id="7625e60211989c45e1a773239385dc84b256a335" translate="yes" xml:space="preserve">
          <source>RangeInclusive::contains</source>
          <target state="translated">RangeInclusive::contains</target>
        </trans-unit>
        <trans-unit id="addc4838f71523a8d29f8d3385a53b977c0e40c6" translate="yes" xml:space="preserve">
          <source>RangeInclusive::copied</source>
          <target state="translated">RangeInclusive::copied</target>
        </trans-unit>
        <trans-unit id="15d5758e5bce3d4c11bfb51c2acdd746cba3f765" translate="yes" xml:space="preserve">
          <source>RangeInclusive::count</source>
          <target state="translated">RangeInclusive::count</target>
        </trans-unit>
        <trans-unit id="5ef34c46e0c9b4241df34d7eb0408eb619fd06ff" translate="yes" xml:space="preserve">
          <source>RangeInclusive::cycle</source>
          <target state="translated">RangeInclusive::cycle</target>
        </trans-unit>
        <trans-unit id="ef454d9d7e6c98a5f31ea8aabc2b406ba3085665" translate="yes" xml:space="preserve">
          <source>RangeInclusive::end</source>
          <target state="translated">RangeInclusive::end</target>
        </trans-unit>
        <trans-unit id="147fc080d674e3c6e7f594bb95119186dcaec4d9" translate="yes" xml:space="preserve">
          <source>RangeInclusive::end_bound</source>
          <target state="translated">RangeInclusive::end_bound</target>
        </trans-unit>
        <trans-unit id="b6ea9fe611267ce077fdc9f32a92dce32e9a8940" translate="yes" xml:space="preserve">
          <source>RangeInclusive::enumerate</source>
          <target state="translated">RangeInclusive::enumerate</target>
        </trans-unit>
        <trans-unit id="609cf5ff598de0527806e4301aa54ecbc56756bc" translate="yes" xml:space="preserve">
          <source>RangeInclusive::eq</source>
          <target state="translated">RangeInclusive::eq</target>
        </trans-unit>
        <trans-unit id="077cdb6c70a099ceb8f28eee4445654253d83401" translate="yes" xml:space="preserve">
          <source>RangeInclusive::filter</source>
          <target state="translated">RangeInclusive::filter</target>
        </trans-unit>
        <trans-unit id="89055f18d9987fceb9770791f15714818b97f61e" translate="yes" xml:space="preserve">
          <source>RangeInclusive::filter_map</source>
          <target state="translated">RangeInclusive::filter_map</target>
        </trans-unit>
        <trans-unit id="eef44257cf15f50e870de2e389c2d02fbddefb84" translate="yes" xml:space="preserve">
          <source>RangeInclusive::find</source>
          <target state="translated">RangeInclusive::find</target>
        </trans-unit>
        <trans-unit id="6adec73b7663e9aa2c89fefcdad521d4e843debc" translate="yes" xml:space="preserve">
          <source>RangeInclusive::find_map</source>
          <target state="translated">RangeInclusive::find_map</target>
        </trans-unit>
        <trans-unit id="68a99fa109a6fd8b17727048fbc9ec481d97ebdb" translate="yes" xml:space="preserve">
          <source>RangeInclusive::flat_map</source>
          <target state="translated">RangeInclusive::flat_map</target>
        </trans-unit>
        <trans-unit id="724410cc4c934535b00b9a900b34559f077a19e9" translate="yes" xml:space="preserve">
          <source>RangeInclusive::flatten</source>
          <target state="translated">RangeInclusive::flatten</target>
        </trans-unit>
        <trans-unit id="1098b431e3991859430ff9c533562bb3f16b34d9" translate="yes" xml:space="preserve">
          <source>RangeInclusive::fmt</source>
          <target state="translated">RangeInclusive::fmt</target>
        </trans-unit>
        <trans-unit id="fbb2d1ff9f889fc2714e97ca96cadb771fd7d581" translate="yes" xml:space="preserve">
          <source>RangeInclusive::fold</source>
          <target state="translated">RangeInclusive::fold</target>
        </trans-unit>
        <trans-unit id="b7673174dfd714dde511d0102d15f6450a1bad4b" translate="yes" xml:space="preserve">
          <source>RangeInclusive::for_each</source>
          <target state="translated">RangeInclusive::for_each</target>
        </trans-unit>
        <trans-unit id="aff90e6b2d53a9cf8ccf1a2934591b26531ae977" translate="yes" xml:space="preserve">
          <source>RangeInclusive::from</source>
          <target state="translated">RangeInclusive::from</target>
        </trans-unit>
        <trans-unit id="d91a50181bb9b16c36befb981189bd9f39e331a6" translate="yes" xml:space="preserve">
          <source>RangeInclusive::fuse</source>
          <target state="translated">RangeInclusive::fuse</target>
        </trans-unit>
        <trans-unit id="235a3834ea5df9456b8ff5a66bdbedaea49fe5cd" translate="yes" xml:space="preserve">
          <source>RangeInclusive::ge</source>
          <target state="translated">RangeInclusive::ge</target>
        </trans-unit>
        <trans-unit id="4d7a503185b5800fef4b7cbd0dea2e2c82837e70" translate="yes" xml:space="preserve">
          <source>RangeInclusive::get</source>
          <target state="translated">RangeInclusive::get</target>
        </trans-unit>
        <trans-unit id="7b81fc660b92c42cda954b9950cad61926b5bee0" translate="yes" xml:space="preserve">
          <source>RangeInclusive::get_mut</source>
          <target state="translated">RangeInclusive::get_mut</target>
        </trans-unit>
        <trans-unit id="f6d7df24767ec5addf1aa42e679ccee59915b50e" translate="yes" xml:space="preserve">
          <source>RangeInclusive::get_unchecked</source>
          <target state="translated">RangeInclusive::get_unchecked</target>
        </trans-unit>
        <trans-unit id="51301b333c45c97ba8f12e24b5c39462705711bc" translate="yes" xml:space="preserve">
          <source>RangeInclusive::get_unchecked_mut</source>
          <target state="translated">RangeInclusive::get_unchecked_mut</target>
        </trans-unit>
        <trans-unit id="a57ce9f424acd53935272e8d9825b7ed5831054a" translate="yes" xml:space="preserve">
          <source>RangeInclusive::gt</source>
          <target state="translated">RangeInclusive::gt</target>
        </trans-unit>
        <trans-unit id="b27ed796dabe0b4af372cd34d4f72b3a1608be14" translate="yes" xml:space="preserve">
          <source>RangeInclusive::hash</source>
          <target state="translated">RangeInclusive::hash</target>
        </trans-unit>
        <trans-unit id="797948ab70629ae8b58edfc8c28ad84594edd42f" translate="yes" xml:space="preserve">
          <source>RangeInclusive::hash_slice</source>
          <target state="translated">RangeInclusive::hash_slice</target>
        </trans-unit>
        <trans-unit id="f4fb06501e8d82bcd53991e8527af27264c67d0f" translate="yes" xml:space="preserve">
          <source>RangeInclusive::index</source>
          <target state="translated">RangeInclusive::index</target>
        </trans-unit>
        <trans-unit id="af7af1fb9b10f78e3fe558565d5c67f0edd109af" translate="yes" xml:space="preserve">
          <source>RangeInclusive::index_mut</source>
          <target state="translated">RangeInclusive::index_mut</target>
        </trans-unit>
        <trans-unit id="be874e4996be4e5bd6ba13c75141c58e8900ce53" translate="yes" xml:space="preserve">
          <source>RangeInclusive::inspect</source>
          <target state="translated">RangeInclusive::inspect</target>
        </trans-unit>
        <trans-unit id="49264e668b3f97409706f4f9f1179dd70a8e0418" translate="yes" xml:space="preserve">
          <source>RangeInclusive::into</source>
          <target state="translated">RangeInclusive::into</target>
        </trans-unit>
        <trans-unit id="50108fdb83525b7fc3cd58fdccc84519b44e9def" translate="yes" xml:space="preserve">
          <source>RangeInclusive::into_inner</source>
          <target state="translated">RangeInclusive::into_inner</target>
        </trans-unit>
        <trans-unit id="07cfd2929e977e09d4ce5616f294004c018788be" translate="yes" xml:space="preserve">
          <source>RangeInclusive::into_iter</source>
          <target state="translated">RangeInclusive::into_iter</target>
        </trans-unit>
        <trans-unit id="f3c13ead5e832ec65df4a9ec93ea99ec9e61fd2a" translate="yes" xml:space="preserve">
          <source>RangeInclusive::is_empty</source>
          <target state="translated">RangeInclusive::is_empty</target>
        </trans-unit>
        <trans-unit id="60e8895dc63a4d97cff1abe9847312b0580712d5" translate="yes" xml:space="preserve">
          <source>RangeInclusive::is_sorted</source>
          <target state="translated">RangeInclusive::is_sorted</target>
        </trans-unit>
        <trans-unit id="528324c7313156f7a42c6e9d296fd68b5b37876c" translate="yes" xml:space="preserve">
          <source>RangeInclusive::is_sorted_by</source>
          <target state="translated">RangeInclusive::is_sorted_by</target>
        </trans-unit>
        <trans-unit id="50bad18677c0a845094a2e1c22e3037251106248" translate="yes" xml:space="preserve">
          <source>RangeInclusive::is_sorted_by_key</source>
          <target state="translated">RangeInclusive::is_sorted_by_key</target>
        </trans-unit>
        <trans-unit id="7914e06ff23804dc478e05af1c3afc39faa0823c" translate="yes" xml:space="preserve">
          <source>RangeInclusive::last</source>
          <target state="translated">RangeInclusive::last</target>
        </trans-unit>
        <trans-unit id="97da6e021e736328468664a00714dd67917afbae" translate="yes" xml:space="preserve">
          <source>RangeInclusive::le</source>
          <target state="translated">RangeInclusive::le</target>
        </trans-unit>
        <trans-unit id="4a506cbd00f56725e393186c19502a452539dec1" translate="yes" xml:space="preserve">
          <source>RangeInclusive::len</source>
          <target state="translated">RangeInclusive::len</target>
        </trans-unit>
        <trans-unit id="f52728e027cb14772445e9ecb2d287e31da650fc" translate="yes" xml:space="preserve">
          <source>RangeInclusive::lt</source>
          <target state="translated">RangeInclusive::lt</target>
        </trans-unit>
        <trans-unit id="c523b895f2c0b569fe45232105ccc0401061154c" translate="yes" xml:space="preserve">
          <source>RangeInclusive::map</source>
          <target state="translated">RangeInclusive::map</target>
        </trans-unit>
        <trans-unit id="82e86eb522499843908561b443ebf562d9dc7abf" translate="yes" xml:space="preserve">
          <source>RangeInclusive::max</source>
          <target state="translated">RangeInclusive::max</target>
        </trans-unit>
        <trans-unit id="5c428fe3d5738990bdde11a68e9b3201b846e173" translate="yes" xml:space="preserve">
          <source>RangeInclusive::max_by</source>
          <target state="translated">RangeInclusive::max_by</target>
        </trans-unit>
        <trans-unit id="2a797b18d2705b8d8f8c43495471e67466622e13" translate="yes" xml:space="preserve">
          <source>RangeInclusive::max_by_key</source>
          <target state="translated">RangeInclusive::max_by_key</target>
        </trans-unit>
        <trans-unit id="93dbde80c0352764c4213da7ce3d6f765c427f5d" translate="yes" xml:space="preserve">
          <source>RangeInclusive::min</source>
          <target state="translated">RangeInclusive::min</target>
        </trans-unit>
        <trans-unit id="0c4e328c39ade287473a8a6684529af229cc1103" translate="yes" xml:space="preserve">
          <source>RangeInclusive::min_by</source>
          <target state="translated">RangeInclusive::min_by</target>
        </trans-unit>
        <trans-unit id="b89fe62d63b33a2972f7fe0f671630ef9159e4ea" translate="yes" xml:space="preserve">
          <source>RangeInclusive::min_by_key</source>
          <target state="translated">RangeInclusive::min_by_key</target>
        </trans-unit>
        <trans-unit id="b8f75a080760780a81b4da63a74dac721a513c63" translate="yes" xml:space="preserve">
          <source>RangeInclusive::ne</source>
          <target state="translated">RangeInclusive::ne</target>
        </trans-unit>
        <trans-unit id="0654530690bcca089ecf5c267374306fe5e51c68" translate="yes" xml:space="preserve">
          <source>RangeInclusive::new</source>
          <target state="translated">RangeInclusive::new</target>
        </trans-unit>
        <trans-unit id="eee9b1ea1cef8c95c64babb7519d99edb9260083" translate="yes" xml:space="preserve">
          <source>RangeInclusive::next</source>
          <target state="translated">RangeInclusive::next</target>
        </trans-unit>
        <trans-unit id="f015b4da6bfdde6d8f31662c45a68bd39629fa70" translate="yes" xml:space="preserve">
          <source>RangeInclusive::next_back</source>
          <target state="translated">RangeInclusive::next_back</target>
        </trans-unit>
        <trans-unit id="3a02dfcc4d08377c54f877b152e1a1bb37b1cc8d" translate="yes" xml:space="preserve">
          <source>RangeInclusive::nth</source>
          <target state="translated">RangeInclusive::nth</target>
        </trans-unit>
        <trans-unit id="47189f312b54b28e46948a0b6a5af36afa7775f9" translate="yes" xml:space="preserve">
          <source>RangeInclusive::nth_back</source>
          <target state="translated">RangeInclusive::nth_back</target>
        </trans-unit>
        <trans-unit id="c20e92458a7e523a0b699c0f7445207477e7b999" translate="yes" xml:space="preserve">
          <source>RangeInclusive::partial_cmp</source>
          <target state="translated">RangeInclusive::partial_cmp</target>
        </trans-unit>
        <trans-unit id="6a6cb39e5270487e5e40438cf068836837729fe4" translate="yes" xml:space="preserve">
          <source>RangeInclusive::partition</source>
          <target state="translated">RangeInclusive::partition</target>
        </trans-unit>
        <trans-unit id="a9a678218a25759ef40d447e9aa867a8f2abae4c" translate="yes" xml:space="preserve">
          <source>RangeInclusive::peekable</source>
          <target state="translated">RangeInclusive::peekable</target>
        </trans-unit>
        <trans-unit id="d3cdfd32e4bb93d2675c78dfaa530ce3da058562" translate="yes" xml:space="preserve">
          <source>RangeInclusive::position</source>
          <target state="translated">RangeInclusive::position</target>
        </trans-unit>
        <trans-unit id="b0947bf6d51c9fc13cbdbd278e7304eccdce1d05" translate="yes" xml:space="preserve">
          <source>RangeInclusive::product</source>
          <target state="translated">RangeInclusive::product</target>
        </trans-unit>
        <trans-unit id="9cc1d8197e822934a50e67d30abbc03c836ee41f" translate="yes" xml:space="preserve">
          <source>RangeInclusive::rev</source>
          <target state="translated">RangeInclusive::rev</target>
        </trans-unit>
        <trans-unit id="f70e886554f948d82b134fc56b6628f977ae6605" translate="yes" xml:space="preserve">
          <source>RangeInclusive::rfind</source>
          <target state="translated">RangeInclusive::rfind</target>
        </trans-unit>
        <trans-unit id="3bdde5b8be20cd5044bcd6ee938c1b2b018f5812" translate="yes" xml:space="preserve">
          <source>RangeInclusive::rfold</source>
          <target state="translated">RangeInclusive::rfold</target>
        </trans-unit>
        <trans-unit id="619fce5f970ca66200b80dca4b628291fea1d751" translate="yes" xml:space="preserve">
          <source>RangeInclusive::rposition</source>
          <target state="translated">RangeInclusive::rposition</target>
        </trans-unit>
        <trans-unit id="3a57325a149f89e6d872a35f29b8adb9d6f1b9c0" translate="yes" xml:space="preserve">
          <source>RangeInclusive::scan</source>
          <target state="translated">RangeInclusive::scan</target>
        </trans-unit>
        <trans-unit id="080406b3b55aaa31135c771393b2884e6bcefd04" translate="yes" xml:space="preserve">
          <source>RangeInclusive::size_hint</source>
          <target state="translated">RangeInclusive::size_hint</target>
        </trans-unit>
        <trans-unit id="2d6b5da5cdb2a760f36fc86c470cf70896544123" translate="yes" xml:space="preserve">
          <source>RangeInclusive::skip</source>
          <target state="translated">RangeInclusive::skip</target>
        </trans-unit>
        <trans-unit id="4065b3111be283939e583e5359e4723af9a71d86" translate="yes" xml:space="preserve">
          <source>RangeInclusive::skip_while</source>
          <target state="translated">RangeInclusive::skip_while</target>
        </trans-unit>
        <trans-unit id="d1d6d1a748b52a806a4c812d288c4fbd41f5141b" translate="yes" xml:space="preserve">
          <source>RangeInclusive::start</source>
          <target state="translated">RangeInclusive::start</target>
        </trans-unit>
        <trans-unit id="65620f92df66ee207d761638346f2e17f0de57a3" translate="yes" xml:space="preserve">
          <source>RangeInclusive::start_bound</source>
          <target state="translated">RangeInclusive::start_bound</target>
        </trans-unit>
        <trans-unit id="75378585f9c0adddf5d4c1b84dcbe46e7c1a3c50" translate="yes" xml:space="preserve">
          <source>RangeInclusive::step_by</source>
          <target state="translated">RangeInclusive::step_by</target>
        </trans-unit>
        <trans-unit id="d350e62ca607d537fe57298bf3543d4b94686b37" translate="yes" xml:space="preserve">
          <source>RangeInclusive::sum</source>
          <target state="translated">RangeInclusive::sum</target>
        </trans-unit>
        <trans-unit id="7b70e8b156c78c824fa2ca7968662d4c00dbc860" translate="yes" xml:space="preserve">
          <source>RangeInclusive::take</source>
          <target state="translated">RangeInclusive::take</target>
        </trans-unit>
        <trans-unit id="bcea8076f83e70044a2d763dab50dbd54a73b3a2" translate="yes" xml:space="preserve">
          <source>RangeInclusive::take_while</source>
          <target state="translated">RangeInclusive::take_while</target>
        </trans-unit>
        <trans-unit id="c5409651f05c9904e3621ac037c1e5e59b5ab3e8" translate="yes" xml:space="preserve">
          <source>RangeInclusive::to_owned</source>
          <target state="translated">RangeInclusive::to_owned</target>
        </trans-unit>
        <trans-unit id="8ae2605763868d4bc2fd9df8782ec7b770df879f" translate="yes" xml:space="preserve">
          <source>RangeInclusive::try_fold</source>
          <target state="translated">RangeInclusive::try_fold</target>
        </trans-unit>
        <trans-unit id="4382a108f90724e174d70ddff06349204dddce2e" translate="yes" xml:space="preserve">
          <source>RangeInclusive::try_for_each</source>
          <target state="translated">RangeInclusive::try_for_each</target>
        </trans-unit>
        <trans-unit id="26d88fffd367bdc133af6b9cde90d9e01d2f4146" translate="yes" xml:space="preserve">
          <source>RangeInclusive::try_from</source>
          <target state="translated">RangeInclusive::try_from</target>
        </trans-unit>
        <trans-unit id="cb404e9aa87a88443ad82c4ed896eb8a4ddb48a7" translate="yes" xml:space="preserve">
          <source>RangeInclusive::try_into</source>
          <target state="translated">RangeInclusive::try_into</target>
        </trans-unit>
        <trans-unit id="62d328df897ff563826732c3fdc4d3a4412bc111" translate="yes" xml:space="preserve">
          <source>RangeInclusive::try_rfold</source>
          <target state="translated">RangeInclusive::try_rfold</target>
        </trans-unit>
        <trans-unit id="7093ccfbba7817e5486feb1278c13500290d0563" translate="yes" xml:space="preserve">
          <source>RangeInclusive::type_id</source>
          <target state="translated">RangeInclusive::type_id</target>
        </trans-unit>
        <trans-unit id="4bf45b00b82a6775a88991b1f07a33b7910e1d10" translate="yes" xml:space="preserve">
          <source>RangeInclusive::unzip</source>
          <target state="translated">RangeInclusive::unzip</target>
        </trans-unit>
        <trans-unit id="90017c71fedd9c8eb0daaea8e3199f75b0b418ad" translate="yes" xml:space="preserve">
          <source>RangeInclusive::zip</source>
          <target state="translated">RangeInclusive::zip</target>
        </trans-unit>
        <trans-unit id="c23d08bdcdb5a8e3bad00100bf811d39837f1874" translate="yes" xml:space="preserve">
          <source>RangeMut</source>
          <target state="translated">RangeMut</target>
        </trans-unit>
        <trans-unit id="4e3e2867c853d577a916ed0da792c50313dfa61f" translate="yes" xml:space="preserve">
          <source>RangeTo</source>
          <target state="translated">RangeTo</target>
        </trans-unit>
        <trans-unit id="9ac3ece6c1b3f30607de7b9b3c8c93742e14dd8e" translate="yes" xml:space="preserve">
          <source>RangeTo::borrow</source>
          <target state="translated">RangeTo::borrow</target>
        </trans-unit>
        <trans-unit id="d52ccfe6d98c27aaeafdc0d11095e316d3c93b5b" translate="yes" xml:space="preserve">
          <source>RangeTo::borrow_mut</source>
          <target state="translated">RangeTo::borrow_mut</target>
        </trans-unit>
        <trans-unit id="f673a75a72ceeca789b7115eae5354831ef447d1" translate="yes" xml:space="preserve">
          <source>RangeTo::clone</source>
          <target state="translated">RangeTo::clone</target>
        </trans-unit>
        <trans-unit id="2fd17e34eae9ba41b2c44181cbbca94a40f7b931" translate="yes" xml:space="preserve">
          <source>RangeTo::clone_from</source>
          <target state="translated">RangeTo::clone_from</target>
        </trans-unit>
        <trans-unit id="6718f07cdf4a6bca910d79ae70f164a96a3c899c" translate="yes" xml:space="preserve">
          <source>RangeTo::clone_into</source>
          <target state="translated">RangeTo::clone_into</target>
        </trans-unit>
        <trans-unit id="f1f28cc232a0627785458be4ed1c91d288faa2ef" translate="yes" xml:space="preserve">
          <source>RangeTo::contains</source>
          <target state="translated">RangeTo::contains</target>
        </trans-unit>
        <trans-unit id="05c64f152c093ff915e9757805aeedcc7960e2f6" translate="yes" xml:space="preserve">
          <source>RangeTo::end_bound</source>
          <target state="translated">RangeTo::end_bound</target>
        </trans-unit>
        <trans-unit id="fe8f3d826e523d1128c069f9889c5b67abd2f40d" translate="yes" xml:space="preserve">
          <source>RangeTo::eq</source>
          <target state="translated">RangeTo::eq</target>
        </trans-unit>
        <trans-unit id="3aab1f543d59735e75bc6b95fe1ab1cc01e663d4" translate="yes" xml:space="preserve">
          <source>RangeTo::fmt</source>
          <target state="translated">RangeTo::fmt</target>
        </trans-unit>
        <trans-unit id="e6db35463b97aae4705d9fee42dd6189ee3cf872" translate="yes" xml:space="preserve">
          <source>RangeTo::from</source>
          <target state="translated">RangeTo::from</target>
        </trans-unit>
        <trans-unit id="e00dd8dd60351a46f0042d43f5336950d2b17df6" translate="yes" xml:space="preserve">
          <source>RangeTo::get</source>
          <target state="translated">RangeTo::get</target>
        </trans-unit>
        <trans-unit id="eae60152386f625eb638d9071f4d09159dc20a4d" translate="yes" xml:space="preserve">
          <source>RangeTo::get_mut</source>
          <target state="translated">RangeTo::get_mut</target>
        </trans-unit>
        <trans-unit id="10326032eea64b28b5cd81da494315977663b351" translate="yes" xml:space="preserve">
          <source>RangeTo::get_unchecked</source>
          <target state="translated">RangeTo::get_unchecked</target>
        </trans-unit>
        <trans-unit id="09aa0ed9a575255f5789261fbe67d4f143c7b959" translate="yes" xml:space="preserve">
          <source>RangeTo::get_unchecked_mut</source>
          <target state="translated">RangeTo::get_unchecked_mut</target>
        </trans-unit>
        <trans-unit id="86212f234cc7db923739b38253b3e99261b66eb8" translate="yes" xml:space="preserve">
          <source>RangeTo::hash</source>
          <target state="translated">RangeTo::hash</target>
        </trans-unit>
        <trans-unit id="8fd21da8dc4f35ce761f591bc301e63647a06245" translate="yes" xml:space="preserve">
          <source>RangeTo::hash_slice</source>
          <target state="translated">RangeTo::hash_slice</target>
        </trans-unit>
        <trans-unit id="6168989291616713ccdd95ee5d651d3dacebc38c" translate="yes" xml:space="preserve">
          <source>RangeTo::index</source>
          <target state="translated">RangeTo::index</target>
        </trans-unit>
        <trans-unit id="53bcd7c0ee6f7123be9d19a93a27d701cfe3a746" translate="yes" xml:space="preserve">
          <source>RangeTo::index_mut</source>
          <target state="translated">RangeTo::index_mut</target>
        </trans-unit>
        <trans-unit id="3a9bbf50b56349323dbb3951b1fa30893f23dfa0" translate="yes" xml:space="preserve">
          <source>RangeTo::into</source>
          <target state="translated">RangeTo::into</target>
        </trans-unit>
        <trans-unit id="92487886946ae628b7855f233f35ff511a1a1583" translate="yes" xml:space="preserve">
          <source>RangeTo::ne</source>
          <target state="translated">RangeTo::ne</target>
        </trans-unit>
        <trans-unit id="6d3ecd45e72ff7246b7d3bfdcfb9fbcb75040065" translate="yes" xml:space="preserve">
          <source>RangeTo::start_bound</source>
          <target state="translated">RangeTo::start_bound</target>
        </trans-unit>
        <trans-unit id="48eda5aa25de2773b6bddfdf15f1b6edf03cec73" translate="yes" xml:space="preserve">
          <source>RangeTo::to_owned</source>
          <target state="translated">RangeTo::to_owned</target>
        </trans-unit>
        <trans-unit id="4e4d8eb0c4b2a57c5e81e41c1c87261a4eddca50" translate="yes" xml:space="preserve">
          <source>RangeTo::try_from</source>
          <target state="translated">RangeTo::try_from</target>
        </trans-unit>
        <trans-unit id="63ed935164bc78630507b0b3323242bad706db54" translate="yes" xml:space="preserve">
          <source>RangeTo::try_into</source>
          <target state="translated">RangeTo::try_into</target>
        </trans-unit>
        <trans-unit id="551b9fa98c41e6472745f8eccdab31fb191cad7a" translate="yes" xml:space="preserve">
          <source>RangeTo::type_id</source>
          <target state="translated">RangeTo::type_id</target>
        </trans-unit>
        <trans-unit id="d985d28dde0957b017232d280c0710c90fd28c83" translate="yes" xml:space="preserve">
          <source>RangeToInclusive</source>
          <target state="translated">RangeToInclusive</target>
        </trans-unit>
        <trans-unit id="c10d6d2c88f4b284ce88efc68c6bbdba16a08acc" translate="yes" xml:space="preserve">
          <source>RangeToInclusive::borrow</source>
          <target state="translated">RangeToInclusive::borrow</target>
        </trans-unit>
        <trans-unit id="627317c3c3f0881129c644a854304b760ad3ca67" translate="yes" xml:space="preserve">
          <source>RangeToInclusive::borrow_mut</source>
          <target state="translated">RangeToInclusive::borrow_mut</target>
        </trans-unit>
        <trans-unit id="dbaffaba1b9861f9baef6dbae74e794aa7cb8a71" translate="yes" xml:space="preserve">
          <source>RangeToInclusive::clone</source>
          <target state="translated">RangeToInclusive::clone</target>
        </trans-unit>
        <trans-unit id="a6d9f5f56aa4e178c118a1f6440e9cdd75b7c979" translate="yes" xml:space="preserve">
          <source>RangeToInclusive::clone_from</source>
          <target state="translated">RangeToInclusive::clone_from</target>
        </trans-unit>
        <trans-unit id="ec61649eea086e3fa7d207d9debd737a26bbb9cc" translate="yes" xml:space="preserve">
          <source>RangeToInclusive::clone_into</source>
          <target state="translated">RangeToInclusive::clone_into</target>
        </trans-unit>
        <trans-unit id="66f44708c2a3513935a01414e682bc1f3eec3c55" translate="yes" xml:space="preserve">
          <source>RangeToInclusive::contains</source>
          <target state="translated">RangeToInclusive::contains</target>
        </trans-unit>
        <trans-unit id="7361e5df2253259a3368f0aaac22ab1c7a84c58d" translate="yes" xml:space="preserve">
          <source>RangeToInclusive::end_bound</source>
          <target state="translated">RangeToInclusive::end_bound</target>
        </trans-unit>
        <trans-unit id="9177ea95afb49f4f416c70d108a7acff20a4eeba" translate="yes" xml:space="preserve">
          <source>RangeToInclusive::eq</source>
          <target state="translated">RangeToInclusive::eq</target>
        </trans-unit>
        <trans-unit id="378339177c1f6e9bf41ebba2f734c10b8b92905d" translate="yes" xml:space="preserve">
          <source>RangeToInclusive::fmt</source>
          <target state="translated">RangeToInclusive::fmt</target>
        </trans-unit>
        <trans-unit id="ac346794310c4a3278bfcef03319c5eea1a4191f" translate="yes" xml:space="preserve">
          <source>RangeToInclusive::from</source>
          <target state="translated">RangeToInclusive::from</target>
        </trans-unit>
        <trans-unit id="ac8e9d751554212311931483d9898ed26d2b4ecf" translate="yes" xml:space="preserve">
          <source>RangeToInclusive::get</source>
          <target state="translated">RangeToInclusive::get</target>
        </trans-unit>
        <trans-unit id="bbbadee88fb550f62252593fa6092b6d10ddf387" translate="yes" xml:space="preserve">
          <source>RangeToInclusive::get_mut</source>
          <target state="translated">RangeToInclusive::get_mut</target>
        </trans-unit>
        <trans-unit id="83b5cd4277c627a35deda10a3f0d9ab9d1cd4752" translate="yes" xml:space="preserve">
          <source>RangeToInclusive::get_unchecked</source>
          <target state="translated">RangeToInclusive::get_unchecked</target>
        </trans-unit>
        <trans-unit id="37452e0424ce3bd650bf89207d085a58ae79e462" translate="yes" xml:space="preserve">
          <source>RangeToInclusive::get_unchecked_mut</source>
          <target state="translated">RangeToInclusive::get_unchecked_mut</target>
        </trans-unit>
        <trans-unit id="5498ed2cc23ff2cd2d2f13e5ee02ce0c63814f81" translate="yes" xml:space="preserve">
          <source>RangeToInclusive::hash</source>
          <target state="translated">RangeToInclusive::hash</target>
        </trans-unit>
        <trans-unit id="bfee908549a2c39d8ef7245d64b5765dbc00632d" translate="yes" xml:space="preserve">
          <source>RangeToInclusive::hash_slice</source>
          <target state="translated">RangeToInclusive::hash_slice</target>
        </trans-unit>
        <trans-unit id="8bfa7ead587100608893308d92abbab49bca7a94" translate="yes" xml:space="preserve">
          <source>RangeToInclusive::index</source>
          <target state="translated">RangeToInclusive::index</target>
        </trans-unit>
        <trans-unit id="0b20b7788b66bef581150343d527efa128a41ad2" translate="yes" xml:space="preserve">
          <source>RangeToInclusive::index_mut</source>
          <target state="translated">RangeToInclusive::index_mut</target>
        </trans-unit>
        <trans-unit id="bb69f78f80d8491574c960b41360d6d2291c13b1" translate="yes" xml:space="preserve">
          <source>RangeToInclusive::into</source>
          <target state="translated">RangeToInclusive::into</target>
        </trans-unit>
        <trans-unit id="3c34389200aa15f56b0ecb1a1e85a93d0af37de9" translate="yes" xml:space="preserve">
          <source>RangeToInclusive::ne</source>
          <target state="translated">RangeToInclusive::ne</target>
        </trans-unit>
        <trans-unit id="4cd55beb6f03fd385bee129298e430dd77fa87f5" translate="yes" xml:space="preserve">
          <source>RangeToInclusive::start_bound</source>
          <target state="translated">RangeToInclusive::start_bound</target>
        </trans-unit>
        <trans-unit id="5f4fee0c495f24a194f8d4b830f535be5f7d9486" translate="yes" xml:space="preserve">
          <source>RangeToInclusive::to_owned</source>
          <target state="translated">RangeToInclusive::to_owned</target>
        </trans-unit>
        <trans-unit id="0fe3d5f0a9741c932f14c4b15850bc64fb981a74" translate="yes" xml:space="preserve">
          <source>RangeToInclusive::try_from</source>
          <target state="translated">RangeToInclusive::try_from</target>
        </trans-unit>
        <trans-unit id="f5b8f0b5fc15b6636497993f82cc735fec7339e5" translate="yes" xml:space="preserve">
          <source>RangeToInclusive::try_into</source>
          <target state="translated">RangeToInclusive::try_into</target>
        </trans-unit>
        <trans-unit id="45559d1c4e968461bcefa9d15a49e9673d3b2eb7" translate="yes" xml:space="preserve">
          <source>RangeToInclusive::type_id</source>
          <target state="translated">RangeToInclusive::type_id</target>
        </trans-unit>
        <trans-unit id="13442990026e52a3407661154c182e2c58e34296" translate="yes" xml:space="preserve">
          <source>Ranges are only allowed with numeric values or &lt;code&gt;char&lt;/code&gt; values, because the compiler checks that the range isn&amp;rsquo;t empty at compile time. The only types for which Rust can tell if a range is empty or not are &lt;code&gt;char&lt;/code&gt; and numeric values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e9ee0a735e5e1881e2a39d789df15f943cafe87" translate="yes" xml:space="preserve">
          <source>Ranges can be used in &lt;code&gt;for&lt;/code&gt; loops:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f1017be8ed63af9920d4fd2a0e112543589adfc" translate="yes" xml:space="preserve">
          <source>Rather than spawning unlimited threads, we&amp;rsquo;ll have a fixed number of threads waiting in the pool. As requests come in, they&amp;rsquo;ll be sent to the pool for processing. The pool will maintain a queue of incoming requests. Each of the threads in the pool will pop off a request from this queue, handle the request, and then ask the queue for another request. With this design, we can process &lt;code&gt;N&lt;/code&gt; requests concurrently, where &lt;code&gt;N&lt;/code&gt; is the number of threads. If each thread is responding to a long-running request, subsequent requests can still back up in the queue, but we&amp;rsquo;ve increased the number of long-running requests we can handle before reaching that point.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="763b44cc09fb4535432b79a6d50534767e81d46e" translate="yes" xml:space="preserve">
          <source>Rather than trying to preserve signaling-ness cross-platform, this implementation favors preserving the exact bits. This means that any payloads encoded in NaNs will be preserved even if the result of this method is sent over the network from an x86 machine to a MIPS one.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e2386ac47b2575dd8e3d2989b4433153a55e64e" translate="yes" xml:space="preserve">
          <source>Rather than trying to preserve signaling-ness cross-platform, this implementation favours preserving the exact bits. This means that any payloads encoded in NaNs will be preserved even if the result of this method is sent over the network from an x86 machine to a MIPS one.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a33078721464f7f7339d7b276d49a3396d8cc580" translate="yes" xml:space="preserve">
          <source>Raw HANDLEs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb64c6b4221215b1d103fe80a9a72278ea020e47" translate="yes" xml:space="preserve">
          <source>Raw Identifiers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73a6c9e8131c0b43f4186a2651286ec9b9fb0616" translate="yes" xml:space="preserve">
          <source>Raw SOCKETs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01fb057d7991c4a8339790fa0a57a17cadf6c61c" translate="yes" xml:space="preserve">
          <source>Raw byte string</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5526ec701cadc303f1154254464375cea8cd2d27" translate="yes" xml:space="preserve">
          <source>Raw byte string literal, combination of raw and byte string literal</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e096187d95c91102edda768ec3ced57a4b885ab" translate="yes" xml:space="preserve">
          <source>Raw byte string literals</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a484d16ef9b51ec0444a8ff7e50920eb0f05f0bc" translate="yes" xml:space="preserve">
          <source>Raw byte string literals do not process any escapes. They start with the character &lt;code&gt;U+0062&lt;/code&gt; (&lt;code&gt;b&lt;/code&gt;), followed by &lt;code&gt;U+0072&lt;/code&gt; (&lt;code&gt;r&lt;/code&gt;), followed by zero or more of the character &lt;code&gt;U+0023&lt;/code&gt; (&lt;code&gt;#&lt;/code&gt;), and a &lt;code&gt;U+0022&lt;/code&gt; (double-quote) character. The &lt;em&gt;raw string body&lt;/em&gt; can contain any sequence of ASCII characters and is terminated only by another &lt;code&gt;U+0022&lt;/code&gt; (double-quote) character, followed by the same number of &lt;code&gt;U+0023&lt;/code&gt; (&lt;code&gt;#&lt;/code&gt;) characters that preceded the opening &lt;code&gt;U+0022&lt;/code&gt; (double-quote) character. A raw byte string literal can not contain any non-ASCII byte.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e0160860decfd4a8d88d3c5abc31c00a9c09fdc" translate="yes" xml:space="preserve">
          <source>Raw entries are useful for such exotic situations as:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f36bb9f3b2f7cb70cd901cf0cdef14e9f4c83b7" translate="yes" xml:space="preserve">
          <source>Raw entries give mutable access to the keys. This must not be used to modify how the key would compare or hash, as the map will not re-evaluate where the key should go, meaning the keys may become &quot;lost&quot; if their location does not reflect their state. For instance, if you change a key so that the map now contains keys which compare equal, search may start acting erratically, with two keys randomly masking each other. Implementations are free to assume this doesn't happen (within the limits of memory-safety).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4825c8fe91ee126a49c569c456289b5e1ad29440" translate="yes" xml:space="preserve">
          <source>Raw entries provide the lowest level of control for searching and manipulating a map. They must be manually initialized with a hash and then manually searched.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7264462f89ce27f88049bb86a595f171aac68c19" translate="yes" xml:space="preserve">
          <source>Raw entries provide the lowest level of control for searching and manipulating a map. They must be manually initialized with a hash and then manually searched. After this, insertions into a vacant entry still require an owned key to be provided.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cebcb11fb0265ac1a3233d9748f7535298ce0984" translate="yes" xml:space="preserve">
          <source>Raw file descriptors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5674bb91d1c8f088048adafa77baf0ba77324d3d" translate="yes" xml:space="preserve">
          <source>Raw identifiers allow you to use any word you choose as an identifier, even if that word happens to be a reserved keyword. In addition, raw identifiers allow you to use libraries written in a different Rust edition than your crate uses. For example, &lt;code&gt;try&lt;/code&gt; isn&amp;rsquo;t a keyword in the 2015 edition but is in the 2018 edition. If you depend on a library that&amp;rsquo;s written using the 2015 edition and has a &lt;code&gt;try&lt;/code&gt; function, you&amp;rsquo;ll need to use the raw identifier syntax, &lt;code&gt;r#try&lt;/code&gt; in this case, to call that function from your 2018 edition code. See &lt;a href=&quot;appendix-05-editions&quot;&gt;Appendix E&lt;/a&gt; for more information on editions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f7949d26d4cfe02607f23dc39e0895322e6aff8" translate="yes" xml:space="preserve">
          <source>Raw pointer</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7406947610b4aaf9b915c60cba67504792c004b9" translate="yes" xml:space="preserve">
          <source>Raw pointers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63e588e35818890d12124a770012df1ed891a04a" translate="yes" xml:space="preserve">
          <source>Raw pointers (&lt;code&gt;*const&lt;/code&gt; and &lt;code&gt;*mut&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21c05f68497d082f5c77ee17b471c212a8e878b4" translate="yes" xml:space="preserve">
          <source>Raw pointers are pointers without safety or liveness guarantees. Raw pointers are written as &lt;code&gt;*const T&lt;/code&gt; or &lt;code&gt;*mut T&lt;/code&gt;, for example &lt;code&gt;*const i32&lt;/code&gt; means a raw pointer to a 32-bit integer. Copying or dropping a raw pointer has no effect on the lifecycle of any other value. Dereferencing a raw pointer is an &lt;a href=&quot;../unsafety&quot;&gt;&lt;code&gt;unsafe&lt;/code&gt; operation&lt;/a&gt;, this can also be used to convert a raw pointer to a reference by reborrowing it (&lt;code&gt;&amp;amp;*&lt;/code&gt; or &lt;code&gt;&amp;amp;mut *&lt;/code&gt;). Raw pointers are generally discouraged in Rust code; they exist to support interoperability with foreign code, and writing performance-critical or low-level functions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ddc4e1b145bd3557c3572077fba39b49a6503a23" translate="yes" xml:space="preserve">
          <source>Raw string</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd7de7e9fa110484824fffd439c5570abf1de509" translate="yes" xml:space="preserve">
          <source>Raw string literal, escape characters not processed</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce9a4a772a88d49b6a63f78245488ac96b3f98ab" translate="yes" xml:space="preserve">
          <source>Raw string literals</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b25436df8a9d13f384e036d56b975cfe13bf79c" translate="yes" xml:space="preserve">
          <source>Raw string literals do not process any escapes. They start with the character &lt;code&gt;U+0072&lt;/code&gt; (&lt;code&gt;r&lt;/code&gt;), followed by zero or more of the character &lt;code&gt;U+0023&lt;/code&gt; (&lt;code&gt;#&lt;/code&gt;) and a &lt;code&gt;U+0022&lt;/code&gt; (double-quote) character. The &lt;em&gt;raw string body&lt;/em&gt; can contain any sequence of Unicode characters and is terminated only by another &lt;code&gt;U+0022&lt;/code&gt; (double-quote) character, followed by the same number of &lt;code&gt;U+0023&lt;/code&gt; (&lt;code&gt;#&lt;/code&gt;) characters that preceded the opening &lt;code&gt;U+0022&lt;/code&gt; (double-quote) character.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68a7417cc6769829649fcfed5749842b585ccee5" translate="yes" xml:space="preserve">
          <source>Raw transmutation from &lt;code&gt;u32&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fcdcdcf1390a8765d6d030ed528f059cf54eff93" translate="yes" xml:space="preserve">
          <source>Raw transmutation from &lt;code&gt;u64&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0685aac7f9b0bb6004103bf8ba6ab0c44d6656b2" translate="yes" xml:space="preserve">
          <source>Raw transmutation to &lt;code&gt;u32&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="180adb907a3ae4d47cd70799fba42cc7e508cc2b" translate="yes" xml:space="preserve">
          <source>Raw transmutation to &lt;code&gt;u64&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48d7233e8353fa113dafdcba1071a73f03575b29" translate="yes" xml:space="preserve">
          <source>Raw, unsafe pointers, &lt;code&gt;*const T&lt;/code&gt;, and &lt;code&gt;*mut T&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83f75f43a785a6515cbca140dd7f3e6fa2639dde" translate="yes" xml:space="preserve">
          <source>RawEntryBuilder</source>
          <target state="translated">RawEntryBuilder</target>
        </trans-unit>
        <trans-unit id="19944150fbd62e3cd5ecd2c35f38ac069e0b178a" translate="yes" xml:space="preserve">
          <source>RawEntryBuilderMut</source>
          <target state="translated">RawEntryBuilderMut</target>
        </trans-unit>
        <trans-unit id="f7324d8b69bfefad2904635fdd497d75980ea184" translate="yes" xml:space="preserve">
          <source>RawEntryMut</source>
          <target state="translated">RawEntryMut</target>
        </trans-unit>
        <trans-unit id="7dfa8ca472cca1021fd9d72c0870e52f7b67a551" translate="yes" xml:space="preserve">
          <source>RawFd</source>
          <target state="translated">RawFd</target>
        </trans-unit>
        <trans-unit id="d9a1393b8d5db2df1f4779de5821b26748af8a41" translate="yes" xml:space="preserve">
          <source>RawHandle</source>
          <target state="translated">RawHandle</target>
        </trans-unit>
        <trans-unit id="dcf879f07dfe2e14f84862e6ae209b67788fda90" translate="yes" xml:space="preserve">
          <source>RawOccupiedEntryMut</source>
          <target state="translated">RawOccupiedEntryMut</target>
        </trans-unit>
        <trans-unit id="7474b5f47a51fb6c94588c0ce88d876674ffdd32" translate="yes" xml:space="preserve">
          <source>RawPthread</source>
          <target state="translated">RawPthread</target>
        </trans-unit>
        <trans-unit id="05838f9aa51ee0e029863aaafabf0e0dbb10f0d7" translate="yes" xml:space="preserve">
          <source>RawSocket</source>
          <target state="translated">RawSocket</target>
        </trans-unit>
        <trans-unit id="f1b8c077881e860127f49eae1e895c4b8a774204" translate="yes" xml:space="preserve">
          <source>RawVacantEntryMut</source>
          <target state="translated">RawVacantEntryMut</target>
        </trans-unit>
        <trans-unit id="e01624343349cda84160ca75a20b11c87a7660ee" translate="yes" xml:space="preserve">
          <source>RawWaker</source>
          <target state="translated">RawWaker</target>
        </trans-unit>
        <trans-unit id="e5007945aaf2d6f4d4bcf9bc1772c0464fa73a29" translate="yes" xml:space="preserve">
          <source>RawWaker::borrow</source>
          <target state="translated">RawWaker::borrow</target>
        </trans-unit>
        <trans-unit id="e1cbf5ad2f63c5b526e0043dac5b54c220be2d3d" translate="yes" xml:space="preserve">
          <source>RawWaker::borrow_mut</source>
          <target state="translated">RawWaker::borrow_mut</target>
        </trans-unit>
        <trans-unit id="52ca019e644732d1a28801cc63167c2908f006f6" translate="yes" xml:space="preserve">
          <source>RawWaker::eq</source>
          <target state="translated">RawWaker::eq</target>
        </trans-unit>
        <trans-unit id="d0f83b66634d1171ca6ff02de43889bdcdc3fef4" translate="yes" xml:space="preserve">
          <source>RawWaker::fmt</source>
          <target state="translated">RawWaker::fmt</target>
        </trans-unit>
        <trans-unit id="20a35391f8f3168faad4572961d9bd5222149ae8" translate="yes" xml:space="preserve">
          <source>RawWaker::from</source>
          <target state="translated">RawWaker::from</target>
        </trans-unit>
        <trans-unit id="b610c7d00b4203be6be965531712845e466c840d" translate="yes" xml:space="preserve">
          <source>RawWaker::into</source>
          <target state="translated">RawWaker::into</target>
        </trans-unit>
        <trans-unit id="c4337cf232150994d112f31e267d8a4b8bbb00a9" translate="yes" xml:space="preserve">
          <source>RawWaker::ne</source>
          <target state="translated">RawWaker::ne</target>
        </trans-unit>
        <trans-unit id="bf5ed9d18d96e4ee4c0f6b77ba265ff929cdec87" translate="yes" xml:space="preserve">
          <source>RawWaker::new</source>
          <target state="translated">RawWaker::new</target>
        </trans-unit>
        <trans-unit id="7abd5bc80089f4e513451111bcdd6f4c398f4789" translate="yes" xml:space="preserve">
          <source>RawWaker::try_from</source>
          <target state="translated">RawWaker::try_from</target>
        </trans-unit>
        <trans-unit id="95014173bb8607151ba9c8e3dc23823f0da0ea5b" translate="yes" xml:space="preserve">
          <source>RawWaker::try_into</source>
          <target state="translated">RawWaker::try_into</target>
        </trans-unit>
        <trans-unit id="bbbf1bae13c3774d77408b49dd1dafe48352edf0" translate="yes" xml:space="preserve">
          <source>RawWaker::type_id</source>
          <target state="translated">RawWaker::type_id</target>
        </trans-unit>
        <trans-unit id="298a7c00cdb228653b985b7402ed7448afdb7444" translate="yes" xml:space="preserve">
          <source>RawWakerVTable</source>
          <target state="translated">RawWakerVTable</target>
        </trans-unit>
        <trans-unit id="3334e0496c27f0d7d788f93e73b49ff3a1e63344" translate="yes" xml:space="preserve">
          <source>RawWakerVTable::borrow</source>
          <target state="translated">RawWakerVTable::borrow</target>
        </trans-unit>
        <trans-unit id="762a3a24ac993468b97fc6d3f0b31aa3b845c70b" translate="yes" xml:space="preserve">
          <source>RawWakerVTable::borrow_mut</source>
          <target state="translated">RawWakerVTable::borrow_mut</target>
        </trans-unit>
        <trans-unit id="97b470761c01ea77f474700031413e3a6ea3530d" translate="yes" xml:space="preserve">
          <source>RawWakerVTable::clone</source>
          <target state="translated">RawWakerVTable::clone</target>
        </trans-unit>
        <trans-unit id="127466810bfe974a3953b5a4c1a3823c0e130053" translate="yes" xml:space="preserve">
          <source>RawWakerVTable::clone_from</source>
          <target state="translated">RawWakerVTable::clone_from</target>
        </trans-unit>
        <trans-unit id="96f81056d1534820ba9537c329dbf0e68fc46153" translate="yes" xml:space="preserve">
          <source>RawWakerVTable::clone_into</source>
          <target state="translated">RawWakerVTable::clone_into</target>
        </trans-unit>
        <trans-unit id="a94826b89f4c75e8315e7f7ccbdb8b546b92cf53" translate="yes" xml:space="preserve">
          <source>RawWakerVTable::eq</source>
          <target state="translated">RawWakerVTable::eq</target>
        </trans-unit>
        <trans-unit id="2a2e485112e56f413fae5e5bcedc98aae83cf37a" translate="yes" xml:space="preserve">
          <source>RawWakerVTable::fmt</source>
          <target state="translated">RawWakerVTable::fmt</target>
        </trans-unit>
        <trans-unit id="a84648954f67c75de1839a4fad7195026720b5c0" translate="yes" xml:space="preserve">
          <source>RawWakerVTable::from</source>
          <target state="translated">RawWakerVTable::from</target>
        </trans-unit>
        <trans-unit id="907841883ee46692991c759ae22a60c806a56167" translate="yes" xml:space="preserve">
          <source>RawWakerVTable::into</source>
          <target state="translated">RawWakerVTable::into</target>
        </trans-unit>
        <trans-unit id="ff2d509f363eae5cdb38db232a5bb87ba07276e2" translate="yes" xml:space="preserve">
          <source>RawWakerVTable::ne</source>
          <target state="translated">RawWakerVTable::ne</target>
        </trans-unit>
        <trans-unit id="944fd565916eec63e25c1d1e7bfff8659b2068b2" translate="yes" xml:space="preserve">
          <source>RawWakerVTable::new</source>
          <target state="translated">RawWakerVTable::new</target>
        </trans-unit>
        <trans-unit id="0214bb9d2f118b836755a0ed721b0dc7e366f6cf" translate="yes" xml:space="preserve">
          <source>RawWakerVTable::to_owned</source>
          <target state="translated">RawWakerVTable::to_owned</target>
        </trans-unit>
        <trans-unit id="76b560873b944933076ea754bd95f4211475466b" translate="yes" xml:space="preserve">
          <source>RawWakerVTable::try_from</source>
          <target state="translated">RawWakerVTable::try_from</target>
        </trans-unit>
        <trans-unit id="98ca7063102d141de019577f46960b34ff728119" translate="yes" xml:space="preserve">
          <source>RawWakerVTable::try_into</source>
          <target state="translated">RawWakerVTable::try_into</target>
        </trans-unit>
        <trans-unit id="8304a3619516dfd57333fc1ad6b89030c49be112" translate="yes" xml:space="preserve">
          <source>RawWakerVTable::type_id</source>
          <target state="translated">RawWakerVTable::type_id</target>
        </trans-unit>
        <trans-unit id="e41846b6fc0629040ca45e4774a707cf11fbcc70" translate="yes" xml:space="preserve">
          <source>Rc</source>
          <target state="translated">Rc</target>
        </trans-unit>
        <trans-unit id="6517edc47f13b27430661ac11c9da860bde5704e" translate="yes" xml:space="preserve">
          <source>Rc::as_ref</source>
          <target state="translated">Rc::as_ref</target>
        </trans-unit>
        <trans-unit id="67915b83766b78317844ca8bb132e071aae98ddf" translate="yes" xml:space="preserve">
          <source>Rc::borrow</source>
          <target state="translated">Rc::borrow</target>
        </trans-unit>
        <trans-unit id="c405ab74bad409ac96f33954bff2c180b764c98f" translate="yes" xml:space="preserve">
          <source>Rc::borrow_mut</source>
          <target state="translated">Rc::borrow_mut</target>
        </trans-unit>
        <trans-unit id="a3292b38c68d436499b9fe522bcff44f881ecbb9" translate="yes" xml:space="preserve">
          <source>Rc::clamp</source>
          <target state="translated">Rc::clamp</target>
        </trans-unit>
        <trans-unit id="d890a77f3da6fad9942aaece8c23a119f666a869" translate="yes" xml:space="preserve">
          <source>Rc::clone</source>
          <target state="translated">Rc::clone</target>
        </trans-unit>
        <trans-unit id="29de9827fb5b10a0afcc911928b6498e3b6971c5" translate="yes" xml:space="preserve">
          <source>Rc::clone_from</source>
          <target state="translated">Rc::clone_from</target>
        </trans-unit>
        <trans-unit id="24956a1d93f9d128a9159fd0aea637b4404c53f8" translate="yes" xml:space="preserve">
          <source>Rc::clone_into</source>
          <target state="translated">Rc::clone_into</target>
        </trans-unit>
        <trans-unit id="24b375a76909b2d126a14d740fa5173f475ca7a2" translate="yes" xml:space="preserve">
          <source>Rc::cmp</source>
          <target state="translated">Rc::cmp</target>
        </trans-unit>
        <trans-unit id="f9800254b64c342eb5eaa1e6e2b1f2b5ac84c6b8" translate="yes" xml:space="preserve">
          <source>Rc::default</source>
          <target state="translated">Rc::default</target>
        </trans-unit>
        <trans-unit id="7463c5f1f25192b85fee7b883c0259794ebc158c" translate="yes" xml:space="preserve">
          <source>Rc::deref</source>
          <target state="translated">Rc::deref</target>
        </trans-unit>
        <trans-unit id="437c663d6a1aaaf62df967752858a825de23b1e0" translate="yes" xml:space="preserve">
          <source>Rc::downcast</source>
          <target state="translated">Rc::downcast</target>
        </trans-unit>
        <trans-unit id="41f262cff55a35445444e59fadcc95448199cb72" translate="yes" xml:space="preserve">
          <source>Rc::downgrade</source>
          <target state="translated">Rc::downgrade</target>
        </trans-unit>
        <trans-unit id="2e346041da04343d36f6c8400429a5d338eeca29" translate="yes" xml:space="preserve">
          <source>Rc::drop</source>
          <target state="translated">Rc::drop</target>
        </trans-unit>
        <trans-unit id="f38251d94ae1e2e5048c680cf755a333c59f3fc7" translate="yes" xml:space="preserve">
          <source>Rc::eq</source>
          <target state="translated">Rc::eq</target>
        </trans-unit>
        <trans-unit id="ea2cecadcb1e18ef06c50655e10e1c6f42a34a24" translate="yes" xml:space="preserve">
          <source>Rc::fmt</source>
          <target state="translated">Rc::fmt</target>
        </trans-unit>
        <trans-unit id="9a8fab14b21f704c3211f754faaaaf8506b44664" translate="yes" xml:space="preserve">
          <source>Rc::from</source>
          <target state="translated">Rc::from</target>
        </trans-unit>
        <trans-unit id="6f21340bb9811b1fa6ffb6aa7c686429a838958d" translate="yes" xml:space="preserve">
          <source>Rc::from_raw</source>
          <target state="translated">Rc::from_raw</target>
        </trans-unit>
        <trans-unit id="92d54b54dcfea2c0e4fc43b6f8771645b3ad97ee" translate="yes" xml:space="preserve">
          <source>Rc::ge</source>
          <target state="translated">Rc::ge</target>
        </trans-unit>
        <trans-unit id="a8a4341af4296515a6a9840869ffb4ac60849dec" translate="yes" xml:space="preserve">
          <source>Rc::get_mut</source>
          <target state="translated">Rc::get_mut</target>
        </trans-unit>
        <trans-unit id="e343fa41eda7431d24bf4a0566c71d70fa9e0e66" translate="yes" xml:space="preserve">
          <source>Rc::gt</source>
          <target state="translated">Rc::gt</target>
        </trans-unit>
        <trans-unit id="477a21f650bf293924ae2b8d7fda7a9637062797" translate="yes" xml:space="preserve">
          <source>Rc::hash</source>
          <target state="translated">Rc::hash</target>
        </trans-unit>
        <trans-unit id="93c547a4144fe1ddfd28536f64cb3f73700d8e05" translate="yes" xml:space="preserve">
          <source>Rc::hash_slice</source>
          <target state="translated">Rc::hash_slice</target>
        </trans-unit>
        <trans-unit id="4bf183ec1f763d571f214362371d97baba67c20f" translate="yes" xml:space="preserve">
          <source>Rc::into</source>
          <target state="translated">Rc::into</target>
        </trans-unit>
        <trans-unit id="82d5004fa31049d42e2cfa990c95db3dc6c575f4" translate="yes" xml:space="preserve">
          <source>Rc::into_raw</source>
          <target state="translated">Rc::into_raw</target>
        </trans-unit>
        <trans-unit id="071c7886fc93722fa637281f1c3dfc8ca4234a75" translate="yes" xml:space="preserve">
          <source>Rc::into_raw_non_null</source>
          <target state="translated">Rc::into_raw_non_null</target>
        </trans-unit>
        <trans-unit id="028083c7d4502d5ccd5add65c502eea0ad017cb7" translate="yes" xml:space="preserve">
          <source>Rc::le</source>
          <target state="translated">Rc::le</target>
        </trans-unit>
        <trans-unit id="6b2eb732f96319fd192f3341b446ba0b96d18d0a" translate="yes" xml:space="preserve">
          <source>Rc::lt</source>
          <target state="translated">Rc::lt</target>
        </trans-unit>
        <trans-unit id="6a956ae11a6efd7cbe207538a3da9ccc2097ed76" translate="yes" xml:space="preserve">
          <source>Rc::make_mut</source>
          <target state="translated">Rc::make_mut</target>
        </trans-unit>
        <trans-unit id="ee0f387fd3170cb93e0698988fffe873d43023bc" translate="yes" xml:space="preserve">
          <source>Rc::max</source>
          <target state="translated">Rc::max</target>
        </trans-unit>
        <trans-unit id="bef959198cdfa4e2a1bcf79bf303cee04aa165bb" translate="yes" xml:space="preserve">
          <source>Rc::min</source>
          <target state="translated">Rc::min</target>
        </trans-unit>
        <trans-unit id="99d24a130a9a5972cbb8fcae715482186eae2ee8" translate="yes" xml:space="preserve">
          <source>Rc::ne</source>
          <target state="translated">Rc::ne</target>
        </trans-unit>
        <trans-unit id="275e09b18245b0e67843a64cbfb82c43d394df8f" translate="yes" xml:space="preserve">
          <source>Rc::new</source>
          <target state="translated">Rc::new</target>
        </trans-unit>
        <trans-unit id="bf9edff9d69a46439cc5be7818dc0bda63766fb6" translate="yes" xml:space="preserve">
          <source>Rc::partial_cmp</source>
          <target state="translated">Rc::partial_cmp</target>
        </trans-unit>
        <trans-unit id="16474f5cf6e975f5e66de86716d5af9402297f2a" translate="yes" xml:space="preserve">
          <source>Rc::pin</source>
          <target state="translated">Rc::pin</target>
        </trans-unit>
        <trans-unit id="f37b795cddee2f0f1dd79a2fa2341b27f07bc1f6" translate="yes" xml:space="preserve">
          <source>Rc::ptr_eq</source>
          <target state="translated">Rc::ptr_eq</target>
        </trans-unit>
        <trans-unit id="dcfa1994b79481531dd3c385752d484451452d0e" translate="yes" xml:space="preserve">
          <source>Rc::strong_count</source>
          <target state="translated">Rc::strong_count</target>
        </trans-unit>
        <trans-unit id="47f9ddc26a8368cf587d5faaaadd5da29196be63" translate="yes" xml:space="preserve">
          <source>Rc::to_owned</source>
          <target state="translated">Rc::to_owned</target>
        </trans-unit>
        <trans-unit id="cba79fb5cb6c0a8a914e02983e67891226615d49" translate="yes" xml:space="preserve">
          <source>Rc::to_string</source>
          <target state="translated">Rc::to_string</target>
        </trans-unit>
        <trans-unit id="6dff3e421f497a7da71da51e03f15d004aaee469" translate="yes" xml:space="preserve">
          <source>Rc::try_from</source>
          <target state="translated">Rc::try_from</target>
        </trans-unit>
        <trans-unit id="c858338cb38e7bca5faf54c3e8c44a4f7fb8befa" translate="yes" xml:space="preserve">
          <source>Rc::try_into</source>
          <target state="translated">Rc::try_into</target>
        </trans-unit>
        <trans-unit id="caf7a897ec1f1b1f5619be996a3580ab1eb9c125" translate="yes" xml:space="preserve">
          <source>Rc::try_unwrap</source>
          <target state="translated">Rc::try_unwrap</target>
        </trans-unit>
        <trans-unit id="dbbbf7f2a4b6ec85cb35b85dfd7b27db8474f438" translate="yes" xml:space="preserve">
          <source>Rc::type_id</source>
          <target state="translated">Rc::type_id</target>
        </trans-unit>
        <trans-unit id="f7c4b870b777d209ca5ee6d0c53d6c182e8a583d" translate="yes" xml:space="preserve">
          <source>Rc::weak_count</source>
          <target state="translated">Rc::weak_count</target>
        </trans-unit>
        <trans-unit id="a7c2ca08d406f13126e4d50a8c8832d618eb2a16" translate="yes" xml:space="preserve">
          <source>Re-encodes an &lt;code&gt;OsStr&lt;/code&gt; as a wide character sequence, i.e., potentially ill-formed UTF-16.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c65fce14fc83f6f42d4be42b83f6efc530f4e1d0" translate="yes" xml:space="preserve">
          <source>Re-encodes an &lt;code&gt;OsStr&lt;/code&gt; as a wide character sequence, i.e., potentially ill-formed UTF-16. &lt;a href=&quot;../os/windows/ffi/trait.osstrext#tymethod.encode_wide&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7cc3d5baa1039b8b28d9886a65117fb3d07b0d7" translate="yes" xml:space="preserve">
          <source>Re-exporting Names with &lt;code id=&quot;re-exporting-names-with-pub-use&quot;&gt;pub use&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82136ea74433a2e4719706a67293ee7c476aae39" translate="yes" xml:space="preserve">
          <source>Re-exporting and Visibility</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b6de882250ca9be8bad1b7021dc7796554dbdfd" translate="yes" xml:space="preserve">
          <source>Re-exporting is useful when the internal structure of your code is different from how programmers calling your code would think about the domain. For example, in this restaurant metaphor, the people running the restaurant think about &amp;ldquo;front of house&amp;rdquo; and &amp;ldquo;back of house.&amp;rdquo; But customers visiting a restaurant probably won&amp;rsquo;t think about the parts of the restaurant in those terms. With &lt;code&gt;pub use&lt;/code&gt;, we can write our code with one structure but expose a different structure. Doing so makes our library well organized for programmers working on the library and programmers calling the library.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eda2bfe47f1cfbe6424bba7d3a76f901f6b42466" translate="yes" xml:space="preserve">
          <source>Re-exports</source>
          <target state="translated">Re-exports</target>
        </trans-unit>
        <trans-unit id="d422a17942f96c2a0a2768e2e29ad7a5844366b8" translate="yes" xml:space="preserve">
          <source>Reaches into this error indicating that a lock is poisoned, returning a mutable reference to the underlying guard to allow access regardless.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f450ae4387b2d2205a4a8e45edc9260e6dbf0d1" translate="yes" xml:space="preserve">
          <source>Reaches into this error indicating that a lock is poisoned, returning a reference to the underlying guard to allow access regardless.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad880641ccbd447b37bb099d2267d49ac661fa0f" translate="yes" xml:space="preserve">
          <source>Reaching this function is completely &lt;em&gt;undefined behavior&lt;/em&gt; (UB). In particular, the compiler assumes that all UB must never happen, and therefore will eliminate all branches that reach to a call to &lt;code&gt;unreachable_unchecked()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="852b438f91ad9eb2cdd84419a675a216d543c687" translate="yes" xml:space="preserve">
          <source>Read</source>
          <target state="translated">Read</target>
        </trans-unit>
        <trans-unit id="4955b79d82f58e610ad1791b2e2b696ff640fda0" translate="yes" xml:space="preserve">
          <source>Read all bytes into &lt;code&gt;buf&lt;/code&gt; until the delimiter &lt;code&gt;byte&lt;/code&gt; or EOF is reached.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dfabe443014fd9d0acde13e506476c45f39f3be9" translate="yes" xml:space="preserve">
          <source>Read all bytes into &lt;code&gt;buf&lt;/code&gt; until the delimiter &lt;code&gt;byte&lt;/code&gt; or EOF is reached. &lt;a href=&quot;../io/trait.bufread#method.read_until&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1dd5fa24fac04708eb7d09f9b71eafae3652625" translate="yes" xml:space="preserve">
          <source>Read all bytes into &lt;code&gt;buf&lt;/code&gt; until the delimiter &lt;code&gt;byte&lt;/code&gt; or EOF is reached. &lt;a href=&quot;io/trait.bufread#method.read_until&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20c68943490eab75b8393886c786bfce41ed538d" translate="yes" xml:space="preserve">
          <source>Read all bytes into &lt;code&gt;buf&lt;/code&gt; until the delimiter &lt;code&gt;byte&lt;/code&gt; or EOF is reached. &lt;a href=&quot;trait.bufread#method.read_until&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8628d8ad46a6f777556d3ae690c981be0fe616e0" translate="yes" xml:space="preserve">
          <source>Read all bytes until EOF in this source, appending them to &lt;code&gt;buf&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b5cedd3b11440f67471416111bbead4c1055ef8" translate="yes" xml:space="preserve">
          <source>Read all bytes until EOF in this source, appending them to &lt;code&gt;buf&lt;/code&gt;. &lt;a href=&quot;../../../io/trait.read#method.read_to_string&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59b632cacba411fc615d971cf83a9c99771e175c" translate="yes" xml:space="preserve">
          <source>Read all bytes until EOF in this source, appending them to &lt;code&gt;buf&lt;/code&gt;. &lt;a href=&quot;../io/trait.read#method.read_to_string&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23ce0337f8ae37e3141425a9d23a5a07e0ecef22" translate="yes" xml:space="preserve">
          <source>Read all bytes until EOF in this source, appending them to &lt;code&gt;buf&lt;/code&gt;. &lt;a href=&quot;io/trait.read#method.read_to_string&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf3cd2b44ab1ca46c20cfdb34b4ecc0c77df4924" translate="yes" xml:space="preserve">
          <source>Read all bytes until EOF in this source, appending them to &lt;code&gt;buf&lt;/code&gt;. &lt;a href=&quot;trait.read#method.read_to_string&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b17a0327950722df7ef31829395e2be5f4c5fdf" translate="yes" xml:space="preserve">
          <source>Read all bytes until EOF in this source, placing them into &lt;code&gt;buf&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="627f30f10b9df729ca25248b091ba0a8176cc6d4" translate="yes" xml:space="preserve">
          <source>Read all bytes until EOF in this source, placing them into &lt;code&gt;buf&lt;/code&gt;. &lt;a href=&quot;../../../io/trait.read#method.read_to_end&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b148b8b5287b4d894508c6abeeba65687360fad4" translate="yes" xml:space="preserve">
          <source>Read all bytes until EOF in this source, placing them into &lt;code&gt;buf&lt;/code&gt;. &lt;a href=&quot;../io/trait.read#method.read_to_end&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8b89d5304a56b297c4a2c9dd2f4bbad258bd98a" translate="yes" xml:space="preserve">
          <source>Read all bytes until EOF in this source, placing them into &lt;code&gt;buf&lt;/code&gt;. &lt;a href=&quot;io/trait.read#method.read_to_end&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7fe0dd9ca78711718f83ccddfb730235826eff1" translate="yes" xml:space="preserve">
          <source>Read all bytes until EOF in this source, placing them into &lt;code&gt;buf&lt;/code&gt;. &lt;a href=&quot;trait.read#method.read_to_end&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d67dd80be945c4cef5eb0023ca9b40ca8b949703" translate="yes" xml:space="preserve">
          <source>Read all bytes until a newline (the 0xA byte) is reached, and append them to the provided buffer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b7f423ebbc16f7d003501fab2fe3bebdec4126d" translate="yes" xml:space="preserve">
          <source>Read all bytes until a newline (the 0xA byte) is reached, and append them to the provided buffer. &lt;a href=&quot;../io/trait.bufread#method.read_line&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e6bae6c84a5776f4a3d37dc14c6b1f4f56df8da" translate="yes" xml:space="preserve">
          <source>Read all bytes until a newline (the 0xA byte) is reached, and append them to the provided buffer. &lt;a href=&quot;io/trait.bufread#method.read_line&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84e51af9a2e398af1f37897ece84ea5babfc3811" translate="yes" xml:space="preserve">
          <source>Read all bytes until a newline (the 0xA byte) is reached, and append them to the provided buffer. &lt;a href=&quot;trait.bufread#method.read_line&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8bf38e07e361334d95c3bdc1284defa3881000c6" translate="yes" xml:space="preserve">
          <source>Read and Write</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f37fc303fbdb3912eda1a203bb681ea9a9813fa5" translate="yes" xml:space="preserve">
          <source>Read from &lt;a href=&quot;../primitive.str&quot;&gt;&lt;code&gt;&amp;amp;str&lt;/code&gt;&lt;/a&gt; because &lt;a href=&quot;../primitive.slice&quot;&gt;&lt;code&gt;&amp;amp;[u8]&lt;/code&gt;&lt;/a&gt; implements &lt;code&gt;Read&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3684b2861b75ea353c0a2e5693dbab22dcfc59e5" translate="yes" xml:space="preserve">
          <source>Read is implemented for &lt;code&gt;&amp;amp;[u8]&lt;/code&gt; by copying from the slice.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cee8f4e316762fbd5460a9a0ece0d25298bad8c5" translate="yes" xml:space="preserve">
          <source>Read the contents of a file into a &lt;a href=&quot;../string/struct.string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3025f075997a386102bc57fb44c7414f26d2abb0" translate="yes" xml:space="preserve">
          <source>Read the entire contents of a file into a bytes vector.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6217ff62850bc13dbc7a4ba0a0734bbdd4cfd081" translate="yes" xml:space="preserve">
          <source>Read the entire contents of a file into a string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf29b702ccd2798c77b8e34791ca0f07dab6a07d" translate="yes" xml:space="preserve">
          <source>Read the exact number of bytes required to fill &lt;code&gt;buf&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30475e68fb188622b8f612da886a95d25a7cb104" translate="yes" xml:space="preserve">
          <source>Read the exact number of bytes required to fill &lt;code&gt;buf&lt;/code&gt;. &lt;a href=&quot;../../../io/trait.read#method.read_exact&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7bfd372d8c1f792a2af880495a55fa9bb7a4af7" translate="yes" xml:space="preserve">
          <source>Read the exact number of bytes required to fill &lt;code&gt;buf&lt;/code&gt;. &lt;a href=&quot;../io/trait.read#method.read_exact&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b8b08b0098880cdbccf4f8d11857f0398041e42" translate="yes" xml:space="preserve">
          <source>Read the exact number of bytes required to fill &lt;code&gt;buf&lt;/code&gt;. &lt;a href=&quot;io/trait.read#method.read_exact&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6331109e0c1b38abf681591a378a4d20c28bc6b" translate="yes" xml:space="preserve">
          <source>Read the exact number of bytes required to fill &lt;code&gt;buf&lt;/code&gt;. &lt;a href=&quot;trait.read#method.read_exact&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d42cf08e897513d379b703a8da21da647a9ade6" translate="yes" xml:space="preserve">
          <source>Read::by_ref</source>
          <target state="translated">Read::by_ref</target>
        </trans-unit>
        <trans-unit id="868be0fa05b5ce980b37383d48eaef4a2f31f62e" translate="yes" xml:space="preserve">
          <source>Read::bytes</source>
          <target state="translated">Read::bytes</target>
        </trans-unit>
        <trans-unit id="34b7c8ac89dceb336a7c362523bcf163c8caa61d" translate="yes" xml:space="preserve">
          <source>Read::chain</source>
          <target state="translated">Read::chain</target>
        </trans-unit>
        <trans-unit id="0b71640c286d1b2bbeae57a8799f88c650460f23" translate="yes" xml:space="preserve">
          <source>Read::initializer</source>
          <target state="translated">Read::initializer</target>
        </trans-unit>
        <trans-unit id="8215f31c1896a55126ae4c6843ebc5f004c28200" translate="yes" xml:space="preserve">
          <source>Read::read</source>
          <target state="translated">Read::read</target>
        </trans-unit>
        <trans-unit id="20b2e50893e9a1d3989491b10bff95c440d95ab7" translate="yes" xml:space="preserve">
          <source>Read::read_exact</source>
          <target state="translated">Read::read_exact</target>
        </trans-unit>
        <trans-unit id="b7116de153914a541555a07c2e9251a6e213aa74" translate="yes" xml:space="preserve">
          <source>Read::read_to_end</source>
          <target state="translated">Read::read_to_end</target>
        </trans-unit>
        <trans-unit id="4fdfe09256554670a78603825fe1b0d973b76622" translate="yes" xml:space="preserve">
          <source>Read::read_to_string</source>
          <target state="translated">Read::read_to_string</target>
        </trans-unit>
        <trans-unit id="a405183934eb940e36c7dd026c2b5d5fb92d5210" translate="yes" xml:space="preserve">
          <source>Read::read_vectored</source>
          <target state="translated">Read::read_vectored</target>
        </trans-unit>
        <trans-unit id="e7651abb56c19158129573d316520368e6dcf244" translate="yes" xml:space="preserve">
          <source>Read::take</source>
          <target state="translated">Read::take</target>
        </trans-unit>
        <trans-unit id="5967a3c48bcceae8eab866aea588318eebdf12d2" translate="yes" xml:space="preserve">
          <source>ReadDir</source>
          <target state="translated">ReadDir</target>
        </trans-unit>
        <trans-unit id="eee36da2f89658931c94e16550eeddc622814ae3" translate="yes" xml:space="preserve">
          <source>ReadDir::all</source>
          <target state="translated">ReadDir::all</target>
        </trans-unit>
        <trans-unit id="4e4e2f9edc446605337e5a0c15959c02597e72fa" translate="yes" xml:space="preserve">
          <source>ReadDir::any</source>
          <target state="translated">ReadDir::any</target>
        </trans-unit>
        <trans-unit id="384a43a29f5adf6109dbcd531022f38a44f3a58e" translate="yes" xml:space="preserve">
          <source>ReadDir::borrow</source>
          <target state="translated">ReadDir::borrow</target>
        </trans-unit>
        <trans-unit id="7c7ad115d1ca9b1f917088752c1c91b8d854d2a2" translate="yes" xml:space="preserve">
          <source>ReadDir::borrow_mut</source>
          <target state="translated">ReadDir::borrow_mut</target>
        </trans-unit>
        <trans-unit id="a9a5fa6212f91e4c81f7c072924e797f1a193d87" translate="yes" xml:space="preserve">
          <source>ReadDir::by_ref</source>
          <target state="translated">ReadDir::by_ref</target>
        </trans-unit>
        <trans-unit id="81a7f712c4f7e43a1d194cf7893b3de5c122ec6a" translate="yes" xml:space="preserve">
          <source>ReadDir::chain</source>
          <target state="translated">ReadDir::chain</target>
        </trans-unit>
        <trans-unit id="af3778ae80946114688c0e003f355e371c96edc2" translate="yes" xml:space="preserve">
          <source>ReadDir::cloned</source>
          <target state="translated">ReadDir::cloned</target>
        </trans-unit>
        <trans-unit id="44bbb46c7ff0c896f967b73bb17b6ac7273ea085" translate="yes" xml:space="preserve">
          <source>ReadDir::cmp</source>
          <target state="translated">ReadDir::cmp</target>
        </trans-unit>
        <trans-unit id="fdde136604e36ed5911d0ca04eb3cb0dba1f7535" translate="yes" xml:space="preserve">
          <source>ReadDir::collect</source>
          <target state="translated">ReadDir::collect</target>
        </trans-unit>
        <trans-unit id="02685a8f93c37571c60ec533db2b29992e602bf7" translate="yes" xml:space="preserve">
          <source>ReadDir::copied</source>
          <target state="translated">ReadDir::copied</target>
        </trans-unit>
        <trans-unit id="b0d679b7992b2a57e8353881cbea2af34970b99a" translate="yes" xml:space="preserve">
          <source>ReadDir::count</source>
          <target state="translated">ReadDir::count</target>
        </trans-unit>
        <trans-unit id="bca67add72464a957dcb4f282fcbaf36e1516be4" translate="yes" xml:space="preserve">
          <source>ReadDir::cycle</source>
          <target state="translated">ReadDir::cycle</target>
        </trans-unit>
        <trans-unit id="41e60b25d5ea1df09dd584a3582da07bce6f954a" translate="yes" xml:space="preserve">
          <source>ReadDir::enumerate</source>
          <target state="translated">ReadDir::enumerate</target>
        </trans-unit>
        <trans-unit id="c122e4ebcd8ff7aa3515e65cd1c31b660dcd7ccb" translate="yes" xml:space="preserve">
          <source>ReadDir::eq</source>
          <target state="translated">ReadDir::eq</target>
        </trans-unit>
        <trans-unit id="87fed61c8a176289a874af11ad05bb5609c923ea" translate="yes" xml:space="preserve">
          <source>ReadDir::filter</source>
          <target state="translated">ReadDir::filter</target>
        </trans-unit>
        <trans-unit id="071ca380f1f9eeab6af3c290787c94fba0439431" translate="yes" xml:space="preserve">
          <source>ReadDir::filter_map</source>
          <target state="translated">ReadDir::filter_map</target>
        </trans-unit>
        <trans-unit id="68433dc18fc42d23aacd81ca9e1fdb593abbcb94" translate="yes" xml:space="preserve">
          <source>ReadDir::find</source>
          <target state="translated">ReadDir::find</target>
        </trans-unit>
        <trans-unit id="8da7ad1e35882f87849cef57126d958ba0a81013" translate="yes" xml:space="preserve">
          <source>ReadDir::find_map</source>
          <target state="translated">ReadDir::find_map</target>
        </trans-unit>
        <trans-unit id="fe6a98b4dbf705eb404d4f58072950ca7fb41729" translate="yes" xml:space="preserve">
          <source>ReadDir::flat_map</source>
          <target state="translated">ReadDir::flat_map</target>
        </trans-unit>
        <trans-unit id="244e32da80a84e4e52321d46a9e9a90f12d45e64" translate="yes" xml:space="preserve">
          <source>ReadDir::flatten</source>
          <target state="translated">ReadDir::flatten</target>
        </trans-unit>
        <trans-unit id="218e02a62d7e07aaaf965dd826f10098287ba620" translate="yes" xml:space="preserve">
          <source>ReadDir::fmt</source>
          <target state="translated">ReadDir::fmt</target>
        </trans-unit>
        <trans-unit id="b2c9325e5e872353328e3d23929b9705c5ee9d11" translate="yes" xml:space="preserve">
          <source>ReadDir::fold</source>
          <target state="translated">ReadDir::fold</target>
        </trans-unit>
        <trans-unit id="d569e1e76dfe26d9b07cd1820cfd6bc38515b0db" translate="yes" xml:space="preserve">
          <source>ReadDir::for_each</source>
          <target state="translated">ReadDir::for_each</target>
        </trans-unit>
        <trans-unit id="1139395f7ad74a071eccd7f633073acbea665ad5" translate="yes" xml:space="preserve">
          <source>ReadDir::from</source>
          <target state="translated">ReadDir::from</target>
        </trans-unit>
        <trans-unit id="0182841eccee49571fb77892d363552e0546de70" translate="yes" xml:space="preserve">
          <source>ReadDir::fuse</source>
          <target state="translated">ReadDir::fuse</target>
        </trans-unit>
        <trans-unit id="07e49d4bc3b884e8d35f70d40ed34cf2101c1b34" translate="yes" xml:space="preserve">
          <source>ReadDir::ge</source>
          <target state="translated">ReadDir::ge</target>
        </trans-unit>
        <trans-unit id="4da8f8ca27fbd9bcf019939efb6354e04a44e150" translate="yes" xml:space="preserve">
          <source>ReadDir::gt</source>
          <target state="translated">ReadDir::gt</target>
        </trans-unit>
        <trans-unit id="13573dfc6b54a001e82d8fc1168ae572c25d30e0" translate="yes" xml:space="preserve">
          <source>ReadDir::inspect</source>
          <target state="translated">ReadDir::inspect</target>
        </trans-unit>
        <trans-unit id="c82c8bd5fb1b30c1610eb503ed25e0689fee0167" translate="yes" xml:space="preserve">
          <source>ReadDir::into</source>
          <target state="translated">ReadDir::into</target>
        </trans-unit>
        <trans-unit id="3891535ab8a5a4e66c1f29afc23dc81640ae82da" translate="yes" xml:space="preserve">
          <source>ReadDir::into_iter</source>
          <target state="translated">ReadDir::into_iter</target>
        </trans-unit>
        <trans-unit id="6a3bfbe85af0d035dfb845a7686eaa36e5c424d1" translate="yes" xml:space="preserve">
          <source>ReadDir::is_sorted</source>
          <target state="translated">ReadDir::is_sorted</target>
        </trans-unit>
        <trans-unit id="d030ace6e479b69d1e19301c7064c02e40ff88a4" translate="yes" xml:space="preserve">
          <source>ReadDir::is_sorted_by</source>
          <target state="translated">ReadDir::is_sorted_by</target>
        </trans-unit>
        <trans-unit id="162c00e6af11b671a6d882473e8a29a45b27cd93" translate="yes" xml:space="preserve">
          <source>ReadDir::is_sorted_by_key</source>
          <target state="translated">ReadDir::is_sorted_by_key</target>
        </trans-unit>
        <trans-unit id="5edfb94c83e3a52ebfd65ceedb77d7138482a704" translate="yes" xml:space="preserve">
          <source>ReadDir::last</source>
          <target state="translated">ReadDir::last</target>
        </trans-unit>
        <trans-unit id="b347a50a98ca227305bfa320fe8c259dd702a834" translate="yes" xml:space="preserve">
          <source>ReadDir::le</source>
          <target state="translated">ReadDir::le</target>
        </trans-unit>
        <trans-unit id="121987e25e716880d602214b6e7e113011f90ece" translate="yes" xml:space="preserve">
          <source>ReadDir::lt</source>
          <target state="translated">ReadDir::lt</target>
        </trans-unit>
        <trans-unit id="73cd9a4901b1625f175f6cd5d5b05829eb04e744" translate="yes" xml:space="preserve">
          <source>ReadDir::map</source>
          <target state="translated">ReadDir::map</target>
        </trans-unit>
        <trans-unit id="29160f414b7ac9ec1c5bdaf067213b2b558b3026" translate="yes" xml:space="preserve">
          <source>ReadDir::max</source>
          <target state="translated">ReadDir::max</target>
        </trans-unit>
        <trans-unit id="0371f9c32057e4c572046c1f0e12df7e94ea261d" translate="yes" xml:space="preserve">
          <source>ReadDir::max_by</source>
          <target state="translated">ReadDir::max_by</target>
        </trans-unit>
        <trans-unit id="bb08f2b2ac6961587d3baca3d136e65653871db7" translate="yes" xml:space="preserve">
          <source>ReadDir::max_by_key</source>
          <target state="translated">ReadDir::max_by_key</target>
        </trans-unit>
        <trans-unit id="7ae43f191c3cd90d6bdc4f09ff162abaa33c2e3b" translate="yes" xml:space="preserve">
          <source>ReadDir::min</source>
          <target state="translated">ReadDir::min</target>
        </trans-unit>
        <trans-unit id="d59de49dfbd883955c3b4cae0f1e7a7fc7eda8b7" translate="yes" xml:space="preserve">
          <source>ReadDir::min_by</source>
          <target state="translated">ReadDir::min_by</target>
        </trans-unit>
        <trans-unit id="2deb04a5a162e1d3b95245212e04b0879249bdef" translate="yes" xml:space="preserve">
          <source>ReadDir::min_by_key</source>
          <target state="translated">ReadDir::min_by_key</target>
        </trans-unit>
        <trans-unit id="b78506eeb6909e5d0d02c4fe71aaac62db1b3df2" translate="yes" xml:space="preserve">
          <source>ReadDir::ne</source>
          <target state="translated">ReadDir::ne</target>
        </trans-unit>
        <trans-unit id="f7109782eb43e77e07defe3d4496588a1d412959" translate="yes" xml:space="preserve">
          <source>ReadDir::next</source>
          <target state="translated">ReadDir::next</target>
        </trans-unit>
        <trans-unit id="21c414c00bddb257d7b10f447d9b0a21c2c4e69e" translate="yes" xml:space="preserve">
          <source>ReadDir::nth</source>
          <target state="translated">ReadDir::nth</target>
        </trans-unit>
        <trans-unit id="5fe92e8cec34c8e47ff7eee529cdf5430239c9e9" translate="yes" xml:space="preserve">
          <source>ReadDir::partial_cmp</source>
          <target state="translated">ReadDir::partial_cmp</target>
        </trans-unit>
        <trans-unit id="afa10fe7818b39862f8a13ce0f86ba208765c49b" translate="yes" xml:space="preserve">
          <source>ReadDir::partition</source>
          <target state="translated">ReadDir::partition</target>
        </trans-unit>
        <trans-unit id="800ddaafac8a8e56d6fbcd4e6d0d6c65fc6cc94e" translate="yes" xml:space="preserve">
          <source>ReadDir::peekable</source>
          <target state="translated">ReadDir::peekable</target>
        </trans-unit>
        <trans-unit id="c8c0199564e8f72420a238c16c1284ba9b3d57fc" translate="yes" xml:space="preserve">
          <source>ReadDir::position</source>
          <target state="translated">ReadDir::position</target>
        </trans-unit>
        <trans-unit id="72d7386ef350b242e1a2f1dab88f725465357757" translate="yes" xml:space="preserve">
          <source>ReadDir::product</source>
          <target state="translated">ReadDir::product</target>
        </trans-unit>
        <trans-unit id="3e9a25a2e99efa7110fb7f06e9ad642d4600c05f" translate="yes" xml:space="preserve">
          <source>ReadDir::rev</source>
          <target state="translated">ReadDir::rev</target>
        </trans-unit>
        <trans-unit id="e1467379910bb7ed20b468d7be3f87272791580e" translate="yes" xml:space="preserve">
          <source>ReadDir::rposition</source>
          <target state="translated">ReadDir::rposition</target>
        </trans-unit>
        <trans-unit id="e652c4499aa9a3ffe986d0524a73d529dbc9fb7f" translate="yes" xml:space="preserve">
          <source>ReadDir::scan</source>
          <target state="translated">ReadDir::scan</target>
        </trans-unit>
        <trans-unit id="e3c6c6e2f7592846e953e0ba8f624910561060d1" translate="yes" xml:space="preserve">
          <source>ReadDir::size_hint</source>
          <target state="translated">ReadDir::size_hint</target>
        </trans-unit>
        <trans-unit id="da2ea3b7ac21c68cfa5113bb70b4f1d99df2c286" translate="yes" xml:space="preserve">
          <source>ReadDir::skip</source>
          <target state="translated">ReadDir::skip</target>
        </trans-unit>
        <trans-unit id="2a1f99526f9c81cfec557a4b160469d8f663f339" translate="yes" xml:space="preserve">
          <source>ReadDir::skip_while</source>
          <target state="translated">ReadDir::skip_while</target>
        </trans-unit>
        <trans-unit id="c73f86e6936709dda4c4d26495fa40bafc64821b" translate="yes" xml:space="preserve">
          <source>ReadDir::step_by</source>
          <target state="translated">ReadDir::step_by</target>
        </trans-unit>
        <trans-unit id="848d46530ef90158514603fc98c5b30ab6b42155" translate="yes" xml:space="preserve">
          <source>ReadDir::sum</source>
          <target state="translated">ReadDir::sum</target>
        </trans-unit>
        <trans-unit id="0e399e94cc63582b765b0699bbbbcb9363eca198" translate="yes" xml:space="preserve">
          <source>ReadDir::take</source>
          <target state="translated">ReadDir::take</target>
        </trans-unit>
        <trans-unit id="274bcaf64fc61aaf802f412c4f007467f13f4918" translate="yes" xml:space="preserve">
          <source>ReadDir::take_while</source>
          <target state="translated">ReadDir::take_while</target>
        </trans-unit>
        <trans-unit id="3163a4054ea404a95888a7f4971e62ab5aabc3c7" translate="yes" xml:space="preserve">
          <source>ReadDir::try_fold</source>
          <target state="translated">ReadDir::try_fold</target>
        </trans-unit>
        <trans-unit id="eecee7d68e1aa7a5fe4d33d70cc8fc075b1e5444" translate="yes" xml:space="preserve">
          <source>ReadDir::try_for_each</source>
          <target state="translated">ReadDir::try_for_each</target>
        </trans-unit>
        <trans-unit id="fd413bac8334c489ebabfbc9d204197d83c14318" translate="yes" xml:space="preserve">
          <source>ReadDir::try_from</source>
          <target state="translated">ReadDir::try_from</target>
        </trans-unit>
        <trans-unit id="7597ab15990a171a33c6bd92342ca067aeb53e1b" translate="yes" xml:space="preserve">
          <source>ReadDir::try_into</source>
          <target state="translated">ReadDir::try_into</target>
        </trans-unit>
        <trans-unit id="97b9022b1e53f65d002a4aa894af4b5fff9d8e59" translate="yes" xml:space="preserve">
          <source>ReadDir::type_id</source>
          <target state="translated">ReadDir::type_id</target>
        </trans-unit>
        <trans-unit id="0a2d7207c9021148229e5c5be394ff7a465e244d" translate="yes" xml:space="preserve">
          <source>ReadDir::unzip</source>
          <target state="translated">ReadDir::unzip</target>
        </trans-unit>
        <trans-unit id="d8a91ff17c9da22dbb3e15918e960b90416a2bdc" translate="yes" xml:space="preserve">
          <source>ReadDir::zip</source>
          <target state="translated">ReadDir::zip</target>
        </trans-unit>
        <trans-unit id="7966241573e357e107eeb70dcb0356e963fbce94" translate="yes" xml:space="preserve">
          <source>Reader adaptor which limits the bytes read from an underlying reader.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3d7382a6b1b0f982a454529b7364628e241f227" translate="yes" xml:space="preserve">
          <source>Readers are defined by one required method, &lt;a href=&quot;trait.read#tymethod.read&quot;&gt;&lt;code&gt;read()&lt;/code&gt;&lt;/a&gt;. Each call to &lt;a href=&quot;trait.read#tymethod.read&quot;&gt;&lt;code&gt;read()&lt;/code&gt;&lt;/a&gt; will attempt to pull bytes from this source into a provided buffer. A number of other methods are implemented in terms of &lt;a href=&quot;trait.read#tymethod.read&quot;&gt;&lt;code&gt;read()&lt;/code&gt;&lt;/a&gt;, giving implementors a number of ways to read bytes while only needing to implement a single method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7bbf2a577054ef3e935b0580155e9d485db28740" translate="yes" xml:space="preserve">
          <source>Readers are intended to be composable with one another. Many implementors throughout &lt;a href=&quot;index&quot;&gt;&lt;code&gt;std::io&lt;/code&gt;&lt;/a&gt; take and provide types which implement the &lt;code&gt;Read&lt;/code&gt; trait.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5473ffa93b30fa294601ace41eff2869779706af" translate="yes" xml:space="preserve">
          <source>Reading Elements of Vectors</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d95d060bd72753fbcb6ce12aa159086cd1b6d26" translate="yes" xml:space="preserve">
          <source>Reading a File</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3cfdb7bd3b78488749cba4bed260f08f64ad8047" translate="yes" xml:space="preserve">
          <source>Reading a file into a string is a fairly common operation, so Rust provides the convenient &lt;code&gt;fs::read_to_string&lt;/code&gt; function that opens the file, creates a new &lt;code&gt;String&lt;/code&gt;, reads the contents of the file, puts the contents into that &lt;code&gt;String&lt;/code&gt;, and returns it. Of course, using &lt;code&gt;fs::read_to_string&lt;/code&gt; doesn&amp;rsquo;t give us the opportunity to explain all the error handling, so we did it the longer way first.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51259e1bdfba582032350760e20b49bdcc88457a" translate="yes" xml:space="preserve">
          <source>Reading beyond the end of the file will always return with a length of 0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5913e922226462d94153ab48c03a05d0ea31201c" translate="yes" xml:space="preserve">
          <source>Reading bytes from a TCP stream in non-blocking mode:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fe80c1137a37a9596d952d0a3f073335a7f2eeb" translate="yes" xml:space="preserve">
          <source>Reading from constants (but not statics, not even taking a reference to a static)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0270a4c946dd084a5aaed424a453fa759b340c50" translate="yes" xml:space="preserve">
          <source>Reading or writing a &lt;a href=&quot;items/static-items#mutable-statics&quot;&gt;mutable&lt;/a&gt; or &lt;a href=&quot;items/external-blocks&quot;&gt;external&lt;/a&gt; static variable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac1280060c42c89ba134cee6e95b4b2512121a2d" translate="yes" xml:space="preserve">
          <source>Reading the Argument Values</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a052a73ed266f81425a017e24109bab4ce532e21" translate="yes" xml:space="preserve">
          <source>Reading the Request</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5bb0e32af5e3bcad9584d6acb365c92080f523c6" translate="yes" xml:space="preserve">
          <source>Reads a number of bytes starting from a given offset.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f3f73fcc5e4b52be73e21769cc49bfb0022e83c" translate="yes" xml:space="preserve">
          <source>Reads a number of bytes starting from a given offset. &lt;a href=&quot;../os/unix/fs/trait.fileext#tymethod.read_at&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="863287e0153959647b6159c7cc0d60fc57215f32" translate="yes" xml:space="preserve">
          <source>Reads a symbolic link, returning the file that the link points to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae95595e12456e9d0551fde28cdd2c503fe27a40" translate="yes" xml:space="preserve">
          <source>Reads of &lt;a href=&quot;http://llvm.org/docs/LangRef.html#undefined-values&quot;&gt;undef&lt;/a&gt; (uninitialized) memory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a38e8f6338acbcae10b2688ccde1f86f7e64e1c" translate="yes" xml:space="preserve">
          <source>Reads the exact number of byte required to fill &lt;code&gt;buf&lt;/code&gt; from the given offset.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9f6a919695ef1a49fc66f4a33dd2f78aa4a416e" translate="yes" xml:space="preserve">
          <source>Reads the exact number of byte required to fill &lt;code&gt;buf&lt;/code&gt; from the given offset. &lt;a href=&quot;../os/unix/fs/trait.fileext#method.read_exact_at&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c91d9e66cbec17ab94398d403c50b74a6cddad5" translate="yes" xml:space="preserve">
          <source>Reads the value from &lt;code&gt;self&lt;/code&gt; without moving it. This leaves the memory in &lt;code&gt;self&lt;/code&gt; unchanged.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e87ac687a6bd1c395a908a13c802e2a17e60a371" translate="yes" xml:space="preserve">
          <source>Reads the value from &lt;code&gt;src&lt;/code&gt; without moving it. This leaves the memory in &lt;code&gt;src&lt;/code&gt; unchanged.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3652653fdf8370b023ed38100155cebb22f90ae" translate="yes" xml:space="preserve">
          <source>Reads the value from the &lt;code&gt;MaybeUninit&amp;lt;T&amp;gt;&lt;/code&gt; container. The resulting &lt;code&gt;T&lt;/code&gt; is subject to the usual drop handling.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa20c41a1c175af6fbd641d570028c7ec56b181b" translate="yes" xml:space="preserve">
          <source>Ready? Here is Listing 20-15 with one way to make the preceding modifications.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7069b64e4f8cf07b289d967e74520bde92fb11d4" translate="yes" xml:space="preserve">
          <source>Reallocate memory with the global allocator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5cca1600aafaa538d332e9c1d3ff6f3fd65dd5b6" translate="yes" xml:space="preserve">
          <source>Reallocates a block previously suitable for holding &lt;code&gt;n_old&lt;/code&gt; instances of &lt;code&gt;T&lt;/code&gt;, returning a block suitable for holding &lt;code&gt;n_new&lt;/code&gt; instances of &lt;code&gt;T&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b74c1ac0065db295c0989c0ba9724c0c9203bf6a" translate="yes" xml:space="preserve">
          <source>Reallocates a block previously suitable for holding &lt;code&gt;n_old&lt;/code&gt; instances of &lt;code&gt;T&lt;/code&gt;, returning a block suitable for holding &lt;code&gt;n_new&lt;/code&gt; instances of &lt;code&gt;T&lt;/code&gt;. &lt;a href=&quot;trait.alloc#method.realloc_array&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c179ab340fb50fe882179514202424206560057" translate="yes" xml:space="preserve">
          <source>Rebinding the target name as a new local name, using the syntax &lt;code&gt;use p::q::r as x;&lt;/code&gt;. This can also be used with the last two features: &lt;code&gt;use a::b::{self as ab, c as abc}&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e2b44250efec8da5de3e35956a3dd7c4973ef62" translate="yes" xml:space="preserve">
          <source>Recall from &lt;a href=&quot;ch02-00-guessing-game-tutorial#handling-potential-failure-with-the-result-type&quot;&gt;&amp;ldquo;Handling Potential Failure with the &lt;code&gt;Result&lt;/code&gt; Type&amp;rdquo;&lt;/a&gt; in Chapter 2 that the &lt;code&gt;Result&lt;/code&gt; enum is defined as having two variants, &lt;code&gt;Ok&lt;/code&gt; and &lt;code&gt;Err&lt;/code&gt;, as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dabe5ae865d38ebdd27f57682c5d8349e00cf3b9" translate="yes" xml:space="preserve">
          <source>Recall from &lt;a href=&quot;ch04-03-slices#the-slice-type&quot;&gt;&amp;ldquo;The Slice Type&amp;rdquo;&lt;/a&gt; section in Chapter 4 that slices are a pointer to some data and the length of the slice. We use the &lt;code&gt;len&lt;/code&gt; method to get the length of a slice and the &lt;code&gt;as_mut_ptr&lt;/code&gt; method to access the raw pointer of a slice. In this case, because we have a mutable slice to &lt;code&gt;i32&lt;/code&gt; values, &lt;code&gt;as_mut_ptr&lt;/code&gt; returns a raw pointer with the type &lt;code&gt;*mut i32&lt;/code&gt;, which we&amp;rsquo;ve stored in the variable &lt;code&gt;ptr&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4a7235fe16dd925ce00768ca56d78d637f75a6b" translate="yes" xml:space="preserve">
          <source>Recall from the borrowing rules that if we have an immutable reference to something, we cannot also take a mutable reference. Because &lt;code&gt;clear&lt;/code&gt; needs to truncate the &lt;code&gt;String&lt;/code&gt;, it needs to get a mutable reference. Rust disallows this, and compilation fails. Not only has Rust made our API easier to use, but it has also eliminated an entire class of errors at compile time!</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa605e9c412c4cb8e240f96a9d96f9754cc1f874" translate="yes" xml:space="preserve">
          <source>Recall in the &lt;a href=&quot;ch10-01-syntax#performance-of-code-using-generics&quot;&gt;&amp;ldquo;Performance of Code Using Generics&amp;rdquo;&lt;/a&gt; section in Chapter 10 our discussion on the monomorphization process performed by the compiler when we use trait bounds on generics: the compiler generates nongeneric implementations of functions and methods for each concrete type that we use in place of a generic type parameter. The code that results from monomorphization is doing &lt;em&gt;static dispatch&lt;/em&gt;, which is when the compiler knows what method you&amp;rsquo;re calling at compile time. This is opposed to &lt;em&gt;dynamic dispatch&lt;/em&gt;, which is when the compiler can&amp;rsquo;t tell at compile time which method you&amp;rsquo;re calling. In dynamic dispatch cases, the compiler emits code that at runtime will figure out which method to call.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6725c78944b5fa42cef3207e313ad8d7d4ba064" translate="yes" xml:space="preserve">
          <source>Recall that the purpose of the &lt;code&gt;search&lt;/code&gt; function is to return all lines in &lt;code&gt;contents&lt;/code&gt; that contain the &lt;code&gt;query&lt;/code&gt;. Similar to the &lt;code&gt;filter&lt;/code&gt; example in Listing 13-19, this code uses the &lt;code&gt;filter&lt;/code&gt; adaptor to keep only the lines that &lt;code&gt;line.contains(query)&lt;/code&gt; returns &lt;code&gt;true&lt;/code&gt; for. We then collect the matching lines into another vector with &lt;code&gt;collect&lt;/code&gt;. Much simpler! Feel free to make the same change to use iterator methods in the &lt;code&gt;search_case_insensitive&lt;/code&gt; function as well.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1e6d46d382c6fe231c1d0724bd1e41b60b18246" translate="yes" xml:space="preserve">
          <source>Recall that we can create raw pointers in safe code, but we can&amp;rsquo;t &lt;em&gt;dereference&lt;/em&gt; raw pointers and read the data being pointed to. In Listing 19-3, we use the dereference operator &lt;code&gt;*&lt;/code&gt; on a raw pointer that requires an &lt;code&gt;unsafe&lt;/code&gt; block.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="728f54bae3d71dea0e3a37331faf704744639b5e" translate="yes" xml:space="preserve">
          <source>Recall that we included the input/output functionality from the standard library with &lt;code&gt;use std::io;&lt;/code&gt; on the first line of the program. Now we&amp;rsquo;ll call the &lt;code&gt;stdin&lt;/code&gt; function from the &lt;code&gt;io&lt;/code&gt; module:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2cdc0bf5bca1efab9cc667d9dceb388612fa3da9" translate="yes" xml:space="preserve">
          <source>Recall that we talked about string literals being stored inside the binary. Now that we know about slices, we can properly understand string literals:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8056707fd6990a08b5daea23e861a435fd37a039" translate="yes" xml:space="preserve">
          <source>Recall that when we generated the new &lt;code&gt;adder&lt;/code&gt; project in the first section of this chapter, Cargo generated this code for us:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70d56f7319d84e74a3ef19745d17cc45bd430b27" translate="yes" xml:space="preserve">
          <source>Recall the &lt;code&gt;Message&lt;/code&gt; enum we defined in Listing 6-2 when we discussed enum definitions in Chapter 6:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8599ec7e3d16c35368bf8bb986afb37f099874c" translate="yes" xml:space="preserve">
          <source>Recall the thread-safe smart pointers discussed in Chapter 16: to share ownership across multiple threads and allow the threads to mutate the value, we need to use &lt;code&gt;Arc&amp;lt;Mutex&amp;lt;T&amp;gt;&amp;gt;&lt;/code&gt;. The &lt;code&gt;Arc&lt;/code&gt; type will let multiple workers own the receiver, and &lt;code&gt;Mutex&lt;/code&gt; will ensure that only one worker gets a job from the receiver at a time. Listing 20-18 shows the changes we need to make.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8434c52b54f0df88fc7f845d21a20f6a6d5ff880" translate="yes" xml:space="preserve">
          <source>Receiver</source>
          <target state="translated">Receiver</target>
        </trans-unit>
        <trans-unit id="893674f58a7593567351027cf33c94c892d0284d" translate="yes" xml:space="preserve">
          <source>Receives a single datagram message on the socket from the remote address to which it is connected. On success, returns the number of bytes read.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d922eca171fd309bc13b3aab3daf4110a3531c5f" translate="yes" xml:space="preserve">
          <source>Receives a single datagram message on the socket, without removing it from the queue. On success, returns the number of bytes read and the origin.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4922aedba0a4e797aceb736d97040616a477cdaa" translate="yes" xml:space="preserve">
          <source>Receives a single datagram message on the socket. On success, returns the number of bytes read and the origin.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c66700bf80292995de67bf851d042bb12d9a29c7" translate="yes" xml:space="preserve">
          <source>Receives data from the socket.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1b8c1411ba0b99035f9f1674a5264f1a9ac96ee" translate="yes" xml:space="preserve">
          <source>Receives data on the socket from the remote address to which it is connected, without removing that data from the queue. On success, returns the number of bytes peeked.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62b1e1ebe789ec27ec59463d1892a51d533a3262" translate="yes" xml:space="preserve">
          <source>Receives single datagram on the socket from the remote address to which it is connected, without removing the message from input queue. On success, returns the number of bytes peeked.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0cd162189acef9a5f49ef33602da42fae61d443" translate="yes" xml:space="preserve">
          <source>Receiving an error upon reaching deadline:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fca11f70e2a9d0225e162c0a68aa93d0c423f024" translate="yes" xml:space="preserve">
          <source>Receiving an error upon reaching timeout:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="748db2084a5b5d673de56c18d266865f8a8485d6" translate="yes" xml:space="preserve">
          <source>Recoverable Errors with &lt;code id=&quot;recoverable-errors-with-result&quot;&gt;Result&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="007e914132011b42637012b9ce4492137e081ee4" translate="yes" xml:space="preserve">
          <source>Recreate a &lt;code&gt;Box&lt;/code&gt; which was previously converted to a raw pointer using &lt;a href=&quot;struct.box#method.into_raw&quot;&gt;&lt;code&gt;Box::into_raw&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72d20ffa5a336ca9bbe78dbe6197e2690761ca4a" translate="yes" xml:space="preserve">
          <source>Recursive structures must be boxed, because if the definition of &lt;code&gt;Cons&lt;/code&gt; looked like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6cfce22c00d0c64566ae852aeca29a5736f4a1f6" translate="yes" xml:space="preserve">
          <source>Recursive type definitions can cross module boundaries, but not module &lt;em&gt;visibility&lt;/em&gt; boundaries, or crate boundaries (in order to simplify the module system and type checker).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2fc507acee73e921f2090a5da067618858259860" translate="yes" xml:space="preserve">
          <source>Recursive types</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77d8a06bec1eed669a14750f6d5fd3a53be2c297" translate="yes" xml:space="preserve">
          <source>Recursive types must include a nominal type in the recursion (not mere &lt;a href=&quot;items/type-aliases&quot;&gt;type aliases&lt;/a&gt;, or other structural types such as &lt;a href=&quot;types/array&quot;&gt;arrays&lt;/a&gt; or &lt;a href=&quot;types/tuple&quot;&gt;tuples&lt;/a&gt;). So &lt;code&gt;type Rec = &amp;amp;'static [Rec]&lt;/code&gt; is not allowed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f596307d64ec4aaab8355bb59cc3fce7f7c0e570" translate="yes" xml:space="preserve">
          <source>Recursively create a directory and all of its parent components if they are missing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="293498c2d44c441e3886ae4082c660d64bcefd98" translate="yes" xml:space="preserve">
          <source>Recursively running the destructor of all of its fields.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d34a53d2b73b3c4d90f012c97837f353382de44d" translate="yes" xml:space="preserve">
          <source>RecvError</source>
          <target state="translated">RecvError</target>
        </trans-unit>
        <trans-unit id="95d37f622bdbf43e67a0f713d14de7100482d627" translate="yes" xml:space="preserve">
          <source>RecvTimeoutError</source>
          <target state="translated">RecvTimeoutError</target>
        </trans-unit>
        <trans-unit id="c89dd33c646c40bdf00223afeac7bcdb65160463" translate="yes" xml:space="preserve">
          <source>Ref</source>
          <target state="translated">Ref</target>
        </trans-unit>
        <trans-unit id="ae6dd4a1ebc18cb485d881c8bf2b4f15d27cb7e7" translate="yes" xml:space="preserve">
          <source>Ref::borrow</source>
          <target state="translated">Ref::borrow</target>
        </trans-unit>
        <trans-unit id="59dcfd8528aeb28747dda5e9d7d9aa42d02d2ffd" translate="yes" xml:space="preserve">
          <source>Ref::borrow_mut</source>
          <target state="translated">Ref::borrow_mut</target>
        </trans-unit>
        <trans-unit id="8495712904b74d241d2ca8d7f7d7c586af139091" translate="yes" xml:space="preserve">
          <source>Ref::clone</source>
          <target state="translated">Ref::clone</target>
        </trans-unit>
        <trans-unit id="657e4be0d8f30d0fac524d0ea19f5065a9cc9fe9" translate="yes" xml:space="preserve">
          <source>Ref::deref</source>
          <target state="translated">Ref::deref</target>
        </trans-unit>
        <trans-unit id="a461904516044af6a711e3c77ed49bdd9fc65dfc" translate="yes" xml:space="preserve">
          <source>Ref::fmt</source>
          <target state="translated">Ref::fmt</target>
        </trans-unit>
        <trans-unit id="d43093f106fc18dfc827d3f4bc5b7fc2b7addb1e" translate="yes" xml:space="preserve">
          <source>Ref::from</source>
          <target state="translated">Ref::from</target>
        </trans-unit>
        <trans-unit id="09d1336c6c73eb350f1b8ca48ae21dbc3c7b316b" translate="yes" xml:space="preserve">
          <source>Ref::into</source>
          <target state="translated">Ref::into</target>
        </trans-unit>
        <trans-unit id="4f283b52f6beda0ef1fc1faa98d195a3c894846b" translate="yes" xml:space="preserve">
          <source>Ref::map</source>
          <target state="translated">Ref::map</target>
        </trans-unit>
        <trans-unit id="40094d2323463912175db6c4c1b5c4fc1b661eb5" translate="yes" xml:space="preserve">
          <source>Ref::map_split</source>
          <target state="translated">Ref::map_split</target>
        </trans-unit>
        <trans-unit id="ffb34fc425f9a8736734a5d2bbffa489ef0bfc79" translate="yes" xml:space="preserve">
          <source>Ref::to_string</source>
          <target state="translated">Ref::to_string</target>
        </trans-unit>
        <trans-unit id="2dbde3675368070cd1f5a4bd99c75cb490d0c80d" translate="yes" xml:space="preserve">
          <source>Ref::try_from</source>
          <target state="translated">Ref::try_from</target>
        </trans-unit>
        <trans-unit id="3431b979676e3e8f37de04b14b8c68d8a218f4c9" translate="yes" xml:space="preserve">
          <source>Ref::try_into</source>
          <target state="translated">Ref::try_into</target>
        </trans-unit>
        <trans-unit id="df50d884b2cb0ab88701b1d563b8b3b3690f42a9" translate="yes" xml:space="preserve">
          <source>Ref::type_id</source>
          <target state="translated">Ref::type_id</target>
        </trans-unit>
        <trans-unit id="1e8d85e281abdda394f93aee68bc2af2fa8380bd" translate="yes" xml:space="preserve">
          <source>RefCell</source>
          <target state="translated">RefCell</target>
        </trans-unit>
        <trans-unit id="505b4c2484a44e1a5e0ee37ac4c2bcf2bd8fd19c" translate="yes" xml:space="preserve">
          <source>RefCell::as_ptr</source>
          <target state="translated">RefCell::as_ptr</target>
        </trans-unit>
        <trans-unit id="62a812f1f18838908d6afee0ea499ade301643fb" translate="yes" xml:space="preserve">
          <source>RefCell::borrow</source>
          <target state="translated">RefCell::borrow</target>
        </trans-unit>
        <trans-unit id="1316b4aa37afb535dfdd7b04030e6418ea1f6a7d" translate="yes" xml:space="preserve">
          <source>RefCell::borrow_mut</source>
          <target state="translated">RefCell::borrow_mut</target>
        </trans-unit>
        <trans-unit id="e87d9ef83bdb8d9ed0a0d1c36f3b1bcf8a84d8aa" translate="yes" xml:space="preserve">
          <source>RefCell::clamp</source>
          <target state="translated">RefCell::clamp</target>
        </trans-unit>
        <trans-unit id="418b309a2204e2da66f491cd060301166d629798" translate="yes" xml:space="preserve">
          <source>RefCell::clone</source>
          <target state="translated">RefCell::clone</target>
        </trans-unit>
        <trans-unit id="edb0e001eca01f3d3f149d949e9749040a6a4808" translate="yes" xml:space="preserve">
          <source>RefCell::clone_from</source>
          <target state="translated">RefCell::clone_from</target>
        </trans-unit>
        <trans-unit id="b1b722cfe66777ee21e6d1fb910eac396ac337fb" translate="yes" xml:space="preserve">
          <source>RefCell::clone_into</source>
          <target state="translated">RefCell::clone_into</target>
        </trans-unit>
        <trans-unit id="d22c521cb0bdfd15b87f30bc2784b6d17b8ca4b2" translate="yes" xml:space="preserve">
          <source>RefCell::cmp</source>
          <target state="translated">RefCell::cmp</target>
        </trans-unit>
        <trans-unit id="9c8e6ef37aab69ec4c1dfcbeeb3ef2b05f8dfb58" translate="yes" xml:space="preserve">
          <source>RefCell::default</source>
          <target state="translated">RefCell::default</target>
        </trans-unit>
        <trans-unit id="48be338181152032ca0b883b7574e5d074ea7839" translate="yes" xml:space="preserve">
          <source>RefCell::eq</source>
          <target state="translated">RefCell::eq</target>
        </trans-unit>
        <trans-unit id="3355bb2c796e559e0a3e27335637f627a54a07c9" translate="yes" xml:space="preserve">
          <source>RefCell::fmt</source>
          <target state="translated">RefCell::fmt</target>
        </trans-unit>
        <trans-unit id="580005802d43ffb29217b6c9d242c5950b033cdf" translate="yes" xml:space="preserve">
          <source>RefCell::from</source>
          <target state="translated">RefCell::from</target>
        </trans-unit>
        <trans-unit id="dfe6e5c77278efd0a28109ccd313afadce54801e" translate="yes" xml:space="preserve">
          <source>RefCell::ge</source>
          <target state="translated">RefCell::ge</target>
        </trans-unit>
        <trans-unit id="5439700b9a7e4dcfa02b612614acfb868dd8325d" translate="yes" xml:space="preserve">
          <source>RefCell::get_mut</source>
          <target state="translated">RefCell::get_mut</target>
        </trans-unit>
        <trans-unit id="e4376837fb5c1360c6b274ad81b27501d89a6b4b" translate="yes" xml:space="preserve">
          <source>RefCell::gt</source>
          <target state="translated">RefCell::gt</target>
        </trans-unit>
        <trans-unit id="951d112e934301c3415f25e030e9eca061657900" translate="yes" xml:space="preserve">
          <source>RefCell::into</source>
          <target state="translated">RefCell::into</target>
        </trans-unit>
        <trans-unit id="1d5bb1d0ae7245e9c6baa4413451c608d54c57bc" translate="yes" xml:space="preserve">
          <source>RefCell::into_inner</source>
          <target state="translated">RefCell::into_inner</target>
        </trans-unit>
        <trans-unit id="7640c04c2e3bb01f85ff1604bcf4c6366f5550dc" translate="yes" xml:space="preserve">
          <source>RefCell::le</source>
          <target state="translated">RefCell::le</target>
        </trans-unit>
        <trans-unit id="1d27657fbb232b4aadd414a8aafba1065c65710b" translate="yes" xml:space="preserve">
          <source>RefCell::lt</source>
          <target state="translated">RefCell::lt</target>
        </trans-unit>
        <trans-unit id="fb760f634a1ac30f3570371233b307469df7b951" translate="yes" xml:space="preserve">
          <source>RefCell::max</source>
          <target state="translated">RefCell::max</target>
        </trans-unit>
        <trans-unit id="f2cceba2d242a0245f040957f2dc1d8a2a594bfc" translate="yes" xml:space="preserve">
          <source>RefCell::min</source>
          <target state="translated">RefCell::min</target>
        </trans-unit>
        <trans-unit id="cdf493d4f55937a587744c22d8e93f2d1487cdf6" translate="yes" xml:space="preserve">
          <source>RefCell::ne</source>
          <target state="translated">RefCell::ne</target>
        </trans-unit>
        <trans-unit id="1b13a8456252ae82be7b7ead198f8f170562e696" translate="yes" xml:space="preserve">
          <source>RefCell::new</source>
          <target state="translated">RefCell::new</target>
        </trans-unit>
        <trans-unit id="935b4f415854a7f4c772ebed8a8f95e3499b2cf8" translate="yes" xml:space="preserve">
          <source>RefCell::partial_cmp</source>
          <target state="translated">RefCell::partial_cmp</target>
        </trans-unit>
        <trans-unit id="af895c7553c09dcfb58e3be218b3b01037fa4266" translate="yes" xml:space="preserve">
          <source>RefCell::replace</source>
          <target state="translated">RefCell::replace</target>
        </trans-unit>
        <trans-unit id="34f8dca50510847d6139bdc2ef53441d2cdd8552" translate="yes" xml:space="preserve">
          <source>RefCell::replace_with</source>
          <target state="translated">RefCell::replace_with</target>
        </trans-unit>
        <trans-unit id="00a191512967ee10c691196113d0712bd746d0e6" translate="yes" xml:space="preserve">
          <source>RefCell::swap</source>
          <target state="translated">RefCell::swap</target>
        </trans-unit>
        <trans-unit id="9dfc6df11e517bb86371637c30ee992669919390" translate="yes" xml:space="preserve">
          <source>RefCell::to_owned</source>
          <target state="translated">RefCell::to_owned</target>
        </trans-unit>
        <trans-unit id="0fae1bb5843eec2309e58a28f1505b5c07604ff4" translate="yes" xml:space="preserve">
          <source>RefCell::try_borrow</source>
          <target state="translated">RefCell::try_borrow</target>
        </trans-unit>
        <trans-unit id="fc2b2c01d0c4e3dae9495389e333b45ea7f5a63c" translate="yes" xml:space="preserve">
          <source>RefCell::try_borrow_mut</source>
          <target state="translated">RefCell::try_borrow_mut</target>
        </trans-unit>
        <trans-unit id="beaa81db296eb8166eb0eb013a9cf4abf41c1115" translate="yes" xml:space="preserve">
          <source>RefCell::try_borrow_unguarded</source>
          <target state="translated">RefCell::try_borrow_unguarded</target>
        </trans-unit>
        <trans-unit id="7f9ce5f418fc1cd153432b6d2b8b5cfe53d63335" translate="yes" xml:space="preserve">
          <source>RefCell::try_from</source>
          <target state="translated">RefCell::try_from</target>
        </trans-unit>
        <trans-unit id="385580e40b3dc06a0dc45eb2fd1df689230b88cf" translate="yes" xml:space="preserve">
          <source>RefCell::try_into</source>
          <target state="translated">RefCell::try_into</target>
        </trans-unit>
        <trans-unit id="c61087deae3a634a9472d7cc03074b0ac932ef3b" translate="yes" xml:space="preserve">
          <source>RefCell::type_id</source>
          <target state="translated">RefCell::type_id</target>
        </trans-unit>
        <trans-unit id="4fa85168e6a7c8e1d1bc137b86cecdbf70aeb47f" translate="yes" xml:space="preserve">
          <source>RefMut</source>
          <target state="translated">RefMut</target>
        </trans-unit>
        <trans-unit id="f279854365ecc5e06566043f641c4eab06f46de9" translate="yes" xml:space="preserve">
          <source>RefMut::borrow</source>
          <target state="translated">RefMut::borrow</target>
        </trans-unit>
        <trans-unit id="ca3f8645458e3973eb93cae2a5d86d5be6e1dd39" translate="yes" xml:space="preserve">
          <source>RefMut::borrow_mut</source>
          <target state="translated">RefMut::borrow_mut</target>
        </trans-unit>
        <trans-unit id="68c95880b73d7fa75f043cbf6ce42487df31e8de" translate="yes" xml:space="preserve">
          <source>RefMut::deref</source>
          <target state="translated">RefMut::deref</target>
        </trans-unit>
        <trans-unit id="d2333acfdf95063f03b679e65b3f32b4b3b41605" translate="yes" xml:space="preserve">
          <source>RefMut::deref_mut</source>
          <target state="translated">RefMut::deref_mut</target>
        </trans-unit>
        <trans-unit id="5f2f9d10e02b5c99c9f5b255a8a991ceac714cdd" translate="yes" xml:space="preserve">
          <source>RefMut::fmt</source>
          <target state="translated">RefMut::fmt</target>
        </trans-unit>
        <trans-unit id="f7c4d621ae4fa4ec2a79395837b51d791aeb0dd7" translate="yes" xml:space="preserve">
          <source>RefMut::from</source>
          <target state="translated">RefMut::from</target>
        </trans-unit>
        <trans-unit id="6ecc7572888155336f41a73bb02c3d56a6b85094" translate="yes" xml:space="preserve">
          <source>RefMut::into</source>
          <target state="translated">RefMut::into</target>
        </trans-unit>
        <trans-unit id="c4912ff65bb2446226ebc9c5a3bdae5704b47995" translate="yes" xml:space="preserve">
          <source>RefMut::map</source>
          <target state="translated">RefMut::map</target>
        </trans-unit>
        <trans-unit id="3022c0ecfe0e90a0daf55c5945532baa492f43a3" translate="yes" xml:space="preserve">
          <source>RefMut::map_split</source>
          <target state="translated">RefMut::map_split</target>
        </trans-unit>
        <trans-unit id="dcafa9ed20f38472a8aafae8e0eca416e00d8958" translate="yes" xml:space="preserve">
          <source>RefMut::to_string</source>
          <target state="translated">RefMut::to_string</target>
        </trans-unit>
        <trans-unit id="aa75fb4fa88fed082c4278be2e18a19a3f123c0f" translate="yes" xml:space="preserve">
          <source>RefMut::try_from</source>
          <target state="translated">RefMut::try_from</target>
        </trans-unit>
        <trans-unit id="9e77e04874e35b778c58785d2a426d8ca3d83b9f" translate="yes" xml:space="preserve">
          <source>RefMut::try_into</source>
          <target state="translated">RefMut::try_into</target>
        </trans-unit>
        <trans-unit id="c4241558fd67c2108088359a199ff43c776582e6" translate="yes" xml:space="preserve">
          <source>RefMut::type_id</source>
          <target state="translated">RefMut::type_id</target>
        </trans-unit>
        <trans-unit id="7b53abe952691347dbedfd64d4ad2e21aa812fb2" translate="yes" xml:space="preserve">
          <source>RefUnwindSafe</source>
          <target state="translated">RefUnwindSafe</target>
        </trans-unit>
        <trans-unit id="5294ea48103afc195a68b47fa008f55a67285244" translate="yes" xml:space="preserve">
          <source>Refactor the code you just added or changed and make sure the tests continue to pass.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32108e8ecb882c7e91d50c15dc102e03b711366b" translate="yes" xml:space="preserve">
          <source>Refactoring Using Functions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d90ba592a90de6f045599abbb9eac0cc22bbdf9" translate="yes" xml:space="preserve">
          <source>Refactoring to Improve Modularity and Error Handling</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3348a77c52c86217379a7c61ae0d3899d165caa" translate="yes" xml:space="preserve">
          <source>Refactoring with Closures to Store Code</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53c9cee6bf06f4b720a0b505506ec6f1fa25871e" translate="yes" xml:space="preserve">
          <source>Refactoring with Structs: Adding More Meaning</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d5d2fb3e8970f535362d6f1ef1ed86879497383" translate="yes" xml:space="preserve">
          <source>Refactoring with Tuples</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec5a7e0fd2709071500f561f20d54b1cf02993cd" translate="yes" xml:space="preserve">
          <source>Refer to &lt;a href=&quot;../../book/ch15-03-drop&quot;&gt;the chapter on &lt;code&gt;Drop&lt;/code&gt; in &lt;em&gt;The Rust Programming Language&lt;/em&gt;&lt;/a&gt; for some more elaboration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebee384d5ab59d9238010eb11ee0774c2695a7e1" translate="yes" xml:space="preserve">
          <source>Refer to &lt;a href=&quot;https://github.com/rust-lang/rfcs/blob/master/text/0132-ufcs.md&quot;&gt;RFC 132&lt;/a&gt; for further details and motivations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5723c7ff2a05b60d65671ac84704221e5abc2479" translate="yes" xml:space="preserve">
          <source>Refer to the &lt;a href=&quot;ch04-03-slices#string-slices-as-parameters&quot;&gt;&amp;ldquo;String Slices as Parameters&amp;rdquo;&lt;/a&gt; section in Chapter 4 for more discussion about why the parameters we use in Listing 10-20 are the ones we want.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db1c784524e1b54011a95823026161f7c8517fe0" translate="yes" xml:space="preserve">
          <source>Reference</source>
          <target state="translated">Reference</target>
        </trans-unit>
        <trans-unit id="dab55b60dca25f20b796862053b994dcd35ee2f5" translate="yes" xml:space="preserve">
          <source>Reference Cycles Can Leak Memory</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fcdf9ff815a433b6e4b73e90ad9faeb5c9516044" translate="yes" xml:space="preserve">
          <source>Reference equality by address, instead of comparing the values pointed to, is accomplished via implicit reference-pointer coercion and raw pointer equality via &lt;a href=&quot;ptr/fn.eq&quot;&gt;&lt;code&gt;ptr::eq&lt;/code&gt;&lt;/a&gt;, while &lt;a href=&quot;cmp/trait.partialeq&quot;&gt;&lt;code&gt;PartialEq&lt;/code&gt;&lt;/a&gt; compares values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f16b46c7f2489e304d89aa5be46b8d7afc846291" translate="yes" xml:space="preserve">
          <source>Reference patterns</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8aaa421b28e63892f91dde72cfc848da3bc86c17" translate="yes" xml:space="preserve">
          <source>Reference patterns are always irrefutable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e07a8581f70aee7dffe1d96bca31f27175fc393f" translate="yes" xml:space="preserve">
          <source>Reference patterns dereference the pointers that are being matched and, thus, borrow them.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d20d0fee3b91643dd8d272ac33d01ca95179d82" translate="yes" xml:space="preserve">
          <source>References</source>
          <target state="translated">References</target>
        </trans-unit>
        <trans-unit id="9853b24ab6e99d1a4823850941ed9d0e1219cbe3" translate="yes" xml:space="preserve">
          <source>References and Borrowing</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69569f3897c090b2ed7327c80442cdc52f19c168" translate="yes" xml:space="preserve">
          <source>References have a lifetime attached to them, which represents the scope for which the borrow is valid. A lifetime is said to &quot;outlive&quot; another one if its representative scope is as long or longer than the other. The &lt;code&gt;'static&lt;/code&gt; lifetime is the longest lifetime, which represents the total life of the program. For example, string literals have a &lt;code&gt;'static&lt;/code&gt; lifetime because the text data is embedded into the binary of the program, rather than in an allocation that needs to be dynamically managed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="252a202b10b745ff25af1dc832a6be0bdd681085" translate="yes" xml:space="preserve">
          <source>References in statics and constants may only refer to immutable values. Erroneous code example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3720d258f1a60160f8cf21b8a55142622bce6e8" translate="yes" xml:space="preserve">
          <source>References must always be valid.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6219e83c36e7891f64719cbfb731860388855371" translate="yes" xml:space="preserve">
          <source>References, both shared and mutable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a3433e1fd13d86899e7b1de253f9ae911e1ac1a" translate="yes" xml:space="preserve">
          <source>Referring to an argument with the dollar syntax does not affect the &quot;next argument&quot; counter, so it's usually a good idea to refer to arguments by position, or use named arguments.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ece0bb210626bdfdd4639cd3165c239e255c896c" translate="yes" xml:space="preserve">
          <source>Refutability</source>
          <target state="translated">Refutability</target>
        </trans-unit>
        <trans-unit id="6010f8d798e4eecb7c5ea33e818a0c5e503603da" translate="yes" xml:space="preserve">
          <source>Refutability: Whether a Pattern Might Fail to Match</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f9937325e7509315c59a4fef01df9a4828d3d22" translate="yes" xml:space="preserve">
          <source>Regardless of what this method returns, ownership of the memory block referenced by &lt;code&gt;ptr&lt;/code&gt; has not been transferred, and the contents of the memory block are unaltered.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f5a4da0a68fe0429d659d2723f10975ca04e054" translate="yes" xml:space="preserve">
          <source>Regardless of your operating system, the string &lt;code&gt;Hello, world!&lt;/code&gt; should print to the terminal. If you don&amp;rsquo;t see this output, refer back to the &lt;a href=&quot;ch01-01-installation#troubleshooting&quot;&gt;&amp;ldquo;Troubleshooting&amp;rdquo;&lt;/a&gt; part of the Installation section for ways to get help.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6d64e2bccce60748b5fe03dbf67d6160db2b2e0" translate="yes" xml:space="preserve">
          <source>Registers a custom allocation error hook, replacing any that was previously registered.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb5f4d93955c482b2c36a91ac9a1a95deb296412" translate="yes" xml:space="preserve">
          <source>Registers a custom panic hook, replacing any that was previously registered.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d683947604fe1c5bf56cff07393a12390d3ed513" translate="yes" xml:space="preserve">
          <source>Regular structs are the most commonly used. Each field defined within them has a name and a type, and once defined can be accessed using &lt;code&gt;example_struct.field&lt;/code&gt; syntax. The fields of a struct share its mutability, so &lt;code&gt;foo.bar = 2;&lt;/code&gt; would only be valid if &lt;code&gt;foo&lt;/code&gt; was mutable. Adding &lt;code&gt;pub&lt;/code&gt; to a field makes it visible to code in other modules, as well as allowing it to be directly accessed and modified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7a4f051faf65254680f4079c54a8517fde96d07" translate="yes" xml:space="preserve">
          <source>Reinterprets the bits of a value of one type as another type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b13c3ff3e36c8646c9f630b31f754a28e7cd3aa6" translate="yes" xml:space="preserve">
          <source>Related macros</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7236970f9232116712d462fb14e487b3e80a0d1a" translate="yes" xml:space="preserve">
          <source>Release - a barrier for releasing a lock. Preceding reads and writes take place before the barrier.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53431f3ad82292d8589cbc4f971c6f0431b5276f" translate="yes" xml:space="preserve">
          <source>Release borrow before move.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63bad8b347b4755165af0fb962efbdc69b6bda54" translate="yes" xml:space="preserve">
          <source>Rem</source>
          <target state="translated">Rem</target>
        </trans-unit>
        <trans-unit id="0a4db5c8d38aff0a2853679b596092600a0ae19b" translate="yes" xml:space="preserve">
          <source>Rem::rem</source>
          <target state="translated">Rem::rem</target>
        </trans-unit>
        <trans-unit id="6ddca2f87d04b2a80ae6483e8e4febf6fb13af7d" translate="yes" xml:space="preserve">
          <source>RemAssign</source>
          <target state="translated">RemAssign</target>
        </trans-unit>
        <trans-unit id="31e8440bd24dbf3b4744da225e58958a2b476840" translate="yes" xml:space="preserve">
          <source>RemAssign::rem_assign</source>
          <target state="translated">RemAssign::rem_assign</target>
        </trans-unit>
        <trans-unit id="c20a1017faea096d3f06199fd35a9c0037bfb227" translate="yes" xml:space="preserve">
          <source>Remainder</source>
          <target state="translated">Remainder</target>
        </trans-unit>
        <trans-unit id="3abfbe6b4f511d3dea5d6431cdbf39c4e4729f0c" translate="yes" xml:space="preserve">
          <source>Remainder assignment</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1be69425bab38294482fd6c9a961434cfbc1e00" translate="yes" xml:space="preserve">
          <source>Remember that a crate is a collection of Rust source code files. The project we&amp;rsquo;ve been building is a &lt;em&gt;binary crate&lt;/em&gt;, which is an executable. The &lt;code&gt;rand&lt;/code&gt; crate is a &lt;em&gt;library crate&lt;/em&gt;, which contains code intended to be used in other programs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2a7262567b5ab9a75e7796c66ea4001e7364f73" translate="yes" xml:space="preserve">
          <source>Remember that blocks of code evaluate to the last expression in them, and numbers by themselves are also expressions. In this case, the value of the whole &lt;code&gt;if&lt;/code&gt; expression depends on which block of code executes. This means the values that have the potential to be results from each arm of the &lt;code&gt;if&lt;/code&gt; must be the same type; in Listing 3-2, the results of both the &lt;code&gt;if&lt;/code&gt; arm and the &lt;code&gt;else&lt;/code&gt; arm were &lt;code&gt;i32&lt;/code&gt; integers. If the types are mismatched, as in the following example, we&amp;rsquo;ll get an error:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13bff6540a604915955e887c3df6c5cf7dce46cd" translate="yes" xml:space="preserve">
          <source>Remember that strings are UTF-8 encoded, so we can include any properly encoded data in them, as shown in Listing 8-14.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df096f058e66383b66e43ab80b172663eedf1a7c" translate="yes" xml:space="preserve">
          <source>Remember that the first value in the return value of &lt;code&gt;env::args&lt;/code&gt; is the name of the program. We want to ignore that and get to the next value, so first we call &lt;code&gt;next&lt;/code&gt; and do nothing with the return value. Second, we call &lt;code&gt;next&lt;/code&gt; to get the value we want to put in the &lt;code&gt;query&lt;/code&gt; field of &lt;code&gt;Config&lt;/code&gt;. If &lt;code&gt;next&lt;/code&gt; returns a &lt;code&gt;Some&lt;/code&gt;, we use a &lt;code&gt;match&lt;/code&gt; to extract the value. If it returns &lt;code&gt;None&lt;/code&gt;, it means not enough arguments were given and we return early with an &lt;code&gt;Err&lt;/code&gt; value. We do the same thing for the &lt;code&gt;filename&lt;/code&gt; value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e15cc8b59bfac42e1a9c8d421b6603d5cbdf480" translate="yes" xml:space="preserve">
          <source>Remember this solution is unsafe! You will have to ensure that accesses to the cell are synchronized.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc7fd191216e8cc9e433938ec9f025101857bba2" translate="yes" xml:space="preserve">
          <source>Remember to stop the program by pressing ctrl-c when you&amp;rsquo;re done running a particular version of the code. Then restart &lt;code&gt;cargo run&lt;/code&gt; after you&amp;rsquo;ve made each set of code changes to make sure you&amp;rsquo;re running the newest code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd3b3dbf01c86fd8fe9076a1555c32cdb0933594" translate="yes" xml:space="preserve">
          <source>Remember, &lt;a href=&quot;../char/index&quot;&gt;&lt;code&gt;char&lt;/code&gt;&lt;/a&gt;s may not match your human intuition about characters:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c7648abc1e394f5383d51910a904b914def0fbc" translate="yes" xml:space="preserve">
          <source>Remember, &lt;a href=&quot;char/index&quot;&gt;&lt;code&gt;char&lt;/code&gt;&lt;/a&gt;s may not match your human intuition about characters:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e64127ffe6be164d9d8d034cb10e48a3c48eff64" translate="yes" xml:space="preserve">
          <source>Remember: you can't use a function call inside a const's initialization expression! However, you can totally use it anywhere else:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76d243e595fc804a0047898728bf95566f021ead" translate="yes" xml:space="preserve">
          <source>Removes a &lt;a href=&quot;../primitive.char&quot;&gt;&lt;code&gt;char&lt;/code&gt;&lt;/a&gt; from this &lt;code&gt;String&lt;/code&gt; at a byte position and returns it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9456d200736a4f7f6ca19767cc9aff812ff0da14" translate="yes" xml:space="preserve">
          <source>Removes a directory at this path, after removing all its contents. Use carefully!</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2154b6fbbe7ed8c872a44cd2732bd21137c2bc44" translate="yes" xml:space="preserve">
          <source>Removes a file from the filesystem.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2984f4cefe5e002ae98ccf151f25dd21e13ffb2f" translate="yes" xml:space="preserve">
          <source>Removes a key from the map, returning the stored key and value if the key was previously in the map.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e41c6b48eb8ad991a4cdc318420fd5a447a63f47" translate="yes" xml:space="preserve">
          <source>Removes a key from the map, returning the value at the key if the key was previously in the map.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c82bc88204eaff51b3602f51dec10746fc2c81e" translate="yes" xml:space="preserve">
          <source>Removes a value from the set. Returns whether the value was present in the set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd85db4ad95c943099e81fc67055c01a8b810427" translate="yes" xml:space="preserve">
          <source>Removes all but the first of consecutive elements in the vector satisfying a given equality relation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c92451da7b71dc64574b093dbf558b677e898c08" translate="yes" xml:space="preserve">
          <source>Removes all but the first of consecutive elements in the vector that resolve to the same key.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29bd8affd62aa3348852563dbe7f80c50e8f4fe1" translate="yes" xml:space="preserve">
          <source>Removes all elements from the &lt;code&gt;LinkedList&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="924d946ae082c27c4a8997a9765e09a279af0bb9" translate="yes" xml:space="preserve">
          <source>Removes an element from anywhere in the &lt;code&gt;VecDeque&lt;/code&gt; and returns it, replacing it with the first element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c33bf062ed229322b7434f0b81151dc7650e774" translate="yes" xml:space="preserve">
          <source>Removes an element from anywhere in the &lt;code&gt;VecDeque&lt;/code&gt; and returns it, replacing it with the last element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7009610fbbefe679a0736ec00724024d2f765772" translate="yes" xml:space="preserve">
          <source>Removes an element from the vector and returns it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a7f21c5d2bc51db50b4e29b6a2f8041ed8e6316" translate="yes" xml:space="preserve">
          <source>Removes an environment variable from the environment of the currently running process.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cdce8e247721f14eab2cd7c926aee57fdc3b514c" translate="yes" xml:space="preserve">
          <source>Removes an environment variable mapping.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d2396c70ced05a269886e4ccbe28568a0e6d957" translate="yes" xml:space="preserve">
          <source>Removes an existing, empty directory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71eb8019778fc46b67791ae6ceb10e93926ae281" translate="yes" xml:space="preserve">
          <source>Removes and returns an element from the end of the iterator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77b67ecfb59bcd37366f8a88c136fc9a79d1f654" translate="yes" xml:space="preserve">
          <source>Removes and returns an element from the end of the iterator. &lt;a href=&quot;../../iter/trait.doubleendediterator#tymethod.next_back&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a13ca048939a7a2f877472b124e4560b6fcb043" translate="yes" xml:space="preserve">
          <source>Removes and returns an element from the end of the iterator. &lt;a href=&quot;../iter/trait.doubleendediterator#tymethod.next_back&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9d5be9f4ab48e0f12a6e134e7067cba845f65a1" translate="yes" xml:space="preserve">
          <source>Removes and returns an element from the end of the iterator. &lt;a href=&quot;iter/trait.doubleendediterator#tymethod.next_back&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de089e7620fbb6e0344251ebdd4d65c9d34d0aff" translate="yes" xml:space="preserve">
          <source>Removes and returns an element from the end of the iterator. &lt;a href=&quot;trait.doubleendediterator#tymethod.next_back&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71500db3d64f324a722389f95a28e059368fd7c7" translate="yes" xml:space="preserve">
          <source>Removes and returns the element at &lt;code&gt;index&lt;/code&gt; from the &lt;code&gt;VecDeque&lt;/code&gt;. Whichever end is closer to the removal point will be moved to make room, and all the affected elements will be moved to new positions. Returns &lt;code&gt;None&lt;/code&gt; if &lt;code&gt;index&lt;/code&gt; is out of bounds.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="100e22591d4e437fc8ee7d6fb044d9bfa79809cb" translate="yes" xml:space="preserve">
          <source>Removes and returns the element at position &lt;code&gt;index&lt;/code&gt; within the vector, shifting all elements after it to the left.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a94bbdaa214533c35e65684f515b588f53cd1d06" translate="yes" xml:space="preserve">
          <source>Removes and returns the value in the set, if any, that is equal to the given one.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a509c18bcefdbfe5d042eb4ed2cd6333de0afb0c" translate="yes" xml:space="preserve">
          <source>Removes consecutive repeated elements in the vector according to the &lt;a href=&quot;../cmp/trait.partialeq&quot;&gt;&lt;code&gt;PartialEq&lt;/code&gt;&lt;/a&gt; trait implementation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="759524eef145af4e8c457b801f61c3b975e964d7" translate="yes" xml:space="preserve">
          <source>Removes the first element and returns it, or &lt;code&gt;None&lt;/code&gt; if the &lt;code&gt;VecDeque&lt;/code&gt; is empty.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8547c3304ee1ee9135cfaae338e0b933d30d25b" translate="yes" xml:space="preserve">
          <source>Removes the first element and returns it, or &lt;code&gt;None&lt;/code&gt; if the list is empty.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f66c84ba41049d112ec0e9e7f04c73243a8927c" translate="yes" xml:space="preserve">
          <source>Removes the first instance of &lt;code&gt;item&lt;/code&gt; from the vector if the item exists.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dcc797aab7f9c03f033b7b60de44f069d1d0542e" translate="yes" xml:space="preserve">
          <source>Removes the greatest item from the binary heap and returns it, or &lt;code&gt;None&lt;/code&gt; if it is empty.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebad829527c3b2fffe7ccc9999e9929b5778b412" translate="yes" xml:space="preserve">
          <source>Removes the last character from the string buffer and returns it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="232c1cec812af167930182dcac299ed58f945e5d" translate="yes" xml:space="preserve">
          <source>Removes the last element from a list and returns it, or &lt;code&gt;None&lt;/code&gt; if it is empty.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0df9d6fba0ee5b927e72dbb72348355f3b04bed" translate="yes" xml:space="preserve">
          <source>Removes the last element from a vector and returns it, or &lt;a href=&quot;../option/enum.option#variant.None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt; if it is empty.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8d3e78f3721af9c347fdff07fd16bbc2878282f" translate="yes" xml:space="preserve">
          <source>Removes the last element from the &lt;code&gt;VecDeque&lt;/code&gt; and returns it, or &lt;code&gt;None&lt;/code&gt; if it is empty.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d9e44c3bf98e4e76a2cb77dcc13026cd973c51e" translate="yes" xml:space="preserve">
          <source>Removes the peeked value from the heap and returns it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12ba56a3f06ad562090612b407ec9aea1c9c1064" translate="yes" xml:space="preserve">
          <source>Removes the specified range in the string, and replaces it with the given string. The given string doesn't need to be the same length as the range.</source>
          <target state="new"/>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
