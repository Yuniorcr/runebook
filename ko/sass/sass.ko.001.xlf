<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="sass">
    <body>
      <group id="sass">
        <trans-unit id="9f6278f535575365d6ae2446c75999acd141c0e5" translate="yes" xml:space="preserve">
          <source>!default</source>
          <target state="translated">!default</target>
        </trans-unit>
        <trans-unit id="6116fd83c5f82a4ce8e4ad557bad39b37d183075" translate="yes" xml:space="preserve">
          <source>!optional</source>
          <target state="translated">!optional</target>
        </trans-unit>
        <trans-unit id="141c5f6cf6af9e5586d387e1f222e769c87da083" translate="yes" xml:space="preserve">
          <source>#always_check-option &lt;code&gt;:always_check&lt;/code&gt; : Whether a Sass template should be checked for updates every time a controller is accessed, as opposed to only when the server starts. If a Sass template has been updated, it will be recompiled and will overwrite the corresponding CSS file. Defaults to false in production mode, true otherwise. Only has meaning within Rack, Ruby on Rails, or Merb.</source>
          <target state="translated"># always_check-option &lt;code&gt;:always_check&lt;/code&gt; : 서버가 시작될 때와 달리 컨트롤러에 액세스 할 때마다 Sass 템플릿의 업데이트를 확인해야하는지 여부입니다. Sass 템플릿이 업데이트 된 경우 다시 컴파일되고 해당 CSS 파일을 덮어 씁니다. 프로덕션 모드에서는 기본값이 false이고 그렇지 않으면 true입니다. Rack, Ruby on Rails 또는 Merb 내에서만 의미가 있습니다.</target>
        </trans-unit>
        <trans-unit id="6de5570f6ef43723ca3a057e19f33fa112691f02" translate="yes" xml:space="preserve">
          <source>#always_update-option &lt;code&gt;:always_update&lt;/code&gt; : Whether the CSS files should be updated every time a controller is accessed, as opposed to only when the template has been modified. Defaults to false. Only has meaning within Rack, Ruby on Rails, or Merb.</source>
          <target state="translated"># always_update-option &lt;code&gt;:always_update&lt;/code&gt; : 템플릿을 수정했을 때와 달리 컨트롤러에 액세스 할 때마다 CSS 파일을 업데이트 해야하는지 여부입니다. 기본값은 false입니다. Rack, Ruby on Rails 또는 Merb 내에서만 의미가 있습니다.</target>
        </trans-unit>
        <trans-unit id="0a92e53e68d9430d141f0949edf00ddc030929c0" translate="yes" xml:space="preserve">
          <source>#cache-option &lt;code&gt;:cache&lt;/code&gt; : Whether parsed Sass files should be cached, allowing greater speed. Defaults to true.</source>
          <target state="translated"># cache-option &lt;code&gt;:cache&lt;/code&gt; : 구문 분석 된 Sass 파일을 캐시 할지 여부를 지정하여 더 빠른 속도를 허용합니다. 기본값은 true입니다.</target>
        </trans-unit>
        <trans-unit id="96449c86b38d96310127d957ab001771b5822a03" translate="yes" xml:space="preserve">
          <source>#cache_location-option &lt;code&gt;:cache_location&lt;/code&gt; : The path where the cached &lt;code&gt;sassc&lt;/code&gt; files should be written to. Defaults to &lt;code&gt;&quot;./tmp/sass-cache&quot;&lt;/code&gt; in Rails and Merb, or &lt;code&gt;&quot;./.sass-cache&quot;&lt;/code&gt; otherwise. If the &lt;a href=&quot;#cache_location-option&quot;&gt;&lt;code&gt;:cache_store&lt;/code&gt; option&lt;/a&gt; is set, this is ignored.</source>
          <target state="translated"># cache_location-option &lt;code&gt;:cache_location&lt;/code&gt; &lt;code&gt;sassc&lt;/code&gt; : 캐시 된 sassc 파일을 쓸 경로 입니다. Rails and Merb의 기본값은 &lt;code&gt;&quot;./tmp/sass-cache&quot;&lt;/code&gt; 이고, 그렇지 않은 경우 &lt;code&gt;&quot;./.sass-cache&quot;&lt;/code&gt; 입니다. 는 IF &lt;a href=&quot;#cache_location-option&quot;&gt; &lt;code&gt;:cache_store&lt;/code&gt; 의 옵션이&lt;/a&gt; 설정이 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="cebc8d08a3dde224143e938654f2fe4911d26fd2" translate="yes" xml:space="preserve">
          <source>#cache_store-option &lt;code&gt;:cache_store&lt;/code&gt; : If this is set to an instance of a subclass of &lt;a href=&quot;http://sass-lang.com/documentation/Sass/CacheStores/Base.html&quot;&gt;Sass::CacheStores::Base&lt;/a&gt;, that cache store will be used to store and retrieve cached compilation results. Defaults to a &lt;a href=&quot;http://sass-lang.com/documentation/Sass/CacheStores/Filesystem.html&quot;&gt;Sass::CacheStores::Filesystem&lt;/a&gt; that is initialized using the &lt;a href=&quot;#cache_location-option&quot;&gt;&lt;code&gt;:cache_location&lt;/code&gt; option&lt;/a&gt;.</source>
          <target state="translated"># cache_store-option &lt;code&gt;:cache_store&lt;/code&gt; : 이것이 &lt;a href=&quot;http://sass-lang.com/documentation/Sass/CacheStores/Base.html&quot;&gt;Sass :: CacheStores :: Base&lt;/a&gt; 서브 클래스의 인스턴스로 설정된 경우 , 해당 캐시 저장소는 캐시 된 컴파일 결과를 저장하고 검색하는 데 사용됩니다. &lt;a href=&quot;#cache_location-option&quot;&gt; &lt;code&gt;:cache_location&lt;/code&gt; &lt;/a&gt; 옵션을 사용하여 초기화 된 &lt;a href=&quot;http://sass-lang.com/documentation/Sass/CacheStores/Filesystem.html&quot;&gt;Sass :: CacheStores :: Filesystem의&lt;/a&gt; 기본값 이 설정됩니다 .</target>
        </trans-unit>
        <trans-unit id="8553a0ce985fb3bb419f04ac3838b720df1d6db5" translate="yes" xml:space="preserve">
          <source>#css_location-option &lt;code&gt;:css_location&lt;/code&gt; : The path where CSS output should be written to. This option is ignored when &lt;code&gt;:template_location&lt;/code&gt; is a Hash. Defaults to &lt;code&gt;&quot;./public/stylesheets&quot;&lt;/code&gt;. Only has meaning within Rack, Ruby on Rails, or Merb.</source>
          <target state="translated"># css_location-option &lt;code&gt;:css_location&lt;/code&gt; : CSS 출력을 작성해야하는 경로입니다. &lt;code&gt;:template_location&lt;/code&gt; 이 해시 인 경우이 옵션은 무시됩니다 . 기본값은 &lt;code&gt;&quot;./public/stylesheets&quot;&lt;/code&gt; 입니다. Rack, Ruby on Rails 또는 Merb 내에서만 의미가 있습니다.</target>
        </trans-unit>
        <trans-unit id="1d88905503b9764a7e3efc0cca83ca78a90310f6" translate="yes" xml:space="preserve">
          <source>#custom-option &lt;code&gt;:custom&lt;/code&gt; : An option that's available for individual applications to set to make data available to &lt;a href=&quot;sass/script/functions&quot;&gt;custom Sass functions&lt;/a&gt;.</source>
          <target state="translated"># custom-option &lt;code&gt;:custom&lt;/code&gt; : 개별 애플리케이션에서 &lt;a href=&quot;sass/script/functions&quot;&gt;사용자 정의 Sass 기능에&lt;/a&gt; 데이터를 제공하도록 설정할 수있는 옵션입니다 .</target>
        </trans-unit>
        <trans-unit id="c168270c87ee1c2d0232794df74ecf578bbb5ec5" translate="yes" xml:space="preserve">
          <source>#debug_info-option &lt;code&gt;:debug_info&lt;/code&gt; : When set to true, causes the line number and file where a selector is defined to be emitted into the compiled CSS in a format that can be understood by the browser. Useful in conjunction with &lt;a href=&quot;https://addons.mozilla.org/en-US/firefox/addon/103988&quot;&gt;the FireSass Firebug extension&lt;/a&gt; for displaying the Sass filename and line number. Automatically disabled when using the &lt;code&gt;:compressed&lt;/code&gt; output style.</source>
          <target state="translated"># debug_info-option &lt;code&gt;:debug_info&lt;/code&gt; : true로 설정하면 선택기가 정의 된 행 번호와 파일이 브라우저에서 이해할 수있는 형식으로 컴파일 된 CSS로 방출됩니다. Sass 파일 이름 및 줄 번호를 표시하기 위해 &lt;a href=&quot;https://addons.mozilla.org/en-US/firefox/addon/103988&quot;&gt;FireSass Firebug 확장&lt;/a&gt; 과 함께 사용 하면 유용 합니다. &lt;code&gt;:compressed&lt;/code&gt; 출력 스타일을 사용할 때 자동으로 비활성화됩니다 .</target>
        </trans-unit>
        <trans-unit id="d15460d12b3e17b555dc5075e097ab929be4447b" translate="yes" xml:space="preserve">
          <source>#division-and-slash</source>
          <target state="translated">#division-and-slash</target>
        </trans-unit>
        <trans-unit id="233d126c1f91c71f6986c8eb8788b825e79151d3" translate="yes" xml:space="preserve">
          <source>#filename-option &lt;code&gt;:filename&lt;/code&gt; : The filename of the file being rendered. This is used solely for reporting errors, and is automatically set when using Rack, Rails, or Merb.</source>
          <target state="translated"># filename-option &lt;code&gt;:filename&lt;/code&gt; : 렌더링되는 파일의 파일 이름입니다. 이것은 오류보고에만 사용되며 랙, 레일 또는 Merb를 사용할 때 자동으로 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="2967d557baa920d640e2458c899b862bc0678414" translate="yes" xml:space="preserve">
          <source>#filesystem_importer-option &lt;code&gt;:filesystem_importer&lt;/code&gt; : A &lt;a href=&quot;http://sass-lang.com/documentation/Sass/Importers/Base.html&quot;&gt;Sass::Importers::Base&lt;/a&gt; subclass used to handle plain string load paths. This should import files from the filesystem. It should be a Class object inheriting from &lt;a href=&quot;http://sass-lang.com/documentation/Sass/Importers/Base.html&quot;&gt;Sass::Importers::Base&lt;/a&gt; with a constructor that takes a single string argument (the load path). Defaults to &lt;a href=&quot;http://sass-lang.com/documentation/Sass/Importers/Filesystem.html&quot;&gt;Sass::Importers::Filesystem&lt;/a&gt;.</source>
          <target state="translated"># filesystem_importer-option &lt;code&gt;:filesystem_importer&lt;/code&gt; : 일반 문자열로드 경로를 처리하는 데 사용되는 &lt;a href=&quot;http://sass-lang.com/documentation/Sass/Importers/Base.html&quot;&gt;Sass :: Importers :: Base&lt;/a&gt; 서브 클래스입니다. 파일 시스템에서 파일을 가져와야합니다. 단일 문자열 인수 (로드 경로)를 사용하는 생성자를 가진 &lt;a href=&quot;http://sass-lang.com/documentation/Sass/Importers/Base.html&quot;&gt;Sass :: Importers :: Base&lt;/a&gt; 에서 상속되는 Class 객체 여야합니다 . 기본값은 &lt;a href=&quot;http://sass-lang.com/documentation/Sass/Importers/Filesystem.html&quot;&gt;Sass :: Importers :: Filesystem&lt;/a&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="1ac422027191c7648b475ea43b06960ac13ba3c4" translate="yes" xml:space="preserve">
          <source>#full_exception-option &lt;code&gt;:full_exception&lt;/code&gt; : Whether an error in the Sass code should cause Sass to provide a detailed description within the generated CSS file. If set to true, the error will be displayed along with a line number and source snippet both as a comment in the CSS file and at the top of the page (in supported browsers). Otherwise, an exception will be raised in the Ruby code. Defaults to false in production mode, true otherwise.</source>
          <target state="translated"># full_exception-option &lt;code&gt;:full_exception&lt;/code&gt; : Sass 코드의 오류로 인해 Sass가 생성 된 CSS 파일 내에 자세한 설명을 제공 해야하는지 여부입니다. true로 설정하면 CSS 파일과 페이지 상단 (지원되는 브라우저에서)의 주석으로 줄 번호 및 소스 스 니펫과 함께 오류가 표시됩니다. 그렇지 않으면 루비 코드에서 예외가 발생합니다. 프로덕션 모드에서는 기본값이 false이고 그렇지 않으면 true입니다.</target>
        </trans-unit>
        <trans-unit id="3d5cc64e06e6ce421caa10dc2115676b1e9ea44f" translate="yes" xml:space="preserve">
          <source>#interpolation_</source>
          <target state="translated">#interpolation_</target>
        </trans-unit>
        <trans-unit id="684155f2e92f3b646c7de53eb5126babf1092f73" translate="yes" xml:space="preserve">
          <source>#line-option &lt;code&gt;:line&lt;/code&gt; : The number of the first line of the Sass template. Used for reporting line numbers for errors. This is useful to set if the Sass template is embedded in a Ruby file.</source>
          <target state="translated"># line-option &lt;code&gt;:line&lt;/code&gt; : Sass 템플릿의 첫 번째 줄 번호입니다. 오류의 줄 번호를보고하는 데 사용됩니다. Sass 템플릿이 Ruby 파일에 포함 된 경우 설정하는 데 유용합니다.</target>
        </trans-unit>
        <trans-unit id="7fcd20bfac67fd4158191ee3b71b2ce93362fa1f" translate="yes" xml:space="preserve">
          <source>#line_numbers-option &lt;code&gt;:line_numbers&lt;/code&gt; : When set to true, causes the line number and file where a selector is defined to be emitted into the compiled CSS as a comment. Useful for debugging, especially when using imports and mixins. This option may also be called &lt;code&gt;:line_comments&lt;/code&gt;. Automatically disabled when using the &lt;code&gt;:compressed&lt;/code&gt; output style or the &lt;code&gt;:debug_info&lt;/code&gt;/&lt;code&gt;:trace_selectors&lt;/code&gt; options.</source>
          <target state="translated"># line_numbers-option &lt;code&gt;:line_numbers&lt;/code&gt; : true로 설정하면 셀렉터가 정의 된 행 번호 및 파일이 주석으로 컴파일 된 CSS에 방출됩니다. 특히 임포트 및 믹스 인을 사용할 때 디버깅에 유용합니다. 이 옵션은 &lt;code&gt;:line_comments&lt;/code&gt; 라고도 합니다. &lt;code&gt;:compressed&lt;/code&gt; 출력 스타일 또는 &lt;code&gt;:debug_info&lt;/code&gt; / &lt;code&gt;:trace_selectors&lt;/code&gt; 옵션을 사용하면 자동으로 비활성화됩니다 .</target>
        </trans-unit>
        <trans-unit id="f9c9a4c169deb174a5436923f245df12dcb0d579" translate="yes" xml:space="preserve">
          <source>#load_paths-option &lt;code&gt;:load_paths&lt;/code&gt; : An array of filesystem paths or importers which should be searched for Sass templates imported with the &lt;a href=&quot;#import&quot;&gt;&lt;code&gt;@import&lt;/code&gt;&lt;/a&gt; directive. These may be strings, &lt;code&gt;Pathname&lt;/code&gt; objects, or subclasses of &lt;a href=&quot;http://sass-lang.com/documentation/Sass/Importers/Base.html&quot;&gt;Sass::Importers::Base&lt;/a&gt;. This defaults to the working directory and, in Rack, Rails, or Merb, whatever &lt;code&gt;:template_location&lt;/code&gt; is. The load path is also informed by &lt;a href=&quot;http://sass-lang.com/documentation/Sass.html#load_paths-class_method&quot;&gt;Sass.load_paths&lt;/a&gt; and the &lt;code&gt;SASS_PATH&lt;/code&gt; environment variable.</source>
          <target state="translated"># load_paths-option &lt;code&gt;:load_paths&lt;/code&gt; : &lt;a href=&quot;#import&quot;&gt; &lt;code&gt;@import&lt;/code&gt; &lt;/a&gt; 지시문으로 가져온 Sass 템플릿을 검색해야하는 파일 시스템 경로 또는 가져 오기 배열입니다 . 문자열, &lt;code&gt;Pathname&lt;/code&gt; 객체 또는 &lt;a href=&quot;http://sass-lang.com/documentation/Sass/Importers/Base.html&quot;&gt;Sass :: Importers :: Base의&lt;/a&gt; 서브 클래스 일 수 있습니다 . 기본 설정 은 &lt;code&gt;:template_location&lt;/code&gt; 이 무엇이든 작업 디렉토리 및 Rack, Rails 또는 Merb 입니다. &lt;a href=&quot;http://sass-lang.com/documentation/Sass.html#load_paths-class_method&quot;&gt;Sass.load_paths&lt;/a&gt; 및 &lt;code&gt;SASS_PATH&lt;/code&gt; 환경 변수 가로드 경로를 알려줍니다 .</target>
        </trans-unit>
        <trans-unit id="8992043141768d709b549d5249a9a18d9394da2c" translate="yes" xml:space="preserve">
          <source>#never_update-option &lt;code&gt;:never_update&lt;/code&gt; : Whether the CSS files should never be updated, even if the template file changes. Setting this to true may give small performance gains. It always defaults to false. Only has meaning within Rack, Ruby on Rails, or Merb.</source>
          <target state="translated"># never_update-option &lt;code&gt;:never_update&lt;/code&gt; : 템플릿 파일이 변경 되더라도 CSS 파일을 업데이트하지 않아야하는지 여부입니다. 이것을 true로 설정하면 성능이 약간 향상 될 수 있습니다. 항상 기본값은 false입니다. Rack, Ruby on Rails 또는 Merb 내에서만 의미가 있습니다.</target>
        </trans-unit>
        <trans-unit id="d6c66337267a87b1c4ed6b9fca9b0cda5799a358" translate="yes" xml:space="preserve">
          <source>#poll-option &lt;code&gt;:poll&lt;/code&gt; : When true, always use the polling backend for &lt;a href=&quot;http://sass-lang.com/documentation/Sass/Plugin/Compiler.html#watch-instance_method&quot;&gt;Sass::Plugin::Compiler#watch&lt;/a&gt; rather than the native filesystem backend.</source>
          <target state="translated"># poll-option &lt;code&gt;:poll&lt;/code&gt; : true 인 경우 항상 기본 파일 시스템 백엔드 대신 &lt;a href=&quot;http://sass-lang.com/documentation/Sass/Plugin/Compiler.html#watch-instance_method&quot;&gt;Sass :: Plugin :: Compiler # watch에&lt;/a&gt; 대한 폴링 백엔드를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="ee585d5eda346509bf46836bec08699193d3a1e2" translate="yes" xml:space="preserve">
          <source>#property_syntax-option &lt;code&gt;:property_syntax&lt;/code&gt; : Forces indented-syntax documents to use one syntax for properties. If the correct syntax isn't used, an error is thrown. &lt;code&gt;:new&lt;/code&gt; forces the use of a colon after the property name. For example: &lt;code&gt;color: #0f3&lt;/code&gt; or &lt;code&gt;width: $main_width&lt;/code&gt;. &lt;code&gt;:old&lt;/code&gt; forces the use of a colon before the property name. For example: &lt;code&gt;:color #0f3&lt;/code&gt; or &lt;code&gt;:width $main_width&lt;/code&gt;. By default, either syntax is valid. This has no effect on SCSS documents.</source>
          <target state="translated"># property_syntax-option &lt;code&gt;:property_syntax&lt;/code&gt; : 들여 쓰기 된 구문 문서가 속성에 대해 하나의 구문을 사용하도록합니다. 올바른 구문을 사용하지 않으면 오류가 발생합니다. &lt;code&gt;:new&lt;/code&gt; 는 속성 이름 뒤에 콜론을 사용하도록합니다. 예를 들면 다음과 같습니다 &lt;code&gt;color: #0f3&lt;/code&gt; 또는 &lt;code&gt;width: $main_width&lt;/code&gt; . &lt;code&gt;:old&lt;/code&gt; 는 속성 이름 앞에 콜론을 사용하도록합니다. 예를 들면 : &lt;code&gt;:color #0f3&lt;/code&gt; 또는 &lt;code&gt;:width $main_width&lt;/code&gt; 입니다. 기본적으로 두 구문 중 하나가 유효합니다. SCSS 문서에는 영향을 미치지 않습니다.</target>
        </trans-unit>
        <trans-unit id="cb5035eab7c9fa2b2eb85ae8f7a08c845134bfe9" translate="yes" xml:space="preserve">
          <source>#quiet-option &lt;code&gt;:quiet&lt;/code&gt; : When set to true, causes warnings to be disabled.</source>
          <target state="translated"># quiet-option &lt;code&gt;:quiet&lt;/code&gt; : true로 설정하면 경고가 비활성화됩니다.</target>
        </trans-unit>
        <trans-unit id="ae620e66b80bd00aa7f8e74e671c6335b559014e" translate="yes" xml:space="preserve">
          <source>#read_cache-option &lt;code&gt;:read_cache&lt;/code&gt; : If this is set and &lt;code&gt;:cache&lt;/code&gt; is not, only read the Sass cache if it exists, don't write to it if it doesn't.</source>
          <target state="translated"># read_cache-option &lt;code&gt;:read_cache&lt;/code&gt; : 이것이 설정되고 &lt;code&gt;:cache&lt;/code&gt; 가 설정 되지 않은 경우 Sass 캐시가 존재하는 경우에만 읽습니다. 그렇지 않은 경우에는 쓰지 마십시오.</target>
        </trans-unit>
        <trans-unit id="0fdf6d6e3af8c13933d2a757e38fd2716e9776b0" translate="yes" xml:space="preserve">
          <source>#sourcemap-option &lt;code&gt;:sourcemap&lt;/code&gt; : Controls how sourcemaps are generated. These sourcemaps tell the browser how to find the Sass styles that caused each CSS style to be generated. This has three valid values: &lt;strong&gt;&lt;code&gt;:auto&lt;/code&gt;** uses relative URIs where possible, assuming that that the source stylesheets will be made available on whatever server you're using, and that their relative location will be the same as it is on the local filesystem. If a relative URI is unavailable, a &quot;file:&quot; URI is used instead. **&lt;code&gt;:file&lt;/code&gt;** always uses &quot;file:&quot; URIs, which will work locally but can't be deployed to a remote server. **&lt;code&gt;:inline&lt;/code&gt;** includes the full source text in the sourcemap, which is maximally portable but can create very large sourcemap files. Finally, **&lt;code&gt;:none&lt;/code&gt;&lt;/strong&gt; causes no sourcemaps to be generated at all.</source>
          <target state="translated"># sourcemap-option &lt;code&gt;:sourcemap&lt;/code&gt; : 소스 맵 생성 방법을 제어합니다. 이 소스 맵은 각 CSS 스타일이 생성되게하는 Sass 스타일을 찾는 방법을 브라우저에 알려줍니다. 이 세 가지 유효 값이 &lt;strong&gt; &lt;code&gt;:auto&lt;/code&gt; ** 소스 스타일 시트가 사용중인 어떤 서버에서 사용할 수있게 될 것이라고 가정 가능한 상대 URI를 사용하고 로컬 파일 시스템에 그대로 상대적인 위치는 동일하게 나타날 것이라고는 . 상대 URI를 사용할 수 없으면 &quot;file :&quot;URI가 대신 사용됩니다. ** &lt;code&gt;:file&lt;/code&gt; **은 항상 &quot;file :&quot;URI를 사용합니다.이 URI는 로컬에서 작동하지만 원격 서버에는 배포 할 수 없습니다. ** &lt;code&gt;:inline&lt;/code&gt; **은 소스 맵에 전체 소스 텍스트를 포함하며, 이는 최대한 이식 가능하지만 매우 큰 소스 맵 파일을 생성 할 수 있습니다. 드디어,** &lt;code&gt;:none&lt;/code&gt; &lt;/strong&gt; 은 소스 맵을 전혀 생성하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="c5d25032e70476f124aabc345d095918193a6df3" translate="yes" xml:space="preserve">
          <source>#style-option &lt;code&gt;:style&lt;/code&gt; : Sets the style of the CSS output. See &lt;a href=&quot;#output_style&quot;&gt;Output Style&lt;/a&gt;.</source>
          <target state="translated"># style-option &lt;code&gt;:style&lt;/code&gt; : CSS 출력 스타일을 설정합니다. &lt;a href=&quot;#output_style&quot;&gt;출력 스타일을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="dbaf6c23633f779db75c33dcebe15c6e3993fea6" translate="yes" xml:space="preserve">
          <source>#subtraction</source>
          <target state="translated">#subtraction</target>
        </trans-unit>
        <trans-unit id="269503caa16ee2d7c0ff1ee9f85bb37e9b687c77" translate="yes" xml:space="preserve">
          <source>#syntax-option &lt;code&gt;:syntax&lt;/code&gt; : The syntax of the input file, &lt;code&gt;:sass&lt;/code&gt; for the indented syntax and &lt;code&gt;:scss&lt;/code&gt; for the CSS-extension syntax. This is only useful when you're constructing &lt;a href=&quot;http://sass-lang.com/documentation/Sass/Engine.html&quot;&gt;Sass::Engine&lt;/a&gt; instances yourself; it's automatically set properly when using &lt;a href=&quot;http://sass-lang.com/documentation/Sass/Plugin.html&quot;&gt;Sass::Plugin&lt;/a&gt;. Defaults to &lt;code&gt;:sass&lt;/code&gt;.</source>
          <target state="translated"># syntax-option &lt;code&gt;:syntax&lt;/code&gt; : 입력 파일의 구문 , 들여 쓰기 된 구문의 경우 &lt;code&gt;:sass&lt;/code&gt; , CSS-extension 구문의 경우 &lt;code&gt;:scss&lt;/code&gt; 이것은 &lt;a href=&quot;http://sass-lang.com/documentation/Sass/Engine.html&quot;&gt;Sass :: Engine&lt;/a&gt; 인스턴스를 직접 구성 할 때만 유용합니다 . &lt;a href=&quot;http://sass-lang.com/documentation/Sass/Plugin.html&quot;&gt;Sass :: Plugin을&lt;/a&gt; 사용할 때 자동으로 올바르게 설정됩니다 . 기본값은 &lt;code&gt;:sass&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="ff5aa8b0e797ba28399be350087dd6975fae32a3" translate="yes" xml:space="preserve">
          <source>#template_location-option &lt;code&gt;:template_location&lt;/code&gt; : A path to the root sass template directory for your application. If a hash, &lt;code&gt;:css_location&lt;/code&gt; is ignored and this option designates a mapping between input and output directories. May also be given a list of 2-element lists, instead of a hash. Defaults to &lt;code&gt;css_location + &quot;/sass&quot;&lt;/code&gt;. Only has meaning within Rack, Ruby on Rails, or Merb. Note that if multiple template locations are specified, all of them are placed in the import path, allowing you to import between them. &lt;strong&gt;Note that due to the many possible formats it can take, this option should only be set directly, not accessed or modified. Use the &lt;a href=&quot;http://sass-lang.com/documentation/Sass/Plugin/Configuration.html#template_location_array-instance_method&quot;&gt;Sass::Plugin#template_location_array&lt;/a&gt;, &lt;a href=&quot;http://sass-lang.com/documentation/Sass/Plugin/Configuration.html#add_template_location-instance_method&quot;&gt;Sass::Plugin#add_template_location&lt;/a&gt;, and &lt;a href=&quot;http://sass-lang.com/documentation/Sass/Plugin/Configuration.html#remove_template_location-instance_method&quot;&gt;Sass::Plugin#remove_template_location&lt;/a&gt; methods instead&lt;/strong&gt;.</source>
          <target state="translated"># template_location-option &lt;code&gt;:template_location&lt;/code&gt; : 응용 프로그램의 루트 sass 템플릿 디렉토리 경로입니다. 해시 인 경우 &lt;code&gt;:css_location&lt;/code&gt; 이 무시 되고이 옵션은 입력 및 출력 디렉토리 간의 매핑을 지정합니다. 해시 대신 2 요소 목록이 제공 될 수도 있습니다. 기본값은 &lt;code&gt;css_location + &quot;/sass&quot;&lt;/code&gt; 입니다. Rack, Ruby on Rails 또는 Merb 내에서만 의미가 있습니다. 템플릿 위치가 여러 개 지정된 경우 모든 템플릿 위치가 가져 오기 경로에 배치되므로 템플릿간에 가져올 수 있습니다. &lt;strong&gt;사용할 수있는 형식은 많기 때문에이 옵션은 직접 설정하거나 액세스하거나 수정하지 않아야합니다. 사용 &lt;a href=&quot;http://sass-lang.com/documentation/Sass/Plugin/Configuration.html#template_location_array-instance_method&quot;&gt;말대꾸 :: 플러그 번호의 template_location_array을&lt;/a&gt; , &lt;a href=&quot;http://sass-lang.com/documentation/Sass/Plugin/Configuration.html#add_template_location-instance_method&quot;&gt;말대꾸 :: 플러그 번호의 add_template_location&lt;/a&gt;및 &lt;a href=&quot;http://sass-lang.com/documentation/Sass/Plugin/Configuration.html#remove_template_location-instance_method&quot;&gt;말대꾸 :: 플러그 #의 remove_template_location의&lt;/a&gt; 대신 방법&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="d6fd77828774c07f57a00967cc8fa15a060d6fac" translate="yes" xml:space="preserve">
          <source>#trace_selectors-option &lt;code&gt;:trace_selectors&lt;/code&gt; : When set to true, emit a full trace of imports and mixins before each selector. This can be helpful for in-browser debugging of stylesheet imports and mixin includes. This option supersedes the &lt;code&gt;:line_comments&lt;/code&gt; option and is superseded by the &lt;code&gt;:debug_info&lt;/code&gt; option. Automatically disabled when using the &lt;code&gt;:compressed&lt;/code&gt; output style.</source>
          <target state="translated"># trace_selectors-option &lt;code&gt;:trace_selectors&lt;/code&gt; : true로 설정하면 각 선택기 전에 가져 오기 및 믹스 인의 전체 추적을 내 보냅니다 . 이는 스타일 시트 가져 오기 및 믹스 인 포함의 브라우저 내 디버깅에 도움이 될 수 있습니다. 이 옵션은 대체 &lt;code&gt;:line_comments&lt;/code&gt; 옵션을와로 대체됩니다 &lt;code&gt;:debug_info&lt;/code&gt; 옵션을 선택합니다. &lt;code&gt;:compressed&lt;/code&gt; 출력 스타일을 사용할 때 자동으로 비활성화됩니다 .</target>
        </trans-unit>
        <trans-unit id="71aacad0d2906c2c0488c409f2837f3a5aa9fc8d" translate="yes" xml:space="preserve">
          <source>#unix_newlines-option &lt;code&gt;:unix_newlines&lt;/code&gt; : If true, use Unix-style newlines when writing files. Only has meaning on Windows, and only when Sass is writing the files (in Rack, Rails, or Merb, when using &lt;a href=&quot;http://sass-lang.com/documentation/Sass/Plugin.html&quot;&gt;Sass::Plugin&lt;/a&gt; directly, or when using the command-line executable).</source>
          <target state="translated"># unix_newlines-option &lt;code&gt;:unix_newlines&lt;/code&gt; : true 인 경우 파일을 쓸 때 유닉스 스타일의 개행을 사용하십시오. Windows에서만, Sass가 파일을 쓰는 경우에만 (랙, 레일 또는 Merb, &lt;a href=&quot;http://sass-lang.com/documentation/Sass/Plugin.html&quot;&gt;Sass :: Plugin을&lt;/a&gt; 직접 사용하거나 명령 행 실행 파일을 사용하는 경우) 에만 의미가 있습니다.</target>
        </trans-unit>
        <trans-unit id="f37d5b2b8edbdb4f237f2eacb3f20c8966dc64ad" translate="yes" xml:space="preserve">
          <source>$alpha(Number)</source>
          <target state="translated">$alpha(Number)</target>
        </trans-unit>
        <trans-unit id="4d2412d42a769aac5124a82c3caf6c6cc4be9005" translate="yes" xml:space="preserve">
          <source>$alpha(Number) &amp;mdash; The adjustment to make on the alpha component, between -1 and 1 inclusive</source>
          <target state="translated">$ alpha (Number) &amp;mdash; 알파 구성 요소에서 -1과 1 사이의 조정입니다.</target>
        </trans-unit>
        <trans-unit id="e2e3a1f70a1472426d6407e0cd4015604b8fc122" translate="yes" xml:space="preserve">
          <source>$alpha(Number) &amp;mdash; The new alpha component for the color, within 0 and 1 inclusive</source>
          <target state="translated">$ alpha (Number) &amp;mdash; 0과 1을 포함하여 색상의 새로운 알파 구성 요소</target>
        </trans-unit>
        <trans-unit id="498a6889d7a32497cba8d107624eec4236bdd2be" translate="yes" xml:space="preserve">
          <source>$alpha(Number) &amp;mdash; The new opacity of the color. Must be between 0 and 1 inclusive</source>
          <target state="translated">$ alpha (Number) &amp;mdash; 색상의 새로운 불투명도입니다. 0과 1 사이 여야합니다.</target>
        </trans-unit>
        <trans-unit id="41c7a19b5fdd75c8955789523812ea7edb6dcc91" translate="yes" xml:space="preserve">
          <source>$alpha(Number) &amp;mdash; The opacity of the color. Must be between 0 and 1 inclusive</source>
          <target state="translated">$ alpha (Number) &amp;mdash; 색상의 불투명도입니다. 0과 1 사이 여야합니다.</target>
        </trans-unit>
        <trans-unit id="bea4ab0c6034d1493ad5fca08ec63de8e868527f" translate="yes" xml:space="preserve">
          <source>$alpha(Number) &amp;mdash; The opacity of the color. Must be between 0 and 1, inclusive</source>
          <target state="translated">$ alpha (Number) &amp;mdash; 색상의 불투명도입니다. 0에서 1 사이 여야합니다 (포함)</target>
        </trans-unit>
        <trans-unit id="bb52e8e3817a52dca24cd68f41362fdc8e344407" translate="yes" xml:space="preserve">
          <source>$amount(Number) &amp;mdash; The amount to decrease the lightness by, between 0% and 100%</source>
          <target state="translated">$ amount (Number) &amp;mdash; 0 %에서 100 % 사이로 밝기를 감소시키는 양</target>
        </trans-unit>
        <trans-unit id="0b0e738163b7c2b99a9d5f4be6e7bdd356202b14" translate="yes" xml:space="preserve">
          <source>$amount(Number) &amp;mdash; The amount to decrease the opacity by, between 0 and 1</source>
          <target state="translated">$ amount (Number) &amp;mdash; 불투명도를 0에서 1 사이로 감소시키는 양</target>
        </trans-unit>
        <trans-unit id="73e8003064bc746fdebdd78631c0d1c5ac695d4a" translate="yes" xml:space="preserve">
          <source>$amount(Number) &amp;mdash; The amount to decrease the saturation by, between 0% and 100%</source>
          <target state="translated">$ amount (Number) &amp;mdash; 채도를 0 %에서 100 % 사이로 줄입니다.</target>
        </trans-unit>
        <trans-unit id="1678bb8f277a0af777ad1eb366d0b0519af66939" translate="yes" xml:space="preserve">
          <source>$amount(Number) &amp;mdash; The amount to increase the lightness by, between 0% and 100%</source>
          <target state="translated">$ amount (Number) &amp;mdash; 0 %에서 100 % 사이로 밝기를 증가시키는 양</target>
        </trans-unit>
        <trans-unit id="2112feebcd371935a5f8a5e9b7cdfc9ff311946c" translate="yes" xml:space="preserve">
          <source>$amount(Number) &amp;mdash; The amount to increase the opacity by, between 0 and 1</source>
          <target state="translated">$ amount (Number) &amp;mdash; 불투명도를 0에서 1 사이로 증가시키는 양</target>
        </trans-unit>
        <trans-unit id="1ebd4a14d431639849162a9890ef3737bae97cdd" translate="yes" xml:space="preserve">
          <source>$amount(Number) &amp;mdash; The amount to increase the saturation by, between 0% and 100%</source>
          <target state="translated">$ amount (Number) &amp;mdash; 채도를 0 %에서 100 % 사이로 증가시키는 양</target>
        </trans-unit>
        <trans-unit id="60b25254e299df6793897a24dc0e7b4b55d0e655" translate="yes" xml:space="preserve">
          <source>$args(ArgList)</source>
          <target state="translated">$args(ArgList)</target>
        </trans-unit>
        <trans-unit id="024be0f6c0d3776afb36b2419bb456298a8f56d9" translate="yes" xml:space="preserve">
          <source>$blue(Number)</source>
          <target state="translated">$blue(Number)</target>
        </trans-unit>
        <trans-unit id="0114bb074a63c8181e56b5fc30af5b5c63cb259d" translate="yes" xml:space="preserve">
          <source>$blue(Number) &amp;mdash; The adjustment to make on the blue component, between -255 and 255 inclusive</source>
          <target state="translated">$ blue (Number) &amp;mdash; 파랑 구성 요소에 대한 조정으로 -255에서 255 사이입니다.</target>
        </trans-unit>
        <trans-unit id="44ae33eb52427bee57f7fcaec03ff51c77c2f313" translate="yes" xml:space="preserve">
          <source>$blue(Number) &amp;mdash; The amount of blue in the color. Must be between 0 and 255 inclusive or 0% and 100% inclusive</source>
          <target state="translated">$ blue (Number) &amp;mdash; 색상의 파랑 양입니다. 0에서 255 사이 또는 0 %에서 100 % 사이 여야합니다.</target>
        </trans-unit>
        <trans-unit id="14edfb88615bca4634a51a2c1c2c8107c3a697f6" translate="yes" xml:space="preserve">
          <source>$blue(Number) &amp;mdash; The amount of blue in the color. Must be between 0 and 255 inclusive, or between 0% and 100% inclusive</source>
          <target state="translated">$ blue (Number) &amp;mdash; 색상의 파랑 양입니다. 0에서 255 사이 또는 0 %에서 100 % 사이 여야합니다.</target>
        </trans-unit>
        <trans-unit id="082ffd2500a9d40b19e0bca2105d3ea572caae06" translate="yes" xml:space="preserve">
          <source>$blue(Number) &amp;mdash; The new blue component for the color, within 0 and 255 inclusive</source>
          <target state="translated">$ blue (Number) &amp;mdash; 0에서 255까지의 색상에 대한 새 파란색 구성 요소</target>
        </trans-unit>
        <trans-unit id="c87ea33099dabab9cf754daa742549f536f7b043" translate="yes" xml:space="preserve">
          <source>$bracketed(Base) &amp;mdash; Whether the resulting list will be bracketed. If this is auto (the default), the separator is determined as explained above.</source>
          <target state="translated">$ bracketed (Base) &amp;mdash; 결과 목록을 괄호로 묶을 지 여부입니다. 이것이 자동 (기본값)이면 구분 기호는 위에서 설명한대로 결정됩니다.</target>
        </trans-unit>
        <trans-unit id="bc5ceb76a4d4fddbda5ca36bff305294cf1a14da" translate="yes" xml:space="preserve">
          <source>$color(Color)</source>
          <target state="translated">$color(Color)</target>
        </trans-unit>
        <trans-unit id="eaf19dcb4db0318c388250ee606692d0749116b1" translate="yes" xml:space="preserve">
          <source>$color(Color) &amp;mdash; The color whose opacity will be changed.</source>
          <target state="translated">$ color (Color) &amp;mdash; 불투명도가 변경 될 색상입니다.</target>
        </trans-unit>
        <trans-unit id="51a39d43fde61f26e8b7babd823afde733c9c944" translate="yes" xml:space="preserve">
          <source>$color1(Color)</source>
          <target state="translated">$color1(Color)</target>
        </trans-unit>
        <trans-unit id="25baa0464e1e7e4ca9e04d7a9c7b75fe9a4ffdf0" translate="yes" xml:space="preserve">
          <source>$color2(Color)</source>
          <target state="translated">$color2(Color)</target>
        </trans-unit>
        <trans-unit id="ab99ee2657c3548adc7b8a1635ad3690071c2c86" translate="yes" xml:space="preserve">
          <source>$condition(Base) &amp;mdash; Whether the $if-true or $if-false will be returned</source>
          <target state="translated">$ condition (Base) &amp;mdash; $ if-true 또는 $ if-false가 반환되는지 여부</target>
        </trans-unit>
        <trans-unit id="366fac1d8f8b212b06e80df2ca307929360e4505" translate="yes" xml:space="preserve">
          <source>$degrees(Number) &amp;mdash; The number of degrees to rotate the hue</source>
          <target state="translated">$ degrees (Number) &amp;mdash; 색조를 회전 할 각도입니다.</target>
        </trans-unit>
        <trans-unit id="65eb780e7c2faa67cd8dfaf280bb60c0b869d3eb" translate="yes" xml:space="preserve">
          <source>$end-at(Number) &amp;mdash; The index of the last character of the substring. If this is negative, it counts from the end of $string. Defaults to -1</source>
          <target state="translated">$ end-at (Number) &amp;mdash; 부분 문자열의 마지막 문자의 인덱스입니다. 이 값이 음수이면 $ string 끝부터 계산됩니다. 기본값은 -1입니다.</target>
        </trans-unit>
        <trans-unit id="e9150635ec157a7b12d7ee33618c81b457705c65" translate="yes" xml:space="preserve">
          <source>$extendee(String, List) &amp;mdash; The selector being extended. This can be either a string, a list of strings, or a list of lists of strings as returned by &amp;amp;.</source>
          <target state="translated">$ extendee (String, List) &amp;mdash; 확장되는 선택기입니다. &amp;amp;로 리턴 된 문자열, 문자열 목록 또는 문자열 목록 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a948ab2ebed2a0954c6b5259d4a58a9bb80f4bdd" translate="yes" xml:space="preserve">
          <source>$extender(String, List) &amp;mdash; The selector being injected into $selector. This can be either a string, a list of strings, or a list of lists of strings as returned by &amp;amp;.</source>
          <target state="translated">$ extender (String, List) &amp;mdash; $ selector에 주입되는 선택기입니다. &amp;amp;로 리턴 된 문자열, 문자열 목록 또는 문자열 목록 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="11042ef8c2f816db0196d98e767fdee4a7243460" translate="yes" xml:space="preserve">
          <source>$feature(String) &amp;mdash; The name of the feature</source>
          <target state="translated">$ feature (String) &amp;mdash; 기능의 이름</target>
        </trans-unit>
        <trans-unit id="71b0659a8448f38ed067bac0170f24b0b12eb7de" translate="yes" xml:space="preserve">
          <source>$function(Function) &amp;mdash; The function to call.</source>
          <target state="translated">$ function (Function) &amp;mdash; 호출 할 함수입니다.</target>
        </trans-unit>
        <trans-unit id="8cbcf8013203dcd00aae121f77487eb430108192" translate="yes" xml:space="preserve">
          <source>$green(Number)</source>
          <target state="translated">$green(Number)</target>
        </trans-unit>
        <trans-unit id="505c79e9d3a4333b83af3ed782f3d3d4d212b8bf" translate="yes" xml:space="preserve">
          <source>$green(Number) &amp;mdash; The adjustment to make on the green component, between -255 and 255 inclusive</source>
          <target state="translated">$ green (Number) &amp;mdash; 녹색 구성 요소에 대한 조정으로 -255에서 255 사이입니다.</target>
        </trans-unit>
        <trans-unit id="d3b5d8297fdba65df3111fde84ebaacc9f6eda5b" translate="yes" xml:space="preserve">
          <source>$green(Number) &amp;mdash; The amount of green in the color. Must be between 0 and 255 inclusive or 0% and 100% inclusive</source>
          <target state="translated">$ green (Number) &amp;mdash; 색상의 녹색 양입니다. 0에서 255 사이 또는 0 %에서 100 % 사이 여야합니다.</target>
        </trans-unit>
        <trans-unit id="99b86fdaaef98e7c8c7e0f6f252b4581a0b90add" translate="yes" xml:space="preserve">
          <source>$green(Number) &amp;mdash; The amount of green in the color. Must be between 0 and 255 inclusive, or between 0% and 100% inclusive</source>
          <target state="translated">$ green (Number) &amp;mdash; 색상의 녹색 양입니다. 0에서 255 사이 또는 0 %에서 100 % 사이 여야합니다.</target>
        </trans-unit>
        <trans-unit id="5cf457660678f6560022cb06aca4d5db7149ab49" translate="yes" xml:space="preserve">
          <source>$green(Number) &amp;mdash; The new green component for the color, within 0 and 255 inclusive</source>
          <target state="translated">$ green (Number) &amp;mdash; 0에서 255 사이의 색상에 대한 새 녹색 구성 요소</target>
        </trans-unit>
        <trans-unit id="3601693c3505169da43a84db4c396682bfcf5d79" translate="yes" xml:space="preserve">
          <source>$hue(Number) &amp;mdash; The adjustment to make on the hue component, in degrees</source>
          <target state="translated">$ hue (Number) &amp;mdash; 색조 구성 요소에 대한 조정 (도)</target>
        </trans-unit>
        <trans-unit id="6a9ae64f50f4e8d0f647fd666a54ae4d4958847a" translate="yes" xml:space="preserve">
          <source>$hue(Number) &amp;mdash; The hue of the color. Should be between 0 and 360 degrees, inclusive</source>
          <target state="translated">$ hue (Number) &amp;mdash; 색상의 색조입니다. 0도에서 360도 사이 여야합니다.</target>
        </trans-unit>
        <trans-unit id="1ca447c39c7fe544b3dcec73f5f0fc3e0f0adf3c" translate="yes" xml:space="preserve">
          <source>$hue(Number) &amp;mdash; The new hue component for the color, in degrees</source>
          <target state="translated">$ hue (Number) &amp;mdash; 색상의 새 색조 구성 요소 (도)</target>
        </trans-unit>
        <trans-unit id="30026b4a5d66ea78e57d12199d758a86d05e1206" translate="yes" xml:space="preserve">
          <source>$if-false(Tree::Node)</source>
          <target state="translated">$if-false(Tree::Node)</target>
        </trans-unit>
        <trans-unit id="d334cf4592c4206721ab58145b121c4d8b74efe7" translate="yes" xml:space="preserve">
          <source>$if-true(Tree::Node)</source>
          <target state="translated">$if-true(Tree::Node)</target>
        </trans-unit>
        <trans-unit id="3e2de723b98212f908d2b1751ef43e27928ba988" translate="yes" xml:space="preserve">
          <source>$index(Number) &amp;mdash; The position at which $insert will be inserted. Negative indices count from the end of $string. An index that's outside the bounds of the string will insert $insert at the front or back of the string</source>
          <target state="translated">$ index (Number) &amp;mdash; $ insert가 삽입 될 위치입니다. 음수 지수는 $ string의 끝에서 계산됩니다. 문자열의 경계를 벗어난 인덱스는 문자열의 앞이나 뒤에 $ insert를 삽입합니다.</target>
        </trans-unit>
        <trans-unit id="216cb08535c802f4d6c6857f6fce4c1cfbafbb12" translate="yes" xml:space="preserve">
          <source>$insert(String)</source>
          <target state="translated">$insert(String)</target>
        </trans-unit>
        <trans-unit id="aa89ac8049a528198da8a2a9ac15c80e0cb8c080" translate="yes" xml:space="preserve">
          <source>$key(Base)</source>
          <target state="translated">$key(Base)</target>
        </trans-unit>
        <trans-unit id="f92b0a77407f5cbd7b25a78ee6fa15421f84c529" translate="yes" xml:space="preserve">
          <source>$keys([Base])</source>
          <target state="translated">$keys([Base])</target>
        </trans-unit>
        <trans-unit id="787a07d7ddc2d84fb0c8f94d0573819a88e2a8a1" translate="yes" xml:space="preserve">
          <source>$lightness(Number)</source>
          <target state="translated">$lightness(Number)</target>
        </trans-unit>
        <trans-unit id="c889bc6b9f15bc626f62f2e07add6cd7d4a15035" translate="yes" xml:space="preserve">
          <source>$lightness(Number) &amp;mdash; The adjustment to make on the lightness component, between -100% and 100% inclusive</source>
          <target state="translated">$ lightness (Number) &amp;mdash; -100 %에서 100 % 사이의 밝기 구성 요소에 대한 조정입니다.</target>
        </trans-unit>
        <trans-unit id="e5e0b3215ad0ba293de15b21a34b34fb97584133" translate="yes" xml:space="preserve">
          <source>$lightness(Number) &amp;mdash; The lightness of the color. Must be between 0% and 100%, inclusive</source>
          <target state="translated">$ lightness (Number) &amp;mdash; 색상의 밝기입니다. 0 %에서 100 % 사이 여야합니다.</target>
        </trans-unit>
        <trans-unit id="27fa13b3de982b483f3b75deb9bd6c66a1ac77ad" translate="yes" xml:space="preserve">
          <source>$lightness(Number) &amp;mdash; The new lightness component for the color, within 0% and 100% inclusive</source>
          <target state="translated">$ lightness (Number) &amp;mdash; 색상의 새로운 밝기 구성 요소 (0 % 및 100 % 포함)</target>
        </trans-unit>
        <trans-unit id="5d007df602604eaa1d62dd04a861dcba22893125" translate="yes" xml:space="preserve">
          <source>$limit(Number) &amp;mdash; The maximum of the random integer to be returned, a positive integer.</source>
          <target state="translated">$ limit (Number) &amp;mdash; 반환되는 최대 임의의 정수로, 양의 정수입니다.</target>
        </trans-unit>
        <trans-unit id="d7812c62ad89538b283d234e089e2a5b4d489134" translate="yes" xml:space="preserve">
          <source>$list(Base)</source>
          <target state="translated">$list(Base)</target>
        </trans-unit>
        <trans-unit id="41b5a0eda0d435b63c1ddc72ffc91bacbe056016" translate="yes" xml:space="preserve">
          <source>$list(Base) &amp;mdash; The list that will be copied, having the element at index $n changed.</source>
          <target state="translated">$ list (Base) &amp;mdash; 인덱스 $ n의 요소가 변경되어 복사 될 목록입니다.</target>
        </trans-unit>
        <trans-unit id="f90fac986da16adb0688dea18db93bdef7e4d5ab" translate="yes" xml:space="preserve">
          <source>$list1(Base)</source>
          <target state="translated">$list1(Base)</target>
        </trans-unit>
        <trans-unit id="b254396051b0571d4ac5b7f1f4ee55f07052ab65" translate="yes" xml:space="preserve">
          <source>$list2(Base)</source>
          <target state="translated">$list2(Base)</target>
        </trans-unit>
        <trans-unit id="e69b8fd7c7927170c88ae27b0a9f413775fe63a0" translate="yes" xml:space="preserve">
          <source>$lists([Base])</source>
          <target state="translated">$lists([Base])</target>
        </trans-unit>
        <trans-unit id="355b962a782a7ab6bbfa67b14bf8029ba1ae9752" translate="yes" xml:space="preserve">
          <source>$map(Map)</source>
          <target state="translated">$map(Map)</target>
        </trans-unit>
        <trans-unit id="a83447a4a6654a52c1c0596e2141bb3f23fe6dc7" translate="yes" xml:space="preserve">
          <source>$map1(Map)</source>
          <target state="translated">$map1(Map)</target>
        </trans-unit>
        <trans-unit id="4cd4bda304a161300de4dd40ad6c1c03b9859083" translate="yes" xml:space="preserve">
          <source>$map2(Map)</source>
          <target state="translated">$map2(Map)</target>
        </trans-unit>
        <trans-unit id="c8b36fa18f3768d0870bcddee337699da854fc4b" translate="yes" xml:space="preserve">
          <source>$n(Number) &amp;mdash; The index of the item to get. Negative indices count from the end of the list.</source>
          <target state="translated">$ n (Number) &amp;mdash; 가져올 항목의 인덱스입니다. 음수 인덱스는 목록 끝부터 계산됩니다.</target>
        </trans-unit>
        <trans-unit id="e6b81f8d12578a0b7ca0888ec96f4cf8a41b5f07" translate="yes" xml:space="preserve">
          <source>$n(Number) &amp;mdash; The index of the item to set. Negative indices count from the end of the list.</source>
          <target state="translated">$ n (Number) &amp;mdash; 설정할 항목의 인덱스입니다. 음수 인덱스는 목록 끝부터 계산됩니다.</target>
        </trans-unit>
        <trans-unit id="91d32e65bb40b2f6a37607893d992cf9e36b6904" translate="yes" xml:space="preserve">
          <source>$name(String) &amp;mdash; The name of the variable to check. The name should not include the $.</source>
          <target state="translated">$ name (String) &amp;mdash; 확인할 변수의 이름입니다. 이름은 $를 포함하지 않아야합니다.</target>
        </trans-unit>
        <trans-unit id="02d1d576ed378076d11c4e57adf7e96286fd51e6" translate="yes" xml:space="preserve">
          <source>$number(Number)</source>
          <target state="translated">$number(Number)</target>
        </trans-unit>
        <trans-unit id="3e893f93841239b78a5907869d86b75f05018f6e" translate="yes" xml:space="preserve">
          <source>$number1(Number)</source>
          <target state="translated">$number1(Number)</target>
        </trans-unit>
        <trans-unit id="ce08017b63398252ee43106ce21141cb41ca1e98" translate="yes" xml:space="preserve">
          <source>$number2(Number)</source>
          <target state="translated">$number2(Number)</target>
        </trans-unit>
        <trans-unit id="43b2501e526fd09376391fcccda367400c380484" translate="yes" xml:space="preserve">
          <source>$numbers([Number])</source>
          <target state="translated">$numbers([Number])</target>
        </trans-unit>
        <trans-unit id="4051aafe487e73507bf5496131cf62779fa3ef5c" translate="yes" xml:space="preserve">
          <source>$original(String, List) &amp;mdash; The selector being replaced. This can be either a string, a list of strings, or a list of lists of strings as returned by &amp;amp;.</source>
          <target state="translated">$ original (String, List) &amp;mdash; 교체 할 선택기입니다. &amp;amp;로 리턴 된 문자열, 문자열 목록 또는 문자열 목록 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a57d0758f2cb91556ca4f467dfc429903943c5cf" translate="yes" xml:space="preserve">
          <source>$red(Number)</source>
          <target state="translated">$red(Number)</target>
        </trans-unit>
        <trans-unit id="798c3a805b8123984e273d68febb77ba25c13c6b" translate="yes" xml:space="preserve">
          <source>$red(Number) &amp;mdash; The adjustment to make on the red component, between -255 and 255 inclusive</source>
          <target state="translated">$ red (Number) &amp;mdash; 빨강 구성 요소에 대한 조정으로 -255에서 255 사이입니다.</target>
        </trans-unit>
        <trans-unit id="92723f4144b34d094cc00a9673333b57fbc43ef1" translate="yes" xml:space="preserve">
          <source>$red(Number) &amp;mdash; The amount of red in the color. Must be between 0 and 255 inclusive or 0% and 100% inclusive</source>
          <target state="translated">$ red (Number) &amp;mdash; 색상의 빨강 양입니다. 0에서 255 사이 또는 0 %에서 100 % 사이 여야합니다.</target>
        </trans-unit>
        <trans-unit id="41d73eede7db26451e2796a323ab3c322c42a6c1" translate="yes" xml:space="preserve">
          <source>$red(Number) &amp;mdash; The amount of red in the color. Must be between 0 and 255 inclusive, or between 0% and 100% inclusive</source>
          <target state="translated">$ red (Number) &amp;mdash; 색상의 빨강 양입니다. 0에서 255 사이 또는 0 %에서 100 % 사이 여야합니다.</target>
        </trans-unit>
        <trans-unit id="c9f01a8eca90071b747628ac46af03eb4fce7de6" translate="yes" xml:space="preserve">
          <source>$red(Number) &amp;mdash; The new red component for the color, within 0 and 255 inclusive</source>
          <target state="translated">$ red (Number) &amp;mdash; 0에서 255까지의 색상에 대한 새 빨간색 구성 요소</target>
        </trans-unit>
        <trans-unit id="c1d604666547e844a97c584ca9376f2c4d36ee6b" translate="yes" xml:space="preserve">
          <source>$replacement(String, List) &amp;mdash; The selector that $original is being replaced with. This can be either a string, a list of strings, or a list of lists of strings as returned by &amp;amp;.</source>
          <target state="translated">$ replacement (String, List) &amp;mdash; $ original을 대체 할 선택기입니다. &amp;amp;로 리턴 된 문자열, 문자열 목록 또는 문자열 목록 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ce6106fb69799614ff596c8e316f01b7b3f946ef" translate="yes" xml:space="preserve">
          <source>$saturation(Number)</source>
          <target state="translated">$saturation(Number)</target>
        </trans-unit>
        <trans-unit id="291affa33ee07115b4bba6472c94ff847aa684a7" translate="yes" xml:space="preserve">
          <source>$saturation(Number) &amp;mdash; The adjustment to make on the saturation component, between -100% and 100% inclusive</source>
          <target state="translated">$ saturation (Number) &amp;mdash; 채도 구성 요소에 대한 조정으로 -100 %에서 100 % 사이입니다.</target>
        </trans-unit>
        <trans-unit id="9d180f3a53fc6a3bf73744f5a040453cacf280a5" translate="yes" xml:space="preserve">
          <source>$saturation(Number) &amp;mdash; The new saturation component for the color, between 0% and 100% inclusive</source>
          <target state="translated">$ saturation (Number) &amp;mdash; 0 %에서 100 % 사이의 색상에 대한 새 채도 구성 요소</target>
        </trans-unit>
        <trans-unit id="0c08c7463650e99010c468991a17a126731ddd98" translate="yes" xml:space="preserve">
          <source>$saturation(Number) &amp;mdash; The saturation of the color. Must be between 0% and 100%, inclusive</source>
          <target state="translated">$ saturation (Number) &amp;mdash; 색상의 채도입니다. 0 %에서 100 % 사이 여야합니다.</target>
        </trans-unit>
        <trans-unit id="906a8fd2fe1083adbcb7832fd6f28ce7b5dc0b2b" translate="yes" xml:space="preserve">
          <source>$selector(String) &amp;mdash; The compound selector whose simple selectors will be extracted.</source>
          <target state="translated">$ selector (String) &amp;mdash; 단순 선택기가 추출 될 복합 선택기입니다.</target>
        </trans-unit>
        <trans-unit id="175ca91fcad6b59341ed535bf73d3a07476be10d" translate="yes" xml:space="preserve">
          <source>$selector(String, List) &amp;mdash; The selector to parse. This can be either a string, a list of strings, or a list of lists of strings as returned by &amp;amp;.</source>
          <target state="translated">$ selector (String, List) &amp;mdash; 구문 분석 할 선택기입니다. &amp;amp;로 리턴 된 문자열, 문자열 목록 또는 문자열 목록 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3053a1586bacba2a03898e61dd7f5f0ffd38a29c" translate="yes" xml:space="preserve">
          <source>$selector(String, List) &amp;mdash; The selector within which $extendee is extended with $extender. This can be either a string, a list of strings, or a list of lists of strings as returned by &amp;amp;.</source>
          <target state="translated">$ selector (String, List) &amp;mdash; $ extendee가 $ extender로 확장되는 선택기입니다. &amp;amp;로 리턴 된 문자열, 문자열 목록 또는 문자열 목록 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c4bd009e7d163201ef79d8985a477e51d952f4a9" translate="yes" xml:space="preserve">
          <source>$selector(String, List) &amp;mdash; The selector within which $original is replaced with $replacement. This can be either a string, a list of strings, or a list of lists of strings as returned by &amp;amp;.</source>
          <target state="translated">$ selector (String, List) &amp;mdash; $ original이 $ replacement로 바뀌는 선택기입니다. &amp;amp;로 리턴 된 문자열, 문자열 목록 또는 문자열 목록 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5e8b84dd3acb7c4f8c1c63e2657d637e27f25571" translate="yes" xml:space="preserve">
          <source>$selector1(String, List) &amp;mdash; The first selector to be unified. This can be either a string, a list of strings, or a list of lists of strings as returned by &amp;amp;.</source>
          <target state="translated">$ selector1 (String, List) &amp;mdash; 통합 할 첫 번째 선택기입니다. &amp;amp;로 리턴 된 문자열, 문자열 목록 또는 문자열 목록 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="72013d9652b48742e23cc46a1ca9faf8a7af2722" translate="yes" xml:space="preserve">
          <source>$selector2(String, List) &amp;mdash; The second selector to be unified. This can be either a string, a list of strings, or a list of lists of strings as returned by &amp;amp;.</source>
          <target state="translated">$ selector2 (String, List) &amp;mdash; 통합 할 두 번째 선택기입니다. &amp;amp;로 리턴 된 문자열, 문자열 목록 또는 문자열 목록 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0b2440e10188cbef3f6d81482b0f01901fcf948d" translate="yes" xml:space="preserve">
          <source>$selectors([String, List]) &amp;mdash; The selectors to append. At least one selector must be passed. Each of these can be either a string, a list of strings, or a list of lists of strings as returned by &amp;amp;.</source>
          <target state="translated">$ selectors ([String, List]) &amp;mdash; 추가 할 선택기입니다. 하나 이상의 선택기가 전달되어야합니다. 이들 각각은 문자열, 문자열 목록 또는 &amp;amp;에서 리턴 된 문자열 목록 목록 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="207ad637dbe90ccb2249c10e8120ea12c5c0902d" translate="yes" xml:space="preserve">
          <source>$selectors([String, List]) &amp;mdash; The selectors to nest. At least one selector must be passed. Each of these can be either a string, a list of strings, or a list of lists of strings as returned by &amp;amp;.</source>
          <target state="translated">$ selectors ([String, List]) &amp;mdash; 중첩 할 선택기입니다. 하나 이상의 선택기가 전달되어야합니다. 이들 각각은 문자열, 문자열 목록 또는 &amp;amp;에서 리턴 된 문자열 목록 목록 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f1f6f8d10ba742a11fbf421da52f2c803af51e06" translate="yes" xml:space="preserve">
          <source>$separator(String) &amp;mdash; The list separator to use. If this is comma or space, that separator will be used. If this is auto (the default), the separator is determined as explained above.</source>
          <target state="translated">$ separator (String) &amp;mdash; 사용할 목록 구분 기호입니다. 쉼표 또는 공백이면 해당 구분 기호가 사용됩니다. 이것이 자동 (기본값)이면 구분 기호는 위에서 설명한대로 결정됩니다.</target>
        </trans-unit>
        <trans-unit id="7dcf8196b59c8052cf1dd930e6b38d362d6c4f4a" translate="yes" xml:space="preserve">
          <source>$start-at(Number) &amp;mdash; The index of the first character of the substring. If this is negative, it counts from the end of $string</source>
          <target state="translated">$ start-at (Number) &amp;mdash; 하위 문자열의 첫 번째 문자의 인덱스입니다. 이 값이 음수이면 $ string 끝부터 계산됩니다.</target>
        </trans-unit>
        <trans-unit id="3a56e6782813e0edce7da80613ff481aa3e07f98" translate="yes" xml:space="preserve">
          <source>$string(String)</source>
          <target state="translated">$string(String)</target>
        </trans-unit>
        <trans-unit id="b7882e9f45679cabd8885bccb1435aa6f2be6fc9" translate="yes" xml:space="preserve">
          <source>$sub(String, List) &amp;mdash; The potential subselector. This can be either a string, a list of strings, or a list of lists of strings as returned by &amp;amp;.</source>
          <target state="translated">$ sub (String, List) &amp;mdash; 잠재적 하위 선택기입니다. &amp;amp;로 리턴 된 문자열, 문자열 목록 또는 문자열 목록 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="86c6ff58d3029ae6a144ad65d31b59cb6e6e9a68" translate="yes" xml:space="preserve">
          <source>$substring(String)</source>
          <target state="translated">$substring(String)</target>
        </trans-unit>
        <trans-unit id="9e5a3b6cb469d5e8724fecfa38464a23b5035fb2" translate="yes" xml:space="preserve">
          <source>$super(String, List) &amp;mdash; The potential superselector. This can be either a string, a list of strings, or a list of lists of strings as returned by &amp;amp;.</source>
          <target state="translated">$ super (String, List) &amp;mdash; 잠재적 슈퍼 셀렉터입니다. &amp;amp;로 리턴 된 문자열, 문자열 목록 또는 문자열 목록 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="97aadf708863cd8ded82f9965f0d4e01d61f7850" translate="yes" xml:space="preserve">
          <source>$val(Base)</source>
          <target state="translated">$val(Base)</target>
        </trans-unit>
        <trans-unit id="ba3f47ff0a6f87d69cc4fcef875688433d150be2" translate="yes" xml:space="preserve">
          <source>$value(Base)</source>
          <target state="translated">$value(Base)</target>
        </trans-unit>
        <trans-unit id="d619da5f18b07a45fae50f3af46f8f3c9b0e53a6" translate="yes" xml:space="preserve">
          <source>$value(Base) &amp;mdash; The new value at index $n.</source>
          <target state="translated">$ value (Base) &amp;mdash; 인덱스 $ n의 새로운 값.</target>
        </trans-unit>
        <trans-unit id="406f15245451684e3bc3de1deb497fb15e7b9bc2" translate="yes" xml:space="preserve">
          <source>$value(Base) &amp;mdash; The value to inspect</source>
          <target state="translated">$ value (Base) &amp;mdash; 검사 할 값</target>
        </trans-unit>
        <trans-unit id="7b24cc0c1eed124fecce2d53a5f8b0c0ae67c1b3" translate="yes" xml:space="preserve">
          <source>$value(Base) &amp;mdash; The value to inspect.</source>
          <target state="translated">$ value (Base) &amp;mdash; 검사 할 값입니다.</target>
        </trans-unit>
        <trans-unit id="321a7e9f953ae1f002b9bb4cb945dd815481cd0c" translate="yes" xml:space="preserve">
          <source>$weight(Number) &amp;mdash; The relative weight of each color. Closer to 100% gives more weight to $color1, closer to 0% gives more weight to $color2</source>
          <target state="translated">$ weight (Number) &amp;mdash; 각 색상의 상대적 무게입니다. 100 %에 가까워지면 $ color1에 더 많은 무게가, 0 %에 가까워지면 $ color2에 더 많은 무게가</target>
        </trans-unit>
        <trans-unit id="0b722ab989a38e4f2d6eb165bbe03da1cc7f9428" translate="yes" xml:space="preserve">
          <source>$weight(Number) &amp;mdash; The relative weight of the color color's inverse</source>
          <target state="translated">$ weight (Number) &amp;mdash; 색상 색상 반전의 상대 가중치</target>
        </trans-unit>
        <trans-unit id="ade264c74c289120840d7f70464dcbb2a962da40" translate="yes" xml:space="preserve">
          <source>%placeholder selector</source>
          <target state="translated">자리 표시 자 비율</target>
        </trans-unit>
        <trans-unit id="6a0f24b1f24890ab19f8ab97584982ab5b00b91d" translate="yes" xml:space="preserve">
          <source>&amp;amp; in sassScript</source>
          <target state="translated">&amp;amp; sassScript에서</target>
        </trans-unit>
        <trans-unit id="d0488cb3bf5655e2a4c1880ae9a380659c961585" translate="yes" xml:space="preserve">
          <source>&amp;amp; parent selector</source>
          <target state="translated">부모 선택기</target>
        </trans-unit>
        <trans-unit id="242097204c2e06336514dab89f4cc581e13adf90" translate="yes" xml:space="preserve">
          <source>&amp;copy; 2006&amp;ndash;2016 Hampton Catlin, Nathan Weizenbaum, and Chris Eppstein</source>
          <target state="translated">&amp;copy; 2006&amp;ndash;2016 Hampton Catlin, Nathan Weizenbaum 및 Chris Eppstein</target>
        </trans-unit>
        <trans-unit id="e54fa0260345ff58931f0db3c6c2ffaa8f7159e2" translate="yes" xml:space="preserve">
          <source>(ArgumentError) &amp;mdash; if $alpha is out of bounds or either parameter is the wrong type</source>
          <target state="translated">(ArgumentError) &amp;mdash; $ alpha가 범위를 벗어 났거나 매개 변수 중 하나가 잘못된 유형 인 경우</target>
        </trans-unit>
        <trans-unit id="e1b81ef6cf445c978cad23278c374aac690162b4" translate="yes" xml:space="preserve">
          <source>(ArgumentError) &amp;mdash; if $amount is out of bounds, or either parameter is the wrong type</source>
          <target state="translated">(ArgumentError) &amp;mdash; $ amount가 범위를 벗어 났거나 매개 변수 중 하나가 잘못된 유형 인 경우</target>
        </trans-unit>
        <trans-unit id="46f6fb168025c877f41a090e5ae0c03e6302310b" translate="yes" xml:space="preserve">
          <source>(ArgumentError) &amp;mdash; if $args isn't a variable argument list</source>
          <target state="translated">(ArgumentError) &amp;mdash; $ args가 변수 인수 목록이 아닌 경우</target>
        </trans-unit>
        <trans-unit id="a6deb5c848f8161c0d015f81b7e177b27311652a" translate="yes" xml:space="preserve">
          <source>(ArgumentError) &amp;mdash; if $color isn't a color</source>
          <target state="translated">(ArgumentError) &amp;mdash; $ color가 색상이 아닌 경우</target>
        </trans-unit>
        <trans-unit id="e43c323144d5a98765a551319d6a45ca0bb93a30" translate="yes" xml:space="preserve">
          <source>(ArgumentError) &amp;mdash; if $color isn't a color or $weight isn't a percentage between 0% and 100%</source>
          <target state="translated">(ArgumentError) &amp;mdash; $ color가 색상이 아니거나 $ weight가 0 %에서 100 % 사이의 백분율이 아닌 경우</target>
        </trans-unit>
        <trans-unit id="c4bff3355dd2286e20d3da67a6e6b9ecd267bcc1" translate="yes" xml:space="preserve">
          <source>(ArgumentError) &amp;mdash; if $feature isn't a string</source>
          <target state="translated">(ArgumentError) &amp;mdash; $ feature가 문자열이 아닌 경우</target>
        </trans-unit>
        <trans-unit id="bcafcf95213de1ac106629f316339d893aca92ce" translate="yes" xml:space="preserve">
          <source>(ArgumentError) &amp;mdash; if $map is not a map</source>
          <target state="translated">(ArgumentError) &amp;mdash; $ map이지도가 아닌 경우</target>
        </trans-unit>
        <trans-unit id="80caebfe127488f6e9d8b23ed6d2324f1c3e2676" translate="yes" xml:space="preserve">
          <source>(ArgumentError) &amp;mdash; if $n isn't an integer between 1 and the length of $list</source>
          <target state="translated">(ArgumentError) &amp;mdash; $ n이 1과 $ list의 길이 사이의 정수가 아닌 경우</target>
        </trans-unit>
        <trans-unit id="c3b658394b6faef361fabac36d0a43c629035bfe" translate="yes" xml:space="preserve">
          <source>(ArgumentError) &amp;mdash; if $number isn't a number</source>
          <target state="translated">(ArgumentError) &amp;mdash; $ number가 숫자가 아닌 경우</target>
        </trans-unit>
        <trans-unit id="3518a7a8ccb351b3802173336709457558caa570" translate="yes" xml:space="preserve">
          <source>(ArgumentError) &amp;mdash; if $number isn't a unitless number</source>
          <target state="translated">(ArgumentError) &amp;mdash; $ number가 단위가 아닌 숫자가 아닌 경우</target>
        </trans-unit>
        <trans-unit id="171ec8c0b8effabc24a66eef088cbe7c2c92a4e5" translate="yes" xml:space="preserve">
          <source>(ArgumentError) &amp;mdash; if $saturation or $lightness are out of bounds or any parameter is the wrong type</source>
          <target state="translated">(ArgumentError) &amp;mdash; $ saturation 또는 $ lightness가 범위를 벗어 났거나 매개 변수가 잘못된 유형 인 경우</target>
        </trans-unit>
        <trans-unit id="2f52f9f750a0917524c32e9217f68c98474beced" translate="yes" xml:space="preserve">
          <source>(ArgumentError) &amp;mdash; if $saturation, $lightness, or $alpha are out of bounds or any parameter is the wrong type</source>
          <target state="translated">(ArgumentError) &amp;mdash; $ saturation, $ lightness 또는 $ alpha가 범위를 벗어 났거나 매개 변수가 잘못된 유형 인 경우</target>
        </trans-unit>
        <trans-unit id="7c75d0ebe95b2fac4c53ce8b1b09199fbe3f7fcf" translate="yes" xml:space="preserve">
          <source>(ArgumentError) &amp;mdash; if $string isn't a string</source>
          <target state="translated">(ArgumentError) &amp;mdash; $ string이 문자열이 아닌 경우</target>
        </trans-unit>
        <trans-unit id="3284ef50210ffade5065fb9d2f6b1ee12d21c670" translate="yes" xml:space="preserve">
          <source>(ArgumentError) &amp;mdash; if $weight is out of bounds or any parameter is the wrong type</source>
          <target state="translated">(ArgumentError) &amp;mdash; $ weight가 범위를 벗어 났거나 매개 변수가 잘못된 유형 인 경우</target>
        </trans-unit>
        <trans-unit id="768e36d7aa430ddd1b065f1676fadc3ce8c756d8" translate="yes" xml:space="preserve">
          <source>(ArgumentError) &amp;mdash; if a selector could not be appended.</source>
          <target state="translated">(ArgumentError) &amp;mdash; 선택기를 추가 할 수없는 경우입니다.</target>
        </trans-unit>
        <trans-unit id="673dda1b8a0e4975fddc6b70b1a3024642c790c1" translate="yes" xml:space="preserve">
          <source>(ArgumentError) &amp;mdash; if any argument isn't a number, or if not all of the arguments have comparable units</source>
          <target state="translated">(ArgumentError) &amp;mdash; 인수가 숫자가 아니거나 모든 인수에 비교 가능한 단위가없는 경우</target>
        </trans-unit>
        <trans-unit id="ca2e974ba89d223892bab2a252ad046934be97d1" translate="yes" xml:space="preserve">
          <source>(ArgumentError) &amp;mdash; if any parameter is the wrong type</source>
          <target state="translated">(ArgumentError) &amp;mdash; 매개 변수가 잘못된 유형 인 경우</target>
        </trans-unit>
        <trans-unit id="027c57fa858e9aafe1ce4619a5441a9095e6f8df" translate="yes" xml:space="preserve">
          <source>(ArgumentError) &amp;mdash; if any parameter is the wrong type or out of bounds</source>
          <target state="translated">(ArgumentError) &amp;mdash; 매개 변수가 잘못된 유형이거나 범위를 벗어난 경우</target>
        </trans-unit>
        <trans-unit id="dc60a244c2021634cafa123207c2c0d029a3048c" translate="yes" xml:space="preserve">
          <source>(ArgumentError) &amp;mdash; if any parameter is the wrong type or out-of bounds, or if RGB properties and HSL properties are adjusted at the same time</source>
          <target state="translated">(ArgumentError) &amp;mdash; 매개 변수가 잘못된 유형이거나 범위를 벗어난 경우 또는 RGB 속성과 HSL 속성이 동시에 조정 된 경우</target>
        </trans-unit>
        <trans-unit id="dcb9bfc77c1e9f0c141f5e016f4816072bdd3456" translate="yes" xml:space="preserve">
          <source>(ArgumentError) &amp;mdash; if either parameter is not a map</source>
          <target state="translated">(ArgumentError) &amp;mdash; 매개 변수 중 하나가 맵이 아닌 경우</target>
        </trans-unit>
        <trans-unit id="a5e989041121cbe7f03cf63b315dc48588db2720" translate="yes" xml:space="preserve">
          <source>(ArgumentError) &amp;mdash; if either parameter is the wrong type</source>
          <target state="translated">(ArgumentError) &amp;mdash; 두 매개 변수 중 하나가 잘못된 유형 인 경우</target>
        </trans-unit>
        <trans-unit id="691b2dedf2eb8440d21f7621147afc4b29b13d2f" translate="yes" xml:space="preserve">
          <source>(ArgumentError) &amp;mdash; if the $limit is not 1 or greater</source>
          <target state="translated">(ArgumentError) &amp;mdash; $ limit가 1 이상이 아닌 경우</target>
        </trans-unit>
        <trans-unit id="074e319448c3f3e3fbbe104ab373ac952b9dd24f" translate="yes" xml:space="preserve">
          <source>(ArgumentError) &amp;mdash; if the extension fails</source>
          <target state="translated">(ArgumentError) &amp;mdash; 확장이 실패한 경우</target>
        </trans-unit>
        <trans-unit id="c616cceb9428111e795eb79f1092387c3c2075b6" translate="yes" xml:space="preserve">
          <source>(ArgumentError) &amp;mdash; if the replacement fails</source>
          <target state="translated">(ArgumentError) &amp;mdash; 교체에 실패한 경우</target>
        </trans-unit>
        <trans-unit id="bc31501c25d526ffb38aafac62998004cbd12253" translate="yes" xml:space="preserve">
          <source>(Base)</source>
          <target state="translated">(Base)</target>
        </trans-unit>
        <trans-unit id="84c492f5bba42c95939fad73c5276f48bc71cf2c" translate="yes" xml:space="preserve">
          <source>(Base) &amp;mdash; $if-true or $if-false</source>
          <target state="translated">(기본) &amp;mdash; $ if-true 또는 $ if-false</target>
        </trans-unit>
        <trans-unit id="66ad9a9aafd4f5694179598a848ce1a5270606c9" translate="yes" xml:space="preserve">
          <source>(Base) &amp;mdash; The value indexed by $key, or null if the map doesn't contain the given key</source>
          <target state="translated">(Base) &amp;mdash; $ key로 색인 된 값 또는지도에 지정된 키가없는 경우 null</target>
        </trans-unit>
        <trans-unit id="32da5f08bda277a5a9388d20de4d9872c4b6a951" translate="yes" xml:space="preserve">
          <source>(Bool)</source>
          <target state="translated">(Bool)</target>
        </trans-unit>
        <trans-unit id="d8e9b251e06fba7eff71457cabe4b7f32e2ba05a" translate="yes" xml:space="preserve">
          <source>(Bool) &amp;mdash; Whether $selector1 is a superselector of $selector2.</source>
          <target state="translated">(Bool) &amp;mdash; $ selector1이 $ selector2의 수퍼 셀렉터인지 여부입니다.</target>
        </trans-unit>
        <trans-unit id="32c233e222c33d346fad81bd186987a7de49c735" translate="yes" xml:space="preserve">
          <source>(Bool) &amp;mdash; Whether a content block was passed to the mixin.</source>
          <target state="translated">(Bool) &amp;mdash; 콘텐츠 블록이 믹스 인에 전달되었는지 여부입니다.</target>
        </trans-unit>
        <trans-unit id="3a44f746b5413a8a251e9109d746a49c7c7b00af" translate="yes" xml:space="preserve">
          <source>(Bool) &amp;mdash; Whether the feature is supported in this version of Sass</source>
          <target state="translated">(Bool) &amp;mdash;이 버전의 Sass에서 기능이 지원되는지 여부</target>
        </trans-unit>
        <trans-unit id="2173969f0cb2ee0b5150bdd5c9a123d6cc80f49d" translate="yes" xml:space="preserve">
          <source>(Bool) &amp;mdash; Whether the function is defined.</source>
          <target state="translated">(Bool) &amp;mdash; 함수 정의 여부입니다.</target>
        </trans-unit>
        <trans-unit id="3138d59eef729098510c0110878a0e391ee74666" translate="yes" xml:space="preserve">
          <source>(Bool) &amp;mdash; Whether the mixin is defined.</source>
          <target state="translated">(Bool) &amp;mdash; 믹스 인 정의 여부입니다.</target>
        </trans-unit>
        <trans-unit id="aa61df232f25261041e4c9e1b2fb2080f5c738f3" translate="yes" xml:space="preserve">
          <source>(Bool) &amp;mdash; Whether the variable is defined in the current scope.</source>
          <target state="translated">(Bool) &amp;mdash; 변수가 현재 범위에 정의되어 있는지 여부입니다.</target>
        </trans-unit>
        <trans-unit id="55df750b45e3c9c35f8835dd77e0c5ff6b0a760b" translate="yes" xml:space="preserve">
          <source>(Bool) &amp;mdash; Whether the variable is defined in the global scope.</source>
          <target state="translated">(Bool) &amp;mdash; 변수가 전역 범위에 정의되어 있는지 여부입니다.</target>
        </trans-unit>
        <trans-unit id="ef925c7f563b5909a57b310c9325327231e0f7bc" translate="yes" xml:space="preserve">
          <source>(Color)</source>
          <target state="translated">(Color)</target>
        </trans-unit>
        <trans-unit id="a21b102dd81b35461c87e52cea4e16d5fba884e5" translate="yes" xml:space="preserve">
          <source>(Function) &amp;mdash; A function reference.</source>
          <target state="translated">(기능) &amp;mdash; 기능 참조.</target>
        </trans-unit>
        <trans-unit id="84f4fb427edc66a9b51ed0213b399c87e7fdd1c5" translate="yes" xml:space="preserve">
          <source>(List)</source>
          <target state="translated">(List)</target>
        </trans-unit>
        <trans-unit id="ab00038088151a4dcb1b9f0ee0d449e41a73e4f9" translate="yes" xml:space="preserve">
          <source>(List) &amp;mdash; A list of lists of strings representing $selector. This is in the same format as a selector returned by &amp;amp;.</source>
          <target state="translated">(List) &amp;mdash; $ selector를 나타내는 문자열 목록의 목록입니다. 이는 &amp;amp;에서 리턴 한 선택기와 같은 형식입니다.</target>
        </trans-unit>
        <trans-unit id="1e4b4886fdc101f8ece99629466f8a4b5958aca0" translate="yes" xml:space="preserve">
          <source>(List) &amp;mdash; A list of lists of strings representing the result of appending $selectors. This is in the same format as a selector returned by &amp;amp;.</source>
          <target state="translated">(List) &amp;mdash; $ selectors를 추가 한 결과를 나타내는 문자열 목록입니다. 이는 &amp;amp;에서 리턴 한 선택기와 같은 형식입니다.</target>
        </trans-unit>
        <trans-unit id="ca18bc5773467cc5195976b05842618893baac49" translate="yes" xml:space="preserve">
          <source>(List) &amp;mdash; A list of lists of strings representing the result of nesting $selectors. This is in the same format as a selector returned by &amp;amp;.</source>
          <target state="translated">(List) &amp;mdash; 중첩 $ selectors의 결과를 나타내는 문자열 목록의 목록입니다. 이는 &amp;amp;에서 리턴 한 선택기와 같은 형식입니다.</target>
        </trans-unit>
        <trans-unit id="f9d864db561a641b9c1908811edc1bb10dea0f68" translate="yes" xml:space="preserve">
          <source>(List) &amp;mdash; A list of lists of strings representing the result of the extension. This is in the same format as a selector returned by &amp;amp;.</source>
          <target state="translated">(List) &amp;mdash; 확장 결과를 나타내는 문자열 목록 목록입니다. 이는 &amp;amp;에서 리턴 한 선택기와 같은 형식입니다.</target>
        </trans-unit>
        <trans-unit id="d5d5ff0ccb6470d28c775aa2ba468b0a6b2fe26c" translate="yes" xml:space="preserve">
          <source>(List) &amp;mdash; A list of simple selectors in the compound selector.</source>
          <target state="translated">(목록) &amp;mdash; 복합 선택기의 단순 선택기 목록입니다.</target>
        </trans-unit>
        <trans-unit id="a4cea87eeae6fb88977c980adeec5a22a96c3d61" translate="yes" xml:space="preserve">
          <source>(List) &amp;mdash; the list of keys, comma-separated</source>
          <target state="translated">(목록) &amp;mdash; 쉼표로 구분 된 키 목록</target>
        </trans-unit>
        <trans-unit id="58d884e25c2b1d5d7c7306d739f0cf83d8875411" translate="yes" xml:space="preserve">
          <source>(List) &amp;mdash; the list of values, comma-separated</source>
          <target state="translated">(목록) &amp;mdash; 쉼표로 구분 된 값 목록</target>
        </trans-unit>
        <trans-unit id="3dd365b822385407b9c70f4cf2139845a0a81a0c" translate="yes" xml:space="preserve">
          <source>(List, Null) &amp;mdash; A list of lists of strings representing the result of the unification, or null if no unification exists. This is in the same format as a selector returned by &amp;amp;.</source>
          <target state="translated">(List, Null) &amp;mdash; 통합 결과를 나타내는 문자열 목록 또는 통합이없는 경우 null입니다. 이는 &amp;amp;에서 리턴 한 선택기와 같은 형식입니다.</target>
        </trans-unit>
        <trans-unit id="f3c758fb4abbbe82c65d10abbb597bd43879f7d5" translate="yes" xml:space="preserve">
          <source>(Map)</source>
          <target state="translated">(Map)</target>
        </trans-unit>
        <trans-unit id="035ccc46631dd65fcb1c0851abd2f949716a382d" translate="yes" xml:space="preserve">
          <source>(Number)</source>
          <target state="translated">(Number)</target>
        </trans-unit>
        <trans-unit id="7a0a0346e56d9f22e65c13050307caf600e9e30a" translate="yes" xml:space="preserve">
          <source>(Number) &amp;mdash; A decimal value.</source>
          <target state="translated">(Number) &amp;mdash; 10 진수 값입니다.</target>
        </trans-unit>
        <trans-unit id="fa1d9013a7b37c458dd94ae207834c0b6999d2e8" translate="yes" xml:space="preserve">
          <source>(Number) &amp;mdash; An integer.</source>
          <target state="translated">(Number) &amp;mdash; 정수입니다.</target>
        </trans-unit>
        <trans-unit id="7f36e59bee0af8613e6628e835f96a9ebb3c7a11" translate="yes" xml:space="preserve">
          <source>(Number) &amp;mdash; The alpha component, between 0 and 1</source>
          <target state="translated">(Number) &amp;mdash; 0에서 1 사이의 알파 구성 요소</target>
        </trans-unit>
        <trans-unit id="a6a0e9f9140b0b6657f85512d29e576fe823a749" translate="yes" xml:space="preserve">
          <source>(Number) &amp;mdash; The blue component, between 0 and 255 inclusive</source>
          <target state="translated">(Number) &amp;mdash; 0에서 255 사이의 파란색 구성 요소</target>
        </trans-unit>
        <trans-unit id="928ea5d71cd0b1155dd18ba9283c0a2d243007b7" translate="yes" xml:space="preserve">
          <source>(Number) &amp;mdash; The green component, between 0 and 255 inclusive</source>
          <target state="translated">(Number) &amp;mdash; 0에서 255 사이의 녹색 구성 요소</target>
        </trans-unit>
        <trans-unit id="59a027d953db15cf5ce5f2487f7b71422857710d" translate="yes" xml:space="preserve">
          <source>(Number) &amp;mdash; The hue component, between 0deg and 360deg</source>
          <target state="translated">(Number) &amp;mdash; 0도에서 360도 사이의 색조 구성 요소</target>
        </trans-unit>
        <trans-unit id="309117e13f71ad11574547f925a19198f4efbfdc" translate="yes" xml:space="preserve">
          <source>(Number) &amp;mdash; The lightness component, between 0% and 100%</source>
          <target state="translated">(Number) &amp;mdash; 0 %에서 100 % 사이의 밝기 구성 요소</target>
        </trans-unit>
        <trans-unit id="a3781fed14d7b9e81940ba7bffc59c7407c06e61" translate="yes" xml:space="preserve">
          <source>(Number) &amp;mdash; The red component, between 0 and 255 inclusive</source>
          <target state="translated">(Number) &amp;mdash; 0에서 255 사이의 빨간색 구성 요소</target>
        </trans-unit>
        <trans-unit id="66b3c7072b3d9d5dbe2f9f8da6644bcfd828f4cb" translate="yes" xml:space="preserve">
          <source>(Number) &amp;mdash; The saturation component, between 0% and 100%</source>
          <target state="translated">(Number) &amp;mdash; 채도 구성 요소 (0 % ~ 100 %)</target>
        </trans-unit>
        <trans-unit id="8fb4a9e298e211b53c1777bced5b15239b9526e5" translate="yes" xml:space="preserve">
          <source>(Number, Null)</source>
          <target state="translated">(숫자, 널)</target>
        </trans-unit>
        <trans-unit id="78943f7aae0eca255fb81da9b6ae06868e64c32f" translate="yes" xml:space="preserve">
          <source>(Number, Null) &amp;mdash; The 1-based index of $value in $list, or null</source>
          <target state="translated">(Number, Null) &amp;mdash; $ list의 1부터 시작하는 $ value 인덱스 또는 null</target>
        </trans-unit>
        <trans-unit id="ca160e8fcc0d837a102bc8d0b7dd4018744cb2f8" translate="yes" xml:space="preserve">
          <source>(String)</source>
          <target state="translated">(String)</target>
        </trans-unit>
        <trans-unit id="9af1197073c44a7dd993d4c6d1acd10966e0052f" translate="yes" xml:space="preserve">
          <source>(String) &amp;mdash; A representation of the value as it would be written in Sass.</source>
          <target state="translated">(String) &amp;mdash; Sass로 쓰여질 값의 표현입니다.</target>
        </trans-unit>
        <trans-unit id="28b37f4825347fa03ae31f861df5119415bc35e0" translate="yes" xml:space="preserve">
          <source>(String) &amp;mdash; The IE-formatted string representation of the color</source>
          <target state="translated">(String) &amp;mdash; 색상의 IE 형식 문자열 표현</target>
        </trans-unit>
        <trans-unit id="4a979e236b325a07046572b9cd815aab26c44bf3" translate="yes" xml:space="preserve">
          <source>(String) &amp;mdash; The result string. This will be quoted if and only if $string was quoted</source>
          <target state="translated">(String) &amp;mdash; 결과 문자열입니다. $ string이 인용 된 경우에만 인용됩니다.</target>
        </trans-unit>
        <trans-unit id="37e8f327469125b93408b3fca12714b58cc72903" translate="yes" xml:space="preserve">
          <source>(String) &amp;mdash; The substring. This will be quoted if and only if $string was quoted</source>
          <target state="translated">(String) &amp;mdash; 하위 문자열입니다. $ string이 인용 된 경우에만 인용됩니다.</target>
        </trans-unit>
        <trans-unit id="d1db760774961a315aa6be942b05536a64b3587d" translate="yes" xml:space="preserve">
          <source>(String) &amp;mdash; The unit(s) of the number, as a quoted string</source>
          <target state="translated">(String) &amp;mdash; 따옴표로 묶인 문자열의 숫자 단위입니다.</target>
        </trans-unit>
        <trans-unit id="ebe205910840809edf252e53514dfd407b3eae0c" translate="yes" xml:space="preserve">
          <source>(String) &amp;mdash; The unquoted string name of the value's type</source>
          <target state="translated">(String) &amp;mdash; 따옴표로 묶지 않은 값 유형의 문자열 이름</target>
        </trans-unit>
        <trans-unit id="3d1255224e8cdf7b565ec94191aaa4667a577020" translate="yes" xml:space="preserve">
          <source>(String) &amp;mdash; comma or space</source>
          <target state="translated">(문자열) &amp;mdash; 쉼표 또는 공백</target>
        </trans-unit>
        <trans-unit id="3bbbbc118923710ed46bbdeac7efac99094d6d20" translate="yes" xml:space="preserve">
          <source>...or by passing an options hash to &lt;a href=&quot;http://sass-lang.com/documentation/Sass/Engine.html#initialize-instance_method&quot;&gt;Sass::Engine#initialize&lt;/a&gt;. All relevant options are also available via flags to the &lt;code&gt;sass&lt;/code&gt; and &lt;code&gt;scss&lt;/code&gt; command-line executables. Available options are:</source>
          <target state="translated">... 또는 옵션 해시를 &lt;a href=&quot;http://sass-lang.com/documentation/Sass/Engine.html#initialize-instance_method&quot;&gt;Sass :: Engine # initialize&lt;/a&gt; 에 전달합니다 . &lt;code&gt;sass&lt;/code&gt; 및 &lt;code&gt;scss&lt;/code&gt; 명령 행 실행 파일 에 대한 플래그를 통해 모든 관련 옵션을 사용할 수도 있습니다 . 사용 가능한 옵션은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="4bbb05d1b253167b77da50c1d1fcf4f8edcab069" translate="yes" xml:space="preserve">
          <source>...or by setting the &lt;code&gt;Merb::Plugin.config[:sass]&lt;/code&gt; hash in &lt;code&gt;init.rb&lt;/code&gt; in Merb...</source>
          <target state="translated">... 또는 설정함으로써 &lt;code&gt;Merb::Plugin.config[:sass]&lt;/code&gt; 에 해시 &lt;code&gt;init.rb&lt;/code&gt; Merb는 ...에</target>
        </trans-unit>
        <trans-unit id="18531e8b77b0ff841e0fd518e79f54f908b065fe" translate="yes" xml:space="preserve">
          <source>:compact</source>
          <target state="translated">:compact</target>
        </trans-unit>
        <trans-unit id="b387b5a70b59f32a0b2ff1a3e67f25bd7909dc8c" translate="yes" xml:space="preserve">
          <source>:compressed</source>
          <target state="translated">:compressed</target>
        </trans-unit>
        <trans-unit id="f5fb440ab0545653958cbc733de32344fc1d3a78" translate="yes" xml:space="preserve">
          <source>:expanded</source>
          <target state="translated">:expanded</target>
        </trans-unit>
        <trans-unit id="e72e10eca1eda8e1e0d53492174ca0d1d3ac9b89" translate="yes" xml:space="preserve">
          <source>:nested</source>
          <target state="translated">:nested</target>
        </trans-unit>
        <trans-unit id="0f2290b226aeab33c5ce4b19775b7c8b51e299c1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;amp;&lt;/code&gt; in SassScript #parent-script</source>
          <target state="translated">&lt;code&gt;&amp;amp;&lt;/code&gt; SassScript에서 # parent-script</target>
        </trans-unit>
        <trans-unit id="db4484f04fa75658b7e989eea751639085279477" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;amp;&lt;/code&gt; must appear at the beginning of a compound selector, but it can be followed by a suffix that will be added to the parent selector. For example:</source>
          <target state="translated">&lt;code&gt;&amp;amp;&lt;/code&gt; 는 복합 선택기의 시작 부분에 나타나야하지만 뒤에 부모 선택기에 추가 될 접미사가 올 수 있습니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="3be48b1b9c0b668f20f9edec84fb8d31b6f07933" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;amp;&lt;/code&gt; will be replaced with the parent selector as it appears in the CSS. This means that if you have a deeply nested rule, the parent selector will be fully resolved before the &lt;code&gt;&amp;amp;&lt;/code&gt; is replaced. For example:</source>
          <target state="translated">&lt;code&gt;&amp;amp;&lt;/code&gt; 는 CSS에 표시된대로 부모 선택기로 대체됩니다. 즉, 깊이 중첩 된 규칙이있는 경우 &lt;code&gt;&amp;amp;&lt;/code&gt; 를 교체 하기 전에 상위 선택기가 완전히 해결 됩니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="65a2c5e53a3b872c472622e6bad2a4db48055e6b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@&lt;/code&gt;-Rules and Directives #directives</source>
          <target state="translated">&lt;code&gt;@&lt;/code&gt; -규칙 및 지시문 # 지시문</target>
        </trans-unit>
        <trans-unit id="06d7120408826b63989db589015a5844679067f2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@at-root (without: ...)&lt;/code&gt; and &lt;code&gt;@at-root (with: ...)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;@at-root (without: ...)&lt;/code&gt; 및 &lt;code&gt;@at-root (with: ...)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0c6d7f151be410aecc9c0cf086e43b40d5dc3eed" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@at-root&lt;/code&gt; #at-root</source>
          <target state="translated">&lt;code&gt;@at-root&lt;/code&gt; # at-root</target>
        </trans-unit>
        <trans-unit id="337cff3f5971b6afd4311a912eb91bbf2763bb87" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@each&lt;/code&gt; #each-directive</source>
          <target state="translated">&lt;code&gt;@each&lt;/code&gt; # each-directive</target>
        </trans-unit>
        <trans-unit id="41b96c9da605b44e04361598d79cd2f3791faf62" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@extend&lt;/code&gt; #extend</source>
          <target state="translated">&lt;code&gt;@extend&lt;/code&gt; #extend</target>
        </trans-unit>
        <trans-unit id="4792067a9d7b6cb233253ecefd3ff97ce2f58751" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@extend&lt;/code&gt; in Directives</source>
          <target state="translated">&lt;code&gt;@extend&lt;/code&gt; 지시문의 @extend</target>
        </trans-unit>
        <trans-unit id="0c6fae8894825d87d5f8c7a64c8da6b31c2a1f26" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@extend&lt;/code&gt; works by inserting the extending selector (e.g. &lt;code&gt;.seriousError&lt;/code&gt;) anywhere in the stylesheet that the extended selector (.e.g &lt;code&gt;.error&lt;/code&gt;) appears. Thus the example above:</source>
          <target state="translated">&lt;code&gt;@extend&lt;/code&gt; 는 확장 선택기 (예 : &lt;code&gt;.error&lt;/code&gt; )가 나타나는 스타일 시트의 아무 곳에 나 확장 선택기 (예 : &lt;code&gt;.seriousError&lt;/code&gt; ) 를 삽입하여 작동 합니다. 따라서 위의 예는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="07bc881dccbac1905e6edad5ffeb3d11a9e70dd6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@extend&lt;/code&gt;-Only Selectors #placeholders</source>
          <target state="translated">&lt;code&gt;@extend&lt;/code&gt; - 선택자 # 자리 표시 자</target>
        </trans-unit>
        <trans-unit id="f5bec91eb86dfe7a84a9c9b1835e5ed38fca0a55" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@import&lt;/code&gt; #import</source>
          <target state="translated">&lt;code&gt;@import&lt;/code&gt; #import</target>
        </trans-unit>
        <trans-unit id="b73658d95ac7977a485a3891afda7f38602ea4a4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@import&lt;/code&gt; takes a filename to import. By default, it looks for a Sass file to import directly, but there are a few circumstances under which it will compile to a CSS &lt;code&gt;@import&lt;/code&gt; rule:</source>
          <target state="translated">&lt;code&gt;@import&lt;/code&gt; 는 가져올 파일 이름을 사용합니다. 기본적으로 Sass 파일을 직접 가져 오지만 CSS &lt;code&gt;@import&lt;/code&gt; 규칙으로 컴파일되는 몇 가지 상황이 있습니다 .</target>
        </trans-unit>
        <trans-unit id="3a4cbef6ae19d980221cc7d92dacabb64fa9f2e9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@media&lt;/code&gt; #media</source>
          <target state="translated">&lt;code&gt;@media&lt;/code&gt; 지금 주문</target>
        </trans-unit>
        <trans-unit id="e5bad2df7dc3925893a9d5eed424bfe121ac528b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@media&lt;/code&gt; directives in Sass behave just like they do in plain CSS, with one extra capability: they can be nested in CSS rules. If a &lt;code&gt;@media&lt;/code&gt; directive appears within a CSS rule, it will be bubbled up to the top level of the stylesheet, putting all the selectors on the way inside the rule. This makes it easy to add media-specific styles without having to repeat selectors or break the flow of the stylesheet. For example:</source>
          <target state="translated">&lt;code&gt;@media&lt;/code&gt; Sass의 @media 지시문은 일반 CSS에서와 마찬가지로 동작하며 CSS 규칙에 중첩 될 수 있습니다. 경우 &lt;code&gt;@media&lt;/code&gt; 의 지시어는 CSS 규칙 내에서 나타납니다, 그것은 규칙 내부의 길에 모두에게 선택기를 가하고, 스타일 시트의 상단 수준까지 버블됩니다. 따라서 선택기를 반복하거나 스타일 시트의 흐름을 중단하지 않고도 미디어 별 스타일을 쉽게 추가 할 수 있습니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="0d3c576ea379cf576f223b9b071de41f6560ebe0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@media&lt;/code&gt; queries can also be nested within one another. The queries will then be combined using the &lt;code&gt;and&lt;/code&gt; operator. For example:</source>
          <target state="translated">&lt;code&gt;@media&lt;/code&gt; 쿼리는 서로 중첩 될 수도 있습니다. 그런 다음 &lt;code&gt;and&lt;/code&gt; 연산자를 사용하여 쿼리를 결합합니다 . 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="2385ae13a1a5e2e7af235ef143d57ffc199c3bab" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;at-error&lt;/code&gt; indicates that the Sass &lt;code&gt;@error&lt;/code&gt; directive is supported.</source>
          <target state="translated">&lt;code&gt;at-error&lt;/code&gt; 는 Sass &lt;code&gt;@error&lt;/code&gt; 지시어가 지원됨을 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="02b8f550fb59c6e7cbcca7f2f0c6d6de9ffd5c54" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;custom-property&lt;/code&gt; indicates that the &lt;a href=&quot;https://www.w3.org/TR/css-variables-1/&quot;&gt;Custom Properties Level 1&lt;/a&gt; spec is supported. This means that custom properties are parsed statically, with only interpolation treated as SassScript.</source>
          <target state="translated">&lt;code&gt;custom-property&lt;/code&gt; 는 &lt;a href=&quot;https://www.w3.org/TR/css-variables-1/&quot;&gt;Custom Properties Level 1&lt;/a&gt; 사양이 지원됨을 나타냅니다 . 이는 사용자 정의 속성이 정적으로 구문 분석되고 보간 만 SassScript로 처리됨을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="08b49e8fd637e9898f905f5d8712420df43a8791" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;extend-selector-pseudoclass&lt;/code&gt; indicates that &lt;code&gt;@extend&lt;/code&gt; will reach into selector pseudoclasses like &lt;code&gt;:not&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;extend-selector-pseudoclass&lt;/code&gt; &lt;code&gt;@extend&lt;/code&gt; 는 @extend 가 &lt;code&gt;:not&lt;/code&gt; 과 같은 선택기 의사 클래스에 도달 함을 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="d786efc88702812f8288d5f1176e217bb454a8ee" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;global-variable-shadowing&lt;/code&gt; indicates that a local variable will shadow a global variable unless &lt;code&gt;!global&lt;/code&gt; is used.</source>
          <target state="translated">&lt;code&gt;global-variable-shadowing&lt;/code&gt; 은 &lt;code&gt;!global&lt;/code&gt; 을 사용 하지 않으면 지역 변수가 전역 변수를 음영 처리 함을 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="fb9fe82a9496f9cb031ec020ad5daee30964d6bc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;units-level-3&lt;/code&gt; indicates full support for unit arithmetic using units defined in the &lt;a href=&quot;http://www.w3.org/TR/css3-values/&quot;&gt;Values and Units Level 3&lt;/a&gt; spec.</source>
          <target state="translated">&lt;code&gt;units-level-3&lt;/code&gt; 은 &lt;a href=&quot;http://www.w3.org/TR/css3-values/&quot;&gt;Values ​​and Units Level 3&lt;/a&gt; 사양에 정의 된 단위를 사용하여 단위 산술을 완벽하게 지원함을 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="a6ce836227aa67152075180d778c697737a91f5e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; Control directives are an advanced feature, and are uncommon in day-to-day styling. They exist mainly for use in &lt;a href=&quot;#mixins&quot;&gt;mixins&lt;/a&gt;, particularly those that are part of libraries like &lt;a href=&quot;http://compass-style.org&quot;&gt;Compass&lt;/a&gt;, and so require substantial flexibility.</source>
          <target state="translated">&lt;strong&gt;참고 :&lt;/strong&gt; 제어 지시문은 고급 기능이며 일상적인 스타일에서는 일반적이지 않습니다. 그것들은 주로 &lt;a href=&quot;#mixins&quot;&gt;믹스&lt;/a&gt; 인 에서 사용하기 위해 존재하며 , 특히 &lt;a href=&quot;http://compass-style.org&quot;&gt;Compass&lt;/a&gt; 와 같은 라이브러리의 일부 이기 때문에 상당한 유연성이 필요합니다.</target>
        </trans-unit>
        <trans-unit id="7b0abf7d13ed6600e5060e92a8002ebbbe4bde97" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; when the &lt;code&gt;@content&lt;/code&gt; directive is specified more than once or in a loop, the style block will be duplicated with each invocation.</source>
          <target state="translated">&lt;strong&gt;참고 :&lt;/strong&gt; 때 &lt;code&gt;@content&lt;/code&gt; 의 지시가 두 번이나 루프에 비해 지정, 스타일 블록이 각각의 호출과 중복됩니다.</target>
        </trans-unit>
        <trans-unit id="d69f3d4b2a24c8313bb3d0b8ac837324f88fbec6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;invert&lt;/strong&gt;($color)</source>
          <target state="translated">&lt;strong&gt;invert&lt;/strong&gt;($color)</target>
        </trans-unit>
        <trans-unit id="c2e960d8c4ea3c2d0a9c5b927c6c0d0a9b47333b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;invert&lt;/strong&gt;($color, $weight:100%)</source>
          <target state="translated">&lt;strong&gt;반전&lt;/strong&gt; ($ color, $ weight : 100 %)</target>
        </trans-unit>
        <trans-unit id="998affe96cc2d3023b43945fdc0a99e32417046f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;random&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;random&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="19ffd7f7c2300537f6f9cc55d276a344545c0c2c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;random&lt;/strong&gt;($limit)</source>
          <target state="translated">&lt;strong&gt;random&lt;/strong&gt;($limit)</target>
        </trans-unit>
        <trans-unit id="c70b56739f39853ec65ee72a8ed5a083da4f0325" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;rgba&lt;/strong&gt;($color, $alpha)</source>
          <target state="translated">&lt;strong&gt;rgba&lt;/strong&gt; ($ color, $ alpha)</target>
        </trans-unit>
        <trans-unit id="3dd3a46979033a4aec6fa3d253ba74fa27b950cc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;rgba&lt;/strong&gt;($red, $green, $blue, $alpha)</source>
          <target state="translated">&lt;strong&gt;rgba&lt;/strong&gt; ($ red, $ green, $ blue, $ alpha)</target>
        </trans-unit>
        <trans-unit id="99a4a91c622a325dee3b3b9470ea62dfa23377ad" translate="yes" xml:space="preserve">
          <source>@-Rules and Directives</source>
          <target state="translated">@-규칙 및 지시문</target>
        </trans-unit>
        <trans-unit id="dcba8815d4d15801ec2f4cefdd2c2a259ddc2acb" translate="yes" xml:space="preserve">
          <source>@at-root</source>
          <target state="translated">@at-root</target>
        </trans-unit>
        <trans-unit id="ef6708134fa7004b0a92f751de2d83b4b7a0e966" translate="yes" xml:space="preserve">
          <source>@debug</source>
          <target state="translated">@debug</target>
        </trans-unit>
        <trans-unit id="5a104720fd47e5de4a82907b888ca895f1310a23" translate="yes" xml:space="preserve">
          <source>@each</source>
          <target state="translated">@each</target>
        </trans-unit>
        <trans-unit id="e9c9fd1acea7e30473cf8113ced9f44be8a1146e" translate="yes" xml:space="preserve">
          <source>@error</source>
          <target state="translated">@error</target>
        </trans-unit>
        <trans-unit id="85c52d8d21850e2499104c8dfad08304983611d2" translate="yes" xml:space="preserve">
          <source>@extend</source>
          <target state="translated">@extend</target>
        </trans-unit>
        <trans-unit id="b34b4c62edd15ca6ff9a3f5bde83ca12f4b09cb6" translate="yes" xml:space="preserve">
          <source>@for</source>
          <target state="translated">@for</target>
        </trans-unit>
        <trans-unit id="db03425959b005474abd611af6ef5e3662b26739" translate="yes" xml:space="preserve">
          <source>@function</source>
          <target state="translated">@function</target>
        </trans-unit>
        <trans-unit id="1ec590e5d8fee38b6fdcd4ef72bfa95e6f0a4e2b" translate="yes" xml:space="preserve">
          <source>@if</source>
          <target state="translated">@if</target>
        </trans-unit>
        <trans-unit id="685fc8fae398db6142746f337f47d2c9b98facef" translate="yes" xml:space="preserve">
          <source>@import</source>
          <target state="translated">@import</target>
        </trans-unit>
        <trans-unit id="15645e7890dae4357a8f002430138ef5ebf6eade" translate="yes" xml:space="preserve">
          <source>@include</source>
          <target state="translated">@include</target>
        </trans-unit>
        <trans-unit id="26e7f449aa5500e350b4c089e62efadfeb0ec524" translate="yes" xml:space="preserve">
          <source>@media</source>
          <target state="translated">@media</target>
        </trans-unit>
        <trans-unit id="4977549b85c2de13e3e29cf1d33aa5556514a430" translate="yes" xml:space="preserve">
          <source>@mixin</source>
          <target state="translated">@mixin</target>
        </trans-unit>
        <trans-unit id="88aeecad57af8adb36e5a66acad8e77aa1196762" translate="yes" xml:space="preserve">
          <source>@warn</source>
          <target state="translated">@warn</target>
        </trans-unit>
        <trans-unit id="115c4f12d1e9aef02100c94ecff9d02d0bcb2b4f" translate="yes" xml:space="preserve">
          <source>@while</source>
          <target state="translated">@while</target>
        </trans-unit>
        <trans-unit id="a03e991150701c8cabbdbd9f6368af7501c1f54e" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;-&lt;/code&gt; as part of an identifier. This means that &lt;code&gt;a-1&lt;/code&gt; is an unquoted string with value &lt;code&gt;&quot;a-1&quot;&lt;/code&gt;. The only exception are units; Sass normally allows any valid identifier to be used as an identifier, but identifiers may not contain a hyphen followed by a digit. This means that &lt;code&gt;5px-3px&lt;/code&gt; is the same as &lt;code&gt;5px - 3px&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;-&lt;/code&gt; 식별자의 일부. 이것은 &lt;code&gt;a-1&lt;/code&gt; 이 &lt;code&gt;&quot;a-1&quot;&lt;/code&gt; 값을 가진 인용되지 않은 문자열 임을 의미합니다 . 유일한 예외는 단위입니다. Sass는 일반적으로 유효한 식별자를 식별자로 사용할 수 있지만 식별자에는 하이픈과 숫자가 포함될 수 없습니다. 이 의미 &lt;code&gt;5px-3px&lt;/code&gt; 의은 과 동일 &lt;code&gt;5px - 3px&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="193cd471bd3b45edad177bfba5675a13de659093" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;-&lt;/code&gt; at the beginning of a literal number. This indicates a negative number, so &lt;code&gt;1 -2&lt;/code&gt; is a list containing &lt;code&gt;1&lt;/code&gt; and &lt;code&gt;-2&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;-&lt;/code&gt; 리터럴 숫자의 시작 부분에. 이것은 음수를 나타내므로 &lt;code&gt;1 -2&lt;/code&gt; 는 &lt;code&gt;1&lt;/code&gt; 과 &lt;code&gt;-2&lt;/code&gt; 를 포함하는 목록 입니다.</target>
        </trans-unit>
        <trans-unit id="8c1deda0d209cd7db92983b9dbbbdf6a99566671" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;-&lt;/code&gt; before a value. This indicates the unary negation operator; that is, the operator that takes a number and returns its negative.</source>
          <target state="translated">&lt;code&gt;-&lt;/code&gt; 값 전에. 단항 부정 연산자를 나타냅니다. 즉, 숫자를 가져 와서 음수를 반환하는 연산자입니다.</target>
        </trans-unit>
        <trans-unit id="adeb8c58e4817b2c6d53c42899d92470ff609f68" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;-&lt;/code&gt; between two numbers regardless of whitespace. This indicates subtraction, so &lt;code&gt;1 -$var&lt;/code&gt; are the same as &lt;code&gt;1 - $var&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;-&lt;/code&gt; 둘 사이의 숫자에 관계없이 공백의. 이것은 빼기를 나타냅니다, 그래서 &lt;code&gt;1 -$var&lt;/code&gt; 과 동일 &lt;code&gt;1 - $var&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="61f0e1893bc2b6cc14f2eca7c7f0fd2cc148ca52" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;-&lt;/code&gt; between two numbers with no whitespace. This indicates subtraction, so &lt;code&gt;1-2&lt;/code&gt; is the same as &lt;code&gt;1 - 2&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;-&lt;/code&gt; 어떤 공백을 두 숫자 사이. 이렇게하면, 뺄셈을 나타내는 &lt;code&gt;1-2&lt;/code&gt; 동일 그대로 &lt;code&gt;1 - 2&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="154fee1b2c14decf9b4de4c7e63a8439d6f45604" translate="yes" xml:space="preserve">
          <source>A common issue users encounter with named colors is that since Sass prefers the same output format as was typed in other output modes, a color interpolated into a selector becomes invalid syntax when compressed. To avoid this, always quote named colors if they are meant to be used in the construction of a selector.</source>
          <target state="translated">명명 된 색상에서 사용자가 겪는 일반적인 문제는 Sass가 다른 출력 모드에서 입력 한 것과 동일한 출력 형식을 선호하기 때문에 선택기에 삽입 된 색상은 압축시 유효하지 않은 구문이됩니다. 이 문제를 피하려면 선택기 구성에 사용하도록 명명 된 색상을 항상 인용하십시오.</target>
        </trans-unit>
        <trans-unit id="157cfd39cc5cf3a052d230d613a265d1ad77a7c8" translate="yes" xml:space="preserve">
          <source>A function reference is returned by &lt;code&gt;get-function($function-name)&lt;/code&gt;. The function can be passed to &lt;code&gt;call($function, $args...)&lt;/code&gt; and the function it refers to will be invoked. First class functions cannot be used directly as CSS output and any attempt to do so will result in an error.</source>
          <target state="translated">함수 참조는 &lt;code&gt;get-function($function-name)&lt;/code&gt; 의해 리턴됩니다 . 이 함수는 &lt;code&gt;call($function, $args...)&lt;/code&gt; 전달 될 수 있으며이 함수가 참조하는 함수가 호출됩니다. 일급 함수는 CSS 출력으로 직접 사용될 수 없으며 그렇게하면 오류가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="d447a151cb881d0caf36f5a6221e92300eed60f3" translate="yes" xml:space="preserve">
          <source>A single selector can extend more than one selector. This means that it inherits the styles of all the extended selectors. For example:</source>
          <target state="translated">단일 선택기는 둘 이상의 선택기를 확장 할 수 있습니다. 이는 모든 확장 선택기의 스타일을 상속 함을 의미합니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="d936d1852bc4fa1a45f91f044db4e76301ff2b4b" translate="yes" xml:space="preserve">
          <source>A stylesheet trace will be printed out along with the message so that the user being warned can see where their styles caused the warning.</source>
          <target state="translated">경고 메시지와 함께 스타일 시트 추적이 인쇄되어 사용자에게 경고가 발생한 스타일을 확인할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="fcce87dbaca01b0232b7405ed4588b438f12fbba" translate="yes" xml:space="preserve">
          <source>Add quotes to a string if the string isn't quoted, or returns the same string if it is.</source>
          <target state="translated">문자열이 인용되지 않은 경우 문자열에 인용 부호를 추가하거나 동일한 문자열을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="04291d822c581563dfd6a49a62547b404f34b725" translate="yes" xml:space="preserve">
          <source>Additionally, this makes it clear that the variables and mixins that are used within the passed block are related to the other styles around where the block is defined. For example:</source>
          <target state="translated">또한 전달 된 블록 내에서 사용되는 변수 및 믹스 인이 블록이 정의 된 다른 스타일과 관련이 있음을 알 수 있습니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="5ba03095ed756d89545e8e4d45e68b6d6810f77b" translate="yes" xml:space="preserve">
          <source>Advanced features like &lt;a href=&quot;#control_directives__expressions&quot;&gt;control directives&lt;/a&gt; for libraries</source>
          <target state="translated">라이브러리에 대한 &lt;a href=&quot;#control_directives__expressions&quot;&gt;제어 지시문&lt;/a&gt; 과 같은 고급 기능</target>
        </trans-unit>
        <trans-unit id="66c9f09fb34f12aa418f1467e869a64045c7dd88" translate="yes" xml:space="preserve">
          <source>All arithmetic operations are supported for color values, where they work piecewise. This means that the operation is performed on the red, green, and blue components in turn. For example:</source>
          <target state="translated">모든 산술 연산은 색상 값에 대해 지원되며 색상 값은 조각 단위로 작동합니다. 이는 작업이 빨간색, 녹색 및 파란색 구성 요소에서 차례로 수행됨을 의미합니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="7ac280ef7d6c3e0b4e951561c1a989b447c4ab88" translate="yes" xml:space="preserve">
          <source>All keys in the returned map that also appear in &lt;code&gt;$map1&lt;/code&gt; will have the same order as in &lt;code&gt;$map1&lt;/code&gt;. New keys from &lt;code&gt;$map2&lt;/code&gt; will be placed at the end of the map.</source>
          <target state="translated">도에 표시 반환되는 맵에서 모든 키 &lt;code&gt;$map1&lt;/code&gt; 에서와 같은 순서가됩니다 &lt;code&gt;$map1&lt;/code&gt; . &lt;code&gt;$map2&lt;/code&gt; 새 키 는지도 끝에 위치합니다.</target>
        </trans-unit>
        <trans-unit id="a43e8e47594b3afd03b0a150ad739fa90b6060b3" translate="yes" xml:space="preserve">
          <source>All properties are optional. You can't specify both RGB properties (&lt;code&gt;$red&lt;/code&gt;, &lt;code&gt;$green&lt;/code&gt;, &lt;code&gt;$blue&lt;/code&gt;) and HSL properties (&lt;code&gt;$hue&lt;/code&gt;, &lt;code&gt;$saturation&lt;/code&gt;, &lt;code&gt;$value&lt;/code&gt;) at the same time.</source>
          <target state="translated">모든 속성은 선택 사항입니다. RGB 속성 ( &lt;code&gt;$red&lt;/code&gt; , &lt;code&gt;$green&lt;/code&gt; , &lt;code&gt;$blue&lt;/code&gt; )과 HSL 속성 ( &lt;code&gt;$hue&lt;/code&gt; , &lt;code&gt;$saturation&lt;/code&gt; , &lt;code&gt;$value&lt;/code&gt; )을 동시에 지정할 수는 없습니다 .</target>
        </trans-unit>
        <trans-unit id="125bea08d893381e5572473ba0429c3294a3b5a5" translate="yes" xml:space="preserve">
          <source>All properties are optional. You can't specify both RGB properties (&lt;code&gt;$red&lt;/code&gt;, &lt;code&gt;$green&lt;/code&gt;, &lt;code&gt;$blue&lt;/code&gt;) and HSL properties (&lt;code&gt;$saturation&lt;/code&gt;, &lt;code&gt;$value&lt;/code&gt;) at the same time.</source>
          <target state="translated">모든 속성은 선택 사항입니다. RGB 속성 ( &lt;code&gt;$red&lt;/code&gt; , &lt;code&gt;$green&lt;/code&gt; , &lt;code&gt;$blue&lt;/code&gt; )과 HSL 속성 ( &lt;code&gt;$saturation&lt;/code&gt; , &lt;code&gt;$value&lt;/code&gt; )을 동시에 지정할 수는 없습니다 .</target>
        </trans-unit>
        <trans-unit id="fe6cb7ea0921a92ae0f6e5d105fbf75a3e817b44" translate="yes" xml:space="preserve">
          <source>All types support equality operations (&lt;code&gt;==&lt;/code&gt; and &lt;code&gt;!=&lt;/code&gt;). In addition, each type has its own operations that it has special support for.</source>
          <target state="translated">모든 유형은 동등 연산 ( &lt;code&gt;==&lt;/code&gt; 및 &lt;code&gt;!=&lt;/code&gt; )을 지원합니다. 또한 각 유형마다 특별한 지원을받는 자체 작업이 있습니다.</target>
        </trans-unit>
        <trans-unit id="86543bbb7632f613befb35c7c5a32aa40aba5a10" translate="yes" xml:space="preserve">
          <source>Although most of the time it's most useful to just have &lt;code&gt;@import&lt;/code&gt;s at the top level of the document, it is possible to include them within CSS rules and &lt;code&gt;@media&lt;/code&gt; rules. Like a base-level &lt;code&gt;@import&lt;/code&gt;, this includes the contents of the &lt;code&gt;@import&lt;/code&gt;ed file. However, the imported rules will be nested in the same place as the original &lt;code&gt;@import&lt;/code&gt;.</source>
          <target state="translated">대부분의 경우 &lt;code&gt;@import&lt;/code&gt; 를 문서의 최상위 수준에 두는 것이 가장 유용하지만 CSS 규칙 및 &lt;code&gt;@media&lt;/code&gt; 규칙 에 포함시킬 수 있습니다 . 기본 레벨 &lt;code&gt;@import&lt;/code&gt; 와 마찬가지로 여기에는 &lt;code&gt;@import&lt;/code&gt; ed 파일 의 내용이 포함 됩니다. 그러나 가져온 규칙은 원래 &lt;code&gt;@import&lt;/code&gt; 와 동일한 위치에 중첩됩니다 .</target>
        </trans-unit>
        <trans-unit id="a608b14eba2288e2c695734f2e5da81c70252082" translate="yes" xml:space="preserve">
          <source>Although the default CSS style that Sass outputs is very nice and reflects the structure of the document, tastes and needs vary and so Sass supports several other styles.</source>
          <target state="translated">Sass가 출력하는 기본 CSS 스타일은 매우 훌륭하고 문서의 구조를 반영하지만 취향과 요구는 다양하므로 Sass는 다른 여러 스타일을 지원합니다.</target>
        </trans-unit>
        <trans-unit id="51c7b2caff14a4ce17e1878713a21b3e03395c01" translate="yes" xml:space="preserve">
          <source>And our styles like so:</source>
          <target state="translated">그리고 우리의 스타일은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="db27dd45d29e037a2764d34fc2ed6dd2c10bb8f6" translate="yes" xml:space="preserve">
          <source>Any CSS color expression returns a SassScript Color value. This includes &lt;a href=&quot;https://github.com/nex3/sass/blob/stable/lib/sass/script/value/color.rb#L28-L180&quot;&gt;a large number of named colors&lt;/a&gt; which are indistinguishable from unquoted strings.</source>
          <target state="translated">CSS 색상 표현식은 SassScript 색상 값을 반환합니다. 여기에는 인용되지 않은 문자열과 구별 할 수없는 &lt;a href=&quot;https://github.com/nex3/sass/blob/stable/lib/sass/script/value/color.rb#L28-L180&quot;&gt;많은 명명 된 색상&lt;/a&gt; 이 포함 됩니다.</target>
        </trans-unit>
        <trans-unit id="4be6e1118bd7462315e6716d0fbb6daeccd31965" translate="yes" xml:space="preserve">
          <source>Appends a single value onto the end of a list.</source>
          <target state="translated">목록 끝에 단일 값을 추가합니다.</target>
        </trans-unit>
        <trans-unit id="cce2c3d65ec0dc7853ed2b80248b0b728a086f97" translate="yes" xml:space="preserve">
          <source>Arguments #mixin-arguments</source>
          <target state="translated">인수 # mixin-arguments</target>
        </trans-unit>
        <trans-unit id="2269a199612acebe7dd279929b879be6d949bb79" translate="yes" xml:space="preserve">
          <source>Arithmetic operations also work between numbers and colors, also piecewise. For example:</source>
          <target state="translated">산술 연산은 숫자와 색상 사이에서도 작동합니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="5618067f9273165ba4197092d7b80ae6148d2216" translate="yes" xml:space="preserve">
          <source>As with mixins, you can call Sass-defined functions using keyword arguments. In the above example we could have called the function like this:</source>
          <target state="translated">믹스 인과 마찬가지로 키워드 인수를 사용하여 Sass 정의 함수를 호출 할 수 있습니다. 위의 예에서 다음과 같이 함수를 호출 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9dc163a318ec71495b41ecd8cab7d3c17ef17bba" translate="yes" xml:space="preserve">
          <source>As you can see functions can access any globally defined variables as well as accept arguments just like a mixin. A function may have several statements contained within it, and you must call &lt;code&gt;@return&lt;/code&gt; to set the return value of the function.</source>
          <target state="translated">보시다시피 함수는 전역 적으로 정의 된 변수에 액세스 할 수있을뿐만 아니라 믹스 인처럼 인수를 허용 할 수 있습니다. 함수에는 몇 개의 명령문이 포함되어있을 수 있으며 함수 의 반환 값을 설정하려면 &lt;code&gt;@return&lt;/code&gt; 을 호출해야합니다 .</target>
        </trans-unit>
        <trans-unit id="e949293bb3141d39921183faafd54e8bcb4089c2" translate="yes" xml:space="preserve">
          <source>Becomes:</source>
          <target state="translated">Becomes:</target>
        </trans-unit>
        <trans-unit id="807b1864fdb6805b8347ae2bc9a6c20e8e44cbff" translate="yes" xml:space="preserve">
          <source>Boolean Operations</source>
          <target state="translated">부울 연산</target>
        </trans-unit>
        <trans-unit id="30d9ef559552bdd87313d89c8796d8136275e739" translate="yes" xml:space="preserve">
          <source>Boolean operations</source>
          <target state="translated">부울 연산</target>
        </trans-unit>
        <trans-unit id="3aaeedb59d7c28a348007b7773439ae8e9886ef7" translate="yes" xml:space="preserve">
          <source>Bracketed Lists</source>
          <target state="translated">브라켓 목록</target>
        </trans-unit>
        <trans-unit id="a6f6a57b5a3f46981dddd10346050b6e06f08985" translate="yes" xml:space="preserve">
          <source>But this is an error:</source>
          <target state="translated">그러나 이것은 오류입니다.</target>
        </trans-unit>
        <trans-unit id="abce43ffefd078f9142d010888db83a79e434b11" translate="yes" xml:space="preserve">
          <source>By default, &lt;code&gt;@at-root&lt;/code&gt; just excludes selectors. However, it's also possible to use &lt;code&gt;@at-root&lt;/code&gt; to move outside of nested directives such as &lt;code&gt;@media&lt;/code&gt; as well. For example:</source>
          <target state="translated">기본적으로 &lt;code&gt;@at-root&lt;/code&gt; 는 선택기를 제외합니다. 그러나 &lt;code&gt;@at-root&lt;/code&gt; 를 사용 하여 &lt;code&gt;@media&lt;/code&gt; 와 같은 중첩 지시문 외부로 이동할 수도 있습니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="2fe88cde95e84d01f471f4a3ab36323da21b80f2" translate="yes" xml:space="preserve">
          <source>By default, Sass caches compiled templates and &lt;a href=&quot;#partials&quot;&gt;partials&lt;/a&gt;. This dramatically speeds up re-compilation of large collections of Sass files, and works best if the Sass templates are split up into separate files that are all &lt;a href=&quot;#import&quot;&gt;&lt;code&gt;@import&lt;/code&gt;&lt;/a&gt;ed into one large file.</source>
          <target state="translated">기본적으로 Sass는 컴파일 된 템플릿과 &lt;a href=&quot;#partials&quot;&gt;partials를&lt;/a&gt; 캐시 합니다. 이 극적으로 말대꾸 파일의 큰 컬렉션의 재 컴파일을 가속화하고, 말대꾸 템플릿이 모두 별도의 파일로 분할하는 경우 최선을 작동 &lt;a href=&quot;#import&quot;&gt; &lt;code&gt;@import&lt;/code&gt; 의&lt;/a&gt; 하나 개의 큰 파일에 에디션.</target>
        </trans-unit>
        <trans-unit id="052f3e4c4c42a6510daac6e1643c59d2771b0017" translate="yes" xml:space="preserve">
          <source>By default, if two values are placed next to one another, they are concatenated with a space:</source>
          <target state="translated">기본적으로 두 값이 서로 옆에 있으면 공백으로 연결됩니다.</target>
        </trans-unit>
        <trans-unit id="f135828b4bad3068ebe91784e7665129f7d3105b" translate="yes" xml:space="preserve">
          <source>CSS Extensions</source>
          <target state="translated">CSS 확장</target>
        </trans-unit>
        <trans-unit id="11c9caba726875048627b11ab3c9553ebeaae46d" translate="yes" xml:space="preserve">
          <source>CSS allows &lt;code&gt;/&lt;/code&gt; to appear in property values as a way of separating numbers. Since SassScript is an extension of the CSS property syntax, it must support this, while also allowing &lt;code&gt;/&lt;/code&gt; to be used for division. This means that by default, if two numbers are separated by &lt;code&gt;/&lt;/code&gt; in SassScript, then they will appear that way in the resulting CSS.</source>
          <target state="translated">CSS를 사용하면 숫자를 구분하는 방법으로 &lt;code&gt;/&lt;/code&gt; 가 속성 값에 나타날 수 있습니다. SassScript는 CSS 속성 구문의 확장이므로이를 지원해야 하며 나누기 위해 &lt;code&gt;/&lt;/code&gt; 를 사용할 수도 있습니다. 이것은 기본적으로 두 숫자가 &lt;code&gt;/&lt;/code&gt; 로 SassScript에서 분리 되면 결과 CSS에 그런 식으로 나타납니다.</target>
        </trans-unit>
        <trans-unit id="ba1cdda9f66bf797708dfc5b937fc63323ce3238" translate="yes" xml:space="preserve">
          <source>CSS has quite a few properties that are in &quot;namespaces;&quot; for instance, &lt;code&gt;font-family&lt;/code&gt;, &lt;code&gt;font-size&lt;/code&gt;, and &lt;code&gt;font-weight&lt;/code&gt; are all in the &lt;code&gt;font&lt;/code&gt; namespace. In CSS, if you want to set a bunch of properties in the same namespace, you have to type it out each time. Sass provides a shortcut for this: just write the namespace once, then nest each of the sub-properties within it. For example:</source>
          <target state="translated">CSS에는 &quot;네임 스페이스&quot;에있는 몇 가지 속성이 있습니다. 예를 들어 &lt;code&gt;font-family&lt;/code&gt; , &lt;code&gt;font-size&lt;/code&gt; 및 &lt;code&gt;font-weight&lt;/code&gt; 는 모두 &lt;code&gt;font&lt;/code&gt; 네임 스페이스에 있습니다. CSS에서 동일한 네임 스페이스에 여러 속성을 설정하려면 매번 입력해야합니다. Sass는 이에 대한 지름길을 제공합니다. 네임 스페이스를 한 번 작성한 다음 각 하위 속성을 그 안에 중첩시킵니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="ad57f67b80e922568da5789930eb46aea8f12fa9" translate="yes" xml:space="preserve">
          <source>CSS specifies two kinds of strings: those with quotes, such as &lt;code&gt;&quot;Lucida Grande&quot;&lt;/code&gt; or &lt;code&gt;'http://sass-lang.com'&lt;/code&gt;, and those without quotes, such as &lt;code&gt;sans-serif&lt;/code&gt; or &lt;code&gt;bold&lt;/code&gt;. SassScript recognizes both kinds, and in general if one kind of string is used in the Sass document, that kind of string will be used in the resulting CSS.</source>
          <target state="translated">CSS는 &lt;code&gt;&quot;Lucida Grande&quot;&lt;/code&gt; 또는 &lt;code&gt;'http://sass-lang.com'&lt;/code&gt; 과 같이 따옴표가있는 문자열 과 &lt;code&gt;sans-serif&lt;/code&gt; 또는 &lt;code&gt;bold&lt;/code&gt; 와 같이 따옴표가없는 문자열의 두 가지 문자열을 지정합니다 . SassScript는 두 종류를 모두 인식하며 일반적으로 Sass 문서에서 한 종류의 문자열이 사용되면 결과 CSS에 해당 종류의 문자열이 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="1133721a8c022238bccc194ce97bed010598bd2e" translate="yes" xml:space="preserve">
          <source>Cache Stores</source>
          <target state="translated">캐시 저장소</target>
        </trans-unit>
        <trans-unit id="60790f7c84170a8b87051d7e857118ffeb0465ee" translate="yes" xml:space="preserve">
          <source>Caching</source>
          <target state="translated">Caching</target>
        </trans-unit>
        <trans-unit id="73c612fa492373c12b00ddfaacb6f97332482cb4" translate="yes" xml:space="preserve">
          <source>Chaining Extends</source>
          <target state="translated">체인 확장</target>
        </trans-unit>
        <trans-unit id="eca60043dfb6716b9d39e625e5782f9e5329b517" translate="yes" xml:space="preserve">
          <source>Changes one or more properties of a color. This can change the red, green, blue, hue, saturation, value, and alpha properties. The properties are specified as keyword arguments, and replace the color's current value for that property.</source>
          <target state="translated">색상의 하나 이상의 속성을 변경합니다. 빨강, 녹색, 파랑, 색조, 채도, 값 및 알파 속성을 변경할 수 있습니다. 속성은 키워드 인수로 지정되며 해당 속성에 대한 색상의 현재 값을 대체합니다.</target>
        </trans-unit>
        <trans-unit id="645b44959c6f608356871354280303d974b2e5af" translate="yes" xml:space="preserve">
          <source>Changes the hue of a color. Takes a color and a number of degrees (usually between &lt;code&gt;-360deg&lt;/code&gt; and &lt;code&gt;360deg&lt;/code&gt;), and returns a color with the hue rotated along the color wheel by that amount.</source>
          <target state="translated">색상의 색조를 변경합니다. 색상과 각도를 취하고 (보통 &lt;code&gt;-360deg&lt;/code&gt; ~ &lt;code&gt;360deg&lt;/code&gt; 사이 ) 색상 휠을 따라 색조가 그 정도 회전 한 색상으로 색상을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="f7b6149d4715f6744ca97dc7ad3c2bec411941c6" translate="yes" xml:space="preserve">
          <source>Check whether a function with the given name exists.</source>
          <target state="translated">주어진 이름의 함수가 존재하는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="7fd5ed60e2bc8ac95cbe2fb4d9d02b73628ad233" translate="yes" xml:space="preserve">
          <source>Check whether a mixin was passed a content block.</source>
          <target state="translated">믹스 인이 콘텐츠 블록을 통과했는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="865e1cb6215af49ad8e06d669d67e16d5b05998e" translate="yes" xml:space="preserve">
          <source>Check whether a mixin with the given name exists.</source>
          <target state="translated">주어진 이름의 믹스 인이 있는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="b27aa16101e76a160857d563e034631e0ebc471d" translate="yes" xml:space="preserve">
          <source>Check whether a variable with the given name exists in the current scope or in the global scope.</source>
          <target state="translated">지정된 이름의 변수가 현재 범위 또는 전역 범위에 있는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="321d74d619f0473650227715ea1db5bdb208a376" translate="yes" xml:space="preserve">
          <source>Check whether a variable with the given name exists in the global scope (at the top level of the file).</source>
          <target state="translated">지정된 이름의 변수가 전역 범위 (파일의 최상위 레벨)에 있는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="d18d758687d5a06742caa4babacf7fd7e8df6eb7" translate="yes" xml:space="preserve">
          <source>Class selectors aren't the only things that can be extended. It's possible to extend any selector involving only a single element, such as &lt;code&gt;.special.cool&lt;/code&gt;, &lt;code&gt;a:hover&lt;/code&gt;, or &lt;code&gt;a.user[href^=&quot;http://&quot;]&lt;/code&gt;. For example:</source>
          <target state="translated">클래스 선택기 만 확장 할 수있는 것은 아닙니다. &lt;code&gt;.special.cool&lt;/code&gt; , &lt;code&gt;a:hover&lt;/code&gt; 또는 &lt;code&gt;a.user[href^=&quot;http://&quot;]&lt;/code&gt; 와 같은 단일 요소 만 포함하는 선택기를 확장 할 수 있습니다 . 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="d6df5380103d61e08233c5e322a08284a4da07df" translate="yes" xml:space="preserve">
          <source>Color Operations</source>
          <target state="translated">컬러 조작</target>
        </trans-unit>
        <trans-unit id="0d2162101a17d69e7f8570a0625cc4f64b705689" translate="yes" xml:space="preserve">
          <source>Color operations</source>
          <target state="translated">컬러 조작</target>
        </trans-unit>
        <trans-unit id="88d5e4cac104ffc3f02dd54f2f0f1074fd33fd9b" translate="yes" xml:space="preserve">
          <source>Colors</source>
          <target state="translated">Colors</target>
        </trans-unit>
        <trans-unit id="df455815e242c90c393d63858a2a2d31de4c507f" translate="yes" xml:space="preserve">
          <source>Combines several lists into a single multidimensional list. The nth value of the resulting list is a space separated list of the source lists' nth values.</source>
          <target state="translated">여러 목록을 단일 다차원 목록으로 결합합니다. 결과 목록의 n 번째 값은 소스 목록의 n 번째 값을 공백으로 구분 한 목록입니다.</target>
        </trans-unit>
        <trans-unit id="23acf758eac39d13ef4d0c29b8ee402b4213dc7d" translate="yes" xml:space="preserve">
          <source>Comma-separated lists may have a trailing comma. This is especially useful because it allows you to represent a single-element list. For example, &lt;code&gt;(1,)&lt;/code&gt; is a list containing &lt;code&gt;1&lt;/code&gt; and &lt;code&gt;(1 2 3,)&lt;/code&gt; is a comma-separated list containing a space-separated list containing &lt;code&gt;1&lt;/code&gt;, &lt;code&gt;2&lt;/code&gt;, and &lt;code&gt;3&lt;/code&gt;.</source>
          <target state="translated">쉼표로 구분 된 목록에는 후행 쉼표가있을 수 있습니다. 단일 요소 목록을 나타낼 수 있기 때문에 특히 유용합니다. 예를 들어, &lt;code&gt;(1,)&lt;/code&gt; 은 &lt;code&gt;1&lt;/code&gt; 을 포함하는 목록 이고 &lt;code&gt;(1 2 3,)&lt;/code&gt; 은 &lt;code&gt;1&lt;/code&gt; , &lt;code&gt;2&lt;/code&gt; 및 &lt;code&gt;3&lt;/code&gt; 을 포함하는 공백으로 구분 된 목록을 포함하는 쉼표로 구분 된 목록 입니다.</target>
        </trans-unit>
        <trans-unit id="a7a38ec729aeaa15df19be0178eaf0ecc948917a" translate="yes" xml:space="preserve">
          <source>Comments: &lt;code&gt;/* */&lt;/code&gt; and &lt;code&gt;//&lt;/code&gt; #comments</source>
          <target state="translated">댓글 : &lt;code&gt;/* */&lt;/code&gt; and &lt;code&gt;//&lt;/code&gt; #comments</target>
        </trans-unit>
        <trans-unit id="445e6645c6a9923c39870045b0cde9cb751b2f2a" translate="yes" xml:space="preserve">
          <source>Compact style takes up less space than Nested or Expanded. It also draws the focus more to the selectors than to their properties. Each CSS rule takes up only one line, with every property defined on that line. Nested rules are placed next to each other with no newline, while separate groups of rules have newlines between them. For example:</source>
          <target state="translated">컴팩트 한 스타일은 중첩 또는 확장보다 공간을 덜 차지합니다. 또한 선택기보다 속성에 더 초점을 맞 춥니 다. 각 CSS 규칙은 한 줄만 차지하며 모든 속성은 해당 줄에 정의되어 있습니다. 중첩 된 규칙은 줄 바꿈없이 서로 나란히 배치되며 별도의 규칙 그룹에는 줄 바꿈이 있습니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="3485c75f6a3d9f536d10e39df4db2f9a0c62a6f9" translate="yes" xml:space="preserve">
          <source>Compiles to:</source>
          <target state="translated">컴파일 :</target>
        </trans-unit>
        <trans-unit id="d195432d0455b674e0118f308b2ff4629632f6fd" translate="yes" xml:space="preserve">
          <source>Compressed style takes up the minimum amount of space possible, having no whitespace except that necessary to separate selectors and a newline at the end of the file. It also includes some other minor compressions, such as choosing the smallest representation for colors. It's not meant to be human-readable. For example:</source>
          <target state="translated">압축 스타일은 가능한 최소 공간을 차지하며 파일 끝에서 선택기와 줄 바꿈을 구분하는 데 필요한 것 외에는 공백이 없습니다. 또한 색상에 대한 가장 작은 표현 선택과 같은 다른 작은 압축도 포함됩니다. 사람이 읽을 수있는 것은 아닙니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="9deed2c5337163a9ab591b313f5a7dac1113d5f4" translate="yes" xml:space="preserve">
          <source>Control Directives &amp;amp; Expressions</source>
          <target state="translated">제어 지시문 및 표현</target>
        </trans-unit>
        <trans-unit id="71f154cd105e82b7c49288856cd86e0f5487913b" translate="yes" xml:space="preserve">
          <source>Convert a string to lower case,</source>
          <target state="translated">문자열을 소문자로 변환</target>
        </trans-unit>
        <trans-unit id="6b21d0486eeef03032c1d67a4ee9785b9fcf77f1" translate="yes" xml:space="preserve">
          <source>Converts a color into the format understood by IE filters.</source>
          <target state="translated">색상을 IE 필터가 이해하는 형식으로 변환합니다.</target>
        </trans-unit>
        <trans-unit id="9684475df202935931f04f410b2c1ea2483c0156" translate="yes" xml:space="preserve">
          <source>Converts a color to grayscale. This is identical to &lt;code&gt;desaturate(color, 100%)&lt;/code&gt;.</source>
          <target state="translated">색상을 회색조로 변환합니다. 이것은 &lt;code&gt;desaturate(color, 100%)&lt;/code&gt; 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="d457eedad5466b3ddfa4fb5c99c68fb4266c354d" translate="yes" xml:space="preserve">
          <source>Converts a string to upper case.</source>
          <target state="translated">문자열을 대문자로 변환합니다.</target>
        </trans-unit>
        <trans-unit id="e624414019df20a7e07723ca59066175e66b4a1b" translate="yes" xml:space="preserve">
          <source>Converts a unitless number to a percentage.</source>
          <target state="translated">단위가없는 숫자를 백분율로 변환합니다.</target>
        </trans-unit>
        <trans-unit id="95fd9a2b31b0e500bf929d57f8003e0617580055" translate="yes" xml:space="preserve">
          <source>Creates a &lt;a href=&quot;http://sass-lang.com/documentation/Sass/Script/Value/Color.html&quot;&gt;Color&lt;/a&gt; from hue, saturation, and lightness values. Uses the algorithm from the &lt;a href=&quot;http://www.w3.org/TR/css3-color/#hsl-color&quot;&gt;CSS3 spec&lt;/a&gt;.</source>
          <target state="translated">작성 &lt;a href=&quot;http://sass-lang.com/documentation/Sass/Script/Value/Color.html&quot;&gt;색상&lt;/a&gt; 색조, 채도 및 밝기 값에서. &lt;a href=&quot;http://www.w3.org/TR/css3-color/#hsl-color&quot;&gt;CSS3 spec&lt;/a&gt; 의 알고리즘을 사용합니다 .</target>
        </trans-unit>
        <trans-unit id="8ea63ea6358619ae5ecf5289b7c9c06781f8fc09" translate="yes" xml:space="preserve">
          <source>Creates a &lt;a href=&quot;http://sass-lang.com/documentation/Sass/Script/Value/Color.html&quot;&gt;Color&lt;/a&gt; from hue, saturation, lightness, and alpha values. Uses the algorithm from the &lt;a href=&quot;http://www.w3.org/TR/css3-color/#hsl-color&quot;&gt;CSS3 spec&lt;/a&gt;.</source>
          <target state="translated">작성 &lt;a href=&quot;http://sass-lang.com/documentation/Sass/Script/Value/Color.html&quot;&gt;색상&lt;/a&gt; , 채도, 명도, 및 알파 값으로부터. &lt;a href=&quot;http://www.w3.org/TR/css3-color/#hsl-color&quot;&gt;CSS3 spec&lt;/a&gt; 의 알고리즘을 사용합니다 .</target>
        </trans-unit>
        <trans-unit id="ac28f39b37bdbc59a1b7e925d3c9cc4f9cf9f1b9" translate="yes" xml:space="preserve">
          <source>Creates a &lt;a href=&quot;http://sass-lang.com/documentation/Sass/Script/Value/Color.html&quot;&gt;Color&lt;/a&gt; from red, green, blue, and alpha values.</source>
          <target state="translated">빨강, 녹색, 파랑 및 알파 값에서 &lt;a href=&quot;http://sass-lang.com/documentation/Sass/Script/Value/Color.html&quot;&gt;색상&lt;/a&gt; 을 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="2521a7b44a785bcadad1d6a4d169e3865eecb6c0" translate="yes" xml:space="preserve">
          <source>Creates a &lt;a href=&quot;http://sass-lang.com/documentation/Sass/Script/Value/Color.html&quot;&gt;Color&lt;/a&gt; object from red, green, and blue values.</source>
          <target state="translated">빨강, 녹색 및 파랑 값 으로 &lt;a href=&quot;http://sass-lang.com/documentation/Sass/Script/Value/Color.html&quot;&gt;Color&lt;/a&gt; 객체를 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="4e9d161b8d29bfcca25547a243af442d776ac7c9" translate="yes" xml:space="preserve">
          <source>Custom Importers</source>
          <target state="translated">맞춤 수입 업체</target>
        </trans-unit>
        <trans-unit id="c18842877f84be9bb3ae10673c4e60242f22c160" translate="yes" xml:space="preserve">
          <source>Data Types</source>
          <target state="translated">데이터 타입</target>
        </trans-unit>
        <trans-unit id="898f9830669a73679909a1ae8342f80baaf665b8" translate="yes" xml:space="preserve">
          <source>Defining Custom Sass Functions</source>
          <target state="translated">사용자 정의 Sass 기능 정의</target>
        </trans-unit>
        <trans-unit id="8203cf8bdf7f782985420e4895696946c281640d" translate="yes" xml:space="preserve">
          <source>Defining a Mixin: &lt;code&gt;@mixin&lt;/code&gt; #defining_a_mixin</source>
          <target state="translated">: 믹스 인 정의 &lt;code&gt;@mixin&lt;/code&gt; 의 #defining_a_mixin을</target>
        </trans-unit>
        <trans-unit id="0f18a03692136fa8859650df488eacf787582202" translate="yes" xml:space="preserve">
          <source>Directives that are only allowed at the base level of a document, like &lt;code&gt;@mixin&lt;/code&gt; or &lt;code&gt;@charset&lt;/code&gt;, are not allowed in files that are &lt;code&gt;@import&lt;/code&gt;ed in a nested context.</source>
          <target state="translated">&lt;code&gt;@mixin&lt;/code&gt; 또는 &lt;code&gt;@charset&lt;/code&gt; 과 같이 문서의 기본 수준에서만 허용되는 지시문 은 중첩 된 컨텍스트에서 &lt;code&gt;@import&lt;/code&gt; 파일에서 허용되지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="fc8d766acf59d2fe96d62baada8ad0e3ad9012f6" translate="yes" xml:space="preserve">
          <source>Division and &lt;code&gt;/&lt;/code&gt;</source>
          <target state="translated">구분 및 &lt;code&gt;/&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8e10ab59ae4fcb59a888f51ad37087162ea13962" translate="yes" xml:space="preserve">
          <source>Dynamically calls a function. This can call user-defined functions, built-in functions, or plain CSS functions. It will pass along all arguments, including keyword arguments, to the called function.</source>
          <target state="translated">동적으로 함수를 호출합니다. 사용자 정의 함수, 내장 함수 또는 일반 CSS 함수를 호출 할 수 있습니다. 키워드 인수를 포함한 모든 인수를 호출 된 함수에 전달합니다.</target>
        </trans-unit>
        <trans-unit id="68392ce2960a57ba353d3f13ae7ee60e03e899f2" translate="yes" xml:space="preserve">
          <source>Each importer is in charge of a single load path (or whatever the corresponding notion is for the backend). Importers can be placed in the &lt;a href=&quot;file.sass_reference#load_paths-option&quot;&gt;&lt;code&gt;:load_paths&lt;/code&gt; array&lt;/a&gt; alongside normal filesystem paths.</source>
          <target state="translated">각 수입 업체는 단일로드 경로 (또는 해당 개념이 백엔드에 대한 모든 것)를 담당합니다. 임포터는 일반 파일 시스템 경로와 함께 &lt;a href=&quot;file.sass_reference#load_paths-option&quot;&gt; &lt;code&gt;:load_paths&lt;/code&gt; 배열에&lt;/a&gt; 배치 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="2fa8c43e978e9b266be22696d2cd1760984d3189" translate="yes" xml:space="preserve">
          <source>Either syntax can &lt;a href=&quot;#import&quot;&gt;import&lt;/a&gt; files written in the other. Files can be automatically converted from one syntax to the other using the &lt;code&gt;sass-convert&lt;/code&gt; command line tool:</source>
          <target state="translated">어느 구문이든 다른 것으로 작성된 파일 을 &lt;a href=&quot;#import&quot;&gt;가져올&lt;/a&gt; 수 있습니다 . &lt;code&gt;sass-convert&lt;/code&gt; 명령 줄 도구를 사용하여 파일을 한 구문에서 다른 구문으로 자동 변환 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="91e7aa89332b6cee8751327a9d69e3cd920f8ea8" translate="yes" xml:space="preserve">
          <source>Encodings</source>
          <target state="translated">Encodings</target>
        </trans-unit>
        <trans-unit id="fb3447b632f6a431215776dcf254a01001a40c4f" translate="yes" xml:space="preserve">
          <source>Examples:</source>
          <target state="translated">Examples:</target>
        </trans-unit>
        <trans-unit id="579054b5c7668447dc3b53376cf13deb9fcdb730" translate="yes" xml:space="preserve">
          <source>Expanded is a more typical human-made CSS style, with each property and rule taking up one line. Properties are indented within the rules, but the rules aren't indented in any special way. For example:</source>
          <target state="translated">확장은보다 일반적인 인간 제작 CSS 스타일이며 각 속성과 규칙이 한 줄을 차지합니다. 속성은 규칙 내에서 들여 쓰기되지만 규칙은 특별한 방식으로 들여 쓰기되지 않습니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="a229ec8a2034bfb253b92686ee4eca45cab34178" translate="yes" xml:space="preserve">
          <source>Extending Complex Selectors</source>
          <target state="translated">복잡한 선택기 확장</target>
        </trans-unit>
        <trans-unit id="f46eaf9e68b3c7dd0746d876f8359452d6de2be3" translate="yes" xml:space="preserve">
          <source>Extending Sass</source>
          <target state="translated">사스 확장</target>
        </trans-unit>
        <trans-unit id="3fb05721565b72d093773ab35b705266f5964660" translate="yes" xml:space="preserve">
          <source>Extracts a substring from &lt;code&gt;$string&lt;/code&gt;. The substring will begin at index &lt;code&gt;$start-at&lt;/code&gt; and ends at index &lt;code&gt;$end-at&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;$string&lt;/code&gt; 에서 하위 문자열을 추출 합니다 . 하위 문자열은 &lt;code&gt;$start-at&lt;/code&gt; at 인덱스에서 시작하여 &lt;code&gt;$end-at&lt;/code&gt; 인덱스에서 끝납니다 .</target>
        </trans-unit>
        <trans-unit id="fc338f87a058158eb824b53705961801516a9460" translate="yes" xml:space="preserve">
          <source>Features</source>
          <target state="translated">Features</target>
        </trans-unit>
        <trans-unit id="c37d5972b4dc90de530c696364f3eb68d358ac2f" translate="yes" xml:space="preserve">
          <source>Finally, &lt;code&gt;@media&lt;/code&gt; queries can contain SassScript expressions (including variables, functions, and operators) in place of the feature names and feature values. For example:</source>
          <target state="translated">마지막으로 &lt;code&gt;@media&lt;/code&gt; 쿼리는 기능 이름 및 기능 값 대신 SassScript 표현식 (변수, 함수 및 연산자 포함)을 포함 할 수 있습니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="dab7b11071cc2e100a0eb40417977bd5453399f6" translate="yes" xml:space="preserve">
          <source>Finds the maximum of several numbers. This function takes any number of arguments.</source>
          <target state="translated">최대 몇 개의 숫자를 찾습니다. 이 함수는 여러 인수를 취합니다.</target>
        </trans-unit>
        <trans-unit id="8f7afccca6862e4f42d2d8243dbed946daf04405" translate="yes" xml:space="preserve">
          <source>Finds the minimum of several numbers. This function takes any number of arguments.</source>
          <target state="translated">여러 숫자의 최소값을 찾습니다. 이 함수는 여러 인수를 취합니다.</target>
        </trans-unit>
        <trans-unit id="b1ad7dec23f44c9e45424cbc973d96b8fc33c7bc" translate="yes" xml:space="preserve">
          <source>First Class Functions</source>
          <target state="translated">퍼스트 클래스 기능</target>
        </trans-unit>
        <trans-unit id="f295a02cfc1ac05a365330f0ab2dcd53cb811377" translate="yes" xml:space="preserve">
          <source>First class functions</source>
          <target state="translated">퍼스트 클래스 기능</target>
        </trans-unit>
        <trans-unit id="8873ae969e47de6d3bcc40a9120a04bb4e9a6fae" translate="yes" xml:space="preserve">
          <source>Fluidly scales one or more properties of a color. Unlike &lt;a href=&quot;#adjust_color-instance_method&quot;&gt;adjust-color&lt;/a&gt;, which changes a color's properties by fixed amounts, &lt;a href=&quot;#scale_color-instance_method&quot;&gt;scale-color&lt;/a&gt; fluidly changes them based on how high or low they already are. That means that lightening an already-light color with &lt;a href=&quot;#scale_color-instance_method&quot;&gt;scale-color&lt;/a&gt; won't change the lightness much, but lightening a dark color by the same amount will change it more dramatically. This has the benefit of making &lt;code&gt;scale-color($color, ...)&lt;/code&gt; have a similar effect regardless of what &lt;code&gt;$color&lt;/code&gt; is.</source>
          <target state="translated">색상의 하나 이상의 속성을 유동적으로 스케일합니다. 색상의 속성을 고정 된 양으로 변경하는 &lt;a href=&quot;#adjust_color-instance_method&quot;&gt;adjust-color&lt;/a&gt; 와 달리 &lt;a href=&quot;#scale_color-instance_method&quot;&gt;스케일 색상&lt;/a&gt; 은 이미 높거나 낮은 정도에 따라 유동적으로 변경됩니다. 즉, &lt;a href=&quot;#scale_color-instance_method&quot;&gt;스케일&lt;/a&gt; 색상으로 이미 밝은 색상을 밝게하면 밝기가 크게 변하지 않지만 같은 양으로 어두운 색상을 밝게하면 더 크게 변경됩니다. 이것은 &lt;code&gt;scale-color($color, ...)&lt;/code&gt; 가 &lt;code&gt;$color&lt;/code&gt; 가 무엇인지에 관계없이 유사한 효과를 갖도록하는 이점 이 있습니다.</target>
        </trans-unit>
        <trans-unit id="2c48ff5d6805b89d3c4aaa185134ab64f0b1046f" translate="yes" xml:space="preserve">
          <source>For Rails 3, instead add the following line to the Gemfile:</source>
          <target state="translated">Rails 3의 경우 Gemfile에 다음 줄을 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="6db6725e9e7d5c088630e348048d1e73fc7657d3" translate="yes" xml:space="preserve">
          <source>For example,</source>
          <target state="translated">예를 들어</target>
        </trans-unit>
        <trans-unit id="ac331b881723e49f27ce748fb2dad0be59116802" translate="yes" xml:space="preserve">
          <source>For example, if &lt;code&gt;example.scss&lt;/code&gt; contains</source>
          <target state="translated">예를 들어 &lt;code&gt;example.scss&lt;/code&gt; 에</target>
        </trans-unit>
        <trans-unit id="d001d78d7e45711489fe12fecf811f07435cabbe" translate="yes" xml:space="preserve">
          <source>For example, the following works fine:</source>
          <target state="translated">예를 들어 다음은 정상적으로 작동합니다.</target>
        </trans-unit>
        <trans-unit id="86944ea7f56a5ba3ca7e79aea699124a755cc0e5" translate="yes" xml:space="preserve">
          <source>For example, the lightness of a color can be anywhere between &lt;code&gt;0%&lt;/code&gt; and &lt;code&gt;100%&lt;/code&gt;. If &lt;code&gt;scale-color($color, $lightness: 40%)&lt;/code&gt; is called, the resulting color's lightness will be 40% of the way between its original lightness and 100. If &lt;code&gt;scale-color($color, $lightness: -40%)&lt;/code&gt; is called instead, the lightness will be 40% of the way between the original and 0.</source>
          <target state="translated">예를 들어, 색상의 밝기는 &lt;code&gt;0%&lt;/code&gt; 에서 &lt;code&gt;100%&lt;/code&gt; 사이 일 수 있습니다 . 경우 &lt;code&gt;scale-color($color, $lightness: 40%)&lt;/code&gt; 호출, 결과 색의 밝기가 원래의 밝기와 100 사이의 방법의 40 %가 될 경우 &lt;code&gt;scale-color($color, $lightness: -40%)&lt;/code&gt; 대신에 가벼움은 원본과 0 사이의 40 %가됩니다.</target>
        </trans-unit>
        <trans-unit id="10cad4394049680f152b554cb0f7c06dfe83b1ee" translate="yes" xml:space="preserve">
          <source>For example, you might have &lt;code&gt;_colors.scss&lt;/code&gt;. Then no &lt;code&gt;_colors.css&lt;/code&gt; file would be created, and you can do</source>
          <target state="translated">예를 들어 &lt;code&gt;_colors.scss&lt;/code&gt; 가있을 수 있습니다 . 그런 다음 &lt;code&gt;_colors.css&lt;/code&gt; 파일이 생성 되지 않으며 수행 할 수 있습니다</target>
        </trans-unit>
        <trans-unit id="059c3e8cce263b2945a18ac90b2637e10a8026b1" translate="yes" xml:space="preserve">
          <source>For example:</source>
          <target state="translated">예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="d2b35b96c322efa489d8b3dfb175a4f21bf1664e" translate="yes" xml:space="preserve">
          <source>For historical reasons, function names (and all other Sass identifiers) can use hyphens and underscores interchangeably. For example, if you define a function called &lt;code&gt;grid-width&lt;/code&gt;, you can use it as &lt;code&gt;grid_width&lt;/code&gt;, and vice versa.</source>
          <target state="translated">역사적 이유로 함수 이름 (및 다른 모든 Sass 식별자)은 하이픈과 밑줄을 서로 바꿔 사용할 수 있습니다. 예를 들어 &lt;code&gt;grid-width&lt;/code&gt; 라는 함수를 정의하면 &lt;code&gt;grid_width&lt;/code&gt; 로 사용 하거나 그 반대로 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="8f6155aa373f97a674fd5a39376b4cf46715cc48" translate="yes" xml:space="preserve">
          <source>For historical reasons, mixin names (and all other Sass identifiers) can use hyphens and underscores interchangeably. For example, if you define a mixin called &lt;code&gt;add-column&lt;/code&gt;, you can include it as &lt;code&gt;add_column&lt;/code&gt;, and vice versa.</source>
          <target state="translated">역사적 이유로 믹스 인 이름 (및 다른 모든 Sass 식별자)은 하이픈과 밑줄을 서로 바꿔 사용할 수 있습니다. 예를 들어, &lt;code&gt;add-column&lt;/code&gt; 이라는 믹스 인을 정의하면 &lt;code&gt;add_column&lt;/code&gt; 으로 포함하거나 그 반대로 포함 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="e71f7fae1496938578d1bffe25a90b7430454708" translate="yes" xml:space="preserve">
          <source>For historical reasons, variable names (and all other Sass identifiers) can use hyphens and underscores interchangeably. For example, if you define a variable called &lt;code&gt;$main-width&lt;/code&gt;, you can access it as &lt;code&gt;$main_width&lt;/code&gt;, and vice versa.</source>
          <target state="translated">역사적 이유로 변수 이름 (및 다른 모든 Sass 식별자)은 하이픈과 밑줄을 서로 바꿔 사용할 수 있습니다. 예를 들어 &lt;code&gt;$main-width&lt;/code&gt; 라는 변수를 정의하면 &lt;code&gt;$main_width&lt;/code&gt; 로 액세스 할 수 있으며 그 반대도 가능합니다.</target>
        </trans-unit>
        <trans-unit id="e36b5fcbeb3efece896e55ba96ce45fca408340f" translate="yes" xml:space="preserve">
          <source>Fully CSS-compatible</source>
          <target state="translated">완전 CSS 호환</target>
        </trans-unit>
        <trans-unit id="52ea1bd7ae433917355467b1a8a1723cd07cf273" translate="yes" xml:space="preserve">
          <source>Function Directives #function_directives</source>
          <target state="translated">함수 지시어 #function_directives</target>
        </trans-unit>
        <trans-unit id="2b961dea1dc0c60ddf9a2c8e9d090f6f7d082483" translate="yes" xml:space="preserve">
          <source>Functions</source>
          <target state="translated">Functions</target>
        </trans-unit>
        <trans-unit id="0edb628a9542a14f813bd7de9f8386b56c8a58b5" translate="yes" xml:space="preserve">
          <source>Generates:</source>
          <target state="translated">Generates:</target>
        </trans-unit>
        <trans-unit id="22c2b6e6e7c73e06d286b50bcc91f51da4305652" translate="yes" xml:space="preserve">
          <source>Gets the blue component of a color. Calculated from HSL where necessary via &lt;a href=&quot;http://www.w3.org/TR/css3-color/#hsl-color&quot;&gt;this algorithm&lt;/a&gt;.</source>
          <target state="translated">색의 파랑 구성 요소를 가져옵니다. &lt;a href=&quot;http://www.w3.org/TR/css3-color/#hsl-color&quot;&gt;이 알고리즘을&lt;/a&gt; 통해 필요한 경우 HSL에서 계산됩니다 .</target>
        </trans-unit>
        <trans-unit id="4b1cdecf554174819ed0a33df5a40ed6d356045c" translate="yes" xml:space="preserve">
          <source>Gets the green component of a color. Calculated from HSL where necessary via &lt;a href=&quot;http://www.w3.org/TR/css3-color/#hsl-color&quot;&gt;this algorithm&lt;/a&gt;.</source>
          <target state="translated">색의 녹색 구성 요소를 가져옵니다. &lt;a href=&quot;http://www.w3.org/TR/css3-color/#hsl-color&quot;&gt;이 알고리즘을&lt;/a&gt; 통해 필요한 경우 HSL에서 계산됩니다 .</target>
        </trans-unit>
        <trans-unit id="54336be4927001c951acd2e597ce51a92ab12a03" translate="yes" xml:space="preserve">
          <source>Gets the nth item in a list.</source>
          <target state="translated">목록에서 n 번째 항목을 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="1acb7f9b6125cd4f7e7934397bb3ba177b8cc16d" translate="yes" xml:space="preserve">
          <source>Gets the red component of a color. Calculated from HSL where necessary via &lt;a href=&quot;http://www.w3.org/TR/css3-color/#hsl-color&quot;&gt;this algorithm&lt;/a&gt;.</source>
          <target state="translated">색의 빨강 성분을 가져옵니다. &lt;a href=&quot;http://www.w3.org/TR/css3-color/#hsl-color&quot;&gt;이 알고리즘을&lt;/a&gt; 통해 필요한 경우 HSL에서 계산됩니다 .</target>
        </trans-unit>
        <trans-unit id="100cb0b9b76cf128bd36c57de623e9519f3f1a9c" translate="yes" xml:space="preserve">
          <source>How it Works</source>
          <target state="translated">작동 원리</target>
        </trans-unit>
        <trans-unit id="fa8c7bd845eb56a7623a51ddb2ac3965b3815ea0" translate="yes" xml:space="preserve">
          <source>However, placeholder selectors can be extended, just like classes and ids. The extended selectors will be generated, but the base placeholder selector will not. For example:</source>
          <target state="translated">그러나 클래스 및 ID와 같이 자리 표시 자 선택기를 확장 할 수 있습니다. 확장 선택기가 생성되지만 기본 자리 표시 자 선택기는 생성되지 않습니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="f8ac34630c8bab65ab8e1c131c73e127e373d4fb" translate="yes" xml:space="preserve">
          <source>However, there are three situations where the &lt;code&gt;/&lt;/code&gt; will be interpreted as division. These cover the vast majority of cases where division is actually used. They are:</source>
          <target state="translated">그러나 &lt;code&gt;/&lt;/code&gt; 가 나누기로 해석 되는 세 가지 상황 이 있습니다. 여기에는 실제로 분할이 사용되는 대부분의 경우가 포함됩니다. 그들은:</target>
        </trans-unit>
        <trans-unit id="4b22f00f2bab73d2e075ca8e90f835b4deb9f334" translate="yes" xml:space="preserve">
          <source>IE filters require all colors include the alpha layer, and be in the strict format of #AABBCCDD. You can more easily convert the color using the &lt;a href=&quot;sass/script/functions#ie_hex_str-instance_method&quot;&gt;ie_hex_str&lt;/a&gt; function. For example:</source>
          <target state="translated">IE 필터에는 알파 레이어를 포함한 모든 색상이 필요하며 엄격한 #AABBCCDD 형식이어야합니다. &lt;a href=&quot;sass/script/functions#ie_hex_str-instance_method&quot;&gt;ie_hex_str&lt;/a&gt; 함수를 사용하여 색상을보다 쉽게 ​​변환 할 수 있습니다 . 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="de9ddd1f280dc2a3de8e258236641a618a9f9a59" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;$css&lt;/code&gt; is &lt;code&gt;false&lt;/code&gt;, the function reference may refer to a function defined in your stylesheet or built-in to the host environment. If it's &lt;code&gt;true&lt;/code&gt; it will refer to a plain-CSS function.</source>
          <target state="translated">경우 &lt;code&gt;$css&lt;/code&gt; 있습니다 &lt;code&gt;false&lt;/code&gt; , 함수 참조 스타일 시트에 정의 또는 내장 된 호스트 환경에 함수를 참조 할 수있다. 그것이 있다면 &lt;code&gt;true&lt;/code&gt; 그것은 일반 CSS 기능을 참조합니다.</target>
        </trans-unit>
        <trans-unit id="a8b7ea2dba38d059635fab051890dffefb62fe0a" translate="yes" xml:space="preserve">
          <source>If none of the above conditions are met and the extension is &lt;code&gt;.scss&lt;/code&gt; or &lt;code&gt;.sass&lt;/code&gt;, then the named Sass or SCSS file will be imported. If there is no extension, Sass will try to find a file with that name and the &lt;code&gt;.scss&lt;/code&gt; or &lt;code&gt;.sass&lt;/code&gt; extension and import it.</source>
          <target state="translated">위의 조건 중 어느 것도 충족되지 않고 확장자가 &lt;code&gt;.scss&lt;/code&gt; 또는 &lt;code&gt;.sass&lt;/code&gt; 인 경우 명명 된 Sass 또는 SCSS 파일을 가져옵니다. 확장자가 없으면 Sass는 해당 이름과 &lt;code&gt;.scss&lt;/code&gt; 또는 &lt;code&gt;.sass&lt;/code&gt; 확장자를 가진 파일을 찾아 가져 오려고 시도합니다.</target>
        </trans-unit>
        <trans-unit id="b4c5b65f55070d97a04b2a362dc1c166f404a286" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;@import&lt;/code&gt; has any media queries.</source>
          <target state="translated">&lt;code&gt;@import&lt;/code&gt; 에 미디어 쿼리가있는 경우</target>
        </trans-unit>
        <trans-unit id="af27aa817841c40e0934e3809b663a6e2a6e3425" translate="yes" xml:space="preserve">
          <source>If the file's extension is &lt;code&gt;.css&lt;/code&gt;.</source>
          <target state="translated">파일의 확장자는 경우 &lt;code&gt;.css&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="63b062ac18bca224410a58b1187ea6cb960be37e" translate="yes" xml:space="preserve">
          <source>If the filename begins with &lt;code&gt;http://&lt;/code&gt;.</source>
          <target state="translated">파일 이름은로 시작하는 경우 &lt;code&gt;http://&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d45e0e538899f07f283860f3aa453ddded1fbbb4" translate="yes" xml:space="preserve">
          <source>If the filename is a &lt;code&gt;url()&lt;/code&gt;.</source>
          <target state="translated">파일 이름이있는 경우 &lt;code&gt;url()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5b837513b592c0bc737e08c4c2ce796f54aa897c" translate="yes" xml:space="preserve">
          <source>If the parent selector can't have a suffix applied, Sass will throw an error.</source>
          <target state="translated">상위 셀렉터에 접미사를 적용 할 수 없으면 Sass에서 오류가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="1698a3d0e06423e104c10e9958b92d40b5758697" translate="yes" xml:space="preserve">
          <source>If the two sequences do share some selectors, then those selectors will be merged together and only the differences (if any still exist) will alternate. In this example, both sequences contain the id &lt;code&gt;#admin&lt;/code&gt;, so the resulting selectors will merge those two ids:</source>
          <target state="translated">두 시퀀스가 ​​일부 셀렉터를 공유하는 경우 해당 셀렉터가 함께 병합되고 차이점 (아직 존재하는 경우) 만 번갈아 나타납니다. 이 예제에서 두 시퀀스 모두 ID &lt;code&gt;#admin&lt;/code&gt; 을 포함 하므로 결과 선택기는 해당 두 ID를 병합합니다.</target>
        </trans-unit>
        <trans-unit id="b9a139b35304edaae3e8aa905c71ee85f305af0f" translate="yes" xml:space="preserve">
          <source>If the value is surrounded by parentheses, unless those parentheses are outside a list and the value is inside.</source>
          <target state="translated">값이 괄호로 묶인 경우 해당 괄호가 목록 외부에 있고 값이 내부에없는 경우를 제외하고.</target>
        </trans-unit>
        <trans-unit id="994d90dd28d20ad4f20c0f14065886546d705224" translate="yes" xml:space="preserve">
          <source>If the value is used as part of another arithmetic expression.</source>
          <target state="translated">값이 다른 산술 표현식의 일부로 사용되는 경우</target>
        </trans-unit>
        <trans-unit id="2e43996a95a151623d109cf31022aea712f71951" translate="yes" xml:space="preserve">
          <source>If the value, or any part of it, is stored in a variable or returned by a function.</source>
          <target state="translated">값 또는 그 일부가 변수에 저장되거나 함수에 의해 리턴되는 경우</target>
        </trans-unit>
        <trans-unit id="89cbec1265cbf5346f0cd7043c62c079fc14e847" translate="yes" xml:space="preserve">
          <source>If there is no parent selector, the value of &lt;code&gt;&amp;amp;&lt;/code&gt; will be null. This means you can use it in a mixin to detect whether a parent selector exists:</source>
          <target state="translated">부모 선택기가없는 경우 &lt;code&gt;&amp;amp;&lt;/code&gt; 값은 null입니다. 즉, 믹스 인에서이를 사용하여 상위 선택기가 존재하는지 감지 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ac6eee271d4cf9df36a9f70a173deffdf9b4d740" translate="yes" xml:space="preserve">
          <source>If you have a SCSS or Sass file that you want to import but don't want to compile to a CSS file, you can add an underscore to the beginning of the filename. This will tell Sass not to compile it to a normal CSS file. You can then import these files without using the underscore.</source>
          <target state="translated">가져올 SCSS 또는 Sass 파일이 있지만 CSS 파일로 컴파일하지 않으려는 경우 파일 이름의 시작 부분에 밑줄을 추가 할 수 있습니다. 이것은 Sass에게 일반 CSS 파일로 컴파일하지 말라고 지시합니다. 그런 다음 밑줄을 사용하지 않고 이러한 파일을 가져올 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="363b41473ea109078f9e707dc24a309d29c6c95c" translate="yes" xml:space="preserve">
          <source>If you have a directory with many Sass files, you can also tell Sass to watch the entire directory:</source>
          <target state="translated">Sass 파일이 많은 디렉토리가있는 경우 Sass에 전체 디렉토리를 보도록 지시 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="c599191a7710edf0b08d3e7b545ee814898e053e" translate="yes" xml:space="preserve">
          <source>If you use normal classes for this, you end up creating a lot of extra CSS when the stylesheets are generated, and run the risk of colliding with other classes that are being used in the HTML. That's why Sass supports &quot;placeholder selectors&quot; (for example, &lt;code&gt;%foo&lt;/code&gt;).</source>
          <target state="translated">이를 위해 일반 클래스를 사용하면 스타일 시트가 생성 될 때 많은 추가 CSS를 작성하게되고 HTML에서 사용중인 다른 클래스와 충돌 할 위험이 있습니다. 이것이 Sass가 &quot;placeholder selectors&quot;를 지원하는 이유입니다 (예 : &lt;code&gt;%foo&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="1716800aeaf149f22debed68ce91b7091237cb87" translate="yes" xml:space="preserve">
          <source>If you want to specify which directives or rules to include, rather than listing which ones should be excluded, you can use &lt;code&gt;with&lt;/code&gt; instead of &lt;code&gt;without&lt;/code&gt;. For example, &lt;code&gt;@at-root (with: rule)&lt;/code&gt; will move outside of all directives, but will preserve any CSS rules.</source>
          <target state="translated">오히려 사람이 제외되어야하는 목록보다, 지침 또는 규칙을 포함하도록 지정하려는 경우, 당신은 사용할 수 있습니다 &lt;code&gt;with&lt;/code&gt; 대신 &lt;code&gt;without&lt;/code&gt; . 예를 들어 &lt;code&gt;@at-root (with: rule)&lt;/code&gt; 는 모든 지시문 외부로 이동하지만 CSS 규칙은 유지합니다.</target>
        </trans-unit>
        <trans-unit id="ff22fba41840c1021d41c8a69cb72dc331a622da" translate="yes" xml:space="preserve">
          <source>If you want to use variables along with a plain CSS &lt;code&gt;/&lt;/code&gt;, you can use &lt;code&gt;#{}&lt;/code&gt; to insert them. For example:</source>
          <target state="translated">일반 CSS &lt;code&gt;/&lt;/code&gt; 와 함께 변수를 사용 하려면 &lt;code&gt;#{}&lt;/code&gt; 을 사용하여 변수 를 삽입 할 수 있습니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="3d6a4114ecf4dab55eb47e0014930529039b7887" translate="yes" xml:space="preserve">
          <source>If you're using Windows, you may need to &lt;a href=&quot;http://rubyinstaller.org/download.html&quot;&gt;install Ruby&lt;/a&gt; first.</source>
          <target state="translated">Windows를 사용하는 경우 &lt;a href=&quot;http://rubyinstaller.org/download.html&quot;&gt;Ruby를&lt;/a&gt; 먼저 설치 해야 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="9a0c5a2945555a819952e103e567b6c9b3386836" translate="yes" xml:space="preserve">
          <source>Imports may contain &lt;code&gt;#{}&lt;/code&gt; interpolation, but only with certain restrictions. It's not possible to dynamically import a Sass file based on a variable; interpolation is only for CSS imports. As such, it only works with &lt;code&gt;url()&lt;/code&gt; imports. For example:</source>
          <target state="translated">가져 오기에는 &lt;code&gt;#{}&lt;/code&gt; 보간 이 포함될 수 있지만 특정 제한이 있습니다. 변수를 기반으로 Sass 파일을 동적으로 가져올 수는 없습니다. 보간은 CSS 가져 오기 전용입니다. 따라서 &lt;code&gt;url()&lt;/code&gt; 가져 오기 에서만 작동합니다 . 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="4a769708c9963aedd4a1e0dd9c5c5fb77e092b32" translate="yes" xml:space="preserve">
          <source>In addition to containing simple values, lists can contain other lists. For example, &lt;code&gt;1px 2px, 5px 6px&lt;/code&gt; is a two-item list containing the list &lt;code&gt;1px 2px&lt;/code&gt; and the list &lt;code&gt;5px 6px&lt;/code&gt;. If the inner lists have the same separator as the outer list, you'll need to use parentheses to make it clear where the inner lists start and stop. For example, &lt;code&gt;(1px 2px) (5px 6px)&lt;/code&gt; is also a two-item list containing the list &lt;code&gt;1px 2px&lt;/code&gt; and the list &lt;code&gt;5px 6px&lt;/code&gt;. The difference is that the outer list is space-separated, where before it was comma-separated.</source>
          <target state="translated">간단한 값을 포함하는 것 외에도 목록에는 다른 목록이 포함될 수 있습니다. 예를 들어, &lt;code&gt;1px 2px, 5px 6px&lt;/code&gt; 는 목록 &lt;code&gt;1px 2px&lt;/code&gt; 및 목록 &lt;code&gt;5px 6px&lt;/code&gt; 를 포함하는 두 항목 목록 입니다 . 내부 목록에 외부 목록과 동일한 구분 기호가 있으면 괄호를 사용하여 내부 목록이 시작되고 중지되는 위치를 명확하게해야합니다. 예를 들어 &lt;code&gt;(1px 2px) (5px 6px)&lt;/code&gt; 는 목록 &lt;code&gt;1px 2px&lt;/code&gt; 및 목록 &lt;code&gt;5px 6px&lt;/code&gt; 를 포함하는 두 항목 목록 입니다 . 차이점은 외부 목록이 공백으로 구분되어 있고 쉼표로 구분되기 전입니다.</target>
        </trans-unit>
        <trans-unit id="e4b2524ea62316a5a90c10f8618485a94cc47ae0" translate="yes" xml:space="preserve">
          <source>In addition to the plain CSS property syntax, Sass supports a small set of extensions called SassScript. SassScript allows properties to use variables, arithmetic, and extra functions. SassScript can be used in any property value.</source>
          <target state="translated">일반 CSS 속성 구문 외에도 Sass는 SassScript라는 작은 확장 집합을 지원합니다. SassScript를 사용하면 속성에서 변수, 산술 및 추가 함수를 사용할 수 있습니다. SassScript는 모든 속성 값에서 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="56d2abb4bb0796d88ad72e0a0dab56d277868fc4" translate="yes" xml:space="preserve">
          <source>In compressed output mode, Sass will output the smallest CSS representation of a color. For example, &lt;code&gt;#FF0000&lt;/code&gt; will output as &lt;code&gt;red&lt;/code&gt; in compressed mode, but &lt;code&gt;blanchedalmond&lt;/code&gt; will output as &lt;code&gt;#FFEBCD&lt;/code&gt;.</source>
          <target state="translated">압축 출력 모드에서 Sass는 색상의 가장 작은 CSS 표현을 출력합니다. 예를 들어, &lt;code&gt;#FF0000&lt;/code&gt; 은 압축 모드에서 &lt;code&gt;red&lt;/code&gt; 으로 출력 되지만 &lt;code&gt;blanchedalmond&lt;/code&gt; 는 &lt;code&gt;#FFEBCD&lt;/code&gt; 로 출력됩니다 .</target>
        </trans-unit>
        <trans-unit id="74dc3020e7b1fd50d9d2201e0aff28fcfb86aef4" translate="yes" xml:space="preserve">
          <source>In effect, every element with class &lt;code&gt;.seriousError&lt;/code&gt; also has class &lt;code&gt;.error&lt;/code&gt;&lt;em&gt;and&lt;/em&gt; class &lt;code&gt;.attention&lt;/code&gt;. Thus, the styles defined later in the document take precedence: &lt;code&gt;.seriousError&lt;/code&gt; has background color &lt;code&gt;#ff0&lt;/code&gt; rather than &lt;code&gt;#fdd&lt;/code&gt;, since &lt;code&gt;.attention&lt;/code&gt; is defined later than &lt;code&gt;.error&lt;/code&gt;.</source>
          <target state="translated">실제로 &lt;code&gt;.seriousError&lt;/code&gt; 클래스를 가진 모든 요소 에는 &lt;code&gt;.error&lt;/code&gt; 클래스 &lt;em&gt;와 &lt;/em&gt; &lt;code&gt;.attention&lt;/code&gt; 클래스가 있습니다 . 따라서, 스타일은 나중에 문서보다 우선의 정의 : &lt;code&gt;.seriousError&lt;/code&gt; 는 배경 색상이 &lt;code&gt;#ff0&lt;/code&gt; 보다는 &lt;code&gt;#fdd&lt;/code&gt; 을 하기 때문에, &lt;code&gt;.attention&lt;/code&gt; 은 이후에 정의 &lt;code&gt;.error&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="39c09caa4cf59eecc46ded665539c592c67c9267" translate="yes" xml:space="preserve">
          <source>Including a Mixin: &lt;code&gt;@include&lt;/code&gt; #including_a_mixin</source>
          <target state="translated">믹스 인 포함 : &lt;code&gt;@include&lt;/code&gt; #include_a_mixin</target>
        </trans-unit>
        <trans-unit id="8f495c6c06231ec9a12564cb05951839bbfb2f31" translate="yes" xml:space="preserve">
          <source>Increases or decreases one or more properties of a color. This can change the red, green, blue, hue, saturation, value, and alpha properties. The properties are specified as keyword arguments, and are added to or subtracted from the color's current value for that property.</source>
          <target state="translated">하나 이상의 색상 속성을 늘리거나 줄입니다. 빨강, 녹색, 파랑, 색조, 채도, 값 및 알파 속성을 변경할 수 있습니다. 속성은 키워드 인수로 지정되며 해당 속성의 색상의 현재 값에 더하거나 뺍니다.</target>
        </trans-unit>
        <trans-unit id="c4adab86912f57657f80ae9c741aad0a290c16cc" translate="yes" xml:space="preserve">
          <source>Inserts &lt;code&gt;$insert&lt;/code&gt; into &lt;code&gt;$string&lt;/code&gt; at &lt;code&gt;$index&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;$index&lt;/code&gt; 에서 $ &lt;code&gt;$string&lt;/code&gt; 에 &lt;code&gt;$insert&lt;/code&gt; 를) 삽입합니다 .</target>
        </trans-unit>
        <trans-unit id="a61e1bb5fa9192131b395c208ac4f747981c7ea5" translate="yes" xml:space="preserve">
          <source>Interactive Shell</source>
          <target state="translated">대화식 쉘</target>
        </trans-unit>
        <trans-unit id="45d23777af55b7a3a1877a87c33f7f7083e78cba" translate="yes" xml:space="preserve">
          <source>Interpolation: &lt;code&gt;#{}&lt;/code&gt;</source>
          <target state="translated">보간 : &lt;code&gt;#{}&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2cc4d290bfef52d73ec2d38ab787070c998fa292" translate="yes" xml:space="preserve">
          <source>Is compiled to:</source>
          <target state="translated">다음으로 컴파일됩니다.</target>
        </trans-unit>
        <trans-unit id="6e2991943482060e6e5857d308787bb961af276f" translate="yes" xml:space="preserve">
          <source>It is possible to define your own functions in sass and use them in any value or script context. For example:</source>
          <target state="translated">sass에서 자신의 함수를 정의하고 모든 값이나 스크립트 컨텍스트에서 사용할 수 있습니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="d816ac5e5874c3d65c0a9974afc517491f364041" translate="yes" xml:space="preserve">
          <source>It is possible to pass a block of styles to the mixin for placement within the styles included by the mixin. The styles will appear at the location of any &lt;code&gt;@content&lt;/code&gt; directives found within the mixin. This makes it possible to define abstractions relating to the construction of selectors and directives.</source>
          <target state="translated">믹스 인에 포함 된 스타일 내에 배치하기 위해 스타일 블록을 믹스 인에 전달할 수 있습니다. 스타일은 믹스 인에서 찾은 &lt;code&gt;@content&lt;/code&gt; 지시문 의 위치에 나타납니다 . 이를 통해 선택기 및 지시문 구성과 관련된 추상화를 정의 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8eefbbb01c8f85c4c989d2a04b258535745057b9" translate="yes" xml:space="preserve">
          <source>It is recommended that you prefix your functions to avoid naming conflicts and so that readers of your stylesheets know they are not part of Sass or CSS. For example, if you work for ACME Corp, you might have named the function above &lt;code&gt;-acme-grid-width&lt;/code&gt;.</source>
          <target state="translated">이름 충돌을 피하고 스타일 시트를 읽는 사람이 Sass 또는 CSS의 일부가 아님을 알 수 있도록 함수의 접두어를 사용하는 것이 좋습니다. 예를 들어 ACME Corp에서 작업하는 경우 함수 이름을 &lt;code&gt;-acme-grid-width&lt;/code&gt; 이상으로 지정했을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="b7abfdcf20af9e97a47be163b41d76a414aef7fa" translate="yes" xml:space="preserve">
          <source>It's also possible to import multiple files in one &lt;code&gt;@import&lt;/code&gt;. For example:</source>
          <target state="translated">하나의 &lt;code&gt;@import&lt;/code&gt; 에서 여러 파일을 가져올 수도 있습니다 . 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="7535674e335e12f1e7f8c3eb63a432491bb999a7" translate="yes" xml:space="preserve">
          <source>It's also possible to use &lt;code&gt;#{}&lt;/code&gt; to put SassScript into property values. In most cases this isn't any better than using a variable, but using &lt;code&gt;#{}&lt;/code&gt; does mean that any operations near it will be treated as plain CSS. For example:</source>
          <target state="translated">&lt;code&gt;#{}&lt;/code&gt; 을 사용 하여 SassScript를 속성 값에 넣을 수도 있습니다. 대부분의 경우 이것은 변수를 사용하는 것보다 낫지는 않지만 &lt;code&gt;#{}&lt;/code&gt; 을 사용 한다는 것은 변수 근처의 모든 작업이 일반 CSS로 취급됨을 의미합니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="1886de0c5be428ee097d8bd10a6b179bedb91276" translate="yes" xml:space="preserve">
          <source>It's not possible to nest &lt;code&gt;@import&lt;/code&gt; within mixins or control directives.</source>
          <target state="translated">&lt;code&gt;@import&lt;/code&gt; 를 mixin 또는 제어 지시문 에 중첩시킬 수 없습니다 .</target>
        </trans-unit>
        <trans-unit id="a8753b47a012a8c47aacfc01fec6cc4c372652eb" translate="yes" xml:space="preserve">
          <source>It's possible for one selector to extend another selector that in turn extends a third. For example:</source>
          <target state="translated">한 선택기가 다른 선택기를 확장하여 세 번째로 확장 할 수 있습니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="a8ab63913e701a6cd566f1ea2aa0fd07c2a42d47" translate="yes" xml:space="preserve">
          <source>Joins together two lists into one.</source>
          <target state="translated">두 목록을 하나로 결합합니다.</target>
        </trans-unit>
        <trans-unit id="9db1c30955fc656f7f435f8f0d732c7d7aa93387" translate="yes" xml:space="preserve">
          <source>Just like when it's used &lt;a href=&quot;#parent-selector&quot;&gt;in selectors&lt;/a&gt;, &lt;code&gt;&amp;amp;&lt;/code&gt; in SassScript refers to the current parent selector. It's a comma-separated list of space-separated lists. For example:</source>
          <target state="translated">&lt;a href=&quot;#parent-selector&quot;&gt;선택기&lt;/a&gt; 에서 사용되는 것처럼 SassScript 에서 &lt;code&gt;&amp;amp;&lt;/code&gt; 는 현재 상위 선택기를 나타냅니다. 쉼표로 구분 된 공백으로 구분 된 목록입니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="29bd5da518840fb49af9da42ab496c9be33aa274" translate="yes" xml:space="preserve">
          <source>Just like with &lt;code&gt;.error.intrusion&lt;/code&gt; above, any rule that uses &lt;code&gt;a:hover&lt;/code&gt; will also work for &lt;code&gt;.hoverlink&lt;/code&gt;, even if they have other selectors as well. For example:</source>
          <target state="translated">위의 &lt;code&gt;.error.intrusion&lt;/code&gt; 과 마찬가지로 &lt;code&gt;a:hover&lt;/code&gt; 를 사용 하는 규칙 은 다른 선택 &lt;code&gt;.hoverlink&lt;/code&gt; 경우에도 .hoverlink 에서도 작동 합니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="5d9b1fd33565590a942bfdfa06b2822414c2520e" translate="yes" xml:space="preserve">
          <source>Just like with classes, this means that all styles defined for &lt;code&gt;a:hover&lt;/code&gt; are also applied to &lt;code&gt;.hoverlink&lt;/code&gt;. For example:</source>
          <target state="translated">클래스와 마찬가지로 이것은 &lt;code&gt;a:hover&lt;/code&gt; 에 대해 정의 된 모든 스타일 이 &lt;code&gt;.hoverlink&lt;/code&gt; 에도 적용됨을 의미 합니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="db32172db3cd21ae36313d815fba0dd39bd7127a" translate="yes" xml:space="preserve">
          <source>Keyword Arguments</source>
          <target state="translated">키워드 인수</target>
        </trans-unit>
        <trans-unit id="8bd5c96552367fe1f7d1f917e11688dbaf0e1f98" translate="yes" xml:space="preserve">
          <source>Language extensions such as variables, nesting, and mixins</source>
          <target state="translated">변수, 중첩 및 믹스 인과 같은 언어 확장</target>
        </trans-unit>
        <trans-unit id="58fd3b1b83cc7fc933d72fe934bdb6e534441281" translate="yes" xml:space="preserve">
          <source>Licensed under the MIT License.</source>
          <target state="translated">MIT 라이센스에 따라 라이센스가 부여되었습니다.</target>
        </trans-unit>
        <trans-unit id="df1f2565d793394f279b5684dda922d205d53f57" translate="yes" xml:space="preserve">
          <source>Like all list functions, &lt;code&gt;append()&lt;/code&gt; returns a new list rather than modifying its argument in place.</source>
          <target state="translated">모든 목록 함수와 마찬가지로 &lt;code&gt;append()&lt;/code&gt; 는 인수를 수정하지 않고 새 목록을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="c989d9be6d62a6dbaf62f789a98ea32f60b979a0" translate="yes" xml:space="preserve">
          <source>Like all list functions, &lt;code&gt;join()&lt;/code&gt; returns a new list rather than modifying its arguments in place.</source>
          <target state="translated">모든 목록 함수와 마찬가지로 &lt;code&gt;join()&lt;/code&gt; 은 인수를 수정하지 않고 새 목록을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="215f0787d3f3354f140f85b96c6a6486a621c011" translate="yes" xml:space="preserve">
          <source>Like all map functions, &lt;code&gt;map-merge()&lt;/code&gt; returns a new map rather than modifying its arguments in place.</source>
          <target state="translated">모든 맵 함수와 마찬가지로 &lt;code&gt;map-merge()&lt;/code&gt; 는 인수를 수정하지 않고 새 맵을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="9837ea88e8cf080cbcdf81d777f7dd9e345fddb1" translate="yes" xml:space="preserve">
          <source>Like lists, maps are mostly manipulated using &lt;a href=&quot;sass/script/functions#map-functions&quot;&gt;SassScript functions&lt;/a&gt;. The &lt;code&gt;map-get&lt;/code&gt; function looks up values in a map and the &lt;code&gt;map-merge&lt;/code&gt; function adds values to a map. The &lt;a href=&quot;#each-multi-assign&quot;&gt;&lt;code&gt;@each&lt;/code&gt; directive&lt;/a&gt; can be used to add styles for each key/value pair in a map. The order of pairs in a map is always the same as when the map was created.</source>
          <target state="translated">목록과 마찬가지로 맵은 주로 &lt;a href=&quot;sass/script/functions#map-functions&quot;&gt;SassScript 함수를&lt;/a&gt; 사용하여 조작 됩니다 . &lt;code&gt;map-get&lt;/code&gt; 기능은지도에 값을 조회하고 &lt;code&gt;map-merge&lt;/code&gt; 기능은지도에 값을 추가합니다. &lt;a href=&quot;#each-multi-assign&quot;&gt; &lt;code&gt;@each&lt;/code&gt; 의 지시어는&lt;/a&gt; 지도에있는 각각의 키 / 값 쌍의 스타일을 추가 할 수 있습니다. 지도에서 쌍의 순서는 항상지도를 만들 때와 동일합니다.</target>
        </trans-unit>
        <trans-unit id="70b08bc5ae7176adfaba7cded950090b19ea2c01" translate="yes" xml:space="preserve">
          <source>Like the selector unification done for &lt;code&gt;@extend&lt;/code&gt;, this doesn't guarantee that the output selector will match &lt;em&gt;all&lt;/em&gt; elements matched by both input selectors. For example, if &lt;code&gt;.a .b&lt;/code&gt; is unified with &lt;code&gt;.x .y&lt;/code&gt;, &lt;code&gt;.a .x .b.y, .x .a .b.y&lt;/code&gt; will be returned, but &lt;code&gt;.a.x .b.y&lt;/code&gt; will not. This avoids exponential output size while matching all elements that are likely to exist in practice.</source>
          <target state="translated">&lt;code&gt;@extend&lt;/code&gt; 에 대한 선택기 통합과 마찬가지로 출력 선택기가 두 입력 선택기와 일치하는 &lt;em&gt;모든&lt;/em&gt; 요소와 일치한다고 보장하지는 않습니다 . 예를 들어, &lt;code&gt;.a .b&lt;/code&gt; 가 &lt;code&gt;.x .y&lt;/code&gt; 와 통합 되면 &lt;code&gt;.a .x .b.y, .x .a .b.y&lt;/code&gt; 가 리턴되지만 &lt;code&gt;.a.x .b.y&lt;/code&gt; 는 리턴 되지 않습니다. 이것은 실제로 존재하는 모든 요소를 ​​일치시키면서 지수 출력 크기를 피합니다.</target>
        </trans-unit>
        <trans-unit id="751916204beb3a3955bb03e14586f45c600611fd" translate="yes" xml:space="preserve">
          <source>List Operations</source>
          <target state="translated">목록 작업</target>
        </trans-unit>
        <trans-unit id="7094bd5e681efcce9038e6d995bf2d060fc85079" translate="yes" xml:space="preserve">
          <source>List operations</source>
          <target state="translated">목록 작업</target>
        </trans-unit>
        <trans-unit id="57c9502a7d7d48fd4a86b45fefb2b163491c3ae1" translate="yes" xml:space="preserve">
          <source>Lists</source>
          <target state="translated">Lists</target>
        </trans-unit>
        <trans-unit id="fa382e946929803aa217f5846115b2bc89d380fa" translate="yes" xml:space="preserve">
          <source>Lists are how Sass represents the values of CSS declarations like &lt;code&gt;margin: 10px 15px 0 0&lt;/code&gt; or &lt;code&gt;font-face: Helvetica, Arial, sans-serif&lt;/code&gt;. Lists are just a series of other values, separated by either spaces or commas. In fact, individual values count as lists, too: they're just lists with one item.</source>
          <target state="translated">Sass는 &lt;code&gt;margin: 10px 15px 0 0&lt;/code&gt; 또는 &lt;code&gt;font-face: Helvetica, Arial, sans-serif&lt;/code&gt; 와 같은 CSS 선언의 값을 나타내는 방식 입니다. 목록은 공백이나 쉼표로 구분 된 일련의 다른 값입니다. 실제로 개별 값도 목록으로 계산됩니다. 하나의 항목이있는 목록 일뿐입니다.</target>
        </trans-unit>
        <trans-unit id="20f15e0d03eaee4a74cfe11c870ce37fc976cfb8" translate="yes" xml:space="preserve">
          <source>Lists can also be written with square brackets&amp;mdash;we call these bracketed lists. Bracketed lists containing are used as line names in &lt;a href=&quot;https://www.w3.org/TR/css-grid-1/&quot;&gt;CSS Grid Layout&lt;/a&gt;, but they can also be used in pure Sass code just like any other list. Bracketed lists can be comma- or space-separated.</source>
          <target state="translated">대괄호로 목록을 작성할 수도 있습니다.이 대괄호 목록이라고합니다. 를 포함하는 대괄호로 묶인 목록은 &lt;a href=&quot;https://www.w3.org/TR/css-grid-1/&quot;&gt;CSS Grid Layout&lt;/a&gt; 에서 줄 이름 으로 사용되지만 다른 목록과 마찬가지로 순수한 Sass 코드에서도 사용할 수 있습니다. 괄호로 묶은 목록은 쉼표 또는 공백으로 구분할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8f75f5a1d192f2ecd7aa361370ed4ea2e77eec11" translate="yes" xml:space="preserve">
          <source>Lists can also have no items in them at all. These lists are represented as &lt;code&gt;()&lt;/code&gt; (which is also an empty &lt;a href=&quot;#maps&quot;&gt;map&lt;/a&gt;). They can't be output directly to CSS; if you try to do e.g. &lt;code&gt;font-family: ()&lt;/code&gt;, Sass will raise an error. If a list contains empty lists or null values, as in &lt;code&gt;1px 2px () 3px&lt;/code&gt; or &lt;code&gt;1px 2px null 3px&lt;/code&gt;, the empty lists and null values will be removed before the containing list is turned into CSS.</source>
          <target state="translated">목록에는 항목이 전혀 없을 수도 있습니다. 이 목록은 &lt;code&gt;()&lt;/code&gt; (빈 &lt;a href=&quot;#maps&quot;&gt;맵임&lt;/a&gt; )으로 표시됩니다. CSS로 직접 출력 할 수 없습니다. &lt;code&gt;font-family: ()&lt;/code&gt; 을 시도하면 Sass에서 오류가 발생합니다. 목록에 &lt;code&gt;1px 2px () 3px&lt;/code&gt; 또는 &lt;code&gt;1px 2px null 3px&lt;/code&gt; 와 같이 빈 목록이나 null 값이 포함되어 있으면 포함 목록이 CSS로 바뀌기 전에 빈 목록과 null 값이 제거됩니다.</target>
        </trans-unit>
        <trans-unit id="41d7cce1f583ff4beb456b479be604014eb41b2d" translate="yes" xml:space="preserve">
          <source>Lists don't support any special operations. Instead, they're manipulated using the &lt;a href=&quot;sass/script/functions#list-functions&quot;&gt;list functions&lt;/a&gt;.</source>
          <target state="translated">목록은 특별한 작업을 지원하지 않습니다. 대신 &lt;a href=&quot;sass/script/functions#list-functions&quot;&gt;list 함수를&lt;/a&gt; 사용하여 조작 됩니다 .</target>
        </trans-unit>
        <trans-unit id="851a2a27867c5ea0d06fb7ad6ca3007c1728423a" translate="yes" xml:space="preserve">
          <source>Makes a color darker. Takes a color and a number between 0% and 100%, and returns a color with the lightness decreased by that amount.</source>
          <target state="translated">색상을 어둡게 만듭니다. 색상과 0 %에서 100 % 사이의 숫자를 가져와 그 양만큼 밝기가 감소 된 색상을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="77ee8f07a8c8bad26149c6d0da1b59832f988738" translate="yes" xml:space="preserve">
          <source>Makes a color less saturated. Takes a color and a number between 0% and 100%, and returns a color with the saturation decreased by that value.</source>
          <target state="translated">채도를 덜 채 웁니다. 색상과 0 %에서 100 % 사이의 숫자를 가져와 채도가 해당 값만큼 감소한 색상을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="647de436b4025a40c3c05b643dfe7af49febeb1d" translate="yes" xml:space="preserve">
          <source>Makes a color lighter. Takes a color and a number between &lt;code&gt;0%&lt;/code&gt; and &lt;code&gt;100%&lt;/code&gt;, and returns a color with the lightness increased by that amount.</source>
          <target state="translated">색상을 밝게 만듭니다. 색상과 &lt;code&gt;0%&lt;/code&gt; 에서 &lt;code&gt;100%&lt;/code&gt; 사이의 숫자를 가져와 그 양만큼 밝기가 증가한 색상을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="1202144871a6d134734e77e6f3d6ff43dcdf0d0b" translate="yes" xml:space="preserve">
          <source>Makes a color more opaque. Takes a color and a number between 0 and 1, and returns a color with the opacity increased by that amount.</source>
          <target state="translated">색상을 더 불투명하게 만듭니다. 색상과 0과 1 사이의 숫자를 가져와 불투명도가 해당 양만큼 증가한 색상을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="908e36df6b3e3510d087b869b3ee05a7946f3ab4" translate="yes" xml:space="preserve">
          <source>Makes a color more saturated. Takes a color and a number between 0% and 100%, and returns a color with the saturation increased by that amount.</source>
          <target state="translated">색상을 더 채 웁니다. 색상과 0 %에서 100 % 사이의 숫자를 가져와 채도가 그 양만큼 증가한 색상을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="10e046f0668046295e6f040e6154687feaedeac3" translate="yes" xml:space="preserve">
          <source>Makes a color more transparent. Takes a color and a number between 0 and 1, and returns a color with the opacity decreased by that amount.</source>
          <target state="translated">색상을 더 투명하게 만듭니다. 색상과 0과 1 사이의 숫자를 가져와 불투명도가 그 양만큼 감소한 색상을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="6c492e19352987aad4627ca16fec2584efdd4af1" translate="yes" xml:space="preserve">
          <source>Many &lt;a href=&quot;sass/script/functions&quot;&gt;useful functions&lt;/a&gt; for manipulating colors and other values</source>
          <target state="translated">색상 및 기타 값 조작에 &lt;a href=&quot;sass/script/functions&quot;&gt;유용한&lt;/a&gt; 많은 기능</target>
        </trans-unit>
        <trans-unit id="80071cd75107cd5c4afdb2571725ea6733631038" translate="yes" xml:space="preserve">
          <source>Maps</source>
          <target state="translated">Maps</target>
        </trans-unit>
        <trans-unit id="7908a2bbd7a8ad31b242280b31b2c7d491579a76" translate="yes" xml:space="preserve">
          <source>Maps can also be used anywhere lists can. When used by a list function, a map is treated as a list of pairs. For example, &lt;code&gt;(key1: value1, key2: value2)&lt;/code&gt; would be treated as the nested list &lt;code&gt;key1 value1, key2 value2&lt;/code&gt; by list functions. Lists cannot be treated as maps, though, with the exception of the empty list. &lt;code&gt;()&lt;/code&gt; represents both a map with no key/value pairs and a list with no elements.</source>
          <target state="translated">목록은 어디에서나 사용할 수 있습니다. 리스트 함수에 의해 사용될 때 맵은 쌍리스트로 취급됩니다. 예를 들어 &lt;code&gt;(key1: value1, key2: value2)&lt;/code&gt; 는 목록 함수별로 중첩 목록 &lt;code&gt;key1 value1, key2 value2&lt;/code&gt; 로 처리됩니다 . 빈 목록을 제외하고 목록은 맵으로 취급 할 수 없습니다. &lt;code&gt;()&lt;/code&gt; 는 키 / 값 쌍이없는지도와 요소가없는 목록을 모두 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="89e949ab7dcea4e2be5a81f1c90709f5ee38dbbd" translate="yes" xml:space="preserve">
          <source>Maps cannot be converted to plain CSS. Using one as the value of a variable or an argument to a CSS function will cause an error. Use the &lt;code&gt;inspect($value)&lt;/code&gt; function to produce an output string useful for debugging maps.</source>
          <target state="translated">지도를 일반 CSS로 변환 할 수 없습니다. 하나를 변수의 값으로 사용하거나 CSS 함수의 인수로 사용하면 오류가 발생합니다. 사용 &lt;code&gt;inspect($value)&lt;/code&gt; 지도를 디버깅에 유용한 출력 문자열을 생성하는 기능.</target>
        </trans-unit>
        <trans-unit id="18460ede0e77cbca4b62b2e50b96144bebae56ee" translate="yes" xml:space="preserve">
          <source>Maps represent an association between keys and values, where keys are used to look up values. They make it easy to collect values into named groups and access those groups dynamically. They have no direct parallel in CSS, although they're syntactically similar to media query expressions:</source>
          <target state="translated">맵은 키와 값 사이의 연결을 나타내며 키는 값을 찾는 데 사용됩니다. 이름이 지정된 그룹으로 값을 쉽게 수집하고 해당 그룹에 동적으로 액세스 할 수 있습니다. 미디어 쿼리 표현식과 구문 상 유사하지만 CSS에서 직접 병렬이 없습니다.</target>
        </trans-unit>
        <trans-unit id="266e0db2e6092e7da33438bebb8386fdab1f84e9" translate="yes" xml:space="preserve">
          <source>Merges two maps together into a new map. Keys in &lt;code&gt;$map2&lt;/code&gt; will take precedence over keys in &lt;code&gt;$map1&lt;/code&gt;.</source>
          <target state="translated">두 개의 맵을 새로운 맵으로 병합합니다. 의 키 &lt;code&gt;$map2&lt;/code&gt; 의 키보다 우선합니다 &lt;code&gt;$map1&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="51a9c2b299ed6b9e7a2c1942c4f2f202f049e8e3" translate="yes" xml:space="preserve">
          <source>Merging Selector Sequences</source>
          <target state="translated">선택기 시퀀스 병합</target>
        </trans-unit>
        <trans-unit id="1a5d17590464c69e30696f59e46e452b8da18b54" translate="yes" xml:space="preserve">
          <source>Mixes two colors together. Specifically, takes the average of each of the RGB components, optionally weighted by the given percentage. The opacity of the colors is also considered when weighting the components.</source>
          <target state="translated">두 가지 색상을 혼합합니다. 구체적으로, 임의의 주어진 백분율에 의해 가중 된 각각의 RGB 성분의 평균을 취한다. 구성 요소에 가중치를 부여 할 때 색상의 불투명도 고려됩니다.</target>
        </trans-unit>
        <trans-unit id="3e03964482bfe1b1c6309d26cc15ab431a314d03" translate="yes" xml:space="preserve">
          <source>Mixin Directives #mixins</source>
          <target state="translated">Mixin 지시문 #mixins</target>
        </trans-unit>
        <trans-unit id="12f1da765fb7717db8da107e51c52eb9c8a76e44" translate="yes" xml:space="preserve">
          <source>Mixin definitions can also include other mixins. For example:</source>
          <target state="translated">믹스 인 정의에는 다른 믹스 인도 포함될 수 있습니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="e55eee6e21d1bac315ca1a356e8d30a8a5b61967" translate="yes" xml:space="preserve">
          <source>Mixins allow you to define styles that can be re-used throughout the stylesheet without needing to resort to non-semantic classes like &lt;code&gt;.float-left&lt;/code&gt;. Mixins can also contain full CSS rules, and anything else allowed elsewhere in a Sass document. They can even take &lt;a href=&quot;#mixin-arguments&quot;&gt;arguments&lt;/a&gt; which allows you to produce a wide variety of styles with very few mixins.</source>
          <target state="translated">Mixins를 사용하면 &lt;code&gt;.float-left&lt;/code&gt; 와 같은 의미가없는 클래스에 의존하지 않고도 스타일 시트 전체에서 재사용 할 수있는 스타일을 정의 할 수 있습니다 . 믹스 인은 또한 완전한 CSS 규칙과 Sass 문서의 다른 곳에서 허용되는 모든 것을 포함 할 수 있습니다. 심지어 믹스 인을 거의 사용하지 않고 다양한 스타일을 생성 할 수있는 &lt;a href=&quot;#mixin-arguments&quot;&gt;논증&lt;/a&gt; 을 취할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="644fdc872f40164f56f1c53cce947da35dec5fbf" translate="yes" xml:space="preserve">
          <source>Mixins are defined with the &lt;code&gt;@mixin&lt;/code&gt; directive. It's followed by the name of the mixin and optionally the &lt;a href=&quot;#mixin-arguments&quot;&gt;arguments&lt;/a&gt;, and a block containing the contents of the mixin. For example, the &lt;code&gt;large-text&lt;/code&gt; mixin is defined as follows:</source>
          <target state="translated">&lt;code&gt;@mixin&lt;/code&gt; 은 @mixin 지시문 으로 정의됩니다 . 그 다음에는 mixin의 이름과 선택적으로 &lt;a href=&quot;#mixin-arguments&quot;&gt;arguments&lt;/a&gt; 및 mixin의 내용을 포함하는 블록 이옵니다. 예를 들어, &lt;code&gt;large-text&lt;/code&gt; 믹스 인은 다음과 같이 정의됩니다.</target>
        </trans-unit>
        <trans-unit id="8abeb939278636d23f3812346051fac3995b1507" translate="yes" xml:space="preserve">
          <source>Mixins are included in the document with the &lt;code&gt;@include&lt;/code&gt; directive. This takes the name of a mixin and optionally &lt;a href=&quot;#mixin-arguments&quot;&gt;arguments to pass to it&lt;/a&gt;, and includes the styles defined by that mixin into the current rule. For example:</source>
          <target state="translated">믹스 인은 &lt;code&gt;@include&lt;/code&gt; 지시문 과 함께 문서에 포함됩니다 . 여기에는 믹스 인의 이름과 선택적으로 &lt;a href=&quot;#mixin-arguments&quot;&gt;인수를 전달&lt;/a&gt; 하고 해당 믹스 인에 의해 정의 된 스타일을 현재 규칙에 포함시킵니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="aa625b8e1fe09d8119662f87727f1fd539968fe6" translate="yes" xml:space="preserve">
          <source>Mixins can also be included using explicit keyword arguments. For instance, the above example could be written as:</source>
          <target state="translated">명시적인 키워드 인수를 사용하여 믹스 인을 포함 할 수도 있습니다. 예를 들어, 위 예제는 다음과 같이 작성할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a5c96c9da9afb1e3ab9aeab4756923db18e85058" translate="yes" xml:space="preserve">
          <source>Mixins can also specify default values for their arguments using the normal variable-setting syntax. Then when the mixin is included, if it doesn't pass in that argument, the default value will be used instead. For example:</source>
          <target state="translated">믹스 인은 일반 변수 설정 구문을 사용하여 인수의 기본값을 지정할 수도 있습니다. 그런 다음 믹스 인이 포함될 때 해당 인수를 전달하지 않으면 기본값이 대신 사용됩니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="a89f1e192461e5943e97df4ea266b05de3cfe71b" translate="yes" xml:space="preserve">
          <source>Mixins can take SassScript values as arguments, which are given when the mixin is included and made available within the mixin as variables.</source>
          <target state="translated">믹스 인은 SassScript 값을 인수로 사용할 수 있으며, 믹스 인이 포함되어 믹스 인 내에 변수로 제공 될 때 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="2071f293bfe403300472d64fe85c7676303d0010" translate="yes" xml:space="preserve">
          <source>Mixins may also be included outside of any rule (that is, at the root of the document) as long as they don't directly define any properties or use any parent references. For example:</source>
          <target state="translated">믹스 인은 속성을 직접 정의하지 않거나 부모 참조를 사용하지 않는 한 모든 규칙 외부 (즉, 문서 루트)에 포함될 수 있습니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="1b75de159e94ab7dfa1b34d271e0ee2373620128" translate="yes" xml:space="preserve">
          <source>Mixins may also contain selectors, possibly mixed with properties. The selectors can even contain &lt;a href=&quot;#referencing_parent_selectors_&quot;&gt;parent references&lt;/a&gt;. For example:</source>
          <target state="translated">믹스 인에는 속성과 혼합 된 선택기가 포함될 수도 있습니다. 선택기는 &lt;a href=&quot;#referencing_parent_selectors_&quot;&gt;부모 참조를&lt;/a&gt; 포함 할 수도 있습니다 . 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="2e0ba38fcb196c03060e6db7ef49eab994c721b6" translate="yes" xml:space="preserve">
          <source>Mixins may include themselves. This is different than the behavior of Sass versions prior to 3.3, where mixin recursion was forbidden.</source>
          <target state="translated">믹스 인은 자신을 포함 할 수 있습니다. 이것은 mixin 재귀가 금지 된 3.3 이전의 Sass 버전의 동작과 다릅니다.</target>
        </trans-unit>
        <trans-unit id="11ace01bca95506e406ba754b7248182fab3d1d8" translate="yes" xml:space="preserve">
          <source>Mixins that only define descendent selectors can be safely mixed into the top most level of a document.</source>
          <target state="translated">하위 선택기 만 정의하는 믹스 인은 문서의 최상위 레벨에 안전하게 혼합 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d16a27d69c336f36f8b8c3be089eb20a3976fee1" translate="yes" xml:space="preserve">
          <source>Multiple Assignment #each-multi-assign</source>
          <target state="translated">다중 할당 # each-multi-assign</target>
        </trans-unit>
        <trans-unit id="e6f913e5657c2f46bca6d86b0b282bdb4e92d9bf" translate="yes" xml:space="preserve">
          <source>Multiple Extends</source>
          <target state="translated">여러 확장</target>
        </trans-unit>
        <trans-unit id="6b9c3fd36c58a4b311728f37c3faf47f2b86cda9" translate="yes" xml:space="preserve">
          <source>Multiple extends can also be written using a comma-separated list of selectors. For example, &lt;code&gt;@extend .error, .attention&lt;/code&gt; is the same as &lt;code&gt;@extend .error; @extend .attention&lt;/code&gt;.</source>
          <target state="translated">쉼표로 구분 된 선택기 목록을 사용하여 여러 확장을 작성할 수도 있습니다. 예를 들어 &lt;code&gt;@extend .error, .attention&lt;/code&gt; 은 &lt;code&gt;@extend .error; @extend .attention&lt;/code&gt; 와 같습니다. @ extend.attention .</target>
        </trans-unit>
        <trans-unit id="ba6f5c598a8196a3ad3093fcbf81e9ebc9a9bbaa" translate="yes" xml:space="preserve">
          <source>Named arguments can be passed in any order, and arguments with default values can be omitted. Since the named arguments are variable names, underscores and dashes can be used interchangeably.</source>
          <target state="translated">명명 된 인수는 임의의 순서로 전달 될 수 있으며 기본값을 가진 인수는 생략 할 수 있습니다. 명명 된 인수는 변수 이름이므로 밑줄과 대시를 서로 바꿔 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d1f60bbdf9d3e6d11e707a834a9fa47911129fbc" translate="yes" xml:space="preserve">
          <source>Negative index values address elements in reverse order, starting with the last element in the list.</source>
          <target state="translated">음수 인덱스 값은 목록의 마지막 요소부터 시작하여 요소를 역순으로 처리합니다.</target>
        </trans-unit>
        <trans-unit id="2e21957ba8ac2ad32ca0fe1899ea29dd3dc4d523" translate="yes" xml:space="preserve">
          <source>Nested &lt;code&gt;@import&lt;/code&gt; #nested-import</source>
          <target state="translated">중첩 된 &lt;code&gt;@import&lt;/code&gt; # nested-import</target>
        </trans-unit>
        <trans-unit id="ea53187d0b8860192e4cc973b4edf4179ca436b1" translate="yes" xml:space="preserve">
          <source>Nested Properties</source>
          <target state="translated">중첩 속성</target>
        </trans-unit>
        <trans-unit id="ecf40457f10c33b29daa2a84e20b485cd1d251d0" translate="yes" xml:space="preserve">
          <source>Nested Rules</source>
          <target state="translated">중첩 규칙</target>
        </trans-unit>
        <trans-unit id="029abc8fcd094e12c6bd6cb1af59a9ff787923a7" translate="yes" xml:space="preserve">
          <source>Nested properties</source>
          <target state="translated">중첩 속성</target>
        </trans-unit>
        <trans-unit id="f0b610f173b363c6d397168ae6e235e8c6ca1741" translate="yes" xml:space="preserve">
          <source>Nested rules</source>
          <target state="translated">중첩 규칙</target>
        </trans-unit>
        <trans-unit id="829996697cf657d3999063e276100b291e8b02d6" translate="yes" xml:space="preserve">
          <source>Nested style is the default Sass style, because it reflects the structure of the CSS styles and the HTML document they're styling. Each property has its own line, but the indentation isn't constant. Each rule is indented based on how deeply it's nested. For example:</source>
          <target state="translated">중첩 스타일은 기본 Sass 스타일입니다. CSS 스타일의 구조와 스타일을 지정하는 HTML 문서를 반영하기 때문입니다. 각 속성에는 고유 한 줄이 있지만 들여 쓰기는 일정하지 않습니다. 각 규칙은 얼마나 깊이 중첩되어 있는지에 따라 들여 쓰기됩니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="500e991d7263822a1c7bc95c88315929abd16088" translate="yes" xml:space="preserve">
          <source>Nested style is very useful when looking at large CSS files: it allows you to easily grasp the structure of the file without actually reading anything.</source>
          <target state="translated">중첩 스타일은 큰 CSS 파일을 볼 때 매우 유용합니다. 실제로 아무것도 읽지 않고도 파일의 구조를 쉽게 파악할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f8b80d909c92f046f3dca9e5eef78526694d5082" translate="yes" xml:space="preserve">
          <source>Normally when you extend a selector, it's an error if that &lt;code&gt;@extend&lt;/code&gt; doesn't work. For example, if you write &lt;code&gt;a.important {@extend .notice}&lt;/code&gt;, it's an error if there are no selectors that contain &lt;code&gt;.notice&lt;/code&gt;. It's also an error if the only selector containing &lt;code&gt;.notice&lt;/code&gt; is &lt;code&gt;h1.notice&lt;/code&gt;, since &lt;code&gt;h1&lt;/code&gt; conflicts with &lt;code&gt;a&lt;/code&gt; and so no new selector would be generated.</source>
          <target state="translated">일반적으로 선택기를 확장하면 &lt;code&gt;@extend&lt;/code&gt; 가 작동하지 않으면 오류가 발생합니다 . 당신이 쓰는 예를 들어, &lt;code&gt;a.important {@extend .notice}&lt;/code&gt; 포함하는 더 선택기가없는 경우, 에러의 &lt;code&gt;.notice&lt;/code&gt; 가 . 포함 된 유일한 선택하는 경우에도 오류의 &lt;code&gt;.notice&lt;/code&gt; 가 없습니다 &lt;code&gt;h1.notice&lt;/code&gt; 때문에, &lt;code&gt;h1&lt;/code&gt; 충돌 등 새로운 선택이 생성 될 것이다. &lt;code&gt;a&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8a8ffe4eac13c64877326301c06fafbcccc8ae5e" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;$selector&lt;/code&gt;&lt;strong&gt;must be&lt;/strong&gt; a &lt;a href=&quot;http://dev.w3.org/csswg/selectors4/#compound&quot;&gt;compound selector&lt;/a&gt;. That means it cannot contain commas or spaces. It also means that unlike other selector functions, this takes only strings, not lists.</source>
          <target state="translated">참고 &lt;code&gt;$selector&lt;/code&gt; &lt;strong&gt;있어야합니다 &lt;/strong&gt;&lt;a href=&quot;http://dev.w3.org/csswg/selectors4/#compound&quot;&gt;화합물 선택&lt;/a&gt; . 즉, 쉼표 나 공백을 포함 할 수 없습니다. 또한 다른 선택기 함수와 달리 목록이 아닌 문자열 만 사용합니다.</target>
        </trans-unit>
        <trans-unit id="693df4e52e4ff8d7b0244ad166c78c841dadae76" translate="yes" xml:space="preserve">
          <source>Note that colors with an alpha channel (those created with the &lt;a href=&quot;sass/script/functions#rgba-instance_method&quot;&gt;rgba&lt;/a&gt; or &lt;a href=&quot;sass/script/functions#hsla-instance_method&quot;&gt;hsla&lt;/a&gt; functions) must have the same alpha value in order for color arithmetic to be done with them. The arithmetic doesn't affect the alpha value. For example:</source>
          <target state="translated">알파 채널이있는 색상 ( &lt;a href=&quot;sass/script/functions#rgba-instance_method&quot;&gt;rgba&lt;/a&gt; 또는 &lt;a href=&quot;sass/script/functions#hsla-instance_method&quot;&gt;hsla&lt;/a&gt; 함수로 만든 색상)은 색상 산술을 수행하기 위해 동일한 알파 값을 가져야합니다. 산술은 알파 값에 영향을 미치지 않습니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="0de89687514028e280bf5b669d5f5d71ff81cee1" translate="yes" xml:space="preserve">
          <source>Note that if a quoted string is added to an unquoted string (that is, the quoted string is to the left of the &lt;code&gt;+&lt;/code&gt;), the result is a quoted string. Likewise, if an unquoted string is added to a quoted string (the unquoted string is to the left of the &lt;code&gt;+&lt;/code&gt;), the result is an unquoted string. For example:</source>
          <target state="translated">인용 된 문자열이 인용되지 않은 문자열에 추가되는 경우 (즉, 인용 된 문자열은 &lt;code&gt;+&lt;/code&gt; 왼쪽에 있음 ) 결과는 인용 된 문자열입니다. 마찬가지로, 인용되지 않은 문자열이 인용 된 문자열에 추가되면 (인용되지 않은 문자열은 &lt;code&gt;+&lt;/code&gt; 왼쪽에 있음 ) 결과는 인용되지 않은 문자열입니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="4a7263acabd39aa1aeb77388ab202b8bd00638a1" translate="yes" xml:space="preserve">
          <source>Note that map keys can be any Sass data type (even another map) and the syntax for declaring a map allows arbitrary SassScript expressions that will be evaluated to determine the key.</source>
          <target state="translated">맵 키는 임의의 Sass 데이터 유형 (다른 맵일 수도 있음) 일 수 있으며 맵 선언 구문은 키를 결정하기 위해 평가되는 임의의 SassScript 표현식을 허용합니다.</target>
        </trans-unit>
        <trans-unit id="cbe4b8b6895d926247872a4e26c38d5715d96998" translate="yes" xml:space="preserve">
          <source>Note that this command does &lt;em&gt;not&lt;/em&gt; generate CSS files. For that, use the &lt;code&gt;sass&lt;/code&gt; command described elsewhere.</source>
          <target state="translated">이 명령은 CSS 파일을 생성 하지 &lt;em&gt;않습니다&lt;/em&gt; . 이를 위해 다른 곳에 설명 된 &lt;code&gt;sass&lt;/code&gt; 명령을 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="183963367a5b456c3047b44221867d6cef4d1e24" translate="yes" xml:space="preserve">
          <source>Note that unlike some languages, the first character in a Sass string is number 1, the second number 2, and so forth.</source>
          <target state="translated">일부 언어와 달리 Sass 문자열의 첫 번째 문자는 숫자 1, 두 번째 숫자 2 등입니다.</target>
        </trans-unit>
        <trans-unit id="68ca367d5eae7afa2e54d9286cb52633f444a09d" translate="yes" xml:space="preserve">
          <source>Note that unlike some languages, the first item in a Sass list is number 1, the second number 2, and so forth.</source>
          <target state="translated">일부 언어와 달리 Sass 목록의 첫 번째 항목은 숫자 1, 두 번째 숫자 2 등입니다.</target>
        </trans-unit>
        <trans-unit id="e7d5e88030367084f32b1e63e394a792c554cdc8" translate="yes" xml:space="preserve">
          <source>Note that you may not include a partial and a non-partial with the same name in the same directory. For example, &lt;code&gt;_colors.scss&lt;/code&gt; may not exist alongside &lt;code&gt;colors.scss&lt;/code&gt;.</source>
          <target state="translated">동일한 디렉토리에 동일한 이름을 가진 부분 및 비 부분을 포함 할 수 없습니다. 예를 들어 &lt;code&gt;_colors.scss&lt;/code&gt; 는 &lt;code&gt;colors.scss&lt;/code&gt; 와 함께 존재하지 않을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="f8e5b80cd153ea290fe80ec507174a87bc55c594" translate="yes" xml:space="preserve">
          <source>Now everything with class &lt;code&gt;.seriousError&lt;/code&gt; also has class &lt;code&gt;.error&lt;/code&gt;, and everything with class &lt;code&gt;.criticalError&lt;/code&gt; has class &lt;code&gt;.seriousError&lt;/code&gt;&lt;em&gt;and&lt;/em&gt; class &lt;code&gt;.error&lt;/code&gt;. It's compiled to:</source>
          <target state="translated">클래스 이제 모든 &lt;code&gt;.seriousError&lt;/code&gt; 는 또한 클래스가 &lt;code&gt;.error&lt;/code&gt; , 그리고 클래스의 모든 &lt;code&gt;.criticalError&lt;/code&gt; 는 클래스가 &lt;code&gt;.seriousError&lt;/code&gt; &lt;em&gt;및&lt;/em&gt; 클래스 &lt;code&gt;.error&lt;/code&gt; . 다음과 같이 컴파일됩니다.</target>
        </trans-unit>
        <trans-unit id="ab0e1a3421b3343f3824ef813b9855587c7d9d08" translate="yes" xml:space="preserve">
          <source>Null values are treated as empty strings for string interpolation:</source>
          <target state="translated">널 값은 문자열 보간을위한 빈 문자열로 처리됩니다.</target>
        </trans-unit>
        <trans-unit id="e399d7ce3aaf6001026fc3298df535b4d6c80f77" translate="yes" xml:space="preserve">
          <source>Number Operations</source>
          <target state="translated">숫자 연산</target>
        </trans-unit>
        <trans-unit id="c0c3b5ef095430d85fb2cd85d4948d220c3f5146" translate="yes" xml:space="preserve">
          <source>Number operations</source>
          <target state="translated">숫자 연산</target>
        </trans-unit>
        <trans-unit id="9d8672fb5aad66a7b49f343531639b5bd3fc9fb1" translate="yes" xml:space="preserve">
          <source>Often it's more useful to use &lt;a href=&quot;sass/script/functions&quot;&gt;color functions&lt;/a&gt; than to try to use color arithmetic to achieve the same effect.</source>
          <target state="translated">동일한 효과를 얻기 위해 색상 산술을 사용하는 것보다 &lt;a href=&quot;sass/script/functions&quot;&gt;색상 기능&lt;/a&gt; 을 사용하는 것이 더 유용한 경우가 많습니다 .</target>
        </trans-unit>
        <trans-unit id="c1bb7de4e712a1102afa787f557e76b7b4a19cb6" translate="yes" xml:space="preserve">
          <source>On their own, lists don't do much, but the &lt;a href=&quot;sass/script/functions#list-functions&quot;&gt;SassScript list functions&lt;/a&gt; make them useful. The &lt;a href=&quot;sass/script/functions#nth-instance_method&quot;&gt;&lt;code&gt;nth&lt;/code&gt; function&lt;/a&gt; can access items in a list, the &lt;a href=&quot;sass/script/functions#join-instance_method&quot;&gt;&lt;code&gt;join&lt;/code&gt; function&lt;/a&gt; can join multiple lists together, and the &lt;a href=&quot;sass/script/functions#append-instance_method&quot;&gt;&lt;code&gt;append&lt;/code&gt; function&lt;/a&gt; can add items to lists. The &lt;a href=&quot;#each-directive&quot;&gt;&lt;code&gt;@each&lt;/code&gt; directive&lt;/a&gt; can also add styles for each item in a list.</source>
          <target state="translated">자체적으로는 목록이별로 도움이되지 않지만 &lt;a href=&quot;sass/script/functions#list-functions&quot;&gt;SassScript 목록 기능&lt;/a&gt; 은 유용합니다. &lt;a href=&quot;sass/script/functions#nth-instance_method&quot;&gt; &lt;code&gt;nth&lt;/code&gt; 기능은&lt;/a&gt; (가), 목록의 항목에 액세스 할 수 있습니다 &lt;a href=&quot;sass/script/functions#join-instance_method&quot;&gt; &lt;code&gt;join&lt;/code&gt; 기능이&lt;/a&gt; 함께 여러 목록에 가입 할 수 있으며 &lt;a href=&quot;sass/script/functions#append-instance_method&quot;&gt; &lt;code&gt;append&lt;/code&gt; 기능&lt;/a&gt; 목록에 항목을 추가 할 수 있습니다. &lt;a href=&quot;#each-directive&quot;&gt; &lt;code&gt;@each&lt;/code&gt; 의 지시어는&lt;/a&gt; 또한 목록의 각 항목에 대한 스타일을 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="70b57e7b3d16bab3bdd24991cb5e543ffb1d4d18" translate="yes" xml:space="preserve">
          <source>On their own, without any use of &lt;code&gt;@extend&lt;/code&gt;, rulesets that use placeholder selectors will not be rendered to CSS.</source>
          <target state="translated">&lt;code&gt;@extend&lt;/code&gt; 를 사용하지 않고 자리 표시 자 선택기를 사용하는 규칙 세트는 CSS로 렌더링되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="a1fdaa6b2a846c8fcf18d414bf8c61db610eda6a" translate="yes" xml:space="preserve">
          <source>Operations</source>
          <target state="translated">Operations</target>
        </trans-unit>
        <trans-unit id="6bf5da9c080bee3a8142586c412aa39971137eee" translate="yes" xml:space="preserve">
          <source>Options</source>
          <target state="translated">Options</target>
        </trans-unit>
        <trans-unit id="9d722ae6ba6a2a258f254b324106a2e548339c2b" translate="yes" xml:space="preserve">
          <source>Options can be set by setting the &lt;a href=&quot;http://sass-lang.com/documentation/Sass/Plugin/Configuration.html#options-instance_method&quot;&gt;Sass::Plugin#options&lt;/a&gt; hash in &lt;code&gt;environment.rb&lt;/code&gt; in Rails or &lt;code&gt;config.ru&lt;/code&gt; in Rack...</source>
          <target state="translated">Rails의 &lt;code&gt;environment.rb&lt;/code&gt; 에서 &lt;a href=&quot;http://sass-lang.com/documentation/Sass/Plugin/Configuration.html#options-instance_method&quot;&gt;Sass :: Plugin # options&lt;/a&gt; 해시를 설정 하거나 Rack에서 &lt;code&gt;config.ru&lt;/code&gt; 를 설정하여 옵션을 설정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="6f526dde77cafc7928204d8dac6318bed6f35f64" translate="yes" xml:space="preserve">
          <source>Or it can be used with a block containing multiple selectors:</source>
          <target state="translated">또는 여러 선택기를 포함하는 블록과 함께 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d4f2619ee691b00d4f190fa8da9ca100f4cc10ea" translate="yes" xml:space="preserve">
          <source>Other rules that use &lt;code&gt;.error&lt;/code&gt; will work for &lt;code&gt;.seriousError&lt;/code&gt; as well. For example, if we have special styles for errors caused by hackers:</source>
          <target state="translated">&lt;code&gt;.error&lt;/code&gt; 를 사용하는 다른 규칙 은 &lt;code&gt;.seriousError&lt;/code&gt; 에서도 작동 합니다. 예를 들어, 해커로 인한 오류에 대한 특별한 스타일이있는 경우 :</target>
        </trans-unit>
        <trans-unit id="3aef76f8ba6fd4806d49ff4edaf1a4218d4bfc97" translate="yes" xml:space="preserve">
          <source>Output Style</source>
          <target state="translated">출력 스타일</target>
        </trans-unit>
        <trans-unit id="a2aaba6b325189ed96937a41610eb44a978a20f8" translate="yes" xml:space="preserve">
          <source>Output Styles</source>
          <target state="translated">출력 스타일</target>
        </trans-unit>
        <trans-unit id="2df118b905265e6c5d11e3b228c057a3b6eccb04" translate="yes" xml:space="preserve">
          <source>Overloads:</source>
          <target state="translated">Overloads:</target>
        </trans-unit>
        <trans-unit id="381c775599d6e4185d4410725809e360928357cd" translate="yes" xml:space="preserve">
          <source>Parameters:</source>
          <target state="translated">Parameters:</target>
        </trans-unit>
        <trans-unit id="f9627107a88876f4aaf6d7e0b0c19984c3a631ae" translate="yes" xml:space="preserve">
          <source>Parentheses</source>
          <target state="translated">Parentheses</target>
        </trans-unit>
        <trans-unit id="5a5d3ecaebab08de9a057833d6989aba76a6656a" translate="yes" xml:space="preserve">
          <source>Parentheses can be used to affect the order of operations:</source>
          <target state="translated">괄호를 사용하여 작업 순서에 영향을 줄 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="475223ba441a6a2cbde2eba855bcbcf7b222ffeb" translate="yes" xml:space="preserve">
          <source>Parses a user-provided selector into a list of lists of strings as returned by &lt;code&gt;&amp;amp;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&amp;amp;&lt;/code&gt; 에서 반환 한대로 사용자 제공 선택기를 문자열 목록으로 구문 분석합니다 .</target>
        </trans-unit>
        <trans-unit id="382fe0b44eb7a4d065589fd8df9dba7c7e579df1" translate="yes" xml:space="preserve">
          <source>Partials #partials</source>
          <target state="translated">부분 # 부분</target>
        </trans-unit>
        <trans-unit id="174507f368602cb47eca3dcf6a7c4744ce9c47f3" translate="yes" xml:space="preserve">
          <source>Passing Content Blocks to a Mixin #mixin-content</source>
          <target state="translated">콘텐츠 블록을 Mixin # mixin-content로 전달</target>
        </trans-unit>
        <trans-unit id="b8dbc970b1740db190bc80080356a5c06b33e85a" translate="yes" xml:space="preserve">
          <source>Placeholder Selectors: &lt;code&gt;%foo&lt;/code&gt;</source>
          <target state="translated">자리 표시 자 선택기 : &lt;code&gt;%foo&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b0f1e4410b7c54d63bca94a5b0237017928759bd" translate="yes" xml:space="preserve">
          <source>Placeholder selectors look like class and id selectors, except the &lt;code&gt;#&lt;/code&gt; or &lt;code&gt;.&lt;/code&gt; is replaced by &lt;code&gt;%&lt;/code&gt;. They can be used anywhere a class or id could, and on their own they prevent rulesets from being rendered to CSS. For example:</source>
          <target state="translated">자리 표시 자 선택기는 제외하고, 클래스와 ID 선택기처럼 &lt;code&gt;#&lt;/code&gt; 또는 &lt;code&gt;.&lt;/code&gt; &lt;code&gt;%&lt;/code&gt; 로 대체되었습니다 . 클래스 나 ID가있는 곳이면 어디에서나 사용할 수 있으며, 자체적으로 규칙 세트가 CSS로 렌더링되는 것을 방지합니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="919c02f72c8dc766a3ec88ccb258a30d50b18ab4" translate="yes" xml:space="preserve">
          <source>Rack/Rails/Merb Plugin</source>
          <target state="translated">랙 / 레일 / Merb 플러그인</target>
        </trans-unit>
        <trans-unit id="e0eb5268f437200e3ca42ec2d178bdfb80e8e252" translate="yes" xml:space="preserve">
          <source>Raises:</source>
          <target state="translated">Raises:</target>
        </trans-unit>
        <trans-unit id="c07be06a9d0942a578db072018d18f8a662503c6" translate="yes" xml:space="preserve">
          <source>Referencing Parent Selectors: &lt;code&gt;&amp;amp;&lt;/code&gt; #parent-selector</source>
          <target state="translated">부모 선택기 참조 : &lt;code&gt;&amp;amp;&lt;/code&gt; # parent-selector</target>
        </trans-unit>
        <trans-unit id="300d986e9c634e87b8a5acab34b704dc9f08b5e3" translate="yes" xml:space="preserve">
          <source>Relational operators (&lt;code&gt;&amp;lt;&lt;/code&gt;, &lt;code&gt;&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;=&lt;/code&gt;, &lt;code&gt;&amp;gt;=&lt;/code&gt;) are also supported for numbers, and equality operators (&lt;code&gt;==&lt;/code&gt;, &lt;code&gt;!=&lt;/code&gt;) are supported for all types.</source>
          <target state="translated">관계 연산자 ( &lt;code&gt;&amp;lt;&lt;/code&gt; , &lt;code&gt;&amp;gt;&lt;/code&gt; , &lt;code&gt;&amp;lt;=&lt;/code&gt; , &lt;code&gt;&amp;gt;=&lt;/code&gt; )도 숫자에 대한 지원, 평등 연산자 ( &lt;code&gt;==&lt;/code&gt; , &lt;code&gt;!=&lt;/code&gt; ) 모든 종류의 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="670a1246f19c95ceec3dc72fea9216deb3b1e8e8" translate="yes" xml:space="preserve">
          <source>Removes quotes from a string. If the string is already unquoted, this will return it unmodified.</source>
          <target state="translated">문자열에서 따옴표를 제거합니다. 문자열이 이미 인용되지 않은 경우 수정되지 않은 상태로 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="1607356e597f16ff04732753955c924b6ac2187c" translate="yes" xml:space="preserve">
          <source>Replaces all instances of &lt;code&gt;$original&lt;/code&gt; with &lt;code&gt;$replacement&lt;/code&gt; in &lt;code&gt;$selector&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;$selector&lt;/code&gt; 에서 $ &lt;code&gt;$original&lt;/code&gt; 의 모든 인스턴스 를 &lt;code&gt;$replacement&lt;/code&gt; 로 바꿉니다.</target>
        </trans-unit>
        <trans-unit id="0a098796ce9c4464f246388db35938a4fb8e9e25" translate="yes" xml:space="preserve">
          <source>Return a decimal between 0 and 1, inclusive of 0 but not 1.</source>
          <target state="translated">0을 포함하지만 1은 포함하지 않는 0과 1 사이의 소수를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="ca697c9676025d695d9bb3bdfe66da3ae3200550" translate="yes" xml:space="preserve">
          <source>Return a new list, based on the list provided, but with the nth element changed to the value given.</source>
          <target state="translated">제공된 목록을 기준으로 새 목록을 반환하지만 n 번째 요소가 제공된 값으로 변경되었습니다.</target>
        </trans-unit>
        <trans-unit id="f6a62674270588e7988262fa17987874416e5829" translate="yes" xml:space="preserve">
          <source>Return a new selector with all selectors in &lt;code&gt;$selectors&lt;/code&gt; appended one another as though they had been nested in the stylesheet as &lt;code&gt;$selector1 { &amp;amp;$selector2 { ... } }&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;$selector1 { &amp;amp;$selector2 { ... } }&lt;/code&gt; 로 스타일 시트에 중첩 된 것처럼 &lt;code&gt;$selectors&lt;/code&gt; 모든 선택기가 서로 추가 된 새 선택기를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="d786c6c7ee742054a909f7c1b81b3ba1b0385868" translate="yes" xml:space="preserve">
          <source>Return a new selector with all selectors in &lt;code&gt;$selectors&lt;/code&gt; nested beneath one another as though they had been nested in the stylesheet as &lt;code&gt;$selector1 { $selector2 { ... } }&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;$selector1 { $selector2 { ... } }&lt;/code&gt; 로 스타일 시트에 중첩 된 것처럼 &lt;code&gt;$selectors&lt;/code&gt; 모든 선택기가 서로 중첩 된 새 선택기를 반환하십시오 .</target>
        </trans-unit>
        <trans-unit id="fecae0aae65cbb793f8b56a5e7bd50520734109b" translate="yes" xml:space="preserve">
          <source>Return a string containing the value as its Sass representation.</source>
          <target state="translated">Sass 표현으로 값을 포함하는 문자열을 리턴하십시오.</target>
        </trans-unit>
        <trans-unit id="90e91a4bbe1cfd7eb6a7673ffd79bad43d456339" translate="yes" xml:space="preserve">
          <source>Return an integer between 1 and &lt;code&gt;$limit&lt;/code&gt;, inclusive of both 1 and &lt;code&gt;$limit&lt;/code&gt;.</source>
          <target state="translated">1 사이의 정수 반환 &lt;code&gt;$limit&lt;/code&gt; 모두 1 포함, &lt;code&gt;$limit&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c07470b33157e00d0801cb59275e075b771c1ccb" translate="yes" xml:space="preserve">
          <source>Return the length of a list.</source>
          <target state="translated">리스트의 길이를 돌려줍니다.</target>
        </trans-unit>
        <trans-unit id="8f6a052d8f52ede9829ca353baf2ad1fe25aef91" translate="yes" xml:space="preserve">
          <source>Returns A list of lists of strings representing &lt;code&gt;$selector&lt;/code&gt;. This is in the same format as a selector returned by &lt;code&gt;&amp;amp;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;$selector&lt;/code&gt; 나타내는 문자열 목록을 리턴합니다 . &lt;code&gt;&amp;amp;&lt;/code&gt; 로 반환 된 선택기와 같은 형식 입니다.</target>
        </trans-unit>
        <trans-unit id="c8b878ae579da9409cf7d7baa8ef1f74d25be570" translate="yes" xml:space="preserve">
          <source>Returns A list of lists of strings representing the result of appending &lt;code&gt;$selectors&lt;/code&gt;. This is in the same format as a selector returned by &lt;code&gt;&amp;amp;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;$selectors&lt;/code&gt; 추가 결과를 나타내는 문자열 목록을 리턴합니다 . &lt;code&gt;&amp;amp;&lt;/code&gt; 로 반환 된 선택기와 같은 형식 입니다.</target>
        </trans-unit>
        <trans-unit id="681bf66491ff841a9a3ecda1364da535f5efc671" translate="yes" xml:space="preserve">
          <source>Returns A list of lists of strings representing the result of nesting &lt;code&gt;$selectors&lt;/code&gt;. This is in the same format as a selector returned by &lt;code&gt;&amp;amp;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;$selectors&lt;/code&gt; 를 중첩 한 결과를 나타내는 문자열 목록을 반환합니다 . &lt;code&gt;&amp;amp;&lt;/code&gt; 로 반환 된 선택기와 같은 형식 입니다.</target>
        </trans-unit>
        <trans-unit id="cafdbbccfa855d711958927868096ff911afe9f8" translate="yes" xml:space="preserve">
          <source>Returns A list of lists of strings representing the result of the extension. This is in the same format as a selector returned by &lt;code&gt;&amp;amp;&lt;/code&gt;.</source>
          <target state="translated">확장 결과를 나타내는 문자열 목록을 반환합니다. &lt;code&gt;&amp;amp;&lt;/code&gt; 로 반환 된 선택기와 같은 형식 입니다.</target>
        </trans-unit>
        <trans-unit id="cb3112dd58bcce2f656ec836bc0870940f3b7cb6" translate="yes" xml:space="preserve">
          <source>Returns A list of lists of strings representing the result of the unification, or null if no unification exists. This is in the same format as a selector returned by &lt;code&gt;&amp;amp;&lt;/code&gt;.</source>
          <target state="translated">통합 결과를 나타내는 문자열 목록을 리턴하거나 통합이없는 경우 널을 리턴합니다. &lt;code&gt;&amp;amp;&lt;/code&gt; 로 반환 된 선택기와 같은 형식 입니다.</target>
        </trans-unit>
        <trans-unit id="7fff605b99df76ab731c698f7cedf9a3671871f0" translate="yes" xml:space="preserve">
          <source>Returns A list of simple selectors in the compound selector.</source>
          <target state="translated">복합 선택기의 단순 선택기 목록을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="7810bbd9c0fa87887e06262e239afdf0537d4582" translate="yes" xml:space="preserve">
          <source>Returns The substring. This will be quoted if and only if &lt;code&gt;$string&lt;/code&gt; was quoted</source>
          <target state="translated">부분 문자열을 반환합니다. &lt;code&gt;$string&lt;/code&gt; 이 인용 된 경우에만 인용됩니다.</target>
        </trans-unit>
        <trans-unit id="45122d96ce3cff3b4f36a0787a2f17262c4946d7" translate="yes" xml:space="preserve">
          <source>Returns Whether &lt;code&gt;$selector1&lt;/code&gt; is a superselector of &lt;code&gt;$selector2&lt;/code&gt;.</source>
          <target state="translated">반환 여부 &lt;code&gt;$selector1&lt;/code&gt; 의 superselector입니다 &lt;code&gt;$selector2&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f45056679ba8933cc8f58a15e532480b82589e48" translate="yes" xml:space="preserve">
          <source>Returns a list of all keys in a map.</source>
          <target state="translated">지도의 모든 키 목록을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="468e70b240f8d38fce4be5ca4f56db2f415dfc22" translate="yes" xml:space="preserve">
          <source>Returns a list of all values in a map. This list may include duplicate values, if multiple keys have the same value.</source>
          <target state="translated">지도의 모든 값 목록을 반환합니다. 여러 키의 값이 동일한 경우이 목록에 중복 값이 ​​포함될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f6d643e2176a2ae6ca49ca4e54fd08bc70807b73" translate="yes" xml:space="preserve">
          <source>Returns a new map with keys removed.</source>
          <target state="translated">키가 제거 된 새지도를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="aa71fec219d9e6da99bbca84041bb4d3e6acaaca" translate="yes" xml:space="preserve">
          <source>Returns a new version of &lt;code&gt;$selector&lt;/code&gt; with &lt;code&gt;$extendee&lt;/code&gt; extended with &lt;code&gt;$extender&lt;/code&gt;. This works just like the result of</source>
          <target state="translated">반환의 새로운 버전 &lt;code&gt;$selector&lt;/code&gt; 와 &lt;code&gt;$extendee&lt;/code&gt; 로 확장 &lt;code&gt;$extender&lt;/code&gt; . 이것은 다음과 같은 결과로 작동합니다</target>
        </trans-unit>
        <trans-unit id="79db0f86648abae15ff2e887d2f8b783c7aca591" translate="yes" xml:space="preserve">
          <source>Returns a reference to a function for later invocation with the &lt;code&gt;call()&lt;/code&gt; function.</source>
          <target state="translated">&lt;code&gt;call()&lt;/code&gt; 함수를 사용하여 나중에 호출하기위한 함수에 대한 참조를 리턴 합니다.</target>
        </trans-unit>
        <trans-unit id="dd453ac892432e3a43f7f4574d7f4c8c32a37a86" translate="yes" xml:space="preserve">
          <source>Returns a unique CSS identifier. The identifier is returned as an unquoted string. The identifier returned is only guaranteed to be unique within the scope of a single Sass run.</source>
          <target state="translated">고유 한 CSS 식별자를 반환합니다. 식별자는 따옴표없는 문자열로 반환됩니다. 반환 된 식별자는 단일 Sass 실행 범위 내에서만 고유해야합니다.</target>
        </trans-unit>
        <trans-unit id="ebd04b66d30293595136a62cc8fac8b316642c0c" translate="yes" xml:space="preserve">
          <source>Returns one of two values, depending on whether or not &lt;code&gt;$condition&lt;/code&gt; is true. Just like in &lt;code&gt;@if&lt;/code&gt;, all values other than &lt;code&gt;false&lt;/code&gt; and &lt;code&gt;null&lt;/code&gt; are considered to be true.</source>
          <target state="translated">&lt;code&gt;$condition&lt;/code&gt; 이 true 인지 여부에 따라 두 값 중 하나를 리턴 합니다. &lt;code&gt;@if&lt;/code&gt; 에서 와 같이 &lt;code&gt;false&lt;/code&gt; 및 &lt;code&gt;null&lt;/code&gt; 이외의 모든 값 은 true로 간주됩니다.</target>
        </trans-unit>
        <trans-unit id="64badb95bd6e180f7ab47ec8541c943a1790de67" translate="yes" xml:space="preserve">
          <source>Returns the &lt;a href=&quot;http://dev.w3.org/csswg/selectors4/#simple&quot;&gt;simple selectors&lt;/a&gt; that comprise the compound selector &lt;code&gt;$selector&lt;/code&gt;.</source>
          <target state="translated">복합 선택기 &lt;code&gt;$selector&lt;/code&gt; 를 구성 하는 &lt;a href=&quot;http://dev.w3.org/csswg/selectors4/#simple&quot;&gt;단순 선택기&lt;/a&gt; 를 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="92873924a9d3752bf60b47c8caa32746f6f19e6a" translate="yes" xml:space="preserve">
          <source>Returns the absolute value of a number.</source>
          <target state="translated">숫자의 절대 값을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="f46b179b300313527135804bce4ea7f6a9606098" translate="yes" xml:space="preserve">
          <source>Returns the alpha component (opacity) of a color. This is 1 unless otherwise specified.</source>
          <target state="translated">색상의 알파 성분 (불투명도)을 반환합니다. 달리 지정하지 않는 한 1입니다.</target>
        </trans-unit>
        <trans-unit id="12c86362af22b819d23c565553dc7874f1a4f890" translate="yes" xml:space="preserve">
          <source>Returns the complement of a color. This is identical to &lt;code&gt;adjust-hue(color, 180deg)&lt;/code&gt;.</source>
          <target state="translated">색의 보수를 돌려줍니다. 이것은 &lt;code&gt;adjust-hue(color, 180deg)&lt;/code&gt; 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="b714880704f4221e7c84d524db3b93d8c1914511" translate="yes" xml:space="preserve">
          <source>Returns the hue component of a color. See &lt;a href=&quot;http://en.wikipedia.org/wiki/HSL_and_HSV#Conversion_from_RGB_to_HSL_or_HSV&quot;&gt;the CSS3 HSL specification&lt;/a&gt;. Calculated from RGB where necessary via &lt;a href=&quot;http://en.wikipedia.org/wiki/HSL_and_HSV#Conversion_from_RGB_to_HSL_or_HSV&quot;&gt;this algorithm&lt;/a&gt;.</source>
          <target state="translated">색상의 색조 구성 요소를 반환합니다. &lt;a href=&quot;http://en.wikipedia.org/wiki/HSL_and_HSV#Conversion_from_RGB_to_HSL_or_HSV&quot;&gt;CSS3 HSL 사양을&lt;/a&gt; 참조하십시오 . &lt;a href=&quot;http://en.wikipedia.org/wiki/HSL_and_HSV#Conversion_from_RGB_to_HSL_or_HSV&quot;&gt;이 알고리즘을&lt;/a&gt; 통해 필요한 경우 RGB에서 계산됩니다 .</target>
        </trans-unit>
        <trans-unit id="6a86d40dc31663716b8dd230ca848ea8debb7627" translate="yes" xml:space="preserve">
          <source>Returns the index of the first occurrence of &lt;code&gt;$substring&lt;/code&gt; in &lt;code&gt;$string&lt;/code&gt;. If there is no such occurrence, returns &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;$string&lt;/code&gt; 에서 $ &lt;code&gt;$substring&lt;/code&gt; 이 처음 나타나는 색인을 리턴합니다 . 그러한 발생이 없으면 &lt;code&gt;null&lt;/code&gt; 을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="b0f1c6f93d5d7d41e6d57ca82b7380bcf1c5f875" translate="yes" xml:space="preserve">
          <source>Returns the inverse (negative) of a color. The red, green, and blue values are inverted, while the opacity is left alone.</source>
          <target state="translated">색상의 역수 (음수)를 반환합니다. 빨강, 녹색 및 파랑 값은 반전되고 불투명도는 그대로 유지됩니다.</target>
        </trans-unit>
        <trans-unit id="dda555fb62111de0a6fb209830d06dd85ab5571c" translate="yes" xml:space="preserve">
          <source>Returns the lightness component of a color. See &lt;a href=&quot;http://en.wikipedia.org/wiki/HSL_and_HSV#Conversion_from_RGB_to_HSL_or_HSV&quot;&gt;the CSS3 HSL specification&lt;/a&gt;. Calculated from RGB where necessary via &lt;a href=&quot;http://en.wikipedia.org/wiki/HSL_and_HSV#Conversion_from_RGB_to_HSL_or_HSV&quot;&gt;this algorithm&lt;/a&gt;.</source>
          <target state="translated">색상의 밝기 구성 요소를 반환합니다. &lt;a href=&quot;http://en.wikipedia.org/wiki/HSL_and_HSV#Conversion_from_RGB_to_HSL_or_HSV&quot;&gt;CSS3 HSL 사양을&lt;/a&gt; 참조하십시오 . &lt;a href=&quot;http://en.wikipedia.org/wiki/HSL_and_HSV#Conversion_from_RGB_to_HSL_or_HSV&quot;&gt;이 알고리즘을&lt;/a&gt; 통해 필요한 경우 RGB에서 계산됩니다 .</target>
        </trans-unit>
        <trans-unit id="a4c72c1f0ec9a89d8e1d0dd82e563fd74978d2df" translate="yes" xml:space="preserve">
          <source>Returns the map of named arguments passed to a function or mixin that takes a variable argument list. The argument names are strings, and they do not contain the leading &lt;code&gt;$&lt;/code&gt;.</source>
          <target state="translated">변수 인수 목록을 취하는 함수 또는 믹스 인에 전달 된 명명 된 인수의 맵을 리턴합니다. 인수 이름은 문자열이며 앞에 &lt;code&gt;$&lt;/code&gt; 가 포함되지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="e9d66a090772cb1ac29a4a909fc75131e66ec53a" translate="yes" xml:space="preserve">
          <source>Returns the number of characters in a string.</source>
          <target state="translated">문자열의 문자 수를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="51adfc85d1372e7351711e3637b7302b4685ad67" translate="yes" xml:space="preserve">
          <source>Returns the position of a value within a list. If the value isn't found, returns &lt;code&gt;null&lt;/code&gt; instead.</source>
          <target state="translated">목록 내에서 값의 위치를 ​​반환합니다. 값을 찾을 수 없으면 대신 &lt;code&gt;null&lt;/code&gt; 을 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="a6cdad8aaddc6f132e2bab59fdb694bb44740b3e" translate="yes" xml:space="preserve">
          <source>Returns the saturation component of a color. See &lt;a href=&quot;http://en.wikipedia.org/wiki/HSL_and_HSV#Conversion_from_RGB_to_HSL_or_HSV&quot;&gt;the CSS3 HSL specification&lt;/a&gt;. Calculated from RGB where necessary via &lt;a href=&quot;http://en.wikipedia.org/wiki/HSL_and_HSV#Conversion_from_RGB_to_HSL_or_HSV&quot;&gt;this algorithm&lt;/a&gt;.</source>
          <target state="translated">색상의 채도 구성 요소를 반환합니다. &lt;a href=&quot;http://en.wikipedia.org/wiki/HSL_and_HSV#Conversion_from_RGB_to_HSL_or_HSV&quot;&gt;CSS3 HSL 사양을&lt;/a&gt; 참조하십시오 . &lt;a href=&quot;http://en.wikipedia.org/wiki/HSL_and_HSV#Conversion_from_RGB_to_HSL_or_HSV&quot;&gt;이 알고리즘을&lt;/a&gt; 통해 필요한 경우 RGB에서 계산됩니다 .</target>
        </trans-unit>
        <trans-unit id="4f998c8bd6e3f467c292b5f896cdc1bfbad1e118" translate="yes" xml:space="preserve">
          <source>Returns the separator of a list. If the list doesn't have a separator due to having fewer than two elements, returns &lt;code&gt;space&lt;/code&gt;.</source>
          <target state="translated">리스트의 분리자를 돌려줍니다. 두 개 미만의 요소로 인해 목록에 구분 기호가없는 경우 &lt;code&gt;space&lt;/code&gt; 를 반환 합니다 .</target>
        </trans-unit>
        <trans-unit id="e4dd2b713f992a8bd714d2b748a64683b9489dc1" translate="yes" xml:space="preserve">
          <source>Returns the type of a value.</source>
          <target state="translated">값의 유형을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="52c8bae0dde8ae72c66d9780a9be60588342bc2f" translate="yes" xml:space="preserve">
          <source>Returns the unit(s) associated with a number. Complex units are sorted in alphabetical order by numerator and denominator.</source>
          <target state="translated">숫자와 관련된 단위를 반환합니다. 복소수는 분자와 분모로 알파벳 순서로 정렬됩니다.</target>
        </trans-unit>
        <trans-unit id="01c83de52a2dca912d609d97b917f8b85561d97e" translate="yes" xml:space="preserve">
          <source>Returns the value in a map associated with the given key. If the map doesn't have such a key, returns &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">주어진 키와 관련된 맵의 값을 반환합니다. 지도에 그러한 키가 없으면 &lt;code&gt;null&lt;/code&gt; 을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="6a53ebaa01a91a951006e99359c0e5fcf7bd6b1c" translate="yes" xml:space="preserve">
          <source>Returns whether &lt;code&gt;$super&lt;/code&gt; is a superselector of &lt;code&gt;$sub&lt;/code&gt;. This means that &lt;code&gt;$super&lt;/code&gt; matches all the elements that &lt;code&gt;$sub&lt;/code&gt; matches, as well as possibly additional elements. In general, simpler selectors tend to be superselectors of more complex oned.</source>
          <target state="translated">&lt;code&gt;$super&lt;/code&gt; 가 &lt;code&gt;$sub&lt;/code&gt; 의 수퍼 셀렉터 인지 여부를 리턴합니다 . 이는 &lt;code&gt;$super&lt;/code&gt; 가 &lt;code&gt;$sub&lt;/code&gt; 와 일치 하는 모든 요소 및 추가 요소 와 일치 함을 의미합니다 . 일반적으로 간단한 선택기는 더 복잡한 선택기 인 경향이 있습니다.</target>
        </trans-unit>
        <trans-unit id="002cc08698af3245841b56580f4802889b222e9b" translate="yes" xml:space="preserve">
          <source>Returns whether a feature exists in the current Sass runtime.</source>
          <target state="translated">현재 Sass 런타임에 기능이 있는지 여부를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="9e1c1081c33d4ac1921a8fcefbe4187e66d4fcc4" translate="yes" xml:space="preserve">
          <source>Returns whether a list uses square brackets.</source>
          <target state="translated">리스트가 대괄호를 사용하는지 여부를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="b00d68d5169484005d39afdd83116fbb95e55a30" translate="yes" xml:space="preserve">
          <source>Returns whether a map has a value associated with a given key.</source>
          <target state="translated">지도에 지정된 키와 관련된 값이 있는지 여부를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="ede60bc210641adae890fb0f1eb3bd4419854021" translate="yes" xml:space="preserve">
          <source>Returns whether a number has units.</source>
          <target state="translated">숫자에 단위가 있는지 여부를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="513e5d1980899cec88f10b5fa101612d18128fb5" translate="yes" xml:space="preserve">
          <source>Returns whether two numbers can added, subtracted, or compared.</source>
          <target state="translated">두 숫자를 더하거나 빼거나 비교할 수 있는지 여부를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="7749fcf802c472b6c2f5bd0556805e456ffd5674" translate="yes" xml:space="preserve">
          <source>Returns:</source>
          <target state="translated">Returns:</target>
        </trans-unit>
        <trans-unit id="ceac41cf1a3ce44c31141786b8378b18726d6760" translate="yes" xml:space="preserve">
          <source>Rounds a number down to the previous whole number.</source>
          <target state="translated">숫자를 이전 정수로 내림합니다.</target>
        </trans-unit>
        <trans-unit id="76c0fc06f4f913113e6238495ff0b6e9310e1e71" translate="yes" xml:space="preserve">
          <source>Rounds a number to the nearest whole number.</source>
          <target state="translated">가장 가까운 정수로 반올림합니다.</target>
        </trans-unit>
        <trans-unit id="ec103be4593a89ce5a25e929fcd41f443602c66e" translate="yes" xml:space="preserve">
          <source>Rounds a number up to the next whole number.</source>
          <target state="translated">숫자를 다음 정수로 올림합니다.</target>
        </trans-unit>
        <trans-unit id="b6eeeb3abd2a7bc179a6b6d5c56488b5f8c903a7" translate="yes" xml:space="preserve">
          <source>Sass</source>
          <target state="translated">Sass</target>
        </trans-unit>
        <trans-unit id="10f303be29e42d399e1affaea1a02b6e87b23864" translate="yes" xml:space="preserve">
          <source>Sass (Syntactically Awesome StyleSheets)</source>
          <target state="translated">Sass (구문 적으로 멋진 스타일 시트)</target>
        </trans-unit>
        <trans-unit id="341d3556acd434f0488bd651ce9f2aa58ae8059e" translate="yes" xml:space="preserve">
          <source>Sass Functions</source>
          <target state="translated">사스 함수</target>
        </trans-unit>
        <trans-unit id="12104abfe0a714244e52948eb45c8539279c98f2" translate="yes" xml:space="preserve">
          <source>Sass allows CSS rules to be nested within one another. The inner rule then only applies within the outer rule's selector. For example:</source>
          <target state="translated">Sass를 사용하면 CSS 규칙을 서로 중첩시킬 수 있습니다. 그러면 내부 규칙은 외부 규칙의 선택기에만 적용됩니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="4c4356380b68b4f78ea663bc4f71a4efe353604b" translate="yes" xml:space="preserve">
          <source>Sass allows you to choose between four different output styles by setting the &lt;a href=&quot;#style-option&quot;&gt;&lt;code&gt;:style&lt;/code&gt; option&lt;/a&gt; or using the &lt;code&gt;--style&lt;/code&gt; command-line flag.</source>
          <target state="translated">Sass에서는 &lt;a href=&quot;#style-option&quot;&gt; &lt;code&gt;:style&lt;/code&gt; 옵션&lt;/a&gt; 을 설정 하거나 &lt;code&gt;--style&lt;/code&gt; 명령 줄 플래그를 사용하여 네 가지 출력 스타일 중에서 선택할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="1fcecb417df186591f20e0217f21fc1287957cb4" translate="yes" xml:space="preserve">
          <source>Sass caches parsed documents so that they can be reused without parsing them again unless they have changed. By default, Sass will write these cache files to a location on the filesystem indicated by &lt;a href=&quot;#cache_location-option&quot;&gt;&lt;code&gt;:cache_location&lt;/code&gt;&lt;/a&gt;. If you cannot write to the filesystem or need to share cache across ruby processes or machines, then you can define your own cache store and set the&lt;a href=&quot;#cache_store-option&quot;&gt;&lt;code&gt;:cache_store&lt;/code&gt; option&lt;/a&gt;. For details on creating your own cache store, please see the &lt;a href=&quot;http://sass-lang.com/documentation/Sass/CacheStores/Base.html&quot;&gt;source documentation&lt;/a&gt;.</source>
          <target state="translated">Sass는 구문 분석 된 문서를 캐시하여 변경하지 않는 한 다시 구문 분석하지 않고 재사용 할 수 있도록합니다. 기본적으로 Sass는 이러한 캐시 파일을 &lt;a href=&quot;#cache_location-option&quot;&gt; &lt;code&gt;:cache_location&lt;/code&gt; 으로&lt;/a&gt; 표시된 파일 시스템의 위치에 씁니다 . 파일 시스템에 쓸 수 없거나 루비 프로세스 또는 머신에서 캐시를 공유해야하는 경우 고유 한 캐시 저장소를 정의하고 &lt;a href=&quot;#cache_store-option&quot;&gt; &lt;code&gt;:cache_store&lt;/code&gt; 옵션을&lt;/a&gt; 설정할 수 있습니다 . 자체 캐시 저장소 작성에 대한 자세한 내용은 &lt;a href=&quot;http://sass-lang.com/documentation/Sass/CacheStores/Base.html&quot;&gt;소스 문서&lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="bfd8d49434b5dc18b7647e61d36eb01f1ddf972c" translate="yes" xml:space="preserve">
          <source>Sass can be used in three ways: as a command-line tool, as a standalone Ruby module, and as a plugin for any Rack-enabled framework, including Ruby on Rails and Merb. The first step for all of these is to install the Sass gem:</source>
          <target state="translated">Sass는 명령 줄 도구, 독립형 Ruby 모듈 및 Ruby on Rails 및 Merb를 포함한 모든 랙 지원 프레임 워크의 플러그인으로 세 가지 방식으로 사용할 수 있습니다. 이 모든 것의 첫 번째 단계는 Sass gem을 설치하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="9785c4245593a2393e5e7772e6bebb5a19179df5" translate="yes" xml:space="preserve">
          <source>Sass extends the CSS &lt;code&gt;@import&lt;/code&gt; rule to allow it to import SCSS and Sass files. All imported SCSS and Sass files will be merged together into a single CSS output file. In addition, any variables or &lt;a href=&quot;#mixins&quot;&gt;mixins&lt;/a&gt; defined in imported files can be used in the main file.</source>
          <target state="translated">Sass는 CSS &lt;code&gt;@import&lt;/code&gt; 규칙을 확장하여 SCSS 및 Sass 파일을 가져올 수 있습니다. 가져온 모든 SCSS 및 Sass 파일은 단일 CSS 출력 파일로 병합됩니다. 또한 가져온 파일에 정의 된 모든 변수 또는 &lt;a href=&quot;#mixins&quot;&gt;믹스 인을&lt;/a&gt; 기본 파일에서 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5f61b7c2b219adb088c062ff92b89a8fd236d7b6" translate="yes" xml:space="preserve">
          <source>Sass functions can also be called using explicit keyword arguments. The above example can also be written as:</source>
          <target state="translated">명시 적 키워드 인수를 사용하여 Sass 함수를 호출 할 수도 있습니다. 위의 예제는 다음과 같이 작성할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="cfa9fc50eb1a1d181640003689cbe25d33fc0977" translate="yes" xml:space="preserve">
          <source>Sass importers are in charge of taking paths passed to &lt;code&gt;@import&lt;/code&gt; and finding the appropriate Sass code for those paths. By default, this code is loaded from the &lt;a href=&quot;http://sass-lang.com/documentation/Sass/Importers/Filesystem.html&quot;&gt;filesystem&lt;/a&gt;, but importers could be added to load from a database, over HTTP, or use a different file naming scheme than what Sass expects.</source>
          <target state="translated">Sass 수입 업체는 &lt;code&gt;@import&lt;/code&gt; 로 전달 된 경로를 가져와 해당 경로에 적합한 Sass 코드를 찾는 작업 을 담당 합니다. 기본적으로이 코드는 &lt;a href=&quot;http://sass-lang.com/documentation/Sass/Importers/Filesystem.html&quot;&gt;파일 시스템&lt;/a&gt; 에서로드 되지만 가져 오기 프로그램을 추가하여 데이터베이스를 통해로드하거나 HTTP를 통해 추가하거나 Sass가 예상하는 것과 다른 파일 이름 지정 체계를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="55fbe07c7def3c112a3dd15dcf43d50ee3a3c5a8" translate="yes" xml:space="preserve">
          <source>Sass is an extension of CSS that adds power and elegance to the basic language. It allows you to use &lt;a href=&quot;#variables_&quot;&gt;variables&lt;/a&gt;, &lt;a href=&quot;#nested_rules&quot;&gt;nested rules&lt;/a&gt;, &lt;a href=&quot;#mixins&quot;&gt;mixins&lt;/a&gt;, &lt;a href=&quot;#import&quot;&gt;inline imports&lt;/a&gt;, and more, all with a fully CSS-compatible syntax. Sass helps keep large stylesheets well-organized, and get small stylesheets up and running quickly, particularly with the help of &lt;a href=&quot;http://compass-style.org&quot;&gt;the Compass style library&lt;/a&gt;.</source>
          <target state="translated">Sass는 기본 언어에 힘과 우아함을 더하는 CSS의 확장입니다. 완전한 CSS 호환 구문 을 사용하여 &lt;a href=&quot;#variables_&quot;&gt;변수&lt;/a&gt; , &lt;a href=&quot;#nested_rules&quot;&gt;중첩 규칙&lt;/a&gt; , &lt;a href=&quot;#mixins&quot;&gt;mixin&lt;/a&gt; , &lt;a href=&quot;#import&quot;&gt;인라인 가져 오기&lt;/a&gt; 등 을 사용할 수 있습니다 . Sass는 특히 &lt;a href=&quot;http://compass-style.org&quot;&gt;Compass 스타일 라이브러리를&lt;/a&gt; 사용하여 큰 스타일 시트를 체계적으로 구성하고 작은 스타일 시트를 빠르게 실행하는 데 도움을 줍니다 .</target>
        </trans-unit>
        <trans-unit id="6a69154c2b4acc4e55d312e10bb9b932ccfca243" translate="yes" xml:space="preserve">
          <source>Sass looks for other Sass files in the current directory, and the Sass file directory under Rack, Rails, or Merb. Additional search directories may be specified using the &lt;a href=&quot;#load_paths-option&quot;&gt;&lt;code&gt;:load_paths&lt;/code&gt;&lt;/a&gt; option, or the &lt;code&gt;--load-path&lt;/code&gt; option on the command line.</source>
          <target state="translated">Sass는 현재 디렉토리에서 다른 Sass 파일을 찾고 Rack, Rails 또는 Merb에서 Sass 파일 디렉토리를 찾습니다. 추가 검색 디렉토리는 &lt;a href=&quot;#load_paths-option&quot;&gt; &lt;code&gt;:load_paths&lt;/code&gt; &lt;/a&gt; 옵션 또는 명령 줄 의 &lt;code&gt;--load-path&lt;/code&gt; 옵션을 사용하여 지정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="b0009ffe7a96796da80e21fa04676bad52a846b6" translate="yes" xml:space="preserve">
          <source>Sass provides a number of advanced customizations for users with unique requirements. Using these features requires a strong understanding of Ruby.</source>
          <target state="translated">Sass는 고유 한 요구 사항이있는 사용자를 위해 여러 가지 고급 사용자 지정 기능을 제공합니다. 이러한 기능을 사용하려면 Ruby에 대한 이해가 필요합니다.</target>
        </trans-unit>
        <trans-unit id="4025d3f80e1fb8425ab404ceb4a3d8a1c0ee9b9f" translate="yes" xml:space="preserve">
          <source>Sass stylesheets don't work the same as views. They don't contain dynamic content, so the CSS only needs to be generated when the Sass file has been updated. By default, &lt;code&gt;.sass&lt;/code&gt; and &lt;code&gt;.scss&lt;/code&gt; files are placed in public/stylesheets/sass (this can be customized with the &lt;a href=&quot;#template_location-option&quot;&gt;&lt;code&gt;:template_location&lt;/code&gt;&lt;/a&gt; option). Then, whenever necessary, they're compiled into corresponding CSS files in public/stylesheets. For instance, public/stylesheets/sass/main.scss would be compiled to public/stylesheets/main.css.</source>
          <target state="translated">Sass 스타일 시트는보기와 동일하게 작동하지 않습니다. 동적 컨텐츠를 포함하지 않으므로 Sass 파일이 업데이트 된 경우에만 CSS를 생성해야합니다. 기본적으로 &lt;code&gt;.sass&lt;/code&gt; 및 &lt;code&gt;.scss&lt;/code&gt; 파일은 public / stylesheets / sass에 배치됩니다 ( &lt;a href=&quot;#template_location-option&quot;&gt; &lt;code&gt;:template_location&lt;/code&gt; &lt;/a&gt; 옵션 으로 사용자 정의 할 수 있음 ). 그런 다음 필요할 때마다 공개 / 스타일 시트에서 해당 CSS 파일로 컴파일됩니다. 예를 들어, public / stylesheets / sass / main.scss는 public / stylesheets / main.css로 컴파일됩니다.</target>
        </trans-unit>
        <trans-unit id="a1d70054db4e1dfd0e0b67c3e7e01b1d3bfc6c9a" translate="yes" xml:space="preserve">
          <source>Sass supports a special type of selector called a &quot;placeholder selector&quot;. These look like class and id selectors, except the &lt;code&gt;#&lt;/code&gt; or &lt;code&gt;.&lt;/code&gt; is replaced by &lt;code&gt;%&lt;/code&gt;. They're meant to be used with the &lt;a href=&quot;#extend&quot;&gt;&lt;code&gt;@extend&lt;/code&gt; directive&lt;/a&gt;; for more information see &lt;a href=&quot;#placeholders&quot;&gt;&lt;code&gt;@extend&lt;/code&gt;-Only Selectors&lt;/a&gt;.</source>
          <target state="translated">Sass는 &quot;자리 표시 자 선택기&quot;라는 특수한 유형의 선택기를 지원합니다. 클래스와 ID 선택기 같은이 모습은 제외시켰다 &lt;code&gt;#&lt;/code&gt; 을 하거나 &lt;code&gt;.&lt;/code&gt; &lt;code&gt;%&lt;/code&gt; 로 대체되었습니다 . &lt;a href=&quot;#extend&quot;&gt; &lt;code&gt;@extend&lt;/code&gt; 지시어&lt;/a&gt; 와 함께 사용하도록되어 있습니다 . 자세한 내용은 &lt;a href=&quot;#placeholders&quot;&gt; &lt;code&gt;@extend&lt;/code&gt; Selectors를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="2109347200ea29f2dbcac97a7a1a0cbae14f6ebb" translate="yes" xml:space="preserve">
          <source>Sass supports all CSS3 &lt;code&gt;@&lt;/code&gt;-rules, as well as some additional Sass-specific ones known as &quot;directives.&quot; These have various effects in Sass, detailed below. See also &lt;a href=&quot;#control_directives&quot;&gt;control directives&lt;/a&gt; and &lt;a href=&quot;#mixins&quot;&gt;mixin directives&lt;/a&gt;.</source>
          <target state="translated">Sass는 모든 CSS3 &lt;code&gt;@&lt;/code&gt; -rules 및 &quot;directives&quot;라고하는 추가 Sass 관련 항목을 지원합니다. 이것들은 Sass에서 다양한 효과를냅니다. &lt;a href=&quot;#control_directives&quot;&gt;제어 지시문&lt;/a&gt; 및 &lt;a href=&quot;#mixins&quot;&gt;mixin 지시문&lt;/a&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="9215ecc9de12de338c73b85746fafdaaf6b06e16" translate="yes" xml:space="preserve">
          <source>Sass supports standard multiline CSS comments with &lt;code&gt;/* */&lt;/code&gt;, as well as single-line comments with &lt;code&gt;//&lt;/code&gt;. The multiline comments are preserved in the CSS output where possible, while the single-line comments are removed. For example:</source>
          <target state="translated">Sass는 &lt;code&gt;/* */&lt;/code&gt; 사용한 표준 여러 줄 CSS 주석과 &lt;code&gt;//&lt;/code&gt; 를 사용한 한 줄 주석을 지원 합니다. 여러 줄 주석은 가능한 경우 CSS 출력에 유지되며 한 줄 주석은 제거됩니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="86fc2e831482914e7d296b365a94c163b569e70a" translate="yes" xml:space="preserve">
          <source>Sass will always encode its output as UTF-8. It will include a &lt;code&gt;@charset&lt;/code&gt; declaration if and only if the output file contains non-ASCII characters. In compressed mode, a UTF-8 byte order mark is used in place of a &lt;code&gt;@charset&lt;/code&gt; declaration.</source>
          <target state="translated">Sass는 항상 출력을 UTF-8로 인코딩합니다. 출력 파일에 ASCII가 아닌 문자가 포함 된 경우에만 &lt;code&gt;@charset&lt;/code&gt; 선언 이 포함됩니다 . 압축 모드에서는 &lt;code&gt;@charset&lt;/code&gt; 선언 대신 UTF-8 바이트 순서 표시가 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="9a029dc1ee662d27c405277aa39c5baecc4c4ef5" translate="yes" xml:space="preserve">
          <source>SassScript</source>
          <target state="translated">SassScript</target>
        </trans-unit>
        <trans-unit id="1e9e5f520b46482b7d78207fd2f87587cbd9101f" translate="yes" xml:space="preserve">
          <source>SassScript #sassscript</source>
          <target state="translated">SassScript #sassscript</target>
        </trans-unit>
        <trans-unit id="eddf0c34ceef208253270813e40998133922216a" translate="yes" xml:space="preserve">
          <source>SassScript also supports all other types of CSS property value, such as Unicode ranges and &lt;code&gt;!important&lt;/code&gt; declarations. However, it has no special handling for these types. They're treated just like unquoted strings.</source>
          <target state="translated">SassScript는 유니 코드 범위 및 &lt;code&gt;!important&lt;/code&gt; 선언 과 같은 다른 모든 유형의 CSS 속성 값도 지원합니다 . 그러나 이러한 유형에 대한 특별한 처리는 없습니다. 인용되지 않은 문자열처럼 취급됩니다.</target>
        </trans-unit>
        <trans-unit id="30070efcd26bcdfe4438c8cf2d17f83b0465a179" translate="yes" xml:space="preserve">
          <source>SassScript can also be used to generate selectors and property names, which is useful when writing &lt;a href=&quot;#mixins&quot;&gt;mixins&lt;/a&gt;. This is done via &lt;a href=&quot;#interpolation_&quot;&gt;interpolation&lt;/a&gt;.</source>
          <target state="translated">SassScript를 사용하여 선택기와 속성 이름을 생성 할 수도 있습니다. 이는 &lt;a href=&quot;#mixins&quot;&gt;mixin을&lt;/a&gt; 작성할 때 유용합니다 . 이것은 &lt;a href=&quot;#interpolation_&quot;&gt;보간을&lt;/a&gt; 통해 이루어집니다 .</target>
        </trans-unit>
        <trans-unit id="596d9a884cf209787a0dc4c00e05192356951ab7" translate="yes" xml:space="preserve">
          <source>SassScript defines some useful functions that are called using the normal CSS function syntax:</source>
          <target state="translated">SassScript는 일반적인 CSS 함수 구문을 사용하여 호출되는 유용한 함수를 정의합니다.</target>
        </trans-unit>
        <trans-unit id="6a72866c8b59f464530dbfd219c2c0c494590ba2" translate="yes" xml:space="preserve">
          <source>SassScript supports &lt;code&gt;and&lt;/code&gt;, &lt;code&gt;or&lt;/code&gt;, and &lt;code&gt;not&lt;/code&gt; operators for boolean values.</source>
          <target state="translated">SassScript 지원 &lt;code&gt;and&lt;/code&gt; , &lt;code&gt;or&lt;/code&gt; , 그리고 &lt;code&gt;not&lt;/code&gt; 부울 값에 대한 연산자.</target>
        </trans-unit>
        <trans-unit id="c989ac7fb0836232ff868fa3ef818e56620ba887" translate="yes" xml:space="preserve">
          <source>SassScript supports basic control directives and expressions for including styles only under some conditions or including the same style several times with variations.</source>
          <target state="translated">SassScript는 일부 조건에서만 스타일을 포함하거나 변형과 동일한 스타일을 여러 번 포함하기위한 기본 제어 지시문 및 표현식을 지원합니다.</target>
        </trans-unit>
        <trans-unit id="8bc453bdb705d2d310a2a0bf56ccd55390ab99d1" translate="yes" xml:space="preserve">
          <source>SassScript supports eight data types:</source>
          <target state="translated">SassScript는 8 가지 데이터 유형을 지원합니다.</target>
        </trans-unit>
        <trans-unit id="5719e48057100bfd7e91627b5815247b4ef02f26" translate="yes" xml:space="preserve">
          <source>SassScript supports the standard arithmetic operations on numbers (addition &lt;code&gt;+&lt;/code&gt;, subtraction &lt;code&gt;-&lt;/code&gt;, multiplication &lt;code&gt;*&lt;/code&gt;, division &lt;code&gt;/&lt;/code&gt;, and modulo &lt;code&gt;%&lt;/code&gt;). Sass math functions preserve units during arithmetic operations. This means that, just like in real life, you cannot work on numbers with incompatible units (such as adding a number with &lt;code&gt;px&lt;/code&gt; and &lt;code&gt;em&lt;/code&gt;) and two numbers with the same unit that are multiplied together will produce square units (&lt;code&gt;10px * 10px == 100px * px&lt;/code&gt;). &lt;strong&gt;Be Aware&lt;/strong&gt; that &lt;code&gt;px * px&lt;/code&gt; is an invalid CSS unit and you will get an error from Sass for attempting to use invalid units in CSS.</source>
          <target state="translated">SassScript는 숫자에 대한 표준 산술 연산 (더하기 &lt;code&gt;+&lt;/code&gt; , 빼기 &lt;code&gt;-&lt;/code&gt; , 곱하기 &lt;code&gt;*&lt;/code&gt; , 나누기 &lt;code&gt;/&lt;/code&gt; 및 모듈로 &lt;code&gt;%&lt;/code&gt; )을 지원합니다. Sass math 함수는 산술 연산 중에 단위를 유지합니다. 즉, 실제와 마찬가지로 호환되지 않는 단위 (예 : &lt;code&gt;px&lt;/code&gt; 및 &lt;code&gt;em&lt;/code&gt; 을 추가하는 숫자 )와 같은 단위를 가진 두 숫자를 곱하면 제곱 단위 ( &lt;code&gt;10px * 10px == 100px * px&lt;/code&gt; ). &lt;strong&gt;인식 할 수&lt;/strong&gt; 있다는 &lt;code&gt;px * px&lt;/code&gt; 잘못된 CSS 단위이며 CSS에서 유효하지 않은 단위를 사용하기 위해 말대꾸에서 오류가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="bd4881bdb25c2fafab7ffd312ea4c42d08299488" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;sass/script/functions&quot;&gt;Sass::Script::Functions&lt;/a&gt; for a full listing of Sass functions and their argument names, as well as instructions on defining your own in Ruby.</source>
          <target state="translated">Sass 함수 및 인수 이름의 전체 목록과 Ruby에서 사용자 정의에 대한 지시 사항 은 &lt;a href=&quot;sass/script/functions&quot;&gt;Sass :: Script :: Functions&lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="b3f9123bc3816ae829779a66a9e07ec9052ed653" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;sass/script/functions&quot;&gt;this page&lt;/a&gt; for a full list of available functions.</source>
          <target state="translated">사용 가능한 전체 기능 목록은 &lt;a href=&quot;sass/script/functions&quot;&gt;이 페이지&lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="011a99b67cb875077910ef37dc00f4c9e77d86ba" translate="yes" xml:space="preserve">
          <source>Selector Sequences</source>
          <target state="translated">선택기 시퀀스</target>
        </trans-unit>
        <trans-unit id="f0c6b6a8a3a0d2a9f1359a91eb7e3caf91f383a3" translate="yes" xml:space="preserve">
          <source>Selector sequences, such as &lt;code&gt;.foo .bar&lt;/code&gt; or &lt;code&gt;.foo + .bar&lt;/code&gt;, currently can't be extended. However, it is possible for nested selectors themselves to use &lt;code&gt;@extend&lt;/code&gt;. For example:</source>
          <target state="translated">&lt;code&gt;.foo .bar&lt;/code&gt; 또는 &lt;code&gt;.foo + .bar&lt;/code&gt; 와 같은 선택기 시퀀스는 현재 확장 할 수 없습니다. 그러나 중첩 된 선택기 자체가 &lt;code&gt;@extend&lt;/code&gt; 를 사용할 수 있습니다 . 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="161391ae0530d71d60db033d508408f8310295b7" translate="yes" xml:space="preserve">
          <source>Sets the opacity of an existing color.</source>
          <target state="translated">기존 색상의 불투명도를 설정합니다.</target>
        </trans-unit>
        <trans-unit id="594ff1d40a265dff076fc1b134721daddcc676ed" translate="yes" xml:space="preserve">
          <source>Since &lt;a href=&quot;#maps&quot;&gt;maps&lt;/a&gt; are treated as lists of pairs, multiple assignment works with them as well. For example:</source>
          <target state="translated">때문에 &lt;a href=&quot;#maps&quot;&gt;지도가&lt;/a&gt; 쌍 목록으로 취급, 다중 할당뿐만 아니라 그들과 함께 작동합니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="ae3ed84c656302ff446453d77e6e47fa6b24d100" translate="yes" xml:space="preserve">
          <source>Since multiline comments become part of the resulting CSS, interpolation within them is resolved. For example:</source>
          <target state="translated">여러 줄 주석은 결과 CSS의 일부가되므로 그 안의 보간이 해결됩니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="08e4ee6af9721071a87baaed7a28bb29fafa67c5" translate="yes" xml:space="preserve">
          <source>Some mixins may require a passed content block or may have different behavior depending on whether a content block was passed. The &lt;a href=&quot;sass/script/functions#content_exists-instance_method&quot;&gt;&lt;code&gt;content-exists()&lt;/code&gt; function&lt;/a&gt; will return true when a content block is passed to the current mixin and can be used to implement such behaviors.</source>
          <target state="translated">일부 믹스 인은 전달 된 컨텐츠 블록이 필요하거나 컨텐츠 블록이 전달되었는지 여부에 따라 다른 동작을 가질 수 있습니다. &lt;a href=&quot;sass/script/functions#content_exists-instance_method&quot;&gt; &lt;code&gt;content-exists()&lt;/code&gt; 함수는&lt;/a&gt; 콘텐츠 블록이 현재의 믹스 인에 전달하고 같은 동작을 구현하는 데 사용할 수있는 경우에 true를 돌려줍니다.</target>
        </trans-unit>
        <trans-unit id="a6a2a3f264e74ed32785ea446916a7a5ec1a6004" translate="yes" xml:space="preserve">
          <source>Someday we hope to have &lt;code&gt;@extend&lt;/code&gt; supported natively in the browser, which will allow it to be used within &lt;code&gt;@media&lt;/code&gt; and other directives.</source>
          <target state="translated">언젠가 우리는 &lt;code&gt;@extend&lt;/code&gt; 를 브라우저에서 기본적으로 지원하여 &lt;code&gt;@media&lt;/code&gt; 및 기타 지시문 내에서 사용할 수 있기를 희망합니다 .</target>
        </trans-unit>
        <trans-unit id="2360319b1a3c1bfdc51f2c01b1bb2ac6b9bb4efd" translate="yes" xml:space="preserve">
          <source>Sometimes a selector sequence extends another selector that appears in another sequence. In this case, the two sequences need to be merged. For example:</source>
          <target state="translated">때로는 선택기 시퀀스가 ​​다른 시퀀스에 나타나는 다른 선택기를 확장합니다. 이 경우 두 시퀀스를 병합해야합니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="5f95e9286fc3d862bc7f1f917870ab369becd35a" translate="yes" xml:space="preserve">
          <source>Sometimes it makes sense for a mixin or function to take an unknown number of arguments. For example, a mixin for creating box shadows might take any number of shadows as arguments. For these situations, Sass supports &quot;variable arguments,&quot; which are arguments at the end of a mixin or function declaration that take all leftover arguments and package them up as a &lt;a href=&quot;#lists&quot;&gt;list&lt;/a&gt;. These arguments look just like normal arguments, but are followed by &lt;code&gt;...&lt;/code&gt;. For example:</source>
          <target state="translated">때로는 믹스 인이나 함수가 알려지지 않은 수의 인수를 취하는 것이 합리적입니다. 예를 들어, 상자 그림자를 만들기위한 믹스 인은 여러 그림자를 인수로 사용할 수 있습니다. 이러한 상황에서 Sass는 &quot;variable arguments&quot;를 지원합니다. &quot;variable arguments&quot;는 믹스 인 또는 함수 선언의 끝에서 모든 나머지 인수를 가져 와서 &lt;a href=&quot;#lists&quot;&gt;목록&lt;/a&gt; 으로 패키지화하는 인수 입니다. 이러한 인수는 일반 인수와 유사하지만 &lt;code&gt;...&lt;/code&gt; 뒤에옵니다 . 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="de837228c307548c576c781e6e2aace1352e73cd" translate="yes" xml:space="preserve">
          <source>Sometimes it's useful to use a nested rule's parent selector in other ways than the default. For instance, you might want to have special styles for when that selector is hovered over or for when the body element has a certain class. In these cases, you can explicitly specify where the parent selector should be inserted using the &lt;code&gt;&amp;amp;&lt;/code&gt; character. For example:</source>
          <target state="translated">경우에 따라 중첩 규칙의 부모 선택기를 기본값 이외의 다른 방법으로 사용하는 것이 유용합니다. 예를 들어, 선택기가 마우스 오버 될 때 또는 본문 요소에 특정 클래스가있는 경우에 대한 특수 스타일을 원할 수 있습니다. 이 경우 &lt;code&gt;&amp;amp;&lt;/code&gt; 문자를 사용하여 상위 선택기를 삽입 할 위치를 명시 적으로 지정할 수 있습니다 . 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="ea0845a8f1f700d1c042600138ed83f134ce0b65" translate="yes" xml:space="preserve">
          <source>Sometimes you'll write styles for a class that you only ever want to &lt;code&gt;@extend&lt;/code&gt;, and never want to use directly in your HTML. This is especially true when writing a Sass library, where you may provide styles for users to &lt;code&gt;@extend&lt;/code&gt; if they need and ignore if they don't.</source>
          <target state="translated">때로는 &lt;code&gt;@extend&lt;/code&gt; 만하고 싶거나 HTML에서 직접 사용하고 싶지 않은 클래스의 스타일을 작성 하는 경우가 있습니다. 이것은 Sass 라이브러리를 작성할 때 특히 그렇습니다. 사용자가 필요하면 &lt;code&gt;@extend&lt;/code&gt; 로 스타일을 제공 하고 필요하지 않으면 무시할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="043702c4e4501889e7730a9fb7aa95851a7a377c" translate="yes" xml:space="preserve">
          <source>Sometimes, though, you want to allow an &lt;code&gt;@extend&lt;/code&gt; not to produce any new selectors. To do so, just add the &lt;code&gt;!optional&lt;/code&gt; flag after the selector. For example:</source>
          <target state="translated">그러나 때로는 &lt;code&gt;@extend&lt;/code&gt; 가 새로운 선택자를 생성하지 못하게 할 수 있습니다. 이렇게하려면 선택기 뒤에 &lt;code&gt;!optional&lt;/code&gt; 플래그를 추가하십시오 . 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="905138067416afbda69a807c2dbf96fa6f2ae8dd" translate="yes" xml:space="preserve">
          <source>String Operations</source>
          <target state="translated">문자열 연산</target>
        </trans-unit>
        <trans-unit id="766f45c1227c8c7d13e31b3c8218c7c441dc99b1" translate="yes" xml:space="preserve">
          <source>String operations</source>
          <target state="translated">문자열 연산</target>
        </trans-unit>
        <trans-unit id="3816c4beac471c733eed1d91c213f8c2b6a29262" translate="yes" xml:space="preserve">
          <source>Strings</source>
          <target state="translated">Strings</target>
        </trans-unit>
        <trans-unit id="b36b4bf7e1749dda82b6b7f07a772067f3f1d4c8" translate="yes" xml:space="preserve">
          <source>Strings #sass-script-strings</source>
          <target state="translated">문자열 # sass-script-strings</target>
        </trans-unit>
        <trans-unit id="391aa759e0f627e3cb08a330a5127ac56b6fa86a" translate="yes" xml:space="preserve">
          <source>Subtraction, Negative Numbers, and &lt;code&gt;-&lt;/code&gt;</source>
          <target state="translated">빼기, 음수 및 &lt;code&gt;-&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="17c7ba7676ad1ad6dd1c4e6b997adcae910262c9" translate="yes" xml:space="preserve">
          <source>Syntax</source>
          <target state="translated">Syntax</target>
        </trans-unit>
        <trans-unit id="f58a1a1b995bb6193210ff877811ca67724e98f1" translate="yes" xml:space="preserve">
          <source>Syntax Selection</source>
          <target state="translated">구문 선택</target>
        </trans-unit>
        <trans-unit id="3f97e42d9d5b69a774e97737b80e7f4c2688e12c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;!optional&lt;/code&gt; Flag</source>
          <target state="translated">&lt;code&gt;!optional&lt;/code&gt; 신고</target>
        </trans-unit>
        <trans-unit id="8d311629ed69e85e7c92883aa048934bd395d0f9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;+&lt;/code&gt; operation can be used to concatenate strings:</source>
          <target state="translated">&lt;code&gt;+&lt;/code&gt; 의 작업은 CONCATENATE 문자열을 사용할 수 있습니다 :</target>
        </trans-unit>
        <trans-unit id="1c26608f553246175e669b6188f4f161a429a8ae" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;@at-root&lt;/code&gt; directive causes one or more rules to be emitted at the root of the document, rather than being nested beneath their parent selectors. It can either be used with a single inline selector:</source>
          <target state="translated">&lt;code&gt;@at-root&lt;/code&gt; 지시어는 하나 이상의 규칙의 원인은 오히려 상위 선택기 아래에 중첩되지 않고, 문서의 루트에 방출한다. 단일 인라인 선택기와 함께 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ac97b233f713059167f62c0586b91e0e4ff02b52" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;@debug&lt;/code&gt; directive prints the value of a SassScript expression to the standard error output stream. It's useful for debugging Sass files that have complicated SassScript going on. For example:</source>
          <target state="translated">&lt;code&gt;@debug&lt;/code&gt; 의 지시자는 표준 에러 출력 스트림 SassScript 식의 값을 출력한다. 복잡한 SassScript가 진행중인 Sass 파일을 디버깅하는 데 유용합니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="6a8de215b1d2afff58e3e0991266e337bff2243e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;@each&lt;/code&gt; directive can also use multiple variables, as in &lt;code&gt;@each $var1, $var2, ... in &amp;lt;list&amp;gt;&lt;/code&gt;. If &lt;code&gt;&amp;lt;list&amp;gt;&lt;/code&gt; is a list of lists, each element of the sub-lists is assigned to the respective variable. For example:</source>
          <target state="translated">&lt;code&gt;@each&lt;/code&gt; 의 지침은 또한 같이 여러 변수를 사용할 수 있습니다 &lt;code&gt;@each $var1, $var2, ... in &amp;lt;list&amp;gt;&lt;/code&gt; . 경우 &lt;code&gt;&amp;lt;list&amp;gt;&lt;/code&gt; 리스트의 목록이며, 서브리스트의 각 요소가 각각의 변수에 할당된다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="77189bcd5e4b0bc4e721a8a2a8712e0b92a9d123" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;@each&lt;/code&gt; directive usually has the form &lt;code&gt;@each $var in &amp;lt;list or map&amp;gt;&lt;/code&gt;. &lt;code&gt;$var&lt;/code&gt; can be any variable name, like &lt;code&gt;$length&lt;/code&gt; or &lt;code&gt;$name&lt;/code&gt;, and &lt;code&gt;&amp;lt;list or map&amp;gt;&lt;/code&gt; is a SassScript expression that returns a list or a map.</source>
          <target state="translated">&lt;code&gt;@each&lt;/code&gt; 의 지시어는 일반적으로 양식이 &lt;code&gt;@each $var in &amp;lt;list or map&amp;gt;&lt;/code&gt; . &lt;code&gt;$var&lt;/code&gt; 어떤 변수 이름이 될 수 있습니다, 같은 &lt;code&gt;$length&lt;/code&gt; 또는 &lt;code&gt;$name&lt;/code&gt; , 그리고 &lt;code&gt;&amp;lt;list or map&amp;gt;&lt;/code&gt; SassScript의 표현을 반환 목록이나지도가.</target>
        </trans-unit>
        <trans-unit id="a5d3e0da53895d6c2ca9b6d7ddf835e8c137ddc4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;@each&lt;/code&gt; rule sets &lt;code&gt;$var&lt;/code&gt; to each item in the list or map, then outputs the styles it contains using that value of &lt;code&gt;$var&lt;/code&gt;. For example:</source>
          <target state="translated">&lt;code&gt;@each&lt;/code&gt; 의 규칙을 설정 &lt;code&gt;$var&lt;/code&gt; 다음, 목록 또는지도에서 각 항목을 그것의 값 사용이 포함 된 스타일을 출력 &lt;code&gt;$var&lt;/code&gt; . 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="b8e8db811f079dead4aec85b222dc1cd538b7717" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;@error&lt;/code&gt; directive throws the value of a SassScript expression as a fatal error, including a nice stack trace. It's useful for validating arguments to mixins and functions. For example:</source>
          <target state="translated">&lt;code&gt;@error&lt;/code&gt; 의 지시어는 좋은 스택 추적을 포함 치명적인 오류와 같은 SassScript 식의 값을 던졌습니다. 믹스 인과 함수에 대한 인수의 유효성을 검사하는 데 유용합니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="53f2c089e6de93b3ee7b8e635ec337c2a031aa8f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;@extend&lt;/code&gt; directive avoids these problems by telling Sass that one selector should inherit the styles of another selector. For example:</source>
          <target state="translated">&lt;code&gt;@extend&lt;/code&gt; 의 지시어는 하나 개의 선택이 다른 선택의 스타일을 상속해야한다고 말대꾸를 이야기함으로써 이러한 문제를 방지 할 수 있습니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="dd24d6037176ab3406afa46dabd5e8fd0a66b44a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;@for&lt;/code&gt; directive repeatedly outputs a set of styles. For each repetition, a counter variable is used to adjust the output. The directive has two forms: &lt;code&gt;@for $var from &amp;lt;start&amp;gt; through &amp;lt;end&amp;gt;&lt;/code&gt; and &lt;code&gt;@for $var from &amp;lt;start&amp;gt; to &amp;lt;end&amp;gt;&lt;/code&gt;. Note the difference in the keywords &lt;code&gt;through&lt;/code&gt; and &lt;code&gt;to&lt;/code&gt;. &lt;code&gt;$var&lt;/code&gt; can be any variable name, like &lt;code&gt;$i&lt;/code&gt;; &lt;code&gt;&amp;lt;start&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;end&amp;gt;&lt;/code&gt; are SassScript expressions that should return integers. When &lt;code&gt;&amp;lt;start&amp;gt;&lt;/code&gt; is greater than &lt;code&gt;&amp;lt;end&amp;gt;&lt;/code&gt; the counter will decrement instead of increment.</source>
          <target state="translated">&lt;code&gt;@for&lt;/code&gt; 지시자 반복적 스타일의 세트를 출력한다. 각 반복에 대해 카운터 변수를 사용하여 출력을 조정합니다. 이 지시문은 &lt;code&gt;@for $var from &amp;lt;start&amp;gt; through &amp;lt;end&amp;gt;&lt;/code&gt; 및 &lt;code&gt;@for $var from &amp;lt;start&amp;gt; to &amp;lt;end&amp;gt;&lt;/code&gt; 두 가지 형식이 있습니다. 키워드의 차이에주의 &lt;code&gt;through&lt;/code&gt; 하고 &lt;code&gt;to&lt;/code&gt; . &lt;code&gt;$var&lt;/code&gt; 는 &lt;code&gt;$i&lt;/code&gt; 와 같은 변수 이름 일 수 있습니다 . &lt;code&gt;&amp;lt;start&amp;gt;&lt;/code&gt; 및 &lt;code&gt;&amp;lt;end&amp;gt;&lt;/code&gt; 는 정수를 반환해야하는 SassScript 표현식입니다. 경우 &lt;code&gt;&amp;lt;start&amp;gt;&lt;/code&gt; 보다 큰 &lt;code&gt;&amp;lt;end&amp;gt;&lt;/code&gt; 카운터 대신 증분 감소한다.</target>
        </trans-unit>
        <trans-unit id="6a6cc80ba19e8e34770568d4790b64ef08713b73" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;@for&lt;/code&gt; statement sets &lt;code&gt;$var&lt;/code&gt; to each successive number in the specified range and each time outputs the nested styles using that value of &lt;code&gt;$var&lt;/code&gt;. For the form &lt;code&gt;from ... through&lt;/code&gt;, the range &lt;em&gt;includes&lt;/em&gt; the values of &lt;code&gt;&amp;lt;start&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;end&amp;gt;&lt;/code&gt;, but the form &lt;code&gt;from ... to&lt;/code&gt; runs up to &lt;em&gt;but not including&lt;/em&gt; the value of &lt;code&gt;&amp;lt;end&amp;gt;&lt;/code&gt;. Using the &lt;code&gt;through&lt;/code&gt; syntax,</source>
          <target state="translated">&lt;code&gt;@for&lt;/code&gt; 문은 설정 &lt;code&gt;$var&lt;/code&gt; 지정된 범위에있는 각 연속 된 번호로 각 시간의 값 사용하여 중첩 스타일을 출력 &lt;code&gt;$var&lt;/code&gt; . 폼 &lt;code&gt;from ... through&lt;/code&gt; 상기 범위를 &lt;em&gt;포함하는&lt;/em&gt; 의 값 &lt;code&gt;&amp;lt;start&amp;gt;&lt;/code&gt; 과 &lt;code&gt;&amp;lt;end&amp;gt;&lt;/code&gt; 하지만 형태 &lt;code&gt;from ... to&lt;/code&gt; 최대 실행 &lt;em&gt;되지만 제외한&lt;/em&gt; 값 &lt;code&gt;&amp;lt;end&amp;gt;&lt;/code&gt; . &lt;code&gt;through&lt;/code&gt; 구문을 사용하여</target>
        </trans-unit>
        <trans-unit id="edae6f073c38434d3e207e7a5dafb837955a0007" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;@if&lt;/code&gt; directive takes a SassScript expression and uses the styles nested beneath it if the expression returns anything other than &lt;code&gt;false&lt;/code&gt; or &lt;code&gt;null&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;@if&lt;/code&gt; 의 지시어는 SassScript 식을 취하고 이외의 표현을 반환 아무것도 경우 아래에 중첩 스타일을 사용하여 &lt;code&gt;false&lt;/code&gt; 또는 &lt;code&gt;null&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="7b1bac589cac69a197e403f499df3a9993010d02" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;@if&lt;/code&gt; statement can be followed by several &lt;code&gt;@else if&lt;/code&gt; statements and one &lt;code&gt;@else&lt;/code&gt; statement. If the &lt;code&gt;@if&lt;/code&gt; statement fails, the &lt;code&gt;@else if&lt;/code&gt; statements are tried in order until one succeeds or the &lt;code&gt;@else&lt;/code&gt; is reached. For example:</source>
          <target state="translated">&lt;code&gt;@if&lt;/code&gt; 문 뒤에 여러 &lt;code&gt;@else if&lt;/code&gt; 문과 하나의 &lt;code&gt;@else&lt;/code&gt; 문 이 올 수 있습니다 . 는 IF &lt;code&gt;@if&lt;/code&gt; 의 문이 실패의 &lt;code&gt;@else if&lt;/code&gt; 문 하나까지 순서대로 시도됩니다 성공 또는 &lt;code&gt;@else&lt;/code&gt; 이 도달. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="cb66e645f955007af31d85000b8a746fec7c41a1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;@warn&lt;/code&gt; directive prints the value of a SassScript expression to the standard error output stream. It's useful for libraries that need to warn users of deprecations or recovering from minor mixin usage mistakes. There are two major distinctions between &lt;code&gt;@warn&lt;/code&gt; and &lt;code&gt;@debug&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;@warn&lt;/code&gt; 의 지시자는 표준 에러 출력 스트림 SassScript 식의 값을 출력한다. 사용 중단을 사용자에게 경고하거나 사소한 믹스 인 사용 실수로부터 복구해야하는 라이브러리에 유용합니다. &lt;code&gt;@warn&lt;/code&gt; 과 &lt;code&gt;@debug&lt;/code&gt; 에는 크게 두 가지 차이점이 있습니다 .</target>
        </trans-unit>
        <trans-unit id="036d9853511ea7f8a9eed6ee63043a942bfb4426" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;@while&lt;/code&gt; directive takes a SassScript expression and repeatedly outputs the nested styles until the statement evaluates to &lt;code&gt;false&lt;/code&gt;. This can be used to achieve more complex looping than the &lt;code&gt;@for&lt;/code&gt; statement is capable of, although this is rarely necessary. For example:</source>
          <target state="translated">&lt;code&gt;@while&lt;/code&gt; 의 지시어는 SassScript 식을 취하고 반복적으로 문들을 평가까지 중첩 스타일을 출력 &lt;code&gt;false&lt;/code&gt; . 이것은 거의 필요하지 않지만 &lt;code&gt;@for&lt;/code&gt; 문 보다 더 복잡한 루핑을 달성하는 데 사용할 수 있습니다 . 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="7dbd956ef12d159ddf033d9c2ae5230695500357" translate="yes" xml:space="preserve">
          <source>The Sass command-line tool will use the file extension to determine which syntax you are using, but there's not always a filename. The &lt;code&gt;sass&lt;/code&gt; command-line program defaults to the indented syntax but you can pass the &lt;code&gt;--scss&lt;/code&gt; option to it if the input should be interpreted as SCSS syntax. Alternatively, you can use the &lt;code&gt;scss&lt;/code&gt; command-line program which is exactly like the &lt;code&gt;sass&lt;/code&gt; program but it defaults to assuming the syntax is SCSS.</source>
          <target state="translated">Sass 명령 줄 도구는 파일 확장자를 사용하여 사용중인 구문을 결정하지만 항상 파일 이름이있는 것은 아닙니다. &lt;code&gt;sass&lt;/code&gt; 들여 쓰기 구문 명령 줄 프로그램은 기본적으로 있지만 통과 할 수 &lt;code&gt;--scss&lt;/code&gt; 입력이 SCSS 구문으로 해석 할 필요가있는 경우 여기에 옵션을 선택합니다. 또는 &lt;code&gt;sass&lt;/code&gt; 프로그램 과 정확히 동일한 &lt;code&gt;scss&lt;/code&gt; 명령 줄 프로그램을 사용할 수 있지만 구문이 SCSS라고 가정합니다.</target>
        </trans-unit>
        <trans-unit id="629ffa2442fc4371dc88961319dce02104a6b90d" translate="yes" xml:space="preserve">
          <source>The alpha channel of a color can be adjusted using the &lt;a href=&quot;sass/script/functions#opacify-instance_method&quot;&gt;opacify&lt;/a&gt; and &lt;a href=&quot;sass/script/functions#transparentize-instance_method&quot;&gt;transparentize&lt;/a&gt; functions. For example:</source>
          <target state="translated">&lt;a href=&quot;sass/script/functions#opacify-instance_method&quot;&gt;불투명&lt;/a&gt; 및 &lt;a href=&quot;sass/script/functions#transparentize-instance_method&quot;&gt;투명화&lt;/a&gt; 기능을 사용하여 색상의 알파 채널을 조정할 수 있습니다 . 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="9f0c9af133a56cf709eabce5c6b2068a2f64a4ff" translate="yes" xml:space="preserve">
          <source>The block of content passed to a mixin are evaluated in the scope where the block is defined, not in the scope of the mixin. This means that variables local to the mixin &lt;strong&gt;cannot&lt;/strong&gt; be used within the passed style block and variables will resolve to the global value:</source>
          <target state="translated">믹스 인에 전달 된 컨텐츠 블록은 믹스 인의 범위가 아니라 블록이 정의 된 범위에서 평가됩니다. 즉, 믹스 인에 로컬 인 변수 는 전달 된 스타일 블록 내에서 사용할 &lt;strong&gt;수 없으며&lt;/strong&gt; 변수는 전역 값으로 해석됩니다.</target>
        </trans-unit>
        <trans-unit id="1bcb97b641d09ebb9846d4a65721d499bc5f2c78" translate="yes" xml:space="preserve">
          <source>The built-in &lt;code&gt;if()&lt;/code&gt; function allows you to branch on a condition and returns only one of two possible outcomes. It can be used in any script context. The &lt;code&gt;if&lt;/code&gt; function only evaluates the argument corresponding to the one that it will return -- this allows you to refer to variables that may not be defined or to have calculations that would otherwise cause an error (E.g. divide by zero).</source>
          <target state="translated">내장 &lt;code&gt;if()&lt;/code&gt; 함수를 사용하면 조건을 분기하고 두 가지 가능한 결과 중 하나만 반환 할 수 있습니다. 모든 스크립트 컨텍스트에서 사용할 수 있습니다. &lt;code&gt;if&lt;/code&gt; 함수는이 반환하는 하나에 해당하는 인수를 평가 - 이것이 당신이 정의되지 않을 수 있습니다 변수를 참조하거나 계산을 할 수 있다는 것, 그렇지 않으면 오류 (0으로 예 격차) 원인.</target>
        </trans-unit>
        <trans-unit id="bd67186bd98e8190eb31017e67db7ed517d63d54" translate="yes" xml:space="preserve">
          <source>The different meanings of &lt;code&gt;-&lt;/code&gt; take precedence in the following order:</source>
          <target state="translated">의 다른 의미는 &lt;code&gt;-&lt;/code&gt; 다음과 같은 순서로 우선합니다 :</target>
        </trans-unit>
        <trans-unit id="9b92a4c7223dc172f932e908e2fd37b99a3b5469" translate="yes" xml:space="preserve">
          <source>The following features are supported:</source>
          <target state="translated">다음과 같은 기능이 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="258da41117a38a10268ce6458531112c24def106" translate="yes" xml:space="preserve">
          <source>The length of the resulting list is the length of the shortest list.</source>
          <target state="translated">결과 목록의 길이는 가장 짧은 목록의 길이입니다.</target>
        </trans-unit>
        <trans-unit id="06f9c260a7ec62319c981e555fd7eba4596789bb" translate="yes" xml:space="preserve">
          <source>The most straightforward way to use SassScript is to use variables. Variables begin with dollar signs, and are set like CSS properties:</source>
          <target state="translated">SassScript를 사용하는 가장 간단한 방법은 변수를 사용하는 것입니다. 변수는 달러 기호로 시작하며 CSS 속성과 같이 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="6045ebfa783a9c7f7a09d4adea3c9f23c023f23d" translate="yes" xml:space="preserve">
          <source>The property namespace itself can also have a value. For example:</source>
          <target state="translated">속성 네임 스페이스 자체도 값을 가질 수 있습니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="d4b2d6f15b257b97df1f0f2487bd98118e3ddbbe" translate="yes" xml:space="preserve">
          <source>The same mixins can be done in the &lt;code&gt;.sass&lt;/code&gt; shorthand syntax:</source>
          <target state="translated">&lt;code&gt;.sass&lt;/code&gt; 속기 구문 에서 동일한 믹스 인을 수행 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="1e43b849eba22e5bd20a341f09cad9fb44cd8782" translate="yes" xml:space="preserve">
          <source>The second and older syntax, known as the indented syntax (or sometimes just &quot;Sass&quot;), provides a more concise way of writing CSS. It uses indentation rather than brackets to indicate nesting of selectors, and newlines rather than semicolons to separate properties. Some people find this to be easier to read and quicker to write than SCSS. The indented syntax has all the same features, although some of them have slightly different syntax; this is described in &lt;a href=&quot;http://sass-lang.com/documentation/file.INDENTED_SYNTAX.html&quot;&gt;the indented syntax reference&lt;/a&gt;. Files using this syntax have the &lt;code&gt;.sass&lt;/code&gt; extension.</source>
          <target state="translated">들여 쓰기 된 구문 (또는 때로는 &quot;Sass&quot;)으로 알려진 두 번째 및 이전 구문은 CSS를보다 간결하게 작성하는 방법을 제공합니다. 선택기의 중첩을 나타 내기 위해 대괄호 대신 들여 쓰기를 사용하고 속성을 구분하기 위해 세미콜론 대신 개행을 사용합니다. 어떤 사람들은 SCSS보다 읽기 쉽고 쓰기가 더 쉽다고 생각합니다. 들여 쓰기 된 구문은 모든 기능이 동일하지만 일부 구문은 약간 다릅니다. 이것은 &lt;a href=&quot;http://sass-lang.com/documentation/file.INDENTED_SYNTAX.html&quot;&gt;들여 쓰기 된 구문 참조에&lt;/a&gt; 설명되어 있습니다. 이 구문을 사용하는 파일의 확장자 는 &lt;code&gt;.sass&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="d4369cb10498fe9fea655a2a3987028bc59e3d23" translate="yes" xml:space="preserve">
          <source>The value of &lt;code&gt;$selector&lt;/code&gt; is now &lt;code&gt;((&quot;.foo.bar&quot; &quot;.baz.bang&quot;), &quot;.bip.qux&quot;)&lt;/code&gt;. The compound selectors are quoted here to indicate that they're strings, but in reality they would be unquoted. Even if the parent selector doesn't contain a comma or a space, &lt;code&gt;&amp;amp;&lt;/code&gt; will always have two levels of nesting, so it can be accessed consistently.</source>
          <target state="translated">&lt;code&gt;$selector&lt;/code&gt; 의 값 은 이제 &lt;code&gt;((&quot;.foo.bar&quot; &quot;.baz.bang&quot;), &quot;.bip.qux&quot;)&lt;/code&gt; 입니다. 복합 선택기는 여기에 인용되어있어 문자열임을 나타내지 만 실제로는 인용되지 않습니다. 상위 셀렉터에 쉼표 나 공백이 포함되어 있지 않아도 &lt;code&gt;&amp;amp;&lt;/code&gt; 에는 항상 두 가지 수준의 중첩이 있으므로 일관되게 액세스 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7b8a877b8636d49ac3f65f0bacf33bcb5a47ce42" translate="yes" xml:space="preserve">
          <source>The weight specifies the amount of the first color that should be included in the returned color. The default, &lt;code&gt;50%&lt;/code&gt;, means that half the first color and half the second color should be used. &lt;code&gt;25%&lt;/code&gt; means that a quarter of the first color and three quarters of the second color should be used.</source>
          <target state="translated">가중치는 반환 된 색상에 포함되어야하는 첫 번째 색상의 양을 지정합니다. 기본값 인 &lt;code&gt;50%&lt;/code&gt; 는 첫 번째 색의 절반과 두 번째 색의 절반을 사용해야 함을 의미합니다. &lt;code&gt;25%&lt;/code&gt; 는 첫 번째 색의 1/4과 두 번째 색의 3/4을 사용해야 함을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="177252848a5ac086129dcafe1bbac98faf2b4389" translate="yes" xml:space="preserve">
          <source>Then &lt;code&gt;&amp;lt;div class=&quot;seriousError intrusion&quot;&amp;gt;&lt;/code&gt; will have the &lt;code&gt;hacked.png&lt;/code&gt; background image as well.</source>
          <target state="translated">그런 다음 &lt;code&gt;&amp;lt;div class=&quot;seriousError intrusion&quot;&amp;gt;&lt;/code&gt; 에는 &lt;code&gt;hacked.png&lt;/code&gt; 배경 이미지도 있습니다.</target>
        </trans-unit>
        <trans-unit id="b6ab2aea6319171b326eb82c34f0565c2dbb0f73" translate="yes" xml:space="preserve">
          <source>There are a number of different things &lt;code&gt;-&lt;/code&gt; can mean in CSS and in Sass. It can be a subtraction operator (as in &lt;code&gt;5px - 3px&lt;/code&gt;), the beginning of a negative number (as in &lt;code&gt;-3px&lt;/code&gt;), a unary negation operator (as in &lt;code&gt;-$var&lt;/code&gt;), or part of an identifier (as in &lt;code&gt;font-weight&lt;/code&gt;). Most of the time, it's clear which is which, but there are some tricky cases. As a general rule, you're safest if:</source>
          <target state="translated">여러 가지가 있습니다 &lt;code&gt;-&lt;/code&gt; CSS와 사스의 의미는. 빼기 연산자 ( &lt;code&gt;5px - 3px&lt;/code&gt; ), 음수의 시작 ( &lt;code&gt;-3px&lt;/code&gt; ), 단항 부정 연산자 ( &lt;code&gt;-$var&lt;/code&gt; ) 또는 식별자의 일부 ( &lt;code&gt;font-weight&lt;/code&gt; ) ). 대부분의 경우 어느 것이 어느 것인지 분명하지만, 까다로운 경우가 있습니다. 일반적으로 다음과 같은 경우 가장 안전합니다.</target>
        </trans-unit>
        <trans-unit id="f7ab8877161595d185108311821356f071bb55a2" translate="yes" xml:space="preserve">
          <source>There are often cases when designing a page when one class should have all the styles of another class, as well as its own specific styles. The most common way of handling this is to use both the more general class and the more specific class in the HTML. For example, suppose we have a design for a normal error and also for a serious error. We might write our markup like so:</source>
          <target state="translated">한 클래스가 다른 클래스의 모든 스타일과 고유 한 스타일을 가져야하는 경우 페이지를 디자인 할 때가 종종 있습니다. 이를 처리하는 가장 일반적인 방법은 HTML에서보다 일반적인 클래스와보다 구체적인 클래스를 모두 사용하는 것입니다. 예를 들어, 정상적인 오류와 심각한 오류에 대한 설계가 있다고 가정합니다. 마크 업을 다음과 같이 작성할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5462dc7a171bbf438178cd731b27497ccb08cbce" translate="yes" xml:space="preserve">
          <source>There are some restrictions on the use of &lt;code&gt;@extend&lt;/code&gt; within directives such as &lt;code&gt;@media&lt;/code&gt;. Sass is unable to make CSS rules outside of the &lt;code&gt;@media&lt;/code&gt; block apply to selectors inside it without creating a huge amount of stylesheet bloat by copying styles all over the place. This means that if you use &lt;code&gt;@extend&lt;/code&gt; within &lt;code&gt;@media&lt;/code&gt; (or other CSS directives), you may only extend selectors that appear within the same directive block.</source>
          <target state="translated">&lt;code&gt;@media&lt;/code&gt; 와 같은 지시문 내 에서 &lt;code&gt;@extend&lt;/code&gt; 사용에 대한 제한이 있습니다 . Sass는 &lt;code&gt;@media&lt;/code&gt; 블록 외부의 CSS 규칙을 사방에 스타일을 복사하여 엄청난 양의 스타일 시트 팽창을 만들지 않으면 서 내부의 선택기에 적용 할 수 없습니다. 이는 &lt;code&gt;@media&lt;/code&gt; (또는 다른 CSS 지시문) 내에서 &lt;code&gt;@extend&lt;/code&gt; 를 사용하는 경우 동일한 지시문 블록 내에 나타나는 선택기 만 확장 할 수 있음을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="937ed733728f67555d53882c99fae9ce9823cc28" translate="yes" xml:space="preserve">
          <source>There are two special values you can pass to &lt;code&gt;@at-root&lt;/code&gt;. &quot;rule&quot; refers to normal CSS rules; &lt;code&gt;@at-root (without: rule)&lt;/code&gt; is the same as &lt;code&gt;@at-root&lt;/code&gt; with no query. &lt;code&gt;@at-root (without: all)&lt;/code&gt; means that the styles should be moved outside of &lt;em&gt;all&lt;/em&gt; directives and CSS rules.</source>
          <target state="translated">&lt;code&gt;@at-root&lt;/code&gt; 전달할 수있는 두 가지 특수 값이 있습니다 . &quot;rule&quot;은 일반적인 CSS 규칙을 나타냅니다. &lt;code&gt;@at-root (without: rule)&lt;/code&gt; 는 &lt;code&gt;@at-root&lt;/code&gt; 와 같 으며 쿼리는 없습니다. &lt;code&gt;@at-root (without: all)&lt;/code&gt; 는 스타일이 &lt;em&gt;모든&lt;/em&gt; 지시문 및 CSS 규칙 외부로 이동되어야 함을 의미합니다 .</target>
        </trans-unit>
        <trans-unit id="b519ebe4607dfda6aeda062897ebaecfe93b3483" translate="yes" xml:space="preserve">
          <source>There are two syntaxes available for Sass. The first, known as SCSS (Sassy CSS) and used throughout this reference, is an extension of the syntax of CSS. This means that every valid CSS stylesheet is a valid SCSS file with the same meaning. In addition, SCSS understands most CSS hacks and vendor-specific syntax, such as &lt;a href=&quot;http://msdn.microsoft.com/en-us/library/ms530752.aspx&quot;&gt;IE's old &lt;code&gt;filter&lt;/code&gt; syntax&lt;/a&gt;. This syntax is enhanced with the Sass features described below. Files using this syntax have the &lt;code&gt;.scss&lt;/code&gt; extension.</source>
          <target state="translated">Sass에는 두 가지 구문이 있습니다. SCSS (Sassy CSS)라고하며이 참조에서 사용되는 첫 번째는 CSS 구문의 확장입니다. 이는 모든 유효한 CSS 스타일 시트가 동일한 의미를 가진 유효한 SCSS 파일임을 의미합니다. 또한 SCSS는 대부분의 CSS 핵과 &lt;a href=&quot;http://msdn.microsoft.com/en-us/library/ms530752.aspx&quot;&gt;IE의 오래된 &lt;code&gt;filter&lt;/code&gt; 구문&lt;/a&gt; 과 같은 공급 업체별 구문을 이해 합니다 . 이 구문은 아래 설명 된 Sass 기능으로 향상되었습니다. 이 구문을 사용하는 파일의 확장자 는 &lt;code&gt;.scss&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="8a26deaf0a9439c6e86ec39bb3fa8607ec5746ff" translate="yes" xml:space="preserve">
          <source>There is currently no way to catch errors.</source>
          <target state="translated">현재 오류를 잡을 방법이 없습니다.</target>
        </trans-unit>
        <trans-unit id="35e08781e208d3af3549928c34bda4ca6736f556" translate="yes" xml:space="preserve">
          <source>There is one exception to this, though: when using &lt;a href=&quot;#interpolation_&quot;&gt;&lt;code&gt;#{}&lt;/code&gt; interpolation&lt;/a&gt;, quoted strings are unquoted. This makes it easier to use e.g. selector names in &lt;a href=&quot;#mixins&quot;&gt;mixins&lt;/a&gt;. For example:</source>
          <target state="translated">그러나 여기에는 한 가지 예외가 있습니다 : &lt;a href=&quot;#interpolation_&quot;&gt; &lt;code&gt;#{}&lt;/code&gt; interpolation을&lt;/a&gt; 사용할 때 인용 된 문자열은 인용되지 않습니다. 예를 들어 &lt;a href=&quot;#mixins&quot;&gt;mixin&lt;/a&gt; 에서 선택기 이름을 사용하기가 더 쉽습니다 . 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="cdb80bd6c90ed216da3aefd940259e454d1d891f" translate="yes" xml:space="preserve">
          <source>This can change the red, green, blue, saturation, value, and alpha properties. The properties are specified as keyword arguments. All arguments should be percentages between &lt;code&gt;0%&lt;/code&gt; and &lt;code&gt;100%&lt;/code&gt;.</source>
          <target state="translated">빨강, 녹색, 파랑, 채도, 값 및 알파 속성을 변경할 수 있습니다. 속성은 키워드 인수로 지정됩니다. 모든 인수는 &lt;code&gt;0%&lt;/code&gt; 에서 &lt;code&gt;100%&lt;/code&gt; 사이의 백분율이어야합니다 .</target>
        </trans-unit>
        <trans-unit id="9e2c17d4304cc87c1fc694bbfd2c75778c87cdc6" translate="yes" xml:space="preserve">
          <source>This can return the nth pair in a map as well.</source>
          <target state="translated">지도에서 n 번째 쌍도 반환 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7d5d8211da10fe571fd182677e98f081c6280cc4" translate="yes" xml:space="preserve">
          <source>This can return the number of pairs in a map as well.</source>
          <target state="translated">지도의 쌍 수를 반환 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="a8071308e261c0171947c455efd036ab5b392e9a" translate="yes" xml:space="preserve">
          <source>This can return the position of a pair in a map as well.</source>
          <target state="translated">지도에서 쌍의 위치를 ​​반환 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="dcba487e25a70112a116129dc10ffe7263d66e13" translate="yes" xml:space="preserve">
          <source>This function also supports the proprietary Microsoft &lt;code&gt;alpha(opacity=20)&lt;/code&gt; syntax as a special case.</source>
          <target state="translated">이 함수는 또한 독점적 인 Microsoft &lt;code&gt;alpha(opacity=20)&lt;/code&gt; 구문을 특수한 경우로 지원합니다.</target>
        </trans-unit>
        <trans-unit id="6a3573a179a37f564a66c0924cf072b52d52b1fb" translate="yes" xml:space="preserve">
          <source>This function only exists as a workaround for IE7's &lt;a href=&quot;http://jes.st/2013/ie7s-css-breaking-content-counter-bug/&quot;&gt;&lt;code&gt;content: counter&lt;/code&gt; bug&lt;/a&gt;. It works identically to any other plain-CSS function, except it avoids adding spaces between the argument commas.</source>
          <target state="translated">이 기능은 IE7의 &lt;a href=&quot;http://jes.st/2013/ie7s-css-breaking-content-counter-bug/&quot;&gt; &lt;code&gt;content: counter&lt;/code&gt; &lt;/a&gt; 대한 해결책으로 만 존재 합니다 : counter bug . 인수 쉼표 사이에 공백을 추가하지 않는 것을 제외하고 다른 일반 CSS 기능과 동일하게 작동합니다.</target>
        </trans-unit>
        <trans-unit id="becb36fdda822271a471a4076796d5427550c1dd" translate="yes" xml:space="preserve">
          <source>This helps avoid repetition of parent selectors, and makes complex CSS layouts with lots of nested selectors much simpler. For example:</source>
          <target state="translated">이렇게하면 부모 선택기의 반복을 피할 수 있으며 중첩 된 선택기가 많은 복잡한 CSS 레이아웃이 훨씬 간단 해집니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="354efb4bef49ea8ecc4d2b7e5de75478212615f4" translate="yes" xml:space="preserve">
          <source>This is compiled to:</source>
          <target state="translated">이것은 다음과 같이 컴파일됩니다.</target>
        </trans-unit>
        <trans-unit id="b35482a13bdb28379dcfca04aa43ea21461d0dd9" translate="yes" xml:space="preserve">
          <source>This is the best way to add new values to a map.</source>
          <target state="translated">이것이지도에 새로운 값을 추가하는 가장 좋은 방법입니다.</target>
        </trans-unit>
        <trans-unit id="c81188216579c60386c9bf463658b27afd3b16a4" translate="yes" xml:space="preserve">
          <source>This means that all styles defined for &lt;code&gt;.error&lt;/code&gt; are also applied to &lt;code&gt;.seriousError&lt;/code&gt;, in addition to the styles specific to &lt;code&gt;.seriousError&lt;/code&gt;. In effect, every element with class &lt;code&gt;.seriousError&lt;/code&gt; also has class &lt;code&gt;.error&lt;/code&gt;.</source>
          <target state="translated">이는 &lt;code&gt;.error&lt;/code&gt; 에 대해 정의 된 모든 스타일 이 &lt;code&gt;.seriousError&lt;/code&gt; 에 고유 한 스타일 외에 .seriousError 에도 적용됨 을 &lt;code&gt;.seriousError&lt;/code&gt; 합니다. 실제로 &lt;code&gt;.seriousError&lt;/code&gt; 클래스를 가진 모든 요소 에는 &lt;code&gt;.error&lt;/code&gt; 클래스도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="b1a72864e0bd50d769e6dea5e5ce673bba1458c1" translate="yes" xml:space="preserve">
          <source>This works by using &lt;code&gt;@extend&lt;/code&gt; and throwing away the original selector. This means that it can be used to do very advanced replacements; see the examples below.</source>
          <target state="translated">이것은 &lt;code&gt;@extend&lt;/code&gt; 를 사용 하고 원래 선택기 를 버려서 작동합니다 . 이는 매우 고급 교체를 수행하는 데 사용될 수 있음을 의미합니다. 아래 예를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="e5cbb065759288edecad2c65efb1b31b56a60f88" translate="yes" xml:space="preserve">
          <source>To enable Sass in Merb, add the following line to &lt;code&gt;config/dependencies.rb&lt;/code&gt;:</source>
          <target state="translated">Merb에서 Sass를 활성화하려면 &lt;code&gt;config/dependencies.rb&lt;/code&gt; 에 다음 행을 추가하십시오 .</target>
        </trans-unit>
        <trans-unit id="5d0729184767803da147daf282f65d916eb3027e" translate="yes" xml:space="preserve">
          <source>To enable Sass in Rails versions before Rails 3, add the following line to &lt;code&gt;environment.rb&lt;/code&gt;:</source>
          <target state="translated">Rails 3 이전의 Rails 버전에서 Sass를 활성화하려면 &lt;code&gt;environment.rb&lt;/code&gt; 에 다음 줄을 추가하십시오 .</target>
        </trans-unit>
        <trans-unit id="16af8bdd69375a45a6eaabb6d2429473b658ecb7" translate="yes" xml:space="preserve">
          <source>To enable Sass in a Rack application, add the following lines to &lt;code&gt;config.ru&lt;/code&gt;.</source>
          <target state="translated">랙 애플리케이션에서 Sass를 사용하려면 &lt;code&gt;config.ru&lt;/code&gt; 에 다음 행을 추가하십시오 .</target>
        </trans-unit>
        <trans-unit id="24104d743ce156119c7b4c8d0844608f2e0d9ad9" translate="yes" xml:space="preserve">
          <source>To explicitly specify the encoding of your stylesheet, use a &lt;code&gt;@charset&lt;/code&gt; declaration just like in CSS. Add &lt;code&gt;@charset &quot;encoding-name&quot;;&lt;/code&gt; at the beginning of the stylesheet (before any whitespace or comments) and Sass will interpret it as the given encoding. Note that whatever encoding you use, it must be convertible to Unicode.</source>
          <target state="translated">스타일 시트의 인코딩을 명시 적으로 지정하려면 CSS에서와 같이 &lt;code&gt;@charset&lt;/code&gt; 선언을 사용하십시오 . &lt;code&gt;@charset &quot;encoding-name&quot;;&lt;/code&gt; 추가하십시오 . 스타일 시트의 시작 부분에 (공백이나 주석이 있기 전에) Sass는 주어진 인코딩으로 해석합니다. 어떤 인코딩을 사용하든 유니 코드로 변환 할 수 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="de06f9c502e4b3a7ffd0a3aad024b2ec4db54a94" translate="yes" xml:space="preserve">
          <source>To run Sass from the command line, just use</source>
          <target state="translated">커맨드 라인에서 Sass를 실행하려면</target>
        </trans-unit>
        <trans-unit id="7012e685210c7d03883f55753c7a5d74cf85f50a" translate="yes" xml:space="preserve">
          <source>Trailing Commas</source>
          <target state="translated">후행 쉼표</target>
        </trans-unit>
        <trans-unit id="800433e4e83820c982f054958922fa1bc7ca5d6b" translate="yes" xml:space="preserve">
          <source>Unfortunately, this means that we have to always remember to use &lt;code&gt;.error&lt;/code&gt; with &lt;code&gt;.seriousError&lt;/code&gt;. This is a maintenance burden, leads to tricky bugs, and can bring non-semantic style concerns into the markup.</source>
          <target state="translated">불행히도, 이것은 항상 &lt;code&gt;.seriousError&lt;/code&gt; 와 함께 &lt;code&gt;.error&lt;/code&gt; 를 사용해야한다는 것을 의미합니다 . 이것은 유지 관리 부담이며 까다로운 버그로 이어지며 시맨틱하지 않은 스타일 문제를 마크 업에 가져올 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f9bcf9e83d2a79206f3f81d3f7ee3a998e877475" translate="yes" xml:space="preserve">
          <source>Unifies two selectors into a single selector that matches only elements matched by both input selectors. Returns &lt;code&gt;null&lt;/code&gt; if there is no such selector.</source>
          <target state="translated">두 입력 선택기와 일치하는 요소 만 일치하는 두 선택기를 단일 선택기로 통합합니다. 이러한 선택 기가 &lt;code&gt;null&lt;/code&gt; 경우 null을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="872ca4c8eab59b0dd849420e210e766c26422591" translate="yes" xml:space="preserve">
          <source>Unless &lt;code&gt;$bracketed&lt;/code&gt; is passed, the resulting list is bracketed if the first parameter is.</source>
          <target state="translated">&lt;code&gt;$bracketed&lt;/code&gt; 가 전달 되지 않으면 첫 번째 매개 변수가 있으면 결과 목록이 괄호로 묶입니다.</target>
        </trans-unit>
        <trans-unit id="56dd328feb200abd01d0a7e6a97e6981481b2fe3" translate="yes" xml:space="preserve">
          <source>Unless &lt;code&gt;$separator&lt;/code&gt; is passed, if one list is comma-separated and one is space-separated, the first parameter's separator is used for the resulting list. If both lists have fewer than two items, spaces are used for the resulting list.</source>
          <target state="translated">&lt;code&gt;$separator&lt;/code&gt; 가 전달 되지 않으면 하나의 목록이 쉼표로 구분되고 하나의 공백이 분리되면 첫 번째 매개 변수의 구분 기호가 결과 목록에 사용됩니다. 두 목록에 두 개 미만의 항목이 있으면 공백이 결과 목록에 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="1363117536b31421047d80acd67a6865cb2a2442" translate="yes" xml:space="preserve">
          <source>Unless &lt;code&gt;content-exists()&lt;/code&gt; is called directly from a mixin, an error will be raised.</source>
          <target state="translated">&lt;code&gt;content-exists()&lt;/code&gt; mixin에서 직접 호출 하지 않으면 오류가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="76ff0ed4ac7d80876eaa702113778227c4cc8f99" translate="yes" xml:space="preserve">
          <source>Unless the &lt;code&gt;$separator&lt;/code&gt; argument is passed, if the list had only one item, the resulting list will be space-separated.</source>
          <target state="translated">&lt;code&gt;$separator&lt;/code&gt; 인수가 전달 되지 않으면 목록에 항목이 하나만 있으면 결과 목록은 공백으로 구분됩니다.</target>
        </trans-unit>
        <trans-unit id="0a6bc63d843eef7902dbce3c20323a9013b9c162" translate="yes" xml:space="preserve">
          <source>Unlike lists, maps must always be surrounded by parentheses and must always be comma-separated. Both the keys and values in maps can be any SassScript object. A map may only have one value associated with a given key (although that value may be a list). A given value may be associated with many keys, though.</source>
          <target state="translated">목록과 달리 맵은 항상 괄호로 묶어야하며 항상 쉼표로 구분해야합니다. 맵의 키와 값은 모두 SassScript 객체 일 수 있습니다. 지도는 주어진 키와 관련된 하나의 값만 가질 수 있습니다 (값은 목록 일 수 있음). 그러나 주어진 값은 많은 키와 연관 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="28201693f03d1e9150ecab32994e775dd9a12c3d" translate="yes" xml:space="preserve">
          <source>Unlike most selector functions, &lt;code&gt;selector-nest&lt;/code&gt; allows the parent selector &lt;code&gt;&amp;amp;&lt;/code&gt; to be used in any selector but the first.</source>
          <target state="translated">대부분의 선택기 기능과 달리 &lt;code&gt;selector-nest&lt;/code&gt; 를 사용하면 상위 선택기 &lt;code&gt;&amp;amp;&lt;/code&gt; 를 첫 번째가 아닌 모든 선택기에서 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9629fc5be7eebf84f66a1a4fe14d7eee29fbc498" translate="yes" xml:space="preserve">
          <source>Usage Example:</source>
          <target state="translated">사용 예 :</target>
        </trans-unit>
        <trans-unit id="936edae5d2de4429a13dfc88fb76048edb5d8873" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;sass --help&lt;/code&gt; for full documentation.</source>
          <target state="translated">전체 문서를 보려면 &lt;code&gt;sass --help&lt;/code&gt; 를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="72a3ab63eb244754d6a277a8c18c9d671df5562a" translate="yes" xml:space="preserve">
          <source>User-created importers must inherit from &lt;a href=&quot;http://sass-lang.com/documentation/Sass/Importers/Base.html&quot;&gt;Sass::Importers::Base&lt;/a&gt;.</source>
          <target state="translated">사용자가 만든 수입자는 &lt;a href=&quot;http://sass-lang.com/documentation/Sass/Importers/Base.html&quot;&gt;Sass :: Importers :: Base&lt;/a&gt; 에서 상속해야합니다 .</target>
        </trans-unit>
        <trans-unit id="f68d8b77e8f10448a25ffec622ba4c62ca6e4441" translate="yes" xml:space="preserve">
          <source>User-defined functions also support &lt;a href=&quot;#variable_arguments&quot;&gt;variable arguments&lt;/a&gt; in the same way as mixins.</source>
          <target state="translated">사용자 정의 함수는 mixin과 같은 방식으로 &lt;a href=&quot;#variable_arguments&quot;&gt;변수 인수&lt;/a&gt; 를 지원 합니다 .</target>
        </trans-unit>
        <trans-unit id="f829b8497ac4cecc133647d21b9e7ab12512cc02" translate="yes" xml:space="preserve">
          <source>Users can define their own Sass functions using the Ruby API. For more information, see the &lt;a href=&quot;sass/script/functions#adding_custom_functions&quot;&gt;source documentation&lt;/a&gt;.</source>
          <target state="translated">사용자는 Ruby API를 사용하여 자체 Sass 기능을 정의 할 수 있습니다. 자세한 내용은 &lt;a href=&quot;sass/script/functions#adding_custom_functions&quot;&gt;소스 설명서를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="a0ed3c8ffbb485bdcff1600b6b717d9db053867b" translate="yes" xml:space="preserve">
          <source>Using Sass</source>
          <target state="translated">Sass 사용</target>
        </trans-unit>
        <trans-unit id="6c9f5242fbc04bc1bf0061d659bc4abf5c91fc15" translate="yes" xml:space="preserve">
          <source>Using Sass in Ruby code is very simple. After installing the Sass gem, you can use it by running &lt;code&gt;require &quot;sass&quot;&lt;/code&gt; and using &lt;a href=&quot;http://sass-lang.com/documentation/Sass/Engine.html&quot;&gt;Sass::Engine&lt;/a&gt; like so:</source>
          <target state="translated">Ruby 코드에서 Sass를 사용하는 것은 매우 간단합니다. Sass gem을 설치 한 후 &lt;code&gt;require &quot;sass&quot;&lt;/code&gt; 를 실행 하고 &lt;a href=&quot;http://sass-lang.com/documentation/Sass/Engine.html&quot;&gt;Sass :: Engine을&lt;/a&gt; 사용하여 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="52941da9a3b3b2fc5e211993b41384faa81f65d4" translate="yes" xml:space="preserve">
          <source>Variable Arguments</source>
          <target state="translated">가변 인수</target>
        </trans-unit>
        <trans-unit id="ca4cab7a39afeea82a57b9d1ddd82f67a9f0f9d8" translate="yes" xml:space="preserve">
          <source>Variable Defaults: &lt;code&gt;!default&lt;/code&gt;</source>
          <target state="translated">변수 기본값 : &lt;code&gt;!default&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2a993f0ecb978e6d4f6c3f1eca6b0e43b6692410" translate="yes" xml:space="preserve">
          <source>Variable Scope and Content Blocks</source>
          <target state="translated">변수 범위 및 내용 블록</target>
        </trans-unit>
        <trans-unit id="34762da26e1639d54b003cb20434ff57de97fb21" translate="yes" xml:space="preserve">
          <source>Variable arguments also contain any keyword arguments passed to the mixin or function. These can be accessed using the &lt;a href=&quot;sass/script/functions#keywords-instance_method&quot;&gt;&lt;code&gt;keywords($args)&lt;/code&gt; function&lt;/a&gt;, which returns them as a map from strings (without &lt;code&gt;$&lt;/code&gt;) to values.</source>
          <target state="translated">변수 인수에는 mixin 또는 함수에 전달 된 키워드 인수도 포함됩니다. 이것들은 &lt;a href=&quot;sass/script/functions#keywords-instance_method&quot;&gt; &lt;code&gt;keywords($args)&lt;/code&gt; 함수를&lt;/a&gt; 사용하여 접근 할 수 있습니다.이 함수 는 문자열 ( &lt;code&gt;$&lt;/code&gt; 없이 )에서 값 으로의 맵으로 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="12bec1e6f5c7b6f13ec79c6d010470c778844034" translate="yes" xml:space="preserve">
          <source>Variable arguments can also be used when calling a mixin. Using the same syntax, you can expand a list of values so that each value is passed as a separate argument, or expand a map of values so that each pair is treated as a keyword argument. For example:</source>
          <target state="translated">믹스 인을 호출 할 때 변수 인수를 사용할 수도 있습니다. 동일한 구문을 사용하여 각 값이 별도의 인수로 전달되도록 값 목록을 확장하거나 각 쌍이 키워드 인수로 취급되도록 값의 맵을 확장 할 수 있습니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="d8f6a1442eaa82ed2ef7bd36ce68687125894980" translate="yes" xml:space="preserve">
          <source>Variables are only available within the level of nested selectors where they're defined. If they're defined outside of any nested selectors, they're available everywhere. They can also be defined with the &lt;code&gt;!global&lt;/code&gt; flag, in which case they're also available everywhere. For example:</source>
          <target state="translated">변수는 정의 된 중첩 선택기 수준 내에서만 사용할 수 있습니다. 중첩 된 선택기 외부에서 정의 된 경우 어디에서나 사용할 수 있습니다. 또한 &lt;code&gt;!global&lt;/code&gt; 플래그 로 정의 할 수 있으며 ,이 경우 어디에서나 사용할 수 있습니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="1cb19cba9d55dde6587abe0c14c4d12a21eb6bd0" translate="yes" xml:space="preserve">
          <source>Variables with &lt;code&gt;null&lt;/code&gt; values are treated as unassigned by !default:</source>
          <target state="translated">&lt;code&gt;null&lt;/code&gt; 값을 가진 변수는 ! default에 의해 할당되지 않은 것으로 취급됩니다 :</target>
        </trans-unit>
        <trans-unit id="a26c9a48ab460ac1ce8cae1c7f4d0ff504a10df3" translate="yes" xml:space="preserve">
          <source>Variables: &lt;code&gt;$&lt;/code&gt; #variables_</source>
          <target state="translated">변수 : &lt;code&gt;$&lt;/code&gt; #variables_</target>
        </trans-unit>
        <trans-unit id="fc476ae6c1bd15ef6c5cb340c03e844433c803d7" translate="yes" xml:space="preserve">
          <source>Well-formatted, customizable output</source>
          <target state="translated">잘 포맷되고 사용자 정의 가능한 출력</target>
        </trans-unit>
        <trans-unit id="45cf9995f3f3b0a0c2fc12ee09c79fc32d152015" translate="yes" xml:space="preserve">
          <source>When defining a mixin, the arguments are written as variable names separated by commas, all in parentheses after the name. Then when including the mixin, values can be passed in in the same manner. For example:</source>
          <target state="translated">믹스 인을 정의 할 때 인수는 이름 뒤에 괄호 안에 쉼표로 구분 된 변수 이름으로 작성됩니다. 그런 다음 믹스 인을 포함 할 때 동일한 방식으로 값을 전달할 수 있습니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="8eaf0650b12f4b6e13c45da64d3aefa7b846ec82" translate="yes" xml:space="preserve">
          <source>When lists are turned into plain CSS, Sass doesn't add any parentheses, since CSS doesn't understand them. That means that &lt;code&gt;(1px 2px) (5px 6px)&lt;/code&gt; and &lt;code&gt;1px 2px 5px 6px&lt;/code&gt; will look the same when they become CSS. However, they aren't the same when they're Sass: the first is a list containing two lists, while the second is a list containing four numbers.</source>
          <target state="translated">목록이 일반 CSS로 바뀌면 Sass는 CSS가 이해하지 못하므로 괄호를 추가하지 않습니다. 즉 &lt;code&gt;(1px 2px) (5px 6px)&lt;/code&gt; 와 &lt;code&gt;1px 2px 5px 6px&lt;/code&gt; 는 CSS가 될 때 동일하게 보입니다. 그러나 Sass 인 경우에는 동일하지 않습니다. 첫 번째는 두 개의 목록이 포함 된 목록이고 두 번째는 네 개의 숫자가 포함 된 목록입니다.</target>
        </trans-unit>
        <trans-unit id="5aad5437d7dfdab5e62318eefd2c6cfb001cf4fa" translate="yes" xml:space="preserve">
          <source>When merging selectors, &lt;code&gt;@extend&lt;/code&gt; is smart enough to avoid unnecessary duplication, so something like &lt;code&gt;.seriousError.seriousError&lt;/code&gt; gets translated to &lt;code&gt;.seriousError&lt;/code&gt;. In addition, it won't produce selectors that can't match anything, like &lt;code&gt;#main#footer&lt;/code&gt;.</source>
          <target state="translated">선택기를 병합 할 때, &lt;code&gt;@extend&lt;/code&gt; 는 같은 때문에, 불필요한 중복을 피하기 위해 스마트 충분하다 &lt;code&gt;.seriousError.seriousError&lt;/code&gt; 이 로 번역됩니다 &lt;code&gt;.seriousError&lt;/code&gt; 은 . 또한 &lt;code&gt;#main#footer&lt;/code&gt; 와 같이 아무것도 일치하지 않는 선택기를 생성하지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="7ff3c92336d6818ffe06769d17b564b4cd912585" translate="yes" xml:space="preserve">
          <source>When resolving an &lt;code&gt;@import&lt;/code&gt;, Sass will go through the load paths looking for an importer that successfully imports the path. Once one is found, the imported file is used.</source>
          <target state="translated">&lt;code&gt;@import&lt;/code&gt; 를 해결할 때 Sass는로드 경로를 통과하여 경로를 성공적으로 가져 오는 가져 오기 도구를 찾습니다. 하나를 찾으면 가져온 파일이 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="7c5f3ede65042880a9261966a2c4d5c41201709d" translate="yes" xml:space="preserve">
          <source>When running on Ruby 1.9 and later, Sass is aware of the character encoding of documents. Sass follows the &lt;a href=&quot;http://www.w3.org/TR/2013/WD-css-syntax-3-20130919/#determine-the-fallback-encoding&quot;&gt;CSS spec&lt;/a&gt; to determine the encoding of a stylesheet, and falls back to the Ruby string encoding. This means that it first checks the Unicode byte order mark, then the &lt;code&gt;@charset&lt;/code&gt; declaration, then the Ruby string encoding. If none of these are set, it will assume the document is in UTF-8.</source>
          <target state="translated">Ruby 1.9 이상에서 실행할 때 Sass는 문서의 문자 인코딩을 인식합니다. Sass는 &lt;a href=&quot;http://www.w3.org/TR/2013/WD-css-syntax-3-20130919/#determine-the-fallback-encoding&quot;&gt;CSS 사양&lt;/a&gt; 에 따라 스타일 시트의 인코딩을 결정하고 Ruby 문자열 인코딩으로 대체합니다. 즉, 먼저 유니 코드 바이트 순서 표시, &lt;code&gt;@charset&lt;/code&gt; 선언, Ruby 문자열 인코딩을 확인합니다. 이들 중 어느 것도 설정되지 않으면 문서가 UTF-8 인 것으로 가정합니다.</target>
        </trans-unit>
        <trans-unit id="197dd69b8b83c74b1b436711b01fa575cee90c61" translate="yes" xml:space="preserve">
          <source>When the first letter of a multiline comment is &lt;code&gt;!&lt;/code&gt;, the comment will always rendered into css output even in compressed output modes. This is useful for adding Copyright notices to your generated CSS.</source>
          <target state="translated">여러 줄 주석의 첫 글자가 &lt;code&gt;!&lt;/code&gt; 압축 된 출력 모드에서도 주석은 항상 css 출력으로 렌더링됩니다. 생성 된 CSS에 저작권 표시를 추가하는 데 유용합니다.</target>
        </trans-unit>
        <trans-unit id="5e4fd8404dc61ca660bd2f2f308dbfe931e2758a" translate="yes" xml:space="preserve">
          <source>When the last argument to a mixin or function is a positional or keyword-style argument, that argument can be followed by a trailing comma. Some prefer this coding style as it can lead to more concise diffs and fewer syntax errors when refactoring.</source>
          <target state="translated">믹스 인 또는 함수에 대한 마지막 인수가 위치 또는 키워드 스타일 인수 인 경우 해당 인수 다음에 쉼표가 올 수 있습니다. 일부는 리팩토링시 간결한 차이와 구문 오류를 유발할 수 있으므로이 코딩 스타일을 선호합니다.</target>
        </trans-unit>
        <trans-unit id="cb17805af33bc17e9ee429b94eb2209b9ed1cc08" translate="yes" xml:space="preserve">
          <source>When the two sequences being merged have no selectors in common, then two new selectors are generated: one with the first sequence before the second, and one with the second sequence before the first. For example:</source>
          <target state="translated">병합되는 두 시퀀스에 공통으로 선택기가없는 경우 두 개의 새로운 선택기가 생성됩니다. 하나는 두 번째 이전에 첫 번째 시퀀스를 갖고 다른 하나는 첫 번째 이전에 두 번째 시퀀스를 갖습니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="6a96355c77e9fc9e8cf8a12bb300b15d130381c5" translate="yes" xml:space="preserve">
          <source>Which would output the following:</source>
          <target state="translated">다음을 출력합니다.</target>
        </trans-unit>
        <trans-unit id="4456171cd4cc8074d8af762f53b44a9a7090c527" translate="yes" xml:space="preserve">
          <source>Which would produce:</source>
          <target state="translated">어떤 생산 :</target>
        </trans-unit>
        <trans-unit id="2275e024f14cc0973d14e354edc2110a6fa18663" translate="yes" xml:space="preserve">
          <source>While it would technically be possible to generate all selectors that could possibly match either sequence, this would make the stylesheet far too large. The simple example above, for instance, would require ten selectors. Instead, Sass generates only selectors that are likely to be useful.</source>
          <target state="translated">기술적으로 두 시퀀스 중 하나와 일치 할 수있는 모든 선택기를 생성 할 수 있지만 스타일 시트가 너무 커집니다. 예를 들어 위의 간단한 예제에는 10 개의 선택기가 필요합니다. 대신 Sass는 유용 할 수있는 선택기 만 생성합니다.</target>
        </trans-unit>
        <trans-unit id="b04bfd229cc5abb3ff13094b511bec694aad932a" translate="yes" xml:space="preserve">
          <source>While this is less concise, it can make the stylesheet easier to read. It also allows functions to present more flexible interfaces, providing many arguments without becoming difficult to call.</source>
          <target state="translated">간결하지는 않지만 스타일 시트를보다 쉽게 ​​읽을 수 있습니다. 또한 함수가보다 유연한 인터페이스를 제공하여 호출하기 어려운 많은 인수를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="f5e3d812af01ef111586dd7e7cd455fe9cd8f748" translate="yes" xml:space="preserve">
          <source>Within a string of text, #{} style interpolation can be used to place dynamic values within the string:</source>
          <target state="translated">문자열 내에서 # {} 스타일 보간을 사용하여 문자열 내에 동적 값을 배치 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5d86af3b87d3bc635839ced821182161d6b68ee4" translate="yes" xml:space="preserve">
          <source>Without a framework, Sass puts the cached templates in the &lt;code&gt;.sass-cache&lt;/code&gt; directory. In Rails and Merb, they go in &lt;code&gt;tmp/sass-cache&lt;/code&gt;. The directory can be customized with the &lt;a href=&quot;#cache_location-option&quot;&gt;&lt;code&gt;:cache_location&lt;/code&gt;&lt;/a&gt; option. If you don't want Sass to use caching at all, set the &lt;a href=&quot;#cache-option&quot;&gt;&lt;code&gt;:cache&lt;/code&gt;&lt;/a&gt; option to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">프레임 워크가 없으면 Sass는 캐시 된 템플릿을 &lt;code&gt;.sass-cache&lt;/code&gt; 디렉토리 에 넣습니다 . Rails와 Merb에서는 &lt;code&gt;tmp/sass-cache&lt;/code&gt; 에 들어 갑니다. 디렉토리는 &lt;a href=&quot;#cache_location-option&quot;&gt; &lt;code&gt;:cache_location&lt;/code&gt; &lt;/a&gt; 옵션 으로 사용자 정의 할 수 있습니다 . Sass에서 캐싱을 전혀 사용하지 않으려면 &lt;a href=&quot;#cache-option&quot;&gt; &lt;code&gt;:cache&lt;/code&gt; &lt;/a&gt; 옵션을 &lt;code&gt;false&lt;/code&gt; 로 설정하십시오 .</target>
        </trans-unit>
        <trans-unit id="f56b7d1c084ebe4783cdd34797281e416c05826e" translate="yes" xml:space="preserve">
          <source>You always include spaces on both sides of &lt;code&gt;-&lt;/code&gt; when subtracting.</source>
          <target state="translated">당신은 항상 양쪽에 공백이 포함 &lt;code&gt;-&lt;/code&gt; 빼서 때를.</target>
        </trans-unit>
        <trans-unit id="81147456a5c44d6acef05640c6850187a2831f7b" translate="yes" xml:space="preserve">
          <source>You can also tell Sass to watch the file and update the CSS every time the Sass file changes:</source>
          <target state="translated">Sass에게 파일을보고 Sass 파일이 변경 될 때마다 CSS를 업데이트하도록 지시 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="c122ca56a2a3ed525462e2c06d796aee0409cb52" translate="yes" xml:space="preserve">
          <source>You can also use SassScript variables in selectors and property names using &lt;code&gt;#{}&lt;/code&gt; interpolation syntax:</source>
          <target state="translated">&lt;code&gt;#{}&lt;/code&gt; 보간 구문을 사용하여 선택기 및 속성 이름에 SassScript 변수를 사용할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="13d13633a9f0660c0009224931f186514fc691b4" translate="yes" xml:space="preserve">
          <source>You can assign to variables if they aren't already assigned by adding the &lt;code&gt;!default&lt;/code&gt; flag to the end of the value. This means that if the variable has already been assigned to, it won't be re-assigned, but if it doesn't have a value yet, it will be given one.</source>
          <target state="translated">값 끝에 &lt;code&gt;!default&lt;/code&gt; 플래그를 추가하여 변수가 아직 지정되지 않은 경우 변수에 지정할 수 있습니다 . 이는 변수가 이미 할당 된 경우 재 할당되지 않지만 아직 값이없는 경우 변수가 제공됨을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="9a523a74baa4d7c69d2164b235f4424055c471bb" translate="yes" xml:space="preserve">
          <source>You can easily experiment with SassScript using the interactive shell. To launch the shell run the sass command-line with the &lt;code&gt;-i&lt;/code&gt; option. At the prompt, enter any legal SassScript expression to have it evaluated and the result printed out for you:</source>
          <target state="translated">대화식 쉘을 사용하여 SassScript를 쉽게 실험 할 수 있습니다. 쉘을 시작하려면 &lt;code&gt;-i&lt;/code&gt; 옵션을 사용하여 sass 명령 행을 실행하십시오 . 프롬프트에서 유효한 SassScript 표현식을 입력하여 평가하고 결과를 인쇄하십시오.</target>
        </trans-unit>
        <trans-unit id="a6efbecc96c755932cef7a5a3a542ce06278b05c" translate="yes" xml:space="preserve">
          <source>You can explicitly test for &lt;code&gt;$var == false&lt;/code&gt; or &lt;code&gt;$var == null&lt;/code&gt; if you want to distinguish between these.</source>
          <target state="translated">이들을 구별하려면 &lt;code&gt;$var == false&lt;/code&gt; 또는 &lt;code&gt;$var == null&lt;/code&gt; 명시 적으로 테스트 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="ba20eeb17ed1540c5890209e0bc6ad635fd905c9" translate="yes" xml:space="preserve">
          <source>You can pass both an argument list and a map as long as the list comes before the map, as in &lt;code&gt;@include colors($values..., $map...)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;@include colors($values..., $map...)&lt;/code&gt; 에서와 같이 목록이 맵보다 먼저 오는 한 인수 목록과 맵을 모두 전달할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="76d731fd27bb0a6fc509aa34683c1c6e1d903eaa" translate="yes" xml:space="preserve">
          <source>You can then refer to them in properties:</source>
          <target state="translated">그런 다음 속성에서 참조 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="cf503cec47c517b787ea526c054cc2eb87d4090d" translate="yes" xml:space="preserve">
          <source>You can turn warnings off with the &lt;code&gt;--quiet&lt;/code&gt; command-line option or the &lt;code&gt;:quiet&lt;/code&gt; Sass option.</source>
          <target state="translated">&lt;code&gt;--quiet&lt;/code&gt; 명령 줄 옵션 또는 &lt;code&gt;:quiet&lt;/code&gt; Sass 옵션을 사용하여 경고를 끌 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="49feb5899497bef208a42fb48189e577100fd7aa" translate="yes" xml:space="preserve">
          <source>You can use &lt;code&gt;@at-root (without: ...)&lt;/code&gt; to move outside of any directive. You can also do it with multiple directives separated by a space: &lt;code&gt;@at-root (without: media supports)&lt;/code&gt; moves outside of both &lt;code&gt;@media&lt;/code&gt; and &lt;code&gt;@supports&lt;/code&gt; queries.</source>
          <target state="translated">당신은 사용할 수 있습니다 &lt;code&gt;@at-root (without: ...)&lt;/code&gt; 어떤 지시어 외부에서 이동합니다. &lt;code&gt;@at-root (without: media supports)&lt;/code&gt; 는 &lt;code&gt;@media&lt;/code&gt; 및 &lt;code&gt;@supports&lt;/code&gt; 쿼리 외부로 이동 하여 여러 지시문을 공백으로 구분하여 수행 할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="da2b2af53c24dbda3080a6658d2d65594b29bdb2" translate="yes" xml:space="preserve">
          <source>You can use variable arguments to wrap a mixin and add additional styles without changing the argument signature of the mixin. If you do, keyword arguments will get directly passed through to the wrapped mixin. For example:</source>
          <target state="translated">변수 인수를 사용하여 믹스 인을 랩핑하고 믹스 인의 인수 서명을 변경하지 않고 추가 스타일을 추가 할 수 있습니다. 그렇게하면 키워드 인수가 래핑 된 믹스 인으로 직접 전달됩니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="214186f8652a0a9f83377311430be290c09851ce" translate="yes" xml:space="preserve">
          <source>You include a space before &lt;code&gt;-&lt;/code&gt; but not after for a negative number or a unary negation.</source>
          <target state="translated">당신은 공간 이전 포함 &lt;code&gt;-&lt;/code&gt; 하지만 음수 또는 단항 부정에 대한 후를.</target>
        </trans-unit>
        <trans-unit id="8816308f546f36ba1f2eb84b1922ab74be659ff1" translate="yes" xml:space="preserve">
          <source>You wrap a unary negation in parentheses if it's in a space-separated list, as in &lt;code&gt;10px (-$var)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;10px (-$var)&lt;/code&gt; 와 같이 공백으로 구분 된 목록에 있으면 단항 부정을 괄호로 묶습니다 .</target>
        </trans-unit>
        <trans-unit id="82451b41fd7878180b6aa2b54e369cbec4e8032c" translate="yes" xml:space="preserve">
          <source>abs</source>
          <target state="translated">abs</target>
        </trans-unit>
        <trans-unit id="41314a88f904c4689277b5eb551576181f8b03de" translate="yes" xml:space="preserve">
          <source>abs($number)</source>
          <target state="translated">abs($number)</target>
        </trans-unit>
        <trans-unit id="13fb83ffcf44c21e90625b65560d2cb3b38b1c37" translate="yes" xml:space="preserve">
          <source>adjust_color</source>
          <target state="translated">adjust_color</target>
        </trans-unit>
        <trans-unit id="fcde6841d6d75d592f338b4773bb5cc3d554e840" translate="yes" xml:space="preserve">
          <source>adjust_color($color, [$red], [$green], [$blue], [$hue], [$saturation], [$lightness], [$alpha])</source>
          <target state="translated">adjust_color ($ color, [$ red], [$ green], [$ blue], [$ hue], [$ saturation], [$ lightness], [$ alpha])</target>
        </trans-unit>
        <trans-unit id="9a48bad57d6bbbfcf761441534d9305586456562" translate="yes" xml:space="preserve">
          <source>adjust_hue</source>
          <target state="translated">adjust_hue</target>
        </trans-unit>
        <trans-unit id="a70422b686b9a2e20129773f335a21da1541c763" translate="yes" xml:space="preserve">
          <source>adjust_hue($color, $degrees)</source>
          <target state="translated">adjust_hue ($ 색, $도)</target>
        </trans-unit>
        <trans-unit id="be76331b95dfc399cd776d2fc68021e0db03cc4f" translate="yes" xml:space="preserve">
          <source>alpha</source>
          <target state="translated">alpha</target>
        </trans-unit>
        <trans-unit id="97fe9c0e1b5011367b9777a98fe408db58713477" translate="yes" xml:space="preserve">
          <source>alpha($color)</source>
          <target state="translated">alpha($color)</target>
        </trans-unit>
        <trans-unit id="515f232e78ae2bf61209d0acf67620a08cf72b8f" translate="yes" xml:space="preserve">
          <source>and &lt;code&gt;_colors.scss&lt;/code&gt; would be imported.</source>
          <target state="translated">및 &lt;code&gt;_colors.scss&lt;/code&gt; 를 가져올 수있다.</target>
        </trans-unit>
        <trans-unit id="db43bff34c78044870bc6b1ae2aa16902bb1bb8a" translate="yes" xml:space="preserve">
          <source>append</source>
          <target state="translated">append</target>
        </trans-unit>
        <trans-unit id="1f95e54ad17da9f7ddab05727617ccee32ba9d8b" translate="yes" xml:space="preserve">
          <source>append($list, $val, $separator:auto)</source>
          <target state="translated">추가 ($ list, $ val, $ separator : auto)</target>
        </trans-unit>
        <trans-unit id="4c9a82ce72ca2519f38d0af0abbb4cecb9fceca9" translate="yes" xml:space="preserve">
          <source>blue</source>
          <target state="translated">blue</target>
        </trans-unit>
        <trans-unit id="ab64ebf7ba79b4e2d077bfab54e1b739d4950074" translate="yes" xml:space="preserve">
          <source>blue($color)</source>
          <target state="translated">blue($color)</target>
        </trans-unit>
        <trans-unit id="e8f8fe62a522cc962a3179c2ef2f3161ee811ac5" translate="yes" xml:space="preserve">
          <source>booleans (e.g. &lt;code&gt;true&lt;/code&gt;, &lt;code&gt;false&lt;/code&gt;)</source>
          <target state="translated">부울 (예 : &lt;code&gt;true&lt;/code&gt; , &lt;code&gt;false&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="bc8d8647b02deea0ab3e715c220d041ee78cc19d" translate="yes" xml:space="preserve">
          <source>call</source>
          <target state="translated">call</target>
        </trans-unit>
        <trans-unit id="20dd91e57ed7bf204330eea88147ed9b194a7d8b" translate="yes" xml:space="preserve">
          <source>call($function, $args...)</source>
          <target state="translated">call ($ function, $ args ...)</target>
        </trans-unit>
        <trans-unit id="613af80c25dfbc9ef75ce605280571b9a518d632" translate="yes" xml:space="preserve">
          <source>ceil</source>
          <target state="translated">ceil</target>
        </trans-unit>
        <trans-unit id="780c60bd62c3b814b33370607671c80f0537384f" translate="yes" xml:space="preserve">
          <source>ceil($number)</source>
          <target state="translated">ceil($number)</target>
        </trans-unit>
        <trans-unit id="dc1b619e02e6d7ccbf209c87d6a683b6d399163a" translate="yes" xml:space="preserve">
          <source>change_color</source>
          <target state="translated">change_color</target>
        </trans-unit>
        <trans-unit id="38518de32ec42f346b3d323f9e208875a46949c1" translate="yes" xml:space="preserve">
          <source>change_color($color, [$red], [$green], [$blue], [$hue], [$saturation], [$lightness], [$alpha])</source>
          <target state="translated">change_color ($ color, [$ red], [$ green], [$ blue], [$ hue], [$ saturation], [$ lightness], [$ alpha])</target>
        </trans-unit>
        <trans-unit id="1c04e58b4f0ee405df5a6e58ecfc03f4bb77f299" translate="yes" xml:space="preserve">
          <source>colors (e.g. &lt;code&gt;blue&lt;/code&gt;, &lt;code&gt;#04a3f9&lt;/code&gt;, &lt;code&gt;rgba(255, 0, 0, 0.5)&lt;/code&gt;)</source>
          <target state="translated">색상 (예 : &lt;code&gt;blue&lt;/code&gt; , &lt;code&gt;#04a3f9&lt;/code&gt; , &lt;code&gt;rgba(255, 0, 0, 0.5)&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="41dfc188a657086391d84f0d7d61638c451f41b5" translate="yes" xml:space="preserve">
          <source>comparable</source>
          <target state="translated">comparable</target>
        </trans-unit>
        <trans-unit id="a17ecb8b3662485fab6e4862ac7b6bb4a854fe32" translate="yes" xml:space="preserve">
          <source>comparable($number1, $number2)</source>
          <target state="translated">비교 가능 ($ number1, $ number2)</target>
        </trans-unit>
        <trans-unit id="6d5c9dab960e525ed112945029e61215d50dbc52" translate="yes" xml:space="preserve">
          <source>complement</source>
          <target state="translated">complement</target>
        </trans-unit>
        <trans-unit id="b589ca7a7c989e0d901f5953e557459e953b843c" translate="yes" xml:space="preserve">
          <source>complement($color)</source>
          <target state="translated">complement($color)</target>
        </trans-unit>
        <trans-unit id="48f7116d514a7e1a200742892a25afba9684b2c2" translate="yes" xml:space="preserve">
          <source>computes &lt;code&gt;01 * 2 = 02&lt;/code&gt;, &lt;code&gt;02 * 2 = 04&lt;/code&gt;, and &lt;code&gt;03 * 2 = 06&lt;/code&gt;, and is compiled to:</source>
          <target state="translated">계산해 &lt;code&gt;01 * 2 = 02&lt;/code&gt; , &lt;code&gt;02 * 2 = 04&lt;/code&gt; 및 &lt;code&gt;03 * 2 = 06&lt;/code&gt; , 그리고 컴파일된다 :</target>
        </trans-unit>
        <trans-unit id="5d144fff406c46e1c643e6341d2218f55a50f5ab" translate="yes" xml:space="preserve">
          <source>computes &lt;code&gt;01 + 04 = 05&lt;/code&gt;, &lt;code&gt;02 + 05 = 07&lt;/code&gt;, and &lt;code&gt;03 + 06 = 09&lt;/code&gt;, and is compiled to:</source>
          <target state="translated">계산해 &lt;code&gt;01 + 04 = 05&lt;/code&gt; , &lt;code&gt;02 + 05 = 07&lt;/code&gt; 및 &lt;code&gt;03 + 06 = 09&lt;/code&gt; 및 컴파일된다 :</target>
        </trans-unit>
        <trans-unit id="f18c929905ac2ff3971ff803fb0536e1135f7bd0" translate="yes" xml:space="preserve">
          <source>content_exists</source>
          <target state="translated">content_exists</target>
        </trans-unit>
        <trans-unit id="458796e4e963a163322319ba62d683315a930a09" translate="yes" xml:space="preserve">
          <source>counter</source>
          <target state="translated">counter</target>
        </trans-unit>
        <trans-unit id="823683510d4f10536d4a492b82ca2b1bc24f5fcb" translate="yes" xml:space="preserve">
          <source>counter($args...)</source>
          <target state="translated">counter($args...)</target>
        </trans-unit>
        <trans-unit id="9ef65378b90a121f4afd568ccf6ba8211b70ec73" translate="yes" xml:space="preserve">
          <source>counters</source>
          <target state="translated">counters</target>
        </trans-unit>
        <trans-unit id="9eaea663fc86510b9de7edd46ad9ca14dad1f321" translate="yes" xml:space="preserve">
          <source>counters($args...)</source>
          <target state="translated">counters($args...)</target>
        </trans-unit>
        <trans-unit id="e52f1f026347e253ce2eed323018bd1b14329d74" translate="yes" xml:space="preserve">
          <source>css(Bool) &amp;mdash; Whether to get a plain CSS function.</source>
          <target state="translated">css (Bool) &amp;mdash; 일반 CSS 함수를 가져올 지 여부입니다.</target>
        </trans-unit>
        <trans-unit id="9d434f61af343dbcd39c63e84bbeee6944187977" translate="yes" xml:space="preserve">
          <source>darken</source>
          <target state="translated">darken</target>
        </trans-unit>
        <trans-unit id="8286568ef2f919cb3a12a1b2bfe6e62463c6f81b" translate="yes" xml:space="preserve">
          <source>darken($color, $amount)</source>
          <target state="translated">어둡게 ($ color, $ amount)</target>
        </trans-unit>
        <trans-unit id="6d5b4b9af4cabbe1e4882083c53be8a7f7344c86" translate="yes" xml:space="preserve">
          <source>desaturate</source>
          <target state="translated">desaturate</target>
        </trans-unit>
        <trans-unit id="c0827bd704098219bedc6b15f2fd5c64a9846b8d" translate="yes" xml:space="preserve">
          <source>desaturate($color, $amount)</source>
          <target state="translated">채도 ($ color, $ amount)</target>
        </trans-unit>
        <trans-unit id="4addec3932ac055130662ca9b3b2926fcde4d2b1" translate="yes" xml:space="preserve">
          <source>feature_exists</source>
          <target state="translated">feature_exists</target>
        </trans-unit>
        <trans-unit id="84729169c70a4fa6f86b34577ef113554c52b4e8" translate="yes" xml:space="preserve">
          <source>feature_exists($feature)</source>
          <target state="translated">feature_exists($feature)</target>
        </trans-unit>
        <trans-unit id="3684c9d3c05e7bee19e2728c6a5b2bbccf0cd9c7" translate="yes" xml:space="preserve">
          <source>floor</source>
          <target state="translated">floor</target>
        </trans-unit>
        <trans-unit id="00dff11ab1e2ad6add8f49c93694d595233d86a8" translate="yes" xml:space="preserve">
          <source>floor($number)</source>
          <target state="translated">floor($number)</target>
        </trans-unit>
        <trans-unit id="cd5cb66563a5f1dd282896b4bd49e68528a39782" translate="yes" xml:space="preserve">
          <source>function references</source>
          <target state="translated">함수 참조</target>
        </trans-unit>
        <trans-unit id="8b93d084be74d48f58fef2ec03bee143b1bd2e7e" translate="yes" xml:space="preserve">
          <source>function_exists</source>
          <target state="translated">function_exists</target>
        </trans-unit>
        <trans-unit id="73efae2687075416b181ef3fbdb71a8be3fb8c1d" translate="yes" xml:space="preserve">
          <source>function_exists($name)</source>
          <target state="translated">function_exists($name)</target>
        </trans-unit>
        <trans-unit id="9a810897a9090fd61a907f05d62146e8d95779e0" translate="yes" xml:space="preserve">
          <source>get_function</source>
          <target state="translated">get_function</target>
        </trans-unit>
        <trans-unit id="73a94d5898a6c4c7ff69ab7a3f58d514f0f4ea66" translate="yes" xml:space="preserve">
          <source>get_function($name, $css:false)</source>
          <target state="translated">get_function ($ name, $ css : false)</target>
        </trans-unit>
        <trans-unit id="53db0bb67179b9cf1b228159b12f80aa5b9543fc" translate="yes" xml:space="preserve">
          <source>global_variable_exists</source>
          <target state="translated">global_variable_exists</target>
        </trans-unit>
        <trans-unit id="d39b5f765ea1ffd1ce3e03b8f259a057302d17cb" translate="yes" xml:space="preserve">
          <source>global_variable_exists($name)</source>
          <target state="translated">global_variable_exists($name)</target>
        </trans-unit>
        <trans-unit id="03183f3cbe8bd5f653fd0bbac0b1064f9f044000" translate="yes" xml:space="preserve">
          <source>grayscale</source>
          <target state="translated">grayscale</target>
        </trans-unit>
        <trans-unit id="7ae667bfb465c85c164d9dde3794686d6837ad90" translate="yes" xml:space="preserve">
          <source>grayscale($color)</source>
          <target state="translated">grayscale($color)</target>
        </trans-unit>
        <trans-unit id="bc74f4f071a5a33f00ab88a6d6385b5e6638b86c" translate="yes" xml:space="preserve">
          <source>green</source>
          <target state="translated">green</target>
        </trans-unit>
        <trans-unit id="8e34eb904663877e8206feed2c2719ae5d2814f9" translate="yes" xml:space="preserve">
          <source>green($color)</source>
          <target state="translated">green($color)</target>
        </trans-unit>
        <trans-unit id="212eef0d02164871e784ddbc4039eebfcafb155a" translate="yes" xml:space="preserve">
          <source>hsl</source>
          <target state="translated">hsl</target>
        </trans-unit>
        <trans-unit id="efdda5705bc9b361076109a16891d4ef6a25dcfc" translate="yes" xml:space="preserve">
          <source>hsl($hue, $saturation, $lightness)</source>
          <target state="translated">hsl ($ hue, $ saturation, $ lightness)</target>
        </trans-unit>
        <trans-unit id="12d92d0a32d83f045ea52ea43d03e560e2d7f6b6" translate="yes" xml:space="preserve">
          <source>hsla</source>
          <target state="translated">hsla</target>
        </trans-unit>
        <trans-unit id="d4ccd81201caecc7b11a68b5feb39dc9bb3bbf91" translate="yes" xml:space="preserve">
          <source>hsla($hue, $saturation, $lightness, $alpha)</source>
          <target state="translated">hsla ($ hue, $ saturation, $ lightness, $ alpha)</target>
        </trans-unit>
        <trans-unit id="ae330fb416dcd1ec7a02099ff562bec4c0766695" translate="yes" xml:space="preserve">
          <source>hue</source>
          <target state="translated">hue</target>
        </trans-unit>
        <trans-unit id="33b311f2f1d8f765ed2d4a79de626e132cef11b3" translate="yes" xml:space="preserve">
          <source>hue($color)</source>
          <target state="translated">hue($color)</target>
        </trans-unit>
        <trans-unit id="e787935293b5d76e254bad9eea136b9708aadc05" translate="yes" xml:space="preserve">
          <source>ie_hex_str</source>
          <target state="translated">ie_hex_str</target>
        </trans-unit>
        <trans-unit id="767f3f4ea0dc63e75cba0b91444dfc94b0ab0bc8" translate="yes" xml:space="preserve">
          <source>ie_hex_str($color)</source>
          <target state="translated">ie_hex_str($color)</target>
        </trans-unit>
        <trans-unit id="958f57f57d72a30f329ee5538f21b0257a49a46e" translate="yes" xml:space="preserve">
          <source>if</source>
          <target state="translated">if</target>
        </trans-unit>
        <trans-unit id="c3d88335d43018c4da6cc8e05894fbc861c76260" translate="yes" xml:space="preserve">
          <source>if($condition, $if-true, $if-false)</source>
          <target state="translated">if ($ condition, $ if-true, $ if-false)</target>
        </trans-unit>
        <trans-unit id="e540cdd1328b2b21e29a95405c301b9313b7c346" translate="yes" xml:space="preserve">
          <source>index</source>
          <target state="translated">index</target>
        </trans-unit>
        <trans-unit id="04aa0aaf4988f164d7964b413cb9bae36eef0734" translate="yes" xml:space="preserve">
          <source>index($list, $value)</source>
          <target state="translated">인덱스 ($ list, $ value)</target>
        </trans-unit>
        <trans-unit id="a1a2ae18fa153a52a05172a40a60c6c0848214e2" translate="yes" xml:space="preserve">
          <source>inspect</source>
          <target state="translated">inspect</target>
        </trans-unit>
        <trans-unit id="e318971301fd9c5a78e6d0289518b2dbdfddc97c" translate="yes" xml:space="preserve">
          <source>inspect($value)</source>
          <target state="translated">inspect($value)</target>
        </trans-unit>
        <trans-unit id="a1754a8aa1386d7939bfddd474cd0652882671b3" translate="yes" xml:space="preserve">
          <source>invert</source>
          <target state="translated">invert</target>
        </trans-unit>
        <trans-unit id="1093f40a478869199c6eebba5073a81d47e4178c" translate="yes" xml:space="preserve">
          <source>invert($color)  invert($color, $weight:100%)</source>
          <target state="translated">반전 ($ color) 반전 ($ color, $ weight : 100 %)</target>
        </trans-unit>
        <trans-unit id="e83e5d1b0a72a66d0c8109bdf229a13a30567c62" translate="yes" xml:space="preserve">
          <source>is compiled to</source>
          <target state="translated">에 컴파일</target>
        </trans-unit>
        <trans-unit id="6b0d333fa91b7256720d61e3b723f862f3e9cd6a" translate="yes" xml:space="preserve">
          <source>is compiled to:</source>
          <target state="translated">다음으로 컴파일됩니다.</target>
        </trans-unit>
        <trans-unit id="c89ab81b3a99ab7236dfba6067a7de5692479c90" translate="yes" xml:space="preserve">
          <source>is_bracketed</source>
          <target state="translated">is_bracketed</target>
        </trans-unit>
        <trans-unit id="c2425a294bd85dd21b4540ee2993705de304c23e" translate="yes" xml:space="preserve">
          <source>is_bracketed($list)</source>
          <target state="translated">is_bracketed($list)</target>
        </trans-unit>
        <trans-unit id="960afda7c138b0fdc7c9189154b9a9dda20847d6" translate="yes" xml:space="preserve">
          <source>is_superselector</source>
          <target state="translated">is_superselector</target>
        </trans-unit>
        <trans-unit id="0f6d742cafd47ee6b4d98e9a5541d8a438014f27" translate="yes" xml:space="preserve">
          <source>is_superselector($super, $sub)</source>
          <target state="translated">is_superselector ($ super, $ sub)</target>
        </trans-unit>
        <trans-unit id="c455b38e076228392d1c751d14fe95da50519334" translate="yes" xml:space="preserve">
          <source>join</source>
          <target state="translated">join</target>
        </trans-unit>
        <trans-unit id="62c72ddce0c63c93c134e7c7409704886c5e8b6c" translate="yes" xml:space="preserve">
          <source>join($list1, $list2, $separator:auto, $bracketed:auto)</source>
          <target state="translated">join ($ list1, $ list2, $ separator : auto, $ bracketed : auto)</target>
        </trans-unit>
        <trans-unit id="88fc09e54b17679b0028556344b50c9fe169bdb5" translate="yes" xml:space="preserve">
          <source>keywords</source>
          <target state="translated">keywords</target>
        </trans-unit>
        <trans-unit id="4cc5abd8d22e38478333b1c99f2d92f019daf2ae" translate="yes" xml:space="preserve">
          <source>keywords($args)</source>
          <target state="translated">keywords($args)</target>
        </trans-unit>
        <trans-unit id="3d54973f528b01019a58a52d34d518405a01b891" translate="yes" xml:space="preserve">
          <source>length</source>
          <target state="translated">length</target>
        </trans-unit>
        <trans-unit id="f9d79c382e061e1bea1eb7a7be81835f8174ac99" translate="yes" xml:space="preserve">
          <source>length($list)</source>
          <target state="translated">length($list)</target>
        </trans-unit>
        <trans-unit id="5974ecef824d882efe9a83098fe1d4a629f0c6fb" translate="yes" xml:space="preserve">
          <source>lighten</source>
          <target state="translated">lighten</target>
        </trans-unit>
        <trans-unit id="bb777cf8f90f68b02181b0b09a59418123601c57" translate="yes" xml:space="preserve">
          <source>lighten($color, $amount)</source>
          <target state="translated">밝게 ($ color, $ amount)</target>
        </trans-unit>
        <trans-unit id="1a1e39752e71eb993efb58f9a9d677538d3bc45c" translate="yes" xml:space="preserve">
          <source>lightness</source>
          <target state="translated">lightness</target>
        </trans-unit>
        <trans-unit id="bed7c58f216522535189528735ab9b41ad55fc54" translate="yes" xml:space="preserve">
          <source>lightness($color)</source>
          <target state="translated">lightness($color)</target>
        </trans-unit>
        <trans-unit id="8ef52782aebb7a5a5262c8f322288a5899165323" translate="yes" xml:space="preserve">
          <source>list_separator</source>
          <target state="translated">list_separator</target>
        </trans-unit>
        <trans-unit id="48e2fb2332e490230d5379b668c0c1c11f1305f5" translate="yes" xml:space="preserve">
          <source>list_separator($list)</source>
          <target state="translated">list_separator($list)</target>
        </trans-unit>
        <trans-unit id="95f69a800f0e853fd56e6b91c008f19a80c2c047" translate="yes" xml:space="preserve">
          <source>lists of values, separated by spaces or commas (e.g. &lt;code&gt;1.5em 1em 0 2em&lt;/code&gt;, &lt;code&gt;Helvetica, Arial, sans-serif&lt;/code&gt;)</source>
          <target state="translated">공백 또는 쉼표로 구분 된 값 목록 (예 : &lt;code&gt;1.5em 1em 0 2em&lt;/code&gt; , &lt;code&gt;Helvetica, Arial, sans-serif&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="cb6d5ba86dad121baa49b3e29322e71fec188b44" translate="yes" xml:space="preserve">
          <source>map_get</source>
          <target state="translated">map_get</target>
        </trans-unit>
        <trans-unit id="e6ddca5af79ca8d165b942f7fda21cece8a1938f" translate="yes" xml:space="preserve">
          <source>map_get($map, $key)</source>
          <target state="translated">map_get ($ map, $ key)</target>
        </trans-unit>
        <trans-unit id="0298e572e6674871479af9ec3d68d7cd55667476" translate="yes" xml:space="preserve">
          <source>map_has_key</source>
          <target state="translated">map_has_key</target>
        </trans-unit>
        <trans-unit id="6b4f7540a7da4d47b50597b505e7d5baac5ddf62" translate="yes" xml:space="preserve">
          <source>map_has_key($map, $key)</source>
          <target state="translated">map_has_key ($ map, $ key)</target>
        </trans-unit>
        <trans-unit id="502345eafd7f1be4b169eaa1b2458417fc490ea7" translate="yes" xml:space="preserve">
          <source>map_keys</source>
          <target state="translated">map_keys</target>
        </trans-unit>
        <trans-unit id="344251ea05de4f296f502f732f9846b170ad8a8d" translate="yes" xml:space="preserve">
          <source>map_keys($map)</source>
          <target state="translated">map_keys($map)</target>
        </trans-unit>
        <trans-unit id="befe27e7493383353a36af48f356a4fb142f4423" translate="yes" xml:space="preserve">
          <source>map_merge</source>
          <target state="translated">map_merge</target>
        </trans-unit>
        <trans-unit id="f3becfc9368529ccc4976548a750995119ae483e" translate="yes" xml:space="preserve">
          <source>map_merge($map1, $map2)</source>
          <target state="translated">map_merge ($ map1, $ map2)</target>
        </trans-unit>
        <trans-unit id="fcfd8a226656d2a48797630faf4f55c51fff5390" translate="yes" xml:space="preserve">
          <source>map_remove</source>
          <target state="translated">map_remove</target>
        </trans-unit>
        <trans-unit id="34b3845b9f35f17d67ad27d6eac0596e91ba87de" translate="yes" xml:space="preserve">
          <source>map_remove($map, $keys...)</source>
          <target state="translated">map_remove ($ map, $ keys ...)</target>
        </trans-unit>
        <trans-unit id="c914d6732e7a93c80b0f3f81a8db8ae51122b7df" translate="yes" xml:space="preserve">
          <source>map_values</source>
          <target state="translated">map_values</target>
        </trans-unit>
        <trans-unit id="b5ba6caa9fda9083a840683103d3268bb09ffdd5" translate="yes" xml:space="preserve">
          <source>map_values($map)</source>
          <target state="translated">map_values($map)</target>
        </trans-unit>
        <trans-unit id="2a7591048b98f64a4b5374174e7db75088596322" translate="yes" xml:space="preserve">
          <source>maps from one value to another (e.g. &lt;code&gt;(key1: value1, key2: value2)&lt;/code&gt;)</source>
          <target state="translated">한 값에서 다른 값으로 매핑 (예 : &lt;code&gt;(key1: value1, key2: value2)&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="0706025b2bbcec1ed8d64822f4eccd96314938d0" translate="yes" xml:space="preserve">
          <source>max</source>
          <target state="translated">max</target>
        </trans-unit>
        <trans-unit id="c9a5ecc394ea62b65b941ab698a1700b521d4782" translate="yes" xml:space="preserve">
          <source>max($numbers...)</source>
          <target state="translated">max($numbers...)</target>
        </trans-unit>
        <trans-unit id="b6c935d4f3c7b220fa038613a1f9c1b56b255a86" translate="yes" xml:space="preserve">
          <source>min</source>
          <target state="translated">min</target>
        </trans-unit>
        <trans-unit id="dbd49320c2fe088ee31a2a011080df1068b8cd75" translate="yes" xml:space="preserve">
          <source>min($numbers...)</source>
          <target state="translated">min($numbers...)</target>
        </trans-unit>
        <trans-unit id="38743fbb4474f9888eeb292dd9b249a72c19fd24" translate="yes" xml:space="preserve">
          <source>mix</source>
          <target state="translated">mix</target>
        </trans-unit>
        <trans-unit id="b7621cd239b8ce993a7f16a87c1037b40830d64a" translate="yes" xml:space="preserve">
          <source>mix($color1, $color2, $weight:50%)</source>
          <target state="translated">믹스 ($ color1, $ color2, $ weight : 50 %)</target>
        </trans-unit>
        <trans-unit id="847c878c38456c539b4788642e1547577912b694" translate="yes" xml:space="preserve">
          <source>mixin_exists</source>
          <target state="translated">mixin_exists</target>
        </trans-unit>
        <trans-unit id="2d727331c8b3dcdb6f4e579e8848305656149a5b" translate="yes" xml:space="preserve">
          <source>mixin_exists($name)</source>
          <target state="translated">mixin_exists($name)</target>
        </trans-unit>
        <trans-unit id="0dcbb8c4fad22fde5877055fcbc6f1c550e3a00d" translate="yes" xml:space="preserve">
          <source>name(String) &amp;mdash; The name of the function being referenced.</source>
          <target state="translated">name (String) &amp;mdash; 참조중인 함수의 이름입니다.</target>
        </trans-unit>
        <trans-unit id="4fe2c45693c3e4172a1013cee892ec6832399cd2" translate="yes" xml:space="preserve">
          <source>name(String) &amp;mdash; The name of the function to check or a function reference.</source>
          <target state="translated">name (String) &amp;mdash; 확인할 함수의 이름 또는 함수 참조입니다.</target>
        </trans-unit>
        <trans-unit id="66b6f54953f1932f968b74a9098f7f903f4a6f6c" translate="yes" xml:space="preserve">
          <source>name(String) &amp;mdash; The name of the mixin to check.</source>
          <target state="translated">name (String) &amp;mdash; 확인할 믹스 인의 이름입니다.</target>
        </trans-unit>
        <trans-unit id="60627985e724e945990d6d38cb32744cf01bc5a8" translate="yes" xml:space="preserve">
          <source>nth</source>
          <target state="translated">nth</target>
        </trans-unit>
        <trans-unit id="e663c3562d58e4926a1ba83ee4592a2246d82cf7" translate="yes" xml:space="preserve">
          <source>nth($list, $n)</source>
          <target state="translated">n 번째 ($ list, $ n)</target>
        </trans-unit>
        <trans-unit id="18e382acb8080a6ad2c7a89c7a62dc07635ca103" translate="yes" xml:space="preserve">
          <source>nulls (e.g. &lt;code&gt;null&lt;/code&gt;)</source>
          <target state="translated">null (예 : &lt;code&gt;null&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="65d390296e9c59855f79f0cda2efc43c5cad36ed" translate="yes" xml:space="preserve">
          <source>numbers (e.g. &lt;code&gt;1.2&lt;/code&gt;, &lt;code&gt;13&lt;/code&gt;, &lt;code&gt;10px&lt;/code&gt;)</source>
          <target state="translated">숫자 (예 : &lt;code&gt;1.2&lt;/code&gt; , &lt;code&gt;13&lt;/code&gt; , &lt;code&gt;10px&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="1c2255d3789db4969aed37c41834b84d99564358" translate="yes" xml:space="preserve">
          <source>opacify</source>
          <target state="translated">opacify</target>
        </trans-unit>
        <trans-unit id="ae12e63a6d6d87b9ac67d74671ebe42206bd9b33" translate="yes" xml:space="preserve">
          <source>opacify($color, $amount) Also known as: &lt;span id=&quot;fade_in-instance_method&quot;&gt;fade_in&lt;/span&gt;</source>
          <target state="translated">opacify ($ color, $ amount) 다른 이름 : &lt;span id=&quot;fade_in-instance_method&quot;&gt;fade_in&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="4546f429052ef53e58284834db4fffb7bd2975fd" translate="yes" xml:space="preserve">
          <source>opacity</source>
          <target state="translated">opacity</target>
        </trans-unit>
        <trans-unit id="7872ad224c8344872fbda4e0d94bfb0bf559082f" translate="yes" xml:space="preserve">
          <source>opacity($color)</source>
          <target state="translated">opacity($color)</target>
        </trans-unit>
        <trans-unit id="1758356db21759f7c5a0da9b4dd1db8fd6feab3f" translate="yes" xml:space="preserve">
          <source>or</source>
          <target state="translated">or</target>
        </trans-unit>
        <trans-unit id="485e0703f2e6eb15da7ef67b5be3629ae4f80277" translate="yes" xml:space="preserve">
          <source>outputs:</source>
          <target state="translated">outputs:</target>
        </trans-unit>
        <trans-unit id="5138292fdb5c5907fce2b5cd3dfae55ad7c5542f" translate="yes" xml:space="preserve">
          <source>percentage</source>
          <target state="translated">percentage</target>
        </trans-unit>
        <trans-unit id="8b09a777d1c5f089cf18a4373b3a8a93a01114a7" translate="yes" xml:space="preserve">
          <source>percentage($number)</source>
          <target state="translated">percentage($number)</target>
        </trans-unit>
        <trans-unit id="2bcec56171df3c6150684b60fb0f16c51e1923ed" translate="yes" xml:space="preserve">
          <source>produces:</source>
          <target state="translated">produces:</target>
        </trans-unit>
        <trans-unit id="f5d98dda084d28a169608dd73ae890b09c93e84f" translate="yes" xml:space="preserve">
          <source>quote</source>
          <target state="translated">quote</target>
        </trans-unit>
        <trans-unit id="4ac2e113c3fedeec09985bf4cd17afb2e0ce30c4" translate="yes" xml:space="preserve">
          <source>quote($string)</source>
          <target state="translated">quote($string)</target>
        </trans-unit>
        <trans-unit id="5a3df1bc9e5578d7313bf7b4b7e269c9f3fcdbc9" translate="yes" xml:space="preserve">
          <source>random  random</source>
          <target state="translated">랜덤 랜덤</target>
        </trans-unit>
        <trans-unit id="2f71869c3c453683625085160a19776ce4265df6" translate="yes" xml:space="preserve">
          <source>random  random($limit)</source>
          <target state="translated">랜덤 랜덤 ($ limit)</target>
        </trans-unit>
        <trans-unit id="78988010b890ce6f4d2136481f392787ec6d6106" translate="yes" xml:space="preserve">
          <source>red</source>
          <target state="translated">red</target>
        </trans-unit>
        <trans-unit id="8f8b253e6fb11657920bc28fac381b02d132c65a" translate="yes" xml:space="preserve">
          <source>red($color)</source>
          <target state="translated">red($color)</target>
        </trans-unit>
        <trans-unit id="eb4b5bbb4a6cbf3468229148f167a307303eeb1f" translate="yes" xml:space="preserve">
          <source>rgb</source>
          <target state="translated">rgb</target>
        </trans-unit>
        <trans-unit id="0a73f8069faf6439b03a474be623471ea31d586f" translate="yes" xml:space="preserve">
          <source>rgb($red, $green, $blue)</source>
          <target state="translated">rgb ($ red, $ green, $ blue)</target>
        </trans-unit>
        <trans-unit id="aa8b8e5898d4e45de28553401a77e06459abebb3" translate="yes" xml:space="preserve">
          <source>rgba</source>
          <target state="translated">rgba</target>
        </trans-unit>
        <trans-unit id="de0244e48b69062fc2b12b02ce638645424e536d" translate="yes" xml:space="preserve">
          <source>rgba($red, $green, $blue, $alpha)  rgba($color, $alpha)</source>
          <target state="translated">rgba ($ red, $ green, $ blue, $ alpha) rgba ($ color, $ alpha)</target>
        </trans-unit>
        <trans-unit id="f0590a6dd3663be108ff31f58d16b829a1284be6" translate="yes" xml:space="preserve">
          <source>round</source>
          <target state="translated">round</target>
        </trans-unit>
        <trans-unit id="e6eaac36ca00e1246fa1f9008744d8744f1b59da" translate="yes" xml:space="preserve">
          <source>round($number)</source>
          <target state="translated">round($number)</target>
        </trans-unit>
        <trans-unit id="c7a2b59cfc07ac89acb3b335af1c0076f6a49b0e" translate="yes" xml:space="preserve">
          <source>saturate</source>
          <target state="translated">saturate</target>
        </trans-unit>
        <trans-unit id="6d546a758dbd6ac560ee5c0ccc700ed9c5adf8bb" translate="yes" xml:space="preserve">
          <source>saturate($color, $amount)</source>
          <target state="translated">채도 ($ color, $ amount)</target>
        </trans-unit>
        <trans-unit id="a9c3a1723405c0f9772744135fb727da79aba197" translate="yes" xml:space="preserve">
          <source>saturation</source>
          <target state="translated">saturation</target>
        </trans-unit>
        <trans-unit id="5f1c05eac512494e03390b221ddc5f1ca54149df" translate="yes" xml:space="preserve">
          <source>saturation($color)</source>
          <target state="translated">saturation($color)</target>
        </trans-unit>
        <trans-unit id="0241daa321b130dc9168782c0b3d708cb759cb36" translate="yes" xml:space="preserve">
          <source>scale_color</source>
          <target state="translated">scale_color</target>
        </trans-unit>
        <trans-unit id="1fc0db058542a8cb7a1b5bb7cab2c2d65f6be7dc" translate="yes" xml:space="preserve">
          <source>scale_color($color, [$red], [$green], [$blue], [$saturation], [$lightness], [$alpha])</source>
          <target state="translated">scale_color ($ color, [$ red], [$ green], [$ blue], [$ saturation], [$ lightness], [$ alpha])</target>
        </trans-unit>
        <trans-unit id="d34ce64e10006e23c09d4e1e4709658952236002" translate="yes" xml:space="preserve">
          <source>selector_append</source>
          <target state="translated">selector_append</target>
        </trans-unit>
        <trans-unit id="0c8df11484c72416872d45debe75f877774e93db" translate="yes" xml:space="preserve">
          <source>selector_append($selectors...)</source>
          <target state="translated">selector_append($selectors...)</target>
        </trans-unit>
        <trans-unit id="6450e6f006429bde4003e6ae44e12b90694d6cb9" translate="yes" xml:space="preserve">
          <source>selector_extend</source>
          <target state="translated">selector_extend</target>
        </trans-unit>
        <trans-unit id="78795dd92676883d77ea860e9297b2a007744598" translate="yes" xml:space="preserve">
          <source>selector_extend($selector, $extendee, $extender)</source>
          <target state="translated">selector_extend ($ selector, $ extendee, $ extender)</target>
        </trans-unit>
        <trans-unit id="b9cada06a04298328d80cc41b929c6e7b014f6a9" translate="yes" xml:space="preserve">
          <source>selector_nest</source>
          <target state="translated">selector_nest</target>
        </trans-unit>
        <trans-unit id="2a640f1de4d9cc378411d5b52b8ef148adad3ea0" translate="yes" xml:space="preserve">
          <source>selector_nest($selectors...)</source>
          <target state="translated">selector_nest($selectors...)</target>
        </trans-unit>
        <trans-unit id="643a1193b6ee148898ff9f68b7afcabda1c544d2" translate="yes" xml:space="preserve">
          <source>selector_parse</source>
          <target state="translated">selector_parse</target>
        </trans-unit>
        <trans-unit id="727e2e7f38e979a04ebede8fcf9ec649d50329d4" translate="yes" xml:space="preserve">
          <source>selector_parse($selector)</source>
          <target state="translated">selector_parse($selector)</target>
        </trans-unit>
        <trans-unit id="a59535d702a4123a562e56b77a8113b6687f3d8a" translate="yes" xml:space="preserve">
          <source>selector_replace</source>
          <target state="translated">selector_replace</target>
        </trans-unit>
        <trans-unit id="dd79ee20fe076665f2e65752cf1f4110a0786b57" translate="yes" xml:space="preserve">
          <source>selector_replace($selector, $original, $replacement)</source>
          <target state="translated">selector_replace ($ selector, $ original, $ replacement)</target>
        </trans-unit>
        <trans-unit id="85da23d571e5f6ebcc9a8bdf044aac57c585b78f" translate="yes" xml:space="preserve">
          <source>selector_unify</source>
          <target state="translated">selector_unify</target>
        </trans-unit>
        <trans-unit id="f9dfdf3c651c522bbe0355546429d3afcb68c6bb" translate="yes" xml:space="preserve">
          <source>selector_unify($selector1, $selector2)</source>
          <target state="translated">selector_unify ($ selector1, $ selector2)</target>
        </trans-unit>
        <trans-unit id="65c10dc3549fe07424148a8a4790a3341ecbc253" translate="yes" xml:space="preserve">
          <source>set</source>
          <target state="translated">set</target>
        </trans-unit>
        <trans-unit id="c9eb0929ccf6defa0553d8c861ae20a322e6e28e" translate="yes" xml:space="preserve">
          <source>simple_selectors</source>
          <target state="translated">simple_selectors</target>
        </trans-unit>
        <trans-unit id="683b9b05d12881e0fdc543c4640cf7322e96d87d" translate="yes" xml:space="preserve">
          <source>simple_selectors($selector)</source>
          <target state="translated">simple_selectors($selector)</target>
        </trans-unit>
        <trans-unit id="893917b41124831b470497010d8e91756d137725" translate="yes" xml:space="preserve">
          <source>str_index</source>
          <target state="translated">str_index</target>
        </trans-unit>
        <trans-unit id="2c0550a8808293f957da5816f9b5ddec0c341a4e" translate="yes" xml:space="preserve">
          <source>str_index($string, $substring)</source>
          <target state="translated">str_index ($ string, $ substring)</target>
        </trans-unit>
        <trans-unit id="569d99623f14df5535ad3a1e46888dd6b8b09897" translate="yes" xml:space="preserve">
          <source>str_insert</source>
          <target state="translated">str_insert</target>
        </trans-unit>
        <trans-unit id="8056408d97a646942bda36a44df7bdbc2b99fe9c" translate="yes" xml:space="preserve">
          <source>str_insert($string, $insert, $index)</source>
          <target state="translated">str_insert ($ string, $ insert, $ index)</target>
        </trans-unit>
        <trans-unit id="f999ae6eef02e1bd0d21875bd025ee4ca4459ac0" translate="yes" xml:space="preserve">
          <source>str_length</source>
          <target state="translated">str_length</target>
        </trans-unit>
        <trans-unit id="dd9bf59413096c78e08d0d4aa636a6e9254822ba" translate="yes" xml:space="preserve">
          <source>str_length($string)</source>
          <target state="translated">str_length($string)</target>
        </trans-unit>
        <trans-unit id="52ef63d462aad0e2003c418695e477840f4a3110" translate="yes" xml:space="preserve">
          <source>str_slice</source>
          <target state="translated">str_slice</target>
        </trans-unit>
        <trans-unit id="b0c6919a4f3e229c93f89dfd2b8f673756bcd088" translate="yes" xml:space="preserve">
          <source>str_slice($string, $start-at, $end-at:-1)</source>
          <target state="translated">str_slice ($ string, $ start-at, $ end-at : -1)</target>
        </trans-unit>
        <trans-unit id="4d3ff95c38738f4949939ff2e1e2cd2bfcfe1428" translate="yes" xml:space="preserve">
          <source>strings of text, with and without quotes (e.g. &lt;code&gt;&quot;foo&quot;&lt;/code&gt;, &lt;code&gt;'bar'&lt;/code&gt;, &lt;code&gt;baz&lt;/code&gt;)</source>
          <target state="translated">따옴표가 있거나없는 텍스트 문자열 (예 : &lt;code&gt;&quot;foo&quot;&lt;/code&gt; , &lt;code&gt;'bar'&lt;/code&gt; , &lt;code&gt;baz&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="6f8f8e9f767353d846d34ea5a451c83849c1b01b" translate="yes" xml:space="preserve">
          <source>then</source>
          <target state="translated">then</target>
        </trans-unit>
        <trans-unit id="784b0c5699caf287c4c10e51ab736c7db33f083d" translate="yes" xml:space="preserve">
          <source>to_lower_case</source>
          <target state="translated">to_lower_case</target>
        </trans-unit>
        <trans-unit id="6ca2b28d0016a783e948056dd014b3a18ac8044d" translate="yes" xml:space="preserve">
          <source>to_lower_case($string)</source>
          <target state="translated">to_lower_case($string)</target>
        </trans-unit>
        <trans-unit id="e6cddd58d526b31ea9c3de44358c3a4b0928eff2" translate="yes" xml:space="preserve">
          <source>to_upper_case</source>
          <target state="translated">to_upper_case</target>
        </trans-unit>
        <trans-unit id="92c4638b58036fab8b024d9f5c893bf14848139b" translate="yes" xml:space="preserve">
          <source>to_upper_case($string)</source>
          <target state="translated">to_upper_case($string)</target>
        </trans-unit>
        <trans-unit id="5301fefc4be67174f74e6b71ad0e693cfa9e08b9" translate="yes" xml:space="preserve">
          <source>transparentize</source>
          <target state="translated">transparentize</target>
        </trans-unit>
        <trans-unit id="d965446d704d591181f04588fd02b4e1f9bd2681" translate="yes" xml:space="preserve">
          <source>transparentize($color, $amount) Also known as: &lt;span id=&quot;fade_out-instance_method&quot;&gt;fade_out&lt;/span&gt;</source>
          <target state="translated">transparentize ($ color, $ amount) 다른 이름 : &lt;span id=&quot;fade_out-instance_method&quot;&gt;fade_out&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="a55bbed6d69ed407ee020c8ea4932aee1d31bf0f" translate="yes" xml:space="preserve">
          <source>type_of</source>
          <target state="translated">type_of</target>
        </trans-unit>
        <trans-unit id="e91b16f481347515a280a7b54777e62fb5f88c56" translate="yes" xml:space="preserve">
          <source>type_of($value)</source>
          <target state="translated">type_of($value)</target>
        </trans-unit>
        <trans-unit id="4e93a407500afe6672140e9c41d6345b5641d311" translate="yes" xml:space="preserve">
          <source>unique_id</source>
          <target state="translated">unique_id</target>
        </trans-unit>
        <trans-unit id="0df9eea0bad5a55395db9ec290dfcf4a883d5d3e" translate="yes" xml:space="preserve">
          <source>unit</source>
          <target state="translated">unit</target>
        </trans-unit>
        <trans-unit id="ba0ca25ec56b4780353b05607057eeaef91474b1" translate="yes" xml:space="preserve">
          <source>unit($number)</source>
          <target state="translated">unit($number)</target>
        </trans-unit>
        <trans-unit id="fde4fbc4811960ddee8ae63d4172b277cae7a5f5" translate="yes" xml:space="preserve">
          <source>unitless</source>
          <target state="translated">unitless</target>
        </trans-unit>
        <trans-unit id="f009c404ef2c55f8ebfb893f7623ae2ee75120e5" translate="yes" xml:space="preserve">
          <source>unitless($number)</source>
          <target state="translated">unitless($number)</target>
        </trans-unit>
        <trans-unit id="3a3ba18672da162111fb95d1241e92df94145f05" translate="yes" xml:space="preserve">
          <source>unquote</source>
          <target state="translated">unquote</target>
        </trans-unit>
        <trans-unit id="1d0e40a39c57cc5a95f5058fe0512ffb6999daac" translate="yes" xml:space="preserve">
          <source>unquote($string)</source>
          <target state="translated">unquote($string)</target>
        </trans-unit>
        <trans-unit id="f0098f100c5c0132736e9593d53206299ed3f984" translate="yes" xml:space="preserve">
          <source>variable_exists</source>
          <target state="translated">variable_exists</target>
        </trans-unit>
        <trans-unit id="4787d89a5b4c7c620210cbdafa1fb990b6a0b73b" translate="yes" xml:space="preserve">
          <source>variable_exists($name)</source>
          <target state="translated">variable_exists($name)</target>
        </trans-unit>
        <trans-unit id="821eb74253ff5b3512f0a9a9385b98ad25d8b967" translate="yes" xml:space="preserve">
          <source>would all compile to</source>
          <target state="translated">모두 컴파일</target>
        </trans-unit>
        <trans-unit id="20ff756c76df61b4a681c9ab000baa5987c14066" translate="yes" xml:space="preserve">
          <source>would both import the file &lt;code&gt;foo.scss&lt;/code&gt;, whereas</source>
          <target state="translated">둘 다 &lt;code&gt;foo.scss&lt;/code&gt; 파일을 가져 오는 반면</target>
        </trans-unit>
        <trans-unit id="396678b99ce84e78543e622b44e8387f055bcc55" translate="yes" xml:space="preserve">
          <source>would compile to</source>
          <target state="translated">컴파일</target>
        </trans-unit>
        <trans-unit id="d9e5daf29acae97e1c5593ce09f0773d8f12d909" translate="yes" xml:space="preserve">
          <source>would import both the &lt;code&gt;rounded-corners&lt;/code&gt; and the &lt;code&gt;text-shadow&lt;/code&gt; files.</source>
          <target state="translated">&lt;code&gt;rounded-corners&lt;/code&gt; 와 &lt;code&gt;text-shadow&lt;/code&gt; 파일을 모두 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="f13e27693c85aed522df8c3fcb0bb0110ca54e14" translate="yes" xml:space="preserve">
          <source>zip</source>
          <target state="translated">zip</target>
        </trans-unit>
        <trans-unit id="b26106fb91bcc3b7a2ad66a09ac9370066fe064d" translate="yes" xml:space="preserve">
          <source>zip($lists...)</source>
          <target state="translated">zip($lists...)</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
