<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="markdown">
    <body>
      <group id="markdown">
        <trans-unit id="c0d5b90cc83dc08acb244d43500b12b7f63b99dc" translate="yes" xml:space="preserve">
          <source>&amp;copy; 2004 John Gruber</source>
          <target state="translated">&amp;copy; 2004 John Gruber</target>
        </trans-unit>
        <trans-unit id="6538d536cc11dbeb2500ecc0967a29d51a9eab42" translate="yes" xml:space="preserve">
          <source>(This sort of entity-encoding trick will indeed fool many, if not most, address-harvesting bots, but it definitely won&amp;rsquo;t fool all of them. It&amp;rsquo;s better than nothing, but an address published in this way will probably eventually start receiving spam.)</source>
          <target state="translated">(This sort of entity-encoding trick will indeed fool many, if not most, address-harvesting bots, but it definitely won&amp;rsquo;t fool all of them. It&amp;rsquo;s better than nothing, but an address published in this way will probably eventually start receiving spam.)</target>
        </trans-unit>
        <trans-unit id="1668500f818740d5cc41f28746baca569bed3527" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; There is a known bug in Markdown.pl 1.0.1 which prevents single quotes from being used to delimit link titles.</source>
          <target state="translated">&lt;strong&gt;참고 :&lt;/strong&gt; Markdown.pl 1.0.1에는 알려진 작은 버그가있어 링크 제목을 구분하는 데 작은 따옴표가 사용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="7bba9b42af79fce907856693563f94cd3e187925" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; This document is itself written using Markdown; you can &lt;a href=&quot;http://daringfireball.net/projects/markdown/syntax.text&quot;&gt;see the source for it by adding &amp;lsquo;.text&amp;rsquo; to the URL&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;참고 :&lt;/strong&gt; 이 문서는 Markdown을 사용하여 작성되었습니다. &lt;a href=&quot;http://daringfireball.net/projects/markdown/syntax.text&quot;&gt;URL에 '.text'를 추가하여 소스를 볼&lt;/a&gt; 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="dab2d878de2b749cbba5c452c1e746dd665ff86d" translate="yes" xml:space="preserve">
          <source>A code block continues until it reaches a line that is not indented (or the end of the article).</source>
          <target state="translated">코드 블록은 들여 쓰기되지 않은 줄 (또는 기사의 끝)에 도달 할 때까지 계속됩니다.</target>
        </trans-unit>
        <trans-unit id="a8a2f9a975783a99dcd74f5d247d344d135a813d" translate="yes" xml:space="preserve">
          <source>A paragraph is simply one or more consecutive lines of text, separated by one or more blank lines. (A blank line is any line that looks like a blank line &amp;mdash; a line containing nothing but spaces or tabs is considered blank.) Normal paragraphs should not be indented with spaces or tabs.</source>
          <target state="translated">단락은 하나 이상의 빈 줄로 구분 된 하나 이상의 연속 된 텍스트 줄입니다. 빈 줄은 빈 줄처럼 보이는 줄입니다. 공백이나 탭만 포함 된 줄은 공백으로 간주됩니다. 일반적인 단락은 공백이나 탭으로 들여 쓰기해서는 안됩니다.</target>
        </trans-unit>
        <trans-unit id="b83edd0dd60631a3004907a34b5d734adaf7c5a4" translate="yes" xml:space="preserve">
          <source>Admittedly, it&amp;rsquo;s fairly difficult to devise a &amp;ldquo;natural&amp;rdquo; syntax for placing images into a plain text document format.</source>
          <target state="translated">물론 이미지를 일반 텍스트 문서 형식으로 배치하기위한 &quot;자연스러운&quot;구문을 고안하는 것은 상당히 어렵습니다.</target>
        </trans-unit>
        <trans-unit id="460fca52cfe85bf46815e348701129e5059e9673" translate="yes" xml:space="preserve">
          <source>Ampersands in particular are bedeviling for web writers. If you want to write about &amp;lsquo;AT&amp;amp;T&amp;rsquo;, you need to write &amp;lsquo;&lt;code&gt;AT&amp;amp;amp;T&lt;/code&gt;&amp;rsquo;. You even need to escape ampersands within URLs. Thus, if you want to link to:</source>
          <target state="translated">특히 앰퍼샌드는 웹 작성자에게 악의적입니다. 'AT &amp;amp; T'에 대해 쓰려면 ' &lt;code&gt;AT&amp;amp;amp;T&lt;/code&gt; ' 를 작성해야합니다 . URL 내에서 앰퍼샌드를 이스케이프해야합니다. 따라서 다음에 링크하려는 경우 :</target>
        </trans-unit>
        <trans-unit id="bcaf13e65aa0d07002352e53e4e69175af63e015" translate="yes" xml:space="preserve">
          <source>An exclamation mark: &lt;code&gt;!&lt;/code&gt;;</source>
          <target state="translated">느낌표 : &lt;code&gt;!&lt;/code&gt; ;</target>
        </trans-unit>
        <trans-unit id="41b777d8562201938e9c8b6f1a3ca39f151d5d58" translate="yes" xml:space="preserve">
          <source>And then define the link:</source>
          <target state="translated">그런 다음 링크를 정의하십시오.</target>
        </trans-unit>
        <trans-unit id="910103c3c1a61e6bf4be2687b7d279456a3e65d9" translate="yes" xml:space="preserve">
          <source>Any decent text editor should make email-style quoting easy. For example, with BBEdit, you can make a selection and choose Increase Quote Level from the Text menu.</source>
          <target state="translated">괜찮은 텍스트 편집기를 사용하면 이메일 스타일을 쉽게 인용 할 수 있습니다. 예를 들어 BBEdit을 사용하면 텍스트 메뉴에서 견적 수준을 선택할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="907a126cd626c00db7850c74135aea6cdc048e4e" translate="yes" xml:space="preserve">
          <source>Any number of underlining &lt;code&gt;=&lt;/code&gt;&amp;rsquo;s or &lt;code&gt;-&lt;/code&gt;&amp;rsquo;s will work.</source>
          <target state="translated">밑줄 &lt;code&gt;=&lt;/code&gt; s 또는 &lt;code&gt;-&lt;/code&gt; 이면 얼마든지 작동합니다.</target>
        </trans-unit>
        <trans-unit id="582e1316036c44e3c34ae36794a7ac45d71dd890" translate="yes" xml:space="preserve">
          <source>As of this writing, Markdown has no syntax for specifying the dimensions of an image; if this is important to you, you can simply use regular HTML &lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt; tags.</source>
          <target state="translated">이 글을 쓰는 시점에서 Markdown에는 이미지의 크기를 지정하는 구문이 없습니다. 이것이 중요하다면, 일반 HTML &lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt; 태그를 사용하면됩니다.</target>
        </trans-unit>
        <trans-unit id="f99a3adde446a05f41d11f20311358cf298ee1c5" translate="yes" xml:space="preserve">
          <source>Atx-style headers use 1-6 hash characters at the start of the line, corresponding to header levels 1-6. For example:</source>
          <target state="translated">Atx 스타일 헤더는 줄의 시작 부분에 1-6 개의 해시 문자를 사용하며 헤더 레벨 1-6에 해당합니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="db7647dc14a933dc8c125c371bee6a271e91de83" translate="yes" xml:space="preserve">
          <source>Automatic Escaping for Special Characters</source>
          <target state="translated">특수 문자 자동 이스케이프</target>
        </trans-unit>
        <trans-unit id="3a608c3b98ddf00f7d2bdc0085e7a8a58db112ec" translate="yes" xml:space="preserve">
          <source>Automatic Links</source>
          <target state="translated">자동 링크</target>
        </trans-unit>
        <trans-unit id="00711dee7200b1a0216f60c0fb2a32c293192334" translate="yes" xml:space="preserve">
          <source>Automatic links for email addresses work similarly, except that Markdown will also perform a bit of randomized decimal and hex entity-encoding to help obscure your address from address-harvesting spambots. For example, Markdown will turn this:</source>
          <target state="translated">이메일 주소에 대한 자동 링크는 Markdown이 임의의 소수 자릿수 및 16 진수 엔터티 인코딩을 수행하여 주소를 수집하는 스팸봇으로부터 주소를 가리는 것을 제외하고는 유사하게 작동합니다. 예를 들어 Markdown은 다음과 같이 설정합니다.</target>
        </trans-unit>
        <trans-unit id="7eddf2e692bbe2944055253e903e03f92dc85c03" translate="yes" xml:space="preserve">
          <source>Backslash Escapes</source>
          <target state="translated">백 슬래시 이스케이프</target>
        </trans-unit>
        <trans-unit id="5f8e5b4f9c274df0abdd9e9685df46b7de1986f5" translate="yes" xml:space="preserve">
          <source>Because link names may contain spaces, this shortcut even works for multiple words in the link text:</source>
          <target state="translated">링크 이름에 공백이 포함될 수 있으므로이 바로 가기는 링크 텍스트의 여러 단어에 대해서도 작동합니다.</target>
        </trans-unit>
        <trans-unit id="8ac6960d99f504b227c089027d841f4e9c385375" translate="yes" xml:space="preserve">
          <source>Block Elements</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1831c9c6e6c7258f58fb4df7b34ef7042b997c4b" translate="yes" xml:space="preserve">
          <source>Blockquotes</source>
          <target state="translated">Blockquotes</target>
        </trans-unit>
        <trans-unit id="c4f09e32e1ee918297614eec376d27b756717aea" translate="yes" xml:space="preserve">
          <source>Blockquotes can be nested (i.e. a blockquote-in-a-blockquote) by adding additional levels of &lt;code&gt;&amp;gt;&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;&amp;gt;&lt;/code&gt; 의 추가 레벨을 추가하여 블록 인용을 중첩 할 수 있습니다 (예 : 블록 인용 인용) .</target>
        </trans-unit>
        <trans-unit id="fe05706f5db76d1384e16051c3f2dfb6047c2653" translate="yes" xml:space="preserve">
          <source>Blockquotes can contain other Markdown elements, including headers, lists, and code blocks:</source>
          <target state="translated">인용구에는 헤더, 목록 및 코드 블록을 포함한 다른 마크 다운 요소가 포함될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3078387e628a5a46fcd71ea9dabe1e269c044232" translate="yes" xml:space="preserve">
          <source>Both of the above examples will produce the following HTML output:</source>
          <target state="translated">위 예제 모두 다음과 같은 HTML 출력을 생성합니다.</target>
        </trans-unit>
        <trans-unit id="32dc439098e3b562ea8db4788aee9f85217464de" translate="yes" xml:space="preserve">
          <source>But if you surround an &lt;code&gt;*&lt;/code&gt; or &lt;code&gt;_&lt;/code&gt; with spaces, it&amp;rsquo;ll be treated as a literal asterisk or underscore.</source>
          <target state="translated">그러나 &lt;code&gt;*&lt;/code&gt; 또는 &lt;code&gt;_&lt;/code&gt; 를 공백으로 묶으면 문자 그대로 별표 또는 밑줄로 처리됩니다.</target>
        </trans-unit>
        <trans-unit id="28e27698660cdd2870cc2a6e4e8d078772b21912" translate="yes" xml:space="preserve">
          <source>But if you want to be lazy, you don&amp;rsquo;t have to:</source>
          <target state="translated">그러나 게으르고 싶다면 다음과 같이 할 필요는 없습니다.</target>
        </trans-unit>
        <trans-unit id="77916c1fd878688710112f6d8e4819cc4f1c7e81" translate="yes" xml:space="preserve">
          <source>But this:</source>
          <target state="translated">하지만 이것은:</target>
        </trans-unit>
        <trans-unit id="adac69379a626c2436948a4ef1792c7d719ef929" translate="yes" xml:space="preserve">
          <source>Code</source>
          <target state="translated">Code</target>
        </trans-unit>
        <trans-unit id="9d591ca7c10ad619dc6206d37ac2017aefefbb31" translate="yes" xml:space="preserve">
          <source>Code Blocks</source>
          <target state="translated">코드 블록</target>
        </trans-unit>
        <trans-unit id="0bbeff6580b571e553481c3cd433d3f2a397b451" translate="yes" xml:space="preserve">
          <source>Emphasis</source>
          <target state="translated">Emphasis</target>
        </trans-unit>
        <trans-unit id="a115d2f6c7be0cb214552b4e52b1b9985dd00f9d" translate="yes" xml:space="preserve">
          <source>Emphasis can be used in the middle of a word:</source>
          <target state="translated">단어 중간에 강조를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ba59131a6a69a3624bc3f20ad3f38a2df0e64f95" translate="yes" xml:space="preserve">
          <source>For any markup that is not covered by Markdown&amp;rsquo;s syntax, you simply use HTML itself. There&amp;rsquo;s no need to preface it or delimit it to indicate that you&amp;rsquo;re switching from Markdown to HTML; you just use the tags.</source>
          <target state="translated">Markdown의 구문에서 다루지 않는 마크 업의 경우 HTML 자체 만 사용하면됩니다. Markdown에서 HTML로 전환하고 있음을 나타 내기 위해 서문을 시작하거나 구분할 필요가 없습니다. 태그 만 사용하면됩니다.</target>
        </trans-unit>
        <trans-unit id="a277c9aa42ac9722f9552716b8a68b0534863d73" translate="yes" xml:space="preserve">
          <source>For comparison, here is the same paragraph written using Markdown&amp;rsquo;s inline link style:</source>
          <target state="translated">비교를 위해 다음은 Markdown의 인라인 링크 스타일을 사용하여 작성된 동일한 단락입니다.</target>
        </trans-unit>
        <trans-unit id="2612d924dc512976df7c57175e3cc7544c14301a" translate="yes" xml:space="preserve">
          <source>For example, to add an HTML table to a Markdown article:</source>
          <target state="translated">예를 들어 마크 다운 기사에 HTML 테이블을 추가하려면</target>
        </trans-unit>
        <trans-unit id="520de7443d00d6ff4dc3ababbbf6cfbe0b74f4ec" translate="yes" xml:space="preserve">
          <source>Headers</source>
          <target state="translated">Headers</target>
        </trans-unit>
        <trans-unit id="eb45b26189b0aaa6cdcfe9282988851e44809035" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s an example of reference links in action:</source>
          <target state="translated">작동하는 참조 링크의 예는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="33488d4b3cbb5ba16b0673469e60db7094fb670e" translate="yes" xml:space="preserve">
          <source>Horizontal Rules</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="210d42d55cc816e45443d039271690ba4a7db679" translate="yes" xml:space="preserve">
          <source>However, inside Markdown code spans and blocks, angle brackets and ampersands are &lt;em&gt;always&lt;/em&gt; encoded automatically. This makes it easy to use Markdown to write about HTML code. (As opposed to raw HTML, which is a terrible format for writing about HTML syntax, because every single &lt;code&gt;&amp;lt;&lt;/code&gt; and &lt;code&gt;&amp;amp;&lt;/code&gt; in your example code needs to be escaped.)</source>
          <target state="translated">그러나 Markdown 코드 범위 및 블록 내에서 꺾쇠 괄호 및 앰퍼샌드는 &lt;em&gt;항상&lt;/em&gt; 자동으로 인코딩됩니다. 이렇게하면 Markdown을 사용하여 HTML 코드에 대해 쉽게 작성할 수 있습니다. ( 예제 코드에서 모든 단일 &lt;code&gt;&amp;lt;&lt;/code&gt; 및 &lt;code&gt;&amp;amp;&lt;/code&gt; 를 이스케이프해야하기 때문에 HTML 구문에 대한 끔찍한 형식 인 원시 HTML과 반대 입니다.)</target>
        </trans-unit>
        <trans-unit id="d1139a240c747a110079a4ee5414a8841a1ebf0e" translate="yes" xml:space="preserve">
          <source>If list items are separated by blank lines, Markdown will wrap the items in &lt;code&gt;&amp;lt;p&amp;gt;&lt;/code&gt; tags in the HTML output. For example, this input:</source>
          <target state="translated">목록 항목을 빈 줄로 구분하면 Markdown은 HTML 출력 에서 &lt;code&gt;&amp;lt;p&amp;gt;&lt;/code&gt; 태그로 항목을 줄 바꿈합니다 . 예를 들어이 입력은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="c44e2839a274487a94a93ee344ff68dc573e5bdf" translate="yes" xml:space="preserve">
          <source>If you do use lazy list numbering, however, you should still start the list with the number 1. At some point in the future, Markdown may support starting ordered lists at an arbitrary number.</source>
          <target state="translated">그러나 게으른 목록 번호 매기기를 사용하는 경우 여전히 번호 1로 목록을 시작해야합니다. 나중에 언젠가 Markdown은 임의의 숫자로 정렬 된 목록을 시작할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e520bcbe59f22175710bd3119bb35d86c91fac28" translate="yes" xml:space="preserve">
          <source>If you instead wrote the list in Markdown like this:</source>
          <target state="translated">대신 Markdown에 목록을 다음과 같이 쓴 경우 :</target>
        </trans-unit>
        <trans-unit id="b75fd32916c339f46bfc2c425730bf6a28150f02" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re referring to a local resource on the same server, you can use relative paths:</source>
          <target state="translated">동일한 서버에서 로컬 리소스를 참조하는 경우 상대 경로를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="09e871c98fef3b901a775def173e4126aaf73b42" translate="yes" xml:space="preserve">
          <source>Images</source>
          <target state="translated">Images</target>
        </trans-unit>
        <trans-unit id="080f0bf22f0a2322f9937a9fc359284e25158627" translate="yes" xml:space="preserve">
          <source>In HTML, there are two characters that demand special treatment: &lt;code&gt;&amp;lt;&lt;/code&gt; and &lt;code&gt;&amp;amp;&lt;/code&gt;. Left angle brackets are used to start tags; ampersands are used to denote HTML entities. If you want to use them as literal characters, you must escape them as entities, e.g. &lt;code&gt;&amp;amp;lt;&lt;/code&gt;, and &lt;code&gt;&amp;amp;amp;&lt;/code&gt;.</source>
          <target state="translated">HTML에는 특수 처리가 필요한 두 문자 ( &lt;code&gt;&amp;lt;&lt;/code&gt; 및 &lt;code&gt;&amp;amp;&lt;/code&gt; )가 있습니다. 왼쪽 꺾쇠 괄호는 태그를 시작하는 데 사용됩니다. 앰퍼샌드는 HTML 엔터티를 나타내는 데 사용됩니다. 리터럴 문자로 사용하려면 엔티티로 이스케이프해야합니다 (예 : &lt;code&gt;&amp;amp;lt;&lt;/code&gt; 및 &lt;code&gt;&amp;amp;amp;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="11ccd80c421a7aab03c958e188ba1498f5e1a126" translate="yes" xml:space="preserve">
          <source>In both styles, the link text is delimited by [square brackets].</source>
          <target state="translated">두 스타일 모두에서 링크 텍스트는 [대괄호]로 구분됩니다.</target>
        </trans-unit>
        <trans-unit id="fdc48c4ace77dc596756f4396d174ebbb8ccea0d" translate="yes" xml:space="preserve">
          <source>In other words, a &lt;em&gt;number-period-space&lt;/em&gt; sequence at the beginning of a line. To avoid this, you can backslash-escape the period:</source>
          <target state="translated">다시 말해, 줄의 시작 부분에있는 &lt;em&gt;숫자-공간 간격&lt;/em&gt; 시퀀스입니다. 이를 피하기 위해 기간을 백 슬래시 이스케이프 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0632cbe6a983b23f7fbe099f40c4ed3e9c6009e6" translate="yes" xml:space="preserve">
          <source>Inline HTML</source>
          <target state="translated">인라인 HTML</target>
        </trans-unit>
        <trans-unit id="b49aebceb055ce0c9b6174493255ad5e7b2e8255" translate="yes" xml:space="preserve">
          <source>Inline image syntax looks like this:</source>
          <target state="translated">인라인 이미지 구문은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="5fa2563526b0013d75316ab13145366e130ac560" translate="yes" xml:space="preserve">
          <source>It looks nice if you indent every line of the subsequent paragraphs, but here again, Markdown will allow you to be lazy:</source>
          <target state="translated">다음 단락의 모든 줄을 들여 쓰면 좋을 것 같지만 여기서 다시 Markdown을 사용하면 게으를 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="11832fc4172b5493052a8c250b5b1fd48bc4d6ae" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s important to note that the actual numbers you use to mark the list have no effect on the HTML output Markdown produces. The HTML Markdown produces from the above list is:</source>
          <target state="translated">목록을 표시하는 데 사용하는 실제 숫자는 Markdown이 생성하는 HTML 출력에 영향을주지 않습니다. 위 목록에서 생성 된 HTML 마크 다운은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="92b81f374f6e75541149851605694877df0ac180" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s worth noting that it&amp;rsquo;s possible to trigger an ordered list by accident, by writing something like this:</source>
          <target state="translated">다음과 같이 작성하면 우연히 정렬 된 목록을 트리거 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="cc5b2a062f05dd148b4ef24c76639416ebcc59f3" translate="yes" xml:space="preserve">
          <source>Licensed under the BSD License.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f4751628c92cfc0bdffa4d18ab109de8e7fd877" translate="yes" xml:space="preserve">
          <source>Link definition names may consist of letters, numbers, spaces, and punctuation &amp;mdash; but they are &lt;em&gt;not&lt;/em&gt; case sensitive. E.g. these two links:</source>
          <target state="translated">링크 정의 이름은 문자, 숫자, 공백 및 문장 부호로 구성 될 수 있지만 대소 문자를 구분 &lt;em&gt;하지 않습니다&lt;/em&gt; . 예를 들어 다음 두 링크 :</target>
        </trans-unit>
        <trans-unit id="72e494f0ad7b543fd20ebbb060434bd35901eee2" translate="yes" xml:space="preserve">
          <source>Link definitions are only used for creating links during Markdown processing, and are stripped from your document in the HTML output.</source>
          <target state="translated">링크 정의는 마크 다운 처리 중에 링크를 만드는 데만 사용되며 HTML 출력의 문서에서 제거됩니다.</target>
        </trans-unit>
        <trans-unit id="65fa0097bbbaa77ae11d487cd7e4142ad21d9089" translate="yes" xml:space="preserve">
          <source>Link definitions can be placed anywhere in your Markdown document. I tend to put them immediately after each paragraph in which they&amp;rsquo;re used, but if you want, you can put them all at the end of your document, sort of like footnotes.</source>
          <target state="translated">링크 정의는 마크 다운 문서의 어느 곳에 나 배치 할 수 있습니다. 나는 그것들이 사용되는 각 단락 바로 뒤에 그것들을 넣는 경향이 있지만, 원한다면 문서의 끝에 각주와 같이 그것들을 모두 넣을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="014bcd654c60d5250fad2123b073b9c0ac3340f6" translate="yes" xml:space="preserve">
          <source>Links</source>
          <target state="translated">Links</target>
        </trans-unit>
        <trans-unit id="ec2c6a243773c447d3de60b9fe63005515144562" translate="yes" xml:space="preserve">
          <source>List items may consist of multiple paragraphs. Each subsequent paragraph in a list item must be indented by either 4 spaces or one tab:</source>
          <target state="translated">목록 항목은 여러 단락으로 구성 될 수 있습니다. 목록 항목의 각 후속 단락은 4 개의 공백 또는 하나의 탭으로 들여 쓰기해야합니다.</target>
        </trans-unit>
        <trans-unit id="8d67895fd9d80a8276bb790706790a15bcaf3de8" translate="yes" xml:space="preserve">
          <source>List markers typically start at the left margin, but may be indented by up to three spaces. List markers must be followed by one or more spaces or a tab.</source>
          <target state="translated">목록 마커는 일반적으로 왼쪽 여백에서 시작하지만 최대 3 개의 공백으로 들여 쓰기 될 수 있습니다. 목록 마커 뒤에는 하나 이상의 공백 또는 탭이 와야합니다.</target>
        </trans-unit>
        <trans-unit id="57c9502a7d7d48fd4a86b45fefb2b163491c3ae1" translate="yes" xml:space="preserve">
          <source>Lists</source>
          <target state="translated">Lists</target>
        </trans-unit>
        <trans-unit id="23e67fceae0d77dd571dd25695fc0499faf1bb77" translate="yes" xml:space="preserve">
          <source>Markdown</source>
          <target state="translated">Markdown</target>
        </trans-unit>
        <trans-unit id="e12b8fd54e9a2919e402beac83049b8e23f93519" translate="yes" xml:space="preserve">
          <source>Markdown allows you to be lazy and only put the &lt;code&gt;&amp;gt;&lt;/code&gt; before the first line of a hard-wrapped paragraph:</source>
          <target state="translated">마크 다운을 사용하면 게으를 수 있고 줄 바꿈 된 단락의 첫 줄 앞에 &lt;code&gt;&amp;gt;&lt;/code&gt; 만 넣을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="1734a1d3c691a33de88e6ed7a43711785fa0a248" translate="yes" xml:space="preserve">
          <source>Markdown allows you to use backslash escapes to generate literal characters which would otherwise have special meaning in Markdown&amp;rsquo;s formatting syntax. For example, if you wanted to surround a word with literal asterisks (instead of an HTML &lt;code&gt;&amp;lt;em&amp;gt;&lt;/code&gt; tag), you can use backslashes before the asterisks, like this:</source>
          <target state="translated">마크 다운을 사용하면 백 슬래시 이스케이프를 사용하여 리터럴 문자를 생성 할 수 있습니다. 그렇지 않으면 마크 다운의 서식 구문에 특별한 의미가 있습니다. 예를 들어 HTML &lt;code&gt;&amp;lt;em&amp;gt;&lt;/code&gt; 태그 대신 리터럴 별표로 단어를 둘러싸 려면 다음과 같이 별표 앞에 백 슬래시를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3f6dc1d09583546690eb994697c48c03d0046b5e" translate="yes" xml:space="preserve">
          <source>Markdown allows you to use these characters naturally, taking care of all the necessary escaping for you. If you use an ampersand as part of an HTML entity, it remains unchanged; otherwise it will be translated into &lt;code&gt;&amp;amp;amp;&lt;/code&gt;.</source>
          <target state="translated">Markdown을 사용하면 필요한 모든 탈출을 처리하면서 이러한 문자를 자연스럽게 사용할 수 있습니다. HTML 엔티티의 일부로 앰퍼샌드를 사용하는 경우 변경되지 않습니다. 그렇지 않으면 &lt;code&gt;&amp;amp;amp;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d9f84c007e4ce5c357d0f84c3957252d0cc74c66" translate="yes" xml:space="preserve">
          <source>Markdown is intended to be as easy-to-read and easy-to-write as is feasible.</source>
          <target state="translated">마크 다운은 가능한 한 읽기 쉽고 쓰기가 용이하도록 고안되었습니다.</target>
        </trans-unit>
        <trans-unit id="9cf9305d131ca65a78890b71a9ea304ca5116ed5" translate="yes" xml:space="preserve">
          <source>Markdown is not a replacement for HTML, or even close to it. Its syntax is very small, corresponding only to a very small subset of HTML tags. The idea is &lt;em&gt;not&lt;/em&gt; to create a syntax that makes it easier to insert HTML tags. In my opinion, HTML tags are already easy to insert. The idea for Markdown is to make it easy to read, write, and edit prose. HTML is a &lt;em&gt;publishing&lt;/em&gt; format; Markdown is a &lt;em&gt;writing&lt;/em&gt; format. Thus, Markdown&amp;rsquo;s formatting syntax only addresses issues that can be conveyed in plain text.</source>
          <target state="translated">마크 다운은 HTML을 대체하지 않거나 HTML에 가깝습니다. 구문은 매우 작으며 HTML 태그의 매우 작은 하위 집합에만 해당합니다. 생각은 &lt;em&gt;하지&lt;/em&gt; 쉽게 HTML 태그를 삽입 할 수 있습니다 구문을 만들 수 있습니다. 제 생각에는 HTML 태그는 이미 삽입하기 쉽습니다. Markdown의 아이디어는 산문을 쉽게 읽고 쓰고 편집 할 수 있도록하는 것입니다. HTML은 &lt;em&gt;출판&lt;/em&gt; 형식입니다. 마크 다운은 &lt;em&gt;쓰기&lt;/em&gt; 형식입니다. 따라서 Markdown의 서식 구문은 일반 텍스트로 전달할 수있는 문제 만 해결합니다.</target>
        </trans-unit>
        <trans-unit id="3caa8d1bf863b824dc12742b5873a5e893005386" translate="yes" xml:space="preserve">
          <source>Markdown provides backslash escapes for the following characters:</source>
          <target state="translated">마크 다운은 다음 문자에 대한 백 슬래시 이스케이프를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="5a1c0e0cc29a7c6673c43d00c125c56345094940" translate="yes" xml:space="preserve">
          <source>Markdown supports a shortcut style for creating &amp;ldquo;automatic&amp;rdquo; links for URLs and email addresses: simply surround the URL or email address with angle brackets. What this means is that if you want to show the actual text of a URL or email address, and also have it be a clickable link, you can do this:</source>
          <target state="translated">마크 다운은 URL 및 전자 메일 주소에 대한 &quot;자동&quot;링크를 만들기위한 바로 가기 스타일을 지원합니다. URL 또는 전자 메일 주소를 꺾쇠 괄호로 묶기 만하면됩니다. 이것이 의미하는 바는 URL 또는 이메일 주소의 실제 텍스트를 표시하고 클릭 가능한 링크가되도록하려면 다음과 같이하십시오.</target>
        </trans-unit>
        <trans-unit id="2d72a50b494d4c854c7f1a823289218083dcdfe5" translate="yes" xml:space="preserve">
          <source>Markdown supports ordered (numbered) and unordered (bulleted) lists.</source>
          <target state="translated">마크 다운은 순서 (번호 매기기) 및 순서가없는 (글 머리 기호) 목록을 지원합니다.</target>
        </trans-unit>
        <trans-unit id="f11174e516b39f10632812ec05b8564952938601" translate="yes" xml:space="preserve">
          <source>Markdown supports two style of links: &lt;em&gt;inline&lt;/em&gt; and &lt;em&gt;reference&lt;/em&gt;.</source>
          <target state="translated">마크 다운은 &lt;em&gt;인라인&lt;/em&gt; 및 &lt;em&gt;참조&lt;/em&gt; 의 두 가지 스타일 링크를 지원합니다 .</target>
        </trans-unit>
        <trans-unit id="2183b015c0f3e61939e0166f08c13e399f626c21" translate="yes" xml:space="preserve">
          <source>Markdown supports two styles of headers, &lt;a href=&quot;http://docutils.sourceforge.net/mirror/setext.html&quot;&gt;Setext&lt;/a&gt; and &lt;a href=&quot;http://www.aaronsw.com/2002/atx/&quot;&gt;atx&lt;/a&gt;.</source>
          <target state="translated">마크 다운은 &lt;a href=&quot;http://docutils.sourceforge.net/mirror/setext.html&quot;&gt;Setext&lt;/a&gt; 및 &lt;a href=&quot;http://www.aaronsw.com/2002/atx/&quot;&gt;atx&lt;/a&gt; 의 두 가지 스타일의 헤더를 지원합니다 .</target>
        </trans-unit>
        <trans-unit id="739cfd72329e888251033923cdcbc244ee6c0ab2" translate="yes" xml:space="preserve">
          <source>Markdown treats asterisks (&lt;code&gt;*&lt;/code&gt;) and underscores (&lt;code&gt;_&lt;/code&gt;) as indicators of emphasis. Text wrapped with one &lt;code&gt;*&lt;/code&gt; or &lt;code&gt;_&lt;/code&gt; will be wrapped with an HTML &lt;code&gt;&amp;lt;em&amp;gt;&lt;/code&gt; tag; double &lt;code&gt;*&lt;/code&gt;&amp;rsquo;s or &lt;code&gt;_&lt;/code&gt;&amp;rsquo;s will be wrapped with an HTML &lt;code&gt;&amp;lt;strong&amp;gt;&lt;/code&gt; tag. E.g., this input:</source>
          <target state="translated">마크 다운은 별표 ( &lt;code&gt;*&lt;/code&gt; )와 밑줄 ( &lt;code&gt;_&lt;/code&gt; )을 강조 표시로 취급합니다 . &lt;code&gt;*&lt;/code&gt; 또는 &lt;code&gt;_&lt;/code&gt; 로 감싸 인 텍스트 는 HTML &lt;code&gt;&amp;lt;em&amp;gt;&lt;/code&gt; 태그 로 감싸집니다 . double &lt;code&gt;*&lt;/code&gt; 또는 &lt;code&gt;_&lt;/code&gt; 은 (는) HTML &lt;code&gt;&amp;lt;strong&amp;gt;&lt;/code&gt; 태그 로 줄 바꿈됩니다 . 예를 들어,이 입력 :</target>
        </trans-unit>
        <trans-unit id="109cafaee6f5ae526456328e6a9cc0bd95104652" translate="yes" xml:space="preserve">
          <source>Markdown uses an image syntax that is intended to resemble the syntax for links, allowing for two styles: &lt;em&gt;inline&lt;/em&gt; and &lt;em&gt;reference&lt;/em&gt;.</source>
          <target state="translated">Markdown은 링크의 구문과 유사한 이미지 구문을 사용하여 &lt;em&gt;인라인&lt;/em&gt; 및 &lt;em&gt;참조의&lt;/em&gt; 두 가지 스타일을 허용합니다 .</target>
        </trans-unit>
        <trans-unit id="47c88c4082fe1a7bfe78ca8dc4b42bb8cb482d9d" translate="yes" xml:space="preserve">
          <source>Markdown uses email-style &lt;code&gt;&amp;gt;&lt;/code&gt; characters for blockquoting. If you&amp;rsquo;re familiar with quoting passages of text in an email message, then you know how to create a blockquote in Markdown. It looks best if you hard wrap the text and put a &lt;code&gt;&amp;gt;&lt;/code&gt; before every line:</source>
          <target state="translated">마크 다운은 이메일 인용 &lt;code&gt;&amp;gt;&lt;/code&gt; 문자를 사용하여 블록을 인용합니다. 전자 메일 메시지에 텍스트 구절을 인용하는 데 익숙하다면 Markdown에서 인용 부호를 만드는 방법을 알고 있습니다. 텍스트를 세밀하게 감싸고 모든 줄 앞에 &lt;code&gt;&amp;gt;&lt;/code&gt; 를 넣으면 가장 좋습니다 .</target>
        </trans-unit>
        <trans-unit id="73ea7a6e5368fe855c7d7d5d589b809544fb68e0" translate="yes" xml:space="preserve">
          <source>Markdown will generate:</source>
          <target state="translated">마크 다운은 다음을 생성합니다.</target>
        </trans-unit>
        <trans-unit id="d3693e344e48b5e3510f30880f28e0579e9dc898" translate="yes" xml:space="preserve">
          <source>Markdown will translate it to:</source>
          <target state="translated">마크 다운은 다음과 같이 번역합니다.</target>
        </trans-unit>
        <trans-unit id="956aaeb0a1e940a4eb0012b00e3cbf46c9ffc27d" translate="yes" xml:space="preserve">
          <source>Markdown will turn this into:</source>
          <target state="translated">마크 다운은 이것을 다음으로 바꿉니다 :</target>
        </trans-unit>
        <trans-unit id="3f51ce3e5b69ca05c2e4ea0ac0dee16417759485" translate="yes" xml:space="preserve">
          <source>Markdown&amp;rsquo;s syntax is intended for one purpose: to be used as a format for &lt;em&gt;writing&lt;/em&gt; for the web.</source>
          <target state="translated">Markdown의 구문은 웹 &lt;em&gt;작성을&lt;/em&gt; 위한 형식으로 사용하기위한 것입니다 .</target>
        </trans-unit>
        <trans-unit id="5f2cbd107037ed23248e5058a7a64cd6bae05468" translate="yes" xml:space="preserve">
          <source>Miscellaneous</source>
          <target state="translated">Miscellaneous</target>
        </trans-unit>
        <trans-unit id="540ed7819e3db742046278c5887b21ef9b6263a3" translate="yes" xml:space="preserve">
          <source>Note that Markdown formatting syntax is not processed within block-level HTML tags. E.g., you can&amp;rsquo;t use Markdown-style &lt;code&gt;*emphasis*&lt;/code&gt; inside an HTML block.</source>
          <target state="translated">마크 다운 형식화 구문은 블록 레벨 HTML 태그 내에서 처리되지 않습니다. 예를 들어 HTML 블록 내에서 마크 다운 스타일 &lt;code&gt;*emphasis*&lt;/code&gt; 사용할 수 없습니다 .</target>
        </trans-unit>
        <trans-unit id="4baee9739eb4b2099b8367549c2c99420b0f5465" translate="yes" xml:space="preserve">
          <source>One level of indentation &amp;mdash; 4 spaces or 1 tab &amp;mdash; is removed from each line of the code block. For example, this:</source>
          <target state="translated">코드 블록의 각 줄에서 하나의 들여 쓰기 수준 (공백 4 개 또는 탭 1 개)이 제거됩니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="9c466b4dba415c271d16384485593c218e0be40e" translate="yes" xml:space="preserve">
          <source>Optionally, you may &amp;ldquo;close&amp;rdquo; atx-style headers. This is purely cosmetic &amp;mdash; you can use this if you think it looks better. The closing hashes don&amp;rsquo;t even need to match the number of hashes used to open the header. (The number of opening hashes determines the header level.) :</source>
          <target state="translated">선택적으로 atx 스타일 헤더를 &quot;닫을&quot;수 있습니다. 이것은 순전히 화장품입니다. 더 좋아 보인다면 사용할 수 있습니다. 닫는 해시는 헤더를 여는 데 사용되는 해시 수와도 일치하지 않아도됩니다. (개시 해시의 수는 헤더 레벨을 결정합니다.) :</target>
        </trans-unit>
        <trans-unit id="429f881166ab401a34e0dcfd463bce9725c202a0" translate="yes" xml:space="preserve">
          <source>Ordered lists use numbers followed by periods:</source>
          <target state="translated">정렬 된 목록은 숫자 다음에 마침표를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="0efc2e6be4c23b9a513d7ce0dcff8ed80e8912e7" translate="yes" xml:space="preserve">
          <source>Overview</source>
          <target state="translated">Overview</target>
        </trans-unit>
        <trans-unit id="785069bd6fde247fc331c1a7b64613cad3303de9" translate="yes" xml:space="preserve">
          <source>Paragraphs and Line Breaks</source>
          <target state="translated">단락과 줄 바꿈</target>
        </trans-unit>
        <trans-unit id="496e9438ab65557e3360c256d99d6d71460da8a3" translate="yes" xml:space="preserve">
          <source>Philosophy</source>
          <target state="translated">Philosophy</target>
        </trans-unit>
        <trans-unit id="63bed2e2fd41ce8a350d398bdeaaefaafd0b5b21" translate="yes" xml:space="preserve">
          <source>Pre-formatted code blocks are used for writing about programming or markup source code. Rather than forming normal paragraphs, the lines of a code block are interpreted literally. Markdown wraps a code block in both &lt;code&gt;&amp;lt;pre&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;code&amp;gt;&lt;/code&gt; tags.</source>
          <target state="translated">사전 형식화 된 코드 블록은 프로그래밍 또는 마크 업 소스 코드를 작성하는 데 사용됩니다. 정상적인 단락을 형성하는 대신 코드 블록의 행은 문자 그대로 해석됩니다. 마크 다운은 &lt;code&gt;&amp;lt;pre&amp;gt;&lt;/code&gt; 및 &lt;code&gt;&amp;lt;code&amp;gt;&lt;/code&gt; 태그 모두로 코드 블록을 래핑 합니다.</target>
        </trans-unit>
        <trans-unit id="9dc6a97873ba8f7fa69ccc466981976b38979df8" translate="yes" xml:space="preserve">
          <source>Readability, however, is emphasized above all else. A Markdown-formatted document should be publishable as-is, as plain text, without looking like it&amp;rsquo;s been marked up with tags or formatting instructions. While Markdown&amp;rsquo;s syntax has been influenced by several existing text-to-HTML filters &amp;mdash; including &lt;a href=&quot;http://docutils.sourceforge.net/mirror/setext.html&quot;&gt;Setext&lt;/a&gt;, &lt;a href=&quot;http://www.aaronsw.com/2002/atx/&quot;&gt;atx&lt;/a&gt;, &lt;a href=&quot;http://textism.com/tools/textile/&quot;&gt;Textile&lt;/a&gt;, &lt;a href=&quot;http://docutils.sourceforge.net/rst.html&quot;&gt;reStructuredText&lt;/a&gt;, &lt;a href=&quot;http://www.triptico.com/software/grutatxt.html&quot;&gt;Grutatext&lt;/a&gt;, and &lt;a href=&quot;http://ettext.taint.org/doc/&quot;&gt;EtText&lt;/a&gt; &amp;mdash; the single biggest source of inspiration for Markdown&amp;rsquo;s syntax is the format of plain text email.</source>
          <target state="translated">그러나 가독성은 무엇보다도 강조됩니다. 마크 다운 형식의 문서는 태그 나 서식 지침으로 표시되지 않은 것처럼 일반 텍스트로 그대로 게시 할 수 있어야합니다. 포함 - 마크 다운의 구문은 기존의 여러 텍스트 - 투 - HTML 필터에 의해 영향을 하였지만 &lt;a href=&quot;http://docutils.sourceforge.net/mirror/setext.html&quot;&gt;Setext&lt;/a&gt; , &lt;a href=&quot;http://www.aaronsw.com/2002/atx/&quot;&gt;ATX&lt;/a&gt; , &lt;a href=&quot;http://textism.com/tools/textile/&quot;&gt;섬유&lt;/a&gt; , &lt;a href=&quot;http://docutils.sourceforge.net/rst.html&quot;&gt;reStructuredText&lt;/a&gt; , &lt;a href=&quot;http://www.triptico.com/software/grutatxt.html&quot;&gt;Grutatext&lt;/a&gt; 및 &lt;a href=&quot;http://ettext.taint.org/doc/&quot;&gt;EtText&lt;/a&gt; - 마크 다운의 구문에 대한 영감의 가장 큰 소스 일반 텍스트 이메일의 형식입니다.</target>
        </trans-unit>
        <trans-unit id="4afbe0b0955d5463e4e2d856e179f16399a0e868" translate="yes" xml:space="preserve">
          <source>Reference-style image syntax looks like this:</source>
          <target state="translated">참조 스타일 이미지 구문은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="422b835df5cb239a162359ee6a9a219b7161367d" translate="yes" xml:space="preserve">
          <source>Reference-style links use a second set of square brackets, inside which you place a label of your choosing to identify the link:</source>
          <target state="translated">참조 스타일 링크는 두 번째 대괄호 세트를 사용하며 그 안에 링크를 식별하기 위해 선택한 레이블을 배치합니다.</target>
        </trans-unit>
        <trans-unit id="20fbc7a879c7a7be33ab1f567dbf0049bf537562" translate="yes" xml:space="preserve">
          <source>Regular Markdown syntax is not processed within code blocks. E.g., asterisks are just literal asterisks within a code block. This means it&amp;rsquo;s also easy to use Markdown to write about Markdown&amp;rsquo;s own syntax.</source>
          <target state="translated">일반 마크 다운 구문은 코드 블록 내에서 처리되지 않습니다. 예를 들어, 별표는 코드 블록 내에서 문자 그대로의 별표입니다. 이는 Markdown을 사용하여 Markdown의 고유 구문에 대해 쉽게 작성할 수 있음을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="ee90ced7f7e1f2056d6c10143291e05385bbb61a" translate="yes" xml:space="preserve">
          <source>Setext-style headers are &amp;ldquo;underlined&amp;rdquo; using equal signs (for first-level headers) and dashes (for second-level headers). For example:</source>
          <target state="translated">Setext 스타일 헤더는 등호 (첫 번째 수준 헤더의 경우)와 대시 (두 번째 수준 헤더의 경우)를 사용하여 &quot;밑줄이 그어집니다&quot;. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="fbcbd97e84e3e120d3c4f8a3a9e65a03d95d4aba" translate="yes" xml:space="preserve">
          <source>Similarly, because Markdown supports &lt;a href=&quot;#html&quot;&gt;inline HTML&lt;/a&gt;, if you use angle brackets as delimiters for HTML tags, Markdown will treat them as such. But if you write:</source>
          <target state="translated">마찬가지로 Markdown은 &lt;a href=&quot;#html&quot;&gt;인라인 HTML을&lt;/a&gt; 지원하므로 HTML 태그의 구분 기호로 꺾쇠 괄호를 사용하면 Markdown이이를 인라인 HTML 로 처리합니다. 그러나 당신이 쓰는 경우 :</target>
        </trans-unit>
        <trans-unit id="6cf632536056435e3d3e911d767519b939704724" translate="yes" xml:space="preserve">
          <source>So, if you want to include a copyright symbol in your article, you can write:</source>
          <target state="translated">따라서 기사에 저작권 기호를 포함하려면 다음과 같이 쓸 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="abf5bcbf5e5665c6e156e84cc849c4ef4dfac536" translate="yes" xml:space="preserve">
          <source>Span Elements</source>
          <target state="translated">스팬 요소</target>
        </trans-unit>
        <trans-unit id="e9b860ff75a2e946e63f82bed2f657d3000aea22" translate="yes" xml:space="preserve">
          <source>Span-level HTML tags &amp;mdash; e.g. &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;cite&amp;gt;&lt;/code&gt;, or &lt;code&gt;&amp;lt;del&amp;gt;&lt;/code&gt; &amp;mdash; can be used anywhere in a Markdown paragraph, list item, or header. If you want, you can even use HTML tags instead of Markdown formatting; e.g. if you&amp;rsquo;d prefer to use HTML &lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt; or &lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt; tags instead of Markdown&amp;rsquo;s link or image syntax, go right ahead.</source>
          <target state="translated">&lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt; , &lt;code&gt;&amp;lt;cite&amp;gt;&lt;/code&gt; 또는 &lt;code&gt;&amp;lt;del&amp;gt;&lt;/code&gt; 과 같은 스팬 레벨 HTML 태그 는 마크 다운 단락, 목록 항목 또는 헤더의 어느 곳에서나 사용할 수 있습니다. 원하는 경우 마크 다운 형식 대신 HTML 태그를 사용할 수도 있습니다. 예를 들어 Markdown의 링크 또는 이미지 구문 대신 HTML &lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt; 또는 &lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt; 태그 를 사용하려면 먼저 진행하십시오.</target>
        </trans-unit>
        <trans-unit id="2c0a203fbf1955da31d924696d4cd269a5cb3056" translate="yes" xml:space="preserve">
          <source>Square brackets containing the link identifier (optionally indented from the left margin using up to three spaces);</source>
          <target state="translated">링크 식별자를 포함하는 대괄호 (선택적으로 최대 3 개의 공백을 사용하여 왼쪽 여백에서 들여 쓰기);</target>
        </trans-unit>
        <trans-unit id="11e8a09abfceb997eddb8423e1781ebd95db28e7" translate="yes" xml:space="preserve">
          <source>That is:</source>
          <target state="translated">그건:</target>
        </trans-unit>
        <trans-unit id="a89b046d626104f9b781fb7eb34b2998c9d46ce4" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;implicit link name&lt;/em&gt; shortcut allows you to omit the name of the link, in which case the link text itself is used as the name. Just use an empty set of square brackets &amp;mdash; e.g., to link the word &amp;ldquo;Google&amp;rdquo; to the google.com web site, you could simply write:</source>
          <target state="translated">&lt;em&gt;암시 적 링크 이름의&lt;/em&gt; 바로 가기를 사용하면 링크 텍스트 자체가 이름으로 사용되는 경우 링크의 이름을 생략 할 수 있습니다. 빈 대괄호 세트를 사용하십시오. 예를 들어 'Google'이라는 단어를 google.com 웹 사이트에 연결하려면 다음과 같이 작성하면됩니다.</target>
        </trans-unit>
        <trans-unit id="ddd86d95d7c2a50ec3a5899fbccd01ee555a94c1" translate="yes" xml:space="preserve">
          <source>The backtick delimiters surrounding a code span may include spaces &amp;mdash; one after the opening, one before the closing. This allows you to place literal backtick characters at the beginning or end of a code span:</source>
          <target state="translated">코드 스팬을 둘러싼 백틱 구분 기호는 공백을 포함 할 수 있습니다. 공백은 시작 후, 닫기 전. 이를 통해 코드 범위의 시작 또는 끝에 리터럴 백틱 문자를 배치 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a25c1c64959c5df35f2194e9661c372cf05505da" translate="yes" xml:space="preserve">
          <source>The following three link definitions are equivalent:</source>
          <target state="translated">다음 세 가지 링크 정의는 동일합니다.</target>
        </trans-unit>
        <trans-unit id="ad008fb6ff3f95e20172c473d13e9612def5397d" translate="yes" xml:space="preserve">
          <source>The implication of the &amp;ldquo;one or more consecutive lines of text&amp;rdquo; rule is that Markdown supports &amp;ldquo;hard-wrapped&amp;rdquo; text paragraphs. This differs significantly from most other text-to-HTML formatters (including Movable Type&amp;rsquo;s &amp;ldquo;Convert Line Breaks&amp;rdquo; option) which translate every line break character in a paragraph into a &lt;code&gt;&amp;lt;br /&amp;gt;&lt;/code&gt; tag.</source>
          <target state="translated">&quot;하나 이상의 연속적인 텍스트 줄&quot;규칙의 의미는 마크 다운이 &quot;단순 줄 바꿈 된&quot;텍스트 단락을 지원한다는 것입니다. 이는 단락의 모든 줄 바꿈 문자를 &lt;code&gt;&amp;lt;br /&amp;gt;&lt;/code&gt; 태그 로 변환하는 대부분의 다른 텍스트 -HTML 포맷터 (이동식 유형의 &quot;줄 바꿈 변환&quot;옵션 포함)와는 상당히 다릅니다 .</target>
        </trans-unit>
        <trans-unit id="6125db63a9ede38a629c4c310fa6c3c9ef34c5f6" translate="yes" xml:space="preserve">
          <source>The link URL may, optionally, be surrounded by angle brackets:</source>
          <target state="translated">링크 URL은 선택적으로 꺾쇠 괄호로 묶을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="696b88d54d46942a32cc63cb4ba938dd6c935866" translate="yes" xml:space="preserve">
          <source>The only restrictions are that block-level HTML elements &amp;mdash; e.g. &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;table&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;pre&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;p&amp;gt;&lt;/code&gt;, etc. &amp;mdash; must be separated from surrounding content by blank lines, and the start and end tags of the block should not be indented with tabs or spaces. Markdown is smart enough not to add extra (unwanted) &lt;code&gt;&amp;lt;p&amp;gt;&lt;/code&gt; tags around HTML block-level tags.</source>
          <target state="translated">블록 수준 HTML 요소 (예 : &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; , &lt;code&gt;&amp;lt;table&amp;gt;&lt;/code&gt; , &lt;code&gt;&amp;lt;pre&amp;gt;&lt;/code&gt; , &lt;code&gt;&amp;lt;p&amp;gt;&lt;/code&gt; 등)는 빈 줄과 블록의 시작 및 끝 태그로 주변 콘텐츠와 구분되어야합니다. 탭이나 공백으로 들여 쓰기해서는 안됩니다. 마크 다운은 HTML 블록 레벨 태그 주위 에 여분의 (원치 않는) &lt;code&gt;&amp;lt;p&amp;gt;&lt;/code&gt; 태그 를 추가하지 않을 정도로 똑똑 합니다.</target>
        </trans-unit>
        <trans-unit id="9abdc0d6490a38b1a77abed653610fc87d0fd8ad" translate="yes" xml:space="preserve">
          <source>The point of reference-style links is not that they&amp;rsquo;re easier to write. The point is that with reference-style links, your document source is vastly more readable. Compare the above examples: using reference-style links, the paragraph itself is only 81 characters long; with inline-style links, it&amp;rsquo;s 176 characters; and as raw HTML, it&amp;rsquo;s 234 characters. In the raw HTML, there&amp;rsquo;s more markup than there is text.</source>
          <target state="translated">참조 스타일 링크의 요점은 작성하기 쉽다는 것이 아닙니다. 요점은 참조 스타일 링크를 사용하면 문서 소스를 훨씬 더 읽기 쉽다는 것입니다. 위의 예를 비교해보십시오. 참조 스타일 링크를 사용하면 단락 자체의 길이는 81 자입니다. 인라인 스타일 링크의 경우 176 자입니다. 원시 HTML은 234 자입니다. 원시 HTML에는 텍스트보다 마크 업이 더 많습니다.</target>
        </trans-unit>
        <trans-unit id="d7fdbca9e8e9ea917a83c9e40644c6afa5265f43" translate="yes" xml:space="preserve">
          <source>Then, anywhere in the document, you define your link label like this, on a line by itself:</source>
          <target state="translated">그런 다음 문서의 어느 곳에서나 다음과 같이 링크 레이블을 한 줄씩 정의하십시오.</target>
        </trans-unit>
        <trans-unit id="af974e363edf0f5134e48a7a8cf2f8708119807a" translate="yes" xml:space="preserve">
          <source>To create an inline link, use a set of regular parentheses immediately after the link text&amp;rsquo;s closing square bracket. Inside the parentheses, put the URL where you want the link to point, along with an &lt;em&gt;optional&lt;/em&gt; title for the link, surrounded in quotes. For example:</source>
          <target state="translated">인라인 링크를 만들려면 링크 텍스트의 닫는 대괄호 바로 뒤에 일련의 괄호를 사용하십시오. 괄호 안에 링크를 가리킬 URL 을 따옴표로 묶어 링크 제목 ( &lt;em&gt;선택 사항)&lt;/em&gt; 과 함께 넣으 십시오. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="c317653ea87843d2941407ecbd587dfe617de2e9" translate="yes" xml:space="preserve">
          <source>To include a literal backtick character within a code span, you can use multiple backticks as the opening and closing delimiters:</source>
          <target state="translated">코드 범위 내에 리터럴 백틱 문자를 포함시키기 위해 여러 백틱을 시작 및 닫는 구분자로 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="78db9fec9bb64edc346fd3229e5056435ebbda9b" translate="yes" xml:space="preserve">
          <source>To indicate a span of code, wrap it with backtick quotes (&lt;code&gt;`&lt;/code&gt;). Unlike a pre-formatted code block, a code span indicates code within a normal paragraph. For example:</source>
          <target state="translated">코드 범위를 나타내려면 역 따옴표로 묶습니다 ( &lt;code&gt;`&lt;/code&gt; ). 사전 형식화 된 코드 블록과 달리 코드 범위는 일반적인 단락 내의 코드를 나타냅니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="1129c4fc38eb2add8558fd30931f69a828d8d5a9" translate="yes" xml:space="preserve">
          <source>To make lists look nice, you can wrap items with hanging indents:</source>
          <target state="translated">목록을보기 좋게 만들려면 들여 쓰기로 항목을 감쌀 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="64393ec3c89de453098d4291beaa9f15263b912c" translate="yes" xml:space="preserve">
          <source>To produce a code block in Markdown, simply indent every line of the block by at least 4 spaces or 1 tab. For example, given this input:</source>
          <target state="translated">Markdown에서 코드 블록을 생성하려면 블록의 모든 줄을 최소 4 개의 공백이나 1 개의 탭으로 들여 쓰기 만하면됩니다. 예를 들어 다음과 같은 입력이 주어지면 :</target>
        </trans-unit>
        <trans-unit id="b638787262478de1e0b32efb27eedc4c068b7b0e" translate="yes" xml:space="preserve">
          <source>To produce a literal asterisk or underscore at a position where it would otherwise be used as an emphasis delimiter, you can backslash escape it:</source>
          <target state="translated">강조 구분 기호로 사용되는 위치에서 문자 별표 또는 밑줄을 생성하려면 백 슬래시를 이스케이프 처리 할 수 ​​있습니다.</target>
        </trans-unit>
        <trans-unit id="4600a74cdae1b2acf818a8c64c3d0fcac002945b" translate="yes" xml:space="preserve">
          <source>To put a blockquote within a list item, the blockquote&amp;rsquo;s &lt;code&gt;&amp;gt;&lt;/code&gt; delimiters need to be indented:</source>
          <target state="translated">목록 항목 내에 블록 인용 부호를 넣으려면 블록 인용 부호 &lt;code&gt;&amp;gt;&lt;/code&gt; 구분 기호를 들여 쓰기해야합니다.</target>
        </trans-unit>
        <trans-unit id="ad4c9c3c9140148a2cfbb5e5b2ac17186c81c7f6" translate="yes" xml:space="preserve">
          <source>To put a code block within a list item, the code block needs to be indented &lt;em&gt;twice&lt;/em&gt; &amp;mdash; 8 spaces or two tabs:</source>
          <target state="translated">목록 항목 내에서 코드 블록을 넣으려면, 코드 블록의 요구는 들여 쓰기를하는 &lt;em&gt;배&lt;/em&gt; - 8 자리 또는 두 개의 탭이 :</target>
        </trans-unit>
        <trans-unit id="a8210f71a9fc6ea563ec2acb672d3f127cea6a7e" translate="yes" xml:space="preserve">
          <source>To this end, Markdown&amp;rsquo;s syntax is comprised entirely of punctuation characters, which punctuation characters have been carefully chosen so as to look like what they mean. E.g., asterisks around a word actually look like *emphasis*. Markdown lists look like, well, lists. Even blockquotes look like quoted passages of text, assuming you&amp;rsquo;ve ever used email.</source>
          <target state="translated">이를 위해 Markdown의 구문은 문장 부호 문자로 구성됩니다. 문장 부호 문자는 의미가 무엇인지 신중하게 선택되었습니다. 예를 들어, 단어 주위의 별표는 실제로 * 강조 *처럼 보입니다. 마크 다운 목록은 목록처럼 보입니다. 이메일을 사용한 적이 있다고 가정하면 인용 부호조차 인용 된 텍스트로 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="482545e20c9b658bd5c0422841a52f96fd55a71c" translate="yes" xml:space="preserve">
          <source>Unlike block-level HTML tags, Markdown syntax &lt;em&gt;is&lt;/em&gt; processed within span-level tags.</source>
          <target state="translated">블록 수준 HTML 태그와 달리 마크 다운 구문 &lt;em&gt;은&lt;/em&gt; 범위 수준 태그 내에서 처리됩니다.</target>
        </trans-unit>
        <trans-unit id="8629a43527178d06f33827ae98aeefe87595c470" translate="yes" xml:space="preserve">
          <source>Unordered lists use asterisks, pluses, and hyphens &amp;mdash; interchangably &amp;mdash; as list markers:</source>
          <target state="translated">정렬되지 않은 목록은 별표, 더하기 및 하이픈을 상호 교환 적으로 목록 표시 자로 사용합니다.</target>
        </trans-unit>
        <trans-unit id="d6790749931892e153421be5ae64496b3d2ae4c2" translate="yes" xml:space="preserve">
          <source>Using the implicit link name shortcut, you could instead write:</source>
          <target state="translated">암시 적 링크 이름 바로 가기를 사용하면 다음과 같이 작성할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="12dccb24dcbb30916556854946eaa0e9d1ea8896" translate="yes" xml:space="preserve">
          <source>When you &lt;em&gt;do&lt;/em&gt; want to insert a &lt;code&gt;&amp;lt;br /&amp;gt;&lt;/code&gt; break tag using Markdown, you end a line with two or more spaces, then type return.</source>
          <target state="translated">당신이하면 &lt;em&gt;않는&lt;/em&gt; 삽입 할 &lt;code&gt;&amp;lt;br /&amp;gt;&lt;/code&gt; 마크 다운을 사용하여 휴식 태그를 두 개 이상의 공백 라인을 종료 한 후 수익을 입력합니다.</target>
        </trans-unit>
        <trans-unit id="cf79f7a1280e5c70ed6ce7f00d9c83f2283b42d4" translate="yes" xml:space="preserve">
          <source>Where &amp;ldquo;id&amp;rdquo; is the name of a defined image reference. Image references are defined using syntax identical to link references:</source>
          <target state="translated">여기서 &quot;id&quot;는 정의 된 이미지 참조의 이름입니다. 이미지 참조는 링크 참조와 동일한 구문을 사용하여 정의됩니다.</target>
        </trans-unit>
        <trans-unit id="8af1dddd6c2192a020edaa51d45191a8693034d0" translate="yes" xml:space="preserve">
          <source>Will produce:</source>
          <target state="translated">생산할 것이다 :</target>
        </trans-unit>
        <trans-unit id="0109e186e9708f53237ceda58c2c319ac0c86b4e" translate="yes" xml:space="preserve">
          <source>With Markdown&amp;rsquo;s reference-style links, a source document much more closely resembles the final output, as rendered in a browser. By allowing you to move the markup-related metadata out of the paragraph, you can add links without interrupting the narrative flow of your prose.</source>
          <target state="translated">Markdown의 참조 스타일 링크를 사용하면 소스 문서가 브라우저에서 렌더링되는 최종 출력과 훨씬 더 유사합니다. 단락에서 마크 업 관련 메타 데이터를 이동할 수있게하면 산문의 서술 흐름을 방해하지 않고 링크를 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2e07aa11873ab8a78c67abad383a1f46bb80ff39" translate="yes" xml:space="preserve">
          <source>With a code span, ampersands and angle brackets are encoded as HTML entities automatically, which makes it easy to include example HTML tags. Markdown will turn this:</source>
          <target state="translated">코드 스팬을 사용하면 앰퍼샌드 및 꺾쇠 괄호가 HTML 엔터티로 자동 인코딩되므로 HTML 태그 예제를 쉽게 포함 할 수 있습니다. 마크 다운이 이것을 설정합니다 :</target>
        </trans-unit>
        <trans-unit id="30fa99acb63412ed6fe7830a97c835516b278b04" translate="yes" xml:space="preserve">
          <source>Within a code block, ampersands (&lt;code&gt;&amp;amp;&lt;/code&gt;) and angle brackets (&lt;code&gt;&amp;lt;&lt;/code&gt; and &lt;code&gt;&amp;gt;&lt;/code&gt;) are automatically converted into HTML entities. This makes it very easy to include example HTML source code using Markdown &amp;mdash; just paste it and indent it, and Markdown will handle the hassle of encoding the ampersands and angle brackets. For example, this:</source>
          <target state="translated">코드 블록 내에서 앰퍼샌드 ( &lt;code&gt;&amp;amp;&lt;/code&gt; )와 꺾쇠 괄호 ( &lt;code&gt;&amp;lt;&lt;/code&gt; 및 &lt;code&gt;&amp;gt;&lt;/code&gt; )는 자동으로 HTML 엔터티로 변환됩니다. 이렇게하면 Markdown을 사용하여 HTML 소스 코드 예제를 쉽게 포함시킬 수 있습니다. 붙여 넣기 만하면됩니다. Markdown은 앰퍼샌드와 꺾쇠 괄호를 인코딩하는 번거 로움을 처리합니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="1917b1121856ba6448d997e21f0da88c17960d7b" translate="yes" xml:space="preserve">
          <source>Yes, this takes a tad more effort to create a &lt;code&gt;&amp;lt;br /&amp;gt;&lt;/code&gt;, but a simplistic &amp;ldquo;every line break is a &lt;code&gt;&amp;lt;br /&amp;gt;&lt;/code&gt;&amp;rdquo; rule wouldn&amp;rsquo;t work for Markdown. Markdown&amp;rsquo;s email-style &lt;a href=&quot;#blockquote&quot;&gt;blockquoting&lt;/a&gt; and multi-paragraph &lt;a href=&quot;#list&quot;&gt;list items&lt;/a&gt; work best &amp;mdash; and look better &amp;mdash; when you format them with hard breaks.</source>
          <target state="translated">그렇습니다. &lt;code&gt;&amp;lt;br /&amp;gt;&lt;/code&gt; 를 만들려면 좀 더 많은 노력이 필요 하지만 단순한 &quot;모든 줄 바꿈은 &lt;code&gt;&amp;lt;br /&amp;gt;&lt;/code&gt; &quot;규칙이 Markdown에 적용되지 않습니다. 마크 다운의 전자 메일 스타일 &lt;a href=&quot;#blockquote&quot;&gt;블록 인용&lt;/a&gt; 및 다중 단락 &lt;a href=&quot;#list&quot;&gt;목록 항목&lt;/a&gt; 은 하드 나누기로 형식을 지정할 때 가장 효과적이고 모양이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="db9008b860529587429158d862f44ec88aae7b8b" translate="yes" xml:space="preserve">
          <source>You can optionally use a space to separate the sets of brackets:</source>
          <target state="translated">선택적으로 공백을 사용하여 대괄호 세트를 구분할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="adc8e4edceaac4f90d42e74810f4d0762808bd31" translate="yes" xml:space="preserve">
          <source>You can produce a horizontal rule tag (&lt;code&gt;&amp;lt;hr /&amp;gt;&lt;/code&gt;) by placing three or more hyphens, asterisks, or underscores on a line by themselves. If you wish, you may use spaces between the hyphens or asterisks. Each of the following lines will produce a horizontal rule:</source>
          <target state="translated">세 개 이상의 하이픈, 별표 또는 밑줄을 한 줄에 배치 하여 가로 규칙 태그 ( &lt;code&gt;&amp;lt;hr /&amp;gt;&lt;/code&gt; )를 생성 할 수 있습니다 . 원하는 경우 하이픈 또는 별표 사이에 공백을 사용할 수 있습니다. 다음 각 줄은 수평 규칙을 생성합니다.</target>
        </trans-unit>
        <trans-unit id="1b56d127649dcd1b69201318ebba33e36600494e" translate="yes" xml:space="preserve">
          <source>You can put the title attribute on the next line and use extra spaces or tabs for padding, which tends to look better with longer URLs:</source>
          <target state="translated">다음 줄에 title 속성을 추가하고 여백에 공백이나 탭을 추가로 사용할 수 있습니다. URL이 길수록 더 잘 보입니다.</target>
        </trans-unit>
        <trans-unit id="328b956e40eb12ec24c6f2c3809db3a23e5de1e9" translate="yes" xml:space="preserve">
          <source>You can use whichever style you prefer; the lone restriction is that the same character must be used to open and close an emphasis span.</source>
          <target state="translated">원하는 스타일을 사용할 수 있습니다. 유일한 제한 사항은 강조 표시 범위를 열고 닫는 데 동일한 문자를 사용해야한다는 것입니다.</target>
        </trans-unit>
        <trans-unit id="a37df7bee592eed386f6ca51fdfc387e3d9d9a32" translate="yes" xml:space="preserve">
          <source>You can write this:</source>
          <target state="translated">당신은 이것을 쓸 수 있습니다 :</target>
        </trans-unit>
        <trans-unit id="eb6597079c9c41dae265173a57ce1842ad3f2fba" translate="yes" xml:space="preserve">
          <source>and Markdown will leave it alone. But if you write:</source>
          <target state="translated">Markdown은 그것을 그대로 둡니다. 그러나 당신이 쓰는 경우 :</target>
        </trans-unit>
        <trans-unit id="a5230bf3ac1fc697c044aa12dc9e2fb2c6ea3dcf" translate="yes" xml:space="preserve">
          <source>and:</source>
          <target state="translated">and:</target>
        </trans-unit>
        <trans-unit id="e92e297a095229e3f96eb7b8a2c0f594650ed356" translate="yes" xml:space="preserve">
          <source>are equivalent.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3307e5c2184356d282b7d4251634b3517eccc85" translate="yes" xml:space="preserve">
          <source>followed by a colon;</source>
          <target state="translated">콜론;</target>
        </trans-unit>
        <trans-unit id="c8ad18cca3b55d330f961d3dd8ffa637236f14a0" translate="yes" xml:space="preserve">
          <source>followed by a set of parentheses, containing the URL or path to the image, and an optional &lt;code&gt;title&lt;/code&gt; attribute enclosed in double or single quotes.</source>
          <target state="translated">그 뒤에 이미지의 URL 또는 경로를 포함하는 괄호 세트와 큰 따옴표 또는 작은 따옴표로 묶인 선택적 &lt;code&gt;title&lt;/code&gt; 속성이옵니다.</target>
        </trans-unit>
        <trans-unit id="9a97980dac77e35eef281c5447c26fb57c4157d1" translate="yes" xml:space="preserve">
          <source>followed by a set of square brackets, containing the &lt;code&gt;alt&lt;/code&gt; attribute text for the image;</source>
          <target state="translated">그 뒤에 이미지에 대한 &lt;code&gt;alt&lt;/code&gt; 속성 텍스트를 포함하는 대괄호 세트가옵니다 .</target>
        </trans-unit>
        <trans-unit id="47fd4359932de7c33251ad03b112d728fa146087" translate="yes" xml:space="preserve">
          <source>followed by one or more spaces (or tabs);</source>
          <target state="translated">뒤에 하나 이상의 공백 (또는 탭)이옵니다.</target>
        </trans-unit>
        <trans-unit id="977743aca6d254406555e2948b617fb3895ac215" translate="yes" xml:space="preserve">
          <source>followed by the URL for the link;</source>
          <target state="translated">그 뒤에 링크 URL이옵니다.</target>
        </trans-unit>
        <trans-unit id="50c36b78b17cd1e22d05283f105e72d71a278203" translate="yes" xml:space="preserve">
          <source>in your anchor tag &lt;code&gt;href&lt;/code&gt; attribute. Needless to say, this is easy to forget, and is probably the single most common source of HTML validation errors in otherwise well-marked-up web sites.</source>
          <target state="translated">앵커 태그 &lt;code&gt;href&lt;/code&gt; 속성에서. 말할 것도없이, 이것은 잊어 버리기 쉽고, 잘 표시된 웹 사이트에서 HTML 유효성 검사 오류의 가장 일반적인 원인 일 것입니다.</target>
        </trans-unit>
        <trans-unit id="00cc35fd55c9ce998c5df2c6ff4968db559d06e7" translate="yes" xml:space="preserve">
          <source>into something like this:</source>
          <target state="translated">이런 식으로 :</target>
        </trans-unit>
        <trans-unit id="ae629e0254b0e6298a4ef8e35d54e657dba140ad" translate="yes" xml:space="preserve">
          <source>into:</source>
          <target state="translated">into:</target>
        </trans-unit>
        <trans-unit id="18ab6ac7001b131bc4dc74bd619c612205dff372" translate="yes" xml:space="preserve">
          <source>is equivalent to:</source>
          <target state="translated">다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="22b4fc3f2cd7f9b88323f9da8412f225e2c5c784" translate="yes" xml:space="preserve">
          <source>optionally followed by a title attribute for the link, enclosed in double or single quotes, or enclosed in parentheses.</source>
          <target state="translated">선택적으로 뒤에 큰 따옴표 나 작은 따옴표로 묶거나 괄호로 묶인 링크의 제목 속성이옵니다.</target>
        </trans-unit>
        <trans-unit id="7006b26f9c8f8d3e063ffcd613fdb2355cbc1ab6" translate="yes" xml:space="preserve">
          <source>or even:</source>
          <target state="translated">또는:</target>
        </trans-unit>
        <trans-unit id="2765637872d6c7f4a1ea927f391035ddbc1954b7" translate="yes" xml:space="preserve">
          <source>to produce:</source>
          <target state="translated">생산하는:</target>
        </trans-unit>
        <trans-unit id="8222bfd957b88f4f77050f917921bd92a15156fa" translate="yes" xml:space="preserve">
          <source>which will produce this:</source>
          <target state="translated">이것을 생성합니다 :</target>
        </trans-unit>
        <trans-unit id="15908a3dfe43f847b449b8cfa7f9f514cb0db711" translate="yes" xml:space="preserve">
          <source>which will render in a browser as a clickable link to &amp;ldquo;address@example.com&amp;rdquo;.</source>
          <target state="translated">브라우저에서 &quot;address@example.com&quot;에 대한 클릭 가능한 링크로 렌더링됩니다.</target>
        </trans-unit>
        <trans-unit id="332bb1c16e74014aa5e914635dddb04cc07228ad" translate="yes" xml:space="preserve">
          <source>will produce:</source>
          <target state="translated">생산할 것이다 :</target>
        </trans-unit>
        <trans-unit id="b89333c0fd6b74aa751244d1f7ee6c372b91dfda" translate="yes" xml:space="preserve">
          <source>will turn into:</source>
          <target state="translated">로 변할 것이다 :</target>
        </trans-unit>
        <trans-unit id="591e43b7df9af4655762cc3bd4d0fe1af4b2f8da" translate="yes" xml:space="preserve">
          <source>you need to encode the URL as:</source>
          <target state="translated">URL을 다음과 같이 인코딩해야합니다.</target>
        </trans-unit>
        <trans-unit id="77a2bd9e35edf579adb0bcbd56c24e3c58003db2" translate="yes" xml:space="preserve">
          <source>you&amp;rsquo;d get the exact same HTML output. The point is, if you want to, you can use ordinal numbers in your ordered Markdown lists, so that the numbers in your source match the numbers in your published HTML. But if you want to be lazy, you don&amp;rsquo;t have to.</source>
          <target state="translated">똑같은 HTML 출력을 얻을 수 있습니다. 요점은 원하는 경우 정렬 된 마크 다운 목록에서 서수를 사용하여 소스의 숫자가 게시 된 HTML의 숫자와 일치 할 수 있다는 것입니다. 그러나 게으 르기를 원할 필요는 없습니다.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
