<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="chef">
    <body>
      <group id="chef">
        <trans-unit id="20be112304522d58925661f2c1680cf2166bac12" translate="yes" xml:space="preserve">
          <source>The chef-client can be installed on machines running Microsoft Windows in the following ways:</source>
          <target state="translated">셰프 클라이언트는 다음과 같은 방법으로 Microsoft Windows를 실행하는 머신에 설치할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3ec5a7d428d04e0c2372721850e5f3fffd35a3c6" translate="yes" xml:space="preserve">
          <source>The chef-client can be installed using an unattended bootstrap. This allows the chef-client to be installed from itself, without using SSH. For example, machines are often created using environments like AWS Auto Scaling, AWS CloudFormation, Rackspace Auto Scale, and PXE. In this scenario, using tooling for attended, single-machine installs like &lt;code&gt;knife bootstrap&lt;/code&gt; or &lt;code&gt;knife CLOUD_PLUGIN create&lt;/code&gt; is not practical because the machines are created automatically and someone cannot always be on-hand to initiate the bootstrap process.</source>
          <target state="translated">셰프 클라이언트는 무인 부트 스트랩을 사용하여 설치할 수 있습니다. 이를 통해 SSH를 사용하지 않고 chef-client를 자체적으로 설치할 수 있습니다. 예를 들어 머신은 종종 AWS Auto Scaling, AWS CloudFormation, Rackspace Auto Scale 및 PXE와 같은 환경을 사용하여 생성됩니다. 이 시나리오에서는 &lt;code&gt;knife bootstrap&lt;/code&gt; 또는 &lt;code&gt;knife CLOUD_PLUGIN create&lt;/code&gt; 과 같은 유인 단일 머신 설치에 툴링을 사용 하는 것은 기계가 자동으로 작성되고 누군가가 항상 부트 스트랩 프로세스를 시작할 수 없기 때문에 실용적이지 않습니다.</target>
        </trans-unit>
        <trans-unit id="a945668d5e242e275a8b6ac5d6808c6da5ee3686" translate="yes" xml:space="preserve">
          <source>The chef-client can be run as a daemon. Use the &lt;strong&gt;chef-client&lt;/strong&gt; cookbook to configure the chef-client as a daemon. Add the &lt;code&gt;default&lt;/code&gt; recipe to a node&amp;rsquo;s run-list, and then use attributes in that cookbook to configure the behavior of the chef-client. For more information about these configuration options, see the &lt;a href=&quot;https://github.com/chef-cookbooks/chef-client/&quot;&gt;chef-client cookbook repository on github&lt;/a&gt;.</source>
          <target state="translated">chef-client는 데몬으로 실행될 수 있습니다. 사용 &lt;strong&gt;요리사 클라이언트&lt;/strong&gt; 데몬으로 요리사 클라이언트를 구성하는 요리 책. 추가 &lt;code&gt;default&lt;/code&gt; 요리사 클라이언트의 동작을 구성하는 요리 책에 속성을 사용하여 다음 노드의 실행 목록에 조리법을합니다. 이러한 구성 옵션에 대한 자세한 정보는 &lt;a href=&quot;https://github.com/chef-cookbooks/chef-client/&quot;&gt;github&lt;/a&gt; 의 chef-client cookbook 저장소를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="6dbccc2fbf054f1f9e56f3582f6de4acc64042fe" translate="yes" xml:space="preserve">
          <source>The chef-client can be run as a scheduled task. On the Microsoft Windows platform, a scheduled task provides more visibility, configurability, and reliability around log rotation and permissions, as compared to running the chef-client as a service. A scheduled task:</source>
          <target state="translated">요리사 클라이언트는 예약 된 작업으로 실행할 수 있습니다. Microsoft Windows 플랫폼에서 예약 된 작업은 chef-client를 서비스로 실행하는 것과 비교하여 로그 회전 및 권한에 대해 더 많은 가시성, 구성 가능성 및 안정성을 제공합니다. 예정된 작업 :</target>
        </trans-unit>
        <trans-unit id="d990bf22aea9a68fde0a7a87244e54424a0b031d" translate="yes" xml:space="preserve">
          <source>The chef-client can be used to manage node data using the command line and JSON files. Each JSON file contains a hash, the elements of which are added as node attributes. In addition, the &lt;code&gt;run_list&lt;/code&gt; setting allows roles and/or recipes to be added to the node.</source>
          <target state="translated">chef-client는 명령 행 및 JSON 파일을 사용하여 노드 데이터를 관리하는 데 사용할 수 있습니다. 각 JSON 파일에는 해시가 포함되며 해당 요소는 노드 속성으로 추가됩니다. 또한 &lt;code&gt;run_list&lt;/code&gt; 설정을 통해 역할 및 / 또는 레시피를 노드에 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8d1fb6afb20fec0db61d600b7709897aad620a18" translate="yes" xml:space="preserve">
          <source>The chef-client configures the system based on the information that has been collected. Each resource is executed in the order identified by the run-list, and then by the order in which each resource is listed in each recipe. Each resource in the resource collection is mapped to a provider. The provider examines the node, and then does the steps necessary to complete the action. And then the next resource is processed. Each action configures a specific part of the system. This process is also referred to as convergence. This is also referred to as the &amp;ldquo;execution phase&amp;rdquo;.</source>
          <target state="translated">요리사 클라이언트는 수집 된 정보를 기반으로 시스템을 구성합니다. 각 자원은 실행 목록으로 식별 된 순서대로 실행 된 다음 각 레시피에 각 자원이 나열되는 순서로 실행됩니다. 자원 콜렉션의 각 자원은 제공자에 맵핑됩니다. 공급자는 노드를 검사 한 다음 작업을 완료하는 데 필요한 단계를 수행합니다. 그리고 다음 리소스가 처리됩니다. 각 작업은 시스템의 특정 부분을 구성합니다. 이 프로세스는 수렴이라고도합니다. 이것을 &quot;실행 단계&quot;라고도합니다.</target>
        </trans-unit>
        <trans-unit id="9ad06dea4169c716f6380977dee29b81c8e67d5a" translate="yes" xml:space="preserve">
          <source>The chef-client created its private key successfully.</source>
          <target state="translated">요리사 클라이언트는 개인 키를 성공적으로 만들었습니다.</target>
        </trans-unit>
        <trans-unit id="73c2ffd3f206926d9cb12b13d8bdb75043624009" translate="yes" xml:space="preserve">
          <source>The chef-client encountered an error and was unable to load node data from the Chef server.</source>
          <target state="translated">chef-client에 오류가 발생하여 Chef 서버에서 노드 데이터를로드 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="3a3e90608e55afddc2600b83012db1ed89fdec96" translate="yes" xml:space="preserve">
          <source>The chef-client encountered an error and was unable to register with the Chef server.</source>
          <target state="translated">chef-client에 오류가 발생하여 Chef 서버에 등록 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="d7edd780448d578a9e0bf81e732a8d5dded74f82" translate="yes" xml:space="preserve">
          <source>The chef-client evaluates attributes in the order defined by the run-list, including any attributes that are in the run-list because of cookbook dependencies.</source>
          <target state="translated">chef-client는 요리 책 종속성으로 인해 실행 목록에있는 속성을 포함하여 실행 목록에 의해 정의 된 순서대로 속성을 평가합니다.</target>
        </trans-unit>
        <trans-unit id="73aa51846494cd99bdd08d60bcfd1f768c768044" translate="yes" xml:space="preserve">
          <source>The chef-client executable can be run as a daemon.</source>
          <target state="translated">chef-client 실행 파일은 데몬으로 실행할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4bfb8076dc8f9e92328861acd5f5fee84881e9d9" translate="yes" xml:space="preserve">
          <source>The chef-client executable is run as a command-line tool.</source>
          <target state="translated">chef-client 실행 파일은 명령 행 도구로 실행됩니다.</target>
        </trans-unit>
        <trans-unit id="2bc8b453be387890d676995e7def666a88dbfeb3" translate="yes" xml:space="preserve">
          <source>The chef-client expands the run-list from the rebuilt node object, compiling a full and complete list of roles and recipes that will be applied to the node, placing the roles and recipes in the same exact order they will be applied. (The run-list is stored in each node object&amp;rsquo;s JSON file, grouped under &lt;code&gt;run_list&lt;/code&gt;.)</source>
          <target state="translated">chef-client는 재 빌드 된 노드 오브젝트에서 실행 목록을 확장하여 노드에 적용될 역할 및 레시피의 전체 목록 및 전체 목록을 컴파일하여 적용되는 것과 동일한 순서로 역할 및 레시피를 배치합니다. 실행 목록은 각 노드 객체의 JSON 파일에 저장되며 &lt;code&gt;run_list&lt;/code&gt; 아래에 그룹화됩니다 .</target>
        </trans-unit>
        <trans-unit id="73dbef0c9afdf24d6f6303318dddf31897187cad" translate="yes" xml:space="preserve">
          <source>The chef-client failed to expand the run-list.</source>
          <target state="translated">요리사 클라이언트가 실행 목록을 확장하지 못했습니다.</target>
        </trans-unit>
        <trans-unit id="f88bebd49b68983aea1e4b84838e828867d76864" translate="yes" xml:space="preserve">
          <source>The chef-client failed to pull down the cookbook collection from the Chef server.</source>
          <target state="translated">요리사 클라이언트가 Chef 서버에서 요리 책 모음을 가져 오지 못했습니다.</target>
        </trans-unit>
        <trans-unit id="3d929d1829b7ce7718150bb701bd29f3ab622eea" translate="yes" xml:space="preserve">
          <source>The chef-client gets process configuration data from the client.rb file on the node, and then gets node configuration data from Ohai. One important piece of configuration data is the name of the node, which is found in the &lt;code&gt;node_name&lt;/code&gt; attribute in the client.rb file or is provided by Ohai. If Ohai provides the name of a node, it is typically the FQDN for the node, which is always unique within an organization.</source>
          <target state="translated">chef-client는 노드의 client.rb 파일에서 프로세스 구성 데이터를 가져온 다음 Ohai에서 노드 구성 데이터를 가져옵니다. 중요한 구성 데이터 중 하나 는 node.name이며, client.rb 파일 의 &lt;code&gt;node_name&lt;/code&gt; 속성에 있거나 Ohai에서 제공합니다. Ohai가 노드 이름을 제공하는 경우 일반적으로 노드의 FQDN이며 조직 내에서 항상 고유합니다.</target>
        </trans-unit>
        <trans-unit id="6996a83d9352bbaff365e2ed6e20aa2e6617b731" translate="yes" xml:space="preserve">
          <source>The chef-client has the same system requirements on the AIX platform as any other platform, with the following notes:</source>
          <target state="translated">chef-client는 AIX 플랫폼에서 다른 플랫폼과 동일한 시스템 요구 사항을 갖습니다 (다음 참고 사항 포함).</target>
        </trans-unit>
        <trans-unit id="d66ec6fa0c27901209273243afc8508bc7dacc38" translate="yes" xml:space="preserve">
          <source>The chef-client identifies each resource in the node object and builds the resource collection. Libraries are loaded first to ensure that all language extensions and Ruby classes are available to all resources. Next, attributes are loaded, followed by lightweight resources, and then all definitions (to ensure that any pseudo-resources within definitions are available). Finally, all recipes are loaded in the order specified by the expanded run-list. This is also referred to as the &amp;ldquo;compile phase&amp;rdquo;.</source>
          <target state="translated">chef-client는 노드 오브젝트의 각 자원을 식별하고 자원 콜렉션을 빌드합니다. 모든 언어 확장 및 Ruby 클래스가 모든 자원에 사용 가능하도록 라이브러리가 먼저로드됩니다. 다음으로, 속성이로드 된 후 경량 자원과 모든 정의 (정의 내의 의사 자원이 사용 가능한지 확인)가 뒤 따릅니다. 마지막으로, 모든 래서 피는 확장 된 런리스트에 지정된 순서대로로드됩니다. 이것을 &quot;컴파일 단계&quot;라고도합니다.</target>
        </trans-unit>
        <trans-unit id="785a094e79310586bcece264f6237e784fef3e9d" translate="yes" xml:space="preserve">
          <source>The chef-client includes a stable version of Ruby as part of the omnibus installer. The path to this version of Ruby must be added to the &lt;code&gt;$PATH&lt;/code&gt; environment variable and saved in the configuration file for the command shell (Bash, csh, and so on) that is used on the workstation. In a command window, type the following:</source>
          <target state="translated">요리사 클라이언트는 옴니버스 설치 프로그램의 일부로 안정적인 루비 버전을 포함합니다. 이 버전의 Ruby 경로는 &lt;code&gt;$PATH&lt;/code&gt; 환경 변수에 추가하고 워크 스테이션에서 사용되는 명령 쉘 (Bash, csh 등)의 구성 파일에 저장해야합니다. 명령 창에서 다음을 입력하십시오.</target>
        </trans-unit>
        <trans-unit id="0ee31c245318010194f15757395c752bcf9ac349" translate="yes" xml:space="preserve">
          <source>The chef-client includes two knife commands for managing SSL certificates:</source>
          <target state="translated">chef-client에는 SSL 인증서 관리를위한 두 가지 나이프 명령이 있습니다.</target>
        </trans-unit>
        <trans-unit id="b667440267f76bde6449685b50ca9c0a377fdd43" translate="yes" xml:space="preserve">
          <source>The chef-client is attempting to create a private key with which to register to the Chef server.</source>
          <target state="translated">chef-client가 Chef 서버에 등록 할 개인 키를 작성하려고합니다.</target>
        </trans-unit>
        <trans-unit id="fc6202ac2179b78c2ce9321d9417faadde7d01f3" translate="yes" xml:space="preserve">
          <source>The chef-client is attempting to load node data from the Chef server.</source>
          <target state="translated">chef-client가 Chef 서버에서 노드 데이터를로드하려고합니다.</target>
        </trans-unit>
        <trans-unit id="462f81f52e486feb1826731648729ef9b3a847f8" translate="yes" xml:space="preserve">
          <source>The chef-client is attempting to pull down the cookbook collection from the Chef server.</source>
          <target state="translated">요리사 클라이언트가 요리사 서버에서 요리 책 모음을 가져 오려고합니다.</target>
        </trans-unit>
        <trans-unit id="ec859403662025d3c3573a42d6b6b31977b7f9db" translate="yes" xml:space="preserve">
          <source>The chef-client is attempting to remove unneeded cookbooks.</source>
          <target state="translated">요리사 클라이언트가 불필요한 요리 책을 제거하려고합니다.</target>
        </trans-unit>
        <trans-unit id="007f8cfe23cfcd64e0e65c59c446c37bf599a3af" translate="yes" xml:space="preserve">
          <source>The chef-client is attempting to synchronize cookbooks.</source>
          <target state="translated">요리사 클라이언트가 요리 책을 동기화하려고합니다.</target>
        </trans-unit>
        <trans-unit id="088d97faa504bd4b7b51314f41c5261e23224fbe" translate="yes" xml:space="preserve">
          <source>The chef-client is attempting to synchronize the named cookbook.</source>
          <target state="translated">요리사 클라이언트가 명명 된 요리 책을 동기화하려고합니다.</target>
        </trans-unit>
        <trans-unit id="5bd3199030b26dc7057927612d4af0b5bc2ca4c8" translate="yes" xml:space="preserve">
          <source>The chef-client is distributed as a Backup File Format (BFF) binary and is installed on the AIX platform using the following command run as a root user:</source>
          <target state="translated">chef-client는 BFF (Backup File Format) 2 진으로 분배되며 다음 명령을 루트 사용자로 실행하여 AIX 플랫폼에 설치됩니다.</target>
        </trans-unit>
        <trans-unit id="4df3908fe363df2513c799513853ff157e7742c0" translate="yes" xml:space="preserve">
          <source>The chef-client is done removing cookbooks and/or cookbook files.</source>
          <target state="translated">요리사 클라이언트는 요리 책 및 / 또는 요리 책 파일을 제거합니다.</target>
        </trans-unit>
        <trans-unit id="fb79e5b413c0548599ade9bfb922136a51b720af" translate="yes" xml:space="preserve">
          <source>The chef-client is finished loading attribute files.</source>
          <target state="translated">chef-client가 속성 파일로드를 완료했습니다.</target>
        </trans-unit>
        <trans-unit id="0e5a831d834df367f83f6fbb134bd0c846693311" translate="yes" xml:space="preserve">
          <source>The chef-client is finished loading custom resources.</source>
          <target state="translated">요리사 클라이언트가 사용자 정의 자원로드를 완료했습니다.</target>
        </trans-unit>
        <trans-unit id="2b5aae72a9d770eb3e0e90baa80ff21c49c18941" translate="yes" xml:space="preserve">
          <source>The chef-client is finished loading definitions.</source>
          <target state="translated">요리사 클라이언트가 정의로드를 완료했습니다.</target>
        </trans-unit>
        <trans-unit id="014b9b49d48386525a9a2894007cb17ccd94c2b3" translate="yes" xml:space="preserve">
          <source>The chef-client is finished loading library files.</source>
          <target state="translated">요리사 클라이언트가 라이브러리 파일로드를 완료했습니다.</target>
        </trans-unit>
        <trans-unit id="e3c1773ec3e6fd1efe62c6f8b305fe153d822577" translate="yes" xml:space="preserve">
          <source>The chef-client is finished loading recipes.</source>
          <target state="translated">요리사 클라이언트가 레시피로드를 완료했습니다.</target>
        </trans-unit>
        <trans-unit id="0640857f3b3f4f6c9eac34401fb1b8a6f84cffc4" translate="yes" xml:space="preserve">
          <source>The chef-client is finished synchronizing cookbooks.</source>
          <target state="translated">요리사 클라이언트가 요리 책 동기화를 완료했습니다.</target>
        </trans-unit>
        <trans-unit id="01d5d895f154a869be8dfa52e8edd7b11319e97c" translate="yes" xml:space="preserve">
          <source>The chef-client is installed on the target node.</source>
          <target state="translated">chef-client는 대상 노드에 설치됩니다.</target>
        </trans-unit>
        <trans-unit id="f4dd7bede28ba9fde1c4792e4ff3d0091ae44708" translate="yes" xml:space="preserve">
          <source>The chef-client is loading attribute files.</source>
          <target state="translated">요리사 클라이언트가 속성 파일을로드 중입니다.</target>
        </trans-unit>
        <trans-unit id="240a166caf6e32201f3677a7a80372048e78b2a0" translate="yes" xml:space="preserve">
          <source>The chef-client is loading custom resources.</source>
          <target state="translated">요리사 클라이언트가 사용자 지정 리소스를로드하고 있습니다.</target>
        </trans-unit>
        <trans-unit id="af30f72b28816a5d682b9a8efbaffcbd358cb7bc" translate="yes" xml:space="preserve">
          <source>The chef-client is loading definitions.</source>
          <target state="translated">요리사 클라이언트가 정의를로드하고 있습니다.</target>
        </trans-unit>
        <trans-unit id="7dcdcd68e8a15a93bd386b531dab2e317db353f2" translate="yes" xml:space="preserve">
          <source>The chef-client is loading library files.</source>
          <target state="translated">요리사 클라이언트가 라이브러리 파일을로드 중입니다.</target>
        </trans-unit>
        <trans-unit id="5c544640c07f02ac8f5cd5c252330358fc3282fc" translate="yes" xml:space="preserve">
          <source>The chef-client is loading recipes.</source>
          <target state="translated">요리사 클라이언트가 레시피를로드 중입니다.</target>
        </trans-unit>
        <trans-unit id="e0ef1b0dfec23026e57dacf1cf8686fddd03fe2b" translate="yes" xml:space="preserve">
          <source>The chef-client is not registering with the Chef server because it already has a private key or because it does not need one.</source>
          <target state="translated">chef-client는 이미 개인 키를 가지고 있거나 필요하지 않기 때문에 Chef 서버에 등록하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="514b1bf0b909903b22205e3b0190c2d29745c5b6" translate="yes" xml:space="preserve">
          <source>The chef-client may be run in audit-mode. Use audit-mode to evaluate custom rules&amp;mdash;also referred to as audits&amp;mdash;that are defined in recipes. audit-mode may be run in the following ways:</source>
          <target state="translated">요리사 클라이언트는 감사 모드에서 실행될 수 있습니다. 감사 모드를 사용하여 레시피에 정의 된 사용자 정의 규칙 (감사라고도 함)을 평가하십시오. 감사 모드는 다음과 같은 방식으로 실행될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d8e4965af393933c975b14d4aab79715d72bc870" translate="yes" xml:space="preserve">
          <source>The chef-client may need to be run with elevated privileges in order to get a recipe to converge correctly. On UNIX and UNIX-like operating systems this can be done by running the command as root. On Microsoft Windows this can be done by running the command prompt as an administrator.</source>
          <target state="translated">레시피를 올바르게 수렴하려면 요리사 클라이언트가 높은 권한으로 실행되어야 할 수도 있습니다. UNIX 및 UNIX와 같은 운영 체제에서는 루트로 명령을 실행하여이를 수행 할 수 있습니다. Microsoft Windows에서는 관리자 권한으로 명령 프롬프트를 실행하여이 작업을 수행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c8a8b4eebeeae0bd30ffd430f964bc9f54395c2b" translate="yes" xml:space="preserve">
          <source>The chef-client may now be used to configure nodes that are running on the AIX platform, versions 6.1 (TL6 or higher, recommended) and 7.1 (TL0 SP3 or higher, recommended). The &lt;strong&gt;service&lt;/strong&gt; resource supports starting, stopping, and restarting services that are managed by System Resource Controller (SRC), as well as managing all service states with BSD-based init systems.</source>
          <target state="translated">chef-client는 이제 AIX 플랫폼, 버전 6.1 (TL6 이상, 권장) 및 7.1 (TL0 SP3 이상, 권장)에서 실행중인 노드를 구성하는 데 사용될 수 있습니다. &lt;strong&gt;서비스&lt;/strong&gt; 자원 지원, 시작, 중지 및 시스템 자원 제어기 (SRC)뿐만 아니라 BSD 기반 초기화 시스템과 모든 서비스 상태 관리와 같은 의해 관리되는 서비스를 다시 시작.</target>
        </trans-unit>
        <trans-unit id="9671ad2d23c7401b2e973175c03e64f0253d2949" translate="yes" xml:space="preserve">
          <source>The chef-client mode in which the Data Collector will be enabled. Possible values: &lt;code&gt;:solo&lt;/code&gt;, &lt;code&gt;:client&lt;/code&gt;, or &lt;code&gt;:both&lt;/code&gt;. The &lt;code&gt;:solo&lt;/code&gt; value is used for Chef operating in Chef Solo Mode or Chef Solo Legacy Mode. Default value: &lt;code&gt;both&lt;/code&gt;.</source>
          <target state="translated">Data Collector가 사용되는 chef-client 모드. 가능한 값은 : &lt;code&gt;:solo&lt;/code&gt; , &lt;code&gt;:client&lt;/code&gt; 또는 &lt;code&gt;:both&lt;/code&gt; 입니다. &lt;code&gt;:solo&lt;/code&gt; 값은 요리사 솔로 모드 나 요리사 솔로 레거시 모드에서 요리사 운영에 사용됩니다. 기본값 : &lt;code&gt;both&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c8f2b9c8c61d9c262b22782baaf5a5d2d42fc275" translate="yes" xml:space="preserve">
          <source>The chef-client must be run as a service for it to be able to regularly check in with the Chef server. Select the &lt;strong&gt;Chef Client Service&lt;/strong&gt; option to have the MSI configure the chef-client as a service.</source>
          <target state="translated">Chef-Client는 Chef 서버에 정기적으로 체크인 할 수 있도록 서비스로 실행해야합니다. &lt;strong&gt;Chef Client Service&lt;/strong&gt; 옵션을 선택하여 MSI가 chef-client를 서비스로 구성하십시오.</target>
        </trans-unit>
        <trans-unit id="b78130bff82b82078ab610e6063037d12f1b9762" translate="yes" xml:space="preserve">
          <source>The chef-client processes recipes in two phases:</source>
          <target state="translated">요리사 클라이언트는 두 단계로 레시피를 처리합니다.</target>
        </trans-unit>
        <trans-unit id="bb6a351cd99d34f9669a8e82e78170f2287411bf" translate="yes" xml:space="preserve">
          <source>The chef-client pulls down the node object from the Chef server. If this is the first chef-client run for the node, there will not be a node object to pull down from the Chef server. After the node object is pulled down from the Chef server, the chef-client rebuilds the node object. If this is the first chef-client run for the node, the rebuilt node object will contain only the default run-list. For any subsequent chef-client run, the rebuilt node object will also contain the run-list from the previous chef-client run.</source>
          <target state="translated">chef-client는 Chef 서버에서 노드 오브젝트를 가져옵니다. 이것이 노드에 대해 첫 번째 Chef-Client 실행 인 경우 Chef 서버에서 풀다운 할 노드 오브젝트가 없습니다. Chef 서버에서 노드 오브젝트를 가져 오면 chef-client가 노드 오브젝트를 다시 빌드합니다. 이것이 노드에 대한 첫 chef-client 실행 인 경우, 재 빌드 된 노드 오브젝트는 기본 실행 목록 만 포함합니다. 후속 요리사-클라이언트 실행의 경우 재 빌드 된 노드 오브젝트에는 이전 요리사-클라이언트 실행의 실행 목록도 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="72bfd9c756f9c16b41823871fed8f0000b5a9d3b" translate="yes" xml:space="preserve">
          <source>The chef-client pushes the node object to the Chef server at the end of the chef-client run; the updated node object on the Chef server is then indexed for search and is stored until the next chef-client run</source>
          <target state="translated">chef-client는 chef-client 실행이 끝날 때 노드 오브젝트를 Chef 서버로 푸시합니다. Chef 서버의 업데이트 된 노드 오브젝트는 검색을 위해 색인화되고 다음 chef-client가 실행될 때까지 저장됩니다.</target>
        </trans-unit>
        <trans-unit id="7909a1feefc277e4c0dce08d9735904065e4b18c" translate="yes" xml:space="preserve">
          <source>The chef-client ran the first resource before the breakpoint (&lt;code&gt;file[/tmp/before-breakpoint]&lt;/code&gt;), but then stopped after execution. The chef-client attempted to name the breakpoint after its position in the source file, but the chef-client was confused because the resource was entered interactively. From here, chef-shell can resume the chef-client run:</source>
          <target state="translated">chef-client는 중단 점 앞의 첫 번째 자원 ( &lt;code&gt;file[/tmp/before-breakpoint]&lt;/code&gt; )을 실행 한 후 실행 후 중지했습니다. 요리사 클라이언트는 소스 파일에서 위치를 지정한 후 중단 점 이름을 지정하려고 시도했지만 요리사가 클라이언트가 대화식으로 입력 되었기 때문에 혼란 스러웠습니다. 여기에서 chef-shell은 chef-client 실행을 재개 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ed4c2cef6c488a6281ea3f2779e7533f6b29604e" translate="yes" xml:space="preserve">
          <source>The chef-client removed a file from a cookbook.</source>
          <target state="translated">요리사 클라이언트는 요리 책에서 파일을 제거했습니다.</target>
        </trans-unit>
        <trans-unit id="a6c1c2c89e53a693c9e954853986fe0b2de0eb7c" translate="yes" xml:space="preserve">
          <source>The chef-client run audit phase has failed.</source>
          <target state="translated">요리사 클라이언트 실행 감사 단계가 실패했습니다.</target>
        </trans-unit>
        <trans-unit id="34b511c190e25ada7e6c33cfda9a5e631c027651" translate="yes" xml:space="preserve">
          <source>The chef-client run audit phase has started.</source>
          <target state="translated">요리사 클라이언트 실행 감사 단계가 시작되었습니다.</target>
        </trans-unit>
        <trans-unit id="93d939fa6713946fdef94317500c8e6745bf4315" translate="yes" xml:space="preserve">
          <source>The chef-client run audit phase is finished.</source>
          <target state="translated">요리사 클라이언트 실행 감사 단계가 완료되었습니다.</target>
        </trans-unit>
        <trans-unit id="70430ba3274b3850736049fac5151f0f133a0f69" translate="yes" xml:space="preserve">
          <source>The chef-client run can also be rewound, and then stepped through.</source>
          <target state="translated">셰프-클라이언트 실행도 되 감은 다음 단계별로 진행할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9b451d1478ece89148e4bacc844be42f87ef0e1d" translate="yes" xml:space="preserve">
          <source>The chef-client run converge phase has failed.</source>
          <target state="translated">요리사 클라이언트 실행 수렴 단계가 실패했습니다.</target>
        </trans-unit>
        <trans-unit id="f88efc50d7dd31d7a18dedcaaae831f0fb0dba76" translate="yes" xml:space="preserve">
          <source>The chef-client run converge phase has started.</source>
          <target state="translated">요리사 클라이언트 실행 수렴 단계가 시작되었습니다.</target>
        </trans-unit>
        <trans-unit id="22d66346b523d2ae7844faaec6ab1959c0403276" translate="yes" xml:space="preserve">
          <source>The chef-client run converge phase is complete.</source>
          <target state="translated">요리사 클라이언트 실행 수렴 단계가 완료되었습니다.</target>
        </trans-unit>
        <trans-unit id="3c0b1a6f9b9ac302fdc20f71f2011c9b6b70840a" translate="yes" xml:space="preserve">
          <source>The chef-client run has completed.</source>
          <target state="translated">요리사 클라이언트 실행이 완료되었습니다.</target>
        </trans-unit>
        <trans-unit id="7e2d3aed8d0dccb426c55d6f763378f2de734dc3" translate="yes" xml:space="preserve">
          <source>The chef-client run has failed.</source>
          <target state="translated">요리사 클라이언트 실행이 실패했습니다.</target>
        </trans-unit>
        <trans-unit id="83de402b780bc86e1d28f752900630c6098eecb1" translate="yes" xml:space="preserve">
          <source>The chef-client run has started.</source>
          <target state="translated">요리사 클라이언트 실행이 시작되었습니다.</target>
        </trans-unit>
        <trans-unit id="e29c0b0446383270a4a63e52d2dabd779fbaf32a" translate="yes" xml:space="preserve">
          <source>The chef-client run proceeds, using HTTPS (port 443), and registers the node with the Chef server.</source>
          <target state="translated">chef-client 실행은 HTTPS (포트 443)를 사용하여 진행하고 Chef 서버에 노드를 등록합니다.</target>
        </trans-unit>
        <trans-unit id="7be895718af572d7acb82ae133ecc907036cdbfc" translate="yes" xml:space="preserve">
          <source>The chef-client successfully loaded node data from the Chef server. Default and override attributes for roles have been computed, but are not yet applied.</source>
          <target state="translated">chef-client가 Chef 서버에서 노드 데이터를 성공적으로로드했습니다. 역할의 기본 및 재정의 속성이 계산되었지만 아직 적용되지 않았습니다.</target>
        </trans-unit>
        <trans-unit id="4f4c5696e0ca6d2ad0eac1f2827c8a9039205f34" translate="yes" xml:space="preserve">
          <source>The chef-client successfully loaded the named attribute file.</source>
          <target state="translated">chef-client가 이름 지정된 속성 파일을 성공적으로로드했습니다.</target>
        </trans-unit>
        <trans-unit id="6a17278ff630590260e500586ec31b254b80719f" translate="yes" xml:space="preserve">
          <source>The chef-client successfully loaded the named custom resource.</source>
          <target state="translated">요리사 클라이언트가 명명 된 사용자 지정 리소스를 성공적으로로드했습니다.</target>
        </trans-unit>
        <trans-unit id="90cadce68b4d86356729c5e867157728d2d37118" translate="yes" xml:space="preserve">
          <source>The chef-client successfully loaded the named definition.</source>
          <target state="translated">요리사 클라이언트가 명명 된 정의를 성공적으로로드했습니다.</target>
        </trans-unit>
        <trans-unit id="0fb5f1ececceac065741da97aa420ad457dfbdf7" translate="yes" xml:space="preserve">
          <source>The chef-client successfully loaded the named library file.</source>
          <target state="translated">chef-client가 이름 지정된 라이브러리 파일을 성공적으로로드했습니다.</target>
        </trans-unit>
        <trans-unit id="82f2f312b702049db18784f95fd5ea0e3dfafc46" translate="yes" xml:space="preserve">
          <source>The chef-client successfully loaded the named recipe.</source>
          <target state="translated">요리사 클라이언트가 명명 된 레시피를 성공적으로로드했습니다.</target>
        </trans-unit>
        <trans-unit id="456746db06b5ab5e43feede9d260d60434290709" translate="yes" xml:space="preserve">
          <source>The chef-client successfully pulled down the cookbook collection from the Chef server.</source>
          <target state="translated">chef-client가 Chef 서버에서 요리 책 콜렉션을 성공적으로 풀다운했습니다.</target>
        </trans-unit>
        <trans-unit id="67f53e10b5ac957f262b1f398e48c481a4310313" translate="yes" xml:space="preserve">
          <source>The chef-client supports reading multiple configuration files by putting them inside a &lt;code&gt;.d&lt;/code&gt; configuration directory. For example: &lt;code&gt;/etc/chef/client.d&lt;/code&gt;. All files that end in &lt;code&gt;.rb&lt;/code&gt; in the &lt;code&gt;.d&lt;/code&gt; directory are loaded; other non-&lt;code&gt;.rb&lt;/code&gt; files are ignored.</source>
          <target state="translated">chef-client는 여러 구성 파일을 &lt;code&gt;.d&lt;/code&gt; 구성 디렉토리 에 넣어서 여러 구성 파일을 읽을 수 있도록 지원합니다 . 예를 들어 &lt;code&gt;/etc/chef/client.d&lt;/code&gt; 입니다. &lt;code&gt;.d&lt;/code&gt; 디렉토리 에서 &lt;code&gt;.rb&lt;/code&gt; 로 끝나는 모든 파일 이로드됩니다. &lt;code&gt;.rb&lt;/code&gt; 이외의 다른 파일은 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="4d5ee8b59ecb25d1563edde7a2061201138e4ddf" translate="yes" xml:space="preserve">
          <source>The chef-client updated the named file in the named cookbook.</source>
          <target state="translated">요리사-클라이언트는 명명 된 요리 책에서 명명 된 파일을 업데이트했습니다.</target>
        </trans-unit>
        <trans-unit id="3874232c9e6b2b3532b8bb4faa24711171435707" translate="yes" xml:space="preserve">
          <source>The chef-client uses Erubis for templates, which is a fast, secure, and extensible implementation of embedded Ruby. Erubis should be familiar to members of the Ruby on Rails, Merb, or Puppet communities. For more information about Erubis, see: &lt;a href=&quot;http://www.kuwata-lab.com/erubis/&quot;&gt;http://www.kuwata-lab.com/erubis/&lt;/a&gt;.</source>
          <target state="translated">셰프 클라이언트는 템플릿에 Erubis를 사용하는데, 이는 임베디드 Ruby의 빠르고 안전하며 확장 가능한 구현입니다. Erubis는 Ruby on Rails, Merb 또는 Puppet 커뮤니티 회원에게 친숙해야합니다. Erubis에 대한 자세한 내용은 &lt;a href=&quot;http://www.kuwata-lab.com/erubis/&quot;&gt;http://www.kuwata-lab.com/erubis/를&lt;/a&gt; 참조 하십시오 .</target>
        </trans-unit>
        <trans-unit id="9080eadb3f34329d28b69b3ffec3248b624f7ac2" translate="yes" xml:space="preserve">
          <source>The chef-client uses Ruby as its reference language for creating cookbooks and defining recipes, with an extended DSL for specific resources. A reasonable set of resources are available to the chef-client, enough to support many of the most common infrastructure automation scenarios; however, this DSL can also be extended when additional resources and capabilities are required.</source>
          <target state="translated">요리사 클라이언트는 특정 리소스를위한 확장 된 DSL과 함께 요리 책을 만들고 레시피를 정의하기 위해 루비를 참조 언어로 사용합니다. 가장 일반적인 인프라 자동화 시나리오를 충분히 지원할 수 있도록 요리사-고객이 합리적인 리소스 세트를 사용할 수 있습니다. 그러나 추가 자원과 기능이 필요할 때이 DSL을 확장 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="49b0507fc7f32e37b0dc1b6b0b290ca0a5245c0a" translate="yes" xml:space="preserve">
          <source>The chef-client uses Ruby as its reference language for creating cookbooks and defining recipes, with an extended DSL for specific resources. The chef-client provides a reasonable set of resources, enough to support many of the most common infrastructure automation scenarios; however, this DSL can also be extended when additional resources and capabilities are required.</source>
          <target state="translated">요리사 클라이언트는 특정 리소스를위한 확장 된 DSL과 함께 요리 책을 만들고 레시피를 정의하기 위해 루비를 참조 언어로 사용합니다. 요리사-클라이언트는 가장 일반적인 인프라 자동화 시나리오를 충분히 지원할 수 있도록 합리적인 리소스 세트를 제공합니다. 그러나 추가 자원과 기능이 필요할 때이 DSL을 확장 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="7e18aeef12fb39c61222d066673d0db6fd9491c4" translate="yes" xml:space="preserve">
          <source>The chef-client uses a cache file to keep track of the order in which each revision of an application is deployed. By default, the cache file is located at &lt;code&gt;/var/chef/cache/revision-deploys/APPNAME/&lt;/code&gt;. To force a re-deploy, delete the deployment directory or delete the cache file.</source>
          <target state="translated">chef-client는 캐시 파일을 사용하여 응용 프로그램의 각 개정이 배치되는 순서를 추적합니다. 기본적으로 캐시 파일은 &lt;code&gt;/var/chef/cache/revision-deploys/APPNAME/&lt;/code&gt; 있습니다. 강제로 재배포하려면 배치 디렉토리를 삭제하거나 캐시 파일을 삭제하십시오.</target>
        </trans-unit>
        <trans-unit id="6c78b3098eb3a914e22ed903fe1a4a5f1114270c" translate="yes" xml:space="preserve">
          <source>The chef-client uses a lock file to ensure that only one chef-client run is in progress at any time. A lock file is created at the start of the chef-client run and is deleted at the end of the chef-client run. A new chef-client run looks for the presence of a lock file and, if present, will wait for that lock file to be deleted. The location of the lock file can vary by platform.</source>
          <target state="translated">요리사 클라이언트는 잠금 파일을 사용하여 언제든지 하나의 요리사 클라이언트 실행 만 진행되도록합니다. chef-client 실행 시작시 잠금 파일이 작성되고 chef-client 실행 종료시 삭제됩니다. 새로운 chef-client 실행은 잠금 파일의 존재를 찾고 존재하는 경우 해당 잠금 파일이 삭제 될 때까지 기다립니다. 잠금 파일의 위치는 플랫폼마다 다를 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="39eb0430669c97712a39c00f6fb6a520a19e389c" translate="yes" xml:space="preserve">
          <source>The chef-client uses six types of attributes to determine the value that is applied to a node during the chef-client run. In addition, the chef-client sources attribute values from up to five locations. The combination of attribute types and sources allows for up to 15 different competing values to be available to the chef-client during the chef-client run:</source>
          <target state="translated">chef-client는 6 가지 유형의 속성을 사용하여 chef-client 실행 중에 노드에 적용되는 값을 결정합니다. 또한 chef-client는 최대 5 개의 위치에서 속성 값을 제공합니다. 속성 유형과 소스를 조합하면 chef-client 실행 중에 chef-client가 최대 15 개의 서로 다른 경쟁 값을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c3843af2f2196dc24201f304e237f5ac368a96c0" translate="yes" xml:space="preserve">
          <source>The chef-client uses the EN_US (UTF-8) character set. By default, the AIX base operating system does not include the EN_US (UTF-8) character set and it must be installed prior to installing the chef-client. The EN_US (UTF-8) character set may be installed from the first disc in the AIX media or may be copied from &lt;code&gt;/installp/ppc/*EN_US*&lt;/code&gt; to a location on the logical partition (LPAR). This topic assumes this location to be &lt;code&gt;/tmp/rte&lt;/code&gt;.</source>
          <target state="translated">요리사 클라이언트는 EN_US (UTF-8) 문자 세트를 사용합니다. 기본적으로 AIX 기본 운영 체제에는 EN_US (UTF-8) 문자 세트가 포함되지 않으며 chef-client를 설치하기 전에 설치해야합니다. EN_US (UTF-8) 문자 세트는 AIX 매체의 첫 번째 디스크에서 설치되거나 &lt;code&gt;/installp/ppc/*EN_US*&lt;/code&gt; 에서 논리 파티션 (LPAR)의 위치 로 복사 될 수 있습니다 . 이 주제에서는이 위치가 &lt;code&gt;/tmp/rte&lt;/code&gt; 라고 가정합니다 .</target>
        </trans-unit>
        <trans-unit id="4544da38e9a2756e621e0d27a780fb303f06c5f6" translate="yes" xml:space="preserve">
          <source>The chef-client version 12.4 release adds an optional feature to the Microsoft Installer Package (MSI) for Chef. This feature enables the ability to pass quoted strings from the Windows PowerShell command line without the need for triple single quotes (&lt;code&gt;''' '''&lt;/code&gt;). This feature installs a Windows PowerShell module (typically in &lt;code&gt;C:\opscode\chef\modules&lt;/code&gt;) that is also appended to the &lt;code&gt;PSModulePath&lt;/code&gt; environment variable. This feature is not enabled by default. To activate this feature, run the following command from within Windows PowerShell:</source>
          <target state="translated">chef-client 버전 12.4 릴리스는 Chef 용 MSI (Microsoft Installer Package)에 선택적 기능을 추가합니다. 이 기능을 사용하면 삼중 작은 따옴표 ( &lt;code&gt;''' '''&lt;/code&gt; ) 없이 Windows PowerShell 명령 줄에서 따옴표로 묶인 문자열을 전달할 수 있습니다 . 이 기능 은 &lt;code&gt;PSModulePath&lt;/code&gt; 환경 변수에 추가 되는 Windows PowerShell 모듈 (일반적으로 &lt;code&gt;C:\opscode\chef\modules&lt;/code&gt; )을 설치 합니다. 이 기능은 기본적으로 활성화되어 있지 않습니다. 이 기능을 활성화하려면 Windows PowerShell 내에서 다음 명령을 실행하십시오.</target>
        </trans-unit>
        <trans-unit id="8bb7fbfac71049541c3ad56d57105c387a14ead1" translate="yes" xml:space="preserve">
          <source>The chef-client was unable to find the named recipe.</source>
          <target state="translated">요리사 클라이언트가 명명 된 레시피를 찾을 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="a179f88e527ca4b9eb799c7f3ec603c29449a47f" translate="yes" xml:space="preserve">
          <source>The chef-client was unable to load the named attribute file.</source>
          <target state="translated">chef-client가 이름 지정된 속성 파일을로드 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="9e085ec6385f746ab4e82791d9482b9c46daa33f" translate="yes" xml:space="preserve">
          <source>The chef-client was unable to load the named custom resource.</source>
          <target state="translated">chef-client가 이름 지정된 사용자 정의 자원을로드 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="4cd97b0a4822832ac6bd2063d4eca1122cdd6b3d" translate="yes" xml:space="preserve">
          <source>The chef-client was unable to load the named definition.</source>
          <target state="translated">요리사 클라이언트가 명명 된 정의를로드 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="702e0efe93cebf53ca3ee8445c607c153473c31d" translate="yes" xml:space="preserve">
          <source>The chef-client was unable to load the named library file.</source>
          <target state="translated">chef-client가 이름 지정된 라이브러리 파일을로드 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="aacc649815128f2de7021f31737e5ed9e2ac084c" translate="yes" xml:space="preserve">
          <source>The chef-client was unable to load the named recipe.</source>
          <target state="translated">요리사 클라이언트가 명명 된 레시피를로드 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="4823eda1c8e4e0e24b1c89ff94ed7deed45edd26" translate="yes" xml:space="preserve">
          <source>The chef-client was unable to synchronize cookbooks.</source>
          <target state="translated">요리사 클라이언트가 요리 책을 동기화 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="4924722a7f0945357ef762cb38a1add553e5eb9d" translate="yes" xml:space="preserve">
          <source>The chef-client will determine the correct provider based on configuration data collected by Ohai at the start of the chef-client run. This configuration data is then mapped to a platform and an associated list of providers.</source>
          <target state="translated">요리사 클라이언트는 요리사 클라이언트 실행이 시작될 때 Ohai가 수집 한 구성 데이터를 기반으로 올바른 제공자를 결정합니다. 그런 다음이 구성 데이터는 플랫폼 및 연관된 제공자 목록에 맵핑됩니다.</target>
        </trans-unit>
        <trans-unit id="788b9c4af384614fc8f96dec8b74eb3d4a3f1afb" translate="yes" xml:space="preserve">
          <source>The chef-client will look up the provider for the &lt;code&gt;directory&lt;/code&gt; resource, which happens to be &lt;code&gt;Chef::Provider::Directory&lt;/code&gt;, call &lt;code&gt;load_current_resource&lt;/code&gt; to create a &lt;code&gt;directory[&quot;/tmp/folder&quot;]&lt;/code&gt; resource, and then, based on the current state of the directory, do the specified action, which in this case is to create a directory called &lt;code&gt;/tmp/folder&lt;/code&gt;. If the directory already exists, nothing will happen. If the directory was changed in any way, the resource is marked as updated.</source>
          <target state="translated">chef-client는 &lt;code&gt;Chef::Provider::Directory&lt;/code&gt; 와 같은 &lt;code&gt;directory&lt;/code&gt; 자원 의 제공자를 &lt;code&gt;load_current_resource&lt;/code&gt; 를 호출 하여 &lt;code&gt;directory[&quot;/tmp/folder&quot;]&lt;/code&gt; 자원 을 작성한 다음 현재 상태를 기반으로합니다. 디렉토리의 경우 지정된 조치를 수행하십시오.이 경우 &lt;code&gt;/tmp/folder&lt;/code&gt; 디렉토리를 작성하십시오 . 디렉토리가 이미 존재하면 아무 일도 일어나지 않습니다. 디렉토리가 어떤 식 으로든 변경되면 자원이 업데이트 된 것으로 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="8d711818418c9533b42a9bf3dac8ef32e6e6c468" translate="yes" xml:space="preserve">
          <source>The chef-client will manage the permissions of the entire directory structure below &lt;code&gt;/html&lt;/code&gt;, for a total of 12 files and 4 directories. For example:</source>
          <target state="translated">chef-client는 총 12 개의 파일과 4 개의 디렉토리에 대해 &lt;code&gt;/html&lt;/code&gt; 아래의 전체 디렉토리 구조의 권한을 관리합니다 . 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="330cd29750c5b644a98a6ce9ba9b29c83c15a6f2" translate="yes" xml:space="preserve">
          <source>The chef-client will only update the property values that require updates and will not make changes when the property values are already in the desired state</source>
          <target state="translated">Chef-Client는 업데이트가 필요한 속성 값만 업데이트하며 속성 값이 이미 원하는 상태 인 경우 변경하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="5b86115dca01f9af58b68efb5744f45dea69de6c" translate="yes" xml:space="preserve">
          <source>The chef-client will pick up the &lt;code&gt;_default&lt;/code&gt; run-list if &lt;code&gt;env_run_list[environment_name]&lt;/code&gt; is null or nonexistent.</source>
          <target state="translated">&lt;code&gt;env_run_list[environment_name]&lt;/code&gt; 이 null이거나 존재하지 않으면 chef-client는 &lt;code&gt;_default&lt;/code&gt; 실행 목록을 선택합니다 .</target>
        </trans-unit>
        <trans-unit id="a3da7af852bca2f2d4e28f7d9a32e5343fe63617" translate="yes" xml:space="preserve">
          <source>The chef-client will pull down the node object from the Chef server (which contains the attribute data from the previous chef-client run), after which all attributes (except &lt;code&gt;normal&lt;/code&gt; are reset)</source>
          <target state="translated">chef-client는 Chef 서버 (이전 chef-client 실행의 속성 데이터가 포함 된)에서 노드 오브젝트를 풀다운 한 후 모든 속성 ( &lt;code&gt;normal&lt;/code&gt; 제외 )이 재설정됩니다.</target>
        </trans-unit>
        <trans-unit id="48d3aa277f4ac334a01f5bdbb1351ce58a54f365" translate="yes" xml:space="preserve">
          <source>The chef-client will rebuild the attribute list and apply attribute precedence while configuring the node</source>
          <target state="translated">chef-client는 노드를 구성하는 동안 속성 목록을 다시 작성하고 속성 우선 순위를 적용합니다.</target>
        </trans-unit>
        <trans-unit id="f11e0fae46c6ecdfabaf7659da973bdd91e24862" translate="yes" xml:space="preserve">
          <source>The chef-client will run a recipe only when asked. When the chef-client runs the same recipe more than once, the results will be the same system state each time. When a recipe is run against a system, but nothing has changed on either the system or in the recipe, the chef-client won&amp;rsquo;t change anything.</source>
          <target state="translated">요리사 클라이언트는 요청이있을 때만 레시피를 실행합니다. 요리사 클라이언트가 동일한 레시피를 두 번 이상 실행할 때마다 결과는 동일한 시스템 상태가됩니다. 레시피가 시스템에 대해 실행되지만 시스템이나 레시피에서 아무것도 변경되지 않은 경우 요리사 클라이언트는 아무것도 변경하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="d6d7a6d18d4eaf06ce459c7e81b0f818379977a3" translate="yes" xml:space="preserve">
          <source>The chef-client will update the cookbooks on the node (if required), which updates the attributes contained in attribute files and recipes</source>
          <target state="translated">요리사 클라이언트는 노드에서 요리 책을 업데이트하고 (필요한 경우) 속성 파일 및 레시피에 포함 된 속성을 업데이트합니다.</target>
        </trans-unit>
        <trans-unit id="cc928d2b16fa3d1359b3dcd19756fa9ee4abcad0" translate="yes" xml:space="preserve">
          <source>The chef-client will update the role and environment data (if required)</source>
          <target state="translated">요리사 클라이언트는 역할 및 환경 데이터를 업데이트합니다 (필요한 경우).</target>
        </trans-unit>
        <trans-unit id="6abfe7af6db668983ddfe947963994b916178d74" translate="yes" xml:space="preserve">
          <source>The chef-client, by default, will attempt to execute a Homebrew command as the owner of &lt;code&gt;/usr/local/bin/brew&lt;/code&gt;. If that executable does not exist, the chef-client will attempt to find the user by executing &lt;code&gt;which brew&lt;/code&gt;. If that executable cannot be found, the chef-client will print an error message: &lt;code&gt;Could not find the &quot;brew&quot; executable in /usr/local/bin or anywhere on the path.&lt;/code&gt;. Use the &lt;code&gt;homebrew_user&lt;/code&gt; attribute to specify the Homebrew owner for situations where the chef-client cannot automatically detect the correct owner.</source>
          <target state="translated">chef-client는 기본적으로 &lt;code&gt;/usr/local/bin/brew&lt;/code&gt; 의 소유자로서 Homebrew 명령을 실행하려고 시도합니다 . 해당 실행 파일이 없으면 chef-client는 &lt;code&gt;which brew&lt;/code&gt; 를 실행하여 사용자를 찾으려고 시도합니다 . 해당 실행 파일을 찾을 수 없으면 chef-client가 오류 메시지를 인쇄합니다. &lt;code&gt;Could not find the &quot;brew&quot; executable in /usr/local/bin or anywhere on the path.&lt;/code&gt; . chef-client가 올바른 소유자를 자동으로 감지 할 수없는 경우 &lt;code&gt;homebrew_user&lt;/code&gt; 속성을 사용하여 Homebrew 소유자를 지정하십시오.</target>
        </trans-unit>
        <trans-unit id="b680e77e982b547f9124ddc1b2f716b73d84e207" translate="yes" xml:space="preserve">
          <source>The chef-repo</source>
          <target state="translated">요리사 레포</target>
        </trans-unit>
        <trans-unit id="066a9a27b47ede23b1e8a4e271225c7b4ce21e64" translate="yes" xml:space="preserve">
          <source>The chef-repo contains several directories, each with a README file that describes what it is for and how to use that directory when managing systems.</source>
          <target state="translated">chef-repo에는 여러 디렉토리가 있으며 각각은 디렉토리를 관리하고 시스템 관리시 해당 디렉토리를 사용하는 방법을 설명하는 README 파일이 있습니다.</target>
        </trans-unit>
        <trans-unit id="1ac66c0a151e4c52acd0e2a4fd67460e2fc0b0c2" translate="yes" xml:space="preserve">
          <source>The chef-repo is located on a workstation and should be synchronized with a version control system, such as git. All of the data in the chef-repo should be treated like source code.</source>
          <target state="translated">chef-repo는 워크 스테이션에 있으며 git와 같은 버전 제어 시스템과 동기화되어야합니다. chef-repo의 모든 데이터는 소스 코드처럼 취급해야합니다.</target>
        </trans-unit>
        <trans-unit id="2b4be477e7756de95b499479c0e6d508ad7fa701" translate="yes" xml:space="preserve">
          <source>The chef-repo is the location in which the following data objects are stored:</source>
          <target state="translated">chef-repo는 다음 데이터 오브젝트가 저장되는 위치입니다.</target>
        </trans-unit>
        <trans-unit id="b8c89f97cded5e11362fc13bd576a10fdf9ff2e8" translate="yes" xml:space="preserve">
          <source>The chef-repo is the repository structure in which cookbooks are authored, tested, and maintained:</source>
          <target state="translated">chef-repo는 요리 책을 작성, 테스트 및 유지 관리하는 저장소 구조입니다.</target>
        </trans-unit>
        <trans-unit id="4d8d76c2c1b74fe9e598f5501fe17ef2746d7b64" translate="yes" xml:space="preserve">
          <source>The chef-repo should be synchronized with a version control system (such as git), and then managed as if it were source code</source>
          <target state="translated">chef-repo는 버전 제어 시스템 (git 등)과 동기화 된 다음 소스 코드 인 것처럼 관리해야합니다.</target>
        </trans-unit>
        <trans-unit id="3b04d52204f6dda1845324931fe25ef0199914a4" translate="yes" xml:space="preserve">
          <source>The chef-server.rb file contains all of the non-default configuration settings used by the Chef server. (The default settings are built-in to the Chef server configuration and should only be added to the chef-server.rb file to apply non-default values.) These configuration settings are processed when the &lt;code&gt;chef-server-ctl reconfigure&lt;/code&gt; command is run, such as immediately after setting up the Chef server or after making a change to the underlying configuration settings after the server has been deployed. The chef-server.rb file is a Ruby file, which means that conditional statements can be used in the configuration file.</source>
          <target state="translated">chef-server.rb 파일에는 Chef 서버가 사용하는 모든 비 기본 구성 설정이 포함되어 있습니다. 기본 설정은 Chef 서버 구성에 기본 제공되며 기본값이 아닌 값을 적용하려면 chef-server.rb 파일에만 추가해야합니다. 이러한 구성 설정은 &lt;code&gt;chef-server-ctl reconfigure&lt;/code&gt; 명령이 실행될 때 처리됩니다. (예 : Chef 서버를 설정 한 직후 또는 서버가 배포 된 후 기본 구성 설정을 변경 한 후) chef-server.rb 파일은 Ruby 파일이므로 구성 파일에서 조건문을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="05976f3f63304fe3c4cce6b4e4081482918ad909" translate="yes" xml:space="preserve">
          <source>The chef-server.rb file contains settings that can be used to edit the number of nodes that are under license:</source>
          <target state="translated">chef-server.rb 파일에는 라이센스가있는 노드 수를 편집하는 데 사용할 수있는 설정이 포함되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="66395c906b1d1071324049fc765a21a0d8701487" translate="yes" xml:space="preserve">
          <source>The chef-server.rb file does not exist by default. To modify the settings for the Chef server, create a file named &lt;code&gt;chef-server.rb&lt;/code&gt; in the &lt;code&gt;/etc/opscode/&lt;/code&gt; directory.</source>
          <target state="translated">chef-server.rb 파일은 기본적으로 존재하지 않습니다. Chef 서버의 설정을 수정하려면 &lt;code&gt;/etc/opscode/&lt;/code&gt; 디렉토리 에 &lt;code&gt;chef-server.rb&lt;/code&gt; 라는 파일을 작성하십시오 .</target>
        </trans-unit>
        <trans-unit id="3d01fcdd160e8dca1b85d6457c9693710771e571" translate="yes" xml:space="preserve">
          <source>The chef-server.rb file that is located in the &lt;code&gt;/etc/opscode/&lt;/code&gt; directory describes the topology of the tiered configuration. On the backend server, create a file named chef-server.rb and save it in the &lt;code&gt;/etc/opscode/&lt;/code&gt; directory.</source>
          <target state="translated">&lt;code&gt;/etc/opscode/&lt;/code&gt; 디렉토리 에있는 chef-server.rb 파일 은 계층 구성의 토폴로지를 설명합니다. 백엔드 서버에서 chef-server.rb라는 파일을 작성하여 &lt;code&gt;/etc/opscode/&lt;/code&gt; 디렉토리에 저장하십시오 .</target>
        </trans-unit>
        <trans-unit id="41e2a6e5c46204499faa660140da4d4a80324a9a" translate="yes" xml:space="preserve">
          <source>The chef-shell executable is run as a command-line tool.</source>
          <target state="translated">chef-shell 실행 파일은 명령 행 도구로 실행됩니다.</target>
        </trans-unit>
        <trans-unit id="c59740961be6d4ec56409e6a485e1924517cc180" translate="yes" xml:space="preserve">
          <source>The chef-shell.rb file can be used to configure chef-shell in the same way as the client.rb file is used to configure the chef-client. For example, to configure chef-shell to authenticate to the Chef server, copy the &lt;code&gt;node_name&lt;/code&gt;, &lt;code&gt;client_key&lt;/code&gt;, and &lt;code&gt;chef_server_url&lt;/code&gt; settings from the knife.rb file:</source>
          <target state="translated">chef-shell.rb 파일은 client.rb 파일이 chef-client를 구성하는 데 사용되는 것과 같은 방식으로 chef-shell을 구성하는 데 사용될 수 있습니다. 예를 들어 Chef 서버에 인증하도록 chef-shell을 구성 하려면 knife.rb 파일에서 &lt;code&gt;node_name&lt;/code&gt; , &lt;code&gt;client_key&lt;/code&gt; 및 &lt;code&gt;chef_server_url&lt;/code&gt; 설정을 복사하십시오.</target>
        </trans-unit>
        <trans-unit id="c756bac917ef1a3ad27014bfe9330860cc448e70" translate="yes" xml:space="preserve">
          <source>The chef-solo executable is run as a command-line tool.</source>
          <target state="translated">chef-solo 실행 파일은 명령 행 도구로 실행됩니다.</target>
        </trans-unit>
        <trans-unit id="f458dbe5e3253c3a61b946fcb556e8e607a2d6a2" translate="yes" xml:space="preserve">
          <source>The chef-validator is allowed to do the following at the start of a chef-client run. After the chef-client is registered with Chef server, that chef-client is added to the &lt;code&gt;clients&lt;/code&gt; group:</source>
          <target state="translated">셰프 유효성 검사는 셰프 클라이언트 실행이 시작될 때 다음을 수행 할 수 있습니다. chef-client가 Chef 서버에 등록되면 해당 chef-client가 &lt;code&gt;clients&lt;/code&gt; 그룹에 추가됩니다 .</target>
        </trans-unit>
        <trans-unit id="0878291a2d8ff31c8df6f384e7cc989a44c12d04" translate="yes" xml:space="preserve">
          <source>The chefignore file can be used to ignore all of the files in a directory. For example:</source>
          <target state="translated">chefignore 파일을 사용하여 디렉토리의 모든 파일을 무시할 수 있습니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="73cae1b9a5b2c00dc99fdc7c817be24ad576ce3f" translate="yes" xml:space="preserve">
          <source>The chefignore file is located at the root of the &lt;code&gt;/cookbooks&lt;/code&gt; subdirectory in the chef-repo. It should contain sections similar to the following:</source>
          <target state="translated">chefignore 파일은 chef-repo 의 &lt;code&gt;/cookbooks&lt;/code&gt; 하위 디렉토리 루트에 있습니다. 다음과 유사한 섹션이 포함되어야합니다.</target>
        </trans-unit>
        <trans-unit id="99aa9e485fe0ca16368c8a8c6175bf17e8df34ed" translate="yes" xml:space="preserve">
          <source>The chefignore file is used to tell knife which cookbook files in the chef-repo should be ignored when uploading data to the Chef server. The type of data that should be ignored includes swap files, version control data, build output data, and so on. The chefignore file uses the &lt;code&gt;File.fnmatch&lt;/code&gt; Ruby syntax to define the ignore patterns using &lt;code&gt;*&lt;/code&gt;, &lt;code&gt;**&lt;/code&gt;, and &lt;code&gt;?&lt;/code&gt; wildcards.</source>
          <target state="translated">chefignore 파일은 Chef 서버에 데이터를 업로드 할 때 chef-repo의 어떤 요리 책 파일을 무시해야하는지 나이프에 알리는 데 사용됩니다. 무시해야 할 데이터 유형에는 스왑 파일, 버전 제어 데이터, 빌드 출력 데이터 등이 포함됩니다. chefignore 파일은 &lt;code&gt;File.fnmatch&lt;/code&gt; Ruby 구문을 사용하여 &lt;code&gt;*&lt;/code&gt; , &lt;code&gt;**&lt;/code&gt; 및 &lt;code&gt;?&lt;/code&gt; 를 사용하여 무시 패턴을 정의합니다 . 와일드 카드.</target>
        </trans-unit>
        <trans-unit id="1294e7a28cc610fb894cfa80f12f64f8b10f1402" translate="yes" xml:space="preserve">
          <source>The chunk size. This property should not be used for a RAID 1 mirrored pair (i.e. when the &lt;code&gt;level&lt;/code&gt; property is set to &lt;code&gt;1&lt;/code&gt;). Default value: &lt;code&gt;16&lt;/code&gt;.</source>
          <target state="translated">청크 크기. 이 속성은 RAID 1 미러링 쌍에 사용해서는 안됩니다 (즉, &lt;code&gt;level&lt;/code&gt; 속성이 &lt;code&gt;1&lt;/code&gt; 로 설정된 경우 ). 기본값 : &lt;code&gt;16&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4e1753bd087c57911b963bfa1e9003f4b0b9bd4e" translate="yes" xml:space="preserve">
          <source>The city in which your company is located. Default value: &lt;code&gt;Seattle&lt;/code&gt;.</source>
          <target state="translated">회사가 위치한 도시. 기본 값 : &lt;code&gt;Seattle&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4787b815eba0a339a3958e77f6e2fcccc2318d15" translate="yes" xml:space="preserve">
          <source>The client &lt;code&gt;ubuntu-12.04&lt;/code&gt; was added to the &lt;code&gt;chef-vault&lt;/code&gt; during the bootstrap.</source>
          <target state="translated">부트 스트랩 동안 클라이언트 &lt;code&gt;ubuntu-12.04&lt;/code&gt; 가 &lt;code&gt;chef-vault&lt;/code&gt; 에 추가되었습니다 .</target>
        </trans-unit>
        <trans-unit id="ba19c86c53333fb4d22b8635a37b2b58f04cac08" translate="yes" xml:space="preserve">
          <source>The client itself can decrypt and read the encrypted databag contents as well.</source>
          <target state="translated">클라이언트 자체도 암호화 된 데이터 백 내용을 해독하고 읽을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="87e74862573be40ce782ec2e3535d40a09762ed8" translate="yes" xml:space="preserve">
          <source>The client name that was used to sign this request.</source>
          <target state="translated">이 요청에 서명하는 데 사용 된 클라이언트 이름입니다.</target>
        </trans-unit>
        <trans-unit id="6186c4a6675df9b5f0d5baffe10fd8a6e19dbe74" translate="yes" xml:space="preserve">
          <source>The closer the current state of the system is to the desired state, the more useful why-run mode will be. For example, if a full run-list is run against a fresh system, that run-list may not be completely correct on the first try, but also that run-list will produce more output than a smaller run-list</source>
          <target state="translated">시스템의 현재 상태가 원하는 상태에 가까울수록 더 유용한 이유 실행 모드가됩니다. 예를 들어, 전체 실행 목록이 새로운 시스템에 대해 실행되는 경우 해당 실행 목록은 첫 번째 시도에서 완전히 정확하지 않을 수 있지만 실행 목록은 더 작은 실행 목록보다 더 많은 출력을 생성합니다.</target>
        </trans-unit>
        <trans-unit id="852ce618b8a43247e94d089eacba82428f308066" translate="yes" xml:space="preserve">
          <source>The code for the DSC configuration script. This property may not be used in the same recipe as the &lt;code&gt;command&lt;/code&gt; property.</source>
          <target state="translated">DSC 구성 스크립트의 코드입니다. 이 특성은 &lt;code&gt;command&lt;/code&gt; 특성 과 동일한 레시피에서 사용될 수 없습니다 .</target>
        </trans-unit>
        <trans-unit id="988607959e6f256b029907b806b2e5e21791c875" translate="yes" xml:space="preserve">
          <source>The code in a file that is included in a recipe using a callback is evaluated exactly as if the code had been put in the recipe as a block. Files are searched relative to the current release.</source>
          <target state="translated">콜백을 사용하여 래서 피에 포함 된 파일의 코드는 코드가 래서 피에 블록으로 삽입 된 것처럼 정확하게 평가됩니다. 현재 릴리스를 기준으로 파일을 검색합니다.</target>
        </trans-unit>
        <trans-unit id="da8c324d873269b1dabfcba2fd31570a49a2adc7" translate="yes" xml:space="preserve">
          <source>The code to be executed on a node located within a distributed Erlang system. Default value: &lt;code&gt;q()&lt;/code&gt;.</source>
          <target state="translated">분산 Erlang 시스템 내에있는 노드에서 실행될 코드입니다. 기본 값 : &lt;code&gt;q()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b9e0e4ed725895e724139d61a8976ba183171d22" translate="yes" xml:space="preserve">
          <source>The command line can also be used to edit JSON files and files that are related to third-party services, such as Amazon EC2, where the JSON files can contain per-instance metadata that is stored in a file on-disk and then read by chef-solo or chef-client as required.</source>
          <target state="translated">명령 줄을 사용하여 Amazon EC2와 같은 타사 서비스와 관련된 JSON 파일 및 파일을 편집 할 수도 있습니다. 여기서 JSON 파일은 디스크상의 파일에 저장된 다음 인스턴스별로 읽을 수있는 인스턴스 별 메타 데이터를 포함 할 수 있습니다. 필요한 경우 요리사 솔로 또는 요리사 클라이언트.</target>
        </trans-unit>
        <trans-unit id="d3736b0621453330cf7d99cb07a04ee7440c93ac" translate="yes" xml:space="preserve">
          <source>The command to be run against the results of a search query.</source>
          <target state="translated">검색 결과에 대해 실행할 명령입니다.</target>
        </trans-unit>
        <trans-unit id="7f8954f1efc50163842e27568ad01ff3f3950cf7" translate="yes" xml:space="preserve">
          <source>The command to be run, or the path to a file that contains the command to be run.</source>
          <target state="translated">실행할 명령 또는 실행할 명령이 포함 된 파일의 경로입니다.</target>
        </trans-unit>
        <trans-unit id="778463ae98e2e8b432adbef08c3eb5634dde508c" translate="yes" xml:space="preserve">
          <source>The command used to check the run status for a service.</source>
          <target state="translated">서비스의 실행 상태를 확인하는 데 사용되는 명령입니다.</target>
        </trans-unit>
        <trans-unit id="87d1eccb1aadac8ca34f16264e143af12ec3d62c" translate="yes" xml:space="preserve">
          <source>The command used to restart a service.</source>
          <target state="translated">서비스를 다시 시작하는 데 사용되는 명령입니다.</target>
        </trans-unit>
        <trans-unit id="29d3ddf7edd99b3a29c8e773aca6e1418451b389" translate="yes" xml:space="preserve">
          <source>The command used to start a service.</source>
          <target state="translated">서비스를 시작하는 데 사용되는 명령입니다.</target>
        </trans-unit>
        <trans-unit id="261888632cf886b098f3589c713da28891c1fd70" translate="yes" xml:space="preserve">
          <source>The command used to stop a service.</source>
          <target state="translated">서비스를 중지하는 데 사용되는 명령입니다.</target>
        </trans-unit>
        <trans-unit id="3cc66cb331097c3fdd79aca2c92abc0f80d55a56" translate="yes" xml:space="preserve">
          <source>The command used to tell a service to reload its configuration.</source>
          <target state="translated">서비스에게 구성을 다시로드하도록 지시하는 데 사용되는 명령입니다.</target>
        </trans-unit>
        <trans-unit id="44a1c6f1a83220900ed5ac356d5415f14c180a69" translate="yes" xml:space="preserve">
          <source>The community has authored thousands of cookbooks, ranging from niche cookbooks that are used by only a few organizations to cookbooks that are some of the most popular and are used by nearly everyone.</source>
          <target state="translated">이 커뮤니티는 소수의 조직 만이 사용하는 틈새 요리 책부터 가장 인기 있고 거의 모든 사람이 사용하는 요리 책에 이르기까지 수천 가지 요리 책을 작성했습니다.</target>
        </trans-unit>
        <trans-unit id="a09395f1c675c3a6ff7c56fe8700e750e1e0e81e" translate="yes" xml:space="preserve">
          <source>The community provides many other plugins for knife: &lt;a href=&quot;http://community.opscode.com/&quot;&gt;http://community.opscode.com/&lt;/a&gt;.</source>
          <target state="translated">커뮤니티는 나이프를위한 다른 많은 플러그인을 제공합니다 : &lt;a href=&quot;http://community.opscode.com/&quot;&gt;http://community.opscode.com/&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e90d22e8086a7874964d993369eb0ba1592461f6" translate="yes" xml:space="preserve">
          <source>The compression level used with gzip, from least amount of compression (&lt;code&gt;1&lt;/code&gt;, fastest) to the most (&lt;code&gt;2&lt;/code&gt;, slowest). Default value: &lt;code&gt;2&lt;/code&gt;.</source>
          <target state="translated">gzip과 함께 사용 된 압축 수준은 최소 압축 량 ( &lt;code&gt;1&lt;/code&gt; , 가장 빠름)에서 가장 많이 ( &lt;code&gt;2&lt;/code&gt; , 느림)까지입니다. 기본 값 : &lt;code&gt;2&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7fd3ea814ca4831247477fb7d008a104053cabea" translate="yes" xml:space="preserve">
          <source>The configuration data for the DSC script. The configuration data must be &lt;a href=&quot;http://msdn.microsoft.com/en-us/library/dd878337(v=vs.85).aspx&quot;&gt;a valid Windows Powershell data file&lt;/a&gt;. This property may not be used in the same recipe as the &lt;code&gt;configuration_data_script&lt;/code&gt; property.</source>
          <target state="translated">DSC 스크립트의 구성 데이터 구성 데이터는 &lt;a href=&quot;http://msdn.microsoft.com/en-us/library/dd878337(v=vs.85).aspx&quot;&gt;유효한 Windows Powershell 데이터 파일&lt;/a&gt; 이어야 합니다 . 이 특성은 &lt;code&gt;configuration_data_script&lt;/code&gt; 특성 과 동일한 레시피에서 사용될 수 없습니다 .</target>
        </trans-unit>
        <trans-unit id="a569fc1c49f1fb1287d5724bea985452cf4bfa59" translate="yes" xml:space="preserve">
          <source>The configuration file is located at: &lt;code&gt;/etc/chef-manage/manage.rb&lt;/code&gt;.</source>
          <target state="translated">구성 파일은 &lt;code&gt;/etc/chef-manage/manage.rb&lt;/code&gt; 에 있습니다.</target>
        </trans-unit>
        <trans-unit id="a035f3303db06d7ca392915ab767c77934897bb4" translate="yes" xml:space="preserve">
          <source>The configuration file to use.</source>
          <target state="translated">사용할 구성 파일.</target>
        </trans-unit>
        <trans-unit id="4134a47550a9a00bb8f132af8a95c5b458b0d82b" translate="yes" xml:space="preserve">
          <source>The configuration file to use. For example, when knife is run from a node that is configured to be managed by the Chef server, this option is used to allow knife to use the same credentials as the chef-client when communicating with the Chef server.</source>
          <target state="translated">사용할 구성 파일. 예를 들어, Chef 서버에서 관리하도록 구성된 노드에서 knife가 실행될 때이 옵션은 Chef 서버와 통신 할 때 knife가 chef-client와 동일한 자격 증명을 사용하도록 허용하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="b309ab29e0847af9ea4cf80a9879e1d6dcac014b" translate="yes" xml:space="preserve">
          <source>The configuration type of the Chef server. Possible values: &lt;code&gt;backend&lt;/code&gt;, &lt;code&gt;frontend&lt;/code&gt;, or &lt;code&gt;standalone&lt;/code&gt;. Default value: &lt;code&gt;'standalone'&lt;/code&gt;.</source>
          <target state="translated">Chef 서버의 구성 유형입니다. 가능한 값은 &lt;code&gt;backend&lt;/code&gt; , &lt;code&gt;frontend&lt;/code&gt; 또는 &lt;code&gt;standalone&lt;/code&gt; 입니다. 기본값 : &lt;code&gt;'standalone'&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="d9d0f9cde602de69e23d818f58d034176b63881d" translate="yes" xml:space="preserve">
          <source>The connection source to which PostgreSQL is to respond. Default value: &lt;code&gt;localhost&lt;/code&gt;.</source>
          <target state="translated">PostgreSQL이 응답 할 연결 소스입니다. 기본 값 : &lt;code&gt;localhost&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3d5e85cabc90b8266e593e7ca5c4a65ad1a9c5f8" translate="yes" xml:space="preserve">
          <source>The content of the template itself may look like this:</source>
          <target state="translated">템플릿 자체의 내용은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="a17ac5ba314706dc7bca8e739f4b2fb950c4c23e" translate="yes" xml:space="preserve">
          <source>The contents of a data bag can be loaded into a recipe. For example, a data bag named &lt;code&gt;apps&lt;/code&gt; and a data bag item named &lt;code&gt;my_app&lt;/code&gt;:</source>
          <target state="translated">데이터 백의 내용물을 레시피에로드 할 수 있습니다. 예를 들어 &lt;code&gt;apps&lt;/code&gt; 라는 데이터 백과 &lt;code&gt;my_app&lt;/code&gt; 라는 데이터 백 항목이 있습니다 .</target>
        </trans-unit>
        <trans-unit id="84df3e20135a7ad0d7483c09c7ad9b50e066ce8f" translate="yes" xml:space="preserve">
          <source>The context from which a command is run matters. For example, when working in the &lt;code&gt;roles/&lt;/code&gt; directory, knife will know what is being worked with. Enter &lt;code&gt;knife show base.json&lt;/code&gt; and knife will return the base role from the Chef server. From the chef-repo root, enter &lt;code&gt;knife show roles/base.json&lt;/code&gt; to get the same result</source>
          <target state="translated">명령이 실행되는 컨텍스트가 중요합니다. 예를 들어, &lt;code&gt;roles/&lt;/code&gt; 디렉토리 에서 작업 할 때 knife는 작업중인 항목을 알게됩니다. &lt;code&gt;knife show base.json&lt;/code&gt; 을 입력 하면 knife가 Chef 서버에서 기본 역할을 리턴합니다. chef-repo 루트에서 &lt;code&gt;knife show roles/base.json&lt;/code&gt; 을 입력 하여 동일한 결과를 얻으십시오.</target>
        </trans-unit>
        <trans-unit id="ca7b2ebc1173ce6e99226e189458d4defcfee1a1" translate="yes" xml:space="preserve">
          <source>The cookbook category: &lt;code&gt;&quot;Databases&quot;&lt;/code&gt;, &lt;code&gt;&quot;Web Servers&quot;&lt;/code&gt;, &lt;code&gt;&quot;Process Management&quot;&lt;/code&gt;, &lt;code&gt;&quot;Monitoring &amp;amp; Trending&quot;&lt;/code&gt;, &lt;code&gt;&quot;Programming Languages&quot;&lt;/code&gt;, &lt;code&gt;&quot;Package Management&quot;&lt;/code&gt;, &lt;code&gt;&quot;Applications&quot;&lt;/code&gt;, &lt;code&gt;&quot;Networking&quot;&lt;/code&gt;, &lt;code&gt;&quot;Operating Systems &amp;amp; Virtualization&quot;&lt;/code&gt;, &lt;code&gt;&quot;Utilities&quot;&lt;/code&gt;, or &lt;code&gt;&quot;Other&quot;&lt;/code&gt;.</source>
          <target state="translated">요리 책 범주 : &lt;code&gt;&quot;Databases&quot;&lt;/code&gt; , &lt;code&gt;&quot;Web Servers&quot;&lt;/code&gt; , &lt;code&gt;&quot;Process Management&quot;&lt;/code&gt; , &lt;code&gt;&quot;Monitoring &amp;amp; Trending&quot;&lt;/code&gt; , &lt;code&gt;&quot;Programming Languages&quot;&lt;/code&gt; , &lt;code&gt;&quot;Package Management&quot;&lt;/code&gt; , &lt;code&gt;&quot;Applications&quot;&lt;/code&gt; , &lt;code&gt;&quot;Networking&quot;&lt;/code&gt; , &lt;code&gt;&quot;Operating Systems &amp;amp; Virtualization&quot;&lt;/code&gt; , &lt;code&gt;&quot;Utilities&quot;&lt;/code&gt; , 또는 &lt;code&gt;&quot;Other&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="606fa01a3114d057f2314bdabd78f1dbfc8a81f1" translate="yes" xml:space="preserve">
          <source>The cookbook in which a file is located (if it is not located in the current cookbook). The default value is the current cookbook.</source>
          <target state="translated">파일이있는 요리 책 (현재 요리 책에없는 경우) 기본값은 현재 요리 책입니다.</target>
        </trans-unit>
        <trans-unit id="b1e3ac523391d4410b48603b23cc18a976668c9e" translate="yes" xml:space="preserve">
          <source>The cookbook is downloaded from &lt;a href=&quot;https://supermarket.chef.io/cookbooks&quot;&gt;https://supermarket.chef.io/cookbooks&lt;/a&gt; in the tar.gz format.</source>
          <target state="translated">요리 책은 &lt;a href=&quot;https://supermarket.chef.io/cookbooks&quot;&gt;https://supermarket.chef.io/cookbooks&lt;/a&gt; 에서 tar.gz 형식으로 다운로드 됩니다.</target>
        </trans-unit>
        <trans-unit id="6d2ad73dfd22d760d95a592e22d66630860f0648" translate="yes" xml:space="preserve">
          <source>The cookbooks (and cookbook versions) in which organization-specific configuration policies are maintained</source>
          <target state="translated">조직 별 구성 정책이 유지되는 요리 책 (및 요리 책 버전)</target>
        </trans-unit>
        <trans-unit id="60ad2d81fa65884765b4193671c747d07dfa2e10" translate="yes" xml:space="preserve">
          <source>The country in which your company is located. Default value: &lt;code&gt;US&lt;/code&gt;.</source>
          <target state="translated">회사가 위치한 국가 기본 값 : &lt;code&gt;US&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="edbd6d97ecd99c69fb9f12adf04f03f75d5ffcd6" translate="yes" xml:space="preserve">
          <source>The creation of required user and group identifiers is done &lt;strong&gt;automatically&lt;/strong&gt; during the installation process for the Chef server; however, the following user and group accounts &lt;strong&gt;may&lt;/strong&gt; be created in advance of installing the Chef server if specific UIDs and GIDs are preferred. The user &lt;strong&gt;and&lt;/strong&gt; group must be created as a pair to satisfy reconfiguration requirements.</source>
          <target state="translated">필요한 사용자 및 그룹 식별자의 작성은 Chef 서버의 설치 ​​프로세스 중에 &lt;strong&gt;자동으로&lt;/strong&gt; 수행 &lt;strong&gt;됩니다&lt;/strong&gt; . 그러나 특정 UID 및 GID를 선호하는 경우 Chef 서버를 설치하기 전에 다음 사용자 및 그룹 계정을 만들 &lt;strong&gt;수&lt;/strong&gt; 있습니다. 재구성 요구 사항을 충족 시키려면 사용자 &lt;strong&gt;및&lt;/strong&gt; 그룹을 쌍으로 작성해야합니다.</target>
        </trans-unit>
        <trans-unit id="275dc178eddfa0bd728703e3b4679c7d792f1104" translate="yes" xml:space="preserve">
          <source>The creator of an object on the Chef server is assigned &lt;code&gt;create&lt;/code&gt;, &lt;code&gt;delete&lt;/code&gt;, &lt;code&gt;grant&lt;/code&gt;, &lt;code&gt;read&lt;/code&gt;, and &lt;code&gt;update&lt;/code&gt; permission to that object.</source>
          <target state="translated">Chef 서버에서 오브젝트의 작성자에게는 해당 오브젝트에 대한 &lt;code&gt;create&lt;/code&gt; , &lt;code&gt;delete&lt;/code&gt; , &lt;code&gt;grant&lt;/code&gt; , &lt;code&gt;read&lt;/code&gt; 및 &lt;code&gt;update&lt;/code&gt; 권한이 지정됩니다.</target>
        </trans-unit>
        <trans-unit id="ad277e6db1842c21f868344cd95f5abef282b1fc" translate="yes" xml:space="preserve">
          <source>The current run-list is shown in the lower right:</source>
          <target state="translated">현재 실행 목록은 오른쪽 아래에 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="4ef88e6faa4abfdcd0421852c41f8573ef8c2d52" translate="yes" xml:space="preserve">
          <source>The current state of the node</source>
          <target state="translated">노드의 현재 상태</target>
        </trans-unit>
        <trans-unit id="f566188515f3ca9a75448057d842002e1e341e6a" translate="yes" xml:space="preserve">
          <source>The current state of the server is &lt;code&gt;master&lt;/code&gt; or &lt;code&gt;backup&lt;/code&gt;; any migration processes have completed</source>
          <target state="translated">서버의 현재 상태는 &lt;code&gt;master&lt;/code&gt; 또는 &lt;code&gt;backup&lt;/code&gt; . 모든 마이그레이션 프로세스가 완료되었습니다</target>
        </trans-unit>
        <trans-unit id="c7b06582259057228fd1af7a14bc3b2f593a2dde" translate="yes" xml:space="preserve">
          <source>The current version of a cookbook. Version numbers always follow a simple three-number version sequence.</source>
          <target state="translated">요리 책의 현재 버전. 버전 번호는 항상 간단한 3 자리 버전 순서를 따릅니다.</target>
        </trans-unit>
        <trans-unit id="d3d15f57ac5fa57ede0743af5d6acf13baf57a28" translate="yes" xml:space="preserve">
          <source>The current working directory from which a command is run.</source>
          <target state="translated">명령이 실행되는 현재 작업 디렉토리</target>
        </trans-unit>
        <trans-unit id="268d2c468f4cf886bd407fa2469d0930bf3c8acc" translate="yes" xml:space="preserve">
          <source>The current working directory.</source>
          <target state="translated">현재 작업 디렉토리</target>
        </trans-unit>
        <trans-unit id="aace418e21b7406b6778f6a5fb3022cdf16dc2fc" translate="yes" xml:space="preserve">
          <source>The custom resource name is inferred from the name of the cookbook (&lt;code&gt;website&lt;/code&gt;), the name of the recipe (&lt;code&gt;httpd&lt;/code&gt;), and is separated by an underscore(&lt;code&gt;_&lt;/code&gt;): &lt;code&gt;website_httpd&lt;/code&gt;.</source>
          <target state="translated">사용자 정의 자원 이름은 요리 책 이름 ( &lt;code&gt;website&lt;/code&gt; ), 레시피 이름 ( &lt;code&gt;httpd&lt;/code&gt; ) 에서 유추되며 밑줄 ( &lt;code&gt;_&lt;/code&gt; ) : &lt;code&gt;website_httpd&lt;/code&gt; 로 구분됩니다 .</target>
        </trans-unit>
        <trans-unit id="3e020a9af3b606cb37248cbd4c4268881d89c55d" translate="yes" xml:space="preserve">
          <source>The data bag item&amp;rsquo;s keys and values can be accessed with a Hash:</source>
          <target state="translated">데이터 백 항목의 키와 값은 해시로 액세스 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="aa23b832b45d362ca8e8ace4b34d434e55812409" translate="yes" xml:space="preserve">
          <source>The data bag itself must already exist on the Chef server and must be specified as part of the command. The contents of the data bag item are specified using a JSON file. This JSON file may be located at a relative or absolute path; its location must be specified as part of the command. The JSON file that defines the contents of the data bag item must at least contain the name of the data bag item&amp;mdash;&lt;code&gt;&quot;id&quot;: &quot;name&quot;&lt;/code&gt;.</source>
          <target state="translated">데이터 백 자체는 Chef 서버에 이미 존재해야하며 명령의 일부로 지정되어야합니다. 데이터 백 항목의 내용은 JSON 파일을 사용하여 지정됩니다. 이 JSON 파일은 상대 또는 절대 경로에있을 수 있습니다. 위치는 명령의 일부로 지정해야합니다. 데이터 백 항목의 내용을 정의하는 JSON 파일은 최소한 데이터 백 항목의 이름 ( &lt;code&gt;&quot;id&quot;: &quot;name&quot;&lt;/code&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="20e33964c39cc82a058b709c91dac29c0a709a1a" translate="yes" xml:space="preserve">
          <source>The day of month at which the cron entry should run (1 - 31). Default value: &lt;code&gt;*&lt;/code&gt;.</source>
          <target state="translated">cron 항목이 실행될 달 (1-31)입니다. 기본값 : &lt;code&gt;*&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6f90746db094d32078950c1f8cc40799deb69fc8" translate="yes" xml:space="preserve">
          <source>The day of the week on which this entry is to run (0 - 6), where Sunday = 0. Default value: &lt;code&gt;*&lt;/code&gt;.</source>
          <target state="translated">이 항목이 실행될 요일 (0-6), 여기서 일요일 = 0입니다. 기본값 : &lt;code&gt;*&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="76b9e018924c249aba53aed63f3d6b09a7d96764" translate="yes" xml:space="preserve">
          <source>The decimal representation of the network mask. For example: &lt;code&gt;255.255.255.0&lt;/code&gt;.</source>
          <target state="translated">네트워크 마스크의 10 진수 표현입니다. 예를 들어 : &lt;code&gt;255.255.255.0&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="91974dc9abefe1146078bde3bdb27aaf23e2b619" translate="yes" xml:space="preserve">
          <source>The default action in a custom resource is, by default, the first action listed in the custom resource. For example, action &lt;code&gt;aaaaa&lt;/code&gt; is the default resource:</source>
          <target state="translated">기본적으로 사용자 정의 자원의 기본 조치는 사용자 정의 자원에 나열된 첫 번째 조치입니다. 예를 들어, &lt;code&gt;aaaaa&lt;/code&gt; 조치 는 기본 자원입니다.</target>
        </trans-unit>
        <trans-unit id="efd75700350d59ab95060ee927df81ea5da28efa" translate="yes" xml:space="preserve">
          <source>The default configuration of the chef-client assumes that it is run as the root user. This affords the chef-client the greatest flexibility when managing the state of any object. However, the chef-client may be run as a non-root user&amp;mdash;i.e. &amp;ldquo;run as a user with limited system privileges&amp;rdquo;&amp;mdash;which can be useful when the objects on the system are available to other user accounts.</source>
          <target state="translated">chef-client의 기본 구성은 루트 사용자로 실행되는 것으로 가정합니다. 이를 통해 주방장 고객은 모든 물건의 상태를 관리 할 때 최고의 유연성을 얻을 수 있습니다. 그러나 chef-client는 루트가 아닌 사용자로 실행될 수 있습니다 (예 : &quot;제한된 시스템 권한을 가진 사용자로 실행&quot;). 시스템의 오브젝트를 다른 사용자 계정에서 사용할 수있을 때 유용 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c773f96cc287a6303da9fe10c71c807fdf202ffc" translate="yes" xml:space="preserve">
          <source>The default directory in which hint files are located is &lt;code&gt;/etc/chef/ohai/hints/&lt;/code&gt;. Use the &lt;code&gt;Ohai::Config[:hints_path]&lt;/code&gt; setting in the client.rb file to customize this location.</source>
          <target state="translated">힌트 파일이있는 기본 디렉토리는 &lt;code&gt;/etc/chef/ohai/hints/&lt;/code&gt; 입니다. 사용 &lt;code&gt;Ohai::Config[:hints_path]&lt;/code&gt; 이 위치를 사용자 정의 할 client.rb 파일에 설정합니다.</target>
        </trans-unit>
        <trans-unit id="12d545fa52dd1df6feae3ad28a1341a1b8f43f38" translate="yes" xml:space="preserve">
          <source>The default email address for your company. Default value: &lt;code&gt;you@example.com&lt;/code&gt;.</source>
          <target state="translated">회사의 기본 이메일 주소입니다. 기본 값 : &lt;code&gt;you@example.com&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d10b3fe0eca76605b00f1dab7697050318942abb" translate="yes" xml:space="preserve">
          <source>The default location in which chef-solo expects to find this file is &lt;code&gt;/etc/chef/solo.rb&lt;/code&gt;; use the &lt;code&gt;--config&lt;/code&gt; option from the command line to change this location</source>
          <target state="translated">chef-solo가이 파일을 찾을 것으로 예상되는 기본 위치는 &lt;code&gt;/etc/chef/solo.rb&lt;/code&gt; 입니다 . 사용 &lt;code&gt;--config&lt;/code&gt; 이 위치를 변경하려면 명령 줄에서 옵션을</target>
        </trans-unit>
        <trans-unit id="ef7850e38294874c1bcb787072745ce5ccf70bea" translate="yes" xml:space="preserve">
          <source>The default maximum allowable size for a node object is 1MB, although it is rare for nodes to exceed 150KB. Though compressed, this data is replicated twice, once in Apache Solr, and once in PostgreSQL. In practice, allowing a conservative 2MB of storage on the disk partition per node should be sufficient</source>
          <target state="translated">노드가 150KB를 초과하는 경우는 드물지만 노드 객체의 기본 최대 허용 크기는 1MB입니다. 압축되었지만이 데이터는 Apache Solr에서 한 번, PostgreSQL에서 한 번, 두 번 복제됩니다. 실제로, 노드 당 디스크 파티션에 2MB의 보존 적 스토리지를 허용하면 충분합니다.</target>
        </trans-unit>
        <trans-unit id="63c2758f50b2edf5d6899d079110d550b337d924" translate="yes" xml:space="preserve">
          <source>The default provider for all platforms, except for Microsoft Windows.</source>
          <target state="translated">Microsoft Windows를 제외한 모든 플랫폼의 기본 공급자입니다.</target>
        </trans-unit>
        <trans-unit id="a8c88870e14283e732a65686bd228e34b25be477" translate="yes" xml:space="preserve">
          <source>The default provider for all platforms.</source>
          <target state="translated">모든 플랫폼의 기본 공급자입니다.</target>
        </trans-unit>
        <trans-unit id="65b6dfa7bdd03d622d9d75ac93db602443c76dc2" translate="yes" xml:space="preserve">
          <source>The default provider for all platforms. See below for more information.</source>
          <target state="translated">모든 플랫폼의 기본 공급자입니다. 자세한 내용은 아래를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="7d5e54b6b5d6d77cf5527ec3c70825e6a93f0324" translate="yes" xml:space="preserve">
          <source>The default provider for all recipes.</source>
          <target state="translated">모든 레시피의 기본 공급자.</target>
        </trans-unit>
        <trans-unit id="d648cde54f95abc7c578a9454eded5db4f3b0c0a" translate="yes" xml:space="preserve">
          <source>The default provider for the &lt;strong&gt;user&lt;/strong&gt; resource.</source>
          <target state="translated">&lt;strong&gt;사용자&lt;/strong&gt; 리소스 의 기본 공급자입니다 .</target>
        </trans-unit>
        <trans-unit id="4a4782a41ef21eb4f375ed3a3a9fa25ce66f4edb" translate="yes" xml:space="preserve">
          <source>The default provider for the Microsoft Windows platform.</source>
          <target state="translated">Microsoft Windows 플랫폼의 기본 제공자입니다.</target>
        </trans-unit>
        <trans-unit id="23bc329ad8d6daad39919668de60e60a7ce490c2" translate="yes" xml:space="preserve">
          <source>The default release. For example: &lt;code&gt;stable&lt;/code&gt;.</source>
          <target state="translated">기본 릴리스. 예를 들어, &lt;code&gt;stable&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="ab311b80179d8efa93cd0889d1a7301e6ac2bb3a" translate="yes" xml:space="preserve">
          <source>The default value</source>
          <target state="translated">기본값</target>
        </trans-unit>
        <trans-unit id="45de37ca0f101155a281ccb32d4642f6b7c727d0" translate="yes" xml:space="preserve">
          <source>The default value for &lt;code&gt;opscode_solr4['heap_size']&lt;/code&gt; should work for many organizations, especially those with fewer than 25 nodes. For organizations with more than 25 nodes, set this value to 25% of system memory or &lt;code&gt;1024&lt;/code&gt;, whichever is smaller. For very large configurations, increase this value to 25% of system memory or &lt;code&gt;4096&lt;/code&gt;, whichever is smaller. This value should not exceed &lt;code&gt;8192&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;opscode_solr4['heap_size']&lt;/code&gt; 의 기본값 은 많은 조직, 특히 25 개 미만의 노드가있는 조직에서 작동합니다. 노드가 25 개를 초과하는 조직의 경우이 값을 시스템 메모리의 25 % 또는 &lt;code&gt;1024&lt;/code&gt; 중 더 작은 값으로 설정하십시오 . 매우 큰 구성의 경우이 값을 시스템 메모리의 25 % 또는 &lt;code&gt;4096&lt;/code&gt; 중 더 작은 값으로 늘리십시오 . 이 값은 &lt;code&gt;8192&lt;/code&gt; 를 초과하지 않아야 합니다.</target>
        </trans-unit>
        <trans-unit id="2eecee529f36dae51d5b12d82549345d306acd66" translate="yes" xml:space="preserve">
          <source>The default value is the recommended value. Default value: &lt;code&gt;[ '127.0.0.1' ]&lt;/code&gt;.</source>
          <target state="translated">기본값은 권장 값입니다. 기본값 : &lt;code&gt;[ '127.0.0.1' ]&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="aa6439b3881727ad178baa034abed654ea5ea0a1" translate="yes" xml:space="preserve">
          <source>The default value is the recommended value. Default value: &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">기본값은 권장 값입니다. 기본 값 : &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="053fda8737c7e6ed173908d382f6ff01b117646f" translate="yes" xml:space="preserve">
          <source>The default value is the recommended value. Default value: &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">기본값은 권장 값입니다. 기본 값 : &lt;code&gt;true&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2c2de79ddea64dd9a8e032b47d401a9f2e6fc3f2" translate="yes" xml:space="preserve">
          <source>The defaults for CentOS and Red Hat Enterprise Linux systems look like this:</source>
          <target state="translated">CentOS 및 Red Hat Enterprise Linux 시스템의 기본값은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="ef6a64d2cfb2f84886acb34da630aa0d9ef97361" translate="yes" xml:space="preserve">
          <source>The definition is improved by rewriting it as a custom resource:</source>
          <target state="translated">사용자 정의 자원으로 다시 작성하여 정의가 개선되었습니다.</target>
        </trans-unit>
        <trans-unit id="6cef8608e7eca642c9ed02c6f0eaf60e0b784576" translate="yes" xml:space="preserve">
          <source>The delay (in seconds) between retry attempts. Default value: &lt;code&gt;5&lt;/code&gt;.</source>
          <target state="translated">재시도 사이의 지연 시간 (초). 초기 값 : &lt;code&gt;5&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="743cd188d008f4a3cc1c679ca7c4a557006db3ff" translate="yes" xml:space="preserve">
          <source>The delimiter that is used to separate multiple values for a single key.</source>
          <target state="translated">단일 키의 여러 값을 구분하는 데 사용되는 구분 기호입니다.</target>
        </trans-unit>
        <trans-unit id="e90e845977652b6893e41508a7dc6c7536e71ef3" translate="yes" xml:space="preserve">
          <source>The deployment of the app will end up in &lt;code&gt;/srv&lt;/code&gt;, so the full path to this template would be something like &lt;code&gt;/srv/myapp/current/config/database.yml.erb&lt;/code&gt;.</source>
          <target state="translated">앱 배포는 &lt;code&gt;/srv&lt;/code&gt; 에있게 &lt;code&gt;/srv/myapp/current/config/database.yml.erb&lt;/code&gt; 템플릿의 전체 경로는 /srv/myapp/current/config/database.yml.erb 와 같습니다 .</target>
        </trans-unit>
        <trans-unit id="89dbe6dd7de556c22330cdfa069d96d1581cefe0" translate="yes" xml:space="preserve">
          <source>The depth of a git repository, truncated to the specified number of revisions. See &lt;code&gt;shallow_clone&lt;/code&gt;.</source>
          <target state="translated">지정된 리비전 수로 잘린 git 저장소의 깊이입니다. &lt;code&gt;shallow_clone&lt;/code&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="163f51579b4e081a8276b848813a0dccd201c6bc" translate="yes" xml:space="preserve">
          <source>The description for an environment and/or a role.</source>
          <target state="translated">환경 및 / 또는 역할에 대한 설명.</target>
        </trans-unit>
        <trans-unit id="92a43ecc39afa7ddb5868629b11a6e75059cfb0c" translate="yes" xml:space="preserve">
          <source>The description of the environment. This value populates the description field for the environment on the Chef server.</source>
          <target state="translated">환경에 대한 설명. 이 값은 Chef 서버의 환경에 대한 설명 필드를 채 웁니다.</target>
        </trans-unit>
        <trans-unit id="2530ca73053df9e519fafe439627fae5e9efb921" translate="yes" xml:space="preserve">
          <source>The description of the role. This value populates the description field for the role on the Chef server.</source>
          <target state="translated">역할에 대한 설명입니다. 이 값은 Chef 서버에서 역할에 대한 설명 필드를 채 웁니다.</target>
        </trans-unit>
        <trans-unit id="7b1049e684adec76b4feaef939a0f8705608fe6c" translate="yes" xml:space="preserve">
          <source>The desired approach just depends on the desired workflow. For example, if a node requires a new file every day, using the checksum approach would require that the local checksum be updated and/or verified every day as well, in order to ensure that the local checksum was the correct one. Using a conditional &lt;code&gt;GET&lt;/code&gt; in this scenario will greatly simplify the management required to ensure files are being updated accurately.</source>
          <target state="translated">원하는 접근 방식은 원하는 워크 플로에 따라 다릅니다. 예를 들어, 노드에 매일 새 파일이 필요한 경우, 체크섬 방식을 사용하려면 로컬 체크섬이 올바른지 확인하기 위해 매일 로컬 체크섬을 업데이트 및 / 또는 확인해야합니다. 이 시나리오에서 조건부 &lt;code&gt;GET&lt;/code&gt; 을 사용하면 파일을 정확하게 업데이트하는 데 필요한 관리가 크게 간소화됩니다.</target>
        </trans-unit>
        <trans-unit id="af48f4004019cb27a21c25f63ba1813a4815b2d2" translate="yes" xml:space="preserve">
          <source>The device to which the virtual IP address is added. Default value: &lt;code&gt;'eth0'&lt;/code&gt;.</source>
          <target state="translated">가상 IP 주소가 추가 된 장치입니다. 기본 값 : &lt;code&gt;'eth0'&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9eb7654eb5f9fe3e3a981aa2d9afac52c66c471c" translate="yes" xml:space="preserve">
          <source>The difference between the two previous examples is the single- versus double-quoted strings, where if the double quotes are used, the backslash character (&lt;code&gt;\&lt;/code&gt;) must be escaped using the Ruby escape character (which is a backslash).</source>
          <target state="translated">이전 두 예제의 차이점은 작은 따옴표와 큰 따옴표로 묶은 문자열입니다. 큰 따옴표를 사용하는 경우 백 슬래시 문자 ( &lt;code&gt;\&lt;/code&gt; )는 Ruby 이스케이프 문자 (백 슬래시)를 사용하여 이스케이프해야합니다.</target>
        </trans-unit>
        <trans-unit id="374e0667751b38189c2771846fb359904c95278b" translate="yes" xml:space="preserve">
          <source>The directory (or path) in which the device is to be mounted. Default value: the &lt;code&gt;name&lt;/code&gt; of the resource block See &amp;ldquo;Syntax&amp;rdquo; section above for more information.</source>
          <target state="translated">장치가 마운트 될 디렉토리 (또는 경로). 기본값 : 리소스 블록 &lt;code&gt;name&lt;/code&gt; 자세한 내용은 위의 &quot;구문&quot;섹션을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="1e209aed93248fcd458429b4cbdb8e8feea723ca" translate="yes" xml:space="preserve">
          <source>The directory in which &lt;code&gt;opscode-expander-reindexer&lt;/code&gt; logs files are located. Default value:</source>
          <target state="translated">&lt;code&gt;opscode-expander-reindexer&lt;/code&gt; 로그 파일이 있는 디렉토리 입니다. 기본값:</target>
        </trans-unit>
        <trans-unit id="9556ddbaa223b1af95936575d47eaa34cb09f2ae" translate="yes" xml:space="preserve">
          <source>The directory in which Chef server 12 data is located. Default value: a temporary directory.</source>
          <target state="translated">Chef 서버 12 데이터가있는 디렉토리입니다. 기본값 : 임시 디렉토리</target>
        </trans-unit>
        <trans-unit id="c5de4b318b27f974b06d1fa3ea9beef5e438a23e" translate="yes" xml:space="preserve">
          <source>The directory in which Ohai plugins are located.</source>
          <target state="translated">Ohai 플러그인이있는 디렉토리입니다.</target>
        </trans-unit>
        <trans-unit id="9bc1d6167d9bbb033980f4dcbd13b3aabf18472a" translate="yes" xml:space="preserve">
          <source>The directory in which Open Source Chef 11 data is located. Default value: a temporary directory.</source>
          <target state="translated">Open Source Chef 11 데이터가있는 디렉토리입니다. 기본값 : 임시 디렉토리</target>
        </trans-unit>
        <trans-unit id="b2b5e8764e39de6835bd977606752a6b13a85399" translate="yes" xml:space="preserve">
          <source>The directory in which cookbooks are created. This can be a colon-separated path.</source>
          <target state="translated">요리 책이 만들어지는 디렉토리. 콜론으로 구분 된 경로 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e10121097597a970fca2631cd747577d0b859e96" translate="yes" xml:space="preserve">
          <source>The directory in which cookbooks are located.</source>
          <target state="translated">요리 책이있는 디렉토리.</target>
        </trans-unit>
        <trans-unit id="1919efba8692ea2d96f1269a647b52256cab8834" translate="yes" xml:space="preserve">
          <source>The directory in which log data is stored. The default value is the recommended value. Default value:</source>
          <target state="translated">로그 데이터가 저장되는 디렉토리입니다. 기본값은 권장 값입니다. 기본값:</target>
        </trans-unit>
        <trans-unit id="e73343ca0b500799e2b2cb2cc36ca75a6c044b63" translate="yes" xml:space="preserve">
          <source>The directory in which log data is stored. The default value is the recommended value. Default value: &lt;code&gt;'/var/log/opscode/estatsd'&lt;/code&gt;.</source>
          <target state="translated">로그 데이터가 저장되는 디렉토리입니다. 기본값은 권장 값입니다. 기본값은 &lt;code&gt;'/var/log/opscode/estatsd'&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="541075e2e3f2e6376fa3a30a663f76b0dfb54400" translate="yes" xml:space="preserve">
          <source>The directory in which log data is stored. The default value is the recommended value. Default value: &lt;code&gt;'/var/log/opscode/keepalived'&lt;/code&gt;.</source>
          <target state="translated">로그 데이터가 저장되는 디렉토리입니다. 기본값은 권장 값입니다. 기본 값 : &lt;code&gt;'/var/log/opscode/keepalived'&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="97ecf93a6905b847d79bb8f7bcfb19842072929d" translate="yes" xml:space="preserve">
          <source>The directory in which log data is stored. The default value is the recommended value. Default value: &lt;code&gt;'/var/log/opscode/rabbitmq'&lt;/code&gt;.</source>
          <target state="translated">로그 데이터가 저장되는 디렉토리입니다. 기본값은 권장 값입니다. 기본값은 &lt;code&gt;'/var/log/opscode/rabbitmq'&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="0970ffedd4554e6dfaafb5ef925476ecfab88cd6" translate="yes" xml:space="preserve">
          <source>The directory in which log data is stored. The default value is the recommended value. Default value: &lt;code&gt;'/var/log/opscode/redis_lb'&lt;/code&gt;.</source>
          <target state="translated">로그 데이터가 저장되는 디렉토리입니다. 기본값은 권장 값입니다. 기본값은 &lt;code&gt;'/var/log/opscode/redis_lb'&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="1d63f9af11094b509192ea3da7932cc441613d0c" translate="yes" xml:space="preserve">
          <source>The directory in which log data is stored. The default value is the recommended value. Default value: &lt;code&gt;'/var/opt/opscode/oc_id'&lt;/code&gt;.</source>
          <target state="translated">로그 데이터가 저장되는 디렉토리입니다. 기본값은 권장 값입니다. 기본값은 &lt;code&gt;'/var/opt/opscode/oc_id'&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="43f5948756f52ec47f7ae39aac48fc2bff5b9f73" translate="yes" xml:space="preserve">
          <source>The directory in which log data is stored. The default value is the recommended value. Default value: &lt;code&gt;/var/log/opscode/bookshelf&lt;/code&gt;.</source>
          <target state="translated">로그 데이터가 저장되는 디렉토리입니다. 기본값은 권장 값입니다. 기본값은 &lt;code&gt;/var/log/opscode/bookshelf&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="1468fc4594a6788530b706ddad29065e70600738" translate="yes" xml:space="preserve">
          <source>The directory in which log data is stored. The default value is the recommended value. Default value: &lt;code&gt;/var/log/opscode/nginx&lt;/code&gt;.</source>
          <target state="translated">로그 데이터가 저장되는 디렉토리입니다. 기본값은 권장 값입니다. 초기 값 : &lt;code&gt;/var/log/opscode/nginx&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="632e518e2e21adcbf574a31ba022a9529fa29898" translate="yes" xml:space="preserve">
          <source>The directory in which log data is stored. The default value is the recommended value. Default value: &lt;code&gt;/var/log/opscode/oc_bifrost&lt;/code&gt;.</source>
          <target state="translated">로그 데이터가 저장되는 디렉토리입니다. 기본값은 권장 값입니다. 초기 값 : &lt;code&gt;/var/log/opscode/oc_bifrost&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="45f28305518222de31e0b25441358380bde7e940" translate="yes" xml:space="preserve">
          <source>The directory in which log data is stored. The default value is the recommended value. Default value: &lt;code&gt;/var/log/opscode/opscode-erchef&lt;/code&gt;.</source>
          <target state="translated">로그 데이터가 저장되는 디렉토리입니다. 기본값은 권장 값입니다. 초기 값 : &lt;code&gt;/var/log/opscode/opscode-erchef&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7057ca4557628d57cc979c967f864a06ee88e2ab" translate="yes" xml:space="preserve">
          <source>The directory in which on-disk data is stored. The default value is the recommended value. Default value:</source>
          <target state="translated">온 디스크 데이터가 저장되는 디렉토리입니다. 기본값은 권장 값입니다. 기본값:</target>
        </trans-unit>
        <trans-unit id="1069ac546479d51dd07a42e9e47d439c7cafb700" translate="yes" xml:space="preserve">
          <source>The directory in which on-disk data is stored. The default value is the recommended value. Default value: &lt;code&gt;'/var/opt/opscode/rabbitmq/db'&lt;/code&gt;.</source>
          <target state="translated">온 디스크 데이터가 저장되는 디렉토리입니다. 기본값은 권장 값입니다. 기본값은 &lt;code&gt;'/var/opt/opscode/rabbitmq/db'&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="c9c686534437a81518f113f582fadf163fab30e7" translate="yes" xml:space="preserve">
          <source>The directory in which on-disk data is stored. The default value is the recommended value. Default value: &lt;code&gt;'/var/opt/opscode/redis_lb/data'&lt;/code&gt;.</source>
          <target state="translated">온 디스크 데이터가 저장되는 디렉토리입니다. 기본값은 권장 값입니다. 기본값은 &lt;code&gt;'/var/opt/opscode/redis_lb/data'&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="b3916044e30132dff010f1b5b0d8cb430aca2517" translate="yes" xml:space="preserve">
          <source>The directory in which on-disk data is stored. The default value is the recommended value. Default value: &lt;code&gt;/var/opt/opscode/bookshelf/data&lt;/code&gt;.</source>
          <target state="translated">온 디스크 데이터가 저장되는 디렉토리입니다. 기본값은 권장 값입니다. 기본값 : &lt;code&gt;/var/opt/opscode/bookshelf/data&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="aae007ccf4d8719e566a9e1c153a4793eba3d7ed" translate="yes" xml:space="preserve">
          <source>The directory in which the Chef server is installed. Default value: &lt;code&gt;'/opt/opscode'&lt;/code&gt;.</source>
          <target state="translated">Chef 서버가 설치된 디렉토리입니다. 기본 값 : &lt;code&gt;'/opt/opscode'&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4cecb6aa684f7b50df067cd086aa51fc3bde7e94" translate="yes" xml:space="preserve">
          <source>The directory structure within the chef-repo varies. Some organizations prefer to keep all of their cookbooks in a single chef-repo, while other organizations prefer to use a chef-repo for every cookbook.</source>
          <target state="translated">chef-repo 내의 디렉토리 구조는 다양합니다. 일부 조직은 모든 ​​요리 책을 하나의 요리사 레포에 보관하고 다른 조직은 모든 ​​요리 책에 요리사 레포를 사용하는 것을 선호합니다.</target>
        </trans-unit>
        <trans-unit id="6d2d467e30306879f26c0a80529305174668c75e" translate="yes" xml:space="preserve">
          <source>The directory to which Keepalived is to send &lt;code&gt;POST&lt;/code&gt; hooks. Default value:</source>
          <target state="translated">Keepalived가있는 디렉토리는 &lt;code&gt;POST&lt;/code&gt; 후크 를 전송하는 것 입니다. 기본값:</target>
        </trans-unit>
        <trans-unit id="267741971d9d45e758c25b2b4bf4f6b2be67a4cc" translate="yes" xml:space="preserve">
          <source>The disk partition is still mounted into the file system and can be used as normal.</source>
          <target state="translated">디스크 파티션은 여전히 ​​파일 시스템에 마운트되어 있으며 정상적으로 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5b9d816aa13e3e2678b4ee207b9dfce8eb5d200c" translate="yes" xml:space="preserve">
          <source>The disk requirement for the front-end server is negligible</source>
          <target state="translated">프런트 엔드 서버의 디스크 요구 사항은 무시할 수 있습니다</target>
        </trans-unit>
        <trans-unit id="8e709a86997fccd7b2c2da367b355b302808f4fe" translate="yes" xml:space="preserve">
          <source>The disk space presents as a single device, &lt;code&gt;/dev/sdb&lt;/code&gt;</source>
          <target state="translated">디스크 공간은 단일 장치 인 &lt;code&gt;/dev/sdb&lt;/code&gt; 로 나타납니다.</target>
        </trans-unit>
        <trans-unit id="53e9609d5c5459ad33872ad286fd5bbd5c2e1970" translate="yes" xml:space="preserve">
          <source>The disk space presents as a single device. For example: &lt;code&gt;/dev/sdb&lt;/code&gt;.</source>
          <target state="translated">디스크 공간은 단일 장치로 나타납니다. 예를 들면 : &lt;code&gt;/dev/sdb&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="375695498ddf80b4cc9fd18de8d5bba70ce0e99a" translate="yes" xml:space="preserve">
          <source>The distinguished name for a group. When set to the distinguished name of a group, only members of that group can log in. This feature filters based on the &lt;code&gt;memberOf&lt;/code&gt; attribute and only works with LDAP servers that provide such an attribute. In OpenLDAP, the &lt;code&gt;memberOf&lt;/code&gt; overlay provides this attribute. For example, if the value of the &lt;code&gt;memberOf&lt;/code&gt; attribute is &lt;code&gt;CN=abcxyz,OU=users,DC=company,DC=com&lt;/code&gt;, then use:</source>
          <target state="translated">그룹의 고유 이름입니다. 그룹의 고유 이름으로 설정하면 해당 그룹의 구성원 만 로그인 할 수 있습니다.이 기능은 &lt;code&gt;memberOf&lt;/code&gt; 속성을 기준으로 필터링 하며 해당 속성을 제공하는 LDAP 서버에서만 작동합니다. OpenLDAP에서 &lt;code&gt;memberOf&lt;/code&gt; 오버레이는이 속성을 제공합니다. 예를 들어 &lt;code&gt;memberOf&lt;/code&gt; 속성 의 값 이 &lt;code&gt;CN=abcxyz,OU=users,DC=company,DC=com&lt;/code&gt; 인 경우 다음을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="170548b553171e210f51898b4f8298f9195aa679" translate="yes" xml:space="preserve">
          <source>The distinguished name used to bind to the LDAP server. The user the Chef server will use to perform LDAP searches. This is often the administrator or manager user. This user needs to have read access to all LDAP users that require authentication. The Chef server must do an LDAP search before any user can log in. Many Active Directory and LDAP systems do not allow an anonymous bind. If anonymous bind is allowed, leave the &lt;code&gt;bind_dn&lt;/code&gt; and &lt;code&gt;bind_password&lt;/code&gt; settings blank. If anonymous bind is not allowed, a user with &lt;code&gt;READ&lt;/code&gt; access to the directory is required. This user must be specified as an LDAP distinguished name similar to:</source>
          <target state="translated">LDAP 서버에 바인드하는 데 사용되는 식별 이름입니다. Chef 서버가 LDAP 검색을 수행하는 데 사용할 사용자입니다. 이것은 종종 관리자 또는 관리자 사용자입니다. 이 사용자는 인증이 필요한 모든 LDAP 사용자에게 읽기 권한이 있어야합니다. Chef 서버는 사용자가 로그인하기 전에 LDAP 검색을 수행해야합니다. 많은 Active Directory 및 LDAP 시스템은 익명 바인드를 허용하지 않습니다. 익명 바인드가 허용되면 &lt;code&gt;bind_dn&lt;/code&gt; 및 &lt;code&gt;bind_password&lt;/code&gt; 설정을 비워 두십시오. 익명 바인드가 허용되지 않으면 디렉토리에 대한 &lt;code&gt;READ&lt;/code&gt; 권한이 있는 사용자 가 필요합니다. 이 사용자는 다음과 유사한 LDAP 식별 이름으로 지정해야합니다.</target>
        </trans-unit>
        <trans-unit id="1daa0dbebb03c277e6e5e782ce06f55e93ae7533" translate="yes" xml:space="preserve">
          <source>The document format of the readme file: &lt;code&gt;md&lt;/code&gt; (markdown) and &lt;code&gt;rdoc&lt;/code&gt; (Ruby docs).</source>
          <target state="translated">readme 파일의 문서 형식은 &lt;code&gt;md&lt;/code&gt; (markdown) 및 &lt;code&gt;rdoc&lt;/code&gt; (Ruby docs)입니다.</target>
        </trans-unit>
        <trans-unit id="0e48de6283e66ac5488813ce8a746a01d236e006" translate="yes" xml:space="preserve">
          <source>The domain for the node.</source>
          <target state="translated">노드의 도메인</target>
        </trans-unit>
        <trans-unit id="27ced8d27bf1d6852ed54855b0b622e51cd045f3" translate="yes" xml:space="preserve">
          <source>The downloaded cookbook is untarred and its contents are committed to git and a tag is created.</source>
          <target state="translated">다운로드 한 요리 책은 압축이 풀리고 내용은 커밋되어 태그가 생성됩니다.</target>
        </trans-unit>
        <trans-unit id="cb8d74ce14bb7ee1d32e781413276d86c24a04db" translate="yes" xml:space="preserve">
          <source>The dump frequency (in days) used while creating a file systems table (fstab) entry. Default value: &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="translated">파일 시스템 테이블 (fstab) 항목을 작성하는 동안 사용 된 덤프 빈도 (일)입니다. 초기 값 : &lt;code&gt;0&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5870bf0879d5d00f257ec9fc6cedbcdfbac48d73" translate="yes" xml:space="preserve">
          <source>The email address for the individual who maintains the cookbook. This option places an email address in each of the pre-created files. If not specified, an email name of &amp;ldquo;YOUR_EMAIL&amp;rdquo; is used instead; this can easily be modified later.</source>
          <target state="translated">요리 책을 관리하는 개인의 이메일 주소입니다. 이 옵션은 사전 작성된 각 파일에 이메일 주소를 배치합니다. 지정하지 않으면&amp;ldquo;YOUR_EMAIL&amp;rdquo;이라는 전자 메일 이름이 대신 사용됩니다. 나중에 쉽게 수정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="034804ebdf96730eb9ef3363de76ce8f54a43361" translate="yes" xml:space="preserve">
          <source>The email address for the person responsible for maintaining a cookbook. Only one email can be listed here, so if this needs to be forwarded to multiple people consider using an email address that is already setup for mail forwarding.</source>
          <target state="translated">요리 책을 관리하는 담당자의 이메일 주소입니다. 여기에는 하나의 이메일 만 나열 될 수 있으므로 여러 사람에게 전달해야하는 경우 이미 메일 전달을 위해 설정된 이메일 주소를 사용하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="2b7af2952b2406966d273bd981c46855f002e96c" translate="yes" xml:space="preserve">
          <source>The email address from which Chef server notifications are sent. Default value: &lt;code&gt;'Chef Notifications &amp;lt;notifications@chef.io&amp;gt;'&lt;/code&gt;.</source>
          <target state="translated">Chef 서버 알림이 전송되는 이메일 주소입니다. 기본값 : &lt;code&gt;'Chef Notifications &amp;lt;notifications@chef.io&amp;gt;'&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="307358d5b7b08e90f259d3d70292d364891c4a4a" translate="yes" xml:space="preserve">
          <source>The email address from which invitations to the Chef management console are sent. Default value: &lt;code&gt;'&quot;Opscode&quot; &amp;lt;donotreply@opscode.com&amp;gt;'&lt;/code&gt;.</source>
          <target state="translated">Chef 관리 콘솔 초대장이 발송되는 이메일 주소입니다. 기본값 : &lt;code&gt;'&quot;Opscode&quot; &amp;lt;donotreply@opscode.com&amp;gt;'&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4dfb6c7334b6a5ee60dae6ea20ede0581b0bcab1" translate="yes" xml:space="preserve">
          <source>The email address used to send feedback. Default value: &lt;code&gt;support@chef.io&lt;/code&gt;.</source>
          <target state="translated">의견을 보내는 데 사용되는 이메일 주소입니다. 기본값은 &lt;code&gt;support@chef.io&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="f0accc4c14332baf393d6734c2768e16cccc0049" translate="yes" xml:space="preserve">
          <source>The email addressed to which email notifications are sent. Default value: &lt;code&gt;'pc-default@opscode.com'&lt;/code&gt;.</source>
          <target state="translated">이메일 알림이 발송 된 이메일입니다. 기본값은 &lt;code&gt;'pc-default@opscode.com'&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="6f12cd30c758bc35b90e861d20f0cb401a7d863e" translate="yes" xml:space="preserve">
          <source>The embedded Chef server cookbooks can handle two cases:</source>
          <target state="translated">내장 된 Chef 서버 쿡북은 두 가지 경우를 처리 할 수 ​​있습니다.</target>
        </trans-unit>
        <trans-unit id="ef532921224aeab3639f0e65518653eab1d07ef8" translate="yes" xml:space="preserve">
          <source>The encryption key that is used for values contained within a data bag item.</source>
          <target state="translated">데이터 백 항목에 포함 된 값에 사용되는 암호화 키입니다.</target>
        </trans-unit>
        <trans-unit id="5f196a70225d49a8de774c0e88ea42802fb47d8d" translate="yes" xml:space="preserve">
          <source>The encryption key that is used for values contained within a data bag item. If &lt;code&gt;secret&lt;/code&gt; is not specified, the chef-client looks for a secret at the path specified by the &lt;code&gt;encrypted_data_bag_secret&lt;/code&gt; setting in the client.rb file.</source>
          <target state="translated">데이터 백 항목에 포함 된 값에 사용되는 암호화 키입니다. 경우 &lt;code&gt;secret&lt;/code&gt; 지정되지 않은 경로에서 비밀의 요리사 클라이언트 외모에 의해 지정된 &lt;code&gt;encrypted_data_bag_secret&lt;/code&gt; 의 client.rb 파일에 설정.</target>
        </trans-unit>
        <trans-unit id="5a9eca982f825cb962d47d68eed2a0f9fb4e2ed3" translate="yes" xml:space="preserve">
          <source>The environment is a Ruby on Rails application that needs render a file named &lt;code&gt;database.yml&lt;/code&gt;</source>
          <target state="translated">환경은 &lt;code&gt;database.yml&lt;/code&gt; 이라는 파일을 렌더링해야하는 Ruby on Rails 애플리케이션입니다.</target>
        </trans-unit>
        <trans-unit id="c89e6d07154ee674ecff33ff3c7d93bccca8cb56" translate="yes" xml:space="preserve">
          <source>The expiration date for the public key, specified as an ISO 8601 formatted string: &lt;code&gt;YYYY-MM-DDTHH:MM:SSZ&lt;/code&gt;. If this option is not specified, the public key will not have an expiration date. For example: &lt;code&gt;2013-12-24T21:00:00Z&lt;/code&gt;.</source>
          <target state="translated">공개 키의 만료 날짜로, ISO 8601 형식 문자열로 지정됩니다 ( &lt;code&gt;YYYY-MM-DDTHH:MM:SSZ&lt;/code&gt; ) . 이 옵션을 지정하지 않으면 공개 키에 만료 날짜가 없습니다. 예를 들어 &lt;code&gt;2013-12-24T21:00:00Z&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="f25a3c7f8b365eab78c45116551a26a617e45c38" translate="yes" xml:space="preserve">
          <source>The extra arguments that are passed to the Subversion command.</source>
          <target state="translated">Subversion 명령으로 전달되는 추가 인수</target>
        </trans-unit>
        <trans-unit id="daa22751002c78731f8bb30f87d4559857671dd5" translate="yes" xml:space="preserve">
          <source>The failover virtual IP address is correctly attached to only the &lt;code&gt;master&lt;/code&gt; node</source>
          <target state="translated">장애 조치 가상 IP 주소가 &lt;code&gt;master&lt;/code&gt; 노드 에만 올바르게 연결되었습니다</target>
        </trans-unit>
        <trans-unit id="deae68df68a07159db8becff80037ad5fbb0cdb6" translate="yes" xml:space="preserve">
          <source>The file in which the OpenSSL key is saved. This setting is generated automatically by the chef-client and most users do not need to modify it.</source>
          <target state="translated">OpenSSL 키가 저장된 파일입니다. 이 설정은 chef-client가 자동으로 생성하며 대부분의 사용자는 수정할 필요가 없습니다.</target>
        </trans-unit>
        <trans-unit id="377517f34c27471db243af71d665834710b233a2" translate="yes" xml:space="preserve">
          <source>The file mode creation mask, or umask.</source>
          <target state="translated">파일 모드 작성 마스크 또는 umask</target>
        </trans-unit>
        <trans-unit id="21e537ff1f2ca92d2cd22d0cf7fbb319c626037f" translate="yes" xml:space="preserve">
          <source>The file mode creation mask, or umask. Default value: &lt;code&gt;0022&lt;/code&gt;.</source>
          <target state="translated">파일 모드 작성 마스크 또는 umask 기본값은 &lt;code&gt;0022&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="7d9d8a37d554ec618aa8bc3e47fac36eaa70aab8" translate="yes" xml:space="preserve">
          <source>The file to which a cookbook download is written.</source>
          <target state="translated">요리 책 다운로드가 작성된 파일입니다.</target>
        </trans-unit>
        <trans-unit id="7bc19ca3d2a46a46d1979114199639d2fb4765d6" translate="yes" xml:space="preserve">
          <source>The file to which standard error (&lt;code&gt;stderr&lt;/code&gt;) is sent.</source>
          <target state="translated">표준 오류 ( &lt;code&gt;stderr&lt;/code&gt; )가 전송 되는 파일 입니다.</target>
        </trans-unit>
        <trans-unit id="b1a98b7e371b15c67fc93eb4bb58a7c5f67e5fe8" translate="yes" xml:space="preserve">
          <source>The file to which standard input (&lt;code&gt;stdin&lt;/code&gt;) is sent.</source>
          <target state="translated">표준 입력 ( &lt;code&gt;stdin&lt;/code&gt; )이 전송 되는 파일 입니다.</target>
        </trans-unit>
        <trans-unit id="df43e51cd64e6d25b5f46beab3381d0be514c2a1" translate="yes" xml:space="preserve">
          <source>The file to which standard output (&lt;code&gt;stdout&lt;/code&gt;) is sent.</source>
          <target state="translated">표준 출력 ( &lt;code&gt;stdout&lt;/code&gt; )이 전송 되는 파일 입니다.</target>
        </trans-unit>
        <trans-unit id="3466a4838f267d4706eaf771c0d0fb6be0972745" translate="yes" xml:space="preserve">
          <source>The first argument of &lt;code&gt;execvp&lt;/code&gt;, typically the file name associated with the file to be executed. This value must be specified if &lt;code&gt;program_arguments&lt;/code&gt; is not specified, and vice-versa.</source>
          <target state="translated">&lt;code&gt;execvp&lt;/code&gt; 의 첫 번째 인수 , 일반적으로 실행할 파일과 연관된 파일 이름입니다. &lt;code&gt;program_arguments&lt;/code&gt; 가 지정되지 않은 경우이 값을 지정해야하며 그 반대의 경우도 마찬가지입니다.</target>
        </trans-unit>
        <trans-unit id="0f852a995ce4bde868ed8771e5e0ca566aaa5f5d" translate="yes" xml:space="preserve">
          <source>The first chef-client run, by default, contains an empty run-list. A &lt;a href=&quot;knife_bootstrap&quot;&gt;run-list can be specified&lt;/a&gt; as part of the initial bootstrap operation using the &lt;code&gt;--run-list&lt;/code&gt; option as part of the &lt;code&gt;knife bootstrap&lt;/code&gt; subcommand.</source>
          <target state="translated">첫 번째 요리사 클라이언트 실행에는 기본적으로 빈 실행 목록이 포함됩니다. &lt;a href=&quot;knife_bootstrap&quot;&gt;실행 목록을 지정할 수 있습니다&lt;/a&gt; 사용하여 초기 부트 스트랩 작업의 일부로 &lt;code&gt;--run-list&lt;/code&gt; 의 일부로서 옵션 &lt;code&gt;knife bootstrap&lt;/code&gt; 부속 명령을.</target>
        </trans-unit>
        <trans-unit id="e89e2dbc47acf093efc1c1d9e0ce581a4b6b74a1" translate="yes" xml:space="preserve">
          <source>The first thing it will do is attempt to promote itself to DRBD primary, which will fail if the disk has been written to at all while this host was down, and Keepalived will be unable to transition back to the original master. This leaves the pair of servers in a good state, with the second back-end box as the DRBD primary Chef server master.</source>
          <target state="translated">첫 번째로 DRBD 기본으로 승격하려고 시도합니다.이 호스트가 다운 된 상태에서 디스크가 전혀 기록되지 않으면 Keepalived가 원래 마스터로 다시 전환 할 수 없게됩니다. DRBD 기본 Chef 서버 마스터로 두 번째 백엔드 상자를 사용하여 서버 쌍을 양호한 상태로 둡니다.</target>
        </trans-unit>
        <trans-unit id="72b717222ceb8972ae0e75ae48cd727e32f2b6eb" translate="yes" xml:space="preserve">
          <source>The following &lt;code&gt;control_group&lt;/code&gt; ensures that MySQL is installed, that PostgreSQL is not installed, and that the services and configuration files associated with MySQL are configured correctly:</source>
          <target state="translated">다음 &lt;code&gt;control_group&lt;/code&gt; 은 MySQL이 설치되고 PostgreSQL이 설치되지 않으며 MySQL과 관련된 서비스 및 구성 파일이 올바르게 구성되었는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="98bd545c7888c699017db63b6628a0425fa8f8f1" translate="yes" xml:space="preserve">
          <source>The following &lt;code&gt;control_group&lt;/code&gt; verifies that the &lt;code&gt;git&lt;/code&gt; package has been installed:</source>
          <target state="translated">다음 &lt;code&gt;control_group&lt;/code&gt; 은 &lt;code&gt;git&lt;/code&gt; 패키지가 설치 되었는지 확인합니다 .</target>
        </trans-unit>
        <trans-unit id="a85aa37dd80f50b6d2fbcf584d40ab6d9a43d00d" translate="yes" xml:space="preserve">
          <source>The following &lt;code&gt;knife bootstrap&lt;/code&gt; settings can be added to the knife.rb file:</source>
          <target state="translated">knife.rb 파일에 다음과 같은 &lt;code&gt;knife bootstrap&lt;/code&gt; 설정을 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="98f3edd42c9295ca26649f439866a28529ea8d71" translate="yes" xml:space="preserve">
          <source>The following &lt;code&gt;knife client create&lt;/code&gt; settings can be added to the knife.rb file:</source>
          <target state="translated">knife.rb 파일에 다음과 같은 &lt;code&gt;knife client create&lt;/code&gt; 설정을 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4aa8a24ad4e0c6f132c2fe9dc67719ae136bfd9c" translate="yes" xml:space="preserve">
          <source>The following &lt;code&gt;knife client reregister&lt;/code&gt; settings can be added to the knife.rb file:</source>
          <target state="translated">knife.rb 파일에 다음과 같은 &lt;code&gt;knife client reregister&lt;/code&gt; 설정을 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="546a58b2d3833239fbfe616a18e76392a9e06da3" translate="yes" xml:space="preserve">
          <source>The following &lt;code&gt;knife configure&lt;/code&gt; settings can be added to the knife.rb file:</source>
          <target state="translated">knife.rb 파일에 다음과 같은 &lt;code&gt;knife configure&lt;/code&gt; 설정을 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c12fb2c1101d6d8811e9213ddc902f1df1292d1e" translate="yes" xml:space="preserve">
          <source>The following &lt;code&gt;knife cookbook bulk delete&lt;/code&gt; settings can be added to the knife.rb file:</source>
          <target state="translated">knife.rb 파일에 다음 &lt;code&gt;knife cookbook bulk delete&lt;/code&gt; 설정을 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="dd79a4eb474cbd67985c0892892ce389be97a7f1" translate="yes" xml:space="preserve">
          <source>The following &lt;code&gt;knife cookbook create&lt;/code&gt; settings can be added to the knife.rb file:</source>
          <target state="translated">다음 &lt;code&gt;knife cookbook create&lt;/code&gt; 설정을 knife.rb 파일에 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="bbd4e5965bfc1fb773cfdf552c3c6599a024ab62" translate="yes" xml:space="preserve">
          <source>The following &lt;code&gt;knife cookbook delete&lt;/code&gt; settings can be added to the knife.rb file:</source>
          <target state="translated">knife.rb 파일에 다음 &lt;code&gt;knife cookbook delete&lt;/code&gt; 설정을 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2710e43f12e075f1c879551c926fc08c8c33b168" translate="yes" xml:space="preserve">
          <source>The following &lt;code&gt;knife cookbook download&lt;/code&gt; settings can be added to the knife.rb file:</source>
          <target state="translated">knife.rb 파일에 다음 &lt;code&gt;knife cookbook download&lt;/code&gt; 설정을 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e46e769e6c5ef1529302fe3cb389e9a958652ebf" translate="yes" xml:space="preserve">
          <source>The following &lt;code&gt;knife cookbook list&lt;/code&gt; settings can be added to the knife.rb file:</source>
          <target state="translated">knife.rb 파일에 다음 &lt;code&gt;knife cookbook list&lt;/code&gt; 설정을 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5455d808bdefce62e611999d199dacf675458212" translate="yes" xml:space="preserve">
          <source>The following &lt;code&gt;knife cookbook metadata&lt;/code&gt; settings can be added to the knife.rb file:</source>
          <target state="translated">knife.rb 파일에 다음과 같은 &lt;code&gt;knife cookbook metadata&lt;/code&gt; 설정을 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="28ada1d09c1eafaae5ed9c9823d9703c3fce94c7" translate="yes" xml:space="preserve">
          <source>The following &lt;code&gt;knife cookbook show&lt;/code&gt; settings can be added to the knife.rb file:</source>
          <target state="translated">knife.rb 파일에 다음 &lt;code&gt;knife cookbook show&lt;/code&gt; 설정을 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="651a8e5a16dfdd38b874a2504878926ae364094e" translate="yes" xml:space="preserve">
          <source>The following &lt;code&gt;knife cookbook site download&lt;/code&gt; settings can be added to the knife.rb file:</source>
          <target state="translated">knife.rb 파일에 다음 &lt;code&gt;knife cookbook site download&lt;/code&gt; 설정을 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ee44ee892eda39b593f5c32b92c938446b7f1f5f" translate="yes" xml:space="preserve">
          <source>The following &lt;code&gt;knife cookbook site install&lt;/code&gt; settings can be added to the knife.rb file:</source>
          <target state="translated">knife.rb 파일에 다음 &lt;code&gt;knife cookbook site install&lt;/code&gt; 설정을 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ad9a413917ed38ad19eccf90a27cb2974b17086e" translate="yes" xml:space="preserve">
          <source>The following &lt;code&gt;knife cookbook site share&lt;/code&gt; settings can be added to the knife.rb file:</source>
          <target state="translated">knife.rb 파일에 다음과 같은 &lt;code&gt;knife cookbook site share&lt;/code&gt; 설정을 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="749491475550772ef3b1128280c023fc4e155092" translate="yes" xml:space="preserve">
          <source>The following &lt;code&gt;knife cookbook test&lt;/code&gt; settings can be added to the knife.rb file:</source>
          <target state="translated">knife.rb 파일에 다음 &lt;code&gt;knife cookbook test&lt;/code&gt; 설정을 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="30ef9784cfc4578e3b632e9aa9c7c9f127d90f98" translate="yes" xml:space="preserve">
          <source>The following &lt;code&gt;knife cookbook upload&lt;/code&gt; settings can be added to the knife.rb file:</source>
          <target state="translated">knife.rb 파일에 다음 &lt;code&gt;knife cookbook upload&lt;/code&gt; 설정을 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f5d7ddd685c9bf24060e07268f5790391ab33229" translate="yes" xml:space="preserve">
          <source>The following &lt;code&gt;knife data bag create&lt;/code&gt; settings can be added to the knife.rb file:</source>
          <target state="translated">다음 &lt;code&gt;knife data bag create&lt;/code&gt; 설정을 knife.rb 파일에 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="713249e929196a20d9768d396b61f7ba83e04e92" translate="yes" xml:space="preserve">
          <source>The following &lt;code&gt;knife data bag edit&lt;/code&gt; settings can be added to the knife.rb file:</source>
          <target state="translated">knife.rb 파일에 다음과 같은 &lt;code&gt;knife data bag edit&lt;/code&gt; 설정을 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a1dfbfbd6fa02a68f7f006092123da7b5ead5dca" translate="yes" xml:space="preserve">
          <source>The following &lt;code&gt;knife data bag from file&lt;/code&gt; settings can be added to the knife.rb file:</source>
          <target state="translated">&lt;code&gt;knife data bag from file&lt;/code&gt; 설정 의 다음 나이프 데이터 백을 knife.rb 파일에 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7873712b4fe5c695f5e70ddf6605c38ca515b04f" translate="yes" xml:space="preserve">
          <source>The following &lt;code&gt;knife data bag show&lt;/code&gt; settings can be added to the knife.rb file:</source>
          <target state="translated">다음 &lt;code&gt;knife data bag show&lt;/code&gt; 설정을 knife.rb 파일에 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="145ad039a4eac508d91fbde1039c3bdfb9c28aef" translate="yes" xml:space="preserve">
          <source>The following &lt;code&gt;knife delete&lt;/code&gt; settings can be added to the knife.rb file:</source>
          <target state="translated">knife.rb 파일에 다음과 같은 &lt;code&gt;knife delete&lt;/code&gt; 설정을 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="677479f7802d037d0f026fafa571ff7463dee06d" translate="yes" xml:space="preserve">
          <source>The following &lt;code&gt;knife deps&lt;/code&gt; settings can be added to the knife.rb file:</source>
          <target state="translated">knife.rb 파일에 다음과 같은 &lt;code&gt;knife deps&lt;/code&gt; 깊이 설정을 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="52188117d45e76872a3844974cbbb12f2a58052a" translate="yes" xml:space="preserve">
          <source>The following &lt;code&gt;knife diff&lt;/code&gt; settings can be added to the knife.rb file:</source>
          <target state="translated">knife.rb 파일에 다음과 같은 &lt;code&gt;knife diff&lt;/code&gt; 설정을 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0474cbd6fd4d1b7e86b13bb6688a4b216b9c56f1" translate="yes" xml:space="preserve">
          <source>The following &lt;code&gt;knife download&lt;/code&gt; settings can be added to the knife.rb file:</source>
          <target state="translated">knife.rb 파일에 다음과 같은 &lt;code&gt;knife download&lt;/code&gt; 설정을 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="91355f35f5f9fadb4b4521db948e5937004a5ace" translate="yes" xml:space="preserve">
          <source>The following &lt;code&gt;knife edit&lt;/code&gt; settings can be added to the knife.rb file:</source>
          <target state="translated">knife.rb 파일에 다음과 같은 &lt;code&gt;knife edit&lt;/code&gt; 설정을 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5a2c8cac3f843c6e673d601711606d57f3b14330" translate="yes" xml:space="preserve">
          <source>The following &lt;code&gt;knife environment create&lt;/code&gt; settings can be added to the knife.rb file:</source>
          <target state="translated">다음 &lt;code&gt;knife environment create&lt;/code&gt; 설정을 knife.rb 파일에 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4bbee768d70a402db45b3158713b3fe221287f47" translate="yes" xml:space="preserve">
          <source>The following &lt;code&gt;knife environment from file&lt;/code&gt; settings can be added to the knife.rb file:</source>
          <target state="translated">&lt;code&gt;knife environment from file&lt;/code&gt; 설정 에서 다음과 같은 나이프 환경을 knife.rb 파일에 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b19c275ae23740a7a2b058a17addb3b99f4a0454" translate="yes" xml:space="preserve">
          <source>The following &lt;code&gt;knife exec&lt;/code&gt; settings can be added to the knife.rb file:</source>
          <target state="translated">knife.rb 파일에 다음 &lt;code&gt;knife exec&lt;/code&gt; 설정을 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="91bbdb2a6f65f6e751ad858e6b3e8c4502147002" translate="yes" xml:space="preserve">
          <source>The following &lt;code&gt;knife list&lt;/code&gt; settings can be added to the knife.rb file:</source>
          <target state="translated">knife.rb 파일에 다음과 같은 &lt;code&gt;knife list&lt;/code&gt; 설정을 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5a612f9fb0a94a4e4631a02296d7e73f9f56ff09" translate="yes" xml:space="preserve">
          <source>The following &lt;code&gt;knife node from file&lt;/code&gt; settings can be added to the knife.rb file:</source>
          <target state="translated">&lt;code&gt;knife node from file&lt;/code&gt; 설정 에서 다음과 같은 나이프 노드를 knife.rb 파일에 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d480dfebc925c5919aae2bccb8a330921207f61c" translate="yes" xml:space="preserve">
          <source>The following &lt;code&gt;knife node list&lt;/code&gt; settings can be added to the knife.rb file:</source>
          <target state="translated">knife.rb 파일에 다음과 같은 &lt;code&gt;knife node list&lt;/code&gt; 설정을 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2ab6a4eacb20cdeaf4fea2eb930e9937f424b8fb" translate="yes" xml:space="preserve">
          <source>The following &lt;code&gt;knife node run list add&lt;/code&gt; settings can be added to the knife.rb file:</source>
          <target state="translated">다음 &lt;code&gt;knife node run list add&lt;/code&gt; 설정을 knife.rb 파일에 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="447868b32f6ba03d049db20c1836e96d47c4b4c2" translate="yes" xml:space="preserve">
          <source>The following &lt;code&gt;knife node run list remove&lt;/code&gt; settings can be added to the knife.rb file:</source>
          <target state="translated">다음 &lt;code&gt;knife node run list remove&lt;/code&gt; 설정을 knife.rb 파일에 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7d0d1f91360bb582ea43937dd7d0e9023039622e" translate="yes" xml:space="preserve">
          <source>The following &lt;code&gt;knife raw&lt;/code&gt; settings can be added to the knife.rb file:</source>
          <target state="translated">knife.rb 파일에 다음과 같은 &lt;code&gt;knife raw&lt;/code&gt; 설정을 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="050d7aa6e75cd5f2966afd5925c4af1122b7b909" translate="yes" xml:space="preserve">
          <source>The following &lt;code&gt;knife role create&lt;/code&gt; settings can be added to the knife.rb file:</source>
          <target state="translated">knife.rb 파일에 다음과 같은 &lt;code&gt;knife role create&lt;/code&gt; 설정을 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1053f95a7980a0fe124cb8d08d39a3507e7fa164" translate="yes" xml:space="preserve">
          <source>The following &lt;code&gt;knife role from file&lt;/code&gt; settings can be added to the knife.rb file:</source>
          <target state="translated">&lt;code&gt;knife role from file&lt;/code&gt; 설정 에서 다음과 같은 나이프 역할을 knife.rb 파일에 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="24c3608942633b6896dafe66be3cd8221dcdf2e4" translate="yes" xml:space="preserve">
          <source>The following &lt;code&gt;knife role show&lt;/code&gt; settings can be added to the knife.rb file:</source>
          <target state="translated">knife.rb 파일에 다음과 같은 &lt;code&gt;knife role show&lt;/code&gt; 설정을 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e2c84011513eb451a54a2309b30bf195f7397e3c" translate="yes" xml:space="preserve">
          <source>The following &lt;code&gt;knife ssh&lt;/code&gt; settings can be added to the knife.rb file:</source>
          <target state="translated">knife.rb 파일에 다음과 같은 &lt;code&gt;knife ssh&lt;/code&gt; 설정을 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b9eeff03403853f8a5fd04918ef6997b8f3fb6f4" translate="yes" xml:space="preserve">
          <source>The following &lt;code&gt;knife status&lt;/code&gt; settings can be added to the knife.rb file:</source>
          <target state="translated">knife.rb 파일에 다음과 같은 &lt;code&gt;knife status&lt;/code&gt; 설정을 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="24ade3602832182b5833648b02bf2cc719c069d9" translate="yes" xml:space="preserve">
          <source>The following &lt;code&gt;knife upload&lt;/code&gt; settings can be added to the knife.rb file:</source>
          <target state="translated">knife.rb 파일에 다음과 같은 &lt;code&gt;knife upload&lt;/code&gt; 설정을 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e6adf282fb52edbfe348bf389529d7b310083aab" translate="yes" xml:space="preserve">
          <source>The following &lt;code&gt;knife user create&lt;/code&gt; settings can be added to the knife.rb file:</source>
          <target state="translated">다음 &lt;code&gt;knife user create&lt;/code&gt; 설정을 knife.rb 파일에 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e74833a0fc69a59df563993be56b92fcee2e263d" translate="yes" xml:space="preserve">
          <source>The following &lt;code&gt;knife user reregister&lt;/code&gt; settings can be added to the knife.rb file:</source>
          <target state="translated">knife.rb 파일에 다음 &lt;code&gt;knife user reregister&lt;/code&gt; 설정을 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8849cbc39607f6e35699bd740e74b592fed056b0" translate="yes" xml:space="preserve">
          <source>The following &lt;code&gt;rakefile&lt;/code&gt; can be used to update Chef, Ohai, and cookbooks. Edit as necessary:</source>
          <target state="translated">Chef, Ohai 및 요리 책을 업데이트하는 데 다음 &lt;code&gt;rakefile&lt;/code&gt; 사용할 수 있습니다. 필요에 따라 편집하십시오.</target>
        </trans-unit>
        <trans-unit id="c68af72198d6df6aad8dc73a90cd370b07467c1b" translate="yes" xml:space="preserve">
          <source>The following Microsoft Windows platform-specific helpers can be used in recipes:</source>
          <target state="translated">레시피에 다음 Microsoft Windows 플랫폼 별 헬퍼를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="006f5d7d335ca5490a618cc6d09bd6a8452c0d86" translate="yes" xml:space="preserve">
          <source>The following RubyGems options are available for inclusion within a hash and are passed to the RubyGems DependencyInstaller:</source>
          <target state="translated">다음 RubyGems 옵션은 해시에 포함 할 수 있으며 RubyGems DependencyInstaller로 전달됩니다.</target>
        </trans-unit>
        <trans-unit id="3e24707b3429cf59b379a9bfd5c68dc9030234ac" translate="yes" xml:space="preserve">
          <source>The following actions may be used with any resource:</source>
          <target state="translated">모든 자원에 다음 조치를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e7edd7f0522cfcf4b5d9deb237a79a9e0d0587a3" translate="yes" xml:space="preserve">
          <source>The following arguments can be used with the &lt;code&gt;not_if&lt;/code&gt; or &lt;code&gt;only_if&lt;/code&gt; guard properties:</source>
          <target state="translated">&lt;code&gt;not_if&lt;/code&gt; 또는 &lt;code&gt;only_if&lt;/code&gt; guard 특성 과 함께 다음 인수를 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="bf1a49fe7d15e53207382866e6d4d16a2fdcdee9" translate="yes" xml:space="preserve">
          <source>The following assumptions exist when the Chef server is deployed in a high availability topology:</source>
          <target state="translated">Chef 서버가 고 가용성 토폴로지에 배치 된 경우 다음 가정이 존재합니다.</target>
        </trans-unit>
        <trans-unit id="bdc8b2b604271bf635f95f3b3708ce367f24122b" translate="yes" xml:space="preserve">
          <source>The following attributes &lt;strong&gt;MUST&lt;/strong&gt; be in the user LDAP record:</source>
          <target state="translated">다음 속성 &lt;strong&gt;은 반드시&lt;/strong&gt; 사용자 LDAP 레코드에 &lt;strong&gt;있어야&lt;/strong&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="ec653cbb51121ee6c6b1defe64d869e6f52f9520" translate="yes" xml:space="preserve">
          <source>The following attributes &lt;strong&gt;SHOULD&lt;/strong&gt; be in the user LDAP record:</source>
          <target state="translated">다음 속성은 &lt;strong&gt;안된다&lt;/strong&gt; 사용자의 LDAP 레코드 수 :</target>
        </trans-unit>
        <trans-unit id="b44bb82d1a0a45e9aa6fa018980370c12575986b" translate="yes" xml:space="preserve">
          <source>The following authentication headers are required:</source>
          <target state="translated">다음과 같은 인증 헤더가 필요합니다.</target>
        </trans-unit>
        <trans-unit id="69cc9adc27b8d0d0299283ba062c263c890bec78" translate="yes" xml:space="preserve">
          <source>The following callback types are available:</source>
          <target state="translated">다음과 같은 콜백 유형을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="48ba6bfd45680229d02aaedf82f613b7889b2d1f" translate="yes" xml:space="preserve">
          <source>The following changes were made during certain chef-client release prior to the chef-client 12 release:</source>
          <target state="translated">chef-client 12 릴리스 이전의 특정 chef-client 릴리스 동안 다음과 같은 변경이있었습니다.</target>
        </trans-unit>
        <trans-unit id="0b01cf94c0d423914096c9304656c1eec92bde12" translate="yes" xml:space="preserve">
          <source>The following code shows the start handler used by the Reporting add-in for the Chef server:</source>
          <target state="translated">다음 코드는 Chef 서버의보고 추가 기능에서 사용되는 시작 처리기를 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="55864d8f80dc912b3b4edd1a9ffc0c5c53711480" translate="yes" xml:space="preserve">
          <source>The following commands are disabled when an external PostgreSQL database is configured for the Chef server: &lt;code&gt;hup&lt;/code&gt;, &lt;code&gt;int&lt;/code&gt;, &lt;code&gt;kill&lt;/code&gt;, &lt;code&gt;once&lt;/code&gt;, &lt;code&gt;restart&lt;/code&gt;, &lt;code&gt;start&lt;/code&gt;, &lt;code&gt;stop&lt;/code&gt;, &lt;code&gt;tail&lt;/code&gt;, and &lt;code&gt;term&lt;/code&gt;.</source>
          <target state="translated">Chef 서버에 대해 외부 PostgreSQL 데이터베이스가 구성된 경우 &lt;code&gt;hup&lt;/code&gt; , &lt;code&gt;int&lt;/code&gt; , &lt;code&gt;kill&lt;/code&gt; , &lt;code&gt;once&lt;/code&gt; , &lt;code&gt;restart&lt;/code&gt; , &lt;code&gt;start&lt;/code&gt; , &lt;code&gt;stop&lt;/code&gt; , &lt;code&gt;tail&lt;/code&gt; 및 &lt;code&gt;term&lt;/code&gt; 명령이 비활성화됩니다 .</target>
        </trans-unit>
        <trans-unit id="017b817904990e7ecf0f010085dc2dcdd3adf733" translate="yes" xml:space="preserve">
          <source>The following commands properly set up disk configuration on the backend server:</source>
          <target state="translated">다음 명령은 백엔드 서버에서 디스크 구성을 올바르게 설정합니다.</target>
        </trans-unit>
        <trans-unit id="82395bd65aadafc94dc44a3922f383f8bbc156ef" translate="yes" xml:space="preserve">
          <source>The following commands would properly set up the backend disk configuration for DRBD:</source>
          <target state="translated">다음 명령은 DRBD에 대한 백엔드 디스크 구성을 올바르게 설정합니다.</target>
        </trans-unit>
        <trans-unit id="a33a807f265f2330fc0860b070d7eadb62356014" translate="yes" xml:space="preserve">
          <source>The following components should be monitored for signs that disks may be rapidly filling up:</source>
          <target state="translated">디스크가 빠르게 채워지는 징후가 있는지 다음 구성 요소를 모니터링해야합니다.</target>
        </trans-unit>
        <trans-unit id="5e106e846a88dee9632c70ff94abb3a16ac826c0" translate="yes" xml:space="preserve">
          <source>The following cookbooks can be used to load handlers during the chef-client run.</source>
          <target state="translated">chef-client 실행 중에 다음 쿡북을 사용하여 핸들러를로드 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6e4fd7974c4bd5c3ee5ad0bb73607555c173b034" translate="yes" xml:space="preserve">
          <source>The following custom handler defines how cookbooks and cookbook versions that are used during the chef-client run will be compiled into a report using the &lt;code&gt;Chef::Log&lt;/code&gt; class in the chef-client:</source>
          <target state="translated">다음 사용자 정의 핸들러는 chef-client 실행 중에 사용되는 요리 책 및 요리 책 버전이 chef-client의 &lt;code&gt;Chef::Log&lt;/code&gt; 클래스를 사용하여 보고서로 컴파일되는 방법을 정의합니다 .</target>
        </trans-unit>
        <trans-unit id="df4ad63cc882ca52f319232bf7cec77faa284780" translate="yes" xml:space="preserve">
          <source>The following definition processes unique hostnames and ports, passed on as parameters:</source>
          <target state="translated">다음 정의는 고유 호스트 이름 및 포트를 처리하고 매개 변수로 전달합니다.</target>
        </trans-unit>
        <trans-unit id="6c303a8bcb39d79aee6ea11edca0fb08582287e6" translate="yes" xml:space="preserve">
          <source>The following definition uses the &lt;strong&gt;template&lt;/strong&gt; resource for Debian-specific cases, but then the &lt;strong&gt;link&lt;/strong&gt; resource for everything else:</source>
          <target state="translated">다음 정의는 데비안 고유의 경우 &lt;strong&gt;템플릿&lt;/strong&gt; 리소스를 사용 하지만 그 밖의 모든 경우에는 &lt;strong&gt;링크&lt;/strong&gt; 리소스를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="b1442a2e59f0d07ca37636115c81bc73211294a5" translate="yes" xml:space="preserve">
          <source>The following diagram highlights the specific changes that occur when PostgreSQL is configured and managed independently of the Chef server configuration.</source>
          <target state="translated">다음 다이어그램은 PostgreSQL이 Chef 서버 구성과 독립적으로 구성 및 관리 될 때 발생하는 특정 변경 사항을 강조합니다.</target>
        </trans-unit>
        <trans-unit id="14862b4b15870f66560f654fe215e0f66ed0073f" translate="yes" xml:space="preserve">
          <source>The following diagram highlights the specific changes that occur when cookbooks are stored at an external location, such as Amazon Simple Storage Service (S3).</source>
          <target state="translated">다음 다이어그램은 요리 책이 Amazon Simple Storage Service (S3)와 같은 외부 위치에 저장 될 때 발생하는 특정 변경 사항을 강조합니다.</target>
        </trans-unit>
        <trans-unit id="4ffcb79daf39b7e294ec1e98d93c2ec24474babc" translate="yes" xml:space="preserve">
          <source>The following diagram shows the relationships between the various elements of Chef, including the nodes, the server, premium features of the server, and the workstation. These elements work together to provide the chef-client the information and instruction that it needs so that it can do its job. As you are reviewing the rest of this topic, use the icons in the tables to refer back to this image.</source>
          <target state="translated">다음 다이어그램은 노드, 서버, 서버의 프리미엄 기능 및 워크 스테이션을 포함하여 Chef의 다양한 요소 간의 관계를 보여줍니다. 이 요소들은 함께 작동하여 요리사 클라이언트에게 작업을 수행하는 데 필요한 정보와 지침을 제공합니다. 이 주제의 나머지 부분을 검토 할 때 표의 아이콘을 사용하여이 이미지를 다시 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="d9ab816b5772920ca65b47c3bad4e5613a233cf7" translate="yes" xml:space="preserve">
          <source>The following diagram shows the stages of the bootstrap operation, and then the list below the diagram describes in greater detail each of those stages.</source>
          <target state="translated">다음 다이어그램은 부트 스트랩 작업의 단계를 보여주고 다이어그램 아래의 목록은 각 단계를보다 자세하게 설명합니다.</target>
        </trans-unit>
        <trans-unit id="a8d0db860c1b4755ad489062b6b905a7c8b0e51c" translate="yes" xml:space="preserve">
          <source>The following diagram shows the various components that are part of a Chef server deployment and how they relate to one another.</source>
          <target state="translated">다음 다이어그램은 Chef 서버 배포의 일부인 다양한 구성 요소와 서로 관련되는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="1cfe33d27e6d1b7f259b8a9549a8a60edba9cc7c" translate="yes" xml:space="preserve">
          <source>The following example creates a file on a node (based on one that is located in a cookbook), unpacks the &lt;code&gt;MessageQueue.zip&lt;/code&gt; Windows PowerShell module, and then uses the &lt;strong&gt;dsc_resource&lt;/strong&gt; to ensure that Message Queuing (MSMQ) sub-features are installed, a test queue is created, and that permissions are set on the test queue:</source>
          <target state="translated">다음 예제는 요리 책에있는 파일을 기반으로 노드에 파일을 만들고 &lt;code&gt;MessageQueue.zip&lt;/code&gt; Windows PowerShell 모듈의 압축을 &lt;strong&gt;푼&lt;/strong&gt; 다음 &lt;strong&gt;dsc_resource&lt;/strong&gt; 를 사용하여 메시지 큐 (MSMQ) 하위 기능이 설치되었는지 확인합니다. 테스트 큐가 작성되고 해당 권한이 테스트 큐에 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="4fff374bad34a301d487347c7baeb4394c0d1f25" translate="yes" xml:space="preserve">
          <source>The following example creates symbolic links from two files in the &lt;code&gt;/vol/webserver/cert/&lt;/code&gt; directory to files located in the &lt;code&gt;/etc/ssl/certs/&lt;/code&gt; directory:</source>
          <target state="translated">다음 예제는 &lt;code&gt;/vol/webserver/cert/&lt;/code&gt; 디렉토리의 두 파일에서 &lt;code&gt;/etc/ssl/certs/&lt;/code&gt; 디렉토리 에있는 파일로 심볼릭 링크를 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="ba1c3eb964b2d4cd5969444d465f632bbceabd6b" translate="yes" xml:space="preserve">
          <source>The following example emulates the entire file specificity pattern by defining it as an explicit path:</source>
          <target state="translated">다음 예제는 전체 파일 특정 패턴을 명시 적 경로로 정의하여 에뮬레이트합니다.</target>
        </trans-unit>
        <trans-unit id="c70d08fb3ca0309c5c09e0bf1911271b63ce4e5c" translate="yes" xml:space="preserve">
          <source>The following example installs Windows PowerShell 2.0 on systems that do not already have it installed. Microsoft Windows platform helper methods are used to define specific behaviors for specific platform versions:</source>
          <target state="translated">다음 예제는 Windows PowerShell 2.0을 아직 설치하지 않은 시스템에 설치합니다. Microsoft Windows 플랫폼 헬퍼 메소드는 특정 플랫폼 버전에 대한 특정 동작을 정의하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="b2ac6a852bbc69dbfc6df54c39f7241e9d7fcf4b" translate="yes" xml:space="preserve">
          <source>The following example is based on a few assumptions:</source>
          <target state="translated">다음 예제는 몇 가지 가정을 기반으로합니다.</target>
        </trans-unit>
        <trans-unit id="fbe5805e5d09ea881325069b1cb9e8486c77eb91" translate="yes" xml:space="preserve">
          <source>The following example shows Identity and Access Management (IAM) access management settings that are required for Chef high availability:</source>
          <target state="translated">다음 예는 Chef 고 가용성에 필요한 IAM (Identity and Access Management) 액세스 관리 설정을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="2e409e6ff7e5939f90d9a32505ba931208a3a01d" translate="yes" xml:space="preserve">
          <source>The following example shows a chef-server.rb file:</source>
          <target state="translated">다음 예제는 chef-server.rb 파일을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="b076f5a1167f4b2fbec41ce578c1af92d08abf26" translate="yes" xml:space="preserve">
          <source>The following example shows a schedule that will run at 8:00 PM, every weekday (Monday through Friday), but only in November:</source>
          <target state="translated">다음 예는 매주 (월요일에서 금요일까지) 오후 8시에 실행되지만 11 월에만 실행되는 스케줄을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="1db1ade951c067c3cb0a281ff7014357482fabe2" translate="yes" xml:space="preserve">
          <source>The following example shows a schedule that will run every hour at 8:00 each Saturday morning, and will then send an email to &amp;ldquo;&lt;a href=&quot;mailto:admin%40example.com&quot;&gt;admin@example.com&lt;/a&gt;&amp;rdquo; after each run.</source>
          <target state="translated">다음 예는 매주 토요일 오전 8시에 실행되는 일정을 보여 주며, 각 실행 후 &amp;ldquo; &lt;a href=&quot;mailto:admin%40example.com&quot;&gt;admin@example.com&lt;/a&gt; &amp;rdquo;으로 전자 메일을 보냅니다 .</target>
        </trans-unit>
        <trans-unit id="9f528db5eb148ed5c8b25f521de26c05c1ed0e8b" translate="yes" xml:space="preserve">
          <source>The following example shows a series of fatal &lt;code&gt;Chef::Log&lt;/code&gt; entries:</source>
          <target state="translated">다음 예제는 일련의 치명적인 &lt;code&gt;Chef::Log&lt;/code&gt; 항목을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="e85c0043ad5423658f92522c8e267b4d63156368" translate="yes" xml:space="preserve">
          <source>The following example shows a way create a file in the &lt;code&gt;/baz&lt;/code&gt; directory:</source>
          <target state="translated">다음 예제는 &lt;code&gt;/baz&lt;/code&gt; 디렉토리에 파일을 작성하는 방법을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="0f0e75e04c0a8e15e5e08bd8c3134b973e0c866c" translate="yes" xml:space="preserve">
          <source>The following example shows an authentication request:</source>
          <target state="translated">다음 예는 인증 요청을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="d045257b2825fedc56427cc0c413bda6a2f0ceab" translate="yes" xml:space="preserve">
          <source>The following example shows how Bash can be used to install a plug-in for rbenv named &lt;code&gt;ruby-build&lt;/code&gt;, which is located in git version source control. First, the application is synchronized, and then Bash changes its working directory to the location in which &lt;code&gt;ruby-build&lt;/code&gt; is located, and then runs a command.</source>
          <target state="translated">다음 예제는 Bash를 사용하여 git 버전 소스 제어에있는 &lt;code&gt;ruby-build&lt;/code&gt; 라는 rbenv 용 플러그인을 설치하는 방법을 보여줍니다 . 먼저 응용 프로그램이 동기화 된 다음 Bash가 작업 디렉토리를 &lt;code&gt;ruby-build&lt;/code&gt; 가 있는 위치로 변경 한 다음 명령을 실행합니다.</target>
        </trans-unit>
        <trans-unit id="df04cc65d8bd370f599347368ab2fd3d9808ef7b" translate="yes" xml:space="preserve">
          <source>The following example shows how a case statement can be used to handle a situation where an application needs to be installed on multiple platforms, but where the install directories are different paths, depending on the platform:</source>
          <target state="translated">다음 예제는 애플리케이션을 여러 플랫폼에 설치해야하지만 상황에 따라 설치 디렉토리가 다른 경로를 처리하기 위해 case 문을 사용하는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="09a7b39a454e2bffef4a706c18e7159bdc60714c" translate="yes" xml:space="preserve">
          <source>The following example shows how a template can be used to apply consistent proxy settings for all nodes of the same type:</source>
          <target state="translated">다음 예제는 템플리트를 사용하여 동일한 유형의 모든 노드에 일관된 프록시 설정을 적용하는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="3873a8dbb6d367d58ca9c428ecf3f0a493ac45ef" translate="yes" xml:space="preserve">
          <source>The following example shows how an if statement can be used with the &lt;code&gt;platform?&lt;/code&gt; method in the Recipe DSL to run code specific to Microsoft Windows. The code is defined using the &lt;strong&gt;ruby_block&lt;/strong&gt; resource:</source>
          <target state="translated">다음 예제는 &lt;code&gt;platform?&lt;/code&gt; 에서 if 문을 사용하는 방법을 보여줍니다 . 레시피 DSL의 메소드를 사용하여 Microsoft Windows에 특정한 코드를 실행하십시오. 코드는 &lt;strong&gt;ruby_block&lt;/strong&gt; 자원을 사용하여 정의 됩니다.</target>
        </trans-unit>
        <trans-unit id="d7672020d5a4a1e26a945f8953cc0ea10c6ff4fa" translate="yes" xml:space="preserve">
          <source>The following example shows how pass a value to a template using the &lt;code&gt;variables&lt;/code&gt; property in the &lt;strong&gt;template&lt;/strong&gt; resource. The template file is similar to:</source>
          <target state="translated">다음 예제는 &lt;strong&gt;템플리트&lt;/strong&gt; 자원 의 &lt;code&gt;variables&lt;/code&gt; 속성을 사용하여 값을 템플리트에 전달하는 방법을 보여줍니다 . 템플릿 파일은 다음과 유사합니다.&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="493801ff623bec3f944e2c2101f84101d72cd5f9" translate="yes" xml:space="preserve">
          <source>The following example shows how permissions can be set for the &lt;code&gt;/certificates&lt;/code&gt; directory on any node that is running Nginx. In this example, permissions are being set for the &lt;code&gt;owner&lt;/code&gt; and &lt;code&gt;group&lt;/code&gt; properties as &lt;code&gt;root&lt;/code&gt;, and then read/write permissions are granted to the root.</source>
          <target state="translated">다음 예제는 Nginx를 실행하는 모든 노드 에서 &lt;code&gt;/certificates&lt;/code&gt; 디렉토리에 권한을 설정하는 방법을 보여줍니다 . 이 예에서 &lt;code&gt;owner&lt;/code&gt; 및 &lt;code&gt;group&lt;/code&gt; 특성에 대한 권한이 &lt;code&gt;root&lt;/code&gt; 로 설정되고 읽기 / 쓰기 권한이 루트에 부여됩니다.</target>
        </trans-unit>
        <trans-unit id="68d9269c7670976564ffa6c6f4df4ca4fe8b9274" translate="yes" xml:space="preserve">
          <source>The following example shows how read/write/execute permissions can be set using a variable named &lt;code&gt;user_home&lt;/code&gt;, and then for owners and groups on any matching node:</source>
          <target state="translated">다음 예제는 &lt;code&gt;user_home&lt;/code&gt; 이라는 변수를 사용하여 일치하는 노드의 소유자 및 그룹에 대해 읽기 / 쓰기 / 실행 권한을 설정하는 방법을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="e7d1ff019fe5624cc7de27421fa2e56e5fa7332c" translate="yes" xml:space="preserve">
          <source>The following example shows how start a service named &lt;code&gt;example_service&lt;/code&gt; and immediately notify the Nginx service to restart.</source>
          <target state="translated">다음 예제는 &lt;code&gt;example_service&lt;/code&gt; 라는 서비스를 시작하고 즉시 Nginx 서비스에 다시 시작하도록 알리는 방법을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="b6b90e50963f88eba0b6605032fa8d8dfda0ecbb" translate="yes" xml:space="preserve">
          <source>The following example shows how the &lt;code&gt;data_bag&lt;/code&gt; method can be used in a recipe.</source>
          <target state="translated">다음 예는 &lt;code&gt;data_bag&lt;/code&gt; 메소드를 레시피에서 사용 하는 방법을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="c4f052afb5d9eef322ccb8d7ff9a15069eccbb3b" translate="yes" xml:space="preserve">
          <source>The following example shows how the &lt;code&gt;platform?&lt;/code&gt; method can be used in a recipe.</source>
          <target state="translated">다음 예제는 &lt;code&gt;platform?&lt;/code&gt; 방법은 레시피에 사용될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="39274df486b5b88666bf0214e50b21da50ce6667" translate="yes" xml:space="preserve">
          <source>The following example shows how the &lt;strong&gt;ruby_block&lt;/strong&gt; resource can be used to update the &lt;code&gt;/etc/hosts&lt;/code&gt; file:</source>
          <target state="translated">다음 예제는 &lt;strong&gt;ruby_block&lt;/strong&gt; 자원을 사용하여 &lt;code&gt;/etc/hosts&lt;/code&gt; 파일 을 업데이트하는 방법을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="6fc4ddfa5dd130913d077a473bd8973c9e79b41f" translate="yes" xml:space="preserve">
          <source>The following example shows how the &lt;strong&gt;template&lt;/strong&gt; resource can be used in a recipe to combine settings stored in an attributes file, variables within a recipe, and a template to set the IP addresses that are used by the Nginx service. The attributes file contains the following:</source>
          <target state="translated">다음 예는 래서 피에서 &lt;strong&gt;템플릿&lt;/strong&gt; 리소스를 사용하여 속성 파일에 저장된 설정, 래서 피 내의 변수 및 Nginx 서비스가 사용하는 IP 주소를 설정하는 템플릿을 결합하는 방법을 보여줍니다 . 속성 파일에는 다음이 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="5aa1cc68818f48b01fc96ea54efe4174c0ed262e" translate="yes" xml:space="preserve">
          <source>The following example shows how the Chef server sets up and configures SSL certificates for Nginx. The cipher suite used by Nginx &lt;a href=&quot;config_rb_server#config-rb-server-ssl-protocols&quot;&gt;is configurable&lt;/a&gt; using the &lt;code&gt;ssl_protocols&lt;/code&gt; and &lt;code&gt;ssl_ciphers&lt;/code&gt; settings.</source>
          <target state="translated">다음 예제는 Chef 서버가 Nginx에 대한 SSL 인증서를 설정하고 구성하는 방법을 보여줍니다. Nginx에서 사용하는 암호 제품군 은 &lt;code&gt;ssl_protocols&lt;/code&gt; 및 &lt;code&gt;ssl_ciphers&lt;/code&gt; 설정을 사용하여 &lt;a href=&quot;config_rb_server#config-rb-server-ssl-protocols&quot;&gt;구성 할&lt;/a&gt; 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3100226ae1352267565493b190ee4496c9c25dd1" translate="yes" xml:space="preserve">
          <source>The following example shows how the settings look when added to the configuration file:</source>
          <target state="translated">다음 예제는 구성 파일에 추가 될 때 설정이 표시되는 방식을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="a9b656627922cc5741267bbab8a6a11655575b25" translate="yes" xml:space="preserve">
          <source>The following example shows how to add a client named &amp;ldquo;IBM305RAMAC&amp;rdquo; and the &lt;code&gt;/clients&lt;/code&gt; endpoint, and then return the private key for that user in the console:</source>
          <target state="translated">다음 예제는 이름이&amp;ldquo;IBM305RAMAC&amp;rdquo;인 &lt;code&gt;/clients&lt;/code&gt; 와 / clients 엔드 포인트 를 추가 한 후 콘솔에서 해당 사용자의 개인 키를 리턴하는 방법을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="ad89b801504650c5c2c107e682abd9c9cf83c55a" translate="yes" xml:space="preserve">
          <source>The following example shows how to add a rule named &lt;code&gt;test_rule&lt;/code&gt; to an IP table using the &lt;strong&gt;execute&lt;/strong&gt; resource to run a command using a template that is defined by the &lt;strong&gt;template&lt;/strong&gt; resource:</source>
          <target state="translated">다음 예제는 &lt;strong&gt;실행&lt;/strong&gt; 자원을 사용하여 &lt;code&gt;test_rule&lt;/code&gt; 이라는 규칙 을 IP 테이블에 추가하여 &lt;strong&gt;템플리트&lt;/strong&gt; 자원으로 정의 된 템플리트를 사용하여 명령을 실행하는 방법을 보여줍니다 .&lt;strong&gt;&lt;/strong&gt;&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c9288b2ab9ad5f07c7d28e129c0be17e62dd778c" translate="yes" xml:space="preserve">
          <source>The following example shows how to copy a file from one directory to another, locally on a node:</source>
          <target state="translated">다음 예제는 파일을 한 디렉토리에서 다른 디렉토리로 노드의 로컬로 복사하는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="7c6e3b4f54ff95bfad1bd4395fc1e07af2224c57" translate="yes" xml:space="preserve">
          <source>The following example shows how to create a system user. In this instance, the &lt;code&gt;home&lt;/code&gt; value is calculated and stored in a variable called &lt;code&gt;user_home&lt;/code&gt; which sets the user&amp;rsquo;s &lt;code&gt;home&lt;/code&gt; attribute.</source>
          <target state="translated">다음 예제는 시스템 사용자를 작성하는 방법을 보여줍니다. 이 경우, &lt;code&gt;home&lt;/code&gt; 값은 계산되어 사용자의 &lt;code&gt;home&lt;/code&gt; 속성 을 설정하는 &lt;code&gt;user_home&lt;/code&gt; 이라는 변수에 저장됩니다 .</target>
        </trans-unit>
        <trans-unit id="f851c464fb9fca42f5df4f8395560dbc6c850794" translate="yes" xml:space="preserve">
          <source>The following example shows how to display the content of all groups on the server:</source>
          <target state="translated">다음 예제는 서버에서 모든 그룹의 컨텐츠를 표시하는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="7c4983e2e914e429fa1f2889b70d496bc95ef537" translate="yes" xml:space="preserve">
          <source>The following example shows how to enable the &lt;code&gt;CloudkickHandler&lt;/code&gt; handler, which adds it to the default handler path and passes the &lt;code&gt;oauth&lt;/code&gt; key/secret to the handler&amp;rsquo;s initializer:</source>
          <target state="translated">다음 예제는 &lt;code&gt;CloudkickHandler&lt;/code&gt; 핸들러 를 활성화하는 방법을 보여줍니다.이 핸들러는 기본 핸들러 경로에 추가하고 &lt;code&gt;oauth&lt;/code&gt; 키 / 비밀을 핸들러의 이니셜 라이저로 전달합니다.</target>
        </trans-unit>
        <trans-unit id="9209243bc3cd26199b8655a6f24191f2fe7ea191" translate="yes" xml:space="preserve">
          <source>The following example shows how to get the contents of a data bag item named &lt;code&gt;impossible_things&lt;/code&gt;, create a .pem file located at &lt;code&gt;some/directory/path/&lt;/code&gt;, and then use the &lt;code&gt;content&lt;/code&gt; attribute to update the contents of that file with the value of the &lt;code&gt;impossible_things&lt;/code&gt; data bag item:</source>
          <target state="translated">다음 예제는 &lt;code&gt;impossible_things&lt;/code&gt; 라는 데이터 백 항목의 컨텐츠를 가져 오고 &lt;code&gt;some/directory/path/&lt;/code&gt; 에있는 .pem 파일을 작성한 후 &lt;code&gt;content&lt;/code&gt; 속성을 사용 하여 &lt;code&gt;impossible_things&lt;/code&gt; 값으로 해당 파일의 컨텐츠를 업데이트하는 방법을 보여줍니다. 데이터 백 항목 :</target>
        </trans-unit>
        <trans-unit id="ccafcd01e82d80bfc63efbc1e329707c9bb28557" translate="yes" xml:space="preserve">
          <source>The following example shows how to install a lightweight JavaScript framework into Vagrant:</source>
          <target state="translated">다음 예제는 경량 JavaScript 프레임 워크를 Vagrant에 설치하는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="f17042444c6ce2670eba7161874d422ba58ce680" translate="yes" xml:space="preserve">
          <source>The following example shows how to install a service:</source>
          <target state="translated">다음 예제는 서비스를 설치하는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="bed6cc2ef44ab522c5dca2338cb1061d8f35796e" translate="yes" xml:space="preserve">
          <source>The following example shows how to install new Yum repositories from a file, where the installation of the repository triggers a creation of the Yum cache that forces the internal cache for the chef-client to reload:</source>
          <target state="translated">다음 예는 파일에서 새 Yum 리포지토리를 설치하는 방법을 보여줍니다. 여기서 리포지토리를 설치하면 chef-client의 내부 캐시를 강제로 다시로드하는 Yum 캐시가 생성됩니다.</target>
        </trans-unit>
        <trans-unit id="03d0c3fafb0af7ed8565c89d9d22f3f3f647ecb0" translate="yes" xml:space="preserve">
          <source>The following example shows how to install sudo and then configure the &lt;code&gt;/etc/sudoers&lt;/code&gt; file:</source>
          <target state="translated">다음 예제는 sudo를 설치 한 후 &lt;code&gt;/etc/sudoers&lt;/code&gt; 파일 을 구성하는 방법을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="5f51d5d429a6758e6292656625785f4de1310772" translate="yes" xml:space="preserve">
          <source>The following example shows how to install the crond application using two resources and a variable:</source>
          <target state="translated">다음 예제는 두 가지 자원과 변수를 사용하여 crond 응용 프로그램을 설치하는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="632835599e751deb680725c209cf99e62c8dd7bb" translate="yes" xml:space="preserve">
          <source>The following example shows how to modify the default script for Microsoft Windows and Windows PowerShell:</source>
          <target state="translated">다음 예제는 Microsoft Windows 및 Windows PowerShell의 기본 스크립트를 수정하는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="886601b0d5a0c4f91601b9489aebeb2d01a2cd77" translate="yes" xml:space="preserve">
          <source>The following example shows how to modify the default script for Ubuntu 14.04. First, copy the bootstrap template from the default location. If the chef-client is installed from a RubyGems, the full path can be found in the gem contents. For example:</source>
          <target state="translated">다음 예제는 Ubuntu 14.04의 기본 스크립트를 수정하는 방법을 보여줍니다. 먼저 기본 위치에서 부트 스트랩 템플릿을 복사하십시오. chef-client가 RubyGems에서 설치되는 경우 전체 컨텐츠는 gem 컨텐츠에서 찾을 수 있습니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="9c13a7d68a053523dedfe9eb6173400b179ec281" translate="yes" xml:space="preserve">
          <source>The following example shows how to prevent concurrent chef-client runs from both holding a lock on etcd:</source>
          <target state="translated">다음 예제는 동시 요리사 클라이언트 실행이 etcd에 대한 잠금을 유지하지 못하게하는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="39da3d0c6bccc555552395d749d1e28201e0262c" translate="yes" xml:space="preserve">
          <source>The following example shows how to query the Chef server API for a listing of organizations and users. The &lt;code&gt;/organizations&lt;/code&gt; and &lt;code&gt;/users&lt;/code&gt; endpoints may only be accessed by the &lt;code&gt;pivotal&lt;/code&gt; user, which is a user account that is created by Chef during the installation of the Chef server.</source>
          <target state="translated">다음 예제는 조직 및 사용자 목록에 대해 Chef 서버 API를 조회하는 방법을 보여줍니다. &lt;code&gt;/organizations&lt;/code&gt; 및 &lt;code&gt;/users&lt;/code&gt; 엔드 포인트에만 액세스 할 수 있습니다 &lt;code&gt;pivotal&lt;/code&gt; 요리사 서버를 설치하는 동안 요리사에 의해 생성되는 사용자 계정 사용자.</target>
        </trans-unit>
        <trans-unit id="f60c57a53a80504f015d3b3eb95d0afd44ed8f88" translate="yes" xml:space="preserve">
          <source>The following example shows how to recreate a data bag item:</source>
          <target state="translated">다음 예제는 데이터 백 항목을 다시 작성하는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="b363bad33a0c473cb2fe7f3277410ae76f22976f" translate="yes" xml:space="preserve">
          <source>The following example shows how to reload the configuration of a chef-client using the &lt;strong&gt;remote_file&lt;/strong&gt; resource to:</source>
          <target state="translated">다음 예제는 &lt;strong&gt;remote_file&lt;/strong&gt; 자원을 사용하여 chef-client 구성을 다시로드하는 방법을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="19af7dfc2f1576a6f460e0a382e12b762d18a4cf" translate="yes" xml:space="preserve">
          <source>The following example shows how to rename a computer, join a domain, and then reboot the computer:</source>
          <target state="translated">다음 예는 컴퓨터 이름을 바꾸고 도메인에 가입 한 다음 컴퓨터를 재부팅하는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="982cb4b526daa9e7c3be660ed06d36ba57072020" translate="yes" xml:space="preserve">
          <source>The following example shows how to run &lt;code&gt;bundle install&lt;/code&gt; from a chef-client run as a specific user. This will put the gem into the path of the user (&lt;code&gt;vagrant&lt;/code&gt;) instead of the root user (under which the chef-client runs):</source>
          <target state="translated">다음 예제는 특정 사용자로 chef-client 실행에서 &lt;code&gt;bundle install&lt;/code&gt; 를 실행하는 방법을 보여줍니다 . 이것은 gem을 ( &lt;code&gt;vagrant&lt;/code&gt; 사용자가 실행 하는 ) 루트 사용자 대신 사용자 경로 ( vagrant )에 넣습니다 .</target>
        </trans-unit>
        <trans-unit id="ac4ce91a42e8e43094376791dcda6bafbf5c9b1f" translate="yes" xml:space="preserve">
          <source>The following example shows how to set the administrator for Nagios on multiple nodes, except when the package already exists on a node:</source>
          <target state="translated">다음 예제는 패키지가 이미 노드에 존재하는 경우를 제외하고 여러 노드에서 Nagios의 관리자를 설정하는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="131a4f1c783c026e7b220cef62dfb1e12754046d" translate="yes" xml:space="preserve">
          <source>The following example shows how to set up IPv4 packet forwarding using the &lt;strong&gt;execute&lt;/strong&gt; resource to run a command named &lt;code&gt;forward_ipv4&lt;/code&gt; that uses a template defined by the &lt;strong&gt;template&lt;/strong&gt; resource:</source>
          <target state="translated">다음 예제는 &lt;strong&gt;실행&lt;/strong&gt; 자원을 사용하여 IPv4 패킷 전달을 설정 하여 &lt;strong&gt;템플리트&lt;/strong&gt; 자원으로 정의 된 템플리트를 사용하는 &lt;code&gt;forward_ipv4&lt;/code&gt; 라는 명령을 실행하는 방법을 보여줍니다 .&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3f875a5fe12d3b2e010d6f6568c5824f6da1f781" translate="yes" xml:space="preserve">
          <source>The following example shows how to specify custom configuration data using the &lt;code&gt;configuration_data&lt;/code&gt; property:</source>
          <target state="translated">다음 예제는 &lt;code&gt;configuration_data&lt;/code&gt; 특성을 사용하여 사용자 정의 구성 데이터를 지정하는 방법을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="76fac1ff306fa1c4e1224a840df5a7fd67f018ee" translate="yes" xml:space="preserve">
          <source>The following example shows how to specify custom configuration data using the &lt;code&gt;configuration_name&lt;/code&gt; property. For example, the following Windows PowerShell script defines the &lt;code&gt;vi&lt;/code&gt; configuration:</source>
          <target state="translated">다음 예제는 &lt;code&gt;configuration_name&lt;/code&gt; 특성을 사용하여 사용자 정의 구성 데이터를 지정하는 방법을 보여줍니다 . 예를 들어 다음 Windows PowerShell 스크립트는 &lt;code&gt;vi&lt;/code&gt; 구성을 정의합니다 .</target>
        </trans-unit>
        <trans-unit id="b873fb926fae7f83b89f0e8e6eb04cc631eba528" translate="yes" xml:space="preserve">
          <source>The following example shows how to use &lt;code&gt;not_if&lt;/code&gt; to guard against running the &lt;code&gt;apt-get-update&lt;/code&gt; command when a file already exists that is the same as the updated file:</source>
          <target state="translated">다음 예제는 &lt;code&gt;not_if&lt;/code&gt; 를 사용 하여 업데이트 된 파일과 동일한 파일이 이미 존재하는 경우 &lt;code&gt;apt-get-update&lt;/code&gt; 명령 실행을 방지 하는 방법을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="7767a15c1ad77a4a25c11ea3d09fbe1abc3a609c" translate="yes" xml:space="preserve">
          <source>The following example shows how to use &lt;code&gt;not_if&lt;/code&gt; to prevent ZeroMQ from being installed when the node on which the install is to occur has a version of Red Hat Enterprise Linux that is older than version 6.0:</source>
          <target state="translated">다음 예는 &lt;code&gt;not_if&lt;/code&gt; 를 사용 하여 설치가 발생할 노드에 버전 6.0 이전의 Red Hat Enterprise Linux 버전이있는 경우 ZeroMQ가 설치되지 않도록 하는 방법을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="f6cdcdcb4e130051f2a4685191da4215597f5fee" translate="yes" xml:space="preserve">
          <source>The following example shows how to use &lt;code&gt;only_if&lt;/code&gt; to ensure that the chef-client will attempt to register ASP.NET only if the executable is installed on the system, on both 32- and 64-bit systems:</source>
          <target state="translated">다음 예제는 &lt;code&gt;only_if&lt;/code&gt; 를 사용 하여 실행 파일이 32 비트 및 64 비트 시스템 모두에 시스템에 설치된 경우에만 chef-client가 ASP.NET을 등록하려고 시도 하는 방법을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="1b5b7016f950bd959c989b136c99cf46bddaf70e" translate="yes" xml:space="preserve">
          <source>The following example shows how to use &lt;code&gt;only_if&lt;/code&gt; to only remove a recipe named &lt;code&gt;recipe[ntp::undo]&lt;/code&gt;, but only when that recipe is part of the &lt;code&gt;recipe[ntp::default]&lt;/code&gt; run-list:</source>
          <target state="translated">다음 예는 &lt;code&gt;only_if&lt;/code&gt; 를 사용 하여 &lt;code&gt;recipe[ntp::undo]&lt;/code&gt; 라는 레시피 만 제거하고 레시피 가 &lt;code&gt;recipe[ntp::default]&lt;/code&gt; 실행 목록의 일부인 경우 에만 제거하는 방법을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="25bff19070bb6aa2e0db524be3ddd9d02e108ad6" translate="yes" xml:space="preserve">
          <source>The following example shows how to use &lt;code&gt;only_if&lt;/code&gt; with one (or more) cookbook attributes to ensure that packages are only installed when necessary. In this case, three attributes exist in the &lt;code&gt;/attributes/default.rb&lt;/code&gt; file: &lt;code&gt;use_openssl&lt;/code&gt;, &lt;code&gt;use_pcre&lt;/code&gt;, and &lt;code&gt;use_zlib&lt;/code&gt;. Each of these attributes are defined as &lt;code&gt;false&lt;/code&gt; by default. The &lt;code&gt;only_if&lt;/code&gt; attributes are used to test for the presence of these packages on the target node before then asking the chef-client to complete the process of installing these packages. If the packages are already present, the chef-client will do nothing.</source>
          <target state="translated">다음 예제는 하나 이상의 요리 책 속성과 함께 &lt;code&gt;only_if&lt;/code&gt; 를 사용 하여 필요할 때만 패키지가 설치되도록하는 방법을 보여줍니다 . 이 경우, &lt;code&gt;/attributes/default.rb&lt;/code&gt; 파일 에는 세 가지 속성 인 &lt;code&gt;use_openssl&lt;/code&gt; , &lt;code&gt;use_pcre&lt;/code&gt; 및 &lt;code&gt;use_zlib&lt;/code&gt; 가 있습니다. 이러한 각 속성은 기본적 으로 &lt;code&gt;false&lt;/code&gt; 로 정의됩니다 . &lt;code&gt;only_if&lt;/code&gt; 속성은이 패키지를 설치하는 과정을 완료 요리사 클라이언트를 요청하기 전에 대상 노드에이 패키지의 존재를 테스트하는 데 사용됩니다. 패키지가 이미 존재하면 요리사 클라이언트는 아무것도하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="11bde4d4a738e7787c490566de57caebf1b67944" translate="yes" xml:space="preserve">
          <source>The following example shows how to use a Ruby whitespace array to define a list of configuration tools, and then use that list of tools within the &lt;strong&gt;template&lt;/strong&gt; resource to ensure that all of these configuration tools are using the same RSA key:</source>
          <target state="translated">다음 예제는 Ruby 공백 배열을 사용하여 구성 도구 목록을 정의한 후 &lt;strong&gt;템플리트&lt;/strong&gt; 자원 내에서 해당 도구 목록을 사용하여 모든 구성 도구가 동일한 RSA 키를 사용하는지 확인하는 방법을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="04b34cc6964716d592c4d646b9bd1408ab2d1cc9" translate="yes" xml:space="preserve">
          <source>The following example shows how to use a case statement to tell the chef-client which platforms and packages to install using cURL.</source>
          <target state="translated">다음 예제는 case 문을 사용하여 cURL을 사용하여 설치할 플랫폼 및 패키지를 chef-client에게 알려주는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="93e87d44a0b5b5d76b4fb65b6074bf4474067759" translate="yes" xml:space="preserve">
          <source>The following example shows how to use a custom block of Ruby code to ensure that a node can resolve the host. If the node can resolve the host, the chef-client will do nothing. If the node cannot resolve the host, the chef-client will configure the host:</source>
          <target state="translated">다음 예제는 사용자 정의 Ruby 코드 블록을 사용하여 노드가 호스트를 확인할 수 있도록하는 방법을 보여줍니다. 노드가 호스트를 해결할 수 있으면 chef-client는 아무것도하지 않습니다. 노드가 호스트를 해결할 수없는 경우 chef-client는 호스트를 구성합니다.</target>
        </trans-unit>
        <trans-unit id="80da79f35944d7a06af29973fd5900dac75616d6" translate="yes" xml:space="preserve">
          <source>The following example shows how to use a variable within a Ruby block to set the &lt;code&gt;java_home&lt;/code&gt; environment variable:</source>
          <target state="translated">다음 예제는 Ruby 블록 내에서 변수를 사용하여 &lt;code&gt;java_home&lt;/code&gt; 환경 변수 를 설정하는 방법을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="401a4e0d725bc26092411ac4b23ee36023cc768c" translate="yes" xml:space="preserve">
          <source>The following example shows how to use lazy evaluation with template variables:</source>
          <target state="translated">다음 예제는 템플릿 변수와 함께 지연 평가를 사용하는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="588999c3a55cf418aa2148582a669c52b00ea3bf" translate="yes" xml:space="preserve">
          <source>The following example shows how to use the &lt;code&gt;content&lt;/code&gt; property to write a YAML file:</source>
          <target state="translated">다음 예제는 &lt;code&gt;content&lt;/code&gt; 속성을 사용하여 YAML 파일을 작성하는 방법을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="81b1b523b80158cf31cd324a03d5a14c1ccc9a27" translate="yes" xml:space="preserve">
          <source>The following example shows how to use the &lt;code&gt;data_bag&lt;/code&gt; and &lt;code&gt;data_bag_item&lt;/code&gt; methods in a recipe, also using a data bag named &lt;code&gt;sea-power&lt;/code&gt;):</source>
          <target state="translated">다음 예제는 &lt;code&gt;sea-power&lt;/code&gt; 라는 데이터 백을 사용하여 레시피에서 &lt;code&gt;data_bag&lt;/code&gt; 및 &lt;code&gt;data_bag_item&lt;/code&gt; 메소드 를 사용하는 방법을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="4f37d24983971530c4c735b9da81dba3e33fd750" translate="yes" xml:space="preserve">
          <source>The following example shows how to use the &lt;code&gt;knife bootstrap&lt;/code&gt; subcommand to create a client configuration file (/etc/chef/client.rb) that uses Hosted Chef as the Chef server. The configuration file will look something like:</source>
          <target state="translated">다음 예제는 &lt;code&gt;knife bootstrap&lt;/code&gt; 부속 명령을 사용하여 Hosted Chef를 Chef 서버로 사용하는 클라이언트 구성 파일 (/etc/chef/client.rb)을 작성하는 방법을 보여줍니다 . 구성 파일은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="dc687bc0de59d09d5e7ae80340eb8012bdac23bf" translate="yes" xml:space="preserve">
          <source>The following example shows how to use the &lt;code&gt;not_if&lt;/code&gt; condition to create a file based on a template and then Ruby code to specify the condition:</source>
          <target state="translated">다음 예제는 &lt;code&gt;not_if&lt;/code&gt; 조건을 사용하여 템플릿을 기반으로 파일을 만든 다음 Ruby 코드를 사용하여 조건을 지정하는 방법을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="4d7852a1fbb74f1144a409ce4736683090409123" translate="yes" xml:space="preserve">
          <source>The following example shows how to use the &lt;code&gt;not_if&lt;/code&gt; condition to create a file based on a template and using a Ruby block (with curly braces) to specify the condition:</source>
          <target state="translated">다음 예제는 &lt;code&gt;not_if&lt;/code&gt; 조건을 사용하여 템플리트를 기반으로 파일을 작성하고 Ruby 블록 (중괄호 포함)을 사용하여 조건을 지정하는 방법을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="e8c34d64f319bd1647682057e678905815a673a9" translate="yes" xml:space="preserve">
          <source>The following example shows how to use the &lt;code&gt;not_if&lt;/code&gt; condition to create a file based on a template and using a string to specify the condition:</source>
          <target state="translated">다음 예제는 &lt;code&gt;not_if&lt;/code&gt; 조건을 사용하여 템플리트를 기반으로 파일을 작성하고 문자열을 사용하여 조건을 지정하는 방법을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="825558fe9e0daa2dae36f92aaa750337acfbce7a" translate="yes" xml:space="preserve">
          <source>The following example shows how to use the &lt;code&gt;not_if&lt;/code&gt; condition to create a file based on a template and using the presence of an attribute value on the node to specify the condition:</source>
          <target state="translated">다음 예제는 &lt;code&gt;not_if&lt;/code&gt; 조건을 사용하여 템플리트를 기반으로 파일을 작성하고 노드에 속성 값을 사용하여 조건을 지정하는 방법을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="08f674c64f9229f17a4a600e70d68401d25d4e0b" translate="yes" xml:space="preserve">
          <source>The following example shows how to use the &lt;code&gt;only_if&lt;/code&gt; condition to create a file based on a template and using a string to specify the condition:</source>
          <target state="translated">다음 예제는 &lt;code&gt;only_if&lt;/code&gt; 조건을 사용하여 템플리트를 기반으로 파일을 작성하고 문자열을 사용하여 조건을 지정하는 방법을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="0e0f6548a15ea4b1b4c44428c7083ace88db8ce9" translate="yes" xml:space="preserve">
          <source>The following example shows how to use the &lt;code&gt;only_if&lt;/code&gt; condition to create a file based on a template and using the presence of an attribute on the node to specify the condition:</source>
          <target state="translated">다음 예제는 &lt;code&gt;only_if&lt;/code&gt; 조건을 사용하여 템플리트를 기반으로 파일을 작성하고 노드에서 속성을 사용하여 조건을 지정하는 방법을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="70e35611b03fff5c574df521230d7a43a7922a24" translate="yes" xml:space="preserve">
          <source>The following example shows how to use the &lt;code&gt;only_if&lt;/code&gt; condition to create a file based on a template, and then use Ruby to specify a condition:</source>
          <target state="translated">다음 예제는 &lt;code&gt;only_if&lt;/code&gt; 조건을 사용하여 템플릿을 기반으로 파일을 만든 다음 Ruby를 사용하여 조건을 지정하는 방법을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="beed31aa9006a0731b59e24020837843bf962b4c" translate="yes" xml:space="preserve">
          <source>The following example shows how to use the &lt;code&gt;search&lt;/code&gt; method in the Recipe DSL to search for users:</source>
          <target state="translated">다음 예제는 레시피 DSL에서 &lt;code&gt;search&lt;/code&gt; 방법 을 사용하여 사용자를 검색 하는 방법을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="38013437b252ae9c4c5c0cbf4ae5503a0fc02139" translate="yes" xml:space="preserve">
          <source>The following example shows how to use the &lt;strong&gt;execute&lt;/strong&gt;, &lt;strong&gt;service&lt;/strong&gt;, and &lt;strong&gt;mount&lt;/strong&gt; resources together to ensure that a node running on Amazon EC2 is running MySQL. This example does the following:</source>
          <target state="translated">다음 예제는 &lt;strong&gt;execute&lt;/strong&gt; , &lt;strong&gt;service&lt;/strong&gt; 및 &lt;strong&gt;mount&lt;/strong&gt; 리소스를 함께 사용하여 Amazon EC2에서 실행중인 노드가 MySQL을 실행하는지 확인하는 방법을 보여줍니다 . 이 예제는 다음을 수행합니다.</target>
        </trans-unit>
        <trans-unit id="0e207123d769765b442d371f58a1a9c8ac25c1aa" translate="yes" xml:space="preserve">
          <source>The following example shows how to use the &lt;strong&gt;package&lt;/strong&gt; resource to install an application named &lt;code&gt;app&lt;/code&gt; and ensure that the correct packages are installed for the correct platform:</source>
          <target state="translated">다음 예제는 &lt;strong&gt;package&lt;/strong&gt; 자원을 사용하여 &lt;code&gt;app&lt;/code&gt; 이라는 애플리케이션 을 설치하고 올바른 플랫폼에 올바른 패키지가 설치되어 있는지 확인하는 방법을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="47db8298d232e07734f1c252a241ce41d973d56e" translate="yes" xml:space="preserve">
          <source>The following example shows how to use the &lt;strong&gt;remote_directory&lt;/strong&gt; resource and the &lt;strong&gt;chef_handler&lt;/strong&gt; resource to reboot a handler named &lt;code&gt;WindowsRebootHandler&lt;/code&gt;:</source>
          <target state="translated">다음 예제는 &lt;strong&gt;remote_directory&lt;/strong&gt; 자원 및 &lt;strong&gt;chef_handler&lt;/strong&gt; 자원을 사용하여 &lt;code&gt;WindowsRebootHandler&lt;/code&gt; 라는 핸들러를 재부팅하는 방법을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="83501f297344636b9a9bd779ab33c969db2f0ad6" translate="yes" xml:space="preserve">
          <source>The following example shows how to use the &lt;strong&gt;ruby_block&lt;/strong&gt; resource to stash a BitTorrent file in a data bag so that it can be distributed to nodes in the organization.</source>
          <target state="translated">다음 예제는 &lt;strong&gt;ruby_block&lt;/strong&gt; 자원 을 사용하여 데이터 백에 BitTorrent 파일을 숨겨 조직의 노드에 분배 할 수있는 방법을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="ee717a0dfb1a8c7bcc0e7087931f4396e68b04f5" translate="yes" xml:space="preserve">
          <source>The following example shows how to use variables within a Ruby block to set environment variables using rbenv.</source>
          <target state="translated">다음 예는 Ruby 블록 내에서 변수를 사용하여 rbenv를 사용하여 환경 변수를 설정하는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="b4b7a1e8f857f0066cf2468f8e06789993742841" translate="yes" xml:space="preserve">
          <source>The following example shows how to verify &lt;code&gt;sshd&lt;/code&gt; configration, including whether it&amp;rsquo;s installed, what the permissions are, and how it can be accessed:</source>
          <target state="translated">다음 예는 설치 여부, 권한 및 액세스 방법을 포함하여 &lt;code&gt;sshd&lt;/code&gt; 구성 을 확인하는 방법을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="cbff8930f6611ffdeaadb894ab5edf7bad9cca6c" translate="yes" xml:space="preserve">
          <source>The following example shows how to verify that a file has the desired permissions and contents:</source>
          <target state="translated">다음 예제는 파일에 원하는 권한과 내용이 있는지 확인하는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="c998766e6554b4c531014aba04cdfa7c488c13e8" translate="yes" xml:space="preserve">
          <source>The following example shows installing a filter module on Apache. The package name is different for different platforms, and for the Red Hat Enterprise Linux family, a symbolic link is required:</source>
          <target state="translated">다음 예제는 Apache에 필터 모듈을 설치하는 것을 보여줍니다. 패키지 이름은 플랫폼마다 다르며 Red Hat Enterprise Linux 제품군의 경우 심볼릭 링크가 필요합니다.</target>
        </trans-unit>
        <trans-unit id="5633e1133c08d1b9bff10f3cbc287441a3b02c7f" translate="yes" xml:space="preserve">
          <source>The following example shows using multiple &lt;code&gt;Chef::Log&lt;/code&gt; entry types:</source>
          <target state="translated">다음은 여러 &lt;code&gt;Chef::Log&lt;/code&gt; 항목 유형을 사용하는 예입니다 .</target>
        </trans-unit>
        <trans-unit id="d5e410cb969e9a68100ee45a48228b15f37a3260" translate="yes" xml:space="preserve">
          <source>The following example shows using the &lt;strong&gt;directory&lt;/strong&gt; and &lt;strong&gt;cookbook_file&lt;/strong&gt; resources to manage dotfiles. The dotfiles are defined by a JSON data structure similar to:</source>
          <target state="translated">다음 예제는 &lt;strong&gt;디렉토리&lt;/strong&gt; 및 &lt;strong&gt;cookbook_file&lt;/strong&gt; 자원을 사용하여 도트 파일을 관리 하는 방법을 보여줍니다 . 도트 파일은 다음과 유사한 JSON 데이터 구조로 정의됩니다.</target>
        </trans-unit>
        <trans-unit id="8fecf425117e25586de2efe9cf15a9c9bd42f99a" translate="yes" xml:space="preserve">
          <source>The following example shows using version constraints to specify a value based on the version:</source>
          <target state="translated">다음 예제는 버전 제한 조건을 사용하여 버전을 기반으로 값을 지정하는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="c5db1e0ba10d6a2bec6859c97c1e18715bbafad1" translate="yes" xml:space="preserve">
          <source>The following example shows where callbacks fit in relation to the steps taken by the &lt;code&gt;deploy&lt;/code&gt; process in Capistrano:</source>
          <target state="translated">다음 예는 Capistrano 의 &lt;code&gt;deploy&lt;/code&gt; 프로세스에서 취한 단계와 관련하여 콜백이 적합한 위치를 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="9ec9bd13090b80e1dc339441e9a11632ef6571be" translate="yes" xml:space="preserve">
          <source>The following example specifies a directory, and then uses the &lt;code&gt;content&lt;/code&gt; property to add a string to the file created in that directory:</source>
          <target state="translated">다음 예제는 디렉토리를 지정한 다음 &lt;code&gt;content&lt;/code&gt; 속성을 사용하여 해당 디렉토리에서 작성된 파일에 문자열을 추가합니다.</target>
        </trans-unit>
        <trans-unit id="975158120a2dfb37af5577138066b782df4a5261" translate="yes" xml:space="preserve">
          <source>The following example uses the &lt;strong&gt;git&lt;/strong&gt; resource to upgrade packages:</source>
          <target state="translated">다음 예제는 &lt;strong&gt;git&lt;/strong&gt; 리소스를 사용하여 패키지를 업그레이드합니다.</target>
        </trans-unit>
        <trans-unit id="9ad0f55258a6f889d46bae2d9e2f6d5117f93efc" translate="yes" xml:space="preserve">
          <source>The following example will create a hard link from &lt;code&gt;/tmp/file&lt;/code&gt; to &lt;code&gt;/etc/file&lt;/code&gt;:</source>
          <target state="translated">다음 예제는 &lt;code&gt;/tmp/file&lt;/code&gt; 에서 &lt;code&gt;/etc/file&lt;/code&gt; 로의 하드 링크를 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="8487a980c64755553b9cc787cc1839cf15c3b138" translate="yes" xml:space="preserve">
          <source>The following example will create a symbolic link from &lt;code&gt;/tmp/file&lt;/code&gt; to &lt;code&gt;/etc/file&lt;/code&gt;:</source>
          <target state="translated">다음 예제는 &lt;code&gt;/tmp/file&lt;/code&gt; 에서 &lt;code&gt;/etc/file&lt;/code&gt; 로의 심볼릭 링크를 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="5a3dff9038ad73f2d52785cd0f9fb32de447817c" translate="yes" xml:space="preserve">
          <source>The following example will delete the &lt;code&gt;/tmp/file&lt;/code&gt; symbolic link and uses the &lt;code&gt;only_if&lt;/code&gt; guard to run the &lt;code&gt;test -L&lt;/code&gt; command, which verifies that &lt;code&gt;/tmp/file&lt;/code&gt; is a symbolic link, and then only deletes &lt;code&gt;/tmp/file&lt;/code&gt; if the test passes:</source>
          <target state="translated">다음 예제는 &lt;code&gt;/tmp/file&lt;/code&gt; 심볼릭 링크 를 삭제하고 &lt;code&gt;only_if&lt;/code&gt; 가드를 사용하여 &lt;code&gt;test -L&lt;/code&gt; 명령 을 실행하여 &lt;code&gt;/tmp/file&lt;/code&gt; 이 심볼릭 링크인지 확인한 다음 테스트가 통과되면 &lt;code&gt;/tmp/file&lt;/code&gt; 만 삭제 합니다.</target>
        </trans-unit>
        <trans-unit id="4c457b47e82282a8ad324f136531f864c6725045" translate="yes" xml:space="preserve">
          <source>The following example will go through all nodes on the server, and then replace the word &lt;code&gt;foobar&lt;/code&gt; with &lt;code&gt;baz&lt;/code&gt;:</source>
          <target state="translated">다음 예제는 서버의 모든 노드를 통과 한 다음 &lt;code&gt;foobar&lt;/code&gt; 라는 단어 를 &lt;code&gt;baz&lt;/code&gt; 로 바꿉니다 .</target>
        </trans-unit>
        <trans-unit id="20b3641dfcdcc1b9fe910d62e751bf4d546e8e55" translate="yes" xml:space="preserve">
          <source>The following example will set &lt;code&gt;package&lt;/code&gt; to &lt;code&gt;apache-couchdb&lt;/code&gt; for OpenBSD platforms, &lt;code&gt;dev-db/couchdb&lt;/code&gt; for Gentoo platforms, and &lt;code&gt;couchdb&lt;/code&gt; for all other platforms:</source>
          <target state="translated">다음 예제는 OpenBSD 플랫폼의 경우 &lt;code&gt;package&lt;/code&gt; 를 &lt;code&gt;apache-couchdb&lt;/code&gt; , Gentoo 플랫폼의 경우 &lt;code&gt;dev-db/couchdb&lt;/code&gt; , 기타 모든 플랫폼의 경우 &lt;code&gt;couchdb&lt;/code&gt; 로 설정합니다.</target>
        </trans-unit>
        <trans-unit id="501dfd02ea7806124df9210676d94e0f89495376" translate="yes" xml:space="preserve">
          <source>The following example will set &lt;code&gt;package&lt;/code&gt; to &lt;code&gt;httpd-devel&lt;/code&gt; for the Red Hat Enterprise Linux, Fedora, and openSUSE platforms and to &lt;code&gt;apache2-dev&lt;/code&gt; for the Debian platform:</source>
          <target state="translated">다음 예는 설정합니다 &lt;code&gt;package&lt;/code&gt; 에 &lt;code&gt;httpd-devel&lt;/code&gt; 는 Red Hat Enterprise Linux, 페도라와 오픈 수세 플랫폼과에 &lt;code&gt;apache2-dev&lt;/code&gt; 데비안 플랫폼을 :</target>
        </trans-unit>
        <trans-unit id="07903740165b20880a7b26d372545caaa35ea555" translate="yes" xml:space="preserve">
          <source>The following example will set &lt;code&gt;package_name&lt;/code&gt; to &lt;code&gt;httpd&lt;/code&gt; for the Red Hat platform and to &lt;code&gt;apache2&lt;/code&gt; for the Debian platform:</source>
          <target state="translated">다음 예제는 Red Hat 플랫폼의 경우 &lt;code&gt;package_name&lt;/code&gt; 을 &lt;code&gt;httpd&lt;/code&gt; 로, Debian 플랫폼의 경우 &lt;code&gt;apache2&lt;/code&gt; 로 설정합니다.</target>
        </trans-unit>
        <trans-unit id="86f36aa93e05a57d45d6a0c4db8f568aed2b48a1" translate="yes" xml:space="preserve">
          <source>The following examples are listed from low to high precedence.</source>
          <target state="translated">다음 예는 낮은 우선 순위에서 높은 우선 순위로 나열됩니다.</target>
        </trans-unit>
        <trans-unit id="43d783ef0e98fd5277f23525268f5ca2868d82ca" translate="yes" xml:space="preserve">
          <source>The following examples demonstrate various approaches for using resources in recipes. If you want to see examples of how Chef uses resources in recipes, take a closer look at the cookbooks that Chef authors and maintains: &lt;a href=&quot;https://github.com/chef-cookbooks&quot;&gt;https://github.com/chef-cookbooks&lt;/a&gt;.</source>
          <target state="translated">다음 예는 레시피에서 자원을 사용하기위한 다양한 접근 방법을 보여줍니다. Chef가 레시피에서 자원을 사용하는 방법에 대한 예를 보려면 Chef가 작성하고 유지 보수하는 요리 책 ( &lt;a href=&quot;https://github.com/chef-cookbooks&quot;&gt;https://github.com/chef-cookbooks)을&lt;/a&gt; 자세히 살펴보십시오 .</target>
        </trans-unit>
        <trans-unit id="ddc5898470771e10a3467ee0538dd4db8a9c6190" translate="yes" xml:space="preserve">
          <source>The following examples show different ways of doing the same thing. The first shows a series of packages that will be upgraded:</source>
          <target state="translated">다음 예제는 동일한 작업을 수행하는 다양한 방법을 보여줍니다. 첫 번째는 업그레이드 될 일련의 패키지를 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="83a9c5b61a22eef8477aefb4f366e4bbd975e59e" translate="yes" xml:space="preserve">
          <source>The following examples show how a bootstrap template file can be customized for various platforms.</source>
          <target state="translated">다음 예제는 부트 스트랩 템플리트 파일을 다양한 플랫폼에 맞게 사용자 정의하는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="69c983b789117dfd5a5f2a3c0dc3ce36a03212d9" translate="yes" xml:space="preserve">
          <source>The following examples show how the &lt;code&gt;data_bag_item&lt;/code&gt; method can be used in a recipe.</source>
          <target state="translated">다음 예는 &lt;code&gt;data_bag_item&lt;/code&gt; 메소드를 레시피에서 사용 하는 방법을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="b39131a5b730edd501bb300ea4c0428ad7185e56" translate="yes" xml:space="preserve">
          <source>The following examples show how the &lt;code&gt;platform_family?&lt;/code&gt; method can be used in a recipe.</source>
          <target state="translated">다음 예제는 &lt;code&gt;platform_family?&lt;/code&gt; 방법은 레시피에 사용될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e91751ae3e4c1c6c1ccd9044a4f7c5eb9b5598f4" translate="yes" xml:space="preserve">
          <source>The following examples show how the &lt;code&gt;search&lt;/code&gt; method can be used in a recipe.</source>
          <target state="translated">다음 예 는 레시피에서 &lt;code&gt;search&lt;/code&gt; 방법을 사용 하는 방법을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="01c9b7a400e0774a549f2ccfe80a7a6a9b592f19" translate="yes" xml:space="preserve">
          <source>The following examples show how the logic works for adding a string using a hash:</source>
          <target state="translated">다음 예제는 해시를 사용하여 문자열을 추가하는 논리의 작동 방식을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="3d439704ed5e35b1a60a6fe8a190025b6a5a8805" translate="yes" xml:space="preserve">
          <source>The following examples show how the logic works for substituting an existing string using a hash:</source>
          <target state="translated">다음 예제는 해시를 사용하여 기존 문자열을 대체하는 논리의 작동 방식을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="619ba9e8144935cbec8d6caa11ff8d8712157e93" translate="yes" xml:space="preserve">
          <source>The following examples show how to add entries to the &lt;code&gt;chefignore&lt;/code&gt; file.</source>
          <target state="translated">다음 예제는 &lt;code&gt;chefignore&lt;/code&gt; 파일에 항목을 추가하는 방법을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="43c16caa32f0aefe7a587fe06ce0b5bcd584731e" translate="yes" xml:space="preserve">
          <source>The following examples show how to remove a specific, named attribute precedence level.</source>
          <target state="translated">다음 예제는 특정 명명 된 속성 우선 순위 레벨을 제거하는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="14fedeef1e1ddafc42e13f35659ee2525882b065" translate="yes" xml:space="preserve">
          <source>The following examples show how to remove all attribute precedence levels.</source>
          <target state="translated">다음 예제는 모든 속성 우선 순위 레벨을 제거하는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="cd6cd992a9550338863e925ae4a1c0c0beeca6f5" translate="yes" xml:space="preserve">
          <source>The following examples show how to use common actions in a recipe.</source>
          <target state="translated">다음 예는 레시피에서 일반적인 동작을 사용하는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="0dbdc23104d8ddff9f84ee2b1b8d6327f921edce" translate="yes" xml:space="preserve">
          <source>The following examples show how to use common properties in a recipe.</source>
          <target state="translated">다음 예는 레시피에서 공통 속성을 사용하는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="d06ce11a2bc66a6b2b521c45f7776513e74cb5aa" translate="yes" xml:space="preserve">
          <source>The following examples show how to use cookbook definitions.</source>
          <target state="translated">다음 예제는 요리 책 정의를 사용하는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="cae88bdda9ac50cd8fc2ba643fddf6b7c131ab75" translate="yes" xml:space="preserve">
          <source>The following examples show how to use cookbook libraries.</source>
          <target state="translated">다음 예제는 요리 책 라이브러리를 사용하는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="bb43e48ca25e459b0789a7564c456d1799055ef4" translate="yes" xml:space="preserve">
          <source>The following examples show how to use the &lt;code&gt;notifies&lt;/code&gt; notification in a recipe.</source>
          <target state="translated">다음 예는 사용하는 방법을 보여 &lt;code&gt;notifies&lt;/code&gt; 조리법에 통지합니다.</target>
        </trans-unit>
        <trans-unit id="8dcfe54cf6e952913471bd1064876421d16a1db7" translate="yes" xml:space="preserve">
          <source>The following examples show how to use the &lt;code&gt;subscribes&lt;/code&gt; notification in a recipe.</source>
          <target state="translated">다음 예 는 레시피에서 &lt;code&gt;subscribes&lt;/code&gt; 알림 을 사용하는 방법을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="ee6062099698a6def0e7bc75672e33e02e86140c" translate="yes" xml:space="preserve">
          <source>The following examples show how to use this knife subcommand:</source>
          <target state="translated">다음 예제는이 knife 부속 명령을 사용하는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="f6b67b7396ac7e5b113a5b31a0e51037159978bb" translate="yes" xml:space="preserve">
          <source>The following examples show using &lt;code&gt;Chef::Log&lt;/code&gt; entries in a recipe.</source>
          <target state="translated">다음 예제 는 레시피에서 &lt;code&gt;Chef::Log&lt;/code&gt; 항목을 사용하는 것을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="f2b6cb86cd7adb467050af6a58b665513e84b97e" translate="yes" xml:space="preserve">
          <source>The following examples show various ways of listing all nodes on the server, and then using Perl to replace &lt;code&gt;grantmc&lt;/code&gt; with &lt;code&gt;gmc&lt;/code&gt;:</source>
          <target state="translated">다음 예제는 서버의 모든 노드를 나열한 다음 Perl을 사용하여 &lt;code&gt;grantmc&lt;/code&gt; 를 &lt;code&gt;gmc&lt;/code&gt; 로 바꾸는 다양한 방법을 보여줍니다. .</target>
        </trans-unit>
        <trans-unit id="d3458d43f82fe5ce6da144db1d227cafea7972ce" translate="yes" xml:space="preserve">
          <source>The following examples show ways to use the Handler DSL.</source>
          <target state="translated">다음 예제는 핸들러 DSL을 사용하는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="69c29c36f283f207952da96b54a9ed9aae884819" translate="yes" xml:space="preserve">
          <source>The following examples show when (and when not) to use &lt;code&gt;run_action&lt;/code&gt;.</source>
          <target state="translated">다음 예제는 &lt;code&gt;run_action&lt;/code&gt; 을 사용하는시기와 사용하지 않은시기를 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="f9269bc5ebb489292e15c2fb052325cf2d81a9ab" translate="yes" xml:space="preserve">
          <source>The following examples show:</source>
          <target state="translated">다음 예는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="f577351d35bbca152683a32e8b388a140b5f11c9" translate="yes" xml:space="preserve">
          <source>The following four common scenarios are discussed:</source>
          <target state="translated">다음과 같은 4 가지 일반적인 시나리오가 설명됩니다.</target>
        </trans-unit>
        <trans-unit id="03647511f4c74fb0d6de0b8bda04eb442b417dec" translate="yes" xml:space="preserve">
          <source>The following group accounts are required:</source>
          <target state="translated">다음과 같은 그룹 계정이 필요합니다.</target>
        </trans-unit>
        <trans-unit id="f8c4c5ebabb825c4c7aa035e80febce0d310f123" translate="yes" xml:space="preserve">
          <source>The following information does not apply to hosted Chef server 12, only to on-premises Chef server 12.</source>
          <target state="translated">다음 정보는 호스팅 된 Chef 서버 (12)에는 적용되지 않으며 온-프레미스 Chef 서버 (12)에만 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="f7f125ccac671523b36dab925ac1755a3ce1ffc2" translate="yes" xml:space="preserve">
          <source>The following interfaces may be used in a handler in the same way as the &lt;code&gt;report&lt;/code&gt; interface to override the default handler behavior in the chef-client. That said, the following interfaces are not typically used in a handler and, for the most part, are completely unnecessary for a handler to work properly and/or as desired.</source>
          <target state="translated">다음 인터페이스는 &lt;code&gt;report&lt;/code&gt; 와 같은 방식으로 핸들러에서 사용될 수 있습니다. 인터페이스 chef-client의 기본 핸들러 동작을 대체 할 수 있습니다. 즉, 다음 인터페이스는 일반적으로 핸들러에서 사용되지 않으며 대부분의 경우 핸들러가 제대로 작동하거나 원하는대로 작동하는 데 완전히 필요하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="129d9f84ac832d81d0506c9b1aad142e29426c58" translate="yes" xml:space="preserve">
          <source>The following is an example log entry:</source>
          <target state="translated">다음은 로그 항목의 예입니다.</target>
        </trans-unit>
        <trans-unit id="c1b1818c7f8cdd2e89d96a38cd216b04c1b5a909" translate="yes" xml:space="preserve">
          <source>The following is an example of how to install the &lt;code&gt;foo123&lt;/code&gt; module for Nginx. This module adds shell-style functionality to an Nginx configuration file and does the following:</source>
          <target state="translated">다음은 Nginx 용 &lt;code&gt;foo123&lt;/code&gt; 모듈 을 설치하는 방법의 예입니다 . 이 모듈은 Nginx 구성 파일에 쉘 스타일 기능을 추가하고 다음을 수행합니다.</target>
        </trans-unit>
        <trans-unit id="54e94705d5c3afd39cdbae4495131a74b76e5b56" translate="yes" xml:space="preserve">
          <source>The following is an example of using the &lt;code&gt;platform_family?&lt;/code&gt; method in the Recipe DSL to create a variable that can be used with other resources in the same recipe. In this example, &lt;code&gt;platform_family?&lt;/code&gt; is being used to ensure that a specific binary is used for a specific platform before using the &lt;strong&gt;remote_file&lt;/strong&gt; resource to download a file from a remote location, and then using the &lt;strong&gt;execute&lt;/strong&gt; resource to install that file by running a command.</source>
          <target state="translated">다음은 &lt;code&gt;platform_family?&lt;/code&gt; 를 사용하는 예 입니까? 같은 레시피에서 다른 자원과 함께 사용할 수있는 변수를 작성하기 위해 레시피 DSL의 메소드. 이 예에서 &lt;code&gt;platform_family?&lt;/code&gt; &lt;strong&gt;remote_file&lt;/strong&gt; 자원을 사용하여 원격 위치에서 파일을 다운로드 한 후 명령을 실행하여 해당 파일을 설치하기 위해 &lt;strong&gt;execute&lt;/strong&gt; 자원을 사용 하기 전에 특정 플랫폼에 특정 바이너리가 사용되는지 확인하는 데 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="ef858e48594c3125434886730e96e4b763754589" translate="yes" xml:space="preserve">
          <source>The following items are prerequisites for installing the chef-client on a workstation:</source>
          <target state="translated">다음 항목은 워크 스테이션에 chef-client를 설치하기위한 전제 조건입니다.</target>
        </trans-unit>
        <trans-unit id="e8909a60dac74ea3078434e1bbd2f67a0f7c0a59" translate="yes" xml:space="preserve">
          <source>The following link describes how to configure the Chef server with a single backend machine and multiple frontend machines:</source>
          <target state="translated">다음 링크는 단일 백엔드 시스템과 다중 프론트 엔드 시스템으로 Chef 서버를 구성하는 방법을 설명합니다.</target>
        </trans-unit>
        <trans-unit id="dcc0241e738e7347a9c9924de141472d3d91ce9f" translate="yes" xml:space="preserve">
          <source>The following links describe how to configure the Chef server for high availability:</source>
          <target state="translated">다음 링크는 고 가용성을 위해 Chef 서버를 구성하는 방법을 설명합니다.</target>
        </trans-unit>
        <trans-unit id="66ace318d6086bb18d335376e297e4c74120b52f" translate="yes" xml:space="preserve">
          <source>The following list describes all of the optional settings that can be added to the configuration file:</source>
          <target state="translated">다음 목록은 구성 파일에 추가 할 수있는 모든 선택적 설정을 설명합니다.</target>
        </trans-unit>
        <trans-unit id="e579ce67a689c41c85d92cfde0229d8075f03d34" translate="yes" xml:space="preserve">
          <source>The following log levels are supported:</source>
          <target state="translated">다음과 같은 로그 수준이 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="ccea548893c7628b12d99f7387ee48a69a15b01f" translate="yes" xml:space="preserve">
          <source>The following open source handlers are available from the Chef community:</source>
          <target state="translated">Chef 커뮤니티에서 다음 오픈 소스 핸들러를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a14087e29f6fc6dede57c07b2bc360af2e1031f2" translate="yes" xml:space="preserve">
          <source>The following operators can be used with cookbook versions:</source>
          <target state="translated">요리 책 버전과 함께 다음 연산자를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5d2764ba3c2c9e6dbbfef01aeb71ce4245da948b" translate="yes" xml:space="preserve">
          <source>The following operators may be used:</source>
          <target state="translated">다음과 같은 연산자를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="96f84b6135bcc64d08f69ddb6ed6e0b419b6fa19" translate="yes" xml:space="preserve">
          <source>The following options can be run with all knife subcommands and plug-ins:</source>
          <target state="translated">다음의 옵션은 모든 knife 하위 명령 및 플러그인과 함께 실행할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3d38ec200329801bfb3ef0f3ba636c08558806bb" translate="yes" xml:space="preserve">
          <source>The following parameters can be used with this method:</source>
          <target state="translated">이 방법으로 다음 매개 변수를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="729630b2a7b3b20dd600f16508a16ef7cfce5a33" translate="yes" xml:space="preserve">
          <source>The following platforms are not tested by Chef Software:</source>
          <target state="translated">다음 플랫폼은 Chef Software에서 테스트하지 않았습니다.</target>
        </trans-unit>
        <trans-unit id="d9587a66ca3236321230be80c65cd8fcf0c811cb" translate="yes" xml:space="preserve">
          <source>The following prerequisites apply to every installation of the Chef server.</source>
          <target state="translated">다음 전제 조건은 Chef 서버의 모든 설치에 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="2cf36725249a29a1c99b5e8f8bdd5ef232e90289" translate="yes" xml:space="preserve">
          <source>The following properties are common to every resource:</source>
          <target state="translated">다음은 모든 리소스에 공통적 인 속성입니다.</target>
        </trans-unit>
        <trans-unit id="e5929fd345a64d6b04f7c5970c57ca8edc7718ae" translate="yes" xml:space="preserve">
          <source>The following properties are for use with Subversion only:</source>
          <target state="translated">다음 속성은 Subversion에만 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="5db14b11dec48e2b84558ceda0fc220d4386a682" translate="yes" xml:space="preserve">
          <source>The following properties are for use with git only:</source>
          <target state="translated">다음 속성은 git에만 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="5b984115706b89b983668120ac2e249475cd588f" translate="yes" xml:space="preserve">
          <source>The following properties can be used to define a guard that is evaluated during the execution phase of the chef-client run:</source>
          <target state="translated">다음 속성을 사용하여 chef-client run의 실행 단계에서 평가되는 가드를 정의 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a9baa51f52ef758cad8e331650dc0d49e414544d" translate="yes" xml:space="preserve">
          <source>The following recipe can be used to create a user for each administrator by loading all of the items from the &amp;ldquo;admins&amp;rdquo; data bag, looping through each admin in the data bag, and then creating a user resource so that each of those admins exist:</source>
          <target state="translated">다음 레시피를 사용하여&amp;ldquo;admins&amp;rdquo;데이터 백에서 모든 항목을로드하고 데이터 백에서 각 관리자를 반복 한 다음 각 관리자가 존재하도록 사용자 자원을 작성하여 각 관리자의 사용자를 작성하는 데 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4e776a4d75fe0d648988006c132fb14082a1a7c5" translate="yes" xml:space="preserve">
          <source>The following recipe is added to the run-list for every node on which a list of cookbooks and versions will be generated as report output after every chef-client run.</source>
          <target state="translated">쿡북 및 버전 목록이 모든 요리사-클라이언트 실행 후 보고서 출력으로 생성 될 모든 노드의 실행 목록에 다음 레시피가 추가됩니다.</target>
        </trans-unit>
        <trans-unit id="a97ba047a90fe19398338333e48fe15c4e74b4a8" translate="yes" xml:space="preserve">
          <source>The following recipe shows how an attributes file can be used to store certain settings. An attributes file is located in the &lt;code&gt;attributes/&lt;/code&gt; directory in the same cookbook as the recipe which calls the attributes file. In this example, the attributes file specifies certain settings for Python that are then used across all nodes against which this recipe will run.</source>
          <target state="translated">다음 레시피는 속성 파일을 사용하여 특정 설정을 저장하는 방법을 보여줍니다. 속성 파일은 속성 파일 을 호출하는 레시피와 동일한 요리 책 의 &lt;code&gt;attributes/&lt;/code&gt; 디렉토리에 있습니다. 이 예제에서 속성 파일은이 레시피가 실행될 모든 노드에서 사용되는 Python의 특정 설정을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="07475668b92c9994d2e53074a57d985b7069f4af" translate="yes" xml:space="preserve">
          <source>The following relative paths can be used with any resource:</source>
          <target state="translated">다음과 같은 상대 경로를 모든 리소스와 함께 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="790c5e11ad8318d6aacc68c88b8e793a27748f59" translate="yes" xml:space="preserve">
          <source>The following resource properties may be used to define keys in the XML property list for a daemon or agent. Please refer to the Apple man page documentation for launchd for more information about these keys:</source>
          <target state="translated">다음 자원 특성을 사용하여 디먼 또는 에이전트의 XML 특성 목록에서 키를 정의 할 수 있습니다. 이러한 키에 대한 자세한 내용은 Apple 설명서 페이지를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="820a8261408177d45f7489bdd963af0c1fc7bafa" translate="yes" xml:space="preserve">
          <source>The following resources are platform resources (i.e. &amp;ldquo;are available from the chef-client directly and do not require a cookbook&amp;rdquo;):</source>
          <target state="translated">다음 리소스는 플랫폼 리소스입니다 (예 : &quot;chef-client에서 직접 구할 수 있으며 요리 책이 필요하지 않음&quot;).</target>
        </trans-unit>
        <trans-unit id="afb80c2635afb204d935e1e85fe8a75b03d2e6b1" translate="yes" xml:space="preserve">
          <source>The following sections describe additional Custom Resource DSL methods that were not used in the preceding scenario:</source>
          <target state="translated">다음 섹션에서는 이전 시나리오에서 사용되지 않은 추가 사용자 정의 자원 DSL 방법에 대해 설명합니다.</target>
        </trans-unit>
        <trans-unit id="1ade8ebadf62286d324fac8a754d8d1539915e7d" translate="yes" xml:space="preserve">
          <source>The following sections describe how to install the Chef development kit on a workstation:</source>
          <target state="translated">다음 섹션에서는 워크 스테이션에 Chef 개발 키트를 설치하는 방법에 대해 설명합니다.</target>
        </trans-unit>
        <trans-unit id="219133b2f8bf6e58669a1a90f1e59693a874fd9a" translate="yes" xml:space="preserve">
          <source>The following sections describe issues that are known to users of the Chef development kit on the Microsoft Windows platform.</source>
          <target state="translated">다음 섹션에서는 Microsoft Windows 플랫폼에서 Chef 개발 키트 사용자에게 알려진 문제에 대해 설명합니다.</target>
        </trans-unit>
        <trans-unit id="065c91df6fdcad2a6f8a4bab1c2edf3e23d25c78" translate="yes" xml:space="preserve">
          <source>The following sections describe the host specifications for various sizes of CCRs/min and help show when to consider moving from a standalone topology to a high availability or tiered topology.</source>
          <target state="translated">다음 섹션에서는 다양한 크기의 CCR / 분에 대한 호스트 사양을 설명하고 독립형 토폴로지에서 고 가용성 또는 계층 형 토폴로지로 전환 할시기를 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="01d63d9bff0d9ff6455f6affefebb02f5b069b46" translate="yes" xml:space="preserve">
          <source>The following sections describe the ports that are required by Chef Analytics:</source>
          <target state="translated">다음 섹션은 Chef Analytics에 필요한 포트를 설명합니다.</target>
        </trans-unit>
        <trans-unit id="a27b0ddca760a642fde5bebfe1247e7160e1f80d" translate="yes" xml:space="preserve">
          <source>The following sections describe the ports that are required by the Chef server in a high availability configuration that is running DRBD and Keepalived to manage the active/passive backend servers:</source>
          <target state="translated">다음 섹션에서는 DRBD 및 Keepalived를 실행중인 Active / Passive 백엔드 서버를 관리하는 고 가용성 구성에서 Chef 서버에 필요한 포트에 대해 설명합니다.</target>
        </trans-unit>
        <trans-unit id="1a4102c849b021e576afa552403cd9bf49ae1bc5" translate="yes" xml:space="preserve">
          <source>The following sections describe the ports that are required by the Chef server in a standalone configuration:</source>
          <target state="translated">다음 섹션은 독립형 구성에서 Chef 서버에 필요한 포트를 설명합니다.</target>
        </trans-unit>
        <trans-unit id="9c65f80b8e7ddc95b63d5f0654397d62bb822401" translate="yes" xml:space="preserve">
          <source>The following sections describe the ports that are required by the Chef server in a tiered configuration:</source>
          <target state="translated">다음 섹션에서는 계층 구성에서 Chef 서버에 필요한 포트에 대해 설명합니다.</target>
        </trans-unit>
        <trans-unit id="0e530b8c285dcf415f6235179fc928c28827af41" translate="yes" xml:space="preserve">
          <source>The following sections describe the priorities for monitoring of the Chef server. In particular, running out of disk space is the primary cause of failure.</source>
          <target state="translated">다음 섹션에서는 Chef 서버 모니터링 우선 순위에 대해 설명합니다. 특히 디스크 공간 부족이 주요 원인입니다.</target>
        </trans-unit>
        <trans-unit id="12052ae90c2328f926fe104ae5cbd9b52c6a349d" translate="yes" xml:space="preserve">
          <source>The following sections describe the upgrade process for Chef server 12.</source>
          <target state="translated">다음 섹션에서는 Chef 서버 12의 업그레이드 프로세스에 대해 설명합니다.</target>
        </trans-unit>
        <trans-unit id="2e4a98f9ed26568436ccfddbfe2b62092b8e8d92" translate="yes" xml:space="preserve">
          <source>The following sections describe the various settings that are available in the chef-server.rb file.</source>
          <target state="translated">다음 섹션에서는 chef-server.rb 파일에서 사용 가능한 다양한 설정에 대해 설명합니다.</target>
        </trans-unit>
        <trans-unit id="ccd7d68f930f62838a18668bdb04ff52c89f6a0b" translate="yes" xml:space="preserve">
          <source>The following sections describe ways of tuning the &lt;strong&gt;opscode-solr4&lt;/strong&gt; service to improve performance around large node sizes, available memory, and update frequencies.</source>
          <target state="translated">다음 섹션에서는 대규모 노드 크기, 사용 가능한 메모리 및 업데이트 빈도에 대한 성능을 향상시키기 위해 &lt;strong&gt;opscode-solr4&lt;/strong&gt; 서비스를 조정하는 방법에 대해 설명합니다 .</target>
        </trans-unit>
        <trans-unit id="e2f043bdcf432240c0d08a9874f416f03b0c5c8c" translate="yes" xml:space="preserve">
          <source>The following sections discuss these elements (and their various components) in more detail.</source>
          <target state="translated">다음 섹션에서는 이러한 요소 (및 다양한 구성 요소)에 대해 자세히 설명합니다.</target>
        </trans-unit>
        <trans-unit id="d7e8a1a7da2e57d262687dfedb1e2a8726129cf6" translate="yes" xml:space="preserve">
          <source>The following sections show an example chef-server.rb file and a list of the ports that are required by the Chef server.</source>
          <target state="translated">다음 섹션에서는 chef-server.rb 파일 예제와 Chef 서버에 필요한 포트 목록을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="02e15f99dcacf4dd38ba6eacb86a843e4ccfdaaa" translate="yes" xml:space="preserve">
          <source>The following sections show approaches to working with recipes.</source>
          <target state="translated">다음 섹션은 레시피 작업 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="e78378005aa8200a9314e63fdb5010b5c9f168fc" translate="yes" xml:space="preserve">
          <source>The following sections show examples of handlers.</source>
          <target state="translated">다음 섹션은 핸들러의 예를 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="06de6966a5d4b89778cd44892c54e56229128970" translate="yes" xml:space="preserve">
          <source>The following sections show examples of using the Chef server API.</source>
          <target state="translated">다음 섹션에서는 Chef 서버 API 사용 예를 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="6acfcccdafd07b88fa6164bf0e6108ede168e9d0" translate="yes" xml:space="preserve">
          <source>The following sections show how the logic works for using deep merge to perform substitutions and additions of attributes.</source>
          <target state="translated">다음 섹션에서는 심층 병합을 사용하여 특성의 대체 및 추가를 수행하는 논리의 작동 방식을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="b2139907c25e3ce8779504167e5505020bc165e5" translate="yes" xml:space="preserve">
          <source>The following sections show the Chef high availability settings as they appear in a chef-server.rb file and required permissions of the user in Identity and Access Management (IAM).</source>
          <target state="translated">다음 섹션에서는 chef-server.rb 파일에 나타나는 Chef 고 가용성 설정과 IAM (Identity and Access Management)에서 사용자의 필수 권한을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="b96a090394eb102f461285c9b58e5a449bde960d" translate="yes" xml:space="preserve">
          <source>The following sections show the default permissions assigned by the Chef server to the &lt;code&gt;admins&lt;/code&gt;, &lt;code&gt;billing_admins&lt;/code&gt;, &lt;code&gt;clients&lt;/code&gt;, and &lt;code&gt;users&lt;/code&gt; groups.</source>
          <target state="translated">다음 섹션에서는 Chef 서버가 &lt;code&gt;admins&lt;/code&gt; , &lt;code&gt;billing_admins&lt;/code&gt; , &lt;code&gt;clients&lt;/code&gt; 및 &lt;code&gt;users&lt;/code&gt; 그룹에 할당 한 기본 권한을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="3a316e329730edbb886c4e0fd514742d63750df8" translate="yes" xml:space="preserve">
          <source>The following sections show the optional settings for the knife.rb file, sorted by subcommand.</source>
          <target state="translated">다음 섹션에서는 knife.rb 파일의 선택적 설정을 하위 명령별로 정렬하여 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="df8c88da20cecc05db810574f1e86b0e9de5000a" translate="yes" xml:space="preserve">
          <source>The following sections show various approaches to ending a chef-client run.</source>
          <target state="translated">다음 섹션에서는 쉐프-클라이언트 실행을 종료하는 다양한 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="7dfa00309cb83e9f0f40a1e730dc734d948514c4" translate="yes" xml:space="preserve">
          <source>The following services are part of the Chef server:</source>
          <target state="translated">다음 서비스는 Chef 서버의 일부입니다.</target>
        </trans-unit>
        <trans-unit id="8085c88c00e7d00c93745c1c1abbe35448fe2025" translate="yes" xml:space="preserve">
          <source>The following setting is often modified from the default as part of the tuning effort for the &lt;strong&gt;bookshelf&lt;/strong&gt; service:</source>
          <target state="translated">다음 설정은 종종 &lt;strong&gt;책장&lt;/strong&gt; 서비스에 대한 조정 노력의 일부로 기본값에서 수정됩니다 .</target>
        </trans-unit>
        <trans-unit id="68901d2a612e9e3c5cc3ec56894ef168a21819b0" translate="yes" xml:space="preserve">
          <source>The following setting is often modified from the default as part of the tuning effort for the &lt;strong&gt;opscode-account&lt;/strong&gt; service:</source>
          <target state="translated">다음 설정은 종종 &lt;strong&gt;opscode 계정&lt;/strong&gt; 서비스에 대한 조정 노력의 일부로 기본값에서 수정됩니다 .</target>
        </trans-unit>
        <trans-unit id="7e4dceb66c28e96545f895f5d6936cb511a9a2f0" translate="yes" xml:space="preserve">
          <source>The following setting is often modified from the default as part of the tuning effort for the &lt;strong&gt;opscode-expander&lt;/strong&gt; service:</source>
          <target state="translated">다음 설정은 종종 &lt;strong&gt;opscode-expander&lt;/strong&gt; 서비스에 대한 조정 노력의 일부로 기본값에서 수정됩니다 .</target>
        </trans-unit>
        <trans-unit id="1b43aa41081609ec616c79df0cf7e2ef90a87d38" translate="yes" xml:space="preserve">
          <source>The following setting is often modified from the default as part of the tuning effort for the &lt;strong&gt;postgresql&lt;/strong&gt; service:</source>
          <target state="translated">다음 설정은 종종 &lt;strong&gt;postgresql&lt;/strong&gt; 서비스에 대한 조정 노력의 일부로 기본값에서 수정됩니다 .</target>
        </trans-unit>
        <trans-unit id="aa84b7996fde64f903f304a159cf9d84977e9b53" translate="yes" xml:space="preserve">
          <source>The following settings are often modified from the default as part of the tuning effort for the &lt;strong&gt;nginx&lt;/strong&gt; service and to configure the Chef server to use SSL certificates:</source>
          <target state="translated">다음 설정은 종종 &lt;strong&gt;nginx&lt;/strong&gt; 서비스 의 조정 노력의 일부로 기본값에서 수정되고 SSL 인증서를 사용하도록 Chef 서버를 구성합니다.</target>
        </trans-unit>
        <trans-unit id="a7c6cce0f637cc0624a9c5a4c595b6a01b183905" translate="yes" xml:space="preserve">
          <source>The following settings are often modified from the default as part of the tuning effort for the &lt;strong&gt;opscode-erchef&lt;/strong&gt; service:</source>
          <target state="translated">다음 설정은 종종 &lt;strong&gt;opscode-erchef&lt;/strong&gt; 서비스 의 조정 노력의 일부로 기본값에서 수정됩니다 .</target>
        </trans-unit>
        <trans-unit id="daa4a06761a5550dea6fe2050e0e4721000abdd8" translate="yes" xml:space="preserve">
          <source>The following settings are often used for performance tuning of the Chef server in larger installations.</source>
          <target state="translated">다음 설정은 대규모 설치에서 Chef 서버의 성능 조정에 자주 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="3ec3c9453c05aa53eac277e93ac24a980ad360f4" translate="yes" xml:space="preserve">
          <source>The following settings are often used to for performance tuning of the Chef server in larger installations.</source>
          <target state="translated">다음 설정은 대규모 설치에서 Chef 서버의 성능 조정에 자주 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="64e5bd5afac55771c850a72021b549c24310fa01" translate="yes" xml:space="preserve">
          <source>The following settings are typically added to the server configuration file (no equal sign is necessary to set the value):</source>
          <target state="translated">다음 설정은 일반적으로 서버 구성 파일에 추가됩니다 (값을 설정하는 데 등호가 필요 없음).</target>
        </trans-unit>
        <trans-unit id="324ac95f0a0215ca055a339f65e61ab545bf743b" translate="yes" xml:space="preserve">
          <source>The following settings may be used for tuning RabbitMQ queues used by Chef Analytics and the Chef server:</source>
          <target state="translated">Chef Analytics 및 Chef 서버에서 사용되는 RabbitMQ 큐를 조정하는 데 다음 설정을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f3a6ca19ebcd15f4e9fc47b33e7646f3a56375ef" translate="yes" xml:space="preserve">
          <source>The following settings must be modified when the Chef Analytics server is configured as a standalone server:</source>
          <target state="translated">Chef Analytics 서버가 독립형 서버로 구성된 경우 다음 설정을 수정해야합니다.</target>
        </trans-unit>
        <trans-unit id="23d4142153e6f86da5e2a84b0800869c987d9655" translate="yes" xml:space="preserve">
          <source>The following simplistic example shows a definition with no arguments (a parameterless macro in the truest sense):</source>
          <target state="translated">다음의 간단한 예는 인수가없는 정의 (가장 정확한 의미의 매개 변수없는 매크로)를 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="725c7f99c09d365070c1aebe8b33f813565d8d9c" translate="yes" xml:space="preserve">
          <source>The following subcommands run only against the open source Chef server: &lt;code&gt;index rebuild&lt;/code&gt; and &lt;code&gt;user&lt;/code&gt;.</source>
          <target state="translated">다음 하위 명령은 오픈 소스 Chef 서버에 대해서만 실행됩니다 : &lt;code&gt;index rebuild&lt;/code&gt; and &lt;code&gt;user&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="10411752fd3f04530a11c4994ae08523a53d1823" translate="yes" xml:space="preserve">
          <source>The following table describes the components in an external PostgreSQL configuration that are different from the default configuration of the Chef server:</source>
          <target state="translated">다음 표는 Chef 서버의 기본 구성과 다른 외부 PostgreSQL 구성의 구성 요소를 설명합니다.</target>
        </trans-unit>
        <trans-unit id="ae939460de60dd74dd1123e3626377d0c0693499" translate="yes" xml:space="preserve">
          <source>The following table describes the components that are different from the default configuration of the Chef server when cookbooks are stored at an external location:</source>
          <target state="translated">다음 표는 요리 책이 외부 위치에 저장 될 때 Chef 서버의 기본 구성과 다른 구성 요소를 설명합니다.</target>
        </trans-unit>
        <trans-unit id="c21cb4ecaffd2888b42755b983d96bf34164462f" translate="yes" xml:space="preserve">
          <source>The following table describes the events that may occur during a chef-client run. Each of these events may be referenced in an &lt;code&gt;on&lt;/code&gt; method block by declaring it as the event type.</source>
          <target state="translated">다음 표는 chef-client 실행 중에 발생할 수있는 이벤트를 설명합니다. 이러한 각 이벤트는 이벤트 유형으로 선언 하여 &lt;code&gt;on&lt;/code&gt; 메소드 블록 에서 참조 될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="8c4eae69f729e4a828de73a9d607b696dcb221d2" translate="yes" xml:space="preserve">
          <source>The following table lists the Foundational platforms for the Chef server:</source>
          <target state="translated">다음 표는 Chef 서버의 기본 플랫폼을 나열합니다.</target>
        </trans-unit>
        <trans-unit id="7fb4cb648079ab30cc2cc36f4840df716a6df382" translate="yes" xml:space="preserve">
          <source>The following tasks are available for user management in Chef server:</source>
          <target state="translated">Chef 서버에서 사용자 관리에 사용할 수있는 작업은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="a62a6bdcd52c00d893ab7fc9df460c3431c4b6bc" translate="yes" xml:space="preserve">
          <source>The following user accounts are required:</source>
          <target state="translated">다음과 같은 사용자 계정이 필요합니다.</target>
        </trans-unit>
        <trans-unit id="b82e0465741e3488a35c5cfc369f9f0882e20619" translate="yes" xml:space="preserve">
          <source>The following user accounts exist on the Chef server: &lt;code&gt;pivotal&lt;/code&gt; (a superuser account), &lt;code&gt;alice&lt;/code&gt;, &lt;code&gt;bob&lt;/code&gt;, &lt;code&gt;carol&lt;/code&gt;, and &lt;code&gt;dan&lt;/code&gt;. Run the following command to view a list of users on the Chef server:</source>
          <target state="translated">Chef 서버에는 &lt;code&gt;pivotal&lt;/code&gt; (수퍼 유저 계정), &lt;code&gt;alice&lt;/code&gt; , &lt;code&gt;bob&lt;/code&gt; , &lt;code&gt;carol&lt;/code&gt; 및 &lt;code&gt;dan&lt;/code&gt; 사용자 계정이 있습니다 . Chef 서버에서 사용자 목록을 보려면 다음 명령을 실행하십시오.</target>
        </trans-unit>
        <trans-unit id="69261cbc1bc6f6c366316a9b394e33b38895bc9f" translate="yes" xml:space="preserve">
          <source>The format in which data is sent to the Chef server. This header is required for &lt;code&gt;PUT&lt;/code&gt; and &lt;code&gt;POST&lt;/code&gt; requests and must be set to &lt;code&gt;application/json&lt;/code&gt;.</source>
          <target state="translated">Chef 서버로 데이터가 전송되는 형식입니다. 이 헤더는 &lt;code&gt;PUT&lt;/code&gt; 및 &lt;code&gt;POST&lt;/code&gt; 요청에 필요하며 &lt;code&gt;application/json&lt;/code&gt; 으로 설정되어야합니다 .</target>
        </trans-unit>
        <trans-unit id="b23c3b4b246ba300612dc039b47095e84c360c3b" translate="yes" xml:space="preserve">
          <source>The format in which response data from the Chef server is provided. This header must be set to &lt;code&gt;application/json&lt;/code&gt;.</source>
          <target state="translated">Chef 서버의 응답 데이터가 제공되는 형식입니다. 이 헤더는 &lt;code&gt;application/json&lt;/code&gt; 으로 설정되어야합니다 .</target>
        </trans-unit>
        <trans-unit id="67c252ec31d874182b4376d3b9de38c404f6e3f1" translate="yes" xml:space="preserve">
          <source>The frequency (in documents) at which node objects are added to the Apache Solr search index. Default value: &lt;code&gt;1000&lt;/code&gt; (every 1000 documents).</source>
          <target state="translated">Apache Solr 검색 색인에 노드 오브젝트가 추가되는 빈도 (문서). 기본값 : &lt;code&gt;1000&lt;/code&gt; (1000 개 문서마다)</target>
        </trans-unit>
        <trans-unit id="4a3883e9f4749328d0b5f20a0f756e18b52167c2" translate="yes" xml:space="preserve">
          <source>The frequency (in documents) at which node objects are added to the Apache Solr search index. This value should be tuned carefully. When data is committed to the Apache Solr index, all incoming updates are blocked. If the duration between updates is too short, it is possible for the rate at which updates are asked to occur to be faster than the rate at which objects can be actually committed. Default value: &lt;code&gt;1000&lt;/code&gt; (every 1000 documents).</source>
          <target state="translated">Apache Solr 검색 색인에 노드 오브젝트가 추가되는 빈도 (문서). 이 값은 신중하게 조정해야합니다. 데이터가 Apache Solr 인덱스에 커밋되면 들어오는 모든 업데이트가 차단됩니다. 업데이트 간격이 너무 짧으면 업데이트 요청 속도가 개체를 실제로 커밋 할 수있는 속도보다 빠를 수 있습니다. 기본값 : &lt;code&gt;1000&lt;/code&gt; (1000 개 문서마다)</target>
        </trans-unit>
        <trans-unit id="7e9188f865bec4ddce83cecad7b3b33366e6542d" translate="yes" xml:space="preserve">
          <source>The frequency (in milliseconds) at which the length of the RabbitMQ queue is checked. Default value: &lt;code&gt;30000&lt;/code&gt;.</source>
          <target state="translated">RabbitMQ 대기열의 길이를 확인하는 빈도 (밀리 초)입니다. 기본 값 : &lt;code&gt;30000&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6b61509440a274d3eb4f9c21c17b13741b1fdd07" translate="yes" xml:space="preserve">
          <source>The frequency (in seconds) at which a job is started.</source>
          <target state="translated">작업이 시작되는 빈도 (초).</target>
        </trans-unit>
        <trans-unit id="46f7de620c8477a6983669f428d8b693baa1861e" translate="yes" xml:space="preserve">
          <source>The frequency (in seconds) at which jobs are allowed to spawn. Default value: &lt;code&gt;10&lt;/code&gt;.</source>
          <target state="translated">작업이 생성 될 수있는 빈도 (초). 기본 값 : &lt;code&gt;10&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="13ecfcac6f618bfc2d41c8ac5eb6d5e07bbf31d4" translate="yes" xml:space="preserve">
          <source>The frequency (in seconds) at which messages are sent to the server log files if checkpoint segments are being filled faster than their currently configured values. Default value: &lt;code&gt;30s&lt;/code&gt;.</source>
          <target state="translated">검사 점 세그먼트가 현재 구성된 값보다 빠르게 채워지는 경우 메시지가 서버 로그 파일로 전송되는 빈도 (초)입니다. 기본 값 : &lt;code&gt;30s&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c91a57bf394fdc03536eedf6369f1598ad6bc1c4" translate="yes" xml:space="preserve">
          <source>The frequency (in seconds) at which node objects are added to the Apache Solr search index. Default value: &lt;code&gt;60000&lt;/code&gt; (every 60 seconds).</source>
          <target state="translated">Apache Solr 검색 색인에 노드 오브젝트가 추가되는 빈도 (초)입니다. 기본값 : &lt;code&gt;60000&lt;/code&gt; (60 초마다)</target>
        </trans-unit>
        <trans-unit id="91f976b120f10eb490dc1b946877ae1438d1ca93" translate="yes" xml:space="preserve">
          <source>The frequency (in seconds) at which node objects are added to the Apache Solr search index. This value should be tuned carefully. When data is committed to the Apache Solr index, all incoming updates are blocked. If the duration between updates is too short, it is possible for the rate at which updates are asked to occur to be faster than the rate at which objects can be actually committed. Default value: &lt;code&gt;60000&lt;/code&gt; (every 60 seconds).</source>
          <target state="translated">Apache Solr 검색 색인에 노드 오브젝트가 추가되는 빈도 (초)입니다. 이 값은 신중하게 조정해야합니다. 데이터가 Apache Solr 인덱스에 커밋되면 들어오는 모든 업데이트가 차단됩니다. 업데이트 간격이 너무 짧으면 업데이트 요청 속도가 개체를 실제로 커밋 할 수있는 속도보다 빠를 수 있습니다. 기본값 : &lt;code&gt;60000&lt;/code&gt; (60 초마다)</target>
        </trans-unit>
        <trans-unit id="d5ab563c81df08414dea2b3ab4815becf910f92c" translate="yes" xml:space="preserve">
          <source>The frequency (in seconds) at which the chef-client runs. Default value: &lt;code&gt;1800&lt;/code&gt;.</source>
          <target state="translated">요리사 클라이언트가 실행되는 빈도 (초)입니다. 기본 값 : &lt;code&gt;1800&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="27ec707813ae8405a49d564c0de72e2ee54ef84c" translate="yes" xml:space="preserve">
          <source>The frequency (in seconds) at which the chef-client runs. When the chef-client is run at intervals, &lt;code&gt;--splay&lt;/code&gt; and &lt;code&gt;--interval&lt;/code&gt; values are applied before the chef-client run. Default value: &lt;code&gt;1800&lt;/code&gt;.</source>
          <target state="translated">요리사 클라이언트가 실행되는 빈도 (초)입니다. 요리사 클라이언트가 일정한 간격으로 실행되면 요리사 클라이언트가 실행 되기 전에 &lt;code&gt;--splay&lt;/code&gt; 및 &lt;code&gt;--interval&lt;/code&gt; 값이 적용됩니다. 기본 값 : &lt;code&gt;1800&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c5eb80af1b2bd52399a3040cf8dafc56b8f335d9" translate="yes" xml:space="preserve">
          <source>The frequency (in seconds) at which the chef-client runs. When the chef-client is run at intervals, &lt;code&gt;--splay&lt;/code&gt; and &lt;code&gt;--interval&lt;/code&gt; values are applied before the chef-client run. This option may not be used in the same command with the &lt;code&gt;--[no-]fork&lt;/code&gt; option.</source>
          <target state="translated">요리사 클라이언트가 실행되는 빈도 (초)입니다. 요리사 클라이언트가 일정한 간격으로 실행되면 요리사 클라이언트가 실행 되기 전에 &lt;code&gt;--splay&lt;/code&gt; 및 &lt;code&gt;--interval&lt;/code&gt; 값이 적용됩니다. 이 옵션은 &lt;code&gt;--[no-]fork&lt;/code&gt; 옵션 과 동일한 명령에서 사용할 수 없습니다 .</target>
        </trans-unit>
        <trans-unit id="69210074d7eb635d99e3e37ea612922562f0acf4" translate="yes" xml:space="preserve">
          <source>The frequency (in seconds) at which the chef-client runs. When the chef-client is run at intervals, &lt;code&gt;--splay&lt;/code&gt; values are applied first, then the chef-client run occurs, and then &lt;code&gt;--interval&lt;/code&gt; values are applied.</source>
          <target state="translated">요리사 클라이언트가 실행되는 빈도 (초)입니다. 요리사 클라이언트가 간격으로 실행되면, &lt;code&gt;--splay&lt;/code&gt; 값은 요리사 클라이언트 실행이 발생, 먼저 적용됩니다 다음 &lt;code&gt;--interval&lt;/code&gt; 값이 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="b72d51f194a2b7b0b3ee6aeb3d69214aa340cec2" translate="yes" xml:space="preserve">
          <source>The frequency (in seconds) at which the primary VRRP server is to advertise. Default value: &lt;code&gt;'1'&lt;/code&gt;.</source>
          <target state="translated">기본 VRRP 서버가 광고하는 빈도 (초)입니다. 기본 값 : &lt;code&gt;'1'&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d44aa49c2bf85d3c0a60269f1382f0492f05012b" translate="yes" xml:space="preserve">
          <source>The frequency (in seconds) at which the secondary machine polls the primary. Default value: &lt;code&gt;20&lt;/code&gt;.</source>
          <target state="translated">보조 시스템이 기본 시스템을 폴링하는 빈도 (초)입니다. 기본 값 : &lt;code&gt;20&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8900b2ef720937aa90c837499b53c70c38d25419" translate="yes" xml:space="preserve">
          <source>The frequency at which Apt repository updates are made. Use this property when the &lt;code&gt;:periodic&lt;/code&gt; action is specified. Default value: &lt;code&gt;86400&lt;/code&gt;.</source>
          <target state="translated">Apt 저장소 업데이트 빈도. &lt;code&gt;:periodic&lt;/code&gt; 조치가 지정된 경우이 특성을 사용하십시오 . 기본 값 : &lt;code&gt;86400&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4ecf1d29bb42f92c95bf6ee8a3f6fcb72b8e0d92" translate="yes" xml:space="preserve">
          <source>The frequency at which the operating system writes data on-disk, instead of waiting for more data. Possible values: &lt;code&gt;no&lt;/code&gt; (don&amp;rsquo;t fsync, let operating system flush data), &lt;code&gt;always&lt;/code&gt; (fsync after every write to the append-only log file), and &lt;code&gt;everysec&lt;/code&gt; (fsync only once time per second). Default value: &lt;code&gt;'always'&lt;/code&gt;.</source>
          <target state="translated">운영 체제가 더 많은 데이터를 기다리지 않고 디스크에 데이터를 쓰는 빈도입니다. 가능한 값 : &lt;code&gt;no&lt;/code&gt; (fsync하지 말고 운영 체제에서 데이터를 플러시하도록 함), &lt;code&gt;always&lt;/code&gt; (추가 전용 로그 파일에 쓸 때마다 fsync) 및 &lt;code&gt;everysec&lt;/code&gt; (초당 한 번만 fsync) 값을 기본값 : &lt;code&gt;'always'&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3e667af5625f0a07783fa64e9971e6b88a92893a" translate="yes" xml:space="preserve">
          <source>The frequency at which unique URLs are generated. This value may be a specific amount of time, i.e. &lt;code&gt;15m&lt;/code&gt; (fifteen minutes) or a percentage of the value of &lt;code&gt;s3_url_ttl&lt;/code&gt;, i.e. &lt;code&gt;10%&lt;/code&gt;. Default value: &lt;code&gt;:off&lt;/code&gt;.</source>
          <target state="translated">고유 URL이 생성되는 빈도입니다. 이 값은 특정 시간, 즉 &lt;code&gt;15m&lt;/code&gt; (15 분) 또는 &lt;code&gt;s3_url_ttl&lt;/code&gt; 값의 백분율 , 즉 &lt;code&gt;10%&lt;/code&gt; 있습니다. 기본 값 : &lt;code&gt;:off&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c73aac2f749cb3a059483f1ceb14f015b993a980" translate="yes" xml:space="preserve">
          <source>The fsck device on the Solaris platform. Default value: &lt;code&gt;-&lt;/code&gt;.</source>
          <target state="translated">Solaris 플랫폼의 fsck 장치 기본값 : &lt;code&gt;-&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bb552f97d2c791932ae5b27989609a9bfcf197e8" translate="yes" xml:space="preserve">
          <source>The full name must begin with a non-white space character and must be between 1 and 1023 characters. For example: &lt;code&gt;&quot;Chef Software, Inc.&quot;&lt;/code&gt;</source>
          <target state="translated">전체 이름은 공백이 아닌 문자로 시작해야하며 1 ~ 1023 자 사이 여야합니다. 예 : &lt;code&gt;&quot;Chef Software, Inc.&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ac8c9f9846b41aeed77fc3b803a7987544ddeef5" translate="yes" xml:space="preserve">
          <source>The full name must begin with a non-white space character and must be between 1 and 1023 characters. For example: &lt;code&gt;&quot;Chef Software, Inc.&quot;&lt;/code&gt;.</source>
          <target state="translated">전체 이름은 공백이 아닌 문자로 시작해야하며 1 ~ 1023 자 사이 여야합니다. 예 : &lt;code&gt;&quot;Chef Software, Inc.&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4457421c102d8033b3a3c707428a967f2d591add" translate="yes" xml:space="preserve">
          <source>The full name must begin with a non-white space character and must be between 1 and 1023 characters. For example: &lt;code&gt;'Fourth Coffee, Inc.'&lt;/code&gt;.</source>
          <target state="translated">전체 이름은 공백이 아닌 문자로 시작해야하며 1 ~ 1023 자 사이 여야합니다. 예 : &lt;code&gt;'Fourth Coffee, Inc.'&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7d18f02440354b7727c757e11ef10f57433eb43e" translate="yes" xml:space="preserve">
          <source>The full name of the Chef server organization. The full name must begin with a non-white space character and must be between 1 and 1023 characters. For example: &lt;code&gt;Chef Software, Inc.&lt;/code&gt;. If this option is not specified, the &lt;code&gt;upgrade&lt;/code&gt; command will prompt for it.</source>
          <target state="translated">Chef 서버 조직의 전체 이름 전체 이름은 공백이 아닌 문자로 시작해야하며 1 ~ 1023 자 사이 여야합니다. 예를 들면 : &lt;code&gt;Chef Software, Inc.&lt;/code&gt; . 이 옵션을 지정하지 않으면 &lt;code&gt;upgrade&lt;/code&gt; 명령이 프롬프트를 표시합니다.</target>
        </trans-unit>
        <trans-unit id="f47678e98125b5591d0fd8e95ffb6918276a7b4b" translate="yes" xml:space="preserve">
          <source>The full path to the file, including the file name and its extension.</source>
          <target state="translated">파일 이름 및 확장자를 포함한 파일의 전체 경로</target>
        </trans-unit>
        <trans-unit id="b08e1744136a77bfb1fd4a1ef1a9df8e6d9d8c41" translate="yes" xml:space="preserve">
          <source>The full path to the file, including the file name and its extension. Default value: the &lt;code&gt;name&lt;/code&gt; of the resource block See &amp;ldquo;Syntax&amp;rdquo; section above for more information.</source>
          <target state="translated">파일 이름 및 확장자를 포함한 파일의 전체 경로 기본값 : 리소스 블록 &lt;code&gt;name&lt;/code&gt; 자세한 내용은 위의 &quot;구문&quot;섹션을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="a2d817e293a4fff10f89e6415a17f72cabe7775b" translate="yes" xml:space="preserve">
          <source>The full path to the file, including the file name and its extension. For example: &lt;code&gt;/files/file.txt&lt;/code&gt;. Default value: the &lt;code&gt;name&lt;/code&gt; of the resource block See &amp;ldquo;Syntax&amp;rdquo; section above for more information.</source>
          <target state="translated">파일 이름 및 확장자를 포함한 파일의 전체 경로 예를 들어 &lt;code&gt;/files/file.txt&lt;/code&gt; 입니다. 기본값 : 리소스 블록 &lt;code&gt;name&lt;/code&gt; 자세한 내용은 위의 &quot;구문&quot;섹션을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="c4920b0d8f9a3e647065f87726bc756ddbbcff6a" translate="yes" xml:space="preserve">
          <source>The full path to the handler file or the path to a gem (if the handler ships as part of a Ruby gem).</source>
          <target state="translated">핸들러 파일의 전체 경로 또는 gem의 경로 (처리기가 Ruby gem의 일부로 제공되는 경우)</target>
        </trans-unit>
        <trans-unit id="e678bb750f0962b9e270fb7c2f54d4adc447ef68" translate="yes" xml:space="preserve">
          <source>The full recipe is in the &lt;code&gt;ebs_volume.rb&lt;/code&gt; recipe of the &lt;a href=&quot;https://github.com/chef-cookbooks/database/&quot;&gt;database cookbook&lt;/a&gt; that is maintained by Chef.</source>
          <target state="translated">전체 레시피는 Chef가 유지 보수 하는 &lt;a href=&quot;https://github.com/chef-cookbooks/database/&quot;&gt;데이터베이스 요리 책&lt;/a&gt; 의 &lt;code&gt;ebs_volume.rb&lt;/code&gt; 레시피에 있습니다.</target>
        </trans-unit>
        <trans-unit id="b63685bc27363a4f577c5b7a5572ac0a16f862f0" translate="yes" xml:space="preserve">
          <source>The full recipe is the &lt;code&gt;upgrade.rb&lt;/code&gt; recipe of the &lt;a href=&quot;https://github.com/chef-cookbooks/chef-splunk/&quot;&gt;chef-splunk cookbook&lt;/a&gt; that is maintained by Chef.</source>
          <target state="translated">전체 레시피는 Chef가 관리 하는 &lt;a href=&quot;https://github.com/chef-cookbooks/chef-splunk/&quot;&gt;요리사-스 플렁크 요리 책&lt;/a&gt; 의 &lt;code&gt;upgrade.rb&lt;/code&gt; 레시피입니다 .</target>
        </trans-unit>
        <trans-unit id="ac58b25c12c8ec2eb402df26477dca841860f6cf" translate="yes" xml:space="preserve">
          <source>The full syntax for all of the properties that are available to the &lt;strong&gt;apt_package&lt;/strong&gt; resource is:</source>
          <target state="translated">&lt;strong&gt;apt_package&lt;/strong&gt; 자원에 사용 가능한 모든 특성의 전체 구문 은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="eff924bd33b8d2ef5389dd5485935a886afb81eb" translate="yes" xml:space="preserve">
          <source>The full syntax for all of the properties that are available to the &lt;strong&gt;bash&lt;/strong&gt; resource is:</source>
          <target state="translated">&lt;strong&gt;bash&lt;/strong&gt; 자원에 사용 가능한 모든 특성의 전체 구문 은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="74b8dcf193fbd350115e5d9d2d574a24c349c282" translate="yes" xml:space="preserve">
          <source>The full syntax for all of the properties that are available to the &lt;strong&gt;batch&lt;/strong&gt; resource is:</source>
          <target state="translated">&lt;strong&gt;배치&lt;/strong&gt; 자원에 사용 가능한 모든 특성의 전체 구문 은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="9bc2c91fa4bfcc76e46fd8cd4c50cdaec754fe1e" translate="yes" xml:space="preserve">
          <source>The full syntax for all of the properties that are available to the &lt;strong&gt;bff_package&lt;/strong&gt; resource is:</source>
          <target state="translated">&lt;strong&gt;bff_package&lt;/strong&gt; 자원에 사용 가능한 모든 특성의 전체 구문 은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="80e120c0563fc6e9019a5495163e4b3b44aa04e7" translate="yes" xml:space="preserve">
          <source>The full syntax for all of the properties that are available to the &lt;strong&gt;chef_gem&lt;/strong&gt; resource is:</source>
          <target state="translated">&lt;strong&gt;chef_gem&lt;/strong&gt; 자원에 사용 가능한 모든 특성의 전체 구문 은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="b8d755a5fffa48a970bd2a7f5f193f80a25519bf" translate="yes" xml:space="preserve">
          <source>The full syntax for all of the properties that are available to the &lt;strong&gt;chef_handler&lt;/strong&gt; resource is:</source>
          <target state="translated">&lt;strong&gt;chef_handler&lt;/strong&gt; 자원에 사용 가능한 모든 특성의 전체 구문 은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="b1ed8ac92bd827079b32dfe3e82ec9544cb1523e" translate="yes" xml:space="preserve">
          <source>The full syntax for all of the properties that are available to the &lt;strong&gt;chocolatey_package&lt;/strong&gt; resource is:</source>
          <target state="translated">&lt;strong&gt;chocolatey_package&lt;/strong&gt; 자원에 사용 가능한 모든 특성의 전체 구문 은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="ed8a43fa7db5adbc9c50cde8d4eac69c29e332ed" translate="yes" xml:space="preserve">
          <source>The full syntax for all of the properties that are available to the &lt;strong&gt;cookbook_file&lt;/strong&gt; resource is:</source>
          <target state="translated">&lt;strong&gt;cookbook_file&lt;/strong&gt; 자원에 사용 가능한 모든 특성의 전체 구문 은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="adc089eb347363447f9eb154d630843358e7ea82" translate="yes" xml:space="preserve">
          <source>The full syntax for all of the properties that are available to the &lt;strong&gt;cron&lt;/strong&gt; resource is:</source>
          <target state="translated">&lt;strong&gt;cron&lt;/strong&gt; 자원에 사용 가능한 모든 특성의 전체 구문 은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="7c32fe649da33755e25fa6951c86344704e2d1c7" translate="yes" xml:space="preserve">
          <source>The full syntax for all of the properties that are available to the &lt;strong&gt;csh&lt;/strong&gt; resource is:</source>
          <target state="translated">&lt;strong&gt;csh&lt;/strong&gt; 자원에 사용 가능한 모든 특성의 전체 구문 은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="e1fe5b359d43edeabf176362d73c01d1581eaff2" translate="yes" xml:space="preserve">
          <source>The full syntax for all of the properties that are available to the &lt;strong&gt;deploy&lt;/strong&gt; when used with git is:</source>
          <target state="translated">git과 함께 사용할 때 &lt;strong&gt;배포에&lt;/strong&gt; 사용할 수있는 모든 속성에 대한 전체 구문 은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="748886cbd57a86a22e3bcda3b2c83e3d8894ac9e" translate="yes" xml:space="preserve">
          <source>The full syntax for all of the properties that are available to the &lt;strong&gt;directory&lt;/strong&gt; resource is:</source>
          <target state="translated">&lt;strong&gt;디렉토리&lt;/strong&gt; 자원에 사용 가능한 모든 특성의 전체 구문 은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="313b7f7fc2365ce161538700060c5a97f0f1c636" translate="yes" xml:space="preserve">
          <source>The full syntax for all of the properties that are available to the &lt;strong&gt;dpkg_package&lt;/strong&gt; resource is:</source>
          <target state="translated">&lt;strong&gt;dpkg_package&lt;/strong&gt; 자원에 사용 가능한 모든 특성의 전체 구문 은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="4805125518e296191d86b0a47458232621f69b18" translate="yes" xml:space="preserve">
          <source>The full syntax for all of the properties that are available to the &lt;strong&gt;dsc_resource&lt;/strong&gt; resource is:</source>
          <target state="translated">&lt;strong&gt;dsc_resource&lt;/strong&gt; 자원에 사용 가능한 모든 특성의 전체 구문 은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="90aca9e9b41f9e69689132e35fa4af0c9d138fc0" translate="yes" xml:space="preserve">
          <source>The full syntax for all of the properties that are available to the &lt;strong&gt;dsc_script&lt;/strong&gt; resource is:</source>
          <target state="translated">&lt;strong&gt;dsc_script&lt;/strong&gt; 자원에 사용 가능한 모든 특성의 전체 구문 은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="eff3243af2e7b5b8822b9002647c6530b405cfa4" translate="yes" xml:space="preserve">
          <source>The full syntax for all of the properties that are available to the &lt;strong&gt;easy_install_package&lt;/strong&gt; resource is:</source>
          <target state="translated">&lt;strong&gt;easy_install_package&lt;/strong&gt; 자원에 사용 가능한 모든 특성의 전체 구문 은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="acd4e2b78eb1d12fc0af3af4dcf29cb5f078e33e" translate="yes" xml:space="preserve">
          <source>The full syntax for all of the properties that are available to the &lt;strong&gt;env&lt;/strong&gt; resource is:</source>
          <target state="translated">&lt;strong&gt;env&lt;/strong&gt; 자원에 사용 가능한 모든 특성의 전체 구문 은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="0bfaaca18d6952afe31a1d48fa41e728f1c17bf2" translate="yes" xml:space="preserve">
          <source>The full syntax for all of the properties that are available to the &lt;strong&gt;erl_call&lt;/strong&gt; resource is:</source>
          <target state="translated">&lt;strong&gt;erl_call&lt;/strong&gt; 자원에 사용 가능한 모든 특성의 전체 구문 은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="da77bc540c1ebe572793bc6a61159fcc6ef1b3ec" translate="yes" xml:space="preserve">
          <source>The full syntax for all of the properties that are available to the &lt;strong&gt;execute&lt;/strong&gt; resource is:</source>
          <target state="translated">&lt;strong&gt;실행&lt;/strong&gt; 리소스에 사용할 수있는 모든 속성의 전체 구문 은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="305f9693c08b06c436c4e6d3d2b938c4cc554fe1" translate="yes" xml:space="preserve">
          <source>The full syntax for all of the properties that are available to the &lt;strong&gt;file&lt;/strong&gt; resource is:</source>
          <target state="translated">&lt;strong&gt;파일&lt;/strong&gt; 자원에 사용 가능한 모든 특성의 전체 구문 은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="2c8ea12975ed2d80e5b41283484f15d9f8e26503" translate="yes" xml:space="preserve">
          <source>The full syntax for all of the properties that are available to the &lt;strong&gt;freebsd_package&lt;/strong&gt; resource is:</source>
          <target state="translated">&lt;strong&gt;freebsd_package&lt;/strong&gt; 자원에 사용 가능한 모든 특성의 전체 구문 은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="98c0b8e38f7b416e8c55681d81516dd330501bcb" translate="yes" xml:space="preserve">
          <source>The full syntax for all of the properties that are available to the &lt;strong&gt;gem_package&lt;/strong&gt; resource is:</source>
          <target state="translated">&lt;strong&gt;gem_package&lt;/strong&gt; 자원에 사용 가능한 모든 등록 정보의 전체 구문 은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="247eccf4ff1529a8a7d477f03e83d5a1a0a76aa2" translate="yes" xml:space="preserve">
          <source>The full syntax for all of the properties that are available to the &lt;strong&gt;git&lt;/strong&gt; resource is:</source>
          <target state="translated">&lt;strong&gt;git&lt;/strong&gt; 리소스에 사용 가능한 모든 속성의 전체 구문 은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="007d6c169857e524c6c9b3fbc6ada8c0b9ce79b8" translate="yes" xml:space="preserve">
          <source>The full syntax for all of the properties that are available to the &lt;strong&gt;group&lt;/strong&gt; resource is:</source>
          <target state="translated">&lt;strong&gt;그룹&lt;/strong&gt; 자원에 사용 가능한 모든 특성의 전체 구문 은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="4f2f8aaca342f835b787a2bcc68e4ea6e2e32d10" translate="yes" xml:space="preserve">
          <source>The full syntax for all of the properties that are available to the &lt;strong&gt;homebrew_package&lt;/strong&gt; resource is:</source>
          <target state="translated">&lt;strong&gt;homebrew_package&lt;/strong&gt; 자원에 사용 가능한 모든 특성의 전체 구문 은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="16e5f3686259e48577764c9b9885b348879b6d7d" translate="yes" xml:space="preserve">
          <source>The full syntax for all of the properties that are available to the &lt;strong&gt;http_request&lt;/strong&gt; resource is:</source>
          <target state="translated">&lt;strong&gt;http_request&lt;/strong&gt; 자원에 사용 가능한 모든 특성의 전체 구문 은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="129a27974084981e8e19cd06029b63fe6d0ae65e" translate="yes" xml:space="preserve">
          <source>The full syntax for all of the properties that are available to the &lt;strong&gt;ifconfig&lt;/strong&gt; resource is:</source>
          <target state="translated">&lt;strong&gt;ifconfig&lt;/strong&gt; 자원에 사용 가능한 모든 특성의 전체 구문 은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="f00fc24bc4777ca5c8ed29288e61de3b91aac4c7" translate="yes" xml:space="preserve">
          <source>The full syntax for all of the properties that are available to the &lt;strong&gt;ips_package&lt;/strong&gt; resource is:</source>
          <target state="translated">&lt;strong&gt;ips_package&lt;/strong&gt; 자원에 사용 가능한 모든 특성의 전체 구문 은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="a720f51dd48bf8bd8caef36f8d09cd664a0c4d92" translate="yes" xml:space="preserve">
          <source>The full syntax for all of the properties that are available to the &lt;strong&gt;ksh&lt;/strong&gt; resource is:</source>
          <target state="translated">&lt;strong&gt;ksh&lt;/strong&gt; 자원에 사용 가능한 모든 특성의 전체 구문 은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="86889b5d654263ed98a67b1b864bd51e16928a10" translate="yes" xml:space="preserve">
          <source>The full syntax for all of the properties that are available to the &lt;strong&gt;launchd&lt;/strong&gt; resource is:</source>
          <target state="translated">받는 사용할 수있는 모든 속성의 전체 구문 &lt;strong&gt;launchd에의&lt;/strong&gt; 자원은 다음과 같습니다</target>
        </trans-unit>
        <trans-unit id="185b3cc5bea4a8e8a08ad5c3fd5974f563ce306d" translate="yes" xml:space="preserve">
          <source>The full syntax for all of the properties that are available to the &lt;strong&gt;link&lt;/strong&gt; resource is:</source>
          <target state="translated">&lt;strong&gt;링크&lt;/strong&gt; 자원에 사용 가능한 모든 특성의 전체 구문 은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="ad71863d35bf171c67a126e24ad6c6b5bdaf94d6" translate="yes" xml:space="preserve">
          <source>The full syntax for all of the properties that are available to the &lt;strong&gt;log&lt;/strong&gt; resource is:</source>
          <target state="translated">&lt;strong&gt;로그&lt;/strong&gt; 자원에 사용 가능한 모든 특성의 전체 구문 은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="b9e6b37f92c8291893a440bef795a206f1af4bad" translate="yes" xml:space="preserve">
          <source>The full syntax for all of the properties that are available to the &lt;strong&gt;macports_package&lt;/strong&gt; resource is:</source>
          <target state="translated">&lt;strong&gt;macports_package&lt;/strong&gt; 자원에 사용 가능한 모든 특성의 전체 구문 은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="918491abe2ec5ff2c3630842a2b1fc11832df28c" translate="yes" xml:space="preserve">
          <source>The full syntax for all of the properties that are available to the &lt;strong&gt;mdadm&lt;/strong&gt; resource is:</source>
          <target state="translated">&lt;strong&gt;mdadm&lt;/strong&gt; 자원에 사용 가능한 모든 등록 정보의 전체 구문 은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="05a5ecf2e7c33ef6b82edffb16bd29c2f0d9ce28" translate="yes" xml:space="preserve">
          <source>The full syntax for all of the properties that are available to the &lt;strong&gt;mount&lt;/strong&gt; resource is:</source>
          <target state="translated">&lt;strong&gt;마운트&lt;/strong&gt; 자원에 사용 가능한 모든 특성의 전체 구문 은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="6577e4c0e65cb6f7c5e014d95bdb6d326f3c905e" translate="yes" xml:space="preserve">
          <source>The full syntax for all of the properties that are available to the &lt;strong&gt;ohai&lt;/strong&gt; resource is:</source>
          <target state="translated">&lt;strong&gt;ohai&lt;/strong&gt; 자원에 사용 가능한 모든 특성의 전체 구문 은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="6dda7e0a81c6934efbeeab0dda7c37f3062d557d" translate="yes" xml:space="preserve">
          <source>The full syntax for all of the properties that are available to the &lt;strong&gt;openbsd_package&lt;/strong&gt; resource is:</source>
          <target state="translated">&lt;strong&gt;openbsd_package&lt;/strong&gt; 자원에 사용 가능한 모든 특성의 전체 구문 은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="997c3de3f92c5b2f1c14aacd062ab944284e1c03" translate="yes" xml:space="preserve">
          <source>The full syntax for all of the properties that are available to the &lt;strong&gt;osx_profile&lt;/strong&gt; resource is:</source>
          <target state="translated">&lt;strong&gt;osx_profile&lt;/strong&gt; 자원에 사용 가능한 모든 특성의 전체 구문 은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="b534da980a14fa6e12f49a09f16bd1c45aad4069" translate="yes" xml:space="preserve">
          <source>The full syntax for all of the properties that are available to the &lt;strong&gt;package&lt;/strong&gt; resource is:</source>
          <target state="translated">&lt;strong&gt;패키지&lt;/strong&gt; 리소스에 사용 가능한 모든 속성의 전체 구문 은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="cc9d1e04a813b4ebe4acb0f8c08476f1bf4de7e7" translate="yes" xml:space="preserve">
          <source>The full syntax for all of the properties that are available to the &lt;strong&gt;pacman_package&lt;/strong&gt; resource is:</source>
          <target state="translated">&lt;strong&gt;pacman_package&lt;/strong&gt; 자원에 사용 가능한 모든 특성의 전체 구문 은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="776d947d60d8e9dfc2b4e43ff1b4ae38ad38db27" translate="yes" xml:space="preserve">
          <source>The full syntax for all of the properties that are available to the &lt;strong&gt;paludis_package&lt;/strong&gt; resource is:</source>
          <target state="translated">&lt;strong&gt;paludis_package&lt;/strong&gt; 자원에 사용 가능한 모든 특성의 전체 구문 은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="2fb1bb13ecaea2e528d6ce12423dd4836d729633" translate="yes" xml:space="preserve">
          <source>The full syntax for all of the properties that are available to the &lt;strong&gt;perl&lt;/strong&gt; resource is:</source>
          <target state="translated">&lt;strong&gt;perl&lt;/strong&gt; 자원에 사용 가능한 모든 특성의 전체 구문 은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="5e17e935f7843b81e5e5eec26160584908731f0f" translate="yes" xml:space="preserve">
          <source>The full syntax for all of the properties that are available to the &lt;strong&gt;portage_package&lt;/strong&gt; resource is:</source>
          <target state="translated">&lt;strong&gt;portage_package&lt;/strong&gt; 자원에 사용 가능한 모든 특성의 전체 구문 은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="85ae405a2a8c9fab6fb687d16744255ed276c3bf" translate="yes" xml:space="preserve">
          <source>The full syntax for all of the properties that are available to the &lt;strong&gt;powershell_script&lt;/strong&gt; resource is:</source>
          <target state="translated">&lt;strong&gt;powershell_script&lt;/strong&gt; 자원에 사용 가능한 모든 특성의 전체 구문 은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="00368886036534054bf5f9fba02689352490b387" translate="yes" xml:space="preserve">
          <source>The full syntax for all of the properties that are available to the &lt;strong&gt;python&lt;/strong&gt; resource is:</source>
          <target state="translated">&lt;strong&gt;파이썬&lt;/strong&gt; 리소스에서 사용할 수있는 모든 속성의 전체 구문 은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="0d66f68478ca8c01bf515ac710dc4ee631fe7b94" translate="yes" xml:space="preserve">
          <source>The full syntax for all of the properties that are available to the &lt;strong&gt;reboot&lt;/strong&gt; resource is:</source>
          <target state="translated">&lt;strong&gt;재부팅&lt;/strong&gt; 리소스에 사용 가능한 모든 속성의 전체 구문 은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="70d453299972551ca93689459e70128d0e53cff3" translate="yes" xml:space="preserve">
          <source>The full syntax for all of the properties that are available to the &lt;strong&gt;registry_key&lt;/strong&gt; resource is:</source>
          <target state="translated">&lt;strong&gt;registry_key&lt;/strong&gt; 자원에 사용 가능한 모든 특성의 전체 구문 은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="272d75d180dd7e8fbfdfb4a2e0b12c34c1ad36b4" translate="yes" xml:space="preserve">
          <source>The full syntax for all of the properties that are available to the &lt;strong&gt;remote_directory&lt;/strong&gt; resource is:</source>
          <target state="translated">&lt;strong&gt;remote_directory&lt;/strong&gt; 자원에 사용 가능한 모든 특성의 전체 구문 은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="8cfdb3f0d6eff11d18294a07383fa73f1ace8ea4" translate="yes" xml:space="preserve">
          <source>The full syntax for all of the properties that are available to the &lt;strong&gt;remote_file&lt;/strong&gt; resource is:</source>
          <target state="translated">&lt;strong&gt;remote_file&lt;/strong&gt; 자원에 사용 가능한 모든 특성의 전체 구문 은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="7bf71a005e6182c1685cde59e9753a9cbe02186f" translate="yes" xml:space="preserve">
          <source>The full syntax for all of the properties that are available to the &lt;strong&gt;route&lt;/strong&gt; resource is:</source>
          <target state="translated">&lt;strong&gt;라우트&lt;/strong&gt; 자원에 사용 가능한 모든 특성의 전체 구문 은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="fb46d8958c970dc24745b0a7b99218afddd616f0" translate="yes" xml:space="preserve">
          <source>The full syntax for all of the properties that are available to the &lt;strong&gt;rpm_package&lt;/strong&gt; resource is:</source>
          <target state="translated">&lt;strong&gt;rpm_package&lt;/strong&gt; 리소스에 사용 가능한 모든 속성의 전체 구문 은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="bcd363c67e24a1a4a2cf1c8167f90393cc9a348d" translate="yes" xml:space="preserve">
          <source>The full syntax for all of the properties that are available to the &lt;strong&gt;ruby&lt;/strong&gt; resource is:</source>
          <target state="translated">&lt;strong&gt;루비&lt;/strong&gt; 리소스에 사용 가능한 모든 속성에 대한 전체 구문 은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="94340e54b6fbba1a88a5e8e709d53f3fe79c6831" translate="yes" xml:space="preserve">
          <source>The full syntax for all of the properties that are available to the &lt;strong&gt;ruby_block&lt;/strong&gt; resource is:</source>
          <target state="translated">&lt;strong&gt;ruby_block&lt;/strong&gt; 자원에 사용 가능한 모든 속성의 전체 구문 은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="620a1061db7bd33259696fa01d245032759a60c2" translate="yes" xml:space="preserve">
          <source>The full syntax for all of the properties that are available to the &lt;strong&gt;script&lt;/strong&gt; resource is:</source>
          <target state="translated">&lt;strong&gt;스크립트&lt;/strong&gt; 자원에 사용 가능한 모든 특성의 전체 구문 은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="23dd83899e3c03713c597cc8910a6589efd020cb" translate="yes" xml:space="preserve">
          <source>The full syntax for all of the properties that are available to the &lt;strong&gt;service&lt;/strong&gt; resource is:</source>
          <target state="translated">&lt;strong&gt;서비스&lt;/strong&gt; 자원에 사용 가능한 모든 특성의 전체 구문 은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="78eea41308f63b77c72fcc56df22f5a1a0ebca68" translate="yes" xml:space="preserve">
          <source>The full syntax for all of the properties that are available to the &lt;strong&gt;smartos_package&lt;/strong&gt; resource is:</source>
          <target state="translated">&lt;strong&gt;smartos_package&lt;/strong&gt; 자원에 사용 가능한 모든 특성의 전체 구문 은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="57660a6e4d8670acece33d0d8754e2449fcebe32" translate="yes" xml:space="preserve">
          <source>The full syntax for all of the properties that are available to the &lt;strong&gt;solaris_package&lt;/strong&gt; resource is:</source>
          <target state="translated">&lt;strong&gt;solaris_package&lt;/strong&gt; 자원에 사용 가능한 모든 등록 정보의 전체 구문 은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="856804b61a198dd3857fdfbf9b41d44910e75132" translate="yes" xml:space="preserve">
          <source>The full syntax for all of the properties that are available to the &lt;strong&gt;subversion&lt;/strong&gt; resource is:</source>
          <target state="translated">&lt;strong&gt;Subversion&lt;/strong&gt; 리소스에 사용 가능한 모든 속성에 대한 전체 구문 은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="1002c662456b920de4a1c2ec1e7074c14f98bfec" translate="yes" xml:space="preserve">
          <source>The full syntax for all of the properties that are available to the &lt;strong&gt;template&lt;/strong&gt; resource is:</source>
          <target state="translated">&lt;strong&gt;템플리트&lt;/strong&gt; 자원에 사용 가능한 모든 특성의 전체 구문 은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="732d2e0eb1a37081b4ef481df066317479b1fed2" translate="yes" xml:space="preserve">
          <source>The full syntax for all of the properties that are available to the &lt;strong&gt;user&lt;/strong&gt; resource is:</source>
          <target state="translated">&lt;strong&gt;사용자&lt;/strong&gt; 자원에 사용 가능한 모든 특성의 전체 구문 은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="3bc23ef3eaae1d05cf69a84fc088e909aacffb4c" translate="yes" xml:space="preserve">
          <source>The full syntax for all of the properties that are available to the &lt;strong&gt;windows_package&lt;/strong&gt; resource is:</source>
          <target state="translated">&lt;strong&gt;windows_package&lt;/strong&gt; 리소스에 사용 가능한 모든 속성의 전체 구문 은 다음 &lt;strong&gt;과 같습니다&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="df0a2534b2020c228b3c292fc3fee8152c5c5e61" translate="yes" xml:space="preserve">
          <source>The full syntax for all of the properties that are available to the &lt;strong&gt;windows_service&lt;/strong&gt; resource is:</source>
          <target state="translated">&lt;strong&gt;windows_service&lt;/strong&gt; 자원에 사용 가능한 모든 특성의 전체 구문 은 다음 &lt;strong&gt;과 같습니다&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="5492badb383d344feb58988cb7691f07cccd89e3" translate="yes" xml:space="preserve">
          <source>The full syntax for all of the properties that are available to the &lt;strong&gt;yum_package&lt;/strong&gt; resource is:</source>
          <target state="translated">&lt;strong&gt;yum_package&lt;/strong&gt; 리소스에 사용 가능한 모든 속성의 전체 구문 은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="096a57be2c401fcbe429f5a2df48762a46adcadd" translate="yes" xml:space="preserve">
          <source>The fully qualified URL to the data collector server API.</source>
          <target state="translated">데이터 콜렉터 서버 API에 대한 완전한 URL입니다.</target>
        </trans-unit>
        <trans-unit id="0c67daaae5d726b8b4735fa6896121c08e5d17c6" translate="yes" xml:space="preserve">
          <source>The fully qualified domain name for a node. This is used as the name of a node unless otherwise set.</source>
          <target state="translated">노드의 정규화 된 도메인 이름입니다. 별도로 설정하지 않는 한 노드 이름으로 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="634bf4570d117f5cf9931393d5310660d42beef5" translate="yes" xml:space="preserve">
          <source>The gateway for the route.</source>
          <target state="translated">경로의 게이트웨이입니다.</target>
        </trans-unit>
        <trans-unit id="7591eb5a2ab578923ec448b3673ffcaf2cc56537" translate="yes" xml:space="preserve">
          <source>The group name or group ID that must be changed before running a command.</source>
          <target state="translated">명령을 실행하기 전에 변경해야하는 그룹 이름 또는 그룹 ID입니다.</target>
        </trans-unit>
        <trans-unit id="3c4c31338717a3ec6e9305b6eff86eb8f6881fe2" translate="yes" xml:space="preserve">
          <source>The group name under which services will run.</source>
          <target state="translated">서비스가 실행될 그룹 이름.</target>
        </trans-unit>
        <trans-unit id="7e15c724053f9706a87c1070a851a8f02c279601" translate="yes" xml:space="preserve">
          <source>The group that owns a process. This is required when starting any executable as a daemon. Default value: &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">프로세스를 소유 한 그룹입니다. 실행 파일을 데몬으로 시작할 때 필요합니다. 기본 값 : &lt;code&gt;nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="00b6590b5ce3dc541dce7d0cc1d591aa7c505777" translate="yes" xml:space="preserve">
          <source>The handler processing phase of the chef-client run has started.</source>
          <target state="translated">chef-client 실행의 핸들러 처리 단계가 시작되었습니다.</target>
        </trans-unit>
        <trans-unit id="49738c6068772815e301d57afd42c66895f2e1ef" translate="yes" xml:space="preserve">
          <source>The handler processing phase of the chef-client run is complete.</source>
          <target state="translated">chef-client 실행의 핸들러 처리 단계가 완료되었습니다.</target>
        </trans-unit>
        <trans-unit id="a8e34cb6deb03ee96c2f1537ebb571d45d235a1e" translate="yes" xml:space="preserve">
          <source>The hardware address for the network interface.</source>
          <target state="translated">네트워크 인터페이스의 하드웨어 주소입니다.</target>
        </trans-unit>
        <trans-unit id="01017cb71188698067a00b5a261b631ccf04cee2" translate="yes" xml:space="preserve">
          <source>The hash of the contents of this request.</source>
          <target state="translated">이 요청 내용의 해시입니다.</target>
        </trans-unit>
        <trans-unit id="e566be04e399889104b7eaa4217977e0778315dd" translate="yes" xml:space="preserve">
          <source>The home directory for PostgreSQL. Default value: &lt;code&gt;/var/opt/opscode/postgresql&lt;/code&gt;.</source>
          <target state="translated">PostgreSQL의 홈 디렉토리입니다. 초기 값 : &lt;code&gt;/var/opt/opscode/postgresql&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2b82b1a83d4ae37846fe22a1aa374e50cd0783a7" translate="yes" xml:space="preserve">
          <source>The home directory for the user under which Chef server services run. Default value: &lt;code&gt;/opt/opscode/embedded&lt;/code&gt;.</source>
          <target state="translated">Chef 서버 서비스가 실행되는 사용자의 홈 디렉토리입니다. 초기 값 : &lt;code&gt;/opt/opscode/embedded&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="92b0e99c88cad79bf94cf3c33078933ea1eab0cc" translate="yes" xml:space="preserve">
          <source>The host name (and port number) to which a request is sent. (Port number &lt;code&gt;80&lt;/code&gt; does not need to be specified.) For example: &lt;code&gt;api.opscode.com&lt;/code&gt; (which is the same as &lt;code&gt;api.opscode.com:80&lt;/code&gt;) or &lt;code&gt;api.opscode.com:443&lt;/code&gt;.</source>
          <target state="translated">요청이 전송되는 호스트 이름 (및 포트 번호). (포트 번호 &lt;code&gt;80&lt;/code&gt; 을 지정할 필요는 없습니다.) 예를 들어 &lt;code&gt;api.opscode.com&lt;/code&gt; ( &lt;code&gt;api.opscode.com:80&lt;/code&gt; 과 동일 ) 또는 &lt;code&gt;api.opscode.com:443&lt;/code&gt; 과 같습니다 .</target>
        </trans-unit>
        <trans-unit id="b293bf4ea86e3121e1a1ee8328396bdc86a49b12" translate="yes" xml:space="preserve">
          <source>The host name for the node.</source>
          <target state="translated">노드의 호스트 이름입니다.</target>
        </trans-unit>
        <trans-unit id="775a204a112dfb129508e90b6c6ad0d84dd7dd57" translate="yes" xml:space="preserve">
          <source>The host on which Redis runs. Default value: &lt;code&gt;localhost&lt;/code&gt;.</source>
          <target state="translated">Redis가 실행되는 호스트. 기본 값 : &lt;code&gt;localhost&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8797ee76d44b368b65e0278efcdb3e389ab1d498" translate="yes" xml:space="preserve">
          <source>The host on which chef-zero is started.</source>
          <target state="translated">chef-zero가 시작된 호스트</target>
        </trans-unit>
        <trans-unit id="607d4dc583495122c0deafba9be67d25fe78dd8b" translate="yes" xml:space="preserve">
          <source>The host on which the Nginx &lt;code&gt;stub_status&lt;/code&gt; module listens. Default value: &lt;code&gt;&quot;127.0.0.1&quot;&lt;/code&gt;.</source>
          <target state="translated">Nginx &lt;code&gt;stub_status&lt;/code&gt; 모듈이 청취 하는 호스트 . 초기 값 : &lt;code&gt;&quot;127.0.0.1&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4adbc9c954866bd1c05231c8660949b52b9aeed9" translate="yes" xml:space="preserve">
          <source>The hostname for the Chef Analytics server may be specified using a FQDN or an IP address. This hostname must be resolvable. For example, a Chef Analytics server that is running in a production environment with a resolvable FQDN hostname can be added in the DNS system. But when deploying Chef Analytics into a testing environment, adding the hostname to the &lt;code&gt;/etc/hosts&lt;/code&gt; file is enough to ensure that hostname is resolvable.</source>
          <target state="translated">Chef Analytics 서버의 호스트 이름은 FQDN 또는 IP 주소를 사용하여 지정할 수 있습니다. 이 호스트 이름은 분석 가능해야합니다. 예를 들어, 해결 가능한 FQDN 호스트 이름을 가진 프로덕션 환경에서 실행되는 Chef Analytics 서버를 DNS 시스템에 추가 할 수 있습니다. 그러나 Chef Analytics를 테스트 환경에 배치 할 때 호스트 이름을 &lt;code&gt;/etc/hosts&lt;/code&gt; 파일에 추가하면 호스트 이름을 분석 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f6ac7bf1c90382da764e07e50e3925d33980fec9" translate="yes" xml:space="preserve">
          <source>The hostname for the Chef server may be specified using a FQDN or an IP address. This hostname must be resolvable. For example, a Chef server running in a production environment with a resolvable FQDN hostname can be added the DNS system. But when deploying Chef server into a testing environment, adding the hostname to the &lt;code&gt;/etc/hosts&lt;/code&gt; file is enough to ensure that hostname is resolvable.</source>
          <target state="translated">Chef 서버의 호스트 이름은 FQDN 또는 IP 주소를 사용하여 지정할 수 있습니다. 이 호스트 이름은 분석 가능해야합니다. 예를 들어, 해결 가능한 FQDN 호스트 이름을 가진 프로덕션 환경에서 실행되는 Chef 서버에 DNS 시스템을 추가 할 수 있습니다. 그러나 Chef 서버를 테스트 환경에 배포 할 때 호스트 이름을 &lt;code&gt;/etc/hosts&lt;/code&gt; 파일에 추가하면 호스트 이름을 확인할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0eb6699662bd863487a932b696d5f53f32776cf6" translate="yes" xml:space="preserve">
          <source>The hostname for the Chef server must be an FQDN, including the domain suffix, and must be resolvable by the backend and frontend servers. See &lt;a href=&quot;install_server_pre#install-server-pre-hostnames&quot;&gt;Hostnames, FQDNs&lt;/a&gt; for more information.</source>
          <target state="translated">Chef 서버의 호스트 이름은 도메인 접미사를 포함하여 FQDN이어야하며 백엔드 및 프런트 엔드 서버에서 확인할 수 있어야합니다. 자세한 내용은 &lt;a href=&quot;install_server_pre#install-server-pre-hostnames&quot;&gt;호스트 이름, FQDN&lt;/a&gt; 을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="dc3f849075bb0bfec3ec46fe1aaa2f715329e7c7" translate="yes" xml:space="preserve">
          <source>The hostname for the Chef server must be an FQDN, including the domain suffix, and must be resolvable by the other backend and frontend servers. See &lt;a href=&quot;install_server_pre#install-server-pre-hostnames&quot;&gt;Hostnames, FQDNs&lt;/a&gt; for more information.</source>
          <target state="translated">Chef 서버의 호스트 이름은 도메인 접미사를 포함하여 FQDN이어야하며 다른 백엔드 및 프론트 엔드 서버에서 해석 할 수 있어야합니다. 자세한 내용은 &lt;a href=&quot;install_server_pre#install-server-pre-hostnames&quot;&gt;호스트 이름, FQDN&lt;/a&gt; 을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="4c21fa16148c3641a72fd5da78bf0a0eaec1d90e" translate="yes" xml:space="preserve">
          <source>The hostname to which the node is to connect. Default value: &lt;code&gt;chef@localhost&lt;/code&gt;.</source>
          <target state="translated">노드가 연결될 호스트 이름입니다. 기본 값 : &lt;code&gt;chef@localhost&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cd0e98ec9fcc1b15527bfaebb79aea9f70a72c33" translate="yes" xml:space="preserve">
          <source>The hour at which the cron entry is to run (0 - 23). Default value: &lt;code&gt;*&lt;/code&gt;.</source>
          <target state="translated">cron 항목이 실행되는 시간 (0-23). 기본값 : &lt;code&gt;*&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2b2860a0f9d80636f2f2e56f074a576e25360faa" translate="yes" xml:space="preserve">
          <source>The identifier for the group.</source>
          <target state="translated">그룹의 식별자입니다.</target>
        </trans-unit>
        <trans-unit id="ebc76f568ca06c983a96627646eb0135f8cae508" translate="yes" xml:space="preserve">
          <source>The identity of the consumer to which messages are published. Default value: &lt;code&gt;'hotsauce'&lt;/code&gt;.</source>
          <target state="translated">메시지가 게시되는 소비자의 신원입니다. 기본 값 : &lt;code&gt;'hotsauce'&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d4880de920d58e790afcf58e0eadfb68ac5f6325" translate="yes" xml:space="preserve">
          <source>The identity of the consumer to which messages are published. Default value: &lt;code&gt;default&lt;/code&gt;.</source>
          <target state="translated">메시지가 게시되는 소비자의 신원입니다. 기본 값 : &lt;code&gt;default&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b05e3d2ae6237ba08a8f8ae1228499143709ba4f" translate="yes" xml:space="preserve">
          <source>The images below refer to client keys as a &amp;ldquo;Client&amp;rdquo;.</source>
          <target state="translated">아래 이미지는 클라이언트 키를 &quot;클라이언트&quot;라고합니다.</target>
        </trans-unit>
        <trans-unit id="f81197c0d9c26efdcd16cf4a9668632940815806" translate="yes" xml:space="preserve">
          <source>The initial worker count for the HTTP connection pool that is used by the rabbitmq-management plugin. Default value: &lt;code&gt;25&lt;/code&gt;.</source>
          <target state="translated">rabbitmq 관리 플러그인이 사용하는 HTTP 연결 풀의 초기 작업자 수입니다. 기본 값 : &lt;code&gt;25&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0285f68f3f39bca6bb3698efb476d7dac8485b68" translate="yes" xml:space="preserve">
          <source>The installation of the chef-client on management workstations</source>
          <target state="translated">관리 워크 스테이션에 요리사 클라이언트 설치</target>
        </trans-unit>
        <trans-unit id="93bf3b1636a393dd26239a38317d26f4c9620dd4" translate="yes" xml:space="preserve">
          <source>The installation process for the Chef server requires the use of at least two user and group identifiers (UIDs and GIDs). These are used to create the &lt;code&gt;opscode&lt;/code&gt; and &lt;code&gt;opscode-pgsql&lt;/code&gt; users and their default groups.</source>
          <target state="translated">Chef 서버의 설치 ​​프로세스에는 둘 이상의 사용자 및 그룹 식별자 (UID 및 GID)가 필요합니다. &lt;code&gt;opscode&lt;/code&gt; 및 &lt;code&gt;opscode-pgsql&lt;/code&gt; 사용자 및 해당 기본 그룹 을 만드는 데 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="be41d895b79e44fb9bee46a3d5ce31de86ed2a1d" translate="yes" xml:space="preserve">
          <source>The intended purpose of the job: &lt;code&gt;Adaptive&lt;/code&gt;, &lt;code&gt;Background&lt;/code&gt;, &lt;code&gt;Interactive&lt;/code&gt;, or &lt;code&gt;Standard&lt;/code&gt;.</source>
          <target state="translated">작업의 의도 된 목적 : &lt;code&gt;Adaptive&lt;/code&gt; , &lt;code&gt;Background&lt;/code&gt; , &lt;code&gt;Interactive&lt;/code&gt; 또는 &lt;code&gt;Standard&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4a4c47c1ee52bd5bbe532a7eb15c51c977d49970" translate="yes" xml:space="preserve">
          <source>The interface over which VRRP traffic is sent. Should be set to the name of the dedicated interface for Keepalived. Default value: &lt;code&gt;'eth0'&lt;/code&gt;.</source>
          <target state="translated">VRRP 트래픽이 전송되는 인터페이스입니다. Keepalived 전용 인터페이스 이름으로 설정해야합니다. 기본 값 : &lt;code&gt;'eth0'&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4bcc3a2255d6ccd88a864b7cf2a44ff9259185a7" translate="yes" xml:space="preserve">
          <source>The key components of nodes that are under management by Chef include:</source>
          <target state="translated">Chef가 관리하는 노드의 주요 구성 요소는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="502fb279ca400e559d4766dec69a7a35790bab8e" translate="yes" xml:space="preserve">
          <source>The key file used by the privileged user. Default value: &lt;code&gt;'/etc/opscode/webui_priv.pem'&lt;/code&gt;.</source>
          <target state="translated">권한있는 사용자가 사용하는 키 파일. 기본값은 &lt;code&gt;'/etc/opscode/webui_priv.pem'&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="a1799257f8f89f481c04f7bacd649b8742a89cef" translate="yes" xml:space="preserve">
          <source>The key unit of measure for scaling the Chef server is the number of chef-client runs per minute: CCRs/min. For example, 500 nodes set to check in every 30 minutes is equivalent to 16.66 CCRs/min.</source>
          <target state="translated">Chef 서버를 확장하기위한 주요 측정 단위는 분당 chef-client 실행 수입니다 (CCR / 분). 예를 들어, 30 분마다 체크인하도록 설정된 500 개의 노드는 16.66 CCR / 분과 같습니다.</target>
        </trans-unit>
        <trans-unit id="f7f487d7f404c9b423b80fe12215fa58223fec98" translate="yes" xml:space="preserve">
          <source>The knife.rb file must be created in the .chef folder. It should look similar to:</source>
          <target state="translated">knife.rb 파일은 .chef 폴더에 작성해야합니다. 다음과 유사해야합니다.</target>
        </trans-unit>
        <trans-unit id="e79fb0ec1141b0763b13309789c188634d3587bf" translate="yes" xml:space="preserve">
          <source>The knife.rb, ORGANIZATION-validator.pem, and USER.pem files must be moved to the .chef directory after they are downloaded from the Chef server.</source>
          <target state="translated">knife.rb, ORGANIZATION-validator.pem 및 USER.pem 파일은 Chef 서버에서 다운로드 한 후 .chef 디렉토리로 이동해야합니다.</target>
        </trans-unit>
        <trans-unit id="6c8007bc8248fa71b53567e6f7b916e009d00b18" translate="yes" xml:space="preserve">
          <source>The last field in the &lt;code&gt;/prod/drbd&lt;/code&gt; file (&lt;code&gt;oos&lt;/code&gt;) reports how far the primary is out of sync with its partner. If the secondary is down and there are a lot of writes on the primary, this number will increase. For example:</source>
          <target state="translated">&lt;code&gt;/prod/drbd&lt;/code&gt; 파일 ( &lt;code&gt;oos&lt;/code&gt; ) 의 마지막 필드 는 기본이 파트너와 동기화되지 않은 정도를보고합니다. 보조 장치가 작동 중지되고 기본 장치에 대한 쓰기 수가 많은 경우이 수가 증가합니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="38ca4ec229992679961001779d9c335736a95d7c" translate="yes" xml:space="preserve">
          <source>The layout of the &lt;strong&gt;deploy&lt;/strong&gt; resource matches a Ruby on Rails app by default, but this can be customized. To customize the layout, do something like the following:</source>
          <target state="translated">&lt;strong&gt;배포&lt;/strong&gt; 리소스 의 레이아웃은 기본적으로 Ruby on Rails 앱과 일치하지만 사용자 정의 할 수 있습니다. 레이아웃을 사용자 정의하려면 다음과 같이하십시오.</target>
        </trans-unit>
        <trans-unit id="08e934e907a9b1c2def6c9d11580836bf5848e9b" translate="yes" xml:space="preserve">
          <source>The layout of the local chef-repo. Possible values: &lt;code&gt;static&lt;/code&gt;, &lt;code&gt;everything&lt;/code&gt;, or &lt;code&gt;hosted_everything&lt;/code&gt;. Use &lt;code&gt;static&lt;/code&gt; for just roles, environments, cookbooks, and data bags. By default, &lt;code&gt;everything&lt;/code&gt; and &lt;code&gt;hosted_everything&lt;/code&gt; are dynamically selected depending on the server type.</source>
          <target state="translated">현지 셰프 레포의 레이아웃. 가능한 값은 &lt;code&gt;static&lt;/code&gt; , &lt;code&gt;everything&lt;/code&gt; 또는 &lt;code&gt;hosted_everything&lt;/code&gt; 입니다. 역할, 환경, 요리 책 및 데이터 백에만 &lt;code&gt;static&lt;/code&gt; 을 사용하십시오 . 기본적으로 &lt;code&gt;everything&lt;/code&gt; 과 &lt;code&gt;hosted_everything&lt;/code&gt; 은 서버 유형에 따라 동적으로 선택됩니다.</target>
        </trans-unit>
        <trans-unit id="79729873354423b5adfdd955ed527dbad88be112" translate="yes" xml:space="preserve">
          <source>The layout of the local chef-repo. Possible values: &lt;code&gt;static&lt;/code&gt;, &lt;code&gt;everything&lt;/code&gt;, or &lt;code&gt;hosted_everything&lt;/code&gt;. Use &lt;code&gt;static&lt;/code&gt; for just roles, environments, cookbooks, and data bags. By default, &lt;code&gt;everything&lt;/code&gt; and &lt;code&gt;hosted_everything&lt;/code&gt; are dynamically selected depending on the server type. Default value: &lt;code&gt;default&lt;/code&gt;.</source>
          <target state="translated">현지 셰프 레포의 레이아웃. 가능한 값은 &lt;code&gt;static&lt;/code&gt; , &lt;code&gt;everything&lt;/code&gt; 또는 &lt;code&gt;hosted_everything&lt;/code&gt; 입니다. 역할, 환경, 요리 책 및 데이터 백에만 &lt;code&gt;static&lt;/code&gt; 을 사용하십시오 . 기본적으로 &lt;code&gt;everything&lt;/code&gt; 과 &lt;code&gt;hosted_everything&lt;/code&gt; 은 서버 유형에 따라 동적으로 선택됩니다. 기본 값 : &lt;code&gt;default&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="39cb2c576835970908906a2f14f8e5aee18f6ee4" translate="yes" xml:space="preserve">
          <source>The layout of the local chef-repo. Possible values: &lt;code&gt;static&lt;/code&gt;, &lt;code&gt;everything&lt;/code&gt;, or &lt;code&gt;hosted_everything&lt;/code&gt;. Use &lt;code&gt;static&lt;/code&gt; for just roles, environments, cookbooks, and data bags. By default, &lt;code&gt;everything&lt;/code&gt; and &lt;code&gt;hosted_everything&lt;/code&gt; are dynamically selected depending on the server type. Default: &lt;code&gt;everything&lt;/code&gt; / &lt;code&gt;hosted_everything&lt;/code&gt;.</source>
          <target state="translated">현지 셰프 레포의 레이아웃. 가능한 값은 &lt;code&gt;static&lt;/code&gt; , &lt;code&gt;everything&lt;/code&gt; 또는 &lt;code&gt;hosted_everything&lt;/code&gt; 입니다. 역할, 환경, 요리 책 및 데이터 백에만 &lt;code&gt;static&lt;/code&gt; 을 사용하십시오 . 기본적으로 &lt;code&gt;everything&lt;/code&gt; 과 &lt;code&gt;hosted_everything&lt;/code&gt; 은 서버 유형에 따라 동적으로 선택됩니다. 기본 : &lt;code&gt;everything&lt;/code&gt; / &lt;code&gt;hosted_everything&lt;/code&gt; 을 .</target>
        </trans-unit>
        <trans-unit id="f18f9ecfc992094560456b500f03527ced2787cc" translate="yes" xml:space="preserve">
          <source>The length of this request.</source>
          <target state="translated">이 요청의 길이입니다.</target>
        </trans-unit>
        <trans-unit id="28785620a243ccb9955a64af7b22e27bd9b0fb99" translate="yes" xml:space="preserve">
          <source>The level of logging that is to be displayed by the chef-client. The chef-client uses the &lt;code&gt;mixlib-log&lt;/code&gt; (&lt;a href=&quot;https://github.com/chef/mixlib-log&quot;&gt;https://github.com/chef/mixlib-log&lt;/a&gt;) to handle logging behavior. Options (in order of priority): &lt;code&gt;:debug&lt;/code&gt;, &lt;code&gt;:info&lt;/code&gt;, &lt;code&gt;:warn&lt;/code&gt;, &lt;code&gt;:error&lt;/code&gt;, and &lt;code&gt;:fatal&lt;/code&gt;. Default value: &lt;code&gt;:info&lt;/code&gt;.</source>
          <target state="translated">chef-client가 표시 할 로깅 레벨. chef-client는 &lt;code&gt;mixlib-log&lt;/code&gt; ( &lt;a href=&quot;https://github.com/chef/mixlib-log&quot;&gt;https://github.com/chef/mixlib-log&lt;/a&gt; )를 사용하여 로깅 동작을 처리합니다. 옵션 (우선 순위 순) : &lt;code&gt;:debug&lt;/code&gt; , &lt;code&gt;:info&lt;/code&gt; , &lt;code&gt;:warn&lt;/code&gt; , &lt;code&gt;:error&lt;/code&gt; 및 &lt;code&gt;:fatal&lt;/code&gt; . 기본 값 : &lt;code&gt;:info&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="639eef7057d2941d05842d8a0e8a20c5c26b16d9" translate="yes" xml:space="preserve">
          <source>The level of logging to be stored in a log file.</source>
          <target state="translated">로그 파일에 저장 될 로깅 수준.</target>
        </trans-unit>
        <trans-unit id="ea081b7990c3a5ef79814b4dc4e5d3edd39446b6" translate="yes" xml:space="preserve">
          <source>The level of logging to be stored in a log file. Possible levels: &lt;code&gt;:auto&lt;/code&gt; (default), &lt;code&gt;:debug&lt;/code&gt;, &lt;code&gt;:info&lt;/code&gt;, &lt;code&gt;:warn&lt;/code&gt;, &lt;code&gt;:error&lt;/code&gt;, or &lt;code&gt;:fatal&lt;/code&gt;. Default value: &lt;code&gt;:warn&lt;/code&gt; (when a terminal is available) or &lt;code&gt;:info&lt;/code&gt; (when a terminal is not available).</source>
          <target state="translated">로그 파일에 저장 될 로깅 레벨. 가능한 수준 : &lt;code&gt;:auto&lt;/code&gt; (기본값) &lt;code&gt;:debug&lt;/code&gt; , &lt;code&gt;:info&lt;/code&gt; , &lt;code&gt;:warn&lt;/code&gt; , &lt;code&gt;:error&lt;/code&gt; 또는 &lt;code&gt;:fatal&lt;/code&gt; . 기본값 : &lt;code&gt;:warn&lt;/code&gt; (터미널을 사용할 수있는 경우) 또는 &lt;code&gt;:info&lt;/code&gt; (터미널을 사용할 수없는 경우)</target>
        </trans-unit>
        <trans-unit id="fe130706c4867d7233ff7ebe65fc69aec0addadd" translate="yes" xml:space="preserve">
          <source>The level of logging to be stored in a log file. Possible levels: &lt;code&gt;:auto&lt;/code&gt; (default), &lt;code&gt;debug&lt;/code&gt;, &lt;code&gt;info&lt;/code&gt;, &lt;code&gt;warn&lt;/code&gt;, &lt;code&gt;error&lt;/code&gt;, or &lt;code&gt;fatal&lt;/code&gt;.</source>
          <target state="translated">로그 파일에 저장 될 로깅 레벨. 가능한 레벨 : &lt;code&gt;:auto&lt;/code&gt; (기본값), &lt;code&gt;debug&lt;/code&gt; , &lt;code&gt;info&lt;/code&gt; , &lt;code&gt;warn&lt;/code&gt; , &lt;code&gt;error&lt;/code&gt; 또는 &lt;code&gt;fatal&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="537ab2377198ab82047b78860b4b67624e126fc9" translate="yes" xml:space="preserve">
          <source>The level of logging to be stored in a log file. Possible levels: &lt;code&gt;:auto&lt;/code&gt; (default), &lt;code&gt;debug&lt;/code&gt;, &lt;code&gt;info&lt;/code&gt;, &lt;code&gt;warn&lt;/code&gt;, &lt;code&gt;error&lt;/code&gt;, or &lt;code&gt;fatal&lt;/code&gt;. Default value: &lt;code&gt;warn&lt;/code&gt; (when a terminal is available) or &lt;code&gt;info&lt;/code&gt; (when a terminal is not available).</source>
          <target state="translated">로그 파일에 저장 될 로깅 레벨. 가능한 레벨 : &lt;code&gt;:auto&lt;/code&gt; (기본값), &lt;code&gt;debug&lt;/code&gt; , &lt;code&gt;info&lt;/code&gt; , &lt;code&gt;warn&lt;/code&gt; , &lt;code&gt;error&lt;/code&gt; 또는 &lt;code&gt;fatal&lt;/code&gt; . 기본값 : &lt;code&gt;warn&lt;/code&gt; (터미널을 사용할 수있는 경우) 또는 &lt;code&gt;info&lt;/code&gt; (터미널을 사용할 수없는 경우)</target>
        </trans-unit>
        <trans-unit id="02c7d4b33b09ae62f2712fff43a5885e1089b839" translate="yes" xml:space="preserve">
          <source>The level of logging to be stored in a log file.. Possible values: &lt;code&gt;debug&lt;/code&gt;, &lt;code&gt;notice&lt;/code&gt;, &lt;code&gt;verbose&lt;/code&gt;, and &lt;code&gt;warning&lt;/code&gt;. Default value: &lt;code&gt;'notice'&lt;/code&gt;.</source>
          <target state="translated">로그 파일에 저장 될 로깅 레벨. 가능한 값 : &lt;code&gt;debug&lt;/code&gt; , &lt;code&gt;notice&lt;/code&gt; , &lt;code&gt;verbose&lt;/code&gt; 및 &lt;code&gt;warning&lt;/code&gt; . 기본 값 : &lt;code&gt;'notice'&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cc51cabb304b35a553d8c7b046a4c0d480aa1664" translate="yes" xml:space="preserve">
          <source>The list of attributes that are required to configure a cookbook. An attribute name is required, followed by any of these options: &lt;code&gt;display_name&lt;/code&gt; (the name that appears in the user interface), &lt;code&gt;description&lt;/code&gt; (a short description), &lt;code&gt;choice&lt;/code&gt; (an array of choices that are presented to a user), &lt;code&gt;calculated&lt;/code&gt; (the default value is calculated by the recipe), &lt;code&gt;type&lt;/code&gt; (the type of value, either &lt;code&gt;string&lt;/code&gt;, &lt;code&gt;array&lt;/code&gt;, or &lt;code&gt;hash&lt;/code&gt;), &lt;code&gt;required&lt;/code&gt; (the level of user input, either &lt;code&gt;required&lt;/code&gt;, &lt;code&gt;recommended&lt;/code&gt;, or &lt;code&gt;optional&lt;/code&gt;), &lt;code&gt;recipes&lt;/code&gt; (an array of recipes), or &lt;code&gt;default&lt;/code&gt; (the attribute&amp;rsquo;s default value).</source>
          <target state="translated">요리 책을 구성하는 데 필요한 속성 목록입니다. 속성 이름 뒤에는 &lt;code&gt;display_name&lt;/code&gt; (사용자 인터페이스에 표시되는 이름), &lt;code&gt;description&lt;/code&gt; (짧은 설명), &lt;code&gt;choice&lt;/code&gt; (사용자에게 제공되는 선택 배열), &lt;code&gt;calculated&lt;/code&gt; (기본값) 옵션이 필요합니다. 값은 레시피에 의해 계산 됨, &lt;code&gt;type&lt;/code&gt; (값 유형, &lt;code&gt;string&lt;/code&gt; , &lt;code&gt;array&lt;/code&gt; 또는 &lt;code&gt;hash&lt;/code&gt; ), &lt;code&gt;required&lt;/code&gt; (사용자 입력 레벨, &lt;code&gt;required&lt;/code&gt; , &lt;code&gt;recommended&lt;/code&gt; 또는 &lt;code&gt;optional&lt;/code&gt; ), &lt;code&gt;recipes&lt;/code&gt; (레시피 배열) 또는 &lt;code&gt;default&lt;/code&gt; (속성 기본값)입니다.</target>
        </trans-unit>
        <trans-unit id="3588ba8b88f4b99394975082c5ee755909dc5820" translate="yes" xml:space="preserve">
          <source>The list of automatic attributes that are collected by Ohai at the start of each chef-client run vary from organization to organization, and will often vary between the various server types being configured and the platforms on which those servers are run. All attributes collected by Ohai are unmodifiable by the chef-client. To see which automatic attributes are collected by Ohai for a particular node, run the following command:</source>
          <target state="translated">각 쉐프-클라이언트 실행이 시작될 때 Ohai가 수집하는 자동 속성 목록은 조직마다 다르며, 구성되는 다양한 서버 유형과 해당 서버가 실행되는 플랫폼에 따라 다를 수 있습니다. Ohai가 수집 한 모든 속성은 chef-client가 수정할 수 없습니다. 특정 노드에 대해 Ohai가 어떤 자동 속성을 수집하는지 확인하려면 다음 명령을 실행하십시오.</target>
        </trans-unit>
        <trans-unit id="602c30ddea7a8f097cb2b94264a6e7b630b097f9" translate="yes" xml:space="preserve">
          <source>The list of recipes will be the default recipes for a given cookbook. If an environment has multiple versions of a cookbook that matches its constraints, only the recipes from the latest version of that cookbook will be reported.</source>
          <target state="translated">레시피 목록은 지정된 요리 책의 기본 레시피가됩니다. 환경에 제약 조건과 일치하는 여러 버전의 요리 책이있는 경우 해당 요리 책의 최신 버전의 레시피 만보고됩니다.</target>
        </trans-unit>
        <trans-unit id="64225ad8280b88708269e645f40c3ef7771d94e8" translate="yes" xml:space="preserve">
          <source>The list of supported cipher suites that are used to establish a secure connection. To favor AES256 with ECDHE forward security, drop the &lt;code&gt;RC4-SHA:RC4-MD5:RC4:RSA&lt;/code&gt; prefix. For example:</source>
          <target state="translated">보안 연결을 설정하는 데 사용되는 지원되는 암호화 제품군 목록입니다. ECDHE 포워드 보안으로 AES256을 선호하려면 &lt;code&gt;RC4-SHA:RC4-MD5:RC4:RSA&lt;/code&gt; 접 두부를 삭제하십시오. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="f21742065942b71dcae3e4fe29fc770d7e8482ee" translate="yes" xml:space="preserve">
          <source>The list of supported cipher suites that are used to establish a secure connection. To favor AES256 with ECDHE forward security, drop the &lt;code&gt;RC4-SHA:RC4-MD5:RC4:RSA&lt;/code&gt; prefix. See &lt;a href=&quot;https://wiki.mozilla.org/Security/Server_Side_TLS&quot;&gt;this link&lt;/a&gt; for more information. For example:</source>
          <target state="translated">보안 연결을 설정하는 데 사용되는 지원되는 암호화 제품군 목록입니다. ECDHE 포워드 보안으로 AES256을 선호하려면 &lt;code&gt;RC4-SHA:RC4-MD5:RC4:RSA&lt;/code&gt; 접 두부를 삭제하십시오. 자세한 내용은 &lt;a href=&quot;https://wiki.mozilla.org/Security/Server_Side_TLS&quot;&gt;이 링크&lt;/a&gt; 를 참조하십시오. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="717b1d92d677d09a671ab8e3a28399477c9b011d" translate="yes" xml:space="preserve">
          <source>The local time of the request.</source>
          <target state="translated">요청의 현지 시간입니다.</target>
        </trans-unit>
        <trans-unit id="b6dd5e10c121eae8de36de2f4fe8a6363ff32c51" translate="yes" xml:space="preserve">
          <source>The location from which a data bag is loaded. Default value: &lt;code&gt;/var/chef/data_bags&lt;/code&gt;.</source>
          <target state="translated">데이터 백이로드되는 위치입니다. 초기 값 : &lt;code&gt;/var/chef/data_bags&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1dc5e95fa1b7fdd63ccef073ff37d8107d6ff0d2" translate="yes" xml:space="preserve">
          <source>The location in which a process identification number (pid) is saved. An executable, when started as a daemon, writes the pid to the specified file. Default value: &lt;code&gt;/tmp/name-of-executable.pid&lt;/code&gt;.</source>
          <target state="translated">프로세스 식별 번호 (pid)가 저장되는 위치입니다. 데몬으로 시작할 때 실행 파일은 pid를 지정된 파일에 씁니다. 기본 값 : &lt;code&gt;/tmp/name-of-executable.pid&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a929b7385c7eaf4c808fec19589d3214ad5fd887" translate="yes" xml:space="preserve">
          <source>The location in which backup files are stored. If this value is empty, backup files are stored in the directory of the target file. Default value: &lt;code&gt;/var/chef/backup&lt;/code&gt;.</source>
          <target state="translated">백업 파일이 저장된 위치입니다. 이 값이 비어 있으면 백업 파일이 대상 파일의 디렉토리에 저장됩니다. 초기 값 : &lt;code&gt;/var/chef/backup&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0689d3b50e86178a27da942ce41e1c6b1020e7ac" translate="yes" xml:space="preserve">
          <source>The location in which checksum files are stored. These are used to validate individual cookbook files, such as recipes. The checksum itself is stored in the Chef server database and is then compared to a file in the checksum path that has a filename identical to the checksum.</source>
          <target state="translated">체크섬 파일이 저장되는 위치입니다. 레시피와 같은 개별 요리 책 파일의 유효성을 검사하는 데 사용됩니다. 체크섬 자체는 Chef 서버 데이터베이스에 저장되고 체크섬과 파일 이름이 동일한 체크섬 경로의 파일과 비교됩니다.</target>
        </trans-unit>
        <trans-unit id="f290b4c423f1a10de581823f482e59e8ccc677d8" translate="yes" xml:space="preserve">
          <source>The location in which cookbook files are stored (temporarily) during upload.</source>
          <target state="translated">업로드하는 동안 요리 책 파일이 (임시로) 저장되는 위치입니다.</target>
        </trans-unit>
        <trans-unit id="c39e998a9fed42a1e758e64c62d43700fd48e0b9" translate="yes" xml:space="preserve">
          <source>The location in which cookbooks (and other transient data) files are stored when they are synchronized. This value can also be used in recipes to download files with the &lt;strong&gt;remote_file&lt;/strong&gt; resource.</source>
          <target state="translated">쿡북 (및 기타 임시 데이터) 파일이 동기화 될 때 저장되는 위치입니다. 이 값은 또한 레시피에서 &lt;strong&gt;remote_file&lt;/strong&gt; 자원 이있는 파일을 다운로드하는 데 사용될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="e48883e038d8fc298bb15680eeb5ef272f78b4de" translate="yes" xml:space="preserve">
          <source>The location in which nodes are stored when the chef-client is run in local mode. Default value: &lt;code&gt;/var/chef/node&lt;/code&gt;.</source>
          <target state="translated">chef-client가 로컬 모드에서 실행될 때 노드가 저장되는 위치입니다. 초기 값 : &lt;code&gt;/var/chef/node&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="11e799746a8665a6d619d0018a51d4e428ede1de" translate="yes" xml:space="preserve">
          <source>The location in which role files are located. Default value: &lt;code&gt;/var/chef/roles&lt;/code&gt;.</source>
          <target state="translated">역할 파일이있는 위치 초기 값 : &lt;code&gt;/var/chef/roles&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1c77193cdfd16500f76d2fa471ca484ff69bb699" translate="yes" xml:space="preserve">
          <source>The location of a recipe when it exists at a URL. Use this option only when the chef-client is run with the &lt;code&gt;--local-mode&lt;/code&gt; option.</source>
          <target state="translated">URL에있을 때 레시피의 위치입니다. chef-client가 &lt;code&gt;--local-mode&lt;/code&gt; 옵션으로 실행될 때만이 옵션을 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="1e867c5a261548eb319c00e24bc412c9be093b44" translate="yes" xml:space="preserve">
          <source>The location of a template file. By default, the chef-client looks for a template file in the &lt;code&gt;/templates&lt;/code&gt; directory of a cookbook. When the &lt;code&gt;local&lt;/code&gt; property is set to &lt;code&gt;true&lt;/code&gt;, use to specify the path to a template on the local node. This property may also be used to distribute specific files to specific platforms. See &amp;ldquo;File Specificity&amp;rdquo; below for more information. Default value: the &lt;code&gt;name&lt;/code&gt; of the resource block See &amp;ldquo;Syntax&amp;rdquo; section above for more information.</source>
          <target state="translated">템플릿 파일의 위치입니다. 기본적으로 chef-client는 요리 책 의 &lt;code&gt;/templates&lt;/code&gt; 디렉토리 에서 템플리트 파일을 찾습니다 . 때 &lt;code&gt;local&lt;/code&gt; 속성이 설정되어 &lt;code&gt;true&lt;/code&gt; , 로컬 노드에 템플릿의 경로를 지정하는 데 사용합니다. 이 특성은 특정 파일을 특정 플랫폼으로 분배하는 데 사용될 수도 있습니다. 자세한 내용은 아래의&amp;ldquo;파일 특정 성&amp;rdquo;을 참조하십시오. 기본값 : 리소스 블록 &lt;code&gt;name&lt;/code&gt; 자세한 내용은 위의 &quot;구문&quot;섹션을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="721035a7df9b55d3700476a12658494bf5015ad0" translate="yes" xml:space="preserve">
          <source>The location of the Easy Install binary.</source>
          <target state="translated">쉬운 설치 바이너리의 위치입니다.</target>
        </trans-unit>
        <trans-unit id="4acf572bb612bc831dc4a97cf1e574b24865ecff" translate="yes" xml:space="preserve">
          <source>The location of the Python binary.</source>
          <target state="translated">파이썬 바이너리의 위치.</target>
        </trans-unit>
        <trans-unit id="b2cd9cb2cfc7666fb98dac346dbbba566702ef35" translate="yes" xml:space="preserve">
          <source>The location of the chef-client lock file. This value is typically platform-dependent, so should be a location defined by &lt;code&gt;file_cache_path&lt;/code&gt;. The default location of a lock file should not on an NF mount. Default value: a location defined by &lt;code&gt;file_cache_path&lt;/code&gt;.</source>
          <target state="translated">chef-client 잠금 파일의 위치입니다. 이 값은 일반적으로 플랫폼에 따라 &lt;code&gt;file_cache_path&lt;/code&gt; 의해 정의 된 위치 여야 합니다. 잠금 파일의 기본 위치는 NF 마운트에 없어야합니다. 기본 값 : 의해 정의 된 위치 &lt;code&gt;file_cache_path&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d5e0cd1609aa8984f89e34188f5344eb52e0d2f9" translate="yes" xml:space="preserve">
          <source>The location of the file that contains the client key. Default value: &lt;code&gt;/etc/chef/client.pem&lt;/code&gt;.</source>
          <target state="translated">클라이언트 키가 포함 된 파일의 위치입니다. 기본 값 : &lt;code&gt;/etc/chef/client.pem&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3e283f9f298ba8a3e7482eb10043ce00594c52ad" translate="yes" xml:space="preserve">
          <source>The location of the file that contains the client key. Default value: &lt;code&gt;/etc/chef/client.pem&lt;/code&gt;. For example:</source>
          <target state="translated">클라이언트 키가 포함 된 파일의 위치입니다. 기본 값 : &lt;code&gt;/etc/chef/client.pem&lt;/code&gt; . 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="c07cd7a36ea92d1284005f48ec2f89a690f22f0e" translate="yes" xml:space="preserve">
          <source>The location of the file that contains the key used when a chef-client is registered with a Chef server. A validation key is signed using the &lt;code&gt;validation_client_name&lt;/code&gt; for authentication. Default value: &lt;code&gt;/etc/chef/validation.pem&lt;/code&gt;.</source>
          <target state="translated">chef-client가 Chef 서버에 등록 될 때 사용되는 키가 포함 된 파일의 위치입니다. 유효성 검사 키는 인증 을 위해 &lt;code&gt;validation_client_name&lt;/code&gt; 을 사용하여 서명됩니다 . 기본 값 : &lt;code&gt;/etc/chef/validation.pem&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9002b04991f3eb2632b1cb4be823583ec98c05e5" translate="yes" xml:space="preserve">
          <source>The location of the file that contains the key used when a chef-client is registered with a Chef server. A validation key is signed using the &lt;code&gt;validation_client_name&lt;/code&gt; for authentication. Default value: &lt;code&gt;/etc/chef/validation.pem&lt;/code&gt;. For example:</source>
          <target state="translated">chef-client가 Chef 서버에 등록 될 때 사용되는 키가 포함 된 파일의 위치입니다. 유효성 검사 키는 인증 을 위해 &lt;code&gt;validation_client_name&lt;/code&gt; 을 사용하여 서명됩니다 . 기본 값 : &lt;code&gt;/etc/chef/validation.pem&lt;/code&gt; . 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="ddc61fcc46c5222eaabe91ee5b69ccdfaaa8918d" translate="yes" xml:space="preserve">
          <source>The location of the home directory.</source>
          <target state="translated">홈 디렉토리의 위치</target>
        </trans-unit>
        <trans-unit id="be4b6208e31a1c2226b326958c8b7bcdb72d67e4" translate="yes" xml:space="preserve">
          <source>The location of the log file.</source>
          <target state="translated">로그 파일의 위치입니다.</target>
        </trans-unit>
        <trans-unit id="7419c37f0d1f0ff1544718584e416d9b3e61e064" translate="yes" xml:space="preserve">
          <source>The location of the log file. Default value: &lt;code&gt;STDOUT&lt;/code&gt;.</source>
          <target state="translated">로그 파일의 위치입니다. 기본 값 : &lt;code&gt;STDOUT&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fefeb7e2b393109939cb80eb5e25d6002afe6f8d" translate="yes" xml:space="preserve">
          <source>The location of the log file. Possible values: &lt;code&gt;/path/to/log_location&lt;/code&gt;, &lt;code&gt;STDOUT&lt;/code&gt;, &lt;code&gt;STDERR&lt;/code&gt;, &lt;code&gt;:win_evt&lt;/code&gt; (Windows Event Logger), or &lt;code&gt;:syslog&lt;/code&gt; (writes to the syslog daemon facility with the originator set as &lt;code&gt;chef-client&lt;/code&gt;). The application log will specify the source as &lt;code&gt;Chef&lt;/code&gt;. Default value: &lt;code&gt;STDOUT&lt;/code&gt;.</source>
          <target state="translated">로그 파일의 위치입니다. 가능한 값 : &lt;code&gt;/path/to/log_location&lt;/code&gt; , &lt;code&gt;STDOUT&lt;/code&gt; , &lt;code&gt;STDERR&lt;/code&gt; , &lt;code&gt;:win_evt&lt;/code&gt; (Windows Event Logger) 또는 &lt;code&gt;:syslog&lt;/code&gt; (발신자가 &lt;code&gt;chef-client&lt;/code&gt; 로 설정된 syslog 디먼 기능에 기록 ) 응용 프로그램 로그는 소스를 &lt;code&gt;Chef&lt;/code&gt; 로 지정합니다 . 기본 값 : &lt;code&gt;STDOUT&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fc08b759b8c36a3daf51e3c661494bf4fb821f1e" translate="yes" xml:space="preserve">
          <source>The location of the log file. This is recommended when starting any executable as a daemon.</source>
          <target state="translated">로그 파일의 위치입니다. 실행 파일을 데몬으로 시작할 때 권장됩니다.</target>
        </trans-unit>
        <trans-unit id="8e1b2353ad728c9c0d950fb822143751c211fb08" translate="yes" xml:space="preserve">
          <source>The location of the log file. This is recommended when starting any executable as a daemon. Default value: &lt;code&gt;STDOUT&lt;/code&gt;.</source>
          <target state="translated">로그 파일의 위치입니다. 실행 파일을 데몬으로 시작할 때 권장됩니다. 기본 값 : &lt;code&gt;STDOUT&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2be3018bd629c796ff805709094a3d0bbe26ad9d" translate="yes" xml:space="preserve">
          <source>The location path to which the source is to be cloned, checked out, or exported. Default value: the &lt;code&gt;name&lt;/code&gt; of the resource block See &amp;ldquo;Syntax&amp;rdquo; section above for more information.</source>
          <target state="translated">소스를 복제, 체크 아웃 또는 내보낼 위치 경로입니다. 기본값 : 리소스 블록 &lt;code&gt;name&lt;/code&gt; 자세한 내용은 위의 &quot;구문&quot;섹션을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="08793cf9d5f0cb874c3d95583f07c3eb099e6847" translate="yes" xml:space="preserve">
          <source>The location to a file containing valid PKCS#1 public key to be added. If not passed, then the server will generate a new one for you and return the private key to STDOUT.</source>
          <target state="translated">추가 할 유효한 PKCS # 1 공개 키를 포함하는 파일의 위치입니다. 전달되지 않으면 서버는 새로운 것을 생성하고 개인 키를 STDOUT으로 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="70e7b9efeb75a15290f0d92ecae156624e318c9c" translate="yes" xml:space="preserve">
          <source>The locations of the certificate and private key files are</source>
          <target state="translated">인증서 및 개인 키 파일의 위치는</target>
        </trans-unit>
        <trans-unit id="5cfeab4b8622f90b5584057d317077338e0cec59" translate="yes" xml:space="preserve">
          <source>The log level for Ruby on Rails services. Default value: &lt;code&gt;info&lt;/code&gt;.</source>
          <target state="translated">Ruby on Rails 서비스의 로그 레벨. 기본 값 : &lt;code&gt;info&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="89d695513807115cacf51d12469bf20d85e35d04" translate="yes" xml:space="preserve">
          <source>The log level used for requests to the Chef server from the web application. Default value: &lt;code&gt;info&lt;/code&gt;.</source>
          <target state="translated">웹 애플리케이션에서 Chef 서버로의 요청에 사용되는 로그 레벨입니다. 기본 값 : &lt;code&gt;info&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6fe6c6b26f26b68e6692769ea1ce5087aa5add66" translate="yes" xml:space="preserve">
          <source>The log rotation policy for this service. Log files are rotated when they exceed &lt;code&gt;file_maxbytes&lt;/code&gt;. The maximum number of log files in the rotation is defined by &lt;code&gt;num_to_keep&lt;/code&gt;. Default value:</source>
          <target state="translated">이 서비스에 대한 로그 순환 정책. &lt;code&gt;file_maxbytes&lt;/code&gt; 를 초과하면 로그 파일이 회전됩니다 . 로테이션에서 최대 로그 파일 수는 &lt;code&gt;num_to_keep&lt;/code&gt; 에 의해 정의됩니다 . 기본값:</target>
        </trans-unit>
        <trans-unit id="c645129a6aae16e186e2ed7cdf388fb4d9f1b3ec" translate="yes" xml:space="preserve">
          <source>The log rotation policy for this service. Log files are rotated when they exceed &lt;code&gt;file_maxbytes&lt;/code&gt;. The maximum number of log files in the rotation is defined by &lt;code&gt;num_to_keep&lt;/code&gt;. Default value: &lt;code&gt;{ 'file_maxbytes' =&amp;gt; 104857600, 'num_to_keep' =&amp;gt; 10 }&lt;/code&gt;</source>
          <target state="translated">이 서비스에 대한 로그 순환 정책. &lt;code&gt;file_maxbytes&lt;/code&gt; 를 초과하면 로그 파일이 회전됩니다 . 로테이션에서 최대 로그 파일 수는 &lt;code&gt;num_to_keep&lt;/code&gt; 에 의해 정의됩니다 . 기본값 : &lt;code&gt;{ 'file_maxbytes' =&amp;gt; 104857600, 'num_to_keep' =&amp;gt; 10 }&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="11119e6b95031209ce985373999bb96890e6a70c" translate="yes" xml:space="preserve">
          <source>The login shell.</source>
          <target state="translated">로그인 쉘.</target>
        </trans-unit>
        <trans-unit id="f9fbb7510e3eca891f358f4fe381a76acb8c0c1e" translate="yes" xml:space="preserve">
          <source>The magic cookie for the node to which a connection is made.</source>
          <target state="translated">연결되는 노드의 매직 쿠키.</target>
        </trans-unit>
        <trans-unit id="251babb9b7abd2523c4a6c7079200eb97590d679" translate="yes" xml:space="preserve">
          <source>The manage.rb file is the default configuration file used by Chef management console. These settings are applied every time &lt;code&gt;chef-manage-ctl reconfigure&lt;/code&gt; is run.</source>
          <target state="translated">manage.rb 파일은 Chef 관리 콘솔에서 사용하는 기본 구성 파일입니다. 이 설정은 &lt;code&gt;chef-manage-ctl reconfigure&lt;/code&gt; 이 실행될 때마다 적용됩니다 .</target>
        </trans-unit>
        <trans-unit id="c628a01965529e107376e1ebc5c806ef55920c78" translate="yes" xml:space="preserve">
          <source>The maximum accepted body size for a client request, as indicated by the &lt;code&gt;Content-Length&lt;/code&gt; request header. When the maximum accepted body size is greater than this value, a &lt;code&gt;413 Request Entity Too Large&lt;/code&gt; error is returned. Default value: &lt;code&gt;250m&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Content-Length&lt;/code&gt; 요청 헤더 로 표시되는 클라이언트 요청에 허용되는 최대 본문 크기입니다 . 허용되는 최대 본문 크기가이 값보다 큰 경우 &lt;code&gt;413 Request Entity Too Large&lt;/code&gt; 오류가 리턴됩니다. 기본 값 : &lt;code&gt;250m&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="af18e12f60cd8166601f53ccdfd59c0c53a6923c" translate="yes" xml:space="preserve">
          <source>The maximum amount (in megabytes) between checkpoints in log file segments. Default value: &lt;code&gt;3&lt;/code&gt;.</source>
          <target state="translated">로그 파일 세그먼트의 체크 포인트 사이의 최대량 (MB)입니다. 기본값 : &lt;code&gt;3&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c07f18257377dc47d133ebe07340c0aeb7e66785" translate="yes" xml:space="preserve">
          <source>The maximum amount of memory (in bytes). Default value: &lt;code&gt;'8m'&lt;/code&gt;.</source>
          <target state="translated">최대 메모리 양 (바이트). 기본 값 : &lt;code&gt;'8m'&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e2602723c937d6d15acccdca220d5a1961a76f57" translate="yes" xml:space="preserve">
          <source>The maximum amount of shared memory. Default value: &lt;code&gt;17179869184&lt;/code&gt;.</source>
          <target state="translated">공유 메모리의 최대량 기본 값 : &lt;code&gt;17179869184&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="25aef389407304f13e7e0f732089d044c1ba4705" translate="yes" xml:space="preserve">
          <source>The maximum amount of time (in seconds) available to the chef-client run when the chef-client is run as a service on the Microsoft Windows platform. If the chef-client run does not complete within the specified timeframe, the chef-client run is terminated. Default value: &lt;code&gt;2 * (60 * 60)&lt;/code&gt;.</source>
          <target state="translated">chef-client가 Microsoft Windows 플랫폼에서 서비스로 실행될 때 chef-client가 실행할 수있는 최대 시간 (초)입니다. 지정된 시간 내에 요리사-클라이언트 실행이 완료되지 않으면 요리사-클라이언트 실행이 종료됩니다. 기본값 : &lt;code&gt;2 * (60 * 60)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e17aea3aadc75d64159b2a157a572e020da31cf6" translate="yes" xml:space="preserve">
          <source>The maximum connection duration (in seconds) for the HTTP connection pool that is used by the rabbitmq-management plugin. Default value: &lt;code&gt;70&lt;/code&gt;.</source>
          <target state="translated">rabbitmq-management 플러그인에서 사용하는 HTTP 연결 풀의 최대 연결 시간 (초)입니다. 기본 값 : &lt;code&gt;70&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8db4733613b0d51ec5c08f923eebec78749ce18f" translate="yes" xml:space="preserve">
          <source>The maximum connection worker age (in seconds) for the HTTP connection pool that is used by the rabbitmq-management plugin. Default value: &lt;code&gt;70&lt;/code&gt;.</source>
          <target state="translated">rabbitmq-management 플러그인에서 사용하는 HTTP 연결 풀의 최대 연결 작업자 기간 (초)입니다. 기본 값 : &lt;code&gt;70&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bec06eadf61d2a647f008854fef93d7b9d97aa91" translate="yes" xml:space="preserve">
          <source>The maximum cull interval (in seconds) for the HTTP connection pool that is used by the rabbitmq-management plugin. Default value: &lt;code&gt;60&lt;/code&gt;.</source>
          <target state="translated">rabbitmq 관리 플러그인이 사용하는 HTTP 연결 풀의 최대 컬 간격 (초)입니다. 기본 값 : &lt;code&gt;60&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="70b8a687023b010fc9feee6f2db8dce20c6823cd" translate="yes" xml:space="preserve">
          <source>The maximum field length (in number of tokens/terms). If a field length exceeds this value, Apache Solr may not be able to complete building the index. Default value: &lt;code&gt;100000&lt;/code&gt; (increased from the Apache Solr default value of &lt;code&gt;10000&lt;/code&gt;).</source>
          <target state="translated">최대 필드 길이 (토큰 / 용어 수). 필드 길이가이 값을 초과하면 Apache Solr이 색인 작성을 완료하지 못할 수 있습니다. 기본값 : &lt;code&gt;100000&lt;/code&gt; (Apache Solr 기본값 &lt;code&gt;10000&lt;/code&gt; 에서 증가 ).</target>
        </trans-unit>
        <trans-unit id="00f5186bccf4be687d201f12315197bbd7268937" translate="yes" xml:space="preserve">
          <source>The maximum field length setting for Apache Solr should be greater than any expected node object file sizes in order for them to be successfully added to the search index. If a node object file is greater than the maximum field length, the node object will be indexed up to the maximum, but the part of the file past that limit will not be indexed. If this occurs, it will seem as if nodes disappear from the search index. To ensure that large node file sizes are indexed properly, verify the following configuration settings:</source>
          <target state="translated">Apache Solr의 최대 필드 길이 설정이 검색 노드에 성공적으로 추가 되려면 예상되는 노드 오브젝트 파일 크기보다 커야합니다. 노드 오브젝트 파일이 최대 필드 길이보다 큰 경우, 노드 오브젝트는 최대 값까지 색인화되지만 해당 한계를 지난 파일 부분은 색인화되지 않습니다. 이 경우 노드가 검색 색인에서 사라지는 것처럼 보입니다. 큰 노드 파일 크기가 올바르게 색인화되도록하려면 다음 구성 설정을 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="46bf8b9287bf952e649fdbd7ae3a054013580d3c" translate="yes" xml:space="preserve">
          <source>The maximum number of allowed concurrent connections. Default value: &lt;code&gt;350&lt;/code&gt;.</source>
          <target state="translated">허용되는 최대 동시 연결 수입니다. 기본 값 : &lt;code&gt;350&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="653889cf2f8ee4beec7fc9169d837b7f3b8d14aa" translate="yes" xml:space="preserve">
          <source>The maximum number of allowed concurrent connections. This value should only be tuned when the &lt;code&gt;opscode_erchef['db_pool_size']&lt;/code&gt; value used by the &lt;strong&gt;opscode-erchef&lt;/strong&gt; service is modified. Default value: &lt;code&gt;350&lt;/code&gt;.</source>
          <target state="translated">허용되는 최대 동시 연결 수입니다. 이 값은 &lt;strong&gt;opscode-erchef&lt;/strong&gt; 서비스 에서 사용 하는 &lt;code&gt;opscode_erchef['db_pool_size']&lt;/code&gt; 값 이 수정 된 경우에만 조정해야합니다 . 기본 값 : &lt;code&gt;350&lt;/code&gt; .&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="18af8c83284fd38d87fa6a5d9f7ab893340e03fc" translate="yes" xml:space="preserve">
          <source>The maximum number of arguments per command line. Default: &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">명령 행당 최대 인수 수 기본값은 &lt;code&gt;nil&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="839309e77831eb6cd65755df5d4d5fa4580634d7" translate="yes" xml:space="preserve">
          <source>The maximum number of document updates that can be stored in memory before being flushed and added to the current index segment. Default value: &lt;code&gt;15&lt;/code&gt;.</source>
          <target state="translated">플러시되고 현재 색인 세그먼트에 추가되기 전에 메모리에 저장할 수있는 최대 문서 업데이트 수입니다. 기본값 : &lt;code&gt;15&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d8c5bfeae055980d45d001305137b4f2f1ac1477" translate="yes" xml:space="preserve">
          <source>The maximum number of documents before a soft commit is triggered. Default value: &lt;code&gt;1000&lt;/code&gt;.</source>
          <target state="translated">소프트 커밋이 트리거되기 전의 최대 문서 수입니다. 기본 값 : &lt;code&gt;1000&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="062fe43cfbc9363a5244d4d6cfa1f213d2dd2f95" translate="yes" xml:space="preserve">
          <source>The maximum number of index segments allowed before they are merged into a single index. Default value: &lt;code&gt;2147483647&lt;/code&gt;.</source>
          <target state="translated">단일 인덱스로 병합되기 전에 허용되는 최대 인덱스 세그먼트 수입니다. 기본 값 : &lt;code&gt;2147483647&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cdc9e00c4694783599eef314c284a6ce273d5e9b" translate="yes" xml:space="preserve">
          <source>The maximum number of keepalive proves that should be sent before dropping a connection. Default value: &lt;code&gt;2&lt;/code&gt;.</source>
          <target state="translated">연결을 삭제하기 전에 전송해야하는 최대 keepalive 수를 나타냅니다. 기본 값 : &lt;code&gt;2&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b7f52e0fc89c45bff7be264eb1b0dbaf0f094847" translate="yes" xml:space="preserve">
          <source>The maximum number of messages that can be queued before RabbitMQ automatically drops messages from the front of the queue to make room for new messages. Default value: &lt;code&gt;10000&lt;/code&gt;.</source>
          <target state="translated">RabbitMQ가 대기열에서 메시지를 자동으로 삭제하여 새 메시지를위한 공간을 만들기 전에 대기 할 수있는 최대 메시지 수입니다. 기본 값 : &lt;code&gt;10000&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="940e931d3f23fac23dadd91b004b94d1ff10d184" translate="yes" xml:space="preserve">
          <source>The maximum number of simultaneous clients. Use with &lt;code&gt;nginx['worker_processes']&lt;/code&gt; to determine the maximum number of allowed clients. Default value: &lt;code&gt;10240&lt;/code&gt;.</source>
          <target state="translated">최대 동시 클라이언트 수 허용되는 최대 클라이언트 수를 결정하려면 &lt;code&gt;nginx['worker_processes']&lt;/code&gt; 와 함께 사용하십시오 . 기본 값 : &lt;code&gt;10240&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="576ad6c0b05073e9d9175548a6953a837f7e1f04" translate="yes" xml:space="preserve">
          <source>The maximum size (in bytes) of a diff file created by the chef-client. Default value: &lt;code&gt;1000000&lt;/code&gt;.</source>
          <target state="translated">chef-client가 작성한 diff 파일의 최대 크기 (바이트)입니다. 초기 값 : &lt;code&gt;1000000&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="971765c82a615cf8e30d2cc0e5e9f93e72725538" translate="yes" xml:space="preserve">
          <source>The maximum size (in bytes) of a file for which the chef-client can create a diff. Default value: &lt;code&gt;10000000&lt;/code&gt;.</source>
          <target state="translated">chef-client가 diff를 작성할 수있는 파일의 최대 크기 (바이트)입니다. 기본 값 : &lt;code&gt;10000000&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="eea2b865e59d6b9c6a47e03ebc20b397ba96a99e" translate="yes" xml:space="preserve">
          <source>The maximum size (in characters) for a command line. Default: &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">명령 행의 최대 크기 (문자)입니다. 기본값은 &lt;code&gt;nil&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="f31f47dcd86bba426631db87d54f3cea3c14d228" translate="yes" xml:space="preserve">
          <source>The maximum transmission unit (MTU) for the network interface.</source>
          <target state="translated">네트워크 인터페이스의 최대 전송 단위 (MTU).</target>
        </trans-unit>
        <trans-unit id="e4a4c4753e1224f5cfe8608213dfee58f2681bec" translate="yes" xml:space="preserve">
          <source>The maximum version of the chef-client that is allowed to access the Chef server via the Chef server API. Default value: &lt;code&gt;11&lt;/code&gt;.</source>
          <target state="translated">Chef 서버 API를 통해 Chef 서버에 액세스 할 수있는 최대 버전의 chef-client입니다. 기본 값 : &lt;code&gt;11&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5abe73878a40c5cc196e0707dd191844e0d7414b" translate="yes" xml:space="preserve">
          <source>The maximum worker count for the HTTP connection pool that is used by the rabbitmq-management plugin. Default value: &lt;code&gt;100&lt;/code&gt;.</source>
          <target state="translated">rabbitmq 관리 플러그인에서 사용하는 HTTP 연결 풀의 최대 작업자 수입니다. 기본 값 : &lt;code&gt;100&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="22b6af12ffbc2bc205882eb87428c72290e3e1f0" translate="yes" xml:space="preserve">
          <source>The mdadm command can be used to create RAID arrays. For example, a RAID 0 array named &lt;code&gt;/dev/md0&lt;/code&gt; with 10 devices would have a command similar to the following:</source>
          <target state="translated">mdadm 명령을 사용하여 RAID 배열을 만들 수 있습니다. 예를 들어 10 개의 장치가있는 &lt;code&gt;/dev/md0&lt;/code&gt; 이라는 RAID 0 배열 에는 다음과 유사한 명령이 있습니다.</target>
        </trans-unit>
        <trans-unit id="b5701b94039ff452f5978036a836b792ce21cfef" translate="yes" xml:space="preserve">
          <source>The mdadm command can be used to create RAID arrays. For example, a RAID 5 array named &lt;code&gt;/dev/sd0&lt;/code&gt; with 4, and a superblock type of &lt;code&gt;0.90&lt;/code&gt; would be similar to:</source>
          <target state="translated">mdadm 명령을 사용하여 RAID 배열을 만들 수 있습니다. 예를 들어, 이름이 &lt;code&gt;/dev/sd0&lt;/code&gt; 이고 RAID 블록이 &lt;code&gt;0.90&lt;/code&gt; 인 RAID 5 어레이 는 다음과 유사합니다.</target>
        </trans-unit>
        <trans-unit id="7c05538cf3baee10e5a925489a869c5d4d4a6326" translate="yes" xml:space="preserve">
          <source>The message (&lt;code&gt;{created,&amp;lt;&amp;lt;&quot;_default&quot;&amp;gt;&amp;gt;}&lt;/code&gt;)</source>
          <target state="translated">메시지 ( &lt;code&gt;{created,&amp;lt;&amp;lt;&quot;_default&quot;&amp;gt;&amp;gt;}&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="92a7f719d69fbcfc0dc0d6fcf52e7e1890b645ef" translate="yes" xml:space="preserve">
          <source>The message &lt;code&gt;[ERROR] opscode-chef-mover is not running&lt;/code&gt; is expected, does not indicate an actual error, and is safe to ignore.</source>
          <target state="translated">메시지 &lt;code&gt;[ERROR] opscode-chef-mover is not running&lt;/code&gt; 실제 오류를 표시하지 않는, 예상 무시하는 것이 안전합니다.</target>
        </trans-unit>
        <trans-unit id="e01b07c2c5c7c9b7cb54c14d1fca4e66720a883f" translate="yes" xml:space="preserve">
          <source>The message is sent as &lt;code&gt;http://example.com/check_in?message=some_message&lt;/code&gt;.</source>
          <target state="translated">메시지는 &lt;code&gt;http://example.com/check_in?message=some_message&lt;/code&gt; 로 전송됩니다 .</target>
        </trans-unit>
        <trans-unit id="c69c2b4446c52f12a239cdbd5e4bb3a0126447fa" translate="yes" xml:space="preserve">
          <source>The message that is sent by the HTTP request. Default value: the &lt;code&gt;name&lt;/code&gt; of the resource block See &amp;ldquo;Syntax&amp;rdquo; section above for more information.</source>
          <target state="translated">HTTP 요청이 보낸 메시지입니다. 기본값 : 리소스 블록 &lt;code&gt;name&lt;/code&gt; 자세한 내용은 위의 &quot;구문&quot;섹션을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="ccaab1bd5162de84d2d2e3d96c3ba32e4385d90b" translate="yes" xml:space="preserve">
          <source>The message to be added to a log file. Default value: the &lt;code&gt;name&lt;/code&gt; of the resource block See &amp;ldquo;Syntax&amp;rdquo; section above for more information.</source>
          <target state="translated">로그 파일에 추가 할 메시지입니다. 기본값 : 리소스 블록 &lt;code&gt;name&lt;/code&gt; 자세한 내용은 위의 &quot;구문&quot;섹션을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="e62e9c995689e0f99a36a2042e1f14c1a85fd228" translate="yes" xml:space="preserve">
          <source>The migration process will first download the existing data from the Open Source Chef server, transform that data into the format required for Chef server 12, and then upload that data to the server.</source>
          <target state="translated">마이그레이션 프로세스는 먼저 Open Source Chef 서버에서 기존 데이터를 다운로드하고 해당 데이터를 Chef 서버 12에 필요한 형식으로 변환 한 다음 해당 데이터를 서버에 업로드합니다.</target>
        </trans-unit>
        <trans-unit id="252f5d5ebd94d406511d65a8f5d51f743b86b6cc" translate="yes" xml:space="preserve">
          <source>The minimum required version of data bag encryption. Possible values: &lt;code&gt;0&lt;/code&gt;, &lt;code&gt;1&lt;/code&gt;, and &lt;code&gt;2&lt;/code&gt;. When all of the machines in an organization are running chef-client version 11.6 (or higher), it is recommended that this value be set to &lt;code&gt;2&lt;/code&gt;.</source>
          <target state="translated">데이터 백 암호화의 최소 필수 버전입니다. 가능한 값은 &lt;code&gt;0&lt;/code&gt; , &lt;code&gt;1&lt;/code&gt; 및 &lt;code&gt;2&lt;/code&gt; 입니다. 조직의 모든 머신이 chef-client 버전 11.6 이상을 실행중인 경우이 값을 &lt;code&gt;2&lt;/code&gt; 로 설정하는 것이 좋습니다 .</target>
        </trans-unit>
        <trans-unit id="345947374197facb7394a2cdc8014a51065dbda8" translate="yes" xml:space="preserve">
          <source>The minimum required version of data bag encryption. Possible values: &lt;code&gt;1&lt;/code&gt; or &lt;code&gt;2&lt;/code&gt;. When all of the machines in an organization are running chef-client version 11.6 (or higher), it is recommended that this value be set to &lt;code&gt;2&lt;/code&gt;. For example:</source>
          <target state="translated">데이터 백 암호화의 최소 필수 버전입니다. 가능한 값은 &lt;code&gt;1&lt;/code&gt; 또는 &lt;code&gt;2&lt;/code&gt; 입니다. 조직의 모든 머신이 chef-client 버전 11.6 이상을 실행중인 경우이 값을 &lt;code&gt;2&lt;/code&gt; 로 설정하는 것이 좋습니다 . 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="37ed37458807a4f6c660395602176c3bf4c94475" translate="yes" xml:space="preserve">
          <source>The minimum size of the append-only file. Only files larger than this value are rewritten. Default value: &lt;code&gt;'16mb'&lt;/code&gt;.</source>
          <target state="translated">추가 전용 파일의 최소 크기입니다. 이 값보다 큰 파일 만 다시 작성됩니다. 기본값은 &lt;code&gt;'16mb'&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="b69e21b37d6504d224bb0037fdccbef14d479a86" translate="yes" xml:space="preserve">
          <source>The minimum version of the chef-client that is allowed to access the Chef server via the Chef server API. Default value: &lt;code&gt;10&lt;/code&gt;.</source>
          <target state="translated">Chef 서버 API를 통해 Chef 서버에 액세스 할 수있는 chef-client의 최소 버전입니다. 기본 값 : &lt;code&gt;10&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e2a68365f796a40172b62607a710151751c4ad9a" translate="yes" xml:space="preserve">
          <source>The minute at which the cron entry should run (0 - 59). Default value: &lt;code&gt;*&lt;/code&gt;.</source>
          <target state="translated">cron 항목이 실행되는 시간 (0-59). 기본값 : &lt;code&gt;*&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9a2a915c48286dc742278cbdefe7eb6eff5622d1" translate="yes" xml:space="preserve">
          <source>The month in the year on which a cron entry is to run (1 - 12). Default value: &lt;code&gt;*&lt;/code&gt;.</source>
          <target state="translated">cron 항목이 실행될 연도의 월 (1-12). 기본값 : &lt;code&gt;*&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5d89966c24b4844acb39162bdb20ddf583c335ce" translate="yes" xml:space="preserve">
          <source>The most common ways to interact with the Chef server using the Chef server API abstract the API from the user. That said, the Chef server API can be interacted with directly. The following sections describe a few of the ways that are available for doing that.</source>
          <target state="translated">Chef 서버 API를 사용하여 Chef 서버와 상호 작용하는 가장 일반적인 방법은 사용자의 API를 추상화하는 것입니다. 즉, Chef 서버 API는 직접 상호 작용할 수 있습니다. 다음 섹션에서는이를 수행 할 수있는 몇 가지 방법을 설명합니다.</target>
        </trans-unit>
        <trans-unit id="83b19dd74ef787409c5fd38f7b0522ec488aa88b" translate="yes" xml:space="preserve">
          <source>The mounted filesystem on the primary backend server is &lt;code&gt;ext4&lt;/code&gt;</source>
          <target state="translated">기본 백엔드 서버에서 마운트 된 파일 시스템은 &lt;code&gt;ext4&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="c21dc34e30e24f6de2de2f9cd17cbe41dbebcadf" translate="yes" xml:space="preserve">
          <source>The name (or IP address) of the LDAP server. The hostname of the LDAP or Active Directory server. Be sure the Chef server is able to resolve any host names. Default value: &lt;code&gt;ldap-server-host&lt;/code&gt;.</source>
          <target state="translated">LDAP 서버의 이름 (또는 IP 주소) LDAP 또는 Active Directory 서버의 호스트 이름입니다. Chef 서버가 호스트 이름을 확인할 수 있는지 확인하십시오. 기본 값 : &lt;code&gt;ldap-server-host&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e06874a574281b1a174596e53e86fabaa24502cf" translate="yes" xml:space="preserve">
          <source>The name must begin with a lower-case letter or digit, may only contain lower-case letters, digits, hyphens, and underscores, and must be between 1 and 255 characters. For example: &lt;code&gt;4thcoffee&lt;/code&gt;.</source>
          <target state="translated">이름은 소문자 또는 숫자로 시작해야하며 소문자, 숫자, 하이픈 및 밑줄 만 포함 할 수 있으며 1-255 자 사이 여야합니다. 예를 들어 &lt;code&gt;4thcoffee&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="cecd31f80a25d54f4aa5b28c3b0aca2d78fdab28" translate="yes" xml:space="preserve">
          <source>The name must begin with a lower-case letter or digit, may only contain lower-case letters, digits, hyphens, and underscores, and must be between 1 and 255 characters. For example: &lt;code&gt;chef&lt;/code&gt;</source>
          <target state="translated">이름은 소문자 또는 숫자로 시작해야하며 소문자, 숫자, 하이픈 및 밑줄 만 포함 할 수 있으며 1-255 자 사이 여야합니다. 예를 들어 : &lt;code&gt;chef&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1ab28b3fcc29b350e561ed33a52a03655cc6c80e" translate="yes" xml:space="preserve">
          <source>The name must begin with a lower-case letter or digit, may only contain lower-case letters, digits, hyphens, and underscores, and must be between 1 and 255 characters. For example: &lt;code&gt;chef&lt;/code&gt;.</source>
          <target state="translated">이름은 소문자 또는 숫자로 시작해야하며 소문자, 숫자, 하이픈 및 밑줄 만 포함 할 수 있으며 1-255 자 사이 여야합니다. 예를 들어 &lt;code&gt;chef&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="05b826979170c8b686ed49cf043dfc6f8b2a8112" translate="yes" xml:space="preserve">
          <source>The name of a file that is associated with a cookbook.</source>
          <target state="translated">요리 책과 관련된 파일의 이름입니다.</target>
        </trans-unit>
        <trans-unit id="4d4af0734fad29a5a98c6ba1691020d9712a4aef" translate="yes" xml:space="preserve">
          <source>The name of a file to be used with the &lt;code&gt;PUT&lt;/code&gt; or a &lt;code&gt;POST&lt;/code&gt; request.</source>
          <target state="translated">&lt;code&gt;PUT&lt;/code&gt; 또는 &lt;code&gt;POST&lt;/code&gt; 요청 과 함께 사용할 파일 이름입니다 .</target>
        </trans-unit>
        <trans-unit id="9be0a9ecfd04682db32ee25a7ee8ab7eb63b7b0c" translate="yes" xml:space="preserve">
          <source>The name of a node can be obtained from the &lt;code&gt;node_name&lt;/code&gt; attribute in the client.rb file or by allowing Ohai to collect this data during the chef-client run. When Ohai collects this data during the chef-client run, it uses the FQDN name of the node (which is always unique within an organization) as the name of the node.</source>
          <target state="translated">노드 이름은 client.rb 파일 의 &lt;code&gt;node_name&lt;/code&gt; 속성에서 얻 거나 chef-client 실행 중에 Ohai가이 데이터를 수집하도록 허용하여 얻을 수 있습니다 . Ohai는 chef-client 실행 중에이 데이터를 수집 할 때 노드의 FQDN 이름 (조직 내에서 항상 고유함)을 노드 이름으로 사용합니다.</target>
        </trans-unit>
        <trans-unit id="e9b847fdb1be0a54cfd5961344e3a9bb04fca4c4" translate="yes" xml:space="preserve">
          <source>The name of a node is required as part of the authentication process to the Chef server. The name of each node must be unique within an organization, but otherwise can be any string that matches the following regular expression:</source>
          <target state="translated">Chef 서버에 대한 인증 프로세스의 일부로 노드 이름이 필요합니다. 각 노드의 이름은 조직 내에서 고유해야하지만 그렇지 않으면 다음 정규식과 일치하는 문자열 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e6e91aa13b9e14e46175b97113ba314614aa420e" translate="yes" xml:space="preserve">
          <source>The name of a policy group that exists on the Chef server.</source>
          <target state="translated">Chef 서버에 존재하는 정책 그룹의 이름입니다.</target>
        </trans-unit>
        <trans-unit id="354593054a2c83578471d39446614c25fb84a15f" translate="yes" xml:space="preserve">
          <source>The name of a policy group that exists on the Chef server. &lt;code&gt;policy_group&lt;/code&gt; must also be specified.</source>
          <target state="translated">Chef 서버에 존재하는 정책 그룹의 이름입니다. &lt;code&gt;policy_group&lt;/code&gt; 도 지정해야합니다.</target>
        </trans-unit>
        <trans-unit id="dce9c012c622b18bef3551bcfad54ed0b3f87519" translate="yes" xml:space="preserve">
          <source>The name of a policy, as identified by the &lt;code&gt;name&lt;/code&gt; setting in a Policyfile.rb file.</source>
          <target state="translated">Policyfile.rb 파일 의 &lt;code&gt;name&lt;/code&gt; 설정 으로 식별되는 정책 이름 .</target>
        </trans-unit>
        <trans-unit id="340bf3c8fb05a45c9a4cace7d5cd3aa21970dd84" translate="yes" xml:space="preserve">
          <source>The name of a policy, as identified by the &lt;code&gt;name&lt;/code&gt; setting in a Policyfile.rb file. &lt;code&gt;policy_name&lt;/code&gt; must also be specified.</source>
          <target state="translated">Policyfile.rb 파일 의 &lt;code&gt;name&lt;/code&gt; 설정 으로 식별되는 정책 이름 . &lt;code&gt;policy_name&lt;/code&gt; 도 지정해야합니다.</target>
        </trans-unit>
        <trans-unit id="bf6c30ccd4fbb9cfd537c30ea555c02f8dfe21c9" translate="yes" xml:space="preserve">
          <source>The name of a specific item within a data bag.</source>
          <target state="translated">데이터 백 내 특정 항목의 이름입니다.</target>
        </trans-unit>
        <trans-unit id="7c17dce60bf771231085602ec7f4e7dcb33414b7" translate="yes" xml:space="preserve">
          <source>The name of a valid Windows PowerShell cmdlet. The name may only contain letter (a-z, A-Z), number (0-9), and underscore (_) characters and should start with a letter. The name may not be null or empty. This property may not be used in the same recipe as the &lt;code&gt;code&lt;/code&gt; property.</source>
          <target state="translated">유효한 Windows PowerShell cmdlet의 이름입니다. 이름은 문자 (az, AZ), 숫자 (0-9) 및 밑줄 (_) 만 포함 할 수 있으며 문자로 시작해야합니다. 이름은 null이거나 비어있을 수 없습니다. 이 속성은 &lt;code&gt;code&lt;/code&gt; 속성 과 동일한 레시피에서 사용할 수 없습니다 .</target>
        </trans-unit>
        <trans-unit id="cf381940061076a3820c06d80cfc69e8c09c1fb2" translate="yes" xml:space="preserve">
          <source>The name of the API client whose private key will be used to create the authorization header.</source>
          <target state="translated">권한 부여 헤더를 작성하는 데 개인 키를 사용할 API 클라이언트의 이름입니다.</target>
        </trans-unit>
        <trans-unit id="d96591607f8518ec990b7d822a60ab9e3a60d6d9" translate="yes" xml:space="preserve">
          <source>The name of the Amazon Simple Storage Service (S3) bucket. (This is configurable and may be pointed at external storage locations, such as Amazon EC2. Four settings require configuration when pointing at an external cookbook storage location: &lt;code&gt;bookshelf['vip']&lt;/code&gt;, for the endpoint used by the chef-client; &lt;code&gt;bookshelf['external_url']&lt;/code&gt;, for the endpoint used by the Chef server; &lt;code&gt;bookshelf['access_key_id']&lt;/code&gt;, for user access key; &lt;code&gt;bookshelf['secret_access_key']&lt;/code&gt;, for secret key; and &lt;code&gt;opscode_erchef['s3_bucket']&lt;/code&gt;, for the bucket name. Reconfigure the Chef server after changing these settings. Default value: &lt;code&gt;bookshelf&lt;/code&gt;.</source>
          <target state="translated">Amazon Simple Storage Service (S3) 버킷의 이름입니다. (이 구성되고 아마존 EC2 같은 외부 저장 위치에서 지적 될 수 개의 설정 외부 요리 책 저장 위치를 가리키는 구성이 필요합니다. &lt;code&gt;bookshelf['vip']&lt;/code&gt; , 요리사가 클라이언트에 의해 사용 된 엔드 포인트, &lt;code&gt;bookshelf['external_url']&lt;/code&gt; 상기 요리사 서버에서 사용되는 포인트 대, &lt;code&gt;bookshelf['access_key_id']&lt;/code&gt; ; 사용자 액세스 키, &lt;code&gt;bookshelf['secret_access_key']&lt;/code&gt; 와, 비밀 키, &lt;code&gt;opscode_erchef['s3_bucket']&lt;/code&gt; 버킷 이름. 이 설정을 변경 한 후 Chef 서버를 재구성하십시오 (기본값 : &lt;code&gt;bookshelf&lt;/code&gt; ) .</target>
        </trans-unit>
        <trans-unit id="22fb3632768cc6478b1a543c185039a6c7a282a5" translate="yes" xml:space="preserve">
          <source>The name of the Chef server organization. The name must begin with a lower-case letter or digit, may only contain lower-case letters, digits, hyphens, and underscores, and must be between 1 and 255 characters. For example: &lt;code&gt;chef&lt;/code&gt;. If this option is not specified, the &lt;code&gt;upgrade&lt;/code&gt; command will prompt for it.</source>
          <target state="translated">Chef 서버 조직의 이름입니다. 이름은 소문자 또는 숫자로 시작해야하며 소문자, 숫자, 하이픈 및 밑줄 만 포함 할 수 있으며 1-255 자 사이 여야합니다. 예를 들어 &lt;code&gt;chef&lt;/code&gt; 입니다. 이 옵션을 지정하지 않으면 &lt;code&gt;upgrade&lt;/code&gt; 명령이 프롬프트를 표시합니다.</target>
        </trans-unit>
        <trans-unit id="c9e33ea8441cf33e79a51f33f0750bae91576a4a" translate="yes" xml:space="preserve">
          <source>The name of the DSC resource. This value is case-insensitive and must be a symbol that matches the name of the DSC resource.</source>
          <target state="translated">DSC 리소스의 이름입니다. 이 값은 대소 문자를 구분하지 않으며 DSC 자원의 이름과 일치하는 기호 여야합니다.</target>
        </trans-unit>
        <trans-unit id="6bbc49cfc234ad78ff910cf1b667a581f763f3c7" translate="yes" xml:space="preserve">
          <source>The name of the Homebrew owner to be used by the chef-client when executing a command.</source>
          <target state="translated">명령을 실행할 때 chef-client가 사용하는 Homebrew 소유자의 이름입니다.</target>
        </trans-unit>
        <trans-unit id="80fd329d624a47c7fcd345cc1950ada3ded1d341" translate="yes" xml:space="preserve">
          <source>The name of the Nginx &lt;code&gt;stub_status&lt;/code&gt; endpoint used to access data generated by the Nginx &lt;code&gt;stub_status&lt;/code&gt; module. Default value: &lt;code&gt;&quot;/nginx_status&quot;&lt;/code&gt;.</source>
          <target state="translated">Nginx &lt;code&gt;stub_status&lt;/code&gt; 모듈에 의해 생성 된 데이터에 액세스하는 데 사용되는 Nginx &lt;code&gt;stub_status&lt;/code&gt; 엔드 포인트 의 이름입니다 . 초기 값 : &lt;code&gt;&quot;/nginx_status&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c1da10ec9b52abc7f31c8ee2cad249470cf560cf" translate="yes" xml:space="preserve">
          <source>The name of the RAID device. Default value: the &lt;code&gt;name&lt;/code&gt; of the resource block See &amp;ldquo;Syntax&amp;rdquo; section above for more information.</source>
          <target state="translated">RAID 장치의 이름입니다. 기본값 : 리소스 블록 &lt;code&gt;name&lt;/code&gt; 자세한 내용은 위의 &quot;구문&quot;섹션을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="fca3369fff35589b68ae226a559da687beba4dbd" translate="yes" xml:space="preserve">
          <source>The name of the Ruby block. Default value: the &lt;code&gt;name&lt;/code&gt; of the resource block See &amp;ldquo;Syntax&amp;rdquo; section above for more information.</source>
          <target state="translated">Ruby 블록의 이름입니다. 기본값 : 리소스 블록 &lt;code&gt;name&lt;/code&gt; 자세한 내용은 위의 &quot;구문&quot;섹션을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="7e602328a5a8f72fd016c9200897928e0c23a6e0" translate="yes" xml:space="preserve">
          <source>The name of the VRRP synchronization group. Default value: &lt;code&gt;'PC_GROUP'&lt;/code&gt;.</source>
          <target state="translated">VRRP 동기화 그룹의 이름입니다. 기본 값 : &lt;code&gt;'PC_GROUP'&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b55d7cf65b46b0b2deb8727f034dae4a9ad1a425" translate="yes" xml:space="preserve">
          <source>The name of the VRRP synchronization instance. Default value: &lt;code&gt;'PC_VI'&lt;/code&gt;.</source>
          <target state="translated">VRRP 동기화 인스턴스의 이름입니다. 기본 값 : &lt;code&gt;'PC_VI'&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4a8aa7734e57413d66e0a6c3eb9c8522dd530d62" translate="yes" xml:space="preserve">
          <source>The name of the admin client that is passed as part of a the command itself.</source>
          <target state="translated">명령 자체의 일부로 전달되는 관리 클라이언트의 이름입니다.</target>
        </trans-unit>
        <trans-unit id="395067eb93be2cadc2398200e1a04c40f311bccb" translate="yes" xml:space="preserve">
          <source>The name of the chef-validator key that is used by the chef-client to access the Chef server during the initial chef-client run.</source>
          <target state="translated">초기 요리사 클라이언트 실행 중에 chef 클라이언트가 Chef 서버에 액세스하기 위해 사용하는 chef 유효성 검사기 키의 이름입니다.</target>
        </trans-unit>
        <trans-unit id="49f11aa3f65d247b732a051e6ba888f50589d691" translate="yes" xml:space="preserve">
          <source>The name of the chef-validator key that is used by the chef-client to access the Chef server during the initial chef-client run. For example:</source>
          <target state="translated">초기 요리사 클라이언트 실행 중에 chef 클라이언트가 Chef 서버에 액세스하기 위해 사용하는 chef 유효성 검사기 키의 이름입니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="ed1a5465498d28ae12825dcd36484749277bcc6f" translate="yes" xml:space="preserve">
          <source>The name of the client that you wish to add a key for.</source>
          <target state="translated">키를 추가하려는 클라이언트의 이름입니다.</target>
        </trans-unit>
        <trans-unit id="85c65e0dbd6903a50209e362ec831e6419bcd947" translate="yes" xml:space="preserve">
          <source>The name of the client, typically the name of the admin client.</source>
          <target state="translated">클라이언트 이름, 일반적으로 관리 클라이언트 이름</target>
        </trans-unit>
        <trans-unit id="3ef2701e9d788af4aa269d872c3d12e4a359cc83" translate="yes" xml:space="preserve">
          <source>The name of the client.</source>
          <target state="translated">클라이언트의 이름</target>
        </trans-unit>
        <trans-unit id="b9e8d98f1470a7bc2e585550f1f8478b5f148b32" translate="yes" xml:space="preserve">
          <source>The name of the command to be executed.</source>
          <target state="translated">실행할 명령의 이름입니다.</target>
        </trans-unit>
        <trans-unit id="5117a532de57db4a4749f49fc29df9d4c80d316d" translate="yes" xml:space="preserve">
          <source>The name of the command to be executed. Default value: the &lt;code&gt;name&lt;/code&gt; of the resource block See &amp;ldquo;Syntax&amp;rdquo; section above for more information.</source>
          <target state="translated">실행할 명령의 이름입니다. 기본값 : 리소스 블록 &lt;code&gt;name&lt;/code&gt; 자세한 내용은 위의 &quot;구문&quot;섹션을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="9d5c8d2e0b68130bd8c51c7310b1b68ab55e052f" translate="yes" xml:space="preserve">
          <source>The name of the cookbook in which the source files are located.</source>
          <target state="translated">소스 파일이있는 요리 책의 이름.</target>
        </trans-unit>
        <trans-unit id="069c4525eb9e370107130c0150cc0acfe039e4ec" translate="yes" xml:space="preserve">
          <source>The name of the copyright holder. This option places a copyright notice that contains the name of the copyright holder in each of the pre-created files. If this option is not specified, a copyright name of &amp;ldquo;COMPANY_NAME&amp;rdquo; is used instead; it can easily be modified later.</source>
          <target state="translated">저작권자의 이름입니다. 이 옵션은 사전 작성된 각 파일에 저작권 소유자의 이름이 포함 된 저작권 표시를합니다. 이 옵션을 지정하지 않으면 저작권 이름&amp;ldquo;COMPANY_NAME&amp;rdquo;이 대신 사용됩니다. 나중에 쉽게 수정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="083e2602b13bd1aebd5606f20c4d323fe55375ca" translate="yes" xml:space="preserve">
          <source>The name of the database. Default value: &lt;code&gt;oc_id&lt;/code&gt;.</source>
          <target state="translated">데이터베이스 이름 기본값 : &lt;code&gt;oc_id&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cba3def3e4eff28eb35ccb3df837228678e08cab" translate="yes" xml:space="preserve">
          <source>The name of the default branch. This defaults to the master branch.</source>
          <target state="translated">기본 지점의 이름입니다. 기본적으로 마스터 브랜치입니다.</target>
        </trans-unit>
        <trans-unit id="0d883eda23d1d2f754e3cf320a67bc524e0cc36d" translate="yes" xml:space="preserve">
          <source>The name of the environment.</source>
          <target state="translated">환경의 이름</target>
        </trans-unit>
        <trans-unit id="0129141d08c7373557e8006e4d3c84e12f32ecc9" translate="yes" xml:space="preserve">
          <source>The name of the environment. When this option is added to a command, the command will run only against the named environment.</source>
          <target state="translated">환경의 이름 이 옵션이 명령에 추가되면 명령은 명명 된 환경에 대해서만 실행됩니다.</target>
        </trans-unit>
        <trans-unit id="a2019b5e2852aceffd34c3b137c6a78c51d48a1b" translate="yes" xml:space="preserve">
          <source>The name of the environment. When this option is added to a command, the command will run only against the named environment. This option is ignored during search queries made using the &lt;code&gt;knife search&lt;/code&gt; subcommand.</source>
          <target state="translated">환경의 이름 이 옵션이 명령에 추가되면 명령은 명명 된 환경에 대해서만 실행됩니다. 이 옵션은 &lt;code&gt;knife search&lt;/code&gt; 부속 명령을 사용하여 검색 한 쿼리 중에는 무시됩니다 .</target>
        </trans-unit>
        <trans-unit id="ce71aae1a3e0059b24624bfdf027bf359f5dba05" translate="yes" xml:space="preserve">
          <source>The name of the exchange to which Chef actions publishes actions data. Default value: &lt;code&gt;'actions'&lt;/code&gt;.</source>
          <target state="translated">Chef 조치가 조치 데이터를 공개하는 교환의 이름입니다. 기본 값 : &lt;code&gt;'actions'&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="36fd993ffdcd5adbc2d1a321c71479719dbbf2b6" translate="yes" xml:space="preserve">
          <source>The name of the file in &lt;code&gt;COOKBOOK_NAME/files/default&lt;/code&gt; or the path to a file located in &lt;code&gt;COOKBOOK_NAME/files&lt;/code&gt;. The path must include the file name and its extension. Can be used to distribute specific files to specific platforms. See &amp;ldquo;File Specificity&amp;rdquo; below for more information. See &amp;ldquo;Syntax&amp;rdquo; section above for more information.</source>
          <target state="translated">에있는 파일의 이름 &lt;code&gt;COOKBOOK_NAME/files/default&lt;/code&gt; 또는에있는 파일의 경로 &lt;code&gt;COOKBOOK_NAME/files&lt;/code&gt; . 경로는 파일 이름과 확장자를 포함해야합니다. 특정 파일을 특정 플랫폼에 배포하는 데 사용할 수 있습니다. 자세한 내용은 아래의&amp;ldquo;파일 특정 성&amp;rdquo;을 참조하십시오. 자세한 내용은 위의 &quot;구문&quot;섹션을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="1b88f62f359096029d3c25eefdb29f0da8ee7bbe" translate="yes" xml:space="preserve">
          <source>The name of the group that owns a process. This is required when starting any executable as a daemon.</source>
          <target state="translated">프로세스를 소유 한 그룹의 이름입니다. 실행 파일을 데몬으로 시작할 때 필요합니다.</target>
        </trans-unit>
        <trans-unit id="df54caa754a9c645a36cac7584c59116d15cd930" translate="yes" xml:space="preserve">
          <source>The name of the group. Default value: the &lt;code&gt;name&lt;/code&gt; of the resource block See &amp;ldquo;Syntax&amp;rdquo; section above for more information.</source>
          <target state="translated">그룹의 이름 기본값 : 리소스 블록 &lt;code&gt;name&lt;/code&gt; 자세한 내용은 위의 &quot;구문&quot;섹션을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="2036c28b04d6da83e99074b60be276518585e301" translate="yes" xml:space="preserve">
          <source>The name of the handler class. This can be module name-spaced.</source>
          <target state="translated">핸들러 클래스의 이름입니다. 이것은 모듈 이름 간격 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="337bb057b45aa6e149071403f38a7e74d6e3493f" translate="yes" xml:space="preserve">
          <source>The name of the index to be queried: &lt;code&gt;client&lt;/code&gt;, &lt;code&gt;environment&lt;/code&gt;, &lt;code&gt;node&lt;/code&gt;, &lt;code&gt;role&lt;/code&gt;, or &lt;code&gt;DATA_BAG_NAME&lt;/code&gt;. Default index: &lt;code&gt;node&lt;/code&gt;.</source>
          <target state="translated">인덱스의 이름은 조회 수 : &lt;code&gt;client&lt;/code&gt; , &lt;code&gt;environment&lt;/code&gt; , &lt;code&gt;node&lt;/code&gt; , &lt;code&gt;role&lt;/code&gt; , 또는 &lt;code&gt;DATA_BAG_NAME&lt;/code&gt; 을 . 기본 색인 : &lt;code&gt;node&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="90a65cc266e9e410bc96659068a953ac314d6568" translate="yes" xml:space="preserve">
          <source>The name of the key that is to be created, deleted, or modified. Default value: the &lt;code&gt;name&lt;/code&gt; of the resource block See &amp;ldquo;Syntax&amp;rdquo; section above for more information.</source>
          <target state="translated">작성, 삭제 또는 수정할 키의 이름입니다. 기본값 : 리소스 블록 &lt;code&gt;name&lt;/code&gt; 자세한 내용은 위의 &quot;구문&quot;섹션을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="a1d3458ecdedcc4c70e1a59c24bff2bef5d85d9b" translate="yes" xml:space="preserve">
          <source>The name of the link. Default value: the &lt;code&gt;name&lt;/code&gt; of the resource block See &amp;ldquo;Syntax&amp;rdquo; section above for more information.</source>
          <target state="translated">링크의 이름 기본값 : 리소스 블록 &lt;code&gt;name&lt;/code&gt; 자세한 내용은 위의 &quot;구문&quot;섹션을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="63b602e08cab1281dc2780fce36966da7d9f0f4d" translate="yes" xml:space="preserve">
          <source>The name of the module from which a DSC resource originates. If this property is not specified, it will be inferred.</source>
          <target state="translated">DSC 리소스가 시작된 모듈의 이름입니다. 이 속성을 지정하지 않으면 추론됩니다.</target>
        </trans-unit>
        <trans-unit id="045643cb342912e3d066e6c71398cbb7c278f691" translate="yes" xml:space="preserve">
          <source>The name of the module.</source>
          <target state="translated">모듈의 이름</target>
        </trans-unit>
        <trans-unit id="4a12356f5961df7088a91c10ab996972ff31dddb" translate="yes" xml:space="preserve">
          <source>The name of the node.</source>
          <target state="translated">노드의 이름입니다.</target>
        </trans-unit>
        <trans-unit id="686f415db5f51a74d60012298b8259b11493d611" translate="yes" xml:space="preserve">
          <source>The name of the node. Default value: &lt;code&gt;'rabbit@localhost'&lt;/code&gt;.</source>
          <target state="translated">노드의 이름입니다. 기본값은 &lt;code&gt;'rabbit@localhost'&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="c0db9fb1e0df235ab6ebc6f8dd65426c95eb8782" translate="yes" xml:space="preserve">
          <source>The name of the node. Determines which configuration should be applied and sets the &lt;code&gt;client_name&lt;/code&gt;, which is the name used when authenticating to a Chef server. The default value is the FQDN of the chef-client, as detected by Ohai. In general, Chef recommends that you leave this setting blank and let Ohai assign the FQDN of the node as the &lt;code&gt;node_name&lt;/code&gt; during each chef-client run.</source>
          <target state="translated">노드의 이름입니다. 적용 할 구성을 판별 하고 Chef 서버에 인증 할 때 사용되는 이름 인 &lt;code&gt;client_name&lt;/code&gt; 을 설정하십시오 . 기본값은 Ohai가 감지 한 셰프 클라이언트의 FQDN입니다. 일반적으로 Chef는이 설정을 비워두고 각 Chef-Client 실행 중에 Ohai가 노드의 FQDN을 &lt;code&gt;node_name&lt;/code&gt; 으로 지정하도록 권장 합니다.</target>
        </trans-unit>
        <trans-unit id="297de83411baa55e89173f191baf1a55927c7867" translate="yes" xml:space="preserve">
          <source>The name of the node. This may be a username with permission to authenticate to the Chef server or it may be the name of the machine from which knife is run. For example:</source>
          <target state="translated">노드의 이름입니다. 이것은 Chef 서버를 인증 할 수있는 권한이있는 사용자 이름이거나 나이프가 실행되는 머신의 이름 일 수 있습니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="86bac8080c3489c312da1f75d7faf56752a292da" translate="yes" xml:space="preserve">
          <source>The name of the package. Default value: the &lt;code&gt;name&lt;/code&gt; of the resource block See &amp;ldquo;Syntax&amp;rdquo; section above for more information.</source>
          <target state="translated">패키지 이름 기본값 : 리소스 블록 &lt;code&gt;name&lt;/code&gt; 자세한 내용은 위의 &quot;구문&quot;섹션을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="0ede5f8ccec7ba489ee7abc8847508c566f203d0" translate="yes" xml:space="preserve">
          <source>The name of the person responsible for maintaining a cookbook, either an individual or an organization.</source>
          <target state="translated">개인 또는 조직의 요리 책을 관리하는 담당자의 이름입니다.</target>
        </trans-unit>
        <trans-unit id="2fdcfaa3ac00ae286dab2a01166e210e5b29c002" translate="yes" xml:space="preserve">
          <source>The name of the privileged user that manages requests to the Chef server. Default value: &lt;code&gt;'pivotal'&lt;/code&gt;.</source>
          <target state="translated">Chef 서버에 대한 요청을 관리하는 권한있는 사용자의 이름입니다. 기본값은 &lt;code&gt;'pivotal'&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="faa5bc9f90bff28965050ade1ea98516a94a1cf2" translate="yes" xml:space="preserve">
          <source>The name of the public key.</source>
          <target state="translated">공개 키의 이름</target>
        </trans-unit>
        <trans-unit id="5f7c16dc6453bc84e8e1e33d0ed0f54dfbbe1020" translate="yes" xml:space="preserve">
          <source>The name of the service. Default value: the &lt;code&gt;name&lt;/code&gt; of the resource block See &amp;ldquo;Syntax&amp;rdquo; section above for more information.</source>
          <target state="translated">서비스 이름 기본값 : 리소스 블록 &lt;code&gt;name&lt;/code&gt; 자세한 내용은 위의 &quot;구문&quot;섹션을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="ac477a5d9653be140d9e385321c7c7458f9e77c0" translate="yes" xml:space="preserve">
          <source>The name of the source control management provider. Default value: &lt;code&gt;Chef::Provider::Git&lt;/code&gt;. Optional values: &lt;code&gt;Chef::Provider::Subversion&lt;/code&gt;.</source>
          <target state="translated">소스 제어 관리 제공자의 이름입니다. 기본 값 : &lt;code&gt;Chef::Provider::Git&lt;/code&gt; . 선택적 값 : &lt;code&gt;Chef::Provider::Subversion&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b8a705e380fd4576f4c9a3d74cdddc23a72e0278" translate="yes" xml:space="preserve">
          <source>The name of the sub-directory in which the pristine copy of an application&amp;rsquo;s source is kept. Default value: &lt;code&gt;cached-copy&lt;/code&gt;.</source>
          <target state="translated">응용 프로그램 소스의 원래 복사본이 유지되는 하위 디렉토리의 이름입니다. 기본 값 : &lt;code&gt;cached-copy&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3d94d3f31c623b6732f6e95b658f4425bad852a0" translate="yes" xml:space="preserve">
          <source>The name of the user and/or chef-client which made the request (&lt;code&gt;pivotal&lt;/code&gt;)</source>
          <target state="translated">요청한 사용자 및 / 또는 요리사 클라이언트의 이름 ( &lt;code&gt;pivotal&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="932bb9c38acab6744bb3601f6984937ff0b90dfc" translate="yes" xml:space="preserve">
          <source>The name of the user. Default value: the &lt;code&gt;name&lt;/code&gt; of the resource block See &amp;ldquo;Syntax&amp;rdquo; section above for more information.</source>
          <target state="translated">사용자 이름 기본값 : 리소스 블록 &lt;code&gt;name&lt;/code&gt; 자세한 내용은 위의 &quot;구문&quot;섹션을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="4b4ce6caf0fb56e8994efb30bdd1084236791dee" translate="yes" xml:space="preserve">
          <source>The name of the validation client, typically a client named chef-validator.</source>
          <target state="translated">유효성 검사 클라이언트의 이름, 일반적으로 chef-validator라는 클라이언트입니다.</target>
        </trans-unit>
        <trans-unit id="2d732a142941af9b24756a95f0949ba2870264db" translate="yes" xml:space="preserve">
          <source>The name of your company. Default value: &lt;code&gt;YouCorp&lt;/code&gt;.</source>
          <target state="translated">회사 이름 기본 값 : &lt;code&gt;YouCorp&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7e14a8b6f51f79b81dbee137ea2bd5a2e455792a" translate="yes" xml:space="preserve">
          <source>The named control group has been processed.</source>
          <target state="translated">명명 된 제어 그룹이 처리되었습니다.</target>
        </trans-unit>
        <trans-unit id="e5f8157e70bf8420d39d03eee3a1b735275b9eb8" translate="yes" xml:space="preserve">
          <source>The named control group is being processed.</source>
          <target state="translated">명명 된 제어 그룹이 처리 중입니다.</target>
        </trans-unit>
        <trans-unit id="11d32ad2cef8aa51ccaf9a10ad17a2b7aa2dee9b" translate="yes" xml:space="preserve">
          <source>The named control group&amp;rsquo;s processing has failed.</source>
          <target state="translated">명명 된 제어 그룹의 처리에 실패했습니다.</target>
        </trans-unit>
        <trans-unit id="3246c2d6c234db55a97ebd6bfed7627f8bdbf78e" translate="yes" xml:space="preserve">
          <source>The named handler was processed.</source>
          <target state="translated">명명 된 핸들러가 처리되었습니다.</target>
        </trans-unit>
        <trans-unit id="0072a5190dd82566fb258e2658f619e3de54a658" translate="yes" xml:space="preserve">
          <source>The naming of folders within cookbook directories must literally match the host notation used for file specificity matching. For example, if a host is named &lt;code&gt;foo.example.com&lt;/code&gt;, the folder must be named &lt;code&gt;host-foo.example.com&lt;/code&gt;.</source>
          <target state="translated">요리 책 디렉토리 내의 폴더 이름은 파일 고유성 일치에 사용되는 호스트 표기법과 문자 그대로 일치해야합니다. 예를 들어 호스트 이름이 &lt;code&gt;foo.example.com&lt;/code&gt; 인 경우 폴더 이름은 &lt;code&gt;host-foo.example.com&lt;/code&gt; 이어야합니다 .</target>
        </trans-unit>
        <trans-unit id="2dadd1a4c17bf0887832c13683bacd4df217e3c7" translate="yes" xml:space="preserve">
          <source>The naming of folders within cookbook directories must literally match the host notation used for template specificity matching. For example, if a host is named &lt;code&gt;foo.example.com&lt;/code&gt;, then the folder must be named &lt;code&gt;host-foo.example.com&lt;/code&gt;.</source>
          <target state="translated">요리 책 디렉토리 내의 폴더 이름은 문자 그대로 템플릿 특이성 일치에 사용되는 호스트 표기법과 일치해야합니다. 예를 들어 호스트 이름이 &lt;code&gt;foo.example.com&lt;/code&gt; 이면 폴더 이름은 &lt;code&gt;host-foo.example.com&lt;/code&gt; 이어야합니다 .</target>
        </trans-unit>
        <trans-unit id="87f116d7be98faa63541a0a40e77beac3a19b151" translate="yes" xml:space="preserve">
          <source>The network interface to be configured.</source>
          <target state="translated">구성 할 네트워크 인터페이스.</target>
        </trans-unit>
        <trans-unit id="48f3019692926449f817917e1660cee69916b1dc" translate="yes" xml:space="preserve">
          <source>The network interface to which the route applies.</source>
          <target state="translated">경로가 적용되는 네트워크 인터페이스입니다.</target>
        </trans-unit>
        <trans-unit id="9e35abb27375d46d740a3ed687f7e2a4fc33c01f" translate="yes" xml:space="preserve">
          <source>The node is a distributed Erlang node. Default value: &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">노드는 분산 Erlang 노드입니다. 기본 값 : &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="319120d33ea4c94f9cb4894b865304f581b6787b" translate="yes" xml:space="preserve">
          <source>The node object that was saved to the Chef server at the end of the previous chef-client run</source>
          <target state="translated">이전 chef-client 실행이 끝날 때 Chef 서버에 저장된 노드 오브젝트</target>
        </trans-unit>
        <trans-unit id="8433442ae4840ea55eb2e36c7b0821cd5b6bb14a" translate="yes" xml:space="preserve">
          <source>The node on which the chef-client run occurred.</source>
          <target state="translated">chef-client가 실행 된 노드입니다.</target>
        </trans-unit>
        <trans-unit id="ecb234531eea13b7539d6b7408842b5a70e90b1a" translate="yes" xml:space="preserve">
          <source>The number of Ruby processes for which cookbook dependency problems are unsolved. Use the &lt;code&gt;pgrep -fl depselector&lt;/code&gt; command to verify the number of depsolver workers that are running. If you are seeing 503 service unavailable errors, increase this value. Default value: &lt;code&gt;'5'&lt;/code&gt;.</source>
          <target state="translated">요리 책 종속성 문제가 해결되지 않은 Ruby 프로세스 수입니다. 사용 &lt;code&gt;pgrep -fl depselector&lt;/code&gt; 실행하는 depsolver 근로자의 수를 확인하는 명령을 사용합니다. 503 서비스 사용 불가능 오류가 표시되면이 값을 늘리십시오. 기본 값 : &lt;code&gt;'5'&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1df32eef4554b92a53d650c413ee337cdb04de44" translate="yes" xml:space="preserve">
          <source>The number of allowed concurrent connections.</source>
          <target state="translated">허용 된 동시 연결 수</target>
        </trans-unit>
        <trans-unit id="f6968d243b6e29ba0be360748f04228cbc109554" translate="yes" xml:space="preserve">
          <source>The number of allowed concurrent connections. Default: &lt;code&gt;10&lt;/code&gt;.</source>
          <target state="translated">허용 된 동시 연결 수 기본값 : &lt;code&gt;10&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6c1994fe1ba30da557781147708ecfe717707ffc" translate="yes" xml:space="preserve">
          <source>The number of allowed worker processes. Default value: &lt;code&gt;2&lt;/code&gt;.</source>
          <target state="translated">허용되는 작업자 프로세스 수 기본 값 : &lt;code&gt;2&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3fd8cf68936e5836305148661cc50069342c3950" translate="yes" xml:space="preserve">
          <source>The number of allowed worker processes. Default value: &lt;code&gt;node['cpu.total'].to_i&lt;/code&gt;.</source>
          <target state="translated">허용되는 작업자 프로세스 수 기본값 : &lt;code&gt;node['cpu.total'].to_i&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3e26e99e369171dfd084cadbdbedb62ada03c2da" translate="yes" xml:space="preserve">
          <source>The number of allowed worker processes. The &lt;strong&gt;opscode-expander&lt;/strong&gt; service runs on the back-end and feeds data to the &lt;strong&gt;opscode-solr&lt;/strong&gt; service, which creates and maintains search data used by the Chef server. Additional memory may be required by these worker processes depending on the frequency and volume of chef-client runs across the organization, but only if the back-end machines have available CPU and RAM. Default value: &lt;code&gt;2&lt;/code&gt;.</source>
          <target state="translated">허용되는 작업자 프로세스 수 &lt;strong&gt;opscode - 확장기&lt;/strong&gt; 받는 백 엔드 및 피드 데이터에 서비스가 실행 &lt;strong&gt;opscode-SOLR&lt;/strong&gt; 만들고 요리사 서버가 사용하는 검색 데이터를 유지하는 서비스. 백엔드 시스템에 사용 가능한 CPU 및 RAM이있는 경우에만 조직 전체에서 실행되는 요리사 클라이언트의 빈도 및 볼륨에 따라 이러한 작업자 프로세스에 추가 메모리가 필요할 수 있습니다. 기본 값 : &lt;code&gt;2&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8a5cde344c01b3d10628a5d2418f2d85c4251b6c" translate="yes" xml:space="preserve">
          <source>The number of allowed worker processes. This value should be increased if requests made to the &lt;strong&gt;opscode-account&lt;/strong&gt; service are timing out, but only if the front-end machines have available CPU and RAM. Default value: &lt;code&gt;4&lt;/code&gt;.</source>
          <target state="translated">허용되는 작업자 프로세스 수 &lt;strong&gt;opscode 계정&lt;/strong&gt; 서비스 에 대한 요청 이 시간 초과되는 경우 프런트 엔드 시스템에 사용 가능한 CPU 및 RAM이있는 경우에만 이 값을 늘려야합니다 . 초기 값 : &lt;code&gt;4&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ef3e3022bac3b604fe51f1de192a32be3c733e51" translate="yes" xml:space="preserve">
          <source>The number of allowed worker processes. Use with &lt;code&gt;nginx['worker_connections']&lt;/code&gt; to determine the maximum number of allowed clients. Default value: &lt;code&gt;node['cpu']['total'].to_i&lt;/code&gt;.</source>
          <target state="translated">허용되는 작업자 프로세스 수 허용되는 최대 클라이언트 수를 결정하려면 &lt;code&gt;nginx['worker_connections']&lt;/code&gt; 와 함께 사용하십시오 . 디폴트 값 : &lt;code&gt;node['cpu']['total'].to_i&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bcf258203e53cd0413fb8da761115ae20689b0ad" translate="yes" xml:space="preserve">
          <source>The number of backup copies to keep for files in the directory. Default value: &lt;code&gt;5&lt;/code&gt;.</source>
          <target state="translated">디렉토리에 파일을 보관할 백업 사본 수입니다. 초기 값 : &lt;code&gt;5&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1ce39080e16c0891b1c4424462f902ccfe429551" translate="yes" xml:space="preserve">
          <source>The number of backups to be kept in &lt;code&gt;/var/chef/backup&lt;/code&gt; (for UNIX- and Linux-based platforms) or &lt;code&gt;C:/chef/backup&lt;/code&gt; (for the Microsoft Windows platform). Set to &lt;code&gt;false&lt;/code&gt; to prevent backups from being kept. Default value: &lt;code&gt;5&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;/var/chef/backup&lt;/code&gt; (UNIX 및 Linux 기반 플랫폼의 경우) 또는 &lt;code&gt;C:/chef/backup&lt;/code&gt; (Microsoft Windows 플랫폼의 경우)에 보관할 백업 수입니다 . 백업이 유지되지 않도록 하려면 &lt;code&gt;false&lt;/code&gt; 로 설정하십시오 . 초기 값 : &lt;code&gt;5&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="443e279b6962001770ad9f3ed1ae6fe4e8a3a705" translate="yes" xml:space="preserve">
          <source>The number of backups to be kept in &lt;code&gt;/var/chef/backup&lt;/code&gt;. Set to &lt;code&gt;false&lt;/code&gt; to prevent backups from being kept.</source>
          <target state="translated">&lt;code&gt;/var/chef/backup&lt;/code&gt; 에 보관할 백업 수 . 백업이 유지되지 않도록 하려면 &lt;code&gt;false&lt;/code&gt; 로 설정하십시오 .</target>
        </trans-unit>
        <trans-unit id="5460ee7b26820021e9241819cc11a279b36ac4c8" translate="yes" xml:space="preserve">
          <source>The number of bytes in the HTTP response body.</source>
          <target state="translated">HTTP 응답 본문의 바이트 수입니다.</target>
        </trans-unit>
        <trans-unit id="fa6cc6ad1c5102cb9578f22991975a84a45dd2fb" translate="yes" xml:space="preserve">
          <source>The number of cookbook versions to include in the response, where &lt;code&gt;n&lt;/code&gt; is the number of cookbook versions. For example: &lt;code&gt;num_versions=3&lt;/code&gt; returns the three latest versions, in descending order (newest to oldest). Use &lt;code&gt;num_versions=all&lt;/code&gt; to return all cookbook versions. If &lt;code&gt;num_versions&lt;/code&gt; is not specified, a single cookbook version is returned. &lt;code&gt;0&lt;/code&gt; is an invalid input (an empty array for the versions of each cookbook is returned).</source>
          <target state="translated">응답에 포함 할 요리 책 버전의 수입니다. 여기서 &lt;code&gt;n&lt;/code&gt; 은 요리 책 버전의 수입니다. 예를 들어 다음과 같습니다. &lt;code&gt;num_versions=3&lt;/code&gt; 은 가장 최신부터 세 개의 최신 버전을 내림차순으로 반환합니다. 모든 요리 책 버전을 반환 하려면 &lt;code&gt;num_versions=all&lt;/code&gt; 을 사용하십시오 . 경우 &lt;code&gt;num_versions&lt;/code&gt; 지정되지 않은 하나의 요리 책 버전이 반환됩니다. &lt;code&gt;0&lt;/code&gt; 은 유효하지 않은 입력입니다 (각 요리 책 버전의 빈 배열이 반환됩니다).</target>
        </trans-unit>
        <trans-unit id="213519d92c3e6cfd55d110722e439c5edb4cb28a" translate="yes" xml:space="preserve">
          <source>The number of cookbooks per organization, across all versions, on the Chef server is under 500. (Multiple organizations with fewer than 500 cookbooks each, that still add up to a total of more than 500 cookbooks server-wide, is fine.)</source>
          <target state="translated">Chef 서버의 모든 버전에서 조직 당 요리 책의 수는 500 개 미만입니다. 각 요리 책이 500 개 미만인 여러 조직이 여전히 서버 전체에 총 500 개가 넘는 요리 책을 추가해도 좋습니다.</target>
        </trans-unit>
        <trans-unit id="83507aabf676eb37762a0f900d9b3459289721f1" translate="yes" xml:space="preserve">
          <source>The number of databases. Default value: &lt;code&gt;'16'&lt;/code&gt;.</source>
          <target state="translated">데이터베이스 수 기본 값 : &lt;code&gt;'16'&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e76dd980948df5ae497326122952baa76e7a460f" translate="yes" xml:space="preserve">
          <source>The number of helper threads available for parallel cookbook synchronization. Increasing this value &lt;strong&gt;may&lt;/strong&gt; increase the frequency of gateway errors from the Chef server (503 and 504 errors). Decreasing this number reduces the frequency of gateway errors, if present. Default value: &lt;code&gt;10&lt;/code&gt;.</source>
          <target state="translated">병렬 요리 책 동기화에 사용 가능한 헬퍼 스레드 수입니다. 이 값을 늘리면 Chef 서버의 게이트웨이 오류 빈도 &lt;strong&gt;가&lt;/strong&gt; 증가 &lt;strong&gt;할 수 있습니다&lt;/strong&gt; (503 및 504 오류). 이 수를 줄이면 게이트웨이 오류 빈도가 줄어 듭니다. 기본 값 : &lt;code&gt;10&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a16eb312db3e0cb45c4880bfbbbca6aef1f0576c" translate="yes" xml:space="preserve">
          <source>The number of licensed nodes. Default value: &lt;code&gt;25&lt;/code&gt;.</source>
          <target state="translated">라이센스가 부여 된 노드 수 기본 값 : &lt;code&gt;25&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b31d28835705989c9ed39b6e79db836606b86b17" translate="yes" xml:space="preserve">
          <source>The number of log files to keep. Default value: &lt;code&gt;10&lt;/code&gt;.</source>
          <target state="translated">보관할 로그 파일 수입니다. 기본 값 : &lt;code&gt;10&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0843fbbf4a5410a5d20662499391c697532ab5b3" translate="yes" xml:space="preserve">
          <source>The number of nodes that may be deserialized. Currently only applies to the &lt;code&gt;/search&lt;/code&gt; endpoint in the Chef server API. The default value is the recommended value. Default value: &lt;code&gt;5&lt;/code&gt;.</source>
          <target state="translated">직렬화 해제 할 수있는 노드 수입니다. 현재 Chef 서버 API 의 &lt;code&gt;/search&lt;/code&gt; 엔드 포인트 에만 적용됩니다 . 기본값은 권장 값입니다. 초기 값 : &lt;code&gt;5&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8431cd0323c5161d16e3e9ad1cdedbea9a87b7a3" translate="yes" xml:space="preserve">
          <source>The number of open connections to PostgreSQL that are maintained by the service. Default value: &lt;code&gt;'20'&lt;/code&gt;.</source>
          <target state="translated">서비스에서 유지 관리하는 PostgreSQL에 대한 열린 연결 수입니다. 기본 값 : &lt;code&gt;'20'&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="142f47c2b975e3357f07738d28cd077728d669c3" translate="yes" xml:space="preserve">
          <source>The number of open connections to PostgreSQL that are maintained by the service. Default value: &lt;code&gt;'5'&lt;/code&gt;.</source>
          <target state="translated">서비스에서 유지 관리하는 PostgreSQL에 대한 열린 연결 수입니다. 기본 값 : &lt;code&gt;'5'&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="69ff2450b8adeb7dce113ef8e2bb55fa855c5184" translate="yes" xml:space="preserve">
          <source>The number of open connections to PostgreSQL that are maintained by the service. Default value: &lt;code&gt;20&lt;/code&gt;.</source>
          <target state="translated">서비스에서 유지 관리하는 PostgreSQL에 대한 열린 연결 수입니다. 기본 값 : &lt;code&gt;20&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8423f610b93fb1edd7d6ed44ba3b4e04393a826d" translate="yes" xml:space="preserve">
          <source>The number of open connections to PostgreSQL that are maintained by the service. If failures indicate that the &lt;strong&gt;opscode-erchef&lt;/strong&gt; service ran out of connections, try increasing the &lt;code&gt;postgresql['max_connections']&lt;/code&gt; setting. If failures persist, then increase this value (in small increments) and also increase the value for &lt;code&gt;postgresql['max_connections']&lt;/code&gt;. Default value: &lt;code&gt;20&lt;/code&gt;.</source>
          <target state="translated">서비스에서 유지 관리하는 PostgreSQL에 대한 열린 연결 수입니다. 실패로 &lt;strong&gt;opscode-erchef&lt;/strong&gt; 서비스에 연결 이 &lt;strong&gt;부족한&lt;/strong&gt; 것으로 표시 되면 &lt;code&gt;postgresql['max_connections']&lt;/code&gt; 설정을 늘리십시오 . 실패가 지속되면이 값을 조금씩 늘리고 &lt;code&gt;postgresql['max_connections']&lt;/code&gt; 의 값을 늘리십시오 . 기본 값 : &lt;code&gt;20&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9b2b87fbeb112d791e159631a69d73c93ba72c44" translate="yes" xml:space="preserve">
          <source>The number of open connections to PostgreSQL that are maintained by the service. This value should be increased if failures indicate that the &lt;strong&gt;oc_bifrost&lt;/strong&gt; service ran out of connections. This value should be tuned in conjunction with the &lt;code&gt;postgresql['max_connections']&lt;/code&gt; setting for PostgreSQL. Default value: &lt;code&gt;20&lt;/code&gt;.</source>
          <target state="translated">서비스에서 유지 관리하는 PostgreSQL에 대한 열린 연결 수입니다. 실패로 인해 &lt;strong&gt;oc_bifrost&lt;/strong&gt; 서비스에 연결 이 &lt;strong&gt;부족한&lt;/strong&gt; 것으로 표시되면이 값을 증가시켜야 합니다. 이 값은 &lt;code&gt;postgresql['max_connections']&lt;/code&gt; 의 postgresql [ 'max_connections'] 설정 과 함께 조정해야합니다 . 기본 값 : &lt;code&gt;20&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9a5afdc8a8696a86a2720d6a87d58eb96996225e" translate="yes" xml:space="preserve">
          <source>The number of past revisions to be included in the git shallow clone. The default behavior will do a full clone.</source>
          <target state="translated">자식 얕은 클론에 포함될 과거 개정의 수. 기본 동작은 전체 복제를 수행합니다.</target>
        </trans-unit>
        <trans-unit id="557de50eb5d32b5831212f647d03debdedb82862" translate="yes" xml:space="preserve">
          <source>The number of releases for which a backup is kept. Default value: &lt;code&gt;5&lt;/code&gt;.</source>
          <target state="translated">백업이 유지되는 릴리스 수입니다. 초기 값 : &lt;code&gt;5&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a93d02dc10ffe048bf79ee5b78b5cd5b2c062406" translate="yes" xml:space="preserve">
          <source>The number of retry attempts. Default value: &lt;code&gt;5&lt;/code&gt;.</source>
          <target state="translated">재시도 횟수입니다. 초기 값 : &lt;code&gt;5&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="616d47ada921a6d62524f040b19ba771c2803681" translate="yes" xml:space="preserve">
          <source>The number of rows to be returned.</source>
          <target state="translated">리턴되는 행 수</target>
        </trans-unit>
        <trans-unit id="d96effffb23132ffa49a518d62d2e3edf2fe1b3a" translate="yes" xml:space="preserve">
          <source>The number of threads to use when migrating cookbooks. Default value: &lt;code&gt;10&lt;/code&gt;.</source>
          <target state="translated">요리 책을 마이그레이션 할 때 사용할 스레드 수입니다. 기본 값 : &lt;code&gt;10&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3ab0f1653e2ae7e20372a5511240ca35c0838de8" translate="yes" xml:space="preserve">
          <source>The number of times a chef-client is to attempt to register with a Chef server. Default value: &lt;code&gt;5&lt;/code&gt;.</source>
          <target state="translated">chef-client가 Chef 서버에 등록하려고 시도하는 횟수입니다. 초기 값 : &lt;code&gt;5&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5b1dcfe7e89aa099449bea2702357745f3f4935e" translate="yes" xml:space="preserve">
          <source>The number of times to catch exceptions and retry the resource. Default value: &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="translated">예외를 발견하고 자원을 재 시도하는 횟수입니다. 초기 값 : &lt;code&gt;0&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="36c8b5918ee4f8062f8575afe90e5c5ddc38b272" translate="yes" xml:space="preserve">
          <source>The numeric user identifier.</source>
          <target state="translated">숫자 사용자 식별자.</target>
        </trans-unit>
        <trans-unit id="4006815647b6431a8c86542f58502ff5a5e9d480" translate="yes" xml:space="preserve">
          <source>The octal mode for a file.</source>
          <target state="translated">파일의 8 진 모드.</target>
        </trans-unit>
        <trans-unit id="2e7e0fae4605329fbaab54d46160e52b3e19ecc6" translate="yes" xml:space="preserve">
          <source>The omnibus installer is used to set up the Chef development kit on a workstation, including the chef-client itself, an embedded version of Ruby, RubyGems, OpenSSL, key-value stores, parsers, libraries, command line utilities, and community tools such as Kitchen, Berkshelf, and ChefSpec. The omnibus installer puts everything into a unique directory (&lt;code&gt;opt/chefdk/&lt;/code&gt;) so that these components will not interfere with other applications that may be running on the target machine. Once installed, the chef-client requires a few more configuration steps before it can be run as a workstation.</source>
          <target state="translated">omnibus 설치 프로그램은 chef-client 자체, 내장 된 버전의 Ruby, RubyGems, OpenSSL, 키-값 저장소, 파서, 라이브러리, 명령 행 유틸리티 및 커뮤니티 도구와 같은 워크 스테이션에 Chef 개발 키트를 설정하는 데 사용됩니다. Kitchen, Berkshelf 및 ChefSpec로 omnibus 설치 프로그램은 모든 구성 요소를 고유 한 디렉토리 ( &lt;code&gt;opt/chefdk/&lt;/code&gt; )에 저장하여 이러한 구성 요소가 대상 시스템에서 실행중인 다른 응용 프로그램을 방해하지 않도록합니다. 일단 설치되면 chef-client는 워크 스테이션으로 실행되기 전에 몇 가지 추가 구성 단계가 필요합니다.</target>
        </trans-unit>
        <trans-unit id="4567b1aa18774e3ce88e232eda7489dcd8288171" translate="yes" xml:space="preserve">
          <source>The omnibus installer puts everything into a unique directory (&lt;code&gt;/opt/chef/&lt;/code&gt;) so that the chef-client will not interfere with other applications that may be running on the target machine. Once installed, the chef-client requires a few more configuration steps before it can perform its first chef-client run on a node.</source>
          <target state="translated">omnibus 설치 프로그램은 모든 항목을 고유 한 디렉토리 ( &lt;code&gt;/opt/chef/&lt;/code&gt; )에 저장하므로 chef-client는 대상 시스템에서 실행중인 다른 응용 프로그램을 방해하지 않습니다. 일단 Chef-Client를 설치하면 몇 가지 추가 구성 단계가 필요하여 노드에서 첫 번째 Chef-Client 실행을 수행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="154645e0bbeb49ed7f9f5b924d9699a922218066" translate="yes" xml:space="preserve">
          <source>The omnibus installer requires that an installation be done as a root user.</source>
          <target state="translated">omnibus 설치 프로그램에서는 루트 사용자로 설치해야합니다.</target>
        </trans-unit>
        <trans-unit id="dedc4cc72fe1a1431f1a14f45a799bc794c777ca" translate="yes" xml:space="preserve">
          <source>The omnibus installer will detect the version of the operating system, and then install the appropriate version of the chef-client using a single command to install the chef-client and all of its dependencies, including an embedded version of Ruby, RubyGems, OpenSSL, key-value stores, parsers, libraries, and command line utilities.</source>
          <target state="translated">옴니버스 설치 프로그램은 운영 체제의 버전을 감지 한 후 내장 된 Ruby, RubyGems, OpenSSL을 포함하여 chef-client 및 모든 종속 항목을 설치하는 단일 명령을 사용하여 해당 버전의 chef-client를 설치합니다. 키-값 저장소, 파서, 라이브러리 및 명령 줄 유틸리티</target>
        </trans-unit>
        <trans-unit id="7f698172d30e0dc81b40ac74cb1cf088bb2c9f3c" translate="yes" xml:space="preserve">
          <source>The omnibus installer will search the &lt;code&gt;PATH&lt;/code&gt; for a gem command rather than defaulting to the current gem environment. As part of &lt;code&gt;enforce_path_sanity&lt;/code&gt;, the &lt;code&gt;bin&lt;/code&gt; directories area added to the &lt;code&gt;PATH&lt;/code&gt;, which means when there are no other proceeding RubyGems, the installation will still be operated against it.</source>
          <target state="translated">omnibus 설치 프로그램은 현재 gem 환경을 기본값으로 사용하지 않고 &lt;code&gt;PATH&lt;/code&gt; 에서 gem 명령을 검색 합니다. 의 일환으로 &lt;code&gt;enforce_path_sanity&lt;/code&gt; 의 &lt;code&gt;bin&lt;/code&gt; 받는 추가 디렉토리 영역 &lt;code&gt;PATH&lt;/code&gt; 다른 진행 젬가없는 경우 의미, 설치가 여전히 반대 작동 할 것입니다.</target>
        </trans-unit>
        <trans-unit id="56858b0a29ffbfbc4da843c7ea52a29bda22758f" translate="yes" xml:space="preserve">
          <source>The only environment being altered is the one being passed to the child process that is started by the &lt;strong&gt;bash&lt;/strong&gt; resource. This will not affect the environment of the chef-client or any child processes.</source>
          <target state="translated">변경되는 유일한 환경은 &lt;strong&gt;bash&lt;/strong&gt; 자원에 의해 시작되는 하위 프로세스로 전달되는 환경 입니다. 이것은 요리사 클라이언트 또는 모든 하위 프로세스의 환경에 영향을 미치지 않습니다.</target>
        </trans-unit>
        <trans-unit id="194f3da00ea30189481c04b62bc68974d10743cd" translate="yes" xml:space="preserve">
          <source>The opscode-expander-ctl executable can be used to generate status information for the &lt;strong&gt;opscode-expander&lt;/strong&gt; service. The opscode-expander-ctl executable is run as a command-line tool from the master backend machine.</source>
          <target state="translated">opscode-expander-ctl 실행 파일을 사용하여 &lt;strong&gt;opscode-expander&lt;/strong&gt; 서비스에 대한 상태 정보를 생성 할 수 있습니다 . opscode-expander-ctl 실행 파일은 마스터 백엔드 시스템에서 명령 행 도구로 실행됩니다.</target>
        </trans-unit>
        <trans-unit id="b2aad63a45052f2838094a368892faf5b2dc4368" translate="yes" xml:space="preserve">
          <source>The order in which search results are to be sorted.</source>
          <target state="translated">검색 결과가 정렬되는 순서입니다.</target>
        </trans-unit>
        <trans-unit id="15a12c72a051a2f5863ca92af3d8b72100c5ded4" translate="yes" xml:space="preserve">
          <source>The organization name (&lt;code&gt;org_name=srwjedoqqoypgmvafmoi&lt;/code&gt;)</source>
          <target state="translated">조직 이름 ( &lt;code&gt;org_name=srwjedoqqoypgmvafmoi&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="3d53994e577d2e63e60b6c88568112cdef46ca0e" translate="yes" xml:space="preserve">
          <source>The organization or group within your company that is running the Chef server. Default value: &lt;code&gt;Operations&lt;/code&gt;.</source>
          <target state="translated">Chef 서버를 실행중인 회사 내의 조직 또는 그룹 기본 값 : &lt;code&gt;Operations&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="161666127c8707d6783580737f399e18505ab848" translate="yes" xml:space="preserve">
          <source>The other attribute precedence levels are unaffected:</source>
          <target state="translated">다른 속성 우선 순위 레벨은 영향을받지 않습니다.</target>
        </trans-unit>
        <trans-unit id="44ede99ad2f64217b81a1e6ba5701577377fe3e2" translate="yes" xml:space="preserve">
          <source>The out-of-the-box system process limits for maximum process memory size (RSS) and number of open files are typically too low to run the chef-client on a logical partition (LPAR). When the system process limits are too low, the chef-client will not be able to create threads. To increase the system process limits:</source>
          <target state="translated">RSS (Maximum Process Memory Size) 및 열린 파일 수에 대한 기본 제공 시스템 프로세스 제한은 일반적으로 논리적 파티션 (LPAR)에서 chef-client를 실행하기에 너무 낮습니다. 시스템 프로세스 제한이 너무 낮 으면 chef-client가 스레드를 작성할 수 없습니다. 시스템 프로세스 한계를 늘리려면 다음을 수행하십시오.</target>
        </trans-unit>
        <trans-unit id="523f5fda40e5eb224603659591788721456eda1d" translate="yes" xml:space="preserve">
          <source>The output format: &lt;code&gt;doc&lt;/code&gt; (default) or &lt;code&gt;min&lt;/code&gt;.</source>
          <target state="translated">출력 형식은 &lt;code&gt;doc&lt;/code&gt; (기본값) 또는 &lt;code&gt;min&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="773d55a74641b730afdcb461d451c0f3d3c28044" translate="yes" xml:space="preserve">
          <source>The output format: &lt;code&gt;summary&lt;/code&gt; (default), &lt;code&gt;text&lt;/code&gt;, &lt;code&gt;json&lt;/code&gt;, &lt;code&gt;yaml&lt;/code&gt;, and &lt;code&gt;pp&lt;/code&gt;.</source>
          <target state="translated">출력 형식 : &lt;code&gt;summary&lt;/code&gt; (기본값), &lt;code&gt;text&lt;/code&gt; , &lt;code&gt;json&lt;/code&gt; , &lt;code&gt;yaml&lt;/code&gt; , 그리고 &lt;code&gt;pp&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3b6724144f8e00aa0951750bbb8e9edec9699d96" translate="yes" xml:space="preserve">
          <source>The output from the shell after the &lt;code&gt;CTRL-g&lt;/code&gt; looks similar to:</source>
          <target state="translated">&lt;code&gt;CTRL-g&lt;/code&gt; 이후 쉘의 출력은 다음과 유사합니다.</target>
        </trans-unit>
        <trans-unit id="8e6894d904eab3d86a38921c04c4c1699003e433" translate="yes" xml:space="preserve">
          <source>The output of &lt;code&gt;knife deps&lt;/code&gt; can be passed to &lt;code&gt;knife upload&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;knife deps&lt;/code&gt; 의 출력은 &lt;code&gt;knife upload&lt;/code&gt; 로 전달 될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="80bd6022deaf299a8116ffa5928414466e6faf48" translate="yes" xml:space="preserve">
          <source>The output of &lt;code&gt;knife deps&lt;/code&gt; can be passed to &lt;code&gt;knife xargs&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;knife deps&lt;/code&gt; 의 출력은 &lt;code&gt;knife xargs&lt;/code&gt; 로 전달 될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="409edf40fd028061b872342eea93b77571aa0b47" translate="yes" xml:space="preserve">
          <source>The owner associated with a symbolic link.</source>
          <target state="translated">심볼릭 링크와 관련된 소유자</target>
        </trans-unit>
        <trans-unit id="83f13d9994f774e76c60d599491cb46921eb7ed7" translate="yes" xml:space="preserve">
          <source>The parameters for this subcommand must be in the order specified above.</source>
          <target state="translated">이 부속 명령의 매개 변수는 위에 지정된 순서대로되어 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="4574a44a9bad66187abb89997bf847652097931a" translate="yes" xml:space="preserve">
          <source>The parentheses are optional, e.g. &lt;code&gt;Chef::Log.info 'string'&lt;/code&gt; may be used instead of &lt;code&gt;Chef::Log.info('string')&lt;/code&gt;.</source>
          <target state="translated">괄호는 선택 사항입니다. 예 : &lt;code&gt;Chef::Log.info('string')&lt;/code&gt; 대신 &lt;code&gt;Chef::Log.info 'string'&lt;/code&gt; 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="0993c0352aa92a52f2213e4538ea518295be2a3c" translate="yes" xml:space="preserve">
          <source>The part of the cookbook to show: &lt;code&gt;attributes&lt;/code&gt;, &lt;code&gt;definitions&lt;/code&gt;, &lt;code&gt;files&lt;/code&gt;, &lt;code&gt;libraries&lt;/code&gt;, &lt;code&gt;providers&lt;/code&gt;, &lt;code&gt;recipes&lt;/code&gt;, &lt;code&gt;resources&lt;/code&gt;, or &lt;code&gt;templates&lt;/code&gt;. More than one part can be specified.</source>
          <target state="translated">요리 책에서 &lt;code&gt;attributes&lt;/code&gt; , &lt;code&gt;definitions&lt;/code&gt; , &lt;code&gt;files&lt;/code&gt; , &lt;code&gt;libraries&lt;/code&gt; , &lt;code&gt;providers&lt;/code&gt; , &lt;code&gt;recipes&lt;/code&gt; , &lt;code&gt;resources&lt;/code&gt; 또는 &lt;code&gt;templates&lt;/code&gt; 줍니다. 둘 이상의 부분을 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8d11fc742663fc05d39d3fced2e10a2af59d03c3" translate="yes" xml:space="preserve">
          <source>The pass number used by the file system check (&lt;code&gt;fsck&lt;/code&gt;) command while creating a file systems table (&lt;code&gt;fstab&lt;/code&gt;) entry. Default value: &lt;code&gt;2&lt;/code&gt;.</source>
          <target state="translated">파일 시스템 테이블 ( &lt;code&gt;fstab&lt;/code&gt; ) 항목 을 작성하는 동안 파일 시스템 검사 ( &lt;code&gt;fsck&lt;/code&gt; ) 명령이 사용하는 패스 번호 . 기본 값 : &lt;code&gt;2&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8730dd25d77b58b87a99de2669191df891a4bddb" translate="yes" xml:space="preserve">
          <source>The password for a user that has access to the Subversion repository.</source>
          <target state="translated">Subversion 저장소에 액세스 할 수있는 사용자의 비밀번호입니다.</target>
        </trans-unit>
        <trans-unit id="cbef8cdeba05e9c33074de648e644bcf337cd6ad" translate="yes" xml:space="preserve">
          <source>The password for the &lt;code&gt;actions_user&lt;/code&gt;. Default value: &lt;code&gt;'changeme'&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;actions_user&lt;/code&gt; 의 비밀번호입니다 . 기본 값 : &lt;code&gt;'changeme'&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0cdbcfb8f394cd2ec0eb0854ee5f8471ff158b5d" translate="yes" xml:space="preserve">
          <source>The password for the &lt;code&gt;sql_ro_user&lt;/code&gt;. Default value: &lt;code&gt;'foreveralone'&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;sql_ro_user&lt;/code&gt; 의 비밀번호입니다 . 기본값 : &lt;code&gt;'foreveralone'&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="59466420b833e601687793f56bc4abf4c2fbebc1" translate="yes" xml:space="preserve">
          <source>The password for the &lt;code&gt;sql_user&lt;/code&gt;. Default value: &lt;code&gt;'challengeaccepted'&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;sql_user&lt;/code&gt; 의 비밀번호입니다 . 기본값은 &lt;code&gt;'challengeaccepted'&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="4e15ac164c8d61a500fae6d50ab9707469397aca" translate="yes" xml:space="preserve">
          <source>The password for the &lt;code&gt;sql_user&lt;/code&gt;. Default value: &lt;code&gt;snakepliskin&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;sql_user&lt;/code&gt; 의 비밀번호입니다 . 기본 값 : &lt;code&gt;snakepliskin&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b5169ac6ed7dac862026c13fa7934a9a242eb6fe" translate="yes" xml:space="preserve">
          <source>The password for the PostgreSQL user account. Default value: &lt;code&gt;snakepliskin&lt;/code&gt;.</source>
          <target state="translated">PostgreSQL 사용자 계정의 비밀번호입니다. 기본 값 : &lt;code&gt;snakepliskin&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c238cc8ce57675f32525a6b0ae2fa5bbc71f29c1" translate="yes" xml:space="preserve">
          <source>The password for the RabbitMQ user. Default value: &lt;code&gt;'chefrocks'&lt;/code&gt;.</source>
          <target state="translated">RabbitMQ 사용자의 비밀번호입니다. 기본값은 &lt;code&gt;'chefrocks'&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="6745771dff36855db7ec7750465099341b69e2c3" translate="yes" xml:space="preserve">
          <source>The password for the binding user. The password for the user specified by &lt;code&gt;ldap['bind_dn']&lt;/code&gt;. Leave this value and &lt;code&gt;ldap['bind_dn']&lt;/code&gt; unset if anonymous bind is sufficient. Default value: &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">바인딩 사용자의 비밀번호입니다. &lt;code&gt;ldap['bind_dn']&lt;/code&gt; 에 의해 지정된 사용자의 비밀번호입니다 . 익명 바인드로 충분하면 이 값을 그대로두고 &lt;code&gt;ldap['bind_dn']&lt;/code&gt; 을 설정하지 마십시오 . 기본 값 : &lt;code&gt;nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="61a0880b1592aa0bd2ee524898d1d460015c652a" translate="yes" xml:space="preserve">
          <source>The password for the proxy server when the proxy server is using an FTP connection. Default value: &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">프록시 서버가 FTP 연결을 사용중인 경우 프록시 서버의 비밀번호입니다. 기본 값 : &lt;code&gt;nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="47912af6b4d1ce35ae6426f9d8ef38e3f50c6cf7" translate="yes" xml:space="preserve">
          <source>The password for the proxy server when the proxy server is using an HTTP connection. Default value: &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">프록시 서버가 HTTP 연결을 사용중인 경우 프록시 서버의 비밀번호입니다. 기본 값 : &lt;code&gt;nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="eb2ca38a5747399c298a770f02bc738986f50be6" translate="yes" xml:space="preserve">
          <source>The password for the proxy server when the proxy server is using an HTTPS connection. Default value: &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">프록시 서버가 HTTPS 연결을 사용중인 경우 프록시 서버의 비밀번호입니다. 기본 값 : &lt;code&gt;nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="528f2f235dbc88bd7c800f866765174b230e2e4c" translate="yes" xml:space="preserve">
          <source>The password for the user specified by &lt;code&gt;run_as_user&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;run_as_user&lt;/code&gt; 로 지정된 사용자의 비밀번호입니다 .</target>
        </trans-unit>
        <trans-unit id="208dffda9b16c9f41d7fc3a32c05b521f8ace2d2" translate="yes" xml:space="preserve">
          <source>The password shadow hash. This property requires that &lt;code&gt;ruby-shadow&lt;/code&gt; be installed. This is part of the Debian package: &lt;code&gt;libshadow-ruby1.8&lt;/code&gt;.</source>
          <target state="translated">비밀번호 섀도우 해시입니다. 이 속성은 &lt;code&gt;ruby-shadow&lt;/code&gt; 가 설치되어 있어야합니다. 이것은 &lt;code&gt;libshadow-ruby1.8&lt;/code&gt; 데비안 패키지의 일부입니다 .</target>
        </trans-unit>
        <trans-unit id="96398c4dca17015e82f469a01d864cd9b36e6f12" translate="yes" xml:space="preserve">
          <source>The path to a JSON file that contains a list of vaults and items to be updated.</source>
          <target state="translated">업데이트 할 볼트 및 항목 목록이 포함 된 JSON 파일의 경로입니다.</target>
        </trans-unit>
        <trans-unit id="00ef1cd1cff11200afb1990305f7be84f3c63cac" translate="yes" xml:space="preserve">
          <source>The path to a file in which a write-intent bitmap is stored.</source>
          <target state="translated">쓰기 의도 비트 맵이 저장된 파일의 경로입니다.</target>
        </trans-unit>
        <trans-unit id="f922446936f947ba88a1323ab74311ffcd0c0233" translate="yes" xml:space="preserve">
          <source>The path to a file that contains JSON data.</source>
          <target state="translated">JSON 데이터가 포함 된 파일의 경로입니다.</target>
        </trans-unit>
        <trans-unit id="b2bb5870f8efab8252fd664498e0dc85a094c995" translate="yes" xml:space="preserve">
          <source>The path to a file that contains JSON data. Used to setup the first client run. For all the future runs with option -i the attributes are expected to be persisted in the chef-server.</source>
          <target state="translated">JSON 데이터가 포함 된 파일의 경로입니다. 첫 번째 클라이언트 실행을 설정하는 데 사용됩니다. 옵션 -i를 사용한 모든 향후 실행의 경우 속성은 chef-server에 유지 될 것으로 예상됩니다.</target>
        </trans-unit>
        <trans-unit id="1870b8fe9f09df3cc4ab3a6b215571eb9030af88" translate="yes" xml:space="preserve">
          <source>The path to a file that contains the public key. If this option is not specified, and only if &lt;code&gt;--key-name&lt;/code&gt; is specified, the Chef server will generate a public/private key pair.</source>
          <target state="translated">공개 키가 포함 된 파일의 경로입니다. 이 옵션이 지정되지 않고 &lt;code&gt;--key-name&lt;/code&gt; 이 지정된 경우에만 Chef 서버는 공개 / 개인 키 쌍을 생성합니다.</target>
        </trans-unit>
        <trans-unit id="eb1124de2f847bd23997439c84b61b072114e65f" translate="yes" xml:space="preserve">
          <source>The path to a file that contains the public key. If this option is not specified, the Chef server will generate a public/private key pair.</source>
          <target state="translated">공개 키가 포함 된 파일의 경로입니다. 이 옵션을 지정하지 않으면 Chef 서버는 공개 / 개인 키 쌍을 생성합니다.</target>
        </trans-unit>
        <trans-unit id="a14bc232af40618529214a91dcd5a1896318a0ef" translate="yes" xml:space="preserve">
          <source>The path to a file that contains the public key. This option may not be passed in the same command with &lt;code&gt;--prevent-keygen&lt;/code&gt;. When using Open Source Chef a default key is generated if this option is not passed in the command. For Chef server version 12.x, see the &lt;code&gt;--prevent-keygen&lt;/code&gt; option.</source>
          <target state="translated">공개 키가 포함 된 파일의 경로입니다. 이 옵션은 &lt;code&gt;--prevent-keygen&lt;/code&gt; 과 동일한 명령으로 전달되지 않을 수 있습니다 . Open Source Chef를 사용할 때이 옵션이 명령에 전달되지 않으면 기본 키가 생성됩니다. Chef 서버 버전 12.x의 경우 &lt;code&gt;--prevent-keygen&lt;/code&gt; 옵션을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="7ac24f0abbc86a28d11c16da9fd5008f2c7b4a18" translate="yes" xml:space="preserve">
          <source>The path to a recipe. For example, if a recipe file is in the current directory, use &lt;code&gt;recipe_file.rb&lt;/code&gt;. This is typically used with the &lt;code&gt;--local-mode&lt;/code&gt; option.</source>
          <target state="translated">레시피 경로. 예를 들어, 레시피 파일이 현재 디렉토리에 있으면 &lt;code&gt;recipe_file.rb&lt;/code&gt; 를 사용 하십시오 . 일반적으로 &lt;code&gt;--local-mode&lt;/code&gt; 옵션 과 함께 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="dddacd7be5889503094a6e0b4a0272b7063e76ed" translate="yes" xml:space="preserve">
          <source>The path to a template file to be used during a bootstrap operation.</source>
          <target state="translated">부트 스트랩 작업 중에 사용할 템플릿 파일의 경로입니다.</target>
        </trans-unit>
        <trans-unit id="b293a3719feb1720ac68a8e27bca4066aa52bd75" translate="yes" xml:space="preserve">
          <source>The path to a valid Windows PowerShell data file that also contains a node called &lt;code&gt;localhost&lt;/code&gt;. This property may not be used in the same recipe as the &lt;code&gt;configuration_data&lt;/code&gt; property.</source>
          <target state="translated">&lt;code&gt;localhost&lt;/code&gt; 라는 노드도 포함하는 유효한 Windows PowerShell 데이터 파일의 경로 입니다. 이 특성은 &lt;code&gt;configuration_data&lt;/code&gt; 특성 과 동일한 레시피에서 사용될 수 없습니다 .</target>
        </trans-unit>
        <trans-unit id="596419e73954ceedbb1827cd5e79a86af9d09a68" translate="yes" xml:space="preserve">
          <source>The path to a valid Windows PowerShell data file that contains the DSC configuration script. This data file must be capable of running independently of Chef and must generate a valid DSC configuration. This property may not be used in the same recipe as the &lt;code&gt;code&lt;/code&gt; property.</source>
          <target state="translated">DSC 구성 스크립트가 포함 된 유효한 Windows PowerShell 데이터 파일의 경로입니다. 이 데이터 파일은 Chef와 독립적으로 실행할 수 있어야하며 유효한 DSC 구성을 생성해야합니다. 이 속성은 &lt;code&gt;code&lt;/code&gt; 속성 과 동일한 레시피에서 사용할 수 없습니다 .</target>
        </trans-unit>
        <trans-unit id="5d6e9f62a60a9ae6b82acd7f81bc76d9108a2e6d" translate="yes" xml:space="preserve">
          <source>The path to the chef-repo.</source>
          <target state="translated">셰프 레포로가는 길.</target>
        </trans-unit>
        <trans-unit id="784144a66a6ebdd21d15bce2b597603a9ac3c7a3" translate="yes" xml:space="preserve">
          <source>The path to the chef-repo. Default value: same as &lt;code&gt;chef_repo_path&lt;/code&gt; in the client.rb file.</source>
          <target state="translated">셰프 레포로가는 길. 기본값 : client.rb 파일의 &lt;code&gt;chef_repo_path&lt;/code&gt; 와 동일 합니다.</target>
        </trans-unit>
        <trans-unit id="1bb6de39e55495f9100737c20b01fadf7692cbca" translate="yes" xml:space="preserve">
          <source>The path to the chef-repo. This setting will override the default path to the chef-repo. Default: same value as specified by &lt;code&gt;chef_repo_path&lt;/code&gt; in client.rb.</source>
          <target state="translated">셰프 레포로가는 길. 이 설정은 chef-repo의 기본 경로보다 우선합니다. 기본값 : client.rb의 &lt;code&gt;chef_repo_path&lt;/code&gt; 에 지정된 값과 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="d8fd135dfd9945aa0e39a4a08626081d4522260c" translate="yes" xml:space="preserve">
          <source>The path to the destination at which a file is to be created. Default value: the &lt;code&gt;name&lt;/code&gt; of the resource block For example: &lt;code&gt;file.txt&lt;/code&gt;.</source>
          <target state="translated">파일을 만들 대상의 경로입니다. 기본값 : 자원 블록 의 &lt;code&gt;name&lt;/code&gt; 입니다 (예 : &lt;code&gt;file.txt&lt;/code&gt; ) .</target>
        </trans-unit>
        <trans-unit id="797779972f6baffd3c986cd7587cef159ad396da" translate="yes" xml:space="preserve">
          <source>The path to the directory in which Docker contexts are stored. Default value: &lt;code&gt;/var/chef/dockerfiles&lt;/code&gt;.</source>
          <target state="translated">Docker 컨텍스트가 저장되는 디렉토리의 경로입니다. 초기 값 : &lt;code&gt;/var/chef/dockerfiles&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="edbf32ba7f2a0ff437bd1a8d9e1e1216a47f7e99" translate="yes" xml:space="preserve">
          <source>The path to the directory. Using a fully qualified path is recommended, but is not always required. Default value: the &lt;code&gt;name&lt;/code&gt; of the resource block See &amp;ldquo;Syntax&amp;rdquo; section above for more information.</source>
          <target state="translated">디렉토리 경로. 정규화 된 경로를 사용하는 것이 좋지만 항상 필요한 것은 아닙니다. 기본값 : 리소스 블록 &lt;code&gt;name&lt;/code&gt; 자세한 내용은 위의 &quot;구문&quot;섹션을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="9339da6da767b3b73e69ff708a15dc65f783035c" translate="yes" xml:space="preserve">
          <source>The path to the environment. Default value: &lt;code&gt;/var/chef/environments&lt;/code&gt;.</source>
          <target state="translated">환경으로가는 길. 초기 값 : &lt;code&gt;/var/chef/environments&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="27f940676a3fab045fc3bd617cfc504f6e1329b0" translate="yes" xml:space="preserve">
          <source>The path to the file that contains hints for Ohai.</source>
          <target state="translated">Ohai에 대한 힌트가 포함 된 파일의 경로입니다.</target>
        </trans-unit>
        <trans-unit id="1ae765b41a2b2411f5c671cd8dfc4becd3688ddf" translate="yes" xml:space="preserve">
          <source>The path to the file that contains the encryption key.</source>
          <target state="translated">암호화 키가 포함 된 파일의 경로입니다.</target>
        </trans-unit>
        <trans-unit id="af3ad4719c6112a5b3459d46ce7b85ab361d3608" translate="yes" xml:space="preserve">
          <source>The path to the init script that is associated with the service. This is typically &lt;code&gt;/etc/init.d/SERVICE_NAME&lt;/code&gt;. The &lt;code&gt;init_command&lt;/code&gt; property can be used to prevent the need to specify overrides for the &lt;code&gt;start_command&lt;/code&gt;, &lt;code&gt;stop_command&lt;/code&gt;, and &lt;code&gt;restart_command&lt;/code&gt; attributes. Default value: &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">서비스와 연관된 초기화 스크립트의 경로입니다. 일반적으로 &lt;code&gt;/etc/init.d/SERVICE_NAME&lt;/code&gt; 입니다. &lt;code&gt;init_command&lt;/code&gt; 속성에 대한 재 지정할 필요 방지 할 수 있습니다 &lt;code&gt;start_command&lt;/code&gt; , &lt;code&gt;stop_command&lt;/code&gt; 및 &lt;code&gt;restart_command&lt;/code&gt; 의 특성을. 기본 값 : &lt;code&gt;nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="401f68931fcb91895079bf672defaf554f616fe4" translate="yes" xml:space="preserve">
          <source>The path to the init script that is associated with the service. Use &lt;code&gt;init_command&lt;/code&gt; to prevent the need to specify overrides for the &lt;code&gt;start_command&lt;/code&gt;, &lt;code&gt;stop_command&lt;/code&gt;, and &lt;code&gt;restart_command&lt;/code&gt; properties. When this property is not specified, the chef-client will use the default init command for the service provider being used.</source>
          <target state="translated">서비스와 연관된 초기화 스크립트의 경로입니다. &lt;code&gt;init_command&lt;/code&gt; 를 사용 하여 &lt;code&gt;start_command&lt;/code&gt; , &lt;code&gt;stop_command&lt;/code&gt; 및 &lt;code&gt;restart_command&lt;/code&gt; 특성에 대한 대체를 지정하지 않아도됩니다 . 이 특성을 지정하지 않으면 chef-client는 사용중인 서비스 제공자에 대해 기본 init 명령을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="373cddcd1f5bf0e7ec87147c8835ac0ec74d5cf0" translate="yes" xml:space="preserve">
          <source>The path to the launchd property list.</source>
          <target state="translated">시작된 속성 목록의 경로입니다.</target>
        </trans-unit>
        <trans-unit id="fea294e70462a685bc1eeeac877f5bdc067edf22" translate="yes" xml:space="preserve">
          <source>The path to the location in which a registry key is to be created or from which a registry key is to be deleted. Default value: the &lt;code&gt;name&lt;/code&gt; of the resource block See &amp;ldquo;Syntax&amp;rdquo; section above for more information. The path must include the registry hive, which can be specified either as its full name or as the 3- or 4-letter abbreviation. For example, both &lt;code&gt;HKLM\SECURITY&lt;/code&gt; and &lt;code&gt;HKEY_LOCAL_MACHINE\SECURITY&lt;/code&gt; are both valid and equivalent. The following hives are valid: &lt;code&gt;HKEY_LOCAL_MACHINE&lt;/code&gt;, &lt;code&gt;HKLM&lt;/code&gt;, &lt;code&gt;HKEY_CURRENT_CONFIG&lt;/code&gt;, &lt;code&gt;HKCC&lt;/code&gt;, &lt;code&gt;HKEY_CLASSES_ROOT&lt;/code&gt;, &lt;code&gt;HKCR&lt;/code&gt;, &lt;code&gt;HKEY_USERS&lt;/code&gt;, &lt;code&gt;HKU&lt;/code&gt;, &lt;code&gt;HKEY_CURRENT_USER&lt;/code&gt;, and &lt;code&gt;HKCU&lt;/code&gt;.</source>
          <target state="translated">레지스트리 키를 만들거나 레지스트리 키를 삭제할 위치의 경로입니다. 기본값 : 리소스 블록 &lt;code&gt;name&lt;/code&gt; 자세한 내용은 위의 &quot;구문&quot;섹션을 참조하십시오. 경로에는 레지스트리 하이브가 포함되어야합니다. 레지스트리 하이브는 전체 이름 또는 3 자 또는 4 자 약어로 지정할 수 있습니다. 예를 들어, &lt;code&gt;HKLM\SECURITY&lt;/code&gt; 및 &lt;code&gt;HKEY_LOCAL_MACHINE\SECURITY&lt;/code&gt; 는 모두 유효하고 동일합니다. 유효한 하이브 : &lt;code&gt;HKEY_LOCAL_MACHINE&lt;/code&gt; , &lt;code&gt;HKLM&lt;/code&gt; , &lt;code&gt;HKEY_CURRENT_CONFIG&lt;/code&gt; , &lt;code&gt;HKCC&lt;/code&gt; , &lt;code&gt;HKEY_CLASSES_ROOT&lt;/code&gt; , &lt;code&gt;HKCR&lt;/code&gt; , &lt;code&gt;HKEY_USERS&lt;/code&gt; , &lt;code&gt;HKU&lt;/code&gt; , &lt;code&gt;HKEY_CURRENT_USER&lt;/code&gt; 및 &lt;code&gt;HKCU&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b53429b139e3a4b3e7bd1e1a2449f6ab52c57c4c" translate="yes" xml:space="preserve">
          <source>The path to the private key used by the client, typically a file named &lt;code&gt;admin.pem&lt;/code&gt;.</source>
          <target state="translated">클라이언트라는 일반적으로 파일에 사용되는 개인 키에 대한 경로 &lt;code&gt;admin.pem&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="10d59004c442e08609950eb115a4e32f05095f3e" translate="yes" xml:space="preserve">
          <source>The path to the validation key used by the client, typically a file named chef-validator.pem.</source>
          <target state="translated">클라이언트가 사용하는 유효성 검사 키의 경로 (일반적으로 chef-validator.pem이라는 파일)</target>
        </trans-unit>
        <trans-unit id="e3f48c68d04038e5d4a05902430829cf48490cfe" translate="yes" xml:space="preserve">
          <source>The path to the wrapper script used when running SSH with git. The &lt;code&gt;GIT_SSH&lt;/code&gt; environment variable is set to this.</source>
          <target state="translated">git으로 SSH를 실행할 때 사용되는 래퍼 스크립트의 경로입니다. &lt;code&gt;GIT_SSH&lt;/code&gt; 의 환경 변수는이 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="3d9a4f674fe5f1eb540c9ecfccb5b249d9374b48" translate="yes" xml:space="preserve">
          <source>The path to where the OpenSSL key is located. This setting is generated automatically by the chef-client and most users do not need to modify it.</source>
          <target state="translated">OpenSSL 키가있는 경로입니다. 이 설정은 chef-client가 자동으로 생성하며 대부분의 사용자는 수정할 필요가 없습니다.</target>
        </trans-unit>
        <trans-unit id="1797204c1f82eef48423d17edc1de7a5c142f9c8" translate="yes" xml:space="preserve">
          <source>The pattern for file specificity depends on two things: the lookup path and the source attribute. The first pattern that matches is used:</source>
          <target state="translated">파일 고유성에 대한 패턴은 조회 경로와 소스 속성의 두 가지에 따라 다릅니다. 일치하는 첫 번째 패턴이 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="a46eccb9e82a5a966aff86ebfcc1293c79e5b4c3" translate="yes" xml:space="preserve">
          <source>The pattern for template specificity depends on two things: the lookup path and the source. The first pattern that matches is used:</source>
          <target state="translated">템플릿 특이성의 패턴은 조회 경로와 소스의 두 가지에 따라 다릅니다. 일치하는 첫 번째 패턴이 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="1a8e332f10aca525bc3551ed512e4fddac6195a5" translate="yes" xml:space="preserve">
          <source>The pattern to look for in the process table. Default value: &lt;code&gt;service_name&lt;/code&gt;.</source>
          <target state="translated">프로세스 테이블에서 찾을 패턴입니다. 기본값은 &lt;code&gt;service_name&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="5d92be3ab94b74b050ab4a2b2713d29c0ea276a3" translate="yes" xml:space="preserve">
          <source>The platform for which a cookbook is designed.</source>
          <target state="translated">요리 책이 설계된 플랫폼.</target>
        </trans-unit>
        <trans-unit id="edb5fe89a26ef685b769e00d978e4983d7f26282" translate="yes" xml:space="preserve">
          <source>The platform on which a node is running. This attribute helps determine which providers will be used.</source>
          <target state="translated">노드가 실행중인 플랫폼. 이 속성은 사용할 제공자를 결정하는 데 도움이됩니다.</target>
        </trans-unit>
        <trans-unit id="9cc665b3605006e0eefbd4010b4a76d97ec3f084" translate="yes" xml:space="preserve">
          <source>The policy applied when the maximum amount of memory is reached. Possible values: &lt;code&gt;allkeys-lru&lt;/code&gt; (remove keys, starting with those used least frequently), &lt;code&gt;allkeys-random&lt;/code&gt; (remove keys randomly), &lt;code&gt;noeviction&lt;/code&gt; (don&amp;rsquo;t expire, return an error on write operation), &lt;code&gt;volatile-lru&lt;/code&gt; (remove expired keys, starting with those used least frequently), &lt;code&gt;volatile-random&lt;/code&gt; (remove expired keys randomly), and &lt;code&gt;volatile-ttl&lt;/code&gt; (remove keys, starting with nearest expired time). Default value: &lt;code&gt;'noeviction'&lt;/code&gt;.</source>
          <target state="translated">최대 메모리 양에 도달하면 적용되는 정책입니다. 가능한 값 : &lt;code&gt;allkeys-lru&lt;/code&gt; (제거 키, 적어도 자주 사용되는로 시작하는)을 &lt;code&gt;allkeys-random&lt;/code&gt; (무작위로 제거 키), &lt;code&gt;noeviction&lt;/code&gt; 이 (만료 쓰기 작업에서 오류를 반환하지 않음), &lt;code&gt;volatile-lru&lt;/code&gt; (제거는, 키 만료 가장 빈번하게 사용되는 것으로 시작), &lt;code&gt;volatile-random&lt;/code&gt; (만료 된 키를 임의로 제거) 및 &lt;code&gt;volatile-ttl&lt;/code&gt; (가장 가까운 만료 시간으로 시작하는 키 제거). 기본 값 : &lt;code&gt;'noeviction'&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="564d79db479d09f3896cacaacd139a66d5f8822f" translate="yes" xml:space="preserve">
          <source>The policy file was loaded.</source>
          <target state="translated">정책 파일이로드되었습니다.</target>
        </trans-unit>
        <trans-unit id="290a1546206e8c209a071b5c6e5731c63a8ce8bd" translate="yes" xml:space="preserve">
          <source>The port on which Chef management console services listen. Default value: &lt;code&gt;{ '127.0.0.1:#{port}' }&lt;/code&gt;.</source>
          <target state="translated">Chef 관리 콘솔 서비스가 청취하는 포트입니다. 기본값 : &lt;code&gt;{ '127.0.0.1:#{port}' }&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="076301d5fef4f8f079017959ff654a5d9964208e" translate="yes" xml:space="preserve">
          <source>The port on which Chef management console services run. Default value: &lt;code&gt;9462&lt;/code&gt;.</source>
          <target state="translated">Chef 관리 콘솔 서비스가 실행되는 포트입니다. 기본 값 : &lt;code&gt;9462&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5bc5d8c954de4a5bcce5fa15e3552ad4390f1c7a" translate="yes" xml:space="preserve">
          <source>The port on which Redis listens. Default value: &lt;code&gt;11002&lt;/code&gt;.</source>
          <target state="translated">Redis가 수신하는 포트입니다. 기본 값 : &lt;code&gt;11002&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="aa3edd0d5081e9e188b06724237e29ed6c82e5a7" translate="yes" xml:space="preserve">
          <source>The port on which chef-zero is to listen. Default value: &lt;code&gt;8889&lt;/code&gt;. For example:</source>
          <target state="translated">chef-zero가 수신 할 포트입니다. 기본 값 : &lt;code&gt;8889&lt;/code&gt; . 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="92409116ffdf291f4e4cda73ba9fcc374808297b" translate="yes" xml:space="preserve">
          <source>The port on which chef-zero is to listen. This value may be specified as a range; the chef-client will take the first available port in the range. For example &lt;code&gt;10,20,30&lt;/code&gt; or &lt;code&gt;10000-20000&lt;/code&gt;. Default value: &lt;code&gt;8889-9999&lt;/code&gt;.</source>
          <target state="translated">chef-zero가 수신 할 포트입니다. 이 값은 범위로 지정 될 수 있습니다. 요리사 클라이언트는 해당 범위에서 사용 가능한 첫 번째 포트를 사용합니다. 예를 들어 &lt;code&gt;10,20,30&lt;/code&gt; 또는 &lt;code&gt;10000-20000&lt;/code&gt; 입니다. 기본 값 : &lt;code&gt;8889-9999&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b9805d648c9f9b019cc23f18eabb803cbf7de2ea" translate="yes" xml:space="preserve">
          <source>The port on which chef-zero listens.</source>
          <target state="translated">chef-zero가 청취하는 포트입니다.</target>
        </trans-unit>
        <trans-unit id="b37128ed9fc3eddfd946d3205804bdb274f15659" translate="yes" xml:space="preserve">
          <source>The port on which chef-zero listens. If a port is not specified&amp;mdash;individually, as range of ports, or from the &lt;code&gt;chef_zero.port&lt;/code&gt; setting in the client.rb file&amp;mdash;the chef-client will scan for ports between 8889-9999 and will pick the first port that is available.</source>
          <target state="translated">chef-zero가 청취하는 포트입니다. 포트가 개별적으로 또는 포트 범위로 지정되거나 client.rb 파일 의 &lt;code&gt;chef_zero.port&lt;/code&gt; 설정에서 지정되지 않은 경우 chef-client는 8889-9999 사이의 포트를 검색하여 사용 가능한 첫 번째 포트를 선택합니다.</target>
        </trans-unit>
        <trans-unit id="56babc41ae2104d597c510b03133a5c62c768a7b" translate="yes" xml:space="preserve">
          <source>The port on which chef-zero listens. The default behavior will bind to the first available port between &lt;code&gt;8889&lt;/code&gt; and &lt;code&gt;9999&lt;/code&gt;.</source>
          <target state="translated">chef-zero가 청취하는 포트입니다. 기본 동작은 &lt;code&gt;8889&lt;/code&gt; 에서 &lt;code&gt;9999&lt;/code&gt; 사이의 첫 번째 사용 가능한 포트에 바인딩됩니다 .</target>
        </trans-unit>
        <trans-unit id="06da6695e6a13beee1a8303924c2d88d0c2c2a7c" translate="yes" xml:space="preserve">
          <source>The port on which the Nginx &lt;code&gt;stub_status&lt;/code&gt; module listens. Default value: &lt;code&gt;&quot;9999&quot;&lt;/code&gt;.</source>
          <target state="translated">Nginx &lt;code&gt;stub_status&lt;/code&gt; 모듈이 청취 하는 포트 . 초기 값 : &lt;code&gt;&quot;9999&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e9a7cc5f13b12d142c8c9d9e9c6776026041c4e3" translate="yes" xml:space="preserve">
          <source>The port on which the WebUI and API are bound for non-SSL connections. Default value: &lt;code&gt;80&lt;/code&gt;. Use &lt;code&gt;nginx['enable_non_ssl']&lt;/code&gt; to enable or disable SSL redirects on this port number. Set to &lt;code&gt;false&lt;/code&gt; to disable non-SSL connections.</source>
          <target state="translated">WebUI 및 API가 비 SSL 연결에 바인드 된 포트입니다. 기본 값 : &lt;code&gt;80&lt;/code&gt; . 이 포트 번호에서 SSL 재 지정을 활성화하거나 비활성화 하려면 &lt;code&gt;nginx['enable_non_ssl']&lt;/code&gt; 를 사용하십시오. 비 SSL 연결을 비활성화 하려면 &lt;code&gt;false&lt;/code&gt; 로 설정하십시오 .</target>
        </trans-unit>
        <trans-unit id="4f386637a1c127479edfa8b39012ba9dcf7aa5e7" translate="yes" xml:space="preserve">
          <source>The port on which the events services run. Default value: &lt;code&gt;11001&lt;/code&gt;.</source>
          <target state="translated">이벤트 서비스가 실행되는 포트입니다. 기본 값 : &lt;code&gt;11001&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="65a1187cfd7c0dbc10f454c02d4cb9cc4aaf85d1" translate="yes" xml:space="preserve">
          <source>The port on which the external load balancer will listen. Default value: &lt;code&gt;443&lt;/code&gt;.</source>
          <target state="translated">외부로드 밸런서가 수신 할 포트입니다. 기본 값 : &lt;code&gt;443&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c77ab0a1688129f1b73ce66e21b922f595ed2561" translate="yes" xml:space="preserve">
          <source>The port on which the service is to listen. Default value: &lt;code&gt;'16379'&lt;/code&gt;.</source>
          <target state="translated">서비스가 수신 할 포트입니다. 기본 값 : &lt;code&gt;'16379'&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7ebaa6bc135abacef54c6e351a962adf46ea1eac" translate="yes" xml:space="preserve">
          <source>The port on which the service is to listen. Default value: &lt;code&gt;'5672'&lt;/code&gt;.</source>
          <target state="translated">서비스가 수신 할 포트입니다. 기본 값 : &lt;code&gt;'5672'&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5ab84d194c5e68ef8c26be6a17c818ed1933155d" translate="yes" xml:space="preserve">
          <source>The port on which the service is to listen. Default value: &lt;code&gt;4321&lt;/code&gt;.</source>
          <target state="translated">서비스가 수신 할 포트입니다. 기본 값 : &lt;code&gt;4321&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="003c73023f53de39ef681e6db85a76dd6bfc4dcf" translate="yes" xml:space="preserve">
          <source>The port on which the service is to listen. Default value: &lt;code&gt;8000&lt;/code&gt;.</source>
          <target state="translated">서비스가 수신 할 포트입니다. 기본 값 : &lt;code&gt;8000&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d65caba4438a739f7797350a65d5d31526c18605" translate="yes" xml:space="preserve">
          <source>The port on which the service is to listen. Default value: &lt;code&gt;8983&lt;/code&gt;.</source>
          <target state="translated">서비스가 수신 할 포트입니다. 기본 값 : &lt;code&gt;8983&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f89dc7fd32640858fe795ac0687cd71c2b26f2ed" translate="yes" xml:space="preserve">
          <source>The port on which the service is to listen. Default value: &lt;code&gt;9090&lt;/code&gt;.</source>
          <target state="translated">서비스가 수신 할 포트입니다. 기본 값 : &lt;code&gt;9090&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="179d51a846d26ed8d3aa95fc4f927b76ee21fe5d" translate="yes" xml:space="preserve">
          <source>The port on which the service is to listen. Default value: &lt;code&gt;9463&lt;/code&gt;.</source>
          <target state="translated">서비스가 수신 할 포트입니다. 기본 값 : &lt;code&gt;9463&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9270c286ea718306e766f8392bb7da19d03cdf4e" translate="yes" xml:space="preserve">
          <source>The port on which the service is to listen. Default value: &lt;code&gt;9466&lt;/code&gt;.</source>
          <target state="translated">서비스가 수신 할 포트입니다. 기본 값 : &lt;code&gt;9466&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bd228f1421dc6847d2a4b7b4347a3a02e9c4f183" translate="yes" xml:space="preserve">
          <source>The prefix used by Chef management console. Default value: &lt;code&gt;30&lt;/code&gt;.</source>
          <target state="translated">Chef 관리 콘솔에서 사용하는 접두사입니다. 기본값: &lt;code&gt;30&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bd966cbb33cfa02f9f67a0596fd671922dddfdb9" translate="yes" xml:space="preserve">
          <source>The premium features of the Chef server&amp;mdash;Chef management console, Chef Analytics, chef-client run reporting, high availability configurations, and Chef server replication&amp;mdash;may all be installed and configured for use with the Chef server. Each of these premium features are easily enabled and can be run as part of any Chef server deployment!</source>
          <target state="translated">Chef 서버의 프리미엄 기능 (Chef 관리 콘솔, Chef Analytics, Chef-Client 실행보고, 고 가용성 구성 및 Chef 서버 복제)은 모두 Chef 서버와 함께 사용하도록 설치 및 구성 될 수 있습니다. 이러한 각 프리미엄 기능은 쉽게 사용할 수 있으며 모든 Chef 서버 배포의 일부로 실행할 수 있습니다!</target>
        </trans-unit>
        <trans-unit id="9aa557159be9f87258dff0f6a0e2898c135fe147" translate="yes" xml:space="preserve">
          <source>The previous commands may be run against the root user, instead of default. For example:</source>
          <target state="translated">이전 명령은 기본값 대신 루트 사용자에 대해 실행될 수 있습니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="f010d106767262883a8d3be67c440d9ce6ff6a40" translate="yes" xml:space="preserve">
          <source>The previous example is from the &lt;a href=&quot;https://github.com/juliandunn/ms_dotnet2&quot;&gt;ms_dotnet2 cookbook&lt;/a&gt;, created by community member &lt;code&gt;juliandunn&lt;/code&gt;.</source>
          <target state="translated">이전 예는 커뮤니티 회원 &lt;code&gt;juliandunn&lt;/code&gt; 이 작성한 &lt;a href=&quot;https://github.com/juliandunn/ms_dotnet2&quot;&gt;ms_dotnet2 cookbook&lt;/a&gt; 에서 가져온 것입니다. 입니다.</target>
        </trans-unit>
        <trans-unit id="5002531ae1449f07715c7ba54b4e82fb208a7d36" translate="yes" xml:space="preserve">
          <source>The previous examples assume that the current working directory is such that PyChef can find a valid configuration file in the same manner as the chef-client or knife. For more about PyChef, see: &lt;a href=&quot;https://github.com/coderanger/pychef&quot;&gt;https://github.com/coderanger/pychef&lt;/a&gt;.</source>
          <target state="translated">이전 예제는 현재 작업 디렉토리가 PyChef가 chef-client 또는 knife와 동일한 방식으로 유효한 구성 파일을 찾을 수있는 디렉토리라고 가정합니다. PyChef에 대한 자세한 내용은 &lt;a href=&quot;https://github.com/coderanger/pychef&quot;&gt;https://github.com/coderanger/pychef를&lt;/a&gt; 참조하십시오. .</target>
        </trans-unit>
        <trans-unit id="bfb8b808653972740c83999431d24995014aa43a" translate="yes" xml:space="preserve">
          <source>The primary has now become the secondary, and vice-versa. If you wish to fail back to the original primary, repeat these using the new primary.</source>
          <target state="translated">1 차는 이제 2 차가되었으며 그 반대도 마찬가지입니다. 원래 기본 서버로 장애 복구하려면 새 기본 서버를 사용하여이를 반복하십시오.</target>
        </trans-unit>
        <trans-unit id="0490fa986589ed59a44e13af5bc64f27a2aa76b3" translate="yes" xml:space="preserve">
          <source>The priority for this server. By default, all servers have equal priority. The server with the lowest value will have the highest priority. Default value: &lt;code&gt;'100'&lt;/code&gt;.</source>
          <target state="translated">이 서버의 우선 순위. 기본적으로 모든 서버의 우선 순위는 동일합니다. 가장 낮은 값을 가진 서버가 가장 높은 우선 순위를 갖습니다. 기본값 : &lt;code&gt;'100'&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f7497ee637d3a692c4e893700f9746a9d2954a67" translate="yes" xml:space="preserve">
          <source>The private key must be an RSA key in the SSL .pem file format. This signature is then broken into character strings (of not more than 60 characters per line) and placed in the header.</source>
          <target state="translated">개인 키는 SSL .pem 파일 형식의 RSA 키 여야합니다. 그런 다음이 서명은 문자열 (한 줄에 60 자 이하)로 구분되어 헤더에 배치됩니다.</target>
        </trans-unit>
        <trans-unit id="65cee6e9102d5efa013187764bc4ee888a138f9d" translate="yes" xml:space="preserve">
          <source>The program scheduling priority value in the range &lt;code&gt;-20&lt;/code&gt; to &lt;code&gt;20&lt;/code&gt;.</source>
          <target state="translated">프로그램 예약 우선 순위 값은 &lt;code&gt;-20&lt;/code&gt; 에서 &lt;code&gt;20&lt;/code&gt; 사이 입니다.</target>
        </trans-unit>
        <trans-unit id="1f53e6a714960b2aca5436804728e6c3011f3ebb" translate="yes" xml:space="preserve">
          <source>The protocol used to connect to the server. Possible values: &lt;code&gt;http&lt;/code&gt; and &lt;code&gt;https&lt;/code&gt;. This is the protocol used to connect to the Chef server by a chef-client or a workstation. Default value: &lt;code&gt;'https'&lt;/code&gt;.</source>
          <target state="translated">서버에 연결하는 데 사용되는 프로토콜입니다. 가능한 값은 &lt;code&gt;http&lt;/code&gt; 및 &lt;code&gt;https&lt;/code&gt; 입니다. 이것은 Chef-Client 또는 워크 스테이션에서 Chef 서버에 연결하는 데 사용되는 프로토콜입니다. 기본 값 : &lt;code&gt;'https'&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="28c57a46169c7867df5201a9126a5908e1181d4c" translate="yes" xml:space="preserve">
          <source>The provider for Chocolatey on the Microsoft Windows platform.</source>
          <target state="translated">Microsoft Windows 플랫폼에서 Chocolatey 제공 업체.</target>
        </trans-unit>
        <trans-unit id="884ab4bb59a0e29d8367eea5d98b38db88b16052" translate="yes" xml:space="preserve">
          <source>The provider for Python.</source>
          <target state="translated">파이썬 제공 업체.</target>
        </trans-unit>
        <trans-unit id="5f72d03f64f7322aa4dd0a992138e76b1529672f" translate="yes" xml:space="preserve">
          <source>The provider for all Microsoft Windows platforms.</source>
          <target state="translated">모든 Microsoft Windows 플랫폼의 공급자입니다.</target>
        </trans-unit>
        <trans-unit id="e4c0a57483213c1c9314687431aaaee5934967b2" translate="yes" xml:space="preserve">
          <source>The provider for the AIX platform.</source>
          <target state="translated">AIX 플랫폼의 제공자입니다.</target>
        </trans-unit>
        <trans-unit id="c2432e2bc5fabd836152037d11ede0eb83997b6d" translate="yes" xml:space="preserve">
          <source>The provider for the AIX platform. Can be used with the &lt;code&gt;options&lt;/code&gt; attribute.</source>
          <target state="translated">AIX 플랫폼의 제공자입니다. &lt;code&gt;options&lt;/code&gt; 속성 과 함께 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="f1b2cef4f9be12d97c79c6dddc201dde137205df" translate="yes" xml:space="preserve">
          <source>The provider for the Arch Linux platform.</source>
          <target state="translated">아치 리눅스 플랫폼의 공급자.</target>
        </trans-unit>
        <trans-unit id="e4559148c7c3650f8da3ed40a2d90332388fbfc5" translate="yes" xml:space="preserve">
          <source>The provider for the Bash command interpreter.</source>
          <target state="translated">Bash 명령 인터프리터의 제공자입니다.</target>
        </trans-unit>
        <trans-unit id="e4a073bf52d90e8fe2bef4c4ccb660a7589a7775" translate="yes" xml:space="preserve">
          <source>The provider for the Chocolatey package manager for the Microsoft Windows platform.</source>
          <target state="translated">Microsoft Windows 플랫폼 용 Chocolatey 패키지 관리자 제공 업체.</target>
        </trans-unit>
        <trans-unit id="2be34e3e968755625f81c2b0c7b6bada5ef91929" translate="yes" xml:space="preserve">
          <source>The provider for the Debian and Ubuntu platforms.</source>
          <target state="translated">데비안 및 우분투 플랫폼 제공 업체.</target>
        </trans-unit>
        <trans-unit id="4e29993e4337ca4274b04bf921a52cacf702dcf5" translate="yes" xml:space="preserve">
          <source>The provider for the FreeBSD platform.</source>
          <target state="translated">FreeBSD 플랫폼의 프로 바이더</target>
        </trans-unit>
        <trans-unit id="171fe1b42eba9bdaf03eba5c971da0b4634416f0" translate="yes" xml:space="preserve">
          <source>The provider for the Gentoo platform.</source>
          <target state="translated">젠투 플랫폼의 공급자.</target>
        </trans-unit>
        <trans-unit id="b98ccb06c399e8db9d68a8742102f282596fcefa" translate="yes" xml:space="preserve">
          <source>The provider for the Gentoo platform. Can be used with the &lt;code&gt;options&lt;/code&gt; attribute.</source>
          <target state="translated">젠투 플랫폼의 공급자. &lt;code&gt;options&lt;/code&gt; 속성 과 함께 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="ffb0c132d799b822dd7c1e5bcb75e82917afc958" translate="yes" xml:space="preserve">
          <source>The provider for the Mac OS X platform.</source>
          <target state="translated">Mac OS X 플랫폼 제공 업체.</target>
        </trans-unit>
        <trans-unit id="57c512edc7b2bffeec6a6515a953d01abcf4b086" translate="yes" xml:space="preserve">
          <source>The provider for the Microsoft Windows platform.</source>
          <target state="translated">Microsoft Windows 플랫폼의 공급자입니다.</target>
        </trans-unit>
        <trans-unit id="41508815cf013b96452a4e415b3e21c9dc2d9305" translate="yes" xml:space="preserve">
          <source>The provider for the OpenBSD platform.</source>
          <target state="translated">OpenBSD 플랫폼의 제공자.</target>
        </trans-unit>
        <trans-unit id="8d6185e726bd73d5eb4de5e034d94a457f252161" translate="yes" xml:space="preserve">
          <source>The provider for the Paludis platform.</source>
          <target state="translated">Paludis 플랫폼의 공급자입니다.</target>
        </trans-unit>
        <trans-unit id="af1968882799d0852079dab64f05a13d7ccf4f4a" translate="yes" xml:space="preserve">
          <source>The provider for the Perl command interpreter.</source>
          <target state="translated">Perl 명령 인터프리터의 제공자입니다.</target>
        </trans-unit>
        <trans-unit id="9e84398a44ad05021a9d896103b933ba0b1a24a7" translate="yes" xml:space="preserve">
          <source>The provider for the Python command interpreter.</source>
          <target state="translated">Python 명령 인터프리터의 제공자입니다.</target>
        </trans-unit>
        <trans-unit id="ccfacc14b29d1a6de3726007f7ba0df962df7831" translate="yes" xml:space="preserve">
          <source>The provider for the RPM Package Manager platform. Can be used with the &lt;code&gt;options&lt;/code&gt; attribute.</source>
          <target state="translated">RPM 패키지 관리자 플랫폼의 공급자입니다. &lt;code&gt;options&lt;/code&gt; 속성 과 함께 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="af94c9a037c53644c8c19bf88b7383931cbadb1b" translate="yes" xml:space="preserve">
          <source>The provider for the Red Hat and CentOS platforms.</source>
          <target state="translated">Red Hat 및 CentOS 플랫폼의 제공자입니다.</target>
        </trans-unit>
        <trans-unit id="bc24696393b6474f7e77bbe6cb1a684ff1f6b6e3" translate="yes" xml:space="preserve">
          <source>The provider for the Ruby command interpreter.</source>
          <target state="translated">Ruby 명령 인터프리터의 제공자입니다.</target>
        </trans-unit>
        <trans-unit id="9bf315ade8b0494b7c56bdcc79f4bac61752d42f" translate="yes" xml:space="preserve">
          <source>The provider for the SmartOS platform.</source>
          <target state="translated">SmartOS 플랫폼의 제공자입니다.</target>
        </trans-unit>
        <trans-unit id="5613db678ff6657b87ce53da8e038339bfa8d333" translate="yes" xml:space="preserve">
          <source>The provider for the Solaris platform.</source>
          <target state="translated">Solaris 플랫폼의 공급자입니다.</target>
        </trans-unit>
        <trans-unit id="3974b333dad4e7f11aa0ba76067e27460a9ecef9" translate="yes" xml:space="preserve">
          <source>The provider for the Yum package provider.</source>
          <target state="translated">Yum 패키지 공급자의 공급자입니다.</target>
        </trans-unit>
        <trans-unit id="1aacdabec0bf1d010e63b6ee61b2be97f46b7d25" translate="yes" xml:space="preserve">
          <source>The provider for the csh command interpreter.</source>
          <target state="translated">csh 명령 인터프리터의 제공자입니다.</target>
        </trans-unit>
        <trans-unit id="a5a326f6b8c80e6f3adcb680cd6d2881eadde1af" translate="yes" xml:space="preserve">
          <source>The provider for the dpkg platform. Can be used with the &lt;code&gt;options&lt;/code&gt; attribute.</source>
          <target state="translated">dpkg 플랫폼의 공급자입니다. &lt;code&gt;options&lt;/code&gt; 속성 과 함께 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="b96feb8498d26f8cf6e59efc8b17ce7a6e2378ce" translate="yes" xml:space="preserve">
          <source>The provider for the gpasswd command.</source>
          <target state="translated">gpasswd 명령의 제공자.</target>
        </trans-unit>
        <trans-unit id="10af6bca5c6249c6df44d1208b803f45f2b69d3f" translate="yes" xml:space="preserve">
          <source>The provider for the groupadd command.</source>
          <target state="translated">groupadd 명령의 제공자입니다.</target>
        </trans-unit>
        <trans-unit id="94bc2477b5515cd1cce74098889cbf40615b0e79" translate="yes" xml:space="preserve">
          <source>The provider for the groupmod command.</source>
          <target state="translated">groupmod 명령의 제공자입니다.</target>
        </trans-unit>
        <trans-unit id="80831d022b37f5f932d49448b2a329ae52afdb5b" translate="yes" xml:space="preserve">
          <source>The provider for the ips platform.</source>
          <target state="translated">ips 플랫폼의 공급자입니다.</target>
        </trans-unit>
        <trans-unit id="8a9179297bb316c84f97652e5805ff3b098854c0" translate="yes" xml:space="preserve">
          <source>The provider for the ksh command interpreter.</source>
          <target state="translated">ksh 명령 인터프리터의 제공자입니다.</target>
        </trans-unit>
        <trans-unit id="94c63ed5daf7891ac6907b67ac36d6ba2e2562ba" translate="yes" xml:space="preserve">
          <source>The provider for the openSUSE platform.</source>
          <target state="translated">openSUSE 플랫폼의 제공자입니다.</target>
        </trans-unit>
        <trans-unit id="0f68a3ca870e7360f97cbf9cf2f30e51e1e11eb8" translate="yes" xml:space="preserve">
          <source>The provider that is used to manage BSD-based init services on AIX.</source>
          <target state="translated">AIX에서 BSD 기반 초기화 서비스를 관리하는 데 사용되는 제공자.</target>
        </trans-unit>
        <trans-unit id="ddb17b15d1dfb1bbef653e6a9b92b80d84910c88" translate="yes" xml:space="preserve">
          <source>The provider that is used when Upstart is available on the platform.</source>
          <target state="translated">플랫폼에서 Upstart를 사용할 수있을 때 사용되는 제공자입니다.</target>
        </trans-unit>
        <trans-unit id="b3ef139ec25eb18b50f05d1ea2e8ea2167c43414" translate="yes" xml:space="preserve">
          <source>The provider that is used when systemd is available on the platform.</source>
          <target state="translated">시스템화 될 때 사용되는 제공자는 플랫폼에서 사용 가능합니다.</target>
        </trans-unit>
        <trans-unit id="b707fa3a5e3ac9f0fad0ff44d927bbc7a32e99f2" translate="yes" xml:space="preserve">
          <source>The provider that is used with the AIX platforms. Use the &lt;code&gt;service&lt;/code&gt; short name to start, stop, and restart services with System Resource Controller (SRC).</source>
          <target state="translated">AIX 플랫폼과 함께 사용되는 제공자. 사용 &lt;code&gt;service&lt;/code&gt; SRC (System Resource Controller)로 서비스를 시작, 중지 및 다시 시작 축약 이름을 .</target>
        </trans-unit>
        <trans-unit id="baa0c2582aa98b397c8b623f1532cce9745daffd" translate="yes" xml:space="preserve">
          <source>The proxy server for FTP connections.</source>
          <target state="translated">FTP 연결을위한 프록시 서버.</target>
        </trans-unit>
        <trans-unit id="1fbbbd142122d3c4eb92a8d1510a21887c11325b" translate="yes" xml:space="preserve">
          <source>The proxy server for HTTP connections. Default value: &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">HTTP 연결을위한 프록시 서버. 기본값 : &lt;code&gt;nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d4cc515582ab5c9940bacf83808c68720011785a" translate="yes" xml:space="preserve">
          <source>The proxy server for HTTP connections. Default value: &lt;code&gt;nil&lt;/code&gt;. For example:</source>
          <target state="translated">HTTP 연결을위한 프록시 서버. 기본 값 : &lt;code&gt;nil&lt;/code&gt; . 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="d502177af09d596e0853ba09ec025913ab42e747" translate="yes" xml:space="preserve">
          <source>The proxy server for HTTPS connections. (The hosted Chef server uses an HTTPS connection.) Default value: &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">HTTPS 연결을위한 프록시 서버. (호스트 Chef 서버는 HTTPS 연결을 사용합니다.) 기본값 : &lt;code&gt;nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="628b23ca3a44e0a5a2a8c4766de1b7c86d1c5b3e" translate="yes" xml:space="preserve">
          <source>The proxy server for HTTPS connections. Default value: &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">HTTPS 연결을위한 프록시 서버. 기본 값 : &lt;code&gt;nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0294ed02b9cce5b338e2aba8646e35260714bfc0" translate="yes" xml:space="preserve">
          <source>The proxy server for the node that is the target of a bootstrap operation.</source>
          <target state="translated">부트 스트랩 조작의 대상인 노드의 프록시 서버.</target>
        </trans-unit>
        <trans-unit id="e5505d6de89ccacc60be0d3f0b7bb07c31b38e14" translate="yes" xml:space="preserve">
          <source>The rabbitmq-management plugin password. Default value: &lt;code&gt;'chefrocks'&lt;/code&gt;.</source>
          <target state="translated">rabbitmq 관리 플러그인 비밀번호입니다. 기본값은 &lt;code&gt;'chefrocks'&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="f4597fa8ba26a92e190103859fbeb6bfe04044ce" translate="yes" xml:space="preserve">
          <source>The rabbitmq-management plugin port. Default value: &lt;code&gt;15672&lt;/code&gt;.</source>
          <target state="translated">rabbitmq 관리 플러그인 포트. 기본 값 : &lt;code&gt;15672&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="72cc9c2c46b601020b6905d06f9e843ca5f4dddf" translate="yes" xml:space="preserve">
          <source>The rabbitmq-management plugin user. Default value: &lt;code&gt;'rabbitmgmt'&lt;/code&gt;.</source>
          <target state="translated">rabbitmq 관리 플러그인 사용자 기본 값 : &lt;code&gt;'rabbitmgmt'&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f1324a4b07be44afa549c0e9a39e3c686e4a8d2b" translate="yes" xml:space="preserve">
          <source>The rebuilt node object from the current chef-client run, after it is updated for changes to cookbooks (attribute files and/or recipes), roles, and/or environments, and updated for any changes to the state of the node itself</source>
          <target state="translated">쿡북 (속성 파일 및 / 또는 레시피), 역할 및 / 또는 환경에 대한 변경 사항이 업데이트되고 노드 자체의 상태에 대한 변경 사항이 업데이트 된 후 현재 요리사 클라이언트 실행에서 재 빌드 된 노드 오브젝트</target>
        </trans-unit>
        <trans-unit id="8fcdb24be2e79cef599c5ba1ff0b9e7d708d1503" translate="yes" xml:space="preserve">
          <source>The recipe then does the following to:</source>
          <target state="translated">그런 다음 레시피는 다음을 수행합니다.</target>
        </trans-unit>
        <trans-unit id="e6fd3b4e677fe50b14cd3f2318c700a5853d649b" translate="yes" xml:space="preserve">
          <source>The recipe then uses the &lt;code&gt;variables&lt;/code&gt; attribute to find the values for &lt;code&gt;splunk_servers&lt;/code&gt; and &lt;code&gt;outputs_conf&lt;/code&gt;, before passing them into the template:</source>
          <target state="translated">그런 다음 레시피는 &lt;code&gt;variables&lt;/code&gt; 속성을 사용 하여 템플릿으로 전달하기 전에 &lt;code&gt;splunk_servers&lt;/code&gt; 및 &lt;code&gt;outputs_conf&lt;/code&gt; 의 값을 찾습니다 .</target>
        </trans-unit>
        <trans-unit id="3c8794b439dfd5e2fe2e93a50b5c71016bea805b" translate="yes" xml:space="preserve">
          <source>The recipe will be similar to the following:</source>
          <target state="translated">레시피는 다음과 유사합니다.</target>
        </trans-unit>
        <trans-unit id="de39726a3fb53bf074f4c838227e7c35c458ccb9" translate="yes" xml:space="preserve">
          <source>The recommended configuration utilizes the Linux logical volume manager (LVM) as the backing store for DRBD. This assumes that:</source>
          <target state="translated">권장 구성은 Linux 논리 볼륨 관리자 (LVM)를 DRBD의 백업 저장소로 사용합니다. 이것은 다음을 가정합니다.</target>
        </trans-unit>
        <trans-unit id="61fe7ee0e2adad39b87bd4ddf5679de419b13fb1" translate="yes" xml:space="preserve">
          <source>The recommended order in which registry key-specific methods should be used within a recipe is: &lt;code&gt;key_exists?&lt;/code&gt;, &lt;code&gt;value_exists?&lt;/code&gt;, &lt;code&gt;data_exists?&lt;/code&gt;, &lt;code&gt;get_values&lt;/code&gt;, &lt;code&gt;has_subkeys?&lt;/code&gt;, and then &lt;code&gt;get_subkeys&lt;/code&gt;.</source>
          <target state="translated">레시피 내에서 레지스트리 키 특정 방법을 사용해야하는 권장 순서는 다음과 같습니다. &lt;code&gt;key_exists?&lt;/code&gt; , &lt;code&gt;value_exists?&lt;/code&gt; , &lt;code&gt;data_exists?&lt;/code&gt; , &lt;code&gt;get_values&lt;/code&gt; , &lt;code&gt;has_subkeys?&lt;/code&gt; 그런 다음 &lt;code&gt;get_subkeys&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="507e1157a3d18f75bab03638964cee9aafd39347" translate="yes" xml:space="preserve">
          <source>The remote repository to use when synchronizing an existing clone.</source>
          <target state="translated">기존 클론을 동기화 할 때 사용할 원격 저장소입니다.</target>
        </trans-unit>
        <trans-unit id="9d5b93c44e4432542d6d289130a4f60eb5fc125e" translate="yes" xml:space="preserve">
          <source>The remote repository to use when synchronizing an existing clone. Default value: &lt;code&gt;origin&lt;/code&gt;.</source>
          <target state="translated">기존 클론을 동기화 할 때 사용할 원격 저장소입니다. 기본 값 : &lt;code&gt;origin&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="38866705daae3372b15d08063dd67c569a095f91" translate="yes" xml:space="preserve">
          <source>The request URL (&lt;code&gt;/organizations/exampleorg/data/firewall/nova_api&lt;/code&gt;)</source>
          <target state="translated">요청 URL ( &lt;code&gt;/organizations/exampleorg/data/firewall/nova_api&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="930f6565929a21a9a216afb31bcecd78f8a5ea55" translate="yes" xml:space="preserve">
          <source>The request method (&lt;code&gt;GET&lt;/code&gt;)</source>
          <target state="translated">요청 방법 ( &lt;code&gt;GET&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="277d0165a6c586bf872317e4aea3b71869cb5a40" translate="yes" xml:space="preserve">
          <source>The request method: &lt;code&gt;DELETE&lt;/code&gt;, &lt;code&gt;GET&lt;/code&gt;, &lt;code&gt;POST&lt;/code&gt;, or &lt;code&gt;PUT&lt;/code&gt;.</source>
          <target state="translated">요청 방법 : &lt;code&gt;DELETE&lt;/code&gt; , &lt;code&gt;GET&lt;/code&gt; , &lt;code&gt;POST&lt;/code&gt; 또는 &lt;code&gt;PUT&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6a0cc28c5c6c84b8bb3476ae6e96335f7f42b227" translate="yes" xml:space="preserve">
          <source>The request method: &lt;code&gt;DELETE&lt;/code&gt;, &lt;code&gt;GET&lt;/code&gt;, &lt;code&gt;POST&lt;/code&gt;, or &lt;code&gt;PUT&lt;/code&gt;. Default value: &lt;code&gt;GET&lt;/code&gt;.</source>
          <target state="translated">요청 방법 : &lt;code&gt;DELETE&lt;/code&gt; , &lt;code&gt;GET&lt;/code&gt; , &lt;code&gt;POST&lt;/code&gt; 또는 &lt;code&gt;PUT&lt;/code&gt; . 기본값 : &lt;code&gt;GET&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="465d66370dbbc2a938560f9b7ec3780e6b6268ee" translate="yes" xml:space="preserve">
          <source>The response contains the total number of rows that match the request and is similar to:</source>
          <target state="translated">응답에는 요청과 일치하는 총 행 수가 포함되며 다음과 유사합니다.</target>
        </trans-unit>
        <trans-unit id="812dad43551035e0832e15e9e12ab8bc677f4777" translate="yes" xml:space="preserve">
          <source>The response contains the updated inforamtion for the key, and is similar to:</source>
          <target state="translated">응답에는 키에 대한 업데이트 된 정보가 포함되며 다음과 유사합니다.</target>
        </trans-unit>
        <trans-unit id="39ec20e107a8e743d67bf00142d5907b96c52657" translate="yes" xml:space="preserve">
          <source>The response groups policies by name and revision and is similar to:</source>
          <target state="translated">응답은 이름과 개정으로 정책을 그룹화하며 다음과 유사합니다.</target>
        </trans-unit>
        <trans-unit id="5dd7f5d7d34f971fa8a029a5ddc236bce19a0503" translate="yes" xml:space="preserve">
          <source>The response is similar to:</source>
          <target state="translated">응답은 다음과 유사합니다.</target>
        </trans-unit>
        <trans-unit id="54455279bef2127e2f6628adc3b033f4344f9713" translate="yes" xml:space="preserve">
          <source>The response returns the information about the deleted key and is similar to:</source>
          <target state="translated">응답은 삭제 된 키에 대한 정보를 리턴하며 다음과 유사합니다.</target>
        </trans-unit>
        <trans-unit id="3d7ff44f087250c3bffa4e7d2462ee8f077c4130" translate="yes" xml:space="preserve">
          <source>The response will return a list of cookbooks that are required by the &lt;code&gt;run_list&lt;/code&gt; array contained in the request. The cookbooks that are returned are often the latest versions of each cookbook. Depending on any constraints present in the request or on dependencies a cookbook may have for specific cookbook versions, a request may not always return the latest cookbook version for each cookbook.</source>
          <target state="translated">응답은 &lt;code&gt;run_list&lt;/code&gt; 에 필요한 요리 책 목록을 반환합니다. 요청에 포함 된 배열에 . 반환되는 요리 책은 종종 각 요리 책의 최신 버전입니다. 요청에 존재하는 제약 조건이나 특정 요리 책 버전에 대한 요리 책이 가질 수있는 종속성에 따라 요청이 항상 각 요리 책에 대한 최신 요리 책 버전을 반환하지는 않습니다.</target>
        </trans-unit>
        <trans-unit id="1d53fb0a7fdebd3ad7c9285366680e04dc5d8e1c" translate="yes" xml:space="preserve">
          <source>The response will return an array of paths for objects that have been created, updated, or deleted since &lt;code&gt;NUM&lt;/code&gt;, similar to:</source>
          <target state="translated">응답은 다음과 유사하게 &lt;code&gt;NUM&lt;/code&gt; 이후에 작성, 업데이트 또는 삭제 된 오브젝트의 경로 배열을 리턴합니다 .</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
