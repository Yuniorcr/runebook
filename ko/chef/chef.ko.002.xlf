<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="chef">
    <body>
      <group id="chef">
        <trans-unit id="3b2be0e547407c7d99d7f57a6fcec80f63eb960a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Show cookbook data as JSON&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;요리 책 데이터를 JSON으로 표시&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0153a213091b761f82ceae8ebe9e8aa7400b32f8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Show cookbook data&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;요리 책 데이터 표시&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4e5f875cd9e8f12dc2d6496f01891cf10a11a0d3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Show cookbook versions&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;요리 책 버전 표시&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b5d0a4b5f0d7d300977f9fc7a744f639d076375a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Show environments as JSON&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;환경을 JSON으로 표시&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5fbc16800d0015ad3def980d5b6107e7e645dfd4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Show environments&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;쇼 환경&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c29bb009d22008080b17bf2af5ea0e8b209614b3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Show roles and environments&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;역할 및 환경 표시&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6e3cf30695596aa1ead6b3da60f2818dfc973ff9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Show the FQDN&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;FQDN 표시&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6d57c85bf911d1f0874e77763dbfc385d658776c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Show user data as JSON&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;사용자 데이터를 JSON으로 표시&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c8af31b6ca6263b812171e8a5fe742fd07d7831a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Show user data&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;사용자 데이터 표시&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ae291ebedfb039a3a98096c6fc2d4043639ea10e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Sourcing a file&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;파일 소싱&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b1effc3e27f618f897dc9768f3217db72c009b09" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Specify DSC code directly&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;DSC 코드를 직접 지정&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="840c76f12337d404517d7f6f6845cb1a7341237a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Specify DSC code using a Windows Powershell data file&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Windows Powershell 데이터 파일을 사용하여 DSC 코드 지정&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="886fbcf84d08d3528f6d4caede96ae569c490aa8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Specify a URL for the source attribute&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;소스 속성의 URL을 지정하십시오.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9b80cdd602eae057b7a7a46ee931686585cfc49a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Specify a boot protocol&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;부팅 프로토콜 지정&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="304c5d5edc43f235638d149011cccfe49c8c44e8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Specify a custom installation command sequence&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;사용자 정의 설치 명령 순서를 지정하십시오.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ee9e79568e08197a5278f419ba7a2f433d8a9ed0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Specify a log entry&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;로그 항목을 지정하십시오.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2ef7ba888eb2d3131cf4db12299198b042659016" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Specify a policy&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;정책 지정&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="242e8103b7e19b0e46f16ad7e845026332776b17" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Specify a static IP address&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;고정 IP 주소 지정&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="436c0bab624bc2a9fc2050720ea7178fd6845d5c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Specify local Windows file path as a valid URI&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;로컬 Windows 파일 경로를 유효한 URI로 지정하십시오.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="31478ac39b241695b0311b89632eb1b2644dd87e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Specify options when using GNU Wget&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;GNU Wget을 사용할 때 옵션 지정&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2c4982d01eb8939139dfbf7181f6acbaec07ac2f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Specify options when using cURL&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;cURL 사용시 옵션 지정&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7b01b428ece82ffdec6f89bfdb6b302be2b67b63" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Specify path and checksum&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;경로 및 체크섬 지정&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ad4eb1ed37f3be36555021674d387d514843368c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Specify the Homebrew user with a UUID&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;UUID를 사용하여 Homebrew 사용자 지정&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b6d5fb278c2e4f37a8917e9645685af9d4b3595f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Specify the Homebrew user with a string&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;문자열로 Homebrew 사용자를 지정하십시오.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ff26066a4e6f3bb242d49fe7abf5cd15a6f3e652" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Specify the shell type&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;쉘 유형을 지정하십시오&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5ef049961ec7ef2be03961f071371785bd2f1b99" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Start a run when the chef-client is running as a daemon&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;chef-client가 디먼으로 실행될 때 실행을 시작하십시오.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d7d7203e085165fd6fb2cdc0817299aaf2ac4c90" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Start a service manually&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;수동으로 서비스 시작&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7d7ad2160102e685d917a8439bfe0088cb43526f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Start a service, enable it&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;서비스를 시작하고 활성화하십시오&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="83c8fa8b9114befa465873edfae5b2d57e34c5be" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Start a service&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;서비스 시작&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5d7a23948c94df90860fb3250d29a56b293ebabc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Start the chef-client run&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;요리사 클라이언트 실행 시작&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="14fd59c561888f4f0085f690d2f516e7f6ed21fe" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Stash a file in a data bag&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;데이터 백에 파일 보관&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="61f0337374ebccb13cd3dee99bc222d2bcfcce6c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Stop a service, do stuff, and then restart it&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;서비스를 중지하고 작업을 수행 한 다음 다시 시작하십시오.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="01644764a2f47ca799b30bd1156ebdb792284925" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Stop, wait for the next run&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;멈춰, 다음 달리기를 기다려&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d8d3d31e458effd2208dd6a5500e23e8d1e502a0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Store certain settings&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;특정 설정 저장&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ec25970ef9c1a460096215a800e180c7a988300d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Symlink&lt;/strong&gt;&amp;mdash;Directories for shared and temporary files are removed from the checkout (&lt;code&gt;log&lt;/code&gt;, &lt;code&gt;tmp/pids&lt;/code&gt;, and &lt;code&gt;public/system&lt;/code&gt; by default). After this step, any needed directories (&lt;code&gt;tmp&lt;/code&gt;, &lt;code&gt;public&lt;/code&gt;, and &lt;code&gt;config&lt;/code&gt; by default) are created if they don&amp;rsquo;t already exist. This step is completed by symlinking shared directories into the current &lt;code&gt;release&lt;/code&gt;, &lt;code&gt;public/system&lt;/code&gt;, &lt;code&gt;tmp/pids&lt;/code&gt;, and &lt;code&gt;log&lt;/code&gt; directories, and then symlinking the &lt;code&gt;release&lt;/code&gt; directory to &lt;code&gt;current&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;Symlink&lt;/strong&gt; &amp;mdash; 공유 및 임시 파일의 디렉토리가 체크 아웃에서 제거됩니다 ( 기본적으로 &lt;code&gt;log&lt;/code&gt; , &lt;code&gt;tmp/pids&lt;/code&gt; 및 &lt;code&gt;public/system&lt;/code&gt; ). 이 단계 후에 필요한 디렉토리 ( 기본적으로 &lt;code&gt;tmp&lt;/code&gt; , &lt;code&gt;public&lt;/code&gt; 및 &lt;code&gt;config&lt;/code&gt; )가 없으면 작성됩니다. 이 단계는 공유 디렉토리를 현재 &lt;code&gt;release&lt;/code&gt; , &lt;code&gt;public/system&lt;/code&gt; , &lt;code&gt;tmp/pids&lt;/code&gt; 및 &lt;code&gt;log&lt;/code&gt; 디렉토리로 심볼릭 링크 한 다음 &lt;code&gt;release&lt;/code&gt; 디렉토리를 &lt;code&gt;current&lt;/code&gt; 로 심볼릭 링크하여 완료 됩니다.</target>
        </trans-unit>
        <trans-unit id="467a54820135f1a68555e042cb3958fa63aa866f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Synchronize cookbooks&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;요리 책 동기화&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="57552505bbaf1203868ac7ee94a0bc41f69133fb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Syntax&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Syntax&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6ee5924a611f312844593e121057adbc9f42c40d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;System Requirements&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;시스템 요구 사항&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="efefce1cdd9c554887f3822a7838088557c60dc2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Test a cookbook&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;요리 책 테스트&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="bdbd8a1dcf7a0b5085b8f9853693a061388be632" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Test an attribute value&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;속성 값 테스트&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="36955b62986672f2ab6599f9479605c11fd68f0e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Test the Handler&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;핸들러 테스트&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="39e0c7ee1184654424ef331bea504d6bec4b9555" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;The same recipe with breakpoints&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;중단 점과 동일한 레시피&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="71980c77647fd870c2e3749aa151ba00d0672a43" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;To add a hostname to /etc/hosts&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;/ etc / hosts에 호스트 이름을 추가하려면&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="33b38b0d33e764e57ce0005304ffb7a408762b4f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;To change a hostname&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;호스트 이름을 변경하려면&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7e78a9e9022e4f2300a1b5bd7ef2f21c6464d7d2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;To install a package&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;패키지를 설치하려면&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d747b914f6dc5d2674032d8ea3525df573a51cc3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;To install a partial minimum version&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;부분 최소 버전을 설치하려면&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1333951231808b664e56c108f9d335dd8da1fe05" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;To install a specific architecture&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;특정 아키텍처를 설치하려면&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9adc57ab35613ddb6d1511bd02ec99daf1595178" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;To install a specific version (even when older than the current)&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;특정 버전을 설치하려면 (현재 버전보다 오래된 경우에도)&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e90c3d61ea90ef83d1a980712ba7b3d536696e5d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;To install a specific version-release&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;특정 버전 릴리스를 설치하려면&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1ddbde1a0180914176539e0368f3c2cd0aad82f1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;To verify a hostname is resolvable&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;호스트 이름을 확인할 수 있는지 확인하려면&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7d6158a1507d6848336f0fca94c533fb3dab5ef3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;To verify if a hostname is a FQDN&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;호스트 이름이 FQDN인지 확인하려면&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a266fa4ea75ebb50f719615a7507990c6f9fdc1e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;To verify the FQDN is all lowercase&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;FQDN이 모두 소문자인지 확인하려면&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="699bd16cf41ffd2c621975f218053c5ecbc07acf" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Transfer a file from a URL&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;URL에서 파일 전송&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4c3972cbb2fcf364d3d018c4923020e804905252" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Transfer a file only when the remote source changes&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;원격 소스가 변경 될 때만 파일 전송&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d7ab4cb62edca262b286bd93c4bfb9fb1a57352d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Transfer a file&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;파일 전송&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6a213cf3ec9d0186fe7549eb4525b8b6f206085b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;UP TO 167 CCRs/Min (approx. 5,000 nodes):&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;최대 167 CCR / 분 (약 5,000 노드) :&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="eefad73bb1df06d8bac6720d07f4ccee4989103d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;UP TO 33 CCRs/Min (approx. 1,000 nodes):&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;최대 33 CCR / 분 (약 1,000 개 노드) :&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9c6e8f1a5207cd2bafadb18e32114ad383a1fd30" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;UP TO 333 CCRs/Min (Approx. 10,000 nodes):&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;최대 333 CCR / 분 (약 10,000 개 노드) :&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="418bc5892336113da96416990cd07352aa1e702e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;UP TO 667 CCRs/Min (Approx. 20,000 nodes):&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;최대 667 CCR / 분 (약 20,000 개 노드) :&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8bcaa21a280c6711924e87a29a3bf7c64bfdb7d9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Unmount a remote folder in Microsoft Windows&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Microsoft Windows에서 원격 폴더 마운트 해제&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b0e31d06778eba954aa4323cfd3e611410b9fad2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Unshare a cookbook version&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;요리 책 버전 공유&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="573f77348dbd8268ccf12b42c3c16cc41ded70c4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Unshare a cookbook&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;요리 책 공유 해제&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="84d2d84205035cdcf5a695bc9a73bbe62fc757a4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Unverified&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Unverified&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="bc26b6080020a8ad961456192931ffd29f7881b3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Unzip a file, and then move it&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;파일의 압축을 풀고 이동&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ae06af15be0a1ada26912ea0bf85d3e403d73ee4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Update a package cache&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;패키지 캐시 업데이트&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1490c05774d94556da0378413dea1dde736debeb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Update a static IP address with a boot protocol&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;부팅 프로토콜로 고정 IP 주소 업데이트&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="211ae3dd7e6ef0582efa903b1b92edb03743dd6b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Update if not already updated&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;아직 업데이트되지 않은 경우 업데이트&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f92e0e69e5082a5e33d4587b39652bcf1f98672e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Update the /etc/hosts file&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;/ etc / hosts 파일을 업데이트하십시오&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="96591c57f351c4c9702a6802ad80718e51456e49" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Update the Apt repository at a specified interval&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;지정된 간격으로 Apt 저장소 업데이트&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c1aa0858023e9095e6de6d02ec211ecb047c296f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Update the Apt repository at the start of a chef-client run&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;chef-client 실행 시작시 Apt 저장소 업데이트&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0b87f6a1347fe3a5d3ed4f7f9c87a30c2819df84" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Update the Chef server URL&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Chef 서버 URL 업데이트&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0ce4bec53da277ebbc279effb2846deba9ef6380" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Update the node object, process exception and report handlers&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;노드 오브젝트 업데이트, 예외 처리 및 보고서 핸들러&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="200627b0eb37efd54845f9a6bd7c0133da5e8d51" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Update&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Update&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e4a805f68a3b8b920e208b016e9d64191106c1a0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Upgrade a package&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;패키지 업그레이드&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0596e18be62466b4b9a2ea5ba7c3ac4bfe7b244d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Upgrade all nodes&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;모든 노드를 업그레이드&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5241cff71d0d44ec71e7f448df02b76084755207" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Upgrade packages from git&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;git에서 패키지 업그레이드&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a9bf08b33b53328d58ec3022af81a7dc1ee315dc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Upload a cookbook&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;요리 책 업로드&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3bdae7ce643125bc7fd77b0b7d230bf270a1dea8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Upload a single environment&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;단일 환경 업로드&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5bc4f177bcb83309fadc95016576185534488eb3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Upload cookbooks and roles&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;요리 책과 역할 업로드&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3b6110c83b8f8fa0dbd394e801321433c73aeea5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Upload the /cookbooks directory&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;/ cookbooks 디렉토리를 업로드하십시오.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6c4e87bb63fe847cf1c3ec5589570d3df622dbf4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Upload the /environments directory&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;/ environments 디렉토리를 업로드하십시오.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8d8218c0e521c46ad1f470058d2ea6ed89a05dbf" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Upload the /roles directory&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;/ roles 디렉토리를 업로드하십시오.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="154121020aaeb4f69022732944375a5266378b66" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Upload the entire chef-repo&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;전체 요리사-레포 업로드&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="336f11c0f52fd3ae40a51f2731124483020d3f35" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Use Downloads&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;다운로드 사용&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c7dfb59f73e72fa2bd97f0c13d2f377440e0e3a4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Use Local Packages&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;로컬 패키지 사용&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="da1ebb771199c588e863c5050aadc02bfdad1bd0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Use SALTED-SHA512 passwords&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;SALTED-SHA512 비밀번호 사용&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c1abaac4be3d34885a319e88bd50489066cbdc03" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Use SALTED-SHA512-PBKDF2 passwords&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;SALTED-SHA512-PBKDF2 비밀번호 사용&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0c45551085f64b5dfac51123cfdd3c1143a4c5bd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Use a URL for cookbook and JSON data&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;요리 책 및 JSON 데이터에 URL 사용&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="af5ac324393fa52aeff0d97ef59fc6a44009f799" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Use a URL&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;URL 사용&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e7c49550828552e2cababc18822576f9244d8932" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Use a callback to include a file that will be passed as a code block&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;콜백을 사용하여 코드 블록으로 전달 될 파일 포함&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="dbabb460c24ea478cc3d8b7713ca6b12b83a94b6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Use a callback to pass a code block&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;콜백을 사용하여 코드 블록 전달&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7807ece1833096b6ed1731c1e3f3afe19ab8b729" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Use a case statement to specify the platform&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;case 문을 사용하여 플랫폼을 지정하십시오.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1fa9b08e3b7b5c0a4168db0905b1390a2b8719e9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Use a case statement&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;사례 진술 사용&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f5a1daecba73f8b7cea2b033b23ae95f0356b25c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Use a cron timer to manage a service&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;크론 타이머를 사용하여 서비스 관리&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="cac1626d5cac7a2dec95f6e2e5faab80c6958d3e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Use a directory&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;디렉토리를 사용하십시오&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="28d388ee719991ac9d3ad9dd390364210426031d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Use a file that contains a private key&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;개인 키가 포함 된 파일을 사용하십시오.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c165a9059063fe84c2e3cb6fbb382083011b7021" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Use a named provider to run a script&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;명명 된 공급자를 사용하여 스크립트 실행&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="93eab39bad131fbb67b2773155efd01194bb49aa" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Use a pattern&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;패턴 사용&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b16ba02d282a10768be025123519aa22fa180b77" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Use a relative path&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;상대 경로 사용&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0b6a7690f772839f7ebe3c0e9f8cff81d4dde0ad" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Use a specific binary for a specific platform&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;특정 플랫폼에 특정 바이너리 사용&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="40546c2cb1e6bb543cb51465584eb5503e0fe17a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Use a test query&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;테스트 쿼리 사용&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="292482a54c2e7e5bf62e89871936ac3b87726be9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Use a whitespace array (%w)&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;공백 배열 사용 (% w)&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="db788683d66efbb86449e95161ec1162ae41abd9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Use a whitespace array to simplify a recipe&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;공백 배열을 사용하여 레시피 단순화&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="17b23ba21a96af3d3ef429d97f56642dbb6f3311" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Use a wildcard&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;와일드 카드 사용&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f2d3efe26eeea96f452548d3d86fc51ef08ceda7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Use an SSH password&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;SSH 비밀번호 사용&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="713559e21c14c85d6e1a508e0a6c63387014c805" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Use an SSH wrapper&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;SSH 래퍼 사용&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e92f993eb1e949559eb57420585d7b621bf4d190" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Use an if statement with the platform recipe DSL method&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;플랫폼 레시피 DSL 방법과 함께 if 문 사용&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f545315790567fa638cf95026c8984ef1da75652" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Use custom configuration data&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;사용자 정의 구성 데이터 사용&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8586f2100085cdd00cfef3d25e738a34b686af45" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Use different branches&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;다른 가지를 사용하십시오&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5b0648dc1d7c68aafce1163508e352a80247eee9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Use output of knife deps to pass command to knife upload&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;나이프 뎁의 출력을 사용하여 나이프 업로드에 명령 전달&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3945419ccc6c28216c96736f4e9929b369e8586c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Use output of knife list and Perl&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;나이프 목록 및 Perl 출력 사용&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="aade64e22d816afe7c3ff1e4efd2e6b9b7f7585d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Use re-directed keys&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;방향 전환 키 사용&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8e1820e8c8b8c729066064b72f07b28efc89ed75" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Use resources within callbacks&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;콜백 내에서 리소스 사용&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e695decde1c04660a0655422c87d4a7bac813c55" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Use symbols to reference attributes&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;기호를 사용하여 속성 참조&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0d533011187c7d106e91375090ac57e019c1ef9c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Use the :nothing action&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;: nothing 액션 사용&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="80da7e06256b467239f8aca3b2ba15a1fc62398b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Use the :nothing common action&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;: nothing 공통 조치 사용&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3672199a1cbbe6569c5b5f56929da15ae1b3131f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Use the chef_gem resource for Ruby gems&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;루비 젬에 chef_gem 리소스 사용&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2b8ffc97ab9f73a072bb9a590c4b0c99851c5d04" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Use the contents of a data bag in a recipe&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;레시피에 데이터 백의 내용물 사용&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f09ca5a9984ce7c39fae9234a4344187592ddb94" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Use the flags attribute&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;flags 속성을 사용하십시오.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="74c8005bafed0697f30bbe143436b3d21b65f066" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Use the git mirror&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;자식 거울 사용&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a18723a2a673fe472aea44f2a4f5e00d8b47b994" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Use the ignore_failure common attribute&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;ignore_failure 공통 속성을 사용하십시오.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="def8426cc44f461cef3344e73a9e0eac247bd725" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Use the ignore_failure common property&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;ignore_failure 공통 특성을 사용하십시오.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6eac5722b34a1b8224ebf618d80a78226b30f573" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Use the not_if condition&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;not_if 조건을 사용하십시오.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4eedadedee2389622e742b08767a76d867179cbc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Use the only_if condition&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;only_if 조건을 사용하십시오.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2383c91af65c73de1af968f112e77d760d63b2d6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Use the platform_family? method&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;platform_family를 사용 하시겠습니까? 방법&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f80b2f730707258955ad13396f1557399dd0b127" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Use the provider common attribute&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;제공자 공통 속성 사용&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a8c5d14593b52d7b360ad078903a396d2f2a8c6e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Use the provider common property&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;공급자 공통 속성 사용&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="31eb7a73abc42edb980e263ff32801f1971aa0e5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Use the same API for all recipes using the same gem&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;동일한 보석을 사용하는 모든 레시피에 대해 동일한 API를 사용하십시오.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="140963f3137e7f846de6dc53022e1b3ca6ee954f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Use the search recipe DSL method to find users&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;검색 레시피 DSL 방법을 사용하여 사용자 찾기&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="01ab6383bb81d7751fdae202e3f88f53c9239f53" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Use the supports and providers common attributes&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;지원 및 제공자 공통 속성 사용&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="929406e38ac388037954a7f19bc26ffd13208685" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Use the supports and providers common properties&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;지원 및 제공자 공통 특성 사용&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="23055e922ef453290704a0d06cc47daa8cf549e3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Use the supports common attribute&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;지원 공통 속성 사용&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f34e4db8656250b7ab0f50c74398503c6476fff9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Use the supports common property&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;지지 공통 속성 사용&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="82f7b907cf3f34df92b9fcd30beb5ce0af39361a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Use with the chef_handler lightweight resource&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;chef_handler 경량 자원과 함께 사용&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c56fe6d6d1a547760070a3d3311bdb5ea6cc2a27" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Using DSC with other Chef resources&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;다른 Chef 리소스와 함께 DSC 사용&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7c3b17f4521fcafabfc056e64c50cfed6db76302" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Verified&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Verified&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="465e4b7fa460f2cc6b96c910b3340d8ba1f84cb2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Verify Checksums&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;체크섬 확인&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e25a565ecc16a9f9c16ae399aedba2f0902e5bbd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Verify a package is installed&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;패키지가 설치되어 있는지 확인&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="67ec2f457f6a680535e434544464429065048d63" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Verify an external server&amp;rsquo;s SSL certificate&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;외부 서버의 SSL 인증서 확인&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2cafecb11fd76c6caead4b927b926e267cd2fed1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Verify the SSL configuration for the chef-client&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;chef-client의 SSL 구성 확인&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b625b2dc06feb53837c32059d28ef150eb3cefd6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;View a client&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;고객보기&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a8b24275de0466fc15e8c9776f10e4b241271321" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;View a list of clients&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;고객 목록보기&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4519cca6fbb8e61f748400152b66d64f7b933d4a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;View a list of cookbooks&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;요리 책 목록보기&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b5424058ef877e5a3d3bc57f30473c1bd60633e3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;View a list of data bags&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;데이터 백 목록보기&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="66b2d3e1f40f3557164e89d0b7ba307510e4131c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;View a list of environments&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;환경 목록을 봅니다.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="dade4f0b76efbb90372e44d4b8593face70e06fd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;View a list of nodes&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;노드 목록을 봅니다.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f1848b205dd3df01eec53cbb57f3d084beaa5ba1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;View a list of recipes&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;레시피 목록보기&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1af9bd3866251b2929eaca64c743b52692abd72f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;View a list of roles&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;역할 목록보기&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6ff66b003c463f65c158c3d9ee9d4ef9a92fecf9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;View a list of tags&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;태그 목록보기&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="09371b53d90d223053d5b828749bab296bf56153" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;View a node&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;노드보기&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0b7f6e251e93726a8e93a14b784697e9dce3d701" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;View metadata&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;메타 데이터보기&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="60e2957debb34706a0811137e6b9caa3d200f760" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;View security groups data&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;보안 그룹 데이터보기&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0132ec0aa597de647db42a5cbb711e0ca4303be7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;View status for all nodes&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;모든 노드의 상태보기&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="108aa85c0dd657bc5f8aa550a2545331ea9a34e5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;View status using a date range&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;날짜 범위를 사용하여 상태보기&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="eff5550cd3fcb6b0f2ce57d33b59beb9cfd4fa07" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;View status using a query&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;쿼리를 사용하여 상태보기&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="012b80c43818c73a9c38f224a6a1d390f267219c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;View status, include run-lists&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;상태보기, 실행 목록 포함&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0e090f20a8b6231904b65f7a31f5757a3ad1e076" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Wildcard Match&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;와일드 카드 일치&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="efb16df613bbe0aceb96f114f84da1f0d617e52a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Write a YAML file&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;YAML 파일 작성&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a23f59566d3521b9c9793e33cbb9fa12905ac9cc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Write a string to a file&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;파일에 문자열 쓰기&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f04c3a50beb17e5056cfe5837e6198b36f86709a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Write to an interpolated path&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;보간 경로에 쓰기&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c6a4916b05d606f213280e84238ef0dbe27b4a27" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;apt_package&lt;/strong&gt; and &lt;strong&gt;dpkg_package&lt;/strong&gt; resources only. A Hash of response file variables in the form of &lt;code&gt;{&quot;VARIABLE&quot; =&amp;gt; &quot;VALUE&quot;}&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;apt_package&lt;/strong&gt; 및 &lt;strong&gt;dpkg_package&lt;/strong&gt; 자원 만 해당됩니다. &lt;code&gt;{&quot;VARIABLE&quot; =&amp;gt; &quot;VALUE&quot;}&lt;/code&gt; 형식의 응답 파일 변수 해시 .</target>
        </trans-unit>
        <trans-unit id="fd0d8e48b5655bb51cb833afe38223892bfb7e11" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;apt_package&lt;/strong&gt; and &lt;strong&gt;dpkg_package&lt;/strong&gt; resources only. The direct path to the file used to pre-seed a package.</source>
          <target state="translated">&lt;strong&gt;apt_package&lt;/strong&gt; 및 &lt;strong&gt;dpkg_package&lt;/strong&gt; 자원 만 해당됩니다. 패키지를 미리 시드하는 데 사용되는 파일의 직접 경로입니다.</target>
        </trans-unit>
        <trans-unit id="d4df5facd8e48bb7a0c16b849ddd0011c1a37097" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;apt_package&lt;/strong&gt; resource only. The default release. For example: &lt;code&gt;stable&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;apt_package&lt;/strong&gt; 리소스 만 해당 기본 릴리스. 예를 들어, &lt;code&gt;stable&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="87d2d59f083ab9ef4f5da28949701237a20cc43e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;attribute?&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;attribute?&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c7a324e0ddc403b23cf1834a37c689b278c4cfb4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;bookshelf&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;bookshelf&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="342a8c42f31ae205687c3192b4c7845c13498d69" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;chef-client communication with the Chef server&lt;/strong&gt; Every node that will be configured by the chef-client and every workstation that will upload data to the Chef server must be able to communicate with the Chef server</source>
          <target state="translated">&lt;strong&gt;Chef 서버와의 요리사 클라이언트 통신 Chef 서버에&lt;/strong&gt; 데이터를 업로드 할 요리사 클라이언트 및 모든 워크 스테이션이 구성 할 모든 노드는 Chef 서버와 통신 할 수 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="cd044635d0cc5404d9285527b6ecd49f5b62d929" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;control_group block with multiple control blocks&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;여러 제어 블록이있는 control_group 블록&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="12d000e4cfaf52c2aa46ed024de41b8e9e9d3849" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;cron&lt;/strong&gt; &amp;mdash; Periodic maintenance tasks are performed using cron</source>
          <target state="translated">&lt;strong&gt;cron&lt;/strong&gt; &amp;mdash; &lt;strong&gt;cron을&lt;/strong&gt; 사용하여 정기적 인 유지 관리 작업이 수행됩니다.</target>
        </trans-unit>
        <trans-unit id="555e4b795d45d74bf6dc3af47242239bb5650bf2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;git&lt;/strong&gt; &amp;mdash; git must be installed so that various internal services can confirm revisions</source>
          <target state="translated">&lt;strong&gt;git&lt;/strong&gt; &amp;mdash; 다양한 내부 서비스가 개정을 확인할 수 있도록 git을 설치해야합니다.</target>
        </trans-unit>
        <trans-unit id="8fb4fe615466345b42720bf67ffb656b438945f5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;homebrew_package&lt;/strong&gt; resource only. The name of the Homebrew owner to be used by the chef-client when executing a command.</source>
          <target state="translated">&lt;strong&gt;homebrew_package&lt;/strong&gt; 리소스 만 해당합니다. 명령을 실행할 때 chef-client가 사용하는 Homebrew 소유자의 이름입니다.</target>
        </trans-unit>
        <trans-unit id="71eb7c8a94779822ddedb3907283ba53dbab62e8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;keepalived&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;keepalived&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="36017371cd28644785a6b7761b2ed03bb0a4c23a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;libfreetype and libpng&lt;/strong&gt; &amp;mdash; These libraries are required</source>
          <target state="translated">&lt;strong&gt;libfreetype 및 libpng&lt;/strong&gt; &amp;mdash;이 라이브러리는 필수입니다</target>
        </trans-unit>
        <trans-unit id="aa09b03957501cec8266738d397a9420dfc3838e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;nginx&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;nginx&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0541482b9aa7eafadc9d052b947f9dc1be4df3ae" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;oc-id&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;oc-id&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="85637abca5b9e94b4dc6a4e7174b684fb34c4867" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;oc_bifrost&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;oc_bifrost&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9e02980f1f1891331a2b8a155046d1366954d9c2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;opscode-erchef&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;opscode-erchef&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="08c9453ac05e502b4e6277b5a9a4572c4adba0d2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;opscode-expander&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;opscode-expander&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7bf557140bdfcb22d0684846d3b63f523fb968ce" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;opscode-solr4&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;opscode-solr4&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4b8448c0cd65d8576e5b5d491d20182986652632" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;postgresql&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;postgresql&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6a1440f5b4bca31234057df7fd82eee93766746f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;rabbitmq&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;rabbitmq&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="13b6a7cf9e644a04bda8e49d685c81a76278ce0b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;redis_lb&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;redis_lb&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f09ac2bed049a56f4d9fbf29a3255c71670e893b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;yum_package&lt;/strong&gt; resource only. Downgrade a package to satisfy requested version requirements. Default value: &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;yum_package&lt;/strong&gt; 리소스 만. 요청 된 버전 요구 사항을 충족하도록 패키지를 다운 그레이드하십시오. 기본 값 : &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9e8838ec1bc3efa1e10e973e2355bca18bf52d5d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;yum_package&lt;/strong&gt; resource only. The architecture of the package to be installed or upgraded. This value can also be passed as part of the package name.</source>
          <target state="translated">&lt;strong&gt;yum_package&lt;/strong&gt; 리소스 만. 설치 또는 업그레이드 할 패키지의 아키텍처입니다. 이 값은 패키지 이름의 일부로 전달 될 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="8b53aa2ec2e6eead309952b56265b0e4d47e40bd" translate="yes" xml:space="preserve">
          <source>A &amp;ldquo;chef-client run&amp;rdquo; is the term used to describe a series of steps that are taken by the chef-client when it is configuring a node. The following diagram shows the various stages that occur during the chef-client run, and then the list below the diagram describes in greater detail each of those stages.</source>
          <target state="translated">&quot;chef-client run&quot;은 노드를 구성 할 때 chef-client가 수행하는 일련의 단계를 설명하는 데 사용되는 용어입니다. 다음 다이어그램은 chef-client 실행 중에 발생하는 다양한 단계를 보여주고 다이어그램 아래의 목록은 각 단계에 대해 자세히 설명합니다.</target>
        </trans-unit>
        <trans-unit id="b188c1a0dbab7a373547e6a6704ab65751901d77" translate="yes" xml:space="preserve">
          <source>A 3rd-party formatter. (See &lt;a href=&quot;https://github.com/andreacampi/nyan-cat-chef-formatter&quot;&gt;nyan-cat&lt;/a&gt; for an example of a 3rd-party formatter.) Each formatter requires its own entry.</source>
          <target state="translated">타사 포맷터 타사 포맷터의 예는 &lt;a href=&quot;https://github.com/andreacampi/nyan-cat-chef-formatter&quot;&gt;nyan-cat&lt;/a&gt; 을 참조하십시오 . 각 포맷터에는 고유 한 항목이 필요합니다.</target>
        </trans-unit>
        <trans-unit id="c0b5d96f3b01b153c2895a7106c87478311dbca5" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;http://jtimberman.housepub.org/blog/2014/09/02/chef-node-dot-debug-value/&quot;&gt;blog post by Joshua Timberman&lt;/a&gt; provides another example of using this method.</source>
          <target state="translated">&lt;a href=&quot;http://jtimberman.housepub.org/blog/2014/09/02/chef-node-dot-debug-value/&quot;&gt;Joshua Timberman&lt;/a&gt; 의 블로그 게시물은 이 방법을 사용하는 또 다른 예를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="32a53e6e82e5eb31b4fce4ff2db59d60a8207e54" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;case&lt;/code&gt; statement can be used to handle a situation where there are a lot of conditions. Use the &lt;code&gt;when&lt;/code&gt; statement for each condition, as many as are required.</source>
          <target state="translated">&lt;code&gt;case&lt;/code&gt; 문이 많은 조건이있는 상황을 처리하는 데 사용할 수 있습니다. 필요한만큼 각 조건에 대해 &lt;code&gt;when&lt;/code&gt; 문을 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="f47ae333f812ca1a2c0f0d53e354185bfabf3706" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;converge_if_changed&lt;/code&gt; block tests only &lt;code&gt;content&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;converge_if_changed&lt;/code&gt; 블록은 테스트 &lt;code&gt;content&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="cd408e90209c21608dc64129e13d0f17e116ab40" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;converge_if_changed&lt;/code&gt; block tests only &lt;code&gt;mode&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;converge_if_changed&lt;/code&gt; 블록은 테스트 &lt;code&gt;mode&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c642d213aefd430f0db6bf6b694b9906e9719dee" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;default&lt;/code&gt; attribute is automatically reset at the start of every chef-client run and has the lowest attribute precedence. Use &lt;code&gt;default&lt;/code&gt; attributes as often as possible in cookbooks.</source>
          <target state="translated">&lt;code&gt;default&lt;/code&gt; 속성마다 자동으로 요리사 클라이언트 실행의 시작에서 다시 가장 낮은 속성의 우선 순위가있다. 요리 책에서 최대한 자주 &lt;code&gt;default&lt;/code&gt; 속성을 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="f01a1e98fc205ed1a6e3b843b68121a425fc2a64" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;default&lt;/code&gt; attribute located in a cookbook attribute file</source>
          <target state="translated">&lt;code&gt;default&lt;/code&gt; 요리 책 속성 파일에있는 속성</target>
        </trans-unit>
        <trans-unit id="df4adb762ca36579beaf9d6d6af3b92004a64cbe" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;default&lt;/code&gt; attribute located in a recipe</source>
          <target state="translated">&lt;code&gt;default&lt;/code&gt; 조리법에있는 속성</target>
        </trans-unit>
        <trans-unit id="712f3cb669d493f2d1ad55b90cede173cb65f407" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;default&lt;/code&gt; attribute located in a role</source>
          <target state="translated">&lt;code&gt;default&lt;/code&gt; 역할에있는 속성</target>
        </trans-unit>
        <trans-unit id="642e601df04f9967c683140adef949f0e1aa8575" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;default&lt;/code&gt; attribute located in an environment</source>
          <target state="translated">&lt;code&gt;default&lt;/code&gt; 환경에있는 속성</target>
        </trans-unit>
        <trans-unit id="5d4d490fec48ca08e7bc06f73f8ed4ab56f4d541" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;force_default&lt;/code&gt; attribute located in a cookbook attribute file</source>
          <target state="translated">&lt;code&gt;force_default&lt;/code&gt; 의 요리 책 속성 파일에있는 속성</target>
        </trans-unit>
        <trans-unit id="fea9c8f998ccc72854e75054156d48a7bb320c93" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;force_default&lt;/code&gt; attribute located in a recipe</source>
          <target state="translated">&lt;code&gt;force_default&lt;/code&gt; 의 레시피에 위치한 속성</target>
        </trans-unit>
        <trans-unit id="2da09ce5133c46fcf884a6c1fb3b4a82d319095a" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;force_override&lt;/code&gt; attribute located in a cookbook attribute file</source>
          <target state="translated">&lt;code&gt;force_override&lt;/code&gt; 의 요리 책 속성 파일에있는 속성</target>
        </trans-unit>
        <trans-unit id="f64d821d361c70eca8b4a92660ae6d00c1ccd0c0" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;force_override&lt;/code&gt; attribute located in a recipe</source>
          <target state="translated">&lt;code&gt;force_override&lt;/code&gt; 의 레시피에 위치한 속성</target>
        </trans-unit>
        <trans-unit id="46e7a810ca2c4cb166d8a41b3a6926b3977a4251" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;node_name&lt;/code&gt; is different from the one used during the initial chef-client run. This can happen for a number of reasons. For example, if the client.rb file does not specify the correct node name and the host name has recently changed. This issue can be resolved by explicitly setting the node name in the client.rb file or by using the &lt;code&gt;-N&lt;/code&gt; option for the chef-client executable.</source>
          <target state="translated">&lt;code&gt;node_name&lt;/code&gt; 초기 요리사 클라이언트를 실행하는 동안 사용되는 다릅니다. 여러 가지 이유로 발생할 수 있습니다. 예를 들어, client.rb 파일이 올바른 노드 이름을 지정하지 않고 호스트 이름이 최근에 변경된 경우. 이 문제는 client.rb 파일에서 노드 이름을 명시 적으로 설정하거나 chef-client 실행 파일에 &lt;code&gt;-N&lt;/code&gt; 옵션을 사용하여 해결할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="c9f94c1f1f7e81738c4c3b09b49b77547dbbbe37" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;normal&lt;/code&gt; attribute is a setting that persists in the node object. A &lt;code&gt;normal&lt;/code&gt; attribute has a higher attribute precedence than a &lt;code&gt;default&lt;/code&gt; attribute.</source>
          <target state="translated">&lt;code&gt;normal&lt;/code&gt; 특성은 설정하고있는 노드 객체 고집. &lt;code&gt;normal&lt;/code&gt; 속성은보다 높은 속성의 우선 순위가 &lt;code&gt;default&lt;/code&gt; 속성을.</target>
        </trans-unit>
        <trans-unit id="5aa4889595fa4dbd44e819304d68e05c7ca2b040" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;normal&lt;/code&gt; attribute located in a cookbook attribute file</source>
          <target state="translated">&lt;code&gt;normal&lt;/code&gt; 요리 책 속성 파일에있는 속성</target>
        </trans-unit>
        <trans-unit id="74a650b93e97aeb78b7d664503f0714bdae0e26b" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;normal&lt;/code&gt; attribute located in a recipe</source>
          <target state="translated">&lt;code&gt;normal&lt;/code&gt; 제조법에 위치한 속성</target>
        </trans-unit>
        <trans-unit id="e972a4395c99bb519f814eff2daedc67160939e1" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;split-brain&lt;/code&gt; event is a concept of clustered computing systems in which the cluster loses its heartbeat communication channel and becomes two unconnected pieces. Recovery from a &lt;code&gt;split-brain&lt;/code&gt; event can be a complex issue and different clustering software packages use different methods.</source>
          <target state="translated">&lt;code&gt;split-brain&lt;/code&gt; 이벤트는 클러스터 하트 비트 통신 채널을 잃고이 개 연결되지 않은 조각이되고있는 클러스터 컴퓨팅 시스템의 개념이다. &lt;code&gt;split-brain&lt;/code&gt; 이벤트 에서 복구하는 것은 복잡한 문제 일 수 있으며 다른 클러스터링 소프트웨어 패키지는 다른 방법을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="90cbd955cb5deb6b3a3c2e7870acac82eb43ec37" translate="yes" xml:space="preserve">
          <source>A &lt;strong&gt;apt_package&lt;/strong&gt; resource block manages a package on a node, typically by installing it. The simplest use of the &lt;strong&gt;apt_package&lt;/strong&gt; resource is:</source>
          <target state="translated">&lt;strong&gt;apt_package의&lt;/strong&gt; 자원 블록은 일반적으로 설치하여, 노드에서 패키지를 관리합니다. &lt;strong&gt;apt_package&lt;/strong&gt; 리소스 의 가장 간단한 사용법 은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="188827f0045fa673959e63abd2aea1a177025b3f" translate="yes" xml:space="preserve">
          <source>A &lt;strong&gt;apt_update&lt;/strong&gt; resource block defines the update frequency for Apt repositories:</source>
          <target state="translated">&lt;strong&gt;apt_update의&lt;/strong&gt; 자원 블록은 아파트 저장소에 대한 업데이트 빈도를 정의합니다 :</target>
        </trans-unit>
        <trans-unit id="13d4b7ad2c42d516d92039b4cc81101f930a9375" translate="yes" xml:space="preserve">
          <source>A &lt;strong&gt;bash&lt;/strong&gt; resource block executes scripts using Bash:</source>
          <target state="translated">&lt;strong&gt;배시&lt;/strong&gt; 자원 블록 배시를 사용하는 스크립트를 실행한다 :</target>
        </trans-unit>
        <trans-unit id="05f9ff4c5701bf8a9d3c5266156155e57d5bb71d" translate="yes" xml:space="preserve">
          <source>A &lt;strong&gt;batch&lt;/strong&gt; resource block executes a batch script using the cmd.exe interpreter:</source>
          <target state="translated">&lt;strong&gt;배치&lt;/strong&gt; 자원 블록은 cmd.exe를 인터프리터를 사용하여 배치 스크립트를 실행합니다 :</target>
        </trans-unit>
        <trans-unit id="50a1fa37b028494f4064a84a8406dd50b468e4ad" translate="yes" xml:space="preserve">
          <source>A &lt;strong&gt;bff_package&lt;/strong&gt; resource block manages a package on a node, typically by installing it. The simplest use of the &lt;strong&gt;bff_package&lt;/strong&gt; resource is:</source>
          <target state="translated">&lt;strong&gt;bff_package의&lt;/strong&gt; 자원 블록은 일반적으로 설치하여, 노드에서 패키지를 관리합니다. &lt;strong&gt;bff_package&lt;/strong&gt; 리소스 의 가장 간단한 사용법 은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="75464a415bb28d329b4cc57b9cb7cc5c05e2204a" translate="yes" xml:space="preserve">
          <source>A &lt;strong&gt;breakpoint&lt;/strong&gt; resource block creates a breakpoint in a recipe:</source>
          <target state="translated">&lt;strong&gt;브레이크 포인트&lt;/strong&gt; 의 자원 블록은 레시피의 브레이크 포인트를 작성</target>
        </trans-unit>
        <trans-unit id="3843cd308ea6793042e9e0482cf118c4b3394eb9" translate="yes" xml:space="preserve">
          <source>A &lt;strong&gt;chef_gem&lt;/strong&gt; resource block manages a package on a node, typically by installing it. The simplest use of the &lt;strong&gt;chef_gem&lt;/strong&gt; resource is:</source>
          <target state="translated">&lt;strong&gt;chef_gem의&lt;/strong&gt; 자원 블록은 일반적으로 설치하여, 노드에서 패키지를 관리합니다. &lt;strong&gt;chef_gem&lt;/strong&gt; 자원 의 가장 간단한 사용법 은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="374e6ceca6d0758ca5f66c65573abfbc8fa89448" translate="yes" xml:space="preserve">
          <source>A &lt;strong&gt;chef_handler&lt;/strong&gt; resource block enables handlers during a chef-client run. Two handlers&amp;mdash;&lt;code&gt;JsonFile&lt;/code&gt; and &lt;code&gt;ErrorReport&lt;/code&gt;&amp;mdash;are built into Chef:</source>
          <target state="translated">&lt;strong&gt;chef_handler의&lt;/strong&gt; 자원 블록은 요리사 클라이언트를 실행하는 동안 핸들러를 할 수 있습니다. Chef에는 &lt;code&gt;JsonFile&lt;/code&gt; 과 &lt;code&gt;ErrorReport&lt;/code&gt; 라는 두 가지 핸들러가 내장되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="4ddc2cdcf03eb5c152c20387df5ffeb2748fd01e" translate="yes" xml:space="preserve">
          <source>A &lt;strong&gt;chocolatey_package&lt;/strong&gt; resource block manages packages using Chocolatey for the Microsoft Windows platform. The simplest use of the &lt;strong&gt;chocolatey_package&lt;/strong&gt; resource is:</source>
          <target state="translated">&lt;strong&gt;chocolatey_package의&lt;/strong&gt; 자원 블록은 Microsoft Windows 플랫폼을위한 Chocolatey을 사용하여 패키지를 관리합니다. &lt;strong&gt;chocolatey_package&lt;/strong&gt; 리소스 의 가장 간단한 사용법 은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="3da6885107c57f90a7ba361b5dee3de79a5bc89d" translate="yes" xml:space="preserve">
          <source>A &lt;strong&gt;cookbook_file&lt;/strong&gt; resource block manages files by using files that exist within a cookbook&amp;rsquo;s &lt;code&gt;/files&lt;/code&gt; directory. For example, to write the home page for an Apache website:</source>
          <target state="translated">&lt;strong&gt;cookbook_file&lt;/strong&gt; 자원 블록은 요리 책의 내에 존재하는 파일을 사용하여 파일을 관리 &lt;code&gt;/files&lt;/code&gt; 디렉토리. 예를 들어, Apache 웹 사이트의 홈 페이지를 작성하려면 다음을 수행하십시오.</target>
        </trans-unit>
        <trans-unit id="c942b811b11566f9615f64a2cf370dc555394ce2" translate="yes" xml:space="preserve">
          <source>A &lt;strong&gt;cron&lt;/strong&gt; resource block manage cron entries. For example, to get a weekly cookbook report from the Chef Supermarket:</source>
          <target state="translated">&lt;strong&gt;크론&lt;/strong&gt; 자원 블록은 크론 항목을 관리 할 수 있습니다. 예를 들어 Chef Supermarket에서 주간 요리 책 보고서를 얻으려면 다음을 수행하십시오.</target>
        </trans-unit>
        <trans-unit id="e868804e9f535e3e004e0f2a9404ce192f036866" translate="yes" xml:space="preserve">
          <source>A &lt;strong&gt;csh&lt;/strong&gt; resource block executes scripts using csh:</source>
          <target state="translated">&lt;strong&gt;CSH의&lt;/strong&gt; 자원 블록은 CSH를 사용하는 스크립트를 실행한다 :</target>
        </trans-unit>
        <trans-unit id="23f44f0a2a101fee131b154059c7a095906f3ad7" translate="yes" xml:space="preserve">
          <source>A &lt;strong&gt;deploy&lt;/strong&gt; resource block manages and controls deployments:</source>
          <target state="translated">&lt;strong&gt;배포&lt;/strong&gt; 리소스 블록 관리하고 제어 배포 :</target>
        </trans-unit>
        <trans-unit id="b424be7f2c9444c5d6fb1e4eb51cef088a464018" translate="yes" xml:space="preserve">
          <source>A &lt;strong&gt;directory&lt;/strong&gt; resource block declares a directory and the permissions needed on that directory. For example:</source>
          <target state="translated">&lt;strong&gt;디렉토리&lt;/strong&gt; 자원 블록은 디렉토리와 그 디렉토리에 필요한 권한을 선언한다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="93d7311dcd4ba2b20a6a3dd1a22802fb40efbd7d" translate="yes" xml:space="preserve">
          <source>A &lt;strong&gt;dpkg_package&lt;/strong&gt; resource block manages a package on a node, typically by installing it. The simplest use of the &lt;strong&gt;dpkg_package&lt;/strong&gt; resource is:</source>
          <target state="translated">&lt;strong&gt;dpkg_package의&lt;/strong&gt; 자원 블록은 일반적으로 설치하여, 노드에서 패키지를 관리합니다. &lt;strong&gt;dpkg_package&lt;/strong&gt; 리소스 의 가장 간단한 사용법 은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="2cebcc70690a18bfc5724dc34ded480b58ef5d05" translate="yes" xml:space="preserve">
          <source>A &lt;strong&gt;dsc_resource&lt;/strong&gt; resource block allows DSC resourcs to be used in a Chef recipe. For example, the DSC &lt;code&gt;Archive&lt;/code&gt; resource:</source>
          <target state="translated">&lt;strong&gt;dsc_resource의&lt;/strong&gt; 자원 블록은 DSC의 resourcs 주방장 제법에서 사용될 수있다. 예를 들어 DSC &lt;code&gt;Archive&lt;/code&gt; 리소스는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="c72888bffd9b44aecd617dbc62d4e9422b816e27" translate="yes" xml:space="preserve">
          <source>A &lt;strong&gt;dsc_script&lt;/strong&gt; resource block embeds the code that defines a DSC configuration directly within a Chef recipe:</source>
          <target state="translated">&lt;strong&gt;dsc_script의&lt;/strong&gt; 자원 블록 요리사 레시피 내에 직접 DSC의 구성을 정의하는 코드를 매립 :</target>
        </trans-unit>
        <trans-unit id="312b843e1420d9f02eb80fe44d6e2a32b6de8979" translate="yes" xml:space="preserve">
          <source>A &lt;strong&gt;easy_install_package&lt;/strong&gt; resource block manages a package on a node, typically by installing it. The simplest use of the &lt;strong&gt;easy_install_package&lt;/strong&gt; resource is:</source>
          <target state="translated">&lt;strong&gt;easy_install_package&lt;/strong&gt; 자원 블록은 일반적으로 설치하여, 노드에서 패키지를 관리합니다. &lt;strong&gt;easy_install_package&lt;/strong&gt; 자원 의 가장 간단한 사용법 은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="5cc9508d3739a5c17c60516c7ebc6ab212d4f56a" translate="yes" xml:space="preserve">
          <source>A &lt;strong&gt;env&lt;/strong&gt; resource block manages environment keys in Microsoft Windows:</source>
          <target state="translated">&lt;strong&gt;ENV의&lt;/strong&gt; 자원 블록은 Microsoft Windows의 환경 키를 관리합니다 :</target>
        </trans-unit>
        <trans-unit id="bff6bf041a00f36af8e59adcc5d383234f4d7e00" translate="yes" xml:space="preserve">
          <source>A &lt;strong&gt;erl_call&lt;/strong&gt; resource block connects to a node located within a distributed Erlang system:</source>
          <target state="translated">&lt;strong&gt;erl_call의&lt;/strong&gt; 자원 블록은 분산 얼랑 시스템 내에 위치 된 노드에 연결 :</target>
        </trans-unit>
        <trans-unit id="32c75ed62a7c4eed0a5fef2f5f7d2781d445c8e4" translate="yes" xml:space="preserve">
          <source>A &lt;strong&gt;execute&lt;/strong&gt; resource block typically executes a single command that is unique to the environment in which a recipe will run. Some &lt;strong&gt;execute&lt;/strong&gt; resource commands are run by themselves, but often they are run in combination with other Chef resources. For example, a single command that is run by itself:</source>
          <target state="translated">&lt;strong&gt;실행&lt;/strong&gt; 자원 블록은 일반적으로 레시피가 실행되는 환경에 고유 한 명령을 실행한다. 일부 &lt;strong&gt;실행&lt;/strong&gt; 리소스 명령은 자체적으로 실행되지만 종종 다른 Chef 리소스와 함께 실행됩니다. 예를 들어, 자체적으로 실행되는 단일 명령 :</target>
        </trans-unit>
        <trans-unit id="fe471de7bde5d6b8e5d25eec3e7bc3a9459e52ce" translate="yes" xml:space="preserve">
          <source>A &lt;strong&gt;file&lt;/strong&gt; resource block manages files that exist on nodes. For example, to write the home page for an Apache website:</source>
          <target state="translated">&lt;strong&gt;파일&lt;/strong&gt; 자원 블록은 노드에 존재하는 파일을 관리합니다. 예를 들어, Apache 웹 사이트의 홈 페이지를 작성하려면 다음을 수행하십시오.</target>
        </trans-unit>
        <trans-unit id="b49163153118829dd09e8fd6208680bd0a23459f" translate="yes" xml:space="preserve">
          <source>A &lt;strong&gt;freebsd_package&lt;/strong&gt; resource block manages a package on a node, typically by installing it. The simplest use of the &lt;strong&gt;freebsd_package&lt;/strong&gt; resource is:</source>
          <target state="translated">&lt;strong&gt;freebsd_package의&lt;/strong&gt; 자원 블록은 일반적으로 설치하여, 노드에서 패키지를 관리합니다. &lt;strong&gt;freebsd_package&lt;/strong&gt; 자원 의 가장 간단한 사용법 은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="ccb7e5d9d6a0394083ced310c88f2fd25832a1c1" translate="yes" xml:space="preserve">
          <source>A &lt;strong&gt;gem_package&lt;/strong&gt; resource block manages a package on a node, typically by installing it. The simplest use of the &lt;strong&gt;gem_package&lt;/strong&gt; resource is:</source>
          <target state="translated">&lt;strong&gt;gem_package의&lt;/strong&gt; 자원 블록은 일반적으로 설치하여, 노드에서 패키지를 관리합니다. &lt;strong&gt;gem_package&lt;/strong&gt; 리소스 의 가장 간단한 사용법 은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="934f496c9ab7e85a90c07af659a38d551a1b160c" translate="yes" xml:space="preserve">
          <source>A &lt;strong&gt;git&lt;/strong&gt; resource block manages source control resources that exist in a git repository:</source>
          <target state="translated">&lt;strong&gt;자식&lt;/strong&gt; 자원 블록은 자식 저장소에 존재하는 소스 제어 자원을 관리 :</target>
        </trans-unit>
        <trans-unit id="5409c831f397fdea60e7e716ec4ef3bca439b539" translate="yes" xml:space="preserve">
          <source>A &lt;strong&gt;group&lt;/strong&gt; resource block manages groups on a node:</source>
          <target state="translated">&lt;strong&gt;그룹의&lt;/strong&gt; 자원 블록은 노드 그룹을 관리합니다 :</target>
        </trans-unit>
        <trans-unit id="040658c77db8a333255c5589247c3fe91c987121" translate="yes" xml:space="preserve">
          <source>A &lt;strong&gt;homebrew_package&lt;/strong&gt; resource block manages a package on a node, typically by installing it. The simplest use of the &lt;strong&gt;homebrew_package&lt;/strong&gt; resource is:</source>
          <target state="translated">&lt;strong&gt;homebrew_package의&lt;/strong&gt; 자원 블록은 일반적으로 설치하여, 노드에서 패키지를 관리합니다. &lt;strong&gt;homebrew_package&lt;/strong&gt; 리소스 의 가장 간단한 사용법 은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="6258ca1d7e30b5662744c71abea202e011a4dd87" translate="yes" xml:space="preserve">
          <source>A &lt;strong&gt;http_request&lt;/strong&gt; resource block sends HTTP requests with an arbitrary message. For example, send a &lt;code&gt;DELETE&lt;/code&gt; request to &lt;code&gt;'http://www.chef.io/some_page?message=please_delete_me'&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;HTTP_REQUEST&lt;/strong&gt; 자원 블록은 HTTP 임의의 메시지와 함께 요청 보냅니다. 예를 들어, &lt;code&gt;DELETE&lt;/code&gt; 요청을 &lt;code&gt;'http://www.chef.io/some_page?message=please_delete_me'&lt;/code&gt; 로 보내십시오 .</target>
        </trans-unit>
        <trans-unit id="b4ec1cb263ff1a4d03bcb162d856dd68a0be1fbf" translate="yes" xml:space="preserve">
          <source>A &lt;strong&gt;ifconfig&lt;/strong&gt; resource block manages interfaces, such as a static IP address:</source>
          <target state="translated">&lt;strong&gt;다음 ifconfig&lt;/strong&gt; 자원 블록은 정적 IP 주소와 같은 인터페이스를 관리한다 :</target>
        </trans-unit>
        <trans-unit id="105f2e1766855c44a3e5e3c1649e614fca97f2c9" translate="yes" xml:space="preserve">
          <source>A &lt;strong&gt;ips_package&lt;/strong&gt; resource block manages a package on a node, typically by installing it. The simplest use of the &lt;strong&gt;ips_package&lt;/strong&gt; resource is:</source>
          <target state="translated">&lt;strong&gt;ips_package의&lt;/strong&gt; 자원 블록은 일반적으로 설치하여, 노드에서 패키지를 관리합니다. &lt;strong&gt;ips_package&lt;/strong&gt; 자원 의 가장 간단한 사용법 은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="4bbdf0de0e8c530daeb73fadcfdf97535d226fae" translate="yes" xml:space="preserve">
          <source>A &lt;strong&gt;ksh&lt;/strong&gt; resource block executes scripts using ksh:</source>
          <target state="translated">&lt;strong&gt;KSH의&lt;/strong&gt; 자원 블록을 사용 KSH 스크립트를 실행한다 :</target>
        </trans-unit>
        <trans-unit id="459c46fefffb9d6cbbc69c19a5a6fe5ab5aef649" translate="yes" xml:space="preserve">
          <source>A &lt;strong&gt;launchd&lt;/strong&gt; resource manages system-wide services (daemons) and per-user services (agents) on the Mac OS X platform:</source>
          <target state="translated">&lt;strong&gt;launchd에의&lt;/strong&gt; 자원은 맥 OS X 플랫폼에서 전체 시스템 서비스 (데몬) 및 사용자 별 서비스 (에이전트)를 관리 :</target>
        </trans-unit>
        <trans-unit id="d2ed41783efeb6a9367f68fd2caae908e80bbdb8" translate="yes" xml:space="preserve">
          <source>A &lt;strong&gt;link&lt;/strong&gt; resource block creates symbolic or hard links. For example, to create a hard link from &lt;code&gt;/tmp/file&lt;/code&gt; to &lt;code&gt;/etc/file&lt;/code&gt;:</source>
          <target state="translated">&lt;strong&gt;링크&lt;/strong&gt; 자원 블록은 기호 또는 하드 링크를 만듭니다. 예를 들어, &lt;code&gt;/tmp/file&lt;/code&gt; 에서 &lt;code&gt;/etc/file&lt;/code&gt; 로의 하드 링크를 작성 하려면 다음을 수행 하십시오 .</target>
        </trans-unit>
        <trans-unit id="190f154983af019c1fc92347ce72dc1a4b3037b9" translate="yes" xml:space="preserve">
          <source>A &lt;strong&gt;log&lt;/strong&gt; resource block adds messages to the log file based on events that occur during the chef-client run:</source>
          <target state="translated">&lt;strong&gt;로그&lt;/strong&gt; 자원 블록은 요리사 클라이언트를 실행하는 동안 발생하는 이벤트에 따라 메시지를 로그 파일에 추가합니다 :</target>
        </trans-unit>
        <trans-unit id="2a70c27fb2e28718b9f3832cf844516a76e1bed4" translate="yes" xml:space="preserve">
          <source>A &lt;strong&gt;macports_package&lt;/strong&gt; resource block manages a package on a node, typically by installing it. The simplest use of the &lt;strong&gt;macports_package&lt;/strong&gt; resource is:</source>
          <target state="translated">&lt;strong&gt;macports_package의&lt;/strong&gt; 자원 블록은 일반적으로 설치하여, 노드에서 패키지를 관리합니다. &lt;strong&gt;macports_package&lt;/strong&gt; 리소스 의 가장 간단한 사용법 은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="5ee95905ea269727ae7b8a8f881777e8f1ad5b7c" translate="yes" xml:space="preserve">
          <source>A &lt;strong&gt;mdadm&lt;/strong&gt; resource block manages RAID devices in a Linux environment using the mdadm utility:</source>
          <target state="translated">&lt;strong&gt;mdadm를의&lt;/strong&gt; 자원 블록은 mdadm를 유틸리티를 사용하여 Linux 환경에서 RAID 장치를 관리합니다 :</target>
        </trans-unit>
        <trans-unit id="315439a3dd1f2e2312b043b516fda5d29d49f30c" translate="yes" xml:space="preserve">
          <source>A &lt;strong&gt;mount&lt;/strong&gt; resource block manages a mounted file system:</source>
          <target state="translated">A는 &lt;strong&gt;마운트&lt;/strong&gt; 자원 블록은 파일 시스템을 마운트 관리 :</target>
        </trans-unit>
        <trans-unit id="2c8a32aa7e0bdb91c0f7d1963a0c8fe8c932fafd" translate="yes" xml:space="preserve">
          <source>A &lt;strong&gt;ohai&lt;/strong&gt; resource block reloads the Ohai configuration on a node:</source>
          <target state="translated">&lt;strong&gt;ohai&lt;/strong&gt; 자원 블록은 노드의 Ohai 구성 리로드 :</target>
        </trans-unit>
        <trans-unit id="aabc554d332647677008728d130a3840f460ddb3" translate="yes" xml:space="preserve">
          <source>A &lt;strong&gt;openbsd_package&lt;/strong&gt; resource block manages a package on a node, typically by installing it. The simplest use of the &lt;strong&gt;openbsd_package&lt;/strong&gt; resource is:</source>
          <target state="translated">&lt;strong&gt;openbsd_package의&lt;/strong&gt; 자원 블록은 일반적으로 설치하여, 노드에서 패키지를 관리합니다. &lt;strong&gt;openbsd_package&lt;/strong&gt; 리소스 의 가장 간단한 사용법 은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="b5f1abfc8849dc7809f3c71c5e5de885a8033d5d" translate="yes" xml:space="preserve">
          <source>A &lt;strong&gt;osx_profile&lt;/strong&gt; resource block manages configuration profiles on the Mac OS X platform:</source>
          <target state="translated">&lt;strong&gt;osx_profile의&lt;/strong&gt; 자원 블록은 맥 OS X 플랫폼에서 구성 프로파일을 관리합니다 :</target>
        </trans-unit>
        <trans-unit id="b9a0518ce75b30a9132bfca164cc9d61c370e281" translate="yes" xml:space="preserve">
          <source>A &lt;strong&gt;package&lt;/strong&gt; resource block manages a package on a node, typically by installing it. The simplest use of the &lt;strong&gt;package&lt;/strong&gt; resource is:</source>
          <target state="translated">&lt;strong&gt;패키지&lt;/strong&gt; 의 자원 블록은 일반적으로 설치하여, 노드에서 패키지를 관리합니다. &lt;strong&gt;패키지&lt;/strong&gt; 리소스 의 가장 간단한 사용법 은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="17b5de13e14de89d7fab74dae093f7a4b0d6ac79" translate="yes" xml:space="preserve">
          <source>A &lt;strong&gt;pacman_package&lt;/strong&gt; resource block manages a package on a node, typically by installing it. The simplest use of the &lt;strong&gt;pacman_package&lt;/strong&gt; resource is:</source>
          <target state="translated">&lt;strong&gt;pacman_package의&lt;/strong&gt; 자원 블록은 일반적으로 설치하여, 노드에서 패키지를 관리합니다. &lt;strong&gt;pacman_package&lt;/strong&gt; 리소스 의 가장 간단한 사용법 은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="cc790d6a9a231dbd162177fbc242d8a785839be8" translate="yes" xml:space="preserve">
          <source>A &lt;strong&gt;paludis_package&lt;/strong&gt; resource block manages a package on a node, typically by installing it. The simplest use of the &lt;strong&gt;paludis_package&lt;/strong&gt; resource is:</source>
          <target state="translated">&lt;strong&gt;paludis_package의&lt;/strong&gt; 자원 블록은 일반적으로 설치하여, 노드에서 패키지를 관리합니다. &lt;strong&gt;paludis_package&lt;/strong&gt; 자원 의 가장 간단한 사용법 은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="cdb89871212a001be385af5a0b59b8d56a4d3a6a" translate="yes" xml:space="preserve">
          <source>A &lt;strong&gt;perl&lt;/strong&gt; resource block executes scripts Perl:</source>
          <target state="translated">&lt;strong&gt;펄&lt;/strong&gt; 자원 블록을 펄 스크립트를 실행한다 :</target>
        </trans-unit>
        <trans-unit id="0ed984e08c615d0eb1689f9f8f8484d7103e8398" translate="yes" xml:space="preserve">
          <source>A &lt;strong&gt;portage_package&lt;/strong&gt; resource block manages a package on a node, typically by installing it. The simplest use of the &lt;strong&gt;portage_package&lt;/strong&gt; resource is:</source>
          <target state="translated">&lt;strong&gt;portage_package의&lt;/strong&gt; 자원 블록은 일반적으로 설치하여, 노드에서 패키지를 관리합니다. &lt;strong&gt;portage_package&lt;/strong&gt; 자원 의 가장 간단한 사용법 은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="41cfb4437835691add84ba54d8e4c8c3328c7db5" translate="yes" xml:space="preserve">
          <source>A &lt;strong&gt;powershell_script&lt;/strong&gt; resource block executes a batch script using the Windows PowerShell interpreter. For example, writing to an interpolated path:</source>
          <target state="translated">&lt;strong&gt;powershell_script의&lt;/strong&gt; 자원 블록은 Windows PowerShell을 인터프리터를 사용하여 배치 스크립트를 실행합니다. 예를 들어 보간 경로에 쓰는 경우 :</target>
        </trans-unit>
        <trans-unit id="b406ac02a9c04b31642fea75c05b9c635e94b1cc" translate="yes" xml:space="preserve">
          <source>A &lt;strong&gt;python&lt;/strong&gt; resource block executes scripts using Python:</source>
          <target state="translated">&lt;strong&gt;파이썬&lt;/strong&gt; 자원 블록은 파이썬을 사용하여 스크립트를 실행합니다 :</target>
        </trans-unit>
        <trans-unit id="5fe7d70e634c1abe840bf7ebe68653ee05509829" translate="yes" xml:space="preserve">
          <source>A &lt;strong&gt;reboot&lt;/strong&gt; resource block reboots a node:</source>
          <target state="translated">&lt;strong&gt;재부팅&lt;/strong&gt; 자원 블록은 노드 재부팅 :</target>
        </trans-unit>
        <trans-unit id="1784fbe847f169a2d5d225aaa378cf57f650f18e" translate="yes" xml:space="preserve">
          <source>A &lt;strong&gt;registry_key&lt;/strong&gt; resource block creates and deletes registry keys in Microsoft Windows:</source>
          <target state="translated">&lt;strong&gt;registry_key의&lt;/strong&gt; 자원 블록은 생성 및 Microsoft Windows에서 레지스트리 키를 삭제합니다 :</target>
        </trans-unit>
        <trans-unit id="5d6bde7714e62c8617c5fd6774b3015ec8145bcc" translate="yes" xml:space="preserve">
          <source>A &lt;strong&gt;remote_directory&lt;/strong&gt; resource block transfers a directory from a cookbook to a node, and then assigns the permissions needed on that directory. For example:</source>
          <target state="translated">&lt;strong&gt;remote_directory&lt;/strong&gt; 자원 블록은 노드에 요리 책에서 디렉토리를 전송하고 해당 디렉토리에 필요한 권한을 할당합니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="d397055463c05954c226e532882973f0306575ac" translate="yes" xml:space="preserve">
          <source>A &lt;strong&gt;remote_file&lt;/strong&gt; resource block manages files by using files that exist remotely. For example, to write the home page for an Apache website:</source>
          <target state="translated">&lt;strong&gt;의 remote_file의&lt;/strong&gt; 자원 블록은 원격으로 존재하는 파일을 사용하여 파일을 관리합니다. 예를 들어, Apache 웹 사이트의 홈 페이지를 작성하려면 다음을 수행하십시오.</target>
        </trans-unit>
        <trans-unit id="fdbf4f2b24eb84b6ba1cce598df6698e2a957f0a" translate="yes" xml:space="preserve">
          <source>A &lt;strong&gt;route&lt;/strong&gt; resource block manages the system routing table in a Linux environment:</source>
          <target state="translated">&lt;strong&gt;경로의&lt;/strong&gt; 자원 블록은 리눅스 환경에서 테이블을 라우팅 시스템을 관리합니다 :</target>
        </trans-unit>
        <trans-unit id="3a374a4f061f643f6e682b9c5892a0103d00bae6" translate="yes" xml:space="preserve">
          <source>A &lt;strong&gt;rpm_package&lt;/strong&gt; resource block manages a package on a node, typically by installing it. The simplest use of the &lt;strong&gt;rpm_package&lt;/strong&gt; resource is:</source>
          <target state="translated">&lt;strong&gt;rpm_package의&lt;/strong&gt; 자원 블록은 일반적으로 설치하여, 노드에서 패키지를 관리합니다. &lt;strong&gt;rpm_package&lt;/strong&gt; 리소스 의 가장 간단한 사용법 은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="a111458cafd2f502b09fec3bbf648bffd5ac0b81" translate="yes" xml:space="preserve">
          <source>A &lt;strong&gt;ruby&lt;/strong&gt; resource block executes scripts using Ruby:</source>
          <target state="translated">&lt;strong&gt;루비&lt;/strong&gt; 자원 블록 루비를 사용하는 스크립트를 실행한다 :</target>
        </trans-unit>
        <trans-unit id="c67b35890cdb2b96d45fc2a0235b8869a75a7ea2" translate="yes" xml:space="preserve">
          <source>A &lt;strong&gt;ruby_block&lt;/strong&gt; resource block executes a block of arbitrary Ruby code. For example, to reload the client.rb file during the chef-client run:</source>
          <target state="translated">&lt;strong&gt;ruby_block의&lt;/strong&gt; 자원 블록은 임의의 루비 코드의 블록을 실행한다. 예를 들어 chef-client를 실행하는 동안 client.rb 파일을 다시로드하려면 다음을 수행하십시오.</target>
        </trans-unit>
        <trans-unit id="c172bbdfc54a810f3d8d949d9074f2ae5faf30d3" translate="yes" xml:space="preserve">
          <source>A &lt;strong&gt;script&lt;/strong&gt; resource block typically executes scripts using a specified interpreter, such as Bash, csh, Perl, Python, or Ruby:</source>
          <target state="translated">&lt;strong&gt;스크립트&lt;/strong&gt; 자원 블록은 일반적으로 배시, csh, 펄, 파이썬, 루비와 같은 특정 인터프리터를 사용하여 스크립트를 실행합니다 :</target>
        </trans-unit>
        <trans-unit id="a21d8c02df357d63e2ff8c2b72f0869e87ce51a4" translate="yes" xml:space="preserve">
          <source>A &lt;strong&gt;service&lt;/strong&gt; resource block manages the state of a service. For example:</source>
          <target state="translated">&lt;strong&gt;서비스&lt;/strong&gt; 자원 블록은 서비스의 상태를 관리한다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="6e63c32b1427cc688de7ba6ad5144c0b54d747df" translate="yes" xml:space="preserve">
          <source>A &lt;strong&gt;smartos_package&lt;/strong&gt; resource block manages a package on a node, typically by installing it. The simplest use of the &lt;strong&gt;smartos_package&lt;/strong&gt; resource is:</source>
          <target state="translated">&lt;strong&gt;smartos_package&lt;/strong&gt; 자원 블록은 일반적으로 설치하여, 노드에서 패키지를 관리합니다. &lt;strong&gt;smartos_package&lt;/strong&gt; 리소스 의 가장 간단한 사용법 은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="cc167bd3274efed02024b886b0dad7c7c8ef81ba" translate="yes" xml:space="preserve">
          <source>A &lt;strong&gt;solaris_package&lt;/strong&gt; resource block manages a package on a node, typically by installing it. The simplest use of the &lt;strong&gt;solaris_package&lt;/strong&gt; resource is:</source>
          <target state="translated">&lt;strong&gt;solaris_package의&lt;/strong&gt; 자원 블록은 일반적으로 설치하여, 노드에서 패키지를 관리합니다. &lt;strong&gt;solaris_package&lt;/strong&gt; 자원 의 가장 간단한 사용법 은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="a2b9c9bb7aa156f613fc938cd3c5553236ad9bea" translate="yes" xml:space="preserve">
          <source>A &lt;strong&gt;subversion&lt;/strong&gt; resource block manages source control resources that exist in a Subversion repository:</source>
          <target state="translated">&lt;strong&gt;전복의&lt;/strong&gt; 자원 블록은 Subversion 저장소에 존재하는 소스 제어 자원을 관리 :</target>
        </trans-unit>
        <trans-unit id="19d22a90d54f135e8b449ab0fedd01768bb50478" translate="yes" xml:space="preserve">
          <source>A &lt;strong&gt;template&lt;/strong&gt; resource block typically declares the location in which a file is to be created, the source template that will be used to create the file, and the permissions needed on that file. For example:</source>
          <target state="translated">&lt;strong&gt;템플릿&lt;/strong&gt; 자원 블록은 일반적으로 파일이 작성되는 위치에 파일을 생성하는 데 사용되는 소스 템플릿과 그 파일에 필요한 권한을 선언한다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="fe8ed7b03b7655e458cff0e41c827bf92db4b5b8" translate="yes" xml:space="preserve">
          <source>A &lt;strong&gt;user&lt;/strong&gt; resource block manages users on a node:</source>
          <target state="translated">&lt;strong&gt;사용자의&lt;/strong&gt; 자원 블록은 노드에서 사용자를 관리합니다 :</target>
        </trans-unit>
        <trans-unit id="9cf91739e59ba780b1187bb7afb800d281af9c26" translate="yes" xml:space="preserve">
          <source>A &lt;strong&gt;windows_package&lt;/strong&gt; resource block manages a package on a node, typically by installing it. The simplest use of the &lt;strong&gt;windows_package&lt;/strong&gt; resource is:</source>
          <target state="translated">&lt;strong&gt;windows_package의&lt;/strong&gt; 자원 블록은 일반적으로 설치하여, 노드에서 패키지를 관리합니다. &lt;strong&gt;windows_package&lt;/strong&gt; 리소스 의 가장 간단한 사용법은 다음 &lt;strong&gt;과 같습니다&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="f709b926db3b0aa83719bd928a673565528dbc37" translate="yes" xml:space="preserve">
          <source>A &lt;strong&gt;windows_service&lt;/strong&gt; resource block manages the state of a service on a machine that is running Microsoft Windows. For example:</source>
          <target state="translated">&lt;strong&gt;windows_service의&lt;/strong&gt; 자원 블록은 Microsoft Windows를 실행하는 컴퓨터에서 서비스의 상태를 관리한다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="4b77080eeaf278f775a43ab6cb7b2d22d8baa976" translate="yes" xml:space="preserve">
          <source>A &lt;strong&gt;yum_package&lt;/strong&gt; resource block manages a package on a node, typically by installing it. The simplest use of the &lt;strong&gt;yum_package&lt;/strong&gt; resource is:</source>
          <target state="translated">&lt;strong&gt;yum_package&lt;/strong&gt; 자원 블록은 일반적으로 설치하여, 노드에서 패키지를 관리합니다. &lt;strong&gt;yum_package&lt;/strong&gt; 리소스 의 가장 간단한 사용법 은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="44b1ea6d90b88050029c546e3e37a81fe3e7bbb2" translate="yes" xml:space="preserve">
          <source>A Backup File Format (BFF) package may not have a &lt;code&gt;.bff&lt;/code&gt; file extension. The chef-client will still identify the correct provider to use based on the platform, regardless of the file extension.</source>
          <target state="translated">BFF (백업 파일 형식) 패키지의 파일 확장자 는 &lt;code&gt;.bff&lt;/code&gt; 일 수 없습니다 . 요리사 클라이언트는 파일 확장자에 관계없이 플랫폼을 기반으로 사용할 올바른 제공자를 계속 식별합니다.</target>
        </trans-unit>
        <trans-unit id="4103a0afdcace52ea6725e44b62b856110558dd4" translate="yes" xml:space="preserve">
          <source>A Chef report handler to send Chef run notifications to ZooKeeper.</source>
          <target state="translated">ZooKeeper에 Chef 실행 알림을 보내는 Chef 보고서 처리기</target>
        </trans-unit>
        <trans-unit id="55d0073c7c1973a97602cbaa122e3f09497033b9" translate="yes" xml:space="preserve">
          <source>A GitHub account; the chef-repo must be downloaded and/or cloned from GitHub</source>
          <target state="translated">GitHub 계정 셰프 레포는 GitHub에서 다운로드 및 / 또는 복제해야합니다</target>
        </trans-unit>
        <trans-unit id="2f6dff21e8c9195b8693cab0b81c8b5331c4864f" translate="yes" xml:space="preserve">
          <source>A Hash (similar to &lt;code&gt;crontab&lt;/code&gt;) that defines the calendar frequency at which a job is started. For example: &lt;code&gt;{ minute =&amp;gt; &quot;0&quot;, hour =&amp;gt; &quot;20&quot;, day =&amp;gt; &quot;*&quot;, weekday =&amp;gt; &quot;1-5&quot;, month =&amp;gt; &quot;*&quot; }&lt;/code&gt; will run a job at 8:00 PM every day, Monday through Friday, every month of the year.</source>
          <target state="translated">작업이 시작되는 달력 빈도를 정의 하는 해시 ( &lt;code&gt;crontab&lt;/code&gt; 과 유사 ). 예 : &lt;code&gt;{ minute =&amp;gt; &quot;0&quot;, hour =&amp;gt; &quot;20&quot;, day =&amp;gt; &quot;*&quot;, weekday =&amp;gt; &quot;1-5&quot;, month =&amp;gt; &quot;*&quot; }&lt;/code&gt; 은 오후 8시에 작업을 실행합니다. 매일 월요일부터 금요일까지, 매월.</target>
        </trans-unit>
        <trans-unit id="f7fe9dcb7e5c3357bb0fd506013b845a5bb8eb84" translate="yes" xml:space="preserve">
          <source>A Hash is a list with keys and values. Sometimes they don&amp;rsquo;t have a set order:</source>
          <target state="translated">해시는 키와 값이있는 목록입니다. 때때로 그들은 정해진 순서가 없습니다 :</target>
        </trans-unit>
        <trans-unit id="82ba1a4bd5deee7f120b82dadac8310885ff6093" translate="yes" xml:space="preserve">
          <source>A Hash of &lt;code&gt;JAVA_OPTS&lt;/code&gt; environment variables to be set. (&lt;code&gt;-XX:NewSize&lt;/code&gt; is configured using the &lt;code&gt;new_size&lt;/code&gt; setting.) Default value: &lt;code&gt;' '&lt;/code&gt; (empty).</source>
          <target state="translated">설정할 &lt;code&gt;JAVA_OPTS&lt;/code&gt; 환경 변수 의 해시 . ( &lt;code&gt;-XX:NewSize&lt;/code&gt; 는 &lt;code&gt;new_size&lt;/code&gt; 설정을 사용하여 구성됩니다 .) 기본값 : &lt;code&gt;' '&lt;/code&gt; (빈).</target>
        </trans-unit>
        <trans-unit id="e2c0678a2c2d950fec6cea9ff244f0ef8c939ba2" translate="yes" xml:space="preserve">
          <source>A Hash of custom headers. Default value: &lt;code&gt;{}&lt;/code&gt;.</source>
          <target state="translated">커스텀 헤더의 해시. 기본 값 : &lt;code&gt;{}&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="424da5ebf96fac8bca913ffe5816ceb0afab5caf" translate="yes" xml:space="preserve">
          <source>A Hash of custom headers. Default value: &lt;code&gt;{}&lt;/code&gt;. For example:</source>
          <target state="translated">커스텀 헤더의 해시. 기본 값 : &lt;code&gt;{}&lt;/code&gt; . 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="7445d2f4db20c8577522f4d96934b5949fbe1095" translate="yes" xml:space="preserve">
          <source>A Hash of environment variables in the form of &lt;code&gt;({&quot;ENV_VARIABLE&quot; =&amp;gt; &quot;VALUE&quot;})&lt;/code&gt;. (These variables must exist for a command to be run successfully.)</source>
          <target state="translated">&lt;code&gt;({&quot;ENV_VARIABLE&quot; =&amp;gt; &quot;VALUE&quot;})&lt;/code&gt; 형식의 환경 변수 해시 . 명령을 성공적으로 실행하려면 이러한 변수가 존재해야합니다.</target>
        </trans-unit>
        <trans-unit id="783f4e0251ff9bc1a47234a785e9bc57d56d2e24" translate="yes" xml:space="preserve">
          <source>A Hash of key value pairs used to create the launchd property list.</source>
          <target state="translated">시작된 특성 목록을 작성하는 데 사용되는 키 값 쌍의 해시.</target>
        </trans-unit>
        <trans-unit id="387503ee2cb840dba7fa627bc5c2dcee8c8dd0fb" translate="yes" xml:space="preserve">
          <source>A Hash of on-demand sockets that notify launchd when a job should be run.</source>
          <target state="translated">작업이 실행될 때 시작되었음을 알리는 주문형 소켓 해시.</target>
        </trans-unit>
        <trans-unit id="9f24bc95c170c1a89c281561befc97bbd1156b69" translate="yes" xml:space="preserve">
          <source>A Hash of resource limits to be imposed on a job.</source>
          <target state="translated">작업에 부과 할 자원 제한 해시.</target>
        </trans-unit>
        <trans-unit id="dbd18de1430cca76ee20633752aabc8609eca99e" translate="yes" xml:space="preserve">
          <source>A Hash of variables that are passed into a Ruby template file.</source>
          <target state="translated">Ruby 템플릿 파일로 전달되는 변수 해시</target>
        </trans-unit>
        <trans-unit id="f3b2799e9c054bb9c4a9d547c3f53270ab74a55e" translate="yes" xml:space="preserve">
          <source>A Hash that contains OAuth 2 application information. Default value: &lt;code&gt;{ }&lt;/code&gt;.</source>
          <target state="translated">OAuth 2 애플리케이션 정보가 포함 된 해시. 기본 값 : &lt;code&gt;{ }&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9f3a81b9bc249defa738cd1413904004e0205568" translate="yes" xml:space="preserve">
          <source>A Hash that contains the whitelist used by Chef push jobs. For example:</source>
          <target state="translated">Chef 푸시 작업에서 사용하는 화이트리스트가 포함 된 해시. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="a1e117eac7361b953b93a3f6a2bbfadc944376b7" translate="yes" xml:space="preserve">
          <source>A Hash that whitelists &lt;code&gt;automatic&lt;/code&gt; attributes, preventing non-whitelisted attributes from being saved.</source>
          <target state="translated">화이트리스트에없는 속성이 저장되지 않도록 &lt;code&gt;automatic&lt;/code&gt; 속성 을 허용하는 해시입니다 .</target>
        </trans-unit>
        <trans-unit id="edd80901413bb1a5cbcdd10c68f006e35dbff69f" translate="yes" xml:space="preserve">
          <source>A Hash that whitelists &lt;code&gt;automatic&lt;/code&gt; attributes, preventing non-whitelisted attributes from being saved. For example: &lt;code&gt;['network/interfaces/eth0']&lt;/code&gt;. Default value: all attributes are saved. If the Hash is empty, no attributes are saved.</source>
          <target state="translated">화이트리스트에없는 속성이 저장되지 않도록 &lt;code&gt;automatic&lt;/code&gt; 속성 을 허용하는 해시입니다 . 예를 들면 다음과 같습니다. &lt;code&gt;['network/interfaces/eth0']&lt;/code&gt; . 기본값 : 모든 속성이 저장됩니다. 해시가 비어 있으면 속성이 저장되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="aa512a35c2959c1c6b743d8c6d79030610f9bff4" translate="yes" xml:space="preserve">
          <source>A Hash that whitelists &lt;code&gt;default&lt;/code&gt; attributes, preventing non-whitelisted attributes from being saved.</source>
          <target state="translated">허용 되지 않는 속성이 저장되지 않도록 &lt;code&gt;default&lt;/code&gt; 속성 을 허용하는 해시입니다 .</target>
        </trans-unit>
        <trans-unit id="7b2ef8c56c99cbbf879df7915deb645b617da598" translate="yes" xml:space="preserve">
          <source>A Hash that whitelists &lt;code&gt;default&lt;/code&gt; attributes, preventing non-whitelisted attributes from being saved. For example: &lt;code&gt;['filesystem/dev/disk0s2/size']&lt;/code&gt;. Default value: all attributes are saved. If the Hash is empty, no attributes are saved.</source>
          <target state="translated">허용 되지 않는 속성이 저장되지 않도록 &lt;code&gt;default&lt;/code&gt; 속성 을 허용하는 해시입니다 . 예를 들면 다음과 같습니다. &lt;code&gt;['filesystem/dev/disk0s2/size']&lt;/code&gt; . 기본값 : 모든 속성이 저장됩니다. 해시가 비어 있으면 속성이 저장되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="83892c7c41d1ff783fd7fcc341344255614a4dfe" translate="yes" xml:space="preserve">
          <source>A Hash that whitelists &lt;code&gt;normal&lt;/code&gt; attributes, preventing non-whitelisted attributes from being saved.</source>
          <target state="translated">허용 되지 않는 속성이 저장되지 않도록 &lt;code&gt;normal&lt;/code&gt; 속성 을 허용하는 해시입니다 .</target>
        </trans-unit>
        <trans-unit id="47fb2a6773782c9f5b0392fdfda019f5026103fd" translate="yes" xml:space="preserve">
          <source>A Hash that whitelists &lt;code&gt;normal&lt;/code&gt; attributes, preventing non-whitelisted attributes from being saved. For example: &lt;code&gt;['filesystem/dev/disk0s2/size']&lt;/code&gt;. Default value: all attributes are saved. If the Hash is empty, no attributes are saved.</source>
          <target state="translated">허용 되지 않는 속성이 저장되지 않도록 &lt;code&gt;normal&lt;/code&gt; 속성 을 허용하는 해시입니다 . 예를 들면 다음과 같습니다. &lt;code&gt;['filesystem/dev/disk0s2/size']&lt;/code&gt; . 기본값 : 모든 속성이 저장됩니다. 해시가 비어 있으면 속성이 저장되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="0a76df5e44c993c855cdc86904d53dfd9f138ae5" translate="yes" xml:space="preserve">
          <source>A Hash that whitelists &lt;code&gt;override&lt;/code&gt; attributes, preventing non-whitelisted attributes from being saved.</source>
          <target state="translated">화이트리스트가있는 해시는 속성을 &lt;code&gt;override&lt;/code&gt; 화이트리스트에없는 속성이 저장되지 않도록합니다.</target>
        </trans-unit>
        <trans-unit id="14b2accdaf31874d267e8a583736caaaa0e70a0c" translate="yes" xml:space="preserve">
          <source>A Hash that whitelists &lt;code&gt;override&lt;/code&gt; attributes, preventing non-whitelisted attributes from being saved. For example: &lt;code&gt;['map - autohome/size']&lt;/code&gt;. Default value: all attributes are saved. If the Hash is empty, no attributes are saved.</source>
          <target state="translated">화이트리스트가있는 해시는 속성을 &lt;code&gt;override&lt;/code&gt; 화이트리스트에없는 속성이 저장되지 않도록합니다. 예를 들면 다음과 같습니다. &lt;code&gt;['map - autohome/size']&lt;/code&gt; . 기본값 : 모든 속성이 저장됩니다. 해시가 비어 있으면 속성이 저장되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="c0da2d9e171f58648ce799c21cdf02dfbd65176a" translate="yes" xml:space="preserve">
          <source>A JSON string that contains a list of vaults and items to be updated.</source>
          <target state="translated">업데이트 할 볼트 및 항목 목록이 포함 된 JSON 문자열입니다.</target>
        </trans-unit>
        <trans-unit id="0707ecc6003a0783dd07020a6852fb8059bcaf2b" translate="yes" xml:space="preserve">
          <source>A JSON string that is added to the first run of a chef-client.</source>
          <target state="translated">chef-client의 첫 번째 실행에 추가되는 JSON 문자열입니다.</target>
        </trans-unit>
        <trans-unit id="650702d003c118bc40ef2f100d4dbbdcd2e9ed00" translate="yes" xml:space="preserve">
          <source>A Microsoft Installer Package (MSI) is available for installing the chef-client on a Microsoft Windows machine.</source>
          <target state="translated">Microsoft Windows 시스템에 chef-client를 설치하기 위해 MSI (Microsoft Installer Package)를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ffd5e7ee27a95c7a7726be9429efdcb5ec7e8327" translate="yes" xml:space="preserve">
          <source>A Microsoft Windows registry key can be used as a string in Ruby code, such as when a registry key is used as the name of a recipe. In Ruby, when a registry key is enclosed in a double-quoted string (&lt;code&gt;&quot; &quot;&lt;/code&gt;), the same backslash character (&lt;code&gt;\&lt;/code&gt;) that is used to define the registry key path separator is also used in Ruby to define an escape character. Therefore, the registry key path separators must be escaped when they are enclosed in a double-quoted string. For example, the following registry key:</source>
          <target state="translated">레시피 이름으로 레지스트리 키를 사용하는 경우와 같이 루비 코드에서 Microsoft Windows 레지스트리 키를 문자열로 사용할 수 있습니다. Ruby에서 레지스트리 키가 큰 따옴표로 묶인 문자열 ( &lt;code&gt;&quot; &quot;&lt;/code&gt; ) 로 묶인 경우 레지스트리 키 경로 구분 기호를 정의하는 데 사용되는 동일한 백 슬래시 문자 ( &lt;code&gt;\&lt;/code&gt; )가 Ruby에서도 이스케이프 문자를 정의하는 데 사용됩니다. 따라서 레지스트리 키 경로 구분 기호는 큰 따옴표로 묶인 문자열로 묶을 때 이스케이프해야합니다. 예를 들어, 다음 레지스트리 키 :</target>
        </trans-unit>
        <trans-unit id="53c3ac966ca9d5e99a78900746a616c45c095566" translate="yes" xml:space="preserve">
          <source>A URL at which a tar.gz archive is located.</source>
          <target state="translated">tar.gz 아카이브가있는 URL입니다.</target>
        </trans-unit>
        <trans-unit id="9e0e7dbbf7015926651835ec3456a587762ffd9f" translate="yes" xml:space="preserve">
          <source>A URL or IP address that specifies a location that should not be proxied.</source>
          <target state="translated">프록시해서는 안되는 위치를 지정하는 URL 또는 IP 주소입니다.</target>
        </trans-unit>
        <trans-unit id="28b5d3e8f39dea4f81c14f8dab7513b38f3169d4" translate="yes" xml:space="preserve">
          <source>A backtrace associated with the uncaught exception data that caused a chef-client run to fail, if present; &lt;code&gt;nil&lt;/code&gt; for a successful chef-client run.</source>
          <target state="translated">잡히지 않은 예외 데이터와 관련된 역 추적 (있는 경우 요리사 클라이언트 실행이 실패한 경우) &lt;code&gt;nil&lt;/code&gt; 성공적인 요리사 클라이언트를 실행합니다.</target>
        </trans-unit>
        <trans-unit id="8c4b372e30d5344c98c4117420e2c5cc25cece20" translate="yes" xml:space="preserve">
          <source>A better approach in this type of situation is to install the package before the resource collection is built to ensure that it is available to other resources later on.</source>
          <target state="translated">이러한 유형의 상황에서 더 나은 접근 방법은 나중에 다른 자원에서 사용할 수 있도록 자원 콜렉션을 빌드하기 전에 패키지를 설치하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="bf1769558f97957edea7fe47fb186e55c04ae122" translate="yes" xml:space="preserve">
          <source>A block is arbitrary Ruby defined within the resource block by using the &lt;code&gt;verify&lt;/code&gt; property. When a block is &lt;code&gt;true&lt;/code&gt;, the chef-client will continue to update the file as appropriate.</source>
          <target state="translated">블록은 &lt;code&gt;verify&lt;/code&gt; 속성 을 사용하여 자원 블록 내에 정의 된 임의의 Ruby 입니다. 블록이 &lt;code&gt;true&lt;/code&gt; 인 경우 요리사 클라이언트는 파일을 적절하게 계속 업데이트합니다.</target>
        </trans-unit>
        <trans-unit id="42734636117a2b524cd45e7d53458034c87484c8" translate="yes" xml:space="preserve">
          <source>A block is executed as Ruby code that must return either &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt;. If the block returns &lt;code&gt;true&lt;/code&gt;, the guard property is applied. If the block returns &lt;code&gt;false&lt;/code&gt;, the guard property is not applied.</source>
          <target state="translated">블록은 루비 코드로 실행되며 &lt;code&gt;true&lt;/code&gt; 또는 &lt;code&gt;false&lt;/code&gt; 를 반환해야합니다 . 블록이 &lt;code&gt;true&lt;/code&gt; 를 반환 하면 guard 속성이 적용됩니다. 블록이 &lt;code&gt;false&lt;/code&gt; 를 반환 하면 guard 속성이 적용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="899f1116ec07612e75326f3f0317d9067b6e5b34" translate="yes" xml:space="preserve">
          <source>A block of Ruby code.</source>
          <target state="translated">루비 코드 블록.</target>
        </trans-unit>
        <trans-unit id="537756dab42a582c71939fe1e100796b91845548" translate="yes" xml:space="preserve">
          <source>A block of code, or a path to a file that contains code, that is run after restarting. Default value: &lt;code&gt;deploy/after_restart.rb&lt;/code&gt;.</source>
          <target state="translated">다시 시작한 후 실행되는 코드 블록 또는 코드가 포함 된 파일의 경로입니다. 기본 값 : &lt;code&gt;deploy/after_restart.rb&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="33b9a06709f4b19852be5f729a23ee6de2c484e2" translate="yes" xml:space="preserve">
          <source>A block of code, or a path to a file that contains code, that is run before a migration. Default value: &lt;code&gt;deploy/before_migrate.rb&lt;/code&gt;.</source>
          <target state="translated">마이그레이션 전에 실행되는 코드 블록 또는 코드가 포함 된 파일의 경로입니다. 기본 값 : &lt;code&gt;deploy/before_migrate.rb&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a5ab8ecb18832a9299d656c6f3b9bc3664321903" translate="yes" xml:space="preserve">
          <source>A block of code, or a path to a file that contains code, that is run before restarting. Default value: &lt;code&gt;deploy/before_restart.rb&lt;/code&gt;.</source>
          <target state="translated">다시 시작하기 전에 실행되는 코드 블록 또는 코드가 포함 된 파일의 경로입니다. 기본 값 : &lt;code&gt;deploy/before_restart.rb&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8015d0cf2360ddec26d371a48d29be0f56fe2fd1" translate="yes" xml:space="preserve">
          <source>A block of code, or a path to a file that contains code, that is run before symbolic linking. Default value: &lt;code&gt;deploy/before_symlink.rb&lt;/code&gt;.</source>
          <target state="translated">심볼릭 링크 전에 실행되는 코드 블록 또는 코드가 포함 된 파일의 경로입니다. 기본 값 : &lt;code&gt;deploy/before_symlink.rb&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="03680dba7353aaf7c896afeb8f7c83c3a107ee63" translate="yes" xml:space="preserve">
          <source>A block or a string that returns &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt;. A string, when &lt;code&gt;true&lt;/code&gt; is executed as a system command.</source>
          <target state="translated">&lt;code&gt;true&lt;/code&gt; 또는 &lt;code&gt;false&lt;/code&gt; 를 반환하는 블록 또는 문자열입니다 . &lt;code&gt;true&lt;/code&gt; 인 경우 문자열 은 시스템 명령으로 실행됩니다.</target>
        </trans-unit>
        <trans-unit id="27c366e9e354def82d84deaef9e6694ae37c1917" translate="yes" xml:space="preserve">
          <source>A bootstrap directory in the &lt;code&gt;$PWD/.chef&lt;/code&gt;, e.g. in &lt;code&gt;~/chef-repo/.chef&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;$PWD/.chef&lt;/code&gt; 의 부트 스트랩 디렉토리 ( 예 : &lt;code&gt;~/chef-repo/.chef&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="57beab3030d3c10c6a9c168dfc6bf8c9bcba64d8" translate="yes" xml:space="preserve">
          <source>A bootstrap directory in the installed knife library; the actual location may vary, depending how the chef-client is installed</source>
          <target state="translated">설치된 나이프 라이브러리의 부트 스트랩 디렉토리 셰프 클라이언트 설치 방법에 따라 실제 위치는 다를 수 있습니다</target>
        </trans-unit>
        <trans-unit id="a2de48ad8c2f1fe4782fd7aa1777465a806f6c4d" translate="yes" xml:space="preserve">
          <source>A bootstrap directory in the users &lt;code&gt;$HOME/.chef&lt;/code&gt;</source>
          <target state="translated">사용자 &lt;code&gt;$HOME/.chef&lt;/code&gt; 의 부트 스트랩 디렉토리</target>
        </trans-unit>
        <trans-unit id="9ef1863b3f764716d54f12a0cf4ae46c3a456a24" translate="yes" xml:space="preserve">
          <source>A branch, tag, or commit to be synchronized with git. This can be symbolic, like &lt;code&gt;HEAD&lt;/code&gt; or it can be a source control management-specific revision identifier. Default value: &lt;code&gt;HEAD&lt;/code&gt;.</source>
          <target state="translated">git과 동기화되는 브랜치, 태그 또는 커밋. 이것은 &lt;code&gt;HEAD&lt;/code&gt; 와 같은 기호 이거나 소스 제어 관리 특정 개정 식별자 일 수 있습니다. 기본 값 : &lt;code&gt;HEAD&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2e00b6d5c1116946257ac4e4f5db699053e48d29" translate="yes" xml:space="preserve">
          <source>A branch, tag, or commit to be synchronized with git. This can be symbolic, like &lt;code&gt;HEAD&lt;/code&gt; or it can be a source control management-specific revision identifier. See &lt;code&gt;checkout_branch&lt;/code&gt;. Default value: &lt;code&gt;HEAD&lt;/code&gt;.</source>
          <target state="translated">git과 동기화되는 브랜치, 태그 또는 커밋. 이것은 &lt;code&gt;HEAD&lt;/code&gt; 와 같은 기호 이거나 소스 제어 관리 특정 개정 식별자 일 수 있습니다. &lt;code&gt;checkout_branch&lt;/code&gt; 를 참조하십시오 . 기본 값 : &lt;code&gt;HEAD&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="81bfe495398619bdedec0fc9ebf9af78b685bf8c" translate="yes" xml:space="preserve">
          <source>A case statement can be used to compare an expression, and then execute the code that matches.</source>
          <target state="translated">case 문을 사용하여 식을 비교 한 다음 일치하는 코드를 실행할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="59186a8eac89c74ec4cc7678680b896c3b80fbcb" translate="yes" xml:space="preserve">
          <source>A centralized API that interacts with and integrates infrastructure components</source>
          <target state="translated">인프라 구성 요소와 상호 작용하고 통합하는 중앙 집중식 API</target>
        </trans-unit>
        <trans-unit id="0336f0158c58e7ddad197a07158b91eaa5e61066" translate="yes" xml:space="preserve">
          <source>A change has been made to a resource. (This event occurs for each change made to a resource.)</source>
          <target state="translated">자원이 변경되었습니다. (이 이벤트는 자원이 변경 될 때마다 발생합니다.)</target>
        </trans-unit>
        <trans-unit id="0613dd9b9df4df8f4c3b5a7d6ef6e64ad0ae62bb" translate="yes" xml:space="preserve">
          <source>A chef handler that collects exception and report handler data and then uses SendGrid Ruby gem to send email reports that are based on Erubis templates.</source>
          <target state="translated">예외 및 보고서 처리기 데이터를 수집 한 다음 SendGrid Ruby gem을 사용하여 Erubis 템플릿을 기반으로하는 전자 메일 보고서를 보내는 요리사 처리기입니다.</target>
        </trans-unit>
        <trans-unit id="06c7b61380d3bfe5f6d0781514f408d17e307d7c" translate="yes" xml:space="preserve">
          <source>A chef-client is an agent that runs locally on every node that is under management by Chef. When a chef-client is run, it will perform all of the steps that are required to bring the node into the expected state, including:</source>
          <target state="translated">chef-client는 Chef가 관리하는 모든 노드에서 로컬로 실행되는 에이전트입니다. 요리사 클라이언트가 실행되면 다음을 포함하여 노드를 예상 상태로 만드는 데 필요한 모든 단계를 수행합니다.</target>
        </trans-unit>
        <trans-unit id="a5f9915287d3b254cb4bfbb2a97caae10e76f551" translate="yes" xml:space="preserve">
          <source>A chef-client is installed on every node that is under management by Chef. The chef-client performs all of the configuration tasks that are specified by the run-list and will pull down any required configuration data from the Chef server as it is needed during the chef-client run.</source>
          <target state="translated">Chef가 관리하는 모든 노드에 chef-client가 설치됩니다. chef-client는 실행 목록에 의해 지정된 모든 구성 태스크를 수행하고 chef-client 실행 중에 필요할 때 Chef 서버에서 필요한 구성 데이터를 풀다운합니다.</target>
        </trans-unit>
        <trans-unit id="a61e9b5ffa7408618e9782cdf9b22f40f43c3bbd" translate="yes" xml:space="preserve">
          <source>A chef-client must be version 11.6 (or higher) when using the &lt;code&gt;knife data bag from file&lt;/code&gt; argument with the Enterprise Chef or Open Source Chef version 11 servers.</source>
          <target state="translated">Enterprise Chef 또는 Open Source Chef 버전 11 서버 &lt;code&gt;knife data bag from file&lt;/code&gt; 인수 의 나이프 데이터 백을 사용하는 경우 Chef-Client는 버전 11.6 이상이어야 합니다.</target>
        </trans-unit>
        <trans-unit id="ec0d7409d22fedc0db72cdd2c96816993f636f83" translate="yes" xml:space="preserve">
          <source>A chef-client on which Reporting is configured always sends data to the Chef server. Users of the Chef management console web user interface must belong to the following group:</source>
          <target state="translated">보고가 구성된 chef-client는 항상 Chef 서버로 데이터를 보냅니다. Chef 관리 콘솔 웹 사용자 인터페이스의 사용자는 다음 그룹에 속해야합니다.</target>
        </trans-unit>
        <trans-unit id="0b147ca8dde2d6d008ddea7d2e23aeec4d4cfd34" translate="yes" xml:space="preserve">
          <source>A chef-client run is stopped after a fatal message is sent to the logger and &lt;code&gt;STDERR&lt;/code&gt;. For example:</source>
          <target state="translated">치명적인 메시지가 로거 및 &lt;code&gt;STDERR&lt;/code&gt; 로 전송 된 후 요리사 클라이언트 실행이 중지 됩니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="3975ca1ed5788650d86a7228be953373c901cb72" translate="yes" xml:space="preserve">
          <source>A chef-client that is running as a daemon can be woken up and started by sending the process a &lt;code&gt;SIGUSR1&lt;/code&gt;. For example, to trigger a chef-client run on a machine running Linux:</source>
          <target state="translated">데몬으로 실행되는 chef-client는 프로세스에 &lt;code&gt;SIGUSR1&lt;/code&gt; 을 보내어 깨우고 시작할 수 있습니다 . 예를 들어 Linux를 실행하는 시스템에서 chef-client 실행을 트리거하려면 다음을 수행하십시오.</target>
        </trans-unit>
        <trans-unit id="aa2556f517f77637780da64c3b4fbdca2563b8bd" translate="yes" xml:space="preserve">
          <source>A chunk of data from a single named stream.</source>
          <target state="translated">명명 된 단일 스트림의 데이터 청크입니다.</target>
        </trans-unit>
        <trans-unit id="bf83a06d6db815922625235553e6e854245e5858" translate="yes" xml:space="preserve">
          <source>A client is an actor that has permission to access the Chef server. A client is most often a node (on which the chef-client runs), but is also a workstation (on which knife runs), or some other machine that is configured to use the Chef server API. Each request to the Chef server that is made by a client uses a private key for authentication that must be authorized by the public key on the Chef server.</source>
          <target state="translated">클라이언트는 Chef 서버에 액세스 할 권한이있는 행위자입니다. 클라이언트는 대부분 요리사 (클라이언트가 실행하는 노드)이지만 워크 스테이션 (칼이 실행되는 워크 스테이션)이거나 Chef 서버 API를 사용하도록 구성된 다른 시스템이기도합니다. 클라이언트가 작성한 Chef 서버에 대한 각 요청은 Chef 서버의 공개 키에 의해 인증되어야하는 개인 키를 인증에 사용합니다.</target>
        </trans-unit>
        <trans-unit id="be3ccf00b62c9f528c4ac0b80150417d1478a62b" translate="yes" xml:space="preserve">
          <source>A client.rb file is used to specify the configuration details for the chef-client.</source>
          <target state="translated">client.rb 파일은 chef-client의 구성 세부 사항을 지정하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="9b6d6ad56a09bef1af73aac79849598da9cae5ae" translate="yes" xml:space="preserve">
          <source>A cloud-based node is hosted in an external cloud-based service, such as Amazon Web Services (AWS), OpenStack, Rackspace, Google Compute Engine, or Microsoft Azure. Plugins are available for knife that provide support for external cloud-based services. knife can use these plugins to create instances on cloud-based services. Once created, the chef-client can be used to deploy, configure, and maintain those instances.</source>
          <target state="translated">클라우드 기반 노드는 AWS (Amazon Web Services), OpenStack, Rackspace, Google Compute Engine 또는 Microsoft Azure와 같은 외부 클라우드 기반 서비스에서 호스팅됩니다. 외부 클라우드 기반 서비스를 지원하는 나이프 용 플러그인을 사용할 수 있습니다. knife는 이러한 플러그인을 사용하여 클라우드 기반 서비스에서 인스턴스를 작성할 수 있습니다. 일단 요리사-클라이언트를 사용하여 해당 인스턴스를 배포, 구성 및 유지 관리 할 수 ​​있습니다.</target>
        </trans-unit>
        <trans-unit id="d5a302003559777289c23f7517fc388ec52a1114" translate="yes" xml:space="preserve">
          <source>A cluster failover should occur.</source>
          <target state="translated">클러스터 장애 조치가 발생해야합니다.</target>
        </trans-unit>
        <trans-unit id="d66bc80c4f594685828a881462fbc369fd9c223e" translate="yes" xml:space="preserve">
          <source>A code block can be used to format the results. For example:</source>
          <target state="translated">코드 블록을 사용하여 결과를 형식화 할 수 있습니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="f33a4037efb81c3b49667b25f747beecf2dfadc7" translate="yes" xml:space="preserve">
          <source>A colon-separated path at which Ruby scripts are located.</source>
          <target state="translated">Ruby 스크립트가있는 콜론으로 구분 된 경로입니다.</target>
        </trans-unit>
        <trans-unit id="3223a57419f36ab910072c8bc2723ab102427d98" translate="yes" xml:space="preserve">
          <source>A colon-separated path at which Ruby scripts are located. Use to override the default location for scripts. When this option is not specified, knife will look for scripts located in &lt;code&gt;chef-repo/.chef/scripts&lt;/code&gt; directory.</source>
          <target state="translated">Ruby 스크립트가있는 콜론으로 구분 된 경로입니다. 스크립트의 기본 위치를 재정의하는 데 사용합니다. 이 옵션을 지정하지 않으면 knife는 &lt;code&gt;chef-repo/.chef/scripts&lt;/code&gt; 디렉토리에있는 스크립트를 찾습니다 .</target>
        </trans-unit>
        <trans-unit id="06fdcc39ce91e82a9919167d74d4208b71e8ec0f" translate="yes" xml:space="preserve">
          <source>A comma-delimited list of return codes that indicate the success or failure of the command that was run remotely. This code signals a successful &lt;code&gt;:install&lt;/code&gt; action. Default value: &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="translated">원격으로 실행 된 명령의 성공 또는 실패를 나타내는 쉼표로 구분 된 리턴 코드 목록. 이 코드는 성공적인 &lt;code&gt;:install&lt;/code&gt; 조치를 나타냅니다. 초기 값 : &lt;code&gt;0&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d77b4b1d82ee5bf50e32f0a90448bbb8bc755d3a" translate="yes" xml:space="preserve">
          <source>A comma-separated list of URLs that do not need a proxy. Default value: &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">프록시가 필요없는 쉼표로 구분 된 URL 목록입니다. 기본 값 : &lt;code&gt;nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="884adcc039b8adc14c0ef980f4c600c2ad230634" translate="yes" xml:space="preserve">
          <source>A comma-separated list of URLs that do not need a proxy. Default value: &lt;code&gt;nil&lt;/code&gt;. For example:</source>
          <target state="translated">프록시가 필요없는 쉼표로 구분 된 URL 목록입니다. 기본 값 : &lt;code&gt;nil&lt;/code&gt; . 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="3576c85a3cb34fc5e9e8bbf079af339662a43a9a" translate="yes" xml:space="preserve">
          <source>A comma-separated list of devices to be part of a RAID array. Default value: &lt;code&gt;[]&lt;/code&gt;.</source>
          <target state="translated">RAID 배열의 일부인 쉼표로 구분 된 장치 목록. 기본값 : &lt;code&gt;[]&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="82c00ff0e5a59d779a77d2e43d22c4f34d6a75bb" translate="yes" xml:space="preserve">
          <source>A comma-separated list of roles and/or recipes to be applied.</source>
          <target state="translated">적용될 쉼표로 구분 된 역할 및 / 또는 레시피 목록.</target>
        </trans-unit>
        <trans-unit id="3665893a5919d30743d392aaf17179d7eb3d95c9" translate="yes" xml:space="preserve">
          <source>A command can be elevated similar to the following:</source>
          <target state="translated">다음과 유사하게 명령을 올릴 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a973b1b6e9c32c1b86039e4e7fa431f8de04b923" translate="yes" xml:space="preserve">
          <source>A command that works with certain objects in the Chef server, including &lt;code&gt;acls&lt;/code&gt;, &lt;code&gt;groups&lt;/code&gt;, and &lt;code&gt;containers&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;acls&lt;/code&gt; , &lt;code&gt;groups&lt;/code&gt; 및 &lt;code&gt;containers&lt;/code&gt; 포함하여 Chef 서버의 특정 오브젝트와 작동하는 명령</target>
        </trans-unit>
        <trans-unit id="92745aa5e9ff62adb9069d3392b1ae616b77fefc" translate="yes" xml:space="preserve">
          <source>A command that works with each object in the chef-repo. The subcommands specify the desired action (the &amp;ldquo;verb&amp;rdquo;), and then directory in which that object resides (&lt;code&gt;clients&lt;/code&gt;, &lt;code&gt;cookbooks/&lt;/code&gt;, &lt;code&gt;data_bags/&lt;/code&gt;, &lt;code&gt;environments/&lt;/code&gt;, &lt;code&gt;nodes&lt;/code&gt;, &lt;code&gt;roles/&lt;/code&gt;, and &lt;code&gt;users&lt;/code&gt;). For example: &lt;code&gt;download cookbooks/&lt;/code&gt;</source>
          <target state="translated">chef-repo의 각 오브젝트와 작동하는 명령입니다. 부속 명령은 원하는 조치 ( &quot;동사&quot;)를 지정한 다음 해당 오브젝트가 상주하는 디렉토리 ( &lt;code&gt;clients&lt;/code&gt; , &lt;code&gt;cookbooks/&lt;/code&gt; , &lt;code&gt;data_bags/&lt;/code&gt; , &lt;code&gt;environments/&lt;/code&gt; , &lt;code&gt;nodes&lt;/code&gt; , &lt;code&gt;roles/&lt;/code&gt; 및 &lt;code&gt;users&lt;/code&gt; )를 지정합니다. 예 : &lt;code&gt;download cookbooks/&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1d8a422ee7e2e22409f5a7b4d8627a09a11bfad6" translate="yes" xml:space="preserve">
          <source>A completed chef-server.rb configuration file for a four server tiered Chef server cluster, consisting of:</source>
          <target state="translated">4 개의 서버 계층 Chef 서버 클러스터에 대한 완성 된 chef-server.rb 구성 파일은 다음으로 구성됩니다.</target>
        </trans-unit>
        <trans-unit id="7577081ce0ac516cc03519d9087dd03fa0145d46" translate="yes" xml:space="preserve">
          <source>A completed chef-server.rb configuration file for a four server tiered Chef server configuration, consisting of:</source>
          <target state="translated">4 개의 서버 계층 Chef 서버 구성을위한 완성 된 chef-server.rb 구성 파일은 다음으로 구성됩니다.</target>
        </trans-unit>
        <trans-unit id="272b1229a8b9a34e99e06e227f7c386e258e2fb5" translate="yes" xml:space="preserve">
          <source>A completion percentage that is used to determine how quickly a checkpoint should finish in relation to the completion status of the next checkpoint. For example, if the value is &lt;code&gt;0.5&lt;/code&gt;, then a checkpoint attempts to finish before 50% of the next checkpoint is done. Default value: &lt;code&gt;0.5&lt;/code&gt;.</source>
          <target state="translated">다음 체크 포인트의 완료 상태와 관련하여 체크 포인트가 얼마나 빨리 완료되어야 하는지를 결정하는 데 사용되는 완료 백분율입니다. 예를 들어, 값이 &lt;code&gt;0.5&lt;/code&gt; 인 경우 다음 체크 포인트의 50 %가 완료되기 전에 체크 포인트가 완료를 시도합니다. 기본 값 : &lt;code&gt;0.5&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c2fd378c3c68578271d183968f10736f991bf8ab" translate="yes" xml:space="preserve">
          <source>A computer running UNIX, Linux, Mac OS X or Microsoft Windows</source>
          <target state="translated">UNIX, Linux, Mac OS X 또는 Microsoft Windows를 실행하는 컴퓨터</target>
        </trans-unit>
        <trans-unit id="47331ede5b3235d1a4d7812b6f86e40acaa4e5eb" translate="yes" xml:space="preserve">
          <source>A connection to Network Time Protocol (NTP) to prevent clock drift</source>
          <target state="translated">클럭 드리프트를 방지하기 위해 NTP (Network Time Protocol)에 연결</target>
        </trans-unit>
        <trans-unit id="4bfbe0aefcabacf5ac27a48b86a21a45ca8cf5b1" translate="yes" xml:space="preserve">
          <source>A consistent syntax pattern when constructing recipes</source>
          <target state="translated">레시피 구성시 일관된 구문 패턴</target>
        </trans-unit>
        <trans-unit id="80773e0b3e6823959bf85986e0b586a5588b6849" translate="yes" xml:space="preserve">
          <source>A control is an automated test that is built into a cookbook, and then used to test the state of the system for compliance. Compliance can be many things. For example, ensuring that file and directory management meets specific internal IT policies&amp;mdash;&amp;rdquo;Does the file exist?&amp;rdquo;, &amp;ldquo;Do the correct users or groups have access to this directory?&amp;rdquo;. Compliance may also be complex, such as helping to ensure goals defined by large-scale compliance frameworks such as PCI, HIPAA, and Sarbanes-Oxley can be met.</source>
          <target state="translated">제어는 요리 책에 내장 된 자동화 된 테스트이며 시스템 상태의 적합성을 테스트하는 데 사용됩니다. 규정 준수는 여러 가지가 될 수 있습니다. 예를 들어, 파일 및 디렉토리 관리가 특정 내부 IT 정책 ( &quot;파일이 있습니까?&quot;, &quot;올바른 사용자 또는 그룹이이 디렉토리에 액세스 할 수 있습니까?&quot;)을 충족하는지 확인하십시오. PCI, HIPAA 및 Sarbanes-Oxley와 같은 대규모 규정 준수 프레임 워크로 정의 된 목표를 달성 할 수 있도록 도와주는 등 규정 준수가 복잡 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="19026c0430e8f54ab2489ad0869a3211efebf970" translate="yes" xml:space="preserve">
          <source>A cookbook can contain the following types of files:</source>
          <target state="translated">요리 책에는 다음 유형의 파일이 포함될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e813e00962d047c803f95f9e5e7432fb6396a6b0" translate="yes" xml:space="preserve">
          <source>A cookbook conflicts with another cookbook or cookbook version. Use a version constraint to define constraints for cookbook versions: &lt;code&gt;&amp;lt;&lt;/code&gt; (less than), &lt;code&gt;&amp;lt;=&lt;/code&gt; (less than or equal to), &lt;code&gt;=&lt;/code&gt; (equal to), &lt;code&gt;&amp;gt;=&lt;/code&gt; (greater than or equal to), &lt;code&gt;~&amp;gt;&lt;/code&gt; (approximately greater than), or &lt;code&gt;&amp;gt;&lt;/code&gt; (greater than). This field requires that a cookbook with a matching name and version does not exist on the Chef server. When the match exists, the Chef server ensures that any conflicted cookbooks are not included with the set of cookbooks that are sent to the node when the chef-client runs. For example:</source>
          <target state="translated">요리 책이 다른 요리 책 또는 요리 책 버전과 충돌합니다. 요리 책 버전의 제약 조건을 정의하는 버전 제약 조건을 사용하여 : &lt;code&gt;&amp;lt;&lt;/code&gt; (미만), &lt;code&gt;&amp;lt;=&lt;/code&gt; (이하거나 같은보다), &lt;code&gt;=&lt;/code&gt; (같음) &lt;code&gt;&amp;gt;=&lt;/code&gt; (크거나 같음보다) &lt;code&gt;~&amp;gt;&lt;/code&gt; (보다 약 이상) 또는 &lt;code&gt;&amp;gt;&lt;/code&gt; (보다 큼). 이 필드에서는 이름과 버전이 일치하는 요리 책이 Chef 서버에 없어야합니다. 일치하는 경우 Chef 서버는 충돌하는 요리 책이 요리사 클라이언트가 실행될 때 노드로 전송되는 요리 책 세트에 포함되지 않도록합니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="0069cd689014a44df2fdef4e84684cc7619392eb" translate="yes" xml:space="preserve">
          <source>A cookbook is frequently designed to work across many platforms and is often required to distribute a specific file to a specific platform. A cookbook can be designed to support the distribution of files across platforms, while ensuring that the correct file ends up on each system.</source>
          <target state="translated">쿡북은 종종 여러 플랫폼에서 작동하도록 설계되었으며 특정 파일을 특정 플랫폼에 배포해야하는 경우가 종종 있습니다. 쿡북은 플랫폼 간 파일 배포를 지원하는 동시에 각 시스템에서 올바른 파일이 만들어 지도록 설계 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1dcea232828be47cd397d654a43051a63f1c9030" translate="yes" xml:space="preserve">
          <source>A cookbook is frequently designed to work across many platforms and is often required to distribute a specific template to a specific platform. A cookbook can be designed to support the distribution of templates across platforms, while ensuring that the correct template ends up on each system.</source>
          <target state="translated">쿡북은 많은 플랫폼에서 작동하도록 설계되었으며 종종 특정 템플릿을 특정 플랫폼에 배포해야합니다. 쿡북은 플랫폼 간 템플릿 배포를 지원하는 동시에 각 시스템에서 올바른 템플릿이 만들어 지도록 설계 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d9e4ac52f587221d86428c16f731ab8c453b0da1" translate="yes" xml:space="preserve">
          <source>A cookbook is the fundamental unit of configuration and policy distribution. A cookbook defines a scenario and contains everything that is required to support that scenario:</source>
          <target state="translated">요리 책은 구성 및 정책 배포의 기본 단위입니다. 요리 책은 시나리오를 정의하고 해당 시나리오를 지원하는 데 필요한 모든 것을 포함합니다.</target>
        </trans-unit>
        <trans-unit id="e565f7e86c2b89ef6e8d8fb02c5269b8023cb10a" translate="yes" xml:space="preserve">
          <source>A cookbook library module</source>
          <target state="translated">요리 책 라이브러리 모듈</target>
        </trans-unit>
        <trans-unit id="f1f408c4f5566cb111b0fa96a0e7ad2b00d65e0b" translate="yes" xml:space="preserve">
          <source>A cookbook may have a &lt;code&gt;/files&lt;/code&gt; directory structure like this:</source>
          <target state="translated">쿡북에는 다음 과 같은 &lt;code&gt;/files&lt;/code&gt; 디렉토리 구조 가있을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="b7fa954053ce4ec4c09c365fb22427ead2586937" translate="yes" xml:space="preserve">
          <source>A cookbook may have a &lt;code&gt;/templates&lt;/code&gt; directory structure like this:</source>
          <target state="translated">쿡북은 다음과 같이 &lt;code&gt;/templates&lt;/code&gt; 디렉토리 구조를 가질 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="42b8c69d9214347f11b7d5e9b068f527700bcfbb" translate="yes" xml:space="preserve">
          <source>A cookbook named &lt;code&gt;cumbria&lt;/code&gt; that is used to build a website</source>
          <target state="translated">웹 사이트 구축에 사용되는 &lt;code&gt;cumbria&lt;/code&gt; 라는 요리 책</target>
        </trans-unit>
        <trans-unit id="715d00ca2d9c2922435acb3f9ec45197816a5875" translate="yes" xml:space="preserve">
          <source>A cookbook template is an Embedded Ruby (ERB) template that is used to dynamically generate static text files. Templates may contain Ruby expressions and statements, and are a great way to manage configuration files. Use the &lt;strong&gt;template&lt;/strong&gt; resource to add cookbook templates to recipes; place the corresponding Embedded Ruby (ERB) template file in a cookbook&amp;rsquo;s &lt;code&gt;/templates&lt;/code&gt; directory.</source>
          <target state="translated">쿡북 템플릿은 정적 텍스트 파일을 동적으로 생성하는 데 사용되는 ERB (Embedded Ruby) 템플릿입니다. 템플릿은 Ruby 표현식과 명령문을 포함 할 수 있으며 구성 파일을 관리하는 좋은 방법입니다. 조리법에 요리 책 템플릿을 추가 하려면 &lt;strong&gt;템플릿&lt;/strong&gt; 리소스를 사용하십시오 . 해당 EER (Embedded Ruby) 템플리트 파일을 요리 책의 &lt;code&gt;/templates&lt;/code&gt; 디렉토리에 두십시오 .</target>
        </trans-unit>
        <trans-unit id="8939e12376a2899cc13bf54bd2bc78855e7499bd" translate="yes" xml:space="preserve">
          <source>A cookbook version always takes the form x.y.z, where x, y, and z are decimal numbers that are used to represent major (x), minor (y), and patch (z) versions. A two-part version (x.y) is also allowed. Alphanumeric version numbers (1.2.a3) and version numbers with more than three parts (1.2.3.4) are not allowed.</source>
          <target state="translated">요리 책 버전은 항상 xyz 형식을 취합니다. 여기서 x, y 및 z는 메이저 (x), 마이너 (y) 및 패치 (z) 버전을 나타내는 데 사용되는 10 진수입니다. 두 부분으로 된 버전 (xy)도 허용됩니다. 영숫자 버전 번호 (1.2.a3) 및 3 개 이상의 부품 (1.2.3.4)을 가진 버전 번호는 허용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="ff96932c196b3628e10249ecc0fa6f6555a6da60" translate="yes" xml:space="preserve">
          <source>A cookbook version can be frozen, which will prevent updates from being made to that version of a cookbook. (A user can always upload a new version of a cookbook.) Using cookbook versions that are frozen within environments is a reliable way to keep a production environment safe from accidental updates while testing changes that are made to a development infrastructure.</source>
          <target state="translated">요리 책 버전을 고정하면 해당 요리 책 버전이 업데이트되지 않습니다. (사용자는 항상 새로운 버전의 쿡북을 업로드 할 수 있습니다.) 환경 내에 고정 된 쿡북 버전을 사용하면 개발 인프라에 대한 변경 사항을 테스트하는 동안 프로덕션 환경을 실수로 업데이트하지 않고 안전하게 유지할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f1bfd7e56d61bb349aa7ca42adfca54d8745b294" translate="yes" xml:space="preserve">
          <source>A cookbook version is maintained just like a cookbook, with regard to source control, uploading it to the Chef server, and how the chef-client applies that cookbook when configuring nodes.</source>
          <target state="translated">쿡북 버전은 소스 제어, Chef 서버에 업로드, 요리사-클라이언트가 노드를 구성 할 때 해당 쿡북을 적용하는 방법과 관련하여 쿡북처럼 유지됩니다.</target>
        </trans-unit>
        <trans-unit id="80df0ad0fccffeed12b0ae34488bd3cdb618f334" translate="yes" xml:space="preserve">
          <source>A cookbook version represents a set of functionality that is different from the cookbook on which it is based. A version may exist for many reasons, such as ensuring the correct use of a third-party component, updating a bug fix, or adding an improvement. A cookbook version is defined using syntax and operators, may be associated with environments, cookbook metadata, and/or run-lists, and may be frozen (to prevent unwanted updates from being made).</source>
          <target state="translated">쿡북 버전은 해당 쿡북과 다른 기능 세트를 나타냅니다. 타사 구성 요소의 올바른 사용, 버그 수정 업데이트 또는 개선 추가와 같은 여러 가지 이유로 버전이있을 수 있습니다. 쿡북 버전은 구문과 연산자를 사용하여 정의되며 환경, 쿡북 메타 데이터 및 / 또는 실행 목록과 연관 될 수 있으며 원치 않는 업데이트가 발생하지 않도록 고정 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1516e62646bdb7298192f9ada78f249df9f503eb" translate="yes" xml:space="preserve">
          <source>A cron job similar to the previous example will mount a new snapshot logical volume named:</source>
          <target state="translated">이전 예와 유사한 크론 작업은 다음과 같은 이름의 새 스냅 샷 논리 볼륨을 마운트합니다.</target>
        </trans-unit>
        <trans-unit id="71da6ad724d1b44abfb3188fc990e339a0804145" translate="yes" xml:space="preserve">
          <source>A custom bootstrap template file must be located in a &lt;code&gt;bootstrap/&lt;/code&gt; directory, which is typically located within the &lt;code&gt;~/.chef/&lt;/code&gt; directory on the local workstation.</source>
          <target state="translated">사용자 정의 부트 스트랩 템플릿 파일은 &lt;code&gt;bootstrap/&lt;/code&gt; 디렉토리 에 있어야하며 , 일반적으로 로컬 워크 스테이션 의 &lt;code&gt;~/.chef/&lt;/code&gt; 디렉토리에 있습니다.</target>
        </trans-unit>
        <trans-unit id="491513f15e6da5adbf6ba861ce235fc451c537a8" translate="yes" xml:space="preserve">
          <source>A custom handler can be created to support any situation. The easiest way to build a custom handler:</source>
          <target state="translated">모든 상황을 지원하기 위해 사용자 정의 핸들러를 작성할 수 있습니다. 커스텀 핸들러를 만드는 가장 쉬운 방법 :</target>
        </trans-unit>
        <trans-unit id="2ed082b0e06422287f54f6ff33da3d99074c609d" translate="yes" xml:space="preserve">
          <source>A custom resource is an abstract approach for defining a set of actions and (for each action) a set of properties and validation parameters.</source>
          <target state="translated">사용자 지정 리소스는 일련의 작업과 속성 및 유효성 검사 매개 변수 집합을 정의하기위한 추상적 인 접근 방식입니다.</target>
        </trans-unit>
        <trans-unit id="1ede070d97a74468ee65c4953cf63226dfaaedfb" translate="yes" xml:space="preserve">
          <source>A custom resource is defined as a Ruby file and is located in a cookbook&amp;rsquo;s &lt;code&gt;/resources&lt;/code&gt; directory. This file</source>
          <target state="translated">사용자 정의 자원은 Ruby 파일로 정의되며 쿡북의 &lt;code&gt;/resources&lt;/code&gt; 디렉토리에 있습니다. 이 파일</target>
        </trans-unit>
        <trans-unit id="65df5028951b949893fb1f3a513abd0d5ef153f4" translate="yes" xml:space="preserve">
          <source>A custom resource typically contains:</source>
          <target state="translated">사용자 정의 리소스에는 일반적으로 다음이 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="9964610e5c5f7c20a9dbe9494d72ce9a9cd37273" translate="yes" xml:space="preserve">
          <source>A custom resource:</source>
          <target state="translated">맞춤 리소스 :</target>
        </trans-unit>
        <trans-unit id="32408a06776899c919ae7bef10812b6ce99e9231" translate="yes" xml:space="preserve">
          <source>A customer record is stored in an attribute file that looks like this:</source>
          <target state="translated">고객 레코드는 다음과 같은 속성 파일에 저장됩니다.</target>
        </trans-unit>
        <trans-unit id="a3884319716f3afbbbc93d5b9c1196c8f1a0e5b1" translate="yes" xml:space="preserve">
          <source>A data bag is a container of related data bag items, where each individual data bag item is a JSON file. knife can load a data bag item by specifying the name of the data bag to which the item belongs and then the filename of the data bag item. The only structural requirement of a data bag item is that it must have an &lt;code&gt;id&lt;/code&gt;:</source>
          <target state="translated">데이터 백은 관련 데이터 백 항목의 컨테이너이며, 각 개별 데이터 백 항목은 JSON 파일입니다. knife는 항목이 속하는 데이터 백의 이름과 데이터 백 항목의 파일 이름을 지정하여 데이터 백 항목을로드 할 수 있습니다. 데이터 백 항목의 유일한 구조 요구 사항은 &lt;code&gt;id&lt;/code&gt; 가 있어야한다는 것입니다 .</target>
        </trans-unit>
        <trans-unit id="59b6687c32609a494f1cead2436a684431fefe89" translate="yes" xml:space="preserve">
          <source>A data bag is a global variable that is stored as JSON data and is accessible from a Chef server. A data bag is indexed for searching and can be loaded by a recipe or accessed during a search.</source>
          <target state="translated">데이터 백은 JSON 데이터로 저장되고 Chef 서버에서 액세스 할 수있는 글로벌 변수입니다. 데이터 백은 검색을 위해 색인화되며 레시피로로드하거나 검색 중에 액세스 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3753d01334c0d4aff48eee691798ed381c45bfe8" translate="yes" xml:space="preserve">
          <source>A data bag is a global variable that is stored as JSON data and is accessible from a Chef server. The name of the search index is the name of the data bag. For example, if the name of the data bag was &amp;ldquo;admins&amp;rdquo; then a corresponding search query might look something like &lt;code&gt;search(:admins, &quot;*:*&quot;)&lt;/code&gt;.</source>
          <target state="translated">데이터 백은 JSON 데이터로 저장되고 Chef 서버에서 액세스 할 수있는 글로벌 변수입니다. 검색 색인의 이름은 데이터 백의 이름입니다. 예를 들어 데이터 백의 이름이 &quot;admins&quot;인 경우 해당 검색 쿼리는 &lt;code&gt;search(:admins, &quot;*:*&quot;)&lt;/code&gt; 와 유사 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="967077f2c19e1c29cd0eb82650c2ef08ca5d7e69" translate="yes" xml:space="preserve">
          <source>A data bag is defined using JSON. chef-solo will look for data bags in &lt;code&gt;/var/chef/data_bags&lt;/code&gt;, but this location can be modified by changing the setting in solo.rb. For example, the following setting in solo.rb:</source>
          <target state="translated">데이터 백은 JSON을 사용하여 정의됩니다. chef-solo는 &lt;code&gt;/var/chef/data_bags&lt;/code&gt; 에서 데이터 백을 검색 하지만 solo.rb 의 설정을 변경하여이 위치를 수정할 수 있습니다. 예를 들어 solo.rb의 다음 설정 :</target>
        </trans-unit>
        <trans-unit id="0fffa84a9fc0ff3c711197cbd16ca07ed759e2c8" translate="yes" xml:space="preserve">
          <source>A data bag item may be encrypted using &lt;a href=&quot;https://en.wikipedia.org/wiki/Symmetric-key_algorithm&quot;&gt;shared secret encryption&lt;/a&gt;. This allows each data bag item to store confidential information (such as a database password) or to be managed in a source control system (without plain-text data appearing in revision history). Each data bag item may be encrypted individually; if a data bag contains multiple encrypted data bag items, these data bag items are not required to share the same encryption keys.</source>
          <target state="translated">데이터 백 항목은 &lt;a href=&quot;https://en.wikipedia.org/wiki/Symmetric-key_algorithm&quot;&gt;공유 비밀 암호화를&lt;/a&gt; 사용하여 암호화 될 수 있습니다 . 이를 통해 각 데이터 백 항목은 기밀 정보 (예 : 데이터베이스 비밀번호)를 저장하거나 소스 제어 시스템에서 관리 할 수 ​​있습니다 (일반 텍스트 데이터는 개정 내역에 표시되지 않음). 각 데이터 백 항목은 개별적으로 암호화 될 수 있습니다. 데이터 백에 여러 개의 암호화 된 데이터 백 항목이 포함 된 경우 이러한 데이터 백 항목은 동일한 암호화 키를 공유 할 필요가 없습니다.</target>
        </trans-unit>
        <trans-unit id="d66f52de1efd0071e68acdee1389bfcaf908f32a" translate="yes" xml:space="preserve">
          <source>A data bag named &lt;code&gt;sample&lt;/code&gt; contains four data bag items: &lt;code&gt;abc&lt;/code&gt;, &lt;code&gt;bar&lt;/code&gt;, &lt;code&gt;baz&lt;/code&gt;, and &lt;code&gt;quz&lt;/code&gt;. All of the items in-between &lt;code&gt;bar&lt;/code&gt; and &lt;code&gt;foo&lt;/code&gt;, inclusive, can be searched for using an inclusive search pattern.</source>
          <target state="translated">&lt;code&gt;sample&lt;/code&gt; 이라는 데이터 백 에는 &lt;code&gt;abc&lt;/code&gt; , &lt;code&gt;bar&lt;/code&gt; , &lt;code&gt;baz&lt;/code&gt; 및 &lt;code&gt;quz&lt;/code&gt; 의 네 개의 데이터 백 항목이 있습니다. 포괄적 인 검색 패턴을 사용하여 &lt;code&gt;bar&lt;/code&gt; 와 &lt;code&gt;foo&lt;/code&gt; 사이에있는 모든 항목을 검색 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ca67795a4fda87afb9b60e4af0ac979ba452ddd1" translate="yes" xml:space="preserve">
          <source>A data bag named &lt;code&gt;sample&lt;/code&gt; contains four data bag items: &lt;code&gt;abc&lt;/code&gt;, &lt;code&gt;bar&lt;/code&gt;, &lt;code&gt;baz&lt;/code&gt;, and &lt;code&gt;quz&lt;/code&gt;. All of the items that are exclusive to &lt;code&gt;bar&lt;/code&gt; and &lt;code&gt;foo&lt;/code&gt; can be searched for using an exclusive search pattern.</source>
          <target state="translated">&lt;code&gt;sample&lt;/code&gt; 이라는 데이터 백 에는 &lt;code&gt;abc&lt;/code&gt; , &lt;code&gt;bar&lt;/code&gt; , &lt;code&gt;baz&lt;/code&gt; 및 &lt;code&gt;quz&lt;/code&gt; 의 네 개의 데이터 백 항목이 있습니다. &lt;code&gt;bar&lt;/code&gt; 및 &lt;code&gt;foo&lt;/code&gt; 에 독점적 인 모든 항목 은 독점 검색 패턴을 사용하여 검색 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5285d42978d6fa93717078d522d3c43e6376611a" translate="yes" xml:space="preserve">
          <source>A database can contain a list of virtual hosts that are used by customers. A custom namespace could be created that looks something like:</source>
          <target state="translated">데이터베이스에는 고객이 사용하는 가상 호스트 목록이 포함될 수 있습니다. 다음과 같은 사용자 지정 네임 스페이스를 만들 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6847e87a4f9919196a8551327e3df30246d2dcd5" translate="yes" xml:space="preserve">
          <source>A decimal value to pass to &lt;code&gt;umask&lt;/code&gt; before running a job.</source>
          <target state="translated">작업을 실행하기 전에 &lt;code&gt;umask&lt;/code&gt; 에 전달할 10 진수 값 입니다.</target>
        </trans-unit>
        <trans-unit id="c1c695390fd76b6a38a7246bf80a5582b5e3de88" translate="yes" xml:space="preserve">
          <source>A definition</source>
          <target state="translated">정의</target>
        </trans-unit>
        <trans-unit id="20a9d19985f11b63f759f1abbe4b99b1495c6de5" translate="yes" xml:space="preserve">
          <source>A definition behaves like a compile-time macro that is reusable across recipes. A definition is typically created by wrapping arbitrary code around resources that are declared as if they were in a recipe. A definition is then used in one (or more) actual recipes as if the definition were a resource.</source>
          <target state="translated">정의는 레시피에서 재사용 할 수있는 컴파일 타임 매크로처럼 동작합니다. 정의는 일반적으로 레시피에있는 것처럼 선언 된 리소스 주위에 임의의 코드를 배치하여 생성됩니다. 그런 다음 정의는 하나의 실제 레시피에서 정의가 자원 인 것처럼 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="f572822f6366e650fe7fa579151890be2342f00e" translate="yes" xml:space="preserve">
          <source>A definition has four components:</source>
          <target state="translated">정의에는 네 가지 구성 요소가 있습니다.</target>
        </trans-unit>
        <trans-unit id="ed00307eb7b036dae50b45a20648a39576d7a20e" translate="yes" xml:space="preserve">
          <source>A definition is code that is reused across recipes, similar to a compile-time macro. A definition is created using arbitrary code wrapped around built-in chef-client resources&amp;mdash;&lt;strong&gt;file&lt;/strong&gt;, &lt;strong&gt;execute&lt;/strong&gt;, &lt;strong&gt;template&lt;/strong&gt;, and so on&amp;mdash;by declaring those resources into the definition as if they were declared in a recipe. A definition is then used in one (or more) recipes as if it were a resource.</source>
          <target state="translated">정의는 컴파일 타임 매크로와 유사하게 레시피에서 재사용되는 코드입니다. 정의는 내장 된 Chef-Client 리소스 ( &lt;strong&gt;file&lt;/strong&gt; , &lt;strong&gt;execute&lt;/strong&gt; , &lt;strong&gt;template&lt;/strong&gt; 등)로 래핑 된 임의의 코드를 사용하여 레시피에 선언 된 것처럼 해당 리소스를 정의에 선언함으로써 생성됩니다. 그런 다음 정의는 하나 이상의 레시피에서 리소스 인 것처럼 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="76dbab4e17b5beb9ae439789a06d44dd8df6eada" translate="yes" xml:space="preserve">
          <source>A definition is used to create new resources by stringing together one (or more) existing resources.</source>
          <target state="translated">정의는 하나 이상의 기존 리소스를 함께 묶어 새 리소스를 만드는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="e982ea109a6e7b281ace090a1ea359a39820606e" translate="yes" xml:space="preserve">
          <source>A definition that reopens resources would look something like:</source>
          <target state="translated">리소스를 다시 여는 정의는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="d25fe5050f4f7f70db04de1c10864c83a6737a88" translate="yes" xml:space="preserve">
          <source>A deployment happens in four phases:</source>
          <target state="translated">배포는 4 단계로 이루어집니다.</target>
        </trans-unit>
        <trans-unit id="6b642c82d1b96f95b70ef9ff65704fa9aa5f0738" translate="yes" xml:space="preserve">
          <source>A description for a recipe, mostly for cosmetic value within the Chef server user interface.</source>
          <target state="translated">Chef 서버 사용자 인터페이스 내에서 주로 화장품 값에 대한 레시피에 대한 설명입니다.</target>
        </trans-unit>
        <trans-unit id="5df5af6862f3ee5ca363be40dcc213a5940841de" translate="yes" xml:space="preserve">
          <source>A descriptive name for the login system that is displayed to users in the Chef server management console. If a value like &amp;ldquo;corporate&amp;rdquo; is used, then the Chef management console user interface will display strings like &amp;ldquo;the corporate login server&amp;rdquo;, &amp;ldquo;corporate login&amp;rdquo;, or &amp;ldquo;corporate password.&amp;rdquo; Default value: &lt;code&gt;AD/LDAP&lt;/code&gt;.</source>
          <target state="translated">Chef 서버 관리 콘솔에서 사용자에게 표시되는 로그인 시스템의 설명 이름입니다. &quot;corporate&quot;와 같은 값을 사용하면 Chef 관리 콘솔 사용자 인터페이스에 &quot;기업 로그인 서버&quot;, &quot;기업 로그인&quot;또는 &quot;기업 암호&quot;와 같은 문자열이 표시됩니다. 기본 값 : &lt;code&gt;AD/LDAP&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6629dc8584caea658106da31aeddeccd3754f1f3" translate="yes" xml:space="preserve">
          <source>A different issue exists with the knife command line tool that is also related to spaces and directories. The &lt;code&gt;knife cookbook site install&lt;/code&gt; subcommand will fail when the Microsoft Windows directory contains a space.</source>
          <target state="translated">공백 및 디렉토리와 관련된 나이프 명령 행 도구와는 다른 문제가 있습니다. &lt;code&gt;knife cookbook site install&lt;/code&gt; 하위 명령은 Microsoft Windows 디렉터리에 공백이 포함 된 경우 실패합니다.</target>
        </trans-unit>
        <trans-unit id="3b0a3df3d70646b3466e3b17f6f7d731c6182fd2" translate="yes" xml:space="preserve">
          <source>A directory named &lt;code&gt;/images&lt;/code&gt;, which contains images</source>
          <target state="translated">&lt;code&gt;/images&lt;/code&gt; 가 포함 된 / images 디렉토리</target>
        </trans-unit>
        <trans-unit id="fedb1a610dda1a506135b7d9c0b8bd13c73546ef" translate="yes" xml:space="preserve">
          <source>A directory structure:</source>
          <target state="translated">디렉토리 구조 :</target>
        </trans-unit>
        <trans-unit id="ef9cc769bd1f3ce36c8b3851f2d5fca495091e3e" translate="yes" xml:space="preserve">
          <source>A field name/description pair is available in the JSON object. Use the field name when searching for this information in the JSON object. Any field that exists in any JSON description for any role, node, chef-client, environment, or data bag can be searched.</source>
          <target state="translated">필드 이름 / 설명 쌍은 JSON 객체에서 사용할 수 있습니다. JSON 오브젝트에서이 정보를 검색 할 때 필드 이름을 사용하십시오. 역할, 노드, 요리사 클라이언트, 환경 또는 데이터 백에 대한 JSON 설명에 존재하는 모든 필드를 검색 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="307186ebcefada97b2c1cc37d755e5ae89f87aa1" translate="yes" xml:space="preserve">
          <source>A file distribution is a specific type of resource that tells a cookbook how to distribute files, including by node, by platform, or by file version.</source>
          <target state="translated">파일 배포는 요리 책에 노드, 플랫폼 또는 파일 버전을 포함하여 파일을 배포하는 방법을 알려주는 특정 유형의 리소스입니다.</target>
        </trans-unit>
        <trans-unit id="580f77e7852b501ec8c31cd284803bb29fa24911" translate="yes" xml:space="preserve">
          <source>A file named &lt;code&gt;index.html&lt;/code&gt;, which is the root page for the website</source>
          <target state="translated">웹 사이트의 루트 페이지 인 &lt;code&gt;index.html&lt;/code&gt; 파일</target>
        </trans-unit>
        <trans-unit id="85f1cba194e959aabfba1baafac8200f1293fe69" translate="yes" xml:space="preserve">
          <source>A fuzzy matching search pattern is used to search based on the proximity of two strings of characters. An (optional) integer may be used as part of the search query to more closely define the proximity. A fuzzy matching search pattern has the following syntax:</source>
          <target state="translated">퍼지 매칭 검색 패턴은 두 문자열의 근접성에 기초하여 검색하는 데 사용됩니다. 근접성을보다 상세하게 정의하기 위해 (선택적) 정수가 검색 질의의 일부로서 사용될 수있다. 퍼지 일치 검색 패턴은 다음 구문을 갖습니다.</target>
        </trans-unit>
        <trans-unit id="97839ee84e98a0973766f11022fb8478500dfac8" translate="yes" xml:space="preserve">
          <source>A global endpoint may be used to access all of the organizations on the Chef server.</source>
          <target state="translated">글로벌 엔드 포인트는 Chef 서버의 모든 조직에 액세스하는 데 사용될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="60b251ea6cc99ddd1ed293a25ffe09173f71f39b" translate="yes" xml:space="preserve">
          <source>A great way to explore resources</source>
          <target state="translated">리소스를 탐색하는 좋은 방법</target>
        </trans-unit>
        <trans-unit id="c3f634166c80933d0ec5ba9b6a5acbefc2af6968" translate="yes" xml:space="preserve">
          <source>A group account for each user account, one named &lt;code&gt;opscode&lt;/code&gt; and the other named &lt;code&gt;opscode-pgsql&lt;/code&gt; under which services will run</source>
          <target state="translated">서비스가 실행될 각 사용자 계정에 대한 그룹 계정 (이름은 &lt;code&gt;opscode&lt;/code&gt; 및 이름은 &lt;code&gt;opscode-pgsql&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="8e7cc377a8cd57f5e7f8a4d252089ab348a0b49f" translate="yes" xml:space="preserve">
          <source>A group is used to define access to object types and objects in the Chef server and also to assign permissions that determine what types of tasks are available to members of that group who are authorized to perform them. Groups are configured per-organization.</source>
          <target state="translated">그룹은 Chef 서버에서 오브젝트 유형 및 오브젝트에 대한 액세스를 정의하고 해당 그룹의 멤버가 수행 할 수있는 태스크 유형을 판별하는 권한을 지정하는 데 사용됩니다. 그룹은 조직별로 구성됩니다.</target>
        </trans-unit>
        <trans-unit id="76373ace36f74687af047dc5829b0c71710fb512" translate="yes" xml:space="preserve">
          <source>A guard property can be used to evaluate the state of a node during the execution phase of the chef-client run. Based on the results of this evaluation, a guard property is then used to tell the chef-client if it should continue executing a resource. A guard property accepts either a string value or a Ruby block value:</source>
          <target state="translated">보호 속성을 사용하여 chef-client 실행의 실행 단계 동안 노드 상태를 평가할 수 있습니다. 이 평가 결과에 따라 보호 속성을 사용하여 요리사 클라이언트에게 리소스를 계속 실행해야하는지 알 수 있습니다. guard 속성은 문자열 값이나 Ruby 블록 값을받습니다 :</target>
        </trans-unit>
        <trans-unit id="532f895388892b1742c9dd94616e8f7874f30599" translate="yes" xml:space="preserve">
          <source>A guard property is useful for ensuring that a resource is idempotent by allowing that resource to test for the desired state as it is being executed, and then if the desired state is present, for the chef-client to do nothing.</source>
          <target state="translated">보호 속성은 리소스가 실행되는 동안 원하는 상태를 테스트 한 다음 원하는 상태가있는 경우 요리사 클라이언트가 아무 것도 할 수 없도록함으로써 리소스가 pot 등원이되도록하는 데 유용합니다.</target>
        </trans-unit>
        <trans-unit id="0687fe265a4968197b00187360547f5c84005b42" translate="yes" xml:space="preserve">
          <source>A handler that asynchronously pushes exception and report handler data to a STOMP queue, from which data can be processed into data storage.</source>
          <target state="translated">예외 및 보고서 처리기 데이터를 STOMP 대기열로 비동기식으로 푸시하는 처리기에서 데이터를 데이터 저장소로 처리 할 수 ​​있습니다.</target>
        </trans-unit>
        <trans-unit id="9f0716555298e793953f40241d530ac71dbf5021" translate="yes" xml:space="preserve">
          <source>A handler that collects chef-client stats and sends them into a DATADOG newsfeed.</source>
          <target state="translated">chef-client 통계를 수집하여 DATADOG 뉴스 피드로 보내는 핸들러입니다.</target>
        </trans-unit>
        <trans-unit id="07cbffcac5ff3e31f2efbcf4fb70403374e4ee91" translate="yes" xml:space="preserve">
          <source>A handler that collects exception and report handler data and reports it to Campfire, a web-based group chat tool.</source>
          <target state="translated">예외 및 보고서 처리기 데이터를 수집하여 웹 기반 그룹 채팅 도구 인 Campfire에보고하는 처리기입니다.</target>
        </trans-unit>
        <trans-unit id="199c93a88a8817c58df238df33bd13be94ee3c74" translate="yes" xml:space="preserve">
          <source>A handler that collects exception and report handler data and reports it to Graphite, a graphic rendering application.</source>
          <target state="translated">예외 및 보고서 처리기 데이터를 수집하여 그래픽 렌더링 응용 프로그램 인 Graphite에보고하는 처리기입니다.</target>
        </trans-unit>
        <trans-unit id="d73aa82e6ac556d974c51c9a35e3906b6d3db571" translate="yes" xml:space="preserve">
          <source>A handler that collects exception and report handler data and sends it to Cloudkick, a set of cloud server monitoring and management tools.</source>
          <target state="translated">예외 및 보고서 처리기 데이터를 수집하여 클라우드 서버 모니터링 및 관리 도구 세트 인 Cloudkick으로 보내는 처리기입니다.</target>
        </trans-unit>
        <trans-unit id="d9f4ede06942e65c523d49ccf58358ce9eaa807c" translate="yes" xml:space="preserve">
          <source>A handler that collects exception and report handler data and sends it to users via the Flowdock API..</source>
          <target state="translated">예외 및 보고서 처리기 데이터를 수집하여 Flowdock API를 통해 사용자에게 보내는 처리기입니다.</target>
        </trans-unit>
        <trans-unit id="50fce3d29a40114e9083bad87aa0ff442f1de14d" translate="yes" xml:space="preserve">
          <source>A handler that collects exception and report handler data and then sends it as a Growl notification.</source>
          <target state="translated">예외 및 보고서 처리기 데이터를 수집 한 다음 Growl 알림으로 전송하는 처리기입니다.</target>
        </trans-unit>
        <trans-unit id="3ee899721ff1d2fa512ba81e576915ec91593156" translate="yes" xml:space="preserve">
          <source>A handler that collects exception and report handler data and then uses pony to send email reports that are based on Erubis templates.</source>
          <target state="translated">예외 및 보고서 처리기 데이터를 수집 한 다음 조랑말을 사용하여 Erubis 템플릿을 기반으로하는 전자 메일 보고서를 보내는 처리기입니다.</target>
        </trans-unit>
        <trans-unit id="5e59179e06e0f46632531d8179e9ed4858122627" translate="yes" xml:space="preserve">
          <source>A handler that collects exception handler data and sends it to HipChat, a hosted private chat service for companies and teams.</source>
          <target state="translated">예외 처리기 데이터를 수집하여 회사 및 팀을위한 호스팅 된 개인 채팅 서비스 인 HipChat으로 전송하는 처리기입니다.</target>
        </trans-unit>
        <trans-unit id="97bc29575e4c7461bce4ba47d57a9e555a788475" translate="yes" xml:space="preserve">
          <source>A handler that logs an entry to the systemd journal with the chef-client run status, exception details, configurable priority, and custom details.</source>
          <target state="translated">chef-client 실행 상태, 예외 세부 사항, 구성 가능한 우선 순위 및 사용자 정의 세부 사항으로 시스템 저널에 항목을 기록하는 핸들러입니다.</target>
        </trans-unit>
        <trans-unit id="e26464dc2c2994ea706cfbdd585e9ecb6a689987" translate="yes" xml:space="preserve">
          <source>A handler that logs basic essential information, such as about the success or failure of a chef-client run.</source>
          <target state="translated">Chef-Client 실행의 성공 또는 실패와 같은 기본 필수 정보를 기록하는 처리기입니다.</target>
        </trans-unit>
        <trans-unit id="cf27ab76fcb6f02db4a90dba1cec927ed07e0e5f" translate="yes" xml:space="preserve">
          <source>A handler that notifies administrators (via Internet Relay Chat (IRC)) when a chef-client run fails.</source>
          <target state="translated">Chef-Client 실행에 실패하면 IRC (Internet Relay Chat)를 통해 관리자에게 알리는 처리기입니다.</target>
        </trans-unit>
        <trans-unit id="0a00c9c3183601c4f82426eeb4060a29255a8893" translate="yes" xml:space="preserve">
          <source>A handler that notifies exception and report handler data and sends it to a SNS topic.</source>
          <target state="translated">예외 및 보고서 처리기 데이터를 알리고이를 SNS 주제로 보내는 처리기입니다.</target>
        </trans-unit>
        <trans-unit id="ae39b8822ee1e8919db8e6e3fe51a902d03cf0f8" translate="yes" xml:space="preserve">
          <source>A handler that provides a simple way to display resources that were updated during a chef-client run.</source>
          <target state="translated">chef-client 실행 중에 업데이트 된 자원을 표시하는 간단한 방법을 제공하는 핸들러입니다.</target>
        </trans-unit>
        <trans-unit id="7089a96245e435338c09da5ad4429a4405af36eb" translate="yes" xml:space="preserve">
          <source>A handler that provides exception and report handler status (including changes) to a Graylog2 server, so that the data can be viewed using Graylog Extended Log Format (GELF).</source>
          <target state="translated">Graylog 확장 로그 형식 (GELF)을 사용하여 데이터를 볼 수 있도록 Graylog2 서버에 예외 및 보고서 처리기 상태 (변경 사항 포함)를 제공하는 처리기.</target>
        </trans-unit>
        <trans-unit id="2a4985f4c2cc9a9ba051902850760df130aa0886" translate="yes" xml:space="preserve">
          <source>A handler that reports the status of a Chef run to any API via net/HTTP.</source>
          <target state="translated">Net / HTTP를 통해 Chef 실행 상태를 API에보고하는 핸들러입니다.</target>
        </trans-unit>
        <trans-unit id="da02b40f84bbfeadf5e802052efde67c47d5aa7c" translate="yes" xml:space="preserve">
          <source>A handler that sends exceptions (only) to Airbrake, an application that collects data and aggregates it for review.</source>
          <target state="translated">데이터를 수집하고 검토를 위해 집계하는 응용 프로그램 인 Airbrake에 예외 (전용)를 보내는 처리기입니다.</target>
        </trans-unit>
        <trans-unit id="e6c005f3945fc37dd25e37c89a7a70c2e141f24e" translate="yes" xml:space="preserve">
          <source>A handler that supports exceptions and reports for Splunk Storm.</source>
          <target state="translated">Splunk Storm에 대한 예외 및 보고서를 지원하는 핸들러입니다.</target>
        </trans-unit>
        <trans-unit id="1ed06ca3faaf8c68513a60c04cbe44e946db35f1" translate="yes" xml:space="preserve">
          <source>A handler to send chef-client run notifications to a Slack channel.</source>
          <target state="translated">Chef-Client 실행 알림을 Slack 채널로 보내는 핸들러입니다.</target>
        </trans-unit>
        <trans-unit id="4deaf2d75af23e1b07fe7e058fdd4e053f5e0fda" translate="yes" xml:space="preserve">
          <source>A hard link is a directory entry that associates a file with another file in the same file system. In other words, &amp;ldquo;multiple directory entries to the same file.&amp;rdquo; A hard link creates a new file that points to the same inode as the original file.</source>
          <target state="translated">하드 링크는 파일을 동일한 파일 시스템의 다른 파일과 연관시키는 디렉토리 항목입니다. 즉, &quot;동일한 파일에 여러 디렉토리 항목&quot; 하드 링크는 원본 파일과 동일한 inode를 가리키는 새 파일을 만듭니다.</target>
        </trans-unit>
        <trans-unit id="095f902a609487e3e4a1406a266b762025d91829" translate="yes" xml:space="preserve">
          <source>A hash is a collection of key-value pairs. Indexing for a hash is done using arbitrary keys of any object (as opposed to the indexing done by an array). The syntax for a hash is: &lt;code&gt;key =&amp;gt; &quot;value&quot;&lt;/code&gt;.</source>
          <target state="translated">해시는 키-값 쌍의 모음입니다. 해시에 대한 인덱싱은 모든 객체의 임의의 키를 사용하여 수행됩니다 (배열에 의한 인덱싱과 반대). 해시 구문은 &lt;code&gt;key =&amp;gt; &quot;value&quot;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="da127ea5f7a5103999d9e12862e763ddfcfa4b30" translate="yes" xml:space="preserve">
          <source>A hash of &lt;code&gt;variable_name =&amp;gt; value&lt;/code&gt; that will be made available to the partial template file. When this option is used, any variables that are defined in the top-level template that are required by the partial template file must have them defined explicitly using this option</source>
          <target state="translated">부분 템플릿 파일에서 사용할 수있는 &lt;code&gt;variable_name =&amp;gt; value&lt;/code&gt; 의 해시 . 이 옵션을 사용하면 부분 템플릿 파일에 필요한 최상위 템플릿에 정의 된 모든 변수에이 옵션을 사용하여 명시 적으로 정의해야합니다</target>
        </trans-unit>
        <trans-unit id="29ef65bf1af7ef65dcc04a195d2c032ebed93270" translate="yes" xml:space="preserve">
          <source>A hash of options that contains hints about the capabilities of a resource. The chef-client may use these hints to help identify the correct provider. This property is only used by a small number of providers, including &lt;strong&gt;user&lt;/strong&gt; and &lt;strong&gt;service&lt;/strong&gt;.</source>
          <target state="translated">리소스 기능에 대한 힌트가 포함 된 옵션 해시. 요리사 클라이언트는이 힌트를 사용하여 올바른 제공자를 식별 할 수 있습니다. 이 속성은 &lt;strong&gt;user&lt;/strong&gt; 및 &lt;strong&gt;service를&lt;/strong&gt; 포함한 소수의 공급자 만 사용 &lt;strong&gt;합니다&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="d24405d1b5f3da200f10ab634c493f58aa2e0051" translate="yes" xml:space="preserve">
          <source>A hash that can be used within a definition&amp;rsquo;s body to provide access to parameters and their values</source>
          <target state="translated">정의 본문에서 매개 변수 및 해당 값에 대한 액세스를 제공하는 데 사용할 수있는 해시</target>
        </trans-unit>
        <trans-unit id="ab3d2b030fc899eff3e8a40b7d740135eefc7cdf" translate="yes" xml:space="preserve">
          <source>A hash that contains advanced rights options. For example, the rights to a directory that only applies to the first level of children might look something like: &lt;code&gt;rights :write, 'domain\group_name', :one_level_deep =&amp;gt; true&lt;/code&gt;. Possible option types:</source>
          <target state="translated">고급 권한 옵션이 포함 된 해시. 예를 들어, 단지 같은 것을 보일 수 있습니다 아이들의 첫 번째 수준에 적용되는 디렉토리에 대한 권리 : &lt;code&gt;rights :write, 'domain\group_name', :one_level_deep =&amp;gt; true&lt;/code&gt; . 가능한 옵션 유형 :</target>
        </trans-unit>
        <trans-unit id="1c580aa9968c4f4c578bebd3c69d4c07885efbd0" translate="yes" xml:space="preserve">
          <source>A healthy connection state is similar to:</source>
          <target state="translated">정상적인 연결 상태는 다음과 유사합니다.</target>
        </trans-unit>
        <trans-unit id="e693f49f563a444ead54ac53cdff91c337d33ecc" translate="yes" xml:space="preserve">
          <source>A helper is a method or a module that can be used to extend a template. There are three approaches:</source>
          <target state="translated">도우미는 템플릿을 확장하는 데 사용할 수있는 방법 또는 모듈입니다. 세 가지 접근 방식이 있습니다.</target>
        </trans-unit>
        <trans-unit id="048ab9a5d72cece0e059020cdae8960095a10437" translate="yes" xml:space="preserve">
          <source>A hidden directory that is used to store validation key files and the knife.rb file.</source>
          <target state="translated">유효성 검사 키 파일과 knife.rb 파일을 저장하는 데 사용되는 숨겨진 디렉토리입니다.</target>
        </trans-unit>
        <trans-unit id="6b7bf9b57d4536e50951eb948a32dea3654a6fae" translate="yes" xml:space="preserve">
          <source>A hosted Chef server account</source>
          <target state="translated">호스팅 된 Chef 서버 계정</target>
        </trans-unit>
        <trans-unit id="d3ed64c4865cca9c41c7ac66058e2a7014efe31f" translate="yes" xml:space="preserve">
          <source>A job entry may also be &lt;code&gt;'job-name' =&amp;gt; {:lock =&amp;gt; true}&lt;/code&gt;, which will check the &lt;code&gt;lockfile&lt;/code&gt; setting in the client.rb file before starting the job.</source>
          <target state="translated">작업 항목은 &lt;code&gt;'job-name' =&amp;gt; {:lock =&amp;gt; true}&lt;/code&gt; 일 수 있으며 작업을 시작하기 전에 client.rb 파일에서 &lt;code&gt;lockfile&lt;/code&gt; 설정을 확인합니다 .</target>
        </trans-unit>
        <trans-unit id="bcf00299387d024b186084e28037c8e72e48a4e2" translate="yes" xml:space="preserve">
          <source>A knife plugin can be used to make authenticated API requests to the Chef server using the following methods:</source>
          <target state="translated">나이프 플러그인은 다음 방법을 사용하여 Chef 서버에 인증 된 API 요청을 작성하는 데 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="368b799f0e02df031199aedfac1a02cc09bad0f9" translate="yes" xml:space="preserve">
          <source>A knife plugin is a set of one (or more) subcommands that can be added to knife to support additional functionality that is not built-in to the base set of knife subcommands. Many of the knife plugins are built by members of the Chef community and several of them are built and maintained by Chef. A knife plugin is installed to the &lt;code&gt;~/.chef/plugins/knife/&lt;/code&gt; directory, from where it can be run just like any other knife subcommand.</source>
          <target state="translated">knife 플러그인은 기본 knife 하위 명령 세트에 내장되어 있지 않은 추가 기능을 지원하기 위해 knife에 추가 할 수있는 하나 이상의 하위 명령 세트입니다. 많은 나이프 플러그인은 Chef 커뮤니티의 구성원이 작성하고 그 중 일부는 Chef가 작성하고 유지 보수합니다. 나이프 플러그인은 &lt;code&gt;~/.chef/plugins/knife/&lt;/code&gt; 설치됩니다. 디렉토리에 설치되며 다른 나이프 하위 명령처럼 실행할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="fb70797489d3e95e47db27a74e276483fab7966d" translate="yes" xml:space="preserve">
          <source>A knife.rb file is used to specify the chef-repo-specific configuration details for knife.</source>
          <target state="translated">knife.rb 파일은 knife의 chef-repo 특정 구성 세부 사항을 지정하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="8fffb7edfd933a0c52480989fd8992b1e1fb4684" translate="yes" xml:space="preserve">
          <source>A knife.rb file:</source>
          <target state="translated">knife.rb 파일 :</target>
        </trans-unit>
        <trans-unit id="bb16a6a6947ef908bb5b76b68e7b9a1d13a3b50d" translate="yes" xml:space="preserve">
          <source>A library allows arbitrary Ruby code to be included in a cookbook, either as a way of extending the classes that are built-in to the chef-client&amp;mdash;&lt;code&gt;Chef::Recipe&lt;/code&gt;, for example&amp;mdash;or for implementing entirely new functionality, similar to a mixin in Ruby. A library file is a Ruby file that is located within a cookbook&amp;rsquo;s &lt;code&gt;/libraries&lt;/code&gt; directory. Because a library is built using Ruby, anything that can be done with Ruby can be done in a library file.</source>
          <target state="translated">라이브러리를 통해 요리사 클라이언트에 내장 된 클래스 ( 예 &lt;code&gt;Chef::Recipe&lt;/code&gt; )를 확장하거나 완전히 새로운 기능을 구현하기 위해 임의의 Ruby 코드를 요리 책에 포함시킬 수 있습니다 . 루비에서 믹스 인. 라이브러리 파일은 요리 책의 &lt;code&gt;/libraries&lt;/code&gt; 내에있는 Ruby 파일입니다. 디렉토리 . 라이브러리는 Ruby를 사용하여 빌드되므로 Ruby로 수행 할 수있는 모든 작업은 라이브러리 파일에서 수행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8b0fe30e43380ea9cb30a87f803ec73c073ec314" translate="yes" xml:space="preserve">
          <source>A library allows the use of arbitrary Ruby code in a cookbook, either as a way to extend the chef-client language or to implement a new class.</source>
          <target state="translated">라이브러리는 요리사 클라이언트 언어를 확장하거나 새로운 클래스를 구현하는 방법으로 요리 책에 임의의 루비 코드를 사용할 수 있도록합니다.</target>
        </trans-unit>
        <trans-unit id="940c6ad8f290ce98d84d53bcfec6144bafa07eb5" translate="yes" xml:space="preserve">
          <source>A list of all resources that are included in the &lt;code&gt;resource_collection&lt;/code&gt; property for the current chef-client run.</source>
          <target state="translated">에 포함되어있는 모든 자원의 목록 &lt;code&gt;resource_collection&lt;/code&gt; 현재 chef-client 실행 특성에 .</target>
        </trans-unit>
        <trans-unit id="d4f3be93d4c8d4bef6c7294ba71ac69ecdd3c671" translate="yes" xml:space="preserve">
          <source>A list of defined custom properties (property values are specified in recipes)</source>
          <target state="translated">정의 된 사용자 정의 특성 목록 (프로퍼티 값은 레시피에 지정됨)</target>
        </trans-unit>
        <trans-unit id="3127b25409ccd463fe553d09f64e9df34b8ba30d" translate="yes" xml:space="preserve">
          <source>A list of exception handlers that are available to the chef-client during a chef-client run.</source>
          <target state="translated">chef-client 실행 중에 chef-client가 사용할 수있는 예외 핸들러 목록입니다.</target>
        </trans-unit>
        <trans-unit id="353df947c96f54a96f503a06018439bf329b0441" translate="yes" xml:space="preserve">
          <source>A list of properties that controls how the chef-client is to attempt to manage a service: &lt;code&gt;:restart&lt;/code&gt;, &lt;code&gt;:reload&lt;/code&gt;, &lt;code&gt;:status&lt;/code&gt;. For &lt;code&gt;:restart&lt;/code&gt;, the init script or other service provider can use a restart command; if &lt;code&gt;:restart&lt;/code&gt; is not specified, the chef-client attempts to stop and then start a service. For &lt;code&gt;:reload&lt;/code&gt;, the init script or other service provider can use a reload command. For &lt;code&gt;:status&lt;/code&gt;, the init script or other service provider can use a status command to determine if the service is running; if &lt;code&gt;:status&lt;/code&gt; is not specified, the chef-client attempts to match the &lt;code&gt;service_name&lt;/code&gt; against the process table as a regular expression, unless a pattern is specified as a parameter property. Default value: &lt;code&gt;{ :restart =&amp;gt; false, :reload =&amp;gt; false, :status =&amp;gt; false }&lt;/code&gt; for all platforms (except for the Red Hat platform family, which defaults to &lt;code&gt;{ :restart =&amp;gt; false, :reload =&amp;gt; false, :status =&amp;gt; true }&lt;/code&gt;.)</source>
          <target state="translated">요리사 클라이언트가 시도하는 방법 컨트롤이 서비스를 관리 할 수 있다는 특성의 목록 : &lt;code&gt;:restart&lt;/code&gt; , &lt;code&gt;:reload&lt;/code&gt; , &lt;code&gt;:status&lt;/code&gt; . 의 경우 &lt;code&gt;:restart&lt;/code&gt; , 초기화 스크립트 나 다른 서비스 제공 업체는 다시 시작 명령을 사용할 수 있습니다; 경우 &lt;code&gt;:restart&lt;/code&gt; 지정되지 않은, 요리사 클라이언트 시도를 중지 한 다음 서비스를 시작합니다. 의 경우 &lt;code&gt;:reload&lt;/code&gt; , 초기화 스크립트 나 다른 서비스 제공 업체는 다시로드 명령을 사용할 수 있습니다. 의 경우 &lt;code&gt;:status&lt;/code&gt; , 초기화 스크립트 나 다른 서비스 제공자는 서비스가 실행되고 있는지 확인하려면 상태 명령을 사용할 수 있습니다; 경우 &lt;code&gt;:status&lt;/code&gt; 지정되지 않은, 요리사 클라이언트 시도는 일치하는 &lt;code&gt;service_name&lt;/code&gt; 패턴이 매개 변수 특성으로 지정되지 않는 한 프로세스 테이블에 대해 정규식으로 사용됩니다. 기본값 : 모든 플랫폼에 대한 &lt;code&gt;{ :restart =&amp;gt; false, :reload =&amp;gt; false, :status =&amp;gt; false }&lt;/code&gt; (기본적으로 &lt;code&gt;{ :restart =&amp;gt; false, :reload =&amp;gt; false, :status =&amp;gt; true }&lt;/code&gt; Red Hat 플랫폼 제품군 제외 ) : status =&amp;gt; true} .)</target>
        </trans-unit>
        <trans-unit id="19e802076bb3be89ae199dac1b8be2515968457c" translate="yes" xml:space="preserve">
          <source>A list of recipes associated with a node (and part of that node&amp;rsquo;s run-list).</source>
          <target state="translated">노드 (및 해당 노드의 런리스트의 일부)와 관련된 레시피 목록.</target>
        </trans-unit>
        <trans-unit id="fbe26b09dd150cfde592f50ca938f4bd00efa4b3" translate="yes" xml:space="preserve">
          <source>A list of report handlers that are available to the chef-client during a chef-client run.</source>
          <target state="translated">chef-client 실행 중에 chef-client가 사용할 수있는 보고서 핸들러 목록입니다.</target>
        </trans-unit>
        <trans-unit id="912931a10b5518c19e97dea7675ef8eb3d8295b1" translate="yes" xml:space="preserve">
          <source>A list of resources that were marked as updated as a result of the chef-client run.</source>
          <target state="translated">chef-client 실행 결과 업데이트 된 것으로 표시된 리소스 목록입니다.</target>
        </trans-unit>
        <trans-unit id="5dd32d620db68bcc958db45a5e503d9002904390" translate="yes" xml:space="preserve">
          <source>A list of roles associated with a node (and part of that node&amp;rsquo;s run-list).</source>
          <target state="translated">노드 (및 해당 노드의 실행 목록의 일부)와 연관된 역할 목록.</target>
        </trans-unit>
        <trans-unit id="6acf500c36cec418d003d0bf3b45801897dd1b08" translate="yes" xml:space="preserve">
          <source>A list of start handlers that are available to the chef-client at the start of a chef-client run.</source>
          <target state="translated">chef-client 실행을 시작할 때 chef-client가 사용할 수있는 시작 처리기 목록입니다.</target>
        </trans-unit>
        <trans-unit id="fb5e6be0bfd81c68d9dade93ba973ee5d18f4c49" translate="yes" xml:space="preserve">
          <source>A local directory.</source>
          <target state="translated">로컬 디렉토리</target>
        </trans-unit>
        <trans-unit id="095dd4f1cc0e1d67acc7f678254019a1121df9c8" translate="yes" xml:space="preserve">
          <source>A local mail transfer agent that allows the Chef server to send email notifications</source>
          <target state="translated">Chef 서버가 이메일 알림을 보낼 수있는 로컬 메일 전송 에이전트</target>
        </trans-unit>
        <trans-unit id="a4e7a7cf74f50331907c2a0fd76309d3f86a2a4d" translate="yes" xml:space="preserve">
          <source>A local user account named &lt;code&gt;opscode-pgsql&lt;/code&gt; that is used by PostgreSQL</source>
          <target state="translated">PostgreSQL에서 사용하는 &lt;code&gt;opscode-pgsql&lt;/code&gt; 이라는 로컬 사용자 계정</target>
        </trans-unit>
        <trans-unit id="b02d1d51a8fb07e9357d0fc4c780c2dfe0ac8ef3" translate="yes" xml:space="preserve">
          <source>A local user account named &lt;code&gt;opscode&lt;/code&gt; under which services will run</source>
          <target state="translated">서비스가 실행될 &lt;code&gt;opscode&lt;/code&gt; 라는 로컬 사용자 계정</target>
        </trans-unit>
        <trans-unit id="90e12de6a494eea2a4432bcf8d5b6138837c39af" translate="yes" xml:space="preserve">
          <source>A longer description that ideally contains full instructions on the proper use of a cookbook, including definitions, libraries, dependencies, and so on. There are two ways to use this field: with the contents embedded in the field itself or with the contents pulled from a file at a specified path, such as a README.rdoc located at the top of a cookbook directory.</source>
          <target state="translated">정의, 라이브러리, 종속성 등을 포함하여 요리 책을 올바르게 사용하는 방법에 대한 전체 지침을 포함하는 더 긴 설명. 이 필드를 사용하는 방법은 필드 자체에 포함 된 내용 또는 요리 책 디렉토리의 상단에있는 README.rdoc와 같이 지정된 경로의 파일에서 가져온 내용과 함께 두 가지 방법이 있습니다.</target>
        </trans-unit>
        <trans-unit id="d6ccc3ff1a087d816947f51d540d3098f027ea45" translate="yes" xml:space="preserve">
          <source>A loop statement is used to execute a block of code one (or more) times. A loop statement is created when &lt;code&gt;.each&lt;/code&gt; is added to an expression that defines an array or a hash. An array is an integer-indexed collection of objects. Each element in an array can be associated with and referred to by an index.</source>
          <target state="translated">루프 문은 코드 블록을 한 번 이상 실행하는 데 사용됩니다. &lt;code&gt;.each&lt;/code&gt; 가 배열 또는 해시를 정의하는 표현식에 추가 될 때 루프 문이 작성됩니다 . 배열은 정수 인덱스 개체의 모음입니다. 배열의 각 요소는 인덱스와 연관되고 참조 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5652f027775c5c6f3216072c312111e7eb3b3853" translate="yes" xml:space="preserve">
          <source>A message to display on the sign-in page. If present, the message will show up in a box on the sign in page. Any valid HTML is allowed here. Default value: &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">로그인 페이지에 표시 할 메시지입니다. 있는 경우 메시지가 로그인 페이지의 상자에 표시됩니다. 유효한 모든 HTML이 여기에 허용됩니다. 기본 값 : &lt;code&gt;nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bd0eef4de50400459b2e6b50b0e80cfdda36adfa" translate="yes" xml:space="preserve">
          <source>A metadata file is used to ensure that each cookbook is correctly deployed to each node.</source>
          <target state="translated">메타 데이터 파일은 각 요리 책이 각 노드에 올바르게 배포되도록하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="836c938bd2b05d36ac6bd8f81b2801c03b58936e" translate="yes" xml:space="preserve">
          <source>A metadata.json file can be edited directly, should temporary changes be required. Any subsequent upload or action that generates metadata will cause the existing metadata.json file to be overwritten with the newly generated metadata. Therefore, any permanent changes to cookbook metadata should be done in the metadata.rb file, and then re-uploaded to the Chef server.</source>
          <target state="translated">일시적인 변경이 필요한 경우 metadata.json 파일을 직접 편집 할 수 있습니다. 메타 데이터를 생성하는 후속 업로드 또는 조치는 기존 metadata.json 파일을 새로 생성 된 메타 데이터로 겹쳐 쓰게합니다. 따라서 cookbook 메타 데이터의 영구적 인 변경은 metadata.rb 파일에서 수행 한 다음 Chef 서버로 다시 업로드해야합니다.</target>
        </trans-unit>
        <trans-unit id="7c781e90bf504721ff748ca5a0708e2bdc6111da" translate="yes" xml:space="preserve">
          <source>A metadata.rb file is:</source>
          <target state="translated">metadata.rb 파일은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="4f415ebb90ff590067e960dc0dd88a769bfe79a8" translate="yes" xml:space="preserve">
          <source>A nested field appears deeper in the JSON data structure. For example, information about a network interface might be several layers deep: &lt;code&gt;node[:network][:interfaces][:en1]&lt;/code&gt;. When nested fields are present in a JSON structure, the chef-client will extract those nested fields to the top-level, flattening them into compound fields that support wildcard search patterns.</source>
          <target state="translated">중첩 된 필드는 JSON 데이터 구조에서 더 깊게 나타납니다. 예를 들어, 네트워크 인터페이스에 대한 정보는 &lt;code&gt;node[:network][:interfaces][:en1]&lt;/code&gt; 같은 여러 계층 깊이 일 수 있습니다 . 중첩 된 필드가 JSON 구조에있는 경우 요리사-클라이언트는 중첩 된 필드를 최상위 레벨로 추출하여 와일드 카드 검색 패턴을 지원하는 복합 필드로 병합합니다.</target>
        </trans-unit>
        <trans-unit id="d81f9fa9ac549c9d79cbca4684d35a5bc45bb846" translate="yes" xml:space="preserve">
          <source>A network node is any networking device&amp;mdash;a switch, a router&amp;mdash;that is being managed by a chef-client, such as networking devices by Juniper Networks, Arista, Cisco, and F5. Use Chef to automate common network configurations, such as physical and logical Ethernet link properties and VLANs, on these devices.</source>
          <target state="translated">네트워크 노드는 Juniper Networks, Arista, Cisco 및 F5의 네트워킹 장치와 같이 요리사 클라이언트가 관리하는 네트워킹 장치 (스위치, 라우터)입니다. Chef를 사용하여 이러한 장치에서 물리적 및 논리적 이더넷 링크 속성 및 VLAN과 같은 일반적인 네트워크 구성을 자동화하십시오.</target>
        </trans-unit>
        <trans-unit id="d712857045b5b9ec4c15894484c454b288d6df89" translate="yes" xml:space="preserve">
          <source>A new &amp;ldquo;pristine copy&amp;rdquo; branch is created in git for tracking the upstream.</source>
          <target state="translated">업스트림을 추적하기 위해 git에 새로운&amp;ldquo;pristine copy&amp;rdquo;브랜치가 생성됩니다.</target>
        </trans-unit>
        <trans-unit id="fd49aed6f83cf1f40419030a89a7f4748eca75bb" translate="yes" xml:space="preserve">
          <source>A new directory in the chef-repo&amp;mdash;&lt;code&gt;/.chef/trusted_certs&lt;/code&gt;&amp;mdash;was added.</source>
          <target state="translated">요리사-repo-의 새로운 디렉토리 &lt;code&gt;/.chef/trusted_certs&lt;/code&gt; 은 추가 였나.</target>
        </trans-unit>
        <trans-unit id="0378d935b8bcd2afd95ba608c927ed3466dde31a" translate="yes" xml:space="preserve">
          <source>A node can be searched from a recipe by using the following syntax:</source>
          <target state="translated">다음 구문을 사용하여 레시피에서 노드를 검색 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7e401c93defa4df7a55a1ac175abf168050e0c1a" translate="yes" xml:space="preserve">
          <source>A node is any machine&amp;mdash;physical, virtual, cloud, network device, etc.&amp;mdash;that is under management by Chef.</source>
          <target state="translated">노드는 Chef가 관리하는 모든 머신 (실제, 가상, 클라우드, 네트워크 장치 등)입니다.</target>
        </trans-unit>
        <trans-unit id="57daf573f3f33a73d6876de3fba9ec69ae0ceaf7" translate="yes" xml:space="preserve">
          <source>A node is any physical, virtual, or cloud machine that is configured to be maintained by a chef-client. A bootstrap is a process that installs the chef-client on a target system so that it can run as a chef-client and communicate with a Chef server. There are two ways to do this:</source>
          <target state="translated">노드는 chef-client가 유지 보수하도록 구성된 실제, 가상 또는 클라우드 머신입니다. 부트 스트랩은 요리사 클라이언트를 대상 시스템에 설치하여 요리사 클라이언트로 실행하고 Chef 서버와 통신 할 수 있도록하는 프로세스입니다. 이를 수행하는 두 가지 방법이 있습니다.</target>
        </trans-unit>
        <trans-unit id="49f8ab8ea2776bd9558d94224e7f43b9a84ba2d9" translate="yes" xml:space="preserve">
          <source>A node is any server or virtual server that is configured to be maintained by a chef-client.</source>
          <target state="translated">노드는 chef-client가 유지 보수하도록 구성된 모든 서버 또는 가상 서버입니다.</target>
        </trans-unit>
        <trans-unit id="dcd21f227980931c64c80dc90c9b043d06688dac" translate="yes" xml:space="preserve">
          <source>A node&amp;rsquo;s initial run-list is specified using a JSON file on the host system. When running the chef-client as an executable, use the &lt;code&gt;-j&lt;/code&gt; option to tell the chef-client which JSON file to use. For example:</source>
          <target state="translated">노드의 초기 실행 목록은 호스트 시스템에서 JSON 파일을 사용하여 지정됩니다. chef-client를 실행 파일로 실행할 때 &lt;code&gt;-j&lt;/code&gt; 옵션을 사용 하여 chef-client에게 사용할 JSON 파일을 알려주십시오. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="319f3263b77dd4b53498031d544d672b8eb4173d" translate="yes" xml:space="preserve">
          <source>A notification is a property on a resource that listens to other resources in the resource collection and then takes actions based on the notification type (&lt;code&gt;notifies&lt;/code&gt; or &lt;code&gt;subscribes&lt;/code&gt;).</source>
          <target state="translated">통지는 자원 콜렉션의 다른 자원을 청취 한 다음 통지 유형에 따라 조치 ( &lt;code&gt;notifies&lt;/code&gt; 또는 &lt;code&gt;subscribes&lt;/code&gt; )를 수행하는 자원의 특성입니다 .</target>
        </trans-unit>
        <trans-unit id="d824abcc8ed7e819f9de9557122453b16c6a4ca0" translate="yes" xml:space="preserve">
          <source>A package at a remote location define as a Hash of properties that modifes the properties of the &lt;strong&gt;remote_file&lt;/strong&gt; resource.</source>
          <target state="translated">원격 위치의 패키지는 &lt;strong&gt;remote_file&lt;/strong&gt; 리소스 의 속성을 수정하는 속성 해시로 정의됩니다 .</target>
        </trans-unit>
        <trans-unit id="b87576262deb0cbf279007a9d6d9b78a3e226ee2" translate="yes" xml:space="preserve">
          <source>A package that is installed with a specific version:</source>
          <target state="translated">특정 버전으로 설치된 패키지 :</target>
        </trans-unit>
        <trans-unit id="5b191553250a3cf34f4ad838805aac30d568aa4e" translate="yes" xml:space="preserve">
          <source>A package that is not installed:</source>
          <target state="translated">설치되지 않은 패키지 :</target>
        </trans-unit>
        <trans-unit id="07b9262ad3be045c5b398a0799bf566bfac6305a" translate="yes" xml:space="preserve">
          <source>A partial search query allows a search query to be made against specific attribute keys that are stored on the Chef server. A partial search query can search the same set of objects on the Chef server as a full search query, including specifying an object index and providing a query that can be matched to the relevant index. While a full search query will return an array of objects that match (each object containing a full set of attributes for the node), a partial search query will return only the values for the attributes that match. One primary benefit of using a partial search query is that it requires less memory and network bandwidth while the chef-client processes the search results.</source>
          <target state="translated">부분 검색 쿼리를 사용하면 Chef 서버에 저장된 특정 속성 키에 대해 검색 쿼리를 만들 수 있습니다. 부분 검색 쿼리는 개체 인덱스 지정 및 관련 인덱스와 일치 할 수있는 쿼리 제공을 포함하여 Chef 서버에서 전체 검색 쿼리와 동일한 개체 집합을 검색 할 수 있습니다. 전체 검색 쿼리는 일치하는 개체 배열 (각 노드에 대한 전체 속성 집합이 포함 된 개체)을 반환하지만 부분 검색 쿼리는 일치하는 속성 값만 반환합니다. 부분 검색 쿼리를 사용할 때의 주요 이점 중 하나는 요리사 클라이언트가 검색 결과를 처리하는 동안 적은 메모리와 네트워크 대역폭이 필요하다는 것입니다.</target>
        </trans-unit>
        <trans-unit id="6c571aec8f1f0228a635c903b170c20918b45e96" translate="yes" xml:space="preserve">
          <source>A pattern is relative to the cookbook root</source>
          <target state="translated">요리 책 루트에 상대적인 패턴</target>
        </trans-unit>
        <trans-unit id="d5c72a9ced6fedfa000f47545bce473c0198545b" translate="yes" xml:space="preserve">
          <source>A pattern may contain relative directory names</source>
          <target state="translated">패턴은 상대 디렉토리 이름을 포함 할 수 있습니다</target>
        </trans-unit>
        <trans-unit id="e1f1b559fbc81fd94b6d0144fbf389eeffd5d107" translate="yes" xml:space="preserve">
          <source>A pattern may match all files in a directory</source>
          <target state="translated">패턴은 디렉토리의 모든 파일과 일치 할 수 있습니다</target>
        </trans-unit>
        <trans-unit id="2e548051dfa22efb94fbbc5797a5b0e6256203d3" translate="yes" xml:space="preserve">
          <source>A pessimistic version constraint is one that will find the upper limit version number within the range specified by the minor version number or patch version number. For example, a pessimistic version constraint for minor version numbers:</source>
          <target state="translated">비관적 버전 제약 조건은 부 버전 번호 또는 패치 버전 번호로 지정된 범위 내에서 상한 버전 번호를 찾는 것입니다. 예를 들어 부 버전 번호에 대한 비관적 버전 제약 조건은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="1c6f73ac7caf84bb5f9c871f3e7fe7559ec2f0fb" translate="yes" xml:space="preserve">
          <source>A physical node is typically a server or a virtual machine, but it can be any active device attached to a network that is capable of sending, receiving, and forwarding information over a communications channel. In other words, a physical node is any active device attached to a network that can run a chef-client and also allow that chef-client to communicate with a Chef server.</source>
          <target state="translated">물리적 노드는 일반적으로 서버 또는 가상 시스템이지만 통신 채널을 통해 정보를 전송, 수신 및 전달할 수있는 네트워크에 연결된 모든 활성 장치 일 수 있습니다. 즉, 물리적 노드는 요리사 클라이언트를 실행할 수 있고 해당 요리사 클라이언트가 Chef 서버와 통신 할 수 있도록하는 네트워크에 연결된 활성 장치입니다.</target>
        </trans-unit>
        <trans-unit id="a4b4dfb628f9a840c89d2b870a3d328cde1af67e" translate="yes" xml:space="preserve">
          <source>A policy group defines a set of hosts in a deployed units, typically mapped to organizational requirements such as &amp;ldquo;dev&amp;rdquo;, &amp;ldquo;test&amp;rdquo;, &amp;ldquo;staging&amp;rdquo;, and &amp;ldquo;production&amp;rdquo;, but can also be mapped to more detailed requirements as needed</source>
          <target state="translated">정책 그룹은 일반적으로 &quot;dev&quot;, &quot;test&quot;, &quot;staging&quot;및 &quot;production&quot;과 같은 조직 요구 사항에 매핑되는 배포 된 단위로 호스트 집합을 정의하지만 필요에 따라보다 자세한 요구 사항에 매핑 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="4f671fa59d25f2da0fbf08cc7c4c334c00a154be" translate="yes" xml:space="preserve">
          <source>A policy is typically named after the functional role ahost performs, such as &amp;ldquo;application server&amp;rdquo;, &amp;ldquo;chat server&amp;rdquo;, &amp;ldquo;load balancer&amp;rdquo;, and so on</source>
          <target state="translated">정책은 일반적으로&amp;ldquo;애플리케이션 서버&amp;rdquo;,&amp;ldquo;채팅 서버&amp;rdquo;,&amp;ldquo;로드 밸런서&amp;rdquo;등과 같이 호스트가 수행하는 기능적 역할의 이름을 따서 명명됩니다.</target>
        </trans-unit>
        <trans-unit id="1f6a9692e0cdcdd0070b4e39e056727304d1b98e" translate="yes" xml:space="preserve">
          <source>A primary and backup cluster election using VRRP over unicast TCP/IP and Keepalived</source>
          <target state="translated">유니 캐스트 TCP / IP를 통한 VRRP 및 Keepalived를 사용한 기본 및 백업 클러스터 선택</target>
        </trans-unit>
        <trans-unit id="2f7a1ae45d075510083fb87ff582278b9d19311c" translate="yes" xml:space="preserve">
          <source>A property for the &lt;code&gt;gem_package&lt;/code&gt; provider that is used to specify a gems binary.</source>
          <target state="translated">gems 바이너리를 지정하는 데 사용되는 &lt;code&gt;gem_package&lt;/code&gt; 공급자 의 속성입니다 .</target>
        </trans-unit>
        <trans-unit id="f83e0a52a656631c85615b28674a43ba611f2d3e" translate="yes" xml:space="preserve">
          <source>A property for the &lt;code&gt;gem_package&lt;/code&gt; provider that is used to specify a gems binary. By default, the same version of Ruby that is used by the chef-client will be installed.</source>
          <target state="translated">gems 바이너리를 지정하는 데 사용되는 &lt;code&gt;gem_package&lt;/code&gt; 공급자 의 속성입니다 . 기본적으로 chef-client가 사용하는 동일한 버전의 Ruby가 설치됩니다.</target>
        </trans-unit>
        <trans-unit id="ff2c82f94c938170d13de8aa08f7573bc7f1fc95" translate="yes" xml:space="preserve">
          <source>A property from a Desired State Configuration (DSC) resource. Use this property multiple times, one for each property in the Desired State Configuration (DSC) resource. The format for this property must follow &lt;code&gt;property :dsc_property_name, &quot;property_value&quot;&lt;/code&gt; for each DSC property added to the resource block.</source>
          <target state="translated">원하는 상태 구성 (DSC) 리소스의 속성입니다. 원하는 상태 구성 (DSC) 자원의 각 특성마다 하나씩이 특성을 여러 번 사용하십시오. 이 속성의 형식 은 리소스 블록에 추가 된 각 DSC 속성에 대해 &lt;code&gt;property :dsc_property_name, &quot;property_value&quot;&lt;/code&gt; 를 따라야 합니다 .</target>
        </trans-unit>
        <trans-unit id="ae313222fac70fb62c4b70efa7b3ad883f44e739" translate="yes" xml:space="preserve">
          <source>A provider that is used to create custom service providers by defining the custom provider as a sub-class of this provider. This provider should not be used in recipes as a value of the &lt;code&gt;provider&lt;/code&gt; attribute.</source>
          <target state="translated">사용자 지정 공급자를이 공급자의 하위 클래스로 정의하여 사용자 지정 서비스 공급자를 만드는 데 사용되는 공급자입니다. 이 제공자는 레시피에서 &lt;code&gt;provider&lt;/code&gt; 속성 값으로 사용해서는 안됩니다 .</target>
        </trans-unit>
        <trans-unit id="834cb4b63f8993b8350043f4636a688e65991fe5" translate="yes" xml:space="preserve">
          <source>A question mark (&amp;rdquo;?&amp;rdquo;) can be used to replace exactly one character (as long as that character is not the first character)</source>
          <target state="translated">물음표 (&amp;ldquo;?&amp;rdquo;)를 사용하여 정확히 한 문자를 바꿀 수 있습니다 (해당 문자가 첫 번째 문자가 아닌 한)</target>
        </trans-unit>
        <trans-unit id="7da90786e67c369576262e519919e08a4bf0668e" translate="yes" xml:space="preserve">
          <source>A question mark (&lt;code&gt;?&lt;/code&gt;) can be used to replace exactly one character (as long as that character is not the first character in the search pattern)</source>
          <target state="translated">물음표 ( &lt;code&gt;?&lt;/code&gt; )를 사용하여 정확히 하나의 문자를 대체 할 수 있습니다 (문자가 검색 패턴에서 첫 번째 문자가 아닌 한)</target>
        </trans-unit>
        <trans-unit id="8d0f228466f3cfcc1af71b7d3884ff9615a965ae" translate="yes" xml:space="preserve">
          <source>A quick view of the &lt;code&gt;/tmp&lt;/code&gt; directory shows that the following files were created:</source>
          <target state="translated">&lt;code&gt;/tmp&lt;/code&gt; 디렉토리 의 빠른보기 는 다음 파일이 작성되었음을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="62cf9bc0c7a97c644c2a153b0227128c7222f05f" translate="yes" xml:space="preserve">
          <source>A quoted (&amp;rdquo; &amp;rdquo;) string of code to be executed.</source>
          <target state="translated">실행할 인용 부호 (&amp;rdquo;&amp;rdquo;) 문자열입니다.</target>
        </trans-unit>
        <trans-unit id="4540d4ea0b5baba41a5649d6f7e90edb5017fbc6" translate="yes" xml:space="preserve">
          <source>A quoted 3-5 character string that defines the octal mode. For example: &lt;code&gt;'755'&lt;/code&gt;, &lt;code&gt;'0755'&lt;/code&gt;, or &lt;code&gt;00755&lt;/code&gt;. If &lt;code&gt;mode&lt;/code&gt; is not specified and if the directory already exists, the existing mode on the directory is used. If &lt;code&gt;mode&lt;/code&gt; is not specified, the directory does not exist, and the &lt;code&gt;:create&lt;/code&gt; action is specified, the chef-client assumes a mask value of &lt;code&gt;'0777'&lt;/code&gt;, and then applies the umask for the system on which the directory is to be created to the &lt;code&gt;mask&lt;/code&gt; value. For example, if the umask on a system is &lt;code&gt;'022'&lt;/code&gt;, the chef-client uses the default value of &lt;code&gt;'0755'&lt;/code&gt;.</source>
          <target state="translated">8 진수 모드를 정의하는 인용 된 3-5 자 문자열입니다. 예를 들어 &lt;code&gt;'755'&lt;/code&gt; , &lt;code&gt;'0755'&lt;/code&gt; 또는 &lt;code&gt;00755&lt;/code&gt; 입니다. 경우 &lt;code&gt;mode&lt;/code&gt; 지정되지 않은 디렉토리가 이미 존재하는 경우, 디렉토리의 기존 모드가 사용됩니다. 경우 &lt;code&gt;mode&lt;/code&gt; 지정되지 않은 디렉토리가 존재하지 않으며,이 &lt;code&gt;:create&lt;/code&gt; 지정 조치를, 요리사 - 클라이언트의 마스크 값 가정 &lt;code&gt;'0777'&lt;/code&gt; 를 다음 디렉토리가 생성 될 것입니다되는 시스템의 umask를 적용 &lt;code&gt;mask&lt;/code&gt; 값. 예를 들어, 시스템의 umask가 &lt;code&gt;'022'&lt;/code&gt; 인 경우 chef-client는 기본값 &lt;code&gt;'0755'&lt;/code&gt; 를 사용 합니다.</target>
        </trans-unit>
        <trans-unit id="1fb59cb34e669f1e47aee1f7e75adb9808ec096f" translate="yes" xml:space="preserve">
          <source>A quoted 3-5 character string that defines the octal mode. For example: &lt;code&gt;'755'&lt;/code&gt;, &lt;code&gt;'0755'&lt;/code&gt;, or &lt;code&gt;00755&lt;/code&gt;. If &lt;code&gt;mode&lt;/code&gt; is not specified and if the file already exists, the existing mode on the file is used. If &lt;code&gt;mode&lt;/code&gt; is not specified, the file does not exist, and the &lt;code&gt;:create&lt;/code&gt; action is specified, the chef-client assumes a mask value of &lt;code&gt;'0777'&lt;/code&gt; and then applies the umask for the system on which the file is to be created to the &lt;code&gt;mask&lt;/code&gt; value. For example, if the umask on a system is &lt;code&gt;'022'&lt;/code&gt;, the chef-client uses the default value of &lt;code&gt;'0755'&lt;/code&gt;.</source>
          <target state="translated">8 진수 모드를 정의하는 인용 된 3-5 자 문자열입니다. 예를 들어 &lt;code&gt;'755'&lt;/code&gt; , &lt;code&gt;'0755'&lt;/code&gt; 또는 &lt;code&gt;00755&lt;/code&gt; 입니다. 경우 &lt;code&gt;mode&lt;/code&gt; 지정되지 않은 파일이 이미 존재하는 경우, 파일의 기존 모드가 사용됩니다. 경우 &lt;code&gt;mode&lt;/code&gt; 지정되지 않은 파일이 존재하지 않으며,이 &lt;code&gt;:create&lt;/code&gt; 지정 조치를, 요리사 - 클라이언트의 마스크 값 가정 &lt;code&gt;'0777'&lt;/code&gt; 를 다음 파일이 생성 될 것입니다되는 시스템의 umask를 적용 &lt;code&gt;mask&lt;/code&gt; 값. 예를 들어, 시스템의 umask가 &lt;code&gt;'022'&lt;/code&gt; 인 경우 chef-client는 기본값 &lt;code&gt;'0755'&lt;/code&gt; 를 사용 합니다.</target>
        </trans-unit>
        <trans-unit id="c2b4d50943bfd384d5d5d2f94229fa0af4cbaf13" translate="yes" xml:space="preserve">
          <source>A random number between zero and &lt;code&gt;splay&lt;/code&gt; that is added to &lt;code&gt;interval&lt;/code&gt;. Use splay to help balance the load on the Chef server by ensuring that many chef-client runs are not occuring at the same interval. Default value: &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">0과 0 사이의 난수 &lt;code&gt;splay&lt;/code&gt; &lt;code&gt;interval&lt;/code&gt; 에 추가 된 splay 입니다. splay를 사용하여 많은 chef-client 실행이 동일한 간격으로 발생하지 않도록하여 Chef 서버의로드 밸런스를 조정하십시오. 기본 값 : &lt;code&gt;nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ca8cd4cea6fff835ead0429e4c6911e6444a9a96" translate="yes" xml:space="preserve">
          <source>A random number between zero and &lt;code&gt;splay&lt;/code&gt; that is added to &lt;code&gt;interval&lt;/code&gt;. Use splay to help balance the load on the Chef server by ensuring that many chef-client runs are not occuring at the same interval. When the chef-client is run at intervals, &lt;code&gt;--splay&lt;/code&gt; and &lt;code&gt;--interval&lt;/code&gt; values are applied before the chef-client run.</source>
          <target state="translated">&lt;code&gt;interval&lt;/code&gt; 더해지는 0과 &lt;code&gt;splay&lt;/code&gt; 사이의 난수 입니다. splay를 사용하여 많은 chef-client 실행이 동일한 간격으로 발생하지 않도록하여 Chef 서버의로드 밸런스를 조정하십시오. 요리사 클라이언트가 일정한 간격으로 실행되면 요리사 클라이언트가 실행 되기 전에 &lt;code&gt;--splay&lt;/code&gt; 및 &lt;code&gt;--interval&lt;/code&gt; 값이 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="fa0c427786bd6112f8519fdb9a60ed1420f96ef5" translate="yes" xml:space="preserve">
          <source>A random number between zero and &lt;code&gt;splay&lt;/code&gt; that is added to &lt;code&gt;interval&lt;/code&gt;. Use splay to help balance the load on the Chef server by ensuring that many chef-client runs are not occuring at the same interval. When the chef-client is run at intervals, &lt;code&gt;--splay&lt;/code&gt; values are applied first, then the chef-client run occurs, and then &lt;code&gt;--interval&lt;/code&gt; values are applied.</source>
          <target state="translated">&lt;code&gt;interval&lt;/code&gt; 더해지는 0과 &lt;code&gt;splay&lt;/code&gt; 사이의 난수 입니다. splay를 사용하여 많은 chef-client 실행이 동일한 간격으로 발생하지 않도록하여 Chef 서버의로드 밸런스를 조정하십시오. 요리사 클라이언트가 간격으로 실행되면, &lt;code&gt;--splay&lt;/code&gt; 값은 요리사 클라이언트 실행이 발생, 먼저 적용됩니다 다음 &lt;code&gt;--interval&lt;/code&gt; 값이 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="e04bfade3851cb549cd7d9394338e0c6241311ea" translate="yes" xml:space="preserve">
          <source>A range matching search pattern is used to query for values that are within a range defined by upper and lower boundaries. A range matching search pattern can be inclusive or exclusive of the boundaries. Use square brackets (&amp;ldquo;[ ]&amp;rdquo;) to denote inclusive boundaries and curly braces (&amp;ldquo;{ }&amp;rdquo;) to denote exclusive boundaries and with the following syntax:</source>
          <target state="translated">범위 일치 검색 패턴은 상한과 하한으로 정의 된 범위 내에있는 값을 쿼리하는 데 사용됩니다. 범위 일치 검색 패턴은 경계를 포함하거나 포함하지 않을 수 있습니다. 대괄호 ( &quot;[]&quot;)를 사용하여 포함 경계를 표시하고 중괄호 ( &quot;{}&quot;)를 사용하여 배타적 경계를 표시하고 다음 구문을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="05e41ffe97577a2a015f51fae50cecd4307f8394" translate="yes" xml:space="preserve">
          <source>A range of chef-client versions that are supported by this cookbook.</source>
          <target state="translated">이 요리 책에서 지원하는 다양한 요리사-클라이언트 버전.</target>
        </trans-unit>
        <trans-unit id="8736a16d0811c0d8c3368291fce74a2b49e2ac6f" translate="yes" xml:space="preserve">
          <source>A recipe can be built that does the following:</source>
          <target state="translated">다음을 수행하는 레시피를 작성할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d1112b7c95dcac23c27304be24e91959fde1e26a" translate="yes" xml:space="preserve">
          <source>A recipe can define specific behaviors for specific Microsoft Windows platform versions by using a series of helper methods. To enable these helper methods, add the following to a recipe:</source>
          <target state="translated">레시피는 일련의 헬퍼 메소드를 사용하여 특정 Microsoft Windows 플랫폼 버전에 대한 특정 동작을 정의 할 수 있습니다. 이 도우미 메소드를 사용하려면 레시피에 다음을 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="e56704860f240e087bd773d60a48774a27c06c2c" translate="yes" xml:space="preserve">
          <source>A recipe can include one (or more) recipes located in external cookbooks by using the &lt;code&gt;include_recipe&lt;/code&gt; method. When a recipe is included, the resources found in that recipe will be inserted (in the same exact order) at the point where the &lt;code&gt;include_recipe&lt;/code&gt; keyword is located.</source>
          <target state="translated">레시피는 &lt;code&gt;include_recipe&lt;/code&gt; 메소드 를 사용하여 외부 요리 책에있는 하나 이상의 레시피를 포함 할 수 있습니다 . 레시피가 포함되면 해당 레시피에서 찾은 리소스가 &lt;code&gt;include_recipe&lt;/code&gt; 키워드가 있는 지점에 똑같은 순서로 삽입됩니다 .</target>
        </trans-unit>
        <trans-unit id="de227f2099cf0d3f9cb320d75d2471c9ad5d3a4b" translate="yes" xml:space="preserve">
          <source>A recipe is the most fundamental configuration element within the organization. A recipe:</source>
          <target state="translated">레시피는 조직 내에서 가장 기본적인 구성 요소입니다. 요리법:</target>
        </trans-unit>
        <trans-unit id="3e69ee96a3ab15681cf7124dd3079f2773b2a8ef" translate="yes" xml:space="preserve">
          <source>A recipe must be assigned to a run-list using the appropriate name, as defined by the cookbook directory and namespace. For example, a cookbook directory has the following structure:</source>
          <target state="translated">요리 책 디렉토리와 네임 스페이스에 의해 정의 된대로 적절한 이름을 사용하여 실행 목록에 레시피를 지정해야합니다. 예를 들어, 요리 책 디렉토리의 구조는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="2f201fba463de7609ef89364208e6dc44926b6ef" translate="yes" xml:space="preserve">
          <source>A recipe should be clean and well-commented. For example:</source>
          <target state="translated">레시피는 깨끗하고 주석 처리되어 있어야합니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="2a0177de6c60394b9281dc4482f3cefebbe96c3d" translate="yes" xml:space="preserve">
          <source>A report handler is used to trigger behaviors when a defined aspect of a chef-client run is successful.</source>
          <target state="translated">Chef-Client 실행의 정의 된 측면이 성공하면 보고서 처리기가 동작을 트리거하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="32dd15b6a97578af5aee35d31934f3813ad4e19b" translate="yes" xml:space="preserve">
          <source>A report handler is used when a chef-client run succeeds and reports back on certain details about that chef-client run. A report handler can be loaded at the start of a chef-client run by adding a recipe that contains the &lt;strong&gt;chef_handler&lt;/strong&gt; resource to a node&amp;rsquo;s run-list. A report handler runs when the &lt;code&gt;success?&lt;/code&gt; property for the &lt;code&gt;run_status&lt;/code&gt; object returns &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">Chef-Client 실행이 성공하고 해당 Chef-Client 실행에 대한 특정 세부 사항에 대해 다시보고 할 때 보고서 핸들러가 사용됩니다. &lt;strong&gt;chef_handler&lt;/strong&gt; 자원을 포함하는 레시피를 노드의 실행 목록 에 추가하여 chef-client 실행 시작시 보고서 핸들러를로드 할 수 있습니다 . &lt;code&gt;success?&lt;/code&gt; 하면 보고서 처리기가 실행 됩니까? &lt;code&gt;run_status&lt;/code&gt; 객체의 속성 은 &lt;code&gt;true&lt;/code&gt; 를 반환 합니다 .</target>
        </trans-unit>
        <trans-unit id="100eefb009e9b4abcb15dabf1e6632f6d9d04c63" translate="yes" xml:space="preserve">
          <source>A request must be signed using &lt;code&gt;Mixlib::Authentication&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Mixlib::Authentication&lt;/code&gt; 사용하여 요청에 서명해야합니다.</target>
        </trans-unit>
        <trans-unit id="fc3ee39f51c968479ef9db03f116694dc3bfb162" translate="yes" xml:space="preserve">
          <source>A request must be well-formatted. The easiest way to ensure a well-formatted request is to use the &lt;code&gt;Chef::REST&lt;/code&gt; library</source>
          <target state="translated">요청은 올바른 형식이어야합니다. 올바른 형식의 요청을 보장하는 가장 쉬운 방법은 &lt;code&gt;Chef::REST&lt;/code&gt; 라이브러리 를 사용하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="50841e55731f5bb6d375c78abb68a41064fccaed" translate="yes" xml:space="preserve">
          <source>A resolvable hostname that is specified using a FQDN or an IP address</source>
          <target state="translated">FQDN 또는 IP 주소를 사용하여 지정된 분석 가능한 호스트 이름</target>
        </trans-unit>
        <trans-unit id="d72210b5cf5f2f9c4d60f417585d9981b52d812e" translate="yes" xml:space="preserve">
          <source>A resource action has failed and will be retried.</source>
          <target state="translated">자원 조치가 실패했으며 재 시도됩니다.</target>
        </trans-unit>
        <trans-unit id="10c4d0075b9f9a3a78d63ed6e38b43fc6cf1fbee" translate="yes" xml:space="preserve">
          <source>A resource action has failed and will not be retried.</source>
          <target state="translated">자원 조치가 실패했으며 재 시도되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="0bb537592e73d18d710998e9357ec8bf45e3de78" translate="yes" xml:space="preserve">
          <source>A resource action is starting.</source>
          <target state="translated">자원 조치가 시작 중입니다.</target>
        </trans-unit>
        <trans-unit id="f08b8b2ac9048cfb9257ad4c39522e053ef19094" translate="yes" xml:space="preserve">
          <source>A resource action was skipped because the resource does not support why-run mode.</source>
          <target state="translated">자원이 이유 실행 모드를 지원하지 않기 때문에 자원 조치를 건너 뛰었습니다.</target>
        </trans-unit>
        <trans-unit id="cef4bdeacc9ca409192e3fe459d1571d4fcd4e75" translate="yes" xml:space="preserve">
          <source>A resource action was skipped.</source>
          <target state="translated">자원 조치를 건너 뛰었습니다.</target>
        </trans-unit>
        <trans-unit id="05952e48ab2986a2019a184934cb21381deb3bce" translate="yes" xml:space="preserve">
          <source>A resource can also be defined in &lt;code&gt;/libraries&lt;/code&gt; directory. Some advantages of this approach include more control over how resources behave in the provider, the ability to control the name of the resource directly, and more options available for writing tests. The resources and providers for a library resource, similar to lightweight resources (defined in the &lt;code&gt;/resources&lt;/code&gt; and &lt;code&gt;/providers&lt;/code&gt; folders) typically have a separate file for the resource and the provider, but this is not requirement. The main disadvantage of this approach is that resources defined in the &lt;code&gt;/libraries&lt;/code&gt; directory may not use the Recipe DSL.</source>
          <target state="translated">&lt;code&gt;/libraries&lt;/code&gt; 디렉토리 에 자원을 정의 할 수도 있습니다 . 이 접근 방식의 일부 장점은 공급자의 리소스 동작 방식에 대한 제어 기능 강화, 리소스 이름을 직접 제어하는 ​​기능 및 테스트 작성에 사용할 수있는 옵션이 더 있습니다. 경량 자원 ( &lt;code&gt;/resources&lt;/code&gt; 및 &lt;code&gt;/providers&lt;/code&gt; 폴더에 정의 됨)과 유사한 라이브러리 자원의 자원 및 제공자에는 일반적으로 자원 및 제공자에 대한 별도의 파일이 있지만 필수는 아닙니다. 이 방법의 주요 단점은 &lt;code&gt;/libraries&lt;/code&gt; 디렉토리에 정의 된 자원 이 레시피 DSL을 사용하지 않을 수 있다는 것입니다.</target>
        </trans-unit>
        <trans-unit id="44f6ba56a54c35354b5609d348bc5855d8e030f2" translate="yes" xml:space="preserve">
          <source>A resource declaration does not require the action to be specified because the chef-client will apply the default action for a resource automatically if it&amp;rsquo;s not specified within the resource block. For example:</source>
          <target state="translated">chef-client가 자원 블록 내에 지정되지 않은 경우 자원에 대한 기본 조치를 자동으로 적용하므로 자원 선언에 조치를 지정할 필요가 없습니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="5ec7498439d3e38a3c012dd577ebecf1bbb47689" translate="yes" xml:space="preserve">
          <source>A resource instructs the chef-client to complete various tasks like installing packages, running Ruby code, or accessing directories and file systems. The chef-client includes built-in resources that cover many common scenarios.</source>
          <target state="translated">리소스는 chef-client에게 패키지 설치, Ruby 코드 실행 또는 디렉토리 및 파일 시스템 액세스와 같은 다양한 작업을 완료하도록 지시합니다. 요리사 클라이언트에는 많은 일반적인 시나리오를 다루는 기본 제공 리소스가 포함되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="4df431801e22b7c3d28dce2332a16c76b5274d6c" translate="yes" xml:space="preserve">
          <source>A resource is a Ruby block with four components: a type, a name, one (or more) properties (with values), and one (or more) actions. The syntax for a resource is like this:</source>
          <target state="translated">리소스는 유형, 이름, 하나 이상의 속성 (값 포함) 및 하나 이상의 작업 등 네 가지 구성 요소가있는 Ruby 블록입니다. 자원의 구문은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="eeb5ad77204f6e46899b0192ce5a32221ca3c821" translate="yes" xml:space="preserve">
          <source>A resource is a statement of configuration policy that:</source>
          <target state="translated">리소스는 다음과 같은 구성 정책 설명입니다.</target>
        </trans-unit>
        <trans-unit id="4920c39c77e3df595dc29714a92bb1903ecb359e" translate="yes" xml:space="preserve">
          <source>A resource is already correct.</source>
          <target state="translated">자원이 이미 정확합니다.</target>
        </trans-unit>
        <trans-unit id="c7abc4583f03e6b76229ed545db4aa8631eeb414" translate="yes" xml:space="preserve">
          <source>A resource may listen to another resource, and then take action if the state of the resource being listened to changes. Specify a &lt;code&gt;'resource[name]'&lt;/code&gt;, the &lt;code&gt;:action&lt;/code&gt; to be taken, and then the &lt;code&gt;:timer&lt;/code&gt; for that action.</source>
          <target state="translated">자원은 다른 자원을 청취 한 다음 청취중인 자원의 상태가 변경되면 조치를 취할 수 있습니다. 지정 &lt;code&gt;'resource[name]'&lt;/code&gt; 는 &lt;code&gt;:action&lt;/code&gt; 다음 촬영하고있다 &lt;code&gt;:timer&lt;/code&gt; 그 액션.</target>
        </trans-unit>
        <trans-unit id="47b967349218be2b61dfc1643ef4f66e318dc608" translate="yes" xml:space="preserve">
          <source>A resource may notify another resource to take action when its state changes. Specify a &lt;code&gt;'resource[name]'&lt;/code&gt;, the &lt;code&gt;:action&lt;/code&gt; that resource should take, and then the &lt;code&gt;:timer&lt;/code&gt; for that action. A resource may notifiy more than one resource; use a &lt;code&gt;notifies&lt;/code&gt; statement for each resource to be notified.</source>
          <target state="translated">자원은 상태가 변경 될 때 다른 자원에게 조치를 취하도록 알릴 수 있습니다. 지정 &lt;code&gt;'resource[name]'&lt;/code&gt; 의 &lt;code&gt;:action&lt;/code&gt; 자원이 취해야 할 다음 &lt;code&gt;:timer&lt;/code&gt; 가 동작합니다. 자원은 둘 이상의 자원을 통지 할 수 있습니다. 용도 &lt;code&gt;notifies&lt;/code&gt; 각 자원을 통보하는 문을.</target>
        </trans-unit>
        <trans-unit id="a0e2640c33c266e5f72a8cc16cd1d44194bee3a5" translate="yes" xml:space="preserve">
          <source>A resource may specify multiple packages and/or versions for platforms that use Yum, Apt, Zypper, or Chocolatey package managers. Specifing multiple packages and/or versions allows a single transaction to:</source>
          <target state="translated">자원은 Yum, Apt, Zypper 또는 Chocolatey 패키지 관리자를 사용하는 플랫폼에 대해 여러 패키지 및 / 또는 버전을 지정할 수 있습니다. 여러 패키지 및 / 또는 버전을 지정하면 단일 트랜잭션으로 다음을 수행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="fa18e4c606e49123b60ffcdb919e26d29ff0f257" translate="yes" xml:space="preserve">
          <source>A resource name</source>
          <target state="translated">리소스 이름</target>
        </trans-unit>
        <trans-unit id="abb3812cbdbf784eea7fab3aa1fd1b635fe3cde6" translate="yes" xml:space="preserve">
          <source>A resource requires modification.</source>
          <target state="translated">자원을 수정해야합니다.</target>
        </trans-unit>
        <trans-unit id="f9c4fd35123ff8814015da366b87d9a7a39d267e" translate="yes" xml:space="preserve">
          <source>A resource that is defined in the &lt;code&gt;/libraries&lt;/code&gt; directory may leverage core chef-client resources by using the following syntax:</source>
          <target state="translated">&lt;code&gt;/libraries&lt;/code&gt; 디렉토리에 정의 된 자원은 다음 구문을 사용하여 핵심 chef-client 자원을 활용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b9ced215a4cec23fd0d3b50821a1270dc27f41f3" translate="yes" xml:space="preserve">
          <source>A resource&amp;rsquo;s current state was loaded.</source>
          <target state="translated">자원의 현재 상태가로드되었습니다.</target>
        </trans-unit>
        <trans-unit id="0a4c469f766b2c2dc29b834c90b13ebcdbcffb40" translate="yes" xml:space="preserve">
          <source>A resource&amp;rsquo;s current state was not loaded because the resource does not support why-run mode.</source>
          <target state="translated">자원이 이유 실행 모드를 지원하지 않기 때문에 자원의 현재 상태가로드되지 않았습니다.</target>
        </trans-unit>
        <trans-unit id="9fcc450dd4bb6d563c8ba67953d5c8ece2ef35d7" translate="yes" xml:space="preserve">
          <source>A role attribute can only be set to be a default attribute or an override attribute. A role attribute cannot be set to be a normal attribute. Use the &lt;code&gt;default_attribute&lt;/code&gt; and &lt;code&gt;override_attribute&lt;/code&gt; methods in the Ruby DSL file or the &lt;code&gt;default_attributes&lt;/code&gt; and &lt;code&gt;override_attributes&lt;/code&gt; hashes in a JSON data file.</source>
          <target state="translated">역할 속성은 기본 속성 또는 재정의 속성으로 만 설정할 수 있습니다. 역할 속성은 일반 속성으로 설정할 수 없습니다. Ruby DSL 파일에서 &lt;code&gt;default_attribute&lt;/code&gt; 및 &lt;code&gt;override_attribute&lt;/code&gt; 메소드를 사용 하거나 JSON 데이터 파일에서 &lt;code&gt;default_attributes&lt;/code&gt; 및 &lt;code&gt;override_attributes&lt;/code&gt; 해시를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="f7cfb3131ed32ea299ed3737f3e1dc9aa7441203" translate="yes" xml:space="preserve">
          <source>A role is a way to define certain patterns and processes that exist across nodes in an organization as belonging to a single job function.</source>
          <target state="translated">역할은 조직의 여러 노드에 존재하는 특정 패턴과 프로세스를 단일 작업 기능에 속하는 것으로 정의하는 방법입니다.</target>
        </trans-unit>
        <trans-unit id="46a9a71e2002ac9ed2472b4e8a8eb7b13cb2c0fc" translate="yes" xml:space="preserve">
          <source>A role is a way to define certain patterns and processes that exist across nodes in an organization as belonging to a single job function. Each role consists of zero (or more) attributes and a run-list. Each node can have zero (or more) roles assigned to it. When a role is run against a node, the configuration details of that node are compared against the attributes of the role, and then the contents of that role&amp;rsquo;s run-list are applied to the node&amp;rsquo;s configuration details. When a chef-client runs, it merges its own attributes and run-lists with those contained within each assigned role.</source>
          <target state="translated">역할은 조직의 여러 노드에 존재하는 특정 패턴과 프로세스를 단일 작업 기능에 속하는 것으로 정의하는 방법입니다. 각 역할은 0 개 이상의 속성과 실행 목록으로 구성됩니다. 각 노드에는 0 개 이상의 역할이 할당 될 수 있습니다. 역할이 노드에 대해 실행될 때 해당 노드의 구성 세부 사항이 역할의 속성과 비교 된 다음 해당 역할의 실행 목록 내용이 노드의 구성 세부 사항에 적용됩니다. 요리사 클라이언트는 자신의 속성과 실행 목록을 할당 된 각 역할에 포함 된 속성과 병합합니다.</target>
        </trans-unit>
        <trans-unit id="48f7b5d70011b176f62cc0b705e5696557141a31" translate="yes" xml:space="preserve">
          <source>A role is defined using JSON or the Ruby DSL. chef-solo will look for roles in &lt;code&gt;/var/chef/roles&lt;/code&gt;, but this location can be modified by changing the setting for &lt;code&gt;role_path&lt;/code&gt; in solo.rb. For example, the following setting in solo.rb:</source>
          <target state="translated">역할은 JSON 또는 Ruby DSL을 사용하여 정의됩니다. chef-solo는 &lt;code&gt;/var/chef/roles&lt;/code&gt; 에서 역할 을 &lt;code&gt;role_path&lt;/code&gt; 의 role_path 설정을 변경하여이 위치를 수정할 수 있습니다. 예를 들어 solo.rb의 다음 설정 :</target>
        </trans-unit>
        <trans-unit id="f05ae817eaf57377c93fdce8657ed1d7a9f9f026" translate="yes" xml:space="preserve">
          <source>A run-list defines all of the information necessary for Chef to configure a node into the desired state. A run-list is:</source>
          <target state="translated">실행 목록은 Chef가 노드를 원하는 상태로 구성하는 데 필요한 모든 정보를 정의합니다. 실행 목록은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="6620a0676a63780d75919a9c90c482fef5be724b" translate="yes" xml:space="preserve">
          <source>A run-list must be in one of the following formats: fully qualified, cookbook, or default. Both roles and recipes must be in quotes, for example:</source>
          <target state="translated">실행 목록은 완전한 형식, 요리 책 또는 기본 형식 중 하나 여야합니다. 역할과 레시피는 모두 따옴표로 묶어야합니다 (예 :</target>
        </trans-unit>
        <trans-unit id="2a90ab42873034e0220d3031fc074cc974d1d05b" translate="yes" xml:space="preserve">
          <source>A sample client.rb file that contains the most simple way to connect to &lt;a href=&quot;https://manage.chef.io&quot;&gt;https://manage.chef.io&lt;/a&gt;:</source>
          <target state="translated">&lt;a href=&quot;https://manage.chef.io&quot;&gt;https://manage.chef.io&lt;/a&gt; 에 연결하는 가장 간단한 방법이 포함 된 샘플 client.rb 파일 :</target>
        </trans-unit>
        <trans-unit id="abcba37826a90733c8f5aef8e001b3b522131e1f" translate="yes" xml:space="preserve">
          <source>A sample log line:</source>
          <target state="translated">샘플 로그 라인 :</target>
        </trans-unit>
        <trans-unit id="d0a6bd19ae84eb53714679f44f8a8732e6b3d325" translate="yes" xml:space="preserve">
          <source>A sample solo.rb file that contains all possible settings (listed alphabetically):</source>
          <target state="translated">가능한 모든 설정을 포함하는 샘플 solo.rb 파일 (알파벳순) :</target>
        </trans-unit>
        <trans-unit id="3b409f66e239e04295a52ea674bed0eb5c3b3cfe" translate="yes" xml:space="preserve">
          <source>A sample status line for a service that is running on the master server in a high availability topology:</source>
          <target state="translated">고 가용성 토폴로지의 마스터 서버에서 실행중인 서비스의 샘플 상태 표시 줄 :</target>
        </trans-unit>
        <trans-unit id="bcac93cc980374b68c510d1df7c336d56057c457" translate="yes" xml:space="preserve">
          <source>A sandbox is used to commit files so they only need to be updated one time, as opposed to every time a cookbook is uploaded. The &lt;code&gt;/sandboxes&lt;/code&gt; endpoint has the following methods: &lt;code&gt;POST&lt;/code&gt;.</source>
          <target state="translated">샌드 박스는 파일을 커밋하는 데 사용되므로 요리 책을 업로드 할 때마다 반대로 한 번만 업데이트하면됩니다. &lt;code&gt;/sandboxes&lt;/code&gt; 엔드 포인트는 다음과 같은 방법이 있습니다 &lt;code&gt;POST&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e4a19a81365a90763681234bb751dded9b971956" translate="yes" xml:space="preserve">
          <source>A screen similar to the following is returned:</source>
          <target state="translated">다음과 유사한 화면이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="f7f554c2089d2aa6aa013d1575f66d178af8a71d" translate="yes" xml:space="preserve">
          <source>A search index is a full-text list of objects that are stored on the Chef server, against which search queries can be made. The following search indexes are built:</source>
          <target state="translated">검색 색인은 Chef 서버에 저장되어 검색 쿼리를 수행 할 수있는 전체 텍스트 객체 목록입니다. 다음과 같은 검색 색인이 작성됩니다.</target>
        </trans-unit>
        <trans-unit id="b78c95af4406717d7e1979cb362cbd7ad237f942" translate="yes" xml:space="preserve">
          <source>A search pattern is a way to fine-tune search results by returning anything that matches some type of incomplete search query. There are four types of search patterns that can be used when searching the search indexes on the Chef server: exact, wildcard, range, and fuzzy.</source>
          <target state="translated">검색 패턴은 일부 유형의 불완전한 검색어와 일치하는 항목을 반환하여 검색 결과를 미세 조정하는 방법입니다. Chef 서버에서 검색 색인을 검색 할 때 사용할 수있는 검색 패턴에는 정확히, 와일드 카드, 범위 및 퍼지의 네 가지 유형이 있습니다.</target>
        </trans-unit>
        <trans-unit id="56dce5fe9beb297d66a6ae0eaeb70588123a786d" translate="yes" xml:space="preserve">
          <source>A search query can be assigned to variables and then used elsewhere in a recipe. For example, to search for all nodes that have a role assignment named &lt;code&gt;webserver&lt;/code&gt;, and then render a template which includes those role assignments:</source>
          <target state="translated">검색어에 변수를 할당 한 후 레시피의 다른 곳에서 사용할 수 있습니다. 예를 들어, &lt;code&gt;webserver&lt;/code&gt; 라는 역할 할당이있는 모든 노드를 검색 한 후 해당 역할 할당이 포함 된 템플리트를 렌더링하십시오.</target>
        </trans-unit>
        <trans-unit id="4c1066f4f1202f68eefc46e56344ec540b788911" translate="yes" xml:space="preserve">
          <source>A search query can be made for roles that are at the top-level of a run-list and also for a role that is part of an expanded run-list.</source>
          <target state="translated">실행 목록의 최상위 레벨에있는 역할과 확장 된 실행 목록의 일부인 역할에 대해 검색 조회를 작성할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e0bec2edcd85e9667fdf759ebe76dc5e6c14d69c" translate="yes" xml:space="preserve">
          <source>A search query is comprised of two parts: the key and the search pattern. A search query has the following syntax:</source>
          <target state="translated">검색어는 키와 검색 패턴의 두 부분으로 구성됩니다. 검색어에는 다음과 같은 구문이 있습니다.</target>
        </trans-unit>
        <trans-unit id="ac01812b05eb8d122a9e8433e2ac982757b2f755" translate="yes" xml:space="preserve">
          <source>A search target is any object that has been indexed on the Chef server, including roles (and run-lists), nodes, environments, data bags, and any API client.</source>
          <target state="translated">검색 대상은 역할 (및 실행 목록), 노드, 환경, 데이터 백 및 모든 API 클라이언트를 포함하여 Chef 서버에서 색인화 된 모든 오브젝트입니다.</target>
        </trans-unit>
        <trans-unit id="61a09a1e0a2fe84e0e77436ac637c8ff1df68e4a" translate="yes" xml:space="preserve">
          <source>A service that is enabled and running:</source>
          <target state="translated">활성화되어 실행중인 서비스 :</target>
        </trans-unit>
        <trans-unit id="bb4709c225656f31385539f0174a8257f46005e6" translate="yes" xml:space="preserve">
          <source>A short description of a cookbook and its functionality.</source>
          <target state="translated">요리 책과 그 기능에 대한 간단한 설명.</target>
        </trans-unit>
        <trans-unit id="de573571e3a71ee23f89b6f155f0929b33a5663a" translate="yes" xml:space="preserve">
          <source>A simple exception or report handler may be installed and configured at run-time. This requires editing of a node&amp;rsquo;s client.rb file to add the appropriate setting and information about that handler to the client.rb or solo.rb files. Depending on the handler type, one (or more) of the following settings must be added:</source>
          <target state="translated">간단한 예외 또는 보고서 처리기가 런타임에 설치 및 구성 될 수 있습니다. 이를 위해서는 해당 핸들러에 대한 적절한 설정 및 정보를 client.rb 또는 solo.rb 파일에 추가하기 위해 노드의 client.rb 파일을 편집해야합니다. 핸들러 유형에 따라 다음 설정 중 하나 이상을 추가해야합니다.</target>
        </trans-unit>
        <trans-unit id="b5ea28da8c9f4cc79abf955ec004ced2bcf6814e" translate="yes" xml:space="preserve">
          <source>A simple library could be created that extends &lt;code&gt;Chef::Recipe::&lt;/code&gt;, like this:</source>
          <target state="translated">&lt;code&gt;Chef::Recipe::&lt;/code&gt; 를 확장하는 간단한 라이브러리를 만들 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="650cab10f6c0d4776003dc64790cb2754f295971" translate="yes" xml:space="preserve">
          <source>A simple recipe may contain something like this:</source>
          <target state="translated">간단한 레시피에는 다음과 같은 내용이 포함될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="bad3bb1020d8bbc8d08622391cbc432ffb0ad43a" translate="yes" xml:space="preserve">
          <source>A single instance of the Chef server can support many organizations. Each organization has a unique set of groups and users. Each organization manages a unique set of nodes, on which a chef-client is installed and configured so that it may interact with a single organization on the Chef server.</source>
          <target state="translated">Chef 서버의 단일 인스턴스는 많은 조직을 지원할 수 있습니다. 각 조직에는 고유 한 그룹 및 사용자 집합이 있습니다. 각 조직은 Chef 서버의 단일 조직과 상호 작용할 수 있도록 chef-client가 설치 및 구성된 고유 한 노드 세트를 관리합니다.</target>
        </trans-unit>
        <trans-unit id="2fa3e6e1594d746c322bb0197c10f0634d0e29fb" translate="yes" xml:space="preserve">
          <source>A single invite looks like this</source>
          <target state="translated">단일 초대는 다음과 같습니다</target>
        </trans-unit>
        <trans-unit id="4f83d7498f11ab2b32d6f611df4fa9f174b97c0b" translate="yes" xml:space="preserve">
          <source>A single loopback interface should be configured using the &lt;code&gt;127.0.0.1&lt;/code&gt; address. This ensures that all of the services are available to the Chef server, in the event that the Chef server attempts to contact itself from within a front or back end machine. All ports should be accessible through the loopback interface of their respective hosts.</source>
          <target state="translated">&lt;code&gt;127.0.0.1&lt;/code&gt; 주소를 사용하여 단일 루프백 인터페이스를 구성해야합니다 . 이를 통해 Chef 서버가 프론트 엔드 또는 백엔드 시스템 내에서 자체적으로 연결을 시도하는 경우 Chef 서버가 모든 서비스를 사용할 수 있습니다. 모든 포트는 해당 호스트의 루프백 인터페이스를 통해 액세스 할 수 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="2321f3ee9be98790000c5466c9d41b6c90067d1b" translate="yes" xml:space="preserve">
          <source>A single vault and item to update as &lt;code&gt;vault:item&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;vault:item&lt;/code&gt; 으로 업데이트 할 단일 볼트 및 항목 입니다.</target>
        </trans-unit>
        <trans-unit id="247c29606f0e2b98da11861b5a6340569da33a7c" translate="yes" xml:space="preserve">
          <source>A solo.rb file is used to specify the configuration details for chef-solo.</source>
          <target state="translated">solo.rb 파일은 chef-solo의 구성 세부 사항을 지정하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="145a28970377dee9a9b9a69d9de0fe85b400dcdb" translate="yes" xml:space="preserve">
          <source>A special character can be used to fine-tune a search query and to increase the accuracy of the search results. The following characters can be included within the search query syntax, but each occurrence of a special character must be escaped with a backslash (&lt;code&gt;\&lt;/code&gt;):</source>
          <target state="translated">검색 문자를 미세 조정하고 검색 결과의 정확성을 높이기 위해 특수 문자를 사용할 수 있습니다. 다음 문자는 검색 쿼리 구문에 포함될 수 있지만 특수 문자는 각각 백 슬래시 ( &lt;code&gt;\&lt;/code&gt; ) 로 이스케이프해야합니다 .</target>
        </trans-unit>
        <trans-unit id="52a5328d2aa9dd10d12f2c74174973e780528167" translate="yes" xml:space="preserve">
          <source>A specific attribute precedence level for default, normal, and override attributes may be removed by using one of the following syntax patterns.</source>
          <target state="translated">기본, 일반 및 재정의 속성에 대한 특정 속성 우선 순위 수준은 다음 구문 패턴 중 하나를 사용하여 제거 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="be7b902cb24885a7207ca6c00ee6513fce2e78d6" translate="yes" xml:space="preserve">
          <source>A start handler can be configured in the client.rb file by adding the following setting:</source>
          <target state="translated">다음 설정을 추가하여 client.rb 파일에서 시작 핸들러를 구성 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9dd8b92f05a3966bf26faee578727f44339a52df" translate="yes" xml:space="preserve">
          <source>A start handler is not loaded into the chef-client run from a recipe, but is instead listed in the client.rb file using the &lt;code&gt;start_handlers&lt;/code&gt; attribute. The start handler must be installed on the node and be available to the chef-client prior to the start of the chef-client run. Use the &lt;strong&gt;chef-client&lt;/strong&gt; cookbook to install the start handler.</source>
          <target state="translated">시작 핸들러는 레시피에서 실행되는 chef-client로로드되지 않지만 대신 &lt;code&gt;start_handlers&lt;/code&gt; 속성을 사용하여 client.rb 파일에 나열됩니다 . 시작 처리기는 노드에 설치해야하며 chef-client 실행을 시작하기 전에 chef-client가 사용할 수 있어야합니다. 사용 &lt;strong&gt;요리사 클라이언트&lt;/strong&gt; 시작 처리기를 설치하는 요리 책.</target>
        </trans-unit>
        <trans-unit id="a6ea4ac23bdf2308630fed048bb69de29145eb44" translate="yes" xml:space="preserve">
          <source>A start handler is used to run events at the beginning of the chef-client run. A start handler can be loaded at the start of a chef-client run by adding the start handler to the &lt;code&gt;start_handlers&lt;/code&gt; setting in the client.rb file or by installing the gem that contains the start handler by using the &lt;strong&gt;chef_gem&lt;/strong&gt; resource in a recipe in the &lt;strong&gt;chef-client&lt;/strong&gt; cookbook. (A start handler may not be loaded using the &lt;code&gt;chef_handler&lt;/code&gt; resource.)</source>
          <target state="translated">시작 처리기는 Chef-Client 실행이 시작될 때 이벤트를 실행하는 데 사용됩니다. 시작 핸들러는 client.rb 파일 의 &lt;code&gt;start_handlers&lt;/code&gt; 설정에 시작 핸들러를 추가 하거나 &lt;strong&gt;chef_gem&lt;/strong&gt; 자원을 레시피의 레시피에 사용하여 시작 핸들러를 포함하는 gem을 설치하여 chef-client 실행 시작시로드 될 수 있습니다 . &lt;strong&gt;요리사-클라이언트&lt;/strong&gt; 요리 책. &lt;code&gt;chef_handler&lt;/code&gt; 리소스를 사용하여 시작 처리기를로드 할 수 없습니다 .</target>
        </trans-unit>
        <trans-unit id="ed526724a2d153436bae30edc2380e987326b63e" translate="yes" xml:space="preserve">
          <source>A statement is delimited by a modifier, such as &lt;code&gt;if&lt;/code&gt;, &lt;code&gt;elseif&lt;/code&gt;, and &lt;code&gt;else&lt;/code&gt;. For example:</source>
          <target state="translated">성명은 같은 수식어로 구분되는 &lt;code&gt;if&lt;/code&gt; , &lt;code&gt;elseif&lt;/code&gt; , 및 &lt;code&gt;else&lt;/code&gt; . 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="ca0598df3f4427f80c0f3d7b79c146b46e27270a" translate="yes" xml:space="preserve">
          <source>A stream has closed.</source>
          <target state="translated">스트림이 닫혔습니다.</target>
        </trans-unit>
        <trans-unit id="a225a5fef82407ca3456e84b4f798d461e9f26a0" translate="yes" xml:space="preserve">
          <source>A stream has opened.</source>
          <target state="translated">개울이 열렸습니다.</target>
        </trans-unit>
        <trans-unit id="ffe2a8f477e212bdc7d207cd8ab42f66db29649f" translate="yes" xml:space="preserve">
          <source>A string is executed as a shell command. If the command returns &lt;code&gt;0&lt;/code&gt;, the guard is applied. If the command returns any other value, then the guard property is not applied. String guards in a &lt;strong&gt;powershell_script&lt;/strong&gt; run Windows PowerShell commands and may return &lt;code&gt;true&lt;/code&gt; in addition to &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="translated">문자열은 쉘 명령으로 실행됩니다. 명령이 &lt;code&gt;0&lt;/code&gt; 을 반환 하면 가드가 적용됩니다. 명령이 다른 값을 반환하면 guard 속성이 적용되지 않습니다. &lt;strong&gt;powershell_script의&lt;/strong&gt; 문자열 가드는 Windows PowerShell 명령을 실행 하며 &lt;code&gt;0&lt;/code&gt; 외에도 &lt;code&gt;true&lt;/code&gt; 를 반환 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="71cecc31ca54d7d4f606705963da3829a3c7c2f7" translate="yes" xml:space="preserve">
          <source>A string of code that to be executed.</source>
          <target state="translated">실행할 코드 문자열입니다.</target>
        </trans-unit>
        <trans-unit id="d57fdbd17248b3fc11ffd72096923cd93b852204" translate="yes" xml:space="preserve">
          <source>A string or ID that identifies the group associated with a symbolic link.</source>
          <target state="translated">기호 링크와 연관된 그룹을 식별하는 문자열 또는 ID입니다.</target>
        </trans-unit>
        <trans-unit id="e255230c8e28943d8b6d4a95dd8070be1441b711" translate="yes" xml:space="preserve">
          <source>A string or ID that identifies the group owner by group name, including fully qualified group names such as &lt;code&gt;domain\group&lt;/code&gt; or &lt;code&gt;group@domain&lt;/code&gt;. If this value is not specified, existing groups remain unchanged and new group assignments use the default &lt;code&gt;POSIX&lt;/code&gt; group (if available).</source>
          <target state="translated">&lt;code&gt;domain\group&lt;/code&gt; 또는 &lt;code&gt;group@domain&lt;/code&gt; 과 같은 완전한 그룹 이름을 포함하여 그룹 이름으로 그룹 소유자를 식별하는 문자열 또는 ID입니다 . 이 값을 지정하지 않으면 기존 그룹은 변경되지 않고 새 그룹 할당은 기본 &lt;code&gt;POSIX&lt;/code&gt; 그룹 (사용 가능한 경우)을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="92d62059f1c554ec7ca42991c7d0e2b8653ef898" translate="yes" xml:space="preserve">
          <source>A string or ID that identifies the group owner by user name, including fully qualified user names such as &lt;code&gt;domain\user&lt;/code&gt; or &lt;code&gt;user@domain&lt;/code&gt;. If this value is not specified, existing owners remain unchanged and new owner assignments use the current user (when necessary).</source>
          <target state="translated">&lt;code&gt;domain\user&lt;/code&gt; 또는 &lt;code&gt;user@domain&lt;/code&gt; 과 같은 완전한 사용자 이름을 포함하여 사용자 이름으로 그룹 소유자를 식별하는 문자열 또는 ID입니다 . 이 값을 지정하지 않으면 기존 소유자는 변경되지 않고 새 소유자 할당은 현재 사용자를 사용합니다 (필요한 경우).</target>
        </trans-unit>
        <trans-unit id="5ac4d09dfc2921614205fe99e08a31be6818af2e" translate="yes" xml:space="preserve">
          <source>A string that contains a shell command that can be executed to run a migration operation.</source>
          <target state="translated">마이그레이션 작업을 실행하기 위해 실행할 수있는 셸 명령이 포함 된 문자열입니다.</target>
        </trans-unit>
        <trans-unit id="fedc7175c2cba031e5e9b341015cdf14b80cb6ce" translate="yes" xml:space="preserve">
          <source>A string that contains a shell command that can be executed to run a restart operation.</source>
          <target state="translated">재시작 조작을 실행하기 위해 실행할 수있는 쉘 명령이 포함 된 문자열.</target>
        </trans-unit>
        <trans-unit id="5b0a6376683d5056878fcc2bfaf81038ec3aab30" translate="yes" xml:space="preserve">
          <source>A string that describes the reboot action.</source>
          <target state="translated">재부팅 조치를 설명하는 문자열입니다.</target>
        </trans-unit>
        <trans-unit id="cd4955cd725332ba2ff4d0a4ff84d362e9b5f981" translate="yes" xml:space="preserve">
          <source>A string that is passed to the Windows PowerShell command. Default value: &lt;code&gt;-NoLogo, -NonInteractive, -NoProfile, -ExecutionPolicy RemoteSigned, -InputFormat None, -File&lt;/code&gt;.</source>
          <target state="translated">Windows PowerShell 명령으로 전달되는 문자열입니다. 기본 값 : &lt;code&gt;-NoLogo, -NonInteractive, -NoProfile, -ExecutionPolicy RemoteSigned, -InputFormat None, -File&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fb6ea7556f6d38db13ee083663cae14f080cf415" translate="yes" xml:space="preserve">
          <source>A string that is written to the file. The contents of this property replace any previous content when this property has something other than the default value. The default behavior will not modify content.</source>
          <target state="translated">파일에 쓰여지는 문자열. 이 속성의 내용은이 속성에 기본값 이외의 것이 있으면 이전 내용을 대체합니다. 기본 동작은 내용을 수정하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="21df5bf7fe902b8d4fda5e81058664647748c1d3" translate="yes" xml:space="preserve">
          <source>A subfolder in the &lt;code&gt;/files/default&lt;/code&gt; directory named &lt;code&gt;/website&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;/website&lt;/code&gt; 라는 / &lt;code&gt;/files/default&lt;/code&gt; 디렉토리 의 하위 폴더</target>
        </trans-unit>
        <trans-unit id="d1d1547edcea1c84b2a1e1943023b733563d5290" translate="yes" xml:space="preserve">
          <source>A summary of updates is printed at the end of the chef-client run. A dot (&lt;code&gt;.&lt;/code&gt;) is printed for events that do not have meaningful status information, such as loading a file or synchronizing a cookbook. For resources, a dot (&lt;code&gt;.&lt;/code&gt;) is printed when the resource is up to date, an &lt;code&gt;S&lt;/code&gt; is printed when the resource is skipped by &lt;code&gt;not_if&lt;/code&gt; or &lt;code&gt;only_if&lt;/code&gt;, and a &lt;code&gt;U&lt;/code&gt; is printed when the resource is updated.</source>
          <target state="translated">업데이트 요약은 chef-client 실행이 끝날 때 인쇄됩니다. 파일로드 또는 요리 책 동기화와 같이 의미있는 상태 정보가없는 이벤트에 대해서는 점 ( &lt;code&gt;.&lt;/code&gt; )이 인쇄됩니다. 리소스를 들어, 도트 ( &lt;code&gt;.&lt;/code&gt; 리소스가 최신 일 때)는, 인쇄 &lt;code&gt;S&lt;/code&gt; 가 자원에 의해 스킵 될 때 인쇄 &lt;code&gt;not_if&lt;/code&gt; 또는 &lt;code&gt;only_if&lt;/code&gt; 및 &lt;code&gt;U&lt;/code&gt; 는 리소스가 업데이트 될 때 출력된다.</target>
        </trans-unit>
        <trans-unit id="e6b7e84bd9fdd67b92e6f325632883a87d2671ae" translate="yes" xml:space="preserve">
          <source>A symbol that specifies the type of package. Possible values: &lt;code&gt;:custom&lt;/code&gt; (such as installing a non-.msi file that embeds an .msi-based installer), &lt;code&gt;:inno&lt;/code&gt; (Inno Setup), &lt;code&gt;:installshield&lt;/code&gt; (InstallShield), &lt;code&gt;:msi&lt;/code&gt; (Microsoft Installer Package (MSI)), &lt;code&gt;:nsis&lt;/code&gt; (Nullsoft Scriptable Install System (NSIS)), &lt;code&gt;:wise&lt;/code&gt; (Wise).</source>
          <target state="translated">패키지 유형을 지정하는 기호입니다. 가능한 값 : &lt;code&gt;:custom&lt;/code&gt; (예 : .msi 기반 설치 프로그램을 포함하는 비 .msi 파일 설치), &lt;code&gt;:inno&lt;/code&gt; (Inno Setup), &lt;code&gt;:installshield&lt;/code&gt; (InstallShield), &lt;code&gt;:msi&lt;/code&gt; (Microsoft Installer Package (MSI)), &lt;code&gt;:nsis&lt;/code&gt; (Nullsoft Scriptable Install System (NSIS)), &lt;code&gt;:wise&lt;/code&gt; (와이즈).</target>
        </trans-unit>
        <trans-unit id="61fa216919fc9956e74453ff7b800685c584ad29" translate="yes" xml:space="preserve">
          <source>A symbolic link&amp;mdash;sometimes referred to as a soft link&amp;mdash;is a directory entry that associates a file name with a string that contains an absolute or relative path to a file on any file system. In other words, &amp;ldquo;a file that contains a path that points to another file.&amp;rdquo; A symbolic link creates a new file with a new inode that points to the inode location of the original file.</source>
          <target state="translated">소프트 링크라고도하는 심볼릭 링크는 파일 이름을 파일 시스템의 파일에 대한 절대 또는 상대 경로가 포함 된 문자열과 연결하는 디렉토리 항목입니다. 즉, &quot;다른 파일을 가리키는 경로가 포함 된 파일&quot; 심볼릭 링크는 원본 파일의 inode 위치를 가리키는 새 inode로 새 파일을 만듭니다.</target>
        </trans-unit>
        <trans-unit id="7f68778bd780d1c5727cda8d72477769d91de656" translate="yes" xml:space="preserve">
          <source>A tag is a custom description that is applied to a node. A tag, once applied, can be helpful when managing nodes using knife or when building recipes by providing alternate methods of grouping similar types of information.</source>
          <target state="translated">태그는 노드에 적용되는 사용자 정의 설명입니다. 태그가 적용되면 나이프를 사용하여 노드를 관리하거나 유사한 유형의 정보를 그룹화하는 대체 방법을 제공하여 레시피를 작성할 때 유용 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9c36db5a98ff0d60ea570d626a6f7778472e82bb" translate="yes" xml:space="preserve">
          <source>A template can be built in a way that allows it to contain references to one (or more) smaller template files. (These smaller template files are also referred to as partials.) A partial can be referenced from a template file in one of the following ways:</source>
          <target state="translated">하나 이상의 작은 템플릿 파일에 대한 참조를 포함 할 수있는 방식으로 템플릿을 만들 수 있습니다. (이 작은 템플릿 파일은 부분 파일이라고도합니다.) 다음 중 하나의 방법으로 템플릿 파일에서 부분을 참조 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b077c7d791d37621974f0282c6f9c5edac765955" translate="yes" xml:space="preserve">
          <source>A template helper method is always defined inline on a per-resource basis. A simple example:</source>
          <target state="translated">템플릿 도우미 메서드는 항상 리소스별로 인라인으로 정의됩니다. 간단한 예 :</target>
        </trans-unit>
        <trans-unit id="cd5fd8644eea425523f87d4b8002e7238e90bc92" translate="yes" xml:space="preserve">
          <source>A template helper module can be defined in a library. This is useful when extensions need to be reused across recipes or to make it easier to manage code that would otherwise be defined inline on a per-recipe basis.</source>
          <target state="translated">템플릿 헬퍼 모듈은 라이브러리에서 정의 할 수 있습니다. 이것은 레시피에서 확장을 재사용하거나 레시피별로 인라인으로 정의 된 코드를보다 쉽게 ​​관리 할 수 ​​있도록하려는 경우에 유용합니다.</target>
        </trans-unit>
        <trans-unit id="2967820c96ffb95c1857ad67fe731c77eaff9368" translate="yes" xml:space="preserve">
          <source>A template helper module can be defined inline on a per-resource basis. This approach can be useful when a template requires more complex information. For example:</source>
          <target state="translated">템플릿 헬퍼 모듈은 리소스별로 인라인으로 정의 할 수 있습니다. 이 방법은 템플릿에보다 복잡한 정보가 필요한 경우에 유용 할 수 있습니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="c3f85a31dfbf51f0b352732c5e8ad1d15fa3c7f6" translate="yes" xml:space="preserve">
          <source>A template is a file written in markup language that uses Ruby statements to solve complex configuration scenarios.</source>
          <target state="translated">템플릿은 마크 업 언어로 작성된 파일로 Ruby 문을 사용하여 복잡한 구성 시나리오를 해결합니다.</target>
        </trans-unit>
        <trans-unit id="6964f33e44fa246eee5fda4d7f624aceea9961a0" translate="yes" xml:space="preserve">
          <source>A template is an Embedded Ruby (ERB) template. An Embedded Ruby (ERB) template allows Ruby code to be embedded inside a text file within specially formatted tags. Ruby code can be embedded using expressions and statements. An expression is delimited by &lt;code&gt;&amp;lt;%=&lt;/code&gt; and &lt;code&gt;%&amp;gt;&lt;/code&gt;. For example:</source>
          <target state="translated">템플릿은 EBB (Embedded Ruby) 템플릿입니다. ERB (Embedded Ruby) 템플릿을 사용하면 특수 형식의 태그로 텍스트 파일 안에 Ruby 코드를 포함시킬 수 있습니다. 표현식과 명령문을 사용하여 루비 코드를 임베드 할 수 있습니다. 식은 &lt;code&gt;&amp;lt;%=&lt;/code&gt; 및 &lt;code&gt;%&amp;gt;&lt;/code&gt; 로 구분됩니다 . 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="c021f090b61b58c261d9df8646ecfd8e52634fd6" translate="yes" xml:space="preserve">
          <source>A template named &lt;code&gt;gemrc.erb&lt;/code&gt; is located in a cookbook&amp;rsquo;s &lt;code&gt;/templates&lt;/code&gt; directory:</source>
          <target state="translated">&lt;code&gt;gemrc.erb&lt;/code&gt; 라는 템플릿 은 요리 책의 &lt;code&gt;/templates&lt;/code&gt; 디렉토리에 있습니다.</target>
        </trans-unit>
        <trans-unit id="b5f8d43ee9bb2dfeda4262de6ec724fe18dc429f" translate="yes" xml:space="preserve">
          <source>A template resource must be added to a recipe</source>
          <target state="translated">레시피에 템플릿 리소스를 추가해야합니다.</target>
        </trans-unit>
        <trans-unit id="2c33448a0b29ec5157609ed47099a3c6d870c4bd" translate="yes" xml:space="preserve">
          <source>A time interval. Possible values: &lt;code&gt;:annually&lt;/code&gt;, &lt;code&gt;:daily&lt;/code&gt;, &lt;code&gt;:hourly&lt;/code&gt;, &lt;code&gt;:midnight&lt;/code&gt;, &lt;code&gt;:monthly&lt;/code&gt;, &lt;code&gt;:reboot&lt;/code&gt;, &lt;code&gt;:weekly&lt;/code&gt;, or &lt;code&gt;:yearly&lt;/code&gt;.</source>
          <target state="translated">시간 간격. 가능한 값은 : &lt;code&gt;:annually&lt;/code&gt; , &lt;code&gt;:daily&lt;/code&gt; , &lt;code&gt;:hourly&lt;/code&gt; , &lt;code&gt;:midnight&lt;/code&gt; , &lt;code&gt;:monthly&lt;/code&gt; , &lt;code&gt;:reboot&lt;/code&gt; , &lt;code&gt;:weekly&lt;/code&gt; 또는 &lt;code&gt;:yearly&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="c4ee19988538c5b2fc9282247c70378739d69622" translate="yes" xml:space="preserve">
          <source>A timer specifies the point during the chef-client run at which a notification is run. The following timer is available:</source>
          <target state="translated">타이머는 chef-client 실행 중 알림이 실행되는 시점을 지정합니다. 다음과 같은 타이머를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2ea7cfff60287fd76224dee5dbe17b3df45d8134" translate="yes" xml:space="preserve">
          <source>A timer specifies the point during the chef-client run at which a notification is run. The following timers are available:</source>
          <target state="translated">타이머는 chef-client 실행 중 알림이 실행되는 시점을 지정합니다. 다음과 같은 타이머를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="383cfa644ce5445374e7d634a0c2d301bbd28e25" translate="yes" xml:space="preserve">
          <source>A typical status line for a service that is running any of the Chef server front-end services is similar to the following:</source>
          <target state="translated">Chef 서버 프런트 엔드 서비스를 실행하는 서비스의 일반적인 상태 표시 줄은 다음과 유사합니다.</target>
        </trans-unit>
        <trans-unit id="258a39d76ef6fd9cfef9ce936dc284b9a5b0cae5" translate="yes" xml:space="preserve">
          <source>A useful method that is related to attributes is the &lt;code&gt;attribute?&lt;/code&gt; method. This method will check for the existence of an attribute, so that processing can be done in an attributes file or recipe, but only if a specific attribute exists.</source>
          <target state="translated">속성과 관련된 유용한 방법은 &lt;code&gt;attribute?&lt;/code&gt; 방법. 이 메소드는 속성이 있는지 확인하여 특정 속성이 존재하는 경우에만 속성 파일 또는 레시피에서 처리를 수행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e04bc86d7551455e11174ef786b128ad585e1b64" translate="yes" xml:space="preserve">
          <source>A user is an individual account that is created to allow access to the Chef server. For example:</source>
          <target state="translated">사용자는 Chef 서버에 대한 액세스를 허용하기 위해 생성 된 개별 계정입니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="f2e1c44f11f3bb56ad1009eab7819119d719371e" translate="yes" xml:space="preserve">
          <source>A user is any non-administrator human being who will manage data that is uploaded to the Chef server from a workstation or who will log on to the Chef management console web user interface. The Chef server includes a single default user that is defined during setup and is automatically assigned to the &lt;code&gt;admins&lt;/code&gt; group.</source>
          <target state="translated">사용자는 워크 스테이션에서 Chef 서버에 업로드 된 데이터를 관리하거나 Chef 관리 콘솔 웹 사용자 인터페이스에 로그온하는 관리자가 아닌 사람입니다. Chef 서버에는 설정 중에 정의되고 &lt;code&gt;admins&lt;/code&gt; 그룹에 자동으로 지정된 단일 기본 사용자가 포함됩니다 .</target>
        </trans-unit>
        <trans-unit id="2ccb06ea84992eb3c95589422bd41b0635c66a3f" translate="yes" xml:space="preserve">
          <source>A user may belong to multiple organizations under the following conditions:</source>
          <target state="translated">다음과 같은 조건에서 사용자가 여러 조직에 속할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f2846286f69ba43d8abe4563c4efc8a460338995" translate="yes" xml:space="preserve">
          <source>A user name or identifier that must be changed before running a command.</source>
          <target state="translated">명령을 실행하기 전에 변경해야하는 사용자 이름 또는 식별자.</target>
        </trans-unit>
        <trans-unit id="8d2cc9e553d43de6631e790d1726fb6831adbac4" translate="yes" xml:space="preserve">
          <source>A user who belongs to the &lt;code&gt;admins&lt;/code&gt; group must be removed from the group before they may be removed from an organization. To remove a user from the &lt;code&gt;admins&lt;/code&gt; group, run the following:</source>
          <target state="translated">&lt;code&gt;admins&lt;/code&gt; 그룹에 속하는 사용자 는 조직에서 제거되기 전에 그룹에서 제거해야합니다. &lt;code&gt;admins&lt;/code&gt; 그룹 에서 사용자를 제거하려면 다음을 실행하십시오.</target>
        </trans-unit>
        <trans-unit id="4598ae76a81d3febd9b199a79b545dd5bb6634f8" translate="yes" xml:space="preserve">
          <source>A value contained in the knife.rb file</source>
          <target state="translated">knife.rb 파일에 포함 된 값</target>
        </trans-unit>
        <trans-unit id="a942c2e5b020e0f2f95627e1d4278df0a3c69900" translate="yes" xml:space="preserve">
          <source>A value for &lt;code&gt;SSL_CERT_FILE&lt;/code&gt; is not set by default. Unless updated, the locations in which Chef will look for SSL certificates are:</source>
          <target state="translated">&lt;code&gt;SSL_CERT_FILE&lt;/code&gt; 의 값은 기본적으로 설정되어 있지 않습니다. 업데이트되지 않은 경우 Chef가 SSL 인증서를 찾을 위치는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="925539a86df241e39cd3765280ae3f4b1c00fe9a" translate="yes" xml:space="preserve">
          <source>A value passed via the command line will override a value in the knife.rb file; a value in a knife.rb file will override a default value.</source>
          <target state="translated">명령 행을 통해 전달 된 값은 knife.rb 파일의 값을 대체합니다. knife.rb 파일의 값은 기본값을 무시합니다.</target>
        </trans-unit>
        <trans-unit id="0db45dd9975868cc8eaf4c010b630d0d7449849c" translate="yes" xml:space="preserve">
          <source>A value passed via the command-line</source>
          <target state="translated">명령 줄을 통해 전달 된 값</target>
        </trans-unit>
        <trans-unit id="4cd5b0a646773ab5802940ca1736ed582713c0ed" translate="yes" xml:space="preserve">
          <source>A variable uses an equals sign (&lt;code&gt;=&lt;/code&gt;) to assign a value.</source>
          <target state="translated">변수는 등호 ( &lt;code&gt;=&lt;/code&gt; )를 사용하여 값을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="7e00059500357c8b31f8502360471a98b5b8ecc3" translate="yes" xml:space="preserve">
          <source>A version constraint for &amp;ldquo;greater than version 1.0.2&amp;rdquo; is expressed like this:</source>
          <target state="translated">&amp;ldquo;버전 1.0.2보다 큼&amp;rdquo;에 대한 버전 제약은 다음과 같이 표현됩니다.</target>
        </trans-unit>
        <trans-unit id="46e532e0b3cd62b44642c3466d50010510361276" translate="yes" xml:space="preserve">
          <source>A version constraint is a string that combines the cookbook version syntax with an operator, in the following format:</source>
          <target state="translated">버전 제약 조건은 다음 형식으로 요리 책 버전 구문과 연산자를 결합한 문자열입니다.</target>
        </trans-unit>
        <trans-unit id="3f80069dff41f3e3dc36cb31cc1e70809b6ca563" translate="yes" xml:space="preserve">
          <source>A very common use case us to install a gem during the compile phase so that it will be available to the chef-client during the execution phase. This is why the &lt;strong&gt;chef_gem&lt;/strong&gt; resource exists. For example, this:</source>
          <target state="translated">컴파일 단계에서 gem을 설치하여 실행 단계에서 요리사 클라이언트가 사용할 수 있도록하는 일반적인 사용 사례입니다. 이것이 &lt;strong&gt;chef_gem&lt;/strong&gt; 자원이 존재하는 이유 입니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="7287d8ce8e977daf70ae2f97847b4a36d0dfce8f" translate="yes" xml:space="preserve">
          <source>A virtual IP address to the primary Chef server that is maintained based on the results of the election done by Keepalived</source>
          <target state="translated">Keepalived의 선거 결과에 따라 유지되는 기본 Chef 서버의 가상 IP 주소</target>
        </trans-unit>
        <trans-unit id="df427e06867a9ee429feb41a70e3e3e4e762bd69" translate="yes" xml:space="preserve">
          <source>A virtual node is a machine that runs only as a software implementation, but otherwise behaves much like a physical machine.</source>
          <target state="translated">가상 노드는 소프트웨어 구현으로 만 실행되지만 실제 시스템과 매우 유사하게 작동하는 시스템입니다.</target>
        </trans-unit>
        <trans-unit id="c1266c819162fea8e8625b9e6e6a6ddbcac93aaf" translate="yes" xml:space="preserve">
          <source>A way to tell the chef-client how to send email</source>
          <target state="translated">요리사에게 고객에게 이메일을 보내는 방법을 알려주는 방법</target>
        </trans-unit>
        <trans-unit id="798c4d633553eba1a523b344aa519d623b0d176d" translate="yes" xml:space="preserve">
          <source>A way to trigger the exception and test the behavior of the event handler</source>
          <target state="translated">예외를 트리거하고 이벤트 핸들러의 동작을 테스트하는 방법</target>
        </trans-unit>
        <trans-unit id="cb7c181f6153dc80849ea0d5b40005a91bf1240b" translate="yes" xml:space="preserve">
          <source>A wildcard can be used to replace characters within the search query.</source>
          <target state="translated">와일드 카드를 사용하여 검색 쿼리 내의 문자를 바꿀 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ed468b76873e75fdf7533e4bec1ad67b2c73ea32" translate="yes" xml:space="preserve">
          <source>A wildcard can be used to return all of the child nodes. For example, all of the environments:</source>
          <target state="translated">와일드 카드를 사용하여 모든 하위 노드를 반환 할 수 있습니다. 예를 들어 모든 환경은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="513fb7aa0030180665fc6dc82ec2d90af455913d" translate="yes" xml:space="preserve">
          <source>A wildcard matching pattern can be used for substring matches that replace zero (or more) characters. There are two types of wildcard patterns:</source>
          <target state="translated">와일드 카드 일치 패턴은 0 개 이상의 문자를 대체하는 하위 문자열 일치에 사용될 수 있습니다. 와일드 카드 패턴에는 두 가지 유형이 있습니다.</target>
        </trans-unit>
        <trans-unit id="d4f46760f98d8e06ad1728ddc0d51d52aef32f2f" translate="yes" xml:space="preserve">
          <source>A wildcard matching search pattern is used to query for substring matches that replace zero (or more) characters in the search pattern with anything that could match the replaced character. There are two types of wildcard searches:</source>
          <target state="translated">와일드 카드 일치 검색 패턴은 검색 패턴에서 0 개 이상의 문자를 대체 문자와 일치하는 문자로 대체하는 하위 문자열 일치를 쿼리하는 데 사용됩니다. 와일드 카드 검색에는 두 가지 유형이 있습니다.</target>
        </trans-unit>
        <trans-unit id="7c089ebe26bd34137c85a94e54b3c499c3ede036" translate="yes" xml:space="preserve">
          <source>A workstation is a computer that is configured to run various Chef command-line tools that synchronize with a chef-repo, author cookbooks, interact with the Chef server, and interact with nodes.</source>
          <target state="translated">워크 스테이션은 chef-repo와 동기화하고 요리 책을 작성하며 Chef 서버와 상호 작용하고 노드와 상호 작용하는 다양한 Chef 명령 줄 도구를 실행하도록 구성된 컴퓨터입니다.</target>
        </trans-unit>
        <trans-unit id="1387f79383b3a58844efe15c5ffe42cbf64f90b8" translate="yes" xml:space="preserve">
          <source>A workstation is installed correctly when it is able to use knife to communicate with the Chef server.</source>
          <target state="translated">나이프를 사용하여 Chef 서버와 통신 할 수있는 워크 스테이션이 올바르게 설치되었습니다.</target>
        </trans-unit>
        <trans-unit id="4718a2377e926c3b02bb9e14c615c072b272bd0a" translate="yes" xml:space="preserve">
          <source>ADDLOCAL Options</source>
          <target state="translated">추가 옵션</target>
        </trans-unit>
        <trans-unit id="4faa2fa7f355385fa021db8051084a9696deea2a" translate="yes" xml:space="preserve">
          <source>AIX. All platform variants of AIX return &lt;code&gt;aix&lt;/code&gt;.</source>
          <target state="translated">AIX. AIX의 모든 플랫폼 변형은 &lt;code&gt;aix&lt;/code&gt; 를 리턴 합니다.</target>
        </trans-unit>
        <trans-unit id="c2f934cb8cab6c1b3af0d4f2fdd824eabafb6bf4" translate="yes" xml:space="preserve">
          <source>AND</source>
          <target state="translated">AND</target>
        </trans-unit>
        <trans-unit id="a691e9a4b3a5cd7069215451471b3b04e706b69c" translate="yes" xml:space="preserve">
          <source>API Clients</source>
          <target state="translated">API 클라이언트</target>
        </trans-unit>
        <trans-unit id="1642a42d890f7ebea74dd1cbff2d2a0bbf71eb07" translate="yes" xml:space="preserve">
          <source>API Requests</source>
          <target state="translated">API 요청</target>
        </trans-unit>
        <trans-unit id="4f960efee7bd8655a76259ec8ca7737d6ee3968e" translate="yes" xml:space="preserve">
          <source>API client</source>
          <target state="translated">API 클라이언트</target>
        </trans-unit>
        <trans-unit id="90ef702f73aa893337fe82291fdf030866d98852" translate="yes" xml:space="preserve">
          <source>AWS</source>
          <target state="translated">AWS</target>
        </trans-unit>
        <trans-unit id="3560ae4fa412dc668a1ec9a6aa2237b91d425932" translate="yes" xml:space="preserve">
          <source>AWS Settings</source>
          <target state="translated">AWS 설정</target>
        </trans-unit>
        <trans-unit id="27ec1d2b7f39f01d075971f33344f42aab9bd7e5" translate="yes" xml:space="preserve">
          <source>About Attributes</source>
          <target state="translated">속성 정보</target>
        </trans-unit>
        <trans-unit id="1d6b6196e183dcce288028fd74b948c2d891578f" translate="yes" xml:space="preserve">
          <source>About Cookbook Metadata</source>
          <target state="translated">요리 책 메타 데이터 정보</target>
        </trans-unit>
        <trans-unit id="e70dd0f1dc1f6c681b97d4e25d8fe3dc0e8be63f" translate="yes" xml:space="preserve">
          <source>About Cookbook Versions</source>
          <target state="translated">요리 책 버전 정보</target>
        </trans-unit>
        <trans-unit id="0f1d57849e8749a65d3cf57fa838057a818ea98e" translate="yes" xml:space="preserve">
          <source>About Cookbooks</source>
          <target state="translated">요리 책 소개</target>
        </trans-unit>
        <trans-unit id="87947be25bded63401a4dfca14b3d89708c03a30" translate="yes" xml:space="preserve">
          <source>About Deep Merge</source>
          <target state="translated">딥 병합 정보</target>
        </trans-unit>
        <trans-unit id="8d58b62d3894f43e66e1008dcbd0d1dacae5291f" translate="yes" xml:space="preserve">
          <source>About Definitions</source>
          <target state="translated">정의 정보</target>
        </trans-unit>
        <trans-unit id="6222c367775ad31665c444f207ef12b61de5679f" translate="yes" xml:space="preserve">
          <source>About Files</source>
          <target state="translated">파일 정보</target>
        </trans-unit>
        <trans-unit id="8311e7390650b32f6792dae29063cd7dae455121" translate="yes" xml:space="preserve">
          <source>About Handlers</source>
          <target state="translated">처리기 정보</target>
        </trans-unit>
        <trans-unit id="705dfa4e44bc268113bf4519cd7cdf7f6c120a25" translate="yes" xml:space="preserve">
          <source>About Knife</source>
          <target state="translated">나이프 소개</target>
        </trans-unit>
        <trans-unit id="400f73015ec5d7bdf572a41710f74d90797e3e67" translate="yes" xml:space="preserve">
          <source>About Libraries</source>
          <target state="translated">라이브러리 정보</target>
        </trans-unit>
        <trans-unit id="8d3b4e0479c9c6d11dfa2425a6f001afaa2e12f1" translate="yes" xml:space="preserve">
          <source>About Node Names</source>
          <target state="translated">노드 이름</target>
        </trans-unit>
        <trans-unit id="16dd9201d8719837e3ebde402bd6183fd0eb1105" translate="yes" xml:space="preserve">
          <source>About Nodes</source>
          <target state="translated">노드 정보</target>
        </trans-unit>
        <trans-unit id="1c4f63ffeebcf84c897cb8de57cbf806c2a06616" translate="yes" xml:space="preserve">
          <source>About Operators</source>
          <target state="translated">운영자 정보</target>
        </trans-unit>
        <trans-unit id="ef45ee9e7d0b76c06d6308b173a07130e64005b2" translate="yes" xml:space="preserve">
          <source>About Patterns</source>
          <target state="translated">패턴 정보</target>
        </trans-unit>
        <trans-unit id="61bdf1b8ec47058aa00bb643ac6ce23a00b8f43f" translate="yes" xml:space="preserve">
          <source>About Proxies</source>
          <target state="translated">프록시 정보</target>
        </trans-unit>
        <trans-unit id="380a8fac92edc37bdbe3d84e4f2e82d8f9597f28" translate="yes" xml:space="preserve">
          <source>About Recipes</source>
          <target state="translated">레시피 정보</target>
        </trans-unit>
        <trans-unit id="0b2706b9423bfa75db02338e6dd217e3d286b076" translate="yes" xml:space="preserve">
          <source>About Resources</source>
          <target state="translated">자원에 대하여</target>
        </trans-unit>
        <trans-unit id="f42c409a715b06650fe2a95ae032833c2131b325" translate="yes" xml:space="preserve">
          <source>About Run-lists</source>
          <target state="translated">런리스트에 대하여</target>
        </trans-unit>
        <trans-unit id="853abed27b43a2a9a3adf89f3685789cf416f376" translate="yes" xml:space="preserve">
          <source>About Search</source>
          <target state="translated">검색 정보</target>
        </trans-unit>
        <trans-unit id="5a0cd7b4d5c51e005105ca2f4eab8d2d9c74e3a7" translate="yes" xml:space="preserve">
          <source>About Templates</source>
          <target state="translated">템플릿 정보</target>
        </trans-unit>
        <trans-unit id="69e8985ef4e3e3ea6387d2388adda03f07fca65f" translate="yes" xml:space="preserve">
          <source>About chef-zero</source>
          <target state="translated">요리사 제로에 대해</target>
        </trans-unit>
        <trans-unit id="2107d78f2f807eeb8c81c07b1f240aa6af90b350" translate="yes" xml:space="preserve">
          <source>About the Handler DSL</source>
          <target state="translated">처리기 DSL 정보</target>
        </trans-unit>
        <trans-unit id="926e0099b09e8ed30405a2bb8ac5c1eec15f187c" translate="yes" xml:space="preserve">
          <source>About the Recipe DSL</source>
          <target state="translated">레시피 DSL 정보</target>
        </trans-unit>
        <trans-unit id="f4115c4baad3834e331f4f603d30cb4b574f84c0" translate="yes" xml:space="preserve">
          <source>About the chef-repo</source>
          <target state="translated">요리사 레포에 대하여</target>
        </trans-unit>
        <trans-unit id="52b1e9b56f7d6ce5bff73e657f217ab4d2129243" translate="yes" xml:space="preserve">
          <source>About why-run Mode</source>
          <target state="translated">왜 실행 모드 정보</target>
        </trans-unit>
        <trans-unit id="0fc31647db81ba19eec85ce040077603770bb1b4" translate="yes" xml:space="preserve">
          <source>Accept an end-user license agreement, automatically. Default value: &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">최종 사용자 사용권 계약에 자동으로 동의합니다. 기본 값 : &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c7ca7a7cd605e041b1d7d987ee643ec547807285" translate="yes" xml:space="preserve">
          <source>Access Control Lists (ACLs)</source>
          <target state="translated">액세스 제어 목록 (ACL)</target>
        </trans-unit>
        <trans-unit id="504b5b7a92bbc9bfdb17f39807368f654cb1ab63" translate="yes" xml:space="preserve">
          <source>Access attributes that are stored in files</source>
          <target state="translated">파일에 저장된 액세스 속성</target>
        </trans-unit>
        <trans-unit id="ee3fcfdd1e8c43fa2fa4c2ac7dbf062a9a3d3833" translate="yes" xml:space="preserve">
          <source>Access to a Chef server running version 0.10.x or above</source>
          <target state="translated">버전 0.10.x 이상을 실행하는 Chef 서버에 액세스</target>
        </trans-unit>
        <trans-unit id="2d8550f157b5a3e34a1d71ffed71f832a6bec714" translate="yes" xml:space="preserve">
          <source>Access to a Chef server: a hosted Chef server account or an on-premises Chef server. If you have a proxy, information on configuring chef-client to work with it is &lt;a href=&quot;proxies&quot;&gt;here&lt;/a&gt;</source>
          <target state="translated">Chef 서버에 액세스 : 호스팅 된 Chef 서버 계정 또는 온-프레미스 Chef 서버 프록시가있는 경우 요리사 클라이언트와 함께 작동하도록 구성하는 방법에 대한 정보는 &lt;a href=&quot;proxies&quot;&gt;여기에 있습니다.&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="960a99698c987d2254a987cdd01d1c8dec9483e7" translate="yes" xml:space="preserve">
          <source>Access to a machine (physical or virtual) that can be used as the first node; the FQDN or IP address for a machine is required by the &lt;code&gt;knife bootstrap&lt;/code&gt; subcommand during a bootstrap operation</source>
          <target state="translated">첫 번째 노드로 사용할 수있는 머신 (실제 또는 가상)에 대한 액세스 부트 스트랩 조작 중 &lt;code&gt;knife bootstrap&lt;/code&gt; 부속 명령 에 기계의 FQDN 또는 IP 주소가 필요 합니다.</target>
        </trans-unit>
        <trans-unit id="97c89a4d6630adeb18fa12ba9976a31413fe293e" translate="yes" xml:space="preserve">
          <source>Action</source>
          <target state="translated">Action</target>
        </trans-unit>
        <trans-unit id="c3cd636a585b20c40ac2df5ffb403e83cb2eef51" translate="yes" xml:space="preserve">
          <source>Actions</source>
          <target state="translated">Actions</target>
        </trans-unit>
        <trans-unit id="f709d61bb3e0335dd069ae70a8a80dd63e5977a3" translate="yes" xml:space="preserve">
          <source>Actions are policy and administrative changes made to the Chef server. The Chef server gathers a lot of data&amp;mdash;&amp;ndash;each node object, the node run history for all nodes, the history of every cookbook and cookbook version, how policy settings, such as roles, environments, and data bags, are applied and to what they are applied, individual user data, and so on.</source>
          <target state="translated">조치는 Chef 서버에 대한 정책 및 관리 변경 사항입니다. Chef 서버는 각 노드 오브젝트, 모든 노드에 대한 노드 실행 히스토리, 모든 요리 책 및 쿡북 버전 히스토리, 역할, 환경 및 데이터 백과 같은 정책 설정이 적용되는 방법 및 대상에 대한 많은 데이터를 수집합니다. 그것들은 개별 사용자 데이터 등에 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="f6c68684aa858aea3bf35da389b3ca31fbbb16e3" translate="yes" xml:space="preserve">
          <source>Active Directory and LDAP</source>
          <target state="translated">Active Directory 및 LDAP</target>
        </trans-unit>
        <trans-unit id="61cc55aa0453184734c3fa0b621eda6fa874bd83" translate="yes" xml:space="preserve">
          <source>Add</source>
          <target state="translated">Add</target>
        </trans-unit>
        <trans-unit id="ff0b5a6e9af2279010cc33dd6bac0ffa3bb397af" translate="yes" xml:space="preserve">
          <source>Add &lt;code&gt;.chef&lt;/code&gt; to the &lt;code&gt;.gitignore&lt;/code&gt; file to prevent uploading the contents of the &lt;code&gt;.chef&lt;/code&gt; folder to GitHub. For example:</source>
          <target state="translated">&lt;code&gt;.chef&lt;/code&gt; 를 &lt;code&gt;.gitignore&lt;/code&gt; 파일에 추가 하여 &lt;code&gt;.chef&lt;/code&gt; 폴더 의 내용이 GitHub에 업로드되지 않도록 합니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="7140328631ed02c1115940881ade6368c50d8e69" translate="yes" xml:space="preserve">
          <source>Add &lt;code&gt;desired_state:&lt;/code&gt; to get or set the list of desired state properties for a resource, which describe the desired state of the node, such as permissions on an existing file. This value may be &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;desired_state:&lt;/code&gt; 를 추가 하여 기존 파일에 대한 권한과 같은 노드의 원하는 상태를 설명하는 리소스의 원하는 상태 속성 목록을 가져 오거나 설정합니다. 이 값은 &lt;code&gt;true&lt;/code&gt; 또는 &lt;code&gt;false&lt;/code&gt; 일 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="af808d6e7672851b1359931af667ce6a2f7ce9e3" translate="yes" xml:space="preserve">
          <source>Add &lt;code&gt;identity:&lt;/code&gt; to set a resource to a particular set of properties. This value may be &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;identity:&lt;/code&gt; 추가 : 리소스를 특정 속성 집합으로 설정합니다. 이 값은 &lt;code&gt;true&lt;/code&gt; 또는 &lt;code&gt;false&lt;/code&gt; 일 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="dbe5b43ddee584005c1261471d5f7341c9ef2a4c" translate="yes" xml:space="preserve">
          <source>Add Data Bag</source>
          <target state="translated">데이터 백 추가</target>
        </trans-unit>
        <trans-unit id="6c26ec867465f00c7afebc545e803c788eb76967" translate="yes" xml:space="preserve">
          <source>Add Environment</source>
          <target state="translated">환경 추가</target>
        </trans-unit>
        <trans-unit id="4dba3be550bc469a38818360871c780252113e7c" translate="yes" xml:space="preserve">
          <source>Add Item</source>
          <target state="translated">아이템 추가</target>
        </trans-unit>
        <trans-unit id="c9b77812480470f07ee1832138cb9b3c47132160" translate="yes" xml:space="preserve">
          <source>Add Members</source>
          <target state="translated">회원 추가</target>
        </trans-unit>
        <trans-unit id="8a2f02fad193b1d4216fc17e3569947978f9a6ff" translate="yes" xml:space="preserve">
          <source>Add Recipe to</source>
          <target state="translated">레시피 추가</target>
        </trans-unit>
        <trans-unit id="82d0afcca4f991e7fa736ed5aea42b9f8ce384a6" translate="yes" xml:space="preserve">
          <source>Add Role</source>
          <target state="translated">역할 추가</target>
        </trans-unit>
        <trans-unit id="340b75ca12943212692ed623855b8e0529bd40cf" translate="yes" xml:space="preserve">
          <source>Add Role to</source>
          <target state="translated">에 역할 추가</target>
        </trans-unit>
        <trans-unit id="ed1c778cb11678fa8216d28211f1c0a62f87525e" translate="yes" xml:space="preserve">
          <source>Add Ruby to $PATH</source>
          <target state="translated">$ PATH에 Ruby 추가</target>
        </trans-unit>
        <trans-unit id="43858b67084a4b6cbdda4bdaf26cd1041daa51d8" translate="yes" xml:space="preserve">
          <source>Add a &lt;code&gt;before_restart&lt;/code&gt; block to fix up the permissions</source>
          <target state="translated">&lt;code&gt;before_restart&lt;/code&gt; 블록을 추가 하여 권한을 수정하십시오.</target>
        </trans-unit>
        <trans-unit id="64954f95f03b43b4210b0143b027f9bc2ede1de9" translate="yes" xml:space="preserve">
          <source>Add a data bag item to a data bag</source>
          <target state="translated">데이터 백에 데이터 백 항목 추가</target>
        </trans-unit>
        <trans-unit id="09c20083d39d0a93f9b5431563ca81d60abe1f1f" translate="yes" xml:space="preserve">
          <source>Add a dependency on another cookbook that is recommended, but not required. A cookbook will still work even if recommended dependencies are not available.</source>
          <target state="translated">권장되지만 필수는 아닌 다른 요리 책에 대한 종속성을 추가하십시오. 권장되는 종속성을 사용할 수없는 경우에도 요리 책은 계속 작동합니다.</target>
        </trans-unit>
        <trans-unit id="cecbe5795734ab1800b4e96557777d5fc734f8b6" translate="yes" xml:space="preserve">
          <source>Add a dependency on another cookbook that is suggested, but not required. This field is weaker than &lt;code&gt;recommends&lt;/code&gt;; a cookbook will still work even when suggested dependencies are not available.</source>
          <target state="translated">제안되었지만 필수는 아닌 다른 요리 책에 대한 종속성을 추가하십시오. 이 필드는 &lt;code&gt;recommends&lt;/code&gt; 보다 약 합니다 . 제안 된 종속성을 사용할 수없는 경우에도 요리 책은 계속 작동합니다.</target>
        </trans-unit>
        <trans-unit id="c6e453d490845c9097853fef5e86dd0254f9e183" translate="yes" xml:space="preserve">
          <source>Add a recipe to the cookbook file similar to the following:</source>
          <target state="translated">요리 책 파일에 다음과 유사한 레시피를 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="ed2a5ad6f777c9b87ff36c6e7568f179a27335c0" translate="yes" xml:space="preserve">
          <source>Add a recipe, definition, or resource that is provided by this cookbook, should the auto-populated list be insufficient.</source>
          <target state="translated">자동으로 채워진 목록이 충분하지 않으면이 요리 책에서 제공하는 레시피, 정의 또는 리소스를 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="a1b4470e94aa8dc054f6f7f096ab7fce6b769ca4" translate="yes" xml:space="preserve">
          <source>Add a run-list item after the specified run-list item.</source>
          <target state="translated">지정된 실행 목록 항목 뒤에 실행 목록 항목을 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="8991cccad48f7ac9e7e5e543dda884b53923b9c3" translate="yes" xml:space="preserve">
          <source>Add a run-list item before the specified run-list item.</source>
          <target state="translated">지정된 실행 목록 항목 앞에 실행 목록 항목을 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="5bd19e63766244bbfc1cbca7de8ffcce9f5d55ac" translate="yes" xml:space="preserve">
          <source>Add an entry to the file systems table (&lt;code&gt;fstab&lt;/code&gt;).</source>
          <target state="translated">파일 시스템 테이블 ( &lt;code&gt;fstab&lt;/code&gt; )에 항목을 추가하십시오 .</target>
        </trans-unit>
        <trans-unit id="18180eac4c59fe3106ebc41703a6dc05d6c28dcb" translate="yes" xml:space="preserve">
          <source>Add omnibus Ruby to the $PATH environment variable</source>
          <target state="translated">$ PATH 환경 변수에 옴니버스 루비 추가</target>
        </trans-unit>
        <trans-unit id="2c5297f95290367a24f138e427c9adf3c82d0ef8" translate="yes" xml:space="preserve">
          <source>Add quotes around the variable assignment strings.</source>
          <target state="translated">변수 할당 문자열 주위에 따옴표를 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="e30f91b8910d4c21596c0f457a26dcb7c41adde5" translate="yes" xml:space="preserve">
          <source>Add separate entry in the chef-server.rb file for each frontend server.</source>
          <target state="translated">각 프런트 엔드 서버에 대해 chef-server.rb 파일에 별도의 항목을 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="66fe8a780d4b07b094940a995d753aa2cef43146" translate="yes" xml:space="preserve">
          <source>Add that recipe to a node&amp;rsquo;s run-list, often as the first recipe in that run-list</source>
          <target state="translated">종종 해당 실행 목록의 첫 번째 레시피처럼 해당 실행 레시피를 노드의 실행 목록에 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="cefb45d0b047de6b2428ce08eb87c8129c51f511" translate="yes" xml:space="preserve">
          <source>Add the Handler</source>
          <target state="translated">핸들러 추가</target>
        </trans-unit>
        <trans-unit id="6482415bd5e5fc4089622cb4b7e69fd3b8d94e96" translate="yes" xml:space="preserve">
          <source>Add the following settings to the chef-server.rb file. These settings must be added to the chef-server.rb file on each machine in the Chef server frontend deployment of a High Availability installation as well as on Chef servers in a standalone installation.</source>
          <target state="translated">chef-server.rb 파일에 다음 설정을 추가하십시오. 이러한 설정은 독립형 설치의 Chef 서버뿐만 아니라 High Availability 설치의 Chef 서버 프론트 엔드 배치에있는 각 시스템의 chef-server.rb 파일에 추가해야합니다.</target>
        </trans-unit>
        <trans-unit id="2fce0dad20f60305c79b045bcc2307c091dd9ec6" translate="yes" xml:space="preserve">
          <source>Add the following settings to the chef-server.rb file:</source>
          <target state="translated">chef-server.rb 파일에 다음 설정을 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="fb8a97c74d2c2df8fafe64403308e0c63fc49435" translate="yes" xml:space="preserve">
          <source>Add the user to the &lt;code&gt;admins&lt;/code&gt; group.</source>
          <target state="translated">사용자를 &lt;code&gt;admins&lt;/code&gt; 그룹에 추가하십시오 .</target>
        </trans-unit>
        <trans-unit id="7c1c6b8362232f333fe050b37e864d0d5f5c5391" translate="yes" xml:space="preserve">
          <source>Adding the resource to a recipe</source>
          <target state="translated">레시피에 리소스 추가</target>
        </trans-unit>
        <trans-unit id="8e8428e85c661f03dd33db8f12b20a010ab5be5e" translate="yes" xml:space="preserve">
          <source>Addition</source>
          <target state="translated">Addition</target>
        </trans-unit>
        <trans-unit id="0a9d53fb3ce14fcdbadcc17b2d142530a9605625" translate="yes" xml:space="preserve">
          <source>Additional capacity can be gained by placing the front-end node behind an HTTP load balancer, and then scaling front-end nodes horizontally</source>
          <target state="translated">프런트 엔드 노드를 HTTP로드 밸런서 뒤에 놓고 프런트 엔드 노드를 수평으로 확장하면 추가 용량을 얻을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="288ef0f110ed8db767bb1424c345fe56e3812da3" translate="yes" xml:space="preserve">
          <source>Additional environment variables to set before running a job.</source>
          <target state="translated">작업을 실행하기 전에 설정할 추가 환경 변수.</target>
        </trans-unit>
        <trans-unit id="104f4715a5cf13514dd0c7ab2531ed455fbc731c" translate="yes" xml:space="preserve">
          <source>Additionally, you may run the following command to verify that the VIP IP address is configured on the Ethernet interface:</source>
          <target state="translated">또한 다음 명령을 실행하여 VIP IP 주소가 이더넷 인터페이스에 구성되어 있는지 확인할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2094b15fcf4c53004b735c72be3f4395bc07e1d2" translate="yes" xml:space="preserve">
          <source>Adds the &lt;code&gt;--bootstrap-curl-options&lt;/code&gt; option.</source>
          <target state="translated">&lt;code&gt;--bootstrap-curl-options&lt;/code&gt; 옵션을 추가합니다 .</target>
        </trans-unit>
        <trans-unit id="04e481725a4ddf73c6c5a9e1a43e7b9b5da522ed" translate="yes" xml:space="preserve">
          <source>Adds the &lt;code&gt;--bootstrap-install-command&lt;/code&gt; option.</source>
          <target state="translated">&lt;code&gt;--bootstrap-install-command&lt;/code&gt; 옵션을 추가합니다 .</target>
        </trans-unit>
        <trans-unit id="34134d32a653ff86d0f74c4a7fd99acc21eeeb0d" translate="yes" xml:space="preserve">
          <source>Adds the &lt;code&gt;--bootstrap-no-proxy&lt;/code&gt; option.</source>
          <target state="translated">&lt;code&gt;--bootstrap-no-proxy&lt;/code&gt; 옵션을 추가합니다 .</target>
        </trans-unit>
        <trans-unit id="e09c27901bafd8e5713571970b6bef715345ba47" translate="yes" xml:space="preserve">
          <source>Adds the &lt;code&gt;--bootstrap-proxy&lt;/code&gt; option.</source>
          <target state="translated">&lt;code&gt;--bootstrap-proxy&lt;/code&gt; 옵션을 추가합니다 .</target>
        </trans-unit>
        <trans-unit id="efbca231d226f69bca24933500aa21c699a0e67a" translate="yes" xml:space="preserve">
          <source>Adds the the &lt;code&gt;--[no-]host-key-verify&lt;/code&gt; option.</source>
          <target state="translated">하여 추가 &lt;code&gt;--[no-]host-key-verify&lt;/code&gt; 옵션을 선택합니다.</target>
        </trans-unit>
        <trans-unit id="783c547945608b1027e9df9e5ee8b41a52fca1ae" translate="yes" xml:space="preserve">
          <source>Adds the the &lt;code&gt;--[no-]pretty&lt;/code&gt; option.</source>
          <target state="translated">&lt;code&gt;--[no-]pretty&lt;/code&gt; 옵션을 추가합니다 .</target>
        </trans-unit>
        <trans-unit id="80b8758c5e0c3fec9df5444161a9801d053f94aa" translate="yes" xml:space="preserve">
          <source>Adds the the &lt;code&gt;--admin&lt;/code&gt; option.</source>
          <target state="translated">&lt;code&gt;--admin&lt;/code&gt; 옵션을 추가합니다 .</target>
        </trans-unit>
        <trans-unit id="2f9f3fe25a0f095d30f8794cbef6cd85fe4fd9a4" translate="yes" xml:space="preserve">
          <source>Adds the the &lt;code&gt;--after&lt;/code&gt; option.</source>
          <target state="translated">&lt;code&gt;--after&lt;/code&gt; 옵션을 추가합니다 .</target>
        </trans-unit>
        <trans-unit id="570056fa21d467b649f1080096d97be7af6bbab8" translate="yes" xml:space="preserve">
          <source>Adds the the &lt;code&gt;--all&lt;/code&gt; option.</source>
          <target state="translated">&lt;code&gt;--all&lt;/code&gt; 옵션을 추가합니다 .</target>
        </trans-unit>
        <trans-unit id="4720fc6350b3593492acd0cc86ba001a33689f65" translate="yes" xml:space="preserve">
          <source>Adds the the &lt;code&gt;--attribute&lt;/code&gt; option.</source>
          <target state="translated">&lt;code&gt;--attribute&lt;/code&gt; 옵션을 추가합니다 .</target>
        </trans-unit>
        <trans-unit id="aa16dc45b959cc16ff7327ff90287bdaca2fea9b" translate="yes" xml:space="preserve">
          <source>Adds the the &lt;code&gt;--bootstrap-template&lt;/code&gt; option.</source>
          <target state="translated">&lt;code&gt;--bootstrap-template&lt;/code&gt; 옵션을 추가합니다 .</target>
        </trans-unit>
        <trans-unit id="c14b6351e0343547552ff4829b3a1a2dd044d897" translate="yes" xml:space="preserve">
          <source>Adds the the &lt;code&gt;--bootstrap-url&lt;/code&gt; option.</source>
          <target state="translated">&lt;code&gt;--bootstrap-url&lt;/code&gt; 옵션을 추가합니다 .</target>
        </trans-unit>
        <trans-unit id="5e2ebf2c7e7e276fda06e37c3ae966cacc16cdd7" translate="yes" xml:space="preserve">
          <source>Adds the the &lt;code&gt;--bootstrap-vault-item&lt;/code&gt; option.</source>
          <target state="translated">&lt;code&gt;--bootstrap-vault-item&lt;/code&gt; 옵션을 추가합니다 .</target>
        </trans-unit>
        <trans-unit id="f91a683595ea59cc1373fec5502d22b9eb47976a" translate="yes" xml:space="preserve">
          <source>Adds the the &lt;code&gt;--bootstrap-version&lt;/code&gt; option.</source>
          <target state="translated">&lt;code&gt;--bootstrap-version&lt;/code&gt; 옵션을 추가합니다 .</target>
        </trans-unit>
        <trans-unit id="1637418140d03d596a4446925add290d4daade32" translate="yes" xml:space="preserve">
          <source>Adds the the &lt;code&gt;--bootstrap-wget-options&lt;/code&gt; option.</source>
          <target state="translated">&lt;code&gt;--bootstrap-wget-options&lt;/code&gt; 옵션을 추가합니다 .</target>
        </trans-unit>
        <trans-unit id="1bb35b85113fe98c02337676a822db609a732c97" translate="yes" xml:space="preserve">
          <source>Adds the the &lt;code&gt;--chef-repo-path&lt;/code&gt; option.</source>
          <target state="translated">&lt;code&gt;--chef-repo-path&lt;/code&gt; 옵션을 추가합니다 .</target>
        </trans-unit>
        <trans-unit id="bdd42e3fda77da69728366f09ed6c8dd80dce53d" translate="yes" xml:space="preserve">
          <source>Adds the the &lt;code&gt;--concurrency&lt;/code&gt; option.</source>
          <target state="translated">&lt;code&gt;--concurrency&lt;/code&gt; 옵션을 추가합니다 .</target>
        </trans-unit>
        <trans-unit id="b5d676157463e5b156c10aab9b9353fdce40bc2e" translate="yes" xml:space="preserve">
          <source>Adds the the &lt;code&gt;--config&lt;/code&gt; option.</source>
          <target state="translated">&lt;code&gt;--config&lt;/code&gt; 옵션을 추가합니다 .</target>
        </trans-unit>
        <trans-unit id="9b6c0615c87654f77c8c44d92de61a22a7d13b51" translate="yes" xml:space="preserve">
          <source>Adds the the &lt;code&gt;--cookbook-path&lt;/code&gt; option.</source>
          <target state="translated">&lt;code&gt;--cookbook-path&lt;/code&gt; 옵션을 추가합니다 .</target>
        </trans-unit>
        <trans-unit id="a07115d76c5f622222c7530690bb6365aa200c1b" translate="yes" xml:space="preserve">
          <source>Adds the the &lt;code&gt;--description&lt;/code&gt; option.</source>
          <target state="translated">&lt;code&gt;--description&lt;/code&gt; 옵션을 추가합니다 .</target>
        </trans-unit>
        <trans-unit id="73c4b1dff6d0053fc01af36bc50df8c7a1de0eff" translate="yes" xml:space="preserve">
          <source>Adds the the &lt;code&gt;--diff&lt;/code&gt; option.</source>
          <target state="translated">&lt;code&gt;--diff&lt;/code&gt; 옵션을 추가합니다 .</target>
        </trans-unit>
        <trans-unit id="422a75e08df6fe7331d27efdcdae72b191de2098" translate="yes" xml:space="preserve">
          <source>Adds the the &lt;code&gt;--dir&lt;/code&gt; option.</source>
          <target state="translated">&lt;code&gt;--dir&lt;/code&gt; 옵션을 추가합니다 .</target>
        </trans-unit>
        <trans-unit id="9a3442a2b9771ab852d1f1746615f83cc96832ab" translate="yes" xml:space="preserve">
          <source>Adds the the &lt;code&gt;--disable-editing&lt;/code&gt; option.</source>
          <target state="translated">&lt;code&gt;--disable-editing&lt;/code&gt; 옵션을 추가합니다 .</target>
        </trans-unit>
        <trans-unit id="14d573b09dac5c29b73b0b8990a59ccf83ecb253" translate="yes" xml:space="preserve">
          <source>Adds the the &lt;code&gt;--dry-run&lt;/code&gt; option.</source>
          <target state="translated">&lt;code&gt;--dry-run&lt;/code&gt; 옵션을 추가합니다 .</target>
        </trans-unit>
        <trans-unit id="6b1ed3dc2b38fc5f55baa8c3d49c2252aadd4758" translate="yes" xml:space="preserve">
          <source>Adds the the &lt;code&gt;--editor&lt;/code&gt; option.</source>
          <target state="translated">&lt;code&gt;--editor&lt;/code&gt; 옵션을 추가합니다 .</target>
        </trans-unit>
        <trans-unit id="14109b8a131b279e20f7dc062419e181df89a3d9" translate="yes" xml:space="preserve">
          <source>Adds the the &lt;code&gt;--environment&lt;/code&gt; option.</source>
          <target state="translated">&lt;code&gt;--environment&lt;/code&gt; 옵션을 추가합니다 .</target>
        </trans-unit>
        <trans-unit id="1323078cd4b8c20e50dd20e1b03d5eca17aa655a" translate="yes" xml:space="preserve">
          <source>Adds the the &lt;code&gt;--exec&lt;/code&gt; option.</source>
          <target state="translated">&lt;code&gt;--exec&lt;/code&gt; 옵션을 추가합니다 .</target>
        </trans-unit>
        <trans-unit id="b8fa14d5f1e0fad7a15d37d86a8b2bbeab55f0ab" translate="yes" xml:space="preserve">
          <source>Adds the the &lt;code&gt;--file&lt;/code&gt; option.</source>
          <target state="translated">&lt;code&gt;--file&lt;/code&gt; 옵션을 추가합니다 .</target>
        </trans-unit>
        <trans-unit id="8f551dcf4eca611b98370b4dd76657fb22303d61" translate="yes" xml:space="preserve">
          <source>Adds the the &lt;code&gt;--force&lt;/code&gt; option.</source>
          <target state="translated">&lt;code&gt;--force&lt;/code&gt; 옵션을 추가합니다 .</target>
        </trans-unit>
        <trans-unit id="fd0cbcfffc2e2788432758a58b928ca56c219779" translate="yes" xml:space="preserve">
          <source>Adds the the &lt;code&gt;--fqdn&lt;/code&gt; option.</source>
          <target state="translated">&lt;code&gt;--fqdn&lt;/code&gt; 옵션을 추가합니다 .</target>
        </trans-unit>
        <trans-unit id="60984e967dc235f2343e93e48c62608faa93ccd9" translate="yes" xml:space="preserve">
          <source>Adds the the &lt;code&gt;--freeze&lt;/code&gt; option.</source>
          <target state="translated">&lt;code&gt;--freeze&lt;/code&gt; 옵션을 추가합니다 .</target>
        </trans-unit>
        <trans-unit id="11ffc3b7f9516d91961849bede35e6d0e35bebd9" translate="yes" xml:space="preserve">
          <source>Adds the the &lt;code&gt;--hide-healthy&lt;/code&gt; option.</source>
          <target state="translated">&lt;code&gt;--hide-healthy&lt;/code&gt; 옵션을 추가합니다 .</target>
        </trans-unit>
        <trans-unit id="ccbbb99749e87d587142d79c3608c235fafd4aad" translate="yes" xml:space="preserve">
          <source>Adds the the &lt;code&gt;--identity-file&lt;/code&gt; option.</source>
          <target state="translated">&lt;code&gt;--identity-file&lt;/code&gt; 옵션을 추가합니다 .</target>
        </trans-unit>
        <trans-unit id="2a76f7524763478fb5c754bf18d0b3c12128c37c" translate="yes" xml:space="preserve">
          <source>Adds the the &lt;code&gt;--include-dependencies&lt;/code&gt; option.</source>
          <target state="translated">&lt;code&gt;--include-dependencies&lt;/code&gt; 옵션을 추가합니다 .</target>
        </trans-unit>
        <trans-unit id="7a9203efb0b644faef1ebcada0944375a112965b" translate="yes" xml:space="preserve">
          <source>Adds the the &lt;code&gt;--initial&lt;/code&gt; option.</source>
          <target state="translated">&lt;code&gt;--initial&lt;/code&gt; 옵션을 추가합니다 .</target>
        </trans-unit>
        <trans-unit id="37ef2d6dfe7a37c50cb58a808f8f78c536156d51" translate="yes" xml:space="preserve">
          <source>Adds the the &lt;code&gt;--input&lt;/code&gt; option.</source>
          <target state="translated">&lt;code&gt;--input&lt;/code&gt; 옵션을 추가합니다 .</target>
        </trans-unit>
        <trans-unit id="95fbfd9cebc892cb7a1bb37bd965f2a3c944e63d" translate="yes" xml:space="preserve">
          <source>Adds the the &lt;code&gt;--latest&lt;/code&gt; option.</source>
          <target state="translated">&lt;code&gt;--latest&lt;/code&gt; 옵션을 추가합니다 .</target>
        </trans-unit>
        <trans-unit id="bef2dba2b7ff89231176c098a2814816187adad9" translate="yes" xml:space="preserve">
          <source>Adds the the &lt;code&gt;--local&lt;/code&gt; option.</source>
          <target state="translated">&lt;code&gt;--local&lt;/code&gt; 옵션을 추가합니다 .</target>
        </trans-unit>
        <trans-unit id="a4f3406b6d4e5bbd07b20a8d77a20e18a137f722" translate="yes" xml:space="preserve">
          <source>Adds the the &lt;code&gt;--manual-list&lt;/code&gt; option.</source>
          <target state="translated">&lt;code&gt;--manual-list&lt;/code&gt; 옵션을 추가합니다 .</target>
        </trans-unit>
        <trans-unit id="fe9ed333a1afc6d60af89540675b9efb84328f50" translate="yes" xml:space="preserve">
          <source>Adds the the &lt;code&gt;--max-args&lt;/code&gt; option.</source>
          <target state="translated">&lt;code&gt;--max-args&lt;/code&gt; 옵션을 추가합니다 .</target>
        </trans-unit>
        <trans-unit id="b786224cf33dcbe80c92fc40472b0834b12f3de7" translate="yes" xml:space="preserve">
          <source>Adds the the &lt;code&gt;--max-chars&lt;/code&gt; option.</source>
          <target state="translated">&lt;code&gt;--max-chars&lt;/code&gt; 옵션을 추가합니다 .</target>
        </trans-unit>
        <trans-unit id="457ffe8dd2872e559cca8ad3c7a9d030799faabe" translate="yes" xml:space="preserve">
          <source>Adds the the &lt;code&gt;--method&lt;/code&gt; option.</source>
          <target state="translated">&lt;code&gt;--method&lt;/code&gt; 옵션을 추가합니다 .</target>
        </trans-unit>
        <trans-unit id="a903ed5cf179bb830640de9d5256e98a8b5756f6" translate="yes" xml:space="preserve">
          <source>Adds the the &lt;code&gt;--name-only&lt;/code&gt; option.</source>
          <target state="translated">&lt;code&gt;--name-only&lt;/code&gt; 옵션을 추가합니다 .</target>
        </trans-unit>
        <trans-unit id="8da0fae0845b76eaab5da7c2ee39489be2e7235c" translate="yes" xml:space="preserve">
          <source>Adds the the &lt;code&gt;--name-status&lt;/code&gt; option.</source>
          <target state="translated">&lt;code&gt;--name-status&lt;/code&gt; 옵션을 추가합니다 .</target>
        </trans-unit>
        <trans-unit id="ae0dbef62fe583293550b9b855e1650dcfdf4602" translate="yes" xml:space="preserve">
          <source>Adds the the &lt;code&gt;--password&lt;/code&gt; option.</source>
          <target state="translated">&lt;code&gt;--password&lt;/code&gt; 옵션을 추가합니다 .</target>
        </trans-unit>
        <trans-unit id="aa3ab23477a4ee1d83d7fc8b8b97c99f80bc819e" translate="yes" xml:space="preserve">
          <source>Adds the the &lt;code&gt;--pattern&lt;/code&gt; option.</source>
          <target state="translated">&lt;code&gt;--pattern&lt;/code&gt; 옵션을 추가합니다 .</target>
        </trans-unit>
        <trans-unit id="1efcbde74d531572f63ebfa7e2efc92043e96cf3" translate="yes" xml:space="preserve">
          <source>Adds the the &lt;code&gt;--platform-version&lt;/code&gt; option.</source>
          <target state="translated">&lt;code&gt;--platform-version&lt;/code&gt; 옵션을 추가합니다 .</target>
        </trans-unit>
        <trans-unit id="f378fc4c9fb3cc14b66c8ee0f856fde6601afeec" translate="yes" xml:space="preserve">
          <source>Adds the the &lt;code&gt;--platform&lt;/code&gt; option.</source>
          <target state="translated">&lt;code&gt;--platform&lt;/code&gt; 옵션을 추가합니다 .</target>
        </trans-unit>
        <trans-unit id="01648a94d3453e2e953feed14062f6e24cb447e6" translate="yes" xml:space="preserve">
          <source>Adds the the &lt;code&gt;--print-after&lt;/code&gt; option.</source>
          <target state="translated">&lt;code&gt;--print-after&lt;/code&gt; 옵션을 추가합니다 .</target>
        </trans-unit>
        <trans-unit id="f6e293d26bd421963f2f96fbac6e25a90032b48d" translate="yes" xml:space="preserve">
          <source>Adds the the &lt;code&gt;--purge&lt;/code&gt; option.</source>
          <target state="translated">&lt;code&gt;--purge&lt;/code&gt; 옵션을 추가합니다 .</target>
        </trans-unit>
        <trans-unit id="f1d269465e4dcb58a3da267b0f8addd1ca382316" translate="yes" xml:space="preserve">
          <source>Adds the the &lt;code&gt;--readme-format&lt;/code&gt; option.</source>
          <target state="translated">&lt;code&gt;--readme-format&lt;/code&gt; 옵션을 추가합니다 .</target>
        </trans-unit>
        <trans-unit id="3c44b147ebc1b7fb95451ae3fe8501983f0db7f8" translate="yes" xml:space="preserve">
          <source>Adds the the &lt;code&gt;--recurse&lt;/code&gt; option.</source>
          <target state="translated">&lt;code&gt;--recurse&lt;/code&gt; 옵션을 추가합니다 .</target>
        </trans-unit>
        <trans-unit id="2957ec17d5f556643acc0a7373fd1415f58ea7ff" translate="yes" xml:space="preserve">
          <source>Adds the the &lt;code&gt;--remote&lt;/code&gt; option.</source>
          <target state="translated">&lt;code&gt;--remote&lt;/code&gt; 옵션을 추가합니다 .</target>
        </trans-unit>
        <trans-unit id="cd9b4c82d9ee208f64a4e1f8a6ee31a16f291868" translate="yes" xml:space="preserve">
          <source>Adds the the &lt;code&gt;--replace-first&lt;/code&gt; option.</source>
          <target state="translated">&lt;code&gt;--replace-first&lt;/code&gt; 옵션을 추가합니다 .</target>
        </trans-unit>
        <trans-unit id="f433da4b90268a99f3490c7a46304afcae8a799b" translate="yes" xml:space="preserve">
          <source>Adds the the &lt;code&gt;--replace&lt;/code&gt; option.</source>
          <target state="translated">&lt;code&gt;--replace&lt;/code&gt; 옵션을 추가합니다 .</target>
        </trans-unit>
        <trans-unit id="c4551bbe70bd202fdf8e32087b8c75b5b5de87f6" translate="yes" xml:space="preserve">
          <source>Adds the the &lt;code&gt;--repo-mode&lt;/code&gt; option.</source>
          <target state="translated">&lt;code&gt;--repo-mode&lt;/code&gt; 옵션을 추가합니다 .</target>
        </trans-unit>
        <trans-unit id="e584138777d645b83c0826cbb91d90ad9fe5d807" translate="yes" xml:space="preserve">
          <source>Adds the the &lt;code&gt;--repository&lt;/code&gt; option.</source>
          <target state="translated">&lt;code&gt;--repository&lt;/code&gt; 옵션을 추가합니다 .</target>
        </trans-unit>
        <trans-unit id="f9900380a5b2597a0e6db9c5bf04ec7bfc760edd" translate="yes" xml:space="preserve">
          <source>Adds the the &lt;code&gt;--run-list&lt;/code&gt; option.</source>
          <target state="translated">&lt;code&gt;--run-list&lt;/code&gt; 옵션을 추가합니다 .</target>
        </trans-unit>
        <trans-unit id="4334cbd4270120971949698b2f0fe354e8c9c8b6" translate="yes" xml:space="preserve">
          <source>Adds the the &lt;code&gt;--script-path&lt;/code&gt; option.</source>
          <target state="translated">&lt;code&gt;--script-path&lt;/code&gt; 옵션을 추가합니다 .</target>
        </trans-unit>
        <trans-unit id="cb338814c753ff07d34fd140f92c570455fe15ec" translate="yes" xml:space="preserve">
          <source>Adds the the &lt;code&gt;--secret-file&lt;/code&gt; option.</source>
          <target state="translated">&lt;code&gt;--secret-file&lt;/code&gt; 옵션을 추가합니다 .</target>
        </trans-unit>
        <trans-unit id="6a85bfe4bd8cb40b5a412e1920d6af811275f6b8" translate="yes" xml:space="preserve">
          <source>Adds the the &lt;code&gt;--secret&lt;/code&gt; option.</source>
          <target state="translated">&lt;code&gt;--secret&lt;/code&gt; 옵션을 추가합니다 .</target>
        </trans-unit>
        <trans-unit id="cf414c2846696c1a6b3f4ba15b8149f45423e464" translate="yes" xml:space="preserve">
          <source>Adds the the &lt;code&gt;--skip-dependencies&lt;/code&gt; option.</source>
          <target state="translated">&lt;code&gt;--skip-dependencies&lt;/code&gt; 옵션을 추가합니다 .</target>
        </trans-unit>
        <trans-unit id="8144a43fd3a02969f41c804404eec80d494e555f" translate="yes" xml:space="preserve">
          <source>Adds the the &lt;code&gt;--sort-reverse&lt;/code&gt; option.</source>
          <target state="translated">&lt;code&gt;--sort-reverse&lt;/code&gt; 옵션을 추가합니다 .</target>
        </trans-unit>
        <trans-unit id="692997f2a9fb38630711ef2b3c08d6d290f26b2b" translate="yes" xml:space="preserve">
          <source>Adds the the &lt;code&gt;--ssh-gateway&lt;/code&gt; option.</source>
          <target state="translated">&lt;code&gt;--ssh-gateway&lt;/code&gt; 옵션을 추가합니다 .</target>
        </trans-unit>
        <trans-unit id="7dc34467fe9d6ce4d87cb0ba616991b4dbf1ac89" translate="yes" xml:space="preserve">
          <source>Adds the the &lt;code&gt;--ssh-password&lt;/code&gt; option.</source>
          <target state="translated">&lt;code&gt;--ssh-password&lt;/code&gt; 옵션을 추가합니다 .</target>
        </trans-unit>
        <trans-unit id="306c5ad515dd1ca80d7200600f75cbddb33c9a93" translate="yes" xml:space="preserve">
          <source>Adds the the &lt;code&gt;--ssh-port&lt;/code&gt; option.</source>
          <target state="translated">&lt;code&gt;--ssh-port&lt;/code&gt; 옵션을 추가합니다 .</target>
        </trans-unit>
        <trans-unit id="ff0972fd0f1346fe359cd5e4a399d03c93a7dbfe" translate="yes" xml:space="preserve">
          <source>Adds the the &lt;code&gt;--ssh-user&lt;/code&gt; option.</source>
          <target state="translated">&lt;code&gt;--ssh-user&lt;/code&gt; 옵션을 추가합니다 .</target>
        </trans-unit>
        <trans-unit id="b2cabad2accc67985421106e461be13cd530136b" translate="yes" xml:space="preserve">
          <source>Adds the the &lt;code&gt;--sudo&lt;/code&gt; option.</source>
          <target state="translated">&lt;code&gt;--sudo&lt;/code&gt; 옵션을 추가합니다 .</target>
        </trans-unit>
        <trans-unit id="5181499807412fea5d4403ff7e75fbbd3ee9b8e5" translate="yes" xml:space="preserve">
          <source>Adds the the &lt;code&gt;--tree&lt;/code&gt; option.</source>
          <target state="translated">&lt;code&gt;--tree&lt;/code&gt; 옵션을 추가합니다 .</target>
        </trans-unit>
        <trans-unit id="3f214efb9012dbdd4d97a46e0f21c2aca0ded755" translate="yes" xml:space="preserve">
          <source>Adds the the &lt;code&gt;--use-current-branch&lt;/code&gt; option.</source>
          <target state="translated">&lt;code&gt;--use-current-branch&lt;/code&gt; 옵션을 추가합니다 .</target>
        </trans-unit>
        <trans-unit id="2bb3a69eaea03fc56096ffd4ce6cf8c3bc3fe62a" translate="yes" xml:space="preserve">
          <source>Adds the the &lt;code&gt;--user-key&lt;/code&gt; option.</source>
          <target state="translated">&lt;code&gt;--user-key&lt;/code&gt; 옵션을 추가합니다 .</target>
        </trans-unit>
        <trans-unit id="1b9b1dc4bc1a964a3958fd6cf92be3d0fb8f9f14" translate="yes" xml:space="preserve">
          <source>Adds the the &lt;code&gt;--user&lt;/code&gt; option.</source>
          <target state="translated">&lt;code&gt;--user&lt;/code&gt; 옵션을 추가합니다 .</target>
        </trans-unit>
        <trans-unit id="0595f8830cf5ecdfedce91c942519ff12d7142b5" translate="yes" xml:space="preserve">
          <source>Adds the the &lt;code&gt;--yes&lt;/code&gt; option.</source>
          <target state="translated">&lt;code&gt;--yes&lt;/code&gt; 옵션을 추가합니다 .</target>
        </trans-unit>
        <trans-unit id="9a47dde43e3a0bf2c8ef357ee7c4102a7fd6e24a" translate="yes" xml:space="preserve">
          <source>Adds the the &lt;code&gt;-0&lt;/code&gt; option.</source>
          <target state="translated">&lt;code&gt;-0&lt;/code&gt; 옵션을 추가합니다 .</target>
        </trans-unit>
        <trans-unit id="c41fd8baecf73145f694b3fe5cb3f0919ef4a82e" translate="yes" xml:space="preserve">
          <source>Adds the the &lt;code&gt;-R&lt;/code&gt; option.</source>
          <target state="translated">&lt;code&gt;-R&lt;/code&gt; 옵션을 추가합니다 .</target>
        </trans-unit>
        <trans-unit id="a9884a5d348ef58cf82a3d787fbff5e3239a02dd" translate="yes" xml:space="preserve">
          <source>Adds the the &lt;code&gt;-d&lt;/code&gt; option.</source>
          <target state="translated">&lt;code&gt;-d&lt;/code&gt; 옵션을 추가합니다 .</target>
        </trans-unit>
        <trans-unit id="45b07846a6e8709f2fb8b002fa30dce9705fca56" translate="yes" xml:space="preserve">
          <source>Adds the the &lt;code&gt;-t&lt;/code&gt; option.</source>
          <target state="translated">&lt;code&gt;-t&lt;/code&gt; 옵션을 추가합니다 .</target>
        </trans-unit>
        <trans-unit id="bd38eb9e7bd273fa4b9e5e7387fbdeaa43febb89" translate="yes" xml:space="preserve">
          <source>Adjust your branch to track the &lt;code&gt;chef/master&lt;/code&gt; remote branch:</source>
          <target state="translated">&lt;code&gt;chef/master&lt;/code&gt; 원격 지점 을 추적하도록 지점을 조정하십시오 .</target>
        </trans-unit>
        <trans-unit id="4e7afebcfbae000b22c7c85e5560f89a2a0280b4" translate="yes" xml:space="preserve">
          <source>Admin</source>
          <target state="translated">Admin</target>
        </trans-unit>
        <trans-unit id="4d064726954a17487f94e931f5b157b733ec22ed" translate="yes" xml:space="preserve">
          <source>Advanced</source>
          <target state="translated">Advanced</target>
        </trans-unit>
        <trans-unit id="9e0f66feb483cbae43029d15af140c768f68d1dc" translate="yes" xml:space="preserve">
          <source>Advanced Debugging</source>
          <target state="translated">고급 디버깅</target>
        </trans-unit>
        <trans-unit id="62afb6ca172daf3f8564f5534171c411ab843e39" translate="yes" xml:space="preserve">
          <source>After a few minutes, the Chef server will be installed.</source>
          <target state="translated">몇 분 후 Chef 서버가 설치됩니다.</target>
        </trans-unit>
        <trans-unit id="98593162edbb16b3c06f8efe661c116fda9cafe4" translate="yes" xml:space="preserve">
          <source>After a few minutes, the Chef server will be installed. The Chef high availability package is &lt;strong&gt;not&lt;/strong&gt; required on front end machines.</source>
          <target state="translated">몇 분 후 Chef 서버가 설치됩니다. 프런트 엔드 시스템 에는 Chef 고 가용성 패키지가 필요 &lt;strong&gt;하지 않습니다&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="29c62c90e28dbe97841e77cb085ce9b593a27616" translate="yes" xml:space="preserve">
          <source>After a successful failover, restart Keepalived on the primary backend server:</source>
          <target state="translated">장애 조치에 성공한 후 기본 백엔드 서버에서 Keepalived를 다시 시작하십시오.</target>
        </trans-unit>
        <trans-unit id="fd8e1aa1ddd30b58afc354b38d55531385aa974c" translate="yes" xml:space="preserve">
          <source>After backing up the Chef server data, make a note of the current size of the &lt;code&gt;/dev/opscode/drbd&lt;/code&gt; logical volume and mountpoint. Run the following commands:</source>
          <target state="translated">Chef 서버 데이터를 백업 한 후 &lt;code&gt;/dev/opscode/drbd&lt;/code&gt; 논리 볼륨 및 마운트 포인트 의 현재 크기를 기록하십시오 . 다음 명령을 실행하십시오.</target>
        </trans-unit>
        <trans-unit id="86d7fa53f1d1702f204ee078ae79081c1d824c08" translate="yes" xml:space="preserve">
          <source>After it has run, the run status data can be loaded and inspected via Interactive Ruby (IRb):</source>
          <target state="translated">실행 된 후 IRb (Interactive Ruby)를 통해 실행 상태 데이터를로드하고 검사 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3d1578d3084b593a203c22d52cba7864a71dd2c6" translate="yes" xml:space="preserve">
          <source>After saving this shell script to a file named &lt;code&gt;chef_api_request&lt;/code&gt;, use it similar to the following:</source>
          <target state="translated">이 쉘 스크립트를 &lt;code&gt;chef_api_request&lt;/code&gt; 파일에 저장 한 후 다음과 유사하게 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="055a09233d8192ba6d84549bc668f7da568dcafe" translate="yes" xml:space="preserve">
          <source>After the .chef directory has been created, the following folder structure will be present on the local machine:</source>
          <target state="translated">.chef 디렉토리가 생성되면 로컬 폴더에 다음과 같은 폴더 구조가 나타납니다.</target>
        </trans-unit>
        <trans-unit id="f7519a2524873b1b35618c073340fa853e8fe320" translate="yes" xml:space="preserve">
          <source>After the bootstrap operation has finished, verify that the node is recognized by the Chef server. To show only the node that was just bootstrapped, run the following command:</source>
          <target state="translated">부트 스트랩 조작이 완료된 후 Chef 서버가 노드를 인식하는지 확인하십시오. 방금 부트 스트랩 된 노드 만 표시하려면 다음 명령을 실행하십시오.</target>
        </trans-unit>
        <trans-unit id="a605a3d78b22feb24d8440f0d0db232212fdd00d" translate="yes" xml:space="preserve">
          <source>After the chef-client is configured to run as a service, the default file path is: &lt;code&gt;c:\chef\chef-client.log&lt;/code&gt;.</source>
          <target state="translated">chef-client가 서비스로 실행되도록 구성된 후 기본 파일 경로는 &lt;code&gt;c:\chef\chef-client.log&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="b000f6dd901ccd8e8b7e93530d02a69c9a011fb7" translate="yes" xml:space="preserve">
          <source>After the cron job has run successfully, the &lt;code&gt;mount&lt;/code&gt; command will show the new logical volume mounted on the &lt;code&gt;/var/opt/opscode/drbd-backups&lt;/code&gt; mount point. The backup script will create a snapshot logical volume in unused space in the &lt;code&gt;/opscode&lt;/code&gt; volume group. After the snapshot is created, the backup script will attempt to mount the snapshot logical volume, after which the snapshot will stay mounted for 24 hours. Upon the next cron job run, the backup script will attempt to unmount, destroy the snapshot, and then repeat the sequence.</source>
          <target state="translated">cron 작업이 성공적으로 실행 된 후 &lt;code&gt;mount&lt;/code&gt; 명령은 &lt;code&gt;/var/opt/opscode/drbd-backups&lt;/code&gt; 마운트 지점에 마운트 된 새 논리 볼륨을 표시합니다 . 백업 스크립트는 &lt;code&gt;/opscode&lt;/code&gt; 볼륨 그룹 의 사용되지 않은 공간에 스냅 샷 논리 볼륨을 생성합니다 . 스냅 샷이 생성 된 후 백업 스크립트는 스냅 샷 논리 볼륨을 마운트하려고 시도한 후 스냅 샷이 24 시간 동안 마운트 된 상태로 유지됩니다. 다음 cron 작업 실행시 백업 스크립트는 마운트 해제, 스냅 샷 삭제 및 순서 반복을 시도합니다.</target>
        </trans-unit>
        <trans-unit id="6379edd41dfe4c738c2f95e494cb3dcf1b39527c" translate="yes" xml:space="preserve">
          <source>After the custom namespace is created, it could then be used in a recipe, like this:</source>
          <target state="translated">사용자 정의 네임 스페이스가 작성된 후 다음과 같이 레시피에서 사용될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9b2eb162b848da4c937a3260ce952f153d950b7c" translate="yes" xml:space="preserve">
          <source>After the initial chef-client run has completed successfully, the chef-validator is no longer required and may be deleted from the node. Use the &lt;code&gt;delete_validation&lt;/code&gt; recipe found in the &lt;code&gt;chef-client&lt;/code&gt; cookbook (&lt;a href=&quot;https://github.com/chef-cookbooks/chef-client&quot;&gt;https://github.com/chef-cookbooks/chef-client&lt;/a&gt;) to remove the chef-validator.</source>
          <target state="translated">초기 Chef-Client 실행이 성공적으로 완료되면 Chef-validator가 더 이상 필요하지 않으며 노드에서 삭제 될 수 있습니다. &lt;code&gt;chef-client&lt;/code&gt; 요리 책 ( &lt;a href=&quot;https://github.com/chef-cookbooks/chef-client&quot;&gt;https://github.com/chef-cookbooks/chef-client&lt;/a&gt; )에 있는 &lt;code&gt;delete_validation&lt;/code&gt; 레시피를 사용하여 chef-validator를 제거하십시오.</target>
        </trans-unit>
        <trans-unit id="c92ddd104ee090eb813f06f0d5a22dc04a731db4" translate="yes" xml:space="preserve">
          <source>After the node object is rebuilt, all of the attributes are compared, and then the node is updated based on attribute precedence. At the end of every chef-client run, the node object that defines the current state of the node is uploaded to the Chef server so that it can be indexed for search.</source>
          <target state="translated">노드 오브젝트가 재 빌드 된 후 모든 속성이 비교 된 후 속성 우선 순위에 따라 노드가 업데이트됩니다. 모든 chef-client 실행이 끝날 때 노드의 현재 상태를 정의하는 노드 오브젝트가 Chef 서버에 업로드되어 검색을 위해 색인화 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="adb3558c3613ee96dab4e5b7f624f0d8002c9aec" translate="yes" xml:space="preserve">
          <source>After the recipes that are to be debugged have been loaded, use the &lt;code&gt;run_chef&lt;/code&gt; command to run them.</source>
          <target state="translated">디버깅 할 레시피가로드 된 후 &lt;code&gt;run_chef&lt;/code&gt; 명령을 사용하여 레시피 를 실행하십시오.</target>
        </trans-unit>
        <trans-unit id="0ab2f4f46530cd0e46505aee83be3c26b39460fa" translate="yes" xml:space="preserve">
          <source>After the upgrade process is complete and everything is tested and verified to be working properly, clean up the server by removing all of the old data:</source>
          <target state="translated">업그레이드 프로세스가 완료되고 모든 것이 올바르게 작동하는지 테스트 및 검증 한 후 이전 데이터를 모두 제거하여 서버를 정리하십시오.</target>
        </trans-unit>
        <trans-unit id="52f645d0bdf52dca05bf9209d737fc4ffbea2742" translate="yes" xml:space="preserve">
          <source>After the upgrade process is complete, the state of the system after the upgrade has been tested and verified, and everything looks satisfactory, remove old data, services, and configuration by running the following command on each server:</source>
          <target state="translated">업그레이드 프로세스가 완료되면 업그레이드 후 시스템 상태가 테스트 및 검증되었으며 모든 것이 만족스럽게 보이며 각 서버에서 다음 명령을 실행하여 이전 데이터, 서비스 및 구성을 제거하십시오.</target>
        </trans-unit>
        <trans-unit id="0574ac57f84550a44efa4aa5880b382819970aea" translate="yes" xml:space="preserve">
          <source>After the user accepts the invitation, they will be a member of this organization.</source>
          <target state="translated">사용자가 초대를 수락하면이 조직의 구성원이됩니다.</target>
        </trans-unit>
        <trans-unit id="d04a4077b509ba27db331eca09102197a19d7215" translate="yes" xml:space="preserve">
          <source>After the workstation has the correct SSL certificate, bootstrap operations from that workstation will use the certificate in the &lt;code&gt;/.chef/trusted_certs&lt;/code&gt; directory during the bootstrap operation.</source>
          <target state="translated">워크 스테이션에 올바른 SSL 인증서가 있으면 해당 워크 스테이션 의 부트 스트랩 작업은 부트 스트랩 작업 중 &lt;code&gt;/.chef/trusted_certs&lt;/code&gt; 디렉토리 의 인증서를 사용합니다 .</target>
        </trans-unit>
        <trans-unit id="e4bb1c3f1a61439404befb187dbc3a14a384d553" translate="yes" xml:space="preserve">
          <source>After upgrading the Chef server, run the following command on all front and back end servers:</source>
          <target state="translated">Chef 서버를 업그레이드 한 후 모든 프런트 엔드 서버와 백 엔드 서버에서 다음 명령을 실행하십시오.</target>
        </trans-unit>
        <trans-unit id="0b7d2b342c7a86f60e16ebb658f09ea5d026439d" translate="yes" xml:space="preserve">
          <source>After upgrading the Chef server, upgrade each of the front end servers. For Red Hat and CentOS 6:</source>
          <target state="translated">Chef 서버를 업그레이드 한 후 각 프런트 엔드 서버를 업그레이드하십시오. Red Hat 및 CentOS 6의 경우 :</target>
        </trans-unit>
        <trans-unit id="d793a49ca4dce63e1c7f04f015fe50cb8a5c0bdf" translate="yes" xml:space="preserve">
          <source>After work has been merged by the branch maintainer, the topic branch is no longer necessary and should be removed.</source>
          <target state="translated">지점 관리자가 작업을 병합 한 후에는 주제 지점이 더 이상 필요하지 않으므로 제거해야합니다.</target>
        </trans-unit>
        <trans-unit id="6b70f6a2f398057c4307525d7fc0b626e0bfd467" translate="yes" xml:space="preserve">
          <source>Aggregating statistics about resources updated during a chef-client runs to StatsD</source>
          <target state="translated">요리사 클라이언트가 StatsD를 실행하는 동안 업데이트 된 리소스에 대한 통계 집계</target>
        </trans-unit>
        <trans-unit id="600e6aea12fb075fde5661fe08007bcda45489d9" translate="yes" xml:space="preserve">
          <source>Airbrake</source>
          <target state="translated">Airbrake</target>
        </trans-unit>
        <trans-unit id="19231b0e210f59a1e91b94e1c88bad4f579eb715" translate="yes" xml:space="preserve">
          <source>Alice can now create, read, update, and delete user accounts on the Chef server, even for organizations to which Alice is not a member. From a workstation, Alice re-runs the following command:</source>
          <target state="translated">Alice는 이제 Alice가 구성원이 아닌 조직의 경우에도 Chef 서버에서 사용자 계정을 작성, 읽기, 업데이트 및 삭제할 수 있습니다. Alice는 워크 스테이션에서 다음 명령을 다시 실행합니다.</target>
        </trans-unit>
        <trans-unit id="51cb239868b5d884fddf03aefc9b824d984d5f7f" translate="yes" xml:space="preserve">
          <source>Alice is a member of the IT team whose responsibilities include day-to-day administration of the Chef server, in particular managing the user accounts on the Chef server that are used by the rest of the organization. From a workstation, Alice runs the following command:</source>
          <target state="translated">Alice는 Chef 서버의 일상적인 관리, 특히 조직의 나머지 부서에서 사용하는 Chef 서버의 사용자 계정 관리를 담당하는 IT 팀의 구성원입니다. Alice는 워크 스테이션에서 다음 명령을 실행합니다.</target>
        </trans-unit>
        <trans-unit id="4a8a439b29c256d4fe4d912def6118f1b4a1e73d" translate="yes" xml:space="preserve">
          <source>Alice is not a superuser and does not have permissions on other users because user accounts are global to organizations in the Chef server. Let&amp;rsquo;s add Alice to the &lt;code&gt;server-admins&lt;/code&gt; group:</source>
          <target state="translated">Alice는 수퍼 유저가 아니며 사용자 계정이 Chef 서버의 조직에 대해 글로벌이기 때문에 다른 사용자에 대한 권한이 없습니다. &lt;code&gt;server-admins&lt;/code&gt; 그룹 에 Alice를 추가해 봅시다 :</target>
        </trans-unit>
        <trans-unit id="6f9caf3645bced106dcfa2cc4ce67fd8eaddcb7d" translate="yes" xml:space="preserve">
          <source>Alice is now a server administrator and can use the following knife subcommands to manage users on the Chef server:</source>
          <target state="translated">Alice는 이제 서버 관리자이며 다음 knife 하위 명령을 사용하여 Chef 서버에서 사용자를 관리 할 수 ​​있습니다.</target>
        </trans-unit>
        <trans-unit id="bb85716c1454e3578c9d460fe55fe002f0abd71e" translate="yes" xml:space="preserve">
          <source>Alice&amp;rsquo;s action is unauthorized even with membership in the &lt;code&gt;server-admins&lt;/code&gt; group.</source>
          <target state="translated">Alice의 작업은 &lt;code&gt;server-admins&lt;/code&gt; 그룹의 멤버 자격이 있어도 권한이 없습니다 .</target>
        </trans-unit>
        <trans-unit id="580de3f983a703805b30c98d8050aee1e2586668" translate="yes" xml:space="preserve">
          <source>All actions for the resource are complete.</source>
          <target state="translated">자원에 대한 모든 조치가 완료되었습니다.</target>
        </trans-unit>
        <trans-unit id="7c611971871bcfbfd83db9da16be41b18a708f5a" translate="yes" xml:space="preserve">
          <source>All actions have a default value. Only non-default behaviors of actions and properties need to be specified. For example, the &lt;strong&gt;package&lt;/strong&gt; resource&amp;rsquo;s default action is &lt;code&gt;:install&lt;/code&gt; and the name of the package defaults to the &lt;code&gt;name&lt;/code&gt; of the resource. Therefore, it is possible to write a resource block that installs the latest tar.gz package like this:</source>
          <target state="translated">모든 작업에는 기본값이 있습니다. 기본이 아닌 동작 및 속성 동작 만 지정하면됩니다. 예를 들어, &lt;strong&gt;패키지&lt;/strong&gt; 리소스의 기본 작업은 &lt;code&gt;:install&lt;/code&gt; 이고 패키지 이름은 기본적으로 리소스 &lt;code&gt;name&lt;/code&gt; 입니다. 따라서 다음과 같이 최신 tar.gz 패키지를 설치하는 리소스 블록을 작성할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2b4858624a59177162359a19005f2fa39ff64473" translate="yes" xml:space="preserve">
          <source>All attribute precedence levels may be removed by using the following syntax pattern:</source>
          <target state="translated">다음과 같은 구문 패턴을 사용하여 모든 속성 우선 순위 레벨을 제거 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="67ec89df11a2f291f5d1ac2b8df18b73c4f7f079" translate="yes" xml:space="preserve">
          <source>All attributes in the rebuilt node object are reset. All attributes from attribute files, environments, roles, and Ohai are loaded. Attributes that are defined in attribute files are first loaded according to cookbook order. For each cookbook, attributes in the &lt;code&gt;default.rb&lt;/code&gt; file are loaded first, and then additional attribute files (if present) are loaded in lexical sort order. All attributes in the rebuilt node object are updated with the attribute data according to attribute precedence. When all of the attributes are updated, the rebuilt node object is complete.</source>
          <target state="translated">재 빌드 된 노드 오브젝트의 모든 속성이 재설정됩니다. 속성 파일, 환경, 역할 및 Ohai의 모든 속성이로드됩니다. 속성 파일에 정의 된 속성은 먼저 요리 책 순서에 따라로드됩니다. 각 요리 책에 대해 &lt;code&gt;default.rb&lt;/code&gt; 파일의 속성 이 먼저로드 된 다음 추가 속성 파일 (있는 경우)이 어휘 정렬 순서로로드됩니다. 재 빌드 된 노드 오브젝트의 모든 속성은 속성 우선 순위에 따라 속성 데이터로 업데이트됩니다. 모든 속성이 업데이트되면 재 빌드 된 노드 오브젝트가 완료됩니다.</target>
        </trans-unit>
        <trans-unit id="ef81881c33eb258a7d6c1f31ffc3e03ff6dcc103" translate="yes" xml:space="preserve">
          <source>All communication with the Chef server must be authenticated using the Chef server API, which is a REST API that allows requests to be made to the Chef server. Only authenticated requests will be authorized. Most of the time, and especially when using knife, the chef-client, or the Chef server web interface, the use of the Chef server API is transparent. In some cases, the use of the Chef server API requires more detail, such as when making the request in Ruby code, with a knife plugin, or when using cURL.</source>
          <target state="translated">Chef 서버와의 모든 통신은 Chef 서버 API를 사용하여 인증되어야합니다. Chef 서버 API는 Chef 서버에 대한 요청을 허용하는 REST API입니다. 인증 된 요청 만 승인됩니다. 대부분의 경우, 특히 knife, chef-client 또는 Chef 서버 웹 인터페이스를 사용할 때 Chef 서버 API 사용은 투명합니다. 일부 경우 Chef 서버 API를 사용하려면 Ruby 코드로 요청하거나 나이프 플러그인을 사용하거나 cURL을 사용할 때와 같이 더 자세한 정보가 필요합니다.</target>
        </trans-unit>
        <trans-unit id="a2d33f86090637f07a9c1ad38486cc6bec2cedf4" translate="yes" xml:space="preserve">
          <source>All communications are OK.</source>
          <target state="translated">모든 통신은 정상입니다.</target>
        </trans-unit>
        <trans-unit id="d6f3a381cabbce650271345bea6d90f9c41378b4" translate="yes" xml:space="preserve">
          <source>All components of computer systems fail, and ethernet networks, while being generally very robust, are no exception. A high availability configuration of the Chef server that uses DRBD depends on a functioning network to begin and maintain replication between the back end servers on which the Chef server is running.</source>
          <target state="translated">컴퓨터 시스템의 모든 구성 요소가 고장 나고 이더넷 네트워크는 일반적으로 매우 강력하지만 예외는 아닙니다. DRBD를 사용하는 Chef 서버의 고 가용성 구성은 작동하는 네트워크에 따라 Chef 서버가 실행중인 백엔드 서버 간의 복제를 시작하고 유지 보수합니다.</target>
        </trans-unit>
        <trans-unit id="8b9a256020f6783dbdedb5a03cf5deac6df51b98" translate="yes" xml:space="preserve">
          <source>All cookbooks are stored in a dedicated repository.</source>
          <target state="translated">모든 요리 책은 전용 저장소에 저장됩니다.</target>
        </trans-unit>
        <trans-unit id="d9085c3cbfd3c55abcd145f955c62ea4623b856f" translate="yes" xml:space="preserve">
          <source>All cookbooks should pass Foodcritic rules before being uploaded.</source>
          <target state="translated">모든 요리 책은 업로드하기 전에 Foodcritic 규칙을 통과해야합니다.</target>
        </trans-unit>
        <trans-unit id="d00ce8681f8f8ced3db0caa1e3657f3d9b5cb616" translate="yes" xml:space="preserve">
          <source>All existing versions of a cookbook are removed from the branch.</source>
          <target state="translated">기존의 모든 요리 책 버전이 분기에서 제거됩니다.</target>
        </trans-unit>
        <trans-unit id="21dca9dbcd136ab0c08cbedc185b3d878d35b1e2" translate="yes" xml:space="preserve">
          <source>All files in a cookbook must contain valid Ruby syntax. Use this setting to specify the location in which knife caches information about files that have been checked for valid Ruby syntax.</source>
          <target state="translated">쿡북의 모든 파일은 유효한 Ruby 구문을 포함해야합니다. 이 설정을 사용하여 나이프가 유효한 Ruby 구문을 확인한 파일에 대한 정보를 캐시하는 위치를 지정하십시오.</target>
        </trans-unit>
        <trans-unit id="3f26d95e078c7cb81da6b157988f9f4972292691" translate="yes" xml:space="preserve">
          <source>All hashing is done using SHA-1 and encoded in Base64. Base64 encoding should have line breaks every 60 characters. Each canonical header should be encoded in the following format:</source>
          <target state="translated">모든 해싱은 SHA-1을 사용하여 수행되며 Base64로 인코딩됩니다. Base64 인코딩은 60 자마다 줄 바꿈이 있어야합니다. 각 표준 헤더는 다음 형식으로 인코딩해야합니다.</target>
        </trans-unit>
        <trans-unit id="7e4423e3cd39ba11221674529645c2151389a762" translate="yes" xml:space="preserve">
          <source>All knife subcommands have the following syntax:</source>
          <target state="translated">모든 knife 부속 명령에는 다음 구문이 있습니다.</target>
        </trans-unit>
        <trans-unit id="b09f3ca8b19b5a83aba45d94358208d53f46130d" translate="yes" xml:space="preserve">
          <source>All logs generated by the Chef server can be found in &lt;code&gt;/var/log/opscode&lt;/code&gt;. Each service enabled on the system also has a sub-directory in which service-specific logs are located, typically found in &lt;code&gt;/var/log/opscode/service_name&lt;/code&gt;.</source>
          <target state="translated">Chef 서버가 생성 한 모든 로그는 &lt;code&gt;/var/log/opscode&lt;/code&gt; 에서 찾을 수 있습니다 . 시스템에서 사용 가능한 각 서비스에는 일반적으로 &lt;code&gt;/var/log/opscode/service_name&lt;/code&gt; 에있는 서비스 별 로그가있는 하위 디렉토리도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="30bb6469b1b1faa83c610324c5c76a613fc01372" translate="yes" xml:space="preserve">
          <source>All messages are added to a dedicated search index repository.</source>
          <target state="translated">모든 메시지는 전용 검색 색인 저장소에 추가됩니다.</target>
        </trans-unit>
        <trans-unit id="a59e89e98ebec70839363369574ab12d4031a5d3" translate="yes" xml:space="preserve">
          <source>All of the file types that are part of any cookbook uploaded to the Chef server are visible from the Chef management console.</source>
          <target state="translated">Chef 서버에 업로드 된 요리 책의 일부인 모든 파일 형식은 Chef 관리 콘솔에서 볼 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a56147f5beb0546f004c637d5bea1ae1954bec14" translate="yes" xml:space="preserve">
          <source>All of the following settings should be specified without using the equals symbol (&lt;code&gt;=&lt;/code&gt;). For example:</source>
          <target state="translated">등호 ( &lt;code&gt;=&lt;/code&gt; )를 사용하지 않고 다음 설정을 모두 지정해야합니다 . 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="3e2a368bfe4bc6ad5440dbd0fe83f368df0cf3de" translate="yes" xml:space="preserve">
          <source>All of the ports used by the Chef server are TCP ports. Refer to the operating system&amp;rsquo;s manual or site systems administrators for instructions on how to enable changes to ports, if necessary.</source>
          <target state="translated">Chef 서버가 사용하는 모든 포트는 TCP 포트입니다. 필요한 경우 포트 변경을 활성화하는 방법에 대한 지침은 운영 체제 설명서 또는 사이트 시스템 관리자를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="afbad4ada004e036a9b788d66dc74c24c63bf72c" translate="yes" xml:space="preserve">
          <source>All options for this subcommand must follow all arguments.</source>
          <target state="translated">이 부속 명령의 모든 옵션은 모든 인수를 따라야합니다.</target>
        </trans-unit>
        <trans-unit id="8b55506af2d59ebe199f1768364928eb2bfc5a3e" translate="yes" xml:space="preserve">
          <source>All required ports must be open. See the Firewalls section (below) for the list of ports. All connections to and from the Chef server are accomplished via TCP. Refer to the operating system&amp;rsquo;s manual or your systems administrators for instructions on how to configure to ports, if necessary.</source>
          <target state="translated">필요한 모든 포트가 열려 있어야합니다. 포트 목록은 방화벽 섹션 (아래)을 참조하십시오. Chef 서버와의 모든 연결은 TCP를 통해 수행됩니다. 필요한 경우 포트 구성 방법에 대한 지침은 운영 체제 설명서 또는 시스템 관리자를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="4ed083dd7adc405aa55d14b2827c4e9caf882faf" translate="yes" xml:space="preserve">
          <source>All resources (including custom resources) share a set of common actions, properties, conditional executions, notifications, and relative path options.</source>
          <target state="translated">사용자 지정 리소스를 포함한 모든 리소스는 일련의 공통 작업, 속성, 조건부 실행, 알림 및 상대 경로 옵션을 공유합니다.</target>
        </trans-unit>
        <trans-unit id="49462f970e1751a88a58a9759cfab07c2102f0d9" translate="yes" xml:space="preserve">
          <source>All resources share a set of common actions, attributes, and so on. Use the following attribute in a resource to help identify where an issue within a recipe may be located:</source>
          <target state="translated">모든 자원은 일련의 공통 조치, 속성 등을 공유합니다. 자원에서 다음 속성을 사용하여 레시피 내 문제가있는 위치를 식별하십시오.</target>
        </trans-unit>
        <trans-unit id="7aabfb2b804df11b1832e17d7bac10fa76265c7d" translate="yes" xml:space="preserve">
          <source>All services must be listening on the appropriate ports. Most monitoring systems provide a means of testing whether a given port is accepting connections and service-specific tools may also be available. In addition, the generic system tool Telnet can also be used to initiate the connection:</source>
          <target state="translated">모든 서비스는 적절한 포트에서 수신 대기해야합니다. 대부분의 모니터링 시스템은 주어진 포트가 연결을 수락하는지 여부를 테스트하는 수단을 제공하며 서비스 별 도구도 제공 될 수 있습니다. 또한 일반 시스템 도구 Telnet을 사용하여 연결을 시작할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="88a0dbab176c34edd17365d10721a238942bbbd7" translate="yes" xml:space="preserve">
          <source>All syntax examples in this document show variables in ALL_CAPS. For example &lt;code&gt;-u PORT_LIST&lt;/code&gt; (where PORT_LIST is a comma-separated list of local and public UDP ports) or &lt;code&gt;-F FORMAT&lt;/code&gt; (where FORMAT determines the output format, either &lt;code&gt;summary&lt;/code&gt;, &lt;code&gt;text&lt;/code&gt;, &lt;code&gt;json&lt;/code&gt;, &lt;code&gt;yaml&lt;/code&gt;, or &lt;code&gt;pp&lt;/code&gt;). These variables often require specific values that are unique to each organization.</source>
          <target state="translated">이 문서의 모든 구문 예제는 ALL_CAPS의 변수를 보여줍니다. 예를 들어, &lt;code&gt;-u PORT_LIST&lt;/code&gt; (여기서 PORT_LIST는 쉼표로 구분 된 로컬 및 공용 UDP 포트 목록) 또는 &lt;code&gt;-F FORMAT&lt;/code&gt; (여기서 FORMAT은 출력 형식 ( &lt;code&gt;summary&lt;/code&gt; , &lt;code&gt;text&lt;/code&gt; , &lt;code&gt;json&lt;/code&gt; , &lt;code&gt;yaml&lt;/code&gt; 또는 &lt;code&gt;pp&lt;/code&gt; )을 결정)입니다. 이러한 변수에는 종종 각 조직마다 고유 한 특정 값이 필요합니다.</target>
        </trans-unit>
        <trans-unit id="567c38d6f3ebec06f98087493dd049dcbeec36c7" translate="yes" xml:space="preserve">
          <source>Allocate 2MB of disk space on the data partition per managed node</source>
          <target state="translated">관리 노드 당 데이터 파티션에 2MB의 디스크 공간 할당</target>
        </trans-unit>
        <trans-unit id="969b373dff2284d01e414f9ce272852e995f1721" translate="yes" xml:space="preserve">
          <source>Allow &lt;code&gt;gid&lt;/code&gt; duplication. May only be used with the &lt;code&gt;Groupadd&lt;/code&gt; provider. Default value: &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;gid&lt;/code&gt; 복제를 허용 &lt;code&gt;Groupadd&lt;/code&gt; 제공자 와 만 사용할 수 있습니다 . 기본 값 : &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2c61461cda3eea6193d55f5221e43c4cd69c0cd9" translate="yes" xml:space="preserve">
          <source>Allow a resource to execute only if the condition returns &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">조건이 &lt;code&gt;true&lt;/code&gt; 를 반환하는 경우에만 리소스가 실행되도록 허용하십시오 .</target>
        </trans-unit>
        <trans-unit id="63aa699c2def4438ee6b9da78aa90c7ac848fe89" translate="yes" xml:space="preserve">
          <source>Allow port 80 redirects to port 443. When this value is set to &lt;code&gt;true&lt;/code&gt;, load balancers on the front-end hardware are allowed to do SSL termination of the WebUI and API. Default value: &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">포트 80이 포트 443으로 리디렉션되도록 허용합니다.이 값이 &lt;code&gt;true&lt;/code&gt; 로 설정 되면 프론트 엔드 하드웨어의로드 밸런서는 WebUI 및 API의 SSL 종료를 수행 할 수 있습니다. 기본 값 : &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7f340e398b653826192424cc40e970ac28d285b3" translate="yes" xml:space="preserve">
          <source>Allows OpenSSL to enforce FIPS-validated security during the chef-client run.</source>
          <target state="translated">chefSSL 클라이언트 실행 중에 OpenSSL이 FIPS 검증 보안을 시행 할 수 있도록합니다.</target>
        </trans-unit>
        <trans-unit id="4146fa306a18634e7c7d86af9c81eaea59ef9ead" translate="yes" xml:space="preserve">
          <source>Allows OpenSSL to enforce FIPS-validated security during the chef-client run. Set to &lt;code&gt;true&lt;/code&gt; to enable FIPS-validated security.</source>
          <target state="translated">chefSSL 클라이언트 실행 중에 OpenSSL이 FIPS 유효성 검증 된 보안을 시행 할 수 있도록합니다. FIPS 검증 보안을 사용 하려면 &lt;code&gt;true&lt;/code&gt; 로 설정하십시오 .</target>
        </trans-unit>
        <trans-unit id="0d0223c3f3274398a55ed8725b06675a40efd8ef" translate="yes" xml:space="preserve">
          <source>Also note that:</source>
          <target state="translated">또한 다음을 참고하십시오.</target>
        </trans-unit>
        <trans-unit id="d8b76fdcd9fa06f74fdf351264bd4527b227d3f6" translate="yes" xml:space="preserve">
          <source>Alternatively, an example bootstrap template can be found in the git source for the chef-repo: &lt;a href=&quot;https://github.com/chef/chef/tree/master/lib/chef/knife/bootstrap&quot;&gt;https://github.com/chef/chef/tree/master/lib/chef/knife/bootstrap&lt;/a&gt;. Copy the template to &lt;code&gt;~/.chef-repo/.chef/bootstrap/ubuntu14.04-apt.erb&lt;/code&gt; and modify the template appropriately.</source>
          <target state="translated">또는 부트 스트랩 템플릿 예는 chef-repo의 git 소스 ( &lt;a href=&quot;https://github.com/chef/chef/tree/master/lib/chef/knife/bootstrap&quot;&gt;https://github.com/chef/chef/tree/master/lib/chef/knife/bootstrap)&lt;/a&gt; 에서 찾을 수 있습니다 . 템플릿을 &lt;code&gt;~/.chef-repo/.chef/bootstrap/ubuntu14.04-apt.erb&lt;/code&gt; 에 복사 하고 템플릿을 적절히 수정하십시오.</target>
        </trans-unit>
        <trans-unit id="ae380e23cb845ec5799eb55eaf67b0619e171fb5" translate="yes" xml:space="preserve">
          <source>Although not strictly a Chef style thing, please always ensure your &lt;code&gt;user.name&lt;/code&gt; and &lt;code&gt;user.email&lt;/code&gt; are set properly in your &lt;code&gt;.gitconfig&lt;/code&gt; file.</source>
          <target state="translated">Chef 스타일의 것은 아니지만 &lt;code&gt;.gitconfig&lt;/code&gt; 파일 에 &lt;code&gt;user.name&lt;/code&gt; 및 &lt;code&gt;user.email&lt;/code&gt; 이 올바르게 설정되어 있는지 확인 하십시오.</target>
        </trans-unit>
        <trans-unit id="3ae6cdc0368b8489cfc1bfc2e75f8fb6148cba82" translate="yes" xml:space="preserve">
          <source>Always specific to the node on which it runs; nodes may have a run-list that is identical to the run-list used by other nodes</source>
          <target state="translated">항상 실행되는 노드에 따라 다릅니다. 노드는 다른 노드가 사용하는 실행 목록과 동일한 실행 목록을 가질 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="128eb6fdbed09d85c6d19de454e31d031e29d3b8" translate="yes" xml:space="preserve">
          <source>Always specify the file mode with a quoted 3-5 character string that defines the octal mode:</source>
          <target state="translated">8 진수 모드를 정의하는 인용 된 3-5 자 문자열로 항상 파일 모드를 지정하십시오.</target>
        </trans-unit>
        <trans-unit id="72d8b9b5950691260ef6e678d401a2c03545bc4c" translate="yes" xml:space="preserve">
          <source>Always the same value as the &lt;code&gt;name&lt;/code&gt; of the resource block. See &amp;ldquo;Syntax&amp;rdquo; section above for more information.</source>
          <target state="translated">항상 리소스 블록 의 &lt;code&gt;name&lt;/code&gt; 과 같은 값 입니다. 자세한 내용은 위의 &quot;구문&quot;섹션을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="8f43f367bc85df7561de301734f6581fb4459052" translate="yes" xml:space="preserve">
          <source>Always update CHANGELOG.md with any changes, with the JIRA ticket and a brief description.</source>
          <target state="translated">JIRA 티켓과 간단한 설명으로 변경 사항이 있으면 항상 CHANGELOG.md를 업데이트하십시오.</target>
        </trans-unit>
        <trans-unit id="0cdbaa9ed7222bf0b48521a42e3238f2c2891ba1" translate="yes" xml:space="preserve">
          <source>Always use &lt;code&gt;mixlib-shellout&lt;/code&gt; to shell out. Never use backticks, Process.spawn, popen4, or anything else!</source>
          <target state="translated">쉘을 &lt;code&gt;mixlib-shellout&lt;/code&gt; 려면 항상 mixlib-shellout 을 사용 하십시오 . 백틱, Process.spawn, popen4 또는 다른 어떤 것도 사용하지 마십시오!</target>
        </trans-unit>
        <trans-unit id="d226b0a55b64c69d2aed678bd7731639c3d0a250" translate="yes" xml:space="preserve">
          <source>Amazon Simple Storage Service (S3)</source>
          <target state="translated">Amazon Simple Storage Service (S3)</target>
        </trans-unit>
        <trans-unit id="00139706463dcf610818ba35d8e04631677803d3" translate="yes" xml:space="preserve">
          <source>Amazon Web Services (AWS) is a supported high availability configuration option for the Chef server.</source>
          <target state="translated">AWS (Amazon Web Services)는 Chef 서버에 지원되는 고 가용성 구성 옵션입니다.</target>
        </trans-unit>
        <trans-unit id="1e613667c4c0dba79768e276ca05dd12304961c7" translate="yes" xml:space="preserve">
          <source>An &amp;ldquo;external&amp;rdquo; port is external from the perspective of a workstation (such as knife), a machine (the chef-client), or any other user that accesses the Chef server via the Chef server API.</source>
          <target state="translated">&quot;외부&quot;포트는 워크 스테이션 (예 : 나이프), 기계 (chef-client) 또는 Chef 서버 API를 통해 Chef 서버에 액세스하는 다른 사용자의 관점에서 외부입니다.</target>
        </trans-unit>
        <trans-unit id="40c5f83d9635f56d3dff53cd949c070de4e0c56a" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;automatic&lt;/code&gt; attribute contains data that is identified by Ohai at the beginning of every chef-client run. An &lt;code&gt;automatic&lt;/code&gt; attribute cannot be modified and always has the highest attribute precedence.</source>
          <target state="translated">&lt;code&gt;automatic&lt;/code&gt; 속성은 모든 요리사 클라이언트 실행의 시작 부분에 Ohai으로 식별되는 데이터를 포함합니다. &lt;code&gt;automatic&lt;/code&gt; 속성은 수정 항상 가장 높은 속성의 우선 순위가 될 수 없다.</target>
        </trans-unit>
        <trans-unit id="41b1ef05cc883a02a96c752126fa7d8121ad5b52" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;automatic&lt;/code&gt; attribute identified by Ohai at the start of the chef-client run</source>
          <target state="translated">Chef-Client 실행 시작시 Ohai에서 식별 한 &lt;code&gt;automatic&lt;/code&gt; 속성</target>
        </trans-unit>
        <trans-unit id="3a460f86c0185552ec6071b753d0cb0f53bced1d" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;expect(something).to/.to_not be_something&lt;/code&gt; is a statement that represents the individual test. In other words, this statement tests if something is expected to be (or not be) something. For example, a test that expects the PostgreSQL pacakge to not be installed would be similar to &lt;code&gt;expect(package('postgresql')).to_not be_installed&lt;/code&gt; and a test that ensures a service is enabled would be similar to &lt;code&gt;expect(service('init')).to be_enabled&lt;/code&gt;</source>
          <target state="translated">는 &lt;code&gt;expect(something).to/.to_not be_something&lt;/code&gt; 개별 테스트를 나타내는 문입니다. 다시 말해,이 문장은 어떤 것이 무언가있을 것으로 예상되는지 테스트합니다. 예를 들어, PostgreSQL pacakge가 설치되지 않을 것으로 예상되는 테스트는 &lt;code&gt;expect(package('postgresql')).to_not be_installed&lt;/code&gt; 와 유사하며 서비스가 활성화되어 있는지 확인하는 테스트는 &lt;code&gt;expect(service('init')).to be_enabled&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="615d0632baa4d44c59d4852c596d47623609d0f4" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;if&lt;/code&gt; statement can be used to specify part of a recipe to be used when certain conditions are met. &lt;code&gt;else&lt;/code&gt; and &lt;code&gt;elseif&lt;/code&gt; statements can be used to handle situations where either the initial condition is not met or when there are other possible conditions that can be met. Since this behavior is 100% Ruby, do this in a recipe the same way here as anywhere else.</source>
          <target state="translated">&lt;code&gt;if&lt;/code&gt; 문은 특정 조건이 충족 될 때 조리법의 일부를 사용할 수 있도록 지정할 수 있습니다. &lt;code&gt;else&lt;/code&gt; 및 &lt;code&gt;elseif&lt;/code&gt; 문은 초기 조건이 충족되지 않거나 충족 될 수있는 다른 조건이있는 상황을 처리하는 데 사용될 수 있습니다. 이 행동은 100 % 루비이기 때문에 다른 곳에서와 같은 방법으로 레시피로 수행하십시오.</target>
        </trans-unit>
        <trans-unit id="bd343b30c5dc62b1958dec9afff074b2fd3f34ce" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;it&lt;/code&gt; statement may contain multiple &lt;code&gt;expect&lt;/code&gt; statements</source>
          <target state="translated">&lt;code&gt;it&lt;/code&gt; 문은 여러 포함될 수 있습니다 &lt;code&gt;expect&lt;/code&gt; 문을</target>
        </trans-unit>
        <trans-unit id="370b696207629a5f436835d8c3c23864dacb49c0" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;override&lt;/code&gt; attribute is automatically reset at the start of every chef-client run and has a higher attribute precedence than &lt;code&gt;default&lt;/code&gt;, &lt;code&gt;force_default&lt;/code&gt;, and &lt;code&gt;normal&lt;/code&gt; attributes. An &lt;code&gt;override&lt;/code&gt; attribute is most often specified in a recipe, but can be specified in an attribute file, for a role, and/or for an environment. A cookbook should be authored so that it uses &lt;code&gt;override&lt;/code&gt; attributes only when required.</source>
          <target state="translated">&lt;code&gt;override&lt;/code&gt; 속성마다 자동으로 요리사 클라이언트 실행의 시작에서 재설정하고보다 높은 속성의 우선 순위가되는 &lt;code&gt;default&lt;/code&gt; , &lt;code&gt;force_default&lt;/code&gt; 및 &lt;code&gt;normal&lt;/code&gt; 속성을. &lt;code&gt;override&lt;/code&gt; 속성은 대부분 조리법에 지정되어 있지만, 역할, 특성 파일에 지정 될 수 있으며, 및 / 또는 환경. 요리 책은 필요할 때만 &lt;code&gt;override&lt;/code&gt; 속성을 사용하도록 작성해야 합니다.</target>
        </trans-unit>
        <trans-unit id="791f31b29f20bdd5e69b342343c451ee2b45c9ec" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;override&lt;/code&gt; attribute located in a cookbook attribute file</source>
          <target state="translated">요리 책 속성 파일에 있는 &lt;code&gt;override&lt;/code&gt; 속성</target>
        </trans-unit>
        <trans-unit id="183e4fde14986019b2c98469cf83a9eed5eaa6c5" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;override&lt;/code&gt; attribute located in a recipe</source>
          <target state="translated">레시피에 있는 &lt;code&gt;override&lt;/code&gt; 속성</target>
        </trans-unit>
        <trans-unit id="f22b441dba21a82bc5196e1fb4f0904a67546267" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;override&lt;/code&gt; attribute located in a role</source>
          <target state="translated">역할에 있는 &lt;code&gt;override&lt;/code&gt; 속성</target>
        </trans-unit>
        <trans-unit id="3920cf56070ee98d2e06afc09fff4a8263eb234b" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;override&lt;/code&gt; attribute located in an environment</source>
          <target state="translated">환경에 있는 &lt;code&gt;override&lt;/code&gt; 속성</target>
        </trans-unit>
        <trans-unit id="4ea0c3f74082084ec348219f177f466ccb005192" translate="yes" xml:space="preserve">
          <source>An API client is any machine that has permission to use the Chef server API to communicate with the Chef server. An API client is typically a node (on which the chef-client runs) or a workstation (on which knife runs), but can also be any other machine configured to use the Chef server API.</source>
          <target state="translated">API 클라이언트는 Chef 서버 API를 사용하여 Chef 서버와 통신 할 수있는 권한이있는 시스템입니다. API 클라이언트는 일반적으로 노드 (chef-client가 실행하는 노드) 또는 워크 스테이션 (knife가 실행되는 워크 스테이션)이지만 Chef 서버 API를 사용하도록 구성된 다른 시스템 일 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="9834bcf39f364b330d28261d2420bf101c548f38" translate="yes" xml:space="preserve">
          <source>An API request can be made using PyChef, which is a Python library that meets the &lt;code&gt;Mixlib::Authentication&lt;/code&gt; requirements so that it can easily interact with the Chef server. The following example shows how an authenticated request can be made using the Chef server API and PyChef:</source>
          <target state="translated">PyChef를 사용하여 API 요청을 작성할 수 있습니다. &lt;code&gt;Mixlib::Authentication&lt;/code&gt; 는 Mixlib :: Authentication 요구 사항 을 충족 시켜 Chef 서버와 쉽게 상호 작용할 수 있는 Python 라이브러리입니다 . 다음 예제는 Chef 서버 API 및 PyChef를 사용하여 인증 된 요청을 작성하는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="c3fc966839a45cd16621306eb9346ea85c5926b9" translate="yes" xml:space="preserve">
          <source>An API request can be made using cURL, which is a Bash shell script that requires two utilities: awk and openssl. The following example shows how an authenticated request can be made using the Chef server API and cURL:</source>
          <target state="translated">cURL을 사용하여 API 요청을 할 수 있습니다. cURL은 awk 및 openssl의 두 가지 유틸리티가 필요한 Bash 쉘 스크립트입니다. 다음 예제는 Chef 서버 API 및 cURL을 사용하여 인증 된 요청을 작성하는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="c71274ae7bdf5f6db106c97b19a70dcd5056b75e" translate="yes" xml:space="preserve">
          <source>An Embedded Ruby (ERB) template must be added to a cookbook</source>
          <target state="translated">EB (Embedded Ruby) 템플릿을 요리 책에 추가해야합니다.</target>
        </trans-unit>
        <trans-unit id="b68e4688671c5ba17474c2452e08322da84ba898" translate="yes" xml:space="preserve">
          <source>An ISO 8601 formatted string: &lt;code&gt;YYYY-MM-DDTHH:MM:SSZ&lt;/code&gt;. For example: &lt;code&gt;2013-12-24T21:00:00Z&lt;/code&gt;. If not passed, expiration will default to infinity.</source>
          <target state="translated">는 ISO 8601 포맷 문자열 : &lt;code&gt;YYYY-MM-DDTHH:MM:SSZ&lt;/code&gt; . 예를 들어 &lt;code&gt;2013-12-24T21:00:00Z&lt;/code&gt; 입니다. 전달되지 않으면 만료는 기본적으로 무한대로 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="db55fc84a591d14518e647e7837d71b8f5fb06bc" translate="yes" xml:space="preserve">
          <source>An Ohai hint to be set on the target node.</source>
          <target state="translated">대상 노드에서 설정할 Ohai 힌트</target>
        </trans-unit>
        <trans-unit id="57c5bb8fdcff1401eb9353506a71083ef86cc1fb" translate="yes" xml:space="preserve">
          <source>An Overview of Chef</source>
          <target state="translated">요리사의 개요</target>
        </trans-unit>
        <trans-unit id="5d343b4403d0387bbdd7da5d1c97fd02677bf3be" translate="yes" xml:space="preserve">
          <source>An RSA private key is generated automatically. This is the chef-validator key and should be saved to a safe location. The &lt;code&gt;--filename&lt;/code&gt; option will save the RSA private key to a specified path.</source>
          <target state="translated">RSA 개인 키가 자동으로 생성됩니다. 이것은 요리사 유효성 검사기 키이며 안전한 위치에 저장해야합니다. &lt;code&gt;--filename&lt;/code&gt; 옵션은 지정된 경로로 RSA 개인 키를 저장합니다.</target>
        </trans-unit>
        <trans-unit id="af79799c55abee3a94bfaa5e6f2f435f4a256988" translate="yes" xml:space="preserve">
          <source>An RSA private key is generated automatically. This is the user&amp;rsquo;s private key and should be saved to a safe location. The &lt;code&gt;--filename&lt;/code&gt; option will save the RSA private key to a specified path.</source>
          <target state="translated">RSA 개인 키가 자동으로 생성됩니다. 이것은 사용자의 개인 키이며 안전한 위치에 저장해야합니다. &lt;code&gt;--filename&lt;/code&gt; 옵션은 지정된 경로로 RSA 개인 키를 저장합니다.</target>
        </trans-unit>
        <trans-unit id="1b0dd8520cdbf2a0c16785d5c1dc706e756dc85b" translate="yes" xml:space="preserve">
          <source>An SSL certificate is used between the chef-client and the Chef server to ensure that each node has access to the right data.</source>
          <target state="translated">chef-client와 Chef 서버간에 SSL 인증서가 사용되어 각 노드가 올바른 데이터에 액세스 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="dfea9165838e9d571baf57da8104b88eac854741" translate="yes" xml:space="preserve">
          <source>An action that defines all of the steps necessary to create the website</source>
          <target state="translated">웹 사이트를 만드는 데 필요한 모든 단계를 정의하는 작업</target>
        </trans-unit>
        <trans-unit id="0ed032fe3d614a2171c4255c38ac9f50dc306087" translate="yes" xml:space="preserve">
          <source>An array of Chef server user names who may add applications to the identity service. For example, &lt;code&gt;['user1', 'user2']&lt;/code&gt;. Default value: &lt;code&gt;[ ]&lt;/code&gt;.</source>
          <target state="translated">자격 증명 서비스에 응용 프로그램을 추가 할 수있는 Chef 서버 사용자 이름 배열입니다. 예를 들어 &lt;code&gt;['user1', 'user2']&lt;/code&gt; 입니다. 디폴트 값 : &lt;code&gt;[ ]&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="802bfc74785087eb2ecbea5ea264b503d22da25d" translate="yes" xml:space="preserve">
          <source>An array of Ohai plugins to be disabled on a node. The list of plugins included in Ohai can be found in the &lt;code&gt;ohai/lib/ohai/plugins&lt;/code&gt; directory. For example, disabling a single plugin:</source>
          <target state="translated">노드에서 비활성화 할 Ohai 플러그인 배열입니다. Ohai에 포함 된 플러그인 목록은 &lt;code&gt;ohai/lib/ohai/plugins&lt;/code&gt; 디렉토리에 있습니다. 예를 들어, 단일 플러그인 비활성화</target>
        </trans-unit>
        <trans-unit id="592051488652e3fd1bb55e6277951057edc6dd1d" translate="yes" xml:space="preserve">
          <source>An array of additional remotes that are added to the git repository configuration.</source>
          <target state="translated">자식 저장소 구성에 추가 된 추가 원격 장치의 배열입니다.</target>
        </trans-unit>
        <trans-unit id="395125f092a9f894703704b3638a944f3cbf2760" translate="yes" xml:space="preserve">
          <source>An array of arguments that are passed to the initializer for the handler class. Default value: &lt;code&gt;[]&lt;/code&gt;. For example:</source>
          <target state="translated">핸들러 클래스의 이니셜 라이저로 전달되는 인수 배열입니다. 기본값 : &lt;code&gt;[]&lt;/code&gt; . 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="dda365c01b682c9d14da5d2f449cc76e47f1f5c6" translate="yes" xml:space="preserve">
          <source>An array of comma-separated key-value pairs of ibrowse options for the HTTP connection pool that is used by the rabbitmq-management plugin. Default value: &lt;code&gt;'{connect_timeout, 10000}'&lt;/code&gt;.</source>
          <target state="translated">rabbitmq 관리 플러그인에서 사용하는 HTTP 연결 풀에 대한 ibrowse 옵션의 쉼표로 구분 된 키-값 쌍 배열입니다. 기본값 : &lt;code&gt;'{connect_timeout, 10000}'&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3b94640571a5d8f3b02e46597f80db8b8e309a38" translate="yes" xml:space="preserve">
          <source>An array of directories (relative to the application root) to be removed from a checkout before symbolic links are created. This attribute runs before &lt;code&gt;create_dirs_before_symlink&lt;/code&gt; and before &lt;code&gt;symlink&lt;/code&gt;.</source>
          <target state="translated">기호 링크가 작성되기 전에 체크 아웃에서 제거 될 디렉토리 배열 (애플리케이션 루트에 상대적)입니다. 이 속성은 &lt;code&gt;create_dirs_before_symlink&lt;/code&gt; 이전과 &lt;code&gt;symlink&lt;/code&gt; 이전에 실행됩니다 .</target>
        </trans-unit>
        <trans-unit id="de12d6d17020961a1b26ec9462009dec0b4c255a" translate="yes" xml:space="preserve">
          <source>An array of directories (relative to the application root) to be removed from a checkout before symbolic links are created. This attribute runs before &lt;code&gt;create_dirs_before_symlink&lt;/code&gt; and before &lt;code&gt;symlink&lt;/code&gt;. Default value: &lt;code&gt;%w{log tmp/pids public/system}&lt;/code&gt; (or the same as &lt;code&gt;[&quot;log&quot;, &quot;tmp/pids&quot;, &quot;public/system&quot;]&lt;/code&gt;.</source>
          <target state="translated">기호 링크가 작성되기 전에 체크 아웃에서 제거 될 디렉토리 배열 (애플리케이션 루트에 상대적)입니다. 이 속성은 &lt;code&gt;create_dirs_before_symlink&lt;/code&gt; 이전과 &lt;code&gt;symlink&lt;/code&gt; 이전에 실행됩니다 . 기본값 : &lt;code&gt;%w{log tmp/pids public/system}&lt;/code&gt; (또는 동일 &lt;code&gt;[&quot;log&quot;, &quot;tmp/pids&quot;, &quot;public/system&quot;]&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b01253d3133c35f2d97c860f78e9ce2a53f998b8" translate="yes" xml:space="preserve">
          <source>An array of hashes, where each Hash contains the values that are to be set under a registry key. Each Hash must contain &lt;code&gt;:name&lt;/code&gt;, &lt;code&gt;:type&lt;/code&gt;, and &lt;code&gt;:data&lt;/code&gt; (and must contain no other key values).</source>
          <target state="translated">각 해시에 레지스트리 키 아래에 설정 될 값이 포함 된 해시 배열입니다. 각 해시는 &lt;code&gt;:name&lt;/code&gt; , &lt;code&gt;:type&lt;/code&gt; 및 &lt;code&gt;:data&lt;/code&gt; 를 포함해야하며 다른 키 값을 포함하지 않아야합니다.</target>
        </trans-unit>
        <trans-unit id="e890c426bde8599e36474adab7eb0257c1cafabf" translate="yes" xml:space="preserve">
          <source>An array of hosts to which this configuration file applies.</source>
          <target state="translated">이 구성 파일이 적용되는 호스트 배열.</target>
        </trans-unit>
        <trans-unit id="e7b449a5ed358201b9dd80542f78c85f7c866243" translate="yes" xml:space="preserve">
          <source>An array of hosts to which this configuration file does not apply, i.e. &amp;ldquo;apply this configuration file to all hosts not specified in this array&amp;rdquo;.</source>
          <target state="translated">이 구성 파일이 적용되지 않는 호스트의 배열, 즉 &quot;이 배열에 지정되지 않은 모든 호스트에이 구성 파일을 적용하십시오&quot;.</target>
        </trans-unit>
        <trans-unit id="b773c5be6d6aee1b08006fb22be9b79a26a4cadb" translate="yes" xml:space="preserve">
          <source>An array of non-empty directories which, if any are modified, will cause a job to be started.</source>
          <target state="translated">비어 있지 않은 디렉토리 배열 (있는 경우)을 수정하면 작업이 시작됩니다.</target>
        </trans-unit>
        <trans-unit id="2068854c841f9eeeda6505e7f8d06972b79d76a5" translate="yes" xml:space="preserve">
          <source>An array of options for supported mount features. Default value: &lt;code&gt;:remount&lt;/code&gt;.</source>
          <target state="translated">지원되는 마운트 기능에 대한 옵션 배열. 기본 값 : &lt;code&gt;:remount&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9493f7154bff99575886b52d161680c8ae3294a0" translate="yes" xml:space="preserve">
          <source>An array of options for supported mount features. Default value: &lt;code&gt;{ :remount =&amp;gt; false }&lt;/code&gt;.</source>
          <target state="translated">지원되는 마운트 기능에 대한 옵션 배열. 기본 값 : &lt;code&gt;{ :remount =&amp;gt; false }&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a80b7475b3959e86df9e237a5b26fe8da8e86de0" translate="yes" xml:space="preserve">
          <source>An array of paths at which Ohai plugins are located. Default value: &lt;code&gt;[&amp;lt;CHEF_GEM_PATH&amp;gt;/ohai-9.9.9/lib/ohai/plugins]&lt;/code&gt;. When custom Ohai plugins are added, the paths must be added to the array. For example, a single plugin:</source>
          <target state="translated">Ohai 플러그인이있는 경로의 배열입니다. 기본값 : &lt;code&gt;[&amp;lt;CHEF_GEM_PATH&amp;gt;/ohai-9.9.9/lib/ohai/plugins]&lt;/code&gt; . 사용자 정의 Ohai 플러그인이 추가되면 경로를 어레이에 추가해야합니다. 예를 들어, 단일 플러그인 :</target>
        </trans-unit>
        <trans-unit id="270a4566dd012706c76d6caa99990f9060b7d6cb" translate="yes" xml:space="preserve">
          <source>An array of paths to use when searching for a command. These paths are not added to the command&amp;rsquo;s environment $PATH. The default value uses the system path.</source>
          <target state="translated">명령을 검색 할 때 사용할 경로 배열입니다. 이 경로는 명령 환경 $ PATH에 추가되지 않습니다. 기본값은 시스템 경로를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="ee8ac276a580f69dc0c677085b5668cc86b98a60" translate="yes" xml:space="preserve">
          <source>An array of paths which, if any are modified, will cause a job to be started.</source>
          <target state="translated">수정 된 경로가 있으면 작업이 시작됩니다.</target>
        </trans-unit>
        <trans-unit id="3f696dceb6ce9803792cfc0e5e151c691e0a43d9" translate="yes" xml:space="preserve">
          <source>An array or string that contains mount options. If this value is a string, it is converted to an array. Default value: &lt;code&gt;defaults&lt;/code&gt;.</source>
          <target state="translated">마운트 옵션이 포함 된 배열 또는 문자열입니다. 이 값이 문자열이면 배열로 변환됩니다. 기본 값 : &lt;code&gt;defaults&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d45b283758a80a09e6378d12da6b132c9e594c35" translate="yes" xml:space="preserve">
          <source>An assertion declared by a provider has failed, but execution is allowed to continue because the chef-client is running in why-run mode.</source>
          <target state="translated">제공자가 선언 한 어설 션이 실패했지만 chef-client가 이유 실행 모드에서 실행 중이므로 실행을 계속할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b891e21e6d355c0a161fbbdcf1529b275b464ae0" translate="yes" xml:space="preserve">
          <source>An assertion declared by a provider has failed.</source>
          <target state="translated">공급자가 선언 한 어설 션이 실패했습니다.</target>
        </trans-unit>
        <trans-unit id="61d395bb3d62775e1e2abb01545b3bcba0ac5908" translate="yes" xml:space="preserve">
          <source>An asterisk (&amp;ldquo;*&amp;rdquo;) can be used to replace any number of characters (including zero)</source>
          <target state="translated">별표 (&amp;ldquo;*&amp;rdquo;)를 사용하여 여러 문자를 대체 할 수 있습니다 (0 포함)</target>
        </trans-unit>
        <trans-unit id="09b3b10e70c935e957dee6efbd19fc26308630d6" translate="yes" xml:space="preserve">
          <source>An asterisk (&lt;code&gt;*&lt;/code&gt;) can be used to replace any number of characters (including zero)</source>
          <target state="translated">별표 ( &lt;code&gt;*&lt;/code&gt; )를 사용하여 여러 문자 (0 포함)를 바꿀 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f3bb4eb05e9a449381cb74c59d58a4e33b2a62ac" translate="yes" xml:space="preserve">
          <source>An attribute can be defined in a cookbook (or a recipe) and then used to override the default settings on a node. When a cookbook is loaded during a chef-client run, these attributes are compared to the attributes that are already present on the node. Attributes that are defined in attribute files are first loaded according to cookbook order. For each cookbook, attributes in the &lt;code&gt;default.rb&lt;/code&gt; file are loaded first, and then additional attribute files (if present) are loaded in lexical sort order. When the cookbook attributes take precedence over the default attributes, the chef-client will apply those new settings and values during the chef-client run on the node.</source>
          <target state="translated">요리 책 (또는 레시피)에서 속성을 정의한 다음 노드의 기본 설정을 재정의하는 데 사용할 수 있습니다. chef-client 실행 중에 쿡북이로드되면 이러한 속성은 이미 노드에있는 속성과 비교됩니다. 속성 파일에 정의 된 속성은 먼저 요리 책 순서에 따라로드됩니다. 각 요리 책에 대해 &lt;code&gt;default.rb&lt;/code&gt; 파일의 속성 이 먼저로드 된 다음 추가 속성 파일 (있는 경우)이 어휘 정렬 순서로로드됩니다. 요리 책 속성이 기본 속성보다 우선하는 경우, 요리사 클라이언트는 노드에서 요리사 클라이언트 실행 중에 새로운 설정과 값을 적용합니다.</target>
        </trans-unit>
        <trans-unit id="24829610bcbc098c719b4668d8002a03fffc30f4" translate="yes" xml:space="preserve">
          <source>An attribute can be defined in a role and then used to override the default settings on a node. When a role is applied during a chef-client run, these attributes are compared to the attributes that are already present on the node. When the role attributes take precedence over the default attributes, the chef-client will apply those new settings and values during the chef-client run on the node.</source>
          <target state="translated">역할에서 속성을 정의한 다음 노드의 기본 설정을 재정의하는 데 사용할 수 있습니다. chef-client 실행 중에 역할이 적용되면 이러한 속성은 이미 노드에있는 속성과 비교됩니다. 역할 속성이 기본 속성보다 우선하면 chef-client는 노드에서 chef-client를 실행하는 동안 새로운 설정과 값을 적용합니다.</target>
        </trans-unit>
        <trans-unit id="8801343a5f57fc7872e047a31049f29a58fb1139" translate="yes" xml:space="preserve">
          <source>An attribute can be defined in an environment and then used to override the default settings on a node. When an environment is applied during a chef-client run, these attributes are compared to the attributes that are already present on the node. When the environment attributes take precedence over the default attributes, the chef-client will apply those new settings and values during the chef-client run on the node.</source>
          <target state="translated">환경에서 속성을 정의한 다음 노드의 기본 설정을 재정의하는 데 사용할 수 있습니다. chef-client 실행 중에 환경이 적용되면 이러한 속성은 이미 노드에있는 속성과 비교됩니다. 환경 속성이 기본 속성보다 우선하면 chef-client는 노드에서 chef-client가 실행되는 동안 새로운 설정과 값을 적용합니다.</target>
        </trans-unit>
        <trans-unit id="9e56241cd55ba111bd385a0d9c0fc5524c8f96a3" translate="yes" xml:space="preserve">
          <source>An attribute file is located in the &lt;code&gt;attributes/&lt;/code&gt; sub-directory for a cookbook. When a cookbook is run against a node, the attributes contained in all attribute files are evaluated in the context of the node object. Node methods (when present) are used to set attribute values on a node. For example, the &lt;code&gt;apache2&lt;/code&gt; cookbook contains an attribute file called &lt;code&gt;default.rb&lt;/code&gt;, which contains the following attributes:</source>
          <target state="translated">속성 파일은 요리 책 의 &lt;code&gt;attributes/&lt;/code&gt; 하위 디렉토리에 있습니다. 쿡북이 노드에 대해 실행될 때 모든 속성 파일에 포함 된 속성은 노드 개체의 컨텍스트에서 평가됩니다. 노드 메소드 (있는 경우)는 노드에서 속성 값을 설정하는 데 사용됩니다. 예를 들어, &lt;code&gt;apache2&lt;/code&gt; cookbook에는 &lt;code&gt;default.rb&lt;/code&gt; 라는 속성 파일 이 있으며 여기에는 다음과 같은 속성이 있습니다.</target>
        </trans-unit>
        <trans-unit id="3c02816432879238581e8f99b6720273517d1cd6" translate="yes" xml:space="preserve">
          <source>An attribute is a specific detail about a node, such as an IP address, a host name, a list of loaded kernel modules, the version(s) of available programming languages that are available, and so on. An attribute may be unique to a specific node or it can be identical across every node in the organization. Attributes are most commonly set from a cookbook, by using knife, or are retrieved by Ohai from each node prior to every chef-client run. All attributes are indexed for search on the Chef server. Good candidates for attributes include:</source>
          <target state="translated">속성은 IP 주소, 호스트 이름,로드 된 커널 모듈 목록, 사용 가능한 프로그래밍 언어의 버전 등과 같은 노드에 대한 특정 세부 사항입니다. 특성은 특정 노드에 고유하거나 조직의 모든 노드에서 동일 할 수 있습니다. 속성은 가장 일반적으로 요리 책에서, 칼을 사용하여 설정되거나, 모든 요리사-고객 실행 전에 각 노드에서 Ohai에 의해 검색됩니다. 모든 속성은 Chef 서버에서 검색 할 수 있도록 색인화됩니다. 속성에 대한 좋은 후보는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="617bb05ea9f043bd96bb10533d3ffefc0ddb259d" translate="yes" xml:space="preserve">
          <source>An attribute is a specific detail about a node. Attributes are used by the chef-client to understand:</source>
          <target state="translated">속성은 노드에 대한 특정 세부 사항입니다. 요리사 클라이언트는 속성을 사용하여 다음을 이해합니다.</target>
        </trans-unit>
        <trans-unit id="0ad856fa8bf56a7bde57cd0f75d52ceefc12c7ed" translate="yes" xml:space="preserve">
          <source>An automatic attribute is a specific detail about a node, such as an IP address, a host name, a list of loaded kernel modules, and so on. Automatic attributes are detected by Ohai and are then used by the chef-client to ensure that they are handled properly during every chef-client run. The most commonly accessed automatic attributes are:</source>
          <target state="translated">자동 속성은 IP 주소, 호스트 이름,로드 된 커널 모듈 목록 등과 같은 노드에 대한 특정 세부 사항입니다. 자동 속성은 Ohai가 감지 한 후 요리사 클라이언트가 모든 요리사 클라이언트 실행 중에 올바르게 처리 할 수 ​​있도록 사용합니다. 가장 일반적으로 액세스되는 자동 속성은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="4eaa084334059b3a52ca88bc1f499d82f37ea68c" translate="yes" xml:space="preserve">
          <source>An encryption key can also be stored in an alternate file on the nodes that need it and specify the path location to the file inside an attribute; however, &lt;code&gt;EncryptedDataBagItem.load&lt;/code&gt; expects to see the actual secret as the third argument, rather than a path to the secret file. In this case, you can use &lt;code&gt;EncryptedDataBagItem.load_secret&lt;/code&gt; to slurp the secret file contents and then pass them:</source>
          <target state="translated">암호화 키는이를 필요로하는 노드의 대체 파일에 저장하고 속성 내에서 파일의 경로 위치를 지정할 수도 있습니다. 그러나 &lt;code&gt;EncryptedDataBagItem.load&lt;/code&gt; 는 실제 비밀을 비밀 파일의 경로가 아닌 세 번째 인수로 간주합니다. 이 경우 &lt;code&gt;EncryptedDataBagItem.load_secret&lt;/code&gt; 을 사용 하여 비밀 파일 내용을 처리 한 다음 전달할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3a896330b1f29469c60d5876f3364ff7a401a622" translate="yes" xml:space="preserve">
          <source>An environment attribute can only be set to be a default attribute or an override attribute. An environment attribute cannot be set to be a &lt;code&gt;normal&lt;/code&gt; attribute. Use the &lt;code&gt;default_attribute&lt;/code&gt; and &lt;code&gt;override_attribute&lt;/code&gt; methods in the Ruby DSL file or the &lt;code&gt;default_attributes&lt;/code&gt; and &lt;code&gt;override_attributes&lt;/code&gt; hashes in a JSON data file.</source>
          <target state="translated">환경 속성은 기본 속성 또는 재정의 속성으로 만 설정할 수 있습니다. 환경 속성은 &lt;code&gt;normal&lt;/code&gt; 속성 으로 설정할 수 없습니다 . Ruby DSL 파일에서 &lt;code&gt;default_attribute&lt;/code&gt; 및 &lt;code&gt;override_attribute&lt;/code&gt; 메소드를 사용 하거나 JSON 데이터 파일에서 &lt;code&gt;default_attributes&lt;/code&gt; 및 &lt;code&gt;override_attributes&lt;/code&gt; 해시를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="cef030a3cf761eb966f0f8e7e791692387b586de" translate="yes" xml:space="preserve">
          <source>An environment can use version constraints to specify a list of allowed cookbook versions by specifying the cookbook&amp;rsquo;s name, along with the version constraint. For example:</source>
          <target state="translated">환경은 버전 제약 조건과 함께 요리 책의 이름을 지정하여 버전 제약 조건을 사용하여 허용되는 요리 책 버전 목록을 지정할 수 있습니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="d941622b51cae53b0e598e81eb181e0e108bd53d" translate="yes" xml:space="preserve">
          <source>An environment is a way to map an organization&amp;rsquo;s real-life workflow to what can be configured and managed when using Chef server.</source>
          <target state="translated">환경은 조직의 실제 워크 플로를 Chef 서버를 사용할 때 구성 및 관리 할 수있는 대상에 매핑하는 방법입니다.</target>
        </trans-unit>
        <trans-unit id="b722505ca81b3c1263b8b7be644ff18ac532b5d6" translate="yes" xml:space="preserve">
          <source>An environment is a way to map an organization&amp;rsquo;s real-life workflow to what can be configured and managed when using Chef server. Every organization begins with a single environment called the &lt;code&gt;_default&lt;/code&gt; environment, which cannot be modified (or deleted). Additional environments can be created to reflect each organization&amp;rsquo;s patterns and workflow. For example, creating &lt;code&gt;production&lt;/code&gt;, &lt;code&gt;staging&lt;/code&gt;, &lt;code&gt;testing&lt;/code&gt;, and &lt;code&gt;development&lt;/code&gt; environments. Generally, an environment is also associated with one (or more) cookbook versions.</source>
          <target state="translated">환경은 조직의 실제 워크 플로를 Chef 서버를 사용할 때 구성 및 관리 할 수있는 대상에 매핑하는 방법입니다. 모든 조직은 수정하거나 삭제할 수없는 &lt;code&gt;_default&lt;/code&gt; 환경이라는 단일 환경으로 시작합니다 . 각 조직의 패턴과 워크 플로를 반영하기 위해 추가 환경을 만들 수 있습니다. 예를 들어, &lt;code&gt;production&lt;/code&gt; , &lt;code&gt;staging&lt;/code&gt; , &lt;code&gt;testing&lt;/code&gt; 및 &lt;code&gt;development&lt;/code&gt; 환경을 작성하십시오. 일반적으로 환경은 하나 이상의 요리 책 버전과도 관련됩니다.</target>
        </trans-unit>
        <trans-unit id="3b182f5fa65bc4be49f6475b9748b697f37929ec" translate="yes" xml:space="preserve">
          <source>An environment is defined using JSON or the Ruby DSL. chef-solo will look for environments in &lt;code&gt;/var/chef/environments&lt;/code&gt;, but this location can be modified by changing the setting for &lt;code&gt;environment_path&lt;/code&gt; in solo.rb. For example, the following setting in solo.rb:</source>
          <target state="translated">환경은 JSON 또는 Ruby DSL을 사용하여 정의됩니다. chef-solo는 &lt;code&gt;/var/chef/environments&lt;/code&gt; 환경 을 검색하지만 solo.rb의 &lt;code&gt;environment_path&lt;/code&gt; 설정을 변경하여이 위치를 수정할 수 있습니다. 예를 들어 solo.rb의 다음 설정 :</target>
        </trans-unit>
        <trans-unit id="d955231fe338f0ac8f50ed827af3ae7cb432d12e" translate="yes" xml:space="preserve">
          <source>An event handler that describes what to do when the &lt;code&gt;:run_failed&lt;/code&gt; event is triggered</source>
          <target state="translated">&lt;code&gt;:run_failed&lt;/code&gt; 이벤트가 트리거 될 때 수행 할 작업을 설명하는 이벤트 핸들러</target>
        </trans-unit>
        <trans-unit id="b1391eded19f980013736895b73a71e5b3d7735b" translate="yes" xml:space="preserve">
          <source>An exact matching search pattern is used to search for a key with a name that exactly matches a search query. If the name of the key contains spaces, quotes must be used in the search pattern to ensure the search query finds the key. The entire query must also be contained within quotes, so as to prevent it from being interpreted by Ruby or a command shell. The best way to ensure that quotes are used consistently is to quote the entire query using single quotes (&amp;lsquo; &amp;lsquo;) and a search pattern with double quotes (&amp;rdquo; &amp;rdquo;).</source>
          <target state="translated">정확히 일치하는 검색 패턴은 검색어와 정확히 일치하는 이름을 가진 키를 검색하는 데 사용됩니다. 키 이름에 공백이 있으면 검색 패턴에서 따옴표를 사용하여 검색 쿼리가 키를 찾도록해야합니다. Ruby 또는 명령 셸에서 해석되지 않도록 전체 쿼리도 따옴표 안에 포함해야합니다. 따옴표가 일관되게 사용되도록하는 가장 좋은 방법은 작은 따옴표 ( '')와 큰 따옴표 (&amp;ldquo;&amp;rdquo;)가있는 검색 패턴을 사용하여 전체 쿼리를 인용하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="7f0eefd513feab6ab5772e0c55d6b925b5935322" translate="yes" xml:space="preserve">
          <source>An examle of a &lt;code&gt;.chef/pivotal.rb&lt;/code&gt; file is shown below:</source>
          <target state="translated">&lt;code&gt;.chef/pivotal.rb&lt;/code&gt; 파일 의 예 는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="48f57b01b71835ec629304dc23c8520957f6e77e" translate="yes" xml:space="preserve">
          <source>An example showing the use of parameters, with a parameter named &lt;code&gt;port&lt;/code&gt; that defaults to &lt;code&gt;4000&lt;/code&gt; rendered into a &lt;strong&gt;template&lt;/strong&gt; resource, would look like:</source>
          <target state="translated">&lt;strong&gt;템플릿&lt;/strong&gt; 리소스에 기본적으로 렌더링되는 &lt;code&gt;port&lt;/code&gt; 이름 이 &lt;code&gt;4000&lt;/code&gt; 인 매개 변수를 사용하는 예 는 다음과 같습니다.&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c39fe92a1d16d09b7c11b23a9cdd6bee485d415d" translate="yes" xml:space="preserve">
          <source>An exception handler is used to identify situations that have caused a chef-client run to fail. An exception handler can be loaded at the start of a chef-client run by adding a recipe that contains the &lt;strong&gt;chef_handler&lt;/strong&gt; resource to a node&amp;rsquo;s run-list. An exception handler runs when the &lt;code&gt;failed?&lt;/code&gt; property for the &lt;code&gt;run_status&lt;/code&gt; object returns &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">예외 처리기는 Chef-Client 실행이 실패한 상황을 식별하는 데 사용됩니다. &lt;strong&gt;chef_handler&lt;/strong&gt; 자원을 포함하는 레시피를 노드의 실행 목록 에 추가하여 chef-client 실행 시작시 예외 핸들러를로드 할 수 있습니다 . &lt;code&gt;failed?&lt;/code&gt; 했을 때 예외 처리기가 실행 됩니까? &lt;code&gt;run_status&lt;/code&gt; 객체의 속성 은 &lt;code&gt;true&lt;/code&gt; 를 반환 합니다 .</target>
        </trans-unit>
        <trans-unit id="e7c46f271d5abf050537dc97bf75a275c7f88af3" translate="yes" xml:space="preserve">
          <source>An exception handler is used to trigger behaviors when a defined aspect of a chef-client run fails.</source>
          <target state="translated">Chef-Client 실행의 정의 된 측면이 실패 할 때 동작을 트리거하는 데 예외 핸들러가 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="2e733199ef1e6c730799747a6107ce8a564d3792" translate="yes" xml:space="preserve">
          <source>An if expression can be used to check for conditions (true or false).</source>
          <target state="translated">if 표현식을 사용하여 조건을 확인할 수 있습니다 (true 또는 false).</target>
        </trans-unit>
        <trans-unit id="20526329c474b480ec3d787151a3a7aa03c67926" translate="yes" xml:space="preserve">
          <source>An inline helper method</source>
          <target state="translated">인라인 헬퍼 메소드</target>
        </trans-unit>
        <trans-unit id="b0a464c858ee55d9fd5aecead413464117014f0a" translate="yes" xml:space="preserve">
          <source>An inline helper method can also take arguments:</source>
          <target state="translated">인라인 헬퍼 메소드는 또한 인수를 취할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6e7fd42063ed37f85873122700610950c72aa71a" translate="yes" xml:space="preserve">
          <source>An inline helper module</source>
          <target state="translated">인라인 헬퍼 모듈</target>
        </trans-unit>
        <trans-unit id="ac53f2008c81ba3e4736f8e34ac6dea8b020a442" translate="yes" xml:space="preserve">
          <source>An instance of the &lt;code&gt;Chef::RunContext&lt;/code&gt; object; used by the chef-client to track the context of the run; provides access to the &lt;code&gt;cookbook_collection&lt;/code&gt;, &lt;code&gt;resource_collection&lt;/code&gt;, and &lt;code&gt;definitions&lt;/code&gt; properties.</source>
          <target state="translated">&lt;code&gt;Chef::RunContext&lt;/code&gt; 객체 의 인스턴스 . 요리사 클라이언트가 달리기 상황을 추적하는 데 사용합니다. &lt;code&gt;cookbook_collection&lt;/code&gt; , &lt;code&gt;resource_collection&lt;/code&gt; 및 &lt;code&gt;definitions&lt;/code&gt; 특성에 대한 액세스를 제공 합니다.</target>
        </trans-unit>
        <trans-unit id="787fd4fecd880a1590733684eb55c9b13a317c35" translate="yes" xml:space="preserve">
          <source>An integer that specifies the port on which the LDAP server listens. The default value is an appropriate value for most configurations. Default value: &lt;code&gt;389&lt;/code&gt; or &lt;code&gt;636&lt;/code&gt; when &lt;code&gt;ldap['encryption']&lt;/code&gt; is set to &lt;code&gt;:simple_tls&lt;/code&gt;.</source>
          <target state="translated">LDAP 서버가 인식하는 포트를 지정하는 정수입니다. 기본값은 대부분의 구성에 적합한 값입니다. &lt;code&gt;ldap['encryption']&lt;/code&gt; 이 &lt;code&gt;:simple_tls&lt;/code&gt; 로 설정된 경우 기본값은 &lt;code&gt;389&lt;/code&gt; 또는 &lt;code&gt;636&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="147ae8df22fc4a17e74839f9505690221cf8fd91" translate="yes" xml:space="preserve">
          <source>An open source distributed version control system called git must be installed before the chef-repo can be cloned to the workstation from GitHub.</source>
          <target state="translated">chef-repo를 GitHub에서 워크 스테이션으로 복제하기 전에 git이라는 오픈 소스 분산 버전 제어 시스템을 설치해야합니다.</target>
        </trans-unit>
        <trans-unit id="1ef1be81d6c4f9058aae519f992af2d2749e834d" translate="yes" xml:space="preserve">
          <source>An operator can be used to ensure that certain terms are included in the results, are excluded from the results, or are not included even when other aspects of the query match. Searches can use the following operators:</source>
          <target state="translated">연산자를 사용하여 특정 용어가 결과에 포함되거나 결과에서 제외되거나 쿼리의 다른 측면이 일치하더라도 포함되지 않도록 할 수 있습니다. 검색은 다음 연산자를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="db898e891e6db438ddfadc1cef7aa5c66323127d" translate="yes" xml:space="preserve">
          <source>An optimistic version constraint is one that looks for versions greater than or equal to the specified version. For example:</source>
          <target state="translated">낙관적 버전 제약 조건은 지정된 버전 이상의 버전을 찾는 것입니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="8b05d98cb14a28a88869aa9d4043a6cee3309fc8" translate="yes" xml:space="preserve">
          <source>An ordered list of roles and/or recipes that are run in the exact order defined in the run-list; if a recipe appears more than once in the run-list, the chef-client will not run it twice</source>
          <target state="translated">실행 목록에 정의 된 순서대로 실행되는 역할 및 / 또는 레시피의 정렬 된 목록. 실행 목록에 레시피가 두 번 이상 나타나는 경우 요리사 클라이언트는 두 번 실행하지 않습니다</target>
        </trans-unit>
        <trans-unit id="f432095a2bd632820087d86caf91d9ebb89db6dd" translate="yes" xml:space="preserve">
          <source>An organization is a single instance of a Chef server, including all of the nodes that are managed by that Chef server and each of the workstations that will run knife and access the Chef server using the Chef server API.</source>
          <target state="translated">조직은 해당 Chef 서버에서 관리하는 모든 노드와 Chef 서버 API를 사용하여 Chef 서버에 액세스하고 Chef 서버에 액세스 할 각 워크 스테이션을 포함하여 Chef 서버의 단일 인스턴스입니다.</target>
        </trans-unit>
        <trans-unit id="ea8b3c372e88e6704f26309e03687b814e29634b" translate="yes" xml:space="preserve">
          <source>An organization is the top-level entity for role-based access control in the Chef server. Each organization contains the default groups (&lt;code&gt;admins&lt;/code&gt;, &lt;code&gt;clients&lt;/code&gt;, and &lt;code&gt;users&lt;/code&gt;, plus &lt;code&gt;billing_admins&lt;/code&gt; for the hosted Chef server), at least one user and at least one node (on which the chef-client is installed). The Chef server supports multiple organizations. The Chef server includes a single default organization that is defined during setup. Additional organizations can be created after the initial setup and configuration of the Chef server.</source>
          <target state="translated">조직은 Chef 서버에서 역할 기반 액세스 제어를위한 최상위 엔티티입니다. 각 조직에는 기본 그룹 ( &lt;code&gt;admins&lt;/code&gt; , &lt;code&gt;clients&lt;/code&gt; , &lt;code&gt;users&lt;/code&gt; , 호스트 된 Chef 서버의 &lt;code&gt;billing_admins&lt;/code&gt; ), 하나 이상의 사용자 및 하나 이상의 노드 (chef-client가 설치된)가 포함됩니다. Chef 서버는 여러 조직을 지원합니다. Chef 서버에는 설정 중에 정의 된 단일 기본 조직이 포함되어 있습니다. Chef 서버의 초기 설정 및 구성 후에 추가 조직을 작성할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="204a8ebc2a093e88ae8eb2f9f8da1685bc956fa8" translate="yes" xml:space="preserve">
          <source>An organization isn&amp;rsquo;t usable until a user that belongs to the &lt;code&gt;admins&lt;/code&gt; group is associated with the organization.</source>
          <target state="translated">&lt;code&gt;admins&lt;/code&gt; 그룹에 속한 사용자가 조직과 연결될 때까지 조직을 사용할 수 없습니다 .</target>
        </trans-unit>
        <trans-unit id="c747935e573d0525222f878c353f4130dfa50f7f" translate="yes" xml:space="preserve">
          <source>An unhealthy connection state from the perspective of the initial primary machine is similar to:</source>
          <target state="translated">초기 기본 시스템의 관점에서 비정상적인 연결 상태는 다음과 유사합니다.</target>
        </trans-unit>
        <trans-unit id="047b0f89aaf4e58d8f3aecd976ed3f5cf7931a8a" translate="yes" xml:space="preserve">
          <source>An unless expression can be used to execute code when a condition returns a false value (effectively, an unless expression is the opposite of an if statement).</source>
          <target state="translated">조건이 거짓 값을 리턴 할 때 (표현식이 if 문과 반대 인 경우) 코드를 실행하기 위해 else 표현식을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a02de02e25ee20c4de7eeeb53bb4a1198bcc0dff" translate="yes" xml:space="preserve">
          <source>An x86_64 compatible system architecture; Red Hat Enterprise Linux and CentOS may require updates prior to installation</source>
          <target state="translated">x86_64 호환 시스템 아키텍처 Red Hat Enterprise Linux 및 CentOS는 설치 전에 업데이트가 필요할 수 있습니다</target>
        </trans-unit>
        <trans-unit id="25bc96295797b5371aa0625196d597ef03a952de" translate="yes" xml:space="preserve">
          <source>Analytics</source>
          <target state="translated">Analytics</target>
        </trans-unit>
        <trans-unit id="faa142b56a030f32abb23384a54e1f56ddd49b2a" translate="yes" xml:space="preserve">
          <source>Analytics Queues</source>
          <target state="translated">분석 대기열</target>
        </trans-unit>
        <trans-unit id="fe0a162a89306acf6661636ee46333e0825959e6" translate="yes" xml:space="preserve">
          <source>And a force attribute:</source>
          <target state="translated">그리고 힘 속성 :</target>
        </trans-unit>
        <trans-unit id="dbf9797cfca5611a9bab6ec8a1a2ae837ffe4f28" translate="yes" xml:space="preserve">
          <source>And a simple Embedded Ruby (ERB) template like this:</source>
          <target state="translated">그리고 다음과 같은 간단한 임베디드 루비 (ERB) 템플릿 :</target>
        </trans-unit>
        <trans-unit id="9b091e189f56ea223931eb9c4cc066f0f0e830a7" translate="yes" xml:space="preserve">
          <source>And also some override attributes:</source>
          <target state="translated">또한 일부 재정의 속성 :</target>
        </trans-unit>
        <trans-unit id="f890cab216e86d3e48bb8da5d1c1efb746abbe93" translate="yes" xml:space="preserve">
          <source>And for resources:</source>
          <target state="translated">그리고 자원 :</target>
        </trans-unit>
        <trans-unit id="250aee54b91b38fb9a6c09e8ca7336b4f593f36c" translate="yes" xml:space="preserve">
          <source>And for the internal load balancers:</source>
          <target state="translated">내부로드 밸런서의 경우 :</target>
        </trans-unit>
        <trans-unit id="f54ec9b2911039a132d504e30269d6a5136352a5" translate="yes" xml:space="preserve">
          <source>And other precedence levels:</source>
          <target state="translated">그리고 다른 우선 순위 레벨 :</target>
        </trans-unit>
        <trans-unit id="3f197132f595ed30cb838e1a401bb42230943731" translate="yes" xml:space="preserve">
          <source>And others are defined in an attributes file:</source>
          <target state="translated">그리고 다른 것들은 속성 파일에 정의되어 있습니다 :</target>
        </trans-unit>
        <trans-unit id="e26b742f12bd9b431bbd5ecb7cc712c529e118a9" translate="yes" xml:space="preserve">
          <source>And set the Keepalived unicast addresses to the GRE tunnel addresses.</source>
          <target state="translated">Keepalived 유니 캐스트 주소를 GRE 터널 주소로 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="1a49536760cfffb9f096026e69ceef8990032500" translate="yes" xml:space="preserve">
          <source>And some attributes:</source>
          <target state="translated">그리고 몇몇 속성들 :</target>
        </trans-unit>
        <trans-unit id="9247af0b9dc75086aa3e28df46b1176ba72098af" translate="yes" xml:space="preserve">
          <source>And some role attributes:</source>
          <target state="translated">그리고 일부 역할 속성 :</target>
        </trans-unit>
        <trans-unit id="a6bcc48fa962841f64748aa978c486dd0cd4063e" translate="yes" xml:space="preserve">
          <source>And sometimes they do. For example, first name then last name:</source>
          <target state="translated">때로는 그렇습니다. 예를 들어 이름과 성은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="871e19b6b94eeedfac5e943741919c331e0a1289" translate="yes" xml:space="preserve">
          <source>And then create a template called &lt;code&gt;sudoers.erb&lt;/code&gt; and save it to &lt;code&gt;templates/default/sudoers.erb&lt;/code&gt;:</source>
          <target state="translated">그런 다음 &lt;code&gt;sudoers.erb&lt;/code&gt; 라는 템플리트를 작성 하여 &lt;code&gt;templates/default/sudoers.erb&lt;/code&gt; 에 저장하십시오 .</target>
        </trans-unit>
        <trans-unit id="07c67bab703361ecafd9320aa3c0893af22d6b28" translate="yes" xml:space="preserve">
          <source>And then deploy the new cookbook version.</source>
          <target state="translated">그런 다음 새 요리 책 버전을 배포하십시오.</target>
        </trans-unit>
        <trans-unit id="49ccca7b62ec0a81efcb8521d8e6ff0dc9d94e1b" translate="yes" xml:space="preserve">
          <source>And then from a front end machine (in a high availability or tiered configuration) or from the Chef server in a standalone configuration, run the following command. Be sure to replace the uppercase placeholders with the values for your organization:</source>
          <target state="translated">그런 다음 프런트 엔드 시스템 (고 가용성 또는 계층 구성) 또는 Chef 서버에서 독립 실행 형 구성에서 다음 명령을 실행하십시오. 대문자 자리 표시자를 조직의 값으로 바꾸십시오.</target>
        </trans-unit>
        <trans-unit id="e26fadba198bd5c54a5e72c77d33170b161e1f50" translate="yes" xml:space="preserve">
          <source>And then run:</source>
          <target state="translated">그런 다음 다음을 실행하십시오.</target>
        </trans-unit>
        <trans-unit id="c18df673e57c13d4d99328d2de434e84633d13f6" translate="yes" xml:space="preserve">
          <source>And then set the default attributes in &lt;code&gt;attributes/default.rb&lt;/code&gt;:</source>
          <target state="translated">그리고 &lt;code&gt;attributes/default.rb&lt;/code&gt; 에 기본 속성을 설정하십시오 :</target>
        </trans-unit>
        <trans-unit id="6d590fe4c10cf34c9fa8aee22d9dd08b3e8cf958" translate="yes" xml:space="preserve">
          <source>And then the same recipe, modified to load administrators using a search query (and using an array to store the results of the search query):</source>
          <target state="translated">그런 다음 검색 쿼리를 사용하여 관리자를로드하고 배열을 사용하여 검색 결과를 저장하도록 수정 된 동일한 레시피 :</target>
        </trans-unit>
        <trans-unit id="e9da3ae82eb25bbba9537b2f9c9435351145e38e" translate="yes" xml:space="preserve">
          <source>And then use this variable to define specific behaviors for specific Microsoft Windows platform versions. For example:</source>
          <target state="translated">그런 다음이 변수를 사용하여 특정 Microsoft Windows 플랫폼 버전에 대한 특정 동작을 정의하십시오. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="453d22c5060b06227465a82952f28d124ecc9aa1" translate="yes" xml:space="preserve">
          <source>And then while the bootstrap operation is running, the command window will show something like the following:</source>
          <target state="translated">부트 스트랩 작업이 실행되는 동안 명령 창에 다음과 같은 내용이 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="a089ff5631bac19bb35d75769ec9d6141f481108" translate="yes" xml:space="preserve">
          <source>And this should return &lt;code&gt;true&lt;/code&gt;:</source>
          <target state="translated">그리고 이것은 &lt;code&gt;true&lt;/code&gt; 를 반환해야 합니다 :</target>
        </trans-unit>
        <trans-unit id="527020abe1920383e2ed8edb0ad55ac287210613" translate="yes" xml:space="preserve">
          <source>Another (much less common) approach is to set a value only if an attribute has no value. This can be done by using the &lt;code&gt;_unless&lt;/code&gt; variants of the attribute priority methods:</source>
          <target state="translated">또 다른 (훨씬 덜 일반적인) 접근법은 속성에 값이없는 경우에만 값을 설정하는 것입니다. 속성 우선 순위 메소드 의 &lt;code&gt;_unless&lt;/code&gt; 변형을 사용하여이를 수행 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="01400b6b959807d896aef4ee29d289aab211e689" translate="yes" xml:space="preserve">
          <source>Another approach is to use the &lt;strong&gt;gem_package&lt;/strong&gt; resource, and then specify the &lt;code&gt;gem_binary&lt;/code&gt; location to the RubyGems directory that is used by Chef. For example:</source>
          <target state="translated">또 다른 방법은 &lt;strong&gt;gem_package&lt;/strong&gt; 자원 을 사용하고 &lt;strong&gt;gem&lt;/strong&gt; 이 사용하는 RubyGems 디렉토리에 &lt;code&gt;gem_binary&lt;/code&gt; 위치를 지정하는 것 입니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="896ea1abf7dd2c7bd29489932f9dbdac15eb66dd" translate="yes" xml:space="preserve">
          <source>Another common approach to tailing the log files for a service is to use the system utility &lt;code&gt;tail&lt;/code&gt;. For example:</source>
          <target state="translated">서비스의 로그 파일을 &lt;code&gt;tail&lt;/code&gt; 하는 또 다른 일반적인 방법은 시스템 유틸리티 꼬리 를 사용하는 것 입니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="8430bea474b4f1a94fd4672ea62eeffdcb2618b5" translate="yes" xml:space="preserve">
          <source>Another example also shows how to specify rights for a directory:</source>
          <target state="translated">또 다른 예는 디렉토리에 대한 권한을 지정하는 방법도 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="e14a9022df6d7dda7e1d85fc513f721499fa66b5" translate="yes" xml:space="preserve">
          <source>Another example of running the chef-client as a non-root user involves using resources to pass sudo commands as as an attribute on the resource. For example, the &lt;strong&gt;service&lt;/strong&gt; resource uses a series of &lt;code&gt;_command&lt;/code&gt; attributes (like &lt;code&gt;start_command&lt;/code&gt;, &lt;code&gt;stop_command&lt;/code&gt;, and so on), the &lt;strong&gt;package&lt;/strong&gt;-based resources use the &lt;code&gt;options&lt;/code&gt; attribute, and the &lt;strong&gt;script&lt;/strong&gt;-based resources use the &lt;code&gt;code&lt;/code&gt; attribute.</source>
          <target state="translated">비 루트 사용자로 chef-client를 실행하는 또 다른 예는 자원을 사용하여 sudo 명령을 자원의 속성으로 전달하는 것입니다. 예를 들어 &lt;strong&gt;서비스&lt;/strong&gt; 리소스는 일련의 &lt;code&gt;_command&lt;/code&gt; 속성 (예 : &lt;code&gt;start_command&lt;/code&gt; , &lt;code&gt;stop_command&lt;/code&gt; 등)을 사용하고 &lt;strong&gt;패키지&lt;/strong&gt; 기반 리소스는 &lt;code&gt;options&lt;/code&gt; 속성을 사용 하며 &lt;strong&gt;스크립트&lt;/strong&gt; 기반 리소스는 &lt;code&gt;code&lt;/code&gt; 속성을 사용 합니다.</target>
        </trans-unit>
        <trans-unit id="32534952743c94a670dd6caec8832476844c8c79" translate="yes" xml:space="preserve">
          <source>Another way Ruby can be used with the Chef server API is to get objects from the Chef server, and then interact with the returned data using Ruby methods. Whenever possible, the Chef server API will return an object of the relevant type. The returned object is then available to be called by other methods. For example, the &lt;code&gt;api.get&lt;/code&gt; method can be used to return a node named &lt;code&gt;foobar&lt;/code&gt;, and then &lt;code&gt;.destroy&lt;/code&gt; can be used to delete that node:</source>
          <target state="translated">Chef 서버 API와 함께 Ruby를 사용할 수있는 또 다른 방법은 Chef 서버에서 오브젝트를 가져온 다음 Ruby 메소드를 사용하여 리턴 된 데이터와 상호 작용하는 것입니다. 가능할 때마다 Chef 서버 API는 관련 유형의 객체를 반환합니다. 그런 다음 반환 된 객체를 다른 방법으로 호출 할 수 있습니다. 예를 들어, &lt;code&gt;api.get&lt;/code&gt; 메소드를 사용하여 &lt;code&gt;foobar&lt;/code&gt; 라는 노드를 리턴 한 다음 &lt;code&gt;.destroy&lt;/code&gt; 를 사용하여 해당 노드를 삭제할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c123b95c70fa093662de98283fa8fbb31d4821f2" translate="yes" xml:space="preserve">
          <source>Another way to define an inline helper method is to reference a node object so that repeated calls to one (or more) cookbook attributes can be done efficiently:</source>
          <target state="translated">인라인 헬퍼 메소드를 정의하는 또 다른 방법은 하나 이상의 요리 책 속성에 대한 반복 호출이 효율적으로 수행 될 수 있도록 노드 오브젝트를 참조하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="07dde93944ea1c226a28a4dceebb3a0676ea5059" translate="yes" xml:space="preserve">
          <source>Another way to view log files is to use the system utility tail:</source>
          <target state="translated">로그 파일을 보는 또 다른 방법은 시스템 유틸리티 테일을 사용하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="b610a5efb6bfd2b1392e6843958647be7e2fd4a2" translate="yes" xml:space="preserve">
          <source>Any DSC resource may be used in a Chef recipe. For example, the DSC Resource Kit contains resources for &lt;a href=&quot;http://www.powershellgallery.com/packages/xActiveDirectory/2.8.0.0&quot;&gt;configuring Active Directory components&lt;/a&gt;, such as &lt;code&gt;xADDomain&lt;/code&gt;, &lt;code&gt;xADDomainController&lt;/code&gt;, and &lt;code&gt;xADUser&lt;/code&gt;. Assuming that these resources are available to the chef-client, the corresponding values for the &lt;code&gt;resource&lt;/code&gt; attribute would be: &lt;code&gt;:xADDomain&lt;/code&gt;, &lt;code&gt;:xADDomainController&lt;/code&gt;, and &lt;code&gt;xADUser&lt;/code&gt;.</source>
          <target state="translated">모든 DSC 자원은 Chef 레시피에 사용될 수 있습니다. 예를 들어 DSC Resource Kit에는 &lt;code&gt;xADDomain&lt;/code&gt; , &lt;code&gt;xADDomainController&lt;/code&gt; 및 &lt;code&gt;xADUser&lt;/code&gt; 와 같은 &lt;a href=&quot;http://www.powershellgallery.com/packages/xActiveDirectory/2.8.0.0&quot;&gt;Active Directory 구성 요소&lt;/a&gt; 를 구성 하기위한 리소스가 포함되어 있습니다 . 이러한 자원을 chef-client가 사용할 수 있다고 가정하면 &lt;code&gt;resource&lt;/code&gt; 속성 의 해당 값은 &lt;code&gt;:xADDomain&lt;/code&gt; , &lt;code&gt;:xADDomainController&lt;/code&gt; 및 &lt;code&gt;xADUser&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="c0868b7cc38d37d2a4a8ffd88815aff8aa164150" translate="yes" xml:space="preserve">
          <source>Any Linux or UNIX distribution that is not listed as a Foundational platform.</source>
          <target state="translated">기초 플랫폼으로 나열되지 않은 모든 Linux 또는 UNIX 배포.</target>
        </trans-unit>
        <trans-unit id="bdf21fafc9741c77901438cf82ebb84761537a80" translate="yes" xml:space="preserve">
          <source>Any chef-client or knife user that tries to access the Chef server after the upgrade will be able to do so as long as the &lt;code&gt;default_orgname&lt;/code&gt; is set and is part of the default organization on the upgraded Chef server.</source>
          <target state="translated">&lt;code&gt;default_orgname&lt;/code&gt; 이 설정되고 업그레이드 된 Chef 서버에서 기본 조직의 일부인 경우 업그레이드 후 Chef 서버에 액세스를 시도하는 모든 Chef-Client 또는 Knif 사용자가 액세스 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="cbc629ab8aaf1ee721ee030604cc9068f625562b" translate="yes" xml:space="preserve">
          <source>Any environment specified for &lt;code&gt;chef_environment&lt;/code&gt; by a JSON file will take precedence over an environment specified by the &lt;code&gt;--environment&lt;/code&gt; option when both options are part of the same command.</source>
          <target state="translated">지정된 모든 환경 &lt;code&gt;chef_environment&lt;/code&gt; JSON 파일에 의해이가 지정한 환경보다 우선합니다 &lt;code&gt;--environment&lt;/code&gt; 두 옵션은 동일한 명령의 일부 옵션을 선택합니다.</target>
        </trans-unit>
        <trans-unit id="0fd20ba799222961f99cbf164db433eb52f1f600" translate="yes" xml:space="preserve">
          <source>Any node that is bootstrapped from a workstation with the updated URL will automatically be assigned the new URL for the Chef server. Only existing nodes prior to the upgrade require the URL update.</source>
          <target state="translated">업데이트 된 URL이있는 워크 스테이션에서 부트 스트랩 된 모든 노드에는 Chef 서버의 새 URL이 자동으로 지정됩니다. 업그레이드 이전의 기존 노드 만 URL 업데이트가 필요합니다.</target>
        </trans-unit>
        <trans-unit id="04a02803a01d2d6ed8174e9d21a6931c0a2d752f" translate="yes" xml:space="preserve">
          <source>Any other attribute type that is contained in this JSON file will be treated as a &lt;code&gt;normal&lt;/code&gt; attribute. For example, attempting to update &lt;code&gt;override&lt;/code&gt; attributes using the &lt;code&gt;-j&lt;/code&gt; option:</source>
          <target state="translated">이 JSON 파일에 포함 된 다른 속성 유형은 &lt;code&gt;normal&lt;/code&gt; 속성 으로 취급됩니다 . 예를 들어, &lt;code&gt;-j&lt;/code&gt; 옵션을 사용하여 &lt;code&gt;override&lt;/code&gt; 속성 을 업데이트하려고합니다 .</target>
        </trans-unit>
        <trans-unit id="1a6e49dce63d1120044a72a91d072b2c9219be57" translate="yes" xml:space="preserve">
          <source>Any properties that are marked &lt;code&gt;identity: true&lt;/code&gt; or &lt;code&gt;desired_state: false&lt;/code&gt; will be available from &lt;code&gt;load_current_value&lt;/code&gt;. If access to other properties of a resource is needed, use a block argument that contains all of the properties of the requested resource. For example:</source>
          <target state="translated">&lt;code&gt;identity: true&lt;/code&gt; 로 표시되는 모든 속성 ( true 또는 &lt;code&gt;desired_state: false&lt;/code&gt; 은 &lt;code&gt;load_current_value&lt;/code&gt; 에서 사용할 수 있습니다 . 자원의 다른 특성에 액세스해야하는 경우 요청 된 자원의 모든 특성을 포함하는 블록 인수를 사용하십시오. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="7b922fed9c894f1c640057d0f0b4093d66a4f035" translate="yes" xml:space="preserve">
          <source>Any recipes using the &lt;code&gt;git-deploy&lt;/code&gt; gem can continue using the same API. To include this behavior in a recipe, do something like the following:</source>
          <target state="translated">&lt;code&gt;git-deploy&lt;/code&gt; gem을 사용하는 모든 레시피 는 동일한 API를 계속 사용할 수 있습니다. 레시피에이 동작을 포함 시키려면 다음과 같이하십시오.</target>
        </trans-unit>
        <trans-unit id="37a21bccbc92efa566429468a2c33b20e8bc9172" translate="yes" xml:space="preserve">
          <source>Any resource that passes a string command may also specify the interpreter that will be used to evaluate that string command. This is done by using the &lt;code&gt;guard_interpreter&lt;/code&gt; property to specify a &lt;strong&gt;script&lt;/strong&gt;-based resource.</source>
          <target state="translated">문자열 명령을 전달하는 모든 리소스는 해당 문자열 명령을 평가하는 데 사용될 해석기를 지정할 수도 있습니다. 이것은 사용하여 수행됩니다 &lt;code&gt;guard_interpreter&lt;/code&gt; 의 지정 속성을 &lt;strong&gt;스크립트&lt;/strong&gt; 기반 자원을.</target>
        </trans-unit>
        <trans-unit id="657852794d1af86c6c92c73f3b44d2a018e5b475" translate="yes" xml:space="preserve">
          <source>Any search for a data bag (or a data bag item) must specify the name of the data bag and then provide the search query string that will be used during the search. For example, to use knife to search within a data bag named &amp;ldquo;admin_data&amp;rdquo; across all items, except for the &amp;ldquo;admin_users&amp;rdquo; item, enter the following:</source>
          <target state="translated">데이터 백 (또는 데이터 백 항목)을 검색 할 때는 데이터 백의 이름을 지정한 다음 검색 중에 사용될 검색어 문자열을 제공해야합니다. 예를 들어, 나이프를 사용하여&amp;ldquo;admin_users&amp;rdquo;항목을 제외한 모든 항목에서&amp;ldquo;admin_data&amp;rdquo;라는 데이터 백 내에서 검색하려면 다음을 입력하십시오.</target>
        </trans-unit>
        <trans-unit id="5269a468e70bc4d1896a8572169eb130c72e2ca4" translate="yes" xml:space="preserve">
          <source>Anything that can be done with Ruby can be used within a recipe, such as expressions (if, unless, etc.), case statements, loop statements, arrays, hashes, and variables. In Ruby, the conditionals &lt;code&gt;nil&lt;/code&gt; and &lt;code&gt;false&lt;/code&gt; are false; every other conditional is &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">Ruby로 수행 할 수있는 모든 것은 표현식 (if, if 등), case 문, loop 문, 배열, 해시 및 변수와 같은 레시피 내에서 사용될 수 있습니다. Ruby에서 조건부 &lt;code&gt;nil&lt;/code&gt; 과 &lt;code&gt;false&lt;/code&gt; 는 false입니다. 다른 모든 조건은 &lt;code&gt;true&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="327347ee8d3a0f9bb3a74835ec6a91f7a545513b" translate="yes" xml:space="preserve">
          <source>Apache Qpid</source>
          <target state="translated">아파치 Qpid</target>
        </trans-unit>
        <trans-unit id="b6be50237f89783f0620e526091e23959d03f3a9" translate="yes" xml:space="preserve">
          <source>Apache Solr</source>
          <target state="translated">아파치 솔러</target>
        </trans-unit>
        <trans-unit id="d04af15aa636a70a5023c30a71d4c7f5c9238e3b" translate="yes" xml:space="preserve">
          <source>AppArmor</source>
          <target state="translated">AppArmor</target>
        </trans-unit>
        <trans-unit id="ea938c5647f2489ca5e54a6d6b5fe26f12baae6d" translate="yes" xml:space="preserve">
          <source>Append cookbook versions to cookbooks. Set to &lt;code&gt;false&lt;/code&gt; to hide cookbook versions: &lt;code&gt;cookbooks/apache&lt;/code&gt;. Set to &lt;code&gt;true&lt;/code&gt; to show cookbook versions: &lt;code&gt;cookbooks/apache-1.0.0&lt;/code&gt; and/or &lt;code&gt;cookbooks/apache-1.0.1&lt;/code&gt;. When this setting is &lt;code&gt;true&lt;/code&gt;, &lt;code&gt;knife download&lt;/code&gt; downloads ALL cookbook versions, which can be useful if a full-fidelity backup of data on the Chef server is required. For example:</source>
          <target state="translated">요리 책 버전을 요리 책에 추가하십시오. 요리 책 버전을 숨기려면 &lt;code&gt;false&lt;/code&gt; 로 설정하십시오 : &lt;code&gt;cookbooks/apache&lt;/code&gt; . &lt;code&gt;cookbooks/apache-1.0.0&lt;/code&gt; 및 / 또는 &lt;code&gt;cookbooks/apache-1.0.1&lt;/code&gt; 요리법 버전을 표시 하려면 &lt;code&gt;true&lt;/code&gt; 로 설정하십시오 . 이 설정이 &lt;code&gt;true&lt;/code&gt; 이면 , &lt;code&gt;knife download&lt;/code&gt; 모든 요리 책 버전을 다운로드하며, Chef 서버에서 데이터의 전체 충실도 백업이 필요한 경우 유용 할 수 있습니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="7136e3fbdb8393932c4285ff6980427720d76f69" translate="yes" xml:space="preserve">
          <source>Apple XCode is installed on machines running Mac OS X; this application can be downloaded from Apple for free</source>
          <target state="translated">Apple XCode는 Mac OS X을 실행하는 컴퓨터에 설치됩니다. 이 응용 프로그램은 Apple에서 무료로 다운로드 할 수 있습니다</target>
        </trans-unit>
        <trans-unit id="b291beb8793f4f3308c463951165dad483715a6c" translate="yes" xml:space="preserve">
          <source>Application</source>
          <target state="translated">Application</target>
        </trans-unit>
        <trans-unit id="524dbe4bae007b1b968c60cbd91a98094a28e18b" translate="yes" xml:space="preserve">
          <source>Application Checks</source>
          <target state="translated">응용 프로그램 확인</target>
        </trans-unit>
        <trans-unit id="7f97e4616b36343fb454813ae885c0cb61aa730a" translate="yes" xml:space="preserve">
          <source>Application logs are created by the services directly, and may require log rotation policies to be applied based on organizational goals and the platform(s) on which the services are running.</source>
          <target state="translated">응용 프로그램 로그는 서비스에서 직접 생성되며 조직 목표와 서비스가 실행되는 플랫폼을 기반으로 로그 순환 정책을 적용해야 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0b54a95ce06000d3a3d1e0eae4f70eb9fd2f6909" translate="yes" xml:space="preserve">
          <source>Application-level checks should be done periodically to ensure that there is enough disk space, enough memory, and that the front-end and back-end services are communicating.</source>
          <target state="translated">충분한 디스크 공간, 충분한 메모리 및 프론트 엔드 및 백엔드 서비스가 통신 중인지 확인하기 위해 애플리케이션 레벨 점검을 주기적으로 수행해야합니다.</target>
        </trans-unit>
        <trans-unit id="905ac905aa96c9d999fec86db42f9d47b856e803" translate="yes" xml:space="preserve">
          <source>Apply atomic file updates to all resources. Set to &lt;code&gt;true&lt;/code&gt; for global atomic file updates. Set to &lt;code&gt;false&lt;/code&gt; for global non-atomic file updates. (Use the &lt;code&gt;atomic_update&lt;/code&gt; setting on a per-resource basis to override this setting.) Default value: &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">모든 자원에 원자 파일 업데이트를 적용하십시오. 글로벌 원자 파일 업데이트의 &lt;code&gt;true&lt;/code&gt; 로 설정하십시오 . 글로벌 비 원자 파일 업데이트의 경우 &lt;code&gt;false&lt;/code&gt; 로 설정하십시오 . 이 설정을 재정의하려면 자원별로 &lt;code&gt;atomic_update&lt;/code&gt; 설정을 사용하십시오 . 기본값 : &lt;code&gt;true&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="54ec507c0ec8ec62e977d81f32b10dcb2b6884f9" translate="yes" xml:space="preserve">
          <source>Apply to Run-lists</source>
          <target state="translated">런리스트에 적용</target>
        </trans-unit>
        <trans-unit id="82f296cf2e676313e5f813af0b25ff521611d80a" translate="yes" xml:space="preserve">
          <source>Arbitrary options to be added to the bootstrap command when using GNU Wget. This option may not be used in the same command with &lt;code&gt;--bootstrap-install-command&lt;/code&gt;.</source>
          <target state="translated">GNU Wget을 사용할 때 bootstrap 명령에 임의의 옵션이 추가됩니다. 이 옵션은 &lt;code&gt;--bootstrap-install-command&lt;/code&gt; 와 동일한 명령에서 사용할 수 없습니다 .</target>
        </trans-unit>
        <trans-unit id="29618365e98e41a272e8073b1da7d4d84c52e0f1" translate="yes" xml:space="preserve">
          <source>Arbitrary options to be added to the bootstrap command when using cURL. This option may not be used in the same command with &lt;code&gt;--bootstrap-install-command&lt;/code&gt;.</source>
          <target state="translated">cURL을 사용할 때 부트 스트랩 명령에 추가 할 임의 옵션. 이 옵션은 &lt;code&gt;--bootstrap-install-command&lt;/code&gt; 와 동일한 명령에서 사용할 수 없습니다 .</target>
        </trans-unit>
        <trans-unit id="0a89342e9fcb31a038f4068e38847b411ea691af" translate="yes" xml:space="preserve">
          <source>Arch Linux</source>
          <target state="translated">아치 리눅스</target>
        </trans-unit>
        <trans-unit id="b040b4179b8b00702858fdb4c1afec3d6d284509" translate="yes" xml:space="preserve">
          <source>Architecture</source>
          <target state="translated">Architecture</target>
        </trans-unit>
        <trans-unit id="53b82aa6782d38757a638452293db06fae00a47e" translate="yes" xml:space="preserve">
          <source>Are grouped into recipes, which describe working configurations</source>
          <target state="translated">작업 구성을 설명하는 레시피로 그룹화됩니다.</target>
        </trans-unit>
        <trans-unit id="cbb9fa252e60809efa55a7ad83aea5438ef56753" translate="yes" xml:space="preserve">
          <source>Arguments</source>
          <target state="translated">Arguments</target>
        </trans-unit>
        <trans-unit id="3f2f90b5ef730527132a6b958e629066ae2382f1" translate="yes" xml:space="preserve">
          <source>Array Syntax Shortcut</source>
          <target state="translated">배열 구문 바로 가기</target>
        </trans-unit>
        <trans-unit id="b90cc9bfd23567a2ff5ba1f00e7c63ca6da8755e" translate="yes" xml:space="preserve">
          <source>Arrays</source>
          <target state="translated">Arrays</target>
        </trans-unit>
        <trans-unit id="cb57eb70fd0214151fa6fd571b44b9fd6c3a34eb" translate="yes" xml:space="preserve">
          <source>As a Definition</source>
          <target state="translated">정의로</target>
        </trans-unit>
        <trans-unit id="1937aa03d59efa11b8c33c539dafa16cad84b164" translate="yes" xml:space="preserve">
          <source>As a Resource</source>
          <target state="translated">자원으로서</target>
        </trans-unit>
        <trans-unit id="5b8b4f2c6672b008f7fc20ac6996ac59cdb452f5" translate="yes" xml:space="preserve">
          <source>As a root user, install the Chef server package on the server, using the name of the package provided by Chef. For Red Hat and CentOS 6:</source>
          <target state="translated">루트 사용자로서 Chef가 제공 한 패키지 이름을 사용하여 Chef 서버 패키지를 서버에 설치하십시오. Red Hat 및 CentOS 6의 경우 :</target>
        </trans-unit>
        <trans-unit id="ccea1d4fcbb4df07e323cd17558c335f0db3840b" translate="yes" xml:space="preserve">
          <source>As a user that is a member of the &lt;code&gt;admins&lt;/code&gt; group, replace &lt;code&gt;ORGNAME&lt;/code&gt; with your own &lt;code&gt;ORGNAME&lt;/code&gt; and run:</source>
          <target state="translated">&lt;code&gt;admins&lt;/code&gt; 그룹 의 구성원 인 사용자로서 &lt;code&gt;ORGNAME&lt;/code&gt; 을 자신의 &lt;code&gt;ORGNAME&lt;/code&gt; 으로 바꾸고 다음을 실행하십시오.</target>
        </trans-unit>
        <trans-unit id="b36234f36f3836f47cb6970bbf6bd451d60da7b3" translate="yes" xml:space="preserve">
          <source>As an array:</source>
          <target state="translated">배열로 :</target>
        </trans-unit>
        <trans-unit id="fd467d5eb9ddf9df5ee2053def7d685b7329b720" translate="yes" xml:space="preserve">
          <source>As an example, to retrieve users whos &lt;code&gt;external_authentication_uid&lt;/code&gt; is &lt;code&gt;jane@doe.com&lt;/code&gt;, you would do the following:</source>
          <target state="translated">예를 들어 &lt;code&gt;external_authentication_uid&lt;/code&gt; 가 &lt;code&gt;jane@doe.com&lt;/code&gt; 인 사용자를 검색 하려면 다음을 수행하십시오.</target>
        </trans-unit>
        <trans-unit id="36b3fe842fdb3c2c5cdbe60610f94e4ae216ec25" translate="yes" xml:space="preserve">
          <source>As long as a USER.pem is also present on the workstation from which the validatorless bootstrap operation will be initiated, the bootstrap operation will run and will use the USER.pem file instead of the ORGANIZATION-validator.pem file.</source>
          <target state="translated">유효성 검증기없는 부트 스트랩 조작이 시작될 워크 스테이션에 USER.pem이있는 경우 부트 스트랩 조작이 실행되고 ORGANIZATION-validator.pem 파일 대신 USER.pem 파일이 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="5e3b209d83616410c5c6a42dfaefc0555bec65b8" translate="yes" xml:space="preserve">
          <source>As long as good source code management is practiced with cookbooks and other files in the chef-repo, any missing bits can be re-uploaded after there is a working cluster. In some cases, newly-created users or organizations will need to be re-created. Other actions, such as chef-client runs and uploads may fail while the cluster is in an &lt;code&gt;Inconsistent&lt;/code&gt; state, but will be fine after there is a working cluster.</source>
          <target state="translated">chef-repo에서 요리 책 및 기타 파일을 사용하여 소스 코드 관리를 제대로 수행하는 한 클러스터가 작동하면 누락 된 비트를 다시 업로드 할 수 있습니다. 경우에 따라 새로 만든 사용자 또는 조직을 다시 만들어야 할 수도 있습니다. 클러스터가 &lt;code&gt;Inconsistent&lt;/code&gt; 상태 인 동안 chef-client 실행 및 업로드와 같은 다른 조치가 실패 할 수 있지만 작동중인 클러스터가 있으면 정상입니다.</target>
        </trans-unit>
        <trans-unit id="7f0f6eb43a2a02eade40d1faee96ba15cb7af150" translate="yes" xml:space="preserve">
          <source>As part of &lt;a href=&quot;#chef-client-the-chef-client-run&quot;&gt;every chef-client run&lt;/a&gt;, the chef-client authenticates to the Chef server using an RSA private key and the Chef server API.</source>
          <target state="translated">&lt;a href=&quot;#chef-client-the-chef-client-run&quot;&gt;모든 chef-client run의&lt;/a&gt; 일부로 chef-client 는 RSA 개인 키와 Chef 서버 API를 사용하여 Chef 서버에 인증합니다.</target>
        </trans-unit>
        <trans-unit id="78a809875fd598f4ebb24027a649537aa079d58d" translate="yes" xml:space="preserve">
          <source>As part of the chef-client run, where audit-mode runs after all resources have been converged on the node</source>
          <target state="translated">모든 리소스가 노드에 수렴 된 후 감사 모드가 실행되는 chef-client 실행의 일부</target>
        </trans-unit>
        <trans-unit id="d7eb5ec947e5501e4246a28063a6471908e5ea2e" translate="yes" xml:space="preserve">
          <source>As root on the Chef server, point to the bundled &lt;code&gt;eper&lt;/code&gt; package of debugging tools. Replace the 2nd and 5th path entries and the &lt;code&gt;X.XX.X&lt;/code&gt; value in the following path with the items that occur on the system.</source>
          <target state="translated">Chef 서버의 루트로서 번들로 제공되는 &lt;code&gt;eper&lt;/code&gt; 패키지의 디버깅 도구를 가리 킵니다 . 다음 경로 의 두 번째 및 다섯 번째 경로 항목과 &lt;code&gt;X.XX.X&lt;/code&gt; 값을 시스템에서 발생하는 항목으로 바꾸십시오 .</target>
        </trans-unit>
        <trans-unit id="3cd2efc2e68fcb076cea000b241c808d43890cdd" translate="yes" xml:space="preserve">
          <source>As the queue depth increases it may take longer for updates posted to the Chef server by each chef-client to be added to the search indexes on the Chef server. The depth of this queue should be monitored using the following command:</source>
          <target state="translated">큐 깊이가 증가함에 따라 각 Chef-Client가 Chef 서버에 게시 한 업데이트가 Chef 서버의 검색 색인에 추가되는 데 시간이 더 걸릴 수 있습니다. 이 큐의 깊이는 다음 명령을 사용하여 모니터링해야합니다.</target>
        </trans-unit>
        <trans-unit id="57f17574efd73916f01b13e96de2424f3a96a8fc" translate="yes" xml:space="preserve">
          <source>Assemble a previously created array into an active array.</source>
          <target state="translated">이전에 생성 한 어레이를 활성 어레이로 조립합니다.</target>
        </trans-unit>
        <trans-unit id="858729fff0a41cec1905d6b83452556d173b4dc1" translate="yes" xml:space="preserve">
          <source>Assign Dependencies</source>
          <target state="translated">종속성 할당</target>
        </trans-unit>
        <trans-unit id="06fb46b73786d060a421debe477236595eb5e067" translate="yes" xml:space="preserve">
          <source>Assign a local variable:</source>
          <target state="translated">지역 변수를 지정하십시오.</target>
        </trans-unit>
        <trans-unit id="7f980e41d2e4d29db8fa522911b6603f59fb2a85" translate="yes" xml:space="preserve">
          <source>Assign a value</source>
          <target state="translated">값을 할당</target>
        </trans-unit>
        <trans-unit id="bd5586d4e25740342c74394366abcc20ea1a18c7" translate="yes" xml:space="preserve">
          <source>Assigning the virtual IP address and sending a &lt;code&gt;proxy-arp&lt;/code&gt;; this step transitions the virtual IP address, which means traffic will flow to the back-end Chef server while it makes the transition to becoming the primary Chef server.</source>
          <target state="translated">가상 IP 주소 할당 및 &lt;code&gt;proxy-arp&lt;/code&gt; 전송 ; 이 단계는 가상 IP 주소를 전환합니다. 즉, 트래픽이 백엔드 Chef 서버로 흐르고 기본 Chef 서버로 전환됩니다.</target>
        </trans-unit>
        <trans-unit id="e83dfb0a5299bee79cf1797002a855998dbb8e83" translate="yes" xml:space="preserve">
          <source>Assigns an instance name of &lt;code&gt;httpd_site&lt;/code&gt; that uses port 81</source>
          <target state="translated">포트 81을 사용 하는 &lt;code&gt;httpd_site&lt;/code&gt; 의 인스턴스 이름을 지정 합니다.</target>
        </trans-unit>
        <trans-unit id="818176fa77e247cc3a5e7d7d3b8cf37b726dae38" translate="yes" xml:space="preserve">
          <source>Associate a user with an organization and add them to the &lt;code&gt;admins&lt;/code&gt; and &lt;code&gt;billing_admins&lt;/code&gt; security groups.</source>
          <target state="translated">사용자를 조직과 연관시키고 &lt;code&gt;admins&lt;/code&gt; 및 &lt;code&gt;billing_admins&lt;/code&gt; 보안 그룹에 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="8b593995c88f61a609044a01e37e8e4ccc22e065" translate="yes" xml:space="preserve">
          <source>Assumptions</source>
          <target state="translated">Assumptions</target>
        </trans-unit>
        <trans-unit id="06ab452e5e4de71a3cb78a52303bb0b02b82c3e6" translate="yes" xml:space="preserve">
          <source>Asynchronous Resources</source>
          <target state="translated">비동기 리소스</target>
        </trans-unit>
        <trans-unit id="b3104570f2c7cab4118f3d3535b642513f011bad" translate="yes" xml:space="preserve">
          <source>Asynchronous block level replication of logical volume managers, positioned between the two back-end machines</source>
          <target state="translated">두 백엔드 시스템 사이에 위치한 논리 볼륨 관리자의 비동기 블록 레벨 복제</target>
        </trans-unit>
        <trans-unit id="0b7c543c3f646745346e5051aff83c778080c638" translate="yes" xml:space="preserve">
          <source>At any given time, only one DRBD host has &lt;code&gt;userland&lt;/code&gt; access to data, This host is referred to as the primary node. The other host runs the DRBD daemon, but cannot mount the storage into the file system. The secondary node receives information from the primary node, and then replicates disk actions on its local storage copy (even if the partition looks like it doesn&amp;rsquo;t have a file system to which a &lt;code&gt;mount&lt;/code&gt; command can be sent).</source>
          <target state="translated">주어진 시간에 단 하나의 DRBD 호스트 만 데이터에 대한 &lt;code&gt;userland&lt;/code&gt; 액세스 권한을 갖습니다 .이 호스트를 기본 노드라고합니다. 다른 호스트는 DRBD 데몬을 실행하지만 스토리지를 파일 시스템에 마운트 할 수 없습니다. 보조 노드는 기본 노드에서 정보를 수신 한 후 로컬 스토리지 사본에서 디스크 조치를 복제합니다 (파티션에 &lt;code&gt;mount&lt;/code&gt; 명령을 보낼 수 있는 파일 시스템이없는 것처럼 보이더라도 ).</target>
        </trans-unit>
        <trans-unit id="9d71cbf1915844bcd437759638f196186484ad88" translate="yes" xml:space="preserve">
          <source>At least one action (actions tell the chef-client what to do)</source>
          <target state="translated">하나 이상의 작업 (작업이 요리사 클라이언트에게 수행 할 작업을 알려줍니다)</target>
        </trans-unit>
        <trans-unit id="f95cedf3c66158b0b35f13f6c0c2243a53fdc480" translate="yes" xml:space="preserve">
          <source>At the beginning of a chef-client run, all attributes are reset. The chef-client rebuilds them using automatic attributes collected by Ohai at the beginning of the chef-client run and then using default and override attributes that are specified in cookbooks or by roles and environments. Normal attributes are never reset. All attributes are then merged and applied to the node according to attribute precedence. At the conclusion of the chef-client run, the attributes that were applied to the node are saved to the Chef server as part of the node object.</source>
          <target state="translated">chef-client 실행이 시작되면 모든 속성이 재설정됩니다. 요리사-클라이언트는 요리사-클라이언트 실행을 시작할 때 Ohai가 수집 한 자동 속성을 사용하여 요리 책을 만들거나 요리 책이나 역할 및 환경에 지정된 기본 및 재정의 속성을 사용하여이를 재구성합니다. 일반 속성은 재설정되지 않습니다. 그런 다음 모든 속성이 속성 우선 순위에 따라 병합되어 노드에 적용됩니다. chef-client 실행이 끝나면 노드에 적용된 속성이 노드 오브젝트의 일부로 Chef 서버에 저장됩니다.</target>
        </trans-unit>
        <trans-unit id="184942f4aa8da74441a65d20bc162311e7bec185" translate="yes" xml:space="preserve">
          <source>At the end of every chef-client run, the node object is saved to the Chef server. From the Chef server, each node object is then added to the &lt;code&gt;SOLR&lt;/code&gt; search index. This process is asynchronous. By default, node objects are committed to the search index every 60 seconds or per 1000 node objects, whichever occurs first.</source>
          <target state="translated">모든 chef-client 실행이 끝나면 노드 오브젝트가 Chef 서버에 저장됩니다. Chef 서버에서 각 노드 오브젝트가 &lt;code&gt;SOLR&lt;/code&gt; 검색 색인에 추가됩니다 . 이 프로세스는 비동기 적입니다. 기본적으로 노드 개체는 60 초마다 또는 1000 개 노드 개체 중 빠른 시간에 검색 인덱스에 커밋됩니다.</target>
        </trans-unit>
        <trans-unit id="617126bfcd6bd80167d43a4e1f5212a1e5bfbe92" translate="yes" xml:space="preserve">
          <source>At the end of every chef-client run, the node object is saved to the Chef server. From the Chef server, each node object is then added to the Apache Solr search index. This process is asynchronous. By default, node objects are committed to the search index every 60 seconds or per 1000 node objects, whichever occurs first.</source>
          <target state="translated">모든 chef-client 실행이 끝나면 노드 오브젝트가 Chef 서버에 저장됩니다. Chef 서버에서 각 노드 오브젝트가 Apache Solr 검색 색인에 추가됩니다. 이 프로세스는 비동기 적입니다. 기본적으로 노드 개체는 60 초마다 또는 1000 개 노드 개체 중 빠른 시간에 검색 인덱스에 커밋됩니다.</target>
        </trans-unit>
        <trans-unit id="5284052651bf51e5d94fad49a974a1f7daa7d475" translate="yes" xml:space="preserve">
          <source>At the end, the recipe is using the &lt;code&gt;notifies&lt;/code&gt; property&amp;mdash;a common attribute available to all resources&amp;mdash;to alert two services (named &amp;ldquo;foo&amp;rdquo; and &amp;ldquo;bar&amp;rdquo;) that they should restart.</source>
          <target state="translated">끝에서, 조리법은 사용 &lt;code&gt;notifies&lt;/code&gt; 경고에 리소스를 두 서비스가 다시 시작해야 (이름이 &quot;foo는&quot;과 &quot;바&quot;) 모든 가능한 부동산 - 공통 속성을.</target>
        </trans-unit>
        <trans-unit id="a19f796e764224d98868ca2b6cc9e7643dec4e07" translate="yes" xml:space="preserve">
          <source>At this point, all users should be able to use their Active Directory or LDAP usernames and passwords to log in to the Chef server.</source>
          <target state="translated">이 시점에서 모든 사용자는 Active Directory 또는 LDAP 사용자 이름과 비밀번호를 사용하여 Chef 서버에 로그인 할 수 있어야합니다.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
