<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="chef">
    <body>
      <group id="chef">
        <trans-unit id="6067a41244fa02806d0f404a6a500cd9a6cdd535" translate="yes" xml:space="preserve">
          <source>At this point, the new host should be synchronizing with the secondary back-end server. The secondary back-end server will forget all about the data it was missing from the now-gone primary back-end server, and the process of bringing the Chef server back online can begin.</source>
          <target state="translated">이때 새 호스트는 보조 백엔드 서버와 동기화되어야합니다. 보조 백엔드 서버는 이제 사라진 기본 백엔드 서버에서 누락 된 데이터를 모두 잊어 버리고 Chef 서버를 다시 온라인으로 전환하는 프로세스를 시작할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e59dfe7f072e09c06cb61f4008964a9e6a9385d9" translate="yes" xml:space="preserve">
          <source>At this time, only the users &lt;code&gt;sean_horn&lt;/code&gt; and &lt;code&gt;angle&lt;/code&gt; are authorized to read and manage the vault.</source>
          <target state="translated">현재 &lt;code&gt;sean_horn&lt;/code&gt; 및 &lt;code&gt;angle&lt;/code&gt; 사용자 만 볼트를 읽고 관리 할 수 ​​있습니다.</target>
        </trans-unit>
        <trans-unit id="49ab9163a8ceb29e3695cb884b95663dbb239b88" translate="yes" xml:space="preserve">
          <source>Atomic File Updates</source>
          <target state="translated">원자 파일 업데이트</target>
        </trans-unit>
        <trans-unit id="c8e899a441fa17a106696c125382340da1f953bd" translate="yes" xml:space="preserve">
          <source>Atomic updates are enabled by default. They can be managed globally using the &lt;code&gt;file_atomic_update&lt;/code&gt; setting in the client.rb file. They can be managed on a per-resource basis using the &lt;code&gt;atomic_update&lt;/code&gt; property that is available with the &lt;strong&gt;cookbook_file&lt;/strong&gt;, &lt;strong&gt;file&lt;/strong&gt;, &lt;strong&gt;remote_file&lt;/strong&gt;, and &lt;strong&gt;template&lt;/strong&gt; resources.</source>
          <target state="translated">원자 업데이트는 기본적으로 활성화되어 있습니다. client.rb 파일 의 &lt;code&gt;file_atomic_update&lt;/code&gt; 설정을 사용하여 전역 적으로 관리 할 수 ​​있습니다 . &lt;strong&gt;cookbook_file&lt;/strong&gt; , &lt;strong&gt;file&lt;/strong&gt; , &lt;strong&gt;remote_file&lt;/strong&gt; 및 &lt;strong&gt;template&lt;/strong&gt; 자원 과 함께 사용할 수 있는 &lt;code&gt;atomic_update&lt;/code&gt; 특성을 사용하여 자원별로 관리 할 수 ​​있습니다 .&lt;strong&gt;&lt;/strong&gt;&lt;strong&gt;&lt;/strong&gt;&lt;strong&gt;&lt;/strong&gt;&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e7fc053c82238599e8067922471eb420fbbf6026" translate="yes" xml:space="preserve">
          <source>Atomic updates are used with &lt;strong&gt;file&lt;/strong&gt;-based resources to help ensure that file updates can be made when updating a binary or if disk space runs out.</source>
          <target state="translated">이진 파일을 업데이트하거나 디스크 공간이 부족한 경우 파일 업데이트를 수행 할 수 있도록 &lt;strong&gt;파일&lt;/strong&gt; 기반 리소스 와 함께 원자 업데이트가 사용 됩니다.</target>
        </trans-unit>
        <trans-unit id="47c9b01cbc44619c374487e28eb3c03839f456eb" translate="yes" xml:space="preserve">
          <source>Attempting to take over as the primary Chef server for the DRBD device.</source>
          <target state="translated">DRBD 디바이스의 기본 Chef 서버로 인계하려고합니다.</target>
        </trans-unit>
        <trans-unit id="a086d942884a301b827479029ba19c2746237425" translate="yes" xml:space="preserve">
          <source>Attribute</source>
          <target state="translated">Attribute</target>
        </trans-unit>
        <trans-unit id="5809fc789931a8b3a07d65dd0f9460793372546a" translate="yes" xml:space="preserve">
          <source>Attribute Evaluation Order</source>
          <target state="translated">속성 평가 순서</target>
        </trans-unit>
        <trans-unit id="77af70551e42ecdfacd2bd179132c7e56fc1b08c" translate="yes" xml:space="preserve">
          <source>Attribute Files</source>
          <target state="translated">속성 파일</target>
        </trans-unit>
        <trans-unit id="e99fc97a1f7c210260680a5b60a282a0c7d9d2de" translate="yes" xml:space="preserve">
          <source>Attribute Persistence</source>
          <target state="translated">속성 지속성</target>
        </trans-unit>
        <trans-unit id="f439ff4e18ae922bccee721044529af94b8f4f3b" translate="yes" xml:space="preserve">
          <source>Attribute Precedence</source>
          <target state="translated">속성 우선 순위</target>
        </trans-unit>
        <trans-unit id="8b7b1b0061d717ceef36eaead8161e0baf0ff1be" translate="yes" xml:space="preserve">
          <source>Attribute Sources</source>
          <target state="translated">속성 소스</target>
        </trans-unit>
        <trans-unit id="7200477de9f90bdbdcfe2706e7c5cb9ade5e08da" translate="yes" xml:space="preserve">
          <source>Attribute Type</source>
          <target state="translated">속성 유형</target>
        </trans-unit>
        <trans-unit id="9f4f7e4e3b34c76cbba2b04d073edb6d2fe857a8" translate="yes" xml:space="preserve">
          <source>Attribute Types</source>
          <target state="translated">속성 유형</target>
        </trans-unit>
        <trans-unit id="f7dc845d8d36204a8be50543b3dac6d531fc0aa0" translate="yes" xml:space="preserve">
          <source>Attribute files (in cookbooks)</source>
          <target state="translated">속성 파일 (요리 책)</target>
        </trans-unit>
        <trans-unit id="609a08d35568d128cff8d518c3d1fa0a0310b59d" translate="yes" xml:space="preserve">
          <source>Attribute precedence, viewed from the same perspective as the overview diagram, where the numbers in the diagram match the order of attribute precedence:</source>
          <target state="translated">개요 우선 순위와 동일한 관점에서 본 속성 우선 순위 : 다이어그램의 숫자가 우선 순위 우선 순위와 일치합니다.</target>
        </trans-unit>
        <trans-unit id="8c9a40eab9da175a6d3d23dc3899f181cd09a4f8" translate="yes" xml:space="preserve">
          <source>Attribute precedence, when viewed as a table:</source>
          <target state="translated">테이블로 볼 때 속성 우선 순위 :</target>
        </trans-unit>
        <trans-unit id="3fe5f18712254009ad829e3487d7a7aa92224178" translate="yes" xml:space="preserve">
          <source>Attribute values</source>
          <target state="translated">속성 값</target>
        </trans-unit>
        <trans-unit id="a6652617f2c799eb11ee727b16c5646c48af6905" translate="yes" xml:space="preserve">
          <source>Attributes</source>
          <target state="translated">Attributes</target>
        </trans-unit>
        <trans-unit id="21fa130a26fa5adcc94b8ddeb1e5b42dc30557c8" translate="yes" xml:space="preserve">
          <source>Attributes are always applied by the chef-client in the following order:</source>
          <target state="translated">Chef-Client는 항상 다음 순서로 속성을 적용합니다.</target>
        </trans-unit>
        <trans-unit id="5134bd448c6e81f4bd98af95eeda28ac49f7b4c2" translate="yes" xml:space="preserve">
          <source>Attributes are defined by:</source>
          <target state="translated">속성은 다음에 의해 정의됩니다.</target>
        </trans-unit>
        <trans-unit id="16ee0be748cbf871a8fa4ca3eb2ec5f5324388c4" translate="yes" xml:space="preserve">
          <source>Attributes are provided to the chef-client from the following locations:</source>
          <target state="translated">다음 위치에서 요리사 클라이언트에게 속성이 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="8dd5bb0914abbfdc64b5eac84eb9921f6928083a" translate="yes" xml:space="preserve">
          <source>Attributes are typically defined in cookbooks, recipes, roles, and environments. These attributes are rolled-up to the node level during a chef-client run. A recipe can store attribute values using a multi-level Hash or array.</source>
          <target state="translated">속성은 일반적으로 요리 책, 레시피, 역할 및 환경에서 정의됩니다. 이러한 속성은 chef-client 실행 중에 노드 레벨로 롤업됩니다. 레시피는 다중 레벨 해시 또는 배열을 사용하여 속성 값을 저장할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="cdaeb6eda2cbbd47ab00e089f60a4539a6377cf7" translate="yes" xml:space="preserve">
          <source>Attributes are whitelisted by attribute type, with each attribute type being whitelisted independently. Each attribute type&amp;mdash;&lt;code&gt;automatic&lt;/code&gt;, &lt;code&gt;default&lt;/code&gt;, &lt;code&gt;normal&lt;/code&gt;, and &lt;code&gt;override&lt;/code&gt;&amp;mdash;may define whitelists by using the following settings in the client.rb file:</source>
          <target state="translated">속성은 속성 유형별로 허용되며 각 속성 유형은 독립적으로 허용됩니다. 각 속성 유형 ( &lt;code&gt;automatic&lt;/code&gt; , &lt;code&gt;default&lt;/code&gt; , &lt;code&gt;normal&lt;/code&gt; 및 &lt;code&gt;override&lt;/code&gt; ) 은 client.rb 파일에서 다음 설정을 사용하여 화이트리스트를 정의 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="577c3be005618e163a94cffa1a6608265d49e096" translate="yes" xml:space="preserve">
          <source>Attributes can be configured in cookbooks (attribute files and recipes), roles, and environments. In addition, Ohai collects attribute data about each node at the start of the chef-client run. See &lt;a href=&quot;https://docs.chef.io/attributes.html&quot;&gt;https://docs.chef.io/attributes.html&lt;/a&gt; for more information about how all of these attributes fit together.</source>
          <target state="translated">요리 책 (속성 파일 및 레시피), 역할 및 환경에서 속성을 구성 할 수 있습니다. 또한 Ohai는 chef-client run 시작시 각 노드에 대한 속성 데이터를 수집합니다. 이러한 모든 특성이 어떻게 결합되는지에 대한 자세한 내용은 &lt;a href=&quot;https://docs.chef.io/attributes.html&quot;&gt;https://docs.chef.io/attributes.html&lt;/a&gt; 을 참조 하십시오 .</target>
        </trans-unit>
        <trans-unit id="156a413c6e8bb3ccdd706df06d8eacc012cff96c" translate="yes" xml:space="preserve">
          <source>Attributes sometimes depend on actions taken from within recipes, so it may be necessary to reload a given attribute from within a recipe. For example:</source>
          <target state="translated">속성은 때때로 레시피 내에서 취한 조치에 따라 달라 지므로, 레시피 내에서 지정된 속성을 다시로드해야 할 수도 있습니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="31458a40e8d1b0dabc0e735cebc8396eb0d6a191" translate="yes" xml:space="preserve">
          <source>Attributes that are collected by Ohai are automatic attributes, in that these attributes are used by the chef-client to ensure that these attributes remain unchanged after the chef-client is done configuring the node.</source>
          <target state="translated">Ohai가 수집 한 속성은 자동 속성이며, 이러한 속성은 chef-client가 노드 구성을 완료 한 후에도 이러한 속성이 변경되지 않도록하기 위해 chef-client에서 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="be82aec0f2a97d56f68b7e603805db1a8754af10" translate="yes" xml:space="preserve">
          <source>Attributes that should be saved by a node may be whitelisted in the client.rb file. The whitelist is a Hash of keys that specify each attribute to be saved.</source>
          <target state="translated">노드가 저장해야하는 속성은 client.rb 파일에 화이트리스트에있을 수 있습니다. 화이트리스트는 저장할 각 속성을 지정하는 키 해시입니다.</target>
        </trans-unit>
        <trans-unit id="5991165ff7e4c219905623028b74233b72e1cfff" translate="yes" xml:space="preserve">
          <source>Authenticated API Requests</source>
          <target state="translated">인증 된 API 요청</target>
        </trans-unit>
        <trans-unit id="ee1acfa55eb1476c86c5c4a68f256a67b25289ab" translate="yes" xml:space="preserve">
          <source>Authentication</source>
          <target state="translated">Authentication</target>
        </trans-unit>
        <trans-unit id="e9a482c3e6fdbaf6f0ce7ac1850719d22739b824" translate="yes" xml:space="preserve">
          <source>Authentication Headers</source>
          <target state="translated">인증 헤더</target>
        </trans-unit>
        <trans-unit id="4208b7d5916b6e981c4115bba82715936a4a135a" translate="yes" xml:space="preserve">
          <source>Authentication or authorization</source>
          <target state="translated">인증 또는 권한</target>
        </trans-unit>
        <trans-unit id="12624bb509e41c5e9e239fc581c27ccd77c4112f" translate="yes" xml:space="preserve">
          <source>Authentication to the Chef server occurs when a specific set of HTTP headers are signed using a private key that is associated with the machine from which the request is made. The request is authorized if the Chef server can verify the signature using the public key. Only authorized actions are allowed.</source>
          <target state="translated">Chef 서버에 대한 인증은 특정 HTTP 헤더 세트가 요청 된 기계와 연관된 개인 키를 사용하여 서명 될 때 발생합니다. Chef 서버가 공개 키를 사용하여 서명을 확인할 수 있으면 요청이 승인됩니다. 승인 된 작업 만 허용됩니다.</target>
        </trans-unit>
        <trans-unit id="e919dd3548ee21af2b234bad6ddb01192e169d38" translate="yes" xml:space="preserve">
          <source>Authentication, Authorization</source>
          <target state="translated">인증, 인증</target>
        </trans-unit>
        <trans-unit id="5e25ce007aa95ea2ea8b158aee9c630a32ea5616" translate="yes" xml:space="preserve">
          <source>Authorization</source>
          <target state="translated">Authorization</target>
        </trans-unit>
        <trans-unit id="6665e344ddd5f4f3c3b0845e8f46eb325337d350" translate="yes" xml:space="preserve">
          <source>Automatic (Ohai)</source>
          <target state="translated">자동 (오 하이)</target>
        </trans-unit>
        <trans-unit id="ad323278039669f3f916bc62c7c7fc17b075537d" translate="yes" xml:space="preserve">
          <source>Automatic Proxy Config</source>
          <target state="translated">자동 프록시 구성</target>
        </trans-unit>
        <trans-unit id="1ccc740c95deecb7012696544174ab11024ce93a" translate="yes" xml:space="preserve">
          <source>Automatically handles authentication</source>
          <target state="translated">인증 자동 처리</target>
        </trans-unit>
        <trans-unit id="a129f1f55f313122fe7dafb7ef1113a6642b3d70" translate="yes" xml:space="preserve">
          <source>Automatically supports why-run mode, unlike custom resources</source>
          <target state="translated">사용자 지정 리소스와 달리 이유 실행 모드를 자동으로 지원</target>
        </trans-unit>
        <trans-unit id="0ba300730fa9fb6b6229a4d5ed08ab0455ad4a3d" translate="yes" xml:space="preserve">
          <source>Available Memory</source>
          <target state="translated">사용 가능한 메모리</target>
        </trans-unit>
        <trans-unit id="dc2371fe4ccb3f3ccf8c4302e9f03e65d17c5466" translate="yes" xml:space="preserve">
          <source>Avoid the following patterns:</source>
          <target state="translated">다음 패턴을 피하십시오.</target>
        </trans-unit>
        <trans-unit id="3b6488e9f997b0ee6944f5c9326c56f3a166328c" translate="yes" xml:space="preserve">
          <source>Back End</source>
          <target state="translated">백엔드</target>
        </trans-unit>
        <trans-unit id="fdfea2af9997ba09a816ece6501fca7c023e89e8" translate="yes" xml:space="preserve">
          <source>Back-end machines are scaled vertically by adding memory, processing power, and faster disks to increase throughput, by adding faster disks and dedicated network interface cards to increase the reliability of DRBD and the responsiveness of the Chef server. Failover is achieved using:</source>
          <target state="translated">DRBD의 안정성과 Chef 서버의 응답 성을 높이기 위해 더 빠른 디스크와 전용 네트워크 인터페이스 카드를 추가하여 처리량을 늘리기 위해 메모리, 처리 능력 및 더 빠른 디스크를 추가하여 백엔드 시스템을 수직으로 확장합니다. 장애 조치는 다음을 사용하여 수행됩니다.</target>
        </trans-unit>
        <trans-unit id="940abf9ad3d7c633569d3f3529df53dfdb5b4837" translate="yes" xml:space="preserve">
          <source>Back-end machines handle data storage and retrieval, messaging and routing, analytics processing, and search. Back-end machines should be configured for failover using block level replication.</source>
          <target state="translated">백엔드 시스템은 데이터 저장 및 검색, 메시징 및 라우팅, 분석 처리 및 검색을 처리합니다. 백엔드 시스템은 블록 레벨 복제를 사용하여 장애 조치를 수행하도록 구성해야합니다.</target>
        </trans-unit>
        <trans-unit id="2759124b25ea67d5a5f358b1fadabe1f30b249b5" translate="yes" xml:space="preserve">
          <source>Back-end server #1 fails gracefully (all data is synced)</source>
          <target state="translated">백엔드 서버 # 1이 정상적으로 실패합니다 (모든 데이터가 동기화 됨)</target>
        </trans-unit>
        <trans-unit id="dc330d5d3fdb66614bfc685e03599af7e41c6930" translate="yes" xml:space="preserve">
          <source>Back-end server #1 hard fails badly (unsynced data)</source>
          <target state="translated">백엔드 서버 # 1 하드 실패 (동기화되지 않은 데이터)</target>
        </trans-unit>
        <trans-unit id="5f315bfee58c6e531615c7454b4c241a8007f343" translate="yes" xml:space="preserve">
          <source>Back-end server #2 fails gracefully (all data is synced)</source>
          <target state="translated">백엔드 서버 # 2가 정상적으로 실패합니다 (모든 데이터가 동기화 됨)</target>
        </trans-unit>
        <trans-unit id="89a1f6fa4123e416399e2abbe6bed6ee5b34a574" translate="yes" xml:space="preserve">
          <source>Back-end server #2 hard fails badly (unsynced data)</source>
          <target state="translated">백엔드 서버 # 2 하드 실패 (동기화되지 않은 데이터)</target>
        </trans-unit>
        <trans-unit id="e758ca64563fdd62965a2b97b76d555b1a70d938" translate="yes" xml:space="preserve">
          <source>Backend</source>
          <target state="translated">Backend</target>
        </trans-unit>
        <trans-unit id="2ebda77533302b4c6618b180e6d9de88e4d4cae3" translate="yes" xml:space="preserve">
          <source>Backend servers &lt;a href=&quot;http://www.drbd.org/users-guide/s-prepare-network.html&quot;&gt;should have a dedicated connection&lt;/a&gt;. This is required for replication between the two servers.</source>
          <target state="translated">백엔드 서버 &lt;a href=&quot;http://www.drbd.org/users-guide/s-prepare-network.html&quot;&gt;에는 전용 연결이 있어야합니다&lt;/a&gt; . 두 서버 간의 복제에 필요합니다.</target>
        </trans-unit>
        <trans-unit id="8c7d9d2c30522cdf997cdc45141c1917c87b4597" translate="yes" xml:space="preserve">
          <source>Backend servers make use of a single Amazon Elastic Block Store (EBS) volume.</source>
          <target state="translated">백엔드 서버는 단일 Amazon Elastic Block Store (EBS) 볼륨을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="e382920577fc766a77124fe6edd508d0fe43ef89" translate="yes" xml:space="preserve">
          <source>Backend servers will share a virtual IP address that must also be accessible from each frontend server. This virtual IP address is created and managed by the Chef server, but will also need to be added to the DNS so that all servers in the high availability configuration may access it.</source>
          <target state="translated">백엔드 서버는 각 프런트 엔드 서버에서 액세스 할 수있는 가상 IP 주소를 공유합니다. 이 가상 IP 주소는 Chef 서버에서 작성 및 관리하지만 고 가용성 구성의 모든 서버가 액세스 할 수 있도록 DNS에 추가해야합니다.</target>
        </trans-unit>
        <trans-unit id="dd96994d01e723dd6f9b0bdb6119722dbeb9faf0" translate="yes" xml:space="preserve">
          <source>Backup</source>
          <target state="translated">Backup</target>
        </trans-unit>
        <trans-unit id="e29ccd471022564865582470f68008a844ad7749" translate="yes" xml:space="preserve">
          <source>Backup / Restore</source>
          <target state="translated">백업 / 복원</target>
        </trans-unit>
        <trans-unit id="a5932464fe7ee7685cdde1f28a54e89455da1784" translate="yes" xml:space="preserve">
          <source>Backup and Restore</source>
          <target state="translated">백업 및 복원</target>
        </trans-unit>
        <trans-unit id="90802fdf2f907c32a8bb0c3766a12243d8ce33b7" translate="yes" xml:space="preserve">
          <source>Backup the /etc/opscode and /var/opt/opscode directories and include the postgres export file as root</source>
          <target state="translated">/ etc / opscode 및 / var / opt / opscode 디렉토리를 백업하고 postgres 내보내기 파일을 루트로 포함하십시오</target>
        </trans-unit>
        <trans-unit id="faeadc1ed0e5db8d070a56c237b12a320ad81f27" translate="yes" xml:space="preserve">
          <source>Bad request. The contents of the request are not formatted correctly.</source>
          <target state="translated">요청이 잘못되었습니다. 요청 내용이 올바르게 형식화되지 않았습니다.</target>
        </trans-unit>
        <trans-unit id="e60b68a177e02f02c7f8645c1f5f6ef138e2f089" translate="yes" xml:space="preserve">
          <source>Bad request. The object has already been committed or one (or more) of the objects were not properly uploaded. The payload does not contain a well-formed &lt;code&gt;checksums&lt;/code&gt; parameter that is a hash containing a key for each checksum.</source>
          <target state="translated">요청이 잘못되었습니다. 객체가 이미 커밋되었거나 하나 이상의 객체가 제대로 업로드되지 않았습니다. 페이로드에는 각 체크섬의 키를 포함하는 해시 인 올바른 형식의 &lt;code&gt;checksums&lt;/code&gt; 매개 변수가 포함되어 있지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="aa2c96dacf00c451ef465f6115a45a20bccf1256" translate="yes" xml:space="preserve">
          <source>Basic</source>
          <target state="translated">Basic</target>
        </trans-unit>
        <trans-unit id="c2224f8a107d36c0de776aadc7b40c433729805c" translate="yes" xml:space="preserve">
          <source>Basically, what this means is that when the primary becomes unavailable to the secondary without an explicit takeover being initiated, the secondary will assume that it itself is the wrong, &lt;code&gt;split-brained&lt;/code&gt; host, and is the one unconnected and incorrect. It will take no automatic action.</source>
          <target state="translated">기본적으로 이것이 의미하는 것은 명시 적 인계가 시작되지 않고 기본 서버가 보조 서버에서 사용할 수 없게되면 보조 서버 자체가 잘못 &lt;code&gt;split-brained&lt;/code&gt; 호스트이고 연결되지 않고 잘못된 호스트 라고 가정합니다 . 자동 조치는 수행되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="cee0bed171e9a04da4d52b6adfbe2ba4971aacd4" translate="yes" xml:space="preserve">
          <source>Be careful when using the &lt;code&gt;:delete_key&lt;/code&gt; action with the &lt;code&gt;recursive&lt;/code&gt; attribute. This will delete the registry key, all of its values and all of the names, types, and data associated with them. This cannot be undone by the chef-client.</source>
          <target state="translated">&lt;code&gt;recursive&lt;/code&gt; 속성 과 함께 &lt;code&gt;:delete_key&lt;/code&gt; 작업을 사용할 때주의하십시오 . 레지스트리 키, 모든 값 및 이와 관련된 모든 이름, 유형 및 데이터가 삭제됩니다. 요리사 클라이언트는이를 취소 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="b2114cc22852e2d98c4fd075e4574afadac5fd71" translate="yes" xml:space="preserve">
          <source>Be configured in either RAID1</source>
          <target state="translated">RAID1에서 구성</target>
        </trans-unit>
        <trans-unit id="e497a8ccc57ee52a23183391423a8920102f2464" translate="yes" xml:space="preserve">
          <source>Be configured in either RAID1 or RAID5</source>
          <target state="translated">RAID1 또는 RAID5로 구성</target>
        </trans-unit>
        <trans-unit id="1eefee9f6ccf1c5a7d16c6e5f644985ff6b0510c" translate="yes" xml:space="preserve">
          <source>Be identical across both of your backend servers</source>
          <target state="translated">두 백엔드 서버에서 동일해야합니다.</target>
        </trans-unit>
        <trans-unit id="5bf1e45c3bad60afcca8d9b5c6d98bb05e3bdae8" translate="yes" xml:space="preserve">
          <source>Be inspected for instances of a) the &lt;code&gt;Chef::Provider&lt;/code&gt; base class, and then b) for the presence of any core resources from the chef-client</source>
          <target state="translated">a) &lt;code&gt;Chef::Provider&lt;/code&gt; 기본 클래스 의 인스턴스를 검사 한 다음 b) chef-client의 핵심 리소스가 있는지 검사합니다.</target>
        </trans-unit>
        <trans-unit id="13d246fbf9613b687cb0533026edb0d5e000495b" translate="yes" xml:space="preserve">
          <source>Be sure to back up the Chef server data before starting the upgrade process.</source>
          <target state="translated">업그레이드 프로세스를 시작하기 전에 Chef 서버 데이터를 백업하십시오.</target>
        </trans-unit>
        <trans-unit id="2521f2374fb6c929af4a4da62adddb515b9f49fa" translate="yes" xml:space="preserve">
          <source>Be updated to use the &lt;code&gt;LWRPBase&lt;/code&gt; base class</source>
          <target state="translated">&lt;code&gt;LWRPBase&lt;/code&gt; 기본 클래스 를 사용하도록 업데이트</target>
        </trans-unit>
        <trans-unit id="a5456045131d85e39ab0e516777afc514fc121c2" translate="yes" xml:space="preserve">
          <source>Because an action is not explicitly specified, the chef-client will use the default action: &lt;code&gt;:deploy&lt;/code&gt;</source>
          <target state="translated">조치가 명시 적으로 지정되지 않았기 때문에 chef-client는 기본 조치를 사용합니다. &lt;code&gt;:deploy&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="677e84929e7f7e325068ef76544bb0aed72d2938" translate="yes" xml:space="preserve">
          <source>Because the &lt;code&gt;inherits&lt;/code&gt; property is not specified, the chef-client will default it to &lt;code&gt;true&lt;/code&gt;, which will ensure that security settings for existing files remain unchanged.</source>
          <target state="translated">&lt;code&gt;inherits&lt;/code&gt; 속성이 지정되지 않았기 때문에 chef-client는 기본값을 &lt;code&gt;true&lt;/code&gt; 로 설정하여 기존 파일의 보안 설정이 변경되지 않도록합니다.</target>
        </trans-unit>
        <trans-unit id="68377b428dda6afda1febc21acab204801dff74c" translate="yes" xml:space="preserve">
          <source>Because the Chef server is composed of many different services that work together to create a functioning system, this step may take a few minutes to complete.</source>
          <target state="translated">Chef 서버는 함께 작동하여 작동 시스템을 작성하는 여러 가지 서비스로 구성되므로이 단계를 완료하는 데 몇 분이 걸릴 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="27e976475cded20fd575a0ed7d11a5f74185e1e6" translate="yes" xml:space="preserve">
          <source>Because the FQDN has already been configured, do the following:</source>
          <target state="translated">FQDN이 이미 구성되었으므로 다음을 수행하십시오.</target>
        </trans-unit>
        <trans-unit id="2e85f8849005356d69d8f39e0572f4ebb0901e04" translate="yes" xml:space="preserve">
          <source>Because the Recipe DSL is a Ruby DSL, then anything that can be done using Ruby can also be done in a recipe, including &lt;code&gt;if&lt;/code&gt; and &lt;code&gt;case&lt;/code&gt; statements, using the &lt;code&gt;include?&lt;/code&gt; Ruby method, including recipes in recipes, and checking for dependencies.</source>
          <target state="translated">레시피 DSL은 루비 DSL이기 때문에, 루비를 사용하여 수행 할 수 있습니다 후 아무것도도 포함 조리법으로 수행 할 수 &lt;code&gt;if&lt;/code&gt; 와 &lt;code&gt;case&lt;/code&gt; (가) 사용, 문장 &lt;code&gt;include?&lt;/code&gt; 레시피에 레시피를 포함하고 종속성을 확인하는 Ruby 메소드.</target>
        </trans-unit>
        <trans-unit id="6b11f9d78f71498a16039269ca563e32fad544d7" translate="yes" xml:space="preserve">
          <source>Because the default value for &lt;code&gt;link_type&lt;/code&gt; is symbolic, and because properties that are not specified in the resource block will be assigned their default values, the following example creates a symbolic link:</source>
          <target state="translated">&lt;code&gt;link_type&lt;/code&gt; 의 기본값 은 symbolic이고 자원 블록에 지정되지 않은 속성에는 기본값이 할당되므로 다음 예제는 symbolic link를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="192f0563907f2e6ff425c0188abbe8de39316a7d" translate="yes" xml:space="preserve">
          <source>Because the first resource (&lt;code&gt;file[/tmp/ohai2u_shef]&lt;/code&gt;) is still in the run-list, it gets executed again. And because that file already exists, the chef-client doesn&amp;rsquo;t attempt to re-create it. Finally, the files were created using the &lt;code&gt;ls&lt;/code&gt; method:</source>
          <target state="translated">첫 번째 자원 ( &lt;code&gt;file[/tmp/ohai2u_shef]&lt;/code&gt; )이 여전히 실행 목록에 있으므로 다시 실행됩니다. 해당 파일이 이미 존재하므로 요리사 클라이언트는 파일을 다시 만들려고 시도하지 않습니다. 마지막으로 파일은 &lt;code&gt;ls&lt;/code&gt; 메소드를 사용하여 작성되었습니다 .</target>
        </trans-unit>
        <trans-unit id="cb3d429b1e5952fb4cf78d13559ab5529e871cd9" translate="yes" xml:space="preserve">
          <source>Because the two &lt;code&gt;control_group&lt;/code&gt; block names are identical, the chef-client will return an exception similar to:</source>
          <target state="translated">두 &lt;code&gt;control_group&lt;/code&gt; 블록 이름이 동일 하기 때문에 chef-client는 다음과 유사한 예외를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="3d1cdedaff0a7f637c251c3330ed591f24d4e860" translate="yes" xml:space="preserve">
          <source>Before adding any settings to the knife.rb file:</source>
          <target state="translated">knife.rb 파일에 설정을 추가하기 전에 :</target>
        </trans-unit>
        <trans-unit id="f223474c0a576f16b0e0dea39f8fbdd70856cbde" translate="yes" xml:space="preserve">
          <source>Before data can be uploaded, an organization must be created. When prompted, enter the organization name, and then a full organization name.</source>
          <target state="translated">데이터를 업로드하기 전에 조직을 만들어야합니다. 메시지가 표시되면 조직 이름을 입력 한 다음 전체 조직 이름을 입력하십시오.</target>
        </trans-unit>
        <trans-unit id="fb4c3950b338d955bc3a80ebed3b9eeb44d13376" translate="yes" xml:space="preserve">
          <source>Before installing the Chef server software, perform the following steps:</source>
          <target state="translated">Chef 서버 소프트웨어를 설치하기 전에 다음 단계를 수행하십시오.</target>
        </trans-unit>
        <trans-unit id="dcde53847d94d5aa88fdcaca03435562f9b18a73" translate="yes" xml:space="preserve">
          <source>Before installing the Chef server, ensure that each machine has the following installed and configured properly:</source>
          <target state="translated">Chef 서버를 설치하기 전에 각 머신에 다음이 올바르게 설치 및 구성되어 있는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="ceee650cd2d37cf247f9b9f709bb8a21065e9922" translate="yes" xml:space="preserve">
          <source>Before this data is indexed on the Chef server, the nested fields are extracted into the top level, similar to:</source>
          <target state="translated">Chef 서버에서이 데이터를 색인화하기 전에 중첩 된 필드가 다음과 같이 최상위 레벨로 추출됩니다.</target>
        </trans-unit>
        <trans-unit id="acf261e6bedfe18c4f784c91861e48206adfdd1e" translate="yes" xml:space="preserve">
          <source>Before upgrading, please view the notes for more background on the upgrade process from Enterprise Chef 11 to Chef server 12.</source>
          <target state="translated">업그레이드하기 전에 Enterprise Chef 11에서 Chef 서버 12 로의 업그레이드 프로세스에 대한 자세한 배경 정보를 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="47e04cc658b4e6b588ca22184fe128c12ba8d1fe" translate="yes" xml:space="preserve">
          <source>Bind Redis to the specified IP address. Default value: &lt;code&gt;'127.0.0.1'&lt;/code&gt;.</source>
          <target state="translated">Redis를 지정된 IP 주소에 바인딩합니다. 기본 값 : &lt;code&gt;'127.0.0.1'&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="40cbafebf909ffac8e3da68ec0917a85cb11960d" translate="yes" xml:space="preserve">
          <source>Block Arguments</source>
          <target state="translated">블록 인수</target>
        </trans-unit>
        <trans-unit id="0d88689cdf329b1eacc73297a0d6a810dd4c7635" translate="yes" xml:space="preserve">
          <source>Bookshelf</source>
          <target state="translated">Bookshelf</target>
        </trans-unit>
        <trans-unit id="70d1c8e72de85027bd5f9ea73cc646df45e10526" translate="yes" xml:space="preserve">
          <source>Bookshelf is used to store cookbook content&amp;mdash;files, templates, and so on&amp;mdash;that have been uploaded to the Chef server as part of a cookbook version. Cookbook content is stored by content checksum. If two different cookbooks or different versions of the same cookbook include the same file or template, Bookshelf will store that file only once. The cookbook content managed by Bookshelf is stored in flat files and is separated from the Chef server and search index repositories.</source>
          <target state="translated">책장은 요리 책 버전의 일부로 Chef 서버에 업로드 된 요리 책 내용 (파일, 템플릿 등)을 저장하는 데 사용됩니다. 요리 책 내용은 내용 체크섬으로 저장됩니다. 두 개의 다른 요리 책 또는 동일한 요리 책의 다른 버전에 동일한 파일 또는 템플릿이 포함 된 경우 Bookshelf는 해당 파일을 한 번만 저장합니다. Bookshelf가 관리하는 요리 책 내용은 플랫 파일로 저장되며 Chef 서버 및 검색 색인 저장소와 분리됩니다.</target>
        </trans-unit>
        <trans-unit id="9839b1ebfb397e3fee90226677a441224551a23a" translate="yes" xml:space="preserve">
          <source>Bootstrap Operations</source>
          <target state="translated">부트 스트랩 작업</target>
        </trans-unit>
        <trans-unit id="a7d748ae838f614a39e813a5861c654dbb040d67" translate="yes" xml:space="preserve">
          <source>Bootstrap a Node</source>
          <target state="translated">노드 부트 스트랩</target>
        </trans-unit>
        <trans-unit id="857758c7b3f00221dfbcbb0c2997ccc285c57c68" translate="yes" xml:space="preserve">
          <source>Both &lt;code&gt;opscode&lt;/code&gt; and &lt;code&gt;opscode-pgsql&lt;/code&gt; user and group found on the new server</source>
          <target state="translated">두 &lt;code&gt;opscode&lt;/code&gt; 및 &lt;code&gt;opscode-pgsql&lt;/code&gt; 사용자 및 그룹은 새 서버에서 발견</target>
        </trans-unit>
        <trans-unit id="b03abe434834e4030c337bf94d82adb24e50eb6b" translate="yes" xml:space="preserve">
          <source>Both &lt;code&gt;opscode&lt;/code&gt; and &lt;code&gt;opscode-pgsql&lt;/code&gt; user and group not found on the new server</source>
          <target state="translated">두 &lt;code&gt;opscode&lt;/code&gt; 및 &lt;code&gt;opscode-pgsql&lt;/code&gt; 사용자 및 그룹은 새 서버를 찾을 수 없습니다</target>
        </trans-unit>
        <trans-unit id="2b09c065a3af7dcaec254afc2a6393188a41205f" translate="yes" xml:space="preserve">
          <source>Both &lt;code&gt;raise&lt;/code&gt; and &lt;code&gt;fail&lt;/code&gt; behave the same way when triggering unhandled exceptions and may be used interchangeably.</source>
          <target state="translated">모두 &lt;code&gt;raise&lt;/code&gt; 및 &lt;code&gt;fail&lt;/code&gt; 처리되지 않은 예외를 트리거링 및 상호 교환 사용할 수 있습니다 때 같은 방식으로 작동합니다.</target>
        </trans-unit>
        <trans-unit id="5e88ce305063bc9cacc133c34ff14dc8d9b93824" translate="yes" xml:space="preserve">
          <source>Both hosts are up as secondary, and the Chef server is unhappy</source>
          <target state="translated">두 호스트 모두 보조 서버로 작동하며 Chef 서버는 불행합니다</target>
        </trans-unit>
        <trans-unit id="8e9d90dc82793410350d5e4af3482a6177f71713" translate="yes" xml:space="preserve">
          <source>Both of these files are similar. They share the same structure. When an attribute is of the same type of data, such as a hash or an array, that data is merged when the attribute precedence levels are the same and is replaced when the attribute precedence levels are different.</source>
          <target state="translated">이 두 파일은 비슷합니다. 그들은 같은 구조를 공유합니다. 속성이 해시 또는 배열과 같은 동일한 유형의 데이터 인 경우 속성 우선 순위 수준이 같을 때 해당 데이터가 병합되고 속성 우선 순위 수준이 다를 경우 대체됩니다.</target>
        </trans-unit>
        <trans-unit id="6068af78fcbf298f0c59a2d87ea52b879db5c847" translate="yes" xml:space="preserve">
          <source>Both of these options must be available at the top-level within the callback, along with any assigned values that will be used later in the callback.</source>
          <target state="translated">이 두 옵션 모두 콜백에서 최상위 레벨에서 사용 가능해야하며 콜백에서 나중에 사용될 할당 된 값과 함께 제공되어야합니다.</target>
        </trans-unit>
        <trans-unit id="8e2035cd9475ef398d5225b2fb1870182599af18" translate="yes" xml:space="preserve">
          <source>Both the chef-client and knife use the Chef server API when communicating with the Chef server. The chef-validator uses the Chef server API, but only during the first chef-client run on a node.</source>
          <target state="translated">chef-client와 knife는 Chef 서버와 통신 할 때 Chef 서버 API를 사용합니다. chef-validator는 Chef 서버 API를 사용하지만 첫 번째 chef-client가 노드에서 실행될 때만 사용합니다.</target>
        </trans-unit>
        <trans-unit id="8b87666b54b22b2b5afcdac2d68a8a6c7870a81f" translate="yes" xml:space="preserve">
          <source>Both types of handlers can be used to gather data about a chef-client run and can provide rich levels of data about all types of usage, which can be used later for trending and analysis across the entire organization.</source>
          <target state="translated">두 유형의 핸들러 모두 Chef-Client 실행에 대한 데이터를 수집하는 데 사용될 수 있으며 모든 유형의 사용에 대한 풍부한 수준의 데이터를 제공 할 수 있으며, 이는 나중에 전체 조직의 추세 및 분석에 사용될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="cf7c39f3cd6a2d3a1a613e2fb0c7d67a7ea79430" translate="yes" xml:space="preserve">
          <source>Branch Tracking</source>
          <target state="translated">지점 추적</target>
        </trans-unit>
        <trans-unit id="c18cc47359291f3abb476de2bd03934c481c47ec" translate="yes" xml:space="preserve">
          <source>Bring up the network interface on boot.</source>
          <target state="translated">부팅시 네트워크 인터페이스를 불러옵니다.</target>
        </trans-unit>
        <trans-unit id="778a6c613c015f4adafa9c80b73833cafd60643c" translate="yes" xml:space="preserve">
          <source>Bring up the network interface when its parent interface is brought up.</source>
          <target state="translated">부모 인터페이스가 나타나면 네트워크 인터페이스를 불러옵니다.</target>
        </trans-unit>
        <trans-unit id="7343059558ded0b0239600725d2ea2afb9113671" translate="yes" xml:space="preserve">
          <source>Browse to the top level of the chef-repo and enter:</source>
          <target state="translated">chef-repo의 최상위 레벨을 찾아서 입력하십시오.</target>
        </trans-unit>
        <trans-unit id="6becbc85d949fef6ed475e593c70120afe2cb5a9" translate="yes" xml:space="preserve">
          <source>Build or execute a command line against a local file. Set to &lt;code&gt;false&lt;/code&gt; to build or execute against a remote file. Default: &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">로컬 파일에 대해 명령 행을 빌드하거나 실행하십시오. 원격 파일을 빌드하거나 실행 하려면 &lt;code&gt;false&lt;/code&gt; 로 설정 하십시오. 기본값 : &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0d5d6cb79dff33d19cf255052a7c6a526d9ae401" translate="yes" xml:space="preserve">
          <source>Building the node object</source>
          <target state="translated">노드 객체 만들기</target>
        </trans-unit>
        <trans-unit id="1a0f6aee772fa59b7339f89ff144fd7e441ba40e" translate="yes" xml:space="preserve">
          <source>Builds a &lt;code&gt;.gemrc&lt;/code&gt; file based on a &lt;code&gt;gemrc.erb&lt;/code&gt; template</source>
          <target state="translated">&lt;code&gt;gemrc.erb&lt;/code&gt; 템플릿을 기반으로 &lt;code&gt;.gemrc&lt;/code&gt; 파일을 빌드합니다</target>
        </trans-unit>
        <trans-unit id="6bcfe872db7486935e1ec6cc537ec1e6a48045b2" translate="yes" xml:space="preserve">
          <source>Bumping the version number as appropriate.</source>
          <target state="translated">버전 번호를 적절히 부딪 히십시오.</target>
        </trans-unit>
        <trans-unit id="4b4d2ccd13ffe2b3ffda5f6be46d01a658768ff8" translate="yes" xml:space="preserve">
          <source>But that is not very efficient, especially because most of them are identical. The deep merge capabilities of the chef-client allows attributes to be layered across cookbooks, recipes, roles, and environments. This allows an attribute to be reused across nodes, making use of default attributes set at the cookbook level, but also providing a way for certain attributes (with a higher attribute precedence) to be applied only when they are supposed to be.</source>
          <target state="translated">그러나 특히 효율적이지 않기 때문에 효율성이 떨어집니다. chef-client의 깊은 병합 기능을 통해 요리 책, 레시피, 역할 및 환경에 걸쳐 속성을 계층화 할 수 있습니다. 이렇게하면 요리 책 수준에서 설정된 기본 속성을 사용하면서 노드 전체에서 속성을 재사용 할 수있을뿐만 아니라 특정 속성 (높은 속성 우선 순위)을 적용해야하는 경우에만 적용 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a2705406de2f662b10cbd3f03b2189fcafcdb645" translate="yes" xml:space="preserve">
          <source>But what if all of the web servers are not the same? What if some of the web servers required a single attribute to have a different value? You could store these settings in two locations, once just like the preceding example and once just like the following:</source>
          <target state="translated">그러나 모든 웹 서버가 동일하지 않은 경우 어떻게해야합니까? 일부 웹 서버에서 다른 값을 가지기 위해 단일 속성이 필요한 경우 어떻게해야합니까? 이러한 설정은 위의 예와 같이 한 번과 다음과 같이 두 위치에 저장할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8bdcc5556978f1b366f450955e7b98990429e145" translate="yes" xml:space="preserve">
          <source>But with this example, the &lt;code&gt;group&lt;/code&gt;, &lt;code&gt;mode&lt;/code&gt;, and &lt;code&gt;owner&lt;/code&gt; attribute values will only be applied to &lt;code&gt;/baz&lt;/code&gt;. Which is fine, if that&amp;rsquo;s what you want. But most of the time, when the entire &lt;code&gt;/foo/bar/baz&lt;/code&gt; directory structure is not there, you must be explicit about each directory. For example:</source>
          <target state="translated">그러나이 예제에서 &lt;code&gt;group&lt;/code&gt; , &lt;code&gt;mode&lt;/code&gt; 및 &lt;code&gt;owner&lt;/code&gt; 속성 값은 &lt;code&gt;/baz&lt;/code&gt; 에만 적용됩니다 . 그것이 당신이 원하는 것이라면 어느 것이 좋습니다. 그러나 대부분의 경우 전체 &lt;code&gt;/foo/bar/baz&lt;/code&gt; 디렉토리 구조가 없으면 각 디렉토리에 대해 명시 적이어야합니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="5512a52c12c22842da0eeb1a761b4a1e9ff20987" translate="yes" xml:space="preserve">
          <source>But, the following:</source>
          <target state="translated">그러나 다음은</target>
        </trans-unit>
        <trans-unit id="96136ddf45172c48f4a591ef408f71a825d2ab6d" translate="yes" xml:space="preserve">
          <source>By Subcommand</source>
          <target state="translated">하위 명령 별</target>
        </trans-unit>
        <trans-unit id="8c134f1d4bc6ab786d72f4b398a6d87c30ab5569" translate="yes" xml:space="preserve">
          <source>By adding a start handler to the &lt;strong&gt;chef-client&lt;/strong&gt; cookbook, which installs the handler on the node so that it is available to the chef-client at the start of the chef-client run</source>
          <target state="translated">&lt;strong&gt;chef-client&lt;/strong&gt; 쿡북에 start handler를 추가 하여 Chef-client 실행이 시작될 때 chef-client가 사용할 수 있도록 핸들러를 노드에 설치합니다.</target>
        </trans-unit>
        <trans-unit id="974cc898b3b8be7ed9691860804ee8514243fee1" translate="yes" xml:space="preserve">
          <source>By adding the &lt;strong&gt;chef_handler&lt;/strong&gt; resource to a recipe, and then adding that recipe to the run-list for a node. (The &lt;strong&gt;chef_handler&lt;/strong&gt; resource is available from the &lt;strong&gt;chef_handler&lt;/strong&gt; cookbook.)</source>
          <target state="translated">첨가 용으로 &lt;strong&gt;chef_handler의&lt;/strong&gt; 노드의 실행 목록에 그 요리법을 추가 한 후 조리법에 자원을합니다. 합니다 ( &lt;strong&gt;chef_handler의&lt;/strong&gt; 리소스로부터 사용할 &lt;strong&gt;chef_handler의&lt;/strong&gt; 요리 책).</target>
        </trans-unit>
        <trans-unit id="a558e0981c24356985f21cb25bc197711d72c158" translate="yes" xml:space="preserve">
          <source>By adding the following lines of Ruby code to either the client.rb file or the solo.rb file, depending on how the chef-client is being run:</source>
          <target state="translated">chef-client 실행 방법에 따라 다음 라인의 Ruby 코드를 client.rb 파일 또는 solo.rb 파일에 추가합니다.</target>
        </trans-unit>
        <trans-unit id="d90ced6e70b965534c561bea92689ff8f37e3503" translate="yes" xml:space="preserve">
          <source>By adding the handler to one of the following settings in the node&amp;rsquo;s client.rb file: &lt;code&gt;exception_handlers&lt;/code&gt; and/or &lt;code&gt;report_handlers&lt;/code&gt;</source>
          <target state="translated">노드의 client.rb 파일에서 다음 설정 중 하나에 핸들러를 추가하여 &lt;code&gt;exception_handlers&lt;/code&gt; 및 / 또는 &lt;code&gt;report_handlers&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9655186f940d77bf0f58c90cb3ab2e7fb1cb06b9" translate="yes" xml:space="preserve">
          <source>By adding the handler to one of the following settings in the node&amp;rsquo;s client.rb file: &lt;code&gt;start_handlers&lt;/code&gt;</source>
          <target state="translated">노드의 client.rb 파일에서 다음 설정 중 하나에 핸들러를 추가하여 &lt;code&gt;start_handlers&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="eee4357f4459067fae66aaebf094ac76b1753912" translate="yes" xml:space="preserve">
          <source>By combining wildcards with range-matching patterns and wildcard queries, it is possible to perform very powerful searches, such as using the vendor part of the MAC address to find every node that has a network card made by the specified vendor.</source>
          <target state="translated">와일드 카드를 범위 일치 패턴 및 와일드 카드 쿼리와 결합하면 MAC 주소의 공급 업체 부분을 사용하여 지정된 공급 업체가 만든 네트워크 카드가있는 모든 노드를 찾는 등의 강력한 검색을 수행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9a5e71ebfa3aeb72ae98f51660e74a37975b03f2" translate="yes" xml:space="preserve">
          <source>By default, a file or directory inherits rights from its parent directory. Most of the time this is the preferred behavior, but sometimes it may be necessary to take steps to more specifically control rights. The &lt;code&gt;inherits&lt;/code&gt; property can be used to specifically tell the chef-client to apply (or not apply) inherited rights from its parent directory.</source>
          <target state="translated">기본적으로 파일 또는 디렉토리는 상위 디렉토리에서 권한을 상속받습니다. 대부분의 경우 이것이 선호되는 동작이지만 때로는 권한을보다 구체적으로 제어하기위한 단계를 수행해야 할 수도 있습니다. &lt;code&gt;inherits&lt;/code&gt; 속성은 구체적으로 (해당 사항 없음) 부모 디렉토리에서 상속 된 권한을 적용 할 수있는 요리사 클라이언트를 얘기하는 데 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9afd4fcbe5ab7cddf395784c81b360459c3ec67c" translate="yes" xml:space="preserve">
          <source>By default, a partial template file is assumed to be located in the cookbook that contains the top-level template. Use this option to specify the path to a different cookbook</source>
          <target state="translated">기본적으로 부분 템플릿 파일은 최상위 템플릿이 포함 된 요리 책에있는 것으로 가정합니다. 다른 요리 책에 대한 경로를 지정하려면이 옵션을 사용하십시오</target>
        </trans-unit>
        <trans-unit id="95fa357bbb924ddee6d97d5db6b4d0a81db973f0" translate="yes" xml:space="preserve">
          <source>By default, a partial template file is identified by its file name. Use this option to specify a different name or a local path to use (instead of the name of the partial template file)</source>
          <target state="translated">기본적으로 부분 템플릿 파일은 파일 이름으로 식별됩니다. 이 옵션을 사용하여 부분 템플리트 파일 이름 대신 사용할 다른 이름 또는 로컬 경로를 지정하십시오.</target>
        </trans-unit>
        <trans-unit id="65122aaf9200a934cc31a6c9e618db8d549e30a6" translate="yes" xml:space="preserve">
          <source>By default, accounts required by the Chef server are created during setup. If your environment has restrictions on the creation of local user and group accounts that will prevent these accounts from being created automatically during setup, you will need to create these accounts.</source>
          <target state="translated">기본적으로 Chef 서버에 필요한 계정은 설정 중에 작성됩니다. 환경에 로컬 사용자 및 그룹 계정 작성에 대한 제한 사항이있어 설정 중에 이러한 계정이 자동으로 작성되지 못하게하는 경우 해당 계정을 작성해야합니다.</target>
        </trans-unit>
        <trans-unit id="531033f1d5c8c124b92373d2ce5162f1505a5ed1" translate="yes" xml:space="preserve">
          <source>By default, chef-shell loads in standalone mode and does not connect to the Chef server. The chef-shell can be run as a chef-client to verify functionality that is only available when the chef-client connects to the Chef server, such as search functionality or accessing data stored in data bags.</source>
          <target state="translated">기본적으로 chef-shell은 독립형 모드로로드되며 Chef 서버에 연결되지 않습니다. 셰프 쉘은 셰프 클라이언트가 셰프 클라이언트가 셰프 서버에 연결되어 검색 기능 또는 데이터 백에 저장된 데이터에 액세스하는 경우에만 사용할 수있는 기능을 확인하기 위해 셰프 클라이언트로 실행될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="dd656f79a82d9dcddd3bd1d43bbb822639cb8ac3" translate="yes" xml:space="preserve">
          <source>By default, every log resource that executes will count as an updated resource in the updated resource count at the end of a Chef run. You can disable this behavior by adding &lt;code&gt;count_log_resource_updates false&lt;/code&gt; to your Chef &lt;code&gt;client.rb&lt;/code&gt; configuration file.</source>
          <target state="translated">기본적으로 실행되는 모든 로그 리소스는 Chef 실행이 끝날 때 업데이트 된 리소스 수에서 업데이트 된 리소스로 계산됩니다. Chef &lt;code&gt;client.rb&lt;/code&gt; 구성 파일에 &lt;code&gt;count_log_resource_updates false&lt;/code&gt; 를 추가 하여이 동작을 비활성화 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="ef35f941166c67f18f63df8baa46957dd47f251c" translate="yes" xml:space="preserve">
          <source>By default, notifications are &lt;code&gt;:delayed&lt;/code&gt;, that is they are queued up as they are triggered, and then executed at the very end of a chef-client run. To run an action immediately, use &lt;code&gt;:immediately&lt;/code&gt;:</source>
          <target state="translated">기본적으로 알림은 &lt;code&gt;:delayed&lt;/code&gt; 입니다 . 즉 , 알림이 트리거 될 때까지 대기 한 다음 chef-client 실행이 끝날 때 실행됩니다. 조치를 즉시 실행하려면 &lt;code&gt;:immediately&lt;/code&gt; :를 사용 하십시오 .</target>
        </trans-unit>
        <trans-unit id="71133340820cb57c31c7d7ea0d547077b21284bd" translate="yes" xml:space="preserve">
          <source>By default, runit will restart services automatically when the services fail. Therefore, runit may report the status of a service as &lt;code&gt;run:&lt;/code&gt; even when there is an issue with that service. When investigating why a particular service is not running as it should be, look for the services with the shortest uptimes. For example, the list below indicates that the &lt;strong&gt;opscode-erchef&lt;/strong&gt; should be investigated further:</source>
          <target state="translated">기본적으로 runit은 서비스가 실패하면 서비스를 자동으로 다시 시작합니다. 따라서 runit은 해당 서비스에 문제가있는 경우에도 서비스 상태를 &lt;code&gt;run:&lt;/code&gt; 것으로보고 할 수 있습니다 . 특정 서비스가 정상적으로 실행되지 않는 이유를 조사 할 때는 가동 시간이 가장 짧은 서비스를 찾으십시오. 예를 들어 아래 목록은 &lt;strong&gt;opscode-erchef&lt;/strong&gt; 를 추가로 조사해야 함을 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="d245f87d35d89131b4577983776e035c3ab8d2cf" translate="yes" xml:space="preserve">
          <source>By default, the &lt;code&gt;public_key_read_access&lt;/code&gt; assigns all members of the &lt;code&gt;users&lt;/code&gt; and &lt;code&gt;clients&lt;/code&gt; group permission to these endpoints:</source>
          <target state="translated">기본적으로 &lt;code&gt;public_key_read_access&lt;/code&gt; 는 &lt;code&gt;users&lt;/code&gt; 및 &lt;code&gt;clients&lt;/code&gt; 그룹 의 모든 구성원 에게 다음 엔드 포인트에 대한 권한을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="589c9cb21f16f8bc8a8ab99cd5d984da113ce0a2" translate="yes" xml:space="preserve">
          <source>By default, the Chef server uses the FQDN to determine the common name (&lt;code&gt;CN&lt;/code&gt;). If the FQDN of the Chef server is longer than 64 characters, the &lt;code&gt;reconfigure&lt;/code&gt; command will not fail, but an empty certificate file will be created. Nginx will not start if a certificate file is empty.</source>
          <target state="translated">기본적으로 Chef 서버는 FQDN을 사용하여 공통 이름 ( &lt;code&gt;CN&lt;/code&gt; ) 을 결정합니다 . Chef 서버의 FQDN이 64자를 초과하면 &lt;code&gt;reconfigure&lt;/code&gt; 명령이 실패하지 않지만 빈 인증서 파일이 작성됩니다. 인증서 파일이 비어 있으면 Nginx가 시작되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="48abd51959093623111d5a222cc28b5ea1050ca4" translate="yes" xml:space="preserve">
          <source>By defining multiple paths for multiple locations:</source>
          <target state="translated">여러 위치에 대한 여러 경로를 정의하여 :</target>
        </trans-unit>
        <trans-unit id="67ebd7e78051f9281ced1a6cbe0afd0e4a0060a6" translate="yes" xml:space="preserve">
          <source>By defining those same multiple paths as an array:</source>
          <target state="translated">배열과 동일한 여러 경로를 정의하면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="54cfca649e0c8ba9b58e8082aab63c23e4f20683" translate="yes" xml:space="preserve">
          <source>By downloading the chef-client to the target node, and then running the Microsoft Installer Package (MSI) locally</source>
          <target state="translated">chef-client를 대상 노드로 다운로드 한 다음 로컬로 MSI (Microsoft Installer Package)를 실행</target>
        </trans-unit>
        <trans-unit id="f9b9ab365481633d69526f5c027b2a66d544d2d1" translate="yes" xml:space="preserve">
          <source>By itself (i.e. a chef-client run that does not build the resource collection or converge the node)</source>
          <target state="translated">자체적으로 (예 : 자원 수집을 구축하거나 노드를 수렴하지 않는 요리사 클라이언트 실행)</target>
        </trans-unit>
        <trans-unit id="0698f5f15d41ca0e9e48bc71228d09cd085acc4f" translate="yes" xml:space="preserve">
          <source>By specifying the path to a valid Windows PowerShell data file</source>
          <target state="translated">유효한 Windows PowerShell 데이터 파일의 경로를 지정하여</target>
        </trans-unit>
        <trans-unit id="c1b93d519bf2f31ed0c552cbc2d796513f5ed6fc" translate="yes" xml:space="preserve">
          <source>By the time you get the new node is up, the secondary back-end server may have taken itself into &lt;code&gt;standalone&lt;/code&gt; mode, which means that it is no longer listening on the network port. In this situation, run the following commands to get the secondary back-end server to talk to the new node:</source>
          <target state="translated">새 노드가 가동 될 때 보조 백엔드 서버가 &lt;code&gt;standalone&lt;/code&gt; 모드 로 전환 되어 더 이상 네트워크 포트에서 수신 대기하지 않을 수 있습니다. 이 상황에서 다음 명령을 실행하여 보조 백엔드 서버가 새 노드와 통신하게하십시오.</target>
        </trans-unit>
        <trans-unit id="e0f546d831a7122f39b5e308d26dfcf03fe0c39b" translate="yes" xml:space="preserve">
          <source>By using FTP:</source>
          <target state="translated">FTP를 사용하여 :</target>
        </trans-unit>
        <trans-unit id="39bd9acbfc114872b50d83381ea2b800f8294aa6" translate="yes" xml:space="preserve">
          <source>By using a Microsoft Windows UNC:</source>
          <target state="translated">Microsoft Windows UNC를 사용하여 :</target>
        </trans-unit>
        <trans-unit id="f9e9b3165d3a4be4136e2d1a23f57926f630bb14" translate="yes" xml:space="preserve">
          <source>By using a local path:</source>
          <target state="translated">로컬 경로를 사용하여 :</target>
        </trans-unit>
        <trans-unit id="0ef630d370e814978b923822cd9fb13a3c896328" translate="yes" xml:space="preserve">
          <source>By using a node attribute:</source>
          <target state="translated">노드 속성을 사용하여 :</target>
        </trans-unit>
        <trans-unit id="932fec424a7307d12dad0333a80c03453bcd6ec9" translate="yes" xml:space="preserve">
          <source>By using an existing process already in place for managing Microsoft Windows machines, such as System Center</source>
          <target state="translated">System Center와 같은 Microsoft Windows 시스템을 관리하기 위해 기존 프로세스를 이미 사용함으로써</target>
        </trans-unit>
        <trans-unit id="b4e0de7c041ecee0deabf84042982a2abf9202d9" translate="yes" xml:space="preserve">
          <source>By using attributes to define paths:</source>
          <target state="translated">속성을 사용하여 경로를 정의하면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="81216f09c01384a7f53937edba6154a5cd115829" translate="yes" xml:space="preserve">
          <source>By using the &lt;a href=&quot;resource_chef_handler&quot;&gt;chef_handler&lt;/a&gt; resource in a recipe, similar to the following:</source>
          <target state="translated">사용하여 &lt;a href=&quot;resource_chef_handler&quot;&gt;chef_handler에&lt;/a&gt; 다음과 유사한 조리법에 자원을 :</target>
        </trans-unit>
        <trans-unit id="573999d93c72797e6db40a1e2dfa25478dd37344" translate="yes" xml:space="preserve">
          <source>By using the &lt;code&gt;configuration_data&lt;/code&gt; attribute</source>
          <target state="translated">&lt;code&gt;configuration_data&lt;/code&gt; 속성 을 사용하여</target>
        </trans-unit>
        <trans-unit id="27f2798d154d06e1e10a1c3fed3759c63f53d663" translate="yes" xml:space="preserve">
          <source>By using the &lt;code&gt;configuration_data_script&lt;/code&gt; attribute</source>
          <target state="translated">&lt;code&gt;configuration_data_script&lt;/code&gt; 속성 을 사용하여</target>
        </trans-unit>
        <trans-unit id="9b99b0cb8fc12026c9984c49701d01eb96667178" translate="yes" xml:space="preserve">
          <source>By using the &lt;code&gt;render&lt;/code&gt; method in the template file</source>
          <target state="translated">템플릿 파일에서 &lt;code&gt;render&lt;/code&gt; 메소드 를 사용하여</target>
        </trans-unit>
        <trans-unit id="1de8e85d6a034daf568f9525632a018f4cdd6a96" translate="yes" xml:space="preserve">
          <source>By using the &lt;strong&gt;chef_handler&lt;/strong&gt; resource in a recipe, similar to the following:</source>
          <target state="translated">사용하여 &lt;strong&gt;chef_handler에&lt;/strong&gt; 다음과 유사한 조리법에 자원을 :</target>
        </trans-unit>
        <trans-unit id="8c043fa42df9d01a7ed495ec7adc3e44e71355a6" translate="yes" xml:space="preserve">
          <source>By using the &lt;strong&gt;template&lt;/strong&gt; resource and the &lt;code&gt;variables&lt;/code&gt; property.</source>
          <target state="translated">사용하여 &lt;strong&gt;템플릿&lt;/strong&gt; 자원과 &lt;code&gt;variables&lt;/code&gt; 속성을.</target>
        </trans-unit>
        <trans-unit id="33ecd3843b844d7c6c4b8eabf432c192a1af7d7c" translate="yes" xml:space="preserve">
          <source>By using the knife windows plugin to bootstrap the chef-client; this process requires the target node be available via SSH (port 22) or by using the HTTP or HTTPS ports that are required by WinRM</source>
          <target state="translated">knife windows 플러그인을 사용하여 요리사 클라이언트를 부트 스트랩합니다. 이 프로세스에서는 SSH (포트 22)를 통해 또는 WinRM에 필요한 HTTP 또는 HTTPS 포트를 사용하여 대상 노드를 사용할 수 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="979b5fd223f38d19edf509197e67fb7103245c3e" translate="yes" xml:space="preserve">
          <source>Bypass a prompt in the terminal and agree that you want to disable the Chef server, and require credential rotation.</source>
          <target state="translated">터미널에서 프롬프트를 무시하고 Chef 서버를 비활성화하고 자격 증명 교체가 필요하다는 데 동의합니다.</target>
        </trans-unit>
        <trans-unit id="c80211fd3da3c28a41840f34df3169e707409790" translate="yes" xml:space="preserve">
          <source>CCRs/min</source>
          <target state="translated">CCRs/min</target>
        </trans-unit>
        <trans-unit id="71f0f4da2e0f035e4478025bcf5334667baeb4b0" translate="yes" xml:space="preserve">
          <source>CPU data</source>
          <target state="translated">CPU 데이터</target>
        </trans-unit>
        <trans-unit id="34cdfac62150e2fe20a5b3313a6b5e4a2f4e289e" translate="yes" xml:space="preserve">
          <source>Call a Method</source>
          <target state="translated">메소드 호출</target>
        </trans-unit>
        <trans-unit id="9ffaea2b17925a076b1e481ccfb5042e49a8fa70" translate="yes" xml:space="preserve">
          <source>Call a method on something with &lt;code&gt;.method_name()&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;.method_name()&lt;/code&gt; 사용하여 메소드를 호출하십시오 .</target>
        </trans-unit>
        <trans-unit id="42fb639b7313463881ed7d9bae34cc709237f03b" translate="yes" xml:space="preserve">
          <source>Callback</source>
          <target state="translated">Callback</target>
        </trans-unit>
        <trans-unit id="9fdc2cfe374fa5bde1e4e458854875e1709add1c" translate="yes" xml:space="preserve">
          <source>Callbacks</source>
          <target state="translated">Callbacks</target>
        </trans-unit>
        <trans-unit id="f80ba508d3cbb63a4b6411f9e0152418fc3ef30a" translate="yes" xml:space="preserve">
          <source>Campfire</source>
          <target state="translated">Campfire</target>
        </trans-unit>
        <trans-unit id="7f93695562d9938e07d645d8f9f71d0c89ec7ccf" translate="yes" xml:space="preserve">
          <source>Can be used with the &lt;code&gt;options&lt;/code&gt; attribute.</source>
          <target state="translated">&lt;code&gt;options&lt;/code&gt; 속성 과 함께 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="c4c509c65f991420a5aa7ab0e7df72cf2edd66fc" translate="yes" xml:space="preserve">
          <source>Cancel a reboot request.</source>
          <target state="translated">재부팅 요청을 취소하십시오.</target>
        </trans-unit>
        <trans-unit id="2f369afab5001840710e7fe04d7f7347fb439420" translate="yes" xml:space="preserve">
          <source>Cancel invite for User</source>
          <target state="translated">사용자 초대 취소</target>
        </trans-unit>
        <trans-unit id="3ea6b14ab1b1d8b2d791ea4baebe2208c461a03f" translate="yes" xml:space="preserve">
          <source>Canceling a pending invite for a user can currently be completed using knife:</source>
          <target state="translated">현재 나이프를 사용하여 사용자의 보류중인 초대 취소를 완료 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="53304cda0905a08e57c700ce0ecf625f7f784051" translate="yes" xml:space="preserve">
          <source>Capacity Planning</source>
          <target state="translated">용량 계획</target>
        </trans-unit>
        <trans-unit id="d2c0c91d82388e7c626f9682d635f4067250f436" translate="yes" xml:space="preserve">
          <source>Cause a chef-client run to fail when the chef-client does not have administrator privileges in Microsoft Windows.</source>
          <target state="translated">chef-client에 Microsoft Windows에서 관리자 권한이없는 경우 chef-client 실행이 실패합니다.</target>
        </trans-unit>
        <trans-unit id="c56cdd3fd53bdbb76fdb7bfb85fb2e87cd5fd96e" translate="yes" xml:space="preserve">
          <source>Cause knife to use the default value instead of asking a user to provide one.</source>
          <target state="translated">나이프가 사용자에게 값을 제공하도록 요청하는 대신 기본값을 사용하도록합니다.</target>
        </trans-unit>
        <trans-unit id="fa5f4e761d441db8b903bbd1a3f97573f9db1270" translate="yes" xml:space="preserve">
          <source>Cause the Chef server to connect to the LDAP server using SSL. Default value: &lt;code&gt;false&lt;/code&gt;. Must be &lt;code&gt;false&lt;/code&gt; when &lt;code&gt;ldap['tls_enabled']&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">Chef 서버가 SSL을 사용하여 LDAP 서버에 연결되게하십시오. 기본 값 : &lt;code&gt;false&lt;/code&gt; . &lt;code&gt;ldap['tls_enabled']&lt;/code&gt; 가 &lt;code&gt;true&lt;/code&gt; 인 경우 &lt;code&gt;false&lt;/code&gt; 여야 합니다 .</target>
        </trans-unit>
        <trans-unit id="52eff7b22fe11f86eadebb4a4a10df91257e6cfa" translate="yes" xml:space="preserve">
          <source>Cause the chef-client run to fail when Reporting data cannot be sent to the Chef server (for any reason).</source>
          <target state="translated">어떤 이유로 든보고 데이터를 Chef 서버로 보낼 수없는 경우 Chef-Client 실행이 실패합니다.</target>
        </trans-unit>
        <trans-unit id="e895acc53b1d0a0af6c525021f60e76cdad52f48" translate="yes" xml:space="preserve">
          <source>Cause the chef-client to create a diff when changes are made to a file. Default value: &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">파일을 변경할 때 chef-client가 diff를 작성하게합니다. 기본 값 : &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5a3bb85a309bf35ab8e50ebf3d3ce7b4d8964a3c" translate="yes" xml:space="preserve">
          <source>Cause the chef-client to detect and manage the source file for a symlink. Possible values: &lt;code&gt;nil&lt;/code&gt;, &lt;code&gt;true&lt;/code&gt;, or &lt;code&gt;false&lt;/code&gt;. When this value is set to &lt;code&gt;nil&lt;/code&gt;, the chef-client will manage a symlink&amp;rsquo;s source file and emit a warning. When this value is set to &lt;code&gt;true&lt;/code&gt;, the chef-client will manage a symlink&amp;rsquo;s source file and not emit a warning. Default value: &lt;code&gt;nil&lt;/code&gt;. The default value will be changed to &lt;code&gt;false&lt;/code&gt; in a future version.</source>
          <target state="translated">chef-client가 symlink의 소스 파일을 감지하고 관리하게하십시오. 가능한 값은 &lt;code&gt;nil&lt;/code&gt; , &lt;code&gt;true&lt;/code&gt; 또는 &lt;code&gt;false&lt;/code&gt; 입니다. 이 값이 &lt;code&gt;nil&lt;/code&gt; 로 설정 되면 chef-client는 symlink의 소스 파일을 관리하고 경고를 발행합니다. 이 값이 &lt;code&gt;true&lt;/code&gt; 로 설정 되면 chef-client는 symlink의 소스 파일을 관리하고 경고를 발생시키지 않습니다. 기본 값 : &lt;code&gt;nil&lt;/code&gt; . 이후 버전에서는 기본값이 &lt;code&gt;false&lt;/code&gt; 로 변경됩니다 .</target>
        </trans-unit>
        <trans-unit id="df769fc492b2d987e58f57acdcc3e78c88786e00" translate="yes" xml:space="preserve">
          <source>Cause the chef-client to not use chef local mode, but rather the original chef-solo mode. This is not recommended unless really required.</source>
          <target state="translated">요리사-클라이언트가 요리사 로컬 모드를 사용하지 않고 원래 요리사-솔로 모드를 사용하십시오. 실제로 필요한 경우가 아니면 권장하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="f12e66194782f565420f48723fc1320cc2f36816" translate="yes" xml:space="preserve">
          <source>Cause the chef-client to send data to the Chef server for use with Reporting.</source>
          <target state="translated">chef-client가보고에 사용하기 위해 Chef 서버로 데이터를 보내 게합니다.</target>
        </trans-unit>
        <trans-unit id="51ad199d6352d3bb64db022bd0fbb0fcdea024f8" translate="yes" xml:space="preserve">
          <source>CentOS</source>
          <target state="translated">CentOS</target>
        </trans-unit>
        <trans-unit id="b46006710c2bc818e78bdb61b38fbd63d658b6ba" translate="yes" xml:space="preserve">
          <source>Centralized distribution of cookbooks</source>
          <target state="translated">요리 책의 중앙 집중식 배포</target>
        </trans-unit>
        <trans-unit id="c4b22d7e953f32628611912cfd9ba3ed0d4dbce3" translate="yes" xml:space="preserve">
          <source>Certain types of data&amp;mdash;passwords, user account data, and other sensitive items&amp;mdash;can be placed in data bags, which are located in a secure sub-area on the Chef server that can only be accessed by nodes that authenticate to the Chef server with the correct SSL certificates</source>
          <target state="translated">특정 유형의 데이터 (암호, 사용자 계정 데이터 및 기타 민감한 항목)는 Chef 서버의 보안 하위 영역에있는 Chef Bag의 보안 하위 영역에있는 데이터 백에 배치 할 수 있습니다. 올바른 SSL 인증서</target>
        </trans-unit>
        <trans-unit id="e921239584eda1bcba00e1006f0e656b17e9f49a" translate="yes" xml:space="preserve">
          <source>Change Attributes</source>
          <target state="translated">속성 변경</target>
        </trans-unit>
        <trans-unit id="49289db43e663a3df5e2c70714722ecc54895565" translate="yes" xml:space="preserve">
          <source>Change Password</source>
          <target state="translated">비밀번호 변경</target>
        </trans-unit>
        <trans-unit id="2ce060c5db8c5b313d67ae4bcec5cb9c6a94bf69" translate="yes" xml:space="preserve">
          <source>Changes Prior to Chef 12</source>
          <target state="translated">요리사 12 이전의 변경 사항</target>
        </trans-unit>
        <trans-unit id="4a931e47f4ceb32c80db6b924c655ccc4bca1b93" translate="yes" xml:space="preserve">
          <source>Changes to that file can then be made:</source>
          <target state="translated">그런 다음 해당 파일을 변경할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e11ae2c2ce5831af15747dba9745be4fd5c396b5" translate="yes" xml:space="preserve">
          <source>Changing a password</source>
          <target state="translated">비밀번호 변경</target>
        </trans-unit>
        <trans-unit id="bc2ca570deaf7bff96db45c62df66042566b4b0f" translate="yes" xml:space="preserve">
          <source>Changing inherited rights can be expensive. Microsoft Windows will propagate rights to all children recursively due to inheritance. This is a normal aspect of Microsoft Windows, so consider the frequency with which this type of action is necessary and take steps to control this type of action if performance is the primary consideration.</source>
          <target state="translated">상속 된 권리를 변경하면 많은 비용이 듭니다. Microsoft Windows는 상속으로 인해 모든 어린이에게 재귀 적으로 권한을 전파합니다. 이것은 Microsoft Windows의 일반적인 측면이므로이 유형의 조치가 필요한 빈도를 고려하고 성능이 주요 고려 사항 인 경우이 유형의 조치를 제어하기위한 단계를 수행하십시오.</target>
        </trans-unit>
        <trans-unit id="bf9344a28c366f637fbf8cff2f9d27ef4255cf04" translate="yes" xml:space="preserve">
          <source>Changing this setting to &lt;code&gt;false&lt;/code&gt; may cause file corruption, data loss, or instability. Use the &lt;code&gt;atomic_update&lt;/code&gt; property on the &lt;strong&gt;cookbook_file&lt;/strong&gt;, &lt;strong&gt;file&lt;/strong&gt;, &lt;strong&gt;remote_file&lt;/strong&gt;, and &lt;strong&gt;template&lt;/strong&gt; resources to tune this behavior at the recipe level.</source>
          <target state="translated">이 설정을 &lt;code&gt;false&lt;/code&gt; 로 변경 하면 파일 손상, 데이터 손실 또는 불안정이 발생할 수 있습니다. &lt;strong&gt;cookbook_file&lt;/strong&gt; , &lt;strong&gt;file&lt;/strong&gt; , &lt;strong&gt;remote_file&lt;/strong&gt; 및 &lt;strong&gt;템플리트&lt;/strong&gt; 자원 에서 &lt;code&gt;atomic_update&lt;/code&gt; 특성을 사용하여 레시피 레벨에서이 동작을 조정하십시오.&lt;strong&gt;&lt;/strong&gt;&lt;strong&gt;&lt;/strong&gt;&lt;strong&gt;&lt;/strong&gt;&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="df0c937705783449ac0caf7b653d13de1fd94827" translate="yes" xml:space="preserve">
          <source>Check Conditions</source>
          <target state="translated">조건 확인</target>
        </trans-unit>
        <trans-unit id="47f03ea955273bd2bfc584b16c9560de8c2ad9db" translate="yes" xml:space="preserve">
          <source>Check HA Status</source>
          <target state="translated">HA 상태 확인</target>
        </trans-unit>
        <trans-unit id="09ede8618bf9f6dbe47fadfde87c40535d522020" translate="yes" xml:space="preserve">
          <source>Check if the user has permission to the object type</source>
          <target state="translated">사용자에게 개체 유형에 대한 권한이 있는지 확인</target>
        </trans-unit>
        <trans-unit id="e89b5ee261169638893468de89ec64523e5dbd85" translate="yes" xml:space="preserve">
          <source>Check out a repo from master. Set to &lt;code&gt;false&lt;/code&gt; when using the &lt;code&gt;checkout_branch&lt;/code&gt; attribute to prevent the &lt;strong&gt;git&lt;/strong&gt; resource from attempting to check out master from master. Default value: &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">마스터에서 리포지토리를 확인하십시오. 로 설정 &lt;code&gt;false&lt;/code&gt; 사용하는 경우 &lt;code&gt;checkout_branch&lt;/code&gt; 를 방지하려면이 속성 &lt;strong&gt;자식&lt;/strong&gt; 마스터에서 마스터를 확인하려고 시도 자원을. 기본 값 : &lt;code&gt;true&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3f8163ac00cca429be43040ff67671671043f828" translate="yes" xml:space="preserve">
          <source>Check the local documentation or package repository for the distribution that is being used. For example, on Ubuntu 9.10-10.04, the &lt;code&gt;mkpasswd&lt;/code&gt; package is required and on Ubuntu 10.10+ the &lt;code&gt;whois&lt;/code&gt; package is required.</source>
          <target state="translated">사용중인 분배에 대해서는 로컬 문서 또는 패키지 저장소를 확인하십시오. 예를 들어, Ubuntu 9.10-10.04에서는 &lt;code&gt;mkpasswd&lt;/code&gt; 패키지가 필요하고 Ubuntu 10.10+에서는 &lt;code&gt;whois&lt;/code&gt; 패키지가 필요합니다.</target>
        </trans-unit>
        <trans-unit id="d523ccd072376b0193b67d4fcd0a8b94a89cc93f" translate="yes" xml:space="preserve">
          <source>Checks to see if the Amazon EC2 node has MySQL</source>
          <target state="translated">Amazon EC2 노드에 MySQL이 있는지 확인</target>
        </trans-unit>
        <trans-unit id="46de8428aceba9e6f65b8b138ff5bea565618675" translate="yes" xml:space="preserve">
          <source>Chef</source>
          <target state="translated">Chef</target>
        </trans-unit>
        <trans-unit id="44933d6cd4c1712cb2d3b20d143ece643e46e2dd" translate="yes" xml:space="preserve">
          <source>Chef Analytics</source>
          <target state="translated">요리사 분석</target>
        </trans-unit>
        <trans-unit id="436b7b3b66db3a3773058029c5c1a412802d2bc4" translate="yes" xml:space="preserve">
          <source>Chef Analytics has been replaced by Chef Automate.</source>
          <target state="translated">Chef Analytics가 Chef Automate로 대체되었습니다.</target>
        </trans-unit>
        <trans-unit id="40f419b13d197094e90be0d15449f34629a5a55b" translate="yes" xml:space="preserve">
          <source>Chef Analytics includes a powerful rules processing system that allows notifications to be generated based on observed events in the data stream, such as:</source>
          <target state="translated">Chef Analytics에는 다음과 같은 데이터 스트림에서 관찰 된 이벤트를 기반으로 알림을 생성 할 수있는 강력한 규칙 처리 시스템이 포함되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="2918d92c7e5bcfc8c157acb0d9cabf974257add0" translate="yes" xml:space="preserve">
          <source>Chef Analytics includes:</source>
          <target state="translated">Chef Analytics에는 다음이 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="40c483e6a533947909d227b8fa179758e0e1653a" translate="yes" xml:space="preserve">
          <source>Chef Analytics uses the same RabbitMQ service that is configured on the Chef server. When the Chef Analytics server is configured as a standalone server, the default settings for &lt;code&gt;rabbitmq['node_ip_address']&lt;/code&gt; and &lt;code&gt;rabbitmq['vip']&lt;/code&gt; must be updated. When the Chef Analytics server is configured as a standalone server, change this value to &lt;code&gt;0.0.0.0&lt;/code&gt;.</source>
          <target state="translated">Chef Analytics는 Chef 서버에 구성된 것과 동일한 RabbitMQ 서비스를 사용합니다. Chef Analytics 서버가 독립형 서버로 구성된 경우 &lt;code&gt;rabbitmq['node_ip_address']&lt;/code&gt; 및 &lt;code&gt;rabbitmq['vip']&lt;/code&gt; 의 기본 설정을 업데이트해야합니다. Chef Analytics 서버가 독립형 서버로 구성되면이 값을 &lt;code&gt;0.0.0.0&lt;/code&gt; 으로 변경하십시오 .</target>
        </trans-unit>
        <trans-unit id="d8c6198591a2e2aab28d8f4935e2304f788f58a9" translate="yes" xml:space="preserve">
          <source>Chef Analytics uses the same RabbitMQ service that is configured on the Chef server. When the Chef Analytics server is configured as a standalone server, the default settings for &lt;code&gt;rabbitmq['node_ip_address']&lt;/code&gt; and &lt;code&gt;rabbitmq['vip']&lt;/code&gt; must be updated. When the Chef Analytics server is configured as a standalone server, change this value to the backend VIP address for the Chef server.</source>
          <target state="translated">Chef Analytics는 Chef 서버에 구성된 것과 동일한 RabbitMQ 서비스를 사용합니다. Chef Analytics 서버가 독립형 서버로 구성된 경우 &lt;code&gt;rabbitmq['node_ip_address']&lt;/code&gt; 및 &lt;code&gt;rabbitmq['vip']&lt;/code&gt; 의 기본 설정을 업데이트해야합니다. Chef Analytics 서버가 독립형 서버로 구성된 경우이 값을 Chef 서버의 백엔드 VIP 주소로 변경하십시오.</target>
        </trans-unit>
        <trans-unit id="333ec7dd692cccd6558515d375cf6b4506e3bb36" translate="yes" xml:space="preserve">
          <source>Chef Analytics uses the same RabbitMQ service that is configured on the Chef server. When the Chef Analytics server is configured as a standalone server, the default settings for &lt;code&gt;rabbitmq['node_ip_address']&lt;/code&gt; and &lt;code&gt;rabbitmq['vip']&lt;/code&gt; must be updated. When the Chef Analytics server is configured as a standalone server, this value should be updated to be the backend VIP address for the Chef server.</source>
          <target state="translated">Chef Analytics는 Chef 서버에 구성된 것과 동일한 RabbitMQ 서비스를 사용합니다. Chef Analytics 서버가 독립형 서버로 구성된 경우 &lt;code&gt;rabbitmq['node_ip_address']&lt;/code&gt; 및 &lt;code&gt;rabbitmq['vip']&lt;/code&gt; 의 기본 설정을 업데이트해야합니다. Chef Analytics 서버가 독립형 서버로 구성된 경우이 값은 Chef 서버의 백엔드 VIP 주소로 업데이트되어야합니다.</target>
        </trans-unit>
        <trans-unit id="e01a3becd8c5134363fdb164939f7c21c1f0c14d" translate="yes" xml:space="preserve">
          <source>Chef Components</source>
          <target state="translated">요리사 부품</target>
        </trans-unit>
        <trans-unit id="9267fb56b115ba895d54d66eeb0322dd48dcf4c3" translate="yes" xml:space="preserve">
          <source>Chef DK and Windows</source>
          <target state="translated">Chef DK 및 Windows</target>
        </trans-unit>
        <trans-unit id="6491416ad9a3780a7f26fa3e0dec2e8e0acba6e3" translate="yes" xml:space="preserve">
          <source>Chef Manage</source>
          <target state="translated">요리사 관리</target>
        </trans-unit>
        <trans-unit id="72d3415e01c3fe8ff978f0d276d3c846bdbb1efe" translate="yes" xml:space="preserve">
          <source>Chef Push Jobs</source>
          <target state="translated">요리사 푸시 채용</target>
        </trans-unit>
        <trans-unit id="c838377b061b78a9a52e2ad3c67b45de5197d2a0" translate="yes" xml:space="preserve">
          <source>Chef Push Jobs Groups</source>
          <target state="translated">요리사 푸시 채용 그룹</target>
        </trans-unit>
        <trans-unit id="9fba7401bf7efe062bbfd2e8cbf221d95b385215" translate="yes" xml:space="preserve">
          <source>Chef Server</source>
          <target state="translated">요리사 서버</target>
        </trans-unit>
        <trans-unit id="2e639133ee95bfc0a3962b8ca49ebba17e98c781" translate="yes" xml:space="preserve">
          <source>Chef Server / Manage the Server</source>
          <target state="translated">요리사 서버 / 서버 관리</target>
        </trans-unit>
        <trans-unit id="f3ed5aeef4670c42ea6b9799f38e8c580092740b" translate="yes" xml:space="preserve">
          <source>Chef Server / Setup &amp;amp; Config</source>
          <target state="translated">Chef 서버 / 설정 및 구성</target>
        </trans-unit>
        <trans-unit id="cf9256666c4fdf5ae8fc2441221a62771e3980f2" translate="yes" xml:space="preserve">
          <source>Chef Server / Theory &amp;amp; Concepts</source>
          <target state="translated">요리사 서버 / 이론 및 개념</target>
        </trans-unit>
        <trans-unit id="20ac940c6fa7735c8b506aea212108d23494fe1b" translate="yes" xml:space="preserve">
          <source>Chef Server API</source>
          <target state="translated">요리사 서버 API</target>
        </trans-unit>
        <trans-unit id="34b13bf97053d1f07b081de35c734ab76ded2574" translate="yes" xml:space="preserve">
          <source>Chef Server Components</source>
          <target state="translated">Chef 서버 구성 요소</target>
        </trans-unit>
        <trans-unit id="de5e4988997d1b3b4c4ed70a48729769717afd7c" translate="yes" xml:space="preserve">
          <source>Chef Server Setting</source>
          <target state="translated">요리사 서버 설정</target>
        </trans-unit>
        <trans-unit id="9548f8b447540a6ab3bf3e547bace7e6f1081a49" translate="yes" xml:space="preserve">
          <source>Chef Style Guide</source>
          <target state="translated">요리사 스타일 가이드</target>
        </trans-unit>
        <trans-unit id="f3617e035312a4f2a8580de7faf9ebca9fe727fb" translate="yes" xml:space="preserve">
          <source>Chef Supermarket is the location in which community cookbooks are authored and maintained. Cookbooks that are part of the Chef Supermarket may be used by any Chef user. How community cookbooks are used varies from organization to organization.</source>
          <target state="translated">Chef Supermarket은 커뮤니티 요리 책을 작성하고 관리하는 위치입니다. Chef Supermarket의 일부인 Cookbook은 모든 Chef 사용자가 사용할 수 있습니다. 커뮤니티 요리 책 사용 방법은 조직마다 다릅니다.</target>
        </trans-unit>
        <trans-unit id="df67b3896afd21c42f54b4fc85c1a24cc2640586" translate="yes" xml:space="preserve">
          <source>Chef development kit: &lt;code&gt;/opt/chefdk/embedded/ssl/certs/cacert.pem&lt;/code&gt;</source>
          <target state="translated">요리사 개발 키트 : &lt;code&gt;/opt/chefdk/embedded/ssl/certs/cacert.pem&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e665fe22eeffaf18887443f1a4123ed904dd685c" translate="yes" xml:space="preserve">
          <source>Chef has many built-in resources that cover all of the most common actions across all of the most common platforms. You can build your own resources for handle any situation that isn&amp;rsquo;t covered by a built-in resource.</source>
          <target state="translated">Chef에는 가장 일반적인 모든 플랫폼에서 가장 일반적인 작업을 모두 다루는 많은 내장 리소스가 있습니다. 기본 제공 리소스가 포함되지 않은 상황을 처리하기 위해 고유 한 리소스를 구축 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="be0a0dace5343a98f69a4ed906e6ea4c6c68d0aa" translate="yes" xml:space="preserve">
          <source>Chef has the following major components:</source>
          <target state="translated">Chef에는 다음과 같은 주요 구성 요소가 있습니다.</target>
        </trans-unit>
        <trans-unit id="0e0af23c7b385e46b4222e528eedad6498db9f62" translate="yes" xml:space="preserve">
          <source>Chef includes two important command-line tools:</source>
          <target state="translated">Chef에는 두 가지 중요한 명령 줄 도구가 있습니다.</target>
        </trans-unit>
        <trans-unit id="48698906b8290713f835868a29ff4a958db0c5a2" translate="yes" xml:space="preserve">
          <source>Chef is a powerful automation platform that transforms infrastructure into code. Whether you&amp;rsquo;re operating in the cloud, on-premises, or in a hybrid environment, Chef automates how infrastructure is configured, deployed, and managed across your network, no matter its size.</source>
          <target state="translated">Chef는 인프라를 코드로 변환하는 강력한 자동화 플랫폼입니다. 클라우드, 온-프레미스 또는 하이브리드 환경에서 운영하든 상관없이 Chef는 규모에 상관없이 네트워크에서 인프라를 구성, 배포 및 관리하는 방법을 자동화합니다.</target>
        </trans-unit>
        <trans-unit id="7f7bba32d57f6bc9604c20e0ab09bd7be5dbf44c" translate="yes" xml:space="preserve">
          <source>Chef is a thin DSL (domain-specific language) built on top of Ruby. This approach allows Chef to provide just enough abstraction to make reasoning about your infrastructure easy. Chef includes a built-in taxonomy of all the basic resources one might configure on a system, plus a defined mechanism to extend that taxonomy using the full power of the Ruby language. Ruby was chosen because it provides the flexibility to use both the simple built-in taxonomy, as well as being able to handle any customization path your organization requires.</source>
          <target state="translated">Chef는 Ruby 위에 구축 된 얇은 DSL (도메인 특정 언어)입니다. 이 접근 방식을 통해 Chef는 인프라에 대한 추론을 쉽게하기에 충분한 추상화를 제공 할 수 있습니다. Chef에는 시스템에서 구성 할 수있는 모든 기본 리소스의 내장 분류 체계와 Ruby 언어의 모든 기능을 사용하여 분류 체계를 확장 할 수있는 정의 된 메커니즘이 포함되어 있습니다. Ruby는 간단한 내장 분류 체계를 모두 사용할 수있는 유연성과 조직에 필요한 사용자 정의 경로를 처리 할 수있는 유연성을 제공하기 때문에 선택되었습니다.</target>
        </trans-unit>
        <trans-unit id="9d802a309b939458bd1a7b5dec3b548a1ffdc7b7" translate="yes" xml:space="preserve">
          <source>Chef is maintained on GitHub. To contribute to Chef, such as submitting a pull request, requires using GitHub and git. The sections below describe how to use git to set up the Chef repository, keep it current and synchronized, and how to use branches to submit pull requests.</source>
          <target state="translated">요리사는 GitHub에서 유지 관리됩니다. 풀 요청 제출과 같이 Chef에 기여하려면 GitHub 및 git을 사용해야합니다. 아래 섹션에서는 git을 사용하여 Chef 리포지토리를 설정하고 최신 상태로 동기화하고 분기를 사용하여 풀 요청을 제출하는 방법에 대해 설명합니다.</target>
        </trans-unit>
        <trans-unit id="3b75e74ff60b383b704bdab376c69a5581d337bc" translate="yes" xml:space="preserve">
          <source>Chef maintains a collection of cookbooks that are widely used by the community.</source>
          <target state="translated">Chef는 커뮤니티에서 널리 사용되는 요리 책 모음을 유지 관리합니다.</target>
        </trans-unit>
        <trans-unit id="beb767e0fbeea99e3cf4a96857e8ee309a5378a5" translate="yes" xml:space="preserve">
          <source>Chef maintains a large collection of cookbooks. In addition, there are thousands of cookbooks created and maintained by the community:</source>
          <target state="translated">요리사는 많은 요리 책을 관리합니다. 또한 커뮤니티에서 만들고 관리하는 수천 가지 요리 책이 있습니다.</target>
        </trans-unit>
        <trans-unit id="ba8ef3d9d049a0bec0e86cbf50d2bd0ae725aba4" translate="yes" xml:space="preserve">
          <source>Chef management console can be upgraded as part of a standalone or high availability configuration:</source>
          <target state="translated">Chef 관리 콘솔은 독립형 또는 고 가용성 구성의 일부로 업그레이드 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="cd532927953a2eda90bd55a14b3aee8a4b0f255c" translate="yes" xml:space="preserve">
          <source>Chef management console is a web-based interface for the Chef server that provides users a way to manage the following objects:</source>
          <target state="translated">Chef 관리 콘솔은 Chef 서버를위한 웹 기반 인터페이스로, 사용자에게 다음과 같은 객체를 관리 할 수있는 방법을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="4366781e30bc1ad0135dbfd49fbc52c0adcb39a4" translate="yes" xml:space="preserve">
          <source>Chef management console is the user interface for the Chef server. It is used to manage data bags, attributes, run-lists, roles, environments, and cookbooks, and also to configure role-based access for users and groups.</source>
          <target state="translated">Chef 관리 콘솔은 Chef 서버의 사용자 인터페이스입니다. 데이터 백, 속성, 실행 목록, 역할, 환경 및 요리 책을 관리하고 사용자 및 그룹에 대한 역할 기반 액세스를 구성하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="2ad1d98144950dde93900b13d1d8427e1475be6a" translate="yes" xml:space="preserve">
          <source>Chef on Nodes</source>
          <target state="translated">노드 요리사</target>
        </trans-unit>
        <trans-unit id="33db90fe9a13bfc3ca9fbbb2ada04894749bc0c7" translate="yes" xml:space="preserve">
          <source>Chef provides the following plugins, which work the same as built-in subcommands (including common options), but must be installed separately (using RubyGems): &lt;code&gt;knife azure&lt;/code&gt;, &lt;code&gt;knife bluebox&lt;/code&gt;, &lt;code&gt;knife ec2&lt;/code&gt;, &lt;code&gt;knife eucalyptus&lt;/code&gt;, &lt;code&gt;knife google&lt;/code&gt;, &lt;code&gt;knife linode&lt;/code&gt;, &lt;code&gt;knife openstack&lt;/code&gt;, &lt;code&gt;knife rackspace&lt;/code&gt;, &lt;code&gt;knife terremark&lt;/code&gt;, &lt;code&gt;knife vcloud&lt;/code&gt;, and &lt;code&gt;knife windows&lt;/code&gt;.</source>
          <target state="translated">Chef는 기본 제공 하위 명령 (공통 옵션 포함)과 동일하게 작동하지만 다음과 같은 플러그인을 제공하지만 별도로 설치해야합니다 (RubyGems 사용) : &lt;code&gt;knife azure&lt;/code&gt; , &lt;code&gt;knife bluebox&lt;/code&gt; , &lt;code&gt;knife ec2&lt;/code&gt; , &lt;code&gt;knife eucalyptus&lt;/code&gt; , &lt;code&gt;knife google&lt;/code&gt; , &lt;code&gt;knife linode&lt;/code&gt; , &lt;code&gt;knife openstack&lt;/code&gt; , &lt;code&gt;knife rackspace&lt;/code&gt; , &lt;code&gt;knife terremark&lt;/code&gt; , &lt;code&gt;knife vcloud&lt;/code&gt; 및 &lt;code&gt;knife windows&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="75035eacea3dca90e15e9eb06375d917fd8c24e0" translate="yes" xml:space="preserve">
          <source>Chef provisioning</source>
          <target state="translated">요리사 제공</target>
        </trans-unit>
        <trans-unit id="ac4c61742460ee71ba08b8e3dbcaaba444c7ed53" translate="yes" xml:space="preserve">
          <source>Chef push jobs can be upgraded as part of a standalone or high availability configuration:</source>
          <target state="translated">Chef 푸시 작업은 독립형 또는 고 가용성 구성의 일부로 업그레이드 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d4911b000012ec98ab4c73be2dd57e1ffa9dbe57" translate="yes" xml:space="preserve">
          <source>Chef push jobs is an extension of the Chef server that allows jobs to be run against nodes independently of a chef-client run. A job is an action or a command to be executed against a subset of nodes; the nodes against which a job is run are determined by the results of a search query made to the Chef server.</source>
          <target state="translated">Chef 푸시 작업은 Chef 서버의 확장으로, Chef-Client 실행과 독립적으로 노드에 대해 작업을 실행할 수 있습니다. 작업은 노드의 서브 세트에 대해 실행될 조치 또는 명령입니다. 작업이 실행되는 노드는 Chef 서버에 대한 검색 쿼리 결과에 의해 결정됩니다.</target>
        </trans-unit>
        <trans-unit id="b267c15489bff6148e254b21f57e1fef795a9f74" translate="yes" xml:space="preserve">
          <source>Chef push jobs uses the Chef server API and a Ruby client to initiate all connections to the Chef server. Connections use the same authentication and authorization model as any other request made to the Chef server. A knife plugin is used to initiate job creation and job tracking.</source>
          <target state="translated">Chef 푸시 작업은 Chef 서버 API 및 Ruby 클라이언트를 사용하여 Chef 서버에 대한 모든 연결을 시작합니다. 연결은 Chef 서버에 대한 다른 요청과 동일한 인증 및 권한 부여 모델을 사용합니다. 나이프 플러그인은 작업 생성 및 작업 추적을 시작하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="134668cfc1259d5537ec0cbbed70e8bdb1d63e88" translate="yes" xml:space="preserve">
          <source>Chef recommends a single virtual machine instance</source>
          <target state="translated">Chef는 단일 가상 머신 인스턴스를 권장합니다</target>
        </trans-unit>
        <trans-unit id="df33a0dc684e8b31405bda877e879f158dde2c9c" translate="yes" xml:space="preserve">
          <source>Chef recommends that Chef professional services be engaged to help with capacity and architectural planning at this size</source>
          <target state="translated">Chef는이 규모의 용량 및 건축 계획을 돕기 위해 Chef 전문 서비스를 이용할 것을 권장합니다.</target>
        </trans-unit>
        <trans-unit id="d07375a4b4513e6fc79228821b9bdd90ab99d863" translate="yes" xml:space="preserve">
          <source>Chef recommends two hosts, one front-end and one back-end</source>
          <target state="translated">Chef는 프론트 엔드 하나와 백엔드 하나의 두 호스트를 권장합니다.</target>
        </trans-unit>
        <trans-unit id="149880b7f3566387537ffda1a91722146e6a3a61" translate="yes" xml:space="preserve">
          <source>Chef server 12 enables SSL verification by default for all requests made to the server, such as those made by knife and the chef-client. The certificate that is generated during the installation of the Chef server is self-signed, which means the certificate is not signed by a trusted certificate authority (CA) that ships with the chef-client. The certificate generated by the Chef server must be downloaded to any machine from which knife and/or the chef-client will make requests to the Chef server.</source>
          <target state="translated">Chef 서버 12는 knife 및 chef-client의 요청과 같이 서버에 대한 모든 요청에 ​​대해 기본적으로 SSL 확인을 활성화합니다. Chef 서버를 설치하는 동안 생성 된 인증서는 자체 서명됩니다. 즉, Chef-Client와 함께 제공되는 신뢰할 수있는 인증 기관 (CA)에서 인증서에 서명하지 않습니다. Chef 서버에서 생성 된 인증서는 knife 및 / 또는 chef-client가 Chef 서버에 요청하는 모든 컴퓨터에 다운로드해야합니다.</target>
        </trans-unit>
        <trans-unit id="0d93b734d698e91c1ef96692f09ad3eb37704398" translate="yes" xml:space="preserve">
          <source>Chef server 12 enables SSL verification by default for all requests made to the server, such as those made by knife and the chef-client. The certificate that is generated during the installation of the Chef server is self-signed, which means there isn&amp;rsquo;t a signing certificate authority (CA) to verify. In addition, this certificate must be downloaded to any machine from which knife and/or the chef-client will make requests to the Chef server.</source>
          <target state="translated">Chef 서버 12는 knife 및 chef-client의 요청과 같이 서버에 대한 모든 요청에 ​​대해 기본적으로 SSL 확인을 활성화합니다. Chef 서버를 설치하는 동안 생성 된 인증서는 자체 서명되므로 서명 할 인증 기관 (CA)이 없습니다. 또한이 인증서는 나이프 및 / 또는 요리사 클라이언트가 Chef 서버에 요청하는 모든 컴퓨터에 다운로드해야합니다.</target>
        </trans-unit>
        <trans-unit id="fca7ef521cfaa0ca5c29af8918114bf4e333b05d" translate="yes" xml:space="preserve">
          <source>Chef server 12 is installed to &lt;code&gt;/opt/opscode&lt;/code&gt;. (The existing Open Source Chef remains at &lt;code&gt;/opt/chef-server&lt;/code&gt;.) From this point, the &lt;code&gt;chef-server-ctl&lt;/code&gt; commands are running against the &lt;code&gt;/opt/opscode&lt;/code&gt; location.</source>
          <target state="translated">Chef 서버 12는 &lt;code&gt;/opt/opscode&lt;/code&gt; 에 설치됩니다 . (기존 오픈 소스 Chef는 &lt;code&gt;/opt/chef-server&lt;/code&gt; 에 그대로 있습니다.)이 시점부터 &lt;code&gt;chef-server-ctl&lt;/code&gt; 명령은 &lt;code&gt;/opt/opscode&lt;/code&gt; 위치 에 대해 실행 됩니다.</target>
        </trans-unit>
        <trans-unit id="75f96c3923e47f0064e42723ab1c7f4b0f519274" translate="yes" xml:space="preserve">
          <source>Chef server API</source>
          <target state="translated">요리사 서버 API</target>
        </trans-unit>
        <trans-unit id="c356c0933cf260e0bfda675a254f01d7d5d5deb4" translate="yes" xml:space="preserve">
          <source>Chef strongly recommends using some type of version control tool to manage the source code in the chef-repo. Chef uses git for everything, including for cookbooks. git and/or GitHub is not required to use Chef. If another version source control system is preferred over git (such as Subversion, Mercurial, or Bazaar) that is just fine.</source>
          <target state="translated">Chef는 일부 유형의 버전 관리 도구를 사용하여 chef-repo에서 소스 코드를 관리 할 것을 강력히 권장합니다. Chef는 요리 책을 포함하여 모든 것에 git을 사용합니다. git 및 / 또는 GitHub는 Chef를 사용할 필요가 없습니다. 다른 버전 소스 제어 시스템이 git (Subversion, Mercurial 또는 Bazaar 등)보다 선호되는 경우 괜찮습니다.</target>
        </trans-unit>
        <trans-unit id="0a33fa13c51c1fc2ec8990e9f03bda0453fae109" translate="yes" xml:space="preserve">
          <source>Chef uses MD5 hashes to uniquely identify files that are stored on the Chef server. MD5 is used only to generate a unique hash identifier and is not used for any cryptographic purpose.</source>
          <target state="translated">Chef는 MD5 해시를 사용하여 Chef 서버에 저장된 파일을 고유하게 식별합니다. MD5는 고유 한 해시 식별자를 생성하는 데만 사용되며 암호화 목적으로 사용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="834a3803148c7022953dc2b86362744e4b7bf025" translate="yes" xml:space="preserve">
          <source>Chef uses Ruby as its reference language to define the patterns that are found in resources, recipes, and cookbooks</source>
          <target state="translated">Chef는 Ruby를 참조 언어로 사용하여 리소스, 레시피 및 요리 책에서 발견되는 패턴을 정의합니다.</target>
        </trans-unit>
        <trans-unit id="ff516c2816bf2b509aa2fa2dbc384d77d2a11604" translate="yes" xml:space="preserve">
          <source>Chef will warn you if the Recipe DSL is provided by another custom resource or built-in resource. For example:</source>
          <target state="translated">레시피 DSL이 다른 사용자 지정 리소스 또는 내장 리소스에서 제공되는 경우 Chef에서 경고합니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="aed7e67488fc6ad8a9c441b02e6ba434a9d5e194" translate="yes" xml:space="preserve">
          <source>Chef::Log Entries</source>
          <target state="translated">Chef :: 로그 항목</target>
        </trans-unit>
        <trans-unit id="d7e30110984398662d2ac9faae88d839b11f30c0" translate="yes" xml:space="preserve">
          <source>Chef::Provider</source>
          <target state="translated">Chef::Provider</target>
        </trans-unit>
        <trans-unit id="7abdd2c007288c8a3dd650c324868154149327a6" translate="yes" xml:space="preserve">
          <source>Choose an IP address for the backend virtual IP (VIP). It must reside in the same network segment as the backend instances and must be &lt;a href=&quot;http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/MultipleIP.html&quot;&gt;assignable as a secondary private IP address&lt;/a&gt; to the primary backend Chef server. The IP address is specified in the chef-server.rb file. During installation, the high-availability plugin will automatically assign the VIP to the elastic network interface (ENI) for the primary instance.</source>
          <target state="translated">백엔드 가상 IP (VIP)의 IP 주소를 선택하십시오. 백엔드 인스턴스와 동일한 네트워크 세그먼트에 상주해야하며 기본 백엔드 Chef 서버에 &lt;a href=&quot;http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/MultipleIP.html&quot;&gt;보조 프라이빗 IP 주소&lt;/a&gt; 로 할당 할 수 있어야 합니다. IP 주소는 chef-server.rb 파일에 지정되어 있습니다. 설치 중에 고 가용성 플러그인은 기본 인스턴스의 탄력적 네트워크 인터페이스 (ENI)에 VIP를 자동으로 지정합니다.</target>
        </trans-unit>
        <trans-unit id="cbeb827f453d6679ea909310f136142e3e14a6c8" translate="yes" xml:space="preserve">
          <source>Click &lt;strong&gt;Add&lt;/strong&gt;. Continue this process until all constraints are added. When finished, click &lt;strong&gt;Next&lt;/strong&gt;.</source>
          <target state="translated">&lt;strong&gt;추가를&lt;/strong&gt; 클릭 &lt;strong&gt;하십시오&lt;/strong&gt; . 모든 구속 조건이 추가 될 때까지이 프로세스를 계속하십시오. 완료되면 &lt;strong&gt;다음을&lt;/strong&gt; 클릭하십시오 .</target>
        </trans-unit>
        <trans-unit id="01b89f24f8911bb05271c09bf944c0fcb8facacb" translate="yes" xml:space="preserve">
          <source>Click &lt;strong&gt;Administration&lt;/strong&gt;.</source>
          <target state="translated">&lt;strong&gt;관리를&lt;/strong&gt; 클릭하십시오 .</target>
        </trans-unit>
        <trans-unit id="fa13b4a9080bde21c70e936e8ea34f2755ff831f" translate="yes" xml:space="preserve">
          <source>Click &lt;strong&gt;Clients&lt;/strong&gt;.</source>
          <target state="translated">&lt;strong&gt;클라이언트를&lt;/strong&gt; 클릭하십시오 .</target>
        </trans-unit>
        <trans-unit id="64c471f1d8645f60880502fe94ff40ac88228744" translate="yes" xml:space="preserve">
          <source>Click &lt;strong&gt;Cookbooks&lt;/strong&gt;.</source>
          <target state="translated">&lt;strong&gt;요리 책을&lt;/strong&gt; 클릭하십시오 .</target>
        </trans-unit>
        <trans-unit id="2ab31a9b910ace159508fc8e7e1d1790f3b608af" translate="yes" xml:space="preserve">
          <source>Click &lt;strong&gt;Create Client&lt;/strong&gt;.</source>
          <target state="translated">&lt;strong&gt;클라이언트 작성을&lt;/strong&gt; 클릭 &lt;strong&gt;하십시오&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="57054973934787e8d6d0715a4faf2b8170fb9a84" translate="yes" xml:space="preserve">
          <source>Click &lt;strong&gt;Create Data Bag Item&lt;/strong&gt;.</source>
          <target state="translated">&lt;strong&gt;데이터 백 항목 작성을&lt;/strong&gt; 클릭 &lt;strong&gt;하십시오&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="eadf36e13715c65536cf924e732df34c975cf9a6" translate="yes" xml:space="preserve">
          <source>Click &lt;strong&gt;Create Data Bag&lt;/strong&gt;.</source>
          <target state="translated">&lt;strong&gt;데이터 백 작성을&lt;/strong&gt; 클릭 &lt;strong&gt;하십시오&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="54a86aae3289136257721233a121e024de680ff4" translate="yes" xml:space="preserve">
          <source>Click &lt;strong&gt;Create Environment&lt;/strong&gt;.</source>
          <target state="translated">&lt;strong&gt;환경 작성을&lt;/strong&gt; 클릭 &lt;strong&gt;하십시오&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="9a13a1a67bdd47da72f695adee2411276a64492d" translate="yes" xml:space="preserve">
          <source>Click &lt;strong&gt;Create Item&lt;/strong&gt;.</source>
          <target state="translated">&lt;strong&gt;항목 작성을&lt;/strong&gt; 클릭 &lt;strong&gt;하십시오&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="480c5afa0a86aadaba6081a6f945b9ac71583354" translate="yes" xml:space="preserve">
          <source>Click &lt;strong&gt;Create Role&lt;/strong&gt;.</source>
          <target state="translated">&lt;strong&gt;역할 작성을&lt;/strong&gt; 클릭 &lt;strong&gt;하십시오&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="042df4534b3105adc33a60f810e2203f766c0ce2" translate="yes" xml:space="preserve">
          <source>Click &lt;strong&gt;Create&lt;/strong&gt;.</source>
          <target state="translated">&lt;strong&gt;작성을&lt;/strong&gt; 클릭 &lt;strong&gt;하십시오&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="49c72290f0606831b7d2a7000ad97530020b8aea" translate="yes" xml:space="preserve">
          <source>Click &lt;strong&gt;Data Bags&lt;/strong&gt;.</source>
          <target state="translated">&lt;strong&gt;데이터 백을&lt;/strong&gt; 클릭하십시오 .</target>
        </trans-unit>
        <trans-unit id="ab8d729d3b186bf488cc4ce457fc8e4bad81f535" translate="yes" xml:space="preserve">
          <source>Click &lt;strong&gt;Delete&lt;/strong&gt;.</source>
          <target state="translated">&lt;strong&gt;삭제를&lt;/strong&gt; 클릭하십시오 .</target>
        </trans-unit>
        <trans-unit id="06faff9c1f96d42f714d69c85a99d1985d8e27bf" translate="yes" xml:space="preserve">
          <source>Click &lt;strong&gt;Download File&lt;/strong&gt;:</source>
          <target state="translated">&lt;strong&gt;파일 다운로드를&lt;/strong&gt; 클릭하십시오 .</target>
        </trans-unit>
        <trans-unit id="c84618757009fe52a1048be60d98381128677148" translate="yes" xml:space="preserve">
          <source>Click &lt;strong&gt;Edit Run List&lt;/strong&gt;.</source>
          <target state="translated">&lt;strong&gt;실행 목록 편집을&lt;/strong&gt; 클릭 &lt;strong&gt;하십시오&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="599e664c7c571e12e3b5ca45488d68364b15a010" translate="yes" xml:space="preserve">
          <source>Click &lt;strong&gt;Edit&lt;/strong&gt;.</source>
          <target state="translated">&lt;strong&gt;편집을&lt;/strong&gt; 클릭 &lt;strong&gt;하십시오&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="9ab4321ac24676e834df88013f5cef39d98bb016" translate="yes" xml:space="preserve">
          <source>Click &lt;strong&gt;Environments&lt;/strong&gt;.</source>
          <target state="translated">&lt;strong&gt;환경을&lt;/strong&gt; 클릭하십시오 .</target>
        </trans-unit>
        <trans-unit id="43f4c3620e965ff8ede6a5f5ea8e95b9de812e55" translate="yes" xml:space="preserve">
          <source>Click &lt;strong&gt;Groups&lt;/strong&gt;.</source>
          <target state="translated">&lt;strong&gt;그룹을&lt;/strong&gt; 클릭하십시오 .</target>
        </trans-unit>
        <trans-unit id="5d6bb244676c43e45db0b9bcac334294cd020c6a" translate="yes" xml:space="preserve">
          <source>Click &lt;strong&gt;Invite User&lt;/strong&gt;.</source>
          <target state="translated">&lt;strong&gt;사용자 초대를&lt;/strong&gt; 클릭하십시오 .</target>
        </trans-unit>
        <trans-unit id="2b6bdce1ad5e410c530ae399a801dbd075f7f361" translate="yes" xml:space="preserve">
          <source>Click &lt;strong&gt;Leave Organization&lt;/strong&gt;.</source>
          <target state="translated">&lt;strong&gt;조직 탈퇴를&lt;/strong&gt; 클릭하십시오 .</target>
        </trans-unit>
        <trans-unit id="b614fd889a579bcfb22d202c6a4b60d7f6fa3842" translate="yes" xml:space="preserve">
          <source>Click &lt;strong&gt;Manage Tags&lt;/strong&gt;.</source>
          <target state="translated">&lt;strong&gt;태그 관리를&lt;/strong&gt; 클릭 &lt;strong&gt;하십시오&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="5a907eabe68ccd173cd42bcd6494cdd0ccd78aef" translate="yes" xml:space="preserve">
          <source>Click &lt;strong&gt;Next&lt;/strong&gt;.</source>
          <target state="translated">&lt;strong&gt;다음을&lt;/strong&gt; 클릭하십시오 .</target>
        </trans-unit>
        <trans-unit id="ce962bdc005e978663ca73c9159afbc0d1a5cde8" translate="yes" xml:space="preserve">
          <source>Click &lt;strong&gt;Nodes&lt;/strong&gt;.</source>
          <target state="translated">&lt;strong&gt;노드를&lt;/strong&gt; 클릭하십시오 .</target>
        </trans-unit>
        <trans-unit id="ac761a7f442bbc9388d083d0be4f7a54a97c437f" translate="yes" xml:space="preserve">
          <source>Click &lt;strong&gt;Organizations&lt;/strong&gt;.</source>
          <target state="translated">&lt;strong&gt;조직을&lt;/strong&gt; 클릭하십시오 .</target>
        </trans-unit>
        <trans-unit id="313383a3339cc48a5bd06ec79559beeb07085228" translate="yes" xml:space="preserve">
          <source>Click &lt;strong&gt;Policy&lt;/strong&gt;.</source>
          <target state="translated">&lt;strong&gt;정책을&lt;/strong&gt; 클릭하십시오 .</target>
        </trans-unit>
        <trans-unit id="6672a3bf9905dd1c8e3f99a7d451692ca9654365" translate="yes" xml:space="preserve">
          <source>Click &lt;strong&gt;Remove from Organization&lt;/strong&gt;.</source>
          <target state="translated">&lt;strong&gt;조직에서 제거를&lt;/strong&gt; 클릭 &lt;strong&gt;하십시오&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="6d1fd0549a3c4d0c21edf46cb4825afc84dc7723" translate="yes" xml:space="preserve">
          <source>Click &lt;strong&gt;Remove&lt;/strong&gt;.</source>
          <target state="translated">&lt;strong&gt;제거를&lt;/strong&gt; 클릭 &lt;strong&gt;하십시오&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="6bd8888c4176e511db54c18e2a8d2b3db52f9e1a" translate="yes" xml:space="preserve">
          <source>Click &lt;strong&gt;Reset Key&lt;/strong&gt;.</source>
          <target state="translated">&lt;strong&gt;키 재설정을&lt;/strong&gt; 클릭하십시오 .</target>
        </trans-unit>
        <trans-unit id="f6c52e7fa4a684a6ffee8e712553d13a9bf98b2f" translate="yes" xml:space="preserve">
          <source>Click &lt;strong&gt;Roles&lt;/strong&gt;.</source>
          <target state="translated">&lt;strong&gt;역할을&lt;/strong&gt; 클릭하십시오 .</target>
        </trans-unit>
        <trans-unit id="8f1534120cc361e4e0202b34964611f9a0d0c6a2" translate="yes" xml:space="preserve">
          <source>Click &lt;strong&gt;Save Attributes&lt;/strong&gt;.</source>
          <target state="translated">&lt;strong&gt;속성 저장을&lt;/strong&gt; 클릭 &lt;strong&gt;하십시오&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="78bbcdb3ae6f238c8951f1a0bfc29c4ea6ffbedd" translate="yes" xml:space="preserve">
          <source>Click &lt;strong&gt;Save Item&lt;/strong&gt;.</source>
          <target state="translated">&lt;strong&gt;항목 저장을&lt;/strong&gt; 클릭 &lt;strong&gt;하십시오&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="8dabb02c71c061edd4d6be3ae27a1f7ba6aafc58" translate="yes" xml:space="preserve">
          <source>Click &lt;strong&gt;Save Run List&lt;/strong&gt;.</source>
          <target state="translated">&lt;strong&gt;실행 목록 저장을&lt;/strong&gt; 클릭 &lt;strong&gt;하십시오&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="4c705cedaf5d6913b2ea41151cc742632474c457" translate="yes" xml:space="preserve">
          <source>Click &lt;strong&gt;Save&lt;/strong&gt;.</source>
          <target state="translated">&lt;strong&gt;저장을&lt;/strong&gt; 클릭 &lt;strong&gt;하십시오&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="dbc2bacfa84bc8f2aea8b2d2011eada12fb55e65" translate="yes" xml:space="preserve">
          <source>Click &lt;strong&gt;Update Tags&lt;/strong&gt;.</source>
          <target state="translated">&lt;strong&gt;태그 업데이트를&lt;/strong&gt; 클릭하십시오 .</target>
        </trans-unit>
        <trans-unit id="d344bc803c3a59912fc782824f6f01740a18a201" translate="yes" xml:space="preserve">
          <source>Click &lt;strong&gt;Users&lt;/strong&gt;.</source>
          <target state="translated">&lt;strong&gt;사용자를&lt;/strong&gt; 클릭하십시오 .</target>
        </trans-unit>
        <trans-unit id="3e4f1632cfa4f26fed0ff980c8161862f7a48237" translate="yes" xml:space="preserve">
          <source>Click the &lt;strong&gt;+ Add&lt;/strong&gt; button and enter the name of the user or group to be added.</source>
          <target state="translated">&lt;strong&gt;+ 추가&lt;/strong&gt; 버튼을 클릭하고 &lt;strong&gt;추가&lt;/strong&gt; 할 사용자 또는 그룹의 이름을 입력하십시오.</target>
        </trans-unit>
        <trans-unit id="cffd66b3f7be8c292e8ad660763bfdf321dd07f8" translate="yes" xml:space="preserve">
          <source>Click the &lt;strong&gt;Attributes&lt;/strong&gt; tab.</source>
          <target state="translated">&lt;strong&gt;속성&lt;/strong&gt; 탭을 클릭 하십시오.</target>
        </trans-unit>
        <trans-unit id="ddf03b582a279709f0452f4db274064495fa7d35" translate="yes" xml:space="preserve">
          <source>Click the &lt;strong&gt;Chef Client&lt;/strong&gt; tab.</source>
          <target state="translated">&lt;strong&gt;Chef Client&lt;/strong&gt; 탭을 클릭 하십시오.</target>
        </trans-unit>
        <trans-unit id="846da34a04becb5b338433356e3e11b207311d5c" translate="yes" xml:space="preserve">
          <source>Click the &lt;strong&gt;Content&lt;/strong&gt; tab.</source>
          <target state="translated">&lt;strong&gt;내용&lt;/strong&gt; 탭을 클릭 하십시오.</target>
        </trans-unit>
        <trans-unit id="dd3e9cea4b0f1606d66c198bf6b3acdef04cf1ff" translate="yes" xml:space="preserve">
          <source>Click the &lt;strong&gt;Details&lt;/strong&gt; tab.</source>
          <target state="translated">&lt;strong&gt;세부 사항&lt;/strong&gt; 탭을 클릭 하십시오.</target>
        </trans-unit>
        <trans-unit id="963e88b638ccbe3857be2d03756ef4dd77b73045" translate="yes" xml:space="preserve">
          <source>Click the &lt;strong&gt;Details&lt;/strong&gt; tab:</source>
          <target state="translated">&lt;strong&gt;세부 사항&lt;/strong&gt; 탭을 클릭 하십시오.</target>
        </trans-unit>
        <trans-unit id="f5524eb468d41b17351fb17f35d5a9cdfaaa2ec4" translate="yes" xml:space="preserve">
          <source>Click the &lt;strong&gt;Permissions&lt;/strong&gt; tab.</source>
          <target state="translated">&lt;strong&gt;권한&lt;/strong&gt; 탭을 클릭 하십시오.</target>
        </trans-unit>
        <trans-unit id="6b1d9d23f3e8ae1cd0b38a70d976fbe4af4f80e0" translate="yes" xml:space="preserve">
          <source>Click the download button.</source>
          <target state="translated">다운로드 버튼을 클릭하십시오.</target>
        </trans-unit>
        <trans-unit id="1bdd79b12628d8c4ec4226ff4207341dcb869ab8" translate="yes" xml:space="preserve">
          <source>Client</source>
          <target state="translated">Client</target>
        </trans-unit>
        <trans-unit id="e264339caea69f74e2e273aa165aad0c00b1d9d4" translate="yes" xml:space="preserve">
          <source>Client Key Permissions</source>
          <target state="translated">클라이언트 키 권한</target>
        </trans-unit>
        <trans-unit id="9a8ba98a5a0fe046ee22c054b371ab66430dfee1" translate="yes" xml:space="preserve">
          <source>Client keys can be managed from the Chef management console.</source>
          <target state="translated">Chef 관리 콘솔에서 클라이언트 키를 관리 할 수 ​​있습니다.</target>
        </trans-unit>
        <trans-unit id="28e22fe3dde53ce03b40861a4b22d205384bde66" translate="yes" xml:space="preserve">
          <source>Clients</source>
          <target state="translated">Clients</target>
        </trans-unit>
        <trans-unit id="778d56a60eaffd9e9db65e30439ec6d22c8a2300" translate="yes" xml:space="preserve">
          <source>Clone or check out the source. When a checkout is available, this provider does nothing.</source>
          <target state="translated">소스를 복제하거나 확인하십시오. 체크 아웃이 가능하면이 제공자는 아무것도하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="7355cd2d6fd8daab917d1627f47eb53dd4cf8f6f" translate="yes" xml:space="preserve">
          <source>Clone the &lt;a href=&quot;https://github.com/chef/chef&quot;&gt;https://github.com/chef/chef&lt;/a&gt; repository:</source>
          <target state="translated">&lt;a href=&quot;https://github.com/chef/chef&quot;&gt;https://github.com/chef/chef&lt;/a&gt; 저장소를 복제하십시오 .</target>
        </trans-unit>
        <trans-unit id="e46ac952350cdfa9dec833725857d399d8da331c" translate="yes" xml:space="preserve">
          <source>Clone the chef-repo from GitHub</source>
          <target state="translated">GitHub에서 요리사 레포 복제</target>
        </trans-unit>
        <trans-unit id="356e41d8fff63c5180b6f787607d888d62e2cfb1" translate="yes" xml:space="preserve">
          <source>Cloud resources, including provisioning</source>
          <target state="translated">프로비저닝을 포함한 클라우드 리소스</target>
        </trans-unit>
        <trans-unit id="6915b1264e75dfe5192e615c1f545ddbf0d5e5ee" translate="yes" xml:space="preserve">
          <source>Cloudkick</source>
          <target state="translated">Cloudkick</target>
        </trans-unit>
        <trans-unit id="9a20c0354230a60c7400a9ebd3babb3afd414ba7" translate="yes" xml:space="preserve">
          <source>Cluster IP Address</source>
          <target state="translated">클러스터 IP 주소</target>
        </trans-unit>
        <trans-unit id="8901895fb1b1d4c4ea2fec368c25176bf73e2f7e" translate="yes" xml:space="preserve">
          <source>Command</source>
          <target state="translated">Command</target>
        </trans-unit>
        <trans-unit id="43653ba5e615996c58bce4dbcf12dbc7b34ad662" translate="yes" xml:space="preserve">
          <source>Commands are often run in combination with other Chef resources. The following example shows the &lt;strong&gt;template&lt;/strong&gt; resource run with the &lt;strong&gt;execute&lt;/strong&gt; resource to add an entry to a LDAP Directory Interchange Format (LDIF) file:</source>
          <target state="translated">명령은 종종 다른 Chef 자원과 함께 실행됩니다. 에서 다음 예제 프로그램 &lt;strong&gt;템플릿&lt;/strong&gt; 리소스가 실행 &lt;strong&gt;실행&lt;/strong&gt; 리소스는 LDAP 디렉토리 교환 형식 (LDIF) 파일에 항목을 추가합니다 :</target>
        </trans-unit>
        <trans-unit id="fce06e20e5f7f74aacccab40b59b75a56c8f7305" translate="yes" xml:space="preserve">
          <source>Comments</source>
          <target state="translated">Comments</target>
        </trans-unit>
        <trans-unit id="29503955db10e4eafee69d8ec50fea3ee7174751" translate="yes" xml:space="preserve">
          <source>Commits to the Chef repositories should never be made against the master branch. Use a topic branch instead. A topic branch solves a single and unique problem and often maps closely to an issue being tracked in the repository. For example, a topic branch to add support for a new init system or a topic branch to resolve a bug that occurs in a specific version of CentOS. Ideally, a topic branch is named in a way that associates it closely with the issue it is attempting to resolve. This helps ensure that others may easily find it.</source>
          <target state="translated">Chef 리포지토리에 대한 커밋은 절대 마스터 브랜치에 대해 수행해서는 안됩니다. 대신 토픽 브랜치를 사용하십시오. 토픽 브랜치는 하나의 고유 한 문제를 해결하며 종종 저장소에서 추적되는 문제와 밀접한 관련이 있습니다. 예를 들어, 새로운 init 시스템에 대한 지원을 추가하는 토픽 브랜치 또는 특정 버전의 CentOS에서 발생하는 버그를 해결하기위한 토픽 브랜치. 이상적으로는 토픽 브랜치가 문제를 해결하려는 문제와 밀접하게 연관시키는 방식으로 이름이 지정됩니다. 이를 통해 다른 사람들이 쉽게 찾을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="87835ced7cce734e9a2aa7797cd0ea443e855beb" translate="yes" xml:space="preserve">
          <source>Common Functionality</source>
          <target state="translated">공통 기능</target>
        </trans-unit>
        <trans-unit id="966bc8891779463a6d9e31d4954a2c2b6ad11814" translate="yes" xml:space="preserve">
          <source>Common Item</source>
          <target state="translated">공통 항목</target>
        </trans-unit>
        <trans-unit id="f6eaa962650a97f840a2800c301825ed8d72a917" translate="yes" xml:space="preserve">
          <source>Common Options</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08bc421b12b355e52cd77ee75a7c2ba7feb647ce" translate="yes" xml:space="preserve">
          <source>Common Ruby techniques can be used with the Recipe DSL methods.</source>
          <target state="translated">일반적인 Ruby 기술은 레시피 DSL 방법과 함께 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="527e52561bfae46335d1c38aaee77d444057bd72" translate="yes" xml:space="preserve">
          <source>Community Cookbooks</source>
          <target state="translated">커뮤니티 요리 책</target>
        </trans-unit>
        <trans-unit id="17a9a17d426491172bcb745218f62ac85a1d46ba" translate="yes" xml:space="preserve">
          <source>Community Handlers</source>
          <target state="translated">커뮤니티 핸들러</target>
        </trans-unit>
        <trans-unit id="8ec27bf36dab0cab613f33105c05c57f0d4a428a" translate="yes" xml:space="preserve">
          <source>Community member &lt;code&gt;juliandunn&lt;/code&gt; created a custom &lt;a href=&quot;https://github.com/juliandunn/cookbook_versions_handler&quot;&gt;report handler that logs all of the cookbooks and cookbook versions&lt;/a&gt; that were used during the chef-client run, and then reports after the run is complete. This handler requires the &lt;strong&gt;chef_handler&lt;/strong&gt; resource (which is available from the &lt;strong&gt;chef_handler&lt;/strong&gt; cookbook).</source>
          <target state="translated">커뮤니티 구성원 &lt;code&gt;juliandunn&lt;/code&gt; 은 chef-client 실행 중에 사용 된 &lt;a href=&quot;https://github.com/juliandunn/cookbook_versions_handler&quot;&gt;모든 요리 책 및 요리 책 버전&lt;/a&gt; 을 기록한 다음 실행이 완료된 후 보고 하는 사용자 정의 보고서 핸들러를 작성했습니다 . 이 핸들러에는 &lt;strong&gt;chef_handler&lt;/strong&gt; 리소스 ( &lt;strong&gt;chef_handler&lt;/strong&gt; 요리 책에서 제공)가 필요합니다.</target>
        </trans-unit>
        <trans-unit id="c822dccf61cda9cb4c87eee9eeedd877f76b440c" translate="yes" xml:space="preserve">
          <source>Compiled whenever a cookbook is uploaded to the Chef server or when the &lt;code&gt;knife cookbook metadata&lt;/code&gt; subcommand is run, and then stored as JSON data</source>
          <target state="translated">요리 책이 Chef 서버에 업로드되거나 &lt;code&gt;knife cookbook metadata&lt;/code&gt; 하위 명령이 실행될 때마다 컴파일 된 후 JSON 데이터로 저장됩니다.</target>
        </trans-unit>
        <trans-unit id="c6e37b13a4e81e824e4de63b891fac7bb4f43bc9" translate="yes" xml:space="preserve">
          <source>Compiling the resource collection by loading each of the required cookbooks, including recipes, attributes, and all other dependencies</source>
          <target state="translated">레시피, 속성 및 기타 모든 종속성을 포함하여 각각의 필요한 요리 책을로드하여 자원 수집 컴파일</target>
        </trans-unit>
        <trans-unit id="c92c529e0731c57efd7550480196484040b33c3e" translate="yes" xml:space="preserve">
          <source>Component</source>
          <target state="translated">Component</target>
        </trans-unit>
        <trans-unit id="9289473eeedaee09d76c8cf1b6994d8550debf46" translate="yes" xml:space="preserve">
          <source>Components</source>
          <target state="translated">Components</target>
        </trans-unit>
        <trans-unit id="e39262defe80a83fac1b793497417432c8b1a879" translate="yes" xml:space="preserve">
          <source>Conclusion</source>
          <target state="translated">Conclusion</target>
        </trans-unit>
        <trans-unit id="43e178396555f2d8e9fcb01889a45ffe0d0c1c63" translate="yes" xml:space="preserve">
          <source>Configuration data in DSC scripts may be customized from a recipe. For example, scripts are typically customized to set the behavior for Windows PowerShell credential data types. Configuration data may be specified in one of three ways:</source>
          <target state="translated">DSC 스크립트의 구성 데이터는 레시피에서 사용자 정의 할 수 있습니다. 예를 들어 스크립트는 일반적으로 Windows PowerShell 자격 증명 데이터 형식의 동작을 설정하도록 사용자 지정됩니다. 구성 데이터는 다음 세 가지 방법 중 하나로 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="eafc190245e44e82f4956fd53763f1d54956cd7d" translate="yes" xml:space="preserve">
          <source>Configuration of SSL for the Chef server using certificate authority-verified certificates is done by placing the certificate and private key file obtained from the certifying authority in the correct files after the initial configuration of Chef server.</source>
          <target state="translated">인증 기관에서 인증 한 인증서를 사용하여 Chef 서버에 대한 SSL 구성은 인증 기관에서 얻은 인증서 및 개인 키 파일을 Chef 서버의 초기 구성 후 올바른 파일에 배치하여 수행됩니다.</target>
        </trans-unit>
        <trans-unit id="6541036ec5289902b176dc8b95519251d0ea4790" translate="yes" xml:space="preserve">
          <source>Configuration settings in the knife.rb file</source>
          <target state="translated">knife.rb 파일의 구성 설정</target>
        </trans-unit>
        <trans-unit id="792c81a4cfdcb5b45d688cb03c2fd2e816f86d44" translate="yes" xml:space="preserve">
          <source>Configure</source>
          <target state="translated">Configure</target>
        </trans-unit>
        <trans-unit id="486c90dcc0d0aed7e071c2979a51ec431dd78383" translate="yes" xml:space="preserve">
          <source>Configure Hostnames</source>
          <target state="translated">호스트 이름 구성</target>
        </trans-unit>
        <trans-unit id="864dae7f890c64ddbd9c912d27e542ac08a6ec07" translate="yes" xml:space="preserve">
          <source>Configure LDAP</source>
          <target state="translated">LDAP 구성</target>
        </trans-unit>
        <trans-unit id="5ffdf900b383ccd8a9d6c536e7cdd5e2e7423b31" translate="yes" xml:space="preserve">
          <source>Configure a local mail transfer agent on the Chef server using the steps appropriate for the platform on which the Chef server is running.</source>
          <target state="translated">Chef 서버가 실행중인 플랫폼에 적합한 단계를 사용하여 Chef 서버에서 로컬 메일 전송 에이전트를 구성하십시오.</target>
        </trans-unit>
        <trans-unit id="6b33ba7d88e2137fc8750377ba98d70e70be4b83" translate="yes" xml:space="preserve">
          <source>Configure a service based on the value of the &lt;code&gt;startup_type&lt;/code&gt; property.</source>
          <target state="translated">&lt;code&gt;startup_type&lt;/code&gt; 특성 값을 기반으로 서비스를 구성하십시오 .</target>
        </trans-unit>
        <trans-unit id="d4efbc51bf1c4316622742f9488072424f015f6d" translate="yes" xml:space="preserve">
          <source>Configure group permissions for files. A string or ID that identifies the group owner by group name, including fully qualified group names such as &lt;code&gt;domain\group&lt;/code&gt; or &lt;code&gt;group@domain&lt;/code&gt;. If this value is not specified, existing groups remain unchanged and new group assignments use the default &lt;code&gt;POSIX&lt;/code&gt; group (if available).</source>
          <target state="translated">파일에 대한 그룹 권한을 구성하십시오. &lt;code&gt;domain\group&lt;/code&gt; 또는 &lt;code&gt;group@domain&lt;/code&gt; 과 같은 완전한 그룹 이름을 포함하여 그룹 이름으로 그룹 소유자를 식별하는 문자열 또는 ID입니다 . 이 값을 지정하지 않으면 기존 그룹은 변경되지 않고 새 그룹 할당은 기본 &lt;code&gt;POSIX&lt;/code&gt; 그룹 (사용 가능한 경우)을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="191331805a94310e262a96fbb5be426a8ad1ff4f" translate="yes" xml:space="preserve">
          <source>Configure owner permissions for files. A string or ID that identifies the group owner by user name, including fully qualified user names such as &lt;code&gt;domain\user&lt;/code&gt; or &lt;code&gt;user@domain&lt;/code&gt;. If this value is not specified, existing owners remain unchanged and new owner assignments use the current user (when necessary).</source>
          <target state="translated">파일의 소유자 권한을 구성하십시오. &lt;code&gt;domain\user&lt;/code&gt; 또는 &lt;code&gt;user@domain&lt;/code&gt; 과 같은 완전한 사용자 이름을 포함하여 사용자 이름으로 그룹 소유자를 식별하는 문자열 또는 ID입니다 . 이 값을 지정하지 않으면 기존 소유자는 변경되지 않고 새 소유자 할당은 현재 사용자를 사용합니다 (필요한 경우).</target>
        </trans-unit>
        <trans-unit id="4a8a8754c7dada0868d3d5eb044f57057f1483a5" translate="yes" xml:space="preserve">
          <source>Configure the &lt;code&gt;-XX:NewSize&lt;/code&gt;&lt;code&gt;JAVA_OPTS&lt;/code&gt; environment variable. Default value: &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;-XX:NewSize&lt;/code&gt; &lt;code&gt;JAVA_OPTS&lt;/code&gt; 환경 변수를 구성하십시오 . 기본 값 : &lt;code&gt;nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f2129d1c7ec7366e0eafd3797bc53b4314a21416" translate="yes" xml:space="preserve">
          <source>Configures httpd and systemd from a template</source>
          <target state="translated">템플릿에서 httpd 및 systemd를 구성합니다.</target>
        </trans-unit>
        <trans-unit id="c054618cc09bea5a9cb755511f3a257a62abf1f6" translate="yes" xml:space="preserve">
          <source>Configuring a Proxy Server</source>
          <target state="translated">프록시 서버 구성</target>
        </trans-unit>
        <trans-unit id="c2bf17a7f54ab1d7c6e25731c80c1815c91ca970" translate="yes" xml:space="preserve">
          <source>Configuring organizational policy, including defining roles and environments and ensuring that critical data is stored in data bags</source>
          <target state="translated">역할 및 환경 정의를 포함하여 중요한 정책이 데이터 백에 저장되도록 조직 정책 구성</target>
        </trans-unit>
        <trans-unit id="20d7b8ec6d87ed5b42511b84314a797004b055cb" translate="yes" xml:space="preserve">
          <source>Confirm:</source>
          <target state="translated">Confirm:</target>
        </trans-unit>
        <trans-unit id="82f0a1df9860c2fb04f18c625e75abbff271545c" translate="yes" xml:space="preserve">
          <source>Conflict. The object already exists.</source>
          <target state="translated">충돌. 개체가 이미 존재합니다.</target>
        </trans-unit>
        <trans-unit id="05abc432c5a691216ebe5a839a48a4c6b4858328" translate="yes" xml:space="preserve">
          <source>Connect to a database</source>
          <target state="translated">데이터베이스에 연결</target>
        </trans-unit>
        <trans-unit id="8514ed8fe0fb7ea4d7832a4a0018fb27bd41b996" translate="yes" xml:space="preserve">
          <source>Connecting to the Erlang processes should only be done when directed by Chef support services.</source>
          <target state="translated">Erlang 프로세스에 연결하려면 Chef 지원 서비스에서 지시 한 경우에만 수행해야합니다.</target>
        </trans-unit>
        <trans-unit id="caf79a2bbc630357707710b1630bdbf3c966c867" translate="yes" xml:space="preserve">
          <source>Connecting to the PostgreSQL database should only be done when directed by Chef support services.</source>
          <target state="translated">Chef 지원 서비스가 지시 한 경우에만 PostgreSQL 데이터베이스에 연결해야합니다.</target>
        </trans-unit>
        <trans-unit id="bc6721aa52d413004b9505a6bed9383c13afd71a" translate="yes" xml:space="preserve">
          <source>Consider the following for situations where environment variables are used to set the proxy:</source>
          <target state="translated">환경 변수가 프록시를 설정하는 데 사용되는 상황에서는 다음을 고려하십시오.</target>
        </trans-unit>
        <trans-unit id="036327dc727e7760e598ed0e1440f98bc90c57b1" translate="yes" xml:space="preserve">
          <source>Consider the following snippet of JSON data:</source>
          <target state="translated">다음 JSON 데이터 스 니펫을 고려하십시오.</target>
        </trans-unit>
        <trans-unit id="52e68a873a2be3470675b9ee933b98d781ae7fef" translate="yes" xml:space="preserve">
          <source>Constraints</source>
          <target state="translated">Constraints</target>
        </trans-unit>
        <trans-unit id="7a007a4bef1899f848d246b5884d1d37729916a4" translate="yes" xml:space="preserve">
          <source>Constructs to Avoid</source>
          <target state="translated">피해야 할 구조물</target>
        </trans-unit>
        <trans-unit id="53dc84a4a6f11be77c89be5b1e5de9791f931317" translate="yes" xml:space="preserve">
          <source>Contain the chef-client run in a secondary process with dedicated RAM. When the chef-client run is complete, the RAM is returned to the master process. This option helps ensure that a chef-client uses a steady amount of RAM over time because the master process does not run recipes. This option also helps prevent memory leaks such as those that can be introduced by the code contained within a poorly designed cookbook. Use &lt;code&gt;--no-fork&lt;/code&gt; to disable running the chef-client in fork node. Default value: &lt;code&gt;--fork&lt;/code&gt;.</source>
          <target state="translated">셰프 클라이언트가 전용 RAM으로 2 차 프로세스로 실행되도록합니다. chef-client 실행이 완료되면 RAM이 마스터 프로세스로 리턴됩니다. 이 옵션은 마스터 프로세스가 레시피를 실행하지 않기 때문에 요리사 클라이언트가 일정 시간 동안 일정한 양의 RAM을 사용하도록합니다. 이 옵션은 잘못 설계된 요리 책에 포함 된 코드에 의해 발생할 수있는 메모리 누수를 방지하는 데 도움이됩니다. 포크 노드에서 chef-client 실행을 비활성화 하려면 &lt;code&gt;--no-fork&lt;/code&gt; 를 사용하십시오. 기본 값 : &lt;code&gt;--fork&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="144a64224e1a9bf164ea696ad592167c783ad116" translate="yes" xml:space="preserve">
          <source>Contain the chef-client run in a secondary process with dedicated RAM. When the chef-client run is complete, the RAM is returned to the master process. This option helps ensure that a chef-client uses a steady amount of RAM over time because the master process does not run recipes. This option also helps prevent memory leaks such as those that can be introduced by the code contained within a poorly designed cookbook. Use &lt;code&gt;--no-fork&lt;/code&gt; to disable running the chef-client in fork node. Default value: &lt;code&gt;--fork&lt;/code&gt;. This option may not be used in the same command with the &lt;code&gt;--daemonize&lt;/code&gt; and &lt;code&gt;--interval&lt;/code&gt; options.</source>
          <target state="translated">셰프 클라이언트가 전용 RAM으로 2 차 프로세스로 실행되도록합니다. chef-client 실행이 완료되면 RAM이 마스터 프로세스로 리턴됩니다. 이 옵션은 마스터 프로세스가 레시피를 실행하지 않기 때문에 요리사 클라이언트가 일정 시간 동안 일정한 양의 RAM을 사용하도록합니다. 이 옵션은 잘못 설계된 요리 책에 포함 된 코드에 의해 발생할 수있는 메모리 누수를 방지하는 데 도움이됩니다. 포크 노드에서 chef-client 실행을 비활성화 하려면 &lt;code&gt;--no-fork&lt;/code&gt; 를 사용하십시오. 기본 값 : &lt;code&gt;--fork&lt;/code&gt; . 이 옵션은 &lt;code&gt;--daemonize&lt;/code&gt; 및 &lt;code&gt;--interval&lt;/code&gt; 옵션 과 동일한 명령에서 사용할 수 없습니다 .</target>
        </trans-unit>
        <trans-unit id="e7efb77c7b65d832273f8c07de32028eed28af73" translate="yes" xml:space="preserve">
          <source>Containers are an approach to virtualization that allows a single operating system to host many working configurations, where each working configuration&amp;mdash;a container&amp;mdash;is assigned a single responsibility that is isolated from all other responsibilities. Containers are popular as a way to manage distributed and scalable applications and services.</source>
          <target state="translated">컨테이너는 가상화에 대한 접근 방식으로서 단일 운영 체제가 많은 작업 구성을 호스트 할 수있게하며, 각 작업 구성 (컨테이너)에는 다른 모든 책임과 격리 된 단일 책임이 할당됩니다. 컨테이너는 분산 및 확장 가능한 응용 프로그램 및 서비스를 관리하는 방법으로 널리 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="dc27743383d1024c34e57b7c842347c556df3810" translate="yes" xml:space="preserve">
          <source>Contains cookbooks that have been downloaded from the &lt;a href=&quot;https://supermarket.chef.io&quot;&gt;https://supermarket.chef.io&lt;/a&gt; or created locally.</source>
          <target state="translated">&lt;a href=&quot;https://supermarket.chef.io&quot;&gt;https://supermarket.chef.io&lt;/a&gt; 에서 다운로드 했거나 로컬로 만든 요리 책이 들어 있습니다 .</target>
        </trans-unit>
        <trans-unit id="e47b962ecd8553ed363ca8f5d32e4c5bbd8f4d8f" translate="yes" xml:space="preserve">
          <source>Continue running a recipe if a resource fails for any reason. Default value: &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">어떤 이유로 든 자원이 실패하면 레시피를 계속 실행하십시오. 기본 값 : &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="63423cc509044bd35bf484fb73a543d35bf35406" translate="yes" xml:space="preserve">
          <source>Controls the phase during which a gem is installed on a node. Set to &lt;code&gt;true&lt;/code&gt; to install a gem while the resource collection is being built (the &amp;ldquo;compile phase&amp;rdquo;). Set to &lt;code&gt;false&lt;/code&gt; to install a gem while the chef-client is configuring the node (the &amp;ldquo;converge phase&amp;rdquo;). Possible values: &lt;code&gt;nil&lt;/code&gt; (for verbose warnings), &lt;code&gt;true&lt;/code&gt; (to warn once per chef-client run), or &lt;code&gt;false&lt;/code&gt; (to remove all warnings). Recommended value: &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">gem이 노드에 설치되는 단계를 제어합니다. 자원 콜렉션이 빌드되는 동안 gem을 설치하려면 &lt;code&gt;true&lt;/code&gt; 로 설정하십시오 ( &quot;컴파일 단계&quot;). chef-client가 노드를 구성하는 동안 보석을 설치하려면 &lt;code&gt;false&lt;/code&gt; 로 설정 하십시오 (&amp;ldquo;수렴 단계&amp;rdquo;). 가능한 값은 &lt;code&gt;nil&lt;/code&gt; (자세한 경고의 경우), &lt;code&gt;true&lt;/code&gt; (요리사 클라이언트 실행마다 한 번 경고) 또는 &lt;code&gt;false&lt;/code&gt; (모든 경고를 제거하는)입니다. 권장 값 : &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="00704f0925109f058e891dfa27718ece21af5261" translate="yes" xml:space="preserve">
          <source>Controls the phase during which a gem is installed on a node. Set to &lt;code&gt;true&lt;/code&gt; to install a gem while the resource collection is being built (the &amp;ldquo;compile phase&amp;rdquo;). Set to &lt;code&gt;false&lt;/code&gt; to install a gem while the chef-client is configuring the node (the &amp;ldquo;converge phase&amp;rdquo;). Recommended value: &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">gem이 노드에 설치되는 단계를 제어합니다. 자원 콜렉션이 빌드되는 동안 gem을 설치하려면 &lt;code&gt;true&lt;/code&gt; 로 설정하십시오 ( &quot;컴파일 단계&quot;). chef-client가 노드를 구성하는 동안 보석을 설치하려면 &lt;code&gt;false&lt;/code&gt; 로 설정 하십시오 (&amp;ldquo;수렴 단계&amp;rdquo;). 권장 값 : &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7c9441c005ce0e286851208642bc33cf105938a1" translate="yes" xml:space="preserve">
          <source>Convert &lt;code&gt;C:/&lt;/code&gt; to &lt;code&gt;/c/&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;C:/&lt;/code&gt; 를 &lt;code&gt;/c/&lt;/code&gt; 로 변환하십시오 .</target>
        </trans-unit>
        <trans-unit id="7ae20725e7ad8e7458a75f2ef8f61d22b6af926c" translate="yes" xml:space="preserve">
          <source>Convert Truths</source>
          <target state="translated">진실을 변환</target>
        </trans-unit>
        <trans-unit id="6a4678b02e9809ff959fe34076618e22d757165a" translate="yes" xml:space="preserve">
          <source>Convert a string to uppercase or lowercase. For example, a hostname named &amp;ldquo;Foo&amp;rdquo;:</source>
          <target state="translated">문자열을 대문자 또는 소문자로 변환하십시오. 예를 들어 이름이&amp;ldquo;Foo&amp;rdquo;인 호스트 이름 :</target>
        </trans-unit>
        <trans-unit id="57b6427ed8364bf597f570748e86823efa712c80" translate="yes" xml:space="preserve">
          <source>Convert something to either true or false (&lt;code&gt;!!&lt;/code&gt; means not not!!):</source>
          <target state="translated">무언가를 참 또는 거짓으로 변환하십시오 ( &lt;code&gt;!!&lt;/code&gt; 는 아닙니다!) :</target>
        </trans-unit>
        <trans-unit id="ae28e153fd42b3087fa9d3d89c76a5aaf5e4b04c" translate="yes" xml:space="preserve">
          <source>Cookbook</source>
          <target state="translated">Cookbook</target>
        </trans-unit>
        <trans-unit id="bd1cddbdd8d9c05afa56bb9a1519cef0a079cb6a" translate="yes" xml:space="preserve">
          <source>Cookbook Directories and Metadata</source>
          <target state="translated">요리 책 디렉토리와 메타 데이터</target>
        </trans-unit>
        <trans-unit id="c2e5b39e9f4d5b786f4d1bb52fd1928ae74c881b" translate="yes" xml:space="preserve">
          <source>Cookbook Files</source>
          <target state="translated">요리 책 파일</target>
        </trans-unit>
        <trans-unit id="33678af193ddad7e27eab497e1f608705dcc6b15" translate="yes" xml:space="preserve">
          <source>Cookbook Naming</source>
          <target state="translated">요리 책 명명</target>
        </trans-unit>
        <trans-unit id="601a062e68eea2e0f22d23e7ed15b2f85df73439" translate="yes" xml:space="preserve">
          <source>Cookbook Patterns</source>
          <target state="translated">요리 책 패턴</target>
        </trans-unit>
        <trans-unit id="ba4c87bb2aa16b70802ae9a427aa51c00f323a25" translate="yes" xml:space="preserve">
          <source>Cookbook Versioning</source>
          <target state="translated">요리 책 버전 관리</target>
        </trans-unit>
        <trans-unit id="55bf3339cf79a545d11c006665766a2644954e5d" translate="yes" xml:space="preserve">
          <source>Cookbook Versions</source>
          <target state="translated">요리 책 버전</target>
        </trans-unit>
        <trans-unit id="23dce919fd6e04b48de9babef7ae0f0c51d9d77e" translate="yes" xml:space="preserve">
          <source>Cookbook and custom resource names should contain only alphanumeric characters. A hyphen (&lt;code&gt;-&lt;/code&gt;) is a valid character and may be used in cookbook and custom resource names, but it is discouraged. The chef-client will return an error if a hyphen is not converted to an underscore (&lt;code&gt;_&lt;/code&gt;) when referencing from a recipe the name of a custom resource in which a hyphen is located.</source>
          <target state="translated">쿡북 및 사용자 지정 리소스 이름은 영숫자 문자 만 포함해야합니다. 하이픈 ( &lt;code&gt;-&lt;/code&gt; )은 유효한 문자이며 요리 책 및 사용자 지정 리소스 이름에 사용될 수 있지만 사용하지 않는 것이 좋습니다. 레시피에서 하이픈이있는 사용자 지정 리소스의 이름을 참조 할 때 하이픈이 밑줄 ( &lt;code&gt;_&lt;/code&gt; ) 로 변환되지 않으면 chef-client는 오류를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="eb7d36252bd3be3612ddc847dd1e115091b08e81" translate="yes" xml:space="preserve">
          <source>Cookbook uploads</source>
          <target state="translated">요리 책 업로드</target>
        </trans-unit>
        <trans-unit id="3a27713963cec9f9e08aaeca3b2c803987f229a9" translate="yes" xml:space="preserve">
          <source>Cookbooks</source>
          <target state="translated">Cookbooks</target>
        </trans-unit>
        <trans-unit id="dddbe0d296bfeda9a45c9624b75a70236abe54f1" translate="yes" xml:space="preserve">
          <source>Cookbooks (in attribute files and/or recipes)</source>
          <target state="translated">요리 책 (속성 파일 및 / 또는 레시피)</target>
        </trans-unit>
        <trans-unit id="a44f94d190bc4283f3ea997a8697f86bc93ac1a7" translate="yes" xml:space="preserve">
          <source>Cookbooks (including recipes, attributes, custom resources, libraries, and templates)</source>
          <target state="translated">요리 책 (레시피, 속성, 커스텀 리소스, 라이브러리 및 템플릿 포함)</target>
        </trans-unit>
        <trans-unit id="a4dd75d9511cbb4ad7d73b1a9c4db19ab6136238" translate="yes" xml:space="preserve">
          <source>Cookbooks Maintained by Chef</source>
          <target state="translated">요리사가 관리하는 요리 책</target>
        </trans-unit>
        <trans-unit id="1800ddb452124688874380265e1070e524a75ef0" translate="yes" xml:space="preserve">
          <source>Cookbooks Maintained by the Community</source>
          <target state="translated">커뮤니티에서 유지 관리하는 요리 책</target>
        </trans-unit>
        <trans-unit id="50a2312acfe5ecf00b0a31fc1973ba17c76d0311" translate="yes" xml:space="preserve">
          <source>Cookbooks and recipes</source>
          <target state="translated">요리 책과 요리법</target>
        </trans-unit>
        <trans-unit id="0abc677183ddc5f5c88717adbddd522ceae34187" translate="yes" xml:space="preserve">
          <source>Cookbooks are comprised of the following components:</source>
          <target state="translated">요리 책은 다음과 같은 구성 요소로 구성됩니다.</target>
        </trans-unit>
        <trans-unit id="f7f54a12e863704b6944b6fd426da9e6b0efdaf7" translate="yes" xml:space="preserve">
          <source>Cookbooks can be viewed from the Chef management console web user interface. Cookbooks are managed using knife.</source>
          <target state="translated">Cookbook은 Chef 관리 콘솔 웹 사용자 인터페이스에서 볼 수 있습니다. 요리 책은 나이프를 사용하여 관리됩니다.</target>
        </trans-unit>
        <trans-unit id="2f0601e8ddd4a88df02542065f25ab58c5ebbd54" translate="yes" xml:space="preserve">
          <source>Cookbooks contain recipes, attributes, custom resources, libraries, definitions, files, templates, tests, and metadata</source>
          <target state="translated">요리 책에는 레시피, 속성, 사용자 정의 리소스, 라이브러리, 정의, 파일, 템플릿, 테스트 및 메타 데이터가 포함되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="941fef2b4e9625f7c50a1062a4e31aca120091e3" translate="yes" xml:space="preserve">
          <source>Cookbooks that contain custom resources in the &lt;code&gt;/libraries&lt;/code&gt; directory of a cookbook should:</source>
          <target state="translated">요리 책의 &lt;code&gt;/libraries&lt;/code&gt; 디렉토리에 사용자 정의 자원이 포함 된 요리 책은 다음과 같아야합니다.</target>
        </trans-unit>
        <trans-unit id="69b43257798c4ca3ad83f7312a0e7c723b2439ac" translate="yes" xml:space="preserve">
          <source>Copy data between file descriptors when &lt;code&gt;sendfile()&lt;/code&gt; is used. Default value: &lt;code&gt;on&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;sendfile()&lt;/code&gt; 을 사용할 때 파일 설명자간에 데이터를 복사하십시오 . 기본 값 : &lt;code&gt;on&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a3e0d79c0f921346eb7053850138ac2460614791" translate="yes" xml:space="preserve">
          <source>Copy it as shown, add it under &lt;code&gt;/templates/default&lt;/code&gt;, and then name it &lt;code&gt;httpd.service.erb&lt;/code&gt;.</source>
          <target state="translated">표시된대로 복사하고 &lt;code&gt;/templates/default&lt;/code&gt; 아래에 추가 한 다음 이름을 &lt;code&gt;httpd.service.erb&lt;/code&gt; 로 지정하십시오 .</target>
        </trans-unit>
        <trans-unit id="39379168cb5199a191e20467202789ba7f10473d" translate="yes" xml:space="preserve">
          <source>Copy it as shown, add it under &lt;code&gt;/templates/default&lt;/code&gt;, and then name the file &lt;code&gt;httpd.conf.erb&lt;/code&gt;.</source>
          <target state="translated">표시된대로 복사하여 &lt;code&gt;/templates/default&lt;/code&gt; 아래에 추가 한 다음 파일 이름을 &lt;code&gt;httpd.conf.erb&lt;/code&gt; 로 지정하십시오 .</target>
        </trans-unit>
        <trans-unit id="82283f90d20c5d1dea3bf66604bd2c35278b9b97" translate="yes" xml:space="preserve">
          <source>Copy the entire &lt;code&gt;/etc/opscode-push-jobs-server&lt;/code&gt; directory from the backend primary to all frontend and backend servers. For example, from each server run:</source>
          <target state="translated">전체 &lt;code&gt;/etc/opscode-push-jobs-server&lt;/code&gt; 디렉토리를 백엔드 기본 서버 에서 모든 프론트 엔드 및 백엔드 서버로 복사하십시오 . 예를 들어, 각 서버에서 다음을 실행하십시오.</target>
        </trans-unit>
        <trans-unit id="0281e56cc1dbcae64ace43f86310a48dd2242dcd" translate="yes" xml:space="preserve">
          <source>Copy the entire &lt;code&gt;/etc/opscode-reporting&lt;/code&gt; directory from the backend primary server to all frontend and backend servers. For example, from each server run:</source>
          <target state="translated">전체 &lt;code&gt;/etc/opscode-reporting&lt;/code&gt; 디렉토리를 백엔드 기본 서버에서 모든 프론트 엔드 및 백엔드 서버로 복사하십시오 . 예를 들어, 각 서버에서 다음을 실행하십시오.</target>
        </trans-unit>
        <trans-unit id="284a6d3942211f94f7abb9787441159cd24179fb" translate="yes" xml:space="preserve">
          <source>Copy the entire &lt;code&gt;/etc/opscode&lt;/code&gt; directory from the back end primary server to all front and back end nodes. For example, from each server run:</source>
          <target state="translated">백엔드 기본 서버에서 모든 프론트 엔드 및 백엔드 노드로 전체 &lt;code&gt;/etc/opscode&lt;/code&gt; 디렉토리를 복사하십시오 . 예를 들어, 각 서버에서 다음을 실행하십시오.</target>
        </trans-unit>
        <trans-unit id="c49f8cb15f4127a791caff2c7752a91b1ccf9466" translate="yes" xml:space="preserve">
          <source>Copy the private key:</source>
          <target state="translated">개인 키를 복사하십시오.</target>
        </trans-unit>
        <trans-unit id="baa58c32cd55fdae942c8714433c5170e989208a" translate="yes" xml:space="preserve">
          <source>Copy the template to the chef-repo in the &lt;code&gt;.chef/bootstrap&lt;/code&gt; directory:</source>
          <target state="translated">템플릿을 &lt;code&gt;.chef/bootstrap&lt;/code&gt; 디렉토리 의 chef-repo로 복사하십시오 .</target>
        </trans-unit>
        <trans-unit id="6e157c5da4410b7e9de85f5c93026b9176e69064" translate="yes" xml:space="preserve">
          <source>Create</source>
          <target state="translated">Create</target>
        </trans-unit>
        <trans-unit id="cf42f437bfeaa2819687f80339a2a709a0508d85" translate="yes" xml:space="preserve">
          <source>Create Templates</source>
          <target state="translated">템플릿 만들기</target>
        </trans-unit>
        <trans-unit id="a138f3821a9b5de9166581acbb01f6ce5df3f8ef" translate="yes" xml:space="preserve">
          <source>Create a API client, typically an administrator client on a freshly-installed Chef server.</source>
          <target state="translated">API 클라이언트, 일반적으로 새로 설치된 Chef 서버에 관리자 클라이언트를 작성하십시오.</target>
        </trans-unit>
        <trans-unit id="c654ddbf3a68bce18ec58e966cfeba0517361694" translate="yes" xml:space="preserve">
          <source>Create a Cookbook</source>
          <target state="translated">요리 책 만들기</target>
        </trans-unit>
        <trans-unit id="dd4883120a3b0105d8b209933580bb35da068925" translate="yes" xml:space="preserve">
          <source>Create a Namespace</source>
          <target state="translated">네임 스페이스 만들기</target>
        </trans-unit>
        <trans-unit id="d8b5d5651ea23fa61e5986b36ca3ba186b70bd87" translate="yes" xml:space="preserve">
          <source>Create a client as an admin client. This is required for any user to access Open Source Chef as an administrator.</source>
          <target state="translated">클라이언트를 관리자 클라이언트로 작성하십시오. 이것은 모든 사용자가 Open Source Chef에 관리자 권한으로 액세스하는 데 필요합니다.</target>
        </trans-unit>
        <trans-unit id="206cd94b8e65c4451f73ffc8d19dd0f6518b2904" translate="yes" xml:space="preserve">
          <source>Create a client as an admin client. This is required for any user to access Open Source Chef as an administrator. This option only works when used with the open source Chef server and will have no effect when used with Enterprise Chef or Chef server 12.x.</source>
          <target state="translated">클라이언트를 관리자 클라이언트로 작성하십시오. 이것은 모든 사용자가 Open Source Chef에 관리자 권한으로 액세스하는 데 필요합니다. 이 옵션은 오픈 소스 Chef 서버와 함께 사용하는 경우에만 작동하며 Enterprise Chef 또는 Chef 서버 12.x와 함께 사용하면 효과가 없습니다.</target>
        </trans-unit>
        <trans-unit id="67a94d3f1b8b31894fbadae0eda96d784b55ed1c" translate="yes" xml:space="preserve">
          <source>Create a custom class or module; for example, create a subclass of &lt;code&gt;Chef::Recipe&lt;/code&gt;</source>
          <target state="translated">사용자 정의 클래스 또는 모듈을 작성하십시오. 예를 들어 &lt;code&gt;Chef::Recipe&lt;/code&gt; 의 서브 클래스를 작성하십시오.</target>
        </trans-unit>
        <trans-unit id="199ec62dcfcbe144f20d172411b3a343b421d9ce" translate="yes" xml:space="preserve">
          <source>Create a custom handler</source>
          <target state="translated">커스텀 핸들러 만들기</target>
        </trans-unit>
        <trans-unit id="a0b86a18d4d197b47893e1d582866c9b2abba071" translate="yes" xml:space="preserve">
          <source>Create a data bag by creating folders. For example:</source>
          <target state="translated">폴더를 만들어 데이터 백을 만듭니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="522dfdb71404903b8d7962a262f715f9f11ab14d" translate="yes" xml:space="preserve">
          <source>Create a directory and/or the contents of that directory, but only if it does not exist.</source>
          <target state="translated">디렉토리 및 / 또는 해당 디렉토리의 컨텐츠를 작성하십시오 (없는 경우에만).</target>
        </trans-unit>
        <trans-unit id="7927c220a3471f3efbf04d3cc576cfd13476b6b6" translate="yes" xml:space="preserve">
          <source>Create a duplicate (non-unique) user account.</source>
          <target state="translated">고유하지 않은 중복 사용자 계정을 만듭니다.</target>
        </trans-unit>
        <trans-unit id="2ac4f920207f9a594c13be8a67cdb23c0941c80f" translate="yes" xml:space="preserve">
          <source>Create a file in the &lt;code&gt;cookbooks/COOKBOOK_NAME/files/default&lt;/code&gt; directory that is named &lt;code&gt;wrap-ssh4git.sh&lt;/code&gt; and which contains the following:</source>
          <target state="translated">이름이 &lt;code&gt;wrap-ssh4git.sh&lt;/code&gt; 인 &lt;code&gt;cookbooks/COOKBOOK_NAME/files/default&lt;/code&gt; 디렉토리 에 다음을 포함 하는 파일을 작성하십시오 .</target>
        </trans-unit>
        <trans-unit id="4632b098177c5bf529275a5ae27bfe50476f9d63" translate="yes" xml:space="preserve">
          <source>Create a file named chef-server.rb that is located in the &lt;code&gt;/etc/opscode/&lt;/code&gt; directory. See the chef-server.rb section below for an example of the settings and values that are required.</source>
          <target state="translated">&lt;code&gt;/etc/opscode/&lt;/code&gt; 디렉토리 에있는 chef-server.rb라는 파일을 작성하십시오 . 필요한 설정 및 값의 예는 아래 chef-server.rb 섹션을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="5fa94b2c1051cb57ab50a8c113170171bd42f6e6" translate="yes" xml:space="preserve">
          <source>Create a file named chef-server.rb that is located in the &lt;code&gt;/etc/opscode/&lt;/code&gt; directory. See the chef-server.rb section below for an example of the settings and values that are required. The &lt;code&gt;ha['ebs_device']&lt;/code&gt; setting must specify the actual &lt;code&gt;/dev&lt;/code&gt; device name that is reported by the machine&amp;rsquo;s kernel, which may not be the same value that is reported by Amazon Web Services (AWS). For example, Amazon Web Services (AWS) may refer to a volume as &lt;code&gt;/dev/sdf&lt;/code&gt; through the management console, but to the Linux kernel on the instance, it may appear as &lt;code&gt;/dev/xvdf&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;/etc/opscode/&lt;/code&gt; 디렉토리 에있는 chef-server.rb라는 파일을 작성하십시오 . 필요한 설정 및 값의 예는 아래 chef-server.rb 섹션을 참조하십시오. &lt;code&gt;ha['ebs_device']&lt;/code&gt; 설정은 실제 지정해야 &lt;code&gt;/dev&lt;/code&gt; 에 아마존 웹 서비스 (AWS)에 의해보고 된 값과 동일하지 않을 수 있습니다 시스템의 커널에 의해보고 된 장치 이름을. 예를 들어, AWS (Amazon Web Services)는 관리 콘솔을 통해 볼륨을 &lt;code&gt;/dev/sdf&lt;/code&gt; 로 참조 할 수 있지만 인스턴스의 Linux 커널에서는 &lt;code&gt;/dev/xvdf&lt;/code&gt; 로 나타날 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="99c79cbfeecbfd74f222f742c6229c8d9d8aa2da" translate="yes" xml:space="preserve">
          <source>Create a file only if the file does not exist. When the file exists, nothing happens.</source>
          <target state="translated">파일이 존재하지 않는 경우에만 파일을 작성하십시오. 파일이 존재하면 아무 일도 일어나지 않습니다.</target>
        </trans-unit>
        <trans-unit id="14aa9e15b5f6afe492bac9f7410075f8d5907f0e" translate="yes" xml:space="preserve">
          <source>Create a launchd property list, and then ensure that it is enabled. If a launchd property list already exists, but does not match, updates the property list to match, and then restarts the daemon or agent.</source>
          <target state="translated">시작된 속성 목록을 만든 다음 활성화되어 있는지 확인하십시오. 시작된 특성 목록이 이미 존재하지만 일치하지 않으면 특성 목록을 일치하도록 업데이트 한 다음 디먼 또는 에이전트를 다시 시작하십시오.</target>
        </trans-unit>
        <trans-unit id="4806c720f0d47f44d51825813b595dfb99581bd5" translate="yes" xml:space="preserve">
          <source>Create a launchd property list, if it does not already exist.</source>
          <target state="translated">실행 된 특성 목록이 없으면 작성하십시오.</target>
        </trans-unit>
        <trans-unit id="09df36ff51478aead4c0379fb7ed15d4fae82acd" translate="yes" xml:space="preserve">
          <source>Create a physical volume, volume group, and logical volume with the following series of commands. The volume group and logical volume names must be &lt;code&gt;chef&lt;/code&gt; and &lt;code&gt;data&lt;/code&gt;, respectively.</source>
          <target state="translated">다음 일련의 명령을 사용하여 물리 볼륨, 볼륨 그룹 및 논리 볼륨을 만듭니다. 볼륨 그룹과 논리 볼륨 이름은 각각 &lt;code&gt;chef&lt;/code&gt; 와 &lt;code&gt;data&lt;/code&gt; 여야합니다 .</target>
        </trans-unit>
        <trans-unit id="5222b1a2dfdd442d0d1c1bb6680d87c3516e9bb4" translate="yes" xml:space="preserve">
          <source>Create a registry key if it does not exist. Also, create a registry key value if it does not exist.</source>
          <target state="translated">레지스트리 키가 없으면 작성하십시오. 또한 레지스트리 키 값이 없으면 작성하십시오.</target>
        </trans-unit>
        <trans-unit id="6741f748b5c15706d82225d063b52ad7dca47334" translate="yes" xml:space="preserve">
          <source>Create a resource that configures Apache httpd for Red Hat Enterprise Linux 7 and CentOS 7.</source>
          <target state="translated">Red Hat Enterprise Linux 7 및 CentOS 7에 대해 Apache httpd를 구성하는 자원을 작성하십시오.</target>
        </trans-unit>
        <trans-unit id="eef11400d277860adf52e6f839496f73c0cbb91f" translate="yes" xml:space="preserve">
          <source>Create a system user. This property may be used with &lt;code&gt;useradd&lt;/code&gt; as the provider to create a system user which passes the &lt;code&gt;-r&lt;/code&gt; flag to &lt;code&gt;useradd&lt;/code&gt;.</source>
          <target state="translated">시스템 사용자를 작성하십시오. 이 속성을 &lt;code&gt;useradd&lt;/code&gt; 와 함께 공급자로 사용하여 &lt;code&gt;-r&lt;/code&gt; 플래그를 &lt;code&gt;useradd&lt;/code&gt; 에 전달하는 시스템 사용자를 만들 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="6af5e30f59c633111454d9a2c1eca00a8a56dc88" translate="yes" xml:space="preserve">
          <source>Create a user without a public key. This key may be managed later by using the &lt;code&gt;knife user key&lt;/code&gt; subcommands.</source>
          <target state="translated">공개 키없이 사용자를 작성하십시오. 이 키는 나중에 &lt;code&gt;knife user key&lt;/code&gt; 하위 명령 을 사용하여 관리 할 수 ​​있습니다 .</target>
        </trans-unit>
        <trans-unit id="e41005b20b4c7e7f4ce5b04430ca281001eb3973" translate="yes" xml:space="preserve">
          <source>Create an Amazon Elastic Block Store (EBS) volume and attach it to the primary backend.</source>
          <target state="translated">Amazon Elastic Block Store (EBS) 볼륨을 생성하여 기본 백엔드에 연결하십시오.</target>
        </trans-unit>
        <trans-unit id="96c8075ba025a1b1d343b6022719d1f70abd74cd" translate="yes" xml:space="preserve">
          <source>Create an Amazon Elastic Block Store (EBS) volume to store the Chef server&amp;rsquo;s data. It is recommended that you use an EBS Provisioned IOPS volume type, with the maximum IOPS ratio for the size of volume.</source>
          <target state="translated">Chef 서버의 데이터를 저장할 Amazon Elastic Block Store (EBS) 볼륨을 생성하십시오. 볼륨 크기에 대한 최대 IOPS 비율과 함께 EBS 프로비저닝 IOPS 볼륨 유형을 사용하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="38e446868424f832c75da48ccdf42a1cd27a2b65" translate="yes" xml:space="preserve">
          <source>Create an Identity and Access Management (IAM) user with at least the permissions documented in the reference section. Record this user&amp;rsquo;s access and secret keys; these will be used in the chef-server.rb configuration file.</source>
          <target state="translated">최소한 참조 섹션에 문서화 된 권한으로 IAM (Identity and Access Management) 사용자를 작성하십시오. 이 사용자의 액세스 및 비밀 키를 기록하십시오. 이들은 chef-server.rb 구성 파일에서 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="18a856bb4aa5a4cb6ff5146495292d8ffbb0e5b7" translate="yes" xml:space="preserve">
          <source>Create an appropriately named tracking branch:</source>
          <target state="translated">적절하게 명명 된 추적 분기를 작성하십시오.</target>
        </trans-unit>
        <trans-unit id="6c58cb22a6f04fafb0f481bef9180e26c2fae9ae" translate="yes" xml:space="preserve">
          <source>Create appropriate security groups to contain the backend instances. The only requirement for the Chef server is that ICMP is permitted between the two backend instances; Keepalived requires it for communication and heartbeat.</source>
          <target state="translated">백엔드 인스턴스를 포함 할 적절한 보안 그룹을 작성하십시오. Chef 서버의 유일한 요구 사항은 두 백엔드 인스턴스간에 ICMP가 허용되어야한다는 것입니다. Keepalived는 커뮤니케이션과 하트 비트를 위해 필요합니다.</target>
        </trans-unit>
        <trans-unit id="c88a5d0a81e06436adb586d99e1e184ad410e424" translate="yes" xml:space="preserve">
          <source>Create directories in the release directory before symbolic links are created. This property runs after &lt;code&gt;purge_before_symlink&lt;/code&gt; and before &lt;code&gt;symlink&lt;/code&gt;.</source>
          <target state="translated">심볼릭 링크가 작성되기 전에 릴리스 디렉토리에 디렉토리를 작성하십시오. 이 특성은 &lt;code&gt;purge_before_symlink&lt;/code&gt; 이후 및 &lt;code&gt;symlink&lt;/code&gt; 이전에서 실행됩니다 .</target>
        </trans-unit>
        <trans-unit id="c3b32c951c7d2c6cc7cfc6a5a5014829956930bb" translate="yes" xml:space="preserve">
          <source>Create directories in the release directory before symbolic links are created. This property runs after &lt;code&gt;purge_before_symlink&lt;/code&gt; and before &lt;code&gt;symlink&lt;/code&gt;. Default value: &lt;code&gt;%w{tmp public config}&lt;/code&gt; (or the same as &lt;code&gt;[&quot;tmp&quot;, &quot;public&quot;, &quot;config&quot;]&lt;/code&gt;).</source>
          <target state="translated">심볼릭 링크가 작성되기 전에 릴리스 디렉토리에 디렉토리를 작성하십시오. 이 특성은 &lt;code&gt;purge_before_symlink&lt;/code&gt; 이후 및 &lt;code&gt;symlink&lt;/code&gt; 이전에서 실행됩니다 . 기본값 : &lt;code&gt;%w{tmp public config}&lt;/code&gt; (또는 &lt;code&gt;[&quot;tmp&quot;, &quot;public&quot;, &quot;config&quot;]&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="3c1100ceb82d80c1c297573f777663957e0b357b" translate="yes" xml:space="preserve">
          <source>Create lists using arrays:</source>
          <target state="translated">배열을 사용하여 목록을 만듭니다.</target>
        </trans-unit>
        <trans-unit id="85d97da6f1055feaf1cb504694d8499d1d2a4f99" translate="yes" xml:space="preserve">
          <source>Create or delete directories recursively. Default value: &lt;code&gt;true&lt;/code&gt;; the chef-client must be able to create the directory structure, including parent directories (if missing), as defined in &lt;code&gt;COOKBOOK_NAME/files/default/REMOTE_DIRECTORY&lt;/code&gt;.</source>
          <target state="translated">재귀 적으로 디렉토리를 작성하거나 삭제하십시오. 기본값 : &lt;code&gt;true&lt;/code&gt; ; 요리사 클라이언트는 &lt;code&gt;COOKBOOK_NAME/files/default/REMOTE_DIRECTORY&lt;/code&gt; 에 정의 된대로 상위 디렉토리를 포함하여 디렉토리 구조를 작성할 수 있어야합니다 (없는 경우) .</target>
        </trans-unit>
        <trans-unit id="2ce9bdf1c96011c9750d82aafff9b263d881ba5d" translate="yes" xml:space="preserve">
          <source>Create or delete parent directories recursively. For the &lt;code&gt;owner&lt;/code&gt;, &lt;code&gt;group&lt;/code&gt;, and &lt;code&gt;mode&lt;/code&gt; properties, the value of this attribute applies only to the leaf directory. Default value: &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">부모 디렉토리를 재귀 적으로 작성하거나 삭제하십시오. 의 경우 &lt;code&gt;owner&lt;/code&gt; , &lt;code&gt;group&lt;/code&gt; 및 &lt;code&gt;mode&lt;/code&gt; 속성이 속성의 값은 리프 디렉토리에 적용됩니다. 기본 값 : &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4676740dea6458bfe31246a6516babe6db257917" translate="yes" xml:space="preserve">
          <source>Create the .chef directory</source>
          <target state="translated">.chef 디렉토리를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="2c2f3f542a0d9a743abf295d534f1df1946f5293" translate="yes" xml:space="preserve">
          <source>Create the &lt;code&gt;/etc/opscode/&lt;/code&gt; directory, and then copy the contents of the entire &lt;code&gt;/etc/opscode&lt;/code&gt; directory from the primary server, including all certificates and the chef-server.rb.</source>
          <target state="translated">만들기 &lt;code&gt;/etc/opscode/&lt;/code&gt; 디렉토리를, 다음 전체의 내용을 복사 &lt;code&gt;/etc/opscode&lt;/code&gt; 모든 인증서와 요리사 server.rb]로 포함하여 주 서버에서 디렉토리.</target>
        </trans-unit>
        <trans-unit id="048f9c970abc325595c7622e370afad98ca2717a" translate="yes" xml:space="preserve">
          <source>Create the &lt;code&gt;/etc/opscode/&lt;/code&gt; directory, and then copy the entire contents of the &lt;code&gt;/etc/opscode&lt;/code&gt; directory from the primary backend server, including all certificates and the chef-server.rb file.</source>
          <target state="translated">만들기 &lt;code&gt;/etc/opscode/&lt;/code&gt; 디렉토리를 다음의 전체 내용을 복사 &lt;code&gt;/etc/opscode&lt;/code&gt; 모든 인증서와 요리사 server.rb]로 파일을 포함하여, 기본 백엔드 서버에서 디렉토리를.</target>
        </trans-unit>
        <trans-unit id="3a98851809c43f002d633a9891c9bd219ec35832" translate="yes" xml:space="preserve">
          <source>Create the chef-repo</source>
          <target state="translated">요리사 레포 만들기</target>
        </trans-unit>
        <trans-unit id="98bc54e18bffe2efb97e998ff635c2acee2c463a" translate="yes" xml:space="preserve">
          <source>Create the client as the chef-validator. Default value: &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">클라이언트를 요리사 유효성 검증기로 작성하십시오. 기본 값 : &lt;code&gt;true&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="28c31f2591babce01946e03a4aad366320a60efd" translate="yes" xml:space="preserve">
          <source>Create the file system. For example, an &lt;code&gt;ext4&lt;/code&gt; type named &lt;code&gt;tiered&lt;/code&gt;:</source>
          <target state="translated">파일 시스템을 작성하십시오. 예를 들어, &lt;code&gt;tiered&lt;/code&gt; 라는 &lt;code&gt;ext4&lt;/code&gt; 유형 :</target>
        </trans-unit>
        <trans-unit id="b456b9be8f8b0b236953df0edc38a3dbec58db33" translate="yes" xml:space="preserve">
          <source>Created automatically by knife whenever the &lt;code&gt;knife cookbook create&lt;/code&gt; subcommand is run</source>
          <target state="translated">&lt;code&gt;knife cookbook create&lt;/code&gt; 부속 명령이 실행될 때마다 knife에 의해 자동으로 작성됩니다.</target>
        </trans-unit>
        <trans-unit id="7a4aa487cb0ef5f2b8b3f66939c8777745700017" translate="yes" xml:space="preserve">
          <source>Created. The object was created.</source>
          <target state="translated">만들어진. 객체가 생성되었습니다.</target>
        </trans-unit>
        <trans-unit id="f3fc55cf7fc526346ef54a0f00d2a7867825c470" translate="yes" xml:space="preserve">
          <source>Created. The object was created. (This response code is only returned when the client is renamed.)</source>
          <target state="translated">만들어진. 객체가 생성되었습니다. (이 응답 코드는 클라이언트 이름이 바뀔 때만 반환됩니다.)</target>
        </trans-unit>
        <trans-unit id="123344f5beb7f1b3b1c0050667cd476a9d50c59c" translate="yes" xml:space="preserve">
          <source>Created. The object was created. (This response code is only returned when the user is renamed.)</source>
          <target state="translated">만들어진. 객체가 생성되었습니다. 이 응답 코드는 사용자 이름이 바뀔 때만 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="4dbbcd0b50e4caec428f956a208a87f759c2022d" translate="yes" xml:space="preserve">
          <source>Creates the virtual host for the website</source>
          <target state="translated">웹 사이트의 가상 호스트를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="4e3532cc25489d49233d8c2448919660ef3dea77" translate="yes" xml:space="preserve">
          <source>Creating two templates that support the custom resource</source>
          <target state="translated">사용자 정의 자원을 지원하는 두 개의 템플리트 작성</target>
        </trans-unit>
        <trans-unit id="02c7734d51f5945b8a2dd287727468112306b2af" translate="yes" xml:space="preserve">
          <source>Creating users</source>
          <target state="translated">사용자 만들기</target>
        </trans-unit>
        <trans-unit id="9594be001a640537557bd25239be81f7352fda03" translate="yes" xml:space="preserve">
          <source>Credential Rotation</source>
          <target state="translated">자격 증명 교체</target>
        </trans-unit>
        <trans-unit id="c628a92c742e3033d43e16fc033c49fc5d79d5fa" translate="yes" xml:space="preserve">
          <source>Credential rotation does not rotate the pivotal, user, or client keys, or remove any Chef server policy or cookbooks that have been uploaded.</source>
          <target state="translated">자격 증명 교체는 중추, 사용자 또는 클라이언트 키를 회전 시키거나 업로드 된 Chef 서버 정책 또는 요리 책을 제거하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="e38d9d4dd7b3a1255fbba2d3c5391ba87a041a9e" translate="yes" xml:space="preserve">
          <source>Cursor over the first two entries&amp;mdash;&lt;code&gt;CULTURAL convention to install&lt;/code&gt; and &lt;code&gt;LANGUAGE translation to install&lt;/code&gt;&amp;mdash;and use &lt;code&gt;F4&lt;/code&gt; to navigate through the list until &lt;code&gt;UTF-8 English (United States) [EN_US]&lt;/code&gt; is selected. (EN_US is in capital letters!)</source>
          <target state="translated">처음 두 entries- 이상 커서 &lt;code&gt;CULTURAL convention to install&lt;/code&gt; 및 &lt;code&gt;LANGUAGE translation to install&lt;/code&gt; - 그리고 사용 &lt;code&gt;F4&lt;/code&gt; 까지 목록을 탐색 할을 &lt;code&gt;UTF-8 English (United States) [EN_US]&lt;/code&gt; 이 선택됩니다. (EN_US는 대문자로되어 있습니다!)</target>
        </trans-unit>
        <trans-unit id="1a1421036881f2fc035078e283a0eed387a35e68" translate="yes" xml:space="preserve">
          <source>Custom Handlers</source>
          <target state="translated">커스텀 핸들러</target>
        </trans-unit>
        <trans-unit id="6b5e88db8494e3dae35242c7385c1f03461ca9c5" translate="yes" xml:space="preserve">
          <source>Custom Resource DSL</source>
          <target state="translated">커스텀 리소스 DSL</target>
        </trans-unit>
        <trans-unit id="1e67c14a8f251af3ab5543808c554be00cee2a65" translate="yes" xml:space="preserve">
          <source>Custom Resources</source>
          <target state="translated">커스텀 리소스</target>
        </trans-unit>
        <trans-unit id="d812fdf7b21a4abf65599510d843a3a23da17bbf" translate="yes" xml:space="preserve">
          <source>Custom Templates</source>
          <target state="translated">맞춤 템플릿</target>
        </trans-unit>
        <trans-unit id="27843be407b9bfd353499cc870a25461e27830f9" translate="yes" xml:space="preserve">
          <source>Custom plugins can be configured to use the same settings as the core knife subcommands</source>
          <target state="translated">코어 나이프 하위 명령과 동일한 설정을 사용하도록 사용자 정의 플러그인을 구성 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1f8816b52f55182b93bcedb64da5a0ebf7b14287" translate="yes" xml:space="preserve">
          <source>Custom properties are defined in the resource. This custom resource needs two:</source>
          <target state="translated">사용자 지정 속성은 리소스에 정의되어 있습니다. 이 사용자 지정 리소스는 다음 두 가지가 필요합니다.</target>
        </trans-unit>
        <trans-unit id="99b099ba2371a79da805d606fe765643a9e3d549" translate="yes" xml:space="preserve">
          <source>Custom resources are designed to use core resources that are built into Chef. In some cases, it may be necessary to specify a property in the custom resource that is the same as a property in a core resource, for the purpose of overriding that property when used with the custom resource. For example:</source>
          <target state="translated">사용자 지정 리소스는 Chef에 내장 된 핵심 리소스를 사용하도록 설계되었습니다. 경우에 따라 사용자 지정 리소스와 함께 사용할 때 해당 속성을 재정의하기 위해 사용자 지정 리소스에 코어 리소스의 속성과 동일한 속성을 지정해야 할 수도 있습니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="39d549b1013a3649f321515375d82e8b65cac40e" translate="yes" xml:space="preserve">
          <source>Customize the Config File</source>
          <target state="translated">구성 파일 사용자 정의</target>
        </trans-unit>
        <trans-unit id="d6f5636098cd458ce9d22939f8e3e8deab0e9bd0" translate="yes" xml:space="preserve">
          <source>DELETE</source>
          <target state="translated">DELETE</target>
        </trans-unit>
        <trans-unit id="41917cd18ce8791853b0c1dbbe1dedb85e290430" translate="yes" xml:space="preserve">
          <source>DRBD</source>
          <target state="translated">DRBD</target>
        </trans-unit>
        <trans-unit id="d16a3117cbc0fb4751da739176e146348b85a7ab" translate="yes" xml:space="preserve">
          <source>DRBD This port range must be open between all back end servers in a high availability configuration that uses DRBD.</source>
          <target state="translated">DRBD이 포트 범위는 DRBD를 사용하는 고 가용성 구성의 모든 백엔드 서버간에 열려 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="fa6c60c02618c2b10cfa7576ba3fdde68374c502" translate="yes" xml:space="preserve">
          <source>DRBD can be configured to utilize more bandwidth during the initial synchronization. For Red Hat and CentOS 6:</source>
          <target state="translated">DRBD는 초기 동기화 중에 더 많은 대역폭을 사용하도록 구성 할 수 있습니다. Red Hat 및 CentOS 6의 경우 :</target>
        </trans-unit>
        <trans-unit id="7898d0624cf2a9fe8d8736dafe2a6b5e3d40ffb4" translate="yes" xml:space="preserve">
          <source>DRBD configuration allows for custom handlers when a &lt;code&gt;split-brain&lt;/code&gt; event happens. The basic handler sends a notification email to a configurable email address so the issue can be investigated.</source>
          <target state="translated">DRBD 구성은 &lt;code&gt;split-brain&lt;/code&gt; 이벤트가 발생할 때 사용자 정의 핸들러를 허용 합니다. 기본 처리기는 구성 가능한 전자 메일 주소로 알림 전자 메일을 보내 문제를 조사 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7b35aa0961ca6d6cd032a018794b06ad4d9ea53e" translate="yes" xml:space="preserve">
          <source>DRBD is a shared-nothing system. Data is replicated between hosts over a dedicated network link rather than stored on a central network-attached storage (NAS) or storage attached network (SAN) to which all hosts are connected. The most critical issue for storage in a high availability topology is loss of or corruption of data. Maximizing the amount of data that can be passed over the wire while all systems are up and running correctly minimizes the chance that something will be lost or unrecoverable if a host goes down.</source>
          <target state="translated">DRBD는 공유 시스템입니다. 데이터는 모든 호스트가 연결된 중앙 NAS (Network-Attached Storage) 또는 SAN (Storage Attached Network)에 저장되지 않고 전용 네트워크 링크를 통해 호스트간에 복제됩니다. 고 가용성 토폴로지에서 스토리지의 가장 중요한 문제는 데이터 손실 또는 손상입니다. 모든 시스템이 올바르게 작동하고 실행되는 동안 유선으로 전달 될 수있는 데이터의 양을 최대화하면 호스트가 다운 될 때 무언가 손실되거나 복구 할 수없는 가능성이 최소화됩니다.</target>
        </trans-unit>
        <trans-unit id="839e67cec60c0ff97cdf9eba472099b30a8ec8e7" translate="yes" xml:space="preserve">
          <source>DRBD is a supported high availability configuration option for the Chef server.</source>
          <target state="translated">DRBD는 Chef 서버에 지원되는 고 가용성 구성 옵션입니다.</target>
        </trans-unit>
        <trans-unit id="59d149ecc4029ce4a9b8b274a25712cd43cda122" translate="yes" xml:space="preserve">
          <source>DRBD may be resized. First, make a backup of the Chef server data.</source>
          <target state="translated">DRBD의 크기를 조정할 수 있습니다. 먼저 Chef 서버 데이터를 백업하십시오.</target>
        </trans-unit>
        <trans-unit id="b19fb021cb24f3d320ebf213dc90096ca5d2d020" translate="yes" xml:space="preserve">
          <source>DRBD on the first back-end server will sync to the second back-end server and will become the clean secondary FQDN.</source>
          <target state="translated">첫 번째 백엔드 서버의 DRBD는 두 번째 백엔드 서버와 동기화되고 깨끗한 보조 FQDN이됩니다.</target>
        </trans-unit>
        <trans-unit id="82aeae9b5a553cf41f1382cd9efe3e290377a7e6" translate="yes" xml:space="preserve">
          <source>DSC data can be specified directly in a recipe:</source>
          <target state="translated">DSC 데이터는 레시피에서 직접 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="437a50fecd337f4568693e155281aa4f828dd98e" translate="yes" xml:space="preserve">
          <source>Data Bags</source>
          <target state="translated">데이터 백</target>
        </trans-unit>
        <trans-unit id="89fed8cd95d099c61b28386bb7e1487ecac192e9" translate="yes" xml:space="preserve">
          <source>Data about the node collected by Ohai</source>
          <target state="translated">Ohai가 수집 한 노드에 대한 데이터</target>
        </trans-unit>
        <trans-unit id="d0d77aa68c2a0748180a780fae1553a2bc8b4762" translate="yes" xml:space="preserve">
          <source>Data bag items that are returned by a search query can be used as if they were a hash. For example:</source>
          <target state="translated">검색 쿼리에서 반환 된 데이터 백 항목은 마치 해시 인 것처럼 사용할 수 있습니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="73144fa8055053dcb65ce23c98d7128748af40cd" translate="yes" xml:space="preserve">
          <source>Data bags</source>
          <target state="translated">데이터 백</target>
        </trans-unit>
        <trans-unit id="1d712291b7a7485fb2d3a6e8d1f4875dd156f1f7" translate="yes" xml:space="preserve">
          <source>Data bags can be managed from the Chef management console web user interface.</source>
          <target state="translated">데이터 백은 Chef 관리 콘솔 웹 사용자 인터페이스에서 관리 할 수 ​​있습니다.</target>
        </trans-unit>
        <trans-unit id="7f7b40f485472538676a7985854af8eb46627a83" translate="yes" xml:space="preserve">
          <source>Data can be passed to a definition from more than one recipe. Use a definition to create a compile-time macro that can be referenced by resources during the converge phase. For example, when both &lt;code&gt;/etc/aliases&lt;/code&gt; and &lt;code&gt;/etc/sudoers&lt;/code&gt; require updates from multiple recipes during a single chef-client run.</source>
          <target state="translated">하나 이상의 레시피에서 정의로 데이터를 전달할 수 있습니다. 정의를 사용하여 수렴 단계에서 리소스가 참조 할 수있는 컴파일 타임 매크로를 만듭니다. 예를 들어, 단일 요리사 클라이언트 실행 중에 &lt;code&gt;/etc/aliases&lt;/code&gt; 및 &lt;code&gt;/etc/sudoers&lt;/code&gt; 모두 여러 레시피의 업데이트가 필요한 경우.</target>
        </trans-unit>
        <trans-unit id="c6e2898fafb5e05036cc0259eb0880e9d79572cf" translate="yes" xml:space="preserve">
          <source>Data stored in the following directories should be backed up periodically:</source>
          <target state="translated">다음 디렉토리에 저장된 데이터는 주기적으로 백업해야합니다.</target>
        </trans-unit>
        <trans-unit id="bd7c7997c03f050abbce4899b359441c7d3e4366" translate="yes" xml:space="preserve">
          <source>Datadog</source>
          <target state="translated">Datadog</target>
        </trans-unit>
        <trans-unit id="f775329a5b94da0d8b124d7e0ac6a8c3f9336607" translate="yes" xml:space="preserve">
          <source>Debian</source>
          <target state="translated">Debian</target>
        </trans-unit>
        <trans-unit id="6ce5dc13e3046cd65ea29204a9883ddfa06b5f4c" translate="yes" xml:space="preserve">
          <source>Debian and Apt</source>
          <target state="translated">데비안과 아파트</target>
        </trans-unit>
        <trans-unit id="0b1ae4345753678dfc1ec0e0db577f631ef6d279" translate="yes" xml:space="preserve">
          <source>Debian platform only. The relative priority of the program for start and shutdown ordering. May be an integer or a Hash. An integer is used to define the start run levels; stop run levels are then 100-integer. A Hash is used to define values for specific run levels. For example, &lt;code&gt;{ 2 =&amp;gt; [:start, 20], 3 =&amp;gt; [:stop, 55] }&lt;/code&gt; will set a priority of twenty for run level two and a priority of fifty-five for run level three.</source>
          <target state="translated">데비안 플랫폼 만. 시작 및 종료 순서에 대한 프로그램의 상대적 우선 순위. 정수 또는 해시 일 수 있습니다. 시작 실행 레벨을 정의하는 데 정수가 사용됩니다. 정지 런 레벨은 100- 정수입니다. 해시는 특정 실행 수준에 대한 값을 정의하는 데 사용됩니다. 예를 들어, &lt;code&gt;{ 2 =&amp;gt; [:start, 20], 3 =&amp;gt; [:stop, 55] }&lt;/code&gt; 는 실행 레벨 2의 우선 순위를 20으로 설정하고 실행 레벨 3의 우선 순위를 55로 설정합니다.</target>
        </trans-unit>
        <trans-unit id="a642215aaea050e05887163485a77e2c753faf0e" translate="yes" xml:space="preserve">
          <source>Debian, Linux Mint, Ubuntu</source>
          <target state="translated">데비안, 리눅스 민트, 우분투</target>
        </trans-unit>
        <trans-unit id="bd604d99e75e45d38bc7ac8fc714cde0097d901f" translate="yes" xml:space="preserve">
          <source>Debug</source>
          <target state="translated">Debug</target>
        </trans-unit>
        <trans-unit id="becc86d84872d4cbce7473b944f502a665288c54" translate="yes" xml:space="preserve">
          <source>Debug Authentication Issues</source>
          <target state="translated">인증 문제 디버그</target>
        </trans-unit>
        <trans-unit id="14146501190e96f1688bd1093c114496222d6b57" translate="yes" xml:space="preserve">
          <source>Debug Existing Recipe</source>
          <target state="translated">기존 레시피 디버그</target>
        </trans-unit>
        <trans-unit id="73272a4031a88a2a3d327d336f06107f5da87de3" translate="yes" xml:space="preserve">
          <source>Debug Recipes, chef-client Runs</source>
          <target state="translated">디버그 레시피, 요리사 클라이언트 실행</target>
        </trans-unit>
        <trans-unit id="26f250c8bc41b98c4db2d6d43de536e3f3ac7c56" translate="yes" xml:space="preserve">
          <source>Declare two variables at the beginning of the recipe, one for the remote IP address and the other for the authorized IP address</source>
          <target state="translated">레시피 시작시 두 가지 변수를 선언하십시오. 하나는 원격 IP 주소 용이고 다른 하나는 인증 된 IP 주소 용입니다.</target>
        </trans-unit>
        <trans-unit id="c174318512b79cb983fe21532eb9d13b67a5bbe0" translate="yes" xml:space="preserve">
          <source>Declared as properties of the custom resource</source>
          <target state="translated">커스텀 리소스의 속성으로 선언</target>
        </trans-unit>
        <trans-unit id="37d64c2732f53ad2606fc3931e8db1321d46a216" translate="yes" xml:space="preserve">
          <source>Declares the properties of the custom resource</source>
          <target state="translated">사용자 정의 리소스의 속성을 선언합니다</target>
        </trans-unit>
        <trans-unit id="2288e8b830c8392d8b9cdaff053acbad8b0924e5" translate="yes" xml:space="preserve">
          <source>Declares the steps needed to bring that item to the desired state</source>
          <target state="translated">해당 항목을 원하는 상태로 만드는 데 필요한 단계를 선언합니다.</target>
        </trans-unit>
        <trans-unit id="f0a2da2278ab64950a1e19d55ec8c50efd4a6d71" translate="yes" xml:space="preserve">
          <source>Declares three variables</source>
          <target state="translated">세 가지 변수를 선언</target>
        </trans-unit>
        <trans-unit id="2444b1324be9ca55969ec193c2f034a0a7fd636d" translate="yes" xml:space="preserve">
          <source>Declaring cookbook dependencies is not required with chef-solo.</source>
          <target state="translated">chef-solo에서는 요리 책 종속성을 선언 할 필요가 없습니다.</target>
        </trans-unit>
        <trans-unit id="418dcda0ca70f34565d131769c4fde143c264cdd" translate="yes" xml:space="preserve">
          <source>Default Attributes</source>
          <target state="translated">기본 속성</target>
        </trans-unit>
        <trans-unit id="9a7b3ea06a291c79a2cfb5856be8606fd0413ed4" translate="yes" xml:space="preserve">
          <source>Default Groups</source>
          <target state="translated">기본 그룹</target>
        </trans-unit>
        <trans-unit id="7da05a830142a5114c533efad0bf42dcd73d84b0" translate="yes" xml:space="preserve">
          <source>Default Permissions</source>
          <target state="translated">기본 권한</target>
        </trans-unit>
        <trans-unit id="79771123eb3d8402c675c3e98d26f365e82cc691" translate="yes" xml:space="preserve">
          <source>Default on the AIX platform. The provider that is used to start, stop, and restart services with System Resource Controller (SRC).</source>
          <target state="translated">AIX 플랫폼에서 기본값입니다. SRC (System Resource Controller)를 사용하여 서비스를 시작, 중지 및 다시 시작하는 데 사용되는 제공자입니다.</target>
        </trans-unit>
        <trans-unit id="97f1f3f305d71285e9742ac7c7d2a73672d49c20" translate="yes" xml:space="preserve">
          <source>Default value:</source>
          <target state="translated">기본값:</target>
        </trans-unit>
        <trans-unit id="af12974dff93fcb1870fc4b4aba61eabb646462f" translate="yes" xml:space="preserve">
          <source>Default value: &lt;code&gt;'/chef'&lt;/code&gt;.</source>
          <target state="translated">기본 값 : &lt;code&gt;'/chef'&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="abdf72c24087f7facb3d182266df1359e3a00e3b" translate="yes" xml:space="preserve">
          <source>Default value: &lt;code&gt;'/jobs'&lt;/code&gt;.</source>
          <target state="translated">기본 값 : &lt;code&gt;'/jobs'&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9718d1aca5336b42f4f7f9dd9ee880eb79aa4bd2" translate="yes" xml:space="preserve">
          <source>Default value: &lt;code&gt;'/reindexer'&lt;/code&gt;.</source>
          <target state="translated">기본 값 : &lt;code&gt;'/reindexer'&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="279b13e84eff47a0b1e5798a6ea040852276b602" translate="yes" xml:space="preserve">
          <source>Default value: &lt;code&gt;'100'&lt;/code&gt;.</source>
          <target state="translated">기본 값 : &lt;code&gt;'100'&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="69b2e86e9eb891586023b5b116e8883824341a32" translate="yes" xml:space="preserve">
          <source>Default value: &lt;code&gt;'10000'&lt;/code&gt;.</source>
          <target state="translated">기본 값 : &lt;code&gt;'10000'&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3d5bd2c97b4b27d8e7cbbab7d4525f506bd663d7" translate="yes" xml:space="preserve">
          <source>Default value: &lt;code&gt;'3600'&lt;/code&gt;.</source>
          <target state="translated">기본값은 &lt;code&gt;'3600'&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="7b725f87d936534f0c86ec25e9feb29a99ed565d" translate="yes" xml:space="preserve">
          <source>Default value: &lt;code&gt;'5'&lt;/code&gt;.</source>
          <target state="translated">기본 값 : &lt;code&gt;'5'&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b0d2386bf901c418936554388746dce799a344c6" translate="yes" xml:space="preserve">
          <source>Default value: &lt;code&gt;'5ca1ab1ef005ba111abe11eddecafbad'&lt;/code&gt;.</source>
          <target state="translated">기본값 : &lt;code&gt;'5ca1ab1ef005ba111abe11eddecafbad'&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="113a5e6f19b4813af9a1171df128d94a3fc0eed5" translate="yes" xml:space="preserve">
          <source>Default value: &lt;code&gt;'[{connect_timeout, 10000}]'&lt;/code&gt;.</source>
          <target state="translated">기본값 : &lt;code&gt;'[{connect_timeout, 10000}]'&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="be9857217dc7092a1be5f93ed5df0122ba84b1ee" translate="yes" xml:space="preserve">
          <source>Default value: &lt;code&gt;'bifrost_ro'&lt;/code&gt;.</source>
          <target state="translated">기본값은 &lt;code&gt;'bifrost_ro'&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="f9724b7bf43a7c395ac109f8ef846fe4a3dc7017" translate="yes" xml:space="preserve">
          <source>Default value: &lt;code&gt;'chef'&lt;/code&gt;.</source>
          <target state="translated">기본 값 : &lt;code&gt;'chef'&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1f2d6643785945f5af784989435c0f6b26e9ace3" translate="yes" xml:space="preserve">
          <source>Default value: &lt;code&gt;'cs'&lt;/code&gt;.</source>
          <target state="translated">기본 값 : &lt;code&gt;'cs'&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="596455ff5a1f2d2215dc1ba099b0dda0da0d2029" translate="yes" xml:space="preserve">
          <source>Default value: &lt;code&gt;'http://localhost:8983/solr'&lt;/code&gt;.</source>
          <target state="translated">기본값은 &lt;code&gt;'http://localhost:8983/solr'&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="2a08f218d4d239c5bfb5f986d0b3e9edcddf9980" translate="yes" xml:space="preserve">
          <source>Default value: &lt;code&gt;'jobs'&lt;/code&gt;.</source>
          <target state="translated">기본 값 : &lt;code&gt;'jobs'&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ef8e7a624e60570a691179831471118978c6f984" translate="yes" xml:space="preserve">
          <source>Default value: &lt;code&gt;'workcomplete'&lt;/code&gt;.</source>
          <target state="translated">기본값 : &lt;code&gt;'workcomplete'&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="6ae23cb3cc4f69c71ba1f099706ae0a8ff907475" translate="yes" xml:space="preserve">
          <source>Default value: &lt;code&gt;'{1, min}'&lt;/code&gt;.</source>
          <target state="translated">기본 값 : &lt;code&gt;'{1, min}'&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3fff538899512bbf855cba72855e08c1bdbb6481" translate="yes" xml:space="preserve">
          <source>Default value: &lt;code&gt;'{70, sec}'&lt;/code&gt;.</source>
          <target state="translated">기본값 : &lt;code&gt;'{70, sec}'&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e8bda9836569a9485970040393bc220dd5f383e4" translate="yes" xml:space="preserve">
          <source>Default value: &lt;code&gt;/bin/sh&lt;/code&gt;.</source>
          <target state="translated">초기 값 : &lt;code&gt;/bin/sh&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="787b4e33ad23bd2f0fe1d44a57fcd6af13e1eb62" translate="yes" xml:space="preserve">
          <source>Default value: &lt;code&gt;0022&lt;/code&gt;.</source>
          <target state="translated">기본값은 &lt;code&gt;0022&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="8caf5f7fb1f8a4fdccdb6162d1289299bdf1de80" translate="yes" xml:space="preserve">
          <source>Default value: &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="translated">초기 값 : &lt;code&gt;0&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3fadf09b31a12a77380cd300835b0abf89ae25e2" translate="yes" xml:space="preserve">
          <source>Default value: &lt;code&gt;1000000&lt;/code&gt;.</source>
          <target state="translated">초기 값 : &lt;code&gt;1000000&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5cb97b270434d6e3b9c96f83121c1eefff8db8ef" translate="yes" xml:space="preserve">
          <source>Default value: &lt;code&gt;10000&lt;/code&gt;.</source>
          <target state="translated">기본 값 : &lt;code&gt;10000&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6748e04adf7b3a60dcc5d009e3082f2547da2413" translate="yes" xml:space="preserve">
          <source>Default value: &lt;code&gt;100&lt;/code&gt;.</source>
          <target state="translated">기본 값 : &lt;code&gt;100&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c97366595d1d0b058ce961ed786ff1df23793218" translate="yes" xml:space="preserve">
          <source>Default value: &lt;code&gt;127.0.0.1&lt;/code&gt;.</source>
          <target state="translated">기본 값 : &lt;code&gt;127.0.0.1&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="efb703909cd4438c5aca67320e99fefd303b4bf9" translate="yes" xml:space="preserve">
          <source>Default value: &lt;code&gt;1&lt;/code&gt;.</source>
          <target state="translated">초기 값 : &lt;code&gt;1&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="929a430dd386fdedb444b0ed516f438bb51071ba" translate="yes" xml:space="preserve">
          <source>Default value: &lt;code&gt;20&lt;/code&gt;.</source>
          <target state="translated">기본 값 : &lt;code&gt;20&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="829343fa9160d792cdbb9df80cd6afc3a5bca119" translate="yes" xml:space="preserve">
          <source>Default value: &lt;code&gt;250&lt;/code&gt;.</source>
          <target state="translated">기본 값 : &lt;code&gt;250&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f221b9dc91de6275755d50ac24af07ad7659315b" translate="yes" xml:space="preserve">
          <source>Default value: &lt;code&gt;256&lt;/code&gt;.</source>
          <target state="translated">기본 값 : &lt;code&gt;256&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f987b3d3db2e04d385a8a1d2e30829fad37cc7a6" translate="yes" xml:space="preserve">
          <source>Default value: &lt;code&gt;25&lt;/code&gt;.</source>
          <target state="translated">기본 값 : &lt;code&gt;25&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="46bb4bc12cf5db911f7c2096fef16aa7cb05181e" translate="yes" xml:space="preserve">
          <source>Default value: &lt;code&gt;30000&lt;/code&gt;.</source>
          <target state="translated">기본 값 : &lt;code&gt;30000&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="05555c65a7f1a67c0ce250c4d67963764890908d" translate="yes" xml:space="preserve">
          <source>Default value: &lt;code&gt;3600&lt;/code&gt;.</source>
          <target state="translated">기본 값 : &lt;code&gt;3600&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3700f1ed15b9a3b97f62d7f182b3dd19e76d1c76" translate="yes" xml:space="preserve">
          <source>Default value: &lt;code&gt;443&lt;/code&gt;.</source>
          <target state="translated">기본 값 : &lt;code&gt;443&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="486fa334f08a5ec6aecfd3bd2d88687dbd539db9" translate="yes" xml:space="preserve">
          <source>Default value: &lt;code&gt;5000&lt;/code&gt;.</source>
          <target state="translated">기본 값 : &lt;code&gt;5000&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="15ba95e76898073f97c791d602477a11526f6fff" translate="yes" xml:space="preserve">
          <source>Default value: &lt;code&gt;600&lt;/code&gt;.</source>
          <target state="translated">기본 값 : &lt;code&gt;600&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bee49547d34386a51b2266cbf1bc5ef8306d9e44" translate="yes" xml:space="preserve">
          <source>Default value: &lt;code&gt;900&lt;/code&gt;.</source>
          <target state="translated">기본 값 : &lt;code&gt;900&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ba1f4c99cbbc4a06b3e0d8729b471320b3103d2c" translate="yes" xml:space="preserve">
          <source>Default value: &lt;code&gt;9680&lt;/code&gt;.</source>
          <target state="translated">기본 값 : &lt;code&gt;9680&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1e14a4df445f452b15e5e83fb3aa96a0f760a1f3" translate="yes" xml:space="preserve">
          <source>Default value: &lt;code&gt;9683&lt;/code&gt;.</source>
          <target state="translated">기본 값 : &lt;code&gt;9683&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="12a68079953817dddbbd778c948a207c5a6677cf" translate="yes" xml:space="preserve">
          <source>Default value: &lt;code&gt;9685&lt;/code&gt;.</source>
          <target state="translated">기본 값 : &lt;code&gt;9685&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="49934e76e52c5315ca2e03c28812b8c56a3d0adc" translate="yes" xml:space="preserve">
          <source>Default value: &lt;code&gt;:batch&lt;/code&gt;. When this property is set to &lt;code&gt;:batch&lt;/code&gt;, the 64-bit version of the cmd.exe shell will be used to evaluate strings values for the &lt;code&gt;not_if&lt;/code&gt; and &lt;code&gt;only_if&lt;/code&gt; properties. Set this value to &lt;code&gt;:default&lt;/code&gt; to use the 32-bit version of the cmd.exe shell.</source>
          <target state="translated">기본 값 : &lt;code&gt;:batch&lt;/code&gt; . 이 특성이 &lt;code&gt;:batch&lt;/code&gt; 로 설정 되면 64 비트 버전의 cmd.exe 쉘이 &lt;code&gt;not_if&lt;/code&gt; 및 &lt;code&gt;only_if&lt;/code&gt; 특성 의 문자열 값을 평가하는 데 사용됩니다 . cmd.exe 셸의 32 비트 버전을 사용하려면 이 값을 &lt;code&gt;:default&lt;/code&gt; 로 설정하십시오 .</target>
        </trans-unit>
        <trans-unit id="94ef0cdfa0e4e93d8f244238b809b6143dfd46b1" translate="yes" xml:space="preserve">
          <source>Default value: &lt;code&gt;:powershell_script&lt;/code&gt;. When this property is set to &lt;code&gt;:powershell_script&lt;/code&gt;, the 64-bit version of the Windows PowerShell shell will be used to evaluate strings values for the &lt;code&gt;not_if&lt;/code&gt; and &lt;code&gt;only_if&lt;/code&gt; properties. Set this value to &lt;code&gt;:default&lt;/code&gt; to use the 32-bit version of the cmd.exe shell.</source>
          <target state="translated">기본 값 : &lt;code&gt;:powershell_script&lt;/code&gt; . 이 속성을 &lt;code&gt;:powershell_script&lt;/code&gt; 로 설정 하면 64 비트 버전의 Windows PowerShell 셸이 &lt;code&gt;not_if&lt;/code&gt; 및 &lt;code&gt;only_if&lt;/code&gt; 속성 의 문자열 값을 평가하는 데 사용됩니다 . cmd.exe 셸의 32 비트 버전을 사용하려면 이 값을 &lt;code&gt;:default&lt;/code&gt; 로 설정하십시오 .</target>
        </trans-unit>
        <trans-unit id="a980f12bd785f5330707d1fc6097f86b88831ccc" translate="yes" xml:space="preserve">
          <source>Default value: &lt;code&gt;TLSv1 TLSv1.1 TLSv1.2&lt;/code&gt;.</source>
          <target state="translated">기본값 : &lt;code&gt;TLSv1 TLSv1.1 TLSv1.2&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="24888fc79ddde618a01118511a7f2c9202764b9f" translate="yes" xml:space="preserve">
          <source>Default value: &lt;code&gt;chef-validator&lt;/code&gt;.</source>
          <target state="translated">기본 값 : &lt;code&gt;chef-validator&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2990a868845dbf38ef756d96ae1e3df77998278b" translate="yes" xml:space="preserve">
          <source>Default value: &lt;code&gt;chefAPI&lt;/code&gt;.</source>
          <target state="translated">기본 값 : &lt;code&gt;chefAPI&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6ea3d99dfdab9d718df3bdb4e56bd9c6e35e3b68" translate="yes" xml:space="preserve">
          <source>Default value: &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">기본 값 : &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="066f938edd7ad34e8b941204c34e3317c2eb4302" translate="yes" xml:space="preserve">
          <source>Default value: &lt;code&gt;https://#{node['fqdn']}&lt;/code&gt;.</source>
          <target state="translated">기본값은 &lt;code&gt;https://#{node['fqdn']}&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="40e4f0ad2807b7e05408b581ad5bb358af11b978" translate="yes" xml:space="preserve">
          <source>Default value: &lt;code&gt;info@example.com&lt;/code&gt;.</source>
          <target state="translated">기본 값 : &lt;code&gt;info@example.com&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a383650f99ce5bb0846802d66067068fdcb8e40a" translate="yes" xml:space="preserve">
          <source>Default value: &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">기본 값 : &lt;code&gt;nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4e790ee32c2f63fcad30759d9232dcb6039df716" translate="yes" xml:space="preserve">
          <source>Default value: &lt;code&gt;node['fqdn']&lt;/code&gt;.</source>
          <target state="translated">디폴트 값 : &lt;code&gt;node['fqdn']&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="698cab8d30db733c25a952673dc49f8361635944" translate="yes" xml:space="preserve">
          <source>Default value: &lt;code&gt;opscode_chef&lt;/code&gt;.</source>
          <target state="translated">기본 값 : &lt;code&gt;opscode_chef&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="979aa650b9db9132b339420a3d7a2f4f2f7ff81f" translate="yes" xml:space="preserve">
          <source>Default value: &lt;code&gt;opscode_chef_ro&lt;/code&gt;.</source>
          <target state="translated">기본 값 : &lt;code&gt;opscode_chef_ro&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7276f2d98990440abf46eaac101973afde0be652" translate="yes" xml:space="preserve">
          <source>Default value: &lt;code&gt;shmunzeltazzen&lt;/code&gt;.</source>
          <target state="translated">기본값 : &lt;code&gt;shmunzeltazzen&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c99a29085b1ee7856ddc027d80e23a4647fee8fc" translate="yes" xml:space="preserve">
          <source>Default value: &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">기본 값 : &lt;code&gt;true&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="52a1abf51f79f5bcb060a39fb6ad5f7c5233e21a" translate="yes" xml:space="preserve">
          <source>Default.</source>
          <target state="translated">Default.</target>
        </trans-unit>
        <trans-unit id="f7708d7d9ab097ef9deb9d2a6a7d44944604bb40" translate="yes" xml:space="preserve">
          <source>Default. .. tag resources_common_actions_nothing</source>
          <target state="translated">기본. .. 태그 resources_common_actions_nothing</target>
        </trans-unit>
        <trans-unit id="737b551365fdfadbb769763d2c1accc28495f7b7" translate="yes" xml:space="preserve">
          <source>Default. Add a route.</source>
          <target state="translated">기본. 경로를 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="7a80f4e09313b1dc6b77049b8c188857f532b41c" translate="yes" xml:space="preserve">
          <source>Default. Create a directory and/or the contents of that directory. If a directory or its contents already exist (but does not match), update that directory or its contents to match.</source>
          <target state="translated">기본. 디렉토리 및 / 또는 해당 디렉토리의 내용을 작성하십시오. 디렉토리 나 그 내용이 이미 존재하지만 일치하지 않는 경우 해당 디렉토리 나 그 내용을 일치하도록 업데이트하십시오.</target>
        </trans-unit>
        <trans-unit id="2a3f2bc434a5ce29f1bd88b86a62b4c540aae52a" translate="yes" xml:space="preserve">
          <source>Default. Create a directory. If a directory already exists (but does not match), update that directory to match.</source>
          <target state="translated">기본. 디렉토리를 작성하십시오. 디렉토리가 이미 존재하지만 일치하지 않는 경우 해당 디렉토리를 일치하도록 업데이트하십시오.</target>
        </trans-unit>
        <trans-unit id="f223722e44fa21029e29f23118ab2377690c58b8" translate="yes" xml:space="preserve">
          <source>Default. Create a file. If a file already exists (but does not match), update that file to match.</source>
          <target state="translated">기본. 파일을 작성하십시오. 파일이 이미 존재하지만 일치하지 않는 경우 해당 파일을 일치하도록 업데이트하십시오.</target>
        </trans-unit>
        <trans-unit id="c5632cfcebb3c21f437821f7ef837a36fc6b55e4" translate="yes" xml:space="preserve">
          <source>Default. Create a group. If a group already exists (but does not match), update that group to match.</source>
          <target state="translated">기본. 그룹을 만듭니다. 그룹이 이미 존재하지만 일치하지 않는 경우 해당 그룹을 일치하도록 업데이트하십시오.</target>
        </trans-unit>
        <trans-unit id="944f5404428b330ca2669628a3bcc5a386276377" translate="yes" xml:space="preserve">
          <source>Default. Create a launchd property list.</source>
          <target state="translated">기본. 시작된 속성 목록을 만듭니다.</target>
        </trans-unit>
        <trans-unit id="de082160f1e962a8def3ad34cb26da21d2ea4fbd" translate="yes" xml:space="preserve">
          <source>Default. Create a link. If a link already exists (but does not match), update that link to match.</source>
          <target state="translated">기본. 링크를 만듭니다. 링크가 이미 존재하지만 일치하지 않는 경우 해당 링크를 업데이트하여 일치 시키십시오.</target>
        </trans-unit>
        <trans-unit id="cb9a7ff73160848e843f243eff58de4a7edb855b" translate="yes" xml:space="preserve">
          <source>Default. Create a registry key. If a registry key already exists (but does not match), update that registry key to match.</source>
          <target state="translated">기본. 레지스트리 키를 작성하십시오. 레지스트리 키가 이미 존재하지만 일치하지 않는 경우 해당 레지스트리 키를 일치하도록 업데이트하십시오.</target>
        </trans-unit>
        <trans-unit id="4b925c62c44b2c6a40a34f87027a52e7429b2c5e" translate="yes" xml:space="preserve">
          <source>Default. Create a user with given properties. If a user already exists (but does not match), update that user to match.</source>
          <target state="translated">기본. 주어진 속성을 가진 사용자를 만듭니다. 사용자가 이미 존재하지만 일치하지 않는 경우 해당 사용자를 일치하도록 업데이트하십시오.</target>
        </trans-unit>
        <trans-unit id="2b32f54832be32f89615e9bee190d43fa5dc1eb0" translate="yes" xml:space="preserve">
          <source>Default. Create an array with per-device superblocks. If an array already exists (but does not match), update that array to match.</source>
          <target state="translated">기본. 장치 별 수퍼 블록을 사용하여 배열을 만듭니다. 배열이 이미 존재하지만 일치하지 않는 경우 해당 배열을 일치하도록 업데이트하십시오.</target>
        </trans-unit>
        <trans-unit id="10a347bf933324cc8f311e88b89ae65d5cfb3da8" translate="yes" xml:space="preserve">
          <source>Default. Create an entry in a cron table file (crontab). If an entry already exists (but does not match), update that entry to match.</source>
          <target state="translated">기본. 크론 테이블 파일 (crontab)에 항목을 작성하십시오. 항목이 이미 존재하지만 일치하지 않는 경우 해당 항목을 업데이트하여 일치시킵니다.</target>
        </trans-unit>
        <trans-unit id="6561f4e8d7454dd947d10a1eb6a00027137993b9" translate="yes" xml:space="preserve">
          <source>Default. Create an environment variable. If an environment variable already exists (but does not match), update that environment variable to match.</source>
          <target state="translated">기본. 환경 변수를 작성하십시오. 환경 변수가 이미 존재하지만 일치하지 않는 경우 해당 환경 변수를 일치하도록 업데이트하십시오.</target>
        </trans-unit>
        <trans-unit id="9bceb336dc5d6f5e69090011d5a7ddef1558ad39" translate="yes" xml:space="preserve">
          <source>Default. Deploy an application.</source>
          <target state="translated">기본. 응용 프로그램을 배포하십시오.</target>
        </trans-unit>
        <trans-unit id="1235b990bd6ceab62b6f06801c3729e8a73981f1" translate="yes" xml:space="preserve">
          <source>Default. Do nothing with a service.</source>
          <target state="translated">기본. 서비스로 아무것도하지 마십시오.</target>
        </trans-unit>
        <trans-unit id="3a99ca5aeccd59222eeca87b0faf0b8f446d8e08" translate="yes" xml:space="preserve">
          <source>Default. Executes the default interpreter as identified by the chef-client.</source>
          <target state="translated">기본. chef-client가 식별 한 기본 인터프리터를 실행합니다.</target>
        </trans-unit>
        <trans-unit id="401b0ac69b4fa648231941387f541bb61d99fc1a" translate="yes" xml:space="preserve">
          <source>Default. Install a package. If a version is specified, install the specified version of the package.</source>
          <target state="translated">기본. 패키지를 설치하십시오. 버전이 지정된 경우 지정된 버전의 패키지를 설치하십시오.</target>
        </trans-unit>
        <trans-unit id="bd339fc5b87277852a923a73e6567ac219c33da0" translate="yes" xml:space="preserve">
          <source>Default. Install the specified configuration profile.</source>
          <target state="translated">기본. 지정된 구성 프로파일을 설치하십시오.</target>
        </trans-unit>
        <trans-unit id="afd2af2f49e7dc4d2d82f1e1d29357fe2017497e" translate="yes" xml:space="preserve">
          <source>Default. Mount a device.</source>
          <target state="translated">기본. 장치를 장착하십시오.</target>
        </trans-unit>
        <trans-unit id="4d44b14db86fb25dc6f532196b97debd22ade50e" translate="yes" xml:space="preserve">
          <source>Default. No cookbooks are loaded, and the run-list is empty.</source>
          <target state="translated">기본. 요리 책이로드되지 않았으며 실행 목록이 비어 있습니다.</target>
        </trans-unit>
        <trans-unit id="1269515486115402d1944bdcad0b67e540496e06" translate="yes" xml:space="preserve">
          <source>Default. Reload the Ohai configuration on a node.</source>
          <target state="translated">기본. 노드에서 Ohai 구성을 다시로드하십시오.</target>
        </trans-unit>
        <trans-unit id="295dc9fd6c6b2d44165b9eef22158acc94ef24a3" translate="yes" xml:space="preserve">
          <source>Default. Run a Ruby block.</source>
          <target state="translated">기본. 루비 블록을 실행하십시오.</target>
        </trans-unit>
        <trans-unit id="ec9867fbbdf14b12cb05f72a4ceb8b0c67a467a7" translate="yes" xml:space="preserve">
          <source>Default. Run a command.</source>
          <target state="translated">기본. 명령을 실행하십시오.</target>
        </trans-unit>
        <trans-unit id="9a0f8b6661a90a1867d97704355b752cf70c4fa4" translate="yes" xml:space="preserve">
          <source>Default. Run a script.</source>
          <target state="translated">기본. 스크립트를 실행하십시오.</target>
        </trans-unit>
        <trans-unit id="2e9e8e96e0a7a34de413bdf1bddcc4c3b0299f38" translate="yes" xml:space="preserve">
          <source>Default. Run ifconfig to configure a network interface and (on some platforms) write a configuration file for that network interface.</source>
          <target state="translated">기본. ifconfig를 실행하여 네트워크 인터페이스를 구성하고 (일부 플랫폼에서) 해당 네트워크 인터페이스에 대한 구성 파일을 작성하십시오.</target>
        </trans-unit>
        <trans-unit id="03815f542a90ad4737726a0ed13892f2f30becb7" translate="yes" xml:space="preserve">
          <source>Default. Run the Erlang call.</source>
          <target state="translated">기본. Erlang 통화를 실행하십시오.</target>
        </trans-unit>
        <trans-unit id="77d1bafe1eef03c7e5e69ab08ab79d427e57e4fa" translate="yes" xml:space="preserve">
          <source>Default. Run the script.</source>
          <target state="translated">기본. 스크립트를 실행하십시오.</target>
        </trans-unit>
        <trans-unit id="91b1ec76280ba89f4a2a6ad1cc73982e3baa1226" translate="yes" xml:space="preserve">
          <source>Default. Send a &lt;code&gt;GET&lt;/code&gt; request.</source>
          <target state="translated">기본. &lt;code&gt;GET&lt;/code&gt; 요청을 보내십시오 .</target>
        </trans-unit>
        <trans-unit id="f0aeef16cb032c3dfbfceb5e0777416cb8dcbe04" translate="yes" xml:space="preserve">
          <source>Default. Specifies that a notification should be queued up, and then executed at the very end of the chef-client run.</source>
          <target state="translated">기본. 알림을 큐에 넣은 다음 chef-client 실행이 끝날 때 실행되도록 지정합니다.</target>
        </trans-unit>
        <trans-unit id="591beece784e6288941d965d097ae04a8c7e8a18" translate="yes" xml:space="preserve">
          <source>Default. Update the source to the specified version, or get a new clone or checkout. This action causes a hard reset of the index and working tree, discarding any uncommitted changes.</source>
          <target state="translated">기본. 소스를 지정된 버전으로 업데이트하거나 새로운 클론 또는 체크 아웃을 받으십시오. 이 조치는 색인 및 작업 트리를 강제 재설정하여 커미트되지 않은 변경 사항을 버립니다.</target>
        </trans-unit>
        <trans-unit id="eae4fda840cb91ff9c41cbe9bacb385035cd23b5" translate="yes" xml:space="preserve">
          <source>Default. Use to run the DSC configuration defined as defined in this resource.</source>
          <target state="translated">기본. 이 자원에 정의 된대로 정의 된 DSC 구성을 실행하는 데 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="008d54ff9af81cd5a4ccba62560b44d57ec84f5c" translate="yes" xml:space="preserve">
          <source>Default. Write to log.</source>
          <target state="translated">기본. 로그에 기록하십시오.</target>
        </trans-unit>
        <trans-unit id="63f8f411b477f0522431a3ee2313e525100cef08" translate="yes" xml:space="preserve">
          <source>Defaults to &lt;code&gt;SAMAccountName&lt;/code&gt;</source>
          <target state="translated">기본적으로 &lt;code&gt;SAMAccountName&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="87038113832b2cb9c68a337af1d75dda595db1b0" translate="yes" xml:space="preserve">
          <source>Define Actions</source>
          <target state="translated">동작 정의</target>
        </trans-unit>
        <trans-unit id="d7178f42a2f708746ff9247b3e32f72b7549a6b0" translate="yes" xml:space="preserve">
          <source>Define How Email is Sent</source>
          <target state="translated">이메일을 보내는 방법 정의</target>
        </trans-unit>
        <trans-unit id="6f4bbeaa023db7b319633a6e7679765972f1c4b1" translate="yes" xml:space="preserve">
          <source>Define Properties</source>
          <target state="translated">속성 정의</target>
        </trans-unit>
        <trans-unit id="56b506871aca4bb1a0babff1c2dcf6cc78172468" translate="yes" xml:space="preserve">
          <source>Define Resource</source>
          <target state="translated">자원 정의</target>
        </trans-unit>
        <trans-unit id="c0a5b7546bacd5971f1efdeb60cce607e583ffb5" translate="yes" xml:space="preserve">
          <source>Define a Method</source>
          <target state="translated">방법 정의</target>
        </trans-unit>
        <trans-unit id="2092d04895ebb259120f7739274282b6ab1c8b9a" translate="yes" xml:space="preserve">
          <source>Define a custom resource</source>
          <target state="translated">맞춤 리소스 정의</target>
        </trans-unit>
        <trans-unit id="4380a40daf7c39310e8d5cd631672ad89a34b032" translate="yes" xml:space="preserve">
          <source>Define a custom resource!</source>
          <target state="translated">커스텀 리소스를 정의하십시오!</target>
        </trans-unit>
        <trans-unit id="ea6bf924ff62e7a701176831845bd4c1addd4fb1" translate="yes" xml:space="preserve">
          <source>Define a helper method inline. For example: &lt;code&gt;helper(:hello_world) { &quot;hello world&quot; }&lt;/code&gt; or &lt;code&gt;helper(:app) { node[&quot;app&quot;] }&lt;/code&gt; or &lt;code&gt;helper(:app_conf) { |setting| node[&quot;app&quot;][setting] }&lt;/code&gt;. Default value: &lt;code&gt;{}&lt;/code&gt;.</source>
          <target state="translated">헬퍼 메소드를 인라인으로 정의하십시오. 예를 들면 다음과 같습니다. &lt;code&gt;helper(:hello_world) { &quot;hello world&quot; }&lt;/code&gt; 또는 &lt;code&gt;helper(:app) { node[&quot;app&quot;] }&lt;/code&gt; 또는 &lt;code&gt;helper(:app_conf) { |setting| node[&quot;app&quot;][setting] }&lt;/code&gt; 입니다. 기본 값 : &lt;code&gt;{}&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f34980487c6a757b3c09df3e8f81a3af7cb1fae3" translate="yes" xml:space="preserve">
          <source>Define a helper module inline or in a library. For example, an inline module: &lt;code&gt;helpers do&lt;/code&gt;, which is then followed by a block of Ruby code. And for a library module: &lt;code&gt;helpers(MyHelperModule)&lt;/code&gt;. Default value: &lt;code&gt;[]&lt;/code&gt;.</source>
          <target state="translated">도우미 모듈을 인라인 또는 라이브러리로 정의하십시오. 예를 들어, 인라인 모듈 : &lt;code&gt;helpers do&lt;/code&gt; 다음에 Ruby 코드 블록이옵니다. 라이브러리 모듈의 경우 &lt;code&gt;helpers(MyHelperModule)&lt;/code&gt; . 기본값 : &lt;code&gt;[]&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f9e3bf804c72202cdc8b1a88749e718eb2469d48" translate="yes" xml:space="preserve">
          <source>Define a method (or a function, if you like):</source>
          <target state="translated">메소드 (또는 원하는 경우 함수)를 정의하십시오.</target>
        </trans-unit>
        <trans-unit id="a5aba037c0afb90699cf770f0a5cb011544f00c4" translate="yes" xml:space="preserve">
          <source>Define a resource block. If a resource block with the same name exists in the resource collection, it will be returned. If a resource block does not exist in the resource collection, it will be created.</source>
          <target state="translated">자원 블록을 정의하십시오. 동일한 이름의 자원 블록이 자원 콜렉션에 존재하면 리턴됩니다. 자원 콜렉션에 자원 블록이 없으면 작성됩니다.</target>
        </trans-unit>
        <trans-unit id="01fe1785e7c795d2916780a413d76bc3722ded06" translate="yes" xml:space="preserve">
          <source>Define a resource block. If a resource block with the same name exists in the resource collection, it will be updated with the contents of the resource block defined by the &lt;code&gt;edit_resource&lt;/code&gt; method. If a resource block does not exist in the resource collection, it will be created.</source>
          <target state="translated">자원 블록을 정의하십시오. 동일한 이름의 자원 블록이 자원 콜렉션에 존재하면, &lt;code&gt;edit_resource&lt;/code&gt; 메소드에 의해 정의 된 자원 블록의 내용으로 갱신됩니다 . 자원 콜렉션에 자원 블록이 없으면 작성됩니다.</target>
        </trans-unit>
        <trans-unit id="f4c6a8dff6f2b0bfeb593467affd551eab0fbcb4" translate="yes" xml:space="preserve">
          <source>Define a resource block. If a resource with the same name exists in the resource collection, its properties will be updated with the contents of the resource block defined by the &lt;code&gt;edit_resource&lt;/code&gt; method.</source>
          <target state="translated">자원 블록을 정의하십시오. 동일한 이름의 자원이 자원 콜렉션에 존재하면 해당 자원의 속성은 &lt;code&gt;edit_resource&lt;/code&gt; 메소드로 정의 된 자원 블록의 내용으로 업데이트됩니다 .</target>
        </trans-unit>
        <trans-unit id="8811e7f43c24713240ea5fb066b8ef558d1ab1a7" translate="yes" xml:space="preserve">
          <source>Define a search query as a space-separated list of servers.</source>
          <target state="translated">공백으로 구분 된 서버 목록으로 검색 쿼리를 정의하십시오.</target>
        </trans-unit>
        <trans-unit id="d1b7254ef434be731dd5cbb430f915a8ad8e0de2" translate="yes" xml:space="preserve">
          <source>Define a search query as a space-separated list of servers. If there is more than one item in the list, put quotes around the entire list. For example: &lt;code&gt;--manual-list &quot;server01 server 02 server 03&quot;&lt;/code&gt;</source>
          <target state="translated">공백으로 구분 된 서버 목록으로 검색 쿼리를 정의하십시오. 목록에 둘 이상의 항목이 있으면 전체 목록을 따옴표로 묶으십시오. 예를 들면 다음과 같습니다. &lt;code&gt;--manual-list &quot;server01 server 02 server 03&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8ba855b7eb8218aa4086655df8328c77b6ff0106" translate="yes" xml:space="preserve">
          <source>Define a string that is to be used to replace all occurrences of a file name. Default: &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">발생하는 모든 파일 이름을 바꾸는 데 사용할 문자열을 정의하십시오. 기본값은 &lt;code&gt;nil&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="3f3995495a026e2959048e7a3eed0022f85caf3e" translate="yes" xml:space="preserve">
          <source>Define a string that is to be used to replace the first occurrence of a file name. Default: &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">처음 나타나는 파일 이름을 바꾸는 데 사용할 문자열을 정의하십시오. 기본값은 &lt;code&gt;nil&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="f90cf8a8a74d092c1764c176c0d636a5872ce083" translate="yes" xml:space="preserve">
          <source>Define each frontend server:</source>
          <target state="translated">각 프론트 엔드 서버를 정의하십시오.</target>
        </trans-unit>
        <trans-unit id="5b191ae1ae69bdea2e5e814079a8059b4798fe1c" translate="yes" xml:space="preserve">
          <source>Define the API FQDN:</source>
          <target state="translated">API FQDN을 정의하십시오.</target>
        </trans-unit>
        <trans-unit id="c2b812741ce141cb7c444b93730fd1f1542f4aa8" translate="yes" xml:space="preserve">
          <source>Define the backend server:</source>
          <target state="translated">백엔드 서버를 정의하십시오.</target>
        </trans-unit>
        <trans-unit id="712b99f7b65624b02c1252ff64d075879a5f3604" translate="yes" xml:space="preserve">
          <source>Define the backend virtual IP address:</source>
          <target state="translated">백엔드 가상 IP 주소를 정의하십시오.</target>
        </trans-unit>
        <trans-unit id="99eb3b8062373ef3e1612e5c324cb267d189c6fb" translate="yes" xml:space="preserve">
          <source>Define the primary backend server:</source>
          <target state="translated">기본 백엔드 서버를 정의하십시오.</target>
        </trans-unit>
        <trans-unit id="10c3c58be8ec07c81e300d2b08ee6b5809934e9d" translate="yes" xml:space="preserve">
          <source>Define the secondary backend server:</source>
          <target state="translated">보조 백엔드 서버를 정의하십시오.</target>
        </trans-unit>
        <trans-unit id="775b65698234699eafbfe8342a4d0a9b0f46cd78" translate="yes" xml:space="preserve">
          <source>Define the topology type:</source>
          <target state="translated">토폴로지 유형을 정의하십시오.</target>
        </trans-unit>
        <trans-unit id="3f93760d363cc200dd9d7e6215bd45d4aafa401e" translate="yes" xml:space="preserve">
          <source>Define this resource block to do nothing until notified by another resource to take action. When this resource is notified, this resource block is either run immediately or it is queued up to be run at the end of the chef-client run.</source>
          <target state="translated">다른 자원이 조치를 취하도록 통지 할 때까지 아무것도하지 않도록이 자원 블록을 정의하십시오. 이 자원이 통지되면이 자원 블록이 즉시 실행되거나 chef-client 실행이 끝날 때까지 큐에 대기됩니다.</target>
        </trans-unit>
        <trans-unit id="2bccf97eac5836d9074969929dceebd76fb915dc" translate="yes" xml:space="preserve">
          <source>Define variables for the package &lt;code&gt;version&lt;/code&gt; and the &lt;code&gt;install_path&lt;/code&gt;</source>
          <target state="translated">패키지 &lt;code&gt;version&lt;/code&gt; 및 &lt;code&gt;install_path&lt;/code&gt; 에 대한 변수를 정의 하십시오.</target>
        </trans-unit>
        <trans-unit id="77cb93117b1ec159722bc3e6593901fe118df366" translate="yes" xml:space="preserve">
          <source>Defined as variables in a &lt;strong&gt;template&lt;/strong&gt; resource block within the custom resource</source>
          <target state="translated">사용자 정의 리소스 내의 &lt;strong&gt;템플릿&lt;/strong&gt; 리소스 블록에서 변수로 정의</target>
        </trans-unit>
        <trans-unit id="ca617d726b119099592ed5f1eb19566d0648fb3f" translate="yes" xml:space="preserve">
          <source>Defined in a .kitchen.yml file</source>
          <target state="translated">.kitchen.yml 파일에 정의</target>
        </trans-unit>
        <trans-unit id="be7ff5f03d3daa497de06ce43ab30915c1d98396" translate="yes" xml:space="preserve">
          <source>Defines each action the custom resource may take</source>
          <target state="translated">사용자 지정 리소스가 수행 할 수있는 각 작업을 정의합니다</target>
        </trans-unit>
        <trans-unit id="4784a402f37ef90a23959ac5bbde86951cd84053" translate="yes" xml:space="preserve">
          <source>Defining a cookbook named &lt;code&gt;website&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;website&lt;/code&gt; 라는 요리 책 정의하기</target>
        </trans-unit>
        <trans-unit id="dd9d06e25faabc21e3fd6cf854f9f03b7760cb10" translate="yes" xml:space="preserve">
          <source>Defining an action</source>
          <target state="translated">동작 정의</target>
        </trans-unit>
        <trans-unit id="cbdfc599b2e58efbc60d4f3c5a5cf4f465ef3871" translate="yes" xml:space="preserve">
          <source>Defining two properties</source>
          <target state="translated">두 가지 속성 정의</target>
        </trans-unit>
        <trans-unit id="5d09787859c2bb97d8b99448a3bd8842e71471e2" translate="yes" xml:space="preserve">
          <source>Definition vs. Resource</source>
          <target state="translated">정의 대 자원</target>
        </trans-unit>
        <trans-unit id="15225baac48fc3d689cb2b0f74b936eff4339ff7" translate="yes" xml:space="preserve">
          <source>Definitions</source>
          <target state="translated">Definitions</target>
        </trans-unit>
        <trans-unit id="f6fdbe48dc54dd86f63097a03bd24094dedd713a" translate="yes" xml:space="preserve">
          <source>Delete</source>
          <target state="translated">Delete</target>
        </trans-unit>
        <trans-unit id="d6726bb9e3188abc620fa3463e898c825f2ade7d" translate="yes" xml:space="preserve">
          <source>Delete Branch</source>
          <target state="translated">지점 삭제</target>
        </trans-unit>
        <trans-unit id="3880673ecdba5648aa85ff88a9372e7ebe666450" translate="yes" xml:space="preserve">
          <source>Delete Data Bag</source>
          <target state="translated">데이터 백 삭제</target>
        </trans-unit>
        <trans-unit id="021bae6ce51ad44d844c571d96e8bace382cb8cb" translate="yes" xml:space="preserve">
          <source>Delete Environment</source>
          <target state="translated">환경 삭제</target>
        </trans-unit>
        <trans-unit id="f39cda97e3dd13d5a1cd369e0d8457e81b06fc98" translate="yes" xml:space="preserve">
          <source>Delete Item</source>
          <target state="translated">항목 삭제</target>
        </trans-unit>
        <trans-unit id="af587987356198293e2b65cf3d9713fb0492b1eb" translate="yes" xml:space="preserve">
          <source>Delete Role</source>
          <target state="translated">역할 삭제</target>
        </trans-unit>
        <trans-unit id="165b38209eadb5425dc096a4ec21c00be555a074" translate="yes" xml:space="preserve">
          <source>Delete a directory, including the contents of that directory.</source>
          <target state="translated">해당 디렉토리의 내용을 포함하여 디렉토리를 삭제하십시오.</target>
        </trans-unit>
        <trans-unit id="dbd71615741356ce5487a326ff02aca21d0f1129" translate="yes" xml:space="preserve">
          <source>Delete a directory.</source>
          <target state="translated">디렉토리를 삭제하십시오.</target>
        </trans-unit>
        <trans-unit id="8f55705e486ea8516926708c08c13c9256e8a95e" translate="yes" xml:space="preserve">
          <source>Delete a file.</source>
          <target state="translated">파일을 삭제하십시오.</target>
        </trans-unit>
        <trans-unit id="e952d66603c2e0fb608317471008306b711e8940" translate="yes" xml:space="preserve">
          <source>Delete a launchd property list. This will unload a daemon or agent, if loaded.</source>
          <target state="translated">시작된 속성 목록을 삭제하십시오. 로드 된 경우 데몬 또는 에이전트를 언로드합니다.</target>
        </trans-unit>
        <trans-unit id="d55d54527a20655a5921c4bf0528c19d81671a30" translate="yes" xml:space="preserve">
          <source>Delete a link.</source>
          <target state="translated">링크를 삭제하십시오.</target>
        </trans-unit>
        <trans-unit id="c3669011f070f12d55509a1a893ad4eb60624c33" translate="yes" xml:space="preserve">
          <source>Delete a route.</source>
          <target state="translated">경로를 삭제하십시오.</target>
        </trans-unit>
        <trans-unit id="3156cb43337aa6abfa34afeaeefda4fd86d5dc3a" translate="yes" xml:space="preserve">
          <source>Delete all cookbooks (and cookbook versions).</source>
          <target state="translated">모든 요리 책 (및 요리 책 버전)을 삭제하십시오.</target>
        </trans-unit>
        <trans-unit id="d42b63c6b13e79ce550c627d803c998346119d16" translate="yes" xml:space="preserve">
          <source>Delete an entry from a cron table file (crontab).</source>
          <target state="translated">크론 테이블 파일 (crontab)에서 항목을 삭제하십시오.</target>
        </trans-unit>
        <trans-unit id="49fdc353d7656e1fcc121722941d2950295069ce" translate="yes" xml:space="preserve">
          <source>Delete an environment variable.</source>
          <target state="translated">환경 변수를 삭제하십시오.</target>
        </trans-unit>
        <trans-unit id="7455775096d11acadc623481639dbad2c7ee4f80" translate="yes" xml:space="preserve">
          <source>Delete both local and remote copies of an object.</source>
          <target state="translated">객체의 로컬 및 원격 복사본을 모두 삭제합니다.</target>
        </trans-unit>
        <trans-unit id="7841a58324bb96d5b15f036d06f6bc5930e39220" translate="yes" xml:space="preserve">
          <source>Delete both local and remote copies of an object. Default: &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">객체의 로컬 및 원격 복사본을 모두 삭제합니다. 기본값 : &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5f4c758dde27dea4346e9c6a202a99caf56ca420" translate="yes" xml:space="preserve">
          <source>Delete only the local copy of an object. A remote copy will not be deleted. Default: &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">오브젝트의 로컬 사본 만 삭제하십시오. 원격 사본은 삭제되지 않습니다. 기본값 : &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="484457b2f2d92616cb7f479514e72d02b4993ee0" translate="yes" xml:space="preserve">
          <source>Delete the override:</source>
          <target state="translated">무시를 삭제하십시오.</target>
        </trans-unit>
        <trans-unit id="bd7078887d00c5240e4a7fbe54013457f7b712f0" translate="yes" xml:space="preserve">
          <source>Delete the specified registry key and all of its subkeys.</source>
          <target state="translated">지정된 레지스트리 키와 모든 하위 키를 삭제하십시오.</target>
        </trans-unit>
        <trans-unit id="28207130888929e2c3eca0e5294d6d44444be4b9" translate="yes" xml:space="preserve">
          <source>Delete the specified values for a registry key.</source>
          <target state="translated">레지스트리 키에 지정된 값을 삭제하십시오.</target>
        </trans-unit>
        <trans-unit id="24df6069e649767940c65a8a5e5e27a5da0f407a" translate="yes" xml:space="preserve">
          <source>Deleting a node will not delete any corresponding API clients.</source>
          <target state="translated">노드를 삭제해도 해당 API 클라이언트는 삭제되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="ac209381f29d15c106fd735e989e729fdac6a8fd" translate="yes" xml:space="preserve">
          <source>Depending on how OpenSSL is configured, the &lt;code&gt;ssl_ca_path&lt;/code&gt; may need to be specified. Default value: &lt;code&gt;:verify_peer&lt;/code&gt;.</source>
          <target state="translated">OpenSSL 구성 방법에 따라 &lt;code&gt;ssl_ca_path&lt;/code&gt; 를 지정해야 할 수도 있습니다. 기본 값 : &lt;code&gt;:verify_peer&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1af088a7f29e103384134d38fe54b2c5345c8c01" translate="yes" xml:space="preserve">
          <source>Deploy Cache File</source>
          <target state="translated">캐시 파일 배포</target>
        </trans-unit>
        <trans-unit id="449139885823c2c29f38fc91a43d6ffcaeb899e6" translate="yes" xml:space="preserve">
          <source>Deploy Phases</source>
          <target state="translated">단계 배포</target>
        </trans-unit>
        <trans-unit id="340a9f97b5765d0873155e90ac2cd8093b8cd5dc" translate="yes" xml:space="preserve">
          <source>Deploy Strategies</source>
          <target state="translated">전략 배포</target>
        </trans-unit>
        <trans-unit id="daa712ed5dc8711a9c1e16523d647f9a130ace2b" translate="yes" xml:space="preserve">
          <source>Describes the desired state for a configuration item</source>
          <target state="translated">구성 항목의 원하는 상태를 설명합니다</target>
        </trans-unit>
        <trans-unit id="55f8ebc805e65b5b71ddafdae390e3be2bcd69af" translate="yes" xml:space="preserve">
          <source>Description</source>
          <target state="translated">Description</target>
        </trans-unit>
        <trans-unit id="1dd963befdcbed7319530515095a2401fa78732c" translate="yes" xml:space="preserve">
          <source>Description, Example</source>
          <target state="translated">설명, 예</target>
        </trans-unit>
        <trans-unit id="bcf0e8fc5891fb96b0536bc7a25b48a064c4580d" translate="yes" xml:space="preserve">
          <source>Desired State Configuration (DSC) is a feature of Windows PowerShell that provides &lt;a href=&quot;http://technet.microsoft.com/en-us/library/dn249912.aspx&quot;&gt;a set of language extensions, cmdlets, and resources&lt;/a&gt; that can be used to declaratively configure software. DSC is similar to Chef, in that both tools are idempotent, take similar approaches to the concept of resources, describe the configuration of a system, and then take the steps required to do that configuration. The most important difference between Chef and DSC is that Chef uses Ruby and DSC is exposed as configuration data from within Windows PowerShell.</source>
          <target state="translated">DSC (Desired State Configuration)는 소프트웨어를 선언적으로 구성하는 데 사용할 수있는 &lt;a href=&quot;http://technet.microsoft.com/en-us/library/dn249912.aspx&quot;&gt;언어 확장, cmdlet 및 리소스 집합&lt;/a&gt; 을 제공 하는 Windows PowerShell의 기능입니다 . DSC는 Chef와 유사합니다. 두 도구는 모두 dem 등원이며 자원 개념에 유사한 접근 방식을 취하고 시스템 구성을 설명한 다음 해당 구성을 수행하는 데 필요한 단계를 수행한다는 점입니다. Chef와 DSC의 가장 중요한 차이점은 Chef가 Ruby를 사용하고 DSC가 Windows PowerShell 내에서 구성 데이터로 노출된다는 것입니다.</target>
        </trans-unit>
        <trans-unit id="9c247a98668c2f01967fce7accf68b862da04c3f" translate="yes" xml:space="preserve">
          <source>Determine dependencies from objects located on the Chef server instead of in the local chef-repo. Default: &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">로컬 chef-repo 대신 Chef 서버에있는 오브젝트의 종속성을 판별하십시오. 기본값 : &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="dc0124bbc98e41c73735ce077e81fa2a703b32ba" translate="yes" xml:space="preserve">
          <source>Developing cookbooks and recipes (and authoring them using Ruby syntax and patterns)</source>
          <target state="translated">요리 책과 레시피 개발 (및 Ruby 구문 및 패턴을 사용하여 작성)</target>
        </trans-unit>
        <trans-unit id="df485c871329671f46570634d63216761441bcd6" translate="yes" xml:space="preserve">
          <source>Devices</source>
          <target state="translated">Devices</target>
        </trans-unit>
        <trans-unit id="9c2b80c516d90c9658a3e835a738bfeef37d0022" translate="yes" xml:space="preserve">
          <source>Directories that are used by Chef on the Microsoft Windows platform cannot have spaces. For example, &lt;code&gt;/c/Users/Steven Danno&lt;/code&gt; will not work, but &lt;code&gt;/c/Users/StevenDanno&lt;/code&gt; will.</source>
          <target state="translated">Chef가 Microsoft Windows 플랫폼에서 사용하는 디렉토리는 공백을 가질 수 없습니다. 예를 들어, &lt;code&gt;/c/Users/Steven Danno&lt;/code&gt; 는 작동하지 않지만 &lt;code&gt;/c/Users/StevenDanno&lt;/code&gt; 는 작동합니다.</target>
        </trans-unit>
        <trans-unit id="1b6b14f9fe13ffe2b07b7a707782f3492bb15c1b" translate="yes" xml:space="preserve">
          <source>Directories within &lt;code&gt;/website&lt;/code&gt; named &lt;code&gt;/cities&lt;/code&gt;, &lt;code&gt;/places&lt;/code&gt;, and &lt;code&gt;/football&lt;/code&gt;, which contains pages about cities, places, and football teams</source>
          <target state="translated">&lt;code&gt;/cities&lt;/code&gt; , &lt;code&gt;/places&lt;/code&gt; 및 &lt;code&gt;/football&lt;/code&gt; 이라는 &lt;code&gt;/website&lt;/code&gt; 내의 디렉토리 에는 도시, 장소 및 축구 팀에 대한 페이지가 있습니다.</target>
        </trans-unit>
        <trans-unit id="4b892fe0c040fa8a944037d1d2817c41ab7da958" translate="yes" xml:space="preserve">
          <source>Directory</source>
          <target state="translated">Directory</target>
        </trans-unit>
        <trans-unit id="99946884377a9fee47f0a9dadc16a697de435a38" translate="yes" xml:space="preserve">
          <source>Directory Structure</source>
          <target state="translated">디렉토리 구조</target>
        </trans-unit>
        <trans-unit id="02bf41e4986898774208f0a97a206094318f91ac" translate="yes" xml:space="preserve">
          <source>Disable a launchd property list.</source>
          <target state="translated">시작된 속성 목록을 비활성화합니다.</target>
        </trans-unit>
        <trans-unit id="f89fdb66fc36fee8f58ee7aecc4fa2d55fe53e45" translate="yes" xml:space="preserve">
          <source>Disable a service. This action is equivalent to a &lt;code&gt;Disabled&lt;/code&gt; startup type on the Microsoft Windows platform.</source>
          <target state="translated">서비스를 비활성화하십시오. 이 조치는 Microsoft Windows 플랫폼에서 사용 &lt;code&gt;Disabled&lt;/code&gt; 시작 유형에 해당합니다.</target>
        </trans-unit>
        <trans-unit id="d637d02b7aba07c75e922d5b0e70a2db9546753a" translate="yes" xml:space="preserve">
          <source>Disable a service. This action is equivalent to a &lt;code&gt;Disabled&lt;/code&gt; startup type on the Microsoft Windows platform. This action is not supported when using System Resource Controller (SRC) on the AIX platform because System Resource Controller (SRC) does not have a standard mechanism for enabling and disabling services on system boot.</source>
          <target state="translated">서비스를 비활성화하십시오. 이 조치는 Microsoft Windows 플랫폼에서 사용 &lt;code&gt;Disabled&lt;/code&gt; 시작 유형에 해당합니다. SRC (System Resource Controller)에는 시스템 부팅시 서비스를 활성화 및 비활성화하기위한 표준 메커니즘이 없으므로 AIX 플랫폼에서 SRC (System Resource Controller)를 사용할 때는이 조치가 지원되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="60cd5bf04eb96fd0e5437dd3b095970bde31b767" translate="yes" xml:space="preserve">
          <source>Disable the handler for the current chef-client run on the current node.</source>
          <target state="translated">현재 노드에서 현재 chef-client 실행에 대한 핸들러를 사용하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="1553a06dc58f777c457578e1a67649c20d0d823c" translate="yes" xml:space="preserve">
          <source>Disabling the Apache Qpid daemon on CentOS and Red Hat systems</source>
          <target state="translated">CentOS 및 Red Hat 시스템에서 Apache Qpid 데몬 비활성화</target>
        </trans-unit>
        <trans-unit id="6b32fc836e84d9a04ecb737a739aa3173253d5d3" translate="yes" xml:space="preserve">
          <source>Disk Configuration</source>
          <target state="translated">디스크 구성</target>
        </trans-unit>
        <trans-unit id="acbbe75f11a8a5b874967c892ada42011a079e4f" translate="yes" xml:space="preserve">
          <source>Disk space estimates assume that the Reporting add-on is not installed</source>
          <target state="translated">디스크 공간 추정치는보고 애드온이 설치되지 않은 것으로 가정합니다.</target>
        </trans-unit>
        <trans-unit id="2b90b686d906dfe96911dd3f2f38223708001d62" translate="yes" xml:space="preserve">
          <source>Disks</source>
          <target state="translated">Disks</target>
        </trans-unit>
        <trans-unit id="c232d31c1136a6b49a81fc732769a1298e404686" translate="yes" xml:space="preserve">
          <source>Display a node in the $EDITOR. By default, attributes that are default, override, or automatic, are not shown.</source>
          <target state="translated">$ EDITOR에 노드를 표시하십시오. 기본적으로 기본, 재정의 또는 자동 속성은 표시되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="850ad30e97e1d3384490ba11079339ee86a2f6fc" translate="yes" xml:space="preserve">
          <source>Display all attributes in the output and show the output as JSON.</source>
          <target state="translated">출력의 모든 속성을 표시하고 출력을 JSON으로 표시하십시오.</target>
        </trans-unit>
        <trans-unit id="eca3146491f7747ee7355de1423a00d970432aed" translate="yes" xml:space="preserve">
          <source>Display normal attributes in the output and to show the output as JSON.</source>
          <target state="translated">출력에 일반 속성을 표시하고 출력을 JSON으로 표시하십시오.</target>
        </trans-unit>
        <trans-unit id="34c99f1855558dd387cc29ab375056658def8749" translate="yes" xml:space="preserve">
          <source>Do a one-time checkout from git &lt;strong&gt;or&lt;/strong&gt; use when a branch in the upstream repository is named &lt;code&gt;deploy&lt;/code&gt;. To prevent the &lt;strong&gt;git&lt;/strong&gt; resource from attempting to check out master from master, set &lt;code&gt;enable_checkout&lt;/code&gt; to &lt;code&gt;false&lt;/code&gt; when using the &lt;code&gt;checkout_branch&lt;/code&gt; property. See &lt;code&gt;revision&lt;/code&gt;. Default value: &lt;code&gt;deploy&lt;/code&gt;.</source>
          <target state="translated">git에서 한 번 체크 아웃 &lt;strong&gt;하거나&lt;/strong&gt; 업스트림 저장소의 분기 이름이 &lt;code&gt;deploy&lt;/code&gt; 인 경우 사용하십시오 . &lt;strong&gt;git&lt;/strong&gt; 리소스가 마스터에서 마스터를 체크 아웃 하지 못하게하려면 &lt;code&gt;checkout_branch&lt;/code&gt; 속성을 사용할 때 &lt;code&gt;enable_checkout&lt;/code&gt; 을 &lt;code&gt;false&lt;/code&gt; 로 설정 하십시오 . &lt;code&gt;revision&lt;/code&gt; 참조하십시오 . 기본 값 : &lt;code&gt;deploy&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0c4ca1b92a4119350f5a4fe9bfc833a581e54c8e" translate="yes" xml:space="preserve">
          <source>Do anything that can be done with Ruby</source>
          <target state="translated">루비로 할 수있는 일을하십시오</target>
        </trans-unit>
        <trans-unit id="d4d1f95ccf416b8c92cd6b9962b8884cf0305b9c" translate="yes" xml:space="preserve">
          <source>Do not run this command on the secondary back-end server!</source>
          <target state="translated">보조 백엔드 서버에서이 명령을 실행하지 마십시오!</target>
        </trans-unit>
        <trans-unit id="ba3602bf1fa8c557308f1490ac60043bc26a85c4" translate="yes" xml:space="preserve">
          <source>Do not use the &lt;code&gt;ifconfig&lt;/code&gt; command as it will not show all aliases.</source>
          <target state="translated">&lt;code&gt;ifconfig&lt;/code&gt; 명령은 모든 별명을 표시 하지 않으므로 사용하지 마십시오 .</target>
        </trans-unit>
        <trans-unit id="9c521b6d12a65015ca82e5e285d2f39b3246803b" translate="yes" xml:space="preserve">
          <source>Do some basic arithmetic:</source>
          <target state="translated">몇 가지 기본 산술을 수행하십시오.</target>
        </trans-unit>
        <trans-unit id="42c7dd7ef6767859363ae1932a37452672de1454" translate="yes" xml:space="preserve">
          <source>Do something like this:</source>
          <target state="translated">다음과 같이하십시오 :</target>
        </trans-unit>
        <trans-unit id="a09d8fe71d819660f00ffa7e97f5581804bd696d" translate="yes" xml:space="preserve">
          <source>Do this:</source>
          <target state="translated">이 작업을 수행:</target>
        </trans-unit>
        <trans-unit id="b1844766582c3ef45ba9744b55d4684dd804503c" translate="yes" xml:space="preserve">
          <source>Does not have an indeterminate status, such as a service for which only the watcher is &amp;ldquo;running&amp;rdquo;</source>
          <target state="translated">감시자 만 &quot;실행 중&quot;인 서비스와 같이 불확실한 상태가 아닙니다.</target>
        </trans-unit>
        <trans-unit id="81075791140c4efe2a9436719035f4f4105ed450" translate="yes" xml:space="preserve">
          <source>Does not support common resource properties, such as &lt;code&gt;notifies&lt;/code&gt;, &lt;code&gt;subscribes&lt;/code&gt;, &lt;code&gt;only_if&lt;/code&gt;, and &lt;code&gt;not_if&lt;/code&gt;</source>
          <target state="translated">같은 일반적인 자원 속성을 지원하지 않습니다 &lt;code&gt;notifies&lt;/code&gt; , &lt;code&gt;subscribes&lt;/code&gt; , &lt;code&gt;only_if&lt;/code&gt; 및 &lt;code&gt;not_if&lt;/code&gt; 을</target>
        </trans-unit>
        <trans-unit id="aa635a3f94475db820f550d816ba30939d16d31b" translate="yes" xml:space="preserve">
          <source>Does not support why-run mode</source>
          <target state="translated">왜 실행 모드를 지원하지 않습니다</target>
        </trans-unit>
        <trans-unit id="9477fa9d276f0919867ac5ec9856e1145c875228" translate="yes" xml:space="preserve">
          <source>Does this work with chef-solo?</source>
          <target state="translated">이것은 요리사 솔로와 함께 작동합니까?</target>
        </trans-unit>
        <trans-unit id="ec3d2fd61b166aa43f9c6f1674d2b47be36230f6" translate="yes" xml:space="preserve">
          <source>Downgrade a package to satisfy requested version requirements.</source>
          <target state="translated">요청 된 버전 요구 사항을 충족하도록 패키지를 다운 그레이드하십시오.</target>
        </trans-unit>
        <trans-unit id="a479c9c34e878d07b4d67a73a48f432ad7dc53c8" translate="yes" xml:space="preserve">
          <source>Download</source>
          <target state="translated">Download</target>
        </trans-unit>
        <trans-unit id="6dff41f945dd6692c47c72c96be91103f934652c" translate="yes" xml:space="preserve">
          <source>Download File</source>
          <target state="translated">파일 다운로드</target>
        </trans-unit>
        <trans-unit id="3bbdd3357a0b99d8034ca34ac55f722718913610" translate="yes" xml:space="preserve">
          <source>Download all cookbook files and templates at the beginning of the chef-client run. Default value: &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">chef-client 실행이 시작될 때 모든 요리 책 파일과 템플릿을 다운로드하십시오. 기본 값 : &lt;code&gt;true&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="981cafece40d17ba4330b944aec06a87b27eea55" translate="yes" xml:space="preserve">
          <source>Download only new and modified files. Set to &lt;code&gt;false&lt;/code&gt; to download all files. Default: &lt;code&gt;--diff&lt;/code&gt;.</source>
          <target state="translated">새 파일과 수정 된 파일 만 다운로드하십시오. 모든 파일을 다운로드 하려면 &lt;code&gt;false&lt;/code&gt; 로 설정 하십시오. 기본값은 &lt;code&gt;--diff&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="77121bc48f580024bd0dd616390700c1f9c6be2e" translate="yes" xml:space="preserve">
          <source>Download the &lt;strong&gt;chef_handler&lt;/strong&gt; cookbook</source>
          <target state="translated">&lt;strong&gt;chef_handler&lt;/strong&gt; 요리 책 다운로드</target>
        </trans-unit>
        <trans-unit id="1c8fc9a624c04e3fdb735e5b84ca64695e136933" translate="yes" xml:space="preserve">
          <source>Download the chef-repo as a tar.gz file and place it into local version source control.</source>
          <target state="translated">chef-repo를 tar.gz 파일로 다운로드하여 로컬 버전 소스 제어에 배치하십시오.</target>
        </trans-unit>
        <trans-unit id="7c5163d13991d1638194bbd5597a4cb6994e09ca" translate="yes" xml:space="preserve">
          <source>Download the most recent version of a cookbook.</source>
          <target state="translated">최신 버전의 요리 책을 다운로드하십시오.</target>
        </trans-unit>
        <trans-unit id="a7273a5188979bdce2c10b4d603c8ddd331b5f43" translate="yes" xml:space="preserve">
          <source>Download the package from &lt;a href=&quot;http://downloads.chef.io/chef-server/&quot;&gt;http://downloads.chef.io/chef-server/&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;http://downloads.chef.io/chef-server/&quot;&gt;http://downloads.chef.io/chef-server/&lt;/a&gt; 에서 패키지를 다운로드 하십시오 .</target>
        </trans-unit>
        <trans-unit id="fabfb68d60b1f5e5ce67f0418e9df469fa36fee4" translate="yes" xml:space="preserve">
          <source>Download the packages from &lt;a href=&quot;http://downloads.chef.io/chef-server/&quot;&gt;http://downloads.chef.io/chef-server/&lt;/a&gt; and &lt;a href=&quot;http://downloads.chef.io/chef-ha/&quot;&gt;http://downloads.chef.io/chef-ha/&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;http://downloads.chef.io/chef-server/&quot;&gt;http://downloads.chef.io/chef-server/&lt;/a&gt; 및 &lt;a href=&quot;http://downloads.chef.io/chef-ha/&quot;&gt;http://downloads.chef.io/chef-ha/&lt;/a&gt; 에서 패키지를 다운로드 하십시오 .</target>
        </trans-unit>
        <trans-unit id="39e3a7b615e8f52996364c7d418e3ec2ee62c966" translate="yes" xml:space="preserve">
          <source>Download the packages from &lt;a href=&quot;http://downloads.chef.io/chef-server/&quot;&gt;http://downloads.chef.io/chef-server/&lt;/a&gt;. For Red Hat and CentOS 6:</source>
          <target state="translated">&lt;a href=&quot;http://downloads.chef.io/chef-server/&quot;&gt;http://downloads.chef.io/chef-server/&lt;/a&gt; 에서 패키지를 다운로드 하십시오 . Red Hat 및 CentOS 6의 경우 :</target>
        </trans-unit>
        <trans-unit id="44e7ab247afcda92953039be85b9c959c3b77471" translate="yes" xml:space="preserve">
          <source>Download the specified packages and versions via a single HTTP transaction</source>
          <target state="translated">단일 HTTP 트랜잭션을 통해 지정된 패키지 및 버전을 다운로드하십시오.</target>
        </trans-unit>
        <trans-unit id="c40a7d6b42fde0c6cbe4a108a373a2ca5a0f96fb" translate="yes" xml:space="preserve">
          <source>Drbdadm is the management tool for DRBD. It can be used to obtain status information and to alter the state of the DRBD cluster. For more information about Drbdadm, see &lt;a href=&quot;http://www.drbd.org/users-guide/re-drbdadm.html&quot;&gt;http://www.drbd.org/users-guide/re-drbdadm.html&lt;/a&gt;.</source>
          <target state="translated">Drbdadm은 DRBD의 관리 도구입니다. 상태 정보를 얻고 DRBD 클러스터의 상태를 변경하는 데 사용할 수 있습니다. Drbdadm에 대한 자세한 내용은 &lt;a href=&quot;http://www.drbd.org/users-guide/re-drbdadm.html&quot;&gt;http://www.drbd.org/users-guide/re-drbdadm.html을&lt;/a&gt; 참조 하십시오 .</target>
        </trans-unit>
        <trans-unit id="2ed9cb1966a2e34fce8547963f8df4d6d2b70d43" translate="yes" xml:space="preserve">
          <source>Dump data asynchronously on-disk or to an append-only log file. Set to &lt;code&gt;yes&lt;/code&gt; to dump data to an append-only log file. Default value: &lt;code&gt;'no'&lt;/code&gt;.</source>
          <target state="translated">디스크에서 또는 추가 전용 로그 파일에 비동기 적으로 데이터를 덤프하십시오. 데이터를 추가 전용 로그 파일로 덤프 하려면 &lt;code&gt;yes&lt;/code&gt; 로 설정 하십시오. 기본값은 &lt;code&gt;'no'&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="477cee065d8b082be2dcf8a873854610f73dd1ab" translate="yes" xml:space="preserve">
          <source>During a &lt;code&gt;knife bootstrap&lt;/code&gt; bootstrap operation, the following happens:</source>
          <target state="translated">&lt;code&gt;knife bootstrap&lt;/code&gt; 스트랩 부트 스트랩 작업 중에 다음이 발생합니다.</target>
        </trans-unit>
        <trans-unit id="2ab8be2d2d4503e3c37796b100bc943364e47e80" translate="yes" xml:space="preserve">
          <source>During a chef-client Run</source>
          <target state="translated">요리사 클라이언트 실행 중</target>
        </trans-unit>
        <trans-unit id="72312bbe2b980d9737245f5cb6aefefe8dfece10" translate="yes" xml:space="preserve">
          <source>During a chef-client run, the checksum for each local file is calculated and then compared against the checksum for the same file as it currently exists in the cookbook on the Chef server. A file is not transferred when the checksums match. Only files that require an update are transferred from the Chef server to a node.</source>
          <target state="translated">chef-client 실행 중에 각 로컬 파일의 체크섬이 계산 된 후 현재 Chef 서버의 요리 책에있는 것과 동일한 파일의 체크섬과 비교됩니다. 체크섬이 일치하면 파일이 전송되지 않습니다. 업데이트가 필요한 파일 만 Chef 서버에서 노드로 전송됩니다.</target>
        </trans-unit>
        <trans-unit id="9afca7ab657896dc4655fe4acf2580663dec548e" translate="yes" xml:space="preserve">
          <source>During every chef-client run, the chef-client builds the attribute list using:</source>
          <target state="translated">모든 요리사-클라이언트 실행 중에 요리사-클라이언트는 다음을 사용하여 속성 목록을 작성합니다.</target>
        </trans-unit>
        <trans-unit id="b2fee20b742e44087f47f608b4b06286bdd0a828" translate="yes" xml:space="preserve">
          <source>During every chef-client run, the following happens:</source>
          <target state="translated">모든 쉐프-클라이언트 실행 중에 다음이 발생합니다.</target>
        </trans-unit>
        <trans-unit id="7c687dd1b79c5c48143ce48c3c624bb01609f5f9" translate="yes" xml:space="preserve">
          <source>During the above run, the &lt;code&gt;sea:power&lt;/code&gt; vault item was updated with the &lt;code&gt;ubuntu-12.04&lt;/code&gt; client during the validatorless bootstrap. Previously, it only had the two admins authorized to view the content</source>
          <target state="translated">위 실행 중에 &lt;code&gt;sea:power&lt;/code&gt; vault 항목은 유효성 검사기없는 부트 스트랩 동안 &lt;code&gt;ubuntu-12.04&lt;/code&gt; 클라이언트 로 업데이트되었습니다 . 이전에는 두 명의 관리자 만 콘텐츠를 볼 수있는 권한을 가졌습니다.</target>
        </trans-unit>
        <trans-unit id="512876331dca43ea4a98086fc06fc855ccb3cf33" translate="yes" xml:space="preserve">
          <source>During the initial chef-client run, the chef-client will register with the Chef server using the private key assigned to the chef-validator, after which the chef-client will obtain a &lt;code&gt;client.pem&lt;/code&gt; private key for all future authentication requests to the Chef server.</source>
          <target state="translated">초기 Chef-Client 실행 중에 Chef-Client는 Chef 유효성 검사기에 할당 된 개인 키를 사용하여 Chef 서버에 등록한 후 이후 에 모든 인증 요청에 대해 &lt;code&gt;client.pem&lt;/code&gt; 개인 키를 얻 습니다. 요리사 서버.</target>
        </trans-unit>
        <trans-unit id="a5e7d73410461d58265ae18985f42c23ed03f306" translate="yes" xml:space="preserve">
          <source>Dynamic Resolution</source>
          <target state="translated">동적 해상도</target>
        </trans-unit>
        <trans-unit id="086bfb42cb0e1f0682c42f25c92a8f7e76b5bda4" translate="yes" xml:space="preserve">
          <source>ENV</source>
          <target state="translated">ENV</target>
        </trans-unit>
        <trans-unit id="2d37e6c482da3845a54ce77b4e73d1d149175e90" translate="yes" xml:space="preserve">
          <source>Each &lt;code&gt;control&lt;/code&gt; block must define at least one validation</source>
          <target state="translated">각 &lt;code&gt;control&lt;/code&gt; 블록은 하나 이상의 유효성 검사를 정의해야합니다.</target>
        </trans-unit>
        <trans-unit id="3b85966edf93d37e6f13bd316447d0761cb0441d" translate="yes" xml:space="preserve">
          <source>Each &lt;code&gt;it&lt;/code&gt; statement defines a single validation. &lt;code&gt;it&lt;/code&gt; statements are processed individually when the chef-client is run in audit-mode</source>
          <target state="translated">각 &lt;code&gt;it&lt;/code&gt; 문은 단일 유효성 검사를 정의합니다. &lt;code&gt;it&lt;/code&gt; 요리사 - 클라이언트가 감사 모드에서 실행할 때 문은 개별적으로 처리된다</target>
        </trans-unit>
        <trans-unit id="9feb225b9aaed867a6285cb2f69d2c3a0ee8de26" translate="yes" xml:space="preserve">
          <source>Each Chef server in a high availabilty configuration must have an identical chef-server.rb file that is located in the &lt;code&gt;/etc/opscode/&lt;/code&gt; directory on each server. This file describes the topology of the high availability configuration. On the primary backend server, create a file named chef-server.rb and save it in the &lt;code&gt;/etc/opscode/&lt;/code&gt; directory.</source>
          <target state="translated">고 가용성 구성의 각 Chef 서버에는 각 서버의 &lt;code&gt;/etc/opscode/&lt;/code&gt; 디렉토리에 있는 동일한 chef-server.rb 파일이 있어야 합니다. 이 파일은 고 가용성 구성의 토폴로지를 설명합니다. 기본 백엔드 서버에서 chef-server.rb라는 파일을 작성하여 &lt;code&gt;/etc/opscode/&lt;/code&gt; 디렉토리에 저장하십시오 .</target>
        </trans-unit>
        <trans-unit id="58a6dd9184c8e0fafb6090a806abf99567b77c13" translate="yes" xml:space="preserve">
          <source>Each attribute type is listed in order of precedence</source>
          <target state="translated">각 속성 유형은 우선 순위에 따라 나열됩니다</target>
        </trans-unit>
        <trans-unit id="f93c500270a314af2f240a1834990199289e3be9" translate="yes" xml:space="preserve">
          <source>Each attribute value shown is the value that is set for that precedence level</source>
          <target state="translated">표시된 각 속성 값은 해당 우선 순위 레벨에 설정된 값입니다.</target>
        </trans-unit>
        <trans-unit id="94a77d04a6994a0aec814d0006176b50d63e73ee" translate="yes" xml:space="preserve">
          <source>Each audit is authored within a recipe using the &lt;code&gt;control_group&lt;/code&gt; and &lt;code&gt;control&lt;/code&gt; methods that are part of the Recipe DSL. Recipes that contain audits are added to the run-list, after which they can be processed by the chef-client. Output will appear in the same location as the regular chef-client run (as specified by the &lt;code&gt;log_location&lt;/code&gt; setting in the client.rb file).</source>
          <target state="translated">각 감사는 레시피 DSL의 일부인 &lt;code&gt;control_group&lt;/code&gt; 및 &lt;code&gt;control&lt;/code&gt; 방법을 사용하여 레시피 내에서 작성됩니다 . 감사가 포함 된 레시피가 실행 목록에 추가 된 후 요리사 클라이언트가 처리 할 수 ​​있습니다. 출력은 일반 chef-client 실행과 동일한 위치에 나타납니다 ( client.rb 파일 의 &lt;code&gt;log_location&lt;/code&gt; 설정에 지정된대로 ).</target>
        </trans-unit>
        <trans-unit id="4fa59ad4bc76956f6e92fb38d6c6ed5b26de9e4a" translate="yes" xml:space="preserve">
          <source>Each custom resource must have at least one action that is defined within an &lt;code&gt;action&lt;/code&gt; block:</source>
          <target state="translated">각 사용자 정의 자원에는 &lt;code&gt;action&lt;/code&gt; 블록 내에 정의 된 조치가 하나 이상 있어야합니다 .</target>
        </trans-unit>
        <trans-unit id="614c21f210147aaf5cc62b093f313efe6b6909b8" translate="yes" xml:space="preserve">
          <source>Each front end machine always runs the &lt;strong&gt;oc_bifrost&lt;/strong&gt; and &lt;strong&gt;opscode-erchef&lt;/strong&gt; services.</source>
          <target state="translated">각 프런트 엔드 시스템은 항상 &lt;strong&gt;oc_bifrost&lt;/strong&gt; 및 &lt;strong&gt;opscode-erchef&lt;/strong&gt; 서비스를 실행합니다 .</target>
        </trans-unit>
        <trans-unit id="e00d84ba1ae4663ba9068fb33808acb58da3f3a1" translate="yes" xml:space="preserve">
          <source>Each node has a 1:many relationship with policy settings stored on the Chef server. This relationship is based on the policy group to which the node is associated, and then the policy settings assigned to that group:</source>
          <target state="translated">각 노드는 Chef 서버에 저장된 정책 설정과 1 : 1 관계입니다. 이 관계는 노드가 연결된 정책 그룹과 해당 그룹에 할당 된 정책 설정을 기반으로합니다.</target>
        </trans-unit>
        <trans-unit id="a52565cf362a4b258dc1cec779ceb8122594c1ad" translate="yes" xml:space="preserve">
          <source>Each of these callback types can be used in one of three ways:</source>
          <target state="translated">이러한 각 콜백 유형은 다음 세 가지 방법 중 하나로 사용될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8089d8280cfd6ec0eb81c47a6718241888ff6ff4" translate="yes" xml:space="preserve">
          <source>Each of these services requires 25 connections, above the default value.</source>
          <target state="translated">이러한 각 서비스에는 기본값보다 높은 25 개의 연결이 필요합니다.</target>
        </trans-unit>
        <trans-unit id="b294c9f9afbe061f4706b03f9ec346b16d4fa032" translate="yes" xml:space="preserve">
          <source>Each organization-specific authentication request must include &lt;code&gt;/organizations/NAME&lt;/code&gt; as part of the name for the endpoint. For example, the full endpoint for getting a list of roles:</source>
          <target state="translated">각 조직 별 인증 요청에는 엔드 포인트 이름의 일부로 &lt;code&gt;/organizations/NAME&lt;/code&gt; 이 포함되어야 합니다. 예를 들어, 역할 목록을 얻기위한 전체 엔드 포인트 :</target>
        </trans-unit>
        <trans-unit id="a59949348abc6618c3c9fea7e21fd03e20a6d4ff" translate="yes" xml:space="preserve">
          <source>Each request to the Chef server from those executables sign a special group of HTTP headers with the private key. The Chef server then uses the public key to verify the headers and verify the contents.</source>
          <target state="translated">해당 실행 파일로부터 Chef 서버에 대한 각 요청은 개인 키를 사용하여 특수한 HTTP 헤더 그룹에 서명합니다. 그런 다음 Chef 서버는 공개 키를 사용하여 헤더를 확인하고 내용을 확인합니다.</target>
        </trans-unit>
        <trans-unit id="029d682bdb9c0b1b65194850ccdaa42274ab0582" translate="yes" xml:space="preserve">
          <source>Each sandbox has a unique identifier. The &lt;code&gt;/sandboxes/ID&lt;/code&gt; endpoint has the following methods: &lt;code&gt;PUT&lt;/code&gt;.</source>
          <target state="translated">각 샌드 박스에는 고유 식별자가 있습니다. &lt;code&gt;/sandboxes/ID&lt;/code&gt; 엔드 포인트는 다음과 같은 방법이있다 : &lt;code&gt;PUT&lt;/code&gt; 을 .</target>
        </trans-unit>
        <trans-unit id="5abf522ac2ce25c38ef4174cc249179a0aac984c" translate="yes" xml:space="preserve">
          <source>Each subcommand has its own set of arguments and options.</source>
          <target state="translated">각 부속 명령에는 고유 한 인수 및 옵션 세트가 있습니다.</target>
        </trans-unit>
        <trans-unit id="15b0596dda7ae468c4cdd3f669dba62bc8e7621c" translate="yes" xml:space="preserve">
          <source>Early RC candidates for the Chef server 12 release named this command &lt;code&gt;org-associate&lt;/code&gt;. This is the same command, with the exception of the &lt;code&gt;--admin&lt;/code&gt; flag, which is added to the command (along with the rename) for the upcoming final release of Chef server 12.</source>
          <target state="translated">Chef 서버 12 릴리스의 초기 RC 후보는이 명령을 &lt;code&gt;org-associate&lt;/code&gt; 로 명명했습니다 . &lt;code&gt;--admin&lt;/code&gt; 플래그를 제외하고는 동일한 명령이며, 이 명령은 곧 출시 될 Chef 서버 12의 최종 릴리스에 대한 명령 (이름 변경과 함께)에 추가됩니다.</target>
        </trans-unit>
        <trans-unit id="b55b374e4c63e8e1a679170d90c906a67b7bea62" translate="yes" xml:space="preserve">
          <source>Early RC candidates for the Chef server 12 release named this command &lt;code&gt;org-disociate&lt;/code&gt;. This is the same command, but renamed for the upcoming final release of Chef server 12.</source>
          <target state="translated">Chef 서버 12 릴리스의 초기 RC 후보는이 명령을 &lt;code&gt;org-disociate&lt;/code&gt; 로 명명했습니다 . 이것은 같은 명령이지만 곧 출시 될 Chef 서버 12의 최종 이름으로 바뀌 었습니다.</target>
        </trans-unit>
        <trans-unit id="5301648dcf6b53cefc9ed52999aaa92d4603cae0" translate="yes" xml:space="preserve">
          <source>Edit</source>
          <target state="translated">Edit</target>
        </trans-unit>
        <trans-unit id="658e65cba8796214fa05835b995c05c156573914" translate="yes" xml:space="preserve">
          <source>Edit Attribute</source>
          <target state="translated">속성 편집</target>
        </trans-unit>
        <trans-unit id="7ff79b84150cfd2ab9197c4c5fbb3f15f5ae0e6f" translate="yes" xml:space="preserve">
          <source>Edit Default Attributes</source>
          <target state="translated">기본 속성 편집</target>
        </trans-unit>
        <trans-unit id="924fc4e484dafb7d4a9134e5939da2d25767b546" translate="yes" xml:space="preserve">
          <source>Edit Details</source>
          <target state="translated">세부 사항 편집</target>
        </trans-unit>
        <trans-unit id="6ab4e36f2d6c780254c45e0c962c5abc3d1799cf" translate="yes" xml:space="preserve">
          <source>Edit Item</source>
          <target state="translated">항목 편집</target>
        </trans-unit>
        <trans-unit id="b9e3352f3ba529331cf4f993580f9d022d0324f2" translate="yes" xml:space="preserve">
          <source>Edit Override Attributes</source>
          <target state="translated">재정의 속성 편집</target>
        </trans-unit>
        <trans-unit id="a944bcd08a14bcc7887ee3c1b4dabbcd9b166e81" translate="yes" xml:space="preserve">
          <source>Edit Role Run-list</source>
          <target state="translated">역할 실행 목록 편집</target>
        </trans-unit>
        <trans-unit id="1965d488d5100a86430b70b34b487d11df3b7c03" translate="yes" xml:space="preserve">
          <source>Edit the &lt;code&gt;validation_key&lt;/code&gt; setting to be something that isn&amp;rsquo;t a path to an existent ORGANIZATION-validator.pem file. For example: &lt;code&gt;/nonexist&lt;/code&gt;.</source>
          <target state="translated">존재하는 ORGANIZATION-validator.pem 파일의 경로가 아닌 &lt;code&gt;validation_key&lt;/code&gt; 설정을 편집 하십시오. 예를 들어 &lt;code&gt;/nonexist&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="5f30497914fc22a3e78a8736b81ff00096269722" translate="yes" xml:space="preserve">
          <source>Edited using a text editor, and then re-uploaded to the Chef server as part of a cookbook upload</source>
          <target state="translated">텍스트 편집기를 사용하여 편집 한 다음 요리 책 업로드의 일부로 Chef 서버에 다시 업로드</target>
        </trans-unit>
        <trans-unit id="a408aa816b466ae93d43346cd1bd5372a8fca6ed" translate="yes" xml:space="preserve">
          <source>Editing a user&amp;rsquo;s profile</source>
          <target state="translated">사용자 프로필 편집</target>
        </trans-unit>
        <trans-unit id="c53cd5459225af1162e4f158c0212cfe3a57a865" translate="yes" xml:space="preserve">
          <source>Effectively leverages resources that are built into Chef</source>
          <target state="translated">Chef에 내장 된 리소스를 효과적으로 활용</target>
        </trans-unit>
        <trans-unit id="39ef1e114602565a824d502ff29b57d9087dae77" translate="yes" xml:space="preserve">
          <source>Elements of good approaches to building cookbooks and recipes that are reliable include:</source>
          <target state="translated">신뢰할 수있는 요리 책과 요리법을 만드는 좋은 접근 방식의 요소는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="eb33245dcf5e37e80b334863e860642d46474752" translate="yes" xml:space="preserve">
          <source>Elevate Commands</source>
          <target state="translated">높은 명령</target>
        </trans-unit>
        <trans-unit id="ea7e6c7a6cfd5694f2d37fb122d488234ec70ce0" translate="yes" xml:space="preserve">
          <source>Embed Ruby in a string:</source>
          <target state="translated">문자열에 Ruby를 포함시킵니다 :</target>
        </trans-unit>
        <trans-unit id="55b800e64c92d2166f533a8247adb2c93317dd2c" translate="yes" xml:space="preserve">
          <source>Empty Run-lists</source>
          <target state="translated">빈 런리스트</target>
        </trans-unit>
        <trans-unit id="6448c862be6ac0b46ab0d24cf00c9cb355e42a7d" translate="yes" xml:space="preserve">
          <source>Empty directories are not uploaded to the Chef server. To upload an empty directory, create a &amp;ldquo;dot&amp;rdquo; file&amp;mdash;e.g. &lt;code&gt;.keep&lt;/code&gt;&amp;mdash;in that directory to ensure that the directory itself is not empty.</source>
          <target state="translated">비어있는 디렉토리는 Chef 서버에 업로드되지 않습니다. 빈 디렉토리를 업로드하려면 디렉토리 자체가 비어 있지 않은지 확인하기 위해 해당 디렉토리에 &quot;dot&quot;파일 (예 : &lt;code&gt;.keep&lt;/code&gt; )을 만드십시오 .</target>
        </trans-unit>
        <trans-unit id="38b7bdac686e8b449e769223df4800a160df538b" translate="yes" xml:space="preserve">
          <source>Enable Chef actions. Default value: &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">Chef 조치를 사용하십시오. 기본 값 : &lt;code&gt;true&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c300b3b929efcb2b7ac04ff58535f98c95d3b425" translate="yes" xml:space="preserve">
          <source>Enable ETag headers. Set to &lt;code&gt;false&lt;/code&gt; to disable ETag headers. To use this setting, &lt;code&gt;use_conditional_get&lt;/code&gt; must also be set to &lt;code&gt;true&lt;/code&gt;. Default value: &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">ETag 헤더를 활성화하십시오. ETag 헤더를 사용하지 않으 려면 &lt;code&gt;false&lt;/code&gt; 로 설정하십시오 . 이 설정을 사용하려면 &lt;code&gt;use_conditional_get&lt;/code&gt; 도 &lt;code&gt;true&lt;/code&gt; 로 설정해야 합니다 . 기본 값 : &lt;code&gt;true&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8aa6bf826261c4ac8d9eca9efa81574b6598e1bc" translate="yes" xml:space="preserve">
          <source>Enable Features</source>
          <target state="translated">기능 사용</target>
        </trans-unit>
        <trans-unit id="8a9841e69608db6b3cff7e090b9c8299697700ce" translate="yes" xml:space="preserve">
          <source>Enable If-Modified-Since headers. Set to &lt;code&gt;false&lt;/code&gt; to disable If-Modified-Since headers. To use this setting, &lt;code&gt;use_conditional_get&lt;/code&gt; must also be set to &lt;code&gt;true&lt;/code&gt;. Default value: &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">If-Modified-Since 헤더를 사용하십시오. If-Modified-Since 헤더를 사용하지 않으 려면 &lt;code&gt;false&lt;/code&gt; 로 설정하십시오 . 이 설정을 사용하려면 &lt;code&gt;use_conditional_get&lt;/code&gt; 도 &lt;code&gt;true&lt;/code&gt; 로 설정해야 합니다 . 기본 값 : &lt;code&gt;true&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f03828758579ede69b00cb64c78878f0e52e633b" translate="yes" xml:space="preserve">
          <source>Enable Internet Protocol version 6 (IPv6) addresses. Default value: &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">IPv6 (Internet Protocol version 6) 주소를 사용하십시오. 기본 값 : &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="411fee6f34a8f76832190f0735057979c52bac85" translate="yes" xml:space="preserve">
          <source>Enable Reporting, which performs data collection during a chef-client run.</source>
          <target state="translated">Chef-Client 실행 중에 데이터 수집을 수행하는보고를 활성화합니다.</target>
        </trans-unit>
        <trans-unit id="becee2125c5247fd7194b8aa72a1eff0ebb2d7b7" translate="yes" xml:space="preserve">
          <source>Enable Reporting, which performs data collection during a chef-client run. Default value: &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">Chef-Client 실행 중에 데이터 수집을 수행하는보고를 활성화합니다. 기본 값 : &lt;code&gt;true&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="543ab8ba7fe570a862a3caaa5aeccefe816bee63" translate="yes" xml:space="preserve">
          <source>Enable SSH agent forwarding.</source>
          <target state="translated">SSH 에이전트 전달을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="00b94520cb840a11ccce4bfb63c7a5aabd1d9044" translate="yes" xml:space="preserve">
          <source>Enable TCP/IP transactions. Default value: &lt;code&gt;on&lt;/code&gt;.</source>
          <target state="translated">TCP / IP 트랜잭션을 활성화하십시오. 기본 값 : &lt;code&gt;on&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c6b6db92589d10f195ce446745552bc93610cca8" translate="yes" xml:space="preserve">
          <source>Enable TLS. When enabled, communication with the LDAP server is done via a secure SSL connection on a dedicated port. When &lt;code&gt;true&lt;/code&gt;, &lt;code&gt;ldap['port']&lt;/code&gt; is also set to &lt;code&gt;636&lt;/code&gt;. Default value: &lt;code&gt;false&lt;/code&gt;. Must be &lt;code&gt;false&lt;/code&gt; when &lt;code&gt;ldap['ssl_enabled']&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">TLS를 활성화하십시오. 사용 가능한 경우 전용 포트의 보안 SSL 연결을 통해 LDAP 서버와의 통신이 수행됩니다. 때 &lt;code&gt;true&lt;/code&gt; , &lt;code&gt;ldap['port']&lt;/code&gt; 도 설정되어 &lt;code&gt;636&lt;/code&gt; . 기본 값 : &lt;code&gt;false&lt;/code&gt; . &lt;code&gt;ldap['ssl_enabled']&lt;/code&gt; 가 &lt;code&gt;true&lt;/code&gt; 인 경우 &lt;code&gt;false&lt;/code&gt; 여야 합니다 .</target>
        </trans-unit>
        <trans-unit id="e5e2a6c73d852b72b2d0df1b08ec9b648c8f6724" translate="yes" xml:space="preserve">
          <source>Enable a service at boot. This action is equivalent to an &lt;code&gt;Automatic&lt;/code&gt; startup type on the Microsoft Windows platform.</source>
          <target state="translated">부팅시 서비스를 활성화하십시오. 이 조치는 Microsoft Windows 플랫폼 의 &lt;code&gt;Automatic&lt;/code&gt; 시작 유형 과 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="245c58c2ca2d6603009a7c883d217b759343d8cc" translate="yes" xml:space="preserve">
          <source>Enable a service at boot. This action is equivalent to an &lt;code&gt;Automatic&lt;/code&gt; startup type on the Microsoft Windows platform. This action is not supported when using System Resource Controller (SRC) on the AIX platform because System Resource Controller (SRC) does not have a standard mechanism for enabling and disabling services on system boot.</source>
          <target state="translated">부팅시 서비스를 활성화하십시오. 이 조치는 Microsoft Windows 플랫폼 의 &lt;code&gt;Automatic&lt;/code&gt; 시작 유형 과 동일합니다 . SRC (System Resource Controller)에는 시스템 부팅시 서비스를 활성화 및 비활성화하기위한 표준 메커니즘이 없으므로 AIX 플랫폼에서 SRC (System Resource Controller)를 사용할 때는이 조치가 지원되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="d4bae2f8e5b014d62100411e28521fba49331021" translate="yes" xml:space="preserve">
          <source>Enable a service. Default value: &lt;code&gt;'false'&lt;/code&gt;. This value should not be modified.</source>
          <target state="translated">서비스를 활성화하십시오. 기본 값 : &lt;code&gt;'false'&lt;/code&gt; . 이 값은 수정하지 않아야합니다.</target>
        </trans-unit>
        <trans-unit id="9e128b3ff5dcb8474accd2b50cbc1b31986527f5" translate="yes" xml:space="preserve">
          <source>Enable a service. Default value: &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">서비스를 활성화하십시오. 기본 값 : &lt;code&gt;true&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b129573d016380b3b6d54919f7c9b62eea9c2bbd" translate="yes" xml:space="preserve">
          <source>Enable a service. Enable this setting for backend servers in high availability topologies. Default value: &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">서비스를 활성화하십시오. 고 가용성 토폴로지의 백엔드 서버에이 설정을 사용하십시오. 기본 값 : &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="70fb0d0f25f72b0b0a2b42cff55741d41ae27d86" translate="yes" xml:space="preserve">
          <source>Enable active rehashing. Default value: &lt;code&gt;'no'&lt;/code&gt;.</source>
          <target state="translated">활성 재해 싱을 활성화합니다. 기본값은 &lt;code&gt;'no'&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="2eeb869ee3e54fbbfb7312deba597fb4ad7ce178" translate="yes" xml:space="preserve">
          <source>Enable additional features of the Chef server! The packages may be downloaded directly as part of the installation process or they may be first downloaded to a local directory, and then installed.</source>
          <target state="translated">Chef 서버의 추가 기능을 활성화하십시오! 패키지는 설치 프로세스의 일부로 직접 다운로드되거나 로컬 디렉토리로 다운로드 된 후 설치 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="213b89a8136a322c548064f6a9050b89678014d7" translate="yes" xml:space="preserve">
          <source>Enable audit-mode. Set to &lt;code&gt;audit-only&lt;/code&gt; to skip the converge phase of the chef-client run and only perform audits. Possible values: &lt;code&gt;audit-only&lt;/code&gt;, &lt;code&gt;disabled&lt;/code&gt;, and &lt;code&gt;enabled&lt;/code&gt;. Default value: &lt;code&gt;disabled&lt;/code&gt;.</source>
          <target state="translated">감사 모드를 활성화하십시오. 로 설정 &lt;code&gt;audit-only&lt;/code&gt; 요리사 클라이언트 실행의 수렴 단계를 건너 뛰고에만 감사를 수행 할 수 있습니다. 가능한 값은 &lt;code&gt;audit-only&lt;/code&gt; , &lt;code&gt;disabled&lt;/code&gt; 및 &lt;code&gt;enabled&lt;/code&gt; 입니다. 기본값 : &lt;code&gt;disabled&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7a8f2bd725910acac1f7164b9654cc7388cdddee" translate="yes" xml:space="preserve">
          <source>Enable chef-zero. This setting requires &lt;code&gt;local_mode&lt;/code&gt; to be set to &lt;code&gt;true&lt;/code&gt;. Default value: &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">Chef-zero를 활성화하십시오. 이 설정은 &lt;code&gt;local_mode&lt;/code&gt; 를 &lt;code&gt;true&lt;/code&gt; 로 설정해야 합니다 . 기본 값 : &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c0f9f6748cc97475f6a576f9b37c4f6e386b0a9e" translate="yes" xml:space="preserve">
          <source>Enable chef-zero. This setting requires &lt;code&gt;local_mode&lt;/code&gt; to be set to &lt;code&gt;true&lt;/code&gt;. Default value: &lt;code&gt;false&lt;/code&gt;. For example:</source>
          <target state="translated">Chef-zero를 활성화하십시오. 이 설정은 &lt;code&gt;local_mode&lt;/code&gt; 를 &lt;code&gt;true&lt;/code&gt; 로 설정해야 합니다 . 기본 값 : &lt;code&gt;false&lt;/code&gt; . 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="b88df8735448f52a66e688c194295833a7ac62b8" translate="yes" xml:space="preserve">
          <source>Enable compression for the specified MIME-types. Default value:</source>
          <target state="translated">지정된 MIME 유형에 대해 압축을 활성화하십시오. 기본값:</target>
        </trans-unit>
        <trans-unit id="907cc4bd4d6dc29c4759ec02ef187c013f563aff" translate="yes" xml:space="preserve">
          <source>Enable conditional HTTP requests by using a conditional &lt;code&gt;GET&lt;/code&gt; (with the If-Modified-Since header) or an opaque identifier (ETag). To use If-Modified-Since headers, &lt;code&gt;use_last_modified&lt;/code&gt; must also be set to &lt;code&gt;true&lt;/code&gt;. To use ETag headers, &lt;code&gt;use_etag&lt;/code&gt; must also be set to &lt;code&gt;true&lt;/code&gt;. Default value: &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">조건부 &lt;code&gt;GET&lt;/code&gt; (If-Modified-Since 헤더 포함) 또는 불투명 식별자 (ETag) 를 사용하여 조건부 HTTP 요청을 활성화하십시오 . If-Modified-Since 헤더를 사용하려면 &lt;code&gt;use_last_modified&lt;/code&gt; 도 &lt;code&gt;true&lt;/code&gt; 로 설정해야 합니다 . ETag 헤더를 사용하려면 &lt;code&gt;use_etag&lt;/code&gt; 도 &lt;code&gt;true&lt;/code&gt; 로 설정해야 합니다 . 기본 값 : &lt;code&gt;true&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ab557ca8054167ba2e6a86241e9fb271988899e4" translate="yes" xml:space="preserve">
          <source>Enable gzip compression. Default value: &lt;code&gt;on&lt;/code&gt;.</source>
          <target state="translated">gzip 압축을 활성화하십시오. 기본 값 : &lt;code&gt;on&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d65ea798003e42c0dd5e98c2ed8ac1c8c1ac8e95" translate="yes" xml:space="preserve">
          <source>Enable gzip depending on the version of the HTTP request. Default value: &lt;code&gt;1.0&lt;/code&gt;.</source>
          <target state="translated">HTTP 요청 버전에 따라 gzip을 활성화하십시오. 기본 값 : &lt;code&gt;1.0&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="488027fc32e58b9f5e7badfab4592a3a41c9c543" translate="yes" xml:space="preserve">
          <source>Enable or disable sending events to the Microsoft Windows &amp;ldquo;Application&amp;rdquo; event log. When &lt;code&gt;false&lt;/code&gt;, events are sent to the Microsoft Windows &amp;ldquo;Application&amp;rdquo; event log at the start and end of a chef-client run, and also if a chef-client run fails. Set to &lt;code&gt;true&lt;/code&gt; to disable event logging. Default value: &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">Microsoft Windows&amp;ldquo;응용 프로그램&amp;rdquo;이벤트 로그로 이벤트 보내기를 활성화 또는 비활성화합니다. 때 &lt;code&gt;false&lt;/code&gt; , 이벤트 요리사 클라이언트 실행의 시작과 끝의 Microsoft Windows '애플리케이션'이벤트 로그로 전송되며, 또한 요리사 클라이언트 실행이 실패합니다. 이벤트 로깅을 사용하지 않으 려면 &lt;code&gt;true&lt;/code&gt; 로 설정하십시오. 기본 값 : &lt;code&gt;true&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7aa41b1961361acd75444918293e4b65a2a2d966" translate="yes" xml:space="preserve">
          <source>Enable proxy authentication to the Chef server web user interface.</source>
          <target state="translated">Chef 서버 웹 사용자 인터페이스에 프록시 인증을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="79e7c31b84ab8f84aea4d97ade27ce2291cf4a67" translate="yes" xml:space="preserve">
          <source>Enable proxy authentication to the Chef server web user interface. Default value: &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">Chef 서버 웹 사용자 인터페이스에 프록시 인증을 사용하십시오. 기본 값 : &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="31851e79843841db882f292c131ab24af97c2a0e" translate="yes" xml:space="preserve">
          <source>Enable sticky sessions on the load balancer. Configure all instances of the Chef management console to point to one Redis load balancer instance.</source>
          <target state="translated">로드 밸런서에서 고정 세션을 활성화합니다. Chef 관리 콘솔의 모든 인스턴스가 하나의 Redis로드 밸런서 인스턴스를 가리 키도록 구성하십시오.</target>
        </trans-unit>
        <trans-unit id="3a22d28a80d2ac98db3253132d0fad1e65ad5fb7" translate="yes" xml:space="preserve">
          <source>Enable stream downloading of cookbooks. This setting (when &lt;code&gt;true&lt;/code&gt;) typically results in improved cookbook download performance, especially with the memory usage of the &lt;strong&gt;bookshelf&lt;/strong&gt; service and the behavior of load balancers and proxies in-between the chef-client and the Chef server. Default value: &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">요리 책의 스트림 다운로드를 활성화합니다. 이 설정 ( &lt;code&gt;true&lt;/code&gt; 인 경우 )은 특히 &lt;strong&gt;책장&lt;/strong&gt; 서비스 의 메모리 사용량 과 요리사 클라이언트와 Chef 서버 사이의로드 밸런서 및 프록시의 동작 으로 인해 요리 책 다운로드 성능이 향상 됩니다. 기본 값 : &lt;code&gt;true&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ba3015bd560ee6d0cb5cc55422a27dddbb855daf" translate="yes" xml:space="preserve">
          <source>Enable the Nagle buffering algorithm. Default value: &lt;code&gt;on&lt;/code&gt;.</source>
          <target state="translated">Nagle 버퍼링 알고리즘을 활성화하십시오. 기본 값 : &lt;code&gt;on&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="922599fddb7fcaf9fa6bd396d089a866f8113301" translate="yes" xml:space="preserve">
          <source>Enable the Nagle buffering algorithm. Default value: &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">Nagle 버퍼링 알고리즘을 활성화하십시오. 기본 값 : &lt;code&gt;true&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7d58a2db470705f4c80674f02b31fb8c12ec8804" translate="yes" xml:space="preserve">
          <source>Enable the handler for the current chef-client run on the current node.</source>
          <target state="translated">현재 노드에서 현재 chef-client 실행에 대한 핸들러를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="79facf19821a3d317503fd556c35b4d5b17ac7f8" translate="yes" xml:space="preserve">
          <source>Enables the Nginx &lt;code&gt;stub_status&lt;/code&gt; module. See &lt;code&gt;nginx['stub_status']['allow_list']&lt;/code&gt;, &lt;code&gt;nginx['stub_status']['listen_host']&lt;/code&gt;, &lt;code&gt;nginx['stub_status']['listen_port']&lt;/code&gt;, and &lt;code&gt;nginx['stub_status']['location']&lt;/code&gt;. Default value: &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">Nginx &lt;code&gt;stub_status&lt;/code&gt; 모듈을 활성화합니다 . 참조 &lt;code&gt;nginx['stub_status']['allow_list']&lt;/code&gt; , &lt;code&gt;nginx['stub_status']['listen_host']&lt;/code&gt; , &lt;code&gt;nginx['stub_status']['listen_port']&lt;/code&gt; 및 &lt;code&gt;nginx['stub_status']['location']&lt;/code&gt; . 기본 값 : &lt;code&gt;true&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="acb49763b3c457646699e30a92eff550f94184c1" translate="yes" xml:space="preserve">
          <source>Encrypting a data bag item requires a secret key. A secret key can be created in any number of ways. For example, OpenSSL can be used to generate a random number, which can then be used as the secret key:</source>
          <target state="translated">데이터 백 항목을 암호화하려면 비밀 키가 필요합니다. 비밀 키는 여러 가지 방법으로 만들 수 있습니다. 예를 들어 OpenSSL을 사용하여 난수를 생성 한 후 비밀 키로 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f94f7c443fe62245e3810de746698500ccc947f7" translate="yes" xml:space="preserve">
          <source>End chef-client Run</source>
          <target state="translated">최종 요리사 클라이언트 실행</target>
        </trans-unit>
        <trans-unit id="b71c52711a24936e87649f5f6c786f704fc55482" translate="yes" xml:space="preserve">
          <source>Endpoints</source>
          <target state="translated">Endpoints</target>
        </trans-unit>
        <trans-unit id="2bee253af6b48a082a4c3f942f10322b401bfa56" translate="yes" xml:space="preserve">
          <source>Ensure that all cookbooks to which the installed cookbook has a dependency are not installed.</source>
          <target state="translated">설치된 요리 책에 종속 된 모든 요리 책이 설치되어 있지 않은지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="420d53858361f37359abe6b9cd86041fbe88ec12" translate="yes" xml:space="preserve">
          <source>Ensure that sensitive resource data is not logged by the chef-client. Default value: &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">chef-client가 민감한 자원 데이터를 기록하지 않도록하십시오. 기본 값 : &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7126c3d548e52edf65a599a19b526327c0ad9c55" translate="yes" xml:space="preserve">
          <source>Ensure that sensitive resource data is not logged by the chef-client. Default value: &lt;code&gt;false&lt;/code&gt;. This property only applies to the &lt;strong&gt;execute&lt;/strong&gt;, &lt;strong&gt;file&lt;/strong&gt; and &lt;strong&gt;template&lt;/strong&gt; resources.</source>
          <target state="translated">chef-client가 민감한 자원 데이터를 기록하지 않도록하십시오. 기본 값 : &lt;code&gt;false&lt;/code&gt; . 이 특성은 &lt;strong&gt;execute&lt;/strong&gt; , &lt;strong&gt;파일&lt;/strong&gt; 및 &lt;strong&gt;템플리트&lt;/strong&gt; 자원 에만 적용됩니다 .</target>
        </trans-unit>
        <trans-unit id="412307c6aba2daa584d55cd4e40bf85b557c4ef9" translate="yes" xml:space="preserve">
          <source>Ensure that the MSI is on the target node.</source>
          <target state="translated">MSI가 대상 노드에 있는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="8fd4bfdc330225399f933f96e16ac242394dc230" translate="yes" xml:space="preserve">
          <source>Ensure that the current branch is used.</source>
          <target state="translated">현재 분기가 사용되는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="798a2a008a50a9e2c6b2e23f15dbc822acd4dd59" translate="yes" xml:space="preserve">
          <source>Ensure that the workstation meets all of the software prerequisites and that it has access to a Chef server and to a machine that can host a node.</source>
          <target state="translated">워크 스테이션이 모든 소프트웨어 전제 조건을 충족하는지 확인하고 Chef 서버 및 노드를 호스트 할 수있는 기계에 액세스 할 수 있는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="9af7b56b932444f98d13166594bb5992c7dc9c9d" translate="yes" xml:space="preserve">
          <source>Ensure that when a cookbook has a dependency on one (or more) cookbooks, those cookbooks are also uploaded.</source>
          <target state="translated">요리 책이 하나 이상의 요리 책에 종속 된 경우 해당 요리 책도 업로드됩니다.</target>
        </trans-unit>
        <trans-unit id="ffcce0064f7269ce75a21a71dd9d7e568a2fddec" translate="yes" xml:space="preserve">
          <source>Enterprise Linux Updates</source>
          <target state="translated">엔터프라이즈 리눅스 업데이트</target>
        </trans-unit>
        <trans-unit id="a793411de43fe984651ad8c8d1fabe178854454d" translate="yes" xml:space="preserve">
          <source>Entirely remove a cookbook (or cookbook version) from the Chef server. Use this action carefully because only one copy of any single file is stored on the Chef server. Consequently, purging a cookbook disables any other cookbook that references one or more files from the cookbook that has been purged.</source>
          <target state="translated">Chef 서버에서 요리 책 (또는 요리 책 버전)을 완전히 제거하십시오. 단일 파일의 사본 하나만 Chef 서버에 저장되므로이 조치를 신중하게 사용하십시오. 따라서 요리 책을 제거하면 제거 된 요리 책에서 하나 이상의 파일을 참조하는 다른 요리 책이 비활성화됩니다.</target>
        </trans-unit>
        <trans-unit id="ec072bba7befaa68af710fe3549eb0491d7badd1" translate="yes" xml:space="preserve">
          <source>Environment Variables</source>
          <target state="translated">환경 변수</target>
        </trans-unit>
        <trans-unit id="a8538e5f76e16b9ceb069b15b3eb1cff0c6fc231" translate="yes" xml:space="preserve">
          <source>Environment data looks like the following in JSON:</source>
          <target state="translated">JSON에서 환경 데이터는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="017b53c42e43b39e1f5aabf6f7280c2f777243a2" translate="yes" xml:space="preserve">
          <source>Environments</source>
          <target state="translated">Environments</target>
        </trans-unit>
        <trans-unit id="b799aa74326f40d1433eaaf15414b376d0fd4e91" translate="yes" xml:space="preserve">
          <source>Environments can be managed from the Chef management console web user interface.</source>
          <target state="translated">Chef 관리 콘솔 웹 사용자 인터페이스에서 환경을 관리 할 수 ​​있습니다.</target>
        </trans-unit>
        <trans-unit id="164c4bebb13bf9992ee39350d9e4270985b4a89a" translate="yes" xml:space="preserve">
          <source>Environments define process, such as &amp;ldquo;dev&amp;rdquo;, &amp;ldquo;staging&amp;rdquo;, or &amp;ldquo;production&amp;rdquo;</source>
          <target state="translated">환경은 &quot;dev&quot;, &quot;staging&quot;또는 &quot;production&quot;과 같은 프로세스를 정의합니다.</target>
        </trans-unit>
        <trans-unit id="08461c2647a1eaab56b037dbbab138ec6511848d" translate="yes" xml:space="preserve">
          <source>Environments stored as JSON data</source>
          <target state="translated">JSON 데이터로 저장된 환경</target>
        </trans-unit>
        <trans-unit id="1a3ac26c9e7847c694933e379cd537549cc5211a" translate="yes" xml:space="preserve">
          <source>Erchef is a complete rewrite of the core API for the Chef server, which allows it to be faster and more scalable than previous versions. The API itself is still compatible with the original Ruby-based Chef server, which means that cookbooks and recipes that were authored for the Ruby-based Chef server will continue to work on the Erlang-based Chef server. The chef-client is still written in Ruby.</source>
          <target state="translated">Erchef는 Chef 서버의 핵심 API를 완전히 다시 작성하여 이전 버전보다 더 빠르고 확장 성이 뛰어납니다. API 자체는 여전히 원래 Ruby 기반 Chef 서버와 호환되므로 Ruby 기반 Chef 서버용으로 작성된 요리 책 및 레시피는 계속 Erlang 기반 Chef 서버에서 작동합니다. 요리사 클라이언트는 여전히 루비로 작성되었습니다.</target>
        </trans-unit>
        <trans-unit id="73005778a4f4d967ddcff2ebbccae0f463990331" translate="yes" xml:space="preserve">
          <source>Erlang</source>
          <target state="translated">Erlang</target>
        </trans-unit>
        <trans-unit id="7f2f6a15cf8da2b27e5a4af47b58e7ad71c0b3d9" translate="yes" xml:space="preserve">
          <source>Error</source>
          <target state="translated">Error</target>
        </trans-unit>
        <trans-unit id="fa647c1ab7e45907989ea68b5acf3879755d28ca" translate="yes" xml:space="preserve">
          <source>Error Messages</source>
          <target state="translated">오류 메시지</target>
        </trans-unit>
        <trans-unit id="b9e89b54ec73689553af30dd03b5f687e16616fb" translate="yes" xml:space="preserve">
          <source>Escape Character</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a351c0274d8773e1d2e2709590a86092f985bc66" translate="yes" xml:space="preserve">
          <source>Establish Failover</source>
          <target state="translated">장애 조치 설정</target>
        </trans-unit>
        <trans-unit id="9a7ba22fc6a5ab1008342e1e84d5ba69100cfb3f" translate="yes" xml:space="preserve">
          <source>Evaluates a string command using the &lt;strong&gt;bash&lt;/strong&gt; resource.</source>
          <target state="translated">&lt;strong&gt;bash&lt;/strong&gt; 자원을 사용하여 문자열 명령을 평가 합니다.</target>
        </trans-unit>
        <trans-unit id="3e78af0f120e35d48b4fd6032b1e14b406130a45" translate="yes" xml:space="preserve">
          <source>Evaluates a string command using the &lt;strong&gt;batch&lt;/strong&gt; resource. Default value (within a &lt;strong&gt;batch&lt;/strong&gt; resource block): &lt;code&gt;:batch&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;배치&lt;/strong&gt; 자원을 사용하여 문자열 명령을 평가 합니다. &lt;strong&gt;배치&lt;/strong&gt; 자원 블록 내 기본값 : &lt;code&gt;:batch&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="642471a9e469b3ddf645494db4565590dc6355a6" translate="yes" xml:space="preserve">
          <source>Evaluates a string command using the &lt;strong&gt;csh&lt;/strong&gt; resource.</source>
          <target state="translated">&lt;strong&gt;csh&lt;/strong&gt; 자원을 사용하여 문자열 명령을 평가 합니다.</target>
        </trans-unit>
        <trans-unit id="0e2cb7e1192d27d03b67e1692f5a8db5f0437235" translate="yes" xml:space="preserve">
          <source>Evaluates a string command using the &lt;strong&gt;perl&lt;/strong&gt; resource.</source>
          <target state="translated">&lt;strong&gt;perl&lt;/strong&gt; 자원을 사용하여 문자열 명령을 평가 합니다.</target>
        </trans-unit>
        <trans-unit id="8915e16a355b1609bd07569a6b76b162d2ecc1bf" translate="yes" xml:space="preserve">
          <source>Evaluates a string command using the &lt;strong&gt;powershell_script&lt;/strong&gt; resource. Default value (within a &lt;strong&gt;batch&lt;/strong&gt; resource block): &lt;code&gt;:powershell_script&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;powershell_script&lt;/strong&gt; 리소스를 사용하여 문자열 명령을 평가 합니다. (a 내의 디폴트 값 &lt;strong&gt;일괄&lt;/strong&gt; 자원 블록) &lt;code&gt;:powershell_script&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5ed32de8eb3c6de22672ac5c8b9f815c023e24c8" translate="yes" xml:space="preserve">
          <source>Evaluates a string command using the &lt;strong&gt;python&lt;/strong&gt; resource.</source>
          <target state="translated">&lt;strong&gt;python&lt;/strong&gt; 리소스를 사용하여 문자열 명령을 평가 합니다.</target>
        </trans-unit>
        <trans-unit id="a1594d584ee7766933f99ebe56d90b53adaa0172" translate="yes" xml:space="preserve">
          <source>Evaluates a string command using the &lt;strong&gt;ruby&lt;/strong&gt; resource.</source>
          <target state="translated">&lt;strong&gt;루비&lt;/strong&gt; 리소스를 사용하여 문자열 명령을 평가 합니다.</target>
        </trans-unit>
        <trans-unit id="dbabbe71b9c68820970775431d61b85fe30140ac" translate="yes" xml:space="preserve">
          <source>Even though the &lt;code&gt;web.rb&lt;/code&gt; file does not contain attributes and values for &lt;code&gt;minspareservers&lt;/code&gt;, &lt;code&gt;maxspareservers&lt;/code&gt;, &lt;code&gt;serverlimit&lt;/code&gt;, &lt;code&gt;maxclients&lt;/code&gt;, and &lt;code&gt;maxrequestsperchild&lt;/code&gt;, the deep merge capabilities pulled them in.</source>
          <target state="translated">짝수하지만 &lt;code&gt;web.rb&lt;/code&gt; 의 파일에 대한 속성과 값을 포함하지 않는 &lt;code&gt;minspareservers&lt;/code&gt; , &lt;code&gt;maxspareservers&lt;/code&gt; , &lt;code&gt;serverlimit&lt;/code&gt; , &lt;code&gt;maxclients&lt;/code&gt; , 그리고 &lt;code&gt;maxrequestsperchild&lt;/code&gt; , 완전 병합 기능에서 그들을 뽑아.</target>
        </trans-unit>
        <trans-unit id="66b0123a762e1eb2036197a32eb747e1c4cfadba" translate="yes" xml:space="preserve">
          <source>Even though the Chef server is authored in Erlang, writing code in Erlang is NOT a requirement for using Chef.</source>
          <target state="translated">Chef 서버가 Erlang으로 작성되었지만 Erlang에서 코드를 작성하는 것이 Chef를 사용하기위한 필수 조건은 아닙니다.</target>
        </trans-unit>
        <trans-unit id="03f5fbe7bd450b0d45cab73ea446cc9a2810616f" translate="yes" xml:space="preserve">
          <source>Even though this is a very simple example, the full capabilities of Ruby can be used to tackle even the most complex and demanding template requirements.</source>
          <target state="translated">이것은 매우 간단한 예이지만 Ruby의 모든 기능을 사용하여 가장 복잡하고 까다로운 템플릿 요구 사항도 해결할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ad8919ace091b14011c6439cfd5e1707b58f5abd" translate="yes" xml:space="preserve">
          <source>Event</source>
          <target state="translated">Event</target>
        </trans-unit>
        <trans-unit id="4c874625e9b4c4789838bc2475c5fa96b872d071" translate="yes" xml:space="preserve">
          <source>Event Handlers</source>
          <target state="translated">이벤트 핸들러</target>
        </trans-unit>
        <trans-unit id="b21caf606a0e2496ef0f5a053cbe76bec439daaf" translate="yes" xml:space="preserve">
          <source>Event Types</source>
          <target state="translated">이벤트 유형</target>
        </trans-unit>
        <trans-unit id="a72744720f37cd9105bd06d4ce7d839702f03e66" translate="yes" xml:space="preserve">
          <source>Event handlers are not specifically part of the Recipe DSL. An event handler is declared using the &lt;code&gt;Chef.event_hander&lt;/code&gt; method, which declares the event handler within recipes in a similar manner to other Recipe DSL methods.</source>
          <target state="translated">이벤트 핸들러는 특히 Recipe DSL의 일부가 아닙니다. 이벤트 핸들러는 &lt;code&gt;Chef.event_hander&lt;/code&gt; 메소드를 사용하여 선언되며,이 메소드는 다른 레시피 DSL 메소드와 유사한 방식으로 레시피 내에서 이벤트 핸들러를 선언합니다.</target>
        </trans-unit>
        <trans-unit id="ca2f5c1a2947c48fa2cbfb13055cb08096c7d31a" translate="yes" xml:space="preserve">
          <source>Event messages can be sent to a team communication tool like HipChat. For example, if a chef-client run fails:</source>
          <target state="translated">이벤트 메시지는 HipChat과 같은 팀 커뮤니케이션 도구로 보낼 수 있습니다. 예를 들어 chef-client 실행에 실패한 경우 :</target>
        </trans-unit>
        <trans-unit id="26ea9e48719d2056b9cad0ec272069d9fdb89637" translate="yes" xml:space="preserve">
          <source>Eventually the hosts will quiesce and report &lt;code&gt;ds:UpToDate/UpToDate&lt;/code&gt;. Depending on how long the secondary was down, how much data was written to the primary in the interim, and the speed of the shared network, this process could be nearly instantaneous, or could take several minutes. The processes used to manage the Chef server should not require manipulation in any way during this recovery.</source>
          <target state="translated">결국 호스트는 정지하고 &lt;code&gt;ds:UpToDate/UpToDate&lt;/code&gt; 를 보고 합니다. 2 차가 중단 된 기간, 1 차에 1 차에 기록 된 데이터 양 및 공유 네트워크의 속도에 따라이 프로세스는 거의 즉각적이거나 몇 분이 걸릴 수 있습니다. Chef 서버를 관리하는 데 사용되는 프로세스는이 복구 중에 어떤 식 으로든 조작 할 필요가 없습니다.</target>
        </trans-unit>
        <trans-unit id="b52581b9cd31b84f34a112459d36867571711658" translate="yes" xml:space="preserve">
          <source>Every cookbook requires a small amount of metadata. A file named metadata.rb is located at the top of every cookbook directory structure. The contents of the metadata.rb file provides hints to the Chef server to help ensure that cookbooks are deployed to each node correctly.</source>
          <target state="translated">모든 요리 책에는 소량의 메타 데이터가 필요합니다. metadata.rb라는 파일은 모든 요리 책 디렉토리 구조의 맨 위에 있습니다. metadata.rb 파일의 내용은 Chef 서버에 힌트를 제공하여 요리 책이 각 노드에 올바르게 배포되도록합니다.</target>
        </trans-unit>
        <trans-unit id="2e570985a8ba994c20adb059468daa2a3d3a9b68" translate="yes" xml:space="preserve">
          <source>Every request made by the chef-client to the Chef server must be an authenticated request using the Chef server API and a private key. When the chef-client makes a request to the Chef server, the chef-client authenticates each request using a private key located in &lt;code&gt;/etc/chef/client.pem&lt;/code&gt;.</source>
          <target state="translated">chef-client가 Chef 서버로 요청한 모든 요청은 Chef 서버 API 및 개인 키를 사용하여 인증 된 요청이어야합니다. chef-client가 Chef 서버에 요청하면 &lt;code&gt;/etc/chef/client.pem&lt;/code&gt; 에있는 개인 키를 사용하여 chef-client가 각 요청을 인증합니다 .</target>
        </trans-unit>
        <trans-unit id="277bae0eb176ad22376fcdcc824e85d36bdd9cdb" translate="yes" xml:space="preserve">
          <source>Every resource has its own set of actions and properties. Most properties have default values. Some properties are available to all resources, for example those used to send notifications to other resources and guards that help ensure that some resources are idempotent.</source>
          <target state="translated">모든 자원에는 고유 한 조치 및 특성 세트가 있습니다. 대부분의 속성에는 기본값이 있습니다. 일부 자원은 모든 자원에 사용 가능합니다. 예를 들어 일부 자원이 to 등원이되도록하는 알림을 다른 자원 및 경비에게 보내는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="decae9175eb60f3a9da3aa645f2807dabcfd4cc5" translate="yes" xml:space="preserve">
          <source>Everything else needed to author cookbooks and upload them to the Chef server</source>
          <target state="translated">요리 책을 작성하고 Chef 서버에 업로드하는 데 필요한 모든 것</target>
        </trans-unit>
        <trans-unit id="7f4bf5bb8ebc5de3caa132a2c5aa517ace8a442d" translate="yes" xml:space="preserve">
          <source>Exact Matching</source>
          <target state="translated">정확한 매칭</target>
        </trans-unit>
        <trans-unit id="0f01ed56a1e32a05e5ef96e4d779f34784af9a96" translate="yes" xml:space="preserve">
          <source>Example</source>
          <target state="translated">Example</target>
        </trans-unit>
        <trans-unit id="c63737abd7347a7ae582cb9fbdf37d6c0e5b251e" translate="yes" xml:space="preserve">
          <source>Example:</source>
          <target state="translated">Example:</target>
        </trans-unit>
        <trans-unit id="eb01bf04c9a0e8a71c45816513df424f1c7ffedb" translate="yes" xml:space="preserve">
          <source>Examples</source>
          <target state="translated">Examples</target>
        </trans-unit>
        <trans-unit id="0606ae35885be947a0d1cd1591922788327cd118" translate="yes" xml:space="preserve">
          <source>Exception / Report</source>
          <target state="translated">예외 /보고</target>
        </trans-unit>
        <trans-unit id="e6901fa833792385fe502e3efb1b3867f3e2688c" translate="yes" xml:space="preserve">
          <source>Exception and report handlers are made available to the chef-client run in one of the following ways:</source>
          <target state="translated">다음 중 한 가지 방법으로 주방장 고객이 예외 및 보고서 처리기를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1f023ca74733a1128dbdb79dc74b21f759a6a511" translate="yes" xml:space="preserve">
          <source>Exception and report handlers are used to trigger certain behaviors in response to specific situations, typically identified during a chef-client run.</source>
          <target state="translated">예외 및 보고서 처리기는 일반적으로 요리사 클라이언트 실행 중에 식별되는 특정 상황에 대한 응답으로 특정 동작을 트리거하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="cf23fb0d8296184ff155834ec3e7b3ef2623a8fb" translate="yes" xml:space="preserve">
          <source>Exception and report handlers can be distributed using the &lt;strong&gt;chef_handler&lt;/strong&gt; cookbook. This cookbook is authored and maintained by Chef and exposes a custom resource that can be used to enable custom handlers from within recipes and to include product-specific handlers from cookbooks. The &lt;strong&gt;chef_handler&lt;/strong&gt; cookbook can be accessed here: &lt;a href=&quot;https://github.com/chef-cookbooks/chef_handler&quot;&gt;https://github.com/chef-cookbooks/chef_handler&lt;/a&gt;. See the &lt;code&gt;README.md&lt;/code&gt; for additional information.</source>
          <target state="translated">&lt;strong&gt;chef_handler&lt;/strong&gt; 요리 책을 사용하여 예외 및 보고서 처리기를 배포 할 수 있습니다 . 이 요리 책은 Chef가 작성하고 유지하며 조리법 내에서 사용자 정의 핸들러를 사용하고 요리 책에서 제품 별 핸들러를 포함하는 데 사용할 수있는 사용자 정의 자원을 제공합니다. &lt;strong&gt;chef_handler의&lt;/strong&gt; 요리 책은 여기에 액세스 할 수 있습니다 &lt;a href=&quot;https://github.com/chef-cookbooks/chef_handler&quot;&gt;https://github.com/chef-cookbooks/chef_handler&lt;/a&gt; . 추가 정보 는 &lt;code&gt;README.md&lt;/code&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="335736dc1268dc76dcde8a2cab22b7ab94d1c48d" translate="yes" xml:space="preserve">
          <source>Exception/Report Handlers</source>
          <target state="translated">예외 / 보고서 처리기</target>
        </trans-unit>
        <trans-unit id="a2e5a21c273e3546dd39faba7a38be11ff4c06bc" translate="yes" xml:space="preserve">
          <source>Execute Conditions</source>
          <target state="translated">실행 조건</target>
        </trans-unit>
        <trans-unit id="f3d6b612836f9846305ad144b14efd276527f823" translate="yes" xml:space="preserve">
          <source>Execute a bootstrap operation with sudo.</source>
          <target state="translated">sudo를 사용하여 부트 스트랩 작업을 실행하십시오.</target>
        </trans-unit>
        <trans-unit id="8e36463096929cde3006e7f37db95cae13ffe48c" translate="yes" xml:space="preserve">
          <source>Execute a custom installation command sequence for the chef-client. This option may not be used in the same command with &lt;code&gt;--bootstrap-curl-options&lt;/code&gt;, &lt;code&gt;--bootstrap-install-sh&lt;/code&gt;, or &lt;code&gt;--bootstrap-wget-options&lt;/code&gt;.</source>
          <target state="translated">chef-client에 대한 사용자 정의 설치 명령 순서를 실행하십시오. 이 옵션은 &lt;code&gt;--bootstrap-curl-options&lt;/code&gt; , &lt;code&gt;--bootstrap-install-sh&lt;/code&gt; 또는 &lt;code&gt;--bootstrap-wget-options&lt;/code&gt; 와 같은 명령에서 사용할 수 없습니다 .</target>
        </trans-unit>
        <trans-unit id="5fd15a4f95cb4db58f457ce57a98e34497ee0222" translate="yes" xml:space="preserve">
          <source>Execute a resource using a string.</source>
          <target state="translated">문자열을 사용하여 리소스를 실행하십시오.</target>
        </trans-unit>
        <trans-unit id="6dc59c8ea01cfeeaa356c01acd215f0268ac580d" translate="yes" xml:space="preserve">
          <source>Execute a resource using standard input.</source>
          <target state="translated">표준 입력을 사용하여 리소스를 실행하십시오.</target>
        </trans-unit>
        <trans-unit id="ce96e6f6b1c41e41d06a637e42f4188e2c4e1a53" translate="yes" xml:space="preserve">
          <source>Expand the file system on the AIX platform using &lt;code&gt;chfs&lt;/code&gt; or by passing the &lt;code&gt;-X&lt;/code&gt; flag to &lt;code&gt;installp&lt;/code&gt; to automatically expand the logical partition (LPAR)</source>
          <target state="translated">&lt;code&gt;chfs&lt;/code&gt; 를 사용 하거나 &lt;code&gt;installp&lt;/code&gt; 에 &lt;code&gt;-X&lt;/code&gt; 플래그를 전달 하여 논리 파티션 (LPAR)을 자동으로 확장 하여 AIX 플랫폼에서 파일 시스템을 확장하십시오.</target>
        </trans-unit>
        <trans-unit id="6d1704748e0c4f2e48ce24e2a2e0ada0a61ae03e" translate="yes" xml:space="preserve">
          <source>Expanded</source>
          <target state="translated">Expanded</target>
        </trans-unit>
        <trans-unit id="95b4e736438ec0a9f75fba55c3a41c6632b2cf9d" translate="yes" xml:space="preserve">
          <source>Expanded lists of roles (all of the roles that apply to a node, including nested roles) and recipes to the role and recipe attributes on a node are saved on the Chef server. The expanded lists of roles allows for searching within nodes that run a given recipe, even if that recipe is included by a role.</source>
          <target state="translated">확장 된 역할 목록 (중첩 된 역할을 포함하여 노드에 적용되는 모든 역할) 및 노드의 역할 및 레시피 속성에 대한 레시피가 Chef 서버에 저장됩니다. 확장 된 역할 목록을 사용하면 해당 레시피가 역할에 포함되어 있어도 지정된 레시피를 실행하는 노드 내에서 검색 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="344cb272c86fce4f57972deccf93fe99ba19cb9f" translate="yes" xml:space="preserve">
          <source>Export the source, excluding or removing any version control artifacts and force an export of the source that is overwriting the existing copy (if it exists).</source>
          <target state="translated">버전 제어 아티팩트를 제외하거나 제거하여 소스를 내보내고 기존 사본 (있는 경우)을 겹쳐 쓰는 소스를 강제로 내보내십시오.</target>
        </trans-unit>
        <trans-unit id="633c3295d85204b5fb63e31cc9afb15b118cba62" translate="yes" xml:space="preserve">
          <source>Export the source, excluding or removing any version control artifacts.</source>
          <target state="translated">버전 제어 아티팩트를 제외하거나 제거하여 소스를 내보내십시오.</target>
        </trans-unit>
        <trans-unit id="4946dcc4487fac4c86e96119b22c739a0c144e53" translate="yes" xml:space="preserve">
          <source>Extend Chef</source>
          <target state="translated">요리사 연장</target>
        </trans-unit>
        <trans-unit id="76e1f2fdd25b8c2413becdcb1c5364395676def4" translate="yes" xml:space="preserve">
          <source>Extend Chef in any manner that your organization requires</source>
          <target state="translated">조직에서 요구하는 방식으로 Chef 확장</target>
        </trans-unit>
        <trans-unit id="a315c2486ec49f2595825bea6f7d3af50d476288" translate="yes" xml:space="preserve">
          <source>Extend a Recipe</source>
          <target state="translated">레시피 확장</target>
        </trans-unit>
        <trans-unit id="384f9896351875ce8e825d5e7e8176fd44225151" translate="yes" xml:space="preserve">
          <source>Extensions to Chef, such as libraries, definitions, and custom resources</source>
          <target state="translated">라이브러리, 정의 및 사용자 정의 자원과 같은 Chef 확장</target>
        </trans-unit>
        <trans-unit id="8d10c693b773b327ecf17fbda7591feccda0c54d" translate="yes" xml:space="preserve">
          <source>External</source>
          <target state="translated">External</target>
        </trans-unit>
        <trans-unit id="0cac2393dd2aa26deab251fa56b3ce2a2d8afd6c" translate="yes" xml:space="preserve">
          <source>External Cookbooks</source>
          <target state="translated">외부 요리 책</target>
        </trans-unit>
        <trans-unit id="704abb23ed011b5d851ddf4d0b9986c468c7172d" translate="yes" xml:space="preserve">
          <source>External PostgreSQL</source>
          <target state="translated">외부 PostgreSQL</target>
        </trans-unit>
        <trans-unit id="87309e63a55ff3b74850f312d07360aa377a143a" translate="yes" xml:space="preserve">
          <source>FIPS Mode</source>
          <target state="translated">FIPS 모드</target>
        </trans-unit>
        <trans-unit id="3d39bb227bfcef954e1eb9f72b04900451df1393" translate="yes" xml:space="preserve">
          <source>FQDN</source>
          <target state="translated">FQDN</target>
        </trans-unit>
        <trans-unit id="acb28212fba0272ee990cebd571ebe09b463312e" translate="yes" xml:space="preserve">
          <source>FTP</source>
          <target state="translated">FTP</target>
        </trans-unit>
        <trans-unit id="7e436d09bd7c0a632e407fc5943162bb439eecdc" translate="yes" xml:space="preserve">
          <source>Failed job notifications</source>
          <target state="translated">실패한 작업 알림</target>
        </trans-unit>
        <trans-unit id="3919ef0e12c5eaef6f4c418d7f31c6d9109f1806" translate="yes" xml:space="preserve">
          <source>Failover notifications</source>
          <target state="translated">장애 조치 알림</target>
        </trans-unit>
        <trans-unit id="a92c268a0adb3ea1cfaacaef0801b9a5d8284b6b" translate="yes" xml:space="preserve">
          <source>Failure Scenarios</source>
          <target state="translated">실패 시나리오</target>
        </trans-unit>
        <trans-unit id="0f24ee7e50a2bde67f84ac077bece27a44621582" translate="yes" xml:space="preserve">
          <source>Failures happen, so completely preventing a &lt;code&gt;split-brain&lt;/code&gt; event is not an absolute possibility. However, it is possible to alleviate some of the issues that crop up in any &lt;code&gt;split-brain&lt;/code&gt; event scenarios by maxing out the heartbeat network bandwidth and optimizing transfer protocols.</source>
          <target state="translated">고장이 발생하여 &lt;code&gt;split-brain&lt;/code&gt; 이벤트를 완전히 방지하는 것은 절대 가능성이 아닙니다. 그러나 하트 비트 네트워크 대역폭을 최대화하고 전송 프로토콜을 최적화하여 &lt;code&gt;split-brain&lt;/code&gt; 이벤트 시나리오 에서 발생하는 일부 문제를 완화 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="915120b00045631c4e8983c0043b1f79dd8a3042" translate="yes" xml:space="preserve">
          <source>Fatal</source>
          <target state="translated">Fatal</target>
        </trans-unit>
        <trans-unit id="7d5e69ed1ce37445bd195c2e4183b86c281c778b" translate="yes" xml:space="preserve">
          <source>Fatal Messages</source>
          <target state="translated">치명적인 메시지</target>
        </trans-unit>
        <trans-unit id="ad565d9d01d0e0bf91fd6a8532f6d81613338901" translate="yes" xml:space="preserve">
          <source>Feature</source>
          <target state="translated">Feature</target>
        </trans-unit>
        <trans-unit id="22598aa739dd018e162d5d5078804b5b5dd28a52" translate="yes" xml:space="preserve">
          <source>Federal Information Processing Standards (FIPS) is a United States government computer security standard that specifies security requirements for cryptography. The current version of the standard is FIPS 140-2. The chef-client can be configured to allow OpenSSL to enforce FIPS-validated security during a chef-client run. This will disable cryptography that is explicitly disallowed in FIPS-validated software, including certain ciphers and hashing algorithms. Any attempt to use any disallowed cryptography will cause the chef-client to throw an exception during a chef-client run.</source>
          <target state="translated">FIPS (Federal Information Processing Standards)는 암호화에 대한 보안 요구 사항을 지정하는 미국 정부 컴퓨터 보안 표준입니다. 현재 표준 버전은 FIPS 140-2입니다. 요리사 클라이언트는 요리사 클라이언트 실행 중에 OpenSSL이 FIPS 검증 보안을 시행하도록 구성 할 수 있습니다. 이렇게하면 특정 암호 및 해시 알고리즘을 포함하여 FIPS 검증 소프트웨어에서 명시 적으로 허용되지 않는 암호화가 비활성화됩니다. 허용되지 않는 암호화를 사용하려고하면 요리사 클라이언트가 요리사 클라이언트 실행 중에 예외를 throw하게됩니다.</target>
        </trans-unit>
        <trans-unit id="bc5fc74a0c921be17dde1b381a9a43609da45dab" translate="yes" xml:space="preserve">
          <source>Fedora</source>
          <target state="translated">Fedora</target>
        </trans-unit>
        <trans-unit id="55c6a20f8aa8856020e0b878637be4796e8d083b" translate="yes" xml:space="preserve">
          <source>Fetch and execute an installation script at the specified URL. This option may not be used in the same command with &lt;code&gt;--bootstrap-install-command&lt;/code&gt;.</source>
          <target state="translated">지정된 URL에서 설치 스크립트를 가져 와서 실행하십시오. 이 옵션은 &lt;code&gt;--bootstrap-install-command&lt;/code&gt; 와 동일한 명령에서 사용할 수 없습니다 .</target>
        </trans-unit>
        <trans-unit id="f899e05c45032b1842faa2e2fed67db08d9b3b62" translate="yes" xml:space="preserve">
          <source>Fetching files from the &lt;code&gt;files/&lt;/code&gt; directory in a cookbook should be done with the &lt;strong&gt;cookbook_file&lt;/strong&gt; resource.</source>
          <target state="translated">cookbook 의 &lt;code&gt;files/&lt;/code&gt; 디렉토리에서 파일을 가져 오는 것은 &lt;strong&gt;cookbook_file&lt;/strong&gt; 리소스를 사용하여 수행해야 합니다.</target>
        </trans-unit>
        <trans-unit id="c326a4660b674d2f6ea82687a1e1abae2337541f" translate="yes" xml:space="preserve">
          <source>Field</source>
          <target state="translated">Field</target>
        </trans-unit>
        <trans-unit id="1720e348eebcfeaa839e6c8c392559ef23d59d01" translate="yes" xml:space="preserve">
          <source>Field descriptions:</source>
          <target state="translated">필드 설명 :</target>
        </trans-unit>
        <trans-unit id="11f6a90d8916e67b9f6ca2a9235a587524b53b7c" translate="yes" xml:space="preserve">
          <source>File Methods</source>
          <target state="translated">파일 방법</target>
        </trans-unit>
        <trans-unit id="d6aca0bdb0783a2aacb385ae6d53d8e5f9c02530" translate="yes" xml:space="preserve">
          <source>File Modes</source>
          <target state="translated">파일 모드</target>
        </trans-unit>
        <trans-unit id="872a524107e9f84396a3510fa9eb3c19f41f033c" translate="yes" xml:space="preserve">
          <source>File Specificity</source>
          <target state="translated">파일 특이성</target>
        </trans-unit>
        <trans-unit id="5023c8994cbd6d607dd19f9f86a12610ec0c2baa" translate="yes" xml:space="preserve">
          <source>File Type</source>
          <target state="translated">파일 타입</target>
        </trans-unit>
        <trans-unit id="da18a368c7c3e3afa61b61bcc6967650e8a9e119" translate="yes" xml:space="preserve">
          <source>File distributions</source>
          <target state="translated">파일 배포</target>
        </trans-unit>
        <trans-unit id="6ce6c512ea433a7fc5c8841628e7696cd0ff7f2b" translate="yes" xml:space="preserve">
          <source>Files</source>
          <target state="translated">Files</target>
        </trans-unit>
        <trans-unit id="c4d35d906c280f71e4b11ed41600a702123f32ab" translate="yes" xml:space="preserve">
          <source>Files are managed using the following resources:</source>
          <target state="translated">파일은 다음 리소스를 사용하여 관리됩니다.</target>
        </trans-unit>
        <trans-unit id="1f180f9edb7c8aa059c0a5f3fbe1abdf8b7eeed6" translate="yes" xml:space="preserve">
          <source>Filter Search Results</source>
          <target state="translated">검색 결과 필터링</target>
        </trans-unit>
        <trans-unit id="7201f532fc473b8a39d24888df0d6b0d4c3f2e1d" translate="yes" xml:space="preserve">
          <source>Filtering on &lt;code&gt;/users&lt;/code&gt; can be done with the &lt;code&gt;external_authentication_uid&lt;/code&gt;. This is to support SAML authentication.</source>
          <target state="translated">&lt;code&gt;/users&lt;/code&gt; 에 대한 필터링 은 &lt;code&gt;external_authentication_uid&lt;/code&gt; 로 수행 할 수 있습니다 . SAML 인증을 지원하기위한 것입니다.</target>
        </trans-unit>
        <trans-unit id="d3a547c783b6e6831fc5a204470be88789171b6b" translate="yes" xml:space="preserve">
          <source>Final Cookbook Directory</source>
          <target state="translated">최종 요리 책 디렉토리</target>
        </trans-unit>
        <trans-unit id="9ddd1d8b9417508e278b2758a4eca81323672cd6" translate="yes" xml:space="preserve">
          <source>Final Resource</source>
          <target state="translated">최종 자원</target>
        </trans-unit>
        <trans-unit id="8fd04253c55843aac043f7610d3fc5fae380b9a4" translate="yes" xml:space="preserve">
          <source>Finally, run the chef-client on the node using a &lt;code&gt;knife bootstrap&lt;/code&gt; command that specifies a run-list (the &lt;code&gt;-r&lt;/code&gt; option). The bootstrap template can be called using a command similar to the following:</source>
          <target state="translated">마지막으로, run -list ( &lt;code&gt;-r&lt;/code&gt; 옵션) 를 지정하는 &lt;code&gt;knife bootstrap&lt;/code&gt; 명령을 사용하여 chef-client를 노드 에서 실행하십시오 . 부트 스트랩 템플릿은 다음과 유사한 명령을 사용하여 호출 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4549423b898f9b023c977b3d96bcad529aa900c0" translate="yes" xml:space="preserve">
          <source>Find a resource in the resource collection, and then edit it.</source>
          <target state="translated">자원 콜렉션에서 자원을 찾은 후 편집하십시오.</target>
        </trans-unit>
        <trans-unit id="b7584a13a850bc01d4864fd792f5b60885beaa4a" translate="yes" xml:space="preserve">
          <source>Find a resource in the resource collection.</source>
          <target state="translated">자원 콜렉션에서 자원을 찾으십시오.</target>
        </trans-unit>
        <trans-unit id="b754870e30512eb92d3fc92e68057021751f3a24" translate="yes" xml:space="preserve">
          <source>Finished audits are reported back to the Chef server. From there, audits are sent to the Chef Analytics platform for further analysis, such as rules processing and visibility from the actions web user interface.</source>
          <target state="translated">완료된 감사는 Chef 서버에 다시보고됩니다. 여기에서 규칙 처리 및 조치 웹 사용자 인터페이스의 가시성과 같은 추가 분석을 위해 감사가 Chef Analytics 플랫폼으로 전송됩니다.</target>
        </trans-unit>
        <trans-unit id="bb5237101a783aac42d0235357dcf17396f35879" translate="yes" xml:space="preserve">
          <source>Firewalls</source>
          <target state="translated">Firewalls</target>
        </trans-unit>
        <trans-unit id="42b5105a64b4de4bcca1dfefa7aa7e6eeb02f075" translate="yes" xml:space="preserve">
          <source>Firewalls and Ports</source>
          <target state="translated">방화벽 및 포트</target>
        </trans-unit>
        <trans-unit id="950eba097f1e367d3403b7053442ba2ecc793ca8" translate="yes" xml:space="preserve">
          <source>First install the chef-client, and then enable it to run as a service. For example:</source>
          <target state="translated">먼저 chef-client를 설치 한 다음 서비스로 실행되도록 설정하십시오. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="e6bd29cc4706fac8924e725c1731406754ae45d3" translate="yes" xml:space="preserve">
          <source>First, each resource in the node object is identified and a resource collection is built. All recipes are loaded in a specific order, and then the actions specified within each of them are identified. This is also referred to as the &amp;ldquo;compile phase&amp;rdquo;.</source>
          <target state="translated">먼저, 노드 오브젝트의 각 자원이 식별되고 자원 콜렉션이 빌드됩니다. 모든 레시피는 특정 순서로로드 된 후 각 레시피에 지정된 동작이 식별됩니다. 이것을 &quot;컴파일 단계&quot;라고도합니다.</target>
        </trans-unit>
        <trans-unit id="b46c7bbb4a50c5fae38f43e1694b208baa56311c" translate="yes" xml:space="preserve">
          <source>Flowdock</source>
          <target state="translated">Flowdock</target>
        </trans-unit>
        <trans-unit id="f2ad1a93f9261c9a9b7caf42a9a361e1bb570654" translate="yes" xml:space="preserve">
          <source>Flush the in-memory cache before or after a Yum operation that installs, upgrades, or removes a package. Default value: &lt;code&gt;[ :before, :after ]&lt;/code&gt;. The value may also be a Hash: &lt;code&gt;( { :before =&amp;gt; true/false, :after =&amp;gt; true/false } )&lt;/code&gt;.</source>
          <target state="translated">패키지를 설치, 업그레이드 또는 제거하는 Yum 작업 전후에 메모리 내 캐시를 비 웁니다. 기본 값 : &lt;code&gt;[ :before, :after ]&lt;/code&gt; . 값은 해시 일 수도 있습니다 &lt;code&gt;( { :before =&amp;gt; true/false, :after =&amp;gt; true/false } )&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bc0b6ff6be5f8cdefddc1d48f1afaca4195d83a8" translate="yes" xml:space="preserve">
          <source>Follow the directions, install git (&lt;a href=&quot;http://git-scm.com/downloads&quot;&gt;http://git-scm.com/downloads&lt;/a&gt;), and then complete the remaining configuration steps on that page.</source>
          <target state="translated">지시에 따라 git ( &lt;a href=&quot;http://git-scm.com/downloads&quot;&gt;http://git-scm.com/downloads&lt;/a&gt; )을 설치 한 다음 해당 페이지의 나머지 구성 단계를 완료하십시오.</target>
        </trans-unit>
        <trans-unit id="d1ac2d550f691e2a214647d5c41cc018dd792050" translate="yes" xml:space="preserve">
          <source>Follow the steps in the installer and install the Chef development kit to your machine. The Chef development kit is installed to &lt;code&gt;/opt/chefdk/&lt;/code&gt; on UNIX and Linux systems.</source>
          <target state="translated">설치 프로그램의 단계에 따라 Chef 개발 키트를 머신에 설치하십시오. Chef 개발 키트는 UNIX 및 Linux 시스템에서 &lt;code&gt;/opt/chefdk/&lt;/code&gt; 에 설치됩니다 .</target>
        </trans-unit>
        <trans-unit id="f6f31038e874ad21b16119e02a44c906b27c4ff3" translate="yes" xml:space="preserve">
          <source>Follow this order for information in each resource declaration:</source>
          <target state="translated">각 자원 선언에 대한 정보를 보려면 다음 순서를 따르십시오.</target>
        </trans-unit>
        <trans-unit id="8d3e0ee6aba5e7256932129184b08bde8fa72dba" translate="yes" xml:space="preserve">
          <source>Follows easy, repeatable syntax patterns</source>
          <target state="translated">쉽고 반복 가능한 구문 패턴을 따릅니다.</target>
        </trans-unit>
        <trans-unit id="d6ab5de9cfb6efba6abef3d749db99231a3c5a70" translate="yes" xml:space="preserve">
          <source>Foodcritic Linting</source>
          <target state="translated">식량 안감</target>
        </trans-unit>
        <trans-unit id="1a43990a908212a03784a18780ef09f7fcf581b2" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;PUT&lt;/code&gt; and &lt;code&gt;POST&lt;/code&gt; requests, the &lt;code&gt;Content-Type&lt;/code&gt; header must be set to &lt;code&gt;application/json&lt;/code&gt;</source>
          <target state="translated">들어 &lt;code&gt;PUT&lt;/code&gt; 및 &lt;code&gt;POST&lt;/code&gt; 요청의 &lt;code&gt;Content-Type&lt;/code&gt; 헤더로 설정해야합니다 &lt;code&gt;application/json&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="cd64fdb5da5e445137cd250b742e3bdc3c982ecc" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;not_if&lt;/code&gt; and &lt;code&gt;only_if&lt;/code&gt; attribute, why-run mode will assume these are commands or blocks that are safe to run. These conditions are not designed to be used to change the state of the system, but rather to help facilitate idempotency for the resource itself. That said, it may be possible that these attributes are being used in a way that modifies the system state</source>
          <target state="translated">들어 &lt;code&gt;not_if&lt;/code&gt; 및 &lt;code&gt;only_if&lt;/code&gt; 속성, 왜-실행 모드로 부담이 명령 또는 실행하는 데 안전 블록입니다. 이러한 조건은 시스템 상태를 변경하는 데 사용되지 않고 자원 자체의 i 등원을 용이하게하는 데 도움이됩니다. 즉, 이러한 속성이 시스템 상태를 수정하는 방식으로 사용 중일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="fac84ac260ad2585d9136ff2230338b12dbefb81" translate="yes" xml:space="preserve">
          <source>For Chef server 12, the following high availability configurations are supported:</source>
          <target state="translated">Chef 서버 12의 경우 다음 고 가용성 구성이 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="c73ae0696fdbcda348a0d4ccdf9bb00003b512c7" translate="yes" xml:space="preserve">
          <source>For FTP:</source>
          <target state="translated">FTP의 경우 :</target>
        </trans-unit>
        <trans-unit id="320fc4a4696b98ad7a9a4c9c61434eaff86bbbb8" translate="yes" xml:space="preserve">
          <source>For HTTP:</source>
          <target state="translated">HTTP의 경우 :</target>
        </trans-unit>
        <trans-unit id="e346b80fad050142c8fa9531b8e29a80584b55e0" translate="yes" xml:space="preserve">
          <source>For HTTPS:</source>
          <target state="translated">HTTPS의 경우 :</target>
        </trans-unit>
        <trans-unit id="ec5de23e615564925e1ad070134313402f8241ac" translate="yes" xml:space="preserve">
          <source>For RPM Package Manager:</source>
          <target state="translated">RPM 패키지 관리자 :</target>
        </trans-unit>
        <trans-unit id="f0f9febe094594e575e597b02ac1c197e58150c8" translate="yes" xml:space="preserve">
          <source>For Ruby scripts that will be run using the &lt;code&gt;exec&lt;/code&gt; subcommand, note the following:</source>
          <target state="translated">&lt;code&gt;exec&lt;/code&gt; 부속 명령을 사용하여 실행할 Ruby 스크립트의 경우 다음을 참고하십시오.</target>
        </trans-unit>
        <trans-unit id="0f3bc347b86d5543b2fa65463a92635aeb18423b" translate="yes" xml:space="preserve">
          <source>For TCP/IP, version 6:</source>
          <target state="translated">TCP / IP, 버전 6의 경우 :</target>
        </trans-unit>
        <trans-unit id="705d7781a3eb622944251c6659be56a790808abc" translate="yes" xml:space="preserve">
          <source>For TCP/IP:</source>
          <target state="translated">TCP / IP의 경우 :</target>
        </trans-unit>
        <trans-unit id="2e94932b80899718cd10783da4f61974dd153787" translate="yes" xml:space="preserve">
          <source>For UDP, version 6:</source>
          <target state="translated">UDP의 경우 버전 6 :</target>
        </trans-unit>
        <trans-unit id="8b5e9820c428b2397e7c55e4c30af470a0b6861f" translate="yes" xml:space="preserve">
          <source>For Ubuntu, for the Chef management console 1.x to 2.x:</source>
          <target state="translated">Ubuntu의 경우 Chef 관리 콘솔 1.x에서 2.x로 :</target>
        </trans-unit>
        <trans-unit id="89590928133d1f0eb9569a9f9bcd16317a09434d" translate="yes" xml:space="preserve">
          <source>For Ubuntu:</source>
          <target state="translated">우분투의 경우 :</target>
        </trans-unit>
        <trans-unit id="57ae793e8dee2c67279c5fc6dfa2fd4d53177128" translate="yes" xml:space="preserve">
          <source>For a brand new clone of the Chef repository (that was created using the steps listed earlier), fetch the &lt;code&gt;opscode&lt;/code&gt; remote:</source>
          <target state="translated">Chef 리포지토리의 새로운 클론 (이전에 나열된 단계를 사용하여 생성)의 경우 &lt;code&gt;opscode&lt;/code&gt; 를 원격으로 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="429c065e746475d1ee00d821a85556b24e06eb2a" translate="yes" xml:space="preserve">
          <source>For a detailed explanation of the dry-run concept and how it relates to the why-run mode, see &lt;a href=&quot;http://blog.afistfulofservers.net/post/2012/12/21/promises-lies-and-dryrun-mode/&quot;&gt;this blog post&lt;/a&gt;.</source>
          <target state="translated">드라 이런 개념에 대한 자세한 설명과 이것이 왜 실행 모드와 관련이 있는지에 대한 자세한 내용은 &lt;a href=&quot;http://blog.afistfulofservers.net/post/2012/12/21/promises-lies-and-dryrun-mode/&quot;&gt;이 블로그 게시물을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="842e25b806c4818082fe68b145d4b128c0c7a96e" translate="yes" xml:space="preserve">
          <source>For a file that is executable by a group:</source>
          <target state="translated">그룹이 실행할 수있는 파일의 경우 :</target>
        </trans-unit>
        <trans-unit id="8e52e105aaa28a8320d2b0334f9842ac5a8bf7f1" translate="yes" xml:space="preserve">
          <source>For a file that is executable by a specific user:</source>
          <target state="translated">특정 사용자가 실행할 수있는 파일의 경우 :</target>
        </trans-unit>
        <trans-unit id="58dc394312430b45eb6a4cce8639a60d52c46109" translate="yes" xml:space="preserve">
          <source>For a file that is executable by its owner:</source>
          <target state="translated">소유자가 실행할 수있는 파일의 경우 :</target>
        </trans-unit>
        <trans-unit id="6fb12d947f7911f46ebf9ef3588415fde5c74e9c" translate="yes" xml:space="preserve">
          <source>For a file that is readable by a group:</source>
          <target state="translated">그룹이 읽을 수있는 파일의 경우 :</target>
        </trans-unit>
        <trans-unit id="bc58a945dd4cd8e98c16f56e55beaed1c1e00245" translate="yes" xml:space="preserve">
          <source>For a file that is readable by a specific user:</source>
          <target state="translated">특정 사용자가 읽을 수있는 파일의 경우 :</target>
        </trans-unit>
        <trans-unit id="8743c60c1c7f5593416bd4211e053667ea46aff9" translate="yes" xml:space="preserve">
          <source>For a file that is readable by its owner:</source>
          <target state="translated">소유자가 읽을 수있는 파일의 경우 :</target>
        </trans-unit>
        <trans-unit id="11f57c147a4d8be7da3d7ead16612297af131447" translate="yes" xml:space="preserve">
          <source>For a file that is writable by a group:</source>
          <target state="translated">그룹이 쓸 수있는 파일의 경우 :</target>
        </trans-unit>
        <trans-unit id="ac5c1baaa92e08809aadd8c18269405df8432f1b" translate="yes" xml:space="preserve">
          <source>For a file that is writable by a specific user:</source>
          <target state="translated">특정 사용자가 쓸 수있는 파일의 경우 :</target>
        </trans-unit>
        <trans-unit id="07b6db4e2c5dd216a8b2e887a040bb709cacce51" translate="yes" xml:space="preserve">
          <source>For a file that is writable by its owner:</source>
          <target state="translated">소유자가 쓸 수있는 파일의 경우 :</target>
        </trans-unit>
        <trans-unit id="5fd3181a579726a080d4169ddcfe1e1c30b28424" translate="yes" xml:space="preserve">
          <source>For a machine on which SELinux is enabled, the chef-client will create files that correctly match the default policy settings only when the cookbook that defines the action also conforms to the same policy.</source>
          <target state="translated">SELinux가 사용 가능한 머신의 경우, 요리사 클라이언트는 조치를 정의하는 요리 책이 동일한 정책을 준수하는 경우에만 기본 정책 설정과 올바르게 일치하는 파일을 작성합니다.</target>
        </trans-unit>
        <trans-unit id="8f43693833b394c97cf91a08d20f5c56d71fe0ed" translate="yes" xml:space="preserve">
          <source>For a more complete version of the previous example, see the default recipe in the &lt;a href=&quot;https://github.com/hw-cookbooks/apt-mirror&quot;&gt;https://github.com/hw-cookbooks/apt-mirror&lt;/a&gt; community cookbook.</source>
          <target state="translated">이전 예제의보다 완전한 버전은 &lt;a href=&quot;https://github.com/hw-cookbooks/apt-mirror&quot;&gt;https://github.com/hw-cookbooks/apt-mirror&lt;/a&gt; 커뮤니티 요리 책 에서 기본 레시피를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="c71e08e64ab23be36b69f12600592cded08e2d76" translate="yes" xml:space="preserve">
          <source>For a named port that is not listening:</source>
          <target state="translated">수신하지 않는 명명 된 포트의 경우 :</target>
        </trans-unit>
        <trans-unit id="d9680ef402ad5e887e72e0f5073c135f1853d51b" translate="yes" xml:space="preserve">
          <source>For a package that has different package names, depending on the platform, use a &lt;code&gt;case&lt;/code&gt; statement within the &lt;strong&gt;package&lt;/strong&gt;:</source>
          <target state="translated">플랫폼에 따라 패키지 이름이 다른 패키지의 &lt;code&gt;case&lt;/code&gt; &lt;strong&gt;패키지&lt;/strong&gt; 내에서 case 문을 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="53c16d7a1bde7c59141e64e32f7a6c512025a741" translate="yes" xml:space="preserve">
          <source>For a service that is enabled at a given run level:</source>
          <target state="translated">주어진 실행 수준에서 활성화 된 서비스의 경우 :</target>
        </trans-unit>
        <trans-unit id="736bd8ddc46c3654bec5f5e050ba520863f035dd" translate="yes" xml:space="preserve">
          <source>For a service that is running under supervisor:</source>
          <target state="translated">감독자 하에서 실행되는 서비스의 경우 :</target>
        </trans-unit>
        <trans-unit id="badb053e8366ca26723425ce62bd3ce1d3b9425c" translate="yes" xml:space="preserve">
          <source>For a single user to interact with the Chef server using knife from the same chef-repo, that user may need to edit their knife.rb file prior to that interaction</source>
          <target state="translated">단일 사용자가 동일한 chef-repo의 knife를 사용하여 Chef 서버와 상호 작용하려면 해당 사용자가 해당 상호 작용 전에 knife.rb 파일을 편집해야합니다.</target>
        </trans-unit>
        <trans-unit id="889320de053a126026b2ac52342457e02ab13be0" translate="yes" xml:space="preserve">
          <source>For a specific package version:</source>
          <target state="translated">특정 패키지 버전의 경우 :</target>
        </trans-unit>
        <trans-unit id="47efba89d69b07284e21f538b1d47825e508a2af" translate="yes" xml:space="preserve">
          <source>For a specific port type use &lt;code&gt;.with('port_type')&lt;/code&gt;. For example, UDP:</source>
          <target state="translated">특정 포트 유형의 경우 &lt;code&gt;.with('port_type')&lt;/code&gt; 을 사용하십시오 . 예를 들어, UDP :</target>
        </trans-unit>
        <trans-unit id="6ae6b1a1b4344755ea50e84bfbb53ed643e0899a" translate="yes" xml:space="preserve">
          <source>For a standalone installation, ensure that ports marked as external (marked as &lt;code&gt;yes&lt;/code&gt; in the &lt;strong&gt;External&lt;/strong&gt; column) are open and accessible via any firewalls that are in use:</source>
          <target state="translated">독립 실행 형 설치의 경우, (로 표시 외부로 표시하는 포트를 확인 &lt;code&gt;yes&lt;/code&gt; 에서 &lt;strong&gt;외부&lt;/strong&gt; 열) 사용중인 모든 방화벽을 통해 개방형 액세스 할 수 있습니다 :</target>
        </trans-unit>
        <trans-unit id="1c20a4f3ffb3e1797a732e6d503ad43ba4c2761b" translate="yes" xml:space="preserve">
          <source>For a user, the response is similar to:</source>
          <target state="translated">사용자의 경우 응답은 다음과 유사합니다.</target>
        </trans-unit>
        <trans-unit id="6e4d8195c43a68a315852b84d627225ab571e603" translate="yes" xml:space="preserve">
          <source>For a workstation that will interact with the Chef server (including the hosted Chef server), log on and download the following files:</source>
          <target state="translated">Chef 서버 (호스트 Chef 서버 포함)와 상호 작용할 워크 스테이션의 경우 로그온하여 다음 파일을 다운로드하십시오.</target>
        </trans-unit>
        <trans-unit id="de74e4c38dc66e6442c300ab3f16e98c77d45666" translate="yes" xml:space="preserve">
          <source>For adding a string using a multi-level array:</source>
          <target state="translated">다단계 배열을 사용하여 문자열을 추가하는 경우 :</target>
        </trans-unit>
        <trans-unit id="93b890cdd625d32ef46d0dbe7c12b345297118e6" translate="yes" xml:space="preserve">
          <source>For adding a string using a multi-level hash:</source>
          <target state="translated">다단계 해시를 사용하여 문자열을 추가하는 경우 :</target>
        </trans-unit>
        <trans-unit id="82f0b7ea54bb6e4b02ba3e04c52737817069a1c4" translate="yes" xml:space="preserve">
          <source>For adding a string using an array:</source>
          <target state="translated">배열을 사용하여 문자열을 추가하는 경우 :</target>
        </trans-unit>
        <trans-unit id="4ddf973a53c8b5932bd2a84db2c0abf5d6dec36a" translate="yes" xml:space="preserve">
          <source>For attributes that contain slashes (&lt;code&gt;/&lt;/code&gt;) within the attribute value, such as the &lt;code&gt;filesystem&lt;/code&gt; attribute &lt;code&gt;'/dev/diskos2'&lt;/code&gt;, use an array. For example:</source>
          <target state="translated">&lt;code&gt;filesystem&lt;/code&gt; 속성 &lt;code&gt;'/dev/diskos2'&lt;/code&gt; 와 같이 속성 값 내에 슬래시 ( &lt;code&gt;/&lt;/code&gt; ) 가 포함 된 속성 의 경우 배열을 사용하십시오. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="4f98b0c0c08c1ee0d5f7f50b58b4277e7cfd0971" translate="yes" xml:space="preserve">
          <source>For back-end servers in a tiered Chef server installation, ensure that ports marked as external (marked as &lt;code&gt;yes&lt;/code&gt; in the &lt;strong&gt;External&lt;/strong&gt; column) are open and accessible via any firewalls that are in use:</source>
          <target state="translated">계층 요리사 서버 설치에 백 엔드 서버의 경우, (로 표시 외부로 표시하는 포트를 확인 &lt;code&gt;yes&lt;/code&gt; 에서 &lt;strong&gt;외부&lt;/strong&gt; 열) 사용중인 모든 방화벽을 통해 개방형 액세스 할 수 있습니다 :</target>
        </trans-unit>
        <trans-unit id="52d0d0d55a7c3498ea40bee8878abc66b508aa59" translate="yes" xml:space="preserve">
          <source>For back-end servers, ensure that ports marked as external (marked as &lt;code&gt;yes&lt;/code&gt; in the &lt;strong&gt;External&lt;/strong&gt; column) are open and accessible via any firewalls that are in use:</source>
          <target state="translated">백 엔드 서버의 경우, (로 표시 외부로 표시하는 포트를 확인 &lt;code&gt;yes&lt;/code&gt; 에서 &lt;strong&gt;외부&lt;/strong&gt; 열) 사용중인 모든 방화벽을 통해 개방형 액세스 할 수 있습니다 :</target>
        </trans-unit>
        <trans-unit id="27ba4dcdcd07615c1c8f21c78c8774be3c2ef08e" translate="yes" xml:space="preserve">
          <source>For built-in DSC resources, use the following values:</source>
          <target state="translated">내장 DSC 자원의 경우 다음 값을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="1aee91abe1f47e9bec753e70c05e3555cbdb7b42" translate="yes" xml:space="preserve">
          <source>For chef-client version 11.x, under &lt;code&gt;/usr/bin&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;/usr/bin&lt;/code&gt; 아래의 chef-client 버전 11.x의 경우 :</target>
        </trans-unit>
        <trans-unit id="d55cecb89d920b7d56aeba6c4c5a59c08f60fcde" translate="yes" xml:space="preserve">
          <source>For chef-client version 12.x, under &lt;code&gt;/usr/local/bin&lt;/code&gt;:</source>
          <target state="translated">chef-client 버전 12.x의 경우 &lt;code&gt;/usr/local/bin&lt;/code&gt; 아래에 있습니다 .</target>
        </trans-unit>
        <trans-unit id="a7d3a675d3397c95fb6af2ffe45997a02f349ff0" translate="yes" xml:space="preserve">
          <source>For communication between Chef Analytics and the Chef server, ensure that ports marked as external (&lt;code&gt;yes&lt;/code&gt;) are open and accessible via any firewalls that are in use:</source>
          <target state="translated">Chef Analytics와 Chef 서버 간의 통신을 위해 사용중인 방화벽을 통해 외부 ( &lt;code&gt;yes&lt;/code&gt; ) 로 표시된 포트 가 열려 있고 액세스 가능한지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="9ae1dd7fbe85ce5e1fb89da0f999ceb01b4078f0" translate="yes" xml:space="preserve">
          <source>For default attributes:</source>
          <target state="translated">기본 속성의 경우 :</target>
        </trans-unit>
        <trans-unit id="b74ac5d3bbac8a5228061cb5e70c6ee016408c6f" translate="yes" xml:space="preserve">
          <source>For definitions:</source>
          <target state="translated">정의의 경우 :</target>
        </trans-unit>
        <trans-unit id="11eacf73770ad29243e6ace053d6e92a222518f6" translate="yes" xml:space="preserve">
          <source>For directories with a single attribute that requires testing:</source>
          <target state="translated">테스트가 필요한 단일 속성을 가진 디렉토리의 경우 :</target>
        </trans-unit>
        <trans-unit id="e5da478a1e8a55f4755fcf0b2786dde75e4279a4" translate="yes" xml:space="preserve">
          <source>For directories with multiple attributes that require testing:</source>
          <target state="translated">테스트가 필요한 여러 속성을 가진 디렉토리의 경우 :</target>
        </trans-unit>
        <trans-unit id="fbb4feb0708f0b9ea72382995e00972489d29b81" translate="yes" xml:space="preserve">
          <source>For each action, use a collection of resources that are built into Chef to define the steps required to complete the action</source>
          <target state="translated">각 조치에 대해 Chef에 내장 된 자원 콜렉션을 사용하여 조치를 완료하는 데 필요한 단계를 정의하십시오.</target>
        </trans-unit>
        <trans-unit id="35be3f3e8726d22d5c0ad1feb6f37b4501d1ad3d" translate="yes" xml:space="preserve">
          <source>For each frontend server, use the following steps to set up the Chef server:</source>
          <target state="translated">각 프런트 엔드 서버에 대해 다음 단계를 사용하여 Chef 서버를 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="9832916640b3e56e52431274c3d4fe6b186cd0c8" translate="yes" xml:space="preserve">
          <source>For each group listed under &lt;strong&gt;Name&lt;/strong&gt;, select or de-select the &lt;strong&gt;Read&lt;/strong&gt;, &lt;strong&gt;Update&lt;/strong&gt;, &lt;strong&gt;Delete&lt;/strong&gt;, and &lt;strong&gt;Grant&lt;/strong&gt; permissions.</source>
          <target state="translated">&lt;strong&gt;이름&lt;/strong&gt; 아래에 나열된 각 그룹에 대해 &lt;strong&gt;읽기&lt;/strong&gt; , &lt;strong&gt;업데이트&lt;/strong&gt; , &lt;strong&gt;삭제&lt;/strong&gt; 및 권한 &lt;strong&gt;부여를&lt;/strong&gt; 선택하거나 선택 &lt;strong&gt;취소하십시오&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="2da6dd2e5277e025d3d8bba44655e56226ccee7f" translate="yes" xml:space="preserve">
          <source>For each of the upstream services, &lt;code&gt;pong&lt;/code&gt; or &lt;code&gt;fail&lt;/code&gt; is returned. The possible upstream names are:</source>
          <target state="translated">각 업스트림 서비스에 대해 &lt;code&gt;pong&lt;/code&gt; 또는 &lt;code&gt;fail&lt;/code&gt; 이 반환됩니다. 가능한 업스트림 이름은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="10272f40211a0925f662fe605bf45eac759d8644" translate="yes" xml:space="preserve">
          <source>For each of the wildcard examples above, the possible values are shown contained within the brackets. When running a search query, the query syntax for wildcards is to simply omit the name of the node (while preserving the underscores), similar to:</source>
          <target state="translated">위의 각 와일드 카드 예에서 가능한 값은 괄호 안에 포함되어 표시됩니다. 검색 쿼리를 실행할 때 와일드 카드에 대한 쿼리 구문은 다음과 유사하게 노드 이름을 생략하는 것입니다 (밑줄은 유지함).</target>
        </trans-unit>
        <trans-unit id="2a703cfe1b7d271f0d3f95fcce930c5e2a057f69" translate="yes" xml:space="preserve">
          <source>For encrypted data bag items, use either &lt;code&gt;--secret&lt;/code&gt; or &lt;code&gt;--secret-file&lt;/code&gt;, not both.</source>
          <target state="translated">암호화 된 데이터 백 항목의 경우 &lt;code&gt;--secret&lt;/code&gt; 또는 &lt;code&gt;--secret-file&lt;/code&gt; 중 하나만 사용 하십시오 .</target>
        </trans-unit>
        <trans-unit id="60d2e901642240ca6dca34ee4fac5318b0cf8f92" translate="yes" xml:space="preserve">
          <source>For example, Alice runs the following command:</source>
          <target state="translated">예를 들어 Alice는 다음 명령을 실행합니다.</target>
        </trans-unit>
        <trans-unit id="e2557427ca340dadb4f6a6cdb767b2e6b2cbe29f" translate="yes" xml:space="preserve">
          <source>For example, Chef includes built-in resources to manage files, packages, templates, and services, but it does not include a resource that manages websites.</source>
          <target state="translated">예를 들어 Chef에는 파일, 패키지, 템플릿 및 서비스를 관리하기위한 기본 제공 리소스가 포함되어 있지만 웹 사이트를 관리하는 리소스는 포함되어 있지 않습니다.</target>
        </trans-unit>
        <trans-unit id="0cbecd21bfb967326e786dae9e430d4ad0609dd2" translate="yes" xml:space="preserve">
          <source>For example, a 2GB search index will require about 2GB of free space available in the &lt;strong&gt;opscode-solr4&lt;/strong&gt; service&amp;rsquo;s storage area. The standard storage area for the &lt;strong&gt;opscode-solr4&lt;/strong&gt; service in a standalone topology Chef server install is &lt;code&gt;/var/opt/opscode/opscode-solr4/data&lt;/code&gt;.</source>
          <target state="translated">예를 들어, 2GB 검색 인덱스는 &lt;strong&gt;opscode-solr4&lt;/strong&gt; 서비스의 저장 영역 에서 사용 가능한 약 2GB의 여유 공간이 필요 합니다. 독립형 토폴로지 Chef 서버 설치에서 &lt;strong&gt;opscode-solr4&lt;/strong&gt; 서비스 의 표준 스토리지 영역 은 &lt;code&gt;/var/opt/opscode/opscode-solr4/data&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="f113ef3822b2bff39e94b83e57c69a6f5e64b9ee" translate="yes" xml:space="preserve">
          <source>For example, a bootstrap template file named &amp;ldquo;sea_power&amp;rdquo;:</source>
          <target state="translated">예를 들어,&amp;ldquo;sea_power&amp;rdquo;라는 부트 스트랩 템플릿 파일은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="f3cabe6721232113fd7e5b83c7c9f1165aee05fa" translate="yes" xml:space="preserve">
          <source>For example, a custom resource defines two properties (&lt;code&gt;content&lt;/code&gt; and &lt;code&gt;path&lt;/code&gt;) and a single action (&lt;code&gt;:create&lt;/code&gt;). Use the &lt;code&gt;load_current_value&lt;/code&gt; method to load the property value to be compared, and then use the &lt;code&gt;converge_if_changed&lt;/code&gt; method to tell the chef-client what to do if that value is not the desired value:</source>
          <target state="translated">예를 들어, 사용자 정의 자원은 두 개의 특성 ( &lt;code&gt;content&lt;/code&gt; 및 &lt;code&gt;path&lt;/code&gt; )과 단일 조치 ( &lt;code&gt;:create&lt;/code&gt; )를 정의합니다. &lt;code&gt;load_current_value&lt;/code&gt; 메소드를 사용하여 비교할 특성 값을로드 한 후 &lt;code&gt;converge_if_changed&lt;/code&gt; 메소드를 사용하여 해당 값이 원하는 값이 아닌 경우 요리사에게 클라이언트에게 지시하십시오.</target>
        </trans-unit>
        <trans-unit id="925e915792e7315e2be2eccaec291d100b500cc7" translate="yes" xml:space="preserve">
          <source>For example, a group of attributes for web servers might be:</source>
          <target state="translated">예를 들어, 웹 서버의 속성 그룹은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="2256f4f461489850cf57f6b528113efa38080ef1" translate="yes" xml:space="preserve">
          <source>For example, a handler for Growl needs to be enabled at the beginning of the chef-client run:</source>
          <target state="translated">예를 들어, chef-client 실행이 시작될 때 Growl 처리기가 사용 가능해야합니다.</target>
        </trans-unit>
        <trans-unit id="0cdb180be8ca4b1cc2af8d42831ba73fedd8c115" translate="yes" xml:space="preserve">
          <source>For example, a package is installed:</source>
          <target state="translated">예를 들어 패키지가 설치되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="c437689165a304673f2b145a8fec8d9b83d84966" translate="yes" xml:space="preserve">
          <source>For example, a resource that is &lt;strong&gt;not&lt;/strong&gt; doing lazy evaluation:</source>
          <target state="translated">예를 들어 지연 평가를 수행 &lt;strong&gt;하지 않는&lt;/strong&gt; 리소스는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="9398cc3e8e45c707a1c74450c90a031f8e572268" translate="yes" xml:space="preserve">
          <source>For example, a resource that is used to install a tar.gz package for version 1.16.1 may look something like this:</source>
          <target state="translated">예를 들어, 버전 1.16.1 용 tar.gz 패키지를 설치하는 데 사용되는 자원은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="caa2584a946c33bf3918e4f1f7153d1da26670c5" translate="yes" xml:space="preserve">
          <source>For example, a role named &lt;code&gt;baseline.rb&lt;/code&gt;:</source>
          <target state="translated">예를 들어 &lt;code&gt;baseline.rb&lt;/code&gt; 라는 역할은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="eae3b7a8c28a7d2d8e84c0935ad9ad2efc2901e5" translate="yes" xml:space="preserve">
          <source>For example, a simple deployment:</source>
          <target state="translated">예를 들어 간단한 배포 :</target>
        </trans-unit>
        <trans-unit id="59bccb5c38edc5fd456ccf3a22e8a3541ff55d7a" translate="yes" xml:space="preserve">
          <source>For example, a simple template resource like this:</source>
          <target state="translated">예를 들어 다음과 같은 간단한 템플릿 리소스는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="a8db9bee468b1cb891a578fc6c57408c2ac0875e" translate="yes" xml:space="preserve">
          <source>For example, a user named &lt;code&gt;grantmc&lt;/code&gt;, with a first and last name of &lt;code&gt;Grant McLennan&lt;/code&gt;, an email address of &lt;code&gt;grantmc@chef.io&lt;/code&gt;, a poorly-chosen password, and with the USER.pem file saved to &lt;code&gt;/tmp/grantmc.key&lt;/code&gt;:</source>
          <target state="translated">예를 들어, 사용자 이름 &lt;code&gt;grantmc&lt;/code&gt; 의 이름과 성을 가진, &lt;code&gt;Grant McLennan&lt;/code&gt; 의 이메일 주소 &lt;code&gt;grantmc@chef.io&lt;/code&gt; , 가난가 선택한 암호 및 USER.pem 파일로는 저장 &lt;code&gt;/tmp/grantmc.key&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="99891b12691bc78e1bc82c40285e8fa15d01c478" translate="yes" xml:space="preserve">
          <source>For example, a version constraint for &amp;ldquo;equals version 1.0.7&amp;rdquo; is expressed like this:</source>
          <target state="translated">예를 들어, &quot;동일 버전 1.0.7&quot;에 대한 버전 제약 조건은 다음과 같이 표현됩니다.</target>
        </trans-unit>
        <trans-unit id="7e0bda92be372b94de44885ac300c462789443af" translate="yes" xml:space="preserve">
          <source>For example, after copying the SSL certificate files to the Chef server, update the &lt;code&gt;nginx['ssl_certificate']&lt;/code&gt; and &lt;code&gt;nginx['ssl_certificate_key']&lt;/code&gt; settings to specify the paths to those files, and then (optionally) update the &lt;code&gt;nginx['ssl_ciphers']&lt;/code&gt; and &lt;code&gt;nginx['ssl_protocols']&lt;/code&gt; settings to reflect the desired level of hardness for the Chef server:</source>
          <target state="translated">예를 들어 SSL 인증서 파일을 Chef 서버에 복사 한 후 &lt;code&gt;nginx['ssl_certificate']&lt;/code&gt; 및 &lt;code&gt;nginx['ssl_certificate_key']&lt;/code&gt; 설정을 업데이트하여 해당 파일의 경로를 지정한 다음 선택적으로 &lt;code&gt;nginx['ssl_ciphers']&lt;/code&gt; 및 &lt;code&gt;nginx['ssl_protocols']&lt;/code&gt; 설정은 Chef 서버의 원하는 경도 수준을 반영합니다.</target>
        </trans-unit>
        <trans-unit id="1dcdb0409ef148369e3e21b98b4c9f0dc6893991" translate="yes" xml:space="preserve">
          <source>For example, an application that is deployed to a folder named &lt;code&gt;&quot;/path/to/application&quot;&lt;/code&gt;:</source>
          <target state="translated">예를 들어 &lt;code&gt;&quot;/path/to/application&quot;&lt;/code&gt; 이라는 폴더에 배포 된 응용 프로그램은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="8bb42af62ab878ca96ac931366ccb7ba28d761c5" translate="yes" xml:space="preserve">
          <source>For example, an organization named &lt;code&gt;chef&lt;/code&gt;, with a full name of &lt;code&gt;Chef Software, Inc.&lt;/code&gt;, and with the ORGANIZATION-validator.pem file saved to &lt;code&gt;/tmp/chef.key&lt;/code&gt;:</source>
          <target state="translated">예를 들어, 조직이라는 &lt;code&gt;chef&lt;/code&gt; 의 전체 이름, &lt;code&gt;Chef Software, Inc.&lt;/code&gt; , 그리고 조직 validator.pem 파일을 저장 &lt;code&gt;/tmp/chef.key&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="d01bde408ad1e4aca25973627758dc7adb5e22cd" translate="yes" xml:space="preserve">
          <source>For example, assuming the &lt;code&gt;CertificateID&lt;/code&gt; is configured in the local configuration manager, the &lt;code&gt;SeaPower1@3&lt;/code&gt; object is created and embedded within the &lt;code&gt;seapower-user&lt;/code&gt; script:</source>
          <target state="translated">예를 들어, &lt;code&gt;CertificateID&lt;/code&gt; 가 로컬 구성 관리자에서 구성 되었다고 가정하면 &lt;code&gt;SeaPower1@3&lt;/code&gt; 오브젝트가 &lt;code&gt;seapower-user&lt;/code&gt; 스크립트 내에 작성되고 임베드됩니다 .</target>
        </trans-unit>
        <trans-unit id="deb2ac459389a9cc4b2bfe019447df9257418358" translate="yes" xml:space="preserve">
          <source>For example, consider the following script:</source>
          <target state="translated">예를 들어 다음 스크립트를 고려하십시오.</target>
        </trans-unit>
        <trans-unit id="8f53009d6ded956c301c1a285ad411d22c5eaf32" translate="yes" xml:space="preserve">
          <source>For example, for recipes:</source>
          <target state="translated">예를 들어, 레시피의 경우 :</target>
        </trans-unit>
        <trans-unit id="22314d268bb30fc4a1bbda46379ad391eb9566a6" translate="yes" xml:space="preserve">
          <source>For example, if cookbooks &lt;code&gt;foo&lt;/code&gt; and &lt;code&gt;bar&lt;/code&gt; both exist on the Chef server and both with versions &lt;code&gt;0.1.0&lt;/code&gt; and &lt;code&gt;0.2.0&lt;/code&gt;, the response is similar to:</source>
          <target state="translated">예를 들어, 요리 책 &lt;code&gt;foo&lt;/code&gt; 와 &lt;code&gt;bar&lt;/code&gt; 가 Chef 서버에 있고 버전이 &lt;code&gt;0.1.0&lt;/code&gt; 및 &lt;code&gt;0.2.0&lt;/code&gt; 인 경우 응답은 다음과 유사합니다.</target>
        </trans-unit>
        <trans-unit id="f95cfe5046e1cda57375d8eae4342722c168fd65" translate="yes" xml:space="preserve">
          <source>For example, if the current value is 350, there are four front end machines, and all add-ons are installed, then the formula looks like:</source>
          <target state="translated">예를 들어 현재 값이 350이면 프런트 엔드 시스템이 4 개이고 모든 애드온이 설치된 경우 수식은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="237a93e0f6a15649bb67f0d2471fcd46dd7589a3" translate="yes" xml:space="preserve">
          <source>For example, if the following recipe is included in a cookbook named &lt;code&gt;my_app&lt;/code&gt;:</source>
          <target state="translated">예를 들어, 다음 레시피가 &lt;code&gt;my_app&lt;/code&gt; 라는 요리 책에 포함 된 경우 :</target>
        </trans-unit>
        <trans-unit id="2f0a56a9b048c93f06a93739ad16df3241002faa" translate="yes" xml:space="preserve">
          <source>For example, if the volume group has 10GB total, only 8GB should be allocated to the logical volume, which leaves 20% of the volume group available:</source>
          <target state="translated">예를 들어, 볼륨 그룹에 총 10GB가있는 경우 논리 볼륨에 8GB 만 할당하면 볼륨 그룹의 20 %가 사용 가능합니다.</target>
        </trans-unit>
        <trans-unit id="6b7f9823efed80e8cd10d8e1608ea74f48e4db01" translate="yes" xml:space="preserve">
          <source>For example, installing multiple packages:</source>
          <target state="translated">예를 들어, 여러 패키지를 설치하는 경우 :</target>
        </trans-unit>
        <trans-unit id="833fa28c343cbd5216a048fc9f8af71bf4a25169" translate="yes" xml:space="preserve">
          <source>For example, normal attribute data similar to:</source>
          <target state="translated">예를 들어 다음과 유사한 일반 속성 데이터입니다.</target>
        </trans-unit>
        <trans-unit id="9e27d3369b6f52ad75a4003115a48b46e28372cd" translate="yes" xml:space="preserve">
          <source>For example, run the following command:</source>
          <target state="translated">예를 들어 다음 명령을 실행하십시오.</target>
        </trans-unit>
        <trans-unit id="00b16bd7c51eda7f25cca21d9c011c2fd60775ab" translate="yes" xml:space="preserve">
          <source>For example, run the following:</source>
          <target state="translated">예를 들어 다음을 실행하십시오.</target>
        </trans-unit>
        <trans-unit id="230c0086486f46f70d467278dd1278e8fda7693d" translate="yes" xml:space="preserve">
          <source>For example, the &lt;code&gt;action&lt;/code&gt; appears as a property when this custom resource is used in a recipe:</source>
          <target state="translated">예를 들어, 이 사용자 정의 자원이 레시피에 사용되면 &lt;code&gt;action&lt;/code&gt; 가 특성으로 나타납니다.</target>
        </trans-unit>
        <trans-unit id="96827965a76340a35851dda0765ae3a562af2f46" translate="yes" xml:space="preserve">
          <source>For example, the &lt;code&gt;httpd.rb&lt;/code&gt; file in the &lt;code&gt;website&lt;/code&gt; cookbook could be assigned a custom resource name like this:</source>
          <target state="translated">예를 들어, &lt;code&gt;website&lt;/code&gt; 요리 책 에 있는 &lt;code&gt;httpd.rb&lt;/code&gt; 파일에는 다음 과 같이 사용자 지정 리소스 이름이 할당 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3be9a0fa90a580e8e26bf0a59cc4e2de6202652a" translate="yes" xml:space="preserve">
          <source>For example, the &lt;code&gt;not_if&lt;/code&gt; guard statement in the following resource example &lt;strong&gt;does not inherit&lt;/strong&gt; the &lt;code&gt;environment&lt;/code&gt; property:</source>
          <target state="translated">예를 들어 다음 자원 예제 의 &lt;code&gt;not_if&lt;/code&gt; guard 문 은 &lt;code&gt;environment&lt;/code&gt; 속성을 &lt;strong&gt;상속하지 않습니다&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="ecc32745fd9a0f0c9256eb6b2b00905cf3a2c50a" translate="yes" xml:space="preserve">
          <source>For example, the &lt;code&gt;site.rb&lt;/code&gt; file in the &lt;code&gt;exampleco&lt;/code&gt; cookbook could be similar to:</source>
          <target state="translated">예를 들어 &lt;code&gt;exampleco&lt;/code&gt; 쿡북 의 &lt;code&gt;site.rb&lt;/code&gt; 파일은 다음 과 유사 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="207a12efe984804e04ea611b619e467d1fdaa85d" translate="yes" xml:space="preserve">
          <source>For example, the &lt;code&gt;web.rb&lt;/code&gt; references the &lt;code&gt;baseline.rb&lt;/code&gt; role. The &lt;code&gt;web.rb&lt;/code&gt; file only provides a value for one attribute: &lt;code&gt;:startservers&lt;/code&gt;. When the chef-client compares these attributes, the deep merge feature will ensure that &lt;code&gt;:startservers&lt;/code&gt; (and its value of &lt;code&gt;30&lt;/code&gt;) will be applied to any node for which the &lt;code&gt;web.rb&lt;/code&gt; attribute structure should be applied.</source>
          <target state="translated">예를 들어, &lt;code&gt;web.rb&lt;/code&gt; 는 &lt;code&gt;baseline.rb&lt;/code&gt; 역할을 참조합니다 . &lt;code&gt;web.rb&lt;/code&gt; 의 파일은 하나 개의 속성에 대한 값을 제공합니다 &lt;code&gt;:startservers&lt;/code&gt; . chef-client가 이러한 속성을 비교할 때 딥 병합 기능을 사용 하면 &lt;code&gt;web.rb&lt;/code&gt; 속성 구조를 적용해야하는 모든 노드에 &lt;code&gt;:startservers&lt;/code&gt; (및 값 &lt;code&gt;30&lt;/code&gt; )가 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="c7bb1861a67697dadc7c7408e1197347fbfaf76f" translate="yes" xml:space="preserve">
          <source>For example, the &lt;strong&gt;service&lt;/strong&gt; resource can be used to start a service. If the action is &lt;code&gt;:start&lt;/code&gt; and the service is not running, then start the service (if it is not running) and do nothing (if it is running). What about a service that is installed from a package? The chef-client cannot check to see if the service is running until after the package is installed. A simple question that why-run mode can answer is what the chef-client would say about the state of the service after installing the package because service actions often trigger notifications to other resources. So it can be important to know in advance that any notifications are being triggered correctly.</source>
          <target state="translated">예를 들어 &lt;strong&gt;서비스&lt;/strong&gt; 리소스를 사용하여 서비스를 시작할 수 있습니다. 조치가 &lt;code&gt;:start&lt;/code&gt; 이고 서비스가 실행 중이 아닌 경우 서비스를 시작하고 (실행 중이 아닌 경우) 아무 것도 (실행 중이 아닌 경우) 수행하십시오. 패키지에서 설치된 서비스는 어떻습니까? chef-client는 패키지가 설치 될 때까지 서비스가 실행 중인지 확인할 수 없습니다. 왜 실행 모드가 응답 할 수 있는지에 대한 간단한 질문은 서비스 조치가 종종 다른 자원에 대한 알림을 트리거하기 때문에 패키지를 설치 한 후 요리사 클라이언트가 서비스 상태에 대해 말하는 것입니다. 따라서 모든 알림이 올바르게 트리거되고 있는지 미리 알아야합니다.</target>
        </trans-unit>
        <trans-unit id="ba2c0e658db9be8faf084333ccae81088f205c46" translate="yes" xml:space="preserve">
          <source>For example, the Reporting start handler adds the following code to the top of the client.rb file:</source>
          <target state="translated">예를 들어,보고 시작 핸들러는 다음 코드를 client.rb 파일의 맨 위에 추가합니다.</target>
        </trans-unit>
        <trans-unit id="be3f7018bd450c0ca4da2b73e63ce75fc8c5f6da" translate="yes" xml:space="preserve">
          <source>For example, the default bootstrap operation relies on an Internet connection to get the distribution to the target node. If a target node cannot access the Internet, then a custom template can be used to define a specific location for the distribution so that the target node may access it during the bootstrap operation.</source>
          <target state="translated">예를 들어, 기본 부트 스트랩 작업은 인터넷 연결을 사용하여 대상 노드에 배포를 가져옵니다. 대상 노드가 인터넷에 액세스 할 수없는 경우, 사용자 정의 템플리트를 사용하여 분배의 특정 위치를 정의하여 부트 스트랩 조작 중에 대상 노드가 액세스 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ca55314a407f63cc793f95d6f7d079a92acdca6e" translate="yes" xml:space="preserve">
          <source>For example, the following attributes exist in a cookbook. Some are defined in a role file:</source>
          <target state="translated">예를 들어, 다음 속성은 요리 책에 존재합니다. 일부는 역할 파일에 정의되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="e50ad86ef9cb92a7c0ec0eaddb68d83c14568af8" translate="yes" xml:space="preserve">
          <source>For example, the following code block will ensure the command is evaluated using the default intepreter as identified by the chef-client:</source>
          <target state="translated">예를 들어, 다음 코드 블록은 chef-client가 식별 한 기본 정수기를 사용하여 명령이 평가되도록합니다.</target>
        </trans-unit>
        <trans-unit id="9b2f7aa9d553b3ca6139044efda1b018c5d2fe8f" translate="yes" xml:space="preserve">
          <source>For example, the following custom resource creates and/or updates user properties, but not their password. The &lt;code&gt;property_is_set?&lt;/code&gt; method checks if the user has specified a password and then tells the chef-client what to do if the password is not identical:</source>
          <target state="translated">예를 들어 다음 사용자 지정 리소스는 사용자 속성을 생성 및 / 또는 업데이트하지만 암호는 업데이트하지 않습니다. &lt;code&gt;property_is_set?&lt;/code&gt; 메소드는 사용자가 비밀번호를 지정했는지 확인한 후 비밀번호가 동일하지 않은 경우 요리사 클라이언트에게 수행 할 작업을 알려줍니다.</target>
        </trans-unit>
        <trans-unit id="ac1bbff41ccba7201debfa7d6f1b25d3ef2b130f" translate="yes" xml:space="preserve">
          <source>For example, the following definition leverages the &lt;strong&gt;directory&lt;/strong&gt; resource to create a new directory, and then evaluate that within the context of the custom resource:</source>
          <target state="translated">예를 들어, 다음 정의는 &lt;strong&gt;디렉토리&lt;/strong&gt; 자원을 활용하여 새 디렉토리를 작성한 후 사용자 정의 자원의 컨텍스트 내에서이를 평가합니다.</target>
        </trans-unit>
        <trans-unit id="79a294f29b0cc1f06acbe7f323d0699c82ee2fab" translate="yes" xml:space="preserve">
          <source>For example, the following example specifies the rights for a directory:</source>
          <target state="translated">예를 들어 다음 예는 디렉토리에 대한 권한을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="ae0c4fc8a2914d9a55e929145e94978f57de24dd" translate="yes" xml:space="preserve">
          <source>For example, the following properties define &lt;code&gt;username&lt;/code&gt; and &lt;code&gt;password&lt;/code&gt; properties with no default values specified, but with &lt;code&gt;identity&lt;/code&gt; set to &lt;code&gt;true&lt;/code&gt; for the user name:</source>
          <target state="translated">예를 들어, 다음 특성은 기본값을 지정하지 않고 사용자 이름에 대해 &lt;code&gt;identity&lt;/code&gt; 가 &lt;code&gt;true&lt;/code&gt; 로 설정된 &lt;code&gt;username&lt;/code&gt; 및 &lt;code&gt;password&lt;/code&gt; 특성을 정의 합니다 .</target>
        </trans-unit>
        <trans-unit id="9e274d0d3e7cf2273ca3c7c657430aca70ea9eed" translate="yes" xml:space="preserve">
          <source>For example, the following properties define &lt;code&gt;username&lt;/code&gt; and &lt;code&gt;password&lt;/code&gt; properties with no default values specified:</source>
          <target state="translated">예를 들어 다음 속성은 기본값이 지정되지 않은 &lt;code&gt;username&lt;/code&gt; 및 &lt;code&gt;password&lt;/code&gt; 속성을 정의 합니다.</target>
        </trans-unit>
        <trans-unit id="c67c05a461572d43c16af85e4cb687efb092fffd" translate="yes" xml:space="preserve">
          <source>For example, the following properties define the &lt;code&gt;owner&lt;/code&gt;, &lt;code&gt;group&lt;/code&gt;, and &lt;code&gt;mode&lt;/code&gt; properties for a file that already exists on the node, and with &lt;code&gt;desired_state&lt;/code&gt; set to &lt;code&gt;false&lt;/code&gt;:</source>
          <target state="translated">예를 들어, 다음 특성 은 노드에 이미 존재하고 &lt;code&gt;desired_state&lt;/code&gt; 가 &lt;code&gt;false&lt;/code&gt; 로 설정된 파일 의 &lt;code&gt;owner&lt;/code&gt; , &lt;code&gt;group&lt;/code&gt; 및 &lt;code&gt;mode&lt;/code&gt; 특성을 정의합니다 .</target>
        </trans-unit>
        <trans-unit id="d5f02c9b3afcf8d5d380cd214633747d095dbb7d" translate="yes" xml:space="preserve">
          <source>For example, the following recipe will install the Apache web server, randomly choose PHP or Perl as the scripting language, and then install that scripting language:</source>
          <target state="translated">예를 들어 다음 레시피는 Apache 웹 서버를 설치하고 스크립팅 언어로 PHP 또는 Perl을 임의로 선택한 다음 해당 스크립팅 언어를 설치합니다.</target>
        </trans-unit>
        <trans-unit id="e6b4d42e4c58a58b474a832c06e67a48caf97c52" translate="yes" xml:space="preserve">
          <source>For example, the following shows a custom handler that sends an email that contains the exception data when a chef-client run fails:</source>
          <target state="translated">예를 들어, 다음은 chef-client 실행이 실패 할 때 예외 데이터가 포함 된 이메일을 보내는 사용자 정의 핸들러를 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="7fc920f0981089a917c61bbc7a4b37a94fcb40a0" translate="yes" xml:space="preserve">
          <source>For example, the following template file and template resource settings can be used to manage a configuration file named &lt;code&gt;/etc/sudoers&lt;/code&gt;. Within a cookbook that uses sudo, the following resource could be added to &lt;code&gt;/recipes/default.rb&lt;/code&gt;:</source>
          <target state="translated">예를 들어, 다음 템플릿 파일 및 템플릿 리소스 설정을 사용하여 &lt;code&gt;/etc/sudoers&lt;/code&gt; 라는 구성 파일을 관리 할 수 ​​있습니다 . sudo를 사용하는 요리 책 내에서 &lt;code&gt;/recipes/default.rb&lt;/code&gt; 에 다음 자원을 추가 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="47f87ea31d5c8489e2a7ed9301eb712c4d341055" translate="yes" xml:space="preserve">
          <source>For example, this should return &lt;code&gt;true&lt;/code&gt;:</source>
          <target state="translated">예를 들어 &lt;code&gt;true&lt;/code&gt; 를 반환해야 합니다 .</target>
        </trans-unit>
        <trans-unit id="29eec27e834afe626ae915421209224e59fb814f" translate="yes" xml:space="preserve">
          <source>For example, to bump a version number, first make changes to the cookbook, and then upload and test it. Repeat this process as required, and then upload it using a knife command similar to:</source>
          <target state="translated">예를 들어, 버전 번호를 늘리려면 먼저 요리 책을 변경 한 다음 업로드하고 테스트하십시오. 필요에 따라이 프로세스를 반복 한 후 다음과 유사한 나이프 명령을 사용하여 업로드하십시오.</target>
        </trans-unit>
        <trans-unit id="a9dd727d9d26412e49790f9a3706c12d3998959e" translate="yes" xml:space="preserve">
          <source>For example, to change a user&amp;rsquo;s password, enter:</source>
          <target state="translated">예를 들어, 사용자 비밀번호를 변경하려면 다음을 입력하십시오.</target>
        </trans-unit>
        <trans-unit id="a1522af42745f447a359b467050a1bebdee9d7be" translate="yes" xml:space="preserve">
          <source>For example, to embed the long description within the field itself:</source>
          <target state="translated">예를 들어, 필드 자체에 긴 설명을 포함 시키려면 다음을 수행하십시오.</target>
        </trans-unit>
        <trans-unit id="b8488953a9c4afc34ec0ca5e5fb92df1382611cf" translate="yes" xml:space="preserve">
          <source>For example, to explicitly track an upstream repository&amp;rsquo;s master branch:</source>
          <target state="translated">예를 들어 업스트림 저장소의 마스터 분기를 명시 적으로 추적하려면 다음을 수행하십시오.</target>
        </trans-unit>
        <trans-unit id="44ce6a21606ee03cedd6ec92fef022a6817d1d89" translate="yes" xml:space="preserve">
          <source>For example, to freeze a cookbook version using knife, enter:</source>
          <target state="translated">예를 들어, 나이프를 사용하여 요리 책 버전을 고정하려면 다음을 입력하십시오.</target>
        </trans-unit>
        <trans-unit id="9ac616cc13a21c2e2d8c58dd98e61d5aac55ded7" translate="yes" xml:space="preserve">
          <source>For example, to get the data for a node named &amp;ldquo;Example_Node&amp;rdquo;:</source>
          <target state="translated">예를 들어, &quot;Example_Node&quot;라는 노드의 데이터를 가져 오려면 다음을 수행하십시오.</target>
        </trans-unit>
        <trans-unit id="6a40fdc94a3a5ebff424d50c2db1a6baa5f2680c" translate="yes" xml:space="preserve">
          <source>For example, to import all resources from a module named &lt;code&gt;cRDPEnabled&lt;/code&gt;:</source>
          <target state="translated">예를 들어, &lt;code&gt;cRDPEnabled&lt;/code&gt; 라는 모듈에서 모든 자원을 가져 오려면 다음을 수행하십시오 .</target>
        </trans-unit>
        <trans-unit id="ff720e72520cd20b8d3239c338376e446a3ce643" translate="yes" xml:space="preserve">
          <source>For example, to list all of the nodes in a configuration named &amp;ldquo;preprod&amp;rdquo;:</source>
          <target state="translated">예를 들어,&amp;ldquo;preprod&amp;rdquo;라는 구성의 모든 노드를 나열하려면 다음을 수행하십시오.</target>
        </trans-unit>
        <trans-unit id="00fe31c6b55a210fa1de799c0bf79ae7162b753e" translate="yes" xml:space="preserve">
          <source>For example, to match any 12.x version of the chef-client, but not 11.x or 13.x:</source>
          <target state="translated">예를 들어 12.x 버전의 chef-client와 일치하지만 11.x 또는 13.x는 일치하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="284a1796dc851b53fb76e1965abf67ef7a707167" translate="yes" xml:space="preserve">
          <source>For example, to match any 8.x version of Ohai, but not 7.x or 9.x:</source>
          <target state="translated">예를 들어, 8.x 버전의 Ohai와 일치하지만 7.x 또는 9.x는 일치하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="8175f87aa4313db8d6e36ea70a006819ac00ad49" translate="yes" xml:space="preserve">
          <source>For example, to set a dependency a cookbook named &lt;code&gt;cats&lt;/code&gt;:</source>
          <target state="translated">예를 들어 의존성을 설정하려면 &lt;code&gt;cats&lt;/code&gt; 라는 요리 책을 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="538d293642619be7db567849b6fd4f79e7623416" translate="yes" xml:space="preserve">
          <source>For example, to support every version of Ubuntu:</source>
          <target state="translated">예를 들어, 모든 버전의 우분투를 지원하려면 :</target>
        </trans-unit>
        <trans-unit id="b87c9008967f459bf82cc0de986171410fe1aa12" translate="yes" xml:space="preserve">
          <source>For example, to view a list of roles on the Chef server:</source>
          <target state="translated">예를 들어 Chef 서버에서 역할 목록을 보려면</target>
        </trans-unit>
        <trans-unit id="ba7eec77dafc45c8f7bd85697311d895b27e42d5" translate="yes" xml:space="preserve">
          <source>For example, to view the aggregate queue backlog, enter the following:</source>
          <target state="translated">예를 들어, 집계 큐 백 로그를 보려면 다음을 입력하십시오.</target>
        </trans-unit>
        <trans-unit id="5b38c9c2d554e7e69205d2d89493d3637d27fa49" translate="yes" xml:space="preserve">
          <source>For example, using a &lt;code&gt;case&lt;/code&gt; statement with the &lt;code&gt;platform&lt;/code&gt; node attribute:</source>
          <target state="translated">예를 들어, &lt;code&gt;platform&lt;/code&gt; 노드 속성 과 함께 &lt;code&gt;case&lt;/code&gt; 문을 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="dcf351b3f52f4cb4931cbec364fa8eb202c72df5" translate="yes" xml:space="preserve">
          <source>For example, using a &lt;code&gt;case&lt;/code&gt; statement with the &lt;code&gt;platform_family&lt;/code&gt; node attribute:</source>
          <target state="translated">예를 들어 &lt;code&gt;platform_family&lt;/code&gt; 노드 속성 과 함께 &lt;code&gt;case&lt;/code&gt; 문을 사용하면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="937c820cb25fa936c4684fcb94d53d411d89a96b" translate="yes" xml:space="preserve">
          <source>For example, using an &lt;code&gt;if&lt;/code&gt; statement with the &lt;code&gt;platform&lt;/code&gt; node attribute:</source>
          <target state="translated">예를 들어, &lt;code&gt;platform&lt;/code&gt; 노드 속성 과 함께 &lt;code&gt;if&lt;/code&gt; 문을 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="86ab92f1e029d4034e6c5303a250c0961bd291d9" translate="yes" xml:space="preserve">
          <source>For example, using the results of a search query within a variable:</source>
          <target state="translated">예를 들어 변수 내에서 검색 결과를 사용하는 경우 :</target>
        </trans-unit>
        <trans-unit id="fa763c2611dffa0c486b83c9ac8d7aed55fb101d" translate="yes" xml:space="preserve">
          <source>For example, using the same example as from above, but this time adding the &lt;code&gt;guard_interpreter&lt;/code&gt; property and setting it to &lt;code&gt;:bash&lt;/code&gt;:</source>
          <target state="translated">예를 들어 위와 동일한 예제를 사용하지만 이번에는 &lt;code&gt;guard_interpreter&lt;/code&gt; 속성을 추가하고 이를 &lt;code&gt;:bash&lt;/code&gt; 로 설정하십시오 .</target>
        </trans-unit>
        <trans-unit id="8e280180e461b0bcc523e1b86b6c9d65c84f4288" translate="yes" xml:space="preserve">
          <source>For example, when using knife, the following configuration files would be loaded:</source>
          <target state="translated">예를 들어, knife를 사용할 때 다음 구성 파일이로드됩니다.</target>
        </trans-unit>
        <trans-unit id="b32c5faa97f8876da14a8050f84383b569a428fd" translate="yes" xml:space="preserve">
          <source>For example, without downloading the SSL certificate, the following knife command:</source>
          <target state="translated">예를 들어, SSL 인증서를 다운로드하지 않으면 다음과 같은 knife 명령이 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="059c3e8cce263b2945a18ac90b2637e10a8026b1" translate="yes" xml:space="preserve">
          <source>For example:</source>
          <target state="translated">예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="6f4897b2e3384c8e6c57211211b49eb4427f2339" translate="yes" xml:space="preserve">
          <source>For front-end servers, ensure that ports marked as external (marked as &lt;code&gt;yes&lt;/code&gt; in the &lt;strong&gt;External&lt;/strong&gt; column) are open and accessible via any firewalls that are in use:</source>
          <target state="translated">프런트 엔드 서버의 경우, (로 표시 외부로 표시하는 포트를 확인 &lt;code&gt;yes&lt;/code&gt; 에서 &lt;strong&gt;외부&lt;/strong&gt; 열) 사용중인 모든 방화벽을 통해 개방형 액세스 할 수 있습니다 :</target>
        </trans-unit>
        <trans-unit id="fa890f6a591441de79c589776868e264357afe07" translate="yes" xml:space="preserve">
          <source>For information about the settings in this file, see the DRBD website: &lt;a href=&quot;http://www.drbd.org/users-guide/ch-admin.html&quot;&gt;http://www.drbd.org/users-guide/ch-admin.html&lt;/a&gt;.</source>
          <target state="translated">이 파일의 설정에 대한 정보는 DRBD 웹 사이트 ( &lt;a href=&quot;http://www.drbd.org/users-guide/ch-admin.html&quot;&gt;http://www.drbd.org/users-guide/ch-admin.html)를 참조하십시오&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="8a0b614b2d2cb09220f4d8a3a0cb30e4624016a4" translate="yes" xml:space="preserve">
          <source>For instance, if there are West coast and East coast data centers, it is best to have one Chef server instance in each datacenter. Deploys to each Chef server can be synchronized upstream by CI software. The primary limiting bottleneck for Chef server installations is almost always input/output operations per second (IOPS) performance for the database filesystem.</source>
          <target state="translated">예를 들어 West Coast 및 East Coast 데이터 센터가있는 경우 각 데이터 센터마다 하나의 Chef 서버 인스턴스가있는 것이 가장 좋습니다. CI 소프트웨어를 통해 각 Chef 서버에 배포를 업스트림 동기화 할 수 있습니다. Chef 서버 설치의 기본 제한 병목 현상은 거의 항상 데이터베이스 파일 시스템의 IOPS (입 / 출력 작업) 성능입니다.</target>
        </trans-unit>
        <trans-unit id="c293511c0ce9f3585a3035ea568fd878421528d4" translate="yes" xml:space="preserve">
          <source>For knife, the private key is typically copied to &lt;code&gt;~/.chef/client_name.pem&lt;/code&gt; and referenced in the knife.rb configuration file.</source>
          <target state="translated">knife의 경우 개인 키는 일반적으로 &lt;code&gt;~/.chef/client_name.pem&lt;/code&gt; 에 복사되고 knife.rb 구성 파일에서 참조됩니다.</target>
        </trans-unit>
        <trans-unit id="023189c8d9b367c8d89b4cd6e0e64db05edf73eb" translate="yes" xml:space="preserve">
          <source>For many users of Chef, the Chef development kit version of Ruby that is included in the Chef development kit should be configured as the default version of Ruby.</source>
          <target state="translated">Chef의 많은 사용자의 경우 Chef 개발 키트에 포함 된 Ruby의 Chef 개발 키트 버전의 Ruby가 기본 버전의 Ruby로 구성되어야합니다.</target>
        </trans-unit>
        <trans-unit id="759e29e4242dc7686d3e6c4cc1379df7cbadcb0e" translate="yes" xml:space="preserve">
          <source>For more information about Amazon Elastic Block Store (EBS), see &lt;a href=&quot;http://aws.amazon.com/ebs/&quot;&gt;http://aws.amazon.com/ebs/&lt;/a&gt;.</source>
          <target state="translated">Amazon Elastic Block Store (EBS)에 대한 자세한 내용은 &lt;a href=&quot;http://aws.amazon.com/ebs/&quot;&gt;http://aws.amazon.com/ebs/를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="23abc8fe6acbb42396e081211a611112e7dde9a2" translate="yes" xml:space="preserve">
          <source>For more information about DRBD, see &lt;a href=&quot;http://www.drbd.org&quot;&gt;http://www.drbd.org&lt;/a&gt;.</source>
          <target state="translated">DRBD에 대한 자세한 정보는 &lt;a href=&quot;http://www.drbd.org&quot;&gt;http://www.drbd.org를&lt;/a&gt; 참조 하십시오 .</target>
        </trans-unit>
        <trans-unit id="815496010f8acc5c832910a94099b37c961aa0fd" translate="yes" xml:space="preserve">
          <source>For more information about logical volume manager (LVM), see &lt;a href=&quot;http://www.tldp.org/HOWTO/LVM-HOWTO/&quot;&gt;http://www.tldp.org/HOWTO/LVM-HOWTO/&lt;/a&gt;. For more information about DRBD, see &lt;a href=&quot;http://drbd.linbit.com/users-guide/s-resizing.html&quot;&gt;http://drbd.linbit.com/users-guide/s-resizing.html&lt;/a&gt;.</source>
          <target state="translated">논리 볼륨 관리자 (LVM)에 대한 자세한 정보는 &lt;a href=&quot;http://www.tldp.org/HOWTO/LVM-HOWTO/&quot;&gt;http://www.tldp.org/HOWTO/LVM-HOWTO/를&lt;/a&gt; 참조 하십시오 . DRBD에 대한 자세한 내용은 &lt;a href=&quot;http://drbd.linbit.com/users-guide/s-resizing.html&quot;&gt;http://drbd.linbit.com/users-guide/s-resizing.html을&lt;/a&gt; 참조 하십시오 .</target>
        </trans-unit>
        <trans-unit id="098501a1259fcf57ffbcfea89192bb13c6370b46" translate="yes" xml:space="preserve">
          <source>For more information about specific resources for specific platforms, see the following topics:</source>
          <target state="translated">특정 플랫폼의 특정 자원에 대한 자세한 정보는 다음 주제를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="997bb37d812f64b80dab134e6ecfca956bf26ad0" translate="yes" xml:space="preserve">
          <source>For more information about the Chef server API endpoints see &lt;a href=&quot;api_chef_server&quot;&gt;Chef Server API&lt;/a&gt;.</source>
          <target state="translated">Chef 서버 API 엔드 포인트에 대한 자세한 정보는 &lt;a href=&quot;api_chef_server&quot;&gt;Chef Server API를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="57e14f15cf5468aeb7732b66d259a7c8ce3c6077" translate="yes" xml:space="preserve">
          <source>For more information about the server configuration file, see &lt;a href=&quot;config_rb_server&quot;&gt;chef-server.rb&lt;/a&gt;.</source>
          <target state="translated">서버 구성 파일에 대한 자세한 정보는 &lt;a href=&quot;config_rb_server&quot;&gt;chef-server.rb를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="1d7dfd698c3fed9e395880733cea9a274eca658e" translate="yes" xml:space="preserve">
          <source>For more information about these options, see the RubyGems documentation: &lt;a href=&quot;http://rubygems.rubyforge.org/rubygems-update/Gem/DependencyInstaller.html&quot;&gt;http://rubygems.rubyforge.org/rubygems-update/Gem/DependencyInstaller.html&lt;/a&gt;.</source>
          <target state="translated">이러한 옵션에 대한 자세한 내용은 젬 설명서를 참조 &lt;a href=&quot;http://rubygems.rubyforge.org/rubygems-update/Gem/DependencyInstaller.html&quot;&gt;http://rubygems.rubyforge.org/rubygems-update/Gem/DependencyInstaller.html를&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="4a3284fd7d1f1f89c774978c55067fe63d6c7e8e" translate="yes" xml:space="preserve">
          <source>For more information on configuring your Chef server, see &lt;a href=&quot;config_rb_server&quot;&gt;chef-server.rb Settings&lt;/a&gt; and &lt;a href=&quot;config_rb_server_optional_settings&quot;&gt;chef-server.rb Optional Settings&lt;/a&gt;.</source>
          <target state="translated">Chef 서버 구성에 대한 자세한 정보는 &lt;a href=&quot;config_rb_server&quot;&gt;chef-server.rb 설정&lt;/a&gt; 및 &lt;a href=&quot;config_rb_server_optional_settings&quot;&gt;chef-server.rb 선택적 설정을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="a6c526ba47d96ccff74e702f340e7b0283477ccd" translate="yes" xml:space="preserve">
          <source>For more information, see: &lt;a href=&quot;http://msdn.microsoft.com/en-us/library/windows/desktop/aa384235(v=vs.85).aspx&quot;&gt;http://msdn.microsoft.com/en-us/library/windows/desktop/aa384235(v=vs.85).aspx&lt;/a&gt;.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;http://msdn.microsoft.com/en-us/library/windows/desktop/aa384235(v=vs.85).aspx&quot;&gt;http://msdn.microsoft.com/en-us/library/windows/desktop/aa384235(v=vs.85).aspx를&lt;/a&gt; 참조 하십시오 .</target>
        </trans-unit>
        <trans-unit id="cc555f28a42d875d0f3d1ab19fc37ede676d4c7f" translate="yes" xml:space="preserve">
          <source>For more information, see: &lt;a href=&quot;https://msdn.microsoft.com/en-us/library/windows/desktop/aa384187(v=vs.85).aspx&quot;&gt;https://msdn.microsoft.com/en-us/library/windows/desktop/aa384187(v=vs.85).aspx&lt;/a&gt;.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;https://msdn.microsoft.com/en-us/library/windows/desktop/aa384187(v=vs.85).aspx&quot;&gt;https://msdn.microsoft.com/en-us/library/windows/desktop/aa384187(v=vs.85).aspx를&lt;/a&gt; 참조 하십시오 .</target>
        </trans-unit>
        <trans-unit id="4387e95339b9650ebb2b56d1da4cd711dfe14dbe" translate="yes" xml:space="preserve">
          <source>For more information:</source>
          <target state="translated">자세한 내용은:</target>
        </trans-unit>
        <trans-unit id="8b04370e596f20a21a79cc3544183d56c6e849b7" translate="yes" xml:space="preserve">
          <source>For new Microsoft Windows machines, Windows PowerShell scripts will not work until an administrator runs the following command:</source>
          <target state="translated">새로운 Microsoft Windows 컴퓨터의 경우 관리자가 다음 명령을 실행할 때까지 Windows PowerShell 스크립트가 작동하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="6a8cab74593026bb7b49e7a27997e24312de24d3" translate="yes" xml:space="preserve">
          <source>For new Microsoft Windows machines, commands cannot be appended to &lt;code&gt;$PROFILE&lt;/code&gt; if the folder does not exist or if there is a new user profile, an error similar to the following may be returned:</source>
          <target state="translated">새 Microsoft Windows 시스템의 경우, 폴더가 없거나 새 사용자 프로파일이 있으면 &lt;code&gt;$PROFILE&lt;/code&gt; 명령을 추가 할 수 없습니다 . 다음과 유사한 오류가 리턴 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5c4a094c9c014ca41b853316fa612c4a35a0877d" translate="yes" xml:space="preserve">
          <source>For normal attributes:</source>
          <target state="translated">일반 속성의 경우 :</target>
        </trans-unit>
        <trans-unit id="2b8e54d1c66c157665fd58257b223737e3f52b54" translate="yes" xml:space="preserve">
          <source>For override attributes:</source>
          <target state="translated">재정의 속성의 경우 :</target>
        </trans-unit>
        <trans-unit id="7e1386c4c91542b502776fecfdb36e6e7d36f41b" translate="yes" xml:space="preserve">
          <source>For releases of the chef-client prior to 12.5 (chef-client 12.4 and earlier) the correct syntax is:</source>
          <target state="translated">12.5 이전 (chef-client 12.4 이하) 이전 chef-client 릴리스의 경우 올바른 구문은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="e516c02f933b9d1d4cb86742c0f316782436786e" translate="yes" xml:space="preserve">
          <source>For substituting an array with a hash:</source>
          <target state="translated">해시로 배열을 대체하는 경우 :</target>
        </trans-unit>
        <trans-unit id="bbc78b723cf10aad005cf5fe613e92bb583c3b07" translate="yes" xml:space="preserve">
          <source>For substituting an existing boolean using a hash:</source>
          <target state="translated">해시를 사용하여 기존 부울을 대체하는 경우 :</target>
        </trans-unit>
        <trans-unit id="6f7bcc37fabf284d53ddf56f70f8f187f088f1c6" translate="yes" xml:space="preserve">
          <source>For the action, defining the steps to configure the system using resources that are built into Chef</source>
          <target state="translated">조치의 경우 Chef에 내장 된 자원을 사용하여 시스템을 구성하는 단계 정의</target>
        </trans-unit>
        <trans-unit id="28868dddd2be617112c6cdd4ac8d1cbb26c80f59" translate="yes" xml:space="preserve">
          <source>For the chef-client, the private key should be copied to the system as &lt;code&gt;/etc/chef/client.pem&lt;/code&gt;.</source>
          <target state="translated">chef-client의 경우 개인 키를 시스템에 &lt;code&gt;/etc/chef/client.pem&lt;/code&gt; 으로 복사해야합니다 .</target>
        </trans-unit>
        <trans-unit id="7ab7b782ea481f6822d8485a3e12b62d1daedb52" translate="yes" xml:space="preserve">
          <source>For the chef-client, two important aspects of nodes are groups of attributes and run-lists. An attribute is a specific piece of data about the node, such as a network interface, a file system, the number of clients a service running on a node is capable of accepting, and so on. A run-list is an ordered list of recipes and/or roles that are run in an exact order. The node object consists of the run-list and node attributes, which is a JSON file that is stored on the Chef server. The chef-client gets a copy of the node object from the Chef server during each chef-client run and places an updated copy on the Chef server at the end of each chef-client run.</source>
          <target state="translated">chef-client의 경우 노드의 두 가지 중요한 측면은 속성 그룹과 실행 목록입니다. 속성은 네트워크 인터페이스, 파일 시스템, 노드에서 실행되는 서비스가 수용 할 수있는 클라이언트 수 등 노드에 대한 특정 데이터입니다. 실행 목록은 정확한 순서로 실행되는 레시피 및 / 또는 역할의 정렬 된 목록입니다. 노드 오브젝트는 실행 목록 및 노드 속성으로 구성되며 이는 Chef 서버에 저장된 JSON 파일입니다. chef-client는 각 chef-client 실행 중에 Chef 서버로부터 노드 오브젝트의 사본을 가져오고 각 chef-client 실행이 끝날 때 Chef 서버에 업데이트 된 사본을 배치합니다.</target>
        </trans-unit>
        <trans-unit id="56b97dc0067f71f52430faecc6ad1c90bd388688" translate="yes" xml:space="preserve">
          <source>For the entire recipe, see &lt;a href=&quot;https://github.com/onehealth-cookbooks/apache2/blob/68bdfba4680e70b3e90f77e40223dd535bf22c17/recipes/mod_apreq2.rb&quot;&gt;https://github.com/onehealth-cookbooks/apache2/blob/68bdfba4680e70b3e90f77e40223dd535bf22c17/recipes/mod_apreq2.rb&lt;/a&gt;.</source>
          <target state="translated">전체 레시피는 &lt;a href=&quot;https://github.com/onehealth-cookbooks/apache2/blob/68bdfba4680e70b3e90f77e40223dd535bf22c17/recipes/mod_apreq2.rb&quot;&gt;https://github.com/onehealth-cookbooks/apache2/blob/68bdfba4680e70b3e90f77e40223dd535bf22c17/recipes/mod_apreq2.rb를&lt;/a&gt; 참조 하십시오 .</target>
        </trans-unit>
        <trans-unit id="71616cc7c7e190fb0cd43ee31c51981de87d4cb4" translate="yes" xml:space="preserve">
          <source>For the example shown above:</source>
          <target state="translated">위에 표시된 예제의 경우 :</target>
        </trans-unit>
        <trans-unit id="b6ae6ec21eda173c7f2ac95ab2c5301937495120" translate="yes" xml:space="preserve">
          <source>For the user, the private key should be copied to the system as &lt;code&gt;/etc/chef/client.pem&lt;/code&gt;.</source>
          <target state="translated">사용자의 경우 개인 키는 &lt;code&gt;/etc/chef/client.pem&lt;/code&gt; 으로 시스템에 복사해야합니다 .</target>
        </trans-unit>
        <trans-unit id="cb32a497c0fbd6d3972514439aac97feae5797be" translate="yes" xml:space="preserve">
          <source>Forbidden. The user who made the request is not authorized to perform the action.</source>
          <target state="translated">금지되어 있습니다. 요청한 사용자는 조치를 수행 할 권한이 없습니다.</target>
        </trans-unit>
        <trans-unit id="dd08712d614f1591568e372dcde770be50cf3a9e" translate="yes" xml:space="preserve">
          <source>Force the deletion of the client when it is also a chef-validator.</source>
          <target state="translated">요리사 유효성 검사기 인 경우 클라이언트를 강제로 삭제하십시오.</target>
        </trans-unit>
        <trans-unit id="c292918b7399b1064fd09013fdc93f2f12f32442" translate="yes" xml:space="preserve">
          <source>Force the removal of a user from the organization&amp;rsquo;s &lt;code&gt;admins&lt;/code&gt; and &lt;code&gt;billing-admins&lt;/code&gt; groups.</source>
          <target state="translated">조직의 &lt;code&gt;admins&lt;/code&gt; 및 &lt;code&gt;billing-admins&lt;/code&gt; 그룹 에서 사용자를 강제로 제거 합니다.</target>
        </trans-unit>
        <trans-unit id="145e6b039db6e3a94defb2964a64423840cf279d" translate="yes" xml:space="preserve">
          <source>Force the removal of a user. May be used only with the &lt;code&gt;:remove&lt;/code&gt; action.</source>
          <target state="translated">사용자를 강제로 제거하십시오. &lt;code&gt;:remove&lt;/code&gt; 조치 와 함께 만 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="fda970a46887016dc3817eaf0651496cbaa80bc9" translate="yes" xml:space="preserve">
          <source>Force the upload of files even if they haven&amp;rsquo;t been changed. Default: &lt;code&gt;--no-force&lt;/code&gt;.</source>
          <target state="translated">파일이 변경되지 않은 경우에도 파일을 강제로 업로드합니다. 기본값 : &lt;code&gt;--no-force&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ee5d0ace7ab770e450853fa33f99439db9cf75b8" translate="yes" xml:space="preserve">
          <source>Fork the &lt;a href=&quot;https://github.com/chef/chef&quot;&gt;https://github.com/chef/chef&lt;/a&gt; repository to your GitHub account.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/chef/chef&quot;&gt;https://github.com/chef/chef&lt;/a&gt; 저장소를 GitHub 계정으로 포크하십시오 .</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
