<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="go">
    <body>
      <group id="go">
        <trans-unit id="21a1acda07d5a81b620099d4b26c49f4592ddd09" translate="yes" xml:space="preserve">
          <source>func (c *TCPConn) SetLinger(sec int) error</source>
          <target state="translated">func (c * TCPConn) SetLinger (sec int) 오류</target>
        </trans-unit>
        <trans-unit id="7e15451429d168015eb2c5e68e718e8755757d11" translate="yes" xml:space="preserve">
          <source>func (c *TCPConn) SetNoDelay(noDelay bool) error</source>
          <target state="translated">func (c * TCPConn) SetNoDelay (noDelay bool) 오류</target>
        </trans-unit>
        <trans-unit id="2f75a70d180eccc20f5df6023e943607e69bb811" translate="yes" xml:space="preserve">
          <source>func (c *TCPConn) SetReadBuffer(bytes int) error</source>
          <target state="translated">func (c * TCPConn) SetReadBuffer (bytes int) 오류</target>
        </trans-unit>
        <trans-unit id="e3e777aae42b1d931a62a1a4e138c76b81977e56" translate="yes" xml:space="preserve">
          <source>func (c *TCPConn) SetReadDeadline(t time.Time) error</source>
          <target state="translated">func (c * TCPConn) SetReadDeadline (t time.Time) 오류</target>
        </trans-unit>
        <trans-unit id="37314fb3e111894f91afe408900187ab83bff8cc" translate="yes" xml:space="preserve">
          <source>func (c *TCPConn) SetWriteBuffer(bytes int) error</source>
          <target state="translated">func (c * TCPConn) SetWriteBuffer (bytes int) 오류</target>
        </trans-unit>
        <trans-unit id="fe95f98a5d504b8b64a9b93e2952774328abfe46" translate="yes" xml:space="preserve">
          <source>func (c *TCPConn) SetWriteDeadline(t time.Time) error</source>
          <target state="translated">func (c * TCPConn) SetWriteDeadline (t time.Time) 오류</target>
        </trans-unit>
        <trans-unit id="b996825a300194fb6d0f77503eec07a04e7ac993" translate="yes" xml:space="preserve">
          <source>func (c *TCPConn) SyscallConn() (syscall.RawConn, error)</source>
          <target state="translated">func (c * TCPConn) SyscallConn () (syscall.RawConn, 오류)</target>
        </trans-unit>
        <trans-unit id="4105dab55984ef24b166d17aa95b84394507666b" translate="yes" xml:space="preserve">
          <source>func (c *TCPConn) Write(b []byte) (int, error)</source>
          <target state="translated">func (c * TCPConn) 쓰기 (b [] 바이트) (int, error)</target>
        </trans-unit>
        <trans-unit id="f305293e29609d1861d7e1e96a1697e13cfe863b" translate="yes" xml:space="preserve">
          <source>func (c *UDPConn) Close() error</source>
          <target state="translated">func (c * UDPConn) Close () 오류</target>
        </trans-unit>
        <trans-unit id="d4ba63a948652aab57d71c286c6c6ae63119384a" translate="yes" xml:space="preserve">
          <source>func (c *UDPConn) File() (f *os.File, err error)</source>
          <target state="translated">func (c * UDPConn) File () (f * os.File, 에러 에러)</target>
        </trans-unit>
        <trans-unit id="6ecc14d33a6af32e611249b1c640f4285afa26bd" translate="yes" xml:space="preserve">
          <source>func (c *UDPConn) LocalAddr() Addr</source>
          <target state="translated">func (c * UDPConn) LocalAddr () 주소</target>
        </trans-unit>
        <trans-unit id="77bd5ad0c3900814ef02d5c0524d48f2313c1457" translate="yes" xml:space="preserve">
          <source>func (c *UDPConn) Read(b []byte) (int, error)</source>
          <target state="translated">func (c * UDPConn) 읽기 (b [] 바이트) (int, error)</target>
        </trans-unit>
        <trans-unit id="8034980248510e1d91b690fb85e9f1cdc2d3f647" translate="yes" xml:space="preserve">
          <source>func (c *UDPConn) ReadFrom(b []byte) (int, Addr, error)</source>
          <target state="translated">func (c * UDPConn) ReadFrom (b [] 바이트) (int, Addr, error)</target>
        </trans-unit>
        <trans-unit id="0b7a1d87a04c9541a2be6323c8bf9e4f28744844" translate="yes" xml:space="preserve">
          <source>func (c *UDPConn) ReadFromUDP(b []byte) (int, *UDPAddr, error)</source>
          <target state="translated">func (c * UDPConn) ReadFromUDP (b [] 바이트) (int, * UDPAddr, 오류)</target>
        </trans-unit>
        <trans-unit id="44ad9979c01fba2c6b96d9beb0a1f5b9895cdd61" translate="yes" xml:space="preserve">
          <source>func (c *UDPConn) ReadMsgUDP(b, oob []byte) (n, oobn, flags int, addr *UDPAddr, err error)</source>
          <target state="translated">func (c * UDPConn) ReadMsgUDP (b, oob [] byte) (n, oobn, flags int, addr * UDPAddr, err error)</target>
        </trans-unit>
        <trans-unit id="b6df4a37f92460d3168560ad85d5f3b26d38c3d2" translate="yes" xml:space="preserve">
          <source>func (c *UDPConn) RemoteAddr() Addr</source>
          <target state="translated">func (c * UDPConn) RemoteAddr () 주소</target>
        </trans-unit>
        <trans-unit id="97cecf7a8276877ff762e5413bb43956358c2fd5" translate="yes" xml:space="preserve">
          <source>func (c *UDPConn) SetDeadline(t time.Time) error</source>
          <target state="translated">func (c * UDPConn) SetDeadline (t time.Time) 오류</target>
        </trans-unit>
        <trans-unit id="3bbcc13392f6ded1419b53b8a5878dd06de2031e" translate="yes" xml:space="preserve">
          <source>func (c *UDPConn) SetReadBuffer(bytes int) error</source>
          <target state="translated">func (c * UDPConn) SetReadBuffer (bytes int) 오류</target>
        </trans-unit>
        <trans-unit id="f32e64906956688c85a6ef4c43795bd30c7126fb" translate="yes" xml:space="preserve">
          <source>func (c *UDPConn) SetReadDeadline(t time.Time) error</source>
          <target state="translated">func (c * UDPConn) SetReadDeadline (t time.Time) 오류</target>
        </trans-unit>
        <trans-unit id="2450de42615f0fd0f6a87e3827d9dc8394b19ab3" translate="yes" xml:space="preserve">
          <source>func (c *UDPConn) SetWriteBuffer(bytes int) error</source>
          <target state="translated">func (c * UDPConn) SetWriteBuffer (bytes int) 오류</target>
        </trans-unit>
        <trans-unit id="2f6c59cd49e78afa2c336939a7a2c24f5e501a74" translate="yes" xml:space="preserve">
          <source>func (c *UDPConn) SetWriteDeadline(t time.Time) error</source>
          <target state="translated">func (c * UDPConn) SetWriteDeadline (t time.Time) 오류</target>
        </trans-unit>
        <trans-unit id="e9fa1d2f3b696f412969e72eb62531ed614dc8ab" translate="yes" xml:space="preserve">
          <source>func (c *UDPConn) SyscallConn() (syscall.RawConn, error)</source>
          <target state="translated">func (c * UDPConn) SyscallConn () (syscall.RawConn, 오류)</target>
        </trans-unit>
        <trans-unit id="421e95db00b20376ab2fa84cc640628ca7ebe401" translate="yes" xml:space="preserve">
          <source>func (c *UDPConn) Write(b []byte) (int, error)</source>
          <target state="translated">func (c * UDPConn) 쓰기 (b [] 바이트) (int, error)</target>
        </trans-unit>
        <trans-unit id="7fc816670d934177a1d84a3b514bb96dce9b6c96" translate="yes" xml:space="preserve">
          <source>func (c *UDPConn) WriteMsgUDP(b, oob []byte, addr *UDPAddr) (n, oobn int, err error)</source>
          <target state="translated">func (c * UDPConn) WriteMsgUDP (b, oob [] byte, addr * UDPAddr) (n, oobn int, err error)</target>
        </trans-unit>
        <trans-unit id="625e5a4db9de709ed121ae6c770d218971ba7c43" translate="yes" xml:space="preserve">
          <source>func (c *UDPConn) WriteTo(b []byte, addr Addr) (int, error)</source>
          <target state="translated">func (c * UDPConn) WriteTo (b [] byte, addr addr) (int, error)</target>
        </trans-unit>
        <trans-unit id="8475d37e355193c5dcaebae066c5265a20601467" translate="yes" xml:space="preserve">
          <source>func (c *UDPConn) WriteToUDP(b []byte, addr *UDPAddr) (int, error)</source>
          <target state="translated">func (c * UDPConn) WriteToUDP (b [] 바이트, addr * UDPAddr) (int, error)</target>
        </trans-unit>
        <trans-unit id="75dfc696d2af9f6c5fcbcc384cadc501f4195c5c" translate="yes" xml:space="preserve">
          <source>func (c *Uniform) At(x, y int) color.Color</source>
          <target state="translated">func (c * 균일) At (x, y int) 색상.</target>
        </trans-unit>
        <trans-unit id="167be80d7fbe22f975c34915900dbcf698a477ee" translate="yes" xml:space="preserve">
          <source>func (c *Uniform) Bounds() Rectangle</source>
          <target state="translated">func (c * 균일) 경계 () 직사각형</target>
        </trans-unit>
        <trans-unit id="9e971d2ebac156a3c05ffe81a335142744da68fb" translate="yes" xml:space="preserve">
          <source>func (c *Uniform) ColorModel() color.Model</source>
          <target state="translated">func (c * 제복) ColorModel () color.Model</target>
        </trans-unit>
        <trans-unit id="3c8dc0d945a4595abc74cecfeb0655ea79b416cd" translate="yes" xml:space="preserve">
          <source>func (c *Uniform) Convert(color.Color) color.Color</source>
          <target state="translated">func (c * 균일) 변환 (컬러. 컬러) 컬러. 컬러</target>
        </trans-unit>
        <trans-unit id="fed499522b3b8bb5f5f342962dc20b68e2aa10ee" translate="yes" xml:space="preserve">
          <source>func (c *Uniform) Opaque() bool</source>
          <target state="translated">func (c * 제복) 불투명 () bool</target>
        </trans-unit>
        <trans-unit id="72a4cfcf8570eed0cc3b815ea42a8f87063214c2" translate="yes" xml:space="preserve">
          <source>func (c *Uniform) RGBA() (r, g, b, a uint32)</source>
          <target state="translated">func (c * Uniform) RGBA () (r, g, b, uint32)</target>
        </trans-unit>
        <trans-unit id="f83a901adc288438eb2dd9329b3ad1780789af32" translate="yes" xml:space="preserve">
          <source>func (c *UnixConn) Close() error</source>
          <target state="translated">func (c * UnixConn) Close () 오류</target>
        </trans-unit>
        <trans-unit id="eab61b11c3ff3560375b24ff4577e93b609ed835" translate="yes" xml:space="preserve">
          <source>func (c *UnixConn) CloseRead() error</source>
          <target state="translated">func (c * UnixConn) CloseRead () 오류</target>
        </trans-unit>
        <trans-unit id="e15254280922685919c88d5aea59ea4557c706f9" translate="yes" xml:space="preserve">
          <source>func (c *UnixConn) CloseWrite() error</source>
          <target state="translated">func (c * UnixConn) CloseWrite () 오류</target>
        </trans-unit>
        <trans-unit id="6ce7c635ac890eca0e3b7d580441a7f0d6b447ac" translate="yes" xml:space="preserve">
          <source>func (c *UnixConn) File() (f *os.File, err error)</source>
          <target state="translated">func (c * UnixConn) File () (f * os.File, 에러 에러)</target>
        </trans-unit>
        <trans-unit id="988f49d778f73444ae31f37a4841029f582588ee" translate="yes" xml:space="preserve">
          <source>func (c *UnixConn) LocalAddr() Addr</source>
          <target state="translated">func (c * UnixConn) LocalAddr () 주소</target>
        </trans-unit>
        <trans-unit id="b58e99bd76365914c82431681d1adb1c489e244a" translate="yes" xml:space="preserve">
          <source>func (c *UnixConn) Read(b []byte) (int, error)</source>
          <target state="translated">func (c * UnixConn) 읽기 (b [] 바이트) (int, error)</target>
        </trans-unit>
        <trans-unit id="e255e0d395972016ef8e5a7b93ce9465729ff963" translate="yes" xml:space="preserve">
          <source>func (c *UnixConn) ReadFrom(b []byte) (int, Addr, error)</source>
          <target state="translated">func (c * UnixConn) ReadFrom (b [] 바이트) (int, Addr, error)</target>
        </trans-unit>
        <trans-unit id="a0613bc5576807c338cc6c24d773006301da79bb" translate="yes" xml:space="preserve">
          <source>func (c *UnixConn) ReadFromUnix(b []byte) (int, *UnixAddr, error)</source>
          <target state="translated">func (c * UnixConn) ReadFromUnix (b [] 바이트) (int, * UnixAddr, 오류)</target>
        </trans-unit>
        <trans-unit id="b6786af6c3ef4265d55f4d07bcb5cbda7246cedc" translate="yes" xml:space="preserve">
          <source>func (c *UnixConn) ReadMsgUnix(b, oob []byte) (n, oobn, flags int, addr *UnixAddr, err error)</source>
          <target state="translated">func (c * UnixConn) ReadMsgUnix (b, oob [] byte) (n, oobn, flags int, addr * UnixAddr, err error)</target>
        </trans-unit>
        <trans-unit id="29f67edb0266c181951de0fabbc5570ae67e059b" translate="yes" xml:space="preserve">
          <source>func (c *UnixConn) RemoteAddr() Addr</source>
          <target state="translated">func (c * UnixConn) RemoteAddr () 주소</target>
        </trans-unit>
        <trans-unit id="3efaef8960dd38b4a8eb0e212e047afa392f2a96" translate="yes" xml:space="preserve">
          <source>func (c *UnixConn) SetDeadline(t time.Time) error</source>
          <target state="translated">func (c * UnixConn) SetDeadline (t time.Time) 오류</target>
        </trans-unit>
        <trans-unit id="f0ae54d18bd98ea70a918499961ac7d543537384" translate="yes" xml:space="preserve">
          <source>func (c *UnixConn) SetReadBuffer(bytes int) error</source>
          <target state="translated">func (c * UnixConn) SetReadBuffer (bytes int) 오류</target>
        </trans-unit>
        <trans-unit id="5c9548caccf776ae50ce986d6ac194b6610d930c" translate="yes" xml:space="preserve">
          <source>func (c *UnixConn) SetReadDeadline(t time.Time) error</source>
          <target state="translated">func (c * UnixConn) SetReadDeadline (t time.Time) 오류</target>
        </trans-unit>
        <trans-unit id="c78c10d6503c17ddd9fa6ceb99b61b74f5a7e06e" translate="yes" xml:space="preserve">
          <source>func (c *UnixConn) SetWriteBuffer(bytes int) error</source>
          <target state="translated">func (c * UnixConn) SetWriteBuffer (bytes int) 오류</target>
        </trans-unit>
        <trans-unit id="5348b19d4be7e7a9a959826766ba184a38541584" translate="yes" xml:space="preserve">
          <source>func (c *UnixConn) SetWriteDeadline(t time.Time) error</source>
          <target state="translated">func (c * UnixConn) SetWriteDeadline (t time.Time) 오류</target>
        </trans-unit>
        <trans-unit id="f08fd68e694d812b5c952fd94cbe969d75b25d0c" translate="yes" xml:space="preserve">
          <source>func (c *UnixConn) SyscallConn() (syscall.RawConn, error)</source>
          <target state="translated">func (c * UnixConn) SyscallConn () (syscall.RawConn, 오류)</target>
        </trans-unit>
        <trans-unit id="8bff949fd41822f61e34e08b2031133da172ff0d" translate="yes" xml:space="preserve">
          <source>func (c *UnixConn) Write(b []byte) (int, error)</source>
          <target state="translated">func (c * UnixConn) 쓰기 (b [] 바이트) (int, error)</target>
        </trans-unit>
        <trans-unit id="d3c3b16f0041980e4a947abe80ebd92e69106c81" translate="yes" xml:space="preserve">
          <source>func (c *UnixConn) WriteMsgUnix(b, oob []byte, addr *UnixAddr) (n, oobn int, err error)</source>
          <target state="translated">func (c * UnixConn) WriteMsgUnix (b, oob [] byte, addr * UnixAddr) (n, oobn int, err error)</target>
        </trans-unit>
        <trans-unit id="479f12b9e94f18382b4d9686f81145972bb3b13b" translate="yes" xml:space="preserve">
          <source>func (c *UnixConn) WriteTo(b []byte, addr Addr) (int, error)</source>
          <target state="translated">func (c * UnixConn) WriteTo (b [] byte, addr addr) (int, error)</target>
        </trans-unit>
        <trans-unit id="875a6e7731be993428cb97d5fe1721ca11ff956a" translate="yes" xml:space="preserve">
          <source>func (c *UnixConn) WriteToUnix(b []byte, addr *UnixAddr) (int, error)</source>
          <target state="translated">func (c * UnixConn) WriteToUnix (b [] byte, addr * UnixAddr) (int, error)</target>
        </trans-unit>
        <trans-unit id="fcecdf55fe0d6a7fde4d69774ef0148997c12ea0" translate="yes" xml:space="preserve">
          <source>func (c Alpha) RGBA() (r, g, b, a uint32)</source>
          <target state="translated">func (c Alpha) RGBA () (r, g, b, aint32)</target>
        </trans-unit>
        <trans-unit id="31a059bf782d365ad536c5259de4f01947ee6e98" translate="yes" xml:space="preserve">
          <source>func (c Alpha16) RGBA() (r, g, b, a uint32)</source>
          <target state="translated">func (c Alpha16) RGBA () (r, g, b, uint32)</target>
        </trans-unit>
        <trans-unit id="f3dfe99000bdd0bad215048bef3bfd63833e37b8" translate="yes" xml:space="preserve">
          <source>func (c CMYK) RGBA() (uint32, uint32, uint32, uint32)</source>
          <target state="translated">func (c CMYK) RGBA () (uint32, uint32, uint32, uint32)</target>
        </trans-unit>
        <trans-unit id="2be7bd92eb6bf3ec9f8f1b3ec2a1fd844c799251" translate="yes" xml:space="preserve">
          <source>func (c CharData) Copy() CharData</source>
          <target state="translated">func (c CharData) Copy () CharData</target>
        </trans-unit>
        <trans-unit id="0bb87120aa39112033a5f981e862698eed4942bf" translate="yes" xml:space="preserve">
          <source>func (c Comment) Copy() Comment</source>
          <target state="translated">func (c 코멘트) Copy () 코멘트</target>
        </trans-unit>
        <trans-unit id="3e7fde05ebe645a7c3f4e3de417237a547b38909" translate="yes" xml:space="preserve">
          <source>func (c ConnState) String() string</source>
          <target state="translated">func (c ConnState) String () 문자열</target>
        </trans-unit>
        <trans-unit id="cc7395b2f4237cd22fc71ed9f27a5ea4f1fbe6f3" translate="yes" xml:space="preserve">
          <source>func (c Func) Release()</source>
          <target state="translated">func (c Func) 출시 ()</target>
        </trans-unit>
        <trans-unit id="80c1a63135c525706cf711419d2bd3738523f24d" translate="yes" xml:space="preserve">
          <source>func (c Gray) RGBA() (r, g, b, a uint32)</source>
          <target state="translated">func (c 회색) RGBA () (r, g, b, aint32)</target>
        </trans-unit>
        <trans-unit id="6c56f5d14dcc722b63873023714cd6011ffba4ba" translate="yes" xml:space="preserve">
          <source>func (c Gray16) RGBA() (r, g, b, a uint32)</source>
          <target state="translated">func (c Gray16) RGBA () (r, g, b, uint32)</target>
        </trans-unit>
        <trans-unit id="e98f288cf35219a221fa1a99f137b7ba236e6ea2" translate="yes" xml:space="preserve">
          <source>func (c NRGBA) RGBA() (r, g, b, a uint32)</source>
          <target state="translated">func (c NRGBA) RGBA () (r, g, b, uint32)</target>
        </trans-unit>
        <trans-unit id="fb03a4cadc1625fd7fe0168574cee3ff0696c0ed" translate="yes" xml:space="preserve">
          <source>func (c NRGBA64) RGBA() (r, g, b, a uint32)</source>
          <target state="translated">func (c NRGBA64) RGBA () (r, g, b, uint32)</target>
        </trans-unit>
        <trans-unit id="960cb85befe0b7a8c80f263d9a3b779e8b10f75a" translate="yes" xml:space="preserve">
          <source>func (c NYCbCrA) RGBA() (uint32, uint32, uint32, uint32)</source>
          <target state="translated">func (c NYCbCrA) RGBA () (uint32, uint32, uint32, uint32)</target>
        </trans-unit>
        <trans-unit id="6719c749c4033729c49307840215d70695c40e02" translate="yes" xml:space="preserve">
          <source>func (c RGBA) RGBA() (r, g, b, a uint32)</source>
          <target state="translated">func (c RGBA) RGBA () (r, g, b, uint32)</target>
        </trans-unit>
        <trans-unit id="e8b6c775b1f2bede5804d82eef1315b7ed955d8d" translate="yes" xml:space="preserve">
          <source>func (c RGBA64) RGBA() (r, g, b, a uint32)</source>
          <target state="translated">func (c RGBA64) RGBA () (r, g, b, uint32)</target>
        </trans-unit>
        <trans-unit id="c82b6ca00dbb69834d7f50a8f350ead46cb04d05" translate="yes" xml:space="preserve">
          <source>func (c YCbCr) RGBA() (uint32, uint32, uint32, uint32)</source>
          <target state="translated">func (c YCbCr) RGBA () (uint32, uint32, uint32, uint32)</target>
        </trans-unit>
        <trans-unit id="a83f653096841e71991ff0b4f1a07733f9b00ee7" translate="yes" xml:space="preserve">
          <source>func (cc *ClientConn) Close() error</source>
          <target state="translated">func (cc * ClientConn) Close () 오류</target>
        </trans-unit>
        <trans-unit id="7bb30d092cf9429765f3c72095806c8a5e4c6726" translate="yes" xml:space="preserve">
          <source>func (cc *ClientConn) Do(req *http.Request) (*http.Response, error)</source>
          <target state="translated">func (cc * ClientConn) Do (요청 * http. 요청) (* http. 응답, 오류)</target>
        </trans-unit>
        <trans-unit id="698f409a189a53278de16d70a66599de57d4eb83" translate="yes" xml:space="preserve">
          <source>func (cc *ClientConn) Hijack() (c net.Conn, r *bufio.Reader)</source>
          <target state="translated">func (cc * ClientConn) 도용 () (c net.Conn, r * bufio.Reader)</target>
        </trans-unit>
        <trans-unit id="a2cb4502838076d5385e01e6e1daa78ed571ac86" translate="yes" xml:space="preserve">
          <source>func (cc *ClientConn) Pending() int</source>
          <target state="translated">func (cc * ClientConn) Pending () int</target>
        </trans-unit>
        <trans-unit id="249039c840671bec6cf99098a09bd989c768b740" translate="yes" xml:space="preserve">
          <source>func (cc *ClientConn) Read(req *http.Request) (resp *http.Response, err error)</source>
          <target state="translated">func (cc * ClientConn) 읽기 (req * http.Request) (resp * http.Response, 오류 오류)</target>
        </trans-unit>
        <trans-unit id="a1761e42e23a017cd2f8a768b358bb7f940690d9" translate="yes" xml:space="preserve">
          <source>func (cc *ClientConn) Write(req *http.Request) error</source>
          <target state="translated">func (cc * ClientConn) Write (req * http.Request) 오류</target>
        </trans-unit>
        <trans-unit id="f696eeeee414e7acf4e01b6937ae17ba98a3893d" translate="yes" xml:space="preserve">
          <source>func (certList *CertificateList) HasExpired(now time.Time) bool</source>
          <target state="translated">func (certList * 인증서 목록) HasExpired (현재 시간. 시간) bool</target>
        </trans-unit>
        <trans-unit id="a4912e0f37d52c3b2c8f1071180669a26ffadd0b" translate="yes" xml:space="preserve">
          <source>func (cfg *Config) Fprint(output io.Writer, fset *token.FileSet, node interface{}) error</source>
          <target state="translated">func (cfg * Config) Fprint (출력 io.Writer, fset * token.FileSet, 노드 인터페이스 {}) 오류</target>
        </trans-unit>
        <trans-unit id="5bfea1754622bd49095bfd3b154948810e6ce8b0" translate="yes" xml:space="preserve">
          <source>func (check *Checker) Files(files []*ast.File) error</source>
          <target state="translated">func (Checker 검사) 파일 (파일 [] * ast.File) 오류</target>
        </trans-unit>
        <trans-unit id="060a1baaa1c3c715152aad909d753111a57265ab" translate="yes" xml:space="preserve">
          <source>func (ci *ColumnType) DatabaseTypeName() string</source>
          <target state="translated">func (ci * ColumnType) DatabaseTypeName () 문자열</target>
        </trans-unit>
        <trans-unit id="115ca675b5116231d33fada7e8faf7c98fedb7bd" translate="yes" xml:space="preserve">
          <source>func (ci *ColumnType) DecimalSize() (precision, scale int64, ok bool)</source>
          <target state="translated">func (ci * ColumnType) DecimalSize () (정밀도, 스케일 int64, ok bool)</target>
        </trans-unit>
        <trans-unit id="f7828ecc6c81d0f20b3ee98d36fd46429940a2fa" translate="yes" xml:space="preserve">
          <source>func (ci *ColumnType) Length() (length int64, ok bool)</source>
          <target state="translated">func (ci * ColumnType) Length () (길이 int64, ok bool)</target>
        </trans-unit>
        <trans-unit id="fa756ecc843fd610537534217392a9d66ae62418" translate="yes" xml:space="preserve">
          <source>func (ci *ColumnType) Name() string</source>
          <target state="translated">func (ci * ColumnType) 이름 () 문자열</target>
        </trans-unit>
        <trans-unit id="601b5285b200245602b543be1eb48d22fc3a214a" translate="yes" xml:space="preserve">
          <source>func (ci *ColumnType) Nullable() (nullable, ok bool)</source>
          <target state="translated">func (ci * ColumnType) Nullable () (nullable, ok bool)</target>
        </trans-unit>
        <trans-unit id="bef9226f6a141cc804d5a9b4dae544b6486835b6" translate="yes" xml:space="preserve">
          <source>func (ci *ColumnType) ScanType() reflect.Type</source>
          <target state="translated">func (ci * ColumnType) ScanType () 반영.</target>
        </trans-unit>
        <trans-unit id="209f95a498bf0a51b5d4047b14f514f9eae88de3" translate="yes" xml:space="preserve">
          <source>func (ci *Frames) Next() (frame Frame, more bool)</source>
          <target state="translated">func (ci * Frames) Next () (프레임 프레임, 더 부울)</target>
        </trans-unit>
        <trans-unit id="b440cd4aca26d637853e13ec9cf9706b8c03ce9c" translate="yes" xml:space="preserve">
          <source>func (client *Client) Call(serviceMethod string, args interface{}, reply interface{}) error</source>
          <target state="translated">func (클라이언트 * 클라이언트) 호출 (serviceMethod 문자열, 인수 인터페이스 {}, 응답 인터페이스 {}) 오류</target>
        </trans-unit>
        <trans-unit id="2e68d52fa501a64e0c460f71d0f499447f4ad6df" translate="yes" xml:space="preserve">
          <source>func (client *Client) Close() error</source>
          <target state="translated">func (클라이언트 * 클라이언트) Close () 오류</target>
        </trans-unit>
        <trans-unit id="66b5948e27f5d05ed3ce8ad9df197865b382aaf9" translate="yes" xml:space="preserve">
          <source>func (client *Client) Go(serviceMethod string, args interface{}, reply interface{}, done chan *Call) *Call</source>
          <target state="translated">func (클라이언트 * Client) Go (serviceMethod 문자열, 인수 인터페이스 {}, 응답 인터페이스 {}, 완료 chan * Call) * Call</target>
        </trans-unit>
        <trans-unit id="21532b33bffa661dcceea58572679021a57846aa" translate="yes" xml:space="preserve">
          <source>func (cmap CommentMap) Comments() []*CommentGroup</source>
          <target state="translated">func (cmap CommentMap) 설명 () [] * CommentGroup</target>
        </trans-unit>
        <trans-unit id="1f6f9ee104746e44b34803258b86a39a8dd498e1" translate="yes" xml:space="preserve">
          <source>func (cmap CommentMap) Filter(node Node) CommentMap</source>
          <target state="translated">func (cmap CommentMap) 필터 (노드 노드) CommentMap</target>
        </trans-unit>
        <trans-unit id="502c20df0591e5c28cca59336409f992243ce978" translate="yes" xml:space="preserve">
          <source>func (cmap CommentMap) String() string</source>
          <target state="translated">func (cmap CommentMap) String () 문자열</target>
        </trans-unit>
        <trans-unit id="f1c7d459993b2676fa3165bbd79f1583d50231a3" translate="yes" xml:space="preserve">
          <source>func (cmap CommentMap) Update(old, new Node) Node</source>
          <target state="translated">func (cmap CommentMap) 업데이트 (이전, 새 노드) 노드</target>
        </trans-unit>
        <trans-unit id="df42f6076b4c59968e0a72ea348a67b69cef06aa" translate="yes" xml:space="preserve">
          <source>func (cmsg *Cmsghdr) SetLen(length int)</source>
          <target state="translated">func (cmsg * Cmsghdr) SetLen (길이 정수)</target>
        </trans-unit>
        <trans-unit id="c6a9064ba96354a93c1654148e20a86fa0beeb8f" translate="yes" xml:space="preserve">
          <source>func (conf *Config) Check(path string, fset *token.FileSet, files []*ast.File, info *Info) (*Package, error)</source>
          <target state="translated">func (conf * Config) Check (경로 문자열, fset * token.FileSet, 파일 [] * ast.File, info * Info) (* 패키지, 오류)</target>
        </trans-unit>
        <trans-unit id="2c7e3b9dff1145e3d281042d8078d4d5c30dd44a" translate="yes" xml:space="preserve">
          <source>func (cs *ConnectionState) ExportKeyingMaterial(label string, context []byte, length int) ([]byte, error)</source>
          <target state="translated">func (cs * ConnectionState) ExportKeyingMaterial (레이블 문자열, 컨텍스트 [] 바이트, 길이 int) ([] 바이트, 오류)</target>
        </trans-unit>
        <trans-unit id="336e2cc22732a128c50064b59f8af55b48158ddb" translate="yes" xml:space="preserve">
          <source>func (ctxt *Context) Import(path string, srcDir string, mode ImportMode) (*Package, error)</source>
          <target state="translated">func (ctxt * Context) Import (경로 문자열, srcDir 문자열, 모드 ImportMode) (* 패키지, 오류)</target>
        </trans-unit>
        <trans-unit id="8ec4f1f4ed63ed715b8aaaa7dc39f3a451097fab" translate="yes" xml:space="preserve">
          <source>func (ctxt *Context) ImportDir(dir string, mode ImportMode) (*Package, error)</source>
          <target state="translated">func (ctxt * Context) ImportDir (dir 문자열, 모드 ImportMode) (* 패키지, 오류)</target>
        </trans-unit>
        <trans-unit id="2e9b2f94f907933d94f19889a147da8581dc1fd4" translate="yes" xml:space="preserve">
          <source>func (ctxt *Context) MatchFile(dir, name string) (match bool, err error)</source>
          <target state="translated">func (ctxt * Context) MatchFile (디렉토리, 이름 문자열) (match bool, err error)</target>
        </trans-unit>
        <trans-unit id="21c8bc11fee74b6036a20503f1fc21b2164c2b17" translate="yes" xml:space="preserve">
          <source>func (ctxt *Context) SrcDirs() []string</source>
          <target state="translated">func (ctxt * 컨텍스트) SrcDirs () [] 문자열</target>
        </trans-unit>
        <trans-unit id="8090482ac9e751290c572ea94df082854aa9cb2e" translate="yes" xml:space="preserve">
          <source>func (curve *CurveParams) Add(x1, y1, x2, y2 *big.Int) (*big.Int, *big.Int)</source>
          <target state="translated">func (곡선 * 곡선 매개 변수) 추가 (x1, y1, x2, y2 * big.Int) (* big.Int, * big.Int)</target>
        </trans-unit>
        <trans-unit id="95f3ea5f607ea68b5ef303fadf7ab7db981d7aba" translate="yes" xml:space="preserve">
          <source>func (curve *CurveParams) Double(x1, y1 *big.Int) (*big.Int, *big.Int)</source>
          <target state="translated">func (곡선 * 곡선 매개 변수) Double (x1, y1 * big.Int) (* big.Int, * big.Int)</target>
        </trans-unit>
        <trans-unit id="ba4e306aa0f3063ce3debf995de429988d404e31" translate="yes" xml:space="preserve">
          <source>func (curve *CurveParams) IsOnCurve(x, y *big.Int) bool</source>
          <target state="translated">func (곡선 * 곡선 매개 변수) IsOnCurve (x, y * big.Int) bool</target>
        </trans-unit>
        <trans-unit id="13f511220f8746969a7b14184c4be8627936f9b0" translate="yes" xml:space="preserve">
          <source>func (curve *CurveParams) Params() *CurveParams</source>
          <target state="translated">func (곡선 * 곡선 매개 변수) 매개 변수 () * 곡선 매개 변수</target>
        </trans-unit>
        <trans-unit id="a5d376e9cae73b3c7eb03e9b51b87e5000401c41" translate="yes" xml:space="preserve">
          <source>func (curve *CurveParams) ScalarBaseMult(k []byte) (*big.Int, *big.Int)</source>
          <target state="translated">func (곡선 * 곡선 매개 변수) ScalarBaseMult (k [] 바이트) (* big.Int, * big.Int)</target>
        </trans-unit>
        <trans-unit id="574aaad7fedff956e5b20478a39c5d84d07149be" translate="yes" xml:space="preserve">
          <source>func (curve *CurveParams) ScalarMult(Bx, By *big.Int, k []byte) (*big.Int, *big.Int)</source>
          <target state="translated">func (곡선 * 곡선 매개 변수) ScalarMult (Bx, By * big.Int, k [] byte) (* big.Int, * big.Int)</target>
        </trans-unit>
        <trans-unit id="b96c6aafc9789086f8c304d4c323a2b09d337267" translate="yes" xml:space="preserve">
          <source>func (d *BadDecl) End() token.Pos</source>
          <target state="translated">func (d * BadDecl) End () 토큰.</target>
        </trans-unit>
        <trans-unit id="b486758cc5b7265cf95e055c11da80cd215641fc" translate="yes" xml:space="preserve">
          <source>func (d *BadDecl) Pos() token.Pos</source>
          <target state="translated">func (d * BadDecl) Pos () 토큰.</target>
        </trans-unit>
        <trans-unit id="009331df2f5491c9818212a30c4f8e31ed33c28f" translate="yes" xml:space="preserve">
          <source>func (d *Data) AddTypes(name string, types []byte) error</source>
          <target state="translated">func (d * Data) AddTypes (이름 문자열, 유형 [] 바이트) 오류</target>
        </trans-unit>
        <trans-unit id="8d9ae42dfc4702dc1a58a849e1a01e6705ef3be4" translate="yes" xml:space="preserve">
          <source>func (d *Data) LineReader(cu *Entry) (*LineReader, error)</source>
          <target state="translated">func (d * 데이터) LineReader (cu * 항목) (* LineReader, 오류)</target>
        </trans-unit>
        <trans-unit id="ef3c26b7797c3d006e5697a1ace5a7dc1bb8db6c" translate="yes" xml:space="preserve">
          <source>func (d *Data) Ranges(e *Entry) ([][2]uint64, error)</source>
          <target state="translated">func (d * Data) 범위 (e * Entry) ([] [2] uint64, 오류)</target>
        </trans-unit>
        <trans-unit id="a12a67c072ee30ecef9efbd0785d0d49961eeb66" translate="yes" xml:space="preserve">
          <source>func (d *Data) Reader() *Reader</source>
          <target state="translated">func (d * 데이터) Reader () * 리더</target>
        </trans-unit>
        <trans-unit id="45fdcbf62c933372c4793e5bc00220cee80e2a52" translate="yes" xml:space="preserve">
          <source>func (d *Data) Type(off Offset) (Type, error)</source>
          <target state="translated">func (d * Data) 타입 (off Offset) (타입, 에러)</target>
        </trans-unit>
        <trans-unit id="f0cb38ea6f6f2cc90f80e7d57b034cf1beead9d2" translate="yes" xml:space="preserve">
          <source>func (d *Decoder) Decode(v interface{}) error</source>
          <target state="translated">func (d * 디코더) 디코딩 (v 인터페이스 {}) 오류</target>
        </trans-unit>
        <trans-unit id="e235cafde987f911a3f73eafad5d72d7fdb7c2e2" translate="yes" xml:space="preserve">
          <source>func (d *Decoder) DecodeElement(v interface{}, start *StartElement) error</source>
          <target state="translated">func (d * 디코더) DecodeElement (v interface {}, start * StartElement) 오류</target>
        </trans-unit>
        <trans-unit id="b796cb3a0b9f34d0d9b2f93630b9319e62f51579" translate="yes" xml:space="preserve">
          <source>func (d *Decoder) InputOffset() int64</source>
          <target state="translated">func (d * 디코더) InputOffset () int64</target>
        </trans-unit>
        <trans-unit id="1bc9d509ff9ca0a2cbb0a3f34df1fe184fc718aa" translate="yes" xml:space="preserve">
          <source>func (d *Decoder) RawToken() (Token, error)</source>
          <target state="translated">func (d * Decoder) RawToken () (토큰, 오류)</target>
        </trans-unit>
        <trans-unit id="82d517f14384dd6691f188af50ae214bf34ec1f8" translate="yes" xml:space="preserve">
          <source>func (d *Decoder) Skip() error</source>
          <target state="translated">func (d * Decoder) Skip () 오류</target>
        </trans-unit>
        <trans-unit id="10db94ee24fc4c6d47dda3db39eb788ce24d1f9a" translate="yes" xml:space="preserve">
          <source>func (d *Decoder) Token() (Token, error)</source>
          <target state="translated">func (d * 디코더) 토큰 () (토큰, 오류)</target>
        </trans-unit>
        <trans-unit id="122065eafbd683a1bda51a85d0c270dad178b1e5" translate="yes" xml:space="preserve">
          <source>func (d *Dialer) Dial(network, address string) (Conn, error)</source>
          <target state="translated">func (d * 전화 걸기) 다이얼 (네트워크, 주소 문자열) (계속, 오류)</target>
        </trans-unit>
        <trans-unit id="14cde591704580564ca0332e3a44b2cdb4016f2b" translate="yes" xml:space="preserve">
          <source>func (d *Dialer) DialContext(ctx context.Context, network, address string) (Conn, error)</source>
          <target state="translated">func (d * Dialer) DialContext (ctx context.Context, 네트워크, 주소 문자열) (Conn, error)</target>
        </trans-unit>
        <trans-unit id="fda2d84aac0ccd789890d4892e67851d1468eed4" translate="yes" xml:space="preserve">
          <source>func (d *DotNode) Copy() Node</source>
          <target state="translated">func (d * DotNode) Copy () 노드</target>
        </trans-unit>
        <trans-unit id="d1d4e670325ce76df4293858bbeff2097aee7028" translate="yes" xml:space="preserve">
          <source>func (d *DotNode) String() string</source>
          <target state="translated">func (d * DotNode) String () 문자열</target>
        </trans-unit>
        <trans-unit id="670e3abe3f7eb24bab0a5839187b1e2e99d6b55e" translate="yes" xml:space="preserve">
          <source>func (d *DotNode) Type() NodeType</source>
          <target state="translated">func (d * DotNode) 유형 () NodeType</target>
        </trans-unit>
        <trans-unit id="cf63fb535a9d105b330a1c7e9ea64f8f88ce8840" translate="yes" xml:space="preserve">
          <source>func (d *FuncDecl) End() token.Pos</source>
          <target state="translated">func (d * FuncDecl) End () 토큰.</target>
        </trans-unit>
        <trans-unit id="a2e3db278fa556f7dd46bcb4cbb5a19b13c6ee84" translate="yes" xml:space="preserve">
          <source>func (d *FuncDecl) Pos() token.Pos</source>
          <target state="translated">func (d * FuncDecl) Pos () 토큰.</target>
        </trans-unit>
        <trans-unit id="6cef12764f53378df4ba36a831104f0d2a6a4b0e" translate="yes" xml:space="preserve">
          <source>func (d *GenDecl) End() token.Pos</source>
          <target state="translated">func (d * GenDecl) End () 토큰.</target>
        </trans-unit>
        <trans-unit id="47459a841f2f0115814379ff8ad81ed55119ea92" translate="yes" xml:space="preserve">
          <source>func (d *GenDecl) Pos() token.Pos</source>
          <target state="translated">func (d * GenDecl) Pos () 토큰.</target>
        </trans-unit>
        <trans-unit id="7c4559573199a9ff51a4ce6021784440785dc55c" translate="yes" xml:space="preserve">
          <source>func (d *WordDecoder) Decode(word string) (string, error)</source>
          <target state="translated">func (d * WordDecoder) 디코딩 (단어 문자열) (문자열, 오류)</target>
        </trans-unit>
        <trans-unit id="7c513b755d9c4703d6f206560027d7043434e333" translate="yes" xml:space="preserve">
          <source>func (d *WordDecoder) DecodeHeader(header string) (string, error)</source>
          <target state="translated">func (d * WordDecoder) DecodeHeader (헤더 문자열) (문자열, 오류)</target>
        </trans-unit>
        <trans-unit id="e669a0a16d5a7130b0eb5fbe810cf512ec3bf4c0" translate="yes" xml:space="preserve">
          <source>func (d ChanDir) String() string</source>
          <target state="translated">func (d ChanDir) 문자열 () 문자열</target>
        </trans-unit>
        <trans-unit id="dbe098b203d55f8317576c61a74ced86aa18d6ed" translate="yes" xml:space="preserve">
          <source>func (d Delim) String() string</source>
          <target state="translated">func (d Delim) String () 문자열</target>
        </trans-unit>
        <trans-unit id="7a1ea28963fa7476506b549876849e2c8d5e22fa" translate="yes" xml:space="preserve">
          <source>func (d Dir) Open(name string) (File, error)</source>
          <target state="translated">func (d Dir) Open (이름 문자열) (파일, 오류)</target>
        </trans-unit>
        <trans-unit id="f2e65b36ad15b15bf44e9af4b8b2487fd03f1a14" translate="yes" xml:space="preserve">
          <source>func (d Directive) Copy() Directive</source>
          <target state="translated">func (d 지시문) Copy () 지시문</target>
        </trans-unit>
        <trans-unit id="e9019d9484f7c6ecee1423a5386d52ce75531a86" translate="yes" xml:space="preserve">
          <source>func (d Duration) Hours() float64</source>
          <target state="translated">func (d Duration) 시간 () float64</target>
        </trans-unit>
        <trans-unit id="d69da0dd5011c54307d85b29a781eaf494d55b45" translate="yes" xml:space="preserve">
          <source>func (d Duration) Microseconds() int64</source>
          <target state="translated">func (d Duration) 마이크로 초 () int64</target>
        </trans-unit>
        <trans-unit id="948f1d60ab2a32b3ae937644b66962edd239fdb9" translate="yes" xml:space="preserve">
          <source>func (d Duration) Milliseconds() int64</source>
          <target state="translated">func (d Duration) 밀리 초 () int64</target>
        </trans-unit>
        <trans-unit id="23d88a3591fa011d3e358134b88648177e0f75d6" translate="yes" xml:space="preserve">
          <source>func (d Duration) Minutes() float64</source>
          <target state="translated">func (d 기간) 분 () float64</target>
        </trans-unit>
        <trans-unit id="851509c06fffe0e0b768a2b2fe5a1fb63f5675de" translate="yes" xml:space="preserve">
          <source>func (d Duration) Nanoseconds() int64</source>
          <target state="translated">func (d Duration) 나노초 () int64</target>
        </trans-unit>
        <trans-unit id="cf2d6e4ce75fb80eb9489fd84d7a1b4f76e24f97" translate="yes" xml:space="preserve">
          <source>func (d Duration) Round(m Duration) Duration</source>
          <target state="translated">펑크 (d 지속 시간) 라운드 (m 지속 시간) 지속 시간</target>
        </trans-unit>
        <trans-unit id="a70995f83f5bdb984f8431ad6091395fc9b37afc" translate="yes" xml:space="preserve">
          <source>func (d Duration) Seconds() float64</source>
          <target state="translated">func (d Duration) 초 () float64</target>
        </trans-unit>
        <trans-unit id="d2b737cc1372d4d853a67153eeeb83db363663a6" translate="yes" xml:space="preserve">
          <source>func (d Duration) String() string</source>
          <target state="translated">func (d Duration) String () 문자열</target>
        </trans-unit>
        <trans-unit id="91b76eb26932d73934b8ecdac6c47d8cd6ad420c" translate="yes" xml:space="preserve">
          <source>func (d Duration) Truncate(m Duration) Duration</source>
          <target state="translated">func (d Duration) 잘라 내기 (m Duration) 지속 시간</target>
        </trans-unit>
        <trans-unit id="991f13e8c1c9dd88f665547809a63aa6014ac5c2" translate="yes" xml:space="preserve">
          <source>func (d Weekday) String() string</source>
          <target state="translated">func (d 평일) String () 문자열</target>
        </trans-unit>
        <trans-unit id="9dda61d4810d90f9c2441230961b7434c9afb1a9" translate="yes" xml:space="preserve">
          <source>func (db *DB) Begin() (*Tx, error)</source>
          <target state="translated">func (db * DB) Begin () (* Tx, 오류)</target>
        </trans-unit>
        <trans-unit id="ba6fc249ae5fbb2bf4e9802a35aa7fd1cde31145" translate="yes" xml:space="preserve">
          <source>func (db *DB) BeginTx(ctx context.Context, opts *TxOptions) (*Tx, error)</source>
          <target state="translated">func (db * DB) BeginTx (ctx 컨텍스트. 컨텍스트, * TxOptions 선택) (* Tx, 오류)</target>
        </trans-unit>
        <trans-unit id="8ed1c0c552530eba701e32bb7c32d3112ced8592" translate="yes" xml:space="preserve">
          <source>func (db *DB) Close() error</source>
          <target state="translated">func (db * DB) Close () 오류</target>
        </trans-unit>
        <trans-unit id="f3e5a001211e00abd74ac13f7527f1d630a85d3e" translate="yes" xml:space="preserve">
          <source>func (db *DB) Conn(ctx context.Context) (*Conn, error)</source>
          <target state="translated">func (db * DB) Conn (ctx context.Context) (* Conn, 오류)</target>
        </trans-unit>
        <trans-unit id="c46d7be89872766b8c868f7e50248f071ec01760" translate="yes" xml:space="preserve">
          <source>func (db *DB) Driver() driver.Driver</source>
          <target state="translated">func (db * DB) Driver () 드라이버.</target>
        </trans-unit>
        <trans-unit id="c1eacb4e759eb62a9ab206357af2245b59580ce5" translate="yes" xml:space="preserve">
          <source>func (db *DB) Exec(query string, args ...interface{}) (Result, error)</source>
          <target state="translated">func (db * DB) Exec (쿼리 문자열, args ... interface {}) (결과, 오류)</target>
        </trans-unit>
        <trans-unit id="924db219408afbce39324f2ede256c206da69c41" translate="yes" xml:space="preserve">
          <source>func (db *DB) ExecContext(ctx context.Context, query string, args ...interface{}) (Result, error)</source>
          <target state="translated">func (db * DB) ExecContext (ctx context.Context, 쿼리 문자열, args ... interface {}) (결과, 오류)</target>
        </trans-unit>
        <trans-unit id="d9dd7ef295451febdf9df3aa4a4c5ae896c74729" translate="yes" xml:space="preserve">
          <source>func (db *DB) Ping() error</source>
          <target state="translated">func (db * DB) Ping () 오류</target>
        </trans-unit>
        <trans-unit id="e1234abe2b44cac07483361df83d91322b84bc2e" translate="yes" xml:space="preserve">
          <source>func (db *DB) PingContext(ctx context.Context) error</source>
          <target state="translated">func (db * DB) PingContext (ctx context.Context) 오류</target>
        </trans-unit>
        <trans-unit id="bfeb766a4095bfd9e3917112bc9bffe3d1637576" translate="yes" xml:space="preserve">
          <source>func (db *DB) Prepare(query string) (*Stmt, error)</source>
          <target state="translated">func (db * DB) Prepare (쿼리 문자열) (* Stmt, error)</target>
        </trans-unit>
        <trans-unit id="b03b8b30d37d980306a08d1731e5950292939858" translate="yes" xml:space="preserve">
          <source>func (db *DB) PrepareContext(ctx context.Context, query string) (*Stmt, error)</source>
          <target state="translated">func (db * DB) PrepareContext (ctx context.Context, 쿼리 문자열) (* Stmt, error)</target>
        </trans-unit>
        <trans-unit id="8ee2b561a62070b48d5f4b6364377b39c1a5dab4" translate="yes" xml:space="preserve">
          <source>func (db *DB) Query(query string, args ...interface{}) (*Rows, error)</source>
          <target state="translated">func (db * DB) 쿼리 (쿼리 문자열, args ... interface {}) (* 행, 오류)</target>
        </trans-unit>
        <trans-unit id="170b5c3254ef5d1ddaabb00bae771cad4bb419c1" translate="yes" xml:space="preserve">
          <source>func (db *DB) QueryContext(ctx context.Context, query string, args ...interface{}) (*Rows, error)</source>
          <target state="translated">func (db * DB) QueryContext (ctx context.Context, 쿼리 문자열, 인수 ... 인터페이스 {}) (* 행, 오류)</target>
        </trans-unit>
        <trans-unit id="06643007fd6d754e0eda36429f3c493108e3a406" translate="yes" xml:space="preserve">
          <source>func (db *DB) QueryRow(query string, args ...interface{}) *Row</source>
          <target state="translated">func (db * DB) QueryRow (쿼리 문자열, 인수 ... 인터페이스 {}) * 행</target>
        </trans-unit>
        <trans-unit id="fcdb0b9a5c75cca3de33b5006d7867e08dc20473" translate="yes" xml:space="preserve">
          <source>func (db *DB) QueryRowContext(ctx context.Context, query string, args ...interface{}) *Row</source>
          <target state="translated">func (db * DB) QueryRowContext (ctx context.Context, 쿼리 문자열, 인수 ... 인터페이스 {}) * 행</target>
        </trans-unit>
        <trans-unit id="4128f6136c3ffab354cdaf970664c317f44683a7" translate="yes" xml:space="preserve">
          <source>func (db *DB) SetConnMaxLifetime(d time.Duration)</source>
          <target state="translated">func (db * DB) SetConnMaxLifetime (d 시간. 지속 시간)</target>
        </trans-unit>
        <trans-unit id="2695ff5f34cf8258545373c0836d811ca02651c9" translate="yes" xml:space="preserve">
          <source>func (db *DB) SetMaxIdleConns(n int)</source>
          <target state="translated">func (db * DB) SetMaxIdleConns (n ​​int)</target>
        </trans-unit>
        <trans-unit id="ddbb0062d1e58943ffd485e0d000b300f2a53164" translate="yes" xml:space="preserve">
          <source>func (db *DB) SetMaxOpenConns(n int)</source>
          <target state="translated">func (db * DB) SetMaxOpenConns (n ​​int)</target>
        </trans-unit>
        <trans-unit id="debcedaa07bdb5129d6e4e8a663cc117327d771a" translate="yes" xml:space="preserve">
          <source>func (db *DB) Stats() DBStats</source>
          <target state="translated">func (db * DB) 통계 () DBStats</target>
        </trans-unit>
        <trans-unit id="4e65fe2fd30431fbb12a8a7cfaef0bfcec7561a0" translate="yes" xml:space="preserve">
          <source>func (dec *Decoder) Buffered() io.Reader</source>
          <target state="translated">func (dec * Decoder) 버퍼링 됨 () io.Reader</target>
        </trans-unit>
        <trans-unit id="8e3f1fac58e40d1c375caff3db7b3671f01215ab" translate="yes" xml:space="preserve">
          <source>func (dec *Decoder) Decode(e interface{}) error</source>
          <target state="translated">func (dec * Decoder) 디코딩 (e interface {}) 오류</target>
        </trans-unit>
        <trans-unit id="c2d499de090a1392832f77cd142aa6cdfea116e7" translate="yes" xml:space="preserve">
          <source>func (dec *Decoder) Decode(v interface{}) error</source>
          <target state="translated">func (dec * Decoder) 디코딩 (v interface {}) 오류</target>
        </trans-unit>
        <trans-unit id="0adfafa9ab0931fe7ecea9ac740c6aac55139eee" translate="yes" xml:space="preserve">
          <source>func (dec *Decoder) DecodeValue(v reflect.Value) error</source>
          <target state="translated">func (dec * Decoder) DecodeValue (v reflect.Value) 오류</target>
        </trans-unit>
        <trans-unit id="3ffa3cd501f3d69172bdbb1c2e525cf535dc16dd" translate="yes" xml:space="preserve">
          <source>func (dec *Decoder) DisallowUnknownFields()</source>
          <target state="translated">func (dec * Decoder) DisallowUnknownFields ()</target>
        </trans-unit>
        <trans-unit id="4491f64b4e28dff23a5cb91b93f1cd82ffa6022a" translate="yes" xml:space="preserve">
          <source>func (dec *Decoder) More() bool</source>
          <target state="translated">func (dec * Decoder) More () 부울</target>
        </trans-unit>
        <trans-unit id="c0f6298ee269167ccc84849a77795b61f33f772e" translate="yes" xml:space="preserve">
          <source>func (dec *Decoder) Token() (Token, error)</source>
          <target state="translated">func (dec * Decoder) 토큰 () (토큰, 오류)</target>
        </trans-unit>
        <trans-unit id="81c64f01f5e0ef95a766565f9fe44d66973fd3ae" translate="yes" xml:space="preserve">
          <source>func (dec *Decoder) UseNumber()</source>
          <target state="translated">func (dec * Decoder) UseNumber ()</target>
        </trans-unit>
        <trans-unit id="c6002fa419db67838261071d2518ab6d0906b8da" translate="yes" xml:space="preserve">
          <source>func (e *AddrError) Error() string</source>
          <target state="translated">func (e * AddrError) Error () 문자열</target>
        </trans-unit>
        <trans-unit id="67b8be64b8094f512fba86a60547195109137322" translate="yes" xml:space="preserve">
          <source>func (e *AddrError) Temporary() bool</source>
          <target state="translated">func (e * AddrError) 임시 () 부울</target>
        </trans-unit>
        <trans-unit id="c5b6547f1968fae9a27fd05f78c7cbf436170431" translate="yes" xml:space="preserve">
          <source>func (e *AddrError) Timeout() bool</source>
          <target state="translated">func (e * AddrError) 시간 초과 () 부울</target>
        </trans-unit>
        <trans-unit id="121c3b3bba612133a80648a9b4a33065bba523d0" translate="yes" xml:space="preserve">
          <source>func (e *DNSConfigError) Error() string</source>
          <target state="translated">func (e * DNSConfigError) Error () 문자열</target>
        </trans-unit>
        <trans-unit id="0120da149eab5cf0ea8cba31f3f5c858c533d9cd" translate="yes" xml:space="preserve">
          <source>func (e *DNSConfigError) Temporary() bool</source>
          <target state="translated">func (e * DNSConfigError) 임시 () 부울</target>
        </trans-unit>
        <trans-unit id="457ac483dbc1777301b6f17229dbf5be61ce47ba" translate="yes" xml:space="preserve">
          <source>func (e *DNSConfigError) Timeout() bool</source>
          <target state="translated">func (e * DNSConfigError) 시간 초과 () 부울</target>
        </trans-unit>
        <trans-unit id="524e8dd347b16d391e3b0463c6cd16ee4ae3ca10" translate="yes" xml:space="preserve">
          <source>func (e *DNSConfigError) Unwrap() error</source>
          <target state="translated">func (e * DNSConfigError) Unwrap () 오류</target>
        </trans-unit>
        <trans-unit id="61cec5dffce35c2f125bfab31dd67ecefa3075c7" translate="yes" xml:space="preserve">
          <source>func (e *DNSError) Error() string</source>
          <target state="translated">func (e * DNSError) Error () 문자열</target>
        </trans-unit>
        <trans-unit id="ca1f97c84d4303eca844c80654374ae3f65f7689" translate="yes" xml:space="preserve">
          <source>func (e *DNSError) Temporary() bool</source>
          <target state="translated">func (e * DNSError) 임시 () 부울</target>
        </trans-unit>
        <trans-unit id="de919e0681f271d9768c31cfc54d65cdd8d9685d" translate="yes" xml:space="preserve">
          <source>func (e *DNSError) Timeout() bool</source>
          <target state="translated">func (e * DNSError) 시간 초과 () 부울</target>
        </trans-unit>
        <trans-unit id="ac8e32234f6033b269d7bcfd08ec96f8b17ca661" translate="yes" xml:space="preserve">
          <source>func (e *DecodingError) Error() string</source>
          <target state="translated">func (e * DecodingError) Error () 문자열</target>
        </trans-unit>
        <trans-unit id="1aa91d6df0e60fb4ee49e6a20dbaa5ffe0331574" translate="yes" xml:space="preserve">
          <source>func (e *Element) Next() *Element</source>
          <target state="translated">func (e * 요소) 다음 () * 요소</target>
        </trans-unit>
        <trans-unit id="26ae0b2956540834d3d45cd47e6b2c1c3fad0cc6" translate="yes" xml:space="preserve">
          <source>func (e *Element) Prev() *Element</source>
          <target state="translated">func (e * 요소) Prev () * 요소</target>
        </trans-unit>
        <trans-unit id="39e6a59e5d9f6a9363b3f64d979bec4cbeec2cfe" translate="yes" xml:space="preserve">
          <source>func (e *Entry) AttrField(a Attr) *Field</source>
          <target state="translated">func (e * 항목) AttrField (a Attr) * 필드</target>
        </trans-unit>
        <trans-unit id="361ffaa724132ee14b009c85d1d28ebb18a2c6ad" translate="yes" xml:space="preserve">
          <source>func (e *Entry) Val(a Attr) interface{}</source>
          <target state="translated">func (e * Entry) Val (a Attr) 인터페이스 {}</target>
        </trans-unit>
        <trans-unit id="cd8a21442f1af763a2d7b09f27750d075547cb32" translate="yes" xml:space="preserve">
          <source>func (e *Error) Error() string</source>
          <target state="translated">func (e * Error) Error () 문자열</target>
        </trans-unit>
        <trans-unit id="f44c87a64f0b03d64112a69bb91912d3fc19c7d3" translate="yes" xml:space="preserve">
          <source>func (e *Error) Temporary() bool</source>
          <target state="translated">func (e * 오류) 임시 () 부울</target>
        </trans-unit>
        <trans-unit id="2d6d467b4ada22c917c7207e519bb92af0424078" translate="yes" xml:space="preserve">
          <source>func (e *Error) Timeout() bool</source>
          <target state="translated">func (e * Error) Timeout () 부울</target>
        </trans-unit>
        <trans-unit id="78c8ab716fa1f2c9bb7ae5b48d87c0807d88132b" translate="yes" xml:space="preserve">
          <source>func (e *Error) Unwrap() error</source>
          <target state="translated">func (e * Error) Unwrap () 오류</target>
        </trans-unit>
        <trans-unit id="041799c0d9fb2684f655f55d61c0ef220b5e47e9" translate="yes" xml:space="preserve">
          <source>func (e *ExitError) Error() string</source>
          <target state="translated">func (e * ExitError) Error () 문자열</target>
        </trans-unit>
        <trans-unit id="b7aff18093a663fb626d6ba0755154ecff5a8bd4" translate="yes" xml:space="preserve">
          <source>func (e *FormatError) Error() string</source>
          <target state="translated">func (e * FormatError) Error () 문자열</target>
        </trans-unit>
        <trans-unit id="74ac915c3c1ed048a052748d15f3b8472670d6d2" translate="yes" xml:space="preserve">
          <source>func (e *InvalidUTF8Error) Error() string</source>
          <target state="translated">func (e * InvalidUTF8Error) Error () 문자열</target>
        </trans-unit>
        <trans-unit id="0f16fb232f0e4ba6f5e857e773836825f781a8c7" translate="yes" xml:space="preserve">
          <source>func (e *InvalidUnmarshalError) Error() string</source>
          <target state="translated">func (e * InvalidUnmarshalError) Error () 문자열</target>
        </trans-unit>
        <trans-unit id="3270d6bd62bb05b95e14460fe0286775384aade9" translate="yes" xml:space="preserve">
          <source>func (e *LinkError) Error() string</source>
          <target state="translated">func (e * LinkError) Error () 문자열</target>
        </trans-unit>
        <trans-unit id="52e2e08d8a699da60b5564f970c50649a7c78091" translate="yes" xml:space="preserve">
          <source>func (e *LinkError) Unwrap() error</source>
          <target state="translated">func (e * LinkError) Unwrap () 오류</target>
        </trans-unit>
        <trans-unit id="63393c6c196d1ae5e11bec31d92f1c4e9affe4a0" translate="yes" xml:space="preserve">
          <source>func (e *MarshalerError) Error() string</source>
          <target state="translated">func (e * MarshalerError) Error () 문자열</target>
        </trans-unit>
        <trans-unit id="60a98444fda1558a15566d20099a2beb703d0a6e" translate="yes" xml:space="preserve">
          <source>func (e *MarshalerError) Unwrap() error</source>
          <target state="translated">func (e * MarshalerError) Unwrap () 오류</target>
        </trans-unit>
        <trans-unit id="aa81b927d26f0ce73d99b90ea170123a60f47632" translate="yes" xml:space="preserve">
          <source>func (e *MultiplePackageError) Error() string</source>
          <target state="translated">func (e * MultiplePackageError) Error () 문자열</target>
        </trans-unit>
        <trans-unit id="b3c4dbd09ff6c725b1ae68336cf5eea61b2a2e28" translate="yes" xml:space="preserve">
          <source>func (e *NoGoError) Error() string</source>
          <target state="translated">func (e * NoGoError) Error () 문자열</target>
        </trans-unit>
        <trans-unit id="21c5c1708e5773d806eea0b34d8e0e0156a032d5" translate="yes" xml:space="preserve">
          <source>func (e *NumError) Error() string</source>
          <target state="translated">func (e * NumError) Error () 문자열</target>
        </trans-unit>
        <trans-unit id="55eca42be6c63b70f1523aa24f12820195c67eb4" translate="yes" xml:space="preserve">
          <source>func (e *OpError) Error() string</source>
          <target state="translated">func (e * OpError) Error () 문자열</target>
        </trans-unit>
        <trans-unit id="6915dcef0ce6b5ca4d0d04b7ae5004311c7d402a" translate="yes" xml:space="preserve">
          <source>func (e *OpError) Temporary() bool</source>
          <target state="translated">func (e * OpError) 임시 () 부울</target>
        </trans-unit>
        <trans-unit id="20f0d43ad4561c6891aca278666fbe0e4134fa24" translate="yes" xml:space="preserve">
          <source>func (e *OpError) Timeout() bool</source>
          <target state="translated">func (e * OpError) 시간 초과 () 부울</target>
        </trans-unit>
        <trans-unit id="a4e6110b1aad2eb05705960ff203fa93ff4e329d" translate="yes" xml:space="preserve">
          <source>func (e *OpError) Unwrap() error</source>
          <target state="translated">func (e * OpError) Unwrap () 오류</target>
        </trans-unit>
        <trans-unit id="12580fcd4423ef80a76f6073b412f3627f0015cc" translate="yes" xml:space="preserve">
          <source>func (e *ParseError) Error() string</source>
          <target state="translated">func (e * ParseError) Error () 문자열</target>
        </trans-unit>
        <trans-unit id="0783a20149f853a883dee68d30bc5be62bc39b14" translate="yes" xml:space="preserve">
          <source>func (e *ParseError) Unwrap() error</source>
          <target state="translated">func (e * ParseError) Unwrap () 오류</target>
        </trans-unit>
        <trans-unit id="b1773e48572bffb6a4dec24a4881d3c4433b43c5" translate="yes" xml:space="preserve">
          <source>func (e *PathError) Error() string</source>
          <target state="translated">func (e * PathError) Error () 문자열</target>
        </trans-unit>
        <trans-unit id="5213045299da0866aeba072b5c7cc0132e0b9679" translate="yes" xml:space="preserve">
          <source>func (e *PathError) Timeout() bool</source>
          <target state="translated">func (e * PathError) Timeout () 부울</target>
        </trans-unit>
        <trans-unit id="6f0125a979a134510ceed94dd38f09ae6ae2cf6f" translate="yes" xml:space="preserve">
          <source>func (e *PathError) Unwrap() error</source>
          <target state="translated">func (e * PathError) Unwrap () 오류</target>
        </trans-unit>
        <trans-unit id="5116f6db06526de830cc656467cfcaf246858c24" translate="yes" xml:space="preserve">
          <source>func (e *ReadError) Error() string</source>
          <target state="translated">func (e * ReadError) Error () 문자열</target>
        </trans-unit>
        <trans-unit id="fa7299a585fd011a2ce3d65a56bf684507aa067f" translate="yes" xml:space="preserve">
          <source>func (e *SyntaxError) Error() string</source>
          <target state="translated">func (e * SyntaxError) Error () 문자열</target>
        </trans-unit>
        <trans-unit id="18917348b4e8e94443c61160d65bddfe74f812b0" translate="yes" xml:space="preserve">
          <source>func (e *SyscallError) Error() string</source>
          <target state="translated">func (e * SyscallError) Error () 문자열</target>
        </trans-unit>
        <trans-unit id="b36fdd3e07b389febd5391f4ce5eaffd9ec99cd3" translate="yes" xml:space="preserve">
          <source>func (e *SyscallError) Timeout() bool</source>
          <target state="translated">func (e * SyscallError) 시간 초과 () 부울</target>
        </trans-unit>
        <trans-unit id="667dc56285569045055a3efe4975392a75305fff" translate="yes" xml:space="preserve">
          <source>func (e *SyscallError) Unwrap() error</source>
          <target state="translated">func (e * SyscallError) Unwrap () 오류</target>
        </trans-unit>
        <trans-unit id="d96e38f2c7e38f7706108515eb933e1891228a99" translate="yes" xml:space="preserve">
          <source>func (e *TagPathError) Error() string</source>
          <target state="translated">func (e * TagPathError) Error () 문자열</target>
        </trans-unit>
        <trans-unit id="181f964169810b6ca047260c4e79bfcb9ae8649b" translate="yes" xml:space="preserve">
          <source>func (e *TypeAssertionError) Error() string</source>
          <target state="translated">func (e * TypeAssertionError) Error () 문자열</target>
        </trans-unit>
        <trans-unit id="87b50931fd8abeacdc5c2b740c4070da3fc95fc9" translate="yes" xml:space="preserve">
          <source>func (e *UnknownLineError) Error() string</source>
          <target state="translated">func (e * UnknownLineError) Error () 문자열</target>
        </trans-unit>
        <trans-unit id="22485c7dfab60f3af1c49426d5f19185ef8138ab" translate="yes" xml:space="preserve">
          <source>func (e *UnmarshalFieldError) Error() string</source>
          <target state="translated">func (e * UnmarshalFieldError) Error () 문자열</target>
        </trans-unit>
        <trans-unit id="f2361e3b74be0002138bdd45aa8d8b96ce7151c3" translate="yes" xml:space="preserve">
          <source>func (e *UnmarshalTypeError) Error() string</source>
          <target state="translated">func (e * UnmarshalTypeError) Error () 문자열</target>
        </trans-unit>
        <trans-unit id="82321087fa76da73889dc1d62f578cd2b4f49cb5" translate="yes" xml:space="preserve">
          <source>func (e *UnsupportedTypeError) Error() string</source>
          <target state="translated">func (e * UnsupportedTypeError) Error () 문자열</target>
        </trans-unit>
        <trans-unit id="bf58c95a7188c700ec52b82a6a813c8c97939e02" translate="yes" xml:space="preserve">
          <source>func (e *UnsupportedValueError) Error() string</source>
          <target state="translated">func (e * UnsupportedValueError) Error () 문자열</target>
        </trans-unit>
        <trans-unit id="e0e0d1134b20395c608ac284f8653e09b597ac04" translate="yes" xml:space="preserve">
          <source>func (e *ValueError) Error() string</source>
          <target state="translated">func (e * ValueError) Error () 문자열</target>
        </trans-unit>
        <trans-unit id="fc0162355133cfc36112d72e29e3a14a9edd287e" translate="yes" xml:space="preserve">
          <source>func (e *WriteError) Error() string</source>
          <target state="translated">func (e * WriteError) Error () 문자열</target>
        </trans-unit>
        <trans-unit id="60edd22b5c85eb276ea1b35cc56819661f02d012" translate="yes" xml:space="preserve">
          <source>func (e CertificateInvalidError) Error() string</source>
          <target state="translated">func (e CertificateInvalidError) Error () 문자열</target>
        </trans-unit>
        <trans-unit id="50cb9c1ff6321e807f289ef179d708f02900574a" translate="yes" xml:space="preserve">
          <source>func (e CorruptInputError) Error() string</source>
          <target state="translated">func (e CorruptInputError) Error () 문자열</target>
        </trans-unit>
        <trans-unit id="8001f7597462bfad1742b1b13a89b6165ecc94e9" translate="yes" xml:space="preserve">
          <source>func (e DecodeError) Error() string</source>
          <target state="translated">func (e DecodeError) Error () 문자열</target>
        </trans-unit>
        <trans-unit id="d898a00f82d79b0b572d5d4d2346be4e979aa142" translate="yes" xml:space="preserve">
          <source>func (e Errno) Error() string</source>
          <target state="translated">func (e Errno) Error () 문자열</target>
        </trans-unit>
        <trans-unit id="f448a07ad052eea2f84743779e8b92c7db6ab2a1" translate="yes" xml:space="preserve">
          <source>func (e Errno) Is(target error) bool</source>
          <target state="translated">func (e Errno) Is (목표 오류) bool</target>
        </trans-unit>
        <trans-unit id="1cd379bdd697abe42457e9c45b4c6be27a2efde8" translate="yes" xml:space="preserve">
          <source>func (e Errno) Temporary() bool</source>
          <target state="translated">func (e Errno) 임시 () bool</target>
        </trans-unit>
        <trans-unit id="18c83bd405ec14f4706995e05634b57534fc5ece" translate="yes" xml:space="preserve">
          <source>func (e Errno) Timeout() bool</source>
          <target state="translated">func (e Errno) 시간 초과 () 부울</target>
        </trans-unit>
        <trans-unit id="51234c8c723074daf7c66662b67c81fe9ff9db2f" translate="yes" xml:space="preserve">
          <source>func (e Error) Error() string</source>
          <target state="translated">func (e Error) Error () 문자열</target>
        </trans-unit>
        <trans-unit id="e8ca4b2b99d66d5591462fb936fec7cc97a0d6ee" translate="yes" xml:space="preserve">
          <source>func (e ErrorCode) String() string</source>
          <target state="translated">func (e ErrorCode) String () 문자열</target>
        </trans-unit>
        <trans-unit id="3bb9b8297904fc0a716a482d025bf06d85cdbd18" translate="yes" xml:space="preserve">
          <source>func (e EscapeError) Error() string</source>
          <target state="translated">func (e EscapeError) Error () 문자열</target>
        </trans-unit>
        <trans-unit id="0192a1383e98f48ecc80277cae91ee29a293a034" translate="yes" xml:space="preserve">
          <source>func (e ExecError) Error() string</source>
          <target state="translated">func (e ExecError) Error () 문자열</target>
        </trans-unit>
        <trans-unit id="50afe36b7d57445378efe6db30bb344884cb6123" translate="yes" xml:space="preserve">
          <source>func (e ExecError) Unwrap() error</source>
          <target state="translated">func (e ExecError) Unwrap () 오류</target>
        </trans-unit>
        <trans-unit id="6b5367c944ef6cd5c7419a4a463313463753abc8" translate="yes" xml:space="preserve">
          <source>func (e FormatError) Error() string</source>
          <target state="translated">func (e FormatError) Error () 문자열</target>
        </trans-unit>
        <trans-unit id="8b951640bfb4955da50d53e6f29ca6e032a05336" translate="yes" xml:space="preserve">
          <source>func (e InsecureAlgorithmError) Error() string</source>
          <target state="translated">func (e InsecureAlgorithmError) Error () 문자열</target>
        </trans-unit>
        <trans-unit id="3606af718b4ac2ae2f40457b15a0dbed22aa7253" translate="yes" xml:space="preserve">
          <source>func (e InternalError) Error() string</source>
          <target state="translated">func (e InternalError) Error () 문자열</target>
        </trans-unit>
        <trans-unit id="5bd2b9c5bec05de855c0ce48a0cfea1349939432" translate="yes" xml:space="preserve">
          <source>func (e InvalidAddrError) Error() string</source>
          <target state="translated">func (e InvalidAddrError) Error () 문자열</target>
        </trans-unit>
        <trans-unit id="ef23243e0a4de93b4e2612cda695b3622af18c91" translate="yes" xml:space="preserve">
          <source>func (e InvalidAddrError) Temporary() bool</source>
          <target state="translated">func (e InvalidAddrError) 임시 () 부울</target>
        </trans-unit>
        <trans-unit id="c84af9482cbec9da977046e792dcf131bc8b562f" translate="yes" xml:space="preserve">
          <source>func (e InvalidAddrError) Timeout() bool</source>
          <target state="translated">func (e InvalidAddrError) 시간 초과 () 부울</target>
        </trans-unit>
        <trans-unit id="b66f6672367b312917be81468feb458aa8e5e3da" translate="yes" xml:space="preserve">
          <source>func (e InvalidByteError) Error() string</source>
          <target state="translated">func (e InvalidByteError) Error () 문자열</target>
        </trans-unit>
        <trans-unit id="baa4614fbec7faaa71fa9e5f559a200018eb6371" translate="yes" xml:space="preserve">
          <source>func (e InvalidHostError) Error() string</source>
          <target state="translated">func (e InvalidHostError) Error () 문자열</target>
        </trans-unit>
        <trans-unit id="b0cfe9e00ca72b8bc24f536bab57d474e61ef50e" translate="yes" xml:space="preserve">
          <source>func (e RecordHeaderError) Error() string</source>
          <target state="translated">func (e RecordHeaderError) Error () 문자열</target>
        </trans-unit>
        <trans-unit id="27d765e9da314dbbc5ccb322f22ed81ed64446cb" translate="yes" xml:space="preserve">
          <source>func (e ServerError) Error() string</source>
          <target state="translated">func (e ServerError) Error () 문자열</target>
        </trans-unit>
        <trans-unit id="3f8943764ed87024a9ba3181a289645275737ded" translate="yes" xml:space="preserve">
          <source>func (e StartElement) Copy() StartElement</source>
          <target state="translated">func (e StartElement) Copy () StartElement</target>
        </trans-unit>
        <trans-unit id="6a4b79d8a9ff669380d62517ba5ecffe5fb17107" translate="yes" xml:space="preserve">
          <source>func (e StartElement) End() EndElement</source>
          <target state="translated">func (e StartElement) End () EndElement</target>
        </trans-unit>
        <trans-unit id="fbf2446b1dad2270785048d7f6569efe34e9cce5" translate="yes" xml:space="preserve">
          <source>func (e StructuralError) Error() string</source>
          <target state="translated">func (e StructuralError) Error () 문자열</target>
        </trans-unit>
        <trans-unit id="94cbe1d73fd5548e6aef2ed1f3669903bbf7ca33" translate="yes" xml:space="preserve">
          <source>func (e SyntaxError) Error() string</source>
          <target state="translated">func (e SyntaxError) Error () 문자열</target>
        </trans-unit>
        <trans-unit id="75ed74b211a906cf97563fc347f40f470836fe9f" translate="yes" xml:space="preserve">
          <source>func (e UnknownAuthorityError) Error() string</source>
          <target state="translated">func (e UnknownAuthorityError) Error () 문자열</target>
        </trans-unit>
        <trans-unit id="0e5a88d07f4bff12e75524775b09b33c210f5cb2" translate="yes" xml:space="preserve">
          <source>func (e UnknownFileError) Error() string</source>
          <target state="translated">func (e UnknownFileError) Error () 문자열</target>
        </trans-unit>
        <trans-unit id="5ce5d5a37455ea2f2ede0eccc60baacacc316580" translate="yes" xml:space="preserve">
          <source>func (e UnknownGroupError) Error() string</source>
          <target state="translated">func (e UnknownGroupError) Error () 문자열</target>
        </trans-unit>
        <trans-unit id="739ec29fad2906dba0a36c7aba6c69fb52849fc0" translate="yes" xml:space="preserve">
          <source>func (e UnknownGroupIdError) Error() string</source>
          <target state="translated">func (e UnknownGroupIdError) Error () 문자열</target>
        </trans-unit>
        <trans-unit id="f9b0cb07de5f835a832a90ec7245964db3d074e3" translate="yes" xml:space="preserve">
          <source>func (e UnknownNetworkError) Error() string</source>
          <target state="translated">func (e UnknownNetworkError) Error () 문자열</target>
        </trans-unit>
        <trans-unit id="71b350445b9e0b17121f43e0aa504a7a5c3455b9" translate="yes" xml:space="preserve">
          <source>func (e UnknownNetworkError) Temporary() bool</source>
          <target state="translated">func (e UnknownNetworkError) 임시 () bool</target>
        </trans-unit>
        <trans-unit id="9651f27dfe15827024f36ca89139d59815e78b94" translate="yes" xml:space="preserve">
          <source>func (e UnknownNetworkError) Timeout() bool</source>
          <target state="translated">func (e UnknownNetworkError) 시간 초과 () 부울</target>
        </trans-unit>
        <trans-unit id="e4bc2ffd15df2d97083f6883bd8809a962c41891" translate="yes" xml:space="preserve">
          <source>func (e UnknownUserError) Error() string</source>
          <target state="translated">func (e UnknownUserError) Error () 문자열</target>
        </trans-unit>
        <trans-unit id="5d5f4a24cc3ca6076c1439730cdce7138952270d" translate="yes" xml:space="preserve">
          <source>func (e UnknownUserIdError) Error() string</source>
          <target state="translated">func (e UnknownUserIdError) Error () 문자열</target>
        </trans-unit>
        <trans-unit id="9a4503aa748eb8ce3eb00f4d8fef0b93b7498eff" translate="yes" xml:space="preserve">
          <source>func (e UnmarshalError) Error() string</source>
          <target state="translated">func (e UnmarshalError) Error () 문자열</target>
        </trans-unit>
        <trans-unit id="23c98392a584049de0195fb3ba4b7e07bc7c0346" translate="yes" xml:space="preserve">
          <source>func (e UnsupportedError) Error() string</source>
          <target state="translated">func (e UnsupportedError) Error () 문자열</target>
        </trans-unit>
        <trans-unit id="cb13c21257e62e698a72e6587d204f7eb664f7ee" translate="yes" xml:space="preserve">
          <source>func (e WordEncoder) Encode(charset, s string) string</source>
          <target state="translated">func (e WordEncoder) 인코딩 (문자셋, s 문자열) 문자열</target>
        </trans-unit>
        <trans-unit id="d678027c5497120731586a5d486783f01b4e01d6" translate="yes" xml:space="preserve">
          <source>func (enc *Encoder) Encode(e interface{}) error</source>
          <target state="translated">func (enc * Encoder) 인코딩 (e interface {}) 오류</target>
        </trans-unit>
        <trans-unit id="1414f2a03eca301d7c3c3286e2584a2a7e9a21cc" translate="yes" xml:space="preserve">
          <source>func (enc *Encoder) Encode(v interface{}) error</source>
          <target state="translated">func (enc * Encoder) 인코딩 (v interface {}) 오류</target>
        </trans-unit>
        <trans-unit id="86fe4f20f202ba76f3bb45fb9d66e5eeff31bbd1" translate="yes" xml:space="preserve">
          <source>func (enc *Encoder) Encode(w io.Writer, m image.Image) error</source>
          <target state="translated">func (enc * Encoder) 인코딩 (w io.Writer, m image.Image) 오류</target>
        </trans-unit>
        <trans-unit id="83de63325b183da6887949f6e87d1443196483b2" translate="yes" xml:space="preserve">
          <source>func (enc *Encoder) EncodeElement(v interface{}, start StartElement) error</source>
          <target state="translated">func (enc * Encoder) EncodeElement (v interface {}, StartElement 시작) 오류</target>
        </trans-unit>
        <trans-unit id="7ef8fcb57e983205fb2d6548ae4350474c42826b" translate="yes" xml:space="preserve">
          <source>func (enc *Encoder) EncodeToken(t Token) error</source>
          <target state="translated">func (enc * Encoder) EncodeToken (t Token) 오류</target>
        </trans-unit>
        <trans-unit id="cd1495b14158a0eb06020ce6bdc0081ab638e8e4" translate="yes" xml:space="preserve">
          <source>func (enc *Encoder) EncodeValue(value reflect.Value) error</source>
          <target state="translated">func (enc * Encoder) EncodeValue (value reflect.Value) 오류</target>
        </trans-unit>
        <trans-unit id="724f6268eadcd7eadefcc285dd5d9d8981673617" translate="yes" xml:space="preserve">
          <source>func (enc *Encoder) Flush() error</source>
          <target state="translated">func (enc * Encoder) 플러시 () 오류</target>
        </trans-unit>
        <trans-unit id="b04bf60d14acf15262b086f1c4366b0d4bf893a6" translate="yes" xml:space="preserve">
          <source>func (enc *Encoder) Indent(prefix, indent string)</source>
          <target state="translated">func (enc * Encoder) 들여 쓰기 (접두사, 들여 쓰기 문자열)</target>
        </trans-unit>
        <trans-unit id="61c628594bf1b98fc9dbf721fa0a3347185f010c" translate="yes" xml:space="preserve">
          <source>func (enc *Encoder) SetEscapeHTML(on bool)</source>
          <target state="translated">func (enc * Encoder) SetEscapeHTML (온 부울)</target>
        </trans-unit>
        <trans-unit id="105cc93c48d8abc4f58dc6c0138bc6f06f2ddef3" translate="yes" xml:space="preserve">
          <source>func (enc *Encoder) SetIndent(prefix, indent string)</source>
          <target state="translated">func (enc * Encoder) SetIndent (접두사, 들여 쓰기 문자열)</target>
        </trans-unit>
        <trans-unit id="13e8cbec0d7e53923fadbbcc2ffc3d47f4597d81" translate="yes" xml:space="preserve">
          <source>func (enc *Encoding) Decode(dst, src []byte) (n int, err error)</source>
          <target state="translated">func (enc * 인코딩) 디코딩 (dst, src [] byte) (n int, err error)</target>
        </trans-unit>
        <trans-unit id="425ce6e7936f6dcb824db65713e1550cd806bb57" translate="yes" xml:space="preserve">
          <source>func (enc *Encoding) DecodeString(s string) ([]byte, error)</source>
          <target state="translated">func (enc * 인코딩) DecodeString (s 문자열) ([] 바이트, 오류)</target>
        </trans-unit>
        <trans-unit id="664b230e86b541ca9db28e10bbdb1ad0f44ada67" translate="yes" xml:space="preserve">
          <source>func (enc *Encoding) DecodedLen(n int) int</source>
          <target state="translated">func (enc * 인코딩) DecodedLen (n int) int</target>
        </trans-unit>
        <trans-unit id="8a3da4e08a2c7b0c4e202ecdf290506fed2e6fbb" translate="yes" xml:space="preserve">
          <source>func (enc *Encoding) Encode(dst, src []byte)</source>
          <target state="translated">func (enc * 인코딩) 인코딩 (dst, src [] byte)</target>
        </trans-unit>
        <trans-unit id="161068b44fcacd9c0258babacbb8b06c03641883" translate="yes" xml:space="preserve">
          <source>func (enc *Encoding) EncodeToString(src []byte) string</source>
          <target state="translated">func (enc * 인코딩) EncodeToString (src [] byte) 문자열</target>
        </trans-unit>
        <trans-unit id="adbae83fb7a7e4b5ed57aece2c1fa22df854c25a" translate="yes" xml:space="preserve">
          <source>func (enc *Encoding) EncodedLen(n int) int</source>
          <target state="translated">func (enc * 인코딩) EncodedLen (n int) int</target>
        </trans-unit>
        <trans-unit id="877405d9e6a26f65225ebca38017c219c1a5c8d2" translate="yes" xml:space="preserve">
          <source>func (enc Encoding) Strict() *Encoding</source>
          <target state="translated">func (enc 인코딩) Strict () * 인코딩</target>
        </trans-unit>
        <trans-unit id="f406b98bd7f772b32d1ba7994e5dc9422024a28e" translate="yes" xml:space="preserve">
          <source>func (enc Encoding) WithPadding(padding rune) *Encoding</source>
          <target state="translated">func (enc 인코딩) WithPadding (padding rune) * 인코딩</target>
        </trans-unit>
        <trans-unit id="fc3bcabdc85f93730422d3fce0dce58d6721b6ce" translate="yes" xml:space="preserve">
          <source>func (err ErrNaN) Error() string</source>
          <target state="translated">func (err ErrNaN) Error () 문자열</target>
        </trans-unit>
        <trans-unit id="71c9549e1c1a1311f5ebf7f451bde70e8b09e9e5" translate="yes" xml:space="preserve">
          <source>func (err Error) Error() string</source>
          <target state="translated">func (err Error) Error () 문자열</target>
        </trans-unit>
        <trans-unit id="ddaadc07338d6c5d0cd3d0c61973f93602ab695d" translate="yes" xml:space="preserve">
          <source>func (f *Field) End() token.Pos</source>
          <target state="translated">func (f * Field) End () 토큰.</target>
        </trans-unit>
        <trans-unit id="6639a87966d5321b2aa12ecb24db121717a4a459" translate="yes" xml:space="preserve">
          <source>func (f *Field) Pos() token.Pos</source>
          <target state="translated">func (f * Field) Pos () 토큰.</target>
        </trans-unit>
        <trans-unit id="3fbae8ec9527398ca67b7bff32c60da02adb843c" translate="yes" xml:space="preserve">
          <source>func (f *FieldList) End() token.Pos</source>
          <target state="translated">func (f * FieldList) End () 토큰.</target>
        </trans-unit>
        <trans-unit id="e1aabdbb65feffb9ee1a394f40552b4cee4d515f" translate="yes" xml:space="preserve">
          <source>func (f *FieldList) NumFields() int</source>
          <target state="translated">func (f * FieldList) NumFields () int</target>
        </trans-unit>
        <trans-unit id="f33617f79e0f0d1be23a376eb808a5aec72d6955" translate="yes" xml:space="preserve">
          <source>func (f *FieldList) Pos() token.Pos</source>
          <target state="translated">func (f * FieldList) Pos () 토큰.</target>
        </trans-unit>
        <trans-unit id="ebc8b7ad43f1a9c25c24f04349b0b9057f18c660" translate="yes" xml:space="preserve">
          <source>func (f *FieldNode) Copy() Node</source>
          <target state="translated">func (f * FieldNode) Copy () 노드</target>
        </trans-unit>
        <trans-unit id="6b75a5ca630a9a6aceb624bd14852158e4bde522" translate="yes" xml:space="preserve">
          <source>func (f *FieldNode) String() string</source>
          <target state="translated">func (f * FieldNode) String () 문자열</target>
        </trans-unit>
        <trans-unit id="11d1b98b7abef9c823dcf9ed95f1153df821f4ae" translate="yes" xml:space="preserve">
          <source>func (f *File) AddLine(offset int)</source>
          <target state="translated">func (f * 파일) AddLine (offset int)</target>
        </trans-unit>
        <trans-unit id="f06766d6f1900923f9ea63528040b24aa672ba2e" translate="yes" xml:space="preserve">
          <source>func (f *File) AddLineColumnInfo(offset int, filename string, line, column int)</source>
          <target state="translated">func (f * 파일) AddLineColumnInfo (offset int, 파일 이름 문자열, 줄, 열 int)</target>
        </trans-unit>
        <trans-unit id="cb3f79a648fe1cffd09cddb00b1bd57b84b24243" translate="yes" xml:space="preserve">
          <source>func (f *File) AddLineInfo(offset int, filename string, line int)</source>
          <target state="translated">func (f * 파일) AddLineInfo (offset int, 파일 이름 문자열, line int)</target>
        </trans-unit>
        <trans-unit id="cf23c9d25c6abeb3765e22e5273879566165cb93" translate="yes" xml:space="preserve">
          <source>func (f *File) Base() int</source>
          <target state="translated">func (f * 파일) Base () int</target>
        </trans-unit>
        <trans-unit id="ea2b81af5750a3029e656194e3fdeb6dd81bb271" translate="yes" xml:space="preserve">
          <source>func (f *File) Chdir() error</source>
          <target state="translated">func (f * 파일) Chdir () 오류</target>
        </trans-unit>
        <trans-unit id="08775194cb1634233aa66cf6fc9c59f2f3f5a741" translate="yes" xml:space="preserve">
          <source>func (f *File) Chmod(mode FileMode) error</source>
          <target state="translated">func (f * 파일) Chmod (mode FileMode) 오류</target>
        </trans-unit>
        <trans-unit id="8888aa0775abb39f2ea25a6cc36ac7cf37f301a1" translate="yes" xml:space="preserve">
          <source>func (f *File) Chown(uid, gid int) error</source>
          <target state="translated">func (f * 파일) Chown (uid, gid int) 오류</target>
        </trans-unit>
        <trans-unit id="526f72973dac4f0eb46992ca8e6ccd0eed56eeda" translate="yes" xml:space="preserve">
          <source>func (f *File) Close() error</source>
          <target state="translated">func (f * 파일) Close () 오류</target>
        </trans-unit>
        <trans-unit id="f09a3f2cc54242016a352663c33f1c3fcc3d7a67" translate="yes" xml:space="preserve">
          <source>func (f *File) DWARF() (*dwarf.Data, error)</source>
          <target state="translated">func (f * 파일) DWARF () (* dwarf.Data, 오류)</target>
        </trans-unit>
        <trans-unit id="e644407fdb42f9d40870e255c40156ade9924ed0" translate="yes" xml:space="preserve">
          <source>func (f *File) DataOffset() (offset int64, err error)</source>
          <target state="translated">func (f * 파일) DataOffset () (offset int64, 에러 에러)</target>
        </trans-unit>
        <trans-unit id="6cc1b52744b5df3c3c6b64cf82d220bd6227957e" translate="yes" xml:space="preserve">
          <source>func (f *File) DynString(tag DynTag) ([]string, error)</source>
          <target state="translated">func (f * 파일) DynString (tag DynTag) ([] 문자열, 오류)</target>
        </trans-unit>
        <trans-unit id="9e4e6c63d919cd5265046e86d8d15ccf1a1596fc" translate="yes" xml:space="preserve">
          <source>func (f *File) DynamicSymbols() ([]Symbol, error)</source>
          <target state="translated">func (f * 파일) DynamicSymbols () ([] 기호, 오류)</target>
        </trans-unit>
        <trans-unit id="1bc9ba9ce7d656f3cb92a99827b0452a408b2666" translate="yes" xml:space="preserve">
          <source>func (f *File) End() token.Pos</source>
          <target state="translated">func (f * File) End () 토큰.</target>
        </trans-unit>
        <trans-unit id="6544f665e7cc9b0b74546e9b306feb59a6c2ffdd" translate="yes" xml:space="preserve">
          <source>func (f *File) Fd() uintptr</source>
          <target state="translated">func (f * 파일) Fd () uintptr</target>
        </trans-unit>
        <trans-unit id="3a4e3fbc850b80596d133a1f33ce129d4740e47f" translate="yes" xml:space="preserve">
          <source>func (f *File) ImportedLibraries() ([]string, error)</source>
          <target state="translated">func (f * 파일) ImportedLibraries () ([] 문자열, 오류)</target>
        </trans-unit>
        <trans-unit id="b586de06f721cfd70ae85d91d3e7d27e337cc98f" translate="yes" xml:space="preserve">
          <source>func (f *File) ImportedSymbols() ([]ImportedSymbol, error)</source>
          <target state="translated">func (f * 파일) ImportedSymbols () ([] 가져온 기호, 오류)</target>
        </trans-unit>
        <trans-unit id="2c3a31b85c4f207724e3ee4ce9f06aac1f3f441d" translate="yes" xml:space="preserve">
          <source>func (f *File) ImportedSymbols() ([]string, error)</source>
          <target state="translated">func (f * 파일) ImportedSymbols () ([] 문자열, 오류)</target>
        </trans-unit>
        <trans-unit id="fe28e6af51444ed7ececfc65997d8bb8bae3e8cd" translate="yes" xml:space="preserve">
          <source>func (f *File) Line(p Pos) int</source>
          <target state="translated">func (f * 파일) 줄 (p Pos) int</target>
        </trans-unit>
        <trans-unit id="000e23250a8ad70da444fad5b13774ed428f2bfc" translate="yes" xml:space="preserve">
          <source>func (f *File) LineCount() int</source>
          <target state="translated">func (f * 파일) LineCount () int</target>
        </trans-unit>
        <trans-unit id="bb432ea717c84e31375d70035b697a5426865ff9" translate="yes" xml:space="preserve">
          <source>func (f *File) LineStart(line int) Pos</source>
          <target state="translated">func (f * 파일) LineStart (line int) 위치</target>
        </trans-unit>
        <trans-unit id="b4927fb320af2cc969f0d03bd774a882119be0c1" translate="yes" xml:space="preserve">
          <source>func (f *File) MergeLine(line int)</source>
          <target state="translated">func (f * 파일) MergeLine (line int)</target>
        </trans-unit>
        <trans-unit id="a91fe797208d422a68859aaf4344d30222571ca5" translate="yes" xml:space="preserve">
          <source>func (f *File) Name() string</source>
          <target state="translated">func (f * 파일) 이름 () 문자열</target>
        </trans-unit>
        <trans-unit id="1ad1445cfb687a8b09283ca59bc39a98194a00ef" translate="yes" xml:space="preserve">
          <source>func (f *File) Offset(p Pos) int</source>
          <target state="translated">func (f * 파일) 오프셋 (p Pos) int</target>
        </trans-unit>
        <trans-unit id="28ab48568b03b5dfab125dbb33fbe1dde7f380e6" translate="yes" xml:space="preserve">
          <source>func (f *File) Open() (io.ReadCloser, error)</source>
          <target state="translated">func (f * 파일) Open () (io.ReadCloser, 오류)</target>
        </trans-unit>
        <trans-unit id="a16fe9270a94a8ffd7378df8bcf19f1bd03ee696" translate="yes" xml:space="preserve">
          <source>func (f *File) Pos() token.Pos</source>
          <target state="translated">func (f * 파일) Pos () 토큰.</target>
        </trans-unit>
        <trans-unit id="a28fa7ae789174e78ad4b40d378681c24705b045" translate="yes" xml:space="preserve">
          <source>func (f *File) Pos(offset int) Pos</source>
          <target state="translated">func (f * 파일) Pos (offset int) Pos</target>
        </trans-unit>
        <trans-unit id="58c508e538d22088194878bb88e4201842bbf0bd" translate="yes" xml:space="preserve">
          <source>func (f *File) Position(p Pos) (pos Position)</source>
          <target state="translated">func (f * 파일) 위치 (p Pos) (pos 위치)</target>
        </trans-unit>
        <trans-unit id="4e37ba380c2eabdda6dfbbf00da4dffaf98b5948" translate="yes" xml:space="preserve">
          <source>func (f *File) PositionFor(p Pos, adjusted bool) (pos Position)</source>
          <target state="translated">func (f * 파일) PositionFor (p Pos, 조정 된 bool) (pos 위치)</target>
        </trans-unit>
        <trans-unit id="fe02988bf9d81eeb666f8c0aed0e8dcb1a7c8e67" translate="yes" xml:space="preserve">
          <source>func (f *File) Read(b []byte) (n int, err error)</source>
          <target state="translated">func (f * 파일) 읽기 (b [] 바이트) (n int, 오류)</target>
        </trans-unit>
        <trans-unit id="5526dec58153fbf46bef5a7cf2789dc121966252" translate="yes" xml:space="preserve">
          <source>func (f *File) ReadAt(b []byte, off int64) (n int, err error)</source>
          <target state="translated">func (f * 파일) ReadAt (b [] byte, off int64) (n int, 오류)</target>
        </trans-unit>
        <trans-unit id="17cca8543c8801282d1941c9b40ebdc77dba378c" translate="yes" xml:space="preserve">
          <source>func (f *File) Readdir(n int) ([]FileInfo, error)</source>
          <target state="translated">func (f * 파일) Readdir (n int) ([] FileInfo, 오류)</target>
        </trans-unit>
        <trans-unit id="78eb9b48a638aae642f24241e29dc89332227e3d" translate="yes" xml:space="preserve">
          <source>func (f *File) Readdirnames(n int) (names []string, err error)</source>
          <target state="translated">func (f * 파일) Readdirnames (n int) (이름 [] 문자열, 오류 에러)</target>
        </trans-unit>
        <trans-unit id="5704f10088c19667105741388785333caa8c2c62" translate="yes" xml:space="preserve">
          <source>func (f *File) Section(name string) *Section</source>
          <target state="translated">func (f * 파일) 섹션 (이름 문자열) * 섹션</target>
        </trans-unit>
        <trans-unit id="c0894f836394831b65b00cffc7d10bfbae6ba3c1" translate="yes" xml:space="preserve">
          <source>func (f *File) SectionByType(typ SectionType) *Section</source>
          <target state="translated">func (f * 파일) SectionByType (typ SectionType) * 섹션</target>
        </trans-unit>
        <trans-unit id="5c751c273f0073f09c091738f0b2b0500de39c98" translate="yes" xml:space="preserve">
          <source>func (f *File) Seek(offset int64, whence int) (ret int64, err error)</source>
          <target state="translated">func (f * File) 찾기 (offset int64, whence int) (ret int64, err error)</target>
        </trans-unit>
        <trans-unit id="2ba009ad8c7c5069ed2574686bead0f000d39f2a" translate="yes" xml:space="preserve">
          <source>func (f *File) Segment(name string) *Segment</source>
          <target state="translated">func (f * 파일) 세그먼트 (이름 문자열) * 세그먼트</target>
        </trans-unit>
        <trans-unit id="d2637267eb954a514914cd4f2f6d16ad27c80d93" translate="yes" xml:space="preserve">
          <source>func (f *File) SetDeadline(t time.Time) error</source>
          <target state="translated">func (f * 파일) SetDeadline (t time.Time) 오류</target>
        </trans-unit>
        <trans-unit id="26d8028ce4a79c5dc9ef4b9d7b1a4f87e20dc66b" translate="yes" xml:space="preserve">
          <source>func (f *File) SetLines(lines []int) bool</source>
          <target state="translated">func (f * 파일) SetLines (lines [] int) 부울</target>
        </trans-unit>
        <trans-unit id="83255610f33efdcca0aba38cdeb73b6027205611" translate="yes" xml:space="preserve">
          <source>func (f *File) SetLinesForContent(content []byte)</source>
          <target state="translated">func (f * 파일) SetLinesForContent (content [] 바이트)</target>
        </trans-unit>
        <trans-unit id="d218d6d1595b34cee5d6df3fb95d3d0e5d07ea8e" translate="yes" xml:space="preserve">
          <source>func (f *File) SetReadDeadline(t time.Time) error</source>
          <target state="translated">func (f * 파일) SetReadDeadline (t time.Time) 오류</target>
        </trans-unit>
        <trans-unit id="6a9562bdb8e6f8c173c088de9b752848be5e9906" translate="yes" xml:space="preserve">
          <source>func (f *File) SetWriteDeadline(t time.Time) error</source>
          <target state="translated">func (f * 파일) SetWriteDeadline (t time.Time) 오류</target>
        </trans-unit>
        <trans-unit id="d7fc00aba5709c7fec18c6e268d906784c7f1a7d" translate="yes" xml:space="preserve">
          <source>func (f *File) Size() int</source>
          <target state="translated">func (f * 파일) 크기 () int</target>
        </trans-unit>
        <trans-unit id="9fa53582b162f8f84dc1a43176acccd1dec39aa7" translate="yes" xml:space="preserve">
          <source>func (f *File) Stat() (FileInfo, error)</source>
          <target state="translated">func (f * 파일) Stat () (파일 정보, 오류)</target>
        </trans-unit>
        <trans-unit id="a5630eb0c3c097c33c32cdd5931db6be5c89ca00" translate="yes" xml:space="preserve">
          <source>func (f *File) Symbols() ([]Sym, error)</source>
          <target state="translated">func (f * 파일) 기호 () ([] 심볼, 오류)</target>
        </trans-unit>
        <trans-unit id="479f16dbfa1517313b26b242e91f075f9efab107" translate="yes" xml:space="preserve">
          <source>func (f *File) Symbols() ([]Symbol, error)</source>
          <target state="translated">func (f * 파일) Symbols () ([] 기호, 오류)</target>
        </trans-unit>
        <trans-unit id="fb222f79845f98378042219ae26f0124494abab2" translate="yes" xml:space="preserve">
          <source>func (f *File) Sync() error</source>
          <target state="translated">func (f * 파일) Sync () 오류</target>
        </trans-unit>
        <trans-unit id="1c9001f23a696255f533418f16b83ed19977312c" translate="yes" xml:space="preserve">
          <source>func (f *File) SyscallConn() (syscall.RawConn, error)</source>
          <target state="translated">func (f * 파일) SyscallConn () (syscall.RawConn, 오류)</target>
        </trans-unit>
        <trans-unit id="8588273e2f0c9448e4f271b2d496f27815af651a" translate="yes" xml:space="preserve">
          <source>func (f *File) Truncate(size int64) error</source>
          <target state="translated">func (f * 파일) 잘림 (크기 int64) 오류</target>
        </trans-unit>
        <trans-unit id="333de95988ce8317f7382cafaa7c52c597030f3d" translate="yes" xml:space="preserve">
          <source>func (f *File) Write(b []byte) (n int, err error)</source>
          <target state="translated">func (f * 파일) 쓰기 (b [] 바이트) (n int, 오류)</target>
        </trans-unit>
        <trans-unit id="3c0e0888a6ce6a29dd8398d176667598f94812da" translate="yes" xml:space="preserve">
          <source>func (f *File) WriteAt(b []byte, off int64) (n int, err error)</source>
          <target state="translated">func (f * 파일) WriteAt (b [] byte, off int64) (n int, 오류)</target>
        </trans-unit>
        <trans-unit id="b24fd6ff4cfae8195d963312be29d029efd48d1d" translate="yes" xml:space="preserve">
          <source>func (f *File) WriteString(s string) (n int, err error)</source>
          <target state="translated">func (f * 파일) WriteString (s 문자열) (n int, 오류)</target>
        </trans-unit>
        <trans-unit id="b471ad8a3840fba07c0397532baf3e8426db8ea0" translate="yes" xml:space="preserve">
          <source>func (f *FlagSet) Arg(i int) string</source>
          <target state="translated">func (f * FlagSet) Arg (i int) 문자열</target>
        </trans-unit>
        <trans-unit id="d8e542d37fd2a0f37a260fbb679a59e63934ced4" translate="yes" xml:space="preserve">
          <source>func (f *FlagSet) Args() []string</source>
          <target state="translated">func (f * FlagSet) Args () [] 문자열</target>
        </trans-unit>
        <trans-unit id="bfdb06f7746a1ea221f96b818dcb43b68b75c82e" translate="yes" xml:space="preserve">
          <source>func (f *FlagSet) Bool(name string, value bool, usage string) *bool</source>
          <target state="translated">func (f * FlagSet) Bool (이름 문자열, 값 bool, 사용 문자열) * bool</target>
        </trans-unit>
        <trans-unit id="066d275bc2cc743d5cde9a1c2d87e5083363f47a" translate="yes" xml:space="preserve">
          <source>func (f *FlagSet) BoolVar(p *bool, name string, value bool, usage string)</source>
          <target state="translated">func (f * FlagSet) BoolVar (p * bool, 이름 문자열, 값 bool, 사용 문자열)</target>
        </trans-unit>
        <trans-unit id="dd99e0858c7605d644bc1eb136ad091d94572bb3" translate="yes" xml:space="preserve">
          <source>func (f *FlagSet) Duration(name string, value time.Duration, usage string) *time.Duration</source>
          <target state="translated">func (f * FlagSet) Duration (이름 문자열, 값 시간. 지속 시간, 사용 문자열) * time.Duration</target>
        </trans-unit>
        <trans-unit id="a88db4de2f31497db115b955f2d3899f74017dd8" translate="yes" xml:space="preserve">
          <source>func (f *FlagSet) DurationVar(p *time.Duration, name string, value time.Duration, usage string)</source>
          <target state="translated">func (f * FlagSet) DurationVar (p * time.Duration, 이름 문자열, 값 시간 .Duration, 사용 문자열)</target>
        </trans-unit>
        <trans-unit id="8edb9bb9c8c9ddb444a9e0272954007353bc7857" translate="yes" xml:space="preserve">
          <source>func (f *FlagSet) ErrorHandling() ErrorHandling</source>
          <target state="translated">func (f * FlagSet) ErrorHandling () 오류 처리</target>
        </trans-unit>
        <trans-unit id="c25482c336e71e6184691dc47eac931e7dc2e6bd" translate="yes" xml:space="preserve">
          <source>func (f *FlagSet) Float64(name string, value float64, usage string) *float64</source>
          <target state="translated">func (f * FlagSet) Float64 (이름 문자열, 값 float64, 사용 문자열) * float64</target>
        </trans-unit>
        <trans-unit id="de4c8d261138b2631946374e536e6cc3c7749d8b" translate="yes" xml:space="preserve">
          <source>func (f *FlagSet) Float64Var(p *float64, name string, value float64, usage string)</source>
          <target state="translated">func (f * FlagSet) Float64Var (p * float64, 이름 문자열, 값 float64, 사용 문자열)</target>
        </trans-unit>
        <trans-unit id="98e2cd548df1764c17232bf5741cc05f5c301147" translate="yes" xml:space="preserve">
          <source>func (f *FlagSet) Init(name string, errorHandling ErrorHandling)</source>
          <target state="translated">func (f * FlagSet) Init (이름 문자열, errorHandling ErrorHandling)</target>
        </trans-unit>
        <trans-unit id="c69b9e1f9910d272e5e51241e8bf1d01aebe05b0" translate="yes" xml:space="preserve">
          <source>func (f *FlagSet) Int(name string, value int, usage string) *int</source>
          <target state="translated">func (f * FlagSet) Int (이름 문자열, 값 int, 사용 문자열) * int</target>
        </trans-unit>
        <trans-unit id="16b2e9ac022ae4c1193b7d2ce44b738576c58fcd" translate="yes" xml:space="preserve">
          <source>func (f *FlagSet) Int64(name string, value int64, usage string) *int64</source>
          <target state="translated">func (f * FlagSet) Int64 (이름 문자열, 값 int64, 사용 문자열) * int64</target>
        </trans-unit>
        <trans-unit id="de5eb572eab853730cd2f63e93e38f3ce72199f3" translate="yes" xml:space="preserve">
          <source>func (f *FlagSet) Int64Var(p *int64, name string, value int64, usage string)</source>
          <target state="translated">func (f * FlagSet) Int64Var (p * int64, 이름 문자열, 값 int64, 사용 문자열)</target>
        </trans-unit>
        <trans-unit id="df584870df332714e1ccceb599edae462af0db1e" translate="yes" xml:space="preserve">
          <source>func (f *FlagSet) IntVar(p *int, name string, value int, usage string)</source>
          <target state="translated">func (f * FlagSet) IntVar (p * int, 이름 문자열, 값 int, 사용 문자열)</target>
        </trans-unit>
        <trans-unit id="3aaee39354e976171865d819661b7f98502a27c1" translate="yes" xml:space="preserve">
          <source>func (f *FlagSet) Lookup(name string) *Flag</source>
          <target state="translated">func (f * FlagSet) 조회 (이름 문자열) * Flag</target>
        </trans-unit>
        <trans-unit id="0002c83eeecebac8e866807ca0079bc3b0c72d68" translate="yes" xml:space="preserve">
          <source>func (f *FlagSet) NArg() int</source>
          <target state="translated">func (f * FlagSet) NArg () 정수</target>
        </trans-unit>
        <trans-unit id="7c8a529cf936a2270cdaa6856b8961b1f1a0a838" translate="yes" xml:space="preserve">
          <source>func (f *FlagSet) NFlag() int</source>
          <target state="translated">func (f * FlagSet) NFlag () 정수</target>
        </trans-unit>
        <trans-unit id="814515b6d1ab126f031e0b36178813daef9ea8c8" translate="yes" xml:space="preserve">
          <source>func (f *FlagSet) Name() string</source>
          <target state="translated">func (f * FlagSet) 이름 () 문자열</target>
        </trans-unit>
        <trans-unit id="7a6095599f6ef77938c4068bb4039be75c86e981" translate="yes" xml:space="preserve">
          <source>func (f *FlagSet) Output() io.Writer</source>
          <target state="translated">func (f * FlagSet) 출력 () io.Writer</target>
        </trans-unit>
        <trans-unit id="98b1c31a5bb5854210e3635e12bee42f5e442187" translate="yes" xml:space="preserve">
          <source>func (f *FlagSet) Parse(arguments []string) error</source>
          <target state="translated">func (f * FlagSet) 구문 분석 (인수 [] 문자열) 오류</target>
        </trans-unit>
        <trans-unit id="39e7c9d43568060ce7ddd316debff171bbe42d23" translate="yes" xml:space="preserve">
          <source>func (f *FlagSet) Parsed() bool</source>
          <target state="translated">func (f * FlagSet) 파싱 () bool</target>
        </trans-unit>
        <trans-unit id="99b3411d588fecb7a222ca22d6555cc83d822ac4" translate="yes" xml:space="preserve">
          <source>func (f *FlagSet) PrintDefaults()</source>
          <target state="translated">func (f * FlagSet) PrintDefaults ()</target>
        </trans-unit>
        <trans-unit id="0a0c1db617ce16b53de32d9f897c6320a398081c" translate="yes" xml:space="preserve">
          <source>func (f *FlagSet) Set(name, value string) error</source>
          <target state="translated">func (f * FlagSet) 설정 (이름, 값 문자열) 오류</target>
        </trans-unit>
        <trans-unit id="4e55c5fc10deffeef25f6f7d3de92bfe95dd7f97" translate="yes" xml:space="preserve">
          <source>func (f *FlagSet) SetOutput(output io.Writer)</source>
          <target state="translated">func (f * FlagSet) SetOutput (출력 io.Writer)</target>
        </trans-unit>
        <trans-unit id="6e3e27530e390cf635e41d747e14f4d635dbece8" translate="yes" xml:space="preserve">
          <source>func (f *FlagSet) String(name string, value string, usage string) *string</source>
          <target state="translated">func (f * FlagSet) 문자열 (이름 문자열, 값 문자열, 사용 문자열) * string</target>
        </trans-unit>
        <trans-unit id="7d8087e99f07f1d23356a65fb9b75ba45fadf724" translate="yes" xml:space="preserve">
          <source>func (f *FlagSet) StringVar(p *string, name string, value string, usage string)</source>
          <target state="translated">func (f * FlagSet) StringVar (p * 문자열, 이름 문자열, 값 문자열, 사용 문자열)</target>
        </trans-unit>
        <trans-unit id="8845275d2eaae9c80e289b2d435562ae4dd1e2b7" translate="yes" xml:space="preserve">
          <source>func (f *FlagSet) Uint(name string, value uint, usage string) *uint</source>
          <target state="translated">func (f * FlagSet) Uint (이름 문자열, 값 uint, 사용 문자열) * uint</target>
        </trans-unit>
        <trans-unit id="8c2ac461357ff15db269c767e4cd15ef750b5798" translate="yes" xml:space="preserve">
          <source>func (f *FlagSet) Uint64(name string, value uint64, usage string) *uint64</source>
          <target state="translated">func (f * FlagSet) Uint64 (이름 문자열, 값 uint64, 사용 문자열) * uint64</target>
        </trans-unit>
        <trans-unit id="63f4ea93b702d360c0360af4939c991eae34d25d" translate="yes" xml:space="preserve">
          <source>func (f *FlagSet) Uint64Var(p *uint64, name string, value uint64, usage string)</source>
          <target state="translated">func (f * FlagSet) Uint64Var (p * uint64, 이름 문자열, 값 uint64, 사용 문자열)</target>
        </trans-unit>
        <trans-unit id="33f85bd7fd5c07823638b77d8cda5bcecf42195e" translate="yes" xml:space="preserve">
          <source>func (f *FlagSet) UintVar(p *uint, name string, value uint, usage string)</source>
          <target state="translated">func (f * FlagSet) UintVar (p * uint, 이름 문자열, 값 uint, 사용 문자열)</target>
        </trans-unit>
        <trans-unit id="4e82d619143fae1db21c8c485a53daf75d4100e6" translate="yes" xml:space="preserve">
          <source>func (f *FlagSet) Var(value Value, name string, usage string)</source>
          <target state="translated">func (f * FlagSet) Var (값, 이름 문자열, 사용 문자열)</target>
        </trans-unit>
        <trans-unit id="4fef77029ac1bdc47683036c6b64d71a9039bf33" translate="yes" xml:space="preserve">
          <source>func (f *FlagSet) Visit(fn func(*Flag))</source>
          <target state="translated">func (f * FlagSet) 방문 (fn func (* Flag))</target>
        </trans-unit>
        <trans-unit id="2262a3a11a58ba1cd25a49f8a4686684436d7d59" translate="yes" xml:space="preserve">
          <source>func (f *FlagSet) VisitAll(fn func(*Flag))</source>
          <target state="translated">func (f * FlagSet) VisitAll (fn 펑크 (* Flag))</target>
        </trans-unit>
        <trans-unit id="f10834996f5e4940c8379c74f9ec9dc80532b2fa" translate="yes" xml:space="preserve">
          <source>func (f *Form) RemoveAll() error</source>
          <target state="translated">func (f * Form) RemoveAll () 오류</target>
        </trans-unit>
        <trans-unit id="4ebdd6904e0d47a0362f0b8a2f4f3b427e006122" translate="yes" xml:space="preserve">
          <source>func (f *Func) Entry() uintptr</source>
          <target state="translated">func (f * Func) 항목 () uintptr</target>
        </trans-unit>
        <trans-unit id="63ddf683705394066f08c4e731dc202522d524ee" translate="yes" xml:space="preserve">
          <source>func (f *Func) FileLine(pc uintptr) (file string, line int)</source>
          <target state="translated">func (f * Func) FileLine (pc uintptr) (파일 문자열, 줄 int)</target>
        </trans-unit>
        <trans-unit id="542460994eb4c180f53221f886bd257b6ca917b6" translate="yes" xml:space="preserve">
          <source>func (f *Func) Name() string</source>
          <target state="translated">func (f * Func) 이름 () 문자열</target>
        </trans-unit>
        <trans-unit id="69b2694e7618be1cbb2b9a2a84aad13d264e2cfe" translate="yes" xml:space="preserve">
          <source>func (f Flags) String() string</source>
          <target state="translated">func (f 플래그) String () 문자열</target>
        </trans-unit>
        <trans-unit id="1e12ea7316801e5ecb5fd3b4880c180b997ac28f" translate="yes" xml:space="preserve">
          <source>func (f Format) String() string</source>
          <target state="translated">func (f 형식) String () 문자열</target>
        </trans-unit>
        <trans-unit id="872a52f0323bc6cae3267447b0581f1d5b09591a" translate="yes" xml:space="preserve">
          <source>func (f Func) String() string</source>
          <target state="translated">func (f Func) 문자열 () 문자열</target>
        </trans-unit>
        <trans-unit id="e6fe0367e787ad7c89a3f0d3937256dabf1010b1" translate="yes" xml:space="preserve">
          <source>func (f Func) Value() interface{}</source>
          <target state="translated">func (f Func) Value () 인터페이스 {}</target>
        </trans-unit>
        <trans-unit id="55591cb03ab9a15a337ec4df7d813128b42a7d43" translate="yes" xml:space="preserve">
          <source>func (f HandlerFunc) ServeHTTP(w ResponseWriter, r *Request)</source>
          <target state="translated">func (f HandlerFunc) ServeHTTP (w ResponseWriter, r * 요청)</target>
        </trans-unit>
        <trans-unit id="2f6fbd5f1b9c4a5be32bde19b7c03aaa45c5ac40" translate="yes" xml:space="preserve">
          <source>func (ff *FatFile) Close() error</source>
          <target state="translated">func (ff * FatFile) Close () 오류</target>
        </trans-unit>
        <trans-unit id="5f658a623a9dfcf3b49b8ec24bb8e44254e6f2d9" translate="yes" xml:space="preserve">
          <source>func (fh *FileHeader) Open() (File, error)</source>
          <target state="translated">func (fh * FileHeader) Open () (파일, 오류)</target>
        </trans-unit>
        <trans-unit id="6058a65383691299f1296ca95a60ec1f52d50859" translate="yes" xml:space="preserve">
          <source>func (g *CommentGroup) End() token.Pos</source>
          <target state="translated">func (g * CommentGroup) End () 토큰.</target>
        </trans-unit>
        <trans-unit id="7aff3136cd9de633a30953fe800a143da1ef6d61" translate="yes" xml:space="preserve">
          <source>func (g *CommentGroup) Pos() token.Pos</source>
          <target state="translated">func (g * CommentGroup) Pos () 토큰.</target>
        </trans-unit>
        <trans-unit id="cf1d2ddbd693be355adf6a335656f554e0c5804d" translate="yes" xml:space="preserve">
          <source>func (g *CommentGroup) Text() string</source>
          <target state="translated">func (g * CommentGroup) Text () 문자열</target>
        </trans-unit>
        <trans-unit id="eb5957edeea021c0eb885758f2af6ed8e710aa53" translate="yes" xml:space="preserve">
          <source>func (h *FileHeader) FileInfo() os.FileInfo</source>
          <target state="translated">func (h * FileHeader) FileInfo () os.FileInfo</target>
        </trans-unit>
        <trans-unit id="4abca8d94c6f992dab6e8e487cafa1e926405a3b" translate="yes" xml:space="preserve">
          <source>func (h *FileHeader) ModTime() time.Time</source>
          <target state="translated">func (h * FileHeader) ModTime () 시간. 시간</target>
        </trans-unit>
        <trans-unit id="ef3376802e3429939f48510dbcbe637995bb3040" translate="yes" xml:space="preserve">
          <source>func (h *FileHeader) Mode() (mode os.FileMode)</source>
          <target state="translated">func (h * FileHeader) Mode () (모드 os.FileMode)</target>
        </trans-unit>
        <trans-unit id="e12ef7a76bb3e9762300b61823ec8dcdc3e790f4" translate="yes" xml:space="preserve">
          <source>func (h *FileHeader) SetModTime(t time.Time)</source>
          <target state="translated">func (h * FileHeader) SetModTime (t 시간. 시간)</target>
        </trans-unit>
        <trans-unit id="3c1c226b84aacb7dd914260079a8222359138617" translate="yes" xml:space="preserve">
          <source>func (h *FileHeader) SetMode(mode os.FileMode)</source>
          <target state="translated">func (h * FileHeader) SetMode (모드 os.FileMode)</target>
        </trans-unit>
        <trans-unit id="ad51139a1880e39d613dff932a3a820b0073567e" translate="yes" xml:space="preserve">
          <source>func (h *Handler) ServeHTTP(rw http.ResponseWriter, req *http.Request)</source>
          <target state="translated">func (h * Handler) ServeHTTP (rw http.ResponseWriter, 요청 * http.Request)</target>
        </trans-unit>
        <trans-unit id="3f0439b9f49897965689d4e98b7964b59ec6590f" translate="yes" xml:space="preserve">
          <source>func (h *Header) FileInfo() os.FileInfo</source>
          <target state="translated">func (h * 헤더) FileInfo () os.FileInfo</target>
        </trans-unit>
        <trans-unit id="5a4e39450846b9901a34a8c22a68d3677be99ee5" translate="yes" xml:space="preserve">
          <source>func (h Hash) Available() bool</source>
          <target state="translated">func (h Hash) 가능 () bool</target>
        </trans-unit>
        <trans-unit id="fb06faaf89ea3b3f3331f3f543ab7c206ee0aa3b" translate="yes" xml:space="preserve">
          <source>func (h Hash) HashFunc() Hash</source>
          <target state="translated">func (h 해시) HashFunc () 해시</target>
        </trans-unit>
        <trans-unit id="2b002da597c09a5d99ceb127809f41b0b54596a0" translate="yes" xml:space="preserve">
          <source>func (h Hash) New() hash.Hash</source>
          <target state="translated">func (h 해시) New () 해시</target>
        </trans-unit>
        <trans-unit id="e378c97c81581e23767b06ab6f285bbe0e7108d0" translate="yes" xml:space="preserve">
          <source>func (h Hash) Size() int</source>
          <target state="translated">func (h 해시) 크기 () int</target>
        </trans-unit>
        <trans-unit id="118a8bc778a3ad5cfec3b3d28f308592b173a105" translate="yes" xml:space="preserve">
          <source>func (h Header) Add(key, value string)</source>
          <target state="translated">func (h 헤더) 추가 (키, 값 문자열)</target>
        </trans-unit>
        <trans-unit id="a84e27ca1ecea389011c172c06859f00194ada36" translate="yes" xml:space="preserve">
          <source>func (h Header) AddressList(key string) ([]*Address, error)</source>
          <target state="translated">func (h 헤더) AddressList (키 문자열) ([] * 주소, 오류)</target>
        </trans-unit>
        <trans-unit id="2df1cee2dc8ccd6a83592d1e82333c8398954d8a" translate="yes" xml:space="preserve">
          <source>func (h Header) Clone() Header</source>
          <target state="translated">func (h 헤더) Clone () 헤더</target>
        </trans-unit>
        <trans-unit id="7ad6b90fe6c2e39e9668e4b0f8c84037c255a855" translate="yes" xml:space="preserve">
          <source>func (h Header) Date() (time.Time, error)</source>
          <target state="translated">func (h 헤더) Date () (시간. 시간, 오류)</target>
        </trans-unit>
        <trans-unit id="1ded813722847da4763bcd84a24784e46d3784a4" translate="yes" xml:space="preserve">
          <source>func (h Header) Del(key string)</source>
          <target state="translated">func (h 헤더) Del (키 문자열)</target>
        </trans-unit>
        <trans-unit id="eb015741026adf4ba981a31fb3b9003682c720f2" translate="yes" xml:space="preserve">
          <source>func (h Header) Get(key string) string</source>
          <target state="translated">func (h 헤더) Get (키 문자열) 문자열</target>
        </trans-unit>
        <trans-unit id="a69228bc50917612b79e2922485586ac2af243d4" translate="yes" xml:space="preserve">
          <source>func (h Header) Set(key, value string)</source>
          <target state="translated">func (h 헤더) 설정 (키, 값 문자열)</target>
        </trans-unit>
        <trans-unit id="a9a1ee52ad8614c0541546935ce50c2a285a517a" translate="yes" xml:space="preserve">
          <source>func (h Header) Write(w io.Writer) error</source>
          <target state="translated">func (h 헤더) Write (w io.Writer) 오류</target>
        </trans-unit>
        <trans-unit id="00e765f8abe5b7099fab3aea0ec05491d7ab862b" translate="yes" xml:space="preserve">
          <source>func (h Header) WriteSubset(w io.Writer, exclude map[string]bool) error</source>
          <target state="translated">func (h 헤더) WriteSubset (w io.Writer, 제외 맵 [문자열] bool) 오류</target>
        </trans-unit>
        <trans-unit id="83cf347a1a2a12a0fba8feccc82bd7d0e5618d08" translate="yes" xml:space="preserve">
          <source>func (h HostnameError) Error() string</source>
          <target state="translated">func (h HostnameError) Error () 문자열</target>
        </trans-unit>
        <trans-unit id="2319130f668a903f2b762a232340eb1aab41a729" translate="yes" xml:space="preserve">
          <source>func (h MIMEHeader) Add(key, value string)</source>
          <target state="translated">func (h MIMEHeader) 추가 (키, 값 문자열)</target>
        </trans-unit>
        <trans-unit id="b12f79b42f26805cf6cf872e560db556f9b78541" translate="yes" xml:space="preserve">
          <source>func (h MIMEHeader) Del(key string)</source>
          <target state="translated">func (h MIMEHeader) Del (키 문자열)</target>
        </trans-unit>
        <trans-unit id="1f49d23343018ba3adfacce69ebdfabb74f113c9" translate="yes" xml:space="preserve">
          <source>func (h MIMEHeader) Get(key string) string</source>
          <target state="translated">func (h MIMEHeader) Get (키 문자열) 문자열</target>
        </trans-unit>
        <trans-unit id="c450c0ba59c6a333344a98dd08f2449529bc7518" translate="yes" xml:space="preserve">
          <source>func (h MIMEHeader) Set(key, value string)</source>
          <target state="translated">func (h MIMEHeader) 설정 (키, 값 문자열)</target>
        </trans-unit>
        <trans-unit id="1055cfdf4456a81a1a9b7756de5ea86ab49c4641" translate="yes" xml:space="preserve">
          <source>func (h UnhandledCriticalExtension) Error() string</source>
          <target state="translated">func (h UnhandledCriticalExtension) Error () 문자열</target>
        </trans-unit>
        <trans-unit id="81c22e4ad28844bf6fb40146067602b38c0d4cb3" translate="yes" xml:space="preserve">
          <source>func (i *IdentifierNode) Copy() Node</source>
          <target state="translated">func (i * IdentifierNode) Copy () 노드</target>
        </trans-unit>
        <trans-unit id="6ea7018d6a7f3bcd160fb02fbb83a38fbbfca0b9" translate="yes" xml:space="preserve">
          <source>func (i *IdentifierNode) SetPos(pos Pos) *IdentifierNode</source>
          <target state="translated">func (i * IdentifierNode) SetPos (pos Pos) * 식별자 노드</target>
        </trans-unit>
        <trans-unit id="451e4c0f438ae933e0c2971f24b51abecdf3646f" translate="yes" xml:space="preserve">
          <source>func (i *IdentifierNode) SetTree(t *Tree) *IdentifierNode</source>
          <target state="translated">func (i * IdentifierNode) SetTree (t * Tree) * 식별자 노드</target>
        </trans-unit>
        <trans-unit id="09ad29895dc64a295d58bc728dcf8f26ae2ecd98" translate="yes" xml:space="preserve">
          <source>func (i *IdentifierNode) String() string</source>
          <target state="translated">func (i * IdentifierNode) String () 문자열</target>
        </trans-unit>
        <trans-unit id="ef7fb1dadf7c0a211acd343a6e5ed95e1763cf0c" translate="yes" xml:space="preserve">
          <source>func (i *IfNode) Copy() Node</source>
          <target state="translated">func (i * IfNode) Copy () 노드</target>
        </trans-unit>
        <trans-unit id="31ffbbe40400b57eb4a665288b64870ffd72800f" translate="yes" xml:space="preserve">
          <source>func (i *Inst) MatchEmptyWidth(before rune, after rune) bool</source>
          <target state="translated">func (i * Inst) MatchEmptyWidth (룬 전, 룬 후) bool</target>
        </trans-unit>
        <trans-unit id="ad7df5cbcf35f64a9c3826f2a67002817684e463" translate="yes" xml:space="preserve">
          <source>func (i *Inst) MatchRune(r rune) bool</source>
          <target state="translated">func (i * Inst) MatchRune (r 룬) 부울</target>
        </trans-unit>
        <trans-unit id="47fd61e7d5c8636750e0d71c6df4a83bcef7c9bf" translate="yes" xml:space="preserve">
          <source>func (i *Inst) MatchRunePos(r rune) int</source>
          <target state="translated">func (i * Inst) MatchRunePos (r 룬) int</target>
        </trans-unit>
        <trans-unit id="08e41cb0cc1d8ff7aa04e344765280812e56fa82" translate="yes" xml:space="preserve">
          <source>func (i *Inst) String() string</source>
          <target state="translated">func (i * Inst) String () 문자열</target>
        </trans-unit>
        <trans-unit id="1a2a20435a013935713bec5b8dd68ec65a8afe8c" translate="yes" xml:space="preserve">
          <source>func (i Accuracy) String() string</source>
          <target state="translated">func (i 정확도) String () 문자열</target>
        </trans-unit>
        <trans-unit id="5a49a76dfc0b87d77d4b72050ea98469c515bc1f" translate="yes" xml:space="preserve">
          <source>func (i Attr) String() string</source>
          <target state="translated">func (i Attr) String () 문자열</target>
        </trans-unit>
        <trans-unit id="2990f07cead508315439e8ada0591863132f0d3c" translate="yes" xml:space="preserve">
          <source>func (i Class) GoString() string</source>
          <target state="translated">func (i 클래스) GoString () 문자열</target>
        </trans-unit>
        <trans-unit id="119c6d56a84da71b3c44e018a6048c0879ec92e9" translate="yes" xml:space="preserve">
          <source>func (i Class) String() string</source>
          <target state="translated">func (i 클래스) String () 문자열</target>
        </trans-unit>
        <trans-unit id="888547de3332bd67ea30af7bd227134302b97a71" translate="yes" xml:space="preserve">
          <source>func (i CompressionType) GoString() string</source>
          <target state="translated">func (i CompressionType) GoString () 문자열</target>
        </trans-unit>
        <trans-unit id="2f3648d8b731d6dbc9ea70ad0df12456a8745d68" translate="yes" xml:space="preserve">
          <source>func (i CompressionType) String() string</source>
          <target state="translated">func (i CompressionType) String () 문자열</target>
        </trans-unit>
        <trans-unit id="0c5487d58b2bbebedbfd50160a9a9e88660638b9" translate="yes" xml:space="preserve">
          <source>func (i Cpu) GoString() string</source>
          <target state="translated">func (i cpu) GoString () 문자열</target>
        </trans-unit>
        <trans-unit id="b38f7daa715755a499575885c47e7490905d238f" translate="yes" xml:space="preserve">
          <source>func (i Cpu) String() string</source>
          <target state="translated">func (i cpu) 문자열 () 문자열</target>
        </trans-unit>
        <trans-unit id="d998856acff8c3a47129eff2e12598bebfa3df22" translate="yes" xml:space="preserve">
          <source>func (i Data) GoString() string</source>
          <target state="translated">func (i Data) GoString () 문자열</target>
        </trans-unit>
        <trans-unit id="4035ee66c71d89f680d6dd0ce34446081e96172e" translate="yes" xml:space="preserve">
          <source>func (i Data) String() string</source>
          <target state="translated">func (i Data) String () 문자열</target>
        </trans-unit>
        <trans-unit id="2efb31e9df0c79469b9b3a1cb0e84a2deb385871" translate="yes" xml:space="preserve">
          <source>func (i DynFlag) GoString() string</source>
          <target state="translated">func (i DynFlag) GoString () 문자열</target>
        </trans-unit>
        <trans-unit id="9ff9f5361db95af447f4842e16e16bdcea53dfaa" translate="yes" xml:space="preserve">
          <source>func (i DynFlag) String() string</source>
          <target state="translated">func (i DynFlag) String () 문자열</target>
        </trans-unit>
        <trans-unit id="cf38de62c4d38cfda539a1722401e58927d5b23a" translate="yes" xml:space="preserve">
          <source>func (i DynTag) GoString() string</source>
          <target state="translated">func (i DynTag) GoString () 문자열</target>
        </trans-unit>
        <trans-unit id="8e9fb0a6053cf0a4b9fdbe4cee9b5fa0b60a3eec" translate="yes" xml:space="preserve">
          <source>func (i DynTag) String() string</source>
          <target state="translated">func (i DynTag) String () 문자열</target>
        </trans-unit>
        <trans-unit id="eee6f1de9f9e61f362abdd098fe45e3cec306376" translate="yes" xml:space="preserve">
          <source>func (i InstOp) String() string</source>
          <target state="translated">func (i InstOp) String () 문자열</target>
        </trans-unit>
        <trans-unit id="8dfccdecfbb43c1e39ec635549b51f734ead5641" translate="yes" xml:space="preserve">
          <source>func (i IsolationLevel) String() string</source>
          <target state="translated">func (i IsolationLevel) String () 문자열</target>
        </trans-unit>
        <trans-unit id="26c39826f73e50513b2372fdb6b80da5756a04a5" translate="yes" xml:space="preserve">
          <source>func (i LoadCmd) GoString() string</source>
          <target state="translated">func (i LoadCmd) GoString () 문자열</target>
        </trans-unit>
        <trans-unit id="6f3b2ce4585273674cccf1ff784b5f1385e93603" translate="yes" xml:space="preserve">
          <source>func (i LoadCmd) String() string</source>
          <target state="translated">func (i LoadCmd) String () 문자열</target>
        </trans-unit>
        <trans-unit id="252c0a3f62ea0ba99ce111c1634a4567396bd0b4" translate="yes" xml:space="preserve">
          <source>func (i Machine) GoString() string</source>
          <target state="translated">func (i Machine) GoString () 문자열</target>
        </trans-unit>
        <trans-unit id="36c0ea7399dc1d578ba55a26dc2fc85f74a16eae" translate="yes" xml:space="preserve">
          <source>func (i Machine) String() string</source>
          <target state="translated">func (i Machine) String () 문자열</target>
        </trans-unit>
        <trans-unit id="ebb632221528ed700cbaa414f261e1d5d36c0b72" translate="yes" xml:space="preserve">
          <source>func (i NType) GoString() string</source>
          <target state="translated">func (i NType) GoString () 문자열</target>
        </trans-unit>
        <trans-unit id="5ddeea9f01822b4a9f3330858a580b031ff4a0c5" translate="yes" xml:space="preserve">
          <source>func (i NType) String() string</source>
          <target state="translated">func (i NType) String () 문자열</target>
        </trans-unit>
        <trans-unit id="452624b590e0106b6c06cb4b456c76e8de8ae8f9" translate="yes" xml:space="preserve">
          <source>func (i OSABI) GoString() string</source>
          <target state="translated">func (i OSABI) GoString () 문자열</target>
        </trans-unit>
        <trans-unit id="90f3ec2ef90f6c8ff498580b45d13676b1f36292" translate="yes" xml:space="preserve">
          <source>func (i OSABI) String() string</source>
          <target state="translated">func (i OSABI) 문자열 () 문자열</target>
        </trans-unit>
        <trans-unit id="dbebcc1dbf4ad243ac2353743e099403358348a4" translate="yes" xml:space="preserve">
          <source>func (i Op) String() string</source>
          <target state="translated">func (i Op) String () 문자열</target>
        </trans-unit>
        <trans-unit id="b8d714c83f01233d03d9c190412ddfe781ef97a3" translate="yes" xml:space="preserve">
          <source>func (i ProgFlag) GoString() string</source>
          <target state="translated">func (i ProgFlag) GoString () 문자열</target>
        </trans-unit>
        <trans-unit id="7631d6543e1065afbfa3ff0fcf288af4b8351fe0" translate="yes" xml:space="preserve">
          <source>func (i ProgFlag) String() string</source>
          <target state="translated">func (i ProgFlag) String () 문자열</target>
        </trans-unit>
        <trans-unit id="bb3c1a2fcbd692aa4adfa849d94fe8bdbd3e98f8" translate="yes" xml:space="preserve">
          <source>func (i ProgType) GoString() string</source>
          <target state="translated">func (i ProgType) GoString () 문자열</target>
        </trans-unit>
        <trans-unit id="a0e20b2813ede818468bec14a0427a79e9915b55" translate="yes" xml:space="preserve">
          <source>func (i ProgType) String() string</source>
          <target state="translated">func (i ProgType) String () 문자열</target>
        </trans-unit>
        <trans-unit id="1b79858e6c3c3728dbf22f76230a0894ab2e8fe4" translate="yes" xml:space="preserve">
          <source>func (i R_386) GoString() string</source>
          <target state="translated">func (i R_386) GoString () 문자열</target>
        </trans-unit>
        <trans-unit id="bcf3b9301ed7b9bdf287072d77026ba45ff89219" translate="yes" xml:space="preserve">
          <source>func (i R_386) String() string</source>
          <target state="translated">func (i R_386) String () 문자열</target>
        </trans-unit>
        <trans-unit id="7f6aa6d00c0e6fd23b715cc367f7a95a1ce0a663" translate="yes" xml:space="preserve">
          <source>func (i R_390) GoString() string</source>
          <target state="translated">func (i R_390) GoString () 문자열</target>
        </trans-unit>
        <trans-unit id="212a30c07cead5e2fd48e59cfd967e0a92dbb338" translate="yes" xml:space="preserve">
          <source>func (i R_390) String() string</source>
          <target state="translated">func (i R_390) String () 문자열</target>
        </trans-unit>
        <trans-unit id="da54d1158ea136b756303afedfb6077d0c509842" translate="yes" xml:space="preserve">
          <source>func (i R_AARCH64) GoString() string</source>
          <target state="translated">func (i R_AARCH64) GoString () 문자열</target>
        </trans-unit>
        <trans-unit id="92679281677dd753e70c4154f9a9cf383a295fe3" translate="yes" xml:space="preserve">
          <source>func (i R_AARCH64) String() string</source>
          <target state="translated">func (i R_AARCH64) String () 문자열</target>
        </trans-unit>
        <trans-unit id="0647579513031f66393c8c56243b142421602a01" translate="yes" xml:space="preserve">
          <source>func (i R_ALPHA) GoString() string</source>
          <target state="translated">func (i R_ALPHA) GoString () 문자열</target>
        </trans-unit>
        <trans-unit id="f0a726582685244bbc8f4d7804ccde5b81269037" translate="yes" xml:space="preserve">
          <source>func (i R_ALPHA) String() string</source>
          <target state="translated">func (i R_ALPHA) String () 문자열</target>
        </trans-unit>
        <trans-unit id="9173656aaf5340413205ac3b9a6d621fa9f34fb9" translate="yes" xml:space="preserve">
          <source>func (i R_ARM) GoString() string</source>
          <target state="translated">func (i R_ARM) GoString () 문자열</target>
        </trans-unit>
        <trans-unit id="5092c76e581727b86ca1c07a65cf48df8db1c181" translate="yes" xml:space="preserve">
          <source>func (i R_ARM) String() string</source>
          <target state="translated">func (i R_ARM) String () 문자열</target>
        </trans-unit>
        <trans-unit id="39c37cf75ed9ce20e4e47c750e2b56e9368bc8a3" translate="yes" xml:space="preserve">
          <source>func (i R_MIPS) GoString() string</source>
          <target state="translated">func (i R_MIPS) GoString () 문자열</target>
        </trans-unit>
        <trans-unit id="917f4018adac4064d36720a47231699cfaf46796" translate="yes" xml:space="preserve">
          <source>func (i R_MIPS) String() string</source>
          <target state="translated">func (i R_MIPS) String () 문자열</target>
        </trans-unit>
        <trans-unit id="79a35bbb11a44de977f52ac6d4a5ed89852b4758" translate="yes" xml:space="preserve">
          <source>func (i R_PPC) GoString() string</source>
          <target state="translated">func (i R_PPC) GoString () 문자열</target>
        </trans-unit>
        <trans-unit id="4d16f9826c9b4c5ea7f51694c2063c7040515991" translate="yes" xml:space="preserve">
          <source>func (i R_PPC) String() string</source>
          <target state="translated">func (i R_PPC) String () 문자열</target>
        </trans-unit>
        <trans-unit id="a67ad318e4322c5b819f4bb949c76d4bf6d6f60d" translate="yes" xml:space="preserve">
          <source>func (i R_PPC64) GoString() string</source>
          <target state="translated">func (i R_PPC64) GoString () 문자열</target>
        </trans-unit>
        <trans-unit id="d98f2bf8a6845d53a49f00366af2a2d624ccfe61" translate="yes" xml:space="preserve">
          <source>func (i R_PPC64) String() string</source>
          <target state="translated">func (i R_PPC64) String () 문자열</target>
        </trans-unit>
        <trans-unit id="3bb56cbed0e30d2f3d3107bda47abdb681e2498e" translate="yes" xml:space="preserve">
          <source>func (i R_RISCV) GoString() string</source>
          <target state="translated">func (i R_RISCV) GoString () 문자열</target>
        </trans-unit>
        <trans-unit id="bad0b980558b110888e555fad20b9c6f9820b953" translate="yes" xml:space="preserve">
          <source>func (i R_RISCV) String() string</source>
          <target state="translated">func (i R_RISCV) String () 문자열</target>
        </trans-unit>
        <trans-unit id="a352bea76191e59ec31b5e3385324d7370c6836a" translate="yes" xml:space="preserve">
          <source>func (i R_SPARC) GoString() string</source>
          <target state="translated">func (i R_SPARC) GoString () 문자열</target>
        </trans-unit>
        <trans-unit id="ac910c5480f43c024f9849265b20636d9416a4cd" translate="yes" xml:space="preserve">
          <source>func (i R_SPARC) String() string</source>
          <target state="translated">func (i R_SPARC) String () 문자열</target>
        </trans-unit>
        <trans-unit id="c3e429c684cc45eae94b276768e122718c4fc43f" translate="yes" xml:space="preserve">
          <source>func (i R_X86_64) GoString() string</source>
          <target state="translated">func (i R_X86_64) GoString () 문자열</target>
        </trans-unit>
        <trans-unit id="89c327d9bd387a8e671709f620eadc2f90845eb1" translate="yes" xml:space="preserve">
          <source>func (i R_X86_64) String() string</source>
          <target state="translated">func (i R_X86_64) String () 문자열</target>
        </trans-unit>
        <trans-unit id="b4607c8e90354b891962c34f28c89e7a0655627e" translate="yes" xml:space="preserve">
          <source>func (i RelocTypeARM) String() string</source>
          <target state="translated">func (i RelocTypeARM) String () 문자열</target>
        </trans-unit>
        <trans-unit id="fb7590b578a5f038cdcc2658b5f38d5e8f29f849" translate="yes" xml:space="preserve">
          <source>func (i RelocTypeARM64) String() string</source>
          <target state="translated">func (i RelocTypeARM64) String () 문자열</target>
        </trans-unit>
        <trans-unit id="e3d4db042e5917c8f5e8d5ab2e8ddcbc30697190" translate="yes" xml:space="preserve">
          <source>func (i RelocTypeGeneric) String() string</source>
          <target state="translated">func (i RelocTypeGeneric) String () 문자열</target>
        </trans-unit>
        <trans-unit id="f14c766c3253b2cfb81ab59c89131135cda4aa1f" translate="yes" xml:space="preserve">
          <source>func (i RelocTypeX86_64) String() string</source>
          <target state="translated">func (i RelocTypeX86_64) String () 문자열</target>
        </trans-unit>
        <trans-unit id="660396c73807b59b2bdf5bb906447b8a5be10738" translate="yes" xml:space="preserve">
          <source>func (i RoundingMode) String() string</source>
          <target state="translated">func (i RoundingMode) String () 문자열</target>
        </trans-unit>
        <trans-unit id="bcb1a6fa40f1fa518fdcc4d102c9266075b3ca1a" translate="yes" xml:space="preserve">
          <source>func (i SectionFlag) GoString() string</source>
          <target state="translated">func (i SectionFlag) GoString () 문자열</target>
        </trans-unit>
        <trans-unit id="61bbb4d9cf064df1018b7bb75352209b104cb087" translate="yes" xml:space="preserve">
          <source>func (i SectionFlag) String() string</source>
          <target state="translated">func (i SectionFlag) String () 문자열</target>
        </trans-unit>
        <trans-unit id="2fc49270b57b1dc4dda6b1300bc0a62554806140" translate="yes" xml:space="preserve">
          <source>func (i SectionIndex) GoString() string</source>
          <target state="translated">func (i SectionIndex) GoString () 문자열</target>
        </trans-unit>
        <trans-unit id="76836e2a1ace6e05643ab1c46037dfef0039d7f9" translate="yes" xml:space="preserve">
          <source>func (i SectionIndex) String() string</source>
          <target state="translated">func (i SectionIndex) String () 문자열</target>
        </trans-unit>
        <trans-unit id="0e01315eb9d8cc800bacd227fb48d3979874bdf9" translate="yes" xml:space="preserve">
          <source>func (i SectionType) GoString() string</source>
          <target state="translated">func (i SectionType) GoString () 문자열</target>
        </trans-unit>
        <trans-unit id="3afefa7acd92486893c333b9878496264be1e700" translate="yes" xml:space="preserve">
          <source>func (i SectionType) String() string</source>
          <target state="translated">func (i SectionType) String () 문자열</target>
        </trans-unit>
        <trans-unit id="c8060553a32619461ba2312b9b830265bca7b395" translate="yes" xml:space="preserve">
          <source>func (i SymBind) GoString() string</source>
          <target state="translated">func (i SymBind) GoString () 문자열</target>
        </trans-unit>
        <trans-unit id="2318fb725a4c3a20a7f473403bd086da925d2628" translate="yes" xml:space="preserve">
          <source>func (i SymBind) String() string</source>
          <target state="translated">func (i SymBind) String () 문자열</target>
        </trans-unit>
        <trans-unit id="9d89ecbe22b31a3b213bef53bd600bc7d940cb79" translate="yes" xml:space="preserve">
          <source>func (i SymType) GoString() string</source>
          <target state="translated">func (i SymType) GoString () 문자열</target>
        </trans-unit>
        <trans-unit id="0b7b16535ec07a8d6691a4bf969094f6691220d7" translate="yes" xml:space="preserve">
          <source>func (i SymType) String() string</source>
          <target state="translated">func (i SymType) 문자열 () 문자열</target>
        </trans-unit>
        <trans-unit id="87c7a607d09a647ccd3f2fcfcbedf5e132969be0" translate="yes" xml:space="preserve">
          <source>func (i SymVis) GoString() string</source>
          <target state="translated">func (i SymVis) GoString () 문자열</target>
        </trans-unit>
        <trans-unit id="6fd5ef53aae023c346f905e9828fc57fa73097c4" translate="yes" xml:space="preserve">
          <source>func (i SymVis) String() string</source>
          <target state="translated">func (i SymVis) String () 문자열</target>
        </trans-unit>
        <trans-unit id="5a1979854eac5a31dc1c159a5940556043f4b294" translate="yes" xml:space="preserve">
          <source>func (i Tag) String() string</source>
          <target state="translated">func (i Tag) String () 문자열</target>
        </trans-unit>
        <trans-unit id="18052f64cf7afcaf2b50b2715181a10875361775" translate="yes" xml:space="preserve">
          <source>func (i Type) GoString() string</source>
          <target state="translated">func (i 유형) GoString () 문자열</target>
        </trans-unit>
        <trans-unit id="2f6e20f151b94a07bdee48b252f2de9c1cacfe9e" translate="yes" xml:space="preserve">
          <source>func (i Type) String() string</source>
          <target state="translated">func (i 유형) String () 문자열</target>
        </trans-unit>
        <trans-unit id="5468d36b6581e020e3adf15b480c9611ab9cec2d" translate="yes" xml:space="preserve">
          <source>func (i Version) GoString() string</source>
          <target state="translated">func (i 버전) GoString () 문자열</target>
        </trans-unit>
        <trans-unit id="0e85d57980c3c14cd29675bdc718b6c6011629f5" translate="yes" xml:space="preserve">
          <source>func (i Version) String() string</source>
          <target state="translated">func (i 버전) String () 문자열</target>
        </trans-unit>
        <trans-unit id="675b83e2bc46a1497a1062bd863fe2caa8e93b4d" translate="yes" xml:space="preserve">
          <source>func (id *Ident) IsExported() bool</source>
          <target state="translated">func (id * ID) IsExported () 부울</target>
        </trans-unit>
        <trans-unit id="f8c420d2f4dbd2944f26d914bdc7cdcc1af2a8fd" translate="yes" xml:space="preserve">
          <source>func (id *Ident) String() string</source>
          <target state="translated">func (id * Ident) String () 문자열</target>
        </trans-unit>
        <trans-unit id="2328509e995e1dbcd275c2e618047abd6de6d20b" translate="yes" xml:space="preserve">
          <source>func (ifi *Interface) Addrs() ([]Addr, error)</source>
          <target state="translated">func (ifi * 인터페이스) Addrs () ([] Addr, 오류)</target>
        </trans-unit>
        <trans-unit id="2e07329eb60bd029bc0e9bed43a4cc3765837063" translate="yes" xml:space="preserve">
          <source>func (ifi *Interface) MulticastAddrs() ([]Addr, error)</source>
          <target state="translated">func (ifi * 인터페이스) MulticastAddrs () ([] 주소, 오류)</target>
        </trans-unit>
        <trans-unit id="89247eb2eafff17e7b772e6de0a31f57d1d8cf6c" translate="yes" xml:space="preserve">
          <source>func (info *Info) ObjectOf(id *ast.Ident) Object</source>
          <target state="translated">func (info * Info) ObjectOf (id * ast.Ident) 객체</target>
        </trans-unit>
        <trans-unit id="752ce90d63fcbe79e15da64db9e1dbdfbab1452e" translate="yes" xml:space="preserve">
          <source>func (info *Info) TypeOf(e ast.Expr) Type</source>
          <target state="translated">func (info * Info) TypeOf (e ast.Expr) 유형</target>
        </trans-unit>
        <trans-unit id="65e601af40b63f993f20bd9d5ea3f1ba1f77c9cd" translate="yes" xml:space="preserve">
          <source>func (init *Initializer) String() string</source>
          <target state="translated">func (init * Initializer) String () 문자열</target>
        </trans-unit>
        <trans-unit id="fa4612b5817acffbc02ad92b67c6bf2aabe04479" translate="yes" xml:space="preserve">
          <source>func (iov *Iovec) SetLen(length int)</source>
          <target state="translated">func (iov * Iovec) SetLen (길이 int)</target>
        </trans-unit>
        <trans-unit id="3000e2b682c2910f12afbd460594f6317b757dd5" translate="yes" xml:space="preserve">
          <source>func (ip *IP) UnmarshalText(text []byte) error</source>
          <target state="translated">func (ip * IP) UnmarshalText (텍스트 [] 바이트) 오류</target>
        </trans-unit>
        <trans-unit id="267190956e03307fe28031241b5532ccdd2852fb" translate="yes" xml:space="preserve">
          <source>func (ip IP) DefaultMask() IPMask</source>
          <target state="translated">func (ip IP) DefaultMask () IPMask</target>
        </trans-unit>
        <trans-unit id="91beb625bd11516b434dff3d998e966bfb38e628" translate="yes" xml:space="preserve">
          <source>func (ip IP) Equal(x IP) bool</source>
          <target state="translated">func (ip IP) 같음 (x IP) bool</target>
        </trans-unit>
        <trans-unit id="5b995f1ec7b4cc36aafdac6ba8ae38f335d28dd4" translate="yes" xml:space="preserve">
          <source>func (ip IP) IsGlobalUnicast() bool</source>
          <target state="translated">func (ip IP) IsGlobalUnicast () 부울</target>
        </trans-unit>
        <trans-unit id="87f14e77ef3d1132080d12fd576f94dd849609db" translate="yes" xml:space="preserve">
          <source>func (ip IP) IsInterfaceLocalMulticast() bool</source>
          <target state="translated">func (ip IP) IsInterfaceLocalMulticast () 부울</target>
        </trans-unit>
        <trans-unit id="2328a225b908a6341682da14844af07bfd9d6c29" translate="yes" xml:space="preserve">
          <source>func (ip IP) IsLinkLocalMulticast() bool</source>
          <target state="translated">func (ip IP) IsLinkLocalMulticast () 부울</target>
        </trans-unit>
        <trans-unit id="582779b2f687e2499bb4cb995024a80fac7bdd77" translate="yes" xml:space="preserve">
          <source>func (ip IP) IsLinkLocalUnicast() bool</source>
          <target state="translated">func (ip IP) IsLinkLocalUnicast () 부울</target>
        </trans-unit>
        <trans-unit id="ee1b082fff6d49e64f05a4c79f267412834848a6" translate="yes" xml:space="preserve">
          <source>func (ip IP) IsLoopback() bool</source>
          <target state="translated">func (ip IP) IsLoopback () 부울</target>
        </trans-unit>
        <trans-unit id="99236586f370ad92fcfbaeb06a93dd95aae2815d" translate="yes" xml:space="preserve">
          <source>func (ip IP) IsMulticast() bool</source>
          <target state="translated">func (ip IP) IsMulticast () 부울</target>
        </trans-unit>
        <trans-unit id="3ad90464822fe95be6b5c2b3e92a2dfb1edbd38a" translate="yes" xml:space="preserve">
          <source>func (ip IP) IsUnspecified() bool</source>
          <target state="translated">func (ip IP) IsUnspecified () 부울</target>
        </trans-unit>
        <trans-unit id="8ae0fd0d43a86cde1360cb22de7d04212829dc0f" translate="yes" xml:space="preserve">
          <source>func (ip IP) MarshalText() ([]byte, error)</source>
          <target state="translated">func (ip IP) MarshalText () ([] 바이트, 오류)</target>
        </trans-unit>
        <trans-unit id="0b331049a7b50d7249aa5bd76ed11781145092e7" translate="yes" xml:space="preserve">
          <source>func (ip IP) Mask(mask IPMask) IP</source>
          <target state="translated">func (ip IP) 마스크 (mask IPMask) IP</target>
        </trans-unit>
        <trans-unit id="d43c42fba13c248ed4218eb50b75f80a95ff17f8" translate="yes" xml:space="preserve">
          <source>func (ip IP) String() string</source>
          <target state="translated">func (ip IP) 문자열 () 문자열</target>
        </trans-unit>
        <trans-unit id="1eaa343e7ffd998dd549bd9c9624bb47d930d1a4" translate="yes" xml:space="preserve">
          <source>func (ip IP) To16() IP</source>
          <target state="translated">func (ip IP) To16 () IP</target>
        </trans-unit>
        <trans-unit id="140216227b529de46fe5e8fcd2bca7198bab7e68" translate="yes" xml:space="preserve">
          <source>func (ip IP) To4() IP</source>
          <target state="translated">func (ip IP) To4 () IP</target>
        </trans-unit>
        <trans-unit id="fd1b69aac9f0e711b7722733090a293db45cb958" translate="yes" xml:space="preserve">
          <source>func (it *MapIter) Key() Value</source>
          <target state="translated">func (it * MapIter) Key () 값</target>
        </trans-unit>
        <trans-unit id="30725fa45388cf2eb67fccbe1a73ba766339d9b9" translate="yes" xml:space="preserve">
          <source>func (it *MapIter) Next() bool</source>
          <target state="translated">func (it * MapIter) 다음 () bool</target>
        </trans-unit>
        <trans-unit id="bef9661017f7e556847a72422989e712a695caf3" translate="yes" xml:space="preserve">
          <source>func (it *MapIter) Value() Value</source>
          <target state="translated">func (it * MapIter) Value () 값</target>
        </trans-unit>
        <trans-unit id="69db8ddf109276145c3dcaab5312c336eb7cd529" translate="yes" xml:space="preserve">
          <source>func (j *Jar) Cookies(u *url.URL) (cookies []*http.Cookie)</source>
          <target state="translated">func (j * Jar) 쿠키 (u * url.URL) (쿠키 [] * http.Cookie)</target>
        </trans-unit>
        <trans-unit id="2ce243c5fb2c419faf3026c9b134898957b4a266" translate="yes" xml:space="preserve">
          <source>func (j *Jar) SetCookies(u *url.URL, cookies []*http.Cookie)</source>
          <target state="translated">func (j * Jar) SetCookies (u * url.URL, 쿠키 [] * http.Cookie)</target>
        </trans-unit>
        <trans-unit id="3afdb166a0708d49a4c61ec2facf69ac9cab0d79" translate="yes" xml:space="preserve">
          <source>func (k KeySizeError) Error() string</source>
          <target state="translated">func (k KeySizeError) Error () 문자열</target>
        </trans-unit>
        <trans-unit id="a9072cf6a9a9c10daf87d85d724122c19821565b" translate="yes" xml:space="preserve">
          <source>func (k Kind) String() string</source>
          <target state="translated">func (k Kind) String () 문자열</target>
        </trans-unit>
        <trans-unit id="c03f0dd072efbaa2dd16049decb7e0dcbdc2fe8f" translate="yes" xml:space="preserve">
          <source>func (kind ObjKind) String() string</source>
          <target state="translated">func (종류 ObjKind) String () 문자열</target>
        </trans-unit>
        <trans-unit id="29fa287d5a6c4a2aea63b1621daeadc5b10ea490" translate="yes" xml:space="preserve">
          <source>func (l *LimitedReader) Read(p []byte) (n int, err error)</source>
          <target state="translated">func (l * LimitedReader) 읽기 (p [] 바이트) (n int, 오류)</target>
        </trans-unit>
        <trans-unit id="5f484752c43cfdbbe8e2b08d81d40bc6b5bf2dbc" translate="yes" xml:space="preserve">
          <source>func (l *List) Back() *Element</source>
          <target state="translated">func (l * List) Back () * 요소</target>
        </trans-unit>
        <trans-unit id="8ba6ad08322be48d4fa73535debc2583bc131dd0" translate="yes" xml:space="preserve">
          <source>func (l *List) Front() *Element</source>
          <target state="translated">func (l * List) Front () * 요소</target>
        </trans-unit>
        <trans-unit id="f23c6207c5482f5026b50bd325112b9f160ad85a" translate="yes" xml:space="preserve">
          <source>func (l *List) Init() *List</source>
          <target state="translated">func (l * List) Init () * 목록</target>
        </trans-unit>
        <trans-unit id="28bd666ea0aaba3689953341b6778ed860633e57" translate="yes" xml:space="preserve">
          <source>func (l *List) InsertAfter(v interface{}, mark *Element) *Element</source>
          <target state="translated">func (l * List) InsertAfter (v interface {}, mark * Element) * 요소</target>
        </trans-unit>
        <trans-unit id="acf5fa59301010369da37cae308b93a9efa049ca" translate="yes" xml:space="preserve">
          <source>func (l *List) InsertBefore(v interface{}, mark *Element) *Element</source>
          <target state="translated">func (l * List) InsertBefore (v interface {}, mark * Element) * 요소</target>
        </trans-unit>
        <trans-unit id="30346a0434d34cdfc695153301c884dfc9a34434" translate="yes" xml:space="preserve">
          <source>func (l *List) Len() int</source>
          <target state="translated">func (l * 목록) Len () int</target>
        </trans-unit>
        <trans-unit id="ef6c9a42999ec0ce0631adfffacf34828972c483" translate="yes" xml:space="preserve">
          <source>func (l *List) MoveAfter(e, mark *Element)</source>
          <target state="translated">func (l * List) MoveAfter (e, 표시 * 요소)</target>
        </trans-unit>
        <trans-unit id="9d7ff4c2df2a92933da362b306531e086ca06e57" translate="yes" xml:space="preserve">
          <source>func (l *List) MoveBefore(e, mark *Element)</source>
          <target state="translated">func (l * List) MoveBefore (e, 표시 * 요소)</target>
        </trans-unit>
        <trans-unit id="e7d7b7aaabad3bd9a3bde1832dc17926010e59c8" translate="yes" xml:space="preserve">
          <source>func (l *List) MoveToBack(e *Element)</source>
          <target state="translated">func (l * List) MoveToBack (e * 요소)</target>
        </trans-unit>
        <trans-unit id="bd608dceaad2036d5372fcab4836e2fb72572a90" translate="yes" xml:space="preserve">
          <source>func (l *List) MoveToFront(e *Element)</source>
          <target state="translated">func (l * List) MoveToFront (e * 요소)</target>
        </trans-unit>
        <trans-unit id="e3a5120d5fe683f82f687f99b4f66b4076aad07e" translate="yes" xml:space="preserve">
          <source>func (l *List) PushBack(v interface{}) *Element</source>
          <target state="translated">func (l * List) PushBack (v 인터페이스 {}) * 요소</target>
        </trans-unit>
        <trans-unit id="aa69524d384414d7481439894b700495d0dfb385" translate="yes" xml:space="preserve">
          <source>func (l *List) PushBackList(other *List)</source>
          <target state="translated">func (l * List) PushBackList (기타 * 목록)</target>
        </trans-unit>
        <trans-unit id="755077c54ff680235ec6d8e5e55f27b30d4ae34a" translate="yes" xml:space="preserve">
          <source>func (l *List) PushFront(v interface{}) *Element</source>
          <target state="translated">func (l * List) PushFront (v interface {}) * 요소</target>
        </trans-unit>
        <trans-unit id="8a88919c5225224a61886b6cf4a7664fc57d23ce" translate="yes" xml:space="preserve">
          <source>func (l *List) PushFrontList(other *List)</source>
          <target state="translated">func (l * List) PushFrontList (기타 * 목록)</target>
        </trans-unit>
        <trans-unit id="636a1733cbd32120735914267949ce28a7cbec5c" translate="yes" xml:space="preserve">
          <source>func (l *List) Remove(e *Element) interface{}</source>
          <target state="translated">func (l * List) 제거 (e * Element) 인터페이스 {}</target>
        </trans-unit>
        <trans-unit id="ca66869eed9c9f1c4fcd1652920d6204165d7dac" translate="yes" xml:space="preserve">
          <source>func (l *ListNode) Copy() Node</source>
          <target state="translated">func (l * ListNode) Copy () 노드</target>
        </trans-unit>
        <trans-unit id="5480273a3e34bf29c736e1170410717e69069385" translate="yes" xml:space="preserve">
          <source>func (l *ListNode) CopyList() *ListNode</source>
          <target state="translated">func (l * ListNode) CopyList () * 목록 노드</target>
        </trans-unit>
        <trans-unit id="75b7d406e6b6f7b46d37a10f1fd745f63ff947ba" translate="yes" xml:space="preserve">
          <source>func (l *ListNode) String() string</source>
          <target state="translated">func (l * ListNode) String () 문자열</target>
        </trans-unit>
        <trans-unit id="2121b91711188a1e2108e3673277c918a3d8c1b9" translate="yes" xml:space="preserve">
          <source>func (l *Location) String() string</source>
          <target state="translated">func (l * Location) String () 문자열</target>
        </trans-unit>
        <trans-unit id="20373798a221f99b8b06e55a0809bfd555a781d5" translate="yes" xml:space="preserve">
          <source>func (l *Logger) Fatal(v ...interface{})</source>
          <target state="translated">func (l * Logger) 치명적 (v ... 인터페이스 {})</target>
        </trans-unit>
        <trans-unit id="f0f8668d42d37ec4f200b2fe3e2888288cb8567e" translate="yes" xml:space="preserve">
          <source>func (l *Logger) Fatalf(format string, v ...interface{})</source>
          <target state="translated">func (l * Logger) Fatalf (형식 문자열, v ... 인터페이스 {})</target>
        </trans-unit>
        <trans-unit id="7eb123d169c849c75745e172d6ec20241a3dd953" translate="yes" xml:space="preserve">
          <source>func (l *Logger) Fatalln(v ...interface{})</source>
          <target state="translated">func (l * Logger) Fatalln (v ... 인터페이스 {})</target>
        </trans-unit>
        <trans-unit id="754045ec7871dc6ed8b8d2ed74149600c5daa73d" translate="yes" xml:space="preserve">
          <source>func (l *Logger) Flags() int</source>
          <target state="translated">func (l * Logger) 플래그 () int</target>
        </trans-unit>
        <trans-unit id="af70609dbe6174f4843d1719b922a5ff413ed49e" translate="yes" xml:space="preserve">
          <source>func (l *Logger) Output(calldepth int, s string) error</source>
          <target state="translated">func (l * Logger) 출력 (calldepth int, s 문자열) 오류</target>
        </trans-unit>
        <trans-unit id="02b0dcbcacf3855825adac6c2012f1788b44df74" translate="yes" xml:space="preserve">
          <source>func (l *Logger) Panic(v ...interface{})</source>
          <target state="translated">func (l * Logger) 패닉 (v ... 인터페이스 {})</target>
        </trans-unit>
        <trans-unit id="6fc0b038e751a52a698dd6da6b3e639a489faf3b" translate="yes" xml:space="preserve">
          <source>func (l *Logger) Panicf(format string, v ...interface{})</source>
          <target state="translated">func (l * Logger) Panicf (형식 문자열, v ... 인터페이스 {})</target>
        </trans-unit>
        <trans-unit id="f2707d0204ae97fe962b69711847f6fbc898786e" translate="yes" xml:space="preserve">
          <source>func (l *Logger) Panicln(v ...interface{})</source>
          <target state="translated">func (l * 로거) Panicln (v ... 인터페이스 {})</target>
        </trans-unit>
        <trans-unit id="d4d0958a66d9a0e62911fcb0916157fe2b646810" translate="yes" xml:space="preserve">
          <source>func (l *Logger) Prefix() string</source>
          <target state="translated">func (l * Logger) 접두사 () 문자열</target>
        </trans-unit>
        <trans-unit id="a3f3264bd604204d7b39b572bedfa986277a267d" translate="yes" xml:space="preserve">
          <source>func (l *Logger) Print(v ...interface{})</source>
          <target state="translated">func (l * 로거) 인쇄 (v ... 인터페이스 {})</target>
        </trans-unit>
        <trans-unit id="212af5cba9d8667f71f0cd9fb798bcc585e3efde" translate="yes" xml:space="preserve">
          <source>func (l *Logger) Printf(format string, v ...interface{})</source>
          <target state="translated">func (l * Logger) Printf (형식 문자열, v ... 인터페이스 {})</target>
        </trans-unit>
        <trans-unit id="91216366d6a3b8e7fbce559679cca1689bfd3d07" translate="yes" xml:space="preserve">
          <source>func (l *Logger) Println(v ...interface{})</source>
          <target state="translated">func (l * 로거) Println (v ... 인터페이스 {})</target>
        </trans-unit>
        <trans-unit id="e737979217ed3858d259322363563cf7c4d29839" translate="yes" xml:space="preserve">
          <source>func (l *Logger) SetFlags(flag int)</source>
          <target state="translated">func (l * Logger) SetFlags (플래그 int)</target>
        </trans-unit>
        <trans-unit id="058ad78ad105c3a22a0ffd7722babdd8d0939f6a" translate="yes" xml:space="preserve">
          <source>func (l *Logger) SetOutput(w io.Writer)</source>
          <target state="translated">func (l * Logger) SetOutput (w io.Writer)</target>
        </trans-unit>
        <trans-unit id="8dcf0a7ef72fcb4201503792d2f78b8dba8b644f" translate="yes" xml:space="preserve">
          <source>func (l *Logger) SetPrefix(prefix string)</source>
          <target state="translated">func (l * Logger) SetPrefix (접두사 문자열)</target>
        </trans-unit>
        <trans-unit id="2a01920918ddb2e87c0d3e46d4b119f8d184670e" translate="yes" xml:space="preserve">
          <source>func (l *Logger) Writer() io.Writer</source>
          <target state="translated">func (l * Logger) Writer () io.Writer</target>
        </trans-unit>
        <trans-unit id="742e9e40f0064ca9b4533af884eda09ed14ba3d7" translate="yes" xml:space="preserve">
          <source>func (l *TCPListener) Accept() (Conn, error)</source>
          <target state="translated">func (l * TCPListener) Accept () (계속, 오류)</target>
        </trans-unit>
        <trans-unit id="bf7fdb1cb8ad1d1667bcc8bde84ce12fdca7ef4c" translate="yes" xml:space="preserve">
          <source>func (l *TCPListener) AcceptTCP() (*TCPConn, error)</source>
          <target state="translated">func (l * TCPListener) AcceptTCP () (* TCPConn, 오류)</target>
        </trans-unit>
        <trans-unit id="ba227ea3b57ec86cfc183b97abfe388f943ff077" translate="yes" xml:space="preserve">
          <source>func (l *TCPListener) Addr() Addr</source>
          <target state="translated">func (l * TCPListener) Addr () 가산기</target>
        </trans-unit>
        <trans-unit id="67f575812e50cb2c991e16b0f0587b9fd42798e2" translate="yes" xml:space="preserve">
          <source>func (l *TCPListener) Close() error</source>
          <target state="translated">func (l * TCPListener) Close () 오류</target>
        </trans-unit>
        <trans-unit id="a71a0dce4877f8f11238a7bb04eb20751397d03e" translate="yes" xml:space="preserve">
          <source>func (l *TCPListener) File() (f *os.File, err error)</source>
          <target state="translated">func (l * TCPListener) File () (f * os.File, 에러 에러)</target>
        </trans-unit>
        <trans-unit id="9c816befa6437fe159ae19ac9f6bb8789f13dde3" translate="yes" xml:space="preserve">
          <source>func (l *TCPListener) SetDeadline(t time.Time) error</source>
          <target state="translated">func (l * TCPListener) SetDeadline (t time.Time) 오류</target>
        </trans-unit>
        <trans-unit id="6f7aee11742d7b2888d4913cc5137a4d487c2884" translate="yes" xml:space="preserve">
          <source>func (l *TCPListener) SyscallConn() (syscall.RawConn, error)</source>
          <target state="translated">func (l * TCPListener) SyscallConn () (syscall.RawConn, 오류)</target>
        </trans-unit>
        <trans-unit id="6ac589d27b7a297f9b315ca62ee5579fabafffb9" translate="yes" xml:space="preserve">
          <source>func (l *UnixListener) Accept() (Conn, error)</source>
          <target state="translated">func (l * UnixListener) Accept () (계속, 오류)</target>
        </trans-unit>
        <trans-unit id="ead875227f459f563606e5e50d31cdd0552b1859" translate="yes" xml:space="preserve">
          <source>func (l *UnixListener) AcceptUnix() (*UnixConn, error)</source>
          <target state="translated">func (l * UnixListener) AcceptUnix () (* UnixConn, 오류)</target>
        </trans-unit>
        <trans-unit id="f20ac7f1369db4a4c4256283d35e2391552df8b8" translate="yes" xml:space="preserve">
          <source>func (l *UnixListener) Addr() Addr</source>
          <target state="translated">func (l * UnixListener) Addr () 가산기</target>
        </trans-unit>
        <trans-unit id="ef01b201df8e28878f3035bcbef54ae187cf996a" translate="yes" xml:space="preserve">
          <source>func (l *UnixListener) Close() error</source>
          <target state="translated">func (l * UnixListener) Close () 오류</target>
        </trans-unit>
        <trans-unit id="c039657398bc75889e030c8e3ed057fae630cac1" translate="yes" xml:space="preserve">
          <source>func (l *UnixListener) File() (f *os.File, err error)</source>
          <target state="translated">func (l * UnixListener) File () (f * os.File, 에러 에러)</target>
        </trans-unit>
        <trans-unit id="caa4943973fbbc0d1e7d21ec9bd555df2828f263" translate="yes" xml:space="preserve">
          <source>func (l *UnixListener) SetDeadline(t time.Time) error</source>
          <target state="translated">func (l * UnixListener) SetDeadline (t time.Time) 오류</target>
        </trans-unit>
        <trans-unit id="5f9479dd8f175298dea32cdd3640deb77957cf3d" translate="yes" xml:space="preserve">
          <source>func (l *UnixListener) SetUnlinkOnClose(unlink bool)</source>
          <target state="translated">func (l * UnixListener) SetUnlinkOnClose (링크 해제 bool)</target>
        </trans-unit>
        <trans-unit id="56c30768f4bd8277b3227546239ceebb4563b95b" translate="yes" xml:space="preserve">
          <source>func (l *UnixListener) SyscallConn() (syscall.RawConn, error)</source>
          <target state="translated">func (l * UnixListener) SyscallConn () (syscall.RawConn, 오류)</target>
        </trans-unit>
        <trans-unit id="ffb9ce409608e40c151d201bccca8b15df0aa005" translate="yes" xml:space="preserve">
          <source>func (lc *ListenConfig) Listen(ctx context.Context, network, address string) (Listener, error)</source>
          <target state="translated">func (lc * ListenConfig) Listen (ctx 컨텍스트, 컨텍스트, 네트워크, 주소 문자열) (리스너, 오류)</target>
        </trans-unit>
        <trans-unit id="e060cba9de1b9fce1d13f415f6c47e99ab470da8" translate="yes" xml:space="preserve">
          <source>func (lc *ListenConfig) ListenPacket(ctx context.Context, network, address string) (PacketConn, error)</source>
          <target state="translated">func (lc * ListenConfig) ListenPacket (ctx 컨텍스트. 컨텍스트, 네트워크, 주소 문자열) (PacketConn, 오류)</target>
        </trans-unit>
        <trans-unit id="1e533ab23f281b5681ce39ec7c47491c4b3b0874" translate="yes" xml:space="preserve">
          <source>func (m *M) Run() int</source>
          <target state="translated">func (m * M) Run () int</target>
        </trans-unit>
        <trans-unit id="250bb4fb5927f8e3ad8fa9a567d84aa945ce64f1" translate="yes" xml:space="preserve">
          <source>func (m *Map) Delete(key interface{})</source>
          <target state="translated">func (m * Map) Delete (키 인터페이스 {})</target>
        </trans-unit>
        <trans-unit id="0c49d1797b42f1e2257ae660e075ccd70db63002" translate="yes" xml:space="preserve">
          <source>func (m *Map) Elem() Type</source>
          <target state="translated">func (m * Map) Elem () 유형</target>
        </trans-unit>
        <trans-unit id="33b49560efcb868240396ccbff67252ad0e6cc56" translate="yes" xml:space="preserve">
          <source>func (m *Map) Key() Type</source>
          <target state="translated">func (m * Map) Key () 타입</target>
        </trans-unit>
        <trans-unit id="f31b64dce55aa6f2245e7d2dd7f8100b280e5cfd" translate="yes" xml:space="preserve">
          <source>func (m *Map) Load(key interface{}) (value interface{}, ok bool)</source>
          <target state="translated">func (m * Map) Load (키 인터페이스 {}) (값 인터페이스 {}, ok bool)</target>
        </trans-unit>
        <trans-unit id="b5abd53b173316186f12c060718193b735a43b5e" translate="yes" xml:space="preserve">
          <source>func (m *Map) LoadOrStore(key, value interface{}) (actual interface{}, loaded bool)</source>
          <target state="translated">func (m * Map) LoadOrStore (키, 값 인터페이스 {}) (실제 인터페이스 {},로드 된 bool)</target>
        </trans-unit>
        <trans-unit id="9393fd4a31a92873fd39f04678638c65b2b8d37b" translate="yes" xml:space="preserve">
          <source>func (m *Map) Range(f func(key, value interface{}) bool)</source>
          <target state="translated">func (m * Map) 범위 (f func (키, 값 인터페이스 {}) bool)</target>
        </trans-unit>
        <trans-unit id="e7c34cad19d06c0b4d10cad3e3416fa7c62a874a" translate="yes" xml:space="preserve">
          <source>func (m *Map) Store(key, value interface{})</source>
          <target state="translated">func (m * Map) Store (키, 값 인터페이스 {})</target>
        </trans-unit>
        <trans-unit id="1c9c05ea91a333ea7867858ab02a291810eac6d9" translate="yes" xml:space="preserve">
          <source>func (m *Map) String() string</source>
          <target state="translated">func (m * Map) String () 문자열</target>
        </trans-unit>
        <trans-unit id="b7bbe335af840007059859505445d3e2758667e7" translate="yes" xml:space="preserve">
          <source>func (m *Map) Underlying() Type</source>
          <target state="translated">func (m * Map) 기본 () 유형</target>
        </trans-unit>
        <trans-unit id="74dfccb4299b3d3e11ba05bb248a9e5a8554e90e" translate="yes" xml:space="preserve">
          <source>func (m *Mutex) Lock()</source>
          <target state="translated">func (m * Mutex) 잠금 ()</target>
        </trans-unit>
        <trans-unit id="87ced1aeee67726dfc652529c7758432907049ca" translate="yes" xml:space="preserve">
          <source>func (m *Mutex) Unlock()</source>
          <target state="translated">func (m * Mutex) 잠금 해제 ()</target>
        </trans-unit>
        <trans-unit id="dc1d8ce131f84ab5efac90ab00c7a159aff504e0" translate="yes" xml:space="preserve">
          <source>func (m *RawMessage) UnmarshalJSON(data []byte) error</source>
          <target state="translated">func (m * RawMessage) UnmarshalJSON (데이터 [] 바이트) 오류</target>
        </trans-unit>
        <trans-unit id="db561d0fee89f4f8b28ba8833c716b9403b37845" translate="yes" xml:space="preserve">
          <source>func (m FileMode) IsDir() bool</source>
          <target state="translated">func (m FileMode) IsDir () 부울</target>
        </trans-unit>
        <trans-unit id="65a90bfc5fbe48517e8cd2b7cfd7c98804bfd6c0" translate="yes" xml:space="preserve">
          <source>func (m FileMode) IsRegular() bool</source>
          <target state="translated">func (m FileMode) IsRegular () 부울</target>
        </trans-unit>
        <trans-unit id="19badb47223acf65ffab66245ec52f91672ee6f7" translate="yes" xml:space="preserve">
          <source>func (m FileMode) Perm() FileMode</source>
          <target state="translated">func (m FileMode) Perm () 파일 모드</target>
        </trans-unit>
        <trans-unit id="d96198a303d05f5f5b2b571159fb337050de4d27" translate="yes" xml:space="preserve">
          <source>func (m FileMode) String() string</source>
          <target state="translated">func (m FileMode) String () 문자열</target>
        </trans-unit>
        <trans-unit id="6851311f074fd637a5a3178fb9228c08a81c59d7" translate="yes" xml:space="preserve">
          <source>func (m IPMask) Size() (ones, bits int)</source>
          <target state="translated">func (m IPMask) Size () (1, 비트 정수)</target>
        </trans-unit>
        <trans-unit id="b25746fa39416777d2f7fba0e253494f831afe3c" translate="yes" xml:space="preserve">
          <source>func (m IPMask) String() string</source>
          <target state="translated">func (m IPMask) String () 문자열</target>
        </trans-unit>
        <trans-unit id="13e66db2688ce8e14a81df8d3890f3ab240b81cc" translate="yes" xml:space="preserve">
          <source>func (m Month) String() string</source>
          <target state="translated">func (m Month) String () 문자열</target>
        </trans-unit>
        <trans-unit id="50549ec7eee7f56d76eff40ae262cfce59cca8fa" translate="yes" xml:space="preserve">
          <source>func (m RawMessage) MarshalJSON() ([]byte, error)</source>
          <target state="translated">func (m RawMessage) MarshalJSON () ([] 바이트, 오류)</target>
        </trans-unit>
        <trans-unit id="01f793f4a9b45572435fbd721d9c6d9718e276a8" translate="yes" xml:space="preserve">
          <source>func (msghdr *Msghdr) SetControllen(length int)</source>
          <target state="translated">func (msghdr * Msghdr) SetControllen (길이 정수)</target>
        </trans-unit>
        <trans-unit id="8a371c585e4fec27dde9f7ef71d7a44d085bef40" translate="yes" xml:space="preserve">
          <source>func (mux *ServeMux) Handle(pattern string, handler Handler)</source>
          <target state="translated">func (mux * ServeMux) 핸들 (패턴 문자열, 핸들러 핸들러)</target>
        </trans-unit>
        <trans-unit id="21bffa0bc3c25ba9ec73af974ac46177be34ad4a" translate="yes" xml:space="preserve">
          <source>func (mux *ServeMux) HandleFunc(pattern string, handler func(ResponseWriter, *Request))</source>
          <target state="translated">func (mux * ServeMux) HandleFunc (패턴 문자열, 핸들러 func (ResponseWriter, * Request))</target>
        </trans-unit>
        <trans-unit id="4eb4405737f0e7832249a8f2aa6bdae79736258a" translate="yes" xml:space="preserve">
          <source>func (mux *ServeMux) Handler(r *Request) (h Handler, pattern string)</source>
          <target state="translated">func (mux * ServeMux) 핸들러 (r * 요청) (h 핸들러, 패턴 문자열)</target>
        </trans-unit>
        <trans-unit id="e71d84d700561bd681ac17b18c025b536452cc04" translate="yes" xml:space="preserve">
          <source>func (mux *ServeMux) ServeHTTP(w ResponseWriter, r *Request)</source>
          <target state="translated">func (mux * ServeMux) ServeHTTP (w ResponseWriter, r * 요청)</target>
        </trans-unit>
        <trans-unit id="cd3e4dc2ebd3535921591368004a955b69ca9cae" translate="yes" xml:space="preserve">
          <source>func (n *IPNet) Contains(ip IP) bool</source>
          <target state="translated">func (n * IPNet) 포함 (ip IP) bool</target>
        </trans-unit>
        <trans-unit id="1d0b05322b46a24829fcbb270727eb47716fadb7" translate="yes" xml:space="preserve">
          <source>func (n *IPNet) Network() string</source>
          <target state="translated">func (n * IPNet) Network () 문자열</target>
        </trans-unit>
        <trans-unit id="5bfc6f6495a6df46a7a606675b2f991cee6d3eae" translate="yes" xml:space="preserve">
          <source>func (n *IPNet) String() string</source>
          <target state="translated">func (n * IPNet) 문자열 () 문자열</target>
        </trans-unit>
        <trans-unit id="e62990d83eb192db247c091854fe7982f0e03f33" translate="yes" xml:space="preserve">
          <source>func (n *Name) FillFromRDNSequence(rdns *RDNSequence)</source>
          <target state="translated">func (n * 이름) FillFromRDNSequence (rdns * RDNSequence)</target>
        </trans-unit>
        <trans-unit id="97b2db8963cf19099438beb370fdbb89c3d85291" translate="yes" xml:space="preserve">
          <source>func (n *NilNode) Copy() Node</source>
          <target state="translated">func (n * NilNode) Copy () 노드</target>
        </trans-unit>
        <trans-unit id="c69e40eddd71c0d8f19e2f975523defe8df953d4" translate="yes" xml:space="preserve">
          <source>func (n *NilNode) String() string</source>
          <target state="translated">func (n * NilNode) String () 문자열</target>
        </trans-unit>
        <trans-unit id="a63e0f193465527d7d2999b100f7b4ae92a68485" translate="yes" xml:space="preserve">
          <source>func (n *NilNode) Type() NodeType</source>
          <target state="translated">func (n * NilNode) 유형 () NodeType</target>
        </trans-unit>
        <trans-unit id="f61eff570edd7b7e020bf12de5f85f704a268f0c" translate="yes" xml:space="preserve">
          <source>func (n *NullBool) Scan(value interface{}) error</source>
          <target state="translated">func (n * NullBool) 스캔 (값 인터페이스 {}) 오류</target>
        </trans-unit>
        <trans-unit id="b486828c49cf9fee2cbed0a8d315fa83ac5dbab5" translate="yes" xml:space="preserve">
          <source>func (n *NullFloat64) Scan(value interface{}) error</source>
          <target state="translated">func (n * NullFloat64) 스캔 (값 인터페이스 {}) 오류</target>
        </trans-unit>
        <trans-unit id="b67484bf24e71001bae34e7d9ae42cf691227d17" translate="yes" xml:space="preserve">
          <source>func (n *NullInt32) Scan(value interface{}) error</source>
          <target state="translated">func (n * NullInt32) 스캔 (값 인터페이스 {}) 오류</target>
        </trans-unit>
        <trans-unit id="39cb6529d7907cbb3eb178acd4df6954b56620f6" translate="yes" xml:space="preserve">
          <source>func (n *NullInt64) Scan(value interface{}) error</source>
          <target state="translated">func (n * NullInt64) 스캔 (값 인터페이스 {}) 오류</target>
        </trans-unit>
        <trans-unit id="bda77964007378d417992f83b8f983832d0cbb5c" translate="yes" xml:space="preserve">
          <source>func (n *NullTime) Scan(value interface{}) error</source>
          <target state="translated">func (n * NullTime) 스캔 (값 인터페이스 {}) 오류</target>
        </trans-unit>
        <trans-unit id="3a43deab179dcbe6c841454fb0477cc2c9fbed2e" translate="yes" xml:space="preserve">
          <source>func (n *NumberNode) Copy() Node</source>
          <target state="translated">func (n * NumberNode) Copy () 노드</target>
        </trans-unit>
        <trans-unit id="97cf4cfdb6b512098cd41906c8b1ef2557b4bb06" translate="yes" xml:space="preserve">
          <source>func (n *NumberNode) String() string</source>
          <target state="translated">func (n * NumberNode) String () 문자열</target>
        </trans-unit>
        <trans-unit id="3195122396d2b1ff3f115f705597c39e58da0b36" translate="yes" xml:space="preserve">
          <source>func (n Name) String() string</source>
          <target state="translated">func (n 이름) String () 문자열</target>
        </trans-unit>
        <trans-unit id="91795aa218850710a4fbc0cc2146c411b160efa1" translate="yes" xml:space="preserve">
          <source>func (n Name) ToRDNSequence() (ret RDNSequence)</source>
          <target state="translated">func (n 이름) ToRDNSequence () (ret RDNSequence)</target>
        </trans-unit>
        <trans-unit id="fc17eab305cc739b31de5713b1e1d267d765f060" translate="yes" xml:space="preserve">
          <source>func (n NotNull) ConvertValue(v interface{}) (Value, error)</source>
          <target state="translated">func (n NotNull) ConvertValue (v 인터페이스 {}) (값, 오류)</target>
        </trans-unit>
        <trans-unit id="ed13859522e5cbd2cfd8ed639561937f573f2fdf" translate="yes" xml:space="preserve">
          <source>func (n Null) ConvertValue(v interface{}) (Value, error)</source>
          <target state="translated">func (null) ConvertValue (v 인터페이스 {}) (값, 오류)</target>
        </trans-unit>
        <trans-unit id="98c430faa10f3df85c55dde5a88ac39934862305" translate="yes" xml:space="preserve">
          <source>func (n NullBool) Value() (driver.Value, error)</source>
          <target state="translated">func (n NullBool) Value () (드라이버. 값, 오류)</target>
        </trans-unit>
        <trans-unit id="9e404aabd972b745563362fdfce5e81786da08a5" translate="yes" xml:space="preserve">
          <source>func (n NullFloat64) Value() (driver.Value, error)</source>
          <target state="translated">func (n NullFloat64) Value () (driver.Value, 오류)</target>
        </trans-unit>
        <trans-unit id="e8977148455642a82dab4a5e0377daf78e2ffd53" translate="yes" xml:space="preserve">
          <source>func (n NullInt32) Value() (driver.Value, error)</source>
          <target state="translated">func (n NullInt32) Value () (driver.Value, 오류)</target>
        </trans-unit>
        <trans-unit id="4c17180375efbd58baf0120670cf644419c08c6a" translate="yes" xml:space="preserve">
          <source>func (n NullInt64) Value() (driver.Value, error)</source>
          <target state="translated">func (n NullInt64) Value () (driver.Value, 오류)</target>
        </trans-unit>
        <trans-unit id="a85d9f81ffc64e0754968ffd8c5e17639b6c830d" translate="yes" xml:space="preserve">
          <source>func (n NullTime) Value() (driver.Value, error)</source>
          <target state="translated">func (n NullTime) Value () (드라이버. 값, 오류)</target>
        </trans-unit>
        <trans-unit id="5d9a9539cd4e374decfe245e7f30c786ae5dc593" translate="yes" xml:space="preserve">
          <source>func (n Number) Float64() (float64, error)</source>
          <target state="translated">func (n 번호) Float64 () (float64, 오류)</target>
        </trans-unit>
        <trans-unit id="01fee754d06401430395fc388f3c704829630acc" translate="yes" xml:space="preserve">
          <source>func (n Number) Int64() (int64, error)</source>
          <target state="translated">func (n 숫자) Int64 () (int64, 오류)</target>
        </trans-unit>
        <trans-unit id="93b8fa9b5152dfd6711d25ba641a3dbce77e4324" translate="yes" xml:space="preserve">
          <source>func (n Number) String() string</source>
          <target state="translated">func (n 숫자) 문자열 () 문자열</target>
        </trans-unit>
        <trans-unit id="643775ea2c7f3236a780f425da376a5bac94dfd6" translate="yes" xml:space="preserve">
          <source>func (ns *NullString) Scan(value interface{}) error</source>
          <target state="translated">func (ns * NullString) 스캔 (값 인터페이스 {}) 오류</target>
        </trans-unit>
        <trans-unit id="5e1d047a98be518940f31b083ddba109c53fff17" translate="yes" xml:space="preserve">
          <source>func (ns NullString) Value() (driver.Value, error)</source>
          <target state="translated">func (ns NullString) Value () (드라이버. 값, 오류)</target>
        </trans-unit>
        <trans-unit id="01de9e023573316897488efc0ba3e18f64897d17" translate="yes" xml:space="preserve">
          <source>func (o *Once) Do(f func())</source>
          <target state="translated">func (o * 한 번) Do (f func ())</target>
        </trans-unit>
        <trans-unit id="8bbe052dd25fad629193a48e87f970de4c66da94" translate="yes" xml:space="preserve">
          <source>func (obj *Builtin) Exported() bool</source>
          <target state="translated">func (obj * Builtin) Exported () 부울</target>
        </trans-unit>
        <trans-unit id="0eb0a014015c3a4a7c49b55435cd0849747b4beb" translate="yes" xml:space="preserve">
          <source>func (obj *Builtin) Id() string</source>
          <target state="translated">func (obj * Builtin) ID () 문자열</target>
        </trans-unit>
        <trans-unit id="f6acda8148acd1aa282aabb4aa1b7c74c52096bc" translate="yes" xml:space="preserve">
          <source>func (obj *Builtin) Name() string</source>
          <target state="translated">func (obj * Builtin) Name () 문자열</target>
        </trans-unit>
        <trans-unit id="b9d639fde323c5dabe75a7e10348ca9152fe6a67" translate="yes" xml:space="preserve">
          <source>func (obj *Builtin) Parent() *Scope</source>
          <target state="translated">func (obj * Builtin) Parent () * 범위</target>
        </trans-unit>
        <trans-unit id="8edc75e62a350408a512db8f8e36c133607431bc" translate="yes" xml:space="preserve">
          <source>func (obj *Builtin) Pkg() *Package</source>
          <target state="translated">func (obj * Builtin) Pkg () * 패키지</target>
        </trans-unit>
        <trans-unit id="9645cf410caa45625182ed30d2bae9d72388611d" translate="yes" xml:space="preserve">
          <source>func (obj *Builtin) Pos() token.Pos</source>
          <target state="translated">func (obj * Builtin) Pos () 토큰.</target>
        </trans-unit>
        <trans-unit id="9af3218476f3efa1ea467cb09d87ee0108cfe881" translate="yes" xml:space="preserve">
          <source>func (obj *Builtin) String() string</source>
          <target state="translated">func (obj * Builtin) String () 문자열</target>
        </trans-unit>
        <trans-unit id="88c7e7ee39912a35331d70ad3796729d99719142" translate="yes" xml:space="preserve">
          <source>func (obj *Builtin) Type() Type</source>
          <target state="translated">func (obj * Builtin) 유형 () 유형</target>
        </trans-unit>
        <trans-unit id="6343db581bfbaeb59836a408015a81a5f073718f" translate="yes" xml:space="preserve">
          <source>func (obj *Const) Exported() bool</source>
          <target state="translated">func (obj * Const) Exported () 부울</target>
        </trans-unit>
        <trans-unit id="acb857880a1fe41498be28593e111fde2002587e" translate="yes" xml:space="preserve">
          <source>func (obj *Const) Id() string</source>
          <target state="translated">func (obj * Const) ID () 문자열</target>
        </trans-unit>
        <trans-unit id="a81a5c560b96300d38d4e24b7fa74f7cb9b4a428" translate="yes" xml:space="preserve">
          <source>func (obj *Const) Name() string</source>
          <target state="translated">func (obj * Const) Name () 문자열</target>
        </trans-unit>
        <trans-unit id="9c57b6c600cbd88f6ee02c9777d5fe7cd99e03e3" translate="yes" xml:space="preserve">
          <source>func (obj *Const) Parent() *Scope</source>
          <target state="translated">func (obj * Const) Parent () * 범위</target>
        </trans-unit>
        <trans-unit id="db17805b92c824c754af89a4f2a478f9ff36ec79" translate="yes" xml:space="preserve">
          <source>func (obj *Const) Pkg() *Package</source>
          <target state="translated">func (obj * Const) Pkg () * 패키지</target>
        </trans-unit>
        <trans-unit id="b4217cc814cf2e22b8fc0ef41b853a7fb7dda215" translate="yes" xml:space="preserve">
          <source>func (obj *Const) Pos() token.Pos</source>
          <target state="translated">func (obj * Const) Pos () 토큰.</target>
        </trans-unit>
        <trans-unit id="c5ed38dd9674b3c9ab8ef49ee8a3da1ae49c9553" translate="yes" xml:space="preserve">
          <source>func (obj *Const) String() string</source>
          <target state="translated">func (obj * Const) String () 문자열</target>
        </trans-unit>
        <trans-unit id="b200e3f40ee71a0eea95c35a13f41a44bb6a9c60" translate="yes" xml:space="preserve">
          <source>func (obj *Const) Type() Type</source>
          <target state="translated">func (obj * Const) 유형 () 유형</target>
        </trans-unit>
        <trans-unit id="82ee4831779dab67c71e28f1e8c45b01608e4042" translate="yes" xml:space="preserve">
          <source>func (obj *Const) Val() constant.Value</source>
          <target state="translated">func (obj * Const) Val () 상수</target>
        </trans-unit>
        <trans-unit id="e2cb452a71dd5d566287ad8a9a34467ba122982a" translate="yes" xml:space="preserve">
          <source>func (obj *Func) Exported() bool</source>
          <target state="translated">func (obj * Func) Exported () 부울</target>
        </trans-unit>
        <trans-unit id="2d2aeacb95e4b099783f371f7a9c5607b3dc19b3" translate="yes" xml:space="preserve">
          <source>func (obj *Func) FullName() string</source>
          <target state="translated">func (obj * Func) FullName () 문자열</target>
        </trans-unit>
        <trans-unit id="fbf2b5ed95bc17e13ae3cd37f11bc27172a19909" translate="yes" xml:space="preserve">
          <source>func (obj *Func) Id() string</source>
          <target state="translated">func (obj * Func) Id () 문자열</target>
        </trans-unit>
        <trans-unit id="0d4d6982af8a8817669c226eb2451fae137c1b61" translate="yes" xml:space="preserve">
          <source>func (obj *Func) Name() string</source>
          <target state="translated">func (obj * Func) Name () 문자열</target>
        </trans-unit>
        <trans-unit id="50248bb1968ff875605e66a9432c71e2b350cbbd" translate="yes" xml:space="preserve">
          <source>func (obj *Func) Parent() *Scope</source>
          <target state="translated">func (obj * Func) Parent () * 범위</target>
        </trans-unit>
        <trans-unit id="13da58443a9f7af59eaab4981288447d3c1414a8" translate="yes" xml:space="preserve">
          <source>func (obj *Func) Pkg() *Package</source>
          <target state="translated">func (obj * Func) Pkg () * 패키지</target>
        </trans-unit>
        <trans-unit id="0e7b5a5a5add053660bd0f8abb701c150eff941d" translate="yes" xml:space="preserve">
          <source>func (obj *Func) Pos() token.Pos</source>
          <target state="translated">func (obj * Func) Pos () 토큰.</target>
        </trans-unit>
        <trans-unit id="1de5e896f40a49f99351b9235c53e16d7335e652" translate="yes" xml:space="preserve">
          <source>func (obj *Func) Scope() *Scope</source>
          <target state="translated">func (obj * Func) Scope () * 범위</target>
        </trans-unit>
        <trans-unit id="125276332d2ffabcc4b8f85b334a98efe833853c" translate="yes" xml:space="preserve">
          <source>func (obj *Func) String() string</source>
          <target state="translated">func (obj * Func) String () 문자열</target>
        </trans-unit>
        <trans-unit id="bbccfdd03169759200ad41258eafb5c2deba7de2" translate="yes" xml:space="preserve">
          <source>func (obj *Func) Type() Type</source>
          <target state="translated">func (obj * Func) 타입 () 타입</target>
        </trans-unit>
        <trans-unit id="8770cdcd739943a19edd0d3eebbbd9279c5f8756" translate="yes" xml:space="preserve">
          <source>func (obj *Label) Exported() bool</source>
          <target state="translated">func (obj * Label) Exported () 부울</target>
        </trans-unit>
        <trans-unit id="11f1824c958b92abc6567ca91cfb0d56a2517f16" translate="yes" xml:space="preserve">
          <source>func (obj *Label) Id() string</source>
          <target state="translated">func (obj * Label) ID () 문자열</target>
        </trans-unit>
        <trans-unit id="58afeecb18eaff3bc72c41ec998b80a1c4a849a1" translate="yes" xml:space="preserve">
          <source>func (obj *Label) Name() string</source>
          <target state="translated">func (obj * Label) Name () 문자열</target>
        </trans-unit>
        <trans-unit id="cad7d4b1802f7b26394dca975e51910a4250a1eb" translate="yes" xml:space="preserve">
          <source>func (obj *Label) Parent() *Scope</source>
          <target state="translated">func (obj * Label) Parent () * 범위</target>
        </trans-unit>
        <trans-unit id="a63ec4b925fe747e7a948fb17bd74c72c2c438e8" translate="yes" xml:space="preserve">
          <source>func (obj *Label) Pkg() *Package</source>
          <target state="translated">func (obj * Label) Pkg () * 패키지</target>
        </trans-unit>
        <trans-unit id="bc6d58376365d722fa405c7678c7b3a5cdde7f8d" translate="yes" xml:space="preserve">
          <source>func (obj *Label) Pos() token.Pos</source>
          <target state="translated">func (obj * Label) Pos () 토큰.</target>
        </trans-unit>
        <trans-unit id="872d63e950934fce040fa55ee1b53fcc22c6bbfd" translate="yes" xml:space="preserve">
          <source>func (obj *Label) String() string</source>
          <target state="translated">func (obj * Label) String () 문자열</target>
        </trans-unit>
        <trans-unit id="54dfd89ab70265ebe3465c38fbf47de10d45834e" translate="yes" xml:space="preserve">
          <source>func (obj *Label) Type() Type</source>
          <target state="translated">func (obj * Label) 유형 () 유형</target>
        </trans-unit>
        <trans-unit id="19b4e963041dab680e9c1d62f9332f8cab96ec67" translate="yes" xml:space="preserve">
          <source>func (obj *Nil) Exported() bool</source>
          <target state="translated">func (obj * Nil) Exported () 부울</target>
        </trans-unit>
        <trans-unit id="c23fef21473d7daa7fed9775ff7a2b232889876f" translate="yes" xml:space="preserve">
          <source>func (obj *Nil) Id() string</source>
          <target state="translated">func (obj * Nil) ID () 문자열</target>
        </trans-unit>
        <trans-unit id="03e1c1707ecdddd3f57394787b8b6a0deb29a42a" translate="yes" xml:space="preserve">
          <source>func (obj *Nil) Name() string</source>
          <target state="translated">func (obj * Nil) Name () 문자열</target>
        </trans-unit>
        <trans-unit id="bd1e9e2205dfd3aaddc5823a493bee878a22a656" translate="yes" xml:space="preserve">
          <source>func (obj *Nil) Parent() *Scope</source>
          <target state="translated">func (obj * Nil) Parent () * 범위</target>
        </trans-unit>
        <trans-unit id="c702c0ad74447b8296ca481491dbed04b26c012d" translate="yes" xml:space="preserve">
          <source>func (obj *Nil) Pkg() *Package</source>
          <target state="translated">func (obj * Nil) Pkg () * 패키지</target>
        </trans-unit>
        <trans-unit id="b90aedd58a232c628dd34689d3e9ffbbcb9e74ea" translate="yes" xml:space="preserve">
          <source>func (obj *Nil) Pos() token.Pos</source>
          <target state="translated">func (obj * Nil) Pos () 토큰.</target>
        </trans-unit>
        <trans-unit id="438a9d12f8aec24b8bc17bff3c24e29e152e00bd" translate="yes" xml:space="preserve">
          <source>func (obj *Nil) String() string</source>
          <target state="translated">func (obj * Nil) String () 문자열</target>
        </trans-unit>
        <trans-unit id="773cdc1b766c0127063936abd89567cc5748d0f0" translate="yes" xml:space="preserve">
          <source>func (obj *Nil) Type() Type</source>
          <target state="translated">func (obj * Nil) 타입 () 타입</target>
        </trans-unit>
        <trans-unit id="54bc01296e54130fdf4f706ee819b3dce06a222e" translate="yes" xml:space="preserve">
          <source>func (obj *Object) Pos() token.Pos</source>
          <target state="translated">func (obj * Object) Pos () 토큰.</target>
        </trans-unit>
        <trans-unit id="fb9cd67a97711ad14159b8e3e4713d463f291ea9" translate="yes" xml:space="preserve">
          <source>func (obj *PkgName) Exported() bool</source>
          <target state="translated">func (obj * PkgName) Exported () 부울</target>
        </trans-unit>
        <trans-unit id="3ca96ea06217e4574fb275f4f1fd193a1aceb800" translate="yes" xml:space="preserve">
          <source>func (obj *PkgName) Id() string</source>
          <target state="translated">func (obj * PkgName) ID () 문자열</target>
        </trans-unit>
        <trans-unit id="460127ee60280eee79024ece1c0cfb7304e49f34" translate="yes" xml:space="preserve">
          <source>func (obj *PkgName) Imported() *Package</source>
          <target state="translated">func (obj * PkgName) Imported () * 패키지</target>
        </trans-unit>
        <trans-unit id="81f3f65a038213f8a3787e5a04829ae274453c58" translate="yes" xml:space="preserve">
          <source>func (obj *PkgName) Name() string</source>
          <target state="translated">func (obj * PkgName) Name () 문자열</target>
        </trans-unit>
        <trans-unit id="0bba26e6fb030749fc7ab9cd78c63fb8dd12d17f" translate="yes" xml:space="preserve">
          <source>func (obj *PkgName) Parent() *Scope</source>
          <target state="translated">func (obj * PkgName) Parent () * 범위</target>
        </trans-unit>
        <trans-unit id="45c2df52ee80d4b0a251ff09040831f7ca3e5702" translate="yes" xml:space="preserve">
          <source>func (obj *PkgName) Pkg() *Package</source>
          <target state="translated">func (obj * PkgName) Pkg () * 패키지</target>
        </trans-unit>
        <trans-unit id="5fc5683e48fdfe180451b5fe85caf9ceb688f531" translate="yes" xml:space="preserve">
          <source>func (obj *PkgName) Pos() token.Pos</source>
          <target state="translated">func (obj * PkgName) Pos () 토큰.</target>
        </trans-unit>
        <trans-unit id="d139cf6d0f1832e4bd52796501647d24d0c7b4d1" translate="yes" xml:space="preserve">
          <source>func (obj *PkgName) String() string</source>
          <target state="translated">func (obj * PkgName) String () 문자열</target>
        </trans-unit>
        <trans-unit id="1045c17c44bd8279a92261b45c0dd9aba1f5f678" translate="yes" xml:space="preserve">
          <source>func (obj *PkgName) Type() Type</source>
          <target state="translated">func (obj * PkgName) 유형 () 유형</target>
        </trans-unit>
        <trans-unit id="b6edb9b8790007cbee01018178271c41a005863e" translate="yes" xml:space="preserve">
          <source>func (obj *TypeName) Exported() bool</source>
          <target state="translated">func (obj * TypeName) Exported () 부울</target>
        </trans-unit>
        <trans-unit id="6462507cb05cdf91cfb2b4e4458a08833c298ed2" translate="yes" xml:space="preserve">
          <source>func (obj *TypeName) Id() string</source>
          <target state="translated">func (obj * TypeName) Id () 문자열</target>
        </trans-unit>
        <trans-unit id="8d49dd129989a5b16c8958021c590c51b3bf6ec0" translate="yes" xml:space="preserve">
          <source>func (obj *TypeName) IsAlias() bool</source>
          <target state="translated">func (obj * TypeName) IsAlias ​​() 부울</target>
        </trans-unit>
        <trans-unit id="63d17c9f9ae9680c68e64925d40f4d32ea49f799" translate="yes" xml:space="preserve">
          <source>func (obj *TypeName) Name() string</source>
          <target state="translated">func (obj * TypeName) Name () 문자열</target>
        </trans-unit>
        <trans-unit id="d6f9026341d28e27e65491892e442a4d4fee4654" translate="yes" xml:space="preserve">
          <source>func (obj *TypeName) Parent() *Scope</source>
          <target state="translated">func (obj * TypeName) Parent () * 범위</target>
        </trans-unit>
        <trans-unit id="38f4456bf5c2ca4b156119df7dd3257dd5728e6e" translate="yes" xml:space="preserve">
          <source>func (obj *TypeName) Pkg() *Package</source>
          <target state="translated">func (obj * TypeName) Pkg () * 패키지</target>
        </trans-unit>
        <trans-unit id="2ce1313a2c1f249e59beb285ee3a88db7487c91a" translate="yes" xml:space="preserve">
          <source>func (obj *TypeName) Pos() token.Pos</source>
          <target state="translated">func (obj * TypeName) Pos () 토큰.</target>
        </trans-unit>
        <trans-unit id="3bfe350747bf6cc12e74a08ce8eb05f223ba89c9" translate="yes" xml:space="preserve">
          <source>func (obj *TypeName) String() string</source>
          <target state="translated">func (obj * TypeName) String () 문자열</target>
        </trans-unit>
        <trans-unit id="338ac2e1e9934f2fc90b51874d8c82e3750a91f1" translate="yes" xml:space="preserve">
          <source>func (obj *TypeName) Type() Type</source>
          <target state="translated">func (obj * TypeName) 유형 () 유형</target>
        </trans-unit>
        <trans-unit id="afcc67fe9fe9504f236943442d95d6eb9458b123" translate="yes" xml:space="preserve">
          <source>func (obj *Var) Anonymous() bool</source>
          <target state="translated">func (obj * Var) Anonymous () 부울</target>
        </trans-unit>
        <trans-unit id="faa274dada7019fa74e92564d8a2e2fdb8e80913" translate="yes" xml:space="preserve">
          <source>func (obj *Var) Embedded() bool</source>
          <target state="translated">func (obj * Var) Embedded () 부울</target>
        </trans-unit>
        <trans-unit id="edfe438748d3e5bf4946f80a31d0ae6c4e2cdadd" translate="yes" xml:space="preserve">
          <source>func (obj *Var) Exported() bool</source>
          <target state="translated">func (obj * Var) Exported () 부울</target>
        </trans-unit>
        <trans-unit id="e589aca5a6e0d9b10b6db95d4826477591de6a77" translate="yes" xml:space="preserve">
          <source>func (obj *Var) Id() string</source>
          <target state="translated">func (obj * Var) Id () 문자열</target>
        </trans-unit>
        <trans-unit id="61821029d6fab9874eb81a85eeaaa9cdc561d809" translate="yes" xml:space="preserve">
          <source>func (obj *Var) IsField() bool</source>
          <target state="translated">func (obj * Var) IsField () 부울</target>
        </trans-unit>
        <trans-unit id="af5d6b62e2fc17227fb948edd893afed053ead3e" translate="yes" xml:space="preserve">
          <source>func (obj *Var) Name() string</source>
          <target state="translated">func (obj * Var) Name () 문자열</target>
        </trans-unit>
        <trans-unit id="14c5555208ce3aaedf30a48ce89e003112767f13" translate="yes" xml:space="preserve">
          <source>func (obj *Var) Parent() *Scope</source>
          <target state="translated">func (obj * Var) Parent () * 범위</target>
        </trans-unit>
        <trans-unit id="92968544da13e40737b58a0d19fb9412808b60ec" translate="yes" xml:space="preserve">
          <source>func (obj *Var) Pkg() *Package</source>
          <target state="translated">func (obj * Var) Pkg () * 패키지</target>
        </trans-unit>
        <trans-unit id="dd2c4314e5f1844212f3c28013ef9e35b9c6b10a" translate="yes" xml:space="preserve">
          <source>func (obj *Var) Pos() token.Pos</source>
          <target state="translated">func (obj * Var) Pos () 토큰.</target>
        </trans-unit>
        <trans-unit id="7b1b32b19961cae28c02974d99dd41def33c81f8" translate="yes" xml:space="preserve">
          <source>func (obj *Var) String() string</source>
          <target state="translated">func (obj * Var) String () 문자열</target>
        </trans-unit>
        <trans-unit id="c15de238948de70c6feddb0a99948a193c0c6684" translate="yes" xml:space="preserve">
          <source>func (obj *Var) Type() Type</source>
          <target state="translated">func (obj * Var) 타입 () 타입</target>
        </trans-unit>
        <trans-unit id="480b3b4256dfbfa5ddbe5d6619f3046aea42d64b" translate="yes" xml:space="preserve">
          <source>func (oi ObjectIdentifier) Equal(other ObjectIdentifier) bool</source>
          <target state="translated">func (oi ObjectIdentifier) ​​같음 (다른 ObjectIdentifier) ​​bool</target>
        </trans-unit>
        <trans-unit id="a4e30a1054031de2c324393b177df5722df022e1" translate="yes" xml:space="preserve">
          <source>func (oi ObjectIdentifier) String() string</source>
          <target state="translated">func (oi ObjectIdentifier) ​​String () 문자열</target>
        </trans-unit>
        <trans-unit id="14e614ddfdd30e7d0001b3f463d12cdfd43fcee8" translate="yes" xml:space="preserve">
          <source>func (op Op) Draw(dst Image, r image.Rectangle, src image.Image, sp image.Point)</source>
          <target state="translated">func (op Op) Draw (dst Image, r image.Rectangle, src image.Image, sp image.Point)</target>
        </trans-unit>
        <trans-unit id="cf5336c5a8069e2e6123367348ef7b48ce0557c8" translate="yes" xml:space="preserve">
          <source>func (op Token) Precedence() int</source>
          <target state="translated">func (op 토큰) 우선 순위 () int</target>
        </trans-unit>
        <trans-unit id="72cd3d5deef6451e2ad788b022a989a2d1bbc835" translate="yes" xml:space="preserve">
          <source>func (p *AddressParser) Parse(address string) (*Address, error)</source>
          <target state="translated">func (p * AddressParser) 구문 분석 (주소 문자열) (* 주소, 오류)</target>
        </trans-unit>
        <trans-unit id="ed8aed582b4cf73ca47007f7b6d90fa47ce26506" translate="yes" xml:space="preserve">
          <source>func (p *AddressParser) ParseList(list string) ([]*Address, error)</source>
          <target state="translated">func (p * AddressParser) ParseList (목록 문자열) ([] * 주소, 오류)</target>
        </trans-unit>
        <trans-unit id="829a43ee12248b1cbd5602d1f940bb415fe5bf51" translate="yes" xml:space="preserve">
          <source>func (p *Alpha) AlphaAt(x, y int) color.Alpha</source>
          <target state="translated">func (p * Alpha) AlphaAt (x, y int) 색상. 알파</target>
        </trans-unit>
        <trans-unit id="59966c4c8b6c3d751287f026b99a7afc7d7d88e4" translate="yes" xml:space="preserve">
          <source>func (p *Alpha) At(x, y int) color.Color</source>
          <target state="translated">func (p * Alpha) At (x, y int) 색상.</target>
        </trans-unit>
        <trans-unit id="5ccba0b336f1bc82703b4555d6d745770b862b34" translate="yes" xml:space="preserve">
          <source>func (p *Alpha) Bounds() Rectangle</source>
          <target state="translated">func (p * Alpha) 경계 () 사각형</target>
        </trans-unit>
        <trans-unit id="17657dd6b5085a7873e73e8838aecd6eda5a5651" translate="yes" xml:space="preserve">
          <source>func (p *Alpha) ColorModel() color.Model</source>
          <target state="translated">func (p * 알파) ColorModel () color.Model</target>
        </trans-unit>
        <trans-unit id="43fcf4d1d588bf1d4709f75302af1ae0946d4e54" translate="yes" xml:space="preserve">
          <source>func (p *Alpha) Opaque() bool</source>
          <target state="translated">func (p * 알파) 불투명 () bool</target>
        </trans-unit>
        <trans-unit id="b9ded9e1733e47890c629d128df850df9cbcaa09" translate="yes" xml:space="preserve">
          <source>func (p *Alpha) PixOffset(x, y int) int</source>
          <target state="translated">func (p * 알파) PixOffset (x, y int) int</target>
        </trans-unit>
        <trans-unit id="01499ccb3772519d3babde2d700fc3855037644c" translate="yes" xml:space="preserve">
          <source>func (p *Alpha) Set(x, y int, c color.Color)</source>
          <target state="translated">func (p * 알파) 세트 (x, y int, c color. Color)</target>
        </trans-unit>
        <trans-unit id="9f0527649af37dbf20dbffb2277521d5d92d1191" translate="yes" xml:space="preserve">
          <source>func (p *Alpha) SetAlpha(x, y int, c color.Alpha)</source>
          <target state="translated">func (p * 알파) SetAlpha (x, y int, c color.Alpha)</target>
        </trans-unit>
        <trans-unit id="99d301b4f3fbc0f86e6ea669c084d0c7be721c60" translate="yes" xml:space="preserve">
          <source>func (p *Alpha) SubImage(r Rectangle) Image</source>
          <target state="translated">func (p * Alpha) SubImage (r 사각형) 이미지</target>
        </trans-unit>
        <trans-unit id="214eef54654271a662a52f4cd5011978592f654a" translate="yes" xml:space="preserve">
          <source>func (p *Alpha16) Alpha16At(x, y int) color.Alpha16</source>
          <target state="translated">func (p * Alpha16) Alpha16At (x, y int) 색상.</target>
        </trans-unit>
        <trans-unit id="cf56a038a054c183d630da3a997bcb42a8084eb8" translate="yes" xml:space="preserve">
          <source>func (p *Alpha16) At(x, y int) color.Color</source>
          <target state="translated">func (p * Alpha16) At (x, y int) 색상.</target>
        </trans-unit>
        <trans-unit id="836e4a2b9568d67fff2ea5f2e87ac40f3a991406" translate="yes" xml:space="preserve">
          <source>func (p *Alpha16) Bounds() Rectangle</source>
          <target state="translated">func (p * Alpha16) 경계 () 사각형</target>
        </trans-unit>
        <trans-unit id="0a06e036f5c6df662d0fd14938399656d7a5ac9c" translate="yes" xml:space="preserve">
          <source>func (p *Alpha16) ColorModel() color.Model</source>
          <target state="translated">func (p * Alpha16) ColorModel () 색상. 모델</target>
        </trans-unit>
        <trans-unit id="d054708dc2179da0223b6e0390af809d3ab1c9ad" translate="yes" xml:space="preserve">
          <source>func (p *Alpha16) Opaque() bool</source>
          <target state="translated">func (p * Alpha16) 불투명 () bool</target>
        </trans-unit>
        <trans-unit id="4865353ef433e13475fa061552975f546c1137b1" translate="yes" xml:space="preserve">
          <source>func (p *Alpha16) PixOffset(x, y int) int</source>
          <target state="translated">func (p * Alpha16) PixOffset (x, y int) int</target>
        </trans-unit>
        <trans-unit id="fab24f91a97944dc335fcd6b6427ec362d1c252f" translate="yes" xml:space="preserve">
          <source>func (p *Alpha16) Set(x, y int, c color.Color)</source>
          <target state="translated">func (p * Alpha16) Set (x, y int, c color. 컬러)</target>
        </trans-unit>
        <trans-unit id="43ad05f9e64dd327849c6379e62580a1e19672bb" translate="yes" xml:space="preserve">
          <source>func (p *Alpha16) SetAlpha16(x, y int, c color.Alpha16)</source>
          <target state="translated">func (p * Alpha16) SetAlpha16 (x, y int, c 컬러. Alpha16)</target>
        </trans-unit>
        <trans-unit id="ddbfd2c42112a661926cea9205c489e6590c7359" translate="yes" xml:space="preserve">
          <source>func (p *Alpha16) SubImage(r Rectangle) Image</source>
          <target state="translated">func (p * Alpha16) SubImage (r 사각형) 이미지</target>
        </trans-unit>
        <trans-unit id="689f8bd8578b2171cb29c82571af64a45743634c" translate="yes" xml:space="preserve">
          <source>func (p *CMYK) At(x, y int) color.Color</source>
          <target state="translated">func (p * CMYK) At (x, y int) 색상.</target>
        </trans-unit>
        <trans-unit id="dc5ca91726c775eeb3394cd51f111c5081f712f0" translate="yes" xml:space="preserve">
          <source>func (p *CMYK) Bounds() Rectangle</source>
          <target state="translated">func (p * CMYK) 경계 () 사각형</target>
        </trans-unit>
        <trans-unit id="daaf732f0e2c094508fc46fb67ffd727ffe824b5" translate="yes" xml:space="preserve">
          <source>func (p *CMYK) CMYKAt(x, y int) color.CMYK</source>
          <target state="translated">func (p * CMYK) CMYKAt (x, y int) 색상 .CMYK</target>
        </trans-unit>
        <trans-unit id="dc6fa6ad7e2129280a36b776ce7495b922f54b26" translate="yes" xml:space="preserve">
          <source>func (p *CMYK) ColorModel() color.Model</source>
          <target state="translated">func (p * CMYK) ColorModel () 색상. 모델</target>
        </trans-unit>
        <trans-unit id="2c017112a8f8e5c9590d082803e20a0870534a40" translate="yes" xml:space="preserve">
          <source>func (p *CMYK) Opaque() bool</source>
          <target state="translated">func (p * CMYK) 불투명 () bool</target>
        </trans-unit>
        <trans-unit id="751a5671d0418e10daba0e7d7bbb5fa3705017b5" translate="yes" xml:space="preserve">
          <source>func (p *CMYK) PixOffset(x, y int) int</source>
          <target state="translated">func (p * CMYK) PixOffset (x, y int) int</target>
        </trans-unit>
        <trans-unit id="83b8643b923f2c00f24e73309f288fabbc1d5701" translate="yes" xml:space="preserve">
          <source>func (p *CMYK) Set(x, y int, c color.Color)</source>
          <target state="translated">func (p * CMYK) 세트 (x, y int, c color. Color)</target>
        </trans-unit>
        <trans-unit id="21d41067c777c0b413b0f2ac8acc52c28cd900a0" translate="yes" xml:space="preserve">
          <source>func (p *CMYK) SetCMYK(x, y int, c color.CMYK)</source>
          <target state="translated">func (p * CMYK) 세트 CMYK (x, y int, c color. CMYK)</target>
        </trans-unit>
        <trans-unit id="a271fe09621a74abb2a0130b58814d3bd4a9979d" translate="yes" xml:space="preserve">
          <source>func (p *CMYK) SubImage(r Rectangle) Image</source>
          <target state="translated">func (p * CMYK) 하위 이미지 (r 사각형) 이미지</target>
        </trans-unit>
        <trans-unit id="45e55c8918e3db8cf40b656f0382eef17ed59394" translate="yes" xml:space="preserve">
          <source>func (p *ErrorList) Add(pos token.Position, msg string)</source>
          <target state="translated">func (p * ErrorList) Add (pos token.Position, msg 문자열)</target>
        </trans-unit>
        <trans-unit id="59c4031ef244fec2453a91410635782f2aeefb4e" translate="yes" xml:space="preserve">
          <source>func (p *ErrorList) RemoveMultiples()</source>
          <target state="translated">func (p * ErrorList) RemoveMultiples ()</target>
        </trans-unit>
        <trans-unit id="872eb1a8b3074178f34cec3c7827f1ed91dc5553" translate="yes" xml:space="preserve">
          <source>func (p *ErrorList) Reset()</source>
          <target state="translated">func (p * ErrorList) 재설정 ()</target>
        </trans-unit>
        <trans-unit id="e17575af7544d667e5974fd79e7cf2fda102b3f0" translate="yes" xml:space="preserve">
          <source>func (p *Gray) At(x, y int) color.Color</source>
          <target state="translated">func (p * Gray) At (x, y int) 색상.</target>
        </trans-unit>
        <trans-unit id="45be0778beabec23bcf1ac7bf0705b587101af71" translate="yes" xml:space="preserve">
          <source>func (p *Gray) Bounds() Rectangle</source>
          <target state="translated">func (p * Gray) 경계 () 사각형</target>
        </trans-unit>
        <trans-unit id="f221d03ba48de3482321e3d730712c95aa266bcf" translate="yes" xml:space="preserve">
          <source>func (p *Gray) ColorModel() color.Model</source>
          <target state="translated">func (p * Gray) ColorModel () 색상. 모델</target>
        </trans-unit>
        <trans-unit id="2560ba8b0c706abaf293696243ff4caa3c87ae08" translate="yes" xml:space="preserve">
          <source>func (p *Gray) GrayAt(x, y int) color.Gray</source>
          <target state="translated">func (p * Gray) GrayAt (x, y int) 색상. 회색</target>
        </trans-unit>
        <trans-unit id="b36e79a23dfef5464cbc835b353098461dc20e3c" translate="yes" xml:space="preserve">
          <source>func (p *Gray) Opaque() bool</source>
          <target state="translated">func (p * Gray) 불투명 () bool</target>
        </trans-unit>
        <trans-unit id="039d301cea2e53756b104eada1a5eacfad08c8e2" translate="yes" xml:space="preserve">
          <source>func (p *Gray) PixOffset(x, y int) int</source>
          <target state="translated">func (p * Gray) PixOffset (x, y int) int</target>
        </trans-unit>
        <trans-unit id="31493cde017b2af74e67f980c7ee4345b5363162" translate="yes" xml:space="preserve">
          <source>func (p *Gray) Set(x, y int, c color.Color)</source>
          <target state="translated">func (p * Gray) Set (x, y int, c color. 컬러)</target>
        </trans-unit>
        <trans-unit id="7ceb0c663f4112d945aaf3aaa21266a087c72a92" translate="yes" xml:space="preserve">
          <source>func (p *Gray) SetGray(x, y int, c color.Gray)</source>
          <target state="translated">func (p * 회색) SetGray (x, y int, c color.Gray)</target>
        </trans-unit>
        <trans-unit id="5896c4eb26bfd159ed3685d970fa50a922fd4f7c" translate="yes" xml:space="preserve">
          <source>func (p *Gray) SubImage(r Rectangle) Image</source>
          <target state="translated">func (p * Gray) SubImage (r 사각형) 이미지</target>
        </trans-unit>
        <trans-unit id="d84b13d881405c8e8029040ea6147fc076bdcaf5" translate="yes" xml:space="preserve">
          <source>func (p *Gray16) At(x, y int) color.Color</source>
          <target state="translated">func (p * Gray16) At (x, y int) 색상.</target>
        </trans-unit>
        <trans-unit id="6445df53337bebc3f92a221cb1efa61f33532b1b" translate="yes" xml:space="preserve">
          <source>func (p *Gray16) Bounds() Rectangle</source>
          <target state="translated">func (p * Gray16) 경계 () 사각형</target>
        </trans-unit>
        <trans-unit id="fd4e720e7c58e5577b392ddc9a22a710f18a4d4e" translate="yes" xml:space="preserve">
          <source>func (p *Gray16) ColorModel() color.Model</source>
          <target state="translated">func (p * Gray16) ColorModel () 색상. 모델</target>
        </trans-unit>
        <trans-unit id="98ff35034ec43d42ff157d9ee37fa919a8cc648e" translate="yes" xml:space="preserve">
          <source>func (p *Gray16) Gray16At(x, y int) color.Gray16</source>
          <target state="translated">func (p * Gray16) Gray16At (x, y int) 색상.</target>
        </trans-unit>
        <trans-unit id="580b7e94666e72d3d194c2cb4fe5b9459b9a8d37" translate="yes" xml:space="preserve">
          <source>func (p *Gray16) Opaque() bool</source>
          <target state="translated">func (p * Gray16) 불투명 () bool</target>
        </trans-unit>
        <trans-unit id="5da6b94d53e8fd5cd43d28ea90bd5cc6d82622d3" translate="yes" xml:space="preserve">
          <source>func (p *Gray16) PixOffset(x, y int) int</source>
          <target state="translated">func (p * Gray16) PixOffset (x, y int) int</target>
        </trans-unit>
        <trans-unit id="52c5290087b0864189ec0afac8081fbc05806e67" translate="yes" xml:space="preserve">
          <source>func (p *Gray16) Set(x, y int, c color.Color)</source>
          <target state="translated">func (p * Gray16) Set (x, y int, c color. 컬러)</target>
        </trans-unit>
        <trans-unit id="9e57094cb7a412c4ec375f49986ba62c67721abd" translate="yes" xml:space="preserve">
          <source>func (p *Gray16) SetGray16(x, y int, c color.Gray16)</source>
          <target state="translated">func (p * Gray16) SetGray16 (x, y int, c color. 회색 16)</target>
        </trans-unit>
        <trans-unit id="cadf7b09423121cfea6e20c3f5becee933c7c576" translate="yes" xml:space="preserve">
          <source>func (p *Gray16) SubImage(r Rectangle) Image</source>
          <target state="translated">func (p * Gray16) SubImage (r 사각형) 이미지</target>
        </trans-unit>
        <trans-unit id="d653b13b55a817acc1cb305d579c0cdf936fb748" translate="yes" xml:space="preserve">
          <source>func (p *NRGBA) At(x, y int) color.Color</source>
          <target state="translated">func (p * NRGBA) At (x, y int) 색상.</target>
        </trans-unit>
        <trans-unit id="398a25e23a021569671851e6eddcb378298dae7a" translate="yes" xml:space="preserve">
          <source>func (p *NRGBA) Bounds() Rectangle</source>
          <target state="translated">func (p * NRGBA) 경계 () 사각형</target>
        </trans-unit>
        <trans-unit id="529764c727e31c5d52c41260fd4e54c7ffe93b35" translate="yes" xml:space="preserve">
          <source>func (p *NRGBA) ColorModel() color.Model</source>
          <target state="translated">func (p * NRGBA) ColorModel () 색상. 모델</target>
        </trans-unit>
        <trans-unit id="f5e94dc82cd13b2d7b33909a115240005689c6b8" translate="yes" xml:space="preserve">
          <source>func (p *NRGBA) NRGBAAt(x, y int) color.NRGBA</source>
          <target state="translated">func (p * NRGBA) NRGBAAt (x, y int) 색상 .NRGBA</target>
        </trans-unit>
        <trans-unit id="4ab3309ec8477acf2152f0462ea5c2ecc5f6ec42" translate="yes" xml:space="preserve">
          <source>func (p *NRGBA) Opaque() bool</source>
          <target state="translated">func (p * NRGBA) 불투명 () bool</target>
        </trans-unit>
        <trans-unit id="20575b072270cbd8af2bf2ecb6bc7c138e1373fa" translate="yes" xml:space="preserve">
          <source>func (p *NRGBA) PixOffset(x, y int) int</source>
          <target state="translated">func (p * NRGBA) PixOffset (x, y int) int</target>
        </trans-unit>
        <trans-unit id="494bca8c0df971e20d281d5284c0e9421c8bfad1" translate="yes" xml:space="preserve">
          <source>func (p *NRGBA) Set(x, y int, c color.Color)</source>
          <target state="translated">func (p * NRGBA) 세트 (x, y int, c color. Color)</target>
        </trans-unit>
        <trans-unit id="76529c1c75cc015f776b54b0568211c31dbeaf5c" translate="yes" xml:space="preserve">
          <source>func (p *NRGBA) SetNRGBA(x, y int, c color.NRGBA)</source>
          <target state="translated">func (p * NRGBA) SetNRGBA (x, y int, c 컬러. NRGBA)</target>
        </trans-unit>
        <trans-unit id="361b17c9b22c2e4c494ad1262f3529ee299f87dd" translate="yes" xml:space="preserve">
          <source>func (p *NRGBA) SubImage(r Rectangle) Image</source>
          <target state="translated">func (p * NRGBA) 하위 이미지 (r 사각형) 이미지</target>
        </trans-unit>
        <trans-unit id="da3300cb9750873f5bc31cff5b7602d5a41f5baf" translate="yes" xml:space="preserve">
          <source>func (p *NRGBA64) At(x, y int) color.Color</source>
          <target state="translated">func (p * NRGBA64) At (x, y int) 색상.</target>
        </trans-unit>
        <trans-unit id="d590e3a3342acff511f7f2a81347954678dfcb86" translate="yes" xml:space="preserve">
          <source>func (p *NRGBA64) Bounds() Rectangle</source>
          <target state="translated">func (p * NRGBA64) 경계 () 사각형</target>
        </trans-unit>
        <trans-unit id="c13a2280ed6f9f2892f80c7bc4ee251cf4508f5b" translate="yes" xml:space="preserve">
          <source>func (p *NRGBA64) ColorModel() color.Model</source>
          <target state="translated">func (p * NRGBA64) ColorModel () 색상. 모델</target>
        </trans-unit>
        <trans-unit id="8d7501d5f8d79259bf681a13c6801654ae564e1a" translate="yes" xml:space="preserve">
          <source>func (p *NRGBA64) NRGBA64At(x, y int) color.NRGBA64</source>
          <target state="translated">func (p * NRGBA64) NRGBA64At (x, y int) 색상 .NRGBA64</target>
        </trans-unit>
        <trans-unit id="7df6f8e9f1cc008bbfd326a6225ae84f8413f24b" translate="yes" xml:space="preserve">
          <source>func (p *NRGBA64) Opaque() bool</source>
          <target state="translated">func (p * NRGBA64) 불투명 () bool</target>
        </trans-unit>
        <trans-unit id="00a72e430d081c12307abff42af9ed2541c75b59" translate="yes" xml:space="preserve">
          <source>func (p *NRGBA64) PixOffset(x, y int) int</source>
          <target state="translated">func (p * NRGBA64) PixOffset (x, y int) int</target>
        </trans-unit>
        <trans-unit id="f40aaf3e9996dadea230cf70622ed6c34521d0cb" translate="yes" xml:space="preserve">
          <source>func (p *NRGBA64) Set(x, y int, c color.Color)</source>
          <target state="translated">func (p * NRGBA64) 세트 (x, y int, c color. Color)</target>
        </trans-unit>
        <trans-unit id="91e8bcb9264327813d8a2b40a0d0d9dc824b7c58" translate="yes" xml:space="preserve">
          <source>func (p *NRGBA64) SetNRGBA64(x, y int, c color.NRGBA64)</source>
          <target state="translated">func (p * NRGBA64) SetNRGBA64 (x, y int, c 색상. NRGBA64)</target>
        </trans-unit>
        <trans-unit id="dde06903e83d98e5222078c049e252a613dcb14e" translate="yes" xml:space="preserve">
          <source>func (p *NRGBA64) SubImage(r Rectangle) Image</source>
          <target state="translated">func (p * NRGBA64) 하위 이미지 (r 사각형) 이미지</target>
        </trans-unit>
        <trans-unit id="b86911e9634020db9f912597e2a2d65c6a1fa1b9" translate="yes" xml:space="preserve">
          <source>func (p *NYCbCrA) AOffset(x, y int) int</source>
          <target state="translated">func (p * NYCbCrA) AOffset (x, y int) int</target>
        </trans-unit>
        <trans-unit id="5536884b2ced52e07728ab4385e8064ee5066ca4" translate="yes" xml:space="preserve">
          <source>func (p *NYCbCrA) At(x, y int) color.Color</source>
          <target state="translated">func (p * NYCbCrA) At (x, y int) 색상.</target>
        </trans-unit>
        <trans-unit id="bead90a0bd525d1e1b9b6ff6a5ec02dce168e0b6" translate="yes" xml:space="preserve">
          <source>func (p *NYCbCrA) ColorModel() color.Model</source>
          <target state="translated">func (p * NYCbCrA) ColorModel () 색상. 모델</target>
        </trans-unit>
        <trans-unit id="d28fdc968cda58aee96fdf4158de407b90c16a57" translate="yes" xml:space="preserve">
          <source>func (p *NYCbCrA) NYCbCrAAt(x, y int) color.NYCbCrA</source>
          <target state="translated">func (p * NYCbCrA) NYCbCrAAt (x, y int) 색상 .NYCbCrA</target>
        </trans-unit>
        <trans-unit id="ef236d6d3b1206070d4a2665f038e13c468d8b68" translate="yes" xml:space="preserve">
          <source>func (p *NYCbCrA) Opaque() bool</source>
          <target state="translated">func (p * NYCbCrA) 불투명 () bool</target>
        </trans-unit>
        <trans-unit id="83a71b680822b8897d0137632533284e0fad03da" translate="yes" xml:space="preserve">
          <source>func (p *NYCbCrA) SubImage(r Rectangle) Image</source>
          <target state="translated">func (p * NYCbCrA) 하위 이미지 (r 사각형) 이미지</target>
        </trans-unit>
        <trans-unit id="e4652e25319f76d44a4286a655381822f583e517" translate="yes" xml:space="preserve">
          <source>func (p *Package) End() token.Pos</source>
          <target state="translated">func (p * Package) End () 토큰.</target>
        </trans-unit>
        <trans-unit id="0c8a0c471a3e4abd8d2edd39c9104255299bf25c" translate="yes" xml:space="preserve">
          <source>func (p *Package) Filter(f Filter)</source>
          <target state="translated">func (p * 패키지) 필터 (f 필터)</target>
        </trans-unit>
        <trans-unit id="90c1ad3d70f286d84c7e46fbc5e76829eb075e04" translate="yes" xml:space="preserve">
          <source>func (p *Package) IsCommand() bool</source>
          <target state="translated">func (p * 패키지) IsCommand () bool</target>
        </trans-unit>
        <trans-unit id="d43e0f3f9828ce6c8802168982620348b0fed28a" translate="yes" xml:space="preserve">
          <source>func (p *Package) Pos() token.Pos</source>
          <target state="translated">func (p * Package) Pos () 토큰.</target>
        </trans-unit>
        <trans-unit id="c9d6bae84bebf8b340812dd9fbf2f0d37f3fd59e" translate="yes" xml:space="preserve">
          <source>func (p *Paletted) At(x, y int) color.Color</source>
          <target state="translated">func (p * 팔레트) At (x, y int) 색상. 색상</target>
        </trans-unit>
        <trans-unit id="e86d7ac2f3b2db90d0f20800c8a823b533ca943d" translate="yes" xml:space="preserve">
          <source>func (p *Paletted) Bounds() Rectangle</source>
          <target state="translated">func (p * 팔레트) 경계 () 사각형</target>
        </trans-unit>
        <trans-unit id="f5cefa3e3f04424b51bb1969fca3e2aa3573b5a8" translate="yes" xml:space="preserve">
          <source>func (p *Paletted) ColorIndexAt(x, y int) uint8</source>
          <target state="translated">func (p * 팔레트) ColorIndexAt (x, y int) uint8</target>
        </trans-unit>
        <trans-unit id="5ea3c8b67c969765dd73cd6751d5a86d4926941e" translate="yes" xml:space="preserve">
          <source>func (p *Paletted) ColorModel() color.Model</source>
          <target state="translated">func (p * 팔레트) ColorModel () color.Model</target>
        </trans-unit>
        <trans-unit id="5586b7a6637cee79cdac5d3d026a897a3fa640fc" translate="yes" xml:space="preserve">
          <source>func (p *Paletted) Opaque() bool</source>
          <target state="translated">func (p * 팔레트) 불투명 () bool</target>
        </trans-unit>
        <trans-unit id="c47b7aa9127add0d4eb179c3e8fbdc8d2352c2d7" translate="yes" xml:space="preserve">
          <source>func (p *Paletted) PixOffset(x, y int) int</source>
          <target state="translated">func (p * 팔레트) PixOffset (x, y int) int</target>
        </trans-unit>
        <trans-unit id="9b081cb63e4818618b5d25a2c5470a2caeb35a55" translate="yes" xml:space="preserve">
          <source>func (p *Paletted) Set(x, y int, c color.Color)</source>
          <target state="translated">func (p * 팔레트) Set (x, y int, c color.Color)</target>
        </trans-unit>
        <trans-unit id="47d810617f9ce04e88d9554e4d74794dd951108e" translate="yes" xml:space="preserve">
          <source>func (p *Paletted) SetColorIndex(x, y int, index uint8)</source>
          <target state="translated">func (p * 팔레트) SetColorIndex (x, y int, 인덱스 uint8)</target>
        </trans-unit>
        <trans-unit id="f1857465f84419a9947b5350a65ea5a0fff1aea6" translate="yes" xml:space="preserve">
          <source>func (p *Paletted) SubImage(r Rectangle) Image</source>
          <target state="translated">func (p * 팔레트) SubImage (r Rectangle) 이미지</target>
        </trans-unit>
        <trans-unit id="1a7e517df56ec6d40a424a8caecf86a3c206073e" translate="yes" xml:space="preserve">
          <source>func (p *Part) Close() error</source>
          <target state="translated">func (p * Part) Close () 오류</target>
        </trans-unit>
        <trans-unit id="8e6c0b6e4156d9579b1d02f631a852257cd6a8b3" translate="yes" xml:space="preserve">
          <source>func (p *Part) FileName() string</source>
          <target state="translated">func (p * Part) FileName () 문자열</target>
        </trans-unit>
        <trans-unit id="c397f672861b1996739edf09075a896519aa00fe" translate="yes" xml:space="preserve">
          <source>func (p *Part) FormName() string</source>
          <target state="translated">func (p * Part) FormName () 문자열</target>
        </trans-unit>
        <trans-unit id="6e9bec2c01fffbbb687920b785fd0671f741c6d4" translate="yes" xml:space="preserve">
          <source>func (p *Part) Read(d []byte) (n int, err error)</source>
          <target state="translated">func (p * Part) 읽기 (d [] byte) (n int, 오류)</target>
        </trans-unit>
        <trans-unit id="bce2ce6bde632731ad8aa323db05276105b45391" translate="yes" xml:space="preserve">
          <source>func (p *PipeNode) Copy() Node</source>
          <target state="translated">func (p * PipeNode) Copy () 노드</target>
        </trans-unit>
        <trans-unit id="f26865930186f8165ac743752c2139bd02064027" translate="yes" xml:space="preserve">
          <source>func (p *PipeNode) CopyPipe() *PipeNode</source>
          <target state="translated">func (p * PipeNode) CopyPipe () * 파이프 노드</target>
        </trans-unit>
        <trans-unit id="6fb25f8fbd58b9274d05e10271468e966492501f" translate="yes" xml:space="preserve">
          <source>func (p *PipeNode) String() string</source>
          <target state="translated">func (p * PipeNode) String () 문자열</target>
        </trans-unit>
        <trans-unit id="13035b76ce0ec1fcf81f2a522496069bdb6348cf" translate="yes" xml:space="preserve">
          <source>func (p *Pipeline) EndRequest(id uint)</source>
          <target state="translated">func (p * 파이프 라인) EndRequest (id uint)</target>
        </trans-unit>
        <trans-unit id="84e4b403d54c0ea99e77963daca9200b2359edda" translate="yes" xml:space="preserve">
          <source>func (p *Pipeline) EndResponse(id uint)</source>
          <target state="translated">func (p * 파이프 라인) EndResponse (id uint)</target>
        </trans-unit>
        <trans-unit id="ca142bca511ab668115459a6b8c29491c88c828f" translate="yes" xml:space="preserve">
          <source>func (p *Pipeline) Next() uint</source>
          <target state="translated">func (p * 파이프 라인) 다음 () uint</target>
        </trans-unit>
        <trans-unit id="fc201b7da727d0326aeec01425956d8618cc3c20" translate="yes" xml:space="preserve">
          <source>func (p *Pipeline) StartRequest(id uint)</source>
          <target state="translated">func (p * 파이프 라인) StartRequest (id uint)</target>
        </trans-unit>
        <trans-unit id="5f6aee30a4a663f4dd021e833d2ee86a09b911e2" translate="yes" xml:space="preserve">
          <source>func (p *Pipeline) StartResponse(id uint)</source>
          <target state="translated">func (p * 파이프 라인) StartResponse (id uint)</target>
        </trans-unit>
        <trans-unit id="12e0496195dd22addb229b83507cc586ba62c5fb" translate="yes" xml:space="preserve">
          <source>func (p *Plugin) Lookup(symName string) (Symbol, error)</source>
          <target state="translated">func (p * 플러그인) 조회 (symName 문자열) (기호, 오류)</target>
        </trans-unit>
        <trans-unit id="919497c7b01a22b4636ce67612ca1de0bca8a922" translate="yes" xml:space="preserve">
          <source>func (p *Pointer) Elem() Type</source>
          <target state="translated">func (p * 포인터) Elem () 타입</target>
        </trans-unit>
        <trans-unit id="b0563a7a8fa613382906352e1b6f77122c81e811" translate="yes" xml:space="preserve">
          <source>func (p *Pointer) String() string</source>
          <target state="translated">func (p * 포인터) String () 문자열</target>
        </trans-unit>
        <trans-unit id="bc443cee146d577600a1752111efe665215b1860" translate="yes" xml:space="preserve">
          <source>func (p *Pointer) Underlying() Type</source>
          <target state="translated">func (p * Pointer) 기본 () 타입</target>
        </trans-unit>
        <trans-unit id="4e581c9b33509d094547c9f3d14f11025e5d45a7" translate="yes" xml:space="preserve">
          <source>func (p *Pool) Get() interface{}</source>
          <target state="translated">func (p * 풀) Get () 인터페이스 {}</target>
        </trans-unit>
        <trans-unit id="34e04f13deb7eeb80be564a9592aa5625b3cb291" translate="yes" xml:space="preserve">
          <source>func (p *Pool) Put(x interface{})</source>
          <target state="translated">func (p * 풀) Put (x 인터페이스 {})</target>
        </trans-unit>
        <trans-unit id="5c44e4646e93f173486f45cc5d57d05ae89f907d" translate="yes" xml:space="preserve">
          <source>func (p *Process) Kill() error</source>
          <target state="translated">func (p * Process) Kill () 오류</target>
        </trans-unit>
        <trans-unit id="873b4204bdd953047d7a67fed86b53cca9c3128b" translate="yes" xml:space="preserve">
          <source>func (p *Process) Release() error</source>
          <target state="translated">func (p * Process) Release () 오류</target>
        </trans-unit>
        <trans-unit id="8b3e764027400c4e0bcb58381a1bfe1532f42742" translate="yes" xml:space="preserve">
          <source>func (p *Process) Signal(sig Signal) error</source>
          <target state="translated">func (p * Process) 신호 (sig Signal) 오류</target>
        </trans-unit>
        <trans-unit id="3de022f5ed83be1ce790ff36b6427f104c807710" translate="yes" xml:space="preserve">
          <source>func (p *Process) Wait() (*ProcessState, error)</source>
          <target state="translated">func (p * Process) Wait () (* ProcessState, 오류)</target>
        </trans-unit>
        <trans-unit id="e867238bd563fe422fe47be2205ad30b4d57a07c" translate="yes" xml:space="preserve">
          <source>func (p *ProcessState) ExitCode() int</source>
          <target state="translated">func (p * ProcessState) ExitCode () int</target>
        </trans-unit>
        <trans-unit id="950dc195339f19ad42765e845fbf1c608730bd89" translate="yes" xml:space="preserve">
          <source>func (p *ProcessState) Exited() bool</source>
          <target state="translated">func (p * ProcessState) Exited () 부울</target>
        </trans-unit>
        <trans-unit id="9816533c967caeece19e041417afb893ee89c03e" translate="yes" xml:space="preserve">
          <source>func (p *ProcessState) Pid() int</source>
          <target state="translated">func (p * ProcessState) Pid () int</target>
        </trans-unit>
        <trans-unit id="2aa09ac250932be8b3b6aeea98dd73811c7d3ebb" translate="yes" xml:space="preserve">
          <source>func (p *ProcessState) String() string</source>
          <target state="translated">func (p * ProcessState) String () 문자열</target>
        </trans-unit>
        <trans-unit id="a3e464338f8cebd9be58a911e7260057fdc45508" translate="yes" xml:space="preserve">
          <source>func (p *ProcessState) Success() bool</source>
          <target state="translated">func (p * ProcessState) Success () 부울</target>
        </trans-unit>
        <trans-unit id="5ab5c921cb4dee58356324855b2b20feb593c15b" translate="yes" xml:space="preserve">
          <source>func (p *ProcessState) Sys() interface{}</source>
          <target state="translated">func (p * ProcessState) Sys () 인터페이스 {}</target>
        </trans-unit>
        <trans-unit id="386d93beb609aa2efc1e251982bd650d33f23df3" translate="yes" xml:space="preserve">
          <source>func (p *ProcessState) SysUsage() interface{}</source>
          <target state="translated">func (p * ProcessState) SysUsage () 인터페이스 {}</target>
        </trans-unit>
        <trans-unit id="c33324c6350e268310f725efa9c1c210289cf64f" translate="yes" xml:space="preserve">
          <source>func (p *ProcessState) SystemTime() time.Duration</source>
          <target state="translated">func (p * ProcessState) SystemTime () 시간입니다.</target>
        </trans-unit>
        <trans-unit id="f9be2e23c5a0d5fa04dad5e60075f950ec5c56b9" translate="yes" xml:space="preserve">
          <source>func (p *ProcessState) UserTime() time.Duration</source>
          <target state="translated">func (p * ProcessState) UserTime () 시간입니다.</target>
        </trans-unit>
        <trans-unit id="836e1aaad7e74c712f079a9e3d6239da583e7812" translate="yes" xml:space="preserve">
          <source>func (p *Profile) Add(value interface{}, skip int)</source>
          <target state="translated">func (p * 프로필) 추가 (값 인터페이스 {}, 건너 뛰기)</target>
        </trans-unit>
        <trans-unit id="8e5efb9f8a39d8a2bdda826d830c70539ea8127e" translate="yes" xml:space="preserve">
          <source>func (p *Profile) Count() int</source>
          <target state="translated">func (p * 프로필) Count () int</target>
        </trans-unit>
        <trans-unit id="972218c8c61c3218750bd3aab74d083194d581e1" translate="yes" xml:space="preserve">
          <source>func (p *Profile) Name() string</source>
          <target state="translated">func (p * 프로필) 이름 () 문자열</target>
        </trans-unit>
        <trans-unit id="6ff1d3991626efcda7feb20e24a17d852df269cb" translate="yes" xml:space="preserve">
          <source>func (p *Profile) Remove(value interface{})</source>
          <target state="translated">func (p * 프로필) 제거 (값 인터페이스 {})</target>
        </trans-unit>
        <trans-unit id="615a31bbf40420856fab8f26a77b2e3d71aacd72" translate="yes" xml:space="preserve">
          <source>func (p *Profile) WriteTo(w io.Writer, debug int) error</source>
          <target state="translated">func (p * Profile) WriteTo (w io.Writer, 디버그 int) 오류</target>
        </trans-unit>
        <trans-unit id="a1b7b690f503acd76d4707254b8a6bd996377e93" translate="yes" xml:space="preserve">
          <source>func (p *Prog) Open() io.ReadSeeker</source>
          <target state="translated">func (p * Prog) Open () io.ReadSeeker</target>
        </trans-unit>
        <trans-unit id="adb64332143a6af2cebff92ff793200638e23a72" translate="yes" xml:space="preserve">
          <source>func (p *Prog) Prefix() (prefix string, complete bool)</source>
          <target state="translated">func (p * Prog) Prefix () (접두사 문자열, 완전한 bool)</target>
        </trans-unit>
        <trans-unit id="ae87c8fb662090bf0398c26a30b305a0878c696b" translate="yes" xml:space="preserve">
          <source>func (p *Prog) StartCond() EmptyOp</source>
          <target state="translated">func (p * Prog) StartCond () EmptyOp</target>
        </trans-unit>
        <trans-unit id="0cba96bbae73d7189b36e66653622f3867f7c41d" translate="yes" xml:space="preserve">
          <source>func (p *Prog) String() string</source>
          <target state="translated">func (p * Prog) 문자열 () 문자열</target>
        </trans-unit>
        <trans-unit id="e6b99afc7dc7bb4f2bb8b098ae8b69b7e40e2cae" translate="yes" xml:space="preserve">
          <source>func (p *RGBA) At(x, y int) color.Color</source>
          <target state="translated">func (p * RGBA) At (x, y int) 색상.</target>
        </trans-unit>
        <trans-unit id="1ed959659d4611ec90d4c7766f40c8d0d86a2f0e" translate="yes" xml:space="preserve">
          <source>func (p *RGBA) Bounds() Rectangle</source>
          <target state="translated">func (p * RGBA) 경계 () 사각형</target>
        </trans-unit>
        <trans-unit id="7150a4cc9af327c2b94b4d06b119c1a2847c68d1" translate="yes" xml:space="preserve">
          <source>func (p *RGBA) ColorModel() color.Model</source>
          <target state="translated">func (p * RGBA) ColorModel () 색상. 모델</target>
        </trans-unit>
        <trans-unit id="42580eedb8100a8d46cf19aed6d77c254fdee6dc" translate="yes" xml:space="preserve">
          <source>func (p *RGBA) Opaque() bool</source>
          <target state="translated">func (p * RGBA) 불투명 () bool</target>
        </trans-unit>
        <trans-unit id="64f71357e68aed33aadbf74b9dd4aebaf192efbb" translate="yes" xml:space="preserve">
          <source>func (p *RGBA) PixOffset(x, y int) int</source>
          <target state="translated">func (p * RGBA) PixOffset (x, y int) int</target>
        </trans-unit>
        <trans-unit id="4936c362a78d45448f2d50a6e81f0c6de0a84e08" translate="yes" xml:space="preserve">
          <source>func (p *RGBA) RGBAAt(x, y int) color.RGBA</source>
          <target state="translated">func (p * RGBA) RGBAAt (x, y int) 색상 .RGBA</target>
        </trans-unit>
        <trans-unit id="a98422e38887cf06208a27079c51b26c4a9f94e4" translate="yes" xml:space="preserve">
          <source>func (p *RGBA) Set(x, y int, c color.Color)</source>
          <target state="translated">func (p * RGBA) 세트 (x, y int, c color. Color)</target>
        </trans-unit>
        <trans-unit id="12516648890946112492fd6d4a6197169d51685f" translate="yes" xml:space="preserve">
          <source>func (p *RGBA) SetRGBA(x, y int, c color.RGBA)</source>
          <target state="translated">func (p * RGBA) SetRGBA (x, y int, c color.RGBA)</target>
        </trans-unit>
        <trans-unit id="317ce6396f9b37734e4d556295ba1527f3763ace" translate="yes" xml:space="preserve">
          <source>func (p *RGBA) SubImage(r Rectangle) Image</source>
          <target state="translated">func (p * RGBA) SubImage (r 사각형) 이미지</target>
        </trans-unit>
        <trans-unit id="78df34e2a7841c155f602481ab9d92582a446182" translate="yes" xml:space="preserve">
          <source>func (p *RGBA64) At(x, y int) color.Color</source>
          <target state="translated">func (p * RGBA64) At (x, y int) 색상.</target>
        </trans-unit>
        <trans-unit id="524d00fb9376dd9736dd8c99421909ce85a36079" translate="yes" xml:space="preserve">
          <source>func (p *RGBA64) Bounds() Rectangle</source>
          <target state="translated">func (p * RGBA64) 경계 () 사각형</target>
        </trans-unit>
        <trans-unit id="5509612db642429862273d2de9a35357ff99ef0b" translate="yes" xml:space="preserve">
          <source>func (p *RGBA64) ColorModel() color.Model</source>
          <target state="translated">func (p * RGBA64) ColorModel () 색상. 모델</target>
        </trans-unit>
        <trans-unit id="f623d56941a53507f6f6d66fa5869a0acdaa6f85" translate="yes" xml:space="preserve">
          <source>func (p *RGBA64) Opaque() bool</source>
          <target state="translated">func (p * RGBA64) 불투명 () bool</target>
        </trans-unit>
        <trans-unit id="d1aa3a0b17efe68913301df06eb83974f325520c" translate="yes" xml:space="preserve">
          <source>func (p *RGBA64) PixOffset(x, y int) int</source>
          <target state="translated">func (p * RGBA64) PixOffset (x, y int) int</target>
        </trans-unit>
        <trans-unit id="d53f1872fd21e1487b832fa6e45ffbf8eafcd60c" translate="yes" xml:space="preserve">
          <source>func (p *RGBA64) RGBA64At(x, y int) color.RGBA64</source>
          <target state="translated">func (p * RGBA64) RGBA64At (x, y int) 색상.</target>
        </trans-unit>
        <trans-unit id="1b3afef74fa638bd672e9e546d2951774373bd04" translate="yes" xml:space="preserve">
          <source>func (p *RGBA64) Set(x, y int, c color.Color)</source>
          <target state="translated">func (p * RGBA64) 세트 (x, y int, c color. Color)</target>
        </trans-unit>
        <trans-unit id="630325a91e7834f1e2ead89f13d425a0bc2ae9ca" translate="yes" xml:space="preserve">
          <source>func (p *RGBA64) SetRGBA64(x, y int, c color.RGBA64)</source>
          <target state="translated">func (p * RGBA64) SetRGBA64 (x, y int, c 색상. RGBA64)</target>
        </trans-unit>
        <trans-unit id="749e63bf8f6f77c1283305fdabb7f2457698372f" translate="yes" xml:space="preserve">
          <source>func (p *RGBA64) SubImage(r Rectangle) Image</source>
          <target state="translated">func (p * RGBA64) 하위 이미지 (r 사각형) 이미지</target>
        </trans-unit>
        <trans-unit id="e9514da99f855eecaaa040b0c4f88a3d9d4a5176" translate="yes" xml:space="preserve">
          <source>func (p *ReverseProxy) ServeHTTP(rw http.ResponseWriter, req *http.Request)</source>
          <target state="translated">func (p * ReverseProxy) ServeHTTP (rw http.ResponseWriter, 요청 * http.Request)</target>
        </trans-unit>
        <trans-unit id="022e692517f47a65cf27d35a6166b4aeaff7ca8e" translate="yes" xml:space="preserve">
          <source>func (p *YCbCr) At(x, y int) color.Color</source>
          <target state="translated">func (p * YCbCr) At (x, y int) 색상.</target>
        </trans-unit>
        <trans-unit id="75892a31f654fb479c0ba8514a16eac14f9317b3" translate="yes" xml:space="preserve">
          <source>func (p *YCbCr) Bounds() Rectangle</source>
          <target state="translated">func (p * YCbCr) 경계 () 사각형</target>
        </trans-unit>
        <trans-unit id="133a3d84c8bec32556f4793d1c1b812f534bdd1e" translate="yes" xml:space="preserve">
          <source>func (p *YCbCr) COffset(x, y int) int</source>
          <target state="translated">func (p * YCbCr) COffset (x, y int) int</target>
        </trans-unit>
        <trans-unit id="43216447abee566daafee52397834798f873228b" translate="yes" xml:space="preserve">
          <source>func (p *YCbCr) ColorModel() color.Model</source>
          <target state="translated">func (p * YCbCr) ColorModel () 색상. 모델</target>
        </trans-unit>
        <trans-unit id="32ab32f9ebb91dad7fcb8bc30f71488eb3c00bb0" translate="yes" xml:space="preserve">
          <source>func (p *YCbCr) Opaque() bool</source>
          <target state="translated">func (p * YCbCr) 불투명 () bool</target>
        </trans-unit>
        <trans-unit id="4d194b8505e26cf9266ee7a64198728c790cf997" translate="yes" xml:space="preserve">
          <source>func (p *YCbCr) SubImage(r Rectangle) Image</source>
          <target state="translated">func (p * YCbCr) 서브 이미지 (r 사각형) 이미지</target>
        </trans-unit>
        <trans-unit id="20274af0b5a08b798d50c804287f9438d7d69b5e" translate="yes" xml:space="preserve">
          <source>func (p *YCbCr) YCbCrAt(x, y int) color.YCbCr</source>
          <target state="translated">func (p * YCbCr) YCbCrAt (x, y int) 색상 .YCbCr</target>
        </trans-unit>
        <trans-unit id="0ce8c88e464349f0953a4c2e7e07dba576296d6e" translate="yes" xml:space="preserve">
          <source>func (p *YCbCr) YOffset(x, y int) int</source>
          <target state="translated">func (p * YCbCr) YOffset (x, y int) int</target>
        </trans-unit>
        <trans-unit id="c6c60387e1d64e70eb6cf14f04d20c32a59f6576" translate="yes" xml:space="preserve">
          <source>func (p ErrorList) Err() error</source>
          <target state="translated">func (p ErrorList) Err () 오류</target>
        </trans-unit>
        <trans-unit id="a3cc8efae6bf1525063710dabbfabf5da9db8f13" translate="yes" xml:space="preserve">
          <source>func (p ErrorList) Error() string</source>
          <target state="translated">func (p ErrorList) Error () 문자열</target>
        </trans-unit>
        <trans-unit id="2093f1a7a3958b2b182f8258d6b8dcca41d04fee" translate="yes" xml:space="preserve">
          <source>func (p ErrorList) Len() int</source>
          <target state="translated">func (p ErrorList) Len () int</target>
        </trans-unit>
        <trans-unit id="8ce11423f84d014fa119aacf9e116e12b0740366" translate="yes" xml:space="preserve">
          <source>func (p ErrorList) Less(i, j int) bool</source>
          <target state="translated">func (p ErrorList) Less (i, j int) 부울</target>
        </trans-unit>
        <trans-unit id="f21372926280005429178517e71606597b2ded88" translate="yes" xml:space="preserve">
          <source>func (p ErrorList) Sort()</source>
          <target state="translated">func (p ErrorList) 정렬 ()</target>
        </trans-unit>
        <trans-unit id="215d394bec2bf6f775c64a2c32104ea2c04fbd6f" translate="yes" xml:space="preserve">
          <source>func (p ErrorList) Swap(i, j int)</source>
          <target state="translated">func (p ErrorList) 스왑 (i, j int)</target>
        </trans-unit>
        <trans-unit id="d0430cf3b928d6d8d8a78fbddc96445058b862c8" translate="yes" xml:space="preserve">
          <source>func (p Float64Slice) Len() int</source>
          <target state="translated">func (p Float64Slice) Len () 정수</target>
        </trans-unit>
        <trans-unit id="847864a237093dec2416f75868303e7afb3813fb" translate="yes" xml:space="preserve">
          <source>func (p Float64Slice) Less(i, j int) bool</source>
          <target state="translated">func (p Float64Slice) 이하 (i, j int) 부울</target>
        </trans-unit>
        <trans-unit id="8f97f6f7c52a738afa448a8e956380991740153a" translate="yes" xml:space="preserve">
          <source>func (p Float64Slice) Search(x float64) int</source>
          <target state="translated">func (p Float64Slice) 검색 (x float64) int</target>
        </trans-unit>
        <trans-unit id="7dd3a549c1302d197acf6301732ee623f131d4f3" translate="yes" xml:space="preserve">
          <source>func (p Float64Slice) Sort()</source>
          <target state="translated">func (p Float64Slice) 정렬 ()</target>
        </trans-unit>
        <trans-unit id="5ef4f5f0ea2ff0384a2e08d477f8571d8ee899c1" translate="yes" xml:space="preserve">
          <source>func (p Float64Slice) Swap(i, j int)</source>
          <target state="translated">func (p Float64Slice) 스왑 (i, j int)</target>
        </trans-unit>
        <trans-unit id="9c9a08d75338150668f1d1305a223a1fe8ec01c4" translate="yes" xml:space="preserve">
          <source>func (p IntSlice) Len() int</source>
          <target state="translated">func (p IntSlice) Len () int</target>
        </trans-unit>
        <trans-unit id="3c1421a9ef3833746a52059c9171a8c7df14ace7" translate="yes" xml:space="preserve">
          <source>func (p IntSlice) Less(i, j int) bool</source>
          <target state="translated">func (p IntSlice) 이하 (i, j int) 부울</target>
        </trans-unit>
        <trans-unit id="fedcf877dea16e1654add06d15711046ba711cfe" translate="yes" xml:space="preserve">
          <source>func (p IntSlice) Search(x int) int</source>
          <target state="translated">func (p IntSlice) 검색 (x int) int</target>
        </trans-unit>
        <trans-unit id="af2d7e488b65426d31a746457ec8303608a15b29" translate="yes" xml:space="preserve">
          <source>func (p IntSlice) Sort()</source>
          <target state="translated">func (p IntSlice) 정렬 ()</target>
        </trans-unit>
        <trans-unit id="0fa5483b82a3b7932a3d52a7599fc13464daa70f" translate="yes" xml:space="preserve">
          <source>func (p IntSlice) Swap(i, j int)</source>
          <target state="translated">func (p IntSlice) 스왑 (i, j int)</target>
        </trans-unit>
        <trans-unit id="44db06905732890133f9d42a7a73cd4a6b3aae42" translate="yes" xml:space="preserve">
          <source>func (p Palette) Convert(c Color) Color</source>
          <target state="translated">func (p 팔레트) 변환 (c 색상) 색상</target>
        </trans-unit>
        <trans-unit id="9dfd0afb785d127511b0441883150720dec393c2" translate="yes" xml:space="preserve">
          <source>func (p Palette) Index(c Color) int</source>
          <target state="translated">func (p 팔레트) 색인 (c 색상) int</target>
        </trans-unit>
        <trans-unit id="afcd504bab2fb9203884da1e8fbb4cfd771b3b53" translate="yes" xml:space="preserve">
          <source>func (p Point) Add(q Point) Point</source>
          <target state="translated">func (p 포인트) 추가 (q 포인트) 포인트</target>
        </trans-unit>
        <trans-unit id="b55f1a4780503ae917b0c523c99df8e092b75306" translate="yes" xml:space="preserve">
          <source>func (p Point) Div(k int) Point</source>
          <target state="translated">func (p 포인트) Div (k int) 포인트</target>
        </trans-unit>
        <trans-unit id="b4d19c92312cf3c2eabf074a3395c553daa72bd1" translate="yes" xml:space="preserve">
          <source>func (p Point) Eq(q Point) bool</source>
          <target state="translated">func (p 포인트) Eq (q 포인트) bool</target>
        </trans-unit>
        <trans-unit id="1dea8e65c226d8707b8a3ef945535cca3089a4d9" translate="yes" xml:space="preserve">
          <source>func (p Point) In(r Rectangle) bool</source>
          <target state="translated">func (p 포인트) In (r 사각형) bool</target>
        </trans-unit>
        <trans-unit id="66cf19d900ed6fb3e99285593d7208cc3b402cc5" translate="yes" xml:space="preserve">
          <source>func (p Point) Mod(r Rectangle) Point</source>
          <target state="translated">func (p 포인트) Mod (r 사각형) 포인트</target>
        </trans-unit>
        <trans-unit id="92e03df29ada80fee7fb902c59186cee57b351e7" translate="yes" xml:space="preserve">
          <source>func (p Point) Mul(k int) Point</source>
          <target state="translated">func (p 포인트) Mul (k int) 포인트</target>
        </trans-unit>
        <trans-unit id="064f34b811998b44c8d916e9a126df99f2867970" translate="yes" xml:space="preserve">
          <source>func (p Point) String() string</source>
          <target state="translated">func (p Point) 문자열 () 문자열</target>
        </trans-unit>
        <trans-unit id="21eb5fb594dff0ebca7f98c37822c9c71187d88e" translate="yes" xml:space="preserve">
          <source>func (p Point) Sub(q Point) Point</source>
          <target state="translated">func (p 점) Sub (q 점) 점</target>
        </trans-unit>
        <trans-unit id="84ce4f70a4c8643578e779e68f8b39d6e5a47c0b" translate="yes" xml:space="preserve">
          <source>func (p Pos) IsValid() bool</source>
          <target state="translated">func (p Pos) IsValid () 부울</target>
        </trans-unit>
        <trans-unit id="d7c13c7a23d1bca61bcfdaf2258296ba2d4aca3a" translate="yes" xml:space="preserve">
          <source>func (p Pos) Position() Pos</source>
          <target state="translated">func (p Pos) 위치 () Pos</target>
        </trans-unit>
        <trans-unit id="30a12884475efcfc666ad00b4c1ef6a8ea37fb81" translate="yes" xml:space="preserve">
          <source>func (p ProcInst) Copy() ProcInst</source>
          <target state="translated">func (p ProcInst) Copy () 프로세스</target>
        </trans-unit>
        <trans-unit id="6b603b4e5e5440dd8cc7d26dae4231cb2036aa35" translate="yes" xml:space="preserve">
          <source>func (p ProtocolError) Error() string</source>
          <target state="translated">func (p ProtocolError) Error () 문자열</target>
        </trans-unit>
        <trans-unit id="1db9fc2a0a879e8bcc0d0c48273d32b36ccea4db" translate="yes" xml:space="preserve">
          <source>func (p StringSlice) Len() int</source>
          <target state="translated">func (p StringSlice) Len () int</target>
        </trans-unit>
        <trans-unit id="12886c85cce97cec2d1a017b4e9f8ad5507d9754" translate="yes" xml:space="preserve">
          <source>func (p StringSlice) Less(i, j int) bool</source>
          <target state="translated">func (p StringSlice) Less (i, j int) 부울</target>
        </trans-unit>
        <trans-unit id="6a11e3bfd3d41490458c49d3adee87b2c41aed6a" translate="yes" xml:space="preserve">
          <source>func (p StringSlice) Search(x string) int</source>
          <target state="translated">func (p StringSlice) 검색 (x 문자열) int</target>
        </trans-unit>
        <trans-unit id="6ebac8839f28c474ed13c6c4a9a21514409b335f" translate="yes" xml:space="preserve">
          <source>func (p StringSlice) Sort()</source>
          <target state="translated">func (p StringSlice) 정렬 ()</target>
        </trans-unit>
        <trans-unit id="d10371476299b647c741a9ac9bfc7c4ed321cc99" translate="yes" xml:space="preserve">
          <source>func (p StringSlice) Swap(i, j int)</source>
          <target state="translated">func (p StringSlice) 스왑 (i, j int)</target>
        </trans-unit>
        <trans-unit id="266954cbbf61daefb7eb448322ed15a1730ee223" translate="yes" xml:space="preserve">
          <source>func (pb *PB) Next() bool</source>
          <target state="translated">func (pb * PB) 다음 () 부울</target>
        </trans-unit>
        <trans-unit id="a6afdbc92f4ff49e37e48bc0dc5b3ca51644ba5a" translate="yes" xml:space="preserve">
          <source>func (pe *ProtocolError) Error() string</source>
          <target state="translated">func (pe * ProtocolError) Error () 문자열</target>
        </trans-unit>
        <trans-unit id="73cafc0231f9b33187a5649a2a8a9ea476ae7d5b" translate="yes" xml:space="preserve">
          <source>func (pkg *Package) Complete() bool</source>
          <target state="translated">func (pkg * 패키지) Complete () bool</target>
        </trans-unit>
        <trans-unit id="761a1afd3a9135d14c4fdd2fc41d3b841d0c2d3c" translate="yes" xml:space="preserve">
          <source>func (pkg *Package) Imports() []*Package</source>
          <target state="translated">func (pkg * 패키지) 수입 () [] * 패키지</target>
        </trans-unit>
        <trans-unit id="8b029c5ee9bb9d34620f98b1f19cf1acfcc3970e" translate="yes" xml:space="preserve">
          <source>func (pkg *Package) MarkComplete()</source>
          <target state="translated">func (pkg * 패키지) MarkComplete ()</target>
        </trans-unit>
        <trans-unit id="ae670b89511d87fd80b67037cb59d0911a80f704" translate="yes" xml:space="preserve">
          <source>func (pkg *Package) Name() string</source>
          <target state="translated">func (pkg * 패키지) 이름 () 문자열</target>
        </trans-unit>
        <trans-unit id="dc215afae709ecfe9d9363fcab9b1d3861f8bc24" translate="yes" xml:space="preserve">
          <source>func (pkg *Package) Path() string</source>
          <target state="translated">func (pkg * 패키지) Path () 문자열</target>
        </trans-unit>
        <trans-unit id="9cb64701a3d1c4516d68a3101d498579374bc4e1" translate="yes" xml:space="preserve">
          <source>func (pkg *Package) Scope() *Scope</source>
          <target state="translated">func (pkg * 패키지) 범위 () * 범위</target>
        </trans-unit>
        <trans-unit id="ff6ffc8e6d90eca49201c7bf1e83e83711721e32" translate="yes" xml:space="preserve">
          <source>func (pkg *Package) SetImports(list []*Package)</source>
          <target state="translated">func (pkg * 패키지) SetImports (목록 [] * 패키지)</target>
        </trans-unit>
        <trans-unit id="716d45bb9d150b75e7460613c8a0043ac01810a6" translate="yes" xml:space="preserve">
          <source>func (pkg *Package) SetName(name string)</source>
          <target state="translated">func (pkg * 패키지) SetName (이름 문자열)</target>
        </trans-unit>
        <trans-unit id="476ce8104713b28a105eb108f83773a9a3328294" translate="yes" xml:space="preserve">
          <source>func (pkg *Package) String() string</source>
          <target state="translated">func (pkg * 패키지) String () 문자열</target>
        </trans-unit>
        <trans-unit id="6d7b449cc5603fd623437ccf7f3179a27d47dc5d" translate="yes" xml:space="preserve">
          <source>func (pos *Position) IsValid() bool</source>
          <target state="translated">func (pos * Position) IsValid () 부울</target>
        </trans-unit>
        <trans-unit id="8bdb9b72084e990237f4622c07b73cddf7a2c3f6" translate="yes" xml:space="preserve">
          <source>func (pos Position) String() string</source>
          <target state="translated">func (pos 위치) String () 문자열</target>
        </trans-unit>
        <trans-unit id="1b14cdfae3474d1dae7b76e94dd340dd96271404" translate="yes" xml:space="preserve">
          <source>func (priv *PrivateKey) Decrypt(rand io.Reader, ciphertext []byte, opts crypto.DecrypterOpts) (plaintext []byte, err error)</source>
          <target state="translated">func (priv * PrivateKey) 암호 해독 (rand io.Reader, 암호문 [] 바이트, 암호 해독기 옵션 선택) (일반 텍스트 [] 바이트, 오류)</target>
        </trans-unit>
        <trans-unit id="f38dc8be6f29640f0c91cbf120b13cd7361c98b3" translate="yes" xml:space="preserve">
          <source>func (priv *PrivateKey) Precompute()</source>
          <target state="translated">func (priv * PrivateKey) 사전 계산 ()</target>
        </trans-unit>
        <trans-unit id="fe2812c6b148bbc743757dd304be1acb93815412" translate="yes" xml:space="preserve">
          <source>func (priv *PrivateKey) Public() crypto.PublicKey</source>
          <target state="translated">func (priv * PrivateKey) Public () crypto.PublicKey</target>
        </trans-unit>
        <trans-unit id="bf2b8a4e089bffe33cf1255b611d010873a7b312" translate="yes" xml:space="preserve">
          <source>func (priv *PrivateKey) Sign(rand io.Reader, digest []byte, opts crypto.SignerOpts) ([]byte, error)</source>
          <target state="translated">func (priv * PrivateKey) Sign (rand io.Reader, digest [] byte, crypto.SignerOpts 선택) ([] byte, 오류)</target>
        </trans-unit>
        <trans-unit id="607c62e561d9cdcbc93b9aa90e323d6f544200ae" translate="yes" xml:space="preserve">
          <source>func (priv *PrivateKey) Validate() error</source>
          <target state="translated">func (priv * PrivateKey) Validate () 오류</target>
        </trans-unit>
        <trans-unit id="054c64dc7c3663b93448261201e70bf0a8076857" translate="yes" xml:space="preserve">
          <source>func (priv PrivateKey) Public() crypto.PublicKey</source>
          <target state="translated">func (private PrivateKey) Public () crypto.PublicKey</target>
        </trans-unit>
        <trans-unit id="df9dc074cb7bb49470bb6c333a6141ae95ddd706" translate="yes" xml:space="preserve">
          <source>func (priv PrivateKey) Seed() []byte</source>
          <target state="translated">func (프라이빗 개인 키) Seed () [] byte</target>
        </trans-unit>
        <trans-unit id="841ad79aa19b3432660148cf1cf816030befda8a" translate="yes" xml:space="preserve">
          <source>func (priv PrivateKey) Sign(rand io.Reader, message []byte, opts crypto.SignerOpts) (signature []byte, err error)</source>
          <target state="translated">func (private PrivateKey) Sign (rand io.Reader, message [] byte, crypto.SignerOpts 선택) (서명 [] byte, 오류)</target>
        </trans-unit>
        <trans-unit id="7370056028ba1e9772b951c3e5559c25abdae890" translate="yes" xml:space="preserve">
          <source>func (pssOpts *PSSOptions) HashFunc() crypto.Hash</source>
          <target state="translated">func (pssOpts * PSSOptions) HashFunc () crypto.Hash</target>
        </trans-unit>
        <trans-unit id="78c2f24f98fde486a46e015240b24027a04187bb" translate="yes" xml:space="preserve">
          <source>func (pub *PublicKey) Size() int</source>
          <target state="translated">func (pub * PublicKey) 크기 () int</target>
        </trans-unit>
        <trans-unit id="c4bf95a21d409d51931d26a833986d495190988e" translate="yes" xml:space="preserve">
          <source>func (r *LineReader) Next(entry *LineEntry) error</source>
          <target state="translated">func (r * LineReader) 다음 (항목 * LineEntry) 오류</target>
        </trans-unit>
        <trans-unit id="9e7cbd100e9e5a08412e5548b2f7001f24802e90" translate="yes" xml:space="preserve">
          <source>func (r *LineReader) Reset()</source>
          <target state="translated">func (r * LineReader) 재설정 ()</target>
        </trans-unit>
        <trans-unit id="d4b5ca8a9da84a3ff2af429ffed24295b9687c6e" translate="yes" xml:space="preserve">
          <source>func (r *LineReader) Seek(pos LineReaderPos)</source>
          <target state="translated">func (r * LineReader) 찾기 (pos LineReaderPos)</target>
        </trans-unit>
        <trans-unit id="195ddd9cbba52955eafe7d6fbfbfa831a51513d9" translate="yes" xml:space="preserve">
          <source>func (r *LineReader) SeekPC(pc uint64, entry *LineEntry) error</source>
          <target state="translated">func (r * LineReader) SeekPC (pc uint64, entry * LineEntry) 오류</target>
        </trans-unit>
        <trans-unit id="f76a52c343c513afc47a10639c93ccf0c5ea7ed3" translate="yes" xml:space="preserve">
          <source>func (r *LineReader) Tell() LineReaderPos</source>
          <target state="translated">func (r * LineReader) Tell () LineReaderPos</target>
        </trans-unit>
        <trans-unit id="585fe0476f4a72f69117b3ec721ae709a0138779" translate="yes" xml:space="preserve">
          <source>func (r *MemProfileRecord) InUseBytes() int64</source>
          <target state="translated">func (r * MemProfileRecord) InUseBytes () int64</target>
        </trans-unit>
        <trans-unit id="70abd36df89b70c9b30586dfc0abb46ace1f9929" translate="yes" xml:space="preserve">
          <source>func (r *MemProfileRecord) InUseObjects() int64</source>
          <target state="translated">func (r * MemProfileRecord) InUseObjects () int64</target>
        </trans-unit>
        <trans-unit id="904736b476b533f38dc68c305dfd1749d683972b" translate="yes" xml:space="preserve">
          <source>func (r *MemProfileRecord) Stack() []uintptr</source>
          <target state="translated">func (r * MemProfileRecord) 스택 () [] uintptr</target>
        </trans-unit>
        <trans-unit id="ed38ced883e808f290bd08baccff40f04a1305a4" translate="yes" xml:space="preserve">
          <source>func (r *PipeReader) Close() error</source>
          <target state="translated">func (r * PipeReader) Close () 오류</target>
        </trans-unit>
        <trans-unit id="b5fb74dbe56bc4aa636698225233986c16749285" translate="yes" xml:space="preserve">
          <source>func (r *PipeReader) CloseWithError(err error) error</source>
          <target state="translated">func (r * PipeReader) CloseWithError (err error) 오류</target>
        </trans-unit>
        <trans-unit id="098dc64626ed1e95470945cc3dd920432a398a2c" translate="yes" xml:space="preserve">
          <source>func (r *PipeReader) Read(data []byte) (n int, err error)</source>
          <target state="translated">func (r * PipeReader) 읽기 (데이터 [] 바이트) (n int, 오류)</target>
        </trans-unit>
        <trans-unit id="2ba76b87524c18fb60646c1f9247c6ae22ccfcb7" translate="yes" xml:space="preserve">
          <source>func (r *PtraceRegs) PC() uint64</source>
          <target state="translated">func (r * PtraceRegs) PC () uint64</target>
        </trans-unit>
        <trans-unit id="27c1320f227b78761b7ab2fc45fcc1bd277ef1b1" translate="yes" xml:space="preserve">
          <source>func (r *PtraceRegs) SetPC(pc uint64)</source>
          <target state="translated">func (r * PtraceRegs) SetPC (pc uint64)</target>
        </trans-unit>
        <trans-unit id="e2c5eb814ff72c0f6b8d221febe2a237e9305a40" translate="yes" xml:space="preserve">
          <source>func (r *Rand) ExpFloat64() float64</source>
          <target state="translated">func (r * 랜드) ExpFloat64 () float64</target>
        </trans-unit>
        <trans-unit id="24671175fc3ba363c5e59337111e9c273db8a615" translate="yes" xml:space="preserve">
          <source>func (r *Rand) Float32() float32</source>
          <target state="translated">func (r * Rand) Float32 () float32</target>
        </trans-unit>
        <trans-unit id="41ed1ef7a3779330befc4100fbca14d8ad37370e" translate="yes" xml:space="preserve">
          <source>func (r *Rand) Float64() float64</source>
          <target state="translated">func (r * 랜드) Float64 () float64</target>
        </trans-unit>
        <trans-unit id="44c4a20744ae6c33ceecabd0a77709ac20ead730" translate="yes" xml:space="preserve">
          <source>func (r *Rand) Int() int</source>
          <target state="translated">func (r * Rand) Int () int</target>
        </trans-unit>
        <trans-unit id="eca5a97b1e32d245597faf863a2c70afdcadcb46" translate="yes" xml:space="preserve">
          <source>func (r *Rand) Int31() int32</source>
          <target state="translated">func (r * 랜드) Int31 () int32</target>
        </trans-unit>
        <trans-unit id="9a9d10a3d78d17a8f377bd3e499111cc9e9b57a4" translate="yes" xml:space="preserve">
          <source>func (r *Rand) Int31n(n int32) int32</source>
          <target state="translated">func (r * 랜드) Int31n (n int32) int32</target>
        </trans-unit>
        <trans-unit id="81a68693974bccc8c8f0df537544b74c24414247" translate="yes" xml:space="preserve">
          <source>func (r *Rand) Int63() int64</source>
          <target state="translated">func (r * 랜드) Int63 () int64</target>
        </trans-unit>
        <trans-unit id="cf6d36fd8a113684395c7ea956ad8f1766ddc208" translate="yes" xml:space="preserve">
          <source>func (r *Rand) Int63n(n int64) int64</source>
          <target state="translated">func (r * 랜드) Int63n (n int64) int64</target>
        </trans-unit>
        <trans-unit id="f961236d1dfab4898a250b8093b7ba4b6fca3efd" translate="yes" xml:space="preserve">
          <source>func (r *Rand) Intn(n int) int</source>
          <target state="translated">func (r * 랜드) Intn (n int) int</target>
        </trans-unit>
        <trans-unit id="12d1f4ce6ea5ae713b49ce1f92870946e00a3c64" translate="yes" xml:space="preserve">
          <source>func (r *Rand) NormFloat64() float64</source>
          <target state="translated">func (r * 랜드) NormFloat64 () float64</target>
        </trans-unit>
        <trans-unit id="af38ebcf0f86cf1850fac8d0bc2e98f30f4219d9" translate="yes" xml:space="preserve">
          <source>func (r *Rand) Perm(n int) []int</source>
          <target state="translated">func (r * 랜드) Perm (n int) [] int</target>
        </trans-unit>
        <trans-unit id="afc3ef0a77ffa1edb3eb95f14e14dfe0d67bfd44" translate="yes" xml:space="preserve">
          <source>func (r *Rand) Read(p []byte) (n int, err error)</source>
          <target state="translated">func (r * Rand) 읽기 (p [] byte) (n int, 오류)</target>
        </trans-unit>
        <trans-unit id="63b295210c733b7faf1e6066b0761262cb506d85" translate="yes" xml:space="preserve">
          <source>func (r *Rand) Seed(seed int64)</source>
          <target state="translated">func (r * 랜드) 씨앗 (시드 int64)</target>
        </trans-unit>
        <trans-unit id="fc08958ee3284098343b5bee6c8c2426141cf098" translate="yes" xml:space="preserve">
          <source>func (r *Rand) Shuffle(n int, swap func(i, j int))</source>
          <target state="translated">func (r * 랜드) 셔플 (n int, swap func (i, j int))</target>
        </trans-unit>
        <trans-unit id="0534a8c617193c4f7897c2cf459ddc73a2119ac5" translate="yes" xml:space="preserve">
          <source>func (r *Rand) Uint32() uint32</source>
          <target state="translated">func (r * 랜드) Uint32 () uint32</target>
        </trans-unit>
        <trans-unit id="3d31e7a213038d17ab387557b3db71194610cf8f" translate="yes" xml:space="preserve">
          <source>func (r *Rand) Uint64() uint64</source>
          <target state="translated">func (r * 랜드) Uint64 () uint64</target>
        </trans-unit>
        <trans-unit id="6363535ea5a8867254f76c9293e158d18b741990" translate="yes" xml:space="preserve">
          <source>func (r *RangeNode) Copy() Node</source>
          <target state="translated">func (r * RangeNode) Copy () 노드</target>
        </trans-unit>
        <trans-unit id="3764b1ba00d22c08659887e3cacedf122697fbac" translate="yes" xml:space="preserve">
          <source>func (r *Reader) AddressSize() int</source>
          <target state="translated">func (r * 리더) AddressSize () int</target>
        </trans-unit>
        <trans-unit id="0a018513f0868368d4cb8c6eadefd5bf05e23751" translate="yes" xml:space="preserve">
          <source>func (r *Reader) DotReader() io.Reader</source>
          <target state="translated">func (r * 리더) DotReader () io. 리더</target>
        </trans-unit>
        <trans-unit id="5668f382c4731a8396a406f1358ac1c14b574c55" translate="yes" xml:space="preserve">
          <source>func (r *Reader) Len() int</source>
          <target state="translated">func (r * 리더) Len () int</target>
        </trans-unit>
        <trans-unit id="36a898d257f0d40f93a722bbb65ad3995e23634a" translate="yes" xml:space="preserve">
          <source>func (r *Reader) Next() (*Entry, error)</source>
          <target state="translated">func (r * 리더) Next () (* 입력, 오류)</target>
        </trans-unit>
        <trans-unit id="ceeca4100ac1a8eb5a267fe640926e6b13b8dee2" translate="yes" xml:space="preserve">
          <source>func (r *Reader) NextPart() (*Part, error)</source>
          <target state="translated">func (r * 리더) NextPart () (* 파트, 오류)</target>
        </trans-unit>
        <trans-unit id="652e99b5bd2f63c3501f8ccbfd9e1d5d0dff7ec0" translate="yes" xml:space="preserve">
          <source>func (r *Reader) Read() (record []string, err error)</source>
          <target state="translated">func (r * 리더) Read () (레코드 [] 문자열, 에러 에러)</target>
        </trans-unit>
        <trans-unit id="727e6d9055e7295d858fd52744e2753b8cb1c160" translate="yes" xml:space="preserve">
          <source>func (r *Reader) Read(b []byte) (n int, err error)</source>
          <target state="translated">func (r * 리더) 읽기 (b [] 바이트) (n int, 오류)</target>
        </trans-unit>
        <trans-unit id="d946d78c272fc791e727078af742065d909b55ea" translate="yes" xml:space="preserve">
          <source>func (r *Reader) Read(p []byte) (n int, err error)</source>
          <target state="translated">func (r * 리더) 읽기 (p [] byte) (n int, 오류)</target>
        </trans-unit>
        <trans-unit id="e92c00d93df2f5d36eea55f296c372ce0f520965" translate="yes" xml:space="preserve">
          <source>func (r *Reader) ReadAll() (records [][]string, err error)</source>
          <target state="translated">func (r * 리더) ReadAll () ([] [] 문자열 오류, 오류)</target>
        </trans-unit>
        <trans-unit id="509be06c97e4c9e0fe35c27aaffe823b388ff900" translate="yes" xml:space="preserve">
          <source>func (r *Reader) ReadAt(b []byte, off int64) (n int, err error)</source>
          <target state="translated">func (r * 리더) ReadAt (b [] byte, off int64) (n int, 오류)</target>
        </trans-unit>
        <trans-unit id="65ee7f915fe9a344c25c6fb3a5dca5cb230af10c" translate="yes" xml:space="preserve">
          <source>func (r *Reader) ReadByte() (byte, error)</source>
          <target state="translated">func (r * 리더) ReadByte () (바이트, 오류)</target>
        </trans-unit>
        <trans-unit id="496ca8740417398e96391672e76b6159b1cf0c19" translate="yes" xml:space="preserve">
          <source>func (r *Reader) ReadCodeLine(expectCode int) (code int, message string, err error)</source>
          <target state="translated">func (r * 리더) ReadCodeLine (expectCode int) (코드 int, 메시지 문자열, 오류)</target>
        </trans-unit>
        <trans-unit id="c373ec4c4ed6254d52ba2da8c4e4494774122130" translate="yes" xml:space="preserve">
          <source>func (r *Reader) ReadContinuedLine() (string, error)</source>
          <target state="translated">func (r * Reader) ReadContinuedLine () (문자열, 오류)</target>
        </trans-unit>
        <trans-unit id="b3246b658f4b9d932979498508260254ac5d67ec" translate="yes" xml:space="preserve">
          <source>func (r *Reader) ReadContinuedLineBytes() ([]byte, error)</source>
          <target state="translated">func (r * 리더) ReadContinuedLineBytes () ([] 바이트, 오류)</target>
        </trans-unit>
        <trans-unit id="afeae12c23ac23f041a7f3c8deee5bede0eca703" translate="yes" xml:space="preserve">
          <source>func (r *Reader) ReadDotBytes() ([]byte, error)</source>
          <target state="translated">func (r * 리더) ReadDotBytes () ([] 바이트, 오류)</target>
        </trans-unit>
        <trans-unit id="223cf97e9b6f687806dbf5c6983bd4c62c9ad949" translate="yes" xml:space="preserve">
          <source>func (r *Reader) ReadDotLines() ([]string, error)</source>
          <target state="translated">func (r * 리더) ReadDotLines () ([] 문자열, 오류)</target>
        </trans-unit>
        <trans-unit id="7d1d2a2bf7340eaadb2a2ca5b31d805c0495dc71" translate="yes" xml:space="preserve">
          <source>func (r *Reader) ReadForm(maxMemory int64) (*Form, error)</source>
          <target state="translated">func (r * 리더) ReadForm (maxMemory int64) (* 폼, 오류)</target>
        </trans-unit>
        <trans-unit id="8d3cc3434841a72e6f9670c5c2859bede19dd1a6" translate="yes" xml:space="preserve">
          <source>func (r *Reader) ReadLine() (string, error)</source>
          <target state="translated">func (r * Reader) ReadLine () (문자열, 오류)</target>
        </trans-unit>
        <trans-unit id="9aaa318b0d896d7715e5359f4f2398155c2ec28a" translate="yes" xml:space="preserve">
          <source>func (r *Reader) ReadLineBytes() ([]byte, error)</source>
          <target state="translated">func (r * 리더) ReadLineBytes () ([] 바이트, 오류)</target>
        </trans-unit>
        <trans-unit id="c6d2774bec2ead90a34aa91bb42b291b9bc01918" translate="yes" xml:space="preserve">
          <source>func (r *Reader) ReadMIMEHeader() (MIMEHeader, error)</source>
          <target state="translated">func (r * 리더) ReadMIMEHeader () (MIMEHeader, 오류)</target>
        </trans-unit>
        <trans-unit id="85ea575c0598b276bdf73575398b39813ea11440" translate="yes" xml:space="preserve">
          <source>func (r *Reader) ReadResponse(expectCode int) (code int, message string, err error)</source>
          <target state="translated">func (r * 리더) ReadResponse (expectCode int) (코드 int, 메시지 문자열, 오류)</target>
        </trans-unit>
        <trans-unit id="f80b99a9927351e1bffaebc2fa14a3598c973e31" translate="yes" xml:space="preserve">
          <source>func (r *Reader) ReadRune() (ch rune, size int, err error)</source>
          <target state="translated">func (r * 리더) ReadRune () (채널 룬, 크기 int, 오류)</target>
        </trans-unit>
        <trans-unit id="d78bec68fb0a88885e0cff3390f2eea89a67eec3" translate="yes" xml:space="preserve">
          <source>func (r *Reader) Reset(b []byte)</source>
          <target state="translated">func (r * 리더) 재설정 (b [] 바이트)</target>
        </trans-unit>
        <trans-unit id="fab5757cd0e2a5b71a267095cc74221e381a897a" translate="yes" xml:space="preserve">
          <source>func (r *Reader) Reset(s string)</source>
          <target state="translated">func (r * 리더) 재설정 문자열</target>
        </trans-unit>
        <trans-unit id="8274e8639564d2abe7a7681d4bce2f683341411b" translate="yes" xml:space="preserve">
          <source>func (r *Reader) Seek(off Offset)</source>
          <target state="translated">func (r * 리더) 찾기 (off Offset)</target>
        </trans-unit>
        <trans-unit id="0d007277402d3bcf2123f807230656fe772886a9" translate="yes" xml:space="preserve">
          <source>func (r *Reader) Seek(offset int64, whence int) (int64, error)</source>
          <target state="translated">func (r * 리더) 찾기 (offset int64, whence int) (int64, error)</target>
        </trans-unit>
        <trans-unit id="52f00c156f65bdbb5c1ae827b8b30ebbbdab79bc" translate="yes" xml:space="preserve">
          <source>func (r *Reader) SeekPC(pc uint64) (*Entry, error)</source>
          <target state="translated">func (r * 리더) SeekPC (pc uint64) (* 입력, 오류)</target>
        </trans-unit>
        <trans-unit id="cee09231eb2e1f8348b40dfad13698887f459d9a" translate="yes" xml:space="preserve">
          <source>func (r *Reader) Size() int64</source>
          <target state="translated">func (r * 리더) 크기 () int64</target>
        </trans-unit>
        <trans-unit id="e66d16d7241d9cf81c9e6f5e73e66b1f2318fa70" translate="yes" xml:space="preserve">
          <source>func (r *Reader) SkipChildren()</source>
          <target state="translated">func (r * 리더) SkipChildren ()</target>
        </trans-unit>
        <trans-unit id="842c4bc099a34c978addbcc11a4897df19c5700c" translate="yes" xml:space="preserve">
          <source>func (r *Reader) UnreadByte() error</source>
          <target state="translated">func (r * 리더) UnreadByte () 오류</target>
        </trans-unit>
        <trans-unit id="867d47c4809cd422548c2d9e18552f67a79ae233" translate="yes" xml:space="preserve">
          <source>func (r *Reader) UnreadRune() error</source>
          <target state="translated">func (r * 리더) UnreadRune () 오류</target>
        </trans-unit>
        <trans-unit id="a0e7a8799c418dfac8ab12d69e7c2a422e244810" translate="yes" xml:space="preserve">
          <source>func (r *Reader) WriteTo(w io.Writer) (n int64, err error)</source>
          <target state="translated">func (r * Reader) WriteTo (w io.Writer) (n int64, 오류)</target>
        </trans-unit>
        <trans-unit id="7795a821531a5291d216297aaaec9dac8d04501b" translate="yes" xml:space="preserve">
          <source>func (r *Region) End()</source>
          <target state="translated">func (r * 지역) 끝 ()</target>
        </trans-unit>
        <trans-unit id="fdfdc2000ddd91c172c48d0c97225effd3030b21" translate="yes" xml:space="preserve">
          <source>func (r *Replacer) Replace(s string) string</source>
          <target state="translated">func (r * Replacer) 바꾸기 문자열</target>
        </trans-unit>
        <trans-unit id="435971d075ada74aeac264c0033fab6e5141ef02" translate="yes" xml:space="preserve">
          <source>func (r *Replacer) WriteString(w io.Writer, s string) (n int, err error)</source>
          <target state="translated">func (r * Replacer) WriteString (w io.Writer, s string) (n int, 오류)</target>
        </trans-unit>
        <trans-unit id="e103fdfd626ff9131619e34361113028408908f1" translate="yes" xml:space="preserve">
          <source>func (r *Request) AddCookie(c *Cookie)</source>
          <target state="translated">func (r * 요청) AddCookie (c * 쿠키)</target>
        </trans-unit>
        <trans-unit id="a01dd3c7b49d36cb8d292794c675cb4909771597" translate="yes" xml:space="preserve">
          <source>func (r *Request) BasicAuth() (username, password string, ok bool)</source>
          <target state="translated">func (r * 요청) BasicAuth () (사용자 이름, 비밀번호 문자열, ok bool)</target>
        </trans-unit>
        <trans-unit id="bc7404dcee4ebf6910d7202922dbf43340702e83" translate="yes" xml:space="preserve">
          <source>func (r *Request) Clone(ctx context.Context) *Request</source>
          <target state="translated">func (r * Request) 클론 (ctx context.Context) * Request</target>
        </trans-unit>
        <trans-unit id="ec83bfad0a9bc7b50ab8c13734943a33fe1faea8" translate="yes" xml:space="preserve">
          <source>func (r *Request) Context() context.Context</source>
          <target state="translated">func (r * Request) Context () 컨텍스트. 컨텍스트</target>
        </trans-unit>
        <trans-unit id="36a59bb69f5802a87f27a1395a0af064ab7bb681" translate="yes" xml:space="preserve">
          <source>func (r *Request) Cookie(name string) (*Cookie, error)</source>
          <target state="translated">func (r * 요청) 쿠키 (이름 문자열) (* 쿠키, 오류)</target>
        </trans-unit>
        <trans-unit id="3e936f9ac87e2d537f74514e9297c251d0902d6d" translate="yes" xml:space="preserve">
          <source>func (r *Request) Cookies() []*Cookie</source>
          <target state="translated">func (r * 요청) 쿠키 () [] * 쿠키</target>
        </trans-unit>
        <trans-unit id="b6c8f55feb6c5c2acc3f2ed27f7bc6eccc00d715" translate="yes" xml:space="preserve">
          <source>func (r *Request) FormFile(key string) (multipart.File, *multipart.FileHeader, error)</source>
          <target state="translated">func (r * 요청) FormFile (키 문자열) (multipart.File, * multipart.FileHeader, 오류)</target>
        </trans-unit>
        <trans-unit id="4206f7619f0f9e3c1dffc306fca380b553b2c4ee" translate="yes" xml:space="preserve">
          <source>func (r *Request) FormValue(key string) string</source>
          <target state="translated">func (r * 요청) FormValue (키 문자열) 문자열</target>
        </trans-unit>
        <trans-unit id="9c51045c5315d41409526b5060d0838da3a9dd58" translate="yes" xml:space="preserve">
          <source>func (r *Request) MultipartReader() (*multipart.Reader, error)</source>
          <target state="translated">func (r * 요청) MultipartReader () (* multipart.Reader, 오류)</target>
        </trans-unit>
        <trans-unit id="a3249e5626217caeed3c7c18d2c4e0c5ab4d4f67" translate="yes" xml:space="preserve">
          <source>func (r *Request) ParseForm() error</source>
          <target state="translated">func (r * Request) ParseForm () 오류</target>
        </trans-unit>
        <trans-unit id="dfdc54f78e282731a27ead3b728784dfe6395cb0" translate="yes" xml:space="preserve">
          <source>func (r *Request) ParseMultipartForm(maxMemory int64) error</source>
          <target state="translated">func (r * Request) ParseMultipartForm (maxMemory int64) 오류</target>
        </trans-unit>
        <trans-unit id="9fae37f6e0152592beb7a8a285befadce8090b61" translate="yes" xml:space="preserve">
          <source>func (r *Request) PostFormValue(key string) string</source>
          <target state="translated">func (r * 요청) PostFormValue (키 문자열) 문자열</target>
        </trans-unit>
        <trans-unit id="ce84dd7d3326490fff5ee5eb654537b76faf0ecd" translate="yes" xml:space="preserve">
          <source>func (r *Request) ProtoAtLeast(major, minor int) bool</source>
          <target state="translated">func (r * 요청) ProtoAtLeast (major, minor int) bool</target>
        </trans-unit>
        <trans-unit id="66e9d8d7f4de9ba16d6413917a0faf9b27837c76" translate="yes" xml:space="preserve">
          <source>func (r *Request) Referer() string</source>
          <target state="translated">func (r * Request) Referer () 문자열</target>
        </trans-unit>
        <trans-unit id="4b0420998de93a3b6cd387a2b7244d278976e4b9" translate="yes" xml:space="preserve">
          <source>func (r *Request) SetBasicAuth(username, password string)</source>
          <target state="translated">func (r * 요청) SetBasicAuth (사용자 이름, 비밀번호 문자열)</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
