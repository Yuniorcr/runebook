<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="git">
    <body>
      <group id="git">
        <trans-unit id="2961bdc2f5db009e3896dfe75c8158f2bcba4236" translate="yes" xml:space="preserve">
          <source>splitting short options to separate words (prefer &lt;code&gt;git foo -a -b&lt;/code&gt; to &lt;code&gt;git foo -ab&lt;/code&gt;, the latter may not even work).</source>
          <target state="translated">짧은 옵션을 분리하여 단어를 분리하십시오 ( &lt;code&gt;git foo -a -b&lt;/code&gt; 를 &lt;code&gt;git foo -ab&lt;/code&gt; 선호 하면 후자가 작동하지 않을 수 있습니다).</target>
        </trans-unit>
        <trans-unit id="2d36111ed830689d5ca18ca266cc63cf5b441c8d" translate="yes" xml:space="preserve">
          <source>ssh(1), &lt;a href=&quot;git-daemon&quot;&gt;git-daemon[1]&lt;/a&gt;, contrib/git-shell-commands/README</source>
          <target state="translated">ssh (1), &lt;a href=&quot;git-daemon&quot;&gt;git-daemon [1]&lt;/a&gt; , contrib / git-shell-commands / README</target>
        </trans-unit>
        <trans-unit id="f4a93268cd88c0af0ed8c49e8c712e88196d1360" translate="yes" xml:space="preserve">
          <source>ssh.variant</source>
          <target state="translated">ssh.variant</target>
        </trans-unit>
        <trans-unit id="849041fe42850c4d76aa610ed897ae107da61317" translate="yes" xml:space="preserve">
          <source>ssh://[user@]host.xz[:port]/path/to/repo.git/</source>
          <target state="translated">ssh://[user@]host.xz[:port]/path/to/repo.git/</target>
        </trans-unit>
        <trans-unit id="03b0dcdf1530ad501e11607bd055207a7b25d1fe" translate="yes" xml:space="preserve">
          <source>ssh://[user@]host.xz[:port]/~[user]/path/to/repo.git/</source>
          <target state="translated">ssh://[user@]host.xz[:port]/~[user]/path/to/repo.git/</target>
        </trans-unit>
        <trans-unit id="26fb397e111092235dc5d74fdb4dba110d4b5bb6" translate="yes" xml:space="preserve">
          <source>sslv2</source>
          <target state="translated">sslv2</target>
        </trans-unit>
        <trans-unit id="6bd0b409e64edacc099c6f44859b4b6fcd763b3e" translate="yes" xml:space="preserve">
          <source>sslv3</source>
          <target state="translated">sslv3</target>
        </trans-unit>
        <trans-unit id="cea096c10e0f5da153c463a240370144518de09f" translate="yes" xml:space="preserve">
          <source>stage 1 and stage 2 are the same and stage 3 is different; take stage 3 (our branch in stage 2 did not do anything since the ancestor in stage 1 while their branch in stage 3 worked on it)</source>
          <target state="translated">1 단계와 2 단계는 동일하고 3 단계는 다릅니다. 3 단계를 취하십시오 (2 단계의 지점은 1 단계의 조상 이후 아무 것도하지 않았습니다. 3 단계의 지점은 작업했습니다)</target>
        </trans-unit>
        <trans-unit id="c2d8c46e7e5c5cbacb11ff6c5adadd2e67aac742" translate="yes" xml:space="preserve">
          <source>stage 1 and stage 3 are the same and stage 2 is different take stage 2 (we did something while they did nothing)</source>
          <target state="translated">1 단계와 3 단계는 동일하고 2 단계는 다릅니다. 2 단계를 취하십시오 (아무 것도하지 않은 동안 무언가를했습니다)</target>
        </trans-unit>
        <trans-unit id="b12f37243e601c3400a258bab0d522f13539778f" translate="yes" xml:space="preserve">
          <source>stage 2 and 3 are the same; take one or the other (it makes no difference - the same work has been done on our branch in stage 2 and their branch in stage 3)</source>
          <target state="translated">2 단계와 3 단계는 동일합니다. 하나 또는 다른 것을 취하십시오 (차이는 없습니다-2 단계의 지점과 3 단계의 지점에서 동일한 작업이 수행되었습니다)</target>
        </trans-unit>
        <trans-unit id="42a9eb700e1430f469960f09b289b107f741ce2b" translate="yes" xml:space="preserve">
          <source>stage1temp SP stage2temp SP stage3tmp TAB path RS</source>
          <target state="translated">stage1temp SP stage2temp SP stage3tmp TAB 경로 RS</target>
        </trans-unit>
        <trans-unit id="2b020927d3c6eb407223a1baa3d6ce3597a3f88d" translate="yes" xml:space="preserve">
          <source>start</source>
          <target state="translated">start</target>
        </trans-unit>
        <trans-unit id="2bd3253c5abf4b1b29ad3b50beb3d929e6fd654f" translate="yes" xml:space="preserve">
          <source>start with a directory separator (e.g. &lt;code&gt;/foo&lt;/code&gt; is invalid),</source>
          <target state="translated">디렉토리 구분자로 시작합니다 (예 : &lt;code&gt;/foo&lt;/code&gt; 가 유효하지 않습니다).</target>
        </trans-unit>
        <trans-unit id="585815f2ee7291f96ea30333fd94d20b5722693f" translate="yes" xml:space="preserve">
          <source>stash</source>
          <target state="translated">stash</target>
        </trans-unit>
        <trans-unit id="e75f8c8fb66168a38b719b5ed7b0c62302cacdfd" translate="yes" xml:space="preserve">
          <source>stash entry</source>
          <target state="translated">숨김 항목</target>
        </trans-unit>
        <trans-unit id="44b1e50aa45a7499f796e63493662c3711bc9729" translate="yes" xml:space="preserve">
          <source>stash.showPatch</source>
          <target state="translated">stash.showPatch</target>
        </trans-unit>
        <trans-unit id="6eb2045b4dbcd59a3603b715ac8af1233ff11bfc" translate="yes" xml:space="preserve">
          <source>stash.showStat</source>
          <target state="translated">stash.showStat</target>
        </trans-unit>
        <trans-unit id="dccab26ce61e8ca2872b5bd2e19534051ccf035f" translate="yes" xml:space="preserve">
          <source>stash.useBuiltin</source>
          <target state="translated">stash.useBuiltin</target>
        </trans-unit>
        <trans-unit id="48a3661d846478fa991a825ebd10b78671444b5b" translate="yes" xml:space="preserve">
          <source>status</source>
          <target state="translated">status</target>
        </trans-unit>
        <trans-unit id="33639ca634e0b2ebb5a0dec58ad486f3107686a9" translate="yes" xml:space="preserve">
          <source>status [--cached] [--recursive] [--] [&amp;lt;path&amp;gt;&amp;hellip;​]</source>
          <target state="translated">상태 [-캐시] [-재귀] [-] [&amp;lt;경로&amp;gt;&amp;hellip;]</target>
        </trans-unit>
        <trans-unit id="58ff287ced0582be414e3f48130ee05fc7516b41" translate="yes" xml:space="preserve">
          <source>status is concatenated status characters for each parent</source>
          <target state="translated">상태는 각 부모에 대한 연결된 상태 문자입니다</target>
        </trans-unit>
        <trans-unit id="c5c5c32e213f726a02a4cef6eeb157b62c4aae81" translate="yes" xml:space="preserve">
          <source>status, followed by optional &quot;score&quot; number.</source>
          <target state="translated">상태 뒤에 선택적 &quot;점수&quot;번호가옵니다.</target>
        </trans-unit>
        <trans-unit id="a80e36f469778380e2c2839ee4c85677cbcf8997" translate="yes" xml:space="preserve">
          <source>status.aheadBehind</source>
          <target state="translated">status.aheadBehind</target>
        </trans-unit>
        <trans-unit id="d02236bd207be922ac7f570bb3c90cf8c18954bd" translate="yes" xml:space="preserve">
          <source>status.branch</source>
          <target state="translated">status.branch</target>
        </trans-unit>
        <trans-unit id="300b4074841d590c1c9efcf0606b0ec332fe2fa3" translate="yes" xml:space="preserve">
          <source>status.displayCommentPrefix</source>
          <target state="translated">status.displayCommentPrefix</target>
        </trans-unit>
        <trans-unit id="84a8412bedbe0ca0ffa440f4de6350b6ed3a8749" translate="yes" xml:space="preserve">
          <source>status.relativePaths</source>
          <target state="translated">status.relativePaths</target>
        </trans-unit>
        <trans-unit id="fce0eba450848f81b7775afef85cd6099e8f2474" translate="yes" xml:space="preserve">
          <source>status.renameLimit</source>
          <target state="translated">status.renameLimit</target>
        </trans-unit>
        <trans-unit id="b52f0f86ba33c2cabf5ac9b051856dc1a063de90" translate="yes" xml:space="preserve">
          <source>status.renames</source>
          <target state="translated">status.renames</target>
        </trans-unit>
        <trans-unit id="332d27eecfdc9dfc42abeb784fc2afac1c139060" translate="yes" xml:space="preserve">
          <source>status.short</source>
          <target state="translated">status.short</target>
        </trans-unit>
        <trans-unit id="e98ff4fd01ad3f8e957e2c0ec81a6e49e08c70c2" translate="yes" xml:space="preserve">
          <source>status.showStash</source>
          <target state="translated">status.showStash</target>
        </trans-unit>
        <trans-unit id="a4f97307fbddeded8fb4ebe638fd0f9a9e05fd20" translate="yes" xml:space="preserve">
          <source>status.showUntrackedFiles</source>
          <target state="translated">status.showUntrackedFiles</target>
        </trans-unit>
        <trans-unit id="f24323d370add7653ee1aa94b39ec25d74eba869" translate="yes" xml:space="preserve">
          <source>status.submoduleSummary</source>
          <target state="translated">status.submoduleSummary</target>
        </trans-unit>
        <trans-unit id="005997cd74e26a95cb004f30768c32b808981fbc" translate="yes" xml:space="preserve">
          <source>statusAheadBehind</source>
          <target state="translated">statusAheadBehind</target>
        </trans-unit>
        <trans-unit id="bf1a04de7fa6038fd1d98c99ece43a571c4f1792" translate="yes" xml:space="preserve">
          <source>statusHints</source>
          <target state="translated">statusHints</target>
        </trans-unit>
        <trans-unit id="f4a7710f16176c896097fde9b8172b983bf59239" translate="yes" xml:space="preserve">
          <source>statusUoption</source>
          <target state="translated">statusUoption</target>
        </trans-unit>
        <trans-unit id="351eb7019c1640acf10c265cc31c377fd68443b5" translate="yes" xml:space="preserve">
          <source>stderr</source>
          <target state="translated">stderr</target>
        </trans-unit>
        <trans-unit id="1b480158e1f30e0b6cee7813e9ecf094bd6b3745" translate="yes" xml:space="preserve">
          <source>stop</source>
          <target state="translated">stop</target>
        </trans-unit>
        <trans-unit id="3a21295d813c26eb287fc6b59454fb37858d63e6" translate="yes" xml:space="preserve">
          <source>store</source>
          <target state="translated">store</target>
        </trans-unit>
        <trans-unit id="1a942eab068a2173e66d08c736283cfe22e1c1ed" translate="yes" xml:space="preserve">
          <source>strip</source>
          <target state="translated">strip</target>
        </trans-unit>
        <trans-unit id="5d85613a56c124e3a3ff8ce6fc95d10cdcb5001e" translate="yes" xml:space="preserve">
          <source>sub</source>
          <target state="translated">sub</target>
        </trans-unit>
        <trans-unit id="335ce16b3fe40346cc3af2a4efce2ef04bc4ea55" translate="yes" xml:space="preserve">
          <source>subject</source>
          <target state="translated">subject</target>
        </trans-unit>
        <trans-unit id="3fa4054f214f0f8063d8fb4453be65d460e3e30c" translate="yes" xml:space="preserve">
          <source>submit</source>
          <target state="translated">submit</target>
        </trans-unit>
        <trans-unit id="8e32a6259737327ddebae65a01b9bdcc36da31e5" translate="yes" xml:space="preserve">
          <source>submodule</source>
          <target state="translated">submodule</target>
        </trans-unit>
        <trans-unit id="95f6d3fdf1a3118bea785ce53f15b96e95386ba5" translate="yes" xml:space="preserve">
          <source>submodule.&amp;lt;name&amp;gt;.active</source>
          <target state="translated">submodule.&amp;lt;name&amp;gt;.active</target>
        </trans-unit>
        <trans-unit id="d1ef081667b6b5fe1f2988c78ae1b30d04c7ebd5" translate="yes" xml:space="preserve">
          <source>submodule.&amp;lt;name&amp;gt;.branch</source>
          <target state="translated">submodule.&amp;lt;name&amp;gt;.branch</target>
        </trans-unit>
        <trans-unit id="3f5f144051e296472f638e2ca895ce65648875be" translate="yes" xml:space="preserve">
          <source>submodule.&amp;lt;name&amp;gt;.fetchRecurseSubmodules</source>
          <target state="translated">submodule.&amp;lt;name&amp;gt;.fetchRecurseSubmodules</target>
        </trans-unit>
        <trans-unit id="754015baa5f4b0b6c6f088cd7fc3bad7642f801e" translate="yes" xml:space="preserve">
          <source>submodule.&amp;lt;name&amp;gt;.ignore</source>
          <target state="translated">submodule.&amp;lt;name&amp;gt;.ignore</target>
        </trans-unit>
        <trans-unit id="0f18fb3dad4c855fb281bac5a4dab7756d20ea76" translate="yes" xml:space="preserve">
          <source>submodule.&amp;lt;name&amp;gt;.path</source>
          <target state="translated">submodule.&amp;lt;name&amp;gt;.path</target>
        </trans-unit>
        <trans-unit id="b2ab74dee1b13c6411d975bffe6b75aacbd7e35e" translate="yes" xml:space="preserve">
          <source>submodule.&amp;lt;name&amp;gt;.shallow</source>
          <target state="translated">submodule.&amp;lt;name&amp;gt;.shallow</target>
        </trans-unit>
        <trans-unit id="ef26031d0b7d11934f595fceccc17bddf24ff092" translate="yes" xml:space="preserve">
          <source>submodule.&amp;lt;name&amp;gt;.update</source>
          <target state="translated">submodule.&amp;lt;name&amp;gt;.update</target>
        </trans-unit>
        <trans-unit id="de2dfeff26481181d72c86edaf4c6a99200f3824" translate="yes" xml:space="preserve">
          <source>submodule.&amp;lt;name&amp;gt;.url</source>
          <target state="translated">submodule.&amp;lt;name&amp;gt;.url</target>
        </trans-unit>
        <trans-unit id="10b7f733ead9994afd0f3ed725481e9c7ef9f254" translate="yes" xml:space="preserve">
          <source>submodule.active</source>
          <target state="translated">submodule.active</target>
        </trans-unit>
        <trans-unit id="555806a338e11cfd676b4348628f4b76ce7c8ddb" translate="yes" xml:space="preserve">
          <source>submodule.alternateErrorStrategy</source>
          <target state="translated">submodule.alternateErrorStrategy</target>
        </trans-unit>
        <trans-unit id="c4a6944009cb784321d67b28b45db7c77d71d78c" translate="yes" xml:space="preserve">
          <source>submodule.alternateLocation</source>
          <target state="translated">submodule.alternateLocation</target>
        </trans-unit>
        <trans-unit id="89eca61dbf64534405cfdbb1772578ae8e4f25f9" translate="yes" xml:space="preserve">
          <source>submodule.fetchJobs</source>
          <target state="translated">submodule.fetchJobs</target>
        </trans-unit>
        <trans-unit id="6b64fc26aee7c1a8c5f7b011abd43e6db2e78f26" translate="yes" xml:space="preserve">
          <source>submodule.recurse</source>
          <target state="translated">submodule.recurse</target>
        </trans-unit>
        <trans-unit id="98da5248e69bd6c6eeff68fa2e6ed3c14ae5c34b" translate="yes" xml:space="preserve">
          <source>submoduleAlternateErrorStrategyDie</source>
          <target state="translated">submoduleAlternateErrorStrategyDie</target>
        </trans-unit>
        <trans-unit id="ab421ff7a9a1031af9801e9e08dcc47593bb4028" translate="yes" xml:space="preserve">
          <source>subtree</source>
          <target state="translated">subtree</target>
        </trans-unit>
        <trans-unit id="07de99f08f23041730d7dd2816bdaaf35a3c2ee4" translate="yes" xml:space="preserve">
          <source>subtree[=&amp;lt;path&amp;gt;]</source>
          <target state="translated">subtree[=&amp;lt;path&amp;gt;]</target>
        </trans-unit>
        <trans-unit id="fdfb2eec51fe7a95f5b887d51d72ab5fd0cbac89" translate="yes" xml:space="preserve">
          <source>summarize changes to be reconciled</source>
          <target state="translated">조정될 변경 사항 요약</target>
        </trans-unit>
        <trans-unit id="05535ecff78ef61038725b6ed3016b8c9a037496" translate="yes" xml:space="preserve">
          <source>summary</source>
          <target state="translated">summary</target>
        </trans-unit>
        <trans-unit id="633d06ee9ea573ff9ac2f64d00e101c3edf73149" translate="yes" xml:space="preserve">
          <source>summary [--cached|--files] [(-n|--summary-limit) &amp;lt;n&amp;gt;] [commit] [--] [&amp;lt;path&amp;gt;&amp;hellip;​]</source>
          <target state="translated">요약 [-캐시 |-파일] [(-n |-요약 제한) &amp;lt;n&amp;gt;] [커밋] [-] [&amp;lt;경로&amp;gt;&amp;hellip;</target>
        </trans-unit>
        <trans-unit id="5bc979dd68e3673e162210abbf5cc22960b82278" translate="yes" xml:space="preserve">
          <source>superproject</source>
          <target state="translated">superproject</target>
        </trans-unit>
        <trans-unit id="2a5e9b1b170e9456317949e40c8ae3572c9ca223" translate="yes" xml:space="preserve">
          <source>supported</source>
          <target state="translated">supported</target>
        </trans-unit>
        <trans-unit id="5bada6ad649e470d86f4ebdbd1d31d5a80390452" translate="yes" xml:space="preserve">
          <source>svn</source>
          <target state="translated">svn</target>
        </trans-unit>
        <trans-unit id="656a9eec8c0a3dc237f62c7c25015e404eeba99b" translate="yes" xml:space="preserve">
          <source>svn-remote.&amp;lt;name&amp;gt;.automkdirs</source>
          <target state="translated">svn-remote.&amp;lt;name&amp;gt;.automkdirs</target>
        </trans-unit>
        <trans-unit id="eebc7ad264ef90a890a1c36bc599cb753ce7631a" translate="yes" xml:space="preserve">
          <source>svn-remote.&amp;lt;name&amp;gt;.noMetadata</source>
          <target state="translated">svn-remote.&amp;lt;name&amp;gt;.noMetadata</target>
        </trans-unit>
        <trans-unit id="fb24592826d60116ca8c971ed8636cceaececf9d" translate="yes" xml:space="preserve">
          <source>svn-remote.&amp;lt;name&amp;gt;.pushurl</source>
          <target state="translated">svn-remote.&amp;lt;name&amp;gt;.pushurl</target>
        </trans-unit>
        <trans-unit id="1d6c3e0c9438fb0df78cc106010945d6cbfce22b" translate="yes" xml:space="preserve">
          <source>svn-remote.&amp;lt;name&amp;gt;.rewriteRoot</source>
          <target state="translated">svn-remote.&amp;lt;name&amp;gt;.rewriteRoot</target>
        </trans-unit>
        <trans-unit id="086432c95555cdf2daf908f273988fd1b8f9e138" translate="yes" xml:space="preserve">
          <source>svn-remote.&amp;lt;name&amp;gt;.rewriteUUID</source>
          <target state="translated">svn-remote.&amp;lt;name&amp;gt;.rewriteUUID</target>
        </trans-unit>
        <trans-unit id="02e542cc595d773226c506eabc2d9906aa4d2593" translate="yes" xml:space="preserve">
          <source>svn-remote.&amp;lt;name&amp;gt;.useSvmProps</source>
          <target state="translated">svn-remote.&amp;lt;name&amp;gt;.useSvmProps</target>
        </trans-unit>
        <trans-unit id="b58cdd7a65ed4931e77a5afd5c7253afdd4c30d5" translate="yes" xml:space="preserve">
          <source>svn-remote.&amp;lt;name&amp;gt;.useSvnsyncprops</source>
          <target state="translated">svn-remote.&amp;lt;name&amp;gt;.useSvnsyncprops</target>
        </trans-unit>
        <trans-unit id="d860a556f4961b0dd1bcbf597e6c895c1ed870bc" translate="yes" xml:space="preserve">
          <source>svn.brokenSymlinkWorkaround</source>
          <target state="translated">svn.brokenSymlinkWorkaround</target>
        </trans-unit>
        <trans-unit id="f5b5305e02eef8251079b850cfbba50aaeafe650" translate="yes" xml:space="preserve">
          <source>svn.noMetadata</source>
          <target state="translated">svn.noMetadata</target>
        </trans-unit>
        <trans-unit id="08cbde0e1252d8f7ec9350dffcea3afcc61f7d45" translate="yes" xml:space="preserve">
          <source>svn.pathnameencoding</source>
          <target state="translated">svn.pathnameencoding</target>
        </trans-unit>
        <trans-unit id="1631694451cfbf737d7b7712d628bcb3b991f4d7" translate="yes" xml:space="preserve">
          <source>svn.useSvmProps</source>
          <target state="translated">svn.useSvmProps</target>
        </trans-unit>
        <trans-unit id="49996487bd4c7a1b3a51ce1504313eaaae3eea82" translate="yes" xml:space="preserve">
          <source>svn.useSvnsyncProps</source>
          <target state="translated">svn.useSvnsyncProps</target>
        </trans-unit>
        <trans-unit id="01ba7992f85de477e8e630428eb5ed14769f9155" translate="yes" xml:space="preserve">
          <source>switch</source>
          <target state="translated">switch</target>
        </trans-unit>
        <trans-unit id="26d3e4874ea6730febdf1f002a0aed59d7bf301f" translate="yes" xml:space="preserve">
          <source>switch branch</source>
          <target state="translated">스위치 지점</target>
        </trans-unit>
        <trans-unit id="2a3b599f02db7aa1a1f1524295b975789801a54b" translate="yes" xml:space="preserve">
          <source>switch color to blue</source>
          <target state="translated">색상을 파란색으로 전환</target>
        </trans-unit>
        <trans-unit id="b4c4186f15dfebbc174a9edf89066910ebd636cb" translate="yes" xml:space="preserve">
          <source>switch color to green</source>
          <target state="translated">색상을 녹색으로 전환</target>
        </trans-unit>
        <trans-unit id="b3daa802c574a1c07f0615c4145a61605edbb62d" translate="yes" xml:space="preserve">
          <source>switch color to red</source>
          <target state="translated">색상을 빨간색으로 전환</target>
        </trans-unit>
        <trans-unit id="2f906365a4bb54c8b0a9a3734157c70b00f2c409" translate="yes" xml:space="preserve">
          <source>switch line wrapping, like the -w option of &lt;a href=&quot;git-shortlog&quot;&gt;git-shortlog[1]&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;git-shortlog&quot;&gt;git-shortlog [1]&lt;/a&gt; 의 -w 옵션과 같은 줄 바꿈 전환 .</target>
        </trans-unit>
        <trans-unit id="e5b24b14c94c90aa1e5f3ee6e4924664e027ae67" translate="yes" xml:space="preserve">
          <source>switch to the master branch.</source>
          <target state="translated">마스터 브랜치로 전환하십시오.</target>
        </trans-unit>
        <trans-unit id="ccb72552ecdb588205146ca27d8a06d6265b5b56" translate="yes" xml:space="preserve">
          <source>symbolic-ref</source>
          <target state="translated">symbolic-ref</target>
        </trans-unit>
        <trans-unit id="33a6ad3bf47edc8227baba54a3fea71e1612dd82" translate="yes" xml:space="preserve">
          <source>symref</source>
          <target state="translated">symref</target>
        </trans-unit>
        <trans-unit id="51448cf7f9b5d4a52cd56ef2c75273757036647d" translate="yes" xml:space="preserve">
          <source>sync [--recursive] [--] [&amp;lt;path&amp;gt;&amp;hellip;​]</source>
          <target state="translated">동기화 [-재귀] [-] [&amp;lt;경로&amp;gt;&amp;hellip;]</target>
        </trans-unit>
        <trans-unit id="e0543ba22ccc80a5d2365241ee2adb754f80be19" translate="yes" xml:space="preserve">
          <source>syslog</source>
          <target state="translated">syslog</target>
        </trans-unit>
        <trans-unit id="ef7ab1c1393c9fdca6cc25b8ba9ee839e8e1136a" translate="yes" xml:space="preserve">
          <source>tab-separated pathname(s) of the file</source>
          <target state="translated">파일로 탭으로 구분 된 경로 이름</target>
        </trans-unit>
        <trans-unit id="5e9b60f69165f32f8930843ca718e10fdee30c52" translate="yes" xml:space="preserve">
          <source>tag</source>
          <target state="translated">tag</target>
        </trans-unit>
        <trans-unit id="62844ef05bdb1063797d5d07f5e4d4b8dc318c19" translate="yes" xml:space="preserve">
          <source>tag name: refers to the commit pointed to by the given tag (we&amp;rsquo;ve seen branches and tags are special cases of &lt;a href=&quot;#how-git-stores-references&quot;&gt;references&lt;/a&gt;).</source>
          <target state="translated">태그 이름 : 주어진 태그가 가리키는 커밋을 나타냅니다 (우리는 브랜치와 태그가 특별한 &lt;a href=&quot;#how-git-stores-references&quot;&gt;참조&lt;/a&gt; 사례임을 보았습니다 ).</target>
        </trans-unit>
        <trans-unit id="415f0fe19774ea3cce6e9878cbca8d83f4ad8172" translate="yes" xml:space="preserve">
          <source>tag object</source>
          <target state="translated">태그 객체</target>
        </trans-unit>
        <trans-unit id="7efc1b76928fdc12c2afd45b0766f9c7a63bcb56" translate="yes" xml:space="preserve">
          <source>tag.forceSignAnnotated</source>
          <target state="translated">tag.forceSignAnnotated</target>
        </trans-unit>
        <trans-unit id="c366846879576dc6a03f64798a70787c3ffd4545" translate="yes" xml:space="preserve">
          <source>tag.gpgSign</source>
          <target state="translated">tag.gpgSign</target>
        </trans-unit>
        <trans-unit id="b17e81fa52c1a7d5ab6988ac0c65b31b3565a08a" translate="yes" xml:space="preserve">
          <source>tag.sort</source>
          <target state="translated">tag.sort</target>
        </trans-unit>
        <trans-unit id="9b6ef5a1a499923ea7c52002ec03583cd27287ea" translate="yes" xml:space="preserve">
          <source>tags</source>
          <target state="translated">tags</target>
        </trans-unit>
        <trans-unit id="eb3c51de14ab564c3018ece30811cc258a57c2bb" translate="yes" xml:space="preserve">
          <source>take a file out of another commit</source>
          <target state="translated">다른 커밋에서 파일을 꺼내다</target>
        </trans-unit>
        <trans-unit id="4eaa4873dcf1d4d73db36cfe8c4994df2b47ca1b" translate="yes" xml:space="preserve">
          <source>tar.&amp;lt;format&amp;gt;.command</source>
          <target state="translated">tar.&amp;lt;format&amp;gt;.command</target>
        </trans-unit>
        <trans-unit id="1e178c83c6cb136557eee0b6f4c3de9b081198d1" translate="yes" xml:space="preserve">
          <source>tar.&amp;lt;format&amp;gt;.remote</source>
          <target state="translated">tar.&amp;lt;format&amp;gt;.remote</target>
        </trans-unit>
        <trans-unit id="b4806e88a5d0fc9f639a83fcdfe33f27a560610e" translate="yes" xml:space="preserve">
          <source>tar.umask</source>
          <target state="translated">tar.umask</target>
        </trans-unit>
        <trans-unit id="76e5d28cb2c4eec47bbea8f2ddb339131eb4f0e3" translate="yes" xml:space="preserve">
          <source>tempname TAB path RS</source>
          <target state="translated">임시 탭 경로 RS</target>
        </trans-unit>
        <trans-unit id="372ea08cab33e71c02c651dbc83a474d32c676ea" translate="yes" xml:space="preserve">
          <source>text</source>
          <target state="translated">text</target>
        </trans-unit>
        <trans-unit id="de0c20467dc012f1af336cb6c9ea6de9b34f5c23" translate="yes" xml:space="preserve">
          <source>that doesn&amp;rsquo;t come with any options&amp;mdash;​it will just write out the current index into the set of tree objects that describe that state, and it will return the name of the resulting top-level tree. You can use that tree to re-generate the index at any time by going in the other direction:</source>
          <target state="translated">어떤 옵션도 제공되지 않습니다. 현재 상태를 설명하는 트리 객체 세트에 현재 색인을 작성하고 결과 최상위 트리의 이름을 반환합니다. 다른 방향으로 이동하여 언제든지 해당 트리를 사용하여 색인을 다시 생성 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="41c1dd8833782c6260221149732c9f951fc0b315" translate="yes" xml:space="preserve">
          <source>that is to say, the branch is not reset/created unless &quot;git checkout&quot; is successful.</source>
          <target state="translated">즉, &quot;git checkout&quot;이 성공하지 않으면 분기가 재설정 / 생성되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="ba368eeb59bcacc9d2f7fa3a539ee9ec188bfa78" translate="yes" xml:space="preserve">
          <source>the &lt;code&gt;init.templateDir&lt;/code&gt; configuration variable; or</source>
          <target state="translated">&lt;code&gt;init.templateDir&lt;/code&gt; 의 구성 변수; 또는</target>
        </trans-unit>
        <trans-unit id="99d9f01273019cab7c278eace577b2585b962e89" translate="yes" xml:space="preserve">
          <source>the above are equivalent to:</source>
          <target state="translated">위의 내용은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="265c930b12c6cf30b5b56f15f681e77f750fda61" translate="yes" xml:space="preserve">
          <source>the argument given with the &lt;code&gt;--template&lt;/code&gt; option;</source>
          <target state="translated">&lt;code&gt;--template&lt;/code&gt; 옵션으로 주어진 인수 ;</target>
        </trans-unit>
        <trans-unit id="c4b6150b6f7e5eb72250f4fb66992fdc44747240" translate="yes" xml:space="preserve">
          <source>the attributes given to path &lt;code&gt;t/abc&lt;/code&gt; are computed as follows:</source>
          <target state="translated">경로 &lt;code&gt;t/abc&lt;/code&gt; 에 지정된 속성 은 다음과 같이 계산됩니다.</target>
        </trans-unit>
        <trans-unit id="3d6ad04613d9ccc9b2b3a8104cec5071fc646e0e" translate="yes" xml:space="preserve">
          <source>the author name (&quot;author&quot;), email (&quot;author-mail&quot;), time (&quot;author-time&quot;), and time zone (&quot;author-tz&quot;); similarly for committer.</source>
          <target state="translated">작성자 이름 ( &quot;저자&quot;), 이메일 ( &quot;저자 메일&quot;), 시간 ( &quot;저자 시간&quot;) 및 시간대 ( &quot;저자 -tz&quot;); 커미터와 비슷합니다.</target>
        </trans-unit>
        <trans-unit id="b16e53ef70d88ebbfdf364cf1d44e01a23d03ac7" translate="yes" xml:space="preserve">
          <source>the behaviour is similar to that of &quot;/bin/ls&quot; in that the &lt;code&gt;&amp;lt;path&amp;gt;&lt;/code&gt; is taken as relative to the current working directory. E.g. when you are in a directory &lt;code&gt;sub&lt;/code&gt; that has a directory &lt;code&gt;dir&lt;/code&gt;, you can run &lt;code&gt;git ls-tree -r HEAD dir&lt;/code&gt; to list the contents of the tree (that is &lt;code&gt;sub/dir&lt;/code&gt; in &lt;code&gt;HEAD&lt;/code&gt;). You don&amp;rsquo;t want to give a tree that is not at the root level (e.g. &lt;code&gt;git ls-tree -r HEAD:sub dir&lt;/code&gt;) in this case, as that would result in asking for &lt;code&gt;sub/sub/dir&lt;/code&gt; in the &lt;code&gt;HEAD&lt;/code&gt; commit. However, the current working directory can be ignored by passing --full-tree option.</source>
          <target state="translated">이 동작은 &lt;code&gt;&amp;lt;path&amp;gt;&lt;/code&gt; 가 현재 작업 디렉토리에 상대적인 것으로 간주 된다는 점에서 &quot;/ bin / ls&quot;의 동작과 유사합니다 . 당신이 디렉토리에있을 때 예는 &lt;code&gt;sub&lt;/code&gt; 디렉토리가 &lt;code&gt;dir&lt;/code&gt; , 당신은 실행할 수 있습니다 &lt;code&gt;git ls-tree -r HEAD dir&lt;/code&gt; 입니다 (트리의 내용을 나열하는 &lt;code&gt;sub/dir&lt;/code&gt; 에 &lt;code&gt;HEAD&lt;/code&gt; ). 이 경우 루트 레벨에 있지 않은 트리 (예 : &lt;code&gt;git ls-tree -r HEAD:sub dir&lt;/code&gt; ) 를 제공하지 않으려면 &lt;code&gt;HEAD&lt;/code&gt; 커밋 에서 &lt;code&gt;sub/sub/dir&lt;/code&gt; 을 요청 해야합니다. 그러나 --full-tree 옵션을 전달하면 현재 작업 디렉토리를 무시할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7e606cadacc17f76ba9f95e5a1d7751a50eb9c56" translate="yes" xml:space="preserve">
          <source>the behaviour is slightly different from that of &quot;/bin/ls&quot; in that the &lt;code&gt;&amp;lt;path&amp;gt;&lt;/code&gt; denotes just a list of patterns to match, e.g. so specifying directory name (without &lt;code&gt;-r&lt;/code&gt;) will behave differently, and order of the arguments does not matter.</source>
          <target state="translated">&lt;code&gt;&amp;lt;path&amp;gt;&lt;/code&gt; 가 일치시킬 패턴 목록을 표시 한다는 점에서 동작은 &quot;/ bin / ls&quot;와 약간 다릅니다 . 예를 들어 &lt;code&gt;-r&lt;/code&gt; 없이 디렉토리 이름을 지정 하면 다르게 동작하며 인수의 순서는 그렇지 않습니다. 문제.</target>
        </trans-unit>
        <trans-unit id="5e9dcd437f5fd235bda791862abb358a08583acd" translate="yes" xml:space="preserve">
          <source>the commit recorded in the superproject will be checked out in the submodule on a detached HEAD.</source>
          <target state="translated">수퍼 프로젝트에 기록 된 커밋은 분리 된 HEAD의 서브 모듈에서 체크 아웃됩니다.</target>
        </trans-unit>
        <trans-unit id="dc43d8b97395f6d59518463c79e8eb6241db59f9" translate="yes" xml:space="preserve">
          <source>the commit recorded in the superproject will be merged into the current branch in the submodule.</source>
          <target state="translated">수퍼 프로젝트에 기록 된 커밋은 하위 모듈의 현재 분기에 병합됩니다.</target>
        </trans-unit>
        <trans-unit id="2a79cc6cd81744b14639329fc18ecc672c5d6cb5" translate="yes" xml:space="preserve">
          <source>the config file cannot be written (ret=4),</source>
          <target state="translated">구성 파일을 쓸 수 없습니다 (ret = 4).</target>
        </trans-unit>
        <trans-unit id="1093790dc16ca4b5e32e9d483b49ee981aafdf86" translate="yes" xml:space="preserve">
          <source>the config file is invalid (ret=3),</source>
          <target state="translated">구성 파일이 유효하지 않습니다 (ret = 3).</target>
        </trans-unit>
        <trans-unit id="9c77cccbf44a238a16d95f1ef65ca90249d59feb" translate="yes" xml:space="preserve">
          <source>the contents of the &lt;code&gt;$GIT_TEMPLATE_DIR&lt;/code&gt; environment variable;</source>
          <target state="translated">&lt;code&gt;$GIT_TEMPLATE_DIR&lt;/code&gt; 환경 변수 의 내용 ;</target>
        </trans-unit>
        <trans-unit id="cb920b0b6ce59e316800671b0d42f207cf807d74" translate="yes" xml:space="preserve">
          <source>the current branch of the submodule will be rebased onto the commit recorded in the superproject.</source>
          <target state="translated">서브 모듈의 현재 브랜치는 수퍼 프로젝트에 기록 된 커밋을 기반으로합니다.</target>
        </trans-unit>
        <trans-unit id="3b7466effe4f7dcce38b929167563c2c2c4f205e" translate="yes" xml:space="preserve">
          <source>the default template directory: &lt;code&gt;/usr/share/git-core/templates&lt;/code&gt;.</source>
          <target state="translated">기본 템플릿 디렉토리 &lt;code&gt;/usr/share/git-core/templates&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cb197d79d42a8ce213f3f7c657c7ac39774a9fba" translate="yes" xml:space="preserve">
          <source>the default to only doing a partial history rewrite (&lt;code&gt;--all&lt;/code&gt; is not the default and few examples show it)</source>
          <target state="translated">부분 히스토리 재 작성 만 수행하는 기본값 ( &lt;code&gt;--all&lt;/code&gt; 은 기본값이 아니며 몇 가지 예만 표시)</target>
        </trans-unit>
        <trans-unit id="7f4b0c9c609ee7e6ebdfd673b2d8a0d64e4ae1fe" translate="yes" xml:space="preserve">
          <source>the different stages of that file will be &quot;collapsed&quot;, after which &lt;code&gt;git diff&lt;/code&gt; will (by default) no longer show diffs for that file.</source>
          <target state="translated">해당 파일의 다른 단계는 &quot;축소&quot;되며, 그 후에 &lt;code&gt;git diff&lt;/code&gt; 는 기본적으로 더 이상 해당 파일의 diff를 표시하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="0d275f79108c7ea6019d17c4929c9295d1c9d40d" translate="yes" xml:space="preserve">
          <source>the fact that --tag-name-filter (when used to rename tags) doesn&amp;rsquo;t remove the old tags but just adds new ones with the new name</source>
          <target state="translated">--tag-name-filter (태그 이름을 바꾸는 데 사용되는 경우)는 기존 태그를 제거하지 않고 새로운 이름으로 새 태그를 추가합니다.</target>
        </trans-unit>
        <trans-unit id="250c20c7d57975a6a2521327c8a2fe5042d3a4e9" translate="yes" xml:space="preserve">
          <source>the fact that little educational information is provided to inform users of the ramifications of a rewrite and how to avoid mixing old and new history. For example, this man page discusses how users need to understand that they need to rebase their changes for all their branches on top of new history (or delete and reclone), but that&amp;rsquo;s only one of multiple concerns to consider. See the &quot;DISCUSSION&quot; section of the git filter-repo manual page for more details.</source>
          <target state="translated">재교육의 결과와 과거와 새로운 역사의 혼합을 피하는 방법을 사용자에게 알리기 위해 교육 정보가 거의 제공되지 않습니다. 예를 들어,이 매뉴얼 페이지에서는 사용자가 모든 기록에 대한 변경 사항을 새로운 기록 위에 기반을 두어야한다는 점 (또는 삭제 및 복제)을 이해해야하는 방법에 대해 설명하지만 여러 가지 고려 사항 중 하나 일뿐입니다. 자세한 내용은 git filter-repo 매뉴얼 페이지의 &quot;DISCUSSION&quot;섹션을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="ad5c437b7c3f1b484c2add63462dec5ae4986887" translate="yes" xml:space="preserve">
          <source>the fact that there&amp;rsquo;s no automatic post-run cleanup</source>
          <target state="translated">실행 후 자동 정리가 없다는 사실</target>
        </trans-unit>
        <trans-unit id="bba6a5438a7c242e77dcd15328ad132f34e4d852" translate="yes" xml:space="preserve">
          <source>the fetched commits will still be available from FETCH_HEAD.</source>
          <target state="translated">가져온 커밋은 FETCH_HEAD에서 계속 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="32970a3e5c92db23807820ffb401b69db949624b" translate="yes" xml:space="preserve">
          <source>the filename in the commit that the line is attributed to.</source>
          <target state="translated">행의 원인이되는 커밋의 파일명</target>
        </trans-unit>
        <trans-unit id="f47879ca57f0e3dd3d76d3d9ac8ed55cb9ddb22d" translate="yes" xml:space="preserve">
          <source>the first column is the offset in bytes of the object within the corresponding packfile</source>
          <target state="translated">첫 번째 열은 해당 팩 파일 내 객체의 오프셋 (바이트)입니다.</target>
        </trans-unit>
        <trans-unit id="b3c039bc90bf411d7274fb9dabb31627c16fc9e7" translate="yes" xml:space="preserve">
          <source>the first line of the commit log message (&quot;summary&quot;).</source>
          <target state="translated">커밋 로그 메시지의 첫 번째 줄 ( &quot;요약&quot;)</target>
        </trans-unit>
        <trans-unit id="9c8cbde16941a78c05dbbdcadd43cec702180343" translate="yes" xml:space="preserve">
          <source>the index file saves and restores with all this information, so you can merge things incrementally, but as long as it has entries in stages 1/2/3 (i.e., &quot;unmerged entries&quot;) you can&amp;rsquo;t write the result. So now the merge algorithm ends up being really simple:</source>
          <target state="translated">인덱스 파일은이 모든 정보와 함께 저장 및 복원되므로 점진적으로 항목을 병합 할 수 있지만 1/2/3 단계의 항목 (예 : &quot;합병되지 않은 항목&quot;)이 있으면 결과를 쓸 수 없습니다. 이제 병합 알고리즘은 정말 간단합니다.</target>
        </trans-unit>
        <trans-unit id="724e63303b69a862a9497c3d02fcea278de8315b" translate="yes" xml:space="preserve">
          <source>the line number of the line in the final file;</source>
          <target state="translated">최종 파일 내의 행의 번호.</target>
        </trans-unit>
        <trans-unit id="3ec8f266387fdd5aca2fb962e8e4b11d5b439857" translate="yes" xml:space="preserve">
          <source>the line number of the line in the original file;</source>
          <target state="translated">원본 파일의 줄 번호;</target>
        </trans-unit>
        <trans-unit id="b0c2a4eeb862ed722adf1d0e8b3f147f036f9ddc" translate="yes" xml:space="preserve">
          <source>the merge base between &lt;code&gt;A&lt;/code&gt; and &lt;code&gt;B&lt;/code&gt; is &lt;code&gt;1&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;A&lt;/code&gt; 와 &lt;code&gt;B&lt;/code&gt; 사이의 병합 기준 은 &lt;code&gt;1&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="9173a141fbf6e22f3bee92085d254c56e80ee411" translate="yes" xml:space="preserve">
          <source>the name of the ref being updated,</source>
          <target state="translated">업데이트되는 심판의 이름</target>
        </trans-unit>
        <trans-unit id="3014c8a9cd2a108237e832d80be1b9813ded5367" translate="yes" xml:space="preserve">
          <source>the number of added lines;</source>
          <target state="translated">추가 된 라인 수;</target>
        </trans-unit>
        <trans-unit id="77bc4e1c290d6d0e7d5275f3d1658970d12ef416" translate="yes" xml:space="preserve">
          <source>the number of deleted lines;</source>
          <target state="translated">삭제 된 라인 수;</target>
        </trans-unit>
        <trans-unit id="53884a91a3f8038461cb12756f556960cbfc258f" translate="yes" xml:space="preserve">
          <source>the old object name stored in the ref,</source>
          <target state="translated">심판에 저장된 오래된 객체 이름</target>
        </trans-unit>
        <trans-unit id="f3e2ec89c99ae8aa7d45095d50e139c625a9eaec" translate="yes" xml:space="preserve">
          <source>the original contents of fileY and the resulting contents of file0 are compared, and if they are similar enough, they are changed to:</source>
          <target state="translated">fileY의 원래 내용과 file0의 결과 내용이 비교되고 충분히 유사하면 다음과 같이 변경됩니다.</target>
        </trans-unit>
        <trans-unit id="626b13a708f2dc035c90e904f1c76c410d7dc1a1" translate="yes" xml:space="preserve">
          <source>the pathspec up to the last slash represents a directory prefix. The scope of that pathspec is limited to that subtree.</source>
          <target state="translated">마지막 슬래시까지의 경로 스펙은 디렉토리 접 두부를 나타냅니다. 해당 경로 스펙의 범위는 해당 서브 트리로 제한됩니다.</target>
        </trans-unit>
        <trans-unit id="e07c0143c019f1d2ef0a1c85d60da5fef5f83106" translate="yes" xml:space="preserve">
          <source>the rest of the pathspec is a pattern for the remainder of the pathname. Paths relative to the directory prefix will be matched against that pattern using fnmatch(3); in particular, '*' and '?' &lt;code&gt;can&lt;/code&gt; match directory separators.</source>
          <target state="translated">나머지 pathspec은 나머지 경로 이름에 대한 패턴입니다. 디렉토리 접두사에 상대적인 경로는 fnmatch (3)을 사용하여 해당 패턴과 일치합니다. 특히 '*'와 '?' 디렉토리 구분 기호와 일치 &lt;code&gt;can&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6e90e21b38406ccab884bc98d434ab66157bf47b" translate="yes" xml:space="preserve">
          <source>the rest of the pathspec is a pattern for the remainder of the pathname. Paths relative to the directory prefix will be matched against that pattern using fnmatch(3); in particular, &lt;code&gt;*&lt;/code&gt; and &lt;code&gt;?&lt;/code&gt;&lt;code&gt;can&lt;/code&gt; match directory separators.</source>
          <target state="translated">나머지 pathspec은 나머지 경로 이름에 대한 패턴입니다. 디렉토리 접두사에 상대적인 경로는 fnmatch (3)을 사용하여 해당 패턴과 일치합니다. 특히 &lt;code&gt;*&lt;/code&gt; 와 &lt;code&gt;?&lt;/code&gt; 디렉토리 구분 기호와 일치 &lt;code&gt;can&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3a343b61373e9c5c8da009f85440398e1fb87edf" translate="yes" xml:space="preserve">
          <source>the result of &lt;code&gt;git merge-base A B C&lt;/code&gt; is &lt;code&gt;1&lt;/code&gt;. This is because the equivalent topology with a merge commit &lt;code&gt;M&lt;/code&gt; between &lt;code&gt;B&lt;/code&gt; and &lt;code&gt;C&lt;/code&gt; is:</source>
          <target state="translated">&lt;code&gt;git merge-base A B C&lt;/code&gt; 의 결과 는 &lt;code&gt;1&lt;/code&gt; 입니다. &lt;code&gt;B&lt;/code&gt; 와 &lt;code&gt;C&lt;/code&gt; 사이에 병합 커밋 &lt;code&gt;M&lt;/code&gt; 이있는 동등한 토폴로지 는 다음 과 같습니다.</target>
        </trans-unit>
        <trans-unit id="536d2083a48bc27b81cbb1968f7432966cdcf93d" translate="yes" xml:space="preserve">
          <source>the second column is the object id of the object</source>
          <target state="translated">두 번째 열은 객체의 객체 ID입니다.</target>
        </trans-unit>
        <trans-unit id="76796bccdae9791462d4062e6dd98b4154222fa5" translate="yes" xml:space="preserve">
          <source>the submodule is not updated.</source>
          <target state="translated">서브 모듈은 업데이트되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="7190c4fb51dcc85d53868d53b20b3cc2e763e211" translate="yes" xml:space="preserve">
          <source>the time zone is omitted when the local time zone is used</source>
          <target state="translated">현지 시간대를 사용하면 시간대가 생략됩니다.</target>
        </trans-unit>
        <trans-unit id="d8be7211a76bdc70aa49471cc4d6a76e9bc4d158" translate="yes" xml:space="preserve">
          <source>the variable &lt;code&gt;sha1&lt;/code&gt; in the function signature of &lt;code&gt;get_sha1()&lt;/code&gt; is &lt;code&gt;unsigned
char *&lt;/code&gt;, but is actually expected to be a pointer to &lt;code&gt;unsigned
char[20]&lt;/code&gt;. This variable will contain the 160-bit SHA-1 of the given commit. Note that whenever a SHA-1 is passed as &lt;code&gt;unsigned char *&lt;/code&gt;, it is the binary representation, as opposed to the ASCII representation in hex characters, which is passed as &lt;code&gt;char *&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;get_sha1()&lt;/code&gt; 함수 시그니처의 &lt;code&gt;sha1&lt;/code&gt; 변수 는 &lt;code&gt;unsigned char *&lt;/code&gt; 이지만 실제로는 &lt;code&gt;unsigned char[20]&lt;/code&gt; 대한 포인터 여야합니다 . 이 변수는 주어진 커밋의 160 비트 SHA-1을 포함합니다. SHA-1로 전달 될 때마다 점에 유의 &lt;code&gt;unsigned char *&lt;/code&gt; 로 전달 진수 문자의 ASCII 표현, 반대로, 그것은, 이진 표현입니다 &lt;code&gt;char *&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d16d74303205ee1884bba2395511c1f66af12d14" translate="yes" xml:space="preserve">
          <source>theirs</source>
          <target state="translated">theirs</target>
        </trans-unit>
        <trans-unit id="6f8f8e9f767353d846d34ea5a451c83849c1b01b" translate="yes" xml:space="preserve">
          <source>then</source>
          <target state="translated">then</target>
        </trans-unit>
        <trans-unit id="734a4ee4f79e318001491629a0c1fe63b58d1fb7" translate="yes" xml:space="preserve">
          <source>then a line like</source>
          <target state="translated">그런 다음 라인</target>
        </trans-unit>
        <trans-unit id="7a15262c8c405ca4a2cf0815d105cbb03e982027" translate="yes" xml:space="preserve">
          <source>then test, run &lt;code&gt;bisect good&lt;/code&gt; or &lt;code&gt;bisect bad&lt;/code&gt; as appropriate, and continue.</source>
          <target state="translated">다음 테스트, 실행 &lt;code&gt;bisect good&lt;/code&gt; 또는 &lt;code&gt;bisect bad&lt;/code&gt; 적절를 계속.</target>
        </trans-unit>
        <trans-unit id="19d77647dd7a79a9f0f2213737749b47dce1ce9a" translate="yes" xml:space="preserve">
          <source>then the command</source>
          <target state="translated">그런 다음 명령</target>
        </trans-unit>
        <trans-unit id="609a326b5fa7159965db8a63d787acf0c96be745" translate="yes" xml:space="preserve">
          <source>then we will match: both protocols are the same, both hosts are the same, and the &quot;pattern&quot; URL does not care about the path component at all. However, this context would not match:</source>
          <target state="translated">두 프로토콜이 동일하고 두 호스트가 동일하며 &quot;패턴&quot;URL은 경로 구성 요소를 전혀 신경 쓰지 않습니다. 그러나이 컨텍스트는 다음과 일치하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="41ea1b725a0053e024ec32bad2b8e37679710985" translate="yes" xml:space="preserve">
          <source>then you can ask that to be pulled with</source>
          <target state="translated">다음으로 끌어 당길 것을 요청할 수 있습니다</target>
        </trans-unit>
        <trans-unit id="cf6fe440662f9d76d8c16519b5ae328feaf69aa0" translate="yes" xml:space="preserve">
          <source>there are more &quot;src&quot; modes and &quot;src&quot; sha1</source>
          <target state="translated">더 많은 &quot;src&quot;모드와 &quot;src&quot;sha1이 있습니다</target>
        </trans-unit>
        <trans-unit id="c8c4e068f2a8d378781c42af9bb115ec041d2801" translate="yes" xml:space="preserve">
          <source>there is a colon for each parent</source>
          <target state="translated">각 부모마다 콜론이 있습니다</target>
        </trans-unit>
        <trans-unit id="ecdf2bf737dee73f8ec5a14f4e0f34d3fb6f57d0" translate="yes" xml:space="preserve">
          <source>there is no comma after the day-of-week</source>
          <target state="translated">요일 이후에는 쉼표가 없습니다</target>
        </trans-unit>
        <trans-unit id="c3e63115352a13704c1f39e13a6185e9021397ab" translate="yes" xml:space="preserve">
          <source>this does lstat(2) and finds index does &lt;strong&gt;not&lt;/strong&gt; match the path.</source>
          <target state="translated">이것은 lstat (2)를 수행하고 인덱스가 경로와 일치 하지 &lt;strong&gt;않는&lt;/strong&gt; 것을 찾습니다 .</target>
        </trans-unit>
        <trans-unit id="85e112b4f47e94f3e4ce4971cc640d98f38603c7" translate="yes" xml:space="preserve">
          <source>this does lstat(2) and finds index matches the path.</source>
          <target state="translated">이것은 lstat (2)를 수행하고 경로와 일치하는 인덱스를 찾습니다.</target>
        </trans-unit>
        <trans-unit id="0b1f7a9c404ebaed8ccaa23a98b6fc8cacefc055" translate="yes" xml:space="preserve">
          <source>this second commit would record the changes to &lt;code&gt;hello.c&lt;/code&gt; and &lt;code&gt;hello.h&lt;/code&gt; as expected.</source>
          <target state="translated">이 두 번째 커밋은 &lt;code&gt;hello.c&lt;/code&gt; 및 &lt;code&gt;hello.h&lt;/code&gt; 에 대한 변경 사항을 예상대로 기록합니다 .</target>
        </trans-unit>
        <trans-unit id="00af3fa2d887030d7ab22a8491799bab116ecfc5" translate="yes" xml:space="preserve">
          <source>this will give:</source>
          <target state="translated">이것은 줄 것이다 :</target>
        </trans-unit>
        <trans-unit id="e80f44d7ec76db207d80130779f298ba9698161b" translate="yes" xml:space="preserve">
          <source>though the above might be done by using &lt;code&gt;$export_ok&lt;/code&gt; instead</source>
          <target state="translated">위의 대신 &lt;code&gt;$export_ok&lt;/code&gt; 를 사용하여 수행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6a3ae3aa99f1509f3d5e931a3f2d414e2ab7a554" translate="yes" xml:space="preserve">
          <source>three-dashes and end-of-line, or</source>
          <target state="translated">3 대시 및 라인 끝 또는</target>
        </trans-unit>
        <trans-unit id="95aa06a5114ab186c9377e699cd99c22f48b67ba" translate="yes" xml:space="preserve">
          <source>timed</source>
          <target state="translated">timed</target>
        </trans-unit>
        <trans-unit id="b8ff61c0605108ed3e384a2fc4062eb3c5594238" translate="yes" xml:space="preserve">
          <source>tkdiff</source>
          <target state="translated">tkdiff</target>
        </trans-unit>
        <trans-unit id="d7cdcda18909ba408e3812e443f3d90bcb139496" translate="yes" xml:space="preserve">
          <source>tlsv1</source>
          <target state="translated">tlsv1</target>
        </trans-unit>
        <trans-unit id="03e36f421be7fa8730438d884b9daca792c9680d" translate="yes" xml:space="preserve">
          <source>tlsv1.0</source>
          <target state="translated">tlsv1.0</target>
        </trans-unit>
        <trans-unit id="ba63b9d8b25e41d498a69dbabb69a7736c21eb02" translate="yes" xml:space="preserve">
          <source>tlsv1.1</source>
          <target state="translated">tlsv1.1</target>
        </trans-unit>
        <trans-unit id="fbb19e142c116223f653d14b48fb28f8465ad321" translate="yes" xml:space="preserve">
          <source>tlsv1.2</source>
          <target state="translated">tlsv1.2</target>
        </trans-unit>
        <trans-unit id="62926f1208c3272ad5a3c0ec13eeec840620a666" translate="yes" xml:space="preserve">
          <source>tlsv1.3</source>
          <target state="translated">tlsv1.3</target>
        </trans-unit>
        <trans-unit id="4374aaee247fb237ce6c97d5c8d64bbe474d16de" translate="yes" xml:space="preserve">
          <source>to</source>
          <target state="translated">to</target>
        </trans-unit>
        <trans-unit id="fc36b2c7bdd5cc38527b964582d3ab8b4e84ba45" translate="yes" xml:space="preserve">
          <source>to &quot;push&quot; those commits to the shared repository. If someone else has updated the repository more recently, &lt;code&gt;git push&lt;/code&gt;, like &lt;code&gt;cvs commit&lt;/code&gt;, will complain, in which case you must pull any changes before attempting the push again.</source>
          <target state="translated">커밋을 공유 리포지토리에 &quot;밀어 넣기&quot; 다른 사람이 최근에 저장소를 업데이트 한 경우 &lt;code&gt;cvs commit&lt;/code&gt; 과 같은 &lt;code&gt;git push&lt;/code&gt; 가 불만을 표시하며,이 경우 푸시를 다시 시도하기 전에 변경 사항을 가져와야합니다.</target>
        </trans-unit>
        <trans-unit id="1096f1fb1c84b3b5a2b8624f78ee1b5d78119cb7" translate="yes" xml:space="preserve">
          <source>to be killed</source>
          <target state="translated">살해 당하다</target>
        </trans-unit>
        <trans-unit id="c913fc9e78ba991dcb43b4a3c301e10badeb4b53" translate="yes" xml:space="preserve">
          <source>to check whether a particular branch exists or not (notice how we don&amp;rsquo;t actually want to show any results, and we want to use the full refname for it in order to not trigger the problem with ambiguous partial matches).</source>
          <target state="translated">특정 분기가 존재하는지 여부를 확인합니다 (실제로 결과를 표시하지 않으려는 방법에 주목하고 모호한 부분 일치로 문제를 유발하지 않기 위해 전체 참조 이름을 사용하려고 함).</target>
        </trans-unit>
        <trans-unit id="5c597c2cc13ad829d34ba8ed2dfb98022a5b4ac2" translate="yes" xml:space="preserve">
          <source>to diff your current state against that tag which at this point will obviously be an empty diff, but if you continue to develop and commit stuff, you can use your tag as an &quot;anchor-point&quot; to see what has changed since you tagged it.</source>
          <target state="translated">이 시점에서 분명히 빈 diff가 될 해당 태그와 현재 상태를 비교하기 위해 계속 개발하고 커밋하는 경우 태그를 &quot;앵커 포인트&quot;로 사용하여 태그를 지정한 이후 변경된 내용을 확인할 수 있습니다. .</target>
        </trans-unit>
        <trans-unit id="baae04ab138a91016c84734819fa1ebe4f701ba4" translate="yes" xml:space="preserve">
          <source>to get a listing of all tags together with what they dereference.</source>
          <target state="translated">모든 태그의 목록과 참조 해제 된 항목을 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="1998b20466317f25b18046ad044345e7dddaad46" translate="yes" xml:space="preserve">
          <source>to indicate that a commit was before the sought change, or</source>
          <target state="translated">커밋이 변경 이전에 이루어 졌음을 나타 내기 위해</target>
        </trans-unit>
        <trans-unit id="4ecc02d347c76c71af0fb11accb42e049b7e7869" translate="yes" xml:space="preserve">
          <source>to indicate that it was after.</source>
          <target state="translated">그 이후임을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="bdc2fa66437bfeff7576b23af7ece48fa27e6754" translate="yes" xml:space="preserve">
          <source>to populate the index. However, now you have populated the index, and you have all the Git internal files, but you will notice that you don&amp;rsquo;t actually have any of the working tree files to work on. To get those, you&amp;rsquo;d check them out with</source>
          <target state="translated">색인을 채 웁니다. 그러나 이제 색인을 채웠으며 모든 Git 내부 파일이 있지만 실제로 작업 트리 파일이 없다는 것을 알 수 있습니다. 그것들을 얻으려면</target>
        </trans-unit>
        <trans-unit id="87f7d8e6f3c121d9335165e5a0c457085bd7405f" translate="yes" xml:space="preserve">
          <source>to remove any of the &quot;loose&quot; objects that are now contained in the pack. This will also remove any unreferenced objects (which may be created when, for example, you use &lt;code&gt;git reset&lt;/code&gt; to remove a commit). You can verify that the loose objects are gone by looking at the &lt;code&gt;.git/objects&lt;/code&gt; directory or by running</source>
          <target state="translated">팩에 포함 된 &quot;느슨한&quot;개체를 제거합니다. 또한 참조되지 않은 객체를 제거합니다 (예 : 커밋을 제거하기 위해 &lt;code&gt;git reset&lt;/code&gt; 을 사용할 때 생성 될 수 있음 ). &lt;code&gt;.git/objects&lt;/code&gt; 디렉토리를 보거나 실행 하여 느슨한 오브젝트가 없어 졌는지 확인할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5a0964ab993b47b2f3c91f922a50aaacf7d74114" translate="yes" xml:space="preserve">
          <source>to reset the &lt;code&gt;HEAD&lt;/code&gt; to another commit (&lt;code&gt;target&lt;/code&gt;) with the different reset options depending on the state of the files.</source>
          <target state="translated">파일 상태에 따라 다른 재설정 옵션 을 사용 하여 &lt;code&gt;HEAD&lt;/code&gt; 를 다른 커밋 ( &lt;code&gt;target&lt;/code&gt; )으로 재설정합니다.</target>
        </trans-unit>
        <trans-unit id="c3c07eeee65ae79bf45d3373983c303be6ce5ef2" translate="yes" xml:space="preserve">
          <source>to return you to the branch you were on before.</source>
          <target state="translated">전에 있던 지점으로 돌아갑니다.</target>
        </trans-unit>
        <trans-unit id="d5d795d0339909082461e4b019d4d1e60397bb9c" translate="yes" xml:space="preserve">
          <source>to see what changes you are committing.</source>
          <target state="translated">어떤 변경 사항을 적용했는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="e16b1541c7ea14a2315638e9ef83ab39659fdd48" translate="yes" xml:space="preserve">
          <source>to see what the top commit was.</source>
          <target state="translated">최고 커밋이 무엇인지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="754cb0508274db285b6137ad87c8a8afe57e78f4" translate="yes" xml:space="preserve">
          <source>to show its contents. NOTE! Trees have binary content, and as a result there is a special helper for showing that content, called &lt;code&gt;git ls-tree&lt;/code&gt;, which turns the binary content into a more easily readable form.</source>
          <target state="translated">내용을 보여줍니다. 노트! 트리에는 이진 컨텐츠 가 있으므로이 컨텐츠를보다 쉽게 ​​읽을 수있는 형식으로 바꾸는 &lt;code&gt;git ls-tree&lt;/code&gt; 라는 컨텐츠를 표시하는 특수 도우미 가 있습니다.</target>
        </trans-unit>
        <trans-unit id="f460116ca08908db50804d4cc6c9b82c66e4dfa0" translate="yes" xml:space="preserve">
          <source>to show what the contents of the blob were (or, for a tree, basically what the &lt;code&gt;ls&lt;/code&gt; for that directory was), and that may give you some idea of what the operation was that left that dangling object.</source>
          <target state="translated">blob의 내용이 무엇인지 (또는 트리의 경우 기본적으로 해당 디렉토리 의 &lt;code&gt;ls&lt;/code&gt; 가 무엇인지) 표시하면 매달린 객체를 떠난 작업이 무엇인지 알 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="71775ebf05a620d5ce1967e9dc8f2d77fe67f152" translate="yes" xml:space="preserve">
          <source>to switch to the experimental branch. Now edit a file, commit the change, and switch back to the master branch:</source>
          <target state="translated">실험 분기로 전환합니다. 이제 파일을 편집하고 변경 사항을 커밋 한 다음 마스터 브랜치로 다시 전환하십시오.</target>
        </trans-unit>
        <trans-unit id="0efdf0949a0d7cf206617a8fc9bfae931a3e8dbf" translate="yes" xml:space="preserve">
          <source>to which Git will reply</source>
          <target state="translated">Git이 대답 할 곳</target>
        </trans-unit>
        <trans-unit id="af2c7b4ca07ae6c74d261bc745e174df8ab3ffef" translate="yes" xml:space="preserve">
          <source>top</source>
          <target state="translated">top</target>
        </trans-unit>
        <trans-unit id="ff0b8ed194196f73aa2cba3c7fcde93556d873ca" translate="yes" xml:space="preserve">
          <source>topic branch</source>
          <target state="translated">토픽 브랜치</target>
        </trans-unit>
        <trans-unit id="e7f47fade511c112eb9ce742c56ed861b734b620" translate="yes" xml:space="preserve">
          <source>tortoisemerge</source>
          <target state="translated">tortoisemerge</target>
        </trans-unit>
        <trans-unit id="e326dfc19cd0774746d95277a8cf4e9fa4f7c287" translate="yes" xml:space="preserve">
          <source>trace2.configParams</source>
          <target state="translated">trace2.configParams</target>
        </trans-unit>
        <trans-unit id="84b6ba9798438e4540679b8cf7612d87b1ba949c" translate="yes" xml:space="preserve">
          <source>trace2.destinationDebug</source>
          <target state="translated">trace2.destinationDebug</target>
        </trans-unit>
        <trans-unit id="6d514127ff2e573ddc54e9bf2166854bc06ab455" translate="yes" xml:space="preserve">
          <source>trace2.eventBrief</source>
          <target state="translated">trace2.eventBrief</target>
        </trans-unit>
        <trans-unit id="69f87593667431504eb5fd6824de7d37117de65b" translate="yes" xml:space="preserve">
          <source>trace2.eventNesting</source>
          <target state="translated">trace2.eventNesting</target>
        </trans-unit>
        <trans-unit id="7e5915da7655503c4622875c67fb0c7ac2fa84a5" translate="yes" xml:space="preserve">
          <source>trace2.eventTarget</source>
          <target state="translated">trace2.eventTarget</target>
        </trans-unit>
        <trans-unit id="4fc5266dc4218591cd2e542e1c0102e3eba14e4a" translate="yes" xml:space="preserve">
          <source>trace2.maxFiles</source>
          <target state="translated">trace2.maxFiles</target>
        </trans-unit>
        <trans-unit id="2af0329f61af176ab095d526188b00b006ce542b" translate="yes" xml:space="preserve">
          <source>trace2.normalBrief</source>
          <target state="translated">trace2.normalBrief</target>
        </trans-unit>
        <trans-unit id="59526cf70842a11cfce4927b101fa66eb900054c" translate="yes" xml:space="preserve">
          <source>trace2.normalTarget</source>
          <target state="translated">trace2.normalTarget</target>
        </trans-unit>
        <trans-unit id="7d14b55c2ecd88649b27ae12ba844c283f258f93" translate="yes" xml:space="preserve">
          <source>trace2.perfBrief</source>
          <target state="translated">trace2.perfBrief</target>
        </trans-unit>
        <trans-unit id="3a24627f4df5bdec676dc23ee3e93b997ffb2da5" translate="yes" xml:space="preserve">
          <source>trace2.perfTarget</source>
          <target state="translated">trace2.perfTarget</target>
        </trans-unit>
        <trans-unit id="153812002d92c176ab29d9c71b43ddfa73d085e1" translate="yes" xml:space="preserve">
          <source>trailer.&amp;lt;token&amp;gt;.command</source>
          <target state="translated">trailer.&amp;lt;token&amp;gt;.command</target>
        </trans-unit>
        <trans-unit id="3696c05806744460af18519c82c1a21a52864e21" translate="yes" xml:space="preserve">
          <source>trailer.&amp;lt;token&amp;gt;.ifexists</source>
          <target state="translated">trailer.&amp;lt;token&amp;gt;.ifexists</target>
        </trans-unit>
        <trans-unit id="0bf2cead7f9e1bdddd1b83ac95ae5dc2c3078a25" translate="yes" xml:space="preserve">
          <source>trailer.&amp;lt;token&amp;gt;.ifmissing</source>
          <target state="translated">trailer.&amp;lt;token&amp;gt;.ifmissing</target>
        </trans-unit>
        <trans-unit id="fdd0e772f248ae1ecfd13d2d6b6e2377bcc05bc9" translate="yes" xml:space="preserve">
          <source>trailer.&amp;lt;token&amp;gt;.key</source>
          <target state="translated">trailer.&amp;lt;token&amp;gt;.key</target>
        </trans-unit>
        <trans-unit id="0dc6029ecbb82dae9f313eb724c69e3d9b6ccb2a" translate="yes" xml:space="preserve">
          <source>trailer.&amp;lt;token&amp;gt;.where</source>
          <target state="translated">trailer.&amp;lt;token&amp;gt;.where</target>
        </trans-unit>
        <trans-unit id="560d035290956ae79cd1def3be7aebcad0575655" translate="yes" xml:space="preserve">
          <source>trailer.ifexists</source>
          <target state="translated">trailer.ifexists</target>
        </trans-unit>
        <trans-unit id="8bf9e31902ab95d738f445c0deb2d29d9df1d4b0" translate="yes" xml:space="preserve">
          <source>trailer.ifmissing</source>
          <target state="translated">trailer.ifmissing</target>
        </trans-unit>
        <trans-unit id="42c95617cb4a7b809df0d90693439c4a70b41f21" translate="yes" xml:space="preserve">
          <source>trailer.separators</source>
          <target state="translated">trailer.separators</target>
        </trans-unit>
        <trans-unit id="d7fe097012b1d9de2262e0f43245a9993263c616" translate="yes" xml:space="preserve">
          <source>trailer.where</source>
          <target state="translated">trailer.where</target>
        </trans-unit>
        <trans-unit id="12b9b7b269b613f9bd084bb3bfa8a7a5eda1920d" translate="yes" xml:space="preserve">
          <source>transfer.fsckObjects</source>
          <target state="translated">transfer.fsckObjects</target>
        </trans-unit>
        <trans-unit id="e88f7f6237acfdce6d6905de1ada59d116c112ea" translate="yes" xml:space="preserve">
          <source>transfer.hideRefs</source>
          <target state="translated">transfer.hideRefs</target>
        </trans-unit>
        <trans-unit id="950a72c962edf6b43c6bbcd2478b8ba9e7137bf6" translate="yes" xml:space="preserve">
          <source>transfer.unpackLimit</source>
          <target state="translated">transfer.unpackLimit</target>
        </trans-unit>
        <trans-unit id="80655da8d80aaaf92ce5357e7828dc09adb00993" translate="yes" xml:space="preserve">
          <source>tree</source>
          <target state="translated">tree</target>
        </trans-unit>
        <trans-unit id="0838e728517489b7053c785510a972cda98ae010" translate="yes" xml:space="preserve">
          <source>tree hash</source>
          <target state="translated">트리 해시</target>
        </trans-unit>
        <trans-unit id="04ba9ed331f1eaa7618aefb1db4da5988463404d" translate="yes" xml:space="preserve">
          <source>tree object</source>
          <target state="translated">트리 객체</target>
        </trans-unit>
        <trans-unit id="6503ff33aabb329cc76379b0e30e290446364392" translate="yes" xml:space="preserve">
          <source>tree-ish (also treeish)</source>
          <target state="translated">나무가 많은 (또한 나무가 많은)</target>
        </trans-unit>
        <trans-unit id="5ffe533b830f08a0326348a9160afafc8ada44db" translate="yes" xml:space="preserve">
          <source>true</source>
          <target state="translated">true</target>
        </trans-unit>
        <trans-unit id="4d479bfed6725bed52941b5bf8c8c4931ae539f0" translate="yes" xml:space="preserve">
          <source>try to apply the change introduced by &lt;code&gt;topic^&lt;/code&gt; again, spending extra time to avoid mistakes based on incorrectly matching context lines.</source>
          <target state="translated">일치하지 않는 컨텍스트 라인에 기반한 실수를 피하기 위해 추가 시간을 소비하면서 &lt;code&gt;topic^&lt;/code&gt; 의해 도입 된 변경 사항을 다시 적용하십시오 .</target>
        </trans-unit>
        <trans-unit id="3e6d88e21fd8a88a672363e28e6206cab9c5b989" translate="yes" xml:space="preserve">
          <source>unbundle &amp;lt;file&amp;gt;</source>
          <target state="translated">묶음 &amp;lt;파일&amp;gt;</target>
        </trans-unit>
        <trans-unit id="67ad5a07a2b999e38f2228365318c33459ab727a" translate="yes" xml:space="preserve">
          <source>union</source>
          <target state="translated">union</target>
        </trans-unit>
        <trans-unit id="137378ee6cb25729ca5fe8ee9720b2f98e94bd3e" translate="yes" xml:space="preserve">
          <source>unless &lt;code&gt;-z&lt;/code&gt; is in effect, in which case NUL is used as delimiter: &amp;lt;path&amp;gt; NUL &amp;lt;attribute&amp;gt; NUL &amp;lt;info&amp;gt; NUL</source>
          <target state="translated">&lt;code&gt;-z&lt;/code&gt; 가 유효 하지 않은 경우 NUL이 분리 문자로 사용됩니다. &amp;lt;path&amp;gt; NUL &amp;lt;attribute&amp;gt; NUL &amp;lt;info&amp;gt; NUL</target>
        </trans-unit>
        <trans-unit id="8ec4981102569463be3512984154c66c098b92c5" translate="yes" xml:space="preserve">
          <source>unlock</source>
          <target state="translated">unlock</target>
        </trans-unit>
        <trans-unit id="e9e70a06e6515a7fcc3845d5535a3661f719203f" translate="yes" xml:space="preserve">
          <source>unmerged</source>
          <target state="translated">unmerged</target>
        </trans-unit>
        <trans-unit id="87f1596878b66cf5e5ead3a6d979fdfc839c617e" translate="yes" xml:space="preserve">
          <source>unmerged index</source>
          <target state="translated">병합되지 않은 인덱스</target>
        </trans-unit>
        <trans-unit id="5cb51aacbf9b02b324952d80b22a4098fc042126" translate="yes" xml:space="preserve">
          <source>unreachable &amp;lt;type&amp;gt; &amp;lt;object&amp;gt;</source>
          <target state="translated">연결할 수없는 &amp;lt;type&amp;gt; &amp;lt;object&amp;gt;</target>
        </trans-unit>
        <trans-unit id="103062cf5683650b86cf685307f0a04f2b33bef3" translate="yes" xml:space="preserve">
          <source>unreachable object</source>
          <target state="translated">도달 할 수없는 물건</target>
        </trans-unit>
        <trans-unit id="d7390aa3e7289506746a90490cae21f0dfa03b28" translate="yes" xml:space="preserve">
          <source>untracked</source>
          <target state="translated">untracked</target>
        </trans-unit>
        <trans-unit id="0a25ba5991316bdda4a9b3abcee2106016df28a0" translate="yes" xml:space="preserve">
          <source>update</source>
          <target state="translated">update</target>
        </trans-unit>
        <trans-unit id="1bbe6775d22eb31a8bd3b29faabdf538b6b9eea4" translate="yes" xml:space="preserve">
          <source>update [--init] [--remote] [-N|--no-fetch] [--[no-]recommend-shallow] [-f|--force] [--checkout|--rebase|--merge] [--reference &amp;lt;repository&amp;gt;] [--depth &amp;lt;depth&amp;gt;] [--recursive] [--jobs &amp;lt;n&amp;gt;] [--] [&amp;lt;path&amp;gt;&amp;hellip;​]</source>
          <target state="translated">업데이트 [--init] [--remote] [-N | --no-fetch] [-[no-] 추천-얕음] [-f | --force] [--checkout | --rebase |- -병합] [-참조 &amp;lt;repository&amp;gt;] [--depth &amp;lt;depth&amp;gt;] [--recursive] [--jobs &amp;lt;n&amp;gt;] [-] [&amp;lt;path&amp;gt;&amp;hellip;]]</target>
        </trans-unit>
        <trans-unit id="de7ed0b25b2588b00f2aeadec850d6f2f427931a" translate="yes" xml:space="preserve">
          <source>update stat information for the checked out entries in the index file.</source>
          <target state="translated">인덱스 파일에서 체크 아웃 된 항목에 대한 통계 정보를 업데이트합니다.</target>
        </trans-unit>
        <trans-unit id="8800c9f265f305184119c8930414ff46e45222ae" translate="yes" xml:space="preserve">
          <source>update-index</source>
          <target state="translated">update-index</target>
        </trans-unit>
        <trans-unit id="7c33ba1b93097a7db8596ac034da1984cf697bef" translate="yes" xml:space="preserve">
          <source>update-ref</source>
          <target state="translated">update-ref</target>
        </trans-unit>
        <trans-unit id="d8f0e457e823eb34a4066d2e4f4181d404778acb" translate="yes" xml:space="preserve">
          <source>update-server-info</source>
          <target state="translated">update-server-info</target>
        </trans-unit>
        <trans-unit id="512447b5e9909d5d949b94f89d29bf96dab2f966" translate="yes" xml:space="preserve">
          <source>upload-archive</source>
          <target state="translated">upload-archive</target>
        </trans-unit>
        <trans-unit id="e9a66229ec29fdea46480657259f6e6de3e97318" translate="yes" xml:space="preserve">
          <source>upload-pack</source>
          <target state="translated">upload-pack</target>
        </trans-unit>
        <trans-unit id="b01dc9643f6074fed79f1b86c0da57aafb4405ea" translate="yes" xml:space="preserve">
          <source>uploadarchive.allowUnreachable</source>
          <target state="translated">uploadarchive.allowUnreachable</target>
        </trans-unit>
        <trans-unit id="e9f54a6008ee27e95f09272ec604da3b227a11df" translate="yes" xml:space="preserve">
          <source>uploadpack.allowAnySHA1InWant</source>
          <target state="translated">uploadpack.allowAnySHA1InWant</target>
        </trans-unit>
        <trans-unit id="0ad20ae1b6701a727742b3f64b9a3da8c51f0115" translate="yes" xml:space="preserve">
          <source>uploadpack.allowFilter</source>
          <target state="translated">uploadpack.allowFilter</target>
        </trans-unit>
        <trans-unit id="9980c1a293f4a2bf4aa61230af04946507fff558" translate="yes" xml:space="preserve">
          <source>uploadpack.allowReachableSHA1InWant</source>
          <target state="translated">uploadpack.allowReachableSHA1InWant</target>
        </trans-unit>
        <trans-unit id="76e7c8b5028e67edd5a2d0bf74fffe692316c0c9" translate="yes" xml:space="preserve">
          <source>uploadpack.allowRefInWant</source>
          <target state="translated">uploadpack.allowRefInWant</target>
        </trans-unit>
        <trans-unit id="1c700cd4d8bc2ab2c6bb78529ca0b2b9ddfe0402" translate="yes" xml:space="preserve">
          <source>uploadpack.allowTipSHA1InWant</source>
          <target state="translated">uploadpack.allowTipSHA1InWant</target>
        </trans-unit>
        <trans-unit id="de2160f36b4587455cda8c5053c1b5faf06316a1" translate="yes" xml:space="preserve">
          <source>uploadpack.hideRefs</source>
          <target state="translated">uploadpack.hideRefs</target>
        </trans-unit>
        <trans-unit id="92a5fcbdf4c8b0e617a06a2928f4540d85e9485e" translate="yes" xml:space="preserve">
          <source>uploadpack.keepAlive</source>
          <target state="translated">uploadpack.keepAlive</target>
        </trans-unit>
        <trans-unit id="0506b4256a296513f644c108c682e13ec69264dd" translate="yes" xml:space="preserve">
          <source>uploadpack.packObjectsHook</source>
          <target state="translated">uploadpack.packObjectsHook</target>
        </trans-unit>
        <trans-unit id="fd54d5aa0112760b77af49308da7e6c75ab1adf2" translate="yes" xml:space="preserve">
          <source>upstream</source>
          <target state="translated">upstream</target>
        </trans-unit>
        <trans-unit id="1455829fd1ff6506e053f2710d666ff5c379e6a6" translate="yes" xml:space="preserve">
          <source>upstream branch</source>
          <target state="translated">상류 지점</target>
        </trans-unit>
        <trans-unit id="81559f421583e2f790f0a952c90abcb5e6d0dc46" translate="yes" xml:space="preserve">
          <source>url.&amp;lt;base&amp;gt;.insteadOf</source>
          <target state="translated">url.&amp;lt;base&amp;gt;.insteadOf</target>
        </trans-unit>
        <trans-unit id="e80eb9d4b905bae0c793e9070e3f7e649138cdc6" translate="yes" xml:space="preserve">
          <source>url.&amp;lt;base&amp;gt;.pushInsteadOf</source>
          <target state="translated">url.&amp;lt;base&amp;gt;.pushInsteadOf</target>
        </trans-unit>
        <trans-unit id="c629ba0ed3388c36c69d161bf77f96f320185dc3" translate="yes" xml:space="preserve">
          <source>usage</source>
          <target state="translated">usage</target>
        </trans-unit>
        <trans-unit id="2b60216a5b26ac74c1234626d409316d9bfab434" translate="yes" xml:space="preserve">
          <source>use &quot;git bisect run&quot; to find the commit that introduced it</source>
          <target state="translated">&quot;git bisect run&quot;을 사용하여 그것을 도입 한 커밋을 찾으십시오.</target>
        </trans-unit>
        <trans-unit id="6aa98016ecb7393fd7747a7aed804b9c0dc3e662" translate="yes" xml:space="preserve">
          <source>use &lt;code&gt;git commit --amend&lt;/code&gt; to replace already-published commits (as in &lt;a href=&quot;#fixing-a-mistake-by-rewriting-history&quot;&gt;Fixing a mistake by rewriting history&lt;/a&gt;), or</source>
          <target state="translated">사용 &lt;code&gt;git commit --amend&lt;/code&gt; (같이 이미 공개 된 커밋을 대체하기 위해 &lt;a href=&quot;#fixing-a-mistake-by-rewriting-history&quot;&gt;역사를 다시 작성하여 실수를 고정&lt;/a&gt; ), 또는</target>
        </trans-unit>
        <trans-unit id="cca22b12c3be86ba57e15a5c2b62ec89d58b2d85" translate="yes" xml:space="preserve">
          <source>use &lt;code&gt;git rebase&lt;/code&gt; to rebase any already-published commits (as in &lt;a href=&quot;#using-git-rebase&quot;&gt;Keeping a patch series up to date using git rebase&lt;/a&gt;).</source>
          <target state="translated">&lt;code&gt;git rebase&lt;/code&gt; 를 사용 하여 이미 게시 된 커밋을 리베이스하십시오 ( git rebase 를 사용 &lt;a href=&quot;#using-git-rebase&quot;&gt;하여 패치 시리즈를 최신 상태&lt;/a&gt; 로 유지하는 것과 같이 ).</target>
        </trans-unit>
        <trans-unit id="e13bf6e7db4e47b3278c089e3de1ac662487bee3" translate="yes" xml:space="preserve">
          <source>use &lt;code&gt;git reset --hard&lt;/code&gt; to remove already-published commits, or</source>
          <target state="translated">&lt;code&gt;git reset --hard&lt;/code&gt; 를 사용 하여 이미 게시 된 커밋을 제거하거나</target>
        </trans-unit>
        <trans-unit id="5af4d6aab9c8a9022be8e271e6678ad14e5a6872" translate="yes" xml:space="preserve">
          <source>use update-hook example by Carl from Documentation/howto/ for branch policy control.</source>
          <target state="translated">지점 정책 제어에 대해서는 Carl의 Update-hook 예제를 Documentation / howto /에서 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="8436f859f1937cf17e90898a5c03c76ed5a2d07e" translate="yes" xml:space="preserve">
          <source>useHttpPath</source>
          <target state="translated">useHttpPath</target>
        </trans-unit>
        <trans-unit id="14220bce4fd35011b7e5b728db4a1f14654eaa0a" translate="yes" xml:space="preserve">
          <source>used to specify additional object database roots (usually unset)</source>
          <target state="translated">추가 객체 데이터베이스 루트를 지정하는 데 사용됩니다 (보통 설정되지 않음)</target>
        </trans-unit>
        <trans-unit id="06cfdf70e840c73403ae919811f63150b4226152" translate="yes" xml:space="preserve">
          <source>used to specify the index file of the index</source>
          <target state="translated">색인의 색인 파일을 지정하는 데 사용</target>
        </trans-unit>
        <trans-unit id="19cbce775f460b884658342deb067fb202761064" translate="yes" xml:space="preserve">
          <source>used to specify the object database root (usually $GIT_DIR/objects)</source>
          <target state="translated">객체 데이터베이스 루트를 지정하는 데 사용됩니다 (보통 $ GIT_DIR / objects).</target>
        </trans-unit>
        <trans-unit id="8a0a9d26f3c9c3a0e73ff6efa5a8a582a5526fb9" translate="yes" xml:space="preserve">
          <source>user-manual</source>
          <target state="translated">user-manual</target>
        </trans-unit>
        <trans-unit id="20afd5b376ab9ffb3cfe083496345d7e9d11d9f5" translate="yes" xml:space="preserve">
          <source>user.email</source>
          <target state="translated">user.email</target>
        </trans-unit>
        <trans-unit id="8377b2516ed4c658297caaad0fc246ab7085395a" translate="yes" xml:space="preserve">
          <source>user.name</source>
          <target state="translated">user.name</target>
        </trans-unit>
        <trans-unit id="6f24e0995d40d8ab3b1fce4941e6137ba246d0d7" translate="yes" xml:space="preserve">
          <source>user.signingKey</source>
          <target state="translated">user.signingKey</target>
        </trans-unit>
        <trans-unit id="367ade158fa2424e8aeda8bf7ebf0c29c1189658" translate="yes" xml:space="preserve">
          <source>user.useConfigOnly</source>
          <target state="translated">user.useConfigOnly</target>
        </trans-unit>
        <trans-unit id="249ba36000029bbe97499c03db5a9001f6b734ec" translate="yes" xml:space="preserve">
          <source>username</source>
          <target state="translated">username</target>
        </trans-unit>
        <trans-unit id="9535b89508d27a34b138c29184ababa5cb240fd8" translate="yes" xml:space="preserve">
          <source>various &lt;code&gt;gitweb.*&lt;/code&gt; config variables (in config)</source>
          <target state="translated">다양한 &lt;code&gt;gitweb.*&lt;/code&gt; 설정 변수 (설정)</target>
        </trans-unit>
        <trans-unit id="d99a2118f45121587f2aa88f0bbe3e6a0222afec" translate="yes" xml:space="preserve">
          <source>verbatim</source>
          <target state="translated">verbatim</target>
        </trans-unit>
        <trans-unit id="86a4261d849a6e99b3c3a38f7585e3c7d4a91823" translate="yes" xml:space="preserve">
          <source>verify</source>
          <target state="translated">verify</target>
        </trans-unit>
        <trans-unit id="57726e9f75b24544e1dd437342d5819f250ed863" translate="yes" xml:space="preserve">
          <source>verify &amp;lt;file&amp;gt;</source>
          <target state="translated">&amp;lt;파일&amp;gt; 확인</target>
        </trans-unit>
        <trans-unit id="0107d8cf69279d0390724340b1d8ca795eef7fc1" translate="yes" xml:space="preserve">
          <source>verify-pack</source>
          <target state="translated">verify-pack</target>
        </trans-unit>
        <trans-unit id="c692273deb2772da307ffe37041fef77bf4baa97" translate="yes" xml:space="preserve">
          <source>version</source>
          <target state="translated">version</target>
        </trans-unit>
        <trans-unit id="f9d7293026c6c5738a459824b327b08276645dd4" translate="yes" xml:space="preserve">
          <source>versionsort.prereleaseSuffix (deprecated)</source>
          <target state="translated">versionsort.prereleaseSuffix (더 이상 사용되지 않음)</target>
        </trans-unit>
        <trans-unit id="3b8b588688e2bc65e248cc78737d585193e9bc94" translate="yes" xml:space="preserve">
          <source>versionsort.suffix</source>
          <target state="translated">versionsort.suffix</target>
        </trans-unit>
        <trans-unit id="76c03587844f33d96ff349b00127e2bafec645b8" translate="yes" xml:space="preserve">
          <source>view only the changes that touch what&amp;rsquo;s in &lt;code&gt;curses/&lt;/code&gt; directory, since &lt;code&gt;v2.43&lt;/code&gt; tag.</source>
          <target state="translated">&lt;code&gt;v2.43&lt;/code&gt; 태그 이후 &lt;code&gt;curses/&lt;/code&gt; 디렉토리 에있는 변경 사항 만 볼 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2966e23fe80a84357873ff7f6bbaedb6e0a87390" translate="yes" xml:space="preserve">
          <source>vimdiff</source>
          <target state="translated">vimdiff</target>
        </trans-unit>
        <trans-unit id="60e25616bd16037146fe54ebc9cf83452171f8f9" translate="yes" xml:space="preserve">
          <source>vimdiff2</source>
          <target state="translated">vimdiff2</target>
        </trans-unit>
        <trans-unit id="5c0f766121e387dca2f4cfc4670976daa43bfd9e" translate="yes" xml:space="preserve">
          <source>vimdiff3</source>
          <target state="translated">vimdiff3</target>
        </trans-unit>
        <trans-unit id="9f7e2fdf191c778d5ba44fbad0cf470a206e7b75" translate="yes" xml:space="preserve">
          <source>waitingForEditor</source>
          <target state="translated">waitingForEditor</target>
        </trans-unit>
        <trans-unit id="66616ddc89e541629232ca748badd2e1a332dfad" translate="yes" xml:space="preserve">
          <source>was around even in the initial commit (it literally went only through some 20 revisions as &lt;code&gt;cat-file.c&lt;/code&gt;, was renamed to &lt;code&gt;builtin/cat-file.c&lt;/code&gt; when made a builtin, and then saw less than 10 versions).</source>
          <target state="translated">초기 커밋에서도 주변에있었습니다 (문자 그대로 &lt;code&gt;cat-file.c&lt;/code&gt; 로 약 20 개정을 통과 했으며 &lt;code&gt;builtin/cat-file.c&lt;/code&gt; 때 builtin / cat-file.c 로 이름이 바뀐 다음 10 개 미만의 버전을 보았습니다).</target>
        </trans-unit>
        <trans-unit id="ac9526cb46eaa5a9288d3e315daa3dc641c086bc" translate="yes" xml:space="preserve">
          <source>we get:</source>
          <target state="translated">우리는 얻는다 :</target>
        </trans-unit>
        <trans-unit id="09fae17d882282030fbb878ca19b18d2fad6f0d3" translate="yes" xml:space="preserve">
          <source>web.browser</source>
          <target state="translated">web.browser</target>
        </trans-unit>
        <trans-unit id="13648f0850cced745ce6c2e47e0247e9addd6599" translate="yes" xml:space="preserve">
          <source>what you would commit is a pure merge between $JC and $LT without your work-in-progress changes, and your work tree would be updated to the result of the merge.</source>
          <target state="translated">커밋 할 작업은 진행중인 작업 변경없이 $ JC와 $ LT 간의 순수한 병합이며 작업 트리는 병합 결과로 업데이트됩니다.</target>
        </trans-unit>
        <trans-unit id="137f4cd31b8ac9c70eec522616911797956466d6" translate="yes" xml:space="preserve">
          <source>when a command-line option takes an argument, use the &lt;code&gt;stuck&lt;/code&gt; form. In other words, write &lt;code&gt;git foo -oArg&lt;/code&gt; instead of &lt;code&gt;git foo -o Arg&lt;/code&gt; for short options, and &lt;code&gt;git foo --long-opt=Arg&lt;/code&gt; instead of &lt;code&gt;git foo --long-opt Arg&lt;/code&gt; for long options. An option that takes optional option-argument must be written in the &lt;code&gt;stuck&lt;/code&gt; form.</source>
          <target state="translated">명령 행 옵션이 인수를 취하면 &lt;code&gt;stuck&lt;/code&gt; 양식을 사용하십시오 . 즉, 쓰기 &lt;code&gt;git foo -oArg&lt;/code&gt; 대신 &lt;code&gt;git foo -o Arg&lt;/code&gt; 짧은 옵션 및 &lt;code&gt;git foo --long-opt=Arg&lt;/code&gt; 대신 &lt;code&gt;git foo --long-opt Arg&lt;/code&gt; 긴 옵션. 선택적 옵션 인수를 취하는 옵션은 &lt;code&gt;stuck&lt;/code&gt; 양식 으로 작성해야합니다 .</target>
        </trans-unit>
        <trans-unit id="08b790ee030967e5fea6436523ed6a46fee2a8ca" translate="yes" xml:space="preserve">
          <source>when a value has been assigned to the attribute.</source>
          <target state="translated">속성에 값이 할당 된 경우</target>
        </trans-unit>
        <trans-unit id="bd8c81a2992e0b1998e552805e680f4888b2a043" translate="yes" xml:space="preserve">
          <source>when both sides add a path identically. The resolution is to add that path.</source>
          <target state="translated">양쪽이 경로를 동일하게 추가 할 때 해결 방법은 해당 경로를 추가하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="2d207b6cc1bf36fa789982a41623696fe9f755d0" translate="yes" xml:space="preserve">
          <source>when both sides remove a path. The resolution is to remove that path.</source>
          <target state="translated">양쪽이 경로를 제거 할 때. 해결 방법은 해당 경로를 제거하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="3d03042c83c6e553530f093187f85bf4aa45e20b" translate="yes" xml:space="preserve">
          <source>when one side removes a path and the other side leaves the path unmodified. The resolution is to remove that path.</source>
          <target state="translated">한쪽이 경로를 제거하고 다른 쪽이 경로를 수정하지 않은 채로 두는 경우. 해결 방법은 해당 경로를 제거하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="7bbeb708459bbcd9a6f801c204710e9fd9a8d5bb" translate="yes" xml:space="preserve">
          <source>when present, is a number indicating the repository in use. A &lt;code&gt;def_repo&lt;/code&gt; event is emitted when a repository is opened. This defines the repo-id and associated worktree. Subsequent repo-specific events will reference this repo-id.</source>
          <target state="translated">있는 경우 사용중인 저장소를 나타내는 숫자입니다. &lt;code&gt;def_repo&lt;/code&gt; 의 저장소가 개방 될 때 이벤트가 방출된다. 이것은 repo-id 및 연관된 작업 트리를 정의합니다. 후속 repo 특정 이벤트는이 repo-id를 참조합니다.</target>
        </trans-unit>
        <trans-unit id="83496d864a76156de7b373c1dc26c24cf9f74457" translate="yes" xml:space="preserve">
          <source>when present, is the absolute time in seconds since the program started.</source>
          <target state="translated">존재하는 경우 프로그램이 시작된 이후의 절대 시간 (초)입니다.</target>
        </trans-unit>
        <trans-unit id="0f286b51998ec004e7a92508de17e60f69036edf" translate="yes" xml:space="preserve">
          <source>when present, is the integer repo-id as described previously.</source>
          <target state="translated">존재하는 경우, 전술 한 바와 같은 정수 리포 -ID이다.</target>
        </trans-unit>
        <trans-unit id="1b336fa06d8b7b5fe9a5c6e111c3fdda14d52cf1" translate="yes" xml:space="preserve">
          <source>when present, is time in seconds relative to the start of the current region. For a thread-exit event, it is the elapsed time of the thread.</source>
          <target state="translated">존재하는 경우, 현재 영역의 시작에 상대적인 시간 (초)입니다. 스레드 종료 이벤트의 경우 스레드 경과 시간입니다.</target>
        </trans-unit>
        <trans-unit id="b709f35d3230034176fc1c1e01219c2845c0eb5a" translate="yes" xml:space="preserve">
          <source>when the attribute is defined as false.</source>
          <target state="translated">속성이 false로 정의 된 경우</target>
        </trans-unit>
        <trans-unit id="e28c0b89e2b87778e723d62b0659e8f5ba4f9c34" translate="yes" xml:space="preserve">
          <source>when the attribute is defined as true.</source>
          <target state="translated">속성이 true로 정의 된 경우</target>
        </trans-unit>
        <trans-unit id="6e1005615786e751b99ef410482e0253e7f9d22c" translate="yes" xml:space="preserve">
          <source>when the attribute is not defined for the path.</source>
          <target state="translated">경로에 속성이 정의되지 않은 경우</target>
        </trans-unit>
        <trans-unit id="f2781c2523395778abf3162f254d2fde0e3118bd" translate="yes" xml:space="preserve">
          <source>when you give a revision parameter to a command, make sure the parameter is not ambiguous with a name of a file in the work tree. E.g. do not write &lt;code&gt;git log -1 HEAD&lt;/code&gt; but write &lt;code&gt;git log -1 HEAD --&lt;/code&gt;; the former will not work if you happen to have a file called &lt;code&gt;HEAD&lt;/code&gt; in the work tree.</source>
          <target state="translated">명령에 개정 매개 변수를 제공 할 때 매개 변수가 작업 트리의 파일 이름과 모호하지 않은지 확인하십시오. 예를 들어 &lt;code&gt;git log -1 HEAD&lt;/code&gt; 를 쓰지 말고 git log -1 HEAD를 쓰십시오 &lt;code&gt;git log -1 HEAD --&lt;/code&gt; ; 작업 트리에 &lt;code&gt;HEAD&lt;/code&gt; 라는 파일이 있으면 전자가 작동하지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="47ca071da5c62ba77534b087609b8b85e0d8c8eb" translate="yes" xml:space="preserve">
          <source>where &amp;lt;address&amp;gt; may be a path, a server and path, or an arbitrary URL-like string recognized by the specific remote helper being invoked. See &lt;a href=&quot;gitremote-helpers&quot;&gt;gitremote-helpers[7]&lt;/a&gt; for details.</source>
          <target state="translated">여기서 &amp;lt;주소&amp;gt;는 경로, 서버 및 경로 또는 호출되는 특정 원격 도우미가 인식하는 임의의 URL 유사 문자열 일 수 있습니다. 자세한 내용은 &lt;a href=&quot;gitremote-helpers&quot;&gt;gitremote-helpers [7]&lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="24c59a78c92d0ad55dbe8e10d65d8b798665d46c" translate="yes" xml:space="preserve">
          <source>where &amp;lt;name&amp;gt; is the name of the SVN repository as specified by the -R option to &lt;code&gt;init&lt;/code&gt; (or &quot;svn&quot; by default).</source>
          <target state="translated">을 -R에 옵션에 의해 지정된 여기서 &amp;lt;이름&amp;gt; SVN 저장소의 이름입니다 &lt;code&gt;init&lt;/code&gt; (또는 기본적으로 &quot;SVN&quot;).</target>
        </trans-unit>
        <trans-unit id="74848e7cc115cf20b7519259e0e3648c5c84ed72" translate="yes" xml:space="preserve">
          <source>where &lt;code&gt;&amp;lt;count&amp;gt;&lt;/code&gt; is the exact number of bytes appearing within &lt;code&gt;&amp;lt;raw&amp;gt;&lt;/code&gt;. The value of &lt;code&gt;&amp;lt;count&amp;gt;&lt;/code&gt; is expressed as an ASCII decimal integer. The &lt;code&gt;LF&lt;/code&gt; on either side of &lt;code&gt;&amp;lt;raw&amp;gt;&lt;/code&gt; is not included in &lt;code&gt;&amp;lt;count&amp;gt;&lt;/code&gt; and will not be included in the imported data.</source>
          <target state="translated">여기서 &lt;code&gt;&amp;lt;count&amp;gt;&lt;/code&gt; 는 &lt;code&gt;&amp;lt;raw&amp;gt;&lt;/code&gt; 내에 나타나는 정확한 바이트 수입니다 . &lt;code&gt;&amp;lt;count&amp;gt;&lt;/code&gt; 의 값은 ASCII 10 진수 정수로 표시됩니다. &lt;code&gt;&amp;lt;raw&amp;gt;&lt;/code&gt; 의 양쪽에 있는 &lt;code&gt;LF&lt;/code&gt; 는 &lt;code&gt;&amp;lt;count&amp;gt;&lt;/code&gt; 에 포함되지 않으며 가져온 데이터에 포함되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="83ee8dfa0bb9c2d22d2dddae831ac4bc22f7f85e" translate="yes" xml:space="preserve">
          <source>where &lt;code&gt;&amp;lt;delim&amp;gt;&lt;/code&gt; is the chosen delimiter string. The string &lt;code&gt;&amp;lt;delim&amp;gt;&lt;/code&gt; must not appear on a line by itself within &lt;code&gt;&amp;lt;raw&amp;gt;&lt;/code&gt;, as otherwise fast-import will think the data ends earlier than it really does. The &lt;code&gt;LF&lt;/code&gt; immediately trailing &lt;code&gt;&amp;lt;raw&amp;gt;&lt;/code&gt; is part of &lt;code&gt;&amp;lt;raw&amp;gt;&lt;/code&gt;. This is one of the limitations of the delimited format, it is impossible to supply a data chunk which does not have an LF as its last byte.</source>
          <target state="translated">여기서 &lt;code&gt;&amp;lt;delim&amp;gt;&lt;/code&gt; 은 선택된 구분 기호 문자열입니다. &lt;code&gt;&amp;lt;delim&amp;gt;&lt;/code&gt; 문자열 은 &lt;code&gt;&amp;lt;raw&amp;gt;&lt;/code&gt; 내에서 한 줄에 나타나지 않아야합니다. 그렇지 않으면 빠른 가져 오기로 인해 데이터가 실제보다 빨리 끝나는 것으로 간주합니다. &lt;code&gt;LF&lt;/code&gt; 는 바로 뒤에 &lt;code&gt;&amp;lt;raw&amp;gt;&lt;/code&gt; 의 일부인 &lt;code&gt;&amp;lt;raw&amp;gt;&lt;/code&gt; . 이것은 분리 형식의 제한 사항 중 하나이며, 마지막 바이트로 LF가없는 데이터 청크를 제공 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="8d31af99cf78f98699895f41c7d011db35405682" translate="yes" xml:space="preserve">
          <source>where &lt;code&gt;&amp;lt;idnum&amp;gt;&lt;/code&gt; is the number assigned by the frontend to this mark. The value of &lt;code&gt;&amp;lt;idnum&amp;gt;&lt;/code&gt; is expressed as an ASCII decimal integer. The value 0 is reserved and cannot be used as a mark. Only values greater than or equal to 1 may be used as marks.</source>
          <target state="translated">여기서 &lt;code&gt;&amp;lt;idnum&amp;gt;&lt;/code&gt; 은 프론트 엔드가이 마크에 할당 한 번호입니다. &lt;code&gt;&amp;lt;idnum&amp;gt;&lt;/code&gt; 의 값은 ASCII 10 진수 정수로 표시됩니다. 값 0은 예약되어 있으며 마크로 사용할 수 없습니다. 1 이상의 값만 마크로 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b3bc1f1f90179c0d94155b6d38ac269582a5bc31" translate="yes" xml:space="preserve">
          <source>where &lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt; is the name of the tag to create.</source>
          <target state="translated">여기서 &lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt; 은 만들 태그의 이름입니다.</target>
        </trans-unit>
        <trans-unit id="0781bcf41941d50f274f9c3e811a463ff92910ed" translate="yes" xml:space="preserve">
          <source>where &lt;code&gt;&amp;lt;object-identifer&amp;gt;&lt;/code&gt; is any string not containing LF.</source>
          <target state="translated">여기서 &lt;code&gt;&amp;lt;object-identifer&amp;gt;&lt;/code&gt; 는 LF를 포함하지 않는 문자열입니다.</target>
        </trans-unit>
        <trans-unit id="bcf39c97c33b3493acc59ef62643eddab5197b13" translate="yes" xml:space="preserve">
          <source>where &lt;code&gt;&amp;lt;old-value&amp;gt;&lt;/code&gt; is the old object name stored in the ref, &lt;code&gt;&amp;lt;new-value&amp;gt;&lt;/code&gt; is the new object name to be stored in the ref and &lt;code&gt;&amp;lt;ref-name&amp;gt;&lt;/code&gt; is the full name of the ref. When creating a new ref, &lt;code&gt;&amp;lt;old-value&amp;gt;&lt;/code&gt; is 40 &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="translated">여기서 &lt;code&gt;&amp;lt;old-value&amp;gt;&lt;/code&gt; 는 ref에 저장된 이전 객체 이름이고, &lt;code&gt;&amp;lt;new-value&amp;gt;&lt;/code&gt; 는 ref에 저장 될 새 객체 이름이고 &lt;code&gt;&amp;lt;ref-name&amp;gt;&lt;/code&gt; 은 ref 의 전체 이름입니다. 새 심판을 만들 때 &lt;code&gt;&amp;lt;old-value&amp;gt;&lt;/code&gt; 는 40 &lt;code&gt;0&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="3cf5cc960d6eed5860429276c195773bac6ba954" translate="yes" xml:space="preserve">
          <source>where &lt;code&gt;&amp;lt;ref&amp;gt;&lt;/code&gt; is the name of the branch to make the commit on. Typically branch names are prefixed with &lt;code&gt;refs/heads/&lt;/code&gt; in Git, so importing the CVS branch symbol &lt;code&gt;RELENG-1_0&lt;/code&gt; would use &lt;code&gt;refs/heads/RELENG-1_0&lt;/code&gt; for the value of &lt;code&gt;&amp;lt;ref&amp;gt;&lt;/code&gt;. The value of &lt;code&gt;&amp;lt;ref&amp;gt;&lt;/code&gt; must be a valid refname in Git. As &lt;code&gt;LF&lt;/code&gt; is not valid in a Git refname, no quoting or escaping syntax is supported here.</source>
          <target state="translated">여기서 &lt;code&gt;&amp;lt;ref&amp;gt;&lt;/code&gt; 는 커밋을 수행 할 지점의 이름입니다. 일반적으로 분기 이름은 Git에서 &lt;code&gt;refs/heads/&lt;/code&gt; 로 시작하므로 CVS 분기 기호 &lt;code&gt;RELENG-1_0&lt;/code&gt; 을 가져 오면 &lt;code&gt;&amp;lt;ref&amp;gt;&lt;/code&gt; 값에 &lt;code&gt;refs/heads/RELENG-1_0&lt;/code&gt; 이 사용 됩니다. &lt;code&gt;&amp;lt;ref&amp;gt;&lt;/code&gt; 의 값은 Git에서 유효한 참조 이름 이어야합니다. 으로 &lt;code&gt;LF&lt;/code&gt; 가 힘내 refname에 유효하지 않은, 더 인용 또는 이스케이프 구문은 여기에 지원되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="8556426714f5b4d9bd9ac7c7e3e7e6a9fc4398a1" translate="yes" xml:space="preserve">
          <source>where &lt;code&gt;H&lt;/code&gt; is the &lt;code&gt;HEAD&lt;/code&gt; commit, &lt;code&gt;I&lt;/code&gt; is a commit that records the state of the index, and &lt;code&gt;W&lt;/code&gt; is a commit that records the state of the working tree.</source>
          <target state="translated">여기서 &lt;code&gt;H&lt;/code&gt; 는 은 IS &lt;code&gt;HEAD&lt;/code&gt; 가 커밋 &lt;code&gt;I&lt;/code&gt; 은 A가 그 레코드를 인덱스의 상태를 커밋이며, &lt;code&gt;W&lt;/code&gt; 는 A가 그 기록 작업을 나무의 상태를 커밋한다.</target>
        </trans-unit>
        <trans-unit id="5002deeb5209a7d41623e44bc277fffa4cce0769" translate="yes" xml:space="preserve">
          <source>where &lt;code&gt;ORIG_PATH&lt;/code&gt; is where the renamed/copied contents came from. &lt;code&gt;ORIG_PATH&lt;/code&gt; is only shown when the entry is renamed or copied. The &lt;code&gt;XY&lt;/code&gt; is a two-letter status code.</source>
          <target state="translated">여기서 &lt;code&gt;ORIG_PATH&lt;/code&gt; 는 이름이 바뀌거나 복사 된 내용의 출처입니다. &lt;code&gt;ORIG_PATH&lt;/code&gt; 는 항목의 이름을 바꾸거나 복사 할 때만 표시됩니다. &lt;code&gt;XY&lt;/code&gt; 는 두 문자 상태 코드입니다.</target>
        </trans-unit>
        <trans-unit id="9b17af1ca5f68d6e05ad95e07abe5c29f698899d" translate="yes" xml:space="preserve">
          <source>where &lt;code&gt;git-auth.conf&lt;/code&gt; looks something like:</source>
          <target state="translated">여기서 &lt;code&gt;git-auth.conf&lt;/code&gt; 같은 :</target>
        </trans-unit>
        <trans-unit id="1f855501226f092fcaa4fc8b3dbd6daa2b630659" translate="yes" xml:space="preserve">
          <source>where &lt;code&gt;origin/master&lt;/code&gt; used to point at commits B0, B1, B2 and now it points at B, and your &lt;code&gt;topic&lt;/code&gt; branch was started on top of it back when &lt;code&gt;origin/master&lt;/code&gt; was at B0, and you built three commits, D0, D1, and D, on top of it. Imagine that you now want to rebase the work you did on the topic on top of the updated origin/master.</source>
          <target state="translated">여기서 &lt;code&gt;origin/master&lt;/code&gt; 는 커밋 B0, B1, B2를 가리키고 이제는 B를 가리 켰습니다. 그리고 &lt;code&gt;origin/master&lt;/code&gt; 가 B0에 있을 때 &lt;code&gt;topic&lt;/code&gt; 브랜치가 다시 시작되었습니다 . D0, D1, 그 위에 D가 있습니다. 업데이트 된 원산지 / 마스터의 맨 위에 주제에 대해 수행 한 작업을 리베이스하려는 경우를 상상해보십시오.</target>
        </trans-unit>
        <trans-unit id="2cec26422e2f2b3ffb03e00ad1ae976c13a54488" translate="yes" xml:space="preserve">
          <source>where B is the &quot;bad&quot; commit, &quot;G&quot; are &quot;good&quot; commits and W, X, and Y are other commits, we will get the following graph after this first step:</source>
          <target state="translated">여기서 B는 &quot;나쁜&quot;커밋, &quot;G&quot;는 &quot;좋은&quot;커밋, W, X 및 Y는 다른 커밋 인 경우 첫 번째 단계 후에 다음 그래프를 얻습니다.</target>
        </trans-unit>
        <trans-unit id="5e65e56f9d1dd9179b39019741358b76f7e09945" translate="yes" xml:space="preserve">
          <source>where BAD, GOOD and COMMIT are all names that can be resolved to a commit.</source>
          <target state="translated">여기서 BAD, GOOD 및 COMMIT는 모두 확약으로 해석 될 수있는 이름입니다.</target>
        </trans-unit>
        <trans-unit id="8efbd8314fba7622b7fbe76ab5ff8f026e70083a" translate="yes" xml:space="preserve">
          <source>where BBBBBB is the sha1 hash of the bad commit, MMMMMM is the sha1 hash of the merge base that is skipped and [GGGGGG,&amp;hellip;​] is a comma separated list of the sha1 of the good commits.</source>
          <target state="translated">여기서 BBBBBB는 잘못된 커밋의 sha1 해시이고 MMMMMM은 건너 뛴 병합베이스의 sha1 해시이며 [GGGGGG,&amp;hellip;]는 좋은 커밋의 sha1에 대한 쉼표로 구분 된 목록입니다.</target>
        </trans-unit>
        <trans-unit id="680b4b58106e2de2a5502e2fe6c6becfefd1c13a" translate="yes" xml:space="preserve">
          <source>where BBBBBB is the sha1 hash of the bad merge base and [GGGGGG,&amp;hellip;​] is a comma separated list of the sha1 of the good commits.</source>
          <target state="translated">여기서 BBBBBB는 잘못된 병합 기준의 sha1 해시이고 [GGGGGG,&amp;hellip;]는 올바른 커밋의 sha1에 대한 쉼표로 구분 된 목록입니다.</target>
        </trans-unit>
        <trans-unit id="01b94d5edaa4a5bb3305b834d36b4d6854e48beb" translate="yes" xml:space="preserve">
          <source>where N is the number of commits in the (cleaned up) graph.</source>
          <target state="translated">여기서 N은 (정리 된) 그래프의 커밋 수입니다.</target>
        </trans-unit>
        <trans-unit id="6407d1e422646694bdae11953cb93a1df8de56bc" translate="yes" xml:space="preserve">
          <source>where N, M and T are all growing with the size your software.</source>
          <target state="translated">여기서 N, M 및 T는 소프트웨어 크기에 따라 커지고 있습니다.</target>
        </trans-unit>
        <trans-unit id="ec2fad52c7d0197ad36ff08789751c56c334e008" translate="yes" xml:space="preserve">
          <source>where X is the value associated to the commit in step 2) and N is the total number of commits in the graph.</source>
          <target state="translated">여기서 X는 2) 단계의 커밋과 관련된 값이고 N은 그래프의 총 커밋 수입니다.</target>
        </trans-unit>
        <trans-unit id="9b9ed61893eb7c2bafd0be803aa96fb6d205a9d7" translate="yes" xml:space="preserve">
          <source>where c is the number of rounds of test (so a small constant) and b is the ratio of bug per commit (hopefully a small constant too).</source>
          <target state="translated">여기서 c는 테스트 라운드 수 (따라서 작은 상수)이고 b는 커밋 당 버그 비율입니다 (아마도 작은 상수).</target>
        </trans-unit>
        <trans-unit id="1a624082bf253d770b458beb704b9dc35f6f9180" translate="yes" xml:space="preserve">
          <source>where commits quoted with ' have been rebased.</source>
          <target state="translated">'로 인용 된 커밋이 리베이스되었습니다.</target>
        </trans-unit>
        <trans-unit id="45df5ab8c4dc240685506a83e97655edcd922e22" translate="yes" xml:space="preserve">
          <source>where information_if_good(X) is the information we get if X is good and information_if_bad(X) is the information we get if X is bad.</source>
          <target state="translated">여기서 information_if_good (X)는 X가 양호하면 얻는 정보이고 information_if_bad (X)는 X가 불량하면 얻는 정보입니다.</target>
        </trans-unit>
        <trans-unit id="880d43fc4098dfdf3a8e70aaa2d705a66e40104b" translate="yes" xml:space="preserve">
          <source>where point 2. consists of several instances of</source>
          <target state="translated">포인트 2는 여러 인스턴스로 구성됩니다.</target>
        </trans-unit>
        <trans-unit id="e14c6e6aad7cb13ba2c4fb8ebe4ac714abb06147" translate="yes" xml:space="preserve">
          <source>where release-script is a shell script that looks like:</source>
          <target state="translated">여기서 release-script는 다음과 같은 쉘 스크립트입니다.</target>
        </trans-unit>
        <trans-unit id="82acdf63453ec79b5f29b88ecefbee398d7818fd" translate="yes" xml:space="preserve">
          <source>where the &lt;code&gt;-t&lt;/code&gt; tells &lt;code&gt;git cat-file&lt;/code&gt; to tell you what the &quot;type&quot; of the object is. Git will tell you that you have a &quot;blob&quot; object (i.e., just a regular file), and you can see the contents with</source>
          <target state="translated">여기서 &lt;code&gt;-t&lt;/code&gt; 는 &lt;code&gt;git cat-file&lt;/code&gt; 에게 객체의 &quot;유형&quot;이 무엇인지 알려줍니다. Git은 &quot;blob&quot;객체 (예 : 일반 파일)를 가지고 있으며 내용을 볼 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0700e92656fcf8c0d768cfb86568b7ab9cd62bcd" translate="yes" xml:space="preserve">
          <source>where the &lt;code&gt;-u&lt;/code&gt; flag means that you want the checkout to keep the index up to date (so that you don&amp;rsquo;t have to refresh it afterward), and the &lt;code&gt;-a&lt;/code&gt; flag means &quot;check out all files&quot; (if you have a stale copy or an older version of a checked out tree you may also need to add the &lt;code&gt;-f&lt;/code&gt; flag first, to tell &lt;code&gt;git checkout-index&lt;/code&gt; to &lt;strong&gt;force&lt;/strong&gt; overwriting of any old files).</source>
          <target state="translated">여기서 &lt;code&gt;-u&lt;/code&gt; 플래그는 체크 아웃을 통해 색인을 최신 상태로 유지하고 (나중에 새로 고칠 필요가 없음), &lt;code&gt;-a&lt;/code&gt; 플래그는 &quot;모든 파일을 체크 아웃&quot;함을 의미합니다 (부실한 경우) 복사 된 또는 체크 아웃 된 트리의 이전 버전은 &lt;code&gt;-f&lt;/code&gt; 플래그를 먼저 추가하여 &lt;code&gt;git checkout-index&lt;/code&gt; 에 이전 파일 을 &lt;strong&gt;강제로&lt;/strong&gt; 덮어 쓰 도록 지시 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="6ed6d34937022cdbab0f77d4fca84fb1b5326273" translate="yes" xml:space="preserve">
          <source>where the first argument is going to be used as the commit message if the merge can be resolved automatically.</source>
          <target state="translated">여기서 병합을 자동으로 해결할 수있는 경우 첫 번째 인수가 커밋 메시지로 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="adb961e27f2db980ed82910178a61170ef2a3a98" translate="yes" xml:space="preserve">
          <source>where the latter example shows how &lt;code&gt;git merge-index&lt;/code&gt; will stop trying to merge once anything has returned an error (i.e., &lt;code&gt;cat&lt;/code&gt; returned an error for the AA file, because it didn&amp;rsquo;t exist in the original, and thus &lt;code&gt;git merge-index&lt;/code&gt; didn&amp;rsquo;t even try to merge the MM thing).</source>
          <target state="translated">방법 후자의 예를 보여줍니다 곳에 &lt;code&gt;git merge-index&lt;/code&gt; 무엇이든 일단 병합하려고 중지 오류를 반환했습니다 (즉, &lt;code&gt;cat&lt;/code&gt; 원래 존재하지 않았다 때문에 AA 파일에서 오류를 반환하고, 따라서 &lt;code&gt;git merge-index&lt;/code&gt; didn를 심지어 MM을 병합하려고 시도하지 마십시오).</target>
        </trans-unit>
        <trans-unit id="b4b176d94b4e5b57a9988c8111bce77d3f5516e2" translate="yes" xml:space="preserve">
          <source>where the numbers denote the order of commit timestamps, &lt;code&gt;git
rev-list&lt;/code&gt; and friends with &lt;code&gt;--date-order&lt;/code&gt; show the commits in the timestamp order: 8 7 6 5 4 3 2 1.</source>
          <target state="translated">여기서 숫자는 커밋 타임 스탬프의 순서를 나타내고, &lt;code&gt;git rev-list&lt;/code&gt; 및 &lt;code&gt;--date-order&lt;/code&gt; 와 친구 는 타임 스탬프 순서로 커밋을 표시합니다. 8 7 6 5 4 3 2 1.</target>
        </trans-unit>
        <trans-unit id="eccaf84320060282d9fd2459e3ad6a5793be389b" translate="yes" xml:space="preserve">
          <source>where we know that Y is good and BFC is bad, and where BBC and X1 to X6 are untestable.</source>
          <target state="translated">Y가 좋고 BFC가 나쁘다는 것을 알고 BBC와 X1에서 X6까지는 테스트 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="365862a50c0682caa8baa6f30edca76e3e5f81ed" translate="yes" xml:space="preserve">
          <source>where:</source>
          <target state="translated">where:</target>
        </trans-unit>
        <trans-unit id="12224e0d47803386c1c5ab270b562b4103fa9a58" translate="yes" xml:space="preserve">
          <source>which allows mailmap to replace both the name and the email of a commit matching both the specified commit name and email address.</source>
          <target state="translated">이것은 지정된 커밋 이름 및 이메일 주소와 일치하는 커밋의 이름과 이메일을 메일 맵으로 대체 할 수있게합니다.</target>
        </trans-unit>
        <trans-unit id="aa78afe44bd7e01286b8053a5a5cedb1778e4328" translate="yes" xml:space="preserve">
          <source>which allows mailmap to replace both the name and the email of a commit matching the specified commit email address, and:</source>
          <target state="translated">이를 통해 mailmap은 지정된 커밋 이메일 주소와 일치하는 커밋의 이름과 이메일을 모두 대체 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="17e097887991cc5233ec6eed23fa6f1162150720" translate="yes" xml:space="preserve">
          <source>which allows mailmap to replace only the email part of a commit, and:</source>
          <target state="translated">이를 통해 mailmap은 커밋의 전자 메일 부분 만 바꿀 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5feb742b42becccbcd1f87ff8b509acf04e150fc" translate="yes" xml:space="preserve">
          <source>which correspond with the objects with names of &lt;code&gt;557db...&lt;/code&gt; and &lt;code&gt;f24c7...&lt;/code&gt; respectively.</source>
          <target state="translated">이름이 각각 &lt;code&gt;557db...&lt;/code&gt; 및 &lt;code&gt;f24c7...&lt;/code&gt; 객체에 해당합니다.</target>
        </trans-unit>
        <trans-unit id="6090290437d52106e7f5a734b7db63591febe95e" translate="yes" xml:space="preserve">
          <source>which does what it sounds like: it says that you want to see the commit history that is described by the dangling commit(s), but not the history that is described by all your existing branches and tags. Thus you get exactly the history reachable from that commit that is lost. (And notice that it might not be just one commit: we only report the &quot;tip of the line&quot; as being dangling, but there might be a whole deep and complex commit history that was dropped.)</source>
          <target state="translated">그것은 당신이 말하는 것과 같습니다 : 그것은 당신이 매달려있는 커밋 (들)에 의해 설명 된 커밋 히스토리를보고 싶다고 말하지만 모든 기존 브랜치와 태그에 의해 설명 된 히스토리는 아닙니다. 따라서 손실 된 커밋에서 도달 가능한 기록을 정확하게 얻을 수 있습니다. (그리고 그것은 단지 하나의 커밋이 아닐 수도 있습니다. 우리는 &quot;줄의 끝&quot;이 매달려있는 것으로보고하지만 완전히 깊고 복잡한 커밋 히스토리가 떨어질 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d519c51583f14631ce68777f45f836d15bdcce1b" translate="yes" xml:space="preserve">
          <source>which ends up doing the above for you.</source>
          <target state="translated">결국 당신을 위해 위의 작업을 수행합니다.</target>
        </trans-unit>
        <trans-unit id="4231e9bbece22592d70d1b6cfb1e26df6ceeca59" translate="yes" xml:space="preserve">
          <source>which is another incomprehensible object name. Again, if you want to, you can use &lt;code&gt;git cat-file -t 8988d...&lt;/code&gt; to see that this time the object is not a &quot;blob&quot; object, but a &quot;tree&quot; object (you can also use &lt;code&gt;git cat-file&lt;/code&gt; to actually output the raw object contents, but you&amp;rsquo;ll see mainly a binary mess, so that&amp;rsquo;s less interesting).</source>
          <target state="translated">이해할 수없는 또 다른 객체 이름입니다. 다시 원한다면 &lt;code&gt;git cat-file -t 8988d...&lt;/code&gt; 를 사용하여 이번에는 객체가 &quot;blob&quot;객체가 아니라 &quot;tree&quot;객체임을 확인할 수 있습니다 ( &lt;code&gt;git cat-file&lt;/code&gt; 을 사용할 수도 있습니다) 실제로 원시 객체 내용을 출력하지만 주로 바이너리 엉망이 보일 것이므로 덜 흥미 롭습니다).</target>
        </trans-unit>
        <trans-unit id="f206b6b9e29cca014d8da82cd5b1fe938d8fdf99" translate="yes" xml:space="preserve">
          <source>which is just Git&amp;rsquo;s way of saying that you haven&amp;rsquo;t been doing anything strange, and that it will have created a local &lt;code&gt;.git&lt;/code&gt; directory setup for your new project. You will now have a &lt;code&gt;.git&lt;/code&gt; directory, and you can inspect that with &lt;code&gt;ls&lt;/code&gt;. For your new empty project, it should show you three entries, among other things:</source>
          <target state="translated">Git은 이상한 일을하지 않았으며 새 프로젝트에 대한 로컬 &lt;code&gt;.git&lt;/code&gt; 디렉토리 설정을 만들 것이라고 말한 것입니다 . 이제 &lt;code&gt;.git&lt;/code&gt; 디렉토리 가 생겼 으며 &lt;code&gt;ls&lt;/code&gt; 로 검사 할 수 있습니다 . 비어있는 새 프로젝트의 경우 다음과 같은 세 가지 항목이 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="c944843ef8a8dec6b9ebc73d293f9db5f583dda1" translate="yes" xml:space="preserve">
          <source>which is obviously a very useful question too, since that tells you what you &lt;strong&gt;could&lt;/strong&gt; commit. Again, the output matches the &lt;code&gt;git diff-tree -r&lt;/code&gt; output to a tee, but with a twist.</source>
          <target state="translated">그것은 당신이 무엇을 할 &lt;strong&gt;수&lt;/strong&gt; 있는지 알려주기 때문에 분명히 매우 유용한 질문 입니다. 다시, 출력은 &lt;code&gt;git diff-tree -r&lt;/code&gt; 출력을 티 와 일치 시키지만 비틀어집니다.</target>
        </trans-unit>
        <trans-unit id="e1da9eacd7b85fc733537fdb7475ce8fcd32085e" translate="yes" xml:space="preserve">
          <source>which just writes the current &lt;code&gt;HEAD&lt;/code&gt; into the &lt;code&gt;.git/refs/tags/my-first-tag&lt;/code&gt; file, after which point you can then use this symbolic name for that particular state. You can, for example, do</source>
          <target state="translated">현재 &lt;code&gt;HEAD&lt;/code&gt; 를 &lt;code&gt;.git/refs/tags/my-first-tag&lt;/code&gt; 파일에 쓴 다음 해당 상태에 대해이 기호 이름을 사용할 수 있습니다. 예를 들어</target>
        </trans-unit>
        <trans-unit id="7f17646e4f0fbf24f9fd94523b574bd23187e3b7" translate="yes" xml:space="preserve">
          <source>which lets you do the same push with just</source>
          <target state="translated">그냥 같은 푸시를 할 수 있습니다</target>
        </trans-unit>
        <trans-unit id="6f3b475137324089c6993b0c953ba86405e375b7" translate="yes" xml:space="preserve">
          <source>which limits the annotation to the body of the &lt;code&gt;hello&lt;/code&gt; subroutine.</source>
          <target state="translated">주석을 &lt;code&gt;hello&lt;/code&gt; 서브 루틴 의 본문으로 제한합니다 .</target>
        </trans-unit>
        <trans-unit id="5a91b79ff3a07af8d47650f43544ae4373d642e5" translate="yes" xml:space="preserve">
          <source>which merges in any work that others might have done since the clone operation. If there are uncommitted changes in your working tree, commit them first before running git pull.</source>
          <target state="translated">복제 작업 이후 다른 사람이 수행 한 모든 작업에 병합됩니다. 작업 트리에 커밋되지 않은 변경 사항이 있으면 git pull을 실행하기 전에 먼저 커밋하십시오.</target>
        </trans-unit>
        <trans-unit id="926d2e81ba43986fed45a22a4b9fcd2ca6fe685d" translate="yes" xml:space="preserve">
          <source>which shows all of the unique lines (with numbers converted to &quot;X&quot;, to collapse &quot;User 0&quot;, &quot;User 1&quot;, etc into &quot;User X&quot;). This produces a much smaller output, and it is usually easy to quickly confirm that there is no private data in the stream.</source>
          <target state="translated">모든 고유 행을 표시합니다 (숫자가 &quot;X&quot;로 변환되고 &quot;사용자 0&quot;, &quot;사용자 1&quot;등이 &quot;사용자 X&quot;로 축소됨). 이것은 훨씬 작은 출력을 생성하며 일반적으로 스트림에 개인 데이터가 없음을 신속하게 확인하기 쉽습니다.</target>
        </trans-unit>
        <trans-unit id="6ea4495c56dcdc4697f0abd3bd0e08ec76b2cbc8" translate="yes" xml:space="preserve">
          <source>which starts an editor for you to write the commit message and tells you a bit about what you have done.</source>
          <target state="translated">커밋 메시지를 작성하는 편집기를 시작하고 수행 한 작업에 대해 조금 알려줍니다.</target>
        </trans-unit>
        <trans-unit id="596e3ee4d6bb8305794479d1c0edd894e543dee3" translate="yes" xml:space="preserve">
          <source>which used to be nothing more than a simple script around &lt;code&gt;ls .git/refs/heads&lt;/code&gt;. There will be an asterisk in front of the branch you are currently on.</source>
          <target state="translated">&lt;code&gt;ls .git/refs/heads&lt;/code&gt; 주위의 단순한 스크립트에 불과했습니다 . 현재있는 지점 앞에 별표가 있습니다.</target>
        </trans-unit>
        <trans-unit id="4405475f0380952bb11ad8e933d63fa446bc3375" translate="yes" xml:space="preserve">
          <source>which will automatically notice any modified (but not new) files, add them to the index, and commit, all in one step.</source>
          <target state="translated">수정 된 (새 파일은 아님) 파일을 자동으로 확인하고 인덱스에 추가 한 다음 한 번에 커밋합니다.</target>
        </trans-unit>
        <trans-unit id="622b001aea9cf3f236116550cd18e5ecb43f4714" translate="yes" xml:space="preserve">
          <source>which will create and store a blob object with the contents of somedirectory/myfile, and output the SHA-1 of that object. if you&amp;rsquo;re extremely lucky it might be 4b9458b3786228369c63936db65827de3cc06200, in which case you&amp;rsquo;ve guessed right, and the corruption is fixed!</source>
          <target state="translated">somedirectory / myfile의 내용으로 blob 객체를 만들어 저장하고 해당 객체의 SHA-1을 출력합니다. 운이 좋으면 4b9458b3786228369c63936db65827de3cc06200 일 수 있습니다.이 경우 올바르게 추측하고 손상이 수정되었습니다!</target>
        </trans-unit>
        <trans-unit id="d60ee7ec397ba315649044eb825f48329ddf5c7b" translate="yes" xml:space="preserve">
          <source>which will display the given version of the file.</source>
          <target state="translated">주어진 버전의 파일이 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="1b64d0d90683fa3f2edf067e5d34433a5aceab02" translate="yes" xml:space="preserve">
          <source>which will do all trivial merge operations for you directly in the index file, and you can just write the result out with &lt;code&gt;git write-tree&lt;/code&gt;.</source>
          <target state="translated">인덱스 파일에서 직접 모든 간단한 병합 작업을 수행하고 &lt;code&gt;git write-tree&lt;/code&gt; 로 결과를 쓸 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="1f896f06a84f38ba8dbe5f445e7d950c122beec1" translate="yes" xml:space="preserve">
          <source>which will end up doing all of the above for you.</source>
          <target state="translated">결국 위의 모든 작업을 수행하게됩니다.</target>
        </trans-unit>
        <trans-unit id="646e668f6eda257a2cfd3c7b531c3eadbff40e71" translate="yes" xml:space="preserve">
          <source>which will force a total index re-build from the tree pointed to by &lt;code&gt;HEAD&lt;/code&gt;. It resets the index contents to &lt;code&gt;HEAD&lt;/code&gt;, and then the &lt;code&gt;git update-index&lt;/code&gt; makes sure to match up all index entries with the checked-out files. If the original repository had uncommitted changes in its working tree, &lt;code&gt;git update-index --refresh&lt;/code&gt; notices them and tells you they need to be updated.</source>
          <target state="translated">그러면 &lt;code&gt;HEAD&lt;/code&gt; 가 가리키는 트리에서 총 인덱스를 다시 작성해야합니다 . 인덱스 내용을 &lt;code&gt;HEAD&lt;/code&gt; 로 재설정 한 다음 &lt;code&gt;git update-index&lt;/code&gt; 는 모든 인덱스 항목을 체크 아웃 된 파일과 일치시킵니다. 원래 저장소에 작업 트리에서 커밋되지 않은 변경 사항이있는 경우 &lt;code&gt;git update-index --refresh&lt;/code&gt; 는이를 감지 하고 업데이트해야 함을 알려줍니다.</target>
        </trans-unit>
        <trans-unit id="7b198e48c186b5015fa318fca85bda78f143bf02" translate="yes" xml:space="preserve">
          <source>which will force all existing &lt;code&gt;*.h&lt;/code&gt; files to be replaced with their cached copies. If an empty command line implied &quot;all&quot;, then this would force-refresh everything in the index, which was not the point. But since &lt;code&gt;git checkout-index&lt;/code&gt; accepts --stdin it would be faster to use:</source>
          <target state="translated">기존의 모든 &lt;code&gt;*.h&lt;/code&gt; 파일이 캐시 된 사본으로 대체됩니다. 빈 명령 줄에 &quot;all&quot;이 포함되어 있으면 인덱스의 모든 항목을 강제로 새로 고칠 수 있습니다. 그러나 &lt;code&gt;git checkout-index&lt;/code&gt; 는 --stdin을 받아들이므로 사용하는 것이 더 빠릅니다.</target>
        </trans-unit>
        <trans-unit id="ee89d3c5137ef588870b5a6fca3094d614229dc0" translate="yes" xml:space="preserve">
          <source>which will print out &quot;Hello World&quot;. The object &lt;code&gt;557db03&lt;/code&gt; is nothing more than the contents of your file &lt;code&gt;hello&lt;/code&gt;.</source>
          <target state="translated">&quot;Hello World&quot;가 인쇄됩니다. &lt;code&gt;557db03&lt;/code&gt; 객체 는 &lt;code&gt;hello&lt;/code&gt; 파일의 내용에 지나지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="f2039a406941243a8c8a6f96c7c49927e20cad63" translate="yes" xml:space="preserve">
          <source>which will produce a request to the upstream, summarizing the changes between the &lt;code&gt;v1.0&lt;/code&gt; release and your &lt;code&gt;master&lt;/code&gt;, to pull it from your public repository.</source>
          <target state="translated">&lt;code&gt;v1.0&lt;/code&gt; 릴리스와 &lt;code&gt;master&lt;/code&gt; 간의 변경 사항을 요약 하여 공개 저장소에서 가져 오기 위해 업스트림에 요청을 생성 합니다.</target>
        </trans-unit>
        <trans-unit id="c0551d07d913312d2ddd8ef08fb5fb0807a11f60" translate="yes" xml:space="preserve">
          <source>which will replace the old commit by a new commit incorporating your changes, giving you a chance to edit the old commit message first.</source>
          <target state="translated">변경 사항을 통합 한 새 커밋으로 이전 커밋을 대체하여 이전 커밋 메시지를 먼저 편집 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a6300dcd18ec514685944256988103a2b65f9224" translate="yes" xml:space="preserve">
          <source>which will replace the old commit by a new commit incorporating your changes, giving you a chance to edit the old commit message first. This is useful for fixing typos in your last commit, or for adjusting the patch contents of a poorly staged commit.</source>
          <target state="translated">변경 사항을 통합 한 새 커밋으로 이전 커밋을 대체하여 이전 커밋 메시지를 먼저 편집 할 수 있습니다. 이것은 마지막 커밋에서 오타를 수정하거나 잘못 준비된 커밋의 패치 내용을 조정하는 데 유용합니다.</target>
        </trans-unit>
        <trans-unit id="a19b4a25a77579924bcaedf0b8a09209e602238c" translate="yes" xml:space="preserve">
          <source>which will run gitk and label the commit it chose with a marker that says &quot;bisect&quot;. Choose a safe-looking commit nearby, note its commit id, and check it out with:</source>
          <target state="translated">gitk를 실행하고 &quot;bisect&quot;라고 표시된 마커로 선택한 커밋에 레이블을 붙입니다. 근처에서 안전 해 보이는 커밋을 선택하고 커밋 ID를 확인한 후 다음을 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="6b4d53dde5eb6ba322049d8d1307557417eea303" translate="yes" xml:space="preserve">
          <source>which will sign the current &lt;code&gt;HEAD&lt;/code&gt; (but you can also give it another argument that specifies the thing to tag, e.g., you could have tagged the current &lt;code&gt;mybranch&lt;/code&gt; point by using &lt;code&gt;git tag &amp;lt;tagname&amp;gt; mybranch&lt;/code&gt;).</source>
          <target state="translated">현재 &lt;code&gt;HEAD&lt;/code&gt; 에 서명합니다 (그러나 태그 할 것을 지정하는 다른 인수를 줄 수도 있습니다 (예 : &lt;code&gt;git tag &amp;lt;tagname&amp;gt; mybranch&lt;/code&gt; 사용하여 현재 &lt;code&gt;mybranch&lt;/code&gt; 지점에 태그를 지정할 수 있음 ).</target>
        </trans-unit>
        <trans-unit id="9aa8e4c0548086d885b10aec14a39a9d8e8f6bfb" translate="yes" xml:space="preserve">
          <source>which will simply &lt;code&gt;create&lt;/code&gt; the branch, but will not do anything further. You can then later &amp;mdash; once you decide that you want to actually develop on that branch &amp;mdash; switch to that branch with a regular &lt;code&gt;git switch&lt;/code&gt; with the branchname as the argument.</source>
          <target state="translated">이는 단순히 것 &lt;code&gt;create&lt;/code&gt; 지점을하지만, 더 아무것도하지 않습니다. 그런 다음 나중에 해당 브랜치에서 실제로 개발하기로 결정한 후 branchname을 인수로 사용하여 일반 &lt;code&gt;git switch&lt;/code&gt; 사용하여 해당 브랜치로 전환 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="aa88a7b47ab645b66b6b1a2b1b84070517d007bb" translate="yes" xml:space="preserve">
          <source>which will very loudly warn you that you&amp;rsquo;re now committing a merge (which is correct, so never mind), and you can write a small merge message about your adventures in &lt;code&gt;git merge&lt;/code&gt;-land.</source>
          <target state="translated">이제 병합을 커밋하고 있음을 경고합니다. (올바르므로 신경 쓰지 마십시오) &lt;code&gt;git merge&lt;/code&gt; -land 에서 모험에 대한 작은 병합 메시지를 작성할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="b2e72557ade65af451c7d7f6f0f18d03a88d82c2" translate="yes" xml:space="preserve">
          <source>whitespace</source>
          <target state="translated">whitespace</target>
        </trans-unit>
        <trans-unit id="54f2df0bf1a987e3dd8259893c66a199ea7ed026" translate="yes" xml:space="preserve">
          <source>will commit the result of the merge. Finally,</source>
          <target state="translated">병합 결과를 커밋합니다. 드디어,</target>
        </trans-unit>
        <trans-unit id="1ccd0ed5c930df1c956a0f1a7ecbad8af56bdb40" translate="yes" xml:space="preserve">
          <source>will create a new branch based at the current &lt;code&gt;HEAD&lt;/code&gt; position, and switch to it.</source>
          <target state="translated">현재 &lt;code&gt;HEAD&lt;/code&gt; 위치를 기준으로 새 분기를 생성 하고 전환합니다.</target>
        </trans-unit>
        <trans-unit id="08eb2f72b83911d96ccdff3558e8c62e75a1543c" translate="yes" xml:space="preserve">
          <source>will create a new branch named &lt;code&gt;example-master&lt;/code&gt; and store in it the branch named &lt;code&gt;master&lt;/code&gt; from the repository at the given URL. If you already have a branch named example-master, it will attempt to &lt;a href=&quot;#fast-forwards&quot;&gt;fast-forward&lt;/a&gt; to the commit given by example.com&amp;rsquo;s master branch. In more detail:</source>
          <target state="translated">&lt;code&gt;example-master&lt;/code&gt; 라는 새 분기를 작성 하고 지정된 URL의 저장소에서 &lt;code&gt;master&lt;/code&gt; 라는 분기를 저장 합니다. example-master라는 브랜치가 이미있는 경우 example.com의 마스터 브랜치가 제공 한 커밋 으로 &lt;a href=&quot;#fast-forwards&quot;&gt;빨리 감기&lt;/a&gt; 를 시도합니다 . 더 자세하게:</target>
        </trans-unit>
        <trans-unit id="829ae0156bbe57588dfbbcb9da188444e73ef93d" translate="yes" xml:space="preserve">
          <source>will do it for you. If you followed the tutorial examples, you would have accumulated about 17 objects in &lt;code&gt;.git/objects/??/&lt;/code&gt; directories by now. &lt;code&gt;git repack&lt;/code&gt; tells you how many objects it packed, and stores the packed file in the &lt;code&gt;.git/objects/pack&lt;/code&gt; directory.</source>
          <target state="translated">당신을 위해 그것을 할 것입니다. 튜토리얼 예제를 따르면, 지금까지 &lt;code&gt;.git/objects/??/&lt;/code&gt; 디렉토리에 약 17 개의 객체가 누적되었을 것 입니다. &lt;code&gt;git repack&lt;/code&gt; 은 패킹 된 오브젝트 수를 알려주고 패킹 된 파일을 &lt;code&gt;.git/objects/pack&lt;/code&gt; 디렉토리에 저장합니다.</target>
        </trans-unit>
        <trans-unit id="8b01fbb2a46a214bfdbfd7742f97c589307b256a" translate="yes" xml:space="preserve">
          <source>will fail with a 404 error.</source>
          <target state="translated">404 오류와 함께 실패합니다.</target>
        </trans-unit>
        <trans-unit id="91d301505491265c6e2399ac989937f0647c97bd" translate="yes" xml:space="preserve">
          <source>will find B0, and</source>
          <target state="translated">B0을 찾을 것이고</target>
        </trans-unit>
        <trans-unit id="d606d53bb777310b3caa2f5c1252a7abc0c05998" translate="yes" xml:space="preserve">
          <source>will generate a file with a patch for each commit reachable from test but not from master.</source>
          <target state="translated">테스트에서 도달 할 수 있지만 마스터에서는 도달 할 수없는 각 커밋에 대한 패치가있는 파일을 생성합니다.</target>
        </trans-unit>
        <trans-unit id="1afbeba178767b29faba2c040cdc826445f01c5b" translate="yes" xml:space="preserve">
          <source>will give raw access to the project&amp;rsquo;s Git dir (so that the project can be cloned), while</source>
          <target state="translated">프로젝트의 Git dir에 대한 원시 액세스 권한을 부여하고 (프로젝트를 복제 할 수 있도록)</target>
        </trans-unit>
        <trans-unit id="7dcf28ad8eeddb53b67a9572692ae12b04b9efd2" translate="yes" xml:space="preserve">
          <source>will list commits made in the master branch but not in the stable branch, while</source>
          <target state="translated">마스터 브랜치에서 이루어 지지만 안정적인 브랜치에서는 이루어지지 않은 커밋을 나열합니다.</target>
        </trans-unit>
        <trans-unit id="659f06aa82993cd89bd2896d86d3ef6fd99957da" translate="yes" xml:space="preserve">
          <source>will map to the path &lt;code&gt;/srv/git/foo/bar.git&lt;/code&gt; on the filesystem.</source>
          <target state="translated">파일 시스템 의 경로 &lt;code&gt;/srv/git/foo/bar.git&lt;/code&gt; 에 매핑됩니다 .</target>
        </trans-unit>
        <trans-unit id="39391e1d9ce3c9f0c6c56148e283e40b79a2a95c" translate="yes" xml:space="preserve">
          <source>will match branches &lt;code&gt;release&lt;/code&gt;, &lt;code&gt;rese&lt;/code&gt;, &lt;code&gt;re123se&lt;/code&gt;, however</source>
          <target state="translated">그러나 &lt;code&gt;release&lt;/code&gt; , &lt;code&gt;rese&lt;/code&gt; , &lt;code&gt;re123se&lt;/code&gt; 와 일치합니다.</target>
        </trans-unit>
        <trans-unit id="524b13b8971c2aa8dd80a3600da9a5117eb25702" translate="yes" xml:space="preserve">
          <source>will only match the exact branch called &quot;master&quot;.</source>
          <target state="translated">&quot;마스터&quot;라는 정확한 지점과 만 일치합니다.</target>
        </trans-unit>
        <trans-unit id="0719320bc99900a7e9ecb22adb0d109429bf2e2d" translate="yes" xml:space="preserve">
          <source>will only show notes from &lt;code&gt;refs/notes/bar&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;refs/notes/bar&lt;/code&gt; 의 메모 만 표시 합니다 .</target>
        </trans-unit>
        <trans-unit id="d8594cb138dbb7c2577e3367c58d350bbfa52319" translate="yes" xml:space="preserve">
          <source>will produce a numbered series of files in the current directory, one for each patch in the current branch but not in &lt;code&gt;origin/HEAD&lt;/code&gt;.</source>
          <target state="translated">현재 디렉토리에 번호가 매겨진 일련의 파일을 생성합니다. 현재 브랜치의 각 패치마다 하나씩이지만 &lt;code&gt;origin/HEAD&lt;/code&gt; 는 아닙니다 .</target>
        </trans-unit>
        <trans-unit id="7fb2e31af4d35745a1adfccc47ff678471fa1118" translate="yes" xml:space="preserve">
          <source>will produce an error.</source>
          <target state="translated">오류가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="6c9d5d908eea29dd35ba1bd73c924bd0cff3976b" translate="yes" xml:space="preserve">
          <source>will produce empty output if and only if v1.5.0-rc1 includes e05db0fd, because it outputs only commits that are not reachable from v1.5.0-rc1.</source>
          <target state="translated">v1.5.0-rc1에 e05db0fd가 포함 된 경우에만 v1.5.0-rc1에서 도달 할 수없는 커밋 만 출력하므로 빈 출력이 생성됩니다.</target>
        </trans-unit>
        <trans-unit id="d86bc3a6e58262f41ac027b92a1112f43f83df31" translate="yes" xml:space="preserve">
          <source>will provide human-friendly gitweb access.</source>
          <target state="translated">인간 친화적 인 gitweb 액세스를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="0a6da4e136d7ea05b1c5117818e48ea83e2a623f" translate="yes" xml:space="preserve">
          <source>will replay D0, D1 and D on top of B to create a new history of this shape:</source>
          <target state="translated">이 모양의 새로운 이력을 만들기 위해 B 위에서 D0, D1 및 D를 재생합니다.</target>
        </trans-unit>
        <trans-unit id="12f69b768fbdb877106cba3b6d6afbd305a42b1c" translate="yes" xml:space="preserve">
          <source>will result in:</source>
          <target state="translated">결과 :</target>
        </trans-unit>
        <trans-unit id="2f2b51229d2d2167e0cc3202015392cc28ab8187" translate="yes" xml:space="preserve">
          <source>will return no commits when the two branches are equal.</source>
          <target state="translated">두 가지가 같으면 커밋을 반환하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="d7fb4c7e19f587f366fe3ea0e98028a92d8fea8e" translate="yes" xml:space="preserve">
          <source>will show a nice graphical representation of the resulting history.</source>
          <target state="translated">결과 기록의 멋진 그래픽 표현을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="a5a8e7b047472640f5d146677e9c728928275e66" translate="yes" xml:space="preserve">
          <source>will show the list of commits made on the stable branch but not the master branch.</source>
          <target state="translated">마스터 브랜치가 아닌 안정적인 브랜치에서 이루어진 커밋 목록이 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="68545f3a6f4d69e42947665de20411f9ec15d387" translate="yes" xml:space="preserve">
          <source>will show this. Once you&amp;rsquo;ve edited the files to resolve the conflicts,</source>
          <target state="translated">이것을 보여줄 것입니다. 충돌을 해결하기 위해 파일을 편집 한 후에는</target>
        </trans-unit>
        <trans-unit id="97b06ba16f479d1bb2f14d02f495998e3aa43a36" translate="yes" xml:space="preserve">
          <source>will show what HEAD pointed to one week ago, not what the current branch pointed to one week ago. This allows you to see the history of what you&amp;rsquo;ve checked out.</source>
          <target state="translated">HEAD가 1 주일 전을 가리키는 것이 아니라 1 주일 전을 가리키는 것을 보여줍니다. 이를 통해 체크 아웃 한 내역을 볼 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6c7766e6bd2c3044e5f437a985d8e97c1aaa2741" translate="yes" xml:space="preserve">
          <source>will show you graphically both of your branches (that&amp;rsquo;s what the &lt;code&gt;--all&lt;/code&gt; means: normally it will just show you your current &lt;code&gt;HEAD&lt;/code&gt;) and their histories. You can also see exactly how they came to be from a common source.</source>
          <target state="translated">그래픽으로 가지 모두를 표시합니다 (그 무엇의 &lt;code&gt;--all&lt;/code&gt; 수단 : 일반적으로 그것은 단지 당신에게 당신의 현재 표시됩니다 &lt;code&gt;HEAD&lt;/code&gt; )와 그 역사를. 또한 그들이 어떻게 일반적인 출처에서 왔는지 알 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="88356df00c3516762073ccbdc78aa678f20cae5f" translate="yes" xml:space="preserve">
          <source>will tell you where it&amp;rsquo;s pointing. To get the list of branches you have, you can say</source>
          <target state="translated">어디를 가리키는 지 알려줄 것입니다. 가지고있는 지점 목록을 얻으려면 말할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6cdd86cb78566c41c85784dc0a0c2629a62ca7ce" translate="yes" xml:space="preserve">
          <source>will tell you whether the contents of the project are the same at the two branches; in theory, however, it&amp;rsquo;s possible that the same project contents could have been arrived at by two different historical routes. You could compare the object names:</source>
          <target state="translated">프로젝트의 내용이 두 지점에서 동일한 지 여부를 알려줍니다. 그러나 이론적으로는 동일한 프로젝트 내용이 두 개의 다른 역사적 경로에 도달했을 수 있습니다. 객체 이름을 비교할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b9ee4c8cf1d80f9a0a5a4a11e832c20bacca676c" translate="yes" xml:space="preserve">
          <source>will try to use konqueror first. But this may fail (for example, if DISPLAY is not set) and in that case emacs' woman mode will be tried.</source>
          <target state="translated">먼저 Konqueror를 사용하려고합니다. 그러나 이것은 실패 할 수 있으며 (예를 들어, DISPLAY가 설정되지 않은 경우) emacs의 여성 모드가 시도됩니다.</target>
        </trans-unit>
        <trans-unit id="f6031424c5b15149805cc3d0c8b0eac718e1d424" translate="yes" xml:space="preserve">
          <source>will update the index with any files that you&amp;rsquo;ve modified or removed and create a commit, all in one step.</source>
          <target state="translated">한 번에 수정하거나 제거한 파일로 색인을 업데이트하고 커밋을 만듭니다.</target>
        </trans-unit>
        <trans-unit id="9b84bddfaa68e5df6de8681c72c0df1fa4a7fa1b" translate="yes" xml:space="preserve">
          <source>will use HEAD to produce a gzipped tar archive in which each filename is preceded by &lt;code&gt;project/&lt;/code&gt;. The output file format is inferred from the output file extension if possible, see &lt;a href=&quot;git-archive&quot;&gt;git-archive[1]&lt;/a&gt; for details.</source>
          <target state="translated">HEAD를 사용하여 각 파일 이름 앞에 &lt;code&gt;project/&lt;/code&gt; 가있는 zip 압축 tar 아카이브를 생성합니다 . 출력 파일 형식은 가능한 경우 출력 파일 확장자에서 유추됩니다 . 자세한 내용 은 &lt;a href=&quot;git-archive&quot;&gt;git-archive [1]&lt;/a&gt; 을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="d00bc787a2d4b77c2ff5ea6fc53c8c29f15dc358" translate="yes" xml:space="preserve">
          <source>winmerge</source>
          <target state="translated">winmerge</target>
        </trans-unit>
        <trans-unit id="20800520495b2303a3ac17dd27fe3c4163987c1e" translate="yes" xml:space="preserve">
          <source>working directory &amp;rarr; index</source>
          <target state="translated">작업 디렉토리 &amp;rarr; 색인</target>
        </trans-unit>
        <trans-unit id="4eafbf4c3acd9084fd21be8ac9ae916a897b122b" translate="yes" xml:space="preserve">
          <source>working tree</source>
          <target state="translated">작업 트리</target>
        </trans-unit>
        <trans-unit id="94449c5bf46256cd2c8d8717f9940ed8cf221db3" translate="yes" xml:space="preserve">
          <source>worktree</source>
          <target state="translated">worktree</target>
        </trans-unit>
        <trans-unit id="efd3ab67ae8bdaac67f76d19bad0017021556659" translate="yes" xml:space="preserve">
          <source>worktree.guessRemote</source>
          <target state="translated">worktree.guessRemote</target>
        </trans-unit>
        <trans-unit id="5c46c9b5886a79e1bb6967377b51e67078ac410e" translate="yes" xml:space="preserve">
          <source>worktreepath</source>
          <target state="translated">worktreepath</target>
        </trans-unit>
        <trans-unit id="32d1d8cd691bd73eb0e8445a53eb45a6219cd631" translate="yes" xml:space="preserve">
          <source>worktrees</source>
          <target state="translated">worktrees</target>
        </trans-unit>
        <trans-unit id="917d24c19e6172d01ee58d4d910cf520abde5e00" translate="yes" xml:space="preserve">
          <source>worktrees/&amp;lt;id&amp;gt;/config.worktree</source>
          <target state="translated">worktrees/&amp;lt;id&amp;gt;/config.worktree</target>
        </trans-unit>
        <trans-unit id="7a2a4f1b20c8a2e59a305206002b8b028eaf5833" translate="yes" xml:space="preserve">
          <source>worktrees/&amp;lt;id&amp;gt;/gitdir</source>
          <target state="translated">worktrees/&amp;lt;id&amp;gt;/gitdir</target>
        </trans-unit>
        <trans-unit id="7dc15d067a8c70411dcc35bf1efd2caa26ebdc18" translate="yes" xml:space="preserve">
          <source>worktrees/&amp;lt;id&amp;gt;/locked</source>
          <target state="translated">worktrees/&amp;lt;id&amp;gt;/locked</target>
        </trans-unit>
        <trans-unit id="2176dfd0874fe19ae8bdc1313d3e537d33c3c4c7" translate="yes" xml:space="preserve">
          <source>would be of roughly the same length. Finding the change which introduces a regression is thus reduced to a binary search: repeatedly generate and test new 'midpoint&amp;rsquo;s until the commit chain is of length one. Cannot be combined with --first-parent.</source>
          <target state="translated">대략 같은 길이입니다. 따라서 회귀를 유발하는 변경을 찾는 것이 이진 검색으로 줄어 듭니다. 커밋 체인 길이가 1이 될 때까지 새로운 '중간 점'을 반복적으로 생성하고 테스트하십시오. --first-parent와 함께 사용할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="a0ebc00ce2803c4b05ae16c519fdb6afbeecd7c8" translate="yes" xml:space="preserve">
          <source>would be:</source>
          <target state="translated">될 것입니다 :</target>
        </trans-unit>
        <trans-unit id="ec462e1209bb81dd4d4da74d7cc622ecbd59d27e" translate="yes" xml:space="preserve">
          <source>would create the lightweight tag &lt;code&gt;refs/tags/938&lt;/code&gt; referring to whatever commit mark &lt;code&gt;:938&lt;/code&gt; references.</source>
          <target state="translated">커밋 마크 &lt;code&gt;:938&lt;/code&gt; 참조를 참조 하여 경량 태그 &lt;code&gt;refs/tags/938&lt;/code&gt; 을 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="0e64309207a65a066015e183c95df0e98fa9beef" translate="yes" xml:space="preserve">
          <source>would output something like:</source>
          <target state="translated">다음과 같이 출력됩니다 :</target>
        </trans-unit>
        <trans-unit id="17d8e6d8f0677b6f8b2c882d7facbbbc37143301" translate="yes" xml:space="preserve">
          <source>would remove them for you.</source>
          <target state="translated">당신을 위해 그들을 제거합니다.</target>
        </trans-unit>
        <trans-unit id="a4d42effbae7f1dd903be5bc58250775e8fdb07f" translate="yes" xml:space="preserve">
          <source>would result in the removal of commits F and G:</source>
          <target state="translated">커밋 F와 G가 제거됩니다.</target>
        </trans-unit>
        <trans-unit id="e178c9aaffe5991230dd9ff28b8f996011875161" translate="yes" xml:space="preserve">
          <source>would result in:</source>
          <target state="translated">결과 :</target>
        </trans-unit>
        <trans-unit id="e1d0c6c1c29e6ad5164072a5b21340dca7fcb052" translate="yes" xml:space="preserve">
          <source>write</source>
          <target state="translated">write</target>
        </trans-unit>
        <trans-unit id="a6956dab1239c6c1fbc46a263df37854151bdad3" translate="yes" xml:space="preserve">
          <source>write, in the test suite, a test script that exposes the regression</source>
          <target state="translated">테스트 스위트에서 회귀를 노출시키는 테스트 스크립트 작성</target>
        </trans-unit>
        <trans-unit id="b51c03916d43845d38d787ba1177d97c35d6d8b0" translate="yes" xml:space="preserve">
          <source>write-tree</source>
          <target state="translated">write-tree</target>
        </trans-unit>
        <trans-unit id="b16c937fc5f3c005b0c3db817c6328aabab56313" translate="yes" xml:space="preserve">
          <source>xxdiff</source>
          <target state="translated">xxdiff</target>
        </trans-unit>
        <trans-unit id="edb0f5b1f639a3886e3180c47fe86c3a6a263842" translate="yes" xml:space="preserve">
          <source>yields</source>
          <target state="translated">yields</target>
        </trans-unit>
        <trans-unit id="bb7860b062b4c7f6477197562066897cfac86203" translate="yes" xml:space="preserve">
          <source>you can feed the following input to &lt;code&gt;--index-info&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;--index-info&lt;/code&gt; 에 다음 입력을 공급할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="f512f3664f28acf3b646ac106562aabf5b3fd0fa" translate="yes" xml:space="preserve">
          <source>you can refer to 1b2e1d63ff by the name &quot;v2.5&quot;. If you intend to share this name with other people (for example, to identify a release version), you should create a &quot;tag&quot; object, and perhaps sign it; see &lt;a href=&quot;git-tag&quot;&gt;git-tag[1]&lt;/a&gt; for details.</source>
          <target state="translated">&quot;v2.5&quot;라는 이름으로 1b2e1d63ff를 참조 할 수 있습니다. 이 이름을 다른 사람과 공유하려면 (예 : 릴리스 버전 식별) &quot;태그&quot;객체를 작성하고 서명해야합니다. 자세한 내용은 &lt;a href=&quot;git-tag&quot;&gt;git-tag [1]&lt;/a&gt; 을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="f21aea3b773b85ed15a02e0520c4596660ede62d" translate="yes" xml:space="preserve">
          <source>you can set the filemode to true with</source>
          <target state="translated">당신은 파일 모드를 true로 설정할 수 있습니다</target>
        </trans-unit>
        <trans-unit id="7dc43142eea4044676647e6bd97cb9f7eb183068" translate="yes" xml:space="preserve">
          <source>you can tell about the change after the fact.</source>
          <target state="translated">당신은 사실 후에 변화에 대해 말할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="55ae0d2f317b0ae71a87fb90b36301e7c9181a34" translate="yes" xml:space="preserve">
          <source>you could run &lt;code&gt;git rebase master topic&lt;/code&gt;, to bring yourself up to date before your topic is ready to be sent upstream. This would result in falling back to a three-way merge, and it would conflict the same way as the test merge you resolved earlier. &lt;code&gt;git rerere&lt;/code&gt; will be run by &lt;code&gt;git rebase&lt;/code&gt; to help you resolve this conflict.</source>
          <target state="translated">&lt;code&gt;git rebase master topic&lt;/code&gt; 을 실행 하여 주제가 업스트림으로 전송되기 전에 자신을 최신 상태로 유지할 수 있습니다. 결과적으로 3 방향 병합으로 돌아가고 앞에서 해결 한 테스트 병합과 같은 방식으로 충돌합니다. &lt;code&gt;git rerere&lt;/code&gt; 는 &lt;code&gt;git rebase&lt;/code&gt; 에 의해 실행 되어이 충돌을 해결하는 데 도움이됩니다.</target>
        </trans-unit>
        <trans-unit id="ce05848d37149bd7a63386fce7bea6475bab3138" translate="yes" xml:space="preserve">
          <source>you have now created two files in your working tree (aka &lt;code&gt;working directory&lt;/code&gt;), but to actually check in your hard work, you will have to go through two steps:</source>
          <target state="translated">작업 트리에 두 개의 파일 (일명 &lt;code&gt;working directory&lt;/code&gt; )을 만들었지 만 실제로 열심히 작업을 확인하려면 다음 두 단계를 거쳐야합니다.</target>
        </trans-unit>
        <trans-unit id="0b8f2b63647cf0b4cf2e4ae1c829a8efa59acde9" translate="yes" xml:space="preserve">
          <source>you need to tell Git if you added a new file; removal and modification will be caught if you do &lt;code&gt;git commit -a&lt;/code&gt; later.</source>
          <target state="translated">새 파일을 추가했다면 Git에 알려야한다. 나중에 &lt;code&gt;git commit -a&lt;/code&gt; 을 수행하면 제거 및 수정이 포착됩니다 .</target>
        </trans-unit>
        <trans-unit id="e6782f0c216c9a85ff68244a10ed13eb161478ca" translate="yes" xml:space="preserve">
          <source>you run into problems with deletions whenever the user is simply trying to rename files (because attempting to delete files that don&amp;rsquo;t exist looks like a no-op; it takes some chicanery to remap deletes across file renames when the renames happen via arbitrary user-provided shell)</source>
          <target state="translated">사용자가 단순히 파일 이름을 바꾸려고 할 때마다 삭제 문제가 발생합니다 (존재하지 않는 파일을 삭제하려고 시도하면 no-op처럼 보입니다. 임의의 이름이 임의의 사용자를 통해 발생할 때 파일 이름을 바꾸면 삭제를 다시 매핑하는 데 약간의 시간이 걸립니다) 제공 쉘)</target>
        </trans-unit>
        <trans-unit id="e804abbe97d54cb4bc4f8871e020be4bbbadaebf" translate="yes" xml:space="preserve">
          <source>you try to unset an option which does not exist (ret=5),</source>
          <target state="translated">존재하지 않는 옵션을 설정 해제하려고 시도합니다 (ret = 5).</target>
        </trans-unit>
        <trans-unit id="fe0543b68420ac22d2548c7e91b972d8572fa97d" translate="yes" xml:space="preserve">
          <source>you try to unset/set an option for which multiple lines match (ret=5), or</source>
          <target state="translated">여러 줄이 일치하는 옵션 (ret = 5)을 설정 해제 / 설정하려고 시도하거나</target>
        </trans-unit>
        <trans-unit id="efa92f0afbb0477eac8bafddb9f3892f7f60093d" translate="yes" xml:space="preserve">
          <source>you try to use an invalid regexp (ret=6).</source>
          <target state="translated">잘못된 정규 표현식을 사용하려고합니다 (ret = 6).</target>
        </trans-unit>
        <trans-unit id="deeffff664f882f6292365d3f4355f0fd1f2950a" translate="yes" xml:space="preserve">
          <source>you walk the index in order, and ignore all entries of stage 0, since they&amp;rsquo;ve already been done.</source>
          <target state="translated">인덱스를 순서대로 진행하고 이미 완료되었으므로 0 단계의 모든 항목을 무시합니다.</target>
        </trans-unit>
        <trans-unit id="e40858f3b1ea33484ad870e370d3ce3403d6e862" translate="yes" xml:space="preserve">
          <source>you will end up with the fixed history</source>
          <target state="translated">당신은 고정 된 역사로 끝날 것입니다</target>
        </trans-unit>
        <trans-unit id="3feccc2142131c34ccba809c47212fd9f28c1cb4" translate="yes" xml:space="preserve">
          <source>you would get an output like this:</source>
          <target state="translated">다음과 같은 출력을 얻습니다.</target>
        </trans-unit>
        <trans-unit id="0bae78553462e7a34534afd02b3496453c11a90d" translate="yes" xml:space="preserve">
          <source>you&amp;rsquo;ll get a list of all existing branches:</source>
          <target state="translated">당신은 모든 기존 지점의 목록을 얻을 수 있습니다 :</target>
        </trans-unit>
        <trans-unit id="38aa53de31c04bcfae9163cc23b7963ed9cf90f7" translate="yes" xml:space="preserve">
          <source>zebra</source>
          <target state="translated">zebra</target>
        </trans-unit>
        <trans-unit id="f13e27693c85aed522df8c3fcb0bb0110ca54e14" translate="yes" xml:space="preserve">
          <source>zip</source>
          <target state="translated">zip</target>
        </trans-unit>
        <trans-unit id="1abe74473dcd47570993fe227357e8340418b7f4" translate="yes" xml:space="preserve">
          <source>~/.git-credentials</source>
          <target state="translated">~/.git-credentials</target>
        </trans-unit>
        <trans-unit id="9e794d254d2ea7f1b185c970ca6ed90747ac8823" translate="yes" xml:space="preserve">
          <source>~/.gitconfig</source>
          <target state="translated">~/.gitconfig</target>
        </trans-unit>
        <trans-unit id="afde40b275af0ad36ff7b6e7f32ecc59bab0a691" translate="yes" xml:space="preserve">
          <source>~/.gitconfig push.pushoption = c</source>
          <target state="translated">~/.gitconfig push.pushoption = c</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
