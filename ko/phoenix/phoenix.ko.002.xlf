<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="phoenix">
    <body>
      <group id="phoenix">
        <trans-unit id="34324e9fd35c9a1811e0fb02e02bf761b48da63d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:debug_errors&lt;/code&gt; - when &lt;code&gt;true&lt;/code&gt;, uses &lt;a href=&quot;../plug/1.5.1/plug.debugger&quot;&gt;&lt;code&gt;Plug.Debugger&lt;/code&gt;&lt;/a&gt; functionality for debugging failures in the application. Recommended to be set to &lt;code&gt;true&lt;/code&gt; only in development as it allows listing of the application source code during debugging. Defaults to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;:debug_errors&lt;/code&gt; - when &lt;code&gt;true&lt;/code&gt;, uses &lt;a href=&quot;../plug/1.5.1/plug.debugger&quot;&gt;&lt;code&gt;Plug.Debugger&lt;/code&gt;&lt;/a&gt; functionality for debugging failures in the application. Recommended to be set to &lt;code&gt;true&lt;/code&gt; only in development as it allows listing of the application source code during debugging. Defaults to &lt;code&gt;false&lt;/code&gt;.</target>
        </trans-unit>
        <trans-unit id="64ca1e57622446e140c167b2b7ae25b59e2ec161" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:default&lt;/code&gt; - Sets the default value on the schema and the struct. The default value is calculated at compilation time, so don&amp;rsquo;t use expressions like &lt;code&gt;DateTime.utc_now&lt;/code&gt; or &lt;code&gt;Ecto.UUID.generate&lt;/code&gt; as they would then be the same for all records.</source>
          <target state="translated">&lt;code&gt;:default&lt;/code&gt; - Sets the default value on the schema and the struct. The default value is calculated at compilation time, so don&amp;rsquo;t use expressions like &lt;code&gt;DateTime.utc_now&lt;/code&gt; or &lt;code&gt;Ecto.UUID.generate&lt;/code&gt; as they would then be the same for all records.</target>
        </trans-unit>
        <trans-unit id="cc38d45bc61e8889d15f10d71c32a16b5892ff47" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:default&lt;/code&gt; - the default value to use when none was given in &lt;code&gt;:value&lt;/code&gt; and none is available in the form data</source>
          <target state="translated">&lt;code&gt;:default&lt;/code&gt; - the default value to use when none was given in &lt;code&gt;:value&lt;/code&gt; and none is available in the form data</target>
        </trans-unit>
        <trans-unit id="ba4d6e8cfc22b62f22caecbc138fd4d51a529945" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:default&lt;/code&gt; - the value to use if none is available</source>
          <target state="translated">&lt;code&gt;:default&lt;/code&gt; - the value to use if none is available</target>
        </trans-unit>
        <trans-unit id="dc3f61e3fa56f54aff71584e049d1df642f1766f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:defaults&lt;/code&gt; - Default values to use when building the association</source>
          <target state="translated">&lt;code&gt;:defaults&lt;/code&gt; - Default values to use when building the association</target>
        </trans-unit>
        <trans-unit id="c39d82ca386f58e8abe624dc45d6e1c66b4c558c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:define_field&lt;/code&gt; - When false, does not automatically define a &lt;code&gt;:foreign_key&lt;/code&gt; field, implying the user is defining the field manually elsewhere</source>
          <target state="translated">&lt;code&gt;:define_field&lt;/code&gt; - When false, does not automatically define a &lt;code&gt;:foreign_key&lt;/code&gt; field, implying the user is defining the field manually elsewhere</target>
        </trans-unit>
        <trans-unit id="8ba1c28eeab7b501c7e1034547c3d5468c47e541" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:delete&lt;/code&gt; - removes the association or related data from the database. This option has to be used carefully. Will set &lt;code&gt;action&lt;/code&gt; on associated changesets to &lt;code&gt;:replace&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;:delete&lt;/code&gt; - removes the association or related data from the database. This option has to be used carefully. Will set &lt;code&gt;action&lt;/code&gt; on associated changesets to &lt;code&gt;:replace&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="47faa3bc2c2cbc977303863c90fe01156820e91d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:deleted&lt;/code&gt; - the struct was deleted and no longer represents persisted data.</source>
          <target state="translated">&lt;code&gt;:deleted&lt;/code&gt; - the struct was deleted and no longer represents persisted data.</target>
        </trans-unit>
        <trans-unit id="1385688a318c4abd53d08e6715a94981a022dbbd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:digest&lt;/code&gt; - an hmac function to use as the pseudo-random function. Defaults to &lt;code&gt;:sha256&lt;/code&gt;;</source>
          <target state="translated">&lt;code&gt;:digest&lt;/code&gt; - an hmac function to use as the pseudo-random function. Defaults to &lt;code&gt;:sha256&lt;/code&gt;;</target>
        </trans-unit>
        <trans-unit id="5287f37eecb76258298ea6a973e86c0e19d7911d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:do&lt;/code&gt; - contains the implementation to be invoked in case the route matches.</source>
          <target state="translated">&lt;code&gt;:do&lt;/code&gt; - contains the implementation to be invoked in case the route matches.</target>
        </trans-unit>
        <trans-unit id="78c20c5e01df6e98328365da2e38b184917be70d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:domain&lt;/code&gt; - see &lt;a href=&quot;plug.conn#put_resp_cookie/4&quot;&gt;&lt;code&gt;Plug.Conn.put_resp_cookie/4&lt;/code&gt;&lt;/a&gt;;</source>
          <target state="translated">&lt;code&gt;:domain&lt;/code&gt; - see &lt;a href=&quot;plug.conn#put_resp_cookie/4&quot;&gt;&lt;code&gt;Plug.Conn.put_resp_cookie/4&lt;/code&gt;&lt;/a&gt;;</target>
        </trans-unit>
        <trans-unit id="767492dd7c7174c291b9372f125f6027ddedf88f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:domain&lt;/code&gt; - the domain the cookie applies to</source>
          <target state="translated">&lt;code&gt;:domain&lt;/code&gt; - the domain the cookie applies to</target>
        </trans-unit>
        <trans-unit id="357c1f6f48ab26666e2ec7ba2a2e578574439ed3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:down_period&lt;/code&gt; - The interval in milliseconds to flag a replica as temporarily down. Default &lt;code&gt;broadcast_period * max_silent_periods * 2&lt;/code&gt; (30s down detection). Note: This must be at least 2x the &lt;code&gt;broadcast_period&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;:down_period&lt;/code&gt; - The interval in milliseconds to flag a replica as temporarily down. Default &lt;code&gt;broadcast_period * max_silent_periods * 2&lt;/code&gt; (30s down detection). Note: This must be at least 2x the &lt;code&gt;broadcast_period&lt;/code&gt;.</target>
        </trans-unit>
        <trans-unit id="e25017c5f4b9df42816b63b0ceeddf230b10908a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:drop&lt;/code&gt; - drops the session, a session cookie will not be included in the response</source>
          <target state="translated">&lt;code&gt;:drop&lt;/code&gt; - drops the session, a session cookie will not be included in the response</target>
        </trans-unit>
        <trans-unit id="cc67589e43da0bed41140a7a99803b417d876c79" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:early_hints&lt;/code&gt; - 103</source>
          <target state="translated">&lt;code&gt;:early_hints&lt;/code&gt; - 103</target>
        </trans-unit>
        <trans-unit id="c75da5c0840838d5a3a7fe4d98b1c591d2dc4c77" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:empty_values&lt;/code&gt; - a list of values to be considered as empty when casting. Defaults to the changeset value, which defaults to &lt;code&gt;[&quot;&quot;]&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;:empty_values&lt;/code&gt; - a list of values to be considered as empty when casting. Defaults to the changeset value, which defaults to &lt;code&gt;[&quot;&quot;]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="715cd0ac0f14758ae1cff3b16388c448edd2f0ad" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:encryption_salt&lt;/code&gt; - a salt used with &lt;code&gt;conn.secret_key_base&lt;/code&gt; to generate a key for encrypting/decrypting a cookie, can be either a binary or an MFA returning a binary;</source>
          <target state="translated">&lt;code&gt;:encryption_salt&lt;/code&gt; - a salt used with &lt;code&gt;conn.secret_key_base&lt;/code&gt; to generate a key for encrypting/decrypting a cookie, can be either a binary or an MFA returning a binary;</target>
        </trans-unit>
        <trans-unit id="80b05ff78faaa0c385d44ed39373beba7eec08f8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:enforce_utf8&lt;/code&gt; - the form will have an &lt;code&gt;accept-charset&lt;/code&gt; attribute set to &amp;ldquo;UTF-8&amp;rdquo; and a hidden input named &lt;code&gt;_utf8&lt;/code&gt; containing a unicode character to force the browser to use UTF-8 as the charset. When set to false, this is disabled.</source>
          <target state="translated">&lt;code&gt;:enforce_utf8&lt;/code&gt; - the form will have an &lt;code&gt;accept-charset&lt;/code&gt; attribute set to &amp;ldquo;UTF-8&amp;rdquo; and a hidden input named &lt;code&gt;_utf8&lt;/code&gt; containing a unicode character to force the browser to use UTF-8 as the charset. When set to false, this is disabled.</target>
        </trans-unit>
        <trans-unit id="9ba654b0418683d2c310598497de675201edef04" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:enforce_utf8&lt;/code&gt; - when false, does not enforce utf8. Read below for more information</source>
          <target state="translated">&lt;code&gt;:enforce_utf8&lt;/code&gt; - when false, does not enforce utf8. Read below for more information</target>
        </trans-unit>
        <trans-unit id="1f5e82908cac5b06f8931fbebef379fceff89a5d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:error&lt;/code&gt; if the media type isn&amp;rsquo;t valid</source>
          <target state="translated">&lt;code&gt;:error&lt;/code&gt; if the media type isn&amp;rsquo;t valid</target>
        </trans-unit>
        <trans-unit id="f393cb4807ba14d87fb7782d003b71f15d383070" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:error_message&lt;/code&gt; - the error message in case of violated constraints</source>
          <target state="translated">&lt;code&gt;:error_message&lt;/code&gt; - the error message in case of violated constraints</target>
        </trans-unit>
        <trans-unit id="247b6dfd17cf58d213811d1b7daeb5aabb710b79" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:error_type&lt;/code&gt; - the type of error that identifies the error message</source>
          <target state="translated">&lt;code&gt;:error_type&lt;/code&gt; - the type of error that identifies the error message</target>
        </trans-unit>
        <trans-unit id="250f2255e627d419ad5d5426553cc08b7e25bd6d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:errors&lt;/code&gt; - a keyword list of errors that associated with the form</source>
          <target state="translated">&lt;code&gt;:errors&lt;/code&gt; - a keyword list of errors that associated with the form</target>
        </trans-unit>
        <trans-unit id="6660c3b4a82c88dec246235b183ce6e8f6072aae" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:escape&lt;/code&gt; - if &lt;code&gt;false&lt;/code&gt; does not html escape input (default: &lt;code&gt;true&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;:escape&lt;/code&gt; - if &lt;code&gt;false&lt;/code&gt; does not html escape input (default: &lt;code&gt;true&lt;/code&gt;)</target>
        </trans-unit>
        <trans-unit id="8cde6f3e01e3d310fe4be553cb8d840bdfba5400" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:etag_generation&lt;/code&gt; - specify a &lt;code&gt;{module, function, args}&lt;/code&gt; to be used to generate an etag. The &lt;code&gt;path&lt;/code&gt; of the resource will be passed to the function, as well as the &lt;code&gt;args&lt;/code&gt;. If this option is not supplied, etags will be generated based off of file size and modification time.</source>
          <target state="translated">&lt;code&gt;:etag_generation&lt;/code&gt; - specify a &lt;code&gt;{module, function, args}&lt;/code&gt; to be used to generate an etag. The &lt;code&gt;path&lt;/code&gt; of the resource will be passed to the function, as well as the &lt;code&gt;args&lt;/code&gt;. If this option is not supplied, etags will be generated based off of file size and modification time.</target>
        </trans-unit>
        <trans-unit id="df95ebd33a9fd66b6a55a5e15855656bbb076f1a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:except&lt;/code&gt; - a list of actions to exclude generated routes from, for example: &lt;code&gt;[:delete]&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;:except&lt;/code&gt; - a list of actions to exclude generated routes from, for example: &lt;code&gt;[:delete]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8e37a34da4167a2a359334f22958374f35f3e567" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:exception&lt;/code&gt; - for invalid requests, this plug will raise &lt;a href=&quot;plug.csrfprotection.invalidcsrftokenerror&quot;&gt;&lt;code&gt;Plug.CSRFProtection.InvalidCSRFTokenError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;:exception&lt;/code&gt; - for invalid requests, this plug will raise &lt;a href=&quot;plug.csrfprotection.invalidcsrftokenerror&quot;&gt;&lt;code&gt;Plug.CSRFProtection.InvalidCSRFTokenError&lt;/code&gt;&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="508266b05303a887f670a8399f9ba9f23348b553" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:exclude&lt;/code&gt; - exclude the given hosts from redirecting to the &lt;code&gt;https&lt;/code&gt; scheme. Defaults to &lt;code&gt;[&quot;localhost&quot;]&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;:exclude&lt;/code&gt; - exclude the given hosts from redirecting to the &lt;code&gt;https&lt;/code&gt; scheme. Defaults to &lt;code&gt;[&quot;localhost&quot;]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e5cdaa58b47998cd8175ad7234fd095360b1461a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:expectation_failed&lt;/code&gt; - 417</source>
          <target state="translated">&lt;code&gt;:expectation_failed&lt;/code&gt; - 417</target>
        </trans-unit>
        <trans-unit id="b366745599855403777b1775ab55bff48404b16a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:expires&lt;/code&gt; - seconds to expires for HSTS, defaults to &lt;code&gt;31_536_000&lt;/code&gt; (a year).</source>
          <target state="translated">&lt;code&gt;:expires&lt;/code&gt; - seconds to expires for HSTS, defaults to &lt;code&gt;31_536_000&lt;/code&gt; (a year).</target>
        </trans-unit>
        <trans-unit id="45a740db9d8a7b0cf0aa696ae2028b34a8e26f0b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:expires&lt;/code&gt; - seconds to expires for HSTS, defaults to &lt;code&gt;7884000&lt;/code&gt; (three months)</source>
          <target state="translated">&lt;code&gt;:expires&lt;/code&gt; - seconds to expires for HSTS, defaults to &lt;code&gt;7884000&lt;/code&gt; (three months)</target>
        </trans-unit>
        <trans-unit id="d5b6d4f7369f88961f6eaa271bff26f1f6521f8e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:extra&lt;/code&gt; - see &lt;a href=&quot;plug.conn#put_resp_cookie/4&quot;&gt;&lt;code&gt;Plug.Conn.put_resp_cookie/4&lt;/code&gt;&lt;/a&gt;;</source>
          <target state="translated">&lt;code&gt;:extra&lt;/code&gt; - see &lt;a href=&quot;plug.conn#put_resp_cookie/4&quot;&gt;&lt;code&gt;Plug.Conn.put_resp_cookie/4&lt;/code&gt;&lt;/a&gt;;</target>
        </trans-unit>
        <trans-unit id="026160e4adfd814852ef8470762f936382c46655" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:extra&lt;/code&gt; - string to append to cookie. Use this to take advantage of non-standard cookie attributes.</source>
          <target state="translated">&lt;code&gt;:extra&lt;/code&gt; - string to append to cookie. Use this to take advantage of non-standard cookie attributes.</target>
        </trans-unit>
        <trans-unit id="c34a16abf57773838b94a2a2da5d08e2ddb1bf7e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:failed_dependency&lt;/code&gt; - 424</source>
          <target state="translated">&lt;code&gt;:failed_dependency&lt;/code&gt; - 424</target>
        </trans-unit>
        <trans-unit id="80560c23fe5d0ca05b89047f707a1b87aaab88f2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:fastlane&lt;/code&gt; - Provides a fastlane path for the broadcasts for &lt;code&gt;%Phoenix.Socket.Broadcast{}&lt;/code&gt; events. The fastlane process is notified of a cached message instead of the normal subscriber. Fastlane handlers must implement &lt;code&gt;fastlane/1&lt;/code&gt; callbacks which accepts a &lt;code&gt;Phoenix.Socket.Broadcast&lt;/code&gt; struct and returns a fastlaned format for the handler. For example:</source>
          <target state="translated">&lt;code&gt;:fastlane&lt;/code&gt; - Provides a fastlane path for the broadcasts for &lt;code&gt;%Phoenix.Socket.Broadcast{}&lt;/code&gt; events. The fastlane process is notified of a cached message instead of the normal subscriber. Fastlane handlers must implement &lt;code&gt;fastlane/1&lt;/code&gt; callbacks which accepts a &lt;code&gt;Phoenix.Socket.Broadcast&lt;/code&gt; struct and returns a fastlaned format for the handler. For example:</target>
        </trans-unit>
        <trans-unit id="3b1f8178a5f118ff16a27d171c17685c0d527b53" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:fastlane&lt;/code&gt; - Provides a fastlane path for the broadcasts for &lt;code&gt;%Phoenix.Socket.Broadcast{}&lt;/code&gt; events. The fastlane process is notified of a cached message instead of the normal subscriber. Fastlane handlers must implement &lt;code&gt;fastlane/1&lt;/code&gt; callbacks which accepts a &lt;code&gt;Phoenix.Socket.Broadcast&lt;/code&gt; structs and returns a fastlaned format for the handler. For example:</source>
          <target state="translated">&lt;code&gt;:fastlane&lt;/code&gt; - Provides a fastlane path for the broadcasts for &lt;code&gt;%Phoenix.Socket.Broadcast{}&lt;/code&gt; events. The fastlane process is notified of a cached message instead of the normal subscriber. Fastlane handlers must implement &lt;code&gt;fastlane/1&lt;/code&gt; callbacks which accepts a &lt;code&gt;Phoenix.Socket.Broadcast&lt;/code&gt; structs and returns a fastlaned format for the handler. For example:</target>
        </trans-unit>
        <trans-unit id="692bae1c8c466975baa2bedb421a7e88d8b0935f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:field&lt;/code&gt; - the field a violated constraint will apply the error to</source>
          <target state="translated">&lt;code&gt;:field&lt;/code&gt; - the field a violated constraint will apply the error to</target>
        </trans-unit>
        <trans-unit id="08537c840fb7f6b9181ba8b818ad600915d69636" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:filename&lt;/code&gt; - the filename of the uploaded file given in the request</source>
          <target state="translated">&lt;code&gt;:filename&lt;/code&gt; - the filename of the uploaded file given in the request</target>
        </trans-unit>
        <trans-unit id="592755833afc553b9f480691eb3682c644f99727" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:filename&lt;/code&gt; - the filename to be presented to the user as download</source>
          <target state="translated">&lt;code&gt;:filename&lt;/code&gt; - the filename to be presented to the user as download</target>
        </trans-unit>
        <trans-unit id="959d5bde5ec2cae034dba0c754b092191e08e86b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:forbidden&lt;/code&gt; - 403</source>
          <target state="translated">&lt;code&gt;:forbidden&lt;/code&gt; - 403</target>
        </trans-unit>
        <trans-unit id="1a3cd4b31512785ae8b5a2aea7a0784f9162f1ce" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:force&lt;/code&gt; - By default, Ecto won&amp;rsquo;t preload associations that are already loaded. By setting this option to true, any existing association will be discarded and reloaded.</source>
          <target state="translated">&lt;code&gt;:force&lt;/code&gt; - By default, Ecto won&amp;rsquo;t preload associations that are already loaded. By setting this option to true, any existing association will be discarded and reloaded.</target>
        </trans-unit>
        <trans-unit id="5daeae4177a95f121b2029f0bfa4f0834fcda06f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:force&lt;/code&gt; - By default, if there are no changes in the changeset, &lt;a href=&quot;#c:update/2&quot;&gt;&lt;code&gt;update/2&lt;/code&gt;&lt;/a&gt; is a no-op. By setting this option to true, update callbacks will always be executed, even if there are no changes (including timestamps).</source>
          <target state="translated">&lt;code&gt;:force&lt;/code&gt; - By default, if there are no changes in the changeset, &lt;a href=&quot;#c:update/2&quot;&gt;&lt;code&gt;update/2&lt;/code&gt;&lt;/a&gt; is a no-op. By setting this option to true, update callbacks will always be executed, even if there are no changes (including timestamps).</target>
        </trans-unit>
        <trans-unit id="04d7f8d3ab1b0a585663fa80bd82e9b04184535e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:force_ssl&lt;/code&gt; - ensures no data is ever sent via http, always redirecting to https. It expects a list of options which are forwarded to &lt;a href=&quot;../plug/1.5.1/plug.ssl&quot;&gt;&lt;code&gt;Plug.SSL&lt;/code&gt;&lt;/a&gt;. By defalts it sets the &amp;ldquo;strict-transport-security&amp;rdquo; header in https requests, forcing browsers to always use https. If an unsafe request (http) is sent, it redirects to the https version using the &lt;code&gt;:host&lt;/code&gt; specified in the &lt;code&gt;:url&lt;/code&gt; configuration. To dynamically redirect to the &lt;code&gt;host&lt;/code&gt; of the current request, &lt;code&gt;:host&lt;/code&gt; must be set &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;:force_ssl&lt;/code&gt; - ensures no data is ever sent via http, always redirecting to https. It expects a list of options which are forwarded to &lt;a href=&quot;../plug/1.5.1/plug.ssl&quot;&gt;&lt;code&gt;Plug.SSL&lt;/code&gt;&lt;/a&gt;. By defalts it sets the &amp;ldquo;strict-transport-security&amp;rdquo; header in https requests, forcing browsers to always use https. If an unsafe request (http) is sent, it redirects to the https version using the &lt;code&gt;:host&lt;/code&gt; specified in the &lt;code&gt;:url&lt;/code&gt; configuration. To dynamically redirect to the &lt;code&gt;host&lt;/code&gt; of the current request, &lt;code&gt;:host&lt;/code&gt; must be set &lt;code&gt;nil&lt;/code&gt;.</target>
        </trans-unit>
        <trans-unit id="581dd70c00d6c9c8d8721affc01a357a2bdacdb9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:force_update_on_change&lt;/code&gt; - force the parent record to be updated in the repository if there is a change, defaults to true</source>
          <target state="translated">&lt;code&gt;:force_update_on_change&lt;/code&gt; - force the parent record to be updated in the repository if there is a change, defaults to true</target>
        </trans-unit>
        <trans-unit id="4c9eded938f6e05de830e507209cfe12b753055c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:foreign_key&lt;/code&gt; - Sets the foreign key field name, defaults to the name of the association suffixed by &lt;code&gt;_id&lt;/code&gt;. For example, &lt;code&gt;belongs_to :company&lt;/code&gt; will define foreign key of &lt;code&gt;:company_id&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;:foreign_key&lt;/code&gt; - Sets the foreign key field name, defaults to the name of the association suffixed by &lt;code&gt;_id&lt;/code&gt;. For example, &lt;code&gt;belongs_to :company&lt;/code&gt; will define foreign key of &lt;code&gt;:company_id&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6fe17f256dcc013bfcdca0471c50c1b7b3333a67" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:foreign_key&lt;/code&gt; - Sets the foreign key, this should map to a field on the other schema, defaults to the underscored name of the current module suffixed by &lt;code&gt;_id&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;:foreign_key&lt;/code&gt; - Sets the foreign key, this should map to a field on the other schema, defaults to the underscored name of the current module suffixed by &lt;code&gt;_id&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a8bc43387d4a3ac7248221e32c60c47170e2ecfe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:foreign_key&lt;/code&gt; - Sets the foreign key, this should map to a field on the other schema, defaults to the underscored name of the current schema suffixed by &lt;code&gt;_id&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;:foreign_key&lt;/code&gt; - Sets the foreign key, this should map to a field on the other schema, defaults to the underscored name of the current schema suffixed by &lt;code&gt;_id&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f6b98662d8d2d9db36717289976159a1d74a44aa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:found&lt;/code&gt; - 302</source>
          <target state="translated">&lt;code&gt;:found&lt;/code&gt; - 302</target>
        </trans-unit>
        <trans-unit id="7a789edeea5691fd5d6858519b5a7c56918cae10" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:from&lt;/code&gt; - the file system path to read static assets from. It can be either: a string containing a file system path, an atom representing the application name (where assets will be served from &lt;code&gt;priv/static&lt;/code&gt;), or a tuple containing the application name and the directory to serve assets from (besides &lt;code&gt;priv/static&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;:from&lt;/code&gt; - the file system path to read static assets from. It can be either: a string containing a file system path, an atom representing the application name (where assets will be served from &lt;code&gt;priv/static&lt;/code&gt;), or a tuple containing the application name and the directory to serve assets from (besides &lt;code&gt;priv/static&lt;/code&gt;).</target>
        </trans-unit>
        <trans-unit id="f4d962e53b2a14e94d9a3a2f7475182172d900f3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:gateway_timeout&lt;/code&gt; - 504</source>
          <target state="translated">&lt;code&gt;:gateway_timeout&lt;/code&gt; - 504</target>
        </trans-unit>
        <trans-unit id="d23a8dd45e811f15e9621a0b2a24fd24f106b164" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:gone&lt;/code&gt; - 410</source>
          <target state="translated">&lt;code&gt;:gone&lt;/code&gt; - 410</target>
        </trans-unit>
        <trans-unit id="69e43f27102828e5887d410a80b5c7adbfa72f8e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:gzip&lt;/code&gt; - given a request for &lt;code&gt;FILE&lt;/code&gt;, serves &lt;code&gt;FILE.gz&lt;/code&gt; if it exists in the static directory and if the &lt;code&gt;accept-encoding&lt;/code&gt; header is set to allow gzipped content (defaults to &lt;code&gt;false&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;:gzip&lt;/code&gt; - given a request for &lt;code&gt;FILE&lt;/code&gt;, serves &lt;code&gt;FILE.gz&lt;/code&gt; if it exists in the static directory and if the &lt;code&gt;accept-encoding&lt;/code&gt; header is set to allow gzipped content (defaults to &lt;code&gt;false&lt;/code&gt;).</target>
        </trans-unit>
        <trans-unit id="a59ef0939470745ce6f32c7e5b39a15208d2fd09" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:headers&lt;/code&gt; - other headers to be set when serving static assets.</source>
          <target state="translated">&lt;code&gt;:headers&lt;/code&gt; - other headers to be set when serving static assets.</target>
        </trans-unit>
        <trans-unit id="5f71ed5593e477cc3e3da7c9babbf06bc7f19380" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:hidden&lt;/code&gt; - a keyword list of fields that are required for submitting the form behind the scenes as hidden inputs</source>
          <target state="translated">&lt;code&gt;:hidden&lt;/code&gt; - a keyword list of fields that are required for submitting the form behind the scenes as hidden inputs</target>
        </trans-unit>
        <trans-unit id="12ff9684a2dcd9598f73db94264e2e5c0de0c997" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:hints&lt;/code&gt; - a string or a list of strings to be used as database hints</source>
          <target state="translated">&lt;code&gt;:hints&lt;/code&gt; - a string or a list of strings to be used as database hints</target>
        </trans-unit>
        <trans-unit id="6c4419afd12ae47ba2c9a2553a0190ce8aa4d5ea" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:host&lt;/code&gt; - a new host to redirect to if the request&amp;rsquo;s scheme is &lt;code&gt;http&lt;/code&gt;, defaults to &lt;code&gt;conn.host&lt;/code&gt;. It may be set to a binary or a tuple &lt;code&gt;{module, function, args}&lt;/code&gt; that will be invoked on demand</source>
          <target state="translated">&lt;code&gt;:host&lt;/code&gt; - a new host to redirect to if the request&amp;rsquo;s scheme is &lt;code&gt;http&lt;/code&gt;, defaults to &lt;code&gt;conn.host&lt;/code&gt;. It may be set to a binary or a tuple &lt;code&gt;{module, function, args}&lt;/code&gt; that will be invoked on demand</target>
        </trans-unit>
        <trans-unit id="2e724eb292aa1526365cdd8694b2df99afdc84b7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:host&lt;/code&gt; - a string containing the host scope, or prefix host scope, ie &lt;code&gt;&quot;foo.bar.com&quot;&lt;/code&gt;, &lt;code&gt;&quot;foo.&quot;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;:host&lt;/code&gt; - a string containing the host scope, or prefix host scope, ie &lt;code&gt;&quot;foo.bar.com&quot;&lt;/code&gt;, &lt;code&gt;&quot;foo.&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7f6b0c211c6f6d874a0235f5657941bdcf021411" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:host&lt;/code&gt; - a string representing the host or subdomain, exactly like in &lt;a href=&quot;#match/3&quot;&gt;&lt;code&gt;match/3&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;:host&lt;/code&gt; - a string representing the host or subdomain, exactly like in &lt;a href=&quot;#match/3&quot;&gt;&lt;code&gt;match/3&lt;/code&gt;&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="e90a4735630d648cb5598b8315b3af2298387f35" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:host&lt;/code&gt; - the host which the route should match. Defaults to &lt;code&gt;nil&lt;/code&gt;, meaning no host match, but can be a string like &amp;ldquo;example.com&amp;rdquo; or a string ending with &amp;ldquo;.&amp;rdquo;, like &amp;ldquo;subdomain.&amp;rdquo; for a subdomain match.</source>
          <target state="translated">&lt;code&gt;:host&lt;/code&gt; - the host which the route should match. Defaults to &lt;code&gt;nil&lt;/code&gt;, meaning no host match, but can be a string like &amp;ldquo;example.com&amp;rdquo; or a string ending with &amp;ldquo;.&amp;rdquo;, like &amp;ldquo;subdomain.&amp;rdquo; for a subdomain match.</target>
        </trans-unit>
        <trans-unit id="bbd44f61b37eacdd08ab993f964ae97c0ff71740" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:hsts&lt;/code&gt; - a boolean on enabling HSTS or not, defaults to &lt;code&gt;true&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;:hsts&lt;/code&gt; - a boolean on enabling HSTS or not, defaults to &lt;code&gt;true&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c4ea0dbbe0a23975c56a8e9459872253c08ea80a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:http&lt;/code&gt; - the configuration for the HTTP server. Currently uses Cowboy and accepts all options as defined by &lt;a href=&quot;../plug/plug.adapters.cowboy&quot;&gt;&lt;code&gt;Plug.Adapters.Cowboy&lt;/code&gt;&lt;/a&gt;. Defaults to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;:http&lt;/code&gt; - the configuration for the HTTP server. Currently uses Cowboy and accepts all options as defined by &lt;a href=&quot;../plug/plug.adapters.cowboy&quot;&gt;&lt;code&gt;Plug.Adapters.Cowboy&lt;/code&gt;&lt;/a&gt;. Defaults to &lt;code&gt;false&lt;/code&gt;.</target>
        </trans-unit>
        <trans-unit id="c62f9ca6750caecac4e2c3d887cf1ac142c8e4c7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:http_header&lt;/code&gt; - The name of the HTTP &lt;em&gt;request&lt;/em&gt; header to check for existing request ids. This is also the HTTP &lt;em&gt;response&lt;/em&gt; header that will be set with the request id. Default value is &amp;ldquo;x-request-id&amp;rdquo;</source>
          <target state="translated">&lt;code&gt;:http_header&lt;/code&gt; - The name of the HTTP &lt;em&gt;request&lt;/em&gt; header to check for existing request ids. This is also the HTTP &lt;em&gt;response&lt;/em&gt; header that will be set with the request id. Default value is &amp;ldquo;x-request-id&amp;rdquo;</target>
        </trans-unit>
        <trans-unit id="219f710b547b947b045918113878baa1085ae77a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:http_only&lt;/code&gt; - see &lt;a href=&quot;plug.conn#put_resp_cookie/4&quot;&gt;&lt;code&gt;Plug.Conn.put_resp_cookie/4&lt;/code&gt;&lt;/a&gt;;</source>
          <target state="translated">&lt;code&gt;:http_only&lt;/code&gt; - see &lt;a href=&quot;plug.conn#put_resp_cookie/4&quot;&gt;&lt;code&gt;Plug.Conn.put_resp_cookie/4&lt;/code&gt;&lt;/a&gt;;</target>
        </trans-unit>
        <trans-unit id="11e52c1cf4aa378ab5ced5cdab88b8e83d765761" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:http_only&lt;/code&gt; - when &lt;code&gt;false&lt;/code&gt;, the cookie is accessible beyond HTTP</source>
          <target state="translated">&lt;code&gt;:http_only&lt;/code&gt; - when &lt;code&gt;false&lt;/code&gt;, the cookie is accessible beyond HTTP</target>
        </trans-unit>
        <trans-unit id="6583cef304db30ac4c37451a3beba4d7ea86f937" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:http_only&lt;/code&gt; - when false, the cookie is accessible beyond http</source>
          <target state="translated">&lt;code&gt;:http_only&lt;/code&gt; - when false, the cookie is accessible beyond http</target>
        </trans-unit>
        <trans-unit id="d53fc7528a7a4717b08d3556124759a0a979b0d8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:http_version_not_supported&lt;/code&gt; - 505</source>
          <target state="translated">&lt;code&gt;:http_version_not_supported&lt;/code&gt; - 505</target>
        </trans-unit>
        <trans-unit id="f487344245652c5e19f6af5b0419acee00502af5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:https&lt;/code&gt; - the configuration for the HTTPS server. Currently uses Cowboy and accepts all options as defined by &lt;a href=&quot;../plug/plug.adapters.cowboy&quot;&gt;&lt;code&gt;Plug.Adapters.Cowboy&lt;/code&gt;&lt;/a&gt;. Defaults to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;:https&lt;/code&gt; - the configuration for the HTTPS server. Currently uses Cowboy and accepts all options as defined by &lt;a href=&quot;../plug/plug.adapters.cowboy&quot;&gt;&lt;code&gt;Plug.Adapters.Cowboy&lt;/code&gt;&lt;/a&gt;. Defaults to &lt;code&gt;false&lt;/code&gt;.</target>
        </trans-unit>
        <trans-unit id="47e2f985d0504c6a2d54292bbd698d2c80652e49" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:id&lt;/code&gt; - the id to be used in the form, defaults to the concatenation of the given &lt;code&gt;field&lt;/code&gt; to the parent form id</source>
          <target state="translated">&lt;code&gt;:id&lt;/code&gt; - the id to be used in the form, defaults to the concatenation of the given &lt;code&gt;field&lt;/code&gt; to the parent form id</target>
        </trans-unit>
        <trans-unit id="31f5f9b1edb9a9a54d1ae3f466e2b62bba5f062b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:id&lt;/code&gt; - the id to be used when generating input fields</source>
          <target state="translated">&lt;code&gt;:id&lt;/code&gt; - the id to be used when generating input fields</target>
        </trans-unit>
        <trans-unit id="d983a5fff75fea40f73093e7da0f4b3cd4a4ec40" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:ignore&lt;/code&gt; - ignores all changes made to the session in this request cycle</source>
          <target state="translated">&lt;code&gt;:ignore&lt;/code&gt; - ignores all changes made to the session in this request cycle</target>
        </trans-unit>
        <trans-unit id="f44ab2807a785f850fd43467e1f562825bd812b6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:im_a_teapot&lt;/code&gt; - 418</source>
          <target state="translated">&lt;code&gt;:im_a_teapot&lt;/code&gt; - 418</target>
        </trans-unit>
        <trans-unit id="00cdf3ddc3b1be533460212ccf57590eb4d7ffe9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:im_used&lt;/code&gt; - 226</source>
          <target state="translated">&lt;code&gt;:im_used&lt;/code&gt; - 226</target>
        </trans-unit>
        <trans-unit id="8a1f4127e72ccb36b05ea1675807a728bb7e325b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:impl&lt;/code&gt; - the module with the form data protocol implementation. This is used to avoid multiple protocol dispatches.</source>
          <target state="translated">&lt;code&gt;:impl&lt;/code&gt; - the module with the form data protocol implementation. This is used to avoid multiple protocol dispatches.</target>
        </trans-unit>
        <trans-unit id="60162fb9e4944bda8789b0f9b58a1c2d1c726578" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:in_parallel&lt;/code&gt; - If the preloads must be done in parallel. It can only be performed when we have more than one preload and the repository is not in a transaction. Defaults to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;:in_parallel&lt;/code&gt; - If the preloads must be done in parallel. It can only be performed when we have more than one preload and the repository is not in a transaction. Defaults to &lt;code&gt;true&lt;/code&gt;.</target>
        </trans-unit>
        <trans-unit id="5aa55f62231251bd979a6ab6ce35fb113f30cc3f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:init_mode&lt;/code&gt; - the environment to initialize the plug&amp;rsquo;s options, one of &lt;code&gt;:compile&lt;/code&gt; or &lt;code&gt;:runtime&lt;/code&gt;. Defaults &lt;code&gt;:compile&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;:init_mode&lt;/code&gt; - the environment to initialize the plug&amp;rsquo;s options, one of &lt;code&gt;:compile&lt;/code&gt; or &lt;code&gt;:runtime&lt;/code&gt;. Defaults &lt;code&gt;:compile&lt;/code&gt;.</target>
        </trans-unit>
        <trans-unit id="576dddad628b150a7f007b95734e82ac5e88b5fd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:init_opts&lt;/code&gt; - the options for the target Plug given by &lt;code&gt;:to&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;:init_opts&lt;/code&gt; - the options for the target Plug given by &lt;code&gt;:to&lt;/code&gt;.</target>
        </trans-unit>
        <trans-unit id="1897e736d8de40fff4625866bf50d64bf9da3bbd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:init_opts&lt;/code&gt; - the options for the target Plug.</source>
          <target state="translated">&lt;code&gt;:init_opts&lt;/code&gt; - the options for the target Plug.</target>
        </trans-unit>
        <trans-unit id="740b78642635f1986b7036c8d2aa5df2f0e2c346" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:insert_brs&lt;/code&gt; - if &lt;code&gt;true&lt;/code&gt; insert &lt;code&gt;&amp;lt;br&amp;gt;&lt;/code&gt; for single line breaks (default: &lt;code&gt;true&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;:insert_brs&lt;/code&gt; - if &lt;code&gt;true&lt;/code&gt; insert &lt;code&gt;&amp;lt;br&amp;gt;&lt;/code&gt; for single line breaks (default: &lt;code&gt;true&lt;/code&gt;)</target>
        </trans-unit>
        <trans-unit id="304b35af63b5df84b8575c53e884eb03a6c5799b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:inserted_at&lt;/code&gt; - the name of the column for insertion times or &lt;code&gt;false&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;:inserted_at&lt;/code&gt; - the name of the column for insertion times or &lt;code&gt;false&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="535230e39a27ed349b45cacf3a9255c2603e2e64" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:instrumenters&lt;/code&gt; - a list of instrumenter modules whose callbacks will be fired on instrumentation events. Read more on instrumentation in the &amp;ldquo;Instrumentation&amp;rdquo; section below.</source>
          <target state="translated">&lt;code&gt;:instrumenters&lt;/code&gt; - a list of instrumenter modules whose callbacks will be fired on instrumentation events. Read more on instrumentation in the &amp;ldquo;Instrumentation&amp;rdquo; section below.</target>
        </trans-unit>
        <trans-unit id="c48be01389d4730c75af6bae9688521aacacb4c1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:insufficient_storage&lt;/code&gt; - 507</source>
          <target state="translated">&lt;code&gt;:insufficient_storage&lt;/code&gt; - 507</target>
        </trans-unit>
        <trans-unit id="692c9b0aec61558c2bbe2ed616acf045964e6fe3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:internal_server_error&lt;/code&gt; - 500</source>
          <target state="translated">&lt;code&gt;:internal_server_error&lt;/code&gt; - 500</target>
        </trans-unit>
        <trans-unit id="746b225dcd733cc17ef7503fb7d1e41abd1f5c19" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:invalid_message&lt;/code&gt; - the message on failure, defaults to &amp;ldquo;is invalid&amp;rdquo;</source>
          <target state="translated">&lt;code&gt;:invalid_message&lt;/code&gt; - the message on failure, defaults to &amp;ldquo;is invalid&amp;rdquo;</target>
        </trans-unit>
        <trans-unit id="44f14a2b3490e519f9b8b3054f578e0e54eac723" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:is&lt;/code&gt; - the length must be exactly this value</source>
          <target state="translated">&lt;code&gt;:is&lt;/code&gt; - the length must be exactly this value</target>
        </trans-unit>
        <trans-unit id="eb4a21dc440faa6899b999453f47d4eca7ff9a0d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:iterations&lt;/code&gt; - defaults to 1000 (increase to at least 2^16 if used for passwords);</source>
          <target state="translated">&lt;code&gt;:iterations&lt;/code&gt; - defaults to 1000 (increase to at least 2^16 if used for passwords);</target>
        </trans-unit>
        <trans-unit id="c64808e917c3f22a334e58d479a2ca7910bffc34" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:join_keys&lt;/code&gt; - specifies how the schemas are associated. It expects a keyword list with two entries, the first being how the join table should reach the current schema and the second how the join table should reach the associated schema. In the example above, it defaults to: &lt;code&gt;[post_id: :id, tag_id: :id]&lt;/code&gt;. The keys are inflected from the schema names.</source>
          <target state="translated">&lt;code&gt;:join_keys&lt;/code&gt; - specifies how the schemas are associated. It expects a keyword list with two entries, the first being how the join table should reach the current schema and the second how the join table should reach the associated schema. In the example above, it defaults to: &lt;code&gt;[post_id: :id, tag_id: :id]&lt;/code&gt;. The keys are inflected from the schema names.</target>
        </trans-unit>
        <trans-unit id="63acc6983f1fe10c9c962d425644baf91a0ee72d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:join_through&lt;/code&gt; - specifies the source of the associated data. It may be a string, like &amp;ldquo;posts_tags&amp;rdquo;, representing the underlying storage table or an atom, like &lt;code&gt;MyApp.PostTag&lt;/code&gt;, representing a schema. This option is required.</source>
          <target state="translated">&lt;code&gt;:join_through&lt;/code&gt; - specifies the source of the associated data. It may be a string, like &amp;ldquo;posts_tags&amp;rdquo;, representing the underlying storage table or an atom, like &lt;code&gt;MyApp.PostTag&lt;/code&gt;, representing a schema. This option is required.</target>
        </trans-unit>
        <trans-unit id="46dd9fc3d01cd9aab70d5afde06476e0fa309c38" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:join_through_where&lt;/code&gt; - A filter for the join through association. See &amp;ldquo;Filtering associations&amp;rdquo; in &lt;a href=&quot;#has_many/3&quot;&gt;&lt;code&gt;has_many/3&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;:join_through_where&lt;/code&gt; - A filter for the join through association. See &amp;ldquo;Filtering associations&amp;rdquo; in &lt;a href=&quot;#has_many/3&quot;&gt;&lt;code&gt;has_many/3&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2cb9d44ac19f3a35af2ef28a4ee0968c986e6249" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:key&lt;/code&gt; - session cookie key (required);</source>
          <target state="translated">&lt;code&gt;:key&lt;/code&gt; - session cookie key (required);</target>
        </trans-unit>
        <trans-unit id="b78eb9e0a6489dc65b01385a472c945647a22b2e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:key_digest&lt;/code&gt; - option passed to &lt;a href=&quot;../plug/1.5.1/plug.crypto.keygenerator&quot;&gt;&lt;code&gt;Plug.Crypto.KeyGenerator&lt;/code&gt;&lt;/a&gt; when generating the encryption and signing keys. Defaults to &lt;code&gt;:sha256&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;:key_digest&lt;/code&gt; - option passed to &lt;a href=&quot;../plug/1.5.1/plug.crypto.keygenerator&quot;&gt;&lt;code&gt;Plug.Crypto.KeyGenerator&lt;/code&gt;&lt;/a&gt; when generating the encryption and signing keys. Defaults to &lt;code&gt;:sha256&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e66b9c25b007d69f413082df9178e0515c9c5b66" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:key_digest&lt;/code&gt; - option passed to &lt;a href=&quot;https://hexdocs.pm/plug_crypto/1.0.0/Plug.Crypto.KeyGenerator.html&quot;&gt;&lt;code&gt;Plug.Crypto.KeyGenerator&lt;/code&gt;&lt;/a&gt; when generating the encryption and signing keys. Defaults to &lt;code&gt;:sha256&lt;/code&gt;;</source>
          <target state="translated">&lt;code&gt;:key_digest&lt;/code&gt; - option passed to &lt;a href=&quot;https://hexdocs.pm/plug_crypto/1.0.0/Plug.Crypto.KeyGenerator.html&quot;&gt;&lt;code&gt;Plug.Crypto.KeyGenerator&lt;/code&gt;&lt;/a&gt; when generating the encryption and signing keys. Defaults to &lt;code&gt;:sha256&lt;/code&gt;;</target>
        </trans-unit>
        <trans-unit id="233d842d4be6ab8ff37f55b39a0fc2a2bcf69b40" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:key_iterations&lt;/code&gt; - option passed to &lt;a href=&quot;../plug/1.5.1/plug.crypto.keygenerator&quot;&gt;&lt;code&gt;Plug.Crypto.KeyGenerator&lt;/code&gt;&lt;/a&gt; when generating the encryption and signing keys. Defaults to 1000</source>
          <target state="translated">&lt;code&gt;:key_iterations&lt;/code&gt; - option passed to &lt;a href=&quot;../plug/1.5.1/plug.crypto.keygenerator&quot;&gt;&lt;code&gt;Plug.Crypto.KeyGenerator&lt;/code&gt;&lt;/a&gt; when generating the encryption and signing keys. Defaults to 1000</target>
        </trans-unit>
        <trans-unit id="b0a092fbb75d48886c315cd680248e6a2dd736a3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:key_iterations&lt;/code&gt; - option passed to &lt;a href=&quot;https://hexdocs.pm/plug_crypto/1.0.0/Plug.Crypto.KeyGenerator.html&quot;&gt;&lt;code&gt;Plug.Crypto.KeyGenerator&lt;/code&gt;&lt;/a&gt; when generating the encryption and signing keys. Defaults to 1000;</source>
          <target state="translated">&lt;code&gt;:key_iterations&lt;/code&gt; - option passed to &lt;a href=&quot;https://hexdocs.pm/plug_crypto/1.0.0/Plug.Crypto.KeyGenerator.html&quot;&gt;&lt;code&gt;Plug.Crypto.KeyGenerator&lt;/code&gt;&lt;/a&gt; when generating the encryption and signing keys. Defaults to 1000;</target>
        </trans-unit>
        <trans-unit id="a7259f72a847e7662c64b29674802a2816583f37" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:key_length&lt;/code&gt; - option passed to &lt;a href=&quot;../plug/1.5.1/plug.crypto.keygenerator&quot;&gt;&lt;code&gt;Plug.Crypto.KeyGenerator&lt;/code&gt;&lt;/a&gt; when generating the encryption and signing keys. Defaults to 32</source>
          <target state="translated">&lt;code&gt;:key_length&lt;/code&gt; - option passed to &lt;a href=&quot;../plug/1.5.1/plug.crypto.keygenerator&quot;&gt;&lt;code&gt;Plug.Crypto.KeyGenerator&lt;/code&gt;&lt;/a&gt; when generating the encryption and signing keys. Defaults to 32</target>
        </trans-unit>
        <trans-unit id="d4f024f2271b5604293b4226324dc28e47d48fc3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:key_length&lt;/code&gt; - option passed to &lt;a href=&quot;https://hexdocs.pm/plug_crypto/1.0.0/Plug.Crypto.KeyGenerator.html&quot;&gt;&lt;code&gt;Plug.Crypto.KeyGenerator&lt;/code&gt;&lt;/a&gt; when generating the encryption and signing keys. Defaults to 32;</source>
          <target state="translated">&lt;code&gt;:key_length&lt;/code&gt; - option passed to &lt;a href=&quot;https://hexdocs.pm/plug_crypto/1.0.0/Plug.Crypto.KeyGenerator.html&quot;&gt;&lt;code&gt;Plug.Crypto.KeyGenerator&lt;/code&gt;&lt;/a&gt; when generating the encryption and signing keys. Defaults to 32;</target>
        </trans-unit>
        <trans-unit id="242579869ae85a1420f0af573b4dae5a8f5d7589" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:layout&lt;/code&gt; - tells Phoenix to wrap the rendered result in the given layout. See next section.</source>
          <target state="translated">&lt;code&gt;:layout&lt;/code&gt; - tells Phoenix to wrap the rendered result in the given layout. See next section.</target>
        </trans-unit>
        <trans-unit id="071d0ae09c2dff8b8924f803ad1afe12258d6487" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:length&lt;/code&gt; - a length in octets for the derived key. Defaults to 32;</source>
          <target state="translated">&lt;code&gt;:length&lt;/code&gt; - a length in octets for the derived key. Defaults to 32;</target>
        </trans-unit>
        <trans-unit id="ef304c6a24471c8cef21c5f6812fec3bb951e9ad" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:length&lt;/code&gt; - sets the maximum number of bytes to read from the body for each chunk, defaults to 64_000 bytes</source>
          <target state="translated">&lt;code&gt;:length&lt;/code&gt; - sets the maximum number of bytes to read from the body for each chunk, defaults to 64_000 bytes</target>
        </trans-unit>
        <trans-unit id="ee80e5499d5216569691f27046eef3ba258a3dae" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:length&lt;/code&gt; - sets the maximum number of bytes to read from the body for each chunk, defaults to &lt;code&gt;64_000&lt;/code&gt; bytes</source>
          <target state="translated">&lt;code&gt;:length&lt;/code&gt; - sets the maximum number of bytes to read from the body for each chunk, defaults to &lt;code&gt;64_000&lt;/code&gt; bytes</target>
        </trans-unit>
        <trans-unit id="b0b21a15f31936050bdc5b2f1f0cc6762b799998" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:length&lt;/code&gt; - sets the maximum number of bytes to read from the body on every call, defaults to 8_000_000 bytes</source>
          <target state="translated">&lt;code&gt;:length&lt;/code&gt; - sets the maximum number of bytes to read from the body on every call, defaults to 8_000_000 bytes</target>
        </trans-unit>
        <trans-unit id="e403ed4e88da8305206db67bb00e94197517a22f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:length&lt;/code&gt; - sets the maximum number of bytes to read from the body on every call, defaults to &lt;code&gt;8_000_000&lt;/code&gt; bytes</source>
          <target state="translated">&lt;code&gt;:length&lt;/code&gt; - sets the maximum number of bytes to read from the body on every call, defaults to &lt;code&gt;8_000_000&lt;/code&gt; bytes</target>
        </trans-unit>
        <trans-unit id="404bd6a8824a6040003562a5055af63c756b8df2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:length&lt;/code&gt; - sets the maximum number of bytes to read from the request, defaults to 1_000_000 bytes</source>
          <target state="translated">&lt;code&gt;:length&lt;/code&gt; - sets the maximum number of bytes to read from the request, defaults to 1_000_000 bytes</target>
        </trans-unit>
        <trans-unit id="0f046188fd7bd61fb1bb17a2eed55732eb02b3f9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:length&lt;/code&gt; - sets the maximum number of bytes to read from the request, defaults to 8_000_000 bytes</source>
          <target state="translated">&lt;code&gt;:length&lt;/code&gt; - sets the maximum number of bytes to read from the request, defaults to 8_000_000 bytes</target>
        </trans-unit>
        <trans-unit id="fe8ad3f92d6f1e70147c5fdf3ec1d9a829583f60" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:length&lt;/code&gt; - the maximum query string length. Defaults to 1_000_000 bytes.</source>
          <target state="translated">&lt;code&gt;:length&lt;/code&gt; - the maximum query string length. Defaults to 1_000_000 bytes.</target>
        </trans-unit>
        <trans-unit id="c0377b19f39dd2e91dac5654b2de33f2d4c4db61" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:length&lt;/code&gt; - the maximum query string length. Defaults to &lt;code&gt;1_000_000&lt;/code&gt; bytes.</source>
          <target state="translated">&lt;code&gt;:length&lt;/code&gt; - the maximum query string length. Defaults to &lt;code&gt;1_000_000&lt;/code&gt; bytes.</target>
        </trans-unit>
        <trans-unit id="4a919003260641e345778af4e19096538d704842" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:length_required&lt;/code&gt; - 411</source>
          <target state="translated">&lt;code&gt;:length_required&lt;/code&gt; - 411</target>
        </trans-unit>
        <trans-unit id="765b66719fafcf3db2f201446533f8c3e9d503df" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:link&lt;/code&gt; - links the subscriber to the pubsub adapter</source>
          <target state="translated">&lt;code&gt;:link&lt;/code&gt; - links the subscriber to the pubsub adapter</target>
        </trans-unit>
        <trans-unit id="5c78014a5ca8b136687b352dd14079bafdce5777" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:live_reload&lt;/code&gt; - configuration for the live reload option. Configuration requires a &lt;code&gt;:patterns&lt;/code&gt; option which should be a list of file patterns to watch. When these files change, it will trigger a reload. If you are using a tool like &lt;a href=&quot;http://pow.cx&quot;&gt;pow&lt;/a&gt; in development, you may need to set the &lt;code&gt;:url&lt;/code&gt; option appropriately.</source>
          <target state="translated">&lt;code&gt;:live_reload&lt;/code&gt; - configuration for the live reload option. Configuration requires a &lt;code&gt;:patterns&lt;/code&gt; option which should be a list of file patterns to watch. When these files change, it will trigger a reload. If you are using a tool like &lt;a href=&quot;http://pow.cx&quot;&gt;pow&lt;/a&gt; in development, you may need to set the &lt;code&gt;:url&lt;/code&gt; option appropriately.</target>
        </trans-unit>
        <trans-unit id="14a13f384ee74d4945898d3619b5f223173d8938" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:loaded&lt;/code&gt; - the struct was loaded from database and represents persisted data;</source>
          <target state="translated">&lt;code&gt;:loaded&lt;/code&gt; - the struct was loaded from database and represents persisted data;</target>
        </trans-unit>
        <trans-unit id="888eb2bc9342566be76b7d8f01ad23d38050165e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:locked&lt;/code&gt; - 423</source>
          <target state="translated">&lt;code&gt;:locked&lt;/code&gt; - 423</target>
        </trans-unit>
        <trans-unit id="6d544529686c9cc39a0d02572a0abb603c7ea212" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:log&lt;/code&gt; - Log level to use when the cookie cannot be decoded. Defaults to &lt;code&gt;:debug&lt;/code&gt;, can be set to false to disable it.</source>
          <target state="translated">&lt;code&gt;:log&lt;/code&gt; - Log level to use when the cookie cannot be decoded. Defaults to &lt;code&gt;:debug&lt;/code&gt;, can be set to false to disable it.</target>
        </trans-unit>
        <trans-unit id="dffbbb7cacadbb2e8887a828804cc1cdd2052ab0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:log&lt;/code&gt; - The log level at which this plug should log its request info. Default is &lt;code&gt;:info&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;:log&lt;/code&gt; - The log level at which this plug should log its request info. Default is &lt;code&gt;:info&lt;/code&gt;.</target>
        </trans-unit>
        <trans-unit id="5e5512660b08b56f66b3e6ebd5b9f8ab6de586ae" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:log&lt;/code&gt; - The log level at which this plug should log its request info. Default is &lt;code&gt;:info&lt;/code&gt;. Can be &lt;code&gt;false&lt;/code&gt; to disable logging.</source>
          <target state="translated">&lt;code&gt;:log&lt;/code&gt; - The log level at which this plug should log its request info. Default is &lt;code&gt;:info&lt;/code&gt;. Can be &lt;code&gt;false&lt;/code&gt; to disable logging.</target>
        </trans-unit>
        <trans-unit id="e5acf2b2b83d65d4e225817222e462a1ba5ca5b7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:log&lt;/code&gt; - When false, does not log the query</source>
          <target state="translated">&lt;code&gt;:log&lt;/code&gt; - When false, does not log the query</target>
        </trans-unit>
        <trans-unit id="5b6bfa90677c07ee16bdb2a109affaaa97273ca1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:log&lt;/code&gt; - the level to log. When false, disables controller logging</source>
          <target state="translated">&lt;code&gt;:log&lt;/code&gt; - the level to log. When false, disables controller logging</target>
        </trans-unit>
        <trans-unit id="e6ec8203fff9eb2fbb03757e08745056ad9a45f4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:log&lt;/code&gt; - the log level used when logging the query with Elixir&amp;rsquo;s Logger. If false, disables logging for that repository. Defaults to &lt;code&gt;:debug&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;:log&lt;/code&gt; - the log level used when logging the query with Elixir&amp;rsquo;s Logger. If false, disables logging for that repository. Defaults to &lt;code&gt;:debug&lt;/code&gt;.</target>
        </trans-unit>
        <trans-unit id="3449688e08eea5d7585e628970fb5fd4fc57314d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:log_level&lt;/code&gt; - The log level to log events, defaults &lt;code&gt;:debug&lt;/code&gt; and can be disabled with &lt;code&gt;false&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;:log_level&lt;/code&gt; - The log level to log events, defaults &lt;code&gt;:debug&lt;/code&gt; and can be disabled with &lt;code&gt;false&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1c4a8361b4b752602132b8bfcffd5657d3d72c96" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:log_on_halt&lt;/code&gt; - accepts the level to log whenever the request is halted</source>
          <target state="translated">&lt;code&gt;:log_on_halt&lt;/code&gt; - accepts the level to log whenever the request is halted</target>
        </trans-unit>
        <trans-unit id="99416941848d16782e5a280944eb2d157b11c26e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:logo&lt;/code&gt; - logo URI, or &lt;code&gt;nil&lt;/code&gt; to disable</source>
          <target state="translated">&lt;code&gt;:logo&lt;/code&gt; - logo URI, or &lt;code&gt;nil&lt;/code&gt; to disable</target>
        </trans-unit>
        <trans-unit id="2b2d0743084e1bae076e593d6d37c318370d1e9a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:loop_detected&lt;/code&gt; - 508</source>
          <target state="translated">&lt;code&gt;:loop_detected&lt;/code&gt; - 508</target>
        </trans-unit>
        <trans-unit id="22daa0f47b9c31c3da575d24cd746116d32423c1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:mark_as_invalid&lt;/code&gt; - if attempting to remove the association or embedded data via parent changeset - an error will be added to the parent changeset, and it will be marked as invalid</source>
          <target state="translated">&lt;code&gt;:mark_as_invalid&lt;/code&gt; - if attempting to remove the association or embedded data via parent changeset - an error will be added to the parent changeset, and it will be marked as invalid</target>
        </trans-unit>
        <trans-unit id="f1303f487788b92312ee5245eeb67414593b7efe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:match&lt;/code&gt; - how the changeset constraint name is matched against the repo constraint, may be &lt;code&gt;:exact&lt;/code&gt; or &lt;code&gt;:suffix&lt;/code&gt;. Defaults to &lt;code&gt;:exact&lt;/code&gt;. &lt;code&gt;:suffix&lt;/code&gt; matches any repo constraint which &lt;code&gt;ends_with?&lt;/code&gt;&lt;code&gt;:name&lt;/code&gt; to this changeset constraint.</source>
          <target state="translated">&lt;code&gt;:match&lt;/code&gt; - how the changeset constraint name is matched against the repo constraint, may be &lt;code&gt;:exact&lt;/code&gt; or &lt;code&gt;:suffix&lt;/code&gt;. Defaults to &lt;code&gt;:exact&lt;/code&gt;. &lt;code&gt;:suffix&lt;/code&gt; matches any repo constraint which &lt;code&gt;ends_with?&lt;/code&gt;&lt;code&gt;:name&lt;/code&gt; to this changeset constraint.</target>
        </trans-unit>
        <trans-unit id="e2b3d44cd2a2936b10708614fa0933fc8ed2dffa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:match&lt;/code&gt; - the type of match Ecto will perform on a violated constraint against the &lt;code&gt;:constraint&lt;/code&gt; value. It is &lt;code&gt;:exact&lt;/code&gt;, &lt;code&gt;:suffix&lt;/code&gt; or &lt;code&gt;:prefix&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;:match&lt;/code&gt; - the type of match Ecto will perform on a violated constraint against the &lt;code&gt;:constraint&lt;/code&gt; value. It is &lt;code&gt;:exact&lt;/code&gt;, &lt;code&gt;:suffix&lt;/code&gt; or &lt;code&gt;:prefix&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="40a11cb6d346fa97a97585a8366f3d6ae755f953" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:max&lt;/code&gt; - the length must be less than or equal to this value</source>
          <target state="translated">&lt;code&gt;:max&lt;/code&gt; - the length must be less than or equal to this value</target>
        </trans-unit>
        <trans-unit id="d5426c4242d548e078802aa6bb4dfc2f58812019" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:max_age&lt;/code&gt; - see &lt;a href=&quot;plug.conn#put_resp_cookie/4&quot;&gt;&lt;code&gt;Plug.Conn.put_resp_cookie/4&lt;/code&gt;&lt;/a&gt;;</source>
          <target state="translated">&lt;code&gt;:max_age&lt;/code&gt; - see &lt;a href=&quot;plug.conn#put_resp_cookie/4&quot;&gt;&lt;code&gt;Plug.Conn.put_resp_cookie/4&lt;/code&gt;&lt;/a&gt;;</target>
        </trans-unit>
        <trans-unit id="b9a66a2636d4f43f7a1e47467a5fc62b0a261e0b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:max_age&lt;/code&gt; - the cookie max-age, in seconds. Providing a value for this option will set both the &lt;em&gt;max-age&lt;/em&gt; and &lt;em&gt;expires&lt;/em&gt; cookie attributes</source>
          <target state="translated">&lt;code&gt;:max_age&lt;/code&gt; - the cookie max-age, in seconds. Providing a value for this option will set both the &lt;em&gt;max-age&lt;/em&gt; and &lt;em&gt;expires&lt;/em&gt; cookie attributes</target>
        </trans-unit>
        <trans-unit id="9dae7b85b803d287a8943d56ed038bb79c296e54" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:max_age&lt;/code&gt; - verifies the token only if it has been generated &amp;ldquo;max age&amp;rdquo; ago in seconds. A reasonable value is 1 day (&lt;code&gt;86400&lt;/code&gt; seconds)</source>
          <target state="translated">&lt;code&gt;:max_age&lt;/code&gt; - verifies the token only if it has been generated &amp;ldquo;max age&amp;rdquo; ago in seconds. A reasonable value is 1 day (&lt;code&gt;86400&lt;/code&gt; seconds)</target>
        </trans-unit>
        <trans-unit id="6fbc14c473b40ec77b5a11885a994143bcb8f2f4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:max_delta_sizes&lt;/code&gt; - The list of delta generation sizes to keep before falling back to sending entire state. Defaults &lt;code&gt;[100, 1000, 10_000]&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;:max_delta_sizes&lt;/code&gt; - The list of delta generation sizes to keep before falling back to sending entire state. Defaults &lt;code&gt;[100, 1000, 10_000]&lt;/code&gt;.</target>
        </trans-unit>
        <trans-unit id="c1a0d84d17c7e3032cefd2f4f8681706af42ec3a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:max_rows&lt;/code&gt; - The number of rows to load from the database as we stream. It is supported at least by Postgres and MySQL and defaults to 500.</source>
          <target state="translated">&lt;code&gt;:max_rows&lt;/code&gt; - The number of rows to load from the database as we stream. It is supported at least by Postgres and MySQL and defaults to 500.</target>
        </trans-unit>
        <trans-unit id="39fddd5bbbf5a4ea5b0483da67b78b49763ebc1e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:max_silent_periods&lt;/code&gt; - The max integer of broadcast periods for which no delta broadcasts have been sent. Default &lt;code&gt;10&lt;/code&gt; (15s heartbeat)</source>
          <target state="translated">&lt;code&gt;:max_silent_periods&lt;/code&gt; - The max integer of broadcast periods for which no delta broadcasts have been sent. Default &lt;code&gt;10&lt;/code&gt; (15s heartbeat)</target>
        </trans-unit>
        <trans-unit id="9ccf5dad75d9aeb6974c4fbb9dac69ee9dc7ff91" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:message&lt;/code&gt; - the message in case the constraint check fails, defaults to &amp;ldquo;does not exist&amp;rdquo;</source>
          <target state="translated">&lt;code&gt;:message&lt;/code&gt; - the message in case the constraint check fails, defaults to &amp;ldquo;does not exist&amp;rdquo;</target>
        </trans-unit>
        <trans-unit id="4b979c5c604d4a25e37884b33f9504f741ca23f7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:message&lt;/code&gt; - the message in case the constraint check fails, defaults to &amp;ldquo;has already been taken&amp;rdquo;</source>
          <target state="translated">&lt;code&gt;:message&lt;/code&gt; - the message in case the constraint check fails, defaults to &amp;ldquo;has already been taken&amp;rdquo;</target>
        </trans-unit>
        <trans-unit id="b76c3dd9d1a5a379187ced84cbe33b9638695857" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:message&lt;/code&gt; - the message in case the constraint check fails, defaults to &amp;ldquo;is still associated with this entry&amp;rdquo; (for &lt;code&gt;has_one&lt;/code&gt;) and &amp;ldquo;are still associated with this entry&amp;rdquo; (for &lt;code&gt;has_many&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;:message&lt;/code&gt; - the message in case the constraint check fails, defaults to &amp;ldquo;is still associated with this entry&amp;rdquo; (for &lt;code&gt;has_one&lt;/code&gt;) and &amp;ldquo;are still associated with this entry&amp;rdquo; (for &lt;code&gt;has_many&lt;/code&gt;)</target>
        </trans-unit>
        <trans-unit id="7e5c55ec5c1ffd464a942fd5f071eacdf7f25c5d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:message&lt;/code&gt; - the message in case the constraint check fails, defaults to &amp;ldquo;violates an exclusion constraint&amp;rdquo;</source>
          <target state="translated">&lt;code&gt;:message&lt;/code&gt; - the message in case the constraint check fails, defaults to &amp;ldquo;violates an exclusion constraint&amp;rdquo;</target>
        </trans-unit>
        <trans-unit id="313c158c95b42b45013913e0cdad53ce51a4b67a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:message&lt;/code&gt; - the message in case the constraint check fails. Defaults to &amp;ldquo;is invalid&amp;rdquo;</source>
          <target state="translated">&lt;code&gt;:message&lt;/code&gt; - the message in case the constraint check fails. Defaults to &amp;ldquo;is invalid&amp;rdquo;</target>
        </trans-unit>
        <trans-unit id="662979dd37f11f6699d02cc348494c779bfe201e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:message&lt;/code&gt; - the message on failure, defaults to &amp;ldquo;can&amp;rsquo;t be blank&amp;rdquo;</source>
          <target state="translated">&lt;code&gt;:message&lt;/code&gt; - the message on failure, defaults to &amp;ldquo;can&amp;rsquo;t be blank&amp;rdquo;</target>
        </trans-unit>
        <trans-unit id="c681a281012f4f0f4bebe9f525a2e0b9d1ad4a17" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:message&lt;/code&gt; - the message on failure, defaults to &amp;ldquo;does not match confirmation&amp;rdquo;</source>
          <target state="translated">&lt;code&gt;:message&lt;/code&gt; - the message on failure, defaults to &amp;ldquo;does not match confirmation&amp;rdquo;</target>
        </trans-unit>
        <trans-unit id="68ecc433c897bc64e433bed7911b6d69b2f87b38" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:message&lt;/code&gt; - the message on failure, defaults to &amp;ldquo;has an invalid entry&amp;rdquo;</source>
          <target state="translated">&lt;code&gt;:message&lt;/code&gt; - the message on failure, defaults to &amp;ldquo;has an invalid entry&amp;rdquo;</target>
        </trans-unit>
        <trans-unit id="ee9b0e44025e64ae0be8911cd001faddb3e38de0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:message&lt;/code&gt; - the message on failure, defaults to &amp;ldquo;has invalid format&amp;rdquo;</source>
          <target state="translated">&lt;code&gt;:message&lt;/code&gt; - the message on failure, defaults to &amp;ldquo;has invalid format&amp;rdquo;</target>
        </trans-unit>
        <trans-unit id="22aaa80f1ccabe54970869051d8b59dd9685bf51" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:message&lt;/code&gt; - the message on failure, defaults to &amp;ldquo;is invalid&amp;rdquo;</source>
          <target state="translated">&lt;code&gt;:message&lt;/code&gt; - the message on failure, defaults to &amp;ldquo;is invalid&amp;rdquo;</target>
        </trans-unit>
        <trans-unit id="b816a8d90462dc91536080127ea34e6f02756bf4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:message&lt;/code&gt; - the message on failure, defaults to &amp;ldquo;is reserved&amp;rdquo;</source>
          <target state="translated">&lt;code&gt;:message&lt;/code&gt; - the message on failure, defaults to &amp;ldquo;is reserved&amp;rdquo;</target>
        </trans-unit>
        <trans-unit id="01b95ca370d08b8abdd8e8f573526b5cc9c6f7d4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:message&lt;/code&gt; - the message on failure, defaults to &amp;ldquo;must be accepted&amp;rdquo;</source>
          <target state="translated">&lt;code&gt;:message&lt;/code&gt; - the message on failure, defaults to &amp;ldquo;must be accepted&amp;rdquo;</target>
        </trans-unit>
        <trans-unit id="68c59d0e750ad380e59200002514b92147e80136" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:message&lt;/code&gt; - the message on failure, defaults to one of:</source>
          <target state="translated">&lt;code&gt;:message&lt;/code&gt; - the message on failure, defaults to one of:</target>
        </trans-unit>
        <trans-unit id="a884e0d4714725cc3b3034db21aaf1297cd58356" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:message&lt;/code&gt; - the message on failure, depending on the validation, is one of:</source>
          <target state="translated">&lt;code&gt;:message&lt;/code&gt; - the message on failure, depending on the validation, is one of:</target>
        </trans-unit>
        <trans-unit id="ba1d391c7d54a0f31590600b87c1266d9655d0f0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:method&lt;/code&gt; - the HTTP method. If the method is not &amp;ldquo;get&amp;rdquo; nor &amp;ldquo;post&amp;rdquo;, an input tag with name &lt;code&gt;_method&lt;/code&gt; is generated along-side the form tag. Defaults to &amp;ldquo;post&amp;rdquo;.</source>
          <target state="translated">&lt;code&gt;:method&lt;/code&gt; - the HTTP method. If the method is not &amp;ldquo;get&amp;rdquo; nor &amp;ldquo;post&amp;rdquo;, an input tag with name &lt;code&gt;_method&lt;/code&gt; is generated along-side the form tag. Defaults to &amp;ldquo;post&amp;rdquo;.</target>
        </trans-unit>
        <trans-unit id="d4f1c2fda6f4e8e8eb1eae610d22848acdb550a2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:method&lt;/code&gt; - the method to use with the button. Defaults to :post.</source>
          <target state="translated">&lt;code&gt;:method&lt;/code&gt; - the method to use with the button. Defaults to :post.</target>
        </trans-unit>
        <trans-unit id="58ce1df60956bd1eaeb61429d0d64a9cbb05fdb3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:method&lt;/code&gt; - the method to use with the link. In case the method is not &lt;code&gt;:get&lt;/code&gt;, the link is generated inside the form which sets the proper information. In order to submit the form, JavaScript must be enabled</source>
          <target state="translated">&lt;code&gt;:method&lt;/code&gt; - the method to use with the link. In case the method is not &lt;code&gt;:get&lt;/code&gt;, the link is generated inside the form which sets the proper information. In order to submit the form, JavaScript must be enabled</target>
        </trans-unit>
        <trans-unit id="8a34ca58fa70ee66aa672f4d9011a4e55e769d8b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:method_not_allowed&lt;/code&gt; - 405</source>
          <target state="translated">&lt;code&gt;:method_not_allowed&lt;/code&gt; - 405</target>
        </trans-unit>
        <trans-unit id="e3aff49eb37baf5edb63b69c9b3fea52a4912e24" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:min&lt;/code&gt; - the length must be greater than or equal to this value</source>
          <target state="translated">&lt;code&gt;:min&lt;/code&gt; - the length must be greater than or equal to this value</target>
        </trans-unit>
        <trans-unit id="c89c4994a092e3a85059ea383ce47d8594990298" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:misdirected_request&lt;/code&gt; - 421</source>
          <target state="translated">&lt;code&gt;:misdirected_request&lt;/code&gt; - 421</target>
        </trans-unit>
        <trans-unit id="d120e7208e4cd993a84e2939da2508191e06a2ce" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:moved_permanently&lt;/code&gt; - 301</source>
          <target state="translated">&lt;code&gt;:moved_permanently&lt;/code&gt; - 301</target>
        </trans-unit>
        <trans-unit id="a6910673a19d4323ecd5075ee221622b36036c93" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:multi_status&lt;/code&gt; - 207</source>
          <target state="translated">&lt;code&gt;:multi_status&lt;/code&gt; - 207</target>
        </trans-unit>
        <trans-unit id="4e4e384b10df1f347b0ed04d43b8e4ab22fceba4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:multipart&lt;/code&gt; - when true, sets enctype to &amp;ldquo;multipart/form-data&amp;rdquo;. Required when uploading files</source>
          <target state="translated">&lt;code&gt;:multipart&lt;/code&gt; - when true, sets enctype to &amp;ldquo;multipart/form-data&amp;rdquo;. Required when uploading files</target>
        </trans-unit>
        <trans-unit id="2fdeb1b2e30efae5121f89ab7cee6ff685ac0633" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:multiple_choices&lt;/code&gt; - 300</source>
          <target state="translated">&lt;code&gt;:multiple_choices&lt;/code&gt; - 300</target>
        </trans-unit>
        <trans-unit id="cfe46138f8daca7f59a14d89a2bed6d88c4775cf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:name&lt;/code&gt; - The name of the server, such as: &lt;code&gt;MyApp.Tracker&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;:name&lt;/code&gt; - The name of the server, such as: &lt;code&gt;MyApp.Tracker&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e50488d0ce6b025476fdd68e7050397fd8754b47" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:name&lt;/code&gt; - The name of the server, such as: &lt;code&gt;MyApp.Tracker&lt;/code&gt; This will also form the common prefix for all shard names</source>
          <target state="translated">&lt;code&gt;:name&lt;/code&gt; - The name of the server, such as: &lt;code&gt;MyApp.Tracker&lt;/code&gt; This will also form the common prefix for all shard names</target>
        </trans-unit>
        <trans-unit id="b9bffacb9939dc16ac7a9353c93aa0b36e06b973" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:name&lt;/code&gt; - The required registered name and optional node name for pubsub processes, for example: &lt;code&gt;MyApp.PubSub&lt;/code&gt;, &lt;code&gt;{MyApp.PubSub, :node@host}&lt;/code&gt;. When only a server name is provided, the node name defaults to &lt;code&gt;node()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;:name&lt;/code&gt; - The required registered name and optional node name for pubsub processes, for example: &lt;code&gt;MyApp.PubSub&lt;/code&gt;, &lt;code&gt;{MyApp.PubSub, :node@host}&lt;/code&gt;. When only a server name is provided, the node name defaults to &lt;code&gt;node()&lt;/code&gt;.</target>
        </trans-unit>
        <trans-unit id="e965ec7f75d4fb29afad1a8b6ee8b5830e1f3aa4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:name&lt;/code&gt; - the constraint name. By default, the constraint name is inferred from the association table + association field. May be required explicitly for complex cases</source>
          <target state="translated">&lt;code&gt;:name&lt;/code&gt; - the constraint name. By default, the constraint name is inferred from the association table + association field. May be required explicitly for complex cases</target>
        </trans-unit>
        <trans-unit id="d1c17abc0ad7d1c032c626bf14c039b5accbab15" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:name&lt;/code&gt; - the constraint name. By default, the constraint name is inferred from the table + association field. May be required explicitly for complex cases</source>
          <target state="translated">&lt;code&gt;:name&lt;/code&gt; - the constraint name. By default, the constraint name is inferred from the table + association field. May be required explicitly for complex cases</target>
        </trans-unit>
        <trans-unit id="176107f3d577d9c6076d4ef00d60d4d8be773929" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:name&lt;/code&gt; - the constraint name. By default, the constraint name is inferred from the table + field. May be required explicitly for complex cases</source>
          <target state="translated">&lt;code&gt;:name&lt;/code&gt; - the constraint name. By default, the constraint name is inferred from the table + field. May be required explicitly for complex cases</target>
        </trans-unit>
        <trans-unit id="d52d62c2ef2e910ca082d036faa2466937d0cb7b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:name&lt;/code&gt; - the name of the constraint. Required.</source>
          <target state="translated">&lt;code&gt;:name&lt;/code&gt; - the name of the constraint. Required.</target>
        </trans-unit>
        <trans-unit id="0adf976b1fd3a06aa3e828c122d0d4d18b04ae39" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:name&lt;/code&gt; - the name to be used when generating input fields</source>
          <target state="translated">&lt;code&gt;:name&lt;/code&gt; - the name to be used when generating input fields</target>
        </trans-unit>
        <trans-unit id="d1013933901a8bdbca393490e39e3e4b07f855c0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:name&lt;/code&gt; - the prefix for this resource. This is used for the named helper and as the prefix for the parameter in nested resources. The default value is automatically derived from the controller name, i.e. &lt;code&gt;UserController&lt;/code&gt; will have name &lt;code&gt;&quot;user&quot;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;:name&lt;/code&gt; - the prefix for this resource. This is used for the named helper and as the prefix for the parameter in nested resources. The default value is automatically derived from the controller name, i.e. &lt;code&gt;UserController&lt;/code&gt; will have name &lt;code&gt;&quot;user&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="dcf20b5ce0e16b0bebc3ff2db628eff110882f3e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:name&lt;/code&gt;- The name of the Repo supervisor process</source>
          <target state="translated">&lt;code&gt;:name&lt;/code&gt;- The name of the Repo supervisor process</target>
        </trans-unit>
        <trans-unit id="0e563a06dbfa15c07ef6a28b5330f3a4722172eb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:namespace&lt;/code&gt; - sets the namespace to properly inflect the layout view. By default it uses the base alias in your controller name</source>
          <target state="translated">&lt;code&gt;:namespace&lt;/code&gt; - sets the namespace to properly inflect the layout view. By default it uses the base alias in your controller name</target>
        </trans-unit>
        <trans-unit id="26fe2bf804c25e856f6b4889e40b22a1dafbed6a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:namespace&lt;/code&gt; - the namespace to consider when calculating view paths</source>
          <target state="translated">&lt;code&gt;:namespace&lt;/code&gt; - the namespace to consider when calculating view paths</target>
        </trans-unit>
        <trans-unit id="422bbb536f83760dbab2f251a4c850dcbc80dd29" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:network_authentication_required&lt;/code&gt; - 511</source>
          <target state="translated">&lt;code&gt;:network_authentication_required&lt;/code&gt; - 511</target>
        </trans-unit>
        <trans-unit id="8305bb838e6c6d1e32ccc407a15340ca12fe6801" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:nilify&lt;/code&gt; - sets owner reference column to &lt;code&gt;nil&lt;/code&gt; (available only for associations). Use this on a &lt;code&gt;belongs_to&lt;/code&gt; column to allow the association to be cleared out so that it can be set to a new value. Will set &lt;code&gt;action&lt;/code&gt; on associated changesets to &lt;code&gt;:replace&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;:nilify&lt;/code&gt; - sets owner reference column to &lt;code&gt;nil&lt;/code&gt; (available only for associations). Use this on a &lt;code&gt;belongs_to&lt;/code&gt; column to allow the association to be cleared out so that it can be set to a new value. Will set &lt;code&gt;action&lt;/code&gt; on associated changesets to &lt;code&gt;:replace&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4607ef6299c366313717dad319d4380c1f124148" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:no_content&lt;/code&gt; - 204</source>
          <target state="translated">&lt;code&gt;:no_content&lt;/code&gt; - 204</target>
        </trans-unit>
        <trans-unit id="d2da82c7dd181ac2b768bd2bece452aa471e69ed" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:non_authoritative_information&lt;/code&gt; - 203</source>
          <target state="translated">&lt;code&gt;:non_authoritative_information&lt;/code&gt; - 203</target>
        </trans-unit>
        <trans-unit id="5b825204aa49c29efb471b2c6cafda33297e897b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:noreply&lt;/code&gt; - Nothing to be done by the transport</source>
          <target state="translated">&lt;code&gt;:noreply&lt;/code&gt; - Nothing to be done by the transport</target>
        </trans-unit>
        <trans-unit id="e11efff6388106901ee425cf3276f58de8dfc0b4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:normal&lt;/code&gt; - in such cases, the exit won&amp;rsquo;t be logged, there is no restart in transient mode, and linked processes do not exit</source>
          <target state="translated">&lt;code&gt;:normal&lt;/code&gt; - in such cases, the exit won&amp;rsquo;t be logged, there is no restart in transient mode, and linked processes do not exit</target>
        </trans-unit>
        <trans-unit id="bf16a0cb151458c4bbe810828ac70da7a9c6b053" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:normal&lt;/code&gt; - used if the startup is a normal startup or if the application is distributed and is started on the current node because of a failover from another node and the application specification key &lt;code&gt;:start_phases&lt;/code&gt; is &lt;code&gt;:undefined&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;:normal&lt;/code&gt; - used if the startup is a normal startup or if the application is distributed and is started on the current node because of a failover from another node and the application specification key &lt;code&gt;:start_phases&lt;/code&gt; is &lt;code&gt;:undefined&lt;/code&gt;.</target>
        </trans-unit>
        <trans-unit id="624912945fc424b767ffde2612a4e7b2f91d2f08" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:not_acceptable&lt;/code&gt; - 406</source>
          <target state="translated">&lt;code&gt;:not_acceptable&lt;/code&gt; - 406</target>
        </trans-unit>
        <trans-unit id="f28dd741039cb9e72b03e0f11a5ffb72e9f0bc85" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:not_extended&lt;/code&gt; - 510</source>
          <target state="translated">&lt;code&gt;:not_extended&lt;/code&gt; - 510</target>
        </trans-unit>
        <trans-unit id="652aa1358070deac15275d91759ba37ccc0bb01c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:not_found&lt;/code&gt; - 404</source>
          <target state="translated">&lt;code&gt;:not_found&lt;/code&gt; - 404</target>
        </trans-unit>
        <trans-unit id="ff264f227c4e7ee5731be940c8c4e4cd26022354" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:not_implemented&lt;/code&gt; - 501</source>
          <target state="translated">&lt;code&gt;:not_implemented&lt;/code&gt; - 501</target>
        </trans-unit>
        <trans-unit id="d52c3e25011d10bc15df8e4c6bfa3126505b806a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:not_modified&lt;/code&gt; - 304</source>
          <target state="translated">&lt;code&gt;:not_modified&lt;/code&gt; - 304</target>
        </trans-unit>
        <trans-unit id="0cdee5c632cde34ccdefd746cd745ce89f3a8106" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:nothing&lt;/code&gt; - ignores the error in case of conflicts</source>
          <target state="translated">&lt;code&gt;:nothing&lt;/code&gt; - ignores the error in case of conflicts</target>
        </trans-unit>
        <trans-unit id="0362ca35f2da877f8c1e7d91a1f7be879254c315" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:ok&lt;/code&gt; - 200</source>
          <target state="translated">&lt;code&gt;:ok&lt;/code&gt; - 200</target>
        </trans-unit>
        <trans-unit id="4e47725e5b7235af151fc3d9d1c44755492522ba" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:on&lt;/code&gt; - a query expression or keyword list to filter the join</source>
          <target state="translated">&lt;code&gt;:on&lt;/code&gt; - a query expression or keyword list to filter the join</target>
        </trans-unit>
        <trans-unit id="c193b14d28ef1fc54845f049a34170e86400e080" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:on_conflict&lt;/code&gt; - It may be one of &lt;code&gt;:raise&lt;/code&gt; (the default), &lt;code&gt;:nothing&lt;/code&gt;, &lt;code&gt;:replace_all&lt;/code&gt;, &lt;code&gt;:replace_all_except_primary_key&lt;/code&gt;, &lt;code&gt;{:replace, fields}&lt;/code&gt;, a keyword list of update instructions or an &lt;a href=&quot;ecto.query&quot;&gt;&lt;code&gt;Ecto.Query&lt;/code&gt;&lt;/a&gt; query for updates. See the &amp;ldquo;Upserts&amp;rdquo; section for more information.</source>
          <target state="translated">&lt;code&gt;:on_conflict&lt;/code&gt; - It may be one of &lt;code&gt;:raise&lt;/code&gt; (the default), &lt;code&gt;:nothing&lt;/code&gt;, &lt;code&gt;:replace_all&lt;/code&gt;, &lt;code&gt;:replace_all_except_primary_key&lt;/code&gt;, &lt;code&gt;{:replace, fields}&lt;/code&gt;, a keyword list of update instructions or an &lt;a href=&quot;ecto.query&quot;&gt;&lt;code&gt;Ecto.Query&lt;/code&gt;&lt;/a&gt; query for updates. See the &amp;ldquo;Upserts&amp;rdquo; section for more information.</target>
        </trans-unit>
        <trans-unit id="ef36a3a94b04b767ebf7e14a18507fd931ac04b8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:on_conflict&lt;/code&gt; - It may be one of &lt;code&gt;:raise&lt;/code&gt; (the default), &lt;code&gt;:nothing&lt;/code&gt;, &lt;code&gt;:replace_all&lt;/code&gt;, &lt;code&gt;:replace_all_except_primary_key&lt;/code&gt;, &lt;code&gt;{:replace, fields}&lt;/code&gt;, a keyword list of update instructions, &lt;code&gt;{:replace, fields}&lt;/code&gt; or an &lt;a href=&quot;ecto.query&quot;&gt;&lt;code&gt;Ecto.Query&lt;/code&gt;&lt;/a&gt; query for updates. See the &amp;ldquo;Upserts&amp;rdquo; section for more information.</source>
          <target state="translated">&lt;code&gt;:on_conflict&lt;/code&gt; - It may be one of &lt;code&gt;:raise&lt;/code&gt; (the default), &lt;code&gt;:nothing&lt;/code&gt;, &lt;code&gt;:replace_all&lt;/code&gt;, &lt;code&gt;:replace_all_except_primary_key&lt;/code&gt;, &lt;code&gt;{:replace, fields}&lt;/code&gt;, a keyword list of update instructions, &lt;code&gt;{:replace, fields}&lt;/code&gt; or an &lt;a href=&quot;ecto.query&quot;&gt;&lt;code&gt;Ecto.Query&lt;/code&gt;&lt;/a&gt; query for updates. See the &amp;ldquo;Upserts&amp;rdquo; section for more information.</target>
        </trans-unit>
        <trans-unit id="e2b1eed524aead4912bf7e47cb8c4e5fcf7c06b2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:on_delete&lt;/code&gt; - The action taken on associations when parent record is deleted. May be &lt;code&gt;:nothing&lt;/code&gt; (default), &lt;code&gt;:nilify_all&lt;/code&gt; and &lt;code&gt;:delete_all&lt;/code&gt;. Using this option is DISCOURAGED for most relational databases. Instead, in your migration, set &lt;code&gt;references(:parent_id, on_delete: :delete_all)&lt;/code&gt;. Opposite to the migration option, this option cannot guarantee integrity and it is only triggered for &lt;a href=&quot;ecto.repo#c:delete/2&quot;&gt;&lt;code&gt;Ecto.Repo.delete/2&lt;/code&gt;&lt;/a&gt; (and not on &lt;a href=&quot;ecto.repo#c:delete_all/2&quot;&gt;&lt;code&gt;Ecto.Repo.delete_all/2&lt;/code&gt;&lt;/a&gt;) and it never cascades. If posts has many comments, which has many tags, and you delete a post, only comments will be deleted. If your database does not support references, cascading can be manually implemented by using &lt;a href=&quot;ecto.multi&quot;&gt;&lt;code&gt;Ecto.Multi&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;ecto.changeset#prepare_changes/2&quot;&gt;&lt;code&gt;Ecto.Changeset.prepare_changes/2&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;:on_delete&lt;/code&gt; - The action taken on associations when parent record is deleted. May be &lt;code&gt;:nothing&lt;/code&gt; (default), &lt;code&gt;:nilify_all&lt;/code&gt; and &lt;code&gt;:delete_all&lt;/code&gt;. Using this option is DISCOURAGED for most relational databases. Instead, in your migration, set &lt;code&gt;references(:parent_id, on_delete: :delete_all)&lt;/code&gt;. Opposite to the migration option, this option cannot guarantee integrity and it is only triggered for &lt;a href=&quot;ecto.repo#c:delete/2&quot;&gt;&lt;code&gt;Ecto.Repo.delete/2&lt;/code&gt;&lt;/a&gt; (and not on &lt;a href=&quot;ecto.repo#c:delete_all/2&quot;&gt;&lt;code&gt;Ecto.Repo.delete_all/2&lt;/code&gt;&lt;/a&gt;) and it never cascades. If posts has many comments, which has many tags, and you delete a post, only comments will be deleted. If your database does not support references, cascading can be manually implemented by using &lt;a href=&quot;ecto.multi&quot;&gt;&lt;code&gt;Ecto.Multi&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;ecto.changeset#prepare_changes/2&quot;&gt;&lt;code&gt;Ecto.Changeset.prepare_changes/2&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c8839c970620207471a40fc06be4a7c6b470c8de" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:on_delete&lt;/code&gt; - The action taken on associations when parent record is deleted. May be &lt;code&gt;:nothing&lt;/code&gt; (default), &lt;code&gt;:nilify_all&lt;/code&gt; and &lt;code&gt;:delete_all&lt;/code&gt;. Using this option is DISCOURAGED for most relational databases. Instead, in your migration, set &lt;code&gt;references(:parent_id, on_delete: :delete_all)&lt;/code&gt;. Opposite to the migration option, this option cannot guarantee integrity and it is only triggered for &lt;a href=&quot;ecto.repo#c:delete/2&quot;&gt;&lt;code&gt;Ecto.Repo.delete/2&lt;/code&gt;&lt;/a&gt; (and not on &lt;a href=&quot;ecto.repo#c:delete_all/2&quot;&gt;&lt;code&gt;Ecto.Repo.delete_all/2&lt;/code&gt;&lt;/a&gt;) and it never cascades. If posts has many comments, which has many tags, and you delete a post, only comments will be deleted. If your database does not support references, cascading can be manually implemented by using &lt;a href=&quot;ecto.multi&quot;&gt;&lt;code&gt;Ecto.Multi&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;ecto.changeset#prepare_changes/2&quot;&gt;&lt;code&gt;Ecto.Changeset.prepare_changes/2&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;:on_delete&lt;/code&gt; - The action taken on associations when parent record is deleted. May be &lt;code&gt;:nothing&lt;/code&gt; (default), &lt;code&gt;:nilify_all&lt;/code&gt; and &lt;code&gt;:delete_all&lt;/code&gt;. Using this option is DISCOURAGED for most relational databases. Instead, in your migration, set &lt;code&gt;references(:parent_id, on_delete: :delete_all)&lt;/code&gt;. Opposite to the migration option, this option cannot guarantee integrity and it is only triggered for &lt;a href=&quot;ecto.repo#c:delete/2&quot;&gt;&lt;code&gt;Ecto.Repo.delete/2&lt;/code&gt;&lt;/a&gt; (and not on &lt;a href=&quot;ecto.repo#c:delete_all/2&quot;&gt;&lt;code&gt;Ecto.Repo.delete_all/2&lt;/code&gt;&lt;/a&gt;) and it never cascades. If posts has many comments, which has many tags, and you delete a post, only comments will be deleted. If your database does not support references, cascading can be manually implemented by using &lt;a href=&quot;ecto.multi&quot;&gt;&lt;code&gt;Ecto.Multi&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;ecto.changeset#prepare_changes/2&quot;&gt;&lt;code&gt;Ecto.Changeset.prepare_changes/2&lt;/code&gt;&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="7a3ebfb4894069761405562a6e4d45c7e9494495" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:on_delete&lt;/code&gt; - The action taken on associations when the parent record is deleted. May be &lt;code&gt;:nothing&lt;/code&gt; (default) or &lt;code&gt;:delete_all&lt;/code&gt;. Using this option is DISCOURAGED for most relational databases. Instead, in your migration, set &lt;code&gt;references(:parent_id, on_delete: :delete_all)&lt;/code&gt;. Opposite to the migration option, this option cannot guarantee integrity and it is only triggered for &lt;a href=&quot;ecto.repo#c:delete/2&quot;&gt;&lt;code&gt;Ecto.Repo.delete/2&lt;/code&gt;&lt;/a&gt; (and not on &lt;a href=&quot;ecto.repo#c:delete_all/2&quot;&gt;&lt;code&gt;Ecto.Repo.delete_all/2&lt;/code&gt;&lt;/a&gt;). This option can only remove data from the join source, never the associated records, and it never cascades.</source>
          <target state="translated">&lt;code&gt;:on_delete&lt;/code&gt; - The action taken on associations when the parent record is deleted. May be &lt;code&gt;:nothing&lt;/code&gt; (default) or &lt;code&gt;:delete_all&lt;/code&gt;. Using this option is DISCOURAGED for most relational databases. Instead, in your migration, set &lt;code&gt;references(:parent_id, on_delete: :delete_all)&lt;/code&gt;. Opposite to the migration option, this option cannot guarantee integrity and it is only triggered for &lt;a href=&quot;ecto.repo#c:delete/2&quot;&gt;&lt;code&gt;Ecto.Repo.delete/2&lt;/code&gt;&lt;/a&gt; (and not on &lt;a href=&quot;ecto.repo#c:delete_all/2&quot;&gt;&lt;code&gt;Ecto.Repo.delete_all/2&lt;/code&gt;&lt;/a&gt;). This option can only remove data from the join source, never the associated records, and it never cascades.</target>
        </trans-unit>
        <trans-unit id="8be77e73400917c2bd888542fb5ac44df49b49b3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:on_replace&lt;/code&gt; - The action taken on associations when the embed is replaced when casting or manipulating parent changeset. May be &lt;code&gt;:raise&lt;/code&gt; (default), &lt;code&gt;:mark_as_invalid&lt;/code&gt;, &lt;code&gt;:update&lt;/code&gt;, or &lt;code&gt;:delete&lt;/code&gt;. See &lt;a href=&quot;ecto.changeset&quot;&gt;&lt;code&gt;Ecto.Changeset&lt;/code&gt;&lt;/a&gt;&amp;rsquo;s section on related data for more info.</source>
          <target state="translated">&lt;code&gt;:on_replace&lt;/code&gt; - The action taken on associations when the embed is replaced when casting or manipulating parent changeset. May be &lt;code&gt;:raise&lt;/code&gt; (default), &lt;code&gt;:mark_as_invalid&lt;/code&gt;, &lt;code&gt;:update&lt;/code&gt;, or &lt;code&gt;:delete&lt;/code&gt;. See &lt;a href=&quot;ecto.changeset&quot;&gt;&lt;code&gt;Ecto.Changeset&lt;/code&gt;&lt;/a&gt;&amp;rsquo;s section on related data for more info.</target>
        </trans-unit>
        <trans-unit id="aa2f288c2b39f93574dc29811fa50867cc68076d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:on_replace&lt;/code&gt; - The action taken on associations when the embed is replaced when casting or manipulating parent changeset. May be &lt;code&gt;:raise&lt;/code&gt; (default), &lt;code&gt;:mark_as_invalid&lt;/code&gt;, or &lt;code&gt;:delete&lt;/code&gt;. See &lt;a href=&quot;ecto.changeset&quot;&gt;&lt;code&gt;Ecto.Changeset&lt;/code&gt;&lt;/a&gt;&amp;rsquo;s section on related data for more info.</source>
          <target state="translated">&lt;code&gt;:on_replace&lt;/code&gt; - The action taken on associations when the embed is replaced when casting or manipulating parent changeset. May be &lt;code&gt;:raise&lt;/code&gt; (default), &lt;code&gt;:mark_as_invalid&lt;/code&gt;, or &lt;code&gt;:delete&lt;/code&gt;. See &lt;a href=&quot;ecto.changeset&quot;&gt;&lt;code&gt;Ecto.Changeset&lt;/code&gt;&lt;/a&gt;&amp;rsquo;s section on related data for more info.</target>
        </trans-unit>
        <trans-unit id="c06d3d14555371f332bd1c5d55eb5c90703e4bde" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:on_replace&lt;/code&gt; - The action taken on associations when the record is replaced when casting or manipulating parent changeset. May be &lt;code&gt;:raise&lt;/code&gt; (default), &lt;code&gt;:mark_as_invalid&lt;/code&gt;, &lt;code&gt;:nilify&lt;/code&gt;, &lt;code&gt;:update&lt;/code&gt;, or &lt;code&gt;:delete&lt;/code&gt;. See &lt;a href=&quot;ecto.changeset&quot;&gt;&lt;code&gt;Ecto.Changeset&lt;/code&gt;&lt;/a&gt;&amp;rsquo;s section on related data for more info.</source>
          <target state="translated">&lt;code&gt;:on_replace&lt;/code&gt; - The action taken on associations when the record is replaced when casting or manipulating parent changeset. May be &lt;code&gt;:raise&lt;/code&gt; (default), &lt;code&gt;:mark_as_invalid&lt;/code&gt;, &lt;code&gt;:nilify&lt;/code&gt;, &lt;code&gt;:update&lt;/code&gt;, or &lt;code&gt;:delete&lt;/code&gt;. See &lt;a href=&quot;ecto.changeset&quot;&gt;&lt;code&gt;Ecto.Changeset&lt;/code&gt;&lt;/a&gt;&amp;rsquo;s section on related data for more info.</target>
        </trans-unit>
        <trans-unit id="c13c5eb4cdb1a3f78e47425f41551138dc4715c7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:on_replace&lt;/code&gt; - The action taken on associations when the record is replaced when casting or manipulating parent changeset. May be &lt;code&gt;:raise&lt;/code&gt; (default), &lt;code&gt;:mark_as_invalid&lt;/code&gt;, &lt;code&gt;:nilify&lt;/code&gt;, or &lt;code&gt;:delete&lt;/code&gt;. See &lt;a href=&quot;ecto.changeset&quot;&gt;&lt;code&gt;Ecto.Changeset&lt;/code&gt;&lt;/a&gt;&amp;rsquo;s section on related data for more info.</source>
          <target state="translated">&lt;code&gt;:on_replace&lt;/code&gt; - The action taken on associations when the record is replaced when casting or manipulating parent changeset. May be &lt;code&gt;:raise&lt;/code&gt; (default), &lt;code&gt;:mark_as_invalid&lt;/code&gt;, &lt;code&gt;:nilify&lt;/code&gt;, or &lt;code&gt;:delete&lt;/code&gt;. See &lt;a href=&quot;ecto.changeset&quot;&gt;&lt;code&gt;Ecto.Changeset&lt;/code&gt;&lt;/a&gt;&amp;rsquo;s section on related data for more info.</target>
        </trans-unit>
        <trans-unit id="844fb3290318c6f6b2b046e1da510e82c54ccd88" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:on_replace&lt;/code&gt; - The action taken on associations when the record is replaced when casting or manipulating parent changeset. May be &lt;code&gt;:raise&lt;/code&gt; (default), &lt;code&gt;:mark_as_invalid&lt;/code&gt;, or &lt;code&gt;:delete&lt;/code&gt;. &lt;code&gt;:delete&lt;/code&gt; will only remove data from the join source, never the associated records. See &lt;a href=&quot;ecto.changeset&quot;&gt;&lt;code&gt;Ecto.Changeset&lt;/code&gt;&lt;/a&gt;&amp;rsquo;s section on related data for more info.</source>
          <target state="translated">&lt;code&gt;:on_replace&lt;/code&gt; - The action taken on associations when the record is replaced when casting or manipulating parent changeset. May be &lt;code&gt;:raise&lt;/code&gt; (default), &lt;code&gt;:mark_as_invalid&lt;/code&gt;, or &lt;code&gt;:delete&lt;/code&gt;. &lt;code&gt;:delete&lt;/code&gt; will only remove data from the join source, never the associated records. See &lt;a href=&quot;ecto.changeset&quot;&gt;&lt;code&gt;Ecto.Changeset&lt;/code&gt;&lt;/a&gt;&amp;rsquo;s section on related data for more info.</target>
        </trans-unit>
        <trans-unit id="27cfdfa005149562342843dc8cc51534321afc27" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:only&lt;/code&gt; - a list of actions to generate routes for, for example: &lt;code&gt;[:show, :edit]&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;:only&lt;/code&gt; - a list of actions to generate routes for, for example: &lt;code&gt;[:show, :edit]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8fd14e230a80329cee19edeab42d1c11533f2c63" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:only&lt;/code&gt; - filters which requests to serve. This is useful to avoid file system traversals on every request when this plug is mounted at &lt;code&gt;&quot;/&quot;&lt;/code&gt;. For example, if &lt;code&gt;only: [&quot;images&quot;, &quot;favicon.ico&quot;]&lt;/code&gt; is specified, only files in the &amp;ldquo;images&amp;rdquo; directory and the exact &amp;ldquo;favicon.ico&amp;rdquo; file will be served by &lt;a href=&quot;plug.static#content&quot;&gt;&lt;code&gt;Plug.Static&lt;/code&gt;&lt;/a&gt;. Defaults to &lt;code&gt;nil&lt;/code&gt; (no filtering).</source>
          <target state="translated">&lt;code&gt;:only&lt;/code&gt; - filters which requests to serve. This is useful to avoid file system traversals on every request when this plug is mounted at &lt;code&gt;&quot;/&quot;&lt;/code&gt;. For example, if &lt;code&gt;only: [&quot;images&quot;, &quot;favicon.ico&quot;]&lt;/code&gt; is specified, only files in the &amp;ldquo;images&amp;rdquo; directory and the exact &amp;ldquo;favicon.ico&amp;rdquo; file will be served by &lt;a href=&quot;plug.static#content&quot;&gt;&lt;code&gt;Plug.Static&lt;/code&gt;&lt;/a&gt;. Defaults to &lt;code&gt;nil&lt;/code&gt; (no filtering).</target>
        </trans-unit>
        <trans-unit id="0c267ddde67ce036a5c4504b099c56bc9ccb01e5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:only_matching&lt;/code&gt; - a relaxed version of &lt;code&gt;:only&lt;/code&gt; that will serve any request as long as one of the given values matches the given path. For example, &lt;code&gt;only_matching: [&quot;images&quot;, &quot;favicon&quot;]&lt;/code&gt; will match any request that starts at &amp;ldquo;images&amp;rdquo; or &amp;ldquo;favicon&amp;rdquo;, be it &amp;ldquo;/images/foo.png&amp;rdquo;, &amp;ldquo;/images-high/foo.png&amp;rdquo;, &amp;ldquo;/favicon.ico&amp;rdquo; or &amp;ldquo;/favicon-high.ico&amp;rdquo;. Such matches are useful when serving digested files at the root. Defaults to &lt;code&gt;nil&lt;/code&gt; (no filtering).</source>
          <target state="translated">&lt;code&gt;:only_matching&lt;/code&gt; - a relaxed version of &lt;code&gt;:only&lt;/code&gt; that will serve any request as long as one of the given values matches the given path. For example, &lt;code&gt;only_matching: [&quot;images&quot;, &quot;favicon&quot;]&lt;/code&gt; will match any request that starts at &amp;ldquo;images&amp;rdquo; or &amp;ldquo;favicon&amp;rdquo;, be it &amp;ldquo;/images/foo.png&amp;rdquo;, &amp;ldquo;/images-high/foo.png&amp;rdquo;, &amp;ldquo;/favicon.ico&amp;rdquo; or &amp;ldquo;/favicon-high.ico&amp;rdquo;. Such matches are useful when serving digested files at the root. Defaults to &lt;code&gt;nil&lt;/code&gt; (no filtering).</target>
        </trans-unit>
        <trans-unit id="5ed2f7d6983bc28613389876ddbab4468a73de81" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:options&lt;/code&gt; - a copy of the options given when creating the form via &lt;a href=&quot;#form_for/4&quot;&gt;&lt;code&gt;form_for/4&lt;/code&gt;&lt;/a&gt; without any form data specific key</source>
          <target state="translated">&lt;code&gt;:options&lt;/code&gt; - a copy of the options given when creating the form via &lt;a href=&quot;#form_for/4&quot;&gt;&lt;code&gt;form_for/4&lt;/code&gt;&lt;/a&gt; without any form data specific key</target>
        </trans-unit>
        <trans-unit id="640dfc213bcbd594b45a98af03b8044792f7832e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:otp_app&lt;/code&gt; - the OTP application that is using Plug. This option is used to filter stacktraces that belong only to the given application.</source>
          <target state="translated">&lt;code&gt;:otp_app&lt;/code&gt; - the OTP application that is using Plug. This option is used to filter stacktraces that belong only to the given application.</target>
        </trans-unit>
        <trans-unit id="f7894e4a842f4a54d41c419ce6d8ea5b5aafe520" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:param&lt;/code&gt; - the name of the parameter for this resource, defaults to &lt;code&gt;&quot;id&quot;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;:param&lt;/code&gt; - the name of the parameter for this resource, defaults to &lt;code&gt;&quot;id&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="869dff8b8f05c3070641e826e9117b08f19cad43" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:params&lt;/code&gt; - the parameters associated to this form in case they were sent as part of a previous request</source>
          <target state="translated">&lt;code&gt;:params&lt;/code&gt; - the parameters associated to this form in case they were sent as part of a previous request</target>
        </trans-unit>
        <trans-unit id="8de93a73bd6c97ce19ccffd3143d9b2abe0b84f0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:parsers&lt;/code&gt; - a list of modules or atoms of built-in parsers to be invoked for parsing. These modules need to implement the behaviour outlined in this module.</source>
          <target state="translated">&lt;code&gt;:parsers&lt;/code&gt; - a list of modules or atoms of built-in parsers to be invoked for parsing. These modules need to implement the behaviour outlined in this module.</target>
        </trans-unit>
        <trans-unit id="3dd8da418df4c1b64403c74f603251d47044dfbf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:parsers&lt;/code&gt; - a list of modules to be invoked for parsing. These modules need to implement the behaviour outlined in this module.</source>
          <target state="translated">&lt;code&gt;:parsers&lt;/code&gt; - a list of modules to be invoked for parsing. These modules need to implement the behaviour outlined in this module.</target>
        </trans-unit>
        <trans-unit id="c9d410c45c3f5a6dc5c2b5f3a3f1eac7656bd439" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:partial_content&lt;/code&gt; - 206</source>
          <target state="translated">&lt;code&gt;:partial_content&lt;/code&gt; - 206</target>
        </trans-unit>
        <trans-unit id="e84ed400d3aee76e87236f79880036f476660d27" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:pass&lt;/code&gt; - an optional list of MIME type strings that are allowed to pass through. Any mime not handled by a parser and not explicitly listed in &lt;code&gt;:pass&lt;/code&gt; will &lt;code&gt;raise UnsupportedMediaTypeError&lt;/code&gt;. For example:</source>
          <target state="translated">&lt;code&gt;:pass&lt;/code&gt; - an optional list of MIME type strings that are allowed to pass through. Any mime not handled by a parser and not explicitly listed in &lt;code&gt;:pass&lt;/code&gt; will &lt;code&gt;raise UnsupportedMediaTypeError&lt;/code&gt;. For example:</target>
        </trans-unit>
        <trans-unit id="46b51bfe1b3585fe849b2f921eb29ac087c5bc20" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:path&lt;/code&gt; - a string containing the path scope</source>
          <target state="translated">&lt;code&gt;:path&lt;/code&gt; - a string containing the path scope</target>
        </trans-unit>
        <trans-unit id="5c369f0ee383cca445a4c186bacd5c7cfb718685" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:path&lt;/code&gt; - see &lt;a href=&quot;plug.conn#put_resp_cookie/4&quot;&gt;&lt;code&gt;Plug.Conn.put_resp_cookie/4&lt;/code&gt;&lt;/a&gt;;</source>
          <target state="translated">&lt;code&gt;:path&lt;/code&gt; - see &lt;a href=&quot;plug.conn#put_resp_cookie/4&quot;&gt;&lt;code&gt;Plug.Conn.put_resp_cookie/4&lt;/code&gt;&lt;/a&gt;;</target>
        </trans-unit>
        <trans-unit id="92bb9babd80891d47cca1bb7895d16a6bf798944" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:path&lt;/code&gt; - the optional path to search for templates within the &lt;code&gt;:root&lt;/code&gt;. Defaults to the underscored view module name. A blank string may be provided to use the &lt;code&gt;:root&lt;/code&gt; path directly as the template lookup path.</source>
          <target state="translated">&lt;code&gt;:path&lt;/code&gt; - the optional path to search for templates within the &lt;code&gt;:root&lt;/code&gt;. Defaults to the underscored view module name. A blank string may be provided to use the &lt;code&gt;:root&lt;/code&gt; path directly as the template lookup path.</target>
        </trans-unit>
        <trans-unit id="937c2840f349869eb9816de19e316fcd8dfd53d7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:path&lt;/code&gt; - the path the cookie applies to</source>
          <target state="translated">&lt;code&gt;:path&lt;/code&gt; - the path the cookie applies to</target>
        </trans-unit>
        <trans-unit id="f04805a1cfb87d011b17b9b45df85be07773e0f4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:path&lt;/code&gt; - the path to the uploaded file on the filesystem</source>
          <target state="translated">&lt;code&gt;:path&lt;/code&gt; - the path to the uploaded file on the filesystem</target>
        </trans-unit>
        <trans-unit id="8991d2eb911db320fd9b665bb9f5125b7381f8f1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:pattern&lt;/code&gt; - the wildcard pattern to apply to the root when finding templates. Default &lt;code&gt;&quot;*&quot;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;:pattern&lt;/code&gt; - the wildcard pattern to apply to the root when finding templates. Default &lt;code&gt;&quot;*&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="bb60c7fd4447eb492c95042d52a62752907b0880" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:payment_required&lt;/code&gt; - 402</source>
          <target state="translated">&lt;code&gt;:payment_required&lt;/code&gt; - 402</target>
        </trans-unit>
        <trans-unit id="f93bc16152bc39a797a5e1c1c00bd1f0fafdc157" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:permanent_redirect&lt;/code&gt; - 308</source>
          <target state="translated">&lt;code&gt;:permanent_redirect&lt;/code&gt; - 308</target>
        </trans-unit>
        <trans-unit id="91f63fbe840bc33af07e7e306d4ed7d6dd88cb37" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:permdown_period&lt;/code&gt; - The interval in milliseconds to flag a replica as permanently down, and discard its state. Note: This must be at least greater than the &lt;code&gt;down_period&lt;/code&gt;. Default &lt;code&gt;1_200_000&lt;/code&gt; (20 minutes)</source>
          <target state="translated">&lt;code&gt;:permdown_period&lt;/code&gt; - The interval in milliseconds to flag a replica as permanently down, and discard its state. Note: This must be at least greater than the &lt;code&gt;down_period&lt;/code&gt;. Default &lt;code&gt;1_200_000&lt;/code&gt; (20 minutes)</target>
        </trans-unit>
        <trans-unit id="0ccd1ffd5ae833bfd2abea7b14d03fbc93b59a0d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:phoenix_channel_join&lt;/code&gt; - the joining of a channel. The &lt;code&gt;%Phoenix.Socket{}&lt;/code&gt; and join params are passed as runtime metadata via &lt;code&gt;:socket&lt;/code&gt; and &lt;code&gt;:params&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;:phoenix_channel_join&lt;/code&gt; - the joining of a channel. The &lt;code&gt;%Phoenix.Socket{}&lt;/code&gt; and join params are passed as runtime metadata via &lt;code&gt;:socket&lt;/code&gt; and &lt;code&gt;:params&lt;/code&gt;.</target>
        </trans-unit>
        <trans-unit id="8c8e50984d9e546ac6e6d44f2b7e63797d8782a6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:phoenix_channel_receive&lt;/code&gt; - the receipt of an incoming message over a channel. The &lt;code&gt;%Phoenix.Socket{}&lt;/code&gt;, payload, event, and ref are passed as runtime metadata via &lt;code&gt;:socket&lt;/code&gt;, &lt;code&gt;:params&lt;/code&gt;, &lt;code&gt;:event&lt;/code&gt;, and &lt;code&gt;:ref&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;:phoenix_channel_receive&lt;/code&gt; - the receipt of an incoming message over a channel. The &lt;code&gt;%Phoenix.Socket{}&lt;/code&gt;, payload, event, and ref are passed as runtime metadata via &lt;code&gt;:socket&lt;/code&gt;, &lt;code&gt;:params&lt;/code&gt;, &lt;code&gt;:event&lt;/code&gt;, and &lt;code&gt;:ref&lt;/code&gt;.</target>
        </trans-unit>
        <trans-unit id="ad5e293f75994ab37106ad6b6cbb01434ceff71c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:phoenix_controller_call&lt;/code&gt; - it&amp;rsquo;s the whole controller pipeline. The &lt;code&gt;%Plug.Conn{}&lt;/code&gt; is passed as runtime metadata.</source>
          <target state="translated">&lt;code&gt;:phoenix_controller_call&lt;/code&gt; - it&amp;rsquo;s the whole controller pipeline. The &lt;code&gt;%Plug.Conn{}&lt;/code&gt; is passed as runtime metadata.</target>
        </trans-unit>
        <trans-unit id="54d3f758bdaf1f9c4b5e0046a9d59d1fe121146b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:phoenix_controller_render&lt;/code&gt; - the rendering of a view from a controller. The map of runtime metadata passed to instrumentation callbacks has the &lt;code&gt;:view&lt;/code&gt; key - for the name of the view, e.g. &lt;code&gt;HexWeb.ErrorView&lt;/code&gt;, the &lt;code&gt;:template&lt;/code&gt; key - for the name of the template, e.g., &lt;code&gt;&quot;index.html&quot;&lt;/code&gt;, the &lt;code&gt;:format&lt;/code&gt; key - for the format of the template, and the &lt;code&gt;:conn&lt;/code&gt; key - containing the &lt;code&gt;%Plug.Conn{}&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;:phoenix_controller_render&lt;/code&gt; - the rendering of a view from a controller. The map of runtime metadata passed to instrumentation callbacks has the &lt;code&gt;:view&lt;/code&gt; key - for the name of the view, e.g. &lt;code&gt;HexWeb.ErrorView&lt;/code&gt;, the &lt;code&gt;:template&lt;/code&gt; key - for the name of the template, e.g., &lt;code&gt;&quot;index.html&quot;&lt;/code&gt;, the &lt;code&gt;:format&lt;/code&gt; key - for the format of the template, and the &lt;code&gt;:conn&lt;/code&gt; key - containing the &lt;code&gt;%Plug.Conn{}&lt;/code&gt;.</target>
        </trans-unit>
        <trans-unit id="b1e046f0293309f6f3582e1fd7022a90e60ababc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:pool_size&lt;/code&gt; - Both the size of the local pubsub pool and subscriber shard size. Defaults to the number of schedulers (cores). A single pool is often enough for most use-cases, but for high subscriber counts on single topics or greater than 1M clients, a pool size equal to the number of schedulers (cores) is a well rounded size.</source>
          <target state="translated">&lt;code&gt;:pool_size&lt;/code&gt; - Both the size of the local pubsub pool and subscriber shard size. Defaults to the number of schedulers (cores). A single pool is often enough for most use-cases, but for high subscriber counts on single topics or greater than 1M clients, a pool size equal to the number of schedulers (cores) is a well rounded size.</target>
        </trans-unit>
        <trans-unit id="ef90387cbb20edcd1f6df2b5a63794bd1ec958c2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:pool_size&lt;/code&gt; - The number of tracker shards to launch. Default &lt;code&gt;1&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;:pool_size&lt;/code&gt; - The number of tracker shards to launch. Default &lt;code&gt;1&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5330c2a2f142d1f7205e34172070cc053b8fd735" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:pool_timeout&lt;/code&gt; - The time in milliseconds to wait for calls to the pool to finish, &lt;code&gt;:infinity&lt;/code&gt; will wait indefinitely (default: 5000);</source>
          <target state="translated">&lt;code&gt;:pool_timeout&lt;/code&gt; - The time in milliseconds to wait for calls to the pool to finish, &lt;code&gt;:infinity&lt;/code&gt; will wait indefinitely (default: 5000);</target>
        </trans-unit>
        <trans-unit id="79954a1029adc4da09f5df84e4fca73a7be31007" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:precision&lt;/code&gt; - Allowed values: &lt;code&gt;:minute&lt;/code&gt;, &lt;code&gt;:second&lt;/code&gt;, &lt;code&gt;:millisecond&lt;/code&gt;. Defaults to &lt;code&gt;:minute&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;:precision&lt;/code&gt; - Allowed values: &lt;code&gt;:minute&lt;/code&gt;, &lt;code&gt;:second&lt;/code&gt;, &lt;code&gt;:millisecond&lt;/code&gt;. Defaults to &lt;code&gt;:minute&lt;/code&gt;.</target>
        </trans-unit>
        <trans-unit id="013651bc6203616056f44c2a3c516e8fa42fb3ae" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:precondition_failed&lt;/code&gt; - 412</source>
          <target state="translated">&lt;code&gt;:precondition_failed&lt;/code&gt; - 412</target>
        </trans-unit>
        <trans-unit id="cdec8cf60a5728690bc7510c058fbfdee46ea819" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:precondition_required&lt;/code&gt; - 428</source>
          <target state="translated">&lt;code&gt;:precondition_required&lt;/code&gt; - 428</target>
        </trans-unit>
        <trans-unit id="764f7275613e6e73df0d0d265b74ea153070ab11" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:prefix&lt;/code&gt; - The prefix to run the query on (such as the schema path in Postgres or the database in MySQL).</source>
          <target state="translated">&lt;code&gt;:prefix&lt;/code&gt; - The prefix to run the query on (such as the schema path in Postgres or the database in MySQL).</target>
        </trans-unit>
        <trans-unit id="629ac603439d4a04960359b6d6822fcb2dc1986d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:prefix&lt;/code&gt; - The prefix to run the query on (such as the schema path in Postgres or the database in MySQL). This overrides the prefix set in the query</source>
          <target state="translated">&lt;code&gt;:prefix&lt;/code&gt; - The prefix to run the query on (such as the schema path in Postgres or the database in MySQL). This overrides the prefix set in the query</target>
        </trans-unit>
        <trans-unit id="a14908ef534f4b625d8b077ea38351560c9304c4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:prefix&lt;/code&gt; - The prefix to run the query on (such as the schema path in Postgres or the database in MySQL). This overrides the prefix set in the query.</source>
          <target state="translated">&lt;code&gt;:prefix&lt;/code&gt; - The prefix to run the query on (such as the schema path in Postgres or the database in MySQL). This overrides the prefix set in the query.</target>
        </trans-unit>
        <trans-unit id="bdea7f5b8c32950f2087bb448798903b88f2e662" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:prefix&lt;/code&gt; - The prefix to run the query on (such as the schema path in Postgres or the database in MySQL). This overrides the prefix set in the struct.</source>
          <target state="translated">&lt;code&gt;:prefix&lt;/code&gt; - The prefix to run the query on (such as the schema path in Postgres or the database in MySQL). This overrides the prefix set in the struct.</target>
        </trans-unit>
        <trans-unit id="20b56d800e66aad1a47e7e4542338a2515ff6530" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:prefix&lt;/code&gt; - changes the struct query prefix</source>
          <target state="translated">&lt;code&gt;:prefix&lt;/code&gt; - changes the struct query prefix</target>
        </trans-unit>
        <trans-unit id="4b213c5d36adccc9be63fa251be2f3c5defdfe7d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:prefix&lt;/code&gt; - the prefix to be used for the join when issuing a database query</source>
          <target state="translated">&lt;code&gt;:prefix&lt;/code&gt; - the prefix to be used for the join when issuing a database query</target>
        </trans-unit>
        <trans-unit id="e115b8b77d4d8e9016e9d202b3684a05f1db2776" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:prefix&lt;/code&gt; - the prefix to fetch preloads from. By default, queries will use the same prefix as the one in the given collection. This option allows the prefix to be changed.</source>
          <target state="translated">&lt;code&gt;:prefix&lt;/code&gt; - the prefix to fetch preloads from. By default, queries will use the same prefix as the one in the given collection. This option allows the prefix to be changed.</target>
        </trans-unit>
        <trans-unit id="3c84b437d01447da05984518a5ef29f4afe8d85b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:preload&lt;/code&gt; - a boolean to request inclusion on the HSTS preload list (for full set of required flags, see: &lt;a href=&quot;https://hstspreload.org&quot;&gt;Chromium HSTS submission site&lt;/a&gt;), defaults to &lt;code&gt;false&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;:preload&lt;/code&gt; - a boolean to request inclusion on the HSTS preload list (for full set of required flags, see: &lt;a href=&quot;https://hstspreload.org&quot;&gt;Chromium HSTS submission site&lt;/a&gt;), defaults to &lt;code&gt;false&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6e8d5b827dee9e6f35f2119d27db1d833e873ea4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:prepend&lt;/code&gt; - the values to prepend when rendering. This only applies if the field value is a list and no parameters were sent through the form.</source>
          <target state="translated">&lt;code&gt;:prepend&lt;/code&gt; - the values to prepend when rendering. This only applies if the field value is a list and no parameters were sent through the form.</target>
        </trans-unit>
        <trans-unit id="3ce27bc704cc6eacbddcfd9059c0d5733b4747b4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:primary&lt;/code&gt; - primary color</source>
          <target state="translated">&lt;code&gt;:primary&lt;/code&gt; - primary color</target>
        </trans-unit>
        <trans-unit id="6ba6b986a26fb6fcabbb8c530cd3493a06ab7fbf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:primary_key&lt;/code&gt; - If the underlying belongs_to field is a primary key</source>
          <target state="translated">&lt;code&gt;:primary_key&lt;/code&gt; - If the underlying belongs_to field is a primary key</target>
        </trans-unit>
        <trans-unit id="21c53f26c5582b7018fd51a02e94e7a3f0b767e0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:primary_key&lt;/code&gt; - When true, the field is used as part of the composite primary key</source>
          <target state="translated">&lt;code&gt;:primary_key&lt;/code&gt; - When true, the field is used as part of the composite primary key</target>
        </trans-unit>
        <trans-unit id="52e24173945204f2525687d7f9c5b3fdd7f53b46" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:priv&lt;/code&gt; - the directory where to keep repository data, like migrations, schema and more. Defaults to &amp;ldquo;priv/YOUR_REPO&amp;rdquo;. It must always point to a subdirectory inside the priv directory.</source>
          <target state="translated">&lt;code&gt;:priv&lt;/code&gt; - the directory where to keep repository data, like migrations, schema and more. Defaults to &amp;ldquo;priv/YOUR_REPO&amp;rdquo;. It must always point to a subdirectory inside the priv directory.</target>
        </trans-unit>
        <trans-unit id="830636ad021bdbbb62e53c76f5db894aa7b3f1dc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:private&lt;/code&gt; - a map of private data to merge into the connection when a route matches</source>
          <target state="translated">&lt;code&gt;:private&lt;/code&gt; - a map of private data to merge into the connection when a route matches</target>
        </trans-unit>
        <trans-unit id="dca31a09eb42a189835b658a344d12122ef02fc9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:private&lt;/code&gt; - assigns values to &lt;code&gt;conn.private&lt;/code&gt; for use in the match</source>
          <target state="translated">&lt;code&gt;:private&lt;/code&gt; - assigns values to &lt;code&gt;conn.private&lt;/code&gt; for use in the match</target>
        </trans-unit>
        <trans-unit id="3888e25f02ca9f87737ca54bf88d93b3589d4b7d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:private&lt;/code&gt; - values for &lt;code&gt;conn.private&lt;/code&gt;, exactly like in &lt;a href=&quot;#match/3&quot;&gt;&lt;code&gt;match/3&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;:private&lt;/code&gt; - values for &lt;code&gt;conn.private&lt;/code&gt;, exactly like in &lt;a href=&quot;#match/3&quot;&gt;&lt;code&gt;match/3&lt;/code&gt;&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="43050e79829cae874d26dda3df328b34741cfd54" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:processing&lt;/code&gt; - 102</source>
          <target state="translated">&lt;code&gt;:processing&lt;/code&gt; - 102</target>
        </trans-unit>
        <trans-unit id="68b12909c5ff228f4f702a71c0af4412f44f1114" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:prompt&lt;/code&gt; - an option to include at the top of the options with the given prompt text</source>
          <target state="translated">&lt;code&gt;:prompt&lt;/code&gt; - an option to include at the top of the options with the given prompt text</target>
        </trans-unit>
        <trans-unit id="9e8c91ec2979623f101414a8c677665eb162a94f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:proxy_authentication_required&lt;/code&gt; - 407</source>
          <target state="translated">&lt;code&gt;:proxy_authentication_required&lt;/code&gt; - 407</target>
        </trans-unit>
        <trans-unit id="d3a82e258df9dc4b9115cebc03e621b42ce374f8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:pubsub&lt;/code&gt; - configuration for this endpoint&amp;rsquo;s pubsub adapter. Configuration either requires a &lt;code&gt;:name&lt;/code&gt; of the registered pubsub server or a &lt;code&gt;:name&lt;/code&gt; and &lt;code&gt;:adapter&lt;/code&gt; pair. The pubsub name and adapter are compile time configuration, while the remaining options are runtime. The given adapter and name pair will be started as part of the supervision tree. If no adapter is specified, the pubsub system will work by sending events and subscribing to the given name. Defaults to:</source>
          <target state="translated">&lt;code&gt;:pubsub&lt;/code&gt; - configuration for this endpoint&amp;rsquo;s pubsub adapter. Configuration either requires a &lt;code&gt;:name&lt;/code&gt; of the registered pubsub server or a &lt;code&gt;:name&lt;/code&gt; and &lt;code&gt;:adapter&lt;/code&gt; pair. The pubsub name and adapter are compile time configuration, while the remaining options are runtime. The given adapter and name pair will be started as part of the supervision tree. If no adapter is specified, the pubsub system will work by sending events and subscribing to the given name. Defaults to:</target>
        </trans-unit>
        <trans-unit id="fcfa9af1a9261fc9d9cfc91573aa9828119bd372" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:pubsub_server&lt;/code&gt; - The name of the PubSub server, such as: &lt;code&gt;MyApp.PubSub&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;:pubsub_server&lt;/code&gt; - The name of the PubSub server, such as: &lt;code&gt;MyApp.PubSub&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a5db854f1f93f7c823c7cfe641436460bb2b88f7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:pubsub_timeout_ms&lt;/code&gt; - how long a request can wait for the pubsub layer to respond</source>
          <target state="translated">&lt;code&gt;:pubsub_timeout_ms&lt;/code&gt; - how long a request can wait for the pubsub layer to respond</target>
        </trans-unit>
        <trans-unit id="54a40c66bc9e73df024ac6ea780abb3e40bf3848" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:query_string_length&lt;/code&gt; - the maximum allowed size for query strings</source>
          <target state="translated">&lt;code&gt;:query_string_length&lt;/code&gt; - the maximum allowed size for query strings</target>
        </trans-unit>
        <trans-unit id="11ca3df36fa125e49bc133718c0fb53d6ed82a0d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:raise&lt;/code&gt; (default) - do not allow removing association or embedded data via parent changesets</source>
          <target state="translated">&lt;code&gt;:raise&lt;/code&gt; (default) - do not allow removing association or embedded data via parent changesets</target>
        </trans-unit>
        <trans-unit id="310e79cc5e53357bb40f1959a8623fe2afc216f6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:raise&lt;/code&gt; - raises if there is a conflicting primary key or unique index</source>
          <target state="translated">&lt;code&gt;:raise&lt;/code&gt; - raises if there is a conflicting primary key or unique index</target>
        </trans-unit>
        <trans-unit id="4ae51c2f484311c12bc09926a39836c70b3cd554" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:read_after_writes&lt;/code&gt; - When true, the field is always read back from the database after insert and updates.</source>
          <target state="translated">&lt;code&gt;:read_after_writes&lt;/code&gt; - When true, the field is always read back from the database after insert and updates.</target>
        </trans-unit>
        <trans-unit id="f77a2a5ec90ceb7f3f948430516de7ca0e208432" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:read_length&lt;/code&gt; - sets the amount of bytes to read at one time from the underlying socket to fill the chunk, defaults to 1_000_000 bytes</source>
          <target state="translated">&lt;code&gt;:read_length&lt;/code&gt; - sets the amount of bytes to read at one time from the underlying socket to fill the chunk, defaults to 1_000_000 bytes</target>
        </trans-unit>
        <trans-unit id="2c6246231d2ab9e23a799ece37455f0f6553cfdb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:read_length&lt;/code&gt; - sets the amount of bytes to read at one time from the underlying socket to fill the chunk, defaults to 64_000 bytes</source>
          <target state="translated">&lt;code&gt;:read_length&lt;/code&gt; - sets the amount of bytes to read at one time from the underlying socket to fill the chunk, defaults to 64_000 bytes</target>
        </trans-unit>
        <trans-unit id="7c188b3d82d7109000ba05994d2c79f278993e11" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:read_length&lt;/code&gt; - sets the amount of bytes to read at one time from the underlying socket to fill the chunk, defaults to &lt;code&gt;1_000_000&lt;/code&gt; bytes</source>
          <target state="translated">&lt;code&gt;:read_length&lt;/code&gt; - sets the amount of bytes to read at one time from the underlying socket to fill the chunk, defaults to &lt;code&gt;1_000_000&lt;/code&gt; bytes</target>
        </trans-unit>
        <trans-unit id="a0c05498fc3486ade2258908b5da532402d8f541" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:read_length&lt;/code&gt; - sets the amount of bytes to read at one time from the underlying socket to fill the chunk, defaults to &lt;code&gt;64_000&lt;/code&gt; bytes</source>
          <target state="translated">&lt;code&gt;:read_length&lt;/code&gt; - sets the amount of bytes to read at one time from the underlying socket to fill the chunk, defaults to &lt;code&gt;64_000&lt;/code&gt; bytes</target>
        </trans-unit>
        <trans-unit id="f83e3b91782dce28c09d1451e9abf31267d5c655" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:read_timeout&lt;/code&gt; - sets the timeout for each socket read, defaults to 15_000ms</source>
          <target state="translated">&lt;code&gt;:read_timeout&lt;/code&gt; - sets the timeout for each socket read, defaults to 15_000ms</target>
        </trans-unit>
        <trans-unit id="4bae7e239d1a025a0175dc644e4120c960f8271d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:read_timeout&lt;/code&gt; - sets the timeout for each socket read, defaults to 5_000ms</source>
          <target state="translated">&lt;code&gt;:read_timeout&lt;/code&gt; - sets the timeout for each socket read, defaults to 5_000ms</target>
        </trans-unit>
        <trans-unit id="72265eb179ea5c306012bcf24f3670482c781e19" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:read_timeout&lt;/code&gt; - sets the timeout for each socket read, defaults to &lt;code&gt;15_000&lt;/code&gt; milliseconds</source>
          <target state="translated">&lt;code&gt;:read_timeout&lt;/code&gt; - sets the timeout for each socket read, defaults to &lt;code&gt;15_000&lt;/code&gt; milliseconds</target>
        </trans-unit>
        <trans-unit id="cfe57ed09e9d93ba6ee672dbdaf0fab0933f10e8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:read_timeout&lt;/code&gt; - sets the timeout for each socket read, defaults to &lt;code&gt;5_000&lt;/code&gt; milliseconds</source>
          <target state="translated">&lt;code&gt;:read_timeout&lt;/code&gt; - sets the timeout for each socket read, defaults to &lt;code&gt;5_000&lt;/code&gt; milliseconds</target>
        </trans-unit>
        <trans-unit id="a69da07b1ffbf834c236ad9f8767216a31e57504" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:references&lt;/code&gt; - Sets the key on the current schema to be used for the association, defaults to the primary key on the schema</source>
          <target state="translated">&lt;code&gt;:references&lt;/code&gt; - Sets the key on the current schema to be used for the association, defaults to the primary key on the schema</target>
        </trans-unit>
        <trans-unit id="86e8fe813b6caa53cedb94d894e8811a742a1866" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:references&lt;/code&gt; - Sets the key on the other schema to be used for the association, defaults to: &lt;code&gt;:id&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;:references&lt;/code&gt; - Sets the key on the other schema to be used for the association, defaults to: &lt;code&gt;:id&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="599670df538a2700240bfd997b936d7470cb0d01" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:render_errors&lt;/code&gt; - responsible for rendering templates whenever there is a failure in the application. For example, if the application crashes with a 500 error during a HTML request, &lt;code&gt;render(&quot;500.html&quot;, assigns)&lt;/code&gt; will be called in the view given to &lt;code&gt;:render_errors&lt;/code&gt;. Defaults to:</source>
          <target state="translated">&lt;code&gt;:render_errors&lt;/code&gt; - responsible for rendering templates whenever there is a failure in the application. For example, if the application crashes with a 500 error during a HTML request, &lt;code&gt;render(&quot;500.html&quot;, assigns)&lt;/code&gt; will be called in the view given to &lt;code&gt;:render_errors&lt;/code&gt;. Defaults to:</target>
        </trans-unit>
        <trans-unit id="8a92f15755a0ef841f41883c9868e884c61231d6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:renew&lt;/code&gt; - generates a new session id for the cookie</source>
          <target state="translated">&lt;code&gt;:renew&lt;/code&gt; - generates a new session id for the cookie</target>
        </trans-unit>
        <trans-unit id="4052af43beffbdcd587ea7b6e987ed3f6c3d1a68" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:replace_all&lt;/code&gt; - replace all values on the existing row by the new entry, including values not sent explicitly by Ecto, such as database defaults. This option requires a schema</source>
          <target state="translated">&lt;code&gt;:replace_all&lt;/code&gt; - replace all values on the existing row by the new entry, including values not sent explicitly by Ecto, such as database defaults. This option requires a schema</target>
        </trans-unit>
        <trans-unit id="2cbbc605e5415ce257812d988e5f1c12fd4adbfd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:replace_all&lt;/code&gt; - replace all values on the existing row with the values in the schema/changeset, including autogenerated fields such as &lt;code&gt;inserted_at&lt;/code&gt; and &lt;code&gt;updated_at&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;:replace_all&lt;/code&gt; - replace all values on the existing row with the values in the schema/changeset, including autogenerated fields such as &lt;code&gt;inserted_at&lt;/code&gt; and &lt;code&gt;updated_at&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="39115569f9165efe155138b893a733a4a0d3ba09" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:replace_all_except_primary_key&lt;/code&gt; - same as above except primary keys are not replaced</source>
          <target state="translated">&lt;code&gt;:replace_all_except_primary_key&lt;/code&gt; - same as above except primary keys are not replaced</target>
        </trans-unit>
        <trans-unit id="45ac56260542e7fa12ad79b078870f94085d9758" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:replace_all_except_primary_key&lt;/code&gt; - same as above except primary keys are not replaced. This option requires a schema</source>
          <target state="translated">&lt;code&gt;:replace_all_except_primary_key&lt;/code&gt; - same as above except primary keys are not replaced. This option requires a schema</target>
        </trans-unit>
        <trans-unit id="1b86b3e83b36ae0b6a21e944de963f575835de5a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:request_entity_too_large&lt;/code&gt; - 413</source>
          <target state="translated">&lt;code&gt;:request_entity_too_large&lt;/code&gt; - 413</target>
        </trans-unit>
        <trans-unit id="402aa140906e00cd2aecf07fedcb7d718e49e59e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:request_header_fields_too_large&lt;/code&gt; - 431</source>
          <target state="translated">&lt;code&gt;:request_header_fields_too_large&lt;/code&gt; - 431</target>
        </trans-unit>
        <trans-unit id="e6889522b489ed884ca4b90c254728750b7a6006" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:request_timeout&lt;/code&gt; - 408</source>
          <target state="translated">&lt;code&gt;:request_timeout&lt;/code&gt; - 408</target>
        </trans-unit>
        <trans-unit id="996436677292202968baf7f974ad98321099b8b9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:request_uri_too_long&lt;/code&gt; - 414</source>
          <target state="translated">&lt;code&gt;:request_uri_too_long&lt;/code&gt; - 414</target>
        </trans-unit>
        <trans-unit id="ba73cd09a4e0330a35f348331300f6dd1a55e4bd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:requested_range_not_satisfiable&lt;/code&gt; - 416</source>
          <target state="translated">&lt;code&gt;:requested_range_not_satisfiable&lt;/code&gt; - 416</target>
        </trans-unit>
        <trans-unit id="802773f830ecc9c1ad413351640966d39ee267cf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:required&lt;/code&gt; - boolean, sets whether existence of confirmation parameter is required for addition of error. Defaults to false</source>
          <target state="translated">&lt;code&gt;:required&lt;/code&gt; - boolean, sets whether existence of confirmation parameter is required for addition of error. Defaults to false</target>
        </trans-unit>
        <trans-unit id="8b69f189a46faa4a282e2a653cb16271cf58d94f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:required&lt;/code&gt; - if the association is a required field</source>
          <target state="translated">&lt;code&gt;:required&lt;/code&gt; - if the association is a required field</target>
        </trans-unit>
        <trans-unit id="45a02375e85f5958cbb56812b6dfb33b5d30535c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:required&lt;/code&gt; - if the embed is a required field</source>
          <target state="translated">&lt;code&gt;:required&lt;/code&gt; - if the embed is a required field</target>
        </trans-unit>
        <trans-unit id="45c44f002aaf78a8e747f3f4b3150431290cbcb0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:required_message&lt;/code&gt; - the message on failure, defaults to &amp;ldquo;can&amp;rsquo;t be blank&amp;rdquo;</source>
          <target state="translated">&lt;code&gt;:required_message&lt;/code&gt; - the message on failure, defaults to &amp;ldquo;can&amp;rsquo;t be blank&amp;rdquo;</target>
        </trans-unit>
        <trans-unit id="00bc19558ac32b58f929a0b1b5c03c61f2462bde" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:reset_content&lt;/code&gt; - 205</source>
          <target state="translated">&lt;code&gt;:reset_content&lt;/code&gt; - 205</target>
        </trans-unit>
        <trans-unit id="083ae4633625da77619e11dad60a0a1dbb5ae7bf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:returning&lt;/code&gt; - selects which fields to return. When &lt;code&gt;true&lt;/code&gt;, returns all fields in the given schema. May be a list of fields, where a struct is still returned but only with the given fields. Or &lt;code&gt;false&lt;/code&gt;, where nothing is returned (the default). This option is not supported by all databases.</source>
          <target state="translated">&lt;code&gt;:returning&lt;/code&gt; - selects which fields to return. When &lt;code&gt;true&lt;/code&gt;, returns all fields in the given schema. May be a list of fields, where a struct is still returned but only with the given fields. Or &lt;code&gt;false&lt;/code&gt;, where nothing is returned (the default). This option is not supported by all databases.</target>
        </trans-unit>
        <trans-unit id="dff34483ae1b43920e5352a9ff433cc5df74762b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:returning&lt;/code&gt; - selects which fields to return. When &lt;code&gt;true&lt;/code&gt;, returns all fields in the given struct. May be a list of fields, where a struct is still returned but only with the given fields. In any case, it will include fields with &lt;code&gt;read_after_writes&lt;/code&gt; set to true. Not all databases support this option.</source>
          <target state="translated">&lt;code&gt;:returning&lt;/code&gt; - selects which fields to return. When &lt;code&gt;true&lt;/code&gt;, returns all fields in the given struct. May be a list of fields, where a struct is still returned but only with the given fields. In any case, it will include fields with &lt;code&gt;read_after_writes&lt;/code&gt; set to true. Not all databases support this option.</target>
        </trans-unit>
        <trans-unit id="7fdecab13bfa8cd4d54ace70efabb09caec7f213" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:rewrite_on&lt;/code&gt; - rewrites the scheme to https based on the given headers</source>
          <target state="translated">&lt;code&gt;:rewrite_on&lt;/code&gt; - rewrites the scheme to https based on the given headers</target>
        </trans-unit>
        <trans-unit id="2f7c7d7621b1c409d3f8e6655e4cb9b331e4660f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:root&lt;/code&gt; - the template root to find templates</source>
          <target state="translated">&lt;code&gt;:root&lt;/code&gt; - the template root to find templates</target>
        </trans-unit>
        <trans-unit id="c8551c03aa980125c32b8cbdb70a9c623c1243b1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:secret_key_base&lt;/code&gt; - a secret key used as a base to generate secrets for encrypting and signing data. For example, cookies and tokens are signed by default, but they may also be encrypted if desired. Defaults to &lt;code&gt;nil&lt;/code&gt; as it must be set per application.</source>
          <target state="translated">&lt;code&gt;:secret_key_base&lt;/code&gt; - a secret key used as a base to generate secrets for encrypting and signing data. For example, cookies and tokens are signed by default, but they may also be encrypted if desired. Defaults to &lt;code&gt;nil&lt;/code&gt; as it must be set per application.</target>
        </trans-unit>
        <trans-unit id="b319959cd0760ee69223616ae373a6721e509e67" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:secure&lt;/code&gt; - if the cookie must be sent only over https. Defaults to true when the connection is HTTPS</source>
          <target state="translated">&lt;code&gt;:secure&lt;/code&gt; - if the cookie must be sent only over https. Defaults to true when the connection is HTTPS</target>
        </trans-unit>
        <trans-unit id="ffff620fff423b1765fa830ed5b2757d59526b20" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:secure&lt;/code&gt; - if the cookie must be sent only over https. Defaults to true when the connection is https</source>
          <target state="translated">&lt;code&gt;:secure&lt;/code&gt; - if the cookie must be sent only over https. Defaults to true when the connection is https</target>
        </trans-unit>
        <trans-unit id="901d79502eb3c46880a530963259fc34da5aa261" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:secure&lt;/code&gt; - see &lt;a href=&quot;plug.conn#put_resp_cookie/4&quot;&gt;&lt;code&gt;Plug.Conn.put_resp_cookie/4&lt;/code&gt;&lt;/a&gt;;</source>
          <target state="translated">&lt;code&gt;:secure&lt;/code&gt; - see &lt;a href=&quot;plug.conn#put_resp_cookie/4&quot;&gt;&lt;code&gt;Plug.Conn.put_resp_cookie/4&lt;/code&gt;&lt;/a&gt;;</target>
        </trans-unit>
        <trans-unit id="c284346d7c7e6b29f37b8d6600a932597394cfc1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:see_other&lt;/code&gt; - 303</source>
          <target state="translated">&lt;code&gt;:see_other&lt;/code&gt; - 303</target>
        </trans-unit>
        <trans-unit id="aad59c5ef5c786d1e612e1f23f676362c70934ce" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:selected&lt;/code&gt; - the default options to be marked as selected. The values on this list are ignored in case ids have been set as parameters.</source>
          <target state="translated">&lt;code&gt;:selected&lt;/code&gt; - the default options to be marked as selected. The values on this list are ignored in case ids have been set as parameters.</target>
        </trans-unit>
        <trans-unit id="73e2f9ff1b1d89519645abe3b6e9bfddfd4234c3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:selected&lt;/code&gt; - the default value to use when none was sent as parameter</source>
          <target state="translated">&lt;code&gt;:selected&lt;/code&gt; - the default value to use when none was sent as parameter</target>
        </trans-unit>
        <trans-unit id="84fb37aa4cda81efe047103d11ae5fdb9ee6e815" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:serializer&lt;/code&gt; - cookie serializer module that defines &lt;code&gt;encode/1&lt;/code&gt; and &lt;code&gt;decode/1&lt;/code&gt; returning an &lt;code&gt;{:ok, value}&lt;/code&gt; tuple. Defaults to &lt;code&gt;:external_term_format&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;:serializer&lt;/code&gt; - cookie serializer module that defines &lt;code&gt;encode/1&lt;/code&gt; and &lt;code&gt;decode/1&lt;/code&gt; returning an &lt;code&gt;{:ok, value}&lt;/code&gt; tuple. Defaults to &lt;code&gt;:external_term_format&lt;/code&gt;.</target>
        </trans-unit>
        <trans-unit id="96c0ab12e5fc55e7fdc752ee379a4317eda8708d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:serializer&lt;/code&gt; - the serializer for websocket messages</source>
          <target state="translated">&lt;code&gt;:serializer&lt;/code&gt; - the serializer for websocket messages</target>
        </trans-unit>
        <trans-unit id="b90fb03fda2d85f1bb9ea5cf16616c9b8db4bf01" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:server&lt;/code&gt; - when &lt;code&gt;true&lt;/code&gt;, starts the web server when the endpoint supervision tree starts. Defaults to &lt;code&gt;false&lt;/code&gt;. The &lt;code&gt;mix phx.server&lt;/code&gt; task automatically sets this to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;:server&lt;/code&gt; - when &lt;code&gt;true&lt;/code&gt;, starts the web server when the endpoint supervision tree starts. Defaults to &lt;code&gt;false&lt;/code&gt;. The &lt;code&gt;mix phx.server&lt;/code&gt; task automatically sets this to &lt;code&gt;true&lt;/code&gt;.</target>
        </trans-unit>
        <trans-unit id="f161fcf3bc4b283a463e77d1b3fd0bc38b14e917" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:service_unavailable&lt;/code&gt; - 503</source>
          <target state="translated">&lt;code&gt;:service_unavailable&lt;/code&gt; - 503</target>
        </trans-unit>
        <trans-unit id="ae7caec92944af9c9ea870c79f757a4bf8e55ae2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:session_key&lt;/code&gt; - the name of the key in session to store the token under</source>
          <target state="translated">&lt;code&gt;:session_key&lt;/code&gt; - the name of the key in session to store the token under</target>
        </trans-unit>
        <trans-unit id="abd68caf7032f368a2a58fd0fac27f38a1f96965" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:shutdown&lt;/code&gt; or &lt;code&gt;{:shutdown, term}&lt;/code&gt; - in such cases, the exit won&amp;rsquo;t be logged, there is no restart in transient mode, and linked processes exit with the same reason unless they&amp;rsquo;re trapping exits</source>
          <target state="translated">&lt;code&gt;:shutdown&lt;/code&gt; or &lt;code&gt;{:shutdown, term}&lt;/code&gt; - in such cases, the exit won&amp;rsquo;t be logged, there is no restart in transient mode, and linked processes exit with the same reason unless they&amp;rsquo;re trapping exits</target>
        </trans-unit>
        <trans-unit id="611b11e8454ae02a2cadc3fcbe0b9d124d5d86fd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:signed_at&lt;/code&gt; - set the timestamp of the token in seconds. Defaults to &lt;code&gt;System.system_time(:seconds)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;:signed_at&lt;/code&gt; - set the timestamp of the token in seconds. Defaults to &lt;code&gt;System.system_time(:seconds)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2bf809b09d68487835e5276966d4604ca6878145" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:signing_salt&lt;/code&gt; - a salt used with &lt;code&gt;conn.secret_key_base&lt;/code&gt; to generate a key for signing/verifying a cookie, can be either a binary or an MFA returning a binary;</source>
          <target state="translated">&lt;code&gt;:signing_salt&lt;/code&gt; - a salt used with &lt;code&gt;conn.secret_key_base&lt;/code&gt; to generate a key for signing/verifying a cookie, can be either a binary or an MFA returning a binary;</target>
        </trans-unit>
        <trans-unit id="42b2b1f3aaf8a23d691cadefdec622d49360bd47" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:singleton&lt;/code&gt; - defines routes for a singleton resource that is looked up by the client without referencing an ID. Read below for more information</source>
          <target state="translated">&lt;code&gt;:singleton&lt;/code&gt; - defines routes for a singleton resource that is looked up by the client without referencing an ID. Read below for more information</target>
        </trans-unit>
        <trans-unit id="e78283f60e07d3ac25f1f344b6f92b024899b1db" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:source&lt;/code&gt; - Defines the name that is to be used in database for this field. This is useful when attaching to an existing database. The value should be an atom.</source>
          <target state="translated">&lt;code&gt;:source&lt;/code&gt; - Defines the name that is to be used in database for this field. This is useful when attaching to an existing database. The value should be an atom.</target>
        </trans-unit>
        <trans-unit id="3676c56707223db9084e2d72ac2289a7ad0c11d5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:source&lt;/code&gt; - The source for the underlying field</source>
          <target state="translated">&lt;code&gt;:source&lt;/code&gt; - The source for the underlying field</target>
        </trans-unit>
        <trans-unit id="435c246d5b3897d22f3b77eb3e3af0fba1ce6dfc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:source&lt;/code&gt; - changes the struct query source</source>
          <target state="translated">&lt;code&gt;:source&lt;/code&gt; - changes the struct query source</target>
        </trans-unit>
        <trans-unit id="556e5bc9727fd1813b8d41dc1d1577a21eb8cddd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:source&lt;/code&gt; - the data structure given to &lt;a href=&quot;#form_for/4&quot;&gt;&lt;code&gt;form_for/4&lt;/code&gt;&lt;/a&gt; that implements the form data protocol</source>
          <target state="translated">&lt;code&gt;:source&lt;/code&gt; - the data structure given to &lt;a href=&quot;#form_for/4&quot;&gt;&lt;code&gt;form_for/4&lt;/code&gt;&lt;/a&gt; that implements the form data protocol</target>
        </trans-unit>
        <trans-unit id="32305498e95a5ada082b8a5dad738211b0c09494" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:stale_error_field&lt;/code&gt; - The field where stale errors will be added in the returning changeset. This option can be used to avoid raising &lt;a href=&quot;ecto.staleentryerror&quot;&gt;&lt;code&gt;Ecto.StaleEntryError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;:stale_error_field&lt;/code&gt; - The field where stale errors will be added in the returning changeset. This option can be used to avoid raising &lt;a href=&quot;ecto.staleentryerror&quot;&gt;&lt;code&gt;Ecto.StaleEntryError&lt;/code&gt;&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="01a94acf6c66d55a8fc03a90639cbcdc29577d52" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:stale_error_message&lt;/code&gt; - The message to add to the configured &lt;code&gt;:stale_error_field&lt;/code&gt; when stale errors happen, defaults to &amp;ldquo;is stale&amp;rdquo;.</source>
          <target state="translated">&lt;code&gt;:stale_error_message&lt;/code&gt; - The message to add to the configured &lt;code&gt;:stale_error_field&lt;/code&gt; when stale errors happen, defaults to &amp;ldquo;is stale&amp;rdquo;.</target>
        </trans-unit>
        <trans-unit id="830c5ed6232c4e8c80b125d7040ed8989c90f702" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:state&lt;/code&gt; - changes the struct state</source>
          <target state="translated">&lt;code&gt;:state&lt;/code&gt; - changes the struct state</target>
        </trans-unit>
        <trans-unit id="09bd0528f76f6453de039d10a480ce49889783a0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:static_url&lt;/code&gt; - configuration for generating URLs for static files. It will fallback to &lt;code&gt;url&lt;/code&gt; if no option is provided. Accepts the same options as &lt;code&gt;url&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;:static_url&lt;/code&gt; - configuration for generating URLs for static files. It will fallback to &lt;code&gt;url&lt;/code&gt; if no option is provided. Accepts the same options as &lt;code&gt;url&lt;/code&gt;.</target>
        </trans-unit>
        <trans-unit id="176a10736e55f8370b3b2f3ec0075f698cde99c0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:store&lt;/code&gt; - session store module (required);</source>
          <target state="translated">&lt;code&gt;:store&lt;/code&gt; - session store module (required);</target>
        </trans-unit>
        <trans-unit id="dd762daaaa8e7186dec2598dab08d925ff5eff60" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:style&lt;/code&gt; - custom styles (see below)</source>
          <target state="translated">&lt;code&gt;:style&lt;/code&gt; - custom styles (see below)</target>
        </trans-unit>
        <trans-unit id="f3af6979f512f8aebdc95764da81613d355d50d7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:subdomains&lt;/code&gt; - a boolean on including subdomains or not in HSTS, defaults to &lt;code&gt;false&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;:subdomains&lt;/code&gt; - a boolean on including subdomains or not in HSTS, defaults to &lt;code&gt;false&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6e49be7aad64614e789ca720a2931987a0a79e38" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:switch_proxy&lt;/code&gt; - 306</source>
          <target state="translated">&lt;code&gt;:switch_proxy&lt;/code&gt; - 306</target>
        </trans-unit>
        <trans-unit id="333d8aae72abedc4939136241b986d7d279feb24" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:switching_protocols&lt;/code&gt; - 101</source>
          <target state="translated">&lt;code&gt;:switching_protocols&lt;/code&gt; - 101</target>
        </trans-unit>
        <trans-unit id="9242f9c1862057b224896ecfa551a7f8ecf76483" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:table&lt;/code&gt; - ETS table name (required)</source>
          <target state="translated">&lt;code&gt;:table&lt;/code&gt; - ETS table name (required)</target>
        </trans-unit>
        <trans-unit id="5899dcd9a3dc396fbd77fd6e88d97cdbeea6162b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:telemetry_event&lt;/code&gt; - The telemetry event name to dispatch the event under</source>
          <target state="translated">&lt;code&gt;:telemetry_event&lt;/code&gt; - The telemetry event name to dispatch the event under</target>
        </trans-unit>
        <trans-unit id="99f1b826dcd3d897ef8b73c579d2f66d030a9e90" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:telemetry_prefix&lt;/code&gt; - we recommend adapters to publish events using the &lt;code&gt;Telemetry&lt;/code&gt; library. By default, the telemetry prefix is based on the module name, so if your module is called &lt;code&gt;MyApp.Repo&lt;/code&gt;, the prefix will be &lt;code&gt;[:my_app, :repo]&lt;/code&gt;. See the &amp;ldquo;Telemetry Events&amp;rdquo; section to see which events we recommend adapters to publish</source>
          <target state="translated">&lt;code&gt;:telemetry_prefix&lt;/code&gt; - we recommend adapters to publish events using the &lt;code&gt;Telemetry&lt;/code&gt; library. By default, the telemetry prefix is based on the module name, so if your module is called &lt;code&gt;MyApp.Repo&lt;/code&gt;, the prefix will be &lt;code&gt;[:my_app, :repo]&lt;/code&gt;. See the &amp;ldquo;Telemetry Events&amp;rdquo; section to see which events we recommend adapters to publish</target>
        </trans-unit>
        <trans-unit id="cba36ad975862c478189f8985439ab006988fd2b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:temporary_redirect&lt;/code&gt; - 307</source>
          <target state="translated">&lt;code&gt;:temporary_redirect&lt;/code&gt; - 307</target>
        </trans-unit>
        <trans-unit id="e013be3b7d5fc4a7f54d68f3c56a849f4b3f1c36" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:through&lt;/code&gt; - Allow this association to be defined in terms of existing associations. Read the section on &lt;code&gt;:through&lt;/code&gt; associations for more info</source>
          <target state="translated">&lt;code&gt;:through&lt;/code&gt; - Allow this association to be defined in terms of existing associations. Read the section on &lt;code&gt;:through&lt;/code&gt; associations for more info</target>
        </trans-unit>
        <trans-unit id="2a391729ec08506ad3d23119b3ee8fdfbe257a00" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:through&lt;/code&gt; - If this association must be defined in terms of existing associations. Read the section in &lt;a href=&quot;#has_many/3&quot;&gt;&lt;code&gt;has_many/3&lt;/code&gt;&lt;/a&gt; for more information</source>
          <target state="translated">&lt;code&gt;:through&lt;/code&gt; - If this association must be defined in terms of existing associations. Read the section in &lt;a href=&quot;#has_many/3&quot;&gt;&lt;code&gt;has_many/3&lt;/code&gt;&lt;/a&gt; for more information</target>
        </trans-unit>
        <trans-unit id="a34fb448f267c9b8a828f9dcbc47a5f71caae013" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:through&lt;/code&gt; associations can also be preloaded. In such cases, not only the &lt;code&gt;:through&lt;/code&gt; association is preloaded but all intermediate steps are preloaded too:</source>
          <target state="translated">&lt;code&gt;:through&lt;/code&gt; associations can also be preloaded. In such cases, not only the &lt;code&gt;:through&lt;/code&gt; association is preloaded but all intermediate steps are preloaded too:</target>
        </trans-unit>
        <trans-unit id="360743e4bdd532d1937e8748456b373926585d2e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:timeout&lt;/code&gt; - The time in milliseconds to wait for the query call to finish, &lt;code&gt;:infinity&lt;/code&gt; will wait indefinitely (default: 15000);</source>
          <target state="translated">&lt;code&gt;:timeout&lt;/code&gt; - The time in milliseconds to wait for the query call to finish, &lt;code&gt;:infinity&lt;/code&gt; will wait indefinitely (default: 15000);</target>
        </trans-unit>
        <trans-unit id="d3b9ae8169c3a4c53537a77a4b7f6ef2dc5ac3b3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:timeout&lt;/code&gt; - the timeout for keeping websocket connections open after it last received data, defaults to 60_000ms</source>
          <target state="translated">&lt;code&gt;:timeout&lt;/code&gt; - the timeout for keeping websocket connections open after it last received data, defaults to 60_000ms</target>
        </trans-unit>
        <trans-unit id="363cf799b341f2fd8102e4dd788da3b2706bd6b3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:to&lt;/code&gt; - a Plug that will be called in case the route matches.</source>
          <target state="translated">&lt;code&gt;:to&lt;/code&gt; - a Plug that will be called in case the route matches.</target>
        </trans-unit>
        <trans-unit id="418444de439179009d7e27cd7fac41a0fe92eecc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:to&lt;/code&gt; - a Plug the requests will be forwarded to.</source>
          <target state="translated">&lt;code&gt;:to&lt;/code&gt; - a Plug the requests will be forwarded to.</target>
        </trans-unit>
        <trans-unit id="6bef70954ca928e1f585e82d8ff90ff5c0a149c1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:to&lt;/code&gt; - the page to link to. This option is required</source>
          <target state="translated">&lt;code&gt;:to&lt;/code&gt; - the page to link to. This option is required</target>
        </trans-unit>
        <trans-unit id="e27d3b00a32977d85c6e7c57207be914af8cfd71" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:too_many_requests&lt;/code&gt; - 429</source>
          <target state="translated">&lt;code&gt;:too_many_requests&lt;/code&gt; - 429</target>
        </trans-unit>
        <trans-unit id="a05df8b2752c254d796c3067f7078f9c1a12d03d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:transport_log&lt;/code&gt; - if the transport layer itself should log and, if so, the level</source>
          <target state="translated">&lt;code&gt;:transport_log&lt;/code&gt; - if the transport layer itself should log and, if so, the level</target>
        </trans-unit>
        <trans-unit id="763d769c8be356d288f117f582d874848a8b1259" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:trim&lt;/code&gt; - a boolean that sets whether whitespaces are removed before running the validation on binaries/strings, defaults to true</source>
          <target state="translated">&lt;code&gt;:trim&lt;/code&gt; - a boolean that sets whether whitespaces are removed before running the validation on binaries/strings, defaults to true</target>
        </trans-unit>
        <trans-unit id="baaca370e5c6fe6b09a29d092762f82ab3823e6d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:type&lt;/code&gt; - Sets the type of automatically defined &lt;code&gt;:foreign_key&lt;/code&gt;. Defaults to: &lt;code&gt;:integer&lt;/code&gt; and can be set per schema via &lt;code&gt;@foreign_key_type&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;:type&lt;/code&gt; - Sets the type of automatically defined &lt;code&gt;:foreign_key&lt;/code&gt;. Defaults to: &lt;code&gt;:integer&lt;/code&gt; and can be set per schema via &lt;code&gt;@foreign_key_type&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a6d8ec93c2392553c5327c28e4ca6b164a0a5c2a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:type&lt;/code&gt; - the timestamps type, defaults to &lt;code&gt;:naive_datetime&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;:type&lt;/code&gt; - the timestamps type, defaults to &lt;code&gt;:naive_datetime&lt;/code&gt;.</target>
        </trans-unit>
        <trans-unit id="b2a2ea966e7b48c568d93eb9427d3b3aa4c37427" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:type&lt;/code&gt; - the type of the constraint that will be checked in the database, such as &lt;code&gt;:check&lt;/code&gt;, &lt;code&gt;:unique&lt;/code&gt;, etc</source>
          <target state="translated">&lt;code&gt;:type&lt;/code&gt; - the type of the constraint that will be checked in the database, such as &lt;code&gt;:check&lt;/code&gt;, &lt;code&gt;:unique&lt;/code&gt;, etc</target>
        </trans-unit>
        <trans-unit id="488da48a0565d0e9e4d63c2f660a722d182713d2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:unauthorized&lt;/code&gt; - 401</source>
          <target state="translated">&lt;code&gt;:unauthorized&lt;/code&gt; - 401</target>
        </trans-unit>
        <trans-unit id="0b1e165162fd1bece099a3de1e3d6d92842a7661" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:unavailable_for_legal_reasons&lt;/code&gt; - 451</source>
          <target state="translated">&lt;code&gt;:unavailable_for_legal_reasons&lt;/code&gt; - 451</target>
        </trans-unit>
        <trans-unit id="22ff86a3c13359f95a5ba86dc8792e848dd7f80f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:unchecked_value&lt;/code&gt; - the value to be sent when the checkbox is unchecked, Defaults to &amp;ldquo;false&amp;rdquo;</source>
          <target state="translated">&lt;code&gt;:unchecked_value&lt;/code&gt; - the value to be sent when the checkbox is unchecked, Defaults to &amp;ldquo;false&amp;rdquo;</target>
        </trans-unit>
        <trans-unit id="1cac570ff07b06391353df9f7d1643e89e46d332" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:unique&lt;/code&gt; - When true, checks if the associated entries are unique. This is done by checking the primary key of the associated entries during repository operations. Keep in mind this does not guarantee uniqueness at the database level. For such it is preferred to set a unique index in the database. For example: &lt;code&gt;create unique_index(:posts_tags, [:post_id, :tag_id])&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;:unique&lt;/code&gt; - When true, checks if the associated entries are unique. This is done by checking the primary key of the associated entries during repository operations. Keep in mind this does not guarantee uniqueness at the database level. For such it is preferred to set a unique index in the database. For example: &lt;code&gt;create unique_index(:posts_tags, [:post_id, :tag_id])&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1330b392f6aa2b54b734c604b5d7ec9250c0c0b1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:unordered_collection&lt;/code&gt; - 425</source>
          <target state="translated">&lt;code&gt;:unordered_collection&lt;/code&gt; - 425</target>
        </trans-unit>
        <trans-unit id="cd9857583c3e7f486daaa536cd7fc154bc587914" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:unprocessable_entity&lt;/code&gt; - 422</source>
          <target state="translated">&lt;code&gt;:unprocessable_entity&lt;/code&gt; - 422</target>
        </trans-unit>
        <trans-unit id="4cdf2a81f1a83995dbc4121d682e5a18fefec1ef" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:unsupported_media_type&lt;/code&gt; - 415</source>
          <target state="translated">&lt;code&gt;:unsupported_media_type&lt;/code&gt; - 415</target>
        </trans-unit>
        <trans-unit id="7cbae2dee7c4fd1a180a135d1e688c174f4b94a9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:update&lt;/code&gt; - updates the association, available only for &lt;code&gt;has_one&lt;/code&gt; and &lt;code&gt;belongs_to&lt;/code&gt;. This option will update all the fields given to the changeset including the id for the association</source>
          <target state="translated">&lt;code&gt;:update&lt;/code&gt; - updates the association, available only for &lt;code&gt;has_one&lt;/code&gt; and &lt;code&gt;belongs_to&lt;/code&gt;. This option will update all the fields given to the changeset including the id for the association</target>
        </trans-unit>
        <trans-unit id="c2313d31268e11dff1fab9c6f26bd15bb8fb7fcc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:updated_at&lt;/code&gt; - the name of the column for update times or &lt;code&gt;false&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;:updated_at&lt;/code&gt; - the name of the column for update times or &lt;code&gt;false&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3fe12b41df18a56359327c60cab4ee45067d41d5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:upgrade_required&lt;/code&gt; - 426</source>
          <target state="translated">&lt;code&gt;:upgrade_required&lt;/code&gt; - 426</target>
        </trans-unit>
        <trans-unit id="927405fd8755b2249ada40a0d2a50dfa3edb6d9f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:url&lt;/code&gt; - an URL that specifies storage information. Read below for more information</source>
          <target state="translated">&lt;code&gt;:url&lt;/code&gt; - an URL that specifies storage information. Read below for more information</target>
        </trans-unit>
        <trans-unit id="7cf1ebab21a3c2bee78c05c25c2df4675995926c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:url&lt;/code&gt; - configuration for generating URLs throughout the app. Accepts the &lt;code&gt;:host&lt;/code&gt;, &lt;code&gt;:scheme&lt;/code&gt;, &lt;code&gt;:path&lt;/code&gt; and &lt;code&gt;:port&lt;/code&gt; options. All keys except &lt;code&gt;:path&lt;/code&gt; can be changed at runtime. Defaults to:</source>
          <target state="translated">&lt;code&gt;:url&lt;/code&gt; - configuration for generating URLs throughout the app. Accepts the &lt;code&gt;:host&lt;/code&gt;, &lt;code&gt;:scheme&lt;/code&gt;, &lt;code&gt;:path&lt;/code&gt; and &lt;code&gt;:port&lt;/code&gt; options. All keys except &lt;code&gt;:path&lt;/code&gt; can be changed at runtime. Defaults to:</target>
        </trans-unit>
        <trans-unit id="96d8087a14ce7eb8d0d7048e8098b3b2b6fd6b59" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:use_proxy&lt;/code&gt; - 305</source>
          <target state="translated">&lt;code&gt;:use_proxy&lt;/code&gt; - 305</target>
        </trans-unit>
        <trans-unit id="fc700b4e12b0a4aea97e0ce7ea3e415e98e487bd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:value&lt;/code&gt; - the value used to check if a checkbox is checked or unchecked. The default value is extracted from the form data if available</source>
          <target state="translated">&lt;code&gt;:value&lt;/code&gt; - the value used to check if a checkbox is checked or unchecked. The default value is extracted from the form data if available</target>
        </trans-unit>
        <trans-unit id="270f0c45e04157a9d79b71b175e7fa48bdd4339e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:value&lt;/code&gt; - the value used to select a given option. The default value is extracted from the form data if available</source>
          <target state="translated">&lt;code&gt;:value&lt;/code&gt; - the value used to select a given option. The default value is extracted from the form data if available</target>
        </trans-unit>
        <trans-unit id="5d5e3e1e1558b1c1dca77c58bcf2435bb36d99a4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:variant_also_negotiates&lt;/code&gt; - 506</source>
          <target state="translated">&lt;code&gt;:variant_also_negotiates&lt;/code&gt; - 506</target>
        </trans-unit>
        <trans-unit id="277cb5d7c82c97dec4af832bcd7185506bc0914a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:via&lt;/code&gt; - matches the route against some specific HTTP method (specified as an atom, like &lt;code&gt;:get&lt;/code&gt; or &lt;code&gt;:put&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;:via&lt;/code&gt; - matches the route against some specific HTTP method (specified as an atom, like &lt;code&gt;:get&lt;/code&gt; or &lt;code&gt;:put&lt;/code&gt;.</target>
        </trans-unit>
        <trans-unit id="ec8ac57498d9b367fc58b6997b2a386b379d9c51" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:virtual&lt;/code&gt; - When true, the field is not persisted to the database. Notice virtual fields do not support &lt;code&gt;:autogenerate&lt;/code&gt; nor &lt;code&gt;:read_after_writes&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;:virtual&lt;/code&gt; - When true, the field is not persisted to the database. Notice virtual fields do not support &lt;code&gt;:autogenerate&lt;/code&gt; nor &lt;code&gt;:read_after_writes&lt;/code&gt;.</target>
        </trans-unit>
        <trans-unit id="612ba37298593c4cfc9e4a2526d2afc2fa92db33" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:watchers&lt;/code&gt; - a set of watchers to run alongside your server. It expects a list of tuples containing the executable and its arguments. Watchers are guaranteed to run in the application directory, but only when the server is enabled. For example, the watcher below will run the &amp;ldquo;watch&amp;rdquo; mode of the brunch build tool when the server starts. You can configure it to whatever build tool or command you want:</source>
          <target state="translated">&lt;code&gt;:watchers&lt;/code&gt; - a set of watchers to run alongside your server. It expects a list of tuples containing the executable and its arguments. Watchers are guaranteed to run in the application directory, but only when the server is enabled. For example, the watcher below will run the &amp;ldquo;watch&amp;rdquo; mode of the brunch build tool when the server starts. You can configure it to whatever build tool or command you want:</target>
        </trans-unit>
        <trans-unit id="07c1cff63d3e818d9c9dc26ab1d2f59d80ad46bf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:where&lt;/code&gt; - A filter for the association. See &amp;ldquo;Filtering associations&amp;rdquo; below. It does not apply to &lt;code&gt;:through&lt;/code&gt; associations.</source>
          <target state="translated">&lt;code&gt;:where&lt;/code&gt; - A filter for the association. See &amp;ldquo;Filtering associations&amp;rdquo; below. It does not apply to &lt;code&gt;:through&lt;/code&gt; associations.</target>
        </trans-unit>
        <trans-unit id="6746ca2f2c40e4a2fe37238a07f000c0ca50ad15" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:where&lt;/code&gt; - A filter for the association. See &amp;ldquo;Filtering associations&amp;rdquo; in &lt;a href=&quot;#has_many/3&quot;&gt;&lt;code&gt;has_many/3&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;:where&lt;/code&gt; - A filter for the association. See &amp;ldquo;Filtering associations&amp;rdquo; in &lt;a href=&quot;#has_many/3&quot;&gt;&lt;code&gt;has_many/3&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3de8c9c512424238873132eba860f6178fa08d81" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:where&lt;/code&gt; - A filter for the association. See &amp;ldquo;Filtering associations&amp;rdquo; in &lt;a href=&quot;#has_many/3&quot;&gt;&lt;code&gt;has_many/3&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;:where&lt;/code&gt; - A filter for the association. See &amp;ldquo;Filtering associations&amp;rdquo; in &lt;a href=&quot;#has_many/3&quot;&gt;&lt;code&gt;has_many/3&lt;/code&gt;&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="6fe651757b87fa89bc6bc3e1d1e81c73ddbc0d82" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:where&lt;/code&gt; - A filter for the association. See &amp;ldquo;Filtering associations&amp;rdquo; in &lt;a href=&quot;#has_many/3&quot;&gt;&lt;code&gt;has_many/3&lt;/code&gt;&lt;/a&gt;. It does not apply to &lt;code&gt;:through&lt;/code&gt; associations.</source>
          <target state="translated">&lt;code&gt;:where&lt;/code&gt; - A filter for the association. See &amp;ldquo;Filtering associations&amp;rdquo; in &lt;a href=&quot;#has_many/3&quot;&gt;&lt;code&gt;has_many/3&lt;/code&gt;&lt;/a&gt;. It does not apply to &lt;code&gt;:through&lt;/code&gt; associations.</target>
        </trans-unit>
        <trans-unit id="5cafb1779d202b5db971ad73a77b5d042a475ce9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:window_ms&lt;/code&gt; - how long the client can wait for new messages in its poll request</source>
          <target state="translated">&lt;code&gt;:window_ms&lt;/code&gt; - how long the client can wait for new messages in its poll request</target>
        </trans-unit>
        <trans-unit id="294cf515652fc03feabffdaaf2b07841a73869d6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:with&lt;/code&gt; - should be one of &lt;code&gt;:exception&lt;/code&gt; or &lt;code&gt;:clear_session&lt;/code&gt;. Defaults to &lt;code&gt;:exception&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;:with&lt;/code&gt; - should be one of &lt;code&gt;:exception&lt;/code&gt; or &lt;code&gt;:clear_session&lt;/code&gt;. Defaults to &lt;code&gt;:exception&lt;/code&gt;.</target>
        </trans-unit>
        <trans-unit id="9002192e76c6e74f91d5f7a88df413408ff6c404" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:with&lt;/code&gt; - the function to build the changeset from params. Defaults to the changeset/2 function in the association module</source>
          <target state="translated">&lt;code&gt;:with&lt;/code&gt; - the function to build the changeset from params. Defaults to the changeset/2 function in the association module</target>
        </trans-unit>
        <trans-unit id="db7535b7e7c9fc2963ec0db445f23ec2687da167" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:with&lt;/code&gt; - the function to build the changeset from params. Defaults to the changeset/2 function in the embed module</source>
          <target state="translated">&lt;code&gt;:with&lt;/code&gt; - the function to build the changeset from params. Defaults to the changeset/2 function in the embed module</target>
        </trans-unit>
        <trans-unit id="853e326db2c046676fd4a86b175fef0b3c0616c3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:wrapper_tag&lt;/code&gt; - tag to wrap each paragraph (default: &lt;code&gt;:p&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;:wrapper_tag&lt;/code&gt; - tag to wrap each paragraph (default: &lt;code&gt;:p&lt;/code&gt;)</target>
        </trans-unit>
        <trans-unit id="558f04a73f86ac9b1aaec3c5ac412c25f6f3188e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:year&lt;/code&gt;, &lt;code&gt;:month&lt;/code&gt;, &lt;code&gt;:day&lt;/code&gt;, &lt;code&gt;:hour&lt;/code&gt;, &lt;code&gt;:minute&lt;/code&gt;, &lt;code&gt;:second&lt;/code&gt; - options passed to the underlying select. See &lt;a href=&quot;#select/4&quot;&gt;&lt;code&gt;select/4&lt;/code&gt;&lt;/a&gt; for more information. The available values can be given in &lt;code&gt;:options&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;:year&lt;/code&gt;, &lt;code&gt;:month&lt;/code&gt;, &lt;code&gt;:day&lt;/code&gt;, &lt;code&gt;:hour&lt;/code&gt;, &lt;code&gt;:minute&lt;/code&gt;, &lt;code&gt;:second&lt;/code&gt; - options passed to the underlying select. See &lt;a href=&quot;#select/4&quot;&gt;&lt;code&gt;select/4&lt;/code&gt;&lt;/a&gt; for more information. The available values can be given in &lt;code&gt;:options&lt;/code&gt;.</target>
        </trans-unit>
        <trans-unit id="efd75d48934f627ceba23be2e9bd69a33d233a52" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@derive&lt;/code&gt; - the same as &lt;code&gt;@derive&lt;/code&gt; available in &lt;a href=&quot;https://hexdocs.pm/elixir/Kernel.html#defstruct/1&quot;&gt;&lt;code&gt;Kernel.defstruct/1&lt;/code&gt;&lt;/a&gt; as the schema defines a struct behind the scenes;</source>
          <target state="translated">&lt;code&gt;@derive&lt;/code&gt; - the same as &lt;code&gt;@derive&lt;/code&gt; available in &lt;a href=&quot;https://hexdocs.pm/elixir/Kernel.html#defstruct/1&quot;&gt;&lt;code&gt;Kernel.defstruct/1&lt;/code&gt;&lt;/a&gt; as the schema defines a struct behind the scenes;</target>
        </trans-unit>
        <trans-unit id="8b64d798c315368761c3d344ad1f7b85b5b0dfb3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@field_source_mapper&lt;/code&gt; - a function that receives the current field name and returns the mapping of this field name in the underlying source. In other words, it is a mechanism to automatically generate the &lt;code&gt;:source&lt;/code&gt; option for the &lt;code&gt;field&lt;/code&gt; macro. It defaults to &lt;code&gt;fn x -&amp;gt; x end&lt;/code&gt;, where no field transformation is done;</source>
          <target state="translated">&lt;code&gt;@field_source_mapper&lt;/code&gt; - a function that receives the current field name and returns the mapping of this field name in the underlying source. In other words, it is a mechanism to automatically generate the &lt;code&gt;:source&lt;/code&gt; option for the &lt;code&gt;field&lt;/code&gt; macro. It defaults to &lt;code&gt;fn x -&amp;gt; x end&lt;/code&gt;, where no field transformation is done;</target>
        </trans-unit>
        <trans-unit id="df921370f4c518d693374d4ece2189c519a815d6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@foreign_key_type&lt;/code&gt; - configures the default foreign key type used by &lt;code&gt;belongs_to&lt;/code&gt; associations. Defaults to &lt;code&gt;:id&lt;/code&gt;;</source>
          <target state="translated">&lt;code&gt;@foreign_key_type&lt;/code&gt; - configures the default foreign key type used by &lt;code&gt;belongs_to&lt;/code&gt; associations. Defaults to &lt;code&gt;:id&lt;/code&gt;;</target>
        </trans-unit>
        <trans-unit id="50a6cfe1e1931f460fc3d7749d063854f4533d4b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@primary_key&lt;/code&gt; - configures the schema primary key. It expects a tuple &lt;code&gt;{field_name, type, options}&lt;/code&gt; with the primary key field name, type (typically &lt;code&gt;:id&lt;/code&gt; or &lt;code&gt;:binary_id&lt;/code&gt;, but can be any type) and options. Defaults to &lt;code&gt;{:id, :id, autogenerate: true}&lt;/code&gt;. When set to &lt;code&gt;false&lt;/code&gt;, does not define a primary key in the schema unless composite keys are defined using the options of &lt;code&gt;field&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;@primary_key&lt;/code&gt; - configures the schema primary key. It expects a tuple &lt;code&gt;{field_name, type, options}&lt;/code&gt; with the primary key field name, type (typically &lt;code&gt;:id&lt;/code&gt; or &lt;code&gt;:binary_id&lt;/code&gt;, but can be any type) and options. Defaults to &lt;code&gt;{:id, :id, autogenerate: true}&lt;/code&gt;. When set to &lt;code&gt;false&lt;/code&gt;, does not define a primary key in the schema unless composite keys are defined using the options of &lt;code&gt;field&lt;/code&gt;.</target>
        </trans-unit>
        <trans-unit id="d2eefc88c03727ccbcdd8dacf394cc0a55447fd0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@schema_prefix&lt;/code&gt; - configures the schema prefix. Defaults to &lt;code&gt;nil&lt;/code&gt;, which generates structs and queries without prefix. When set, the prefix will be used by every built struct and on queries whenever the schema is used in a &lt;code&gt;from&lt;/code&gt; or a &lt;code&gt;join&lt;/code&gt;. In PostgreSQL, the prefix is called &amp;ldquo;SCHEMA&amp;rdquo; (typically set via Postgres&amp;rsquo; &lt;code&gt;search_path&lt;/code&gt;). In MySQL the prefix points to databases.</source>
          <target state="translated">&lt;code&gt;@schema_prefix&lt;/code&gt; - configures the schema prefix. Defaults to &lt;code&gt;nil&lt;/code&gt;, which generates structs and queries without prefix. When set, the prefix will be used by every built struct and on queries whenever the schema is used in a &lt;code&gt;from&lt;/code&gt; or a &lt;code&gt;join&lt;/code&gt;. In PostgreSQL, the prefix is called &amp;ldquo;SCHEMA&amp;rdquo; (typically set via Postgres&amp;rsquo; &lt;code&gt;search_path&lt;/code&gt;). In MySQL the prefix points to databases.</target>
        </trans-unit>
        <trans-unit id="7375da8cf3739185190835d127293209e65d2c66" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@timestamps_opts&lt;/code&gt; - configures the default timestamps type used by &lt;code&gt;timestamps&lt;/code&gt;. Defaults to &lt;code&gt;[type: :naive_datetime]&lt;/code&gt;;</source>
          <target state="translated">&lt;code&gt;@timestamps_opts&lt;/code&gt; - configures the default timestamps type used by &lt;code&gt;timestamps&lt;/code&gt;. Defaults to &lt;code&gt;[type: :naive_datetime]&lt;/code&gt;;</target>
        </trans-unit>
        <trans-unit id="e5d65287e46315c05b711f712d22393464b282a8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@view_module&lt;/code&gt; - The view module being rendered</source>
          <target state="translated">&lt;code&gt;@view_module&lt;/code&gt; - The view module being rendered</target>
        </trans-unit>
        <trans-unit id="f945d07bef01d9de25a7de36330d9f1e04a965ad" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@view_template&lt;/code&gt; - The &lt;code&gt;@view_module&lt;/code&gt;&amp;rsquo;s template being rendered</source>
          <target state="translated">&lt;code&gt;@view_template&lt;/code&gt; - The &lt;code&gt;@view_module&lt;/code&gt;&amp;rsquo;s template being rendered</target>
        </trans-unit>
        <trans-unit id="326528f786e0c76a0f1a70a9b50f460872dff2ec" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DELETE /user&lt;/code&gt; =&amp;gt; &lt;code&gt;:delete&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;DELETE /user&lt;/code&gt; =&amp;gt; &lt;code&gt;:delete&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="396e7df496287eb762fc03d1a3c67ca31b1dc929" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DELETE /users/:id&lt;/code&gt; =&amp;gt; &lt;code&gt;:delete&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;DELETE /users/:id&lt;/code&gt; =&amp;gt; &lt;code&gt;:delete&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c292525a048a2ba4ea1c8b2c376cba7bbd5a1660" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;GET /user/edit&lt;/code&gt; =&amp;gt; &lt;code&gt;:edit&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;GET /user/edit&lt;/code&gt; =&amp;gt; &lt;code&gt;:edit&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="afe1988640a31fa8e12454f5e1aa5794c90bb08c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;GET /user/new&lt;/code&gt; =&amp;gt; &lt;code&gt;:new&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;GET /user/new&lt;/code&gt; =&amp;gt; &lt;code&gt;:new&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4ddd0baa1c570acb4cf62154cd3cb24f1839b03e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;GET /user&lt;/code&gt; =&amp;gt; &lt;code&gt;:show&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;GET /user&lt;/code&gt; =&amp;gt; &lt;code&gt;:show&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="845a4ee193a826ae68e30214da191e3cb75d154b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;GET /users/:id/edit&lt;/code&gt; =&amp;gt; &lt;code&gt;:edit&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;GET /users/:id/edit&lt;/code&gt; =&amp;gt; &lt;code&gt;:edit&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="466a057d1153fab1a6e47f7766ad96a825430b2d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;GET /users/:id&lt;/code&gt; =&amp;gt; &lt;code&gt;:show&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;GET /users/:id&lt;/code&gt; =&amp;gt; &lt;code&gt;:show&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f2792d3b228138977cd06acbeaf49bd3c910c6b4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;GET /users/new&lt;/code&gt; =&amp;gt; &lt;code&gt;:new&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;GET /users/new&lt;/code&gt; =&amp;gt; &lt;code&gt;:new&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4ae906d9e017b1296294203a5cd6c4596cca9d23" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;GET /users&lt;/code&gt; =&amp;gt; &lt;code&gt;:index&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;GET /users&lt;/code&gt; =&amp;gt; &lt;code&gt;:index&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5a1f2ed282aac54ddce7110aab41563cea3b7095" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;KeyGenerator&lt;/code&gt; implements PBKDF2 (Password-Based Key Derivation Function 2), part of PKCS #5 v2.0 (Password-Based Cryptography Specification).</source>
          <target state="translated">&lt;code&gt;KeyGenerator&lt;/code&gt; 는 PKCS # 5 v2.0 (비밀번호 기반 암호화 사양)의 일부인 PBKDF2 (비밀번호 기반 키 파생 함수 2)를 구현합니다.</target>
        </trans-unit>
        <trans-unit id="e7edbb8de2ba549b2f5538753d1b9cfa83141853" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PATCH /user&lt;/code&gt; =&amp;gt; &lt;code&gt;:update&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;PATCH /user&lt;/code&gt; =&amp;gt; &lt;code&gt;:update&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="fae7f13dcecbfdb02c7c65806210c0640d54072a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PATCH /users/:id&lt;/code&gt; =&amp;gt; &lt;code&gt;:update&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;PATCH /users/:id&lt;/code&gt; =&amp;gt; &lt;code&gt;:update&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9f26164ec51b93a377ca195fb90a8a3e1f178609" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;POST /user&lt;/code&gt; =&amp;gt; &lt;code&gt;:create&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;POST /user&lt;/code&gt; =&amp;gt; &lt;code&gt;:create&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f308d7f8d8a686c4de7d35ec24618ecde4189da2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;POST /users&lt;/code&gt; =&amp;gt; &lt;code&gt;:create&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;POST /users&lt;/code&gt; =&amp;gt; &lt;code&gt;:create&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c9d95b5813b5657cc9c815db9550ab556b50bb54" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PUT /user&lt;/code&gt; =&amp;gt; &lt;code&gt;:update&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;PUT /user&lt;/code&gt; =&amp;gt; &lt;code&gt;:update&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="88e3b4ba57c3abfa74c605e6dbcc495113093fff" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PUT /users/:id&lt;/code&gt; =&amp;gt; &lt;code&gt;:update&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;PUT /users/:id&lt;/code&gt; =&amp;gt; &lt;code&gt;:update&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="57e102bc29c5245234649cbe4558650bcd05b6e0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Phoenix.PubSub.PG2&lt;/code&gt; - uses Distributed Elixir, directly exchanging notifications between servers</source>
          <target state="translated">&lt;code&gt;Phoenix.PubSub.PG2&lt;/code&gt; -Distributed Elixir를 사용하여 서버간에 알림을 직접 교환</target>
        </trans-unit>
        <trans-unit id="52c7ea69c78a342a9d331ba77f4657882466ecba" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Phoenix.PubSub.Redis&lt;/code&gt; - uses Redis to exchange data between servers</source>
          <target state="translated">&lt;code&gt;Phoenix.PubSub.Redis&lt;/code&gt; -Redis를 사용하여 서버 간 데이터 교환</target>
        </trans-unit>
        <trans-unit id="f69b47d77da1f8fde452e320ff7e62c90aba6c0e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[&quot;*/*&quot;]&lt;/code&gt; - never raises</source>
          <target state="translated">&lt;code&gt;[&quot;*/*&quot;]&lt;/code&gt; - never raises</target>
        </trans-unit>
        <trans-unit id="ec9b7da5004b4e421f02228b6382f951d410f0e2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[&quot;text/html&quot;, &quot;application/*&quot;]&lt;/code&gt; - doesn&amp;rsquo;t raise for those values</source>
          <target state="translated">&lt;code&gt;[&quot;text/html&quot;, &quot;application/*&quot;]&lt;/code&gt; - doesn&amp;rsquo;t raise for those values</target>
        </trans-unit>
        <trans-unit id="852875a085618fe64d2506698b54d7e9f5484493" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[:my_app, :repo, :query]&lt;/code&gt; - should be invoked on every query send to the adapter, including queries that are related to the transaction management. The measurement will be the time necessary to run the query including queue and encoding time. The metadata is a map where we recommend developers to pass at least the same keys as found in the &lt;a href=&quot;ecto.logentry&quot;&gt;&lt;code&gt;Ecto.LogEntry&lt;/code&gt;&lt;/a&gt; struct</source>
          <target state="translated">&lt;code&gt;[:my_app, :repo, :query]&lt;/code&gt; - should be invoked on every query send to the adapter, including queries that are related to the transaction management. The measurement will be the time necessary to run the query including queue and encoding time. The metadata is a map where we recommend developers to pass at least the same keys as found in the &lt;a href=&quot;ecto.logentry&quot;&gt;&lt;code&gt;Ecto.LogEntry&lt;/code&gt;&lt;/a&gt; struct</target>
        </trans-unit>
        <trans-unit id="1b399b0b5154cd5d5880fbba6ea2c7766edafd15" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[]&lt;/code&gt; - always raises (default)</source>
          <target state="translated">&lt;code&gt;[]&lt;/code&gt; - always raises (default)</target>
        </trans-unit>
        <trans-unit id="bc08bb9314fd272ea6758237de4f493df2fdeedf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__cardinality__&lt;/code&gt; - the cardinality of the association</source>
          <target state="translated">&lt;code&gt;__cardinality__&lt;/code&gt; - the cardinality of the association</target>
        </trans-unit>
        <trans-unit id="60458994c9d1137682ffaa7da514a4336f646da6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__field__&lt;/code&gt; - the association field in &lt;code&gt;owner&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;__field__&lt;/code&gt; - the association field in &lt;code&gt;owner&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="501dc0a5295c6f310a8857fb546cf7851274dfe9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__owner__&lt;/code&gt; - the schema that owns the association</source>
          <target state="translated">&lt;code&gt;__owner__&lt;/code&gt; - the schema that owns the association</target>
        </trans-unit>
        <trans-unit id="7df60e7c021f9d96d0ca48f8e648e5178975cca4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__schema__(:association, assoc)&lt;/code&gt; - Returns the association reflection of the given assoc;</source>
          <target state="translated">&lt;code&gt;__schema__(:association, assoc)&lt;/code&gt; - Returns the association reflection of the given assoc;</target>
        </trans-unit>
        <trans-unit id="b22136df050335135f9434fed91e7d22b22abed9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__schema__(:associations)&lt;/code&gt; - Returns a list of all association field names;</source>
          <target state="translated">&lt;code&gt;__schema__(:associations)&lt;/code&gt; - Returns a list of all association field names;</target>
        </trans-unit>
        <trans-unit id="7b4d0cc4e7fe1f4e10ca971abedd3d135d7260f2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__schema__(:autogenerate_id)&lt;/code&gt; - Primary key that is auto generated on insert;</source>
          <target state="translated">&lt;code&gt;__schema__(:autogenerate_id)&lt;/code&gt; - Primary key that is auto generated on insert;</target>
        </trans-unit>
        <trans-unit id="d5ab8ddeaae7cebd78941d5a993999f707ab2256" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__schema__(:embed, embed)&lt;/code&gt; - Returns the embedding reflection of the given embed;</source>
          <target state="translated">&lt;code&gt;__schema__(:embed, embed)&lt;/code&gt; - Returns the embedding reflection of the given embed;</target>
        </trans-unit>
        <trans-unit id="3b7eab71237dfd0167d866268bf391c916ba7f6e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__schema__(:embeds)&lt;/code&gt; - Returns a list of all embedded field names;</source>
          <target state="translated">&lt;code&gt;__schema__(:embeds)&lt;/code&gt; - Returns a list of all embedded field names;</target>
        </trans-unit>
        <trans-unit id="d786750dc6e0e5fe89284dac721171857269027d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__schema__(:field_source, field)&lt;/code&gt; - Returns the alias of the given field;</source>
          <target state="translated">&lt;code&gt;__schema__(:field_source, field)&lt;/code&gt; - Returns the alias of the given field;</target>
        </trans-unit>
        <trans-unit id="2713e37ae4b640ef3081574b433b1c9e40f0be3e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__schema__(:fields)&lt;/code&gt; - Returns a list of all non-virtual field names;</source>
          <target state="translated">&lt;code&gt;__schema__(:fields)&lt;/code&gt; - Returns a list of all non-virtual field names;</target>
        </trans-unit>
        <trans-unit id="7af2b9bfb8c8a603373ec533b57a365a79734329" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__schema__(:prefix)&lt;/code&gt; - Returns optional prefix for source provided by &lt;code&gt;@schema_prefix&lt;/code&gt; schema attribute;</source>
          <target state="translated">&lt;code&gt;__schema__(:prefix)&lt;/code&gt; - Returns optional prefix for source provided by &lt;code&gt;@schema_prefix&lt;/code&gt; schema attribute;</target>
        </trans-unit>
        <trans-unit id="9cd3b4bcd0ad8975a337707299ccb68d43f16770" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__schema__(:primary_key)&lt;/code&gt; - Returns a list of primary key fields (empty if there is none);</source>
          <target state="translated">&lt;code&gt;__schema__(:primary_key)&lt;/code&gt; - Returns a list of primary key fields (empty if there is none);</target>
        </trans-unit>
        <trans-unit id="7c4d7da202d68a4de503742110e7b335acc66b9e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__schema__(:read_after_writes)&lt;/code&gt; - Non-virtual fields that must be read back from the database after every write (insert or update);</source>
          <target state="translated">&lt;code&gt;__schema__(:read_after_writes)&lt;/code&gt; - Non-virtual fields that must be read back from the database after every write (insert or update);</target>
        </trans-unit>
        <trans-unit id="a53092d48e99cfd91503495372e582761b240955" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__schema__(:source)&lt;/code&gt; - Returns the source as given to &lt;a href=&quot;#schema/2&quot;&gt;&lt;code&gt;schema/2&lt;/code&gt;&lt;/a&gt;;</source>
          <target state="translated">&lt;code&gt;__schema__(:source)&lt;/code&gt; - Returns the source as given to &lt;a href=&quot;#schema/2&quot;&gt;&lt;code&gt;schema/2&lt;/code&gt;&lt;/a&gt;;</target>
        </trans-unit>
        <trans-unit id="90db3a65d3ad0eccdef17f41217c384f1cfcca2b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__schema__(:type, field)&lt;/code&gt; - Returns the type of the given non-virtual field;</source>
          <target state="translated">&lt;code&gt;__schema__(:type, field)&lt;/code&gt; - Returns the type of the given non-virtual field;</target>
        </trans-unit>
        <trans-unit id="77d8482e88510540a3e7437dbe293fcb28c18db9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;action&lt;/code&gt; - The action to be performed with the changeset</source>
          <target state="translated">&lt;code&gt;action&lt;/code&gt; - 액션은 변경 집합으로 수행 할</target>
        </trans-unit>
        <trans-unit id="bb26b116dfc0e662257809bfad7ff62c1972ce96" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;adapter&lt;/code&gt; - holds the adapter information in a tuple</source>
          <target state="translated">&lt;code&gt;adapter&lt;/code&gt; - 튜플에있는 어댑터 정보를 보유하고</target>
        </trans-unit>
        <trans-unit id="e1695512bcc987f8fbb70766863490d71bcbac15" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;age&lt;/code&gt; - The max age of assets to keep in seconds</source>
          <target state="translated">&lt;code&gt;age&lt;/code&gt; - 초 단위로 유지할 자산의 최대 수명</target>
        </trans-unit>
        <trans-unit id="f050567128d29d6ed570cd73fffa8a53ed0b6755" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;args&lt;/code&gt; is the argument term (second argument) passed to &lt;a href=&quot;#start_link/3&quot;&gt;&lt;code&gt;start_link/3&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;args&lt;/code&gt; 는 &lt;a href=&quot;#start_link/3&quot;&gt; &lt;code&gt;start_link/3&lt;/code&gt; 에&lt;/a&gt; 전달 된 인수 용어 (두 번째 인수) 입니다.</target>
        </trans-unit>
        <trans-unit id="57e78ef0b5f95578e214cf4dc7f0b8473dc2b940" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;args&lt;/code&gt; is the argument term (second argument) passed to &lt;code&gt;start_link/3&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;args&lt;/code&gt; 는 &lt;code&gt;start_link/3&lt;/code&gt; 에 전달 된 인수 용어 (두 번째 인수) 입니다.</target>
        </trans-unit>
        <trans-unit id="33bd3cea5760043e63c1bbe82b1f25b67929bff0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;assigns&lt;/code&gt; - The map of socket assigns, default: &lt;code&gt;%{}&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;assigns&lt;/code&gt; - 소켓 할당 맵, 기본값 : &lt;code&gt;%{}&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d74f3e191eb5acba7c3cf854b862eb8f52f9ec93" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;assigns&lt;/code&gt; - a dictionary with the assigns to be used in the view. Those assigns are merged and have higher precedence than the connection assigns (&lt;code&gt;conn.assigns&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;assigns&lt;/code&gt; - 뷰에서 사용될 어사 인이있는 사전. 이러한 할당은 병합되어 연결 할당 ( &lt;code&gt;conn.assigns&lt;/code&gt; ) 보다 우선 순위가 높습니다.</target>
        </trans-unit>
        <trans-unit id="a459cee802591afcc5aa7f732099408777084f44" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;assigns&lt;/code&gt; - shared user data as a map</source>
          <target state="translated">&lt;code&gt;assigns&lt;/code&gt; -공유 사용자 데이터를 맵으로</target>
        </trans-unit>
        <trans-unit id="b88f712feb4137592e76db6c5abf139aad2c4da1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;body_params&lt;/code&gt; - the request body params, populated through a &lt;a href=&quot;plug.parsers&quot;&gt;&lt;code&gt;Plug.Parsers&lt;/code&gt;&lt;/a&gt; parser.</source>
          <target state="translated">&lt;code&gt;body_params&lt;/code&gt; - 요청 본문 매개 변수는 &lt;a href=&quot;plug.parsers&quot;&gt; &lt;code&gt;Plug.Parsers&lt;/code&gt; &lt;/a&gt; 파서를 통해 채워집니다 .</target>
        </trans-unit>
        <trans-unit id="0e5e588bc5a53e0204f4709fa13771f97d4c3053" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;broadcast&lt;/code&gt; - broadcasts a message on the given topic sends: &lt;code&gt;{:broadcast, :none | pid, topic, message}&lt;/code&gt; respond with: &lt;code&gt;:ok | {:error, reason} | {:perform, {m, f, a}}&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;broadcast&lt;/code&gt; - 주어진 주제에 대한 메시지를 브로드 캐스트합니다. &lt;code&gt;{:broadcast, :none | pid, topic, message}&lt;/code&gt; 답변 : &lt;code&gt;:ok | {:error, reason} | {:perform, {m, f, a}}&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0d9033fb03f86462199abee28263a916b8af8fb9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;broadcast_period&lt;/code&gt; - The interval in milliseconds to send delta broadcats across the cluster. Default &lt;code&gt;1500&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;broadcast_period&lt;/code&gt; - 클러스터에서 델타 브로드 캐스트 를 전송하는 간격 (밀리 초)입니다. 기본 &lt;code&gt;1500&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8e5d14e8942256d6946a38b599d8a4109b0d1433" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cardinality&lt;/code&gt; - The association cardinality</source>
          <target state="translated">&lt;code&gt;cardinality&lt;/code&gt; -연관 카디널리티</target>
        </trans-unit>
        <trans-unit id="db47714417a1545c26cbdc85b19b394fa5736fb6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;changes&lt;/code&gt; - The &lt;code&gt;changes&lt;/code&gt; from parameters that were approved in casting</source>
          <target state="translated">&lt;code&gt;changes&lt;/code&gt; - &lt;code&gt;changes&lt;/code&gt; 주조 승인 된 매개 변수에서</target>
        </trans-unit>
        <trans-unit id="f46f7ad1dbe9307e27576d1fd8b852115a7001b6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;changes&lt;/code&gt; - changes are merged giving precedence to the &lt;code&gt;changeset2&lt;/code&gt; changes.</source>
          <target state="translated">&lt;code&gt;changes&lt;/code&gt; - &lt;code&gt;changeset2&lt;/code&gt; 변경에 우선하여 변경 사항이 병합 됩니다.</target>
        </trans-unit>
        <trans-unit id="2cc957a83fc4dd04cae3274c8d2201d7d282b5ec" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;changes&lt;/code&gt; is a map or keyword where the key is an atom representing a field, association or embed and the value is a term. Note the &lt;code&gt;value&lt;/code&gt; is directly stored in the changeset with no validation whatsoever. For this reason, this function is meant for working with data internal to the application.</source>
          <target state="translated">&lt;code&gt;changes&lt;/code&gt; 은 키가 필드, 연관 또는 임베드를 나타내는 원자이고 값이 용어 인 맵 또는 키워드입니다. 노트 &lt;code&gt;value&lt;/code&gt; 없이 직접 검증 무엇이든지로 변경 집합에 저장됩니다. 이러한 이유로이 기능은 응용 프로그램 내부의 데이터로 작업하기위한 것입니다.</target>
        </trans-unit>
        <trans-unit id="d7c41bedc1f097e6f7a2c23c18b3f7a4360cd6bf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;channel&lt;/code&gt; - The current channel module</source>
          <target state="translated">&lt;code&gt;channel&lt;/code&gt; - 현재 채널 모듈</target>
        </trans-unit>
        <trans-unit id="b56a0b5f68d23af91109b0200d2265a11f6cb47a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;channel_pid&lt;/code&gt; - The channel pid</source>
          <target state="translated">&lt;code&gt;channel_pid&lt;/code&gt; - 채널 pid</target>
        </trans-unit>
        <trans-unit id="6f3155de07fd6379a78402dc370e636798bf43b9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;checkout/2&lt;/code&gt; and &lt;code&gt;transaction/2&lt;/code&gt; can be combined and nested multiple times. If &lt;code&gt;checkout/2&lt;/code&gt; is called inside the function of another &lt;code&gt;checkout/2&lt;/code&gt; call, the function is simply executed, without checking out a new connection.</source>
          <target state="translated">&lt;code&gt;checkout/2&lt;/code&gt; 와 &lt;code&gt;transaction/2&lt;/code&gt; 는 여러 번 결합 및 중첩 될 수 있습니다. 경우 &lt;code&gt;checkout/2&lt;/code&gt; 다른 사람의 함수 내에서 호출 &lt;code&gt;checkout/2&lt;/code&gt; 호, 기능은 단순히 새로운 연결을 확인하지 않고 실행됩니다.</target>
        </trans-unit>
        <trans-unit id="de3bb7b38468a5d3eaa270f4b681b12112d6cc66" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;clock_sample_periods&lt;/code&gt; - The numbers of heartbeat windows to sample remote clocks before collapsing and requesting transfer. Default &lt;code&gt;2&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;clock_sample_periods&lt;/code&gt; - 축소 및 전송을 요청하기 전에 원격 클록을 샘플링 할 하트 비트 창의 수입니다. 기본 &lt;code&gt;2&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="889f07764297a175fcb54ff1419ea97ab0c8c2c2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;compile_metadata&lt;/code&gt; is a map of compile-time metadata about the environment where &lt;a href=&quot;#instrument/3&quot;&gt;&lt;code&gt;instrument/3&lt;/code&gt;&lt;/a&gt; has been called. It contains the module where the instrumentation is happening (under the &lt;code&gt;:module&lt;/code&gt; key), the file and line (&lt;code&gt;:file&lt;/code&gt; and &lt;code&gt;:line&lt;/code&gt;), and the function inside which the instrumentation is happening (under &lt;code&gt;:function&lt;/code&gt;). This information can be used arbitrarily by the callback.</source>
          <target state="translated">&lt;code&gt;compile_metadata&lt;/code&gt; 는 &lt;a href=&quot;#instrument/3&quot;&gt; &lt;code&gt;instrument/3&lt;/code&gt; &lt;/a&gt; 가 호출 된 환경에 대한 컴파일 타임 메타 데이터의 맵입니다 . 여기에는 계측이 수행되는 모듈 ( &lt;code&gt;:module&lt;/code&gt; 키 아래 ), 파일 및 줄 ( &lt;code&gt;:file&lt;/code&gt; 및 &lt;code&gt;:line&lt;/code&gt; ), 계측이 수행되는 기능 ( &lt;code&gt;:function&lt;/code&gt; )이 포함됩니다. 이 정보는 콜백에서 임의로 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3c186e51f3149f22e4054d9897a7e6a704e13f13" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;conn&lt;/code&gt; - the &lt;a href=&quot;../plug/1.5.1/plug.conn&quot;&gt;&lt;code&gt;Plug.Conn&lt;/code&gt;&lt;/a&gt; struct</source>
          <target state="translated">&lt;code&gt;conn&lt;/code&gt; - &lt;a href=&quot;../plug/1.5.1/plug.conn&quot;&gt; &lt;code&gt;Plug.Conn&lt;/code&gt; &lt;/a&gt; 구조체</target>
        </trans-unit>
        <trans-unit id="6cc861ba8340cd2cf93d740b08bc25d49cce9211" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;connect/2&lt;/code&gt; - receives the socket params and authenticates the connection. Must return a &lt;a href=&quot;phoenix.socket#content&quot;&gt;&lt;code&gt;Phoenix.Socket&lt;/code&gt;&lt;/a&gt; struct, often with custom assigns.</source>
          <target state="translated">&lt;code&gt;connect/2&lt;/code&gt; - 소켓 매개 변수를 수신하고 연결을 인증합니다. 종종 사용자 지정 할당과 함께 &lt;a href=&quot;phoenix.socket#content&quot;&gt; &lt;code&gt;Phoenix.Socket&lt;/code&gt; &lt;/a&gt; 구조체를 반환해야 합니다.</target>
        </trans-unit>
        <trans-unit id="cec0129c991da12768418fade08f2f133f6211c7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;content&lt;/code&gt; - a valid csrf token</source>
          <target state="translated">&lt;code&gt;content&lt;/code&gt; - 유효한 CSRF 토큰</target>
        </trans-unit>
        <trans-unit id="ef09230c82821b60f20c65abf1fccfa2426051b8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cookies&lt;/code&gt;- the request cookies with the response cookies</source>
          <target state="translated">&lt;code&gt;cookies&lt;/code&gt; -응답 쿠키가 포함 된 요청 쿠키</target>
        </trans-unit>
        <trans-unit id="dbe1e88c8487c92bfab21a9d4a06043bc3b3caf3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;csrf-param&lt;/code&gt; - a request parameter where expected csrf token</source>
          <target state="translated">&lt;code&gt;csrf-param&lt;/code&gt; - 예상 csrf 토큰 인 요청 매개 변수</target>
        </trans-unit>
        <trans-unit id="0819619d4d1df3becbd190b9dcd0f27b60ce46b6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;data-confirm&lt;/code&gt; - shows a confirmation prompt before generating and submitting the form when &lt;code&gt;:method&lt;/code&gt; is not &lt;code&gt;:get&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;data-confirm&lt;/code&gt; - &lt;code&gt;:method&lt;/code&gt; 가 &lt;code&gt;:get&lt;/code&gt; 일 때 양식을 생성하고 제출하기 전에 확인 프롬프트를 표시합니다 .</target>
        </trans-unit>
        <trans-unit id="02f4dc5a68caa1236835776a968aacbf3e6f749a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;data-confirm&lt;/code&gt; - shows a confirmation prompt before generating and submitting the form.</source>
          <target state="translated">&lt;code&gt;data-confirm&lt;/code&gt; - 양식을 생성하고 제출하기 전에 확인 프롬프트를 표시합니다.</target>
        </trans-unit>
        <trans-unit id="28c52b1a4af0fdd95c7c39440448071378db7e11" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;data&lt;/code&gt; - The changeset source data, for example, a struct</source>
          <target state="translated">&lt;code&gt;data&lt;/code&gt; - 변경 집합 소스 데이터, 예를 들면, 구조체</target>
        </trans-unit>
        <trans-unit id="4b4dcff93e0ec268005f49346d7d19bbd8185883" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;data&lt;/code&gt; can also take form of &lt;code&gt;{fields, values}&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;data&lt;/code&gt; 는 &lt;code&gt;{fields, values}&lt;/code&gt; 형식을 취할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="033e1fbec1f4f57b26a42bfe941fe208fc709ea0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;default_config/0&lt;/code&gt; - returns the default transport configuration to be merged when the transport is declared in the socket module</source>
          <target state="translated">&lt;code&gt;default_config/0&lt;/code&gt; - 소켓 모듈에서 전송이 선언 될 때 병합 될 기본 전송 구성을 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="e4b85f56e59168ef589d92e4a566168444f26ef9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;defaults&lt;/code&gt; - Default fields used when building the association</source>
          <target state="translated">&lt;code&gt;defaults&lt;/code&gt; - 연관을 빌드 할 때 사용되는 기본 필드</target>
        </trans-unit>
        <trans-unit id="c18e7fd3f0b579f4db13793f5fc4dd061d510af0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;down_period&lt;/code&gt; - The interval in milliseconds to flag a replica as down temporarily down. Default &lt;code&gt;broadcast_period * max_silent_periods * 2&lt;/code&gt; (30s down detection). Note: This must be at least 2x the &lt;code&gt;broadcast_period&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;down_period&lt;/code&gt; - 복제본을 일시적으로 중단 된 것으로 플래그 지정하는 간격 (밀리 초)입니다. 기본 &lt;code&gt;broadcast_period * max_silent_periods * 2&lt;/code&gt; (30 초 작동 중지 감지). 참고 : 이것은 &lt;code&gt;broadcast_period&lt;/code&gt; 의 2 배 이상이어야합니다 .</target>
        </trans-unit>
        <trans-unit id="7620ae409a20641f21ef7a460bc5d5707e823981" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;dynamic&lt;/code&gt; can be interpolated at the root of a &lt;code&gt;where&lt;/code&gt;, &lt;code&gt;having&lt;/code&gt; or a &lt;code&gt;join&lt;/code&gt;&amp;rsquo;s &lt;code&gt;on&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;dynamic&lt;/code&gt; (a)의 루트에서 보간 될 수있다 , &lt;code&gt;having&lt;/code&gt; 하거나는 &lt;code&gt;join&lt;/code&gt; 의 &lt;code&gt;on&lt;/code&gt; . &lt;code&gt;where&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="bf185d0960f12b0d7c4ebf21a82c1b0f4e3997cd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;empty_values&lt;/code&gt; - A list of values to be considered empty</source>
          <target state="translated">&lt;code&gt;empty_values&lt;/code&gt; - 비어있는 것으로 간주되는 값의 목록</target>
        </trans-unit>
        <trans-unit id="78a579886d5939c6db7265d401d6cb0a76dcdfa2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;endpoint&lt;/code&gt; - The endpoint module where this socket originated, for example: &lt;code&gt;MyApp.Endpoint&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;endpoint&lt;/code&gt; - 이 소켓이 시작된 엔드 포인트 모듈 (예 : &lt;code&gt;MyApp.Endpoint&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="8dbd5bf505a906190aaecf44ee8fc72561677242" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;endpoint&lt;/code&gt; - The endpoint module, for example &lt;code&gt;MyApp.Endpoint&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;endpoint&lt;/code&gt; -엔드 포인트 모듈 (예 : &lt;code&gt;MyApp.Endpoint&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="d9edaabc945a49faf042447eabee463458415d2f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;errors&lt;/code&gt; - All errors from validations</source>
          <target state="translated">&lt;code&gt;errors&lt;/code&gt; - 유효성 검사의 모든 오류</target>
        </trans-unit>
        <trans-unit id="59b58aaaab5203cea8b44f2fbc67a701acda2a6b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;errors&lt;/code&gt; and &lt;code&gt;validations&lt;/code&gt; - they are simply concatenated.</source>
          <target state="translated">&lt;code&gt;errors&lt;/code&gt; 및 &lt;code&gt;validations&lt;/code&gt; -단순히 연결되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="8f3f00b87b9c8454bc078c02c62011828df10aa7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;event&lt;/code&gt;- The string event name, for example &amp;ldquo;phx_join&amp;rdquo;</source>
          <target state="translated">&lt;code&gt;event&lt;/code&gt; - 문자열 이벤트 이름, 예를 들어 &quot;phx_join&quot;에 대한</target>
        </trans-unit>
        <trans-unit id="668c87f2a5869478320481db801806d9e77f78c6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;field&lt;/code&gt; - The name of the association field on the schema</source>
          <target state="translated">&lt;code&gt;field&lt;/code&gt; - 스키마에 연결 필드의 이름</target>
        </trans-unit>
        <trans-unit id="4a91378666385a214e2ba31bed3572337c0ff59b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;forward&lt;/code&gt; accepts the following options:</source>
          <target state="translated">&lt;code&gt;forward&lt;/code&gt; 는 다음 옵션을 허용합니다.</target>
        </trans-unit>
        <trans-unit id="44fdddd9aec385a0927980e479f82a27a6485358" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;from&lt;/code&gt; and &lt;code&gt;join&lt;/code&gt; also support index hints, as found in databases such as &lt;a href=&quot;https://dev.mysql.com/doc/refman/8.0/en/index-hints.html&quot;&gt;MySQL&lt;/a&gt; and &lt;a href=&quot;https://docs.microsoft.com/en-us/sql/t-sql/queries/hints-transact-sql-table?view=sql-server-2017&quot;&gt;MSSQL&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;from&lt;/code&gt; 및 &lt;code&gt;join&lt;/code&gt; 은 &lt;a href=&quot;https://dev.mysql.com/doc/refman/8.0/en/index-hints.html&quot;&gt;MySQL&lt;/a&gt; 및 &lt;a href=&quot;https://docs.microsoft.com/en-us/sql/t-sql/queries/hints-transact-sql-table?view=sql-server-2017&quot;&gt;MSSQL&lt;/a&gt; 과 같은 데이터베이스에있는 인덱스 힌트도 지원 합니다.</target>
        </trans-unit>
        <trans-unit id="cba3ce899573666d281b9ff444ae82b36f411003" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;gc_server&lt;/code&gt; - The registered server name or pid</source>
          <target state="translated">&lt;code&gt;gc_server&lt;/code&gt; - 등록 된 서버 이름 또는 pid</target>
        </trans-unit>
        <trans-unit id="2c657f7e7c4efa726387b5bca016ed8175980cdb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;get&lt;/code&gt;, &lt;code&gt;post&lt;/code&gt;, &lt;code&gt;put&lt;/code&gt;, &lt;code&gt;patch&lt;/code&gt;, &lt;code&gt;delete&lt;/code&gt;, &lt;code&gt;options&lt;/code&gt;, &lt;code&gt;connect&lt;/code&gt;, &lt;code&gt;trace&lt;/code&gt;, &lt;code&gt;head&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;get&lt;/code&gt; , &lt;code&gt;post&lt;/code&gt; , &lt;code&gt;put&lt;/code&gt; , &lt;code&gt;patch&lt;/code&gt; , &lt;code&gt;delete&lt;/code&gt; , &lt;code&gt;options&lt;/code&gt; , &lt;code&gt;connect&lt;/code&gt; , &lt;code&gt;trace&lt;/code&gt; , &lt;code&gt;head&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="98e52e06e0331479a62ea10bc00f303f3f507f2c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;get_value&lt;/code&gt; is the retrieved value (which can be operated on before being returned)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50ec8f6c4a4f0f0d84457bf3294f81154d218c3b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;group_by&lt;/code&gt; also accepts a list of atoms where each atom refers to a field in source. For more complicated queries you can access fields directly instead of atoms.</source>
          <target state="translated">&lt;code&gt;group_by&lt;/code&gt; 는 또한 각 원자가 소스의 필드를 나타내는 원자 목록을 허용합니다. 보다 복잡한 쿼리의 경우 원자 대신 필드에 직접 액세스 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a10d6c2d72038d70bb97861d2206068620bead68" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;halted&lt;/code&gt; - the boolean status on whether the pipeline was halted</source>
          <target state="translated">&lt;code&gt;halted&lt;/code&gt; -파이프 라인이 중지되었는지 여부에 대한 부울 상태</target>
        </trans-unit>
        <trans-unit id="4600c41d3365badfa7e4209327292730b13256cb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;handle_out/3&lt;/code&gt; callbacks must return one of:</source>
          <target state="translated">&lt;code&gt;handle_out/3&lt;/code&gt; 콜백은 다음 중 하나를 반환해야합니다.</target>
        </trans-unit>
        <trans-unit id="d0128554f32d386f4289598774287e4e88d7412d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;handler&lt;/code&gt; - The socket module where this socket originated, for example: &lt;code&gt;MyApp.UserSocket&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;handler&lt;/code&gt; -이 소켓이 시작된 소켓 모듈, 예를 들어 : &lt;code&gt;MyApp.UserSocket&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="524f7e30658816b4fd6a4b55651f92f65c49b7d1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;has_many&lt;/code&gt; can be used to define hierarchical relationships within a single schema, for example threaded comments.</source>
          <target state="translated">&lt;code&gt;has_many&lt;/code&gt; 는 단일 스키마 내에서 계층 관계를 정의하는 데 사용될 수 있습니다 (예 : 스레드 주석).</target>
        </trans-unit>
        <trans-unit id="b077bbf122963118bf4bd9a4e8595f7482dbeb98" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;host&lt;/code&gt; - the requested host as a binary, example: &lt;code&gt;&quot;www.example.com&quot;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;host&lt;/code&gt; - 이진, 예를 들어 같은 요청 호스트 : &lt;code&gt;&quot;www.example.com&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="02b1f40fbd54a788648bfdb46a54042d80f2234b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;id/1&lt;/code&gt; - receives the socket returned by &lt;code&gt;connect/2&lt;/code&gt; and returns the id of this connection as a string. The &lt;code&gt;id&lt;/code&gt; is used to identify socket connections, often to a particular user, allowing us to force disconnections. For sockets requiring no authentication, &lt;code&gt;nil&lt;/code&gt; can be returned.</source>
          <target state="translated">&lt;code&gt;id/1&lt;/code&gt; - &lt;code&gt;connect/2&lt;/code&gt; 에 의해 리턴 된 소켓을 수신 하고이 연결의 id를 문자열로 리턴합니다. &lt;code&gt;id&lt;/code&gt; 우리가 단선을 강제 할 수 있도록, 종종 특정 사용자에게, 소켓 연결을 식별하는 데 사용됩니다. 인증이 필요없는 소켓의 경우 &lt;code&gt;nil&lt;/code&gt; 을 반환 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c0f36b342982b9967c866bd37637dac595318f8f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;id&lt;/code&gt; - The string id of the socket</source>
          <target state="translated">&lt;code&gt;id&lt;/code&gt; - 소켓의 문자열 ID</target>
        </trans-unit>
        <trans-unit id="1b1d9bad82657262f6d8fa3e6465e57b2815237a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;inc&lt;/code&gt; - increments (or decrements if the value is negative) the given field in the table by the given value</source>
          <target state="translated">&lt;code&gt;inc&lt;/code&gt; - 주어진 값만큼 테이블의 주어진 필드를 증가 (또는 값이 음수이면 감소)</target>
        </trans-unit>
        <trans-unit id="d9dff694619e6e23269799d025b46fd57d376dce" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;input_path&lt;/code&gt; - The path where the assets are located</source>
          <target state="translated">&lt;code&gt;input_path&lt;/code&gt; - 자산이 위치한 경로</target>
        </trans-unit>
        <trans-unit id="72e4ee4913f961c9a4b7c29d32492f68e19f6e4b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;join_keys&lt;/code&gt; - The keyword list with many to many join keys</source>
          <target state="translated">&lt;code&gt;join_keys&lt;/code&gt; - 많은 수의 조인 키가있는 키워드 목록</target>
        </trans-unit>
        <trans-unit id="4475cd0a0d4fef0b5617f1e177a632cda8408a74" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;join_ref&lt;/code&gt; - The ref sent by the client when joining</source>
          <target state="translated">&lt;code&gt;join_ref&lt;/code&gt; - 가입 할 때 클라이언트가 보낸 심판</target>
        </trans-unit>
        <trans-unit id="033042548c899de9336607002781cabe646ba3ee" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;join_through&lt;/code&gt; - Atom (representing a schema) or a string (representing a table) for many to many associations</source>
          <target state="translated">&lt;code&gt;join_through&lt;/code&gt; -다 대다 연관의 원자 (스키마를 나타냄) 또는 문자열 (테이블을 나타냄)</target>
        </trans-unit>
        <trans-unit id="4ff2cd1f26d7677d1ea7be8a102c57a144123171" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;joined&lt;/code&gt; - If the socket has effectively joined the channel</source>
          <target state="translated">&lt;code&gt;joined&lt;/code&gt; - 소켓이 채널에 효과적으로 참여한 경우</target>
        </trans-unit>
        <trans-unit id="ba377f67ecee40301795593b5845f36339a1c83d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;keep&lt;/code&gt; - The number of old versions to keep</source>
          <target state="translated">&lt;code&gt;keep&lt;/code&gt; -유지할 이전 버전 수</target>
        </trans-unit>
        <trans-unit id="aa2a4d88e36458095a07be41cda1bef97c2d53cd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;key&lt;/code&gt; - The key identifying this presence</source>
          <target state="translated">&lt;code&gt;key&lt;/code&gt; -이 존재를 식별하는 키</target>
        </trans-unit>
        <trans-unit id="0783a714f2079cf68176ecedddab548909d2517d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;key&lt;/code&gt; - The key of the presence</source>
          <target state="translated">&lt;code&gt;key&lt;/code&gt; - 존재의 핵심</target>
        </trans-unit>
        <trans-unit id="74dee47697a859176e1ea99bc7d001624d5b6176" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;key&lt;/code&gt; is an atom that represents any field, embed or association in the changeset. Note the &lt;code&gt;value&lt;/code&gt; is directly stored in the changeset with no validation whatsoever. For this reason, this function is meant for working with data internal to the application.</source>
          <target state="translated">&lt;code&gt;key&lt;/code&gt; 는 변경 세트에서 필드, 임베드 또는 연관을 나타내는 원자입니다. 노트 &lt;code&gt;value&lt;/code&gt; 없이 직접 검증 무엇이든지로 변경 집합에 저장됩니다. 이러한 이유로이 기능은 응용 프로그램 내부의 데이터로 작업하기위한 것입니다.</target>
        </trans-unit>
        <trans-unit id="d6efc4486225466bcb4bb3a50a9925455d3cba9d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;max_delta_sizes&lt;/code&gt; - The list of delta generation sizes to keep before falling back to sending entire state. Defaults &lt;code&gt;[100, 1000, 10_000]&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;max_delta_sizes&lt;/code&gt; - 전체 상태 전송으로 돌아 가기 전에 유지할 델타 생성 크기 목록입니다. 기본값은 &lt;code&gt;[100, 1000, 10_000]&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="987ff9001ecd494c25e6ef563e17f3fe60fc42da" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;max_silent_periods&lt;/code&gt; - The max integer of broadcast periods for which no delta broadcasts have been sent. Defaults &lt;code&gt;10&lt;/code&gt; (15s heartbeat)</source>
          <target state="translated">&lt;code&gt;max_silent_periods&lt;/code&gt; - 델타 브로드 캐스트가 전송되지 않은 브로드 캐스트 기간의 최대 정수입니다. 기본값 &lt;code&gt;10&lt;/code&gt; (15 초 하트 비트)</target>
        </trans-unit>
        <trans-unit id="3de05497aed68e61231371d7fde7ad036371310b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;message&lt;/code&gt; - The payload of the broadcast</source>
          <target state="translated">&lt;code&gt;message&lt;/code&gt; -방송의 페이로드</target>
        </trans-unit>
        <trans-unit id="a98979d797e9cd1b3df09361e9856e1361a9f82f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;meta&lt;/code&gt; - Either a new map of metadata to attach to this presence, or a function. The function will receive the current metadata as input and the return value will be used as the new metadata</source>
          <target state="translated">&lt;code&gt;meta&lt;/code&gt; - 이 존재에 첨부 할 새로운 메타 데이터 맵 또는 함수입니다. 이 함수는 현재 메타 데이터를 입력으로 수신하고 반환 값은 새 메타 데이터로 사용됩니다</target>
        </trans-unit>
        <trans-unit id="dd95b5eeb5bcdf67736b6285795ac639e6b3439b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;meta&lt;/code&gt; - The map of metadata to attach to this presence</source>
          <target state="translated">&lt;code&gt;meta&lt;/code&gt; - 이 존재에 첨부 할 메타 데이터 맵</target>
        </trans-unit>
        <trans-unit id="9f1cfc9235e334bda47946b04d8e6153452ac028" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;method-param&lt;/code&gt; - a request parameter where expected a custom HTTP method</source>
          <target state="translated">&lt;code&gt;method-param&lt;/code&gt; - 사용자 정의 HTTP 메소드가 필요한 요청 매개 변수</target>
        </trans-unit>
        <trans-unit id="073a7768fad0def734e63a744eb526e08585ef4e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;method&lt;/code&gt; - the request method as a binary, example: &lt;code&gt;&quot;GET&quot;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;method&lt;/code&gt; - 바이너리로 요청 방법, 예 : &lt;code&gt;&quot;GET&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="aafb8a58dea8783be5dbf5934648d694c596e504" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;module&lt;/code&gt; - The channel module handler, for example &lt;code&gt;MyApp.RoomChannel&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;module&lt;/code&gt; - 채널 모듈 처리기, 예를 들어 대 &lt;code&gt;MyApp.RoomChannel&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="88ae990434cd3c2bf55e963d5908aec7e902bf32" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;naive_datetime&lt;/code&gt; - has a precision of seconds and casts values to Elixir&amp;rsquo;s &lt;a href=&quot;https://hexdocs.pm/elixir/NaiveDateTime.html&quot;&gt;&lt;code&gt;NaiveDateTime&lt;/code&gt;&lt;/a&gt; struct which has no timezone information.</source>
          <target state="translated">&lt;code&gt;naive_datetime&lt;/code&gt; - 초의 정밀도 를 가지며 시간대 정보가없는 Elixir의 &lt;a href=&quot;https://hexdocs.pm/elixir/NaiveDateTime.html&quot;&gt; &lt;code&gt;NaiveDateTime&lt;/code&gt; &lt;/a&gt; 구조체에 값을 캐스트합니다 .</target>
        </trans-unit>
        <trans-unit id="8ea7a90df3b84001b80cc2821e898e38884aab0a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;naive_datetime_usec&lt;/code&gt; - has a default precision of microseconds and also casts values to &lt;a href=&quot;https://hexdocs.pm/elixir/NaiveDateTime.html&quot;&gt;&lt;code&gt;NaiveDateTime&lt;/code&gt;&lt;/a&gt; with no timezone information.</source>
          <target state="translated">&lt;code&gt;naive_datetime_usec&lt;/code&gt; - 기본 정밀도는 마이크로 초이며 시간대 정보없이 &lt;a href=&quot;https://hexdocs.pm/elixir/NaiveDateTime.html&quot;&gt; &lt;code&gt;NaiveDateTime&lt;/code&gt; 에&lt;/a&gt; 값을 캐스트합니다 .</target>
        </trans-unit>
        <trans-unit id="301f84b74fc20491f743cd765b9febdae2256dd4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;new_data&lt;/code&gt; is &lt;code&gt;data&lt;/code&gt; after updating the value of &lt;code&gt;key&lt;/code&gt; with &lt;code&gt;update_value&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="071b5d9e60612b566cae9b30348f283cff64086a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;nil&lt;/code&gt; - meaning there is no body</source>
          <target state="translated">&lt;code&gt;nil&lt;/code&gt; - 몸이 없다는 의미</target>
        </trans-unit>
        <trans-unit id="7b257868b5b9b8cea561cf9f4b32865bee4efdd0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;nil&lt;/code&gt; - meaning there is no body;</source>
          <target state="translated">&lt;code&gt;nil&lt;/code&gt; - 몸이 없음을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="ee8c2088dd46a5d35247fd24c0dc0bd6022b5a49" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;nil&lt;/code&gt; comparison</source>
          <target state="translated">&lt;code&gt;nil&lt;/code&gt; 비교</target>
        </trans-unit>
        <trans-unit id="cc683e64d5f1778f0dbc56cc4b9ca496abe8bff8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;nil&lt;/code&gt; comparison in filters, such as where and having, is forbidden and it will raise an error:</source>
          <target state="translated">&lt;code&gt;nil&lt;/code&gt; 위치 및 위치와 같은 필터의 nil 비교는 금지되며 오류가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="71fa2cf56455786b265a7233aef687e50babc74b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;node&lt;/code&gt; - The name of the node to broadcast the message on</source>
          <target state="translated">&lt;code&gt;node&lt;/code&gt; - 메시지를 브로드 캐스트 할 노드의 이름</target>
        </trans-unit>
        <trans-unit id="b73bbef6c9ffd1b91b3deb04a55da27fe4ecd4a1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;on_delete&lt;/code&gt; - The action taken on associations when schema is deleted</source>
          <target state="translated">&lt;code&gt;on_delete&lt;/code&gt; - 스키마가 삭제 될 때 연관에 대해 수행되는 조치</target>
        </trans-unit>
        <trans-unit id="923388859240c359e51473bac2954f8deb1180cd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;on_replace&lt;/code&gt; - The action taken on associations when schema is replaced</source>
          <target state="translated">&lt;code&gt;on_replace&lt;/code&gt; - 스키마 교체시 연관에 대해 수행되는 조치</target>
        </trans-unit>
        <trans-unit id="c61e57c28cd8a177ef5ec74fa6da524fb7e6252d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;options&lt;/code&gt; are expected to be an enumerable which will be used to generate each respective &lt;code&gt;option&lt;/code&gt;. The enumerable may have:</source>
          <target state="translated">&lt;code&gt;options&lt;/code&gt; 은 각각의 &lt;code&gt;option&lt;/code&gt; 을 생성하는 데 사용될 열거 가능한 것으로 예상됩니다 . 열거 형은 다음을 가질 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="85a80a03019e5358fdaba91b26dbe5cc34797b1c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;opts&lt;/code&gt; - The optional list of options, see below</source>
          <target state="translated">&lt;code&gt;opts&lt;/code&gt; - 옵션 옵션 목록 (아래 참조)</target>
        </trans-unit>
        <trans-unit id="127c528cc267bb9f764ed45f5d305d3765aa7530" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;opts&lt;/code&gt; - The optional list of options. See below.</source>
          <target state="translated">&lt;code&gt;opts&lt;/code&gt; - 옵션 옵션 목록. 아래를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="4ae92590e66d6da2ffacaab3f46c3815c5a0a917" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;opts&lt;/code&gt; - The optional list of options. Supported options only include &lt;code&gt;:link&lt;/code&gt; to link the subscriber to local</source>
          <target state="translated">&lt;code&gt;opts&lt;/code&gt; - 옵션 옵션 목록. 지원되는 옵션에는 &lt;code&gt;:link&lt;/code&gt; 포함됩니다 : 가입자와 로컬을 연결하는 링크</target>
        </trans-unit>
        <trans-unit id="f89598295ec5406306e8e4e687fc49c58df5335e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;or_where&lt;/code&gt; also accepts a keyword list where each key is a field to be compared with the given value. Each key-value pair will be combined using &lt;code&gt;AND&lt;/code&gt;, exactly as in &lt;code&gt;where&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;or_where&lt;/code&gt; 는 또한 각 키가 지정된 값과 비교할 필드 인 키워드 목록을 허용합니다. 각 키 - 값 쌍을 사용하여 결합 될 &lt;code&gt;AND&lt;/code&gt; 정확히 같이 &lt;code&gt;where&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fe0427ecfac7944aecab028a79f8e4a7d29bde93" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;order_by&lt;/code&gt; also accepts a list of atoms where each atom refers to a field in source or a keyword list where the direction is given as key and the field to order as value.</source>
          <target state="translated">&lt;code&gt;order_by&lt;/code&gt; 는 또한 각 원자가 소스의 필드를 가리키는 원자 목록 또는 방향이 키로 제공되고 키워드로 필드가 값으로 지정된 키워드 목록을 허용합니다.</target>
        </trans-unit>
        <trans-unit id="d3da5895b3011962cca4dbc711f49b48d9c3e8b6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;order_by&lt;/code&gt; may be invoked or listed in a query many times. New expressions are always appended to the previous ones.</source>
          <target state="translated">&lt;code&gt;order_by&lt;/code&gt; 는 여러 번 호출되거나 호출 될 수 있습니다. 새로운 표현은 항상 이전 표현에 추가됩니다.</target>
        </trans-unit>
        <trans-unit id="2deb7e032d83f08bd7758501f0932a6aa9918387" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;otp_app&lt;/code&gt; - The otp app running the endpoint, for example &lt;code&gt;:my_app&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;otp_app&lt;/code&gt; - 엔드 포인트를 실행하는 otp 앱 (예 &lt;code&gt;:my_app&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="12fb980e7f3f48b6f24141c40027c59c1d0184e2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;output_path&lt;/code&gt; - The path where the compiled/compressed files will be saved</source>
          <target state="translated">&lt;code&gt;output_path&lt;/code&gt; - 컴파일 / 압축 파일이 저장 될 경로</target>
        </trans-unit>
        <trans-unit id="68edc15d932ff45243dead20fabfe1070fcdf0bb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;owner&lt;/code&gt; - The schema where the association was defined</source>
          <target state="translated">&lt;code&gt;owner&lt;/code&gt; - 연관이 정의 된 스키마</target>
        </trans-unit>
        <trans-unit id="901d6a0f8edb0eb1c7c9bedf21edaf1d45c558f8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;owner&lt;/code&gt; - the Elixir process that owns the connection</source>
          <target state="translated">&lt;code&gt;owner&lt;/code&gt; - 연결을 소유하고있는 비약 과정</target>
        </trans-unit>
        <trans-unit id="90512376c1abfde667c0a6f445cf21b920c60e38" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;owner_key&lt;/code&gt; - The key on the &lt;code&gt;owner&lt;/code&gt; schema used for the association</source>
          <target state="translated">&lt;code&gt;owner_key&lt;/code&gt; - 연관에 사용되는 &lt;code&gt;owner&lt;/code&gt; 스키마 의 키</target>
        </trans-unit>
        <trans-unit id="0c9bfe1f54ef877ded2b8eead583711db874095f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;params&lt;/code&gt; - The parameters as given on changeset creation</source>
          <target state="translated">&lt;code&gt;params&lt;/code&gt; - 변경 세트 작성시 제공되는 매개 변수</target>
        </trans-unit>
        <trans-unit id="36f0ddf7ae31b39a6199cc3eab0b4eeab1477d7f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;params&lt;/code&gt; - params are merged (not deep-merged) giving precedence to the params of &lt;code&gt;changeset2&lt;/code&gt; in case of a conflict. If both changesets have their &lt;code&gt;:params&lt;/code&gt; fields set to &lt;code&gt;nil&lt;/code&gt;, the resulting changeset will have its params set to &lt;code&gt;nil&lt;/code&gt; too.</source>
          <target state="translated">&lt;code&gt;params&lt;/code&gt; - 충돌이 발생할 경우 매개 변수가 병합되어 (깊게 병합되지 않은) &lt;code&gt;changeset2&lt;/code&gt; 의 매개 변수보다 우선합니다 . 두 변경 세트 의 &lt;code&gt;:params&lt;/code&gt; 필드가 &lt;code&gt;nil&lt;/code&gt; 로 설정 되면 결과 변경 세트의 매개 변수 도 &lt;code&gt;nil&lt;/code&gt; 로 설정됩니다 .</target>
        </trans-unit>
        <trans-unit id="0b8c4501335fa225540f5cac4229b077861a1d11" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;params&lt;/code&gt; - the request params, the result of merging the &lt;code&gt;:body_params&lt;/code&gt; and &lt;code&gt;:query_params&lt;/code&gt; with &lt;code&gt;:path_params&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;params&lt;/code&gt; - 요청 PARAMS의 병합의 결과 &lt;code&gt;:body_params&lt;/code&gt; 및 &lt;code&gt;:query_params&lt;/code&gt; 로 &lt;code&gt;:path_params&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b29b71eb92ce43b45fbe014e176fdd74366bad17" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;params&lt;/code&gt;, the content-type parameters (e.g., &lt;code&gt;%{&quot;foo&quot; =&amp;gt; &quot;bar&quot;}&lt;/code&gt; for the &lt;code&gt;&quot;text/plain; foo=bar&quot;&lt;/code&gt; content-type)</source>
          <target state="translated">&lt;code&gt;params&lt;/code&gt; , 콘텐츠 형식 매개 변수 (예를 들어, &lt;code&gt;%{&quot;foo&quot; =&amp;gt; &quot;bar&quot;}&lt;/code&gt; 에 대한 &lt;code&gt;&quot;text/plain; foo=bar&quot;&lt;/code&gt; 콘텐츠 유형)</target>
        </trans-unit>
        <trans-unit id="3cb54fa84580a04ac3087492a8f37a5807040416" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;path_info&lt;/code&gt; - the path split into segments, example: &lt;code&gt;[&quot;hello&quot;, &quot;world&quot;]&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;path_info&lt;/code&gt; - 세그먼트로 분할 된 경로, 예 : &lt;code&gt;[&quot;hello&quot;, &quot;world&quot;]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8cee62762965ac6c4625c3e275f4efb6eadb01d8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;path_params&lt;/code&gt; - the request path params, populated by routers such as &lt;a href=&quot;plug.router&quot;&gt;&lt;code&gt;Plug.Router&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;path_params&lt;/code&gt; - 요청 경로 매개 변수. &lt;a href=&quot;plug.router&quot;&gt; &lt;code&gt;Plug.Router&lt;/code&gt; &lt;/a&gt; 와 같은 라우터로 채워짐</target>
        </trans-unit>
        <trans-unit id="1223e490ecfc7361507926c307a8089c528e37a9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;payload&lt;/code&gt; - The message payload</source>
          <target state="translated">&lt;code&gt;payload&lt;/code&gt; -메시지 페이로드</target>
        </trans-unit>
        <trans-unit id="2933a2b21e8195530e82cab1b95856032107cd6d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;payload&lt;/code&gt; - The reply payload</source>
          <target state="translated">&lt;code&gt;payload&lt;/code&gt; -응답 페이로드</target>
        </trans-unit>
        <trans-unit id="d114dfeb57999b3181c1ba3d704b9dbb5aaba20f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;peer&lt;/code&gt; - the actual TCP peer that connected, example: &lt;code&gt;{{127, 0, 0, 1}, 12345}&lt;/code&gt;. Often this is not the actual IP and port of the client, but rather of a load-balancer or request-router.</source>
          <target state="translated">&lt;code&gt;peer&lt;/code&gt; - 접속하는 실제 TCP 피어 예 : &lt;code&gt;{{127, 0, 0, 1}, 12345}&lt;/code&gt; . 종종 이것은 클라이언트의 실제 IP 및 포트가 아니라로드 밸런서 또는 요청 라우터입니다.</target>
        </trans-unit>
        <trans-unit id="aeafb991ec912a189e0a0ffc11b88e8bd6c91af9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;permdown_period&lt;/code&gt; - The interval in milliseconds to flag a replica as permanently down, and discard its state. Note: This must be at least greater than the &lt;code&gt;down_period&lt;/code&gt;. Default &lt;code&gt;1_200_000&lt;/code&gt; (20 minutes)</source>
          <target state="translated">&lt;code&gt;permdown_period&lt;/code&gt; - 복제본을 영구적으로 중단 된 것으로 플래그 지정하고 해당 상태를 버리는 간격 (밀리 초)입니다. 참고 : 최소한 &lt;code&gt;down_period&lt;/code&gt; 보다 커야합니다 . 기본 &lt;code&gt;1_200_000&lt;/code&gt; (20 분)</target>
        </trans-unit>
        <trans-unit id="5e2c9759cd69952e44c050ca670bb66efc3ea2da" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;phoenix_html.js&lt;/code&gt; does trigger a custom event &lt;code&gt;phoenix.link.click&lt;/code&gt; on the clicked DOM element when a click happened. This allows you to intercept the event on it&amp;rsquo;s way bubbling up to &lt;code&gt;window&lt;/code&gt; and do your own custom logic to enhance or replace how the &lt;code&gt;data-confirm&lt;/code&gt; attribute is handled.</source>
          <target state="translated">&lt;code&gt;phoenix_html.js&lt;/code&gt; 는 클릭이 발생하면 클릭 한 DOM 요소에서 사용자 정의 이벤트 &lt;code&gt;phoenix.link.click&lt;/code&gt; 을 트리거합니다 . 이를 통해 이벤트를 &lt;code&gt;window&lt;/code&gt; 까지 버블 링 하고 &lt;code&gt;data-confirm&lt;/code&gt; 속성이 처리되는 방식을 향상 시키거나 대체하기위한 사용자 지정 논리를 수행 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="5fc052edab4778366aac1a8c1777d16fd4fa1606" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pid&lt;/code&gt; - The Pid being tracked</source>
          <target state="translated">&lt;code&gt;pid&lt;/code&gt; - PID는 추적 중</target>
        </trans-unit>
        <trans-unit id="71e9584b12c52b8df2b4881e4ff2e2ed55a1cde3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pid&lt;/code&gt; - The Pid to track</source>
          <target state="translated">&lt;code&gt;pid&lt;/code&gt; - PID는 추적</target>
        </trans-unit>
        <trans-unit id="c090d4cd50b9fad51b3912b2fcc9a9ee21ce65cd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pid&lt;/code&gt; - The Pid to untrack</source>
          <target state="translated">&lt;code&gt;pid&lt;/code&gt; - untrack에 PID를</target>
        </trans-unit>
        <trans-unit id="9608880e65f853fe83ad37569b04353c3f3d0a08" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pid&lt;/code&gt; - The subscriber pid</source>
          <target state="translated">&lt;code&gt;pid&lt;/code&gt; - 구독자 pid</target>
        </trans-unit>
        <trans-unit id="8e03e5969b840a9d6cc0769b7c9d98e82792440c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;plug/2&lt;/code&gt; in controllers supports guards, allowing a developer to configure a plug to only run in some particular action:</source>
          <target state="translated">&lt;code&gt;plug/2&lt;/code&gt; 컨트롤러의 플러그 / 2 는 가드를 지원하여 개발자가 특정 작업에서만 플러그가 실행되도록 구성 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1e1b930a5728103fb2750c42096186fa075ef60a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pool_opts&lt;/code&gt; - The list of options used to construct the shard pool</source>
          <target state="translated">&lt;code&gt;pool_opts&lt;/code&gt; - 샤드 풀을 구성하는 데 사용되는 옵션 목록</target>
        </trans-unit>
        <trans-unit id="0d6e683099195f6ef8b283b6de0568c9060a1743" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pool_size&lt;/code&gt; - The size of the pool</source>
          <target state="translated">&lt;code&gt;pool_size&lt;/code&gt; - 풀의 크기</target>
        </trans-unit>
        <trans-unit id="c14c92366576b23bc218cbaefd053999dbcbf2a6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;port&lt;/code&gt; - the requested port as an integer, example: &lt;code&gt;80&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;port&lt;/code&gt; - 요청 된 포트를 정수로 표시합니다 (예 : &lt;code&gt;80&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="1619e19e8a919eba5757593d3f3ea0464a6ea0a2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;private&lt;/code&gt; - shared library data as a map</source>
          <target state="translated">&lt;code&gt;private&lt;/code&gt; -공유 라이브러리 데이터를 맵으로</target>
        </trans-unit>
        <trans-unit id="5638e2e4c33a393548e5181a434030d0bec9df77" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pubsub_server&lt;/code&gt; - The registered name of the socket&amp;rsquo;s pubsub server</source>
          <target state="translated">&lt;code&gt;pubsub_server&lt;/code&gt; - 소켓의 pubsub 서버의 등록 된 이름</target>
        </trans-unit>
        <trans-unit id="6ba478ff86a260e4f4a3986bd24b579a4a76140f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pubsub_server&lt;/code&gt; - The registered server name</source>
          <target state="translated">&lt;code&gt;pubsub_server&lt;/code&gt; - 등록 된 서버 이름</target>
        </trans-unit>
        <trans-unit id="e5b8312e520039e95e40ce565fc676c1dd6888a9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pubsub_server&lt;/code&gt; - The registered server name or pid</source>
          <target state="translated">&lt;code&gt;pubsub_server&lt;/code&gt; - 등록 된 서버 이름 또는 pid</target>
        </trans-unit>
        <trans-unit id="da15f0e5a718ccd0e3cdfc6dc7d068b211ab29a3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pull&lt;/code&gt; - pulls (removes) the given value from the array field</source>
          <target state="translated">&lt;code&gt;pull&lt;/code&gt; - 배열 필드에서 주어진 값을 가져옵니다 (제거)</target>
        </trans-unit>
        <trans-unit id="a629837f9a57aeca3ef555b09707eb8a125f0e34" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;push&lt;/code&gt; - pushes (appends) the given value to the end of the array field</source>
          <target state="translated">&lt;code&gt;push&lt;/code&gt; - 푸시 (추가)에 지정된 값을 배열 필드의 끝까지</target>
        </trans-unit>
        <trans-unit id="09ee3eefa1290ef7ade7849d1d1b89bc1caa9806" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;query_params&lt;/code&gt; - the request query params, populated through &lt;a href=&quot;#fetch_query_params/2&quot;&gt;&lt;code&gt;fetch_query_params/2&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;query_params&lt;/code&gt; - 요청 조회 매개 변수, &lt;a href=&quot;#fetch_query_params/2&quot;&gt; &lt;code&gt;fetch_query_params/2&lt;/code&gt; 를&lt;/a&gt; 통해 채워짐</target>
        </trans-unit>
        <trans-unit id="9519c1e0b9c58949cef4772842762ba75e426893" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;query_string&lt;/code&gt; - the request query string as a binary, example: &lt;code&gt;&quot;foo=bar&quot;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;query_string&lt;/code&gt; - 요청 조회 문자열을 2 진으로 표시합니다 (예 : &lt;code&gt;&quot;foo=bar&quot;&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="e30e87edb2f79ee96ef8e4bc145a697cb7884a77" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;queryable&lt;/code&gt; - The real query to use for querying association</source>
          <target state="translated">&lt;code&gt;queryable&lt;/code&gt; - 조회 연관에 사용할 실제 조회</target>
        </trans-unit>
        <trans-unit id="101a37bd418688184ba7c148e37dcab0e247c271" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ref&lt;/code&gt; - The latest ref sent by the client</source>
          <target state="translated">&lt;code&gt;ref&lt;/code&gt; - 클라이언트가 보낸 최신 참조</target>
        </trans-unit>
        <trans-unit id="0d768cd7ea6b9ee7c2188696db754b59cc3bbd21" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ref&lt;/code&gt; - The unique string ref</source>
          <target state="translated">&lt;code&gt;ref&lt;/code&gt; - 고유 한 문자열 ref</target>
        </trans-unit>
        <trans-unit id="efadf3dccf2973d05a0309e7bc7fbef284eaf334" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;related&lt;/code&gt; - The schema that is associated</source>
          <target state="translated">&lt;code&gt;related&lt;/code&gt; - 연관된 스키마</target>
        </trans-unit>
        <trans-unit id="a44d2751224113b596d5778ef410d8589b2d6dd2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;related_key&lt;/code&gt; - The key on the &lt;code&gt;related&lt;/code&gt; schema used for the association</source>
          <target state="translated">&lt;code&gt;related_key&lt;/code&gt; - 연관에 사용되는 &lt;code&gt;related&lt;/code&gt; 스키마 의 키</target>
        </trans-unit>
        <trans-unit id="21aa5e4e1c5e0396872c7f763922a2a86c66a71c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;relationship&lt;/code&gt; - The relationship to the specified schema, default &lt;code&gt;:child&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;relationship&lt;/code&gt; 지정된 스키마와의 관계, 기본값 &lt;code&gt;:child&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d24603a5755dc5590959ca98e117b0fdb5753358" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;relationship&lt;/code&gt; - The relationship to the specified schema, default &lt;code&gt;:parent&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;relationship&lt;/code&gt; 지정된 스키마와의 관계, 기본값 &lt;code&gt;:parent&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d8198e35a26fb1610134ff582a4d568c1a3ee0aa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;relationship&lt;/code&gt; - The relationship to the specified schema, default is &lt;code&gt;:child&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;relationship&lt;/code&gt; 지정된 스키마와의 관계. 기본값은 &lt;code&gt;:child&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="279bbb4744ce1c8638d5e66399287c26b08925bd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;remote_ip&lt;/code&gt; - the IP of the client, example: &lt;code&gt;{151, 236, 219, 228}&lt;/code&gt;. This field is meant to be overwritten by plugs that understand e.g. the &lt;code&gt;X-Forwarded-For&lt;/code&gt; header or HAProxy&amp;rsquo;s PROXY protocol. It defaults to peer&amp;rsquo;s IP</source>
          <target state="translated">&lt;code&gt;remote_ip&lt;/code&gt; - 클라이언트의 IP 예 : &lt;code&gt;{151, 236, 219, 228}&lt;/code&gt; . 이 필드는 예를 들어 &lt;code&gt;X-Forwarded-For&lt;/code&gt; 헤더 또는 HAProxy의 PROXY 프로토콜 을 이해하는 플러그로 덮어 써야합니다. 기본적으로 피어의 IP</target>
        </trans-unit>
        <trans-unit id="4de8b9c8e0d2f8c562549e4e7f2c9bc3c5a6ac7d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;remote_ip&lt;/code&gt; - the IP of the client, example: &lt;code&gt;{151, 236, 219, 228}&lt;/code&gt;. This field is meant to be overwritten by plugs that understand e.g. the &lt;code&gt;X-Forwarded-For&lt;/code&gt; header or HAProxy&amp;rsquo;s PROXY protocol. It defaults to peer&amp;rsquo;s IP.</source>
          <target state="translated">&lt;code&gt;remote_ip&lt;/code&gt; - 클라이언트의 IP 예 : &lt;code&gt;{151, 236, 219, 228}&lt;/code&gt; . 이 필드는 예를 들어 &lt;code&gt;X-Forwarded-For&lt;/code&gt; 헤더 또는 HAProxy의 PROXY 프로토콜 을 이해하는 플러그로 덮어 써야합니다. 피어의 IP가 기본값입니다.</target>
        </trans-unit>
        <trans-unit id="0ca491a5efb3da72b88c1921230f0a8746f71dc7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;repo&lt;/code&gt; - The repository applying the changeset (only set after a Repo function is called)</source>
          <target state="translated">&lt;code&gt;repo&lt;/code&gt; - 변경 세트를 적용하는 저장소 (Repo 함수가 호출 된 후에 만 ​​설정 됨)</target>
        </trans-unit>
        <trans-unit id="e4763165fcbf61ace38314ad898960d8ea1af421" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;repo_opts&lt;/code&gt; - A keyword list of options given to the underlying repository operation</source>
          <target state="translated">&lt;code&gt;repo_opts&lt;/code&gt; - 기본 리포지토리 작업에 제공된 옵션의 키워드 목록</target>
        </trans-unit>
        <trans-unit id="3d51ec606413cad00064814387679d26c89e472a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;req_cookies&lt;/code&gt; - the request cookies (without the response ones)</source>
          <target state="translated">&lt;code&gt;req_cookies&lt;/code&gt; - 요청 쿠키 (응답 쿠키 제외)</target>
        </trans-unit>
        <trans-unit id="24588e6a6d03b7a536204372ff6992859cb63f43" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;req_headers&lt;/code&gt; - the request headers as a list, example: &lt;code&gt;[{&quot;content-type&quot;, &quot;text/plain&quot;}]&lt;/code&gt;. Note all headers will be downcased</source>
          <target state="translated">&lt;code&gt;req_headers&lt;/code&gt; - 요청 헤더 목록 (예 : &lt;code&gt;[{&quot;content-type&quot;, &quot;text/plain&quot;}]&lt;/code&gt; . 모든 헤더는 소문자로 표시됩니다</target>
        </trans-unit>
        <trans-unit id="e9dcff9717db7374944b01dee18a077c6626c196" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;req_headers&lt;/code&gt; - the request headers as a list, example: &lt;code&gt;[{&quot;content-type&quot;, &quot;text/plain&quot;}]&lt;/code&gt;. Note all headers will be downcased.</source>
          <target state="translated">&lt;code&gt;req_headers&lt;/code&gt; - 요청 헤더 목록 (예 : &lt;code&gt;[{&quot;content-type&quot;, &quot;text/plain&quot;}]&lt;/code&gt; . 모든 헤더는 소문자로 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="a05778542387a94ac620874443a90c1b1b661817" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;request_path&lt;/code&gt; - the requested path, example: &lt;code&gt;/trailing/and//double//slashes/&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;request_path&lt;/code&gt; - 요청 된 경로, 예 : &lt;code&gt;/trailing/and//double//slashes/&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="52dfa603921109f668d5806807de9b5f0ebc41b1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;required&lt;/code&gt; - All required fields as a list of atoms</source>
          <target state="translated">&lt;code&gt;required&lt;/code&gt; -원자 목록으로 모든 필수 필드</target>
        </trans-unit>
        <trans-unit id="0dd7d96519c5250b3619288d0042ef4be36b771b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;required&lt;/code&gt; - required fields are merged; all the fields that appear in the required list of both changesets are moved to the required list of the resulting changeset.</source>
          <target state="translated">&lt;code&gt;required&lt;/code&gt; -필수 필드가 병합됩니다. 두 변경 세트의 필수 목록에 나타나는 모든 필드가 결과 변경 세트의 필수 목록으로 이동됩니다.</target>
        </trans-unit>
        <trans-unit id="4ecc2849315302f2f8781193df1f4160a26ba41b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;resp_body&lt;/code&gt; - the response body, by default is an empty string. It is set to nil after the response is sent, except for test connections.</source>
          <target state="translated">&lt;code&gt;resp_body&lt;/code&gt; - 응답 본문은 기본적으로 빈 문자열입니다. 테스트 연결을 제외하고 응답이 전송 된 후 nil로 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="378c18fb5b006d3619383e311eee70821aa6bc49" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;resp_charset&lt;/code&gt; - the response charset, defaults to &amp;ldquo;utf-8&amp;rdquo;</source>
          <target state="translated">&lt;code&gt;resp_charset&lt;/code&gt; - 응답 문자셋, 기본값은 &quot;utf-8&quot;</target>
        </trans-unit>
        <trans-unit id="33c05281c7d9417a2d6c473d0d303bb3b857bab9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;resp_cookies&lt;/code&gt; - the response cookies with their name and options</source>
          <target state="translated">&lt;code&gt;resp_cookies&lt;/code&gt; - 이름과 옵션이있는 응답 쿠키</target>
        </trans-unit>
        <trans-unit id="bdbe3bcda2074df88c297579fe6592ff06d9a359" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;resp_headers&lt;/code&gt; - the response headers as a list of tuples, by default &lt;code&gt;cache-control&lt;/code&gt; is set to &lt;code&gt;&quot;max-age=0, private, must-revalidate&quot;&lt;/code&gt;. Note, response headers are expected to have lower-case keys.</source>
          <target state="translated">&lt;code&gt;resp_headers&lt;/code&gt; - 기본적으로 &lt;code&gt;cache-control&lt;/code&gt; 는 튜플 목록으로서 응답 헤더 가 &lt;code&gt;&quot;max-age=0, private, must-revalidate&quot;&lt;/code&gt; 됩니다. 응답 헤더에는 소문자 키가 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="66d3cbf3d421d453d7089fda11411d601070c4ce" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;resp_headers&lt;/code&gt; - the response headers as a list of tuples, by default &lt;code&gt;cache-control&lt;/code&gt; is set to &lt;code&gt;&quot;max-age=0, private, must-revalidate&quot;&lt;/code&gt;. Note, response headers are expected to have lowercase keys.</source>
          <target state="translated">&lt;code&gt;resp_headers&lt;/code&gt; - 기본적으로 &lt;code&gt;cache-control&lt;/code&gt; 는 튜플 목록으로서 응답 헤더 가 &lt;code&gt;&quot;max-age=0, private, must-revalidate&quot;&lt;/code&gt; 됩니다. 응답 헤더에는 소문자 키가 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="22c688d476534e17678a3cbf023f13d36df40ede" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;result_of_before_callback&lt;/code&gt; is the return value of the &amp;ldquo;before&amp;rdquo; clause of the same &lt;code&gt;event_callback&lt;/code&gt;. This is a means of passing data from the &amp;ldquo;before&amp;rdquo; clause to the &amp;ldquo;after&amp;rdquo; clause when instrumenting.</source>
          <target state="translated">&lt;code&gt;result_of_before_callback&lt;/code&gt; 은 동일한 &lt;code&gt;event_callback&lt;/code&gt; 의&amp;ldquo;before&amp;rdquo;절의 반환 값입니다 . 계측 할 때 &quot;이전&quot;절에서 &quot;이후&quot;절로 데이터를 전달하는 수단입니다.</target>
        </trans-unit>
        <trans-unit id="103b1466ccea7577fc2a4b9b0c2aa6b7c282417e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;runtime_metadata&lt;/code&gt; is a map of runtime data that the instrumentation passes to the callbacks. This can be used for any purposes: for example, when instrumenting the rendering of a view, the name of the view could be passed in these runtime data so that instrumenters know which view is being rendered (&lt;code&gt;instrument(:view_render, %{view: &quot;index.html&quot;}, fn
...)&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;runtime_metadata&lt;/code&gt; 는 계측이 콜백에 전달하는 런타임 데이터의 맵입니다. 예를 들어, 뷰의 렌더링을 계측 할 때 계측기에서 어떤 뷰가 렌더링되는지 알 수 있도록 뷰 이름을 이러한 런타임 데이터로 전달할 수 있습니다 ( &lt;code&gt;instrument(:view_render, %{view: &quot;index.html&quot;}, fn ...)&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="246a6e125a6cf67c0c1df577f1bce26aa4280292" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;runtime_metadata&lt;/code&gt; may be omitted and defaults to &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;runtime_metadata&lt;/code&gt; 는 생략 될 수 있으며 기본값은 &lt;code&gt;nil&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="36b7f3342f55b56b6b713d16862546295104a9d4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;scheme&lt;/code&gt; - the request scheme as an atom, example: &lt;code&gt;:http&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;scheme&lt;/code&gt; -원자로서의 요청 체계, 예 : &lt;code&gt;:http&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="980eef85fef584aef6bf3226e97f3b0808c7379f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;script_name&lt;/code&gt; - the initial portion of the URL&amp;rsquo;s path that corresponds to the application routing, as segments, example: &lt;code&gt;[&quot;sub&quot;,&quot;app&quot;]&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;script_name&lt;/code&gt; - 세그먼트로 애플리케이션 라우팅에 해당하는 URL 경로의 초기 부분 (예 : &lt;code&gt;[&quot;sub&quot;,&quot;app&quot;]&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="cab0fd37e630576ecdaeed217e5a0c392005a958" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;script_name&lt;/code&gt; - the initial portion of the URL&amp;rsquo;s path that corresponds to the application routing, as segments, example: [&amp;ldquo;sub&amp;rdquo;,&amp;rdquo;app&amp;rdquo;].</source>
          <target state="translated">&lt;code&gt;script_name&lt;/code&gt; - 응용 프로그램 라우팅에 해당하는 URL 경로의 초기 부분입니다 (예 : [&amp;ldquo;sub&amp;rdquo;,&amp;rdquo;app&amp;rdquo;]).</target>
        </trans-unit>
        <trans-unit id="cd76c23ddceb864d0c5a514fe4c77eddb9a07c4f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;secret_key_base&lt;/code&gt; - a secret key used to verify and encrypt cookies. the field must be set manually whenever one of those features are used. This data must be kept in the connection and never used directly, always use &lt;a href=&quot;https://hexdocs.pm/plug_crypto/1.0.0/Plug.Crypto.KeyGenerator.html#generate/3&quot;&gt;&lt;code&gt;Plug.Crypto.KeyGenerator.generate/3&lt;/code&gt;&lt;/a&gt; to derive keys from it</source>
          <target state="translated">&lt;code&gt;secret_key_base&lt;/code&gt; - 쿠키를 확인하고 암호화하는 데 사용되는 비밀 키. 해당 기능 중 하나를 사용할 때마다 필드를 수동으로 설정해야합니다. 이 데이터는 연결 상태로 유지해야하며 직접 사용 &lt;a href=&quot;https://hexdocs.pm/plug_crypto/1.0.0/Plug.Crypto.KeyGenerator.html#generate/3&quot;&gt; &lt;code&gt;Plug.Crypto.KeyGenerator.generate/3&lt;/code&gt; &lt;/a&gt; 항상 Plug.Crypto.KeyGenerator.generate / 3 를 사용하여 키를 파생 시키십시오.</target>
        </trans-unit>
        <trans-unit id="e1253f664065a2d62b14b6ef67f605e6b39aaddd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;secret_key_base&lt;/code&gt; - a secret key used to verify and encrypt cookies. the field must be set manually whenever one of those features are used. This data must be kept in the connection and never used directly, always use &lt;a href=&quot;plug.crypto.keygenerator#generate/3&quot;&gt;&lt;code&gt;Plug.Crypto.KeyGenerator.generate/3&lt;/code&gt;&lt;/a&gt; to derive keys from it</source>
          <target state="translated">&lt;code&gt;secret_key_base&lt;/code&gt; - 쿠키를 확인하고 암호화하는 데 사용되는 비밀 키. 해당 기능 중 하나를 사용할 때마다 필드를 수동으로 설정해야합니다. 이 데이터는 연결 상태로 유지해야하며 직접 사용 &lt;a href=&quot;plug.crypto.keygenerator#generate/3&quot;&gt; &lt;code&gt;Plug.Crypto.KeyGenerator.generate/3&lt;/code&gt; &lt;/a&gt; 항상 Plug.Crypto.KeyGenerator.generate / 3 를 사용하여 키를 파생 시키십시오.</target>
        </trans-unit>
        <trans-unit id="f29f5db6bf5d13386e17da68d405842a111c081d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;select&lt;/code&gt; also accepts a list of atoms where each atom refers to a field in the source to be selected.</source>
          <target state="translated">&lt;code&gt;select&lt;/code&gt; 는 또한 각 원자가 선택할 소스의 필드를 나타내는 원자 목록을 허용합니다.</target>
        </trans-unit>
        <trans-unit id="296aa6876fe50d49e496600ad420f7a74bc5f953" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;serializer&lt;/code&gt; - The serializer for socket messages, for example: &lt;code&gt;Phoenix.Transports.WebSocketSerializer&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;serializer&lt;/code&gt; - 소켓 메시지 용 serializer (예 : &lt;code&gt;Phoenix.Transports.WebSocketSerializer&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="f182d3c71f466a802a29f20fd63a50cc07f0725a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;server&lt;/code&gt; - The Pid or registered server name and optional node to scope the broadcast, for example: &lt;code&gt;MyApp.PubSub&lt;/code&gt;, &lt;code&gt;{MyApp.PubSub, :a@node}&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;server&lt;/code&gt; -는 PID 또는 등록 된 서버 이름 및 범위, 예를 들어 방송에 대한 선택적 노드 : &lt;code&gt;MyApp.PubSub&lt;/code&gt; , &lt;code&gt;{MyApp.PubSub, :a@node}&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c6ba97119409938a372ed07abe79b4f2a78dc862" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;server&lt;/code&gt; - The Pid registered name of the server</source>
          <target state="translated">&lt;code&gt;server&lt;/code&gt; server- 서버 의 Pid 등록 이름</target>
        </trans-unit>
        <trans-unit id="8ba0c0aa20ef9eae031396a7362b2436588887b4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;server_name&lt;/code&gt; - The name to register the server under</source>
          <target state="translated">&lt;code&gt;server_name&lt;/code&gt; - 서버를 등록 할 이름</target>
        </trans-unit>
        <trans-unit id="3c518eea11ddca7b2d680df360f5d8403cda7a85" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;server_name&lt;/code&gt; - The registered name of the tracker server</source>
          <target state="translated">&lt;code&gt;server_name&lt;/code&gt; - 추적기 서버의 등록 된 이름</target>
        </trans-unit>
        <trans-unit id="468a0024f46153b84f2646395de16c5687b51120" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;server_opts&lt;/code&gt; - The list of options to pass to the tracker server</source>
          <target state="translated">&lt;code&gt;server_opts&lt;/code&gt; - 추적기 서버에 전달할 옵션 목록</target>
        </trans-unit>
        <trans-unit id="1c2caff887e3641f298e723dd4b4026ae8a72bbb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;set&lt;/code&gt; - sets the given field in the table to the given value</source>
          <target state="translated">&lt;code&gt;set&lt;/code&gt; - 테이블의 주어진 필드를 주어진 값으로 설정</target>
        </trans-unit>
        <trans-unit id="969589494be74cc19063eaeaf82923ad34fa3b86" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;shard&lt;/code&gt; - The shard, for example &lt;code&gt;1&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;shard&lt;/code&gt; -샤드 (예 : &lt;code&gt;1&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="9161cde7817a029486e4390329e091bf1151d940" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;start_args&lt;/code&gt; are the arguments passed to the application in the &lt;code&gt;:mod&lt;/code&gt; specification key (e.g., &lt;code&gt;mod: {MyApp, [:my_args]}&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e7dcff739bcad8d1857be2bedb467d433c4d61c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;start_type&lt;/code&gt; defines how the application is started:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35fa3a8f992225f09ede7699a77894f22bf1e585" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;state&lt;/code&gt; - the connection state</source>
          <target state="translated">&lt;code&gt;state&lt;/code&gt; - 연결 상태</target>
        </trans-unit>
        <trans-unit id="93d5d93af48ac493f86cb5c0f186995d526d56ee" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;status&lt;/code&gt; - The reply status as an atom</source>
          <target state="translated">&lt;code&gt;status&lt;/code&gt; - 아톰으로서의 회신 상태</target>
        </trans-unit>
        <trans-unit id="a653ee9b901321d4e0e464e5acafb89c9db427ee" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;status&lt;/code&gt; - the response status</source>
          <target state="translated">&lt;code&gt;status&lt;/code&gt; - 응답 상태</target>
        </trans-unit>
        <trans-unit id="eb525b4942d6766e450faa45994038bf3ca03dbd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;subscribe&lt;/code&gt; - subscribes the given pid to the given topic sends: &lt;code&gt;{:subscribe, pid, topic, opts}&lt;/code&gt; respond with: &lt;code&gt;:ok | {:error, reason} | {:perform, {m, f, a}}&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;subscribe&lt;/code&gt; - 주어진 pid를 주어진 주제에 전송합니다. &lt;code&gt;{:subscribe, pid, topic, opts}&lt;/code&gt; 응답 : &lt;code&gt;:ok | {:error, reason} | {:perform, {m, f, a}}&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="025234015f846a4668be839441d90c3e0c97f6f8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;subtype&lt;/code&gt;, the content-type subtype (e.g., &lt;code&gt;&quot;json&quot;&lt;/code&gt; for the &lt;code&gt;&quot;x-sample/json&quot;&lt;/code&gt; content-type)</source>
          <target state="translated">&lt;code&gt;subtype&lt;/code&gt; , 내용 유형의 하위 유형 (예를 들어, &lt;code&gt;&quot;json&quot;&lt;/code&gt; 에 대한 &lt;code&gt;&quot;x-sample/json&quot;&lt;/code&gt; 콘텐츠 유형)</target>
        </trans-unit>
        <trans-unit id="b1edaa577016afa1a9b706807612a7bc094252dc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;table_name&lt;/code&gt; - The name of the local table</source>
          <target state="translated">&lt;code&gt;table_name&lt;/code&gt; - 로컬 테이블의 이름</target>
        </trans-unit>
        <trans-unit id="24f5c9dcbba2baa8247f22c33896313396653b23" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;template&lt;/code&gt; - which may be an atom or a string. If an atom, like &lt;code&gt;:index&lt;/code&gt;, it will render a template with the same format as the one returned by &lt;a href=&quot;#get_format/1&quot;&gt;&lt;code&gt;get_format/1&lt;/code&gt;&lt;/a&gt;. For example, for an HTML request, it will render the &amp;ldquo;index.html&amp;rdquo; template. If the template is a string, it must contain the extension too, like &amp;ldquo;index.json&amp;rdquo;</source>
          <target state="translated">&lt;code&gt;template&lt;/code&gt; - 원자 또는 문자열 일 수 있습니다. &lt;code&gt;:index&lt;/code&gt; 와 같은 아톰 인 경우 &lt;a href=&quot;#get_format/1&quot;&gt; &lt;code&gt;get_format/1&lt;/code&gt; 이&lt;/a&gt; 반환 한 것과 같은 형식의 템플릿을 렌더링합니다 . 예를 들어 HTML 요청의 경우 &quot;index.html&quot;템플릿을 렌더링합니다. 템플릿이 문자열 인 경우 &quot;index.json&quot;과 같이 확장명도 포함해야합니다.</target>
        </trans-unit>
        <trans-unit id="40617c48abbb67b22a917287876283c98cda5471" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;terminate/2&lt;/code&gt;, however, won&amp;rsquo;t be invoked in case of errors nor in case of exits. This is the same behaviour as you find in Elixir abstractions like &lt;a href=&quot;https://hexdocs.pm/elixir/GenServer.html&quot;&gt;&lt;code&gt;GenServer&lt;/code&gt;&lt;/a&gt; and others. Typically speaking, if you want to clean something up, it is better to monitor your channel process and do the clean up from another process. Similar to GenServer, it would also be possible &lt;code&gt;:trap_exit&lt;/code&gt; to guarantee that &lt;code&gt;terminate/2&lt;/code&gt; is invoked. This practice is not encouraged though.</source>
          <target state="translated">&lt;code&gt;terminate/2&lt;/code&gt; 그러나 오류가 발생하거나 종료되는 경우 terminate / 2 가 호출되지 않습니다. 이는 &lt;a href=&quot;https://hexdocs.pm/elixir/GenServer.html&quot;&gt; &lt;code&gt;GenServer&lt;/code&gt; &lt;/a&gt; 및 기타와 같은 Elixir 추상화에서와 동일한 동작 입니다. 일반적으로 무언가를 정리하려면 채널 프로세스를 모니터링하고 다른 프로세스에서 정리하는 것이 좋습니다. GenServer와 유사하게, &lt;code&gt;terminate/2&lt;/code&gt; 가 호출 되도록 보장하는 &lt;code&gt;:trap_exit&lt;/code&gt; 도 가능합니다 . 그러나이 방법은 권장되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="9e855ced77c34f3098976240974358faddd93281" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;through&lt;/code&gt; - The through associations</source>
          <target state="translated">&lt;code&gt;through&lt;/code&gt; -협회를 통해</target>
        </trans-unit>
        <trans-unit id="03b0edaaf74d039e9dba4da8b7f2b59a45942944" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;time_diff&lt;/code&gt; is an integer representing the time it took to execute the instrumented function &lt;strong&gt;in native units&lt;/strong&gt;.</source>
          <target state="translated">&lt;code&gt;time_diff&lt;/code&gt; 는 계측 된 함수 &lt;strong&gt;를 기본 단위&lt;/strong&gt; 로 실행하는 데 걸린 시간을 나타내는 정수 입니다.</target>
        </trans-unit>
        <trans-unit id="1ee719ca0cf2a2f8c0cf5080f44ff4dbd99aeb9e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;topic&lt;/code&gt; - The &lt;a href=&quot;phoenix.pubsub&quot;&gt;&lt;code&gt;Phoenix.PubSub&lt;/code&gt;&lt;/a&gt; topic</source>
          <target state="translated">&lt;code&gt;topic&lt;/code&gt; - &lt;a href=&quot;phoenix.pubsub&quot;&gt; &lt;code&gt;Phoenix.PubSub&lt;/code&gt; 의&lt;/a&gt; 주제</target>
        </trans-unit>
        <trans-unit id="513bfa6e57effcfca4a3772c43a797cf30762ccc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;topic&lt;/code&gt; - The &lt;a href=&quot;phoenix.pubsub&quot;&gt;&lt;code&gt;Phoenix.PubSub&lt;/code&gt;&lt;/a&gt; topic for this presence</source>
          <target state="translated">&lt;code&gt;topic&lt;/code&gt; - 이 존재에 대한 &lt;a href=&quot;phoenix.pubsub&quot;&gt; &lt;code&gt;Phoenix.PubSub&lt;/code&gt; &lt;/a&gt; 주제</target>
        </trans-unit>
        <trans-unit id="b4e43962e773022e68cf2010c40617e7736b0193" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;topic&lt;/code&gt; - The &lt;a href=&quot;phoenix.pubsub&quot;&gt;&lt;code&gt;Phoenix.PubSub&lt;/code&gt;&lt;/a&gt; topic to untrack for this presence</source>
          <target state="translated">&lt;code&gt;topic&lt;/code&gt; - &lt;a href=&quot;phoenix.pubsub&quot;&gt; &lt;code&gt;Phoenix.PubSub&lt;/code&gt; 의&lt;/a&gt; 이 존재 untrack에 대한 주제</target>
        </trans-unit>
        <trans-unit id="f650123c92c7ad8edc76f65a3e935e24ebc774ef" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;topic&lt;/code&gt; - The &lt;a href=&quot;phoenix.pubsub&quot;&gt;&lt;code&gt;Phoenix.PubSub&lt;/code&gt;&lt;/a&gt; topic to update for this presence</source>
          <target state="translated">&lt;code&gt;topic&lt;/code&gt; - 이 존재를 위해 업데이트 할 &lt;a href=&quot;phoenix.pubsub&quot;&gt; &lt;code&gt;Phoenix.PubSub&lt;/code&gt; &lt;/a&gt; 주제</target>
        </trans-unit>
        <trans-unit id="b56ea91d6b7462453b3977d65c982fb652cd6ceb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;topic&lt;/code&gt; - The string topic or topic:subtopic pair namespace, for example &amp;ldquo;messages&amp;rdquo;, &amp;ldquo;messages:123&amp;rdquo;</source>
          <target state="translated">&lt;code&gt;topic&lt;/code&gt; - 문자열 주제 또는 topic : subtopic 쌍 네임 스페이스 (예 :&amp;ldquo;messages&amp;rdquo;,&amp;ldquo;messages : 123&amp;rdquo;)</target>
        </trans-unit>
        <trans-unit id="62ca51cf60a4e7f5b9da63e0397a88e8ad88609c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;topic&lt;/code&gt; - The string topic, for example &amp;ldquo;users:123&amp;rdquo;</source>
          <target state="translated">&lt;code&gt;topic&lt;/code&gt; - 문자열 주제 (예 : &quot;users : 123&quot;)</target>
        </trans-unit>
        <trans-unit id="e2064db7041ede42a88b29d1726530a1b5b8d6ff" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;topic&lt;/code&gt; - The string topic, for example &lt;code&gt;&quot;room:123&quot;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;topic&lt;/code&gt; - 문자열 주제 (예 &lt;code&gt;&quot;room:123&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="edf299c5dbeef14f8b8c536496bbd0431d856fc4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;topic&lt;/code&gt; - The topic to broadcast to, ie: &lt;code&gt;&quot;users:123&quot;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;topic&lt;/code&gt; - 브로드 캐스트 할 주제, 즉 &lt;code&gt;&quot;users:123&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="894ba3ea473520823628d4e2116154bf7205e0f3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;topic&lt;/code&gt; - The topic to subscribe to, for example: &lt;code&gt;&quot;users:123&quot;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;topic&lt;/code&gt; - 구독 할 주제 (예 : &lt;code&gt;&quot;users:123&quot;&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="f027e260bd6880e4c8d9c4ea1a35a185186f4f8e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;topic_pattern&lt;/code&gt; - The string pattern, for example &amp;ldquo;room:&lt;em&gt;&amp;ldquo;, &amp;ldquo;users:&lt;/em&gt;&amp;rdquo;, &amp;ldquo;system&amp;rdquo;</source>
          <target state="translated">&lt;code&gt;topic_pattern&lt;/code&gt; - 문자열 패턴 (예 : &lt;em&gt;&quot;&lt;/em&gt; room : &lt;em&gt;&quot;, &quot;users :&lt;/em&gt; &quot;, &quot;system&quot;)</target>
        </trans-unit>
        <trans-unit id="51127dc0e8ed50c2e4ac714b42eb9545ead7bc45" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;tracker&lt;/code&gt; - The name of the tracker handler module implementing the &lt;a href=&quot;phoenix.tracker#content&quot;&gt;&lt;code&gt;Phoenix.Tracker&lt;/code&gt;&lt;/a&gt; behaviour</source>
          <target state="translated">&lt;code&gt;tracker&lt;/code&gt; - &lt;a href=&quot;phoenix.tracker#content&quot;&gt; &lt;code&gt;Phoenix.Tracker&lt;/code&gt; &lt;/a&gt; 동작을 구현하는 추적기 핸들러 모듈의 이름</target>
        </trans-unit>
        <trans-unit id="77cebe9e072f836bf905c4ed2b9563d461835f10" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;tracker_opts&lt;/code&gt; - The list of options to pass to the tracker handler</source>
          <target state="translated">&lt;code&gt;tracker_opts&lt;/code&gt; - 추적기 핸들러에 전달할 옵션 목록</target>
        </trans-unit>
        <trans-unit id="fe9158957cb6b89c0989ca69bb67857bd1251d8f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;transport&lt;/code&gt; - The socket&amp;rsquo;s transport, for example: &lt;a href=&quot;phoenix.transports.websocket&quot;&gt;&lt;code&gt;Phoenix.Transports.WebSocket&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;transport&lt;/code&gt; - 소켓의 전송 (예 : &lt;a href=&quot;phoenix.transports.websocket&quot;&gt; &lt;code&gt;Phoenix.Transports.WebSocket&lt;/code&gt; )&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="52c7d5d6612d5c389b1ae03d18193b2b2c4a4a63" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;transport_name&lt;/code&gt; - The socket&amp;rsquo;s transport, for example: &lt;code&gt;:websocket&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;transport_name&lt;/code&gt; - 소켓의 전송 (예 : &lt;code&gt;:websocket&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="d4e0128be65ba382ba951e0aeb79f0f7de5fa4b3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;transport_pid&lt;/code&gt; - The pid of the socket&amp;rsquo;s transport process</source>
          <target state="translated">&lt;code&gt;transport_pid&lt;/code&gt; - 소켓의 전송 프로세스의 pid</target>
        </trans-unit>
        <trans-unit id="a4f127cc373d7b32f78f8038b43cccc790509f01" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;type&lt;/code&gt;, the content-type type (e.g., &lt;code&gt;&quot;x-sample&quot;&lt;/code&gt; for the &lt;code&gt;&quot;x-sample/json&quot;&lt;/code&gt; content-type)</source>
          <target state="translated">&lt;code&gt;type&lt;/code&gt; 콘텐츠 타입 타입 (예를 들면, &lt;code&gt;&quot;x-sample&quot;&lt;/code&gt; 위한 &lt;code&gt;&quot;x-sample/json&quot;&lt;/code&gt; 콘텐츠 - 타입)</target>
        </trans-unit>
        <trans-unit id="062d04ecaa276f6909e2313139f4ce94130c6e0b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;types&lt;/code&gt; - Cache of the data&amp;rsquo;s field types</source>
          <target state="translated">&lt;code&gt;types&lt;/code&gt; - 데이터의 필드 유형의 캐시</target>
        </trans-unit>
        <trans-unit id="713f014d797ed832327c6a83bf5c270ceefef5a9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsubscribe&lt;/code&gt; - unsubscribes the given pid from the given topic sends: &lt;code&gt;{:unsubscribe, pid, topic}&lt;/code&gt; respond with: &lt;code&gt;:ok | {:error, reason} | {:perform, {m, f, a}}&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;unsubscribe&lt;/code&gt; -주어진 주제에서 지정된 pid를 구독 취소합니다. &lt;code&gt;{:unsubscribe, pid, topic}&lt;/code&gt; 응답 : &lt;code&gt;:ok | {:error, reason} | {:perform, {m, f, a}}&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="bbc231aa855ba6f7ffb1640e13a6665c3a71931f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;update_value&lt;/code&gt; is the new value to be stored under &lt;code&gt;key&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f521f271795fce8731ff9d935e42ca1131f1873" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;use Application&lt;/code&gt; provides no default implementation for the &lt;a href=&quot;#start/2&quot;&gt;&lt;code&gt;start/2&lt;/code&gt;&lt;/a&gt; callback.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9f39c1df4afb4b9ab024f8cb6f1c062713a2335" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;utc_datetime&lt;/code&gt; - has a precision of seconds and casts values to to Elixir&amp;rsquo;s &lt;a href=&quot;https://hexdocs.pm/elixir/DateTime.html&quot;&gt;&lt;code&gt;DateTime&lt;/code&gt;&lt;/a&gt; struct and expects the time zone to be set to UTC.</source>
          <target state="translated">&lt;code&gt;utc_datetime&lt;/code&gt; - 초의 정밀도를 가지며 값을 Elixir의 &lt;a href=&quot;https://hexdocs.pm/elixir/DateTime.html&quot;&gt; &lt;code&gt;DateTime&lt;/code&gt; &lt;/a&gt; 구조체 로 캐스트 하고 시간대가 UTC로 설정 될 것으로 예상합니다.</target>
        </trans-unit>
        <trans-unit id="e9e1e45943bf4766719c1bda7724db4c7eb55ac0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;utc_datetime_usec&lt;/code&gt; has a default precision of microseconds and also casts values to &lt;a href=&quot;https://hexdocs.pm/elixir/DateTime.html&quot;&gt;&lt;code&gt;DateTime&lt;/code&gt;&lt;/a&gt; expecting the time zone be set to UTC.</source>
          <target state="translated">&lt;code&gt;utc_datetime_usec&lt;/code&gt; 의 기본 정밀도는 마이크로 초이며 표준 시간대가 UTC로 설정 될 것으로 예상하는 값을 &lt;a href=&quot;https://hexdocs.pm/elixir/DateTime.html&quot;&gt; &lt;code&gt;DateTime&lt;/code&gt; 으로&lt;/a&gt; 캐스트합니다 .</target>
        </trans-unit>
        <trans-unit id="6428f4d916f7c3da2df5ccc59cbddf4233c65f59" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;valid?&lt;/code&gt; - Stores if the changeset is valid</source>
          <target state="translated">&lt;code&gt;valid?&lt;/code&gt; -변경 세트가 유효한 경우 저장</target>
        </trans-unit>
        <trans-unit id="800dbbe2d2fe1d80d14941fd47d688d0a838a2e5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;vsn&lt;/code&gt; - The protocol version of the client, for example: &amp;ldquo;2.0.0&amp;rdquo;</source>
          <target state="translated">&lt;code&gt;vsn&lt;/code&gt; - 클라이언트의 프로토콜 버전 (예 :&amp;ldquo;2.0.0&amp;rdquo;</target>
        </trans-unit>
        <trans-unit id="bec0997386133df0de916bdcffadd8ddf31241c3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;where&lt;/code&gt; also accepts a keyword list where the field given as key is going to be compared with the given value. The fields will always refer to the source given in &lt;code&gt;from&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;where&lt;/code&gt; 키로 제공된 필드가 주어진 값과 비교 될 키워드 목록도 허용합니다. 필드는 항상 &lt;code&gt;from&lt;/code&gt; 제공된 소스를 참조합니다 .</target>
        </trans-unit>
        <trans-unit id="e963437caf7417e9123875fd4e9fceb427d7fad7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;where&lt;/code&gt; expressions are used to filter the result set. If there is more than one where expression, they are combined with an &lt;code&gt;and&lt;/code&gt; operator. All where expressions have to evaluate to a boolean value.</source>
          <target state="translated">&lt;code&gt;where&lt;/code&gt; 표현식은 결과 집합을 필터링하는 데 사용됩니다. where 표현식이 둘 이상 있으면 &lt;code&gt;and&lt;/code&gt; 연산자 와 결합됩니다 . 모든 표현식이 부울 값으로 평가되어야합니다.</target>
        </trans-unit>
        <trans-unit id="c5bdcde824f497b1ae0d2fe1777d38d65f7add27" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;where&lt;/code&gt;, &lt;code&gt;having&lt;/code&gt; and a &lt;code&gt;join&lt;/code&gt;&amp;rsquo;s `on&amp;rsquo;</source>
          <target state="translated">&lt;code&gt;where&lt;/code&gt; , &lt;code&gt;having&lt;/code&gt; 와는 &lt;code&gt;join&lt;/code&gt; '에's '를</target>
        </trans-unit>
        <trans-unit id="6011c602d9c8c976b96c14f349f4591db71f2bf6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{:error, :too_large, conn}&lt;/code&gt; if the request goes over the given limit</source>
          <target state="translated">&lt;code&gt;{:error, :too_large, conn}&lt;/code&gt; if the request goes over the given limit</target>
        </trans-unit>
        <trans-unit id="ff1cb34c75e3cf8ae6970e904169f2b701f48c51" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{:error, reason, reply}&lt;/code&gt; - An error occurred and the reply must be sent as result</source>
          <target state="translated">&lt;code&gt;{:error, reason, reply}&lt;/code&gt; - An error occurred and the reply must be sent as result</target>
        </trans-unit>
        <trans-unit id="c382ab89c3746807c841484e4b211c5a497ce846" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{:failover, node}&lt;/code&gt; - used if the application is distributed and is started on the current node because of a failover on node &lt;code&gt;node&lt;/code&gt;, and the application specification key &lt;code&gt;:start_phases&lt;/code&gt; is not &lt;code&gt;:undefined&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;{:failover, node}&lt;/code&gt; - used if the application is distributed and is started on the current node because of a failover on node &lt;code&gt;node&lt;/code&gt;, and the application specification key &lt;code&gt;:start_phases&lt;/code&gt; is not &lt;code&gt;:undefined&lt;/code&gt;.</target>
        </trans-unit>
        <trans-unit id="062660b1e65ffc26be85526ef4749cafef267adf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{:joined, channel_pid, reply}&lt;/code&gt; - The channel was joined and the reply must be sent as result</source>
          <target state="translated">&lt;code&gt;{:joined, channel_pid, reply}&lt;/code&gt; - The channel was joined and the reply must be sent as result</target>
        </trans-unit>
        <trans-unit id="905c7b552a0a3f84ecae4b26e5f03fcfdb35c892" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{:next, conn}&lt;/code&gt; if the next parser should be invoked</source>
          <target state="translated">&lt;code&gt;{:next, conn}&lt;/code&gt; if the next parser should be invoked</target>
        </trans-unit>
        <trans-unit id="a9f3a07e7cb34d66220a5536ba35d5dfd70ba87b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{:ok, body_params, conn}&lt;/code&gt; if the parser is able to handle the given content-type; &lt;code&gt;body_params&lt;/code&gt; should be a map</source>
          <target state="translated">&lt;code&gt;{:ok, body_params, conn}&lt;/code&gt; if the parser is able to handle the given content-type; &lt;code&gt;body_params&lt;/code&gt; should be a map</target>
        </trans-unit>
        <trans-unit id="af57bcf2b2958150c93d64000a61a51313730a9a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{:ok, type, subtype, map_of_params}&lt;/code&gt; if everything goes fine</source>
          <target state="translated">&lt;code&gt;{:ok, type, subtype, map_of_params}&lt;/code&gt; if everything goes fine</target>
        </trans-unit>
        <trans-unit id="b215e61c191074394dbf923bb41775a8fa5ada4e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{:replace, fields}&lt;/code&gt; - replace only specific columns. This option requires conflict_target</source>
          <target state="translated">&lt;code&gt;{:replace, fields}&lt;/code&gt; - replace only specific columns. This option requires conflict_target</target>
        </trans-unit>
        <trans-unit id="6b48052644bac2fb11ba3eccfa5fdff9e19af9e1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{:reply, reply}&lt;/code&gt; - The reply to be sent to the client</source>
          <target state="translated">&lt;code&gt;{:reply, reply}&lt;/code&gt; - The reply to be sent to the client</target>
        </trans-unit>
        <trans-unit id="1573672f3d270a166ee722ed200846e37ef9cf60" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{:takeover, node}&lt;/code&gt; - used if the application is distributed and is started on the current node because of a failover on the node &lt;code&gt;node&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;{:takeover, node}&lt;/code&gt; - used if the application is distributed and is started on the current node because of a failover on the node &lt;code&gt;node&lt;/code&gt;.</target>
        </trans-unit>
        <trans-unit id="27bbd69bf6fe8a187def7224a56685257b153244" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;NOTE&lt;/em&gt;: This feature depends on the internals of Cowboy 1.0 API and how it integrates with Phoenix. Those may change at &lt;em&gt;any time&lt;/em&gt;, without backwards compatibility, specifically when Cowboy 2.0 is released.</source>
          <target state="translated">&lt;em&gt;참고&lt;/em&gt; :이 기능은 Cowboy 1.0 API의 내부 및 Phoenix와의 통합 방법에 따라 다릅니다. 이전 버전과의 호환성없이, 특히 Cowboy 2.0이 출시 될 때 &lt;em&gt;언제든지&lt;/em&gt; 변경 될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="2808c210a7f7d14573dceaa04938aca641e0452d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Note&lt;/em&gt;: In such cases, a &lt;code&gt;socket_ref&lt;/code&gt; should be generated and passed to the external process, so the &lt;code&gt;socket&lt;/code&gt; itself is not leaked outside the channel. The &lt;code&gt;socket&lt;/code&gt; holds information such as assigns and transport configuration, so it&amp;rsquo;s important to not copy this information outside of the channel that owns it.</source>
          <target state="translated">&lt;em&gt;참고&lt;/em&gt; : 그러한 경우 &lt;code&gt;socket_ref&lt;/code&gt; 가 생성되어 외부 프로세스로 전달되어야하므로 &lt;code&gt;socket&lt;/code&gt; 자체가 채널 외부로 누출되지 않습니다. &lt;code&gt;socket&lt;/code&gt; 그것을 소유하는 채널의이 정보를 외부에 복사하지하는 것이 중요하므로, 이러한 할당하고 전송 구성 등의 정보를 보유하고 있습니다.</target>
        </trans-unit>
        <trans-unit id="6b3a3429c330d8a5bc256900671e64cce2552d03" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Note&lt;/em&gt;: intercepting events can introduce significantly more overhead if a large number of subscribers must customize a message since the broadcast will be encoded N times instead of a single shared encoding across all subscribers.</source>
          <target state="translated">&lt;em&gt;참고&lt;/em&gt; : 브로드 캐스트가 모든 가입자의 단일 공유 인코딩 대신 N 번 인코딩되므로 많은 수의 가입자가 메시지를 사용자 정의해야하는 경우 인터셉트 이벤트로 인해 더 많은 오버 헤드가 발생할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b589139db6d88819986a51bc3d02ac436a6272ff" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;IMPORTANT&lt;/strong&gt;: When filtering fields for associations, you MUST include the foreign keys used in the relationship, otherwise Ecto will be unable to find associated records.</source>
          <target state="translated">&lt;strong&gt;중요&lt;/strong&gt; : 연결을 위해 필드를 필터링 할 때는 관계에 사용 된 외래 키를 포함해야합니다. 그렇지 않으면 Ecto가 연결된 레코드를 찾을 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="4b2ad0477449f7a71e16e1afcd84ee9487948a91" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Important!&lt;/strong&gt; Please use this feature only when strictly necessary, otherwise it is very easy to end-up with large schemas with dozens of different associations polluting your schema and affecting your application performance. For instance, if you are using associations only for different querying purposes, then it is preferable to build and compose queries, rather than defining multiple associations:</source>
          <target state="translated">&lt;strong&gt;중대한! &lt;/strong&gt;이 기능은 꼭 필요한 경우에만 사용하십시오. 그렇지 않으면 스키마를 오염시키고 응용 프로그램 성능에 영향을 미치는 수십 개의 서로 다른 연관이있는 큰 스키마로 쉽게 종료 할 수 있습니다. 예를 들어, 다른 쿼리 목적으로 만 연결을 사용하는 경우 여러 연결을 정의하는 대신 쿼리를 작성하고 작성하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="16620b5f139013681ae6f8a76df54fbcb3c0fa41" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;NOTE:&lt;/strong&gt; Because event and payload are patterns, they will be matched. This means that if you wish to assert that the received payload is equivalent to an existing variable, you need to pin the variable in the assertion expression.</source>
          <target state="translated">&lt;strong&gt;참고 :&lt;/strong&gt; 이벤트 및 페이로드는 패턴이므로 일치합니다. 즉, 수신 된 페이로드가 기존 변수와 동일하다고 주장하려면 어설 션 표현식에서 변수를 고정해야합니다.</target>
        </trans-unit>
        <trans-unit id="bfb26765a6c5a896b8cc0fa69110abf657471932" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; If this module is used with &lt;a href=&quot;plug.debugger&quot;&gt;&lt;code&gt;Plug.Debugger&lt;/code&gt;&lt;/a&gt;, it must be used after &lt;a href=&quot;plug.debugger&quot;&gt;&lt;code&gt;Plug.Debugger&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;참고 :&lt;/strong&gt; 이 모듈을 &lt;a href=&quot;plug.debugger&quot;&gt; &lt;code&gt;Plug.Debugger&lt;/code&gt; &lt;/a&gt; 와 함께 사용하는 경우 Plug.Debugger 다음에 &lt;a href=&quot;plug.debugger&quot;&gt; &lt;code&gt;Plug.Debugger&lt;/code&gt; &lt;/a&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="712668559f0783d4307835ecbfbbb87be49ac12c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; If this module is used with &lt;a href=&quot;plug.errorhandler&quot;&gt;&lt;code&gt;Plug.ErrorHandler&lt;/code&gt;&lt;/a&gt;, only one of them will effectively handle errors. For this reason, it is recommended that &lt;a href=&quot;plug.debugger#content&quot;&gt;&lt;code&gt;Plug.Debugger&lt;/code&gt;&lt;/a&gt; is used before &lt;a href=&quot;plug.errorhandler&quot;&gt;&lt;code&gt;Plug.ErrorHandler&lt;/code&gt;&lt;/a&gt; and only in particular environments, like &lt;code&gt;:dev&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;참고 :&lt;/strong&gt; 이 모듈을 &lt;a href=&quot;plug.errorhandler&quot;&gt; &lt;code&gt;Plug.ErrorHandler&lt;/code&gt; &lt;/a&gt; 와 함께 사용하면 그 중 하나만 효과적으로 오류를 처리합니다. 이러한 이유로 &lt;a href=&quot;plug.debugger#content&quot;&gt; &lt;code&gt;Plug.Debugger&lt;/code&gt; &lt;/a&gt; 는 &lt;a href=&quot;plug.errorhandler&quot;&gt; &lt;code&gt;Plug.ErrorHandler&lt;/code&gt; &lt;/a&gt; 전에 사용 하고 &lt;code&gt;:dev&lt;/code&gt; 와 같은 특정 환경에서만 사용 하는 것이 좋습니다 .</target>
        </trans-unit>
        <trans-unit id="7aa3026c84902e7be059c21f940d107febb0b3d9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: as mentioned in the documentation for &lt;a href=&quot;plug.parsers&quot;&gt;&lt;code&gt;Plug.Parsers&lt;/code&gt;&lt;/a&gt;, the &lt;code&gt;:plug&lt;/code&gt; application has to be started in order to upload files and use the &lt;a href=&quot;plug.upload#content&quot;&gt;&lt;code&gt;Plug.Upload&lt;/code&gt;&lt;/a&gt; module.</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; 설명서에서 언급 한 바와 같이 : &lt;a href=&quot;plug.parsers&quot;&gt; &lt;code&gt;Plug.Parsers&lt;/code&gt; &lt;/a&gt; 의 &lt;code&gt;:plug&lt;/code&gt; 응용 프로그램은 파일을 업로드하고 사용하려면 시작해야합니다 &lt;a href=&quot;plug.upload#content&quot;&gt; &lt;code&gt;Plug.Upload&lt;/code&gt; 의&lt;/a&gt; 모듈을.</target>
        </trans-unit>
        <trans-unit id="ef937726101d6bbf1ea792d981c362dd127505c0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Notes:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Notes:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="84ad9da37360c471418cbd7a4f6532031cedec2b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;The cipher suites were last updated on 2018-JUN-14.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;암호 제품군은 2018 년 6 월 14 일에 마지막으로 업데이트되었습니다.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1cad69f4d5c0cf72c96c3c5640bf1b9c6d65b2cd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;You can use Ecto schemas and changesets to cast and validate any kind of data, regardless if the data will be persisted to an Ecto repository or not&lt;/strong&gt;.</source>
          <target state="translated">&lt;strong&gt;데이터가 Ecto 리포지토리에 유지되는지 여부에 관계없이 Ecto 스키마 및 변경 집합을 사용하여 모든 종류의 데이터를 캐스팅하고 유효성을 검사 할 수 있습니다&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="e8d365a24b2c40cbaa5529ec29ec24dafb15a83e" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;match&lt;/code&gt; will match any route regardless of the HTTP method. Check &lt;a href=&quot;#match/3&quot;&gt;&lt;code&gt;match/3&lt;/code&gt;&lt;/a&gt; for more information on how route compilation works and a list of supported options.</source>
          <target state="translated">&lt;code&gt;match&lt;/code&gt; 에 관계없이 HTTP 방식의 경로와 일치합니다. 라우트 컴파일 작동 방법 및 지원되는 옵션 목록에 대한 자세한 정보는 &lt;a href=&quot;#match/3&quot;&gt; &lt;code&gt;match/3&lt;/code&gt; &lt;/a&gt; 을 확인하십시오 .</target>
        </trans-unit>
        <trans-unit id="f1f89e5b3085312297a30ccdec8fedb775a68739" translate="yes" xml:space="preserve">
          <source>A DSL to define a routing algorithm that works with Plug.</source>
          <target state="translated">플러그와 함께 작동하는 라우팅 알고리즘을 정의하는 DSL입니다.</target>
        </trans-unit>
        <trans-unit id="56ae008b2dbb8e2c8b9d49a21483781040acd885" translate="yes" xml:space="preserve">
          <source>A Plug to convert &lt;code&gt;HEAD&lt;/code&gt; requests to &lt;code&gt;GET&lt;/code&gt; requests.</source>
          <target state="translated">&lt;code&gt;HEAD&lt;/code&gt; 요청을 &lt;code&gt;GET&lt;/code&gt; 요청 으로 변환하는 플러그 입니다.</target>
        </trans-unit>
        <trans-unit id="b010a98e050eb10dc2e5f1b11c9caa3386cee439" translate="yes" xml:space="preserve">
          <source>A callback executed when the repo starts or when configuration is read</source>
          <target state="translated">리포지토리가 시작되거나 구성을 읽을 때 실행되는 콜백</target>
        </trans-unit>
        <trans-unit id="fcc767a7e430e354ff1bfd81d0d475cdd63612f4" translate="yes" xml:space="preserve">
          <source>A callback executed when the repo starts or when configuration is read.</source>
          <target state="translated">리포지토리가 시작되거나 구성을 읽을 때 실행되는 콜백입니다.</target>
        </trans-unit>
        <trans-unit id="7eb7511e858848219f54b95873996b4e099e5689" translate="yes" xml:space="preserve">
          <source>A changeset is required as it is the only mechanism for tracking dirty changes. Only the fields present in the &lt;code&gt;changes&lt;/code&gt; part of the changeset are sent to the database. Any other, in-memory changes done to the schema are ignored.</source>
          <target state="translated">더티 변경을 추적하는 유일한 메커니즘이므로 변경 세트가 필요합니다. &lt;code&gt;changes&lt;/code&gt; 의 변경 부분에 있는 필드 만 데이터베이스로 전송됩니다. 스키마에 대한 다른 메모리 내 변경 사항은 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="388bae3344dc49c248c086da49078f3c9a747194" translate="yes" xml:space="preserve">
          <source>A changeset is supplied along with a function to apply to each error message as the changeset is traversed. The error message function receives an error tuple &lt;code&gt;{msg, opts}&lt;/code&gt;, for example:</source>
          <target state="translated">변경 세트가 순회 될 때 각 오류 메시지에 적용하는 기능과 함께 변경 세트가 제공됩니다. 오류 메시지 함수는 오류 튜플 &lt;code&gt;{msg, opts}&lt;/code&gt; 받습니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="bbc0ed247dabdd047db8fd7f074aba54c53f0214" translate="yes" xml:space="preserve">
          <source>A collection is any enumerable of structs. This function returns the rendered collection in a list:</source>
          <target state="translated">컬렉션은 열거 가능한 구조체입니다. 이 함수는 렌더링 된 컬렉션을 목록으로 반환합니다.</target>
        </trans-unit>
        <trans-unit id="c608908c246ab16423c148e6fa64ef056979bdbb" translate="yes" xml:space="preserve">
          <source>A common use case is updating a counter cache, in this case updating a post&amp;rsquo;s comment count when a comment is created:</source>
          <target state="translated">일반적인 사용 사례는 카운터 캐시를 업데이트하는 것입니다.이 경우 의견을 만들 때 게시물의 의견 수를 업데이트합니다.</target>
        </trans-unit>
        <trans-unit id="d16b4ddf57438100c6143c5af9cff2f6af21dff5" translate="yes" xml:space="preserve">
          <source>A constraint is a map with the following fields:</source>
          <target state="translated">구속 조건은 다음 필드가있는 맵입니다.</target>
        </trans-unit>
        <trans-unit id="57963828a8668feeba8780dca8ee7c47104fb07a" translate="yes" xml:space="preserve">
          <source>A controller by default provides many convenience functions for manipulating the connection, rendering templates, and more.</source>
          <target state="translated">기본적으로 컨트롤러는 연결 조작, 템플릿 렌더링 등을위한 많은 편리한 기능을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="10349bdecbe830d7172782cfe20d007bc64bc5ed" translate="yes" xml:space="preserve">
          <source>A custom headers map may also be given to be merged with defaults.</source>
          <target state="translated">사용자 정의 헤더 맵이 기본값과 병합되도록 제공 될 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="9d48a1d706334ebdad1d7db287b9b4c843bc42eb" translate="yes" xml:space="preserve">
          <source>A custom type expects 4 functions to be implemented, all documented and described below. We also provide two examples of how custom types can be used in Ecto to augment existing types or providing your own types.</source>
          <target state="translated">커스텀 타입은 아래에 문서화되고 설명 된 4 가지 기능이 구현 될 것으로 예상합니다. 또한 Ecto에서 사용자 정의 유형을 사용하여 기존 유형을 늘리거나 고유 한 유형을 제공하는 방법에 대한 두 가지 예를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="4d0900a0ddd633e5ba8eb37fff9e014676868d66" translate="yes" xml:space="preserve">
          <source>A custom type is a module that implements the &lt;a href=&quot;ecto.type&quot;&gt;&lt;code&gt;Ecto.Type&lt;/code&gt;&lt;/a&gt; behaviour. By default, Ecto provides the following custom types:</source>
          <target state="translated">커스텀 타입은 &lt;a href=&quot;ecto.type&quot;&gt; &lt;code&gt;Ecto.Type&lt;/code&gt; &lt;/a&gt; 동작 을 구현하는 모듈입니다 . 기본적으로 Ecto는 다음과 같은 사용자 정의 유형을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="a747bda5fdf562428478cd022242ed593cda1f33" translate="yes" xml:space="preserve">
          <source>A distinct query expression</source>
          <target state="translated">고유 한 쿼리 표현식</target>
        </trans-unit>
        <trans-unit id="684e1d79ed9b5db07cdfaeb906b9f0d3ebe6eb5a" translate="yes" xml:space="preserve">
          <source>A distinct query expression.</source>
          <target state="translated">고유 한 쿼리 식입니다.</target>
        </trans-unit>
        <trans-unit id="a1950dd57a002a1593df01e1817a7cc274948fc4" translate="yes" xml:space="preserve">
          <source>A dynamic expression can always be interpolated inside another dynamic expression and into the constructs described below.</source>
          <target state="translated">동적 표현식은 항상 다른 동적 표현식 내부와 아래 설명 된 구문으로 보간 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="95d7b4b4305750e4d404e970af1ab7cae58df9eb" translate="yes" xml:space="preserve">
          <source>A fallback plug is useful to translate common domain data structures into a valid &lt;code&gt;%Plug.Conn{}&lt;/code&gt; response. If the controller action fails to return a &lt;code&gt;%Plug.Conn{}&lt;/code&gt;, the provided plug will be called and receive the controller&amp;rsquo;s &lt;code&gt;%Plug.Conn{}&lt;/code&gt; as it was before the action was invoked along with the value returned from the controller action.</source>
          <target state="translated">대체 플러그는 일반적인 도메인 데이터 구조를 유효한 &lt;code&gt;%Plug.Conn{}&lt;/code&gt; 응답 으로 변환하는 데 유용합니다 . 컨트롤러 조치가 &lt;code&gt;%Plug.Conn{}&lt;/code&gt; 을 리턴하지 못하면 , 제공된 플러그 가 호출되고 제어기 조치에서 리턴 된 값과 함께 조치가 호출되기 전과 같이 제어기의 &lt;code&gt;%Plug.Conn{}&lt;/code&gt; 을 수신합니다 .</target>
        </trans-unit>
        <trans-unit id="6a13566eef334c9b65766da05ab4d4d43827f5f6" translate="yes" xml:space="preserve">
          <source>A fragment can also be used:</source>
          <target state="translated">단편도 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ae51f9dac9d7c54bb8170a15411f44df70ca2084" translate="yes" xml:space="preserve">
          <source>A fragment which defines the frame for window functions.</source>
          <target state="translated">윈도우 기능의 프레임을 정의하는 프래그먼트.</target>
        </trans-unit>
        <trans-unit id="3323426ad17b0c275178d48cb6477e1d9c4b9815" translate="yes" xml:space="preserve">
          <source>A function plug is any function that receives a connection and a set of options and returns a connection. Its type signature must be:</source>
          <target state="translated">기능 플러그는 연결 및 옵션 세트를 수신하고 연결을 반환하는 모든 기능입니다. 형식 서명은 다음과 같아야합니다.</target>
        </trans-unit>
        <trans-unit id="41b63ea3ad4c061f35ede93ceeae9bcd925674fe" translate="yes" xml:space="preserve">
          <source>A garbage collector process that cleans up the table used by &lt;a href=&quot;phoenix.pubsub.local&quot;&gt;&lt;code&gt;Phoenix.PubSub.Local&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;phoenix.pubsub.local&quot;&gt; &lt;code&gt;Phoenix.PubSub.Local&lt;/code&gt; 에서&lt;/a&gt; 사용하는 테이블을 정리하는 가비지 수집기 프로세스입니다 .</target>
        </trans-unit>
        <trans-unit id="8e2bc2fa7d983a2e362056403cedaf0dcf21134b" translate="yes" xml:space="preserve">
          <source>A group by query expression</source>
          <target state="translated">쿼리 식별 그룹</target>
        </trans-unit>
        <trans-unit id="fbf7205eb24f77046d9fe35fbd00e1a311c37da6" translate="yes" xml:space="preserve">
          <source>A group by query expression.</source>
          <target state="translated">쿼리 식별 그룹입니다.</target>
        </trans-unit>
        <trans-unit id="9a0412ffa16bcb7f7b88bbbe0e9a5d658142fc6a" translate="yes" xml:space="preserve">
          <source>A handler will need to implement a &lt;code&gt;child_spec/3&lt;/code&gt; function which takes:</source>
          <target state="translated">핸들러는 다음과 같은 &lt;code&gt;child_spec/3&lt;/code&gt; 함수 를 구현해야합니다 .</target>
        </trans-unit>
        <trans-unit id="e98770d454075eda4766670bca1c8638c4ddaf13" translate="yes" xml:space="preserve">
          <source>A hex-encoded UUID string</source>
          <target state="translated">16 진수로 인코딩 된 UUID 문자열</target>
        </trans-unit>
        <trans-unit id="1e5d0b6bf037b68f0ab5247229dfbbf297cc5801" translate="yes" xml:space="preserve">
          <source>A hex-encoded UUID string.</source>
          <target state="translated">16 진수로 인코딩 된 UUID 문자열입니다.</target>
        </trans-unit>
        <trans-unit id="94b525fd40b558cf7c5cb8a17c62318c0f7519cc" translate="yes" xml:space="preserve">
          <source>A join query expression</source>
          <target state="translated">조인 쿼리 식</target>
        </trans-unit>
        <trans-unit id="5ac8a34ba321b659953392223945bc3aec2d71a5" translate="yes" xml:space="preserve">
          <source>A join query expression.</source>
          <target state="translated">조인 쿼리 식</target>
        </trans-unit>
        <trans-unit id="fc626b639569e14ed38b80e4cfe297a5eee2e775" translate="yes" xml:space="preserve">
          <source>A keyword list can also be interpolated:</source>
          <target state="translated">키워드 목록을 보간 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="f98c43a93fb2b8df9b43baa37305537ee03813e9" translate="yes" xml:space="preserve">
          <source>A limit query expression</source>
          <target state="translated">제한 쿼리 표현식</target>
        </trans-unit>
        <trans-unit id="3a42a9b46de5122ad916b07756c8c98239bd5464" translate="yes" xml:space="preserve">
          <source>A limit query expression.</source>
          <target state="translated">제한 쿼리 식입니다.</target>
        </trans-unit>
        <trans-unit id="9326a99d5f5cbfad236b420591e04582f7a5b112" translate="yes" xml:space="preserve">
          <source>A list of atoms can also be interpolated for dynamic partitioning:</source>
          <target state="translated">동적 파티셔닝을 위해 원자 목록을 보간 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="548895d9732aa70eb4ec1302a1c7dc3677eeb752" translate="yes" xml:space="preserve">
          <source>A list of fields to order the window by, for example:</source>
          <target state="translated">창을 정렬 할 필드 목록은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="211d256aebc6a4475a22f354ec17c5858108776e" translate="yes" xml:space="preserve">
          <source>A list of fields to partition the window by, for example:</source>
          <target state="translated">창을 분할하는 필드 목록은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="d0b5bde25a22d39b8961db0c9a86938d6ab92eea" translate="yes" xml:space="preserve">
          <source>A lock query expression</source>
          <target state="translated">잠금 쿼리 표현식</target>
        </trans-unit>
        <trans-unit id="af0f90fc01dd0405acd985a97f28893c9c38969e" translate="yes" xml:space="preserve">
          <source>A lock query expression.</source>
          <target state="translated">잠금 쿼리 표현식.</target>
        </trans-unit>
        <trans-unit id="8a37515c314028cb265ffc9da11d9cb1972f95a3" translate="yes" xml:space="preserve">
          <source>A macro that stores a new plug. &lt;code&gt;opts&lt;/code&gt; will be passed unchanged to the new plug</source>
          <target state="translated">새로운 플러그를 저장하는 매크로. &lt;code&gt;opts&lt;/code&gt; 는 새 플러그로 변경없이 전달됩니다.</target>
        </trans-unit>
        <trans-unit id="1492bad3d66e2fb22babef1faa31465bcbf67766" translate="yes" xml:space="preserve">
          <source>A macro that stores a new plug. &lt;code&gt;opts&lt;/code&gt; will be passed unchanged to the new plug.</source>
          <target state="translated">새로운 플러그를 저장하는 매크로. &lt;code&gt;opts&lt;/code&gt; 는 새 플러그로 변경없이 전달됩니다.</target>
        </trans-unit>
        <trans-unit id="6d5636e85e1ef2bad613229d74bc0e9b119b4eb8" translate="yes" xml:space="preserve">
          <source>A migration file for the repository and test files for the context and controller features will also be generated.</source>
          <target state="translated">컨텍스트 및 컨트롤러 기능에 대한 저장소 및 테스트 파일의 마이그레이션 파일도 생성됩니다.</target>
        </trans-unit>
        <trans-unit id="220aa5b54ca715c2d2f9fb2d1024b813114578fe" translate="yes" xml:space="preserve">
          <source>A migration file for the repository and test files for the context will also be generated.</source>
          <target state="translated">저장소의 마이그레이션 파일과 컨텍스트의 테스트 파일도 생성됩니다.</target>
        </trans-unit>
        <trans-unit id="2a7ad10c915de9107d9847304f90f45300a717e2" translate="yes" xml:space="preserve">
          <source>A module (&lt;strong&gt;not a plug&lt;/strong&gt;) for debugging in development.</source>
          <target state="translated">개발시 디버깅을위한 모듈 ( &lt;strong&gt;플러그&lt;/strong&gt; 아님)</target>
        </trans-unit>
        <trans-unit id="bb7b6f80c2f49bcca36ea5f27d90c322f347cbf7" translate="yes" xml:space="preserve">
          <source>A module plug is an extension of the function plug. It is a module that must export:</source>
          <target state="translated">모듈 플러그는 기능 플러그의 확장입니다. 내 보내야하는 모듈입니다.</target>
        </trans-unit>
        <trans-unit id="1f14577898ec9c27ef3bf73631758c3ef60637ef" translate="yes" xml:space="preserve">
          <source>A module to be used in your existing plugs in order to provide error handling.</source>
          <target state="translated">오류 처리를 위해 기존 플러그에 사용되는 모듈입니다.</target>
        </trans-unit>
        <trans-unit id="2ae6beb758947fcfcf89be24aca92bbc2e9b06a7" translate="yes" xml:space="preserve">
          <source>A new file will be generated in:</source>
          <target state="translated">새로운 파일이 생성됩니다 :</target>
        </trans-unit>
        <trans-unit id="d9e5ef5ae95a7e3c031bedf9b8401adb9938c8ce" translate="yes" xml:space="preserve">
          <source>A note on &lt;code&gt;:errors&lt;/code&gt;</source>
          <target state="translated">참고 사항 &lt;code&gt;:errors&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="247b0c48eb92d7683ad37a2e4faf194583434289" translate="yes" xml:space="preserve">
          <source>A plug and module to handle automatic code reloading.</source>
          <target state="translated">자동 코드 재로드를 처리하기위한 플러그 및 모듈.</target>
        </trans-unit>
        <trans-unit id="a3bfffaf045864dc467604253ad832210e0baa2d" translate="yes" xml:space="preserve">
          <source>A plug for generating a unique request id for each request.</source>
          <target state="translated">각 요청에 대해 고유 한 요청 ID를 생성하기위한 플러그입니다.</target>
        </trans-unit>
        <trans-unit id="6446fa6bdbded8c6574e97c1eed133777cab6564" translate="yes" xml:space="preserve">
          <source>A plug for logging basic request information in the format:</source>
          <target state="translated">기본 요청 정보를 다음 형식으로 기록하기위한 플러그 :</target>
        </trans-unit>
        <trans-unit id="c8c318dc543ea007fb59d22f6b41bb1242501ed2" translate="yes" xml:space="preserve">
          <source>A plug for parsing the request body.</source>
          <target state="translated">요청 본문을 구문 분석하기위한 플러그입니다.</target>
        </trans-unit>
        <trans-unit id="2e570b41fcca81d0056177ea2ef5b9015a670923" translate="yes" xml:space="preserve">
          <source>A plug for serving static assets.</source>
          <target state="translated">정적 자산을 제공하기위한 플러그입니다.</target>
        </trans-unit>
        <trans-unit id="fa0549f72da9c53f30cb36c6df15f5ac9aabf768" translate="yes" xml:space="preserve">
          <source>A plug pipeline can be halted with &lt;a href=&quot;plug.conn#halt/1&quot;&gt;&lt;code&gt;Plug.Conn.halt/1&lt;/code&gt;&lt;/a&gt;. The builder will prevent further plugs downstream from being invoked and return the current connection. In the following example, the &lt;a href=&quot;plug.logger&quot;&gt;&lt;code&gt;Plug.Logger&lt;/code&gt;&lt;/a&gt; plug never gets called:</source>
          <target state="translated">&lt;a href=&quot;plug.conn#halt/1&quot;&gt; &lt;code&gt;Plug.Conn.halt/1&lt;/code&gt; 로&lt;/a&gt; 플러그 파이프 라인을 정지시킬 수 있습니다 . 빌더는 추가 플러그 다운 스트림이 호출되는 것을 방지하고 현재 연결을 리턴합니다. 다음 예제에서 &lt;a href=&quot;plug.logger&quot;&gt; &lt;code&gt;Plug.Logger&lt;/code&gt; &lt;/a&gt; 플러그는 호출되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="1886091b6bf7d12212133283469ad01791c28906" translate="yes" xml:space="preserve">
          <source>A plug that may convert a JSON response into a JSONP one</source>
          <target state="translated">JSON 응답을 JSONP로 변환 할 수있는 플러그</target>
        </trans-unit>
        <trans-unit id="27cc908ac178d8d6210d66299d0d2aa753f4c446" translate="yes" xml:space="preserve">
          <source>A plug that may convert a JSON response into a JSONP one.</source>
          <target state="translated">JSON 응답을 JSONP로 변환 할 수있는 플러그입니다.</target>
        </trans-unit>
        <trans-unit id="d140e1ea5763f3091fa07f469fc491efe441881f" translate="yes" xml:space="preserve">
          <source>A plug to force SSL connections and enable HSTS.</source>
          <target state="translated">SSL 연결을 강제하고 HSTS를 활성화하는 플러그입니다.</target>
        </trans-unit>
        <trans-unit id="7067fa076310914c5a187337eb8e079351e6240a" translate="yes" xml:space="preserve">
          <source>A plug to force SSL connections.</source>
          <target state="translated">SSL 연결을 강제 실행하는 플러그</target>
        </trans-unit>
        <trans-unit id="602566e61299332b20ef3537013b8af7450cd0d2" translate="yes" xml:space="preserve">
          <source>A plug to handle session cookies and session stores.</source>
          <target state="translated">세션 쿠키 및 세션 저장소를 처리하기위한 플러그입니다.</target>
        </trans-unit>
        <trans-unit id="a113601eea84699381389fc145edb16d078c8038" translate="yes" xml:space="preserve">
          <source>A prefix can be specified for a subquery, similar to standard repo operations:</source>
          <target state="translated">표준 리포 작업과 유사한 하위 쿼리에 접두사를 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="da6161e51728ffed7549eff7d59573edeb482aec" translate="yes" xml:space="preserve">
          <source>A process may be tracked multiple times, provided the topic and key pair are unique for any prior calls for the given process.</source>
          <target state="translated">주제와 키 쌍이 주어진 프로세스에 대한 이전 호출에 고유 한 경우 프로세스를 여러 번 추적 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ecd7cda5bcf7d72985a664f3c9340020d656a7d1" translate="yes" xml:space="preserve">
          <source>A process may be tracked multipled times, provided the topic and key pair are unique for any prior calls for the given process.</source>
          <target state="translated">주제와 키 쌍이 주어진 프로세스에 대한 이전 호출에 고유 한 경우 프로세스가 여러 번 추적 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="fb11d08c12532805958b64aa7f5232d9f8361526" translate="yes" xml:space="preserve">
          <source>A protocol that converts data structures into URL parameters.</source>
          <target state="translated">데이터 구조를 URL 매개 변수로 변환하는 프로토콜입니다.</target>
        </trans-unit>
        <trans-unit id="a810227ea598a60f15fb0d07a9b08121f6023fee" translate="yes" xml:space="preserve">
          <source>A protocol that extends exceptions to be status-code aware.</source>
          <target state="translated">상태 코드를 인식하도록 예외를 확장하는 프로토콜입니다.</target>
        </trans-unit>
        <trans-unit id="9b55f92a72a93f9b4051d36f398e4e4e4e15aa6c" translate="yes" xml:space="preserve">
          <source>A query can also be given instead of a schema, both for the join_through and the destination. Querying, joining or preloading the association will use the given query. Currently only where clauses can be provided in queries. Let&amp;rsquo;s see an example:</source>
          <target state="translated">join_through 및 대상 모두에 대해 스키마 대신 쿼리를 제공 할 수도 있습니다. 연관을 조회, 결합 또는 사전로드하면 주어진 조회가 사용됩니다. 현재 쿼리에서 where 절을 제공 할 수 있습니다. 예를 보자.</target>
        </trans-unit>
        <trans-unit id="57b3d5d222f71f480afb39c6c01de765a7a9d056" translate="yes" xml:space="preserve">
          <source>A query can also be given instead of a schema. Querying, joining or preloading the association will use the given query. Currently only where clauses can be provided in queries. Let&amp;rsquo;s see an example:</source>
          <target state="translated">스키마 대신 쿼리를 제공 할 수도 있습니다. 연관을 조회, 결합 또는 사전로드하면 주어진 조회가 사용됩니다. 현재 쿼리에서 where 절을 제공 할 수 있습니다. 예를 보자.</target>
        </trans-unit>
        <trans-unit id="fa830660e15cdaa4dc6eab8c330789488fe7bf9d" translate="yes" xml:space="preserve">
          <source>A query can also be given instead of a schema. Querying, joining or preloading the association will use the given query. Currently only where clauses can be provided in queries. Let&amp;rsquo;s see some examples:</source>
          <target state="translated">스키마 대신 쿼리를 제공 할 수도 있습니다. 연관을 조회, 결합 또는 사전로드하면 주어진 조회가 사용됩니다. 현재 쿼리에서 where 절을 제공 할 수 있습니다. 몇 가지 예를 보자.</target>
        </trans-unit>
        <trans-unit id="6c16c5a7a0e6e3bd5d7267cbb006505cc93761f6" translate="yes" xml:space="preserve">
          <source>A raw binary representation of a UUID</source>
          <target state="translated">UUID의 원시 이진 표현</target>
        </trans-unit>
        <trans-unit id="f6365cf3f64e3ca89e5511ac308a4440b906f106" translate="yes" xml:space="preserve">
          <source>A raw binary representation of a UUID.</source>
          <target state="translated">UUID의 원시 이진 표현입니다.</target>
        </trans-unit>
        <trans-unit id="17d99d2006e78017bdc0cb317ef24f2c49c0675d" translate="yes" xml:space="preserve">
          <source>A repository maps to an underlying data store, controlled by the adapter. For example, Ecto ships with a Postgres adapter that stores data into a PostgreSQL database.</source>
          <target state="translated">저장소는 어댑터에 의해 제어되는 기본 데이터 저장소에 맵핑됩니다. 예를 들어, Ecto는 PostgreSQL 데이터베이스에 데이터를 저장하는 Postgres 어댑터와 함께 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="cd4bdfc36fdfdd2bc045633b2cc0a5938d44cd56" translate="yes" xml:space="preserve">
          <source>A route can also specify parameters which will then be available in the function body:</source>
          <target state="translated">라우트는 함수 본문에서 사용할 수있는 매개 변수를 지정할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="be5953e95ef0d7bf21d698beeb476b75a6419062" translate="yes" xml:space="preserve">
          <source>A route should specify only one of &lt;code&gt;:do&lt;/code&gt; or &lt;code&gt;:to&lt;/code&gt; options.</source>
          <target state="translated">경로는 &lt;code&gt;:do&lt;/code&gt; 또는 &lt;code&gt;:to&lt;/code&gt; 옵션 중 하나만 지정해야합니다 .</target>
        </trans-unit>
        <trans-unit id="c8be751a044d822045b1eaba342f9baa71ee2a42" translate="yes" xml:space="preserve">
          <source>A scope may then use this pipeline as:</source>
          <target state="translated">그런 다음 범위는이 파이프 라인을 다음과 같이 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="64707c17a82fafbfa181761a4306f357e5402b6f" translate="yes" xml:space="preserve">
          <source>A select query expression</source>
          <target state="translated">선택 쿼리 표현식</target>
        </trans-unit>
        <trans-unit id="52159915deda5630e0d675da42a0327fd8ad0a83" translate="yes" xml:space="preserve">
          <source>A select query expression.</source>
          <target state="translated">선택 쿼리 표현식입니다.</target>
        </trans-unit>
        <trans-unit id="d15a1414e1dabc4b77e0578af24e25bba1b64638" translate="yes" xml:space="preserve">
          <source>A server (a &lt;a href=&quot;https://hexdocs.pm/elixir/GenServer.html&quot;&gt;&lt;code&gt;GenServer&lt;/code&gt;&lt;/a&gt; specifically) that manages uploaded files.</source>
          <target state="translated">업로드 된 파일을 관리 하는 서버 (특히 &lt;a href=&quot;https://hexdocs.pm/elixir/GenServer.html&quot;&gt; &lt;code&gt;GenServer&lt;/code&gt; &lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="679ddb5ec5c04f2352ccd686eb689981aa0578a3" translate="yes" xml:space="preserve">
          <source>A shortcut that renders the given template in the given view</source>
          <target state="translated">주어진 템플릿을 주어진 뷰에서 렌더링하는 바로 가기</target>
        </trans-unit>
        <trans-unit id="360b1f0139a93d8cac8e04f96457dacccd4755ad" translate="yes" xml:space="preserve">
          <source>A shortcut that renders the given template in the given view.</source>
          <target state="translated">주어진보기에서 주어진 템플릿을 렌더링하는 바로 가기입니다.</target>
        </trans-unit>
        <trans-unit id="4f89fcb81d2ce506035c4ee187c02c8467c2a257" translate="yes" xml:space="preserve">
          <source>A struct used as default on unfetched fields.</source>
          <target state="translated">페치되지 않은 필드에서 기본값으로 사용되는 구조체.</target>
        </trans-unit>
        <trans-unit id="1f61bdf60f93bab8b9e6b0fb5866d4197adbd5c1" translate="yes" xml:space="preserve">
          <source>A successful transaction returns the value returned by the function wrapped in a tuple as &lt;code&gt;{:ok, value}&lt;/code&gt;.</source>
          <target state="translated">성공적인 트랜잭션은 튜플에 싸인 함수가 반환 한 값을 &lt;code&gt;{:ok, value}&lt;/code&gt; 로 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="4ddd2b27cf9e32e87fad09c73b095d8e9c8a4457" translate="yes" xml:space="preserve">
          <source>A template has a name, which also contains a format. For example, in the previous section we have rendered the &amp;ldquo;index.html&amp;rdquo; template:</source>
          <target state="translated">템플릿에는 이름이 있으며 형식도 포함됩니다. 예를 들어, 이전 섹션에서 &quot;index.html&quot;템플릿을 렌더링했습니다.</target>
        </trans-unit>
        <trans-unit id="1e660c6a6ee5d0e8ffddf28c0fa00526d5a8e3c6" translate="yes" xml:space="preserve">
          <source>A transport is responsible for:</source>
          <target state="translated">운송은 다음을 담당합니다.</target>
        </trans-unit>
        <trans-unit id="946470e01e91e9929c4d53bc6f328c1d76bbc84a" translate="yes" xml:space="preserve">
          <source>A typical example is calling &lt;code&gt;MyRepo.insert/1&lt;/code&gt; with a struct and acting on the return value:</source>
          <target state="translated">일반적인 예는 구조체를 사용하여 &lt;code&gt;MyRepo.insert/1&lt;/code&gt; 을 호출 하고 반환 값에 작용하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="cb5d317cfc71e83a7571c5f18c2490db22159483" translate="yes" xml:space="preserve">
          <source>A union all query expression</source>
          <target state="translated">모든 쿼리 식 통합</target>
        </trans-unit>
        <trans-unit id="25362305321b57a805c92a0acf72bc0d06d1a7dc" translate="yes" xml:space="preserve">
          <source>A union all query expression.</source>
          <target state="translated">모든 쿼리 식을 통합합니다.</target>
        </trans-unit>
        <trans-unit id="d5b99cd9b0922c56851d9e0469e48511c48aeeee" translate="yes" xml:space="preserve">
          <source>A union query expression</source>
          <target state="translated">통합 쿼리 식</target>
        </trans-unit>
        <trans-unit id="4a920618e68127f219a3396142a47a00705a7fad" translate="yes" xml:space="preserve">
          <source>A union query expression.</source>
          <target state="translated">통합 쿼리 식</target>
        </trans-unit>
        <trans-unit id="fd7c2aef5660b74e939eea17604c8c896f7fa67b" translate="yes" xml:space="preserve">
          <source>API for building transports.</source>
          <target state="translated">교통 수단 구축을위한 API.</target>
        </trans-unit>
        <trans-unit id="86e6e8774db247384ff44f8f11bcef9d757da165" translate="yes" xml:space="preserve">
          <source>API for exporting a webserver.</source>
          <target state="translated">웹 서버를 내보내기위한 API.</target>
        </trans-unit>
        <trans-unit id="ed58cd8a2d9a5daa39ac65e4c3c4492641a76fb5" translate="yes" xml:space="preserve">
          <source>API used by Plug to invoke the code reloader on every request</source>
          <target state="translated">모든 요청에서 코드 리 로더를 호출하기 위해 Plug에 의해 사용되는 API</target>
        </trans-unit>
        <trans-unit id="4542405f0cabd3872e11baabdbce2401445cdbd7" translate="yes" xml:space="preserve">
          <source>API used by Plug to invoke the code reloader on every request.</source>
          <target state="translated">모든 요청에서 코드 리 로더를 호출하기 위해 Plug에서 사용하는 API.</target>
        </trans-unit>
        <trans-unit id="b79e3df9bbb0579360a4e4a0a03f1496f2475c10" translate="yes" xml:space="preserve">
          <source>API used by Plug to start the code reloader</source>
          <target state="translated">코드 리 로더를 시작하기 위해 Plug에서 사용하는 API</target>
        </trans-unit>
        <trans-unit id="7396c45721b461084efb7c8093672b44804d5ca9" translate="yes" xml:space="preserve">
          <source>API used by Plug to start the code reloader.</source>
          <target state="translated">코드 리 로더를 시작하기 위해 Plug에 의해 사용되는 API.</target>
        </trans-unit>
        <trans-unit id="89ef021e223e176e371690ff7d78917f2535be99" translate="yes" xml:space="preserve">
          <source>About the arithmetic operators</source>
          <target state="translated">산술 연산자</target>
        </trans-unit>
        <trans-unit id="1adb4622e0cea24e2bb59e45a0fa949aa9cd4487" translate="yes" xml:space="preserve">
          <source>Accepts the module name for the channel</source>
          <target state="translated">채널의 모듈 이름을 승인합니다</target>
        </trans-unit>
        <trans-unit id="9ea67e607d24763f974e3d47b4034a46471d7ec5" translate="yes" xml:space="preserve">
          <source>Accepts the same arguments and options as &lt;a href=&quot;ecto.repo#c:delete/2&quot;&gt;&lt;code&gt;Ecto.Repo.delete/2&lt;/code&gt;&lt;/a&gt; does.</source>
          <target state="translated">&lt;a href=&quot;ecto.repo#c:delete/2&quot;&gt; &lt;code&gt;Ecto.Repo.delete/2&lt;/code&gt; &lt;/a&gt; 와 동일한 인수 및 옵션을 허용합니다 .</target>
        </trans-unit>
        <trans-unit id="789dafed93ccbf4c05b49e24fc1da0571474c267" translate="yes" xml:space="preserve">
          <source>Accepts the same arguments and options as &lt;a href=&quot;ecto.repo#c:delete_all/2&quot;&gt;&lt;code&gt;Ecto.Repo.delete_all/2&lt;/code&gt;&lt;/a&gt; does.</source>
          <target state="translated">&lt;a href=&quot;ecto.repo#c:delete_all/2&quot;&gt; &lt;code&gt;Ecto.Repo.delete_all/2&lt;/code&gt; &lt;/a&gt; 와 동일한 인수 및 옵션을 허용합니다 .</target>
        </trans-unit>
        <trans-unit id="8c9553ee56bf0e31f097af5dc4f874d1c0bb310b" translate="yes" xml:space="preserve">
          <source>Accepts the same arguments and options as &lt;a href=&quot;ecto.repo#c:insert/2&quot;&gt;&lt;code&gt;Ecto.Repo.insert/2&lt;/code&gt;&lt;/a&gt; does.</source>
          <target state="translated">&lt;a href=&quot;ecto.repo#c:insert/2&quot;&gt; &lt;code&gt;Ecto.Repo.insert/2&lt;/code&gt; &lt;/a&gt; 와 동일한 인수 및 옵션을 허용합니다 .</target>
        </trans-unit>
        <trans-unit id="c752d4234a4cb721c1653ecd6f90b58c69994dcd" translate="yes" xml:space="preserve">
          <source>Accepts the same arguments and options as &lt;a href=&quot;ecto.repo#c:insert_all/3&quot;&gt;&lt;code&gt;Ecto.Repo.insert_all/3&lt;/code&gt;&lt;/a&gt; does.</source>
          <target state="translated">&lt;a href=&quot;ecto.repo#c:insert_all/3&quot;&gt; &lt;code&gt;Ecto.Repo.insert_all/3&lt;/code&gt; &lt;/a&gt; 과 동일한 인수 및 옵션을 허용합니다 .</target>
        </trans-unit>
        <trans-unit id="b6480d325c63afe5877a0e30d3f5c75205c3ad50" translate="yes" xml:space="preserve">
          <source>Accepts the same arguments and options as &lt;a href=&quot;ecto.repo#c:insert_or_update/2&quot;&gt;&lt;code&gt;Ecto.Repo.insert_or_update/2&lt;/code&gt;&lt;/a&gt; does.</source>
          <target state="translated">&lt;a href=&quot;ecto.repo#c:insert_or_update/2&quot;&gt; &lt;code&gt;Ecto.Repo.insert_or_update/2&lt;/code&gt; &lt;/a&gt; 와 동일한 인수 및 옵션을 허용합니다 .</target>
        </trans-unit>
        <trans-unit id="8614a768a0a859c086c15abf0c73d40064b5fd00" translate="yes" xml:space="preserve">
          <source>Accepts the same arguments and options as &lt;a href=&quot;ecto.repo#c:update/2&quot;&gt;&lt;code&gt;Ecto.Repo.update/2&lt;/code&gt;&lt;/a&gt; does.</source>
          <target state="translated">&lt;a href=&quot;ecto.repo#c:update/2&quot;&gt; &lt;code&gt;Ecto.Repo.update/2&lt;/code&gt; &lt;/a&gt; 와 동일한 인수 및 옵션을 허용합니다 .</target>
        </trans-unit>
        <trans-unit id="1bc7635d2d0b3f661ed3f03cc2b0aef2100ccbd1" translate="yes" xml:space="preserve">
          <source>Accepts the same arguments and options as &lt;a href=&quot;ecto.repo#c:update_all/3&quot;&gt;&lt;code&gt;Ecto.Repo.update_all/3&lt;/code&gt;&lt;/a&gt; does.</source>
          <target state="translated">&lt;a href=&quot;ecto.repo#c:update_all/3&quot;&gt; &lt;code&gt;Ecto.Repo.update_all/3&lt;/code&gt; &lt;/a&gt; 과 동일한 인수 및 옵션을 허용합니다 .</target>
        </trans-unit>
        <trans-unit id="adf777534a81a3c2426b5193f04a57a4b66913e5" translate="yes" xml:space="preserve">
          <source>Access the endpoint configuration given by key</source>
          <target state="translated">키로 제공된 엔드 포인트 구성에 액세스</target>
        </trans-unit>
        <trans-unit id="7b547055b41922089c3f74a93f478751d56aeb74" translate="yes" xml:space="preserve">
          <source>Access the endpoint configuration given by key.</source>
          <target state="translated">키로 지정된 엔드 포인트 구성에 액세스하십시오.</target>
        </trans-unit>
        <trans-unit id="e07a4acdd5cdd3ab645fd0d90270662d13ac1718" translate="yes" xml:space="preserve">
          <source>Adapters</source>
          <target state="translated">Adapters</target>
        </trans-unit>
        <trans-unit id="7784ef3802e7b67bed0bf4318177efcf145c0392" translate="yes" xml:space="preserve">
          <source>Add the resulting file to your application&amp;rsquo;s &lt;code&gt;priv&lt;/code&gt; directory and pass the path using the &lt;code&gt;:dhfile&lt;/code&gt; key. It is best practice to rotate the file periodically.</source>
          <target state="translated">결과 파일을 응용 프로그램의 &lt;code&gt;priv&lt;/code&gt; 디렉토리에 추가하고 &lt;code&gt;:dhfile&lt;/code&gt; 키를 사용하여 경로를 전달하십시오 . 파일을 주기적으로 회전하는 것이 가장 좋습니다.</target>
        </trans-unit>
        <trans-unit id="6f55dbe5531ad6865c67ed95836c2557b5aeb8ba" translate="yes" xml:space="preserve">
          <source>Adding and removal of embeds can only be done via the &lt;a href=&quot;ecto.changeset&quot;&gt;&lt;code&gt;Ecto.Changeset&lt;/code&gt;&lt;/a&gt; API so Ecto can properly track the embed life-cycle:</source>
          <target state="translated">임베드의 추가 및 제거는 &lt;a href=&quot;ecto.changeset&quot;&gt; &lt;code&gt;Ecto.Changeset&lt;/code&gt; &lt;/a&gt; API 를 통해서만 수행 할 수 있으므로 Ecto는 임베드 수명주기를 올바르게 추적 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f67e21d45717d2e7d5f6b8d4a9516ab30653948c" translate="yes" xml:space="preserve">
          <source>Additional options can be given to the session store, see the store&amp;rsquo;s documentation for the options it accepts.</source>
          <target state="translated">세션 저장소에 추가 옵션을 제공 할 수 있습니다. 허용되는 옵션에 대해서는 저장소의 설명서를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="b46698b76037699bcd1a6db8f4d893bf0a0f099e" translate="yes" xml:space="preserve">
          <source>Adds a delete operation to the multi</source>
          <target state="translated">멀티에 삭제 작업을 추가합니다</target>
        </trans-unit>
        <trans-unit id="9ee3d694f5156d312afd606d349abf63df55f685" translate="yes" xml:space="preserve">
          <source>Adds a delete operation to the multi.</source>
          <target state="translated">멀티에 삭제 작업을 추가합니다.</target>
        </trans-unit>
        <trans-unit id="769fbcf8531ada2965f956c88b8bab5fa2107391" translate="yes" xml:space="preserve">
          <source>Adds a delete_all operation to the multi</source>
          <target state="translated">멀티에 delete_all 연산을 추가합니다</target>
        </trans-unit>
        <trans-unit id="cbe4492b83cbb0046f04cfc470e840e81af8e8f2" translate="yes" xml:space="preserve">
          <source>Adds a delete_all operation to the multi.</source>
          <target state="translated">멀티에 delete_all 연산을 추가합니다.</target>
        </trans-unit>
        <trans-unit id="58349070033bbd9b9269bd6e6931b771e8a71bc2" translate="yes" xml:space="preserve">
          <source>Adds a function to run as part of the multi</source>
          <target state="translated">멀티의 일부로 실행할 함수를 추가합니다</target>
        </trans-unit>
        <trans-unit id="1bec869c3e831e0a6c85e17cba5a4af86ccc6ec3" translate="yes" xml:space="preserve">
          <source>Adds a function to run as part of the multi.</source>
          <target state="translated">멀티의 일부로 실행할 함수를 추가합니다.</target>
        </trans-unit>
        <trans-unit id="34e192fedbb4eabab58579f23b6132b3af1a3750" translate="yes" xml:space="preserve">
          <source>Adds a given interval to a date</source>
          <target state="translated">주어진 간격을 날짜에 추가합니다</target>
        </trans-unit>
        <trans-unit id="6d007da43a8bd9b39162829b023c276b326e5dbc" translate="yes" xml:space="preserve">
          <source>Adds a given interval to a date.</source>
          <target state="translated">주어진 간격을 날짜에 추가합니다.</target>
        </trans-unit>
        <trans-unit id="194676ec87039fc824f39013dabad1414b7f21a3" translate="yes" xml:space="preserve">
          <source>Adds a given interval to a datetime</source>
          <target state="translated">주어진 시간을 날짜 시간에 추가합니다</target>
        </trans-unit>
        <trans-unit id="ed19d9c7db347a5112a39c5dddd3a119f1642683" translate="yes" xml:space="preserve">
          <source>Adds a given interval to a datetime.</source>
          <target state="translated">주어진 시간 간격을 날짜 시간에 추가합니다.</target>
        </trans-unit>
        <trans-unit id="f176eb799f6d0e21b8db3090cb17b0b1910d9fd4" translate="yes" xml:space="preserve">
          <source>Adds a new element to the set</source>
          <target state="translated">세트에 새로운 요소를 추가</target>
        </trans-unit>
        <trans-unit id="cea99954f15fe72a878575aafe645073a0bcb4b1" translate="yes" xml:space="preserve">
          <source>Adds a new element to the set.</source>
          <target state="translated">세트에 새로운 요소를 추가합니다.</target>
        </trans-unit>
        <trans-unit id="5137472dd63745ac60a833c182654bc64ff4bd48" translate="yes" xml:space="preserve">
          <source>Adds a new request header (&lt;code&gt;key&lt;/code&gt;) if not present, otherwise replaces the previous value of that header with &lt;code&gt;value&lt;/code&gt;</source>
          <target state="translated">새로운 요청 헤더 (추가 &lt;code&gt;key&lt;/code&gt; 달리하여 해당 헤더의 이전 값 대체) 존재하지 않는 경우 &lt;code&gt;value&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0c4e9e3bae320c79d590690ad5143c1c8375375b" translate="yes" xml:space="preserve">
          <source>Adds a new request header (&lt;code&gt;key&lt;/code&gt;) if not present, otherwise replaces the previous value of that header with &lt;code&gt;value&lt;/code&gt;.</source>
          <target state="translated">새로운 요청 헤더 (추가 &lt;code&gt;key&lt;/code&gt; 달리하여 해당 헤더의 이전 값 대체)가 존재하지 않는 경우 &lt;code&gt;value&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7c2bf518fb38cf26c49db68d29cada83da6c1888" translate="yes" xml:space="preserve">
          <source>Adds a new response header (&lt;code&gt;key&lt;/code&gt;) if not present, otherwise replaces the previous value of that header with &lt;code&gt;value&lt;/code&gt;</source>
          <target state="translated">새로운 응답 헤더 (추가 &lt;code&gt;key&lt;/code&gt; 달리하여 해당 헤더의 이전 값 대체) 존재하지 않는 경우 &lt;code&gt;value&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3dea66064c01516ce1ce2f232671c9e6df2d28b6" translate="yes" xml:space="preserve">
          <source>Adds a new response header (&lt;code&gt;key&lt;/code&gt;) if not present, otherwise replaces the previous value of that header with &lt;code&gt;value&lt;/code&gt;.</source>
          <target state="translated">새로운 응답 헤더 (추가 &lt;code&gt;key&lt;/code&gt; 달리하여 해당 헤더의 이전 값 대체)가 존재하지 않는 경우 &lt;code&gt;value&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7384ebe47a1b17e11afd5a17b7481276360f53a4" translate="yes" xml:space="preserve">
          <source>Adds an error to the changeset</source>
          <target state="translated">변경 세트에 오류를 추가합니다</target>
        </trans-unit>
        <trans-unit id="8fd325b36f13567a54758748114ef41ca1fff6fb" translate="yes" xml:space="preserve">
          <source>Adds an error to the changeset.</source>
          <target state="translated">변경 세트에 오류를 추가합니다.</target>
        </trans-unit>
        <trans-unit id="d1f9282c9f061f154b56dad9390ad5d59a06b52c" translate="yes" xml:space="preserve">
          <source>Adds an insert operation to the multi</source>
          <target state="translated">멀티에 삽입 작업을 추가합니다</target>
        </trans-unit>
        <trans-unit id="5a732255ac22c5c6065191d204bc188d1d7d11f9" translate="yes" xml:space="preserve">
          <source>Adds an insert operation to the multi.</source>
          <target state="translated">멀티에 삽입 작업을 추가합니다.</target>
        </trans-unit>
        <trans-unit id="6f1d356ee7af97c290a0983fcc393be6d69fc9fe" translate="yes" xml:space="preserve">
          <source>Adds an insert_all operation to the multi</source>
          <target state="translated">멀티에 insert_all 연산을 추가합니다</target>
        </trans-unit>
        <trans-unit id="18fb34baf7a00ef35058866f1cd06182f6556828" translate="yes" xml:space="preserve">
          <source>Adds an insert_all operation to the multi.</source>
          <target state="translated">멀티에 insert_all 연산을 추가합니다.</target>
        </trans-unit>
        <trans-unit id="4fea338f938382b22df2ad7873e19fba67b7dc02" translate="yes" xml:space="preserve">
          <source>Adds an update operation to the multi</source>
          <target state="translated">멀티에 업데이트 작업을 추가합니다</target>
        </trans-unit>
        <trans-unit id="c3cc5c39ec6abb44d01e956bf112b8e5cfa6f1f5" translate="yes" xml:space="preserve">
          <source>Adds an update operation to the multi.</source>
          <target state="translated">멀티에 업데이트 작업을 추가합니다.</target>
        </trans-unit>
        <trans-unit id="2dab70e220b97494a706a2a537167adfafecc13d" translate="yes" xml:space="preserve">
          <source>Adds an update_all operation to the multi</source>
          <target state="translated">멀티에 update_all 작업을 추가합니다</target>
        </trans-unit>
        <trans-unit id="427f83a0359dd0e43a3da4e151a7253d8e9a4062" translate="yes" xml:space="preserve">
          <source>Adds an update_all operation to the multi.</source>
          <target state="translated">멀티에 update_all 작업을 추가합니다.</target>
        </trans-unit>
        <trans-unit id="77d8ef9e9593e05de16fcb185362ded29dbcdd47" translate="yes" xml:space="preserve">
          <source>Adds key/value pair to socket assigns</source>
          <target state="translated">소켓 할당에 키 / 값 쌍을 추가합니다</target>
        </trans-unit>
        <trans-unit id="0d847ebf435901217a855c2d3a9bd63d85d34c23" translate="yes" xml:space="preserve">
          <source>Adds key/value pair to socket assigns.</source>
          <target state="translated">소켓 할당에 키 / 값 쌍을 추가합니다.</target>
        </trans-unit>
        <trans-unit id="2ebb729e6f4563c0b483c5ecfc0f09681da14fb9" translate="yes" xml:space="preserve">
          <source>Adds the given interval to the current time in UTC</source>
          <target state="translated">주어진 시간을 UTC로 현재 시간에 더합니다</target>
        </trans-unit>
        <trans-unit id="042bc7077804c2ab95f410b2330b189b5fef8ec7" translate="yes" xml:space="preserve">
          <source>Adds the given interval to the current time in UTC.</source>
          <target state="translated">주어진 시간을 UTC로 현재 시간에 추가합니다.</target>
        </trans-unit>
        <trans-unit id="3b5a0d13c97aaad5ec8dba3e8924ba9778eb0ba4" translate="yes" xml:space="preserve">
          <source>After a client has successfully joined a channel, incoming events from the client are routed through the channel&amp;rsquo;s &lt;code&gt;handle_in/3&lt;/code&gt; callbacks. Within these callbacks, you can perform any action. Typically you&amp;rsquo;ll either forward a message to all listeners with &lt;a href=&quot;#broadcast!/3&quot;&gt;&lt;code&gt;broadcast!/3&lt;/code&gt;&lt;/a&gt;, or push a message directly down the socket with &lt;a href=&quot;#push/3&quot;&gt;&lt;code&gt;push/3&lt;/code&gt;&lt;/a&gt;. Incoming callbacks must return the &lt;code&gt;socket&lt;/code&gt; to maintain ephemeral state.</source>
          <target state="translated">클라이언트가 채널에 성공적으로 참여하면 클라이언트에서 들어오는 이벤트가 채널의 &lt;code&gt;handle_in/3&lt;/code&gt; 콜백을 통해 라우팅됩니다 . 이러한 콜백 내에서 모든 작업을 수행 할 수 있습니다. 일반적으로 당신도 앞으로 모든 청취자에게 메시지거야 &lt;a href=&quot;#broadcast!/3&quot;&gt; &lt;code&gt;broadcast!/3&lt;/code&gt; &lt;/a&gt; 하거나와 소켓 아래로 직접 메시지를 푸시 &lt;a href=&quot;#push/3&quot;&gt; &lt;code&gt;push/3&lt;/code&gt; &lt;/a&gt; . 들어오는 콜백은 임시 상태를 유지하기 위해 &lt;code&gt;socket&lt;/code&gt; 을 반환해야합니다 .</target>
        </trans-unit>
        <trans-unit id="4903a2f13a8bc80aa4ddc4c8cfc092578f620745" translate="yes" xml:space="preserve">
          <source>After a match is found, the block given as &lt;code&gt;do/end&lt;/code&gt; is stored as a function in the connection. This function is then retrieved and invoked in the &lt;code&gt;dispatch&lt;/code&gt; plug.</source>
          <target state="translated">일치가 발견되면 &lt;code&gt;do/end&lt;/code&gt; 로 지정된 블록 이 연결에 함수로 저장됩니다. 그런 다음이 기능은 &lt;code&gt;dispatch&lt;/code&gt; 플러그 에서 검색 및 호출됩니다 .</target>
        </trans-unit>
        <trans-unit id="26032b36670746e3434c695506614fe60aeea546" translate="yes" xml:space="preserve">
          <source>After casting, the changeset is given to many &lt;code&gt;Ecto.Changeset.validate_*&lt;/code&gt; functions that validate only the &lt;strong&gt;changed fields&lt;/strong&gt;. In other words: if a field was not given as a parameter, it won&amp;rsquo;t be validated at all. For example, if the params map contain only the &amp;ldquo;name&amp;rdquo; and &amp;ldquo;email&amp;rdquo; keys, the &amp;ldquo;age&amp;rdquo; validation won&amp;rsquo;t run.</source>
          <target state="translated">캐스트 후 변경 세트는 &lt;strong&gt;변경된 필드&lt;/strong&gt; 만 유효성 검증 하는 많은 &lt;code&gt;Ecto.Changeset.validate_*&lt;/code&gt; 함수에 제공 &lt;strong&gt;됩니다&lt;/strong&gt; . 즉, 필드가 매개 변수로 제공되지 않은 경우에는 필드의 유효성이 전혀 검증되지 않습니다. 예를 들어 params 맵에 &quot;name&quot;및 &quot;email&quot;키만 포함되어 있으면 &quot;age&quot;유효성 검사가 실행되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="a6aa70809ce1014ac0c0f588a1a20ec2a8f93b3c" translate="yes" xml:space="preserve">
          <source>After exploring the documentation and guides, consider checking out the &lt;a href=&quot;http://pages.plataformatec.com.br/ebook-whats-new-in-ecto-2-0&quot;&gt;&amp;ldquo;What&amp;rsquo;s new in Ecto 2.1&amp;rdquo;&lt;/a&gt; free ebook to learn more about many features in Ecto 2.1 such as &lt;code&gt;many_to_many&lt;/code&gt;, schemaless queries, concurrent testing and more. Note the book still largely applies to Ecto 3.0 as the major change in Ecto 3.0 was the removal of the outdated Ecto datetime types in favor of Elixir&amp;rsquo;s Calendar types.</source>
          <target state="translated">설명서 및 안내서 를 &lt;code&gt;many_to_many&lt;/code&gt; 후 &lt;a href=&quot;http://pages.plataformatec.com.br/ebook-whats-new-in-ecto-2-0&quot;&gt;&quot;Ecto 2.1의 새로운&lt;/a&gt; 기능 &quot; 무료 전자 책을 확인하여 many_to_many , 스키마없는 쿼리, 동시 테스트 등과 같은 Ecto 2.1의 많은 기능에 대해 자세히 알아보십시오 . Ecto 3.0의 주요 변경 사항은 Elixir의 Calendar 유형을 선호하는 오래된 Ecto 날짜 시간 유형을 제거했기 때문에이 책은 여전히 ​​Ecto 3.0에 여전히 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="bdea6ffdf38afdd8a0ea1ddf12cc241f602f9239" translate="yes" xml:space="preserve">
          <source>After persisting &lt;code&gt;weather&lt;/code&gt; to the database, it will return a new copy of &lt;code&gt;%Weather{}&lt;/code&gt; with the primary key (the &lt;code&gt;id&lt;/code&gt;) set. We can use this value to read a struct back from the repository:</source>
          <target state="translated">&lt;code&gt;weather&lt;/code&gt; 를 데이터베이스에 유지 한 후 기본 키 ( &lt;code&gt;id&lt;/code&gt; )가 설정된 새 &lt;code&gt;%Weather{}&lt;/code&gt; 복사본을 반환합니다 . 이 값을 사용하여 저장소에서 구조체를 다시 읽을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="afc8a3c116cb06fd08163a570db09643a9c02a4b" translate="yes" xml:space="preserve">
          <source>After the callback is invoked, the error is re-raised.</source>
          <target state="translated">콜백이 호출 된 후 오류가 다시 발생합니다.</target>
        </trans-unit>
        <trans-unit id="1de59739d4d270b220874ec766f302986a4a91d4" translate="yes" xml:space="preserve">
          <source>After this change, you must recompile plug:</source>
          <target state="translated">이 변경 후에는 플러그를 다시 컴파일해야합니다.</target>
        </trans-unit>
        <trans-unit id="252ef139af6f0fdc730b089eed9232ba35c0bc13" translate="yes" xml:space="preserve">
          <source>Aggregates: &lt;a href=&quot;#count/0&quot;&gt;&lt;code&gt;count/0&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#count/1&quot;&gt;&lt;code&gt;count/1&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#avg/1&quot;&gt;&lt;code&gt;avg/1&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#sum/1&quot;&gt;&lt;code&gt;sum/1&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#min/1&quot;&gt;&lt;code&gt;min/1&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#max/1&quot;&gt;&lt;code&gt;max/1&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">집계 : &lt;a href=&quot;#count/0&quot;&gt; &lt;code&gt;count/0&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#count/1&quot;&gt; &lt;code&gt;count/1&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#avg/1&quot;&gt; &lt;code&gt;avg/1&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#sum/1&quot;&gt; &lt;code&gt;sum/1&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#min/1&quot;&gt; &lt;code&gt;min/1&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#max/1&quot;&gt; &lt;code&gt;max/1&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c172a0bad59b89ef6d9a76d5ce1da6b2bf7d1af3" translate="yes" xml:space="preserve">
          <source>All adapters are required to implement a clause for :binary_id types, since they are adapter specific. If your adapter does not provide binary ids, you may simply use &lt;a href=&quot;ecto.uuid&quot;&gt;&lt;code&gt;Ecto.UUID&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">모든 어댑터는 어댑터마다 다르기 때문에 : binary_id 유형에 대한 절을 구현해야합니다. 어댑터가 이진 ID를 제공하지 않으면 간단하게 &lt;a href=&quot;ecto.uuid&quot;&gt; &lt;code&gt;Ecto.UUID&lt;/code&gt; &lt;/a&gt; 를 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="69c12b3b6c00c84ec71486ef08e3c19bbae79e25" translate="yes" xml:space="preserve">
          <source>All adapters are required to implement a clause for &lt;code&gt;:binary_id&lt;/code&gt; types, since they are adapter specific. If your adapter does not provide binary ids, you may simply use &lt;a href=&quot;ecto.uuid&quot;&gt;&lt;code&gt;Ecto.UUID&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">모든 어댑터는 어댑터마다 &lt;code&gt;:binary_id&lt;/code&gt; 때문에 : binary_id 유형에 대한 절을 구현해야합니다 . 어댑터가 이진 ID를 제공하지 않으면 간단하게 &lt;a href=&quot;ecto.uuid&quot;&gt; &lt;code&gt;Ecto.UUID&lt;/code&gt; &lt;/a&gt; 를 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="0d45225e1467161970b40e45c5803f0dbfd88ffa" translate="yes" xml:space="preserve">
          <source>All endpoints are configured in your application environment. For example:</source>
          <target state="translated">모든 엔드 포인트는 애플리케이션 환경에서 구성됩니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="4b09c1ec9758d43f4962774adb6d17753fba520f" translate="yes" xml:space="preserve">
          <source>All event callbacks are run in the same process that calls the &lt;a href=&quot;#c:instrument/3&quot;&gt;&lt;code&gt;instrument/3&lt;/code&gt;&lt;/a&gt; macro; hence, instrumenters should be careful to avoid performing blocking actions. If an event callback fails in any way (exits, throws, or raises), it won&amp;rsquo;t affect anything as the error is caught, but the failure will be logged. Note that &amp;ldquo;after&amp;rdquo; callbacks are not guaranteed to be called as, for example, a link may break before they&amp;rsquo;ve been called.</source>
          <target state="translated">모든 이벤트 콜백은 &lt;a href=&quot;#c:instrument/3&quot;&gt; &lt;code&gt;instrument/3&lt;/code&gt; &lt;/a&gt; 매크로 를 호출하는 동일한 프로세스에서 실행됩니다 . 따라서 계측기는 차단 작업을 수행하지 않도록주의해야합니다. 이벤트 콜백이 어떤 식 으로든 실패하면 (종료, 발생 또는 발생) 오류가 발생해도 아무 영향을 미치지 않지만 실패는 기록됩니다. 예를 들어, 링크가 호출되기 전에 링크가 끊어 질 수 있으므로 &quot;후&quot;콜백이 호출되는 것은 아닙니다.</target>
        </trans-unit>
        <trans-unit id="ad7544f2dd291d98846f1fadb6ce98ab43a5d856" translate="yes" xml:space="preserve">
          <source>All given options are forwarded to the underlying input, default values are provided for id, name and textarea content if possible.</source>
          <target state="translated">주어진 모든 옵션은 기본 입력으로 전달되며 가능한 경우 id, name 및 textarea content에 대한 기본값이 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="813dc7e9919c783a01744c6de9aa6e536e1981be" translate="yes" xml:space="preserve">
          <source>All given options are forwarded to the underlying input, default values are provided for id, name and value if possible.</source>
          <target state="translated">주어진 모든 옵션은 기본 입력으로 전달되며 가능한 경우 id, name 및 value에 대한 기본값이 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="9f5563600902eea5e57e862ead255e4eba991ece" translate="yes" xml:space="preserve">
          <source>All given options are forwarded to the underlying tag. A default value is provided for &lt;code&gt;for&lt;/code&gt; attribute but can be overriden if you pass a value to the &lt;code&gt;for&lt;/code&gt; option. Text content would be inferred from &lt;code&gt;field&lt;/code&gt; if not specified.</source>
          <target state="translated">주어진 모든 옵션은 기본 태그로 전달됩니다. 기본 값은 제공됩니다 &lt;code&gt;for&lt;/code&gt; 속성하지만 당신은에 값을 전달하면 오버라이드 (override) 할 수 있습니다 &lt;code&gt;for&lt;/code&gt; 옵션을 선택합니다. 지정하지 않으면 텍스트 내용이 &lt;code&gt;field&lt;/code&gt; 에서 유추 됩니다.</target>
        </trans-unit>
        <trans-unit id="499393acc73825c4c36e7d2c38f112f85ee41bf0" translate="yes" xml:space="preserve">
          <source>All names must be unique between both structures.</source>
          <target state="translated">모든 이름은 두 구조간에 고유해야합니다.</target>
        </trans-unit>
        <trans-unit id="8db0c93c2441d2db62c9efdff79f4e349d222d42" translate="yes" xml:space="preserve">
          <source>All of Phoenix configuration, except the Compile-time configuration below can be set dynamically from the &lt;a href=&quot;#c:init/2&quot;&gt;&lt;code&gt;init/2&lt;/code&gt;&lt;/a&gt; callback.</source>
          <target state="translated">아래 컴파일 시간 구성을 제외한 모든 Phoenix 구성은 &lt;a href=&quot;#c:init/2&quot;&gt; &lt;code&gt;init/2&lt;/code&gt; &lt;/a&gt; 콜백 에서 동적으로 설정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="c5e2d3cafbf3b1257c66222879054524fa83042b" translate="yes" xml:space="preserve">
          <source>All operations will be executed in the order they were added.</source>
          <target state="translated">모든 작업은 추가 된 순서대로 실행됩니다.</target>
        </trans-unit>
        <trans-unit id="bdcf9cd3751eb31bdc1527fb2f1dc7715bab71c1" translate="yes" xml:space="preserve">
          <source>All options are forwarded to the underlying button tag.</source>
          <target state="translated">모든 옵션은 기본 버튼 태그로 전달됩니다.</target>
        </trans-unit>
        <trans-unit id="522ddbe1f1dfe285f4aa9236aba2fc9ba59e6950" translate="yes" xml:space="preserve">
          <source>All options are forwarded to the underlying input tag.</source>
          <target state="translated">모든 옵션은 기본 입력 태그로 전달됩니다.</target>
        </trans-unit>
        <trans-unit id="7009b3da1def9b1ee6d1bd825e69020e72baee8d" translate="yes" xml:space="preserve">
          <source>All options are simply forwarded to the underlying HTML tag.</source>
          <target state="translated">모든 옵션은 단순히 기본 HTML 태그로 전달됩니다.</target>
        </trans-unit>
        <trans-unit id="558de1b31a7f35b365da32ef41bf2e958a244056" translate="yes" xml:space="preserve">
          <source>All options can be pre-configured by setting &lt;code&gt;@timestamps_opts&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;@timestamps_opts&lt;/code&gt; 를 설정하여 모든 옵션을 사전 구성 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="28bc82a547f8d0a9365fca95f1387101711c40f1" translate="yes" xml:space="preserve">
          <source>All options supported by &lt;a href=&quot;plug.conn#read_body/2&quot;&gt;&lt;code&gt;Plug.Conn.read_body/2&lt;/code&gt;&lt;/a&gt; are also supported here. They are repeated here for convenience:</source>
          <target state="translated">&lt;a href=&quot;plug.conn#read_body/2&quot;&gt; &lt;code&gt;Plug.Conn.read_body/2&lt;/code&gt; &lt;/a&gt; 가 지원하는 모든 옵션 도 여기에서 지원됩니다. 편의를 위해 여기에 반복됩니다.</target>
        </trans-unit>
        <trans-unit id="45cc7909dee625c35daed3413858b850ca7b70cf" translate="yes" xml:space="preserve">
          <source>All other options are forwarded to the underlying &lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt; tag.</source>
          <target state="translated">다른 모든 옵션은 기본 &lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt; 태그 로 전달됩니다 .</target>
        </trans-unit>
        <trans-unit id="0de8e7fa31635bbc8b9cb09d4c14202e448a3833" translate="yes" xml:space="preserve">
          <source>All other options are forwarded to the underlying HTML tag.</source>
          <target state="translated">다른 모든 옵션은 기본 HTML 태그로 전달됩니다.</target>
        </trans-unit>
        <trans-unit id="6f0461c97a5f7c04f3543b8d31b32467f48a927a" translate="yes" xml:space="preserve">
          <source>All other options are forwarded to the underlying button input.</source>
          <target state="translated">다른 모든 옵션은 기본 버튼 입력으로 전달됩니다.</target>
        </trans-unit>
        <trans-unit id="d3cdbef73beb37bb98e96f11d133934f74a806ca" translate="yes" xml:space="preserve">
          <source>All other options are forwarded. See &lt;a href=&quot;#text_input/3&quot;&gt;&lt;code&gt;text_input/3&lt;/code&gt;&lt;/a&gt; for example and docs.</source>
          <target state="translated">다른 모든 옵션이 전달됩니다. 예를 들어, 문서는 &lt;a href=&quot;#text_input/3&quot;&gt; &lt;code&gt;text_input/3&lt;/code&gt; &lt;/a&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="e5ce54eed717637497450620d027b4dc6f39dc64" translate="yes" xml:space="preserve">
          <source>All other options are passed to the underlying HTML tag.</source>
          <target state="translated">다른 모든 옵션은 기본 HTML 태그로 전달됩니다.</target>
        </trans-unit>
        <trans-unit id="f06429df7c982138e6fece80594cc2823997c039" translate="yes" xml:space="preserve">
          <source>All other types and dynamic values must be passed as a parameter using interpolation as explained below.</source>
          <target state="translated">다른 모든 유형과 동적 값은 아래 설명과 같이 보간을 사용하여 매개 변수로 전달해야합니다.</target>
        </trans-unit>
        <trans-unit id="8e0ed724d9fd7f66ef5b095b68eed5927f535ac7" translate="yes" xml:space="preserve">
          <source>All paths that match the forwarded prefix will be sent to the forwarded plug. This is useful for sharing a router between applications or even breaking a big router into smaller ones. The router pipelines will be invoked prior to forwarding the connection.</source>
          <target state="translated">전달 된 접두사와 일치하는 모든 경로가 전달 된 플러그로 전송됩니다. 응용 프로그램간에 라우터를 공유하거나 큰 라우터를 작은 라우터로 나누는 데 유용합니다. 연결을 전달하기 전에 라우터 파이프 라인이 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="62b34ea36e859428b611c71d81b082ea47b9c097" translate="yes" xml:space="preserve">
          <source>All presences for a given Pid can be untracked by calling the &lt;a href=&quot;phoenix.tracker#untrack/2&quot;&gt;&lt;code&gt;Phoenix.Tracker.untrack/2&lt;/code&gt;&lt;/a&gt; signature of this function.</source>
          <target state="translated">이 함수 의 &lt;a href=&quot;phoenix.tracker#untrack/2&quot;&gt; &lt;code&gt;Phoenix.Tracker.untrack/2&lt;/code&gt; &lt;/a&gt; 서명을 호출하면 주어진 Pid에 대한 모든 존재를 추적 할 수 없습니다 .</target>
        </trans-unit>
        <trans-unit id="6a339d2d44001129cb1c12faf11686559a271e99" translate="yes" xml:space="preserve">
          <source>All routes are compiled to a match function that receives three arguments: the method, the request path split on &lt;code&gt;/&lt;/code&gt; and the connection. Consider this example:</source>
          <target state="translated">모든 경로는 메소드, 요청 경로가 &lt;code&gt;/&lt;/code&gt; 및 연결의 세 가지 인수를받는 일치 함수로 컴파일됩니다 . 이 예제를 고려하십시오.</target>
        </trans-unit>
        <trans-unit id="d12952e472708b80423f06432a2383dee2f914b2" translate="yes" xml:space="preserve">
          <source>All serialized, remote client messages should be deserialized and forwarded through this function by adapters.</source>
          <target state="translated">모든 직렬화 된 원격 클라이언트 메시지는이 기능을 통해 직렬화 해제되고 어댑터에 의해 전달되어야합니다.</target>
        </trans-unit>
        <trans-unit id="93047db332d3fa7598466b439197809e8a9cb06e" translate="yes" xml:space="preserve">
          <source>All the instrumenter modules that export a &lt;code&gt;render_view/3&lt;/code&gt; function will be notified of the event so that they can perform their respective actions.</source>
          <target state="translated">&lt;code&gt;render_view/3&lt;/code&gt; 함수 를 내보내는 모든 인스트루먼트 모듈은 해당 조치를 수행 할 수 있도록 이벤트에 대한 알림을받습니다.</target>
        </trans-unit>
        <trans-unit id="bee5dcdc1845852a6cf857d54a045b05a91fe4b6" translate="yes" xml:space="preserve">
          <source>Allows a field to be dynamically accessed</source>
          <target state="translated">필드에 동적으로 액세스 할 수 있습니다</target>
        </trans-unit>
        <trans-unit id="500d682f2e570192910057021d322d492c7d8b70" translate="yes" xml:space="preserve">
          <source>Allows a field to be dynamically accessed.</source>
          <target state="translated">필드에 동적으로 액세스 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0feeacfc10a32e5cfe789e8b160f86661a34f0f9" translate="yes" xml:space="preserve">
          <source>Allows instrumenting operation defined by &lt;code&gt;function&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;function&lt;/code&gt; 정의 된 계측 작업 가능</target>
        </trans-unit>
        <trans-unit id="a267a50bfe0914d97c375bc375ed4341bebf430f" translate="yes" xml:space="preserve">
          <source>Allows instrumenting operation defined by &lt;code&gt;function&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;function&lt;/code&gt; 정의 된 계측 작업을 허용합니다 .</target>
        </trans-unit>
        <trans-unit id="008d76871a9d79cfc587210844bce1eeecbd67bd" translate="yes" xml:space="preserve">
          <source>Almost all of the repository operations below accept the following options:</source>
          <target state="translated">아래의 거의 모든 리포지토리 작업은 다음 옵션을 허용합니다.</target>
        </trans-unit>
        <trans-unit id="8b9be8e8ffe8be69521563d9ef94e7723bf5a909" translate="yes" xml:space="preserve">
          <source>Also notice that these pages are going to be shown in production. If you are looking for error handling to help during development, consider using &lt;a href=&quot;plug.debugger&quot;&gt;&lt;code&gt;Plug.Debugger&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">또한이 페이지는 프로덕션에 표시 될 것입니다. 개발 중에 도움이되는 오류 처리를 찾고 있다면 &lt;a href=&quot;plug.debugger&quot;&gt; &lt;code&gt;Plug.Debugger&lt;/code&gt; &lt;/a&gt; 사용을 고려 하십시오 .</target>
        </trans-unit>
        <trans-unit id="2a173642ed7a4ddf0000bbbe1795e679a521c855" translate="yes" xml:space="preserve">
          <source>Also, most adapters provide direct APIs for queries, like &lt;code&gt;Ecto.Adapters.SQL.query/4&lt;/code&gt;, allowing developers to completely bypass Ecto queries.</source>
          <target state="translated">또한 대부분의 어댑터는 &lt;code&gt;Ecto.Adapters.SQL.query/4&lt;/code&gt; 와 같은 쿼리에 대한 직접 API를 제공 하므로 개발자가 Ecto 쿼리를 완전히 무시할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="dd52f213e28e01580c031fd88b310e77b168c916" translate="yes" xml:space="preserve">
          <source>Also, since the store is in-memory, it means sessions are not shared between servers. If you deploy to more than one machine, using this store is again not recommended.</source>
          <target state="translated">또한 저장소가 메모리에 있기 때문에 서버간에 세션이 공유되지 않습니다. 둘 이상의 머신에 배치하는 경우이 저장소를 다시 사용하지 않는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="6a8cf34f26d13a0056310f2520c841766dc8c37c" translate="yes" xml:space="preserve">
          <source>Alternatively, because Ecto does not tie a schema to a given table, we can use separate tables for each association. Let&amp;rsquo;s start over and define a new Comment schema:</source>
          <target state="translated">또는 Ecto가 스키마를 주어진 테이블에 연결하지 않기 때문에 각 연관에 대해 별도의 테이블을 사용할 수 있습니다. 다시 시작하고 새로운 주석 스키마를 정의 해 봅시다 :</target>
        </trans-unit>
        <trans-unit id="8d9e91e29aab7f205ddafcbe7467410ed8756db7" translate="yes" xml:space="preserve">
          <source>Alternatively, read the data again from the database in a separate query. This option requires the primary key to be generated by the database:</source>
          <target state="translated">또는 별도의 쿼리로 데이터베이스에서 데이터를 다시 읽습니다. 이 옵션을 사용하려면 데이터베이스에서 기본 키를 생성해야합니다.</target>
        </trans-unit>
        <trans-unit id="96b57a7146f6ce2d246b6a8f8a80250e9febe6b8" translate="yes" xml:space="preserve">
          <source>Alternatively, the &lt;code&gt;--context-app&lt;/code&gt; option may be supplied to the generator:</source>
          <target state="translated">또는 &lt;code&gt;--context-app&lt;/code&gt; 옵션을 생성기에 제공 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9acd6358ace335206d78edde3fec71a9150e3da0" translate="yes" xml:space="preserve">
          <source>Alternatively, we can make sure that when we create a comment, it is already associated to the post:</source>
          <target state="translated">또는 주석을 작성할 때 주석이 이미 게시물과 연관되어 있는지 확인할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f69c752723942f38a03a10f6c3ef30bc5e097d42" translate="yes" xml:space="preserve">
          <source>Alternatively, you can give both &lt;code&gt;unique_index&lt;/code&gt; and &lt;code&gt;unique_constraint&lt;/code&gt; the same name:</source>
          <target state="translated">또는 &lt;code&gt;unique_index&lt;/code&gt; 와 &lt;code&gt;unique_constraint&lt;/code&gt; 에 동일한 이름을 지정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="91a4516cb4d9630fe735eff5b37d5a2a87dbfc11" translate="yes" xml:space="preserve">
          <source>Alternatively, you could invoke only the Endpoint, and Router:</source>
          <target state="translated">또는 엔드 포인트 및 라우터 만 호출 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="54b850ace8350ffbceab4c0b79db20ea808bef7c" translate="yes" xml:space="preserve">
          <source>Alternatively, you may just want to ack the status of the operation:</source>
          <target state="translated">또는 작업 상태를 확인하고 싶을 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="8b82e0c2efff897466ba5c521ebd48ecd4d5d5b5" translate="yes" xml:space="preserve">
          <source>Although bindings are extremely useful when working with joins, they are not necessary when the query has only the &lt;code&gt;from&lt;/code&gt; clause. For such cases, Ecto supports a way for building queries without specifying the binding:</source>
          <target state="translated">조인 작업시 바인딩은 매우 유용하지만 쿼리에 &lt;code&gt;from&lt;/code&gt; 절만 있는 경우에는 바인딩이 필요하지 않습니다 . 이러한 경우 Ecto는 바인딩을 지정하지 않고 쿼리를 작성하는 방법을 지원합니다.</target>
        </trans-unit>
        <trans-unit id="1f64f45f378a0ba87745eec7c28990a06414ce18" translate="yes" xml:space="preserve">
          <source>Although forms provide the &lt;code&gt;accept-charset&lt;/code&gt; attribute, which we set to UTF-8, Internet Explorer 5 up to 8 may ignore the value of this attribute if the user chooses their browser to do so. This ends up triggering the browser to send data in a format that is not understandable by the server.</source>
          <target state="translated">양식은 &lt;code&gt;accept-charset&lt;/code&gt; 속성을 제공하지만 UTF-8로 설정 했지만 Internet Explorer 5에서 최대 8까지는 사용자가 브라우저를 선택하면이 속성의 값을 무시할 수 있습니다. 이로 인해 서버가 이해할 수없는 형식으로 데이터를 보내도록 브라우저가 트리거됩니다.</target>
        </trans-unit>
        <trans-unit id="17d3aa2c2d04f2fcc928e33bb2ddcbcbfc203565" translate="yes" xml:space="preserve">
          <source>Although in the example above we have directly inserted and deleted the struct in the repository, operations on top of schemas are done through changesets so Ecto can efficiently track changes.</source>
          <target state="translated">위의 예에서 저장소에 구조체를 직접 삽입하고 삭제했지만 스키마 상단의 작업은 변경 세트를 통해 수행되므로 Ecto는 변경을 효율적으로 추적 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c9be422a570b817ed3d855feb6098dce936d8989" translate="yes" xml:space="preserve">
          <source>Although subqueries are not allowed in WHERE expressions, most subqueries in WHERE expression can be rewritten as JOINs. Imagine you want to write this query:</source>
          <target state="translated">WHERE 표현식에서는 서브 쿼리를 사용할 수 없지만 WHERE 표현식의 대부분의 서브 쿼리는 JOIN으로 다시 작성할 수 있습니다. 이 쿼리를 작성한다고 가정하십시오.</target>
        </trans-unit>
        <trans-unit id="2f2a66e6d0030e1b4305c62e74a0858c305811a6" translate="yes" xml:space="preserve">
          <source>Although this function accepts an &lt;code&gt;opts&lt;/code&gt; argument, there are no options currently supported by &lt;a href=&quot;#put_embed/4&quot;&gt;&lt;code&gt;put_embed/4&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 함수는 &lt;code&gt;opts&lt;/code&gt; 인수를 허용하지만 &lt;a href=&quot;#put_embed/4&quot;&gt; &lt;code&gt;put_embed/4&lt;/code&gt; 가&lt;/a&gt; 현재 지원하는 옵션은 없습니다 .</target>
        </trans-unit>
        <trans-unit id="0641530ad7e78210b89579523486c166e2b46440" translate="yes" xml:space="preserve">
          <source>Although using fragments in joins is discouraged in favor of Ecto Query syntax, they are necessary when writing lateral joins as lateral joins require a subquery that refer to previous bindings:</source>
          <target state="translated">Ecto Query 구문을 선호하는 경우 조인에서 조각을 사용하지 않는 것이 좋지만 측면 조인은 이전 바인딩을 참조하는 하위 쿼리가 필요하므로 측면 조인을 작성할 때 필요합니다.</target>
        </trans-unit>
        <trans-unit id="55d091c50c4e2abce0a3176b2d62d4cfb4bd4e84" translate="yes" xml:space="preserve">
          <source>Although we have passed empty lists as options (they are required), you could pass any option there and it would be given to the underlying select input.</source>
          <target state="translated">빈 목록을 옵션으로 전달했지만 (필수), 옵션을 전달할 수 있으며 기본 선택 입력에 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="140149a20a6971f6d5a40d50bec976229608679d" translate="yes" xml:space="preserve">
          <source>Although we used the &lt;code&gt;:through&lt;/code&gt; association in the example above, Ecto also allows developers to dynamically build the through associations using the &lt;a href=&quot;ecto#assoc/2&quot;&gt;&lt;code&gt;Ecto.assoc/2&lt;/code&gt;&lt;/a&gt; function:</source>
          <target state="translated">위 예제에서 &lt;code&gt;:through&lt;/code&gt; 연관을 사용했지만 Ecto를 사용하면 개발자가 &lt;a href=&quot;ecto#assoc/2&quot;&gt; &lt;code&gt;Ecto.assoc/2&lt;/code&gt; &lt;/a&gt; 함수를 사용하여 스루 연관을 동적으로 빌드 할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="24fba89e4fce0a2ce2702abaf702532a39ce135c" translate="yes" xml:space="preserve">
          <source>Always use this function when you need to access the operations you have defined in &lt;a href=&quot;ecto.multi#content&quot;&gt;&lt;code&gt;Ecto.Multi&lt;/code&gt;&lt;/a&gt;. Inspecting the &lt;a href=&quot;ecto.multi#content&quot;&gt;&lt;code&gt;Ecto.Multi&lt;/code&gt;&lt;/a&gt; struct internals directly is discouraged.</source>
          <target state="translated">&lt;a href=&quot;ecto.multi#content&quot;&gt; &lt;code&gt;Ecto.Multi&lt;/code&gt; &lt;/a&gt; 에서 정의한 작업에 액세스해야 할 때 항상이 기능을 사용하십시오 . &lt;a href=&quot;ecto.multi#content&quot;&gt; &lt;code&gt;Ecto.Multi&lt;/code&gt; &lt;/a&gt; 구조체 내부를 직접 검사하는 것은 권장하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="6e5e6980a6207bfda1df7d8524d322c342c91585" translate="yes" xml:space="preserve">
          <source>An AND having query expression</source>
          <target state="translated">쿼리 표현식이있는 AND</target>
        </trans-unit>
        <trans-unit id="ff58307b231d1a6631bb29744d6ded1a8700a2d2" translate="yes" xml:space="preserve">
          <source>An AND having query expression.</source>
          <target state="translated">쿼리 표현식이있는 AND입니다.</target>
        </trans-unit>
        <trans-unit id="d7200124991255eec599c4a84169b97fd56a8907" translate="yes" xml:space="preserve">
          <source>An AND where query expression</source>
          <target state="translated">AND where 쿼리 표현식</target>
        </trans-unit>
        <trans-unit id="8369e04976e5489b84e7a49a7bab27b831a68025" translate="yes" xml:space="preserve">
          <source>An AND where query expression.</source>
          <target state="translated">AND where 쿼리 식입니다.</target>
        </trans-unit>
        <trans-unit id="85f6b794368cf376b191f2b1a8caf6b0c1cae948" translate="yes" xml:space="preserve">
          <source>An Ecto schema is used to map any data source into an Elixir struct. The definition of the schema is possible through two main APIs: &lt;a href=&quot;#schema/2&quot;&gt;&lt;code&gt;schema/2&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#embedded_schema/1&quot;&gt;&lt;code&gt;embedded_schema/1&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Ecto 스키마는 모든 데이터 소스를 Elixir 구조체에 매핑하는 데 사용됩니다. 스키마의 정의는 &lt;a href=&quot;#schema/2&quot;&gt; &lt;code&gt;schema/2&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#embedded_schema/1&quot;&gt; &lt;code&gt;embedded_schema/1&lt;/code&gt; 의&lt;/a&gt; 두 가지 주요 API를 통해 가능합니다 .</target>
        </trans-unit>
        <trans-unit id="9a78c7a83d38ff7d46dcb4af94da86b3e6249f86" translate="yes" xml:space="preserve">
          <source>An Ecto type for UUIDs strings.</source>
          <target state="translated">UUID 문자열에 대한 Ecto 유형입니다.</target>
        </trans-unit>
        <trans-unit id="ee46e7344e9c28c8dc0c8ffba9e6f569b7f50779" translate="yes" xml:space="preserve">
          <source>An Ecto type, primitive or custom</source>
          <target state="translated">Ecto 유형, 기본 또는 사용자 정의</target>
        </trans-unit>
        <trans-unit id="8753ca89d3033960625e32cacf9b8fa1380573d9" translate="yes" xml:space="preserve">
          <source>An Ecto type, primitive or custom.</source>
          <target state="translated">Ecto 유형, 기본 또는 사용자 정의.</target>
        </trans-unit>
        <trans-unit id="1499f024456d3f29759e8d864a77949d738934a4" translate="yes" xml:space="preserve">
          <source>An OR having query expression</source>
          <target state="translated">쿼리 표현식이있는 OR</target>
        </trans-unit>
        <trans-unit id="ba50741815527d5b973e074417869ccab912f791" translate="yes" xml:space="preserve">
          <source>An OR having query expression.</source>
          <target state="translated">쿼리식이있는 OR</target>
        </trans-unit>
        <trans-unit id="23272f9f7cc78f869c4f93ecdc53976c326941ef" translate="yes" xml:space="preserve">
          <source>An OR where query expression</source>
          <target state="translated">OR 식 쿼리 식</target>
        </trans-unit>
        <trans-unit id="6eb1fef5cd61957f88210544d0ec10e50372df50" translate="yes" xml:space="preserve">
          <source>An OR where query expression.</source>
          <target state="translated">OR 식 쿼리 식입니다.</target>
        </trans-unit>
        <trans-unit id="6a2d43b1af1e0b2dcdb60baef14605ef1b374ed9" translate="yes" xml:space="preserve">
          <source>An action is a regular function that receives the connection and the request parameters as arguments. The connection is a &lt;a href=&quot;../plug/1.5.1/plug.conn&quot;&gt;&lt;code&gt;Plug.Conn&lt;/code&gt;&lt;/a&gt; struct, as specified by the Plug library.</source>
          <target state="translated">작업은 연결 및 요청 매개 변수를 인수로받는 일반 함수입니다. 연결은 Plug 라이브러리에 지정된 &lt;a href=&quot;../plug/1.5.1/plug.conn&quot;&gt; &lt;code&gt;Plug.Conn&lt;/code&gt; &lt;/a&gt; 구조체입니다.</target>
        </trans-unit>
        <trans-unit id="bddff83f0e69da582ee7c2d814251936eff28fb7" translate="yes" xml:space="preserve">
          <source>An additional field called &lt;code&gt;__meta__&lt;/code&gt; is added to the struct for storing internal Ecto state. This field always has a &lt;a href=&quot;ecto.schema.metadata&quot;&gt;&lt;code&gt;Ecto.Schema.Metadata&lt;/code&gt;&lt;/a&gt; struct as value and can be manipulated with the &lt;a href=&quot;ecto#put_meta/2&quot;&gt;&lt;code&gt;Ecto.put_meta/2&lt;/code&gt;&lt;/a&gt; function.</source>
          <target state="translated">내부 Ecto 상태를 저장하기 위해 &lt;code&gt;__meta__&lt;/code&gt; 라는 추가 필드 가 구조체에 추가됩니다. 이 필드는 항상 &lt;a href=&quot;ecto.schema.metadata&quot;&gt; &lt;code&gt;Ecto.Schema.Metadata&lt;/code&gt; &lt;/a&gt; 구조체를 값으로 가지며 &lt;a href=&quot;ecto#put_meta/2&quot;&gt; &lt;code&gt;Ecto.put_meta/2&lt;/code&gt; &lt;/a&gt; 함수를 사용하여 조작 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="fae9eb87297abc7420a4adb2f4971432ff909c98" translate="yes" xml:space="preserve">
          <source>An additional keyword list &lt;code&gt;keys&lt;/code&gt; can be passed to provide additional contextual information for the error. This is useful when using &lt;a href=&quot;#traverse_errors/2&quot;&gt;&lt;code&gt;traverse_errors/2&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">오류에 대한 추가 컨텍스트 정보를 제공하기 위해 추가 키워드 목록 &lt;code&gt;keys&lt;/code&gt; 를 전달할 수 있습니다. &lt;a href=&quot;#traverse_errors/2&quot;&gt; &lt;code&gt;traverse_errors/2&lt;/code&gt; 를&lt;/a&gt; 사용할 때 유용합니다</target>
        </trans-unit>
        <trans-unit id="3cbecaa468000b1cd8e9438a0f21c36bad5b7afb" translate="yes" xml:space="preserve">
          <source>An embedded schema is either embedded into another schema or kept exclusively in memory. For this reason, an embedded schema does not require a source name and it does not include a metadata field.</source>
          <target state="translated">임베드 된 스키마는 다른 스키마에 임베드되거나 독점적으로 메모리에 보관됩니다. 이러한 이유로 임베디드 스키마에는 소스 이름이 필요하지 않으며 메타 데이터 필드가 포함되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="7ab7ad8e3a3ea01a0e010a1f3d78b1a31b131365" translate="yes" xml:space="preserve">
          <source>An empty request body is parsed as an empty map.</source>
          <target state="translated">빈 요청 본문은 빈 맵으로 구문 분석됩니다.</target>
        </trans-unit>
        <trans-unit id="3b4b6b176041a548d4533de816c409382e35bce6" translate="yes" xml:space="preserve">
          <source>An endpoint is simply a module defined with the help of &lt;a href=&quot;phoenix.endpoint#content&quot;&gt;&lt;code&gt;Phoenix.Endpoint&lt;/code&gt;&lt;/a&gt;. If you have used the &lt;code&gt;mix phx.new&lt;/code&gt; generator, an endpoint was automatically generated as part of your application:</source>
          <target state="translated">엔드 포인트는 단순히 &lt;a href=&quot;phoenix.endpoint#content&quot;&gt; &lt;code&gt;Phoenix.Endpoint&lt;/code&gt; &lt;/a&gt; 의 도움으로 정의 된 모듈 입니다. &lt;code&gt;mix phx.new&lt;/code&gt; 생성기를 사용한 경우 애플리케이션의 일부로 엔드 포인트가 자동으로 생성되었습니다.</target>
        </trans-unit>
        <trans-unit id="cde03332fee4ff115f16002c9f108e996e9a75a6" translate="yes" xml:space="preserve">
          <source>An error occurred and it will be handled by a different mechanism than the &lt;a href=&quot;https://hexdocs.pm/elixir/Supervisor.html&quot;&gt;&lt;code&gt;Supervisor&lt;/code&gt;&lt;/a&gt;. Likely this approach involves calling &lt;a href=&quot;https://hexdocs.pm/elixir/Supervisor.html#restart_child/2&quot;&gt;&lt;code&gt;Supervisor.restart_child/2&lt;/code&gt;&lt;/a&gt; after a delay to attempt a restart.</source>
          <target state="translated">오류가 발생했으며 &lt;a href=&quot;https://hexdocs.pm/elixir/Supervisor.html&quot;&gt; &lt;code&gt;Supervisor&lt;/code&gt; &lt;/a&gt; 와 다른 메커니즘으로 처리됩니다 . 이 방법은 지연 후 재 시도를 시도한 후 &lt;a href=&quot;https://hexdocs.pm/elixir/Supervisor.html#restart_child/2&quot;&gt; &lt;code&gt;Supervisor.restart_child/2&lt;/code&gt; &lt;/a&gt; 를 호출하는 것과 관련이 있습니다.</target>
        </trans-unit>
        <trans-unit id="85d6ba7886e5493304a69c583a7b939934f2bf94" translate="yes" xml:space="preserve">
          <source>An except (set difference) query expression</source>
          <target state="translated">예외 (차이) 쿼리 표현식</target>
        </trans-unit>
        <trans-unit id="a5b26fb8a6cee45d37102dcd6e34101d2586040f" translate="yes" xml:space="preserve">
          <source>An except (set difference) query expression.</source>
          <target state="translated">예외 (차이) 쿼리 표현식입니다.</target>
        </trans-unit>
        <trans-unit id="b2a86c97233377ac8c34017ea9c780741efcd5ce" translate="yes" xml:space="preserve">
          <source>An informational response, such as an early hint, must happen prior to a response being sent. If an informational request is attempted after a response is sent then a &lt;a href=&quot;plug.conn.alreadysenterror&quot;&gt;&lt;code&gt;Plug.Conn.AlreadySentError&lt;/code&gt;&lt;/a&gt; will be raised. Only status codes from 100-199 are valid.</source>
          <target state="translated">초기 힌트와 같은 정보 응답은 응답을 보내기 전에 발생해야합니다. 응답이 전송 된 후 정보 요청이 시도되면 &lt;a href=&quot;plug.conn.alreadysenterror&quot;&gt; &lt;code&gt;Plug.Conn.AlreadySentError&lt;/code&gt; &lt;/a&gt; 가 발생합니다. 100-199의 상태 코드 만 유효합니다.</target>
        </trans-unit>
        <trans-unit id="c082ed6b2def64ed72b5ea45a1fc1293aa16df24" translate="yes" xml:space="preserve">
          <source>An intersect query expression</source>
          <target state="translated">교차 쿼리 표현식</target>
        </trans-unit>
        <trans-unit id="f37d10b2a22904ef45fb94fc0d7c0dcd59a32a4d" translate="yes" xml:space="preserve">
          <source>An intersect query expression.</source>
          <target state="translated">교차 쿼리 표현식입니다.</target>
        </trans-unit>
        <trans-unit id="869fb8b610e0b6bb65e566732a732a81015cf3d5" translate="yes" xml:space="preserve">
          <source>An offset query expression</source>
          <target state="translated">오프셋 쿼리 식</target>
        </trans-unit>
        <trans-unit id="165b52f75af17c46b4b3fa96c13c255f0bde19ed" translate="yes" xml:space="preserve">
          <source>An offset query expression.</source>
          <target state="translated">오프셋 쿼리 식입니다.</target>
        </trans-unit>
        <trans-unit id="79928e4dd3b57a8c42acb325b5879c6056476cbb" translate="yes" xml:space="preserve">
          <source>An order by query expression</source>
          <target state="translated">쿼리 표현 식별 순서</target>
        </trans-unit>
        <trans-unit id="10e6e45231ed552f934b7c86d653cb891f6f2153" translate="yes" xml:space="preserve">
          <source>An order by query expression.</source>
          <target state="translated">쿼리 식별 순서입니다.</target>
        </trans-unit>
        <trans-unit id="22439862de76cde9fbf60016e20e02131f76032d" translate="yes" xml:space="preserve">
          <source>An update query expression</source>
          <target state="translated">업데이트 쿼리 식</target>
        </trans-unit>
        <trans-unit id="ffcb9217c46e5f5eaa187819e15623ec94356a15" translate="yes" xml:space="preserve">
          <source>An update query expression.</source>
          <target state="translated">업데이트 쿼리 식입니다.</target>
        </trans-unit>
        <trans-unit id="d32de79e50a18b2c10b2499fb3ad6f596ca4c0db" translate="yes" xml:space="preserve">
          <source>And now we want to make sure to return both the post title and the comment body. Although we may not know how many bindings there are in the query, we are sure posts is the first binding and comments are the last one, so we can write:</source>
          <target state="translated">이제 게시물 제목과 댓글 본문을 모두 반환해야합니다. 쿼리에 몇 개의 바인딩이 있는지 알 수 없지만 게시물이 첫 번째 바인딩이고 주석이 마지막 바인딩이므로 다음과 같이 작성할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="50fb2f2cee17d104e440238643e1e3cbf6bf874f" translate="yes" xml:space="preserve">
          <source>And now you can use it in accepts too:</source>
          <target state="translated">그리고 이제 당신도 그것을 받아 들일 수 있습니다 :</target>
        </trans-unit>
        <trans-unit id="858ad2f63ffc7c337c04d12219e741685eb346ff" translate="yes" xml:space="preserve">
          <source>Annotates a plug will receive the options given to the current module itself as arguments</source>
          <target state="translated">플러그는 현재 모듈 자체에 인수로 주어진 옵션을 받게됩니다.</target>
        </trans-unit>
        <trans-unit id="3ca7c7d5899dadd1120e30c45c0410c89a0f196d" translate="yes" xml:space="preserve">
          <source>Annotates a plug will receive the options given to the current module itself as arguments.</source>
          <target state="translated">주석은 플러그가 현재 모듈 자체에 인수로 주어진 옵션을받습니다.</target>
        </trans-unit>
        <trans-unit id="6c7f32ee11fa615e66a13dec2e34a0dfb1c524e9" translate="yes" xml:space="preserve">
          <source>Another advantage of using schemas is that we no longer need to specify the select option in queries, as by default Ecto will retrieve all fields specified in the schema:</source>
          <target state="translated">스키마 사용의 또 다른 장점은 기본적으로 Ecto가 스키마에 지정된 모든 필드를 검색하므로 쿼리에서 선택 옵션을 지정할 필요가 없다는 것입니다.</target>
        </trans-unit>
        <trans-unit id="3aef06e4e0539721c1ea8108e13b3694b5a7fb56" translate="yes" xml:space="preserve">
          <source>Another function in &lt;a href=&quot;ecto#content&quot;&gt;&lt;code&gt;Ecto&lt;/code&gt;&lt;/a&gt; is &lt;a href=&quot;#build_assoc/3&quot;&gt;&lt;code&gt;build_assoc/3&lt;/code&gt;&lt;/a&gt;, which allows someone to build an associated struct with the proper fields:</source>
          <target state="translated">&lt;a href=&quot;ecto#content&quot;&gt; &lt;code&gt;Ecto&lt;/code&gt; 의&lt;/a&gt; 또 다른 함수 는 &lt;a href=&quot;#build_assoc/3&quot;&gt; &lt;code&gt;build_assoc/3&lt;/code&gt; &lt;/a&gt; 이며,이를 통해 누군가가 적절한 필드로 관련 구조체를 만들 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="fd51eafaf130785ca495e1b2d9c65d26d8d92ea8" translate="yes" xml:space="preserve">
          <source>Another option for flexibly building queries with joins are named bindings. Coming back to the previous example, provided we bind a join to a concrete name:</source>
          <target state="translated">조인으로 유연하게 쿼리를 작성하는 또 다른 옵션은 이름 지정된 바인딩입니다. 이전 예제로 돌아가서 구체적인 이름에 조인을 바인딩하면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="446a599b7f56e42924adcc359314759564aef04a" translate="yes" xml:space="preserve">
          <source>Any key in &lt;code&gt;on&lt;/code&gt; will apply to the currently joined expression.</source>
          <target state="translated">의 모든 키 &lt;code&gt;on&lt;/code&gt; 현재 가입 표현에 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="7975e28c47c5f1c7d5d84990d36a6f61381c95cb" translate="yes" xml:space="preserve">
          <source>Any of those choices can be disabled on a per choice basis by specifying the equivalent SSL option alongside the cipher suite.</source>
          <target state="translated">암호화 제품군과 함께 동등한 SSL 옵션을 지정하여 선택 사항별로 선택 사항을 사용하지 않을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="75f75593bfe3c7c9fa04ff0433e00417f5df7957" translate="yes" xml:space="preserve">
          <source>Any parameter that was not explicitly listed in the fields list will be ignored.</source>
          <target state="translated">필드 목록에 명시 적으로 나열되지 않은 매개 변수는 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="41770eb3e1ebe73b5cee06e82ee72c33af97f4d3" translate="yes" xml:space="preserve">
          <source>Any preload or select in the query will be ignored in favor of the column being aggregated.</source>
          <target state="translated">쿼리에서 사전로드 또는 선택은 집계되는 열을 위해 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="300cfabfd4866cec4228fbe86fd289ab17ee02d3" translate="yes" xml:space="preserve">
          <source>Any schema module will generate the &lt;code&gt;__schema__&lt;/code&gt; function that can be used for runtime introspection of the schema:</source>
          <target state="translated">모든 스키마 모듈은 스키마의 런타임 내부 검사에 사용할 수있는 &lt;code&gt;__schema__&lt;/code&gt; 함수를 생성합니다 .</target>
        </trans-unit>
        <trans-unit id="6e3a58d59ec917c307d1a1fb3de7a558a9eaf30c" translate="yes" xml:space="preserve">
          <source>Any schemas using &lt;code&gt;MyApp.Schema&lt;/code&gt; will get the &lt;code&gt;:id&lt;/code&gt; field with type &lt;code&gt;:binary_id&lt;/code&gt; as the primary key. We explain what the &lt;code&gt;:binary_id&lt;/code&gt; type entails in the next section.</source>
          <target state="translated">&lt;code&gt;MyApp.Schema&lt;/code&gt; 를 사용하는 모든 스키마 는 &lt;code&gt;:binary_id&lt;/code&gt; 유형 의 &lt;code&gt;:id&lt;/code&gt; 필드를 기본 키로 가져옵니다 . 다음 섹션에서 &lt;code&gt;:binary_id&lt;/code&gt; 유형의 내용을 설명 합니다.</target>
        </trans-unit>
        <trans-unit id="5a47721bdd6f49dc71fd1d1d556d93aeac0052dc" translate="yes" xml:space="preserve">
          <source>Any topic coming into the router with the &lt;code&gt;&quot;room:&quot;&lt;/code&gt; prefix would dispatch to &lt;code&gt;MyApp.RoomChannel&lt;/code&gt; in the above example. Topics can also be pattern matched in your channels&amp;rsquo; &lt;code&gt;join/3&lt;/code&gt; callback to pluck out the scoped pattern:</source>
          <target state="translated">접두사가 &lt;code&gt;&quot;room:&quot;&lt;/code&gt; 라우터로 들어오는 모든 주제 는 위 예에서 &lt;code&gt;MyApp.RoomChannel&lt;/code&gt; 로 발송됩니다 . 채널의 &lt;code&gt;join/3&lt;/code&gt; 콜백 에서 주제를 패턴 일치 하여 범위가 지정된 패턴을 추출 할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="4f22fd2991e728e7d7b2e3f805e73ae5fa52bfbf" translate="yes" xml:space="preserve">
          <source>Any value can be used on the right-side of &lt;code&gt;in&lt;/code&gt; as long as it implements the &lt;a href=&quot;ecto.queryable&quot;&gt;&lt;code&gt;Ecto.Queryable&lt;/code&gt;&lt;/a&gt; protocol. For now, we know the protocol is implemented for both atoms (like &lt;code&gt;User&lt;/code&gt;) and strings (like &amp;ldquo;users&amp;rdquo;).</source>
          <target state="translated">상관 값의 오른쪽에 이용 될 수 &lt;code&gt;in&lt;/code&gt; 한 그것이 구현으로 &lt;a href=&quot;ecto.queryable&quot;&gt; &lt;code&gt;Ecto.Queryable&lt;/code&gt; &lt;/a&gt; 프로토콜. 현재는 &lt;code&gt;User&lt;/code&gt; 와 같은 원자 와 문자열 ( &quot;users&quot;) 모두에 프로토콜이 구현되어 있음을 알고 있습니다.</target>
        </trans-unit>
        <trans-unit id="b887cbd7add6f099fb444c6f2429533dcfaf8283" translate="yes" xml:space="preserve">
          <source>Appends the second multi to the first one</source>
          <target state="translated">두 번째 멀티를 첫 번째 멀티에 추가</target>
        </trans-unit>
        <trans-unit id="b9edef6586142e33c6c60f9e0c8390125159a8a7" translate="yes" xml:space="preserve">
          <source>Appends the second multi to the first one.</source>
          <target state="translated">두 번째 멀티를 첫 번째 멀티에 추가합니다.</target>
        </trans-unit>
        <trans-unit id="334894d99b92fe73d7e7aa140d76f7f561fafb65" translate="yes" xml:space="preserve">
          <source>Applies optimistic locking to the changeset</source>
          <target state="translated">변경 세트에 낙관적 잠금 적용</target>
        </trans-unit>
        <trans-unit id="4361b172649775394dfd72f667908efc6452872f" translate="yes" xml:space="preserve">
          <source>Applies optimistic locking to the changeset.</source>
          <target state="translated">변경 세트에 낙관적 잠금을 적용합니다.</target>
        </trans-unit>
        <trans-unit id="031274fb912bb51836441a5c22085b2001b18f45" translate="yes" xml:space="preserve">
          <source>Applies the changeset action only if the changes are valid</source>
          <target state="translated">변경 사항이 유효한 경우에만 변경 사항 조치를 적용합니다.</target>
        </trans-unit>
        <trans-unit id="b050c53ebe07c3d28361a411d8cbd7b0f72b7844" translate="yes" xml:space="preserve">
          <source>Applies the changeset action only if the changes are valid.</source>
          <target state="translated">변경 사항이 유효한 경우에만 변경 사항 조치를 적용합니다.</target>
        </trans-unit>
        <trans-unit id="2761b7d6b04d3d8fdfdb82fe84e797e17b5c434a" translate="yes" xml:space="preserve">
          <source>Applies the changeset changes to the changeset data</source>
          <target state="translated">변경 세트 변경 사항을 변경 세트 데이터에 적용</target>
        </trans-unit>
        <trans-unit id="58edcf307fce02ffe026656721ed37ef1c218b4f" translate="yes" xml:space="preserve">
          <source>Applies the changeset changes to the changeset data.</source>
          <target state="translated">변경 세트 변경 사항을 변경 세트 데이터에 적용합니다.</target>
        </trans-unit>
        <trans-unit id="f1c024b9973dc724f6ab98ed916d0ccb4c1312df" translate="yes" xml:space="preserve">
          <source>Applies the given &lt;code&gt;params&lt;/code&gt; as changes for the given &lt;code&gt;data&lt;/code&gt; according to the given set of &lt;code&gt;permitted&lt;/code&gt; keys. Returns a changeset</source>
          <target state="translated">주어진 &lt;code&gt;permitted&lt;/code&gt; 키 세트에 따라 주어진 &lt;code&gt;params&lt;/code&gt; 를 주어진 &lt;code&gt;data&lt;/code&gt; 에 대한 변경으로 적용합니다 . 변경 세트를 돌려줍니다</target>
        </trans-unit>
        <trans-unit id="f1c1d0d5bec454128305edccd7c51e64e4e6fa92" translate="yes" xml:space="preserve">
          <source>Applies the given &lt;code&gt;params&lt;/code&gt; as changes for the given &lt;code&gt;data&lt;/code&gt; according to the given set of &lt;code&gt;permitted&lt;/code&gt; keys. Returns a changeset.</source>
          <target state="translated">주어진 &lt;code&gt;permitted&lt;/code&gt; 키 세트에 따라 주어진 &lt;code&gt;params&lt;/code&gt; 를 주어진 &lt;code&gt;data&lt;/code&gt; 에 대한 변경으로 적용합니다 . 변경 세트를 돌려줍니다.</target>
        </trans-unit>
        <trans-unit id="86680b93bfe5f3d5e136ea751760d9739bc9e99c" translate="yes" xml:space="preserve">
          <source>Applies the given expression as a FILTER clause against an aggregate. This is currently only supported by Postgres</source>
          <target state="translated">주어진 표현식을 집계에 대해 FILTER 절로 적용합니다. 이것은 현재 Postgres에서만 지원됩니다</target>
        </trans-unit>
        <trans-unit id="0ea218082f0918b6c6d6196ff4808dba4c0ad11c" translate="yes" xml:space="preserve">
          <source>Applies the given expression as a FILTER clause against an aggregate. This is currently only supported by Postgres.</source>
          <target state="translated">주어진 표현식을 집계에 대해 FILTER 절로 적용합니다. 이것은 현재 Postgres에서만 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="cbb9fa252e60809efa55a7ad83aea5438ef56753" translate="yes" xml:space="preserve">
          <source>Arguments</source>
          <target state="translated">Arguments</target>
        </trans-unit>
        <trans-unit id="12ba74c0de8af933a3a3f56bbea3b38757e06f95" translate="yes" xml:space="preserve">
          <source>Arithmetic operators: &lt;code&gt;+&lt;/code&gt;, &lt;code&gt;-&lt;/code&gt;, &lt;code&gt;*&lt;/code&gt;, &lt;code&gt;/&lt;/code&gt;</source>
          <target state="translated">산술 연산자 : &lt;code&gt;+&lt;/code&gt; , &lt;code&gt;-&lt;/code&gt; , &lt;code&gt;*&lt;/code&gt; , &lt;code&gt;/&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7aee5aacb98321221728d086e57edc8138d0ba9b" translate="yes" xml:space="preserve">
          <source>Arrays: &lt;code&gt;[1, 2, 3]&lt;/code&gt;, &lt;code&gt;~w(interpolate words)&lt;/code&gt;</source>
          <target state="translated">배열 : &lt;code&gt;[1, 2, 3]&lt;/code&gt; , &lt;code&gt;~w(interpolate words)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b1a93145914c19a817e2f83d25abe14b25ed5208" translate="yes" xml:space="preserve">
          <source>As a convenience, &lt;code&gt;select&lt;/code&gt; allows developers to take fields without an explicit call to &lt;a href=&quot;#struct/2&quot;&gt;&lt;code&gt;struct/2&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">편의상 &lt;code&gt;select&lt;/code&gt; 를 사용하면 개발자가 &lt;a href=&quot;#struct/2&quot;&gt; &lt;code&gt;struct/2&lt;/code&gt; &lt;/a&gt; 를 명시 적으로 호출하지 않고도 필드를 가져올 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="c498ddcfc7c00342094648686289bc00b3b0dc5c" translate="yes" xml:space="preserve">
          <source>As an example, imagine &lt;code&gt;:title&lt;/code&gt; is marked as a unique column in the database:</source>
          <target state="translated">예를 들어 상상 &lt;code&gt;:title&lt;/code&gt; 은 데이터베이스에서 고유 한 열로 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="fddced341e63f42b257c605c248116bc9912aea3" translate="yes" xml:space="preserve">
          <source>As controllers are plugs, they implement both &lt;code&gt;init/1&lt;/code&gt; and &lt;code&gt;call/2&lt;/code&gt;, and it also provides a function named &lt;code&gt;action/2&lt;/code&gt; which is responsible for dispatching the appropriate action after the plug stack (and is also overridable).</source>
          <target state="translated">컨트롤러는 플러그이므로 &lt;code&gt;init/1&lt;/code&gt; 과 &lt;code&gt;call/2&lt;/code&gt; 를 모두 구현하며 , 플러그 스택 이후에 적절한 조치를 전달하는 역할을하는 &lt;code&gt;action/2&lt;/code&gt; 라는 함수를 제공합니다 (재정의 가능).</target>
        </trans-unit>
        <trans-unit id="2f2c06fb780697e369f25f7c87ee7118c0b20715" translate="yes" xml:space="preserve">
          <source>As in your application, the connection is also the main abstraction in testing. &lt;code&gt;build_conn()&lt;/code&gt; returns a new connection and functions in this module can be used to manipulate the connection before dispatching to the endpoint.</source>
          <target state="translated">응용 프로그램에서와 마찬가지로 연결도 테스트의 주요 추상화입니다. &lt;code&gt;build_conn()&lt;/code&gt; 은 새 연결을 반환 하며이 모듈의 함수를 사용하여 끝점으로 디스패치하기 전에 연결을 조작 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9152bca7977631eb6dcbaafbab88915d2ad4c4e4" translate="yes" xml:space="preserve">
          <source>As the name says, a constraint is required in the database for this function to work. Such constraint is often added as a reference to the child table:</source>
          <target state="translated">이름에서 알 수 있듯이이 기능이 작동하려면 데이터베이스에 제한이 필요합니다. 이러한 제약 조건은 종종 자식 테이블에 대한 참조로 추가됩니다.</target>
        </trans-unit>
        <trans-unit id="16ef7ec7284c632cb98296deb90a681d81b3ec19" translate="yes" xml:space="preserve">
          <source>As this configuration is Plug specific, Plug will need to be recompiled for the changes to take place: this will not happen automatically as dependencies are not automatically recompiled when their configuration changes. To recompile Plug:</source>
          <target state="translated">이 구성은 플러그 전용이므로 변경 사항을 적용하려면 플러그를 다시 컴파일해야합니다. 구성이 변경 될 때 종속성이 자동으로 다시 컴파일되지 않으므로 자동으로 발생하지 않습니다. 플러그를 다시 컴파일하려면</target>
        </trans-unit>
        <trans-unit id="868db82198436ae137106ae18a1c27c3628d32a7" translate="yes" xml:space="preserve">
          <source>As with routers, controllers also have their own plug pipeline. However, different from routers, controllers have a single pipeline:</source>
          <target state="translated">라우터와 마찬가지로 컨트롤러에도 자체 플러그 파이프 라인이 있습니다. 그러나 라우터와 달리 컨트롤러에는 단일 파이프 라인이 있습니다.</target>
        </trans-unit>
        <trans-unit id="475b9e09b92d98b6d96cb1e2b9b95148e9c2b0c7" translate="yes" xml:space="preserve">
          <source>Asks if the user wants to open a file based on ECTO_EDITOR</source>
          <target state="translated">사용자가 ECTO_EDITOR를 기반으로 파일을 열려고하는지 묻습니다.</target>
        </trans-unit>
        <trans-unit id="006f6f8b5cb840127d26d2d28ee9849be1f8d9fc" translate="yes" xml:space="preserve">
          <source>Asks if the user wants to open a file based on ECTO_EDITOR.</source>
          <target state="translated">사용자가 ECTO_EDITOR를 기반으로 파일을 열지 여부를 묻습니다.</target>
        </trans-unit>
        <trans-unit id="bb8d826fc68bb29920fcc1466f25e2e36d3d47b6" translate="yes" xml:space="preserve">
          <source>Asserts an error was wrapped and sent with the given status</source>
          <target state="translated">주어진 상태로 오류가 랩핑되어 전송되었음을 확인</target>
        </trans-unit>
        <trans-unit id="14dacb2eaf39d88a53c805aade746d59005bd40d" translate="yes" xml:space="preserve">
          <source>Asserts an error was wrapped and sent with the given status.</source>
          <target state="translated">주어진 상태로 오류가 랩핑되어 전송되었다고 가정합니다.</target>
        </trans-unit>
        <trans-unit id="f561847fbcc30ef099c2fdb4d7f9ecbb769368b9" translate="yes" xml:space="preserve">
          <source>Asserts the channel has broadcast a message within &lt;code&gt;timeout&lt;/code&gt;</source>
          <target state="translated">채널이 &lt;code&gt;timeout&lt;/code&gt; 내에 메시지를 브로드 캐스트했다고 가정합니다.</target>
        </trans-unit>
        <trans-unit id="69c1aafea3e15d75f9b8e5e7f4b7ee180908fa25" translate="yes" xml:space="preserve">
          <source>Asserts the channel has broadcast a message within &lt;code&gt;timeout&lt;/code&gt;.</source>
          <target state="translated">채널이 &lt;code&gt;timeout&lt;/code&gt; 내에 메시지를 브로드 캐스트했는지 확인합니다 .</target>
        </trans-unit>
        <trans-unit id="c1e0c079e28ea0e490465ee00c1b2e6b15935463" translate="yes" xml:space="preserve">
          <source>Asserts the channel has not broadcast a message within &lt;code&gt;timeout&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;timeout&lt;/code&gt; 내에 채널이 메시지를 브로드 캐스트하지 않았 음을 확인합니다.</target>
        </trans-unit>
        <trans-unit id="c140d2f9a5c6e70b4bddb0b29be0b82e3d7034fa" translate="yes" xml:space="preserve">
          <source>Asserts the channel has not broadcast a message within &lt;code&gt;timeout&lt;/code&gt;.</source>
          <target state="translated">채널이 &lt;code&gt;timeout&lt;/code&gt; 내에 메시지를 브로드 캐스트하지 않았 음을 확인 합니다.</target>
        </trans-unit>
        <trans-unit id="d424205c41f2118eb9fd5a7f0610874508d900e3" translate="yes" xml:space="preserve">
          <source>Asserts the channel has not pushed a message to the client matching the given event and payload within &lt;code&gt;timeout&lt;/code&gt;</source>
          <target state="translated">채널이 지정된 이벤트 및 페이로드가 &lt;code&gt;timeout&lt;/code&gt; 내에 일치하는 메시지를 클라이언트에 푸시하지 않았 음을 확인합니다.</target>
        </trans-unit>
        <trans-unit id="dd195750fce0de0311eeab0dd8758295106faf6a" translate="yes" xml:space="preserve">
          <source>Asserts the channel has not pushed a message to the client matching the given event and payload within &lt;code&gt;timeout&lt;/code&gt;.</source>
          <target state="translated">채널이 지정된 이벤트 및 페이로드가 &lt;code&gt;timeout&lt;/code&gt; 내에 일치하는 메시지를 클라이언트에 푸시하지 않았 음을 확인합니다 .</target>
        </trans-unit>
        <trans-unit id="f37dd31b07d6e30495dbce12a320ab6f115b7072" translate="yes" xml:space="preserve">
          <source>Asserts the channel has not replied with a matching payload within &lt;code&gt;timeout&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;timeout&lt;/code&gt; 내에 채널이 일치하는 페이로드로 응답하지 않았 음을 확인합니다.</target>
        </trans-unit>
        <trans-unit id="f543c3267625ded4bf34a8f8595eb6f80560c8b7" translate="yes" xml:space="preserve">
          <source>Asserts the channel has not replied with a matching payload within &lt;code&gt;timeout&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;timeout&lt;/code&gt; 내에 채널이 일치하는 페이로드로 응답하지 않았 음을 확인합니다 .</target>
        </trans-unit>
        <trans-unit id="fb8e710870c1e8f2ae11881ad6a7b9f893cf92f6" translate="yes" xml:space="preserve">
          <source>Asserts the channel has pushed a message back to the client with the given event and payload within &lt;code&gt;timeout&lt;/code&gt;</source>
          <target state="translated">지정된 이벤트 및 페이로드가 &lt;code&gt;timeout&lt;/code&gt; 내에 채널에서 클라이언트로 메시지를 푸시했다고 가정합니다.</target>
        </trans-unit>
        <trans-unit id="6fb7f0ad50740a6b05d2126fa477ce96ef0a8211" translate="yes" xml:space="preserve">
          <source>Asserts the channel has pushed a message back to the client with the given event and payload within &lt;code&gt;timeout&lt;/code&gt;.</source>
          <target state="translated">지정된 이벤트 및 페이로드가 &lt;code&gt;timeout&lt;/code&gt; 내에 채널이 클라이언트에 메시지를 다시 푸시했다고 가정합니다 .</target>
        </trans-unit>
        <trans-unit id="c887a57a1301c3376a8b187b83da77d3b9304d5f" translate="yes" xml:space="preserve">
          <source>Asserts the channel has replied to the given message within &lt;code&gt;timeout&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;timeout&lt;/code&gt; 내에 채널이 지정된 메시지에 응답했는지 확인</target>
        </trans-unit>
        <trans-unit id="6ddf47c3c727b5b98212842dc153fb9ef73dfb67" translate="yes" xml:space="preserve">
          <source>Asserts the channel has replied to the given message within &lt;code&gt;timeout&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;timeout&lt;/code&gt; 내에 채널이 지정된 메시지에 응답했는지 확인합니다 .</target>
        </trans-unit>
        <trans-unit id="ea30be74b1b6dfeafbc74b5278e93a1ef8635f78" translate="yes" xml:space="preserve">
          <source>Asserts the given status code and returns the response body if one was set or sent</source>
          <target state="translated">주어진 상태 코드를 확인하고 설정 또는 전송 된 경우 응답 본문을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="40aec7b844428bccf332b76d4a7cea4d73c9f80b" translate="yes" xml:space="preserve">
          <source>Asserts the given status code and returns the response body if one was set or sent.</source>
          <target state="translated">주어진 상태 코드를 확인하고 설정 또는 전송 된 경우 응답 본문을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="4361d343642668ab91330760dcb1e9daf427439b" translate="yes" xml:space="preserve">
          <source>Asserts the given status code, that we have an html response and returns the response body if one was set or sent</source>
          <target state="translated">주어진 상태 코드를 확인합니다. HTML 응답이 있고 응답 본문이 설정되거나 전송 된 경우 응답 본문을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="01ce9d8e19df4acc7484e73368b791392c2f5b64" translate="yes" xml:space="preserve">
          <source>Asserts the given status code, that we have an html response and returns the response body if one was set or sent.</source>
          <target state="translated">주어진 상태 코드를 확인하여 HTML 응답이 있고 응답 본문이 설정되거나 전송 된 경우 응답 본문을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="94ee684deb18054648b499b661eaeadc364ac50c" translate="yes" xml:space="preserve">
          <source>Asserts the given status code, that we have an json response and returns the decoded JSON response if one was set or sent</source>
          <target state="translated">주어진 상태 코드를 확인합니다. json 응답이 있고 디코딩 된 JSON 응답이 설정되거나 전송 된 경우이를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="ad672702a882d944ba4089007ddd2cb6a47abb2f" translate="yes" xml:space="preserve">
          <source>Asserts the given status code, that we have an json response and returns the decoded JSON response if one was set or sent.</source>
          <target state="translated">주어진 상태 코드를 확인하여 json 응답이 있고 디코딩 된 JSON 응답이 설정되거나 전송 된 경우이를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="0b22bfbfa6302d6cc628263305e33e5e5b9d808c" translate="yes" xml:space="preserve">
          <source>Asserts the given status code, that we have an text response and returns the response body if one was set or sent</source>
          <target state="translated">주어진 상태 코드를 확인하여 텍스트 응답이 있고 응답 본문이 설정되거나 전송 된 경우 응답 본문을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="d7d64fc3c8c80b2f0927ca8acf2d9a14e5e45982" translate="yes" xml:space="preserve">
          <source>Asserts the given status code, that we have an text response and returns the response body if one was set or sent.</source>
          <target state="translated">주어진 상태 코드를 확인하여 텍스트 응답이 있고 응답 본문이 설정되거나 전송 된 경우 응답 본문을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="9f2a0cc5f167ef3113974a9fe34af5506e805041" translate="yes" xml:space="preserve">
          <source>Assigns</source>
          <target state="translated">Assigns</target>
        </trans-unit>
        <trans-unit id="574364eee69f68c55eb9dcc71dd468285d889db6" translate="yes" xml:space="preserve">
          <source>Assigns a new &lt;strong&gt;private&lt;/strong&gt; key and value in the connection</source>
          <target state="translated">연결에 새로운 &lt;strong&gt;개인&lt;/strong&gt; 키와 값을 할당 합니다</target>
        </trans-unit>
        <trans-unit id="bd83d5499e834c53bd79fb4fa56ff025df78093c" translate="yes" xml:space="preserve">
          <source>Assigns a new &lt;strong&gt;private&lt;/strong&gt; key and value in the connection.</source>
          <target state="translated">연결에 새로운 &lt;strong&gt;개인&lt;/strong&gt; 키와 값을 할당 합니다.</target>
        </trans-unit>
        <trans-unit id="ee9efccff63c64323b5a4f98fca8d2c724142663" translate="yes" xml:space="preserve">
          <source>Assigns a value to a key in the connection</source>
          <target state="translated">연결에서 키에 값을 할당합니다</target>
        </trans-unit>
        <trans-unit id="da5add16ce8a8cf627204ed4d5648a3d1ca3a351" translate="yes" xml:space="preserve">
          <source>Assigns a value to a key in the connection.</source>
          <target state="translated">연결에서 키에 값을 할당합니다.</target>
        </trans-unit>
        <trans-unit id="9c6b589d013aaba3d63ab9b088addc693226eaa6" translate="yes" xml:space="preserve">
          <source>Assigns are meant to be user data that will be available in templates. However, there are keys under assigns that are specially handled by Phoenix, they are:</source>
          <target state="translated">할당은 템플릿에서 사용할 수있는 사용자 데이터입니다. 그러나 피닉스에서 특별히 처리하는 키 아래에 키가 있습니다.</target>
        </trans-unit>
        <trans-unit id="147d0c86a092ea030ef3bda841fe74477ec9e5a7" translate="yes" xml:space="preserve">
          <source>Assigns multiple &lt;strong&gt;private&lt;/strong&gt; keys and values in the connection</source>
          <target state="translated">연결에 여러 &lt;strong&gt;개인&lt;/strong&gt; 키와 값을 할당 합니다</target>
        </trans-unit>
        <trans-unit id="757ea09ed7848c39bfeb25a79e148f85064a7e1a" translate="yes" xml:space="preserve">
          <source>Assigns multiple &lt;strong&gt;private&lt;/strong&gt; keys and values in the connection.</source>
          <target state="translated">연결에 여러 &lt;strong&gt;개인&lt;/strong&gt; 키와 값을 할당 합니다.</target>
        </trans-unit>
        <trans-unit id="a6dddc082668f89921e5bc9a19c53fadbba95e74" translate="yes" xml:space="preserve">
          <source>Assigns multiple values to keys in the connection</source>
          <target state="translated">연결에서 키에 여러 값을 할당</target>
        </trans-unit>
        <trans-unit id="6cc9a184a076e8b32ad317761089937067633e4a" translate="yes" xml:space="preserve">
          <source>Assigns multiple values to keys in the connection.</source>
          <target state="translated">연결의 키에 여러 값을 할당합니다.</target>
        </trans-unit>
        <trans-unit id="134d6b41e63f8d58f043111b94e89dcdbcc5edb8" translate="yes" xml:space="preserve">
          <source>Associations</source>
          <target state="translated">Associations</target>
        </trans-unit>
        <trans-unit id="b802e5b1cff34526d856a0a100a2dbbb152b074d" translate="yes" xml:space="preserve">
          <source>Associations, embeds and on replace</source>
          <target state="translated">연관, 임베드 및 교체</target>
        </trans-unit>
        <trans-unit id="56f8a2dd87419ea091ce075611de251ffc698b80" translate="yes" xml:space="preserve">
          <source>Assuming the above code, a request to &lt;code&gt;/users/sign_in&lt;/code&gt; will be forwarded to the &lt;code&gt;UserRouter&lt;/code&gt; plug, which will receive what it will see as a request to &lt;code&gt;/sign_in&lt;/code&gt;.</source>
          <target state="translated">위의 코드를 가정하면 &lt;code&gt;/users/sign_in&lt;/code&gt; 에 대한 요청 은 &lt;code&gt;UserRouter&lt;/code&gt; 플러그 로 전달되며 ,이 값은 &lt;code&gt;/sign_in&lt;/code&gt; 에 대한 요청으로 표시됩니다 .</target>
        </trans-unit>
        <trans-unit id="c804cad0774fdc88933e3e582b28b80f3857c48a" translate="yes" xml:space="preserve">
          <source>Assuming we have a &lt;code&gt;Post&lt;/code&gt; schema (stored in the &lt;code&gt;posts&lt;/code&gt; table), the first step is to add a version column to the &lt;code&gt;posts&lt;/code&gt; table:</source>
          <target state="translated">우리는이 가정 &lt;code&gt;Post&lt;/code&gt; 합니다 (저장 스키마 &lt;code&gt;posts&lt;/code&gt; 테이블), 첫 번째 단계는에 버전 열을 추가하는 것입니다 &lt;code&gt;posts&lt;/code&gt; 테이블 :</target>
        </trans-unit>
        <trans-unit id="ed0b9aa74251acf133476dd7a1fb25e39fd253e6" translate="yes" xml:space="preserve">
          <source>At the end sets the connection state to &lt;code&gt;:sent&lt;/code&gt;.</source>
          <target state="translated">마지막에 연결 상태를 &lt;code&gt;:sent&lt;/code&gt; 로 설정합니다 .</target>
        </trans-unit>
        <trans-unit id="a4272dc1f3f36ae0db4df38f283b5fe8748a6ff3" translate="yes" xml:space="preserve">
          <source>Attempts to parse the connection&amp;rsquo;s request body given the content-type type, subtype, and its parameters</source>
          <target state="translated">컨텐츠 유형, 하위 유형 및 해당 매개 변수가 제공된 경우 연결 요청 본문을 구문 분석하려고 시도합니다.</target>
        </trans-unit>
        <trans-unit id="5adb472163a6582271e0a7f045107d9d435aeb4d" translate="yes" xml:space="preserve">
          <source>Attempts to parse the connection&amp;rsquo;s request body given the content-type type, subtype, and its parameters.</source>
          <target state="translated">컨텐츠 유형, 하위 유형 및 해당 매개 변수가 제공된 경우 연결 요청 본문을 구문 분석하려고 시도합니다.</target>
        </trans-unit>
        <trans-unit id="a6652617f2c799eb11ee727b16c5646c48af6905" translate="yes" xml:space="preserve">
          <source>Attributes</source>
          <target state="translated">Attributes</target>
        </trans-unit>
        <trans-unit id="5e25ce007aa95ea2ea8b158aee9c630a32ea5616" translate="yes" xml:space="preserve">
          <source>Authorization</source>
          <target state="translated">Authorization</target>
        </trans-unit>
        <trans-unit id="7dd6dabb0c5ff27d14867c7a0d5f7ad8c0d3dd31" translate="yes" xml:space="preserve">
          <source>Autogenerate</source>
          <target state="translated">Autogenerate</target>
        </trans-unit>
        <trans-unit id="03dcefaf5fdafcdcee4b084ba846e764fc47771f" translate="yes" xml:space="preserve">
          <source>Available for transports that generate a connection.</source>
          <target state="translated">연결을 생성하는 전송에 사용 가능합니다.</target>
        </trans-unit>
        <trans-unit id="8faf407e50cfbddaaa8c6b940974389bbb77f58e" translate="yes" xml:space="preserve">
          <source>Awaits the completion of an async assign</source>
          <target state="translated">비동기 할당 완료를 기다립니다</target>
        </trans-unit>
        <trans-unit id="2168f4814ee9c5fe1b06e3b972eb6f903c518991" translate="yes" xml:space="preserve">
          <source>Awaits the completion of an async assign.</source>
          <target state="translated">비동기 할당 완료를 기다립니다.</target>
        </trans-unit>
        <trans-unit id="b1ff57d696aa3ec09bd76c88944e1a7097ee37a3" translate="yes" xml:space="preserve">
          <source>Bad:</source>
          <target state="translated">Bad:</target>
        </trans-unit>
        <trans-unit id="6f69f815f19f72bb41c1c4436ba66d01cf0d77fa" translate="yes" xml:space="preserve">
          <source>Be aware that a &lt;code&gt;:multiple&lt;/code&gt; option will not generate a correctly functioning multiple select element. Use &lt;a href=&quot;#multiple_select/4&quot;&gt;&lt;code&gt;multiple_select/4&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">&amp;bull; 그래도주의 &lt;code&gt;:multiple&lt;/code&gt; 옵션은 제대로 작동 여러 선택 요소를 생성하지 않습니다. 대신 &lt;a href=&quot;#multiple_select/4&quot;&gt; &lt;code&gt;multiple_select/4&lt;/code&gt; &lt;/a&gt; 를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="0b7cf944c5f95100a7935a4fa47e890840645b9d" translate="yes" xml:space="preserve">
          <source>Because &lt;code&gt;:join_through&lt;/code&gt; contains a schema, in such cases, autogenerated values and primary keys will be automatically handled by Ecto.</source>
          <target state="translated">&lt;code&gt;:join_through&lt;/code&gt; 에는 스키마가 포함 되므로 이러한 경우 자동 생성 된 값과 기본 키는 Ecto에서 자동으로 처리됩니다.</target>
        </trans-unit>
        <trans-unit id="9262b037e2212c6d03d3d7d5fb577f82e1400995" translate="yes" xml:space="preserve">
          <source>Because an unchecked checkbox is not sent to the server, Phoenix automatically generates a hidden field with the unchecked_value &lt;em&gt;before&lt;/em&gt; the checkbox field to ensure the &lt;code&gt;unchecked_value&lt;/code&gt; is sent when the checkbox is not marked.</source>
          <target state="translated">선택하지 않은 확인란이 서버로 전송되지 않으므로 Phoenix 는 확인란이 표시 &lt;code&gt;unchecked_value&lt;/code&gt; 경우 unchecked_value 가 전송 되도록 확인란 필드 &lt;em&gt;앞에&lt;/em&gt; unchecked_value가있는 숨겨진 필드를 자동으로 생성합니다 .</target>
        </trans-unit>
        <trans-unit id="bdb9a6e7bde3ab5a7bc1495dec9bb0e16986001a" translate="yes" xml:space="preserve">
          <source>Because channels are spawned from the transport process, transports must trap exits and correctly handle the &lt;code&gt;{:EXIT, _, _}&lt;/code&gt; messages arriving from channels, relaying the proper response to the client.</source>
          <target state="translated">전송 프로세스에서 채널이 생성되므로 전송은 엑시트를 트랩하고 채널에서 도착한 &lt;code&gt;{:EXIT, _, _}&lt;/code&gt; 메시지를 올바르게 처리 하여 클라이언트에 올바른 응답을 전달해야합니다.</target>
        </trans-unit>
        <trans-unit id="efbb223e1e0205999506019f53282716fca5c16e" translate="yes" xml:space="preserve">
          <source>Because many databases do not support direct encoding and decoding of embeds, it is often emulated by Ecto by using specific encoding and decoding rules.</source>
          <target state="translated">많은 데이터베이스가 임베드의 직접 인코딩 및 디코딩을 지원하지 않기 때문에 Ecto는 종종 특정 인코딩 및 디코딩 규칙을 사용하여 에뮬레이션합니다.</target>
        </trans-unit>
        <trans-unit id="fe0d51764665fe5a0cca90e95e7b401430abc9ea" translate="yes" xml:space="preserve">
          <source>Because of the inability to know if the struct is up to date or not, using associations with the &lt;code&gt;:on_conflict&lt;/code&gt; option is not recommended. For instance, Ecto may even trigger constraint violations when associations are used with &lt;code&gt;on_conflict: :nothing&lt;/code&gt;, as no ID will be available in the case the record already exists, and it is not possible for Ecto to detect such cases reliably.</source>
          <target state="translated">struct가 최신인지 여부를 알 수 없으므로 &lt;code&gt;:on_conflict&lt;/code&gt; 옵션 과의 연관을 사용 하지 않는 것이 좋습니다. 예를 들어, 레코드가 이미 존재하는 경우 ID를 사용할 수 없으므로 Ecto가 그러한 경우를 안정적으로 감지 할 수 없으므로 &lt;code&gt;on_conflict: :nothing&lt;/code&gt; 과의 연관을 사용할 때 Ecto는 제약 조건 위반을 트리거 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="8aff02a4110b82074d8c12773ef5ce6582b3ab82" translate="yes" xml:space="preserve">
          <source>Because such indexes have usually more complex names, we need to explicitly tell the changeset which constraint name to use (here we&amp;rsquo;re using the naming convention that &lt;code&gt;unique_index&lt;/code&gt; uses):</source>
          <target state="translated">이러한 인덱스는 일반적으로 더 복잡한 이름을 가지므로 변경 세트에 사용할 제한 조건 이름을 명시 적으로 알려야합니다 (여기서 &lt;code&gt;unique_index&lt;/code&gt; 에서 사용 하는 이름 지정 규칙을 사용함).</target>
        </trans-unit>
        <trans-unit id="224c09d9b7dd7d9d454778c8be5dd88e43a0c6ad" translate="yes" xml:space="preserve">
          <source>Because the constraint logic is in the database, we can leverage all the database functionality when defining them. For example, let&amp;rsquo;s suppose the e-mails are scoped by company id. We would write in a migration:</source>
          <target state="translated">제약 조건 논리는 데이터베이스에 있기 때문에 정의 할 때 모든 데이터베이스 기능을 활용할 수 있습니다. 예를 들어, 전자 우편이 회사 ID별로 범위가 지정되었다고 가정하십시오. 우리는 마이그레이션에서 쓸 것입니다 :</target>
        </trans-unit>
        <trans-unit id="b6739a5ab828592734049508a18dd56e17882475" translate="yes" xml:space="preserve">
          <source>Because the request body can be of any size, reading the body will only work once, as Plug will not cache the result of these operations. If you need to access the body multiple times, it is your responsibility to store it. Finally keep in mind some plugs like &lt;a href=&quot;plug.parsers&quot;&gt;&lt;code&gt;Plug.Parsers&lt;/code&gt;&lt;/a&gt; may read the body, so the body may be unavailable after being accessed by such plugs.</source>
          <target state="translated">요청 본문은 모든 크기가 될 수 있기 때문에 플러그는 이러한 작업의 결과를 캐시하지 않으므로 본문을 한 번만 읽을 수 있습니다. 신체에 여러 번 접근해야하는 경우, 보관하는 것은 귀하의 책임입니다. 마지막으로 &lt;a href=&quot;plug.parsers&quot;&gt; &lt;code&gt;Plug.Parsers&lt;/code&gt; &lt;/a&gt; 와 같은 일부 플러그 는 본문을 읽을 수 있으므로 이러한 플러그로 액세스 한 후 본문을 사용하지 못할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d8d5b0de0d771e3732a5b80433909083879a3d87" translate="yes" xml:space="preserve">
          <source>Because the whole communication is asynchronous, the following test would be very brittle:</source>
          <target state="translated">전체 통신이 비동기 적이기 때문에 다음 테스트는 매우 취약합니다.</target>
        </trans-unit>
        <trans-unit id="4e845000c50c1ebb2862affdc57cdca9446402dc" translate="yes" xml:space="preserve">
          <source>Because we have defined the template root to be &amp;ldquo;lib/web/templates&amp;rdquo;, &lt;a href=&quot;phoenix.view#content&quot;&gt;&lt;code&gt;Phoenix.View&lt;/code&gt;&lt;/a&gt; will automatically load all templates at &amp;ldquo;web/templates/user&amp;rdquo; and include them in the &lt;code&gt;YourApp.UserView&lt;/code&gt;. For example, imagine we have the template:</source>
          <target state="translated">우리가 &quot;lib 디렉토리 / 웹 / 템플릿&quot;으로 템플릿 루트를 정의하기 때문에, &lt;a href=&quot;phoenix.view#content&quot;&gt; &lt;code&gt;Phoenix.View&lt;/code&gt; 는&lt;/a&gt; 자동으로 &quot;웹 / 템플릿 / 사용자&quot;모든 템플릿을로드하고이에 포함됩니다 &lt;code&gt;YourApp.UserView&lt;/code&gt; . 예를 들어 템플릿이 있다고 가정합니다.</target>
        </trans-unit>
        <trans-unit id="39f7cc114f2fc6cf106968527a393ef7ef7dc2da" translate="yes" xml:space="preserve">
          <source>Because we used &lt;code&gt;on_conflict: :nothing&lt;/code&gt;, instead of getting an error, we got &lt;code&gt;{:ok, struct}&lt;/code&gt;. However the returned struct does not reflect the data in the database. One possible mechanism to detect if an insert or nothing happened in case of &lt;code&gt;on_conflict: :nothing&lt;/code&gt; is by checking the &lt;code&gt;id&lt;/code&gt; field. &lt;code&gt;id&lt;/code&gt; will be nil if the field is autogenerated by the database and no insert happened.</source>
          <target state="translated">&lt;code&gt;on_conflict: :nothing&lt;/code&gt; 을 사용했기 때문에 오류 대신 &lt;code&gt;{:ok, struct}&lt;/code&gt; . 그러나 반환 된 구조체는 데이터베이스의 데이터를 반영하지 않습니다. &lt;code&gt;on_conflict: :nothing&lt;/code&gt; 경우 삽입 또는 아무것도 발생하지 않았는지 감지하는 한 가지 가능한 메커니즘 은 &lt;code&gt;id&lt;/code&gt; 필드 를 확인하는 것 입니다. 필드가 데이터베이스에 의해 자동 생성되고 삽입이 발생하지 않으면 &lt;code&gt;id&lt;/code&gt; 는 nil입니다.</target>
        </trans-unit>
        <trans-unit id="3cd2824c40cb6a858f71c571b7a9552c3251a948" translate="yes" xml:space="preserve">
          <source>Before asserting anything was broadcast, we must first subscribe to the topic of the channel in the test process:</source>
          <target state="translated">방송 된 것을 주장하기 전에 먼저 테스트 과정에서 채널의 주제를 구독해야합니다.</target>
        </trans-unit>
        <trans-unit id="4041ca44c3c741eba05c3336903154a869e43ff0" translate="yes" xml:space="preserve">
          <source>Behaves exactly the same as &lt;code&gt;where&lt;/code&gt; except it combines with any previous expression by using an &lt;code&gt;OR&lt;/code&gt;. All expressions have to evaluate to a boolean value.</source>
          <target state="translated">&lt;code&gt;OR&lt;/code&gt; 을 사용하여 이전 표현식과 결합 &lt;code&gt;where&lt;/code&gt; 것을 제외하고는 위치 와 정확히 동일하게 작동합니다 . 모든 표현식은 부울 값으로 평가되어야합니다.</target>
        </trans-unit>
        <trans-unit id="69bb93f8733104d33c3d36e7e5b282df9df17548" translate="yes" xml:space="preserve">
          <source>Behind the scenes, it uses &lt;a href=&quot;https://hexdocs.pm/elixir/Task.html#async/1&quot;&gt;&lt;code&gt;Task.async/1&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">뒤에서 &lt;a href=&quot;https://hexdocs.pm/elixir/Task.html#async/1&quot;&gt; &lt;code&gt;Task.async/1&lt;/code&gt; 을 사용&lt;/a&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="d35a0bd824cc8e4b8d193117df8ed871a26f82ac" translate="yes" xml:space="preserve">
          <source>Behind the scenes, it uses &lt;a href=&quot;https://hexdocs.pm/elixir/Task.html#await/2&quot;&gt;&lt;code&gt;Task.await/2&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">뒤에서 &lt;a href=&quot;https://hexdocs.pm/elixir/Task.html#await/2&quot;&gt; &lt;code&gt;Task.await/2&lt;/code&gt; 를 사용&lt;/a&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="c6ad3316378f3ecae2aa5789e6ae98417f0d92ae" translate="yes" xml:space="preserve">
          <source>Besides &lt;code&gt;:id&lt;/code&gt; and &lt;code&gt;:binary_id&lt;/code&gt;, which are often used by primary and foreign keys, Ecto provides a huge variety of types to be used by any column.</source>
          <target state="translated">기본 키와 외래 키에서 자주 사용되는 &lt;code&gt;:id&lt;/code&gt; 및 &lt;code&gt;:binary_id&lt;/code&gt; 외에도 Ecto는 모든 열에서 사용할 수있는 다양한 유형을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="0e1489eea1b6f3bbd4b7bfb5da234da05e74fa76" translate="yes" xml:space="preserve">
          <source>Besides &lt;code&gt;Repo.all/1&lt;/code&gt; which returns all entries, repositories also provide &lt;code&gt;Repo.one/1&lt;/code&gt; which returns one entry or nil, &lt;code&gt;Repo.one!/1&lt;/code&gt; which returns one entry or raises, &lt;code&gt;Repo.get/2&lt;/code&gt; which fetches entries for a particular ID and more.</source>
          <target state="translated">게다가 &lt;code&gt;Repo.all/1&lt;/code&gt; 모든 항목을 반환 저장소도 제공 &lt;code&gt;Repo.one/1&lt;/code&gt; 하나 개의 항목 또는 전무를 반환 &lt;code&gt;Repo.one!/1&lt;/code&gt; 하나 개의 항목이나 레이즈를 반환 &lt;code&gt;Repo.get/2&lt;/code&gt; 특정에 대한 항목을 가져옵니다 아이디 등</target>
        </trans-unit>
        <trans-unit id="4db60d335ebdbdc7119cfd198fa9382586d6f219" translate="yes" xml:space="preserve">
          <source>Besides being a Plug, this module also provides conveniences for configuring SSL. See &lt;a href=&quot;#configure/1&quot;&gt;&lt;code&gt;configure/1&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 모듈은 플러그 외에도 SSL 구성을위한 편의성을 제공합니다. &lt;a href=&quot;#configure/1&quot;&gt; &lt;code&gt;configure/1&lt;/code&gt; 을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="89f5e6bc915be700f158a6ce56ae0826017ba369" translate="yes" xml:space="preserve">
          <source>Besides functions transaction can be used with an Ecto.Multi struct. Transaction will be started, all operations applied and in case of success committed returning &lt;code&gt;{:ok, changes}&lt;/code&gt;. In case of any errors the transaction will be rolled back and &lt;code&gt;{:error, failed_operation, failed_value, changes_so_far}&lt;/code&gt; will be returned.</source>
          <target state="translated">함수 외에도 Ecto.Multi 구조체와 함께 트랜잭션을 사용할 수 있습니다. 트랜잭션이 시작되고 모든 작업이 적용되며 성공한 경우 &lt;code&gt;{:ok, changes}&lt;/code&gt; 반환이 커밋 됩니다. 오류가 발생하면 트랜잭션이 롤백되고 &lt;code&gt;{:error, failed_operation, failed_value, changes_so_far}&lt;/code&gt; 가 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="6eb623724b9e9c7ad93a2b376a13191ce506c435" translate="yes" xml:space="preserve">
          <source>Besides providing primitive types, Ecto allows custom types to be implemented by developers, allowing Ecto behaviour to be extended.</source>
          <target state="translated">기본 유형을 제공하는 것 외에도 Ecto는 개발자가 사용자 정의 유형을 구현하여 Ecto 동작을 확장 할 수 있도록합니다.</target>
        </trans-unit>
        <trans-unit id="95f14d33b401893a277d4f99cbdd9eff770e0035" translate="yes" xml:space="preserve">
          <source>Besides the &amp;ldquo;Shared options&amp;rdquo; section at the module documentation, it accepts:</source>
          <target state="translated">모듈 문서의 &quot;공유 옵션&quot;섹션 외에도 다음을 허용합니다.</target>
        </trans-unit>
        <trans-unit id="30337ca422dc9c9379566c110b3f0dab3fec92a6" translate="yes" xml:space="preserve">
          <source>Besides the options supported by &lt;a href=&quot;plug.conn#read_body/2&quot;&gt;&lt;code&gt;Plug.Conn.read_body/2&lt;/code&gt;&lt;/a&gt;, the multipart parser also checks for &lt;code&gt;:headers&lt;/code&gt; option that contains the same &lt;code&gt;:length&lt;/code&gt;, &lt;code&gt;:read_length&lt;/code&gt; and &lt;code&gt;:read_timeout&lt;/code&gt; options which are used explicitly for parsing multipart headers.</source>
          <target state="translated">멀티 파트 구문 분석기는 &lt;a href=&quot;plug.conn#read_body/2&quot;&gt; &lt;code&gt;Plug.Conn.read_body/2&lt;/code&gt; &lt;/a&gt; 에서 지원하는 옵션 외에도 멀티 파트 헤더 구문 분석에 명시 적으로 사용되는 동일한 &lt;code&gt;:length&lt;/code&gt; , &lt;code&gt;:read_length&lt;/code&gt; 및 &lt;code&gt;:read_timeout&lt;/code&gt; 옵션을 포함하는 &lt;code&gt;:headers&lt;/code&gt; 옵션을 확인합니다 .</target>
        </trans-unit>
        <trans-unit id="97011ba97fa273b21e33aa944bda2e2a278636f0" translate="yes" xml:space="preserve">
          <source>Besides working as data mappers, &lt;a href=&quot;#embedded_schema/1&quot;&gt;&lt;code&gt;embedded_schema/1&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#schema/2&quot;&gt;&lt;code&gt;schema/2&lt;/code&gt;&lt;/a&gt; can also be used together to decouple how the data is represented in your applications from the database. Let&amp;rsquo;s see some examples.</source>
          <target state="translated">데이터 맵퍼로 작업하는 것 외에도 &lt;a href=&quot;#embedded_schema/1&quot;&gt; &lt;code&gt;embedded_schema/1&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#schema/2&quot;&gt; &lt;code&gt;schema/2&lt;/code&gt; &lt;/a&gt; 를 함께 사용하여 데이터베이스에서 응용 프로그램에서 데이터가 표현되는 방식을 분리 할 수 ​​있습니다. 몇 가지 예를 봅시다.</target>
        </trans-unit>
        <trans-unit id="3962ea5600f34c37c915cbc046d82c04df4d77b4" translate="yes" xml:space="preserve">
          <source>Binaries: &lt;code&gt;&amp;lt;&amp;lt;1, 2, 3&amp;gt;&amp;gt;&lt;/code&gt;</source>
          <target state="translated">이진 : &lt;code&gt;&amp;lt;&amp;lt;1, 2, 3&amp;gt;&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a1aad9799a97fc162affbf249838fba4245ed1b2" translate="yes" xml:space="preserve">
          <source>Binary &lt;code&gt;!=&lt;/code&gt; operation</source>
          <target state="translated">이진 &lt;code&gt;!=&lt;/code&gt; 연산</target>
        </trans-unit>
        <trans-unit id="aab4967633fa340878f5b6ff0fac9275456b4095" translate="yes" xml:space="preserve">
          <source>Binary &lt;code&gt;!=&lt;/code&gt; operation.</source>
          <target state="translated">이진 &lt;code&gt;!=&lt;/code&gt; 연산.</target>
        </trans-unit>
        <trans-unit id="e5506cd20d34fa992131eae37a4118f8df942d59" translate="yes" xml:space="preserve">
          <source>Binary &lt;code&gt;&amp;gt;&lt;/code&gt; operation</source>
          <target state="translated">이진 &lt;code&gt;&amp;gt;&lt;/code&gt; 작업</target>
        </trans-unit>
        <trans-unit id="dfa1236ca139dea1e736031c6c010136c1156745" translate="yes" xml:space="preserve">
          <source>Binary &lt;code&gt;&amp;gt;&lt;/code&gt; operation.</source>
          <target state="translated">이진 &lt;code&gt;&amp;gt;&lt;/code&gt; 작업.</target>
        </trans-unit>
        <trans-unit id="68b8b7e6a0cafe89fe9d42b45a144301795984d6" translate="yes" xml:space="preserve">
          <source>Binary &lt;code&gt;&amp;gt;=&lt;/code&gt; operation</source>
          <target state="translated">이진 &lt;code&gt;&amp;gt;=&lt;/code&gt; 연산</target>
        </trans-unit>
        <trans-unit id="9fff762f48965b1b90e231f1c2e9b7b77d9c0279" translate="yes" xml:space="preserve">
          <source>Binary &lt;code&gt;&amp;gt;=&lt;/code&gt; operation.</source>
          <target state="translated">이진 &lt;code&gt;&amp;gt;=&lt;/code&gt; 연산.</target>
        </trans-unit>
        <trans-unit id="897a4bf146dd662af8918814f6299d5d45bc9385" translate="yes" xml:space="preserve">
          <source>Binary &lt;code&gt;&amp;lt;&lt;/code&gt; operation</source>
          <target state="translated">이진 &lt;code&gt;&amp;lt;&lt;/code&gt; 작업</target>
        </trans-unit>
        <trans-unit id="516964b86b828e773af99b35b730166419b08ee0" translate="yes" xml:space="preserve">
          <source>Binary &lt;code&gt;&amp;lt;&lt;/code&gt; operation.</source>
          <target state="translated">이진 &lt;code&gt;&amp;lt;&lt;/code&gt; 작업.</target>
        </trans-unit>
        <trans-unit id="55d4095acf2b6cfdaf2462ee0715df5c7aac35c1" translate="yes" xml:space="preserve">
          <source>Binary &lt;code&gt;&amp;lt;=&lt;/code&gt; operation</source>
          <target state="translated">이진 &lt;code&gt;&amp;lt;=&lt;/code&gt; 연산</target>
        </trans-unit>
        <trans-unit id="0be463179ad26307edb01739fad99fe4901b5a8f" translate="yes" xml:space="preserve">
          <source>Binary &lt;code&gt;&amp;lt;=&lt;/code&gt; operation.</source>
          <target state="translated">이진 &lt;code&gt;&amp;lt;=&lt;/code&gt; 연산.</target>
        </trans-unit>
        <trans-unit id="ed4b8e4fd8d9b29d992761dfa2dd4c4489e1ed65" translate="yes" xml:space="preserve">
          <source>Binary &lt;code&gt;*&lt;/code&gt; operation</source>
          <target state="translated">이진 &lt;code&gt;*&lt;/code&gt; 연산</target>
        </trans-unit>
        <trans-unit id="37acde5499dd91e7f0cda6308db090f03a77b072" translate="yes" xml:space="preserve">
          <source>Binary &lt;code&gt;*&lt;/code&gt; operation.</source>
          <target state="translated">이진 &lt;code&gt;*&lt;/code&gt; 작업.</target>
        </trans-unit>
        <trans-unit id="d333c5e55aa960b56f8ce9b2461bef92b1d3519a" translate="yes" xml:space="preserve">
          <source>Binary &lt;code&gt;+&lt;/code&gt; operation</source>
          <target state="translated">이진 &lt;code&gt;+&lt;/code&gt; 연산</target>
        </trans-unit>
        <trans-unit id="becb3295fec718a8db321dbab17c20c240047390" translate="yes" xml:space="preserve">
          <source>Binary &lt;code&gt;+&lt;/code&gt; operation.</source>
          <target state="translated">이진 &lt;code&gt;+&lt;/code&gt; 연산.</target>
        </trans-unit>
        <trans-unit id="04e6fcacb4fa7beb340b0fd4aebae3a486fae794" translate="yes" xml:space="preserve">
          <source>Binary &lt;code&gt;-&lt;/code&gt; operation</source>
          <target state="translated">이진 &lt;code&gt;-&lt;/code&gt; 작업</target>
        </trans-unit>
        <trans-unit id="98d8ffdbb4452da8517c3805068ed9208643de11" translate="yes" xml:space="preserve">
          <source>Binary &lt;code&gt;-&lt;/code&gt; operation.</source>
          <target state="translated">이진 &lt;code&gt;-&lt;/code&gt; 작업.</target>
        </trans-unit>
        <trans-unit id="e6178994dd1feef09124c4590ccdad76e17713e2" translate="yes" xml:space="preserve">
          <source>Binary &lt;code&gt;/&lt;/code&gt; operation</source>
          <target state="translated">이진 &lt;code&gt;/&lt;/code&gt; 작업</target>
        </trans-unit>
        <trans-unit id="09212b0697d203478dadb5e24a3aa03f5d34b600" translate="yes" xml:space="preserve">
          <source>Binary &lt;code&gt;/&lt;/code&gt; operation.</source>
          <target state="translated">이진 &lt;code&gt;/&lt;/code&gt; 작업.</target>
        </trans-unit>
        <trans-unit id="ccbea1b86603234afe1e75963168f22d91c68d0f" translate="yes" xml:space="preserve">
          <source>Binary &lt;code&gt;==&lt;/code&gt; operation</source>
          <target state="translated">이진 &lt;code&gt;==&lt;/code&gt; 연산</target>
        </trans-unit>
        <trans-unit id="59b65609ffb053adfebf42fcdef021d829543b4b" translate="yes" xml:space="preserve">
          <source>Binary &lt;code&gt;==&lt;/code&gt; operation.</source>
          <target state="translated">이진 &lt;code&gt;==&lt;/code&gt; 연산.</target>
        </trans-unit>
        <trans-unit id="4248aa7253f6eb7de8c22a0d449b4507ceab3e76" translate="yes" xml:space="preserve">
          <source>Binary &lt;code&gt;and&lt;/code&gt; operation</source>
          <target state="translated">이진 &lt;code&gt;and&lt;/code&gt; 연산</target>
        </trans-unit>
        <trans-unit id="679d74c0e77d203b30ac50ea095340b58793e663" translate="yes" xml:space="preserve">
          <source>Binary &lt;code&gt;and&lt;/code&gt; operation.</source>
          <target state="translated">이진 &lt;code&gt;and&lt;/code&gt; 연산.</target>
        </trans-unit>
        <trans-unit id="56942b29b92b3a8bc97ce0aee7ae63719e0afac4" translate="yes" xml:space="preserve">
          <source>Binary &lt;code&gt;or&lt;/code&gt; operation</source>
          <target state="translated">이진 &lt;code&gt;or&lt;/code&gt; 연산</target>
        </trans-unit>
        <trans-unit id="1efbf5460110f2b42e9a177b65ee9dbf7064f3f6" translate="yes" xml:space="preserve">
          <source>Binary &lt;code&gt;or&lt;/code&gt; operation.</source>
          <target state="translated">이진 &lt;code&gt;or&lt;/code&gt; 연산.</target>
        </trans-unit>
        <trans-unit id="34c54b1df07d242138e07a00276cdb9c596ce135" translate="yes" xml:space="preserve">
          <source>Bindingless operations</source>
          <target state="translated">바인딩없는 작업</target>
        </trans-unit>
        <trans-unit id="b7d81cd1aa76a8c75003ee4db6d6aa59eab833b5" translate="yes" xml:space="preserve">
          <source>Bindings are not exposed from the query. When composing queries you must specify bindings again for each refinement query. For example to further narrow-down above query we again need to tell Ecto what bindings to expect:</source>
          <target state="translated">바인딩은 쿼리에서 노출되지 않습니다. 쿼리를 작성할 때 각 구체화 쿼리에 대해 바인딩을 다시 지정해야합니다. 예를 들어 쿼리를 더 좁히려면 Ecto에게 어떤 바인딩을 기대해야하는지 다시 알려줘야합니다.</target>
        </trans-unit>
        <trans-unit id="6a768c2cec7b7bc8e20929e8467fb8b1cdbcd4ee" translate="yes" xml:space="preserve">
          <source>Bindings in Ecto are positional, and the names do not have to be consistent between input and refinement queries. For example, the query above could also be written as:</source>
          <target state="translated">Ecto의 바인딩은 위치에 따라 다르며 입력 쿼리와 구체화 쿼리간에 이름이 일치하지 않아도됩니다. 예를 들어 위의 쿼리는 다음과 같이 작성할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="e7785ac12e9b48c7d8da92df06d805c335db37ed" translate="yes" xml:space="preserve">
          <source>Boolean operators: &lt;code&gt;and&lt;/code&gt;, &lt;code&gt;or&lt;/code&gt;, &lt;code&gt;not&lt;/code&gt;</source>
          <target state="translated">부울 연산자 : &lt;code&gt;and&lt;/code&gt; , &lt;code&gt;or&lt;/code&gt; , &lt;code&gt;not&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7133f12719661511054ab5e011b7efd42eff73c9" translate="yes" xml:space="preserve">
          <source>Boolean values</source>
          <target state="translated">부울 값</target>
        </trans-unit>
        <trans-unit id="2984126e4505fef2ec09b8e1991aadd393d7b750" translate="yes" xml:space="preserve">
          <source>Booleans: &lt;code&gt;true&lt;/code&gt;, &lt;code&gt;false&lt;/code&gt;</source>
          <target state="translated">부울 : &lt;code&gt;true&lt;/code&gt; , &lt;code&gt;false&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="138dbeb06701882a099e2f68d3e08d5ed686d058" translate="yes" xml:space="preserve">
          <source>Both JSON and HTML formats will be encoded only when passing the data to the controller via the &lt;a href=&quot;#render_to_iodata/3&quot;&gt;&lt;code&gt;render_to_iodata/3&lt;/code&gt;&lt;/a&gt; function. The &lt;a href=&quot;#render_to_iodata/3&quot;&gt;&lt;code&gt;render_to_iodata/3&lt;/code&gt;&lt;/a&gt; function uses the notion of format encoders to convert a particular format to its string/iodata representation.</source>
          <target state="translated">JSON 및 HTML 형식은 &lt;a href=&quot;#render_to_iodata/3&quot;&gt; &lt;code&gt;render_to_iodata/3&lt;/code&gt; &lt;/a&gt; 함수 를 통해 데이터를 컨트롤러에 전달할 때만 인코딩됩니다 . &lt;a href=&quot;#render_to_iodata/3&quot;&gt; &lt;code&gt;render_to_iodata/3&lt;/code&gt; &lt;/a&gt; 함수는 문자열 / iodata 표현으로 특정 형식을 변환 할 포맷 인코더의 개념을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="7f7a07162f18c4dab6556ad58150d663a794593d" translate="yes" xml:space="preserve">
          <source>Both queries are equivalent. However, if you are using the same partitioning over and over again, defining a window will reduce the query size. See &lt;a href=&quot;ecto.query#windows/3&quot;&gt;&lt;code&gt;Ecto.Query.windows/3&lt;/code&gt;&lt;/a&gt; for all possible window expressions, such as &lt;code&gt;:partition_by&lt;/code&gt; and &lt;code&gt;:order_by&lt;/code&gt;.</source>
          <target state="translated">두 쿼리 모두 동일합니다. 그러나 동일한 파티션을 반복해서 사용하는 경우 창을 정의하면 쿼리 크기가 줄어 듭니다. &lt;code&gt;:partition_by&lt;/code&gt; 및 &lt;code&gt;:order_by&lt;/code&gt; 와 같은 가능한 모든 창 표현식 은 &lt;a href=&quot;ecto.query#windows/3&quot;&gt; &lt;code&gt;Ecto.Query.windows/3&lt;/code&gt; &lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="9841089641d10cbb68ba9932954832d08f20b29e" translate="yes" xml:space="preserve">
          <source>Both the &lt;code&gt;init/1&lt;/code&gt; and &lt;code&gt;call/2&lt;/code&gt; functions defined by &lt;a href=&quot;plug.builder#content&quot;&gt;&lt;code&gt;Plug.Builder&lt;/code&gt;&lt;/a&gt; can be manually overridden. For example, the &lt;code&gt;init/1&lt;/code&gt; function provided by &lt;a href=&quot;plug.builder#content&quot;&gt;&lt;code&gt;Plug.Builder&lt;/code&gt;&lt;/a&gt; returns the options that it receives as an argument, but its behaviour can be customized:</source>
          <target state="translated">모두 &lt;code&gt;init/1&lt;/code&gt; 및 &lt;code&gt;call/2&lt;/code&gt; 에 의해 정의 함수 &lt;a href=&quot;plug.builder#content&quot;&gt; &lt;code&gt;Plug.Builder&lt;/code&gt; 는&lt;/a&gt; 수동으로 재정의 할 수 있습니다. 예를 들어 &lt;a href=&quot;plug.builder#content&quot;&gt; &lt;code&gt;Plug.Builder&lt;/code&gt; 에서&lt;/a&gt; 제공 하는 &lt;code&gt;init/1&lt;/code&gt; 함수 는 인수로받는 옵션을 반환하지만 동작을 사용자 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0b13a8d60d1d3de64ef4fd72fc97d6965aae27f8" translate="yes" xml:space="preserve">
          <source>Broadcast an event to all subscribers of the socket topic</source>
          <target state="translated">소켓 주제의 모든 구독자에게 이벤트 브로드 캐스트</target>
        </trans-unit>
        <trans-unit id="bad0a78dd2fd78e872af83332fe02ca2f663da8e" translate="yes" xml:space="preserve">
          <source>Broadcast an event to all subscribers of the socket topic.</source>
          <target state="translated">소켓 주제의 모든 구독자에게 이벤트를 브로드 캐스트하십시오.</target>
        </trans-unit>
        <trans-unit id="846b5dd1c1f901604c81013a76597f6f855e2d20" translate="yes" xml:space="preserve">
          <source>Broadcast event from pid to all subscribers of the socket topic</source>
          <target state="translated">소켓 주제의 모든 구독자에게 pid에서 브로드 캐스트 이벤트</target>
        </trans-unit>
        <trans-unit id="851a8a80337ee20b89c3d123943d6ad3318e4e3c" translate="yes" xml:space="preserve">
          <source>Broadcast event from pid to all subscribers of the socket topic.</source>
          <target state="translated">pid에서 소켓 주제의 모든 구독자에게 이벤트를 브로드 캐스트합니다.</target>
        </trans-unit>
        <trans-unit id="7459c0c85fb18346d48a15ecd0ee62798126c617" translate="yes" xml:space="preserve">
          <source>Broadcasting to an external topic</source>
          <target state="translated">외부 주제로 방송</target>
        </trans-unit>
        <trans-unit id="430c9f20aa06eb11805b71cdf9305b868b70a06a" translate="yes" xml:space="preserve">
          <source>Broadcasts a &lt;code&gt;msg&lt;/code&gt; as &lt;code&gt;event&lt;/code&gt; in the given &lt;code&gt;topic&lt;/code&gt;</source>
          <target state="translated">주어진 &lt;code&gt;topic&lt;/code&gt; 에서 &lt;code&gt;msg&lt;/code&gt; 를 &lt;code&gt;event&lt;/code&gt; 로 브로드 캐스트합니다.</target>
        </trans-unit>
        <trans-unit id="9be84a5fac4b66af00295240a8a9fd8406098ea3" translate="yes" xml:space="preserve">
          <source>Broadcasts a &lt;code&gt;msg&lt;/code&gt; as &lt;code&gt;event&lt;/code&gt; in the given &lt;code&gt;topic&lt;/code&gt;.</source>
          <target state="translated">주어진 &lt;code&gt;topic&lt;/code&gt; 에서 &lt;code&gt;msg&lt;/code&gt; 를 &lt;code&gt;event&lt;/code&gt; 로 브로드 캐스트합니다 .</target>
        </trans-unit>
        <trans-unit id="2a381d4f84303afe830a779813c8ff51ca44d964" translate="yes" xml:space="preserve">
          <source>Broadcasts a &lt;code&gt;msg&lt;/code&gt; from the given &lt;code&gt;from&lt;/code&gt; as &lt;code&gt;event&lt;/code&gt; in the given &lt;code&gt;topic&lt;/code&gt;</source>
          <target state="translated">브로드 캐스트 &lt;code&gt;msg&lt;/code&gt; 주어진에서를 &lt;code&gt;from&lt;/code&gt; 로 &lt;code&gt;event&lt;/code&gt; 주어진에서 &lt;code&gt;topic&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="da547b962c3b435f39e695241e267c345324e49f" translate="yes" xml:space="preserve">
          <source>Broadcasts a &lt;code&gt;msg&lt;/code&gt; from the given &lt;code&gt;from&lt;/code&gt; as &lt;code&gt;event&lt;/code&gt; in the given &lt;code&gt;topic&lt;/code&gt;.</source>
          <target state="translated">브로드 캐스트 &lt;code&gt;msg&lt;/code&gt; 주어진에서 &lt;code&gt;from&lt;/code&gt; 같은 &lt;code&gt;event&lt;/code&gt; 주어진에서 &lt;code&gt;topic&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2128b2a68ac127e87f9c6c480329ff8af263ea9f" translate="yes" xml:space="preserve">
          <source>Broadcasts message on given topic</source>
          <target state="translated">주어진 주제에 대한 메시지를 방송</target>
        </trans-unit>
        <trans-unit id="1ba7c5fe02bf40bcee64e896b6cd0ddf2b71ca36" translate="yes" xml:space="preserve">
          <source>Broadcasts message on given topic, to a single node</source>
          <target state="translated">주어진 주제에 대한 메시지를 단일 노드로 브로드 캐스트</target>
        </trans-unit>
        <trans-unit id="da681bfc05555f8cac2c5c0c250337cfb697db18" translate="yes" xml:space="preserve">
          <source>Broadcasts message on given topic, to a single node.</source>
          <target state="translated">주어진 주제에 대한 메시지를 단일 노드로 브로드 캐스트합니다.</target>
        </trans-unit>
        <trans-unit id="baaf416dc33a67c455e18b0b538a1ae5730c71d0" translate="yes" xml:space="preserve">
          <source>Broadcasts message on given topic.</source>
          <target state="translated">주어진 주제에 대한 메시지를 방송합니다.</target>
        </trans-unit>
        <trans-unit id="1edade3815a385432e990fc315fdd6e6c7f1f398" translate="yes" xml:space="preserve">
          <source>Broadcasts message to all but &lt;code&gt;from_pid&lt;/code&gt; on given topic</source>
          <target state="translated">지정된 주제에서 &lt;code&gt;from_pid&lt;/code&gt; 를 제외한 모든 사람에게 메시지를 브로드 캐스트합니다.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
