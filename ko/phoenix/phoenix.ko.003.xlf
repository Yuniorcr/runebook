<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="phoenix">
    <body>
      <group id="phoenix">
        <trans-unit id="abc20b7ef90b188eb547d7592ee2970a9b5990ac" translate="yes" xml:space="preserve">
          <source>Broadcasts message to all but &lt;code&gt;from_pid&lt;/code&gt; on given topic, to a single node</source>
          <target state="translated">주어진 주제에서 &lt;code&gt;from_pid&lt;/code&gt; 를 제외한 모든 메시지를 단일 노드로 브로드 캐스트 합니다.</target>
        </trans-unit>
        <trans-unit id="5000b61642c547143460a6ec6ae2892cc6264673" translate="yes" xml:space="preserve">
          <source>Broadcasts message to all but &lt;code&gt;from_pid&lt;/code&gt; on given topic, to a single node.</source>
          <target state="translated">주어진 주제에서 &lt;code&gt;from_pid&lt;/code&gt; 를 제외한 모든 메시지를 단일 노드로 브로드 캐스트 합니다.</target>
        </trans-unit>
        <trans-unit id="f95185ce0e58abc03f073ee2890ea397829aef49" translate="yes" xml:space="preserve">
          <source>Broadcasts message to all but &lt;code&gt;from_pid&lt;/code&gt; on given topic, to a single node. See &lt;a href=&quot;phoenix.pubsub#broadcast/3&quot;&gt;&lt;code&gt;Phoenix.PubSub.broadcast/3&lt;/code&gt;&lt;/a&gt; for usage details</source>
          <target state="translated">주어진 주제에서 &lt;code&gt;from_pid&lt;/code&gt; 를 제외한 모든 메시지를 단일 노드로 브로드 캐스트 합니다. 사용법에 대한 자세한 내용 은 &lt;a href=&quot;phoenix.pubsub#broadcast/3&quot;&gt; &lt;code&gt;Phoenix.PubSub.broadcast/3&lt;/code&gt; &lt;/a&gt; 를 참조 하십시오.</target>
        </trans-unit>
        <trans-unit id="e35e10e515b1d4d457f40e4fc28748a3276eba76" translate="yes" xml:space="preserve">
          <source>Broadcasts message to all but &lt;code&gt;from_pid&lt;/code&gt; on given topic, to a single node. See &lt;a href=&quot;phoenix.pubsub#broadcast/3&quot;&gt;&lt;code&gt;Phoenix.PubSub.broadcast/3&lt;/code&gt;&lt;/a&gt; for usage details.</source>
          <target state="translated">주어진 주제에서 &lt;code&gt;from_pid&lt;/code&gt; 를 제외한 모든 메시지를 단일 노드로 브로드 캐스트 합니다. 사용법에 대한 자세한 내용은 &lt;a href=&quot;phoenix.pubsub#broadcast/3&quot;&gt; &lt;code&gt;Phoenix.PubSub.broadcast/3&lt;/code&gt; &lt;/a&gt; 를 참조 하십시오.</target>
        </trans-unit>
        <trans-unit id="01215d649649c533e41cf42ecf38e606611b58b5" translate="yes" xml:space="preserve">
          <source>Broadcasts message to all but &lt;code&gt;from_pid&lt;/code&gt; on given topic.</source>
          <target state="translated">주어진 주제에서 &lt;code&gt;from_pid&lt;/code&gt; 를 제외한 모든 메시지를 브로드 캐스트합니다 .</target>
        </trans-unit>
        <trans-unit id="50197b0c83c20aa8e60756157bf676b3db8808b4" translate="yes" xml:space="preserve">
          <source>Broadcasts message to all but &lt;code&gt;from_pid&lt;/code&gt; on given topic. See &lt;a href=&quot;phoenix.pubsub#broadcast/3&quot;&gt;&lt;code&gt;Phoenix.PubSub.broadcast/3&lt;/code&gt;&lt;/a&gt; for usage details</source>
          <target state="translated">주어진 주제에서 &lt;code&gt;from_pid&lt;/code&gt; 를 제외한 모든 메시지를 브로드 캐스트합니다 . 사용법에 대한 자세한 내용 은 &lt;a href=&quot;phoenix.pubsub#broadcast/3&quot;&gt; &lt;code&gt;Phoenix.PubSub.broadcast/3&lt;/code&gt; &lt;/a&gt; 를 참조 하십시오.</target>
        </trans-unit>
        <trans-unit id="4cfdbf59168f78dca54b31b9369a0c8edad45fdd" translate="yes" xml:space="preserve">
          <source>Broadcasts message to all but &lt;code&gt;from_pid&lt;/code&gt; on given topic. See &lt;a href=&quot;phoenix.pubsub#broadcast/3&quot;&gt;&lt;code&gt;Phoenix.PubSub.broadcast/3&lt;/code&gt;&lt;/a&gt; for usage details.</source>
          <target state="translated">주어진 주제에서 &lt;code&gt;from_pid&lt;/code&gt; 를 제외한 모든 메시지를 브로드 캐스트합니다 . 사용법에 대한 자세한 내용은 &lt;a href=&quot;phoenix.pubsub#broadcast/3&quot;&gt; &lt;code&gt;Phoenix.PubSub.broadcast/3&lt;/code&gt; &lt;/a&gt; 를 참조 하십시오.</target>
        </trans-unit>
        <trans-unit id="293663a57177870794dca0c1751bd172ff6f1289" translate="yes" xml:space="preserve">
          <source>Browsers implement a storage by using cookies. When a cookie is set in the response, the browser stores it and sends it in the next request.</source>
          <target state="translated">브라우저는 쿠키를 사용하여 스토리지를 구현합니다. 응답에 쿠키가 설정되면 브라우저는 쿠키를 저장하고 다음 요청에서 보냅니다.</target>
        </trans-unit>
        <trans-unit id="4759bf14d7a511508e86c343c934894b6e8db533" translate="yes" xml:space="preserve">
          <source>Builder</source>
          <target state="translated">Builder</target>
        </trans-unit>
        <trans-unit id="aaf7c10bf0a579e313e284fd389aa7a72d36e686" translate="yes" xml:space="preserve">
          <source>Builds a dynamic query expression</source>
          <target state="translated">동적 쿼리 표현식을 작성합니다</target>
        </trans-unit>
        <trans-unit id="035a00799962cb493238a0a62db95718dd0c9cc9" translate="yes" xml:space="preserve">
          <source>Builds a dynamic query expression.</source>
          <target state="translated">동적 쿼리 표현식을 작성합니다.</target>
        </trans-unit>
        <trans-unit id="a45afaca9c91a1c32a9e917eca46a915988a9f39" translate="yes" xml:space="preserve">
          <source>Builds a query for the association in the given struct or structs</source>
          <target state="translated">주어진 구조체 또는 구조체에서 연관에 대한 쿼리를 작성합니다.</target>
        </trans-unit>
        <trans-unit id="407385801b1e85882900e84e2dc6b09dd54a44e4" translate="yes" xml:space="preserve">
          <source>Builds a query for the association in the given struct or structs.</source>
          <target state="translated">주어진 구조체 또는 구조체에서 연관에 대한 쿼리를 작성합니다.</target>
        </trans-unit>
        <trans-unit id="ced66bf8e021e21edfee88e91fd8bee8dc689ca4" translate="yes" xml:space="preserve">
          <source>Builds a socket</source>
          <target state="translated">소켓을 만듭니다</target>
        </trans-unit>
        <trans-unit id="bd5e1205dff465d478f5f9f203d29a49c4f9a0ff" translate="yes" xml:space="preserve">
          <source>Builds a socket with given id and assigns</source>
          <target state="translated">주어진 아이디로 소켓을 만들고 할당</target>
        </trans-unit>
        <trans-unit id="5643a36079c84d62291717bceeaf757f27684fd6" translate="yes" xml:space="preserve">
          <source>Builds a socket with given id and assigns.</source>
          <target state="translated">주어진 ID로 소켓을 빌드하고 할당합니다.</target>
        </trans-unit>
        <trans-unit id="0c373ae3deb56451e196d972839aac1b1465029f" translate="yes" xml:space="preserve">
          <source>Builds a socket.</source>
          <target state="translated">소켓을 만듭니다.</target>
        </trans-unit>
        <trans-unit id="564d64573cd800ede3483cc31acb71f2c69da51b" translate="yes" xml:space="preserve">
          <source>Builds a struct from the given &lt;code&gt;assoc&lt;/code&gt; in &lt;code&gt;struct&lt;/code&gt;</source>
          <target state="translated">struct의 주어진 &lt;code&gt;assoc&lt;/code&gt; 에서 &lt;code&gt;struct&lt;/code&gt; 빌드합니다.</target>
        </trans-unit>
        <trans-unit id="115a32a9ade32b44e729b841088b442f63153188" translate="yes" xml:space="preserve">
          <source>Builds a struct from the given &lt;code&gt;assoc&lt;/code&gt; in &lt;code&gt;struct&lt;/code&gt;.</source>
          <target state="translated">struct의 주어진 &lt;code&gt;assoc&lt;/code&gt; 에서 &lt;code&gt;struct&lt;/code&gt; 빌드합니다 .</target>
        </trans-unit>
        <trans-unit id="30d7f140361dec14b5a789c34dc36ebfd35298f6" translate="yes" xml:space="preserve">
          <source>Built-in parsers</source>
          <target state="translated">내장 파서</target>
        </trans-unit>
        <trans-unit id="5e1685f14dba3d96347d988739d528f81ec0f3c1" translate="yes" xml:space="preserve">
          <source>By calling &lt;code&gt;validate_confirmation(changeset, :email)&lt;/code&gt;, this validation will check if both &amp;ldquo;email&amp;rdquo; and &amp;ldquo;email_confirmation&amp;rdquo; in the parameter map matches.</source>
          <target state="translated">&lt;code&gt;validate_confirmation(changeset, :email)&lt;/code&gt; 을 호출 하면이 유효성 검사는 매개 변수 맵의 &quot;email&quot;및 &quot;email_confirmation&quot;이 모두 일치하는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="5882dbfbfa27da2fbdedfbff9e1a63f338d24168" translate="yes" xml:space="preserve">
          <source>By default, CSRF tokens are generated through &lt;a href=&quot;../plug/1.5.0/plug.csrfprotection&quot;&gt;&lt;code&gt;Plug.CSRFProtection&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">기본적으로 CSRF 토큰은 &lt;a href=&quot;../plug/1.5.0/plug.csrfprotection&quot;&gt; &lt;code&gt;Plug.CSRFProtection&lt;/code&gt; 을&lt;/a&gt; 통해 생성됩니다 .</target>
        </trans-unit>
        <trans-unit id="bf44902d066daac00377756f269ce94379621c08" translate="yes" xml:space="preserve">
          <source>By default, Controllers render templates in a view with a similar name to the controller. For example, &lt;code&gt;MyApp.UserController&lt;/code&gt; will render templates inside the &lt;code&gt;MyApp.UserView&lt;/code&gt;. This information can be changed any time by using &lt;a href=&quot;#render/3&quot;&gt;&lt;code&gt;render/3&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#render/4&quot;&gt;&lt;code&gt;render/4&lt;/code&gt;&lt;/a&gt; or the &lt;a href=&quot;#put_view/2&quot;&gt;&lt;code&gt;put_view/2&lt;/code&gt;&lt;/a&gt; function:</source>
          <target state="translated">기본적으로 컨트롤러는 템플릿을 컨트롤러와 비슷한 이름의보기로 렌더링합니다. 예를 들어 &lt;code&gt;MyApp.UserController&lt;/code&gt; 는 &lt;code&gt;MyApp.UserView&lt;/code&gt; 내부에서 템플릿을 렌더링합니다 . 이 정보는 &lt;a href=&quot;#render/3&quot;&gt; &lt;code&gt;render/3&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#render/4&quot;&gt; &lt;code&gt;render/4&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;#put_view/2&quot;&gt; &lt;code&gt;put_view/2&lt;/code&gt; &lt;/a&gt; 함수 를 사용하여 언제든지 변경할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="a268cfeb224349d5d90c3cd123f25da9e6f77fd2" translate="yes" xml:space="preserve">
          <source>By default, Ecto will generate a foreign key constraint with name &amp;ldquo;comments_post_id_fkey&amp;rdquo; (the name is configurable).</source>
          <target state="translated">기본적으로 Ecto는 이름이 &quot;comments_post_id_fkey&quot;인 외래 키 제약 조건을 생성합니다 (이름을 구성 할 수 있음).</target>
        </trans-unit>
        <trans-unit id="fae9065c91907a74dc22def221d61623cee30465" translate="yes" xml:space="preserve">
          <source>By default, JSON encoding is used to broker messages to and from clients. A custom serializer may be given as a module which implements the &lt;code&gt;encode!/1&lt;/code&gt; and &lt;code&gt;decode!/2&lt;/code&gt; functions defined by the &lt;a href=&quot;phoenix.transports.serializer&quot;&gt;&lt;code&gt;Phoenix.Transports.Serializer&lt;/code&gt;&lt;/a&gt; behaviour.</source>
          <target state="translated">기본적으로 JSON 인코딩은 클라이언트와 메시지를 중개하는 데 사용됩니다. 커스텀 시리얼 라이저는 &lt;a href=&quot;phoenix.transports.serializer&quot;&gt; &lt;code&gt;Phoenix.Transports.Serializer&lt;/code&gt; &lt;/a&gt; 동작에 의해 정의 된 인 &lt;code&gt;encode!/1&lt;/code&gt; 및 &lt;code&gt;decode!/2&lt;/code&gt; 기능 을 구현하는 모듈로 제공 될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="a824dc4ed53d783f7a9975983ce7ef8b0506c3fb" translate="yes" xml:space="preserve">
          <source>By default, Phoenix applications depend on the following packages:</source>
          <target state="translated">기본적으로 Phoenix 응용 프로그램은 다음 패키지에 따라 다릅니다.</target>
        </trans-unit>
        <trans-unit id="817d20452cd8be58fa983c6be832a701e9567224" translate="yes" xml:space="preserve">
          <source>By default, Phoenix implements this protocol for integers, binaries, atoms, and structs. For structs, a key &lt;code&gt;:id&lt;/code&gt; is assumed, but you may provide a specific implementation.</source>
          <target state="translated">기본적으로 Phoenix는 정수, 이진, 원자 및 구조체에 대해이 프로토콜을 구현합니다. 구조체의 경우 key &lt;code&gt;:id&lt;/code&gt; 가 가정되지만 특정 구현을 제공 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c77f53dd306fa81c812f2682c1de5d50bfe6516e" translate="yes" xml:space="preserve">
          <source>By default, Phoenix instruments the following events:</source>
          <target state="translated">기본적으로 Phoenix는 다음과 같은 이벤트를 계측합니다.</target>
        </trans-unit>
        <trans-unit id="8ebcd9b5c38954d3163ccd8ecd9a117876eeae4e" translate="yes" xml:space="preserve">
          <source>By default, Phoenix supports both websockets and longpoll transports. For example:</source>
          <target state="translated">기본적으로 Phoenix는 웹 소켓과 Longpoll 전송을 모두 지원합니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="0c1d03b3d76d48b7871af950bfe31f58d6df0dd3" translate="yes" xml:space="preserve">
          <source>By default, Plug tests checks for invalid header keys, e.g. header keys which include uppercase letters, and raises a &lt;a href=&quot;plug.conn.invalidheadererror&quot;&gt;&lt;code&gt;Plug.Conn.InvalidHeaderError&lt;/code&gt;&lt;/a&gt; when it finds one. To disable it, set :validate_header_keys_during_test to false on the app config.</source>
          <target state="translated">기본적으로 Plug 테스트는 대문자를 포함하는 헤더 키와 같은 잘못된 헤더 키를 확인하고 &lt;a href=&quot;plug.conn.invalidheadererror&quot;&gt; &lt;code&gt;Plug.Conn.InvalidHeaderError&lt;/code&gt; &lt;/a&gt; 를 발견하면 발생합니다. 비활성화하려면 앱 구성에서 : validate_header_keys_during_test를 false로 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="ab07041e506b7bff5fdaf86b0c2088b2b5296fa8" translate="yes" xml:space="preserve">
          <source>By default, a schema will automatically generate a primary key which is named &lt;code&gt;id&lt;/code&gt; and of type &lt;code&gt;:integer&lt;/code&gt;. The &lt;code&gt;field&lt;/code&gt; macro defines a field in the schema with given name and type. &lt;code&gt;has_many&lt;/code&gt; associates many posts with the user schema. Schemas are regular structs and can be created and manipulated directly using Elixir&amp;rsquo;s struct API:</source>
          <target state="translated">기본적으로 스키마는 이름이 &lt;code&gt;id&lt;/code&gt; 이고 &lt;code&gt;:integer&lt;/code&gt; 유형 인 기본 키를 자동으로 생성합니다 . &lt;code&gt;field&lt;/code&gt; 매크로는 주어진 이름과 유형 스키마에서 필드를 정의합니다. &lt;code&gt;has_many&lt;/code&gt; 는 많은 게시물을 사용자 스키마와 연결합니다. 스키마는 일반 구조체이며 Elixir의 구조체 API를 사용하여 직접 생성하고 조작 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="fdb33692f4f922ef8e7384f9894f6b6f566404f3" translate="yes" xml:space="preserve">
          <source>By default, both Postgres and MySQL return the amount of entries inserted on &lt;a href=&quot;#c:insert_all/3&quot;&gt;&lt;code&gt;insert_all/3&lt;/code&gt;&lt;/a&gt;. However, when the &lt;code&gt;:on_conflict&lt;/code&gt; option is specified, Postgres will only return a row if it was affected while MySQL returns at least the number of entries attempted.</source>
          <target state="translated">기본적으로 Postgres와 MySQL은 &lt;a href=&quot;#c:insert_all/3&quot;&gt; &lt;code&gt;insert_all/3&lt;/code&gt; &lt;/a&gt; 에 삽입 된 항목 수를 반환합니다 . 그러나 &lt;code&gt;:on_conflict&lt;/code&gt; 옵션이 지정되면 Postgres는 영향을받는 경우에만 행을 반환하지만 MySQL은 최소한 시도한 항목 수를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="de233bf5f3f9c757c065d4cd8e84316010e764d2" translate="yes" xml:space="preserve">
          <source>By default, broadcasted events are pushed directly to the client, but intercepting events gives your channel a chance to customize the event for the client to append extra information or filter the message from being delivered.</source>
          <target state="translated">기본적으로 브로드 캐스트 된 이벤트는 클라이언트로 직접 푸시되지만 이벤트를 가로 채면 채널에서 클라이언트가 추가 정보를 추가하거나 메시지 전달을 필터링하도록 이벤트를 사용자 정의 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f8484b7b776d9e09863af72b8186c36040033470" translate="yes" xml:space="preserve">
          <source>By default, channel &lt;code&gt;&quot;join&quot;&lt;/code&gt; and &lt;code&gt;&quot;handle_in&quot;&lt;/code&gt; events are logged, using the level &lt;code&gt;:info&lt;/code&gt; and &lt;code&gt;:debug&lt;/code&gt;, respectively. Logs can be customized per event type or disabled by setting the &lt;code&gt;:log_join&lt;/code&gt; and &lt;code&gt;:log_handle_in&lt;/code&gt; options when using &lt;a href=&quot;phoenix.channel#content&quot;&gt;&lt;code&gt;Phoenix.Channel&lt;/code&gt;&lt;/a&gt;. For example, the following configuration logs join events as &lt;code&gt;:info&lt;/code&gt;, but disables logging for incoming events:</source>
          <target state="translated">기본적으로 채널 &lt;code&gt;&quot;join&quot;&lt;/code&gt; 및 &lt;code&gt;&quot;handle_in&quot;&lt;/code&gt; 이벤트는 각각 &lt;code&gt;:info&lt;/code&gt; 및 &lt;code&gt;:debug&lt;/code&gt; 레벨을 사용하여 기록 됩니다. 로그는 이벤트 유형에 따라 사용자 정의 또는 설정하여 비활성화 할 수 있습니다 &lt;code&gt;:log_join&lt;/code&gt; 을 하고 &lt;code&gt;:log_handle_in&lt;/code&gt; 사용할 때 옵션을 &lt;a href=&quot;phoenix.channel#content&quot;&gt; &lt;code&gt;Phoenix.Channel&lt;/code&gt; 을&lt;/a&gt; . 예를 들어 다음 구성 로그는 이벤트를 &lt;code&gt;:info&lt;/code&gt; 로 결합 하지만 들어오는 이벤트에 대한 로깅은 비활성화합니다.</target>
        </trans-unit>
        <trans-unit id="77127032563b63331ed75935691a8dae8644ce22" translate="yes" xml:space="preserve">
          <source>By default, it looks for an implementation of the protocol, otherwise checks if the exception has the &lt;code&gt;:plug_status&lt;/code&gt; field or simply returns 500.</source>
          <target state="translated">기본적으로 프로토콜의 구현을 찾고, 그렇지 않으면 예외에 &lt;code&gt;:plug_status&lt;/code&gt; 필드 가 있는지 확인 하거나 단순히 500을 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="ce7df1ce09d3b95a15af132d0783bd3b431787b6" translate="yes" xml:space="preserve">
          <source>By default, it will keep the latest version and 2 previous versions as well as any digest created in the last hour.</source>
          <target state="translated">기본적으로 최신 버전과 2 개의 이전 버전 및 마지막 한 시간 동안 생성 된 다이제스트를 유지합니다.</target>
        </trans-unit>
        <trans-unit id="11600f5b12cbb0d0ad9196a9238995486e684451" translate="yes" xml:space="preserve">
          <source>By default, mix phoenix.gen.secret generates a key 64 characters long.</source>
          <target state="translated">기본적으로 mix phoenix.gen.secret은 64 자 길이의 키를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="e92996c56130e46f9f7c2c9e0e901205927e690b" translate="yes" xml:space="preserve">
          <source>By default, mix phx.gen.secret generates a key 64 characters long.</source>
          <target state="translated">기본적으로 mix phx.gen.secret은 64 자 길이의 키를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="c9e053035a992ad440134b8fe6bb2bb506296826" translate="yes" xml:space="preserve">
          <source>By default, the connection&amp;rsquo;s query params are included in the generated path. Custom query params may be used instead by providing a map of your own params. You may also retrieve only the request path by passing an empty map of params.</source>
          <target state="translated">기본적으로 연결의 쿼리 매개 변수는 생성 된 경로에 포함됩니다. 사용자 지정 쿼리 매개 변수는 자체 매개 변수 맵을 제공하여 대신 사용할 수 있습니다. 비어있는 매개 변수 맵을 전달하여 요청 경로 만 검색 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="dc77640e4a2742fe3831fd03e1b3f00201d9e0fe" translate="yes" xml:space="preserve">
          <source>By default, the controller and view will be namespaced by the schema name. You can customize the web module namespace by passing the &lt;code&gt;--web&lt;/code&gt; flag with a module name, for example:</source>
          <target state="translated">기본적으로 컨트롤러와 뷰는 스키마 이름으로 네임 스페이스가 지정됩니다. &lt;code&gt;--web&lt;/code&gt; 플래그를 모듈 이름과 함께 전달하여 웹 모듈 네임 스페이스를 사용자 정의 할 수 있습니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="b870fd1613d7bc837c7fb85e712119ea8176da56" translate="yes" xml:space="preserve">
          <source>By default, the derived implementation will also use the &lt;code&gt;:id&lt;/code&gt; key. In case the user does not contain an &lt;code&gt;:id&lt;/code&gt; key, the key can be specified with an option:</source>
          <target state="translated">기본적으로 파생 구현은 &lt;code&gt;:id&lt;/code&gt; 키 도 사용합니다 . 사용자가 &lt;code&gt;:id&lt;/code&gt; 키를 포함하지 않는 경우 옵션으로 키를 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="187e85e94e6e51510fec3d96b7fd25a22058656c" translate="yes" xml:space="preserve">
          <source>By default, the given path is a websocket upgrade endpoint, with long-polling fallback. The transports can be configured within the Socket handler. See &lt;a href=&quot;phoenix.socket&quot;&gt;&lt;code&gt;Phoenix.Socket&lt;/code&gt;&lt;/a&gt; for more information on defining socket handlers.</source>
          <target state="translated">기본적으로 주어진 경로는 폴링 폴 백이 긴 웹 소켓 업그레이드 엔드 포인트입니다. 전송은 소켓 핸들러 내에서 구성 할 수 있습니다. 소켓 핸들러 정의에 대한 자세한 정보는 &lt;a href=&quot;phoenix.socket&quot;&gt; &lt;code&gt;Phoenix.Socket&lt;/code&gt; &lt;/a&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="d9160dbef59f808f39d5df46c819a7932402cb60" translate="yes" xml:space="preserve">
          <source>By default, the table name for the migration and schema will be the plural name provided for the resource. To customize this value, a &lt;code&gt;--table&lt;/code&gt; option may be provided. For example:</source>
          <target state="translated">기본적으로 마이그레이션 및 스키마의 테이블 이름은 자원에 제공된 복수 이름입니다. 이 값을 사용자 정의하기 위해 &lt;code&gt;--table&lt;/code&gt; 옵션이 제공 될 수 있습니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="27e1f8f9c425229e754f86165235a0e052207991" translate="yes" xml:space="preserve">
          <source>By defining a schema, Ecto automatically defines a struct with the schema fields:</source>
          <target state="translated">스키마를 정의하여 Ecto는 스키마 필드를 사용하여 구조체를 자동으로 정의합니다.</target>
        </trans-unit>
        <trans-unit id="d7ba6941e0aa76ed33228ec903b82bbbca9adfcd" translate="yes" xml:space="preserve">
          <source>By having structs as data, we guarantee they are light-weight, serializable structures. In many languages, the data is often represented by large, complex objects, with entwined state transactions, which makes serialization, maintenance and understanding hard;</source>
          <target state="translated">구조체를 데이터로 사용하면 가볍고 직렬화 가능한 구조임을 보장합니다. 많은 언어에서 데이터는 종종 복잡하고 큰 상태의 객체로 표현되며, 일련의 상태 트랜잭션으로 직렬화, 유지 관리 및 이해를 어렵게합니다.</target>
        </trans-unit>
        <trans-unit id="5d18c6cc02b3eab9bdf12392d843e6b7776d6e77" translate="yes" xml:space="preserve">
          <source>By implementing the Plug API, &lt;a href=&quot;plug.builder#content&quot;&gt;&lt;code&gt;Plug.Builder&lt;/code&gt;&lt;/a&gt; guarantees this module is a plug and can be handed to a web server or used as part of another pipeline.</source>
          <target state="translated">&lt;a href=&quot;plug.builder#content&quot;&gt; &lt;code&gt;Plug.Builder&lt;/code&gt; &lt;/a&gt; 는 Plug API를 구현 하여이 모듈이 플러그이며 웹 서버로 전달되거나 다른 파이프 라인의 일부로 사용될 수 있음을 보장합니다.</target>
        </trans-unit>
        <trans-unit id="c6de9b3db655a99c3d4b4309b93931d50969516f" translate="yes" xml:space="preserve">
          <source>By joining the channel, we can interact with it directly. The given channel is joined in a separate process which is linked to the test process.</source>
          <target state="translated">채널에 참여하면 직접 채널과 상호 작용할 수 있습니다. 주어진 채널은 테스트 프로세스에 연결된 별도의 프로세스로 결합됩니다.</target>
        </trans-unit>
        <trans-unit id="fc5e58f6ff24d96d8e1ca4804c017b524da88c87" translate="yes" xml:space="preserve">
          <source>By pattern matching on the result we can differentiate different conditions:</source>
          <target state="translated">결과에 대한 패턴 일치를 통해 다양한 조건을 차별화 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="cd7b6be11c6c28e20310f4737672f3064202b8e2" translate="yes" xml:space="preserve">
          <source>By preloading an association using a custom query you can confine the behavior of &lt;a href=&quot;#cast_assoc/3&quot;&gt;&lt;code&gt;cast_assoc/3&lt;/code&gt;&lt;/a&gt;. This opens up the possibility to work on a subset of the data, instead of all associations in the database.</source>
          <target state="translated">사용자 정의 조회를 사용하여 연관을 사전로드하면 &lt;a href=&quot;#cast_assoc/3&quot;&gt; &lt;code&gt;cast_assoc/3&lt;/code&gt; &lt;/a&gt; 의 동작을 제한 할 수 있습니다 . 이것은 데이터베이스의 모든 연관 대신에 데이터의 서브 세트에서 작업 할 가능성을 열어줍니다.</target>
        </trans-unit>
        <trans-unit id="8e673cd4ab0a0e5f4be3dfe7dce5d6983c785cd5" translate="yes" xml:space="preserve">
          <source>By subscribing to the topic, we can use &lt;a href=&quot;#assert_broadcast/3&quot;&gt;&lt;code&gt;assert_broadcast/3&lt;/code&gt;&lt;/a&gt; to verify a message has been sent through the pubsub layer.</source>
          <target state="translated">주제를 구독하면 &lt;a href=&quot;#assert_broadcast/3&quot;&gt; &lt;code&gt;assert_broadcast/3&lt;/code&gt; &lt;/a&gt; 를 사용하여 메시지가 pubsub 레이어를 통해 전송되었는지 확인할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="30e8b6877367ea06f0a354b20f564c6bed06a78f" translate="yes" xml:space="preserve">
          <source>CSRF Protection</source>
          <target state="translated">CSRF 보호</target>
        </trans-unit>
        <trans-unit id="c9df88380d1dd3b25943e604a5a2f036a0a907bb" translate="yes" xml:space="preserve">
          <source>CSRF protection</source>
          <target state="translated">CSRF 보호</target>
        </trans-unit>
        <trans-unit id="d5fee4e9e6db4d2f1fdc95f2b2f4a8761758bd65" translate="yes" xml:space="preserve">
          <source>Cache mechanisms</source>
          <target state="translated">캐시 메커니즘</target>
        </trans-unit>
        <trans-unit id="f09eed70310275a028d61c137230810723d6a233" translate="yes" xml:space="preserve">
          <source>Cache query metadata</source>
          <target state="translated">캐시 쿼리 메타 데이터</target>
        </trans-unit>
        <trans-unit id="48398225bbff206393302c005c06fcbdd9039c32" translate="yes" xml:space="preserve">
          <source>Calculate the given &lt;code&gt;aggregate&lt;/code&gt; over the given &lt;code&gt;field&lt;/code&gt;</source>
          <target state="translated">주어진 &lt;code&gt;field&lt;/code&gt; 대해 주어진 &lt;code&gt;aggregate&lt;/code&gt; 를 계산</target>
        </trans-unit>
        <trans-unit id="b72c65ee7e44cc973d557eb132bd0a8e45fcd8e0" translate="yes" xml:space="preserve">
          <source>Calculate the given &lt;code&gt;aggregate&lt;/code&gt; over the given &lt;code&gt;field&lt;/code&gt;.</source>
          <target state="translated">주어진 &lt;code&gt;field&lt;/code&gt; 대해 주어진 &lt;code&gt;aggregate&lt;/code&gt; 를 계산합니다 .</target>
        </trans-unit>
        <trans-unit id="0f33ada32fda260381cb7928e58ebbc783a59470" translate="yes" xml:space="preserve">
          <source>Calculates the average for the given entry</source>
          <target state="translated">주어진 항목에 대한 평균을 계산</target>
        </trans-unit>
        <trans-unit id="8baedf935b7484427c37b3b58d7a6070653c5e22" translate="yes" xml:space="preserve">
          <source>Calculates the average for the given entry.</source>
          <target state="translated">주어진 항목의 평균을 계산합니다.</target>
        </trans-unit>
        <trans-unit id="a460f7839239c78344810ed4fdb957f96e65e250" translate="yes" xml:space="preserve">
          <source>Calculates the maximum for the given entry</source>
          <target state="translated">주어진 항목의 최대 값을 계산합니다</target>
        </trans-unit>
        <trans-unit id="afe02f125fcee88cdab42d83a2afbfd814eca2cd" translate="yes" xml:space="preserve">
          <source>Calculates the maximum for the given entry.</source>
          <target state="translated">주어진 항목의 최대 값을 계산합니다.</target>
        </trans-unit>
        <trans-unit id="95498afa39bf4d0b12b115d63e8fce6b69579abe" translate="yes" xml:space="preserve">
          <source>Calculates the minimum for the given entry</source>
          <target state="translated">주어진 항목에 대한 최소값을 계산합니다</target>
        </trans-unit>
        <trans-unit id="2d13608c2125ea28acdc9d31a66697e03fe7c6a7" translate="yes" xml:space="preserve">
          <source>Calculates the minimum for the given entry.</source>
          <target state="translated">주어진 항목에 대한 최소값을 계산합니다.</target>
        </trans-unit>
        <trans-unit id="135e5a276ffc4d7b681841fc4f3cad6bc49c7edc" translate="yes" xml:space="preserve">
          <source>Calculates the sum for the given entry</source>
          <target state="translated">주어진 항목에 대한 합계를 계산합니다</target>
        </trans-unit>
        <trans-unit id="dc20f2648334718a3dd5af85d7705b07facd7151" translate="yes" xml:space="preserve">
          <source>Calculates the sum for the given entry.</source>
          <target state="translated">주어진 항목의 합계를 계산합니다.</target>
        </trans-unit>
        <trans-unit id="d12af7746d2dd412b78d3fae8ef21a84dd3affb8" translate="yes" xml:space="preserve">
          <source>Callback implementation for &lt;a href=&quot;https://hexdocs.pm/elixir/Access.html#c:fetch/2&quot;&gt;&lt;code&gt;Access.fetch/2&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">에 대한 콜백 구현 &lt;a href=&quot;https://hexdocs.pm/elixir/Access.html#c:fetch/2&quot;&gt; &lt;code&gt;Access.fetch/2&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="54edfce776f3272812893f8747f90228568372f7" translate="yes" xml:space="preserve">
          <source>Callback implementation for &lt;a href=&quot;https://hexdocs.pm/elixir/Access.html#c:get_and_update/3&quot;&gt;&lt;code&gt;Access.get_and_update/3&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">에 대한 콜백 구현 &lt;a href=&quot;https://hexdocs.pm/elixir/Access.html#c:get_and_update/3&quot;&gt; &lt;code&gt;Access.get_and_update/3&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f613055a34d5b0cc54d3942a8067e73b97f688f0" translate="yes" xml:space="preserve">
          <source>Callback implementation for &lt;a href=&quot;https://hexdocs.pm/elixir/Access.html#c:pop/2&quot;&gt;&lt;code&gt;Access.pop/2&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">에 대한 콜백 구현 &lt;a href=&quot;https://hexdocs.pm/elixir/Access.html#c:pop/2&quot;&gt; &lt;code&gt;Access.pop/2&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d0f41563b10c703cb7b2e9ba5e91a7b2ccbecf74" translate="yes" xml:space="preserve">
          <source>Callback implementation for &lt;a href=&quot;https://hexdocs.pm/elixir/Application.html#c:start/2&quot;&gt;&lt;code&gt;Application.start/2&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">에 대한 콜백 구현 &lt;a href=&quot;https://hexdocs.pm/elixir/Application.html#c:start/2&quot;&gt; &lt;code&gt;Application.start/2&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="68c58dafe95ef3747136785a32cb0be3190d5a95" translate="yes" xml:space="preserve">
          <source>Callback implementation for &lt;a href=&quot;https://hexdocs.pm/elixir/Exception.html#c:exception/1&quot;&gt;&lt;code&gt;Exception.exception/1&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://hexdocs.pm/elixir/Exception.html#c:exception/1&quot;&gt; &lt;code&gt;Exception.exception/1&lt;/code&gt; 의&lt;/a&gt; 콜백 구현</target>
        </trans-unit>
        <trans-unit id="f2aeddeb86c19d9930349a6b7fa2dda563422a7d" translate="yes" xml:space="preserve">
          <source>Callback implementation for &lt;a href=&quot;https://hexdocs.pm/elixir/Exception.html#c:exception/1&quot;&gt;&lt;code&gt;Exception.exception/1&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">에 대한 콜백 구현 &lt;a href=&quot;https://hexdocs.pm/elixir/Exception.html#c:exception/1&quot;&gt; &lt;code&gt;Exception.exception/1&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="032a4efc6854da59dd9e469ea8f84cad45395207" translate="yes" xml:space="preserve">
          <source>Callback implementation for &lt;a href=&quot;https://hexdocs.pm/elixir/Exception.html#c:message/1&quot;&gt;&lt;code&gt;Exception.message/1&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://hexdocs.pm/elixir/Exception.html#c:message/1&quot;&gt; &lt;code&gt;Exception.message/1&lt;/code&gt; 의&lt;/a&gt; 콜백 구현</target>
        </trans-unit>
        <trans-unit id="1218946b31c04832e0e62cf1bdb9c7d81085c97b" translate="yes" xml:space="preserve">
          <source>Callback implementation for &lt;a href=&quot;https://hexdocs.pm/elixir/Exception.html#c:message/1&quot;&gt;&lt;code&gt;Exception.message/1&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">에 대한 콜백 구현 &lt;a href=&quot;https://hexdocs.pm/elixir/Exception.html#c:message/1&quot;&gt; &lt;code&gt;Exception.message/1&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="043fff358e410d756d69b64693e0aee209f5665a" translate="yes" xml:space="preserve">
          <source>Callback implementation for &lt;a href=&quot;https://hexdocs.pm/elixir/GenServer.html#c:init/1&quot;&gt;&lt;code&gt;GenServer.init/1&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">에 대한 콜백 구현 &lt;a href=&quot;https://hexdocs.pm/elixir/GenServer.html#c:init/1&quot;&gt; &lt;code&gt;GenServer.init/1&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="3cdf88d24ddc0b7e4c16c41e315078007b184333" translate="yes" xml:space="preserve">
          <source>Callback implementation for &lt;a href=&quot;https://hexdocs.pm/elixir/Supervisor.html#c:init/1&quot;&gt;&lt;code&gt;Supervisor.init/1&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">에 대한 콜백 구현 &lt;a href=&quot;https://hexdocs.pm/elixir/Supervisor.html#c:init/1&quot;&gt; &lt;code&gt;Supervisor.init/1&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e47ec3f11d8a914105cb3fef07dbb6ed1c63a4d8" translate="yes" xml:space="preserve">
          <source>Callback implementation for &lt;a href=&quot;phoenix.socket.transport#c:default_config/0&quot;&gt;&lt;code&gt;Phoenix.Socket.Transport.default_config/0&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">에 대한 콜백 구현 &lt;a href=&quot;phoenix.socket.transport#c:default_config/0&quot;&gt; &lt;code&gt;Phoenix.Socket.Transport.default_config/0&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a1708e191eed33380ca67b6028fd8573fdbb644c" translate="yes" xml:space="preserve">
          <source>Callback implementation for &lt;a href=&quot;phoenix.template.engine#c:compile/2&quot;&gt;&lt;code&gt;Phoenix.Template.Engine.compile/2&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;phoenix.template.engine#c:compile/2&quot;&gt; &lt;code&gt;Phoenix.Template.Engine.compile/2&lt;/code&gt; 에&lt;/a&gt; 대한 콜백 구현</target>
        </trans-unit>
        <trans-unit id="ea5ea27a2af7e749a7ba629623c5843bcae054f6" translate="yes" xml:space="preserve">
          <source>Callback implementation for &lt;a href=&quot;phoenix.template.engine#c:compile/2&quot;&gt;&lt;code&gt;Phoenix.Template.Engine.compile/2&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;phoenix.template.engine#c:compile/2&quot;&gt; &lt;code&gt;Phoenix.Template.Engine.compile/2&lt;/code&gt; 에&lt;/a&gt; 대한 콜백 구현 .</target>
        </trans-unit>
        <trans-unit id="4b21277ad35de9d0bbc697bf34687df68d1dd7ec" translate="yes" xml:space="preserve">
          <source>Callback implementation for &lt;a href=&quot;plug#c:call/2&quot;&gt;&lt;code&gt;Plug.call/2&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;plug#c:call/2&quot;&gt; &lt;code&gt;Plug.call/2&lt;/code&gt; 의&lt;/a&gt; 콜백 구현</target>
        </trans-unit>
        <trans-unit id="ae8f3a29268323ceeca5abc36851ba2c103c086b" translate="yes" xml:space="preserve">
          <source>Callback implementation for &lt;a href=&quot;plug#c:call/2&quot;&gt;&lt;code&gt;Plug.call/2&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">에 대한 콜백 구현 &lt;a href=&quot;plug#c:call/2&quot;&gt; &lt;code&gt;Plug.call/2&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="6712d82f4b88479c43c2c73eaf562611fb7e23fa" translate="yes" xml:space="preserve">
          <source>Callback implementation for &lt;a href=&quot;plug#c:init/1&quot;&gt;&lt;code&gt;Plug.init/1&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;plug#c:init/1&quot;&gt; &lt;code&gt;Plug.init/1&lt;/code&gt; 의&lt;/a&gt; 콜백 구현</target>
        </trans-unit>
        <trans-unit id="022af9f513221b7f1f63492515611dcd449eb5e8" translate="yes" xml:space="preserve">
          <source>Callback implementation for &lt;a href=&quot;plug#c:init/1&quot;&gt;&lt;code&gt;Plug.init/1&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">에 대한 콜백 구현 &lt;a href=&quot;plug#c:init/1&quot;&gt; &lt;code&gt;Plug.init/1&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="6457b9900e28960d880713e0be6cfde4ec5db930" translate="yes" xml:space="preserve">
          <source>Callback implementation for &lt;a href=&quot;plug.parsers#c:init/1&quot;&gt;&lt;code&gt;Plug.Parsers.init/1&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;plug.parsers#c:init/1&quot;&gt; &lt;code&gt;Plug.Parsers.init/1&lt;/code&gt; 의&lt;/a&gt; 콜백 구현</target>
        </trans-unit>
        <trans-unit id="c66ea58bed6e4b9609840eaf39b2b719bd12d7ac" translate="yes" xml:space="preserve">
          <source>Callback implementation for &lt;a href=&quot;plug.parsers#c:init/1&quot;&gt;&lt;code&gt;Plug.Parsers.init/1&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">에 대한 콜백 구현 &lt;a href=&quot;plug.parsers#c:init/1&quot;&gt; &lt;code&gt;Plug.Parsers.init/1&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="99de215287a8ed32e9b3a733cfa29574666cd932" translate="yes" xml:space="preserve">
          <source>Callback implementation for &lt;a href=&quot;plug.parsers#c:parse/5&quot;&gt;&lt;code&gt;Plug.Parsers.parse/5&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">에 대한 콜백 구현 &lt;a href=&quot;plug.parsers#c:parse/5&quot;&gt; &lt;code&gt;Plug.Parsers.parse/5&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="b0c139f555137accf02a451a8b1663007120c24c" translate="yes" xml:space="preserve">
          <source>Callback implementation for &lt;a href=&quot;plug.session.store#c:delete/3&quot;&gt;&lt;code&gt;Plug.Session.Store.delete/3&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">에 대한 콜백 구현 &lt;a href=&quot;plug.session.store#c:delete/3&quot;&gt; &lt;code&gt;Plug.Session.Store.delete/3&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ce7ff51daa4d07514d97a7f84deeb51eb9f9702b" translate="yes" xml:space="preserve">
          <source>Callback implementation for &lt;a href=&quot;plug.session.store#c:get/3&quot;&gt;&lt;code&gt;Plug.Session.Store.get/3&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">에 대한 콜백 구현 &lt;a href=&quot;plug.session.store#c:get/3&quot;&gt; &lt;code&gt;Plug.Session.Store.get/3&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="743aca979f7635146ef099e5301227c6a2bd0171" translate="yes" xml:space="preserve">
          <source>Callback implementation for &lt;a href=&quot;plug.session.store#c:init/1&quot;&gt;&lt;code&gt;Plug.Session.Store.init/1&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">에 대한 콜백 구현 &lt;a href=&quot;plug.session.store#c:init/1&quot;&gt; &lt;code&gt;Plug.Session.Store.init/1&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="54dabbe6b1c738df92a743cc1b137377ef2dc1db" translate="yes" xml:space="preserve">
          <source>Callback implementation for &lt;a href=&quot;plug.session.store#c:put/4&quot;&gt;&lt;code&gt;Plug.Session.Store.put/4&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">에 대한 콜백 구현 &lt;a href=&quot;plug.session.store#c:put/4&quot;&gt; &lt;code&gt;Plug.Session.Store.put/4&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="6d2edbcfbb5ce6be0b7a5d8fb89fc814b48c2518" translate="yes" xml:space="preserve">
          <source>Callback implementation for &lt;code&gt;c:Ecto.Association.on_repo_change/5&lt;/code&gt;.</source>
          <target state="translated">에 대한 콜백 구현 &lt;code&gt;c:Ecto.Association.on_repo_change/5&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="07b60a7f444177c89dd1e016b817202d912a922b" translate="yes" xml:space="preserve">
          <source>Callback invoked to start the supervisor and during hot code upgrades</source>
          <target state="translated">수퍼바이저를 시작하고 핫 코드 업그레이드 중에 콜백이 호출되었습니다.</target>
        </trans-unit>
        <trans-unit id="9fbe07680545fab8c38f764f99ebaad2d192e475" translate="yes" xml:space="preserve">
          <source>Callback invoked to start the supervisor and during hot code upgrades.</source>
          <target state="translated">수퍼바이저를 시작하고 핫 코드 업그레이드 중에 콜백이 호출되었습니다.</target>
        </trans-unit>
        <trans-unit id="e40111572fe515536aee3325186cd5acdee91825" translate="yes" xml:space="preserve">
          <source>Callback to start the Cowboy endpoint</source>
          <target state="translated">카우보이 엔드 포인트를 시작하기위한 콜백</target>
        </trans-unit>
        <trans-unit id="f3236f24f016b3d9c0833c991bdcf855546f8e62" translate="yes" xml:space="preserve">
          <source>Callback to start the Cowboy endpoint.</source>
          <target state="translated">카우보이 엔드 포인트를 시작하기위한 콜백</target>
        </trans-unit>
        <trans-unit id="9fdc2cfe374fa5bde1e4e458854875e1709add1c" translate="yes" xml:space="preserve">
          <source>Callbacks</source>
          <target state="translated">Callbacks</target>
        </trans-unit>
        <trans-unit id="d0fbe0f7bb361f1569fe6ed513feb13674ba7d95" translate="yes" xml:space="preserve">
          <source>Callbacks are invoked in the reverse order they are defined (callbacks defined first are invoked last).</source>
          <target state="translated">콜백은 정의 된 역순으로 호출됩니다 (먼저 정의 된 콜백이 마지막에 호출 됨).</target>
        </trans-unit>
        <trans-unit id="5cbc1e632b5dae84c35ee72ee8e331091acf6f0f" translate="yes" xml:space="preserve">
          <source>Callbacks cycle</source>
          <target state="translated">콜백주기</target>
        </trans-unit>
        <trans-unit id="dbbd41fef703690543f89a69dc32d3a42905a61c" translate="yes" xml:space="preserve">
          <source>Called as needed and after merges.</source>
          <target state="translated">필요에 따라 및 병합 후 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="1c4fe82ac39bdc87aed411ead9e3ccd0583d7d31" translate="yes" xml:space="preserve">
          <source>Called to autogenerate a value for id/embed_id/binary_id</source>
          <target state="translated">id / embed_id / binary_id의 값을 자동 생성하기 위해 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="8f68520c1312f30f81829bba3fe8b77ba247f167" translate="yes" xml:space="preserve">
          <source>Called to autogenerate a value for id/embed_id/binary_id.</source>
          <target state="translated">id / embed_id / binary_id의 값을 자동 생성하기 위해 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="807d052993a5d1a26888e1636080fc2b67e8ed03" translate="yes" xml:space="preserve">
          <source>Called when an application is started</source>
          <target state="translated">응용 프로그램이 시작될 때 호출</target>
        </trans-unit>
        <trans-unit id="f0ca56a7a06bc47a8cf3a0a7612d281facc7aec4" translate="yes" xml:space="preserve">
          <source>Called when an application is started.</source>
          <target state="translated">응용 프로그램이 시작될 때 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="7c9a634c7a8d3becce10c69bdfff8821034955bf" translate="yes" xml:space="preserve">
          <source>Callers should only subscribe to a given topic a single time. Duplicate subscriptions for a Pid/topic pair are allowed and will cause duplicate events to be sent; however, when using &lt;a href=&quot;phoenix.pubsub#unsubscribe/3&quot;&gt;&lt;code&gt;Phoenix.PubSub.unsubscribe/3&lt;/code&gt;&lt;/a&gt;, all duplicate subscriptions will be dropped.</source>
          <target state="translated">발신자는 주어진 주제에 한 번만 구독해야합니다. Pid / topic 쌍에 대한 중복 구독이 허용되며 중복 이벤트가 전송됩니다. 그러나 &lt;a href=&quot;phoenix.pubsub#unsubscribe/3&quot;&gt; &lt;code&gt;Phoenix.PubSub.unsubscribe/3&lt;/code&gt; 를 사용&lt;/a&gt; 하면 모든 중복 구독이 삭제됩니다.</target>
        </trans-unit>
        <trans-unit id="51473715b3055d8b5369d919c4ebe6516370cc8a" translate="yes" xml:space="preserve">
          <source>Calls the Endpoint and bypasses Router match</source>
          <target state="translated">엔드 포인트를 호출하고 라우터 일치를 무시합니다.</target>
        </trans-unit>
        <trans-unit id="370acfef3703e3f90e392daddd10376201a01d84" translate="yes" xml:space="preserve">
          <source>Calls the Endpoint and bypasses Router match.</source>
          <target state="translated">엔드 포인트를 호출하고 라우터 일치를 무시합니다.</target>
        </trans-unit>
        <trans-unit id="a5c2f31f12329b480874d41c2cb0a6bf9acc6f3c" translate="yes" xml:space="preserve">
          <source>Case sensitivity</source>
          <target state="translated">대소 문자 구분</target>
        </trans-unit>
        <trans-unit id="e0f540f92c7222f2992e0ffca4cb3124cdab0766" translate="yes" xml:space="preserve">
          <source>Casting</source>
          <target state="translated">Casting</target>
        </trans-unit>
        <trans-unit id="db6a2272ded0700644f24cfe5b5b0309474bb690" translate="yes" xml:space="preserve">
          <source>Casts a value to the given type</source>
          <target state="translated">주어진 유형으로 값을 캐스트</target>
        </trans-unit>
        <trans-unit id="3b890ef0afa0f6d0ec2387b3100aa57cd59d471f" translate="yes" xml:space="preserve">
          <source>Casts a value to the given type.</source>
          <target state="translated">주어진 유형으로 값을 캐스트합니다.</target>
        </trans-unit>
        <trans-unit id="39961a9c776d161601bfe01b5f9a4f0958708e12" translate="yes" xml:space="preserve">
          <source>Casts the given association with the changeset parameters</source>
          <target state="translated">주어진 변경 세트 매개 변수와의 연관성을 캐스트합니다.</target>
        </trans-unit>
        <trans-unit id="be9379c9eea53b656902efc6e1b5e1e99a20af64" translate="yes" xml:space="preserve">
          <source>Casts the given association with the changeset parameters.</source>
          <target state="translated">변경 세트 매개 변수와의 지정된 연관성을 캐스트합니다.</target>
        </trans-unit>
        <trans-unit id="e95ccfe299647f87c0cba2bbfe94e26e86ce5050" translate="yes" xml:space="preserve">
          <source>Casts the given embed with the changeset parameters</source>
          <target state="translated">변경 세트 매개 변수를 사용하여 지정된 임베드를 캐스트합니다.</target>
        </trans-unit>
        <trans-unit id="f7f50157aaf9bbd054614b39e14e8c260e3e785a" translate="yes" xml:space="preserve">
          <source>Casts the given embed with the changeset parameters.</source>
          <target state="translated">주어진 임베디드를 변경 세트 매개 변수와 함께 캐스트합니다.</target>
        </trans-unit>
        <trans-unit id="98f8af8a0284595a1a3d48928fba619382632646" translate="yes" xml:space="preserve">
          <source>Casts the given input to the custom type</source>
          <target state="translated">주어진 입력을 커스텀 타입으로 캐스트</target>
        </trans-unit>
        <trans-unit id="8755ddad47681604b78b876fd901374c259a26c8" translate="yes" xml:space="preserve">
          <source>Casts the given input to the custom type.</source>
          <target state="translated">지정된 입력을 사용자 정의 유형으로 캐스트합니다.</target>
        </trans-unit>
        <trans-unit id="c0dc7b80874914239cf81ad7d06a8bba507b97e8" translate="yes" xml:space="preserve">
          <source>Casts the given value to the given type at the database level</source>
          <target state="translated">데이터베이스 수준에서 주어진 값을 주어진 유형으로 캐스트</target>
        </trans-unit>
        <trans-unit id="d48a0c8cc72b886950ec9ba2adae18a1f5adf08f" translate="yes" xml:space="preserve">
          <source>Casts the given value to the given type at the database level.</source>
          <target state="translated">데이터베이스 수준에서 지정된 값을 지정된 유형으로 캐스팅합니다.</target>
        </trans-unit>
        <trans-unit id="e8438762801637aaa4831a4bdbf6654a398aeee5" translate="yes" xml:space="preserve">
          <source>Casts to UUID</source>
          <target state="translated">UUID로 캐스트</target>
        </trans-unit>
        <trans-unit id="314cfcee4efb4546ed893c42c5d11295a20cc005" translate="yes" xml:space="preserve">
          <source>Casts to UUID.</source>
          <target state="translated">UUID로 캐스트합니다.</target>
        </trans-unit>
        <trans-unit id="712fa742793fb2c31cc8448917481b50249986ba" translate="yes" xml:space="preserve">
          <source>Causes the multi to fail with the given value</source>
          <target state="translated">주어진 값으로 멀티가 실패합니다.</target>
        </trans-unit>
        <trans-unit id="aacc9b97d22fcfe1b20f63b5787c16d8ed4f97e2" translate="yes" xml:space="preserve">
          <source>Causes the multi to fail with the given value.</source>
          <target state="translated">주어진 값으로 멀티가 실패합니다.</target>
        </trans-unit>
        <trans-unit id="1a9a7a310e9346ab3eec5877a2adbd3127520d90" translate="yes" xml:space="preserve">
          <source>Changed attributes will only be added if the change does not have the same value as the field in the data.</source>
          <target state="translated">변경된 속성은 변경 내용이 데이터의 필드와 동일한 값을 갖지 않는 경우에만 추가됩니다.</target>
        </trans-unit>
        <trans-unit id="1240b51d036bf14642c6213923da9a6da0fcd9a6" translate="yes" xml:space="preserve">
          <source>Changes all empty parameters to nils (&amp;ldquo;&amp;rdquo; -&amp;gt; nil).</source>
          <target state="translated">모든 빈 매개 변수를 nil ( &quot;&quot;-&amp;gt; nil)로 변경합니다.</target>
        </trans-unit>
        <trans-unit id="e85e8376066e6efa07d004cd93aa1d6c124968fb" translate="yes" xml:space="preserve">
          <source>Changes empty parameters of &lt;code&gt;required_key&lt;/code&gt; (recursively) to nils</source>
          <target state="translated">&lt;code&gt;required_key&lt;/code&gt; 의 빈 매개 변수를 (재귀 적으로) nil로 변경합니다.</target>
        </trans-unit>
        <trans-unit id="ba2dbae392ef539a56ff20bd536d56826af3e21a" translate="yes" xml:space="preserve">
          <source>Changeset actions</source>
          <target state="translated">변경 조치</target>
        </trans-unit>
        <trans-unit id="4ff4e9ed29935614b3b0a4860d00f7c7fab653fd" translate="yes" xml:space="preserve">
          <source>Changesets</source>
          <target state="translated">Changesets</target>
        </trans-unit>
        <trans-unit id="15fe687723b50a7f1c89b99b8e32c64ca13bf776" translate="yes" xml:space="preserve">
          <source>Changesets allow developers to filter, cast, and validate changes before we apply them to the data. Imagine the given schema:</source>
          <target state="translated">개발자는 변경 세트를 사용하여 변경 사항을 데이터에 적용하기 전에 필터링, 캐스트 및 유효성 검사를 수행 할 수 있습니다. 주어진 스키마를 상상해보십시오.</target>
        </trans-unit>
        <trans-unit id="106dc8111d962bf3fa4d30e3e04971c906cf60bd" translate="yes" xml:space="preserve">
          <source>Changesets allow filtering, casting, validation and definition of constraints when manipulating structs.</source>
          <target state="translated">변경 세트를 사용하면 구조체를 조작 할 때 제약 조건을 필터링, 캐스팅, 유효성 검사 및 정의 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4826b62fc4c9e7e5326175150a971664f8ce5fbd" translate="yes" xml:space="preserve">
          <source>Changesets allow working with both kinds of data:</source>
          <target state="translated">변경 세트를 사용하면 두 가지 유형의 데이터 모두에서 작업 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="97d4b08927d9aa72714889f4f73366760107150c" translate="yes" xml:space="preserve">
          <source>Changesets are also capable of transforming database constraints, like unique indexes and foreign key checks, into errors. Allowing developers to keep their database consistent while still providing proper feedback to end users. Check &lt;a href=&quot;ecto.changeset#unique_constraint/3&quot;&gt;&lt;code&gt;Ecto.Changeset.unique_constraint/3&lt;/code&gt;&lt;/a&gt; for some examples as well as the other &lt;code&gt;_constraint&lt;/code&gt; functions.</source>
          <target state="translated">변경 집합은 고유 인덱스 및 외래 키 검사와 같은 데이터베이스 제약 조건을 오류로 변환 할 수도 있습니다. 개발자가 최종 사용자에게 적절한 피드백을 제공하면서 데이터베이스의 일관성을 유지할 수 있습니다. 일부 예제와 다른 &lt;code&gt;_constraint&lt;/code&gt; 함수 는 &lt;a href=&quot;ecto.changeset#unique_constraint/3&quot;&gt; &lt;code&gt;Ecto.Changeset.unique_constraint/3&lt;/code&gt; &lt;/a&gt; 를 확인하십시오 .</target>
        </trans-unit>
        <trans-unit id="eaabb4b1610b2670ddb90bb9b3f51b64b7f6fc71" translate="yes" xml:space="preserve">
          <source>Changesets can also be used with data in a plain map, by following the same API:</source>
          <target state="translated">동일한 API에 따라 일반 맵의 데이터와 함께 변경 세트를 사용할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="f35e945b11b533c908a172bde59cd90a6810e709" translate="yes" xml:space="preserve">
          <source>Changesets do not support this type of constraints. When working with deferred constraints, a violation while invoking &lt;code&gt;Repo.insert/2&lt;/code&gt; or &lt;code&gt;Repo.update/2&lt;/code&gt; won&amp;rsquo;t return &lt;code&gt;{:error, changeset}&lt;/code&gt;, but rather raise an error at the end of the transaction.</source>
          <target state="translated">변경 세트는이 유형의 제약 조건을 지원하지 않습니다. 지연된 제약 조건으로 작업 할 때 &lt;code&gt;Repo.insert/2&lt;/code&gt; 또는 &lt;code&gt;Repo.update/2&lt;/code&gt; 를 호출하는 동안 위반 하면 &lt;code&gt;{:error, changeset}&lt;/code&gt; 반환되지 않고 트랜잭션이 끝날 때 오류가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="a4d719c687cbb64610b4daa85e8756d9334b9d25" translate="yes" xml:space="preserve">
          <source>Changesets have an action field which is usually set by &lt;a href=&quot;ecto.repo&quot;&gt;&lt;code&gt;Ecto.Repo&lt;/code&gt;&lt;/a&gt; whenever one of the operations such as &lt;code&gt;insert&lt;/code&gt; or &lt;code&gt;update&lt;/code&gt; is called:</source>
          <target state="translated">변경 세트 에는 &lt;code&gt;insert&lt;/code&gt; 또는 &lt;code&gt;update&lt;/code&gt; 와 같은 조작 중 하나 가 &lt;a href=&quot;ecto.repo&quot;&gt; &lt;code&gt;Ecto.Repo&lt;/code&gt; &lt;/a&gt; 될 때마다 일반적으로 Ecto.Repo에 의해 설정되는 조치 필드 가 있습니다.</target>
        </trans-unit>
        <trans-unit id="24788605a643b294a485fe7186f622e7d307dc0a" translate="yes" xml:space="preserve">
          <source>Channel testing</source>
          <target state="translated">채널 테스트</target>
        </trans-unit>
        <trans-unit id="e554fb4eb7fab7c704e73d8c51fda0b3df2886d9" translate="yes" xml:space="preserve">
          <source>Channels can reply, synchronously, to any &lt;code&gt;handle_in/3&lt;/code&gt; event. To match pushes with replies, clients must include a unique &lt;code&gt;ref&lt;/code&gt; with every message and the channel server will reply with a matching ref where the client can pick up the callback for the matching reply.</source>
          <target state="translated">채널은 모든 &lt;code&gt;handle_in/3&lt;/code&gt; 이벤트에 동기식으로 응답 할 수 있습니다 . 회신과 푸시를 일치 시키려면 클라이언트가 모든 메시지에 고유 한 &lt;code&gt;ref&lt;/code&gt; 를 포함해야 하며 채널 서버는 클라이언트가 일치하는 응답에 대한 콜백을 선택할 수있는 일치하는 참조로 응답합니다.</target>
        </trans-unit>
        <trans-unit id="aa5494fe46265f9955154bc7bf0d7c3b9f070d29" translate="yes" xml:space="preserve">
          <source>Channels can send two types of message back to a transport: &lt;a href=&quot;phoenix.socket.message&quot;&gt;&lt;code&gt;Phoenix.Socket.Message&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;phoenix.socket.reply&quot;&gt;&lt;code&gt;Phoenix.Socket.Reply&lt;/code&gt;&lt;/a&gt;. Those messages are encoded in the channel into a format defined by the transport. That&amp;rsquo;s why transports are required to pass a serializer that abides to the behaviour described in &lt;a href=&quot;phoenix.transports.serializer&quot;&gt;&lt;code&gt;Phoenix.Transports.Serializer&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">채널은 두 가지 유형의 메시지 ( &lt;a href=&quot;phoenix.socket.message&quot;&gt; &lt;code&gt;Phoenix.Socket.Message&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;phoenix.socket.reply&quot;&gt; &lt;code&gt;Phoenix.Socket.Reply&lt;/code&gt; )를&lt;/a&gt; 전송으로 다시 보낼 수 있습니다 . 이러한 메시지는 채널에서 전송에 의해 정의 된 형식으로 인코딩됩니다. 그렇기 때문에 &lt;a href=&quot;phoenix.transports.serializer&quot;&gt; &lt;code&gt;Phoenix.Transports.Serializer&lt;/code&gt; 에&lt;/a&gt; 설명 된 동작을 따르는 직렬 변환기를 전달해야합니다 .</target>
        </trans-unit>
        <trans-unit id="b3d27d901eb026cad065e54c8192d31e835b640f" translate="yes" xml:space="preserve">
          <source>Channels provide a means for bidirectional communication from clients that integrate with the &lt;a href=&quot;../phoenix_pubsub/1.0.2/phoenix.pubsub&quot;&gt;&lt;code&gt;Phoenix.PubSub&lt;/code&gt;&lt;/a&gt; layer for soft-realtime functionality.</source>
          <target state="translated">채널은 소프트 실시간 기능을 위해 &lt;a href=&quot;../phoenix_pubsub/1.0.2/phoenix.pubsub&quot;&gt; &lt;code&gt;Phoenix.PubSub&lt;/code&gt; &lt;/a&gt; 계층 과 통합되는 클라이언트의 양방향 통신 수단을 제공 합니다.</target>
        </trans-unit>
        <trans-unit id="b2ae9471e7a712ab94fdb6bad36baf383fd99d00" translate="yes" xml:space="preserve">
          <source>Check &lt;a href=&quot;#datetime_select/3&quot;&gt;&lt;code&gt;datetime_select/3&lt;/code&gt;&lt;/a&gt; for more information on options and supported values.</source>
          <target state="translated">옵션 및 지원되는 값에 대한 자세한 내용은 &lt;a href=&quot;#datetime_select/3&quot;&gt; &lt;code&gt;datetime_select/3&lt;/code&gt; &lt;/a&gt; 를 확인하십시오 .</target>
        </trans-unit>
        <trans-unit id="0876127fa1f23c598e6ebc5194c252ea6036daa6" translate="yes" xml:space="preserve">
          <source>Check &lt;a href=&quot;#get_csrf_token/0&quot;&gt;&lt;code&gt;get_csrf_token/0&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#delete_csrf_token/0&quot;&gt;&lt;code&gt;delete_csrf_token/0&lt;/code&gt;&lt;/a&gt; for retrieving and deleting CSRF tokens.</source>
          <target state="translated">CSRF 토큰을 검색하고 삭제 &lt;a href=&quot;#get_csrf_token/0&quot;&gt; &lt;code&gt;get_csrf_token/0&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#delete_csrf_token/0&quot;&gt; &lt;code&gt;delete_csrf_token/0&lt;/code&gt; &lt;/a&gt; 을 확인하십시오 .</target>
        </trans-unit>
        <trans-unit id="36e8d73c5d9d7c1e6dd7e543b8d5b6cf640ee771" translate="yes" xml:space="preserve">
          <source>Check &lt;a href=&quot;#scope/2&quot;&gt;&lt;code&gt;scope/2&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#resources/4&quot;&gt;&lt;code&gt;resources/4&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="translated">검사 &lt;a href=&quot;#scope/2&quot;&gt; &lt;code&gt;scope/2&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#resources/4&quot;&gt; &lt;code&gt;resources/4&lt;/code&gt; &lt;/a&gt; 더 많은 정보를 얻을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="78921fd5a32a35386391dc343718e4bd2cd828f9" translate="yes" xml:space="preserve">
          <source>Check &lt;a href=&quot;ecto.schema#embeds_one/3&quot;&gt;&lt;code&gt;Ecto.Schema.embeds_one/3&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;ecto.schema#embeds_many/3&quot;&gt;&lt;code&gt;Ecto.Schema.embeds_many/3&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="translated">확인 &lt;a href=&quot;ecto.schema#embeds_one/3&quot;&gt; &lt;code&gt;Ecto.Schema.embeds_one/3&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;ecto.schema#embeds_many/3&quot;&gt; &lt;code&gt;Ecto.Schema.embeds_many/3&lt;/code&gt; &lt;/a&gt; 더 많은 정보를 얻을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e2e590821015449553f7a083a040bba81687e098" translate="yes" xml:space="preserve">
          <source>Checking side-effects</source>
          <target state="translated">부작용 확인</target>
        </trans-unit>
        <trans-unit id="6ac6252bbede5055777cad6522cdba3a204e3385" translate="yes" xml:space="preserve">
          <source>Checks for a check constraint in the given field</source>
          <target state="translated">주어진 필드에서 점검 제한 조건을 점검합니다.</target>
        </trans-unit>
        <trans-unit id="a007ae3fcb27398cfb2f8cfb88cd969c756755f6" translate="yes" xml:space="preserve">
          <source>Checks for a check constraint in the given field.</source>
          <target state="translated">주어진 필드에서 점검 제한 조건을 점검합니다.</target>
        </trans-unit>
        <trans-unit id="18d676cde979db601a52e91aaaf4476188fb0ed4" translate="yes" xml:space="preserve">
          <source>Checks for a unique constraint in the given field</source>
          <target state="translated">주어진 필드에서 고유 제약 조건을 확인합니다</target>
        </trans-unit>
        <trans-unit id="aa59f930724fcdea67d084d926d28fc4c15f4c03" translate="yes" xml:space="preserve">
          <source>Checks for a unique constraint in the given field.</source>
          <target state="translated">주어진 필드에서 고유 제한 조건을 확인합니다.</target>
        </trans-unit>
        <trans-unit id="1806f8814a9a2a5f10b61db2ed93331ad1ccc220" translate="yes" xml:space="preserve">
          <source>Checks for an exclusion constraint in the given field</source>
          <target state="translated">주어진 필드에서 제외 제약 조건을 확인합니다</target>
        </trans-unit>
        <trans-unit id="fa586f48c4ea975ae752e15729708ae4eb86c327" translate="yes" xml:space="preserve">
          <source>Checks for an exclusion constraint in the given field.</source>
          <target state="translated">주어진 필드에서 제외 제약 조건을 확인합니다.</target>
        </trans-unit>
        <trans-unit id="75666e8b3dce3b6bb93ea5456967b9687a782186" translate="yes" xml:space="preserve">
          <source>Checks for foreign key constraint in the given field</source>
          <target state="translated">주어진 필드에서 외래 키 제약 조건을 확인합니다</target>
        </trans-unit>
        <trans-unit id="b3b2e641330818474410be9363a7acfdf6f7e027" translate="yes" xml:space="preserve">
          <source>Checks for foreign key constraint in the given field.</source>
          <target state="translated">주어진 필드에서 외래 키 제약 조건을 확인합니다.</target>
        </trans-unit>
        <trans-unit id="5fa1bef6695916bf62ca3fc0e50a6cca0de72c75" translate="yes" xml:space="preserve">
          <source>Checks if Endpoint&amp;rsquo;s web server has been configured to start</source>
          <target state="translated">엔드 포인트의 웹 서버가 시작되도록 구성되어 있는지 확인</target>
        </trans-unit>
        <trans-unit id="771534d55fe1b3aac38a312bfe67507aff81041f" translate="yes" xml:space="preserve">
          <source>Checks if Endpoint&amp;rsquo;s web server has been configured to start.</source>
          <target state="translated">엔드 포인트의 웹 서버가 시작되도록 구성되어 있는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="963f346febde4845b780cb252e5679ea119288ec" translate="yes" xml:space="preserve">
          <source>Checks if a given type matches with a primitive type that can be found in queries</source>
          <target state="translated">주어진 유형이 쿼리에서 찾을 수있는 기본 유형과 일치하는지 확인</target>
        </trans-unit>
        <trans-unit id="5e9a8212ae6f7073ddffb09a0d0e0eae45982cea" translate="yes" xml:space="preserve">
          <source>Checks if a given type matches with a primitive type that can be found in queries.</source>
          <target state="translated">주어진 유형이 쿼리에서 찾을 수있는 기본 유형과 일치하는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="c8de4dbd68477598dffed3dcaf6a30c4ed80304c" translate="yes" xml:space="preserve">
          <source>Checks if an association is loaded</source>
          <target state="translated">연결이로드되었는지 확인</target>
        </trans-unit>
        <trans-unit id="6d1a314f9be25f92609b0bf832c30f5da98f3a76" translate="yes" xml:space="preserve">
          <source>Checks if an association is loaded.</source>
          <target state="translated">연결이로드되었는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="92874536f2bd61a01795ca88b0a59254d1460cf5" translate="yes" xml:space="preserve">
          <source>Checks if set has a non-empty delta</source>
          <target state="translated">세트에 비어 있지 않은 델타가 있는지 확인</target>
        </trans-unit>
        <trans-unit id="5da5d365962f5490f61e15a84082285451a63d49" translate="yes" xml:space="preserve">
          <source>Checks if set has a non-empty delta.</source>
          <target state="translated">세트에 비어 있지 않은 델타가 있는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="b45c07482c336ba440a9fdb88056674d4c21bc6b" translate="yes" xml:space="preserve">
          <source>Checks if the given atom can be used as base type</source>
          <target state="translated">주어진 원자가 기본 유형으로 사용될 수 있는지 확인</target>
        </trans-unit>
        <trans-unit id="f3e31e2d1943a777f5e51ad6c5913e9026f39c24" translate="yes" xml:space="preserve">
          <source>Checks if the given atom can be used as base type.</source>
          <target state="translated">주어진 원자를 기본 유형으로 사용할 수 있는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="f087876ed1366027b27ce3f6d468eff9f6993be5" translate="yes" xml:space="preserve">
          <source>Checks if the given atom can be used as composite type</source>
          <target state="translated">주어진 원자가 복합 유형으로 사용될 수 있는지 확인</target>
        </trans-unit>
        <trans-unit id="c182b160ab8eb55a3f19b370e22b4a383096218f" translate="yes" xml:space="preserve">
          <source>Checks if the given atom can be used as composite type.</source>
          <target state="translated">주어진 원자를 복합 유형으로 사용할 수 있는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="ec2ead142ebe4a2acd898e340f5a641a34de0cd1" translate="yes" xml:space="preserve">
          <source>Checks if the given value is nil</source>
          <target state="translated">주어진 값이 nil인지 확인</target>
        </trans-unit>
        <trans-unit id="ba10eedbcbac96de733b45e57696f86fd9e2ae1a" translate="yes" xml:space="preserve">
          <source>Checks if the given value is nil.</source>
          <target state="translated">주어진 값이 nil인지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="1ff1fb2e41e4abad270b1d1faf934efc56ffec15" translate="yes" xml:space="preserve">
          <source>Checks if the left-value is included in the right one</source>
          <target state="translated">왼쪽 값이 오른쪽 값에 포함되어 있는지 확인</target>
        </trans-unit>
        <trans-unit id="012a92f0ea9c7b9bd332b5b0280f7b3e079b95d6" translate="yes" xml:space="preserve">
          <source>Checks if the left-value is included in the right one.</source>
          <target state="translated">왼쪽 값이 오른쪽 값에 포함되어 있는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="ff79efe7f70ca6c7a26880d90f9fdcf1b5e2e115" translate="yes" xml:space="preserve">
          <source>Checks if there exists an entry that matches the given query</source>
          <target state="translated">주어진 검색어와 일치하는 항목이 있는지 확인</target>
        </trans-unit>
        <trans-unit id="01ba608b03c189712dac599e833b596871fe995e" translate="yes" xml:space="preserve">
          <source>Checks if there exists an entry that matches the given query.</source>
          <target state="translated">주어진 쿼리와 일치하는 항목이 있는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="389242c9a730035773dd2bfb10ced2e95b92bbe5" translate="yes" xml:space="preserve">
          <source>Checks if two terms are equal</source>
          <target state="translated">두 항이 같은지 확인</target>
        </trans-unit>
        <trans-unit id="38a69d5cc36841de8cb46e3c595f0840ce93f8d2" translate="yes" xml:space="preserve">
          <source>Checks if two terms are equal.</source>
          <target state="translated">두 항이 같은지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="fdde16246d41643a71fab5ae2a319f1ca2bec878" translate="yes" xml:space="preserve">
          <source>Checks if two terms are semantically equal</source>
          <target state="translated">두 용어가 의미 적으로 같은지 확인</target>
        </trans-unit>
        <trans-unit id="6646b3291804effbb7f740fa536c58d472e9a65b" translate="yes" xml:space="preserve">
          <source>Checks if two terms are semantically equal.</source>
          <target state="translated">두 용어가 의미 적으로 같은지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="3706563a91c576d80ebc42e1e60ed72b66677397" translate="yes" xml:space="preserve">
          <source>Checks if we have a primitive type</source>
          <target state="translated">기본 유형이 있는지 확인</target>
        </trans-unit>
        <trans-unit id="d94cdaa6c65db405671997b233631e33f3635ec0" translate="yes" xml:space="preserve">
          <source>Checks if we have a primitive type.</source>
          <target state="translated">기본 유형이 있는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="ce70e4262eea85373e3f962f772047eb2b5cf584" translate="yes" xml:space="preserve">
          <source>Checks out a connection for the duration of the function</source>
          <target state="translated">기능 지속 시간 동안 연결을 확인합니다</target>
        </trans-unit>
        <trans-unit id="f8d5ddc97e30fb43102d8e232102ad0e94918cbc" translate="yes" xml:space="preserve">
          <source>Checks out a connection for the duration of the function.</source>
          <target state="translated">기능이 지속되는 동안 연결을 확인합니다.</target>
        </trans-unit>
        <trans-unit id="b4191a0c935af45665f885d48471cec8420ff8f6" translate="yes" xml:space="preserve">
          <source>Checks out a connection for the duration of the given function</source>
          <target state="translated">주어진 기능의 지속 시간 동안 연결을 확인합니다</target>
        </trans-unit>
        <trans-unit id="432c332c21e1ebe651f69db561aa30d3341e739c" translate="yes" xml:space="preserve">
          <source>Checks out a connection for the duration of the given function.</source>
          <target state="translated">주어진 기능이 지속되는 동안 연결을 확인합니다.</target>
        </trans-unit>
        <trans-unit id="b26ef7e7f2c927fed219263f4d0d0a8b4e9f30af" translate="yes" xml:space="preserve">
          <source>Checks the associated field does not exist</source>
          <target state="translated">관련 필드가 존재하지 않는지 확인</target>
        </trans-unit>
        <trans-unit id="bd86aa766094ca0b2d939788a04bc10d840c8eda" translate="yes" xml:space="preserve">
          <source>Checks the associated field does not exist.</source>
          <target state="translated">관련 필드가 존재하지 않는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="6501c966cafe6555cac818a9fd8b0d64fb1327f4" translate="yes" xml:space="preserve">
          <source>Checks the associated field exists</source>
          <target state="translated">관련 필드가 존재하는지 확인</target>
        </trans-unit>
        <trans-unit id="10b1ca019610fea359d98628c9db1be68d7b49da" translate="yes" xml:space="preserve">
          <source>Checks the associated field exists.</source>
          <target state="translated">관련 필드가 존재하는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="f90bf014a68be0e1e612c9cab06f18981fe73e91" translate="yes" xml:space="preserve">
          <source>Checks the origin request header against the list of allowed origins</source>
          <target state="translated">허용 된 출처 목록과 비교하여 출처 요청 헤더를 확인합니다.</target>
        </trans-unit>
        <trans-unit id="9bf75f3781d0dbe77c4656080b8da67d7099adab" translate="yes" xml:space="preserve">
          <source>Checks the origin request header against the list of allowed origins.</source>
          <target state="translated">허용 된 오리진 목록과 비교하여 오리진 요청 헤더를 확인합니다.</target>
        </trans-unit>
        <trans-unit id="d01c2aab6be8cde7caad416de7bc0d04d65e24c6" translate="yes" xml:space="preserve">
          <source>Checks to see if the &lt;code&gt;required_key&lt;/code&gt; is present</source>
          <target state="translated">&lt;code&gt;required_key&lt;/code&gt; 가 존재 하는지 확인</target>
        </trans-unit>
        <trans-unit id="c4e66d6a6903255b0703717c7e856b65d04f4679" translate="yes" xml:space="preserve">
          <source>Checks to see if the required_key is present (can be empty)</source>
          <target state="translated">required_key가 있는지 확인합니다 (비어있을 수 있음).</target>
        </trans-unit>
        <trans-unit id="6929a94fa1722ac5684bbfa4457c2e9ae0947c95" translate="yes" xml:space="preserve">
          <source>Cipher Suites</source>
          <target state="translated">암호 스위트</target>
        </trans-unit>
        <trans-unit id="3f908ace8be79c6747236457248fd8f0a02cf607" translate="yes" xml:space="preserve">
          <source>Clears all flash messages</source>
          <target state="translated">모든 플래시 메시지를 지 웁니다.</target>
        </trans-unit>
        <trans-unit id="dcfd4db63de578c0ce575e1784274c31299c16f5" translate="yes" xml:space="preserve">
          <source>Clears all flash messages.</source>
          <target state="translated">모든 플래시 메시지를 지 웁니다.</target>
        </trans-unit>
        <trans-unit id="b5587a1be7dabdd4ea76580016a9a98fe251614b" translate="yes" xml:space="preserve">
          <source>Clears the entire session</source>
          <target state="translated">전체 세션을 지 웁니다.</target>
        </trans-unit>
        <trans-unit id="ba79f95b8ce1750f56350e7f99c4a89ccd2f2fde" translate="yes" xml:space="preserve">
          <source>Clears the entire session.</source>
          <target state="translated">전체 세션을 지 웁니다.</target>
        </trans-unit>
        <trans-unit id="8349eb1eacd2b2432ee3a410d4c08f5f24e21e78" translate="yes" xml:space="preserve">
          <source>Clears up the flash storage</source>
          <target state="translated">플래시 스토리지를 지 웁니다.</target>
        </trans-unit>
        <trans-unit id="c7267abbc6b07fa0a184e7ba7bef3624af318696" translate="yes" xml:space="preserve">
          <source>Clears up the flash storage.</source>
          <target state="translated">플래시 스토리지를 지 웁니다.</target>
        </trans-unit>
        <trans-unit id="a4fc1028434897d0d9b57e73e4734c9104f06a17" translate="yes" xml:space="preserve">
          <source>Clients are expected to send the Channel Transport protocol version that they expect to be talking to. The version can be retrieved on the server from &lt;code&gt;Phoenix.Channel.Transport.protocol_version/0&lt;/code&gt;. If no version is provided, the Transport adapters should default to assume a &lt;code&gt;&quot;1.0.0&quot;&lt;/code&gt; version number. See &lt;code&gt;web/static/js/phoenix.js&lt;/code&gt; for an example transport client implementation.</source>
          <target state="translated">클라이언트는 대화 할 채널 전송 프로토콜 버전을 보내야합니다. 버전은 서버에서 &lt;code&gt;Phoenix.Channel.Transport.protocol_version/0&lt;/code&gt; 에서 검색 할 수 있습니다 . 버전이 제공되지 않으면 전송 어댑터는 기본적으로 &lt;code&gt;&quot;1.0.0&quot;&lt;/code&gt; 버전 번호 를 가정해야합니다 . 전송 클라이언트 구현 예제는 &lt;code&gt;web/static/js/phoenix.js&lt;/code&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="bb642ce3e7dd820f226a0eb2901f439ddb01422d" translate="yes" xml:space="preserve">
          <source>Clients can be implemented for other protocols and encodings by abiding by the &lt;a href=&quot;phoenix.socket.message&quot;&gt;&lt;code&gt;Phoenix.Socket.Message&lt;/code&gt;&lt;/a&gt; format.</source>
          <target state="translated">&lt;a href=&quot;phoenix.socket.message&quot;&gt; &lt;code&gt;Phoenix.Socket.Message&lt;/code&gt; &lt;/a&gt; 형식 을 준수하여 다른 프로토콜 및 인코딩을 위해 클라이언트를 구현할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="1084b5d1689adfabc4b29c44836fe5d9e843e847" translate="yes" xml:space="preserve">
          <source>Clients must join a channel to send and receive PubSub events on that channel. Your channels must implement a &lt;code&gt;join/3&lt;/code&gt; callback that authorizes the socket for the given topic. For example, you could check if the user is allowed to join that particular room.</source>
          <target state="translated">해당 채널에서 PubSub 이벤트를 보내고 받으려면 클라이언트가 채널에 참여해야합니다. 채널은 주어진 주제에 대한 소켓을 승인 하는 &lt;code&gt;join/3&lt;/code&gt; 콜백을 구현해야합니다 . 예를 들어, 사용자가 해당 특정 회의실에 참여할 수 있는지 확인할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e3e91ba77145ff728ca9d0eac7d3d982a8f9407e" translate="yes" xml:space="preserve">
          <source>Closing channels is synchronous and has a default timeout of 5000 milliseconds.</source>
          <target state="translated">닫는 채널은 동기식이며 기본 시간 제한은 5000 밀리 초입니다.</target>
        </trans-unit>
        <trans-unit id="a59323355e7bcb25157e9c8251a4dbc71cc359d9" translate="yes" xml:space="preserve">
          <source>Combines result sets of multiple queries. The &lt;code&gt;select&lt;/code&gt; of each query must be exactly the same, with the same types in the same order.</source>
          <target state="translated">여러 쿼리의 결과 집합을 결합합니다. 각 쿼리 의 &lt;code&gt;select&lt;/code&gt; 은 동일한 순서로 동일한 유형으로 정확히 동일해야합니다.</target>
        </trans-unit>
        <trans-unit id="6e3d3bf1961b8057b125fc05310e2099de8793b0" translate="yes" xml:space="preserve">
          <source>Command line options</source>
          <target state="translated">명령 줄 옵션</target>
        </trans-unit>
        <trans-unit id="4ab6bd65a3f415745443c9f59c3ccefed58137d8" translate="yes" xml:space="preserve">
          <source>Commands invoked to prepare a query for &lt;code&gt;all&lt;/code&gt;, &lt;code&gt;update_all&lt;/code&gt; and &lt;code&gt;delete_all&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;all&lt;/code&gt; , &lt;code&gt;update_all&lt;/code&gt; 및 &lt;code&gt;delete_all&lt;/code&gt; 에 대한 쿼리를 준비하기 위해 호출 된 명령</target>
        </trans-unit>
        <trans-unit id="196b5fd56be1b957e32ac7a8b4599e84def88107" translate="yes" xml:space="preserve">
          <source>Commands invoked to prepare a query for &lt;code&gt;all&lt;/code&gt;, &lt;code&gt;update_all&lt;/code&gt; and &lt;code&gt;delete_all&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;all&lt;/code&gt; , &lt;code&gt;update_all&lt;/code&gt; 및 &lt;code&gt;delete_all&lt;/code&gt; 에 대한 쿼리를 준비하기 위해 호출 된 명령 .</target>
        </trans-unit>
        <trans-unit id="17421e6e6e98cfbe7a994fbcda25e417477a715d" translate="yes" xml:space="preserve">
          <source>Compacts a sets causal history</source>
          <target state="translated">인과 관계 기록을 압축</target>
        </trans-unit>
        <trans-unit id="387a836476bd6348742ec8318b4d33ea95c699a4" translate="yes" xml:space="preserve">
          <source>Compacts a sets causal history.</source>
          <target state="translated">인과 관계 기록을 압축합니다.</target>
        </trans-unit>
        <trans-unit id="689d04b0d0b115ca5fb5f7a16877d0c6bb47657f" translate="yes" xml:space="preserve">
          <source>Comparison operators: &lt;code&gt;==&lt;/code&gt;, &lt;code&gt;!=&lt;/code&gt;, &lt;code&gt;&amp;lt;=&lt;/code&gt;, &lt;code&gt;&amp;gt;=&lt;/code&gt;, &lt;code&gt;&amp;lt;&lt;/code&gt;, &lt;code&gt;&amp;gt;&lt;/code&gt;</source>
          <target state="translated">비교 연산자 : &lt;code&gt;==&lt;/code&gt; , &lt;code&gt;!=&lt;/code&gt; , &lt;code&gt;&amp;lt;=&lt;/code&gt; , &lt;code&gt;&amp;gt;=&lt;/code&gt; , &lt;code&gt;&amp;lt;&lt;/code&gt; , &lt;code&gt;&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3993a075f65ea9d57f80c74dc0601a16a30c7c44" translate="yes" xml:space="preserve">
          <source>Compile-time configuration</source>
          <target state="translated">컴파일 타임 구성</target>
        </trans-unit>
        <trans-unit id="b43a18b461359f050a29f398ede2e96a808b8612" translate="yes" xml:space="preserve">
          <source>Compiles Phoenix source files that support code reloading.</source>
          <target state="translated">코드 재로드를 지원하는 Phoenix 소스 파일을 컴파일합니다.</target>
        </trans-unit>
        <trans-unit id="30bc423bb2cee749c72b094a1a1ffbbd38821f9a" translate="yes" xml:space="preserve">
          <source>Compiles a plug pipeline</source>
          <target state="translated">플러그 파이프 라인 컴파일</target>
        </trans-unit>
        <trans-unit id="e9e8fa12309768a3e1cb93436c2d3b7b30a47e37" translate="yes" xml:space="preserve">
          <source>Compiles a plug pipeline.</source>
          <target state="translated">플러그 파이프 라인을 컴파일합니다.</target>
        </trans-unit>
        <trans-unit id="b2e575ea9a9d857d6127db02e0797a8f845cd20f" translate="yes" xml:space="preserve">
          <source>Complex constraints</source>
          <target state="translated">복잡한 제약</target>
        </trans-unit>
        <trans-unit id="160e7d38bdd6d8bd71eb9ce1b70c379e002b9b0e" translate="yes" xml:space="preserve">
          <source>Composing casts</source>
          <target state="translated">캐스트 작성</target>
        </trans-unit>
        <trans-unit id="51c4e7e67d8ce6dd5ce03ffdf7dcbcd8ccb2b24b" translate="yes" xml:space="preserve">
          <source>Composing queries uses the same syntax as creating a query. The difference is that, instead of passing a schema like &lt;code&gt;User&lt;/code&gt; on the right side of &lt;code&gt;in&lt;/code&gt;, we passed the query itself.</source>
          <target state="translated">쿼리 작성은 쿼리 작성과 동일한 구문을 사용합니다. 차이점은 &lt;code&gt;in&lt;/code&gt; 의 오른쪽에 &lt;code&gt;User&lt;/code&gt; 와 같은 스키마를 전달하는 대신 쿼리 자체를 전달한다는 것입니다.</target>
        </trans-unit>
        <trans-unit id="ca5e00120498b815c12de59fd45e93f8086a8bfc" translate="yes" xml:space="preserve">
          <source>Composition</source>
          <target state="translated">Composition</target>
        </trans-unit>
        <trans-unit id="754164850f38c1ecdaf6b8ed894cb192bc36c5f4" translate="yes" xml:space="preserve">
          <source>Configuration</source>
          <target state="translated">Configuration</target>
        </trans-unit>
        <trans-unit id="0094bc74195c0ce7d0dd3d154aa59e783fd72fdf" translate="yes" xml:space="preserve">
          <source>Configures and validates the options given to the &lt;code&gt;:ssl&lt;/code&gt; application</source>
          <target state="translated">&lt;code&gt;:ssl&lt;/code&gt; 애플리케이션에 제공된 옵션을 구성하고 유효성을 검증합니다 .</target>
        </trans-unit>
        <trans-unit id="56ec8a61db64af5a01bc5e526abfe3c1561050d8" translate="yes" xml:space="preserve">
          <source>Configures and validates the options given to the &lt;code&gt;:ssl&lt;/code&gt; application.</source>
          <target state="translated">&lt;code&gt;:ssl&lt;/code&gt; 응용 프로그램에 제공된 옵션을 구성하고 유효성을 검증합니다 .</target>
        </trans-unit>
        <trans-unit id="ffe444e22547ee9f84bad3b053149c9ec3dab7f5" translate="yes" xml:space="preserve">
          <source>Configures the session</source>
          <target state="translated">세션을 구성합니다</target>
        </trans-unit>
        <trans-unit id="8d1eeb71dc4b14892934e634b5b3675174b1ea15" translate="yes" xml:space="preserve">
          <source>Configures the session.</source>
          <target state="translated">세션을 구성합니다.</target>
        </trans-unit>
        <trans-unit id="6512ee1541e9a6c52d5bf7cf465332e8df25ea3c" translate="yes" xml:space="preserve">
          <source>Connection</source>
          <target state="translated">Connection</target>
        </trans-unit>
        <trans-unit id="623f71d860d9d5252b3bc03398edbc723671e7b8" translate="yes" xml:space="preserve">
          <source>Connection fields</source>
          <target state="translated">연결 필드</target>
        </trans-unit>
        <trans-unit id="825d466786d2b398b37d8973f0e317876f33b62a" translate="yes" xml:space="preserve">
          <source>Consider the case where the application layout allows views to dynamically render a section of script tags in the head of the document. Some views may wish to inject certain scripts, while others will not.</source>
          <target state="translated">응용 프로그램 레이아웃에서 뷰가 문서 헤드에 스크립트 태그의 섹션을 동적으로 렌더링 할 수있는 경우를 고려하십시오. 일부 뷰는 특정 스크립트를 주입하고 다른 뷰는 삽입하지 않을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0ec4a9286270cbc6f1229b77dcc30015580bc8f8" translate="yes" xml:space="preserve">
          <source>Consider using &lt;a href=&quot;plug.csrfprotection&quot;&gt;&lt;code&gt;Plug.CSRFProtection&lt;/code&gt;&lt;/a&gt; when using &lt;a href=&quot;plug.session#content&quot;&gt;&lt;code&gt;Plug.Session&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">사용을 고려 &lt;a href=&quot;plug.csrfprotection&quot;&gt; &lt;code&gt;Plug.CSRFProtection&lt;/code&gt; 을&lt;/a&gt; 사용하는 경우 &lt;a href=&quot;plug.session#content&quot;&gt; &lt;code&gt;Plug.Session&lt;/code&gt; 을&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="cc11b3a28fa30ae6d3d3ad1438824cbd5224ba5c" translate="yes" xml:space="preserve">
          <source>Context</source>
          <target state="translated">Context</target>
        </trans-unit>
        <trans-unit id="0e9fb656787fc07e5d6a64599e65e1ccb74bd114" translate="yes" xml:space="preserve">
          <source>Controller testing</source>
          <target state="translated">컨트롤러 테스트</target>
        </trans-unit>
        <trans-unit id="2b5353d03e9a8cd11fd0e1a2f7c28e676caa2a91" translate="yes" xml:space="preserve">
          <source>Controllers are plugs</source>
          <target state="translated">컨트롤러는 플러그입니다</target>
        </trans-unit>
        <trans-unit id="af452210db5ef164e5270ab6a3485524d2fd8cda" translate="yes" xml:space="preserve">
          <source>Controllers are used to group common functionality in the same (pluggable) module.</source>
          <target state="translated">컨트롤러는 동일한 (플러그 가능) 모듈에서 공통 기능을 그룹화하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="9bb0128974f09f06e681a8725deaa05f012c4805" translate="yes" xml:space="preserve">
          <source>Conveniences for building plugs.</source>
          <target state="translated">플러그를 만들기위한 편의성.</target>
        </trans-unit>
        <trans-unit id="9f91a588298f951eb275c2b2ec86df49dc80af8f" translate="yes" xml:space="preserve">
          <source>Conveniences for decoding and encoding url encoded queries.</source>
          <target state="translated">URL 인코딩 된 쿼리를 디코딩하고 인코딩하기위한 편의성.</target>
        </trans-unit>
        <trans-unit id="9c580d5a405e26c0a35b518f00ed173cab85f11c" translate="yes" xml:space="preserve">
          <source>Conveniences for encoding and decoding cookies.</source>
          <target state="translated">쿠키 인코딩 및 디코딩 편의성.</target>
        </trans-unit>
        <trans-unit id="2505b6a64d4b3e7e31f84accd462c05c58ce0713" translate="yes" xml:space="preserve">
          <source>Conveniences for generating HTML.</source>
          <target state="translated">HTML 생성 편의성.</target>
        </trans-unit>
        <trans-unit id="1fefd886f0cee1b93efa1f72cccf15d683e4b0d7" translate="yes" xml:space="preserve">
          <source>Conveniences for inflecting and working with names in Phoenix.</source>
          <target state="translated">피닉스에서 이름을 활용하고 활용하기위한 편의성.</target>
        </trans-unit>
        <trans-unit id="2079e29298a5fa010672ca1e6447077dbdee3382" translate="yes" xml:space="preserve">
          <source>Conveniences for testing Phoenix channels.</source>
          <target state="translated">Phoenix 채널 테스트를위한 편의성.</target>
        </trans-unit>
        <trans-unit id="5c778784530bdea24896902b3d11dadd17f8d90a" translate="yes" xml:space="preserve">
          <source>Conveniences for testing Phoenix endpoints and connection related helpers.</source>
          <target state="translated">Phoenix 엔드 포인트 및 연결 관련 헬퍼 테스트를위한 편의성.</target>
        </trans-unit>
        <trans-unit id="c12f2b1bee63bacdcd8fb3213ef55235c074301e" translate="yes" xml:space="preserve">
          <source>Conveniences for testing plugs.</source>
          <target state="translated">플러그 테스트 편의성.</target>
        </trans-unit>
        <trans-unit id="a6a11d3bfeded6baca8d0d4108499315d32aad3d" translate="yes" xml:space="preserve">
          <source>Conveniences for working with links and URLs in HTML.</source>
          <target state="translated">HTML에서 링크 및 URL 작업을위한 편의성.</target>
        </trans-unit>
        <trans-unit id="e159c91ac2413f8fae02215e9f482d2e98915e2b" translate="yes" xml:space="preserve">
          <source>Conveniences for working with status codes.</source>
          <target state="translated">상태 코드 작업을위한 편의성.</target>
        </trans-unit>
        <trans-unit id="6fc83fdc7bfefcb73b9fa9ddd4eb4f1ae8d72b66" translate="yes" xml:space="preserve">
          <source>Conveniences for writing Ecto related Mix tasks.</source>
          <target state="translated">Ecto 관련 믹스 작업을 작성하기위한 편의성.</target>
        </trans-unit>
        <trans-unit id="95129317525bffbcf31b7a71e10603f34ad6de04" translate="yes" xml:space="preserve">
          <source>Converts String to camel case</source>
          <target state="translated">문자열을 낙타 케이스로 변환</target>
        </trans-unit>
        <trans-unit id="9db2742f372bacc07fdf355480784f0de6ba2f9d" translate="yes" xml:space="preserve">
          <source>Converts String to camel case.</source>
          <target state="translated">문자열을 낙타 케이스로 변환합니다.</target>
        </trans-unit>
        <trans-unit id="93bd3d691babe59b7646592085998365cd346593" translate="yes" xml:space="preserve">
          <source>Converts String to underscore case</source>
          <target state="translated">문자열을 밑줄로 변환합니다</target>
        </trans-unit>
        <trans-unit id="382099623de39c9a305a1c8582eb895d87ef6188" translate="yes" xml:space="preserve">
          <source>Converts String to underscore case.</source>
          <target state="translated">문자열을 밑줄로 변환합니다.</target>
        </trans-unit>
        <trans-unit id="27264d44d355d6d25a79ad27fa899bdc74730105" translate="yes" xml:space="preserve">
          <source>Converts a binary UUID into a string</source>
          <target state="translated">이진 UUID를 문자열로 변환</target>
        </trans-unit>
        <trans-unit id="ef60b50efc17b6764635f82f50428935079c6bee" translate="yes" xml:space="preserve">
          <source>Converts a binary UUID into a string.</source>
          <target state="translated">이진 UUID를 문자열로 변환합니다.</target>
        </trans-unit>
        <trans-unit id="9c7adaf7aed01dd8443b57d8556b7c61a17d42d4" translate="yes" xml:space="preserve">
          <source>Converts a data structure into a &lt;a href=&quot;phoenix.html.form&quot;&gt;&lt;code&gt;Phoenix.HTML.Form&lt;/code&gt;&lt;/a&gt; struct</source>
          <target state="translated">데이터 구조를 &lt;a href=&quot;phoenix.html.form&quot;&gt; &lt;code&gt;Phoenix.HTML.Form&lt;/code&gt; &lt;/a&gt; 구조체 로 변환</target>
        </trans-unit>
        <trans-unit id="5f0924e039579284f4949a209838800577578bd0" translate="yes" xml:space="preserve">
          <source>Converts a data structure into a &lt;a href=&quot;phoenix.html.form&quot;&gt;&lt;code&gt;Phoenix.HTML.Form&lt;/code&gt;&lt;/a&gt; struct.</source>
          <target state="translated">데이터 구조를 &lt;a href=&quot;phoenix.html.form&quot;&gt; &lt;code&gt;Phoenix.HTML.Form&lt;/code&gt; &lt;/a&gt; 구조체 로 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="394f609c550517ae5582344720070e6dd46f20bf" translate="yes" xml:space="preserve">
          <source>Converts a data structure into an &lt;a href=&quot;ecto.query&quot;&gt;&lt;code&gt;Ecto.Query&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">데이터 구조를 &lt;a href=&quot;ecto.query&quot;&gt; &lt;code&gt;Ecto.Query&lt;/code&gt; &lt;/a&gt; 로 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="f596d3623d5e3b391e0231a81f3148bc79da5b44" translate="yes" xml:space="preserve">
          <source>Converts a log entry into iodata</source>
          <target state="translated">로그 항목을 iodata로 변환</target>
        </trans-unit>
        <trans-unit id="dbfac8e7ad86b07e68ffea270a88c3ab47488d9c" translate="yes" xml:space="preserve">
          <source>Converts a log entry into iodata.</source>
          <target state="translated">로그 항목을 iodata로 변환합니다.</target>
        </trans-unit>
        <trans-unit id="cf24d3bfd1d0adf2c069e4995cacd8de41852380" translate="yes" xml:space="preserve">
          <source>Converts a map with string keys into a message struct</source>
          <target state="translated">문자열 키가있는 맵을 메시지 구조체로 변환</target>
        </trans-unit>
        <trans-unit id="e1ef56d44b9b008f114784704498cd7afff2ab48" translate="yes" xml:space="preserve">
          <source>Converts a map with string keys into a message struct.</source>
          <target state="translated">문자열 키가있는 맵을 메시지 구조체로 변환합니다.</target>
        </trans-unit>
        <trans-unit id="b7649d80868b367f86ce5318ad508d0226a84911" translate="yes" xml:space="preserve">
          <source>Converts a query into a subquery</source>
          <target state="translated">쿼리를 하위 쿼리로 변환</target>
        </trans-unit>
        <trans-unit id="7ab3d4d922c75660ac90a3c041fe3d0ae49fd685" translate="yes" xml:space="preserve">
          <source>Converts a query into a subquery.</source>
          <target state="translated">쿼리를 하위 쿼리로 변환합니다.</target>
        </trans-unit>
        <trans-unit id="a137d6416d0106481b1951e108ca4eae747e5a67" translate="yes" xml:space="preserve">
          <source>Converts a string representing a UUID into a binary</source>
          <target state="translated">UUID를 나타내는 문자열을 이진으로 변환</target>
        </trans-unit>
        <trans-unit id="3140ee13801e4c00a1ff530b15f1f6a6f3a6c1b3" translate="yes" xml:space="preserve">
          <source>Converts a string representing a UUID into a binary.</source>
          <target state="translated">UUID를 나타내는 문자열을 이진으로 변환합니다.</target>
        </trans-unit>
        <trans-unit id="b3df0bdacb4443f553b22c73314bcdc4d5486b30" translate="yes" xml:space="preserve">
          <source>Converts an attribute/form field into its humanize version</source>
          <target state="translated">속성 / 양식 필드를 인간화 버전으로 변환</target>
        </trans-unit>
        <trans-unit id="19c50d9e2906eb74159ce3992723820e814393d9" translate="yes" xml:space="preserve">
          <source>Converts an attribute/form field into its humanize version.</source>
          <target state="translated">속성 / 양식 필드를 인간화 버전으로 변환합니다.</target>
        </trans-unit>
        <trans-unit id="c9733a54bd8f688547630970dbc222882b82e07b" translate="yes" xml:space="preserve">
          <source>Converts the field in the given form based on the data structure into a &lt;a href=&quot;phoenix.html.form&quot;&gt;&lt;code&gt;Phoenix.HTML.Form&lt;/code&gt;&lt;/a&gt; struct</source>
          <target state="translated">데이터 구조를 기반으로 지정된 양식의 필드를 &lt;a href=&quot;phoenix.html.form&quot;&gt; &lt;code&gt;Phoenix.HTML.Form&lt;/code&gt; &lt;/a&gt; 구조체 로 변환합니다.</target>
        </trans-unit>
        <trans-unit id="f80eee5cfebe6a00f029edb30bd90143409e8bcd" translate="yes" xml:space="preserve">
          <source>Converts the field in the given form based on the data structure into a &lt;a href=&quot;phoenix.html.form&quot;&gt;&lt;code&gt;Phoenix.HTML.Form&lt;/code&gt;&lt;/a&gt; struct.</source>
          <target state="translated">데이터 구조를 기반으로 제공된 양식의 필드를 &lt;a href=&quot;phoenix.html.form&quot;&gt; &lt;code&gt;Phoenix.HTML.Form&lt;/code&gt; &lt;/a&gt; 구조체 로 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="7c3ce48bee964440fa19b570f3113c68531a8ac5" translate="yes" xml:space="preserve">
          <source>Converts the given &lt;code&gt;data&lt;/code&gt; into an &lt;a href=&quot;ecto.query&quot;&gt;&lt;code&gt;Ecto.Query&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">주어진 &lt;code&gt;data&lt;/code&gt; 를 &lt;a href=&quot;ecto.query&quot;&gt; &lt;code&gt;Ecto.Query&lt;/code&gt; &lt;/a&gt; 로 변환</target>
        </trans-unit>
        <trans-unit id="d2e1170df570845c7769ccab0dfe55c41e9f204e" translate="yes" xml:space="preserve">
          <source>Converts the given &lt;code&gt;data&lt;/code&gt; into an &lt;a href=&quot;ecto.query&quot;&gt;&lt;code&gt;Ecto.Query&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">주어진 &lt;code&gt;data&lt;/code&gt; 를 &lt;a href=&quot;ecto.query&quot;&gt; &lt;code&gt;Ecto.Query&lt;/code&gt; &lt;/a&gt; 로 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="87779649d0bc969867c2ebc36aca44610a78a40f" translate="yes" xml:space="preserve">
          <source>Could be configured with:</source>
          <target state="translated">다음과 같이 구성 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1d9bb1fefb027c333b59cf87a86b727eef409e8b" translate="yes" xml:space="preserve">
          <source>Counts the distinct values in given entry</source>
          <target state="translated">주어진 항목에서 고유 값을 계산</target>
        </trans-unit>
        <trans-unit id="2de639a472b6b9495362bab1a9c12f1367933775" translate="yes" xml:space="preserve">
          <source>Counts the distinct values in given entry.</source>
          <target state="translated">주어진 항목에서 고유 한 값을 계산합니다.</target>
        </trans-unit>
        <trans-unit id="5075701de21a11711a31e4e2bb5ce2e539c5f1a6" translate="yes" xml:space="preserve">
          <source>Counts the entries in the table</source>
          <target state="translated">테이블의 항목 수를 센다</target>
        </trans-unit>
        <trans-unit id="5335fb3a68b01d2c891c9707977fc5953efe5ecb" translate="yes" xml:space="preserve">
          <source>Counts the entries in the table.</source>
          <target state="translated">테이블의 항목을 계산합니다.</target>
        </trans-unit>
        <trans-unit id="60cab376ddb9984f252e1e5dc8b0676b16a76836" translate="yes" xml:space="preserve">
          <source>Counts the given entry</source>
          <target state="translated">주어진 항목을 센다</target>
        </trans-unit>
        <trans-unit id="8b583bcad8995030f3efb2a4003bf44dbfe7f84f" translate="yes" xml:space="preserve">
          <source>Counts the given entry.</source>
          <target state="translated">주어진 항목을 계산합니다.</target>
        </trans-unit>
        <trans-unit id="6667c873b195491c47b83841b5d1a221b1d01d60" translate="yes" xml:space="preserve">
          <source>Create the storage for the given repository.</source>
          <target state="translated">지정된 저장소에 대한 스토리지를 작성하십시오.</target>
        </trans-unit>
        <trans-unit id="d1f5d6dc55285577b611a56099866fe7a5540361" translate="yes" xml:space="preserve">
          <source>Creates a connection to be used in upcoming requests</source>
          <target state="translated">향후 요청에 사용할 연결을 만듭니다.</target>
        </trans-unit>
        <trans-unit id="a5620a9d32b1815c7e1e4a69d7c0269ff6490d80" translate="yes" xml:space="preserve">
          <source>Creates a connection to be used in upcoming requests with a preset method, path and body</source>
          <target state="translated">미리 설정된 방법, 경로 및 본문을 사용하여 향후 요청에 사용할 연결을 만듭니다.</target>
        </trans-unit>
        <trans-unit id="2ea17fb47f2e2bc29906e1a835f386b622c5e0fc" translate="yes" xml:space="preserve">
          <source>Creates a connection to be used in upcoming requests with a preset method, path and body.</source>
          <target state="translated">미리 설정된 방법, 경로 및 본문을 사용하여 향후 요청에 사용할 연결을 만듭니다.</target>
        </trans-unit>
        <trans-unit id="6ca5933e33322f2725154605349ac03436e17d81" translate="yes" xml:space="preserve">
          <source>Creates a connection to be used in upcoming requests.</source>
          <target state="translated">예정된 요청에 사용할 연결을 만듭니다.</target>
        </trans-unit>
        <trans-unit id="655bf80f22d5ac7bdc88e18fa1d2f5c44bf8a2a4" translate="yes" xml:space="preserve">
          <source>Creates a new set for the replica</source>
          <target state="translated">복제본에 대한 새 세트를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="6c3c516ff83fdb7b3890a578438dd63e0ad4b906" translate="yes" xml:space="preserve">
          <source>Creates a new set for the replica.</source>
          <target state="translated">복제본에 대한 새 세트를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="1cb0bb19ce2b3aec84766cc9b34cd1b86693717c" translate="yes" xml:space="preserve">
          <source>Creates a query</source>
          <target state="translated">쿼리를 만듭니다</target>
        </trans-unit>
        <trans-unit id="9964ed477088ce9376af7d997db469e2c481c304" translate="yes" xml:space="preserve">
          <source>Creates a query.</source>
          <target state="translated">쿼리를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="a92e7e3e21980465afda5df639077acd5e141d84" translate="yes" xml:space="preserve">
          <source>Creates a test connection</source>
          <target state="translated">테스트 연결을 만듭니다</target>
        </trans-unit>
        <trans-unit id="918f746fe680a623785f18e086e4d2e620665b7f" translate="yes" xml:space="preserve">
          <source>Creates a test connection.</source>
          <target state="translated">테스트 연결을 만듭니다.</target>
        </trans-unit>
        <trans-unit id="8db62c40dd78a09a060d952689268f9b49ea9f86" translate="yes" xml:space="preserve">
          <source>Creates an HTML tag with given name, content, and attributes</source>
          <target state="translated">이름, 내용 및 속성이 지정된 HTML 태그를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="3c2bcae89a9be8a6c6feb5e8cc3b8e46a02f681c" translate="yes" xml:space="preserve">
          <source>Creates an HTML tag with given name, content, and attributes.</source>
          <target state="translated">이름, 내용 및 속성이 지정된 HTML 태그를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="058d15dfe83b62882d54c2ff61d2e4edaf0d99a4" translate="yes" xml:space="preserve">
          <source>Creates an HTML tag with the given name and options</source>
          <target state="translated">주어진 이름과 옵션으로 HTML 태그를 만듭니다</target>
        </trans-unit>
        <trans-unit id="27795a4c9e11b853e78c13b85bd3773163ca27e4" translate="yes" xml:space="preserve">
          <source>Creates an HTML tag with the given name and options.</source>
          <target state="translated">지정된 이름과 옵션으로 HTML 태그를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="295e8002fe94af556c61be9eb91674d5beffbd44" translate="yes" xml:space="preserve">
          <source>Creates the storage given by options</source>
          <target state="translated">옵션으로 주어진 스토리지를 생성합니다</target>
        </trans-unit>
        <trans-unit id="5092de28cfa9bf4a13d1673eb10f6c4ffa40c2cf" translate="yes" xml:space="preserve">
          <source>Creates the storage given by options.</source>
          <target state="translated">옵션으로 지정된 스토리지를 작성합니다.</target>
        </trans-unit>
        <trans-unit id="6e51d2e5aed57b208ac929160777789364e28e92" translate="yes" xml:space="preserve">
          <source>Cross-host protection</source>
          <target state="translated">호스트 간 보호</target>
        </trans-unit>
        <trans-unit id="bb429da394c6fd75bb855fb4e738199598fe54a0" translate="yes" xml:space="preserve">
          <source>Currently it is possible to join on:</source>
          <target state="translated">현재 다음에 가입 할 수 있습니다 :</target>
        </trans-unit>
        <trans-unit id="45672bcfb95487b9a1fe832c5ef8aef6e8144968" translate="yes" xml:space="preserve">
          <source>Currently used as a wrapper function for &lt;a href=&quot;../plug/1.5.1/plug.csrfprotection&quot;&gt;&lt;code&gt;Plug.CSRFProtection&lt;/code&gt;&lt;/a&gt; and mainly serves as a function plug in &lt;code&gt;YourApp.Router&lt;/code&gt;.</source>
          <target state="translated">현재 &lt;a href=&quot;../plug/1.5.1/plug.csrfprotection&quot;&gt; &lt;code&gt;Plug.CSRFProtection&lt;/code&gt; &lt;/a&gt; 의 랩퍼 기능으로 사용되며 주로 YourApp.Router 의 기능 플러그로 사용 &lt;code&gt;YourApp.Router&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b0e856d3cac9ea58a4f2fe05ca46f1dc55eefce3" translate="yes" xml:space="preserve">
          <source>Custom Banners</source>
          <target state="translated">맞춤 배너</target>
        </trans-unit>
        <trans-unit id="2ad7995578312dcb09b4588cadcc8d6e2f426a4f" translate="yes" xml:space="preserve">
          <source>Custom URL Generation</source>
          <target state="translated">맞춤 URL 생성</target>
        </trans-unit>
        <trans-unit id="15c7584e3aa4d76e12311bbd0dca1b00c9c3931c" translate="yes" xml:space="preserve">
          <source>Custom body reader</source>
          <target state="translated">맞춤형 바디 리더</target>
        </trans-unit>
        <trans-unit id="7e21c9d3fe8c1579e1cd153dea9fb31d60cb8f21" translate="yes" xml:space="preserve">
          <source>Custom dispatch options</source>
          <target state="translated">맞춤 발송 옵션</target>
        </trans-unit>
        <trans-unit id="a79178c5b084f44fa3889f0d755f1d4399127ea8" translate="yes" xml:space="preserve">
          <source>Custom media types</source>
          <target state="translated">맞춤 용지 종류</target>
        </trans-unit>
        <trans-unit id="3a766c13565fe19675393ce2a7b6137d5d93894a" translate="yes" xml:space="preserve">
          <source>Custom parameters</source>
          <target state="translated">맞춤 매개 변수</target>
        </trans-unit>
        <trans-unit id="592888624942f64ddca66ef92a9ecf07af58ad65" translate="yes" xml:space="preserve">
          <source>Custom status codes</source>
          <target state="translated">맞춤 상태 코드</target>
        </trans-unit>
        <trans-unit id="03c69cf1ba719cfa330283492e4177050d830b2f" translate="yes" xml:space="preserve">
          <source>Custom styles</source>
          <target state="translated">커스텀 스타일</target>
        </trans-unit>
        <trans-unit id="f7efae42f4cccc2527f00c7304e9225bf67da76b" translate="yes" xml:space="preserve">
          <source>Custom transports</source>
          <target state="translated">맞춤형 운송</target>
        </trans-unit>
        <trans-unit id="01968668870202b08c982a5f347b7df980dee05e" translate="yes" xml:space="preserve">
          <source>Custom type</source>
          <target state="translated">커스텀 타입</target>
        </trans-unit>
        <trans-unit id="81ef71c7c4675a503829d703092a4f5cab2a4d3a" translate="yes" xml:space="preserve">
          <source>Custom types</source>
          <target state="translated">커스텀 타입</target>
        </trans-unit>
        <trans-unit id="69a7d510ecf32ff0355d3b76dd97f825ed970bf0" translate="yes" xml:space="preserve">
          <source>Custom types are represented by user-defined modules</source>
          <target state="translated">사용자 정의 유형은 사용자 정의 모듈로 표시됩니다</target>
        </trans-unit>
        <trans-unit id="6eafee3e694a6d6c7ed59b8497b3079202604841" translate="yes" xml:space="preserve">
          <source>Custom types are represented by user-defined modules.</source>
          <target state="translated">사용자 정의 유형은 사용자 정의 모듈로 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="e1aa668724cef525e095f5266a0e6ca216f30dc2" translate="yes" xml:space="preserve">
          <source>Data attributes</source>
          <target state="translated">데이터 속성</target>
        </trans-unit>
        <trans-unit id="22ee43137eb33104fa6bb25df0d11793f36f2af6" translate="yes" xml:space="preserve">
          <source>Data attributes are added as a keyword list passed to the &lt;code&gt;data&lt;/code&gt; key. The following data attributes are supported:</source>
          <target state="translated">데이터 속성은 &lt;code&gt;data&lt;/code&gt; 키에 전달 된 키워드 목록으로 추가됩니다 . 다음과 같은 데이터 속성이 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="dfbea07707e01cf3d5cd2917e0db646244e80fb4" translate="yes" xml:space="preserve">
          <source>Database type</source>
          <target state="translated">데이터베이스 유형</target>
        </trans-unit>
        <trans-unit id="2b0147a202c0652436982e4210c99e4db43e1984" translate="yes" xml:space="preserve">
          <source>Databases like MongoDB have native support for embeds. Databases like PostgreSQL uses a mixture of JSONB (&lt;code&gt;embeds_one/3&lt;/code&gt;) and ARRAY columns to provide this functionality.</source>
          <target state="translated">MongoDB와 같은 데이터베이스는 임베드를 기본적으로 지원합니다. PostgreSQL과 같은 데이터베이스는 JSONB ( &lt;code&gt;embeds_one/3&lt;/code&gt; )와 ARRAY 열을 혼합 하여이 기능을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="348c5694e0d7d8db4752697a7c185717753760e0" translate="yes" xml:space="preserve">
          <source>Date/time intervals: &lt;a href=&quot;#datetime_add/3&quot;&gt;&lt;code&gt;datetime_add/3&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#date_add/3&quot;&gt;&lt;code&gt;date_add/3&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#from_now/2&quot;&gt;&lt;code&gt;from_now/2&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#ago/2&quot;&gt;&lt;code&gt;ago/2&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">날짜 / 시간 간격 : &lt;a href=&quot;#datetime_add/3&quot;&gt; &lt;code&gt;datetime_add/3&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#date_add/3&quot;&gt; &lt;code&gt;date_add/3&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#from_now/2&quot;&gt; &lt;code&gt;from_now/2&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#ago/2&quot;&gt; &lt;code&gt;ago/2&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="dc28334dbb2ee4b63b89c25268676f3540cb8080" translate="yes" xml:space="preserve">
          <source>Decodes iodata into &lt;a href=&quot;phoenix.socket.message&quot;&gt;&lt;code&gt;Phoenix.Socket.Message&lt;/code&gt;&lt;/a&gt; struct</source>
          <target state="translated">에 iodata 디코드 &lt;a href=&quot;phoenix.socket.message&quot;&gt; &lt;code&gt;Phoenix.Socket.Message&lt;/code&gt; 의&lt;/a&gt; 구조체</target>
        </trans-unit>
        <trans-unit id="5022d1fa92e4a008b4f97389512658b390541e37" translate="yes" xml:space="preserve">
          <source>Decodes the given binary</source>
          <target state="translated">주어진 이진을 해독합니다</target>
        </trans-unit>
        <trans-unit id="a4fc2ef19091b283310f075f39eebdbc574b872c" translate="yes" xml:space="preserve">
          <source>Decodes the given binary.</source>
          <target state="translated">주어진 바이너리를 디코딩합니다.</target>
        </trans-unit>
        <trans-unit id="2cf36e2a8c8c57a5b892035925a389f0221c6e5a" translate="yes" xml:space="preserve">
          <source>Decodes the given cookies as given in a request header</source>
          <target state="translated">요청 헤더에 제공된대로 주어진 쿠키를 디코딩합니다.</target>
        </trans-unit>
        <trans-unit id="d138261ed7bfce68ab9d9284286314a08d6fb068" translate="yes" xml:space="preserve">
          <source>Decodes the given cookies as given in a request header.</source>
          <target state="translated">요청 헤더에 제공된대로 주어진 쿠키를 디코딩합니다.</target>
        </trans-unit>
        <trans-unit id="67791571081f15deaa98bef144e603752a37648d" translate="yes" xml:space="preserve">
          <source>Decodes the given tuple and stores it in the accumulator. It parses the key and stores the value into the current accumulator</source>
          <target state="translated">주어진 튜플을 디코딩하여 누산기에 저장합니다. 키를 구문 분석하고 값을 현재 누산기에 저장합니다.</target>
        </trans-unit>
        <trans-unit id="6e49719641c1902ad6eefa0319fd41e19a3586ac" translate="yes" xml:space="preserve">
          <source>Decodes the given tuple and stores it in the accumulator. It parses the key and stores the value into the current accumulator.</source>
          <target state="translated">주어진 튜플을 디코딩하여 누산기에 저장합니다. 키를 구문 분석하고 값을 현재 누산기에 저장합니다.</target>
        </trans-unit>
        <trans-unit id="6ee990d02025019ecfcb5edf1b4c4ec39e936da7" translate="yes" xml:space="preserve">
          <source>Decodes the original data from the token and verifies its integrity</source>
          <target state="translated">토큰에서 원본 데이터를 해독하고 무결성을 확인합니다</target>
        </trans-unit>
        <trans-unit id="f049b89b24eb9935b3ca98ad1fb0f9d2cd9f68e8" translate="yes" xml:space="preserve">
          <source>Decodes the original data from the token and verifies its integrity.</source>
          <target state="translated">토큰에서 원본 데이터를 해독하고 무결성을 확인합니다.</target>
        </trans-unit>
        <trans-unit id="3756df3c62f47f45ddc117d75f48aa29a7d1dddb" translate="yes" xml:space="preserve">
          <source>Default options</source>
          <target state="translated">기본 옵션</target>
        </trans-unit>
        <trans-unit id="4da88ad909650175990a0a974e2ffa17afb351c7" translate="yes" xml:space="preserve">
          <source>Deferred constraints</source>
          <target state="translated">지연 제약</target>
        </trans-unit>
        <trans-unit id="34eb2207fae4118dc031e43bd682836d552cd605" translate="yes" xml:space="preserve">
          <source>Define a scope with the given path</source>
          <target state="translated">주어진 경로로 범위를 정의하십시오</target>
        </trans-unit>
        <trans-unit id="8a24bfbfe4b950fbe1f98d96017ddb61058636dd" translate="yes" xml:space="preserve">
          <source>Define a scope with the given path.</source>
          <target state="translated">주어진 경로로 범위를 정의하십시오.</target>
        </trans-unit>
        <trans-unit id="c555127295a2b019c70780dc39a214d0b9c44313" translate="yes" xml:space="preserve">
          <source>Defines &amp;ldquo;RESTful&amp;rdquo; routes for a resource</source>
          <target state="translated">자원에 대한&amp;ldquo;RESTful&amp;rdquo;경로를 정의합니다</target>
        </trans-unit>
        <trans-unit id="e546933a6e0a686579d2072a045b2b24d13e1704" translate="yes" xml:space="preserve">
          <source>Defines &amp;ldquo;RESTful&amp;rdquo; routes for a resource.</source>
          <target state="translated">자원에 대한&amp;ldquo;RESTful&amp;rdquo;경로를 정의합니다.</target>
        </trans-unit>
        <trans-unit id="d29baddf329cf4df77e0fcaa04d26f8d7bf3e15a" translate="yes" xml:space="preserve">
          <source>Defines a Phoenix Channel.</source>
          <target state="translated">피닉스 채널을 정의합니다.</target>
        </trans-unit>
        <trans-unit id="235705cdc0369983f9f6de9af060949e5f16a26a" translate="yes" xml:space="preserve">
          <source>Defines a Phoenix endpoint.</source>
          <target state="translated">Phoenix 엔드 포인트를 정의합니다.</target>
        </trans-unit>
        <trans-unit id="dea58b4fafe180816f5fde43f615b9aea00c40bf" translate="yes" xml:space="preserve">
          <source>Defines a Phoenix router.</source>
          <target state="translated">피닉스 라우터를 정의합니다.</target>
        </trans-unit>
        <trans-unit id="6390ec122493c1583a174fe9ac5e369023b0024b" translate="yes" xml:space="preserve">
          <source>Defines a behaviour for &lt;a href=&quot;phoenix.socket.message&quot;&gt;&lt;code&gt;Phoenix.Socket.Message&lt;/code&gt;&lt;/a&gt; serialization.</source>
          <target state="translated">&lt;a href=&quot;phoenix.socket.message&quot;&gt; &lt;code&gt;Phoenix.Socket.Message&lt;/code&gt; &lt;/a&gt; 직렬화 의 동작을 정의합니다 .</target>
        </trans-unit>
        <trans-unit id="2d792c91b226ca5abb5305609b372b30da2cb4da" translate="yes" xml:space="preserve">
          <source>Defines a channel matching the given topic and transports</source>
          <target state="translated">주어진 주제 및 전송과 일치하는 채널을 정의합니다</target>
        </trans-unit>
        <trans-unit id="3fa26eb70159f8ab640869d100ff7fbb8ebe0a73" translate="yes" xml:space="preserve">
          <source>Defines a channel matching the given topic and transports.</source>
          <target state="translated">주어진 주제 및 전송과 일치하는 채널을 정의합니다.</target>
        </trans-unit>
        <trans-unit id="af64f873d5500ce120a33c0e800349fe35b237d0" translate="yes" xml:space="preserve">
          <source>Defines a field on the schema with given name and type</source>
          <target state="translated">주어진 이름과 유형으로 스키마에 필드를 정의합니다</target>
        </trans-unit>
        <trans-unit id="efd699e27ca43fdec598faa06974044bb2a848bd" translate="yes" xml:space="preserve">
          <source>Defines a field on the schema with given name and type.</source>
          <target state="translated">지정된 이름과 유형으로 스키마에서 필드를 정의합니다.</target>
        </trans-unit>
        <trans-unit id="67fbef7f15ed2faf874560243ca0083838e6bee5" translate="yes" xml:space="preserve">
          <source>Defines a message dispatched over transport to channels and vice-versa.</source>
          <target state="translated">전송을 통해 채널로 전달되는 메시지를 정의하고 그 반대도 마찬가지입니다.</target>
        </trans-unit>
        <trans-unit id="28d7d8b620546f752b3959eef610fcd5b88b94e5" translate="yes" xml:space="preserve">
          <source>Defines a message sent from pubsub to channels and vice-versa.</source>
          <target state="translated">pubsub에서 채널로 또는 그 반대로 전송되는 메시지를 정의합니다.</target>
        </trans-unit>
        <trans-unit id="b678f4e27bfbccbb54653172d4d94b97d52dd042" translate="yes" xml:space="preserve">
          <source>Defines a mount-point for a Socket module to handle channel definitions</source>
          <target state="translated">채널 정의를 처리 할 소켓 모듈의 마운트 지점을 정의합니다.</target>
        </trans-unit>
        <trans-unit id="28cde125da30c3d4b8b02c57be5bbe5f2584445c" translate="yes" xml:space="preserve">
          <source>Defines a mount-point for a Socket module to handle channel definitions.</source>
          <target state="translated">채널 정의를 처리 할 소켓 모듈의 마운트 지점을 정의합니다.</target>
        </trans-unit>
        <trans-unit id="2ea9f414a6265695d3c3e707a27efc7759441b20" translate="yes" xml:space="preserve">
          <source>Defines a pipeline to send the connection through</source>
          <target state="translated">연결을 통해 보낼 파이프 라인을 정의합니다</target>
        </trans-unit>
        <trans-unit id="67004c69d07a77e0364830f2e64643972bb5c715" translate="yes" xml:space="preserve">
          <source>Defines a pipeline to send the connection through.</source>
          <target state="translated">연결을 보낼 파이프 라인을 정의합니다.</target>
        </trans-unit>
        <trans-unit id="626377c188b161f8ee92a6f60c67907ced021330" translate="yes" xml:space="preserve">
          <source>Defines a plug inside a pipeline</source>
          <target state="translated">파이프 라인 내부에 플러그를 정의합니다</target>
        </trans-unit>
        <trans-unit id="74844af7ddd6384b64831149a05b11c4fde3ff06" translate="yes" xml:space="preserve">
          <source>Defines a plug inside a pipeline.</source>
          <target state="translated">파이프 라인 내부의 플러그를 정의합니다.</target>
        </trans-unit>
        <trans-unit id="8682bc32fd5509667c0e1dce1a301a5e6250f8b7" translate="yes" xml:space="preserve">
          <source>Defines a plug pipeline</source>
          <target state="translated">플러그 파이프 라인을 정의합니다</target>
        </trans-unit>
        <trans-unit id="72233b14665ba28dfb9fa2ca6d5bec41f35d1fe6" translate="yes" xml:space="preserve">
          <source>Defines a plug pipeline.</source>
          <target state="translated">플러그 파이프 라인을 정의합니다.</target>
        </trans-unit>
        <trans-unit id="7aaae2212cb7e4596cdbd559a955ffac90ed46ce" translate="yes" xml:space="preserve">
          <source>Defines a reply sent from channels to transports.</source>
          <target state="translated">채널에서 전송으로 전송되는 응답을 정의합니다.</target>
        </trans-unit>
        <trans-unit id="5df899000fa3205a84a1083055e157624bb5913b" translate="yes" xml:space="preserve">
          <source>Defines a repository.</source>
          <target state="translated">저장소를 정의합니다.</target>
        </trans-unit>
        <trans-unit id="8910a742cc5c74828188debf44ec1420d5d8e4e1" translate="yes" xml:space="preserve">
          <source>Defines a schema struct with a source name and field definitions</source>
          <target state="translated">소스 이름과 필드 정의로 스키마 구조체를 정의합니다</target>
        </trans-unit>
        <trans-unit id="ab322b11466dcd7175f28e1be2949b280aaf773f" translate="yes" xml:space="preserve">
          <source>Defines a schema struct with a source name and field definitions.</source>
          <target state="translated">소스 이름과 필드 정의를 사용하여 스키마 구조체를 정의합니다.</target>
        </trans-unit>
        <trans-unit id="8d20d470d617c99121e5f459af0d902f39b06c39" translate="yes" xml:space="preserve">
          <source>Defines a schema.</source>
          <target state="translated">스키마를 정의합니다.</target>
        </trans-unit>
        <trans-unit id="73e2ef4d927292ff9b405a59dcb7fae197bf1c2c" translate="yes" xml:space="preserve">
          <source>Defines a scope in which routes can be nested</source>
          <target state="translated">경로를 중첩 할 수있는 범위를 정의합니다</target>
        </trans-unit>
        <trans-unit id="36cbf44758b5984aef0b549664bbe669a4c4938f" translate="yes" xml:space="preserve">
          <source>Defines a scope in which routes can be nested.</source>
          <target state="translated">경로를 중첩 할 수있는 범위를 정의합니다.</target>
        </trans-unit>
        <trans-unit id="33f13eac830e5d11dbbc012b15c928e78e648963" translate="yes" xml:space="preserve">
          <source>Defines a scope with the given path and alias</source>
          <target state="translated">주어진 경로와 별칭으로 범위를 정의합니다</target>
        </trans-unit>
        <trans-unit id="66efb298c9aabf9ccbc899061404636e728d9ff4" translate="yes" xml:space="preserve">
          <source>Defines a scope with the given path and alias.</source>
          <target state="translated">주어진 경로와 별명으로 범위를 정의합니다.</target>
        </trans-unit>
        <trans-unit id="6075960a9e3871d4098ed3ef627f906f411517cd" translate="yes" xml:space="preserve">
          <source>Defines a socket and its state.</source>
          <target state="translated">소켓과 상태를 정의합니다.</target>
        </trans-unit>
        <trans-unit id="40a2893ccaafecb4be3a8b5b85cdff7f0a543871" translate="yes" xml:space="preserve">
          <source>Defines a transport with configuration</source>
          <target state="translated">구성으로 전송을 정의합니다</target>
        </trans-unit>
        <trans-unit id="2e9243ed85aceecaa626c37b6242e99524b81dbb" translate="yes" xml:space="preserve">
          <source>Defines a transport with configuration.</source>
          <target state="translated">구성을 사용하여 전송을 정의합니다.</target>
        </trans-unit>
        <trans-unit id="b6f7548bed405a22c425526cc2c285184b3f2c22" translate="yes" xml:space="preserve">
          <source>Defines an embedded schema with the given field definitions</source>
          <target state="translated">주어진 필드 정의로 임베디드 스키마를 정의합니다</target>
        </trans-unit>
        <trans-unit id="8fa803bf79623a181b5123498ee6f231f614a1bb" translate="yes" xml:space="preserve">
          <source>Defines an embedded schema with the given field definitions.</source>
          <target state="translated">주어진 필드 정의로 포함 된 스키마를 정의합니다.</target>
        </trans-unit>
        <trans-unit id="6432ba9d89cda272407151bb646031fa0b43a2f7" translate="yes" xml:space="preserve">
          <source>Defines functions and the &lt;a href=&quot;ecto.type#content&quot;&gt;&lt;code&gt;Ecto.Type&lt;/code&gt;&lt;/a&gt; behaviour for implementing custom types.</source>
          <target state="translated">사용자 정의 유형을 구현하기위한 함수 및 &lt;a href=&quot;ecto.type#content&quot;&gt; &lt;code&gt;Ecto.Type&lt;/code&gt; &lt;/a&gt; 동작을 정의합니다.</target>
        </trans-unit>
        <trans-unit id="07165df5c35d63325209e3672605c7d1ef21e2bf" translate="yes" xml:space="preserve">
          <source>Defines the HTML safe protocol.</source>
          <target state="translated">HTML 안전 프로토콜을 정의합니다.</target>
        </trans-unit>
        <trans-unit id="c60dd928ec133683effed99436f649bb52ba9ed6" translate="yes" xml:space="preserve">
          <source>Defines the Phoenix.HTML.Form struct</source>
          <target state="translated">Phoenix.HTML.Form 구조체를 정의합니다</target>
        </trans-unit>
        <trans-unit id="9b73046e41b83e8632e11734a79b46f80bd80e3c" translate="yes" xml:space="preserve">
          <source>Defines the Phoenix.HTML.Form struct.</source>
          <target state="translated">Phoenix.HTML.Form 구조체를 정의합니다.</target>
        </trans-unit>
        <trans-unit id="a93ad99653849b671aa30e521a85ba4371f460d4" translate="yes" xml:space="preserve">
          <source>Defines the view layer of a Phoenix application.</source>
          <target state="translated">Phoenix 애플리케이션의보기 계층을 정의합니다.</target>
        </trans-unit>
        <trans-unit id="07465682294918bcade97a592701eab8d7bc4fa5" translate="yes" xml:space="preserve">
          <source>Defines which Channel events to intercept for &lt;code&gt;handle_out/3&lt;/code&gt; callbacks</source>
          <target state="translated">&lt;code&gt;handle_out/3&lt;/code&gt; 콜백 을 가로 챌 채널 이벤트를 정의합니다.</target>
        </trans-unit>
        <trans-unit id="642d24d790a544e7a3090f37c45010edab2614c2" translate="yes" xml:space="preserve">
          <source>Defines which Channel events to intercept for &lt;code&gt;handle_out/3&lt;/code&gt; callbacks.</source>
          <target state="translated">&lt;code&gt;handle_out/3&lt;/code&gt; 콜백 을 가로 챌 채널 이벤트를 정의합니다 .</target>
        </trans-unit>
        <trans-unit id="e3314166cec5f4c7b8773a376d51e5529a69824d" translate="yes" xml:space="preserve">
          <source>Defines windows which can be used with &lt;a href=&quot;ecto.query.windowapi&quot;&gt;&lt;code&gt;Ecto.Query.WindowAPI&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;ecto.query.windowapi&quot;&gt; &lt;code&gt;Ecto.Query.WindowAPI&lt;/code&gt; &lt;/a&gt; 와 함께 사용할 수있는 창을 정의합니다</target>
        </trans-unit>
        <trans-unit id="b2601687aa8ec4a6c14723b50e590b550da8746d" translate="yes" xml:space="preserve">
          <source>Defines windows which can be used with &lt;a href=&quot;ecto.query.windowapi&quot;&gt;&lt;code&gt;Ecto.Query.WindowAPI&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;ecto.query.windowapi&quot;&gt; &lt;code&gt;Ecto.Query.WindowAPI&lt;/code&gt; &lt;/a&gt; 와 함께 사용할 수있는 창을 정의합니다 .</target>
        </trans-unit>
        <trans-unit id="7404bbfa3bf1eaa2f779cbe4fdcea4586867f84e" translate="yes" xml:space="preserve">
          <source>Defining custom functions using macros and fragment</source>
          <target state="translated">매크로 및 조각을 사용하여 사용자 정의 함수 정의</target>
        </trans-unit>
        <trans-unit id="847c4e031bd354c6f6d6aff9d13bbd0981a8abc3" translate="yes" xml:space="preserve">
          <source>Defining embedded schema in such a way will define a &lt;code&gt;Parent.Child&lt;/code&gt; module with the appropriate struct. In order to properly cast the embedded schema. When casting the inline-defined embedded schemas you need to use the &lt;code&gt;:with&lt;/code&gt; option of &lt;a href=&quot;ecto.changeset#cast_embed/3&quot;&gt;&lt;code&gt;Ecto.Changeset.cast_embed/3&lt;/code&gt;&lt;/a&gt; to provide the proper function to do the casting. For example:</source>
          <target state="translated">이런 식으로 임베디드 스키마를 정의 하면 적절한 구조체로 &lt;code&gt;Parent.Child&lt;/code&gt; 모듈을 정의합니다 . 임베디드 스키마를 올바르게 캐스트하기 위해. 인라인 정의 내장 스키마를 캐스팅 할 때 캐스팅 을 수행하기위한 적절한 기능을 제공하려면 &lt;a href=&quot;ecto.changeset#cast_embed/3&quot;&gt; &lt;code&gt;Ecto.Changeset.cast_embed/3&lt;/code&gt; &lt;/a&gt; 의 &lt;code&gt;:with&lt;/code&gt; 옵션 을 사용해야합니다 . 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="e25d056469e7205f8c1dba96e0a56fc8a4f8df72" translate="yes" xml:space="preserve">
          <source>Defining embedded schema in such a way will define a &lt;code&gt;Parent.Child&lt;/code&gt; module with the appropriate struct. In order to properly cast the embedded schema. When casting the inline-defined embedded schemas you need to use the &lt;code&gt;:with&lt;/code&gt; option of &lt;code&gt;cast_embed/3&lt;/code&gt; to provide the proper function to do the casting. For example:</source>
          <target state="translated">이런 식으로 임베디드 스키마를 정의 하면 적절한 구조체로 &lt;code&gt;Parent.Child&lt;/code&gt; 모듈을 정의합니다 . 임베디드 스키마를 올바르게 캐스트하기 위해. 인라인 정의 내장 스키마를 캐스팅 할 때는 &lt;code&gt;cast_embed/3&lt;/code&gt; 의 &lt;code&gt;:with&lt;/code&gt; 옵션 을 사용 하여 캐스팅을 수행하기위한 적절한 기능을 제공해야합니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="dc3c2b2ee76ee6e2f89d0ec2d1f82252edeb9f34" translate="yes" xml:space="preserve">
          <source>Delete compiled/compressed asset files that are no longer in use based on specified criteria</source>
          <target state="translated">지정된 기준에 따라 더 이상 사용되지 않는 컴파일 / 압축 된 자산 파일 삭제</target>
        </trans-unit>
        <trans-unit id="28b5a017f49a91de5c9274f70107efe0891cca63" translate="yes" xml:space="preserve">
          <source>Delete compiled/compressed asset files that are no longer in use based on specified criteria.</source>
          <target state="translated">지정된 기준에 따라 더 이상 사용하지 않는 컴파일 / 압축 된 자산 파일을 삭제하십시오.</target>
        </trans-unit>
        <trans-unit id="13214aab7bd1d6ebe1a36dd15784fd2dbb158e70" translate="yes" xml:space="preserve">
          <source>Deletes a change with the given key</source>
          <target state="translated">주어진 키로 변경 사항을 삭제합니다</target>
        </trans-unit>
        <trans-unit id="deca0e88c2adbf1fa7421afbd9abd2be33eec20f" translate="yes" xml:space="preserve">
          <source>Deletes a change with the given key.</source>
          <target state="translated">주어진 키로 변경 사항을 삭제합니다.</target>
        </trans-unit>
        <trans-unit id="aadb3bc757b2c5aaaedfe0cb46c185ffae746461" translate="yes" xml:space="preserve">
          <source>Deletes a request cookie</source>
          <target state="translated">요청 쿠키를 삭제합니다</target>
        </trans-unit>
        <trans-unit id="7b00727b0e36527b1754c79a189a2e6ba8d90811" translate="yes" xml:space="preserve">
          <source>Deletes a request cookie.</source>
          <target state="translated">요청 쿠키를 삭제합니다.</target>
        </trans-unit>
        <trans-unit id="2d06cbcc573807b201eb7218d2ae670db20fd2bc" translate="yes" xml:space="preserve">
          <source>Deletes a request header if present</source>
          <target state="translated">요청 헤더가있는 경우 삭제</target>
        </trans-unit>
        <trans-unit id="abea7b5b79304c193dfacc3e6ac3b8b34beb66ab" translate="yes" xml:space="preserve">
          <source>Deletes a request header if present.</source>
          <target state="translated">요청 헤더가 있으면 삭제합니다.</target>
        </trans-unit>
        <trans-unit id="6c7f349096886a817007251d959a39bd17bbf943" translate="yes" xml:space="preserve">
          <source>Deletes a response cookie</source>
          <target state="translated">응답 쿠키를 삭제합니다</target>
        </trans-unit>
        <trans-unit id="720063bae4bfc2808217c51052678716d5abe047" translate="yes" xml:space="preserve">
          <source>Deletes a response cookie.</source>
          <target state="translated">응답 쿠키를 삭제합니다.</target>
        </trans-unit>
        <trans-unit id="a8142ba1aa22d293febaab12665e6bb2b86e39aa" translate="yes" xml:space="preserve">
          <source>Deletes a response header if present</source>
          <target state="translated">있는 경우 응답 헤더를 삭제합니다</target>
        </trans-unit>
        <trans-unit id="e48fc1e7e71688c5551c72a64f5da6856955070a" translate="yes" xml:space="preserve">
          <source>Deletes a response header if present.</source>
          <target state="translated">응답 헤더가 있으면 삭제합니다.</target>
        </trans-unit>
        <trans-unit id="a6425e65d9f201eb8a2b6e3490740623a09142db" translate="yes" xml:space="preserve">
          <source>Deletes a single struct with the given filters</source>
          <target state="translated">주어진 필터로 단일 구조체를 삭제합니다</target>
        </trans-unit>
        <trans-unit id="cf31e7ca3f3b34e927478bb8d3ccd25fdbb569ec" translate="yes" xml:space="preserve">
          <source>Deletes a single struct with the given filters.</source>
          <target state="translated">주어진 필터로 단일 구조체를 삭제합니다.</target>
        </trans-unit>
        <trans-unit id="c49793fda674028caa019b541a37af5245caf970" translate="yes" xml:space="preserve">
          <source>Deletes a struct using its primary key</source>
          <target state="translated">기본 키를 사용하여 구조체를 삭제합니다.</target>
        </trans-unit>
        <trans-unit id="6b0f350c369eba34b55c12b3bb595615937f6ff5" translate="yes" xml:space="preserve">
          <source>Deletes a struct using its primary key.</source>
          <target state="translated">기본 키를 사용하여 구조체를 삭제합니다.</target>
        </trans-unit>
        <trans-unit id="99a7bdafb4a5add3ba4ed6cbb69eceaaa881d322" translate="yes" xml:space="preserve">
          <source>Deletes all entries matching the given query</source>
          <target state="translated">주어진 검색어와 일치하는 모든 항목을 삭제합니다.</target>
        </trans-unit>
        <trans-unit id="f37192814b4bbe90dc78941307f5bc02d3f80812" translate="yes" xml:space="preserve">
          <source>Deletes all entries matching the given query.</source>
          <target state="translated">주어진 검색어와 일치하는 모든 항목을 삭제합니다.</target>
        </trans-unit>
        <trans-unit id="07d5b14db379714d12e9bdc4a09310e477552c02" translate="yes" xml:space="preserve">
          <source>Deletes any CSRF token set</source>
          <target state="translated">CSRF 토큰 세트를 삭제합니다.</target>
        </trans-unit>
        <trans-unit id="6708e2a5d51b61df92adbc1eb9bc52a77c891cd1" translate="yes" xml:space="preserve">
          <source>Deletes any CSRF token set.</source>
          <target state="translated">CSRF 토큰 세트를 삭제합니다.</target>
        </trans-unit>
        <trans-unit id="efbcf3247e62f0f6be7f09d7f602f1dd662b28fe" translate="yes" xml:space="preserve">
          <source>Deletes the CSRF token from the process dictionary</source>
          <target state="translated">프로세스 사전에서 CSRF 토큰을 삭제합니다.</target>
        </trans-unit>
        <trans-unit id="b0cf0913b96035e4ec0da1dc517a91bd41b65b68" translate="yes" xml:space="preserve">
          <source>Deletes the CSRF token from the process dictionary.</source>
          <target state="translated">프로세스 사전에서 CSRF 토큰을 삭제합니다.</target>
        </trans-unit>
        <trans-unit id="9b584ac24f3db38d0aae3ca2dfe9ae4e52297571" translate="yes" xml:space="preserve">
          <source>Deletes the session for the given &lt;code&gt;key&lt;/code&gt;</source>
          <target state="translated">주어진 &lt;code&gt;key&lt;/code&gt; 대한 세션을 삭제합니다</target>
        </trans-unit>
        <trans-unit id="492ad3e1227c0240a2139106742d9007e1dbf985" translate="yes" xml:space="preserve">
          <source>Deletes the session for the given &lt;code&gt;key&lt;/code&gt;.</source>
          <target state="translated">주어진 &lt;code&gt;key&lt;/code&gt; 대한 세션을 삭제합니다 .</target>
        </trans-unit>
        <trans-unit id="7f2a493d27d308a215e6776d97101f6bfa8d94bd" translate="yes" xml:space="preserve">
          <source>Deleting a cookie requires the same options as to when the cookie was put. Check &lt;a href=&quot;#put_resp_cookie/4&quot;&gt;&lt;code&gt;put_resp_cookie/4&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="translated">쿠키를 삭제하려면 쿠키를 넣었을 때와 동일한 옵션이 필요합니다. 확인 &lt;a href=&quot;#put_resp_cookie/4&quot;&gt; &lt;code&gt;put_resp_cookie/4&lt;/code&gt; &lt;/a&gt; 더 많은 정보를 얻을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0829d3fed8071950ec7a9ea9d8e675b4eee7e5df" translate="yes" xml:space="preserve">
          <source>Depending on the given &lt;code&gt;type&lt;/code&gt; performs a structural or semantical comparison.</source>
          <target state="translated">주어진 &lt;code&gt;type&lt;/code&gt; 에 따라 구조적 또는 의미 론적 비교를 수행합니다.</target>
        </trans-unit>
        <trans-unit id="8d60002ce0cbb84509bdb53ded6e6959b0d1b953" translate="yes" xml:space="preserve">
          <source>Deprecated version of conn/0. Use build_conn/0 instead</source>
          <target state="translated">더 이상 사용되지 않는 conn / 0 버전입니다. 대신 build_conn / 0을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="667efcfdd5df9fec932f221c6a4bed3f5f15f7d3" translate="yes" xml:space="preserve">
          <source>Deprecated version of conn/3. Use build_conn/3 instead</source>
          <target state="translated">더 이상 사용되지 않는 conn / 3 버전. 대신 build_conn / 3을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="a43d5127d4822c6c5a9fb2f275c5aaedaf9e424f" translate="yes" xml:space="preserve">
          <source>Developers typically invoke &lt;a href=&quot;https://hexdocs.pm/elixir/Supervisor.html#init/2&quot;&gt;&lt;code&gt;Supervisor.init/2&lt;/code&gt;&lt;/a&gt; at the end of their init callback to return the proper supervision flags.</source>
          <target state="translated">개발자는 일반적으로 적절한 감독 플래그를 반환하기 위해 초기화 콜백이 끝날 때 &lt;a href=&quot;https://hexdocs.pm/elixir/Supervisor.html#init/2&quot;&gt; &lt;code&gt;Supervisor.init/2&lt;/code&gt; &lt;/a&gt; 를 호출 합니다.</target>
        </trans-unit>
        <trans-unit id="d10727ff07a61c20d90a8ead7e945824b521a56e" translate="yes" xml:space="preserve">
          <source>Diffie Hellman parameters</source>
          <target state="translated">Diffie Hellman 매개 변수</target>
        </trans-unit>
        <trans-unit id="5239c7e690be047b1c40d1686ed6392e481c3ddb" translate="yes" xml:space="preserve">
          <source>Digests and compress static files.</source>
          <target state="translated">정적 파일을 요약하고 압축합니다.</target>
        </trans-unit>
        <trans-unit id="b81ec068f62bb915dba55bc19790a31a98f55818" translate="yes" xml:space="preserve">
          <source>Digests and compresses static files.</source>
          <target state="translated">정적 파일을 요약하고 압축합니다.</target>
        </trans-unit>
        <trans-unit id="99ebbad0bfd4667f6a336c3b334aa0d4e3d8ddc7" translate="yes" xml:space="preserve">
          <source>Digests and compresses the static files and saves them in the given output path</source>
          <target state="translated">정적 파일을 소화 및 압축하여 지정된 출력 경로에 저장</target>
        </trans-unit>
        <trans-unit id="7a8caf6ea516252bee7fd92867f23b995212ceca" translate="yes" xml:space="preserve">
          <source>Digests and compresses the static files and saves them in the given output path.</source>
          <target state="translated">정적 파일을 요약하고 압축하여 지정된 출력 경로에 저장합니다.</target>
        </trans-unit>
        <trans-unit id="bcbc4cc8e3f388ccae89b1884e0b6507830e2f84" translate="yes" xml:space="preserve">
          <source>Direct usage</source>
          <target state="translated">직접 사용</target>
        </trans-unit>
        <trans-unit id="03bf0a54b86fdf600ed47b76df6625dec956b028" translate="yes" xml:space="preserve">
          <source>Disabling</source>
          <target state="translated">Disabling</target>
        </trans-unit>
        <trans-unit id="96b5232fa4c733e97f037f875fd5a92f8e94d41c" translate="yes" xml:space="preserve">
          <source>Dispatches &lt;a href=&quot;phoenix.socket.message&quot;&gt;&lt;code&gt;Phoenix.Socket.Message&lt;/code&gt;&lt;/a&gt; to a channel</source>
          <target state="translated">&lt;a href=&quot;phoenix.socket.message&quot;&gt; &lt;code&gt;Phoenix.Socket.Message&lt;/code&gt; &lt;/a&gt; 를 채널로 발송</target>
        </trans-unit>
        <trans-unit id="fe9d02a45e91f54e19c7f2226499f19d70de1a13" translate="yes" xml:space="preserve">
          <source>Dispatches &lt;a href=&quot;phoenix.socket.message&quot;&gt;&lt;code&gt;Phoenix.Socket.Message&lt;/code&gt;&lt;/a&gt; to a channel.</source>
          <target state="translated">&lt;a href=&quot;phoenix.socket.message&quot;&gt; &lt;code&gt;Phoenix.Socket.Message&lt;/code&gt; &lt;/a&gt; 를 채널로 발송 합니다.</target>
        </trans-unit>
        <trans-unit id="1c1adafd96d807fa9fb86cd4d2da33f8d9cc603e" translate="yes" xml:space="preserve">
          <source>Dispatches the connection to the given endpoint</source>
          <target state="translated">주어진 엔드 포인트로 연결을 전달합니다</target>
        </trans-unit>
        <trans-unit id="fba471690dad6774fb53979ac504840f01b87f88" translate="yes" xml:space="preserve">
          <source>Dispatches the connection to the given endpoint.</source>
          <target state="translated">지정된 엔드 포인트에 대한 연결을 전달합니다.</target>
        </trans-unit>
        <trans-unit id="ddc1527261174a3bf196eb7378ee28cfde1c8cf2" translate="yes" xml:space="preserve">
          <source>Dispatches to the current endpoint</source>
          <target state="translated">현재 엔드 포인트로 전달</target>
        </trans-unit>
        <trans-unit id="42be31ad4915b519b26d800f35414ec31eb0e7a5" translate="yes" xml:space="preserve">
          <source>Dispatches to the current endpoint.</source>
          <target state="translated">현재 엔드 포인트로 전달합니다.</target>
        </trans-unit>
        <trans-unit id="5f8b1bea9f9d0843e3db8ee304f3d8d863a0d537" translate="yes" xml:space="preserve">
          <source>Dispatches to the path only if the request is a DELETE request. See &lt;a href=&quot;#match/3&quot;&gt;&lt;code&gt;match/3&lt;/code&gt;&lt;/a&gt; for more examples</source>
          <target state="translated">요청이 DELETE 요청 인 경우에만 경로로 전달합니다. 더 많은 예제를 보려면 &lt;a href=&quot;#match/3&quot;&gt; &lt;code&gt;match/3&lt;/code&gt; &lt;/a&gt; 를 보십시오</target>
        </trans-unit>
        <trans-unit id="349715d24abcab00378c6953ef63281898d5f0fc" translate="yes" xml:space="preserve">
          <source>Dispatches to the path only if the request is a DELETE request. See &lt;a href=&quot;#match/3&quot;&gt;&lt;code&gt;match/3&lt;/code&gt;&lt;/a&gt; for more examples.</source>
          <target state="translated">요청이 DELETE 요청 인 경우에만 경로로 전달합니다. 자세한 예는 &lt;a href=&quot;#match/3&quot;&gt; &lt;code&gt;match/3&lt;/code&gt; &lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="9efbcffe2d3f8f6f005a51ab5bedcf5e13902b73" translate="yes" xml:space="preserve">
          <source>Dispatches to the path only if the request is a GET request. See &lt;a href=&quot;#match/3&quot;&gt;&lt;code&gt;match/3&lt;/code&gt;&lt;/a&gt; for more examples</source>
          <target state="translated">요청이 GET 요청 인 경우에만 경로로 전달합니다. 더 많은 예제를 보려면 &lt;a href=&quot;#match/3&quot;&gt; &lt;code&gt;match/3&lt;/code&gt; &lt;/a&gt; 를 보십시오</target>
        </trans-unit>
        <trans-unit id="d1fdf8470e12c39b6e23854035c4ed2bcdd13ba3" translate="yes" xml:space="preserve">
          <source>Dispatches to the path only if the request is a GET request. See &lt;a href=&quot;#match/3&quot;&gt;&lt;code&gt;match/3&lt;/code&gt;&lt;/a&gt; for more examples.</source>
          <target state="translated">요청이 GET 요청 인 경우에만 경로로 전달합니다. 자세한 예는 &lt;a href=&quot;#match/3&quot;&gt; &lt;code&gt;match/3&lt;/code&gt; &lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="26451cb29dcd04808f58ada5f73009b82391d2da" translate="yes" xml:space="preserve">
          <source>Dispatches to the path only if the request is a PATCH request. See &lt;a href=&quot;#match/3&quot;&gt;&lt;code&gt;match/3&lt;/code&gt;&lt;/a&gt; for more examples</source>
          <target state="translated">요청이 PATCH 요청 인 경우에만 경로로 전달합니다. 더 많은 예제를 보려면 &lt;a href=&quot;#match/3&quot;&gt; &lt;code&gt;match/3&lt;/code&gt; &lt;/a&gt; 를 보십시오</target>
        </trans-unit>
        <trans-unit id="eb9fffe149738fbaf0d808506ca784dcbbf146b1" translate="yes" xml:space="preserve">
          <source>Dispatches to the path only if the request is a PATCH request. See &lt;a href=&quot;#match/3&quot;&gt;&lt;code&gt;match/3&lt;/code&gt;&lt;/a&gt; for more examples.</source>
          <target state="translated">요청이 PATCH 요청 인 경우에만 경로로 전달합니다. 자세한 예는 &lt;a href=&quot;#match/3&quot;&gt; &lt;code&gt;match/3&lt;/code&gt; &lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="759d5edd2913b0fd955b74910f524889cf96caf8" translate="yes" xml:space="preserve">
          <source>Dispatches to the path only if the request is a POST request. See &lt;a href=&quot;#match/3&quot;&gt;&lt;code&gt;match/3&lt;/code&gt;&lt;/a&gt; for more examples</source>
          <target state="translated">요청이 POST 요청 인 경우에만 경로로 전달합니다. 더 많은 예제를 보려면 &lt;a href=&quot;#match/3&quot;&gt; &lt;code&gt;match/3&lt;/code&gt; &lt;/a&gt; 를 보십시오</target>
        </trans-unit>
        <trans-unit id="e7375e61dd2d04843b22f96071660e356c62a62e" translate="yes" xml:space="preserve">
          <source>Dispatches to the path only if the request is a POST request. See &lt;a href=&quot;#match/3&quot;&gt;&lt;code&gt;match/3&lt;/code&gt;&lt;/a&gt; for more examples.</source>
          <target state="translated">요청이 POST 요청 인 경우에만 경로로 전달합니다. 자세한 예는 &lt;a href=&quot;#match/3&quot;&gt; &lt;code&gt;match/3&lt;/code&gt; &lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="633336dc61440b815025525888e0681e8339cd0a" translate="yes" xml:space="preserve">
          <source>Dispatches to the path only if the request is a PUT request. See &lt;a href=&quot;#match/3&quot;&gt;&lt;code&gt;match/3&lt;/code&gt;&lt;/a&gt; for more examples</source>
          <target state="translated">요청이 PUT 요청 인 경우에만 경로로 전달합니다. 더 많은 예제를 보려면 &lt;a href=&quot;#match/3&quot;&gt; &lt;code&gt;match/3&lt;/code&gt; &lt;/a&gt; 를 보십시오</target>
        </trans-unit>
        <trans-unit id="53fd2e3f0afad2fe34f350bf859d9130b5fc0d22" translate="yes" xml:space="preserve">
          <source>Dispatches to the path only if the request is a PUT request. See &lt;a href=&quot;#match/3&quot;&gt;&lt;code&gt;match/3&lt;/code&gt;&lt;/a&gt; for more examples.</source>
          <target state="translated">요청이 PUT 요청 인 경우에만 경로로 전달합니다. 자세한 예는 &lt;a href=&quot;#match/3&quot;&gt; &lt;code&gt;match/3&lt;/code&gt; &lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="114a23fd1f7e23090c953828c5b91b00fe01f39a" translate="yes" xml:space="preserve">
          <source>Dispatches to the path only if the request is an OPTIONS request. See &lt;a href=&quot;#match/3&quot;&gt;&lt;code&gt;match/3&lt;/code&gt;&lt;/a&gt; for more examples</source>
          <target state="translated">요청이 OPTIONS 요청 인 경우에만 경로로 전달합니다. 더 많은 예제를 보려면 &lt;a href=&quot;#match/3&quot;&gt; &lt;code&gt;match/3&lt;/code&gt; &lt;/a&gt; 를 보십시오</target>
        </trans-unit>
        <trans-unit id="8029cdf2d25f0c8a87e355c232a05cf294c3e2a6" translate="yes" xml:space="preserve">
          <source>Dispatches to the path only if the request is an OPTIONS request. See &lt;a href=&quot;#match/3&quot;&gt;&lt;code&gt;match/3&lt;/code&gt;&lt;/a&gt; for more examples.</source>
          <target state="translated">요청이 OPTIONS 요청 인 경우에만 경로로 전달합니다. 자세한 예는 &lt;a href=&quot;#match/3&quot;&gt; &lt;code&gt;match/3&lt;/code&gt; &lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="844b37d9d4baf2003a9abb5cf8a72c3e2f8e0680" translate="yes" xml:space="preserve">
          <source>Do not use this function to validate associations are required, instead pass the &lt;code&gt;:required&lt;/code&gt; option to &lt;a href=&quot;#cast_assoc/3&quot;&gt;&lt;code&gt;cast_assoc/3&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 함수를 사용하여 연관이 필요한지 검증하지 말고 대신 &lt;code&gt;:required&lt;/code&gt; 옵션을 &lt;a href=&quot;#cast_assoc/3&quot;&gt; &lt;code&gt;cast_assoc/3&lt;/code&gt; 에&lt;/a&gt; 전달하십시오 .</target>
        </trans-unit>
        <trans-unit id="3bf8f5d49b9dd2bf889c2090ea30f0b66efc80e7" translate="yes" xml:space="preserve">
          <source>Drop the storage for the given repository.</source>
          <target state="translated">지정된 저장소의 스토리지를 삭제하십시오.</target>
        </trans-unit>
        <trans-unit id="3696edaf2ed1c056e2a9e610b35c66b8c9c81a65" translate="yes" xml:space="preserve">
          <source>Drops the storage given by options</source>
          <target state="translated">옵션으로 주어진 스토리지를 삭제합니다</target>
        </trans-unit>
        <trans-unit id="7132740a80c40ddcb7bc2c507f7136ce65c76081" translate="yes" xml:space="preserve">
          <source>Drops the storage given by options.</source>
          <target state="translated">옵션으로 지정된 스토리지를 삭제합니다.</target>
        </trans-unit>
        <trans-unit id="bbfee27654e557ca6d136983cc0d993192098a89" translate="yes" xml:space="preserve">
          <source>Due to the prevalence of the pipe operator in Elixir, Ecto also supports a pipe-based syntax:</source>
          <target state="translated">Elixir의 파이프 연산자가 널리 보급되어 있기 때문에 Ecto는 파이프 기반 구문도 지원합니다.</target>
        </trans-unit>
        <trans-unit id="30bbef50b4671de3933513ba08c2e94c67829796" translate="yes" xml:space="preserve">
          <source>Dumps a value to the given type</source>
          <target state="translated">주어진 유형으로 값을 덤프합니다</target>
        </trans-unit>
        <trans-unit id="b1a432d1d1196aa0d7f96d5eec91e28e3d91508c" translate="yes" xml:space="preserve">
          <source>Dumps a value to the given type.</source>
          <target state="translated">주어진 유형으로 값을 덤프합니다.</target>
        </trans-unit>
        <trans-unit id="0417dafea29d5dfc870d3de69a4c4e148be3b40e" translate="yes" xml:space="preserve">
          <source>Dumps the given term into an Ecto native type</source>
          <target state="translated">주어진 용어를 Ecto 기본 유형으로 덤프합니다.</target>
        </trans-unit>
        <trans-unit id="553ee57bc177891a45abc3f403d26305442b25e5" translate="yes" xml:space="preserve">
          <source>Dumps the given term into an Ecto native type.</source>
          <target state="translated">주어진 용어를 Ecto 기본 유형으로 덤프합니다.</target>
        </trans-unit>
        <trans-unit id="46f3545d74684749addefc8accbfca66690a037c" translate="yes" xml:space="preserve">
          <source>Duplicate Join Subscriptions</source>
          <target state="translated">중복 가입 구독</target>
        </trans-unit>
        <trans-unit id="c7d8d30b4b4cc0ebefd2ef7f85457a3500a15419" translate="yes" xml:space="preserve">
          <source>Duplicate Subscriptions</source>
          <target state="translated">중복 구독</target>
        </trans-unit>
        <trans-unit id="073c74bdd08ac89c82d34b21985574c996b8040f" translate="yes" xml:space="preserve">
          <source>Duplicated operations are not allowed.</source>
          <target state="translated">중복 된 작업은 허용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="ddc07840a9dd97e5d9b21c437fa120c0b5258fa6" translate="yes" xml:space="preserve">
          <source>During casting, all &lt;code&gt;permitted&lt;/code&gt; parameters whose values match the specified type information will have their key name converted to an atom and stored together with the value as a change in the &lt;code&gt;:changes&lt;/code&gt; field of the changeset. All parameters that are not explicitly permitted are ignored.</source>
          <target state="translated">캐스팅 중에 값이 지정된 유형 정보와 일치하는 모든 &lt;code&gt;permitted&lt;/code&gt; 매개 변수는 키 이름을 원자로 변환하고 변경 세트의 &lt;code&gt;:changes&lt;/code&gt; 필드에 변경 사항 으로 값과 함께 저장합니다 . 명시 적으로 허용되지 않은 모든 매개 변수는 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="95239208a8ce56b0b9fafb46e146ac7d94cee756" translate="yes" xml:space="preserve">
          <source>During the request, files are represented with a &lt;a href=&quot;plug.upload#content&quot;&gt;&lt;code&gt;Plug.Upload&lt;/code&gt;&lt;/a&gt; struct that contains three fields:</source>
          <target state="translated">요청 중에 파일은 세 개의 필드를 포함 하는 &lt;a href=&quot;plug.upload#content&quot;&gt; &lt;code&gt;Plug.Upload&lt;/code&gt; &lt;/a&gt; 구조체 로 표시 됩니다.</target>
        </trans-unit>
        <trans-unit id="3ca7327a7bd2f5353024f65ee68945fbf10eccf7" translate="yes" xml:space="preserve">
          <source>Dynamic configuration</source>
          <target state="translated">동적 구성</target>
        </trans-unit>
        <trans-unit id="57d1ea9ebb2927a523b2fa1ba48aa25e8ceb8c49" translate="yes" xml:space="preserve">
          <source>Dynamic instrumentation</source>
          <target state="translated">다이나믹 계측</target>
        </trans-unit>
        <trans-unit id="63f95847c9a172342fffe74ea0e9ee86b32d1f29" translate="yes" xml:space="preserve">
          <source>Dynamic is also supported as each field in an update, for example:</source>
          <target state="translated">동적은 업데이트의 각 필드로 지원됩니다 (예 :</target>
        </trans-unit>
        <trans-unit id="aca0e11faafc714e1107582dd050cac6083af393" translate="yes" xml:space="preserve">
          <source>Dynamic query expressions allows developers to build queries expression bit by bit so they are later interpolated in a query.</source>
          <target state="translated">동적 쿼리 표현식을 통해 개발자는 비트별로 쿼리 표현식을 빌드 할 수 있으므로 나중에 쿼리에서 보간됩니다.</target>
        </trans-unit>
        <trans-unit id="933904af8bf3dbaf33d220a1dd41c4a3cbf4454e" translate="yes" xml:space="preserve">
          <source>Each Phoenix endpoint defines its own &lt;a href=&quot;#instrument/3&quot;&gt;&lt;code&gt;instrument/3&lt;/code&gt;&lt;/a&gt; macro. This macro is called like this:</source>
          <target state="translated">각 Phoenix 엔드 포인트는 자체 &lt;a href=&quot;#instrument/3&quot;&gt; &lt;code&gt;instrument/3&lt;/code&gt; &lt;/a&gt; 매크로를 정의합니다 . 이 매크로는 다음과 같이 불립니다.</target>
        </trans-unit>
        <trans-unit id="d2b643fec057644ebdc3a745c9f3b74028c8c0a8" translate="yes" xml:space="preserve">
          <source>Each element of the plug pipeline (according to the type signature of this function) has the form:</source>
          <target state="translated">플러그 파이프 라인의 각 요소 (이 기능의 형식 서명에 따라)는 다음과 같은 형식을 갖습니다.</target>
        </trans-unit>
        <trans-unit id="eb685d1d5301b54bb6fdbd19bd3a4def62faa983" translate="yes" xml:space="preserve">
          <source>Each join accepts the following options:</source>
          <target state="translated">각 조인은 다음 옵션을 허용합니다.</target>
        </trans-unit>
        <trans-unit id="1b807df4c8b8158b0d38aaa1ec1fe7695f9efe52" translate="yes" xml:space="preserve">
          <source>Each parser also accepts options to be given directly to it by using tuples. For example, to support file uploads it is common pass the &lt;code&gt;:length&lt;/code&gt;, &lt;code&gt;:read_length&lt;/code&gt; and &lt;code&gt;:read_timeout&lt;/code&gt; option to the multipart parser:</source>
          <target state="translated">각 파서는 또한 튜플을 사용하여 직접 제공되는 옵션을 허용합니다. 예를 들어 파일 업로드를 지원하려면 &lt;code&gt;:length&lt;/code&gt; , &lt;code&gt;:read_length&lt;/code&gt; 및 &lt;code&gt;:read_timeout&lt;/code&gt; 옵션을 multipart 파서에 일반적으로 전달하십시오 .</target>
        </trans-unit>
        <trans-unit id="4137e6a78f65b04c761ff22f86213d0d80a2eb7e" translate="yes" xml:space="preserve">
          <source>Each repository in Ecto defines a &lt;code&gt;start_link/0&lt;/code&gt; function that needs to be invoked before using the repository. In general, this function is not called directly, but used as part of your application supervision tree.</source>
          <target state="translated">Ecto의 각 저장소는 저장소를 사용하기 전에 호출해야하는 &lt;code&gt;start_link/0&lt;/code&gt; 함수를 정의 합니다. 일반적으로이 함수는 직접 호출되지는 않지만 응용 프로그램 감독 트리의 일부로 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="42676af9c1801515132454954363e3968139cf8c" translate="yes" xml:space="preserve">
          <source>Each route needs to return a connection, as per the Plug spec. A catch-all &lt;code&gt;match&lt;/code&gt; is recommended to be defined as in the example above, otherwise routing fails with a function clause error.</source>
          <target state="translated">각 라우트는 플러그 사양에 따라 연결을 반환해야합니다. catch-all &lt;code&gt;match&lt;/code&gt; 는 위의 예와 같이 정의하는 것이 좋습니다. 그렇지 않으면 function 절 오류로 라우팅이 실패합니다.</target>
        </trans-unit>
        <trans-unit id="dcdf26136c50360b65e21c593b2aa25573fb61b1" translate="yes" xml:space="preserve">
          <source>Ecto</source>
          <target state="translated">Ecto</target>
        </trans-unit>
        <trans-unit id="e0808b72726eab51305183dbafca6b5b8cd62cd6" translate="yes" xml:space="preserve">
          <source>Ecto allows a limited set of expressions inside queries. In the query below, for example, we use &lt;code&gt;u.age&lt;/code&gt; to access a field, the &lt;code&gt;&amp;gt;&lt;/code&gt; comparison operator and the literal &lt;code&gt;0&lt;/code&gt;:</source>
          <target state="translated">Ecto는 쿼리 내에서 제한된 표현식 집합을 허용합니다. 예를 들어 아래 쿼리에서 &lt;code&gt;u.age&lt;/code&gt; 를 사용하여 필드, &lt;code&gt;&amp;gt;&lt;/code&gt; 비교 연산자 및 리터럴 &lt;code&gt;0&lt;/code&gt; 에 액세스합니다 .</target>
        </trans-unit>
        <trans-unit id="bc4695641349036d0b21011fb2419472a4f2177b" translate="yes" xml:space="preserve">
          <source>Ecto also supports &lt;a href=&quot;http://en.wikipedia.org/wiki/Optimistic_concurrency_control&quot;&gt;optimistic locking&lt;/a&gt; but not through queries. For more information on optimistic locking, have a look at the &lt;a href=&quot;ecto.changeset#optimistic_lock/3&quot;&gt;&lt;code&gt;Ecto.Changeset.optimistic_lock/3&lt;/code&gt;&lt;/a&gt; function</source>
          <target state="translated">Ecto는 &lt;a href=&quot;http://en.wikipedia.org/wiki/Optimistic_concurrency_control&quot;&gt;낙관적 잠금&lt;/a&gt; 을 지원 하지만 쿼리를 통하지는 않습니다. 낙관적 잠금에 대한 자세한 내용은 &lt;a href=&quot;ecto.changeset#optimistic_lock/3&quot;&gt; &lt;code&gt;Ecto.Changeset.optimistic_lock/3&lt;/code&gt; &lt;/a&gt; 함수를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="d260b9af1a7917d7e4d184502a29c53ba67c3e54" translate="yes" xml:space="preserve">
          <source>Ecto also supports composite primary keys.</source>
          <target state="translated">Ecto는 복합 기본 키도 지원합니다.</target>
        </trans-unit>
        <trans-unit id="a4adc50452a5297dcd0585501140d5cb5dfc117e" translate="yes" xml:space="preserve">
          <source>Ecto also supports defining associations in terms of other associations via the &lt;code&gt;:through&lt;/code&gt; option. Let&amp;rsquo;s see an example:</source>
          <target state="translated">Ecto는 또한 &lt;code&gt;:through&lt;/code&gt; 옵션을 통해 다른 연관 측면에서 연관 정의를 지원합니다 . 예를 보자.</target>
        </trans-unit>
        <trans-unit id="1b37c67383eec60d8334adc3fc230ee78bce3dc6" translate="yes" xml:space="preserve">
          <source>Ecto also supports embeds. While associations keep parent and child entries in different tables, embeds stores the child along side the parent.</source>
          <target state="translated">Ecto는 임베드도 지원합니다. 연관은 상위 및 하위 항목을 다른 테이블에 유지하지만 임베드는 하위와 함께 하위를 저장합니다.</target>
        </trans-unit>
        <trans-unit id="908f4eba6dd75fb3bf8e7ee20ba68b4314aa6545" translate="yes" xml:space="preserve">
          <source>Ecto also supports many of the windows functions found in SQL databases. See &lt;a href=&quot;ecto.query.windowapi&quot;&gt;&lt;code&gt;Ecto.Query.WindowAPI&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="translated">Ecto는 또한 SQL 데이터베이스에있는 많은 Windows 기능을 지원합니다. 자세한 내용은 &lt;a href=&quot;ecto.query.windowapi&quot;&gt; &lt;code&gt;Ecto.Query.WindowAPI&lt;/code&gt; &lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="5c35ea8a0006f885d97bfefda29f8a7f60b833a9" translate="yes" xml:space="preserve">
          <source>Ecto and SQL</source>
          <target state="translated">엑토와 SQL</target>
        </trans-unit>
        <trans-unit id="543e777ba71274048b82434d7ca3c6e914af7361" translate="yes" xml:space="preserve">
          <source>Ecto automatically applies the action for you when you call Repo.insert/update/delete, but if you want to show errors manually you can also set the action yourself, either directly on the &lt;code&gt;Ecto.Changeset&lt;/code&gt; struct field or by using &lt;code&gt;Ecto.Changeset.apply_action/2&lt;/code&gt;.</source>
          <target state="translated">Ecto는 Repo.insert / update / delete를 호출 할 때 자동으로 조치를 적용하지만, 오류를 수동으로 표시하려면 &lt;code&gt;Ecto.Changeset&lt;/code&gt; 구조체 필드 에서 직접 또는 &lt;code&gt;Ecto.Changeset.apply_action/2&lt;/code&gt; 을 사용하여 직접 조치를 설정할 수도 있습니다 . apply_action / 2 .</target>
        </trans-unit>
        <trans-unit id="1f049343842e4a513055f3ab397ff02c6dedf67a" translate="yes" xml:space="preserve">
          <source>Ecto changesets provide both validations and constraints which are ultimately turned into errors in case something goes wrong.</source>
          <target state="translated">Ecto 변경 세트는 유효성 검사와 제약 조건을 모두 제공하여 문제가 발생할 경우 궁극적으로 오류로 바뀝니다.</target>
        </trans-unit>
        <trans-unit id="0e6a7ceb26ad9821e6a3b4856e571db0d01d37ac" translate="yes" xml:space="preserve">
          <source>Ecto generators will automatically open the generated files if you have &lt;code&gt;ECTO_EDITOR&lt;/code&gt; set in your environment variable.</source>
          <target state="translated">환경 변수에 &lt;code&gt;ECTO_EDITOR&lt;/code&gt; 가 설정되어 있으면 Ecto 생성기가 생성 된 파일을 자동으로 엽니 다 .</target>
        </trans-unit>
        <trans-unit id="68384cbbdc911478cd5e5264d1bb10fb91095ea3" translate="yes" xml:space="preserve">
          <source>Ecto is split into 4 main components:</source>
          <target state="translated">Ecto는 4 가지 주요 구성 요소로 나뉩니다.</target>
        </trans-unit>
        <trans-unit id="88ef839ecd01e6c797ad024ae6bd2fdc011a46c1" translate="yes" xml:space="preserve">
          <source>Ecto provides many tasks to help your workflow as well as code generators. You can find all available tasks by typing &lt;code&gt;mix help&lt;/code&gt; inside a project with Ecto listed as a dependency.</source>
          <target state="translated">Ecto는 코드 생성기뿐만 아니라 워크 플로를 돕는 많은 작업을 제공합니다. Ecto가 종속성으로 나열된 프로젝트에서 &lt;code&gt;mix help&lt;/code&gt; 를 입력하면 사용 가능한 모든 작업을 찾을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="3681d1859c813fd536d00578ddf22cb6924eeddb" translate="yes" xml:space="preserve">
          <source>Ecto queries are composable. For example, the query above can actually be defined in two parts:</source>
          <target state="translated">Ecto 쿼리는 작성 가능합니다. 예를 들어 위의 쿼리는 실제로 두 부분으로 정의 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2da1bf196269568f33d7352b70b059cbe9365ba2" translate="yes" xml:space="preserve">
          <source>Ecto requires developers to specify the key &lt;code&gt;:ecto_repos&lt;/code&gt; in their application configuration before using tasks like &lt;code&gt;ecto.create&lt;/code&gt; and &lt;code&gt;ecto.migrate&lt;/code&gt;. For example:</source>
          <target state="translated">Ecto는 개발자가 &lt;code&gt;ecto.create&lt;/code&gt; 및 &lt;code&gt;ecto.migrate&lt;/code&gt; 와 같은 작업을 사용하기 전에 응용 프로그램 구성에 키 &lt;code&gt;:ecto_repos&lt;/code&gt; 를 지정해야합니다 . 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="e4ecd730cb9b1dd813d32119673f0aa61b875ab1" translate="yes" xml:space="preserve">
          <source>Ecto supports defining associations on schemas:</source>
          <target state="translated">Ecto는 스키마에 대한 연관 정의를 지원합니다.</target>
        </trans-unit>
        <trans-unit id="8f5b97a18c2bf62f93a37d4e1e34d2d1add2db9c" translate="yes" xml:space="preserve">
          <source>Ecto supports two ID types, called &lt;code&gt;:id&lt;/code&gt; and &lt;code&gt;:binary_id&lt;/code&gt;, which are often used as the type for primary keys and associations.</source>
          <target state="translated">Ecto는 &lt;code&gt;:id&lt;/code&gt; 및 &lt;code&gt;:binary_id&lt;/code&gt; 라는 두 가지 ID 유형을 지원하며 기본 키 및 연관 유형으로 자주 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="20a84ad3515a8a2de63286eb205c801c7f85ca64" translate="yes" xml:space="preserve">
          <source>Ecto type</source>
          <target state="translated">엑토 타입</target>
        </trans-unit>
        <trans-unit id="739fdc6f801f8cd9bb885970f4e968f7c6d0a112" translate="yes" xml:space="preserve">
          <source>Ecto will ensure &lt;code&gt;^title&lt;/code&gt; is cast to the given type and enforce such type at the database level. If the value is returned in a &lt;code&gt;select&lt;/code&gt;, Ecto will also enforce the proper type throughout.</source>
          <target state="translated">Ecto는 &lt;code&gt;^title&lt;/code&gt; 이 주어진 유형으로 캐스트되도록하고 데이터베이스 레벨에서 그러한 유형을 시행합니다. &lt;code&gt;select&lt;/code&gt; 에 값이 반환 되면 Ecto는 전체에 적절한 유형을 적용합니다.</target>
        </trans-unit>
        <trans-unit id="109e0f72e455dc2c107b7ea7e25da2f337435680" translate="yes" xml:space="preserve">
          <source>Ecto.Adapter &lt;small&gt;behaviour&lt;/small&gt;</source>
          <target state="translated">엑서스 어댑터 &lt;small&gt;동작&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="c7b3436e4efa478386e69de3f89bccf78a5331ed" translate="yes" xml:space="preserve">
          <source>Ecto.Adapter.Queryable &lt;small&gt;behaviour&lt;/small&gt;</source>
          <target state="translated">Ecto.Adapter.Queryable &lt;small&gt;동작&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="28222015c5ff8c27111fd36a355d891862e983ed" translate="yes" xml:space="preserve">
          <source>Ecto.Adapter.Schema &lt;small&gt;behaviour&lt;/small&gt;</source>
          <target state="translated">Ecto.Adapter.Schema &lt;small&gt;동작&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="220b9623a8e6a7a65e78d057a3d212aeb1b2de12" translate="yes" xml:space="preserve">
          <source>Ecto.Adapter.Storage &lt;small&gt;behaviour&lt;/small&gt;</source>
          <target state="translated">Ecto.Adapter.Storage &lt;small&gt;동작&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="642d5ee61cdbf3b8b6100f8fd20b4c8ab0ab3603" translate="yes" xml:space="preserve">
          <source>Ecto.Adapter.Transaction &lt;small&gt;behaviour&lt;/small&gt;</source>
          <target state="translated">Ecto.Adapter.Transaction &lt;small&gt;동작&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="ca20f1fc38a83abc4fe1f015f1e4a61f6d344ca3" translate="yes" xml:space="preserve">
          <source>Ecto.Association.BelongsTo</source>
          <target state="translated">Ecto.Association.BelongsTo</target>
        </trans-unit>
        <trans-unit id="bab53a05091b2ada117882673397ba808e865699" translate="yes" xml:space="preserve">
          <source>Ecto.Association.Has</source>
          <target state="translated">Ecto.Association.Has</target>
        </trans-unit>
        <trans-unit id="5b5db5b2170f1ce4d827994851108a6d1ee7d5b2" translate="yes" xml:space="preserve">
          <source>Ecto.Association.HasThrough</source>
          <target state="translated">Ecto.Association.HasThrough</target>
        </trans-unit>
        <trans-unit id="19e40c29077106de6b4120c7850a32444efff935" translate="yes" xml:space="preserve">
          <source>Ecto.Association.ManyToMany</source>
          <target state="translated">Ecto.Association.ManyToMany</target>
        </trans-unit>
        <trans-unit id="3e9d659ba5926e1ffb6a9e2eb6ce68fe1b43f568" translate="yes" xml:space="preserve">
          <source>Ecto.Association.NotLoaded</source>
          <target state="translated">Ecto.Association.NotLoaded</target>
        </trans-unit>
        <trans-unit id="f5d903958036e8e9d5b98f8ead032495c636fa97" translate="yes" xml:space="preserve">
          <source>Ecto.CastError</source>
          <target state="translated">Ecto.CastError</target>
        </trans-unit>
        <trans-unit id="359261cc36e3c68943f7642959e3a7879245c174" translate="yes" xml:space="preserve">
          <source>Ecto.CastError &lt;small&gt;exception&lt;/small&gt;</source>
          <target state="translated">Ecto.CastError &lt;small&gt;예외&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="87f7561d3d03785d252cdce4cff69685e660886d" translate="yes" xml:space="preserve">
          <source>Ecto.ChangeError</source>
          <target state="translated">Ecto.ChangeError</target>
        </trans-unit>
        <trans-unit id="eecc0c345ee7d1bc75637e20508b14c21e90d5ae" translate="yes" xml:space="preserve">
          <source>Ecto.ChangeError &lt;small&gt;exception&lt;/small&gt;</source>
          <target state="translated">Ecto.ChangeError &lt;small&gt;예외&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="67418d61e9ba76e8391116ba7958917020d802e6" translate="yes" xml:space="preserve">
          <source>Ecto.Changeset</source>
          <target state="translated">Ecto.Changeset</target>
        </trans-unit>
        <trans-unit id="04974eb9c173298cc8ee0461a1b8ea7c060f1a7b" translate="yes" xml:space="preserve">
          <source>Ecto.ConstraintError</source>
          <target state="translated">Ecto.ConstraintError</target>
        </trans-unit>
        <trans-unit id="8a42dff4520c0f3dad83eab70460eba2239a1c5f" translate="yes" xml:space="preserve">
          <source>Ecto.ConstraintError &lt;small&gt;exception&lt;/small&gt;</source>
          <target state="translated">Ecto.ConstraintError &lt;small&gt;예외&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="9ce1aee0af48a2f8651b751987fa8bc0f4e35a20" translate="yes" xml:space="preserve">
          <source>Ecto.InvalidChangesetError</source>
          <target state="translated">Ecto.InvalidChangesetError</target>
        </trans-unit>
        <trans-unit id="ce67b142a1bb80cf9c2a2867d44ea6a8c3578c02" translate="yes" xml:space="preserve">
          <source>Ecto.InvalidChangesetError &lt;small&gt;exception&lt;/small&gt;</source>
          <target state="translated">Ecto.InvalidChangesetError &lt;small&gt;예외&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="c5d1477ae3fb400821f1242b9bb3dc4a61c20190" translate="yes" xml:space="preserve">
          <source>Ecto.InvalidURLError</source>
          <target state="translated">Ecto.InvalidURLError</target>
        </trans-unit>
        <trans-unit id="4f08c43270c41104629098a7c2219b5dc40b37cf" translate="yes" xml:space="preserve">
          <source>Ecto.InvalidURLError &lt;small&gt;exception&lt;/small&gt;</source>
          <target state="translated">Ecto.InvalidURLError &lt;small&gt;예외&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="70da37d2af0a5953603574326abc9ac655050e10" translate="yes" xml:space="preserve">
          <source>Ecto.LogEntry</source>
          <target state="translated">Ecto.LogEntry</target>
        </trans-unit>
        <trans-unit id="35c9fc73d2d00ac9bcf8cdabe8534e91ab794279" translate="yes" xml:space="preserve">
          <source>Ecto.MigrationError</source>
          <target state="translated">Ecto.MigrationError</target>
        </trans-unit>
        <trans-unit id="a9ceb2554ab2c7eeb30e6a3c180ef6e2b319e425" translate="yes" xml:space="preserve">
          <source>Ecto.MigrationError &lt;small&gt;exception&lt;/small&gt;</source>
          <target state="translated">Ecto.MigrationError &lt;small&gt;예외&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="e4ca20044e173c84dd6302ce5e5cf9074c593be6" translate="yes" xml:space="preserve">
          <source>Ecto.Multi</source>
          <target state="translated">Ecto.Multi</target>
        </trans-unit>
        <trans-unit id="9907ae967fed0c4dc1e86c3721c118b3891d1fea" translate="yes" xml:space="preserve">
          <source>Ecto.MultiplePrimaryKeyError</source>
          <target state="translated">Ecto.MultiplePrimaryKeyError</target>
        </trans-unit>
        <trans-unit id="c1f9b9fe432a00f35560ba356a40f39920f1f051" translate="yes" xml:space="preserve">
          <source>Ecto.MultiplePrimaryKeyError &lt;small&gt;exception&lt;/small&gt;</source>
          <target state="translated">Ecto.MultiplePrimaryKeyError &lt;small&gt;예외&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="24182395079f3e39b19794e38a815c33b9b1dfef" translate="yes" xml:space="preserve">
          <source>Ecto.MultipleResultsError</source>
          <target state="translated">Ecto.MultipleResultsError</target>
        </trans-unit>
        <trans-unit id="7a94e3e2049d8814ddba5b9ced7f31db2e7e29c7" translate="yes" xml:space="preserve">
          <source>Ecto.MultipleResultsError &lt;small&gt;exception&lt;/small&gt;</source>
          <target state="translated">Ecto.MultipleResultsError &lt;small&gt;예외&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="b4b837c1b562905d62ed1b14e00149c2ac6f6807" translate="yes" xml:space="preserve">
          <source>Ecto.NoPrimaryKeyFieldError</source>
          <target state="translated">Ecto.NoPrimaryKeyFieldError</target>
        </trans-unit>
        <trans-unit id="d7ea505a6cd593eabd8c281c2d19d2e9112b9283" translate="yes" xml:space="preserve">
          <source>Ecto.NoPrimaryKeyFieldError &lt;small&gt;exception&lt;/small&gt;</source>
          <target state="translated">Ecto.NoPrimaryKeyFieldError &lt;small&gt;예외&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="5a80b5c4c8ef26db11186fd6e9a5e8f2d97f9f5b" translate="yes" xml:space="preserve">
          <source>Ecto.NoPrimaryKeyValueError</source>
          <target state="translated">Ecto.NoPrimaryKeyValueError</target>
        </trans-unit>
        <trans-unit id="0338e60f705ec07827b6de702273e130cc6ecba3" translate="yes" xml:space="preserve">
          <source>Ecto.NoPrimaryKeyValueError &lt;small&gt;exception&lt;/small&gt;</source>
          <target state="translated">Ecto.NoPrimaryKeyValueError &lt;small&gt;예외&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="67d9f373ca10f601f6578faac7affe911846f2c7" translate="yes" xml:space="preserve">
          <source>Ecto.NoResultsError</source>
          <target state="translated">Ecto.NoResultsError</target>
        </trans-unit>
        <trans-unit id="3b3df04e61c31360e8b11f8666b9fe1d610f05b1" translate="yes" xml:space="preserve">
          <source>Ecto.NoResultsError &lt;small&gt;exception&lt;/small&gt;</source>
          <target state="translated">Ecto.NoResultsError &lt;small&gt;예외&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="9c2609bbb3bacd4e67c3f9412afeeeadf7ac8e15" translate="yes" xml:space="preserve">
          <source>Ecto.Query</source>
          <target state="translated">Ecto.Query</target>
        </trans-unit>
        <trans-unit id="c13b3224c69630c615aec89551d2087bc042356a" translate="yes" xml:space="preserve">
          <source>Ecto.Query metadata fields (stored in cache)</source>
          <target state="translated">Ecto. 쿼리 메타 데이터 필드 (캐시에 저장 됨)</target>
        </trans-unit>
        <trans-unit id="541f8c403ffae2f4def036ce1baec276f67f4d63" translate="yes" xml:space="preserve">
          <source>Ecto.Query.API</source>
          <target state="translated">Ecto.Query.API</target>
        </trans-unit>
        <trans-unit id="3bbd7e221f68e1527e309cad7aba8114992aab8d" translate="yes" xml:space="preserve">
          <source>Ecto.Query.CastError</source>
          <target state="translated">Ecto.Query.CastError</target>
        </trans-unit>
        <trans-unit id="60b00c79bb2a8de43e5fae787ea603d53a3c8a03" translate="yes" xml:space="preserve">
          <source>Ecto.Query.CastError &lt;small&gt;exception&lt;/small&gt;</source>
          <target state="translated">Ecto.Query.CastError &lt;small&gt;예외&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="322683d4c482d9d4887697a585690a94b1c37b60" translate="yes" xml:space="preserve">
          <source>Ecto.Query.CompileError</source>
          <target state="translated">Ecto.Query.CompileError</target>
        </trans-unit>
        <trans-unit id="f6bb3386062941386362beaf0414a6747bab26f7" translate="yes" xml:space="preserve">
          <source>Ecto.Query.CompileError &lt;small&gt;exception&lt;/small&gt;</source>
          <target state="translated">Ecto.Query.CompileError &lt;small&gt;예외&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="7dafa0a51a47382e1e63f70ed8f204dca6da2b81" translate="yes" xml:space="preserve">
          <source>Ecto.Query.WindowAPI</source>
          <target state="translated">Ecto.Query.WindowAPI</target>
        </trans-unit>
        <trans-unit id="bc2486ab3f1e159284df09db70205a20ecc2201b" translate="yes" xml:space="preserve">
          <source>Ecto.QueryError</source>
          <target state="translated">Ecto.QueryError</target>
        </trans-unit>
        <trans-unit id="4c241d42a8511f3b16e8e651c93c41a6e57fd732" translate="yes" xml:space="preserve">
          <source>Ecto.QueryError &lt;small&gt;exception&lt;/small&gt;</source>
          <target state="translated">Ecto.QueryError &lt;small&gt;예외&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="8bd6a5e6bbbba374ec54882523a3dd6aa01f6bf0" translate="yes" xml:space="preserve">
          <source>Ecto.Queryable</source>
          <target state="translated">Ecto.Queryable</target>
        </trans-unit>
        <trans-unit id="5f5fb9bbe4d236231c4e0c9a1f430c532e1b61df" translate="yes" xml:space="preserve">
          <source>Ecto.Queryable &lt;small&gt;protocol&lt;/small&gt;</source>
          <target state="translated">엑서 터블 쿼리 가능 &lt;small&gt;프로토콜&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="23d0b05d82025970e8643b6c2b44b5c9cc5422bf" translate="yes" xml:space="preserve">
          <source>Ecto.Queryable.t (0)</source>
          <target state="translated">Ecto.Queryable.t (0)</target>
        </trans-unit>
        <trans-unit id="2c66da9b2fb68c8d72ed4f1fdd408f25acf7b28f" translate="yes" xml:space="preserve">
          <source>Ecto.Queryable.to_query (1)</source>
          <target state="translated">Ecto.Queryable.to_query (1)</target>
        </trans-unit>
        <trans-unit id="b2b785210b6db93332cdd4d8ac8b14e9a6c8f2ec" translate="yes" xml:space="preserve">
          <source>Ecto.Repo</source>
          <target state="translated">Ecto.Repo</target>
        </trans-unit>
        <trans-unit id="abe003d38251fd11493b7aebc84a41065c8194a8" translate="yes" xml:space="preserve">
          <source>Ecto.Repo &lt;small&gt;behaviour&lt;/small&gt;</source>
          <target state="translated">엑토 레포 &lt;small&gt;행동&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="1c38674c5108afb7eaab34bd7a717b13c34f6ea4" translate="yes" xml:space="preserve">
          <source>Ecto.Schema</source>
          <target state="translated">Ecto.Schema</target>
        </trans-unit>
        <trans-unit id="7213ca12b7254752de375b48ed69b6ac5c7591bd" translate="yes" xml:space="preserve">
          <source>Ecto.Schema metadata fields</source>
          <target state="translated">Ecto. 스키마 메타 데이터 필드</target>
        </trans-unit>
        <trans-unit id="9a7f68db592f84a9943fcb5b898c5e74891071ee" translate="yes" xml:space="preserve">
          <source>Ecto.Schema.Metadata</source>
          <target state="translated">Ecto.Schema.Metadata</target>
        </trans-unit>
        <trans-unit id="5755ba5b43e2e121bb26c6314858c4dc73dcc16c" translate="yes" xml:space="preserve">
          <source>Ecto.StaleEntryError</source>
          <target state="translated">Ecto.StaleEntryError</target>
        </trans-unit>
        <trans-unit id="d751e1a6e5e77ee622ddb5ffa9aab3299c04d4ac" translate="yes" xml:space="preserve">
          <source>Ecto.StaleEntryError &lt;small&gt;exception&lt;/small&gt;</source>
          <target state="translated">Ecto.StaleEntryError &lt;small&gt;예외&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="ee0b6d1251bf780cf3082c668fa6afbd815e531c" translate="yes" xml:space="preserve">
          <source>Ecto.SubQuery</source>
          <target state="translated">Ecto.SubQuery</target>
        </trans-unit>
        <trans-unit id="5c5767f0467eff752742c91059c0f52a0d6da85b" translate="yes" xml:space="preserve">
          <source>Ecto.SubQueryError</source>
          <target state="translated">Ecto.SubQueryError</target>
        </trans-unit>
        <trans-unit id="af82c0bc574ed28a1bae0825f4ff83faf8642aa4" translate="yes" xml:space="preserve">
          <source>Ecto.SubQueryError &lt;small&gt;exception&lt;/small&gt;</source>
          <target state="translated">Ecto.SubQueryError &lt;small&gt;예외&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="bb89049cf6c1b37baa9267def3cd2d5e6e580a10" translate="yes" xml:space="preserve">
          <source>Ecto.Type</source>
          <target state="translated">Ecto.Type</target>
        </trans-unit>
        <trans-unit id="fd40802d5250133cf255ced53966159d4b5335d7" translate="yes" xml:space="preserve">
          <source>Ecto.Type &lt;small&gt;behaviour&lt;/small&gt;</source>
          <target state="translated">Ecto.Type &lt;small&gt;동작&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="7e1d464328ab2db0790a29e4a5a61c2b51b36dc9" translate="yes" xml:space="preserve">
          <source>Ecto.UUID</source>
          <target state="translated">Ecto.UUID</target>
        </trans-unit>
        <trans-unit id="6bddcb552c6a1068cf1e007274938eab003f3107" translate="yes" xml:space="preserve">
          <source>Elixir type</source>
          <target state="translated">엘릭서 타입</target>
        </trans-unit>
        <trans-unit id="2f0de64ee8f6d9722cf5b6928af715bb95ebc664" translate="yes" xml:space="preserve">
          <source>Embedded schemas are defined similarly to source-based schemas. For example, you can use an embedded schema to represent your UI, mapping and validating its inputs, and then you convert such embedded schema to other schemas that are persisted to the database:</source>
          <target state="translated">임베디드 스키마는 소스 기반 스키마와 유사하게 정의됩니다. 예를 들어, 임베디드 스키마를 사용하여 UI를 표시하고 해당 입력을 맵핑하고 유효성 검증 한 후 해당 임베디드 스키마를 데이터베이스에 지속되는 다른 스키마로 변환 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d321b43810ec712e82ac71b26aa2669c35cc9ab5" translate="yes" xml:space="preserve">
          <source>Embedded schemas by default set the primary key type to &lt;code&gt;:binary_id&lt;/code&gt; but such can be configured with the &lt;code&gt;@primary_key&lt;/code&gt; attribute.</source>
          <target state="translated">기본적으로 임베드 된 스키마는 기본 키 유형을 &lt;code&gt;:binary_id&lt;/code&gt; 로 설정하지만 &lt;code&gt;@primary_key&lt;/code&gt; 속성 으로 구성 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="a74c4dff63d6eb182129f486224163ded7dd1010" translate="yes" xml:space="preserve">
          <source>Embeds</source>
          <target state="translated">Embeds</target>
        </trans-unit>
        <trans-unit id="15ec2a27c2b613ef9d1246405878528dbe70f066" translate="yes" xml:space="preserve">
          <source>Empty values</source>
          <target state="translated">빈 값</target>
        </trans-unit>
        <trans-unit id="e12c4bc51c7f80baf2d58cd60b0b72befe9d7fc3" translate="yes" xml:space="preserve">
          <source>Emulates the client closing the channel</source>
          <target state="translated">채널을 닫는 클라이언트를 에뮬레이트합니다</target>
        </trans-unit>
        <trans-unit id="0a0d1d460ed7ae24bb26447eb441939d7594f965" translate="yes" xml:space="preserve">
          <source>Emulates the client closing the channel.</source>
          <target state="translated">채널을 닫는 클라이언트를 에뮬레이트합니다.</target>
        </trans-unit>
        <trans-unit id="ed1383e73a934ae5dd38c4adeabafed7e4cdc135" translate="yes" xml:space="preserve">
          <source>Emulates the client leaving the channel</source>
          <target state="translated">채널을 떠나는 클라이언트를 에뮬레이트합니다</target>
        </trans-unit>
        <trans-unit id="17db6b3bc54f57ff281b3281cff48c1f91f0d117" translate="yes" xml:space="preserve">
          <source>Emulates the client leaving the channel.</source>
          <target state="translated">채널을 떠나는 클라이언트를 에뮬레이트합니다.</target>
        </trans-unit>
        <trans-unit id="4833d68fa15ee9411ff3f9f19c84f736625b93d0" translate="yes" xml:space="preserve">
          <source>Enables CSRF protection</source>
          <target state="translated">CSRF 보호 가능</target>
        </trans-unit>
        <trans-unit id="840448d9ff6144dc12b1d62bf7566dd85976712b" translate="yes" xml:space="preserve">
          <source>Enables CSRF protection.</source>
          <target state="translated">CSRF 보호를 활성화합니다.</target>
        </trans-unit>
        <trans-unit id="4439d359c8275177c11416f7d623055571b3b559" translate="yes" xml:space="preserve">
          <source>Encodes &lt;a href=&quot;phoenix.socket.message&quot;&gt;&lt;code&gt;Phoenix.Socket.Message&lt;/code&gt;&lt;/a&gt; struct to transport representation</source>
          <target state="translated">&lt;a href=&quot;phoenix.socket.message&quot;&gt; &lt;code&gt;Phoenix.Socket.Message&lt;/code&gt; &lt;/a&gt; 구조체를 인코딩 하여 표현을 전송합니다.</target>
        </trans-unit>
        <trans-unit id="4136cdced053cd2d3ad4a24cfaebe880c4880600" translate="yes" xml:space="preserve">
          <source>Encodes data and signs it resulting in a token you can send to clients</source>
          <target state="translated">데이터를 인코딩하고 서명하여 고객에게 보낼 수있는 토큰을 만듭니다.</target>
        </trans-unit>
        <trans-unit id="5bd32fbf8fb4988c6f06bf34be67709564d0ac19" translate="yes" xml:space="preserve">
          <source>Encodes data and signs it resulting in a token you can send to clients.</source>
          <target state="translated">데이터를 인코딩하고 서명하여 클라이언트에게 보낼 수있는 토큰을 만듭니다.</target>
        </trans-unit>
        <trans-unit id="fc00694b284fbf0ca6ed4b59333c21bf7da11346" translate="yes" xml:space="preserve">
          <source>Encodes the HTML templates to iodata</source>
          <target state="translated">HTML 템플릿을 iodata로 인코딩</target>
        </trans-unit>
        <trans-unit id="bfb6909ba137b13bf90db64457d8678c524bc153" translate="yes" xml:space="preserve">
          <source>Encodes the HTML templates to iodata.</source>
          <target state="translated">HTML 템플릿을 iodata로 인코딩합니다.</target>
        </trans-unit>
        <trans-unit id="bfa7ce5698a8c9a272f9b42da04c2bba3f9d1ada" translate="yes" xml:space="preserve">
          <source>Encodes the given cookies as expected in a response header</source>
          <target state="translated">응답 헤더에 예상대로 주어진 쿠키를 인코딩합니다</target>
        </trans-unit>
        <trans-unit id="f48a0503bd24012813e0aede68caa5bd3d5aa5e1" translate="yes" xml:space="preserve">
          <source>Encodes the given cookies as expected in a response header.</source>
          <target state="translated">응답 헤더에 예상대로 주어진 쿠키를 인코딩합니다.</target>
        </trans-unit>
        <trans-unit id="cb350517064b72d7a25e5f65ef89d41643ca3680" translate="yes" xml:space="preserve">
          <source>Encodes the given map or list of tuples</source>
          <target state="translated">주어진 맵 또는 튜플 목록을 인코딩합니다.</target>
        </trans-unit>
        <trans-unit id="c1ab5b445561e7ceefe285404758fbc9608784a0" translate="yes" xml:space="preserve">
          <source>Encodes the given map or list of tuples.</source>
          <target state="translated">주어진 맵 또는 튜플 목록을 인코딩합니다.</target>
        </trans-unit>
        <trans-unit id="21b846476300f853d85d13d5947f9d2d00aa2516" translate="yes" xml:space="preserve">
          <source>Encoding and decoding</source>
          <target state="translated">인코딩 및 디코딩</target>
        </trans-unit>
        <trans-unit id="a020f6241ab7166f95774e91599ed46cf2bafaa1" translate="yes" xml:space="preserve">
          <source>Encoding keyword lists preserves the order of the fields:</source>
          <target state="translated">키워드 목록 인코딩은 필드 순서를 유지합니다.</target>
        </trans-unit>
        <trans-unit id="7a2e6e7d7f545bf8d74f9cf21ea1d5f909b9251c" translate="yes" xml:space="preserve">
          <source>Encoding named lists:</source>
          <target state="translated">명명 된 목록 인코딩 :</target>
        </trans-unit>
        <trans-unit id="506c5c945e0ce764f280c5d79fc55cd83adbe7a0" translate="yes" xml:space="preserve">
          <source>Encoding nested structures:</source>
          <target state="translated">중첩 구조 인코딩 :</target>
        </trans-unit>
        <trans-unit id="ec278d1a15f13618c39a6bd06f27ddc94e905d46" translate="yes" xml:space="preserve">
          <source>Endpoint API</source>
          <target state="translated">엔드 포인트 API</target>
        </trans-unit>
        <trans-unit id="bf921ae468046a48c903c965f5551969f48378ce" translate="yes" xml:space="preserve">
          <source>Endpoint configuration</source>
          <target state="translated">엔드 포인트 구성</target>
        </trans-unit>
        <trans-unit id="ee8e5c078cab8ccf1fa5878d9e0a129082bd3e77" translate="yes" xml:space="preserve">
          <source>Endpoint configuration is split into two categories. Compile-time configuration means the configuration is read during compilation and changing it at runtime has no effect. The compile-time configuration is mostly related to error handling and instrumentation.</source>
          <target state="translated">엔드 포인트 구성은 두 가지 범주로 나뉩니다. 컴파일 타임 구성은 컴파일 중에 구성을 읽고 런타임에 구성을 변경해도 아무런 영향이 없음을 의미합니다. 컴파일 타임 구성은 주로 오류 처리 및 계측과 관련이 있습니다.</target>
        </trans-unit>
        <trans-unit id="86c04bf06c2268868838496ad24090854ec6e5c4" translate="yes" xml:space="preserve">
          <source>Endpoint testing</source>
          <target state="translated">엔드 포인트 테스트</target>
        </trans-unit>
        <trans-unit id="b71c52711a24936e87649f5f6c786f704fc55482" translate="yes" xml:space="preserve">
          <source>Endpoints</source>
          <target state="translated">Endpoints</target>
        </trans-unit>
        <trans-unit id="48909b7ad855199bfe59cea5c9a40d133ce3f9b8" translate="yes" xml:space="preserve">
          <source>Endpoints must be explicitly started as part of your application supervision tree. Endpoints are added by default to the supervision tree in generated applications. Endpoints can be added to the supervision tree as follows:</source>
          <target state="translated">엔드 포인트는 애플리케이션 감독 트리의 일부로 명시 적으로 시작해야합니다. 엔드 포인트는 기본적으로 생성 된 애플리케이션의 감독 트리에 추가됩니다. 다음과 같이 엔드 포인트를 감독 트리에 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="83aa16682d0c2ba817fe74261af7a04ddcc5cc37" translate="yes" xml:space="preserve">
          <source>Enforce UTF-8</source>
          <target state="translated">UTF-8 시행</target>
        </trans-unit>
        <trans-unit id="c1849eb0be9af6564e6d0e3b62d673d25b59cf17" translate="yes" xml:space="preserve">
          <source>Engines must implement the &lt;code&gt;compile/2&lt;/code&gt; function, that receives the template file and the template name and outputs the template quoted expression:</source>
          <target state="translated">엔진은 템플릿 파일과 템플릿 이름을 받아서 템플릿 인용 표현식을 출력하는 &lt;code&gt;compile/2&lt;/code&gt; 함수를 구현해야합니다 .</target>
        </trans-unit>
        <trans-unit id="196d7b3309d1e5eb9850884afec4c4bae3450d0c" translate="yes" xml:space="preserve">
          <source>Ensure all applications necessary to run the adapter are started</source>
          <target state="translated">어댑터를 실행하는 데 필요한 모든 응용 프로그램이 시작되었는지 확인하십시오</target>
        </trans-unit>
        <trans-unit id="97c96b97adefd31804b306b76be9c18601ec510f" translate="yes" xml:space="preserve">
          <source>Ensure all applications necessary to run the adapter are started.</source>
          <target state="translated">어댑터를 실행하는 데 필요한 모든 응용 프로그램이 시작되었는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="6880556f20877e4f8a52af36bc2d3b199805feb2" translate="yes" xml:space="preserve">
          <source>Ensures the connection is recycled if it wasn&amp;rsquo;t already</source>
          <target state="translated">연결이 아직 재생되지 않은 경우 재활용</target>
        </trans-unit>
        <trans-unit id="0e60a03980aee027fe1691a01cc5bb11c0cbee85" translate="yes" xml:space="preserve">
          <source>Ensures the connection is recycled if it wasn&amp;rsquo;t already.</source>
          <target state="translated">연결이 아직 재생되지 않은 경우 재활용합니다.</target>
        </trans-unit>
        <trans-unit id="7f320b643659b7061b5946fbb621cc2591e2c14e" translate="yes" xml:space="preserve">
          <source>Ensures the given module is an Ecto.Repo</source>
          <target state="translated">주어진 모듈이 Ecto인지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="6c59a3a6076875ecee6278d9f31718bdc8f04fc7" translate="yes" xml:space="preserve">
          <source>Ensures the given module is an Ecto.Repo.</source>
          <target state="translated">주어진 모듈이 Ecto.Repo인지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="2ad5a4781c158db980d641100598f0a814961f62" translate="yes" xml:space="preserve">
          <source>Equivalent to multiple &lt;a href=&quot;#put_private/3&quot;&gt;&lt;code&gt;put_private/3&lt;/code&gt;&lt;/a&gt; calls.</source>
          <target state="translated">여러 &lt;a href=&quot;#put_private/3&quot;&gt; &lt;code&gt;put_private/3&lt;/code&gt; &lt;/a&gt; 호출과 동일 합니다.</target>
        </trans-unit>
        <trans-unit id="665844873eba6677ffd80e2288163b49c7de89ff" translate="yes" xml:space="preserve">
          <source>Equivalent to multiple calls to &lt;a href=&quot;#assign/3&quot;&gt;&lt;code&gt;assign/3&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#assign/3&quot;&gt; &lt;code&gt;assign/3&lt;/code&gt; 에&lt;/a&gt; 대한 여러 호출과 같습니다 .</target>
        </trans-unit>
        <trans-unit id="d371f28bfea1e852f448381bb4f0bdfccaa7149e" translate="yes" xml:space="preserve">
          <source>Equivalent to:</source>
          <target state="translated">다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="73631d7f0356fdbdeaa36f8e5dbad89c6aa15dc4" translate="yes" xml:space="preserve">
          <source>Error handling</source>
          <target state="translated">오류 처리</target>
        </trans-unit>
        <trans-unit id="96b4673ef94aee0279f00bdec8bef7af091ed539" translate="yes" xml:space="preserve">
          <source>Error raised when CSRF token is invalid.</source>
          <target state="translated">CSRF 토큰이 유효하지 않은 경우 오류가 발생했습니다.</target>
        </trans-unit>
        <trans-unit id="cd4dd7806db221ae8f85315297f1933628bac6af" translate="yes" xml:space="preserve">
          <source>Error raised when no response is sent in a request</source>
          <target state="translated">요청에 응답이 없을 때 발생하는 오류</target>
        </trans-unit>
        <trans-unit id="80aac7a600595cc614c5a8707716e2680a856d60" translate="yes" xml:space="preserve">
          <source>Error raised when non-XHR requests are used for Javascript responses.</source>
          <target state="translated">XHR이 아닌 요청이 Javascript 응답에 사용될 때 오류가 발생했습니다.</target>
        </trans-unit>
        <trans-unit id="4fd4c12633060915842a7adbf471e8f2c4de38a5" translate="yes" xml:space="preserve">
          <source>Error raised when the cookie exceeds the maximum size of 4096 bytes.</source>
          <target state="translated">쿠키가 최대 크기 인 4096 바이트를 초과하면 오류가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="d0075b7b1699d63ab98e1352564607df567a7b11" translate="yes" xml:space="preserve">
          <source>Error raised when the request body cannot be parsed.</source>
          <target state="translated">요청 본문을 구문 분석 할 수없는 경우 오류가 발생했습니다.</target>
        </trans-unit>
        <trans-unit id="c83423323bd0f9e7dca7dc133f2e9d8c07a67c72" translate="yes" xml:space="preserve">
          <source>Error raised when the request body is malformed.</source>
          <target state="translated">요청 본문이 잘못된 경우 오류가 발생했습니다.</target>
        </trans-unit>
        <trans-unit id="355600e5fa5b646a0b7fd10a605ecbb4bd27c88c" translate="yes" xml:space="preserve">
          <source>Error raised when the request is too large.</source>
          <target state="translated">요청이 너무 클 때 오류가 발생했습니다.</target>
        </trans-unit>
        <trans-unit id="6e12f9a35ca688371e35697f765ed55461d289eb" translate="yes" xml:space="preserve">
          <source>Error raised when trying to modify or send an already sent response</source>
          <target state="translated">이미 보낸 응답을 수정하거나 보내려고 할 때 발생하는 오류</target>
        </trans-unit>
        <trans-unit id="296513012a971b48d8b833aad634bbe05b65f96e" translate="yes" xml:space="preserve">
          <source>Error raised when trying to send a header that has errors, for example:</source>
          <target state="translated">오류가있는 헤더를 보내려고하면 오류가 발생합니다 (예 :</target>
        </trans-unit>
        <trans-unit id="777544a1e5e3a2890c9d11e0670e4f90afe4ee49" translate="yes" xml:space="preserve">
          <source>Escapes the given HTML to iodata</source>
          <target state="translated">주어진 HTML을 iodata로 이스케이프 처리</target>
        </trans-unit>
        <trans-unit id="55a6457b3b6b83f90cbc23a5b6f6ef249a6e461d" translate="yes" xml:space="preserve">
          <source>Escapes the given HTML to iodata.</source>
          <target state="translated">주어진 HTML을 iodata로 이스케이프합니다.</target>
        </trans-unit>
        <trans-unit id="d428b221d3f388b6985a15759340115a82a01a85" translate="yes" xml:space="preserve">
          <source>Escapes the given HTML to string</source>
          <target state="translated">주어진 HTML을 문자열로 이스케이프</target>
        </trans-unit>
        <trans-unit id="9aae0e2d943bc79363acc16d6ad4f9539adf131a" translate="yes" xml:space="preserve">
          <source>Escapes the given HTML to string.</source>
          <target state="translated">주어진 HTML을 문자열로 이스케이프합니다.</target>
        </trans-unit>
        <trans-unit id="a43c02952028f58987da67d94d91c06959d88ae7" translate="yes" xml:space="preserve">
          <source>Establishing the socket connection</source>
          <target state="translated">소켓 연결 설정</target>
        </trans-unit>
        <trans-unit id="b0a62606f152b68877966f1c848b191cb7d5bb8c" translate="yes" xml:space="preserve">
          <source>Even though 404 has been overridden, the &lt;code&gt;:not_found&lt;/code&gt; atom can still be used to set the status to 404 as well as the new atom &lt;code&gt;:actually_this_was_found&lt;/code&gt; inflected from the reason phrase &amp;ldquo;Actually This Was Found&amp;rdquo;.</source>
          <target state="translated">404가 재정의 된 경우에도 &lt;code&gt;:not_found&lt;/code&gt; 원자를 사용하여 상태를 404로 설정하고 새 원자 &lt;code&gt;:actually_this_was_found&lt;/code&gt; 를 &amp;ldquo;Actually This Was Found&amp;rdquo;라는 이유 문구에서 그대로 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ab36676f1a0bc49dcaa9c690d2a0dbaa36bbae83" translate="yes" xml:space="preserve">
          <source>Every occurence of the &lt;code&gt;?&lt;/code&gt; character will be interpreted as a place for additional argument. If the literal character &lt;code&gt;?&lt;/code&gt; is required, it can be escaped with &lt;code&gt;\\?&lt;/code&gt; (one escape for strings, another for fragment).</source>
          <target state="translated">의 모든 발생 &lt;code&gt;?&lt;/code&gt; 캐릭터는 추가 논쟁의 장소로 해석됩니다. 문자 그대로 문자 &lt;code&gt;?&lt;/code&gt; &lt;code&gt;\\?&lt;/code&gt; 로 이스케이프 할 수 있습니까? (하나는 문자열, 다른 하나는 조각)를 이스케이프합니다.</target>
        </trans-unit>
        <trans-unit id="06148d94ade3c0c8e812063e3f93749008214d86" translate="yes" xml:space="preserve">
          <source>Every time &lt;a href=&quot;#pipe_through/1&quot;&gt;&lt;code&gt;pipe_through/1&lt;/code&gt;&lt;/a&gt; is called, the new pipelines are appended to the ones previously given.</source>
          <target state="translated">&lt;a href=&quot;#pipe_through/1&quot;&gt; &lt;code&gt;pipe_through/1&lt;/code&gt; &lt;/a&gt; 이 호출 될 때마다 새 파이프 라인이 이전에 제공된 파이프 라인에 추가됩니다.</target>
        </trans-unit>
        <trans-unit id="0e8f95beda0ca71a4e23af9a8fcd9870cd58bde0" translate="yes" xml:space="preserve">
          <source>Every time the &lt;code&gt;MyApp.Address.changeset/2&lt;/code&gt; function is invoked, it must return a changeset. This changeset will be applied to your Repo with the proper action accordingly.</source>
          <target state="translated">&lt;code&gt;MyApp.Address.changeset/2&lt;/code&gt; 함수가 호출 될 때마다 변경 세트를 리턴해야합니다. 이 변경 세트는 적절한 조치를 취하여 Repo에 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="0635cb9ca58a4094467b83d74344825171cb1066" translate="yes" xml:space="preserve">
          <source>Every time you join a channel, you need to choose which particular topic you want to listen to. The topic is just an identifier, but by convention it is often made of two parts: &lt;code&gt;&quot;topic:subtopic&quot;&lt;/code&gt;. Using the &lt;code&gt;&quot;topic:subtopic&quot;&lt;/code&gt; approach pairs nicely with the &lt;a href=&quot;phoenix.socket#channel/2&quot;&gt;&lt;code&gt;Phoenix.Socket.channel/2&lt;/code&gt;&lt;/a&gt; allowing you to match on all topics starting with a given prefix:</source>
          <target state="translated">채널에 참여할 때마다 듣고 싶은 특정 주제를 선택해야합니다. 주제는 식별자 일 뿐이지 만 일반적으로 &lt;code&gt;&quot;topic:subtopic&quot;&lt;/code&gt; 의 두 부분으로 구성 됩니다. 사용 &lt;code&gt;&quot;topic:subtopic&quot;&lt;/code&gt; 접근 방식 쌍을 멋지게로 &lt;a href=&quot;phoenix.socket#channel/2&quot;&gt; &lt;code&gt;Phoenix.Socket.channel/2&lt;/code&gt; 가&lt;/a&gt; 주어진 접두사로 시작하는 모든 주제에 맞게 수 :</target>
        </trans-unit>
        <trans-unit id="0f01ed56a1e32a05e5ef96e4d779f34784af9a96" translate="yes" xml:space="preserve">
          <source>Example</source>
          <target state="translated">Example</target>
        </trans-unit>
        <trans-unit id="654d7a479004b2b26e7de7b5ed9cd79a331ded80" translate="yes" xml:space="preserve">
          <source>Example Usage</source>
          <target state="translated">사용법 예</target>
        </trans-unit>
        <trans-unit id="5d036abf17a95029249be5aac0478db70ae0589a" translate="yes" xml:space="preserve">
          <source>Example of generated files:</source>
          <target state="translated">생성 된 파일의 예 :</target>
        </trans-unit>
        <trans-unit id="f6ebfe315ec41fe5880d8cb59f91359c8d74ad8b" translate="yes" xml:space="preserve">
          <source>Example: Adding a comment to a post</source>
          <target state="translated">예 : 게시물에 댓글 추가</target>
        </trans-unit>
        <trans-unit id="09f5a191bd1aa3c4c2a2bf0180871d036a7576ef" translate="yes" xml:space="preserve">
          <source>Example: Adding tags to a post</source>
          <target state="translated">예 : 게시물에 태그 추가</target>
        </trans-unit>
        <trans-unit id="eb01bf04c9a0e8a71c45816513df424f1c7ffedb" translate="yes" xml:space="preserve">
          <source>Examples</source>
          <target state="translated">Examples</target>
        </trans-unit>
        <trans-unit id="d566c7c0b5a5e7655a937e7a2e0f690197fca27b" translate="yes" xml:space="preserve">
          <source>Examples and detailed documentation for each of those are available in the &lt;a href=&quot;ecto.query&quot;&gt;&lt;code&gt;Ecto.Query&lt;/code&gt;&lt;/a&gt; module. Functions supported in queries are listed in &lt;a href=&quot;ecto.query.api&quot;&gt;&lt;code&gt;Ecto.Query.API&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;ecto.query&quot;&gt; &lt;code&gt;Ecto.Query&lt;/code&gt; &lt;/a&gt; 모듈 에서 각각에 대한 예제와 자세한 문서를 볼 수 있습니다 . 쿼리에서 지원되는 함수는 &lt;a href=&quot;ecto.query.api&quot;&gt; &lt;code&gt;Ecto.Query.API&lt;/code&gt; 에&lt;/a&gt; 나열되어 있습니다 .</target>
        </trans-unit>
        <trans-unit id="0cad0d61f681eb1c78a7b0c3f38376aef13625b3" translate="yes" xml:space="preserve">
          <source>Except expression returns only unique rows as if each query returned distinct results. This may cause performance penalty. If you need just to take the difference of multiple result sets without removing duplicate rows consider using &lt;a href=&quot;#except_all/2&quot;&gt;&lt;code&gt;except_all/2&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">표현식을 제외하고 각 쿼리가 고유 한 결과를 반환 한 것처럼 고유 한 행만 반환합니다. 성능이 저하 될 수 있습니다. 중복 행을 제거하지 않고 여러 결과 세트의 차이를 취해야하는 경우 &lt;a href=&quot;#except_all/2&quot;&gt; &lt;code&gt;except_all/2&lt;/code&gt; &lt;/a&gt; 사용을 고려하십시오 .</target>
        </trans-unit>
        <trans-unit id="c64d530f7d597c09275505d5c9c0d4f66100c4ec" translate="yes" xml:space="preserve">
          <source>Exception raised when a template cannot be found.</source>
          <target state="translated">템플릿을 찾을 수없는 경우 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="4bfb3c666085af96fb301a2c7a36585a27fc21e9" translate="yes" xml:space="preserve">
          <source>Exception raised when no route is found.</source>
          <target state="translated">경로를 찾지 못하면 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="cd3dfbe79fda3a9d92de67b1bd4f1dc9f60ab723" translate="yes" xml:space="preserve">
          <source>Exceptions</source>
          <target state="translated">Exceptions</target>
        </trans-unit>
        <trans-unit id="5eab5b7fe3dcdd0495cd43577dcd643b59994032" translate="yes" xml:space="preserve">
          <source>Executes a previously prepared query</source>
          <target state="translated">이전에 준비된 쿼리를 실행합니다</target>
        </trans-unit>
        <trans-unit id="d81e8be29cc9dcb9a67e4318db7a32eb8dbb7f4a" translate="yes" xml:space="preserve">
          <source>Executes a previously prepared query.</source>
          <target state="translated">이전에 준비된 쿼리를 실행합니다.</target>
        </trans-unit>
        <trans-unit id="0020e8f63dedbf5b6f61e98b567f1e0eaed81a9d" translate="yes" xml:space="preserve">
          <source>Exit reasons when stopping a channel</source>
          <target state="translated">채널을 중지 할 때 종료 이유</target>
        </trans-unit>
        <trans-unit id="1bbb977db38c4f253c4cea64b8d8a87132fc3861" translate="yes" xml:space="preserve">
          <source>Expressions example</source>
          <target state="translated">식 예</target>
        </trans-unit>
        <trans-unit id="3ee48fdc5db523f40497a2ed53ecc18e5f483f7e" translate="yes" xml:space="preserve">
          <source>Expressions examples</source>
          <target state="translated">식 예</target>
        </trans-unit>
        <trans-unit id="93374886ac70b6fcf67cc4422c2dd8f97aa99cba" translate="yes" xml:space="preserve">
          <source>External values and Elixir expressions can be injected into a query expression with &lt;code&gt;^&lt;/code&gt;:</source>
          <target state="translated">외부 값과 Elixir 표현식은 &lt;code&gt;^&lt;/code&gt; 를 사용하여 쿼리 표현식에 삽입 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="f4ee136a95ce0e250b26a775c6a4f304eb49e9fb" translate="yes" xml:space="preserve">
          <source>External vs internal data</source>
          <target state="translated">외부 데이터와 내부 데이터</target>
        </trans-unit>
        <trans-unit id="44e6613f45ea30af9e65d715a73b23d35854f291" translate="yes" xml:space="preserve">
          <source>Extracts the resource name from an alias</source>
          <target state="translated">별명에서 자원 이름을 추출합니다.</target>
        </trans-unit>
        <trans-unit id="b9a7f83f64bd9961bbffb73d9a101603d5fc422d" translate="yes" xml:space="preserve">
          <source>Extracts the resource name from an alias.</source>
          <target state="translated">별명에서 자원 이름을 추출합니다.</target>
        </trans-unit>
        <trans-unit id="f06ac061a76b4ebd4a18e48b816bda1ba2a2c77c" translate="yes" xml:space="preserve">
          <source>Extracts the set&amp;rsquo;s elements from ets into a mergeable list</source>
          <target state="translated">세트의 요소를 ets에서 병합 가능한 목록으로 추출합니다.</target>
        </trans-unit>
        <trans-unit id="3b06a14d516933eb29357d012c46511d38c29b2b" translate="yes" xml:space="preserve">
          <source>Extracts the set&amp;rsquo;s elements from ets into a mergeable list.</source>
          <target state="translated">세트의 요소를 ets에서 병합 가능한 목록으로 추출합니다.</target>
        </trans-unit>
        <trans-unit id="cd676bc8d0bb7e9a6ce51caa1747e0a5855e3e9e" translate="yes" xml:space="preserve">
          <source>Fetchable fields</source>
          <target state="translated">가져 오기 가능한 필드</target>
        </trans-unit>
        <trans-unit id="e284d893dbc745af72e66058a0b6fcabca9a0795" translate="yes" xml:space="preserve">
          <source>Fetches a change from the given changeset</source>
          <target state="translated">주어진 변경 세트에서 변경 사항을 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="df9d063215383f5d43ff6bd8f28d50b17f990df3" translate="yes" xml:space="preserve">
          <source>Fetches a change from the given changeset.</source>
          <target state="translated">주어진 변경 세트에서 변경 사항을 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="fcadf1bd67677a18f8d7729c638f9317d92bc9ab" translate="yes" xml:space="preserve">
          <source>Fetches a single result from the query</source>
          <target state="translated">쿼리에서 단일 결과를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="6b017414662aa05a81aef4aa976822b02de76df8" translate="yes" xml:space="preserve">
          <source>Fetches a single result from the query.</source>
          <target state="translated">쿼리에서 단일 결과를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="08719e85d959bee2a1ad16c16f9a61c7c481cd87" translate="yes" xml:space="preserve">
          <source>Fetches a single struct from the data store where the primary key matches the given id</source>
          <target state="translated">기본 키가 지정된 ID와 일치하는 데이터 저장소에서 단일 구조체를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="0bd85e97f228082f7016f38d8dc8a785d578d92e" translate="yes" xml:space="preserve">
          <source>Fetches a single struct from the data store where the primary key matches the given id.</source>
          <target state="translated">기본 키가 지정된 ID와 일치하는 데이터 저장소에서 단일 구조체를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="11876e00e55507ddc1f33effa9a28d5147b077b6" translate="yes" xml:space="preserve">
          <source>Fetches all entries from the data store matching the given query</source>
          <target state="translated">주어진 쿼리와 일치하는 데이터 저장소에서 모든 항목을 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="d5e5f6e8487bddc32e7596312ed1bb5dac35bd0a" translate="yes" xml:space="preserve">
          <source>Fetches all entries from the data store matching the given query.</source>
          <target state="translated">주어진 쿼리와 일치하는 데이터 저장소에서 모든 항목을 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="3163fd5d81253261c2a50f52a695753603eb3406" translate="yes" xml:space="preserve">
          <source>Fetches cookies from the request headers</source>
          <target state="translated">요청 헤더에서 쿠키를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="0fe8d31a288e49b7e5cacce395d79fb5e4019e40" translate="yes" xml:space="preserve">
          <source>Fetches cookies from the request headers.</source>
          <target state="translated">요청 헤더에서 쿠키를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="64380f0b804c02ac2677f51e3be474a17762a74b" translate="yes" xml:space="preserve">
          <source>Fetches query parameters from the query string</source>
          <target state="translated">쿼리 문자열에서 쿼리 매개 변수를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="39f3908de6fa352816ba9add06ec6c62e6ec9216" translate="yes" xml:space="preserve">
          <source>Fetches query parameters from the query string.</source>
          <target state="translated">쿼리 문자열에서 쿼리 매개 변수를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="03d548c192ce1d24785783d7cd261cf87725704e" translate="yes" xml:space="preserve">
          <source>Fetches the flash storage</source>
          <target state="translated">플래시 스토리지를 가져옵니다</target>
        </trans-unit>
        <trans-unit id="0d58eda1295145111b598fd2ee9110335edd72a9" translate="yes" xml:space="preserve">
          <source>Fetches the flash storage.</source>
          <target state="translated">플래시 스토리지를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="faff5731b0098ef6d06e0e3b0ab84e1f24767239" translate="yes" xml:space="preserve">
          <source>Fetches the given field from changes or from the data</source>
          <target state="translated">변경 또는 데이터에서 지정된 필드를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="00c47ed90a14976a1fe975f63cadebf282fe500b" translate="yes" xml:space="preserve">
          <source>Fetches the given field from changes or from the data.</source>
          <target state="translated">변경 또는 데이터에서 지정된 필드를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="274968e4217f4aac81cf7e7d092480224b04e65a" translate="yes" xml:space="preserve">
          <source>Fetches the session from the session store. Will also fetch cookies</source>
          <target state="translated">세션 저장소에서 세션을 가져옵니다. 쿠키도 가져옵니다</target>
        </trans-unit>
        <trans-unit id="0b70c54cb87368611ee01ded3dee3728ea2684c7" translate="yes" xml:space="preserve">
          <source>Fetches the session from the session store. Will also fetch cookies.</source>
          <target state="translated">세션 저장소에서 세션을 가져옵니다. 쿠키도 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="0eb0f2ebbd898fe11ee1adea5bfdeebe9c932ccf" translate="yes" xml:space="preserve">
          <source>Fetching Presence Information</source>
          <target state="translated">현재 상태 정보 가져 오기</target>
        </trans-unit>
        <trans-unit id="b7725b2aa5514d3fb80276bbee807899c2709959" translate="yes" xml:space="preserve">
          <source>Ff there is no such row, instead return default (which must be of the same type as value). Both offset and default are evaluated with respect to the current row. If omitted, offset defaults to 1 and default to null.</source>
          <target state="translated">그러한 행이 없으면 대신 기본값을 리턴하십시오 (값과 유형이 같아야 함). 오프셋과 기본값은 현재 행과 관련하여 평가됩니다. 생략하면 오프셋의 기본값은 1이고 기본값은 null입니다.</target>
        </trans-unit>
        <trans-unit id="9f345d16da1171009c2d07d7e162059e89a99f42" translate="yes" xml:space="preserve">
          <source>Fields that are not present in the schema (or &lt;code&gt;types&lt;/code&gt; map) are ignored. If any of the values has invalid type, an error is raised.</source>
          <target state="translated">스키마 (또는 &lt;code&gt;types&lt;/code&gt; 맵)에 없는 필드 는 무시됩니다. 값이 유효하지 않은 유형 인 경우 오류가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="f315ee9e3108a80c179abb06fe33569d756f7ff5" translate="yes" xml:space="preserve">
          <source>File handling</source>
          <target state="translated">파일 처리</target>
        </trans-unit>
        <trans-unit id="b563507a845353e1d9b91b6064b7fe3ba43015a7" translate="yes" xml:space="preserve">
          <source>Filtering associations</source>
          <target state="translated">필터링 연관</target>
        </trans-unit>
        <trans-unit id="7dcc155505178bbe138e3135c40148f03651670f" translate="yes" xml:space="preserve">
          <source>Filters out those present on downed replicas.</source>
          <target state="translated">다운 된 복제본에있는 항목을 필터링합니다.</target>
        </trans-unit>
        <trans-unit id="8e5a408906e0f613586519b719c8fb8988afdde0" translate="yes" xml:space="preserve">
          <source>Finally, Phoenix ships with a &lt;code&gt;mix phx.routes&lt;/code&gt; task that nicely formats all routes in a given router. We can use it to verify all routes included in the router above:</source>
          <target state="translated">마지막으로 Phoenix 는 주어진 라우터의 모든 경로를 멋지게 포맷 하는 &lt;code&gt;mix phx.routes&lt;/code&gt; 작업 과 함께 제공됩니다. 이를 사용하여 위 라우터에 포함 된 모든 경로를 확인할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ef21b0ab2a337cbb5d3cb905bb5c0c2daaee7d04" translate="yes" xml:space="preserve">
          <source>Finally, a diff of presence join and leave events will be sent to the client as they happen in real-time with the &amp;ldquo;presence_diff&amp;rdquo; event. The diff structure will be a map of &lt;code&gt;:joins&lt;/code&gt; and &lt;code&gt;:leaves&lt;/code&gt; of the form:</source>
          <target state="translated">마지막으로&amp;ldquo;presence_diff&amp;rdquo;이벤트와 함께 실시간으로 발생하는 현재 상태 참가 및 휴가 이벤트 차이가 클라이언트로 전송됩니다. diff 구조는 &lt;code&gt;:joins&lt;/code&gt; 및 &lt;code&gt;:leaves&lt;/code&gt; 형식 의 맵 이됩니다.</target>
        </trans-unit>
        <trans-unit id="8d783e0fbd65008c8d3daf828f44798d62b28819" translate="yes" xml:space="preserve">
          <source>Finally, a general &lt;code&gt;match&lt;/code&gt; function is also supported:</source>
          <target state="translated">마지막으로 일반 &lt;code&gt;match&lt;/code&gt; 기능도 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="371bdbfa9b024c89cc2bf0370822b67c2b7ebd0c" translate="yes" xml:space="preserve">
          <source>Finally, every time a message is pushed to the channel, a reference is returned. We can use this reference to assert a particular reply was sent from the server:</source>
          <target state="translated">마지막으로, 메시지가 채널로 푸시 될 때마다 참조가 리턴됩니다. 이 참조를 사용하여 서버에서 특정 응답을 보냈다고 주장 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0fba42c006127501a9d4eee7b63ae677c340c271" translate="yes" xml:space="preserve">
          <source>Finally, for the simple cases, preloading can also be done after a collection was fetched:</source>
          <target state="translated">마지막으로 간단한 경우 컬렉션을 가져온 후 사전로드를 수행 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="b9c2275b05254f6a0d55c69f791dee63e59b770f" translate="yes" xml:space="preserve">
          <source>Finally, if the values are a list or a map, we use the keys for grouping:</source>
          <target state="translated">마지막으로 값이 목록 또는 맵이면 그룹화에 키를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="be70f9966d578a92f0d14739730beade1450e72e" translate="yes" xml:space="preserve">
          <source>Finally, if you need an escape hatch, Ecto provides fragments (see &lt;a href=&quot;ecto.query.api#fragment/1&quot;&gt;&lt;code&gt;Ecto.Query.API.fragment/1&lt;/code&gt;&lt;/a&gt;) to inject SQL (and non-SQL) fragments into queries. Also, most adapters provide direct APIs for queries, like &lt;code&gt;Ecto.Adapters.SQL.query/4&lt;/code&gt;, allowing developers to completely bypass Ecto queries.</source>
          <target state="translated">마지막으로 이스케이프 해치가 필요한 경우 Ecto는 조각 ( &lt;a href=&quot;ecto.query.api#fragment/1&quot;&gt; &lt;code&gt;Ecto.Query.API.fragment/1&lt;/code&gt; &lt;/a&gt; 참조 )을 제공하여 SQL (및 비 SQL) 조각을 쿼리에 삽입합니다. 또한 대부분의 어댑터는 &lt;code&gt;Ecto.Adapters.SQL.query/4&lt;/code&gt; 와 같은 쿼리에 대한 직접 API를 제공 하므로 개발자가 Ecto 쿼리를 완전히 무시할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5211a28dd43f79dbabf7887d2a6fa7e2af5965c5" translate="yes" xml:space="preserve">
          <source>Finally, schemas can also have virtual fields by passing the &lt;code&gt;virtual: true&lt;/code&gt; option. These fields are not persisted to the database and can optionally not be type checked by declaring type &lt;code&gt;:any&lt;/code&gt;.</source>
          <target state="translated">마지막으로 스키마에는 &lt;code&gt;virtual: true&lt;/code&gt; 옵션 을 전달하여 가상 필드를 가질 수도 있습니다 . 이 필드는 데이터베이스에 유지되지 않으며 type &lt;code&gt;:any&lt;/code&gt; 를 선언하여 선택적으로 유형을 검사 할 수 없습니다 .</target>
        </trans-unit>
        <trans-unit id="500092afa233e9b7ad3757e9635614d60d69c53f" translate="yes" xml:space="preserve">
          <source>First, let&amp;rsquo;s fetch the post with all existing comments:</source>
          <target state="translated">먼저 기존의 모든 의견이 포함 된 게시물을 가져 오겠습니다.</target>
        </trans-unit>
        <trans-unit id="db0a693e52d129229b723bca090f9d3722799b28" translate="yes" xml:space="preserve">
          <source>Floats: &lt;code&gt;1.0&lt;/code&gt;, &lt;code&gt;2.0&lt;/code&gt;, &lt;code&gt;3.0&lt;/code&gt;</source>
          <target state="translated">수레 : &lt;code&gt;1.0&lt;/code&gt; , &lt;code&gt;2.0&lt;/code&gt; , &lt;code&gt;3.0&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ad82d88c263f197ac3ab09327378400e810ffc46" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;has_many :through&lt;/code&gt; - it behaves similarly to a regular &lt;code&gt;has_many&lt;/code&gt; but note that the IDs received are the ones from the closest parent and not the furthest one. Imagine for example a post has many comments and each comment has an author. Therefore, a post may have many comments_authors, written as &lt;code&gt;has_many :comments_authors, through: [:comments, :author]&lt;/code&gt;. When preloading authors with a custom function via &lt;code&gt;:comments_authors&lt;/code&gt;, the function will receive the IDs of the comments and not of the posts. That&amp;rsquo;s because through associations are still loaded step by step</source>
          <target state="translated">들어 &lt;code&gt;has_many :through&lt;/code&gt; - 그것은 정기적와 유사하게 작동 &lt;code&gt;has_many&lt;/code&gt; 받은 ID가 가장 가까운 부모로부터 사람이 아니라 멀리 한 것을하지만 참고. 예를 들어 게시물에 많은 댓글이 있고 각 댓글에 작성자가 있다고 가정하십시오. 따라서 게시물에는 &lt;code&gt;has_many :comments_authors, through: [:comments, :author]&lt;/code&gt; 로 작성된 여러 개의 comment_authors 가있을 수 있습니다 . &lt;code&gt;:comments_authors&lt;/code&gt; 를 통해 사용자 정의 함수를 사용하여 작성자를 사전로드 하면 함수는 게시물이 아닌 주석의 ID를 수신합니다. 연결을 통해 단계별로 계속로드되기 때문입니다.</target>
        </trans-unit>
        <trans-unit id="63600b6a2d1ec5af0fc9e5cad2bc261fd1af2888" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;has_many&lt;/code&gt; and &lt;code&gt;belongs_to&lt;/code&gt; - the function receives the IDs of the parent association and it must return a list of maps or structs with the associated entries. The associated map/struct must contain the &amp;ldquo;foreign_key&amp;rdquo; field. For example, if a post has many comments, when preloading the comments with a custom function, the function will receive a list of &amp;ldquo;post_ids&amp;rdquo; as argument and it must return maps or structs representing the comments. The maps/structs must include the &lt;code&gt;:post_id&lt;/code&gt; field</source>
          <target state="translated">대한 &lt;code&gt;has_many&lt;/code&gt; 와 &lt;code&gt;belongs_to&lt;/code&gt; - 함수가 부모 협회의 ID를 수신하고 관련 항목이지도 또는 구조체의 목록을 반환해야합니다. 연관된 맵 / 구조는 &quot;foreign_key&quot;필드를 포함해야합니다. 예를 들어, 게시물에 주석이 많은 경우 사용자 정의 함수를 사용하여 주석을 미리로드하면 함수는 &quot;post_ids&quot;목록을 인수로 받고 주석을 나타내는 맵 또는 구조체를 반환해야합니다. 지도 / 구조는 &lt;code&gt;:post_id&lt;/code&gt; 필드를 포함해야 합니다</target>
        </trans-unit>
        <trans-unit id="354d0273d07d15de05f231450470ee0eae6bac34" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;many_to_many&lt;/code&gt; - the function receives the IDs of the parent association and it must return a tuple with the parent id as first element and the association map or struct as second. For example, if a post has many tags, when preloading the tags with a custom function, the function will receive a list of &amp;ldquo;post_ids&amp;rdquo; as argument and it must return a tuple in the format of &lt;code&gt;{post_id, tag}&lt;/code&gt;</source>
          <target state="translated">들면 &lt;code&gt;many_to_many&lt;/code&gt; - 함수는 상위 협회의 ID를 수신하고, 우선 소자 및 제와 연관 맵 또는 구조체로서 상위 ID와 튜플을 반환해야한다. 예를 들어 게시물에 많은 태그가있는 경우 사용자 정의 함수를 사용하여 태그를 미리로드하면 함수는 &quot;post_ids&quot;목록을 인수로 받고 &lt;code&gt;{post_id, tag}&lt;/code&gt; 형식으로 튜플을 반환해야합니다.</target>
        </trans-unit>
        <trans-unit id="ab02655daa3427bb066f0ca4f1a125c696573e23" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;{:array, CustomType}&lt;/code&gt; or &lt;code&gt;{:map, CustomType}&lt;/code&gt; the returned keyword list will be erased and the default error will be shown.</source>
          <target state="translated">들어 &lt;code&gt;{:array, CustomType}&lt;/code&gt; 또는 &lt;code&gt;{:map, CustomType}&lt;/code&gt; 반환 된 키워드 목록이 삭제되고 기본 오류가 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="20523aba079cc2fef42cacf60a4081c3373e6471" translate="yes" xml:space="preserve">
          <source>For a given topic, the client may only establish a single channel subscription. When attempting to create a duplicate subscription, &lt;a href=&quot;#dispatch/3&quot;&gt;&lt;code&gt;dispatch/3&lt;/code&gt;&lt;/a&gt; will close the existing channel, log a warning, and spawn a new channel for the topic. When sending the &lt;code&gt;&quot;phx_close&quot;&lt;/code&gt; event from the closed channel, the message will contain the &lt;code&gt;ref&lt;/code&gt; the client sent when joining. This allows the client to uniquely identify &lt;code&gt;&quot;phx_close&quot;&lt;/code&gt; and &lt;code&gt;&quot;phx_error&quot;&lt;/code&gt; messages when force-closing a channel on duplicate joins.</source>
          <target state="translated">주어진 주제에 대해 클라이언트는 단일 채널 구독 만 설정할 수 있습니다. 중복 구독을 만들려고 할 때 &lt;a href=&quot;#dispatch/3&quot;&gt; &lt;code&gt;dispatch/3&lt;/code&gt; &lt;/a&gt; 는 기존 채널을 닫고 경고를 기록하며 주제에 대한 새 채널을 생성합니다. 송신 할 때 &lt;code&gt;&quot;phx_close&quot;&lt;/code&gt; 닫힌 채널에서 이벤트를 메시지가 포함됩니다 &lt;code&gt;ref&lt;/code&gt; 에 가입 할 때 클라이언트가 전송합니다. 이를 통해 클라이언트 는 중복 조인에서 채널을 강제 종료 할 때 &lt;code&gt;&quot;phx_close&quot;&lt;/code&gt; 및 &lt;code&gt;&quot;phx_error&quot;&lt;/code&gt; 메시지 를 고유하게 식별 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="092362cd5c107f7d58b5a88b716fd6f320a6243c" translate="yes" xml:space="preserve">
          <source>For a regular application:</source>
          <target state="translated">일반 신청의 경우 :</target>
        </trans-unit>
        <trans-unit id="673a530e87febb813a7a46d378a8f00c25c57993" translate="yes" xml:space="preserve">
          <source>For actual upserts, where an insert or update may happen, the situation is slightly more complex, as the database does not actually inform us if an insert or update happened. Let&amp;rsquo;s insert a post with the same title but use a query to update the body column in case of conflicts:</source>
          <target state="translated">삽입 또는 업데이트가 발생할 수있는 실제 upsert의 경우 데이터베이스가 삽입 또는 업데이트가 발생했는지 실제로 알려주지 않기 때문에 상황이 약간 더 복잡합니다. 제목이 같은 게시물을 삽입하지만 충돌이있을 경우 쿼리를 사용하여 본문 열을 업데이트하겠습니다.</target>
        </trans-unit>
        <trans-unit id="7a13facc0573c1f5cd17a8b774fa022f5c62da50" translate="yes" xml:space="preserve">
          <source>For an umbrella application:</source>
          <target state="translated">우산 용도 :</target>
        </trans-unit>
        <trans-unit id="962775a35a8e3effc603b8ed3f7045d2def77954" translate="yes" xml:space="preserve">
          <source>For associations with cardinality one, &lt;code&gt;nil&lt;/code&gt; can be used to remove the existing entry. For associations with many entries, an empty list may be given instead.</source>
          <target state="translated">카디널리티 1과의 연관의 경우 &lt;code&gt;nil&lt;/code&gt; 을 사용하여 기존 항목을 제거 할 수 있습니다. 많은 항목이있는 연결의 경우 빈 목록이 대신 제공 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0d675f9e27fb9e8e0ca2759e0f26a064b102571e" translate="yes" xml:space="preserve">
          <source>For both suites we&amp;rsquo;ve specified ceritifcate curves secp256r1, ecp384r1 and secp521r1. Since OWASP doesn&amp;rsquo;t perscribe curves we&amp;rsquo;ve based the selection on the following Mozilla recommendations: https://wiki.mozilla.org/Security/Server_Side_TLS#Cipher_names_correspondence_table</source>
          <target state="translated">두 제품군 모두 ceritifcate 곡선 인 secp256r1, ecp384r1 및 secp521r1을 지정했습니다. OWASP는 곡선을 정의하지 않으므로 다음 Mozilla 권장 사항을 기반으로 선택했습니다. https://wiki.mozilla.org/Security/Server_Side_TLS#Cipher_names_correspondence_table</target>
        </trans-unit>
        <trans-unit id="3f6bbe3b038afe3e8f9ff34c83ffef5985f40d11" translate="yes" xml:space="preserve">
          <source>For calendar types with and without microseconds, the precision is enforced when persisting to the DB. For example, casting &lt;code&gt;~T[09:00:00]&lt;/code&gt; as &lt;code&gt;:time_usec&lt;/code&gt; will succeed and result in &lt;code&gt;~T[09:00:00.000000]&lt;/code&gt;, but persisting a type without microseconds as &lt;code&gt;:time_usec&lt;/code&gt; will fail. Similarly, casting &lt;code&gt;~T[09:00:00.000000]&lt;/code&gt; as &lt;code&gt;:time&lt;/code&gt; will succeed, but persisting will not. This is the same behaviour as seen in other types, where casting has to be done explicitly and is never performed implicitly when loading from or dumping to the database.</source>
          <target state="translated">마이크로 초가 있거나없는 캘린더 유형의 경우 DB에 지속될 때 정밀도가 적용됩니다. 예를 들어, &lt;code&gt;~T[09:00:00]&lt;/code&gt; 을 &lt;code&gt;:time_usec&lt;/code&gt; 로 캐스팅 하면 &lt;code&gt;~T[09:00:00.000000]&lt;/code&gt; 으로 성공하지만 &lt;code&gt;:time_usec&lt;/code&gt; 로 마이크로 초없이 유형을 유지 하면 실패합니다. 마찬가지로 &lt;code&gt;~T[09:00:00.000000]&lt;/code&gt; 을 &lt;code&gt;:time&lt;/code&gt; 으로 캐스팅 하면 지속되지만 지속되지는 않습니다. 이는 다른 유형에서 볼 수있는 것과 같은 동작으로, 캐스팅을 명시 적으로 수행해야하며 데이터베이스에서로드하거나 덤프 할 때 암시 적으로 수행되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="2973a602c365a52563d58be264616b79cb7c18bd" translate="yes" xml:space="preserve">
          <source>For convenience, trims whitespace at the end of the token. Returns &lt;code&gt;false&lt;/code&gt; if the token is invalid.</source>
          <target state="translated">편의를 위해 토큰 끝에 공백을 제거합니다. 토큰이 유효하지 않으면 &lt;code&gt;false&lt;/code&gt; 를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="514d7ef5662d3b01249f86c0c31d4d15ac5d464f" translate="yes" xml:space="preserve">
          <source>For dynamically configuring the endpoint, such as loading data from environment variables or configuration files, Phoenix invokes the &lt;code&gt;init/2&lt;/code&gt; callback on the endpoint, passing a &lt;code&gt;:supervivsor&lt;/code&gt; atom as first argument and the endpoint configuration as second.</source>
          <target state="translated">환경 변수 또는 구성 파일에서 데이터로드와 같은 엔드 포인트를 동적으로 구성하기 위해 Phoenix는 엔드 포인트 에서 &lt;code&gt;init/2&lt;/code&gt; 콜백을 호출하여 &lt;code&gt;:supervivsor&lt;/code&gt; atom을 첫 번째 인수로, 엔드 포인트 구성을 두 번째로 전달합니다.</target>
        </trans-unit>
        <trans-unit id="83f8140a10617f209a9bbd2bf22394889c256c68" translate="yes" xml:space="preserve">
          <source>For each file under the given input path, Phoenix will generate a digest and also compress in &lt;code&gt;.gz&lt;/code&gt; format. The filename and its digest will be used to generate the cache manifest file. It also avoids duplication, checking for already digested files.</source>
          <target state="translated">지정된 입력 경로 아래의 각 파일에 대해 Phoenix는 다이제스트를 생성하고 &lt;code&gt;.gz&lt;/code&gt; 형식 으로 압축 합니다. 파일 이름과 다이제스트는 캐시 매니페스트 파일을 생성하는 데 사용됩니다. 또한 이미 다이제스트 된 파일을 검사하여 중복을 피합니다.</target>
        </trans-unit>
        <trans-unit id="447756883e51de19d636b53e26dcc7baf4d56194" translate="yes" xml:space="preserve">
          <source>For each request, Phoenix checks if any of the modules previously compiled requires recompilation via &lt;code&gt;__phoenix_recompile__?/0&lt;/code&gt; and then calls &lt;code&gt;mix compile&lt;/code&gt; for sources exclusive to the &lt;code&gt;web&lt;/code&gt; directory.</source>
          <target state="translated">각 요청에 대해 Phoenix는 이전에 컴파일 된 모듈 중 어느 것이 &lt;code&gt;__phoenix_recompile__?/0&lt;/code&gt; 통해 재 컴파일 해야하는지 확인한 다음 &lt;code&gt;web&lt;/code&gt; 디렉토리 전용 소스에 대해 &lt;code&gt;mix compile&lt;/code&gt; 을 호출합니다 .</target>
        </trans-unit>
        <trans-unit id="358da0baaab9435646b120f9050f3589abaf1432" translate="yes" xml:space="preserve">
          <source>For encoding and decoding of embeds, please read the docs for &lt;a href=&quot;#embeds_one/3&quot;&gt;&lt;code&gt;embeds_one/3&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">임베드의 인코딩 및 디코딩에 대해서는 &lt;a href=&quot;#embeds_one/3&quot;&gt; &lt;code&gt;embeds_one/3&lt;/code&gt; &lt;/a&gt; 문서를 읽으십시오 .</target>
        </trans-unit>
        <trans-unit id="f485276f616bd26adc829af0ee47c57b85d1ff61" translate="yes" xml:space="preserve">
          <source>For example, PostgreSQL will store embeds on top of JSONB columns, which means types in embedded schemas won&amp;rsquo;t go through the usual dump-&amp;gt;DB-&amp;gt;load cycle but rather encode-&amp;gt;DB-&amp;gt;decode-&amp;gt;cast. This means that, when using embedded schemas with databases like PG or MySQL, make sure all of your types can be JSON encoded/decoded correctly. Ecto provides this guarantee for all built-in types.</source>
          <target state="translated">예를 들어 PostgreSQL은 JSONB 열 위에 임베드를 저장합니다. 즉, 임베드 된 스키마의 유형은 일반적인 덤프-&amp;gt; DB-&amp;gt;로드 사이클을 거치지 않고 인 코드-&amp;gt; DB-&amp;gt; 디코딩-&amp;gt; 캐스트를 거치게됩니다. 즉, PG 또는 MySQL과 같은 데이터베이스에 포함 된 스키마를 사용할 때는 모든 유형을 JSON으로 인코딩 / 디코딩 할 수 있어야합니다. Ecto는 모든 내장 유형에 대해이 보증을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="62d7117a3b1a1721c1d5300823fd83a08ec0eb56" translate="yes" xml:space="preserve">
          <source>For example, a developer using MySQL may write:</source>
          <target state="translated">예를 들어 MySQL을 사용하는 개발자는 다음과 같이 작성할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="17b027db9ca188624206f2420c11e61eb142d7dd" translate="yes" xml:space="preserve">
          <source>For example, if &lt;code&gt;:on_conflict&lt;/code&gt; is set to &lt;code&gt;:nothing&lt;/code&gt;, Postgres will return 0 if no new entry was added while MySQL will still return the amount of entries attempted to be inserted, even if no entry was added. Even worse, if &lt;code&gt;:on_conflict&lt;/code&gt; is query, MySQL will return the number of attempted entries plus the number of entries modified by the UPDATE query.</source>
          <target state="translated">예를 들어, &lt;code&gt;:on_conflict&lt;/code&gt; 로 설정 &lt;code&gt;:nothing&lt;/code&gt; 항목을 삽입 할 시도의 MySQL은 여전히 항목이 추가되지 않은 경우에도, 금액을 반환하면서 새로운 항목이 추가되지 않은 경우, 포스트 그레스는 0을 반환합니다. 더 나쁜 것은 &lt;code&gt;:on_conflict&lt;/code&gt; 가 query 인 경우 MySQL은 시도 된 항목 수와 UPDATE 쿼리로 수정 된 항목 수를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="3ad70964b6903a03710c190caf3acb0e49049573" translate="yes" xml:space="preserve">
          <source>For example, if a plug called &lt;code&gt;my_plug&lt;/code&gt; needs to store a &lt;code&gt;:hello&lt;/code&gt; key, it would store it as &lt;code&gt;:my_plug_hello&lt;/code&gt;:</source>
          <target state="translated">예를 들어, &lt;code&gt;my_plug&lt;/code&gt; 라는 플러그 가 &lt;code&gt;:hello&lt;/code&gt; 키 를 저장 해야하는 경우 &lt;code&gt;:my_plug_hello&lt;/code&gt; 로 저장합니다 .</target>
        </trans-unit>
        <trans-unit id="c680c9e8f22ccafd93e44ffae3a885cef74b7437" translate="yes" xml:space="preserve">
          <source>For example, if some plug needs to store a &lt;code&gt;:hello&lt;/code&gt; key, it should do so as &lt;code&gt;:plug_hello&lt;/code&gt;:</source>
          <target state="translated">예를 들어, 일부 플러그가 &lt;code&gt;:hello&lt;/code&gt; 키 를 저장해야하는 경우 &lt;code&gt;:plug_hello&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="b67a51b0929c3bd20516b18e930c9d65453e2f33" translate="yes" xml:space="preserve">
          <source>For example, if you are running your application behind a proxy, the browser will send a request to the proxy with &lt;code&gt;www.example.com&lt;/code&gt; but the proxy will request you using an internal IP. In such cases, it is common for proxies to attach information such as &lt;code&gt;&quot;x-forwarded-host&quot; that contains the original
host.

This may also happen on redirects. If you have a POST request to&lt;/code&gt;foo.example.com&lt;code&gt;that redirects with status&lt;/code&gt;bar.example.com&lt;code&gt;with status 407. The token and
the server will be running on different versions.

You can pass the&lt;/code&gt;:allow_hosts&lt;code&gt;option to control any host that you may want
to allow. The values in&lt;/code&gt;:allow_hosts&lt;code&gt;may either be a full host name or a
host suffix. For example:&lt;/code&gt;[&amp;ldquo;www.example.com&amp;rdquo;, &amp;ldquo;.subdomain.example.com&amp;rdquo;]&lt;code&gt;will allow the exact host of&lt;/code&gt;&amp;rdquo;www.example.com&amp;rdquo;&lt;code&gt;and any host that ends with&lt;/code&gt;&amp;rdquo;.subdomain.example.com&amp;rdquo;&lt;code&gt;.

## Options

  *&lt;/code&gt;:session_key&lt;code&gt;- the name of the key in session to store the token under
  *&lt;/code&gt;:allow_hosts&lt;code&gt;- a list with hosts to allow on cross-host tokens
  *&lt;/code&gt;:with&lt;code&gt;- should be one of&lt;/code&gt;:exception&lt;code&gt;or&lt;/code&gt;:clear_session&lt;code&gt;. Defaults to&lt;/code&gt;:exception&lt;code&gt;.
    *&lt;/code&gt;:exception&lt;code&gt;-  for invalid requests, this plug will raise
    [&lt;/code&gt;Plug.CSRFProtection.InvalidCSRFTokenError&lt;code&gt;](Plug.CSRFProtection.InvalidCSRFTokenError.html).
    *&lt;/code&gt;:clear_session&lt;code&gt;-  for invalid requests, this plug will set an empty
    session for only this request. Also any changes to the session during this
    request will be ignored.

## Disabling

You may disable this plug by doing&lt;/code&gt;Plug.Conn.put_private(conn, :plug_skip_csrf_protection, true)&lt;code&gt;. This was made
available for disabling [&lt;/code&gt;Plug.CSRFProtection&lt;code&gt;](Plug.CSRFProtection.html#content) in tests and not for dynamically
skipping [&lt;/code&gt;Plug.CSRFProtection&lt;code&gt;](Plug.CSRFProtection.html#content) in production code. If you want specific routes to
skip [&lt;/code&gt;Plug.CSRFProtection&lt;code&gt;](Plug.CSRFProtection.html#content), then use a different stack of plugs for that route that
does not include [&lt;/code&gt;Plug.CSRFProtection`](Plug.CSRFProtection.html#content). ## Examples plug Plug.Session, &amp;hellip; plug :fetch_session plug Plug.CSRFProtection</source>
          <target state="translated">예를 들어 프록시 뒤에서 응용 프로그램을 실행하는 경우 브라우저는 &lt;code&gt;www.example.com&lt;/code&gt; 을 사용하여 프록시에 요청을 보내지 만 프록시는 내부 IP를 사용하도록 요청합니다. 이러한 경우 프록시가 &lt;code&gt;&quot;x-forwarded-host&quot; that contains the original host. This may also happen on redirects. If you have a POST request to&lt;/code&gt; 와 같은 정보를 첨부하는 것이 일반적입니다 . 리디렉션에서도 발생할 수 있습니다. &lt;code&gt;with status 407. The token and the server will be running on different versions. You can pass the&lt;/code&gt; &lt;code&gt;that redirects with status&lt;/code&gt; bar.example.com 으로 경로 재 지정 되는 foo.example.com에 대한 POST 요청이있는 경우 , 토큰과 서버는 다른 버전에서 실행됩니다. : allow_hosts &lt;code&gt;option to control any host that you may want to allow. The values in&lt;/code&gt; 전달하여 허용하려는 모든 호스트를 제어 할 수 있습니다. : allow_hosts 의 값은 &lt;code&gt;may either be a full host name or a host suffix. For example:&lt;/code&gt; [&amp;ldquo;www.example.com&amp;rdquo;,&amp;ldquo;.subdomain.example.com&amp;rdquo;] &lt;code&gt;will allow the exact host of&lt;/code&gt; &amp;rdquo;www.example.com&amp;rdquo; 의 정확한 호스트 &lt;code&gt;and any host that ends with&lt;/code&gt; &amp;rdquo;.subdomain.example.com&amp;rdquo;으로 끝나는 모든 호스트를 허용합니다 &lt;code&gt;. ## Options *&lt;/code&gt; : SESSION_KEY &lt;code&gt;- the name of the key in session to store the token under *&lt;/code&gt; : allow_hosts &lt;code&gt;- a list with hosts to allow on cross-host tokens *&lt;/code&gt; :와 &lt;code&gt;- should be one of&lt;/code&gt; : 예외 &lt;code&gt;or&lt;/code&gt; : CLEAR_SESSOIN 값 &lt;code&gt;. Defaults to&lt;/code&gt; : exception &lt;code&gt;. *&lt;/code&gt; : exception- &lt;code&gt;- for invalid requests, this plug will raise [&lt;/code&gt; Plug.CSRFProtection.InvalidCSRFTokenError &lt;code&gt;](Plug.CSRFProtection.InvalidCSRFTokenError.html). *&lt;/code&gt; : clear_session &lt;code&gt;- for invalid requests, this plug will set an empty session for only this request. Also any changes to the session during this request will be ignored. ## Disabling You may disable this plug by doing&lt;/code&gt; Plug.Conn.put_private (conn, : plug_skip_csrf_protection, true) 를 수행 하여이 플러그를 비활성화 할 수 있습니다 &lt;code&gt;. This was made available for disabling [&lt;/code&gt; Plug.CSRFProtection &lt;code&gt;](Plug.CSRFProtection.html#content) in tests and not for dynamically skipping [&lt;/code&gt; Plug.CSRFProtection &lt;code&gt;](Plug.CSRFProtection.html#content) in production code. If you want specific routes to skip [&lt;/code&gt; Plug.CSRFProtection &lt;code&gt;](Plug.CSRFProtection.html#content), then use a different stack of plugs for that route that does not include [&lt;/code&gt; 을 건너 뛰려면 해당 경로에 다른 플러그 스택을 사용하십시오.Plug.CSRFProtection`] (Plug.CSRFProtection.html # content). ## 예제 plug Plug.Session,&amp;hellip; plug : fetch_session plug Plug.CSRFProtection</target>
        </trans-unit>
        <trans-unit id="0e91726d425116538b0449faff1e3e0fef303282" translate="yes" xml:space="preserve">
          <source>For example, if you are running your application behind a proxy, the browser will send a request to the proxy with &lt;code&gt;www.example.com&lt;/code&gt; but the proxy will request you using an internal IP. In such cases, it is common for proxies to attach information such as &lt;code&gt;&quot;x-forwarded-host&quot;&lt;/code&gt; that contains the original host.</source>
          <target state="translated">예를 들어 프록시 뒤에서 응용 프로그램을 실행하는 경우 브라우저는 &lt;code&gt;www.example.com&lt;/code&gt; 을 사용하여 프록시에 요청을 보내지 만 프록시는 내부 IP를 사용하도록 요청합니다. 이러한 경우 프록시가 원래 호스트를 포함하는 &lt;code&gt;&quot;x-forwarded-host&quot;&lt;/code&gt; 와 같은 정보를 첨부하는 것이 일반적입니다 .</target>
        </trans-unit>
        <trans-unit id="f1191fda5c146bc7cb8bf9725ef9a87de1ba7566" translate="yes" xml:space="preserve">
          <source>For example, if you are using Phoenix with Gettext and you want to localize the list of months, you can pass &lt;code&gt;:options&lt;/code&gt; to the &lt;code&gt;:month&lt;/code&gt; key:</source>
          <target state="translated">예를 들어, Gettext와 함께 Phoenix를 사용하고 있고 월 목록을 현지화하려는 경우 &lt;code&gt;:options&lt;/code&gt; 를 &lt;code&gt;:month&lt;/code&gt; 키에 전달할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="f5c675e9e5c373385484112272b4a043bbd839e6" translate="yes" xml:space="preserve">
          <source>For example, if you don&amp;rsquo;t need all fields to be returned as part of a struct, you can filter it to include only certain fields by using &lt;a href=&quot;#struct/2&quot;&gt;&lt;code&gt;struct/2&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">예를 들어, 구조체의 일부로 모든 필드를 반환 할 필요가없는 경우 &lt;a href=&quot;#struct/2&quot;&gt; &lt;code&gt;struct/2&lt;/code&gt; &lt;/a&gt; 를 사용하여 특정 필드 만 포함하도록 필드를 필터링 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="cc5dc01c081354dfaf44b568f55f3ebe9329dee7" translate="yes" xml:space="preserve">
          <source>For example, if you don&amp;rsquo;t need all fields to be returned or neither need a struct, you can use &lt;a href=&quot;#map/2&quot;&gt;&lt;code&gt;map/2&lt;/code&gt;&lt;/a&gt; to achieve both:</source>
          <target state="translated">예를 들어, 모든 필드를 반환 할 필요가 없거나 구조체가 필요하지 않은 경우 &lt;a href=&quot;#map/2&quot;&gt; &lt;code&gt;map/2&lt;/code&gt; &lt;/a&gt; 를 사용 하여 두 가지를 모두 달성 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="046786477a40d0ce576e85622a62582fe169703c" translate="yes" xml:space="preserve">
          <source>For example, if you want to provide your own date structures, the type function should return &lt;code&gt;:date&lt;/code&gt;.</source>
          <target state="translated">예를 들어, 고유 한 날짜 구조를 제공하려는 경우 type 함수는 &lt;code&gt;:date&lt;/code&gt; 를 반환해야 합니다 .</target>
        </trans-unit>
        <trans-unit id="4a490502a537fa70cbfe7862a7fdc9d9d25a4ab0" translate="yes" xml:space="preserve">
          <source>For example, if your database does not support autoincrementing primary keys and requires something like UUID or a RecordID, you can configure and use &lt;code&gt;:binary_id&lt;/code&gt; as your primary key type as follows:</source>
          <target state="translated">예를 들어, 데이터베이스에서 자동 증가 기본 키를 지원하지 않고 UUID 또는 RecordID와 같은 것이 필요한 경우 다음과 같이 &lt;code&gt;:binary_id&lt;/code&gt; 를 기본 키 유형으로 구성하고 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="84cde3c3ecfdee20a150817b154d085461422ad2" translate="yes" xml:space="preserve">
          <source>For example, imagine a user has many addresses relationship where post data is sent as follows</source>
          <target state="translated">예를 들어, 사용자에게 다음과 같이 게시물 데이터가 전송되는 많은 주소 관계가 있다고 가정하십시오.</target>
        </trans-unit>
        <trans-unit id="df1b9f8c3f5e06f384cb183c3f248319b297f218" translate="yes" xml:space="preserve">
          <source>For example, imagine a user with id &lt;code&gt;123&lt;/code&gt; online from two different devices, as well as a user with id &lt;code&gt;456&lt;/code&gt; online from just one device. The following presence information might be returned:</source>
          <target state="translated">예를 들어, 두 개의 다른 장치에서 온라인 으로 ID가 &lt;code&gt;123&lt;/code&gt; 인 사용자와 하나의 장치에서 온라인 으로 ID가 &lt;code&gt;456&lt;/code&gt; 인 사용자를 상상해보십시오 . 다음과 같은 현재 상태 정보가 반환 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="886c455d893cac0662c17c0b5a315859b743e334" translate="yes" xml:space="preserve">
          <source>For example, imagine creating a resource and replying with the created record:</source>
          <target state="translated">예를 들어, 자원을 작성하고 작성된 레코드로 응답한다고 가정하십시오.</target>
        </trans-unit>
        <trans-unit id="533f158f4a4f3c3fed2c4251950886b68baf1969" translate="yes" xml:space="preserve">
          <source>For example, imagine you are testing an authentication plug in isolation, but you need to invoke the Endpoint plugs and &lt;code&gt;:browser&lt;/code&gt; pipeline of your Router for session and flash related dependencies:</source>
          <target state="translated">예를 들어, 인증 플러그를 별도로 테스트하고 있지만 세션 및 플래시 관련 종속성에 대해 라우터 의 엔드 포인트 플러그 및 &lt;code&gt;:browser&lt;/code&gt; 파이프 라인 을 호출해야한다고 가정 해보십시오.</target>
        </trans-unit>
        <trans-unit id="d35abbc4af6b641142df2d7b6e8cb714b2e59096" translate="yes" xml:space="preserve">
          <source>For example, imagine you have a set of conditions you want to build your query on:</source>
          <target state="translated">예를 들어, 쿼리를 작성하려는 조건 세트가 있다고 가정하십시오.</target>
        </trans-unit>
        <trans-unit id="8eebd42f8b90a67c493e81c5b014f284666e7e5e" translate="yes" xml:space="preserve">
          <source>For example, one could set the accepts header for json requests as follows:</source>
          <target state="translated">예를 들어, 다음과 같이 json 요청에 대한 accepts 헤더를 설정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a0404b9a4be72b8fa2ca4aa38b64953ae3c079e9" translate="yes" xml:space="preserve">
          <source>For example, the following &lt;code&gt;:banner&lt;/code&gt; option:</source>
          <target state="translated">예를 들어 다음과 같은 &lt;code&gt;:banner&lt;/code&gt; 옵션이 있습니다.</target>
        </trans-unit>
        <trans-unit id="83e3418ad418cbae8b838f55a7f3c5eff7a23b6e" translate="yes" xml:space="preserve">
          <source>For example, the following is forbidden because it is not at the root of a &lt;code&gt;where&lt;/code&gt;:</source>
          <target state="translated">예를 들어, 다음은 &lt;code&gt;where&lt;/code&gt; 의 루트에 있지 않기 때문에 금지되어 있습니다 .</target>
        </trans-unit>
        <trans-unit id="6471f878df0f8a31f0a9c6ed9c1a0970d2b7f6cc" translate="yes" xml:space="preserve">
          <source>For example, the route above will match on the path &lt;code&gt;&quot;/api/v1/pages/:id&quot;&lt;/code&gt; and the named route will be &lt;code&gt;api_v1_page_path&lt;/code&gt;, as expected from the values given to &lt;a href=&quot;#scope/2&quot;&gt;&lt;code&gt;scope/2&lt;/code&gt;&lt;/a&gt; option.</source>
          <target state="translated">예를 들어, 위의 경로는 &lt;code&gt;&quot;/api/v1/pages/:id&quot;&lt;/code&gt; 경로에서 일치 하며 &lt;a href=&quot;#scope/2&quot;&gt; &lt;code&gt;scope/2&lt;/code&gt; &lt;/a&gt; 옵션에 제공된 값에서 예상 &lt;code&gt;api_v1_page_path&lt;/code&gt; 명명 된 경로는 api_v1_page_path 입니다.</target>
        </trans-unit>
        <trans-unit id="d2fc813eb5dfb8f4978194599eab4ecab416b2e4" translate="yes" xml:space="preserve">
          <source>For example, the route:</source>
          <target state="translated">예를 들어 경로는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="c268739f07b40440ff73d328a7a5b1783a45e413" translate="yes" xml:space="preserve">
          <source>For example, to get all posts while running the &amp;ldquo;lower(?)&amp;rdquo; function in the database where &lt;code&gt;p.title&lt;/code&gt; is interpolated in place of &lt;code&gt;?&lt;/code&gt;, one can write:</source>
          <target state="translated">데이터베이스에서 &quot;낮은 (?)&quot;기능을 실행하는 동안 예를 들어, 모든 게시물을 얻을 수 &lt;code&gt;p.title&lt;/code&gt; 는 대신에 보간을 &lt;code&gt;?&lt;/code&gt; , 쓸 수 있습니다 :</target>
        </trans-unit>
        <trans-unit id="aaa80c213499c1e4e2ebabd1a68490863d99b23c" translate="yes" xml:space="preserve">
          <source>For example, to run &lt;code&gt;phoenix.server&lt;/code&gt; without checking dependencies:</source>
          <target state="translated">예를 들어, 종속성을 확인하지 않고 &lt;code&gt;phoenix.server&lt;/code&gt; 를 실행하려면 다음을 수행하십시오 .</target>
        </trans-unit>
        <trans-unit id="52d1730d810a3213b8ae35feb4a46172562acd1e" translate="yes" xml:space="preserve">
          <source>For example, to run &lt;code&gt;phx.server&lt;/code&gt; without checking dependencies:</source>
          <target state="translated">예를 들어, 종속성을 확인하지 않고 &lt;code&gt;phx.server&lt;/code&gt; 를 실행하려면 다음을 수행 하십시오 .</target>
        </trans-unit>
        <trans-unit id="ee191307a2caef15a68ebec9dbfb940793de8194" translate="yes" xml:space="preserve">
          <source>For example, we can use the &lt;a href=&quot;#push/3&quot;&gt;&lt;code&gt;push/3&lt;/code&gt;&lt;/a&gt; function in the test to push messages to the channel (it will invoke &lt;code&gt;handle_in/3&lt;/code&gt;):</source>
          <target state="translated">예를 들어 테스트에서 &lt;a href=&quot;#push/3&quot;&gt; &lt;code&gt;push/3&lt;/code&gt; &lt;/a&gt; 함수를 사용하여 메시지를 채널로 푸시 할 수 있습니다 ( &lt;code&gt;handle_in/3&lt;/code&gt; 호출 ).</target>
        </trans-unit>
        <trans-unit id="48f038621e4427f7e69c128ca2c67366fe95857d" translate="yes" xml:space="preserve">
          <source>For example, you may way to generate an https URL from an http request. You could define a function like the following:</source>
          <target state="translated">예를 들어 http 요청에서 https URL을 생성 할 수 있습니다. 다음과 같은 기능을 정의 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="059c3e8cce263b2945a18ac90b2637e10a8026b1" translate="yes" xml:space="preserve">
          <source>For example:</source>
          <target state="translated">예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="2ed904b738db7c4a3075c6e430608f75222bb23b" translate="yes" xml:space="preserve">
          <source>For graceful exits, the channel will notify the transort it is gracefully terminating via the following message:</source>
          <target state="translated">정상 종료의 경우 채널은 트랜스 포트에 다음 메시지를 통해 정상적으로 종료되고 있음을 알립니다.</target>
        </trans-unit>
        <trans-unit id="92926b5f41b64990dae4306af8842a9e143deef7" translate="yes" xml:space="preserve">
          <source>For instance, here is how you would pass the SSL options to the Cowboy adapter:</source>
          <target state="translated">예를 들어 SSL 옵션을 Cowboy 어댑터에 전달하는 방법은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="29be4bc5c201dd9ca580d6ef9202fab40016be15" translate="yes" xml:space="preserve">
          <source>For instance, imagine you wrote:</source>
          <target state="translated">예를 들어, 다음과 같이 썼다고 상상해보십시오.</target>
        </trans-unit>
        <trans-unit id="d9022c5a0c8964d6ea0f8ae4b3dab94f265d3706" translate="yes" xml:space="preserve">
          <source>For maps to work in such databases, Ecto will need a JSON library. By default Ecto will use &lt;a href=&quot;http://github.com/michalmuskala/jason&quot;&gt;Jason&lt;/a&gt; which needs to be added to your deps in &lt;code&gt;mix.exs&lt;/code&gt;:</source>
          <target state="translated">이러한 데이터베이스에서 맵이 작동하려면 Ecto에 JSON 라이브러리가 필요합니다. 기본적으로 Ecto는 &lt;a href=&quot;http://github.com/michalmuskala/jason&quot;&gt;Jason&lt;/a&gt; 을 사용 하며 &lt;code&gt;mix.exs&lt;/code&gt; 의 뎁에 추가해야합니다 .</target>
        </trans-unit>
        <trans-unit id="8aba17a165f8cb7c095fcd429f135914d9b29c38" translate="yes" xml:space="preserve">
          <source>For more information on ETS tables, visit the Erlang documentation at http://www.erlang.org/doc/man/ets.html.</source>
          <target state="translated">ETS 테이블에 대한 자세한 내용은 Erlang 설명서 (http://www.erlang.org/doc/man/ets.html)를 방문하십시오.</target>
        </trans-unit>
        <trans-unit id="86dc89db4b6ce2937afc00f7c25bd37c98b90786" translate="yes" xml:space="preserve">
          <source>For more information on named bindings see &amp;ldquo;Named bindings&amp;rdquo; in this module doc.</source>
          <target state="translated">명명 된 바인딩에 대한 자세한 내용은이 모듈 설명서의 &quot;명명 된 바인딩&quot;을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="47623288c6f7e25e0286078a9bc973202790385a" translate="yes" xml:space="preserve">
          <source>For options and examples see documentation of &lt;a href=&quot;#embeds_many/3&quot;&gt;&lt;code&gt;embeds_many/3&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">옵션과 예제는 &lt;a href=&quot;#embeds_many/3&quot;&gt; &lt;code&gt;embeds_many/3&lt;/code&gt; &lt;/a&gt; 문서를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="5fa05355f3967ad546f604ed6817bb6dc2f2810a" translate="yes" xml:space="preserve">
          <source>For options and examples see documentation of &lt;a href=&quot;#embeds_one/3&quot;&gt;&lt;code&gt;embeds_one/3&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">옵션과 예제는 &lt;a href=&quot;#embeds_one/3&quot;&gt; &lt;code&gt;embeds_one/3&lt;/code&gt; &lt;/a&gt; 설명서를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="4f762b81db42047b1f8e5c705f799a2c497f5c89" translate="yes" xml:space="preserve">
          <source>For preloads, the selected fields may be specified from the parent:</source>
          <target state="translated">사전로드의 경우 선택한 필드를 상위에서 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a741dc08e6f8380624e48ef2c45211a0061c62e0" translate="yes" xml:space="preserve">
          <source>For relational databases, this means the RETURNING option of those statements is used. For this reason, MySQL does not support this option and will raise an error if a schema is inserted/updated with read after writes fields.</source>
          <target state="translated">관계형 데이터베이스의 경우 이는 해당 명령문의 RETURNING 옵션이 사용됨을 의미합니다. 이러한 이유로 MySQL은이 옵션을 지원하지 않으며 쓰기 후 읽기 필드로 스키마를 삽입 / 업데이트하면 오류가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="00597a349fb6a62ad730ce7a374a1fd3fdf60dfa" translate="yes" xml:space="preserve">
          <source>For relations, these functions will return the changeset data with changes applied. To retrieve raw changesets, please use &lt;a href=&quot;#get_change/3&quot;&gt;&lt;code&gt;get_change/3&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">관계의 경우이 함수는 변경 사항이 적용된 변경 세트 데이터를 반환합니다. 원시 변경 세트를 검색하려면 &lt;a href=&quot;#get_change/3&quot;&gt; &lt;code&gt;get_change/3&lt;/code&gt; 을&lt;/a&gt; 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="7a48c0cb962716952cf875975eac6007455ad2f0" translate="yes" xml:space="preserve">
          <source>For relations, these functions will return the changeset original data with changes applied. To retrieve raw changesets, please use &lt;a href=&quot;#fetch_change/2&quot;&gt;&lt;code&gt;fetch_change/2&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">관계의 경우이 함수는 변경 사항이 적용된 변경 세트 원본 데이터를 반환합니다. 원시 변경 세트를 검색하려면 &lt;a href=&quot;#fetch_change/2&quot;&gt; &lt;code&gt;fetch_change/2&lt;/code&gt; &lt;/a&gt; 를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="1e438c72243585ad24059c796c9627a8dd79cb75" translate="yes" xml:space="preserve">
          <source>For requests with a different request method, this plug will only fetch the query params.</source>
          <target state="translated">요청 방법이 다른 요청의 경우이 플러그는 쿼리 매개 변수 만 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="fd8f14bec39884e1bac29f6af6c015070597aa14" translate="yes" xml:space="preserve">
          <source>For security reasons, the form data and parameter values are never re-used in &lt;a href=&quot;#password_input/3&quot;&gt;&lt;code&gt;password_input/3&lt;/code&gt;&lt;/a&gt;. Pass the value explicitly if you would like to set one.</source>
          <target state="translated">보안상의 이유로 양식 데이터 및 매개 변수 값은 &lt;a href=&quot;#password_input/3&quot;&gt; &lt;code&gt;password_input/3&lt;/code&gt; &lt;/a&gt; 에서 재사용되지 않습니다 . 값을 설정하려면 명시 적으로 값을 전달하십시오.</target>
        </trans-unit>
        <trans-unit id="0c9c55ef99a1b85442974d55919cef61666635f0" translate="yes" xml:space="preserve">
          <source>For security, &lt;code&gt;:to&lt;/code&gt; only accepts paths. Use the &lt;code&gt;:external&lt;/code&gt; option to redirect to any URL.</source>
          <target state="translated">보안을 위해 &lt;code&gt;:to&lt;/code&gt; 는 경로 만 허용합니다. &lt;code&gt;:external&lt;/code&gt; 옵션을 사용하여 URL로 리디렉션하십시오.</target>
        </trans-unit>
        <trans-unit id="fff536d187e3538d188ab49aed8a72744fd84f9c" translate="yes" xml:space="preserve">
          <source>For stylesheet files found under the given path, Phoenix will replace asset references with the digested paths, as long as the asset exists in the generated cache manifest.</source>
          <target state="translated">지정된 경로 아래에있는 스타일 시트 파일의 경우 자산이 생성 된 캐시 매니페스트에있는 한 Phoenix는 자산 참조를 다이제스트 된 경로로 바꿉니다.</target>
        </trans-unit>
        <trans-unit id="8c36fe9b2a7c749e8571085eb2af112fd9083639" translate="yes" xml:space="preserve">
          <source>For such cases, just pass an atom representing the action to dispatch:</source>
          <target state="translated">그러한 경우, 파견 할 조치를 나타내는 원자를 전달하십시오.</target>
        </trans-unit>
        <trans-unit id="20a1f9c6c25c59a377c89a60f258c5d3b208854e" translate="yes" xml:space="preserve">
          <source>For the &lt;code&gt;:decimal&lt;/code&gt; type, &lt;code&gt;+Infinity&lt;/code&gt;, &lt;code&gt;-Infinity&lt;/code&gt;, and &lt;code&gt;NaN&lt;/code&gt; values are not supported, even though the &lt;a href=&quot;https://hexdocs.pm/decimal/1.5.0/Decimal.html&quot;&gt;&lt;code&gt;Decimal&lt;/code&gt;&lt;/a&gt; library handles them. To support them, you can create a custom type.</source>
          <target state="translated">의 경우 &lt;code&gt;:decimal&lt;/code&gt; 유형, &lt;code&gt;+Infinity&lt;/code&gt; , &lt;code&gt;-Infinity&lt;/code&gt; 과 &lt;code&gt;NaN&lt;/code&gt; 값은 지원되지 않습니다에도 불구하고 &lt;a href=&quot;https://hexdocs.pm/decimal/1.5.0/Decimal.html&quot;&gt; &lt;code&gt;Decimal&lt;/code&gt; &lt;/a&gt; 라이브러리 핸들 그들. 이를 지원하기 위해 사용자 정의 유형을 작성할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="780c2570702e69db99f32922ce1d16997b165979" translate="yes" xml:space="preserve">
          <source>For the &lt;code&gt;{:array, inner_type}&lt;/code&gt; and &lt;code&gt;{:map, inner_type}&lt;/code&gt; type, replace &lt;code&gt;inner_type&lt;/code&gt; with one of the valid types, such as &lt;code&gt;:string&lt;/code&gt;.</source>
          <target state="translated">를 들어 &lt;code&gt;{:array, inner_type}&lt;/code&gt; 과 &lt;code&gt;{:map, inner_type}&lt;/code&gt; 유형, 대체 &lt;code&gt;inner_type&lt;/code&gt; 을 같은 유효한 유형 중 하나 &lt;code&gt;:string&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1b121a5201e5fe9abd71ff02499c57b1592c223e" translate="yes" xml:space="preserve">
          <source>For the endpoint:</source>
          <target state="translated">엔드 포인트의 경우 :</target>
        </trans-unit>
        <trans-unit id="b6cc26f40ba25b58fe4ceb1492cc4ebe433ed3db" translate="yes" xml:space="preserve">
          <source>For this plug to work, it expects a session to have been previously fetched. It will then compare the plug stored in the session with the one sent by the request to determine the validity of the request. For an invalid request the action taken is based on the &lt;code&gt;:with&lt;/code&gt; option.</source>
          <target state="translated">이 플러그가 작동하려면 세션이 이전에 페치되었을 것으로 예상됩니다. 그런 다음 세션에 저장된 플러그를 요청이 보낸 플러그와 비교하여 요청의 유효성을 확인합니다. 유효하지 않은 요청의 경우 조치는 &lt;code&gt;:with&lt;/code&gt; 옵션을 기반으로합니다 .</target>
        </trans-unit>
        <trans-unit id="c19aeef5835b8730002052f32c829b18a9a1b368" translate="yes" xml:space="preserve">
          <source>For this plug to work, it expects a session to have been previously fetched. It will then compare the token stored in the session with the one sent by the request to determine the validity of the request. For an invalid request the action taken is based on the &lt;code&gt;:with&lt;/code&gt; option.</source>
          <target state="translated">이 플러그가 작동하려면 세션이 이전에 페치되었을 것으로 예상됩니다. 그런 다음 세션에 저장된 토큰을 요청이 보낸 토큰과 비교하여 요청의 유효성을 확인합니다. 유효하지 않은 요청의 경우 조치는 &lt;code&gt;:with&lt;/code&gt; 옵션을 기반으로합니다 .</target>
        </trans-unit>
        <trans-unit id="acbd3da24abf12ae2ee4b4dbe388f7d784a60abf" translate="yes" xml:space="preserve">
          <source>For this reason, Phoenix automatically includes a &amp;ldquo;_utf8=✓&amp;rdquo; parameter in your forms, to force those browsers to send the data in the proper encoding. This technique has been seen in the Rails web framework and reproduced here.</source>
          <target state="translated">이러한 이유로 Phoenix는 양식에&amp;ldquo;_utf8 = ✓&amp;rdquo;매개 변수를 자동으로 포함하여 해당 브라우저가 데이터를 적절한 인코딩으로 보내도록합니다. 이 기술은 Rails 웹 프레임 워크에서 보았으며 여기서 재현되었습니다.</target>
        </trans-unit>
        <trans-unit id="93af13c5fc0bdc9bd0b9d349f954f83799c8aaa8" translate="yes" xml:space="preserve">
          <source>For this reason, we will use schemas on the remaining examples but remember Ecto does not require them in order to write queries.</source>
          <target state="translated">이러한 이유로 나머지 예제에서는 스키마를 사용하지만 쿼리를 작성하기 위해 Ecto에서는 스키마를 요구하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="c7e5ab937cf7dceafaad92974cb027e2587d7a76" translate="yes" xml:space="preserve">
          <source>Force table clean up because the given pid is down asynchronously</source>
          <target state="translated">주어진 pid가 비동기 적으로 다운되었으므로 테이블 정리를 강제하십시오.</target>
        </trans-unit>
        <trans-unit id="8297c64e60d581b16d4f160782d093bba37f69c8" translate="yes" xml:space="preserve">
          <source>Force table clean up because the given pid is down asynchronously.</source>
          <target state="translated">지정된 pid가 비동기 적으로 다운되었으므로 테이블 정리를 수행하십시오.</target>
        </trans-unit>
        <trans-unit id="9376e40f7dd57bd0a80a45f4b597decef3430bb5" translate="yes" xml:space="preserve">
          <source>Forces SSL in the socket connection</source>
          <target state="translated">소켓 연결에서 SSL을 강제 실행</target>
        </trans-unit>
        <trans-unit id="f2f36ba3d6535af9ad03fa2741c09ec0c941cf53" translate="yes" xml:space="preserve">
          <source>Forces SSL in the socket connection.</source>
          <target state="translated">소켓 연결에서 SSL을 강제 실행합니다.</target>
        </trans-unit>
        <trans-unit id="a94803f581b82f9ba5bdaf6f21212ed730ebfce9" translate="yes" xml:space="preserve">
          <source>Forces a change on the given &lt;code&gt;key&lt;/code&gt; with &lt;code&gt;value&lt;/code&gt;</source>
          <target state="translated">주어진 &lt;code&gt;key&lt;/code&gt; 를 &lt;code&gt;value&lt;/code&gt; 강제 변경</target>
        </trans-unit>
        <trans-unit id="ba1f8f66627e0e0f8fe7b916b77edc9622c220fc" translate="yes" xml:space="preserve">
          <source>Forces a change on the given &lt;code&gt;key&lt;/code&gt; with &lt;code&gt;value&lt;/code&gt;.</source>
          <target state="translated">지정된 &lt;code&gt;key&lt;/code&gt; 를 &lt;code&gt;value&lt;/code&gt; 로 강제 변경 합니다 .</target>
        </trans-unit>
        <trans-unit id="c97fca207ecbaf116ba6ca44368cce3e0a305b92" translate="yes" xml:space="preserve">
          <source>Fortunately that&amp;rsquo;s easily solvable by simply rewriting it to:</source>
          <target state="translated">다행히도 간단히 다음과 같이 다시 작성하면 쉽게 해결할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="243792f59615d8e2d372bd2223d968fccda687be" translate="yes" xml:space="preserve">
          <source>Forwards a request at the given path to a plug</source>
          <target state="translated">주어진 경로에서 요청을 플러그로 전달</target>
        </trans-unit>
        <trans-unit id="16e33ad48d9a60b2973610a401cef5c85f913f57" translate="yes" xml:space="preserve">
          <source>Forwards a request at the given path to a plug.</source>
          <target state="translated">주어진 경로에서 요청을 플러그로 전달합니다.</target>
        </trans-unit>
        <trans-unit id="b32cf12685ca5dc27b473a969f37f02beef213d2" translate="yes" xml:space="preserve">
          <source>Forwards requests to another Plug. The &lt;code&gt;path_info&lt;/code&gt; of the forwarded connection will exclude the portion of the path specified in the call to &lt;code&gt;forward&lt;/code&gt;. If the path contains any parameters, those will be available in the target Plug in &lt;code&gt;conn.params&lt;/code&gt; and &lt;code&gt;conn.path_params&lt;/code&gt;</source>
          <target state="translated">요청을 다른 플러그로 전달합니다. &lt;code&gt;path_info&lt;/code&gt; 전달은 연결의 호출로 지정된 경로의 일부 제외한다 &lt;code&gt;forward&lt;/code&gt; . 경로에 매개 변수가 포함 된 경우 대상 플러그인에서 사용할 수 있습니다. &lt;code&gt;conn.params&lt;/code&gt; 및 &lt;code&gt;conn.path_params&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a2b6fd862c663433fb18b8d94573b799a0d0c715" translate="yes" xml:space="preserve">
          <source>Forwards requests to another Plug. The &lt;code&gt;path_info&lt;/code&gt; of the forwarded connection will exclude the portion of the path specified in the call to &lt;code&gt;forward&lt;/code&gt;. If the path contains any parameters, those will be available in the target Plug in &lt;code&gt;conn.params&lt;/code&gt; and &lt;code&gt;conn.path_params&lt;/code&gt;.</source>
          <target state="translated">요청을 다른 플러그로 전달합니다. &lt;code&gt;path_info&lt;/code&gt; 전달은 연결의 호출로 지정된 경로의 일부 제외한다 &lt;code&gt;forward&lt;/code&gt; . 경로에 매개 변수가 포함되어 있으면 대상 플러그인 &lt;code&gt;conn.params&lt;/code&gt; 및 &lt;code&gt;conn.path_params&lt;/code&gt; 에서 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="676ca63eda9f110339bc4562d41c4087d1f58d05" translate="yes" xml:space="preserve">
          <source>Four different datetime primitive types are available:</source>
          <target state="translated">4 가지 다른 날짜 / 시간 기본 유형을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d45089940ca38bf48726ea01710791bffa1dee6e" translate="yes" xml:space="preserve">
          <source>Fragments</source>
          <target state="translated">Fragments</target>
        </trans-unit>
        <trans-unit id="7091d22a2b4d23609cc93c591d186ab2886edba6" translate="yes" xml:space="preserve">
          <source>Front-end to Phoenix pubsub layer.</source>
          <target state="translated">Phoenix pubsub 레이어의 프런트 엔드</target>
        </trans-unit>
        <trans-unit id="9bf236d048ccab1956dd5420be9ebe7d7c44331e" translate="yes" xml:space="preserve">
          <source>Function plugs</source>
          <target state="translated">기능 플러그</target>
        </trans-unit>
        <trans-unit id="2b961dea1dc0c60ddf9a2c8e9d090f6f7d082483" translate="yes" xml:space="preserve">
          <source>Functions</source>
          <target state="translated">Functions</target>
        </trans-unit>
        <trans-unit id="1442301406adda1b4f88b555bb39bb4cb9e30ff1" translate="yes" xml:space="preserve">
          <source>Furthermore an array type can also be given if it is supported by your database, although it requires the type of the underlying array element to be given too:</source>
          <target state="translated">또한 기본 배열 요소의 유형도 제공해야하지만 데이터베이스에서 지원하는 경우 배열 유형을 제공 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="45c1f2b55dcf3303d32f38fbac65ddded9bd404b" translate="yes" xml:space="preserve">
          <source>Furthermore, both &lt;code&gt;__struct__&lt;/code&gt; and &lt;code&gt;__changeset__&lt;/code&gt; functions are defined so structs and changeset functionalities are available.</source>
          <target state="translated">또한 &lt;code&gt;__struct__&lt;/code&gt; 및 &lt;code&gt;__changeset__&lt;/code&gt; 함수가 모두 정의되므로 구조체 및 변경 집합 기능을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9c9cc3e69d5248baac17979dd85069ab7aa035bd" translate="yes" xml:space="preserve">
          <source>Furthermore, since the tag information is given as structs read directly from the database, Ecto will treat the data as correct and only do the minimum necessary to guarantee that posts and tags are associated, without trying to update or diff any of the fields in the tag struct.</source>
          <target state="translated">또한 태그 정보는 데이터베이스에서 직접 읽은 구조체로 제공되므로 Ecto는 데이터를 올바른 것으로 취급하고 필드의 필드를 업데이트하거나 비교하지 않고 게시물과 태그가 연결되도록 보장하는 데 필요한 최소한의 작업 만 수행합니다. 태그 구조체.</target>
        </trans-unit>
        <trans-unit id="c338ceb5b7adaaa50f38c347f2349c53389ff49c" translate="yes" xml:space="preserve">
          <source>Furthermore, the &lt;code&gt;before_send&lt;/code&gt; field stores callbacks that are invoked before the connection is sent. Callbacks are invoked in the reverse order they are registered (callbacks registered first are invoked last) in order to reproduce a pipeline ordering.</source>
          <target state="translated">또한 &lt;code&gt;before_send&lt;/code&gt; 필드는 연결이 전송되기 전에 호출되는 콜백을 저장합니다. 파이프 라인 순서를 재현하기 위해 콜백은 등록 된 역순으로 호출됩니다 (먼저 등록 된 콜백이 마지막으로 호출 됨).</target>
        </trans-unit>
        <trans-unit id="70e2803f5997f8434e1e14d79b67bf417331f761" translate="yes" xml:space="preserve">
          <source>Furthermore, this protocol relies on iodata, which provides better performance when sending or streaming data to the client.</source>
          <target state="translated">또한이 프로토콜은 iodata를 사용하여 클라이언트로 데이터를 보내거나 스트리밍 할 때 더 나은 성능을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="98281856e51de8bb0669d3ab3f5d42120b606d43" translate="yes" xml:space="preserve">
          <source>GET requests are not protected, as they should not have any side-effect or change your application state. JavaScript requests are an exception: by using a script tag, external websites can embed server-side generated JavaScript, which can leak information. For this reason, this plug also forbids any GET JavaScript request that is not XHR (or AJAX).</source>
          <target state="translated">GET 요청은 부작용이 없거나 애플리케이션 상태를 변경하지 않아야하므로 보호되지 않습니다. JavaScript 요청은 예외입니다. 스크립트 태그를 사용하면 외부 웹 사이트가 서버 측에서 생성 된 JavaScript를 포함하여 정보가 유출 될 수 있습니다. 이러한 이유로이 플러그는 XHR (또는 AJAX)이 아닌 GET JavaScript 요청도 금지합니다.</target>
        </trans-unit>
        <trans-unit id="84841ccacb20efbdee1996b961b9cb5573918289" translate="yes" xml:space="preserve">
          <source>Garbage collection</source>
          <target state="translated">가비지 콜렉션</target>
        </trans-unit>
        <trans-unit id="a96be0a4f608d9678cf95140fc6762e7fff0a137" translate="yes" xml:space="preserve">
          <source>Geerates the static URL without any path information</source>
          <target state="translated">경로 정보없이 정적 URL을 생성합니다.</target>
        </trans-unit>
        <trans-unit id="18fd8d6947881e76a9476c5cc3ade9f03cb51e63" translate="yes" xml:space="preserve">
          <source>Geerates the static URL without any path information.</source>
          <target state="translated">경로 정보없이 정적 URL을 생성합니다.</target>
        </trans-unit>
        <trans-unit id="81d73279e9d50f0e75f19715870b45b2edcc66d2" translate="yes" xml:space="preserve">
          <source>General: &lt;a href=&quot;#fragment/1&quot;&gt;&lt;code&gt;fragment/1&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#field/2&quot;&gt;&lt;code&gt;field/2&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#type/2&quot;&gt;&lt;code&gt;type/2&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">일반 : &lt;a href=&quot;#fragment/1&quot;&gt; &lt;code&gt;fragment/1&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#field/2&quot;&gt; &lt;code&gt;field/2&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#type/2&quot;&gt; &lt;code&gt;type/2&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="dbf039f3463a6192dcedbf378221d86ccce25ca4" translate="yes" xml:space="preserve">
          <source>Generate a new form builder for the given parameter in form</source>
          <target state="translated">지정된 매개 변수에 대해 새 양식 빌더를 양식으로 생성하십시오.</target>
        </trans-unit>
        <trans-unit id="15e52a102d3768bc19eacc2abb7f4194a20be07e" translate="yes" xml:space="preserve">
          <source>Generate a new form builder for the given parameter in form.</source>
          <target state="translated">지정된 매개 변수에 대해 새 양식 빌더를 양식으로 생성하십시오.</target>
        </trans-unit>
        <trans-unit id="bc292ee42a9b81099735fa47e66e355172cc4c20" translate="yes" xml:space="preserve">
          <source>Generated migration can use &lt;code&gt;binary_id&lt;/code&gt; for schema&amp;rsquo;s primary key and its references with option &lt;code&gt;--binary-id&lt;/code&gt;.</source>
          <target state="translated">생성 된 마이그레이션은 스키마의 기본 키에 &lt;code&gt;binary_id&lt;/code&gt; 를 사용 하고 &lt;code&gt;--binary-id&lt;/code&gt; 옵션과 함께 해당 참조를 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="f64a5913edebccd654a6fcbe563ded9895c73182" translate="yes" xml:space="preserve">
          <source>Generates &lt;code&gt;:inserted_at&lt;/code&gt; and &lt;code&gt;:updated_at&lt;/code&gt; timestamp fields</source>
          <target state="translated">&lt;code&gt;:inserted_at&lt;/code&gt; 및 &lt;code&gt;:updated_at&lt;/code&gt; 타임 스탬프 필드 생성</target>
        </trans-unit>
        <trans-unit id="6e6bf2fc4b7fa7784ba0393c92ca08b83b688b33" translate="yes" xml:space="preserve">
          <source>Generates &lt;code&gt;:inserted_at&lt;/code&gt; and &lt;code&gt;:updated_at&lt;/code&gt; timestamp fields.</source>
          <target state="translated">&lt;code&gt;:inserted_at&lt;/code&gt; 및 &lt;code&gt;:updated_at&lt;/code&gt; 시간 소인 필드를 생성 합니다.</target>
        </trans-unit>
        <trans-unit id="46ec673256a5e76ef7c069fc676e2f5aef51009e" translate="yes" xml:space="preserve">
          <source>Generates a &lt;code&gt;socket_ref&lt;/code&gt; for an async reply</source>
          <target state="translated">비동기 응답에 대한 &lt;code&gt;socket_ref&lt;/code&gt; 를 생성합니다</target>
        </trans-unit>
        <trans-unit id="89363898c56d89d0dc4865b93a5f0b41e2cb4d20" translate="yes" xml:space="preserve">
          <source>Generates a &lt;code&gt;socket_ref&lt;/code&gt; for an async reply.</source>
          <target state="translated">비동기 응답에 대한 &lt;code&gt;socket_ref&lt;/code&gt; 를 생성합니다 .</target>
        </trans-unit>
        <trans-unit id="7254b9e30fd4dcd56334ce2310a46519a11db327" translate="yes" xml:space="preserve">
          <source>Generates a Phoenix channel.</source>
          <target state="translated">피닉스 채널을 생성합니다.</target>
        </trans-unit>
        <trans-unit id="dbbfe88a5e9c28bee33e4a7709d25c7578b13712" translate="yes" xml:space="preserve">
          <source>Generates a Phoenix resource.</source>
          <target state="translated">Phoenix 리소스를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="396e5bd6ba3cdeb590c49ec0bbf4116674cec309" translate="yes" xml:space="preserve">
          <source>Generates a Presence tracker for your application.</source>
          <target state="translated">응용 프로그램에 대한 현재 상태 추적기를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="5b57a23b25adcd3dfb1b05de10692fcac4b0c0a7" translate="yes" xml:space="preserve">
          <source>Generates a button that uses a regular HTML form to submit to the given URL</source>
          <target state="translated">주어진 URL에 제출하기 위해 일반 HTML 양식을 사용하는 버튼을 생성합니다</target>
        </trans-unit>
        <trans-unit id="6dc6b7e0d06c3c7fac4214ca839f28cb452a6270" translate="yes" xml:space="preserve">
          <source>Generates a button that uses a regular HTML form to submit to the given URL.</source>
          <target state="translated">주어진 URL에 제출하기 위해 일반 HTML 양식을 사용하는 버튼을 생성합니다.</target>
        </trans-unit>
        <trans-unit id="64561f910e36802f2f2af6c0eeef79ae9959a53a" translate="yes" xml:space="preserve">
          <source>Generates a checkbox</source>
          <target state="translated">확인란을 생성합니다</target>
        </trans-unit>
        <trans-unit id="9c402930c245037de584689931bc5f98cb925246" translate="yes" xml:space="preserve">
          <source>Generates a checkbox.</source>
          <target state="translated">확인란을 생성합니다.</target>
        </trans-unit>
        <trans-unit id="e758b3646d387941fe43bb7c638a89c7ddd9d4c8" translate="yes" xml:space="preserve">
          <source>Generates a childspec to be used in the supervision tree</source>
          <target state="translated">감독 트리에서 사용할 childspec을 생성합니다</target>
        </trans-unit>
        <trans-unit id="084a356e3603b2d7d3058ec01dbce1827e553b3a" translate="yes" xml:space="preserve">
          <source>Generates a childspec to be used in the supervision tree.</source>
          <target state="translated">감독 트리에서 사용할 childspec을 생성합니다.</target>
        </trans-unit>
        <trans-unit id="c63422f792595ace635012713e2e3ec5fdcfe7c7" translate="yes" xml:space="preserve">
          <source>Generates a color input</source>
          <target state="translated">색상 입력을 생성합니다</target>
        </trans-unit>
        <trans-unit id="45606cc48a2c148438a5b2a691378a779e9d8307" translate="yes" xml:space="preserve">
          <source>Generates a color input.</source>
          <target state="translated">색상 입력을 생성합니다.</target>
        </trans-unit>
        <trans-unit id="f79dfad3ee4eee79404d483203748cd197bfb509" translate="yes" xml:space="preserve">
          <source>Generates a context with functions around an Ecto schema.</source>
          <target state="translated">Ecto 스키마를 중심으로 함수가 포함 된 컨텍스트를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="171627640dc242b4213e2f665007e56c741ce2ff" translate="yes" xml:space="preserve">
          <source>Generates a date input</source>
          <target state="translated">날짜 입력을 생성합니다</target>
        </trans-unit>
        <trans-unit id="1fcc6c8cae144832ffc98dcd40c8eac478e1a7da" translate="yes" xml:space="preserve">
          <source>Generates a date input.</source>
          <target state="translated">날짜 입력을 생성합니다.</target>
        </trans-unit>
        <trans-unit id="67502aa3ceeeceb276d924590c8fa7dd9b0a9b11" translate="yes" xml:space="preserve">
          <source>Generates a datetime-local input</source>
          <target state="translated">날짜 / 시간 로컬 입력을 생성합니다</target>
        </trans-unit>
        <trans-unit id="ef3ed161bccd6158e836dadcf99ca1633c739273" translate="yes" xml:space="preserve">
          <source>Generates a datetime-local input.</source>
          <target state="translated">날짜 / 시간 로컬 입력을 생성합니다.</target>
        </trans-unit>
        <trans-unit id="9e84d239e416d559f3c0bccab74b22cff072a5a3" translate="yes" xml:space="preserve">
          <source>Generates a file input</source>
          <target state="translated">파일 입력을 생성합니다</target>
        </trans-unit>
        <trans-unit id="39fb04074dabbb624cbc620ccf147d69b2a45061" translate="yes" xml:space="preserve">
          <source>Generates a file input.</source>
          <target state="translated">파일 입력을 생성합니다.</target>
        </trans-unit>
        <trans-unit id="ab3c6b9191c757e18e68646ddc1874ca970de62b" translate="yes" xml:space="preserve">
          <source>Generates a form tag</source>
          <target state="translated">양식 태그를 생성합니다</target>
        </trans-unit>
        <trans-unit id="b412e1f99156deb9e91f69f6b5ac9155bb03b9cf" translate="yes" xml:space="preserve">
          <source>Generates a form tag with a form builder</source>
          <target state="translated">양식 작성기를 사용하여 양식 태그를 생성합니다</target>
        </trans-unit>
        <trans-unit id="5867e479588e031d9af73f4e26e2f4bb755d993f" translate="yes" xml:space="preserve">
          <source>Generates a form tag with a form builder.</source>
          <target state="translated">양식 작성기를 사용하여 양식 태그를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="1fcf6d502cbed8c6774cbd71cd67cb0475fb8d97" translate="yes" xml:space="preserve">
          <source>Generates a form tag with the given contents</source>
          <target state="translated">주어진 내용으로 양식 태그를 생성합니다</target>
        </trans-unit>
        <trans-unit id="73a7ae0251a3209970edcca52c92641cb83828a7" translate="yes" xml:space="preserve">
          <source>Generates a form tag with the given contents.</source>
          <target state="translated">주어진 내용으로 양식 태그를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="6fb768c7b9543e92cc3420ccd02e97e5655cfdc3" translate="yes" xml:space="preserve">
          <source>Generates a form tag.</source>
          <target state="translated">양식 태그를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="20996193071a0905fdf25cb5c613758dc8b93878" translate="yes" xml:space="preserve">
          <source>Generates a hidden input</source>
          <target state="translated">숨겨진 입력을 생성합니다</target>
        </trans-unit>
        <trans-unit id="5b13e8707f3e8f0d576e0f2751dda4df911730a0" translate="yes" xml:space="preserve">
          <source>Generates a hidden input.</source>
          <target state="translated">숨겨진 입력을 생성합니다.</target>
        </trans-unit>
        <trans-unit id="abfeb23072c3a06d67ccfbf879bf2eeab96d5b0f" translate="yes" xml:space="preserve">
          <source>Generates a label tag</source>
          <target state="translated">라벨 태그를 생성합니다</target>
        </trans-unit>
        <trans-unit id="ce9ab90073232b80839e14e4bbe7f7a803a34eae" translate="yes" xml:space="preserve">
          <source>Generates a label tag for the given field</source>
          <target state="translated">주어진 필드에 대한 레이블 태그를 생성합니다</target>
        </trans-unit>
        <trans-unit id="ab3ca2bbbbcd12eb651c2e27c2a279e192ff3c15" translate="yes" xml:space="preserve">
          <source>Generates a label tag for the given field.</source>
          <target state="translated">주어진 필드에 대한 레이블 태그를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="28a6fc00166a8c669fa44ea65f62685493aa2310" translate="yes" xml:space="preserve">
          <source>Generates a label tag.</source>
          <target state="translated">라벨 태그를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="a50123897c2b44bec513e431ba7cb02309189fef" translate="yes" xml:space="preserve">
          <source>Generates a link to the given URL</source>
          <target state="translated">주어진 URL에 대한 링크를 생성합니다</target>
        </trans-unit>
        <trans-unit id="c1f404e8a3f775cd18f3aa5b04a6353a8bd3eb26" translate="yes" xml:space="preserve">
          <source>Generates a link to the given URL.</source>
          <target state="translated">주어진 URL에 대한 링크를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="dbc6ea3e0e5e175a0282431e58e112038aaa09c9" translate="yes" xml:space="preserve">
          <source>Generates a meta tag with CSRF information</source>
          <target state="translated">CSRF 정보로 메타 태그 생성</target>
        </trans-unit>
        <trans-unit id="2219f0cedebbcfc4a9097edd34a767a497cb1274" translate="yes" xml:space="preserve">
          <source>Generates a meta tag with CSRF information.</source>
          <target state="translated">CSRF 정보로 메타 태그를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="02411617ad03187efe4d79ddc98c3934f98cab53" translate="yes" xml:space="preserve">
          <source>Generates a new repository.</source>
          <target state="translated">새로운 저장소를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="ec4e73c7a7527a111588dbb3ab99814034f1ef6f" translate="yes" xml:space="preserve">
          <source>Generates a number input</source>
          <target state="translated">숫자 입력을 생성합니다</target>
        </trans-unit>
        <trans-unit id="11f48eeb86c1ee3d50fe2a5731642a36708b06b0" translate="yes" xml:space="preserve">
          <source>Generates a number input.</source>
          <target state="translated">숫자 입력을 생성합니다.</target>
        </trans-unit>
        <trans-unit id="47709e3ef4238d15f86dbf2ee76f58d705224d78" translate="yes" xml:space="preserve">
          <source>Generates a password input</source>
          <target state="translated">비밀번호 입력을 생성합니다</target>
        </trans-unit>
        <trans-unit id="6d0d9edbf1971f56f1a0efb9364b266914f7db45" translate="yes" xml:space="preserve">
          <source>Generates a password input.</source>
          <target state="translated">비밀번호 입력을 생성합니다.</target>
        </trans-unit>
        <trans-unit id="3f4172380d2e87d78dec42dfbd35c80f932ab725" translate="yes" xml:space="preserve">
          <source>Generates a radio button</source>
          <target state="translated">라디오 버튼을 생성합니다</target>
        </trans-unit>
        <trans-unit id="54d925054bfa8df9816df148a94806ed340b7d20" translate="yes" xml:space="preserve">
          <source>Generates a radio button.</source>
          <target state="translated">라디오 버튼을 생성합니다.</target>
        </trans-unit>
        <trans-unit id="4211b9345387b675b9be0fc4617dcd0837432193" translate="yes" xml:space="preserve">
          <source>Generates a range input</source>
          <target state="translated">범위 입력을 생성합니다</target>
        </trans-unit>
        <trans-unit id="f1d665b37d2ee2aaaf57abb73a773d37fb5632a4" translate="yes" xml:space="preserve">
          <source>Generates a range input.</source>
          <target state="translated">범위 입력을 생성합니다.</target>
        </trans-unit>
        <trans-unit id="42b02a853b6591ae8dcaaf9e2b0f271bae8897d8" translate="yes" xml:space="preserve">
          <source>Generates a reset input to reset all the form fields to their original state</source>
          <target state="translated">모든 양식 필드를 원래 상태로 재설정하기위한 재설정 입력을 생성합니다.</target>
        </trans-unit>
        <trans-unit id="5f9c5b5c3c6b4005d0ded69c44513c4c93741343" translate="yes" xml:space="preserve">
          <source>Generates a reset input to reset all the form fields to their original state.</source>
          <target state="translated">모든 양식 필드를 원래 상태로 재설정하기 위해 재설정 입력을 생성합니다.</target>
        </trans-unit>
        <trans-unit id="c9376cf87944d2c7638464200c033426a186aa76" translate="yes" xml:space="preserve">
          <source>Generates a route match based on an arbitrary HTTP method</source>
          <target state="translated">임의의 HTTP 메소드를 기반으로 경로 일치를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="cc5394e9f36a89d2ae9bb46e099d38573bd6b481" translate="yes" xml:space="preserve">
          <source>Generates a route match based on an arbitrary HTTP method.</source>
          <target state="translated">임의의 HTTP 메소드를 기반으로 경로 일치를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="897983719926fe4ff3d98b2bae0351ca40ad6096" translate="yes" xml:space="preserve">
          <source>Generates a route to a static file in &lt;code&gt;priv/static&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;priv/static&lt;/code&gt; 에서 정적 파일에 대한 경로를 생성합니다</target>
        </trans-unit>
        <trans-unit id="894b7547e38d381fd5440a4e9164d424f886e4e7" translate="yes" xml:space="preserve">
          <source>Generates a route to handle a connect request to the given path</source>
          <target state="translated">주어진 경로에 대한 연결 요청을 처리하기위한 경로를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="574b4ca741e3f439c47b28cd49adf25fd2f68c1b" translate="yes" xml:space="preserve">
          <source>Generates a route to handle a connect request to the given path.</source>
          <target state="translated">주어진 경로에 대한 연결 요청을 처리하기위한 경로를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="378f585ff9da2c90adf66dd182b6c07d40c0b410" translate="yes" xml:space="preserve">
          <source>Generates a route to handle a delete request to the given path</source>
          <target state="translated">지정된 경로에 대한 삭제 요청을 처리하기위한 경로를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="2e5a45bd26b667751489c9867bc4ac2e1ad5f415" translate="yes" xml:space="preserve">
          <source>Generates a route to handle a delete request to the given path.</source>
          <target state="translated">지정된 경로에 대한 삭제 요청을 처리하기위한 경로를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="9b7eea3e2812a3a9f1485a0bf4b06ac9322cb592" translate="yes" xml:space="preserve">
          <source>Generates a route to handle a get request to the given path</source>
          <target state="translated">주어진 경로에 대한 get 요청을 처리하기위한 경로를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="57d3a2a07eedb652e1be011b09d407612fa940d1" translate="yes" xml:space="preserve">
          <source>Generates a route to handle a get request to the given path.</source>
          <target state="translated">주어진 경로에 대한 get 요청을 처리하기위한 경로를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="ad76b05490559045cdfdb8bde3bf7f1fbb5c58a4" translate="yes" xml:space="preserve">
          <source>Generates a route to handle a head request to the given path</source>
          <target state="translated">주어진 경로에 대한 헤드 요청을 처리하기위한 경로를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="90093949144eba1a5fb435edb853256751817dc8" translate="yes" xml:space="preserve">
          <source>Generates a route to handle a head request to the given path.</source>
          <target state="translated">주어진 경로에 대한 헤드 요청을 처리하기위한 경로를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="e24375171478c89552863fcfeadc3ce58f2e5bca" translate="yes" xml:space="preserve">
          <source>Generates a route to handle a options request to the given path</source>
          <target state="translated">주어진 경로에 대한 옵션 요청을 처리하기위한 경로를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="77c88cce859e3f038ecdbff85d2d730cb2bf13d0" translate="yes" xml:space="preserve">
          <source>Generates a route to handle a options request to the given path.</source>
          <target state="translated">주어진 경로에 대한 옵션 요청을 처리하기위한 경로를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="80ed50be25df94aebc7db8a8ad0804d3342708c1" translate="yes" xml:space="preserve">
          <source>Generates a route to handle a patch request to the given path</source>
          <target state="translated">주어진 경로에 대한 패치 요청을 처리하기위한 경로를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="cca725a12cd24948f36b9ede692ae61a76c694e0" translate="yes" xml:space="preserve">
          <source>Generates a route to handle a patch request to the given path.</source>
          <target state="translated">주어진 경로에 대한 패치 요청을 처리하기위한 경로를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="1ac815ff5f9cdaae6a2df79818543d53e1f2f23f" translate="yes" xml:space="preserve">
          <source>Generates a route to handle a post request to the given path</source>
          <target state="translated">지정된 경로에 대한 게시 요청을 처리하기위한 경로를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="6fd5d431492f5f17891de85401d2c1290f388443" translate="yes" xml:space="preserve">
          <source>Generates a route to handle a post request to the given path.</source>
          <target state="translated">지정된 경로에 대한 게시 요청을 처리하기위한 경로를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="2a9d46c0f90d8dd7ffb2914e6f3104c626432be2" translate="yes" xml:space="preserve">
          <source>Generates a route to handle a put request to the given path</source>
          <target state="translated">주어진 경로에 대한 넣기 요청을 처리하기위한 경로를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="f9ffc6392b8fbd3db7cb9e0d3dc9186949c8f8b7" translate="yes" xml:space="preserve">
          <source>Generates a route to handle a put request to the given path.</source>
          <target state="translated">주어진 경로에 대한 넣기 요청을 처리하기위한 경로를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="e0b014c7fd0d0d1d83b5a70fa8d6fe074e0f3052" translate="yes" xml:space="preserve">
          <source>Generates a route to handle a trace request to the given path</source>
          <target state="translated">주어진 경로에 대한 추적 요청을 처리하기위한 경로를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="221bae031a3004d5c2045808e65d68d8c217bcd4" translate="yes" xml:space="preserve">
          <source>Generates a route to handle a trace request to the given path.</source>
          <target state="translated">주어진 경로에 대한 추적 요청을 처리하기위한 경로를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="a62a15cee984de5f9b1d155a86ae8b908ee45da6" translate="yes" xml:space="preserve">
          <source>Generates a search input</source>
          <target state="translated">검색 입력을 생성합니다</target>
        </trans-unit>
        <trans-unit id="9a485964d5b7b8267fbecbe17ff5ca372d19bb8a" translate="yes" xml:space="preserve">
          <source>Generates a search input.</source>
          <target state="translated">검색 입력을 생성합니다.</target>
        </trans-unit>
        <trans-unit id="e8a0342fc5c68fc8986011bb012bd0c39bcd4083" translate="yes" xml:space="preserve">
          <source>Generates a secret and prints it to the terminal.</source>
          <target state="translated">비밀을 생성하여 터미널에 인쇄합니다.</target>
        </trans-unit>
        <trans-unit id="67e63e20fe6b5c241bb9891340bbc4e7f9f2e977" translate="yes" xml:space="preserve">
          <source>Generates a select tag with the given &lt;code&gt;options&lt;/code&gt;</source>
          <target state="translated">주어진 &lt;code&gt;options&lt;/code&gt; 으로 선택 태그를 생성합니다</target>
        </trans-unit>
        <trans-unit id="8387b222b8a18961d9656292381976a0bb723ec4" translate="yes" xml:space="preserve">
          <source>Generates a select tag with the given &lt;code&gt;options&lt;/code&gt;.</source>
          <target state="translated">주어진 &lt;code&gt;options&lt;/code&gt; 으로 선택 태그를 생성합니다 .</target>
        </trans-unit>
        <trans-unit id="af0d06afeae9859b4f3fd6e9e412d3a718e92c81" translate="yes" xml:space="preserve">
          <source>Generates a status message from the template name</source>
          <target state="translated">템플릿 이름에서 상태 메시지를 생성합니다</target>
        </trans-unit>
        <trans-unit id="7454d06c3dd95214098294a1b0310dac0b7a4878" translate="yes" xml:space="preserve">
          <source>Generates a status message from the template name.</source>
          <target state="translated">템플릿 이름에서 상태 메시지를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="067fc3be22bab148f6c9165e5da91f0df3fa5da9" translate="yes" xml:space="preserve">
          <source>Generates a submit button to send the form</source>
          <target state="translated">양식을 보내기 위해 제출 버튼을 생성합니다</target>
        </trans-unit>
        <trans-unit id="312f705dccca8c086547117e4724c8592db5695d" translate="yes" xml:space="preserve">
          <source>Generates a submit button to send the form.</source>
          <target state="translated">양식을 보낼 제출 버튼을 생성합니다.</target>
        </trans-unit>
        <trans-unit id="f4ea648663e608eaa4d4758ecd78961c842e565e" translate="yes" xml:space="preserve">
          <source>Generates a telephone input</source>
          <target state="translated">전화 입력을 생성합니다</target>
        </trans-unit>
        <trans-unit id="912392aacff0f7188b964ec552a88e06572c1c85" translate="yes" xml:space="preserve">
          <source>Generates a telephone input.</source>
          <target state="translated">전화 입력을 생성합니다.</target>
        </trans-unit>
        <trans-unit id="54aa2d4862224e6c0fb69837326cc7b97ce5c66a" translate="yes" xml:space="preserve">
          <source>Generates a text input</source>
          <target state="translated">텍스트 입력을 생성합니다</target>
        </trans-unit>
        <trans-unit id="73f0bd438fee7c9707ed766a9afb23c407583846" translate="yes" xml:space="preserve">
          <source>Generates a text input.</source>
          <target state="translated">텍스트 입력을 생성합니다.</target>
        </trans-unit>
        <trans-unit id="45397941ecf32426955313a201964be41c43f1da" translate="yes" xml:space="preserve">
          <source>Generates a textarea input</source>
          <target state="translated">텍스트 영역 입력을 생성합니다</target>
        </trans-unit>
        <trans-unit id="126b50f201a72f4c020abacab8f934f9f30a6581" translate="yes" xml:space="preserve">
          <source>Generates a textarea input.</source>
          <target state="translated">텍스트 영역 입력을 생성합니다.</target>
        </trans-unit>
        <trans-unit id="eceb224d2682e883c41b426e06844bbc0bb1dbfb" translate="yes" xml:space="preserve">
          <source>Generates a time input</source>
          <target state="translated">시간 입력을 생성합니다</target>
        </trans-unit>
        <trans-unit id="6248af3237dc2fb4fd35ad1108d254199730ac1e" translate="yes" xml:space="preserve">
          <source>Generates a time input.</source>
          <target state="translated">시간 입력을 생성합니다.</target>
        </trans-unit>
        <trans-unit id="0ae030fe064e790de454fd16af4f1f68f22484a3" translate="yes" xml:space="preserve">
          <source>Generates a token and stores it in the process dictionary if one does not exist.</source>
          <target state="translated">토큰을 생성하고 존재하지 않는 경우 프로세스 사전에 저장합니다.</target>
        </trans-unit>
        <trans-unit id="e07857e5bb53d01eb1dafeb1352fa46eae3a116c" translate="yes" xml:space="preserve">
          <source>Generates a version 4 (random) UUID</source>
          <target state="translated">버전 4 (임의) UUID를 생성합니다</target>
        </trans-unit>
        <trans-unit id="21e2aa08f9efa85d22010347be63b109be8c5a02" translate="yes" xml:space="preserve">
          <source>Generates a version 4 (random) UUID in the binary format</source>
          <target state="translated">이진 형식으로 버전 4 (임의) UUID를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="a0e42f792fb874b4044bce2c20dbf1af12c49012" translate="yes" xml:space="preserve">
          <source>Generates a version 4 (random) UUID in the binary format.</source>
          <target state="translated">이진 형식으로 버전 4 (임의) UUID를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="0f3d3d0bf68951efc2ef0156a57ac19451a2154c" translate="yes" xml:space="preserve">
          <source>Generates a version 4 (random) UUID.</source>
          <target state="translated">버전 4 (임의) UUID를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="7f629d614bd57112e09d421f86237a37bc2fa9a5" translate="yes" xml:space="preserve">
          <source>Generates an Ecto model in your Phoenix application.</source>
          <target state="translated">Phoenix 애플리케이션에서 Ecto 모델을 생성합니다.</target>
        </trans-unit>
        <trans-unit id="192881be6736fea74c466100ba43922580a0b06b" translate="yes" xml:space="preserve">
          <source>Generates an Ecto schema and migration.</source>
          <target state="translated">Ecto 스키마 및 마이그레이션을 생성합니다.</target>
        </trans-unit>
        <trans-unit id="3c003e1e5dc81ee91cde965669c00912afc2b27c" translate="yes" xml:space="preserve">
          <source>Generates an email input</source>
          <target state="translated">이메일 입력을 생성합니다</target>
        </trans-unit>
        <trans-unit id="c7bd255992aaeef9602f0be4b666b7be9fe3a2ba" translate="yes" xml:space="preserve">
          <source>Generates an email input.</source>
          <target state="translated">이메일 입력을 생성합니다.</target>
        </trans-unit>
        <trans-unit id="6504cdfcb718565b5576fc2158cd57efe4825bb4" translate="yes" xml:space="preserve">
          <source>Generates an embedded Ecto schema for casting/validating data outside the DB.</source>
          <target state="translated">DB 외부에서 데이터를 캐스트 / 검증하기위한 내장 Ecto 스키마를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="2cad790430badca14ec8c02cc664082faed9f493" translate="yes" xml:space="preserve">
          <source>Generates an img tag with a src</source>
          <target state="translated">src로 img 태그를 생성합니다</target>
        </trans-unit>
        <trans-unit id="9b6859233f63365d7a32da180d650f35004ce39e" translate="yes" xml:space="preserve">
          <source>Generates an img tag with a src.</source>
          <target state="translated">src를 사용하여 img 태그를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="94584e370048710080737b7da1191363a53d9074" translate="yes" xml:space="preserve">
          <source>Generates an url input</source>
          <target state="translated">URL 입력을 생성합니다</target>
        </trans-unit>
        <trans-unit id="41f536102076cb368a63c9729925c85b108feb67" translate="yes" xml:space="preserve">
          <source>Generates an url input.</source>
          <target state="translated">URL 입력을 생성합니다.</target>
        </trans-unit>
        <trans-unit id="be50e5d315403c8a6e5ed901af8b36c1c04a5c95" translate="yes" xml:space="preserve">
          <source>Generates controller, views, and context for an JSON resource.</source>
          <target state="translated">JSON 리소스에 대한 컨트롤러, 뷰 및 컨텍스트를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="f8b426df53681f88f2110c30af8bf84dbae2dbb1" translate="yes" xml:space="preserve">
          <source>Generates select tags for date</source>
          <target state="translated">날짜에 대한 선택 태그를 생성합니다</target>
        </trans-unit>
        <trans-unit id="900feb5d8076251ce1c88b1c50c88ed36d4df204" translate="yes" xml:space="preserve">
          <source>Generates select tags for date.</source>
          <target state="translated">날짜에 대한 선택 태그를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="33944458ee24e52c6f57b54406929743c95d1e0f" translate="yes" xml:space="preserve">
          <source>Generates select tags for datetime</source>
          <target state="translated">날짜 시간에 대한 선택 태그를 생성합니다</target>
        </trans-unit>
        <trans-unit id="b91c0777babdf510129bdd926e272571b56c507a" translate="yes" xml:space="preserve">
          <source>Generates select tags for datetime.</source>
          <target state="translated">날짜 / 시간에 대한 선택 태그를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="2989d503428e011977ec7d2d26ea57f0cd501ff1" translate="yes" xml:space="preserve">
          <source>Generates select tags for time</source>
          <target state="translated">시간에 대한 선택 태그를 생성합니다</target>
        </trans-unit>
        <trans-unit id="44c3290708cfe98a895d3932d31b3028cf656029" translate="yes" xml:space="preserve">
          <source>Generates select tags for time.</source>
          <target state="translated">시간에 대한 선택 태그를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="06abc3fc049f6aeb29e4374ef7a511dc801188d0" translate="yes" xml:space="preserve">
          <source>Generates the endpoint base URL without any path information</source>
          <target state="translated">경로 정보없이 엔드 포인트 기본 URL을 생성합니다.</target>
        </trans-unit>
        <trans-unit id="0c54d53d2a725dae194fd5931fc6e94b42a7bafb" translate="yes" xml:space="preserve">
          <source>Generates the endpoint base URL without any path information.</source>
          <target state="translated">경로 정보없이 엔드 포인트 기본 URL을 생성합니다.</target>
        </trans-unit>
        <trans-unit id="566783b0db0c0900209be301c7fb5794061562a0" translate="yes" xml:space="preserve">
          <source>Generates the endpoint base URL, but as a &lt;a href=&quot;https://hexdocs.pm/elixir/URI.html&quot;&gt;&lt;code&gt;URI&lt;/code&gt;&lt;/a&gt; struct</source>
          <target state="translated">엔드 포인트 기본 URL을 생성하지만 &lt;a href=&quot;https://hexdocs.pm/elixir/URI.html&quot;&gt; &lt;code&gt;URI&lt;/code&gt; &lt;/a&gt; 구조체로 생성</target>
        </trans-unit>
        <trans-unit id="a457480f3b7970598a96e97a308a2c57be1d9d62" translate="yes" xml:space="preserve">
          <source>Generates the endpoint base URL, but as a &lt;a href=&quot;https://hexdocs.pm/elixir/URI.html&quot;&gt;&lt;code&gt;URI&lt;/code&gt;&lt;/a&gt; struct.</source>
          <target state="translated">엔드 포인트 기본 URL을 생성하지만 &lt;a href=&quot;https://hexdocs.pm/elixir/URI.html&quot;&gt; &lt;code&gt;URI&lt;/code&gt; &lt;/a&gt; 구조체 로 생성합니다 .</target>
        </trans-unit>
        <trans-unit id="a56e0e8f6c89e5bcd6f332dfe4a7f18f1d712206" translate="yes" xml:space="preserve">
          <source>Generates the path information when routing to this endpoint</source>
          <target state="translated">이 엔드 포인트로 라우팅 할 때 경로 정보를 생성합니다</target>
        </trans-unit>
        <trans-unit id="9de6c6bdf8366eaa60f44b75556d6710e9111768" translate="yes" xml:space="preserve">
          <source>Generates the path information when routing to this endpoint.</source>
          <target state="translated">이 엔드 포인트로 라우팅 할 때 경로 정보를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="c7afc8fed6ae07096bcda43b2c180de120f70394" translate="yes" xml:space="preserve">
          <source>Generating without a schema</source>
          <target state="translated">스키마없이 생성</target>
        </trans-unit>
        <trans-unit id="3b22374ca8da32cfe346b6ca99bea860d67b2484" translate="yes" xml:space="preserve">
          <source>Generating without a schema or context file</source>
          <target state="translated">스키마 또는 컨텍스트 파일없이 생성</target>
        </trans-unit>
        <trans-unit id="24e7830f821b426f5a51f69a462e899b6faff3ad" translate="yes" xml:space="preserve">
          <source>Gets a change or returns a default value</source>
          <target state="translated">변경을 가져 오거나 기본값을 반환</target>
        </trans-unit>
        <trans-unit id="20c69fc2d13ee5ae1e5c766de8168c5e86eac703" translate="yes" xml:space="preserve">
          <source>Gets a change or returns a default value.</source>
          <target state="translated">변경을 가져 오거나 기본값을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="ae896285359a3676cf6a8e84fe64f02a1009d1d3" translate="yes" xml:space="preserve">
          <source>Gets a field from changes or from the data</source>
          <target state="translated">변경 또는 데이터에서 필드를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="bd5eebfdc41b8efa306222262683e1e2cb53f629" translate="yes" xml:space="preserve">
          <source>Gets a field from changes or from the data.</source>
          <target state="translated">변경 또는 데이터에서 필드를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="f0ad8554cfab9a4c20a7b61ea4176e67168e383d" translate="yes" xml:space="preserve">
          <source>Gets a path relative to the application path</source>
          <target state="translated">응용 프로그램 경로와 관련된 경로를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="54e09b22dc0bfd8c0d4977361cbe415e92fbad7a" translate="yes" xml:space="preserve">
          <source>Gets a path relative to the application path.</source>
          <target state="translated">응용 프로그램 경로와 관련된 경로를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="997af9359b0274152d5976f8e8ca9230b5813c54" translate="yes" xml:space="preserve">
          <source>Gets presences tracked under a given topic and key pair</source>
          <target state="translated">주어진 주제와 키 페어에서 현재 상태를 추적합니다.</target>
        </trans-unit>
        <trans-unit id="48f0745d124d4e83473eebb47a6d31ab2415d144" translate="yes" xml:space="preserve">
          <source>Gets presences tracked under a given topic and key pair.</source>
          <target state="translated">주어진 주제와 키 페어에서 현재 상태를 추적합니다.</target>
        </trans-unit>
        <trans-unit id="97e4290574c5ed51caafb10b2de1e172c163410b" translate="yes" xml:space="preserve">
          <source>Gets the CSRF token</source>
          <target state="translated">CSRF 토큰을 가져옵니다</target>
        </trans-unit>
        <trans-unit id="08349fa609238bb75520280fb127235024b0eb68" translate="yes" xml:space="preserve">
          <source>Gets the CSRF token for the associated URL (as a string or a URI struct)</source>
          <target state="translated">연결된 URL에 대한 CSRF 토큰을 가져옵니다 (문자열 또는 URI 구조체로).</target>
        </trans-unit>
        <trans-unit id="ff08f49db7e1265b7a0948738482fffe83f058a7" translate="yes" xml:space="preserve">
          <source>Gets the CSRF token for the associated URL (as a string or a URI struct).</source>
          <target state="translated">연결된 URL의 CSRF 토큰 (문자열 또는 URI 구조체)을 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="8d4fe3f1095bcbf480568f707f0f32660bfed495" translate="yes" xml:space="preserve">
          <source>Gets the CSRF token.</source>
          <target state="translated">CSRF 토큰을 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="cacf574b487bbebb0a08dffbbbde22c3caa9dd7c" translate="yes" xml:space="preserve">
          <source>Gets the given key from the flash storage</source>
          <target state="translated">플래시 스토리지에서 지정된 키를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="39a3c0f8225971cc340f65e20abcd3cfd296785c" translate="yes" xml:space="preserve">
          <source>Gets the given key from the flash storage.</source>
          <target state="translated">플래시 스토리지에서 지정된 키를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="96a62524d2bf17765eab415eae3c27d04f1cdf6a" translate="yes" xml:space="preserve">
          <source>Gets the input type for a given field</source>
          <target state="translated">주어진 필드에 대한 입력 유형을 가져옵니다</target>
        </trans-unit>
        <trans-unit id="66f52ba2db0eb578cab960fd32bdb155e164ce6a" translate="yes" xml:space="preserve">
          <source>Gets the input type for a given field.</source>
          <target state="translated">주어진 필드의 입력 유형을 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="b27071d61374355defa4f7ba87856a1483070f41" translate="yes" xml:space="preserve">
          <source>Gets the metadata from the given struct</source>
          <target state="translated">주어진 구조체에서 메타 데이터를 가져옵니다</target>
        </trans-unit>
        <trans-unit id="678baa7f889b181e04ecd1461201171108459f0b" translate="yes" xml:space="preserve">
          <source>Gets the metadata from the given struct.</source>
          <target state="translated">주어진 구조체에서 메타 데이터를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="1baad63621d111aecd80381a2421d2b880bc0a22" translate="yes" xml:space="preserve">
          <source>Gets the whole flash storage</source>
          <target state="translated">전체 플래시 스토리지를 가져옵니다</target>
        </trans-unit>
        <trans-unit id="64814fa71bd4c722ebaa70f584d80370c84fe56a" translate="yes" xml:space="preserve">
          <source>Gets the whole flash storage.</source>
          <target state="translated">전체 플래시 저장소를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="f179b6f36465b5aac2f67605586252775def9c70" translate="yes" xml:space="preserve">
          <source>Good:</source>
          <target state="translated">Good:</target>
        </trans-unit>
        <trans-unit id="eef0115acb31caa0fbd5afc01384c4545e7d44b5" translate="yes" xml:space="preserve">
          <source>Gracefully shuts down by broadcasting permdown to all replicas</source>
          <target state="translated">모든 복제본에 permdown을 브로드 캐스트하여 정상적으로 종료</target>
        </trans-unit>
        <trans-unit id="37401107a71883efc56c3d07974d72873ad8f857" translate="yes" xml:space="preserve">
          <source>Gracefully shuts down by broadcasting permdown to all replicas.</source>
          <target state="translated">모든 복제본에 permdown을 브로드 캐스트하여 정상적으로 종료합니다.</target>
        </trans-unit>
        <trans-unit id="573359f98da0f46d93ce375944dfc230b3eb131f" translate="yes" xml:space="preserve">
          <source>Groups together rows from the schema that have the same values in the given fields. Using &lt;code&gt;group_by&lt;/code&gt; &amp;ldquo;groups&amp;rdquo; the query giving it different semantics in the &lt;code&gt;select&lt;/code&gt; expression. If a query is grouped, only fields that were referenced in the &lt;code&gt;group_by&lt;/code&gt; can be used in the &lt;code&gt;select&lt;/code&gt; or if the field is given as an argument to an aggregate function.</source>
          <target state="translated">주어진 필드에서 동일한 값을 가진 스키마의 행을 그룹화합니다. &lt;code&gt;group_by&lt;/code&gt; 를 사용 하여 쿼리를&amp;ldquo;그룹화&amp;rdquo;하면 &lt;code&gt;select&lt;/code&gt; 표현식 에 다른 의미를 부여합니다 . 쿼리가 그룹화되어 있으면에서 참조 된 필드 만 &lt;code&gt;group_by&lt;/code&gt; 에서 사용할 수있는 &lt;code&gt;select&lt;/code&gt; 하거나 필드가 집계 함수에 인수로 주어진다면.</target>
        </trans-unit>
        <trans-unit id="67de3c63a9bd94b74bfc86944368ab7bcdf6d849" translate="yes" xml:space="preserve">
          <source>Guards</source>
          <target state="translated">Guards</target>
        </trans-unit>
        <trans-unit id="c41e81014d243f2d8875ff68c15a184a372a6901" translate="yes" xml:space="preserve">
          <source>HTTP/2 does not support chunking and will instead stream the response without a transfer encoding. When using HTTP/1.1, the Cowboy adapter will stream the response instead of emitting chunks if the &lt;code&gt;content-length&lt;/code&gt; header has been set before calling &lt;a href=&quot;#send_chunked/2&quot;&gt;&lt;code&gt;send_chunked/2&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">HTTP / 2는 청킹을 지원하지 않으며 대신 전송 인코딩없이 응답을 스트리밍합니다. HTTP / 1.1을 사용할 때 카우보이 어댑터는 &lt;a href=&quot;#send_chunked/2&quot;&gt; &lt;code&gt;send_chunked/2&lt;/code&gt; &lt;/a&gt; 를 호출하기 전에 &lt;code&gt;content-length&lt;/code&gt; 헤더가 설정된 경우 청크를 방출하는 대신 응답을 스트리밍합니다 .</target>
        </trans-unit>
        <trans-unit id="657152afda0bee08d931b261408d17d0b6e96e52" translate="yes" xml:space="preserve">
          <source>Halting a plug pipeline</source>
          <target state="translated">플러그 파이프 라인 정지</target>
        </trans-unit>
        <trans-unit id="1da643070952e956d86d49f8c58821c92fb71c6e" translate="yes" xml:space="preserve">
          <source>Halts the Plug pipeline by preventing further plugs downstream from being invoked. See the docs for &lt;a href=&quot;plug.builder&quot;&gt;&lt;code&gt;Plug.Builder&lt;/code&gt;&lt;/a&gt; for more information on halting a Plug pipeline</source>
          <target state="translated">추가 플러그 다운 스트림이 호출되지 않도록하여 플러그 파이프 라인을 정지시킵니다. 플러그 파이프 라인 중지에 대한 자세한 내용 은 &lt;a href=&quot;plug.builder&quot;&gt; &lt;code&gt;Plug.Builder&lt;/code&gt; 관련&lt;/a&gt; 문서를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="d9755cdf0347f99433eabcbc87b332485d5af95e" translate="yes" xml:space="preserve">
          <source>Halts the Plug pipeline by preventing further plugs downstream from being invoked. See the docs for &lt;a href=&quot;plug.builder&quot;&gt;&lt;code&gt;Plug.Builder&lt;/code&gt;&lt;/a&gt; for more information on halting a Plug pipeline.</source>
          <target state="translated">추가 플러그 다운 스트림이 호출되지 않도록하여 플러그 파이프 라인을 정지시킵니다. 플러그 파이프 라인 중지에 대한 자세한 내용 은 &lt;a href=&quot;plug.builder&quot;&gt; &lt;code&gt;Plug.Builder&lt;/code&gt; &lt;/a&gt; 문서를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="1ccd69770e67bfc169e02509f802dfa9b974fafd" translate="yes" xml:space="preserve">
          <source>Halts the Plug pipeline by preventing further plugs downstream from being invoked. See the docs for &lt;a href=&quot;plug.builder&quot;&gt;&lt;code&gt;Plug.Builder&lt;/code&gt;&lt;/a&gt; for more information on halting a plug pipeline</source>
          <target state="translated">추가 플러그 다운 스트림이 호출되지 않도록하여 플러그 파이프 라인을 정지시킵니다. 플러그 파이프 라인 정지에 대한 자세한 내용 은 &lt;a href=&quot;plug.builder&quot;&gt; &lt;code&gt;Plug.Builder&lt;/code&gt; 관련&lt;/a&gt; 문서를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="eb6de5553592ef40a29a33d8a4f534ccdca762c0" translate="yes" xml:space="preserve">
          <source>Halts the Plug pipeline by preventing further plugs downstream from being invoked. See the docs for &lt;a href=&quot;plug.builder&quot;&gt;&lt;code&gt;Plug.Builder&lt;/code&gt;&lt;/a&gt; for more information on halting a plug pipeline.</source>
          <target state="translated">추가 플러그 다운 스트림이 호출되지 않도록하여 플러그 파이프 라인을 정지시킵니다. 플러그 파이프 라인 중지에 대한 자세한 내용 은 &lt;a href=&quot;plug.builder&quot;&gt; &lt;code&gt;Plug.Builder&lt;/code&gt; &lt;/a&gt; 문서를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="5af19f504ed390f3616fe54d71be3c982a36fb0f" translate="yes" xml:space="preserve">
          <source>Handles the socket connection</source>
          <target state="translated">소켓 연결 처리</target>
        </trans-unit>
        <trans-unit id="5b3b8d6bf0e0ed4f6147a59b927ffe862e49bdc4" translate="yes" xml:space="preserve">
          <source>Handles the socket connection.</source>
          <target state="translated">소켓 연결을 처리합니다.</target>
        </trans-unit>
        <trans-unit id="58514a1474cd3c04b6d7d45448e942f451571bf2" translate="yes" xml:space="preserve">
          <source>Handling of incoming messages</source>
          <target state="translated">수신 메시지 처리</target>
        </trans-unit>
        <trans-unit id="2b9f4508a5e4fc2c2b5ef7294940c248c8c75fd4" translate="yes" xml:space="preserve">
          <source>Handling of outgoing messages</source>
          <target state="translated">발신 메시지 처리</target>
        </trans-unit>
        <trans-unit id="791b3d718f251049300fc903f9b075211bce25f5" translate="yes" xml:space="preserve">
          <source>Handling request data can be done through the &lt;a href=&quot;../plug.parsers#content&quot;&gt;&lt;code&gt;Plug.Parsers&lt;/code&gt;&lt;/a&gt; plug. It provides support for parsing URL-encoded, form-data, and JSON data as well as providing a behaviour that others parsers can adopt.</source>
          <target state="translated">처리 요청 데이터는 &lt;a href=&quot;../plug.parsers#content&quot;&gt; &lt;code&gt;Plug.Parsers&lt;/code&gt; &lt;/a&gt; 플러그를 통해 수행 할 수 있습니다 . URL로 인코딩 된, 양식 데이터 및 JSON 데이터를 구문 분석하고 다른 구문 분석기가 채택 할 수있는 동작을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="b5824e50c0788d6515b063060ac394cb11876c16" translate="yes" xml:space="preserve">
          <source>Handling request data can be done through the &lt;a href=&quot;plug.parsers#content&quot;&gt;&lt;code&gt;Plug.Parsers&lt;/code&gt;&lt;/a&gt; plug. It provides support for parsing URL-encoded, form-data, and JSON data as well as providing a behaviour that others parsers can adopt.</source>
          <target state="translated">처리 요청 데이터는 &lt;a href=&quot;plug.parsers#content&quot;&gt; &lt;code&gt;Plug.Parsers&lt;/code&gt; &lt;/a&gt; 플러그를 통해 수행 할 수 있습니다 . URL로 인코딩 된, 양식 데이터 및 JSON 데이터를 구문 분석하고 다른 구문 분석기가 채택 할 수있는 동작을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="87609125a9917f1d1304583fa33c13ec60b69a2f" translate="yes" xml:space="preserve">
          <source>Having these different types allows developers to choose a type that will be compatible with the database and your project&amp;rsquo;s precision requirements. For example, some older versions of MySQL do not support microseconds in datetime fields.</source>
          <target state="translated">이러한 다른 유형을 사용하면 개발자는 데이터베이스 및 프로젝트의 정밀 요구 사항과 호환되는 유형을 선택할 수 있습니다. 예를 들어, 일부 이전 버전의 MySQL은 날짜 시간 필드에서 마이크로 초를 지원하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="3c9b3433e6f225e4ae00ef2041d44d91bfbf7113" translate="yes" xml:space="preserve">
          <source>Helpers</source>
          <target state="translated">Helpers</target>
        </trans-unit>
        <trans-unit id="2a35b8be1233091ad5332bbf56f5dc2f7b98ac70" translate="yes" xml:space="preserve">
          <source>Helpers are automatically generated based on the controller name. For example, the route:</source>
          <target state="translated">헬퍼는 컨트롤러 이름에 따라 자동으로 생성됩니다. 예를 들어 경로는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="42e29e501e0e0abe2c6edb0ec3f800ed7c669e6a" translate="yes" xml:space="preserve">
          <source>Helpers related to formatting text.</source>
          <target state="translated">텍스트 서식과 관련된 도우미.</target>
        </trans-unit>
        <trans-unit id="0d4c3aa7d2de3e04c2fa70e9a23a0cc750641d4a" translate="yes" xml:space="preserve">
          <source>Helpers related to producing HTML forms.</source>
          <target state="translated">HTML 양식 생성과 관련된 도우미</target>
        </trans-unit>
        <trans-unit id="8d3f6ca83c967080b0bd89bc34ea0c0450fad6f1" translate="yes" xml:space="preserve">
          <source>Helpers related to producing HTML tags within templates.</source>
          <target state="translated">템플릿 내에서 HTML 태그 생성과 관련된 도우미.</target>
        </trans-unit>
        <trans-unit id="9cdd2430bc9221c06b037fdb8209b829394de4f3" translate="yes" xml:space="preserve">
          <source>Here is an example of &lt;a href=&quot;plug.parsers&quot;&gt;&lt;code&gt;Plug.Parsers&lt;/code&gt;&lt;/a&gt; can be used in a &lt;a href=&quot;plug.router#content&quot;&gt;&lt;code&gt;Plug.Router&lt;/code&gt;&lt;/a&gt; router to parse the JSON-encoded body of a POST request:</source>
          <target state="translated">다음의 예 &lt;a href=&quot;plug.parsers&quot;&gt; &lt;code&gt;Plug.Parsers&lt;/code&gt; 는&lt;/a&gt; (A)에 사용될 수 &lt;a href=&quot;plug.router#content&quot;&gt; &lt;code&gt;Plug.Router&lt;/code&gt; 의&lt;/a&gt; POST 요청의 JSON 인코딩 체를 파싱 라우터 :</target>
        </trans-unit>
        <trans-unit id="cf8a0f224b439f3a7c58360fbb55ef423905c7d4" translate="yes" xml:space="preserve">
          <source>Here is an example of how both modules could be used in an application:</source>
          <target state="translated">다음은 응용 프로그램에서 두 모듈을 모두 사용하는 방법에 대한 예입니다.</target>
        </trans-unit>
        <trans-unit id="514a051b8ea91a8358dacf4b2fa3b9efa3ab46e1" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s an example of a function plug:</source>
          <target state="translated">다음은 함수 플러그의 예입니다.</target>
        </trans-unit>
        <trans-unit id="afa6cca227f184cb839f4bb2a488e237e45cbd46" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s an example of a module plug:</source>
          <target state="translated">다음은 모듈 플러그의 예입니다.</target>
        </trans-unit>
        <trans-unit id="294bc9dc3de330e00af0c679783e2c3ab4b482ed" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s an example of receiving an incoming &lt;code&gt;&quot;new_msg&quot;&lt;/code&gt; event from one client, and broadcasting the message to all topic subscribers for this socket.</source>
          <target state="translated">다음 은 한 클라이언트에서 &lt;code&gt;&quot;new_msg&quot;&lt;/code&gt; 이벤트를 수신 하여이 소켓의 모든 주제 구독자에게 메시지를 브로드 캐스트하는 예입니다.</target>
        </trans-unit>
        <trans-unit id="172de218d867931358663fe72b49811c80d28ce7" translate="yes" xml:space="preserve">
          <source>Here, a request to &lt;code&gt;/foo/BAZ/qux&lt;/code&gt; will be forwarded to the &lt;code&gt;FooPlug&lt;/code&gt; plug, which will receive what it will see as a request to &lt;code&gt;/&lt;/code&gt;, and &lt;code&gt;conn.params[&quot;bar&quot;]&lt;/code&gt; will be set to &lt;code&gt;&quot;BAZ&quot;&lt;/code&gt;.</source>
          <target state="translated">여기서 &lt;code&gt;/foo/BAZ/qux&lt;/code&gt; 에 대한 요청 은 &lt;code&gt;FooPlug&lt;/code&gt; 플러그 로 전달되며, FooPlug 플러그는 &lt;code&gt;/&lt;/code&gt; 에 대한 요청으로 표시되는 것을 수신 하고 &lt;code&gt;conn.params[&quot;bar&quot;]&lt;/code&gt; 는 &lt;code&gt;&quot;BAZ&quot;&lt;/code&gt; 로 설정됩니다 .</target>
        </trans-unit>
        <trans-unit id="5b3268c27e7d59601c440ed37c24688618bcf6ca" translate="yes" xml:space="preserve">
          <source>Hidden fields</source>
          <target state="translated">숨겨진 필드</target>
        </trans-unit>
        <trans-unit id="eef8e89aeb708a408921fec1b9e87c4d04faaced" translate="yes" xml:space="preserve">
          <source>Hints</source>
          <target state="translated">Hints</target>
        </trans-unit>
        <trans-unit id="c9bd403a4e9a302e8f2ed9f94925a54db8a68b9f" translate="yes" xml:space="preserve">
          <source>How your migration should be structured depends on the value you pass in &lt;code&gt;:join_through&lt;/code&gt;. If &lt;code&gt;:join_through&lt;/code&gt; is simply a string, representing a table, you may define a table without primary keys and you must not include any further columns, as those values won&amp;rsquo;t be set by Ecto:</source>
          <target state="translated">마이그레이션을 구성하는 방법은 &lt;code&gt;:join_through&lt;/code&gt; 에 전달하는 값에 따라 다릅니다 . 경우 &lt;code&gt;:join_through&lt;/code&gt; 테이블을 나타내는, 단순히 문자열, 당신은 기본 키가없는 테이블을 정의 할 수 있으며, 그 값이 체외로 설정되지 않습니다 당신은 더 열을 포함하지 않아야합니다 :</target>
        </trans-unit>
        <trans-unit id="7ca34d2ca00362f79bd18266ad0ec21713be1edf" translate="yes" xml:space="preserve">
          <source>However, &lt;a href=&quot;plug.static#content&quot;&gt;&lt;code&gt;Plug.Static&lt;/code&gt;&lt;/a&gt; also supports direct cache control by using versioned query strings. If the request query string starts with &amp;ldquo;?vsn=&amp;rdquo;, &lt;a href=&quot;plug.static#content&quot;&gt;&lt;code&gt;Plug.Static&lt;/code&gt;&lt;/a&gt; assumes the application is versioning assets and does not set the &lt;code&gt;ETag&lt;/code&gt; header, meaning the cache behaviour will be specified solely by the &lt;code&gt;cache_control_for_vsn_requests&lt;/code&gt; config, which defaults to &lt;code&gt;&quot;public, max-age=31536000&quot;&lt;/code&gt;.</source>
          <target state="translated">그러나 &lt;a href=&quot;plug.static#content&quot;&gt; &lt;code&gt;Plug.Static&lt;/code&gt; &lt;/a&gt; 은 버전이 지정된 쿼리 문자열을 사용하여 직접 캐시 제어를 지원합니다. 요청 쿼리 문자열이 &quot;? vsn =&quot;으로 시작하는 경우 &lt;a href=&quot;plug.static#content&quot;&gt; &lt;code&gt;Plug.Static&lt;/code&gt; &lt;/a&gt; 은 응용 프로그램이 버전 자산이며 &lt;code&gt;ETag&lt;/code&gt; 헤더를 설정하지 않는다고 가정합니다 . 즉, 캐시 동작은 &lt;code&gt;cache_control_for_vsn_requests&lt;/code&gt; 구성에 의해서만 지정 되며 기본값은 &lt;code&gt;&quot;public, max-age=31536000&quot;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="92b6ba6983e86cfb8b7f8a1c8aa387837993e78b" translate="yes" xml:space="preserve">
          <source>However, because constraints are only checked if all validations succeed, this function can be used as an early check to provide early feedback to users, since most conflicting data will have been inserted prior to the current validation phase.</source>
          <target state="translated">그러나 모든 유효성 검사가 성공한 경우에만 제약 조건을 검사하므로이 기능은 대부분의 충돌하는 데이터가 현재 유효성 검사 단계 이전에 삽입되었으므로 사용자에게 조기 피드백을 제공하기위한 조기 검사로 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="92d4b9ddb4851e5cb9caec7c806e9ed043982b19" translate="yes" xml:space="preserve">
          <source>However, changesets can also be used with &amp;ldquo;regular&amp;rdquo; structs too by passing a tuple with the data and its types:</source>
          <target state="translated">그러나 변경 세트는 데이터 및 해당 유형과 함께 튜플을 전달하여 &quot;일반&quot;구조체와 함께 사용할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="9c75a911a92357bb55a72a4f5cda6890aa2fa06e" translate="yes" xml:space="preserve">
          <source>However, developers can use the preload functionality in queries to automatically pre-populate the field:</source>
          <target state="translated">그러나 개발자는 쿼리에서 사전로드 기능을 사용하여 필드를 자동으로 미리 채울 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e072c9f502e82c76107b9c680016ea26f2459bff" translate="yes" xml:space="preserve">
          <source>However, for convenience, this protocol can also be derivable. For example:</source>
          <target state="translated">그러나 편의상이 프로토콜을 파생 할 수도 있습니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="d2e281662c4868a83f42fe2d3a37e4b42a7ba94d" translate="yes" xml:space="preserve">
          <source>However, if the client had sent an expired or otherwise invalid token &lt;a href=&quot;#verify/4&quot;&gt;&lt;code&gt;verify/4&lt;/code&gt;&lt;/a&gt; would have returned an error instead:</source>
          <target state="translated">그러나 클라이언트가 만료되었거나 유효하지 않은 토큰을 보낸 경우 &lt;a href=&quot;#verify/4&quot;&gt; &lt;code&gt;verify/4&lt;/code&gt; &lt;/a&gt; 는 대신 오류를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="06e4154438c600a0964d2ae325cad0bcb77711e5" translate="yes" xml:space="preserve">
          <source>However, if you attempt to persist the struct above, an error will be raised since Ecto validates the types when sending them to the adapter/database.</source>
          <target state="translated">그러나 위의 구조체를 유지하려고 시도하면 Ecto가 유형을 어댑터 / 데이터베이스로 보낼 때 유형을 확인하므로 오류가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="92a0deea3d522aed6c2af612ee37d11179610223" translate="yes" xml:space="preserve">
          <source>However, if your &lt;code&gt;:join_through&lt;/code&gt; is a schema, like &lt;code&gt;MyApp.PostTag&lt;/code&gt;, your join table may be structured as any other table in your codebase, including timestamps:</source>
          <target state="translated">귀하의 경우, &lt;code&gt;:join_through&lt;/code&gt; 이 같은 스키마입니다 &lt;code&gt;MyApp.PostTag&lt;/code&gt; 가 , 당신의 가입 테이블은 타임 스탬프를 포함하여 코드베이스의 다른 테이블로 구성 할 수있다 :</target>
        </trans-unit>
        <trans-unit id="5054280086d854890f69bc24ac26fee32ed61037" translate="yes" xml:space="preserve">
          <source>However, keep in mind that if a join is removed and its bindings were referenced elsewhere, the bindings won&amp;rsquo;t be removed, leading to a query that won&amp;rsquo;t compile.</source>
          <target state="translated">그러나 조인이 제거되고 바인딩이 다른 곳에서 참조 된 경우 바인딩이 제거되지 않아 쿼리가 컴파일되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="418e05e8a16e7c15648cf7bdddb205991c4f4a14" translate="yes" xml:space="preserve">
          <source>However, most commonly, structs are cast, validated and manipulated with the &lt;a href=&quot;ecto.changeset&quot;&gt;&lt;code&gt;Ecto.Changeset&lt;/code&gt;&lt;/a&gt; module.</source>
          <target state="translated">그러나 가장 일반적으로 구조체는 &lt;a href=&quot;ecto.changeset&quot;&gt; &lt;code&gt;Ecto.Changeset&lt;/code&gt; &lt;/a&gt; 모듈을 사용하여 캐스팅, 유효성 검사 및 조작됩니다 .</target>
        </trans-unit>
        <trans-unit id="c15cb8377f6937f642e813f984385d51f7b4176e" translate="yes" xml:space="preserve">
          <source>However, note that defining a window is not necessary, as the window definition can be given as the second argument to &lt;code&gt;over&lt;/code&gt;:</source>
          <target state="translated">그러나 window 정의는 &lt;code&gt;over&lt;/code&gt; 에 대한 두 번째 인수로 제공 될 수 있으므로 window 정의는 필요하지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="69818f21f7d2e8e3d4c95d045561623815bfdb97" translate="yes" xml:space="preserve">
          <source>Identifies the socket connection</source>
          <target state="translated">소켓 연결을 식별합니다</target>
        </trans-unit>
        <trans-unit id="a1248f63e6d463c737ae4f281ae99a7acd6c280d" translate="yes" xml:space="preserve">
          <source>Identifies the socket connection.</source>
          <target state="translated">소켓 연결을 식별합니다.</target>
        </trans-unit>
        <trans-unit id="c2b9e9831550c1277fc0f8c66e430ed4b934322f" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;#c:transaction/2&quot;&gt;&lt;code&gt;transaction/2&lt;/code&gt;&lt;/a&gt; is called inside another transaction, the function is simply executed, without wrapping the new transaction call in any way. If there is an error in the inner transaction and the error is rescued, or the inner transaction is rolled back, the whole outer transaction is marked as tainted, guaranteeing nothing will be committed.</source>
          <target state="translated">경우 &lt;a href=&quot;#c:transaction/2&quot;&gt; &lt;code&gt;transaction/2&lt;/code&gt; &lt;/a&gt; 다른 트랜잭션 내에서 호출되는 함수는 단순히 어떤 방식으로 새로운 트랜잭션 호출을 포장하지 않고 실행됩니다. 내부 트랜잭션에 오류가 있고 오류가 복구되거나 내부 트랜잭션이 롤백되면 전체 외부 트랜잭션이 오염 된 것으로 표시되어 커밋 된 것이 없음을 보장합니다.</target>
        </trans-unit>
        <trans-unit id="48bb3facdf6a618d730a68a131d48750e21adc3a" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;:init_opts&lt;/code&gt; is undefined, then all remaining options are passed to the target plug.</source>
          <target state="translated">&lt;code&gt;:init_opts&lt;/code&gt; 가 정의되지 않은 경우 나머지 모든 옵션이 대상 플러그로 전달됩니다.</target>
        </trans-unit>
        <trans-unit id="d7b518d769ddb0e8a385ef70577decbd4185956c" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;:select_merge&lt;/code&gt; is called and there is no value selected previously, it will default to the source, &lt;code&gt;p&lt;/code&gt; in the example above.</source>
          <target state="translated">경우 &lt;code&gt;:select_merge&lt;/code&gt; 가 전화해서 이전에 선택한 값이없는, 그것은 소스로 기본 설정됩니다 &lt;code&gt;p&lt;/code&gt; 위의 예이다.</target>
        </trans-unit>
        <trans-unit id="39bb4cb75be5b52a2198bb0576f54f0e0ede32c4" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;charset&lt;/code&gt; is &lt;code&gt;nil&lt;/code&gt;, the value of the &lt;code&gt;&quot;content-type&quot;&lt;/code&gt; response header won&amp;rsquo;t specify a charset.</source>
          <target state="translated">경우 &lt;code&gt;charset&lt;/code&gt; 이다 &lt;code&gt;nil&lt;/code&gt; ,의 값 &lt;code&gt;&quot;content-type&quot;&lt;/code&gt; 응답 헤더는 문자 집합을 지정하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="a05c265ccb7acfd4d24ba0e20a24a92a6ce9889f" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;limit&lt;/code&gt; is given twice, it overrides the previous value.</source>
          <target state="translated">경우 &lt;code&gt;limit&lt;/code&gt; 두 번 주어, 그것은 이전의 값을 대체합니다.</target>
        </trans-unit>
        <trans-unit id="e957bc885302ec7685e98cd24a82719aa373a888" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;lock&lt;/code&gt; is used more than once, the last one used takes precedence.</source>
          <target state="translated">경우 &lt;code&gt;lock&lt;/code&gt; 두 번 이상 사용되며, 마지막으로 사용한 사람은 우선합니다.</target>
        </trans-unit>
        <trans-unit id="90da74aa2f941149e52e2553f73747df1e9ff078" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;nil&lt;/code&gt; is given as id, a new session id should be generated and returned.</source>
          <target state="translated">경우 &lt;code&gt;nil&lt;/code&gt; ID로 주어진 새로운 세션 ID를 생성하여 반환한다.</target>
        </trans-unit>
        <trans-unit id="7d493634e419d6aa39da5fc4a5f636e40e36f305" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;offset&lt;/code&gt; is given twice, it overrides the previous value.</source>
          <target state="translated">경우 &lt;code&gt;offset&lt;/code&gt; 두 번 주어, 그것은 이전의 값을 대체합니다.</target>
        </trans-unit>
        <trans-unit id="972e323b8fae502f4935411636b7be015afc29ef" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;options&lt;/code&gt; is map or keyword list where the first element is a string, atom or integer and the second element is a list or a map, it is assumed the key will be wrapped in an &lt;code&gt;&amp;lt;optgroup&amp;gt;&lt;/code&gt; and the value will be used to generate &lt;code&gt;&amp;lt;options&amp;gt;&lt;/code&gt; nested under the group.</source>
          <target state="translated">경우 &lt;code&gt;options&lt;/code&gt; 첫 번째 요소는 문자열 원자 또는 정수 번째 요소 맵 또는 키워드 목록은 목록 또는 맵이다이를 키 래핑한다 상정되는 &lt;code&gt;&amp;lt;optgroup&amp;gt;&lt;/code&gt; 상기 값 생성하는데 사용될 &lt;code&gt;&amp;lt;options&amp;gt;&lt;/code&gt; 은 그룹 아래에 중첩됩니다.</target>
        </trans-unit>
        <trans-unit id="a3421dda344b70b936418fb88ce89a791460b02d" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;path_or_action&lt;/code&gt; is a string, it is considered to be the request path and stored as so in the connection. If an atom, it is assumed to be an action and the connection is dispatched to the given action.</source>
          <target state="translated">경우 &lt;code&gt;path_or_action&lt;/code&gt; 은 문자열입니다, 요청 경로로 간주하고 연결에 있도록 저장됩니다. 원자 인 경우, 조치 인 것으로 가정하고 연결이 지정된 조치로 디스패치됩니다.</target>
        </trans-unit>
        <trans-unit id="3917143de35bdf1d2e86820a8a552e7dc5784eb2" translate="yes" xml:space="preserve">
          <source>If a &lt;code&gt;PLUG_EDITOR&lt;/code&gt; environment variable is set, &lt;a href=&quot;plug.debugger#content&quot;&gt;&lt;code&gt;Plug.Debugger&lt;/code&gt;&lt;/a&gt; will use it to generate links to your text editor. The variable should be set with &lt;code&gt;__FILE__&lt;/code&gt; and &lt;code&gt;__LINE__&lt;/code&gt; placeholders which will be correctly replaced. For example (with the &lt;a href=&quot;http://macromates.com&quot;&gt;TextMate&lt;/a&gt; editor):</source>
          <target state="translated">경우 &lt;code&gt;PLUG_EDITOR&lt;/code&gt; 의 환경 변수가 설정되어, &lt;a href=&quot;plug.debugger#content&quot;&gt; &lt;code&gt;Plug.Debugger&lt;/code&gt; 는&lt;/a&gt; 텍스트 편집기에 대한 링크를 생성하는 데 사용합니다. 변수는 &lt;code&gt;__FILE__&lt;/code&gt; 및 &lt;code&gt;__LINE__&lt;/code&gt; 자리 표시 자로 설정해야 하며 올바르게 대체됩니다. 예를 들어 ( &lt;a href=&quot;http://macromates.com&quot;&gt;TextMate&lt;/a&gt; 편집기 사용) :</target>
        </trans-unit>
        <trans-unit id="eb554a564dd3cf44251ab909d1682e6cddc415a6" translate="yes" xml:space="preserve">
          <source>If a cookie is invalid, it is automatically discarded from the result.</source>
          <target state="translated">쿠키가 유효하지 않으면 결과에서 자동으로 삭제됩니다.</target>
        </trans-unit>
        <trans-unit id="6b5748e7fd13f50e04ab4f92ee369e7bef4e0182" translate="yes" xml:space="preserve">
          <source>If a file is uploaded via any of the parsers, Plug will stream the uploaded contents to a file in a temporary directory in order to avoid loading the whole file into memory. For such, the &lt;code&gt;:plug&lt;/code&gt; application needs to be started in order for file uploads to work. More details on how the uploaded file is handled can be found in the documentation for &lt;a href=&quot;plug.upload&quot;&gt;&lt;code&gt;Plug.Upload&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">파서를 사용하여 파일을 업로드하는 경우 Plug는 전체 파일을 메모리로로드하지 않도록 업로드 된 내용을 임시 디렉토리의 파일로 스트리밍합니다. 파일 업로드가 작동 하려면 &lt;code&gt;:plug&lt;/code&gt; 응용 프로그램을 시작해야합니다. 업로드 된 파일을 처리하는 방법에 대한 자세한 내용은 &lt;a href=&quot;plug.upload&quot;&gt; &lt;code&gt;Plug.Upload&lt;/code&gt; &lt;/a&gt; 설명서를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="ff4d7c53872729839a77bd5a96d38cb274491289" translate="yes" xml:space="preserve">
          <source>If a request id already exists as the &amp;ldquo;x-request-id&amp;rdquo; HTTP request header, then that value will be used assuming it is between 20 and 200 characters. If it is not, a new request id will be generated.</source>
          <target state="translated">요청 ID가 이미 &quot;x-request-id&quot;HTTP 요청 헤더로 존재하는 경우 해당 값은 20 자에서 200 자 사이 인 것으로 가정하여 사용됩니다. 그렇지 않은 경우 새 요청 ID가 생성됩니다.</target>
        </trans-unit>
        <trans-unit id="0a43716c3aaf07a4683f32a558be906bc63cdf44" translate="yes" xml:space="preserve">
          <source>If a source is given, without a schema module, the given fields are passed as is to the adapter.</source>
          <target state="translated">스키마 모듈없이 소스가 제공되면 제공된 필드는 그대로 어댑터에 전달됩니다.</target>
        </trans-unit>
        <trans-unit id="43529dcc9122748af804be0c58edc57e0c307b24" translate="yes" xml:space="preserve">
          <source>If a static asset cannot be found, &lt;a href=&quot;plug.static#content&quot;&gt;&lt;code&gt;Plug.Static&lt;/code&gt;&lt;/a&gt; simply forwards the connection to the rest of the pipeline.</source>
          <target state="translated">정적 자산을 찾을 수없는 경우 &lt;a href=&quot;plug.static#content&quot;&gt; &lt;code&gt;Plug.Static&lt;/code&gt; 은&lt;/a&gt; 단순히 연결을 나머지 파이프 라인으로 전달합니다.</target>
        </trans-unit>
        <trans-unit id="5ad05d6344b5d56c40d9d05868bbe0fc447a1ebc" translate="yes" xml:space="preserve">
          <source>If a subquery is given, returns the subquery itself. If any other value is given, it is converted to a query via &lt;a href=&quot;ecto.queryable&quot;&gt;&lt;code&gt;Ecto.Queryable&lt;/code&gt;&lt;/a&gt; and wrapped in the &lt;a href=&quot;ecto.subquery&quot;&gt;&lt;code&gt;Ecto.SubQuery&lt;/code&gt;&lt;/a&gt; struct.</source>
          <target state="translated">하위 쿼리가 제공되면 하위 쿼리 자체를 반환합니다. 다른 값이 제공되면 &lt;a href=&quot;ecto.queryable&quot;&gt; &lt;code&gt;Ecto.Queryable&lt;/code&gt; 을&lt;/a&gt; 통해 쿼리로 변환되어 &lt;a href=&quot;ecto.subquery&quot;&gt; &lt;code&gt;Ecto.SubQuery&lt;/code&gt; &lt;/a&gt; 구조체에 래핑됩니다 .</target>
        </trans-unit>
        <trans-unit id="9b893693b1726f40ddda25b9dd0c70ab3cfa2216" translate="yes" xml:space="preserve">
          <source>If a value is given more than once, the last value takes precedence:</source>
          <target state="translated">값이 두 번 이상 제공되면 마지막 값이 우선합니다.</target>
        </trans-unit>
        <trans-unit id="eaddcc5aa1077f7a26eab071fe7684352cdb0d24" translate="yes" xml:space="preserve">
          <source>If an unhandled error occurs the transaction will be rolled back and the error will bubble up from the transaction function. If no error occurred the transaction will be committed when the function returns. A transaction can be explicitly rolled back by calling &lt;a href=&quot;#c:rollback/1&quot;&gt;&lt;code&gt;rollback/1&lt;/code&gt;&lt;/a&gt;, this will immediately leave the function and return the value given to &lt;code&gt;rollback&lt;/code&gt; as &lt;code&gt;{:error, value}&lt;/code&gt;.</source>
          <target state="translated">처리되지 않은 오류가 발생하면 트랜잭션이 롤백되고 트랜잭션 기능에서 오류가 발생합니다. 오류가 발생하지 않으면 함수가 리턴 될 때 트랜잭션이 커미트됩니다. &lt;a href=&quot;#c:rollback/1&quot;&gt; &lt;code&gt;rollback/1&lt;/code&gt; &lt;/a&gt; 을 호출하여 트랜잭션을 명시 적으로 롤백 할 수 있습니다 .이 함수는 즉시 함수를 그대로두고 &lt;code&gt;rollback&lt;/code&gt; 제공된 값 을 &lt;code&gt;{:error, value}&lt;/code&gt; 로 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="153b8768ac116a6059a08945ee6b26d18eec128a" translate="yes" xml:space="preserve">
          <source>If any of the callbacks return a &lt;code&gt;:stop&lt;/code&gt; tuple, it will also trigger terminate with the reason given in the tuple.</source>
          <target state="translated">콜백 중 하나가 &lt;code&gt;:stop&lt;/code&gt; 튜플을 반환하면 튜플에 주어진 이유로 종료를 트리거합니다.</target>
        </trans-unit>
        <trans-unit id="a8b20d463cde7b903560b17334ed7d36242c5f45" translate="yes" xml:space="preserve">
          <source>If available, the file is sent directly over the socket using the operating system &lt;code&gt;sendfile&lt;/code&gt; operation.</source>
          <target state="translated">사용 가능한 경우 운영 체제 &lt;code&gt;sendfile&lt;/code&gt; 조작을 사용하여 파일이 소켓을 통해 직접 전송됩니다 .</target>
        </trans-unit>
        <trans-unit id="82f8819da3536b2ff1e621e91a5108e31f33c3f5" translate="yes" xml:space="preserve">
          <source>If casting of all fields is successful, the changeset is returned as valid.</source>
          <target state="translated">모든 필드를 성공적으로 캐스팅하면 변경 집합이 유효한 것으로 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="8943a6555280626edd3a71e646c2c513ffe092f9" translate="yes" xml:space="preserve">
          <source>If changing the JSON library, remember to recompile the adapter afterwards by cleaning the current build:</source>
          <target state="translated">JSON 라이브러리를 변경하는 경우 현재 빌드를 정리하여 어댑터를 나중에 다시 컴파일하십시오.</target>
        </trans-unit>
        <trans-unit id="9d661e3bc80c3727f4d8b3225ce99bc171f66095" translate="yes" xml:space="preserve">
          <source>If for some reason your database does not support case insensitive columns, you can explicitly downcase values before inserting/updating them:</source>
          <target state="translated">어떤 이유로 데이터베이스에서 대소 문자를 구분하지 않는 열을 지원하지 않는 경우 값을 삽입 / 업데이트하기 전에 명시 적으로 소문자를 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="95a9f7927001d081a57717076667b9d7a6f459c0" translate="yes" xml:space="preserve">
          <source>If interpolating keyword lists, the keyword list entries are combined using ANDs and joined to any existing expression with an OR:</source>
          <target state="translated">키워드 목록을 보간하는 경우 AND를 사용하여 키워드 목록 항목을 결합하고 OR을 사용하여 기존 표현식에 조인합니다.</target>
        </trans-unit>
        <trans-unit id="76cef5435664170ccd219b3f7c9c0adfb90f5be5" translate="yes" xml:space="preserve">
          <source>If it is a keyword query the first argument must be either an &lt;code&gt;in&lt;/code&gt; expression, or a value that implements the &lt;a href=&quot;ecto.queryable&quot;&gt;&lt;code&gt;Ecto.Queryable&lt;/code&gt;&lt;/a&gt; protocol. If the query needs a reference to the data source in any other part of the expression, then an &lt;code&gt;in&lt;/code&gt; must be used to create a reference variable. The second argument should be a keyword query where the keys are expression types and the values are expressions.</source>
          <target state="translated">키워드 쿼리 인 경우 첫 번째 인수는 &lt;code&gt;in&lt;/code&gt; 식이거나 &lt;a href=&quot;ecto.queryable&quot;&gt; &lt;code&gt;Ecto.Queryable&lt;/code&gt; &lt;/a&gt; 프로토콜 을 구현하는 값 이어야 합니다. 쿼리에서 표현식의 다른 부분에서 데이터 소스에 대한 참조가 필요한 경우 &lt;code&gt;in&lt;/code&gt; 을 사용하여 참조 변수를 작성해야합니다. 두 번째 인수는 키가 표현식 유형이고 값이 표현식 인 키워드 쿼리 여야합니다.</target>
        </trans-unit>
        <trans-unit id="e167dc3c73586f0621a46fd98ad4b4b1f1bc7e6b" translate="yes" xml:space="preserve">
          <source>If it is a query expression the first argument must be a value that implements the &lt;a href=&quot;ecto.queryable&quot;&gt;&lt;code&gt;Ecto.Queryable&lt;/code&gt;&lt;/a&gt; protocol and the second argument the expression.</source>
          <target state="translated">쿼리 식인 경우 첫 번째 인수는 &lt;a href=&quot;ecto.queryable&quot;&gt; &lt;code&gt;Ecto.Queryable&lt;/code&gt; &lt;/a&gt; 프로토콜 을 구현하는 값이어야 하고 두 번째 인수는 식 이어야 합니다.</target>
        </trans-unit>
        <trans-unit id="f2004e501e574e9ee412f8a4a483f6b11c68baa6" translate="yes" xml:space="preserve">
          <source>If multi contains operations that accept changesets (like &lt;a href=&quot;#insert/4&quot;&gt;&lt;code&gt;insert/4&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#update/4&quot;&gt;&lt;code&gt;update/4&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#delete/4&quot;&gt;&lt;code&gt;delete/4&lt;/code&gt;&lt;/a&gt;) they will be checked before starting the transaction. If any changeset has errors, the transaction won&amp;rsquo;t even be started and the error will be immediately returned.</source>
          <target state="translated">multi에 변경 세트를 받아들이는 오퍼레이션 ( &lt;a href=&quot;#insert/4&quot;&gt; &lt;code&gt;insert/4&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#update/4&quot;&gt; &lt;code&gt;update/4&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;#delete/4&quot;&gt; &lt;code&gt;delete/4&lt;/code&gt; 등&lt;/a&gt; )이 포함 된 경우 트랜잭션을 시작하기 전에 확인됩니다. 변경 세트에 오류가 있으면 트랜잭션이 시작되지 않고 오류가 즉시 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="636fecfc6c19833110f980b78af43a7ddc1683cf" translate="yes" xml:space="preserve">
          <source>If no action has been applied to the changeset or action was set to &lt;code&gt;:ignore&lt;/code&gt;, no errors are shown on the form object even if the changeset has a non-empty &lt;code&gt;:errors&lt;/code&gt; value.</source>
          <target state="translated">변경 세트에 조치가 적용되지 않았거나 조치가 &lt;code&gt;:ignore&lt;/code&gt; 로 설정된 경우, 변경 세트에 비어 있지 않은 &lt;code&gt;:errors&lt;/code&gt; 값 이 있어도 양식 오브젝트에 오류가 표시되지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="cf26fadc638285a0643bc477b2beb4a0a2ba425c" translate="yes" xml:space="preserve">
          <source>If no channel module is provided, the socket&amp;rsquo;s handler is used to lookup the matching channel for the given topic.</source>
          <target state="translated">채널 모듈이 제공되지 않으면 소켓의 핸들러는 주어진 주제에 맞는 채널을 찾는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="b2947103d7b79f0495b72a656cc81700719a03f4" translate="yes" xml:space="preserve">
          <source>If no custom parameters are specified, Erlang&amp;rsquo;s &lt;code&gt;ssl&lt;/code&gt; uses its built-in defaults. Since OTP 19 this has been the 2048-bit &amp;lsquo;group 14&amp;rsquo; from RFC 3526.</source>
          <target state="translated">사용자 지정 매개 변수를 지정하지 않으면 Erlang의 &lt;code&gt;ssl&lt;/code&gt; 은 기본 제공 기본값을 사용합니다. OTP 19 이후 이것은 RFC 3526의 2048 비트 '그룹 14'입니다.</target>
        </trans-unit>
        <trans-unit id="030bd22aca683fa25d2f90bbb7143785a15622d3" translate="yes" xml:space="preserve">
          <source>If no data type is given, it defaults to a string.</source>
          <target state="translated">데이터 유형이 제공되지 않으면 기본값은 문자열입니다.</target>
        </trans-unit>
        <trans-unit id="ad19118a3e502181cda3b94015f8e221a2d0b2b8" translate="yes" xml:space="preserve">
          <source>If no path is given, it will use &lt;code&gt;priv/static&lt;/code&gt; as the input and output path.</source>
          <target state="translated">경로를 지정하지 않으면 입력 / 출력 경로로 &lt;code&gt;priv/static&lt;/code&gt; 을 사용 합니다.</target>
        </trans-unit>
        <trans-unit id="8d9d3c05f3dd12de1de5d07c7780f6542cae6c1f" translate="yes" xml:space="preserve">
          <source>If no repo option is given, it is retrieved from the application environment.</source>
          <target state="translated">저장소 옵션이 제공되지 않으면 응용 프로그램 환경에서 검색됩니다.</target>
        </trans-unit>
        <trans-unit id="ac423aab6755d9973153fe985b209449ba726adf" translate="yes" xml:space="preserve">
          <source>If supported by your database, you can also pass query expressions to distinct and it will generate a query with DISTINCT ON. In such cases, &lt;code&gt;distinct&lt;/code&gt; accepts exactly the same expressions as &lt;code&gt;order_by&lt;/code&gt; and any &lt;code&gt;distinct&lt;/code&gt; expression will be automatically prepended to the &lt;code&gt;order_by&lt;/code&gt; expressions in case there is any &lt;code&gt;order_by&lt;/code&gt; expression.</source>
          <target state="translated">데이터베이스에서 지원하는 경우 쿼리 표현식을 고유하게 전달할 수 있으며 DISTINCT ON을 사용하여 쿼리를 생성합니다. 이러한 경우, &lt;code&gt;distinct&lt;/code&gt; 정확히 같은 표현을 허용 &lt;code&gt;order_by&lt;/code&gt; 하고 &lt;code&gt;distinct&lt;/code&gt; 표현이 자동으로 붙을 &lt;code&gt;order_by&lt;/code&gt; 의 모든이 경우에 표현 &lt;code&gt;order_by&lt;/code&gt; 의 식입니다.</target>
        </trans-unit>
        <trans-unit id="70216b8d4897b8cf4c5ab39916317d1da5fb0d73" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;#c:init/2&quot;&gt;&lt;code&gt;init/2&lt;/code&gt;&lt;/a&gt; callback is implemented in the repository, it will be invoked with the first argument set to &lt;code&gt;:runtime&lt;/code&gt;.</source>
          <target state="translated">경우 &lt;a href=&quot;#c:init/2&quot;&gt; &lt;code&gt;init/2&lt;/code&gt; &lt;/a&gt; 콜백이 저장소에 구현되어, 그것은에 첫 번째 인수 세트로 호출됩니다 &lt;code&gt;:runtime&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9712dc6b620700aa8412aa4754ed6dd3e600a162" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;required_key&lt;/code&gt; is not present, it will raise &lt;a href=&quot;phoenix.missingparamerror&quot;&gt;&lt;code&gt;Phoenix.MissingParamError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">는 IF &lt;code&gt;required_key&lt;/code&gt; 이 존재하지 않는, 그것은 올릴 것이다 &lt;a href=&quot;phoenix.missingparamerror&quot;&gt; &lt;code&gt;Phoenix.MissingParamError&lt;/code&gt; 을&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="774625820d7d0ec4e795fa8c9c6c08379f522851" translate="yes" xml:space="preserve">
          <source>If the URL has a host, a CSRF token that is tied to that host will be generated. If it is a relative path URL, a simple token emitted with &lt;a href=&quot;#get_csrf_token/0&quot;&gt;&lt;code&gt;get_csrf_token/0&lt;/code&gt;&lt;/a&gt; will be used.</source>
          <target state="translated">URL에 호스트가 있으면 해당 호스트에 연결된 CSRF 토큰이 생성됩니다. 상대 경로 URL 인 경우 &lt;a href=&quot;#get_csrf_token/0&quot;&gt; &lt;code&gt;get_csrf_token/0&lt;/code&gt; &lt;/a&gt; 으로 생성 된 간단한 토큰 이 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="c467ebfb28c3769c0f60d1ed5192b127c4f129d1" translate="yes" xml:space="preserve">
          <source>If the adapter does not support inform, then &lt;code&gt;{:error, :not_supported}&lt;/code&gt; should be returned.</source>
          <target state="translated">어댑터가 정보를 지원하지 않으면 &lt;code&gt;{:error, :not_supported}&lt;/code&gt; 가 리턴되어야합니다.</target>
        </trans-unit>
        <trans-unit id="b83fa861079f61f5349df999d4ab77d5e9dd2d46" translate="yes" xml:space="preserve">
          <source>If the adapter does not support informational responses then this is a noop.</source>
          <target state="translated">어댑터가 정보 응답을 지원하지 않는 경우 이는 noop입니다.</target>
        </trans-unit>
        <trans-unit id="abd9faa09d21bdad382cd8d73f3c1cd6edf98fe0" translate="yes" xml:space="preserve">
          <source>If the adapter does not support server push then &lt;code&gt;{:error, :not_supported}&lt;/code&gt; should be returned.</source>
          <target state="translated">어댑터가 서버 푸시를 지원하지 않으면 &lt;code&gt;{:error, :not_supported}&lt;/code&gt; 가 리턴되어야합니다.</target>
        </trans-unit>
        <trans-unit id="03a7adb38fe4fd08405bbe2e59b1dc64945ce1ee" translate="yes" xml:space="preserve">
          <source>If the adapter does not support server push then this is a noop.</source>
          <target state="translated">어댑터가 서버 푸시를 지원하지 않는 경우 이것은 noop입니다.</target>
        </trans-unit>
        <trans-unit id="c1c015b3bdb8e3e97eeb9a475ec46483a71e9b1c" translate="yes" xml:space="preserve">
          <source>If the association has no changes, it will be skipped. If the association is invalid, the changeset will be marked as invalid. If the given value is not any of values below, it will raise.</source>
          <target state="translated">연결에 변경 사항이 없으면 건너 뜁니다. 연결이 유효하지 않으면 변경 세트가 유효하지 않은 것으로 표시됩니다. 주어진 값이 아래 값 중 하나가 아니면 증가합니다.</target>
        </trans-unit>
        <trans-unit id="9f7bac3c27469f7d4914ccb40eab78a149fc9bfe" translate="yes" xml:space="preserve">
          <source>If the change is already present, it is overridden with the new value.</source>
          <target state="translated">변경 사항이 이미 존재하면 새 값으로 대체됩니다.</target>
        </trans-unit>
        <trans-unit id="b0a698e1cab1f6f678660aa4dfb67045d6928daa" translate="yes" xml:space="preserve">
          <source>If the change is already present, it is overridden with the new value. If the change has the same value as in the changeset data, it is not added to the list of changes.</source>
          <target state="translated">변경 사항이 이미 존재하면 새 값으로 대체됩니다. 변경 사항이 변경 세트 데이터와 동일한 값을 갖는 경우 변경 사항 목록에 추가되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="d643dc985a9051bacd04e1a9f62548fd0e65c8a1" translate="yes" xml:space="preserve">
          <source>If the changes are valid, all changes are applied to the changeset data. If the changes are invalid, no changes are applied, and an error tuple is returned with the changeset containing the action that was attempted to be applied.</source>
          <target state="translated">변경 사항이 유효하면 모든 변경 사항이 변경 세트 데이터에 적용됩니다. 변경 사항이 유효하지 않은 경우, 변경 사항이 적용되지 않으며 적용하려고 시도한 조치가 포함 된 변경 세트와 함께 오류 튜플이 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="5d577ab6f6374c6d9db1620ec48bb72e49c4e5c2" translate="yes" xml:space="preserve">
          <source>If the connection was successful, generates &lt;a href=&quot;../phoenix_pubsub/1.0.2/phoenix.pubsub&quot;&gt;&lt;code&gt;Phoenix.PubSub&lt;/code&gt;&lt;/a&gt; topic from the &lt;code&gt;id/1&lt;/code&gt; callback.</source>
          <target state="translated">연결에 성공 하면 &lt;code&gt;id/1&lt;/code&gt; 콜백 에서 &lt;a href=&quot;../phoenix_pubsub/1.0.2/phoenix.pubsub&quot;&gt; &lt;code&gt;Phoenix.PubSub&lt;/code&gt; &lt;/a&gt; 주제를 생성 하십시오 .</target>
        </trans-unit>
        <trans-unit id="3a5834bc3acf73c8335beda9b2b7bbaf51ee3a6e" translate="yes" xml:space="preserve">
          <source>If the embed has no changes, it will be skipped. If the embed is invalid, the changeset will be marked as invalid.</source>
          <target state="translated">퍼가기 변경 사항이 없으면 건너 뜁니다. 임베드가 유효하지 않은 경우 변경 세트가 유효하지 않은 것으로 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="100887b9de3b56af079f0a72491a4382d1396bb0" translate="yes" xml:space="preserve">
          <source>If the map on the left side is a struct, Ecto will check all of the field on the right previously exist on the left before merging.</source>
          <target state="translated">왼쪽의 맵이 구조체 인 경우 Ecto는 병합하기 전에 오른쪽에있는 모든 필드가 왼쪽에 있는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="67cfc2cb3e12875af3e1ba6a2973b3dbd4bbf5ad" translate="yes" xml:space="preserve">
          <source>If the parameter contains an ID and there is an associated child with such ID, the parameter data will be passed to &lt;code&gt;MyApp.Address.changeset/2&lt;/code&gt; with the existing struct and become an update operation</source>
          <target state="translated">매개 변수에 ID가 포함되어 있고 해당 ID와 연관된 하위가있는 경우 매개 변수 데이터는 기존 구조와 함께 &lt;code&gt;MyApp.Address.changeset/2&lt;/code&gt; 로 전달 되고 업데이트 조작이됩니다.</target>
        </trans-unit>
        <trans-unit id="5b235bb233a3f3d355503c030abb877188e1fb03" translate="yes" xml:space="preserve">
          <source>If the parameter contains an ID and there is no associated child with such ID, the parameter data will be passed to &lt;code&gt;MyApp.Address.changeset/2&lt;/code&gt; with a new struct and become an insert operation</source>
          <target state="translated">매개 변수에 ID가 있고 해당 ID와 연관된 하위가없는 경우 매개 변수 데이터는 새 구조체와 함께 &lt;code&gt;MyApp.Address.changeset/2&lt;/code&gt; 로 전달 되고 삽입 조작이됩니다.</target>
        </trans-unit>
        <trans-unit id="4c2858b55ac4015434edf3d00d6d984a1e7af01d" translate="yes" xml:space="preserve">
          <source>If the parameter does not contain an ID, the parameter data will be passed to &lt;code&gt;MyApp.Address.changeset/2&lt;/code&gt; with a new struct and become an insert operation</source>
          <target state="translated">매개 변수에 ID가 포함되어 있지 않으면 매개 변수 데이터가 새 구조체와 함께 &lt;code&gt;MyApp.Address.changeset/2&lt;/code&gt; 로 전달되어 삽입 작업이됩니다.</target>
        </trans-unit>
        <trans-unit id="6e14dbb4189c408fd4ca75086bfd71c426f435db" translate="yes" xml:space="preserve">
          <source>If the passed function returns &lt;code&gt;:pop&lt;/code&gt;, the return value of this callback must be &lt;code&gt;{value, new_data}&lt;/code&gt; where &lt;code&gt;value&lt;/code&gt; is the value under &lt;code&gt;key&lt;/code&gt; (or &lt;code&gt;nil&lt;/code&gt; if not present) and &lt;code&gt;new_data&lt;/code&gt; is &lt;code&gt;data&lt;/code&gt; without &lt;code&gt;key&lt;/code&gt;.</source>
          <target state="translated">전달 된 함수가 &lt;code&gt;:pop&lt;/code&gt; 을 리턴하면이 콜백의 리턴 값은 &lt;code&gt;{value, new_data}&lt;/code&gt; 여야합니다. 여기서 &lt;code&gt;value&lt;/code&gt; 는 &lt;code&gt;key&lt;/code&gt; 아래 값 이거나 존재하지 않는 경우 &lt;code&gt;nil&lt;/code&gt; 이고 &lt;code&gt;new_data&lt;/code&gt; 는 &lt;code&gt;key&lt;/code&gt; 없는 &lt;code&gt;data&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="ff09001e9ce2d8278137d1ce993917e82be4cb26" translate="yes" xml:space="preserve">
          <source>If the passed function returns &lt;code&gt;{get_value, update_value}&lt;/code&gt;, the return value of this callback should be &lt;code&gt;{get_value, new_data}&lt;/code&gt;, where:</source>
          <target state="translated">전달 된 함수가 &lt;code&gt;{get_value, update_value}&lt;/code&gt; 를 리턴하면이 콜백의 리턴 값은 &lt;code&gt;{get_value, new_data}&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a2143e7239fbfa87b876c6cf2de6756de08ffc64" translate="yes" xml:space="preserve">
          <source>If the query has a limit, offset or distinct set, it will be automatically wrapped in a subquery in order to return the proper result.</source>
          <target state="translated">쿼리에 제한, 오프셋 또는 고유 집합이 있으면 적절한 결과를 반환하기 위해 하위 쿼리에 자동으로 래핑됩니다.</target>
        </trans-unit>
        <trans-unit id="7d2bddb6cc8d18143b43f8bbafcae7867ac58bcf" translate="yes" xml:space="preserve">
          <source>If the relationship is a &lt;code&gt;has_one&lt;/code&gt; or &lt;code&gt;has_many&lt;/code&gt; and the key is set in the given struct, the key will automatically be set in the built association:</source>
          <target state="translated">관계가 &lt;code&gt;has_one&lt;/code&gt; 또는 &lt;code&gt;has_many&lt;/code&gt; 이고 키가 주어진 구조체에서 설정되면 키는 자동으로 빌드 된 연관에서 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="589c270364db1b0108ce43960e91be264009debe" translate="yes" xml:space="preserve">
          <source>If the request contains a &amp;ldquo;_format&amp;rdquo; parameter, it is considered to be the format desired by the client. If no &amp;ldquo;_format&amp;rdquo; parameter is available, this function will parse the &amp;ldquo;accept&amp;rdquo; header and find a matching format accordingly.</source>
          <target state="translated">요청에&amp;ldquo;_format&amp;rdquo;매개 변수가 포함되어 있으면 클라이언트가 원하는 형식으로 간주됩니다. &quot;_format&quot;매개 변수를 사용할 수 없으면이 함수는 &quot;accept&quot;헤더를 구문 분석하고 이에 따라 일치하는 형식을 찾습니다.</target>
        </trans-unit>
        <trans-unit id="c173a238b103f05715b98fa0448f517f74ccec4e" translate="yes" xml:space="preserve">
          <source>If the request has method &lt;code&gt;&quot;HEAD&quot;&lt;/code&gt;, the adapter should not send the response to the client.</source>
          <target state="translated">요청에 &lt;code&gt;&quot;HEAD&quot;&lt;/code&gt; 메소드가 있으면 어댑터는 클라이언트에 응답을 보내지 않아야합니다.</target>
        </trans-unit>
        <trans-unit id="d45df81e2caa272cbf84dfebf38c8aa28609010e" translate="yes" xml:space="preserve">
          <source>If the route contains glob-like patterns, parameters for those have to be given as list:</source>
          <target state="translated">경로에 glob-like 패턴이 포함 된 경우 해당 매개 변수를 목록으로 제공해야합니다.</target>
        </trans-unit>
        <trans-unit id="2bf5da11b58dcf3690804466cd69ea5e5e4dca07" translate="yes" xml:space="preserve">
          <source>If the same source is selected multiple times with a &lt;code&gt;map&lt;/code&gt;, the fields are merged in order to avoid fetching multiple copies from the database. In other words, the expression below:</source>
          <target state="translated">동일한 소스를 &lt;code&gt;map&lt;/code&gt; 으로 여러 번 선택한 경우 데이터베이스에서 여러 사본을 가져 오지 않도록 필드가 병합됩니다. 즉, 아래 표현은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="652e9d42a43e2b8d5dcd0218df8782089064b141" translate="yes" xml:space="preserve">
          <source>If the same source is selected multiple times with a &lt;code&gt;struct&lt;/code&gt;, the fields are merged in order to avoid fetching multiple copies from the database. In other words, the expression below:</source>
          <target state="translated">&lt;code&gt;struct&lt;/code&gt; 로 동일한 소스를 여러 번 선택한 경우 데이터베이스에서 여러 사본을 가져 오지 않도록 필드가 병합됩니다. 즉, 아래 표현은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="52eb3cdb7cd07fea24cf8899ccfeee45fa44e2fe" translate="yes" xml:space="preserve">
          <source>If the scheme of a request is &lt;code&gt;https&lt;/code&gt;, it&amp;rsquo;ll add a &lt;code&gt;strict-transport-security&lt;/code&gt; header to enable HTTP Strict Transport Security by default.</source>
          <target state="translated">요청 체계가 &lt;code&gt;https&lt;/code&gt; 인 경우 기본적으로 HTTP Strict Transport Security를 ​​활성화하기 위해 엄격한 전송 &lt;code&gt;strict-transport-security&lt;/code&gt; 헤더를 추가합니다 .</target>
        </trans-unit>
        <trans-unit id="564b33d47ddc46edcbbb5f1d39d5ab6ae21f5998" translate="yes" xml:space="preserve">
          <source>If the scheme of a request is &lt;code&gt;https&lt;/code&gt;, it&amp;rsquo;ll add a &lt;code&gt;strict-transport-security&lt;/code&gt; header to enable HTTP Strict Transport Security.</source>
          <target state="translated">요청 체계가 &lt;code&gt;https&lt;/code&gt; 인 경우 &lt;code&gt;strict-transport-security&lt;/code&gt; 헤더를 추가하여 HTTP Strict Transport Security를 ​​활성화합니다.</target>
        </trans-unit>
        <trans-unit id="1e40997d2cab9139afd7b3e62e6c58a9b6923fe9" translate="yes" xml:space="preserve">
          <source>If the session has already been initialized, the new contents will be merged with the previous ones.</source>
          <target state="translated">세션이 이미 초기화 된 경우 새 내용이 이전 내용과 병합됩니다.</target>
        </trans-unit>
        <trans-unit id="62ac87da8864e486a5dadb087a7c2632f82b5234" translate="yes" xml:space="preserve">
          <source>If the struct has no primary key, &lt;a href=&quot;ecto.noprimarykeyfielderror&quot;&gt;&lt;code&gt;Ecto.NoPrimaryKeyFieldError&lt;/code&gt;&lt;/a&gt; will be raised.</source>
          <target state="translated">구조체에 기본 키가 없으면 &lt;a href=&quot;ecto.noprimarykeyfielderror&quot;&gt; &lt;code&gt;Ecto.NoPrimaryKeyFieldError&lt;/code&gt; &lt;/a&gt; 가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="a8767938851ade63a15afc91119604f0839e7344" translate="yes" xml:space="preserve">
          <source>If the struct has no primary key, &lt;a href=&quot;ecto.noprimarykeyfielderror&quot;&gt;&lt;code&gt;Ecto.NoPrimaryKeyFieldError&lt;/code&gt;&lt;/a&gt; will be raised. If the struct has been removed from db prior to call, &lt;a href=&quot;ecto.staleentryerror&quot;&gt;&lt;code&gt;Ecto.StaleEntryError&lt;/code&gt;&lt;/a&gt; will be raised.</source>
          <target state="translated">구조체에 기본 키가 없으면 &lt;a href=&quot;ecto.noprimarykeyfielderror&quot;&gt; &lt;code&gt;Ecto.NoPrimaryKeyFieldError&lt;/code&gt; &lt;/a&gt; 가 발생합니다. 호출하기 전에 구조체가 db에서 제거 된 경우 &lt;a href=&quot;ecto.staleentryerror&quot;&gt; &lt;code&gt;Ecto.StaleEntryError&lt;/code&gt; &lt;/a&gt; 가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="e5578acf03166a21322dd600d9a66efef5d73e58" translate="yes" xml:space="preserve">
          <source>If the underlying input type is a &lt;code&gt;:text_field&lt;/code&gt;, a mapping could be given to further inflect the input type based solely on the field name. The default mapping is:</source>
          <target state="translated">기본 입력 유형이 &lt;code&gt;:text_field&lt;/code&gt; 인 경우, 필드 이름만을 기반으로 입력 유형을 추가로 반영하기 위해 맵핑이 제공 될 수 있습니다. 기본 매핑은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="41a1e50f02aaf223bea1728ac3e4f595a0d0fbc9" translate="yes" xml:space="preserve">
          <source>If the value of a field is &lt;code&gt;nil&lt;/code&gt; or a string made only of whitespace, the changeset is marked as invalid, the field is removed from the changeset&amp;rsquo;s changes, and an error is added. Note the error won&amp;rsquo;t be added though if the field already has an error.</source>
          <target state="translated">필드 값이 &lt;code&gt;nil&lt;/code&gt; 이거나 공백으로 만 구성된 문자열 인 경우 변경 세트가 유효하지 않은 것으로 표시되고 필드가 변경 세트의 변경 사항에서 제거되고 오류가 추가됩니다. 필드에 이미 오류가있는 경우 오류가 추가되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="5bc5b56a27b8e1d0d4212e390ddd5e71de7e4d2d" translate="yes" xml:space="preserve">
          <source>If there is an associated child with an ID and its ID is not given as parameter, the &lt;code&gt;:on_replace&lt;/code&gt; callback for that association will be invoked (see the &amp;ldquo;On replace&amp;rdquo; section on the module documentation)</source>
          <target state="translated">ID가있는 관련 자식이 있고 해당 ID가 매개 변수로 제공되지 않으면 해당 연결에 대한 &lt;code&gt;:on_replace&lt;/code&gt; 콜백이 호출됩니다 (모듈 설명서의 &quot;교체시&quot;섹션 참조)</target>
        </trans-unit>
        <trans-unit id="fcbca676064b2672228b8d404db61ea01e7b418d" translate="yes" xml:space="preserve">
          <source>If we are terminating because the client left, the reason will be &lt;code&gt;{:shutdown, :left}&lt;/code&gt;. Similarly, if we are terminating because the client connection was closed, the reason will be &lt;code&gt;{:shutdown, :closed}&lt;/code&gt;.</source>
          <target state="translated">클라이언트가 떠나서 종료하는 경우 이유는 &lt;code&gt;{:shutdown, :left}&lt;/code&gt; 입니다. 마찬가지로 클라이언트 연결이 종료되어 종료하는 경우 이유는 &lt;code&gt;{:shutdown, :closed}&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="f56a37255e0b43c2392f533494036f18e8e066b4" translate="yes" xml:space="preserve">
          <source>If you access these fields before fetching them, they will be returned as &lt;a href=&quot;plug.conn.unfetched&quot;&gt;&lt;code&gt;Plug.Conn.Unfetched&lt;/code&gt;&lt;/a&gt; structs.</source>
          <target state="translated">가져 오기 전에 이러한 필드에 액세스하면 &lt;a href=&quot;plug.conn.unfetched&quot;&gt; &lt;code&gt;Plug.Conn.Unfetched&lt;/code&gt; &lt;/a&gt; 구조체 로 반환됩니다 .</target>
        </trans-unit>
        <trans-unit id="b68cb6ad948ac353881b8951cfd579c0c0ee1df4" translate="yes" xml:space="preserve">
          <source>If you already have a model, the generated model can be skipped with &lt;code&gt;--no-model&lt;/code&gt;. Read the documentation for &lt;code&gt;phoenix.gen.model&lt;/code&gt; for more information on attributes and namespaced resources.</source>
          <target state="translated">이미 모델이있는 경우 &lt;code&gt;--no-model&lt;/code&gt; 을 사용하여 생성 된 모델을 건너 뛸 수 있습니다 . 속성 및 네임 스페이스 리소스에 대한 자세한 내용 은 &lt;code&gt;phoenix.gen.model&lt;/code&gt; 설명서를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="7ff739bec2c4393b5a6029990ea9ff518a68f23c" translate="yes" xml:space="preserve">
          <source>If you also want to send the response, use &lt;a href=&quot;#send_resp/1&quot;&gt;&lt;code&gt;send_resp/1&lt;/code&gt;&lt;/a&gt; after this or use &lt;a href=&quot;#send_resp/3&quot;&gt;&lt;code&gt;send_resp/3&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">응답을 보내려면 이 후에 &lt;a href=&quot;#send_resp/1&quot;&gt; &lt;code&gt;send_resp/1&lt;/code&gt; &lt;/a&gt; 을 사용하거나 &lt;a href=&quot;#send_resp/3&quot;&gt; &lt;code&gt;send_resp/3&lt;/code&gt; 을&lt;/a&gt; 사용 하십시오 .</target>
        </trans-unit>
        <trans-unit id="c1445ed0a8505a52f1fc2ab343b225750d1c7d54" translate="yes" xml:space="preserve">
          <source>If you are seeing this error, you should check if you are listing the desired formats in your &lt;code&gt;:accepts&lt;/code&gt; plug or if you are setting the proper accept header in the client. The exception contains the acceptable mime types in the &lt;code&gt;accepts&lt;/code&gt; field.</source>
          <target state="translated">이 오류가 표시되면 &lt;code&gt;:accepts&lt;/code&gt; 플러그 에 원하는 형식을 나열 하는지 또는 클라이언트에서 올바른 승인 헤더를 설정하고 있는지 확인해야합니다. 예외는 &lt;code&gt;accepts&lt;/code&gt; 필드 에 허용 가능한 MIME 유형을 포함합니다 .</target>
        </trans-unit>
        <trans-unit id="8befb119931680b815f371783bc72db7f010ea28" translate="yes" xml:space="preserve">
          <source>If you are seeing this error, you should handle the error and surface it to the end user. It means that there is a parameter missing from the request.</source>
          <target state="translated">이 오류가 표시되면 오류를 처리하여 최종 사용자에게 표시해야합니다. 요청에서 누락 된 매개 변수가 있음을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="8281d3b702b25fc319af701ce0fe42f100d16669" translate="yes" xml:space="preserve">
          <source>If you are sending data to a full URI, such as &lt;code&gt;//subdomain.host.com/path&lt;/code&gt; or &lt;code&gt;//external.com/path&lt;/code&gt;, instead of a simple path such as &lt;code&gt;/path&lt;/code&gt;, you may want to consider using &lt;a href=&quot;#get_csrf_token_for/1&quot;&gt;&lt;code&gt;get_csrf_token_for/1&lt;/code&gt;&lt;/a&gt;, as that will encode the host in the CSRF token. Once received, Plug will only consider the CSRF token to be valid if the &lt;code&gt;host&lt;/code&gt; encoded in the token is the same as the one in &lt;code&gt;conn.host&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;/path&lt;/code&gt; 와 같은 간단한 경로 대신 &lt;code&gt;//subdomain.host.com/path&lt;/code&gt; 또는 &lt;code&gt;//external.com/path&lt;/code&gt; 와 같은 전체 URI로 데이터를 전송하는 경우 &lt;a href=&quot;#get_csrf_token_for/1&quot;&gt; &lt;code&gt;get_csrf_token_for/1&lt;/code&gt; 을&lt;/a&gt; 사용하는 것이 좋습니다 . CSRF 토큰으로 호스트를 인코딩합니다. 일단 수신되면 플러그는 토큰으로 인코딩 된 &lt;code&gt;host&lt;/code&gt; 가 &lt;code&gt;conn.host&lt;/code&gt; 의 호스트 와 동일한 경우에만 CSRF 토큰이 유효한 것으로 간주합니다 .</target>
        </trans-unit>
        <trans-unit id="2860b8a98014af24457d97de2b8635d54397f121" translate="yes" xml:space="preserve">
          <source>If you are trying to debug transaction-related code while using &lt;code&gt;Ecto.Adapters.SQL.Sandbox&lt;/code&gt;, it may be more helpful to configure the database to log all statements and consult those logs.</source>
          <target state="translated">&lt;code&gt;Ecto.Adapters.SQL.Sandbox&lt;/code&gt; 를 사용하는 동안 트랜잭션 관련 코드를 디버깅하려는 경우 모든 명령문을 로그하고 해당 로그를 참조하도록 데이터베이스를 구성하는 것이 더 도움이 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1d8aab708f551e6ce45eaa04e632f244694f2e5f" translate="yes" xml:space="preserve">
          <source>If you are using the &lt;code&gt;Ecto.Adapters.SQL.Sandbox&lt;/code&gt; in tests, note that even though each test is inside a transaction, &lt;code&gt;in_transaction?/0&lt;/code&gt; will only return true inside transactions explicitly created with &lt;code&gt;transaction/2&lt;/code&gt;. This is done so the test environment mimics dev and prod.</source>
          <target state="translated">테스트 에서 &lt;code&gt;Ecto.Adapters.SQL.Sandbox&lt;/code&gt; 를 사용하는 경우 각 테스트가 트랜잭션 내부에 &lt;code&gt;in_transaction?/0&lt;/code&gt; 은 &lt;code&gt;transaction/2&lt;/code&gt; 로 명시 적으로 작성된 트랜잭션 내에서만 true를 리턴합니다 . 이것은 테스트 환경이 dev와 prod를 모방하도록하기위한 것입니다.</target>
        </trans-unit>
        <trans-unit id="2c3cbaa656dba938c685add2656722d0e125f277" translate="yes" xml:space="preserve">
          <source>If you attempt to remove associated &lt;code&gt;many_to_many&lt;/code&gt; data, &lt;strong&gt;Ecto will always remove data from the join schema and never from the target associations&lt;/strong&gt; be it by setting &lt;code&gt;:on_replace&lt;/code&gt; to &lt;code&gt;:delete&lt;/code&gt;, &lt;code&gt;:on_delete&lt;/code&gt; to &lt;code&gt;:delete_all&lt;/code&gt; or by using changeset functions such as &lt;a href=&quot;ecto.changeset#put_assoc/3&quot;&gt;&lt;code&gt;Ecto.Changeset.put_assoc/3&lt;/code&gt;&lt;/a&gt;. For example, if a &lt;code&gt;Post&lt;/code&gt; has a many to many relationship with &lt;code&gt;Tag&lt;/code&gt;, setting &lt;code&gt;:on_delete&lt;/code&gt; to &lt;code&gt;:delete_all&lt;/code&gt; will only delete entries from the &amp;ldquo;posts_tags&amp;rdquo; table in case &lt;code&gt;Post&lt;/code&gt; is deleted.</source>
          <target state="translated">당신이 관련된 제거하려고하면 &lt;code&gt;many_to_many&lt;/code&gt; 데이터를 &lt;strong&gt;(가) 스키마에 가입하고 목표 협회에서 결코에서 체외 항상 데이터를 제거합니다&lt;/strong&gt; 설정하여 수 없습니다 &lt;code&gt;:on_replace&lt;/code&gt; 을 에 &lt;code&gt;:delete&lt;/code&gt; , &lt;code&gt;:on_delete&lt;/code&gt; 에 &lt;code&gt;:delete_all&lt;/code&gt; 나 같은 변경 집합 기능을 사용하여 &lt;a href=&quot;ecto.changeset#put_assoc/3&quot;&gt; &lt;code&gt;Ecto.Changeset.put_assoc/3&lt;/code&gt; &lt;/a&gt; . 예를 들어 &lt;code&gt;Post&lt;/code&gt; 가 &lt;code&gt;Tag&lt;/code&gt; 와 다 대다 관계인 경우 &lt;code&gt;:on_delete&lt;/code&gt; to &lt;code&gt;:delete_all&lt;/code&gt; 을 설정 하면 &lt;code&gt;Post&lt;/code&gt; 가 삭제 된 경우&amp;ldquo;posts_tags&amp;rdquo;테이블에서 항목 만 삭제 됩니다.</target>
        </trans-unit>
        <trans-unit id="33aeade4ec4114f6d64f05c0e4ded54c69c06049" translate="yes" xml:space="preserve">
          <source>If you attempt to write it as &lt;code&gt;where: p.id in ^subquery(foo)&lt;/code&gt;, Ecto won&amp;rsquo;t accept such query. However, the subquery above can be written as a JOIN, which is supported by Ecto. The final Ecto query will look like this:</source>
          <target state="translated">&lt;code&gt;where: p.id in ^subquery(foo)&lt;/code&gt; 과 같이 쓰려고하면 Ecto는 그러한 쿼리를 허용하지 않습니다. 그러나 위의 하위 쿼리는 Ecto에서 지원하는 JOIN으로 작성할 수 있습니다. 최종 Ecto 쿼리는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="a8c0fdbca7cff696f9dab2f2e658e9f4fc49ebd8" translate="yes" xml:space="preserve">
          <source>If you need an escape hatch, Ecto provides fragments (see &lt;a href=&quot;ecto.query.api#fragment/1&quot;&gt;&lt;code&gt;Ecto.Query.API.fragment/1&lt;/code&gt;&lt;/a&gt;) to inject SQL (and non-SQL) fragments into queries.</source>
          <target state="translated">이스케이프 해치가 필요한 경우 Ecto는 조각 ( &lt;a href=&quot;ecto.query.api#fragment/1&quot;&gt; &lt;code&gt;Ecto.Query.API.fragment/1&lt;/code&gt; &lt;/a&gt; 참조 )을 제공하여 SQL (및 비 SQL) 조각을 쿼리에 삽입합니다.</target>
        </trans-unit>
        <trans-unit id="43ecb1e3f8dbc11e08115c78cf6e2d60dbd4aefe" translate="yes" xml:space="preserve">
          <source>If you need custom options on the underlying field, you can define the field explicitly and then pass &lt;code&gt;define_field: false&lt;/code&gt; to &lt;code&gt;belongs_to&lt;/code&gt;:</source>
          <target state="translated">기본 필드에 사용자 정의 옵션이 필요한 경우 필드를 명시 적으로 정의한 다음 &lt;code&gt;define_field: false&lt;/code&gt; 를 &lt;code&gt;belongs_to&lt;/code&gt; 로 전달할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="109f5082f2f1b912050b16bb98f4693eba354f1f" translate="yes" xml:space="preserve">
          <source>If you need to guarantee the data in the returned struct mirrors the database, you have three options:</source>
          <target state="translated">리턴 된 구조체의 데이터가 데이터베이스를 미러링하도록 보장해야하는 경우 세 가지 옵션이 있습니다.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
