<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="codeception">
    <body>
      <group id="codeception">
        <trans-unit id="5c3d982a812b295d5b49a02e530108fc6a746a77" translate="yes" xml:space="preserve">
          <source>Steps can also be matched with regex expressions. This way we can make more flexible steps</source>
          <target state="translated">단계는 정규식과도 일치시킬 수 있습니다. 이렇게하면보다 유연한 단계를 만들 수 있습니다</target>
        </trans-unit>
        <trans-unit id="43a1f02f811190703678e0cc1d87fa782f0048bd" translate="yes" xml:space="preserve">
          <source>Steps in background are defined the same way as in scenarios.</source>
          <target state="translated">백그라운드 단계는 시나리오와 동일한 방식으로 정의됩니다.</target>
        </trans-unit>
        <trans-unit id="f9f57686acc22df516f6fe01ba7f18acd99a1841" translate="yes" xml:space="preserve">
          <source>Stores an item &lt;code&gt;$value&lt;/code&gt; with &lt;code&gt;$key&lt;/code&gt; on the APC(u).</source>
          <target state="translated">APC (u)에 &lt;code&gt;$key&lt;/code&gt; 와 함께 항목 &lt;code&gt;$value&lt;/code&gt; 를 저장합니다 .</target>
        </trans-unit>
        <trans-unit id="5f912038a03d9d87434351f8ea98f8053de48586" translate="yes" xml:space="preserve">
          <source>Stores an item &lt;code&gt;$value&lt;/code&gt; with &lt;code&gt;$key&lt;/code&gt; on the Memcached server.</source>
          <target state="translated">Memcached 서버에서 &lt;code&gt;$key&lt;/code&gt; 와 함께 항목 &lt;code&gt;$value&lt;/code&gt; 를 저장 합니다.</target>
        </trans-unit>
        <trans-unit id="89264093eedac2573e3a15a086000440bb83d0cc" translate="yes" xml:space="preserve">
          <source>Strict Locator</source>
          <target state="translated">엄격한 로케이터</target>
        </trans-unit>
        <trans-unit id="b1202647435df2841ab6052497b12a2c7b470565" translate="yes" xml:space="preserve">
          <source>Strings: its value will be overwritten with $value</source>
          <target state="translated">문자열 : 값이 $ value로 덮어 쓰기</target>
        </trans-unit>
        <trans-unit id="5344b9208082b393c5f94da59a357949604fc9d6" translate="yes" xml:space="preserve">
          <source>Stubbing a method call to return a list of values in the specified order.</source>
          <target state="translated">지정된 순서로 값 목록을 반환하기 위해 메서드 호출을 스터 빙합니다.</target>
        </trans-unit>
        <trans-unit id="3107408a50c756bdc03dcf7d5aed6d74eb0c9e3e" translate="yes" xml:space="preserve">
          <source>Stubs</source>
          <target state="translated">Stubs</target>
        </trans-unit>
        <trans-unit id="243394d0155c31adcea7d3d4d191d2fd6d1dcb03" translate="yes" xml:space="preserve">
          <source>Stubs can also be created using static methods from &lt;code&gt;Codeception\Stub&lt;/code&gt; class. In this</source>
          <target state="translated">&lt;code&gt;Codeception\Stub&lt;/code&gt; 클래스의 정적 메서드를 사용하여 스텁을 만들 수도 있습니다 . 이것에서</target>
        </trans-unit>
        <trans-unit id="390b2d50519e50c0a7c83d6c89de08aebd773a8d" translate="yes" xml:space="preserve">
          <source>Stubs can be created with a static methods of &lt;code&gt;Codeception\Stub&lt;/code&gt;.</source>
          <target state="translated">스텁은 정적 메소드 &lt;code&gt;Codeception\Stub&lt;/code&gt; 로 작성 될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="a6958aa2c93904bceab6ea7532c2f548dcbcbf3e" translate="yes" xml:space="preserve">
          <source>Submits request to endpoint.</source>
          <target state="translated">엔드 포인트에 요청을 제출합니다.</target>
        </trans-unit>
        <trans-unit id="7474e42f9d0a163b4975357f7a773f2977b1c004" translate="yes" xml:space="preserve">
          <source>Submits the given form on the page, optionally with the given form values. Give the form fields values as an array. Note that hidden fields can&amp;rsquo;t be accessed.</source>
          <target state="translated">주어진 양식 값을 선택적으로 주어진 양식을 페이지에 제출합니다. 양식 필드 값을 배열로 제공하십시오. 숨겨진 필드에는 액세스 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="200484f0fc61d5da64facb469035e4d047290a34" translate="yes" xml:space="preserve">
          <source>Submits the given form on the page, with the given form values. Pass the form field&amp;rsquo;s values as an array in the second parameter.</source>
          <target state="translated">주어진 양식 값과 함께 주어진 양식을 페이지에 제출합니다. 두 번째 매개 변수에서 양식 필드의 값을 배열로 전달하십시오.</target>
        </trans-unit>
        <trans-unit id="5ebde4c2b10e6ace16338f84a54f868d47c06a9e" translate="yes" xml:space="preserve">
          <source>Such talks should produce written stories. There should be an actor that doing some things, the feature that should be fulfilled within the story and the result achieved.</source>
          <target state="translated">그러한 대화는 글을 써야합니다. 어떤 일을하는 배우, 스토리 내에서 성취되어야 할 기능 및 달성 된 결과가 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="3bdbdbaf2772c561a79d8c0079ce87ea45d56845" translate="yes" xml:space="preserve">
          <source>Suite Configuration</source>
          <target state="translated">스위트 구성</target>
        </trans-unit>
        <trans-unit id="2b246b23873f987c00a1dcad653b7457dfd1a8ee" translate="yes" xml:space="preserve">
          <source>Suite, Result, Settings</source>
          <target state="translated">스위트, 결과, 설정</target>
        </trans-unit>
        <trans-unit id="509b0c94b2034e962690fbc25d569daa626c21da" translate="yes" xml:space="preserve">
          <source>Suite, Settings</source>
          <target state="translated">스위트, 설정</target>
        </trans-unit>
        <trans-unit id="b4e883d3f0f5d4d2d3dc7cab459e21a804c8b259" translate="yes" xml:space="preserve">
          <source>Suites</source>
          <target state="translated">Suites</target>
        </trans-unit>
        <trans-unit id="ccb0f62197d93ae3c79e26289a42e401c010124a" translate="yes" xml:space="preserve">
          <source>Supported and tested FTP types are:</source>
          <target state="translated">지원 및 테스트 된 FTP 유형은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="93ee94ed984d27d6d3e470925ea6048f3466e20d" translate="yes" xml:space="preserve">
          <source>Supported and tested databases are:</source>
          <target state="translated">지원 및 테스트 된 데이터베이스는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="c8dd111a9740e47a7a16dc7c88b6e675ede5be59" translate="yes" xml:space="preserve">
          <source>Supported and tested queue types are:</source>
          <target state="translated">지원되고 테스트 된 큐 유형은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="c8dde8628d32517131f252a8c0c04d9237915dc2" translate="yes" xml:space="preserve">
          <source>Supported operators: &lt;code&gt;&amp;lt;&lt;/code&gt;, &lt;code&gt;&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;gt;=&lt;/code&gt;, &lt;code&gt;&amp;lt;=&lt;/code&gt;, &lt;code&gt;!=&lt;/code&gt;, &lt;code&gt;like&lt;/code&gt;.</source>
          <target state="translated">지원되는 운영 : &lt;code&gt;&amp;lt;&lt;/code&gt; , &lt;code&gt;&amp;gt;&lt;/code&gt; , &lt;code&gt;&amp;gt;=&lt;/code&gt; , &lt;code&gt;&amp;lt;=&lt;/code&gt; , &lt;code&gt;!=&lt;/code&gt; , &lt;code&gt;like&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e3e72aed0af6318d72dd40dfd00a7e6e09acc7a5" translate="yes" xml:space="preserve">
          <source>Switch to another frame on the page.</source>
          <target state="translated">페이지의 다른 프레임으로 전환하십시오.</target>
        </trans-unit>
        <trans-unit id="14a664c9a64204eea0378a3b6aaa43d88c5c000f" translate="yes" xml:space="preserve">
          <source>Switch to another window identified by name.</source>
          <target state="translated">이름으로 식별 된 다른 창으로 전환하십시오.</target>
        </trans-unit>
        <trans-unit id="de8390ce90c8374dc6ad7a245ff0f103b9228ff2" translate="yes" xml:space="preserve">
          <source>Switch to iframe or frame on the page.</source>
          <target state="translated">페이지에서 iframe 또는 프레임으로 전환하십시오.</target>
        </trans-unit>
        <trans-unit id="9c43ffa6720ada1f1f6731369eac2d923171ffaf" translate="yes" xml:space="preserve">
          <source>Switches to next browser tab. An offset can be specified.</source>
          <target state="translated">다음 브라우저 탭으로 전환합니다. 오프셋을 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="390439ace1e752c36359813dc176064e33c86282" translate="yes" xml:space="preserve">
          <source>Switches to previous browser tab. An offset can be specified.</source>
          <target state="translated">이전 브라우저 탭으로 전환합니다. 오프셋을 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d1c19bea4e2a2e0b334586da45d1990f4121ffec" translate="yes" xml:space="preserve">
          <source>Symfony</source>
          <target state="translated">Symfony</target>
        </trans-unit>
        <trans-unit id="91968eab09193fa9ec7265604ad9a827409ef797" translate="yes" xml:space="preserve">
          <source>Symfony 2.x</source>
          <target state="translated">심포니 2.x</target>
        </trans-unit>
        <trans-unit id="cea1498713815f07289ff18f121f2c87639d6179" translate="yes" xml:space="preserve">
          <source>Symfony 3.x</source>
          <target state="translated">심포니 3.x</target>
        </trans-unit>
        <trans-unit id="eceb3e22da12ffbc691fe5205773bf12857c913b" translate="yes" xml:space="preserve">
          <source>Symfony 4.x</source>
          <target state="translated">심포니 4.x</target>
        </trans-unit>
        <trans-unit id="d9743911a95aec0b6c1e5f8eba4a15a36b9b9790" translate="yes" xml:space="preserve">
          <source>Symfony::_findElements</source>
          <target state="translated">Symfony::_findElements</target>
        </trans-unit>
        <trans-unit id="509983cde3b7d438a65230da7560efa5667217c9" translate="yes" xml:space="preserve">
          <source>Symfony::_getResponseContent</source>
          <target state="translated">Symfony::_getResponseContent</target>
        </trans-unit>
        <trans-unit id="5dca501155ff6aba8a0e30f052d66e0e04003f4c" translate="yes" xml:space="preserve">
          <source>Symfony::_loadPage</source>
          <target state="translated">Symfony::_loadPage</target>
        </trans-unit>
        <trans-unit id="d73d7c6f824239ea13e03c2df108775d2be27683" translate="yes" xml:space="preserve">
          <source>Symfony::_request</source>
          <target state="translated">Symfony::_request</target>
        </trans-unit>
        <trans-unit id="2ccae628f7587b3119b6d96b2f0da84cd847ab38" translate="yes" xml:space="preserve">
          <source>Symfony::_savePageSource</source>
          <target state="translated">Symfony::_savePageSource</target>
        </trans-unit>
        <trans-unit id="735519f679c2fb6f5cc14eb6721a5ae2a5961039" translate="yes" xml:space="preserve">
          <source>Symfony::amHttpAuthenticated</source>
          <target state="translated">Symfony::amHttpAuthenticated</target>
        </trans-unit>
        <trans-unit id="8b19918aecf5a8a95be893716b64016b40579bb9" translate="yes" xml:space="preserve">
          <source>Symfony::amOnPage</source>
          <target state="translated">Symfony::amOnPage</target>
        </trans-unit>
        <trans-unit id="15b64072cfd9ca87bee7622a4322441e2b8b183c" translate="yes" xml:space="preserve">
          <source>Symfony::amOnRoute</source>
          <target state="translated">Symfony::amOnRoute</target>
        </trans-unit>
        <trans-unit id="7bdb9afb6a072cc5ba3f887c721c9fd195bd8b65" translate="yes" xml:space="preserve">
          <source>Symfony::attachFile</source>
          <target state="translated">Symfony::attachFile</target>
        </trans-unit>
        <trans-unit id="9a918577ca3d3b14ee3a4f39673c1e71b59ee16a" translate="yes" xml:space="preserve">
          <source>Symfony::checkOption</source>
          <target state="translated">Symfony::checkOption</target>
        </trans-unit>
        <trans-unit id="aa4dea019a799040bec92fc4149bfbf47e79aaf3" translate="yes" xml:space="preserve">
          <source>Symfony::click</source>
          <target state="translated">Symfony::click</target>
        </trans-unit>
        <trans-unit id="917427efe31f644ad1333c5e14e20b4c6702ceda" translate="yes" xml:space="preserve">
          <source>Symfony::deleteHeader</source>
          <target state="translated">Symfony::deleteHeader</target>
        </trans-unit>
        <trans-unit id="6c8de5e6f13e4d7213aa9240a865128868f4ffd1" translate="yes" xml:space="preserve">
          <source>Symfony::dontSee</source>
          <target state="translated">Symfony::dontSee</target>
        </trans-unit>
        <trans-unit id="3d601ed0b026f10668fe7725452351f67eef9341" translate="yes" xml:space="preserve">
          <source>Symfony::dontSeeCheckboxIsChecked</source>
          <target state="translated">Symfony::dontSeeCheckboxIsChecked</target>
        </trans-unit>
        <trans-unit id="8c50f64936270dbebb7f38ac66fdd410b2a81657" translate="yes" xml:space="preserve">
          <source>Symfony::dontSeeCookie</source>
          <target state="translated">Symfony::dontSeeCookie</target>
        </trans-unit>
        <trans-unit id="06046c88c7d51e1591665e3aae2bcc06968fb321" translate="yes" xml:space="preserve">
          <source>Symfony::dontSeeCurrentUrlEquals</source>
          <target state="translated">Symfony::dontSeeCurrentUrlEquals</target>
        </trans-unit>
        <trans-unit id="e7001319339b18893c21a191a03213f778246679" translate="yes" xml:space="preserve">
          <source>Symfony::dontSeeCurrentUrlMatches</source>
          <target state="translated">Symfony::dontSeeCurrentUrlMatches</target>
        </trans-unit>
        <trans-unit id="e280352e9ac8d10f2b5e5b2d86b6dc14127eb93e" translate="yes" xml:space="preserve">
          <source>Symfony::dontSeeElement</source>
          <target state="translated">Symfony::dontSeeElement</target>
        </trans-unit>
        <trans-unit id="b033bbaed09a56a6cbe995d656b759ad3da1edf5" translate="yes" xml:space="preserve">
          <source>Symfony::dontSeeEmailIsSent</source>
          <target state="translated">Symfony::dontSeeEmailIsSent</target>
        </trans-unit>
        <trans-unit id="e3c45e55eeb462f95b6ea93e2a15132df0611d32" translate="yes" xml:space="preserve">
          <source>Symfony::dontSeeInCurrentUrl</source>
          <target state="translated">Symfony::dontSeeInCurrentUrl</target>
        </trans-unit>
        <trans-unit id="507fab0fad12121a37f2f4dc2de17b5874694d1a" translate="yes" xml:space="preserve">
          <source>Symfony::dontSeeInField</source>
          <target state="translated">Symfony::dontSeeInField</target>
        </trans-unit>
        <trans-unit id="450d2adaab7c9563950f7df17973eff06faf4901" translate="yes" xml:space="preserve">
          <source>Symfony::dontSeeInFormFields</source>
          <target state="translated">Symfony::dontSeeInFormFields</target>
        </trans-unit>
        <trans-unit id="90bf4f31d4dff0233e283ef76971a62db120d012" translate="yes" xml:space="preserve">
          <source>Symfony::dontSeeInSource</source>
          <target state="translated">Symfony::dontSeeInSource</target>
        </trans-unit>
        <trans-unit id="c90ad23d97ce562a8b62cd8b3987c6fbd765d92d" translate="yes" xml:space="preserve">
          <source>Symfony::dontSeeInTitle</source>
          <target state="translated">Symfony::dontSeeInTitle</target>
        </trans-unit>
        <trans-unit id="9a4c2b0b9aeff2b8cc83c34645278b80e0c897ee" translate="yes" xml:space="preserve">
          <source>Symfony::dontSeeLink</source>
          <target state="translated">Symfony::dontSeeLink</target>
        </trans-unit>
        <trans-unit id="d5b15367977606afdc91d6ec63e800f37d448421" translate="yes" xml:space="preserve">
          <source>Symfony::dontSeeOptionIsSelected</source>
          <target state="translated">Symfony::dontSeeOptionIsSelected</target>
        </trans-unit>
        <trans-unit id="a86dbf6e685059e677afb8519fd3b7551f7e9f18" translate="yes" xml:space="preserve">
          <source>Symfony::dontSeeResponseCodeIs</source>
          <target state="translated">Symfony::dontSeeResponseCodeIs</target>
        </trans-unit>
        <trans-unit id="69b32167c508ab62f3799a1f103c587fdaa80c2b" translate="yes" xml:space="preserve">
          <source>Symfony::fillField</source>
          <target state="translated">Symfony::fillField</target>
        </trans-unit>
        <trans-unit id="79588a817177c07f3ff587d3bb64ad65f61b456c" translate="yes" xml:space="preserve">
          <source>Symfony::grabAttributeFrom</source>
          <target state="translated">Symfony::grabAttributeFrom</target>
        </trans-unit>
        <trans-unit id="3b82ec1a9ff35c4017ac732e19fee33db6750c16" translate="yes" xml:space="preserve">
          <source>Symfony::grabCookie</source>
          <target state="translated">Symfony::grabCookie</target>
        </trans-unit>
        <trans-unit id="c98d72e99b5b1d1932db868d919bf09a0a9c3ac9" translate="yes" xml:space="preserve">
          <source>Symfony::grabFromCurrentUrl</source>
          <target state="translated">Symfony::grabFromCurrentUrl</target>
        </trans-unit>
        <trans-unit id="c3021acdfba3268e7b7d7797e5755492d4005a85" translate="yes" xml:space="preserve">
          <source>Symfony::grabMultiple</source>
          <target state="translated">Symfony::grabMultiple</target>
        </trans-unit>
        <trans-unit id="a30c317c1261e25499232b2ced82dc0a24c7d687" translate="yes" xml:space="preserve">
          <source>Symfony::grabPageSource</source>
          <target state="translated">Symfony::grabPageSource</target>
        </trans-unit>
        <trans-unit id="0b1abe54f38370c2efd288f3f52b797d004be520" translate="yes" xml:space="preserve">
          <source>Symfony::grabService</source>
          <target state="translated">Symfony::grabService</target>
        </trans-unit>
        <trans-unit id="e1286fb4267691f658851b04ff6e5c8f6dbbc3e7" translate="yes" xml:space="preserve">
          <source>Symfony::grabTextFrom</source>
          <target state="translated">Symfony::grabTextFrom</target>
        </trans-unit>
        <trans-unit id="b0a821a16652a9e453aa875f934f0ab885d82393" translate="yes" xml:space="preserve">
          <source>Symfony::grabValueFrom</source>
          <target state="translated">Symfony::grabValueFrom</target>
        </trans-unit>
        <trans-unit id="50975d7a67465914f4b8d65b7b5f9eedc2395dda" translate="yes" xml:space="preserve">
          <source>Symfony::haveHttpHeader</source>
          <target state="translated">Symfony::haveHttpHeader</target>
        </trans-unit>
        <trans-unit id="7b09f2fa3989ffcfcd60000af7200313dd5c760f" translate="yes" xml:space="preserve">
          <source>Symfony::invalidateCachedRouter</source>
          <target state="translated">Symfony::invalidateCachedRouter</target>
        </trans-unit>
        <trans-unit id="416d26370dde325d054ee477f47a3a742948cf7a" translate="yes" xml:space="preserve">
          <source>Symfony::makeHtmlSnapshot</source>
          <target state="translated">Symfony::makeHtmlSnapshot</target>
        </trans-unit>
        <trans-unit id="a2a5a514bc99edad52e2dfdb1c6f95c905ab9fb6" translate="yes" xml:space="preserve">
          <source>Symfony::moveBack</source>
          <target state="translated">Symfony::moveBack</target>
        </trans-unit>
        <trans-unit id="f7df864f59ea47c518de28ff6f41cdf5a7887d94" translate="yes" xml:space="preserve">
          <source>Symfony::onReconfigure</source>
          <target state="translated">Symfony::onReconfigure</target>
        </trans-unit>
        <trans-unit id="5e65c0cc4f7057e5682773144a95a4b6d2c3fb59" translate="yes" xml:space="preserve">
          <source>Symfony::persistService</source>
          <target state="translated">Symfony::persistService</target>
        </trans-unit>
        <trans-unit id="54608976cc587e4220e71bb8d6e960d978b738ad" translate="yes" xml:space="preserve">
          <source>Symfony::rebootClientKernel</source>
          <target state="translated">Symfony::rebootClientKernel</target>
        </trans-unit>
        <trans-unit id="480f2103746b5b9376e9a042b6c5a9779c087902" translate="yes" xml:space="preserve">
          <source>Symfony::resetCookie</source>
          <target state="translated">Symfony::resetCookie</target>
        </trans-unit>
        <trans-unit id="60e199cce570d70502985d778b6052c11865e402" translate="yes" xml:space="preserve">
          <source>Symfony::see</source>
          <target state="translated">Symfony::see</target>
        </trans-unit>
        <trans-unit id="cf113686237f78c672a4b5142b2e7514aa43bc43" translate="yes" xml:space="preserve">
          <source>Symfony::seeCheckboxIsChecked</source>
          <target state="translated">Symfony::seeCheckboxIsChecked</target>
        </trans-unit>
        <trans-unit id="6b55ba46e9702923dab2f66d38abc2521fe26abc" translate="yes" xml:space="preserve">
          <source>Symfony::seeCookie</source>
          <target state="translated">Symfony::seeCookie</target>
        </trans-unit>
        <trans-unit id="1ff1127970839d2933181bc1a7e83d8ba9f4fad8" translate="yes" xml:space="preserve">
          <source>Symfony::seeCurrentRouteIs</source>
          <target state="translated">Symfony::seeCurrentRouteIs</target>
        </trans-unit>
        <trans-unit id="eeb148b36edd33d6bb6c61195992673ea8a11a7a" translate="yes" xml:space="preserve">
          <source>Symfony::seeCurrentUrlEquals</source>
          <target state="translated">Symfony::seeCurrentUrlEquals</target>
        </trans-unit>
        <trans-unit id="d77d75d2fa51e1f0d10bfbaf40962d8fc900b983" translate="yes" xml:space="preserve">
          <source>Symfony::seeCurrentUrlMatches</source>
          <target state="translated">Symfony::seeCurrentUrlMatches</target>
        </trans-unit>
        <trans-unit id="99bc41c841fd9ff64ba7fc38c1fd392659edc891" translate="yes" xml:space="preserve">
          <source>Symfony::seeElement</source>
          <target state="translated">Symfony::seeElement</target>
        </trans-unit>
        <trans-unit id="754de82979b3606ade7c1fdaa266af03898145dc" translate="yes" xml:space="preserve">
          <source>Symfony::seeEmailIsSent</source>
          <target state="translated">Symfony::seeEmailIsSent</target>
        </trans-unit>
        <trans-unit id="991217b63a2cbcd98bc30a1395b9e266725f2d36" translate="yes" xml:space="preserve">
          <source>Symfony::seeInCurrentRoute</source>
          <target state="translated">Symfony::seeInCurrentRoute</target>
        </trans-unit>
        <trans-unit id="5ba4fe8d8abe8e857caf0abed3efe21a1c5b00c6" translate="yes" xml:space="preserve">
          <source>Symfony::seeInCurrentUrl</source>
          <target state="translated">Symfony::seeInCurrentUrl</target>
        </trans-unit>
        <trans-unit id="0081eb44ca122d2dbbc860d0e8092545fad10fa0" translate="yes" xml:space="preserve">
          <source>Symfony::seeInField</source>
          <target state="translated">Symfony::seeInField</target>
        </trans-unit>
        <trans-unit id="50b94a2a298a8294741c797431d0e50211b7ed8b" translate="yes" xml:space="preserve">
          <source>Symfony::seeInFormFields</source>
          <target state="translated">Symfony::seeInFormFields</target>
        </trans-unit>
        <trans-unit id="96297d7ac206fa18e6780936fa9bd9034d996654" translate="yes" xml:space="preserve">
          <source>Symfony::seeInSource</source>
          <target state="translated">Symfony::seeInSource</target>
        </trans-unit>
        <trans-unit id="90574edd84ccf8e66c71bad0b4f398dc3fc1e8dd" translate="yes" xml:space="preserve">
          <source>Symfony::seeInTitle</source>
          <target state="translated">Symfony::seeInTitle</target>
        </trans-unit>
        <trans-unit id="4c6089bc6fef20ba7bbf36f96fb96b9b0bc661c9" translate="yes" xml:space="preserve">
          <source>Symfony::seeLink</source>
          <target state="translated">Symfony::seeLink</target>
        </trans-unit>
        <trans-unit id="f83dc33d5d9b2e11049aed7fbfb7044a3cb87726" translate="yes" xml:space="preserve">
          <source>Symfony::seeNumberOfElements</source>
          <target state="translated">Symfony::seeNumberOfElements</target>
        </trans-unit>
        <trans-unit id="4aaecb46863f0a6a00ba1460a69b95fbe0a739f0" translate="yes" xml:space="preserve">
          <source>Symfony::seeOptionIsSelected</source>
          <target state="translated">Symfony::seeOptionIsSelected</target>
        </trans-unit>
        <trans-unit id="0df79e1f3fbed5002d9019989325336a47a4e406" translate="yes" xml:space="preserve">
          <source>Symfony::seePageNotFound</source>
          <target state="translated">Symfony::seePageNotFound</target>
        </trans-unit>
        <trans-unit id="e3eabb75fafc75ea34b1dba77824d1d97fdb65d9" translate="yes" xml:space="preserve">
          <source>Symfony::seeResponseCodeIs</source>
          <target state="translated">Symfony::seeResponseCodeIs</target>
        </trans-unit>
        <trans-unit id="c2dfb0ebb8e2a9a18ad5a36e49aa23a05f2fe256" translate="yes" xml:space="preserve">
          <source>Symfony::seeResponseCodeIsBetween</source>
          <target state="translated">Symfony::seeResponseCodeIsBetween</target>
        </trans-unit>
        <trans-unit id="a01c8bd200657ed4c7704ffdf023e8b196f28a9b" translate="yes" xml:space="preserve">
          <source>Symfony::seeResponseCodeIsClientError</source>
          <target state="translated">Symfony::seeResponseCodeIsClientError</target>
        </trans-unit>
        <trans-unit id="c374fdc25d1281b11ad901a3f90bfac9763ada17" translate="yes" xml:space="preserve">
          <source>Symfony::seeResponseCodeIsRedirection</source>
          <target state="translated">Symfony::seeResponseCodeIsRedirection</target>
        </trans-unit>
        <trans-unit id="cfd03bb69e640262a012f92d8eb1ccce91d9135a" translate="yes" xml:space="preserve">
          <source>Symfony::seeResponseCodeIsServerError</source>
          <target state="translated">Symfony::seeResponseCodeIsServerError</target>
        </trans-unit>
        <trans-unit id="d469bb2afb9acc579da8d217f5789e8354d6ffd6" translate="yes" xml:space="preserve">
          <source>Symfony::seeResponseCodeIsSuccessful</source>
          <target state="translated">Symfony::seeResponseCodeIsSuccessful</target>
        </trans-unit>
        <trans-unit id="7bb84fa6e74bcbfc026d707ec16c36b001008296" translate="yes" xml:space="preserve">
          <source>Symfony::selectOption</source>
          <target state="translated">Symfony::selectOption</target>
        </trans-unit>
        <trans-unit id="096989d2c56f3e5096e7f923412f27b07ebbdba9" translate="yes" xml:space="preserve">
          <source>Symfony::sendAjaxGetRequest</source>
          <target state="translated">Symfony::sendAjaxGetRequest</target>
        </trans-unit>
        <trans-unit id="7b1bc8c66c67435928977c7bfc81ee3f824bd1e8" translate="yes" xml:space="preserve">
          <source>Symfony::sendAjaxPostRequest</source>
          <target state="translated">Symfony::sendAjaxPostRequest</target>
        </trans-unit>
        <trans-unit id="b60876a334e5b1742e5b7086e607e476e566de78" translate="yes" xml:space="preserve">
          <source>Symfony::sendAjaxRequest</source>
          <target state="translated">Symfony::sendAjaxRequest</target>
        </trans-unit>
        <trans-unit id="00ea752f31efcd687d613b09f0fc0d1fd735cf06" translate="yes" xml:space="preserve">
          <source>Symfony::setCookie</source>
          <target state="translated">Symfony::setCookie</target>
        </trans-unit>
        <trans-unit id="8c676dbddfa08013ecaa1c6ab8b5960410f36f1c" translate="yes" xml:space="preserve">
          <source>Symfony::submitForm</source>
          <target state="translated">Symfony::submitForm</target>
        </trans-unit>
        <trans-unit id="c07379236a73021b80a0dcd66a377b438598db60" translate="yes" xml:space="preserve">
          <source>Symfony::switchToIframe</source>
          <target state="translated">Symfony::switchToIframe</target>
        </trans-unit>
        <trans-unit id="b4a6a7150984941409bee6fb7d371a8da640d4c1" translate="yes" xml:space="preserve">
          <source>Symfony::uncheckOption</source>
          <target state="translated">Symfony::uncheckOption</target>
        </trans-unit>
        <trans-unit id="a89dc82ebddc0de32b4842408d2edd753c110cdf" translate="yes" xml:space="preserve">
          <source>Symfony::unpersistService</source>
          <target state="translated">Symfony::unpersistService</target>
        </trans-unit>
        <trans-unit id="8652f6cf8392638c00eff2da783b240d56a727ce" translate="yes" xml:space="preserve">
          <source>System requirements</source>
          <target state="translated">시스템 요구 사항</target>
        </trans-unit>
        <trans-unit id="4ad91a8e6898f7c0e6ca3483612717ed385045a5" translate="yes" xml:space="preserve">
          <source>Tab is opened by using &lt;code&gt;window.open&lt;/code&gt; javascript in a browser. Please note, that adblock can restrict creating such tabs.</source>
          <target state="translated">브라우저에서 &lt;code&gt;window.open&lt;/code&gt; javascript를 사용하여 탭이 열립니다 . 애드 블록은 이러한 탭 생성을 제한 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="193daf137ed8b89de36d47c3df5fd8f66c0e1d14" translate="yes" xml:space="preserve">
          <source>Tables</source>
          <target state="translated">Tables</target>
        </trans-unit>
        <trans-unit id="cee951cc48adee200735cdf816b919e66cd9f69f" translate="yes" xml:space="preserve">
          <source>Tables is a recommended ways to pass arrays into test scenarios. Inside a step definition data is stored in argument passed as &lt;code&gt;\Behat\Gherkin\Node\TableNode&lt;/code&gt; instance.</source>
          <target state="translated">테이블은 배열을 테스트 시나리오에 전달하는 데 권장되는 방법입니다. 단계 정의 데이터 안에는 &lt;code&gt;\Behat\Gherkin\Node\TableNode&lt;/code&gt; 인스턴스 로 전달 된 인수에 저장됩니다 .</target>
        </trans-unit>
        <trans-unit id="1efa71619d15a19a43b3d9877337ae315f174228" translate="yes" xml:space="preserve">
          <source>Tag should be placed before &lt;em&gt;Scenario:&lt;/em&gt; or before &lt;em&gt;Feature:&lt;/em&gt; keyword. In the last case all scenarios of that feature will be added to corresponding group.</source>
          <target state="translated">태그는 &lt;em&gt;시나리오 :&lt;/em&gt; 또는 &lt;em&gt;기능 :&lt;/em&gt; 키워드 앞에 배치해야합니다 . 마지막 경우 해당 기능의 모든 시나리오가 해당 그룹에 추가됩니다.</target>
        </trans-unit>
        <trans-unit id="848eed0fbd5429f556b2982dec3ea87136e33e44" translate="yes" xml:space="preserve">
          <source>Tags</source>
          <target state="translated">Tags</target>
        </trans-unit>
        <trans-unit id="d5b2f61461a42fb8dae779420be4afa2c24d86b7" translate="yes" xml:space="preserve">
          <source>Take a look at the complete reference for the module you are using. Most of its methods are common to all modules but some of them are unique.</source>
          <target state="translated">사용중인 모듈에 대한 완전한 참조를보십시오. 대부분의 방법은 모든 모듈에 공통적이지만 일부는 고유합니다.</target>
        </trans-unit>
        <trans-unit id="4b744c6e6d08455ba63f9116b0d60e6119603afb" translate="yes" xml:space="preserve">
          <source>Takes a screenshot of the current window and saves it to &lt;code&gt;tests/_output/debug&lt;/code&gt;.</source>
          <target state="translated">현재 창의 스크린 샷을 작성하여 &lt;code&gt;tests/_output/debug&lt;/code&gt; 에 저장합니다 .</target>
        </trans-unit>
        <trans-unit id="21bf264104ccf1ee9a751dd6a1ec49488b05d014" translate="yes" xml:space="preserve">
          <source>Takes last message from queue.</source>
          <target state="translated">큐에서 마지막 메시지를받습니다.</target>
        </trans-unit>
        <trans-unit id="2dff8fe74ec98d7eb09063b17888c6e507e27a38" translate="yes" xml:space="preserve">
          <source>Tasks from &lt;code&gt;\Codeception\Task\SplitTestsByGroups&lt;/code&gt; will generate non-intersecting group files. You can either split your tests by files or by single tests:</source>
          <target state="translated">에서 작업 &lt;code&gt;\Codeception\Task\SplitTestsByGroups&lt;/code&gt; 교차하지 않는 그룹 파일을 생성합니다. 테스트를 파일 또는 단일 테스트로 분할 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="451fbcaefbafe7d5187ef9326b56eb70d48e5075" translate="yes" xml:space="preserve">
          <source>TeamCity</source>
          <target state="translated">TeamCity</target>
        </trans-unit>
        <trans-unit id="40af9dda4a3fcad13508b0a246d0092c7d75cf3f" translate="yes" xml:space="preserve">
          <source>TeamCity is a hosted solution from JetBrains. The setup of it can be a bit tricky as TeamCity uses its own reporter format for parsing test results. PHPUnit since version 5.x has integrated support for this format, so does Codeception. What we need to do is to configure Codeception to use custom reporter. By default there is &lt;code&gt;--report&lt;/code&gt; option which provides an alternative output. You can change the reporter class in &lt;code&gt;codeception.yml&lt;/code&gt; configuration:</source>
          <target state="translated">TeamCity는 JetBrains의 호스팅 솔루션입니다. TeamCity는 자체 리포터 형식을 사용하여 테스트 결과를 분석하므로 설정이 약간 까다로울 수 있습니다. 버전 5.x 이후의 PHPUnit은이 형식에 대한 지원을 통합하여 Codeception도 지원합니다. 우리가해야 할 일은 커스텀 리포터를 사용하도록 Codeception을 구성하는 것입니다. 기본적으로 대체 출력을 제공하는 &lt;code&gt;--report&lt;/code&gt; 옵션이 있습니다. &lt;code&gt;codeception.yml&lt;/code&gt; 구성 에서 리포터 클래스를 변경할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="88eb893fdf5343a75775cf81d7fe42d986b0043c" translate="yes" xml:space="preserve">
          <source>Template class should be placed in &lt;code&gt;Codeception\Template&lt;/code&gt; namespace so Codeception could locate them by class name</source>
          <target state="translated">템플릿 클래스는 &lt;code&gt;Codeception\Template&lt;/code&gt; 네임 스페이스에 있어야 Codeception이 클래스 이름으로 템플릿을 찾을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a756846f9f9a8e6a39a42f213cb2548ddd69ea75" translate="yes" xml:space="preserve">
          <source>Templates should be inherited from &lt;a href=&quot;reference/inittemplate&quot;&gt;&lt;code&gt;Codeception\InitTemplate&lt;/code&gt;&lt;/a&gt; class and implement &lt;code&gt;setup&lt;/code&gt; method.</source>
          <target state="translated">템플릿은 &lt;a href=&quot;reference/inittemplate&quot;&gt; &lt;code&gt;Codeception\InitTemplate&lt;/code&gt; &lt;/a&gt; 클래스 에서 상속되고 &lt;code&gt;setup&lt;/code&gt; 방법을 구현 해야합니다 .</target>
        </trans-unit>
        <trans-unit id="640ab2bae07bedc4c163f679a746f7ab7fb5d1fa" translate="yes" xml:space="preserve">
          <source>Test</source>
          <target state="translated">Test</target>
        </trans-unit>
        <trans-unit id="8ca46ef63a3cf34638b522cfdf607fca7e78d4c0" translate="yes" xml:space="preserve">
          <source>Test Doubles</source>
          <target state="translated">테스트 복식</target>
        </trans-unit>
        <trans-unit id="d119d7754b071bba2ad701ae807bfa56d8b814e0" translate="yes" xml:space="preserve">
          <source>Test execution speed</source>
          <target state="translated">테스트 실행 속도</target>
        </trans-unit>
        <trans-unit id="93950f31b035ff3f4d9e8d4a3225bb9c0758a21a" translate="yes" xml:space="preserve">
          <source>Test paths</source>
          <target state="translated">테스트 경로</target>
        </trans-unit>
        <trans-unit id="130f654168b48cbd0ff45d5f280b69cda73cc472" translate="yes" xml:space="preserve">
          <source>Test, Fail</source>
          <target state="translated">테스트, 실패</target>
        </trans-unit>
        <trans-unit id="5e8d8d7e39b3bd93b30e481bec832940a763b23a" translate="yes" xml:space="preserve">
          <source>Testing Behavior</source>
          <target state="translated">테스트 행동</target>
        </trans-unit>
        <trans-unit id="a734405a434e29a3b02877164d21ac5c54274720" translate="yes" xml:space="preserve">
          <source>Testing Database</source>
          <target state="translated">테스트 데이터베이스</target>
        </trans-unit>
        <trans-unit id="ff45b77fe10e2dd711a9e43bb4234be53d5865d4" translate="yes" xml:space="preserve">
          <source>Testing Dynamic Data with Snapshots</source>
          <target state="translated">스냅 샷으로 동적 데이터 테스트</target>
        </trans-unit>
        <trans-unit id="e1d7e15db2216c186d41e4b13db2b435e9f138c6" translate="yes" xml:space="preserve">
          <source>Testing JSON Responses</source>
          <target state="translated">JSON 응답 테스트</target>
        </trans-unit>
        <trans-unit id="6ae35769401a134e41bbb7ad4ce533d4108ce2ec" translate="yes" xml:space="preserve">
          <source>Testing WebServices</source>
          <target state="translated">웹 서비스 테스트</target>
        </trans-unit>
        <trans-unit id="a5416feee882c0a2908950ba5af9d9dbc1877058" translate="yes" xml:space="preserve">
          <source>Testing XML Responses</source>
          <target state="translated">XML 응답 테스트</target>
        </trans-unit>
        <trans-unit id="35abc73469ec8d80139a800976754ffc4cad771e" translate="yes" xml:space="preserve">
          <source>Testing computer needs access to project&amp;rsquo;s PHP files</source>
          <target state="translated">테스트 컴퓨터는 프로젝트의 PHP 파일에 액세스해야합니다</target>
        </trans-unit>
        <trans-unit id="bc4273b3f2bc1be9624546df03b63a13c80eb0f2" translate="yes" xml:space="preserve">
          <source>Testing pieces of code before coupling them together is highly important as well. This way, you can be sure that some deeply hidden feature still works, even if it was not covered by functional or acceptance tests. This also shows care in producing stable and testable code.</source>
          <target state="translated">코드를 서로 연결하기 전에 테스트하는 것도 매우 중요합니다. 이렇게하면 기능 또는 승인 테스트에 포함되지 않은 일부 숨겨진 기능이 여전히 작동하는지 확인할 수 있습니다. 또한 안정적이고 테스트 가능한 코드 생성에주의를 기울입니다.</target>
        </trans-unit>
        <trans-unit id="cdda78e21defd9350a869ccc1e6fc06c5e69b4a8" translate="yes" xml:space="preserve">
          <source>Testing with a selection of remote/local queueing services, including Amazon&amp;rsquo;s SQS service Iron.io service and beanstalkd service.</source>
          <target state="translated">Amazon의 SQS 서비스 Iron.io 서비스 및 beantalkd 서비스를 포함한 다양한 원격 / 로컬 큐잉 서비스 테스트.</target>
        </trans-unit>
        <trans-unit id="3ada2358a0771d2fb106fe5467eb5dd50e9b17d5" translate="yes" xml:space="preserve">
          <source>TestingBot</source>
          <target state="translated">TestingBot</target>
        </trans-unit>
        <trans-unit id="990f816b4d99142b5e3785d909cb2712aa4b68f3" translate="yes" xml:space="preserve">
          <source>Tests can be started with the &lt;code&gt;run&lt;/code&gt; command:</source>
          <target state="translated">&lt;code&gt;run&lt;/code&gt; 명령으로 테스트를 시작할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="090def76668fd15c89e3d14b13f9a1efcdc7935c" translate="yes" xml:space="preserve">
          <source>Tests should not affect each other. That&amp;rsquo;s a rule of thumb. When tests interact with a database, they may change the data inside it, which would eventually lead to data inconsistency. A test may try to insert a record that has already been inserted, or retrieve a deleted record. To avoid test failures, the database should be brought back to its initial state before each test. Codeception has different methods and approaches to get your data cleaned.</source>
          <target state="translated">테스트는 서로 영향을 미치지 않아야합니다. 그것은 경험 법칙입니다. 테스트가 데이터베이스와 상호 작용할 때 데이터베이스 내부의 데이터가 변경되어 결국 데이터 불일치가 발생할 수 있습니다. 테스트는 이미 삽입 된 레코드를 삽입하거나 삭제 된 레코드를 검색하려고 시도 할 수 있습니다. 테스트 실패를 피하려면 각 테스트 전에 데이터베이스를 초기 상태로 되돌려 야합니다. Codeception에는 데이터를 정리하는 다양한 방법과 접근 방식이 있습니다.</target>
        </trans-unit>
        <trans-unit id="b5eb29aef6674e7a9336098909cb7847b0a0059d" translate="yes" xml:space="preserve">
          <source>Tests vs Features</source>
          <target state="translated">테스트 대 기능</target>
        </trans-unit>
        <trans-unit id="dd6ffc46d87c458cfbfffd6ce1a69784193070c1" translate="yes" xml:space="preserve">
          <source>Tests will be randomly reordered on each run. When tests executed in shuffle mode a seed value will be printed. Copy this seed value from output to be able to rerun tests in the same order.</source>
          <target state="translated">테스트는 각 실행마다 무작위로 재정렬됩니다. 셔플 모드에서 테스트를 실행하면 시드 값이 인쇄됩니다. 테스트에서 동일한 순서로 테스트를 다시 실행할 수 있도록이 시드 값을 출력에서 ​​복사하십시오.</target>
        </trans-unit>
        <trans-unit id="30b6fda3137a3460993392b5a9a737ff4fbd4b84" translate="yes" xml:space="preserve">
          <source>Text values inside a scenarios can be set inside a &lt;code&gt;&quot;&quot;&quot;&lt;/code&gt; block:</source>
          <target state="translated">시나리오 내의 텍스트 값은 &lt;code&gt;&quot;&quot;&quot;&lt;/code&gt; 블록 내에서 설정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="5913f2111b151fc90ac5d83371dc2d8a80819096" translate="yes" xml:space="preserve">
          <source>That&amp;rsquo;s a pretty simple yet powerful class to build XML structures in jQuery-like style. With no XML line actually written! Uses DOM extension to manipulate XML data.</source>
          <target state="translated">jQuery와 유사한 스타일로 XML 구조를 빌드하는 매우 간단하지만 강력한 클래스입니다. 실제로 작성된 XML 행이 없습니다! DOM 확장을 사용하여 XML 데이터를 조작합니다.</target>
        </trans-unit>
        <trans-unit id="a2f6d0b0434bdbe20fcedcf90c5a7a9d9e5e8cbb" translate="yes" xml:space="preserve">
          <source>That&amp;rsquo;s ok for now. But what files should be present in final coverage report? Pass an array of files or directory to include/exclude sections. The path ending with &amp;lsquo;*&amp;rsquo; matches the directory. Also you can use &amp;lsquo;*&amp;rsquo; mask in a file name, i.e. &lt;code&gt;app/models/*Model.php&lt;/code&gt; to match all models.</source>
          <target state="translated">지금은 괜찮습니다. 그러나 최종 적용 범위 보고서에 어떤 파일이 있어야합니까? 포함 / 제외 섹션에 파일 또는 디렉토리 배열을 전달하십시오. '*'로 끝나는 경로는 디렉토리와 일치합니다. 또한 파일 이름에 '*'마스크 (예 : &lt;code&gt;app/models/*Model.php&lt;/code&gt; ) 를 사용하여 모든 모델과 일치 시킬 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a0116a67c55276460a7a6390c0bc9c6578426e9e" translate="yes" xml:space="preserve">
          <source>That&amp;rsquo;s why it&amp;rsquo;s pretty important not just to cover your application with unit tests, but make unit tests self-explanatory. We do this for scenario-driven acceptance and functional tests, and we should do this for unit and integration tests as well.</source>
          <target state="translated">따라서 응용 프로그램을 단위 테스트로 다루는 것뿐만 아니라 단위 테스트를 자명하게 만드는 것이 매우 중요한 이유입니다. 시나리오 중심의 승인 및 기능 테스트를 위해이 작업을 수행하고 단위 및 통합 테스트에서도이 작업을 수행해야합니다.</target>
        </trans-unit>
        <trans-unit id="d02c17b23cfcb64797eb91636dc0cd0131d8a62f" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;modules/laravel5&quot;&gt;Laravel5&lt;/a&gt; module is included and requires no configuration:</source>
          <target state="translated">&lt;a href=&quot;modules/laravel5&quot;&gt;Laravel5의&lt;/a&gt; 모듈을 포함하고 구성이 필요 없습니다 :</target>
        </trans-unit>
        <trans-unit id="2d03cea65b987f495690d17cc1a6ac552d8236e5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;$I&lt;/code&gt; object is used to write all interactions. The methods of the &lt;code&gt;$I&lt;/code&gt; object are taken from the &lt;a href=&quot;modules/phpbrowser&quot;&gt;PhpBrowser Module&lt;/a&gt;. We will briefly describe them here:</source>
          <target state="translated">&lt;code&gt;$I&lt;/code&gt; 객체는 모든 상호 작용을 작성하는 데 사용됩니다. &lt;code&gt;$I&lt;/code&gt; 객체 의 메소드 는 &lt;a href=&quot;modules/phpbrowser&quot;&gt;PhpBrowser Module&lt;/a&gt; 에서 가져옵니다 . 여기서 간단히 설명하겠습니다.</target>
        </trans-unit>
        <trans-unit id="80fad0e1c2444075fe8788924f6a343c4313b3b4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;$button&lt;/code&gt; parameter can be either a string, an array or an instance of Facebook\WebDriver\WebDriverBy. When it is a string, the button will be found by its &amp;ldquo;name&amp;rdquo; attribute. If $button is an array then it will be treated as a strict selector and a WebDriverBy will be used verbatim.</source>
          <target state="translated">&lt;code&gt;$button&lt;/code&gt; 매개 변수는 문자열, 배열이나 페이스 북 \ WebDriver \ WebDriverBy의 인스턴스가 될 수 있습니다. 문자열 인 경우 &quot;name&quot;속성으로 단추를 찾을 수 있습니다. $ button이 배열이면 엄격한 선택 자로 취급되며 WebDriverBy가 그대로 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="d101be0a31514ba9d0139abf89ed1f532f6264a8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Phalcon&lt;/code&gt; module requires creating a bootstrap file which returns an instance of &lt;code&gt;\Phalcon\Mvc\Application&lt;/code&gt;. To start writing functional tests with Phalcon support you should enable the &lt;code&gt;Phalcon&lt;/code&gt; module and provide the path to this bootstrap file:</source>
          <target state="translated">&lt;code&gt;Phalcon&lt;/code&gt; 의 모듈의 인스턴스를 반환하는 부트 스트랩 파일을 만들 필요 &lt;code&gt;\Phalcon\Mvc\Application&lt;/code&gt; . Phalcon 지원으로 기능 테스트 작성을 시작하려면 &lt;code&gt;Phalcon&lt;/code&gt; 모듈을 활성화 하고이 부트 스트랩 파일의 경로를 제공 해야 합니다.</target>
        </trans-unit>
        <trans-unit id="f9c82bd681bf2ba14cac13c287a15caacf6eda76" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;dump.sql&lt;/code&gt; may contain multiline statements.</source>
          <target state="translated">&lt;code&gt;dump.sql&lt;/code&gt; 은 여러 문을 포함 할 수있다.</target>
        </trans-unit>
        <trans-unit id="0da3040d459bb304f41b18489d440f5678e7a412" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;loginAsAdmin&lt;/code&gt; method may be implemented like this:</source>
          <target state="translated">&lt;code&gt;loginAsAdmin&lt;/code&gt; 의 방법은 다음과 같이 구현 될 수있다 :</target>
        </trans-unit>
        <trans-unit id="dcaf1a47dfdd0480040453f9dbd4957a8f2db944" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;submitForm&lt;/code&gt; is not emulating a user&amp;rsquo;s actions, but it&amp;rsquo;s quite useful in situations when the form is not formatted properly, for example, to discover that labels aren&amp;rsquo;t set or that fields have unclean names or badly written IDs, or the form is sent by a JavaScript call.</source>
          <target state="translated">&lt;code&gt;submitForm&lt;/code&gt; 사용자의 행동을 모방하는 것이 아니라, 양식 레이블이 설정되지 않은 것을 발견하기 위해, 예를 들어, 올바르게 포맷되지 않은 경우는 상황에서 매우 유용 또는 필드 부정 이름 또는 잘못 기록 된 ID를, 또는 양식을 전송 JavaScript 호출로.</target>
        </trans-unit>
        <trans-unit id="469d52838ef14c3e85c078ea1e9836394855313c" translate="yes" xml:space="preserve">
          <source>The AcceptanceTester class has its methods defined in modules. Let&amp;rsquo;s see what&amp;rsquo;s inside the &lt;code&gt;AcceptanceTester&lt;/code&gt; class, which is located inside the &lt;code&gt;tests/_support&lt;/code&gt; directory:</source>
          <target state="translated">AcceptanceTester 클래스에는 모듈에 정의 된 메소드가 있습니다. &lt;code&gt;tests/_support&lt;/code&gt; 디렉토리 안에있는 &lt;code&gt;AcceptanceTester&lt;/code&gt; 클래스 안에 무엇이 있는지 봅시다 :</target>
        </trans-unit>
        <trans-unit id="14076581f15781dc3f5752ce914253f05f18a096" translate="yes" xml:space="preserve">
          <source>The Codeception Syntax</source>
          <target state="translated">인식 구문</target>
        </trans-unit>
        <trans-unit id="3f1db379ca4e5ab377b8e0b68da65d0a7266f99c" translate="yes" xml:space="preserve">
          <source>The Db module provides actions to create and verify data inside a database.</source>
          <target state="translated">DB 모듈은 데이터베이스 내에서 데이터를 작성하고 확인하기위한 조치를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="5ae9a3d0c63f31cec582eace764c0fdd830fbfc9" translate="yes" xml:space="preserve">
          <source>The FunctionalTester class has its methods defined in modules. Actually, it doesn&amp;rsquo;t contain any of them, but rather acts as a proxy. It knows which module executes this action and passes parameters into it. To make your IDE see all of the FunctionalTester methods, you should run the &lt;code&gt;codecept build&lt;/code&gt; command. It generates method signatures from enabled modules and saves them into a trait which is included in an actor. In the current example, the &lt;code&gt;tests/support/_generated/FunctionalTesterActions.php&lt;/code&gt; file will be generated. By default, Codeception automatically rebuilds the Actions trait on each change of the suite configuration.</source>
          <target state="translated">FunctionalTester 클래스에는 모듈에 정의 된 메소드가 있습니다. 실제로, 그것은 그것들을 포함하지 않고 오히려 프록시 역할을합니다. 어떤 모듈이이 동작을 수행하는지 알고 매개 변수를 전달합니다. IDE가 모든 FunctionalTester 메소드를 볼 수있게하려면 &lt;code&gt;codecept build&lt;/code&gt; 명령을 실행해야합니다 . 활성화 된 모듈에서 메소드 서명을 생성하여 액터에 포함 된 특성에 저장합니다. 현재 예제에서 &lt;code&gt;tests/support/_generated/FunctionalTesterActions.php&lt;/code&gt; 파일이 생성됩니다. 기본적으로 Codeception은 제품군 구성이 변경 될 때마다 동작 특성을 자동으로 다시 작성합니다.</target>
        </trans-unit>
        <trans-unit id="74b4bc8b2231ed4cd79853566bcfb0c8d17a18b7" translate="yes" xml:space="preserve">
          <source>The REST module has parts for &lt;code&gt;Xml&lt;/code&gt; and &lt;code&gt;Json&lt;/code&gt; in the same way. If you are testing a REST service with only JSON responses, you can enable just the JSON part of this module:</source>
          <target state="translated">REST 모듈에는 동일한 방식으로 &lt;code&gt;Xml&lt;/code&gt; 및 &lt;code&gt;Json&lt;/code&gt; 용 파트가 있습니다 . JSON 응답만으로 REST 서비스를 테스트하는 경우이 모듈의 JSON 부분 만 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="89b43090a03addcfa3a2f0c9edeedd173474354d" translate="yes" xml:space="preserve">
          <source>The REST module will connect to &lt;code&gt;PhpBrowser&lt;/code&gt; according to this configuration. Depending on the web service we may deal with XML or JSON responses. Codeception handles both data formats well, however If you don&amp;rsquo;t need one of them, you can explicitly specify that the JSON or XML parts of the module will be used:</source>
          <target state="translated">이 구성에 따라 REST 모듈이 &lt;code&gt;PhpBrowser&lt;/code&gt; 에 연결됩니다 . 웹 서비스에 따라 XML 또는 JSON 응답을 처리 할 수 ​​있습니다. Codeception은 두 데이터 형식을 모두 잘 처리하지만 그 중 하나가 필요하지 않은 경우 모듈의 JSON 또는 XML 부분을 사용하도록 명시 적으로 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="bf2306978465f7282232abd014cc2130ff0c19d6" translate="yes" xml:space="preserve">
          <source>The REST web service is accessed via HTTP with standard methods: &lt;code&gt;GET&lt;/code&gt;, &lt;code&gt;POST&lt;/code&gt;, &lt;code&gt;PUT&lt;/code&gt;, &lt;code&gt;DELETE&lt;/code&gt;. They allow users to receive and manipulate entities from the service. Accessing a WebService requires an HTTP client, so for using it you need the module &lt;code&gt;PhpBrowser&lt;/code&gt; or one of framework modules set up. For example, we can use the &lt;code&gt;Symfony&lt;/code&gt; module for Symfony2 applications in order to ignore web server and test web service internally.</source>
          <target state="translated">REST 웹 서비스는 표준 메소드 &lt;code&gt;GET&lt;/code&gt; , &lt;code&gt;POST&lt;/code&gt; , &lt;code&gt;PUT&lt;/code&gt; , &lt;code&gt;DELETE&lt;/code&gt; 와 함께 HTTP를 통해 액세스 합니다. 이를 통해 사용자는 서비스에서 엔티티를 받고 조작 할 수 있습니다. WebService에 액세스하려면 HTTP 클라이언트가 필요하므로이를 사용하려면 &lt;code&gt;PhpBrowser&lt;/code&gt; 모듈 또는 프레임 워크 모듈 중 하나가 설정되어 있어야합니다 . 예를 들어, 웹 서버를 무시하고 웹 서비스를 내부적으로 테스트하기 위해 Symfony2 응용 프로그램에 &lt;code&gt;Symfony&lt;/code&gt; 모듈을 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="9dd546d857d4f80626f18c81b65aed931bad9a2c" translate="yes" xml:space="preserve">
          <source>The application bootstrap file must return Application object but not call its handle() method.</source>
          <target state="translated">응용 프로그램 부트 스트랩 파일은 Application 객체를 반환해야하지만 handle () 메서드를 호출하지 않아야합니다.</target>
        </trans-unit>
        <trans-unit id="61bfbb37959ea3f416a5baef476bcf0039456795" translate="yes" xml:space="preserve">
          <source>The basic codecoverage can be collected for functional and unit tests. If you performed configuration steps from above, you are ready to go. All you need is to execute codeception with &lt;code&gt;--coverage&lt;/code&gt; option.</source>
          <target state="translated">기능 및 단위 테스트를 위해 기본 코드 커버리지를 수집 할 수 있습니다. 위에서 구성 단계를 수행 한 경우 준비가 된 것입니다. &lt;code&gt;--coverage&lt;/code&gt; 옵션 으로 코드 인식 을 실행하기 만하면됩니다 .</target>
        </trans-unit>
        <trans-unit id="28ece1b1e7a3c720b16e7064930ec959c102b1dc" translate="yes" xml:space="preserve">
          <source>The concept of groups was taken from PHPUnit and behave in the same way.</source>
          <target state="translated">그룹의 개념은 PHPUnit에서 가져 왔으며 같은 방식으로 작동합니다.</target>
        </trans-unit>
        <trans-unit id="6c3ead64e40e15abc87b5e2e1014525786e7ebe0" translate="yes" xml:space="preserve">
          <source>The configuration is merged in the order given. This way you can easily create multiple combinations of your environment configurations.</source>
          <target state="translated">주어진 순서대로 구성이 병합됩니다. 이렇게하면 여러 환경 구성 조합을 쉽게 만들 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d8e6b0f108606f2b4f390d62ef87b1c8488b825c" translate="yes" xml:space="preserve">
          <source>The configuration settings depending on which queueing service is being used, all the options are listed here. Refer to the configuration examples below to identify the configuration options required for your chosen service.</source>
          <target state="translated">사용중인 큐 서비스에 따라 구성 설정이 여기에 모든 옵션이 나열됩니다. 선택한 서비스에 필요한 구성 옵션을 식별하려면 아래 구성 예를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="160b63f91d59bbb525034e6032da9ec174391c22" translate="yes" xml:space="preserve">
          <source>The delimiter, a semi-colon in this case, must be on the same line as the last statement:</source>
          <target state="translated">이 경우 세미콜론 인 분리 문자는 마지막 명령문과 같은 행에 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="3b7857336896929be3221056cffefc086a5a5a2d" translate="yes" xml:space="preserve">
          <source>The dependency injection container can construct any object that requires any known class type. For instance, &lt;code&gt;Page\Login&lt;/code&gt; required &lt;code&gt;AcceptanceTester&lt;/code&gt;, and so it was injected into &lt;code&gt;Page\Login&lt;/code&gt; constructor, and PageObject was created and passed into method arguments. You should explicitly specify the types of required objects for Codeception to know what objects should be created for a test. Dependency Injection will be described in the next chapter.</source>
          <target state="translated">종속성 주입 컨테이너는 알려진 클래스 유형이 필요한 모든 오브젝트를 구성 할 수 있습니다. 예를 들어 &lt;code&gt;Page\Login&lt;/code&gt; 에는 &lt;code&gt;AcceptanceTester&lt;/code&gt; 가 필요 했기 때문에 &lt;code&gt;Page\Login&lt;/code&gt; 생성자 에 주입되었으며 PageObject가 만들어지고 메서드 인수에 전달되었습니다. 테스트를 위해 어떤 오브젝트를 작성해야하는지 Codeception에 필요한 오브젝트 유형을 명시 적으로 지정해야합니다. 의존성 주입은 다음 장에서 설명합니다.</target>
        </trans-unit>
        <trans-unit id="20d7af16b862e9c4caadf9ec15d402071748e6d2" translate="yes" xml:space="preserve">
          <source>The desired environments can be specified with the &lt;code&gt;@env&lt;/code&gt; annotation for tests in Test and Cest formats:</source>
          <target state="translated">테스트 및 Cest 형식의 테스트를 위해 &lt;code&gt;@env&lt;/code&gt; 주석 으로 원하는 환경을 지정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="67694283c04aa5e36ce58ff5430e83cd0ed7374a" translate="yes" xml:space="preserve">
          <source>The environment configuration files are merged into the main configuration before the suite configuration is merged.</source>
          <target state="translated">스위트 구성이 병합되기 전에 환경 구성 파일이 기본 구성으로 병합됩니다.</target>
        </trans-unit>
        <trans-unit id="349ce04c3614e552c27f7544285d993113dfb1e2" translate="yes" xml:space="preserve">
          <source>The extension class itself is inherited from &lt;code&gt;Codeception\Extension&lt;/code&gt;:</source>
          <target state="translated">확장 클래스 자체는 &lt;code&gt;Codeception\Extension&lt;/code&gt; 에서 상속됩니다 .</target>
        </trans-unit>
        <trans-unit id="3b6d76725b4fbb3cc04c6829b018f0d3517c48f6" translate="yes" xml:space="preserve">
          <source>The following configurations are required for this module:</source>
          <target state="translated">이 모듈에는 다음 구성이 필요합니다.</target>
        </trans-unit>
        <trans-unit id="9ec3be11fb36d1d27ff1f7e9106db4862cc1eb1e" translate="yes" xml:space="preserve">
          <source>The following dependencies are needed for the listed queue servers:</source>
          <target state="translated">나열된 큐 서버에는 다음과 같은 종속성이 필요합니다.</target>
        </trans-unit>
        <trans-unit id="6e2bd750df8312438935592586a88e5ee697498c" translate="yes" xml:space="preserve">
          <source>The generated file will look like this:</source>
          <target state="translated">생성 된 파일은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="3535805f6cce054bd2b79c81720a6c301fc92062" translate="yes" xml:space="preserve">
          <source>The host and port parameter can be redefined in the suite configuration. Values are set in the &lt;code&gt;modules:config&lt;/code&gt; section of the configuration file.</source>
          <target state="translated">호스트 구성 및 포트 매개 변수는 제품군 구성에서 재정의 할 수 있습니다. 구성 파일 의 &lt;code&gt;modules:config&lt;/code&gt; 섹션에 값이 설정되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="9eddec099cd7a02f9d769f7e737e83c903f6dfa4" translate="yes" xml:space="preserve">
          <source>The idea behind testing is not new. You can&amp;rsquo;t sleep well if you are not confident that your last commit didn&amp;rsquo;t take down the whole application. Having your application covered with tests gives you more trust in the stability of your application. That&amp;rsquo;s all.</source>
          <target state="translated">테스트의 기본 개념은 새로운 것이 아닙니다. 마지막 커밋이 전체 응용 프로그램을 중단하지 않았다고 확신하지 않으면 잘 수 없습니다. 응용 프로그램에 테스트를 적용하면 응용 프로그램의 안정성을 더 신뢰할 수 있습니다. 그게 다야.</target>
        </trans-unit>
        <trans-unit id="996c7574ad48e1d2447f138442e5ace9e50b4d9d" translate="yes" xml:space="preserve">
          <source>The idea of story BDD can be narrowed to:</source>
          <target state="translated">스토리 BDD의 아이디어는 다음과 같이 좁힐 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="337078e5cc63fe2f12544058bef34792704bd227" translate="yes" xml:space="preserve">
          <source>The last line of the previous example verified that the response contained the provided string. However we shouldn&amp;rsquo;t rely on it, as depending on content formatting we can receive different results with the same data. What we actually need is to check that the response can be parsed and it contains some of the values we expect. In the case of JSON we can use the &lt;code&gt;seeResponseContainsJson&lt;/code&gt; method</source>
          <target state="translated">이전 예제의 마지막 행은 응답에 제공된 문자열이 포함되어 있는지 확인했습니다. 그러나 콘텐츠 형식에 따라 동일한 데이터로 다른 결과를 얻을 수 있으므로 의존해서는 안됩니다. 실제로 필요한 것은 응답을 구문 분석 할 수 있고 예상 한 값이 포함되어 있는지 확인하는 것입니다. JSON의 경우 &lt;code&gt;seeResponseContainsJson&lt;/code&gt; 메소드를 사용할 수 있습니다</target>
        </trans-unit>
        <trans-unit id="7a41dd1561e9731ea595e4775e0f7365cdaaef3b" translate="yes" xml:space="preserve">
          <source>The module uses the Symfony Profiler to provide additional information and assertions.</source>
          <target state="translated">이 모듈은 Symfony Profiler를 사용하여 추가 정보 및 어설 션을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="e995d5099f03622d17485bee26f6b115a7076b60" translate="yes" xml:space="preserve">
          <source>The modules won&amp;rsquo;t conflict as actions with the same names won&amp;rsquo;t be loaded.</source>
          <target state="translated">동일한 이름의 작업이로드되지 않으므로 모듈이 충돌하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="59fb33a6dc474303894360f2893c8891610f127b" translate="yes" xml:space="preserve">
          <source>The more complicated your domain is the more explicit your tests should be. With &lt;a href=&quot;https://github.com/Codeception/DomainAssert&quot;&gt;DomainAssert&lt;/a&gt; library you can easily create custom assertion methods for unit and integration tests.</source>
          <target state="translated">도메인이 복잡할수록 테스트가 더 명확 해집니다. &lt;a href=&quot;https://github.com/Codeception/DomainAssert&quot;&gt;DomainAssert&lt;/a&gt; 라이브러리를 사용하면 단위 및 통합 테스트를위한 사용자 지정 어설 ​​션 방법을 쉽게 만들 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b4d6a20f1b3bf05dc10c7cd3892623bfb0b3874e" translate="yes" xml:space="preserve">
          <source>The most important function of this module is cleaning database before each test. To have your database properly cleaned you should configure it to access the database.</source>
          <target state="translated">이 모듈의 가장 중요한 기능은 각 테스트 전에 데이터베이스를 정리하는 것입니다. 데이터베이스를 올바르게 정리하려면 데이터베이스에 액세스하도록 데이터베이스를 구성해야합니다.</target>
        </trans-unit>
        <trans-unit id="588bfb6f28aae5a6ad7de748a5a7ac537f36b691" translate="yes" xml:space="preserve">
          <source>The most important function of this module is to clean a database before each test. This module also provides actions to perform checks in a database, e.g. &lt;a href=&quot;db#seeInDatabase&quot;&gt;seeInDatabase()&lt;/a&gt;</source>
          <target state="translated">이 모듈의 가장 중요한 기능은 각 테스트 전에 데이터베이스를 정리하는 것입니다. 이 모듈은 또한 데이터베이스에서 점검을 수행하는 조치를 제공합니다 &lt;a href=&quot;db#seeInDatabase&quot;&gt;(&lt;/a&gt; 예 : seeInDatabase ()).</target>
        </trans-unit>
        <trans-unit id="6504e6309073c0a2daf28c3c3b0a0924455bba6e" translate="yes" xml:space="preserve">
          <source>The most important part is the &lt;code&gt;_generated\AcceptanceTesterActions&lt;/code&gt; trait, which is used as a proxy for enabled modules. It knows which module executes which action and passes parameters into it. This trait was created by running &lt;code&gt;codecept build&lt;/code&gt; and is regenerated each time module or configuration changes.</source>
          <target state="translated">가장 중요한 부분은 활성화 된 모듈의 프록시로 사용되는 &lt;code&gt;_generated\AcceptanceTesterActions&lt;/code&gt; 특성입니다. 어떤 모듈이 어떤 동작을 수행하는지 알고 매개 변수를 전달합니다. 이 특성은 &lt;code&gt;codecept build&lt;/code&gt; 를 실행하여 작성되었으며 모듈 또는 구성이 변경 될 때마다 재생성됩니다.</target>
        </trans-unit>
        <trans-unit id="6ab0e59b176f02323ad4cfcb488b984e85ec23fa" translate="yes" xml:space="preserve">
          <source>The most useful method for this is &lt;code&gt;see()&lt;/code&gt;:</source>
          <target state="translated">가장 유용한 방법은 &lt;code&gt;see()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="858923fa5cf5369ecb2afbc8db5c69cf656baa75" translate="yes" xml:space="preserve">
          <source>The names of these files are used as environments names (e.g. &lt;code&gt;chrome.yml&lt;/code&gt; or &lt;code&gt;chrome.dist.yml&lt;/code&gt; for an environment named &lt;code&gt;chrome&lt;/code&gt;). You can generate a new file with this environment configuration by using the &lt;code&gt;generate:environment&lt;/code&gt; command:</source>
          <target state="translated">이 파일의 이름은 환경 이름으로 사용됩니다 (예 : &lt;code&gt;chrome&lt;/code&gt; 이라는 환경의 경우 &lt;code&gt;chrome.yml&lt;/code&gt; 또는 &lt;code&gt;chrome.dist.yml&lt;/code&gt; ). &lt;code&gt;generate:environment&lt;/code&gt; 명령 을 사용하여이 환경 구성으로 새 파일을 생성 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="aec06f3ad2dbbb0477616434418fa5e8505f3c91" translate="yes" xml:space="preserve">
          <source>The next time you start the suite without setting one of these values, an exception will be thrown.</source>
          <target state="translated">다음에이 값 중 하나를 설정하지 않고 제품군을 시작하면 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="51ca1d160b9927685689edb66db004fde440b993" translate="yes" xml:space="preserve">
          <source>The passed in configuration is accessible via the &lt;code&gt;config&lt;/code&gt; property: &lt;code&gt;$this-&amp;gt;config['param']&lt;/code&gt;.</source>
          <target state="translated">전달 된 구성은 &lt;code&gt;config&lt;/code&gt; 속성 &lt;code&gt;$this-&amp;gt;config['param']&lt;/code&gt; 통해 액세스 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="3ef1e561f5c8a3b3e01dae3070397cef53891509" translate="yes" xml:space="preserve">
          <source>The recommended approach is to configure a &lt;code&gt;populator&lt;/code&gt;, an external command to load a dump. Command parameters like host, username, password, database can be obtained from the config and inserted into placeholders:</source>
          <target state="translated">권장되는 방법은 덤프를로드하기위한 외부 명령 인 &lt;code&gt;populator&lt;/code&gt; 를 구성하는 것 입니다. 호스트, 사용자 이름, 비밀번호, 데이터베이스와 같은 명령 매개 변수는 구성에서 가져 와서 자리 표시 자에 삽입 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ba91d76613788bb5d0a0f55e3a15949fbe38f03d" translate="yes" xml:space="preserve">
          <source>The required information is provided by &lt;a href=&quot;https://github.com/sebastianbergmann/php-code-coverage&quot;&gt;SebastianBergmann\CodeCoverage&lt;/a&gt;, and you can use any of the supported drivers.</source>
          <target state="translated">필수 정보는 &lt;a href=&quot;https://github.com/sebastianbergmann/php-code-coverage&quot;&gt;SebastianBergmann \ CodeCoverage에&lt;/a&gt; 의해 제공되며 지원되는 드라이버를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6c64b2f1acd18a0d2ff15ad16ed710f72b78b619" translate="yes" xml:space="preserve">
          <source>The same can be done for all public properties of an enabled module. Accessible properties are listed in the module reference.</source>
          <target state="translated">활성화 된 모듈의 모든 공용 속성에 대해서도 동일한 작업을 수행 할 수 있습니다. 액세스 가능한 속성은 모듈 참조에 나열되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="a2dcffd4e8eeefa8336c1129d2b375c8301a5062" translate="yes" xml:space="preserve">
          <source>The same way as above, a StepObject can be instantiated automatically by the Dependency Injection Container when used inside the Cest format:</source>
          <target state="translated">위와 같은 방법으로 Cest 형식으로 사용될 때 Dependency Injection Container에서 StepObject를 자동으로 인스턴스화 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ace9b99ff6d91220727c102feda43458324989dd" translate="yes" xml:space="preserve">
          <source>The same way we tested a web site, Codeception allows you to test web services. They are very hard to test manually, so it&amp;rsquo;s a really good idea to automate web service testing. We have SOAP and REST as standards, which are represented in corresponding modules, which we will cover in this chapter.</source>
          <target state="translated">웹 사이트를 테스트 한 것과 동일한 방식으로 Codeception을 사용하면 웹 서비스를 테스트 할 수 있습니다. 수동 테스트는 매우 어렵 기 때문에 웹 서비스 테스트를 자동화하는 것이 좋습니다. 우리는 SOAP과 REST를 표준으로 가지고 있으며,이 장에서는 해당 모듈로 표현됩니다.</target>
        </trans-unit>
        <trans-unit id="e729532af7b21d8eee9bea27a747688cb0032343" translate="yes" xml:space="preserve">
          <source>The same way you can receive request parameters and headers.</source>
          <target state="translated">요청 매개 변수 및 헤더를 수신 할 수있는 것과 동일한 방법입니다.</target>
        </trans-unit>
        <trans-unit id="a33d02ff1f25b4b25ac847f2e6b6b840547327df" translate="yes" xml:space="preserve">
          <source>The second parameter is a context (CSS or XPath locator) to narrow the search.</source>
          <target state="translated">두 번째 매개 변수는 검색 범위를 좁히기위한 컨텍스트 (CSS 또는 XPath 로케이터)입니다.</target>
        </trans-unit>
        <trans-unit id="948bedc7ccb85fbbba4b999ce11602d237b995c3" translate="yes" xml:space="preserve">
          <source>The solution is to pass an array value:</source>
          <target state="translated">해결책은 배열 값을 전달하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="d8c860625bd621199d0c2c863a4ce486f4bbe926" translate="yes" xml:space="preserve">
          <source>The tests will be executed 3 times, each time in a different browser.</source>
          <target state="translated">테스트는 매번 다른 브라우저에서 3 번 실행됩니다.</target>
        </trans-unit>
        <trans-unit id="9d32ff5aa50b60d820eddb51eeb2ae9b606279b3" translate="yes" xml:space="preserve">
          <source>The ubiquitous language is always referred as &lt;em&gt;common&lt;/em&gt; language. That is it&amp;rsquo;s main benefit. It is not a couple of our business specification&amp;rsquo;s words, and not a couple of developer&amp;rsquo;s technical terms. It is a common words and terms that can be understood by people for whom we are building the software and should be understood by developers. Establishing correct communication between this two groups people is vital for building successful project that will fit the domain and fulfill all business needs.</source>
          <target state="translated">유비쿼터스 언어는 항상 &lt;em&gt;공통&lt;/em&gt; 언어 라고 합니다. 그것이 주요 이점입니다. 이는 비즈니스 사양의 두 단어가 아니며 개발자의 기술 용어가 아닙니다. 소프트웨어를 개발하는 사람들이 이해할 수있는 일반적인 단어와 용어이며 개발자가 이해해야합니다. 이 두 그룹간에 올바른 의사 소통을 확립하는 것은 도메인에 적합하고 모든 비즈니스 요구를 충족시키는 성공적인 프로젝트를 구축하는 데 필수적입니다.</target>
        </trans-unit>
        <trans-unit id="a80008ff6c733f11e6469c9a08bd0f5c97d4a222" translate="yes" xml:space="preserve">
          <source>The window can only be identified by name. If the $name parameter is blank, the parent window will be used.</source>
          <target state="translated">창은 이름으로 만 식별 할 수 있습니다. $ name 매개 변수가 비어 있으면 상위 창이 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="00da132e72d6727ab03613c23a7d08a83466f5d1" translate="yes" xml:space="preserve">
          <source>Then add &lt;code&gt;\Codeception\Lib\Actor\Shared\Retry&lt;/code&gt; trait into &lt;code&gt;AcceptanceTester&lt;/code&gt; class:</source>
          <target state="translated">그런 다음 &lt;code&gt;\Codeception\Lib\Actor\Shared\Retry&lt;/code&gt; 특성을 &lt;code&gt;AcceptanceTester&lt;/code&gt; 클래스에 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="e0d4cfcb24360d49e4a1b2661f1c846147ee2ec3" translate="yes" xml:space="preserve">
          <source>Then define a class which implements the LoaderInterface</source>
          <target state="translated">그런 다음 LoaderInterface를 구현하는 클래스를 정의하십시오.</target>
        </trans-unit>
        <trans-unit id="2ffe3dff2f375fc5cead814eb2285a8ccb6b0cbc" translate="yes" xml:space="preserve">
          <source>Then rebuild actors with &lt;code&gt;codecept build&lt;/code&gt; command.</source>
          <target state="translated">그런 다음 &lt;code&gt;codecept build&lt;/code&gt; 명령으로 액터를 다시 빌드하십시오 .</target>
        </trans-unit>
        <trans-unit id="cb722a71e4b98d8f3100e93b9756f42bfa540358" translate="yes" xml:space="preserve">
          <source>Then we can start the very first job and check the execution progress. If tests fail we will see that in console:</source>
          <target state="translated">그런 다음 첫 번째 작업을 시작하고 실행 진행 상황을 확인할 수 있습니다. 테스트가 실패하면 콘솔에서 다음을 볼 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e62a6b451e37cc0c74463af04183ff70c66a1ed9" translate="yes" xml:space="preserve">
          <source>Then you will need to implement all step definitions. Run &lt;code&gt;gherkin:snippets&lt;/code&gt; to generate stubs for them. By default it is recommended to place step definitions into actor class (Tester) and use its methods for steps implementation.</source>
          <target state="translated">그런 다음 모든 단계 정의를 구현해야합니다. &lt;code&gt;gherkin:snippets&lt;/code&gt; 를 실행 하여 스텁을 생성 하십시오 . 기본적으로 단계 정의를 액터 클래스 (테스터)에 배치하고 단계 구현에 해당 메소드를 사용하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="02b1cd6d904308987f14d8e62416ab69347dd621" translate="yes" xml:space="preserve">
          <source>There are also modules for &lt;a href=&quot;modules/mongodb&quot;&gt;MongoDb&lt;/a&gt;, &lt;a href=&quot;modules/redis&quot;&gt;Redis&lt;/a&gt;, and &lt;a href=&quot;modules/memcache&quot;&gt;Memcache&lt;/a&gt; which behave in a similar manner.</source>
          <target state="translated">비슷한 방식으로 동작하는 &lt;a href=&quot;modules/mongodb&quot;&gt;MongoDb&lt;/a&gt; , &lt;a href=&quot;modules/redis&quot;&gt;Redis&lt;/a&gt; 및 &lt;a href=&quot;modules/memcache&quot;&gt;Memcache&lt;/a&gt; 용 모듈도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="e8ceecb197db31d09a1a69441f836b7b66b98014" translate="yes" xml:space="preserve">
          <source>There are lots of ways to create reusable and readable tests. Group common actions together and move them to an Actor class or StepObjects. Move CSS and XPath locators into PageObjects. Write your custom actions and assertions in Helpers. Scenario-driven tests should not contain anything more complex than &lt;code&gt;$I-&amp;gt;doSomething&lt;/code&gt; commands. Following this approach will allow you to keep your tests clean, readable, stable and make them easy to maintain.</source>
          <target state="translated">재사용 가능하고 읽기 쉬운 테스트를 작성하는 방법에는 여러 가지가 있습니다. 공통 액션을 그룹화하여 Actor 클래스 또는 StepObject로 옮깁니다. CSS 및 XPath 로케이터를 PageObjects로 이동하십시오. 도우미에서 사용자 지정 작업 및 어설 션을 작성하십시오. 시나리오 중심 테스트에는 &lt;code&gt;$I-&amp;gt;doSomething&lt;/code&gt; 명령 보다 복잡한 것이 포함되어서는 안됩니다 . 이 접근 방식을 사용하면 테스트를 깨끗하고 읽기 쉽고 안정적으로 유지하고 쉽게 유지할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="948afae0228a52f6e532a20e39fb5ec72d31a3da" translate="yes" xml:space="preserve">
          <source>There are many Continuous Integration Servers out there. We will try to list basic steps to setup Codeception tests with them. If your CI system is not mentioned, you can get the idea by analogy. Please also help us to extend this guide by adding instructions for different CIs.</source>
          <target state="translated">많은 Continuous Integration Server가 있습니다. Codeception 테스트를 설정하기위한 기본 단계를 나열하려고합니다. CI 시스템을 언급하지 않은 경우 유추하여 아이디어를 얻을 수 있습니다. 다른 CI에 대한 지침을 추가하여이 안내서를 확장 할 수 있도록 도와주십시오.</target>
        </trans-unit>
        <trans-unit id="369472f273f527dca68dd0c625dc610a948c7536" translate="yes" xml:space="preserve">
          <source>There are plenty of useful Codeception commands:</source>
          <target state="translated">유용한 Codeception 명령이 많이 있습니다 :</target>
        </trans-unit>
        <trans-unit id="07c4fcc1941869fa1d336706faca8c05b4e60d6c" translate="yes" xml:space="preserve">
          <source>There are plenty of ways to test your application. The most popular paradigm is &lt;a href=&quot;https://en.wikipedia.org/wiki/Unit_testing&quot;&gt;Unit Testing&lt;/a&gt;. For web applications, testing just the controller and/or the model doesn&amp;rsquo;t prove that your application is working. To test the behavior of your application as a whole, you should write functional or acceptance tests.</source>
          <target state="translated">응용 프로그램을 테스트하는 방법은 많이 있습니다. 가장 인기있는 패러다임은 &lt;a href=&quot;https://en.wikipedia.org/wiki/Unit_testing&quot;&gt;단위 테스팅&lt;/a&gt; 입니다. 웹 응용 프로그램의 경우 컨트롤러 및 / 또는 모델 만 테스트한다고해서 응용 프로그램이 작동하고있는 것은 아닙니다. 응용 프로그램의 동작을 전체적으로 테스트하려면 기능 또는 승인 테스트를 작성해야합니다.</target>
        </trans-unit>
        <trans-unit id="472475cb2784568d51ba67ed63be1d7f41e92407" translate="yes" xml:space="preserve">
          <source>There are pretty many assertions you can use inside tests. The most common are:</source>
          <target state="translated">테스트 내부에서 사용할 수있는 많은 주장이 있습니다. 가장 일반적인 것은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="00f2d74b591d01448a0dd51fdbcee6a29ff8f06c" translate="yes" xml:space="preserve">
          <source>There are several ways to execute a bunch of tests. You can run tests from a specific directory:</source>
          <target state="translated">여러 가지 테스트를 수행하는 방법에는 여러 가지가 있습니다. 특정 디렉토리에서 테스트를 실행할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5d943ab0fd5690899e5d940d2d46a201be6307ac" translate="yes" xml:space="preserve">
          <source>There are two approaches to achieve parallelization. We can use &lt;a href=&quot;https://docker.com&quot;&gt;Docker&lt;/a&gt; and run each process inside isolated containers, and have those containers executed simultaneously.</source>
          <target state="translated">병렬화를 달성하는 두 가지 방법이 있습니다. &lt;a href=&quot;https://docker.com&quot;&gt;Docker&lt;/a&gt; 를 사용하여 격리 된 컨테이너 내에서 각 프로세스를 실행하고 해당 컨테이너를 동시에 실행할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="32a279542017eb7e85407192396510526b48e76d" translate="yes" xml:space="preserve">
          <source>There are two ways of loading the dump into your database:</source>
          <target state="translated">덤프를 데이터베이스에로드하는 두 가지 방법이 있습니다.</target>
        </trans-unit>
        <trans-unit id="13476efc2e8fda368c4d0571d6b63e0dd8766eeb" translate="yes" xml:space="preserve">
          <source>There is a shortcut if you don&amp;rsquo;t need that complex filters:</source>
          <target state="translated">복잡한 필터가 필요없는 경우 바로 가기가 있습니다.</target>
        </trans-unit>
        <trans-unit id="1997a50dea00caded9841a9dd879fcaa74d60af1" translate="yes" xml:space="preserve">
          <source>There is a special class &lt;a href=&quot;reference/locator&quot;&gt;&lt;code&gt;Codeception\Util\Locator&lt;/code&gt;&lt;/a&gt; which may help you to generate complex XPath locators. For instance, it can easily allow you to click an element on the last row of a table:</source>
          <target state="translated">복잡한 XPath 로케이터를 생성하는 데 도움 이되는 특수 클래스 &lt;a href=&quot;reference/locator&quot;&gt; &lt;code&gt;Codeception\Util\Locator&lt;/code&gt; &lt;/a&gt; 가 있습니다. 예를 들어, 테이블의 마지막 행에서 요소를 쉽게 클릭 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7fc661f9a3fd7478638b5d55b21698e460482654" translate="yes" xml:space="preserve">
          <source>There is a way to get it tested as well. Codeception allows you take a snapshot of a data on first run and compare with on next executions. This principle is so general that it can work for testing APIs, items on a web page, etc.</source>
          <target state="translated">테스트하는 방법도 있습니다. Codeception을 사용하면 처음 실행시 데이터의 스냅 샷을 작성하고 다음 실행시와 비교할 수 있습니다. 이 원칙은 너무 일반적이므로 API, 웹 페이지의 항목 등을 테스트하는 데 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a90cd0048e529fab2b4a176229c2367958ccbc11" translate="yes" xml:space="preserve">
          <source>There is the &lt;code&gt;WebDriver&lt;/code&gt; module for acceptance testing, modules for all popular PHP frameworks, &lt;code&gt;PHPBrowser&lt;/code&gt; to emulate browser execution, &lt;code&gt;REST&lt;/code&gt; for testing APIs, and more. Modules are considered to be the most valuable part of Codeception. They are constantly improving to provide the best testing experience, and be flexible to satisfy everyone&amp;rsquo;s needs.</source>
          <target state="translated">있다 &lt;code&gt;WebDriver&lt;/code&gt; 의 수용 테스트를위한 모듈, 모든 인기있는 PHP 프레임 워크에 대한 모듈은 &lt;code&gt;PHPBrowser&lt;/code&gt; 는 브라우저 실행, 에뮬레이트하는 &lt;code&gt;REST&lt;/code&gt; 를 테스트 API를 위해, 그리고 더. 모듈은 Codeception의 가장 중요한 부분으로 간주됩니다. 최고의 테스트 경험을 제공하기 위해 지속적으로 개선하고 있으며 모든 사람의 요구를 충족시킬 수있는 유연성을 갖추고 있습니다.</target>
        </trans-unit>
        <trans-unit id="e6462daf1fc696a68d8590c28de11488adca6f27" translate="yes" xml:space="preserve">
          <source>There may be some confusion between &lt;code&gt;test.start&lt;/code&gt;/&lt;code&gt;test.before&lt;/code&gt; and &lt;code&gt;test.after&lt;/code&gt;/&lt;code&gt;test.end&lt;/code&gt;. The start and end events are triggered by PHPUnit, but the before and after events are triggered by Codeception. Thus, when you are using classical PHPUnit tests (extended from &lt;code&gt;PHPUnit\Framework\TestCase&lt;/code&gt;), the before/after events won&amp;rsquo;t be triggered for them. During the &lt;code&gt;test.before&lt;/code&gt; event you can mark a test as skipped or incomplete, which is not possible in &lt;code&gt;test.start&lt;/code&gt;. You can learn more from &lt;a href=&quot;https://github.com/Codeception/Codeception/tree/2.4/src/Codeception/Subscriber&quot;&gt;Codeception internal event listeners&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;test.start&lt;/code&gt; / &lt;code&gt;test.before&lt;/code&gt; 와 &lt;code&gt;test.after&lt;/code&gt; / &lt;code&gt;test.end&lt;/code&gt; 사이에 약간의 혼동이있을 수 있습니다 . 시작 및 종료 이벤트는 PHPUnit에 의해 트리거되지만 before 및 after 이벤트는 Codeception에 의해 트리거됩니다. 따라서 일반적인 PHPUnit 테스트 ( &lt;code&gt;PHPUnit\Framework\TestCase&lt;/code&gt; 에서 확장 )를 사용하는 경우 이전 / 이후 이벤트가 트리거되지 않습니다. &lt;code&gt;test.before&lt;/code&gt; 이벤트 중에 테스트를 건너 뛰거나 불완전한 것으로 표시 할 수 있으며 &lt;code&gt;test.start&lt;/code&gt; 에서는 불가능 합니다. &lt;a href=&quot;https://github.com/Codeception/Codeception/tree/2.4/src/Codeception/Subscriber&quot;&gt;Codeception 내부 이벤트 리스너&lt;/a&gt; 에서 자세히 배울 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="73071f5f12a33665b9c6270260df1ef6a856767c" translate="yes" xml:space="preserve">
          <source>Therefore we can open a web page with &lt;code&gt;amOnPage&lt;/code&gt; method:</source>
          <target state="translated">따라서 &lt;code&gt;amOnPage&lt;/code&gt; 메소드를 사용 하여 웹 페이지를 열 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="82163692f5484c9372d19b4f27a04f2f2fb77978" translate="yes" xml:space="preserve">
          <source>These commands retrieve data that can be used in the test. Imagine your site generates a password for every user and you want to check that the user can log into the site using this password:</source>
          <target state="translated">이 명령은 테스트에 사용할 수있는 데이터를 검색합니다. 사이트에서 모든 사용자의 비밀번호를 생성한다고 가정하고 사용자가이 비밀번호를 사용하여 사이트에 로그인 할 수 있는지 확인하려고합니다.</target>
        </trans-unit>
        <trans-unit id="24d15de04291dd413c8a05973420337df01f1494" translate="yes" xml:space="preserve">
          <source>These generated scenarios will be stored in your &lt;code&gt;_data&lt;/code&gt; directory in text files.</source>
          <target state="translated">생성 된 시나리오는 &lt;code&gt;_data&lt;/code&gt; 디렉토리에 텍스트 파일 로 저장됩니다 .</target>
        </trans-unit>
        <trans-unit id="0774cc902ef4ce66db8cbad58f8febff0e7aa11f" translate="yes" xml:space="preserve">
          <source>They allow you to create and check data by model name and field names in the model. Here is the example in Laravel:</source>
          <target state="translated">모델에서 모델 이름 및 필드 이름으로 데이터를 작성하고 확인할 수 있습니다. Laravel의 예는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="76f390a589bab7443a684c400b3d7b3082db3649" translate="yes" xml:space="preserve">
          <source>They can be executed with &lt;code&gt;init&lt;/code&gt; command:</source>
          <target state="translated">&lt;code&gt;init&lt;/code&gt; 명령 으로 실행할 수 있습니다 :</target>
        </trans-unit>
        <trans-unit id="a5ed0dcebd9d71bf8f45fedb2d8c9f3c1606d399" translate="yes" xml:space="preserve">
          <source>This behavior can be configured using &lt;code&gt;prefix&lt;/code&gt; config param.</source>
          <target state="translated">이 동작은 &lt;code&gt;prefix&lt;/code&gt; config param을 사용하여 구성 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="2562ae3470339d22f1ca1a94fa02ccedffa99152" translate="yes" xml:space="preserve">
          <source>This call will be translated to XML:</source>
          <target state="translated">이 호출은 XML로 변환됩니다.</target>
        </trans-unit>
        <trans-unit id="7ea6bb095fc07017185e68ddca02d954305057e2" translate="yes" xml:space="preserve">
          <source>This chapter summarizes all of the notices on clean-ups from the previous chapters and suggests the best strategies of how to choose data storage backends.</source>
          <target state="translated">이 장에서는 이전 장의 정리에 대한 모든 공지 사항을 요약하고 데이터 스토리지 백엔드를 선택하는 방법에 대한 최상의 전략을 제안합니다.</target>
        </trans-unit>
        <trans-unit id="4a55f9839526115f62df8726508be2b0e15bdbb2" translate="yes" xml:space="preserve">
          <source>This class provides various helper methods for building customized setup</source>
          <target state="translated">이 클래스는 사용자 정의 설정을 작성하기위한 다양한 헬퍼 메소드를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="e3c12b99176548123a6b63641df01c5ebfbd9a75" translate="yes" xml:space="preserve">
          <source>This command will run all tests for all suites, displaying the steps, and building HTML and XML reports. Reports will be stored in the &lt;code&gt;tests/_output/&lt;/code&gt; directory.</source>
          <target state="translated">이 명령은 모든 제품군에 대한 모든 테스트를 실행하고 단계를 표시하며 HTML 및 XML 보고서를 작성합니다. 보고서는 &lt;code&gt;tests/_output/&lt;/code&gt; 디렉토리에 저장됩니다 .</target>
        </trans-unit>
        <trans-unit id="d7be05543f79125a5ea1bea9cbae2d3481a6ca78" translate="yes" xml:space="preserve">
          <source>This configuration will allow you to send GET/POST requests to the server&amp;rsquo;s APIs while working with a site through a browser.</source>
          <target state="translated">이 구성을 사용하면 브라우저를 통해 사이트를 작업하는 동안 GET / POST 요청을 서버의 API로 보낼 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b557f4ff2559596f55be870cd6d8eef4eec0bfb2" translate="yes" xml:space="preserve">
          <source>This creates a stub class for Entity\User repository with redefined method findByUsername, which will always return the NULL value.</source>
          <target state="translated">이렇게하면 findByUsername 메소드가 재정의 된 Entity \ User 저장소에 대한 스텁 클래스가 작성되며, 항상 NULL 값을 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="6c9f8e48c0ed4e80468843d1c38ca38666ca2099" translate="yes" xml:space="preserve">
          <source>This does not save it in the database. Use &lt;code&gt;have&lt;/code&gt; for that.</source>
          <target state="translated">데이터베이스에 저장하지 않습니다. 사용 &lt;code&gt;have&lt;/code&gt; 그것에 대해.</target>
        </trans-unit>
        <trans-unit id="057701e3a2b6f21a4fb0038366ab1905d1a037ef" translate="yes" xml:space="preserve">
          <source>This example uses jQuery to get a value and assigns that value to a PHP variable:</source>
          <target state="translated">이 예제는 jQuery를 사용하여 값을 가져오고 해당 값을 PHP 변수에 할당합니다.</target>
        </trans-unit>
        <trans-unit id="246a635a48cb95a3bce81663f1b8d53beecb3e68" translate="yes" xml:space="preserve">
          <source>This file is called &lt;code&gt;c3.php&lt;/code&gt; and is &lt;a href=&quot;https://github.com/Codeception/c3&quot;&gt;available on GitHub&lt;/a&gt;. &lt;code&gt;c3.php&lt;/code&gt; should be downloaded and included in your application at the very first line from controller. By sending special headers Codeception will command your application when to start codecoverage collection and when to stop it. After the suite is finished, a report will be stored and Codeception will grab it from your application.</source>
          <target state="translated">이 파일은 &lt;code&gt;c3.php&lt;/code&gt; 이며 &lt;a href=&quot;https://github.com/Codeception/c3&quot;&gt;GitHub에서 사용할 수 있습니다&lt;/a&gt; . &lt;code&gt;c3.php&lt;/code&gt; 는 컨트롤러의 첫 줄에 다운로드하여 응용 프로그램에 포함시켜야합니다. 특수 헤더를 보내면 Codeception이 코드 커버리지 수집을 시작하고 중지 할시기를 응용 프로그램에 명령합니다. 스위트가 완료되면 보고서가 저장되고 Codeception이 애플리케이션에서 보고서를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="49b09c9e5fb91c62f7cdbdf4bf6f078ade3f6a16" translate="yes" xml:space="preserve">
          <source>This format can be recommended for testing domain and database interactions.</source>
          <target state="translated">이 형식은 도메인 및 데이터베이스 상호 작용을 테스트하는 데 권장 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8eb295109235313c3f5625f0698eeb17125e4b1b" translate="yes" xml:space="preserve">
          <source>This function creates the CSRF Cookie.</source>
          <target state="translated">이 기능은 CSRF 쿠키를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="32183d667b14ff14be987c32b566271f824b1813" translate="yes" xml:space="preserve">
          <source>This function works well when paired with &lt;code&gt;seeInFormFields()&lt;/code&gt; for quickly testing CRUD interfaces and form validation logic.</source>
          <target state="translated">이 함수는 &lt;code&gt;seeInFormFields()&lt;/code&gt; 와 쌍을 이루어 CRUD 인터페이스와 양식 유효성 검사 로직을 빠르게 테스트 할 때 잘 작동합니다 .</target>
        </trans-unit>
        <trans-unit id="495b938c5a8cc32705c7e23b6057bbf8c080d24a" translate="yes" xml:space="preserve">
          <source>This is an alias of method &lt;code&gt;exchange_declare&lt;/code&gt; of &lt;code&gt;PhpAmqpLib\Channel\AMQPChannel&lt;/code&gt;.</source>
          <target state="translated">이것은 &lt;code&gt;exchange_declare&lt;/code&gt; 메소드의 별명입니다. 의 &lt;code&gt;PhpAmqpLib\Channel\AMQPChannel&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5b293208874e3c0d80fe2723114fe5f18380cb1c" translate="yes" xml:space="preserve">
          <source>This is an alias of method &lt;code&gt;queue_bind&lt;/code&gt; of &lt;code&gt;PhpAmqpLib\Channel\AMQPChannel&lt;/code&gt;.</source>
          <target state="translated">이것은 &lt;code&gt;queue_bind&lt;/code&gt; 메소드의 별명 입니다. &lt;code&gt;PhpAmqpLib\Channel\AMQPChannel&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f5171e975dee5ef1fb48a96c99cb2f80f1b91c4d" translate="yes" xml:space="preserve">
          <source>This is an alias of method &lt;code&gt;queue_declare&lt;/code&gt; of &lt;code&gt;PhpAmqpLib\Channel\AMQPChannel&lt;/code&gt;.</source>
          <target state="translated">이것은 &lt;code&gt;queue_declare&lt;/code&gt; 메소드의 별명 입니다. &lt;code&gt;PhpAmqpLib\Channel\AMQPChannel&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fd5bbeffbed7dd1c52439fd1376c3c9e0d5ffc3e" translate="yes" xml:space="preserve">
          <source>This is how filters can be used:</source>
          <target state="translated">필터를 사용하는 방법은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="b0402caf503b4cbd24124dcde64edefafd3cece0" translate="yes" xml:space="preserve">
          <source>This is how it can be implemented:</source>
          <target state="translated">이것이 구현되는 방법입니다.</target>
        </trans-unit>
        <trans-unit id="b4fc848e78da33625b5580ea2409fe5cafeb572e" translate="yes" xml:space="preserve">
          <source>This is how we described the initial conditions. Next, we perform some action. We use &lt;strong&gt;When&lt;/strong&gt; keyword for it:</source>
          <target state="translated">이것이 우리가 초기 조건을 묘사 한 방법입니다. 다음으로 몇 가지 조치를 수행합니다. 우리는 &lt;strong&gt;때&lt;/strong&gt; 사용&lt;strong&gt;&lt;/strong&gt; 키워드를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="f6ffaad365e864d942ee46a2d35b59e306253915" translate="yes" xml:space="preserve">
          <source>This is the fastest way to run acceptance tests since it doesn&amp;rsquo;t require running an actual browser. We use a PHP web scraper, which acts like a browser: It sends a request, then receives and parses the response. Codeception uses &lt;a href=&quot;http://guzzlephp.org&quot;&gt;Guzzle&lt;/a&gt; and &lt;a href=&quot;https://symfony.com/doc/current/components/browser_kit.html&quot;&gt;Symfony BrowserKit&lt;/a&gt; to interact with HTML web pages.</source>
          <target state="translated">실제 브라우저를 실행할 필요가 없으므로 승인 테스트를 실행하는 가장 빠른 방법입니다. 브라우저처럼 작동하는 PHP 웹 스크레이퍼를 사용합니다. 요청을 보낸 다음 응답을 받아 구문 분석합니다. Codeception은 &lt;a href=&quot;http://guzzlephp.org&quot;&gt;Guzzle&lt;/a&gt; 및 &lt;a href=&quot;https://symfony.com/doc/current/components/browser_kit.html&quot;&gt;Symfony BrowserKit을 사용합니다.&lt;/a&gt; 을 하여 HTML 웹 페이지와 상호 작용합니다.</target>
        </trans-unit>
        <trans-unit id="fce4fecb6b48de5521d1ddf535a0faa006bd9a79" translate="yes" xml:space="preserve">
          <source>This is the output we should see:</source>
          <target state="translated">이것은 우리가 볼 수있는 출력입니다.</target>
        </trans-unit>
        <trans-unit id="1b361a3161b245d853aa983e3dac2f8ec83371f7" translate="yes" xml:space="preserve">
          <source>This is what acceptance tests are doing. They cover scenarios from a user&amp;rsquo;s perspective. With acceptance tests, you can be confident that users, following all the defined scenarios, won&amp;rsquo;t get errors.</source>
          <target state="translated">이것이 수용 시험이하는 일입니다. 사용자 관점에서 시나리오를 다룹니다. 승인 테스트를 통해 정의 된 모든 시나리오에 따라 사용자에게 오류가 발생하지 않을 것이라고 확신 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="cb96d9daf026e724efeda6ce933ce2c148abd7c2" translate="yes" xml:space="preserve">
          <source>This method &lt;strong&gt;require &lt;a href=&quot;https://github.com/FlowCommunications/JSONPath/&quot;&gt;&lt;code&gt;flow/jsonpath&lt;/code&gt; &amp;gt; 0.2&lt;/a&gt; library to be installed&lt;/strong&gt;.</source>
          <target state="translated">이 방법을 사용 &lt;strong&gt;하려면 &lt;a href=&quot;https://github.com/FlowCommunications/JSONPath/&quot;&gt; &lt;code&gt;flow/jsonpath&lt;/code&gt; &amp;gt; 0.2&lt;/a&gt; 라이브러리를 설치해야&lt;/strong&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="110308f691941d293ac018261ead62136a901e05" translate="yes" xml:space="preserve">
          <source>This method calls &lt;code&gt;seeFormErrorMessage&lt;/code&gt; for each entry in the &lt;code&gt;$bindings&lt;/code&gt; array.</source>
          <target state="translated">이 메소드 는 &lt;code&gt;$bindings&lt;/code&gt; 배열 의 각 항목에 대해 &lt;code&gt;seeFormErrorMessage&lt;/code&gt; 를 호출합니다 .</target>
        </trans-unit>
        <trans-unit id="52aa391eadb529c93fe132d71226f5ce6f76ae42" translate="yes" xml:space="preserve">
          <source>This method recursively checks if one array can be found inside of another.</source>
          <target state="translated">이 방법은 한 배열이 다른 배열 내부에서 발견 될 수 있는지 재귀 적으로 검사합니다.</target>
        </trans-unit>
        <trans-unit id="eb96e8417663e16e7597977373004701d4d6743f" translate="yes" xml:space="preserve">
          <source>This module allows to use &lt;a href=&quot;http://www.yiiframework.com/doc-2.0/guide-test-fixtures.html&quot;&gt;fixtures&lt;/a&gt; inside a test. There are two options for that. Fixtures can be loaded using &lt;a href=&quot;#haveFixtures&quot;&gt;haveFixtures&lt;/a&gt; method inside a test:</source>
          <target state="translated">이 모듈은 테스트 내에서 &lt;a href=&quot;http://www.yiiframework.com/doc-2.0/guide-test-fixtures.html&quot;&gt;조명기&lt;/a&gt; 를 사용할 수 있습니다 . 두 가지 옵션이 있습니다. 테스트 내에서 &lt;a href=&quot;#haveFixtures&quot;&gt;haveFixtures&lt;/a&gt; 메소드를 사용하여 픽스처를 로드 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="c90f7fa194225ba17f4522998ad16560b99a5a8a" translate="yes" xml:space="preserve">
          <source>This module allows you to run functional tests for Laravel 5.1+ It should &lt;strong&gt;not&lt;/strong&gt; be used for acceptance tests. See the Acceptance tests section below for more details.</source>
          <target state="translated">이 모듈을 사용하면 Laravel 5.1+에 대한 기능 테스트를 실행할 수 있습니다 . 승인 테스트에 사용 해서는 &lt;strong&gt;안됩니다&lt;/strong&gt; . 자세한 내용은 아래의 수락 테스트 섹션을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="957bf78db9e6d069f3d57213a8e904ae66c852ad" translate="yes" xml:space="preserve">
          <source>This module allows you to run functional tests for Lumen. Please try it and leave your feedback.</source>
          <target state="translated">이 모듈을 사용하면 루멘에 대한 기능 테스트를 실행할 수 있습니다. 사용 해보고 의견을 남겨주세요.</target>
        </trans-unit>
        <trans-unit id="4c24d68c5f6de783c2653cf03e3d662f1a49c791" translate="yes" xml:space="preserve">
          <source>This module allows you to run tests inside Zend Expressive.</source>
          <target state="translated">이 모듈을 사용하면 Zend Expressive 내에서 테스트를 실행할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ddd2daf4dd2e29845e9feaa3b174017a09a5024d" translate="yes" xml:space="preserve">
          <source>This module allows you to run tests inside Zend Framework 2 and Zend Framework 3.</source>
          <target state="translated">이 모듈을 사용하면 Zend Framework 2 및 Zend Framework 3 내에서 테스트를 실행할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7da51d1f6a27f80f156d500307e8b8ff6cbe158f" translate="yes" xml:space="preserve">
          <source>This module can be used either with frameworks or PHPBrowser. If a framework module is connected, the testing will occur in the application directly. Otherwise, a PHPBrowser should be specified as a dependency to send requests and receive responses from a server.</source>
          <target state="translated">이 모듈은 프레임 워크 또는 PHPBrowser와 함께 사용할 수 있습니다. 프레임 워크 모듈이 연결된 경우 테스트는 응용 프로그램에서 직접 수행됩니다. 그렇지 않으면, 요청을 보내고 서버로부터 응답을 받기 위해 PHPBrowser를 종속성으로 지정해야합니다.</target>
        </trans-unit>
        <trans-unit id="d1e59e02d28118f25a4c5733ff476cab505e6359" translate="yes" xml:space="preserve">
          <source>This module can be used either with frameworks or PHPBrowser. It tries to guess the framework is is attached to. If a endpoint is a full url then it uses PHPBrowser.</source>
          <target state="translated">이 모듈은 프레임 워크 또는 PHPBrowser와 함께 사용할 수 있습니다. 프레임 워크가 연결되어 있다고 추측합니다. 엔드 포인트가 전체 URL 인 경우 PHPBrowser를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="01b6861b61d4dd266067c530cd2b44386e139e81" translate="yes" xml:space="preserve">
          <source>This module extends the Filesystem module, file contents methods are inherited from this module.</source>
          <target state="translated">이 모듈은 파일 시스템 모듈을 확장하고 파일 내용 메소드는이 모듈에서 상속됩니다.</target>
        </trans-unit>
        <trans-unit id="139d3bc6bb3e566d29065536eeff8494e74880c8" translate="yes" xml:space="preserve">
          <source>This module has no actions, but introduces a function &lt;code&gt;sq&lt;/code&gt; for generating unique sequences within test and &lt;code&gt;sqs&lt;/code&gt; for generating unique sequences across suite.</source>
          <target state="translated">이 모듈에는 동작이 없지만 테스트 및 &lt;code&gt;sqs&lt;/code&gt; 내에서 고유 시퀀스를 생성하기위한 &lt;code&gt;sq&lt;/code&gt; 함수를 소개합니다. 제품군 전체에서 고유 시퀀스를 생성하기위한 를 .</target>
        </trans-unit>
        <trans-unit id="5822de9385b70f7ad64a65b2766bb78c103debcd" translate="yes" xml:space="preserve">
          <source>This module interacts with message broker software that implements the Advanced Message Queuing Protocol (AMQP) standard. For example, RabbitMQ (tested).</source>
          <target state="translated">이 모듈은 AMQP (Advanced Message Queuing Protocol) 표준을 구현하는 메시지 브로커 소프트웨어와 상호 작용합니다. 예를 들어 RabbitMQ (테스트)입니다.</target>
        </trans-unit>
        <trans-unit id="734c8cbb8bb4370d60a6a5a3ec560bfb1201e2a2" translate="yes" xml:space="preserve">
          <source>This module interacts with the &lt;a href=&quot;https://php.net/manual/en/intro.apcu.php&quot;&gt;Alternative PHP Cache (APC)&lt;/a&gt; using either &lt;em&gt;APCu&lt;/em&gt; or &lt;em&gt;APC&lt;/em&gt; extension.</source>
          <target state="translated">이 모듈 은 &lt;em&gt;APCu&lt;/em&gt; 또는 &lt;em&gt;APC&lt;/em&gt; 확장을 사용하여 &lt;a href=&quot;https://php.net/manual/en/intro.apcu.php&quot;&gt;APC (Alternative PHP Cache)&lt;/a&gt; 와 상호 작용 합니다.&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="6228f0f67bd8dafeee4a86b471394c11cac0c584" translate="yes" xml:space="preserve">
          <source>This module provide to use native URL formats of Yii2 for all codeception commands that use url for work. This commands allows input like:</source>
          <target state="translated">이 모듈은 작업에 url을 사용하는 모든 코드 인식 명령에 Yii2의 기본 URL 형식을 사용하도록 제공합니다. 이 명령은 다음과 같은 입력을 허용합니다.</target>
        </trans-unit>
        <trans-unit id="9ab00b93aea5f6c6748c007540ef8f721d33c018" translate="yes" xml:space="preserve">
          <source>This module provides integration with &lt;a href=&quot;http://www.phalconphp.com/&quot;&gt;Phalcon framework&lt;/a&gt; (3.x). Please try it and leave your feedback.</source>
          <target state="translated">이 모듈은 &lt;a href=&quot;http://www.phalconphp.com/&quot;&gt;Phalcon 프레임 워크&lt;/a&gt; (3.x) 와의 통합을 제공합니다 . 사용 해보고 의견을 남겨주세요.</target>
        </trans-unit>
        <trans-unit id="22b0d8f16c9800fa9bd1320b58e4a9ae38c70546" translate="yes" xml:space="preserve">
          <source>This module provides integration with &lt;a href=&quot;http://www.yiiframework.com/&quot;&gt;Yii framework&lt;/a&gt; (2.0). It initializes Yii framework in test environment and provides actions for functional testing.</source>
          <target state="translated">이 모듈은 &lt;a href=&quot;http://www.yiiframework.com/&quot;&gt;Yii 프레임 워크&lt;/a&gt; (2.0) 와의 통합을 제공합니다 . 테스트 환경에서 Yii 프레임 워크를 초기화하고 기능 테스트를위한 조치를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="51ff6a6542176305f51b72dc5f666da50eaf774e" translate="yes" xml:space="preserve">
          <source>This module requires PHPBrowser or any of Framework modules enabled.</source>
          <target state="translated">이 모듈에는 PHPBrowser 또는 Framework 모듈이 활성화되어 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="235b20eeb79f677f1f160bf500cf4c29c7657567" translate="yes" xml:space="preserve">
          <source>This module requires packages installed:</source>
          <target state="translated">이 모듈에는 패키지가 설치되어 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="5f7edb2d62976775f866e047aa9b5f8f6c2452fb" translate="yes" xml:space="preserve">
          <source>This module uses Symfony Crawler and HttpKernel to emulate requests and test response.</source>
          <target state="translated">이 모듈은 Symfony Crawler 및 HttpKernel을 사용하여 요청을 에뮬레이션하고 응답을 테스트합니다.</target>
        </trans-unit>
        <trans-unit id="423832627d674a589f37c12eae22bcf8e2f1a813" translate="yes" xml:space="preserve">
          <source>This module uses the &lt;a href=&quot;https://github.com/nrk/predis&quot;&gt;Predis&lt;/a&gt; library to interact with a Redis server.</source>
          <target state="translated">이 모듈은 &lt;a href=&quot;https://github.com/nrk/predis&quot;&gt;Predis&lt;/a&gt; 라이브러리를 사용하여 Redis 서버와 상호 작용합니다.</target>
        </trans-unit>
        <trans-unit id="e0664053b5bc98dbfe6cb4eea31868ac4d9aba26" translate="yes" xml:space="preserve">
          <source>This runs in the context of the &lt;a href=&quot;https://github.com/facebook/php-webdriver/blob/master/lib/remote/RemoteWebDriver.php&quot;&gt;RemoteWebDriver class&lt;/a&gt;. Try not to use this command on a regular basis. If Codeception lacks a feature you need, please implement it and submit a patch.</source>
          <target state="translated">이것은 &lt;a href=&quot;https://github.com/facebook/php-webdriver/blob/master/lib/remote/RemoteWebDriver.php&quot;&gt;RemoteWebDriver 클래스&lt;/a&gt; 의 컨텍스트에서 실행됩니다 . 이 명령을 정기적으로 사용하지 마십시오. Codeception에 필요한 기능이없는 경우이를 구현하고 패치를 제출하십시오.</target>
        </trans-unit>
        <trans-unit id="81a486ea96a0402cad1e365e369584e6274761ee" translate="yes" xml:space="preserve">
          <source>This scenario can probably be read by non-technical people. If you just remove all special chars like braces, arrows and &lt;code&gt;$&lt;/code&gt;, this test transforms into plain English text:</source>
          <target state="translated">이 시나리오는 기술이 아닌 사람들이 읽을 수 있습니다. 중괄호, 화살표 및 &lt;code&gt;$&lt;/code&gt; 와 같은 특수 문자를 모두 제거하면 이 테스트는 일반 영어 텍스트로 변환됩니다.</target>
        </trans-unit>
        <trans-unit id="622f0218840627aae58a1a095010f4347ab33fd0" translate="yes" xml:space="preserve">
          <source>This section details what you can expect when using this module.</source>
          <target state="translated">이 섹션에서는이 모듈을 사용할 때 예상 할 수있는 사항에 대해 자세히 설명합니다.</target>
        </trans-unit>
        <trans-unit id="0c8b2b964b204e94c332273f403cfbff48cf346e" translate="yes" xml:space="preserve">
          <source>This simple test can be extended to a complete scenario of site usage, therefore, by emulating the user&amp;rsquo;s actions, you can test any of your websites.</source>
          <target state="translated">이 간단한 테스트는 사이트 사용의 전체 시나리오로 확장 될 수 있으므로 사용자의 동작을 에뮬레이션하여 모든 웹 사이트를 테스트 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d2f3924667ab167c40d910fe86995985910da2d9" translate="yes" xml:space="preserve">
          <source>This string is passed as a standard PHP string parameter</source>
          <target state="translated">이 문자열은 표준 PHP 문자열 매개 변수로 전달됩니다</target>
        </trans-unit>
        <trans-unit id="0afa514aeb64eecf2071d61020b2a004c904f61b" translate="yes" xml:space="preserve">
          <source>This template can be fulfilled by setting actor and goals:</source>
          <target state="translated">이 템플릿은 배우와 목표를 설정하여 수행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="13f45325506b1fbe8984315416b8d7e60faa5c91" translate="yes" xml:space="preserve">
          <source>This test will trigger the following events:</source>
          <target state="translated">이 테스트는 다음 이벤트를 트리거합니다.</target>
        </trans-unit>
        <trans-unit id="b775b15223a3b54fdcfc2ce55d6d16e91dd4254f" translate="yes" xml:space="preserve">
          <source>This test, running with the PhpBrowser module in debug mode, will print something like this:</source>
          <target state="translated">디버그 모드에서 PhpBrowser 모듈로 실행되는이 테스트는 다음과 같이 인쇄됩니다.</target>
        </trans-unit>
        <trans-unit id="ad760ce0824beb2eaace8f7a6bac97ce08ee4652" translate="yes" xml:space="preserve">
          <source>This way PageObjects, Helpers and StepObjects can become contexts as well. But more preferable to include context classes by their tags or roles.</source>
          <target state="translated">이런 식으로 PageObjects, Helpers 및 StepObjects도 컨텍스트가 될 수 있습니다. 그러나 태그 나 역할별로 컨텍스트 클래스를 포함하는 것이 더 좋습니다.</target>
        </trans-unit>
        <trans-unit id="deb9e7bd23d8d365307f720238040e7fbe5b2658" translate="yes" xml:space="preserve">
          <source>This way feature file runs just the same as any other Codeception test. Substeps give us detailed information of how the scenario is being executed.</source>
          <target state="translated">이런 식으로 기능 파일은 다른 Codeception 테스트와 동일하게 실행됩니다. 하위 단계는 시나리오 실행 방법에 대한 자세한 정보를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="027a270497ebd9e458f131fd1ba22e658c2fba47" translate="yes" xml:space="preserve">
          <source>This way if you try to use two modules sharing the same conflicted interface you will get an exception.</source>
          <target state="translated">이 방법으로 동일한 충돌 인터페이스를 공유하는 두 개의 모듈을 사용하려고하면 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="2b5a48f9bf9bf3efcb3bcd2967ba4035378e130e" translate="yes" xml:space="preserve">
          <source>This way no web actions will be added to &lt;code&gt;$I&lt;/code&gt; object.</source>
          <target state="translated">이렇게하면 &lt;code&gt;$I&lt;/code&gt; 객체에 웹 작업이 추가되지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="a87c1f16ef6b4ea22e67e7f3d4f999bf4fd0beab" translate="yes" xml:space="preserve">
          <source>This way you can easily control which tests will be executed for each environment.</source>
          <target state="translated">이 방법으로 각 환경에 대해 어떤 테스트를 실행할지 쉽게 제어 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f07dcba5fbb38030b083c2635dc8efc2b045d2b9" translate="yes" xml:space="preserve">
          <source>This will bootstrap a new project with the &lt;code&gt;namespace: frontend&lt;/code&gt; parameter in the &lt;code&gt;codeception.yml&lt;/code&gt; file. Helpers will be in the &lt;code&gt;frontend\Codeception\Module&lt;/code&gt; namespace and Actor classes will be in the &lt;code&gt;frontend&lt;/code&gt; namespace.</source>
          <target state="translated">&lt;code&gt;codeception.yml&lt;/code&gt; 파일 의 &lt;code&gt;namespace: frontend&lt;/code&gt; 매개 변수를 사용하여 새 프로젝트를 부트 스트랩 합니다. 도우미는 &lt;code&gt;frontend\Codeception\Module&lt;/code&gt; 네임 스페이스에 있고 Actor 클래스는 &lt;code&gt;frontend&lt;/code&gt; 네임 스페이스에 있습니다.</target>
        </trans-unit>
        <trans-unit id="f5b8c24db209c7830ed1230b7637c32d0e74971f" translate="yes" xml:space="preserve">
          <source>This will create a &lt;code&gt;Login&lt;/code&gt; class in &lt;code&gt;tests/_support/Page&lt;/code&gt;. The basic PageObject is nothing more than an empty class with a few stubs. It is expected that you will populate it with the UI locators of a page it represents and then those locators will be used on a page. Locators are represented with public static properties:</source>
          <target state="translated">&lt;code&gt;tests/_support/Page&lt;/code&gt; 에 &lt;code&gt;Login&lt;/code&gt; 클래스 가 생성됩니다 . 기본 PageObject는 몇 개의 스텁이있는 빈 클래스에 지나지 않습니다. 표시하는 페이지의 UI 로케이터로 해당 페이지를 채우면 해당 로케이터가 페이지에서 사용됩니다. 로케이터는 공개 정적 속성으로 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="4743b1c845bc3887da6e5ec946fef9a61908bd00" translate="yes" xml:space="preserve">
          <source>This will generate &lt;code&gt;SigninCest.php&lt;/code&gt; file inside &lt;code&gt;tests/acceptance&lt;/code&gt; directory. Let&amp;rsquo;s open it:</source>
          <target state="translated">이것은 &lt;code&gt;tests/acceptance&lt;/code&gt; 디렉토리 안에 &lt;code&gt;SigninCest.php&lt;/code&gt; 파일 을 생성 할 것 입니다. 열어 봅시다 :</target>
        </trans-unit>
        <trans-unit id="06aa388826cd7f270bedaabdbed12ac912ce1fee" translate="yes" xml:space="preserve">
          <source>This will generate a class in &lt;code&gt;/tests/_support/Step/Acceptance/Admin.php&lt;/code&gt; similar to this:</source>
          <target state="translated">이것은 &lt;code&gt;/tests/_support/Step/Acceptance/Admin.php&lt;/code&gt; 에 다음 과 비슷한 클래스를 생성합니다 :</target>
        </trans-unit>
        <trans-unit id="ee0b965e3c484b969f2a8d219e9e1aa1e7e472be" translate="yes" xml:space="preserve">
          <source>This will launch the test suites for all three applications and merge the reports from all of them. This is very useful when you run your tests on a Continuous Integration server and you want to get a single report in JUnit and HTML format. The code coverage report will be merged too.</source>
          <target state="translated">그러면 세 응용 프로그램 모두에 대한 테스트 스위트가 시작되고 모든 응용 프로그램에서 보고서가 병합됩니다. Continuous Integration 서버에서 테스트를 실행하고 JUnit 및 HTML 형식의 단일 보고서를 얻으려는 경우 매우 유용합니다. 코드 적용 범위 보고서도 병합됩니다.</target>
        </trans-unit>
        <trans-unit id="26f29ed4a76ddd6b2b7b55e790156dfa78250a31" translate="yes" xml:space="preserve">
          <source>This will load all context from the given path and prefix it with the given namespace.</source>
          <target state="translated">주어진 경로에서 모든 컨텍스트를로드하고 주어진 네임 스페이스로 접두사를 붙입니다.</target>
        </trans-unit>
        <trans-unit id="17e838bd4586037a45ebbf4c584b119f9cd1d99d" translate="yes" xml:space="preserve">
          <source>This will load all found &lt;code&gt;p*&lt;/code&gt; files in &lt;code&gt;tests/_data&lt;/code&gt; as groups. Group names will be as follows p1,p2,&amp;hellip;,pN.</source>
          <target state="translated">이렇게하면 &lt;code&gt;tests/_data&lt;/code&gt; 에서 찾은 모든 &lt;code&gt;p*&lt;/code&gt; 파일이 그룹으로 로드 됩니다. 그룹 이름은 다음과 같습니다. p1, p2,&amp;hellip;, pN.</target>
        </trans-unit>
        <trans-unit id="ae716a947bff519afe13002d98d4fb2bb86d5ace" translate="yes" xml:space="preserve">
          <source>This will match any word (passed in double quotes) or a number passed:</source>
          <target state="translated">이것은 모든 단어 (큰 따옴표로 묶음) 또는 전달 된 숫자와 일치합니다.</target>
        </trans-unit>
        <trans-unit id="641effe51b09108081714c5a068477e2590e9837" translate="yes" xml:space="preserve">
          <source>This will produce code templates for all undefined steps in all feature files of this suite. Our next step will be to define those steps and transforming feature-file into valid test.</source>
          <target state="translated">이렇게하면이 제품군의 모든 기능 파일에서 정의되지 않은 모든 단계에 대한 코드 템플릿이 생성됩니다. 다음 단계는 이러한 단계를 정의하고 기능 파일을 유효한 테스트로 변환하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="938a9ea9193e97cd6f04c2d475133ccf1b3184fe" translate="yes" xml:space="preserve">
          <source>This will produce this XML</source>
          <target state="translated">이것은이 XML을 생성합니다</target>
        </trans-unit>
        <trans-unit id="e790594cbb4a8f4105931fadec1cd0c498025ead" translate="yes" xml:space="preserve">
          <source>This will search for &lt;code&gt;Title&lt;/code&gt; text in either &lt;code&gt;h1&lt;/code&gt;, &lt;code&gt;h2&lt;/code&gt;, or &lt;code&gt;h3&lt;/code&gt; tag. You can also combine CSS selector with XPath locator:</source>
          <target state="translated">&lt;code&gt;h1&lt;/code&gt; , &lt;code&gt;h2&lt;/code&gt; 또는 &lt;code&gt;h3&lt;/code&gt; 태그 에서 &lt;code&gt;Title&lt;/code&gt; 텍스트를 검색합니다 . CSS 선택기를 XPath 로케이터와 결합 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="ea7adadb567b53fb1acf2d8ed8e9ab6fa33fccd1" translate="yes" xml:space="preserve">
          <source>This will use static method of &lt;code&gt;MyDb::createEntityManager()&lt;/code&gt; to establish the Entity Manager.</source>
          <target state="translated">&lt;code&gt;MyDb::createEntityManager()&lt;/code&gt; 의 정적 메소드를 사용 하여 엔티티 관리자를 설정합니다.</target>
        </trans-unit>
        <trans-unit id="b861e49cfd57b05207e848d0a974bfd07aa93702" translate="yes" xml:space="preserve">
          <source>Those methods can be used to create custom commands like &lt;code&gt;$I-&amp;gt;startBrowser()&lt;/code&gt; or used in &lt;a href=&quot;06-modulesandhelpers#Hooks&quot;&gt;before/after&lt;/a&gt; hooks.</source>
          <target state="translated">이러한 메소드는 &lt;code&gt;$I-&amp;gt;startBrowser()&lt;/code&gt; 와 같은 사용자 정의 명령을 작성 하거나 사전 &lt;a href=&quot;06-modulesandhelpers#Hooks&quot;&gt;/ 이후&lt;/a&gt; 후크에 사용될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f979403e41a98dd8efe49fab5e0a21e6f718d34b" translate="yes" xml:space="preserve">
          <source>Those properties and methods are expected to be used in Helper classes:</source>
          <target state="translated">이러한 속성과 메서드는 도우미 클래스에서 사용될 것으로 예상됩니다.</target>
        </trans-unit>
        <trans-unit id="9839039fd7148a5312dd4c7518324e38509c6c04" translate="yes" xml:space="preserve">
          <source>Throw an &lt;code&gt;ElementNotFound&lt;/code&gt; exception.</source>
          <target state="translated">던져 &lt;code&gt;ElementNotFound&lt;/code&gt; 의 예외.</target>
        </trans-unit>
        <trans-unit id="f160ed7a99c266b070fe0b07fa7b8c6a186663a7" translate="yes" xml:space="preserve">
          <source>Ticks a checkbox. For radio buttons, use the &lt;code&gt;selectOption&lt;/code&gt; method instead.</source>
          <target state="translated">확인란을 선택합니다. 단일 선택 단추의 경우 &lt;code&gt;selectOption&lt;/code&gt; 메소드를 대신 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="40b3a3c2e4163e7e9bb1d0e0406714d453267427" translate="yes" xml:space="preserve">
          <source>To access UnitTester methods you can use the &lt;code&gt;UnitTester&lt;/code&gt; property in a test.</source>
          <target state="translated">UnitTester 메소드에 액세스하기 위해 테스트에서 &lt;code&gt;UnitTester&lt;/code&gt; 특성을 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="ea7fa5cf1b1616ec0c52f41ea8d4e724ed2cc4a6" translate="yes" xml:space="preserve">
          <source>To avoid confusion, &lt;strong&gt;Framework modules, PhpBrowser, and WebDriver&lt;/strong&gt; can&amp;rsquo;t be used together. For instance, the &lt;code&gt;amOnPage&lt;/code&gt; method exists in all those modules, and you should not try to guess which module will actually execute it. If you are doing acceptance testing, set up either WebDriver or PHPBrowser but do not set both up at the same time. If you are doing functional testing, enable only one of the framework modules.</source>
          <target state="translated">혼동을 피하기 위해 &lt;strong&gt;프레임 워크 모듈, PhpBrowser 및 WebDriver&lt;/strong&gt; 를 함께 사용할 수 없습니다. 예를 들어, &lt;code&gt;amOnPage&lt;/code&gt; 메소드는 모든 모듈에 존재하며 실제로 어떤 모듈을 실행할지 추측해서는 안됩니다. 승인 테스트를 수행하는 경우 WebDriver 또는 PHPBrowser를 설정하되 동시에 설정하지는 마십시오. 기능 테스트를 수행하는 경우 프레임 워크 모듈 중 하나만 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="997f66b0cb3c029f0eb8bd20e4d4cc693dc8b3dc" translate="yes" xml:space="preserve">
          <source>To avoid naming conflicts between Actor classes and Helper classes, they should be separated into namespaces. To create test suites with namespaces you can add &lt;code&gt;--namespace&lt;/code&gt; option to the bootstrap command:</source>
          <target state="translated">액터 클래스와 헬퍼 클래스 사이의 이름 충돌을 피하려면 네임 스페이스로 분리해야합니다. 네임 스페이스로 테스트 스위트를 작성하려면 bootstrap 명령에 &lt;code&gt;--namespace&lt;/code&gt; 옵션을 추가하십시오 .</target>
        </trans-unit>
        <trans-unit id="6f1d408afe2aeb5a1a5bb3d4113f8c30c742a05b" translate="yes" xml:space="preserve">
          <source>To change module configuration for a specific group of tests use &lt;a href=&quot;08-customization#Group-Objects&quot;&gt;GroupObjects&lt;/a&gt;.</source>
          <target state="translated">특정 테스트 그룹에 대한 모듈 구성을 변경하려면 &lt;a href=&quot;08-customization#Group-Objects&quot;&gt;GroupObjects를&lt;/a&gt; 사용 하십시오 .</target>
        </trans-unit>
        <trans-unit id="56acb72d9c9d56e9f3d6db688507db5ef2557319" translate="yes" xml:space="preserve">
          <source>To check that an element hasn&amp;rsquo;t been assigned any one of many values, an array can be passed as the value:</source>
          <target state="translated">요소에 많은 값 중 하나가 할당되지 않았는지 확인하기 위해 배열을 값으로 전달할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e619b478a656cd19f5cf11f09795233bc0238830" translate="yes" xml:space="preserve">
          <source>To combine &lt;code&gt;waitForElement&lt;/code&gt; with actions inside that element you can use the &lt;a href=&quot;modules/webdriver#performOn&quot;&gt;performOn&lt;/a&gt; method. Let&amp;rsquo;s see how you can perform some actions inside an HTML popup:</source>
          <target state="translated">&lt;code&gt;waitForElement&lt;/code&gt; 를 해당 요소 내부의 조치와 결합하려면 &lt;a href=&quot;modules/webdriver#performOn&quot;&gt;performOn&lt;/a&gt; 메소드를 사용할 수 있습니다 . HTML 팝업 내에서 몇 가지 작업을 수행하는 방법을 살펴 보겠습니다.</target>
        </trans-unit>
        <trans-unit id="4058a630bb8bf89172a2629e3079b9dd3752500c" translate="yes" xml:space="preserve">
          <source>To conclude, we need:</source>
          <target state="translated">결론적으로 다음이 필요합니다.</target>
        </trans-unit>
        <trans-unit id="889fe4826fe7db5a5284186358d3a3de61a0b949" translate="yes" xml:space="preserve">
          <source>To connect to &lt;code&gt;c3&lt;/code&gt; Codeception uses url config from PhpBrowser or WebDriver module. But URL of index with &lt;code&gt;c3.php&lt;/code&gt; included can be specified explicitly with &lt;code&gt;c3_url&lt;/code&gt; parameter defined:</source>
          <target state="translated">&lt;code&gt;c3&lt;/code&gt; Codeception에 연결하려면 PhpBrowser 또는 WebDriver 모듈의 url config를 사용하십시오. 그러나 &lt;code&gt;c3.php&lt;/code&gt; 가 포함 된 색인의 URL은 &lt;code&gt;c3_url&lt;/code&gt; 매개 변수를 정의 하여 명시 적으로 지정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="d9c60b9ee14eba56f1ef58e73586c9bbfc1e7c20" translate="yes" xml:space="preserve">
          <source>To control browsers Selenium Server uses official tools maintained by browser vendors, like &lt;a href=&quot;https://sites.google.com/a/chromium.org/chromedriver&quot;&gt;ChromeDriver&lt;/a&gt; for Chrome or &lt;a href=&quot;https://github.com/mozilla/geckodriver&quot;&gt;GeckoDriver&lt;/a&gt; for Firefox. This makes Selenium quite heavy to install, as it requires Java, browsers, Chrome or GeckoDriver and GUI (display server) to run browsers in.</source>
          <target state="translated">제어 브라우저에 셀레늄 서버는 공식 도구처럼, 브라우저 벤더에 의해 관리 사용 &lt;a href=&quot;https://sites.google.com/a/chromium.org/chromedriver&quot;&gt;ChromeDriver&lt;/a&gt; 크롬 또는 대한 &lt;a href=&quot;https://github.com/mozilla/geckodriver&quot;&gt;GeckoDriver&lt;/a&gt; Firefox 용. 따라서 브라우저를 실행하려면 Java, 브라우저, Chrome 또는 GeckoDriver 및 GUI (디스플레이 서버)가 필요하므로 Selenium을 설치하기가 상당히 무겁습니다.</target>
        </trans-unit>
        <trans-unit id="9717eaa1eb3c5738c49ac41848ea0614f838dcbe" translate="yes" xml:space="preserve">
          <source>To control the browsers you need to use a program or a service to start/stop browser sessions. In the next section, we will overview the most popular solutions.</source>
          <target state="translated">브라우저를 제어하려면 프로그램 또는 서비스를 사용하여 브라우저 세션을 시작 / 중지해야합니다. 다음 섹션에서는 가장 많이 사용되는 솔루션을 개괄적으로 설명합니다.</target>
        </trans-unit>
        <trans-unit id="dee33c58459561431cb09d2a886e06e8d6d2a39a" translate="yes" xml:space="preserve">
          <source>To create a project in directory different from the current one, just provide its path as a parameter:</source>
          <target state="translated">현재 프로젝트와 다른 디렉토리에 프로젝트를 작성하려면 해당 경로를 매개 변수로 제공하십시오.</target>
        </trans-unit>
        <trans-unit id="90125501d5b026c2824bb36dc4f1cfc5594af8b6" translate="yes" xml:space="preserve">
          <source>To create one command to rule them all we can define new public method &lt;code&gt;parallelAll&lt;/code&gt; and execute all commands. We will save the result of &lt;code&gt;parallelRun&lt;/code&gt; and use it for our final exit code:</source>
          <target state="translated">하나의 명령을 작성하여 모든 규칙을 정하기 위해 새로운 공용 메소드 &lt;code&gt;parallelAll&lt;/code&gt; 을 정의 하고 모든 명령을 실행할 수 있습니다 . &lt;code&gt;parallelRun&lt;/code&gt; 의 결과를 저장 하고 최종 종료 코드에 사용합니다.</target>
        </trans-unit>
        <trans-unit id="6ebf325d5ca25c6a0118e5b8237de27ba8725136" translate="yes" xml:space="preserve">
          <source>To declare expectations for mocks use &lt;code&gt;Codeception\Stub\Expected&lt;/code&gt; class:</source>
          <target state="translated">모의에 대한 기대를 선언하려면 &lt;code&gt;Codeception\Stub\Expected&lt;/code&gt; 클래스를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="100f9d0d9dcc5581a01d67d43f50340128111be9" translate="yes" xml:space="preserve">
          <source>To display additional information, use the &lt;code&gt;debug&lt;/code&gt; and &lt;code&gt;debugSection&lt;/code&gt; methods of the module. Here is an example of how it works for PhpBrowser:</source>
          <target state="translated">추가 정보를 표시하려면 모듈 의 &lt;code&gt;debug&lt;/code&gt; 및 &lt;code&gt;debugSection&lt;/code&gt; 메소드를 사용하십시오. 다음은 PhpBrowser에서 작동하는 방법의 예입니다.</target>
        </trans-unit>
        <trans-unit id="db068ee171235a0ed610a01bf6b0b96f31a7a940" translate="yes" xml:space="preserve">
          <source>To enable code coverage put these lines in the global configuration file &lt;code&gt;codeception.yml&lt;/code&gt;:</source>
          <target state="translated">코드 적용을 가능하게하려면 다음 행을 글로벌 구성 파일 &lt;code&gt;codeception.yml&lt;/code&gt; 에 넣으십시오 .</target>
        </trans-unit>
        <trans-unit id="ae863a9dea090403facd86e09f82b802323dd059" translate="yes" xml:space="preserve">
          <source>To enable extension dynamically, execute the &lt;code&gt;run&lt;/code&gt; command with &lt;code&gt;--ext&lt;/code&gt; option. Provide a class name as a parameter:</source>
          <target state="translated">확장을 동적으로 활성화하려면 &lt;code&gt;--ext&lt;/code&gt; 옵션 과 함께 &lt;code&gt;run&lt;/code&gt; 명령을 실행하십시오 . 클래스 이름을 매개 변수로 제공하십시오.</target>
        </trans-unit>
        <trans-unit id="4d94ddbbd397ff36c359a72d66b6979f6ea0bfa8" translate="yes" xml:space="preserve">
          <source>To enable the database functionality in unit tests, make sure the &lt;code&gt;Db&lt;/code&gt; module is included in the &lt;code&gt;unit.suite.yml&lt;/code&gt; configuration file. The database will be cleaned and populated after each test, the same way it happens for acceptance and functional tests. If that&amp;rsquo;s not your required behavior, change the settings of the &lt;code&gt;Db&lt;/code&gt; module for the current suite. See &lt;a href=&quot;modules/db&quot;&gt;Db Module&lt;/a&gt;</source>
          <target state="translated">단위 테스트에서 데이터베이스 기능을 사용하려면 &lt;code&gt;Db&lt;/code&gt; 모듈이 &lt;code&gt;unit.suite.yml&lt;/code&gt; 구성 파일에 포함되어 있는지 확인하십시오 . 승인 및 기능 테스트와 동일한 방식으로 각 테스트 후에 데이터베이스가 정리되고 채워집니다. 필요한 동작이 아닌 경우 현재 제품군 의 &lt;code&gt;Db&lt;/code&gt; 모듈 설정을 변경하십시오 . &lt;a href=&quot;modules/db&quot;&gt;DB 모듈&lt;/a&gt; 참조</target>
        </trans-unit>
        <trans-unit id="ba1b898d5e07a174e289632c55ed03a345ffc57a" translate="yes" xml:space="preserve">
          <source>To ensure database dump is loaded before all tests add &lt;code&gt;populate: true&lt;/code&gt;. To clean current database and reload dump between tests use &lt;code&gt;cleanup: true&lt;/code&gt;.</source>
          <target state="translated">모든 테스트 &lt;code&gt;populate: true&lt;/code&gt; 추가하기 전에 데이터베이스 덤프가로드되도록하려면 true . 테스트간에 현재 데이터베이스를 정리하고 덤프를 다시로드하려면 &lt;code&gt;cleanup: true&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1cf87a678cfb9aefe0247bb9798133ae1162b72c" translate="yes" xml:space="preserve">
          <source>To execute a group of tests that are not stored in the same directory, you can organize them in &lt;a href=&quot;07-advancedusage#Groups&quot;&gt;groups&lt;/a&gt;.</source>
          <target state="translated">같은 디렉토리에 저장되지 않은 테스트 그룹을 실행하려면, 당신은 그들에 구성 할 수 있습니다 &lt;a href=&quot;07-advancedusage#Groups&quot;&gt;그룹&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="3804f4ea343d7a6b630c14100b07519b6e7721ed" translate="yes" xml:space="preserve">
          <source>To execute a test in a browser we need to change the suite configuration to use &lt;strong&gt;WebDriver&lt;/strong&gt; instead of &lt;code&gt;PhpBrowser&lt;/code&gt;.</source>
          <target state="translated">브라우저에서 테스트를 실행하려면 &lt;code&gt;PhpBrowser&lt;/code&gt; 대신 &lt;strong&gt;WebDriver&lt;/strong&gt; 를 사용하도록 제품군 구성을 변경해야합니다 .</target>
        </trans-unit>
        <trans-unit id="5e54abd8d0278dfa29aba8d09f81533c817fafc4" translate="yes" xml:space="preserve">
          <source>To generate JUnit XML output, you can provide the &lt;code&gt;--xml&lt;/code&gt; option, and &lt;code&gt;--html&lt;/code&gt; for HTML report.</source>
          <target state="translated">JUnit XML 출력을 생성하기 위해 &lt;code&gt;--xml&lt;/code&gt; 옵션 및 HTML 보고서에 &lt;code&gt;--html&lt;/code&gt; 을 제공 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="d6e993a6ddad35b25700377e04bd31f00c71406c" translate="yes" xml:space="preserve">
          <source>To generate a clover xml report or a tasty html report append also &lt;code&gt;--coverage-xml&lt;/code&gt; and &lt;code&gt;--coverage-html&lt;/code&gt; options.</source>
          <target state="translated">클로버 xml 보고서 또는 맛있는 html 보고서를 생성하려면 &lt;code&gt;--coverage-xml&lt;/code&gt; 및 &lt;code&gt;--coverage-html&lt;/code&gt; 옵션 도 추가하십시오 .</target>
        </trans-unit>
        <trans-unit id="b58fb91019c0be55bc10d6d24f38a991e787bdd5" translate="yes" xml:space="preserve">
          <source>To get more details on steps executed you can generate HTML report and use Jenkins to display them.</source>
          <target state="translated">실행 된 단계에 대한 자세한 정보를 얻으려면 HTML 보고서를 생성하고 Jenkins를 사용하여이를 표시 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c77b77ebd882a05e19bc1efb4cb38db37c77e357" translate="yes" xml:space="preserve">
          <source>To init tests in specific folder use &lt;code&gt;--path&lt;/code&gt; option:</source>
          <target state="translated">특정 폴더에서 테스트를 시작하려면 &lt;code&gt;--path&lt;/code&gt; 옵션을 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="17267dc3ce70f4fd9e214b13f5bc70b87cd6dccb" translate="yes" xml:space="preserve">
          <source>To limit tests run to a single class, add a second argument. Provide a local path to the test class, from the suite directory:</source>
          <target state="translated">테스트가 단일 클래스로 실행되도록 제한하려면 두 번째 인수를 추가하십시오. suite 디렉토리에서 테스트 클래스의 로컬 경로를 제공하십시오.</target>
        </trans-unit>
        <trans-unit id="bc8144a9117a2721cea959d1ebd8b234a8a47835" translate="yes" xml:space="preserve">
          <source>To list all defined steps run &lt;code&gt;gherkin:steps&lt;/code&gt; command:</source>
          <target state="translated">정의 된 모든 단계를 나열하려면 &lt;code&gt;gherkin:steps&lt;/code&gt; 명령을 실행 하십시오 .</target>
        </trans-unit>
        <trans-unit id="dbb575e632c05d82c2f07f40c1ee5db90373201f" translate="yes" xml:space="preserve">
          <source>To make testing more effective we assumed that we are using one of the ActiveRecord frameworks like Laravel, Yii, or Phalcon so we are able to dynamically create records in database with &lt;code&gt;haveRecord&lt;/code&gt; method. After that we are opening browser and testing our web pages to see that after selecting those products we really see the price was calculated correctly.</source>
          <target state="translated">테스트를보다 효과적으로하기 위해 Laravel, Yii 또는 Phalcon과 같은 ActiveRecord 프레임 워크 중 하나를 사용하고 있다고 가정하여 &lt;code&gt;haveRecord&lt;/code&gt; 메소드를 사용 하여 데이터베이스에 레코드를 동적으로 작성할 수 있습니다 . 그 후 우리는 브라우저를 열고 웹 페이지를 테스트하여 해당 제품을 선택한 후 가격이 올바르게 계산되었는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="470d8d820699eb1c803996a50d88fe6a734dd690" translate="yes" xml:space="preserve">
          <source>To match fields by their labels, you should write a &lt;code&gt;for&lt;/code&gt; attribute in the &lt;code&gt;label&lt;/code&gt; tag.</source>
          <target state="translated">레이블을 기준으로 필드를 일치 시키려면 &lt;code&gt;label&lt;/code&gt; 태그 에 &lt;code&gt;for&lt;/code&gt; 속성을 작성해야합니다 .</target>
        </trans-unit>
        <trans-unit id="33221cfc5f658c97f88c23cd00776d51193438e3" translate="yes" xml:space="preserve">
          <source>To match steps from a feature file to PHP code we use annotation which are added to class methods. By default Codeception expects that all methods marked with &lt;code&gt;@Given&lt;/code&gt;, &lt;code&gt;@When&lt;/code&gt;, &lt;code&gt;@Then&lt;/code&gt; annotation. Each annotation should contain a step string.</source>
          <target state="translated">기능 파일에서 PHP 코드로 단계를 일치시키기 위해 클래스 메소드에 추가 된 주석을 사용합니다. 기본적으로 Codeception은 &lt;code&gt;@Given&lt;/code&gt; , &lt;code&gt;@When&lt;/code&gt; , &lt;code&gt;@Then&lt;/code&gt; 주석으로 표시된 모든 메소드를 예상합니다 . 각 주석에는 단계 문자열이 포함되어야합니다.</target>
        </trans-unit>
        <trans-unit id="9e993c9c65ffa2b5a900d06a772172f2d87c6830" translate="yes" xml:space="preserve">
          <source>To parse SQL Db file, it should follow this specification:</source>
          <target state="translated">SQL Db 파일을 구문 분석하려면 다음 스펙을 따라야합니다.</target>
        </trans-unit>
        <trans-unit id="632d6aa56501a42a690f3b6c811a696daf5918a6" translate="yes" xml:space="preserve">
          <source>To perform Symfony integration you just need to include the Symfony module into your test suite. If you also use Doctrine2, don&amp;rsquo;t forget to include it too. To make the Doctrine2 module connect using the &lt;code&gt;doctrine&lt;/code&gt; service from Symfony, you should specify the Symfony module as a dependency for Doctrine2:</source>
          <target state="translated">Symfony 통합을 수행하려면 Symfony 모듈을 테스트 스위트에 포함시키기 만하면됩니다. Doctrine2도 사용한다면 그것을 포함하는 것을 잊지 마십시오. Symfony 의 &lt;code&gt;doctrine&lt;/code&gt; 서비스를 사용하여 Doctrine2 모듈을 연결하려면 Doctrine2에 대한 종속성으로 Symfony 모듈을 지정해야합니다.</target>
        </trans-unit>
        <trans-unit id="79fe4dcf2ee453f4315d30a265ea7b8dc23e1b86" translate="yes" xml:space="preserve">
          <source>To prepare application and tests to be executed inside containers you will need to use &lt;a href=&quot;https://docs.docker.com/compose/&quot;&gt;Docker Compose&lt;/a&gt; to run multiple containers and connect them together.</source>
          <target state="translated">컨테이너 내에서 실행될 애플리케이션과 테스트를 준비하려면 &lt;a href=&quot;https://docs.docker.com/compose/&quot;&gt;Docker Compose&lt;/a&gt; 를 사용 하여 여러 컨테이너를 실행하고 함께 연결해야합니다.</target>
        </trans-unit>
        <trans-unit id="f0794fb81f886121facfcb48571b3e5a9295580a" translate="yes" xml:space="preserve">
          <source>To proceed you should create Factories helper via &lt;code&gt;generate:helper&lt;/code&gt; command and enable it:</source>
          <target state="translated">계속 진행하려면 &lt;code&gt;generate:helper&lt;/code&gt; 명령을 통해 팩토리 헬퍼를 생성 하고 활성화해야합니다.</target>
        </trans-unit>
        <trans-unit id="0a8d8931a926d8bbd27503164c07b684627a8e5f" translate="yes" xml:space="preserve">
          <source>To provide the same configuration template for your development team, you can create a &lt;code&gt;codeception.dist.yml&lt;/code&gt; config file, which will be loaded before &lt;code&gt;codeception.yml&lt;/code&gt;. The dist config provides shared options, while local &lt;code&gt;codeception.yml&lt;/code&gt; files override them on a per-installation basis. Therefore, &lt;code&gt;codeception.yml&lt;/code&gt; should be ignored by your VCS system.</source>
          <target state="translated">개발 팀에 대해 동일한 구성 템플릿을 제공하기 위해, 당신은 만들 수 있습니다 &lt;code&gt;codeception.dist.yml&lt;/code&gt; 의 전에로드 할 설정 파일, &lt;code&gt;codeception.yml&lt;/code&gt; 을 . dist 구성은 공유 옵션을 제공하는 반면 로컬 &lt;code&gt;codeception.yml&lt;/code&gt; 파일은 설치마다이를 무시합니다. 따라서 &lt;code&gt;codeception.yml&lt;/code&gt; 은 VCS 시스템에서 무시해야합니다.</target>
        </trans-unit>
        <trans-unit id="e84b5eae92294962f94930f73f2f30a9603ff183" translate="yes" xml:space="preserve">
          <source>To receive detailed output, tests can be executed with the &lt;code&gt;--debug&lt;/code&gt; option. You may print any information inside a test using the &lt;code&gt;codecept_debug&lt;/code&gt; function.</source>
          <target state="translated">자세한 출력을 받으려면 &lt;code&gt;--debug&lt;/code&gt; 옵션을 사용하여 테스트를 실행할 수 있습니다 . &lt;code&gt;codecept_debug&lt;/code&gt; 함수를 사용하여 테스트 내부에 정보를 인쇄 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="de461cdaa42bf6f383c2ecbbe3821b8ee2bcbc07" translate="yes" xml:space="preserve">
          <source>To replace method provide it&amp;rsquo;s name as a key in second parameter and it&amp;rsquo;s return value or callback function as parameter</source>
          <target state="translated">메소드를 대체하려면 이름을 두 번째 매개 변수의 키로 제공하고 반환 값 또는 콜백 함수를 매개 변수로 제공하십시오</target>
        </trans-unit>
        <trans-unit id="2eca21f4f82adf77f4ef7642972cfb2c816b445b" translate="yes" xml:space="preserve">
          <source>To replace method provide it&amp;rsquo;s name as a key in third parameter and it&amp;rsquo;s return value or callback function as parameter</source>
          <target state="translated">메소드를 대체하려면 이름을 세 번째 매개 변수의 키로 제공하고 반환 값 또는 콜백 함수를 매개 변수로 제공하십시오</target>
        </trans-unit>
        <trans-unit id="98df62a49987ec4672cfb9a443372304754e7717" translate="yes" xml:space="preserve">
          <source>To run Selenium Server you need &lt;a href=&quot;https://www.java.com/&quot;&gt;Java&lt;/a&gt; as well as Chrome or Firefox browser installed.</source>
          <target state="translated">Selenium Server를 실행하려면 &lt;a href=&quot;https://www.java.com/&quot;&gt;Java&lt;/a&gt; 및 Chrome 또는 Firefox 브라우저가 설치되어 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="798ec5a586cb9bb7ac58ad5d823482c7ddc4fda9" translate="yes" xml:space="preserve">
          <source>To run a specific test only in Chrome browser, you can call &lt;code&gt;_reconfigure&lt;/code&gt; from WebDriver module for a test itself using &lt;code&gt;@prepare&lt;/code&gt;.</source>
          <target state="translated">단지 크롬 브라우저에서 특정 테스트를 실행하려면 호출 할 수 있습니다 &lt;code&gt;_reconfigure&lt;/code&gt; 사용하여 테스트 자체에 대한 WebDriver의 모듈을 &lt;code&gt;@prepare&lt;/code&gt; 을 .</target>
        </trans-unit>
        <trans-unit id="17cc90197cc0e558828a590ee727166639b41b32" translate="yes" xml:space="preserve">
          <source>To run more tests create a public method for each of them. Include &lt;code&gt;AcceptanceTester&lt;/code&gt; object as &lt;code&gt;$I&lt;/code&gt; as a method parameter and use the same &lt;code&gt;$I-&amp;gt;&lt;/code&gt; API you&amp;rsquo;ve seen before. If your tests share common setup actions put them into &lt;code&gt;_before&lt;/code&gt; method.</source>
          <target state="translated">더 많은 테스트를 실행하려면 각 테스트에 대해 공개 메소드를 작성하십시오. 메소드 매개 변수로 &lt;code&gt;AcceptanceTester&lt;/code&gt; 오브젝트를 &lt;code&gt;$I&lt;/code&gt; 로 포함 하고 이전에 본 것과 동일한 &lt;code&gt;$I-&amp;gt;&lt;/code&gt; API를 사용하십시오 . 테스트가 일반적인 설정 동작을 공유하는 경우 &lt;code&gt;_before&lt;/code&gt; 메소드에 넣습니다 .</target>
        </trans-unit>
        <trans-unit id="388606433286bc42fc537e55852b9fdc30fd2182" translate="yes" xml:space="preserve">
          <source>To run tests in Chrome browser you may connect to ChromeDriver directly, without using Selenium Server.</source>
          <target state="translated">Chrome 브라우저에서 테스트를 실행하려면 Selenium 서버를 사용하지 않고 ChromeDriver에 직접 연결할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d3df780f47a1c7783e99d0cf7c23f3a1a9f23da1" translate="yes" xml:space="preserve">
          <source>To run the tests in all 3 browsers, list all the environments:</source>
          <target state="translated">세 가지 브라우저 모두에서 테스트를 실행하려면 모든 환경을 나열하십시오.</target>
        </trans-unit>
        <trans-unit id="bb9f9f83210547a29daaf66a5b1190449765c10b" translate="yes" xml:space="preserve">
          <source>To see all the available options, run the following command:</source>
          <target state="translated">사용 가능한 모든 옵션을 보려면 다음 명령을 실행하십시오.</target>
        </trans-unit>
        <trans-unit id="3607e9e895f6823464f743176d1e56515dc0c407" translate="yes" xml:space="preserve">
          <source>To try commands without running a single test you can launch interactive console:</source>
          <target state="translated">단일 테스트를 실행하지 않고 명령을 시도하려면 대화식 콘솔을 시작할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3e7bad8751f759a85d15c645b386acef9ceb7c99" translate="yes" xml:space="preserve">
          <source>To use Chrome, install &lt;a href=&quot;https://sites.google.com/a/chromium.org/chromedriver/getting-started&quot;&gt;ChromeDriver&lt;/a&gt;. To use Firefox, install &lt;a href=&quot;https://github.com/mozilla/geckodriver&quot;&gt;GeckoDriver&lt;/a&gt;.</source>
          <target state="translated">Chrome을 사용하려면 &lt;a href=&quot;https://sites.google.com/a/chromium.org/chromedriver/getting-started&quot;&gt;ChromeDriver를&lt;/a&gt; 설치 하십시오 . Firefox를 사용하려면 &lt;a href=&quot;https://github.com/mozilla/geckodriver&quot;&gt;GeckoDriver를&lt;/a&gt; 설치 하십시오 .</target>
        </trans-unit>
        <trans-unit id="9c06a377d6b094601a6e07f57dc613cc667689e0" translate="yes" xml:space="preserve">
          <source>To use special chars in Header Key use HTML Character Entities: Example: Header with underscore - &amp;lsquo;Client_Id&amp;rsquo; should be represented as - &amp;lsquo;Client_Id&amp;rsquo; or &amp;lsquo;Client_Id&amp;rsquo;</source>
          <target state="translated">헤더 키에 특수 문자를 사용하려면 HTML 문자 엔티티를 사용하십시오. 예 : 밑줄이있는 헤더- 'Client_Id'는- 'Client_Id'또는 'Client_Id'로 표시해야합니다.</target>
        </trans-unit>
        <trans-unit id="ef117c20e4a675667cac9d0787e1d09be36bdc74" translate="yes" xml:space="preserve">
          <source>To use this module with Composer you need &lt;em&gt;&quot;php-amqplib/php-amqplib&quot;: &quot;~2.4&quot;&lt;/em&gt; package.</source>
          <target state="translated">이 모듈을 Composer와 함께 사용하려면 &lt;em&gt;&quot;php-amqplib / php-amqplib&quot;: &quot;~ 2.4&quot;&lt;/em&gt; 패키지가 필요합니다.</target>
        </trans-unit>
        <trans-unit id="b60bce65685c3347e271f1b66c68750c9a5f06f7" translate="yes" xml:space="preserve">
          <source>Transforms strict locator, \Facebook\WebDriver\WebDriverBy into a string represenation</source>
          <target state="translated">엄격한 로케이터 \ Facebook \ WebDriver \ WebDriverBy를 문자열 표현으로 변환</target>
        </trans-unit>
        <trans-unit id="101f3741d8524f88095e386945c54326e8d904b4" translate="yes" xml:space="preserve">
          <source>Traverses to parent</source>
          <target state="translated">부모에게 순회</target>
        </trans-unit>
        <trans-unit id="6ac3dc47355ca9d12a788e3a61d412eb752cf76e" translate="yes" xml:space="preserve">
          <source>Traverses to parent with $name</source>
          <target state="translated">$ name의 부모에게 순회</target>
        </trans-unit>
        <trans-unit id="b418c6739c7c1ad0864642ef766933e54096f710" translate="yes" xml:space="preserve">
          <source>Travis CI is popular service CI with good GitHub integration. Codeception is self-tested with Travis CI. There nothing special about configuration. Just add to the bottom line of travis configuration:</source>
          <target state="translated">Travis CI는 GitHub 통합이 우수한 인기있는 서비스 CI입니다. 코드 인식은 Travis CI로 자체 테스트되었습니다. 구성에는 특별한 것이 없습니다. travis 구성의 결론에 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="964727c168089a045439cac900375d0f513ace0f" translate="yes" xml:space="preserve">
          <source>Travis doesn&amp;rsquo;t provide visualization for XML or HTML reports so you can&amp;rsquo;t view reports in format any different than console output. However, Codeception produces nice console output with detailed error reports.</source>
          <target state="translated">Travis는 XML 또는 HTML 보고서에 대한 시각화를 제공하지 않으므로 콘솔 출력과 다른 형식으로 보고서를 볼 수 없습니다. 그러나 Codeception은 자세한 오류 보고서와 함께 멋진 콘솔 출력을 생성합니다.</target>
        </trans-unit>
        <trans-unit id="318d69ee32677736aa58edcba1771fdb587d930c" translate="yes" xml:space="preserve">
          <source>TravisCI</source>
          <target state="translated">TravisCI</target>
        </trans-unit>
        <trans-unit id="089b6f034200d1fb8ee514e56def286e46325e79" translate="yes" xml:space="preserve">
          <source>Triggered by</source>
          <target state="translated">발동되다</target>
        </trans-unit>
        <trans-unit id="c41ebe83bed402fa9c25d413dd00b111da4d91d9" translate="yes" xml:space="preserve">
          <source>Try to execute test commands in run-time. You may try commands before writing the test.</source>
          <target state="translated">테스트 명령을 런타임으로 실행하십시오. 테스트를 작성하기 전에 명령을 시도 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0e2d9b0777a485c1276de0803c12a7d76fbc5c39" translate="yes" xml:space="preserve">
          <source>URL</source>
          <target state="translated">URL</target>
        </trans-unit>
        <trans-unit id="c12db084084adfb30a4cae99ab64377dce6931a7" translate="yes" xml:space="preserve">
          <source>Ubiquitous Language</source>
          <target state="translated">유비쿼터스 언어</target>
        </trans-unit>
        <trans-unit id="8e802de522ed181b680166c0cf2b1bfb340ea46e" translate="yes" xml:space="preserve">
          <source>Unit &amp;amp; Integration Tests</source>
          <target state="translated">단위 및 통합 테스트</target>
        </trans-unit>
        <trans-unit id="438d23452047f4defac8e18aecae37372fcea335" translate="yes" xml:space="preserve">
          <source>Unit Testing</source>
          <target state="translated">단위 테스트</target>
        </trans-unit>
        <trans-unit id="55319d93decd49524c6577ad2944aab8499b8def" translate="yes" xml:space="preserve">
          <source>Unit Tests</source>
          <target state="translated">단위 테스트</target>
        </trans-unit>
        <trans-unit id="69c9113ad75da6e23f23a276dff26e75c7de4dc5" translate="yes" xml:space="preserve">
          <source>Unit tests</source>
          <target state="translated">단위 테스트</target>
        </trans-unit>
        <trans-unit id="093a6f59d989ca219c6df29d2f717dc0911e257a" translate="yes" xml:space="preserve">
          <source>Unit tests are focused around a single component of an application. All external dependencies for components should be replaced with test doubles.</source>
          <target state="translated">단위 테스트는 응용 프로그램의 단일 구성 요소에 중점을 둡니다. 구성 요소에 대한 모든 외부 종속성은 테스트 복식으로 대체해야합니다.</target>
        </trans-unit>
        <trans-unit id="79d8ccf694b57cc40db97182ed89c3723fa178fc" translate="yes" xml:space="preserve">
          <source>Unlike unit tests integration tests doesn&amp;rsquo;t require the code to be executed in isolation. That allows us to use database and other components inside a tests. To improve the testing experience modules can be used as in functional testing.</source>
          <target state="translated">단위 테스트와 달리 통합 테스트는 코드를 분리하여 실행할 필요가 없습니다. 이를 통해 테스트 내에서 데이터베이스 및 기타 구성 요소를 사용할 수 있습니다. 테스트 경험을 향상시키기 위해 기능 테스트에서와 같이 모듈을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1c4bd6b731511260187edb0ff454a6385cdfb786" translate="yes" xml:space="preserve">
          <source>Unselect an option in the given select box.</source>
          <target state="translated">주어진 선택 상자에서 옵션을 선택 취소하십시오.</target>
        </trans-unit>
        <trans-unit id="7c481ebe53fffafd89d12a9c690edf2fd7fa1529" translate="yes" xml:space="preserve">
          <source>Unsets cookie with the given name. You can set additional cookie params like &lt;code&gt;domain&lt;/code&gt;, &lt;code&gt;path&lt;/code&gt; in array passed as last argument.</source>
          <target state="translated">주어진 이름으로 쿠키를 설정 해제합니다. &lt;code&gt;domain&lt;/code&gt; , 마지막 인수로 전달 된 배열의 &lt;code&gt;path&lt;/code&gt; 와 같은 추가 쿠키 매개 변수를 설정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="ed417b7548a070c53e2447ebd3a2c62b605cbc2c" translate="yes" xml:space="preserve">
          <source>Unticks a checkbox.</source>
          <target state="translated">확인란을 선택 취소합니다.</target>
        </trans-unit>
        <trans-unit id="d961c1bff4cf85c6a8926638334035036c37cedf" translate="yes" xml:space="preserve">
          <source>Update an SQL record into a database.</source>
          <target state="translated">SQL 레코드를 데이터베이스로 업데이트하십시오.</target>
        </trans-unit>
        <trans-unit id="0afb34e6814e67d2abbef01e654b09e4ca91b72d" translate="yes" xml:space="preserve">
          <source>Uri of currently opened page.</source>
          <target state="translated">현재 열린 페이지의 Uri</target>
        </trans-unit>
        <trans-unit id="0bb18642b70b9f8a9c12ccf39487328f306b8e19" translate="yes" xml:space="preserve">
          <source>Usage</source>
          <target state="translated">Usage</target>
        </trans-unit>
        <trans-unit id="fec43ce445f974147bd0eb223a50147e7fb7202d" translate="yes" xml:space="preserve">
          <source>Usage example:</source>
          <target state="translated">사용 예 :</target>
        </trans-unit>
        <trans-unit id="2c0479bd4e810153542fd7b994858839c8e3b6a3" translate="yes" xml:space="preserve">
          <source>Usage of &lt;code&gt;-use-vendor-bin&lt;/code&gt; is optional. This option will work for most Codeception projects, where Codeception is located in your &lt;code&gt;vendor/bin&lt;/code&gt; folder. But in case you are using a global Codeception installation for example, you wouldn&amp;rsquo;t use this option.</source>
          <target state="translated">의 사용 &lt;code&gt;-use-vendor-bin&lt;/code&gt; 선택 사항입니다. 이 옵션은 Codeception이 &lt;code&gt;vendor/bin&lt;/code&gt; 폴더 에있는 대부분의 Codeception 프로젝트에서 작동 합니다. 그러나 예를 들어 전역 Codeception 설치를 사용하는 경우이 옵션을 사용하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="861a0e430ffac5e4ae6e11b7a947f2c32d388cf4" translate="yes" xml:space="preserve">
          <source>Usage:</source>
          <target state="translated">Usage:</target>
        </trans-unit>
        <trans-unit id="64c1b824ca2650767bd47c3981870317f3986b9d" translate="yes" xml:space="preserve">
          <source>Use 3rd parameter to pass in custom &lt;code&gt;OutputInterface&lt;/code&gt;</source>
          <target state="translated">세 번째 매개 변수를 사용하여 사용자 정의 &lt;code&gt;OutputInterface&lt;/code&gt; 를 전달하십시오.</target>
        </trans-unit>
        <trans-unit id="ea76dd730931b0d28b89e1879d0ff390c608aed5" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;06-modulesandhelpers#Dynamic-Configuration-With-Params&quot;&gt;module parameters&lt;/a&gt; to set the database credentials from environment variables or from application configuration files.</source>
          <target state="translated">사용 &lt;a href=&quot;06-modulesandhelpers#Dynamic-Configuration-With-Params&quot;&gt;모듈 매개 변수를&lt;/a&gt; 환경 변수 또는 응용 프로그램 구성 파일에서 데이터베이스 자격 증명을 설정합니다.</target>
        </trans-unit>
        <trans-unit id="8f17ad0a09d5bd4e7ede03bbab7690f19923257b" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;https://github.com/Codeception/Codeception/tree/2.4/src/Codeception/Lib/Generator&quot;&gt;Codeception generators&lt;/a&gt; to create other support classes.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/Codeception/Codeception/tree/2.4/src/Codeception/Lib/Generator&quot;&gt;Codeception 생성기&lt;/a&gt; 를 사용하여 다른 지원 클래스를 작성 하십시오 .</target>
        </trans-unit>
        <trans-unit id="7f5fd178280c408178b73de22118aeb3247946b9" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;modules/zf2&quot;&gt;the ZF2 module&lt;/a&gt; to run functional tests inside Zend Framework 2:</source>
          <target state="translated">&lt;a href=&quot;modules/zf2&quot;&gt;ZF2 모듈&lt;/a&gt; 을 사용 하여 Zend Framework 2 내에서 기능 테스트를 실행 하십시오 .</target>
        </trans-unit>
        <trans-unit id="97827f3f50242ca9ae282f3fd03834d57add2d26" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;createDirectoryFor&lt;/code&gt;, &lt;code&gt;createEmptyDirectory&lt;/code&gt; methods to create directories</source>
          <target state="translated">사용 &lt;code&gt;createDirectoryFor&lt;/code&gt; 는 , &lt;code&gt;createEmptyDirectory&lt;/code&gt; 방법은 디렉토리를 작성합니다</target>
        </trans-unit>
        <trans-unit id="c09e353912b0029ce897a5e31497b33ba357ee8c" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;createHelper&lt;/code&gt;, &lt;code&gt;createActor&lt;/code&gt; methods to create helpers and actors.</source>
          <target state="translated">사용 &lt;code&gt;createHelper&lt;/code&gt; 는 , &lt;code&gt;createActor&lt;/code&gt; 의 방법은 헬퍼와 배우를 만들 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7843ecea53860c09514a940d6c48bf5554801a89" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;sendSoapRequest&lt;/code&gt; method to define the body of your request.</source>
          <target state="translated">사용 &lt;code&gt;sendSoapRequest&lt;/code&gt; 의 방법은 요청의 본문을 정의합니다.</target>
        </trans-unit>
        <trans-unit id="b218af2f5bb8c27317a38e525e728eb392c4e6a1" translate="yes" xml:space="preserve">
          <source>Use Laravel&amp;rsquo;s model factory to create a model. Can only be used with Laravel 5.1 and later.</source>
          <target state="translated">Laravel의 모델 팩토리를 사용하여 모델을 작성하십시오. Laravel 5.1 이상에서만 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7b12d404c7eeab51ca99fd927956583228852621" translate="yes" xml:space="preserve">
          <source>Use Laravel&amp;rsquo;s model factory to create multiple models. Can only be used with Laravel 5.1 and later.</source>
          <target state="translated">Laravel의 모델 팩토리를 사용하여 여러 모델을 작성하십시오. Laravel 5.1 이상에서만 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="342d185470b1587e8cf4b294b51d8780265e8329" translate="yes" xml:space="preserve">
          <source>Use Laravel&amp;rsquo;s model factory to create multiple models. Can only be used with Lumen 5.1 and later.</source>
          <target state="translated">Laravel의 모델 팩토리를 사용하여 여러 모델을 작성하십시오. Lumen 5.1 이상에서만 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ebf0625a741ab3e73c9ba5178a08a97036353639" translate="yes" xml:space="preserve">
          <source>Use Laravel&amp;rsquo;s model factory to make a model instance. Can only be used with Laravel 5.1 and later.</source>
          <target state="translated">Laravel의 모델 팩토리를 사용하여 모델 인스턴스를 만듭니다. Laravel 5.1 이상에서만 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="73f275b2b14d20bd2b3109f98b2e23e597f5748e" translate="yes" xml:space="preserve">
          <source>Use Laravel&amp;rsquo;s model factory to make multiple model instances. Can only be used with Laravel 5.1 and later.</source>
          <target state="translated">Laravel의 모델 팩토리를 사용하여 여러 모델 인스턴스를 만듭니다. Laravel 5.1 이상에서만 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="015b34f64fae6e607e867f495c0744b3f30b9f13" translate="yes" xml:space="preserve">
          <source>Use Laravel&amp;rsquo;s model factory to make multiple model instances. Can only be used with Lumen 5.1 and later.</source>
          <target state="translated">Laravel의 모델 팩토리를 사용하여 여러 모델 인스턴스를 만듭니다. Lumen 5.1 이상에서만 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0465b0c50dfe6c7d8972a5b914a263aa279bab36" translate="yes" xml:space="preserve">
          <source>Use Lumen&amp;rsquo;s model factory to create a model. Can only be used with Lumen 5.1 and later.</source>
          <target state="translated">Lumen의 모델 팩토리를 사용하여 모델을 작성하십시오. Lumen 5.1 이상에서만 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ccb60369b26233d201b8e50d5332338571574b9b" translate="yes" xml:space="preserve">
          <source>Use Lumen&amp;rsquo;s model factory to make a model instance. Can only be used with Lumen 5.1 and later.</source>
          <target state="translated">루멘의 모델 팩토리를 사용하여 모델 인스턴스를 만듭니다. Lumen 5.1 이상에서만 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="339889acfb48328c8fe4fdfa480caa4a7402239d" translate="yes" xml:space="preserve">
          <source>Use `\Codeception\Util\Xml::build()` to create XmlBuilder instance.</source>
          <target state="translated">`\ Codeception \ Util \ Xml :: build ()`를 사용하여 XmlBuilder 인스턴스를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="6c46596bf9954744ffd424fc4503dca0baf68d9f" translate="yes" xml:space="preserve">
          <source>Use it in Helpers or GroupObject or Extension classes:</source>
          <target state="translated">도우미, GroupObject 또는 확장 클래스에서 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="4a2f73c017ebeda5cf163c6db1b1432ffe00ac2b" translate="yes" xml:space="preserve">
          <source>Use methods like &lt;code&gt;say&lt;/code&gt;, &lt;code&gt;saySuccess&lt;/code&gt;, &lt;code&gt;sayWarning&lt;/code&gt;, &lt;code&gt;sayError&lt;/code&gt;, &lt;code&gt;ask&lt;/code&gt;, to interact with a user.</source>
          <target state="translated">&lt;code&gt;say&lt;/code&gt; , &lt;code&gt;saySuccess&lt;/code&gt; , &lt;code&gt;sayWarning&lt;/code&gt; , &lt;code&gt;sayError&lt;/code&gt; , &lt;code&gt;ask&lt;/code&gt; 와 같은 메소드를 사용 하여 사용자와 상호 작용하십시오.</target>
        </trans-unit>
        <trans-unit id="26a207af94a6c3abe22a94cf6c19c79623319aaf" translate="yes" xml:space="preserve">
          <source>Use the &lt;code&gt;params&lt;/code&gt; section of the global configuration file &lt;code&gt;codeception.yml&lt;/code&gt; to specify how to load them. You can specify several sources for parameters to be loaded from.</source>
          <target state="translated">글로벌 구성 파일 &lt;code&gt;codeception.yml&lt;/code&gt; 의 &lt;code&gt;params&lt;/code&gt; 섹션을 사용하여 로드 방법을 지정하십시오. 매개 변수를로드 할 소스를 여러 개 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="eabbc525e5028e36507476d1373362514ff3dc71" translate="yes" xml:space="preserve">
          <source>Use the below configuration to allow coverage mergers.</source>
          <target state="translated">커버리지 병합을 허용하려면 아래 구성을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="ce04b8cde9b8e2a386af3e1bb65f290f61fe8f2e" translate="yes" xml:space="preserve">
          <source>Use this method to check XML of valid structure is returned. This method does not use schema for validation. This method does not require path from root to match the structure.</source>
          <target state="translated">이 메소드를 사용하여 유효한 구조의 XML이 리턴되는지 확인하십시오. 이 방법은 유효성 검사에 스키마를 사용하지 않습니다. 이 방법은 구조와 일치하기 위해 루트에서 경로가 필요하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="3d0af43ff9579e2a10e4c820b5944b13fef975aa" translate="yes" xml:space="preserve">
          <source>Use to perform web acceptance tests with non-javascript browser.</source>
          <target state="translated">자바 스크립트가 아닌 브라우저로 웹 승인 테스트를 수행하는 데 사용합니다.</target>
        </trans-unit>
        <trans-unit id="9d2950f71f19352163cf1fc111135a72c362c73e" translate="yes" xml:space="preserve">
          <source>Uses &lt;a href=&quot;http://guzzlephp.org/&quot;&gt;Guzzle&lt;/a&gt; to interact with your application over CURL. Module works over CURL and requires &lt;strong&gt;PHP CURL extension&lt;/strong&gt; to be enabled.</source>
          <target state="translated">&lt;a href=&quot;http://guzzlephp.org/&quot;&gt;Guzzle&lt;/a&gt; 을 사용 하여 CURL을 통해 응용 프로그램과 상호 작용합니다. 모듈은 CURL을 통해 작동하며 &lt;strong&gt;PHP CURL 확장&lt;/strong&gt; 을 활성화해야합니다.</target>
        </trans-unit>
        <trans-unit id="49a17468af0c2fc4b98867473ab4de4a50c232b6" translate="yes" xml:space="preserve">
          <source>Uses &lt;code&gt;config/container.php&lt;/code&gt; file by default.</source>
          <target state="translated">기본적으로 &lt;code&gt;config/container.php&lt;/code&gt; 파일을 사용합니다 .</target>
        </trans-unit>
        <trans-unit id="53604b949befccb2ce697597647fae371aefdae5" translate="yes" xml:space="preserve">
          <source>Using Codeception Docker image</source>
          <target state="translated">Codeception Docker 이미지 사용</target>
        </trans-unit>
        <trans-unit id="a82c49537bdd8af32ececbfce0d931d4c7952545" translate="yes" xml:space="preserve">
          <source>Using Inside Framework</source>
          <target state="translated">내부 프레임 워크 사용</target>
        </trans-unit>
        <trans-unit id="8b74d8a06cce7b65888ba4e8c7818fe0688bd9a8" translate="yes" xml:space="preserve">
          <source>Using Modules</source>
          <target state="translated">모듈 사용</target>
        </trans-unit>
        <trans-unit id="edd561d8b75ac9103b45a7fea602ea861769b973" translate="yes" xml:space="preserve">
          <source>Using id param inside prefix:</source>
          <target state="translated">접두사 안에 id param 사용하기 :</target>
        </trans-unit>
        <trans-unit id="9fd56293bce41aa2f336f882b719322f97000fa9" translate="yes" xml:space="preserve">
          <source>Using regular expressions, you can even run many different test methods from the same directory or class. For example, this will execute all acceptance tests from the &lt;code&gt;backend&lt;/code&gt; dir beginning with the word &amp;ldquo;login&amp;rdquo;:</source>
          <target state="translated">정규식을 사용하면 동일한 디렉토리 또는 클래스에서 다양한 테스트 방법을 실행할 수도 있습니다. 예를 들어 &quot;login&quot;이라는 단어로 시작 하는 &lt;code&gt;backend&lt;/code&gt; 디렉토리 에서 모든 승인 테스트를 실행합니다 .</target>
        </trans-unit>
        <trans-unit id="0d8f0980bee57007ff331ed1717e3eafde48959f" translate="yes" xml:space="preserve">
          <source>Usually, as soon as any assertion fails, further assertions of this test will be skipped. Sometimes you don&amp;rsquo;t want this - maybe you have a long-running test and you want it to run to the end. In this case, you can use conditional assertions. Each &lt;code&gt;see&lt;/code&gt; method has a corresponding &lt;code&gt;canSee&lt;/code&gt; method, and &lt;code&gt;dontSee&lt;/code&gt; has a &lt;code&gt;cantSee&lt;/code&gt; method:</source>
          <target state="translated">일반적으로 어설 션이 실패하면이 테스트의 추가 어설 션은 건너 뜁니다. 때때로 당신은 이것을 원하지 않습니다-아마도 당신은 오래 실행되는 테스트를 가지고 있고 당신이 그것을 끝까지 실행하기를 원할 것입니다. 이 경우 조건부 어설 션을 사용할 수 있습니다. 각 &lt;code&gt;see&lt;/code&gt; 메소드에는 해당 &lt;code&gt;canSee&lt;/code&gt; 메소드가 있으며 &lt;code&gt;dontSee&lt;/code&gt; 에는 &lt;code&gt;cantSee&lt;/code&gt; 메소드가 있습니다.</target>
        </trans-unit>
        <trans-unit id="2b3847359f8c907cdc41efd5dd7b2019aeffe9ae" translate="yes" xml:space="preserve">
          <source>Util Class: Autoload</source>
          <target state="translated">이용 클래스 : 자동로드</target>
        </trans-unit>
        <trans-unit id="1efa2bcc7a492c0e99c457748e377ea1cf59ed38" translate="yes" xml:space="preserve">
          <source>Util Class: Fixtures</source>
          <target state="translated">이용 클래스 : 비품</target>
        </trans-unit>
        <trans-unit id="557be4d90699fd937e7e6b156960541daec7b455" translate="yes" xml:space="preserve">
          <source>Util Class: HttpCode</source>
          <target state="translated">이용 클래스 : HttpCode</target>
        </trans-unit>
        <trans-unit id="66be33d34c9b2b0749977134996bfbcf1e44cea3" translate="yes" xml:space="preserve">
          <source>Util Class: JsonType</source>
          <target state="translated">이용 클래스 : JsonType</target>
        </trans-unit>
        <trans-unit id="42286bd888541d407d94f8dc5165f0680e083244" translate="yes" xml:space="preserve">
          <source>Util Class: Locator</source>
          <target state="translated">이용 클래스 : 로케이터</target>
        </trans-unit>
        <trans-unit id="8f89904bb314cd5d8d0f309a1c3307ebe92ad86c" translate="yes" xml:space="preserve">
          <source>Util Class: XmlBuilder</source>
          <target state="translated">이용 클래스 : XmlBuilder</target>
        </trans-unit>
        <trans-unit id="a9495c1eb40c0d8ee262c68c204eefb2c15744a2" translate="yes" xml:space="preserve">
          <source>Validate JSON structures</source>
          <target state="translated">JSON 구조 확인</target>
        </trans-unit>
        <trans-unit id="8bb82da3a52d668c56c1f544fe8b2a816d883e4b" translate="yes" xml:space="preserve">
          <source>Validates and prints Codeception config. Use it do debug Yaml configs</source>
          <target state="translated">Codeception 구성을 확인하고 인쇄합니다. Yaml 구성을 디버그하는 데 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="b9ee614409f809fdd0214192be30356291c015c9" translate="yes" xml:space="preserve">
          <source>Validates current config for required fields and required packages.</source>
          <target state="translated">필수 필드 및 필수 패키지에 대한 현재 구성의 유효성을 검증하십시오.</target>
        </trans-unit>
        <trans-unit id="172c0b33f1a892e80af1523ad3f16ab63c0bbb75" translate="yes" xml:space="preserve">
          <source>Variable names are being taken from config and DSN which has a &lt;code&gt;keyword=value&lt;/code&gt; format, so you should expect to have a variable named as the keyword with the full value inside it.</source>
          <target state="translated">변수 이름은 &lt;code&gt;keyword=value&lt;/code&gt; 형식 을 가진 config 및 DSN에서 가져 오므 로 전체 값을 가진 키워드로 이름이 지정된 변수가 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="42a926a04a5ee86f7e230a7e3a6330aa4f0dbe5f" translate="yes" xml:space="preserve">
          <source>Verbosity modes:</source>
          <target state="translated">상세 모드 :</target>
        </trans-unit>
        <trans-unit id="34dbd5c4c8a64801891d960b57133767c3104fe7" translate="yes" xml:space="preserve">
          <source>Wait</source>
          <target state="translated">Wait</target>
        </trans-unit>
        <trans-unit id="2b5b11e8530c71484f706e91f77fbd5465fc7b0c" translate="yes" xml:space="preserve">
          <source>Wait and Act</source>
          <target state="translated">기다려 행동</target>
        </trans-unit>
        <trans-unit id="9b83705efd4960cd9723d3f58a955ea8e6255767" translate="yes" xml:space="preserve">
          <source>Wait for $timeout seconds.</source>
          <target state="translated">$ timeout 초 동안 기다립니다.</target>
        </trans-unit>
        <trans-unit id="d4acd5d8867fc97d7a5c138d0b0eed4100c8a330" translate="yes" xml:space="preserve">
          <source>Waits for element and runs a sequence of actions inside its context. Actions can be defined with array, callback, or &lt;code&gt;Codeception\Util\ActionSequence&lt;/code&gt; instance.</source>
          <target state="translated">요소를 기다리고 컨텍스트 내에서 일련의 조치를 실행합니다. 액션은 배열, 콜백 또는 &lt;code&gt;Codeception\Util\ActionSequence&lt;/code&gt; 인스턴스 로 정의 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="052ce80219d5e5d1863b7e16a0e5b24faf1628db" translate="yes" xml:space="preserve">
          <source>Waits up to $timeout seconds for an element to appear on the page. If the element doesn&amp;rsquo;t appear, a timeout exception is thrown.</source>
          <target state="translated">요소가 페이지에 나타날 때까지 최대 $ timeout 초 동안 기다립니다. 요소가 나타나지 않으면 시간 초과 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="7166b40763dcca7df03b806ec68de9862470f667" translate="yes" xml:space="preserve">
          <source>Waits up to $timeout seconds for the given element to be clickable. If element doesn&amp;rsquo;t become clickable, a timeout exception is thrown.</source>
          <target state="translated">지정된 요소를 클릭 할 수있을 때까지 최대 $ timeout 초 동안 기다립니다. 요소를 클릭 할 수 없으면 시간 초과 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="a75b7f53ad4c0021f596671919a05566cafab59c" translate="yes" xml:space="preserve">
          <source>Waits up to $timeout seconds for the given element to be visible on the page. If element doesn&amp;rsquo;t appear, a timeout exception is thrown.</source>
          <target state="translated">주어진 요소가 페이지에 표시 될 때까지 최대 $ timeout 초 동안 대기합니다. 요소가 나타나지 않으면 시간 초과 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="7ea81dc72a0289cac2d92c622bc6e5447009f3eb" translate="yes" xml:space="preserve">
          <source>Waits up to $timeout seconds for the given element to become invisible. If element stays visible, a timeout exception is thrown.</source>
          <target state="translated">주어진 요소가 보이지 않을 때까지 최대 $ timeout 초 동안 기다립니다. 요소가 계속 표시되면 시간 초과 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="638800b34a2aa2c22d25bda1b9d9d287712a8b2b" translate="yes" xml:space="preserve">
          <source>Waits up to $timeout seconds for the given element to change. Element &amp;ldquo;change&amp;rdquo; is determined by a callback function which is called repeatedly until the return value evaluates to true.</source>
          <target state="translated">주어진 요소가 변경 될 때까지 최대 $ timeout 초를 기다립니다. 요소 &quot;change&quot;는 반환 값이 true로 평가 될 때까지 반복적으로 호출되는 콜백 함수에 의해 결정됩니다.</target>
        </trans-unit>
        <trans-unit id="4522e2bf6c2b32c62e65115a165edc86fd643338" translate="yes" xml:space="preserve">
          <source>Waits up to $timeout seconds for the given string to appear on the page.</source>
          <target state="translated">주어진 문자열이 페이지에 나타날 때까지 최대 $ timeout 초 동안 기다립니다.</target>
        </trans-unit>
        <trans-unit id="746f1a7e0c9a5843efa70bf48435ef8cc9ecbe40" translate="yes" xml:space="preserve">
          <source>We also have other useful commands to perform checks. Please note that they all start with the &lt;code&gt;see&lt;/code&gt; prefix:</source>
          <target state="translated">검사를 수행하는 다른 유용한 명령도 있습니다. 그것들은 모두 &lt;code&gt;see&lt;/code&gt; 접두사로 시작 합니다.</target>
        </trans-unit>
        <trans-unit id="08a4e6b1466883421ce109dcac434f4dd6c747b9" translate="yes" xml:space="preserve">
          <source>We are using &lt;code&gt;Codeception\Util\Xml&lt;/code&gt; class which allows us to build XML structures in a clean manner. The &lt;code&gt;toXml&lt;/code&gt; method may accept a string or array and returns \DOMDocument instance. If your XML contains attributes and so can&amp;rsquo;t be represented as a PHP array you can create XML using the &lt;a href=&quot;reference/xmlbuilder&quot;&gt;XmlBuilder&lt;/a&gt; class. We will take a look at it a bit more in next section.</source>
          <target state="translated">우리가 사용하는 &lt;code&gt;Codeception\Util\Xml&lt;/code&gt; 우리가 깨끗한 방식으로 XML 구조를 구축 할 수 있도록 클래스를. &lt;code&gt;toXml&lt;/code&gt; 방법은 문자열이나 배열을 반환 \ DOMDocument를 인스턴스를 수용 할 수있다. XML에 속성이 포함되어 있고 PHP 배열로 표현할 수없는 경우 &lt;a href=&quot;reference/xmlbuilder&quot;&gt;XmlBuilder&lt;/a&gt; 클래스를 사용하여 XML을 만들 수 있습니다 . 다음 섹션에서 좀 더 살펴 보겠습니다.</target>
        </trans-unit>
        <trans-unit id="b8d0a302cb7dfcf3c10f18822cf57ad1698f6bb5" translate="yes" xml:space="preserve">
          <source>We can click links to open web pages:</source>
          <target state="translated">웹 페이지를 열려면 링크를 클릭하십시오.</target>
        </trans-unit>
        <trans-unit id="ecaf768c6d4fc9557d651a87e8eaaa21e650dd3e" translate="yes" xml:space="preserve">
          <source>We can define different databases for different processes. This can be done using &lt;a href=&quot;07-advancedusage#Environments&quot;&gt;Environments&lt;/a&gt;. Let&amp;rsquo;s define 5 new environments in &lt;code&gt;acceptance.suite.yml&lt;/code&gt;:</source>
          <target state="translated">프로세스마다 다른 데이터베이스를 정의 할 수 있습니다. &lt;a href=&quot;07-advancedusage#Environments&quot;&gt;환경을&lt;/a&gt; 사용하여 수행 할 수 있습니다 . 의는 5 새로운 환경을 정의 할 수 &lt;code&gt;acceptance.suite.yml&lt;/code&gt; 를 :</target>
        </trans-unit>
        <trans-unit id="7e85f65f65e534f3089143c188e991fea85242eb" translate="yes" xml:space="preserve">
          <source>We can dry-run (or run) our feature file to see that Given/When/Then are expanded with substeps:</source>
          <target state="translated">Given / When / Then이 하위 단계로 확장되었는지 확인하기 위해 기능 파일을 드라 이런 (또는 실행) 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b35049e326c23be497c8e28700899bfc4cb92b0d" translate="yes" xml:space="preserve">
          <source>We can submit forms as well:</source>
          <target state="translated">양식도 제출할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="066fa4ab7752275e2612f8301d16d5c6662650d0" translate="yes" xml:space="preserve">
          <source>We can test this scenario by executing it in dry-run mode. In this mode test won&amp;rsquo;t be executed (actually, we didn&amp;rsquo;t define any step for it, so it won&amp;rsquo;t be executed in any case).</source>
          <target state="translated">드라 이런 모드에서이 시나리오를 실행하여 테스트 할 수 있습니다. 이 모드에서는 테스트가 실행되지 않습니다 (실제로 어떤 단계도 정의하지 않았으므로 어떤 경우에도 실행되지 않습니다).</target>
        </trans-unit>
        <trans-unit id="ef0a8409eb1de1caec49d10c582cb0298eb47036" translate="yes" xml:space="preserve">
          <source>We can try to write such simple story:</source>
          <target state="translated">우리는 다음과 같은 간단한 이야기를 쓸 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="25000bbf6ae0063dcc6aabfc7ecea74c2f32dd44" translate="yes" xml:space="preserve">
          <source>We can use HTTP code constants from &lt;code&gt;Codeception\Util\HttpCode&lt;/code&gt; instead of numeric values to check response code in &lt;code&gt;seeResponseCodeIs&lt;/code&gt; and &lt;code&gt;dontSeeResponseCodeIs&lt;/code&gt; methods.</source>
          <target state="translated">숫자 값 대신 &lt;code&gt;Codeception\Util\HttpCode&lt;/code&gt; HTTP 코드 상수를 사용 하여 &lt;code&gt;seeResponseCodeIs&lt;/code&gt; 및 &lt;code&gt;dontSeeResponseCodeIs&lt;/code&gt; 메소드의 응답 코드를 확인할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2460b44966389092f2bd975a1d07a0525c60cd19" translate="yes" xml:space="preserve">
          <source>We have &lt;code&gt;_before&lt;/code&gt; and &lt;code&gt;_after&lt;/code&gt; methods to run some common actions before and after a test. And we have a placeholder action &lt;code&gt;tryToTest&lt;/code&gt; which we need to implement. If we try to test a signin process it&amp;rsquo;s a good start to test a successful signin. Let&amp;rsquo;s rename this method to &lt;code&gt;signInSuccessfully&lt;/code&gt;.</source>
          <target state="translated">우리는이 &lt;code&gt;_before&lt;/code&gt; 및 &lt;code&gt;_after&lt;/code&gt; 전 테스트 후 몇 가지 일반적인 작업을 실행하는 방법을. 그리고 구현해야하는 자리 표시 자 작업 &lt;code&gt;tryToTest&lt;/code&gt; 가 있습니다. 로그인 프로세스를 테스트하려고하면 성공적인 로그인을 테스트하는 것이 좋습니다. 이 메소드의 이름을 &lt;code&gt;signInSuccessfully&lt;/code&gt; 로 바꾸자 .</target>
        </trans-unit>
        <trans-unit id="015400e5ef6f87e5cb4bd1c52ec09af1e7d3704e" translate="yes" xml:space="preserve">
          <source>We have already demonstrated this in a previous example where we accessed the Entity Manager from a Doctrine2 module:</source>
          <target state="translated">우리는 Doctrine2 모듈에서 Entity Manager에 액세스 한 이전 예제에서 이미 이것을 증명했습니다.</target>
        </trans-unit>
        <trans-unit id="228bf32f37a287c9d1fec382bb668954ac560904" translate="yes" xml:space="preserve">
          <source>We have taken a look into the Codeception structure. Most of the things you need were already generated by the &lt;code&gt;bootstrap&lt;/code&gt; command. After you have reviewed the basic concepts and configurations, you can start writing your first scenario.</source>
          <target state="translated">Codeception 구조를 살펴 보았습니다. 필요한 것의 대부분은 이미 &lt;code&gt;bootstrap&lt;/code&gt; 명령으로 생성되었습니다 . 기본 개념 및 구성을 검토 한 후 첫 번째 시나리오 작성을 시작할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="335e28c45160c43b5710d51a34a79750d36189b4" translate="yes" xml:space="preserve">
          <source>We included the Laravel5 module the same way we did for functional testing. Let&amp;rsquo;s see how we can use it for integration tests:</source>
          <target state="translated">기능 테스트와 동일한 방식으로 Laravel5 모듈을 포함 시켰습니다. 통합 테스트에 어떻게 사용할 수 있는지 보자.</target>
        </trans-unit>
        <trans-unit id="95a235ca436c2bbb3678abb93635f3fdefcc5021" translate="yes" xml:space="preserve">
          <source>We need to add some new lines to &lt;code&gt;acceptance.suite.yml&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;acceptance.suite.yml&lt;/code&gt; 새로운 줄을 추가해야합니다 .</target>
        </trans-unit>
        <trans-unit id="851c8ee512612a9b7a90b1fcc84ab03f47ba7d91" translate="yes" xml:space="preserve">
          <source>We need to define build steps. The most simple setup may look like this:</source>
          <target state="translated">빌드 단계를 정의해야합니다. 가장 간단한 설정은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="c6a434b7a6c5e1d2283f47e5c2af8f92734ef731" translate="yes" xml:space="preserve">
          <source>We need to specify the &lt;code&gt;url&lt;/code&gt; parameter in the acceptance suite config:</source>
          <target state="translated">수용 스위트 구성에서 &lt;code&gt;url&lt;/code&gt; 매개 변수 를 지정해야합니다 .</target>
        </trans-unit>
        <trans-unit id="9f791ef4254ae107df656e2433ecd82a612e4b1a" translate="yes" xml:space="preserve">
          <source>We prepared a sample config with codeception, web server, database, and selenium with Chrome to be executed together.</source>
          <target state="translated">우리는 함께 실행할 Codeception, 웹 서버, 데이터베이스 및 셀레늄이 포함 된 샘플 구성을 준비했습니다.</target>
        </trans-unit>
        <trans-unit id="4899b6be6f25a9d1e4c9bbae4264a5bcf05a33f7" translate="yes" xml:space="preserve">
          <source>We propose to perform those steps using a task runner. In this guide we will use &lt;a href=&quot;http://robo.li&quot;&gt;&lt;strong&gt;Robo&lt;/strong&gt;&lt;/a&gt; task runner. It is a modern PHP task runner that is very easy to use. It uses &lt;a href=&quot;https://symfony.com/doc/current/components/process.html&quot;&gt;Symfony Process&lt;/a&gt; to spawn background and parallel processes. Just what we need for the step 2! What about steps 1 and 3? We have created robo &lt;a href=&quot;https://github.com/Codeception/robo-paracept&quot;&gt;tasks&lt;/a&gt; for splitting tests into groups and merging resulting JUnit XML reports.</source>
          <target state="translated">작업 러너를 사용하여 이러한 단계를 수행 할 것을 제안합니다. 이 가이드에서는 &lt;a href=&quot;http://robo.li&quot;&gt;&lt;strong&gt;Robo&lt;/strong&gt;&lt;/a&gt; 작업 러너를 사용합니다. 사용하기 쉬운 최신 PHP 작업 러너입니다. &lt;a href=&quot;https://symfony.com/doc/current/components/process.html&quot;&gt;Symfony Process&lt;/a&gt; 를 사용 하여 백그라운드 및 병렬 프로세스 를 생성합니다. 2 단계에 필요한 것! 1 단계와 3 단계는 어떻습니까? 테스트를 그룹으로 나누고 결과 JUnit XML 보고서를 병합하기위한 robo &lt;a href=&quot;https://github.com/Codeception/robo-paracept&quot;&gt;태스크&lt;/a&gt; 를 작성했습니다.</target>
        </trans-unit>
        <trans-unit id="021ed2ff3be23aafe143a76f36569602110dc6f0" translate="yes" xml:space="preserve">
          <source>We recommend using &lt;a href=&quot;06-modulesandhelpers#Dynamic-Configuration-With-Params&quot;&gt;params&lt;/a&gt; to provide authorization credentials.</source>
          <target state="translated">권한 부여 자격 증명을 제공하려면 &lt;a href=&quot;06-modulesandhelpers#Dynamic-Configuration-With-Params&quot;&gt;params&lt;/a&gt; 를 사용하는 것이 좋습니다 .</target>
        </trans-unit>
        <trans-unit id="7e715b7d3c62535db72a1d05c9fee9c0c03a2ebb" translate="yes" xml:space="preserve">
          <source>We should see a step-by-step report on the performed actions:</source>
          <target state="translated">수행 된 작업에 대한 단계별 보고서가 표시되어야합니다.</target>
        </trans-unit>
        <trans-unit id="c991be81acea56ac976a79ae61660a24204cbc2b" translate="yes" xml:space="preserve">
          <source>We should start by creating a test with the next command:</source>
          <target state="translated">다음 명령으로 테스트를 작성하여 시작해야합니다.</target>
        </trans-unit>
        <trans-unit id="11b28ad8a3030bf3aa2742e21119881003659230" translate="yes" xml:space="preserve">
          <source>We will assume that all actions starting with &lt;code&gt;am&lt;/code&gt; and &lt;code&gt;have&lt;/code&gt; describe the initial environment. The &lt;code&gt;amOnPage&lt;/code&gt; action sets the starting point of a test to the &lt;code&gt;/login&lt;/code&gt; page.</source>
          <target state="translated">우리는 모든 작업으로 시작하는 것으로 가정합니다 &lt;code&gt;am&lt;/code&gt; 과 &lt;code&gt;have&lt;/code&gt; 초기 환경을 설명합니다. &lt;code&gt;amOnPage&lt;/code&gt; 의 동작은에 테스트의 시작 지점을 설정합니다 &lt;code&gt;/login&lt;/code&gt; 페이지를.</target>
        </trans-unit>
        <trans-unit id="fe408f86092303c584e7e38c939926d337e610f6" translate="yes" xml:space="preserve">
          <source>We will put all the api tests there.</source>
          <target state="translated">우리는 모든 API 테스트를 거기에 넣을 것입니다.</target>
        </trans-unit>
        <trans-unit id="e066930bd9bba98fa8a61e6dae0a402c24830666" translate="yes" xml:space="preserve">
          <source>We will start writing our first acceptance tests with PhpBrowser.</source>
          <target state="translated">PhpBrowser로 첫 번째 수락 테스트를 작성합니다.</target>
        </trans-unit>
        <trans-unit id="964fdf4a0607fa55a48cbb0b9fff2e31bb2043f3" translate="yes" xml:space="preserve">
          <source>We&amp;rsquo;ll assume that we have a &amp;lsquo;login&amp;rsquo; page where we get authenticated by providing a username and password. Then we are sent to a user page, where we see the text &lt;code&gt;Hello, %username%&lt;/code&gt;. Let&amp;rsquo;s look at how this scenario is written in Codeception:</source>
          <target state="translated">사용자 이름과 비밀번호를 제공하여 인증을받는 '로그인'페이지가 있다고 가정합니다. 그런 다음 사용자 페이지로 이동합니다. 여기에 &lt;code&gt;Hello, %username%&lt;/code&gt; . Codeception에서이 시나리오를 작성하는 방법을 살펴 보겠습니다.</target>
        </trans-unit>
        <trans-unit id="07e6ae07934ea1fa6988b1c869172b3f91e03b3d" translate="yes" xml:space="preserve">
          <source>Web Services</source>
          <target state="translated">웹 서비스</target>
        </trans-unit>
        <trans-unit id="bda2d68e20711107d45980e7009b8c2207fc908c" translate="yes" xml:space="preserve">
          <source>WebDriver</source>
          <target state="translated">WebDriver</target>
        </trans-unit>
        <trans-unit id="0694e89f039781417567e7972d88ce4e0d2a879e" translate="yes" xml:space="preserve">
          <source>WebDriver module provides advanced methods for the browser session, however, they can only be used from Helpers.</source>
          <target state="translated">WebDriver 모듈은 브라우저 세션에 대한 고급 방법을 제공하지만 도우미에서만 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1679a3f1c38a9516b243a2cda8db5d96053b153d" translate="yes" xml:space="preserve">
          <source>WebDriver module returns &lt;code&gt;Facebook\WebDriver\Remote\RemoteWebElement&lt;/code&gt; instances PhpBrowser and Framework modules return &lt;code&gt;Symfony\Component\DomCrawler\Crawler&lt;/code&gt; instances</source>
          <target state="translated">WebDriver 모듈은 &lt;code&gt;Facebook\WebDriver\Remote\RemoteWebElement&lt;/code&gt; 인스턴스를 반환 PhpBrowser 및 프레임 워크 모듈은 &lt;code&gt;Symfony\Component\DomCrawler\Crawler&lt;/code&gt; 인스턴스를 반환</target>
        </trans-unit>
        <trans-unit id="a314b5bc5779810b413145040a4500fb4f600869" translate="yes" xml:space="preserve">
          <source>WebDriver::_backupSession</source>
          <target state="translated">WebDriver::_backupSession</target>
        </trans-unit>
        <trans-unit id="fb93a23623f2a8af4cbd4032cc5df307c499f2cd" translate="yes" xml:space="preserve">
          <source>WebDriver::_capabilities</source>
          <target state="translated">WebDriver::_capabilities</target>
        </trans-unit>
        <trans-unit id="48040cbc91d093a0d233efee43d3329ccee19844" translate="yes" xml:space="preserve">
          <source>WebDriver::_closeSession</source>
          <target state="translated">WebDriver::_closeSession</target>
        </trans-unit>
        <trans-unit id="0297d85d7f215534bc6c5131cc58158a2e11941c" translate="yes" xml:space="preserve">
          <source>WebDriver::_findClickable</source>
          <target state="translated">WebDriver::_findClickable</target>
        </trans-unit>
        <trans-unit id="5f3393839a56bcebb5c1580647e9f6ceb707a88c" translate="yes" xml:space="preserve">
          <source>WebDriver::_findElements</source>
          <target state="translated">WebDriver::_findElements</target>
        </trans-unit>
        <trans-unit id="c457a48ab4c35826401cae3c38f64456a1199a35" translate="yes" xml:space="preserve">
          <source>WebDriver::_getCurrentUri</source>
          <target state="translated">WebDriver::_getCurrentUri</target>
        </trans-unit>
        <trans-unit id="79efeeafef6bd6dbf99aaad7ed4e7ab68dcd4b83" translate="yes" xml:space="preserve">
          <source>WebDriver::_getUrl</source>
          <target state="translated">WebDriver::_getUrl</target>
        </trans-unit>
        <trans-unit id="6b2afaaa774d5aacf79d9010a6af12b241567ab4" translate="yes" xml:space="preserve">
          <source>WebDriver::_initializeSession</source>
          <target state="translated">WebDriver::_initializeSession</target>
        </trans-unit>
        <trans-unit id="19c5c43d9312244287e1449dcff3be2ff856d346" translate="yes" xml:space="preserve">
          <source>WebDriver::_loadSession</source>
          <target state="translated">WebDriver::_loadSession</target>
        </trans-unit>
        <trans-unit id="686eb748c19dd9126f0416286c5f1a934e49d52b" translate="yes" xml:space="preserve">
          <source>WebDriver::_restart</source>
          <target state="translated">WebDriver::_restart</target>
        </trans-unit>
        <trans-unit id="839d65c8dae1ef76a6e64992c0637b34e68a4fdc" translate="yes" xml:space="preserve">
          <source>WebDriver::_savePageSource</source>
          <target state="translated">WebDriver::_savePageSource</target>
        </trans-unit>
        <trans-unit id="d23193135f8cc8242eeff77137f5221200307783" translate="yes" xml:space="preserve">
          <source>WebDriver::_saveScreenshot</source>
          <target state="translated">WebDriver::_saveScreenshot</target>
        </trans-unit>
        <trans-unit id="008d864b851a5f934db75e257ec873d4759c2f9c" translate="yes" xml:space="preserve">
          <source>WebDriver::acceptPopup</source>
          <target state="translated">WebDriver::acceptPopup</target>
        </trans-unit>
        <trans-unit id="d003d0f16e9f5b94b36906a3578e71d329c0d69e" translate="yes" xml:space="preserve">
          <source>WebDriver::amOnPage</source>
          <target state="translated">WebDriver::amOnPage</target>
        </trans-unit>
        <trans-unit id="81e7d2dd66dea4c2f42e9f2c38c7b99b70a6f938" translate="yes" xml:space="preserve">
          <source>WebDriver::amOnSubdomain</source>
          <target state="translated">WebDriver::amOnSubdomain</target>
        </trans-unit>
        <trans-unit id="9fd8fe0f0ec9cc7cadf85604df217c53d328e9fc" translate="yes" xml:space="preserve">
          <source>WebDriver::amOnUrl</source>
          <target state="translated">WebDriver::amOnUrl</target>
        </trans-unit>
        <trans-unit id="50d164521b2aeaec38abc7c0997d9eccdee55f5b" translate="yes" xml:space="preserve">
          <source>WebDriver::appendField</source>
          <target state="translated">WebDriver::appendField</target>
        </trans-unit>
        <trans-unit id="678f72b79cf04e8ffef718e61be16926ac59f415" translate="yes" xml:space="preserve">
          <source>WebDriver::attachFile</source>
          <target state="translated">WebDriver::attachFile</target>
        </trans-unit>
        <trans-unit id="bc59e14cabf993ec2f9918e4518bb137f7cd1876" translate="yes" xml:space="preserve">
          <source>WebDriver::cancelPopup</source>
          <target state="translated">WebDriver::cancelPopup</target>
        </trans-unit>
        <trans-unit id="199e459b4d61ea7921c24d58fe131c0d6efc645c" translate="yes" xml:space="preserve">
          <source>WebDriver::checkOption</source>
          <target state="translated">WebDriver::checkOption</target>
        </trans-unit>
        <trans-unit id="c716de3e5b0c5b5b659d6d9cb216c62562e04bd2" translate="yes" xml:space="preserve">
          <source>WebDriver::clearField</source>
          <target state="translated">WebDriver::clearField</target>
        </trans-unit>
        <trans-unit id="36cad5609be0127eec8d60b50bf1b5451ce5e3b2" translate="yes" xml:space="preserve">
          <source>WebDriver::click</source>
          <target state="translated">WebDriver::click</target>
        </trans-unit>
        <trans-unit id="a0466133d340a040163480e443f3c44f9991730c" translate="yes" xml:space="preserve">
          <source>WebDriver::clickWithLeftButton</source>
          <target state="translated">WebDriver::clickWithLeftButton</target>
        </trans-unit>
        <trans-unit id="91f72d22e895d407d8d5ff738fcc76b2475a4c2f" translate="yes" xml:space="preserve">
          <source>WebDriver::clickWithRightButton</source>
          <target state="translated">WebDriver::clickWithRightButton</target>
        </trans-unit>
        <trans-unit id="fe1879011f4e647dbb819ca4b6edd014bbbbd2e9" translate="yes" xml:space="preserve">
          <source>WebDriver::closeTab</source>
          <target state="translated">WebDriver::closeTab</target>
        </trans-unit>
        <trans-unit id="4fc506908eb99949cfa3e84605f1fa4d9430e459" translate="yes" xml:space="preserve">
          <source>WebDriver::debugWebDriverLogs</source>
          <target state="translated">WebDriver::debugWebDriverLogs</target>
        </trans-unit>
        <trans-unit id="c883ec628fe2ab6d2a3c24e7756cb146b28f977e" translate="yes" xml:space="preserve">
          <source>WebDriver::deleteSessionSnapshot</source>
          <target state="translated">WebDriver::deleteSessionSnapshot</target>
        </trans-unit>
        <trans-unit id="f5c6177f6063e4edb07cded27f3471f244a8c29f" translate="yes" xml:space="preserve">
          <source>WebDriver::dontSee</source>
          <target state="translated">WebDriver::dontSee</target>
        </trans-unit>
        <trans-unit id="b7c5b438b55cbeee8df6ef0079c58d8b43b53383" translate="yes" xml:space="preserve">
          <source>WebDriver::dontSeeCheckboxIsChecked</source>
          <target state="translated">WebDriver::dontSeeCheckboxIsChecked</target>
        </trans-unit>
        <trans-unit id="58581affed8ad73f8e411a4f93122a5bd79cbda3" translate="yes" xml:space="preserve">
          <source>WebDriver::dontSeeCookie</source>
          <target state="translated">WebDriver::dontSeeCookie</target>
        </trans-unit>
        <trans-unit id="5689d787dcf379b07a364e99030a71aea8581b3e" translate="yes" xml:space="preserve">
          <source>WebDriver::dontSeeCurrentUrlEquals</source>
          <target state="translated">WebDriver::dontSeeCurrentUrlEquals</target>
        </trans-unit>
        <trans-unit id="3739886ef8ff8ae198c6e2267ecb5f11796be8fe" translate="yes" xml:space="preserve">
          <source>WebDriver::dontSeeCurrentUrlMatches</source>
          <target state="translated">WebDriver::dontSeeCurrentUrlMatches</target>
        </trans-unit>
        <trans-unit id="8c399e2909e4562684c671ec5eb5266e5fa94ffb" translate="yes" xml:space="preserve">
          <source>WebDriver::dontSeeElement</source>
          <target state="translated">WebDriver::dontSeeElement</target>
        </trans-unit>
        <trans-unit id="bc93ef6f759dab0a6c0d996c1fcc7ea1cd9e9819" translate="yes" xml:space="preserve">
          <source>WebDriver::dontSeeElementInDOM</source>
          <target state="translated">WebDriver::dontSeeElementInDOM</target>
        </trans-unit>
        <trans-unit id="a56b1d04971cc466dfb5c81f22d50e20d0211ed1" translate="yes" xml:space="preserve">
          <source>WebDriver::dontSeeInCurrentUrl</source>
          <target state="translated">WebDriver::dontSeeInCurrentUrl</target>
        </trans-unit>
        <trans-unit id="f710c95e319335cc377b06f6c2dd4ed07105ecd4" translate="yes" xml:space="preserve">
          <source>WebDriver::dontSeeInField</source>
          <target state="translated">WebDriver::dontSeeInField</target>
        </trans-unit>
        <trans-unit id="8da638e4806e5b3465ddb73cb50aaf754bdc8673" translate="yes" xml:space="preserve">
          <source>WebDriver::dontSeeInFormFields</source>
          <target state="translated">WebDriver::dontSeeInFormFields</target>
        </trans-unit>
        <trans-unit id="28347c0638ced47689db9fa78d81ddf7d60b065a" translate="yes" xml:space="preserve">
          <source>WebDriver::dontSeeInPageSource</source>
          <target state="translated">WebDriver::dontSeeInPageSource</target>
        </trans-unit>
        <trans-unit id="4c0327bb29bde774e7377285b1ebf5fbec3d4bac" translate="yes" xml:space="preserve">
          <source>WebDriver::dontSeeInPopup</source>
          <target state="translated">WebDriver::dontSeeInPopup</target>
        </trans-unit>
        <trans-unit id="bcaa5815c7fcfc9d25499cddade40330de4b897e" translate="yes" xml:space="preserve">
          <source>WebDriver::dontSeeInSource</source>
          <target state="translated">WebDriver::dontSeeInSource</target>
        </trans-unit>
        <trans-unit id="00e75743e67b41a08a3ae25fa6a89b431e1905f8" translate="yes" xml:space="preserve">
          <source>WebDriver::dontSeeInTitle</source>
          <target state="translated">WebDriver::dontSeeInTitle</target>
        </trans-unit>
        <trans-unit id="be29d3b6e50831fc2571e820d11b750cb7848d23" translate="yes" xml:space="preserve">
          <source>WebDriver::dontSeeLink</source>
          <target state="translated">WebDriver::dontSeeLink</target>
        </trans-unit>
        <trans-unit id="11cc2b7fefe874702f9fca408eeb7ac9a18b7eb1" translate="yes" xml:space="preserve">
          <source>WebDriver::dontSeeOptionIsSelected</source>
          <target state="translated">WebDriver::dontSeeOptionIsSelected</target>
        </trans-unit>
        <trans-unit id="18c9d4baffbed215b8996395a06fb40e99067c75" translate="yes" xml:space="preserve">
          <source>WebDriver::doubleClick</source>
          <target state="translated">WebDriver::doubleClick</target>
        </trans-unit>
        <trans-unit id="fa457093b26e9cd234be4fd31a23d890aff9a827" translate="yes" xml:space="preserve">
          <source>WebDriver::dragAndDrop</source>
          <target state="translated">WebDriver::dragAndDrop</target>
        </trans-unit>
        <trans-unit id="5b2b89b7b996c4fd83f6fe8e98c8112cf907e4cb" translate="yes" xml:space="preserve">
          <source>WebDriver::executeAsyncJS</source>
          <target state="translated">WebDriver::executeAsyncJS</target>
        </trans-unit>
        <trans-unit id="3935aa86073d316e70ac407231d16fb2923bb6ef" translate="yes" xml:space="preserve">
          <source>WebDriver::executeInSelenium</source>
          <target state="translated">WebDriver::executeInSelenium</target>
        </trans-unit>
        <trans-unit id="8da22722d39d4ae44815661a67faa76d86768eab" translate="yes" xml:space="preserve">
          <source>WebDriver::executeJS</source>
          <target state="translated">WebDriver::executeJS</target>
        </trans-unit>
        <trans-unit id="78b146d3ebc4644ec71fd76d8d59d63f011f45ed" translate="yes" xml:space="preserve">
          <source>WebDriver::fillField</source>
          <target state="translated">WebDriver::fillField</target>
        </trans-unit>
        <trans-unit id="30a9a1ff105043386badac5d80cab4d5c6c2ce72" translate="yes" xml:space="preserve">
          <source>WebDriver::grabAttributeFrom</source>
          <target state="translated">WebDriver::grabAttributeFrom</target>
        </trans-unit>
        <trans-unit id="d177f43c7209376a5e548b30dfc0b282fd6f1e23" translate="yes" xml:space="preserve">
          <source>WebDriver::grabCookie</source>
          <target state="translated">WebDriver::grabCookie</target>
        </trans-unit>
        <trans-unit id="209ad98d44a4df118a6caf2c10279c277c936d22" translate="yes" xml:space="preserve">
          <source>WebDriver::grabFromCurrentUrl</source>
          <target state="translated">WebDriver::grabFromCurrentUrl</target>
        </trans-unit>
        <trans-unit id="03199c3bdc5d89fb5769fbc6cbc0832bbd128e5c" translate="yes" xml:space="preserve">
          <source>WebDriver::grabMultiple</source>
          <target state="translated">WebDriver::grabMultiple</target>
        </trans-unit>
        <trans-unit id="fe09d62f8d1d3d51376b82e407e76c9e7663ecce" translate="yes" xml:space="preserve">
          <source>WebDriver::grabPageSource</source>
          <target state="translated">WebDriver::grabPageSource</target>
        </trans-unit>
        <trans-unit id="97dee872dd1986c37e43698c9ec66e5a5015beef" translate="yes" xml:space="preserve">
          <source>WebDriver::grabTextFrom</source>
          <target state="translated">WebDriver::grabTextFrom</target>
        </trans-unit>
        <trans-unit id="df1911914989b5d99140dbc443d207fb88761754" translate="yes" xml:space="preserve">
          <source>WebDriver::grabValueFrom</source>
          <target state="translated">WebDriver::grabValueFrom</target>
        </trans-unit>
        <trans-unit id="d4b73514a37e1a972525fb5dfaf40064ec1ef0b3" translate="yes" xml:space="preserve">
          <source>WebDriver::loadSessionSnapshot</source>
          <target state="translated">WebDriver::loadSessionSnapshot</target>
        </trans-unit>
        <trans-unit id="f8a8906a2bac2aa20ab27aa119a605dc838c9b27" translate="yes" xml:space="preserve">
          <source>WebDriver::makeHtmlSnapshot</source>
          <target state="translated">WebDriver::makeHtmlSnapshot</target>
        </trans-unit>
        <trans-unit id="da36128682d9f6df110ea40f8e8eb4746aea426c" translate="yes" xml:space="preserve">
          <source>WebDriver::makeScreenshot</source>
          <target state="translated">WebDriver::makeScreenshot</target>
        </trans-unit>
        <trans-unit id="53b59f7fd3a8559443f75df2df67683870733b07" translate="yes" xml:space="preserve">
          <source>WebDriver::maximizeWindow</source>
          <target state="translated">WebDriver::maximizeWindow</target>
        </trans-unit>
        <trans-unit id="07a6e2b7731849ed2bbc6b774e41768cd00e254e" translate="yes" xml:space="preserve">
          <source>WebDriver::moveBack</source>
          <target state="translated">WebDriver::moveBack</target>
        </trans-unit>
        <trans-unit id="bd301eafbad4c2ebfec9ed0d82594682a5870ca0" translate="yes" xml:space="preserve">
          <source>WebDriver::moveForward</source>
          <target state="translated">WebDriver::moveForward</target>
        </trans-unit>
        <trans-unit id="b63af819467757b6d7f33abf6e46185d1d547929" translate="yes" xml:space="preserve">
          <source>WebDriver::moveMouseOver</source>
          <target state="translated">WebDriver::moveMouseOver</target>
        </trans-unit>
        <trans-unit id="87f278015c1021ce283076fbd5ef052ef06a53dc" translate="yes" xml:space="preserve">
          <source>WebDriver::openNewTab</source>
          <target state="translated">WebDriver::openNewTab</target>
        </trans-unit>
        <trans-unit id="78508a357a3ff918a070b7f57970a5228b1f3dc0" translate="yes" xml:space="preserve">
          <source>WebDriver::performOn</source>
          <target state="translated">WebDriver::performOn</target>
        </trans-unit>
        <trans-unit id="efca57c8a3e368d93c16192b009a6cceda6aa2c9" translate="yes" xml:space="preserve">
          <source>WebDriver::pressKey</source>
          <target state="translated">WebDriver::pressKey</target>
        </trans-unit>
        <trans-unit id="6114079667e12017fd55a1677771684ecd23592a" translate="yes" xml:space="preserve">
          <source>WebDriver::reloadPage</source>
          <target state="translated">WebDriver::reloadPage</target>
        </trans-unit>
        <trans-unit id="e55bf053c5a444268aa5f95ab45b3b3ef11f8bfe" translate="yes" xml:space="preserve">
          <source>WebDriver::resetCookie</source>
          <target state="translated">WebDriver::resetCookie</target>
        </trans-unit>
        <trans-unit id="293658fbd727358732040f7459c7d220187e1ec1" translate="yes" xml:space="preserve">
          <source>WebDriver::resizeWindow</source>
          <target state="translated">WebDriver::resizeWindow</target>
        </trans-unit>
        <trans-unit id="f63375f122d4e9b54f9047048e76111f71cf7d1c" translate="yes" xml:space="preserve">
          <source>WebDriver::saveSessionSnapshot</source>
          <target state="translated">WebDriver::saveSessionSnapshot</target>
        </trans-unit>
        <trans-unit id="41f07df2513f6360e5e38af3e8b97e9665d2676e" translate="yes" xml:space="preserve">
          <source>WebDriver::scrollTo</source>
          <target state="translated">WebDriver::scrollTo</target>
        </trans-unit>
        <trans-unit id="0db751c46c280c288c2439743cef898059df4a29" translate="yes" xml:space="preserve">
          <source>WebDriver::see</source>
          <target state="translated">WebDriver::see</target>
        </trans-unit>
        <trans-unit id="e76bf534563524d79bba5a08f64711600616890f" translate="yes" xml:space="preserve">
          <source>WebDriver::seeCheckboxIsChecked</source>
          <target state="translated">WebDriver::seeCheckboxIsChecked</target>
        </trans-unit>
        <trans-unit id="c139542508cd82301bd9c0d9675624f92bb89078" translate="yes" xml:space="preserve">
          <source>WebDriver::seeCookie</source>
          <target state="translated">WebDriver::seeCookie</target>
        </trans-unit>
        <trans-unit id="8a4f7652731d23ab7ca236673ebfab9f51496048" translate="yes" xml:space="preserve">
          <source>WebDriver::seeCurrentUrlEquals</source>
          <target state="translated">WebDriver::seeCurrentUrlEquals</target>
        </trans-unit>
        <trans-unit id="5d9e8b5f1d76cc54d5e7127a7f854a04813389e4" translate="yes" xml:space="preserve">
          <source>WebDriver::seeCurrentUrlMatches</source>
          <target state="translated">WebDriver::seeCurrentUrlMatches</target>
        </trans-unit>
        <trans-unit id="c3c60f13a281d222547c7188a4342412702677d8" translate="yes" xml:space="preserve">
          <source>WebDriver::seeElement</source>
          <target state="translated">WebDriver::seeElement</target>
        </trans-unit>
        <trans-unit id="f37c1bdeb3e4c2fc14856efd810fc1227b425e51" translate="yes" xml:space="preserve">
          <source>WebDriver::seeElementInDOM</source>
          <target state="translated">WebDriver::seeElementInDOM</target>
        </trans-unit>
        <trans-unit id="13d3d8350f5bca3f956bb13652ac43d716b6dacf" translate="yes" xml:space="preserve">
          <source>WebDriver::seeInCurrentUrl</source>
          <target state="translated">WebDriver::seeInCurrentUrl</target>
        </trans-unit>
        <trans-unit id="0e04308e4717aaf48e9ec2bce8a8489b7c78e381" translate="yes" xml:space="preserve">
          <source>WebDriver::seeInField</source>
          <target state="translated">WebDriver::seeInField</target>
        </trans-unit>
        <trans-unit id="7c627dc9f790a9872773d930bc82dbe2a1e97f8d" translate="yes" xml:space="preserve">
          <source>WebDriver::seeInFormFields</source>
          <target state="translated">WebDriver::seeInFormFields</target>
        </trans-unit>
        <trans-unit id="863e1c67cbe51614df15aebdbe4567e2ef2a4111" translate="yes" xml:space="preserve">
          <source>WebDriver::seeInPageSource</source>
          <target state="translated">WebDriver::seeInPageSource</target>
        </trans-unit>
        <trans-unit id="83c19a372b15bd0a52825de90eee0c3a7b371aef" translate="yes" xml:space="preserve">
          <source>WebDriver::seeInPopup</source>
          <target state="translated">WebDriver::seeInPopup</target>
        </trans-unit>
        <trans-unit id="6773bac9bcead5b3761adccc4fb915f8b707e232" translate="yes" xml:space="preserve">
          <source>WebDriver::seeInSource</source>
          <target state="translated">WebDriver::seeInSource</target>
        </trans-unit>
        <trans-unit id="3079776aa3664f725c4fffe52194b7598bc9875a" translate="yes" xml:space="preserve">
          <source>WebDriver::seeInTitle</source>
          <target state="translated">WebDriver::seeInTitle</target>
        </trans-unit>
        <trans-unit id="8bc5836badb7e74af9268912a50d53de61a0479e" translate="yes" xml:space="preserve">
          <source>WebDriver::seeLink</source>
          <target state="translated">WebDriver::seeLink</target>
        </trans-unit>
        <trans-unit id="1a9100dd46f45ab3e9466dbcfedfee24db02654f" translate="yes" xml:space="preserve">
          <source>WebDriver::seeNumberOfElements</source>
          <target state="translated">WebDriver::seeNumberOfElements</target>
        </trans-unit>
        <trans-unit id="8e7ad02d8a2f0d2753c08c09dfd7ce7855a47537" translate="yes" xml:space="preserve">
          <source>WebDriver::seeNumberOfElementsInDOM</source>
          <target state="translated">WebDriver::seeNumberOfElementsInDOM</target>
        </trans-unit>
        <trans-unit id="0392ccae47dc05c6f84646e6dcbb35ddcaad29cf" translate="yes" xml:space="preserve">
          <source>WebDriver::seeOptionIsSelected</source>
          <target state="translated">WebDriver::seeOptionIsSelected</target>
        </trans-unit>
        <trans-unit id="0bf200964f78e9bb425421a474c1a81d207e650c" translate="yes" xml:space="preserve">
          <source>WebDriver::selectOption</source>
          <target state="translated">WebDriver::selectOption</target>
        </trans-unit>
        <trans-unit id="3a7074b3d0231a8ef404357d8a3fb47491d7bab0" translate="yes" xml:space="preserve">
          <source>WebDriver::setCookie</source>
          <target state="translated">WebDriver::setCookie</target>
        </trans-unit>
        <trans-unit id="2f8d62e7c930c4903f3d1dda4fccc0cd382021a6" translate="yes" xml:space="preserve">
          <source>WebDriver::submitForm</source>
          <target state="translated">WebDriver::submitForm</target>
        </trans-unit>
        <trans-unit id="3a8bb895845dae8bb77dc05d9b341b1d7f53e7ef" translate="yes" xml:space="preserve">
          <source>WebDriver::switchToIFrame</source>
          <target state="translated">WebDriver::switchToIFrame</target>
        </trans-unit>
        <trans-unit id="08c2009703adf44c2eb6fa232d0c9238c9bf30af" translate="yes" xml:space="preserve">
          <source>WebDriver::switchToNextTab</source>
          <target state="translated">WebDriver::switchToNextTab</target>
        </trans-unit>
        <trans-unit id="613857c9fb62f4f2d86f92dcc98cf47348e187e9" translate="yes" xml:space="preserve">
          <source>WebDriver::switchToPreviousTab</source>
          <target state="translated">WebDriver::switchToPreviousTab</target>
        </trans-unit>
        <trans-unit id="bc277b825e5166f4e80a112fff0d29d11517d44f" translate="yes" xml:space="preserve">
          <source>WebDriver::switchToWindow</source>
          <target state="translated">WebDriver::switchToWindow</target>
        </trans-unit>
        <trans-unit id="7a327932e0482c2a8d01a4820be4f67ca1ceb682" translate="yes" xml:space="preserve">
          <source>WebDriver::typeInPopup</source>
          <target state="translated">WebDriver::typeInPopup</target>
        </trans-unit>
        <trans-unit id="c9184f7dc7a226673e3c5b234aa5be3253189ebd" translate="yes" xml:space="preserve">
          <source>WebDriver::uncheckOption</source>
          <target state="translated">WebDriver::uncheckOption</target>
        </trans-unit>
        <trans-unit id="a1d66c145c7490b238e76ae5b5285cd170567130" translate="yes" xml:space="preserve">
          <source>WebDriver::unselectOption</source>
          <target state="translated">WebDriver::unselectOption</target>
        </trans-unit>
        <trans-unit id="819ac6e05ce9914664a0d7501aaa45b7faafe37e" translate="yes" xml:space="preserve">
          <source>WebDriver::wait</source>
          <target state="translated">WebDriver::wait</target>
        </trans-unit>
        <trans-unit id="bb48a62dc69f6d691c83216740b831818b64c111" translate="yes" xml:space="preserve">
          <source>WebDriver::waitForElement</source>
          <target state="translated">WebDriver::waitForElement</target>
        </trans-unit>
        <trans-unit id="d13b4193843a8fceda2dc09dc3bd84532736ccc2" translate="yes" xml:space="preserve">
          <source>WebDriver::waitForElementChange</source>
          <target state="translated">WebDriver::waitForElementChange</target>
        </trans-unit>
        <trans-unit id="287ecb47a569a950b9d2f2d2e07923568b9fbe2c" translate="yes" xml:space="preserve">
          <source>WebDriver::waitForElementClickable</source>
          <target state="translated">WebDriver::waitForElementClickable</target>
        </trans-unit>
        <trans-unit id="20fc57e73110c728abca14eda3925b8e979b676c" translate="yes" xml:space="preserve">
          <source>WebDriver::waitForElementNotVisible</source>
          <target state="translated">WebDriver::waitForElementNotVisible</target>
        </trans-unit>
        <trans-unit id="8af5d63da0f01f700d2731d9f983204b1da4780b" translate="yes" xml:space="preserve">
          <source>WebDriver::waitForElementVisible</source>
          <target state="translated">WebDriver::waitForElementVisible</target>
        </trans-unit>
        <trans-unit id="2b848231b3629c12bb8c18967849413c5cf1d9f6" translate="yes" xml:space="preserve">
          <source>WebDriver::waitForJS</source>
          <target state="translated">WebDriver::waitForJS</target>
        </trans-unit>
        <trans-unit id="e8febf789c6f6dbc718d33c16f47741ddfd8ed0b" translate="yes" xml:space="preserve">
          <source>WebDriver::waitForText</source>
          <target state="translated">WebDriver::waitForText</target>
        </trans-unit>
        <trans-unit id="8d0ca63c6468fde8fc8b7043818c1c4c83a848ac" translate="yes" xml:space="preserve">
          <source>WebDriverBy::name(&amp;lsquo;submitButton&amp;rsquo;)</source>
          <target state="translated">WebDriverBy::name(&amp;lsquo;submitButton&amp;rsquo;)</target>
        </trans-unit>
        <trans-unit id="68ebe78e946f0c746fdb3f434c70a737a4ecea46" translate="yes" xml:space="preserve">
          <source>Webserver required</source>
          <target state="translated">웹 서버 필요</target>
        </trans-unit>
        <trans-unit id="160a6d58c27a1fabadbd27dc6f107dcb1af1c7f0" translate="yes" xml:space="preserve">
          <source>What are Actors</source>
          <target state="translated">배우 란?</target>
        </trans-unit>
        <trans-unit id="7186d7cf88491f19b7fceb48cc74f071066e0e2e" translate="yes" xml:space="preserve">
          <source>What if we could check our application without running it on a server? That way we could see detailed exceptions on errors, have our tests run faster, and check the database against predictable and expected results. That&amp;rsquo;s what functional tests are for.</source>
          <target state="translated">애플리케이션을 서버에서 실행하지 않고 확인할 수 있다면 어떨까요? 이를 통해 오류에 대한 자세한 예외를 확인하고 테스트를 더 빠르게 실행하며 예측 가능하고 예상되는 결과에 대해 데이터베이스를 확인할 수 있습니다. 그것이 기능 테스트의 목적입니다.</target>
        </trans-unit>
        <trans-unit id="d951fa7b998891e0337b12c07159b550ecb4272c" translate="yes" xml:space="preserve">
          <source>What if you deal with data which you don&amp;rsquo;t own? For instance, the page look depends on number of categories in database, and categories are set by admin user. How would you test that the page is still valid?</source>
          <target state="translated">소유하지 않은 데이터를 다루는 경우 어떻게합니까? 예를 들어, 페이지 모양은 데이터베이스의 범주 수에 따라 다르며 범주는 관리자가 설정합니다. 페이지가 여전히 유효한지 어떻게 테스트 하시겠습니까?</target>
        </trans-unit>
        <trans-unit id="6184cfdd7dee5fc732dd81a9517681c40cb5c60d" translate="yes" xml:space="preserve">
          <source>What if you want to execute the same test scenario with different data? In this case you can inject examples as &lt;code&gt;\Codeception\Example&lt;/code&gt; instances. Data is defined via the &lt;code&gt;@example&lt;/code&gt; annotation, using JSON or Doctrine-style notation (limited to a single line).</source>
          <target state="translated">다른 데이터로 동일한 테스트 시나리오를 실행하려면 어떻게합니까? 이 경우 예제를 &lt;code&gt;\Codeception\Example&lt;/code&gt; 인스턴스 로 삽입 할 수 있습니다 . 데이터는 &lt;code&gt;@example&lt;/code&gt; 을 통해 정의됩니다JSON 또는 Doctrine 스타일 표기법을 사용하여 주석을 (한 줄로 제한).</target>
        </trans-unit>
        <trans-unit id="547fbf4b8e8f0a523de2c55a559e30f8a60f453f" translate="yes" xml:space="preserve">
          <source>What is Behavior Driven Development</source>
          <target state="translated">행동 주도 개발이란?</target>
        </trans-unit>
        <trans-unit id="779b1d581eb9fa1166357fe338061f2d3b4447b7" translate="yes" xml:space="preserve">
          <source>What to do</source>
          <target state="translated">해야 할 일</target>
        </trans-unit>
        <trans-unit id="1dbac83db6bdb3787062cf12306609f776a7a63d" translate="yes" xml:space="preserve">
          <source>When a test gets to this point it stops and shows a console where you can try all available commands. This can be very useful when you write functional, acceptance, or api test.</source>
          <target state="translated">테스트가이 시점에 도달하면 테스트가 중지되고 사용 가능한 모든 명령을 시도 할 수있는 콘솔이 표시됩니다. 기능, 합격 또는 API 테스트를 작성할 때 매우 유용합니다.</target>
        </trans-unit>
        <trans-unit id="a95218c80e5dbc9d1a069ace9dfe10ea6c6427d8" translate="yes" xml:space="preserve">
          <source>When a web site acts unpredictably you may need to react on that change. This happens if site configured for A/B testing, or shows different popups, based on environment.</source>
          <target state="translated">웹 사이트가 예기치 않게 작동하면 해당 변경 사항에 대처해야합니다. 사이트가 A / B 테스트 용으로 구성되었거나 환경에 따라 다른 팝업이 표시되는 경우에 발생합니다.</target>
        </trans-unit>
        <trans-unit id="50fa0dba3c8735447a05e255d28fa7ce5f0c3f01" translate="yes" xml:space="preserve">
          <source>When executing a request via one of the request functions the &lt;code&gt;request&lt;/code&gt; and &lt;code&gt;response&lt;/code&gt; component are both recreated.</source>
          <target state="translated">요청 기능 중 하나를 통해 요청을 실행할 때 &lt;code&gt;request&lt;/code&gt; 및 &lt;code&gt;response&lt;/code&gt; 구성 요소가 모두 다시 작성됩니다.</target>
        </trans-unit>
        <trans-unit id="d2b5531eae3be54e1e580692b7aeda3be498906d" translate="yes" xml:space="preserve">
          <source>When execution time of your tests is longer than a coffee break, it is a good reason to think about making your tests faster. If you have already tried to run them on SSD drive, or to use PhantomJS instead of Selenium, and the execution time still upsets you, it might be a good idea to run your tests in parallel.</source>
          <target state="translated">테스트 실행 시간이 커피 브레이크보다 길면 테스트 속도를 높이는 것이 좋습니다. SSD 드라이브에서 이미 실행을 시도했거나 Selenium 대신 PhantomJS를 사용하려고하는데 실행 시간이 여전히 화가 나면 테스트를 병렬로 실행하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="86f02e72172fb7f2c5424fae3e6f3e786384af1e" translate="yes" xml:space="preserve">
          <source>When it&amp;rsquo;s hard to define condition to wait for, we can retry a command few times until it succeeds. For instance, if you try to click while it&amp;rsquo;s animating you can try to do it few times until it freezes. Since Codeception 3.0 each action and assertion have an alias prefixed with &lt;code&gt;retry&lt;/code&gt; which allows to retry a flaky command.</source>
          <target state="translated">기다릴 조건을 정의하기 어려운 경우 명령이 성공할 때까지 명령을 몇 번 재 시도 할 수 있습니다. 예를 들어 애니메이션이 진행되는 동안 클릭하려고하면 정지 될 때까지 몇 번 시도 할 수 있습니다. Codeception 3.0부터 각 조치 및 어설 션에는 &lt;code&gt;retry&lt;/code&gt; 접두어가 붙습니다. 가 비정상적인 명령을 재 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7c3f66d6553618458121cd7ac2434a4d34b5b308" translate="yes" xml:space="preserve">
          <source>When test fails are printed</source>
          <target state="translated">테스트 실패시</target>
        </trans-unit>
        <trans-unit id="8f551336233aa1bb9365b525179a9ebd747adcfe" translate="yes" xml:space="preserve">
          <source>When used with Zend Framework 2 or Symfony2, Doctrine&amp;rsquo;s Entity Manager is automatically retrieved from Service Locator. Set up your &lt;code&gt;functional.suite.yml&lt;/code&gt; like this:</source>
          <target state="translated">Zend Framework 2 또는 Symfony2와 함께 사용하면 Doctrine의 엔티티 관리자가 Service Locator에서 자동으로 검색됩니다. 다음 과 같이 &lt;code&gt;functional.suite.yml&lt;/code&gt; 을 설정하십시오 .</target>
        </trans-unit>
        <trans-unit id="95b32daa9b70d46377fc544d357bcc24a02eebcd" translate="yes" xml:space="preserve">
          <source>When we decide to clean up a database, we should make this cleaning as fast as possible. Tests should always run fast. Rebuilding the database from scratch is not the best way, but might be the only one. In any case, you should use a special test database for testing. &lt;strong&gt;Do not ever run tests on development or production databases!&lt;/strong&gt;</source>
          <target state="translated">데이터베이스 정리를 결정하면 가능한 빨리 정리해야합니다. 테스트는 항상 빠르게 실행되어야합니다. 처음부터 데이터베이스를 다시 작성하는 것이 가장 좋은 방법은 아니지만 유일한 방법 일 수 있습니다. 어쨌든 테스트를 위해 특수 테스트 데이터베이스를 사용해야합니다. &lt;strong&gt;개발 또는 프로덕션 데이터베이스에서 테스트를 실행하지 마십시오!&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="38b4e49af8f945407ebc6b3f97b6f3db241f44d2" translate="yes" xml:space="preserve">
          <source>When writing tests you should prepare them for constant changes in your application. Tests should be easy to read and maintain. If a specification of your application is changed, your tests should be updated as well. If you don&amp;rsquo;t have a convention inside your team for documenting tests, you will have issues figuring out what tests will be affected by the introduction of a new feature.</source>
          <target state="translated">테스트를 작성할 때 응용 프로그램의 지속적인 변경을 위해 테스트를 준비해야합니다. 테스트는 읽고 유지하기 쉬워야합니다. 응용 프로그램 사양이 변경되면 테스트도 업데이트해야합니다. 팀 내에서 테스트 문서화에 대한 규칙이없는 경우 새로운 기능의 도입으로 인해 어떤 테스트가 영향을 받는지 파악하는 데 문제가 있습니다.</target>
        </trans-unit>
        <trans-unit id="b2028cfcc78f7fd44821aacab16481a32f1dfc70" translate="yes" xml:space="preserve">
          <source>When?</source>
          <target state="translated">When?</target>
        </trans-unit>
        <trans-unit id="9485258aa734d923d92a33b3305a3be111d6586b" translate="yes" xml:space="preserve">
          <source>Whenever you need to define more actions a callback can be used. A WebDriver module is passed for argument:</source>
          <target state="translated">더 많은 작업을 정의해야 할 때마다 콜백을 사용할 수 있습니다. 인수를 위해 WebDriver 모듈이 전달됩니다.</target>
        </trans-unit>
        <trans-unit id="9bcce22a07bfa505db9d014d777d3d7d8ca5980e" translate="yes" xml:space="preserve">
          <source>Whenever you start writing a story you are describing a specific feature of an application, with a set of scenarios and examples describing this feature.</source>
          <target state="translated">스토리 작성을 시작할 때마다이 기능을 설명하는 시나리오 및 예제 세트와 함께 애플리케이션의 특정 기능을 설명합니다.</target>
        </trans-unit>
        <trans-unit id="bf72f289bf7a420f74f88a5e32e97f8178e296cb" translate="yes" xml:space="preserve">
          <source>Where &lt;code&gt;unit&lt;/code&gt; is the name of suite and the &lt;code&gt;-c&lt;/code&gt; option specifies the path to the &lt;code&gt;codeception.yml&lt;/code&gt; configuration file to use. In this example we will assume that there is &lt;code&gt;frontend/codeception.yml&lt;/code&gt; configuration file and that we will execute the unit tests for only that app.</source>
          <target state="translated">여기서 &lt;code&gt;unit&lt;/code&gt; 은 suite의 이름이고 &lt;code&gt;-c&lt;/code&gt; 옵션은 사용할 &lt;code&gt;codeception.yml&lt;/code&gt; 구성 파일 의 경로를 지정합니다 . 이 예제에서는 &lt;code&gt;frontend/codeception.yml&lt;/code&gt; 구성 파일이 있고 해당 앱에 대해서만 단위 테스트를 실행 한다고 가정합니다 .</target>
        </trans-unit>
        <trans-unit id="98aa05f1fd7d74ba119faf96a460664723b447a2" translate="yes" xml:space="preserve">
          <source>Where to start</source>
          <target state="translated">어디서 시작하나요</target>
        </trans-unit>
        <trans-unit id="0b171f1cd8c46b9166559a6fb291b8406f524e8a" translate="yes" xml:space="preserve">
          <source>While Behat is a great tool for Behavior Driven Development, you still may prefer to use Codeception as your primary testing framework. In case you want to unify all your tests (unit/functional/acceptance), and make them be executed with one runner, Codeception is a good choice. Also Codeception provides rich set of well-maintained modules for various testing backends like Selenium Webdriver, Symfony, Laravel, etc.</source>
          <target state="translated">Behat은 Behavior Driven Development의 훌륭한 도구이지만 Codeception을 기본 테스트 프레임 워크로 사용하는 것을 선호 할 수 있습니다. 모든 테스트 (단위 / 기능 / 수락)를 통합하고 하나의 러너로 실행하도록하려면 Codeception을 선택하는 것이 좋습니다. 또한 Codeception은 Selenium Webdriver, Symfony, Laravel 등과 같은 다양한 테스트 백엔드를 위해 잘 관리 된 풍부한 모듈 세트를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="9bfff85c65ed12913cfed5394d80beef4a60c86f" translate="yes" xml:space="preserve">
          <source>While WebDriver duplicates the functionality of PhpBrowser, it has its limitations: It can&amp;rsquo;t check headers since browsers don&amp;rsquo;t provide APIs for that. WebDriver also adds browser-specific functionality:</source>
          <target state="translated">WebDriver는 PhpBrowser의 기능을 복제하지만 한계가 있습니다. 브라우저는 API를 제공하지 않기 때문에 헤더를 확인할 수 없습니다. WebDriver는 브라우저 별 기능도 추가합니다.</target>
        </trans-unit>
        <trans-unit id="c15cfcdff069f6e81a07c6d4a708b21af419932b" translate="yes" xml:space="preserve">
          <source>While testing web application, you may need to wait for JavaScript events to occur. Due to its asynchronous nature, complex JavaScript interactions are hard to test. That&amp;rsquo;s why you may need to use waiters, actions with &lt;code&gt;wait&lt;/code&gt; prefix. They can be used to specify what event you expect to occur on a page, before continuing the test.</source>
          <target state="translated">웹 응용 프로그램을 테스트하는 동안 JavaScript 이벤트가 발생할 때까지 기다려야 할 수 있습니다. 비동기 특성으로 인해 복잡한 JavaScript 상호 작용을 테스트하기가 어렵습니다. 그렇기 때문에 &lt;code&gt;wait&lt;/code&gt; 접두사가있는 웨이터, 조치를 사용해야 할 수도 있습니다 . 테스트를 계속하기 전에 페이지에서 발생할 것으로 예상되는 이벤트를 지정하는 데 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3fe9457daee6cc7e4dc23ce3e36dec64ef35d960" translate="yes" xml:space="preserve">
          <source>Wildcards (*) can be used to specify multiple directories at once.</source>
          <target state="translated">와일드 카드 (*)를 사용하여 한 번에 여러 디렉토리를 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="49659e5a07d9ec9ddbc5ea2cded9dfed86235252" translate="yes" xml:space="preserve">
          <source>Will generate:</source>
          <target state="translated">다음을 생성합니다 :</target>
        </trans-unit>
        <trans-unit id="9a9be1ff9ce6f467c3887f4c847745f4429cb049" translate="yes" xml:space="preserve">
          <source>Will produce header:</source>
          <target state="translated">헤더를 생성합니다 :</target>
        </trans-unit>
        <trans-unit id="0062d398bd89f7e0d36746f3d04e4b56daceeefe" translate="yes" xml:space="preserve">
          <source>Will they use different databases?</source>
          <target state="translated">그들은 다른 데이터베이스를 사용할 것인가?</target>
        </trans-unit>
        <trans-unit id="de821cf76b340c70dc4c36176ebe51e03d164d18" translate="yes" xml:space="preserve">
          <source>Will they use different hosts?</source>
          <target state="translated">그들은 다른 호스트를 사용할 것인가?</target>
        </trans-unit>
        <trans-unit id="9be7820d2e38a1457f7e9bf3a24bd7138c366d43" translate="yes" xml:space="preserve">
          <source>With custom assertion methods you can improve readability of your tests and keep them focused around the specification.</source>
          <target state="translated">사용자 지정 어설 ​​션 방법을 사용하면 테스트의 가독성을 높이고 사양에 집중할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5807342a7b726b2601292a87a1cc7a54f381c8a5" translate="yes" xml:space="preserve">
          <source>With the &lt;code&gt;@depends&lt;/code&gt; annotation you can specify a test that should be passed before the current one. If that test fails, the current test will be skipped. You should pass the method name of the test you are relying on.</source>
          <target state="translated">&lt;code&gt;@depends&lt;/code&gt; 와 함께 주석 당신은 현재의 전에 통과해야 시험을 지정할 수 있습니다. 해당 테스트가 실패하면 현재 테스트를 건너 뜁니다. 의존하는 테스트의 메소드 이름을 전달해야합니다.</target>
        </trans-unit>
        <trans-unit id="12887cec14682364ce81f1c6559fcf03631374b0" translate="yes" xml:space="preserve">
          <source>With the &lt;code&gt;PhpBrowser&lt;/code&gt; you can click the links and fill in the forms. That will probably be the majority of your actions.</source>
          <target state="translated">&lt;code&gt;PhpBrowser&lt;/code&gt; 를 사용하면 링크를 클릭하고 양식을 채울 수 있습니다. 그것은 아마도 당신의 행동의 대부분 일 것입니다.</target>
        </trans-unit>
        <trans-unit id="48a4ecfb22c161c41a16aa95994eca290bf557ba" translate="yes" xml:space="preserve">
          <source>With the first argument you can run all tests from one suite:</source>
          <target state="translated">첫 번째 인수를 사용하면 하나의 제품군에서 모든 테스트를 실행할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1dc71c4e58cbea131efcbc0f2379bb2ee6a8f5f1" translate="yes" xml:space="preserve">
          <source>With this action you can redefine any method of any repository. Please, note: this fake repositories will be accessible through entity manager till the end of test.</source>
          <target state="translated">이 조치를 사용하면 저장소의 모든 메소드를 재정의 할 수 있습니다. 참고 :이 가짜 리포지토리는 테스트가 끝날 때까지 엔터티 관리자를 통해 액세스 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6167ff3c308c1a20f05fae38e65a53217dab7071" translate="yes" xml:space="preserve">
          <source>With this config we have the following test:</source>
          <target state="translated">이 구성으로 다음 테스트를 수행합니다.</target>
        </trans-unit>
        <trans-unit id="34536c85b525616eaeef3a4b7aac28978572a18e" translate="yes" xml:space="preserve">
          <source>With this procedure we also ensure that everyone in a team knows what has been developed, what has not, what has been tested and what has not.</source>
          <target state="translated">이 절차를 통해 팀의 모든 사람이 개발 된 사항, 아직 개발되지 않은 대상, 테스트 된 대상 및 그렇지 않은 대상을 알 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b659975d3bf6e904906b51ffe5f70ab625167f27" translate="yes" xml:space="preserve">
          <source>Within a long scenario, you should describe what actions you are going to perform and what results should be achieved. Comment methods like &lt;code&gt;amGoingTo&lt;/code&gt;, &lt;code&gt;expect&lt;/code&gt;, &lt;code&gt;expectTo&lt;/code&gt; help you in making tests more descriptive:</source>
          <target state="translated">긴 시나리오 내에서 수행 할 작업과 달성해야 할 결과를 설명해야합니다. &lt;code&gt;amGoingTo&lt;/code&gt; , &lt;code&gt;expect&lt;/code&gt; , &lt;code&gt;expectTo&lt;/code&gt; 와 같은 주석 메소드 테스트를보다 설명 적으로 작성하는 데 도움이됩니다.</target>
        </trans-unit>
        <trans-unit id="438973d56bc88af21301c6acae850b4fe4f8deb1" translate="yes" xml:space="preserve">
          <source>Working Directory (Docker/Shared Mounts)</source>
          <target state="translated">작업 디렉토리 (Docker / Shared Mounts)</target>
        </trans-unit>
        <trans-unit id="7829ae01aea0fe575577fca772b874f93430503f" translate="yes" xml:space="preserve">
          <source>Working with Data</source>
          <target state="translated">데이터 작업</target>
        </trans-unit>
        <trans-unit id="3dbb3995c61f386570f4707ea132c886e98099b7" translate="yes" xml:space="preserve">
          <source>Works with MongoDb database.</source>
          <target state="translated">MongoDb 데이터베이스와 함께 작동합니다.</target>
        </trans-unit>
        <trans-unit id="74bcef5d1b42de60cdf0e1be2183dfb55ad5f1aa" translate="yes" xml:space="preserve">
          <source>Works with Queue servers.</source>
          <target state="translated">큐 서버와 함께 작동합니다.</target>
        </trans-unit>
        <trans-unit id="b0c8c2b5ae01262bdf9db552a68771ac132fb199" translate="yes" xml:space="preserve">
          <source>Works with SFTP/FTP servers.</source>
          <target state="translated">SFTP / FTP 서버와 함께 작동합니다.</target>
        </trans-unit>
        <trans-unit id="d61d670990ac3aab4a236b0d6dcd0aabe972ecce" translate="yes" xml:space="preserve">
          <source>Wrapper for basic shell commands and shell output</source>
          <target state="translated">기본 쉘 명령 및 쉘 출력을위한 랩퍼</target>
        </trans-unit>
        <trans-unit id="6f9a434d282ccdb81f4e2753993c6e99fa45f544" translate="yes" xml:space="preserve">
          <source>Writing Functional Tests</source>
          <target state="translated">기능 테스트 작성</target>
        </trans-unit>
        <trans-unit id="d2168eecb88753b51dc5b0b8dd0145c98c548240" translate="yes" xml:space="preserve">
          <source>Writing a Sample Test</source>
          <target state="translated">샘플 테스트 작성</target>
        </trans-unit>
        <trans-unit id="2d50dc6bc9bbc6a178c7bdd43ce966bb499f0bed" translate="yes" xml:space="preserve">
          <source>Writing acceptance tests with Codeception and PhpBrowser is a good start. You can easily test your Joomla, Drupal, WordPress sites, as well as those made with frameworks. Writing acceptance tests is like describing a tester&amp;rsquo;s actions in PHP. They are quite readable and very easy to write. If you need to access the database, you can use the &lt;a href=&quot;modules/db&quot;&gt;Db Module&lt;/a&gt;.</source>
          <target state="translated">Codeception과 PhpBrowser로 수락 테스트를 작성하는 것이 좋습니다. Joomla, Drupal, WordPress 사이트 및 프레임 워크로 만든 사이트를 쉽게 테스트 할 수 있습니다. 수락 테스트 작성은 PHP에서 테스터의 동작을 설명하는 것과 같습니다. 읽기 쉽고 쓰기가 매우 쉽습니다. 데이터베이스에 액세스해야하는 경우 &lt;a href=&quot;modules/db&quot;&gt;Db 모듈을&lt;/a&gt; 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="7b3c5c91a420836835f3345db35033e94f5372eb" translate="yes" xml:space="preserve">
          <source>Writing good locators can be tricky. The Mozilla team has written an excellent guide titled &lt;a href=&quot;https://blog.mozilla.org/webqa/2013/09/26/writing-reliable-locators-for-selenium-and-webdriver-tests/&quot;&gt;Writing reliable locators for Selenium and WebDriver tests&lt;/a&gt;.</source>
          <target state="translated">좋은 로케이터를 작성하는 것은 까다로울 수 있습니다. Mozilla 팀은 &lt;a href=&quot;https://blog.mozilla.org/webqa/2013/09/26/writing-reliable-locators-for-selenium-and-webdriver-tests/&quot;&gt;Selenium 및 WebDriver 테스트를위한 신뢰할 수있는 로케이터 작성&lt;/a&gt; 이라는 훌륭한 안내서를 작성했습니다 .</target>
        </trans-unit>
        <trans-unit id="10f4f68224e7c7e543289d06cb5fe6631efade42" translate="yes" xml:space="preserve">
          <source>XML Reports</source>
          <target state="translated">XML 보고서</target>
        </trans-unit>
        <trans-unit id="ca7fbdb1c269c945cab7232141e97d7814a5323e" translate="yes" xml:space="preserve">
          <source>XML and HTML reports are stored to the &lt;code&gt;_output&lt;/code&gt; directory. The best way to review report is to open &lt;code&gt;index.html&lt;/code&gt; from &lt;code&gt;tests/_output/coverage&lt;/code&gt; in your browser. XML clover reports are used by IDEs (like PHPStorm) or Continuous Integration servers (like Jenkins).</source>
          <target state="translated">XML 및 HTML 보고서는 &lt;code&gt;_output&lt;/code&gt; 디렉토리에 저장됩니다 . 검토 보고서에 가장 좋은 방법은 여는 것입니다 &lt;code&gt;index.html&lt;/code&gt; 을 에서 &lt;code&gt;tests/_output/coverage&lt;/code&gt; 브라우저입니다. XML 클로버 보고서는 PHPStorm과 같은 IDE 또는 Jenkins와 같은 Continuous Integration 서버에서 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="0a3d7ea26ec76d93907265c923a9954480d5facb" translate="yes" xml:space="preserve">
          <source>XPath</source>
          <target state="translated">XPath</target>
        </trans-unit>
        <trans-unit id="7543ba4469ea015abaf3cf17366029042bea848e" translate="yes" xml:space="preserve">
          <source>Xdebug</source>
          <target state="translated">Xdebug</target>
        </trans-unit>
        <trans-unit id="35b2f145f2ddb6ae9332e14d2d6a41671d60a339" translate="yes" xml:space="preserve">
          <source>Xml - actions for validating XML responses (no Json responses)</source>
          <target state="translated">Xml-XML 응답 유효성 검증을위한 조치 (Json 응답 없음)</target>
        </trans-unit>
        <trans-unit id="50c2e9fe4e6afcb0d93d50618645b84b7ff985a9" translate="yes" xml:space="preserve">
          <source>XmlBuilder::__construct()</source>
          <target state="translated">XmlBuilder::__construct()</target>
        </trans-unit>
        <trans-unit id="a53a7ebc4691133e5c610d3d460484831167e880" translate="yes" xml:space="preserve">
          <source>XmlBuilder::__get()</source>
          <target state="translated">XmlBuilder::__get()</target>
        </trans-unit>
        <trans-unit id="8afdc7e8d85a637a32dcf7527a69dc16a6943d66" translate="yes" xml:space="preserve">
          <source>XmlBuilder::__toString()</source>
          <target state="translated">XmlBuilder::__toString()</target>
        </trans-unit>
        <trans-unit id="4605a831e0e066cde82c14ff881aca431033a78a" translate="yes" xml:space="preserve">
          <source>XmlBuilder::attr()</source>
          <target state="translated">XmlBuilder::attr()</target>
        </trans-unit>
        <trans-unit id="4b165dcbd0d832449a71c52fbbd9363680b01386" translate="yes" xml:space="preserve">
          <source>XmlBuilder::getDom()</source>
          <target state="translated">XmlBuilder::getDom()</target>
        </trans-unit>
        <trans-unit id="4e78080bb4647f6012bba8d34d988d6a6b20b7e2" translate="yes" xml:space="preserve">
          <source>XmlBuilder::parent()</source>
          <target state="translated">XmlBuilder::parent()</target>
        </trans-unit>
        <trans-unit id="83ff3ed9821a937fb6b243849d17ac1d9fdf2fb3" translate="yes" xml:space="preserve">
          <source>XmlBuilder::parents()</source>
          <target state="translated">XmlBuilder::parents()</target>
        </trans-unit>
        <trans-unit id="d1fd8f93f062fc61dff83163f1aa8923729866dd" translate="yes" xml:space="preserve">
          <source>XmlBuilder::val()</source>
          <target state="translated">XmlBuilder::val()</target>
        </trans-unit>
        <trans-unit id="5397e0583f14f6c88de06b1ef28f460a1fb5b0ae" translate="yes" xml:space="preserve">
          <source>Yes</source>
          <target state="translated">Yes</target>
        </trans-unit>
        <trans-unit id="6ef01e70cdcc92c009d302358932b2a2f83f9795" translate="yes" xml:space="preserve">
          <source>Yii2</source>
          <target state="translated">Yii2</target>
        </trans-unit>
        <trans-unit id="535e4205307bd75057a87acc789b39ba191d6e47" translate="yes" xml:space="preserve">
          <source>Yii2 tests are included in &lt;a href=&quot;https://github.com/yiisoft/yii2-app-basic&quot;&gt;Basic&lt;/a&gt; and &lt;a href=&quot;https://github.com/yiisoft/yii2-app-advanced&quot;&gt;Advanced&lt;/a&gt; application templates. Follow the Yii2 guides to start.</source>
          <target state="translated">Yii2 테스트는 &lt;a href=&quot;https://github.com/yiisoft/yii2-app-basic&quot;&gt;기본&lt;/a&gt; 및 &lt;a href=&quot;https://github.com/yiisoft/yii2-app-advanced&quot;&gt;고급&lt;/a&gt; 애플리케이션 템플릿에 포함되어 있습니다 . Yii2 가이드에 따라 시작하십시오.</target>
        </trans-unit>
        <trans-unit id="1ebb4ca2768ad9386f32fbaf2ac98ec5ccbc21e3" translate="yes" xml:space="preserve">
          <source>Yii2::_findElements</source>
          <target state="translated">Yii2::_findElements</target>
        </trans-unit>
        <trans-unit id="e3856d01f13d7ac78280a7b0cbb7bccd1cd41fef" translate="yes" xml:space="preserve">
          <source>Yii2::_getResponseContent</source>
          <target state="translated">Yii2::_getResponseContent</target>
        </trans-unit>
        <trans-unit id="928011d1d82c79a3d0c30eed4ac863cbb2f2cd48" translate="yes" xml:space="preserve">
          <source>Yii2::_loadPage</source>
          <target state="translated">Yii2::_loadPage</target>
        </trans-unit>
        <trans-unit id="95d0d154fc926c999e4213e73c3c4179cf94f501" translate="yes" xml:space="preserve">
          <source>Yii2::_request</source>
          <target state="translated">Yii2::_request</target>
        </trans-unit>
        <trans-unit id="eba83fd044352feed5f085f90b18de5178a04bcd" translate="yes" xml:space="preserve">
          <source>Yii2::_savePageSource</source>
          <target state="translated">Yii2::_savePageSource</target>
        </trans-unit>
        <trans-unit id="b3b23b8095658947bf741eaff7b95e126afea4f7" translate="yes" xml:space="preserve">
          <source>Yii2::amHttpAuthenticated</source>
          <target state="translated">Yii2::amHttpAuthenticated</target>
        </trans-unit>
        <trans-unit id="a8430e01295a4fa5534c84f0824cb8acfbf5fc06" translate="yes" xml:space="preserve">
          <source>Yii2::amLoggedInAs</source>
          <target state="translated">Yii2::amLoggedInAs</target>
        </trans-unit>
        <trans-unit id="a2be8b4368d7e284c0cde0672606296032111562" translate="yes" xml:space="preserve">
          <source>Yii2::amOnPage</source>
          <target state="translated">Yii2::amOnPage</target>
        </trans-unit>
        <trans-unit id="202ed1d2dd2dabfcb488651f8c6d8780b37032ea" translate="yes" xml:space="preserve">
          <source>Yii2::amOnRoute</source>
          <target state="translated">Yii2::amOnRoute</target>
        </trans-unit>
        <trans-unit id="df5d4e9652387e7c5f65cd8e4635ac791e1db332" translate="yes" xml:space="preserve">
          <source>Yii2::attachFile</source>
          <target state="translated">Yii2::attachFile</target>
        </trans-unit>
        <trans-unit id="c50a7e6287042fa9d464b40181b7ff06e43c8e08" translate="yes" xml:space="preserve">
          <source>Yii2::checkOption</source>
          <target state="translated">Yii2::checkOption</target>
        </trans-unit>
        <trans-unit id="4c488bc058dd265f891ef5a5602467a90e3186b7" translate="yes" xml:space="preserve">
          <source>Yii2::click</source>
          <target state="translated">Yii2::click</target>
        </trans-unit>
        <trans-unit id="9ba683525e6b4d4c6073c0085f9538274fb1b6a7" translate="yes" xml:space="preserve">
          <source>Yii2::createAndSetCsrfCookie</source>
          <target state="translated">Yii2::createAndSetCsrfCookie</target>
        </trans-unit>
        <trans-unit id="9770d0b6c69367e52dd525987600fa274945d4e8" translate="yes" xml:space="preserve">
          <source>Yii2::deleteHeader</source>
          <target state="translated">Yii2::deleteHeader</target>
        </trans-unit>
        <trans-unit id="e493070be54ff179f15c9af4f3603d784bb56bd7" translate="yes" xml:space="preserve">
          <source>Yii2::dontSee</source>
          <target state="translated">Yii2::dontSee</target>
        </trans-unit>
        <trans-unit id="dd8b34d5e47d855c934276253a9433178d9d84c9" translate="yes" xml:space="preserve">
          <source>Yii2::dontSeeCheckboxIsChecked</source>
          <target state="translated">Yii2::dontSeeCheckboxIsChecked</target>
        </trans-unit>
        <trans-unit id="df76f7bd1210ecaf46e6b40f911ad9540ea58733" translate="yes" xml:space="preserve">
          <source>Yii2::dontSeeCookie</source>
          <target state="translated">Yii2::dontSeeCookie</target>
        </trans-unit>
        <trans-unit id="c95947d0af2a05ed1650cfb78b9179b2f543d0c3" translate="yes" xml:space="preserve">
          <source>Yii2::dontSeeCurrentUrlEquals</source>
          <target state="translated">Yii2::dontSeeCurrentUrlEquals</target>
        </trans-unit>
        <trans-unit id="f54242192050a8a25864a518d80946fb4a138266" translate="yes" xml:space="preserve">
          <source>Yii2::dontSeeCurrentUrlMatches</source>
          <target state="translated">Yii2::dontSeeCurrentUrlMatches</target>
        </trans-unit>
        <trans-unit id="3d2613101de2d87e3dcea0719f4a583538cfb22e" translate="yes" xml:space="preserve">
          <source>Yii2::dontSeeElement</source>
          <target state="translated">Yii2::dontSeeElement</target>
        </trans-unit>
        <trans-unit id="d619eeab36c6dcf1a9d3e9c8aa631d63cee70767" translate="yes" xml:space="preserve">
          <source>Yii2::dontSeeEmailIsSent</source>
          <target state="translated">Yii2::dontSeeEmailIsSent</target>
        </trans-unit>
        <trans-unit id="f850ab69d8a1fd16ac6233e87e6342fdc222a3f6" translate="yes" xml:space="preserve">
          <source>Yii2::dontSeeInCurrentUrl</source>
          <target state="translated">Yii2::dontSeeInCurrentUrl</target>
        </trans-unit>
        <trans-unit id="2f3a5e9bfaf9b5e99e30343822ca60fd4f092328" translate="yes" xml:space="preserve">
          <source>Yii2::dontSeeInField</source>
          <target state="translated">Yii2::dontSeeInField</target>
        </trans-unit>
        <trans-unit id="21dd0b0ffa10eb0fa149601a2e4f88832f40fed4" translate="yes" xml:space="preserve">
          <source>Yii2::dontSeeInFormFields</source>
          <target state="translated">Yii2::dontSeeInFormFields</target>
        </trans-unit>
        <trans-unit id="cd8b6a2a33d0a5951a5799fbec6a7b3b2848653e" translate="yes" xml:space="preserve">
          <source>Yii2::dontSeeInSource</source>
          <target state="translated">Yii2::dontSeeInSource</target>
        </trans-unit>
        <trans-unit id="42e94e92d65e12ac266571e128ebbc3946126b62" translate="yes" xml:space="preserve">
          <source>Yii2::dontSeeInTitle</source>
          <target state="translated">Yii2::dontSeeInTitle</target>
        </trans-unit>
        <trans-unit id="6c6566214fdc031f9023893a3c70f81a8285c36f" translate="yes" xml:space="preserve">
          <source>Yii2::dontSeeLink</source>
          <target state="translated">Yii2::dontSeeLink</target>
        </trans-unit>
        <trans-unit id="cde717b36214916eec606cb820f00108ace739d9" translate="yes" xml:space="preserve">
          <source>Yii2::dontSeeOptionIsSelected</source>
          <target state="translated">Yii2::dontSeeOptionIsSelected</target>
        </trans-unit>
        <trans-unit id="a1ab0b3892e290e51113797cbd2e052f1dfd5822" translate="yes" xml:space="preserve">
          <source>Yii2::dontSeeRecord</source>
          <target state="translated">Yii2::dontSeeRecord</target>
        </trans-unit>
        <trans-unit id="de643aad459ea3bd5fa45acc2055f2e29dcb3632" translate="yes" xml:space="preserve">
          <source>Yii2::dontSeeResponseCodeIs</source>
          <target state="translated">Yii2::dontSeeResponseCodeIs</target>
        </trans-unit>
        <trans-unit id="93ef6b025c46a96a4d7d65e13b679ab53f0d8250" translate="yes" xml:space="preserve">
          <source>Yii2::fillField</source>
          <target state="translated">Yii2::fillField</target>
        </trans-unit>
        <trans-unit id="bf9e72fec7ea51abed4bd3d675671ef9d9c03791" translate="yes" xml:space="preserve">
          <source>Yii2::getInternalDomains</source>
          <target state="translated">Yii2::getInternalDomains</target>
        </trans-unit>
        <trans-unit id="4b9978ba040fcc4eeda55be8916b16fd6a1b9cf4" translate="yes" xml:space="preserve">
          <source>Yii2::grabAttributeFrom</source>
          <target state="translated">Yii2::grabAttributeFrom</target>
        </trans-unit>
        <trans-unit id="cf51acea4c61970566eee9b3ba335342e5c5510d" translate="yes" xml:space="preserve">
          <source>Yii2::grabComponent</source>
          <target state="translated">Yii2::grabComponent</target>
        </trans-unit>
        <trans-unit id="ae825d3c2175175e0860064489034bbefffc7371" translate="yes" xml:space="preserve">
          <source>Yii2::grabCookie</source>
          <target state="translated">Yii2::grabCookie</target>
        </trans-unit>
        <trans-unit id="81fc182b384e8be404dd19fc73729e510479552e" translate="yes" xml:space="preserve">
          <source>Yii2::grabFixture</source>
          <target state="translated">Yii2::grabFixture</target>
        </trans-unit>
        <trans-unit id="4c17c69c87ee4624ee47b10b1cb40014dff122ae" translate="yes" xml:space="preserve">
          <source>Yii2::grabFixtures</source>
          <target state="translated">Yii2::grabFixtures</target>
        </trans-unit>
        <trans-unit id="13635c5ac000896d4a058a1c2596dc35fe85378d" translate="yes" xml:space="preserve">
          <source>Yii2::grabFromCurrentUrl</source>
          <target state="translated">Yii2::grabFromCurrentUrl</target>
        </trans-unit>
        <trans-unit id="03bd25e7659025f6d5a7470bdf92572da07961bb" translate="yes" xml:space="preserve">
          <source>Yii2::grabLastSentEmail</source>
          <target state="translated">Yii2::grabLastSentEmail</target>
        </trans-unit>
        <trans-unit id="285190339811fbaabfb7a3de38780b92cfc77187" translate="yes" xml:space="preserve">
          <source>Yii2::grabMultiple</source>
          <target state="translated">Yii2::grabMultiple</target>
        </trans-unit>
        <trans-unit id="5d045b504a5ae62e9c7481987478bdb4cc69cc8c" translate="yes" xml:space="preserve">
          <source>Yii2::grabPageSource</source>
          <target state="translated">Yii2::grabPageSource</target>
        </trans-unit>
        <trans-unit id="2424caa4799073e0198dee68172855e29f37c777" translate="yes" xml:space="preserve">
          <source>Yii2::grabRecord</source>
          <target state="translated">Yii2::grabRecord</target>
        </trans-unit>
        <trans-unit id="499c5749bde2e32ae179230fcb157ce88f0da9f7" translate="yes" xml:space="preserve">
          <source>Yii2::grabSentEmails</source>
          <target state="translated">Yii2::grabSentEmails</target>
        </trans-unit>
        <trans-unit id="0a076dcd58b37990a4efae39a8a074b3dbb4e4b7" translate="yes" xml:space="preserve">
          <source>Yii2::grabTextFrom</source>
          <target state="translated">Yii2::grabTextFrom</target>
        </trans-unit>
        <trans-unit id="95c2762f3ab073b8bcbada7f6428781a168c647c" translate="yes" xml:space="preserve">
          <source>Yii2::grabValueFrom</source>
          <target state="translated">Yii2::grabValueFrom</target>
        </trans-unit>
        <trans-unit id="8480ac7ace552064519c9e5e7a89fca3f6a4ce97" translate="yes" xml:space="preserve">
          <source>Yii2::haveFixtures</source>
          <target state="translated">Yii2::haveFixtures</target>
        </trans-unit>
        <trans-unit id="939bd5162b87907c37cde49e19202a86e194d7a8" translate="yes" xml:space="preserve">
          <source>Yii2::haveHttpHeader</source>
          <target state="translated">Yii2::haveHttpHeader</target>
        </trans-unit>
        <trans-unit id="c0327a72da78000d5df6a1be2e94eba383a3e243" translate="yes" xml:space="preserve">
          <source>Yii2::haveRecord</source>
          <target state="translated">Yii2::haveRecord</target>
        </trans-unit>
        <trans-unit id="97a0c59339b141fafe73cc0a6b714bd9b1e1ca09" translate="yes" xml:space="preserve">
          <source>Yii2::makeHtmlSnapshot</source>
          <target state="translated">Yii2::makeHtmlSnapshot</target>
        </trans-unit>
        <trans-unit id="c580b2865455bcec9529588c78fe9b0c6da28a3c" translate="yes" xml:space="preserve">
          <source>Yii2::moveBack</source>
          <target state="translated">Yii2::moveBack</target>
        </trans-unit>
        <trans-unit id="35a78aa4c26281681c36f342ba516885cb11b9b3" translate="yes" xml:space="preserve">
          <source>Yii2::resetCookie</source>
          <target state="translated">Yii2::resetCookie</target>
        </trans-unit>
        <trans-unit id="8838fc5ff53a54aff2e161f671b3ba8b3bc41a54" translate="yes" xml:space="preserve">
          <source>Yii2::see</source>
          <target state="translated">Yii2::see</target>
        </trans-unit>
        <trans-unit id="b9cb32bb6d293cbc10fb4040d6baee30f3ec3b16" translate="yes" xml:space="preserve">
          <source>Yii2::seeCheckboxIsChecked</source>
          <target state="translated">Yii2::seeCheckboxIsChecked</target>
        </trans-unit>
        <trans-unit id="0b9249f82611883999c7f6dc40dc0f45c54d3286" translate="yes" xml:space="preserve">
          <source>Yii2::seeCookie</source>
          <target state="translated">Yii2::seeCookie</target>
        </trans-unit>
        <trans-unit id="a157ceb703d44fd014f0528a208d2749995f943f" translate="yes" xml:space="preserve">
          <source>Yii2::seeCurrentUrlEquals</source>
          <target state="translated">Yii2::seeCurrentUrlEquals</target>
        </trans-unit>
        <trans-unit id="0fdec206e8341bd8dda259470afbfe9d6102609c" translate="yes" xml:space="preserve">
          <source>Yii2::seeCurrentUrlMatches</source>
          <target state="translated">Yii2::seeCurrentUrlMatches</target>
        </trans-unit>
        <trans-unit id="fa0dea3ac2568e866a2dadb07d339998a077f2bf" translate="yes" xml:space="preserve">
          <source>Yii2::seeElement</source>
          <target state="translated">Yii2::seeElement</target>
        </trans-unit>
        <trans-unit id="a73bca47237a960895c370742fd6b48353a8d0fd" translate="yes" xml:space="preserve">
          <source>Yii2::seeEmailIsSent</source>
          <target state="translated">Yii2::seeEmailIsSent</target>
        </trans-unit>
        <trans-unit id="b71b70874bed21efdc78e803ac862dbddfc6de9f" translate="yes" xml:space="preserve">
          <source>Yii2::seeInCurrentUrl</source>
          <target state="translated">Yii2::seeInCurrentUrl</target>
        </trans-unit>
        <trans-unit id="0b4358895e01740486f803bbbec48ac4c5d3bff2" translate="yes" xml:space="preserve">
          <source>Yii2::seeInField</source>
          <target state="translated">Yii2::seeInField</target>
        </trans-unit>
        <trans-unit id="a7a5c889513096abef9dd656a3ff9012262e5bb8" translate="yes" xml:space="preserve">
          <source>Yii2::seeInFormFields</source>
          <target state="translated">Yii2::seeInFormFields</target>
        </trans-unit>
        <trans-unit id="639545be3b061b1e65c731b53e79096ae351cae1" translate="yes" xml:space="preserve">
          <source>Yii2::seeInSource</source>
          <target state="translated">Yii2::seeInSource</target>
        </trans-unit>
        <trans-unit id="3fbf8b84d2812c5b7ae78fb6b355ada2ba7ab108" translate="yes" xml:space="preserve">
          <source>Yii2::seeInTitle</source>
          <target state="translated">Yii2::seeInTitle</target>
        </trans-unit>
        <trans-unit id="837525c75da7ae29048d455a54b2e0e3144e2d80" translate="yes" xml:space="preserve">
          <source>Yii2::seeLink</source>
          <target state="translated">Yii2::seeLink</target>
        </trans-unit>
        <trans-unit id="a86fd1cb32fa6809dec02589f244746690490276" translate="yes" xml:space="preserve">
          <source>Yii2::seeNumberOfElements</source>
          <target state="translated">Yii2::seeNumberOfElements</target>
        </trans-unit>
        <trans-unit id="73dd49eb6dc5de80197ffa6d1eabb1083adb9cc6" translate="yes" xml:space="preserve">
          <source>Yii2::seeOptionIsSelected</source>
          <target state="translated">Yii2::seeOptionIsSelected</target>
        </trans-unit>
        <trans-unit id="0e8f3e4a7f398e61688cf120efdf4943d771f930" translate="yes" xml:space="preserve">
          <source>Yii2::seePageNotFound</source>
          <target state="translated">Yii2::seePageNotFound</target>
        </trans-unit>
        <trans-unit id="8fe47599e97863ee53d204848a4139f6a4c9348a" translate="yes" xml:space="preserve">
          <source>Yii2::seeRecord</source>
          <target state="translated">Yii2::seeRecord</target>
        </trans-unit>
        <trans-unit id="47919aa134fdae91c3a87d7521e4090b110dbfcb" translate="yes" xml:space="preserve">
          <source>Yii2::seeResponseCodeIs</source>
          <target state="translated">Yii2::seeResponseCodeIs</target>
        </trans-unit>
        <trans-unit id="2283f9f1e6775482b22e08b499d26b3166fc5943" translate="yes" xml:space="preserve">
          <source>Yii2::seeResponseCodeIsBetween</source>
          <target state="translated">Yii2::seeResponseCodeIsBetween</target>
        </trans-unit>
        <trans-unit id="e4768c846e483bc5963ba6d93c650bc4cccc00a0" translate="yes" xml:space="preserve">
          <source>Yii2::seeResponseCodeIsClientError</source>
          <target state="translated">Yii2::seeResponseCodeIsClientError</target>
        </trans-unit>
        <trans-unit id="cc4417e93667fcc4a43bbecd1ade6f3bdbf4d823" translate="yes" xml:space="preserve">
          <source>Yii2::seeResponseCodeIsRedirection</source>
          <target state="translated">Yii2::seeResponseCodeIsRedirection</target>
        </trans-unit>
        <trans-unit id="20af62898709fa0e132adfb1c616394a7ac49e25" translate="yes" xml:space="preserve">
          <source>Yii2::seeResponseCodeIsServerError</source>
          <target state="translated">Yii2::seeResponseCodeIsServerError</target>
        </trans-unit>
        <trans-unit id="698ccc3fa1fdee7777069ec13982faa59d21cade" translate="yes" xml:space="preserve">
          <source>Yii2::seeResponseCodeIsSuccessful</source>
          <target state="translated">Yii2::seeResponseCodeIsSuccessful</target>
        </trans-unit>
        <trans-unit id="ed23405c2f2b2f54b56440277f5bf990f1daebad" translate="yes" xml:space="preserve">
          <source>Yii2::selectOption</source>
          <target state="translated">Yii2::selectOption</target>
        </trans-unit>
        <trans-unit id="0a336a184c4cabaf01b601966b269ad61a8aa7f7" translate="yes" xml:space="preserve">
          <source>Yii2::sendAjaxGetRequest</source>
          <target state="translated">Yii2::sendAjaxGetRequest</target>
        </trans-unit>
        <trans-unit id="98469385e028347ce2e7c1b1a772ada329ee4a08" translate="yes" xml:space="preserve">
          <source>Yii2::sendAjaxPostRequest</source>
          <target state="translated">Yii2::sendAjaxPostRequest</target>
        </trans-unit>
        <trans-unit id="e280cb79fe57bb0ccd11d249b36c948511566d3f" translate="yes" xml:space="preserve">
          <source>Yii2::sendAjaxRequest</source>
          <target state="translated">Yii2::sendAjaxRequest</target>
        </trans-unit>
        <trans-unit id="dfaaa4086bd90519f742222d3e088db682e302fa" translate="yes" xml:space="preserve">
          <source>Yii2::setCookie</source>
          <target state="translated">Yii2::setCookie</target>
        </trans-unit>
        <trans-unit id="b4d37fb5e1351feb1b36478d3d4e57a01391395d" translate="yes" xml:space="preserve">
          <source>Yii2::submitForm</source>
          <target state="translated">Yii2::submitForm</target>
        </trans-unit>
        <trans-unit id="38b72f00a209d794de1af543204fe2888352a0f4" translate="yes" xml:space="preserve">
          <source>Yii2::switchToIframe</source>
          <target state="translated">Yii2::switchToIframe</target>
        </trans-unit>
        <trans-unit id="2abfb91d171550c44b52fcc623b16a00e0b3954d" translate="yes" xml:space="preserve">
          <source>Yii2::uncheckOption</source>
          <target state="translated">Yii2::uncheckOption</target>
        </trans-unit>
        <trans-unit id="3f33cb57b756cba821a1c56997ec42b1e898b186" translate="yes" xml:space="preserve">
          <source>You are allowed to execute as much requests as you need inside test.</source>
          <target state="translated">내부 테스트에 필요한만큼의 요청을 실행할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1a18bddc87b4ed7fe797d48fccf3b6cc8c71ceff" translate="yes" xml:space="preserve">
          <source>You can access &lt;code&gt;\Codeception\Scenario&lt;/code&gt; in the Cept and Cest formats. In Cept, the &lt;code&gt;$scenario&lt;/code&gt; variable is available by default, while in Cest you should retrieve it through dependency injection:</source>
          <target state="translated">&lt;code&gt;\Codeception\Scenario&lt;/code&gt; 및 Cest 형식으로 \ Codeception \ Scenario 에 액세스 할 수 있습니다 . Cept에서는 &lt;code&gt;$scenario&lt;/code&gt; 변수가 기본적으로 사용 가능하지만 Cest에서는 의존성 주입을 통해 변수를 검색해야합니다.</target>
        </trans-unit>
        <trans-unit id="9fba267dc1501e84dbe87da883290fc3340ddbae" translate="yes" xml:space="preserve">
          <source>You can add your own commands to Codeception.</source>
          <target state="translated">Codeception에 고유 한 명령을 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8228ad74bec0231f17be264e644e27f2101c7644" translate="yes" xml:space="preserve">
          <source>You can also access framework globals inside a test or access the dependency injection container inside the &lt;code&gt;Helper\Functional&lt;/code&gt; class:</source>
          <target state="translated">또한 테스트 내의 프레임 워크 전역에 액세스하거나 &lt;code&gt;Helper\Functional&lt;/code&gt; 클래스 내의 종속성 주입 컨테이너에 액세스 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="d7daa726c8bcec36618cefb3311a5116314822c3" translate="yes" xml:space="preserve">
          <source>You can also add custom filters y accessing &lt;code&gt;JsonType::addCustomFilter&lt;/code&gt; method. See &lt;a href=&quot;../reference/jsontype&quot;&gt;JsonType reference&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;JsonType::addCustomFilter&lt;/code&gt; 메소드에 액세스하는 사용자 정의 필터를 추가 할 수도 있습니다 . &lt;a href=&quot;../reference/jsontype&quot;&gt;JsonType 참조를 참조&lt;/a&gt; 하십시오 .</target>
        </trans-unit>
        <trans-unit id="7d0412903cf9cc7d097812c523765833ce8e83e5" translate="yes" xml:space="preserve">
          <source>You can also apply filters to check values. Filter can be applied with &lt;code&gt;:&lt;/code&gt; char after the type declaration.</source>
          <target state="translated">필터를 적용하여 값을 확인할 수도 있습니다. 형식 선언 후 &lt;code&gt;:&lt;/code&gt; char을 사용하여 필터를 적용 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="c6f762dcc2c9625b4672efb174b3424f99af48e1" translate="yes" xml:space="preserve">
          <source>You can also define environments in separate configuration files placed in the directory specified by the &lt;code&gt;envs&lt;/code&gt; option in the &lt;code&gt;paths&lt;/code&gt; configuration:</source>
          <target state="translated">&lt;code&gt;paths&lt;/code&gt; 구성 에서 &lt;code&gt;envs&lt;/code&gt; 옵션으로 지정된 디렉토리에있는 별도의 구성 파일에서 환경을 정의 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="8814b0a90f46da5fc8ca6c5b4c1b1a048c76d597" translate="yes" xml:space="preserve">
          <source>You can also emulate a JavaScript submission by not specifying any buttons in the third parameter to submitForm.</source>
          <target state="translated">submitForm에 세 번째 매개 변수에 단추를 지정하지 않으면 JavaScript 제출을 에뮬레이트 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="84bf662869afbcb725e34987cab712cb9356965a" translate="yes" xml:space="preserve">
          <source>You can also use &lt;code&gt;tryTo&lt;/code&gt; as condition for your tests:</source>
          <target state="translated">&lt;code&gt;tryTo&lt;/code&gt; 를 테스트 조건으로 사용할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="250e6dd4a489fedf46715c39343e14b0f900fe49" translate="yes" xml:space="preserve">
          <source>You can also use nested data type structures:</source>
          <target state="translated">중첩 된 데이터 형식 구조를 사용할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="501bdefe44e8bb5e7ebf5b058d9608e40aa1af08" translate="yes" xml:space="preserve">
          <source>You can also use the &lt;code&gt;@dataProvider&lt;/code&gt; annotation for creating dynamic examples for &lt;a href=&quot;#Cest-Classes&quot;&gt;Cest classes&lt;/a&gt;, using a &lt;strong&gt;protected method&lt;/strong&gt; for providing example data:</source>
          <target state="translated">예제 데이터를 제공 하는 &lt;strong&gt;보호 된 메소드&lt;/strong&gt; 를 사용하여 &lt;a href=&quot;#Cest-Classes&quot;&gt;Cest 클래스에&lt;/a&gt; 대한 동적 예제를 작성 하기 위해 &lt;code&gt;@dataProvider&lt;/code&gt; 주석을 사용할 수도 있습니다 .&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d2c35ccf229e1de96e97d6deb64c1c658b3b41a1" translate="yes" xml:space="preserve">
          <source>You can check that a specific HTML element exists (or doesn&amp;rsquo;t) on a page:</source>
          <target state="translated">페이지에 특정 HTML 요소가 존재하거나 존재하지 않는지 확인할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="39d11a74c9309ab89b998dcc73c2f306daa12efd" translate="yes" xml:space="preserve">
          <source>You can control execution flow with &lt;code&gt;@before&lt;/code&gt; and &lt;code&gt;@after&lt;/code&gt; annotations. You may move common actions into protected (non-test) methods and invoke them before or after the test method by putting them into annotations. It is possible to invoke several methods by using more than one &lt;code&gt;@before&lt;/code&gt; or &lt;code&gt;@after&lt;/code&gt; annotation. Methods are invoked in order from top to bottom.</source>
          <target state="translated">&lt;code&gt;@before&lt;/code&gt; 및 &lt;code&gt;@after&lt;/code&gt; 주석을 사용 하여 실행 흐름을 제어 할 수 있습니다 . 공통 조치를 보호 된 (테스트되지 않은) 메소드로 이동하고 주석에 넣어서 테스트 메소드 전후에 호출 할 수 있습니다. 하나 이상의 &lt;code&gt;@before&lt;/code&gt; 또는 &lt;code&gt;@after&lt;/code&gt; 어노테이션 을 사용하여 여러 메소드를 호출 할 수 있습니다 . 메소드는 위에서 아래로 순서대로 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="f88d6f674f08aaaba4762736fe2fba6ac2cc2dbe" translate="yes" xml:space="preserve">
          <source>You can create a Cest file by running the command:</source>
          <target state="translated">다음 명령을 실행하여 Cest 파일을 작성할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b5eb9348f5a3123acccf0390f8772aed468bc0fe" translate="yes" xml:space="preserve">
          <source>You can create group files manually or generate them from third party applications. For example, you can write a script that updates the slow group by taking the slowest tests from xml report.</source>
          <target state="translated">그룹 파일을 수동으로 만들거나 타사 응용 프로그램에서 생성 할 수 있습니다. 예를 들어 xml 보고서에서 가장 느린 테스트를 수행하여 느린 그룹을 업데이트하는 스크립트를 작성할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="03eb2ef6cbf0c444a2b49c39e0f866dc0e346823" translate="yes" xml:space="preserve">
          <source>You can define assertions by using assertXXX methods in your modules.</source>
          <target state="translated">모듈에서 assertXXX 메소드를 사용하여 어설 션을 정의 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="cb8d436019a923a97d4664cc4d2209c771c4dad2" translate="yes" xml:space="preserve">
          <source>You can easily switch between those configs by running tests with &lt;code&gt;--env&lt;/code&gt; option. To run the tests only for PhantomJS you just need to pass &lt;code&gt;--env phantom&lt;/code&gt; as an option:</source>
          <target state="translated">&lt;code&gt;--env&lt;/code&gt; 옵션을 사용 하여 테스트를 실행하여 해당 구성간에 쉽게 전환 할 수 있습니다 . PhantomJS에 대해서만 테스트를 실행하려면 옵션으로 &lt;code&gt;--env phantom&lt;/code&gt; 을 전달 하면 됩니다.</target>
        </trans-unit>
        <trans-unit id="bcae51ffe8f14b9392fe4c37a2f537b0d7d9e992" translate="yes" xml:space="preserve">
          <source>You can even specify patterns for loading multiple group files with a single definition:</source>
          <target state="translated">단일 정의로 여러 그룹 파일을로드하기위한 패턴을 지정할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="cae14ff0b6727a69bc872341ad39c3419e5d32ff" translate="yes" xml:space="preserve">
          <source>You can execute one (or several) specific groups of tests:</source>
          <target state="translated">하나 또는 여러 개의 특정 테스트 그룹을 실행할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4a4bb500261065c1ef095a687e700f683c6b78b5" translate="yes" xml:space="preserve">
          <source>You can further filter which tests are run by appending a method name to the class, separated by a colon (for Cest or Test formats):</source>
          <target state="translated">콜론으로 구분하여 클래스에 메소드 이름을 추가하여 실행되는 테스트를 추가로 필터링 할 수 있습니다 (Cest 또는 Test 형식의 경우).</target>
        </trans-unit>
        <trans-unit id="45f5e834f96b31da9e7cce5058c9ffd3747d20bd" translate="yes" xml:space="preserve">
          <source>You can introduce your own step decorators. Take a look into sample decorator classes and create your own class which implements &lt;code&gt;Codeception\Step\GeneratedStep&lt;/code&gt; interface. A class should provide &lt;code&gt;getTemplate&lt;/code&gt; method which returns a code block and variables passed into a template. Make your class accessible by autoloader and you can have your own step decorators working.</source>
          <target state="translated">자신 만의 스텝 데코레이터를 소개 할 수 있습니다. 샘플 데코레이터 클래스를 살펴보고 &lt;code&gt;Codeception\Step\GeneratedStep&lt;/code&gt; 인터페이스 를 구현하는 고유 한 클래스를 만듭니다 . 클래스는 코드 블록과 템플릿에 전달 된 변수를 반환하는 &lt;code&gt;getTemplate&lt;/code&gt; 메소드를 제공해야합니다 . 오토로더가 수업에 액세스 할 수있게하고 자신 만의 스텝 데코레이터를 작동시킬 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4d55959e09bf9d53a3d3c66153305821ce698ae6" translate="yes" xml:space="preserve">
          <source>You can only click on links with valid URLs or form submit buttons</source>
          <target state="translated">유효한 URL 또는 양식 제출 버튼이있는 링크 만 클릭 할 수 있습니다</target>
        </trans-unit>
        <trans-unit id="4ef40f7074e8b1f4b89e82836adcb7423d4a8bd8" translate="yes" xml:space="preserve">
          <source>You can optionally specify what button&amp;rsquo;s value to include in the request with the last parameter as an alternative to explicitly setting its value in the second parameter, as button values are not otherwise included in the request.</source>
          <target state="translated">요청에 버튼 값이 포함되지 않으므로 두 번째 매개 변수에 값을 명시 적으로 설정하는 대신 마지막 매개 변수를 사용하여 요청에 포함 할 버튼 값을 선택적으로 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="913e369c3c037ff2f47b13f8aa99a28eaf56c052" translate="yes" xml:space="preserve">
          <source>You can optionally specify which button&amp;rsquo;s value to include in the request with the last parameter (as an alternative to explicitly setting its value in the second parameter), as button values are not otherwise included in the request.</source>
          <target state="translated">단추 값이 요청에 포함되지 않으므로 마지막 매개 변수를 사용하여 요청에 포함 할 단추 값을 지정할 수 있습니다 (두 번째 매개 변수에 값을 명시 적으로 설정하는 대신).</target>
        </trans-unit>
        <trans-unit id="ed602467cbe322e443a7ebc81c50818efbc322df" translate="yes" xml:space="preserve">
          <source>You can provide a directory path as well. This will execute all acceptance tests from the &lt;code&gt;backend&lt;/code&gt; dir:</source>
          <target state="translated">디렉토리 경로도 제공 할 수 있습니다. &lt;code&gt;backend&lt;/code&gt; 디렉토리 에서 모든 승인 테스트가 실행됩니다 .</target>
        </trans-unit>
        <trans-unit id="9e3d7aec1cae688b8fac2e83a796217902902156" translate="yes" xml:space="preserve">
          <source>You can specify a specific HTML element (via CSS or XPath) as the second parameter to only search within that element.</source>
          <target state="translated">CSS 또는 XPath를 통해 특정 HTML 요소를 두 번째 매개 변수로 지정하여 해당 요소 내에서만 검색 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5884c062f6746c04e7f728f6a9c312a4a7a92c48" translate="yes" xml:space="preserve">
          <source>You can supply optional action names. Enter one at a time, followed by a newline. End with an empty line to continue to StepObject creation.</source>
          <target state="translated">선택적 조치 이름을 제공 할 수 있습니다. 한 번에 하나씩 입력 한 다음 줄 바꿈을 입력하십시오. StepObject 생성을 계속하려면 빈 줄로 끝납니다.</target>
        </trans-unit>
        <trans-unit id="44c75cca1b8d3db29a10aef8072c3743fd4e342a" translate="yes" xml:space="preserve">
          <source>You can then enable it in &lt;code&gt;codeception.yml&lt;/code&gt;</source>
          <target state="translated">그런 다음 &lt;code&gt;codeception.yml&lt;/code&gt; 에서 활성화 할 수 있습니다</target>
        </trans-unit>
        <trans-unit id="c3172e1690775cb8229576da40e1599e818dd382" translate="yes" xml:space="preserve">
          <source>You can&amp;rsquo;t fill in fields that are not inside a form</source>
          <target state="translated">양식에없는 필드는 채울 수 없습니다</target>
        </trans-unit>
        <trans-unit id="0b883ab9d88765f38d72bb82e553e5038948f358" translate="yes" xml:space="preserve">
          <source>You could write the following to submit it:</source>
          <target state="translated">다음을 작성하여 제출할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="51e6edd2103850e38f3cad70cf0641e4475d6c84" translate="yes" xml:space="preserve">
          <source>You have a functional testing suite in the &lt;code&gt;tests/functional&lt;/code&gt; directory. To start, you need to include one of the framework modules in the suite configuration file: &lt;code&gt;tests/functional.suite.yml&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;tests/functional&lt;/code&gt; 디렉토리 에 기능 테스트 스위트가 있습니다. 시작하려면 스위트 구성 파일에 &lt;code&gt;tests/functional.suite.yml&lt;/code&gt; 프레임 워크 모듈 중 하나를 포함시켜야 합니다 .</target>
        </trans-unit>
        <trans-unit id="c7072a136628b7bfc0c0ee2f7180346a2d506c35" translate="yes" xml:space="preserve">
          <source>You have to register your command in the file &lt;code&gt;codeception.yml&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;codeception.yml&lt;/code&gt; 파일에 명령을 등록해야합니다 .</target>
        </trans-unit>
        <trans-unit id="f0e1e337e72f8f2c19f59502c08a525d3708c381" translate="yes" xml:space="preserve">
          <source>You may extend current functionality by using &lt;code&gt;SOAP&lt;/code&gt; module in your helper class. To access the SOAP response as &lt;code&gt;\DOMDocument&lt;/code&gt; you can use &lt;code&gt;response&lt;/code&gt; property of &lt;code&gt;SOAP&lt;/code&gt; module.</source>
          <target state="translated">헬퍼 클래스에서 &lt;code&gt;SOAP&lt;/code&gt; 모듈 을 사용하여 현재 기능을 확장 할 수 있습니다 . &lt;code&gt;\DOMDocument&lt;/code&gt; 로 SOAP 응답에 액세스하려면 &lt;code&gt;SOAP&lt;/code&gt; 모듈의 &lt;code&gt;response&lt;/code&gt; 속성을 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="64051b254938e0741623915542f57527df738f68" translate="yes" xml:space="preserve">
          <source>You may use multiple database connections, each will use a separate transaction; to prevent accidental mistakes we will warn you if you try to connect to the same database twice but we cannot reuse the same connection.</source>
          <target state="translated">여러 개의 데이터베이스 연결을 사용할 수 있으며 각각은 별도의 트랜잭션을 사용합니다. 실수로 실수를 방지하기 위해 동일한 데이터베이스에 두 번 연결하려고하지만 동일한 연결을 재사용 할 수없는 경우 경고합니다.</target>
        </trans-unit>
        <trans-unit id="0711d0541a5d592f4ca584d46b86a1355d0357e0" translate="yes" xml:space="preserve">
          <source>You may want to perform even more complex assertions on a response. This can be done by writing your own methods in the &lt;a href=&quot;06-reusingtestcode#Modules-and-Helpers&quot;&gt;Helper&lt;/a&gt; classes. To access the latest JSON response you will need to get the &lt;code&gt;response&lt;/code&gt; property of the &lt;code&gt;REST&lt;/code&gt; module. Let&amp;rsquo;s demonstrate it with the &lt;code&gt;seeResponseIsHtml&lt;/code&gt; method:</source>
          <target state="translated">응답에 대해 훨씬 더 복잡한 어설 션을 수행 할 수 있습니다. 이것은 &lt;a href=&quot;06-reusingtestcode#Modules-and-Helpers&quot;&gt;도우미&lt;/a&gt; 클래스 에서 자신의 메소드를 작성하여 수행 할 수 있습니다 . 최신 JSON 응답에 액세스하려면 &lt;code&gt;REST&lt;/code&gt; 모듈 의 &lt;code&gt;response&lt;/code&gt; 특성을 가져와야 합니다. &lt;code&gt;seeResponseIsHtml&lt;/code&gt; 메소드를 사용하여 설명해 보겠습니다 .</target>
        </trans-unit>
        <trans-unit id="6297393fadccebf00010157963252a9bafdeac08" translate="yes" xml:space="preserve">
          <source>You need to install Codeception after, if codeception is already installed it will not work.</source>
          <target state="translated">Codeception이 이미 설치되어 있으면 Codeception을 설치해야합니다.</target>
        </trans-unit>
        <trans-unit id="0a8cf05f5fcfe5346edc27835c8e8325280ec0aa" translate="yes" xml:space="preserve">
          <source>You need to perform an ajax request specifying the HTTP method.</source>
          <target state="translated">HTTP 메소드를 지정하여 ajax 요청을 수행해야합니다.</target>
        </trans-unit>
        <trans-unit id="34ddd5dcfe92382d6cda613aee08386be30991d1" translate="yes" xml:space="preserve">
          <source>You should also specify the path to the &lt;code&gt;log&lt;/code&gt; directory, where the reports and logs will be saved.</source>
          <target state="translated">또한 보고서와 로그가 저장 될 &lt;code&gt;log&lt;/code&gt; 디렉토리 의 경로를 지정해야합니다 .</target>
        </trans-unit>
        <trans-unit id="a23b7bebacedbc541b037291ab061b095494c848" translate="yes" xml:space="preserve">
          <source>You should not use this module for acceptance tests. If you want to use Eloquent within your acceptance tests (paired with WebDriver) enable only ORM part of this module:</source>
          <target state="translated">승인 테스트에이 모듈을 사용해서는 안됩니다. 승인 테스트 (WebDriver와 함께 사용) 내에서 Eloquent를 사용하려면이 모듈의 ORM 부분 만 활성화하십시오.</target>
        </trans-unit>
        <trans-unit id="5710f3daf9d31b5e36fe259eac843bfeeb579106" translate="yes" xml:space="preserve">
          <source>You should probably not access your database directly if your project already uses ORM for database interactions. Why not use ORM directly inside your tests? Let&amp;rsquo;s try to write a test using Laravel&amp;rsquo;s ORM Eloquent. For this we need to configure the Laravel5 module. We won&amp;rsquo;t need its web interaction methods like &lt;code&gt;amOnPage&lt;/code&gt; or &lt;code&gt;see&lt;/code&gt;, so let&amp;rsquo;s enable only the ORM part of it:</source>
          <target state="translated">프로젝트가 이미 데이터베이스 상호 작용에 ORM을 사용하는 경우 데이터베이스에 직접 액세스해서는 안됩니다. 테스트 내에서 직접 ORM을 사용하지 않습니까? Laravel의 ORM Eloquent를 사용하여 테스트를 작성해 봅시다. 이를 위해 Laravel5 모듈을 구성해야합니다. &lt;code&gt;amOnPage&lt;/code&gt; 와 같은 웹 상호 작용 방법이 필요하지 않습니다. 또는 &lt;code&gt;see&lt;/code&gt; . ORM 부분 만 활성화 해 보겠습니다.</target>
        </trans-unit>
        <trans-unit id="33e37c5bccce7eb11e0bd41eaae7c0bf80bce0ac" translate="yes" xml:space="preserve">
          <source>You should start by creating a new test suite, (which was not provided by the &lt;code&gt;bootstrap&lt;/code&gt; command). We recommend calling it &lt;strong&gt;api&lt;/strong&gt; and using the &lt;code&gt;ApiTester&lt;/code&gt; class for it.</source>
          <target state="translated">&lt;code&gt;bootstrap&lt;/code&gt; 명령에서 제공하지 않은 새 테스트 스위트를 작성하여 시작해야합니다 . &lt;strong&gt;api&lt;/strong&gt; 라고 부르고 &lt;code&gt;ApiTester&lt;/code&gt; 클래스를 사용하는 것이 좋습니다 .</target>
        </trans-unit>
        <trans-unit id="6b65abf1f940430ff8f2858c2b2726d2222edc5f" translate="yes" xml:space="preserve">
          <source>You should use them to write your own actions using module internals.</source>
          <target state="translated">그것들을 사용하여 모듈 내부를 사용하여 자신의 액션을 작성해야합니다.</target>
        </trans-unit>
        <trans-unit id="264a217af9fac9be3ad609dd6a8213d7be99caaf" translate="yes" xml:space="preserve">
          <source>You will be asked several questions and then config files will be generated and all necessary directories will be created. Learn from the examples above to build a custom Installation Template. Here are the basic rules you should follow:</source>
          <target state="translated">몇 가지 질문이 표시되고 구성 파일이 생성되고 필요한 모든 디렉토리가 작성됩니다. 위의 예제를 통해 사용자 정의 설치 템플릿을 작성하십시오. 따라야 할 기본 규칙은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="f1c4849719367e1cc2703e6866a730bccb479505" translate="yes" xml:space="preserve">
          <source>You will get a fresh application in &lt;code&gt;\Yii::$app&lt;/code&gt; at the start of each test (available in the test and in &lt;code&gt;_before()&lt;/code&gt;).</source>
          <target state="translated">각 테스트가 시작될 때 (테스트 및 &lt;code&gt;_before()&lt;/code&gt; 에서 사용 가능) &lt;code&gt;\Yii::$app&lt;/code&gt; 에 새로운 응용 프로그램이 제공됩니다 .</target>
        </trans-unit>
        <trans-unit id="77f9ebbd5816bfc33f811bd4ef3453c2d455a9d2" translate="yes" xml:space="preserve">
          <source>Your application is most likely using object-relational mapping (ORM) to work with the database. In this case, Codeception allows you to use the ORM methods to work with the database, instead of accessing the database directly. This way you can work with models and entities of a domain, and not on tables and rows.</source>
          <target state="translated">응용 프로그램이 데이터베이스에 대해 작업하기 위해 ORM (Object-Relational Mapping)을 사용하고있을 가능성이 높습니다. 이 경우 Codeception을 사용하면 데이터베이스에 직접 액세스하는 대신 ORM 메소드를 사용하여 데이터베이스에 대해 작업 할 수 있습니다. 이 방법으로 테이블과 행이 아닌 도메인의 모델 및 엔티티로 작업 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="17bbd93050d2b1d43bc600d6bae2a17b0eb37253" translate="yes" xml:space="preserve">
          <source>Your custom commands have to implement the interface Codeception\CustomCommandInterface, because there has to be a function to get the name of the command.</source>
          <target state="translated">명령 이름을 가져 오는 함수가 있어야하므로 사용자 지정 명령은 Codeception \ CustomCommandInterface 인터페이스를 구현해야합니다.</target>
        </trans-unit>
        <trans-unit id="ff96c0f59772e07b63189c7df68052c3898005a1" translate="yes" xml:space="preserve">
          <source>ZF2</source>
          <target state="translated">ZF2</target>
        </trans-unit>
        <trans-unit id="969d083510e7d3d87a3d7a324c069ce24d5e661e" translate="yes" xml:space="preserve">
          <source>ZF2::_findElements</source>
          <target state="translated">ZF2::_findElements</target>
        </trans-unit>
        <trans-unit id="bfe0d9873838af40eb36fe74d775a721c4cc1b2c" translate="yes" xml:space="preserve">
          <source>ZF2::_getResponseContent</source>
          <target state="translated">ZF2::_getResponseContent</target>
        </trans-unit>
        <trans-unit id="316f9beb69963fb685eb7941c7abfcfba2fef571" translate="yes" xml:space="preserve">
          <source>ZF2::_loadPage</source>
          <target state="translated">ZF2::_loadPage</target>
        </trans-unit>
        <trans-unit id="8e00cac191f0787823103e7b455d80350e541a08" translate="yes" xml:space="preserve">
          <source>ZF2::_request</source>
          <target state="translated">ZF2::_request</target>
        </trans-unit>
        <trans-unit id="8f4423ab3e4e21b0d7f2cbfacbea5eb712a4d264" translate="yes" xml:space="preserve">
          <source>ZF2::_savePageSource</source>
          <target state="translated">ZF2::_savePageSource</target>
        </trans-unit>
        <trans-unit id="0c6180f284f468782f0c8c34d223caa3feaead47" translate="yes" xml:space="preserve">
          <source>ZF2::addServiceToContainer</source>
          <target state="translated">ZF2::addServiceToContainer</target>
        </trans-unit>
        <trans-unit id="8bf0189ad905fe6a8190148b6e153a01319bd9d1" translate="yes" xml:space="preserve">
          <source>ZF2::amHttpAuthenticated</source>
          <target state="translated">ZF2::amHttpAuthenticated</target>
        </trans-unit>
        <trans-unit id="84ed112098d5b364ecd657a4bb159f7be32d016f" translate="yes" xml:space="preserve">
          <source>ZF2::amOnPage</source>
          <target state="translated">ZF2::amOnPage</target>
        </trans-unit>
        <trans-unit id="04c23ec06a41f0c14847eaec359a93fa40dcc51b" translate="yes" xml:space="preserve">
          <source>ZF2::amOnRoute</source>
          <target state="translated">ZF2::amOnRoute</target>
        </trans-unit>
        <trans-unit id="fae044f0dde5a8f6d94a633c4f3061422c9e9c7c" translate="yes" xml:space="preserve">
          <source>ZF2::attachFile</source>
          <target state="translated">ZF2::attachFile</target>
        </trans-unit>
        <trans-unit id="f8511c110c6e1db7bfe5a379d2f34c32852b1a99" translate="yes" xml:space="preserve">
          <source>ZF2::checkOption</source>
          <target state="translated">ZF2::checkOption</target>
        </trans-unit>
        <trans-unit id="522f7c06e0f6ecefefb04c0352508955b2895fc0" translate="yes" xml:space="preserve">
          <source>ZF2::click</source>
          <target state="translated">ZF2::click</target>
        </trans-unit>
        <trans-unit id="f25792087112bd0c5aa0252f97492f6d872c8cc9" translate="yes" xml:space="preserve">
          <source>ZF2::deleteHeader</source>
          <target state="translated">ZF2::deleteHeader</target>
        </trans-unit>
        <trans-unit id="8cd68b196995d08a2d370f6fbf1cc386474b8075" translate="yes" xml:space="preserve">
          <source>ZF2::dontSee</source>
          <target state="translated">ZF2::dontSee</target>
        </trans-unit>
        <trans-unit id="7a68fa15af415d2738b50e04de6a7600af9aac49" translate="yes" xml:space="preserve">
          <source>ZF2::dontSeeCheckboxIsChecked</source>
          <target state="translated">ZF2::dontSeeCheckboxIsChecked</target>
        </trans-unit>
        <trans-unit id="bb204d63d60e20c692fadf41ab8ae266d7a1c4a7" translate="yes" xml:space="preserve">
          <source>ZF2::dontSeeCookie</source>
          <target state="translated">ZF2::dontSeeCookie</target>
        </trans-unit>
        <trans-unit id="128bc040c9d520df4ffb4d31fb2c7c17476d4455" translate="yes" xml:space="preserve">
          <source>ZF2::dontSeeCurrentUrlEquals</source>
          <target state="translated">ZF2::dontSeeCurrentUrlEquals</target>
        </trans-unit>
        <trans-unit id="39113f3c7bedf6dbec690439d7127ea9993bedfa" translate="yes" xml:space="preserve">
          <source>ZF2::dontSeeCurrentUrlMatches</source>
          <target state="translated">ZF2::dontSeeCurrentUrlMatches</target>
        </trans-unit>
        <trans-unit id="e49dbfb3d80d597bc48b555eb7c8fff4cef92e8e" translate="yes" xml:space="preserve">
          <source>ZF2::dontSeeElement</source>
          <target state="translated">ZF2::dontSeeElement</target>
        </trans-unit>
        <trans-unit id="a19e8ba9f6c795936a830f5d37fbf232a91d24ea" translate="yes" xml:space="preserve">
          <source>ZF2::dontSeeInCurrentUrl</source>
          <target state="translated">ZF2::dontSeeInCurrentUrl</target>
        </trans-unit>
        <trans-unit id="7f048daf08f3ebb5e95f2519deb526114dc9fa44" translate="yes" xml:space="preserve">
          <source>ZF2::dontSeeInField</source>
          <target state="translated">ZF2::dontSeeInField</target>
        </trans-unit>
        <trans-unit id="38dee1e2e56cf5df4180bfd46de94e4894058be2" translate="yes" xml:space="preserve">
          <source>ZF2::dontSeeInFormFields</source>
          <target state="translated">ZF2::dontSeeInFormFields</target>
        </trans-unit>
        <trans-unit id="f05437d5fabf17771aa62677408506da6223c913" translate="yes" xml:space="preserve">
          <source>ZF2::dontSeeInSource</source>
          <target state="translated">ZF2::dontSeeInSource</target>
        </trans-unit>
        <trans-unit id="73772703e00ccb20369877040b2e05e77a7d7e7f" translate="yes" xml:space="preserve">
          <source>ZF2::dontSeeInTitle</source>
          <target state="translated">ZF2::dontSeeInTitle</target>
        </trans-unit>
        <trans-unit id="caebcb82611bdcfa36661964cf62d4d879399723" translate="yes" xml:space="preserve">
          <source>ZF2::dontSeeLink</source>
          <target state="translated">ZF2::dontSeeLink</target>
        </trans-unit>
        <trans-unit id="9ca9801f5d9cd9ad36f3803e3a1e7f7a35acaaed" translate="yes" xml:space="preserve">
          <source>ZF2::dontSeeOptionIsSelected</source>
          <target state="translated">ZF2::dontSeeOptionIsSelected</target>
        </trans-unit>
        <trans-unit id="8af9c3a9b1503e5ed21403e311044dd52e40612f" translate="yes" xml:space="preserve">
          <source>ZF2::dontSeeResponseCodeIs</source>
          <target state="translated">ZF2::dontSeeResponseCodeIs</target>
        </trans-unit>
        <trans-unit id="edc1af7940f5c2843292b4fdc97c67de44a15fe1" translate="yes" xml:space="preserve">
          <source>ZF2::fillField</source>
          <target state="translated">ZF2::fillField</target>
        </trans-unit>
        <trans-unit id="3f4e61e540047ee5388adfc23b5568d447d431ac" translate="yes" xml:space="preserve">
          <source>ZF2::grabAttributeFrom</source>
          <target state="translated">ZF2::grabAttributeFrom</target>
        </trans-unit>
        <trans-unit id="d7a40107a60394ea3fcbf7c46217651c021ae74d" translate="yes" xml:space="preserve">
          <source>ZF2::grabCookie</source>
          <target state="translated">ZF2::grabCookie</target>
        </trans-unit>
        <trans-unit id="2e3119e7b3018283b0094153392242753476bdee" translate="yes" xml:space="preserve">
          <source>ZF2::grabFromCurrentUrl</source>
          <target state="translated">ZF2::grabFromCurrentUrl</target>
        </trans-unit>
        <trans-unit id="22220280fbaa6a8c34be1890cdfe26b0cbb52df1" translate="yes" xml:space="preserve">
          <source>ZF2::grabMultiple</source>
          <target state="translated">ZF2::grabMultiple</target>
        </trans-unit>
        <trans-unit id="8d9b3babf92d96315267b2180f62c58a53626cff" translate="yes" xml:space="preserve">
          <source>ZF2::grabPageSource</source>
          <target state="translated">ZF2::grabPageSource</target>
        </trans-unit>
        <trans-unit id="f025f1add313bc4b267ec7ec0a9d806674410cfb" translate="yes" xml:space="preserve">
          <source>ZF2::grabServiceFromContainer</source>
          <target state="translated">ZF2::grabServiceFromContainer</target>
        </trans-unit>
        <trans-unit id="e5f491de930cb744ef6f3066891fd0c4b6e82d6e" translate="yes" xml:space="preserve">
          <source>ZF2::grabTextFrom</source>
          <target state="translated">ZF2::grabTextFrom</target>
        </trans-unit>
        <trans-unit id="504d597f97f08463acfbf5dd6cbac9d87c1e46a0" translate="yes" xml:space="preserve">
          <source>ZF2::grabValueFrom</source>
          <target state="translated">ZF2::grabValueFrom</target>
        </trans-unit>
        <trans-unit id="7d8f67efa53a42ea3fae32a04e87a00cf2f057fb" translate="yes" xml:space="preserve">
          <source>ZF2::haveHttpHeader</source>
          <target state="translated">ZF2::haveHttpHeader</target>
        </trans-unit>
        <trans-unit id="66aed86f6f2de715ccdb4535647a0d6c85829dd1" translate="yes" xml:space="preserve">
          <source>ZF2::makeHtmlSnapshot</source>
          <target state="translated">ZF2::makeHtmlSnapshot</target>
        </trans-unit>
        <trans-unit id="6b6ba332fb36bfb54768a3ac66c38a47011a3be4" translate="yes" xml:space="preserve">
          <source>ZF2::moveBack</source>
          <target state="translated">ZF2::moveBack</target>
        </trans-unit>
        <trans-unit id="1a39af3865cd86018d48627a0656706a1fff2331" translate="yes" xml:space="preserve">
          <source>ZF2::resetCookie</source>
          <target state="translated">ZF2::resetCookie</target>
        </trans-unit>
        <trans-unit id="af498c98289a7c8a1418db6360bd2a3b27af6654" translate="yes" xml:space="preserve">
          <source>ZF2::see</source>
          <target state="translated">ZF2::see</target>
        </trans-unit>
        <trans-unit id="597558e9ae9b6b660ac92ff09114a5608e147762" translate="yes" xml:space="preserve">
          <source>ZF2::seeCheckboxIsChecked</source>
          <target state="translated">ZF2::seeCheckboxIsChecked</target>
        </trans-unit>
        <trans-unit id="15d398b8d55d7f597c49a9726560b947409b5e45" translate="yes" xml:space="preserve">
          <source>ZF2::seeCookie</source>
          <target state="translated">ZF2::seeCookie</target>
        </trans-unit>
        <trans-unit id="037835003b7ff4312c9ca01761485a879edd708d" translate="yes" xml:space="preserve">
          <source>ZF2::seeCurrentRouteIs</source>
          <target state="translated">ZF2::seeCurrentRouteIs</target>
        </trans-unit>
        <trans-unit id="fe50ff38cedff150775b5aaf63ffc49d483149d3" translate="yes" xml:space="preserve">
          <source>ZF2::seeCurrentUrlEquals</source>
          <target state="translated">ZF2::seeCurrentUrlEquals</target>
        </trans-unit>
        <trans-unit id="a121fcf300faef17ddc81071f3015bb94b827957" translate="yes" xml:space="preserve">
          <source>ZF2::seeCurrentUrlMatches</source>
          <target state="translated">ZF2::seeCurrentUrlMatches</target>
        </trans-unit>
        <trans-unit id="a0b4f9d3fecd9400876e866e9e1627ba0e406394" translate="yes" xml:space="preserve">
          <source>ZF2::seeElement</source>
          <target state="translated">ZF2::seeElement</target>
        </trans-unit>
        <trans-unit id="3dd2fe8a53402a1c4add0ed272d493a13f7c0226" translate="yes" xml:space="preserve">
          <source>ZF2::seeInCurrentUrl</source>
          <target state="translated">ZF2::seeInCurrentUrl</target>
        </trans-unit>
        <trans-unit id="95b3717d70b6cad214c8b005f047e1eef12c7efd" translate="yes" xml:space="preserve">
          <source>ZF2::seeInField</source>
          <target state="translated">ZF2::seeInField</target>
        </trans-unit>
        <trans-unit id="1f11b06301f3ca7db98144f7efc8b8f228c76046" translate="yes" xml:space="preserve">
          <source>ZF2::seeInFormFields</source>
          <target state="translated">ZF2::seeInFormFields</target>
        </trans-unit>
        <trans-unit id="38a09c98306d64e99a04b253db7987e02a2a9701" translate="yes" xml:space="preserve">
          <source>ZF2::seeInSource</source>
          <target state="translated">ZF2::seeInSource</target>
        </trans-unit>
        <trans-unit id="fabbc8b0ebc93c634638cdef64ffc19df0539baf" translate="yes" xml:space="preserve">
          <source>ZF2::seeInTitle</source>
          <target state="translated">ZF2::seeInTitle</target>
        </trans-unit>
        <trans-unit id="f20543910bb2492be0ec11f4dfd45c152269fb28" translate="yes" xml:space="preserve">
          <source>ZF2::seeLink</source>
          <target state="translated">ZF2::seeLink</target>
        </trans-unit>
        <trans-unit id="1554cbc04bb523c64a86c51df00b8026c588fef7" translate="yes" xml:space="preserve">
          <source>ZF2::seeNumberOfElements</source>
          <target state="translated">ZF2::seeNumberOfElements</target>
        </trans-unit>
        <trans-unit id="bcf4df85eb8f52f6636ca75e566924ff0ec6ada7" translate="yes" xml:space="preserve">
          <source>ZF2::seeOptionIsSelected</source>
          <target state="translated">ZF2::seeOptionIsSelected</target>
        </trans-unit>
        <trans-unit id="1f94e4974d5d591e529f14dfca312bff9dab13b3" translate="yes" xml:space="preserve">
          <source>ZF2::seePageNotFound</source>
          <target state="translated">ZF2::seePageNotFound</target>
        </trans-unit>
        <trans-unit id="6e9152f5441212a86a8e5ae5116486560e4b62f1" translate="yes" xml:space="preserve">
          <source>ZF2::seeResponseCodeIs</source>
          <target state="translated">ZF2::seeResponseCodeIs</target>
        </trans-unit>
        <trans-unit id="5e34cca1e22d0b49f227ee3df6914e95fb4d407e" translate="yes" xml:space="preserve">
          <source>ZF2::seeResponseCodeIsBetween</source>
          <target state="translated">ZF2::seeResponseCodeIsBetween</target>
        </trans-unit>
        <trans-unit id="b26b7c63825512ea8d07882c3684ea0b315ae6e2" translate="yes" xml:space="preserve">
          <source>ZF2::seeResponseCodeIsClientError</source>
          <target state="translated">ZF2::seeResponseCodeIsClientError</target>
        </trans-unit>
        <trans-unit id="dad049f06e5ca3a182e7339338599a087d47f192" translate="yes" xml:space="preserve">
          <source>ZF2::seeResponseCodeIsRedirection</source>
          <target state="translated">ZF2::seeResponseCodeIsRedirection</target>
        </trans-unit>
        <trans-unit id="46bb74fdf0e4d1ae9511182b90531c4267245b88" translate="yes" xml:space="preserve">
          <source>ZF2::seeResponseCodeIsServerError</source>
          <target state="translated">ZF2::seeResponseCodeIsServerError</target>
        </trans-unit>
        <trans-unit id="1f808f94f6a13fa9f4acced822f7a69315a1adb2" translate="yes" xml:space="preserve">
          <source>ZF2::seeResponseCodeIsSuccessful</source>
          <target state="translated">ZF2::seeResponseCodeIsSuccessful</target>
        </trans-unit>
        <trans-unit id="f8a2f1103eb816201c1ca2b65d1bddf36e2395e4" translate="yes" xml:space="preserve">
          <source>ZF2::selectOption</source>
          <target state="translated">ZF2::selectOption</target>
        </trans-unit>
        <trans-unit id="ffe3199c5a83d048af28a62765b5f44ed609cc70" translate="yes" xml:space="preserve">
          <source>ZF2::sendAjaxGetRequest</source>
          <target state="translated">ZF2::sendAjaxGetRequest</target>
        </trans-unit>
        <trans-unit id="db0018cbf321c8be5454faaa299ef761445342e3" translate="yes" xml:space="preserve">
          <source>ZF2::sendAjaxPostRequest</source>
          <target state="translated">ZF2::sendAjaxPostRequest</target>
        </trans-unit>
        <trans-unit id="156a79f53e43244b674380f7f4968eec6d505444" translate="yes" xml:space="preserve">
          <source>ZF2::sendAjaxRequest</source>
          <target state="translated">ZF2::sendAjaxRequest</target>
        </trans-unit>
        <trans-unit id="7a61980f1f7d793bb325c7456158928562f8caf9" translate="yes" xml:space="preserve">
          <source>ZF2::setCookie</source>
          <target state="translated">ZF2::setCookie</target>
        </trans-unit>
        <trans-unit id="6488e025c348e6cad6987391c4e275c0c6e29e74" translate="yes" xml:space="preserve">
          <source>ZF2::submitForm</source>
          <target state="translated">ZF2::submitForm</target>
        </trans-unit>
        <trans-unit id="c00b15eab09629695cc0f6884a4d606963a7bd3d" translate="yes" xml:space="preserve">
          <source>ZF2::switchToIframe</source>
          <target state="translated">ZF2::switchToIframe</target>
        </trans-unit>
        <trans-unit id="abc3bf5d120129668ab534481d88d345729ee28a" translate="yes" xml:space="preserve">
          <source>ZF2::uncheckOption</source>
          <target state="translated">ZF2::uncheckOption</target>
        </trans-unit>
        <trans-unit id="3988d725fa560e04cd696e34f8496a80e59fa6cf" translate="yes" xml:space="preserve">
          <source>Zend Framework 2</source>
          <target state="translated">젠드 프레임 워크 2</target>
        </trans-unit>
        <trans-unit id="b3ea4c667bb26894b31173c7b28d8de2e7534613" translate="yes" xml:space="preserve">
          <source>ZendExpressive</source>
          <target state="translated">ZendExpressive</target>
        </trans-unit>
        <trans-unit id="d48235617cb209e263ca27f58c9cb8f983a7baf0" translate="yes" xml:space="preserve">
          <source>ZendExpressive::_findElements</source>
          <target state="translated">ZendExpressive::_findElements</target>
        </trans-unit>
        <trans-unit id="92621a3a12bf93daa2e9f410a484bf5e6744fc13" translate="yes" xml:space="preserve">
          <source>ZendExpressive::_getResponseContent</source>
          <target state="translated">ZendExpressive::_getResponseContent</target>
        </trans-unit>
        <trans-unit id="4047a810abb00786ddc7aba86174715414e1417a" translate="yes" xml:space="preserve">
          <source>ZendExpressive::_loadPage</source>
          <target state="translated">ZendExpressive::_loadPage</target>
        </trans-unit>
        <trans-unit id="852cbf5972956c16f5c7182c609850eb953f57ed" translate="yes" xml:space="preserve">
          <source>ZendExpressive::_request</source>
          <target state="translated">ZendExpressive::_request</target>
        </trans-unit>
        <trans-unit id="14230f39462821099b694fa492b4484c8f5f5c13" translate="yes" xml:space="preserve">
          <source>ZendExpressive::_savePageSource</source>
          <target state="translated">ZendExpressive::_savePageSource</target>
        </trans-unit>
        <trans-unit id="9c2a55cdad15c219b807c0e0cf06772e6cbb1e2c" translate="yes" xml:space="preserve">
          <source>ZendExpressive::amHttpAuthenticated</source>
          <target state="translated">ZendExpressive::amHttpAuthenticated</target>
        </trans-unit>
        <trans-unit id="c424f6f7f76f14c2def6d7d2188b043df93f9a76" translate="yes" xml:space="preserve">
          <source>ZendExpressive::amOnPage</source>
          <target state="translated">ZendExpressive::amOnPage</target>
        </trans-unit>
        <trans-unit id="95e69ca2e16e775921643fcdd690cd8056ad4601" translate="yes" xml:space="preserve">
          <source>ZendExpressive::attachFile</source>
          <target state="translated">ZendExpressive::attachFile</target>
        </trans-unit>
        <trans-unit id="06a6f42707a1abd475c4feae1a7faaa664f038bc" translate="yes" xml:space="preserve">
          <source>ZendExpressive::checkOption</source>
          <target state="translated">ZendExpressive::checkOption</target>
        </trans-unit>
        <trans-unit id="b7c6e104861f4cadd7261ef4532b3f84bb2cd3e5" translate="yes" xml:space="preserve">
          <source>ZendExpressive::click</source>
          <target state="translated">ZendExpressive::click</target>
        </trans-unit>
        <trans-unit id="83c291a8c4e5899d4e94e6156b2d09e36f5bbefe" translate="yes" xml:space="preserve">
          <source>ZendExpressive::deleteHeader</source>
          <target state="translated">ZendExpressive::deleteHeader</target>
        </trans-unit>
        <trans-unit id="9af94dd8294ab3da4a025388d422f8d2afb79417" translate="yes" xml:space="preserve">
          <source>ZendExpressive::dontSee</source>
          <target state="translated">ZendExpressive::dontSee</target>
        </trans-unit>
        <trans-unit id="32fb943f39ab27a77758d4fc2ef102a6616cb873" translate="yes" xml:space="preserve">
          <source>ZendExpressive::dontSeeCheckboxIsChecked</source>
          <target state="translated">ZendExpressive::dontSeeCheckboxIsChecked</target>
        </trans-unit>
        <trans-unit id="8a158397df2311f7efe09a3838c227f8631ea440" translate="yes" xml:space="preserve">
          <source>ZendExpressive::dontSeeCookie</source>
          <target state="translated">ZendExpressive::dontSeeCookie</target>
        </trans-unit>
        <trans-unit id="a95d7be5b1c994c7c5bb421edcf9027e2426347f" translate="yes" xml:space="preserve">
          <source>ZendExpressive::dontSeeCurrentUrlEquals</source>
          <target state="translated">ZendExpressive::dontSeeCurrentUrlEquals</target>
        </trans-unit>
        <trans-unit id="e55e52eef6659d91e1f051edfb1f00152b7bc90d" translate="yes" xml:space="preserve">
          <source>ZendExpressive::dontSeeCurrentUrlMatches</source>
          <target state="translated">ZendExpressive::dontSeeCurrentUrlMatches</target>
        </trans-unit>
        <trans-unit id="0bd51443f90e87bd75ea5cc3dade1793e18bf943" translate="yes" xml:space="preserve">
          <source>ZendExpressive::dontSeeElement</source>
          <target state="translated">ZendExpressive::dontSeeElement</target>
        </trans-unit>
        <trans-unit id="cc0b9281b3c2b631b25966a737398a5dd5490c3b" translate="yes" xml:space="preserve">
          <source>ZendExpressive::dontSeeInCurrentUrl</source>
          <target state="translated">ZendExpressive::dontSeeInCurrentUrl</target>
        </trans-unit>
        <trans-unit id="71080804719d2217a03ae6cdd65e5033c5806c4d" translate="yes" xml:space="preserve">
          <source>ZendExpressive::dontSeeInField</source>
          <target state="translated">ZendExpressive::dontSeeInField</target>
        </trans-unit>
        <trans-unit id="b7b1bb549d1c3a3074a1bf4af17708a4a3279675" translate="yes" xml:space="preserve">
          <source>ZendExpressive::dontSeeInFormFields</source>
          <target state="translated">ZendExpressive::dontSeeInFormFields</target>
        </trans-unit>
        <trans-unit id="439f74cfd80e52d10d322c647907073b347fa608" translate="yes" xml:space="preserve">
          <source>ZendExpressive::dontSeeInSource</source>
          <target state="translated">ZendExpressive::dontSeeInSource</target>
        </trans-unit>
        <trans-unit id="b21d6f383d8347c8a51dccfd0131003d649cd32b" translate="yes" xml:space="preserve">
          <source>ZendExpressive::dontSeeInTitle</source>
          <target state="translated">ZendExpressive::dontSeeInTitle</target>
        </trans-unit>
        <trans-unit id="49696523d71758316775649479e7cdf73b1efd2d" translate="yes" xml:space="preserve">
          <source>ZendExpressive::dontSeeLink</source>
          <target state="translated">ZendExpressive::dontSeeLink</target>
        </trans-unit>
        <trans-unit id="abefe7565db75f115e12eec3c63212f8a90ecb5d" translate="yes" xml:space="preserve">
          <source>ZendExpressive::dontSeeOptionIsSelected</source>
          <target state="translated">ZendExpressive::dontSeeOptionIsSelected</target>
        </trans-unit>
        <trans-unit id="8a546117b1ab4d5ec1a6e004c414494a5ea969f6" translate="yes" xml:space="preserve">
          <source>ZendExpressive::dontSeeResponseCodeIs</source>
          <target state="translated">ZendExpressive::dontSeeResponseCodeIs</target>
        </trans-unit>
        <trans-unit id="8332aee82bc61730aefeffc061726080030fca79" translate="yes" xml:space="preserve">
          <source>ZendExpressive::fillField</source>
          <target state="translated">ZendExpressive::fillField</target>
        </trans-unit>
        <trans-unit id="b2112c9f9cdb5041f35f5389c36c69e23d7af7a9" translate="yes" xml:space="preserve">
          <source>ZendExpressive::grabAttributeFrom</source>
          <target state="translated">ZendExpressive::grabAttributeFrom</target>
        </trans-unit>
        <trans-unit id="db31590a92a0e1666f80d03b957292ea9ade3913" translate="yes" xml:space="preserve">
          <source>ZendExpressive::grabCookie</source>
          <target state="translated">ZendExpressive::grabCookie</target>
        </trans-unit>
        <trans-unit id="a53a08c5fb5501db4eca5ba52d5de7d466bae1c3" translate="yes" xml:space="preserve">
          <source>ZendExpressive::grabFromCurrentUrl</source>
          <target state="translated">ZendExpressive::grabFromCurrentUrl</target>
        </trans-unit>
        <trans-unit id="fd46d61d20c32f4ceff969bdf0f85dc75030ae52" translate="yes" xml:space="preserve">
          <source>ZendExpressive::grabMultiple</source>
          <target state="translated">ZendExpressive::grabMultiple</target>
        </trans-unit>
        <trans-unit id="6ce7f0d53829121d6cd820811f7ee1f95d8a0aeb" translate="yes" xml:space="preserve">
          <source>ZendExpressive::grabPageSource</source>
          <target state="translated">ZendExpressive::grabPageSource</target>
        </trans-unit>
        <trans-unit id="64503f7e12bb800703a1b95563d9ff16511c94a7" translate="yes" xml:space="preserve">
          <source>ZendExpressive::grabTextFrom</source>
          <target state="translated">ZendExpressive::grabTextFrom</target>
        </trans-unit>
        <trans-unit id="4cc5a09d7e45bc2c39df15544e9ff475b130f9fc" translate="yes" xml:space="preserve">
          <source>ZendExpressive::grabValueFrom</source>
          <target state="translated">ZendExpressive::grabValueFrom</target>
        </trans-unit>
        <trans-unit id="7896db1753fdecb80ce2bffe1c44f7a546b72861" translate="yes" xml:space="preserve">
          <source>ZendExpressive::haveHttpHeader</source>
          <target state="translated">ZendExpressive::haveHttpHeader</target>
        </trans-unit>
        <trans-unit id="6b8f593d6c118bb8cd6c9dba2c2ea70de4612090" translate="yes" xml:space="preserve">
          <source>ZendExpressive::makeHtmlSnapshot</source>
          <target state="translated">ZendExpressive::makeHtmlSnapshot</target>
        </trans-unit>
        <trans-unit id="bffac3efb44c15f331706058ec9e635f295abc6b" translate="yes" xml:space="preserve">
          <source>ZendExpressive::moveBack</source>
          <target state="translated">ZendExpressive::moveBack</target>
        </trans-unit>
        <trans-unit id="8cc306a44daed9780b83062631e8cd3ef85177cf" translate="yes" xml:space="preserve">
          <source>ZendExpressive::resetCookie</source>
          <target state="translated">ZendExpressive::resetCookie</target>
        </trans-unit>
        <trans-unit id="3bf7abe1667afd1d6c934204216d4c798c12cf9f" translate="yes" xml:space="preserve">
          <source>ZendExpressive::see</source>
          <target state="translated">ZendExpressive::see</target>
        </trans-unit>
        <trans-unit id="23213379a77edbcb7e788d02e1ebc58f3c6fe6d4" translate="yes" xml:space="preserve">
          <source>ZendExpressive::seeCheckboxIsChecked</source>
          <target state="translated">ZendExpressive::seeCheckboxIsChecked</target>
        </trans-unit>
        <trans-unit id="3125aef6ad6ee4f9955b3c4bdb2343962a8b1622" translate="yes" xml:space="preserve">
          <source>ZendExpressive::seeCookie</source>
          <target state="translated">ZendExpressive::seeCookie</target>
        </trans-unit>
        <trans-unit id="68ad194a346c11ad6ef65bf1dfe7c8b9fa2b123f" translate="yes" xml:space="preserve">
          <source>ZendExpressive::seeCurrentUrlEquals</source>
          <target state="translated">ZendExpressive::seeCurrentUrlEquals</target>
        </trans-unit>
        <trans-unit id="92d246289266112260a69837be4208cad08a387d" translate="yes" xml:space="preserve">
          <source>ZendExpressive::seeCurrentUrlMatches</source>
          <target state="translated">ZendExpressive::seeCurrentUrlMatches</target>
        </trans-unit>
        <trans-unit id="4138af6528f88e48ea753b00feea53fc158be9aa" translate="yes" xml:space="preserve">
          <source>ZendExpressive::seeElement</source>
          <target state="translated">ZendExpressive::seeElement</target>
        </trans-unit>
        <trans-unit id="022dd32c36b964564613541b29656422cf41d60d" translate="yes" xml:space="preserve">
          <source>ZendExpressive::seeInCurrentUrl</source>
          <target state="translated">ZendExpressive::seeInCurrentUrl</target>
        </trans-unit>
        <trans-unit id="fc575c516b47916117a2a21b64a3c66de964b642" translate="yes" xml:space="preserve">
          <source>ZendExpressive::seeInField</source>
          <target state="translated">ZendExpressive::seeInField</target>
        </trans-unit>
        <trans-unit id="ee63fcb7c12b7dad086b8c2dcdf114f25fdf504f" translate="yes" xml:space="preserve">
          <source>ZendExpressive::seeInFormFields</source>
          <target state="translated">ZendExpressive::seeInFormFields</target>
        </trans-unit>
        <trans-unit id="5a131afaeadd803272b33cb66adecbcebe98fcce" translate="yes" xml:space="preserve">
          <source>ZendExpressive::seeInSource</source>
          <target state="translated">ZendExpressive::seeInSource</target>
        </trans-unit>
        <trans-unit id="2460a56b5431593d136c5265cee3e2030815f76a" translate="yes" xml:space="preserve">
          <source>ZendExpressive::seeInTitle</source>
          <target state="translated">ZendExpressive::seeInTitle</target>
        </trans-unit>
        <trans-unit id="e20341453f9ff62e14414b3046efa5cc6075c4a9" translate="yes" xml:space="preserve">
          <source>ZendExpressive::seeLink</source>
          <target state="translated">ZendExpressive::seeLink</target>
        </trans-unit>
        <trans-unit id="48f0dce683c9d3c92fa2671de0e03c0e2990dfe3" translate="yes" xml:space="preserve">
          <source>ZendExpressive::seeNumberOfElements</source>
          <target state="translated">ZendExpressive::seeNumberOfElements</target>
        </trans-unit>
        <trans-unit id="d544e0eb214ccdbe825a6eb84b1ade94c64d1431" translate="yes" xml:space="preserve">
          <source>ZendExpressive::seeOptionIsSelected</source>
          <target state="translated">ZendExpressive::seeOptionIsSelected</target>
        </trans-unit>
        <trans-unit id="679bef1643de24cc209f8323192e2f0f38c015b5" translate="yes" xml:space="preserve">
          <source>ZendExpressive::seePageNotFound</source>
          <target state="translated">ZendExpressive::seePageNotFound</target>
        </trans-unit>
        <trans-unit id="ff2cf19569f9515554776b39c25bab9ea9b5e289" translate="yes" xml:space="preserve">
          <source>ZendExpressive::seeResponseCodeIs</source>
          <target state="translated">ZendExpressive::seeResponseCodeIs</target>
        </trans-unit>
        <trans-unit id="e42e25ad5dad588e1e097277087566cd23b804e1" translate="yes" xml:space="preserve">
          <source>ZendExpressive::seeResponseCodeIsBetween</source>
          <target state="translated">ZendExpressive::seeResponseCodeIsBetween</target>
        </trans-unit>
        <trans-unit id="496e4c0566ff92f866908b0881188c0b8875878b" translate="yes" xml:space="preserve">
          <source>ZendExpressive::seeResponseCodeIsClientError</source>
          <target state="translated">ZendExpressive::seeResponseCodeIsClientError</target>
        </trans-unit>
        <trans-unit id="6c924ea76a8ed2cb507a5028bde5af681b46c875" translate="yes" xml:space="preserve">
          <source>ZendExpressive::seeResponseCodeIsRedirection</source>
          <target state="translated">ZendExpressive::seeResponseCodeIsRedirection</target>
        </trans-unit>
        <trans-unit id="5ec13f2db8bc581b9af45ec5b9f9ee241fa7311a" translate="yes" xml:space="preserve">
          <source>ZendExpressive::seeResponseCodeIsServerError</source>
          <target state="translated">ZendExpressive::seeResponseCodeIsServerError</target>
        </trans-unit>
        <trans-unit id="af44f52d96597b978157c23ce95a788eb56de443" translate="yes" xml:space="preserve">
          <source>ZendExpressive::seeResponseCodeIsSuccessful</source>
          <target state="translated">ZendExpressive::seeResponseCodeIsSuccessful</target>
        </trans-unit>
        <trans-unit id="ddb1445cbe8ab76715c98881ec14ccb7fae15509" translate="yes" xml:space="preserve">
          <source>ZendExpressive::selectOption</source>
          <target state="translated">ZendExpressive::selectOption</target>
        </trans-unit>
        <trans-unit id="a5a8935149f7299f6764b8f384af577b394b4580" translate="yes" xml:space="preserve">
          <source>ZendExpressive::sendAjaxGetRequest</source>
          <target state="translated">ZendExpressive::sendAjaxGetRequest</target>
        </trans-unit>
        <trans-unit id="3423532023c84900b4862727778fc8cd0275b6f2" translate="yes" xml:space="preserve">
          <source>ZendExpressive::sendAjaxPostRequest</source>
          <target state="translated">ZendExpressive::sendAjaxPostRequest</target>
        </trans-unit>
        <trans-unit id="367488e6754473414b29b9d495c3cc54091382a9" translate="yes" xml:space="preserve">
          <source>ZendExpressive::sendAjaxRequest</source>
          <target state="translated">ZendExpressive::sendAjaxRequest</target>
        </trans-unit>
        <trans-unit id="ea18bfa3dde55bdbfbb3d873b23c7161b5352abf" translate="yes" xml:space="preserve">
          <source>ZendExpressive::setCookie</source>
          <target state="translated">ZendExpressive::setCookie</target>
        </trans-unit>
        <trans-unit id="d6febfd77acc5d1364348ea053f8da0827151df8" translate="yes" xml:space="preserve">
          <source>ZendExpressive::submitForm</source>
          <target state="translated">ZendExpressive::submitForm</target>
        </trans-unit>
        <trans-unit id="17d530e23057f3fe2b2dfd404e4f8e38e5174647" translate="yes" xml:space="preserve">
          <source>ZendExpressive::switchToIframe</source>
          <target state="translated">ZendExpressive::switchToIframe</target>
        </trans-unit>
        <trans-unit id="d2f4d54d372a71213a3a915507dbbd5b206c670b" translate="yes" xml:space="preserve">
          <source>ZendExpressive::uncheckOption</source>
          <target state="translated">ZendExpressive::uncheckOption</target>
        </trans-unit>
        <trans-unit id="ef7b11fe2438c29929c7cc4b5583306f5b8d8422" translate="yes" xml:space="preserve">
          <source>[&amp;lsquo;name&amp;rsquo; =&amp;gt; &amp;lsquo;submitButton&amp;rsquo;]</source>
          <target state="translated">[ '이름'=&amp;gt; 'submitButton']</target>
        </trans-unit>
        <trans-unit id="4f6a73a44b1e47d076348d2d012e331c85c204be" translate="yes" xml:space="preserve">
          <source>\Codeception\Util\JsonArray</source>
          <target state="translated">\Codeception\Util\JsonArray</target>
        </trans-unit>
        <trans-unit id="5496d3fc3de4a2c871fcba48839c20ab80ef2ca7" translate="yes" xml:space="preserve">
          <source>\Phalcon\Mvc\Micro</source>
          <target state="translated">\Phalcon\Mvc\Micro</target>
        </trans-unit>
        <trans-unit id="dcd5ce41cc846c4e80e4d2251af2fc2013ab66d3" translate="yes" xml:space="preserve">
          <source>__construct()</source>
          <target state="translated">__construct()</target>
        </trans-unit>
        <trans-unit id="bc9a41a470b9c53d56af51020ec9aafd8ebb04bb" translate="yes" xml:space="preserve">
          <source>__get()</source>
          <target state="translated">__get()</target>
        </trans-unit>
        <trans-unit id="334dc8d8f34d10c4b7a768f2205229c02c62e022" translate="yes" xml:space="preserve">
          <source>__toString()</source>
          <target state="translated">__toString()</target>
        </trans-unit>
        <trans-unit id="b6defdca48cdd0c4a5cac99c687d871e173140bb" translate="yes" xml:space="preserve">
          <source>_after()</source>
          <target state="translated">_after()</target>
        </trans-unit>
        <trans-unit id="fcb7dc5f4ffbf72db9dc501a1cf67cda83840aba" translate="yes" xml:space="preserve">
          <source>_afterStep()</source>
          <target state="translated">_afterStep()</target>
        </trans-unit>
        <trans-unit id="dca57081a23606b40dd38520bc91ad417df2e3d0" translate="yes" xml:space="preserve">
          <source>_afterSuite()</source>
          <target state="translated">_afterSuite()</target>
        </trans-unit>
        <trans-unit id="31ce8ce6d2529706d57ea18f690ede4f62b1aa7c" translate="yes" xml:space="preserve">
          <source>_backupSession</source>
          <target state="translated">_backupSession</target>
        </trans-unit>
        <trans-unit id="cae8b36f554dc4ef3195ab2ad0d25c4f950c9da4" translate="yes" xml:space="preserve">
          <source>_before()</source>
          <target state="translated">_before()</target>
        </trans-unit>
        <trans-unit id="7fe29afc0758a66892c5bf08653f1fa0768ba4b2" translate="yes" xml:space="preserve">
          <source>_beforeStep()</source>
          <target state="translated">_beforeStep()</target>
        </trans-unit>
        <trans-unit id="028a33d910e59d327c1c27e270426fa9cb4e5f20" translate="yes" xml:space="preserve">
          <source>_beforeSuite()</source>
          <target state="translated">_beforeSuite()</target>
        </trans-unit>
        <trans-unit id="993ce44e6a0c526f83aa3a972b544fe475e120d4" translate="yes" xml:space="preserve">
          <source>_capabilities</source>
          <target state="translated">_capabilities</target>
        </trans-unit>
        <trans-unit id="3981ac82269f16ab7bde9fbd97e71dbffd5b3b37" translate="yes" xml:space="preserve">
          <source>_closeSession</source>
          <target state="translated">_closeSession</target>
        </trans-unit>
        <trans-unit id="9cab6e62bfd5fece01bfb8ef8e9033598993470f" translate="yes" xml:space="preserve">
          <source>_failed()</source>
          <target state="translated">_failed()</target>
        </trans-unit>
        <trans-unit id="a39d8869c6e8727c533359ffde20c793ab0f48e4" translate="yes" xml:space="preserve">
          <source>_findClickable</source>
          <target state="translated">_findClickable</target>
        </trans-unit>
        <trans-unit id="9b824fc2172087463eee003c8cd1e536a0d25ed4" translate="yes" xml:space="preserve">
          <source>_findElements</source>
          <target state="translated">_findElements</target>
        </trans-unit>
        <trans-unit id="10337a5c1324a2fce174326de911bcc77004c4bb" translate="yes" xml:space="preserve">
          <source>_getConfig()</source>
          <target state="translated">_getConfig()</target>
        </trans-unit>
        <trans-unit id="7dba7a4e8ae6f33355f938997ec921aa16b028a2" translate="yes" xml:space="preserve">
          <source>_getCurrentUri</source>
          <target state="translated">_getCurrentUri</target>
        </trans-unit>
        <trans-unit id="62776089cd8c0d3701cb287273eb98dee64041a9" translate="yes" xml:space="preserve">
          <source>_getName()</source>
          <target state="translated">_getName()</target>
        </trans-unit>
        <trans-unit id="5daad4f3f045cf64c2dafa95d6777f8055330735" translate="yes" xml:space="preserve">
          <source>_getResponseContent</source>
          <target state="translated">_getResponseContent</target>
        </trans-unit>
        <trans-unit id="23bb8b4bf6fa7e7ad56c9b244c1f5f0b6985f81d" translate="yes" xml:space="preserve">
          <source>_getUrl</source>
          <target state="translated">_getUrl</target>
        </trans-unit>
        <trans-unit id="9136f58435e91dabce48eb52f6f51fcb38ef5bda" translate="yes" xml:space="preserve">
          <source>_hasRequiredFields()</source>
          <target state="translated">_hasRequiredFields()</target>
        </trans-unit>
        <trans-unit id="82f8b640a492fcbfe5e62c6d40ff1f598457fd24" translate="yes" xml:space="preserve">
          <source>_initialize()</source>
          <target state="translated">_initialize()</target>
        </trans-unit>
        <trans-unit id="186e59a7e6981a3cb188424fabe9fa48d1f1ada0" translate="yes" xml:space="preserve">
          <source>_initializeSession</source>
          <target state="translated">_initializeSession</target>
        </trans-unit>
        <trans-unit id="7f1d70fd61f25b5dbdb29972ef133b734f524571" translate="yes" xml:space="preserve">
          <source>_loadPage</source>
          <target state="translated">_loadPage</target>
        </trans-unit>
        <trans-unit id="0e3e01990296140731f70a2f999e2b82b44a97b6" translate="yes" xml:space="preserve">
          <source>_loadSession</source>
          <target state="translated">_loadSession</target>
        </trans-unit>
        <trans-unit id="188320fc3acdf3103d9051c931531112da438760" translate="yes" xml:space="preserve">
          <source>_reconfigure()</source>
          <target state="translated">_reconfigure()</target>
        </trans-unit>
        <trans-unit id="ee5c95b6a5cecdc5e757c3cfd611f79e2ea8726f" translate="yes" xml:space="preserve">
          <source>_request</source>
          <target state="translated">_request</target>
        </trans-unit>
        <trans-unit id="f9b50f7750d9cfa946325baba3a97ffd8ff8090f" translate="yes" xml:space="preserve">
          <source>_resetConfig()</source>
          <target state="translated">_resetConfig()</target>
        </trans-unit>
        <trans-unit id="98009f8c94ae8045fdd7d78291c1eecf0cc22a84" translate="yes" xml:space="preserve">
          <source>_restart</source>
          <target state="translated">_restart</target>
        </trans-unit>
        <trans-unit id="fbe129ee3e68cd4036fa48ac83e12921148204f2" translate="yes" xml:space="preserve">
          <source>_savePageSource</source>
          <target state="translated">_savePageSource</target>
        </trans-unit>
        <trans-unit id="740c67e92e0f3b34d2c6257e32cf5fc9deee610e" translate="yes" xml:space="preserve">
          <source>_saveScreenshot</source>
          <target state="translated">_saveScreenshot</target>
        </trans-unit>
        <trans-unit id="d1c0e376760479afda7c41eb12b742e50020c865" translate="yes" xml:space="preserve">
          <source>_setConfig()</source>
          <target state="translated">_setConfig()</target>
        </trans-unit>
        <trans-unit id="222b2b4ab2fdd2dd8ef261d8953351ac6bc457fa" translate="yes" xml:space="preserve">
          <source>``</source>
          <target state="translated">``</target>
        </trans-unit>
        <trans-unit id="55bc8c96f9a5c002529d775b8e990f50ba10dc27" translate="yes" xml:space="preserve">
          <source>acceptPopup</source>
          <target state="translated">acceptPopup</target>
        </trans-unit>
        <trans-unit id="1253a3cfbb6bbd7813db3f89d2b4d15e23f860ce" translate="yes" xml:space="preserve">
          <source>add()</source>
          <target state="translated">add()</target>
        </trans-unit>
        <trans-unit id="c5018402f9e55d2bdb62ebc6cfa88b5b0d1a3771" translate="yes" xml:space="preserve">
          <source>addCustomFilter()</source>
          <target state="translated">addCustomFilter()</target>
        </trans-unit>
        <trans-unit id="f061416ac8c21e0636e25ae7ab22dc6ba25a4f26" translate="yes" xml:space="preserve">
          <source>addMessageToQueue</source>
          <target state="translated">addMessageToQueue</target>
        </trans-unit>
        <trans-unit id="c997118ddeb8dd29e83e066ab2cf9f4c14944c1c" translate="yes" xml:space="preserve">
          <source>addNamespace()</source>
          <target state="translated">addNamespace()</target>
        </trans-unit>
        <trans-unit id="6974223d1b4478361250a0582b80064f89b2f1d6" translate="yes" xml:space="preserve">
          <source>addServiceToContainer</source>
          <target state="translated">addServiceToContainer</target>
        </trans-unit>
        <trans-unit id="a06f07274e82edb8d4c672625740a14a6bb156d0" translate="yes" xml:space="preserve">
          <source>addStyles()</source>
          <target state="translated">addStyles()</target>
        </trans-unit>
        <trans-unit id="00c448e68e55ce6928997a37ad5eb6045ef0c61e" translate="yes" xml:space="preserve">
          <source>all public methods with &lt;code&gt;test&lt;/code&gt; prefix are tests</source>
          <target state="translated">&lt;code&gt;test&lt;/code&gt; 접두사가있는 모든 공개 메소드 는 테스트입니다</target>
        </trans-unit>
        <trans-unit id="c11e91644ea1ccd33ce24113335678d8209d5bbe" translate="yes" xml:space="preserve">
          <source>amAWSAuthenticated</source>
          <target state="translated">amAWSAuthenticated</target>
        </trans-unit>
        <trans-unit id="cead45c2f53c641c730103c83edd4e6598286c8d" translate="yes" xml:space="preserve">
          <source>amBearerAuthenticated</source>
          <target state="translated">amBearerAuthenticated</target>
        </trans-unit>
        <trans-unit id="7e1a2de97639754e7a352bfeb1b42936ea9ab1fd" translate="yes" xml:space="preserve">
          <source>amConnectedToDatabase</source>
          <target state="translated">amConnectedToDatabase</target>
        </trans-unit>
        <trans-unit id="1d50d1b498d1c7f46cc73b791e50554acd9a4949" translate="yes" xml:space="preserve">
          <source>amDigestAuthenticated</source>
          <target state="translated">amDigestAuthenticated</target>
        </trans-unit>
        <trans-unit id="b40ba86a8b8785ff82b349c3abbc6e79ef6c9857" translate="yes" xml:space="preserve">
          <source>amHttpAuthenticated</source>
          <target state="translated">amHttpAuthenticated</target>
        </trans-unit>
        <trans-unit id="25ae24696b65e91eb23aebb00c9be6adb477d50e" translate="yes" xml:space="preserve">
          <source>amInPath</source>
          <target state="translated">amInPath</target>
        </trans-unit>
        <trans-unit id="5e1a88e8959fd7285f3647b6597c8638316434b7" translate="yes" xml:space="preserve">
          <source>amLoggedAs</source>
          <target state="translated">amLoggedAs</target>
        </trans-unit>
        <trans-unit id="fd790ddc9ace55cb25f7d16216f1afc4e4ed3c91" translate="yes" xml:space="preserve">
          <source>amLoggedInAs</source>
          <target state="translated">amLoggedInAs</target>
        </trans-unit>
        <trans-unit id="2b3e297846a9e58383a968872777d806bf5c2c0a" translate="yes" xml:space="preserve">
          <source>amNTLMAuthenticated</source>
          <target state="translated">amNTLMAuthenticated</target>
        </trans-unit>
        <trans-unit id="3303eab60238b2aba4b802e8f4683958f59eabfa" translate="yes" xml:space="preserve">
          <source>amOnAction</source>
          <target state="translated">amOnAction</target>
        </trans-unit>
        <trans-unit id="f96600977f40621c585a02b26d2d00160f77a51c" translate="yes" xml:space="preserve">
          <source>amOnPage</source>
          <target state="translated">amOnPage</target>
        </trans-unit>
        <trans-unit id="eacc0ebd01788edd4b63003ae490ed5305563b55" translate="yes" xml:space="preserve">
          <source>amOnRoute</source>
          <target state="translated">amOnRoute</target>
        </trans-unit>
        <trans-unit id="d10584a2f98a33e25601cd5f918fa5a9c64ef9eb" translate="yes" xml:space="preserve">
          <source>amOnSubdomain</source>
          <target state="translated">amOnSubdomain</target>
        </trans-unit>
        <trans-unit id="221e78d5cd242b95271bbc4cfdd6ce9cd3672104" translate="yes" xml:space="preserve">
          <source>amOnUrl</source>
          <target state="translated">amOnUrl</target>
        </trans-unit>
        <trans-unit id="69daf52d6d3a1b78d7a2d59802f7be92f4fb441b" translate="yes" xml:space="preserve">
          <source>and ask Jenkins to collect resulted XML. This can be done as part of Post-build actions. Let&amp;rsquo;s add &lt;em&gt;Publish xUnit test result report&lt;/em&gt; action and configure it to use with PHPUnit reports.</source>
          <target state="translated">Jenkins에게 결과 XML을 수집하도록 요청하십시오. 이는 빌드 후 조치의 일부로 수행 될 수 있습니다. &lt;em&gt;xUnit 테스트 결과 보고서 게시&lt;/em&gt; 조치를 추가 하고 PHPUnit 보고서와 함께 사용하도록 구성하겠습니다.</target>
        </trans-unit>
        <trans-unit id="82361e643aa56dc35a75f752a3a90763ec9ce9c6" translate="yes" xml:space="preserve">
          <source>app - &lt;code&gt;Illuminate\Foundation\Application&lt;/code&gt;</source>
          <target state="translated">app- &lt;code&gt;Illuminate\Foundation\Application&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="23e5cd54e01ad9e1388415cac3cedcb17070ffb6" translate="yes" xml:space="preserve">
          <source>app - &lt;code&gt;\Laravel\Lumen\Application&lt;/code&gt;</source>
          <target state="translated">앱- &lt;code&gt;\Laravel\Lumen\Application&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="dd1a31ec756140717bf18e49f2ba7443cd4fc6bf" translate="yes" xml:space="preserve">
          <source>app_path: &amp;lsquo;app&amp;rsquo; - specify custom path to your app dir, where bootstrap cache and kernel interface is located.</source>
          <target state="translated">app_path : 'app'-부트 스트랩 캐시 및 커널 인터페이스가있는 앱 디렉토리의 사용자 정의 경로를 지정하십시오.</target>
        </trans-unit>
        <trans-unit id="9b8c09235bd7a0dcab13df91777221e9e8bdcedc" translate="yes" xml:space="preserve">
          <source>app_path: &amp;lsquo;app&amp;rsquo; - specify custom path to your app dir, where the kernel interface is located.</source>
          <target state="translated">app_path : 'app'-커널 인터페이스가있는 앱 디렉토리의 사용자 지정 경로를 지정합니다.</target>
        </trans-unit>
        <trans-unit id="19e7391488eb45078c6d65b0840aeb4763d192cc" translate="yes" xml:space="preserve">
          <source>app_path: &amp;lsquo;src&amp;rsquo; - in Symfony 4 Kernel is located inside &lt;code&gt;src&lt;/code&gt;</source>
          <target state="translated">app_path : 'src'-Symfony 4 커널에서 &lt;code&gt;src&lt;/code&gt; 안에 있습니다.</target>
        </trans-unit>
        <trans-unit id="39fbafba701ecd3b23ec22d55a40f790288df262" translate="yes" xml:space="preserve">
          <source>appendField</source>
          <target state="translated">appendField</target>
        </trans-unit>
        <trans-unit id="0e8ab12ffdfecbf8193b5792d30d47959b85a37c" translate="yes" xml:space="preserve">
          <source>application - instance of &lt;code&gt;\Zend\Expressive\Application&lt;/code&gt;</source>
          <target state="translated">application- &lt;code&gt;\Zend\Expressive\Application&lt;/code&gt; 인스턴스</target>
        </trans-unit>
        <trans-unit id="4bbc777c3a069bc8c087adf6d309338d4c2eaeb6" translate="yes" xml:space="preserve">
          <source>application - instance of &lt;code&gt;\Zend\Mvc\ApplicationInterface&lt;/code&gt;</source>
          <target state="translated">application- &lt;code&gt;\Zend\Mvc\ApplicationInterface&lt;/code&gt; 인스턴스</target>
        </trans-unit>
        <trans-unit id="392ddb0d22cc5a86591ba8c926bfcbdc6142773b" translate="yes" xml:space="preserve">
          <source>archive (not available for Windows systems), generated by</source>
          <target state="translated">다음에 의해 생성 된 아카이브 (Windows 시스템에는 사용할 수 없음)</target>
        </trans-unit>
        <trans-unit id="312249dd3f90bea44aa7cee3b89ce84c44ae8e67" translate="yes" xml:space="preserve">
          <source>array $key</source>
          <target state="translated">배열 $ key</target>
        </trans-unit>
        <trans-unit id="862cb8d7f273bcd3e027fc0704fa0367789da168" translate="yes" xml:space="preserve">
          <source>array $user</source>
          <target state="translated">배열 $ user</target>
        </trans-unit>
        <trans-unit id="fbf1214738faacd77d8a80eb8b0f5b62915b3b9c" translate="yes" xml:space="preserve">
          <source>array (json object is array as well)</source>
          <target state="translated">배열 (json 객체도 배열입니다)</target>
        </trans-unit>
        <trans-unit id="3186f58273907b96210637759954438a50c4b855" translate="yes" xml:space="preserve">
          <source>ask()</source>
          <target state="translated">ask()</target>
        </trans-unit>
        <trans-unit id="63ae10d79f4a0c4781e4e9b2dacd5c9896a57556" translate="yes" xml:space="preserve">
          <source>assert()</source>
          <target state="translated">assert()</target>
        </trans-unit>
        <trans-unit id="de99eff73be73254231ab77a8597c0b2ba133742" translate="yes" xml:space="preserve">
          <source>assertArrayHasKey</source>
          <target state="translated">assertArrayHasKey</target>
        </trans-unit>
        <trans-unit id="a78da1b13adfdedef3f1bdb6aaf4c3e389aad03b" translate="yes" xml:space="preserve">
          <source>assertArrayHasKey()</source>
          <target state="translated">assertArrayHasKey()</target>
        </trans-unit>
        <trans-unit id="af8e6edb5f8d2d63acd11a80a4f20cf5084536a4" translate="yes" xml:space="preserve">
          <source>assertArrayNotHasKey</source>
          <target state="translated">assertArrayNotHasKey</target>
        </trans-unit>
        <trans-unit id="1898cb9e054d134bd0d92dc41b251be714a8154c" translate="yes" xml:space="preserve">
          <source>assertArrayNotHasKey()</source>
          <target state="translated">assertArrayNotHasKey()</target>
        </trans-unit>
        <trans-unit id="2953b43f13241d2e3cd276715de3bff946c20d30" translate="yes" xml:space="preserve">
          <source>assertArraySubset()</source>
          <target state="translated">assertArraySubset()</target>
        </trans-unit>
        <trans-unit id="95b4d3b9a95d5a5f0c7df5230dc7cf64d88ccfda" translate="yes" xml:space="preserve">
          <source>assertContains</source>
          <target state="translated">assertContains</target>
        </trans-unit>
        <trans-unit id="d4d83fecf7ab236a0a17aac75ff7f4dd28930221" translate="yes" xml:space="preserve">
          <source>assertContains()</source>
          <target state="translated">assertContains()</target>
        </trans-unit>
        <trans-unit id="7d80ba3fab42109758b6360e31b11255ae6c6cc3" translate="yes" xml:space="preserve">
          <source>assertCount</source>
          <target state="translated">assertCount</target>
        </trans-unit>
        <trans-unit id="961c3e8662def888f4511a97c4f41e3757d19e7f" translate="yes" xml:space="preserve">
          <source>assertCount()</source>
          <target state="translated">assertCount()</target>
        </trans-unit>
        <trans-unit id="e0ac1aad0222d0b43da1bb944e7ddd497113adf9" translate="yes" xml:space="preserve">
          <source>assertEmpty</source>
          <target state="translated">assertEmpty</target>
        </trans-unit>
        <trans-unit id="174d89589791a9491723378104e29bf46c03dbf6" translate="yes" xml:space="preserve">
          <source>assertEmpty()</source>
          <target state="translated">assertEmpty()</target>
        </trans-unit>
        <trans-unit id="b221e27e0ff7a2bddbad1afe92577208176a7461" translate="yes" xml:space="preserve">
          <source>assertEquals</source>
          <target state="translated">assertEquals</target>
        </trans-unit>
        <trans-unit id="23ccb551a3cdb1d2bd5c433b6c1d201359698e8e" translate="yes" xml:space="preserve">
          <source>assertEquals()</source>
          <target state="translated">assertEquals()</target>
        </trans-unit>
        <trans-unit id="b3ff8a174eb3c21635fec15727756e91beb3bf65" translate="yes" xml:space="preserve">
          <source>assertFalse</source>
          <target state="translated">assertFalse</target>
        </trans-unit>
        <trans-unit id="6d46d5b6994420e250f3385039725d27ac3ecb42" translate="yes" xml:space="preserve">
          <source>assertFalse()</source>
          <target state="translated">assertFalse()</target>
        </trans-unit>
        <trans-unit id="11d8cc15dcd5a1053fbe4bb3b2b3770987b4232e" translate="yes" xml:space="preserve">
          <source>assertFileExists</source>
          <target state="translated">assertFileExists</target>
        </trans-unit>
        <trans-unit id="654f4244568f9ec544b303f3e1ed51205d669205" translate="yes" xml:space="preserve">
          <source>assertFileExists()</source>
          <target state="translated">assertFileExists()</target>
        </trans-unit>
        <trans-unit id="16dd598e55bf62be5f84ba52ce67a848a8b0421c" translate="yes" xml:space="preserve">
          <source>assertFileNotExists</source>
          <target state="translated">assertFileNotExists</target>
        </trans-unit>
        <trans-unit id="1a4700ebcc07104cb3fefcf8f90bcb3b8af5b946" translate="yes" xml:space="preserve">
          <source>assertFileNotExists()</source>
          <target state="translated">assertFileNotExists()</target>
        </trans-unit>
        <trans-unit id="0c14163fd631bb1fe18f56222f0b7c020694c4b1" translate="yes" xml:space="preserve">
          <source>assertGreaterOrEquals</source>
          <target state="translated">assertGreaterOrEquals</target>
        </trans-unit>
        <trans-unit id="db3dfa3db8c7c5fe2641ef82a5153672b09cc694" translate="yes" xml:space="preserve">
          <source>assertGreaterOrEquals()</source>
          <target state="translated">assertGreaterOrEquals()</target>
        </trans-unit>
        <trans-unit id="282f761c83bdf5621ac208dd92b094be9ba0a39f" translate="yes" xml:space="preserve">
          <source>assertGreaterThan</source>
          <target state="translated">assertGreaterThan</target>
        </trans-unit>
        <trans-unit id="d79190d5b985d820ee4285db5373b9f6e44e3624" translate="yes" xml:space="preserve">
          <source>assertGreaterThan()</source>
          <target state="translated">assertGreaterThan()</target>
        </trans-unit>
        <trans-unit id="bbfca4d9c9bcd07e9b27f3f2fff4de591f20ef1d" translate="yes" xml:space="preserve">
          <source>assertGreaterThanOrEqual</source>
          <target state="translated">assertGreaterThanOrEqual</target>
        </trans-unit>
        <trans-unit id="d30c28860338bc110c65a0e74fbe208c835a5543" translate="yes" xml:space="preserve">
          <source>assertGreaterThanOrEqual()</source>
          <target state="translated">assertGreaterThanOrEqual()</target>
        </trans-unit>
        <trans-unit id="c5589ea9bb5a80a53667173d6a657dbdcb47669b" translate="yes" xml:space="preserve">
          <source>assertInstanceOf</source>
          <target state="translated">assertInstanceOf</target>
        </trans-unit>
        <trans-unit id="f29777c90474ee551ac8002f589576c2d13ed4ff" translate="yes" xml:space="preserve">
          <source>assertInstanceOf()</source>
          <target state="translated">assertInstanceOf()</target>
        </trans-unit>
        <trans-unit id="26b1bd421192f88b1cf74ca66c6cee159f7f358d" translate="yes" xml:space="preserve">
          <source>assertInternalType</source>
          <target state="translated">assertInternalType</target>
        </trans-unit>
        <trans-unit id="a14e8e87a44fab357571956b107842d15cc9cd43" translate="yes" xml:space="preserve">
          <source>assertInternalType()</source>
          <target state="translated">assertInternalType()</target>
        </trans-unit>
        <trans-unit id="c9df4adf3bacc51ae87264b1f9e6a5a70375534c" translate="yes" xml:space="preserve">
          <source>assertIsArray</source>
          <target state="translated">assertIsArray</target>
        </trans-unit>
        <trans-unit id="13efdadd2c21ab219598c54a71edb9736540a9da" translate="yes" xml:space="preserve">
          <source>assertIsArray()</source>
          <target state="translated">assertIsArray()</target>
        </trans-unit>
        <trans-unit id="f49f279dbb64adfe080744966c1ff48d229127e0" translate="yes" xml:space="preserve">
          <source>assertIsBool</source>
          <target state="translated">assertIsBool</target>
        </trans-unit>
        <trans-unit id="9e4c133121a823092c56cc92d4e0e712b12a0b6f" translate="yes" xml:space="preserve">
          <source>assertIsBool()</source>
          <target state="translated">assertIsBool()</target>
        </trans-unit>
        <trans-unit id="c2c864e3408f0b23688cd27e11e221fe9f6a01b6" translate="yes" xml:space="preserve">
          <source>assertIsCallable</source>
          <target state="translated">assertIsCallable</target>
        </trans-unit>
        <trans-unit id="e5c32b8a4719c61a8a557530e5312afdaf3f3c8f" translate="yes" xml:space="preserve">
          <source>assertIsCallable()</source>
          <target state="translated">assertIsCallable()</target>
        </trans-unit>
        <trans-unit id="06731dc6975229fcb3233d5deaa5ad15f54e5aa8" translate="yes" xml:space="preserve">
          <source>assertIsEmpty</source>
          <target state="translated">assertIsEmpty</target>
        </trans-unit>
        <trans-unit id="8be56bcb6b961643b7f73a13f1f76a235b7d0bae" translate="yes" xml:space="preserve">
          <source>assertIsEmpty()</source>
          <target state="translated">assertIsEmpty()</target>
        </trans-unit>
        <trans-unit id="12f419a593132eee84c29e36772a0f24b49f2e86" translate="yes" xml:space="preserve">
          <source>assertIsFloat</source>
          <target state="translated">assertIsFloat</target>
        </trans-unit>
        <trans-unit id="dc2d080b033494182eb8ab3449032c384a49051f" translate="yes" xml:space="preserve">
          <source>assertIsFloat()</source>
          <target state="translated">assertIsFloat()</target>
        </trans-unit>
        <trans-unit id="c98f4476be6a8543d23e08cfb6407430de16d108" translate="yes" xml:space="preserve">
          <source>assertIsInt</source>
          <target state="translated">assertIsInt</target>
        </trans-unit>
        <trans-unit id="3b9636a390f35c7fca2e571f75495bcbe8b2470d" translate="yes" xml:space="preserve">
          <source>assertIsInt()</source>
          <target state="translated">assertIsInt()</target>
        </trans-unit>
        <trans-unit id="f5eba15e9bce3dff1c08ce5e7fd5730307e13590" translate="yes" xml:space="preserve">
          <source>assertIsNotArray</source>
          <target state="translated">assertIsNotArray</target>
        </trans-unit>
        <trans-unit id="9c69c5fc025325bbaf65cc4ca9bf2c73633de065" translate="yes" xml:space="preserve">
          <source>assertIsNotArray()</source>
          <target state="translated">assertIsNotArray()</target>
        </trans-unit>
        <trans-unit id="6d06f4fa8a18f90b4f8e0e5823e6448735228768" translate="yes" xml:space="preserve">
          <source>assertIsNotBool</source>
          <target state="translated">assertIsNotBool</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
