<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="codeception">
    <body>
      <group id="codeception">
        <trans-unit id="dd8ad6e0dac8d0ac7582f71682ef6dd9a21fc0f6" translate="yes" xml:space="preserve">
          <source>Asserts::assertIsNotObject</source>
          <target state="translated">Asserts::assertIsNotObject</target>
        </trans-unit>
        <trans-unit id="224c4f738bbe8881c27df99acf8990b62d01d966" translate="yes" xml:space="preserve">
          <source>Asserts::assertIsNotResource</source>
          <target state="translated">Asserts::assertIsNotResource</target>
        </trans-unit>
        <trans-unit id="738c70588169b1be19b6585d4dea2b2fc220e22a" translate="yes" xml:space="preserve">
          <source>Asserts::assertIsNotScalar</source>
          <target state="translated">Asserts::assertIsNotScalar</target>
        </trans-unit>
        <trans-unit id="eb43ae0150690c98e9626733c9bef50790e1dcfb" translate="yes" xml:space="preserve">
          <source>Asserts::assertIsNotString</source>
          <target state="translated">Asserts::assertIsNotString</target>
        </trans-unit>
        <trans-unit id="35997003d7a2a653bcaf930b858ada46c790f908" translate="yes" xml:space="preserve">
          <source>Asserts::assertIsNumeric</source>
          <target state="translated">Asserts::assertIsNumeric</target>
        </trans-unit>
        <trans-unit id="6dd601e6076eb38cf126ccbdec06d5104825970a" translate="yes" xml:space="preserve">
          <source>Asserts::assertIsObject</source>
          <target state="translated">Asserts::assertIsObject</target>
        </trans-unit>
        <trans-unit id="e02dae83e762cd81031fa43f02a551e09d9bcdca" translate="yes" xml:space="preserve">
          <source>Asserts::assertIsResource</source>
          <target state="translated">Asserts::assertIsResource</target>
        </trans-unit>
        <trans-unit id="1cc7c23c3504f5792a0e46b15fa5cdd1a1214e8d" translate="yes" xml:space="preserve">
          <source>Asserts::assertIsScalar</source>
          <target state="translated">Asserts::assertIsScalar</target>
        </trans-unit>
        <trans-unit id="6f6794a6cac9bb947b8d19847fbf9c9cd3027b99" translate="yes" xml:space="preserve">
          <source>Asserts::assertIsString</source>
          <target state="translated">Asserts::assertIsString</target>
        </trans-unit>
        <trans-unit id="8c70b7420f85df1ecf5f7ca50b6f68518ba63ce2" translate="yes" xml:space="preserve">
          <source>Asserts::assertLessOrEquals</source>
          <target state="translated">Asserts::assertLessOrEquals</target>
        </trans-unit>
        <trans-unit id="ff1a2bf6faab7dfbd4e29b6d294a66900a9b157b" translate="yes" xml:space="preserve">
          <source>Asserts::assertLessThan</source>
          <target state="translated">Asserts::assertLessThan</target>
        </trans-unit>
        <trans-unit id="737efc4d4367e4b7b5513637608fd391d68ba04b" translate="yes" xml:space="preserve">
          <source>Asserts::assertLessThanOrEqual</source>
          <target state="translated">Asserts::assertLessThanOrEqual</target>
        </trans-unit>
        <trans-unit id="4e39479b825ffa67dd4da9d10d5d537b3287443c" translate="yes" xml:space="preserve">
          <source>Asserts::assertNotContains</source>
          <target state="translated">Asserts::assertNotContains</target>
        </trans-unit>
        <trans-unit id="ad0b89aeb32995f2a2cfc3d64e955fe31cca5e66" translate="yes" xml:space="preserve">
          <source>Asserts::assertNotEmpty</source>
          <target state="translated">Asserts::assertNotEmpty</target>
        </trans-unit>
        <trans-unit id="a15a3b35d90f57536d0481bee1660a07d9267925" translate="yes" xml:space="preserve">
          <source>Asserts::assertNotEquals</source>
          <target state="translated">Asserts::assertNotEquals</target>
        </trans-unit>
        <trans-unit id="84739d6aad075116accef65b266bf87c6699d249" translate="yes" xml:space="preserve">
          <source>Asserts::assertNotFalse</source>
          <target state="translated">Asserts::assertNotFalse</target>
        </trans-unit>
        <trans-unit id="b91abf98e48ce8be2478290c7a3ae3f22051c922" translate="yes" xml:space="preserve">
          <source>Asserts::assertNotInstanceOf</source>
          <target state="translated">Asserts::assertNotInstanceOf</target>
        </trans-unit>
        <trans-unit id="e889b39d56ded95317fb093a564f2208ae8be7d2" translate="yes" xml:space="preserve">
          <source>Asserts::assertNotNull</source>
          <target state="translated">Asserts::assertNotNull</target>
        </trans-unit>
        <trans-unit id="a7206b6d59bc1aaad73cf148ad4d446918871997" translate="yes" xml:space="preserve">
          <source>Asserts::assertNotRegExp</source>
          <target state="translated">Asserts::assertNotRegExp</target>
        </trans-unit>
        <trans-unit id="39cd5b581fb3a01e60c975eda87b491138132741" translate="yes" xml:space="preserve">
          <source>Asserts::assertNotSame</source>
          <target state="translated">Asserts::assertNotSame</target>
        </trans-unit>
        <trans-unit id="7b6d3cf8ebe569ea921a54742719480adf43d504" translate="yes" xml:space="preserve">
          <source>Asserts::assertNotTrue</source>
          <target state="translated">Asserts::assertNotTrue</target>
        </trans-unit>
        <trans-unit id="e031fb6402df4e329ddc8a76d503a49752f98dca" translate="yes" xml:space="preserve">
          <source>Asserts::assertNull</source>
          <target state="translated">Asserts::assertNull</target>
        </trans-unit>
        <trans-unit id="6e2b07eecc5e95994f2227d53136f7e5fb09dcc5" translate="yes" xml:space="preserve">
          <source>Asserts::assertRegExp</source>
          <target state="translated">Asserts::assertRegExp</target>
        </trans-unit>
        <trans-unit id="8c23ab1ffdc174c05a750863f35f0d4fd518573f" translate="yes" xml:space="preserve">
          <source>Asserts::assertSame</source>
          <target state="translated">Asserts::assertSame</target>
        </trans-unit>
        <trans-unit id="bdddfeaddfa9309c256614e7372436dc1f155f50" translate="yes" xml:space="preserve">
          <source>Asserts::assertStringContainsString</source>
          <target state="translated">Asserts::assertStringContainsString</target>
        </trans-unit>
        <trans-unit id="07bc96ad0672b9ec3d543abae9c9427fc2bc42df" translate="yes" xml:space="preserve">
          <source>Asserts::assertStringContainsStringIgnoringCase</source>
          <target state="translated">Asserts::assertStringContainsStringIgnoringCase</target>
        </trans-unit>
        <trans-unit id="8c30bdc859a5546237ea90ef8660b7a27197afda" translate="yes" xml:space="preserve">
          <source>Asserts::assertStringNotContainsString</source>
          <target state="translated">Asserts::assertStringNotContainsString</target>
        </trans-unit>
        <trans-unit id="21446cd78e929ffe2ba9a148785f8703110d58ea" translate="yes" xml:space="preserve">
          <source>Asserts::assertStringNotContainsStringIgnoringCase</source>
          <target state="translated">Asserts::assertStringNotContainsStringIgnoringCase</target>
        </trans-unit>
        <trans-unit id="6c543cd4b40a8ec0045ebc3be181cc080c3f2dba" translate="yes" xml:space="preserve">
          <source>Asserts::assertStringStartsNotWith</source>
          <target state="translated">Asserts::assertStringStartsNotWith</target>
        </trans-unit>
        <trans-unit id="cf505a08313a7f9ffa0213facc6c4dcbca775e0e" translate="yes" xml:space="preserve">
          <source>Asserts::assertStringStartsWith</source>
          <target state="translated">Asserts::assertStringStartsWith</target>
        </trans-unit>
        <trans-unit id="b504b264225fa6dd5cc4229a0ccd9989f5c26439" translate="yes" xml:space="preserve">
          <source>Asserts::assertTrue</source>
          <target state="translated">Asserts::assertTrue</target>
        </trans-unit>
        <trans-unit id="d412c223796f00022919315983fea80f3fa116f0" translate="yes" xml:space="preserve">
          <source>Asserts::expectException</source>
          <target state="translated">Asserts::expectException</target>
        </trans-unit>
        <trans-unit id="f6893b8dd29cbc3d9b10f007eb8691368acdbc02" translate="yes" xml:space="preserve">
          <source>Asserts::expectThrowable</source>
          <target state="translated">Asserts::expectThrowable</target>
        </trans-unit>
        <trans-unit id="24a6d479f1401fa9bb18e3960d0619b515c659c3" translate="yes" xml:space="preserve">
          <source>Asserts::fail</source>
          <target state="translated">Asserts::fail</target>
        </trans-unit>
        <trans-unit id="9c0e5b046372252f3c784bff6ae24ce23b7205e9" translate="yes" xml:space="preserve">
          <source>At first we need to create build project. Depending on your needs you can set up periodical build or trigger build once the change is pushed to GitHub (you will need GitHub plugin for that).</source>
          <target state="translated">처음에는 빌드 프로젝트를 만들어야합니다. 필요에 따라 변경 사항을 GitHub로 푸시하면 주기적 빌드 또는 트리거 빌드를 설정할 수 있습니다 (GitHub 플러그인이 필요함).</target>
        </trans-unit>
        <trans-unit id="8beae37760a9f22b157067687fe7e04b01b1d415" translate="yes" xml:space="preserve">
          <source>At some point you want to review which parts of your application are tested well and which are not. Just for this case the &lt;a href=&quot;https://en.wikipedia.org/wiki/Code_coverage&quot;&gt;CodeCoverage&lt;/a&gt; is used. When you execute your tests to collect coverage report, you will receive statistics of all classes, methods, and lines triggered by these tests. The ratio between all lines in script and all touched lines is a main coverage criterion. In the ideal world you should get 100% code coverage, but in reality 80% is really enough. Because even 100% code coverage rate doesn&amp;rsquo;t save you from fatal errors and crashes.</source>
          <target state="translated">어떤 시점에서 응용 프로그램의 어느 부분이 제대로 테스트되었고 그렇지 않은 부분을 검토하려고합니다. 이 경우 &lt;a href=&quot;https://en.wikipedia.org/wiki/Code_coverage&quot;&gt;CodeCoverage&lt;/a&gt; 가 사용됩니다. 적용 범위 보고서를 수집하기 위해 테스트를 실행하면이 테스트에 의해 트리거 된 모든 클래스, 메소드 및 행에 대한 통계를받습니다. 스크립트의 모든 라인과 모든 터치 된 라인 사이의 비율이 주요 적용 기준입니다. 이상적인 세계에서는 100 % 코드 적용 범위를 가져야하지만 실제로 80 %이면 충분합니다. 100 % 코드 적용률조차도 치명적인 오류와 충돌로부터 당신을 구할 수 없기 때문입니다.</target>
        </trans-unit>
        <trans-unit id="f0034761304a08534abb93f4cd510ee51dc54b73" translate="yes" xml:space="preserve">
          <source>At the end of a test all configuration changes will be rolled back to the original configuration values.</source>
          <target state="translated">테스트가 끝나면 모든 구성 변경 사항이 원래 구성 값으로 롤백됩니다.</target>
        </trans-unit>
        <trans-unit id="3bc99a3a12026abdebfbe2dd4852181c536757ad" translate="yes" xml:space="preserve">
          <source>At the end of test execution</source>
          <target state="translated">테스트 실행이 끝날 때</target>
        </trans-unit>
        <trans-unit id="7e7a617d1b28474f090c57053f851cb083262e25" translate="yes" xml:space="preserve">
          <source>At the end, it is worth specifying that Docker setup can be complicated and please make sure you understand Docker and Docker Compose before proceed. We prepared some links that might help you:</source>
          <target state="translated">마지막으로 Docker 설정이 복잡 할 수 있음을 지정하는 것이 좋습니다. 계속하기 전에 Docker 및 Docker Compose를 이해해야합니다. 도움이 될만한 몇 가지 링크를 준비했습니다.</target>
        </trans-unit>
        <trans-unit id="2fa0a5f6862c8f26a6f0e42b6ed096586144d6e8" translate="yes" xml:space="preserve">
          <source>At the very beginning of test execution</source>
          <target state="translated">테스트 실행 초기에</target>
        </trans-unit>
        <trans-unit id="35dbda7232096e54894992ca579a77d65bd8e965" translate="yes" xml:space="preserve">
          <source>Attaches a file relative to the Codeception &lt;code&gt;_data&lt;/code&gt; directory to the given file upload field.</source>
          <target state="translated">Codeception &lt;code&gt;_data&lt;/code&gt; 디렉토리를 기준으로 파일을 지정된 파일 업로드 필드에 첨부합니다.</target>
        </trans-unit>
        <trans-unit id="69f0e738d5583a8fc95135c5f7104ef010ebf9e4" translate="yes" xml:space="preserve">
          <source>Authenticates user for HTTP_AUTH</source>
          <target state="translated">HTTP_AUTH에 대한 사용자를 인증합니다</target>
        </trans-unit>
        <trans-unit id="5e25ce007aa95ea2ea8b158aee9c630a32ea5616" translate="yes" xml:space="preserve">
          <source>Authorization</source>
          <target state="translated">Authorization</target>
        </trans-unit>
        <trans-unit id="9f3cce286f9f591bfdd6fa508d994374085e6605" translate="yes" xml:space="preserve">
          <source>Authorizes user on a site without submitting login form. Use it for fast pragmatic authorization in functional tests.</source>
          <target state="translated">로그인 양식을 제출하지 않고 사이트의 사용자에게 권한을 부여합니다. 기능 테스트에서 빠른 실용 인증에 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="23202869fef04e28319a4ccf327e8c770f74e322" translate="yes" xml:space="preserve">
          <source>Auto-updates phar archive from official site: &amp;lsquo;http://codeception.com/codecept.phar&amp;rsquo; .</source>
          <target state="translated">'http://codeception.com/codecept.phar'공식 사이트에서 phar 아카이브를 자동 업데이트합니다.</target>
        </trans-unit>
        <trans-unit id="b4de9ff9e742ed376594251c274259a2c24272d5" translate="yes" xml:space="preserve">
          <source>Autoload::__construct()</source>
          <target state="translated">Autoload::__construct()</target>
        </trans-unit>
        <trans-unit id="5e913aacc921bacc475b6f517a9f1b88b3f0363d" translate="yes" xml:space="preserve">
          <source>Autoload::addNamespace()</source>
          <target state="translated">Autoload::addNamespace()</target>
        </trans-unit>
        <trans-unit id="b744fc8c798d203e655cd2eeefb5ee807d84f561" translate="yes" xml:space="preserve">
          <source>Autoload::load()</source>
          <target state="translated">Autoload::load()</target>
        </trans-unit>
        <trans-unit id="277d2ae06028be36e9579d7c7f0c4b6aac036dd7" translate="yes" xml:space="preserve">
          <source>Autoload::loadMappedFile()</source>
          <target state="translated">Autoload::loadMappedFile()</target>
        </trans-unit>
        <trans-unit id="13a9f64a55132376441dfcf451e8a585765505f4" translate="yes" xml:space="preserve">
          <source>Autoload::requireFile()</source>
          <target state="translated">Autoload::requireFile()</target>
        </trans-unit>
        <trans-unit id="3d219bbebdee827979cc47cd0c45091532448e35" translate="yes" xml:space="preserve">
          <source>Autoloader, which is fully compatible with PSR-4, and can be used to autoload your &lt;code&gt;Helper&lt;/code&gt;, &lt;code&gt;Page&lt;/code&gt;, and &lt;code&gt;Step&lt;/code&gt; classes.</source>
          <target state="translated">Autoloader는 PSR-4와 완벽하게 호환되며 &lt;code&gt;Helper&lt;/code&gt; , &lt;code&gt;Page&lt;/code&gt; 및 &lt;code&gt;Step&lt;/code&gt; 클래스 를 자동로드하는 데 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="38b5d0dd2a1d99cba157a215ae014edf10488b48" translate="yes" xml:space="preserve">
          <source>BDD</source>
          <target state="translated">BDD</target>
        </trans-unit>
        <trans-unit id="236ae28dbecf28768a3709f7d5a684df5a19f740" translate="yes" xml:space="preserve">
          <source>BDD encourages exploration and debate in order to formalize the requirements and the features that needs to be implemented by requesting to write the User Stories in a way that everyone can understand.</source>
          <target state="translated">BDD는 모든 사람이 이해할 수있는 방식으로 사용자 사례를 작성하도록 요청하여 구현해야하는 요구 사항과 기능을 공식화하기 위해 탐색 및 토론을 장려합니다.</target>
        </trans-unit>
        <trans-unit id="c92e4fb9e11761882d073a2c3464ca4b4f2d30c1" translate="yes" xml:space="preserve">
          <source>BDD has its own evolution from the days it was born, started by replacing &amp;ldquo;test&amp;rdquo; to &amp;ldquo;should&amp;rdquo; in unit tests, and moving towards powerful tools like Cucumber and Behat, which made user stories (human readable text) to be executed as an acceptance test.</source>
          <target state="translated">BDD는 처음부터 단위 테스트에서 &quot;test&quot;를 &quot;should&quot;로 바꾸고 Cucumber 및 Behat과 같은 강력한 도구로 이동하여 사용자 스토리 (사람이 읽을 수있는 텍스트)를 승인 테스트.</target>
        </trans-unit>
        <trans-unit id="44a60639609e668544aa829cd0164c1f3fb0f590" translate="yes" xml:space="preserve">
          <source>BDD was introduced by &lt;a href=&quot;https://dannorth.net/introducing-bdd/&quot;&gt;Dan North&lt;/a&gt;. He described it as:</source>
          <target state="translated">BDD는 &lt;a href=&quot;https://dannorth.net/introducing-bdd/&quot;&gt;Dan North에&lt;/a&gt; 의해 소개되었습니다 . 그는 그것을 다음과 같이 설명했다.</target>
        </trans-unit>
        <trans-unit id="64dd60fe1a049fe6db3eb1369dec2e42bf428e21" translate="yes" xml:space="preserve">
          <source>Background</source>
          <target state="translated">Background</target>
        </trans-unit>
        <trans-unit id="27c201541e9702b97c568e12cac1d3cd5245954c" translate="yes" xml:space="preserve">
          <source>Basic Setup</source>
          <target state="translated">기본 설정</target>
        </trans-unit>
        <trans-unit id="c6db26702117efa7f5e8a01c90f5a4dc73e0ab41" translate="yes" xml:space="preserve">
          <source>Basic class for Modules and Helpers. You must extend from it while implementing own helpers.</source>
          <target state="translated">모듈과 헬퍼를위한 기본 클래스. 자신의 도우미를 구현하면서 확장해야합니다.</target>
        </trans-unit>
        <trans-unit id="de4170e8d22bb2e0912d3b03aba91a32b185c2d0" translate="yes" xml:space="preserve">
          <source>Basic example:</source>
          <target state="translated">기본 예 :</target>
        </trans-unit>
        <trans-unit id="65f6d95b5bdf4b17c57af848cb042f7a2955f25f" translate="yes" xml:space="preserve">
          <source>Basically you can define different environments inside the &lt;code&gt;env&lt;/code&gt; root, name them (&lt;code&gt;phantom&lt;/code&gt;, &lt;code&gt;chrome&lt;/code&gt; etc.), and then redefine any configuration parameters that were set before.</source>
          <target state="translated">기본적으로 &lt;code&gt;env&lt;/code&gt; 루트 내에서 다른 환경을 정의하고 환경 이름 ( &lt;code&gt;phantom&lt;/code&gt; , &lt;code&gt;chrome&lt;/code&gt; 등)을 설정 한 다음 이전에 설정 한 구성 매개 변수를 재정의 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="13c7240b5dbe7e6809465b69736a5cafd03e490e" translate="yes" xml:space="preserve">
          <source>Be sure you don&amp;rsquo;t use the production server to connect.</source>
          <target state="translated">프로덕션 서버를 사용하여 연결하지 마십시오.</target>
        </trans-unit>
        <trans-unit id="79ef848b7612623f9297a1f463cd4cfb26b2f007" translate="yes" xml:space="preserve">
          <source>Be warned that fuzzy locators can be significantly slower than strict locators. Especially if you use Selenium WebDriver with &lt;code&gt;wait&lt;/code&gt; (aka implicit wait) option. In the example above if you set &lt;code&gt;wait&lt;/code&gt; to 5 seconds and use XPath string as fuzzy locator, &lt;code&gt;submitForm&lt;/code&gt; method will wait for 5 seconds at each step. That means 5 seconds finding the form by ID, another 5 seconds finding by CSS until it finally tries to find the form by XPath). If speed is a concern, it&amp;rsquo;s recommended you stick with explicitly specifying the locator type via the array syntax.</source>
          <target state="translated">퍼지 로케이터는 엄격한 로케이터보다 훨씬 느릴 수 있습니다. 특히 Selenium WebDriver를 &lt;code&gt;wait&lt;/code&gt; (일명 암시 적 대기) 옵션 과 함께 사용하는 경우 . 위의 예제에서 &lt;code&gt;wait&lt;/code&gt; 를 5 초로 설정 하고 XPath 문자열을 퍼지 로케이터로 사용하면 &lt;code&gt;submitForm&lt;/code&gt; 메소드는 각 단계에서 5 초 동안 대기합니다. 즉, ID로 양식을 찾는 5 초, 마지막으로 XPath로 양식을 찾으려고 할 때까지 CSS에서 5 초를 찾는 것을 의미합니다. 속도가 중요한 경우, 배열 구문을 통해 로케이터 유형을 명시 적으로 지정하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="83e3de8098e0ef7d6d99eb5d7beecb45dfb587b5" translate="yes" xml:space="preserve">
          <source>Beanstalkd</source>
          <target state="translated">Beanstalkd</target>
        </trans-unit>
        <trans-unit id="b057975b68bfd4db62bc509cd52526e49ddd01fb" translate="yes" xml:space="preserve">
          <source>Beanstalkd: &lt;strong&gt;stable&lt;/strong&gt;</source>
          <target state="translated">콩 줄기 : &lt;strong&gt;안정&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4eeff6525bc968c1d5c7ec7892976a06b1227468" translate="yes" xml:space="preserve">
          <source>Beanstalkd: pda/pheanstalk ~3.0</source>
          <target state="translated">콩 줄기 : pda / phanstalk ~ 3.0</target>
        </trans-unit>
        <trans-unit id="2bad379e71691ec4daf723999f856a32237d637d" translate="yes" xml:space="preserve">
          <source>Before step</source>
          <target state="translated">단계 전에</target>
        </trans-unit>
        <trans-unit id="80c897d583a2a2e2502974239bb2fa3ce99c0e38" translate="yes" xml:space="preserve">
          <source>Before suite is executed</source>
          <target state="translated">스위트가 실행되기 전에</target>
        </trans-unit>
        <trans-unit id="8080b453d6fb464065e24763debece2f1f210d5f" translate="yes" xml:space="preserve">
          <source>Before test is executed</source>
          <target state="translated">테스트가 실행되기 전에</target>
        </trans-unit>
        <trans-unit id="d76ce9297a90dc8b6de094404a3501f96d761648" translate="yes" xml:space="preserve">
          <source>Before we execute this test, we should make sure that the website is running on a local web server. Let&amp;rsquo;s open the &lt;code&gt;tests/acceptance.suite.yml&lt;/code&gt; file and replace the URL with the URL of your web application:</source>
          <target state="translated">이 테스트를 실행하기 전에 웹 사이트가 로컬 웹 서버에서 실행 중인지 확인해야합니다. &lt;code&gt;tests/acceptance.suite.yml&lt;/code&gt; 파일을 열고 URL을 웹 응용 프로그램의 URL로 바꾸십시오.</target>
        </trans-unit>
        <trans-unit id="5f761aeb8bca5813a57d1c6e3e7125c56abb8229" translate="yes" xml:space="preserve">
          <source>Before/After Annotations</source>
          <target state="translated">주석 전후</target>
        </trans-unit>
        <trans-unit id="47339c9a15586b43505d2dc883127e6b2e5267f1" translate="yes" xml:space="preserve">
          <source>Behavior Driven Development</source>
          <target state="translated">행동 중심 개발</target>
        </trans-unit>
        <trans-unit id="d1a42739c8f6e6970d33e1f492afe4e2d34200ea" translate="yes" xml:space="preserve">
          <source>Behavior Driven Development (BDD) is a popular software development methodology. BDD is considered an extension of TDD, and is greatly inspired by &lt;a href=&quot;http://agilemanifesto.org/&quot;&gt;Agile&lt;/a&gt; practices. The primary reason to choose BDD as your development process is to break down communication barriers between business and technical teams. BDD encourages the use of automated testing to verify all documented features of a project from the very beginning. This is why it is common to talk about BDD in the context of test frameworks (like Codeception). The BDD approach, however, is about much more than testing - it is a common language for all team members to use during the development process.</source>
          <target state="translated">BDD (Behavior Driven Development)는 널리 사용되는 소프트웨어 개발 방법입니다. BDD는 TDD의 확장으로 간주되며 &lt;a href=&quot;http://agilemanifesto.org/&quot;&gt;애자일&lt;/a&gt; 관행에 크게 영향을받습니다 . BDD를 개발 프로세스로 선택하는 주된 이유는 비즈니스 팀과 기술 팀 간의 커뮤니케이션 장벽을 없애기 위함입니다. BDD는 자동화 된 테스트를 사용하여 프로젝트의 모든 문서화 된 기능을 처음부터 확인하도록 권장합니다. 그렇기 때문에 테스트 프레임 워크 (Codeception과 같은)에서 BDD에 대해 이야기하는 것이 일반적입니다. 그러나 BDD 접근 방식은 테스트 이상의 것입니다. 이는 개발 과정에서 모든 팀 구성원이 사용하는 공통 언어입니다.</target>
        </trans-unit>
        <trans-unit id="552d5502f55d8acfb1d620e6718015d6679eef65" translate="yes" xml:space="preserve">
          <source>Besides the scenario steps listed we got the notification that our steps are not defined yet. We can define them easily by executing &lt;code&gt;gherkin:snippets&lt;/code&gt; command for the given suite:</source>
          <target state="translated">나열된 시나리오 단계 외에도 단계가 아직 정의되지 않았다는 알림을 받았습니다. 주어진 제품군에 대해 &lt;code&gt;gherkin:snippets&lt;/code&gt; 명령을 실행하여 쉽게 정의 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="090a4df9a0c549f06612bafdc4222e4806348eae" translate="yes" xml:space="preserve">
          <source>Binds a queue to an exchange</source>
          <target state="translated">대기열을 교환에 바인딩</target>
        </trans-unit>
        <trans-unit id="89ec4ec2bf400e823f3ca49d0cb938b0fedd7bab" translate="yes" xml:space="preserve">
          <source>Bootstrap</source>
          <target state="translated">Bootstrap</target>
        </trans-unit>
        <trans-unit id="6b9f602129c168b7de7deb9c9bf963995c57a267" translate="yes" xml:space="preserve">
          <source>Browser Engine</source>
          <target state="translated">브라우저 엔진</target>
        </trans-unit>
        <trans-unit id="40547f79e62f9e4e3940e617a998ab3ba2c9a621" translate="yes" xml:space="preserve">
          <source>BrowserStack</source>
          <target state="translated">BrowserStack</target>
        </trans-unit>
        <trans-unit id="bbd80cf7e2ded5efed8f4ee9151ab57a8ab66392" translate="yes" xml:space="preserve">
          <source>Build</source>
          <target state="translated">Build</target>
        </trans-unit>
        <trans-unit id="3c8f206179776a8eebfffcdc5a8805c818cea096" translate="yes" xml:space="preserve">
          <source>Builder uses chained calls. So each call to builder returns a builder object. Except for &lt;code&gt;getDom&lt;/code&gt; and &lt;code&gt;__toString&lt;/code&gt; methods.</source>
          <target state="translated">빌더는 체인 통화를 사용합니다. 따라서 빌더를 호출 할 때마다 빌더 오브젝트가 리턴됩니다. &lt;code&gt;getDom&lt;/code&gt; 및 &lt;code&gt;__toString&lt;/code&gt; 메소드는 제외 합니다.</target>
        </trans-unit>
        <trans-unit id="245eb3670ba5dc93b31b07256919d74625394dd6" translate="yes" xml:space="preserve">
          <source>But if you run tests on different server (or your webserver doesn&amp;rsquo;t use code from current directory) a single option &lt;code&gt;remote&lt;/code&gt; should be added to config. For example, let&amp;rsquo;s turn on remote coverage for acceptance suite in &lt;code&gt;acceptance.suite.yml&lt;/code&gt;:</source>
          <target state="translated">그러나 다른 서버에서 테스트를 실행하거나 웹 서버가 현재 디렉토리의 코드를 사용하지 않는 경우 단일 옵션 &lt;code&gt;remote&lt;/code&gt; 을 구성에 추가해야합니다. 예를 들어,에서 수용 제품군에 대한 원격 범위에 돌려 보자 &lt;code&gt;acceptance.suite.yml&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="e52ddb01b4f8aa04e089e0d87f6562b2396ea96b" translate="yes" xml:space="preserve">
          <source>But it won&amp;rsquo;t be executed for all other locator types. See the example:</source>
          <target state="translated">그러나 다른 모든 로케이터 유형에서는 실행되지 않습니다. 예를보십시오 :</target>
        </trans-unit>
        <trans-unit id="d5d387b0a514f75f5ac26431991a46cd1e6f8ca7" translate="yes" xml:space="preserve">
          <source>But let&amp;rsquo;s move further. The PageObject concept specifies that the methods for the page interaction should also be stored in a PageObject class. It now stores a passed instance of an Actor class. An AcceptanceTester can be accessed via the &lt;code&gt;AcceptanceTester&lt;/code&gt; property of that class. Let&amp;rsquo;s define a &lt;code&gt;login&lt;/code&gt; method in this class:</source>
          <target state="translated">그러나 더 나아가 봅시다. PageObject 개념은 페이지 상호 작용을위한 메소드가 PageObject 클래스에 저장되도록 지정합니다. 이제 전달 된 Actor 클래스의 인스턴스를 저장합니다. AcceptanceTester는 해당 클래스 의 &lt;code&gt;AcceptanceTester&lt;/code&gt; 속성을 통해 액세스 할 수 있습니다 . 이 클래스에서 &lt;code&gt;login&lt;/code&gt; 메소드를 정의 해 봅시다 :</target>
        </trans-unit>
        <trans-unit id="d232831d0b73bc285d4ed4382d561e49e782038b" translate="yes" xml:space="preserve">
          <source>But we don&amp;rsquo;t want to analyze console output for each failing build. Especially If Jenkins can collect and display the results inside its web UI. Codeception can export its results using JUnit XML format. To generate XML report on each build we will need to append &lt;code&gt;--xml&lt;/code&gt; option to Codeception execution command. Codeception will print &lt;code&gt;result.xml&lt;/code&gt; file containing information about test status with steps and stack traces for failing tests.</source>
          <target state="translated">그러나 우리는 각 실패한 빌드에 대한 콘솔 출력을 분석하고 싶지 않습니다. 특히 Jenkins가 웹 UI 내에서 결과를 수집하고 표시 할 수있는 경우. Codeception은 JUnit XML 형식을 사용하여 결과를 내보낼 수 있습니다. 각 빌드에서 XML 보고서를 생성하려면 Codeception 실행 명령에 &lt;code&gt;--xml&lt;/code&gt; 옵션을 추가해야합니다 . Codeception은 테스트 실패에 대한 단계 및 스택 추적과 함께 테스트 상태에 대한 정보가 포함 된 &lt;code&gt;result.xml&lt;/code&gt; 파일을 인쇄 합니다.</target>
        </trans-unit>
        <trans-unit id="5efbadaf6c9141e5fff9af14725251144b897b22" translate="yes" xml:space="preserve">
          <source>But what are extensions, anyway? Basically speaking, extensions are nothing more than event listeners based on the &lt;a href=&quot;https://symfony.com/doc/current/components/event_dispatcher/introduction.html&quot;&gt;Symfony Event Dispatcher&lt;/a&gt; component.</source>
          <target state="translated">어쨌든 확장이란 무엇입니까? 기본적으로 확장은 &lt;a href=&quot;https://symfony.com/doc/current/components/event_dispatcher/introduction.html&quot;&gt;Symfony Event Dispatcher&lt;/a&gt; 구성 요소를 기반으로하는 이벤트 리스너에 지나지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="8b87ae70ef37cff5a82a8417a804db4a687050b6" translate="yes" xml:space="preserve">
          <source>But what if you need to change the output format of the XML or JSON results triggered with the &lt;code&gt;--xml&lt;/code&gt; or &lt;code&gt;--json&lt;/code&gt; options? Codeception uses PHPUnit printers and overrides them. If you need to customize one of the standard reporters you can override them too. If you are thinking on implementing your own reporter you should add a &lt;code&gt;reporters&lt;/code&gt; section to &lt;code&gt;codeception.yml&lt;/code&gt; and override one of the standard printer classes with one of your own:</source>
          <target state="translated">그러나 &lt;code&gt;--xml&lt;/code&gt; 또는 &lt;code&gt;--json&lt;/code&gt; 옵션으로 트리거 된 XML 또는 JSON 결과의 출력 형식을 변경해야하는 경우 어떻게해야 합니까? Codeception은 PHPUnit 프린터를 사용하여 무시합니다. 표준 리포터 중 하나를 사용자 정의해야하는 경우이를 무시할 수 있습니다. 자신의 리포터를 구현할 생각이라면 &lt;code&gt;codeception.yml&lt;/code&gt; 에 &lt;code&gt;reporters&lt;/code&gt; 섹션을 추가 하고 표준 프린터 클래스 중 하나를 자신의 것으로 재정의해야합니다.</target>
        </trans-unit>
        <trans-unit id="2bda688a0af2c974abb86c3700ba9f51f6014012" translate="yes" xml:space="preserve">
          <source>But will &lt;em&gt;not&lt;/em&gt; be true for strings like:</source>
          <target state="translated">그러나 다음과 같은 문자열에는 해당 &lt;em&gt;되지 않습니다&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="961a968c779c233d04163025ee21150f2f72437c" translate="yes" xml:space="preserve">
          <source>But will ignore strings like:</source>
          <target state="translated">그러나 다음과 같은 문자열은 무시합니다.</target>
        </trans-unit>
        <trans-unit id="a9a691ed91b64e5307175d7ee53f213b987e10b1" translate="yes" xml:space="preserve">
          <source>By default Codeception runs tests in alphabetic order. To ensure that tests are not depending on each other (unless explicitly declared via &lt;code&gt;@depends&lt;/code&gt;) you can enable &lt;code&gt;shuffle&lt;/code&gt; option.</source>
          <target state="translated">기본적으로 Codeception은 알파벳 순서로 테스트를 실행합니다. 테스트가 서로 &lt;code&gt;@depends&lt;/code&gt; 되지 않도록 (@depends 를 통해 명시 적으로 선언하지 않은 경우 ) &lt;code&gt;shuffle&lt;/code&gt; 옵션을 활성화 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="0766f64f5fb4c64125a6f7a0702d83fcaf1c01bf" translate="yes" xml:space="preserve">
          <source>By default Codeception uses the &lt;code&gt;E_ALL &amp;amp; ~E_STRICT &amp;amp; ~E_DEPRECATED&lt;/code&gt; error reporting level. In functional tests you might want to change this level depending on your framework&amp;rsquo;s error policy. The error reporting level can be set in the suite configuration file:</source>
          <target state="translated">기본적으로 Codeception은 &lt;code&gt;E_ALL &amp;amp; ~E_STRICT &amp;amp; ~E_DEPRECATED&lt;/code&gt; 오류보고 수준을 사용합니다. 기능 테스트에서 프레임 워크의 오류 정책에 따라이 레벨을 변경하려고 할 수 있습니다. 스위트 구성 파일에서 오류보고 레벨을 설정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e8e099de5f61c91ae4f45c8fd624fdf1a3c89680" translate="yes" xml:space="preserve">
          <source>By default Snapshot uses &lt;code&gt;assertEquals&lt;/code&gt; assertion, however this can be customized by overriding &lt;code&gt;assertData&lt;/code&gt; method.</source>
          <target state="translated">기본적으로 Snapshot은 &lt;code&gt;assertEquals&lt;/code&gt; 어설 션을 사용 하지만 &lt;code&gt;assertData&lt;/code&gt; 메서드 를 재정 의하여 사용자 지정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="b406230a872b6e528dc0e7339d5a5b5bab3d7ef6" translate="yes" xml:space="preserve">
          <source>By default all available methods are loaded, but you can specify parts to select only needed actions and avoid conflicts.</source>
          <target state="translated">기본적으로 사용 가능한 모든 메소드가로드되지만 필요한 조치 만 선택하고 충돌을 피하기 위해 파트를 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3adbc5a8c697ad4119495ab0f0e25283a942231d" translate="yes" xml:space="preserve">
          <source>By default it will create 3 suites &lt;strong&gt;acceptance&lt;/strong&gt;, &lt;strong&gt;functional&lt;/strong&gt;, and &lt;strong&gt;unit&lt;/strong&gt;.</source>
          <target state="translated">기본적으로 3 개의 스위트 &lt;strong&gt;수용&lt;/strong&gt; , &lt;strong&gt;기능&lt;/strong&gt; 및 &lt;strong&gt;단위를 작성&lt;/strong&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="520335dd2f5adca86be7d50acefb0f63d2343949" translate="yes" xml:space="preserve">
          <source>By default produces unique string with param as a prefix:</source>
          <target state="translated">기본적으로 param을 접두어로 사용하여 고유 한 문자열을 생성합니다.</target>
        </trans-unit>
        <trans-unit id="59b0f406a288084bf7ada8af78a0fc7d7f07cf68" translate="yes" xml:space="preserve">
          <source>By default the image has codecept as its entrypoint, to run the tests simply supply the run command</source>
          <target state="translated">기본적으로 이미지의 시작점은 codecept이며 테스트를 실행하려면 단순히 run 명령을 제공하십시오.</target>
        </trans-unit>
        <trans-unit id="77a96e1c3f277e84995cbd72e484177079e9eb48" translate="yes" xml:space="preserve">
          <source>By default they throw Incomplete exceptions to ensure test with missing steps won&amp;rsquo;t be accidentally marked as successful. We will need to implement those steps. As we are in acceptance suite we are probably using &lt;a href=&quot;modules/phpbrowser&quot;&gt;PHPBrowser&lt;/a&gt; or &lt;a href=&quot;modules/webdriver&quot;&gt;WebDriver&lt;/a&gt; modules. This means that we can use their methods inside Tester file, as we do with writing tests using &lt;code&gt;$I-&amp;gt;&lt;/code&gt;. You can use &lt;code&gt;amOnPage&lt;/code&gt;, &lt;code&gt;click&lt;/code&gt;, &lt;code&gt;see&lt;/code&gt; methods inside a step definitions, so each Gherkin scenario step to be extended with basic Codeception steps. Let&amp;rsquo;s show how it can be implemented in our case:</source>
          <target state="translated">기본적으로 누락 된 단계가있는 테스트가 실수로 성공한 것으로 표시되지 않도록 불완전한 예외를 처리합니다. 이러한 단계를 구현해야합니다. 수용 스위트에 있으므로 아마도 &lt;a href=&quot;modules/phpbrowser&quot;&gt;PHPBrowser&lt;/a&gt; 또는 &lt;a href=&quot;modules/webdriver&quot;&gt;WebDriver&lt;/a&gt; 모듈을 사용하고있을 것입니다 . 이는 &lt;code&gt;$I-&amp;gt;&lt;/code&gt; 사용하여 테스트를 작성하는 것과 마찬가지로 테스터 파일 내에서 메소드를 사용할 수 있음을 의미합니다 . 당신은 사용할 수 있습니다 &lt;code&gt;amOnPage&lt;/code&gt; 을 , &lt;code&gt;click&lt;/code&gt; , &lt;code&gt;see&lt;/code&gt; 각 작은 오이 시나리오 단계는 기본 Codeception 단계를 확장 할 수 있도록 단계 정의 내부 방법. 우리의 경우 어떻게 구현할 수 있는지 보여 드리겠습니다.</target>
        </trans-unit>
        <trans-unit id="faebe3c6ce72ae484460587e99d04e8eb2835487" translate="yes" xml:space="preserve">
          <source>By default this module will search for AppKernel in the &lt;code&gt;app&lt;/code&gt; directory.</source>
          <target state="translated">기본적으로이 모듈은 &lt;code&gt;app&lt;/code&gt; 디렉토리 에서 AppKernel을 검색합니다 .</target>
        </trans-unit>
        <trans-unit id="f834fd99c736f564bd7a5021b2a84440f2f0c114" translate="yes" xml:space="preserve">
          <source>By default, &lt;code&gt;submitForm&lt;/code&gt; doesn&amp;rsquo;t send values for buttons. The last parameter allows specifying what button values should be sent, or button values can be explicitly specified in the second parameter:</source>
          <target state="translated">기본적으로 &lt;code&gt;submitForm&lt;/code&gt; 은 버튼 값을 보내지 않습니다. 마지막 매개 변수는 어떤 단추 값을 보내야하는지 지정하거나 두 번째 매개 변수에 단추 값을 명시 적으로 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c69e9bc708fa1d1910eede5ab3aa797b2d9968b0" translate="yes" xml:space="preserve">
          <source>By default, WebDriver module is configured to automatically start browser before the test and stop afterward. However, this can be switched off with &lt;code&gt;start: false&lt;/code&gt; module configuration. To start a browser you will need to write corresponding methods in Acceptance &lt;a href=&quot;06-modulesandhelpers#Helpers&quot;&gt;Helper&lt;/a&gt;.</source>
          <target state="translated">기본적으로 WebDriver 모듈은 테스트 전에 브라우저를 자동으로 시작하고 나중에 중지하도록 구성되어 있습니다. 그러나 &lt;code&gt;start: false&lt;/code&gt; 모듈 구성 으로이를 끌 수 있습니다 . 브라우저를 시작하려면 Acceptance &lt;a href=&quot;06-modulesandhelpers#Helpers&quot;&gt;Helper에&lt;/a&gt; 해당 메소드를 작성해야합니다 .</target>
        </trans-unit>
        <trans-unit id="036dcba914c2822a60f4e2eba7cbdfa21aa838cd" translate="yes" xml:space="preserve">
          <source>By default, if coverage is reported to be &amp;lt; 35% it is marked as low, and &amp;gt;70% is high coverage. You can also define high and low boundaries with &lt;code&gt;low_limit&lt;/code&gt; and &lt;code&gt;high_limit&lt;/code&gt; config options:</source>
          <target state="translated">기본적으로 적용 범위가 35 % 미만인 것으로보고되면 낮은 것으로 표시되고 70 % 이상이 높은 적용 범위입니다. &lt;code&gt;low_limit&lt;/code&gt; 및 &lt;code&gt;high_limit&lt;/code&gt; 구성 옵션을 사용 하여 상한 및 하한을 정의 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="b2b39cbaa0073dbcb9999a74004ef183c8d6c938" translate="yes" xml:space="preserve">
          <source>By default, one &lt;code&gt;RunFailed&lt;/code&gt; Extension is already enabled in your global &lt;code&gt;codeception.yml&lt;/code&gt;. It allows you to rerun failed tests by using the &lt;code&gt;-g failed&lt;/code&gt; option:</source>
          <target state="translated">기본적으로 하나의 &lt;code&gt;RunFailed&lt;/code&gt; Extension이 이미 전역 &lt;code&gt;codeception.yml&lt;/code&gt; 에서 활성화되어 있습니다 . &lt;code&gt;-g failed&lt;/code&gt; 옵션 을 사용하여 실패한 테스트를 다시 실행할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="991b771bfbd4b52ecd9c381cda47aaa4fdd21594" translate="yes" xml:space="preserve">
          <source>By default, show all whitelisted files in &lt;code&gt;--coverage-text&lt;/code&gt; output not just the ones with coverage information is set to false, config option:</source>
          <target state="translated">기본적 으로 적용 범위 정보가있는 파일 만 false로 설정되어 있지 않고 &lt;code&gt;--coverage-text&lt;/code&gt; 출력 에 화이트리스트에있는 모든 파일을 표시합니다 ( config 옵션).</target>
        </trans-unit>
        <trans-unit id="dd832b01d4b3574d3087642e0c54463a677a5082" translate="yes" xml:space="preserve">
          <source>By default, show only the coverage report summary in &lt;code&gt;--coverage-text&lt;/code&gt; output is set to false, config option:</source>
          <target state="translated">기본적으로 &lt;code&gt;--coverage-text&lt;/code&gt; 출력 에 적용 범위 보고서 요약 만 표시 가 false로 설정되어 있습니다 (config 옵션).</target>
        </trans-unit>
        <trans-unit id="95760f116b2a3f0f12ade7dfedbabf0c50a19b74" translate="yes" xml:space="preserve">
          <source>By default, the module will wrap everything into a transaction for each test and roll it back afterwards. By doing this tests will run much faster and will be isolated from each other.</source>
          <target state="translated">기본적으로 모듈은 모든 테스트마다 트랜잭션으로 모든 것을 랩핑하고 나중에 롤백합니다. 이 테스트를 수행하면 훨씬 빠르게 실행되며 서로 격리됩니다.</target>
        </trans-unit>
        <trans-unit id="9ba952d9622d86d9cc3bba20683bed01694f4133" translate="yes" xml:space="preserve">
          <source>By implementing event handling methods you can listen for events and even update passed objects. Extensions have some basic methods you can use:</source>
          <target state="translated">이벤트 처리 방법을 구현하면 이벤트를 수신하고 전달 된 객체를 업데이트 할 수도 있습니다. 확장에는 몇 가지 기본 방법이 있습니다.</target>
        </trans-unit>
        <trans-unit id="8ea70a5bc0bc0926e33c938b53d03c7938d10a79" translate="yes" xml:space="preserve">
          <source>By making tests to be a part of User Story, BDD allows non-technical personnel to write (or edit) Acceptance tests.</source>
          <target state="translated">BDD는 테스트를 사용자 스토리의 일부로 만들도록하여 비 기술적 인 직원이 승인 테스트를 작성 (또는 편집) 할 수 있도록합니다.</target>
        </trans-unit>
        <trans-unit id="fbf4f502954efde69f036b4c5c0e1f2c6cbe390f" translate="yes" xml:space="preserve">
          <source>By setting it to false module wan&amp;rsquo;t inherit methods of parent class.</source>
          <target state="translated">false로 설정하면 부모 클래스의 메소드를 상속하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="755af043a90d606ca7306683d3ed1aa99966f891" translate="yes" xml:space="preserve">
          <source>By using &lt;code&gt;--net=host&lt;/code&gt; we allow selenium to access local websites.</source>
          <target state="translated">사용하여 &lt;code&gt;--net=host&lt;/code&gt; 우리는 접근 현지 웹 사이트에 셀레늄을 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="61469720eba5aec93462cb7a612787211104e602" translate="yes" xml:space="preserve">
          <source>By using &lt;code&gt;specify&lt;/code&gt; codeblocks, you can describe any piece of a test. This makes tests much cleaner and comprehensible for everyone in your team.</source>
          <target state="translated">코드 블록 &lt;code&gt;specify&lt;/code&gt; 을 사용 하면 모든 테스트를 설명 할 수 있습니다. 이를 통해 팀의 모든 사람이 테스트를 훨씬 더 깨끗하고 이해할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4464f3ea38eddecd3a8c545d542904a864944ac9" translate="yes" xml:space="preserve">
          <source>By using ORM in functional and integration tests, you can also improve performance of your tests. Instead of cleaning up the database after each test, the ORM module will wrap all the database actions into transactions and roll it back at the end. This way, no actual data will be written to the database. This clean-up strategy is enabled by default, you can disable it by setting &lt;code&gt;cleanup: false&lt;/code&gt; in the configuration of any ORM module.</source>
          <target state="translated">기능 및 통합 테스트에서 ORM을 사용하여 테스트 성능을 향상시킬 수도 있습니다. 각 테스트 후 데이터베이스를 정리하는 대신 ORM 모듈은 모든 데이터베이스 조치를 트랜잭션으로 랩핑하고 마지막에 롤백합니다. 이런 식으로 실제 데이터는 데이터베이스에 기록되지 않습니다. 이 정리 전략은 기본적으로 활성화되어 있으며 ORM 모듈 구성에서 &lt;code&gt;cleanup: false&lt;/code&gt; 를 설정하여 비활성화 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="785fedb981677104f434d322040575790b7b7321" translate="yes" xml:space="preserve">
          <source>By using the &lt;code&gt;getModule&lt;/code&gt; function, you get access to all of the public methods and properties of the requested module. The &lt;code&gt;dbh&lt;/code&gt; property was defined as public specifically to be available to other modules.</source>
          <target state="translated">&lt;code&gt;getModule&lt;/code&gt; 함수 를 사용하면 요청 된 모듈의 모든 공용 메소드 및 특성에 액세스 할 수 있습니다. &lt;code&gt;dbh&lt;/code&gt; 속성 공용으로 정의 구체적 다른 모듈에서 사용할 수있다.</target>
        </trans-unit>
        <trans-unit id="4ec73f4f8a7b43131db1f4176f11045edf49a21d" translate="yes" xml:space="preserve">
          <source>By using the above code in your shell, Codeception will try to autocomplete the following:</source>
          <target state="translated">셸에서 위의 코드를 사용하면 Codeception은 다음을 자동 완성하려고 시도합니다.</target>
        </trans-unit>
        <trans-unit id="362a27e8b217c8af38ea1ff88c14f0280fac4303" translate="yes" xml:space="preserve">
          <source>By writing every feature in User Story format that is automatically executable as a test we ensure that: business, developers, QAs and managers are in the same boat.</source>
          <target state="translated">테스트로 자동 실행 가능한 User Story 형식의 모든 기능을 작성하여 비즈니스, 개발자, QA 및 관리자가 동일한 보트에 있는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="194e13da720a1f025685e5d677eba8a1aff3860a" translate="yes" xml:space="preserve">
          <source>CSS</source>
          <target state="translated">CSS</target>
        </trans-unit>
        <trans-unit id="fdf875803121a50e2e0f08c94a0e4bf1c1817156" translate="yes" xml:space="preserve">
          <source>Call an Artisan command.</source>
          <target state="translated">장인 명령을 호출하십시오.</target>
        </trans-unit>
        <trans-unit id="e17c100723cd82dfe560e37886ff2c8f13b1f36d" translate="yes" xml:space="preserve">
          <source>Can also be passed a selector to search in, be as specific as possible when using selectors. waitForText() will only watch the first instance of the matching selector / text provided. If the given text doesn&amp;rsquo;t appear, a timeout exception is thrown.</source>
          <target state="translated">선택기를 사용하여 검색 할 수 있도록 선택기에 전달할 수도 있습니다 (선택기를 사용할 때 가능한 한 구체적 임). waitForText ()는 제공된 일치하는 선택기 / 텍스트의 첫 번째 인스턴스 만 감시합니다. 주어진 텍스트가 나타나지 않으면 시간 초과 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="619858b8288a3edfc76d28f314d4a98abae7b1ac" translate="yes" xml:space="preserve">
          <source>Can be used with a callback if you don&amp;rsquo;t want to change the current database in your test.</source>
          <target state="translated">테스트에서 현재 데이터베이스를 변경하지 않으려는 경우 콜백과 함께 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0db200d72cb6384349033161e0145ead21fb7e34" translate="yes" xml:space="preserve">
          <source>Can&amp;rsquo;t be used with PhantomJS</source>
          <target state="translated">PhantomJS와 함께 사용할 수 없습니다</target>
        </trans-unit>
        <trans-unit id="c80235b7e99c13ff43d63b1104978f8b344837a3" translate="yes" xml:space="preserve">
          <source>Cest Classes</source>
          <target state="translated">Cest 클래스</target>
        </trans-unit>
        <trans-unit id="1ac5c08426fb2229d058ff80f636ef6483cadb4f" translate="yes" xml:space="preserve">
          <source>Cest Suite tests:</source>
          <target state="translated">Cest Suite 테스트 :</target>
        </trans-unit>
        <trans-unit id="9e69258f975333f12bfc6932ba0606f5f88ee60a" translate="yes" xml:space="preserve">
          <source>Cest format also can contain hooks based on test results:</source>
          <target state="translated">Cest 형식은 테스트 결과에 따라 후크를 포함 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="10b9308c777a48168ecb8ff28072c3ddec895da6" translate="yes" xml:space="preserve">
          <source>Change capabilities of WebDriver. Should be executed before starting a new browser session. This method expects a function to be passed which returns array or &lt;a href=&quot;https://github.com/facebook/php-webdriver/blob/community/lib/Remote/DesiredCapabilities.php&quot;&gt;WebDriver Desired Capabilities&lt;/a&gt; object. Additional &lt;a href=&quot;https://github.com/facebook/php-webdriver/wiki/ChromeOptions&quot;&gt;Chrome options&lt;/a&gt; (like adding extensions) can be passed as well.</source>
          <target state="translated">WebDriver의 기능을 변경하십시오. 새 브라우저 세션을 시작하기 전에 실행해야합니다. 이 메소드는 배열 또는 &lt;a href=&quot;https://github.com/facebook/php-webdriver/blob/community/lib/Remote/DesiredCapabilities.php&quot;&gt;WebDriver Desired Capabilities&lt;/a&gt; 오브젝트 를 리턴하는 함수가 전달 될 것으로 예상 합니다. 확장 프로그램 추가와 같은 추가 &lt;a href=&quot;https://github.com/facebook/php-webdriver/wiki/ChromeOptions&quot;&gt;Chrome 옵션&lt;/a&gt; 도 전달할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9f91f5c3defafc7c577b5a3180d54da1c2afa8ba" translate="yes" xml:space="preserve">
          <source>Change the directory where Codeception should be installed.</source>
          <target state="translated">Codeception이 설치 될 디렉토리를 변경하십시오.</target>
        </trans-unit>
        <trans-unit id="25d5a9dc0bb372682bc183cd0e7b763029f933e6" translate="yes" xml:space="preserve">
          <source>Change the logged in user mid-way through your test, this closes the current connection to the server and initialises and new connection.</source>
          <target state="translated">테스트 도중에 로그인 한 사용자를 변경하면 서버에 대한 현재 연결이 닫히고 새 연결이 초기화됩니다.</target>
        </trans-unit>
        <trans-unit id="e401abe658640f4758426918faf54bd75bcc0305" translate="yes" xml:space="preserve">
          <source>Changes the subdomain for the &amp;lsquo;url&amp;rsquo; configuration parameter. Does not open a page; use &lt;code&gt;amOnPage&lt;/code&gt; for that.</source>
          <target state="translated">'url'구성 매개 변수의 하위 도메인을 변경합니다. 페이지를 열지 않습니다. 이를 위해 &lt;code&gt;amOnPage&lt;/code&gt; 를 사용 하십시오 .</target>
        </trans-unit>
        <trans-unit id="01a5105c1acf4958594ed8a1f5461bbfa3e55431" translate="yes" xml:space="preserve">
          <source>Check config:</source>
          <target state="translated">설정 확인 :</target>
        </trans-unit>
        <trans-unit id="40f467ff9c8ace5cf69359bfa3ba2529e73ca1aa" translate="yes" xml:space="preserve">
          <source>Check if a queue/tube does NOT exist on the queueing server.</source>
          <target state="translated">큐 서버에 큐 / 튜브가 없는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="9521ca9ab5147b02672ff789777c2b703c33c7e8" translate="yes" xml:space="preserve">
          <source>Check if a queue/tube does NOT have a given current number of messages</source>
          <target state="translated">대기열 / 튜브에 현재 지정된 수의 메시지가 없는지 확인</target>
        </trans-unit>
        <trans-unit id="5310213e7ef6d40dc6ba8bc71a9e3655678a181f" translate="yes" xml:space="preserve">
          <source>Check if a queue/tube does NOT have a given total number of messages</source>
          <target state="translated">대기열 / 튜브에 지정된 총 메시지 수가 없는지 확인</target>
        </trans-unit>
        <trans-unit id="d6d1b950fb0c0c3c5b364f0eedeb03810f5f99ad" translate="yes" xml:space="preserve">
          <source>Check if a queue/tube exists on the queueing server.</source>
          <target state="translated">큐 서버에 큐 / 튜브가 있는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="f3432840d06465e85420b98b874f4e2524f138f7" translate="yes" xml:space="preserve">
          <source>Check if a queue/tube has a given current number of messages</source>
          <target state="translated">대기열 / 튜브에 현재 지정된 수의 메시지가 있는지 확인</target>
        </trans-unit>
        <trans-unit id="3923aaef5f31697f051a23085f61738bc4fe3cf3" translate="yes" xml:space="preserve">
          <source>Check if a queue/tube has a given total number of messages</source>
          <target state="translated">큐 / 튜브에 주어진 총 메시지 수가 있는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="0d4f86f51262f4b6bc922da63d9fbd0a9f5d3a7e" translate="yes" xml:space="preserve">
          <source>Check if a queue/tube is NOT empty of all messages</source>
          <target state="translated">대기열 / 튜브에 모든 메시지가 비어 있지 않은지 확인</target>
        </trans-unit>
        <trans-unit id="7de425412ca2b334ec5b7f0920f1bb7f136cfb7b" translate="yes" xml:space="preserve">
          <source>Check if a queue/tube is empty of all messages</source>
          <target state="translated">대기열 / 튜브에 모든 메시지가 비어 있는지 확인</target>
        </trans-unit>
        <trans-unit id="6292e37c7e1b2c1227015c49322f807881b3848a" translate="yes" xml:space="preserve">
          <source>Check out a very basic extension &lt;a href=&quot;https://github.com/Codeception/Notifier&quot;&gt;Notifier&lt;/a&gt;.</source>
          <target state="translated">매우 기본적인 확장 기능인 &lt;a href=&quot;https://github.com/Codeception/Notifier&quot;&gt;Notifier를&lt;/a&gt; 확인하십시오 .</target>
        </trans-unit>
        <trans-unit id="5f2aac0480168066a7979bf5e5a2ece1e9d2db26" translate="yes" xml:space="preserve">
          <source>Check overriding config values (like in &lt;code&gt;run&lt;/code&gt; command)</source>
          <target state="translated">구성 값 재정의 확인 ( &lt;code&gt;run&lt;/code&gt; 명령 에서와 같이 )</target>
        </trans-unit>
        <trans-unit id="a25b113418b879822a48ce9ea4749af6b052d64e" translate="yes" xml:space="preserve">
          <source>Check that the specified checkbox is unchecked.</source>
          <target state="translated">지정된 확인란이 선택되어 있지 않은지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="f698c741ca69fb6cb00378f2604e349b76e1672b" translate="yes" xml:space="preserve">
          <source>Check that user is not authenticated.</source>
          <target state="translated">사용자가 인증되지 않았는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="8e8858e7b4510dac3094da001fc437439b8760c6" translate="yes" xml:space="preserve">
          <source>Check that user is not authenticated. You can specify the guard that should be use for Laravel &amp;gt;= 5.2.</source>
          <target state="translated">사용자가 인증되지 않았는지 확인하십시오. Laravel&amp;gt; = 5.2에 사용해야하는 가드를 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ec9fb482afb9e3ac602b8990e2ed226e188a1581" translate="yes" xml:space="preserve">
          <source>Checks If opened file doesn&amp;rsquo;t contain &lt;code&gt;text&lt;/code&gt; in it</source>
          <target state="translated">열린 파일에 &lt;code&gt;text&lt;/code&gt; 가 포함되어 있지 않은지 확인</target>
        </trans-unit>
        <trans-unit id="cc466a02f22f1a6cfeda2d643f99bde6a20a8907" translate="yes" xml:space="preserve">
          <source>Checks If opened file has &lt;code&gt;text&lt;/code&gt; in it.</source>
          <target state="translated">열린 파일에 &lt;code&gt;text&lt;/code&gt; 가 있는지 확인 합니다.</target>
        </trans-unit>
        <trans-unit id="009d30b551ab358c5149a534443f90a36bf0eedd" translate="yes" xml:space="preserve">
          <source>Checks If opened file has the &lt;code&gt;number&lt;/code&gt; of new lines.</source>
          <target state="translated">열린 파일 에 새 줄 &lt;code&gt;number&lt;/code&gt; 있는지 확인 합니다.</target>
        </trans-unit>
        <trans-unit id="337581428888ce948a853ad1b0560cdeac008ffc" translate="yes" xml:space="preserve">
          <source>Checks XML response contains provided structure. Response elements will be compared with XML provided. Only nodeNames are checked to see elements match.</source>
          <target state="translated">XML 응답에 제공된 구조가 포함되어 있는지 확인합니다. 응답 요소는 제공된 XML과 비교됩니다. 요소가 일치하는지 확인하려면 nodeNames 만 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="97227ad09e87afb7f9a745e8b10d147da449ad7d" translate="yes" xml:space="preserve">
          <source>Checks XML response does not equal to provided XML. Comparison is done by canonicalizing both xml`s.</source>
          <target state="translated">XML 응답이 제공된 XML과 다른지 확인합니다. 비교는 두 XML을 정규화하여 수행됩니다.</target>
        </trans-unit>
        <trans-unit id="d306bcb7c8b4e48c38ee6d6dde62390628aca6a3" translate="yes" xml:space="preserve">
          <source>Checks XML response does not include provided XML. Comparison is done by canonicalizing both xml`s. Parameter can be passed either as XmlBuilder, DOMDocument, DOMNode, XML string, or array (if no attributes).</source>
          <target state="translated">XML 응답에 제공된 XML이 포함되어 있지 않은지 확인합니다. 비교는 두 XML을 정규화하여 수행됩니다. 매개 변수는 XmlBuilder, DOMDocument, DOMNode, XML 문자열 또는 배열 (속성이없는 경우)로 전달 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="356cef19b7dfef306369b90efab698f7eb4f955a" translate="yes" xml:space="preserve">
          <source>Checks XML response doesn&amp;rsquo;t contain XPath locator</source>
          <target state="translated">XML 응답에 XPath 로케이터가 포함되어 있지 않은지 확인</target>
        </trans-unit>
        <trans-unit id="5b8326363345b123ab8b3f43989b25e5be7b2b87" translate="yes" xml:space="preserve">
          <source>Checks XML response equals provided XML. Comparison is done by canonicalizing both xml`s.</source>
          <target state="translated">제공된 XML과 동일한 XML 응답을 확인합니다. 비교는 두 XML을 정규화하여 수행됩니다.</target>
        </trans-unit>
        <trans-unit id="bb24005e0bb632ffe3d083a677fe164767c72069" translate="yes" xml:space="preserve">
          <source>Checks XML response includes provided XML. Comparison is done by canonicalizing both xml`s. Parameter can be passed either as XmlBuilder, DOMDocument, DOMNode, XML string, or array (if no attributes).</source>
          <target state="translated">XML 응답에 제공된 XML이 포함되어 있는지 확인합니다. 비교는 두 XML을 정규화하여 수행됩니다. 매개 변수는 XmlBuilder, DOMDocument, DOMNode, XML 문자열 또는 배열 (속성이없는 경우)로 전달 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="04ca9a35bcfb662b4f6ad66c715db6d6a6205f45" translate="yes" xml:space="preserve">
          <source>Checks XML response with XPath locator</source>
          <target state="translated">XPath 로케이터로 XML 응답 확인</target>
        </trans-unit>
        <trans-unit id="e5194e68d6f503b7719c59c9ac103ad9698db6a2" translate="yes" xml:space="preserve">
          <source>Checks data against passed JsonType. If matching fails function returns a string with a message describing failure. On success returns &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">전달 된 JsonType에 대해 데이터를 확인합니다. 일치가 실패하면 함수는 실패를 설명하는 메시지가 포함 된 문자열을 반환합니다. 성공하면 &lt;code&gt;true&lt;/code&gt; 를 반환 합니다 .</target>
        </trans-unit>
        <trans-unit id="2e7cdb94f3474b1998048d399a7918f908543f42" translate="yes" xml:space="preserve">
          <source>Checks if a method has been invoked a certain amount of times. If the number of invocations exceeds the value it will immediately throw an exception, If the number is less it will later be checked in verify() and also throw an exception.</source>
          <target state="translated">메소드가 특정 횟수만큼 호출되었는지 확인합니다. 호출 수가 값을 초과하면 즉시 예외가 발생하고, 그 수가 적 으면 나중에 verify ()에서 확인되고 예외도 발생합니다.</target>
        </trans-unit>
        <trans-unit id="f888db3fd83a0e8efc8b2fb6b6f06bb832640222" translate="yes" xml:space="preserve">
          <source>Checks if a method has been invoked at least one time.</source>
          <target state="translated">메소드가 한 번 이상 호출되었는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="e945d8c90b79b9295a7eb78d1e8707303151cd02" translate="yes" xml:space="preserve">
          <source>Checks if a method has been invoked exactly one time.</source>
          <target state="translated">메소드가 정확히 한 번만 호출되었는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="cb5ec4526a8f5ff9d1390a5ecc3fde98a6574766" translate="yes" xml:space="preserve">
          <source>Checks if a method never has been invoked</source>
          <target state="translated">메소드가 호출 된 적이 없는지 확인</target>
        </trans-unit>
        <trans-unit id="a89c3304202d6f657c9636485987b1b990ffb415" translate="yes" xml:space="preserve">
          <source>Checks if a module has required fields</source>
          <target state="translated">모듈에 필수 필드가 있는지 확인</target>
        </trans-unit>
        <trans-unit id="9138d5016d3d143634cd4e3a396bbc2fa1fc63b3" translate="yes" xml:space="preserve">
          <source>Checks if collection contains an item.</source>
          <target state="translated">컬렉션에 항목이 포함되어 있는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="fb06772edc7c4ff15c0d0f7094d83f236e42288b" translate="yes" xml:space="preserve">
          <source>Checks if collection doesn&amp;rsquo;t contain an item.</source>
          <target state="translated">컬렉션에 항목이 없는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="be60dfb0907ec62d75932911139fa11331b956ce" translate="yes" xml:space="preserve">
          <source>Checks if file does not exist in path</source>
          <target state="translated">파일이 경로에 존재하지 않는지 확인</target>
        </trans-unit>
        <trans-unit id="043a2243926af2eb7e5f716e7e3c4f3bcbf292cf" translate="yes" xml:space="preserve">
          <source>Checks if file does not exist in path on the remote FTP/SFTP system</source>
          <target state="translated">원격 FTP / SFTP 시스템의 경로에 파일이 없는지 확인</target>
        </trans-unit>
        <trans-unit id="991c5107c5fd998fd08be88a2c56042d194eb0ec" translate="yes" xml:space="preserve">
          <source>Checks if file does not exist in path on the remote FTP/SFTP system, using regular expression as filename. DOES NOT OPEN the file when it&amp;rsquo;s exists</source>
          <target state="translated">파일 이름으로 정규식을 사용하여 파일이 원격 FTP / SFTP 시스템의 경로에 존재하지 않는지 확인합니다. 파일이 존재할 때 파일을 열지 않습니다</target>
        </trans-unit>
        <trans-unit id="60373efed4611c7e13fdfa10e8d82f3b8380cb77" translate="yes" xml:space="preserve">
          <source>Checks if file doesn&amp;rsquo;t exist</source>
          <target state="translated">파일이 존재하지 않는지 확인</target>
        </trans-unit>
        <trans-unit id="b7135e3c1dbeedb36436f0dfaa093626ec3a5dc7" translate="yes" xml:space="preserve">
          <source>Checks if file exists</source>
          <target state="translated">파일이 존재하는지 확인</target>
        </trans-unit>
        <trans-unit id="b1ebdfed096ed3e1017b07f2fbe2e621faeabe23" translate="yes" xml:space="preserve">
          <source>Checks if file exists in path on the remote FTP/SFTP system, using regular expression as filename. DOES NOT OPEN the file when it&amp;rsquo;s exists</source>
          <target state="translated">정규식을 파일 이름으로 사용하여 파일이 원격 FTP / SFTP 시스템의 경로에 존재하는지 확인합니다. 파일이 존재할 때 파일을 열지 않습니다</target>
        </trans-unit>
        <trans-unit id="5c8a58c2c3a1e71fd961c8b3dab3c51330388d8a" translate="yes" xml:space="preserve">
          <source>Checks if file exists in path on the remote FTP/SFTP system. DOES NOT OPEN the file when it&amp;rsquo;s exists</source>
          <target state="translated">원격 FTP / SFTP 시스템의 경로에 파일이 있는지 확인합니다. 파일이 존재할 때 파일을 열지 않습니다</target>
        </trans-unit>
        <trans-unit id="2dc29d0ff52cf01d7a9baf7d2aa0dede78ebf6d9" translate="yes" xml:space="preserve">
          <source>Checks if file exists in path. Opens a file when it&amp;rsquo;s exists</source>
          <target state="translated">파일이 경로에 있는지 확인합니다. 존재하는 파일을 엽니 다</target>
        </trans-unit>
        <trans-unit id="f990721441cd6465e20ad395970669cb91c19f2b" translate="yes" xml:space="preserve">
          <source>Checks if json structure in response matches &lt;a href=&quot;http://goessner.net/articles/JsonPath/&quot;&gt;JsonPath&lt;/a&gt;. JsonPath is XPath equivalent for querying Json structures. Try your JsonPath expressions &lt;a href=&quot;http://jsonpath.curiousconcept.com/&quot;&gt;online&lt;/a&gt;. This assertion allows you to check the structure of response json.</source>
          <target state="translated">응답의 json 구조가 &lt;a href=&quot;http://goessner.net/articles/JsonPath/&quot;&gt;JsonPath&lt;/a&gt; 와 일치 하는지 확인합니다 . JsonPath는 Json 구조를 쿼리 할 때 XPath와 동일합니다. JsonPath 표현식을 &lt;a href=&quot;http://jsonpath.curiousconcept.com/&quot;&gt;온라인으로&lt;/a&gt; 사용해보십시오 . 이 어설 션을 사용하면 응답 json의 구조를 확인할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="edfe8e0ea9891fbaf204fb17d123d7e129f28e7b" translate="yes" xml:space="preserve">
          <source>Checks if json structure in response matches the xpath provided. JSON is not supposed to be checked against XPath, yet it can be converted to xml and used with XPath. This assertion allows you to check the structure of response json. *</source>
          <target state="translated">응답의 json 구조가 제공된 xpath와 일치하는지 확인합니다. JSON은 XPath와 비교하여 확인되지는 않지만 xml로 변환하여 XPath와 함께 사용할 수 있습니다. 이 어설 션을 사용하면 응답 json의 구조를 확인할 수 있습니다. *</target>
        </trans-unit>
        <trans-unit id="860a960a69e6cefec14697fdf21e3ab9ea77c4d4" translate="yes" xml:space="preserve">
          <source>Checks if message containing text received.</source>
          <target state="translated">텍스트가 포함 된 메시지가 수신되었는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="992a33eb5ca87cf2d4578150e71290fbbc713929" translate="yes" xml:space="preserve">
          <source>Checks if queue is not empty.</source>
          <target state="translated">대기열이 비어 있지 않은지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="d0a17d62211009728b1fa2c59614ee8b3caead13" translate="yes" xml:space="preserve">
          <source>Checks if response is exactly the same as provided.</source>
          <target state="translated">응답이 제공된 것과 정확히 같은지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="f8e740e5fad9e13ab68f9366c2ab5cca1444a8ce" translate="yes" xml:space="preserve">
          <source>Checks if the array of form parameters (name =&amp;gt; value) are not set on the form matched with the passed selector.</source>
          <target state="translated">전달 된 선택기와 일치하는 양식에 양식 매개 변수 배열 (이름 =&amp;gt; 값)이 설정되어 있지 않은지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="5a12bc1359f613d4e2f04e7ecb8189f63b7e9014" translate="yes" xml:space="preserve">
          <source>Checks if the array of form parameters (name =&amp;gt; value) are set on the form matched with the passed selector.</source>
          <target state="translated">전달 된 선택기와 일치하는 양식에 양식 매개 변수 배열 (이름 =&amp;gt; 값)이 설정되어 있는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="7bc7091193accd06f7e2244dcbb5c8b929e12692" translate="yes" xml:space="preserve">
          <source>Checks if the desired number of emails was sent. If no argument is provided then at least one email must be sent to satisfy the check. The email is checked using Symfony&amp;rsquo;s profiler. If your app performs a redirect after sending the email, you need to tell Codeception to not follow this redirect, using REST Module&amp;rsquo;s &lt;a href=&quot;rest#stopFollowingRedirects&quot;&gt;stopFollowingRedirects&lt;/a&gt; method.</source>
          <target state="translated">원하는 수의 이메일이 전송되었는지 확인합니다. 인수가 제공되지 않으면 확인을 충족하기 위해 하나 이상의 이메일을 보내야합니다. 이메일은 Symfony의 프로파일 러를 사용하여 확인됩니다. 이메일을 보낸 후 앱이 리디렉션을 수행하는 경우 REST Module의 &lt;a href=&quot;rest#stopFollowingRedirects&quot;&gt;stopFollowingRedirects&lt;/a&gt; 메소드를 사용하여 Codeception 에이 리디렉션을 따르지 않도록 지시해야합니다 .</target>
        </trans-unit>
        <trans-unit id="81d72ff940cbee0d4479c082b077c37e3c7e3287" translate="yes" xml:space="preserve">
          <source>Checks if the hash of a binary response is exactly the same as provided. Parameter can be passed as any hash string supported by hash(), with an optional second parameter to specify the hash type, which defaults to md5.</source>
          <target state="translated">이진 응답의 해시가 제공된 것과 정확히 같은지 확인합니다. 매개 변수는 해시 유형을 지정하기위한 선택적 두 번째 매개 변수 (기본값은 md5)와 함께 hash ()가 지원하는 모든 해시 문자열로 전달 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="08f3d711ff0ee64be34b5f0d18bdc3f81cb40413" translate="yes" xml:space="preserve">
          <source>Checks if the hash of a binary response is not the same as provided.</source>
          <target state="translated">이진 응답의 해시가 제공된 것과 동일하지 않은지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="eae64f91355ca653f24770f6adb433024da623ee" translate="yes" xml:space="preserve">
          <source>Checks item in APC(u) doesn&amp;rsquo;t exist or is the same as expected.</source>
          <target state="translated">APC (u)의 아이템이 존재하지 않거나 예상과 동일한 지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="bc1de5a9e34c8d886c4933ef6424611b2e053c9d" translate="yes" xml:space="preserve">
          <source>Checks item in APC(u) exists and the same as expected.</source>
          <target state="translated">APC (u)의 항목이 존재하고 예상 한 것과 동일한 지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="e1798090481159dd7ffc478344730c50ac34d801" translate="yes" xml:space="preserve">
          <source>Checks item in Memcached doesn&amp;rsquo;t exist or is the same as expected.</source>
          <target state="translated">Memcached의 항목이 존재하지 않거나 예상과 동일한 지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="834ac47eccb7e2700f140be78024abea74c2f276" translate="yes" xml:space="preserve">
          <source>Checks item in Memcached exists and the same as expected.</source>
          <target state="translated">Memcached의 항목이 존재하고 예상 한 것과 동일한 지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="995644fea64cd0fc94ba254d51b971a2ea541e16" translate="yes" xml:space="preserve">
          <source>Checks over the given HTTP header and (optionally) its value, asserting that are not there</source>
          <target state="translated">주어진 HTTP 헤더와 (선택적) 해당 값을 검사하여 존재하지 않는 것을 확인합니다.</target>
        </trans-unit>
        <trans-unit id="ea0e7c8bcd6788ac94739d038785a0b5dbcb8969" translate="yes" xml:space="preserve">
          <source>Checks over the given HTTP header and (optionally) its value, asserting that are there</source>
          <target state="translated">주어진 HTTP 헤더와 선택적으로 그 값을 확인하여 해당 값을 검사합니다.</target>
        </trans-unit>
        <trans-unit id="08d154c899eb5bf7e4f2ae29d5ba68759c73d017" translate="yes" xml:space="preserve">
          <source>Checks response code equals to provided value.</source>
          <target state="translated">응답 코드가 제공된 값과 같은지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="9b82bdd31c0c1310bf2246732512763d6e4ecfdd" translate="yes" xml:space="preserve">
          <source>Checks response code from server.</source>
          <target state="translated">서버에서 응답 코드를 확인합니다.</target>
        </trans-unit>
        <trans-unit id="119082b3e4becfe6fda6a83c2d689ce362f1a616" translate="yes" xml:space="preserve">
          <source>Checks result code</source>
          <target state="translated">결과 코드 확인</target>
        </trans-unit>
        <trans-unit id="f08df94bcfd9ba6623d9e73df503e8ec3d51eb25" translate="yes" xml:space="preserve">
          <source>Checks that Json matches provided types. In case you don&amp;rsquo;t know the actual values of JSON data returned you can match them by type. Starts check with a root element. If JSON data is array it will check the first element of an array. You can specify the path in the json which should be checked with JsonPath</source>
          <target state="translated">Json이 제공된 유형과 일치하는지 확인합니다. 반환 된 JSON 데이터의 실제 값을 모르는 경우 유형별로 일치시킬 수 있습니다. 루트 요소로 검사를 시작합니다. JSON 데이터가 배열이면 배열의 첫 번째 요소를 확인합니다. JsonPath로 확인 해야하는 경로를 json에 지정할 수 있습니다</target>
        </trans-unit>
        <trans-unit id="7b8c17992ebd25fe6b0f2d6f9f3f5acb46dc3606" translate="yes" xml:space="preserve">
          <source>Checks that a cookie with the given name is set. You can set additional cookie params like &lt;code&gt;domain&lt;/code&gt;, &lt;code&gt;path&lt;/code&gt; as array passed in last argument.</source>
          <target state="translated">지정된 이름의 쿠키가 설정되어 있는지 확인합니다. &lt;code&gt;domain&lt;/code&gt; , &lt;code&gt;path&lt;/code&gt; 와 같은 추가 쿠키 매개 변수 를 마지막 인수에 전달 된 배열로 설정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="4618a15a5f764251ca461d92e28696e29d8678a2" translate="yes" xml:space="preserve">
          <source>Checks that a string doesn&amp;rsquo;t start with the given prefix.</source>
          <target state="translated">주어진 접두사로 문자열이 시작되지 않는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="6c1ca444608e20062aaf398808219901376f7660" translate="yes" xml:space="preserve">
          <source>Checks that a string is valid CSS ID</source>
          <target state="translated">문자열이 유효한 CSS ID인지 확인</target>
        </trans-unit>
        <trans-unit id="255b5a65a4ca211a06c428bfe9bfe33300c8086c" translate="yes" xml:space="preserve">
          <source>Checks that a string is valid CSS class</source>
          <target state="translated">문자열이 유효한 CSS 클래스인지 확인</target>
        </trans-unit>
        <trans-unit id="f025490c93f66e798d188fd27bb9644337bc2668" translate="yes" xml:space="preserve">
          <source>Checks that a string starts with the given prefix.</source>
          <target state="translated">문자열이 주어진 접두어로 시작하는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="7c6c9fc6b320083f12c539946bdcebd1670a60f0" translate="yes" xml:space="preserve">
          <source>Checks that a user is authenticated. You can specify the guard that should be use for Laravel &amp;gt;= 5.2.</source>
          <target state="translated">사용자가 인증되었는지 확인합니다. Laravel&amp;gt; = 5.2에 사용해야하는 가드를 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="493ecb48a26991026a0d2377159180405be9aab9" translate="yes" xml:space="preserve">
          <source>Checks that actual is greater or equal than expected</source>
          <target state="translated">실제가 예상보다 크거나 같은지 확인</target>
        </trans-unit>
        <trans-unit id="c833c1ac3b11defc5b30601fd4074cca8f2aa380" translate="yes" xml:space="preserve">
          <source>Checks that actual is greater than expected</source>
          <target state="translated">실제가 예상보다 큰지 확인</target>
        </trans-unit>
        <trans-unit id="3d502f13276504f3f701ce5638cc83a20fde20e7" translate="yes" xml:space="preserve">
          <source>Checks that actual is less or equal than expected</source>
          <target state="translated">실제가 예상보다 작거나 같은지 확인</target>
        </trans-unit>
        <trans-unit id="2b5572e480d751a7f0f89bf8958131c4533171f9" translate="yes" xml:space="preserve">
          <source>Checks that actual is less than expected</source>
          <target state="translated">실제가 예상보다 적은지 확인</target>
        </trans-unit>
        <trans-unit id="bbdf9978103c835fe883cec39c3e75a37a4ba8ab" translate="yes" xml:space="preserve">
          <source>Checks that an input field or textarea doesn&amp;rsquo;t contain the given value. For fuzzy locators, the field is matched by label text, CSS and XPath.</source>
          <target state="translated">입력 필드 또는 텍스트 영역에 지정된 값이 포함되어 있지 않은지 확인합니다. 퍼지 로케이터의 경우 필드는 레이블 텍스트, CSS 및 XPath와 일치합니다.</target>
        </trans-unit>
        <trans-unit id="fb19144f498babb9bf9f5f8b562f3901ad7abe53" translate="yes" xml:space="preserve">
          <source>Checks that array contains subset.</source>
          <target state="translated">배열에 하위 집합이 포함되어 있는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="4d852a22e858cea496a3ce55fa2d6233afead804" translate="yes" xml:space="preserve">
          <source>Checks that condition is negative.</source>
          <target state="translated">조건이 부정인지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="be2ce67bda855038478228b2fb9135ead30e26cd" translate="yes" xml:space="preserve">
          <source>Checks that condition is positive.</source>
          <target state="translated">조건이 긍정적인지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="4ca78a26ca30ebc4ca9ca248b0d7cf078ca8168c" translate="yes" xml:space="preserve">
          <source>Checks that contents of currently opened file matches $regex</source>
          <target state="translated">현재 열린 파일의 내용이 $ regex와 일치하는지 확인</target>
        </trans-unit>
        <trans-unit id="0f50fbbe0a4a58958c5097810c6d11245d709213" translate="yes" xml:space="preserve">
          <source>Checks that current URI contains the given string.</source>
          <target state="translated">현재 URI에 지정된 문자열이 포함되어 있는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="d0251c6ad933f891f1f19b1d3f78e767bdbd75a1" translate="yes" xml:space="preserve">
          <source>Checks that current url doesn&amp;rsquo;t match the given regular expression.</source>
          <target state="translated">현재 URL이 주어진 정규식과 일치하지 않는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="59535a198277329cf6444bda5797710e91424f6b" translate="yes" xml:space="preserve">
          <source>Checks that current url matches action</source>
          <target state="translated">현재 URL이 액션과 일치하는지 확인</target>
        </trans-unit>
        <trans-unit id="23510eca1d0bbe6ef3ca30b95df9f703f67adb83" translate="yes" xml:space="preserve">
          <source>Checks that current url matches route</source>
          <target state="translated">현재 URL이 경로와 일치하는지 확인</target>
        </trans-unit>
        <trans-unit id="f252384212700a0bda8301aa993d54c321a6f3ae" translate="yes" xml:space="preserve">
          <source>Checks that current url matches route.</source>
          <target state="translated">현재 URL이 경로와 일치하는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="2253df5cff94a97af6cb786ba8486dbf7e3290bc" translate="yes" xml:space="preserve">
          <source>Checks that current url matches route. Unlike seeCurrentRouteIs, this can matches without exact route parameters</source>
          <target state="translated">현재 URL이 경로와 일치하는지 확인합니다. seeCurrentRouteIs와 달리 정확한 경로 매개 변수없이 일치 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1a739403e8ff32e46f70ff395a69d45442d47f1a" translate="yes" xml:space="preserve">
          <source>Checks that email is sent.</source>
          <target state="translated">이메일이 발송되었는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="83e3eb31475a0b75b89e7a8fc88edce2d64023c9" translate="yes" xml:space="preserve">
          <source>Checks that haystack contains needle</source>
          <target state="translated">건초 더미에 바늘이 포함되어 있는지 확인</target>
        </trans-unit>
        <trans-unit id="264844fda0a35fe8a9f5aa4d4644b68999ee6453" translate="yes" xml:space="preserve">
          <source>Checks that haystack doesn&amp;rsquo;t attend</source>
          <target state="translated">건초 더미가 참석하지 않는지 확인</target>
        </trans-unit>
        <trans-unit id="d1a73e5b6f60934325561dc446b47379d2975fcb" translate="yes" xml:space="preserve">
          <source>Checks that haystack doesn&amp;rsquo;t contain needle.</source>
          <target state="translated">건초 더미에 바늘이 없는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="0adbf045277ad326987602ddae6167cd38fd050e" translate="yes" xml:space="preserve">
          <source>Checks that http response header is received only once. HTTP RFC2616 allows multiple response headers with the same name. You can check that you didn&amp;rsquo;t accidentally sent the same header twice.</source>
          <target state="translated">http 응답 헤더가 한 번만 수신되는지 확인합니다. HTTP RFC2616은 동일한 이름의 여러 응답 헤더를 허용합니다. 실수로 동일한 헤더를 두 번 보내지 않았는지 확인할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e9f08ddee3f56e9ce330d53ac975e600a7117b43" translate="yes" xml:space="preserve">
          <source>Checks that locator is an XPath</source>
          <target state="translated">로케이터가 XPath인지 확인</target>
        </trans-unit>
        <trans-unit id="781b16615a31842cb1b6182af13c1b4ba7f27274" translate="yes" xml:space="preserve">
          <source>Checks that module is enabled.</source>
          <target state="translated">모듈이 활성화되어 있는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="a7046a71ebcb124c1c7eed48d32ad20b217fc0e2" translate="yes" xml:space="preserve">
          <source>Checks that no email was sent</source>
          <target state="translated">이메일이 전송되지 않았는지 확인</target>
        </trans-unit>
        <trans-unit id="a69eac8d5f3f53c656beee9edd2305c49cdcab80" translate="yes" xml:space="preserve">
          <source>Checks that no email was sent. This is an alias for seeEmailIsSent(0).</source>
          <target state="translated">이메일이 전송되지 않았는지 확인합니다. 이것은 seeEmailIsSent (0)의 별명입니다.</target>
        </trans-unit>
        <trans-unit id="b5d40e53bdcfd1019821a9b2a5338c7a81f8aad1" translate="yes" xml:space="preserve">
          <source>Checks that number of given records were found in database. You can pass the name of a database table or the class name of an Eloquent model as the first argument.</source>
          <target state="translated">주어진 레코드 수가 데이터베이스에서 발견되었는지 확인합니다. 데이터베이스 테이블 이름 또는 Eloquent 모델의 클래스 이름을 첫 번째 인수로 전달할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1dfe186a2740640288f8f468380331cbef849cc7" translate="yes" xml:space="preserve">
          <source>Checks that number of records exists in database.</source>
          <target state="translated">데이터베이스에 레코드 수가 있는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="46c8e247f385b3fb36cd98952cbdb2b8cb6df519" translate="yes" xml:space="preserve">
          <source>Checks that output from last executed command contains text</source>
          <target state="translated">마지막으로 실행 된 명령의 출력에 텍스트가 포함되어 있는지 확인</target>
        </trans-unit>
        <trans-unit id="6abc07daa2a5ded16aa14cc71f18aa9d51959b52" translate="yes" xml:space="preserve">
          <source>Checks that output from latest command doesn&amp;rsquo;t contain text</source>
          <target state="translated">최신 명령의 출력에 텍스트가 포함되어 있지 않은지 확인</target>
        </trans-unit>
        <trans-unit id="7c66ebd79543e9d7a3487b84e0a76948820df990" translate="yes" xml:space="preserve">
          <source>Checks that provided string is CSS selector</source>
          <target state="translated">제공된 문자열이 CSS 선택기인지 확인</target>
        </trans-unit>
        <trans-unit id="c03a86b2b50b087d79196c11d085e80d7cbfa985" translate="yes" xml:space="preserve">
          <source>Checks that queue have expected number of message</source>
          <target state="translated">큐에 예상 된 수의 메시지가 있는지 확인</target>
        </trans-unit>
        <trans-unit id="fc6eb6a57874a821df874bcb1bd2462ddc978e8d" translate="yes" xml:space="preserve">
          <source>Checks that queue is empty</source>
          <target state="translated">큐가 비어 있는지 확인</target>
        </trans-unit>
        <trans-unit id="e6eb47b9e96f40e23319c37906e6d200f5a67a9c" translate="yes" xml:space="preserve">
          <source>Checks that record does not exist in database.</source>
          <target state="translated">데이터베이스에 레코드가 없는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="074c61b7be0d4fd13a7d7de9599bcb65e4c981e6" translate="yes" xml:space="preserve">
          <source>Checks that record does not exist in database. You can pass the name of a database table or the class name of an Eloquent model as the first argument.</source>
          <target state="translated">데이터베이스에 레코드가 없는지 확인합니다. 데이터베이스 테이블 이름 또는 Eloquent 모델의 클래스 이름을 첫 번째 인수로 전달할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d92d6392aa3d358927a66ed0e478255fe23f4a3e" translate="yes" xml:space="preserve">
          <source>Checks that record exists in database.</source>
          <target state="translated">데이터베이스에 레코드가 있는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="c033220377d0b0db036fa1f07bb2c64346f8c052" translate="yes" xml:space="preserve">
          <source>Checks that record exists in database. You can pass the name of a database table or the class name of an Eloquent model as the first argument.</source>
          <target state="translated">데이터베이스에 레코드가 있는지 확인합니다. 데이터베이스 테이블 이름 또는 Eloquent 모델의 클래스 이름을 첫 번째 인수로 전달할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="eaa141060e5b132f2a4fb159a8eb072a30704033" translate="yes" xml:space="preserve">
          <source>Checks that response code is between a certain range. Between actually means [from &amp;lt;= CODE &amp;lt;= to]</source>
          <target state="translated">응답 코드가 특정 범위 사이에 있는지 확인합니다. 실제로 사이에는 [&amp;lt;&amp;lt;CODE &amp;lt;= ~]</target>
        </trans-unit>
        <trans-unit id="cb7b123a12108d8f425b532d8c32e604d9266fe7" translate="yes" xml:space="preserve">
          <source>Checks that response code is equal to value provided.</source>
          <target state="translated">응답 코드가 제공된 값과 같은지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="368f6c56503e86e9dd278f49fe999790c6fd412c" translate="yes" xml:space="preserve">
          <source>Checks that response code is not equal to provided value.</source>
          <target state="translated">응답 코드가 제공된 값과 다른지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="3d77a65aed80607ce9cf2b56d4bed9c9e5b35f59" translate="yes" xml:space="preserve">
          <source>Checks that session contains value. If value is &lt;code&gt;null&lt;/code&gt; checks that session has key.</source>
          <target state="translated">세션에 값이 포함되어 있는지 확인합니다. value가 &lt;code&gt;null&lt;/code&gt; 이면 세션에 키가 있는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="c4e023e82ba32666065e29725d2e895bc4405f6e" translate="yes" xml:space="preserve">
          <source>Checks that string match with pattern</source>
          <target state="translated">문자열이 패턴과 일치하는지 확인</target>
        </trans-unit>
        <trans-unit id="6b817ceee8306fc2d30f69848fcba795f4ba0b35" translate="yes" xml:space="preserve">
          <source>Checks that string not match with pattern</source>
          <target state="translated">문자열이 패턴과 일치하지 않는지 확인</target>
        </trans-unit>
        <trans-unit id="996b3dde3fe5a2a1be42ed19bbaf5a1ce8bc7277" translate="yes" xml:space="preserve">
          <source>Checks that the active JavaScript popup, as created by &lt;code&gt;window.alert&lt;/code&gt;|&lt;code&gt;window.confirm&lt;/code&gt;|&lt;code&gt;window.prompt&lt;/code&gt;, contains the given string.</source>
          <target state="translated">확인이 활성화 된 자바 스크립트 팝업, 만든으로 &lt;code&gt;window.alert&lt;/code&gt; | &lt;code&gt;window.confirm&lt;/code&gt; | &lt;code&gt;window.prompt&lt;/code&gt; 는 주어진 문자열을 포함합니다.</target>
        </trans-unit>
        <trans-unit id="00b71d6ee35a257f4c4346e21afb5648051fb36b" translate="yes" xml:space="preserve">
          <source>Checks that the active JavaScript popup, as created by &lt;code&gt;window.alert&lt;/code&gt;|&lt;code&gt;window.confirm&lt;/code&gt;|&lt;code&gt;window.prompt&lt;/code&gt;, does NOT contain the given string.</source>
          <target state="translated">확인이 활성화 된 자바 스크립트 팝업, 만든으로 &lt;code&gt;window.alert&lt;/code&gt; | &lt;code&gt;window.confirm&lt;/code&gt; | &lt;code&gt;window.prompt&lt;/code&gt; 는 지정된 문자열을 포함하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="82c94315d023b5ee2173321969e0822071a16b45" translate="yes" xml:space="preserve">
          <source>Checks that the condition is NOT false (everything but false)</source>
          <target state="translated">조건이 거짓이 아닌지 확인 (모든 것이 아닌 거짓)</target>
        </trans-unit>
        <trans-unit id="b86fcfb4c054d42ae96cd88e82ec04782a3705b6" translate="yes" xml:space="preserve">
          <source>Checks that the condition is NOT true (everything but true)</source>
          <target state="translated">조건이 참이 아닌지 확인 (모든 것이 아닌 참)</target>
        </trans-unit>
        <trans-unit id="9e594de36a26b55e85247a7540068a40be159b87" translate="yes" xml:space="preserve">
          <source>Checks that the current URI doesn&amp;rsquo;t contain the given string.</source>
          <target state="translated">현재 URI에 지정된 문자열이 포함되어 있지 않은지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="bc50855b1fd31f6de6ee8312cf609c2a35158173" translate="yes" xml:space="preserve">
          <source>Checks that the current URL doesn&amp;rsquo;t equal the given string. Unlike &lt;code&gt;dontSeeInCurrentUrl&lt;/code&gt;, this only matches the full URL.</source>
          <target state="translated">현재 URL이 지정된 문자열과 다른지 확인합니다. &lt;code&gt;dontSeeInCurrentUrl&lt;/code&gt; 과 달리 이것은 전체 URL 과만 일치합니다.</target>
        </trans-unit>
        <trans-unit id="37b5bb3c53b1fb70936c038c662a8119a5678bd6" translate="yes" xml:space="preserve">
          <source>Checks that the current URL is equal to the given string. Unlike &lt;code&gt;seeInCurrentUrl&lt;/code&gt;, this only matches the full URL.</source>
          <target state="translated">현재 URL이 주어진 문자열과 같은지 확인합니다. &lt;code&gt;seeInCurrentUrl&lt;/code&gt; 과 달리 이것은 전체 URL 과만 일치합니다.</target>
        </trans-unit>
        <trans-unit id="0c832d20c34cea338ccc2579352c684fef96379d" translate="yes" xml:space="preserve">
          <source>Checks that the current URL matches the given regular expression.</source>
          <target state="translated">현재 URL이 지정된 정규식과 일치하는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="288b97d62fa3dd1c8cecfc6f4c380949981f80fb" translate="yes" xml:space="preserve">
          <source>Checks that the current page contains the given string (case insensitive).</source>
          <target state="translated">현재 페이지에 주어진 문자열이 포함되어 있는지 확인합니다 (대소 문자 구분).</target>
        </trans-unit>
        <trans-unit id="1f30e7deaf8781d575fe2375033b005eba2016f2" translate="yes" xml:space="preserve">
          <source>Checks that the current page contains the given string in its raw source code.</source>
          <target state="translated">현재 페이지의 원시 소스 코드에 지정된 문자열이 포함되어 있는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="b92b4e59db49bd3c082b88641c6f4a1c669699e2" translate="yes" xml:space="preserve">
          <source>Checks that the current page doesn&amp;rsquo;t contain the text specified (case insensitive). Give a locator as the second parameter to match a specific region.</source>
          <target state="translated">현재 페이지에 지정된 텍스트가 포함되어 있지 않은지 확인합니다 (대소 문자 구분). 로케이터를 특정 지역과 일치하는 두 번째 매개 변수로 제공하십시오.</target>
        </trans-unit>
        <trans-unit id="788ccfa2a59c47dc5bb08c3badf71e14108739dc" translate="yes" xml:space="preserve">
          <source>Checks that the given element exists on the page and is visible. You can also specify expected attributes of this element.</source>
          <target state="translated">주어진 요소가 페이지에 존재하고 표시되는지 확인합니다. 이 요소의 예상 속성을 지정할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="ed7a0b504541ae9998b9f8ee7d40a5c4b1758d23" translate="yes" xml:space="preserve">
          <source>Checks that the given element exists on the page, even it is invisible.</source>
          <target state="translated">주어진 요소가 보이지 않는 경우에도 페이지에 존재하는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="36ff3029d673c4a3e423f2028749df1850a3db14" translate="yes" xml:space="preserve">
          <source>Checks that the given element is invisible or not present on the page. You can also specify expected attributes of this element.</source>
          <target state="translated">주어진 요소가 보이지 않거나 페이지에 없는지 확인합니다. 이 요소의 예상 속성을 지정할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="b6f0dc5e27f15e4dd2fb574a675c81fdf4805291" translate="yes" xml:space="preserve">
          <source>Checks that the given input field or textarea &lt;em&gt;equals&lt;/em&gt; (i.e. not just contains) the given value. Fields are matched by label text, the &amp;ldquo;name&amp;rdquo; attribute, CSS, or XPath.</source>
          <target state="translated">주어진 입력 필드 또는 텍스트 영역 &lt;em&gt;이&lt;/em&gt; 주어진 값과 &lt;em&gt;같은지&lt;/em&gt; (즉, 포함하지 않음) 확인합니다. 필드는 레이블 텍스트, &quot;name&quot;속성, CSS 또는 XPath와 일치합니다.</target>
        </trans-unit>
        <trans-unit id="8b2349378980c31ec40473f30cb31a23b14f5d60" translate="yes" xml:space="preserve">
          <source>Checks that the given option is not selected.</source>
          <target state="translated">주어진 옵션이 선택되지 않았는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="cede3022ce3e94119c7541747c857633415a0e77" translate="yes" xml:space="preserve">
          <source>Checks that the given option is selected.</source>
          <target state="translated">주어진 옵션이 선택되어 있는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="e218ef64d01667e5a1fc3ffc828c8cc8ed7aa622" translate="yes" xml:space="preserve">
          <source>Checks that the page doesn&amp;rsquo;t contain a link with the given string. If the second parameter is given, only links with a matching &amp;ldquo;href&amp;rdquo; attribute will be checked.</source>
          <target state="translated">페이지에 주어진 문자열과의 링크가 포함되어 있지 않은지 확인합니다. 두 번째 매개 변수가 제공되면 &quot;href&quot;속성이 일치하는 링크 만 점검됩니다.</target>
        </trans-unit>
        <trans-unit id="59b05da9446eb01bbc5092188b64472e7a32af16" translate="yes" xml:space="preserve">
          <source>Checks that the page source contains the given string.</source>
          <target state="translated">페이지 소스에 지정된 문자열이 포함되어 있는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="fe65f66cd508f0105ff6fe6184461cc10db39b1e" translate="yes" xml:space="preserve">
          <source>Checks that the page source doesn&amp;rsquo;t contain the given string.</source>
          <target state="translated">페이지 소스에 지정된 문자열이 포함되어 있지 않은지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="3d0398700cc14bf04ad6239cc07fa92d6b797a5b" translate="yes" xml:space="preserve">
          <source>Checks that the page title contains the given string.</source>
          <target state="translated">페이지 제목에 주어진 문자열이 포함되어 있는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="b29b221ff12bc7f8457242253d3f1c0fcb0e6a96" translate="yes" xml:space="preserve">
          <source>Checks that the page title does not contain the given string.</source>
          <target state="translated">페이지 제목에 지정된 문자열이 포함되어 있지 않은지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="97a5998e444444b1c953e9a0b56feda61e7a2e5e" translate="yes" xml:space="preserve">
          <source>Checks that the response code 2xx</source>
          <target state="translated">응답 코드 2xx인지 확인</target>
        </trans-unit>
        <trans-unit id="a4aca95311b54ea3540f599d6fa6cdcf1f743132" translate="yes" xml:space="preserve">
          <source>Checks that the response code 3xx</source>
          <target state="translated">응답 코드 3xx인지 확인</target>
        </trans-unit>
        <trans-unit id="e8244b2d18bd3829bda78c6d17f126345db52b9c" translate="yes" xml:space="preserve">
          <source>Checks that the response code is 2xx</source>
          <target state="translated">응답 코드가 2xx인지 확인</target>
        </trans-unit>
        <trans-unit id="06edb93d5cd7d0c4067241479d5a32570172af1c" translate="yes" xml:space="preserve">
          <source>Checks that the response code is 4xx</source>
          <target state="translated">응답 코드가 4xx인지 확인</target>
        </trans-unit>
        <trans-unit id="55d451bf06761ce955d81874eec432246aeb787a" translate="yes" xml:space="preserve">
          <source>Checks that the response code is 5xx</source>
          <target state="translated">응답 코드가 5xx인지 확인</target>
        </trans-unit>
        <trans-unit id="f5933fcbe15b983e83b8a980d2a471e20f961672" translate="yes" xml:space="preserve">
          <source>Checks that the specified checkbox is checked.</source>
          <target state="translated">지정된 확인란이 선택되어 있는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="c5dd9554e97e74a3e2e8af94d29562ffd374793c" translate="yes" xml:space="preserve">
          <source>Checks that there are a certain number of elements matched by the given locator on the page.</source>
          <target state="translated">페이지에서 지정된 로케이터와 일치하는 특정 수의 요소가 있는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="f8a372a3baa712ca8132df51da3a918a654aec92" translate="yes" xml:space="preserve">
          <source>Checks that there isn&amp;rsquo;t a cookie with the given name. You can set additional cookie params like &lt;code&gt;domain&lt;/code&gt;, &lt;code&gt;path&lt;/code&gt; as array passed in last argument.</source>
          <target state="translated">지정된 이름의 쿠키가 없는지 확인합니다. &lt;code&gt;domain&lt;/code&gt; , &lt;code&gt;path&lt;/code&gt; 와 같은 추가 쿠키 매개 변수 를 마지막 인수에 전달 된 배열로 설정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="678f44bc2a784e88895194ecb7ef6fde5b74434e" translate="yes" xml:space="preserve">
          <source>Checks that there&amp;rsquo;s a link with the specified text. Give a full URL as the second parameter to match links with that exact URL.</source>
          <target state="translated">지정된 텍스트와의 링크가 있는지 확인합니다. 정확한 URL과의 링크를 일치시키기 위해 두 번째 매개 변수로 전체 URL을 제공하십시오.</target>
        </trans-unit>
        <trans-unit id="f157f62002fe120ca5b3aa8c0ef65144e9a28360" translate="yes" xml:space="preserve">
          <source>Checks that two variables are equal.</source>
          <target state="translated">두 변수가 같은지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="87ba6ed5e569bd04f8539658d098637f309bb1c7" translate="yes" xml:space="preserve">
          <source>Checks that two variables are not equal</source>
          <target state="translated">두 변수가 서로 다른지 확인</target>
        </trans-unit>
        <trans-unit id="015cbda6bea73084f0bb744a09d8a83c5e12f0ac" translate="yes" xml:space="preserve">
          <source>Checks that two variables are not same</source>
          <target state="translated">두 변수가 동일하지 않은지 확인</target>
        </trans-unit>
        <trans-unit id="4889af8c1af7a500acb64db621bbc7d6398b5d15" translate="yes" xml:space="preserve">
          <source>Checks that two variables are same</source>
          <target state="translated">두 변수가 동일한 지 확인</target>
        </trans-unit>
        <trans-unit id="65e1d7b3d46ca35820a62b62904a478544a982c7" translate="yes" xml:space="preserve">
          <source>Checks that user is authenticated.</source>
          <target state="translated">사용자가 인증되었는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="2dcd986dc36a4792e66e24d915f8e481a1fd9075" translate="yes" xml:space="preserve">
          <source>Checks that variable is NULL</source>
          <target state="translated">변수가 NULL인지 확인</target>
        </trans-unit>
        <trans-unit id="ebebcf6d1ef62500dd70a9d468e4fc346ed3a2f3" translate="yes" xml:space="preserve">
          <source>Checks that variable is empty.</source>
          <target state="translated">변수가 비어 있는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="8103316664632800fe760b67bc7185d10c7e8c28" translate="yes" xml:space="preserve">
          <source>Checks that variable is not NULL</source>
          <target state="translated">변수가 NULL이 아닌지 확인</target>
        </trans-unit>
        <trans-unit id="cbdc5aab526f0414a5857d6240693568df61d3ce" translate="yes" xml:space="preserve">
          <source>Checks that variable is not empty.</source>
          <target state="translated">변수가 비어 있지 않은지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="eebbffb1df752183b27d502cca18dd2be71688ee" translate="yes" xml:space="preserve">
          <source>Checks the strict matching of file contents. Unlike &lt;code&gt;seeInThisFile&lt;/code&gt; will fail if file has something more than expected lines. Better to use with HEREDOC strings. Matching is done after removing &amp;ldquo;\r&amp;rdquo; chars from file content.</source>
          <target state="translated">파일 내용의 엄격한 일치를 확인합니다. &lt;code&gt;seeInThisFile&lt;/code&gt; 과 달리 파일에 예상보다 많은 줄이 있으면 실패합니다. HEREDOC 문자열과 함께 사용하는 것이 좋습니다. 파일 내용에서 &quot;\ r&quot;문자를 제거한 후 일치가 수행됩니다.</target>
        </trans-unit>
        <trans-unit id="c3dbeec33c489607851b4abcc583aa27dd0ffacf" translate="yes" xml:space="preserve">
          <source>Checks whether XML response does not match XPath</source>
          <target state="translated">XML 응답이 XPath와 일치하지 않는지 확인</target>
        </trans-unit>
        <trans-unit id="346ffbb124d25453793acf2d90a753b1281166d2" translate="yes" xml:space="preserve">
          <source>Checks whether XML response matches XPath</source>
          <target state="translated">XML 응답이 XPath와 일치하는지 확인</target>
        </trans-unit>
        <trans-unit id="3d6d9230c1763f433e3463e8cb33962fa628b19e" translate="yes" xml:space="preserve">
          <source>Checks whether last response do not contain text.</source>
          <target state="translated">마지막 응답에 텍스트가 없는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="f6b63430e79d66ac207d78ffab89d5eda2d4ae42" translate="yes" xml:space="preserve">
          <source>Checks whether last response was valid JSON. This is done with json_last_error function.</source>
          <target state="translated">마지막 응답이 유효한 JSON인지 확인합니다. 이것은 json_last_error 함수로 수행됩니다.</target>
        </trans-unit>
        <trans-unit id="4be0c8ccca33aa81cdd484b8d0be77f91349ddbd" translate="yes" xml:space="preserve">
          <source>Checks whether last response was valid XML. This is done with libxml_get_last_error function.</source>
          <target state="translated">마지막 응답이 유효한 XML인지 확인합니다. 이것은 libxml_get_last_error 함수로 수행됩니다.</target>
        </trans-unit>
        <trans-unit id="91a26f22d0bfed0433f73e823ed19b38ebbaf8f0" translate="yes" xml:space="preserve">
          <source>Checks whether the last JSON response contains provided array. The response is converted to array with json_decode($response, true) Thus, JSON is represented by associative array. This method matches that response array contains provided array.</source>
          <target state="translated">마지막 JSON 응답에 제공된 배열이 포함되어 있는지 확인합니다. 응답은 json_decode ($ response, true)를 사용하여 배열로 변환됩니다. 따라서 JSON은 연관 배열로 표시됩니다. 이 메소드는 응답 배열에 제공된 배열이 포함되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="52dc221fdf2f9ff69a1324e232f3040fda3caa61" translate="yes" xml:space="preserve">
          <source>Checks whether the last response contains text.</source>
          <target state="translated">마지막 응답에 텍스트가 포함되어 있는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="d1f0aff033b7c364c2cb8b2d00360caa59f8cba1" translate="yes" xml:space="preserve">
          <source>Choose the syntax you like the most and use it,</source>
          <target state="translated">가장 좋아하는 구문을 선택하고 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="fc6ca66b79d329ef6af29f5c76d31857bc6cb01f" translate="yes" xml:space="preserve">
          <source>Chrome or Firefox</source>
          <target state="translated">크롬 또는 파이어 폭스</target>
        </trans-unit>
        <trans-unit id="8d06b229773153ed953f26cbf3aa7309dd4ff316" translate="yes" xml:space="preserve">
          <source>ChromeDriver</source>
          <target state="translated">ChromeDriver</target>
        </trans-unit>
        <trans-unit id="a2bb24803604e995372c043770ad987c13e538a9" translate="yes" xml:space="preserve">
          <source>ChromeDriver was created by Google to control Chrome and Chromium browsers programmatically. It can be paired with &lt;a href=&quot;03-acceptancetests#Selenium-Server&quot;&gt;Selenium Server&lt;/a&gt; or used as a standalone tool to drive Chrome browser. It is simpler to set up than Selenium Server, however, it has limited support for WebDriver protocol.</source>
          <target state="translated">ChromeDriver는 Google에서 프로그래밍 방식으로 Chrome 및 Chromium 브라우저를 제어하기 위해 만들어졌습니다. &lt;a href=&quot;03-acceptancetests#Selenium-Server&quot;&gt;Selenium 서버&lt;/a&gt; 와 함께 사용하거나 Chrome 브라우저를 구동하기위한 독립형 도구로 사용할 수 있습니다 . Selenium 서버보다 설정이 더 간단하지만 WebDriver 프로토콜에 대한 지원이 제한되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="b5817d6cefdd2d37c6cb551dca8d56f9db74558d" translate="yes" xml:space="preserve">
          <source>Class JsonType @package Codeception\Util</source>
          <target state="translated">클래스 JsonType @package Codeception \ Util</target>
        </trans-unit>
        <trans-unit id="e6d8bdf8d6b920f5ce4a49fd295a90dfb38f00cc" translate="yes" xml:space="preserve">
          <source>Class containing constants of HTTP Status Codes and method to print HTTP code with its description.</source>
          <target state="translated">HTTP 상태 코드의 상수를 포함하는 클래스 및 설명과 함께 HTTP 코드를 인쇄하는 방법.</target>
        </trans-unit>
        <trans-unit id="fa893d87e1fa0a69c7942dd1e65f3bd1932e53d1" translate="yes" xml:space="preserve">
          <source>Clean</source>
          <target state="translated">Clean</target>
        </trans-unit>
        <trans-unit id="4d1725cc7b079d862fcd46827cbb04c988a32cc6" translate="yes" xml:space="preserve">
          <source>Clear all messages of the queue/tube</source>
          <target state="translated">대기열 / 튜브의 모든 메시지를 지 웁니다.</target>
        </trans-unit>
        <trans-unit id="6397f164b34d7c78172b660350de48d72172224b" translate="yes" xml:space="preserve">
          <source>Clear the registered application handlers.</source>
          <target state="translated">등록 된 애플리케이션 핸들러를 지우십시오.</target>
        </trans-unit>
        <trans-unit id="ec407ce72c04280a0236d1d3488f7e5cceb10402" translate="yes" xml:space="preserve">
          <source>Clears given field which isn&amp;rsquo;t empty.</source>
          <target state="translated">비어 있지 않은 주어진 필드를 지 웁니다.</target>
        </trans-unit>
        <trans-unit id="0beeb9fcc02bca0cd1498aa2acd589f8f27818af" translate="yes" xml:space="preserve">
          <source>Clears the APC(u) cache</source>
          <target state="translated">APC (u) 캐시를 지 웁니다.</target>
        </trans-unit>
        <trans-unit id="53a98298fb455348c338555baa18286b2da270c8" translate="yes" xml:space="preserve">
          <source>Cli</source>
          <target state="translated">Cli</target>
        </trans-unit>
        <trans-unit id="a28b9f25850c85be028d130c159844111352c7f3" translate="yes" xml:space="preserve">
          <source>Cli::dontSeeInShellOutput</source>
          <target state="translated">Cli::dontSeeInShellOutput</target>
        </trans-unit>
        <trans-unit id="e179b3c56f294655214e782852a3dd770ecc71a0" translate="yes" xml:space="preserve">
          <source>Cli::runShellCommand</source>
          <target state="translated">Cli::runShellCommand</target>
        </trans-unit>
        <trans-unit id="9ae8d695ff7952174ad6db0cf7c7aeaa91ad3075" translate="yes" xml:space="preserve">
          <source>Cli::seeInShellOutput</source>
          <target state="translated">Cli::seeInShellOutput</target>
        </trans-unit>
        <trans-unit id="3a447b380cf57055b59b6f156385509599536db6" translate="yes" xml:space="preserve">
          <source>Cli::seeResultCodeIs</source>
          <target state="translated">Cli::seeResultCodeIs</target>
        </trans-unit>
        <trans-unit id="e1404eef589bdb6c0afd2cb149b4eef45250a9d0" translate="yes" xml:space="preserve">
          <source>Cli::seeResultCodeIsNot</source>
          <target state="translated">Cli::seeResultCodeIsNot</target>
        </trans-unit>
        <trans-unit id="d8123a86f0a3261e21263e230cc7bc476076e588" translate="yes" xml:space="preserve">
          <source>Cli::seeShellOutputMatches</source>
          <target state="translated">Cli::seeShellOutputMatches</target>
        </trans-unit>
        <trans-unit id="79cbc5eb672a54c2b82572afd52f2a6a4f85e598" translate="yes" xml:space="preserve">
          <source>Click</source>
          <target state="translated">Click</target>
        </trans-unit>
        <trans-unit id="9782dcdd5029a404d40c6bc7c829021563894ca8" translate="yes" xml:space="preserve">
          <source>Clicking links is probably not what takes the most time during the testing of a website. The most routine waste of time goes into the testing of forms. Codeception provides several ways of testing forms.</source>
          <target state="translated">링크를 클릭하는 것이 웹 사이트 테스트 중에 가장 많은 시간이 걸리지 않을 것입니다. 가장 일상적인 시간 낭비는 양식 테스트에 사용됩니다. Codeception은 여러 가지 테스트 양식 양식을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="5625776b7389add28b39795f268db09ca791f0ec" translate="yes" xml:space="preserve">
          <source>Clones an object and redefines it&amp;rsquo;s properties (even protected and private)</source>
          <target state="translated">객체를 복제하고 객체의 속성을 재정의합니다 (보호 및 비공개).</target>
        </trans-unit>
        <trans-unit id="a73011cd2353e58fe852a27dd1e6d778a5efc7df" translate="yes" xml:space="preserve">
          <source>Closes current browser tab and switches to previous active tab.</source>
          <target state="translated">현재 브라우저 탭을 닫고 이전 활성 탭으로 전환합니다.</target>
        </trans-unit>
        <trans-unit id="3c56aeca012e4e4b674819be39004ecf02232584" translate="yes" xml:space="preserve">
          <source>Cloud Testing</source>
          <target state="translated">클라우드 테스팅</target>
        </trans-unit>
        <trans-unit id="2f9c7bca941cea97366911238df02c59a5a7b500" translate="yes" xml:space="preserve">
          <source>Cloud Testing services can run your WebDriver tests in the cloud. In case you want to test a local site or site behind a firewall you should use a tunnel application provided by a service.</source>
          <target state="translated">클라우드 테스트 서비스는 클라우드에서 WebDriver 테스트를 실행할 수 있습니다. 방화벽 뒤의 로컬 사이트 나 사이트를 테스트하려는 경우 서비스에서 제공하는 터널 응용 프로그램을 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="1634b78cbec0dfb9ebc50c0be4deeb69af56ddab" translate="yes" xml:space="preserve">
          <source>Cloud Testing services work with the standard WebDriver protocol. This makes setting up cloud testing really easy. You just need to set the &lt;a href=&quot;modules/webdriver#Cloud-Testing&quot;&gt;WebDriver configuration&lt;/a&gt; to:</source>
          <target state="translated">클라우드 테스트 서비스는 표준 WebDriver 프로토콜과 함께 작동합니다. 이렇게하면 클라우드 테스트를 정말 쉽게 설정할 수 있습니다. &lt;a href=&quot;modules/webdriver#Cloud-Testing&quot;&gt;WebDriver 구성&lt;/a&gt; 을 다음과 같이 설정하면 됩니다.</target>
        </trans-unit>
        <trans-unit id="b614f87a591b0ca42f98c4c903babaaa97f1d6a4" translate="yes" xml:space="preserve">
          <source>Code Coverage</source>
          <target state="translated">코드 범위</target>
        </trans-unit>
        <trans-unit id="cf511ad130599f9e05bfcacdfea22b51e225a117" translate="yes" xml:space="preserve">
          <source>Code inside &lt;code&gt;specify&lt;/code&gt; blocks is isolated. In the example above, any changes to &lt;code&gt;$this-&amp;gt;user&lt;/code&gt; will not be reflected in other code blocks as it is marked with &lt;code&gt;@specify&lt;/code&gt; annotation.</source>
          <target state="translated">&lt;code&gt;specify&lt;/code&gt; 블록 내부의 코드 는 격리되어 있습니다. 위의 예에서 &lt;code&gt;$this-&amp;gt;user&lt;/code&gt; 대한 변경 사항 은 &lt;code&gt;@specify&lt;/code&gt; 주석으로 표시되어 있으므로 다른 코드 블록에 반영되지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="ca567dda33cdf7058994a40bb9ef4db135c7d283" translate="yes" xml:space="preserve">
          <source>Code:</source>
          <target state="translated">Code:</target>
        </trans-unit>
        <trans-unit id="3d8839ca5cb3470781ae332276826344a2858129" translate="yes" xml:space="preserve">
          <source>CodeCoverage results from remote server will be saved to &lt;code&gt;tests/_output&lt;/code&gt; directory. Please note that remote codecoverage results won&amp;rsquo;t be displayed in console by the reason mentioned above: local and remote results can&amp;rsquo;t be merged, and console displays results for local codecoverage.</source>
          <target state="translated">원격 서버의 CodeCoverage 결과는 &lt;code&gt;tests/_output&lt;/code&gt; 디렉토리에 저장됩니다 . 위에서 언급 한 이유로 원격 코드 커버리지 결과가 콘솔에 표시되지 않습니다. 로컬 및 원격 결과를 병합 할 수 없으며 콘솔은 로컬 코드 커버리지에 대한 결과를 표시합니다.</target>
        </trans-unit>
        <trans-unit id="6263c4f1c44f0033e6f0db1db29f9fd576775944" translate="yes" xml:space="preserve">
          <source>Codeception</source>
          <target state="translated">Codeception</target>
        </trans-unit>
        <trans-unit id="539dfde76b6ef7d1e9e77e018f049d9f543d87b8" translate="yes" xml:space="preserve">
          <source>Codeception Acceptance Tests</source>
          <target state="translated">인식 승인 테스트</target>
        </trans-unit>
        <trans-unit id="7e36005695ba0ba2412cd5df36d85a7a23b468f5" translate="yes" xml:space="preserve">
          <source>Codeception Documentation</source>
          <target state="translated">인식 문서</target>
        </trans-unit>
        <trans-unit id="1eb6c2d9a9f8ca8a52b4e7c724933ff76eab6ec6" translate="yes" xml:space="preserve">
          <source>Codeception Functional Tests</source>
          <target state="translated">인식 기능 테스트</target>
        </trans-unit>
        <trans-unit id="8319ed12a6536cac07428d85582e2c3e0c72e7e8" translate="yes" xml:space="preserve">
          <source>Codeception Test</source>
          <target state="translated">인식 테스트</target>
        </trans-unit>
        <trans-unit id="9b89557fc1aa0899091b5244dccea0d683f58b98" translate="yes" xml:space="preserve">
          <source>Codeception Unit Tests</source>
          <target state="translated">인식 단위 테스트</target>
        </trans-unit>
        <trans-unit id="3d3b1311e38768132e4c602d95b328d1bb69fee8" translate="yes" xml:space="preserve">
          <source>Codeception allows execution of user stories in Gherkin format in a similar manner as is done in Cucumber or Behat. Please refer to &lt;a href=&quot;07-bdd&quot;&gt;the BDD chapter&lt;/a&gt; to learn more.</source>
          <target state="translated">Codeception은 Cucumber 또는 Behat에서와 유사한 방식으로 Gherkin 형식의 사용자 스토리를 실행할 수있게합니다. 자세한 내용 &lt;a href=&quot;07-bdd&quot;&gt;은 BDD 장&lt;/a&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="26921b5f1761b6220b5adafc6bb534499e93e625" translate="yes" xml:space="preserve">
          <source>Codeception allows you to access the properties and methods of all modules defined for this suite. Unlike using the UnitTester class for this purpose, using a module directly grants you access to all public properties of that module.</source>
          <target state="translated">Codeception을 사용하면이 제품군에 대해 정의 된 모든 모듈의 속성 및 메서드에 액세스 할 수 있습니다. 이러한 목적으로 UnitTester 클래스를 사용하는 것과 달리 모듈을 사용하면 해당 모듈의 모든 공용 속성에 직접 액세스 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="48f85bd579f8d80234fbabed19744aa2338839ee" translate="yes" xml:space="preserve">
          <source>Codeception allows you to execute actions in concurrent sessions. The most obvious case for this is testing realtime messaging between users on a site. In order to do it, you will need to launch two browser windows at the same time for the same test. Codeception has a very smart concept for doing this. It is called &lt;strong&gt;Friends&lt;/strong&gt;:</source>
          <target state="translated">Codeception을 사용하면 동시 세션에서 작업을 실행할 수 있습니다. 가장 확실한 경우는 사이트의 사용자 간 실시간 메시징 테스트입니다. 그렇게하려면 동일한 테스트를 위해 두 개의 브라우저 창을 동시에 시작해야합니다. Codeception은이를위한 매우 현명한 개념을 가지고 있습니다. &lt;strong&gt;친구&lt;/strong&gt; 라고합니다 :</target>
        </trans-unit>
        <trans-unit id="d52befafebf923b6b4e1e35819e5c595a5975c32" translate="yes" xml:space="preserve">
          <source>Codeception allows you to share cookies between tests, so a test user can stay logged in for other tests.</source>
          <target state="translated">Codeception을 통해 테스트간에 쿠키를 공유 할 수 있으므로 테스트 사용자는 다른 테스트를 위해 로그인 상태를 유지할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d93e008d8eac37889a1e3ca663203ed369669baf" translate="yes" xml:space="preserve">
          <source>Codeception also assists the developer when dealing with data. Tools for database population and cleaning up are bundled within the &lt;code&gt;Db&lt;/code&gt; module. If you use ORM, you can use one of the provided framework modules to operate with database through a data abstraction layer, and use the DataFactory module to generate new records with ease.</source>
          <target state="translated">Codeception은 또한 데이터를 다룰 때 개발자를 지원합니다. 데이터베이스 채우기 및 정리 도구는 &lt;code&gt;Db&lt;/code&gt; 모듈 내에 번들로 제공됩니다 . ORM을 사용하는 경우 제공된 프레임 워크 모듈 중 하나를 사용하여 데이터 추상화 계층을 통해 데이터베이스에 대해 작업하고 DataFactory 모듈을 사용하여 새 레코드를 쉽게 생성 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7e5c84b8429e3a1bfa3803925ee6c0cfbac0e783" translate="yes" xml:space="preserve">
          <source>Codeception can connect to different PHP frameworks that support functional testing: Symfony2, Laravel5, Yii2, Zend Framework and others. You just need to enable the desired module in your functional suite configuration to start.</source>
          <target state="translated">Codeception은 기능 테스트를 지원하는 Symfony2, Laravel5, Yii2, Zend Framework 및 기타 PHP 프레임 워크에 연결할 수 있습니다. 기능 스위트 구성에서 원하는 모듈을 시작하기 만하면됩니다.</target>
        </trans-unit>
        <trans-unit id="f85aaaf02173b388a4aeb52a1cf770d86d259aeb" translate="yes" xml:space="preserve">
          <source>Codeception can generate a PageObject class for you with command:</source>
          <target state="translated">Codeception은 다음 명령으로 PageObject 클래스를 생성 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="80c93d33e75c0441a9c369577a7fbf5d087bf4ee" translate="yes" xml:space="preserve">
          <source>Codeception can organize tests into &lt;a href=&quot;07-advancedusage#Groups&quot;&gt;groups&lt;/a&gt;. Starting from 2.0 it can load information about a group from a files. Sample text file with a list of file names can be treated as a dynamically configured group. Take a look into sample group file:</source>
          <target state="translated">Codeception은 테스트를 &lt;a href=&quot;07-advancedusage#Groups&quot;&gt;그룹으로&lt;/a&gt; 구성 할 수 있습니다 . 2.0부터는 파일에서 그룹에 대한 정보를로드 할 수 있습니다. 파일 이름 목록이있는 샘플 텍스트 파일은 동적으로 구성된 그룹으로 취급 될 수 있습니다. 샘플 그룹 파일을 살펴보십시오.</target>
        </trans-unit>
        <trans-unit id="f76473a065fbfcd2e3b165de663345d6e4150b68" translate="yes" xml:space="preserve">
          <source>Codeception comes with bundled extensions located in &lt;code&gt;ext&lt;/code&gt; directory. For instance, you can enable the Logger extension to log the test execution with Monolog:</source>
          <target state="translated">Codeception은 &lt;code&gt;ext&lt;/code&gt; 디렉토리 에 번들 확장이 있습니다 . 예를 들어, Logger 확장 프로그램을 활성화하여 Monolog로 테스트 실행을 기록 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8805da47f504f11a8fbad389f3438920209b8107" translate="yes" xml:space="preserve">
          <source>Codeception does not provide a command like &lt;code&gt;run-parallel&lt;/code&gt;. There is no common solution that can play well for everyone. Here are the questions you will need to answer:</source>
          <target state="translated">Codeception은 &lt;code&gt;run-parallel&lt;/code&gt; 과 같은 명령을 제공하지 않습니다 . 모든 사람에게 적합한 솔루션은 없습니다. 답변해야 할 질문은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="eb0bad4194caaed23572bb85146cd3d079089ac9" translate="yes" xml:space="preserve">
          <source>Codeception does not provide tools for parallel test execution. This is a complex task and solutions may vary depending on a project. We use &lt;a href=&quot;http://robo.li&quot;&gt;Robo&lt;/a&gt; task runner as an external tool to perform all required steps. To prepare our tests to be executed in parallel we use Codeception features of dynamic groups and environments. To do even more we can create Extensions and Group classes to perform dynamic configuration depending on a test process.</source>
          <target state="translated">Codeception은 병렬 테스트 실행을위한 도구를 제공하지 않습니다. 이것은 복잡한 작업이며 솔루션은 프로젝트에 따라 다를 수 있습니다. 우리가 사용하는 &lt;a href=&quot;http://robo.li&quot;&gt;로보&lt;/a&gt; 필요한 모든 단계를 수행하기 위해 외부 도구로 작업 주자. 테스트가 병렬로 실행되도록 준비하기 위해 동적 그룹 및 환경의 Codeception 기능을 사용합니다. 더 많은 작업을 수행하기 위해 테스트 프로세스에 따라 확장 및 그룹 클래스를 작성하여 동적 구성을 수행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="27e89cc3a58a4d79de467cda587a828bc558dda1" translate="yes" xml:space="preserve">
          <source>Codeception doesn&amp;rsquo;t restrict you to only the modules from the main repository. Your project might need your own actions added to the test suite. By running the &lt;code&gt;bootstrap&lt;/code&gt; command, Codeception generates three dummy modules for you, one for each of the newly created suites. These custom modules are called &amp;lsquo;Helpers&amp;rsquo;, and they can be found in the &lt;code&gt;tests/_support&lt;/code&gt; directory.</source>
          <target state="translated">Codeception은 기본 리포지토리의 모듈로만 제한하지 않습니다. 프로젝트에 테스트 스위트에 추가 된 고유 한 조치가 필요할 수 있습니다. &lt;code&gt;bootstrap&lt;/code&gt; 명령 을 실행하면 Codeception은 새로 작성된 각 스위트마다 하나씩 3 개의 더미 모듈을 생성합니다. 이러한 사용자 정의 모듈을 '도우미'라고하며 &lt;code&gt;tests/_support&lt;/code&gt; 디렉토리에 있습니다.</target>
        </trans-unit>
        <trans-unit id="b611b8abcf2e45511d2e5901ba195367569832a0" translate="yes" xml:space="preserve">
          <source>Codeception follows simple naming rules to make it easy to remember (as well as easy to understand) its method names.</source>
          <target state="translated">Codeception은 간단한 이름 지정 규칙에 따라 메서드 이름을 쉽게 기억하고 이해하기 쉽게 만듭니다.</target>
        </trans-unit>
        <trans-unit id="04bc7eccd517562b09b294d23f4e78dae9358127" translate="yes" xml:space="preserve">
          <source>Codeception generates this text representation from PHP code by executing:</source>
          <target state="translated">Codeception은 다음을 실행하여 PHP 코드에서이 텍스트 표현을 생성합니다.</target>
        </trans-unit>
        <trans-unit id="97ef240f0a11b8daf539f27caa469bcadba936b5" translate="yes" xml:space="preserve">
          <source>Codeception has a &lt;code&gt;Db&lt;/code&gt; module, which takes on most of the tasks of database interaction.</source>
          <target state="translated">Codeception에는 대부분의 데이터베이스 상호 작용 작업을 수행 하는 &lt;code&gt;Db&lt;/code&gt; 모듈이 있습니다.</target>
        </trans-unit>
        <trans-unit id="337f706c0e81530408bcbb123c163c86c870bb94" translate="yes" xml:space="preserve">
          <source>Codeception has a global configuration in &lt;code&gt;codeception.yml&lt;/code&gt; and a config for each suite. We also support &lt;code&gt;.dist&lt;/code&gt; configuration files. If you have several developers in a project, put shared settings into &lt;code&gt;codeception.dist.yml&lt;/code&gt; and personal settings into &lt;code&gt;codeception.yml&lt;/code&gt;. The same goes for suite configs. For example, the &lt;code&gt;unit.suite.yml&lt;/code&gt; will be merged with &lt;code&gt;unit.suite.dist.yml&lt;/code&gt;.</source>
          <target state="translated">Codeception는 글로벌 구성이 &lt;code&gt;codeception.yml&lt;/code&gt; 각 제품군에 대한 설정을. 또한 &lt;code&gt;.dist&lt;/code&gt; 구성 파일을 지원 합니다. 프로젝트에 여러 개발자가있는 경우 공유 설정을 &lt;code&gt;codeception.dist.yml&lt;/code&gt; 에 , 개인 설정을 &lt;code&gt;codeception.yml&lt;/code&gt; 에 넣으십시오 . 스위트 구성도 마찬가지입니다. 예를 들어 &lt;code&gt;unit.suite.yml&lt;/code&gt; 은 &lt;code&gt;unit.suite.dist.yml&lt;/code&gt; 과 병합됩니다 .</target>
        </trans-unit>
        <trans-unit id="2e0808fffd75c9b6cc2821b8b15a3305e8100b4b" translate="yes" xml:space="preserve">
          <source>Codeception has built-in installation templates for</source>
          <target state="translated">Codeception에는 다음을위한 설치 템플릿이 내장되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="810a2dce86ecb785664a1a65b9ece8a13a83e87b" translate="yes" xml:space="preserve">
          <source>Codeception has its own testing format called Cest (Codecept + Test). To start writing a test we need to create a new Cest file. We can do that by running the following command:</source>
          <target state="translated">Codeception에는 Cest (Codecept + Test)라는 자체 테스트 형식이 있습니다. 테스트 작성을 시작하려면 새로운 Cest 파일을 만들어야합니다. 다음 명령을 실행하여이를 수행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f2baa9f53cbd01c46d0f48a0b5a370634b10550a" translate="yes" xml:space="preserve">
          <source>Codeception has limited capabilities to extend its core features. Extensions are not supposed to override current functionality, but can be useful if you are an experienced developer and you want to hook into the testing flow.</source>
          <target state="translated">Codeception은 핵심 기능을 확장하는 기능이 제한적입니다. 확장은 현재 기능을 재정의하지는 않지만 숙련 된 개발자이고 테스트 흐름에 연결하려는 경우 유용 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d6b7f5171f6cabd03f7aec982884e39d77fcdc10" translate="yes" xml:space="preserve">
          <source>Codeception has many bundled modules which will help you run tests for different purposes and different environments. The idea of modules is to share common actions, so that developers and QA engineers can concentrate on testing and not on reinventing the wheel. Each module provides methods for testing its own part and by combining modules you can get a powerful setup to test an application at all levels.</source>
          <target state="translated">Codeception에는 다양한 목적과 환경에 따라 테스트를 실행하는 데 도움이되는 많은 번들 모듈이 있습니다. 모듈의 개념은 개발자와 QA 엔지니어가 바퀴를 재발 명하지 않고 테스트에 집중할 수 있도록 일반적인 조치를 공유하는 것입니다. 각 모듈은 자체 부품을 테스트하는 방법을 제공하며 모듈을 결합하여 모든 수준에서 응용 프로그램을 테스트하기위한 강력한 설정을 얻을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2600d438a56a44f46c455240a1d7f2d1af9c5019" translate="yes" xml:space="preserve">
          <source>Codeception has two modules that will help you to test various web services. They need a new &lt;code&gt;api&lt;/code&gt; suite to be created. Remember, you are not limited to test only response body. By including &lt;code&gt;Db&lt;/code&gt; module you may check if a user has been created after the &lt;code&gt;CreateUser&lt;/code&gt; call. You can improve testing scenarios by using REST or SOAP responses in your helper methods.</source>
          <target state="translated">Codeception에는 다양한 웹 서비스를 테스트하는 데 도움이되는 두 가지 모듈이 있습니다. 새로운 &lt;code&gt;api&lt;/code&gt; 제품군이 필요합니다 . 응답 본문 만 테스트하도록 제한되지는 않습니다. &lt;code&gt;Db&lt;/code&gt; 모듈을 포함 하면 &lt;code&gt;CreateUser&lt;/code&gt; 호출 후 사용자가 작성되었는지 확인할 수 있습니다 . 헬퍼 메소드에서 REST 또는 SOAP 응답을 사용하여 테스트 시나리오를 개선 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f2940c06f31be3c1dd66585265beb9ef6af11f74" translate="yes" xml:space="preserve">
          <source>Codeception is a framework which may look simple at first glance but it allows you to build powerful tests with a single API, refactor them, and write them faster using the interactive console. Codeception tests can be easily organized in groups or Cest classes.</source>
          <target state="translated">Codeception은 언뜻보기에는 간단한 프레임 워크이지만 단일 API로 강력한 테스트를 작성하고 리팩터링하며 대화식 콘솔을 사용하여 더 빠르게 작성할 수 있습니다. 인식 테스트는 그룹 또는 Cest 클래스로 쉽게 구성 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7b506703e654effdda44212559a8e16575de8236" translate="yes" xml:space="preserve">
          <source>Codeception is created on top of &lt;a href=&quot;https://www.phpunit.de/&quot;&gt;PHPUnit&lt;/a&gt;. If you have experience writing unit tests with PHPUnit you can continue doing so. Codeception has no problem executing standard PHPUnit tests, but, additionally, Codeception provides some well-built tools to make your unit tests simpler and cleaner.</source>
          <target state="translated">코드 인식은 &lt;a href=&quot;https://www.phpunit.de/&quot;&gt;PHPUnit&lt;/a&gt; 위에 생성됩니다 . PHPUnit으로 단위 테스트를 작성한 경험이 있다면 계속 그렇게 할 수 있습니다. Codeception은 표준 PHPUnit 테스트를 실행하는 데 아무런 문제가 없지만 Codeception은 단위 테스트를보다 간단하고 깔끔하게하기 위해 잘 구축 된 도구를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="8a41392a76adf11968fb1a2f75f78b9f69504978" translate="yes" xml:space="preserve">
          <source>Codeception modules can print valuable information while running. Just execute tests with the &lt;code&gt;--debug&lt;/code&gt; option to see running details. For any custom output use the &lt;code&gt;codecept_debug&lt;/code&gt; function:</source>
          <target state="translated">Codeception 모듈은 실행 중에 유용한 정보를 인쇄 할 수 있습니다. &lt;code&gt;--debug&lt;/code&gt; 옵션으로 테스트를 실행하면 실행 중인 세부 정보를 볼 수 있습니다. 사용자 정의 출력의 경우 &lt;code&gt;codecept_debug&lt;/code&gt; 함수를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="17415a20f5decfb845cf3e75aa5cd732de4ed45b" translate="yes" xml:space="preserve">
          <source>Codeception provides &lt;a href=&quot;https://github.com/Codeception/Stub&quot;&gt;Codeception\Stub library&lt;/a&gt; for building mocks and stubs for tests. Under the hood it used PHPUnit&amp;rsquo;s mock builder but with much simplified API.</source>
          <target state="translated">Codeception은 테스트 용 모의 객체 및 스텁을 빌드하기위한 &lt;a href=&quot;https://github.com/Codeception/Stub&quot;&gt;Codeception \ Stub 라이브러리&lt;/a&gt; 를 제공합니다 . 후드 아래에서 PHPUnit의 모의 빌더를 사용했지만 훨씬 단순화 된 API를 사용했습니다.</target>
        </trans-unit>
        <trans-unit id="f3a74f4893af7990b07d6117fd99f5c1b491cfda" translate="yes" xml:space="preserve">
          <source>Codeception reorders tests so dependent tests will always be executed before the tests that rely on them.</source>
          <target state="translated">Codeception은 테스트 순서를 변경하므로 종속 테스트는 항상 테스트에 의존하는 테스트보다 먼저 실행됩니다.</target>
        </trans-unit>
        <trans-unit id="fb1cd9505e44fe91fe79a1c985b3b45db6d55326" translate="yes" xml:space="preserve">
          <source>Codeception service will execute command &lt;code&gt;codecept run&lt;/code&gt; but only after all services are started. This is defined using &lt;code&gt;depends_on&lt;/code&gt; parameter.</source>
          <target state="translated">Codeception 서비스는 &lt;code&gt;codecept run&lt;/code&gt; 명령을 실행 하지만 모든 서비스가 시작된 후에 만 실행 됩니다. &lt;code&gt;depends_on&lt;/code&gt; 매개 변수를 사용하여 정의 됩니다.</target>
        </trans-unit>
        <trans-unit id="e16834f29345ec3143eefe4b3bd886481f9088a4" translate="yes" xml:space="preserve">
          <source>Codeception setup can be customized for the needs of your application. If you build a distributable application and you have a personalized configuration you can build an Installation template which will help your users to start testing on their projects.</source>
          <target state="translated">응용 프로그램의 요구에 맞게 코드 설정을 사용자 지정할 수 있습니다. 배포 가능한 응용 프로그램을 작성하고 개인화 된 구성이있는 경우 사용자가 프로젝트 테스트를 시작하는 데 도움이되는 설치 템플릿을 작성할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c20ab9e98ee8838eea06f491e6b7ef8ee5295559" translate="yes" xml:space="preserve">
          <source>Codeception supports all three testing types. Out of the box you have tools for writing unit, functional, and acceptance tests in a unified framework.</source>
          <target state="translated">Codeception은 세 가지 테스트 유형을 모두 지원합니다. 기본적으로 통합 프레임 워크에서 단위, 기능 및 승인 테스트를 작성하기위한 도구가 있습니다.</target>
        </trans-unit>
        <trans-unit id="29e53f5fcc9968474cf601791797a73ad482ddf4" translate="yes" xml:space="preserve">
          <source>Codeception supports simple dependency injection for Cest and \Codeception\TestCase\Test classes. It means that you can specify which classes you need as parameters of the special &lt;code&gt;_inject()&lt;/code&gt; method, and Codeception will automatically create the respective objects and invoke this method, passing all dependencies as arguments. This may be useful when working with Helpers. Here&amp;rsquo;s an example for Cest:</source>
          <target state="translated">Codeception은 Cest 및 \ Codeception \ TestCase \ Test 클래스에 대한 간단한 종속성 주입을 지원합니다. 즉, 특수한 &lt;code&gt;_inject()&lt;/code&gt; 메서드 의 매개 변수로 필요한 클래스를 지정할 수 있으며 Codeception은 해당 개체를 자동으로 만들고이 메서드를 호출하여 모든 종속성을 인수로 전달합니다. 도우미와 작업 할 때 유용 할 수 있습니다. Cest의 예는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="f0b1e23d9daca7f924f707d8e3f5f622036cb3e7" translate="yes" xml:space="preserve">
          <source>Codeception templates allow creating a customized setup and configuration for your project. An abstract class for installation template. Each init template should extend it and implement a &lt;code&gt;setup&lt;/code&gt; method. Use it to build a custom setup class which can be started with &lt;code&gt;codecept init&lt;/code&gt; command.</source>
          <target state="translated">Codeception 템플릿을 사용하면 프로젝트에 대한 사용자 지정 설정 및 구성을 만들 수 있습니다. 설치 템플릿의 추상 클래스입니다. 각 init 템플릿은이를 확장하고 &lt;code&gt;setup&lt;/code&gt; 방법을 구현해야합니다 . 이를 사용하여 &lt;code&gt;codecept init&lt;/code&gt; 명령 으로 시작할 수있는 사용자 정의 설정 클래스를 빌드하십시오 .</target>
        </trans-unit>
        <trans-unit id="409723ff5148c362341afa60377b5dbadedb2e77" translate="yes" xml:space="preserve">
          <source>Codeception tries to locate an element by its text, name, CSS or XPath. You can specify the locator type manually by passing an array as a parameter. We call this a &lt;strong&gt;strict locator&lt;/strong&gt;. Available strict locator types are:</source>
          <target state="translated">Codeception은 텍스트, 이름, CSS 또는 XPath로 요소를 찾습니다. 배열을 매개 변수로 전달하여 로케이터 유형을 수동으로 지정할 수 있습니다. 우리는 이것을 &lt;strong&gt;엄격한 로케이터&lt;/strong&gt; 라고 부릅니다 . 사용 가능한 엄격한 로케이터 유형은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="5eb6aba0ff33981a33bbafe1e9fec52ffa646023" translate="yes" xml:space="preserve">
          <source>Codeception uses PHPUnit as a backend for running its tests. Thus, any PHPUnit test can be added to a Codeception test suite and then executed. If you ever wrote a PHPUnit test then do it just as you did before. Codeception adds some nice helpers to simplify common tasks.</source>
          <target state="translated">Codeception은 PHPUnit을 테스트 실행을위한 백엔드로 사용합니다. 따라서 모든 PHPUnit 테스트를 Codeception 테스트 스위트에 추가 한 다음 실행할 수 있습니다. PHPUnit 테스트를 작성했다면 이전과 동일하게 수행하십시오. Codeception은 일반적인 작업을 단순화하는 훌륭한 도우미를 추가합니다.</target>
        </trans-unit>
        <trans-unit id="5d07f4847800c8dfa014150b92257d4e7601e2de" translate="yes" xml:space="preserve">
          <source>Codeception uses modularity to create a comfortable testing environment for every test suite you write.</source>
          <target state="translated">Codeception은 모듈성을 사용하여 작성하는 모든 테스트 스위트에 편안한 테스트 환경을 만듭니다.</target>
        </trans-unit>
        <trans-unit id="dd1771709baef9708851cf6cee2b36cc51b22067" translate="yes" xml:space="preserve">
          <source>Codeception uses modularity to create a comfortable testing environment for every test suite you write. Modules allow you to choose the actions and assertions that can be performed in tests.</source>
          <target state="translated">Codeception은 모듈성을 사용하여 작성하는 모든 테스트 스위트에 편안한 테스트 환경을 만듭니다. 모듈을 사용하면 테스트에서 수행 할 수있는 동작 및 어설 션을 선택할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="51e0783d23a7b383290d81f44dfdc51387173b0e" translate="yes" xml:space="preserve">
          <source>Codeception uses this simple and lightweight definitions format which can be &lt;a href=&quot;modules/rest#seeResponseMatchesJsonType&quot;&gt;easily learned and extended&lt;/a&gt;.</source>
          <target state="translated">Codeception은 &lt;a href=&quot;modules/rest#seeResponseMatchesJsonType&quot;&gt;쉽게 배우고 확장&lt;/a&gt; 할 수있는이 단순하고 간단한 정의 형식을 사용합니다 .</target>
        </trans-unit>
        <trans-unit id="1a870b0394a05a3d098b689294d62eded5e46fbc" translate="yes" xml:space="preserve">
          <source>Codeception\InitTemplate</source>
          <target state="translated">Codeception\InitTemplate</target>
        </trans-unit>
        <trans-unit id="768270b1cbd6bd61764166b19d047e303ac031b8" translate="yes" xml:space="preserve">
          <source>Codeception\Module</source>
          <target state="translated">Codeception\Module</target>
        </trans-unit>
        <trans-unit id="41d6495c385f35cd699099e2797f3901c70130c3" translate="yes" xml:space="preserve">
          <source>Codeception\Module::$aliases</source>
          <target state="translated">Codeception\Module::$aliases</target>
        </trans-unit>
        <trans-unit id="069b6aa8e282d4c33799db567a6743b0c4a1f7d4" translate="yes" xml:space="preserve">
          <source>Codeception\Module::$excludeActions</source>
          <target state="translated">Codeception\Module::$excludeActions</target>
        </trans-unit>
        <trans-unit id="ce646b2b7f4633506b163bc58e1cbe5a84595621" translate="yes" xml:space="preserve">
          <source>Codeception\Module::$includeInheritedActions</source>
          <target state="translated">Codeception\Module::$includeInheritedActions</target>
        </trans-unit>
        <trans-unit id="be1276c57462add458477af807224fcb4ee75ab4" translate="yes" xml:space="preserve">
          <source>Codeception\Module::$onlyActions</source>
          <target state="translated">Codeception\Module::$onlyActions</target>
        </trans-unit>
        <trans-unit id="84901d3c66da8b710f62c3de8fb8034a20f56683" translate="yes" xml:space="preserve">
          <source>Codeception\Module::__construct()</source>
          <target state="translated">Codeception\Module::__construct()</target>
        </trans-unit>
        <trans-unit id="1bef01cfb193db9d02cbf8bc387881586120c998" translate="yes" xml:space="preserve">
          <source>Codeception\Module::_after()</source>
          <target state="translated">Codeception\Module::_after()</target>
        </trans-unit>
        <trans-unit id="2b1219a34eec45074a3f05e8804a9565927ecc70" translate="yes" xml:space="preserve">
          <source>Codeception\Module::_afterStep()</source>
          <target state="translated">Codeception\Module::_afterStep()</target>
        </trans-unit>
        <trans-unit id="a0152911573a6c2bca68083cf219c58e2ac848f6" translate="yes" xml:space="preserve">
          <source>Codeception\Module::_afterSuite()</source>
          <target state="translated">Codeception\Module::_afterSuite()</target>
        </trans-unit>
        <trans-unit id="86052e39caa5ba5da912dea258d66c7654a30ecc" translate="yes" xml:space="preserve">
          <source>Codeception\Module::_before()</source>
          <target state="translated">Codeception\Module::_before()</target>
        </trans-unit>
        <trans-unit id="9f3830092e477023c63c7f47b83d268780f29e33" translate="yes" xml:space="preserve">
          <source>Codeception\Module::_beforeStep()</source>
          <target state="translated">Codeception\Module::_beforeStep()</target>
        </trans-unit>
        <trans-unit id="adce6ac1d0d644108e7a6053a0a6005d85cd81b3" translate="yes" xml:space="preserve">
          <source>Codeception\Module::_beforeSuite()</source>
          <target state="translated">Codeception\Module::_beforeSuite()</target>
        </trans-unit>
        <trans-unit id="5856634086bafd048518cf754a9986836ae945d8" translate="yes" xml:space="preserve">
          <source>Codeception\Module::_failed()</source>
          <target state="translated">Codeception\Module::_failed()</target>
        </trans-unit>
        <trans-unit id="59540d69339889d9fc2a7512f65c519c4d7a6f1f" translate="yes" xml:space="preserve">
          <source>Codeception\Module::_getConfig()</source>
          <target state="translated">Codeception\Module::_getConfig()</target>
        </trans-unit>
        <trans-unit id="d665455d6f2257f839dde202ba342d4aaff7ca77" translate="yes" xml:space="preserve">
          <source>Codeception\Module::_getName()</source>
          <target state="translated">Codeception\Module::_getName()</target>
        </trans-unit>
        <trans-unit id="77473cee8a635d17a233cd6ef3e2ddfd5b4fece1" translate="yes" xml:space="preserve">
          <source>Codeception\Module::_hasRequiredFields()</source>
          <target state="translated">Codeception\Module::_hasRequiredFields()</target>
        </trans-unit>
        <trans-unit id="84b6f2f9f537822e209867fac30d6086e9e26ff6" translate="yes" xml:space="preserve">
          <source>Codeception\Module::_initialize()</source>
          <target state="translated">Codeception\Module::_initialize()</target>
        </trans-unit>
        <trans-unit id="e58a01d0dcda08e4226510b1b7abfd22cbb507ab" translate="yes" xml:space="preserve">
          <source>Codeception\Module::_reconfigure()</source>
          <target state="translated">Codeception\Module::_reconfigure()</target>
        </trans-unit>
        <trans-unit id="3bd6edb6cc453244ed83d38c3a19cac72537ab74" translate="yes" xml:space="preserve">
          <source>Codeception\Module::_resetConfig()</source>
          <target state="translated">Codeception\Module::_resetConfig()</target>
        </trans-unit>
        <trans-unit id="45da14dd0fa06f31e13cb04f3286d52e223c199e" translate="yes" xml:space="preserve">
          <source>Codeception\Module::_setConfig()</source>
          <target state="translated">Codeception\Module::_setConfig()</target>
        </trans-unit>
        <trans-unit id="2b3c0fd2b6ce75284d8e9319d92d60722779db3d" translate="yes" xml:space="preserve">
          <source>Codeception\Module::assert()</source>
          <target state="translated">Codeception\Module::assert()</target>
        </trans-unit>
        <trans-unit id="779ebdb11bb41a4a0c260c440bb9faab7aa343b5" translate="yes" xml:space="preserve">
          <source>Codeception\Module::assertArrayHasKey()</source>
          <target state="translated">Codeception\Module::assertArrayHasKey()</target>
        </trans-unit>
        <trans-unit id="6dcb555053b4fccb6e8be9dcdd32424b25df4e7b" translate="yes" xml:space="preserve">
          <source>Codeception\Module::assertArrayNotHasKey()</source>
          <target state="translated">Codeception\Module::assertArrayNotHasKey()</target>
        </trans-unit>
        <trans-unit id="eb27bcc4fd351c2ea0622f9eaf9fd506ca996785" translate="yes" xml:space="preserve">
          <source>Codeception\Module::assertArraySubset()</source>
          <target state="translated">Codeception\Module::assertArraySubset()</target>
        </trans-unit>
        <trans-unit id="a743b57630bcf97d1fd796aad5a3b1f5dc89a15a" translate="yes" xml:space="preserve">
          <source>Codeception\Module::assertContains()</source>
          <target state="translated">Codeception\Module::assertContains()</target>
        </trans-unit>
        <trans-unit id="12153a89fca80e25f19c1818023d82f451bd458c" translate="yes" xml:space="preserve">
          <source>Codeception\Module::assertCount()</source>
          <target state="translated">Codeception\Module::assertCount()</target>
        </trans-unit>
        <trans-unit id="0af8a24ccc6183e5a1240498d26c541b6bda2185" translate="yes" xml:space="preserve">
          <source>Codeception\Module::assertEmpty()</source>
          <target state="translated">Codeception\Module::assertEmpty()</target>
        </trans-unit>
        <trans-unit id="fd9bdc3836ca28a2e2ace8937683eb8fbe7c3bb5" translate="yes" xml:space="preserve">
          <source>Codeception\Module::assertEquals()</source>
          <target state="translated">Codeception\Module::assertEquals()</target>
        </trans-unit>
        <trans-unit id="4856826cb1cc98fbdf7a9648d60eba3a198916f3" translate="yes" xml:space="preserve">
          <source>Codeception\Module::assertFalse()</source>
          <target state="translated">Codeception\Module::assertFalse()</target>
        </trans-unit>
        <trans-unit id="d8e6979bee21d41f2d24ec1ba6a7ffaab1f24bd7" translate="yes" xml:space="preserve">
          <source>Codeception\Module::assertFileExists()</source>
          <target state="translated">Codeception\Module::assertFileExists()</target>
        </trans-unit>
        <trans-unit id="3b51d616d4e71e153cfb095ae977dc68d7d0d9f9" translate="yes" xml:space="preserve">
          <source>Codeception\Module::assertFileNotExists()</source>
          <target state="translated">Codeception\Module::assertFileNotExists()</target>
        </trans-unit>
        <trans-unit id="de15c6f3101dde909d04b283726edfef1eacd7d2" translate="yes" xml:space="preserve">
          <source>Codeception\Module::assertGreaterOrEquals()</source>
          <target state="translated">Codeception\Module::assertGreaterOrEquals()</target>
        </trans-unit>
        <trans-unit id="b7180c1df1bab514218f480a91e95a644be3f90f" translate="yes" xml:space="preserve">
          <source>Codeception\Module::assertGreaterThan()</source>
          <target state="translated">Codeception\Module::assertGreaterThan()</target>
        </trans-unit>
        <trans-unit id="af27655cc09b0c9e950259c932866c7111506841" translate="yes" xml:space="preserve">
          <source>Codeception\Module::assertGreaterThanOrEqual()</source>
          <target state="translated">Codeception\Module::assertGreaterThanOrEqual()</target>
        </trans-unit>
        <trans-unit id="55953ff2bc2a877c54b9463c48445ec16b20985d" translate="yes" xml:space="preserve">
          <source>Codeception\Module::assertInstanceOf()</source>
          <target state="translated">Codeception\Module::assertInstanceOf()</target>
        </trans-unit>
        <trans-unit id="429359ff66b308fb606f82224a67137f8353951a" translate="yes" xml:space="preserve">
          <source>Codeception\Module::assertInternalType()</source>
          <target state="translated">Codeception\Module::assertInternalType()</target>
        </trans-unit>
        <trans-unit id="05326b3c5ace7f99a2fe9b91596c089748a075aa" translate="yes" xml:space="preserve">
          <source>Codeception\Module::assertIsArray()</source>
          <target state="translated">Codeception\Module::assertIsArray()</target>
        </trans-unit>
        <trans-unit id="030edb140b905a2dfb7bcf029dd40da0b30dac92" translate="yes" xml:space="preserve">
          <source>Codeception\Module::assertIsBool()</source>
          <target state="translated">Codeception\Module::assertIsBool()</target>
        </trans-unit>
        <trans-unit id="4a48474aee4eff0e22ec4ef2225a32608664a25e" translate="yes" xml:space="preserve">
          <source>Codeception\Module::assertIsCallable()</source>
          <target state="translated">Codeception\Module::assertIsCallable()</target>
        </trans-unit>
        <trans-unit id="1e2061c10bad632ecf23d7c007593bc135e4a39c" translate="yes" xml:space="preserve">
          <source>Codeception\Module::assertIsEmpty()</source>
          <target state="translated">Codeception\Module::assertIsEmpty()</target>
        </trans-unit>
        <trans-unit id="721291d9aae103b7872842f29df4eb21e2d67e6f" translate="yes" xml:space="preserve">
          <source>Codeception\Module::assertIsFloat()</source>
          <target state="translated">Codeception\Module::assertIsFloat()</target>
        </trans-unit>
        <trans-unit id="f16247c0fc98021db9b1752baaf06b85d8ee3cd3" translate="yes" xml:space="preserve">
          <source>Codeception\Module::assertIsInt()</source>
          <target state="translated">Codeception\Module::assertIsInt()</target>
        </trans-unit>
        <trans-unit id="ee2529752810425ed1c03cdd5f80f1d9dfd18200" translate="yes" xml:space="preserve">
          <source>Codeception\Module::assertIsNotArray()</source>
          <target state="translated">Codeception\Module::assertIsNotArray()</target>
        </trans-unit>
        <trans-unit id="68285fff9be998e4faa23d1a27abf7299dceef3a" translate="yes" xml:space="preserve">
          <source>Codeception\Module::assertIsNotBool()</source>
          <target state="translated">Codeception\Module::assertIsNotBool()</target>
        </trans-unit>
        <trans-unit id="c0a6c7c99cc1f5d0ae560326cb4cac1d34aa6c38" translate="yes" xml:space="preserve">
          <source>Codeception\Module::assertIsNotCallable()</source>
          <target state="translated">Codeception\Module::assertIsNotCallable()</target>
        </trans-unit>
        <trans-unit id="d6576091d67a0615d10a799688938ef126b68feb" translate="yes" xml:space="preserve">
          <source>Codeception\Module::assertIsNotFloat()</source>
          <target state="translated">Codeception\Module::assertIsNotFloat()</target>
        </trans-unit>
        <trans-unit id="e305fa3156896f36ea65ded53c0749285977332a" translate="yes" xml:space="preserve">
          <source>Codeception\Module::assertIsNotInt()</source>
          <target state="translated">Codeception\Module::assertIsNotInt()</target>
        </trans-unit>
        <trans-unit id="5190cd9f8d2ee36e4c465767bf2da8184bbb3ba6" translate="yes" xml:space="preserve">
          <source>Codeception\Module::assertIsNotNumeric()</source>
          <target state="translated">Codeception\Module::assertIsNotNumeric()</target>
        </trans-unit>
        <trans-unit id="7c3251acdec41ac5912392ffaaad292ba17d37b5" translate="yes" xml:space="preserve">
          <source>Codeception\Module::assertIsNotObject()</source>
          <target state="translated">Codeception\Module::assertIsNotObject()</target>
        </trans-unit>
        <trans-unit id="9a24c973358af21cad1db728e837a43312c2602c" translate="yes" xml:space="preserve">
          <source>Codeception\Module::assertIsNotResource()</source>
          <target state="translated">Codeception\Module::assertIsNotResource()</target>
        </trans-unit>
        <trans-unit id="17436978ad3c3e99092c36aa4c2b76543d7264e1" translate="yes" xml:space="preserve">
          <source>Codeception\Module::assertIsNotScalar()</source>
          <target state="translated">Codeception\Module::assertIsNotScalar()</target>
        </trans-unit>
        <trans-unit id="4aeada660391aca6b3c72429a923cd195d227773" translate="yes" xml:space="preserve">
          <source>Codeception\Module::assertIsNotString()</source>
          <target state="translated">Codeception\Module::assertIsNotString()</target>
        </trans-unit>
        <trans-unit id="a545670c39157e6d030b34f531cec4f373f58af5" translate="yes" xml:space="preserve">
          <source>Codeception\Module::assertIsNumeric()</source>
          <target state="translated">Codeception\Module::assertIsNumeric()</target>
        </trans-unit>
        <trans-unit id="c85683af8cafacbb326ab4d4a9113d108a66e940" translate="yes" xml:space="preserve">
          <source>Codeception\Module::assertIsObject()</source>
          <target state="translated">Codeception\Module::assertIsObject()</target>
        </trans-unit>
        <trans-unit id="a10f099b0e811661187fed2baf0150b89d1e751c" translate="yes" xml:space="preserve">
          <source>Codeception\Module::assertIsResource()</source>
          <target state="translated">Codeception\Module::assertIsResource()</target>
        </trans-unit>
        <trans-unit id="a1c9d262bf1705fc55c9f7b662a59afd8bc1b5a5" translate="yes" xml:space="preserve">
          <source>Codeception\Module::assertIsScalar()</source>
          <target state="translated">Codeception\Module::assertIsScalar()</target>
        </trans-unit>
        <trans-unit id="38dc77b54b16ed0be61de80d4a108d018d4cde31" translate="yes" xml:space="preserve">
          <source>Codeception\Module::assertIsString()</source>
          <target state="translated">Codeception\Module::assertIsString()</target>
        </trans-unit>
        <trans-unit id="07a231e08ca310ec4473941b207858271ff4787e" translate="yes" xml:space="preserve">
          <source>Codeception\Module::assertLessOrEquals()</source>
          <target state="translated">Codeception\Module::assertLessOrEquals()</target>
        </trans-unit>
        <trans-unit id="3255fd31a8808f9e0755cec0ea19af1711e592c0" translate="yes" xml:space="preserve">
          <source>Codeception\Module::assertLessThan()</source>
          <target state="translated">Codeception\Module::assertLessThan()</target>
        </trans-unit>
        <trans-unit id="79fd8197592d1b3d4ff9a40a4b9f6e98cb74bb51" translate="yes" xml:space="preserve">
          <source>Codeception\Module::assertLessThanOrEqual()</source>
          <target state="translated">Codeception\Module::assertLessThanOrEqual()</target>
        </trans-unit>
        <trans-unit id="a465a4552bb803949aeafd2c607c7adbc2ec59d2" translate="yes" xml:space="preserve">
          <source>Codeception\Module::assertNot()</source>
          <target state="translated">Codeception\Module::assertNot()</target>
        </trans-unit>
        <trans-unit id="5e0d2162827ce1434a0dca05f7519beebdcb4617" translate="yes" xml:space="preserve">
          <source>Codeception\Module::assertNotContains()</source>
          <target state="translated">Codeception\Module::assertNotContains()</target>
        </trans-unit>
        <trans-unit id="4022e42dc5341fa770bc0713a3d36f60f21f196b" translate="yes" xml:space="preserve">
          <source>Codeception\Module::assertNotEmpty()</source>
          <target state="translated">Codeception\Module::assertNotEmpty()</target>
        </trans-unit>
        <trans-unit id="054e70a6046028d6b5d9992483af742b59f516a4" translate="yes" xml:space="preserve">
          <source>Codeception\Module::assertNotEquals()</source>
          <target state="translated">Codeception\Module::assertNotEquals()</target>
        </trans-unit>
        <trans-unit id="61750b7fa1bdfdf749a3adf4a1374a105f103d58" translate="yes" xml:space="preserve">
          <source>Codeception\Module::assertNotFalse()</source>
          <target state="translated">Codeception\Module::assertNotFalse()</target>
        </trans-unit>
        <trans-unit id="745da408c8c90d282874cbd0e97039cf7604b048" translate="yes" xml:space="preserve">
          <source>Codeception\Module::assertNotInstanceOf()</source>
          <target state="translated">Codeception\Module::assertNotInstanceOf()</target>
        </trans-unit>
        <trans-unit id="1f288fdf48dd506bf5a44b3ccaf1613a9db99909" translate="yes" xml:space="preserve">
          <source>Codeception\Module::assertNotNull()</source>
          <target state="translated">Codeception\Module::assertNotNull()</target>
        </trans-unit>
        <trans-unit id="686d371e8f3db9cdfca274637e5d4b755de19f9c" translate="yes" xml:space="preserve">
          <source>Codeception\Module::assertNotRegExp()</source>
          <target state="translated">Codeception\Module::assertNotRegExp()</target>
        </trans-unit>
        <trans-unit id="6d704ce2d49f451e19e9056341518f96bca24630" translate="yes" xml:space="preserve">
          <source>Codeception\Module::assertNotSame()</source>
          <target state="translated">Codeception\Module::assertNotSame()</target>
        </trans-unit>
        <trans-unit id="aaf11376a263e3c9afb586b05ca63e75e5626721" translate="yes" xml:space="preserve">
          <source>Codeception\Module::assertNotTrue()</source>
          <target state="translated">Codeception\Module::assertNotTrue()</target>
        </trans-unit>
        <trans-unit id="d070a6a6aef4a598e1ec47e999323f574926317e" translate="yes" xml:space="preserve">
          <source>Codeception\Module::assertNull()</source>
          <target state="translated">Codeception\Module::assertNull()</target>
        </trans-unit>
        <trans-unit id="de6927254e499414b14f59727d7a85e26b8b84cb" translate="yes" xml:space="preserve">
          <source>Codeception\Module::assertRegExp()</source>
          <target state="translated">Codeception\Module::assertRegExp()</target>
        </trans-unit>
        <trans-unit id="bf003df0ab4d606774fc6d472e10a78082e3f535" translate="yes" xml:space="preserve">
          <source>Codeception\Module::assertSame()</source>
          <target state="translated">Codeception\Module::assertSame()</target>
        </trans-unit>
        <trans-unit id="3bb88ecb76c547ffb255efab8eeb83ac1a7f4aa6" translate="yes" xml:space="preserve">
          <source>Codeception\Module::assertStringContainsString()</source>
          <target state="translated">Codeception\Module::assertStringContainsString()</target>
        </trans-unit>
        <trans-unit id="d990feaad2c131f87e27b198ea1d3f0460c4cc38" translate="yes" xml:space="preserve">
          <source>Codeception\Module::assertStringContainsStringIgnoringCase()</source>
          <target state="translated">Codeception\Module::assertStringContainsStringIgnoringCase()</target>
        </trans-unit>
        <trans-unit id="4ed26c0ac2d4405a89347935b5812f6048270345" translate="yes" xml:space="preserve">
          <source>Codeception\Module::assertStringNotContainsString()</source>
          <target state="translated">Codeception\Module::assertStringNotContainsString()</target>
        </trans-unit>
        <trans-unit id="8aa70400eed9c9b428b14e6ecacddf89d0e572d4" translate="yes" xml:space="preserve">
          <source>Codeception\Module::assertStringNotContainsStringIgnoringCase()</source>
          <target state="translated">Codeception\Module::assertStringNotContainsStringIgnoringCase()</target>
        </trans-unit>
        <trans-unit id="fe17ff2bafdace40584bf00d5d329519ccc8eb71" translate="yes" xml:space="preserve">
          <source>Codeception\Module::assertStringStartsNotWith()</source>
          <target state="translated">Codeception\Module::assertStringStartsNotWith()</target>
        </trans-unit>
        <trans-unit id="d8002649ac62ffcf3f8c7b84c3fd1c66cb5d5fea" translate="yes" xml:space="preserve">
          <source>Codeception\Module::assertStringStartsWith()</source>
          <target state="translated">Codeception\Module::assertStringStartsWith()</target>
        </trans-unit>
        <trans-unit id="1f7eac65dd94415c423393b4c23caafd30582d8e" translate="yes" xml:space="preserve">
          <source>Codeception\Module::assertThat()</source>
          <target state="translated">Codeception\Module::assertThat()</target>
        </trans-unit>
        <trans-unit id="569c48ee59f16da730ebc2c3b79ead3512e971d1" translate="yes" xml:space="preserve">
          <source>Codeception\Module::assertThatItsNot()</source>
          <target state="translated">Codeception\Module::assertThatItsNot()</target>
        </trans-unit>
        <trans-unit id="02499c9ae467b723103e481f36bbc665f7080fb3" translate="yes" xml:space="preserve">
          <source>Codeception\Module::assertTrue()</source>
          <target state="translated">Codeception\Module::assertTrue()</target>
        </trans-unit>
        <trans-unit id="bee1ad28211bc0a4ae0582d4ec385f7bc122b649" translate="yes" xml:space="preserve">
          <source>Codeception\Module::debug()</source>
          <target state="translated">Codeception\Module::debug()</target>
        </trans-unit>
        <trans-unit id="484ae6263fbe8bc45f2a8d303b8499edb946a415" translate="yes" xml:space="preserve">
          <source>Codeception\Module::debugSection()</source>
          <target state="translated">Codeception\Module::debugSection()</target>
        </trans-unit>
        <trans-unit id="f0253976472188d23146c8a4cef83eaa507d3800" translate="yes" xml:space="preserve">
          <source>Codeception\Module::fail()</source>
          <target state="translated">Codeception\Module::fail()</target>
        </trans-unit>
        <trans-unit id="7fa7eacc1e3d770df5866f865e1612671972b0d2" translate="yes" xml:space="preserve">
          <source>Codeception\Module::getModule()</source>
          <target state="translated">Codeception\Module::getModule()</target>
        </trans-unit>
        <trans-unit id="6310e82f8b521adaf503483a174f7336e4fb99e9" translate="yes" xml:space="preserve">
          <source>Codeception\Module::getModules()</source>
          <target state="translated">Codeception\Module::getModules()</target>
        </trans-unit>
        <trans-unit id="352e3cd2c342c2f169e3dda005cf95e5ae5b0dd2" translate="yes" xml:space="preserve">
          <source>Codeception\Module::hasModule()</source>
          <target state="translated">Codeception\Module::hasModule()</target>
        </trans-unit>
        <trans-unit id="99bf8f47c58274d1e10b12fc3d7766cb6eeae0b7" translate="yes" xml:space="preserve">
          <source>Codeception\Module::onReconfigure()</source>
          <target state="translated">Codeception\Module::onReconfigure()</target>
        </trans-unit>
        <trans-unit id="88dedbfe711036d4be849ce5414e7584da5f3493" translate="yes" xml:space="preserve">
          <source>Codeception\Module::scalarizeArray()</source>
          <target state="translated">Codeception\Module::scalarizeArray()</target>
        </trans-unit>
        <trans-unit id="edced15e66a23309090540a1183fd8829dc2f273" translate="yes" xml:space="preserve">
          <source>Codeception\Module::shortenMessage()</source>
          <target state="translated">Codeception\Module::shortenMessage()</target>
        </trans-unit>
        <trans-unit id="fe2f6748a6a6e5870ecbdba517972c76aead6c1a" translate="yes" xml:space="preserve">
          <source>Codeception\Module::validateConfig()</source>
          <target state="translated">Codeception\Module::validateConfig()</target>
        </trans-unit>
        <trans-unit id="a180faaa1fc9239d5598fb939628826c3e5645a2" translate="yes" xml:space="preserve">
          <source>Codeception\Stub</source>
          <target state="translated">Codeception\Stub</target>
        </trans-unit>
        <trans-unit id="47ded78e903e89b7848265063eddf29c7112478f" translate="yes" xml:space="preserve">
          <source>Codeception\Util\Autoload</source>
          <target state="translated">Codeception\Util\Autoload</target>
        </trans-unit>
        <trans-unit id="376900abb7d8334f2cf654c8a877cd7c2394e615" translate="yes" xml:space="preserve">
          <source>Codeception\Util\Fixtures</source>
          <target state="translated">Codeception\Util\Fixtures</target>
        </trans-unit>
        <trans-unit id="98b71b8c8f808132835b7efede7f18afe9360dee" translate="yes" xml:space="preserve">
          <source>Codeception\Util\HttpCode</source>
          <target state="translated">Codeception\Util\HttpCode</target>
        </trans-unit>
        <trans-unit id="9f22cb6df1110ee33075c89af7517e5975b901a8" translate="yes" xml:space="preserve">
          <source>Codeception\Util\JsonType</source>
          <target state="translated">Codeception\Util\JsonType</target>
        </trans-unit>
        <trans-unit id="a9d7ea8731854391ba82ec0abb15240e92f0c7d7" translate="yes" xml:space="preserve">
          <source>Codeception\Util\Locator</source>
          <target state="translated">Codeception\Util\Locator</target>
        </trans-unit>
        <trans-unit id="9e479253681d96e67195d2a2c9fe52ced553b411" translate="yes" xml:space="preserve">
          <source>Codeception\Util\XmlBuilder</source>
          <target state="translated">Codeception\Util\XmlBuilder</target>
        </trans-unit>
        <trans-unit id="429f36d10467b590d92dd9b03b357fb2d28adbb8" translate="yes" xml:space="preserve">
          <source>Codecoverage</source>
          <target state="translated">Codecoverage</target>
        </trans-unit>
        <trans-unit id="45e5f3f72e961cb70134ba35f7a27a9620e515f7" translate="yes" xml:space="preserve">
          <source>Commands</source>
          <target state="translated">Commands</target>
        </trans-unit>
        <trans-unit id="fce06e20e5f7f74aacccab40b59b75a56c8f7305" translate="yes" xml:space="preserve">
          <source>Comments</source>
          <target state="translated">Comments</target>
        </trans-unit>
        <trans-unit id="9f866f831c9c27821bcb42f1ff77b89f57d650af" translate="yes" xml:space="preserve">
          <source>Comments are permitted.</source>
          <target state="translated">의견이 허용됩니다.</target>
        </trans-unit>
        <trans-unit id="b95941540368fc3ddf9d04f04eae1eb9ef6dbb39" translate="yes" xml:space="preserve">
          <source>Common PhpBrowser drawbacks:</source>
          <target state="translated">일반적인 PhpBrowser 단점 :</target>
        </trans-unit>
        <trans-unit id="8df0c7e39b173ce69712a027986d8f623b181305" translate="yes" xml:space="preserve">
          <source>Comparison expressions can be used as well:</source>
          <target state="translated">비교 표현식도 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="76d7615a4a30dbeb28753a05c709d2ebafefe5ac" translate="yes" xml:space="preserve">
          <source>CompletionFallback</source>
          <target state="translated">CompletionFallback</target>
        </trans-unit>
        <trans-unit id="e39262defe80a83fac1b793497417432c8b1a879" translate="yes" xml:space="preserve">
          <source>Conclusion</source>
          <target state="translated">Conclusion</target>
        </trans-unit>
        <trans-unit id="b536777ff175ae7f0dadd5ccfd9e78c00761a19e" translate="yes" xml:space="preserve">
          <source>Conclusions</source>
          <target state="translated">Conclusions</target>
        </trans-unit>
        <trans-unit id="68ca26f5f4c76142841b4eb8fb517b39b3228cb4" translate="yes" xml:space="preserve">
          <source>Conditional Assertions</source>
          <target state="translated">조건부 어설 션</target>
        </trans-unit>
        <trans-unit id="381bd65e19c4067d8e59ffc72af8c60974b3fe74" translate="yes" xml:space="preserve">
          <source>Conditional assertions are disabled in bootstrap setup. To enable them you should add corresponding step decorators to suite config:</source>
          <target state="translated">부트 스트랩 설정에서 조건부 어설 션이 비활성화됩니다. 이를 활성화하려면 스위트 구성에 해당 단계 데코레이터를 추가해야합니다.</target>
        </trans-unit>
        <trans-unit id="8851142da56fd885ce668a165b33fee7003e858d" translate="yes" xml:space="preserve">
          <source>Config</source>
          <target state="translated">Config</target>
        </trans-unit>
        <trans-unit id="36508979f55adcbbeccd8f3ca132d0c78c9a85d1" translate="yes" xml:space="preserve">
          <source>Config Templates (dist)</source>
          <target state="translated">구성 템플릿 (dist)</target>
        </trans-unit>
        <trans-unit id="68e3cdcfa3b7d6a502b583e0da2a319066eb7765" translate="yes" xml:space="preserve">
          <source>Config templates can also be used for suite configuration, by creating a &lt;code&gt;suitename.suite.dist.yml&lt;/code&gt; file.</source>
          <target state="translated">&lt;code&gt;suitename.suite.dist.yml&lt;/code&gt; 파일 을 작성하여 구성 템플리트를 스위트 구성에 사용할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="9956dbc5f0b9ff86c3a360f211b1be77b4dac6f2" translate="yes" xml:space="preserve">
          <source>ConfigValidate</source>
          <target state="translated">ConfigValidate</target>
        </trans-unit>
        <trans-unit id="754164850f38c1ecdaf6b8ed894cb192bc36c5f4" translate="yes" xml:space="preserve">
          <source>Configuration</source>
          <target state="translated">Configuration</target>
        </trans-unit>
        <trans-unit id="acdba8395423767de730ee1b75436df3a0ebc87e" translate="yes" xml:space="preserve">
          <source>Configuration file</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a7c7ce7dcfc2558a50b095cf34aef8a9832a06f" translate="yes" xml:space="preserve">
          <source>Configuration file &lt;code&gt;codeception.yml&lt;/code&gt; is generated by &lt;code&gt;codecept bootstrap&lt;/code&gt; command. It has preconfigured settings you can change.</source>
          <target state="translated">구성 파일 &lt;code&gt;codeception.yml&lt;/code&gt; 은 &lt;code&gt;codecept bootstrap&lt;/code&gt; 명령으로 생성됩니다 . 변경할 수있는 사전 구성 설정이 있습니다.</target>
        </trans-unit>
        <trans-unit id="fdefa1db91e27b4347ff0ce8c95b24f3dd5961a2" translate="yes" xml:space="preserve">
          <source>Configuration loading order:</source>
          <target state="translated">구성 로딩 순서 :</target>
        </trans-unit>
        <trans-unit id="0e629a52900878f13f6ef166a751073b4433d43e" translate="yes" xml:space="preserve">
          <source>Configure &lt;code&gt;os&lt;/code&gt; and &lt;code&gt;os_version&lt;/code&gt; under &lt;code&gt;capabilities&lt;/code&gt; to define the operating System</source>
          <target state="translated">구성 &lt;code&gt;os&lt;/code&gt; 및 &lt;code&gt;os_version&lt;/code&gt; 아래 &lt;code&gt;capabilities&lt;/code&gt; 운영 체제를 정의</target>
        </trans-unit>
        <trans-unit id="da93b50ebed31dd769ddb0bda26071aaab8a9ebf" translate="yes" xml:space="preserve">
          <source>Configure &lt;code&gt;platform&lt;/code&gt; under &lt;code&gt;capabilities&lt;/code&gt; to define the &lt;a href=&quot;https://docs.saucelabs.com/reference/platforms-configurator/#/&quot;&gt;Operating System&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://docs.saucelabs.com/reference/platforms-configurator/#/&quot;&gt;운영 체제&lt;/a&gt; 를 정의하는 &lt;code&gt;capabilities&lt;/code&gt; 아래 &lt;code&gt;platform&lt;/code&gt; 구성</target>
        </trans-unit>
        <trans-unit id="e6f6eb355b35b154967d526b12448e7e9477a1e7" translate="yes" xml:space="preserve">
          <source>Configure &lt;code&gt;platform&lt;/code&gt; under &lt;code&gt;capabilities&lt;/code&gt; to define the &lt;a href=&quot;https://testingbot.com/support/getting-started/browsers.html&quot;&gt;Operating System&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://testingbot.com/support/getting-started/browsers.html&quot;&gt;운영 체제&lt;/a&gt; 를 정의하는 &lt;code&gt;capabilities&lt;/code&gt; 아래 &lt;code&gt;platform&lt;/code&gt; 구성</target>
        </trans-unit>
        <trans-unit id="e72afaae3f936ee526b5fee9b80d10b30b6c96c8" translate="yes" xml:space="preserve">
          <source>Configure modules in &lt;code&gt;api.suite.yml&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;api.suite.yml&lt;/code&gt; 에서 모듈을 구성 하십시오 .</target>
        </trans-unit>
        <trans-unit id="ffd024645740bfce46ea0bc31b68fc5491bed0e5" translate="yes" xml:space="preserve">
          <source>Configure this module (in &lt;code&gt;acceptance.suite.yml&lt;/code&gt;) by setting &lt;code&gt;url&lt;/code&gt; and &lt;code&gt;browser&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;url&lt;/code&gt; 및 &lt;code&gt;browser&lt;/code&gt; 를 설정 하여이 모듈 ( &lt;code&gt;acceptance.suite.yml&lt;/code&gt; )을 구성하십시오 .</target>
        </trans-unit>
        <trans-unit id="54c2dc9fab2d4b66aa6f460c95b948689939b4ba" translate="yes" xml:space="preserve">
          <source>Configure this module (in &lt;code&gt;acceptance.suite.yml&lt;/code&gt;) by setting url and &lt;code&gt;phantomjs&lt;/code&gt; as browser:</source>
          <target state="translated">url 및 &lt;code&gt;phantomjs&lt;/code&gt; 를 브라우저로 설정 하여이 모듈 ( &lt;code&gt;acceptance.suite.yml&lt;/code&gt; 에서 )을 구성하십시오 .</target>
        </trans-unit>
        <trans-unit id="121104ee318908d34df6de4ed0e2a4f3f5c18325" translate="yes" xml:space="preserve">
          <source>Configure this module to load factory definitions from a directory. You should also specify a module with an ORM as a dependency.</source>
          <target state="translated">디렉토리에서 팩토리 정의를로드하도록이 모듈을 구성하십시오. ORM이있는 모듈을 종속성으로 지정해야합니다.</target>
        </trans-unit>
        <trans-unit id="c432ffef16dea7936641aa6fb3b0d593399d5a5a" translate="yes" xml:space="preserve">
          <source>Configure this module to use ChromeDriver port:</source>
          <target state="translated">ChromeDriver 포트를 사용하도록이 모듈을 구성하십시오.</target>
        </trans-unit>
        <trans-unit id="ea545314fb43c1b8119da42d0d310c4444fd19e9" translate="yes" xml:space="preserve">
          <source>Configuring Extension</source>
          <target state="translated">확장 구성</target>
        </trans-unit>
        <trans-unit id="1e6b4f9a091ea30a5e57a2cda4b28e51833ccd62" translate="yes" xml:space="preserve">
          <source>Conflicts</source>
          <target state="translated">Conflicts</target>
        </trans-unit>
        <trans-unit id="a18035c390f36d3976fb187f95049d137ba3dbf0" translate="yes" xml:space="preserve">
          <source>Conflicts with SOAP module</source>
          <target state="translated">SOAP 모듈과의 충돌</target>
        </trans-unit>
        <trans-unit id="1476c64d7d8e8b4d08d4512678bcb8db10290a01" translate="yes" xml:space="preserve">
          <source>Connection is done by MongoDb driver, which is stored in Codeception\Lib\Driver namespace. Check out the driver if you get problems loading dumps and cleaning databases.</source>
          <target state="translated">연결은 MongoDb 드라이버에 의해 수행되며, 이는 Codeception \ Lib \ Driver 네임 스페이스에 저장됩니다. 덤프로드 및 데이터베이스 정리에 문제가 있으면 드라이버를 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="51ed708cfed4cd3e50c70ee38ebe02fa7c5f5779" translate="yes" xml:space="preserve">
          <source>Connection is done by database Drivers, which are stored in the &lt;code&gt;Codeception\Lib\Driver&lt;/code&gt; namespace. &lt;a href=&quot;https://github.com/Codeception/Codeception/tree/2.4/src/Codeception/Lib/Driver&quot;&gt;Check out the drivers&lt;/a&gt; if you run into problems loading dumps and cleaning databases.</source>
          <target state="translated">연결은 &lt;code&gt;Codeception\Lib\Driver&lt;/code&gt; 네임 스페이스에 저장된 데이터베이스 드라이버에 의해 수행됩니다 . 덤프로드 및 데이터베이스 정리 문제가 발생하면 &lt;a href=&quot;https://github.com/Codeception/Codeception/tree/2.4/src/Codeception/Lib/Driver&quot;&gt;드라이버를 확인하십시오&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f9f79f330297317a1a8a46b87ab999155bc28911" translate="yes" xml:space="preserve">
          <source>Connection uses php build in FTP client for FTP, connection to SFTP uses &lt;a href=&quot;http://phpseclib.sourceforge.net/&quot;&gt;phpseclib&lt;/a&gt; pulled in using composer.</source>
          <target state="translated">연결은 FTP를 위해 FTP 클라이언트에서 PHP 빌드를 사용하고 SFTP에 연결은 &lt;a href=&quot;http://phpseclib.sourceforge.net/&quot;&gt;composer&lt;/a&gt; 를 사용하여 가져온 phpseclib 를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="ea15a1ea020177f42666f0d8f7f761a20c2a260a" translate="yes" xml:space="preserve">
          <source>Connects to &lt;a href=&quot;https://www.memcached.org/&quot;&gt;memcached&lt;/a&gt; using either &lt;em&gt;Memcache&lt;/em&gt; or &lt;em&gt;Memcached&lt;/em&gt; extension.</source>
          <target state="translated">&lt;em&gt;Memcache&lt;/em&gt; 또는 &lt;em&gt;Memcached&lt;/em&gt; 확장을 사용하여 &lt;a href=&quot;https://www.memcached.org/&quot;&gt;memcached에&lt;/a&gt; 연결합니다 .&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="9f3341d3710b74c1bace9f7d9d287f157faea4f4" translate="yes" xml:space="preserve">
          <source>Console</source>
          <target state="translated">Console</target>
        </trans-unit>
        <trans-unit id="c2e23d2b8df6b45e92e40d925129e7de77f8c5fe" translate="yes" xml:space="preserve">
          <source>Console Commands</source>
          <target state="translated">콘솔 명령</target>
        </trans-unit>
        <trans-unit id="d35d6d879a1d77d472482b9c549acf096d9c9629" translate="yes" xml:space="preserve">
          <source>Contact: codecept@davert.mail.ua</source>
          <target state="translated">연락처 : codecept@davert.mail.ua</target>
        </trans-unit>
        <trans-unit id="c6ddaa7ff4f557a57861cc7034396eb3a5f2b4be" translate="yes" xml:space="preserve">
          <source>Contact: codeception@codeception.com</source>
          <target state="translated">연락처 : codeception@codeception.com</target>
        </trans-unit>
        <trans-unit id="f5522f7334a6273d42667d08123cc36481fd1df9" translate="yes" xml:space="preserve">
          <source>Contact: davert@codeception.com</source>
          <target state="translated">연락처 : davert@codeception.com</target>
        </trans-unit>
        <trans-unit id="b6ae81628398a1894646f9a4381d32a8984b5290" translate="yes" xml:space="preserve">
          <source>Contact: janhenkgerritsen@gmail.com</source>
          <target state="translated">문의 : janhenkgerritsen@gmail.com</target>
        </trans-unit>
        <trans-unit id="a7843b3a55673ded12e71bcc2a0dc2b701d31e75" translate="yes" xml:space="preserve">
          <source>Contact: serghei@phalconphp.com</source>
          <target state="translated">연락처 : serghei@phalconphp.com</target>
        </trans-unit>
        <trans-unit id="0c56cbd28b0d4d554e7c89a63845fbdfb078b516" translate="yes" xml:space="preserve">
          <source>Context stream options are &lt;a href=&quot;https://php.net/manual/en/context.php&quot;&gt;well documented at php.net&lt;/a&gt;</source>
          <target state="translated">컨텍스트 스트림 옵션은 &lt;a href=&quot;https://php.net/manual/en/context.php&quot;&gt;php.net에 잘 정리되어 있습니다.&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1939fa910166207914f5b12ec7a1860d9ab4ebf4" translate="yes" xml:space="preserve">
          <source>Contexts can be attached to tags as well. This may be useful if you want to redefine steps for some scenarios. Let&amp;rsquo;s say we want to bypass login steps for some scenarios loading already defined session. In this case we can create &lt;code&gt;Step\FastLogin&lt;/code&gt; class with redefined step &amp;ldquo;I am logged in as&amp;rdquo;.</source>
          <target state="translated">컨텍스트도 태그에 첨부 할 수 있습니다. 일부 시나리오의 단계를 재정의하려는 경우 유용 할 수 있습니다. 이미 정의 된 세션을로드하는 일부 시나리오의 경우 로그인 단계를 무시하고 싶다고 가정 해 봅시다. 이 경우 , 다시 정의 된 단계 &quot;I로 로그인&quot;으로 &lt;code&gt;Step\FastLogin&lt;/code&gt; 클래스를 만들 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="f86be04d8b019db1ba0dedfab735308133d872b2" translate="yes" xml:space="preserve">
          <source>Contexts can be autoloaded as well:</source>
          <target state="translated">컨텍스트도 자동로드 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7a302c3f9cf2b3cec42c41ee9b6ddfb04d9516a9" translate="yes" xml:space="preserve">
          <source>Continuous Integration</source>
          <target state="translated">지속적인 통합</target>
        </trans-unit>
        <trans-unit id="f4c6edf32eb6245e35e2bd1cca98b2362da4577f" translate="yes" xml:space="preserve">
          <source>Cookies, URLs, Title, etc</source>
          <target state="translated">쿠키, URL, 제목 등</target>
        </trans-unit>
        <trans-unit id="31dc3ef31b22a681c3c9bc9f948e7dd088e133e3" translate="yes" xml:space="preserve">
          <source>Copies directory with all contents</source>
          <target state="translated">모든 내용으로 디렉토리를 복사</target>
        </trans-unit>
        <trans-unit id="9a7b1d0aa25e66e12c9280d003d0da13abacae31" translate="yes" xml:space="preserve">
          <source>Corresponding features and tests can be attached to the same group. And what is more interesting, you can make tests to depend on feature scenarios. Let&amp;rsquo;s say we have &lt;code&gt;login.feature&lt;/code&gt; file with &amp;ldquo;Log regular user&amp;rdquo; scenario in it. In this case you can specify that every test which requires login to pass to depend on &amp;ldquo;Log regular user&amp;rdquo; scenario:</source>
          <target state="translated">해당 기능 및 테스트를 동일한 그룹에 첨부 할 수 있습니다. 더 흥미로운 점은 기능 시나리오에 따라 테스트를 수행 할 수 있다는 것입니다. &amp;ldquo;일반 사용자 로그&amp;rdquo;시나리오 가있는 &lt;code&gt;login.feature&lt;/code&gt; 파일 이 있다고 가정 해 봅시다 . 이 경우 로그인이 필요한 모든 테스트가 &quot;로그 일반 사용자&quot;시나리오에 의존하도록 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="cc4044f52492da2f2149160c71e621eba5d7ed71" translate="yes" xml:space="preserve">
          <source>Corresponding framework modules provide similar methods for ORM access:</source>
          <target state="translated">해당 프레임 워크 모듈은 ORM 액세스에 유사한 방법을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="43485f5fd30b21c1b4f6f4254c942589bef12896" translate="yes" xml:space="preserve">
          <source>Count number of records in a collection</source>
          <target state="translated">컬렉션의 레코드 수</target>
        </trans-unit>
        <trans-unit id="372ee1966f374160eb5164ee7cbbeb1f9f73dafd" translate="yes" xml:space="preserve">
          <source>Coverage data can be collected manually for both local and remote tests. Remote tests may be executed on different nodes, or locally but running through web server. It may look hard to collect code coverage for Selenium tests or PhpBrowser tests. But Codeception supports remote codecoverage as well as local.</source>
          <target state="translated">적용 범위 데이터는 로컬 및 원격 테스트 모두에 대해 수동으로 수집 할 수 있습니다. 원격 테스트는 다른 노드에서 또는 로컬에서 웹 서버를 통해 실행될 수 있습니다. Selenium 테스트 또는 PhpBrowser 테스트에 대한 코드 적용 범위를 수집하기 어려울 수 있습니다. 그러나 Codeception은 로컬뿐만 아니라 원격 코드 커버리지도 지원합니다.</target>
        </trans-unit>
        <trans-unit id="f5939e0f98bb1cff612ab452051fef20ed96c846" translate="yes" xml:space="preserve">
          <source>Create a directory on the server</source>
          <target state="translated">서버에서 디렉토리를 만듭니다</target>
        </trans-unit>
        <trans-unit id="7e40fbdf6867c2933ccd6207e3312cdc2dbd482d" translate="yes" xml:space="preserve">
          <source>Create a helper class inside a directory</source>
          <target state="translated">디렉토리 안에 헬퍼 클래스 만들기</target>
        </trans-unit>
        <trans-unit id="4e0ca7d62b2544325488dc631fc6e02ea4ed1038" translate="yes" xml:space="preserve">
          <source>Create a snapshot class:</source>
          <target state="translated">스냅 샷 클래스를 작성하십시오.</target>
        </trans-unit>
        <trans-unit id="c4086c145dd87730fa8dd8432e2e956e0f75064f" translate="yes" xml:space="preserve">
          <source>Create a test using &lt;code&gt;generate:test&lt;/code&gt; command with a suite and test names as parameters:</source>
          <target state="translated">스위트 및 테스트 이름을 매개 변수로 하여 &lt;code&gt;generate:test&lt;/code&gt; 명령을 사용하여 테스트를 작성하십시오 .</target>
        </trans-unit>
        <trans-unit id="d370305d4aaef67f46a56c429295df690e971d34" translate="yes" xml:space="preserve">
          <source>Create an Actor class and generate actions for it. Requires a suite config as array in 3rd parameter.</source>
          <target state="translated">Actor 클래스를 생성하고 이에 대한 액션을 생성하십시오. 3 번째 매개 변수의 배열로 스위트 구성이 필요합니다.</target>
        </trans-unit>
        <trans-unit id="1eb25742c6a93846402c07762a065380282606a8" translate="yes" xml:space="preserve">
          <source>Create an account at &lt;a href=&quot;http://SauceLabs.com&quot;&gt;SauceLabs.com&lt;/a&gt; to get your username and access key</source>
          <target state="translated">&lt;a href=&quot;http://SauceLabs.com&quot;&gt;SauceLabs.com&lt;/a&gt; 에서 계정을 만들어 사용자 이름과 액세스 키를 얻으십시오</target>
        </trans-unit>
        <trans-unit id="108925ce162a735aba8f5792c0da2cf2a81d3de3" translate="yes" xml:space="preserve">
          <source>Create an account at &lt;a href=&quot;https://testingbot.com/&quot;&gt;TestingBot&lt;/a&gt; to get your key and secret</source>
          <target state="translated">&lt;a href=&quot;https://testingbot.com/&quot;&gt;TestingBot&lt;/a&gt; 에서 계정을 만들어 키와 비밀을 얻으십시오</target>
        </trans-unit>
        <trans-unit id="b98688d88502b538d6c6082302764400a3f687af" translate="yes" xml:space="preserve">
          <source>Create an account at &lt;a href=&quot;https://www.browserstack.com/&quot;&gt;BrowserStack&lt;/a&gt; to get your username and access key</source>
          <target state="translated">&lt;a href=&quot;https://www.browserstack.com/&quot;&gt;BrowserStack&lt;/a&gt; 에서 계정을 만들어 사용자 이름과 액세스 키를 얻습니다.</target>
        </trans-unit>
        <trans-unit id="b28f3a2fe450f9895d70c506e56344dbd3b5b59a" translate="yes" xml:space="preserve">
          <source>Create an empty directory and add a placeholder file into it</source>
          <target state="translated">빈 디렉토리를 작성하고 플레이스 홀더 파일을 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="fe535a10c481ad1eaa4b96df104f5a98994a6d65" translate="yes" xml:space="preserve">
          <source>Create new test suite. Requires suite name and actor name</source>
          <target state="translated">새로운 테스트 스위트를 작성하십시오. 스위트 이름과 배우 이름이 필요합니다</target>
        </trans-unit>
        <trans-unit id="4ae43eea251547226098a7ed326039e7ecf6fa6b" translate="yes" xml:space="preserve">
          <source>Created records will be deleted at the end of a test. The DataFactory module only works with ORM, so it requires one of the ORM modules to be enabled:</source>
          <target state="translated">생성 된 레코드는 테스트가 끝나면 삭제됩니다. DataFactory 모듈은 ORM에서만 작동하므로 ORM 모듈 중 하나를 활성화해야합니다.</target>
        </trans-unit>
        <trans-unit id="9277b8f2466dad0d7966030eb7e991a235ce1524" translate="yes" xml:space="preserve">
          <source>Creates $num instances of class through &lt;code&gt;Stub::make&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Stub::make&lt;/code&gt; 통해 클래스의 $ num 인스턴스를 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="f1f59a34611bff079aea9b4e195168d7e11c1545" translate="yes" xml:space="preserve">
          <source>Creates and loads fixtures from a config. Signature is the same as for &lt;code&gt;fixtures()&lt;/code&gt; method of &lt;code&gt;yii\test\FixtureTrait&lt;/code&gt;</source>
          <target state="translated">구성에서 조명기를 만들고로드합니다. 서명은 &lt;code&gt;yii\test\FixtureTrait&lt;/code&gt; 의 &lt;code&gt;fixtures()&lt;/code&gt; 메소드와 동일합니다.</target>
        </trans-unit>
        <trans-unit id="cf1f54fba93d285b9d129adff9b9313eeed016a4" translate="yes" xml:space="preserve">
          <source>Creates default config, tests directory and sample suites for current project. Use this command to start building a test suite.</source>
          <target state="translated">현재 프로젝트의 기본 구성, 테스트 디렉토리 및 샘플 스위트를 작성합니다. 테스트 스위트 빌드를 시작하려면이 명령을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="e686301b45474ddea1bddb9873efffe9e15d9084" translate="yes" xml:space="preserve">
          <source>Creates empty GroupObject - extension which handles all group events.</source>
          <target state="translated">모든 그룹 이벤트를 처리하는 빈 GroupObject-확장을 만듭니다.</target>
        </trans-unit>
        <trans-unit id="60a9228a611f3aa2d9e79ce18a17c6f35831f614" translate="yes" xml:space="preserve">
          <source>Creates empty Helper class.</source>
          <target state="translated">빈 도우미 클래스를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="7740922939d19e5c2992e2eaf7b56908d7d1e000" translate="yes" xml:space="preserve">
          <source>Creates instance of JsonType Pass an array or &lt;code&gt;\Codeception\Util\JsonArray&lt;/code&gt; with data. If non-associative array is passed - the very first element of it will be used for matching.</source>
          <target state="translated">JsonType의 인스턴스를 만듭니다 . 데이터와 함께 배열 또는 &lt;code&gt;\Codeception\Util\JsonArray&lt;/code&gt; 를 전달합니다. 비 연관 배열이 전달되면 첫 번째 요소가 일치하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="7ba5f08776429a7cd051b99acecefb1bb629fc21" translate="yes" xml:space="preserve">
          <source>Creates or modifies keys</source>
          <target state="translated">키 생성 또는 수정</target>
        </trans-unit>
        <trans-unit id="f27d572ee2a895b74b2e22c732ae0c6e8b3bd2dc" translate="yes" xml:space="preserve">
          <source>Creating a Test</source>
          <target state="translated">테스트 작성</target>
        </trans-unit>
        <trans-unit id="24bd32927ecfde8d98d351a91e328a9bfb8798c3" translate="yes" xml:space="preserve">
          <source>Cucumber, Behat, and sure, &lt;strong&gt;Codeception&lt;/strong&gt; can execute this scenario step by step as an automated test. Every step in this scenario requires a code which defines it.</source>
          <target state="translated">오이, Behat은 물론 &lt;strong&gt;Codeception&lt;/strong&gt; 은이 시나리오를 자동화 된 테스트로 단계별로 실행할 수 있습니다. 이 시나리오의 모든 단계에는이를 정의하는 코드가 필요합니다.</target>
        </trans-unit>
        <trans-unit id="a9f69b86dc6566c172b6e2789e0bc1ec3f042c01" translate="yes" xml:space="preserve">
          <source>Current values</source>
          <target state="translated">현재 가치</target>
        </trans-unit>
        <trans-unit id="15c858f27a0987cfaad2e3b9616553d99221ebe4" translate="yes" xml:space="preserve">
          <source>Currently not supported in this module, overwrite inherited method</source>
          <target state="translated">현재이 모듈에서 지원되지 않으며 상속 된 메소드를 덮어 씁니다.</target>
        </trans-unit>
        <trans-unit id="900954226b2b959fefe97b2ed97dd896295bfa81" translate="yes" xml:space="preserve">
          <source>Custom Browser Sessions</source>
          <target state="translated">맞춤 브라우저 세션</target>
        </trans-unit>
        <trans-unit id="c48e024e0cec2f563e6f2442f0eebafd432290c2" translate="yes" xml:space="preserve">
          <source>Custom Commands</source>
          <target state="translated">사용자 명령</target>
        </trans-unit>
        <trans-unit id="ad94b13496fdf0b96efabeb86e685fdd89eada01" translate="yes" xml:space="preserve">
          <source>Custom Reporters</source>
          <target state="translated">맞춤형 기자</target>
        </trans-unit>
        <trans-unit id="ed10003d13d26ae6ddd68ac75d42a71fcf19a709" translate="yes" xml:space="preserve">
          <source>Custom cookie domain</source>
          <target state="translated">맞춤 쿠키 도메인</target>
        </trans-unit>
        <trans-unit id="d7f0ac9e007291a6ccc21d036f4711505ad9d0b1" translate="yes" xml:space="preserve">
          <source>Customization</source>
          <target state="translated">Customization</target>
        </trans-unit>
        <trans-unit id="e5e429bcc9c2e4a41a3c7a4d96203be6cb273b11" translate="yes" xml:space="preserve">
          <source>Data</source>
          <target state="translated">Data</target>
        </trans-unit>
        <trans-unit id="1feebc1150e8ca05b258d1d4de476fed8c4ec6dd" translate="yes" xml:space="preserve">
          <source>DataFactory</source>
          <target state="translated">DataFactory</target>
        </trans-unit>
        <trans-unit id="910ec1d3efb9bd6a7f769743e94c4aeef8392b2d" translate="yes" xml:space="preserve">
          <source>DataFactory allows you to easily generate and create test data using &lt;a href=&quot;https://github.com/thephpleague/factory-muffin&quot;&gt;&lt;strong&gt;FactoryMuffin&lt;/strong&gt;&lt;/a&gt;. DataFactory uses an ORM of your application to define, save and cleanup data. Thus, should be used with ORM or Framework modules.</source>
          <target state="translated">DataFactory를 통해 &lt;a href=&quot;https://github.com/thephpleague/factory-muffin&quot;&gt;&lt;strong&gt;FactoryMuffin을&lt;/strong&gt;&lt;/a&gt; 사용하여 테스트 데이터를 쉽게 생성하고 작성할 수 있습니다 . DataFactory는 애플리케이션의 ORM을 사용하여 데이터를 정의, 저장 및 정리합니다. 따라서 ORM 또는 프레임 워크 모듈과 함께 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="78cfa9a44f01da47dd471fe2a8fa47ab2b5c130e" translate="yes" xml:space="preserve">
          <source>DataFactory provides a powerful solution for managing data in integration/functional/acceptance tests. Read the &lt;a href=&quot;modules/datafactory&quot;&gt;full reference&lt;/a&gt; to learn how to set this module up.</source>
          <target state="translated">DataFactory는 통합 / 기능 / 수락 테스트에서 데이터를 관리하기위한 강력한 솔루션을 제공합니다. 이 모듈을 설정하는 방법을 배우 려면 &lt;a href=&quot;modules/datafactory&quot;&gt;전체 참조&lt;/a&gt; 를 읽으십시오 .</target>
        </trans-unit>
        <trans-unit id="06c4778c5382cf479756d94ad11aa6458012cc3b" translate="yes" xml:space="preserve">
          <source>DataFactory::have</source>
          <target state="translated">DataFactory::have</target>
        </trans-unit>
        <trans-unit id="d432c4d8b03a381308c5d435d5ff74f6ebf43c1d" translate="yes" xml:space="preserve">
          <source>DataFactory::haveMultiple</source>
          <target state="translated">DataFactory::haveMultiple</target>
        </trans-unit>
        <trans-unit id="79ef39c26e79fd9a92f9cffb733d7e849d816b78" translate="yes" xml:space="preserve">
          <source>DataFactory::make</source>
          <target state="translated">DataFactory::make</target>
        </trans-unit>
        <trans-unit id="70ed1381970ff64a3be817cd74df1bf6cbb115db" translate="yes" xml:space="preserve">
          <source>DataFactory::onReconfigure</source>
          <target state="translated">DataFactory::onReconfigure</target>
        </trans-unit>
        <trans-unit id="8f4009ae1c2b2fd49f18e7ecf7914f98b4c8b11e" translate="yes" xml:space="preserve">
          <source>DataMapper</source>
          <target state="translated">DataMapper</target>
        </trans-unit>
        <trans-unit id="6bcebb87b7139cb807a479004a13b96707eaaf33" translate="yes" xml:space="preserve">
          <source>DataProvider Annotations</source>
          <target state="translated">데이터 제공자 주석</target>
        </trans-unit>
        <trans-unit id="e90a8b3ddb5243a1491d5c389f121393de322b7e" translate="yes" xml:space="preserve">
          <source>Db</source>
          <target state="translated">Db</target>
        </trans-unit>
        <trans-unit id="122b8ba74328389925709d1ce4b76d435eed7c8c" translate="yes" xml:space="preserve">
          <source>Db module by itself can load SQL dump without external tools by using current database connection. This approach is system-independent, however, it is slower than using a populator and may have parsing issues (see below).</source>
          <target state="translated">DB 모듈 자체는 현재 데이터베이스 연결을 사용하여 외부 도구없이 SQL 덤프를로드 할 수 있습니다. 이 방법은 시스템에 독립적이지만, populator를 사용하는 것보다 느리고 구문 분석 문제가있을 수 있습니다 (아래 참조).</target>
        </trans-unit>
        <trans-unit id="f9f85417821b13d04d01bf566b6ae5b3264feafe" translate="yes" xml:space="preserve">
          <source>Db module can cleanup database between tests by loading a database dump. This can be done by parsing SQL file and executing its commands using current connection</source>
          <target state="translated">DB 모듈은 데이터베이스 덤프를로드하여 테스트간에 데이터베이스를 정리할 수 있습니다. 이것은 SQL 파일을 구문 분석하고 현재 연결을 사용하여 명령을 실행하여 수행 할 수 있습니다</target>
        </trans-unit>
        <trans-unit id="0749b44de2821d5a23fc663286ca42d1e63325a1" translate="yes" xml:space="preserve">
          <source>Db::amConnectedToDatabase</source>
          <target state="translated">Db::amConnectedToDatabase</target>
        </trans-unit>
        <trans-unit id="d9ac91e7602d96ba2be7d3875b6811ea76392719" translate="yes" xml:space="preserve">
          <source>Db::dontSeeInDatabase</source>
          <target state="translated">Db::dontSeeInDatabase</target>
        </trans-unit>
        <trans-unit id="fafa5e1b682463ce8a765ae8324cab5961d21273" translate="yes" xml:space="preserve">
          <source>Db::grabColumnFromDatabase</source>
          <target state="translated">Db::grabColumnFromDatabase</target>
        </trans-unit>
        <trans-unit id="0dd9a1f983e09eecfe7ea5055fc82bc032910e9a" translate="yes" xml:space="preserve">
          <source>Db::grabFromDatabase</source>
          <target state="translated">Db::grabFromDatabase</target>
        </trans-unit>
        <trans-unit id="d9eb0398324fd1a10eb4b3429fc9863c5c402425" translate="yes" xml:space="preserve">
          <source>Db::grabNumRecords</source>
          <target state="translated">Db::grabNumRecords</target>
        </trans-unit>
        <trans-unit id="2f807505e608148980d641a3c9e804d5ebce92af" translate="yes" xml:space="preserve">
          <source>Db::haveInDatabase</source>
          <target state="translated">Db::haveInDatabase</target>
        </trans-unit>
        <trans-unit id="f54750dd68b872e9e7c6e2160667c8753d35fb1f" translate="yes" xml:space="preserve">
          <source>Db::performInDatabase</source>
          <target state="translated">Db::performInDatabase</target>
        </trans-unit>
        <trans-unit id="a3265561fe3b297b6bdbacf82247f35e36c85983" translate="yes" xml:space="preserve">
          <source>Db::seeInDatabase</source>
          <target state="translated">Db::seeInDatabase</target>
        </trans-unit>
        <trans-unit id="3303d415ae8aa24f43939dc835ee96449c9f3eef" translate="yes" xml:space="preserve">
          <source>Db::seeNumRecords</source>
          <target state="translated">Db::seeNumRecords</target>
        </trans-unit>
        <trans-unit id="d91013c071439f7c2887c20ea94dbe23b7fedb77" translate="yes" xml:space="preserve">
          <source>Db::updateInDatabase</source>
          <target state="translated">Db::updateInDatabase</target>
        </trans-unit>
        <trans-unit id="bd604d99e75e45d38bc7ac8fc714cde0097d901f" translate="yes" xml:space="preserve">
          <source>Debug</source>
          <target state="translated">Debug</target>
        </trans-unit>
        <trans-unit id="895b27c88016513d278a0ce3dc0663fae3829d58" translate="yes" xml:space="preserve">
          <source>Debugging</source>
          <target state="translated">Debugging</target>
        </trans-unit>
        <trans-unit id="d8590f048a466538ddb44f1c4b5e668cb6d0051e" translate="yes" xml:space="preserve">
          <source>Declare mocks inside &lt;code&gt;Codeception\Test\Unit&lt;/code&gt; class. If you want to use mocks outside it, check the reference for &lt;a href=&quot;https://github.com/Codeception/Stub&quot;&gt;Codeception/Stub&lt;/a&gt; library.</source>
          <target state="translated">&lt;code&gt;Codeception\Test\Unit&lt;/code&gt; 클래스 안에 모의를 선언하십시오 . 외부에서 모의 ​​객체를 사용하려면 &lt;a href=&quot;https://github.com/Codeception/Stub&quot;&gt;Codeception / Stub&lt;/a&gt; 라이브러리에 대한 참조를 확인하십시오 .</target>
        </trans-unit>
        <trans-unit id="b39383dccf6b371586bfe229ee193e465fe2ac65" translate="yes" xml:space="preserve">
          <source>Declares an exchange</source>
          <target state="translated">교환 선언</target>
        </trans-unit>
        <trans-unit id="1e839bd732e67c2602adeb9671452446a385f3f8" translate="yes" xml:space="preserve">
          <source>Declares queue, creates if needed</source>
          <target state="translated">대기열을 선언하고 필요한 경우 생성</target>
        </trans-unit>
        <trans-unit id="b0e92ad92d5e985420b637eaa2be4b51b1bf423b" translate="yes" xml:space="preserve">
          <source>Define all required services in &lt;code&gt;docker-compose.yml&lt;/code&gt; file. Make sure to follow Docker philisophy: 1 service = 1 container. So each process should be defined as its own service. Those services can use official Docker images pulled from DockerHub. Directories with code and tests should be mounted using &lt;code&gt;volume&lt;/code&gt; directive. And exposed ports should be explicitly set using &lt;code&gt;ports&lt;/code&gt; directive.</source>
          <target state="translated">&lt;code&gt;docker-compose.yml&lt;/code&gt; 파일 에서 필요한 모든 서비스를 정의하십시오 . Docker 철학을 따르십시오 : 1 서비스 = 1 컨테이너. 따라서 각 프로세스는 자체 서비스로 정의해야합니다. 이러한 서비스는 DockerHub에서 가져온 공식 Docker 이미지를 사용할 수 있습니다. 코드와 테스트가있는 디렉토리는 &lt;code&gt;volume&lt;/code&gt; 지시문을 사용하여 마운트해야합니다 . 그리고 &lt;code&gt;ports&lt;/code&gt; 지시문을 사용하여 노출 된 포트를 명시 적으로 설정해야합니다 .</target>
        </trans-unit>
        <trans-unit id="810b8ecd1154c2c99674c6de5b4e2e69ac873b78" translate="yes" xml:space="preserve">
          <source>Delete all the keys in the Redis database</source>
          <target state="translated">Redis 데이터베이스에서 모든 키를 삭제하십시오.</target>
        </trans-unit>
        <trans-unit id="7bb4803e9204cdd53a75cf6490c90042597aac8b" translate="yes" xml:space="preserve">
          <source>Deletes a file</source>
          <target state="translated">파일을 삭제합니다</target>
        </trans-unit>
        <trans-unit id="55a5f83da2a1e3a69573b44fc5f4632f52eca00e" translate="yes" xml:space="preserve">
          <source>Deletes a file on the remote FTP/SFTP system</source>
          <target state="translated">원격 FTP / SFTP 시스템에서 파일을 삭제합니다</target>
        </trans-unit>
        <trans-unit id="3f6ee9114388f19c5a6c78c5ff9c8c061bfa490c" translate="yes" xml:space="preserve">
          <source>Deletes directory with all subdirectories</source>
          <target state="translated">모든 서브 디렉토리가있는 디렉토리를 삭제합니다.</target>
        </trans-unit>
        <trans-unit id="9dcd97356a25c8e1067a770985631e321e26e436" translate="yes" xml:space="preserve">
          <source>Deletes directory with all subdirectories on the remote FTP/SFTP server</source>
          <target state="translated">원격 FTP / SFTP 서버에서 모든 서브 디렉토리가있는 디렉토리를 삭제합니다.</target>
        </trans-unit>
        <trans-unit id="4f75e5e5c31c6e1785009a971d5b25cec1c28213" translate="yes" xml:space="preserve">
          <source>Deletes session snapshot.</source>
          <target state="translated">세션 스냅 샷을 삭제합니다.</target>
        </trans-unit>
        <trans-unit id="547e3de06644513d80114375620b7d24e5a26445" translate="yes" xml:space="preserve">
          <source>Deletes the header with the passed name. Subsequent requests will not have the deleted header in its request.</source>
          <target state="translated">전달 된 이름을 가진 헤더를 삭제합니다. 후속 요청은 요청에서 삭제 된 헤더를 갖지 않습니다.</target>
        </trans-unit>
        <trans-unit id="b1e569d3dc20053246991b6c3a2176523351fc3f" translate="yes" xml:space="preserve">
          <source>Demo Project</source>
          <target state="translated">데모 프로젝트</target>
        </trans-unit>
        <trans-unit id="81de341883203e60cd389c4205d95ae106dc8538" translate="yes" xml:space="preserve">
          <source>Demo project</source>
          <target state="translated">데모 프로젝트</target>
        </trans-unit>
        <trans-unit id="0562f32dc56f5c702810cbe010068ddd38dbd69a" translate="yes" xml:space="preserve">
          <source>Dependencies</source>
          <target state="translated">Dependencies</target>
        </trans-unit>
        <trans-unit id="3aefbe2f210572802298b2ad0347dc9e423d2690" translate="yes" xml:space="preserve">
          <source>Dependency Injection</source>
          <target state="translated">의존성 주입</target>
        </trans-unit>
        <trans-unit id="0d4ccf38d91f45ed072525983c80e22251dde19a" translate="yes" xml:space="preserve">
          <source>Depending on the environment, you may choose which tests are to be executed. For example, you might need some tests to be executed in Firefox only, and some tests in Chrome only.</source>
          <target state="translated">환경에 따라 실행할 테스트를 선택할 수 있습니다. 예를 들어 Firefox에서만 일부 테스트를 실행하고 Chrome에서만 일부 테스트를 수행해야 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="55f8ebc805e65b5b71ddafdae390e3be2bcd69af" translate="yes" xml:space="preserve">
          <source>Description</source>
          <target state="translated">Description</target>
        </trans-unit>
        <trans-unit id="edd2ede31710fd11016161c41296afeb8392488a" translate="yes" xml:space="preserve">
          <source>Despite the wide popularity of &lt;em&gt;TDD&lt;/em&gt; (Test Driven Development), some PHP developers never write automated tests for their applications mostly because they think it&amp;rsquo;s hard, slow or boring. The Codeception framework was developed to actually make testing fun. It allows writing unit, functional, integration, and acceptance tests in a single, coherent style.</source>
          <target state="translated">&lt;em&gt;TDD&lt;/em&gt; (Test Driven Development)의 인기에도 불구하고 , 일부 PHP 개발자는 자신의 애플리케이션이 어렵거나 느리거나 지루하다고 생각하기 때문에 자동화 된 테스트를 작성하지 않습니다. Codeception 프레임 워크는 실제로 테스트를 즐겁게하기 위해 개발되었습니다. 단일 단위의 일관성있는 스타일로 작문, 기능, 통합 및 승인 테스트를 수행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8c9c0f8057acd5b9bf966a0d07a24ae8b098a5d0" translate="yes" xml:space="preserve">
          <source>Development bash</source>
          <target state="translated">개발 배쉬</target>
        </trans-unit>
        <trans-unit id="ed7e83515201d94c23422c690274bd9a1fcc8fc6" translate="yes" xml:space="preserve">
          <source>Disable Laravel exception handling.</source>
          <target state="translated">라 라벨 예외 처리를 비활성화하십시오.</target>
        </trans-unit>
        <trans-unit id="83708a6f34a03c1c445f8cefe4b2dad64c385e05" translate="yes" xml:space="preserve">
          <source>Disable events for the next requests. This method does not disable model events. To disable model events you have to use the disableModelEvents() method.</source>
          <target state="translated">다음 요청에 대한 이벤트를 비활성화하십시오. 이 방법은 모델 이벤트를 비활성화하지 않습니다. 모델 이벤트를 비활성화하려면 disableModelEvents () 메서드를 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="65661b5952d1a4cee287cade326ec6d1fa54aba7" translate="yes" xml:space="preserve">
          <source>Disable middleware for the next requests.</source>
          <target state="translated">다음 요청에 대해 미들웨어를 비활성화하십시오.</target>
        </trans-unit>
        <trans-unit id="e7342a2d956572e35f5abe057dc21ab63ccf2c86" translate="yes" xml:space="preserve">
          <source>Disable model events for the next requests.</source>
          <target state="translated">다음 요청에 대한 모델 이벤트를 비활성화하십시오.</target>
        </trans-unit>
        <trans-unit id="261dd6b2c73a7a75fe3c42d1ee2c0956dff8a99c" translate="yes" xml:space="preserve">
          <source>Dismisses the active JavaScript popup, as created by &lt;code&gt;window.alert&lt;/code&gt;, &lt;code&gt;window.confirm&lt;/code&gt;, or &lt;code&gt;window.prompt&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;window.alert&lt;/code&gt; , &lt;code&gt;window.confirm&lt;/code&gt; 또는 &lt;code&gt;window.prompt&lt;/code&gt; 로 작성된 활성 JavaScript 팝업을 닫습니다 .</target>
        </trans-unit>
        <trans-unit id="9e852923f98c03c1a1cd47ececc70b778bc497dd" translate="yes" xml:space="preserve">
          <source>Do you often use the &lt;code&gt;TAB&lt;/code&gt; key to navigate through the web page? How do your site respond to this navigation? You could try to match elements by their tab position using &lt;code&gt;tabIndex&lt;/code&gt; method of &lt;code&gt;Locator&lt;/code&gt; class.</source>
          <target state="translated">자주 &lt;code&gt;TAB&lt;/code&gt; 키를 사용하여 웹 페이지를 탐색합니까? 사이트가이 탐색에 어떻게 반응합니까? &lt;code&gt;Locator&lt;/code&gt; 클래스의 &lt;code&gt;tabIndex&lt;/code&gt; 메소드를 사용하여 탭 위치별로 요소를 일치시킬 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9f1141549f7c054b71516937d3febc77d991d59b" translate="yes" xml:space="preserve">
          <source>Docker</source>
          <target state="translated">Docker</target>
        </trans-unit>
        <trans-unit id="22d930b4a29ca13b52f55ccb00b91f28b4cdd56c" translate="yes" xml:space="preserve">
          <source>Docker can ship Selenium Server with all its dependencies and browsers inside a single container. Running tests inside Docker is as easy as pulling &lt;a href=&quot;https://github.com/SeleniumHQ/docker-selenium&quot;&gt;official selenium image&lt;/a&gt; and starting a container with Chrome:</source>
          <target state="translated">Docker는 단일 컨테이너 내에 Selenium 서버와 모든 종속성 및 브라우저를 제공 할 수 있습니다. Docker 내에서 테스트를 실행하는 것은 &lt;a href=&quot;https://github.com/SeleniumHQ/docker-selenium&quot;&gt;공식 셀레늄 이미지를 가져&lt;/a&gt; 오고 Chrome으로 컨테이너를 시작하는 것만 큼 ​​쉽습니다 .</target>
        </trans-unit>
        <trans-unit id="bbb5c860e164069cae36958050e2d6d653be820c" translate="yes" xml:space="preserve">
          <source>Docker works really well for isolating testing environments. By the time of writing this chapter, we didn&amp;rsquo;t have an awesome tool like it. This chapter demonstrates how to manage parallel execution manually. As you will see we spend too much effort trying to isolate tests which Docker does for free. Today we &lt;strong&gt;recommend using Docker&lt;/strong&gt; for parallel testing.</source>
          <target state="translated">Docker는 테스트 환경을 격리하는 데 정말 효과적입니다. 이 장을 쓸 당시에는 그와 같은 멋진 도구가 없었습니다. 이 장에서는 병렬 실행을 수동으로 관리하는 방법을 보여줍니다. 보시다시피 Docker가 무료로 수행하는 테스트를 격리하기 위해 너무 많은 노력을 기울입니다. 오늘날 병렬 테스트에는 &lt;strong&gt;Docker&lt;/strong&gt; 를 &lt;strong&gt;사용하는 것이 좋습니다&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="8d9fcc0d495340e68011f713506733ebd638b9ac" translate="yes" xml:space="preserve">
          <source>Dockerized Codeception Internal Tests</source>
          <target state="translated">Dockerized Codeception 내부 테스트</target>
        </trans-unit>
        <trans-unit id="53c101f8d290c329f198ebf575d3bca9b17ffad3" translate="yes" xml:space="preserve">
          <source>Doctrine is also a popular ORM, unlike some others it implements the DataMapper pattern and is not bound to any framework. The &lt;a href=&quot;modules/doctrine2&quot;&gt;Doctrine2&lt;/a&gt; module requires an &lt;code&gt;EntityManager&lt;/code&gt; instance to work with. It can be obtained from a Symfony framework or Zend Framework (configured with Doctrine):</source>
          <target state="translated">Doctrine은 다른 ORM과 달리 인기있는 ORM으로 DataMapper 패턴을 구현하며 어떤 프레임 워크에도 구속되지 않습니다. &lt;a href=&quot;modules/doctrine2&quot;&gt;Doctrine2의&lt;/a&gt; 모듈은 필요 &lt;code&gt;EntityManager&lt;/code&gt; 의의 와 작업에 대한 인스턴스를. Symfony 프레임 워크 또는 Zend 프레임 워크 (doctrine으로 구성)에서 얻을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8d7bdc43a09d9596e3fb9b3c8d15c419d73d6792" translate="yes" xml:space="preserve">
          <source>Doctrine-style:</source>
          <target state="translated">Doctrine-style:</target>
        </trans-unit>
        <trans-unit id="b3498ed81cef31394dafbc44c16279c6e02a0267" translate="yes" xml:space="preserve">
          <source>Doctrine2</source>
          <target state="translated">Doctrine2</target>
        </trans-unit>
        <trans-unit id="50f603e31eec22e29a30a56dd62a9638b6372fca" translate="yes" xml:space="preserve">
          <source>Doctrine2 also provides methods to create and check data:</source>
          <target state="translated">Doctrine2는 또한 데이터를 생성하고 확인하는 방법을 제공합니다 :</target>
        </trans-unit>
        <trans-unit id="d6f336ba7cea77e793a7a3fa9eb72944069fe1a4" translate="yes" xml:space="preserve">
          <source>Doctrine2::dontSeeInRepository</source>
          <target state="translated">Doctrine2::dontSeeInRepository</target>
        </trans-unit>
        <trans-unit id="165f87c32e697fa68785a1fe586da966b1cdc438" translate="yes" xml:space="preserve">
          <source>Doctrine2::flushToDatabase</source>
          <target state="translated">Doctrine2::flushToDatabase</target>
        </trans-unit>
        <trans-unit id="0be4951be83fcd4a91712bb00f770c2e6b6bd18a" translate="yes" xml:space="preserve">
          <source>Doctrine2::grabEntitiesFromRepository</source>
          <target state="translated">Doctrine2::grabEntitiesFromRepository</target>
        </trans-unit>
        <trans-unit id="65460b9b41603a11336bc32a9bbba56f24ec1b0d" translate="yes" xml:space="preserve">
          <source>Doctrine2::grabEntityFromRepository</source>
          <target state="translated">Doctrine2::grabEntityFromRepository</target>
        </trans-unit>
        <trans-unit id="b93ce189269ee18361a65ef2ad40eea2921ca8ee" translate="yes" xml:space="preserve">
          <source>Doctrine2::grabFromRepository</source>
          <target state="translated">Doctrine2::grabFromRepository</target>
        </trans-unit>
        <trans-unit id="72405d68de3c0f7675de024f090d02638b685267" translate="yes" xml:space="preserve">
          <source>Doctrine2::haveFakeRepository</source>
          <target state="translated">Doctrine2::haveFakeRepository</target>
        </trans-unit>
        <trans-unit id="4da57f71703091d081ee0d06094e70c352ccec7c" translate="yes" xml:space="preserve">
          <source>Doctrine2::haveInRepository</source>
          <target state="translated">Doctrine2::haveInRepository</target>
        </trans-unit>
        <trans-unit id="2d1f65a452ddd1680c5ec5536d00dab07efe93e9" translate="yes" xml:space="preserve">
          <source>Doctrine2::onReconfigure</source>
          <target state="translated">Doctrine2::onReconfigure</target>
        </trans-unit>
        <trans-unit id="5bbdb5b695bd4632dabab9c6aa3795a1b3112b41" translate="yes" xml:space="preserve">
          <source>Doctrine2::persistEntity</source>
          <target state="translated">Doctrine2::persistEntity</target>
        </trans-unit>
        <trans-unit id="b8314bb0d901a93e59cb45ed1c6a512938c5f5af" translate="yes" xml:space="preserve">
          <source>Doctrine2::seeInRepository</source>
          <target state="translated">Doctrine2::seeInRepository</target>
        </trans-unit>
        <trans-unit id="e033d745d74e100c3dcbe3134110e35641b721b0" translate="yes" xml:space="preserve">
          <source>Does not load the response into the module so you can&amp;rsquo;t interact with response page (click, fill forms). To load arbitrary page for interaction, use &lt;code&gt;_loadPage&lt;/code&gt; method.</source>
          <target state="translated">응답을 모듈에로드하지 않으므로 응답 페이지와 상호 작용할 수 없습니다 (클릭, 양식 채우기). 상호 작용을 위해 임의의 페이지를로드하려면 &lt;code&gt;_loadPage&lt;/code&gt; 메소드를 사용 하십시오 .</target>
        </trans-unit>
        <trans-unit id="6b0db7f8582e2d015202310caf5de62714cec2da" translate="yes" xml:space="preserve">
          <source>Does the locator look like an ID selector (e.g. &amp;ldquo;#foo&amp;rdquo;)? If so, try to find a form matching that ID.</source>
          <target state="translated">로케이터가 ID 선택기처럼 보입니까 (예 :&amp;ldquo;#foo&amp;rdquo;)? 그렇다면 해당 ID와 일치하는 양식을 찾으십시오.</target>
        </trans-unit>
        <trans-unit id="e38aa94fd498f63b8695d0686143898ea875b366" translate="yes" xml:space="preserve">
          <source>Domain Assertions</source>
          <target state="translated">도메인 어설 션</target>
        </trans-unit>
        <trans-unit id="781a647cde73a8e4418542fd249c83b2d91c9810" translate="yes" xml:space="preserve">
          <source>Don&amp;rsquo;t forget to create the folder and ensure its writable.</source>
          <target state="translated">폴더를 작성하고 쓰기 가능한지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="dd6440fe01e5279d3f257c0f14655485889a5be9" translate="yes" xml:space="preserve">
          <source>Download &lt;a href=&quot;http://docs.seleniumhq.org/download/&quot;&gt;Selenium Standalone Server&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;http://docs.seleniumhq.org/download/&quot;&gt;Selenium 독립형 서버&lt;/a&gt; 다운로드</target>
        </trans-unit>
        <trans-unit id="a1e529cc716bd78e774a6b10f0f1af197d2b2b3c" translate="yes" xml:space="preserve">
          <source>Download &lt;a href=&quot;http://phantomjs.org/download.html&quot;&gt;PhantomJS&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;http://phantomjs.org/download.html&quot;&gt;PhantomJS&lt;/a&gt; 다운로드</target>
        </trans-unit>
        <trans-unit id="b5c7d8b545ea7fdba609234ce2324aa0c0d6dbb0" translate="yes" xml:space="preserve">
          <source>Driver</source>
          <target state="translated">Driver</target>
        </trans-unit>
        <trans-unit id="eb0a9bc25e3727cd99b5c71ee4b55064c8824616" translate="yes" xml:space="preserve">
          <source>DryRun</source>
          <target state="translated">DryRun</target>
        </trans-unit>
        <trans-unit id="d8d218c02974bb1de20e1d664e3a90526498d120" translate="yes" xml:space="preserve">
          <source>Dump</source>
          <target state="translated">Dump</target>
        </trans-unit>
        <trans-unit id="a4c8f10ce49d65caa826e60e633c69e5ac944fd7" translate="yes" xml:space="preserve">
          <source>Dynamic Configuration With Parameters</source>
          <target state="translated">매개 변수를 사용한 동적 구성</target>
        </trans-unit>
        <trans-unit id="85262026152f48ea20f5eaaa2a7bf0431d969388" translate="yes" xml:space="preserve">
          <source>Each failed assertion will be shown in the test results, but it won&amp;rsquo;t stop the test.</source>
          <target state="translated">실패한 어설 션이 테스트 결과에 표시되지만 테스트는 중지되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="8cbf191d21874f5c2e8ce84ca9214d1df1d1f5e6" translate="yes" xml:space="preserve">
          <source>Each feature mentioned above may help dramatically when using Codeception to automate the testing of large projects, although some features may require advanced knowledge of PHP. There is no &amp;ldquo;best practice&amp;rdquo; or &amp;ldquo;use cases&amp;rdquo; when we talk about groups, extensions, or other powerful features of Codeception. If you see you have a problem that can be solved using these extensions, then give them a try.</source>
          <target state="translated">위에서 언급 한 각 기능은 Codeception을 사용하여 대규모 프로젝트의 테스트를 자동화 할 때 크게 도움이 될 수 있지만 일부 기능은 PHP에 대한 고급 지식이 필요할 수 있습니다. 그룹, 확장 프로그램 또는 기타 강력한 Codeception 기능에 대해 이야기 할 때는 &quot;모범 사례&quot;또는 &quot;사용 사례&quot;가 없습니다. 이러한 확장을 사용하여 해결할 수있는 문제가있는 경우 사용해보십시오.</target>
        </trans-unit>
        <trans-unit id="f073bc5a3ac1522d7ae0eb17962b1cdb4ee5807d" translate="yes" xml:space="preserve">
          <source>Each feature of a product should be born from a talk between</source>
          <target state="translated">제품의 각 기능은</target>
        </trans-unit>
        <trans-unit id="3118ef9e0574f3109cc7aa0de0c73a0db28662c8" translate="yes" xml:space="preserve">
          <source>Each generated suite have its own configuration inside directory set by &lt;code&gt;paths: tests: &lt;/code&gt; configuration option in &lt;code&gt;codeception.yml&lt;/code&gt;. Each suite configuration is named like &lt;code&gt;suitename.suite.yml&lt;/code&gt;. It allows to enable and configure modules, and more.</source>
          <target state="translated">생성 된 각 제품군에는 &lt;code&gt;paths: tests: &lt;/code&gt; 설정된 디렉토리 내에 자체 구성이 있습니다 . tests : &lt;code&gt;codeception.yml&lt;/code&gt; 의 구성 옵션 . 각 스위트 구성의 이름은 &lt;code&gt;suitename.suite.yml&lt;/code&gt; 입니다. 모듈 등을 활성화하고 구성 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4c8eb8b1b1c3bfc06a61981a866490fd9e3373b5" translate="yes" xml:space="preserve">
          <source>Each module can handle events from the running test. A module can be executed before the test starts, or after the test is finished. This can be useful for bootstrap/cleanup actions. You can also define special behavior for when the test fails. This may help you in debugging the issue. For example, the PhpBrowser module saves the current webpage to the &lt;code&gt;tests/_output&lt;/code&gt; directory when a test fails.</source>
          <target state="translated">각 모듈은 실행중인 테스트의 이벤트를 처리 할 수 ​​있습니다. 테스트가 시작되기 전 또는 테스트가 완료된 후 모듈을 실행할 수 있습니다. 부트 스트랩 / 정리 작업에 유용 할 수 있습니다. 테스트 실패시 특별한 동작을 정의 할 수도 있습니다. 문제를 디버깅하는 데 도움이 될 수 있습니다. 예를 들어 PhpBrowser 모듈은 테스트가 실패하면 현재 웹 페이지를 &lt;code&gt;tests/_output&lt;/code&gt; 디렉토리에 저장 합니다.</target>
        </trans-unit>
        <trans-unit id="54fb84d6bd1652326ab4250fe4a7df0c8a7aad0e" translate="yes" xml:space="preserve">
          <source>Each module can output internal values that may be useful during debug. For example, the PhpBrowser module prints the response code and current URL every time it moves to a new page. Thus, modules are not black boxes. They are trying to show you what is happening during the test. This makes debugging your tests less painful.</source>
          <target state="translated">각 모듈은 디버그 중에 유용 할 수있는 내부 값을 출력 할 수 있습니다. 예를 들어 PhpBrowser 모듈은 새 페이지로 이동할 때마다 응답 코드와 현재 URL을 인쇄합니다. 따라서 모듈은 블랙 박스가 아닙니다. 그들은 시험 중에 무슨 일이 일어나고 있는지 보여 주려고 노력하고 있습니다. 이것은 테스트 디버깅을 덜 고통스럽게 만듭니다.</target>
        </trans-unit>
        <trans-unit id="17d980ca3f649e67a51d450447b2753f83f674dd" translate="yes" xml:space="preserve">
          <source>Each public method in robofile can be executed as a command from console. Let&amp;rsquo;s define commands for 3 steps and include autoload.</source>
          <target state="translated">robofile의 각 공개 메소드는 콘솔에서 명령으로 실행될 수 있습니다. 3 단계에 대한 명령을 정의하고 자동로드를 포함시킵니다.</target>
        </trans-unit>
        <trans-unit id="0e86e57e2d3c003b739f39e844f709847f7b126e" translate="yes" xml:space="preserve">
          <source>Each test of a Cest class can declare its own dependencies and receive them from method arguments:</source>
          <target state="translated">Cest 클래스의 각 테스트는 자체 종속성을 선언하고 메소드 인수에서받을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="607b0289550edb8d974a5841cf1c1cc6c507e722" translate="yes" xml:space="preserve">
          <source>Effect is opposite to -&amp;gt;seeInDatabase</source>
          <target state="translated">효과는 반대입니다-&amp;gt; 데이터베이스 참조</target>
        </trans-unit>
        <trans-unit id="4cd054312db47bab5f9a0facb62600e0a1c43e5c" translate="yes" xml:space="preserve">
          <source>EloquentModel</source>
          <target state="translated">EloquentModel</target>
        </trans-unit>
        <trans-unit id="221abcc4caa47671a669e8586efbb4a6a2fb8916" translate="yes" xml:space="preserve">
          <source>Emulates a click on valid anchors. The URL referenced in the &lt;code&gt;href&lt;/code&gt; attribute will be opened. As a parameter, you can specify the link name or a valid CSS or XPath selector.</source>
          <target state="translated">유효한 앵커 클릭을 에뮬레이트합니다. &lt;code&gt;href&lt;/code&gt; 속성 에서 참조 된 URL 이 열립니다. 매개 변수로 링크 이름 또는 유효한 CSS 또는 XPath 선택기를 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1f12a33a5a2d2f6ae930a7d7dd00beaad77a6e0d" translate="yes" xml:space="preserve">
          <source>Enable &lt;a href=&quot;https://codeception.com/extensions#RunProcess&quot;&gt;RunProcess&lt;/a&gt; extension to start/stop ChromeDriver automatically &lt;em&gt;(optional)&lt;/em&gt;.</source>
          <target state="translated">ChromeDriver를 자동으로 시작 / 중지하려면 &lt;a href=&quot;https://codeception.com/extensions#RunProcess&quot;&gt;RunProcess&lt;/a&gt; 확장 프로그램을 사용 하도록 설정합니다 &lt;em&gt;(선택 사항)&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="858cfdeefd81480b5c75452c27e1d879cf766dcd" translate="yes" xml:space="preserve">
          <source>Enable &lt;a href=&quot;https://codeception.com/extensions#RunProcess&quot;&gt;RunProcess&lt;/a&gt; extension to start/stop PhantomJS automatically &lt;em&gt;(optional)&lt;/em&gt;.</source>
          <target state="translated">PhantomJS를 자동으로 시작 / 중지하려면 &lt;a href=&quot;https://codeception.com/extensions#RunProcess&quot;&gt;RunProcess&lt;/a&gt; 확장을 활성화하십시오 &lt;em&gt;(선택 사항)&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="8af619763dfaca0ce16232e2608c83501f11950a" translate="yes" xml:space="preserve">
          <source>Enable &lt;a href=&quot;https://codeception.com/extensions#RunProcess&quot;&gt;RunProcess&lt;/a&gt; extension to start/stop Selenium automatically &lt;em&gt;(optional)&lt;/em&gt;.</source>
          <target state="translated">Selenium을 자동으로 시작 / 중지하려면 &lt;a href=&quot;https://codeception.com/extensions#RunProcess&quot;&gt;RunProcess&lt;/a&gt; 확장을 활성화하십시오 &lt;em&gt;(선택 사항)&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="8aef83b611fc7477c8fd3c51262a7def0bb7d55f" translate="yes" xml:space="preserve">
          <source>Enable Laravel exception handling.</source>
          <target state="translated">Laravel 예외 처리를 활성화하십시오.</target>
        </trans-unit>
        <trans-unit id="6775b2cd12d482ae56aeec0a0bf6d83a8a88fed4" translate="yes" xml:space="preserve">
          <source>Enables automatic redirects to be followed by the client</source>
          <target state="translated">클라이언트가 자동 리디렉션을 수행 할 수 있도록합니다.</target>
        </trans-unit>
        <trans-unit id="2ef15239a5dfc90d0f9cdecea3735293f58bfb70" translate="yes" xml:space="preserve">
          <source>Enabling Extension</source>
          <target state="translated">확장 활성화</target>
        </trans-unit>
        <trans-unit id="6b287440844cf272dd2579686a768e3380e393b5" translate="yes" xml:space="preserve">
          <source>Enabling Framework Modules</source>
          <target state="translated">프레임 워크 모듈 활성화</target>
        </trans-unit>
        <trans-unit id="d36d819f3b042bd2ebfb5286002f07abb919f07c" translate="yes" xml:space="preserve">
          <source>Enabling module with custom .env file</source>
          <target state="translated">사용자 정의 .env 파일로 모듈 활성화</target>
        </trans-unit>
        <trans-unit id="36c94a597f1e54ce4f5655d8002949370bed1b14" translate="yes" xml:space="preserve">
          <source>Enabling module:</source>
          <target state="translated">활성화 모듈 :</target>
        </trans-unit>
        <trans-unit id="577593d4187f89857ac95ffdd1dda0b97cbcaf0e" translate="yes" xml:space="preserve">
          <source>Enters a directory In local filesystem. Project root directory is used by default</source>
          <target state="translated">로컬 파일 시스템에 디렉토리를 입력합니다. 기본적으로 프로젝트 루트 디렉토리가 사용됩니다</target>
        </trans-unit>
        <trans-unit id="94ff2bd3f18778e9afc09e1d7d6458a2655fe911" translate="yes" xml:space="preserve">
          <source>Enters a directory on the ftp system - FTP root directory is used by default</source>
          <target state="translated">ftp 시스템에 디렉토리를 입력합니다-기본적으로 FTP 루트 디렉토리가 사용됩니다</target>
        </trans-unit>
        <trans-unit id="3cd861bb852588faf3d246a909a6230f22a6d006" translate="yes" xml:space="preserve">
          <source>Enters text into a native JavaScript prompt popup, as created by &lt;code&gt;window.prompt&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;window.prompt&lt;/code&gt; 로 작성된 고유 JavaScript 프롬프트 팝업에 텍스트를 입력합니다 .</target>
        </trans-unit>
        <trans-unit id="017b53c42e43b39e1f5aabf6f7280c2f777243a2" translate="yes" xml:space="preserve">
          <source>Environments</source>
          <target state="translated">Environments</target>
        </trans-unit>
        <trans-unit id="895b88363f8896b33b0faa666f6dc25a5de04c27" translate="yes" xml:space="preserve">
          <source>Erases directory contents</source>
          <target state="translated">디렉토리 내용을 지 웁니다.</target>
        </trans-unit>
        <trans-unit id="333efd1af50518e07e7959bc5187f67c99f123e5" translate="yes" xml:space="preserve">
          <source>Erases directory contents on the FTP/SFTP server</source>
          <target state="translated">FTP / SFTP 서버에서 디렉토리 내용을 지 웁니다.</target>
        </trans-unit>
        <trans-unit id="753c5002c6b54759d98204a8260973033b1ae296" translate="yes" xml:space="preserve">
          <source>Error Reporting</source>
          <target state="translated">오류보고</target>
        </trans-unit>
        <trans-unit id="ad8919ace091b14011c6439cfd5e1707b58f5abd" translate="yes" xml:space="preserve">
          <source>Event</source>
          <target state="translated">Event</target>
        </trans-unit>
        <trans-unit id="c5497bca58468ae64aed6c0fd921109217988db3" translate="yes" xml:space="preserve">
          <source>Events</source>
          <target state="translated">Events</target>
        </trans-unit>
        <trans-unit id="0f01ed56a1e32a05e5ef96e4d779f34784af9a96" translate="yes" xml:space="preserve">
          <source>Example</source>
          <target state="translated">Example</target>
        </trans-unit>
        <trans-unit id="1ac706b12e60fc2f6bfd1155ed87e02f48c03b35" translate="yes" xml:space="preserve">
          <source>Example #1 (&lt;code&gt;functional.suite.yml&lt;/code&gt;)</source>
          <target state="translated">예제 # 1 ( &lt;code&gt;functional.suite.yml&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="ca36d18db4bfa000f3d5562842c56493622d15e3" translate="yes" xml:space="preserve">
          <source>Example #2 (&lt;code&gt;functional.suite.yml&lt;/code&gt;)</source>
          <target state="translated">예제 # 2 ( &lt;code&gt;functional.suite.yml&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="dde0b126776651801c1257bb713f0308e69c35f3" translate="yes" xml:space="preserve">
          <source>Example (&lt;code&gt;acceptance.suite.yml&lt;/code&gt;)</source>
          <target state="translated">예 ( &lt;code&gt;acceptance.suite.yml&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="2b560afc7172f76db612b415bcff94ecc8f216a7" translate="yes" xml:space="preserve">
          <source>Example (&lt;code&gt;functional.suite.yml&lt;/code&gt;)</source>
          <target state="translated">예 ( &lt;code&gt;functional.suite.yml&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="e6daaa3ec4c74a6bc17e462eaad839b9f3d84568" translate="yes" xml:space="preserve">
          <source>Example (&lt;code&gt;functional.suite.yml&lt;/code&gt;) - Symfony 2.x Directory Structure</source>
          <target state="translated">예 ( &lt;code&gt;functional.suite.yml&lt;/code&gt; )-Symfony 2.x 디렉토리 구조</target>
        </trans-unit>
        <trans-unit id="b59d3338cd36f5463b2d5d1f4fd7362a5b7eb33e" translate="yes" xml:space="preserve">
          <source>Example (&lt;code&gt;functional.suite.yml&lt;/code&gt;) - Symfony 3 Directory Structure</source>
          <target state="translated">예 ( &lt;code&gt;functional.suite.yml&lt;/code&gt; )-Symfony 3 디렉토리 구조</target>
        </trans-unit>
        <trans-unit id="d338353da288abb5e73004fbbc6353971697d982" translate="yes" xml:space="preserve">
          <source>Example (&lt;code&gt;functional.suite.yml&lt;/code&gt;) - Symfony 4 Directory Structure</source>
          <target state="translated">예 ( &lt;code&gt;functional.suite.yml&lt;/code&gt; )-Symfony 4 디렉토리 구조</target>
        </trans-unit>
        <trans-unit id="aaa4330b25f6033ff16ca5f3ae95f537f5dc2642" translate="yes" xml:space="preserve">
          <source>Example (&lt;code&gt;unit.suite.yml&lt;/code&gt;)</source>
          <target state="translated">예 ( &lt;code&gt;unit.suite.yml&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="0cacae12eed9647dc6dae0a697a71a6c56e5f4ea" translate="yes" xml:space="preserve">
          <source>Example (AWS SQS)</source>
          <target state="translated">예 (AWS SQS)</target>
        </trans-unit>
        <trans-unit id="c1168e2c48636a0e743019bed07295ea0ac92571" translate="yes" xml:space="preserve">
          <source>Example (FTP)</source>
          <target state="translated">예 (FTP)</target>
        </trans-unit>
        <trans-unit id="640fde29804ecf0e421118d7660fc892a9524a87" translate="yes" xml:space="preserve">
          <source>Example (Iron.io)</source>
          <target state="translated">예 (Iron.io)</target>
        </trans-unit>
        <trans-unit id="c14a45c13a8132b115528c58dcf91bf0dfdeee0f" translate="yes" xml:space="preserve">
          <source>Example (SFTP)</source>
          <target state="translated">예 (SFTP)</target>
        </trans-unit>
        <trans-unit id="0b2672c82271da2f1eebb5a4fa949bc5fff81b15" translate="yes" xml:space="preserve">
          <source>Example (beanstalkd)</source>
          <target state="translated">예 (콩 줄기)</target>
        </trans-unit>
        <trans-unit id="2e36310382d1c14486fc12b2dd21569eb9914c9f" translate="yes" xml:space="preserve">
          <source>Example AWS SQS running on Amazon EC2 instance</source>
          <target state="translated">Amazon EC2 인스턴스에서 실행중인 AWS SQS 예</target>
        </trans-unit>
        <trans-unit id="08eef833fe7a47e95e499024a5e9efff8b048c18" translate="yes" xml:space="preserve">
          <source>Example AWS SQS using profile credentials</source>
          <target state="translated">프로파일 자격 증명을 사용하는 AWS SQS 예</target>
        </trans-unit>
        <trans-unit id="a1dea63f476633db063439f14a75a9b7e45d7b59" translate="yes" xml:space="preserve">
          <source>Example Annotation</source>
          <target state="translated">주석 예</target>
        </trans-unit>
        <trans-unit id="e565ca966747f52d66cf18857d11da7bbc70c988" translate="yes" xml:space="preserve">
          <source>Example with multi-databases</source>
          <target state="translated">다중 데이터베이스를 사용한 예</target>
        </trans-unit>
        <trans-unit id="490f84dfd776dd20e3ce0a032e10a7ad2f614673" translate="yes" xml:space="preserve">
          <source>Example with multi-dumps</source>
          <target state="translated">멀티 덤프가있는 예</target>
        </trans-unit>
        <trans-unit id="c63737abd7347a7ae582cb9fbdf37d6c0e5b251e" translate="yes" xml:space="preserve">
          <source>Example:</source>
          <target state="translated">Example:</target>
        </trans-unit>
        <trans-unit id="4facc4ec9fb2e93395c2124763cb637f8cb454ff" translate="yes" xml:space="preserve">
          <source>Example: Using md5 for a file contents</source>
          <target state="translated">예 : 파일 내용에 md5 사용</target>
        </trans-unit>
        <trans-unit id="7756d86a81ae3b9bf91da76c4d92e99d7d67ebe0" translate="yes" xml:space="preserve">
          <source>Example: Using md5 hash key</source>
          <target state="translated">예 : md5 해시 키 사용</target>
        </trans-unit>
        <trans-unit id="4c45273a9ca5cd6dc25d0988fe7c5a6cbbca9e62" translate="yes" xml:space="preserve">
          <source>Example: Using sha256 hash</source>
          <target state="translated">예 : sha256 해시 사용</target>
        </trans-unit>
        <trans-unit id="fcc81e042958c8e425b0070abb27a743d15f67c8" translate="yes" xml:space="preserve">
          <source>Example: load parameters from .env files (Laravel):</source>
          <target state="translated">예 : .env 파일에서 매개 변수로드 (Laravel) :</target>
        </trans-unit>
        <trans-unit id="7a4a6f03a21572574f4cb986de70c47c61bdeda8" translate="yes" xml:space="preserve">
          <source>Example: load parameters from YAML file (Symfony):</source>
          <target state="translated">예 : YAML 파일에서 매개 변수로드 (Symfony) :</target>
        </trans-unit>
        <trans-unit id="8800701434f3b3c004592baca29256d0c002cf10" translate="yes" xml:space="preserve">
          <source>Example: load parameters from php file (Yii)</source>
          <target state="translated">예 : PHP 파일에서 매개 변수로드 (Yii)</target>
        </trans-unit>
        <trans-unit id="479e72f301a1765bb7a00ba5de42fb145628d7cc" translate="yes" xml:space="preserve">
          <source>Example: load parameters from the environment:</source>
          <target state="translated">예 : 환경에서 매개 변수를로드하십시오.</target>
        </trans-unit>
        <trans-unit id="eb01bf04c9a0e8a71c45816513df424f1c7ffedb" translate="yes" xml:space="preserve">
          <source>Examples</source>
          <target state="translated">Examples</target>
        </trans-unit>
        <trans-unit id="fb3447b632f6a431215776dcf254a01001a40c4f" translate="yes" xml:space="preserve">
          <source>Examples:</source>
          <target state="translated">Examples:</target>
        </trans-unit>
        <trans-unit id="fab21b09d19911aff3ae61afac9d5dea2a3bb6c8" translate="yes" xml:space="preserve">
          <source>Execute this command in an empty folder to install Robo and Robo-paracept :</source>
          <target state="translated">빈 폴더에서이 명령을 실행하여 Robo 및 Robo-paracept를 설치하십시오.</target>
        </trans-unit>
        <trans-unit id="5e17cca4aaf6a0946feab949a5496c8655826380" translate="yes" xml:space="preserve">
          <source>Executes JavaScript and waits up to $timeout seconds for it to return true.</source>
          <target state="translated">JavaScript를 실행하고 true가 반환 될 때까지 최대 $ timeout 초 동안 기다립니다.</target>
        </trans-unit>
        <trans-unit id="19699c00c703600422f464c1e001d8e047b18794" translate="yes" xml:space="preserve">
          <source>Executes a shell command. Fails If exit code is &amp;gt; 0. You can disable this by setting second parameter to false</source>
          <target state="translated">쉘 명령을 실행합니다. 종료 코드가 0보다 크면 실패합니다. 두 번째 매개 변수를 false로 설정하여이 기능을 비활성화 할 수 있습니다</target>
        </trans-unit>
        <trans-unit id="47bf826fefbfe2a32e111b5d9ae0ee3015f3cd41" translate="yes" xml:space="preserve">
          <source>Executes asynchronous JavaScript. A callback should be executed by JavaScript to exit from a script. Callback is passed as a last element in &lt;code&gt;arguments&lt;/code&gt; array. Additional arguments can be passed as array in second parameter.</source>
          <target state="translated">비동기 JavaScript를 실행합니다. 스크립트를 종료하려면 JavaScript로 콜백을 실행해야합니다. 콜백은 &lt;code&gt;arguments&lt;/code&gt; 배열 에서 마지막 요소로 전달 됩니다. 추가 인수는 두 번째 매개 변수에서 배열로 전달 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="62e1111801481e6106201e33b6204a680f8442d7" translate="yes" xml:space="preserve">
          <source>Executes custom JavaScript.</source>
          <target state="translated">맞춤 자바 스크립트를 실행합니다.</target>
        </trans-unit>
        <trans-unit id="394450b7c2614c55e57dc5c3bf2c222c26dae262" translate="yes" xml:space="preserve">
          <source>Executes tests.</source>
          <target state="translated">테스트를 실행합니다.</target>
        </trans-unit>
        <trans-unit id="3dd77165b430e70bb2e8468d601275f32b7d392b" translate="yes" xml:space="preserve">
          <source>Executes the given regular expression against the current URI and returns the first capturing group. If no parameters are provided, the full URI is returned.</source>
          <target state="translated">현재 URI에 대해 지정된 정규식을 실행하고 첫 번째 캡처 그룹을 반환합니다. 매개 변수가 제공되지 않으면 전체 URI가 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="b32ef340ea4702fd5f41dbe4001671d76174ef71" translate="yes" xml:space="preserve">
          <source>Explanation</source>
          <target state="translated">Explanation</target>
        </trans-unit>
        <trans-unit id="11d8a56c60dbdf691b7319329004e9ed235c8527" translate="yes" xml:space="preserve">
          <source>Export:</source>
          <target state="translated">Export:</target>
        </trans-unit>
        <trans-unit id="5bc5322d7692a23a3f2b1582799a212c508a0823" translate="yes" xml:space="preserve">
          <source>Extending a Module</source>
          <target state="translated">모듈 확장</target>
        </trans-unit>
        <trans-unit id="659087d3ca23db6ae11e0a43579b5f4a260dda11" translate="yes" xml:space="preserve">
          <source>Extension</source>
          <target state="translated">Extension</target>
        </trans-unit>
        <trans-unit id="f12eae7cb9c6d1e069cd68a7eb6f2b49141a2f0d" translate="yes" xml:space="preserve">
          <source>Extensions can also be enabled per suite inside suite configs (like &lt;code&gt;acceptance.suite.yml&lt;/code&gt;) and for a specific environment.</source>
          <target state="translated">확장은 (같은 스위트 CONFIGS 내부 제품군별로 활성화 될 수 &lt;code&gt;acceptance.suite.yml&lt;/code&gt; ) 특정 환경.</target>
        </trans-unit>
        <trans-unit id="b206e04bdb1a94ec880e7c1d716390abe6bb7295" translate="yes" xml:space="preserve">
          <source>External URL&amp;rsquo;s</source>
          <target state="translated">외부 URL</target>
        </trans-unit>
        <trans-unit id="acb28212fba0272ee990cebd571ebe09b463312e" translate="yes" xml:space="preserve">
          <source>FTP</source>
          <target state="translated">FTP</target>
        </trans-unit>
        <trans-unit id="0780a545e2c123fb6b5ead204e72492fbeaf927b" translate="yes" xml:space="preserve">
          <source>FTP: &lt;strong&gt;stable&lt;/strong&gt;</source>
          <target state="translated">FTP : &lt;strong&gt;안정&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="763d2acebdd01f92876117874cc183330606560e" translate="yes" xml:space="preserve">
          <source>FTP::amInPath</source>
          <target state="translated">FTP::amInPath</target>
        </trans-unit>
        <trans-unit id="f69786cecf9764c0ed47825df522258b8feaedf2" translate="yes" xml:space="preserve">
          <source>FTP::cleanDir</source>
          <target state="translated">FTP::cleanDir</target>
        </trans-unit>
        <trans-unit id="e67d6e335c13253c2470db1a5b15cf3bfa3cd2f4" translate="yes" xml:space="preserve">
          <source>FTP::copyDir</source>
          <target state="translated">FTP::copyDir</target>
        </trans-unit>
        <trans-unit id="b437036215031459bb02a7e9921bf676b263d2f1" translate="yes" xml:space="preserve">
          <source>FTP::deleteDir</source>
          <target state="translated">FTP::deleteDir</target>
        </trans-unit>
        <trans-unit id="cacd92e09af10fb9628796e9bfb855ac1fb23385" translate="yes" xml:space="preserve">
          <source>FTP::deleteFile</source>
          <target state="translated">FTP::deleteFile</target>
        </trans-unit>
        <trans-unit id="16b9535ed2c3198c2dba229b82d4148e1232ef45" translate="yes" xml:space="preserve">
          <source>FTP::deleteThisFile</source>
          <target state="translated">FTP::deleteThisFile</target>
        </trans-unit>
        <trans-unit id="0f1ef7419b869330e4fb6ed187a2fd41335cae62" translate="yes" xml:space="preserve">
          <source>FTP::dontSeeFileFound</source>
          <target state="translated">FTP::dontSeeFileFound</target>
        </trans-unit>
        <trans-unit id="ba42e2e9bb9240e8c0a091f3c8ab3b28873635d2" translate="yes" xml:space="preserve">
          <source>FTP::dontSeeFileFoundMatches</source>
          <target state="translated">FTP::dontSeeFileFoundMatches</target>
        </trans-unit>
        <trans-unit id="945a3f2122cb30eaeccf934560674351d17204f1" translate="yes" xml:space="preserve">
          <source>FTP::dontSeeInThisFile</source>
          <target state="translated">FTP::dontSeeInThisFile</target>
        </trans-unit>
        <trans-unit id="be34c30f3daa884b1e0f8fbba821e8a402de5329" translate="yes" xml:space="preserve">
          <source>FTP::grabDirectory</source>
          <target state="translated">FTP::grabDirectory</target>
        </trans-unit>
        <trans-unit id="8ff0401bedbabb50a6ebe4b6754ef6d0bdde1cbf" translate="yes" xml:space="preserve">
          <source>FTP::grabFileCount</source>
          <target state="translated">FTP::grabFileCount</target>
        </trans-unit>
        <trans-unit id="5443fc6023825060cded150375b6c5a6b269158d" translate="yes" xml:space="preserve">
          <source>FTP::grabFileList</source>
          <target state="translated">FTP::grabFileList</target>
        </trans-unit>
        <trans-unit id="497f2b23c65c07f0cdf22bdf60410f243ac3c05f" translate="yes" xml:space="preserve">
          <source>FTP::grabFileModified</source>
          <target state="translated">FTP::grabFileModified</target>
        </trans-unit>
        <trans-unit id="52a76bb4caebff5814b0422ddd70028cc1d49b5b" translate="yes" xml:space="preserve">
          <source>FTP::grabFileSize</source>
          <target state="translated">FTP::grabFileSize</target>
        </trans-unit>
        <trans-unit id="5e9336fcd75c19178ad3ef4e6ce8dc15b58f3248" translate="yes" xml:space="preserve">
          <source>FTP::loginAs</source>
          <target state="translated">FTP::loginAs</target>
        </trans-unit>
        <trans-unit id="ccf9d1dac6865a35fe0a6f91d37135e2587caabb" translate="yes" xml:space="preserve">
          <source>FTP::makeDir</source>
          <target state="translated">FTP::makeDir</target>
        </trans-unit>
        <trans-unit id="5d2746b2edebb31072cb64b1a8d564462a7581a4" translate="yes" xml:space="preserve">
          <source>FTP::openFile</source>
          <target state="translated">FTP::openFile</target>
        </trans-unit>
        <trans-unit id="67dc18a29b094dbf311f6128ec4fa5a010dd6ec9" translate="yes" xml:space="preserve">
          <source>FTP::renameDir</source>
          <target state="translated">FTP::renameDir</target>
        </trans-unit>
        <trans-unit id="c12b54f9e2899225a3b8a5ee2f2df1c5dfa4ae3d" translate="yes" xml:space="preserve">
          <source>FTP::renameFile</source>
          <target state="translated">FTP::renameFile</target>
        </trans-unit>
        <trans-unit id="b6eac16057b6224bb8cd675667ef5734781731c8" translate="yes" xml:space="preserve">
          <source>FTP::seeFileContentsEqual</source>
          <target state="translated">FTP::seeFileContentsEqual</target>
        </trans-unit>
        <trans-unit id="ac7ee026044a84a05e7b4ae3cdc074a6abcd1da0" translate="yes" xml:space="preserve">
          <source>FTP::seeFileFound</source>
          <target state="translated">FTP::seeFileFound</target>
        </trans-unit>
        <trans-unit id="8683507823ad57516abcd7b8f8bba0f1dacadaa9" translate="yes" xml:space="preserve">
          <source>FTP::seeFileFoundMatches</source>
          <target state="translated">FTP::seeFileFoundMatches</target>
        </trans-unit>
        <trans-unit id="c7425aad09dec72d574cb97877fe4579ae3fe7c8" translate="yes" xml:space="preserve">
          <source>FTP::seeInThisFile</source>
          <target state="translated">FTP::seeInThisFile</target>
        </trans-unit>
        <trans-unit id="019d3cb7d2ff9f5684239bc774d45922ec84e3af" translate="yes" xml:space="preserve">
          <source>FTP::seeNumberNewLines</source>
          <target state="translated">FTP::seeNumberNewLines</target>
        </trans-unit>
        <trans-unit id="3497e57e55f1b742565441d13ddb64421a06d1c5" translate="yes" xml:space="preserve">
          <source>FTP::seeThisFileMatches</source>
          <target state="translated">FTP::seeThisFileMatches</target>
        </trans-unit>
        <trans-unit id="162ba51e059ba16d1a3496b1c19658d8398ad742" translate="yes" xml:space="preserve">
          <source>FTP::writeToFile</source>
          <target state="translated">FTP::writeToFile</target>
        </trans-unit>
        <trans-unit id="554cb5a51897141c3169906c3466a647ac7ce853" translate="yes" xml:space="preserve">
          <source>Factory Definitions are described in official &lt;a href=&quot;https://github.com/thephpleague/factory-muffin&quot;&gt;Factory Muffin Documentation&lt;/a&gt;</source>
          <target state="translated">공장 정의는 공식 &lt;a href=&quot;https://github.com/thephpleague/factory-muffin&quot;&gt;공장 머핀 설명서에&lt;/a&gt; 설명되어 있습니다</target>
        </trans-unit>
        <trans-unit id="d69fe276be9e0475ef22e216e227cfed39c67063" translate="yes" xml:space="preserve">
          <source>Fails if no such user found.</source>
          <target state="translated">해당 사용자를 찾지 못하면 실패합니다.</target>
        </trans-unit>
        <trans-unit id="f85899041a197b3427182db31a6607f9d7b3a2bf" translate="yes" xml:space="preserve">
          <source>Fails if record for given criteria can't be found,</source>
          <target state="translated">주어진 기준에 대한 기록을 찾을 수 없으면 실패합니다.</target>
        </trans-unit>
        <trans-unit id="f4d7f96f8edd012fe6a749403e9aa6b22bfc116c" translate="yes" xml:space="preserve">
          <source>Fails if such user was found.</source>
          <target state="translated">해당 사용자를 찾으면 실패합니다.</target>
        </trans-unit>
        <trans-unit id="5a1c72fb7b40218e0e152c98cfdfa1363d326031" translate="yes" xml:space="preserve">
          <source>Fails the test with message.</source>
          <target state="translated">메시지와 함께 테스트에 실패합니다.</target>
        </trans-unit>
        <trans-unit id="8db6a2f1d3b7e19e518ffa8979d7ad15359af460" translate="yes" xml:space="preserve">
          <source>Fast</source>
          <target state="translated">Fast</target>
        </trans-unit>
        <trans-unit id="ade67746c4c8ba1d8277d290e54ad674434baa7a" translate="yes" xml:space="preserve">
          <source>Fast and accurate, but no debug functionality &amp;mdash; perfect for CI</source>
          <target state="translated">빠르고 정확하지만 디버그 기능이 없음-CI에 적합</target>
        </trans-unit>
        <trans-unit id="9b6b9c0219a32363d1ceccf00a75eeaba2161591" translate="yes" xml:space="preserve">
          <source>Faster than &lt;code&gt;Xdebug&lt;/code&gt; but inaccurate</source>
          <target state="translated">&lt;code&gt;Xdebug&lt;/code&gt; 보다 빠르지 만 부정확</target>
        </trans-unit>
        <trans-unit id="2b3404f40b34761b89de85d7ee30dfae589ad444" translate="yes" xml:space="preserve">
          <source>Feature file is written in Gherkin format. Codeception can generate a feature file for you. We will assume that we will use scenarios in feature files for acceptance tests, so feature files to be placed in &lt;code&gt;acceptance&lt;/code&gt; suite directory:</source>
          <target state="translated">피처 파일은 작은 오이 형식으로 작성됩니다. Codeception은 기능 파일을 생성 할 수 있습니다. 승인 테스트를 위해 기능 파일에서 시나리오를 사용한다고 가정하므로 기능 파일은 &lt;code&gt;acceptance&lt;/code&gt; 스위트 디렉토리에 배치됩니다 .</target>
        </trans-unit>
        <trans-unit id="fc338f87a058158eb824b53705961801516a9460" translate="yes" xml:space="preserve">
          <source>Features</source>
          <target state="translated">Features</target>
        </trans-unit>
        <trans-unit id="e45a66467e25022582831c207b317fcf5c5c55c1" translate="yes" xml:space="preserve">
          <source>Fetches all values from the column in database. Provide table name, desired column and criteria.</source>
          <target state="translated">데이터베이스의 열에서 모든 값을 가져옵니다. 테이블 이름, 원하는 열 및 기준을 제공하십시오.</target>
        </trans-unit>
        <trans-unit id="98f165ab9e795c7b2017db195a96297ae6cd8acd" translate="yes" xml:space="preserve">
          <source>Field names ending in &amp;ldquo;[]&amp;rdquo; must be passed without the trailing square bracket characters, and must contain an array for its value. This allows submitting multiple values with the same name, consider:</source>
          <target state="translated">&quot;[]&quot;로 끝나는 필드 이름은 후행 대괄호 문자없이 전달되어야하며 해당 값에 대한 배열을 포함해야합니다. 이를 통해 동일한 이름으로 여러 값을 제출할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c5678e243263579b0accd1d9e85f7b94fef56809" translate="yes" xml:space="preserve">
          <source>Field names ending in &lt;code&gt;[]&lt;/code&gt; must be passed without the trailing square bracket characters, and must contain an array for its value. This allows submitting multiple values with the same name, consider:</source>
          <target state="translated">&lt;code&gt;[]&lt;/code&gt; 로 끝나는 필드 이름 은 후행 대괄호 문자없이 전달되어야하며 해당 값에 대한 배열을 포함해야합니다. 이를 통해 동일한 이름으로 여러 값을 제출할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="46e6be06ad1ceb613f1e218c96c13110a5e5f3a1" translate="yes" xml:space="preserve">
          <source>Fields that are not provided will be filled by their values from the page, or from any previous calls to &lt;code&gt;fillField()&lt;/code&gt;, &lt;code&gt;selectOption()&lt;/code&gt; etc. You don&amp;rsquo;t need to click the &amp;lsquo;Submit&amp;rsquo; button afterwards. This command itself triggers the request to form&amp;rsquo;s action.</source>
          <target state="translated">제공되지 않은 필드는 페이지 또는 &lt;code&gt;fillField()&lt;/code&gt; , &lt;code&gt;selectOption()&lt;/code&gt; 등의 이전 호출에서 값으로 채워집니다 . 나중에 '제출'버튼을 클릭 할 필요가 없습니다. 이 명령 자체는 양식의 요청을 트리거합니다.</target>
        </trans-unit>
        <trans-unit id="c2c3b1d4661539040b4bd604f59f74d32cd59506" translate="yes" xml:space="preserve">
          <source>File &lt;code&gt;init_autoloader&lt;/code&gt; in project&amp;rsquo;s root is required by Zend Framework 2. Uses &lt;code&gt;tests/application.config.php&lt;/code&gt; config file by default.</source>
          <target state="translated">Zend Framework 2에는 프로젝트 루트의 &lt;code&gt;init_autoloader&lt;/code&gt; 파일 이 필요합니다 . 기본적으로 &lt;code&gt;tests/application.config.php&lt;/code&gt; 구성 파일을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="092fe85f5c2e62269fa44ec1fcbf190e92f16564" translate="yes" xml:space="preserve">
          <source>Filesystem</source>
          <target state="translated">Filesystem</target>
        </trans-unit>
        <trans-unit id="cab473e50b279a33f94cdab66842ec7e950bb42a" translate="yes" xml:space="preserve">
          <source>Filesystem::amInPath</source>
          <target state="translated">Filesystem::amInPath</target>
        </trans-unit>
        <trans-unit id="f6cf2d8810b62ac31d84c18c7e53642e7c724ebe" translate="yes" xml:space="preserve">
          <source>Filesystem::cleanDir</source>
          <target state="translated">Filesystem::cleanDir</target>
        </trans-unit>
        <trans-unit id="7aca0da4d657ab32d86ddd49223881ff7be36e4c" translate="yes" xml:space="preserve">
          <source>Filesystem::copyDir</source>
          <target state="translated">Filesystem::copyDir</target>
        </trans-unit>
        <trans-unit id="519bebf2465b9d64c1a4f44f0894ca157f89c2b5" translate="yes" xml:space="preserve">
          <source>Filesystem::deleteDir</source>
          <target state="translated">Filesystem::deleteDir</target>
        </trans-unit>
        <trans-unit id="ffd88e13f63910df163462f672961a558a787d5d" translate="yes" xml:space="preserve">
          <source>Filesystem::deleteFile</source>
          <target state="translated">Filesystem::deleteFile</target>
        </trans-unit>
        <trans-unit id="16efeee7ddd218774c54ec26caf6aa9a8903e0c9" translate="yes" xml:space="preserve">
          <source>Filesystem::deleteThisFile</source>
          <target state="translated">Filesystem::deleteThisFile</target>
        </trans-unit>
        <trans-unit id="ffe3044a455058606458cf0f4dbffef49dcc7cff" translate="yes" xml:space="preserve">
          <source>Filesystem::dontSeeFileFound</source>
          <target state="translated">Filesystem::dontSeeFileFound</target>
        </trans-unit>
        <trans-unit id="c198b7ad029a133084b03829dcf16227bf8add7c" translate="yes" xml:space="preserve">
          <source>Filesystem::dontSeeInThisFile</source>
          <target state="translated">Filesystem::dontSeeInThisFile</target>
        </trans-unit>
        <trans-unit id="7617e5f9bf90e9f8d1a240197a188d51930cd5dd" translate="yes" xml:space="preserve">
          <source>Filesystem::openFile</source>
          <target state="translated">Filesystem::openFile</target>
        </trans-unit>
        <trans-unit id="57f60d8ff5ddab2207f9b030d57456c465b00029" translate="yes" xml:space="preserve">
          <source>Filesystem::seeFileContentsEqual</source>
          <target state="translated">Filesystem::seeFileContentsEqual</target>
        </trans-unit>
        <trans-unit id="94f660f4b3aab1254145f25832523a6bd0010006" translate="yes" xml:space="preserve">
          <source>Filesystem::seeFileFound</source>
          <target state="translated">Filesystem::seeFileFound</target>
        </trans-unit>
        <trans-unit id="d38485ca9a1fb5a5e0f1a69cfb029bbfcba67ea3" translate="yes" xml:space="preserve">
          <source>Filesystem::seeInThisFile</source>
          <target state="translated">Filesystem::seeInThisFile</target>
        </trans-unit>
        <trans-unit id="926fbcc9e5d2a68e6b844bce00d1286394017a99" translate="yes" xml:space="preserve">
          <source>Filesystem::seeNumberNewLines</source>
          <target state="translated">Filesystem::seeNumberNewLines</target>
        </trans-unit>
        <trans-unit id="d01df88d6be122dcc469483a558db6055b3d7101" translate="yes" xml:space="preserve">
          <source>Filesystem::seeThisFileMatches</source>
          <target state="translated">Filesystem::seeThisFileMatches</target>
        </trans-unit>
        <trans-unit id="ab96b56074bc725c928dfdf609ad67aefc876867" translate="yes" xml:space="preserve">
          <source>Filesystem::writeToFile</source>
          <target state="translated">Filesystem::writeToFile</target>
        </trans-unit>
        <trans-unit id="54be8c599f372cd32305a3f8c504a0deee805b54" translate="yes" xml:space="preserve">
          <source>Fills a text field or textarea with the given string.</source>
          <target state="translated">주어진 문자열로 텍스트 필드 또는 텍스트 영역을 채 웁니다.</target>
        </trans-unit>
        <trans-unit id="70f8c2dd3f5be9de3f1a2a07995f2362c00bea22" translate="yes" xml:space="preserve">
          <source>Finds and returns attribute of element. Element is matched by either CSS or XPath</source>
          <target state="translated">요소의 속성을 찾아 반환합니다. 요소가 CSS 또는 XPath와 일치</target>
        </trans-unit>
        <trans-unit id="9122e357a5173a20c90a36c465d58aa08e806847" translate="yes" xml:space="preserve">
          <source>Finds and returns text contents of element. Element is matched by either CSS or XPath</source>
          <target state="translated">요소의 텍스트 내용을 찾아 반환합니다. 요소가 CSS 또는 XPath와 일치</target>
        </trans-unit>
        <trans-unit id="48d394546793042e34746aa2bf6554731fb7ce4b" translate="yes" xml:space="preserve">
          <source>Finds and returns the text contents of the given element. If a fuzzy locator is used, the element is found using CSS, XPath, and by matching the full page source by regular expression.</source>
          <target state="translated">주어진 요소의 텍스트 내용을 찾아 반환합니다. 퍼지 로케이터를 사용하는 경우 CSS, XPath를 사용하고 정규식으로 전체 페이지 소스를 일치시켜 요소를 찾습니다.</target>
        </trans-unit>
        <trans-unit id="0ccca32b78d33c35c7923be3c4f949ad10e67ccb" translate="yes" xml:space="preserve">
          <source>Finds element by it&amp;rsquo;s attribute(s)</source>
          <target state="translated">속성별로 요소를 찾습니다.</target>
        </trans-unit>
        <trans-unit id="d7006d8eafa79b47ace4849c5b156dccb6a8ab65" translate="yes" xml:space="preserve">
          <source>Finds the value for the given form field. If a fuzzy locator is used, the field is found by field name, CSS, and XPath.</source>
          <target state="translated">주어진 양식 필드의 값을 찾습니다. 퍼지 로케이터를 사용하는 경우 필드 이름, CSS 및 XPath로 필드를 찾습니다.</target>
        </trans-unit>
        <trans-unit id="93a9d4b62c49df4936d5f701755ab05d3a9187a5" translate="yes" xml:space="preserve">
          <source>Fixtures</source>
          <target state="translated">Fixtures</target>
        </trans-unit>
        <trans-unit id="d03caec7905be5d872d1e6ee7aa67a6e288564bf" translate="yes" xml:space="preserve">
          <source>Fixtures::add()</source>
          <target state="translated">Fixtures::add()</target>
        </trans-unit>
        <trans-unit id="641fd0a935bd46193ae38bdd566fe2695b033b82" translate="yes" xml:space="preserve">
          <source>Fixtures::cleanup()</source>
          <target state="translated">Fixtures::cleanup()</target>
        </trans-unit>
        <trans-unit id="9b6eb2c19b3bfe0030ff27eb56cdb27a1837a09f" translate="yes" xml:space="preserve">
          <source>Fixtures::exists()</source>
          <target state="translated">Fixtures::exists()</target>
        </trans-unit>
        <trans-unit id="67b625eed4a4b1f29acf5409fdc953ab8718a9fd" translate="yes" xml:space="preserve">
          <source>Fixtures::get()</source>
          <target state="translated">Fixtures::get()</target>
        </trans-unit>
        <trans-unit id="8165a9d7bab70ebfa6a3233f9bc83af1e5144733" translate="yes" xml:space="preserve">
          <source>Flushes all Memcached data.</source>
          <target state="translated">모든 Memcached 데이터를 플러시합니다.</target>
        </trans-unit>
        <trans-unit id="be0a1b4d97c32af3b91b7967717fb373f7bcab90" translate="yes" xml:space="preserve">
          <source>Flushes changes to database and performs &lt;code&gt;findOneBy()&lt;/code&gt; call for current repository.</source>
          <target state="translated">데이터베이스 변경 사항을 플러시 하고 현재 저장소에 대한 &lt;code&gt;findOneBy()&lt;/code&gt; 호출을 수행 합니다.</target>
        </trans-unit>
        <trans-unit id="57280625a9cc73a8a9e4e9dd2e54ea6330efb03c" translate="yes" xml:space="preserve">
          <source>Flushes changes to database, and executes a query with parameters defined in an array. You can use entity associations to build complex queries.</source>
          <target state="translated">데이터베이스 변경 사항을 플러시하고 배열에 정의 된 매개 변수를 사용하여 쿼리를 실행합니다. 엔터티 연결을 사용하여 복잡한 쿼리를 작성할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e95f12a4e8063cd6a5b285fae3c278c974b363e6" translate="yes" xml:space="preserve">
          <source>Follow &lt;a href=&quot;modules/webdriver#ChromeDriver&quot;&gt;Installation Instructions&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;modules/webdriver#ChromeDriver&quot;&gt;설치 지침을&lt;/a&gt; 따르십시오</target>
        </trans-unit>
        <trans-unit id="cafb2a3b56a193c5b48cb8d0e830cad6e088983d" translate="yes" xml:space="preserve">
          <source>Follow &lt;a href=&quot;modules/webdriver#PhantomJS&quot;&gt;Installation Instructions&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;modules/webdriver#PhantomJS&quot;&gt;설치 지침을&lt;/a&gt; 따르십시오</target>
        </trans-unit>
        <trans-unit id="45371d561d59e5e0a9bdeab6baf8e6666f24836d" translate="yes" xml:space="preserve">
          <source>Follow &lt;a href=&quot;modules/webdriver#Selenium&quot;&gt;Installation Instructions&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;modules/webdriver#Selenium&quot;&gt;설치 지침을&lt;/a&gt; 따르십시오</target>
        </trans-unit>
        <trans-unit id="4280792c6c5e17768bc1a1dcbdd22e8b94e507d0" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;.feature&lt;/code&gt;-files (Gherkin) use tags:</source>
          <target state="translated">대한 &lt;code&gt;.feature&lt;/code&gt; -files (작은 오이) 사용 태그 :</target>
        </trans-unit>
        <trans-unit id="e295f51e9efc0ec694ded19e4550dd77fc31b416" translate="yes" xml:space="preserve">
          <source>For Cept files, use pseudo-annotations in comments:</source>
          <target state="translated">Cept 파일의 경우 주석에 의사 주석을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="3679c66aa2d496751c4577b6f1c425f0dd1170f4" translate="yes" xml:space="preserve">
          <source>For Cept you should use simple comments:</source>
          <target state="translated">Cept의 경우 간단한 주석을 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="4ea84be8b35918f924471a4e8f29495407e15f4d" translate="yes" xml:space="preserve">
          <source>For MySQL:</source>
          <target state="translated">MySQL의 경우 :</target>
        </trans-unit>
        <trans-unit id="35cfe20c4c0d4ecf103a67b74e54ad2834d433f6" translate="yes" xml:space="preserve">
          <source>For PostgreSQL (using pg_restore)</source>
          <target state="translated">PostgreSQL의 경우 (pg_restore 사용)</target>
        </trans-unit>
        <trans-unit id="149646e072711a72d9af219565f1d2b2b4ced72e" translate="yes" xml:space="preserve">
          <source>For SFTP, add &lt;a href=&quot;http://phpseclib.sourceforge.net/&quot;&gt;phpseclib&lt;/a&gt; to require list.</source>
          <target state="translated">SFTP의 경우 &lt;a href=&quot;http://phpseclib.sourceforge.net/&quot;&gt;phpseclib&lt;/a&gt; 를 추가 하여 목록을 요구하십시오.</target>
        </trans-unit>
        <trans-unit id="6e8c0f38a4456eae29843dc013f8fd1310b4d511" translate="yes" xml:space="preserve">
          <source>For Test and Cest files you can use the &lt;code&gt;@group&lt;/code&gt; annotation to add a test to a group.</source>
          <target state="translated">테스트 및 Cest 파일의 경우 &lt;code&gt;@group&lt;/code&gt; 주석을 사용하여 그룹에 테스트를 추가 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="c92d9ed29c4c601f88a69b431c4c9d56b8b1334b" translate="yes" xml:space="preserve">
          <source>For acceptance and functional testing, we will not only need to have common actions being reused across different tests, we should have buttons, links and form fields being reused as well. For those cases we need to implement the &lt;a href=&quot;http://docs.seleniumhq.org/docs/06_test_design_considerations.jsp#page-object-design-pattern&quot;&gt;PageObject pattern&lt;/a&gt;, which is widely used by test automation engineers. The PageObject pattern represents a web page as a class and the DOM elements on that page as its properties, and some basic interactions as its methods. PageObjects are very important when you are developing a flexible architecture of your tests. Do not hard-code complex CSS or XPath locators in your tests but rather move them into PageObject classes.</source>
          <target state="translated">승인 및 기능 테스트를 위해 여러 테스트에서 공통적 인 작업을 다시 수행해야 할뿐만 아니라 버튼, 링크 및 양식 필드도 재사용해야합니다. 이러한 경우 테스트 자동화 엔지니어가 널리 사용 하는 &lt;a href=&quot;http://docs.seleniumhq.org/docs/06_test_design_considerations.jsp#page-object-design-pattern&quot;&gt;PageObject 패턴&lt;/a&gt; 을 구현해야합니다 . PageObject 패턴은 웹 페이지를 클래스로 나타내고 해당 페이지의 DOM 요소를 속성으로 나타내며 기본 상호 작용을 메소드로 나타냅니다. 유연한 테스트 아키텍처를 개발할 때 PageObjects가 매우 중요합니다. 테스트에서 복잡한 CSS 또는 XPath 로케이터를 하드 코딩하지 말고 PageObject 클래스로 옮기십시오.</target>
        </trans-unit>
        <trans-unit id="077cc1eacd96c5851ea96885059b24ca7961fd9b" translate="yes" xml:space="preserve">
          <source>For acceptance testing you can use &lt;code&gt;codeception/codeception&lt;/code&gt; docker image as base.</source>
          <target state="translated">승인 테스트를 위해 &lt;code&gt;codeception/codeception&lt;/code&gt; docker 이미지를 기본으로 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="a0a3403d3583d0ae44f13946592552b9115dd010" translate="yes" xml:space="preserve">
          <source>For bash and zsh shells, you can use auto-completion for your Codeception projects by executing the following in your shell (or add it to your .bashrc/.zshrc):</source>
          <target state="translated">bash 및 zsh 셸의 경우 셸에서 다음을 실행하여 Codeception 프로젝트에 자동 완성을 사용할 수 있습니다 (또는 .bashrc / .zshrc에 추가).</target>
        </trans-unit>
        <trans-unit id="34f221c46187c51146f04cb4c3771175eb7a67cc" translate="yes" xml:space="preserve">
          <source>For cases where you need to run tests with different configurations you can define different config environments. The most typical use cases are running acceptance tests in different browsers, or running database tests using different database engines.</source>
          <target state="translated">다른 구성으로 테스트를 실행해야하는 경우 다른 구성 환경을 정의 할 수 있습니다. 가장 일반적인 사용 사례는 다른 브라우저에서 승인 테스트를 실행하거나 다른 데이터베이스 엔진을 사용하여 데이터베이스 테스트를 실행하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="cfa7483cae0e310c58dddda3b5608b8b90b01261" translate="yes" xml:space="preserve">
          <source>For checking the raw source code, use &lt;code&gt;seeInSource()&lt;/code&gt;.</source>
          <target state="translated">원시 소스 코드를 확인하려면 &lt;code&gt;seeInSource()&lt;/code&gt; 사용 하십시오 .</target>
        </trans-unit>
        <trans-unit id="6ba63985735fc148d46fac8878b7fe1b04328346" translate="yes" xml:space="preserve">
          <source>For example, given the following HTML:</source>
          <target state="translated">예를 들어 다음 HTML이 주어진 경우</target>
        </trans-unit>
        <trans-unit id="ac59b3ddb06620b2460953250c22c1ba238be353" translate="yes" xml:space="preserve">
          <source>For example, given this sample &amp;ldquo;Sign Up&amp;rdquo; form:</source>
          <target state="translated">예를 들어,이 샘플 &quot;가입&quot;양식이있는 경우 :</target>
        </trans-unit>
        <trans-unit id="059c3e8cce263b2945a18ac90b2637e10a8026b1" translate="yes" xml:space="preserve">
          <source>For example:</source>
          <target state="translated">예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="fe57cfd9cc14d8271629d807c13fda750c0d3cd2" translate="yes" xml:space="preserve">
          <source>For functional tests, you emulate a web request (&lt;code&gt;$_GET&lt;/code&gt; and &lt;code&gt;$_POST&lt;/code&gt; variables) which returns the HTML response. Inside a test, you can make assertions about the response, and you can check if the data was successfully stored in the database.</source>
          <target state="translated">기능 테스트의 경우 HTML 응답을 반환 하는 웹 요청 ( &lt;code&gt;$_GET&lt;/code&gt; 및 &lt;code&gt;$_POST&lt;/code&gt; 변수)을 에뮬레이션합니다 . 테스트 내에서 응답에 대한 어설 션을 작성하고 데이터가 데이터베이스에 성공적으로 저장되었는지 확인할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="54c2e38e16cc69967552919600054e0f3be33db7" translate="yes" xml:space="preserve">
          <source>For functional tests, your application needs to be structured in order to run in a test environment. Codeception provides connectors to several popular PHP frameworks. You can also write your own.</source>
          <target state="translated">기능 테스트의 경우 테스트 환경에서 실행되도록 애플리케이션을 구성해야합니다. Codeception은 널리 사용되는 여러 PHP 프레임 워크에 대한 커넥터를 제공합니다. 직접 쓸 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="f73fa4507187473b88aad3ba89c8240d9e465ca7" translate="yes" xml:space="preserve">
          <source>For further information please refer to the &lt;a href=&quot;https://phpunit.readthedocs.io/en/latest/configuration.html&quot;&gt;PHPUnit configuration docs&lt;/a&gt;</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;https://phpunit.readthedocs.io/en/latest/configuration.html&quot;&gt;PHPUnit 구성 문서&lt;/a&gt; 를 참조하십시오</target>
        </trans-unit>
        <trans-unit id="34ba33f0e66aec4abd030e4b1f55287193ed75e6" translate="yes" xml:space="preserve">
          <source>For instance, &lt;a href=&quot;https://www.browserstack.com/automate/capabilities&quot;&gt;&lt;strong&gt;BrowserStack&lt;/strong&gt; cloud service&lt;/a&gt; may require a test name to be set in capabilities. This is how it can be done via &lt;code&gt;_capabilities&lt;/code&gt; method from &lt;code&gt;Helper\Acceptance&lt;/code&gt;:</source>
          <target state="translated">예를 들어 &lt;a href=&quot;https://www.browserstack.com/automate/capabilities&quot;&gt;&lt;strong&gt;BrowserStack&lt;/strong&gt; 클라우드 서비스&lt;/a&gt; 에는 기능에서 테스트 이름을 설정해야 할 수 있습니다. &lt;code&gt;Helper\Acceptance&lt;/code&gt; &lt;code&gt;_capabilities&lt;/code&gt; 메소드를 통해 수행 할 수있는 방법입니다 .</target>
        </trans-unit>
        <trans-unit id="3cf030e817000ddf81895ee97cccde4d3f7027bd" translate="yes" xml:space="preserve">
          <source>For instance, the Laravel5 module has an ORM part which contains database actions. You can enable the PhpBrowser module for testing and Laravel + ORM for connecting to the database and checking the data.</source>
          <target state="translated">예를 들어 Laravel5 모듈에는 데이터베이스 작업이 포함 된 ORM 부분이 있습니다. 테스트에 PhpBrowser 모듈을 활성화하고 데이터베이스에 연결하고 데이터를 확인하기 위해 Laravel + ORM을 활성화 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d42fda0615fb6c998497cc27225abadc0e9fc0b4" translate="yes" xml:space="preserve">
          <source>For instance, to test CRUD we want 4 methods to be implemented and all next tests should start at &lt;code&gt;/task&lt;/code&gt; page:</source>
          <target state="translated">예를 들어, CRUD를 테스트하려면 4 가지 메소드를 구현하고 &lt;code&gt;/task&lt;/code&gt; 페이지 에서 모든 다음 테스트를 시작해야 합니다.</target>
        </trans-unit>
        <trans-unit id="ae8a607eb667051d85442e8c9aae76714c5d0e70" translate="yes" xml:space="preserve">
          <source>For more options see &lt;a href=&quot;modules/webdriver#performOn&quot;&gt;&lt;code&gt;performOn()&lt;/code&gt; reference&lt;/a&gt;.</source>
          <target state="translated">자세한 옵션은 &lt;a href=&quot;modules/webdriver#performOn&quot;&gt; &lt;code&gt;performOn()&lt;/code&gt; 참조를 참조하십시오&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="873056bf13d39ab95932b56e07a9c10d42de2fad" translate="yes" xml:space="preserve">
          <source>For multi-select elements, or to check values of multiple elements with the same name, an array may be passed:</source>
          <target state="translated">다중 선택 요소의 경우 또는 이름이 같은 여러 요소의 값을 확인하려면 배열이 전달 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3a3b71d610d85d49fad862cd712d9dbb0271b416" translate="yes" xml:space="preserve">
          <source>For optional parameters, you should set default values. The &lt;code&gt;$config&lt;/code&gt; property is used to define optional parameters as well as their values. In the WebDriver module we use the default Selenium Server address and port.</source>
          <target state="translated">선택적 매개 변수의 경우 기본값을 설정해야합니다. &lt;code&gt;$config&lt;/code&gt; 속성은 선택적 매개 변수뿐만 아니라 값을 정의하는 데 사용됩니다. WebDriver 모듈에서는 기본 Selenium 서버 주소와 포트를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="0c2b3270f81d8efef9bfe83f07e50b9f2cf3091f" translate="yes" xml:space="preserve">
          <source>For this case we have a stand-alone project &lt;a href=&quot;https://github.com/Codeception/Specify&quot;&gt;Specify&lt;/a&gt; (which is included in the phar package) for writing specifications inside unit tests:</source>
          <target state="translated">이 경우 단위 테스트 내에 사양을 작성하기위한 Stand-alone project &lt;a href=&quot;https://github.com/Codeception/Specify&quot;&gt;Specify&lt;/a&gt; (phar 패키지에 포함)가 있습니다.</target>
        </trans-unit>
        <trans-unit id="2804d9f16a38553f8238529c90d66e7d7426c150" translate="yes" xml:space="preserve">
          <source>Formats</source>
          <target state="translated">Formats</target>
        </trans-unit>
        <trans-unit id="4bec9575721b2739ed1e7c56eb6c8471084fcbcf" translate="yes" xml:space="preserve">
          <source>Forms</source>
          <target state="translated">Forms</target>
        </trans-unit>
        <trans-unit id="e77c86f29410406ccc7be23aa74e3143a35dfdc0" translate="yes" xml:space="preserve">
          <source>Framework modules also contain additional methods to access framework internals. For instance, Laravel5, Phalcon, and Yii2 modules have a &lt;code&gt;seeRecord&lt;/code&gt; method which uses the ActiveRecord layer to check that a record exists in the database.</source>
          <target state="translated">프레임 워크 모듈에는 프레임 워크 내부에 액세스하기위한 추가 방법도 포함되어 있습니다. 예를 들어 Laravel5, Phalcon 및 Yii2 모듈에는 ActiveRecord 계층을 사용하여 레코드가 데이터베이스에 있는지 확인 하는 &lt;code&gt;seeRecord&lt;/code&gt; 메소드가 있습니다.</target>
        </trans-unit>
        <trans-unit id="230e839b4b298fa52bedbb4f73f7a3b720691150" translate="yes" xml:space="preserve">
          <source>From a user&amp;rsquo;s perspective, a form consists of fields which should be filled in, and then a submit button clicked:</source>
          <target state="translated">사용자 관점에서 양식은 채워야하는 필드로 구성되고 제출 단추가 클릭됩니다.</target>
        </trans-unit>
        <trans-unit id="c23e371a0ebdc14e69250d4558deb51f38f28e90" translate="yes" xml:space="preserve">
          <source>From the developer&amp;rsquo;s perspective, submitting a form is just sending a valid POST request to the server. Sometimes it&amp;rsquo;s easier to fill in all of the fields at once and send the form without clicking a &amp;lsquo;Submit&amp;rsquo; button. A similar scenario can be rewritten with only one command:</source>
          <target state="translated">개발자의 관점에서 양식을 제출하는 것은 서버에 유효한 POST 요청을 보내는 것입니다. 때로는 모든 필드를 한 번에 채우고 '제출'버튼을 클릭하지 않고 양식을 보내는 것이 더 쉽습니다. 하나의 명령으로 유사한 시나리오를 다시 작성할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9eaae7c2f954f888a61cb3b5d70a29942e6dd2f8" translate="yes" xml:space="preserve">
          <source>Full reference:</source>
          <target state="translated">전체 참조 :</target>
        </trans-unit>
        <trans-unit id="dc9f6f603ab3ba9e205909d78198a6738617fe1a" translate="yes" xml:space="preserve">
          <source>Function &lt;code&gt;sq&lt;/code&gt; generates sequence, the only parameter it takes, is id. You can get back to previously generated sequence using that id:</source>
          <target state="translated">함수 &lt;code&gt;sq&lt;/code&gt; 는 시퀀스를 생성하며, 유일한 매개 변수는 id입니다. 해당 ID를 사용하여 이전에 생성 된 시퀀스로 돌아갈 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="dc8cc17fb9092b97f58b24c8584410fc2ce9317e" translate="yes" xml:space="preserve">
          <source>Functional Tests</source>
          <target state="translated">기능 테스트</target>
        </trans-unit>
        <trans-unit id="51d813224c56b3851422593a485a03c3c95c745d" translate="yes" xml:space="preserve">
          <source>Functional tests are great if you are using powerful frameworks. By using functional tests you can access and manipulate their internal state. This makes your tests shorter and faster. In other cases, if you don&amp;rsquo;t use frameworks there is no practical reason to write functional tests. If you are using a framework other than the ones listed here, create a module for it and share it with the community.</source>
          <target state="translated">강력한 프레임 워크를 사용하는 경우 기능 테스트가 훌륭합니다. 기능 테스트를 사용하여 내부 상태에 액세스하고 조작 할 수 있습니다. 이렇게하면 테스트가 더 짧고 빨라집니다. 다른 경우에는 프레임 워크를 사용하지 않으면 기능 테스트를 작성해야 할 실질적인 이유가 없습니다. 여기에 나열된 것 이외의 프레임 워크를 사용하는 경우 해당 모듈을 작성하여 커뮤니티와 공유하십시오.</target>
        </trans-unit>
        <trans-unit id="a3d2ac90d205628e88b977671f545d4d5f18b48a" translate="yes" xml:space="preserve">
          <source>Functional tests are usually much faster than acceptance tests. But functional tests are less stable as they run Codeception and the application in one environment. If your application was not designed to run in long lived processes (e.g. if you use the &lt;code&gt;exit&lt;/code&gt; operator or global variables), then functional tests are probably not for you.</source>
          <target state="translated">기능 테스트는 일반적으로 승인 테스트보다 훨씬 빠릅니다. 그러나 기능 테스트는 한 환경에서 Codeception과 응용 프로그램을 실행할 때 안정성이 떨어집니다. 애플리케이션이 오래 지속되는 프로세스에서 실행되도록 설계되지 않은 경우 (예 : &lt;code&gt;exit&lt;/code&gt; 연산자 또는 전역 변수 를 사용하는 경우 ) 기능 테스트는 적합하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="d72d7693f9c6a84a94483dfe2ca7226a8faa9844" translate="yes" xml:space="preserve">
          <source>Functional tests are written in the same manner as &lt;a href=&quot;03-acceptancetests&quot;&gt;Acceptance Tests&lt;/a&gt; with the &lt;code&gt;PhpBrowser&lt;/code&gt; module enabled. All framework modules and the &lt;code&gt;PhpBrowser&lt;/code&gt; module share the same methods and the same engine.</source>
          <target state="translated">기능 테스트는 &lt;code&gt;PhpBrowser&lt;/code&gt; 모듈이 활성화 된 &lt;a href=&quot;03-acceptancetests&quot;&gt;수락 테스트&lt;/a&gt; 와 같은 방식으로 작성됩니다 . 모든 프레임 워크 모듈과 &lt;code&gt;PhpBrowser&lt;/code&gt; 모듈은 동일한 메소드와 동일한 엔진을 공유합니다.</target>
        </trans-unit>
        <trans-unit id="7ee5ba06f318a8dcffdfa92dd82f841cf66634eb" translate="yes" xml:space="preserve">
          <source>Functional tests cannot access external URL&amp;rsquo;s, just URL&amp;rsquo;s within your project. You can use Guzzle to open external URL&amp;rsquo;s.</source>
          <target state="translated">기능 테스트는 외부 URL, 프로젝트 내의 URL에만 액세스 할 수 없습니다. Guzzle을 사용하여 외부 URL을 열 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="dc0f2e0e9b3e59990dec30a0ac81c70cc4f019cf" translate="yes" xml:space="preserve">
          <source>GenerateCept</source>
          <target state="translated">GenerateCept</target>
        </trans-unit>
        <trans-unit id="ee1f6396ad85edee909bfb6c4bcf6a95475de60d" translate="yes" xml:space="preserve">
          <source>GenerateCest</source>
          <target state="translated">GenerateCest</target>
        </trans-unit>
        <trans-unit id="2e780b624e3dcc3cbb676c84d7487a91a5de2ae5" translate="yes" xml:space="preserve">
          <source>GenerateEnvironment</source>
          <target state="translated">GenerateEnvironment</target>
        </trans-unit>
        <trans-unit id="55cd58ec496bcafbf58506dda6e6b6532042aefd" translate="yes" xml:space="preserve">
          <source>GenerateFeature</source>
          <target state="translated">GenerateFeature</target>
        </trans-unit>
        <trans-unit id="196f9fd11c8f6645b46c5d9c811c719260c06108" translate="yes" xml:space="preserve">
          <source>GenerateGroup</source>
          <target state="translated">GenerateGroup</target>
        </trans-unit>
        <trans-unit id="3e829afe203cf22b4063d313407b333d6b0149e2" translate="yes" xml:space="preserve">
          <source>GenerateHelper</source>
          <target state="translated">GenerateHelper</target>
        </trans-unit>
        <trans-unit id="2448e38fa0d8bc7b440530199706912f01087cff" translate="yes" xml:space="preserve">
          <source>GeneratePageObject</source>
          <target state="translated">GeneratePageObject</target>
        </trans-unit>
        <trans-unit id="8487977ca1daf437931942eeaa221d6ae3f641df" translate="yes" xml:space="preserve">
          <source>GenerateScenarios</source>
          <target state="translated">GenerateScenarios</target>
        </trans-unit>
        <trans-unit id="118a641a787953219a9895146709b3a5a003448c" translate="yes" xml:space="preserve">
          <source>GenerateSnapshot</source>
          <target state="translated">GenerateSnapshot</target>
        </trans-unit>
        <trans-unit id="175bb6e896c3b79289657048fabf5c28053af113" translate="yes" xml:space="preserve">
          <source>GenerateStepObject</source>
          <target state="translated">GenerateStepObject</target>
        </trans-unit>
        <trans-unit id="fc85a0f9024f036a90f617879cb102ce48e321e9" translate="yes" xml:space="preserve">
          <source>GenerateSuite</source>
          <target state="translated">GenerateSuite</target>
        </trans-unit>
        <trans-unit id="37a3c70af70896b775ac323695d46b4501ee732a" translate="yes" xml:space="preserve">
          <source>GenerateTest</source>
          <target state="translated">GenerateTest</target>
        </trans-unit>
        <trans-unit id="9dd86cb202e4108ea6a3d2ab9681507e4b03fb27" translate="yes" xml:space="preserve">
          <source>Generated template will look like this:</source>
          <target state="translated">생성 된 템플릿은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="e5fa869705cae9fd309004f72d2cea7318b49458" translate="yes" xml:space="preserve">
          <source>Generates Actor classes (initially Guy classes) from suite configs. Starting from Codeception 2.0 actor classes are auto-generated. Use this command to generate them manually.</source>
          <target state="translated">스위트 구성에서 Actor 클래스 (처음에는 Guy 클래스)를 생성합니다. Codeception 2.0부터는 액터 클래스가 자동 생성됩니다. 수동으로 생성하려면이 명령을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="2b58bada7715cf8b992b1f6b2564a2f697755269" translate="yes" xml:space="preserve">
          <source>Generates Cept (scenario-driven test) file:</source>
          <target state="translated">Cept (시나리오 주도 테스트) 파일을 생성합니다.</target>
        </trans-unit>
        <trans-unit id="cf2586fb34fd0caa90a7642368e489612574b21e" translate="yes" xml:space="preserve">
          <source>Generates Cest (scenario-driven object-oriented test) file:</source>
          <target state="translated">Cest (시나리오 주도 객체 지향 테스트) 파일을 생성합니다.</target>
        </trans-unit>
        <trans-unit id="5e6a017a288ddff9427bcede3a6d8a0a40f58b87" translate="yes" xml:space="preserve">
          <source>Generates Feature file (in Gherkin):</source>
          <target state="translated">기능 파일 (Gherkin)을 생성합니다.</target>
        </trans-unit>
        <trans-unit id="9ac9a4a75323298178cc9eb88d100f717dd818e4" translate="yes" xml:space="preserve">
          <source>Generates PageObject. Can be generated either globally, or just for one suite. If PageObject is generated globally it will act as UIMap, without any logic in it.</source>
          <target state="translated">PageObject를 생성합니다. 전체적으로 또는 하나의 스위트에 대해서만 생성 할 수 있습니다. PageObject가 전체적으로 생성되면 로직없이 UIMap 역할을합니다.</target>
        </trans-unit>
        <trans-unit id="59156ddea8e47a1711a7de06c5b69f44bd76ca45" translate="yes" xml:space="preserve">
          <source>Generates Snapshot. Snapshot can be used to test dynamical data. If suite name is provided, an actor class will be included into placeholder</source>
          <target state="translated">스냅 샷을 생성합니다. 스냅 샷을 사용하여 동적 데이터를 테스트 할 수 있습니다. 스위트 이름이 제공되면 액터 클래스가 자리 표시 자에 포함됩니다</target>
        </trans-unit>
        <trans-unit id="442ff84b6d759ec3c5f4f980e432b1974b53a256" translate="yes" xml:space="preserve">
          <source>Generates StepObject class. You will be asked for steps you want to implement.</source>
          <target state="translated">StepObject 클래스를 생성합니다. 구현하려는 단계를 묻는 메시지가 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="7817eb3a531929e4c91565de65f5196016b3465e" translate="yes" xml:space="preserve">
          <source>Generates a record instance.</source>
          <target state="translated">레코드 인스턴스를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="09d40da35f3f8563d002244e6c0160d039637e30" translate="yes" xml:space="preserve">
          <source>Generates and saves a record multiple times.</source>
          <target state="translated">레코드를 여러 번 생성하고 저장합니다.</target>
        </trans-unit>
        <trans-unit id="a7e3518f67f13058efacd02ee01b50d76a755a76" translate="yes" xml:space="preserve">
          <source>Generates and saves a record,.</source>
          <target state="translated">레코드를 생성하고 저장합니다.</target>
        </trans-unit>
        <trans-unit id="4f9eb322db2b5a5bc4d035ae86eba5aa7a5b67a3" translate="yes" xml:space="preserve">
          <source>Generates code snippets for matched feature files in a suite. Code snippets are expected to be implemented in Actor or PageObjects</source>
          <target state="translated">제품군에서 일치하는 기능 파일에 대한 코드 스 니펫을 생성합니다. 코드 스 니펫은 Actor 또는 PageObjects에서 구현 될 것으로 예상됩니다</target>
        </trans-unit>
        <trans-unit id="9405beebdd6faa6cf76e76f8e00470234923fe8d" translate="yes" xml:space="preserve">
          <source>Generates empty environment configuration file into envs dir:</source>
          <target state="translated">빈 환경 구성 파일을 envs dir에 생성합니다.</target>
        </trans-unit>
        <trans-unit id="8abb45ca00fa04d939fcc0dbd91ecd9bed3a668f" translate="yes" xml:space="preserve">
          <source>Generates skeleton for Unit Test that extends &lt;code&gt;Codeception\TestCase\Test&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Codeception\TestCase\Test&lt;/code&gt; 를 확장하는 단위 테스트에 대한 스켈레톤을 생성 합니다.</target>
        </trans-unit>
        <trans-unit id="4e909d2aecb2e69572aee8636e0fda3b37288013" translate="yes" xml:space="preserve">
          <source>Generates user-friendly text scenarios from scenario-driven tests (Cest, Cept).</source>
          <target state="translated">시나리오 중심 테스트 (Cest, Cept)에서 사용자 친화적 인 텍스트 시나리오를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="15c3313d2ab7dec9bd9c193b95de1a2621ebe2dd" translate="yes" xml:space="preserve">
          <source>Generation rules can be defined in a factories file. You will need to create &lt;code&gt;factories.php&lt;/code&gt; (it is recommended to store it in &lt;code&gt;_support&lt;/code&gt; dir) Follow &lt;a href=&quot;https://github.com/thephpleague/factory-muffin&quot;&gt;FactoryMuffin documentation&lt;/a&gt; to set valid rules. Random data provided by &lt;a href=&quot;https://github.com/fzaninotto/Faker&quot;&gt;Faker&lt;/a&gt; library.</source>
          <target state="translated">생성 규칙은 팩토리 파일에서 정의 할 수 있습니다. 당신은 만들어야합니다 &lt;code&gt;factories.php&lt;/code&gt; (가에 저장하는 것이 좋습니다 &lt;code&gt;_support&lt;/code&gt; 디렉토리)를 따르 &lt;a href=&quot;https://github.com/thephpleague/factory-muffin&quot;&gt;FactoryMuffin 문서를&lt;/a&gt; 유효 규칙을 설정할 수 있습니다. &lt;a href=&quot;https://github.com/fzaninotto/Faker&quot;&gt;Faker&lt;/a&gt; 라이브러리에서 제공 한 무작위 데이터 .</target>
        </trans-unit>
        <trans-unit id="a3e705cc61a19f33d7c9c030f107a70569966485" translate="yes" xml:space="preserve">
          <source>Generators</source>
          <target state="translated">Generators</target>
        </trans-unit>
        <trans-unit id="8bd4b37103eed7282897baad2200ced9d032fcef" translate="yes" xml:space="preserve">
          <source>Get all enabled modules</source>
          <target state="translated">활성화 된 모든 모듈 가져 오기</target>
        </trans-unit>
        <trans-unit id="712996f7fd919e4fb57d2af134553cd5ffd998aa" translate="yes" xml:space="preserve">
          <source>Get another module by its name:</source>
          <target state="translated">이름으로 다른 모듈을 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="25bd54b4f707257cf58e03749be5d271d3aad2b3" translate="yes" xml:space="preserve">
          <source>Get config values or specific config item.</source>
          <target state="translated">구성 값 또는 특정 구성 항목을 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="a1949d9149f66aa72d522586d591d09ecc392eb7" translate="yes" xml:space="preserve">
          <source>Get service $serviceName and add it to the lists of persistent services. If $isPermanent then service becomes persistent between tests</source>
          <target state="translated">서비스 $ serviceName을 가져 와서 영구 서비스 목록에 추가하십시오. $ isPermanent이면 테스트간에 서비스가 지속됩니다.</target>
        </trans-unit>
        <trans-unit id="2ec731b33b8ca2924da6ce64be89446c74f3851a" translate="yes" xml:space="preserve">
          <source>Gets a component from Yii container. Throws exception if component is not available</source>
          <target state="translated">Yii 컨테이너에서 구성 요소를 가져옵니다. 컴포넌트를 사용할 수없는 경우 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="1d645fea276f55fbb46a3d2a4037938d6f18f99d" translate="yes" xml:space="preserve">
          <source>Gets a fixture by name. Returns a Fixture instance. If a fixture is an instance of &lt;code&gt;\yii\test\BaseActiveFixture&lt;/code&gt; a second parameter can be used to return a specific model:</source>
          <target state="translated">이름으로 조명기를 가져옵니다. Fixture 인스턴스를 리턴합니다. 조명기가 &lt;code&gt;\yii\test\BaseActiveFixture&lt;/code&gt; 의 인스턴스 인 경우 두 번째 파라미터를 사용하여 특정 모델을 반환 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="010b85ad56b34c34c7c2a3b2436c740e30428ed5" translate="yes" xml:space="preserve">
          <source>Getting Started</source>
          <target state="translated">시작하기</target>
        </trans-unit>
        <trans-unit id="780483cc1f6d59df26ad28d7d8c2a351a2ebfc46" translate="yes" xml:space="preserve">
          <source>Gherkin</source>
          <target state="translated">Gherkin</target>
        </trans-unit>
        <trans-unit id="c42e703505f6b7ea1619de93c8de53117127325f" translate="yes" xml:space="preserve">
          <source>Gherkin scenarios and features can contain tags marked with &lt;code&gt;@&lt;/code&gt;. Tags are equal to groups in Codeception. This way if you define a feature with &lt;code&gt;@important&lt;/code&gt; tag, you can execute it inside &lt;code&gt;important&lt;/code&gt; group by running:</source>
          <target state="translated">작은 오이 시나리오 및 기능에는 &lt;code&gt;@&lt;/code&gt; 로 표시된 태그가 포함될 수 있습니다 . 태그는 Codeception의 그룹과 같습니다. 이 방법으로 &lt;code&gt;@important&lt;/code&gt; 태그 로 기능을 정의하면 다음을 실행하여 &lt;code&gt;important&lt;/code&gt; 그룹 내에서 실행할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="a045696569e961274c1f469453654f0a7cd9e620" translate="yes" xml:space="preserve">
          <source>GherkinSnippets</source>
          <target state="translated">GherkinSnippets</target>
        </trans-unit>
        <trans-unit id="0035ab42ac10b598787a458c38c2fc1f4982c720" translate="yes" xml:space="preserve">
          <source>GherkinSteps</source>
          <target state="translated">GherkinSteps</target>
        </trans-unit>
        <trans-unit id="9a9b09d909186a1ea088b925aea4172596fea7db" translate="yes" xml:space="preserve">
          <source>GitLab</source>
          <target state="translated">GitLab</target>
        </trans-unit>
        <trans-unit id="3393c86c82f15f0a36806efa76cea62ba99b9058" translate="yes" xml:space="preserve">
          <source>Given a docker command similar to:</source>
          <target state="translated">다음과 유사한 docker 명령이 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="602d92b2e14ac385c7289a85d36ef682a9e44c22" translate="yes" xml:space="preserve">
          <source>Global Configuration</source>
          <target state="translated">글로벌 구성</target>
        </trans-unit>
        <trans-unit id="c7d29a9da7ed07dece46126737d5e37085de0a5f" translate="yes" xml:space="preserve">
          <source>Grabber method for returning file/folders count in directory</source>
          <target state="translated">디렉토리에서 파일 / 폴더 수를 반환하는 그래버 방법</target>
        </trans-unit>
        <trans-unit id="e5d03438c7a7c2d31514c6d9360b4cab38c7c0ba" translate="yes" xml:space="preserve">
          <source>Grabber method for returning file/folders listing in an array</source>
          <target state="translated">파일 / 폴더 목록을 배열로 반환하는 그래버 메소드</target>
        </trans-unit>
        <trans-unit id="d514d15aa894d863bff8a11e4a0f863a156b0231" translate="yes" xml:space="preserve">
          <source>Grabber method to get the current number of messages on the queue/tube (pending/ready)</source>
          <target state="translated">대기열 / 튜브에서 현재 메시지 수를 가져 오는 그래버 방법 (보류 / 준비)</target>
        </trans-unit>
        <trans-unit id="677dc868a8f0c7a796370eaae26d827f73cd633b" translate="yes" xml:space="preserve">
          <source>Grabber method to get the list of queues/tubes on the server</source>
          <target state="translated">서버에서 대기열 / 튜브 목록을 가져 오는 그래버 (Grabber) 방법</target>
        </trans-unit>
        <trans-unit id="83a2bf4c40c57436af2729886eaca3836484a090" translate="yes" xml:space="preserve">
          <source>Grabber method to get the total number of messages on the queue/tube</source>
          <target state="translated">대기열 / 튜브에서 총 메시지 수를 가져 오는 그래버 (Grabber) 방법</target>
        </trans-unit>
        <trans-unit id="c5a4e40f10297bf2408d42ed0a1edd531458fb02" translate="yes" xml:space="preserve">
          <source>Grabber method to return current working directory</source>
          <target state="translated">현재 작업 디렉토리를 반환하는 그래버 메소드</target>
        </trans-unit>
        <trans-unit id="1373dc85057b1b6cabe7b9e2b48863e05b8c42ce" translate="yes" xml:space="preserve">
          <source>Grabber method to return file size</source>
          <target state="translated">파일 크기를 반환하는 그래버 메소드</target>
        </trans-unit>
        <trans-unit id="e109afd0dd30240c10cf22635a671e6b8e3cc199" translate="yes" xml:space="preserve">
          <source>Grabber method to return last modified timestamp</source>
          <target state="translated">마지막으로 수정 된 타임 스탬프를 반환하는 그래버 메서드</target>
        </trans-unit>
        <trans-unit id="ecccd585cb761ae8c732001b1132af2ef2b279e9" translate="yes" xml:space="preserve">
          <source>Grabbers</source>
          <target state="translated">Grabbers</target>
        </trans-unit>
        <trans-unit id="1c137f14dd35adddd95a50b45e58e5e56164fa5e" translate="yes" xml:space="preserve">
          <source>Grabbers allow you to get a single value from the current page with commands:</source>
          <target state="translated">그래버를 사용하면 명령을 사용하여 현재 페이지에서 단일 값을 얻을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e45f847f7f729ff176548ecefc598f5fe9de7cfc" translate="yes" xml:space="preserve">
          <source>Grabs a cookie value. You can set additional cookie params like &lt;code&gt;domain&lt;/code&gt;, &lt;code&gt;path&lt;/code&gt; in array passed as last argument.</source>
          <target state="translated">쿠키 값을 얻습니다. &lt;code&gt;domain&lt;/code&gt; , 마지막 인수로 전달 된 배열의 &lt;code&gt;path&lt;/code&gt; 와 같은 추가 쿠키 매개 변수를 설정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="9e06421095962455d5d34f735a98760703b6cae0" translate="yes" xml:space="preserve">
          <source>Grabs a data from collection</source>
          <target state="translated">수집에서 데이터를 가져옵니다</target>
        </trans-unit>
        <trans-unit id="48a623dadfc604eb30e8e40209bb7d91c1d5ad54" translate="yes" xml:space="preserve">
          <source>Grabs a service from Symfony DIC container. Recommended to use for unit testing.</source>
          <target state="translated">Symfony DIC 컨테이너에서 서비스를 가져옵니다. 단위 테스트에 사용하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="4a590e73cec9e8c4c951cc8e17cfa9a93fedba3a" translate="yes" xml:space="preserve">
          <source>Grabs a service from ZF2 container. Recommended to use for unit testing.</source>
          <target state="translated">ZF2 컨테이너에서 서비스를받습니다. 단위 테스트에 사용하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="00a14c29e8243df68228d6623b1cf8fc6e3b6e70" translate="yes" xml:space="preserve">
          <source>Grabs current page source code.</source>
          <target state="translated">현재 페이지 소스 코드를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="12b28dd7da3541b2b447b4a9f5cbd1923804565b" translate="yes" xml:space="preserve">
          <source>Grabs either the text content, or attribute values, of nodes matched by $cssOrXpath and returns them as an array.</source>
          <target state="translated">$ cssOrXpath와 일치하는 노드의 텍스트 컨텐츠 또는 속성 값을 잡고 배열로 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="3112d56e80e3ff324bf9c20821e979946ecc65f9" translate="yes" xml:space="preserve">
          <source>Grabs the documents count from a collection</source>
          <target state="translated">컬렉션에서 문서 개수를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="7906a243946c700ecd6fb3c2f997a15c1fa20cbe" translate="yes" xml:space="preserve">
          <source>Grabs the value of the given attribute value from the given element. Fails if element is not found.</source>
          <target state="translated">주어진 요소에서 주어진 속성 값을 얻습니다. 요소를 찾지 못하면 실패합니다.</target>
        </trans-unit>
        <trans-unit id="ea965f7c8c60aa39e2ec7e0efb646a5c07eb6b19" translate="yes" xml:space="preserve">
          <source>Grabs value from APC(u) by key.</source>
          <target state="translated">키로 APC (u)에서 값을 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="452dfb820725b06fcf08f3061caf8473dc52a51b" translate="yes" xml:space="preserve">
          <source>Grabs value from memcached by key.</source>
          <target state="translated">키로 memcached에서 값을 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="889172ca62b7702bb5f9d09aded81336cc583360" translate="yes" xml:space="preserve">
          <source>Great for debugging, but too slow when collecting coverage</source>
          <target state="translated">디버깅에는 유용하지만 적용 범위를 수집 할 때 너무 느림</target>
        </trans-unit>
        <trans-unit id="503d96d5ebb58b1a639868bffd411d7d5f0bf12b" translate="yes" xml:space="preserve">
          <source>Group Files</source>
          <target state="translated">그룹 파일</target>
        </trans-unit>
        <trans-unit id="1110b90dcfd4efa5108ee6fe11215110f0e8f396" translate="yes" xml:space="preserve">
          <source>Group Objects</source>
          <target state="translated">그룹 객체</target>
        </trans-unit>
        <trans-unit id="1b5b3e83469262bdc56a69edd159a8373d421ce6" translate="yes" xml:space="preserve">
          <source>Group Objects are extensions listening for the events of tests belonging to a specific group. When a test is added to a group:</source>
          <target state="translated">그룹 개체는 특정 그룹에 속하는 테스트 이벤트를 수신하는 확장입니다. 테스트가 그룹에 추가 된 경우 :</target>
        </trans-unit>
        <trans-unit id="490c479fe1a2f63c719904efad9cbf6642825a29" translate="yes" xml:space="preserve">
          <source>GroupObjects can also be used to update the module configuration before running a test. For instance, for &lt;code&gt;nocleanup&lt;/code&gt; group we prevent Doctrine2 module from wrapping test into transaction:</source>
          <target state="translated">테스트를 실행하기 전에 GroupObject를 사용하여 모듈 구성을 업데이트 할 수도 있습니다. 예를 들어 &lt;code&gt;nocleanup&lt;/code&gt; 그룹의 경우 Doctrine2 모듈이 테스트를 트랜잭션으로 래핑하지 못하게합니다.</target>
        </trans-unit>
        <trans-unit id="ae9629f4ebb82c6331c0809fa9a0e54b00e578e6" translate="yes" xml:space="preserve">
          <source>Groups</source>
          <target state="translated">Groups</target>
        </trans-unit>
        <trans-unit id="5f3a6a95a5cd4dab412f4d65715ebcccf69fadf3" translate="yes" xml:space="preserve">
          <source>Groups can be defined in global or suite configuration files. Tests for groups can be specified as an array of file names or directories containing them:</source>
          <target state="translated">글로벌 또는 스위트 구성 파일에서 그룹을 정의 할 수 있습니다. 그룹에 대한 테스트는 파일 이름 또는 그룹을 포함하는 디렉토리의 배열로 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="929a28d261428029e61c0f81c6161fd71ba0b2fe" translate="yes" xml:space="preserve">
          <source>Guides</source>
          <target state="translated">Guides</target>
        </trans-unit>
        <trans-unit id="5d105737ec88ec89afd98cdc6915e9f6e252c011" translate="yes" xml:space="preserve">
          <source>Guzzle + Symfony BrowserKit</source>
          <target state="translated">Guzzle + Symfony BrowserKit</target>
        </trans-unit>
        <trans-unit id="7a5595985553c0eee14d8aa7f26cf5251fd44098" translate="yes" xml:space="preserve">
          <source>HINT: This module can be used with &lt;a href=&quot;https://github.com/mongofill/mongofill&quot;&gt;Mongofill&lt;/a&gt; library which is Mongo client written in PHP without extension.</source>
          <target state="translated">힌트 :이 모듈은 &lt;a href=&quot;https://github.com/mongofill/mongofill&quot;&gt;Mongofill&lt;/a&gt; 라이브러리 (확장없이 PHP로 작성된 Mongo 클라이언트) 와 함께 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="fd7a3bde0e51769aa54ac2082b5416a40c12e967" translate="yes" xml:space="preserve">
          <source>HOOK to be executed when config changes with &lt;code&gt;_reconfigure&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;_reconfigure&lt;/code&gt; 로 구성이 변경되면 HOOK가 실행됩니다 .</target>
        </trans-unit>
        <trans-unit id="9e0605768edcc41bd747813217479829f55d14cc" translate="yes" xml:space="preserve">
          <source>HTML Reports</source>
          <target state="translated">HTML 보고서</target>
        </trans-unit>
        <trans-unit id="227df43d13dcae2e9d126e4994c8d11625b92054" translate="yes" xml:space="preserve">
          <source>HTML report generation can at times take a little more time than the default 30 second timeout. Or maybe you want to alter SSL settings (verify_peer, for example) To alter the way c3 sends it&amp;rsquo;s service requests to your webserver (be it a local or a remote one), you can use the &lt;code&gt;remote_context_options&lt;/code&gt; key in &lt;code&gt;coverage&lt;/code&gt; settings.</source>
          <target state="translated">HTML 보고서 생성에는 기본 30 초 시간 초과보다 시간이 조금 더 걸릴 수 있습니다. 또는 SSL 설정을 변경하고 싶을 수도 있습니다 (예 : verify_peer) c3가 서비스 요청을 웹 서버 (로컬 또는 원격 서버)로 보내는 방법을 변경하려면 &lt;code&gt;coverage&lt;/code&gt; 설정 에서 &lt;code&gt;remote_context_options&lt;/code&gt; 키를 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="89efe2c38c15de0678741b4c213873467e5c4c00" translate="yes" xml:space="preserve">
          <source>Handles and checks exception called inside callback function. Either exception class name or exception instance should be provided.</source>
          <target state="translated">콜백 함수 내부에서 호출 된 예외를 처리하고 확인합니다. 예외 클래스 이름 또는 예외 인스턴스를 제공해야합니다.</target>
        </trans-unit>
        <trans-unit id="02ce23d3a5af583936f06e1b841cf8b84b3cb596" translate="yes" xml:space="preserve">
          <source>Handles and checks throwables (Exceptions/Errors) called inside the callback function. Either throwable class name or throwable instance should be provided.</source>
          <target state="translated">콜백 함수 내에서 호출 된 Throwable (예외 / 오류)을 처리하고 확인합니다. 던질 수있는 클래스 이름이나 던질 수있는 인스턴스를 제공해야합니다.</target>
        </trans-unit>
        <trans-unit id="eeb5d04a23bfa9da8ac0874047a99da1935bca3d" translate="yes" xml:space="preserve">
          <source>Headers, Cookies, Sessions</source>
          <target state="translated">헤더, 쿠키, 세션</target>
        </trans-unit>
        <trans-unit id="e1b9317c83fab7ba93f4867cc6c1ca38210766dd" translate="yes" xml:space="preserve">
          <source>Headless Selenium in Docker</source>
          <target state="translated">도커의 헤드리스 셀레늄</target>
        </trans-unit>
        <trans-unit id="3c9b3433e6f225e4ae00ef2041d44d91bfbf7113" translate="yes" xml:space="preserve">
          <source>Helpers</source>
          <target state="translated">Helpers</target>
        </trans-unit>
        <trans-unit id="b40956a3e6d21b2b4918e977fd6c0688c44efa3f" translate="yes" xml:space="preserve">
          <source>Here are global options you can change inside configuration:</source>
          <target state="translated">구성 내부에서 변경할 수있는 전역 옵션은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="7695b2dcac5e85b2ff0de262068039e2a2e918b9" translate="yes" xml:space="preserve">
          <source>Here are the events and event classes. The events are listed in the order in which they happen during execution. All listed events are available as constants in &lt;code&gt;Codeception\Events&lt;/code&gt; class.</source>
          <target state="translated">다음은 이벤트 및 이벤트 클래스입니다. 이벤트는 실행 중에 발생하는 순서대로 나열됩니다. 나열된 모든 이벤트는 &lt;code&gt;Codeception\Events&lt;/code&gt; 클래스 에서 상수로 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="f18961b4076a1de65beaa3eb3077ab7557ed0411" translate="yes" xml:space="preserve">
          <source>Here is the list of possible filters:</source>
          <target state="translated">가능한 필터 목록은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="ab818eb857f1d76575e858d9ddbda95e82489a9d" translate="yes" xml:space="preserve">
          <source>Here we also use word &lt;strong&gt;And&lt;/strong&gt; to extend the Given and not to repeat it in each line.</source>
          <target state="translated">또한 &lt;strong&gt;And&lt;/strong&gt; 라는 단어 를 사용하여 Given을 확장하고 각 줄에서 반복하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="24f6f5ceb0f22377c877086a1a1c40207bbc2fc8" translate="yes" xml:space="preserve">
          <source>Hiding Sensitive Data</source>
          <target state="translated">민감한 데이터 숨기기</target>
        </trans-unit>
        <trans-unit id="b1a5954a483f8f8b0207385095f74aeb409b3f80" translate="yes" xml:space="preserve">
          <source>High</source>
          <target state="translated">High</target>
        </trans-unit>
        <trans-unit id="4bd8f3f03a576b2088bd73a2339d07fca1de805d" translate="yes" xml:space="preserve">
          <source>Hooks</source>
          <target state="translated">Hooks</target>
        </trans-unit>
        <trans-unit id="689231f76da018f6b4903ebe583284eada9989a1" translate="yes" xml:space="preserve">
          <source>How does your client, manager, tester, or any other non-technical person know your website is working? By opening the browser, accessing the site, clicking on links, filling in the forms, and actually seeing the content on a web page. They have no idea of the programming language, framework, database, web-server, or why the application did (or did not) behave as expected.</source>
          <target state="translated">고객, 관리자, 테스터 또는 기타 비전문가가 귀하의 웹 사이트가 작동하고 있음을 어떻게 알 수 있습니까? 브라우저를 열고, 사이트에 액세스하고, 링크를 클릭하고, 양식을 작성하고, 실제로 웹 페이지에서 컨텐츠를 볼 수 있습니다. 프로그래밍 언어, 프레임 워크, 데이터베이스, 웹 서버 또는 응용 프로그램이 예상 한대로 작동 한 이유를 알 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="100cb0b9b76cf128bd36c57de623e9519f3f1a9c" translate="yes" xml:space="preserve">
          <source>How it Works</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="387902260cb3397f856a32b5ffe10d5bcee0a24b" translate="yes" xml:space="preserve">
          <source>How parallel processes will be executed?</source>
          <target state="translated">병렬 프로세스는 어떻게 실행됩니까?</target>
        </trans-unit>
        <trans-unit id="3b249af3cc31064db6623f6b42a9fa76b8437a60" translate="yes" xml:space="preserve">
          <source>How parallel processes won&amp;rsquo;t affect each other?</source>
          <target state="translated">병렬 프로세스는 서로 영향을 미치지 않습니까?</target>
        </trans-unit>
        <trans-unit id="b98235238b42317e814677825d7f3620a393ad41" translate="yes" xml:space="preserve">
          <source>How should I split my tests across parallel processes?</source>
          <target state="translated">병렬 프로세스에서 테스트를 어떻게 분할해야합니까?</target>
        </trans-unit>
        <trans-unit id="0b7437aa06310154346b33d1a9318ee01520d2a4" translate="yes" xml:space="preserve">
          <source>However, Dependency Injection is not limited to this. It allows you to &lt;strong&gt;inject any class&lt;/strong&gt;, which can be constructed with arguments known to Codeception.</source>
          <target state="translated">그러나 Dependency Injection은 이에 국한되지 않습니다. Codeception에 알려진 인수로 구성 할 수있는 &lt;strong&gt;모든 클래스&lt;/strong&gt; 를 &lt;strong&gt;삽입 할&lt;/strong&gt; 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f035e60f9d5c406224f0d8aa2bfca72b2581b89e" translate="yes" xml:space="preserve">
          <source>However, implementing all actions for reuse in a single actor class may lead to breaking the &lt;a href=&quot;https://en.wikipedia.org/wiki/Single_responsibility_principle&quot;&gt;Single Responsibility Principle&lt;/a&gt;.</source>
          <target state="translated">그러나 단일 액터 클래스에서 재사용하기위한 모든 조치를 구현하면 &lt;a href=&quot;https://en.wikipedia.org/wiki/Single_responsibility_principle&quot;&gt;단일 책임 원칙이&lt;/a&gt; 깨질 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="8adfb00f01b51b9ffb8c1f8a25adf4d035e90f7d" translate="yes" xml:space="preserve">
          <source>However, in WebDriver configuration changes can&amp;rsquo;t be applied that easily. For instance, if you change the browser you need to close the current browser session and start a new one. For that WebDriver module provides &lt;code&gt;_restart&lt;/code&gt; method which takes an array with config and restarts the browser.</source>
          <target state="translated">그러나 WebDriver 구성 변경 사항은 쉽게 적용 할 수 없습니다. 예를 들어, 브라우저를 변경하면 현재 브라우저 세션을 닫고 새 세션을 시작해야합니다. 이를 위해 WebDriver 모듈은 &lt;code&gt;_restart&lt;/code&gt; 메소드를 제공합니다 .이 메소드는 config 배열을 사용하고 브라우저를 다시 시작합니다.</target>
        </trans-unit>
        <trans-unit id="52c9d50a23589e9a152cb2d2516d2d2bc8b4af70" translate="yes" xml:space="preserve">
          <source>However, it should be noted that PhantomJS is not a real browser, so the behavior and output in real browsers may differ from PhantomJS. And the most important: &lt;strong&gt;PhantomJS is not maintained&lt;/strong&gt; anymore. So use it at your own risk.</source>
          <target state="translated">그러나 PhantomJS는 실제 브라우저가 아니므로 실제 브라우저의 동작 및 출력은 PhantomJS와 다를 수 있습니다. 그리고 가장 중요한 : &lt;strong&gt;PhantomJS는&lt;/strong&gt; 더 이상 &lt;strong&gt;유지&lt;/strong&gt; 되지 않습니다. 따라서 자신의 책임하에 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="1b78276b14c1666fe46774d5c299e3b7cd97b74e" translate="yes" xml:space="preserve">
          <source>HttpCode::getDescription()</source>
          <target state="translated">HttpCode::getDescription()</target>
        </trans-unit>
        <trans-unit id="16f48492b9dd86833885fc4c19cbf9573910b7d0" translate="yes" xml:space="preserve">
          <source>If $key already exists:</source>
          <target state="translated">$ key가 이미 존재하는 경우 :</target>
        </trans-unit>
        <trans-unit id="8c5eee88a3ec20baa65dd8a37aaffd9045fd9ada" translate="yes" xml:space="preserve">
          <source>If a class is in a &lt;code&gt;Codeception\Extension&lt;/code&gt; namespace you can skip it and provide only a shortname. So Recorder extension can be started like this:</source>
          <target state="translated">클래스가 &lt;code&gt;Codeception\Extension&lt;/code&gt; 네임 스페이스 에 있으면 클래스 를 건너 뛰고 짧은 이름 만 제공 할 수 있습니다. 따라서 레코더 확장은 다음과 같이 시작할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5857b707915b71c0d684ef95b21b092e549ff4ff" translate="yes" xml:space="preserve">
          <source>If a field is sent to this function that does &lt;em&gt;not&lt;/em&gt; exist on the page, it will silently be added to the HTTP request. This is helpful for testing some types of forms, but be aware that you will &lt;em&gt;not&lt;/em&gt; get an exception like you would if you called &lt;code&gt;fillField()&lt;/code&gt; or &lt;code&gt;selectOption()&lt;/code&gt; with a missing field.</source>
          <target state="translated">페이지에 존재 하지 &lt;em&gt;않는&lt;/em&gt; 이 함수로 필드가 전송 되면 HTTP 요청에 자동으로 추가됩니다. 이는 일부 유형의 양식을 테스트하는 데 유용하지만 누락 된 필드로 &lt;code&gt;fillField()&lt;/code&gt; 또는 &lt;code&gt;selectOption()&lt;/code&gt; 을 호출 한 경우와 같은 예외가 발생 &lt;em&gt;하지 않습니다&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="18d59c6525218de9a9585b5e2dbdeb1f1028fcea" translate="yes" xml:space="preserve">
          <source>If a file &lt;code&gt;.gitlab-ci.yml&lt;/code&gt; exists in the root of the git repository, GitLab will run a pipeline each time you push to the gitlab server. The file configures the docker image that will be called. Below is a sample which loads a php7 docker image, clones your files, installs composer dependencies, runs the built-in php webserver and finally runs codeception:</source>
          <target state="translated">git 저장소의 루트에 &lt;code&gt;.gitlab-ci.yml&lt;/code&gt; 파일이 있으면 GitLab은 gitlab 서버로 푸시 할 때마다 파이프 라인을 실행합니다. 파일은 호출 될 도커 이미지를 구성합니다. 다음은 php7 docker 이미지를로드하고 파일을 복제하며 작곡가 종속성을 설치하고 내장 PHP 웹 서버를 실행하고 마지막으로 코드 인식을 실행하는 샘플입니다.</target>
        </trans-unit>
        <trans-unit id="85ef7aef411f65b78085f9eb85a440408eec4005" translate="yes" xml:space="preserve">
          <source>If a group of scenarios have the same initial steps we can define a &lt;em&gt;Background&lt;/em&gt; section to be used prior to those steps being run. This allows us to avoid repeating our steps across multiple scenarios. Let&amp;rsquo;s say that for the dashboard feature we always need to be logged in as administrator.</source>
          <target state="translated">시나리오 그룹에 동일한 초기 단계가있는 경우 해당 단계를 실행하기 전에 사용할 &lt;em&gt;배경&lt;/em&gt; 섹션을 정의 할 수 있습니다 . 이를 통해 여러 시나리오에서 단계를 반복하지 않아도됩니다. 대시 보드 기능의 경우 항상 관리자로 로그인해야한다고 가정 해 봅시다.</target>
        </trans-unit>
        <trans-unit id="ba9c01d5e2fa494fd90e2b6b77a2965bb2a7b923" translate="yes" xml:space="preserve">
          <source>If accessing modules doesn&amp;rsquo;t provide enough flexibility, you can extend a module inside a Helper class:</source>
          <target state="translated">모듈에 액세스하는 데 충분한 유연성이 제공되지 않으면 Helper 클래스 내에서 모듈을 확장 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9de49610878213fa5f5dbe719fc2049ca3fad810" translate="yes" xml:space="preserve">
          <source>If method invoked, it will immediately throw an exception.</source>
          <target state="translated">메소드가 호출되면 즉시 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="411073bfeb70e233546fac8e57259cfede35c284" translate="yes" xml:space="preserve">
          <source>If no framework is used with Doctrine you should provide the &lt;code&gt;connection_callback&lt;/code&gt; option with a valid callback to a function which returns an &lt;code&gt;EntityManager&lt;/code&gt; instance.</source>
          <target state="translated">Doctrine에서 프레임 워크를 사용하지 않으면 &lt;code&gt;connection_callback&lt;/code&gt; 옵션에 &lt;code&gt;EntityManager&lt;/code&gt; 인스턴스 를 반환하는 함수에 대한 유효한 콜백을 제공해야 합니다.</target>
        </trans-unit>
        <trans-unit id="a150629e125fee676f88d003d02e759756038919" translate="yes" xml:space="preserve">
          <source>If nothing found, check if locator looks like a CSS selector. If so, run it.</source>
          <target state="translated">아무것도 발견되지 않으면 로케이터가 CSS 선택기처럼 보이는지 확인하십시오. 그렇다면 실행하십시오.</target>
        </trans-unit>
        <trans-unit id="8d191edeeb2f7528441cdddb03fa5eac3b5231f5" translate="yes" xml:space="preserve">
          <source>If nothing found, check if locator looks like an XPath expression. If so, run it.</source>
          <target state="translated">아무것도 발견되지 않으면 로케이터가 XPath 표현식처럼 보이는지 확인하십시오. 그렇다면 실행하십시오.</target>
        </trans-unit>
        <trans-unit id="5ebc7e925c0aa68c05761a07bab683ada90cf9b7" translate="yes" xml:space="preserve">
          <source>If test fails stores last shown page in &amp;lsquo;output&amp;rsquo; dir.</source>
          <target state="translated">테스트가 실패하면 마지막으로 표시된 페이지가 'output'디렉토리에 저장됩니다.</target>
        </trans-unit>
        <trans-unit id="b73e33e38f5677387b957050c9350858656be5c7" translate="yes" xml:space="preserve">
          <source>If the database clean-up takes too long, you can follow a different strategy: create new data for each test. This way, the only problem you might face is duplication of data records. &lt;a href=&quot;modules/sequence&quot;&gt;Sequence&lt;/a&gt; was created to solve this. It provides the &lt;code&gt;sq()&lt;/code&gt; function which generates unique suffixes for creating data in tests.</source>
          <target state="translated">데이터베이스 정리에 시간이 오래 걸리는 경우 다른 전략을 따를 수 있습니다. 각 테스트마다 새 데이터를 작성하십시오. 이런 식으로 직면 할 수있는 유일한 문제는 데이터 레코드의 복제입니다. 이 문제를 해결하기 위해 &lt;a href=&quot;modules/sequence&quot;&gt;시퀀스&lt;/a&gt; 가 만들어졌습니다. 테스트에서 데이터를 작성하기위한 고유 한 접미 부를 생성 하는 &lt;code&gt;sq()&lt;/code&gt; 함수를 제공합니다 .</target>
        </trans-unit>
        <trans-unit id="d457838d1a0963f3a2c3d196cf58eef93bfdd206" translate="yes" xml:space="preserve">
          <source>If the locator is an array, it should have a single element, with the key signifying the locator type (&lt;code&gt;id&lt;/code&gt;, &lt;code&gt;name&lt;/code&gt;, &lt;code&gt;css&lt;/code&gt;, &lt;code&gt;xpath&lt;/code&gt;, &lt;code&gt;link&lt;/code&gt;, or &lt;code&gt;class&lt;/code&gt;) and the value being the locator itself. This is called a &amp;ldquo;strict&amp;rdquo; locator. Examples:</source>
          <target state="translated">로케이터가 배열 인 경우 로케이터 유형 ( &lt;code&gt;id&lt;/code&gt; , &lt;code&gt;name&lt;/code&gt; , &lt;code&gt;css&lt;/code&gt; , &lt;code&gt;xpath&lt;/code&gt; , &lt;code&gt;link&lt;/code&gt; 또는 &lt;code&gt;class&lt;/code&gt; )을 나타내는 키 와 로케이터 자체 값 을 갖는 단일 요소가 있어야 합니다. 이것을 &quot;엄격한&quot;로케이터라고합니다. 예 :</target>
        </trans-unit>
        <trans-unit id="36c5f90086eb9dddcececa89eb88a3c48cca3913" translate="yes" xml:space="preserve">
          <source>If the number is less or greater it will later be checked in verify() and also throw an exception.</source>
          <target state="translated">숫자가 작거나 크면 나중에 verify ()에서 확인되고 예외도 발생합니다.</target>
        </trans-unit>
        <trans-unit id="5d6d7aef900c1ee6138235141e8005d201629c79" translate="yes" xml:space="preserve">
          <source>If the number of invocations is 0 it will throw an exception in verify.</source>
          <target state="translated">호출 수가 0이면 확인시 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="c558302abc28711bf56d8a94046d01e51ee02c30" translate="yes" xml:space="preserve">
          <source>If the window has no name, match it by switching to next active tab using &lt;code&gt;switchToNextTab&lt;/code&gt; method.</source>
          <target state="translated">창에 이름이 없으면 &lt;code&gt;switchToNextTab&lt;/code&gt; 메소드를 사용하여 다음 활성 탭으로 전환하여 창을 일치 시키십시오 .</target>
        </trans-unit>
        <trans-unit id="7d67f666a1e1ac8d6b8841e8f3ec1974a18bb428" translate="yes" xml:space="preserve">
          <source>If we expect a JSON response to be received we can check its structure with &lt;a href=&quot;http://goessner.net/articles/JsonPath/&quot;&gt;JSONPath&lt;/a&gt;. It looks and sounds like XPath but is designed to work with JSON data, however we can convert JSON into XML and use XPath to validate the structure. Both approaches are valid and can be used in the REST module:</source>
          <target state="translated">JSON 응답이 수신 될 것으로 예상되면 &lt;a href=&quot;http://goessner.net/articles/JsonPath/&quot;&gt;JSONPath를 사용&lt;/a&gt; 하여 구조를 확인할 수 있습니다 . XPath처럼 보이고 들리지만 JSON 데이터와 함께 작동하도록 설계되었지만 JSON을 XML로 변환하고 XPath를 사용하여 구조를 확인할 수 있습니다. 두 가지 방법 모두 유효하며 REST 모듈에서 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3881ab1f69bdc89a19b849af3539116a02493f92" translate="yes" xml:space="preserve">
          <source>If you are using &lt;a href=&quot;#docker&quot;&gt;Docker&lt;/a&gt; containers you can launch multiple Codeception containers for different groups:</source>
          <target state="translated">&lt;a href=&quot;#docker&quot;&gt;Docker&lt;/a&gt; 컨테이너를 사용하는 경우 다른 그룹에 대해 여러 Codeception 컨테이너를 시작할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f0465d8194aa74d3ba25bfd2a5f08b89d2d1497a" translate="yes" xml:space="preserve">
          <source>If you are using Symfony with Doctrine, you don&amp;rsquo;t need to enable Symfony itself but just Doctrine2:</source>
          <target state="translated">Doctrine과 함께 Symfony를 사용하는 경우 Symfony 자체를 활성화 할 필요없이 Doctrine2 만 활성화하면됩니다.</target>
        </trans-unit>
        <trans-unit id="7abfa9c29c338522aead6b9784ac936f766c74bd" translate="yes" xml:space="preserve">
          <source>If you decided to run your features with Codeception, we recommend to start with symlinking your &lt;code&gt;features&lt;/code&gt; directory into one of the test suites:</source>
          <target state="translated">Codeception으로 기능을 실행하기로 결정한 경우 &lt;code&gt;features&lt;/code&gt; 디렉토리를 테스트 스위트 중 하나로 심볼릭 링크하여 시작하는 것이 좋습니다 .</target>
        </trans-unit>
        <trans-unit id="2fb402415cc9ee9ff40a4a3f6c02574b7bd7bdad" translate="yes" xml:space="preserve">
          <source>If you do pass &lt;code&gt;$expectedErrorMessage&lt;/code&gt;, this method checks if the actual error message for a key contains &lt;code&gt;$expectedErrorMessage&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;$expectedErrorMessage&lt;/code&gt; 전달하면 이 메소드는 키의 실제 오류 메시지에 &lt;code&gt;$expectedErrorMessage&lt;/code&gt; 가 포함되어 있는지 확인합니다 .</target>
        </trans-unit>
        <trans-unit id="859ba535756cfaa7c12f8310fc359a8a4be5d8d5" translate="yes" xml:space="preserve">
          <source>If you don&amp;rsquo;t know what exact element you need to wait for, you can simply pause execution with using &lt;code&gt;$I-&amp;gt;wait()&lt;/code&gt;</source>
          <target state="translated">정확히 어떤 요소를 기다려야할지 모르는 경우 &lt;code&gt;$I-&amp;gt;wait()&lt;/code&gt; 를 사용하여 실행을 일시 중지 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="69f987e0a67f8f8aac9026671318c1f5e7a12432" translate="yes" xml:space="preserve">
          <source>If you don&amp;rsquo;t use Symfony or Zend Framework, you need to specify a callback function to retrieve the Entity Manager:</source>
          <target state="translated">Symfony 또는 Zend Framework를 사용하지 않는 경우 엔티티 관리자를 검색하기 위해 콜백 함수를 지정해야합니다.</target>
        </trans-unit>
        <trans-unit id="df68c4a5309c7ab863c3b7943356f698117618a1" translate="yes" xml:space="preserve">
          <source>If you have &lt;code&gt;Step\Admin&lt;/code&gt; class which defines only admin steps, it is a good idea to use it as context for all features containing with &amp;ldquo;As an admin&amp;rdquo;. In this case &amp;ldquo;admin&amp;rdquo; is a role and we can configure it to use additional context.</source>
          <target state="translated">관리자 단계 만 정의하는 &lt;code&gt;Step\Admin&lt;/code&gt; 클래스가있는 경우 &quot;관리자 권한 으로&quot;포함 된 모든 기능에 대한 컨텍스트로 사용하는 것이 좋습니다. 이 경우&amp;ldquo;admin&amp;rdquo;이 역할이며 추가 컨텍스트를 사용하도록 역할을 구성 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="180f14a9f15ad16e6c37acb60826ea12c234e173" translate="yes" xml:space="preserve">
          <source>If you have a complex interaction scenario, you may use several step objects in one test. If you feel like adding too many actions into your Actor class (which is AcceptanceTester in this case) consider moving some of them into separate StepObjects.</source>
          <target state="translated">복잡한 상호 작용 시나리오가있는 경우 한 번의 테스트에서 여러 단계 오브젝트를 사용할 수 있습니다. Actor 클래스에 액션을 너무 많이 추가하고 싶다면 (이 경우 AcceptanceTester) 액션 중 일부를 별도의 StepObject로 옮기는 것을 고려하십시오.</target>
        </trans-unit>
        <trans-unit id="65171f4ccd4ab61049717b6a17b2e1685f540aea" translate="yes" xml:space="preserve">
          <source>If you have several projects with Codeception tests, you can use a single &lt;code&gt;codecept&lt;/code&gt; file to run all of your tests. You can pass the &lt;code&gt;-c&lt;/code&gt; option to any Codeception command (except &lt;code&gt;bootstrap&lt;/code&gt;), to execute Codeception in another directory:</source>
          <target state="translated">Codeception 테스트가 포함 된 여러 프로젝트가있는 경우 단일 &lt;code&gt;codecept&lt;/code&gt; 파일을 사용하여 모든 테스트를 실행할 수 있습니다 . 다른 디렉토리에서 Codeception을 실행하기 위해 &lt;code&gt;-c&lt;/code&gt; 옵션을 Codeception 명령 ( &lt;code&gt;bootstrap&lt;/code&gt; 제외 )에 전달할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="c693a084c73d075fd92bd8dc093832cd4ff6553b" translate="yes" xml:space="preserve">
          <source>If you like the concept of Behavior Driven Development or prefer to keep test scenarios in human readable format, Codeception allows you to write and execute scenarios in Gherkin. Feature files is just another test format inside Codeception, so it can be combined with Cept and Cest files inside the same suite. Steps definitions of your scenarios can use all the power of Codeception modules, PageObjects, and StepObjects.</source>
          <target state="translated">Behavior Driven Development의 개념을 좋아하거나 테스트 시나리오를 사람이 읽을 수있는 형식으로 유지하려는 경우 Codeception을 사용하면 Gherkin에서 시나리오를 작성하고 실행할 수 있습니다. 기능 파일은 Codeception 내부의 또 다른 테스트 형식이므로 동일한 제품군 내에서 Cept 및 Cest 파일과 결합 할 수 있습니다. 시나리오의 단계 정의는 Codeception 모듈, PageObject 및 StepObject의 모든 기능을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b6e7c70a3d2627f0e418c6e3927f447e584dbe0a" translate="yes" xml:space="preserve">
          <source>If you need to authorize a user for each test, you can do so by submitting the login form at the beginning of every test. Running those steps takes time, and in the case of Selenium tests (which are slow by themselves) that time loss can become significant.</source>
          <target state="translated">각 테스트마다 사용자에게 권한을 부여해야하는 경우 모든 테스트가 시작될 때마다 로그인 양식을 제출하면됩니다. 이러한 단계를 실행하는 데 시간이 걸리며 Selenium 테스트 (자체적으로 느림)의 경우 시간 손실이 심각해질 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0cb14d25f74e3b265089d031ae7556c6b00fbe4b" translate="yes" xml:space="preserve">
          <source>If you need to fill in sensitive data (like passwords) and hide it in logs, you can pass instance &lt;code&gt;\Codeception\Step\Argument\PasswordArgument&lt;/code&gt; with the data which needs to be hidden.</source>
          <target state="translated">민감한 데이터 (예 : 비밀번호)를 채워 로그에 숨겨야하는 경우 &lt;code&gt;\Codeception\Step\Argument\PasswordArgument&lt;/code&gt; 하는 데이터와 함께 \ Codeception \ Step \ Argument \ PasswordArgument 인스턴스를 전달할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6fe16abe3f057dfee1e0a04807a82dc258d10690" translate="yes" xml:space="preserve">
          <source>If you only need some parts of a conflicted module to be loaded, refer to the next section.</source>
          <target state="translated">충돌하는 모듈의 일부만로드해야하는 경우 다음 섹션을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="0cedf0347054d7c88e7070424c133f172b198fde" translate="yes" xml:space="preserve">
          <source>If you prefer, you may also pass a string for the locator. This is called a &amp;ldquo;fuzzy&amp;rdquo; locator. In this case, Codeception uses a a variety of heuristics (depending on the exact method called) to determine what element you&amp;rsquo;re referring to. For example, here&amp;rsquo;s the heuristic used for the &lt;code&gt;submitForm&lt;/code&gt; method:</source>
          <target state="translated">원하는 경우 로케이터에 문자열을 전달할 수도 있습니다. 이것을 &quot;퍼지&quot;로케이터라고합니다. 이 경우 Codeception은 다양한 휴리스틱 (정확한 방법에 따라 다름)을 사용하여 참조하는 요소를 결정합니다. 예를 들어, &lt;code&gt;submitForm&lt;/code&gt; 메소드에 사용 된 휴리스틱은 다음과 같습니다 .</target>
        </trans-unit>
        <trans-unit id="279267bc6a3f6ee2c605df063c556ccbfab0cbd3" translate="yes" xml:space="preserve">
          <source>If you run &lt;code&gt;robo&lt;/code&gt;, you can see the respective commands:</source>
          <target state="translated">&lt;code&gt;robo&lt;/code&gt; 를 실행 하면 해당 명령을 볼 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1a52f32a635dee2be1deb38d5a3ea41907d2d14d" translate="yes" xml:space="preserve">
          <source>If you run your application via Webserver (Apache, Nginx, PHP WebServer) you don&amp;rsquo;t have a direct access to tested code, so collecting coverage becomes a non-trivial task. The same goes for scripts that are tested on different nodes. To get access to this code you need &lt;code&gt;xdebug&lt;/code&gt; installed with &lt;code&gt;remote_enable&lt;/code&gt; option turned on. Codeception also requires a little spy to interact with your application. As your application runs standalone, without even knowing it is being tested, a small file should be included in order to collect coverage info.</source>
          <target state="translated">웹 서버 (Apache, Nginx, PHP WebServer)를 통해 애플리케이션을 실행하는 경우 테스트 된 코드에 직접 액세스 할 수 없으므로 적용 범위를 수집하는 것이 쉽지 않은 작업이됩니다. 다른 노드에서 테스트 된 스크립트도 마찬가지입니다. 이 코드에 액세스하려면 &lt;code&gt;remote_enable&lt;/code&gt; 옵션을 켠 상태에서 &lt;code&gt;xdebug&lt;/code&gt; 를 설치 해야 합니다. 또한 코드 인식에는 응용 프로그램과 상호 작용하기 위해 약간의 스파이가 필요합니다. 응용 프로그램이 테스트되고 있음을 알지 못하는 상태에서 독립 실행 형으로 실행되므로 적용 범위 정보를 수집하기 위해 작은 파일이 포함되어야합니다.</target>
        </trans-unit>
        <trans-unit id="66e61c8e819d339248e6c4780268b5ee71175f6c" translate="yes" xml:space="preserve">
          <source>If you started project as &lt;code&gt;codecept init acceptance&lt;/code&gt; in Codeception &amp;gt;= 3.0 they should be already enabled in config</source>
          <target state="translated">Codeception&amp;gt; = 3.0에서 &lt;code&gt;codecept init acceptance&lt;/code&gt; 프로젝트를 시작한 경우 config에서 이미 활성화되어 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="2ad202a2bf2a896e64392f1738fcd7b97cdf34ba" translate="yes" xml:space="preserve">
          <source>If you started project as &lt;code&gt;codecept init acceptance&lt;/code&gt; they should be already enabled in config</source>
          <target state="translated">&lt;code&gt;codecept init acceptance&lt;/code&gt; 프로젝트를 시작한 경우 config에서 이미 활성화되어 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="b548846f220c4ec9f7493e5d0bb2ab1bfa0d958a" translate="yes" xml:space="preserve">
          <source>If you use the &lt;code&gt;Symfony&lt;/code&gt; module, here is how you can access the Symfony container:</source>
          <target state="translated">&lt;code&gt;Symfony&lt;/code&gt; 모듈 을 사용하는 경우 Symfony 컨테이너에 액세스하는 방법은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="d37e17a106f1b0f05b428eab87244877ae286b25" translate="yes" xml:space="preserve">
          <source>If you want to activate the Command globally, because you are using more then one &lt;code&gt;codeception.yml&lt;/code&gt; file, you have to register your command in the &lt;code&gt;codeception.dist.yml&lt;/code&gt; in the root folder of your project.</source>
          <target state="translated">&lt;code&gt;codeception.yml&lt;/code&gt; 파일 을 두 개 이상 사용하기 때문에 명령을 전체적으로 활성화하려면 프로젝트의 루트 폴더 에있는 &lt;code&gt;codeception.dist.yml&lt;/code&gt; 에 명령을 등록해야 합니다.</target>
        </trans-unit>
        <trans-unit id="a0a5079a37b256be1193f120a3ef9dcbed152ff8" translate="yes" xml:space="preserve">
          <source>If you want to assert that there is a form error message for a specific key but don&amp;rsquo;t care about the actual error message you can omit &lt;code&gt;$expectedErrorMessage&lt;/code&gt;.</source>
          <target state="translated">특정 키에 대해 양식 오류 메시지가 있다고 주장하지만 실제 오류 메시지는 신경 쓰지 않으려면 &lt;code&gt;$expectedErrorMessage&lt;/code&gt; 생략 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="088b3fa6d95ff0c65f0f492874107dc99e8b10d7" translate="yes" xml:space="preserve">
          <source>If you want to automate splitting tests by parallel processes, and executing them using PHP script you should use Robo task runner to do that.</source>
          <target state="translated">병렬 프로세스로 분할 테스트를 자동화하고 PHP 스크립트를 사용하여 테스트를 수행하려면 Robo 작업 러너를 사용하여 수행해야합니다.</target>
        </trans-unit>
        <trans-unit id="cbaf6083b5015903cc0eea1e9b0868b51549b39c" translate="yes" xml:space="preserve">
          <source>If you want to check message or exception code, you can pass them with exception instance:</source>
          <target state="translated">메시지 또는 예외 코드를 확인하려면 예외 인스턴스와 함께 전달하십시오.</target>
        </trans-unit>
        <trans-unit id="448994a03c78e0d5a4e0b77a2c538d2a5b4e46b5" translate="yes" xml:space="preserve">
          <source>If you want to check message or throwable code, you can pass them with throwable instance:</source>
          <target state="translated">메시지 또는 던질 수있는 코드를 확인하려면 던질 수있는 인스턴스와 함께 전달할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="21a3df2751b418d149c31248e660a347d442305a" translate="yes" xml:space="preserve">
          <source>If you want to check that a table record was created use &lt;a href=&quot;modules/db#haveInDatabase&quot;&gt;&lt;code&gt;seeInDatabase&lt;/code&gt;&lt;/a&gt; method:</source>
          <target state="translated">테이블 레코드가 작성되었는지 확인하려면 &lt;a href=&quot;modules/db#haveInDatabase&quot;&gt; &lt;code&gt;seeInDatabase&lt;/code&gt; &lt;/a&gt; 메소드를 사용 하십시오 .</target>
        </trans-unit>
        <trans-unit id="8702536465175a8bfdac1df8d75b977b9c26d749" translate="yes" xml:space="preserve">
          <source>If you want to create a special database record for one test, you can use &lt;a href=&quot;modules/db#haveInDatabase&quot;&gt;&lt;code&gt;haveInDatabase&lt;/code&gt;&lt;/a&gt; method of &lt;code&gt;Db&lt;/code&gt; module:</source>
          <target state="translated">한 테스트에 대해 특수 데이터베이스 레코드를 작성하려는 경우 &lt;code&gt;Db&lt;/code&gt; 모듈의 &lt;a href=&quot;modules/db#haveInDatabase&quot;&gt; &lt;code&gt;haveInDatabase&lt;/code&gt; &lt;/a&gt; 메소드를 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="8afe87a96b8adee23bc5a585674686f68bb5ea54" translate="yes" xml:space="preserve">
          <source>If you want to get a class-like structure for your Cepts, you can use the Cest format instead of plain PHP. It is very simple and is fully compatible with Cept scenarios. It means that if you feel that your test is long enough and you want to split it, you can easily move it into classes.</source>
          <target state="translated">Cepts에 클래스와 같은 구조를 원한다면 일반 PHP 대신 Cest 형식을 사용할 수 있습니다. 매우 간단하며 Cept 시나리오와 완벽하게 호환됩니다. 그것은 당신이 당신의 시험이 충분히 길다고 생각하고 당신이 그것을 나누기를 원한다면, 당신은 쉽게 수업으로 이동할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="86f52500e37e1994462c6e9b9afe0b8bd3d248b8" translate="yes" xml:space="preserve">
          <source>If you want to reconfigure a module at runtime, you can use the &lt;code&gt;_reconfigure&lt;/code&gt; method of the module. You may call it from a helper class and pass in all the fields you want to change.</source>
          <target state="translated">런타임에 모듈을 재구성하려는 경우 모듈의 &lt;code&gt;_reconfigure&lt;/code&gt; 메소드를 사용할 수 있습니다 . 도우미 클래스에서 호출하여 변경하려는 모든 필드를 전달할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d052b3e3eb5912fb53ff1048e33eb0aa77c4e569" translate="yes" xml:space="preserve">
          <source>If you want to run a specific suite from the application you can execute:</source>
          <target state="translated">응용 프로그램에서 특정 제품군을 실행하려면 다음을 실행할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a2d4af9df065ef8f15a8f592ce85f2787da28a17" translate="yes" xml:space="preserve">
          <source>If you want to run tests locally just use preinstalled &lt;code&gt;taskCodecept&lt;/code&gt; task of Robo to define Codeception commands and put them inside &lt;code&gt;parallelExec&lt;/code&gt;.</source>
          <target state="translated">당신은 로컬 단지 사전 설치 사용하십시오 테스트를 실행하려면 &lt;code&gt;taskCodecept&lt;/code&gt; 의 Codeception 명령을 정의하고 내부를 넣어 로보의 작업을 &lt;code&gt;parallelExec&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b462735f904a335bafac9257365f2e5889b1eda7" translate="yes" xml:space="preserve">
          <source>If you want to use ORM for integration testing only, you should enable the framework module with only the &lt;code&gt;ORM&lt;/code&gt; part enabled:</source>
          <target state="translated">통합 테스트에만 ORM을 사용하려면 &lt;code&gt;ORM&lt;/code&gt; 부분 만 사용하여 프레임 워크 모듈을 사용으로 설정해야합니다 .</target>
        </trans-unit>
        <trans-unit id="07b5dba95ced48ad14f6bf2943a55a8c1214b96e" translate="yes" xml:space="preserve">
          <source>If you want to use ORM to work with data inside acceptance tests, you should also include only the ORM part of a module. Please note that inside acceptance tests, web applications work inside a webserver, so any test data can&amp;rsquo;t be cleaned up by rolling back transactions. You will need to disable cleaning up, and use the &lt;code&gt;Db&lt;/code&gt; module to clean the database up between tests. Here is a sample config:</source>
          <target state="translated">ORM을 사용하여 승인 테스트 내부의 데이터에 대해 작업하려면 모듈의 ORM 부분 만 포함해야합니다. 승인 테스트 내에서 웹 응용 프로그램은 웹 서버 내에서 작동하므로 트랜잭션을 롤백하여 테스트 데이터를 정리할 수 없습니다. 정리를 비활성화하고 &lt;code&gt;Db&lt;/code&gt; 모듈을 사용하여 테스트간에 데이터베이스를 정리해야합니다. 샘플 구성은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="6b0b38658ae1d158a1a11126b98e027b0fba1347" translate="yes" xml:space="preserve">
          <source>If you want to use it as default reporter enable it in &lt;code&gt;codeception.yml&lt;/code&gt;.</source>
          <target state="translated">기본 리포터로 사용하려면 &lt;code&gt;codeception.yml&lt;/code&gt; 에서 활성화하십시오 .</target>
        </trans-unit>
        <trans-unit id="304ec828ed495c2d8d6547454cf2b1a4d839d2ce" translate="yes" xml:space="preserve">
          <source>If you write your scenario-driven tests in the Cest format (which is the recommended approach), you can bypass the manual creation of a PageObject and delegate this task to Codeception. If you specify which object you need for a test, Codeception will try to create it using the dependency injection container. In the case of a PageObject you should declare a class as a parameter for a test method:</source>
          <target state="translated">시나리오 중심 테스트를 Cest 형식 (권장되는 접근 방식)으로 작성하는 경우 수동으로 PageObject를 작성하지 않고이 태스크를 Codeception에 위임 할 수 있습니다. 테스트에 필요한 객체를 지정하면 Codeception은 종속성 주입 컨테이너를 사용하여 객체를 만들려고 시도합니다. PageObject의 경우 클래스를 테스트 메소드의 매개 변수로 선언해야합니다.</target>
        </trans-unit>
        <trans-unit id="9dd16419945d487192ac6937f1c22d747175cf29" translate="yes" xml:space="preserve">
          <source>If your module relies on other model you can generate them both. To create a related module you can use either &lt;code&gt;factory&lt;/code&gt; or &lt;code&gt;entity&lt;/code&gt; prefix, depending on ORM you use.</source>
          <target state="translated">모듈이 다른 모델에 의존하는 경우 둘 다 생성 할 수 있습니다. 관련 모듈을 작성하려면 사용하는 ORM에 따라 &lt;code&gt;factory&lt;/code&gt; 또는 &lt;code&gt;entity&lt;/code&gt; 접 두부를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="937c56de80f761b7da3cc419a0b19d17f2944b8b" translate="yes" xml:space="preserve">
          <source>If your page triggers an ajax request, you can perform it manually. This action sends a GET ajax request with specified params.</source>
          <target state="translated">페이지가 ajax 요청을 트리거하면 수동으로 수행 할 수 있습니다. 이 조치는 지정된 매개 변수와 함께 GET 아약스 요청을 보냅니다.</target>
        </trans-unit>
        <trans-unit id="32bb28f86836c4afa90e9a6d23957add3a296118" translate="yes" xml:space="preserve">
          <source>If your page triggers an ajax request, you can perform it manually. This action sends a POST ajax request with specified params. Additional params can be passed as array.</source>
          <target state="translated">페이지가 ajax 요청을 트리거하면 수동으로 수행 할 수 있습니다. 이 조치는 지정된 매개 변수와 함께 POST 아약스 요청을 보냅니다. 추가 매개 변수는 배열로 전달 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="da927b37a67d0e4dd6597cb9025feed8b8f6c26d" translate="yes" xml:space="preserve">
          <source>If your page triggers an ajax request, you can perform it manually. This action sends an ajax request with specified method and params.</source>
          <target state="translated">페이지가 ajax 요청을 트리거하면 수동으로 수행 할 수 있습니다. 이 조치는 지정된 메소드 및 매개 변수와 함께 ajax 요청을 보냅니다.</target>
        </trans-unit>
        <trans-unit id="bfa1b936b9b60a82d757b950ac68f6e50dd5e269" translate="yes" xml:space="preserve">
          <source>If your project consists of several applications (frontend, admin, api) or you are using the Symfony framework with its bundles, you may be interested in having all tests for all applications (bundles) executed in one runner. In this case you will get one report that covers the whole project.</source>
          <target state="translated">프로젝트가 여러 응용 프로그램 (프론트 엔드, 관리자, api)으로 구성되어 있거나 번들과 함께 Symfony 프레임 워크를 사용하는 경우 한 응용 프로그램에서 모든 응용 프로그램 (번들)에 대한 모든 테스트를 실행하는 데 관심이있을 수 있습니다. 이 경우 전체 프로젝트를 다루는 하나의 보고서를 얻게됩니다.</target>
        </trans-unit>
        <trans-unit id="4086c52026a85ae06ae56c5284ce3662ccb80cf2" translate="yes" xml:space="preserve">
          <source>If your remote server is accessed through a shared mount, or a mounted folder (IE: Docker Volumes), you can still get merged coverage details. Use the &lt;code&gt;work_dir&lt;/code&gt; option to specify the work directory. When CodeCoverage runs, Codeception will update any path that matches the &lt;code&gt;work_dir&lt;/code&gt; option to match the local current project directory.</source>
          <target state="translated">공유 마운트 또는 마운트 된 폴더 (IE : Docker Volumes)를 통해 원격 서버에 액세스 한 경우에도 병합 된 적용 범위 세부 정보를 얻을 수 있습니다. 사용 &lt;code&gt;work_dir&lt;/code&gt; 작업 디렉토리를 지정하는 옵션을 선택합니다. CodeCoverage가 실행되면 Codeception은 &lt;code&gt;work_dir&lt;/code&gt; 옵션 과 일치하는 경로를 로컬 현재 프로젝트 디렉토리 와 일치하도록 업데이트합니다 .</target>
        </trans-unit>
        <trans-unit id="3eb9ee050a22a12995729bdec7f3e2318e945dbe" translate="yes" xml:space="preserve">
          <source>If your site is available only locally or via VPN you should use a tunnel app. In this case add &lt;code&gt;browserstack.local&lt;/code&gt; capability and set it to true.</source>
          <target state="translated">사이트가 로컬 또는 VPN을 통해서만 제공되는 경우 터널 앱을 사용해야합니다. 이 경우 &lt;code&gt;browserstack.local&lt;/code&gt; 기능을 추가 하고 true로 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="53dbecdaf80f95a17779a4516798a1730aebb15b" translate="yes" xml:space="preserve">
          <source>Imagine that by clicking checkbox you trigger ajax request which updates user settings. We emulate that click by running this ajax request manually.</source>
          <target state="translated">확인란을 클릭하면 사용자 설정을 업데이트하는 ajax 요청을 트리거한다고 상상해보십시오. 이 ajax 요청을 수동으로 실행하여 클릭을 에뮬레이트합니다.</target>
        </trans-unit>
        <trans-unit id="ee58032a88d852223bb4e790fc599d66e68139ab" translate="yes" xml:space="preserve">
          <source>In 3rd argument you can set number a seconds to wait for element to appear</source>
          <target state="translated">세 번째 인수에서 요소가 나타날 때까지 숫자를 초 단위로 설정할 수 있습니다</target>
        </trans-unit>
        <trans-unit id="594b0fda33097a504c89a1b50cf77cfdca824f65" translate="yes" xml:space="preserve">
          <source>In &lt;code&gt;_before&lt;/code&gt; and &lt;code&gt;_after&lt;/code&gt; methods you can use common setups and teardowns for the tests in the class.</source>
          <target state="translated">에서 &lt;code&gt;_before&lt;/code&gt; 및 &lt;code&gt;_after&lt;/code&gt; 방법 당신은 클래스의 시험에 대한 일반 설정 및 분해 분석을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5e736eccc647fee76e597fe774858b7d0c8da08b" translate="yes" xml:space="preserve">
          <source>In Cest format you don&amp;rsquo;t have native support for test doubles so it&amp;rsquo;s recommended to include a trait &lt;code&gt;\Codeception\Test\Feature\Stub&lt;/code&gt; to enable mocks inside a test. Alternatively, install and enable &lt;a href=&quot;https://github.com/Codeception/MockeryModule&quot;&gt;Mockery module&lt;/a&gt;.</source>
          <target state="translated">Cest 형식에서는 테스트 복식을 기본적으로 지원하지 않으므로 테스트 내부에서 모의를 활성화하려면 특성 &lt;code&gt;\Codeception\Test\Feature\Stub&lt;/code&gt; 을 포함하는 것이 좋습니다 . 또는 &lt;a href=&quot;https://github.com/Codeception/MockeryModule&quot;&gt;Mockery 모듈을&lt;/a&gt; 설치하고 활성화하십시오 .</target>
        </trans-unit>
        <trans-unit id="725fab6251d6dfedc130ffc7da0fb3dfd892750d" translate="yes" xml:space="preserve">
          <source>In Codeception you can combine tests written in Gherkin format with tests written in Cept/Cest/Test formats. This way you can keep your feature files compact with minimal set of scenarios, and write regular tests to cover all cases.</source>
          <target state="translated">Codeception에서는 Gherkin 형식으로 작성된 테스트와 Cept / Cest / Test 형식으로 작성된 테스트를 결합 할 수 있습니다. 이렇게하면 최소한의 시나리오 세트로 기능 파일을 압축 할 수 있으며 모든 경우를 다루기 위해 정기적 인 테스트를 작성할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="dfc32adf3fd10eb0542c568decb7a8c9394bff29" translate="yes" xml:space="preserve">
          <source>In acceptance tests, your tests are interacting with the application through a web server. This means that the test and the application work with the same database. You should provide the same credentials in the Db module that your application uses, then you can access the database for assertions (&lt;code&gt;seeInDatabase&lt;/code&gt; actions) and to perform automatic clean-ups.</source>
          <target state="translated">승인 테스트에서 테스트는 웹 서버를 통해 응용 프로그램과 상호 작용합니다. 이는 테스트와 응용 프로그램이 동일한 데이터베이스에서 작동 함을 의미합니다. 당신은 당신의 응용 프로그램의 사용은, 다음 주장 (대한 데이터베이스를 액세스 할 수있는 DB 모듈에서 동일한 자격 증명을 제공해야 &lt;code&gt;seeInDatabase&lt;/code&gt; 의 행동) 및 자동 클린 - 업을 수행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="314e4d7c870bc424933d30d862fcbfcbfbfd0fbe" translate="yes" xml:space="preserve">
          <source>In addition to the standard test formats (Cept, Cest, Unit, Gherkin) you can implement your own format classes to customise your test execution. Specify these in your suite configuration:</source>
          <target state="translated">표준 테스트 형식 (Cept, Cest, Unit, Gherkin) 외에도 고유 한 형식 클래스를 구현하여 테스트 실행을 사용자 정의 할 수 있습니다. 스위트 구성에서 다음을 지정하십시오.</target>
        </trans-unit>
        <trans-unit id="024396dbc1e81f7862c8ad976be34845a2fd701a" translate="yes" xml:space="preserve">
          <source>In both examples you should not be worried about the data persistence between tests. The Doctrine2 and Laravel5 modules will clean up the created data at the end of a test. This is done by wrapping each test in a transaction and rolling it back afterwards.</source>
          <target state="translated">두 예제 모두 테스트 간의 데이터 지속성에 대해 걱정할 필요가 없습니다. Doctrine2 및 Laravel5 모듈은 테스트가 끝나면 생성 된 데이터를 정리합니다. 이는 각 테스트를 트랜잭션에 래핑하고 나중에 롤백하여 수행됩니다.</target>
        </trans-unit>
        <trans-unit id="277c24173be2a8c5912355edb2a7a3021c614b9a" translate="yes" xml:space="preserve">
          <source>In case of &lt;code&gt;parallelExec&lt;/code&gt; task we recommend to save results as JUnit XML, which can be merged and plugged into Continuous Integration server.</source>
          <target state="translated">&lt;code&gt;parallelExec&lt;/code&gt; 작업의 경우 결과를 JUnit XML로 저장하는 것이 좋습니다.이를 JUnit XML로 병합하여 Continuous Integration 서버에 연결할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0b0a5528d38413b179131fb08d8cd29eb1b8ce63" translate="yes" xml:space="preserve">
          <source>In case scenarios represent the same logic but differ on data, we can use &lt;em&gt;Scenario Outline&lt;/em&gt; to provide different examples for the same behavior. Scenario outline is just like a basic scenario with some values replaced with placeholders, which are filled from a table. Each set of values is executed as a different test.</source>
          <target state="translated">시나리오가 동일한 논리를 나타내지 만 데이터가 다른 경우 &lt;em&gt;시나리오 개요&lt;/em&gt; 를 사용 하여 동일한 동작에 대해 다른 예를 제공 할 수 있습니다 . 시나리오 개요는 테이블에서 채워지는 자리 표시 자로 대체 된 일부 값이있는 기본 시나리오와 같습니다. 각 값 세트는 다른 테스트로 실행됩니다.</target>
        </trans-unit>
        <trans-unit id="76e03aa809bc96ad8105337f151c2f0be8750f38" translate="yes" xml:space="preserve">
          <source>In case you don&amp;rsquo;t use containers you can isolate processes by starting different web servers and databases per each test process.</source>
          <target state="translated">컨테이너를 사용하지 않는 경우 각 테스트 프로세스마다 다른 웹 서버 및 데이터베이스를 시작하여 프로세스를 분리 할 수 ​​있습니다.</target>
        </trans-unit>
        <trans-unit id="9f7451a076cbe01bc330510183b081f8faaff73c" translate="yes" xml:space="preserve">
          <source>In case you don&amp;rsquo;t want to write long XML strings, consider using &lt;a href=&quot;reference/xmlbuilder&quot;&gt;XmlBuilder&lt;/a&gt; class. It will help you to build complex XMLs in jQuery-like style. In the next example we will use &lt;code&gt;XmlBuilder&lt;/code&gt; instead of regular XML.</source>
          <target state="translated">긴 XML 문자열을 작성하지 않으려면 &lt;a href=&quot;reference/xmlbuilder&quot;&gt;XmlBuilder&lt;/a&gt; 클래스 사용을 고려하십시오 . jQuery와 유사한 스타일로 복잡한 XML을 작성하는 데 도움이됩니다. 다음 예제에서는 일반 XML 대신 &lt;code&gt;XmlBuilder&lt;/code&gt; 를 사용 합니다.</target>
        </trans-unit>
        <trans-unit id="b81c46f832a5af85228a7a7857546a1452178bd5" translate="yes" xml:space="preserve">
          <source>In case you need to use a module which depends on a conflicted one, specify it as a dependent module in the configuration. You may want to use &lt;code&gt;WebDriver&lt;/code&gt; with the &lt;code&gt;REST&lt;/code&gt; module which interacts with a server through &lt;code&gt;PhpBrowser&lt;/code&gt;. In this case your config should look like this:</source>
          <target state="translated">충돌하는 모듈에 종속 된 모듈을 사용해야하는 경우 구성에서 종속 모듈로 지정하십시오. &lt;code&gt;PhpBrowser&lt;/code&gt; 를 통해 서버와 상호 작용 하는 &lt;code&gt;REST&lt;/code&gt; 모듈 과 함께 &lt;code&gt;WebDriver&lt;/code&gt; 를 사용할 수 있습니다 . 이 경우 구성은 다음과 같아야합니다.</target>
        </trans-unit>
        <trans-unit id="119a848c332d442498cf56296131822fb70083cc" translate="yes" xml:space="preserve">
          <source>In case your ORM expects a related record itself (Doctrine) then you should use &lt;code&gt;entity&lt;/code&gt; prefix:</source>
          <target state="translated">ORM이 관련 레코드 자체 (교리)를 기대하는 경우 &lt;code&gt;entity&lt;/code&gt; 접 두부를 사용해야 합니다.</target>
        </trans-unit>
        <trans-unit id="760e0a3517b28cb58bf897baafd381c86ce36178" translate="yes" xml:space="preserve">
          <source>In case your ORM expects an Id of a related record (Eloquent) to be set use &lt;code&gt;factory&lt;/code&gt; prefix:</source>
          <target state="translated">ORM이 관련 레코드 ID (Eloquent)를 &lt;code&gt;factory&lt;/code&gt; 접두사를 사용하여 설정할 것으로 예상하는 경우 :</target>
        </trans-unit>
        <trans-unit id="1597885f2c681d967b06277344719765190a557d" translate="yes" xml:space="preserve">
          <source>In case your REST API works with XML format you can use similar methods to test its data and structure. There is &lt;code&gt;seeXmlResponseIncludes&lt;/code&gt; method to match inclusion of XML parts in response, and &lt;code&gt;seeXmlResponseMatchesXpath&lt;/code&gt; to validate its structure.</source>
          <target state="translated">REST API가 XML 형식으로 작동하는 경우 유사한 메소드를 사용하여 해당 데이터 및 구조를 테스트 할 수 있습니다. 이 &lt;code&gt;seeXmlResponseIncludes&lt;/code&gt; 의 응답 XML 부품의 포함에 맞게 방법 및 &lt;code&gt;seeXmlResponseMatchesXpath&lt;/code&gt; 구조를 검증은.</target>
        </trans-unit>
        <trans-unit id="03ff2ae97524f2c14c0d867f697a82cb183b67fa" translate="yes" xml:space="preserve">
          <source>In cases you want to use data from database inside your factory definitions you can define them in Helper. For instance, if you use Doctrine, this allows you to access &lt;code&gt;EntityManager&lt;/code&gt; inside a definition.</source>
          <target state="translated">팩토리 정의 내에서 데이터베이스의 데이터를 사용하려는 경우 도우미에서 정의 할 수 있습니다. 예를 들어 Doctrine을 사용 하면 정의 내에서 &lt;code&gt;EntityManager&lt;/code&gt; 에 액세스 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="e2394b4cd8579620a73325720edb01289ea42011" translate="yes" xml:space="preserve">
          <source>In functional testing, unlike running the application the traditional way, the PHP application does not stop after it has finished processing a request. Since all requests are run in one memory container, they are not isolated. So &lt;strong&gt;if you see that your tests are mysteriously failing when they shouldn&amp;rsquo;t - try to execute a single test.&lt;/strong&gt; This will show if the tests were failing because they weren&amp;rsquo;t isolated during the run. Keep your memory clean, avoid memory leaks and clean global and static variables.</source>
          <target state="translated">기능 테스트에서 전통적인 방식으로 응용 프로그램을 실행하는 것과 달리 PHP 응용 프로그램은 요청 처리를 마친 후에 중지되지 않습니다. 모든 요청은 하나의 메모리 컨테이너에서 실행되므로 격리되지 않습니다. 따라서 &lt;strong&gt;테스트가 불가피하게 실패했을 때 테스트가 실패한 것으로 보이면 단일 테스트를 실행하십시오. &lt;/strong&gt;테스트 중에 테스트가 격리되지 않았기 때문에 테스트에 실패했는지 여부가 표시됩니다. 메모리를 깨끗하게 유지하고 메모리 누수를 방지하며 전역 및 정적 변수를 청소하십시오.</target>
        </trans-unit>
        <trans-unit id="1b6367eb8d1b191f2afc914aacb9d5fc325646f2" translate="yes" xml:space="preserve">
          <source>In most cases tests don&amp;rsquo;t guarantee that the application works 100% as it is supposed to. You can&amp;rsquo;t predict all possible scenarios and exceptional situations for complex apps, but with tests you can cover the most important parts of your app and at least be sure they work as predicted.</source>
          <target state="translated">대부분의 경우 테스트에서 응용 프로그램이 예상대로 100 % 작동한다고 보장하지 않습니다. 복잡한 앱에 대해 가능한 모든 시나리오와 예외 상황을 예측할 수는 없지만 테스트를 통해 앱의 가장 중요한 부분을 커버하고 최소한 예상대로 작동하는지 확인할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8417a1c884a42ec3615d3677e596c919959d9122" translate="yes" xml:space="preserve">
          <source>In order to have your database populated with data you need a raw SQL dump. Simply put the dump in the &lt;code&gt;tests/_data&lt;/code&gt; directory (by default) and specify the path in the config. The next time after the database is cleared, all your data will be restored from the dump. Don&amp;rsquo;t forget to include &lt;code&gt;CREATE TABLE&lt;/code&gt; statements in the dump.</source>
          <target state="translated">데이터베이스를 데이터로 채우려면 원시 SQL 덤프가 필요합니다. 기본적으로 덤프를 &lt;code&gt;tests/_data&lt;/code&gt; 디렉토리에 넣고 구성에서 경로를 지정하십시오. 다음에 데이터베이스가 지워지면 모든 데이터가 덤프에서 복원됩니다. 덤프에 &lt;code&gt;CREATE TABLE&lt;/code&gt; 문 을 포함시키는 것을 잊지 마십시오 .</target>
        </trans-unit>
        <trans-unit id="0bc097f67594e95de03e3c3ba316b75ca06c34ef" translate="yes" xml:space="preserve">
          <source>In order to have your database populated with data you need a valid js file with data (of the same style which can be fed up to mongo binary) File can be generated by RockMongo export command You can also use directory, generated by</source>
          <target state="translated">데이터베이스에 데이터를 채우려면 데이터가있는 유효한 js 파일이 필요합니다 (Mongo 바이너리에 공급할 수있는 동일한 스타일). 파일은 RockMongo 내보내기 명령으로 생성 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="61207f1fc70660fa5ae2f3bdf9634f3f7a60d911" translate="yes" xml:space="preserve">
          <source>In order to make auto-wiring work, you will need to implement the &lt;code&gt;_inject()&lt;/code&gt; method with the list of desired arguments. It is important to specify the type of arguments, so Codeception can guess which objects are expected to be received. The &lt;code&gt;_inject()&lt;/code&gt; will only be invoked once, just after creation of the TestCase object (either Cest or Test). Dependency Injection will also work in a similar manner for Helper and Actor classes.</source>
          <target state="translated">자동 배선 작업을 수행하려면 원하는 인수 목록으로 &lt;code&gt;_inject()&lt;/code&gt; 메서드 를 구현해야합니다 . 인수 유형을 지정하는 것이 중요하므로 Codeception은 수신 할 오브젝트를 추측 할 수 있습니다. &lt;code&gt;_inject()&lt;/code&gt; 단지 테스트 케이스 객체 (CEST 또는 시험 중 하나)의 생성 후, 한 번 호출됩니다. Dependency Injection은 도우미 및 액터 클래스에서도 비슷한 방식으로 작동합니다.</target>
        </trans-unit>
        <trans-unit id="ad8a294daa024219e1267427d707cede2ec356e3" translate="yes" xml:space="preserve">
          <source>In order to test the contents of a specific file stored on any remote FTP/SFTP system this module downloads a temporary file to the local system. The temporary directory is defined by default as</source>
          <target state="translated">원격 FTP / SFTP 시스템에 저장된 특정 파일의 내용을 테스트하기 위해이 모듈은 임시 파일을 로컬 시스템으로 다운로드합니다. 임시 디렉토리는 기본적으로 다음과 같이 정의됩니다.</target>
        </trans-unit>
        <trans-unit id="9fc819bb7a5a23e8b4249ba5cad35849f3d6ce39" translate="yes" xml:space="preserve">
          <source>In simple terms we set the &lt;code&gt;$_REQUEST&lt;/code&gt;, &lt;code&gt;$_GET&lt;/code&gt; and &lt;code&gt;$_POST&lt;/code&gt; variables and then we execute the application from a test. This may be valuable, as functional tests are faster and provide detailed stack traces on failures.</source>
          <target state="translated">간단히 말해서 &lt;code&gt;$_REQUEST&lt;/code&gt; , &lt;code&gt;$_GET&lt;/code&gt; 및 &lt;code&gt;$_POST&lt;/code&gt; 변수를 설정 한 다음 테스트에서 응용 프로그램을 실행합니다. 기능 테스트가 더 빠르며 오류에 대한 자세한 스택 추적을 제공하므로 이는 유용 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d04fa50184e8bab72b12588bcf473eca20afdf0e" translate="yes" xml:space="preserve">
          <source>In tests, you can use a StepObject by instantiating &lt;code&gt;Step\Acceptance\Admin&lt;/code&gt; instead of &lt;code&gt;AcceptanceTester&lt;/code&gt;:</source>
          <target state="translated">테스트에서, 당신은 인스턴스화하여 StepObject을 사용할 수 있습니다 &lt;code&gt;Step\Acceptance\Admin&lt;/code&gt; 대신 &lt;code&gt;AcceptanceTester&lt;/code&gt; 를 :</target>
        </trans-unit>
        <trans-unit id="7ef104ee0c9546e02c06d52885b09a3789cbb3b4" translate="yes" xml:space="preserve">
          <source>In that file you can specify just the options you wish to override:</source>
          <target state="translated">해당 파일에서 재정의하려는 옵션 만 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a3fc39e6050b456ddd0a79ffc98105ca7e490cb3" translate="yes" xml:space="preserve">
          <source>In the &lt;code&gt;PhpBrowser&lt;/code&gt; you can test the page contents. In most cases, you just need to check that the required text or element is on the page.</source>
          <target state="translated">에서 &lt;code&gt;PhpBrowser&lt;/code&gt; 당신은 페이지의 내용을 테스트 할 수 있습니다. 대부분의 경우 필요한 텍스트 나 요소가 페이지에 있는지 확인하면됩니다.</target>
        </trans-unit>
        <trans-unit id="5f721b0874414b2962d92f537928eba672663abc" translate="yes" xml:space="preserve">
          <source>In the extension, you can access the currently passed options via the &lt;code&gt;options&lt;/code&gt; property. You also can access the global configuration via the &lt;code&gt;\Codeception\Configuration::config()&lt;/code&gt; method. If you want to have custom options for your extension, you can pass them in the &lt;code&gt;codeception.yml&lt;/code&gt; file:</source>
          <target state="translated">확장에서 &lt;code&gt;options&lt;/code&gt; 속성 을 통해 현재 전달 된 옵션에 액세스 할 수 있습니다 . &lt;code&gt;\Codeception\Configuration::config()&lt;/code&gt; 메서드 를 통해 전역 구성에 액세스 할 수도 있습니다 . 확장에 대한 사용자 정의 옵션을 &lt;code&gt;codeception.yml&lt;/code&gt; 파일 에 전달할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1403eae0bc95c9d95d8f19e40b48439eab3b2744" translate="yes" xml:space="preserve">
          <source>In the module configuration use the format &lt;code&gt;key&lt;/code&gt;:&lt;code&gt;secret&lt;/code&gt;@hub.testingbot.com&amp;rsquo; for &lt;code&gt;host&lt;/code&gt;</source>
          <target state="translated">모듈 구성 에서 &lt;code&gt;host&lt;/code&gt; 의 형식 &lt;code&gt;key&lt;/code&gt; : &lt;code&gt;secret&lt;/code&gt; @ hub.testingbot.com '을 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="7f680ccba9bc101fb5e778555768e56d6ffa9184" translate="yes" xml:space="preserve">
          <source>In the module configuration use the format &lt;code&gt;username&lt;/code&gt;:&lt;code&gt;access_key&lt;/code&gt;@hub.browserstack.com&amp;rsquo; for &lt;code&gt;host&lt;/code&gt;</source>
          <target state="translated">모듈 구성 에서 &lt;code&gt;host&lt;/code&gt; 형식으로 &lt;code&gt;username&lt;/code&gt; : &lt;code&gt;access_key&lt;/code&gt; @ hub.browserstack.com ' 형식을 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="128f34a5faeb8ff8497c725ccfbc0cc36128ad84" translate="yes" xml:space="preserve">
          <source>In the module configuration use the format &lt;code&gt;username&lt;/code&gt;:&lt;code&gt;access_key&lt;/code&gt;@ondemand.saucelabs.com&amp;rsquo; for &lt;code&gt;host&lt;/code&gt;</source>
          <target state="translated">모듈 구성 에서 &lt;code&gt;host&lt;/code&gt; &lt;code&gt;username&lt;/code&gt; : &lt;code&gt;access_key&lt;/code&gt; @ ondemand.saucelabs.com ' 형식을 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="1a41c102594eca24555416213df21059a2280015" translate="yes" xml:space="preserve">
          <source>In this case configuration will be changed instantly. In next example we change root URL for PhpBrowser to point to the admin area, so next &lt;code&gt;amOnPage('/')&lt;/code&gt; will open &lt;code&gt;/admin/&lt;/code&gt; page.</source>
          <target state="translated">이 경우 구성이 즉시 변경됩니다. 다음 예에서는 PhpBrowser의 루트 URL이 관리 영역을 가리 키도록 변경하므로 다음 &lt;code&gt;amOnPage('/')&lt;/code&gt; 는 &lt;code&gt;/admin/&lt;/code&gt; page를 엽니 다 .</target>
        </trans-unit>
        <trans-unit id="59212e1d404472b9a2dc97b30ab6109fd64a2a14" translate="yes" xml:space="preserve">
          <source>In this case remote Code Coverage results won&amp;rsquo;t be merged with local ones, if this option is enabled. Merging is possible only in case a remote and local files have the same path. But in case of running tests on a remote server we are not sure of it.</source>
          <target state="translated">이 경우이 옵션을 사용하면 원격 코드 적용 결과가 로컬 결과와 병합되지 않습니다. 원격 파일과 로컬 파일의 경로가 동일한 경우에만 병합이 가능합니다. 그러나 원격 서버에서 테스트를 실행하는 경우 확실하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="d1b84c0b8ef50b84916cfb8fc9d7b1dd96f1b311" translate="yes" xml:space="preserve">
          <source>In this case you can define factories from a Helper class with &lt;code&gt;_define&lt;/code&gt; method.</source>
          <target state="translated">이 경우 &lt;code&gt;_define&lt;/code&gt; 메소드 를 사용하여 Helper 클래스에서 팩토리를 정의 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="28d5b9f09b9a9f77adfeedca91abdbf38d223065" translate="yes" xml:space="preserve">
          <source>In this case you can match that record contains fields with data types you expected. The list of possible data types:</source>
          <target state="translated">이 경우 해당 레코드에 예상 한 데이터 유형의 필드가 포함되도록 할 수 있습니다. 가능한 데이터 유형 목록 :</target>
        </trans-unit>
        <trans-unit id="4fca86eda23ebcef51d19f6119b7f4a78671d4f3" translate="yes" xml:space="preserve">
          <source>In this case you can use the methods from the Doctrine2 module, while Doctrine itself uses the Symfony module to establish connections to the database. In this case a test might look like:</source>
          <target state="translated">이 경우 Doctrine2 모듈의 메소드를 사용할 수 있지만 Doctrine 자체는 Symfony 모듈을 사용하여 데이터베이스에 연결합니다. 이 경우 테스트는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="774a357bf505c61ee03b71fa971c97a7b2a87ea3" translate="yes" xml:space="preserve">
          <source>In this case, please ensure that &lt;code&gt;\Helper\Acceptance&lt;/code&gt; is loaded before WebDriver so new capabilities could be applied.</source>
          <target state="translated">이 경우 WebDriver보다 먼저 &lt;code&gt;\Helper\Acceptance&lt;/code&gt; 가로드되어 새로운 기능을 적용 할 수 있는지 확인하십시오 .</target>
        </trans-unit>
        <trans-unit id="11204b3d4213020f4c613cd25fc5849d51d7052f" translate="yes" xml:space="preserve">
          <source>In this case, we are waiting for the &amp;lsquo;agree&amp;rsquo; button to appear and then click it. If it didn&amp;rsquo;t appear after 30 seconds, the test will fail. There are other &lt;code&gt;wait&lt;/code&gt; methods you may use, like &lt;a href=&quot;modules/webdriver#waitForText&quot;&gt;waitForText&lt;/a&gt;, &lt;a href=&quot;modules/webdriver#waitForElementVisible&quot;&gt;waitForElementVisible&lt;/a&gt; and others.</source>
          <target state="translated">이 경우 '동의'버튼이 나타날 때까지 기다렸다가 클릭하십시오. 30 초 후에도 나타나지 않으면 테스트가 실패합니다. &lt;a href=&quot;modules/webdriver#waitForText&quot;&gt;waitForText&lt;/a&gt; , &lt;a href=&quot;modules/webdriver#waitForElementVisible&quot;&gt;waitForElementVisible&lt;/a&gt; 등과 같은 다른 &lt;code&gt;wait&lt;/code&gt; 메소드가 있습니다 .</target>
        </trans-unit>
        <trans-unit id="ac673d1d8798c0b6d965b7ecc1973cc9ab5de334" translate="yes" xml:space="preserve">
          <source>In this case, we performed, or &amp;lsquo;did&amp;rsquo;, some actions in the second window with the &lt;code&gt;does&lt;/code&gt; method on a friend object.</source>
          <target state="translated">이 경우, 친구 객체 에서 &lt;code&gt;does&lt;/code&gt; 메소드를 사용하여 두 번째 창에서 일부 작업을 수행했거나 'did' .</target>
        </trans-unit>
        <trans-unit id="0528556a528ac7b281d9be1e398ebaaa9dc498e8" translate="yes" xml:space="preserve">
          <source>In this chapter we will cover some techniques and options that you can use to improve your testing experience and keep your project better organized.</source>
          <target state="translated">이 장에서는 테스트 경험을 향상시키고 프로젝트를보다 잘 조직화하는 데 사용할 수있는 몇 가지 기술과 옵션을 다룹니다.</target>
        </trans-unit>
        <trans-unit id="407cb83b841aee54c4a47e03c557484f8278d510" translate="yes" xml:space="preserve">
          <source>In this chapter we will explain how you can extend and customize the file structure and test execution routines.</source>
          <target state="translated">이 장에서는 파일 구조를 확장하고 사용자 정의하고 실행 루틴을 테스트하는 방법을 설명합니다.</target>
        </trans-unit>
        <trans-unit id="4f93809955f22efc017476d7eac9285f12298460" translate="yes" xml:space="preserve">
          <source>In this configuration file you can enable/disable and reconfigure modules for your needs. When you change the configuration, the actor classes are rebuilt automatically. If the actor classes are not created or updated as you expect, try to generate them manually with the &lt;code&gt;build&lt;/code&gt; command:</source>
          <target state="translated">이 구성 파일에서 필요에 따라 모듈을 활성화 / 비활성화 및 재구성 할 수 있습니다. 구성을 변경하면 액터 클래스가 자동으로 다시 작성됩니다. 액터 클래스가 예상대로 생성되거나 업데이트되지 않으면 &lt;code&gt;build&lt;/code&gt; 명령을 사용 하여 액터 클래스를 수동으로 생성하십시오 .</target>
        </trans-unit>
        <trans-unit id="fc9e83800dcb8dd08c0ea76b4574dd9c91aa9cb2" translate="yes" xml:space="preserve">
          <source>In this example factories are loaded from &lt;code&gt;tests/_support/factories&lt;/code&gt; directory. Please note that this directory is relative from the codeception.yml file (so for Yii2 it would be codeception/_support/factories). You should create this directory manually and create PHP files in it with factories definitions following &lt;a href=&quot;https://github.com/thephpleague/factory-muffin#usage&quot;&gt;official documentation&lt;/a&gt;.</source>
          <target state="translated">이 예제에서 팩토리는 &lt;code&gt;tests/_support/factories&lt;/code&gt; 디렉토리 에서로드됩니다 . 이 디렉토리는 codeception.yml 파일과 관련이 있습니다 (Yii2의 경우 codeception / _support / factories). 이 디렉토리를 수동으로 작성하고 &lt;a href=&quot;https://github.com/thephpleague/factory-muffin#usage&quot;&gt;공식 문서에&lt;/a&gt; 따라 팩토리 정의로 PHP 파일을 작성해야 합니다 .</target>
        </trans-unit>
        <trans-unit id="2bf200994f2d2fe3c2483aa226bdb6f61dd7b8f4" translate="yes" xml:space="preserve">
          <source>In this example we use the API of the &lt;a href=&quot;https://github.com/facebook/php-webdriver&quot;&gt;facebook/php-webdriver&lt;/a&gt; library, a Selenium WebDriver client the module is build on. You can also access the &lt;code&gt;webDriver&lt;/code&gt; property of a module to get access to the &lt;code&gt;Facebook\WebDriver\RemoteWebDriver&lt;/code&gt; instance for direct Selenium interaction.</source>
          <target state="translated">이 예제에서는 모듈이 빌드 된 Selenium WebDriver 클라이언트 인 &lt;a href=&quot;https://github.com/facebook/php-webdriver&quot;&gt;facebook / php-webdriver&lt;/a&gt; 라이브러리 의 API를 사용합니다 . 모듈 의 &lt;code&gt;webDriver&lt;/code&gt; 속성에 액세스하여 직접 Selenium 상호 작용을 위해 &lt;code&gt;Facebook\WebDriver\RemoteWebDriver&lt;/code&gt; 인스턴스에 액세스 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="4217ce00d6c6702e9adc56a8cc27dcf7a8dc48aa" translate="yes" xml:space="preserve">
          <source>In this example we will wait up to 60 seconds for all jQuery AJAX requests to finish.</source>
          <target state="translated">이 예에서는 모든 jQuery AJAX 요청이 완료 될 때까지 최대 60 초 동안 대기합니다.</target>
        </trans-unit>
        <trans-unit id="b44233b041df4daba01d582eef98b59798297df2" translate="yes" xml:space="preserve">
          <source>In this helper you can replace the parent&amp;rsquo;s methods with your own implementation. You can also replace the &lt;code&gt;_before&lt;/code&gt; and &lt;code&gt;_after&lt;/code&gt; hooks, which might be an option when you need to customize starting and stopping of a testing session.</source>
          <target state="translated">이 도우미에서 부모의 메서드를 자신의 구현으로 바꿀 수 있습니다. &lt;code&gt;_before&lt;/code&gt; 및 &lt;code&gt;_after&lt;/code&gt; 후크를 대체 할 수도 있습니다. 이는 테스트 세션의 시작 및 중지를 사용자 정의해야 할 때 옵션 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c8d564a362dcff50be70698afe7f35a9b062c519" translate="yes" xml:space="preserve">
          <source>In your helpers you can use these assertions:</source>
          <target state="translated">도우미에서 다음과 같은 어설 션을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="aabe007ac57bad4f629530925f92a8ebdefab4db" translate="yes" xml:space="preserve">
          <source>Include and exclude options can be redefined for each suite in corresponding config files.</source>
          <target state="translated">포함 및 제외 옵션은 해당 구성 파일에서 각 제품군에 대해 재정의 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="19682bdb9185a5fa9d763d414d0443d3a0bc2456" translate="yes" xml:space="preserve">
          <source>Init</source>
          <target state="translated">Init</target>
        </trans-unit>
        <trans-unit id="bfafb979f6da0d205f18ee39931fe696ee6207ea" translate="yes" xml:space="preserve">
          <source>Initializes basic RoboFile in the root of your project</source>
          <target state="translated">프로젝트 루트에서 기본 RoboFile을 초기화합니다</target>
        </trans-unit>
        <trans-unit id="622a4cac2919719782d2ad2d0dfb92c19d998254" translate="yes" xml:space="preserve">
          <source>Inject an actor class via constructor and implement &lt;code&gt;fetchData&lt;/code&gt; method which should return a data set from a test.</source>
          <target state="translated">생성자를 통해 액터 클래스를 주입 하고 테스트에서 데이터 세트를 리턴해야하는 &lt;code&gt;fetchData&lt;/code&gt; 메소드를 구현 하십시오 .</target>
        </trans-unit>
        <trans-unit id="e0d578354341665a76f1cdee8be98240142ae644" translate="yes" xml:space="preserve">
          <source>Inserts an SQL record into a database. This record will be erased after the test.</source>
          <target state="translated">SQL 레코드를 데이터베이스에 삽입합니다. 이 기록은 테스트 후에 지워집니다.</target>
        </trans-unit>
        <trans-unit id="72fdb9a796d33d5c1c813f0f32932523b4ab5a50" translate="yes" xml:space="preserve">
          <source>Inserts data into collection</source>
          <target state="translated">데이터를 수집에 삽입</target>
        </trans-unit>
        <trans-unit id="bf9d7c4b25f4525ecfa82c05452fe557bf68cd94" translate="yes" xml:space="preserve">
          <source>Inserts record into the database.</source>
          <target state="translated">데이터베이스에 레코드를 삽입합니다.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
