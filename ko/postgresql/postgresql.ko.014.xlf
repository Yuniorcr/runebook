<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="postgresql">
    <body>
      <group id="postgresql">
        <trans-unit id="9bc025c0a1aa36859c204fc8e90a56739f1738fd" translate="yes" xml:space="preserve">
          <source>Some examples of normalization:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7bcf7e4ca2fad466b748026159f5d8758d71fa4d" translate="yes" xml:space="preserve">
          <source>Some examples, with &lt;code&gt;#&quot;&lt;/code&gt; delimiting the return string:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01706013cfdbcb0fc543d3c97784f3f4c235d630" translate="yes" xml:space="preserve">
          <source>Some examples:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8071a47a4b8f3fdc2d19f933ed730b4835dc2e6f" translate="yes" xml:space="preserve">
          <source>Some file system backup tools emit warnings or errors if the files they are trying to copy change while the copy proceeds. When taking a base backup of an active database, this situation is normal and not an error. However, you need to ensure that you can distinguish complaints of this sort from real errors. For example, some versions of rsync return a separate exit code for &amp;ldquo;vanished source files&amp;rdquo;, and you can write a driver script to accept this exit code as a non-error case. Also, some versions of GNU tar return an error code indistinguishable from a fatal error if a file was truncated while tar was copying it. Fortunately, GNU tar versions 1.16 and later exit with 1 if a file was changed during the backup, and 2 for other errors. With GNU tar version 1.23 and later, you can use the warning options &lt;code&gt;--warning=no-file-changed --warning=no-file-removed&lt;/code&gt; to hide the related warning messages.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75ccb519e38c8da11cf9dcc5e1d2d49c10e8827f" translate="yes" xml:space="preserve">
          <source>Some file systems perform badly when they are almost full, so do not wait until the disk is completely full to take action.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b588df1a1ee894ccbd35f0a48265de63a1e85c5" translate="yes" xml:space="preserve">
          <source>Some frontends may create their own tables, and will not create the associated trigger(s). Also, users may not remember (or know) to create the triggers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c44e7e09cdcce8cb244f1fd4b00de572bbde4d90" translate="yes" xml:space="preserve">
          <source>Some functionality not implemented for inheritance hierarchies is implemented for declarative partitioning. Considerable care is needed in deciding whether partitioning with legacy inheritance is useful for your application.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e987a6f096e52b72ae53225c55a8c600d7b531a" translate="yes" xml:space="preserve">
          <source>Some further operators also exist only for &lt;code&gt;jsonb&lt;/code&gt;, as shown in &lt;a href=&quot;functions-json#FUNCTIONS-JSONB-OP-TABLE&quot;&gt;Table 9.45&lt;/a&gt;. Many of these operators can be indexed by &lt;code&gt;jsonb&lt;/code&gt; operator classes. For a full description of &lt;code&gt;jsonb&lt;/code&gt; containment and existence semantics, see &lt;a href=&quot;datatype-json#JSON-CONTAINMENT&quot;&gt;Section 8.14.3&lt;/a&gt;. &lt;a href=&quot;datatype-json#JSON-INDEXING&quot;&gt;Section 8.14.4&lt;/a&gt; describes how these operators can be used to effectively index &lt;code&gt;jsonb&lt;/code&gt; data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc69f2a26ccfef272cb758bf4feb3f3174612774" translate="yes" xml:space="preserve">
          <source>Some ident servers have a nonstandard option that causes the returned user name to be encrypted, using a key that only the originating machine's administrator knows. This option &lt;em&gt;must not&lt;/em&gt; be used when using the ident server with PostgreSQL, since PostgreSQL does not have any way to decrypt the returned string to determine the actual user name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39dfe399b8df469de93a797cf4642e80f5cda549" translate="yes" xml:space="preserve">
          <source>Some indexes might not index all tuples. If the tuple is not to be indexed, &lt;code&gt;aminsert&lt;/code&gt; should just return without doing anything.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9870923e23438cd2f121747a5de8c9682c94bbb" translate="yes" xml:space="preserve">
          <source>Some libraries need to perform certain operations that can only take place at postmaster start, such as allocating shared memory, reserving light-weight locks, or starting background workers. Those libraries must be loaded at server start through this parameter. See the documentation of each library for details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa3314a2a94ef400df62478e2256c9f4537efb3a" translate="yes" xml:space="preserve">
          <source>Some locale categories must have their values fixed when the database is created. You can use different settings for different databases, but once a database is created, you cannot change them for that database anymore. &lt;code&gt;LC_COLLATE&lt;/code&gt; and &lt;code&gt;LC_CTYPE&lt;/code&gt; are these categories. They affect the sort order of indexes, so they must be kept fixed, or indexes on text columns would become corrupt. (But you can alleviate this restriction using collations, as discussed in &lt;a href=&quot;collation&quot;&gt;Section 23.2&lt;/a&gt;.) The default values for these categories are determined when &lt;code&gt;initdb&lt;/code&gt; is run, and those values are used when new databases are created, unless specified otherwise in the &lt;code&gt;CREATE DATABASE&lt;/code&gt; command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0001d98ab2050cd6b99e7e04163bf1a711f72bfb" translate="yes" xml:space="preserve">
          <source>Some message localization libraries also look at the environment variable &lt;code&gt;LANGUAGE&lt;/code&gt; which overrides all other locale settings for the purpose of setting the language of messages. If in doubt, please refer to the documentation of your operating system, in particular the documentation about gettext.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89da36cff77e35db916c73d1d15f2e05712a8864" translate="yes" xml:space="preserve">
          <source>Some more examples:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2177d04e11d3387bec48af5385f473f12307f07a" translate="yes" xml:space="preserve">
          <source>Some notes:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a6644a3bf4293d6e3a922f24348c47425f47970" translate="yes" xml:space="preserve">
          <source>Some of the flag fields of &lt;code&gt;IndexAmRoutine&lt;/code&gt; have nonobvious implications. The requirements of &lt;code&gt;amcanunique&lt;/code&gt; are discussed in &lt;a href=&quot;index-unique-checks&quot;&gt;Section 61.5&lt;/a&gt;. The &lt;code&gt;amcanmulticol&lt;/code&gt; flag asserts that the access method supports multicolumn indexes, while &lt;code&gt;amoptionalkey&lt;/code&gt; asserts that it allows scans where no indexable restriction clause is given for the first index column. When &lt;code&gt;amcanmulticol&lt;/code&gt; is false, &lt;code&gt;amoptionalkey&lt;/code&gt; essentially says whether the access method supports full-index scans without any restriction clause. Access methods that support multiple index columns &lt;em&gt;must&lt;/em&gt; support scans that omit restrictions on any or all of the columns after the first; however they are permitted to require some restriction to appear for the first index column, and this is signaled by setting &lt;code&gt;amoptionalkey&lt;/code&gt; false. One reason that an index AM might set &lt;code&gt;amoptionalkey&lt;/code&gt; false is if it doesn't index null values. Since most indexable operators are strict and hence cannot return true for null inputs, it is at first sight attractive to not store index entries for null values: they could never be returned by an index scan anyway. However, this argument fails when an index scan has no restriction clause for a given index column. In practice this means that indexes that have &lt;code&gt;amoptionalkey&lt;/code&gt; true must index nulls, since the planner might decide to use such an index with no scan keys at all. A related restriction is that an index access method that supports multiple index columns &lt;em&gt;must&lt;/em&gt; support indexing null values in columns after the first, because the planner will assume the index can be used for queries that do not restrict these columns. For example, consider an index on (a,b) and a query with &lt;code&gt;WHERE a = 4&lt;/code&gt;. The system will assume the index can be used to scan for rows with &lt;code&gt;a = 4&lt;/code&gt;, which is wrong if the index omits rows where &lt;code&gt;b&lt;/code&gt; is null. It is, however, OK to omit rows where the first indexed column is null. An index access method that does index nulls may also set &lt;code&gt;amsearchnulls&lt;/code&gt;, indicating that it supports &lt;code&gt;IS NULL&lt;/code&gt; and &lt;code&gt;IS NOT NULL&lt;/code&gt; clauses as search conditions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8bcd8fba8efdd683e73f79a7ad2f9cec72567b2a" translate="yes" xml:space="preserve">
          <source>Some of the information available through this module can also be obtained using the built-in system view &lt;a href=&quot;monitoring-stats#PG-STAT-SSL-VIEW&quot;&gt;pg_stat_ssl&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="998eae93551979387ddf2052647b42a2befb241c" translate="yes" xml:space="preserve">
          <source>Some of the information here is derived from Purdue University's SP-GiST Indexing Project &lt;a href=&quot;https://www.cs.purdue.edu/spgist/&quot;&gt;web site&lt;/a&gt;. The SP-GiST implementation in PostgreSQL is primarily maintained by Teodor Sigaev and Oleg Bartunov, and there is more information on their &lt;a href=&quot;http://www.sai.msu.su/~megera/wiki/spgist_dev&quot;&gt;web site&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71a8fb9853bb2acd7004a3923f01c2609b9c283b" translate="yes" xml:space="preserve">
          <source>Some of the information here is derived from the University of California at Berkeley's GiST Indexing Project &lt;a href=&quot;http://gist.cs.berkeley.edu/&quot;&gt;web site&lt;/a&gt; and Marcel Kornacker's thesis, &lt;a href=&quot;http://www.sai.msu.su/~megera/postgres/gist/papers/concurrency/access-methods-for-next-generation.pdf.gz&quot;&gt;Access Methods for Next-Generation Database Systems&lt;/a&gt;. The GiST implementation in PostgreSQL is primarily maintained by Teodor Sigaev and Oleg Bartunov, and there is more information on their &lt;a href=&quot;http://www.sai.msu.su/~megera/postgres/gist/&quot;&gt;web site&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa3d45e20bc01b432c95fa31fdba9a4be4974533" translate="yes" xml:space="preserve">
          <source>Some of the information in the dynamic statistics views shown in &lt;a href=&quot;monitoring-stats#MONITORING-STATS-DYNAMIC-VIEWS-TABLE&quot;&gt;Table 27.1&lt;/a&gt; is security restricted. Ordinary users can only see all the information about their own sessions (sessions belonging to a role that they are a member of). In rows about other sessions, many columns will be null. Note, however, that the existence of a session and its general properties such as its sessions user and database are visible to all users. Superusers and members of the built-in role &lt;code&gt;pg_read_all_stats&lt;/code&gt; (see also &lt;a href=&quot;default-roles&quot;&gt;Section 21.5&lt;/a&gt;) can see all the information about all sessions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7472b311f893951097bd89898df528a213754aa8" translate="yes" xml:space="preserve">
          <source>Some of them are adaptive &amp;mdash; that means when computers get faster, you can tune the algorithm to be slower, without introducing incompatibility with existing passwords.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0080393fa4110592ce37e73e22c8cc67eadbce9" translate="yes" xml:space="preserve">
          <source>Some of these functions take an optional &lt;em&gt;&lt;code&gt;missing_ok&lt;/code&gt;&lt;/em&gt; parameter, which specifies the behavior when the file or directory does not exist. If &lt;code&gt;true&lt;/code&gt;, the function returns NULL (except &lt;code&gt;pg_ls_dir&lt;/code&gt;, which returns an empty result set). If &lt;code&gt;false&lt;/code&gt;, an error is raised. The default is &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc7268a9deb76728b8086f34b6d6d866d1225b18" translate="yes" xml:space="preserve">
          <source>Some operating systems have maximum file size limits that cause problems when creating large pg_dump output files. Fortunately, pg_dump can write to the standard output, so you can use standard Unix tools to work around this potential problem. There are several possible methods:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e338575c366f43f8b2639ad336ca9a7a216b1b43" translate="yes" xml:space="preserve">
          <source>Some operations require a stronger lock when using declarative partitioning than when using table inheritance. For example, adding or removing a partition to or from a partitioned table requires taking an &lt;code&gt;ACCESS EXCLUSIVE&lt;/code&gt; lock on the parent table, whereas a &lt;code&gt;SHARE UPDATE EXCLUSIVE&lt;/code&gt; lock is enough in the case of regular inheritance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61e3abe67f9e498dad7dd4b0b6225bdcb51ca759" translate="yes" xml:space="preserve">
          <source>Some or all of the partitions might use index scans instead of full-table sequential scans, but the point here is that there is no need to scan the older partitions at all to answer this query. When we enable partition pruning, we get a significantly cheaper plan that will deliver the same answer:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e9c09533175ee5238ece4403cd28aab4c3d6867" translate="yes" xml:space="preserve">
          <source>Some other SQL databases cannot do this except by introducing a dummy one-row table from which to do the &lt;code&gt;SELECT&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e48c3cfe05616b784c085aec228d1d30217192f" translate="yes" xml:space="preserve">
          <source>Some other database systems offer a &lt;code&gt;FROM&lt;/code&gt; option in which the target table is supposed to be listed again within &lt;code&gt;FROM&lt;/code&gt;. That is not how PostgreSQL interprets &lt;code&gt;FROM&lt;/code&gt;. Be careful when porting applications that use this extension.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ccfca55f686ba0ba31202a9076e341570267be4" translate="yes" xml:space="preserve">
          <source>Some other software that supports authentication against LDAP uses the same URL format, so it will be easier to share the configuration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71b8d062276566612555a164f3dc7042f0fd7cf6" translate="yes" xml:space="preserve">
          <source>Some special-purpose foreign data wrappers might be the only access mechanism for the data they access, and in that case it might be appropriate for the foreign data wrapper itself to perform constraint enforcement. But you should not assume that a wrapper does that unless its documentation says so.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af48bc9080b84e2b906f615214a2d37c6c059d88" translate="yes" xml:space="preserve">
          <source>Some tips for configuring continuous archiving are given here.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3310ff2b17f16a36c0a651c12a66749bec48ae3" translate="yes" xml:space="preserve">
          <source>Some tree algorithms require knowledge of level (or depth) of the current tuple, so the SP-GiST core provides the possibility for operator classes to manage level counting while descending the tree. There is also support for incrementally reconstructing the represented value when that is needed, and for passing down additional data (called &lt;em&gt;traverse values&lt;/em&gt;) during a tree descent.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57d5318999724a7149ff42127fe2b4b95dffe0c9" translate="yes" xml:space="preserve">
          <source>Some tree algorithms use a fixed set of nodes for each inner tuple; for example, in a quad-tree there are always exactly four nodes corresponding to the four quadrants around the inner tuple's centroid point. In such a case the code typically works with the nodes by number, and there is no need for explicit node labels. To suppress node labels (and thereby save some space), the &lt;code&gt;picksplit&lt;/code&gt; function can return NULL for the &lt;code&gt;nodeLabels&lt;/code&gt; array, and likewise the &lt;code&gt;choose&lt;/code&gt; function can return NULL for the &lt;code&gt;prefixNodeLabels&lt;/code&gt; array during a &lt;code&gt;spgSplitTuple&lt;/code&gt; action. This will in turn result in &lt;code&gt;nodeLabels&lt;/code&gt; being NULL during subsequent calls to &lt;code&gt;choose&lt;/code&gt; and &lt;code&gt;inner_consistent&lt;/code&gt;. In principle, node labels could be used for some inner tuples and omitted for others in the same index.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fef57a82235a3bb40e3216a5544ae33c006ceef2" translate="yes" xml:space="preserve">
          <source>Some vendors' Linux 2.4 kernels are reported to have early versions of the 2.6 overcommit &lt;code&gt;sysctl&lt;/code&gt; parameter. However, setting &lt;code&gt;vm.overcommit_memory&lt;/code&gt; to 2 on a 2.4 kernel that does not have the relevant code will make things worse, not better. It is recommended that you inspect the actual kernel source code (see the function &lt;code&gt;vm_enough_memory&lt;/code&gt; in the file &lt;code&gt;mm/mmap.c&lt;/code&gt;) to verify what is supported in your kernel before you try this in a 2.4 installation. The presence of the &lt;code&gt;overcommit-accounting&lt;/code&gt; documentation file should &lt;em&gt;not&lt;/em&gt; be taken as evidence that the feature is there. If in any doubt, consult a kernel expert or your kernel vendor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2fbe02864d9f547750ff0847fc3b17a6cd2c8e5" translate="yes" xml:space="preserve">
          <source>Something else?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbd9802f29e343358a1bc38fbcf396bd5c9cf041" translate="yes" xml:space="preserve">
          <source>Sometimes it is necessary for usability or standards-compliance reasons to provide multiple implicit casts among a set of types, resulting in ambiguity that cannot be avoided as above. The parser has a fallback heuristic based on &lt;em&gt;type categories&lt;/em&gt; and &lt;em&gt;preferred types&lt;/em&gt; that can help to provide desired behavior in such cases. See &lt;a href=&quot;sql-createtype&quot;&gt;CREATE TYPE&lt;/a&gt; for more information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35cba18046c49966ef87424c371d019270f65601" translate="yes" xml:space="preserve">
          <source>Sometimes it is useful to declare the final function as taking not just the state value, but extra parameters corresponding to the aggregate's input values. The main reason for doing this is if the final function is polymorphic and the state value's data type would be inadequate to pin down the result type. These extra parameters are always passed as NULL (and so the final function must not be strict when the &lt;code&gt;FINALFUNC_EXTRA&lt;/code&gt; option is used), but nonetheless they are valid parameters. The final function could for example make use of &lt;code&gt;get_fn_expr_argtype&lt;/code&gt; to identify the actual argument type in the current call.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="797cb254adf7a7230145f1a464341319be9dfa7d" translate="yes" xml:space="preserve">
          <source>Sometimes it is useful to obtain data from modified rows while they are being manipulated. The &lt;code&gt;INSERT&lt;/code&gt;, &lt;code&gt;UPDATE&lt;/code&gt;, and &lt;code&gt;DELETE&lt;/code&gt; commands all have an optional &lt;code&gt;RETURNING&lt;/code&gt; clause that supports this. Use of &lt;code&gt;RETURNING&lt;/code&gt; avoids performing an extra database query to collect the data, and is especially valuable when it would otherwise be difficult to identify the modified rows reliably.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="589b5dd99d1a3bcbbe7f0626815306690d452011" translate="yes" xml:space="preserve">
          <source>Sometimes the kernel is not able to allocate the desired number of huge pages immediately, so it might be necessary to repeat the command or to reboot. (Immediately after a reboot, most of the machine's memory should be available to convert into huge pages.) To verify the huge page allocation situation, use:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="edba2e2a0a78402812ec4490cdbcf19480e52041" translate="yes" xml:space="preserve">
          <source>Sometimes you want to create a database for someone else, and have them become the owner of the new database, so they can configure and manage it themselves. To achieve that, use one of the following commands:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b21aa58de7ef6694d18e29bfbe7222c1853916f5" translate="yes" xml:space="preserve">
          <source>Sort digits after Latin letters. (The default is digits before letters.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1e6c665bc2866719a6d3e376a5ee652e02e92c0" translate="yes" xml:space="preserve">
          <source>Sort order in queries using &lt;code&gt;ORDER BY&lt;/code&gt; or the standard comparison operators on textual data</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d8c08c57a1664c733943a411e2d1d6937a4cb14" translate="yes" xml:space="preserve">
          <source>Sort upper-case letters before lower-case letters. (The default is lower-case letters first.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d04be466d23e4bb4785321abf9f797dfcaa3ed41" translate="yes" xml:space="preserve">
          <source>Source Encoding</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="433880eb1f5e9a2d5f29e070c62168b0c64a11c8" translate="yes" xml:space="preserve">
          <source>Source encoding ID</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1adb3913f4193c7ddc6a756d5779d712f2facaf" translate="yes" xml:space="preserve">
          <source>Source of the current parameter value</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2fe0fca9eb383c1b96dff89e4745ca807c376cbf" translate="yes" xml:space="preserve">
          <source>Source origin</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb451b00bcf980ee35211d8edf035951afa327d2" translate="yes" xml:space="preserve">
          <source>South European</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47438f611e9b4675f207aeccb246419a0fc0c2d3" translate="yes" xml:space="preserve">
          <source>Space symbols</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ee8867d129c7487cd99e817409452159e8107d2" translate="yes" xml:space="preserve">
          <source>Space-Partitioned Generalized Search Tree</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b01bd8098830254d8d1b392aaf2bc493d078745c" translate="yes" xml:space="preserve">
          <source>Spaces within &lt;code&gt;extra-options&lt;/code&gt; are considered to separate arguments, unless escaped with a backslash (&lt;code&gt;\&lt;/code&gt;); write &lt;code&gt;\\&lt;/code&gt; to represent a literal backslash. Multiple arguments can also be specified via multiple uses of &lt;code&gt;-o&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24923348b3b262d2936795f06c187845446e0aaf" translate="yes" xml:space="preserve">
          <source>Special space</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72380f82fd48833ecee5e3f80a7a2ddcde3793aa" translate="yes" xml:space="preserve">
          <source>Specific characteristics of the GEQO implementation in PostgreSQL are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f4bcf9d24713a3110977a36b61a9419fe8cd063" translate="yes" xml:space="preserve">
          <source>Specific stop words recognized by the subdictionary cannot be specified; instead use &lt;code&gt;?&lt;/code&gt; to mark the location where any stop word can appear. For example, assuming that &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;the&lt;/code&gt; are stop words according to the subdictionary:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="256558cd909ae0b53e922f71288280e54ad5ed4b" translate="yes" xml:space="preserve">
          <source>Specific types of privileges, as defined in &lt;a href=&quot;ddl-priv&quot;&gt;Section 5.7&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="485f7bec8612e15316f0401415ceefa8d151c5ed" translate="yes" xml:space="preserve">
          <source>Specifies a comment to be associated with the newly created database.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9ceefa0539c43a42c5a8a5bddc9ad741a927680" translate="yes" xml:space="preserve">
          <source>Specifies a connection string to be used for the standby server to connect with a sending server. This string is in the format described in &lt;a href=&quot;https://www.postgresql.org/docs/12/libpq-connect.html#LIBPQ-CONNSTRING&quot;&gt;Section 33.1.1&lt;/a&gt;. If any option is unspecified in this string, then the corresponding environment variable (see &lt;a href=&quot;https://www.postgresql.org/docs/12/libpq-envars.html&quot;&gt;Section 33.14&lt;/a&gt;) is checked. If the environment variable is not set either, then defaults are used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b081623c0ed797e7348b5165771793e1f80eb1a2" translate="yes" xml:space="preserve">
          <source>Specifies a directory to search for log segment files or a directory with a &lt;code&gt;pg_wal&lt;/code&gt; subdirectory that contains such files. The default is to search in the current directory, the &lt;code&gt;pg_wal&lt;/code&gt; subdirectory of the current directory, and the &lt;code&gt;pg_wal&lt;/code&gt; subdirectory of &lt;code&gt;PGDATA&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2fa93c39bc71d53501aef52502b7ce5fa345b9f" translate="yes" xml:space="preserve">
          <source>Specifies a fraction of the table size to add to &lt;code&gt;autovacuum_analyze_threshold&lt;/code&gt; when deciding whether to trigger an &lt;code&gt;ANALYZE&lt;/code&gt;. The default is 0.1 (10% of table size). This parameter can only be set in the &lt;code&gt;postgresql.conf&lt;/code&gt; file or on the server command line; but the setting can be overridden for individual tables by changing table storage parameters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86582b4f6a8af5a5577fc3a8aa32d5d7a70f31fc" translate="yes" xml:space="preserve">
          <source>Specifies a fraction of the table size to add to &lt;code&gt;autovacuum_vacuum_threshold&lt;/code&gt; when deciding whether to trigger a &lt;code&gt;VACUUM&lt;/code&gt;. The default is 0.2 (20% of table size). This parameter can only be set in the &lt;code&gt;postgresql.conf&lt;/code&gt; file or on the server command line; but the setting can be overridden for individual tables by changing table storage parameters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7cb86159ae43bca86d1259ed722d1b98469a1bc6" translate="yes" xml:space="preserve">
          <source>Specifies a libpq connection string to connect to the source PostgreSQL server to synchronize the target with. The connection must be a normal (non-replication) connection with a role having sufficient permissions to execute the functions used by pg_rewind on the source server (see Notes section for details) or a superuser role. This option requires the source server to be running and not in recovery mode.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="303375caa9c73f3b153b6eae3adeab7d201930a6" translate="yes" xml:space="preserve">
          <source>Specifies a list of SSL cipher suites that are allowed to be used on secure connections. See the ciphers manual page in the OpenSSL package for the syntax of this setting and a list of supported values. This parameter can only be set in the &lt;code&gt;postgresql.conf&lt;/code&gt; file or on the server command line. The default value is &lt;code&gt;HIGH:MEDIUM:+3DES:!aNULL&lt;/code&gt;. The default is usually a reasonable choice unless you have specific security requirements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c28a686e64fc852928cd8354ae41c3ef1e9d031" translate="yes" xml:space="preserve">
          <source>Specifies a list of standby servers that can support &lt;em&gt;synchronous replication&lt;/em&gt;, as described in &lt;a href=&quot;warm-standby#SYNCHRONOUS-REPLICATION&quot;&gt;Section 26.2.8&lt;/a&gt;. There will be one or more active synchronous standbys; transactions waiting for commit will be allowed to proceed after these standby servers confirm receipt of their data. The synchronous standbys will be those whose names appear in this list, and that are both currently connected and streaming data in real-time (as shown by a state of &lt;code&gt;streaming&lt;/code&gt; in the &lt;a href=&quot;monitoring-stats#PG-STAT-REPLICATION-VIEW&quot;&gt;&lt;code&gt;pg_stat_replication&lt;/code&gt;&lt;/a&gt; view). Specifying more than one synchronous standby can allow for very high availability and protection against data loss.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81a9a1823be5c195bf476a0cf9f99a7a4d63bd93" translate="yes" xml:space="preserve">
          <source>Specifies a list of tables to add to the publication. If &lt;code&gt;ONLY&lt;/code&gt; is specified before the table name, only that table is added to the publication. If &lt;code&gt;ONLY&lt;/code&gt; is not specified, the table and all its descendant tables (if any) are added. Optionally, &lt;code&gt;*&lt;/code&gt; can be specified after the table name to explicitly indicate that descendant tables are included.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7e000cf8931e185d3ccddfb7bb0ec8a54c6c6c0" translate="yes" xml:space="preserve">
          <source>Specifies a new handler function for the foreign-data wrapper.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c9fb3f4fcac7cdc6ca5913424f3d4cd3d162f10" translate="yes" xml:space="preserve">
          <source>Specifies a new validator function for the foreign-data wrapper.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98a9da57955268cb4e2d34a66294a7568883c21e" translate="yes" xml:space="preserve">
          <source>Specifies a role name to be used to create the dump. This option causes pg_dump to issue a &lt;code&gt;SET ROLE&lt;/code&gt;&lt;code&gt;rolename&lt;/code&gt; command after connecting to the database. It is useful when the authenticated user (specified by &lt;code&gt;-U&lt;/code&gt;) lacks privileges needed by pg_dump, but can switch to a role with the required rights. Some installations have a policy against logging in directly as a superuser, and use of this option allows dumps to be made without violating the policy.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2f6effd1fcf89ea81626f8bea4fa3151cc8bee9" translate="yes" xml:space="preserve">
          <source>Specifies a role name to be used to create the dump. This option causes pg_dumpall to issue a &lt;code&gt;SET ROLE&lt;/code&gt;&lt;code&gt;rolename&lt;/code&gt; command after connecting to the database. It is useful when the authenticated user (specified by &lt;code&gt;-U&lt;/code&gt;) lacks privileges needed by pg_dumpall, but can switch to a role with the required rights. Some installations have a policy against logging in directly as a superuser, and use of this option allows dumps to be made without violating the policy.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="165287e18c5310eacc9eb63af786b0dc40a50d69" translate="yes" xml:space="preserve">
          <source>Specifies a role name to be used to perform the restore. This option causes pg_restore to issue a &lt;code&gt;SET ROLE&lt;/code&gt;&lt;code&gt;rolename&lt;/code&gt; command after connecting to the database. It is useful when the authenticated user (specified by &lt;code&gt;-U&lt;/code&gt;) lacks privileges needed by pg_restore, but can switch to a role with the required rights. Some installations have a policy against logging in directly as a superuser, and use of this option allows restores to be performed without violating the policy.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2bf3e260ba2bcb84939f82a7f5794cf7be8cbe77" translate="yes" xml:space="preserve">
          <source>Specifies a trigger file whose presence ends recovery in the standby. Even if this value is not set, you can still promote the standby using &lt;code&gt;pg_ctl promote&lt;/code&gt; or calling &lt;code&gt;pg_promote&lt;/code&gt;. This parameter can only be set in the &lt;code&gt;postgresql.conf&lt;/code&gt; file or on the server command line.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b771f77e3208dfdb862ea17ec77c098ceb85b083" translate="yes" xml:space="preserve">
          <source>Specifies ascending sort order (which is the default).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f45bd1e2f879c77bb7b53e35432df6d7316730e0" translate="yes" xml:space="preserve">
          <source>Specifies attributes to be placed within the &lt;code&gt;table&lt;/code&gt; tag in HTML output format. This command is equivalent to &lt;code&gt;\pset tableattr table_options&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3902fb3ce777aa35b3fac2a50efa7d3dabb9a8a2" translate="yes" xml:space="preserve">
          <source>Specifies descending sort order.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2094bd447cab55c69a3258b59ddc2b44f1ae8abd" translate="yes" xml:space="preserve">
          <source>Specifies how long the standby server should wait when WAL data is not available from any sources (streaming replication, local &lt;code&gt;pg_wal&lt;/code&gt; or WAL archive) before trying again to retrieve WAL data. If this value is specified without units, it is taken as milliseconds. The default value is 5 seconds. This parameter can only be set in the &lt;code&gt;postgresql.conf&lt;/code&gt; file or on the server command line.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7110d892a84ed64ce28057aab49a0c4fe20a912" translate="yes" xml:space="preserve">
          <source>Specifies how often pg_recvlogical should issue &lt;code&gt;fsync()&lt;/code&gt; calls to ensure the output file is safely flushed to disk.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee12e1c7639485eefc5a786fbb90cdbabeea8a25" translate="yes" xml:space="preserve">
          <source>Specifies how often the WAL writer flushes WAL, in time terms. After flushing WAL the writer sleeps for the length of time given by &lt;code&gt;wal_writer_delay&lt;/code&gt;, unless woken up sooner by an asynchronously committing transaction. If the last flush happened less than &lt;code&gt;wal_writer_delay&lt;/code&gt; ago and less than &lt;code&gt;wal_writer_flush_after&lt;/code&gt; worth of WAL has been produced since, then WAL is only written to the operating system, not flushed to disk. If this value is specified without units, it is taken as milliseconds. The default value is 200 milliseconds (&lt;code&gt;200ms&lt;/code&gt;). Note that on many systems, the effective resolution of sleep delays is 10 milliseconds; setting &lt;code&gt;wal_writer_delay&lt;/code&gt; to a value that is not a multiple of 10 might have the same results as setting it to the next higher multiple of 10. This parameter can only be set in the &lt;code&gt;postgresql.conf&lt;/code&gt; file or on the server command line.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6fa378fb7ad959cf32cfce451c32fbd81700116c" translate="yes" xml:space="preserve">
          <source>Specifies how often the WAL writer flushes WAL, in volume terms. If the last flush happened less than &lt;code&gt;wal_writer_delay&lt;/code&gt; ago and less than &lt;code&gt;wal_writer_flush_after&lt;/code&gt; worth of WAL has been produced since, then WAL is only written to the operating system, not flushed to disk. If &lt;code&gt;wal_writer_flush_after&lt;/code&gt; is set to &lt;code&gt;0&lt;/code&gt; then WAL data is always flushed immediately. If this value is specified without units, it is taken as WAL blocks, that is &lt;code&gt;XLOG_BLCKSZ&lt;/code&gt; bytes, typically 8kB. The default is &lt;code&gt;1MB&lt;/code&gt;. This parameter can only be set in the &lt;code&gt;postgresql.conf&lt;/code&gt; file or on the server command line.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="121d15310185ca050dd604bbb921da9d21c4961c" translate="yes" xml:space="preserve">
          <source>Specifies maximum number of logical replication workers. This includes both apply workers and table synchronization workers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da30a645950363aa58ae8666a48a1f3531ade39e" translate="yes" xml:space="preserve">
          <source>Specifies options to be passed directly to the &lt;code&gt;initdb&lt;/code&gt; command. &lt;code&gt;-o&lt;/code&gt; can be specified multiple times, with all the given options being passed through.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a04e02ab7244c5c19d98dc2a1ff30c6e8b2cc1c4" translate="yes" xml:space="preserve">
          <source>Specifies options to be passed directly to the &lt;code&gt;postgres&lt;/code&gt; command. &lt;code&gt;-o&lt;/code&gt; can be specified multiple times, with all the given options being passed through.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="581d7eb5d2c020c94b55a6bb5660a9fe5f91bfa5" translate="yes" xml:space="preserve">
          <source>Specifies options to be placed within the HTML &lt;code&gt;table&lt;/code&gt; tag. See &lt;code&gt;\pset tableattr&lt;/code&gt; for details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="184ed54a0493df32b5d7bc8d569546c6dafe6a6d" translate="yes" xml:space="preserve">
          <source>Specifies parameters used to connect to the server, as a connection string. See &lt;a href=&quot;https://www.postgresql.org/docs/12/libpq-connect.html#LIBPQ-CONNSTRING&quot;&gt;Section 33.1.1&lt;/a&gt; for more information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc2394d8362dc1e23a30e4533949f9b7335d49c0" translate="yes" xml:space="preserve">
          <source>Specifies printing options, in the style of &lt;code&gt;\pset&lt;/code&gt;. Note that here you have to separate name and value with an equal sign instead of a space. For example, to set the output format to LaTeX, you could write &lt;code&gt;-P format=latex&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3bbd4a06fbdac40a5affd7a9f05d89015d842bbe" translate="yes" xml:space="preserve">
          <source>Specifies recovering into a particular timeline. The value can be a numeric timeline ID or a special value. The value &lt;code&gt;current&lt;/code&gt; recovers along the same timeline that was current when the base backup was taken. The value &lt;code&gt;latest&lt;/code&gt; recovers to the latest timeline found in the archive, which is useful in a standby server. &lt;code&gt;latest&lt;/code&gt; is the default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f1e665218083218130fead85a69aea0dd1b4cab" translate="yes" xml:space="preserve">
          <source>Specifies that &lt;code&gt;ANALYZE&lt;/code&gt; should not wait for any conflicting locks to be released when beginning work on a relation: if a relation cannot be locked immediately without waiting, the relation is skipped. Note that even with this option, &lt;code&gt;ANALYZE&lt;/code&gt; may still block when opening the relation's indexes or when acquiring sample rows from partitions, table inheritance children, and some types of foreign tables. Also, while &lt;code&gt;ANALYZE&lt;/code&gt; ordinarily processes all partitions of specified partitioned tables, this option will cause &lt;code&gt;ANALYZE&lt;/code&gt; to skip all partitions if there is a conflicting lock on the partitioned table.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c474d1ecc2dc032b14a63f3354a144e0faab7390" translate="yes" xml:space="preserve">
          <source>Specifies that &lt;code&gt;LOCK TABLE&lt;/code&gt; should not wait for any conflicting locks to be released: if the specified lock(s) cannot be acquired immediately without waiting, the transaction is aborted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5f1d53fa991b08f1e38cb6c6ba9fecdca72fb9f" translate="yes" xml:space="preserve">
          <source>Specifies that &lt;code&gt;VACUUM&lt;/code&gt; should attempt to remove index entries pointing to dead tuples. This is normally the desired behavior and is the default unless the &lt;code&gt;vacuum_index_cleanup&lt;/code&gt; option has been set to false for the table to be vacuumed. Setting this option to false may be useful when it is necessary to make vacuum run as quickly as possible, for example to avoid imminent transaction ID wraparound (see &lt;a href=&quot;routine-vacuuming#VACUUM-FOR-WRAPAROUND&quot;&gt;Section 24.1.5&lt;/a&gt;). However, if index cleanup is not performed regularly, performance may suffer, because as the table is modified, indexes will accumulate dead tuples and the table itself will accumulate dead line pointers that cannot be removed until index cleanup is completed. This option has no effect for tables that do not have an index and is ignored if the &lt;code&gt;FULL&lt;/code&gt; option is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d429bcd2ea94b54e668c5354586e32e8f817f6f" translate="yes" xml:space="preserve">
          <source>Specifies that &lt;code&gt;VACUUM&lt;/code&gt; should attempt to truncate off any empty pages at the end of the table and allow the disk space for the truncated pages to be returned to the operating system. This is normally the desired behavior and is the default unless the &lt;code&gt;vacuum_truncate&lt;/code&gt; option has been set to false for the table to be vacuumed. Setting this option to false may be useful to avoid &lt;code&gt;ACCESS EXCLUSIVE&lt;/code&gt; lock on the table that the truncation requires. This option is ignored if the &lt;code&gt;FULL&lt;/code&gt; option is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8acec09299fb8ba0ff540d797b166a76e15e9730" translate="yes" xml:space="preserve">
          <source>Specifies that &lt;code&gt;VACUUM&lt;/code&gt; should not wait for any conflicting locks to be released when beginning work on a relation: if a relation cannot be locked immediately without waiting, the relation is skipped. Note that even with this option, &lt;code&gt;VACUUM&lt;/code&gt; may still block when opening the relation's indexes. Additionally, &lt;code&gt;VACUUM ANALYZE&lt;/code&gt; may still block when acquiring sample rows from partitions, table inheritance children, and some types of foreign tables. Also, while &lt;code&gt;VACUUM&lt;/code&gt; ordinarily processes all partitions of specified partitioned tables, this option will cause &lt;code&gt;VACUUM&lt;/code&gt; to skip all partitions if there is a conflicting lock on the partitioned table.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="758034d1e69b26977b48b6f20e70d6677b8e004b" translate="yes" xml:space="preserve">
          <source>Specifies that &lt;code&gt;ecpg&lt;/code&gt; should write all its output to the given &lt;code&gt;filename&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="476673c72300067d2d8b801aea964f9b00c9cacb" translate="yes" xml:space="preserve">
          <source>Specifies that input comes from the client application.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d33dfc40efb3f2b8c3b11c629c9ff5894ef179ee" translate="yes" xml:space="preserve">
          <source>Specifies that nulls sort after non-nulls. This is the default when &lt;code&gt;DESC&lt;/code&gt; is not specified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="daa8bfde45b331c533c9c174a243729b8f09ce7f" translate="yes" xml:space="preserve">
          <source>Specifies that nulls sort before non-nulls. This is the default when &lt;code&gt;DESC&lt;/code&gt; is specified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d04511fc8068e65b5ef87b24bac014646887848" translate="yes" xml:space="preserve">
          <source>Specifies that output goes to the client application.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="daac76b603adeba1c174a4758e70d64d4861cda2" translate="yes" xml:space="preserve">
          <source>Specifies that psql is to execute the given command string, &lt;code&gt;command&lt;/code&gt;. This option can be repeated and combined in any order with the &lt;code&gt;-f&lt;/code&gt; option. When either &lt;code&gt;-c&lt;/code&gt; or &lt;code&gt;-f&lt;/code&gt; is specified, psql does not read commands from standard input; instead it terminates after processing all the &lt;code&gt;-c&lt;/code&gt; and &lt;code&gt;-f&lt;/code&gt; options in sequence.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ba58db87a5a3b8ba1951177b155f6ec5b6ddc9e" translate="yes" xml:space="preserve">
          <source>Specifies that psql should do its work quietly. By default, it prints welcome messages and various informational output. If this option is used, none of this happens. This is useful with the &lt;code&gt;-c&lt;/code&gt; option. This is equivalent to setting the variable &lt;code&gt;QUIET&lt;/code&gt; to &lt;code&gt;on&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2674230f7e486c0e44905bbd6298fe8b2b2d1a82" translate="yes" xml:space="preserve">
          <source>Specifies that the command takes effect for only the current transaction. After &lt;code&gt;COMMIT&lt;/code&gt; or &lt;code&gt;ROLLBACK&lt;/code&gt;, the session-level setting takes effect again. Issuing this outside of a transaction block emits a warning and otherwise has no effect.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bea83a0d108f3906897b3bf97f523a0c93c05d18" translate="yes" xml:space="preserve">
          <source>Specifies that the command takes effect for the current session. (This is the default if neither &lt;code&gt;SESSION&lt;/code&gt; nor &lt;code&gt;LOCAL&lt;/code&gt; appears.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1dbd040f7f5d27f1c4151e077b939d7b51fddbf5" translate="yes" xml:space="preserve">
          <source>Specifies that the file contains a header line with the names of each column in the file. On output, the first line contains the column names from the table, and on input, the first line is ignored. This option is allowed only when using &lt;code&gt;CSV&lt;/code&gt; format.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5dc311faf0410c6eef1ebd43c5c8ddbd66ce784a" translate="yes" xml:space="preserve">
          <source>Specifies that the file is encoded in the &lt;code&gt;encoding_name&lt;/code&gt;. If this option is omitted, the current client encoding is used. See the Notes below for more details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4263bd49ddd4eeb4991d646e43be2a7f8a044727" translate="yes" xml:space="preserve">
          <source>Specifies the &lt;em&gt;minimum&lt;/em&gt; number of characters to use to display the format specifier's output. The output is padded on the left or right (depending on the &lt;code&gt;-&lt;/code&gt; flag) with spaces as needed to fill the width. A too-small width does not cause truncation of the output, but is simply ignored. The width may be specified using any of the following: a positive integer; an asterisk (&lt;code&gt;*&lt;/code&gt;) to use the next function argument as the width; or a string of the form &lt;code&gt;*n$&lt;/code&gt; to use the &lt;code&gt;n&lt;/code&gt;th function argument as the width.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd2bb55445de516e2f15cc3a16e8b3167d160230" translate="yes" xml:space="preserve">
          <source>Specifies the Bonjour service name. The computer name is used if this parameter is set to the empty string &lt;code&gt;''&lt;/code&gt; (which is the default). This parameter is ignored if the server was not compiled with Bonjour support. This parameter can only be set at server start.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60f372316e2c7a0c25e888864dcbe9c5947a1f98" translate="yes" xml:space="preserve">
          <source>Specifies the IP host name or address on which &lt;code&gt;postgres&lt;/code&gt; is to listen for TCP/IP connections from client applications. The value can also be a comma-separated list of addresses, or &lt;code&gt;*&lt;/code&gt; to specify listening on all available interfaces. An empty value specifies not listening on any IP addresses, in which case only Unix-domain sockets can be used to connect to the server. Defaults to listening only on localhost. Specifying this option is equivalent to setting the &lt;a href=&quot;runtime-config-connection#GUC-LISTEN-ADDRESSES&quot;&gt;listen_addresses&lt;/a&gt; configuration parameter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6693c397b857918c8e1bf4322dde6ce56aa4e953" translate="yes" xml:space="preserve">
          <source>Specifies the LC_COLLATE setting to be used in this database.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87d16e3ed42fdb841c554674d4408e00bcbbe24c" translate="yes" xml:space="preserve">
          <source>Specifies the LC_CTYPE setting to be used in this database.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55aced566e201cfe60c72dc32ce5c91ff387e671" translate="yes" xml:space="preserve">
          <source>Specifies the TCP port or local Unix domain socket file extension on which the server is listening for connections.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="931e876a68f198d3d0f31f6a09576aa928e1ef83" translate="yes" xml:space="preserve">
          <source>Specifies the TCP port or local Unix domain socket file extension on which the server is listening for connections. Defaults to the &lt;code&gt;PGPORT&lt;/code&gt; environment variable, if set, or a compiled-in default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1245b6061a1bf12ce3fd139439709c120ed66a4b" translate="yes" xml:space="preserve">
          <source>Specifies the TCP port or the local Unix domain socket file extension on which the server is listening for connections.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="507d190a685da40c64eecb6a283ca57e75a7447a" translate="yes" xml:space="preserve">
          <source>Specifies the TCP port or the local Unix-domain socket file extension on which the server is listening for connections. Defaults to the value of the &lt;code&gt;PGPORT&lt;/code&gt; environment variable or, if not set, to the port specified at compile time, usually 5432.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e3eab566b3a773eb12a7db97c4f1b334d29a443" translate="yes" xml:space="preserve">
          <source>Specifies the TCP/IP address(es) on which the server is to listen for connections from client applications. The value takes the form of a comma-separated list of host names and/or numeric IP addresses. The special entry &lt;code&gt;*&lt;/code&gt; corresponds to all available IP interfaces. The entry &lt;code&gt;0.0.0.0&lt;/code&gt; allows listening for all IPv4 addresses and &lt;code&gt;::&lt;/code&gt; allows listening for all IPv6 addresses. If the list is empty, the server does not listen on any IP interface at all, in which case only Unix-domain sockets can be used to connect to it. The default value is localhost, which allows only local TCP/IP &amp;ldquo;loopback&amp;rdquo; connections to be made. While client authentication (&lt;a href=&quot;https://www.postgresql.org/docs/12/client-authentication.html&quot;&gt;Chapter 20&lt;/a&gt;) allows fine-grained control over who can access the server, &lt;code&gt;listen_addresses&lt;/code&gt; controls which interfaces accept connection attempts, which can help prevent repeated malicious connection requests on insecure network interfaces. This parameter can only be set at server start.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3537c254ac5f033d6d92a27bf13527e480601b18" translate="yes" xml:space="preserve">
          <source>Specifies the TCP/IP port or local Unix domain socket file extension on which &lt;code&gt;postgres&lt;/code&gt; is to listen for connections from client applications. Defaults to the value of the &lt;code&gt;PGPORT&lt;/code&gt; environment variable, or if &lt;code&gt;PGPORT&lt;/code&gt; is not set, then defaults to the value established during compilation (normally 5432). If you specify a port other than the default port, then all client applications must specify the same port using either command-line options or &lt;code&gt;PGPORT&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ea867f4ac26c64d9cc1757cab1a7be546919f54" translate="yes" xml:space="preserve">
          <source>Specifies the amount of memory reserved to store the text of the currently executing command for each active session, for the &lt;code&gt;pg_stat_activity&lt;/code&gt;.&lt;code&gt;query&lt;/code&gt; field. If this value is specified without units, it is taken as bytes. The default value is 1024 bytes. This parameter can only be set at server start.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc678a0bd453588d49abc80496b06117c941ca29" translate="yes" xml:space="preserve">
          <source>Specifies the amount of memory to be used by internal sorts and hashes before resorting to temporary disk files. See the description of the &lt;code&gt;work_mem&lt;/code&gt; configuration parameter in &lt;a href=&quot;runtime-config-resource#RUNTIME-CONFIG-RESOURCE-MEMORY&quot;&gt;Section 19.4.1&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5252287a2ccbaeae869995aabcbb3347a332c8e" translate="yes" xml:space="preserve">
          <source>Specifies the amount of time after which a TCP keepalive message that has not been acknowledged by the client should be retransmitted. If this value is specified without units, it is taken as seconds. A value of 0 (the default) selects the operating system's default. This parameter is supported only on systems that support &lt;code&gt;TCP_KEEPINTVL&lt;/code&gt; or an equivalent socket option, and on Windows; on other systems, it must be zero. In sessions connected via a Unix-domain socket, this parameter is ignored and always reads as zero.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="937e14bbced54fcb089087acebac570db1aea5e1" translate="yes" xml:space="preserve">
          <source>Specifies the amount of time that transmitted data may remain unacknowledged before the TCP connection is forcibly closed. If this value is specified without units, it is taken as milliseconds. A value of 0 (the default) selects the operating system's default. This parameter is supported only on systems that support &lt;code&gt;TCP_USER_TIMEOUT&lt;/code&gt;; on other systems, it must be zero. In sessions connected via a Unix-domain socket, this parameter is ignored and always reads as zero.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="728efceb012fa4b8997461cbc11863da3a1b0bbc" translate="yes" xml:space="preserve">
          <source>Specifies the amount of time with no network activity after which the operating system should send a TCP keepalive message to the client. If this value is specified without units, it is taken as seconds. A value of 0 (the default) selects the operating system's default. This parameter is supported only on systems that support &lt;code&gt;TCP_KEEPIDLE&lt;/code&gt; or an equivalent socket option, and on Windows; on other systems, it must be zero. In sessions connected via a Unix-domain socket, this parameter is ignored and always reads as zero.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3326b434e82205b64167175fe284cbe3cea32bb2" translate="yes" xml:space="preserve">
          <source>Specifies the authentication method to use when a connection matches this record. The possible choices are summarized here; details are in &lt;a href=&quot;auth-methods&quot;&gt;Section 20.3&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7515aa26a943fa7c5306a8e3c5aa3e7ed65713f4" translate="yes" xml:space="preserve">
          <source>Specifies the character encoding scheme to be used in this database. The character sets supported by the PostgreSQL server are described in &lt;a href=&quot;multibyte#MULTIBYTE-CHARSET-SUPPORTED&quot;&gt;Section 23.3.1&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f73b1a04ad633486d49bf7f4c459851a9fe540e" translate="yes" xml:space="preserve">
          <source>Specifies the character that separates columns within each row (line) of the file. The default is a tab character in text format, a comma in &lt;code&gt;CSV&lt;/code&gt; format. This must be a single one-byte character. This option is not allowed when using &lt;code&gt;binary&lt;/code&gt; format.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ee0f87c55facfe587a8287b5c66cf8a1f6f69aa" translate="yes" xml:space="preserve">
          <source>Specifies the character that should appear before a data character that matches the &lt;code&gt;QUOTE&lt;/code&gt; value. The default is the same as the &lt;code&gt;QUOTE&lt;/code&gt; value (so that the quoting character is doubled if it appears in the data). This must be a single one-byte character. This option is allowed only when using &lt;code&gt;CSV&lt;/code&gt; format.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb9b9f2a8b704112b18a3dd32cfe136e8a9d516a" translate="yes" xml:space="preserve">
          <source>Specifies the client machine address(es) that this record matches. This field can contain either a host name, an IP address range, or one of the special key words mentioned below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01ef1780e6cf02acd0c5f5ed01cc7fb8cfe694d8" translate="yes" xml:space="preserve">
          <source>Specifies the command to be executed. The standard output of this command will be read as though &lt;code&gt;COPY FROM PROGRAM&lt;/code&gt; were used. Either &lt;code&gt;program&lt;/code&gt; or &lt;code&gt;filename&lt;/code&gt; must be specified, but not both.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3cf2f84af8afbc3c22cdc032417bf2f88d7880df" translate="yes" xml:space="preserve">
          <source>Specifies the configuration file for host-based authentication (customarily called &lt;code&gt;pg_hba.conf&lt;/code&gt;). This parameter can only be set at server start.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b177fc10e511d9d1273b6e191c4a216322dbd90" translate="yes" xml:space="preserve">
          <source>Specifies the configuration file for user name mapping (customarily called &lt;code&gt;pg_ident.conf&lt;/code&gt;). This parameter can only be set at server start. See also &lt;a href=&quot;auth-username-maps&quot;&gt;Section 20.2&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62531b8b18a1054d438f17f602dd10a4f893c363" translate="yes" xml:space="preserve">
          <source>Specifies the cost delay value that will be used in automatic &lt;code&gt;VACUUM&lt;/code&gt; operations. If -1 is specified, the regular &lt;a href=&quot;runtime-config-resource#GUC-VACUUM-COST-DELAY&quot;&gt;vacuum_cost_delay&lt;/a&gt; value will be used. If this value is specified without units, it is taken as milliseconds. The default value is 2 milliseconds. This parameter can only be set in the &lt;code&gt;postgresql.conf&lt;/code&gt; file or on the server command line; but the setting can be overridden for individual tables by changing table storage parameters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2bb18eeb02a5ec123a303d41b87b775a1befe02c" translate="yes" xml:space="preserve">
          <source>Specifies the cost limit value that will be used in automatic &lt;code&gt;VACUUM&lt;/code&gt; operations. If -1 is specified (which is the default), the regular &lt;a href=&quot;runtime-config-resource#GUC-VACUUM-COST-LIMIT&quot;&gt;vacuum_cost_limit&lt;/a&gt; value will be used. Note that the value is distributed proportionally among the running autovacuum workers, if there is more than one, so that the sum of the limits for each worker does not exceed the value of this variable. This parameter can only be set in the &lt;code&gt;postgresql.conf&lt;/code&gt; file or on the server command line; but the setting can be overridden for individual tables by changing table storage parameters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="691012ae26d118f3562d9c59f3f7e4f27b51110b" translate="yes" xml:space="preserve">
          <source>Specifies the cutoff age (in multixacts) that &lt;code&gt;VACUUM&lt;/code&gt; should use to decide whether to replace multixact IDs with a newer transaction ID or multixact ID while scanning a table. The default is 5 million multixacts. Although users can set this value anywhere from zero to one billion, &lt;code&gt;VACUUM&lt;/code&gt; will silently limit the effective value to half the value of &lt;a href=&quot;runtime-config-autovacuum#GUC-AUTOVACUUM-MULTIXACT-FREEZE-MAX-AGE&quot;&gt;autovacuum_multixact_freeze_max_age&lt;/a&gt;, so that there is not an unreasonably short time between forced autovacuums. For more information see &lt;a href=&quot;routine-vacuuming#VACUUM-FOR-MULTIXACT-WRAPAROUND&quot;&gt;Section 24.1.5.1&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3129ffa0dcdb996d6987c871dd065e5f9257d92b" translate="yes" xml:space="preserve">
          <source>Specifies the cutoff age (in transactions) that &lt;code&gt;VACUUM&lt;/code&gt; should use to decide whether to freeze row versions while scanning a table. The default is 50 million transactions. Although users can set this value anywhere from zero to one billion, &lt;code&gt;VACUUM&lt;/code&gt; will silently limit the effective value to half the value of &lt;a href=&quot;runtime-config-autovacuum#GUC-AUTOVACUUM-FREEZE-MAX-AGE&quot;&gt;autovacuum_freeze_max_age&lt;/a&gt;, so that there is not an unreasonably short time between forced autovacuums. For more information see &lt;a href=&quot;routine-vacuuming#VACUUM-FOR-WRAPAROUND&quot;&gt;Section 24.1.5&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8715673ad98fb5dddf8f3f5ceb901ae593d793f9" translate="yes" xml:space="preserve">
          <source>Specifies the data delimiter character, the same as &lt;code&gt;COPY&lt;/code&gt;'s &lt;code&gt;DELIMITER&lt;/code&gt; option.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ea5589a2de1bbf6a38c52e2fee044d28c651545" translate="yes" xml:space="preserve">
          <source>Specifies the data encoding, the same as &lt;code&gt;COPY&lt;/code&gt;'s &lt;code&gt;ENCODING&lt;/code&gt; option.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5af8a52127fbfc1a4cc525367a5a62ffaf272b08" translate="yes" xml:space="preserve">
          <source>Specifies the data escape character, the same as &lt;code&gt;COPY&lt;/code&gt;'s &lt;code&gt;ESCAPE&lt;/code&gt; option.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6eaec56b9205c1e4f20e659077d8c6c791c6e5a" translate="yes" xml:space="preserve">
          <source>Specifies the data format, the same as &lt;code&gt;COPY&lt;/code&gt;'s &lt;code&gt;FORMAT&lt;/code&gt; option.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e27566dec065f120f231eb33fdff0c56084b43ec" translate="yes" xml:space="preserve">
          <source>Specifies the data null string, the same as &lt;code&gt;COPY&lt;/code&gt;'s &lt;code&gt;NULL&lt;/code&gt; option.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fb02119880c09f791ea56ac591737eec724251f" translate="yes" xml:space="preserve">
          <source>Specifies the data quote character, the same as &lt;code&gt;COPY&lt;/code&gt;'s &lt;code&gt;QUOTE&lt;/code&gt; option.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9305dacf023da04447c13894ccd6992cd30edebe" translate="yes" xml:space="preserve">
          <source>Specifies the database user who will own the new database. (This name is processed as a double-quoted identifier.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7915b5d5c43507845a24f072c5948f5c974a2bb" translate="yes" xml:space="preserve">
          <source>Specifies the default tablespace for the database. (This name is processed as a double-quoted identifier.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85e58274db7fe8fbe7486990e2789e2add28ad36" translate="yes" xml:space="preserve">
          <source>Specifies the default time zone of the created database cluster. The value should be a full time zone name (see &lt;a href=&quot;datatype-datetime#DATATYPE-TIMEZONES&quot;&gt;Section 8.5.3&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b532386e1375b53e2307c6a49bffa84bafbabdcc" translate="yes" xml:space="preserve">
          <source>Specifies the delay between activity rounds for the background writer. In each round the writer issues writes for some number of dirty buffers (controllable by the following parameters). It then sleeps for the length of &lt;code&gt;bgwriter_delay&lt;/code&gt;, and repeats. When there are no dirty buffers in the buffer pool, though, it goes into a longer sleep regardless of &lt;code&gt;bgwriter_delay&lt;/code&gt;. If this value is specified without units, it is taken as milliseconds. The default value is 200 milliseconds (&lt;code&gt;200ms&lt;/code&gt;). Note that on many systems, the effective resolution of sleep delays is 10 milliseconds; setting &lt;code&gt;bgwriter_delay&lt;/code&gt; to a value that is not a multiple of 10 might have the same results as setting it to the next higher multiple of 10. This parameter can only be set in the &lt;code&gt;postgresql.conf&lt;/code&gt; file or on the server command line.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65891b99ebd84a5b4b8f9137b7b2548818a03e44" translate="yes" xml:space="preserve">
          <source>Specifies the directory of the Unix-domain socket on which &lt;code&gt;postgres&lt;/code&gt; is to listen for connections from client applications. The value can also be a comma-separated list of directories. An empty value specifies not listening on any Unix-domain sockets, in which case only TCP/IP sockets can be used to connect to the server. The default value is normally &lt;code&gt;/tmp&lt;/code&gt;, but that can be changed at build time. Specifying this option is equivalent to setting the &lt;a href=&quot;runtime-config-connection#GUC-UNIX-SOCKET-DIRECTORIES&quot;&gt;unix_socket_directories&lt;/a&gt; configuration parameter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ece6c2b137836024542c892b5cbde6d4260efa0" translate="yes" xml:space="preserve">
          <source>Specifies the directory of the Unix-domain socket(s) on which the server is to listen for connections from client applications. Multiple sockets can be created by listing multiple directories separated by commas. Whitespace between entries is ignored; surround a directory name with double quotes if you need to include whitespace or commas in the name. An empty value specifies not listening on any Unix-domain sockets, in which case only TCP/IP sockets can be used to connect to the server. The default value is normally &lt;code&gt;/tmp&lt;/code&gt;, but that can be changed at build time. This parameter can only be set at server start.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb29cb5eeb7f7be52b758840367e33a588690dab" translate="yes" xml:space="preserve">
          <source>Specifies the directory to use for data storage. This parameter can only be set at server start.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11db5df96b49399726662fcbc893e27a9805ff11" translate="yes" xml:space="preserve">
          <source>Specifies the directory where the database cluster is stored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0c2552ed1cff5eeeb9b6a5931f697e4a6460190" translate="yes" xml:space="preserve">
          <source>Specifies the directory where the database cluster is stored; can be overridden using the &lt;code&gt;-D&lt;/code&gt; option.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="faf02825df46734a3a4d7329750e798986daa627" translate="yes" xml:space="preserve">
          <source>Specifies the directory where the database cluster is to be stored; can be overridden using the &lt;code&gt;-D&lt;/code&gt; option.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6dea9fa06e699d296db947040f8b73a9cca2562" translate="yes" xml:space="preserve">
          <source>Specifies the dynamic shared memory implementation that the server should use. Possible values are &lt;code&gt;posix&lt;/code&gt; (for POSIX shared memory allocated using &lt;code&gt;shm_open&lt;/code&gt;), &lt;code&gt;sysv&lt;/code&gt; (for System V shared memory allocated via &lt;code&gt;shmget&lt;/code&gt;), &lt;code&gt;windows&lt;/code&gt; (for Windows shared memory), and &lt;code&gt;mmap&lt;/code&gt; (to simulate shared memory using memory-mapped files stored in the data directory). Not all values are supported on all platforms; the first supported option is the default for that platform. The use of the &lt;code&gt;mmap&lt;/code&gt; option, which is not the default on any platform, is generally discouraged because the operating system may write modified pages back to disk repeatedly, increasing system I/O load; however, it may be useful for debugging, when the &lt;code&gt;pg_dynshmem&lt;/code&gt; directory is stored on a RAM disk, or when other shared memory facilities are not available.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="760955cf97ee3290fb4508d4d49cce72805b4c4e" translate="yes" xml:space="preserve">
          <source>Specifies the field separator to be used in CSV output format. If the separator character appears in a field's value, that field is output within double quotes, following standard CSV rules. The default is a comma.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e917d1d433d917f6043796b032bcd2ffaee9907" translate="yes" xml:space="preserve">
          <source>Specifies the field separator to be used in unaligned output format. That way one can create, for example, tab-separated output, which other programs might prefer. To set a tab as field separator, type &lt;code&gt;\pset fieldsep '\t'&lt;/code&gt;. The default field separator is &lt;code&gt;'|'&lt;/code&gt; (a vertical bar).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04cee49efc62ebe789d21e0e47ab887d247c1561" translate="yes" xml:space="preserve">
          <source>Specifies the file name to write test data in. This file should be in the same file system that the &lt;code&gt;pg_wal&lt;/code&gt; directory is or will be placed in. (&lt;code&gt;pg_wal&lt;/code&gt; contains the WAL files.) The default is &lt;code&gt;pg_test_fsync.out&lt;/code&gt; in the current directory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fced01e8658afcc18d03f94c05c35dca865c777" translate="yes" xml:space="preserve">
          <source>Specifies the file system location of the database configuration files. If this option is omitted, the environment variable &lt;code&gt;PGDATA&lt;/code&gt; is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fce11e308f8b788248456ee55963a12916efd84e" translate="yes" xml:space="preserve">
          <source>Specifies the file system location of the database configuration files. See &lt;a href=&quot;runtime-config-file-locations&quot;&gt;Section 19.2&lt;/a&gt; for details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6bdce9b9a73682cb387605b56e2bec119f17da6" translate="yes" xml:space="preserve">
          <source>Specifies the file system path to the data directory of the source server to synchronize the target with. This option requires the source server to be cleanly shut down.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="411e213240e08ca41390292b5e38f6b03746b594" translate="yes" xml:space="preserve">
          <source>Specifies the file to be read. Must be an absolute path name. Either &lt;code&gt;filename&lt;/code&gt; or &lt;code&gt;program&lt;/code&gt; must be specified, but not both.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08877521850620f394bb17ee11ca3feb476df03a" translate="yes" xml:space="preserve">
          <source>Specifies the fraction of the total number of heap tuples counted in the previous statistics collection that can be inserted without incurring an index scan at the &lt;code&gt;VACUUM&lt;/code&gt; cleanup stage. This setting currently applies to B-tree indexes only.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b9ed7d21ee29b1d7465127ec160457147915070" translate="yes" xml:space="preserve">
          <source>Specifies the host name of the machine on which the database server is running. If the value begins with a slash, it is used as the directory for the Unix domain socket. The default is taken from the &lt;code&gt;PGHOST&lt;/code&gt; environment variable, if set, else a Unix domain socket connection is attempted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="378299773e2dcbbba21e7bfe4902078b6a68428f" translate="yes" xml:space="preserve">
          <source>Specifies the host name of the machine on which the server is running. If the value begins with a slash, it is used as the directory for the Unix domain socket.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1104adbc4a77ea04906311b0d429b5af7cf8b538" translate="yes" xml:space="preserve">
          <source>Specifies the host name of the machine on which the server is running. If the value begins with a slash, it is used as the directory for the Unix domain socket. The default is taken from the &lt;code&gt;PGHOST&lt;/code&gt; environment variable, if set, else a Unix domain socket connection is attempted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b77d791d0d8685e5a29d9b871f2bdf6c521c05de" translate="yes" xml:space="preserve">
          <source>Specifies the host name of the machine on which the server is running. If the value begins with a slash, it is used as the directory for the Unix-domain socket.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb03ba8300bc7d9b1acc3da46e5cafc97ca9080d" translate="yes" xml:space="preserve">
          <source>Specifies the locale to be used in this database. This is equivalent to specifying both &lt;code&gt;--lc-collate&lt;/code&gt; and &lt;code&gt;--lc-ctype&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32d3c2328c525bf7ec362c874803f45f18836f7d" translate="yes" xml:space="preserve">
          <source>Specifies the location for the write-ahead log directory. &lt;code&gt;waldir&lt;/code&gt; must be an absolute path. The write-ahead log directory can only be specified when the backup is in plain mode.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="146ce026eb97b19b6590e742fbbe8b13613d13d2" translate="yes" xml:space="preserve">
          <source>Specifies the location of the &lt;code&gt;postgres&lt;/code&gt; executable. By default the &lt;code&gt;postgres&lt;/code&gt; executable is taken from the same directory as &lt;code&gt;pg_ctl&lt;/code&gt;, or failing that, the hard-wired installation directory. It is not necessary to use this option unless you are doing something unusual and get errors that the &lt;code&gt;postgres&lt;/code&gt; executable was not found.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67cf41f8a4f60dc2e9858ff9535fd94e3e6a81dd" translate="yes" xml:space="preserve">
          <source>Specifies the location of the archive file (or directory, for a directory-format archive) to be restored. If not specified, the standard input is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78c275e7478de780e0c0ae20a65504117c5eb802" translate="yes" xml:space="preserve">
          <source>Specifies the main server configuration file (customarily called &lt;code&gt;postgresql.conf&lt;/code&gt;). This parameter can only be set on the &lt;code&gt;postgres&lt;/code&gt; command line.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e97ccf4a8e23f9d384eed434906574cc2271c74" translate="yes" xml:space="preserve">
          <source>Specifies the maximum age (in multixacts) that a table's &lt;code&gt;pg_class&lt;/code&gt;.&lt;code&gt;relminmxid&lt;/code&gt; field can attain before a &lt;code&gt;VACUUM&lt;/code&gt; operation is forced to prevent multixact ID wraparound within the table. Note that the system will launch autovacuum processes to prevent wraparound even when autovacuum is otherwise disabled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5affde86c2fe5784f06a063b364dacc33bbb535a" translate="yes" xml:space="preserve">
          <source>Specifies the maximum age (in transactions) that a table's &lt;code&gt;pg_class&lt;/code&gt;.&lt;code&gt;relfrozenxid&lt;/code&gt; field can attain before a &lt;code&gt;VACUUM&lt;/code&gt; operation is forced to prevent transaction ID wraparound within the table. Note that the system will launch autovacuum processes to prevent wraparound even when autovacuum is otherwise disabled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f010b7fcdde599793afec4e96d15a5fb2abe975" translate="yes" xml:space="preserve">
          <source>Specifies the maximum amount of disk space that a process can use for temporary files, such as sort and hash temporary files, or the storage file for a held cursor. A transaction attempting to exceed this limit will be canceled. If this value is specified without units, it is taken as kilobytes. &lt;code&gt;-1&lt;/code&gt; (the default) means no limit. Only superusers can change this setting.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0573c5c6cbdc223f1b969e9b0f0a345c30b39d5" translate="yes" xml:space="preserve">
          <source>Specifies the maximum amount of memory to be used by each autovacuum worker process. If this value is specified without units, it is taken as kilobytes. It defaults to -1, indicating that the value of &lt;a href=&quot;runtime-config-resource#GUC-MAINTENANCE-WORK-MEM&quot;&gt;maintenance_work_mem&lt;/a&gt; should be used instead. The setting has no effect on the behavior of &lt;code&gt;VACUUM&lt;/code&gt; when run in other contexts.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="126d64716f55e0082a6fcec7e843ff39dfb3930f" translate="yes" xml:space="preserve">
          <source>Specifies the maximum amount of memory to be used by maintenance operations, such as &lt;code&gt;VACUUM&lt;/code&gt;, &lt;code&gt;CREATE INDEX&lt;/code&gt;, and &lt;code&gt;ALTER TABLE ADD FOREIGN KEY&lt;/code&gt;. If this value is specified without units, it is taken as kilobytes. It defaults to 64 megabytes (&lt;code&gt;64MB&lt;/code&gt;). Since only one of these operations can be executed at a time by a database session, and an installation normally doesn't have many of them running concurrently, it's safe to set this value significantly larger than &lt;code&gt;work_mem&lt;/code&gt;. Larger settings might improve performance for vacuuming and for restoring database dumps.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd32d6b12ec5aaa1b931d66d0b7044757f368123" translate="yes" xml:space="preserve">
          <source>Specifies the maximum number of autovacuum processes (other than the autovacuum launcher) that may be running at any one time. The default is three. This parameter can only be set at server start.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d86d4a61156c2127910d22c104af16bc1a25e54c" translate="yes" xml:space="preserve">
          <source>Specifies the maximum number of concurrent connections from standby servers or streaming base backup clients (i.e., the maximum number of simultaneously running WAL sender processes). The default is &lt;code&gt;10&lt;/code&gt;. The value &lt;code&gt;0&lt;/code&gt; means replication is disabled. Abrupt streaming client disconnection might leave an orphaned connection slot behind until a timeout is reached, so this parameter should be set slightly higher than the maximum number of expected clients so disconnected clients can immediately reconnect. This parameter can only be set at server start. Also, &lt;code&gt;wal_level&lt;/code&gt; must be set to &lt;code&gt;replica&lt;/code&gt; or higher to allow connections from standby servers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e16d0fca721e93f769eda585ab46fe9f10953cb" translate="yes" xml:space="preserve">
          <source>Specifies the maximum number of replication slots (see &lt;a href=&quot;warm-standby#STREAMING-REPLICATION-SLOTS&quot;&gt;Section 26.2.6&lt;/a&gt;) that the server can support. The default is 10. This parameter can only be set at server start. Setting it to a lower value than the number of currently existing replication slots will prevent the server from starting. Also, &lt;code&gt;wal_level&lt;/code&gt; must be set to &lt;code&gt;replica&lt;/code&gt; or higher to allow replication slots to be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a990b44b3d9cccdd64f1d53821fc66bf704b75f8" translate="yes" xml:space="preserve">
          <source>Specifies the maximum number of seconds to wait when waiting for an operation to complete (see option &lt;code&gt;-w&lt;/code&gt;). Defaults to the value of the &lt;code&gt;PGCTLTIMEOUT&lt;/code&gt; environment variable or, if not set, to 60 seconds.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2eb91704d62701e391e184a733cf4465a18531f" translate="yes" xml:space="preserve">
          <source>Specifies the maximum safe depth of the server's execution stack. The ideal setting for this parameter is the actual stack size limit enforced by the kernel (as set by &lt;code&gt;ulimit -s&lt;/code&gt; or local equivalent), less a safety margin of a megabyte or so. The safety margin is needed because the stack depth is not checked in every routine in the server, but only in key potentially-recursive routines. If this value is specified without units, it is taken as kilobytes. The default setting is two megabytes (&lt;code&gt;2MB&lt;/code&gt;), which is conservatively small and unlikely to risk crashes. However, it might be too small to allow execution of complex functions. Only superusers can change this setting.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7234d0051dd21c559d43eed9daa7ea589a63a0cd" translate="yes" xml:space="preserve">
          <source>Specifies the minimum delay between autovacuum runs on any given database. In each round the daemon examines the database and issues &lt;code&gt;VACUUM&lt;/code&gt; and &lt;code&gt;ANALYZE&lt;/code&gt; commands as needed for tables in that database. If this value is specified without units, it is taken as seconds. The default is one minute (&lt;code&gt;1min&lt;/code&gt;). This parameter can only be set in the &lt;code&gt;postgresql.conf&lt;/code&gt; file or on the server command line.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2ea8e4056ad15333c7e77677985f461f0b80f0a" translate="yes" xml:space="preserve">
          <source>Specifies the minimum frequency for the WAL receiver process on the standby to send information about replication progress to the primary or upstream standby, where it can be seen using the &lt;a href=&quot;monitoring-stats#PG-STAT-REPLICATION-VIEW&quot;&gt;&lt;code&gt;pg_stat_replication&lt;/code&gt;&lt;/a&gt; view. The standby will report the last write-ahead log location it has written, the last position it has flushed to disk, and the last position it has applied. This parameter's value is the maximum amount of time between reports. Updates are sent each time the write or flush positions change, or at least as often as specified by this parameter. Thus, the apply position may lag slightly behind the true position. If this value is specified without units, it is taken as seconds. The default value is 10 seconds. Setting this parameter to zero disables status updates completely. This parameter can only be set in the &lt;code&gt;postgresql.conf&lt;/code&gt; file or on the server command line.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce0ab7b202d3d8692703c1ba1fdf9aca06bfd456" translate="yes" xml:space="preserve">
          <source>Specifies the minimum number of inserted, updated or deleted tuples needed to trigger an &lt;code&gt;ANALYZE&lt;/code&gt; in any one table. The default is 50 tuples. This parameter can only be set in the &lt;code&gt;postgresql.conf&lt;/code&gt; file or on the server command line; but the setting can be overridden for individual tables by changing table storage parameters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0403968d38181f241e6089a57de9236a1691e263" translate="yes" xml:space="preserve">
          <source>Specifies the minimum number of past log file segments kept in the &lt;code&gt;pg_wal&lt;/code&gt; directory, in case a standby server needs to fetch them for streaming replication. Each segment is normally 16 megabytes. If a standby server connected to the sending server falls behind by more than &lt;code&gt;wal_keep_segments&lt;/code&gt; segments, the sending server might remove a WAL segment still needed by the standby, in which case the replication connection will be terminated. Downstream connections will also eventually fail as a result. (However, the standby server can recover by fetching the segment from archive, if WAL archiving is in use.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c286f041e9491afc48842651c34e1386fc2a3ac4" translate="yes" xml:space="preserve">
          <source>Specifies the minimum number of updated or deleted tuples needed to trigger a &lt;code&gt;VACUUM&lt;/code&gt; in any one table. The default is 50 tuples. This parameter can only be set in the &lt;code&gt;postgresql.conf&lt;/code&gt; file or on the server command line; but the setting can be overridden for individual tables by changing table storage parameters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec4d011fd180e526dc6d261474f8f2aa1994581b" translate="yes" xml:space="preserve">
          <source>Specifies the name of an additional process-ID (PID) file that the server should create for use by server administration programs. This parameter can only be set at server start.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba64ee81036e5a43ac1d284414488964610d00df" translate="yes" xml:space="preserve">
          <source>Specifies the name of the PostgreSQL user to be created. This name must be different from all existing roles in this PostgreSQL installation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f596235638c2dd0556fe4d70a6782045baaa7b44" translate="yes" xml:space="preserve">
          <source>Specifies the name of the PostgreSQL user to be removed. You will be prompted for a name if none is specified on the command line and the &lt;code&gt;-i&lt;/code&gt;/&lt;code&gt;--interactive&lt;/code&gt; option is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b27c166f7a4f9ca906105a7248615c5eb38e2f3d" translate="yes" xml:space="preserve">
          <source>Specifies the name of the curve to use in ECDH key exchange. It needs to be supported by all clients that connect. It does not need to be the same curve used by the server's Elliptic Curve key. This parameter can only be set in the &lt;code&gt;postgresql.conf&lt;/code&gt; file or on the server command line. The default is &lt;code&gt;prime256v1&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2f5dba57b0deebf9f28589d386420f0d436f37a" translate="yes" xml:space="preserve">
          <source>Specifies the name of the database to be accessed. This must be the last argument on the command line. If it is omitted it defaults to the user name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42c9a31bc526009932a298eaed835ab7845dba65" translate="yes" xml:space="preserve">
          <source>Specifies the name of the database to be cleaned or analyzed. If this is not specified and &lt;code&gt;-a&lt;/code&gt; (or &lt;code&gt;--all&lt;/code&gt;) is not used, the database name is read from the environment variable &lt;code&gt;PGDATABASE&lt;/code&gt;. If that is not set, the user name specified for the connection is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77286e601c0d7ad6f34cc2441c556793d427eaa0" translate="yes" xml:space="preserve">
          <source>Specifies the name of the database to be clustered. If this is not specified and &lt;code&gt;-a&lt;/code&gt; (or &lt;code&gt;--all&lt;/code&gt;) is not used, the database name is read from the environment variable &lt;code&gt;PGDATABASE&lt;/code&gt;. If that is not set, the user name specified for the connection is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb149ecf0a8a96bd4dcff90624b2044507c63ad7" translate="yes" xml:space="preserve">
          <source>Specifies the name of the database to be created. The name must be unique among all PostgreSQL databases in this cluster. The default is to create a database with the same name as the current system user.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6320121c5ada2cddc268aadc8fa8b77204bd02e" translate="yes" xml:space="preserve">
          <source>Specifies the name of the database to be dumped. If this is not specified, the environment variable &lt;code&gt;PGDATABASE&lt;/code&gt; is used. If that is not set, the user name specified for the connection is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8aa308a2d58dcda20cc1cc4796d09597d760bab9" translate="yes" xml:space="preserve">
          <source>Specifies the name of the database to be reindexed. If this is not specified and &lt;code&gt;-a&lt;/code&gt; (or &lt;code&gt;--all&lt;/code&gt;) is not used, the database name is read from the environment variable &lt;code&gt;PGDATABASE&lt;/code&gt;. If that is not set, the user name specified for the connection is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93430faca7110a2ed34b1de2612c19dd5d158e9d" translate="yes" xml:space="preserve">
          <source>Specifies the name of the database to be removed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbfd83da278393a2bb650f62c07e3bc33867c7a3" translate="yes" xml:space="preserve">
          <source>Specifies the name of the database to connect to discover what other databases should be clustered. If not specified, the &lt;code&gt;postgres&lt;/code&gt; database will be used, and if that does not exist, &lt;code&gt;template1&lt;/code&gt; will be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9960b3884e3ff63577481ba2b475c59038d6128e" translate="yes" xml:space="preserve">
          <source>Specifies the name of the database to connect to discover what other databases should be reindexed. If not specified, the &lt;code&gt;postgres&lt;/code&gt; database will be used, and if that does not exist, &lt;code&gt;template1&lt;/code&gt; will be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c814583b820381beeb16360a570cd3a52292d9ad" translate="yes" xml:space="preserve">
          <source>Specifies the name of the database to connect to discover what other databases should be vacuumed. If not specified, the &lt;code&gt;postgres&lt;/code&gt; database will be used, and if that does not exist, &lt;code&gt;template1&lt;/code&gt; will be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c495a5df0e2553002c0820b7e223f15ae2a7a682" translate="yes" xml:space="preserve">
          <source>Specifies the name of the database to connect to for dumping global objects and discovering what other databases should be dumped. If not specified, the &lt;code&gt;postgres&lt;/code&gt; database will be used, and if that does not exist, &lt;code&gt;template1&lt;/code&gt; will be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="638ef2cbfc482d4ed63ef40a2ba5e0cd385f8f1b" translate="yes" xml:space="preserve">
          <source>Specifies the name of the database to connect to in order to drop the target database. If not specified, the &lt;code&gt;postgres&lt;/code&gt; database will be used; if that does not exist (or is the database being dropped), &lt;code&gt;template1&lt;/code&gt; will be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05aa5906b6d8b93f39c0fb91da9ec9b7045073d5" translate="yes" xml:space="preserve">
          <source>Specifies the name of the database to connect to when creating the new database. If not specified, the &lt;code&gt;postgres&lt;/code&gt; database will be used; if that does not exist (or if it is the name of the new database being created), &lt;code&gt;template1&lt;/code&gt; will be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b5a050e221e712b6aea81d13bdc8e468c753c77" translate="yes" xml:space="preserve">
          <source>Specifies the name of the database to connect to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83558a13daf04bcf549756b2e27ad9996b0aeef3" translate="yes" xml:space="preserve">
          <source>Specifies the name of the database to connect to. This is equivalent to specifying &lt;code&gt;dbname&lt;/code&gt; as the first non-option argument on the command line.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a1908731503b055b19666826b9e04bd057ebf5e" translate="yes" xml:space="preserve">
          <source>Specifies the name of the file containing Diffie-Hellman parameters used for so-called ephemeral DH family of SSL ciphers. The default is empty, in which case compiled-in default DH parameters used. Using custom DH parameters reduces the exposure if an attacker manages to crack the well-known compiled-in DH parameters. You can create your own DH parameters file with the command &lt;code&gt;openssl dhparam -out dhparams.pem 2048&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0622470097200762d7d443d008e250439121381d" translate="yes" xml:space="preserve">
          <source>Specifies the name of the file containing the SSL server certificate authority (CA). Relative paths are relative to the data directory. This parameter can only be set in the &lt;code&gt;postgresql.conf&lt;/code&gt; file or on the server command line. The default is empty, meaning no CA file is loaded, and client certificate verification is not performed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bae1e7846a9c5450eae51f0ce1248e54dad12868" translate="yes" xml:space="preserve">
          <source>Specifies the name of the file containing the SSL server certificate revocation list (CRL). Relative paths are relative to the data directory. This parameter can only be set in the &lt;code&gt;postgresql.conf&lt;/code&gt; file or on the server command line. The default is empty, meaning no CRL file is loaded.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38cd4f3dc9813010e6034efda9c09573477cd23b" translate="yes" xml:space="preserve">
          <source>Specifies the name of the file containing the SSL server certificate. Relative paths are relative to the data directory. This parameter can only be set in the &lt;code&gt;postgresql.conf&lt;/code&gt; file or on the server command line. The default is &lt;code&gt;server.crt&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a80365214556c2a2be3de847fc3e074bf0846c6" translate="yes" xml:space="preserve">
          <source>Specifies the name of the file containing the SSL server private key. Relative paths are relative to the data directory. This parameter can only be set in the &lt;code&gt;postgresql.conf&lt;/code&gt; file or on the server command line. The default is &lt;code&gt;server.key&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4607c81653142efa771ba2f3019c56810db492d5" translate="yes" xml:space="preserve">
          <source>Specifies the number of TCP keepalive messages that can be lost before the server's connection to the client is considered dead. A value of 0 (the default) selects the operating system's default. This parameter is supported only on systems that support &lt;code&gt;TCP_KEEPCNT&lt;/code&gt; or an equivalent socket option; on other systems, it must be zero. In sessions connected via a Unix-domain socket, this parameter is ignored and always reads as zero.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48d5c63bb87e1c3bac4f154cb64fa004acf6a6db" translate="yes" xml:space="preserve">
          <source>Specifies the number of seconds between status packets sent back to the server. This allows for easier monitoring of the progress from server. A value of zero disables the periodic status updates completely, although an update will still be sent when requested by the server, to avoid timeout disconnect. The default value is 10 seconds.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea542b3506a4692ae26cd5feb16ab14526275d28" translate="yes" xml:space="preserve">
          <source>Specifies the number of seconds for each test. The more time per test, the greater the test's accuracy, but the longer it takes to run. The default is 5 seconds, which allows the program to complete in under 2 minutes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8cc03900b1929bc4bc3435d34770495f2f12cc60" translate="yes" xml:space="preserve">
          <source>Specifies the number of transactions by which &lt;code&gt;VACUUM&lt;/code&gt; and HOT updates will defer cleanup of dead row versions. The default is zero transactions, meaning that dead row versions can be removed as soon as possible, that is, as soon as they are no longer visible to any open transaction. You may wish to set this to a non-zero value on a primary server that is supporting hot standby servers, as described in &lt;a href=&quot;hot-standby&quot;&gt;Section 26.5&lt;/a&gt;. This allows more time for queries on the standby to complete without incurring conflicts due to early cleanup of rows. However, since the value is measured in terms of number of write transactions occurring on the primary server, it is difficult to predict just how much additional grace time will be made available to standby queries. This parameter can only be set in the &lt;code&gt;postgresql.conf&lt;/code&gt; file or on the server command line.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a66859b61b3f3229e8a580cf2576546743106ff" translate="yes" xml:space="preserve">
          <source>Specifies the provider to use for locale services associated with this collation. Possible values are: &lt;code&gt;icu&lt;/code&gt;, &lt;code&gt;libc&lt;/code&gt;. &lt;code&gt;libc&lt;/code&gt; is the default. The available choices depend on the operating system and build options.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="499c4377a213acbe2f50878dd26f848ea71f62d5" translate="yes" xml:space="preserve">
          <source>Specifies the quoting character to be used when a data value is quoted. The default is double-quote. This must be a single one-byte character. This option is allowed only when using &lt;code&gt;CSV&lt;/code&gt; format.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb624ed7e1e60e95c350918cd5415ed8b5d2c9de" translate="yes" xml:space="preserve">
          <source>Specifies the record (line) separator to use in unaligned output format. The default is a newline character.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2558e1aa0584d2c9b59b33c889639d3c2a8793ce" translate="yes" xml:space="preserve">
          <source>Specifies the shared memory implementation that the server should use for the main shared memory region that holds PostgreSQL's shared buffers and other shared data. Possible values are &lt;code&gt;mmap&lt;/code&gt; (for anonymous shared memory allocated using &lt;code&gt;mmap&lt;/code&gt;), &lt;code&gt;sysv&lt;/code&gt; (for System V shared memory allocated via &lt;code&gt;shmget&lt;/code&gt;) and &lt;code&gt;windows&lt;/code&gt; (for Windows shared memory). Not all values are supported on all platforms; the first supported option is the default for that platform. The use of the &lt;code&gt;sysv&lt;/code&gt; option, which is not the default on any platform, is generally discouraged because it typically requires non-default kernel settings to allow for large allocations (see &lt;a href=&quot;kernel-resources#SYSVIPC&quot;&gt;Section 18.4.1&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ccd9f460ce8d5cb66ffec64aa427c1853d1b8854" translate="yes" xml:space="preserve">
          <source>Specifies the shutdown mode. &lt;code&gt;mode&lt;/code&gt; can be &lt;code&gt;smart&lt;/code&gt;, &lt;code&gt;fast&lt;/code&gt;, or &lt;code&gt;immediate&lt;/code&gt;, or the first letter of one of these three. If this option is omitted, &lt;code&gt;fast&lt;/code&gt; is the default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fab1a9b05630ddb8e82054863572cf573012df3a" translate="yes" xml:space="preserve">
          <source>Specifies the string that represents a null value. The default is &lt;code&gt;\N&lt;/code&gt; (backslash-N) in text format, and an unquoted empty string in &lt;code&gt;CSV&lt;/code&gt; format. You might prefer an empty string even in text format for cases where you don't want to distinguish nulls from empty strings. This option is not allowed when using &lt;code&gt;binary&lt;/code&gt; format.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="befe3a3ac118d97b0cd868cce1352d119ad055f4" translate="yes" xml:space="preserve">
          <source>Specifies the target of checkpoint completion, as a fraction of total time between checkpoints. The default is 0.5. This parameter can only be set in the &lt;code&gt;postgresql.conf&lt;/code&gt; file or on the server command line.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71c8d5b87a0e5a99f8d4571a644763394fd77006" translate="yes" xml:space="preserve">
          <source>Specifies the template database from which to build this database. (This name is processed as a double-quoted identifier.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85ecc3d1311105aaeb7eeb12a6761d2e6623ba45" translate="yes" xml:space="preserve">
          <source>Specifies the test duration, in seconds. Longer durations give slightly better accuracy, and are more likely to discover problems with the system clock moving backwards. The default test duration is 3 seconds.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d34c628f85bceb534d90fd071ae6e05e316684fb" translate="yes" xml:space="preserve">
          <source>Specifies the version number of the frontend/backend protocol to be used for a particular session. This option is for internal use only.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7aa5a4652a46d1f3c27eaba7af4bd3633fed02d9" translate="yes" xml:space="preserve">
          <source>Specifies the version string to store with the collation. Normally, this should be omitted, which will cause the version to be computed from the actual version of the collation as provided by the operating system. This option is intended to be used by &lt;code&gt;pg_upgrade&lt;/code&gt; for copying the version from an existing installation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ddaa8dc2a7d08117a4f2b4c3d78cac04e661f41d" translate="yes" xml:space="preserve">
          <source>Specifies verbose mode.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c46d2e1a51a71406401ec9ff38daaf6fd4a82a32" translate="yes" xml:space="preserve">
          <source>Specifies verbose mode. This will cause pg_dump to output detailed object comments and start/stop times to the dump file, and progress messages to standard error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebd9c3e91abd466e5cb76c7e539eb720eb8bab79" translate="yes" xml:space="preserve">
          <source>Specifies verbose mode. This will cause pg_dumpall to output start/stop times to the dump file, and progress messages to standard error. It will also enable verbose output in pg_dump.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e1b16c0cfb347ed5e5085abe8f7b40f00f3b213" translate="yes" xml:space="preserve">
          <source>Specifies what action the server should take once the recovery target is reached. The default is &lt;code&gt;pause&lt;/code&gt;, which means recovery will be paused. &lt;code&gt;promote&lt;/code&gt; means the recovery process will finish and the server will start to accept connections. Finally &lt;code&gt;shutdown&lt;/code&gt; will stop the server after reaching the recovery target.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a78ff10e6c3eb26498d1ae314b645439f6179efb" translate="yes" xml:space="preserve">
          <source>Specifies where &lt;code&gt;initdb&lt;/code&gt; should find its input files to initialize the database cluster. This is normally not necessary. You will be told if you need to specify their location explicitly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55702d9d058993c167739847fc03d714335ae9bd" translate="yes" xml:space="preserve">
          <source>Specifies whether or not a hot standby will send feedback to the primary or upstream standby about queries currently executing on the standby. This parameter can be used to eliminate query cancels caused by cleanup records, but can cause database bloat on the primary for some workloads. Feedback messages will not be sent more frequently than once per &lt;code&gt;wal_receiver_status_interval&lt;/code&gt;. The default value is &lt;code&gt;off&lt;/code&gt;. This parameter can only be set in the &lt;code&gt;postgresql.conf&lt;/code&gt; file or on the server command line.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf42dfb5427d85a48aa7ca14c68254a8aa74d01e" translate="yes" xml:space="preserve">
          <source>Specifies whether or not you can connect and run queries during recovery, as described in &lt;a href=&quot;hot-standby&quot;&gt;Section 26.5&lt;/a&gt;. The default value is &lt;code&gt;on&lt;/code&gt;. This parameter can only be set at server start. It only has effect during archive recovery or in standby mode.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8c1d8143602dc11e9fa60d73a3ca68243f890ed" translate="yes" xml:space="preserve">
          <source>Specifies whether the &lt;code&gt;CREATE SUBSCRIPTION&lt;/code&gt; should connect to the publisher at all. Setting this to &lt;code&gt;false&lt;/code&gt; will change default values of &lt;code&gt;enabled&lt;/code&gt;, &lt;code&gt;create_slot&lt;/code&gt; and &lt;code&gt;copy_data&lt;/code&gt; to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f3fe61335a36998cd2b4e2be2d49820174726c7" translate="yes" xml:space="preserve">
          <source>Specifies whether the collation should use deterministic comparisons. The default is true. A deterministic comparison considers strings that are not byte-wise equal to be unequal even if they are considered logically equal by the comparison. PostgreSQL breaks ties using a byte-wise comparison. Comparison that is not deterministic can make the collation be, say, case- or accent-insensitive. For that, you need to choose an appropriate &lt;code&gt;LC_COLLATE&lt;/code&gt; setting &lt;em&gt;and&lt;/em&gt; set the collation to not deterministic here.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08409a9f4fcfade75db2fbc62c996ba7ea8ee98a" translate="yes" xml:space="preserve">
          <source>Specifies whether the command should create the replication slot on the publisher. The default is &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="561cf57ae696bf0926965afe12bdcd1ab43f09ee" translate="yes" xml:space="preserve">
          <source>Specifies whether the data has a header line, the same as &lt;code&gt;COPY&lt;/code&gt;'s &lt;code&gt;HEADER&lt;/code&gt; option.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d89f58ceb7dd86d8f940fbdda605d4fc3829701" translate="yes" xml:space="preserve">
          <source>Specifies whether the existing data in the publications that are being subscribed to should be copied once the replication starts. The default is &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81c51bc60a5635b9d7f0ed683614af3991e0177b" translate="yes" xml:space="preserve">
          <source>Specifies whether the selected option should be turned on or off. You can write &lt;code&gt;TRUE&lt;/code&gt;, &lt;code&gt;ON&lt;/code&gt;, or &lt;code&gt;1&lt;/code&gt; to enable the option, and &lt;code&gt;FALSE&lt;/code&gt;, &lt;code&gt;OFF&lt;/code&gt;, or &lt;code&gt;0&lt;/code&gt; to disable it. The &lt;code&gt;boolean&lt;/code&gt; value can also be omitted, in which case &lt;code&gt;TRUE&lt;/code&gt; is assumed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6568125e106aa49b2591a59804669013e3cf6ee5" translate="yes" xml:space="preserve">
          <source>Specifies whether the subscription should be actively replicating, or whether it should be just setup but not started yet. The default is &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bfd7f0006bcdef7ba712843d62f6cc1add8b74d" translate="yes" xml:space="preserve">
          <source>Specifies whether to stop just after the specified recovery target (&lt;code&gt;on&lt;/code&gt;), or just before the recovery target (&lt;code&gt;off&lt;/code&gt;). Applies when &lt;a href=&quot;runtime-config-wal#GUC-RECOVERY-TARGET-LSN&quot;&gt;recovery_target_lsn&lt;/a&gt;, &lt;a href=&quot;runtime-config-wal#GUC-RECOVERY-TARGET-TIME&quot;&gt;recovery_target_time&lt;/a&gt;, or &lt;a href=&quot;runtime-config-wal#GUC-RECOVERY-TARGET-XID&quot;&gt;recovery_target_xid&lt;/a&gt; is specified. This setting controls whether transactions having exactly the target WAL location (LSN), commit time, or transaction ID, respectively, will be included in the recovery. Default is &lt;code&gt;on&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f40b062fb2ef6e6073ff265399161c58d4f3561" translate="yes" xml:space="preserve">
          <source>Specifies whether to use color in diagnostics messages. Possible values are &lt;code&gt;always&lt;/code&gt;, &lt;code&gt;auto&lt;/code&gt;, &lt;code&gt;never&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eaf40d41e0c4e647942e03bce313b74c79cba167" translate="yes" xml:space="preserve">
          <source>Specifies whether to use the server's SSL cipher preferences, rather than the client's. This parameter can only be set in the &lt;code&gt;postgresql.conf&lt;/code&gt; file or on the server command line. The default is &lt;code&gt;on&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf5277a15623718394738fd9c86087faaccdd4d4" translate="yes" xml:space="preserve">
          <source>Specifies whether transaction commit will wait for WAL records to be written to disk before the command returns a &amp;ldquo;success&amp;rdquo; indication to the client. Valid values are &lt;code&gt;on&lt;/code&gt;, &lt;code&gt;remote_apply&lt;/code&gt;, &lt;code&gt;remote_write&lt;/code&gt;, &lt;code&gt;local&lt;/code&gt;, and &lt;code&gt;off&lt;/code&gt;. The default, and safe, setting is &lt;code&gt;on&lt;/code&gt;. When &lt;code&gt;off&lt;/code&gt;, there can be a delay between when success is reported to the client and when the transaction is really guaranteed to be safe against a server crash. (The maximum delay is three times &lt;a href=&quot;runtime-config-wal#GUC-WAL-WRITER-DELAY&quot;&gt;wal_writer_delay&lt;/a&gt;.) Unlike &lt;a href=&quot;runtime-config-wal#GUC-FSYNC&quot;&gt;fsync&lt;/a&gt;, setting this parameter to &lt;code&gt;off&lt;/code&gt; does not create any risk of database inconsistency: an operating system or database crash might result in some recent allegedly-committed transactions being lost, but the database state will be just the same as if those transactions had been aborted cleanly. So, turning &lt;code&gt;synchronous_commit&lt;/code&gt; off can be a useful alternative when performance is more important than exact certainty about the durability of a transaction. For more discussion see &lt;a href=&quot;wal-async-commit&quot;&gt;Section 29.3&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="116f31279a5160606e40129e9839a559648d4433" translate="yes" xml:space="preserve">
          <source>Specifies which conflicts &lt;code&gt;ON CONFLICT&lt;/code&gt; takes the alternative action on by choosing &lt;em&gt;arbiter indexes&lt;/em&gt;. Either performs &lt;em&gt;unique index inference&lt;/em&gt;, or names a constraint explicitly. For &lt;code&gt;ON CONFLICT DO NOTHING&lt;/code&gt;, it is optional to specify a &lt;em&gt;&lt;code&gt;conflict_target&lt;/code&gt;&lt;/em&gt;; when omitted, conflicts with all usable constraints (and unique indexes) are handled. For &lt;code&gt;ON CONFLICT DO UPDATE&lt;/code&gt;, a &lt;em&gt;&lt;code&gt;conflict_target&lt;/code&gt;&lt;/em&gt;&lt;em&gt;must&lt;/em&gt; be provided.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04fd7a99f103a7674fd3650283ad5df86a38c1d7" translate="yes" xml:space="preserve">
          <source>Specifies which database name(s) this record matches. The value &lt;code&gt;all&lt;/code&gt; specifies that it matches all databases. The value &lt;code&gt;sameuser&lt;/code&gt; specifies that the record matches if the requested database has the same name as the requested user. The value &lt;code&gt;samerole&lt;/code&gt; specifies that the requested user must be a member of the role with the same name as the requested database. (&lt;code&gt;samegroup&lt;/code&gt; is an obsolete but still accepted spelling of &lt;code&gt;samerole&lt;/code&gt;.) Superusers are not considered to be members of a role for the purposes of &lt;code&gt;samerole&lt;/code&gt; unless they are explicitly members of the role, directly or indirectly, and not just by virtue of being a superuser. The value &lt;code&gt;replication&lt;/code&gt; specifies that the record matches if a physical replication connection is requested (note that replication connections do not specify any particular database). Otherwise, this is the name of a specific PostgreSQL database. Multiple database names can be supplied by separating them with commas. A separate file containing database names can be specified by preceding the file name with &lt;code&gt;@&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d636bc68af3f129d834c4f7c23a7d5cb374e4f3e" translate="yes" xml:space="preserve">
          <source>Specifies which database user name(s) this record matches. The value &lt;code&gt;all&lt;/code&gt; specifies that it matches all users. Otherwise, this is either the name of a specific database user, or a group name preceded by &lt;code&gt;+&lt;/code&gt;. (Recall that there is no real distinction between users and groups in PostgreSQL; a &lt;code&gt;+&lt;/code&gt; mark really means &amp;ldquo;match any of the roles that are directly or indirectly members of this role&amp;rdquo;, while a name without a &lt;code&gt;+&lt;/code&gt; mark matches only that specific role.) For this purpose, a superuser is only considered to be a member of a role if they are explicitly a member of the role, directly or indirectly, and not just by virtue of being a superuser. Multiple user names can be supplied by separating them with commas. A separate file containing user names can be specified by preceding the file name with &lt;code&gt;@&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5e088932112a3aa70b2edd9c7b6f330cee6a988" translate="yes" xml:space="preserve">
          <source>Specify an additional include path, used to find files included via &lt;code&gt;EXEC SQL INCLUDE&lt;/code&gt;. Defaults are &lt;code&gt;.&lt;/code&gt; (current directory), &lt;code&gt;/usr/local/include&lt;/code&gt;, the PostgreSQL include directory which is defined at compile time (default: &lt;code&gt;/usr/local/pgsql/include&lt;/code&gt;), and &lt;code&gt;/usr/include&lt;/code&gt;, in that order.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2297c287dd5dcea97a177d8a770b0b08d36ebcce" translate="yes" xml:space="preserve">
          <source>Specify format of the archive. It is not necessary to specify the format, since pg_restore will determine the format automatically. If specified, it can be one of the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fef48f59b1bd0e9cd6b0f9f8b9881d4863e9299a" translate="yes" xml:space="preserve">
          <source>Specify output file for generated script, or for the listing when used with &lt;code&gt;-l&lt;/code&gt;. Use &lt;code&gt;-&lt;/code&gt; for stdout.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c162041167cbfc0a656da0c5232a46cbe070711b" translate="yes" xml:space="preserve">
          <source>Specify that the policy is to be created as a permissive policy. All permissive policies which are applicable to a given query will be combined together using the Boolean &amp;ldquo;OR&amp;rdquo; operator. By creating permissive policies, administrators can add to the set of records which can be accessed. Policies are permissive by default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bce8ed255627219b10fa9d298b0f43fea955f861" translate="yes" xml:space="preserve">
          <source>Specify that the policy is to be created as a restrictive policy. All restrictive policies which are applicable to a given query will be combined together using the Boolean &amp;ldquo;AND&amp;rdquo; operator. By creating restrictive policies, administrators can reduce the set of records which can be accessed as all restrictive policies must be passed for each record.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ddffed63bf5206c3c523be1c15def02715e9a8dc" translate="yes" xml:space="preserve">
          <source>Specify the compression level to use. Zero means no compression. For the custom archive format, this specifies compression of individual table-data segments, and the default is to compress at a moderate level. For plain text output, setting a nonzero compression level causes the entire output file to be compressed, as though it had been fed through gzip; but the default is not to compress. The tar archive format currently does not support compression at all.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d08aa11ed8e2e056c96c29df6ee8f99b3f6c16b9" translate="yes" xml:space="preserve">
          <source>Specify the output format, which can be TEXT, XML, JSON, or YAML. Non-text output contains the same information as the text output format, but is easier for programs to parse. This parameter defaults to &lt;code&gt;TEXT&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97d5c6c81e2f5df1a05fc06ba5ebbc33efa9aae4" translate="yes" xml:space="preserve">
          <source>Specify the superuser user name to use when disabling triggers. This is relevant only if &lt;code&gt;--disable-triggers&lt;/code&gt; is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d99186f621c6855e4371f4922a42dcd48ef5a91" translate="yes" xml:space="preserve">
          <source>Specify the superuser user name to use when disabling triggers. This is relevant only if &lt;code&gt;--disable-triggers&lt;/code&gt; is used. (Usually, it's better to leave this out, and instead start the resulting script as superuser.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0a53c7974b664105ca5bb7d1f6f0d025135a5db" translate="yes" xml:space="preserve">
          <source>Specifying a savepoint name that has not been established is an error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8496f8219d6a05c0f6e67ab945bd25553a6cda0c" translate="yes" xml:space="preserve">
          <source>Specifying a savepoint name that was not previously defined is an error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7b583239edeab0e82a701a61e318795f92d51e7" translate="yes" xml:space="preserve">
          <source>Specifying an empty string will also set the password to null, but that was not the case before PostgreSQL version 10. In earlier versions, an empty string could be used, or not, depending on the authentication method and the exact version, and libpq would refuse to use it in any case. To avoid the ambiguity, specifying an empty string should be avoided.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="502446c7f283be604cd89d269395d5b824c09988" translate="yes" xml:space="preserve">
          <source>Specifying an interval of &lt;code&gt;0&lt;/code&gt; disables issuing &lt;code&gt;fsync()&lt;/code&gt; calls altogether, while still reporting progress to the server. In this case, data could be lost in the event of a crash.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="072eeb2988a12e4edda0f5a01b575fcf14b7ad05" translate="yes" xml:space="preserve">
          <source>Specifying that another table's column &lt;code&gt;REFERENCES cities(name)&lt;/code&gt; would allow the other table to contain city names, but not capital names. There is no good workaround for this case.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e83a7b4429453b711ef8109e95073284035eeaf8" translate="yes" xml:space="preserve">
          <source>Split &lt;em&gt;&lt;code&gt;qualified_identifier&lt;/code&gt;&lt;/em&gt; into an array of identifiers, removing any quoting of individual identifiers. By default, extra characters after the last identifier are considered an error; but if the second parameter is &lt;code&gt;false&lt;/code&gt;, then such extra characters are ignored. (This behavior is useful for parsing names for objects like functions.) Note that this function does not truncate over-length identifiers. If you want truncation you can cast the result to &lt;code&gt;name[]&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="452c0eaa4396b1682c70507bbb500c41cee09798" translate="yes" xml:space="preserve">
          <source>Split &lt;em&gt;&lt;code&gt;string&lt;/code&gt;&lt;/em&gt; on &lt;em&gt;&lt;code&gt;delimiter&lt;/code&gt;&lt;/em&gt; and return the given field (counting from one)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9fba8c7efc2fc29805f0ed0262e77872ab249cfd" translate="yes" xml:space="preserve">
          <source>Split &lt;em&gt;&lt;code&gt;string&lt;/code&gt;&lt;/em&gt; using a POSIX regular expression as the delimiter. See &lt;a href=&quot;functions-matching#FUNCTIONS-POSIX-REGEXP&quot;&gt;Section 9.7.3&lt;/a&gt; for more information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a41ad5dd4e3055c054e1b8131090a49096de1b65" translate="yes" xml:space="preserve">
          <source>Square brackets (&lt;code&gt;[]&lt;/code&gt;) are used for array access.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b2338cc740ef3f8a991d0cf2d9f70c9cdd0b9eb" translate="yes" xml:space="preserve">
          <source>Standard Generalized Markup Language</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eea619235b15d5c21293d7a81c24547355124b6b" translate="yes" xml:space="preserve">
          <source>Standard Unix Tools</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de2b6e929cd7367d09ce95f38c08be723ba36508" translate="yes" xml:space="preserve">
          <source>Standard Usage:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ad1496103ebe737cb4cfc02baea1e5fc4b6bebd" translate="yes" xml:space="preserve">
          <source>Standby mode is exited and the server switches to normal operation when &lt;code&gt;pg_ctl promote&lt;/code&gt; is run or a trigger file is found (&lt;code&gt;promote_trigger_file&lt;/code&gt;). Before failover, any WAL immediately available in the archive or in &lt;code&gt;pg_wal&lt;/code&gt; will be restored, but no attempt is made to connect to the master.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e863244c82b2b389bea57f2367f9cb4ec762ff3" translate="yes" xml:space="preserve">
          <source>Star symbols can also be quantified to restrict how many labels they can match:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f2216d23a9c349059c6dc07393909d7f3482743" translate="yes" xml:space="preserve">
          <source>Start or restart an index scan, possibly with new scan keys. (To restart using previously-passed keys, NULL is passed for &lt;code&gt;keys&lt;/code&gt; and/or &lt;code&gt;orderbys&lt;/code&gt;.) Note that it is not allowed for the number of keys or order-by operators to be larger than what was passed to &lt;code&gt;ambeginscan&lt;/code&gt;. In practice the restart feature is used when a new outer tuple is selected by a nested-loop join and so a new key comparison value is needed, but the scan key structure remains the same.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b412902d910099d2ab6874b5f6691914e603e66" translate="yes" xml:space="preserve">
          <source>Start reading at the specified log segment file. This implicitly determines the path in which files will be searched for, and the timeline to use.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b84a6f7e80fffa2ae6a8127e864e6100a90ad408" translate="yes" xml:space="preserve">
          <source>Start the database server, again using the special database user account:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36f704b789e75035581f19c0aa3c1d618bb75944" translate="yes" xml:space="preserve">
          <source>Start the server. The server will go into recovery mode and proceed to read through the archived WAL files it needs. Should the recovery be terminated because of an external error, the server can simply be restarted and it will continue recovery. Upon completion of the recovery process, the server will remove &lt;code&gt;recovery.signal&lt;/code&gt; (to prevent accidentally re-entering recovery mode later) and then commence normal database operations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe398d868821034ad151a10a0aa3ab7f0418c47d" translate="yes" xml:space="preserve">
          <source>Start type of the system service. &lt;code&gt;start-type&lt;/code&gt; can be &lt;code&gt;auto&lt;/code&gt;, or &lt;code&gt;demand&lt;/code&gt;, or the first letter of one of these two. If this option is omitted, &lt;code&gt;auto&lt;/code&gt; is the default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8ad6e42a920b41dab86607fc2b641bad383a626" translate="yes" xml:space="preserve">
          <source>Start value of the sequence</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3d5f43ee9321076081248871d53d2f4d5c235d8" translate="yes" xml:space="preserve">
          <source>Starting the Database Server</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="194f6075b816df9810c74136441d89fc4b3d92ae" translate="yes" xml:space="preserve">
          <source>Starting the Database Server: Client Connection Problems</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27ca8ea5e2e544cb9af4440f44c1cfd080713eac" translate="yes" xml:space="preserve">
          <source>Starting the Database Server: Server Start-up Failures</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b638ffb3274d9bb64101256b64c8469c46ae5986" translate="yes" xml:space="preserve">
          <source>Starting the Server</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38d6823e381e2b97ec437a489b16c7cd4f8aaf46" translate="yes" xml:space="preserve">
          <source>Starting with PostgreSQL version 9.0, you can use streaming replication (see &lt;a href=&quot;warm-standby#STREAMING-REPLICATION&quot;&gt;Section 26.2.5&lt;/a&gt;) to achieve the same benefits with less effort.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08be92f5bd8036d0ab648816f990adfcf0029379" translate="yes" xml:space="preserve">
          <source>State code: &lt;code&gt;i&lt;/code&gt; = initialize, &lt;code&gt;d&lt;/code&gt; = data is being copied, &lt;code&gt;s&lt;/code&gt; = synchronized, &lt;code&gt;r&lt;/code&gt; = ready (normal replication)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57052c5f4957ab3d7367c2a5fa0946985e3f70bb" translate="yes" xml:space="preserve">
          <source>Statement-Based Replication Middleware</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbd3743fe5a3ab54a079de4fa5d18e2e88a8088e" translate="yes" xml:space="preserve">
          <source>Statement-level</source>
          <target state="translated">Statement-level</target>
        </trans-unit>
        <trans-unit id="40b6852707bbd31d9501afffde5f792ccd2c9d03" translate="yes" xml:space="preserve">
          <source>Statement-level triggers on a view are fired only if the action on the view is handled by a row-level &lt;code&gt;INSTEAD OF&lt;/code&gt; trigger. If the action is handled by an &lt;code&gt;INSTEAD&lt;/code&gt; rule, then whatever statements are emitted by the rule are executed in place of the original statement naming the view, so that the triggers that will be fired are those on tables named in the replacement statements. Similarly, if the view is automatically updatable, then the action is handled by automatically rewriting the statement into an action on the view's base table, so that the base table's statement-level triggers are the ones that are fired.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c010f9e77089d9833294cc3aae17d400c2624d2a" translate="yes" xml:space="preserve">
          <source>Statements are executed more quickly in a transaction block, because transaction start/commit requires significant CPU and disk activity. Execution of multiple statements inside a transaction is also useful to ensure consistency when making several related changes: other sessions will be unable to see the intermediate states wherein not all the related updates have been done.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="acf9521494dc54c620b135e07871cb53c42cd3c9" translate="yes" xml:space="preserve">
          <source>Statements that contain simple syntax errors are not logged even by the &lt;code&gt;log_statement&lt;/code&gt; = &lt;code&gt;all&lt;/code&gt; setting, because the log message is emitted only after basic parsing has been done to determine the statement type. In the case of extended query protocol, this setting likewise does not log statements that fail before the Execute phase (i.e., during parse analysis or planning). Set &lt;code&gt;log_min_error_statement&lt;/code&gt; to &lt;code&gt;ERROR&lt;/code&gt; (or lower) to log such statements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db5c70d83baa4567c859336546ef85d7d8623622" translate="yes" xml:space="preserve">
          <source>Statistical correlation between physical row ordering and logical ordering of the column values. This ranges from -1 to +1. When the value is near -1 or +1, an index scan on the column will be estimated to be cheaper than when it is near zero, due to reduction of random access to the disk. (This column is null if the column data type does not have a &lt;code&gt;&amp;lt;&lt;/code&gt; operator.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a9fc749b7c132ac6bf1a07d9e96218dfabb80eb" translate="yes" xml:space="preserve">
          <source>Statistics Collector</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74d86a1f6a07f8a77fd04b79cb2e622d4d5fd952" translate="yes" xml:space="preserve">
          <source>Statistics Information Functions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2cf3148c43e96fbd5a61538babff0c2d5760c79" translate="yes" xml:space="preserve">
          <source>Statistics Used by the Planner</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99a201b3fed6df6ed5ed37511712f338e1d9904c" translate="yes" xml:space="preserve">
          <source>Statistics objects are created using the &lt;a href=&quot;sql-createstatistics&quot;&gt;CREATE STATISTICS&lt;/a&gt; command. Creation of such an object merely creates a catalog entry expressing interest in the statistics. Actual data collection is performed by &lt;code&gt;ANALYZE&lt;/code&gt; (either a manual command, or background auto-analyze). The collected values can be examined in the &lt;a href=&quot;catalog-pg-statistic-ext-data&quot;&gt;&lt;code&gt;pg_statistic_ext_data&lt;/code&gt;&lt;/a&gt; catalog.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e30827cb8bbecbd6e93cd3c3c6950e2f9d87beb9" translate="yes" xml:space="preserve">
          <source>Still, with appropriate use of expression indexes, the above query can use an index. If querying for particular items within the &lt;code&gt;&quot;tags&quot;&lt;/code&gt; key is common, defining an index like this may be worthwhile:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb2285467ee95a339f6cd83a0568d854f57fff09" translate="yes" xml:space="preserve">
          <source>Stop after reading the specified log segment file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a8bd9224939c0468435f95c435e66ecf2de52e3" translate="yes" xml:space="preserve">
          <source>Stop reading at the specified WAL location, instead of reading to the end of the log stream.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d0c4f05ef6713bdd56aeb38584e87c3d2dda84e" translate="yes" xml:space="preserve">
          <source>Stop the server, if it's running.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3eade2d2bb2293afd3eb3db96fb6157c176e52dc" translate="yes" xml:space="preserve">
          <source>Stop words are words that are very common, appear in almost every document, and have no discrimination value. Therefore, they can be ignored in the context of full text searching. For example, every English text contains words like &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;the&lt;/code&gt;, so it is useless to store them in an index. However, stop words do affect the positions in &lt;code&gt;tsvector&lt;/code&gt;, which in turn affect ranking:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48dc2b75f0b88a18a8353ee85f551384e635e76b" translate="yes" xml:space="preserve">
          <source>Stopping the Server</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aae769a0618c2688570a2e6949d9055f0b9c630d" translate="yes" xml:space="preserve">
          <source>Storage Parameters</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff8fec38d95756f7b58cefb020df790b99ee6421" translate="yes" xml:space="preserve">
          <source>Storage Size</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7b4842540682ea4bf73edee465143969b41b03d" translate="yes" xml:space="preserve">
          <source>Storage encryption can be performed at the file system level or the block level. Linux file system encryption options include eCryptfs and EncFS, while FreeBSD uses PEFS. Block level or full disk encryption options include dm-crypt + LUKS on Linux and GEOM modules geli and gbde on FreeBSD. Many other operating systems support this functionality, including Windows.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72beac58316ea4ff26f0e4dc445d95c8cf736d21" translate="yes" xml:space="preserve">
          <source>Stores the file into a PostgreSQL large object. Optionally, it associates the given comment with the object. Example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98849831501a6ebc0da0afac13e611052814f47a" translate="yes" xml:space="preserve">
          <source>Stream the write-ahead log while the backup is created. This will open a second connection to the server and start streaming the write-ahead log in parallel while running the backup. Therefore, it will use up two connections configured by the &lt;a href=&quot;runtime-config-replication#GUC-MAX-WAL-SENDERS&quot;&gt;max_wal_senders&lt;/a&gt; parameter. As long as the client can keep up with write-ahead log received, using this mode requires no extra write-ahead logs to be saved on the master.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="097088ad5c088ba6bc904a64eea0095316a57177" translate="yes" xml:space="preserve">
          <source>Streaming replication allows a standby server to stay more up-to-date than is possible with file-based log shipping. The standby connects to the primary, which streams WAL records to the standby as they're generated, without waiting for the WAL file to be filled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1a6c03c88f7251c1fbee700421246ba6f838a61" translate="yes" xml:space="preserve">
          <source>Streaming replication and log-shipping standby servers can remain running until a later step.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="510bec85b3982a82cd98f9026b6d44348c927578" translate="yes" xml:space="preserve">
          <source>Streaming replication is asynchronous by default (see &lt;a href=&quot;warm-standby#SYNCHRONOUS-REPLICATION&quot;&gt;Section 26.2.8&lt;/a&gt;), in which case there is a small delay between committing a transaction in the primary and the changes becoming visible in the standby. This delay is however much smaller than with file-based log shipping, typically under one second assuming the standby is powerful enough to keep up with the load. With streaming replication, &lt;code&gt;archive_timeout&lt;/code&gt; is not required to reduce the data loss window.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59734c88a6da60d417cc049feadd59d856020ec2" translate="yes" xml:space="preserve">
          <source>Strictly speaking, this process is iteration not recursion, but &lt;code&gt;RECURSIVE&lt;/code&gt; is the terminology chosen by the SQL standards committee.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0449bdd319938ccde49136f6f586857687fc872f" translate="yes" xml:space="preserve">
          <source>String Functions and Operators</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4cf243380995c59cd0d14287fbbada913c64d63" translate="yes" xml:space="preserve">
          <source>String concatenation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32f77e7a8d21e9702c07e36bf15eaad35d0a97ff" translate="yes" xml:space="preserve">
          <source>String concatenation with one non-string input</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b45b16e6a34eec5581884d72320e0a2987555685" translate="yes" xml:space="preserve">
          <source>String sort order</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ce9849d1cc5dda7156d4d9867d5362993f6a11c" translate="yes" xml:space="preserve">
          <source>String to append to the user name when forming the DN to bind as, when doing simple bind authentication.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c6eef04ae18bf39d0276b928e30ca70903fe5c2" translate="yes" xml:space="preserve">
          <source>String to prepend to the user name when forming the DN to bind as, when doing simple bind authentication.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="332d895a8178354e855f4b4b01b8b37ea06ec60c" translate="yes" xml:space="preserve">
          <source>String to separate keys with in branch output (optional)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71f074fee588f6374a9072f9342ac58ca9eb5442" translate="yes" xml:space="preserve">
          <source>String types</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50e84681568a65ae1f9159b6074361760a41fe5f" translate="yes" xml:space="preserve">
          <source>String: ascii</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b44c134e7e055c2b1a9c9e82da0983e2f92762b" translate="yes" xml:space="preserve">
          <source>String: bit_length</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ddc8a0f4aa2bebf9f87fa9e3e13a4f7c426d613d" translate="yes" xml:space="preserve">
          <source>String: btrim</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34f0beb228d201bcbfd514224e3741ccffa94bab" translate="yes" xml:space="preserve">
          <source>String: char_length</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2e71bdf0d12af18f2ad32f8352df2b6527fdfdf" translate="yes" xml:space="preserve">
          <source>String: character_length</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="071c1bd918b7aaf0050b846384abfcf76dc51e8d" translate="yes" xml:space="preserve">
          <source>String: chr</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25cc2d86bc862b5a7d2d3b605fd1f5576e99761e" translate="yes" xml:space="preserve">
          <source>String: concat</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d550960ed8279e8d9f70ad320821d381afdce25" translate="yes" xml:space="preserve">
          <source>String: concat_ws</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50a5596aa4b63d6d635e458633f05b0fc068a82d" translate="yes" xml:space="preserve">
          <source>String: convert</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84bb90d91d40a617b967c6d13b48451aeeab81c2" translate="yes" xml:space="preserve">
          <source>String: convert_from</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="683b9d59b4171ae3bb9d62a9900a7a3672ac29f0" translate="yes" xml:space="preserve">
          <source>String: convert_to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d247ef21a962c4e7cec93666726d82bfeff47bf" translate="yes" xml:space="preserve">
          <source>String: decode</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68c98a013d33f5af63b106ead9e611cf3d8f45be" translate="yes" xml:space="preserve">
          <source>String: encode</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27228e33dff3b13ecae209427ad6962ef3966fa8" translate="yes" xml:space="preserve">
          <source>String: format</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6e4f69c1c9b82022165be0cb0f2d95412856d58" translate="yes" xml:space="preserve">
          <source>String: initcap</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1732ca58ada5251a6d93b45fbdb71271ad3a4e75" translate="yes" xml:space="preserve">
          <source>String: left</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="201cee3f29b0d41dfb56d0f48c4d8365cc2fb59f" translate="yes" xml:space="preserve">
          <source>String: length</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b3e55babd8460f758255794a292444719791dea" translate="yes" xml:space="preserve">
          <source>String: lower</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d39106cd1f64291ff1da6a77498eaa8c2e3293ae" translate="yes" xml:space="preserve">
          <source>String: lpad</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04e1e6b1d4c6b8da9e39f7384cfd51dc79cac796" translate="yes" xml:space="preserve">
          <source>String: ltrim</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c54812b4ae3b4ceea772deefde4e95a1fce94cb" translate="yes" xml:space="preserve">
          <source>String: md5</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac043f807b05335f82e237d3941504bdb0741297" translate="yes" xml:space="preserve">
          <source>String: octet_length</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b5f0ff4acad59980841e75c58f66ea894ec779a" translate="yes" xml:space="preserve">
          <source>String: overlay</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12a140fcd54fe34e62668e7158016378e14b4a4a" translate="yes" xml:space="preserve">
          <source>String: parse_ident</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0e5427dfe2e2623ca27f4bcbd5ae38d3aa3211a" translate="yes" xml:space="preserve">
          <source>String: pg_client_encoding</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bdc622884e2cfa70cfee1b14f125c58dc52f642" translate="yes" xml:space="preserve">
          <source>String: position</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09ee7bc1d6b77853f8938e9db2c194923150013c" translate="yes" xml:space="preserve">
          <source>String: quote_ident</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37301b96991b0536647c684f63e98566d59ad56b" translate="yes" xml:space="preserve">
          <source>String: quote_literal</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6884d950c0e89c0943c0a17a2a147a30b74cb07" translate="yes" xml:space="preserve">
          <source>String: quote_nullable</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3525ebfc19b886689211c7bb446feeda0760a11" translate="yes" xml:space="preserve">
          <source>String: regexp_match</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71ccb92cef718b1dde93f4781b7c87d77853748c" translate="yes" xml:space="preserve">
          <source>String: regexp_matches</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e16516f1760883bd23e95ba181dbbdfff87c488d" translate="yes" xml:space="preserve">
          <source>String: regexp_replace</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ecf083034d626d730499dd69aeeb56fe53843eec" translate="yes" xml:space="preserve">
          <source>String: regexp_split_to_array</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a366e7d33d49c6dc497208dd2d0a0e04aad83496" translate="yes" xml:space="preserve">
          <source>String: regexp_split_to_table</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4079a4633e969547899b47f9fdbbe547b69224ab" translate="yes" xml:space="preserve">
          <source>String: repeat</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b99a9148f52bdbad8507100aced79b9d00b89614" translate="yes" xml:space="preserve">
          <source>String: replace</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70f4c4f222d7d4078f4b015519b5b5bf873ef628" translate="yes" xml:space="preserve">
          <source>String: reverse</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dcfb8358a846bb0173455db045f2873350896817" translate="yes" xml:space="preserve">
          <source>String: right</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b1a53af3e9b298ddb5cfaee37e5523139422856" translate="yes" xml:space="preserve">
          <source>String: rpad</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0865b985039b41de33b713d16499610a793160a" translate="yes" xml:space="preserve">
          <source>String: rtrim</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="605faffa530c4582cf2014ad6cab92435bf13002" translate="yes" xml:space="preserve">
          <source>String: split_part</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d059542544155ed4e92228221e477c0a54b77476" translate="yes" xml:space="preserve">
          <source>String: starts_with</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48c26c504046b590b6dfc4ca4c86d27ebd68d44f" translate="yes" xml:space="preserve">
          <source>String: strpos</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f30fed6f2ad4b5936528a3a7206e6492a735162" translate="yes" xml:space="preserve">
          <source>String: substr</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39c1145cb68cb9da97aa5828a0d839f607409e69" translate="yes" xml:space="preserve">
          <source>String: substring</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17551030013441f835f88d00a012ac6d9f9d5c6c" translate="yes" xml:space="preserve">
          <source>String: to_ascii</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="965bac44ff9db247a629dafcf978fa4f86429971" translate="yes" xml:space="preserve">
          <source>String: to_hex</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="678ac09e759d449e376773e208cf0d772fff02d2" translate="yes" xml:space="preserve">
          <source>String: translate</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc0ea0a16f33c79417e6740c743891066ecd2125" translate="yes" xml:space="preserve">
          <source>String: trim</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6fe2c39e5216163633d7a13c08fe59c40823e45" translate="yes" xml:space="preserve">
          <source>String: upper</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f29d0b44ae3aefe3d6a4f9865d7524375588a7a" translate="yes" xml:space="preserve">
          <source>String: ||</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c952e04c823117fee9d2e85f24258d74196894e" translate="yes" xml:space="preserve">
          <source>Structural inconsistencies between indexes and the heap relations that are indexed (when &lt;em&gt;&lt;code&gt;heapallindexed&lt;/code&gt;&lt;/em&gt; verification is performed).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39b44f9e9122e1dc4480c2f21d87778437e7ad97" translate="yes" xml:space="preserve">
          <source>Structural inconsistencies caused by incorrect operator class implementations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fc1b89c9f574004732a0426adb44900a9e367c4" translate="yes" xml:space="preserve">
          <source>Structured Query Language</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8cda1d2285a519c283a395b803fa1e6588057b92" translate="yes" xml:space="preserve">
          <source>Stunnel or SSH can also be used to encrypt transmissions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9630656149e803852b35719d8b68437043db824d" translate="yes" xml:space="preserve">
          <source>Style Specification</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e18032b285246f370b0a08592cb139e9556efdce" translate="yes" xml:space="preserve">
          <source>Sub-partitioning can be useful to further divide partitions that are expected to become larger than other partitions, although excessive sub-partitioning can easily lead to large numbers of partitions and can cause the same problems mentioned in the preceding paragraph.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7bf35af23ac99da91f912cb4a0354686b23fa33" translate="yes" xml:space="preserve">
          <source>Subdirectory containing LISTEN/NOTIFY status data</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc7b8a01e46392163777df616f989929c911a5d0" translate="yes" xml:space="preserve">
          <source>Subdirectory containing WAL (Write Ahead Log) files</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d94445bf01eed4c131a288398d30ba337f48ce02" translate="yes" xml:space="preserve">
          <source>Subdirectory containing cluster-wide tables, such as &lt;code&gt;pg_database&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f4120d23c9394dd1a9233dffdee25ecbef63458" translate="yes" xml:space="preserve">
          <source>Subdirectory containing exported snapshots</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8bdfd44b37f080168bf3c2a5ca216902fe87759b" translate="yes" xml:space="preserve">
          <source>Subdirectory containing files used by the dynamic shared memory subsystem</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="615426fd5dcf651fe31db934a317b3b733da2830" translate="yes" xml:space="preserve">
          <source>Subdirectory containing information about committed serializable transactions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0095b6078ce59f34b1f3a6e759fee029b884ff4" translate="yes" xml:space="preserve">
          <source>Subdirectory containing multitransaction status data (used for shared row locks)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41b7ca7920179bef8a936cd99c4381823fa4d70a" translate="yes" xml:space="preserve">
          <source>Subdirectory containing per-database subdirectories</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07685c92aee0d33ccc687f0b3d628e6648475d00" translate="yes" xml:space="preserve">
          <source>Subdirectory containing permanent files for the statistics subsystem</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f617420f37be4b29fbeee049c893d0753374f30e" translate="yes" xml:space="preserve">
          <source>Subdirectory containing replication slot data</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8f078f4d0a0ac23a7514126c75d3c9414a3bbb1" translate="yes" xml:space="preserve">
          <source>Subdirectory containing state files for prepared transactions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3148ceec771e620567efc7945f22e12038e27aa2" translate="yes" xml:space="preserve">
          <source>Subdirectory containing status data for logical decoding</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ab90255f23bae0ba807576875e7dc4d82bb9429" translate="yes" xml:space="preserve">
          <source>Subdirectory containing subtransaction status data</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d4dfa7c8bc498c10fef2eb0f92eb7aad8d619f8" translate="yes" xml:space="preserve">
          <source>Subdirectory containing symbolic links to tablespaces</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0827a9bd56a24bb726396eefa93e0826891b832" translate="yes" xml:space="preserve">
          <source>Subdirectory containing temporary files for the statistics subsystem</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87aea01fb35180706b21f3a679b7c11688dfd769" translate="yes" xml:space="preserve">
          <source>Subdirectory containing transaction commit status data</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c78f4628d828278bdda9c2ef98b257aef112c34" translate="yes" xml:space="preserve">
          <source>Subdirectory containing transaction commit timestamp data</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68c8981332b80b6d3a0c198d919193dc81d563d9" translate="yes" xml:space="preserve">
          <source>Subqueries appearing in &lt;code&gt;FROM&lt;/code&gt; can be preceded by the key word &lt;code&gt;LATERAL&lt;/code&gt;. This allows them to reference columns provided by preceding &lt;code&gt;FROM&lt;/code&gt; items. (Without &lt;code&gt;LATERAL&lt;/code&gt;, each subquery is evaluated independently and so cannot cross-reference any other &lt;code&gt;FROM&lt;/code&gt; item.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7db234704226a9776beb0bf3cb66e720657a4e43" translate="yes" xml:space="preserve">
          <source>Subqueries specifying a derived table must be enclosed in parentheses and &lt;em&gt;must&lt;/em&gt; be assigned a table alias name (as in &lt;a href=&quot;queries-table-expressions#QUERIES-TABLE-ALIASES&quot;&gt;Section 7.2.1.2&lt;/a&gt;). For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79095639cf2544d3073712b3f47816fbf8b20418" translate="yes" xml:space="preserve">
          <source>Subquery Expressions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="865463737c8f48f3aa72b7ead5718dd92da8c241" translate="yes" xml:space="preserve">
          <source>Subquery Expressions: ALL</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15cf22f4ca2cbad1f0895430a1a93780f8359cb3" translate="yes" xml:space="preserve">
          <source>Subquery Expressions: ANY/SOME</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c017020b157f38ba5f0e4c7163f775e551ef827a" translate="yes" xml:space="preserve">
          <source>Subquery Expressions: EXISTS</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5d20d3534f81573891e1bb1440033e16b160a70" translate="yes" xml:space="preserve">
          <source>Subquery Expressions: IN</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc3da9daaefdef4d7d55570f631f82eddc3c8167" translate="yes" xml:space="preserve">
          <source>Subquery Expressions: NOT IN</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58383774b869790a897e575b16df98f07aba9c48" translate="yes" xml:space="preserve">
          <source>Subscripted assignment allows creation of arrays that do not use one-based subscripts. For example one might assign to &lt;code&gt;myarray[-2:7]&lt;/code&gt; to create an array with subscript values from -2 to 7.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fde48f31aff21f9652066ed6732f7e7dbae712e" translate="yes" xml:space="preserve">
          <source>Subscription</source>
          <target state="translated">Subscription</target>
        </trans-unit>
        <trans-unit id="6bd8bbcdd16d7fa73a1576bac730dc40d904ca8c" translate="yes" xml:space="preserve">
          <source>Subscription: Replication Slot Management</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da9aa9c218887f9328a3617679a0129e7cbb5be2" translate="yes" xml:space="preserve">
          <source>Subscriptions are dumped by &lt;code&gt;pg_dump&lt;/code&gt; if the current user is a superuser. Otherwise a warning is written and subscriptions are skipped, because non-superusers cannot read all subscription information from the &lt;code&gt;pg_subscription&lt;/code&gt; catalog.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e46e65b130ddf6c45bb58587fb22e20b60add00" translate="yes" xml:space="preserve">
          <source>Subtract arguments, producing a &amp;ldquo;symbolic&amp;rdquo; result that uses years and months, rather than just days</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c58db93176082206cc39b7b8d58fe9dcbb23b005" translate="yes" xml:space="preserve">
          <source>Subtract from &lt;code&gt;current_date&lt;/code&gt; (at midnight)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5b58ce4dec6fe8562096a10da3109ac06c55815" translate="yes" xml:space="preserve">
          <source>Subtraction</source>
          <target state="translated">Subtraction</target>
        </trans-unit>
        <trans-unit id="261d18c0b4b2750e4f05fa67d0ffcf4b1d96ec6c" translate="yes" xml:space="preserve">
          <source>Subtraction of dates and timestamps can also be complex. One conceptually simple way to perform subtraction is to convert each value to a number of seconds using &lt;code&gt;EXTRACT(EPOCH FROM ...)&lt;/code&gt;, then subtract the results; this produces the number of &lt;em&gt;seconds&lt;/em&gt; between the two values. This will adjust for the number of days in each month, timezone changes, and daylight saving time adjustments. Subtraction of date or timestamp values with the &amp;ldquo;&lt;code&gt;-&lt;/code&gt;&amp;rdquo; operator returns the number of days (24-hours) and hours/minutes/seconds between the values, making the same adjustments. The &lt;code&gt;age&lt;/code&gt; function returns years, months, days, and hours/minutes/seconds, performing field-by-field subtraction and then adjusting for negative field values. The following queries illustrate the differences in these approaches. The sample results were produced with &lt;code&gt;timezone = 'US/Eastern'&lt;/code&gt;; there is a daylight saving time change between the two dates used:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1cd3bf3468e45ca6cf9ed3820e774557f6bab5f2" translate="yes" xml:space="preserve">
          <source>Such a lexeme will match any word in a &lt;code&gt;tsvector&lt;/code&gt; that begins with the given string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1043eba8f9ff7610fb3b54c0e6654ab5f20a1891" translate="yes" xml:space="preserve">
          <source>Summing all the MCFs also tells us that the total fraction of the population represented by MCVs is 0.03033333, and therefore the fraction represented by the histogram is 0.96966667 (again, there are no nulls, else we'd have to exclude them here). We can see that the value &lt;code&gt;IAAAAA&lt;/code&gt; falls nearly at the end of the third histogram bucket. Using some rather cheesy assumptions about the frequency of different characters, the planner arrives at the estimate 0.298387 for the portion of the histogram population that is less than &lt;code&gt;IAAAAA&lt;/code&gt;. We then combine the estimates for the MCV and non-MCV populations:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48c98cab7866e606328c99289ed24e339393b5ab" translate="yes" xml:space="preserve">
          <source>Sun</source>
          <target state="translated">Sun</target>
        </trans-unit>
        <trans-unit id="bc5dd045b8623ddfc4bd0bce98ca5fda42accf88" translate="yes" xml:space="preserve">
          <source>Sunday</source>
          <target state="translated">Sunday</target>
        </trans-unit>
        <trans-unit id="3ad9b8785bd7100cb2f2075a0f7f1d0ef3e93c82" translate="yes" xml:space="preserve">
          <source>Superusers and roles with the &lt;code&gt;BYPASSRLS&lt;/code&gt; attribute always bypass the row security system when accessing a table. Table owners normally bypass row security as well, though a table owner can choose to be subject to row security with &lt;a href=&quot;sql-altertable&quot;&gt;ALTER TABLE ... FORCE ROW LEVEL SECURITY&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6deb2217407c0e1d3336da76af2dc83750a3a56b" translate="yes" xml:space="preserve">
          <source>Superusers can always do this; ordinary roles can only do it if they are both the current owner of the object (or a member of the owning role) and a member of the new owning role.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0411114a21b2adee414a179957a9d8346298b4ae" translate="yes" xml:space="preserve">
          <source>Superusers can change anyone's session defaults. Roles having &lt;code&gt;CREATEROLE&lt;/code&gt; privilege can change defaults for non-superuser roles. Ordinary roles can only set defaults for themselves. Certain configuration variables cannot be set this way, or can only be set if a superuser issues the command. Only superusers can change a setting for all roles in all databases.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="907d5da367c5a63245a4ae868a4e7fce2c1b083e" translate="yes" xml:space="preserve">
          <source>Support Function 1</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c09a79dec1db562eebf88cf47ed5a50fffedd9e4" translate="yes" xml:space="preserve">
          <source>Support Function 11</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e289451a2ca3c0a7d252b9c2f70b294939ca7fdf" translate="yes" xml:space="preserve">
          <source>Support Function 12</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e499bf4c9c754bc1732d472a2aa6eff27a07bfb" translate="yes" xml:space="preserve">
          <source>Support Function 13</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6dd1a8a6ee876d24035ef10ce2bfecdddd7f7a41" translate="yes" xml:space="preserve">
          <source>Support Function 14</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b3de44d2e9117e957e8ac0601aa782ff399a546" translate="yes" xml:space="preserve">
          <source>Support Function 2</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffa11ff7190ca0ad79e4d11f9554144f18dc96d8" translate="yes" xml:space="preserve">
          <source>Support Function 3</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0502f4f0b227a6c4f29087521fc1969d1920005d" translate="yes" xml:space="preserve">
          <source>Support Function 4</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3dcaacf100fc2260b3c94d206bc162395874e56e" translate="yes" xml:space="preserve">
          <source>Support for the Serializable transaction isolation level has not yet been added to Hot Standby replication targets (described in &lt;a href=&quot;hot-standby&quot;&gt;Section 26.5&lt;/a&gt;). The strictest isolation level currently supported in hot standby mode is Repeatable Read. While performing all permanent database writes within Serializable transactions on the master will ensure that all standbys will eventually reach a consistent state, a Repeatable Read transaction run on the standby can sometimes see a transient state that is inconsistent with any serial execution of the transactions on the master.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a34c45df15d10c301e2f85c149cf52752fba00f" translate="yes" xml:space="preserve">
          <source>Support function number</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c71068037e94d8332b7ce5c2f143ba8f4ab078f9" translate="yes" xml:space="preserve">
          <source>Support function numbers 1-10 are reserved for the BRIN internal functions, so the SQL level functions start with number 11. Support function number 11 is the main function required to build the index. It should accept two arguments with the same data type as the operator class, and return the union of them. The inclusion operator class can store union values with different data types if it is defined with the &lt;code&gt;STORAGE&lt;/code&gt; parameter. The return value of the union function should match the &lt;code&gt;STORAGE&lt;/code&gt; data type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d45258be3e9e702ac9f50d65ef6c8b5aed0bc52f" translate="yes" xml:space="preserve">
          <source>Support function numbers 12 and 14 are provided to support irregularities of built-in data types. Function number 12 is used to support network addresses from different families which are not mergeable. Function number 14 is used to support empty ranges. Function number 13 is an optional but recommended one, which allows the new value to be checked before it is passed to the union function. As the BRIN framework can shortcut some operations when the union is not changed, using this function can improve index performance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2911475300ce27b8f1eb080e67fbdccac2de1ab" translate="yes" xml:space="preserve">
          <source>Suppose that serializable transaction A computes:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d3ef7f8d989a7e48b2c7f32f9ea47b48c699018" translate="yes" xml:space="preserve">
          <source>Suppose that we have a table describing test outcomes. We wish to ensure that there is only one &amp;ldquo;successful&amp;rdquo; entry for a given subject and target combination, but there might be any number of &amp;ldquo;unsuccessful&amp;rdquo; entries. Here is one way to do it:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="743788628689e4987318bbca2c91f416661423f7" translate="yes" xml:space="preserve">
          <source>Suppose we are constructing a database for a large ice cream company. The company measures peak temperatures every day as well as ice cream sales in each region. Conceptually, we want a table like:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c17bab107c29b94c45b210bc2f14582c7b152c8" translate="yes" xml:space="preserve">
          <source>Suppose we have a table similar to this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16819758c26018bf3c1d17e9c0b3ce89d560555f" translate="yes" xml:space="preserve">
          <source>Suppose you are storing web server access logs in a database. Most accesses originate from the IP address range of your organization but some are from elsewhere (say, employees on dial-up connections). If your searches by IP are primarily for outside accesses, you probably do not need to index the IP range that corresponds to your organization's subnet.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24d33aa7e53f5a8d8f6233a97b9c7afcbc1aa556" translate="yes" xml:space="preserve">
          <source>Suppose you would like to retrieve all heart rate values higher than 130. You can achieve this using the following expression:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6445090a76897a243b8e1150cca3fa90d4b4ea2" translate="yes" xml:space="preserve">
          <source>Switch logging to quiet mode, producing only one progress message per 5 seconds. The default logging prints one message each 100000 rows, which often outputs many lines per second (especially on good hardware).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8ea092a85e78ead8510d85f0c0625a34098858d" translate="yes" xml:space="preserve">
          <source>Switches the client domain of the current session to the new domain, if allowed by the security policy. It also accepts &lt;code&gt;NULL&lt;/code&gt; input as a request to transition to the client's original domain.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e134a3fef6d0efac5eb5fe4519866d39ea80626" translate="yes" xml:space="preserve">
          <source>Switches to CSV (Comma-Separated Values) output mode. This is equivalent to &lt;code&gt;\pset format csv&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8943c0c7bb99f3a140162be87988c24e474f51aa" translate="yes" xml:space="preserve">
          <source>Switches to HTML output mode. This is equivalent to &lt;code&gt;\pset format html&lt;/code&gt; or the &lt;code&gt;\H&lt;/code&gt; command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c3f20d915a881ae7826ce8ed053822eb7ce2474" translate="yes" xml:space="preserve">
          <source>Switches to unaligned output mode. (The default output mode is &lt;code&gt;aligned&lt;/code&gt;.) This is equivalent to &lt;code&gt;\pset format unaligned&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea7fb8a955cd05cbb91ab54291b192105baf0c5c" translate="yes" xml:space="preserve">
          <source>Synchronous Multimaster Replication</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f06e00390114030665dc1af3c2f2549eb2105197" translate="yes" xml:space="preserve">
          <source>Synchronous Replication Support for Logical Decoding</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5150a9ed3cf5b7082e49cf1ed0e9473251eb5db8" translate="yes" xml:space="preserve">
          <source>Synchronous replication is affected by this setting when &lt;code&gt;synchronous_commit&lt;/code&gt; is set to &lt;code&gt;remote_apply&lt;/code&gt;; every &lt;code&gt;COMMIT&lt;/code&gt; will need to wait to be applied.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c97d5846effd0db2b8ba98590d3d030f3979ef66" translate="yes" xml:space="preserve">
          <source>Synchronous replication offers the ability to confirm that all changes made by a transaction have been transferred to one or more synchronous standby servers. This extends that standard level of durability offered by a transaction commit. This level of protection is referred to as 2-safe replication in computer science theory, and group-1-safe (group-safe and 1-safe) when &lt;code&gt;synchronous_commit&lt;/code&gt; is set to &lt;code&gt;remote_write&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66bca2f074a9298c6898a989342ad7914302532a" translate="yes" xml:space="preserve">
          <source>Synchronous replication supports one or more synchronous standby servers; transactions will wait until all the standby servers which are considered as synchronous confirm receipt of their data. The number of synchronous standbys that transactions must wait for replies from is specified in &lt;code&gt;synchronous_standby_names&lt;/code&gt;. This parameter also specifies a list of standby names and the method (&lt;code&gt;FIRST&lt;/code&gt; and &lt;code&gt;ANY&lt;/code&gt;) to choose synchronous standbys from the listed ones.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c522640864b910b21792b5bc2eb805600d4806b" translate="yes" xml:space="preserve">
          <source>Synchronous replication usually requires carefully planned and placed standby servers to ensure applications perform acceptably. Waiting doesn't utilize system resources, but transaction locks continue to be held until the transfer is confirmed. As a result, incautious use of synchronous replication will reduce performance for database applications because of increased response times and higher contention.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2478cf7ee16609d7975a8d9bd93f15e8f50d4ce2" translate="yes" xml:space="preserve">
          <source>Synchronous state of this standby server. Possible values are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36c0630a340d2960affa1c4d2360b0e2c06793fb" translate="yes" xml:space="preserve">
          <source>Synopsis</source>
          <target state="translated">Synopsis</target>
        </trans-unit>
        <trans-unit id="8640af9a3dc13761ab85b5c7ca2e486a1bff3272" translate="yes" xml:space="preserve">
          <source>Syntactically, &lt;code&gt;VALUES&lt;/code&gt; followed by expression lists is treated as equivalent to:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17c7ba7676ad1ad6dd1c4e6b997adcae910262c9" translate="yes" xml:space="preserve">
          <source>Syntax</source>
          <target state="translated">Syntax</target>
        </trans-unit>
        <trans-unit id="7c0634da4e6af4287a5127e71efae066153473f8" translate="yes" xml:space="preserve">
          <source>Syslog produces its own time stamp and process ID information, so you probably do not want to include those escapes if you are logging to syslog.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3742a8ec467fb193f2ee267e5e63d3eff097899e" translate="yes" xml:space="preserve">
          <source>System Administration: brin_desummarize_range</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8609026a801e5fb2121d1aec716dd82a16cbd2d0" translate="yes" xml:space="preserve">
          <source>System Administration: brin_summarize_new_values</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21507d85b46e69df7f2079ce7def51a1bdc6f1e4" translate="yes" xml:space="preserve">
          <source>System Administration: brin_summarize_range</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0b5919b3586799e5bbe81dd56097fbd44d21700" translate="yes" xml:space="preserve">
          <source>System Administration: current_setting</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d03ac06264d73c68d118eb864079985f90e236d" translate="yes" xml:space="preserve">
          <source>System Administration: gin_clean_pending_list</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2739cbcb48390647ec624ec982fb2288e6baf74b" translate="yes" xml:space="preserve">
          <source>System Administration: pg_advisory_lock</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bc9483742169da97eb30dcdfeac8a14ab9110fd" translate="yes" xml:space="preserve">
          <source>System Administration: pg_advisory_lock_shared</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f75d3c108623cf5378b3df50e782f8a4334ae70" translate="yes" xml:space="preserve">
          <source>System Administration: pg_advisory_unlock</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cabd7c0b5ec00e80c0561bff572d8734082b2f00" translate="yes" xml:space="preserve">
          <source>System Administration: pg_advisory_unlock_all</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc53d4aea3e0cfdd3f1083de38dc090fc5cd7afd" translate="yes" xml:space="preserve">
          <source>System Administration: pg_advisory_unlock_shared</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="322aca3ed836d89ef1b76f7d209ebf83fffd4819" translate="yes" xml:space="preserve">
          <source>System Administration: pg_advisory_xact_lock</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a28ba37e4bc36f5d13923165e168cf868882a572" translate="yes" xml:space="preserve">
          <source>System Administration: pg_advisory_xact_lock_shared</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="804ce31f5f308f107defd28906838bd25c93a0cf" translate="yes" xml:space="preserve">
          <source>System Administration: pg_backup_start_time</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4193c54c93e4febcca92e2353273e506660ca05b" translate="yes" xml:space="preserve">
          <source>System Administration: pg_cancel_backend</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1327b28b502addd6ef41a8f71b2affd51f08c0d5" translate="yes" xml:space="preserve">
          <source>System Administration: pg_collation_actual_version</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2fd71627b5e14eb04ed034b8e279c05c0560a894" translate="yes" xml:space="preserve">
          <source>System Administration: pg_column_size</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f857a2541b412446e744e27c114cd45c8ec060a6" translate="yes" xml:space="preserve">
          <source>System Administration: pg_copy_logical_replication_slot</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0de0bf071518c2d9437fc2e810f4fa5c7152c73b" translate="yes" xml:space="preserve">
          <source>System Administration: pg_copy_physical_replication_slot</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae9db85f3e5fdd8309a3acd0d3adea188faf2fc9" translate="yes" xml:space="preserve">
          <source>System Administration: pg_create_logical_replication_slot</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6e50a7392f862c302436243554d442f4f9fed28" translate="yes" xml:space="preserve">
          <source>System Administration: pg_create_physical_replication_slot</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7b608cbef53b149cf94b734d38705b91a5170e4" translate="yes" xml:space="preserve">
          <source>System Administration: pg_create_restore_point</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce7cc4fac3e26d1263f2baf1cc6d8da0b2e18819" translate="yes" xml:space="preserve">
          <source>System Administration: pg_current_wal_flush_lsn</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa96f02417fbde2e1b263e762114beacd50839c1" translate="yes" xml:space="preserve">
          <source>System Administration: pg_current_wal_insert_lsn</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b0bb86728fe6d96a7b83678c537d9274c86d30b" translate="yes" xml:space="preserve">
          <source>System Administration: pg_current_wal_lsn</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02fa9a0c1fe28f912418e655c6245c7efd236d96" translate="yes" xml:space="preserve">
          <source>System Administration: pg_database_size</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51bc4cd7ad092a71be8a5612cd956b9d490a06b3" translate="yes" xml:space="preserve">
          <source>System Administration: pg_drop_replication_slot</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9fd436a85573a7fbdb18104b12a6d9d73558bf32" translate="yes" xml:space="preserve">
          <source>System Administration: pg_export_snapshot</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="199c0e3932b71ac995be98b6f347644a3f291f10" translate="yes" xml:space="preserve">
          <source>System Administration: pg_filenode_relation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93b580ca294ae4123d3685c644a6eedbdeb040cc" translate="yes" xml:space="preserve">
          <source>System Administration: pg_import_system_collations</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7ccf31921dc4f7467eb31fcb5d9a785ca99b698" translate="yes" xml:space="preserve">
          <source>System Administration: pg_indexes_size</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="380d728cdb809faf1d0b5120affe03cc353e8dfc" translate="yes" xml:space="preserve">
          <source>System Administration: pg_is_in_backup</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1434b66fc49d725085b1e8acde6ef195fe9268f9" translate="yes" xml:space="preserve">
          <source>System Administration: pg_is_in_recovery</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fda61a223f6f6494afb65bd652ae447ef7e8967c" translate="yes" xml:space="preserve">
          <source>System Administration: pg_is_wal_replay_paused</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19f8fe870656d05706fc0706093b303ce1ac1fbb" translate="yes" xml:space="preserve">
          <source>System Administration: pg_last_wal_receive_lsn</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e322ff309458098b2fe147054e066142c1fb31b3" translate="yes" xml:space="preserve">
          <source>System Administration: pg_last_wal_replay_lsn</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22e72c878e8c3f728e8bbe8b693362570aba2d7d" translate="yes" xml:space="preserve">
          <source>System Administration: pg_last_xact_replay_timestamp</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5139e34ff0dc0163f445bf85b75afafe837e63b5" translate="yes" xml:space="preserve">
          <source>System Administration: pg_logical_emit_message</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bde83582bb2f425183beee7926f164e59ded8a9" translate="yes" xml:space="preserve">
          <source>System Administration: pg_logical_slot_get_binary_changes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0a2d9d5d4cbf89a0bb2d9af59b02cf097802e14" translate="yes" xml:space="preserve">
          <source>System Administration: pg_logical_slot_get_changes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4eb91847aad575caf8eaf8e4f6d97c23fc49e4d" translate="yes" xml:space="preserve">
          <source>System Administration: pg_logical_slot_peek_binary_changes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f287e05f9303eb0346213e47883177f4cee0c8ed" translate="yes" xml:space="preserve">
          <source>System Administration: pg_logical_slot_peek_changes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fdc6b843f2707e354cffaec09837d56e31944a79" translate="yes" xml:space="preserve">
          <source>System Administration: pg_ls_archive_statusdir</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="391ee7b334ce78a0f88d53d9b3a0a7990086d266" translate="yes" xml:space="preserve">
          <source>System Administration: pg_ls_dir</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2bc50f0aa2c7d478852bb7fc324ec2ceaa667800" translate="yes" xml:space="preserve">
          <source>System Administration: pg_ls_logdir</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de8e677b38cc3d8e1f8b71ab798e4bfded04ebf9" translate="yes" xml:space="preserve">
          <source>System Administration: pg_ls_tmpdir</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0bef0c75ad04c65e676b9c0c3f152a4b003d023" translate="yes" xml:space="preserve">
          <source>System Administration: pg_ls_waldir</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fbae1ae0e526eef1eb6afd089c168caee386dc5" translate="yes" xml:space="preserve">
          <source>System Administration: pg_partition_ancestors</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf6722bf0ad1a3eb39c0ba4287df0a8cab3c0b7b" translate="yes" xml:space="preserve">
          <source>System Administration: pg_partition_root</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10cea4e6d4e7307fdf2a6d599294867574482127" translate="yes" xml:space="preserve">
          <source>System Administration: pg_partition_tree</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5deefd066f88fc36f236d74cf8713ce6a69652f" translate="yes" xml:space="preserve">
          <source>System Administration: pg_promote</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d1c5a442a00b1209682cbf17e28a53ac9de3372" translate="yes" xml:space="preserve">
          <source>System Administration: pg_read_binary_file</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="788a94acf7063934db6918e4fecda165b0a405ef" translate="yes" xml:space="preserve">
          <source>System Administration: pg_read_file</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5fe07e851d2aa80380868917effeda72efee9139" translate="yes" xml:space="preserve">
          <source>System Administration: pg_relation_filenode</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2742ab117eb3fe2b3dabc1e5e54607c7427d8e1" translate="yes" xml:space="preserve">
          <source>System Administration: pg_relation_filepath</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f85ffbc3af3828935d64682c632a5233a379b748" translate="yes" xml:space="preserve">
          <source>System Administration: pg_relation_size</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2866d8b92abae22a9e5aa2c158406c518fd61172" translate="yes" xml:space="preserve">
          <source>System Administration: pg_reload_conf</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf6ee733fdf66d2945f6237a753fd8bb671d4dbc" translate="yes" xml:space="preserve">
          <source>System Administration: pg_replication_origin_advance</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b056cede26155b9eefef5d478983102d1b58dc0a" translate="yes" xml:space="preserve">
          <source>System Administration: pg_replication_origin_create</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd74b91a9698ac5c836575ef6778e9849d485d26" translate="yes" xml:space="preserve">
          <source>System Administration: pg_replication_origin_drop</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b592a2d6eb715190769f6c645403bed0e0906d70" translate="yes" xml:space="preserve">
          <source>System Administration: pg_replication_origin_oid</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce67bddc1c79790f7c7e3ea3e8dfe164e6f8ce5f" translate="yes" xml:space="preserve">
          <source>System Administration: pg_replication_origin_progress</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="657fc44f5701708e68c6f336bb2a1ae4544769e6" translate="yes" xml:space="preserve">
          <source>System Administration: pg_replication_origin_session_is_setup</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3b8bd3cfd052c2da8ebe767266843b270ca923f" translate="yes" xml:space="preserve">
          <source>System Administration: pg_replication_origin_session_progress</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="912328a9fba1f826639651be0fc1273c2f02f362" translate="yes" xml:space="preserve">
          <source>System Administration: pg_replication_origin_session_reset</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82b5eb70d23dfc31a269e9ba33378678f0c4c1a3" translate="yes" xml:space="preserve">
          <source>System Administration: pg_replication_origin_session_setup</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1c6585c55025ccacd14538d8f5ad5bca8c72f61" translate="yes" xml:space="preserve">
          <source>System Administration: pg_replication_origin_xact_reset</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0ffd53ad713ea0db7d4ce36f0304a9aba022e70" translate="yes" xml:space="preserve">
          <source>System Administration: pg_replication_origin_xact_setup</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="337e82045a1cbbde57a9f167b879e802f4d12439" translate="yes" xml:space="preserve">
          <source>System Administration: pg_replication_slot_advance</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b71b6d3ff864fd80fd3c8785ba1d7c0a96e2999" translate="yes" xml:space="preserve">
          <source>System Administration: pg_rotate_logfile</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aca32fdd9e7ca6111240d34ea01a49a8b130c6cc" translate="yes" xml:space="preserve">
          <source>System Administration: pg_size_bytes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19170aeca34f7c8d43679e7a88ce912c055969f5" translate="yes" xml:space="preserve">
          <source>System Administration: pg_size_pretty</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bf3d94c5147d8ee7961a08ff80ee25a6e90d47d" translate="yes" xml:space="preserve">
          <source>System Administration: pg_start_backup</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3950f5fc0c8c83eed16726abbb98db6a45cf49d0" translate="yes" xml:space="preserve">
          <source>System Administration: pg_stat_file</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9ca6c957968a8bae960ef7b6a41e4d1a3ed7c11" translate="yes" xml:space="preserve">
          <source>System Administration: pg_stop_backup</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c74416829dd81cb198394c213f48e6beeabb4a04" translate="yes" xml:space="preserve">
          <source>System Administration: pg_switch_wal</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a05c80bb1ac482b09a06989e21f9651a6f7c741b" translate="yes" xml:space="preserve">
          <source>System Administration: pg_table_size</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff1a5af6f71cf0eb6f615fa947ae6a1d64759db6" translate="yes" xml:space="preserve">
          <source>System Administration: pg_tablespace_size</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33c25c6e57afb7ad5caa0be1975f0a12f8543b56" translate="yes" xml:space="preserve">
          <source>System Administration: pg_terminate_backend</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e03ea0292a47d4573d13076241954530bc4fcdc9" translate="yes" xml:space="preserve">
          <source>System Administration: pg_total_relation_size</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34fc1ae23f656dc3cb8e8ea83bc90ffc7af4dc77" translate="yes" xml:space="preserve">
          <source>System Administration: pg_try_advisory_lock</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0984b2fa8f91b8630205f1848c34cb85b429b9c2" translate="yes" xml:space="preserve">
          <source>System Administration: pg_try_advisory_lock_shared</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d57ddae8d8993c231d5c4265bcf38201c6df4966" translate="yes" xml:space="preserve">
          <source>System Administration: pg_try_advisory_xact_lock</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32a4c7a557c2f639c4fd69740cf4d4e56cf1291a" translate="yes" xml:space="preserve">
          <source>System Administration: pg_try_advisory_xact_lock_shared</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30f391eeadd0c0895122be3ea190ad77ab947eb9" translate="yes" xml:space="preserve">
          <source>System Administration: pg_wal_lsn_diff</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16f787f894b48eb30feb82f472a4d21822764c5e" translate="yes" xml:space="preserve">
          <source>System Administration: pg_wal_replay_pause</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f1cd61d9e0da8fcc5c19eb536ba58197f0dac02" translate="yes" xml:space="preserve">
          <source>System Administration: pg_wal_replay_resume</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb80613003057b3a40581f8383c953cde1d51337" translate="yes" xml:space="preserve">
          <source>System Administration: pg_walfile_name</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40d42c9e2fa6791eb10e2722bf48e963bdbdad88" translate="yes" xml:space="preserve">
          <source>System Administration: pg_walfile_name_offset</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80dc35f2dfee33f3af473cb6af39d7a95d651db8" translate="yes" xml:space="preserve">
          <source>System Administration: set_config</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70ba34565170f82597d954cfe9bcc62ba03f80ba" translate="yes" xml:space="preserve">
          <source>System Catalog Declaration Rules</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bfee83120320ade7931d656f98ea03070c34ba55" translate="yes" xml:space="preserve">
          <source>System Catalog Declarations and Initial Contents</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a204bb70a9fef2fc920172b6e25704450d55c326" translate="yes" xml:space="preserve">
          <source>System Catalog Initial Data</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05f78922a34c9754d103a3dca09362f10592d27e" translate="yes" xml:space="preserve">
          <source>System Catalog Initial Data: Automatic Creation of Array Types</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15f70d08421239bfba5b5cd868859d3529385a69" translate="yes" xml:space="preserve">
          <source>System Catalog Initial Data: Data File Format</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89eb48da4b01f204cce068ed7a2c8356ed2ed117" translate="yes" xml:space="preserve">
          <source>System Catalog Initial Data: OID Assignment</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6338504f603907929102648fe297dae03984035f" translate="yes" xml:space="preserve">
          <source>System Catalog Initial Data: OID Reference Lookup</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e207174928b93045c976bd0f003518aa1f3425a8" translate="yes" xml:space="preserve">
          <source>System Catalog Initial Data: Recipes for Editing Data Files</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16ffb29fa7538dc5ef61aa7febfae29e9e03479f" translate="yes" xml:space="preserve">
          <source>System Catalogs</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0b5ce1840bdef19cc50b8a118e697841645b666" translate="yes" xml:space="preserve">
          <source>System Columns</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7ffcbda1ecb29cd28603d0658a751dd083e9f1f" translate="yes" xml:space="preserve">
          <source>System Information Functions and Operators</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="969c28c2ba2f17e89e3d1bc0b1ad9a0cec0a4aaa" translate="yes" xml:space="preserve">
          <source>System Information: =</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aabf5a989509317fff3f0aff57af38e2880a75fe" translate="yes" xml:space="preserve">
          <source>System Information: @&amp;gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65bbb638fc57b0525f565b541cc329bf4fe02a21" translate="yes" xml:space="preserve">
          <source>System Information: acldefault</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b970da4aa8d2bd82508a362fe29a2a04bba9470e" translate="yes" xml:space="preserve">
          <source>System Information: aclexplode</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bcabfa8f7d62c253be2f1154e0e9ba6eced044b2" translate="yes" xml:space="preserve">
          <source>System Information: asc</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85d02e715300a12b88a2f31690c0e9b9b3d6b44e" translate="yes" xml:space="preserve">
          <source>System Information: backup_end_lsn</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23d64255e4590b2f12a19dd20b14e27745dfab5a" translate="yes" xml:space="preserve">
          <source>System Information: backup_start_lsn</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c087b22f931b092479fb6e18ace693f93af0fe7" translate="yes" xml:space="preserve">
          <source>System Information: backward_scan</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93b773e22a38507eeb86078b0e11d2d0061afbab" translate="yes" xml:space="preserve">
          <source>System Information: bitmap_scan</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32e264ce46877f132ffa68ce6caebe06013a7b8b" translate="yes" xml:space="preserve">
          <source>System Information: blocks_per_segment</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad58f9e1040ca4ad8768e972dd47370f9e593ead" translate="yes" xml:space="preserve">
          <source>System Information: bytes_per_wal_segment</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="056066ed28ad08fe7e3e1c5049b1ca5af5b75181" translate="yes" xml:space="preserve">
          <source>System Information: can_exclude</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8605ee4e5d9c119704826b7eecc9d0ed2cb0d85d" translate="yes" xml:space="preserve">
          <source>System Information: can_include</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9298b39d532ec09a50aa73cfbe2be5b83f881728" translate="yes" xml:space="preserve">
          <source>System Information: can_multi_col</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f0a62c1c12dd43399bdaf6d9df6ecb2dd518820" translate="yes" xml:space="preserve">
          <source>System Information: can_order</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="400e8a1c70b38db9004cbad160fa918f2f7e1ad9" translate="yes" xml:space="preserve">
          <source>System Information: can_unique</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e736336b9a8dec95b281ca1b4ad1f2b199301495" translate="yes" xml:space="preserve">
          <source>System Information: catalog_version_no</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0534c39a1aeff460a61921ecc6f0f5968fbe832b" translate="yes" xml:space="preserve">
          <source>System Information: checkpoint_lsn</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2d831683977b56d054837365e7c4c6137cb346c" translate="yes" xml:space="preserve">
          <source>System Information: checkpoint_time</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd56b6b0ed17f437c7d382a5a62228fac52ddd99" translate="yes" xml:space="preserve">
          <source>System Information: clusterable</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="faf9ba71d05f457d5cf2b0c161cc9b85190087c6" translate="yes" xml:space="preserve">
          <source>System Information: col_description</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b693016a622c072330d1a225e2610122c5a4ecaa" translate="yes" xml:space="preserve">
          <source>System Information: collation for</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3ef077e2e9ab0b07261c0b55c324487788c2d2c" translate="yes" xml:space="preserve">
          <source>System Information: current_catalog</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e65f70102c41825e3755ee9ac41a66b9b5ef4b7c" translate="yes" xml:space="preserve">
          <source>System Information: current_database</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48addaa15e2f44012dc51b7c415dd7060b873bd3" translate="yes" xml:space="preserve">
          <source>System Information: current_query</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d297b1b694ee69904878d788686adbc9883731c9" translate="yes" xml:space="preserve">
          <source>System Information: current_role</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95ca22d6c143d6bc6fb08ffa82c72ca0d6a15c43" translate="yes" xml:space="preserve">
          <source>System Information: current_schema</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38359341d8d5c0a469f02aba7aa41b082b80a8ff" translate="yes" xml:space="preserve">
          <source>System Information: current_schemas</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8eafe901179ff31ce8412f036521d1a8c4be6883" translate="yes" xml:space="preserve">
          <source>System Information: current_user</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7ed096f39bd6234f75ee796841db87b4a3558b0" translate="yes" xml:space="preserve">
          <source>System Information: data_page_checksum_version</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="362fc2829def348fdaa4a0bad46f11ff5d57de34" translate="yes" xml:space="preserve">
          <source>System Information: database_block_size</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="529e345af76369ac56523b48409b37bded3d0fdc" translate="yes" xml:space="preserve">
          <source>System Information: desc</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c520b41e3b847c56c06099be51968a2876bde9b8" translate="yes" xml:space="preserve">
          <source>System Information: distance_orderable</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a117cfbc5c21995ff5a0321c16c1d526f371bd24" translate="yes" xml:space="preserve">
          <source>System Information: end_of_backup_record_required</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83abcbed3ed0e1c125019c2cfd29f868037ee49d" translate="yes" xml:space="preserve">
          <source>System Information: float4_pass_by_value</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b483a1922d633831e4526a076b3ef71861c9853a" translate="yes" xml:space="preserve">
          <source>System Information: float8_pass_by_value</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a545ca2698f5df95e1772f977810fbc82f5cf785" translate="yes" xml:space="preserve">
          <source>System Information: format_type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9a5514eef728a10d76799e277865b6fb0e4eeeb" translate="yes" xml:space="preserve">
          <source>System Information: full_page_writes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1870631cdd21d3a46a1e3d6b190dd75b3dd221b7" translate="yes" xml:space="preserve">
          <source>System Information: has_any_column_privilege</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e4f17ffc117832d1e53312538ad9dbcc235b70a" translate="yes" xml:space="preserve">
          <source>System Information: has_column_privilege</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52293d9b02048ca39038a62eb928f38bae1ff63b" translate="yes" xml:space="preserve">
          <source>System Information: has_database_privilege</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17bc4056779374df65cf5701ce849c9829a8df1f" translate="yes" xml:space="preserve">
          <source>System Information: has_foreign_data_wrapper_privilege</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12cfe7e267d8863147010dbc6452e56d4eb9508d" translate="yes" xml:space="preserve">
          <source>System Information: has_function_privilege</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58fa2013ba968439a596c956ff116c15cd49c0df" translate="yes" xml:space="preserve">
          <source>System Information: has_language_privilege</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8fef580f2de2f243f56a7451e3ffb78d7a79c77" translate="yes" xml:space="preserve">
          <source>System Information: has_schema_privilege</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="134dcc670272d75f7520f0c146ad83faa2406648" translate="yes" xml:space="preserve">
          <source>System Information: has_sequence_privilege</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e81340d1ff9ccd37f9a1ddfa5ad0c0a40a8c569" translate="yes" xml:space="preserve">
          <source>System Information: has_server_privilege</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ddaadcb30719df032789c2893504594b14a6de1c" translate="yes" xml:space="preserve">
          <source>System Information: has_table_privilege</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96a25b4fe115031c645b703f883999fbaadc9427" translate="yes" xml:space="preserve">
          <source>System Information: has_tablespace_privilege</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36e99f12ce09178e2e4dfcff3bd547cff1287c94" translate="yes" xml:space="preserve">
          <source>System Information: has_type_privilege</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9e3d5e816290ca4eff8975d1672161ad95c770f" translate="yes" xml:space="preserve">
          <source>System Information: index_scan</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db5a5ca0d07e0fefd3eb88779119deb32e1f7cec" translate="yes" xml:space="preserve">
          <source>System Information: inet_client_addr</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="369812fa61fc7766c69d9150054258e862258bb6" translate="yes" xml:space="preserve">
          <source>System Information: inet_client_port</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb46d1e305043a2a119d18a9c24fb93fc9f668d5" translate="yes" xml:space="preserve">
          <source>System Information: inet_server_addr</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07041de3bc2c7888acf3c35744df57c94090578e" translate="yes" xml:space="preserve">
          <source>System Information: inet_server_port</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e02d0041f62f36ed0d93def3e3e4f01af530c2ff" translate="yes" xml:space="preserve">
          <source>System Information: large_object_chunk_size</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ace351c71b5f31928289b9451ce634c14820635a" translate="yes" xml:space="preserve">
          <source>System Information: makeaclitem</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="314ff5f4b8637153469c06c1f9ff6d342013c46f" translate="yes" xml:space="preserve">
          <source>System Information: max_data_alignment</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57386d27691249b5d2a129dd5167bb0a6e9c81e3" translate="yes" xml:space="preserve">
          <source>System Information: max_identifier_length</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="277ec87cf2af8beff7063bd15ed8b1b8e5159087" translate="yes" xml:space="preserve">
          <source>System Information: max_index_columns</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="748d418ad2c137c48e968e43cd1ed3af2e3598fe" translate="yes" xml:space="preserve">
          <source>System Information: max_toast_chunk_size</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc67814988e03f4488c4d2f12d57462e96e17edb" translate="yes" xml:space="preserve">
          <source>System Information: min_recovery_end_lsn</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce2f67cecfb5cac7d76e5d7f544a1f26ef3f4fb1" translate="yes" xml:space="preserve">
          <source>System Information: min_recovery_end_timeline</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73cb6153c9f5d12c9b3f12954d391b2f1318dd43" translate="yes" xml:space="preserve">
          <source>System Information: newest_commit_ts_xid</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="830baeb3dbcd4f5641b85bde72f71aa00b5baa55" translate="yes" xml:space="preserve">
          <source>System Information: next_multi_offset</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bcd8a2a1be3a17b0ff51af32866dfc54479edb86" translate="yes" xml:space="preserve">
          <source>System Information: next_multixact_id</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68f92e8158046c5a06a1dcc34f392bca06a9be31" translate="yes" xml:space="preserve">
          <source>System Information: next_oid</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="630c04efdb47bc8c38be976cb691e7960687b35d" translate="yes" xml:space="preserve">
          <source>System Information: next_xid</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ea887205b5414fc2f5bdfedfc80cccabd23cca9" translate="yes" xml:space="preserve">
          <source>System Information: nulls_first</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dada2f6e605b53e86f6fa1413aadc8747cb9b858" translate="yes" xml:space="preserve">
          <source>System Information: nulls_last</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cda0b304f47c0c92b9fb94787e4ad8fa06111357" translate="yes" xml:space="preserve">
          <source>System Information: obj_description</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="661053717c21be873a00ccbbd2e36929d6941175" translate="yes" xml:space="preserve">
          <source>System Information: oldest_active_xid</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e3f29d14f3732c1831a06c73021c997a267f502" translate="yes" xml:space="preserve">
          <source>System Information: oldest_commit_ts_xid</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fe59d6562107bf463f48b193bca54173857972b" translate="yes" xml:space="preserve">
          <source>System Information: oldest_multi_dbid</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61b1e7e04c812baf7182cacc2b4a38ce545896cd" translate="yes" xml:space="preserve">
          <source>System Information: oldest_multi_xid</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70ce184e08a42f5c1ac6d7986a0d07970a7facae" translate="yes" xml:space="preserve">
          <source>System Information: oldest_xid</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7dd414bae4e20c3571f1ece294289c524ced4c9b" translate="yes" xml:space="preserve">
          <source>System Information: oldest_xid_dbid</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96ab43b964a2e2ec92f68c73c78bfa4c3c232b46" translate="yes" xml:space="preserve">
          <source>System Information: orderable</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a36d5cc024380697c8541df8c45a7d63fa707df" translate="yes" xml:space="preserve">
          <source>System Information: pg_backend_pid</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48fd8eeb5494ff50b63b1751a8fea983bddead51" translate="yes" xml:space="preserve">
          <source>System Information: pg_blocking_pids</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac470f51b6353d19664666fdd80c0727777097db" translate="yes" xml:space="preserve">
          <source>System Information: pg_collation_is_visible</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ecc4ae02edb30ba407a957fb98e90ccbff9b0ed" translate="yes" xml:space="preserve">
          <source>System Information: pg_conf_load_time</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="999c1cc5d418485080df0cc5523296901246bde5" translate="yes" xml:space="preserve">
          <source>System Information: pg_control_checkpoint</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87482fb783cdbe3f3998180fce939abc436baa15" translate="yes" xml:space="preserve">
          <source>System Information: pg_control_init</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68591babe844bc9d163934d437d5548f478a52c6" translate="yes" xml:space="preserve">
          <source>System Information: pg_control_last_modified</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2eb0b9e3f623be09f8c8042c7eb2c3e9594d2245" translate="yes" xml:space="preserve">
          <source>System Information: pg_control_recovery</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64cf1ed53720f00e86a91a6567457fa57ae74978" translate="yes" xml:space="preserve">
          <source>System Information: pg_control_system</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5178b69884dbbbbd3ba612d92706854cd973c1c4" translate="yes" xml:space="preserve">
          <source>System Information: pg_control_version</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="904d294ad8e14dfc21785e9e21fec9b3d95ff5f8" translate="yes" xml:space="preserve">
          <source>System Information: pg_conversion_is_visible</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b52887972b13a234984a6e5213f2493ad6b657d1" translate="yes" xml:space="preserve">
          <source>System Information: pg_current_logfile</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c717e57df2c1069bf2d508766c5f2c9b667872a" translate="yes" xml:space="preserve">
          <source>System Information: pg_describe_object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2539df32742404e32b149682ace157bfa043bff1" translate="yes" xml:space="preserve">
          <source>System Information: pg_function_is_visible</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0185b8bdf16ca87ec8e37d2d20bf48e6023b77a7" translate="yes" xml:space="preserve">
          <source>System Information: pg_get_constraintdef</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca41f9f0efb929913b9bcadfa128fa40d11e7da7" translate="yes" xml:space="preserve">
          <source>System Information: pg_get_expr</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6babbb55be15be07e83dc1fd80d816bcb4cc470b" translate="yes" xml:space="preserve">
          <source>System Information: pg_get_function_arguments</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59a6bc3e85e9bd79e305dae71915cd253a60a7b3" translate="yes" xml:space="preserve">
          <source>System Information: pg_get_function_identity_arguments</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3392e179f2a47b74b0d24e9e4275f913bded668" translate="yes" xml:space="preserve">
          <source>System Information: pg_get_function_result</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85e9bd00750b99f525aac1f170718528b46461e4" translate="yes" xml:space="preserve">
          <source>System Information: pg_get_functiondef</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08a9d8cc237401fa897f7e7c1c838b23c50e55f6" translate="yes" xml:space="preserve">
          <source>System Information: pg_get_indexdef</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30bef9f9c1f3af2f4d914426592abf7fb9ba8b6a" translate="yes" xml:space="preserve">
          <source>System Information: pg_get_keywords</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80e72cc6ad3579fa030c583ecb42aac06335c685" translate="yes" xml:space="preserve">
          <source>System Information: pg_get_object_address</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1be1f28d93fedacad99c97baa8b1d17a1bd89a36" translate="yes" xml:space="preserve">
          <source>System Information: pg_get_ruledef</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12b9809239ad621c9c02735658c5c4107598daee" translate="yes" xml:space="preserve">
          <source>System Information: pg_get_serial_sequence</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dec5082d371a73dcbf8b152bae524dd2b22178a4" translate="yes" xml:space="preserve">
          <source>System Information: pg_get_statisticsobjdef</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81a2efb672934a5fee2ff2102f87900034fe8383" translate="yes" xml:space="preserve">
          <source>System Information: pg_get_triggerdef</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="818567c27d62da4fabf2431e92a6647b61a9ffff" translate="yes" xml:space="preserve">
          <source>System Information: pg_get_userbyid</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11710a4e12cd2ff7770b8c8da4f39fbd9cdaa48e" translate="yes" xml:space="preserve">
          <source>System Information: pg_get_viewdef</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b88a178cbbce5641f7b737d6e28d094527ca4306" translate="yes" xml:space="preserve">
          <source>System Information: pg_has_role</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="193b7931779ed0a2cc3a3c4a8dc895fa27f23dcf" translate="yes" xml:space="preserve">
          <source>System Information: pg_identify_object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd99cad037d2ecf26ef0af20114c79f82b0bff5c" translate="yes" xml:space="preserve">
          <source>System Information: pg_identify_object_as_address</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a547c7b5c453b1ca4dfee8cfe2be371fb12408b8" translate="yes" xml:space="preserve">
          <source>System Information: pg_index_column_has_property</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1273e16018265a62f9d27696838ce89e773ee2da" translate="yes" xml:space="preserve">
          <source>System Information: pg_index_has_property</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75cb59284fc87481e4d02e5fea7d37dda69a0062" translate="yes" xml:space="preserve">
          <source>System Information: pg_indexam_has_property</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ee5a61ea81eec477f7a940eaba2bce4cdf2fe37" translate="yes" xml:space="preserve">
          <source>System Information: pg_is_other_temp_schema</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="724a0ca68cba874536836091c15be37e2aa4c94e" translate="yes" xml:space="preserve">
          <source>System Information: pg_jit_available</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="341a310d0a82f16dbaee7f618163e969e66c252a" translate="yes" xml:space="preserve">
          <source>System Information: pg_last_committed_xact</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffd0a25980817ab382e05ee2971d0b20607e5316" translate="yes" xml:space="preserve">
          <source>System Information: pg_listening_channels</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0370d9243017dd2bc64ea0e6a19b2e3108bed29" translate="yes" xml:space="preserve">
          <source>System Information: pg_my_temp_schema</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9427a469292e8d24202408f2c66b1fead7e55cf0" translate="yes" xml:space="preserve">
          <source>System Information: pg_notification_queue_usage</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f896acf33d7f4a9bde4da308077a4b846791455" translate="yes" xml:space="preserve">
          <source>System Information: pg_opclass_is_visible</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb41b67b8d25d28160f040f3b349cafbc234fae5" translate="yes" xml:space="preserve">
          <source>System Information: pg_operator_is_visible</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de72c373726e820e11f6ea5bb409fbf46c047981" translate="yes" xml:space="preserve">
          <source>System Information: pg_opfamily_is_visible</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a3940ece34fd6158cfbd6daffcf4b87af0e8871" translate="yes" xml:space="preserve">
          <source>System Information: pg_options_to_table</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a15788f0aad22082f36a4f1a2e92c534d2d78da" translate="yes" xml:space="preserve">
          <source>System Information: pg_postmaster_start_time</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f0bfdc50b57c1f3804da49c81b9709e4173d6dc" translate="yes" xml:space="preserve">
          <source>System Information: pg_safe_snapshot_blocking_pids</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b4bea14c80020830b5348de8df609f0b9c57683" translate="yes" xml:space="preserve">
          <source>System Information: pg_statistics_obj_is_visible</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d79717f1a8eb542a075fce2b845705f15d4446b" translate="yes" xml:space="preserve">
          <source>System Information: pg_table_is_visible</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7fcbfabf9d15e2e46a11a5689fb040424e1554de" translate="yes" xml:space="preserve">
          <source>System Information: pg_tablespace_databases</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="624b686def8417598c2d32b3f54a71570db3c930" translate="yes" xml:space="preserve">
          <source>System Information: pg_tablespace_location</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0208c441c9650c3243c1bd798156148c15efaa0b" translate="yes" xml:space="preserve">
          <source>System Information: pg_trigger_depth</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b300cfbff6c226ad3af4928ef075c72a6c51b70e" translate="yes" xml:space="preserve">
          <source>System Information: pg_ts_config_is_visible</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ed5e52816e4d4da044e4524da07b44a0b8e37da" translate="yes" xml:space="preserve">
          <source>System Information: pg_ts_dict_is_visible</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27f20964bd3bf57686e8ac3665c358e456968093" translate="yes" xml:space="preserve">
          <source>System Information: pg_ts_parser_is_visible</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a6f4a8b170015b33e1a33568e11a8ae70375472" translate="yes" xml:space="preserve">
          <source>System Information: pg_ts_template_is_visible</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65ca7a5937ea157a71ad3f9d3f4a638c0f9577eb" translate="yes" xml:space="preserve">
          <source>System Information: pg_type_is_visible</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a3149409814026df972bc0c6c1eb3d69c555f8e" translate="yes" xml:space="preserve">
          <source>System Information: pg_typeof</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="990d8ce0cf3602b61f1710d0f90401b03ddd621e" translate="yes" xml:space="preserve">
          <source>System Information: pg_xact_commit_timestamp</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05801f8090cb34d84bdb7765e474bbda2a55a876" translate="yes" xml:space="preserve">
          <source>System Information: prev_timeline_id</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d96d4bd3d36dca16caac804a41c1403adfd1503" translate="yes" xml:space="preserve">
          <source>System Information: redo_lsn</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a5a7846c2f9da39093f480c7e190ecf637f63d6" translate="yes" xml:space="preserve">
          <source>System Information: redo_wal_file</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32897d1342ac3995c768f670c277134c59bc6451" translate="yes" xml:space="preserve">
          <source>System Information: returnable</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e97bae654cecca4d7ca8ce303b70b0d63ce1aea" translate="yes" xml:space="preserve">
          <source>System Information: row_security_active</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1db2c6961fdd85f6b4f27652b21dfd636bcbb92b" translate="yes" xml:space="preserve">
          <source>System Information: search_array</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38d17ba803718a2be294c8582cf0b322d4ba612f" translate="yes" xml:space="preserve">
          <source>System Information: search_nulls</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da01e1b40b5cb56815b9ac6b19499b6c7b3fbfd4" translate="yes" xml:space="preserve">
          <source>System Information: session_user</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74857d3bdc504df99277acd926266ea7305919c0" translate="yes" xml:space="preserve">
          <source>System Information: shobj_description</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bdcffd2fbb575c94de7879a9b4117acd371067ef" translate="yes" xml:space="preserve">
          <source>System Information: system_identifier</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8bfa30293b890e786eddf1c7720ba10fa8277e00" translate="yes" xml:space="preserve">
          <source>System Information: timeline_id</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ad9ac0537505c7167a15262a17a7b86dc519351" translate="yes" xml:space="preserve">
          <source>System Information: to_regclass</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96ddfccfcdcc792a750ec8ac030186f7d37cba65" translate="yes" xml:space="preserve">
          <source>System Information: to_regnamespace</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72e9e3450d535e89402eb3191a6e3097bd22551b" translate="yes" xml:space="preserve">
          <source>System Information: to_regoper</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e363101458f0485a40f9b1227f92ac6d18d06790" translate="yes" xml:space="preserve">
          <source>System Information: to_regoperator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa8394d1c21258a57d93bb0d0aa903bbe5f92f65" translate="yes" xml:space="preserve">
          <source>System Information: to_regproc</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2f8b2af34a75400c61fe7f2659e3371a65ee278" translate="yes" xml:space="preserve">
          <source>System Information: to_regprocedure</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="adcfdc3f489395a9c4d845c4024ab104b2b43320" translate="yes" xml:space="preserve">
          <source>System Information: to_regrole</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4caf2ddd4ea781468e7857d5870e39316859e3a8" translate="yes" xml:space="preserve">
          <source>System Information: to_regtype</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ff18c2617fc7e5fba9a57d567e2513bbd75ef9c" translate="yes" xml:space="preserve">
          <source>System Information: txid_current</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18290b25e1b9ba51c0baac7291362ff6ddb86c18" translate="yes" xml:space="preserve">
          <source>System Information: txid_current_if_assigned</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8217da235b90b0727d52dc2f03af98a083fdfe97" translate="yes" xml:space="preserve">
          <source>System Information: txid_current_snapshot</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c3f34d3adfd0d487b59933c5090bbb1abfc51b9" translate="yes" xml:space="preserve">
          <source>System Information: txid_snapshot_xip</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4f34e267df49bb98fdbe58d28cf03124c4bb59b" translate="yes" xml:space="preserve">
          <source>System Information: txid_snapshot_xmax</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b16df7409d8e4621af574ed00fda6acf20737bb4" translate="yes" xml:space="preserve">
          <source>System Information: txid_snapshot_xmin</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c888b9491a62602f505c1d067c4db26662db3442" translate="yes" xml:space="preserve">
          <source>System Information: txid_status</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="821041065a6170b7c240b1384a24939bb36d4f45" translate="yes" xml:space="preserve">
          <source>System Information: txid_visible_in_snapshot</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40eb5613ac82bc1527bc94c45ab0b42e2ab81360" translate="yes" xml:space="preserve">
          <source>System Information: user</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d341c9172bf1127b8b23455fd6ebd8c1bb8824e2" translate="yes" xml:space="preserve">
          <source>System Information: version</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e22a19399625e3c40b87d6735ff6019b6f7709a" translate="yes" xml:space="preserve">
          <source>System Information: wal_block_size</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43d78b2c0f2dba3bd6923c2ff5430c7ce02e5515" translate="yes" xml:space="preserve">
          <source>System Information: ~</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b2a2d814530678f895ce95abd73d8c95d0d9bd6" translate="yes" xml:space="preserve">
          <source>System V IPC features are typically constrained by system-wide allocation limits. When PostgreSQL exceeds one of these limits, the server will refuse to start and should leave an instructive error message describing the problem and what to do about it. (See also &lt;a href=&quot;server-start#SERVER-START-FAILURES&quot;&gt;Section 18.3.1&lt;/a&gt;.) The relevant kernel parameters are named consistently across different systems; &lt;a href=&quot;kernel-resources#SYSVIPC-PARAMETERS&quot;&gt;Table 18.1&lt;/a&gt; gives an overview. The methods to set them, however, vary. Suggestions for some platforms are given below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea2ad791f1f931ed6f36eb3b07a8954fa48d5daf" translate="yes" xml:space="preserve">
          <source>System catalog changes usually only affect database management tools.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c10328ae12a0ec5efc322bb783f40287312856b" translate="yes" xml:space="preserve">
          <source>SystemTap uses a different notation for trace scripts than DTrace does, even though the underlying trace points are compatible. One point worth noting is that at this writing, SystemTap scripts must reference probe names using double underscores in place of hyphens. This is expected to be fixed in future SystemTap releases.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8afb07710238ef3f41750b4461be06cb4bdd01f1" translate="yes" xml:space="preserve">
          <source>TCP port number that the client is using for communication</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="740e755e160ccdedd8428d28fd9181ce097d395c" translate="yes" xml:space="preserve">
          <source>TCP port number that the client is using for communication with this WAL sender, or &lt;code&gt;-1&lt;/code&gt; if a Unix socket is used</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f185720bb1c5bfa5b20f9e9bfc8e0cf0bb85cdb7" translate="yes" xml:space="preserve">
          <source>TCP port number that the client is using for communication with this backend, or &lt;code&gt;-1&lt;/code&gt; if a Unix socket is used</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88da89e91381b190bd9878177d6d1952a36ddc55" translate="yes" xml:space="preserve">
          <source>TCP/IP</source>
          <target state="translated">TCP/IP</target>
        </trans-unit>
        <trans-unit id="047bd611a87b4577b1b30588ada86c2e3ed12201" translate="yes" xml:space="preserve">
          <source>TID</source>
          <target state="translated">TID</target>
        </trans-unit>
        <trans-unit id="7ba264e3ee241c2237411ee8bdc16724b3269e26" translate="yes" xml:space="preserve">
          <source>TOAST</source>
          <target state="translated">TOAST</target>
        </trans-unit>
        <trans-unit id="51d7be94fdffb94b580cc906b9300afdd763b46d" translate="yes" xml:space="preserve">
          <source>TOAST pointers can point to data that is not on disk, but is elsewhere in the memory of the current server process. Such pointers obviously cannot be long-lived, but they are nonetheless useful. There are currently two sub-cases: pointers to &lt;em&gt;indirect&lt;/em&gt; data and pointers to &lt;em&gt;expanded&lt;/em&gt; data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="964c9b659348d852de0f76856a6bfd56433ce188" translate="yes" xml:space="preserve">
          <source>TOAST pointers to expanded values are further broken down into &lt;em&gt;read-write&lt;/em&gt; and &lt;em&gt;read-only&lt;/em&gt; pointers. The pointed-to representation is the same either way, but a function that receives a read-write pointer is allowed to modify the referenced value in-place, whereas one that receives a read-only pointer must not; it must first create a copy if it wants to make a modified version of the value. This distinction and some associated conventions make it possible to avoid unnecessary copying of expanded values during query execution.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c3910cc79fb5b6d32a435a625feda9854570fff" translate="yes" xml:space="preserve">
          <source>TOAST usurps two bits of the varlena length word (the high-order bits on big-endian machines, the low-order bits on little-endian machines), thereby limiting the logical size of any value of a TOAST-able data type to 1 GB (2&lt;sup&gt;30&lt;/sup&gt; - 1 bytes). When both bits are zero, the value is an ordinary un-TOASTed value of the data type, and the remaining bits of the length word give the total datum size (including length word) in bytes. When the highest-order or lowest-order bit is set, the value has only a single-byte header instead of the normal four-byte header, and the remaining bits of that byte give the total datum size (including length byte) in bytes. This alternative supports space-efficient storage of values shorter than 127 bytes, while still allowing the data type to grow to 1 GB at need. Values with single-byte headers aren't aligned on any particular boundary, whereas values with four-byte headers are aligned on at least a four-byte boundary; this omission of alignment padding provides additional space savings that is significant compared to short values. As a special case, if the remaining bits of a single-byte header are all zero (which would be impossible for a self-inclusive length), the value is a pointer to out-of-line data, with several possible alternatives as described below. The type and size of such a &lt;em&gt;TOAST pointer&lt;/em&gt; are determined by a code stored in the second byte of the datum. Lastly, when the highest-order or lowest-order bit is clear but the adjacent bit is set, the content of the datum has been compressed and must be decompressed before use. In this case the remaining bits of the four-byte length word give the total size of the compressed datum, not the original data. Note that compression is also possible for out-of-line data but the varlena header does not tell whether it has occurred &amp;mdash; the content of the TOAST pointer tells that, instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c658426f6e9645ac24a7cc07d9404747aa712b3" translate="yes" xml:space="preserve">
          <source>TPC</source>
          <target state="translated">TPC</target>
        </trans-unit>
        <trans-unit id="fddf1df7c30cac7908d10246256efd264ce7aa32" translate="yes" xml:space="preserve">
          <source>TRUE</source>
          <target state="translated">TRUE</target>
        </trans-unit>
        <trans-unit id="74303786eb95ccd75228db361d37b804576e18e6" translate="yes" xml:space="preserve">
          <source>TRUNCATE</source>
          <target state="translated">TRUNCATE</target>
        </trans-unit>
        <trans-unit id="c51f9cc32a5064c171ec7fbd3569d531e89a1c56" translate="yes" xml:space="preserve">
          <source>TRUNCATE &amp;mdash; empty a table or set of tables</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6423f0db833042cf5e91c33cf6439a04a79fd980" translate="yes" xml:space="preserve">
          <source>Tab (ASCII 9)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb232362d0a8d2ba0ab9ebeecd048709dca540ac" translate="yes" xml:space="preserve">
          <source>Table Access Method Interface Definition</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11ff41b08d6854848182469ccb18893cc9671879" translate="yes" xml:space="preserve">
          <source>Table Basics</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae752a548fab7b5d8f441e50b07f912b72cd8411" translate="yes" xml:space="preserve">
          <source>Table Expressions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4219b61fe0fdfeb7af4dc1a19b1c12ad046bbb3" translate="yes" xml:space="preserve">
          <source>Table Expressions: FROM Clause</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b6769c4d038cb2821fdba571ee9473eaee34a94" translate="yes" xml:space="preserve">
          <source>Table Expressions: FULL OUTER JOIN</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b856ea1c66e6eb49aa7e0ed5a2df13195dd8b17" translate="yes" xml:space="preserve">
          <source>Table Expressions: GROUP BY and HAVING Clauses</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41e1b5495e0dc98cde2555d00adb2953047b09de" translate="yes" xml:space="preserve">
          <source>Table Expressions: GROUPING SETS, CUBE, and ROLLUP</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aba6037ec4c02435b3056c6225936f6888153fd6" translate="yes" xml:space="preserve">
          <source>Table Expressions: INNER JOIN</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6fc2c101a1a9ff9871f5f39c755a2581191907ab" translate="yes" xml:space="preserve">
          <source>Table Expressions: Joined Tables</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf24960678770f671f056968d4750e7606fbf7e8" translate="yes" xml:space="preserve">
          <source>Table Expressions: LATERAL Subqueries</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8aa6e33b34bec5d76bce47031ecb49488501d5a" translate="yes" xml:space="preserve">
          <source>Table Expressions: LEFT OUTER JOIN</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d0d3851d827be93ee70a1d1b91d3fac3a92d7cb" translate="yes" xml:space="preserve">
          <source>Table Expressions: RIGHT OUTER JOIN</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="753f3a343ebc42b7a9059070dda975d1af74dd5d" translate="yes" xml:space="preserve">
          <source>Table Expressions: Subqueries</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4f6830cc6b0a1881b7d017eb2a22f6dda377daf" translate="yes" xml:space="preserve">
          <source>Table Expressions: Table Functions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec41e93bdf13abf65ecebcbb1137e4ecec20c31b" translate="yes" xml:space="preserve">
          <source>Table Expressions: Table and Column Aliases</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e39cfbb2f40f23ebe1f69be21076e1a950018f84" translate="yes" xml:space="preserve">
          <source>Table Expressions: WHERE Clause</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f4691d4ff404397912df160edd8f94690df8d48" translate="yes" xml:space="preserve">
          <source>Table Expressions: Window Function Processing</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea47dd2beba135d5c4d14faca762145b641244e7" translate="yes" xml:space="preserve">
          <source>Table Partitioning</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82d96886774a2410448beeb1c5d39dc583137fae" translate="yes" xml:space="preserve">
          <source>Table Partitioning: Declarative Partitioning</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a5ea1d770e67d42ee580bc8259b8d09dd77f082" translate="yes" xml:space="preserve">
          <source>Table Partitioning: Declarative Partitioning Best Practices</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3bad99d306d10127133be5426c5d831b8d9d311" translate="yes" xml:space="preserve">
          <source>Table Partitioning: Implementation Inheritance</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d01f16cd1b52f44bb71ee5ca456a168075c81542" translate="yes" xml:space="preserve">
          <source>Table Partitioning: Partition Pruning</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7c8b9861f91f48e5645656e08e1f85ae96b10b0" translate="yes" xml:space="preserve">
          <source>Table Partitioning: Partitioning and Constraint Exclusion</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8e31867e8bcb467f9956e189f7b3e1ba6400b8b" translate="yes" xml:space="preserve">
          <source>Table aliases are mainly for notational convenience, but it is necessary to use them when joining a table to itself, e.g.:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2068a0bb2a4c0b1f8a683e70f1c3ff6e4cb604a8" translate="yes" xml:space="preserve">
          <source>Table column</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2f409448c02e433d94321231d85469803dc6d9d" translate="yes" xml:space="preserve">
          <source>Table containing the columns described by this object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4d581bf434da5a5b4f9434dddc7c882f48f9378" translate="yes" xml:space="preserve">
          <source>Table functions appearing in &lt;code&gt;FROM&lt;/code&gt; can also be preceded by the key word &lt;code&gt;LATERAL&lt;/code&gt;, but for functions the key word is optional; the function's arguments can contain references to columns provided by preceding &lt;code&gt;FROM&lt;/code&gt; items in any case.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9185e6d51a58bfa9602cf9ef2d4cb9a7c26ac54" translate="yes" xml:space="preserve">
          <source>Table functions are functions that produce a set of rows, made up of either base data types (scalar types) or composite data types (table rows). They are used like a table, view, or subquery in the &lt;code&gt;FROM&lt;/code&gt; clause of a query. Columns returned by table functions can be included in &lt;code&gt;SELECT&lt;/code&gt;, &lt;code&gt;JOIN&lt;/code&gt;, or &lt;code&gt;WHERE&lt;/code&gt; clauses in the same manner as columns of a table, view, or subquery.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c53231dea8f7f64f886f1c20c95992ee143e659a" translate="yes" xml:space="preserve">
          <source>Table functions may also be combined using the &lt;code&gt;ROWS FROM&lt;/code&gt; syntax, with the results returned in parallel columns; the number of result rows in this case is that of the largest function result, with smaller results padded with null values to match.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa44580889246402a89399796b738891b726f457" translate="yes" xml:space="preserve">
          <source>Table inheritance allows for multiple inheritance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="785ace202eeb7c163da19cabb3acbebd6b8d9282" translate="yes" xml:space="preserve">
          <source>Table inheritance is typically established when the child table is created, using the &lt;code&gt;INHERITS&lt;/code&gt; clause of the &lt;a href=&quot;sql-createtable&quot;&gt;CREATE TABLE&lt;/a&gt; statement. Alternatively, a table which is already defined in a compatible way can have a new parent relationship added, using the &lt;code&gt;INHERIT&lt;/code&gt; variant of &lt;a href=&quot;sql-altertable&quot;&gt;ALTER TABLE&lt;/a&gt;. To do this the new child table must already include columns with the same names and types as the columns of the parent. It must also include check constraints with the same names and check expressions as those of the parent. Similarly an inheritance link can be removed from a child using the &lt;code&gt;NO INHERIT&lt;/code&gt; variant of &lt;code&gt;ALTER TABLE&lt;/code&gt;. Dynamically adding and removing inheritance links like this can be useful when the inheritance relationship is being used for table partitioning (see &lt;a href=&quot;ddl-partitioning&quot;&gt;Section 5.11&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b610381c5aaf8aee8f5aa64c29f4c1854100d53b" translate="yes" xml:space="preserve">
          <source>Table- and row-level locking facilities are also available in PostgreSQL for applications which don't generally need full transaction isolation and prefer to explicitly manage particular points of conflict. However, proper use of MVCC will generally provide better performance than locks. In addition, application-defined advisory locks provide a mechanism for acquiring locks that are not tied to a single transaction.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="193daf137ed8b89de36d47c3df5fd8f66c0e1d14" translate="yes" xml:space="preserve">
          <source>Tables</source>
          <target state="translated">Tables</target>
        </trans-unit>
        <trans-unit id="620fe992f378b573b9ea73b7b55f3d3300fdee87" translate="yes" xml:space="preserve">
          <source>Tables and Indexes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e22db573d19e6a7436aed5c9dc51a2f18ca820a6" translate="yes" xml:space="preserve">
          <source>Tables and foreign tables</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f953cc3e8de6bd2f7874259f7207d80832d002d" translate="yes" xml:space="preserve">
          <source>Tables are grouped into databases, and a collection of databases managed by a single PostgreSQL server instance constitutes a database &lt;em&gt;cluster&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b236bf70e4e0c673ef94eb379721e33eea3962ec" translate="yes" xml:space="preserve">
          <source>Tables or foreign tables which are partitions of some other table are automatically excluded. Partitioned tables are imported, unless they are a partition of some other table. Since all data can be accessed through the partitioned table which is the root of the partitioning hierarchy, this approach should allow access to all the data without creating extra objects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b22ad449e620af2f251dab99ace704fb4d41860" translate="yes" xml:space="preserve">
          <source>Tables whose &lt;code&gt;relfrozenxid&lt;/code&gt; value is more than &lt;a href=&quot;runtime-config-autovacuum#GUC-AUTOVACUUM-FREEZE-MAX-AGE&quot;&gt;autovacuum_freeze_max_age&lt;/a&gt; transactions old are always vacuumed (this also applies to those tables whose freeze max age has been modified via storage parameters; see below). Otherwise, if the number of tuples obsoleted since the last &lt;code&gt;VACUUM&lt;/code&gt; exceeds the &amp;ldquo;vacuum threshold&amp;rdquo;, the table is vacuumed. The vacuum threshold is defined as:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36e61baf56cf296550418400316f60dbb5ee67d4" translate="yes" xml:space="preserve">
          <source>Tables, indexes, and entire databases can be assigned to particular tablespaces. To do so, a user with the &lt;code&gt;CREATE&lt;/code&gt; privilege on a given tablespace must pass the tablespace name as a parameter to the relevant command. For example, the following creates a table in the tablespace &lt;code&gt;space1&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="acfbd87f319e23d10541fda864650877e64e59d1" translate="yes" xml:space="preserve">
          <source>Tables, views, and foreign tables</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b9b3d0eb56fdd1a45491c7eb1ca4007b7dc7c9a" translate="yes" xml:space="preserve">
          <source>Tablespace OID of the relation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46aa83bd623cc70e67c6ad67f254532d3302deb2" translate="yes" xml:space="preserve">
          <source>Tablespace name</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5742d7c8d581e7c014f1cd9c573785f19819876f" translate="yes" xml:space="preserve">
          <source>Tablespace-level options, as &amp;ldquo;keyword=value&amp;rdquo; strings</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff5b9ddf2dd81525ac5b0fb5fcd732fc5c174692" translate="yes" xml:space="preserve">
          <source>Tablespaces</source>
          <target state="translated">Tablespaces</target>
        </trans-unit>
        <trans-unit id="0566d6648625ed8c21950fac6013dc2a7c322afb" translate="yes" xml:space="preserve">
          <source>Tablespaces are only supported on systems that support symbolic links.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0aaf64ac79623942c35083c03c8271d360644b69" translate="yes" xml:space="preserve">
          <source>Tablespaces in PostgreSQL allow database administrators to define locations in the file system where the files representing database objects can be stored. Once created, a tablespace can be referred to by name when creating database objects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd917a29f8fbd91c07f263ba5d895a6b71dba6b9" translate="yes" xml:space="preserve">
          <source>Tablespaces make the scenario more complicated. Each user-defined tablespace has a symbolic link inside the &lt;code&gt;PGDATA&lt;/code&gt;&lt;code&gt;/pg_tblspc&lt;/code&gt; directory, which points to the physical tablespace directory (i.e., the location specified in the tablespace's &lt;code&gt;CREATE TABLESPACE&lt;/code&gt; command). This symbolic link is named after the tablespace's OID. Inside the physical tablespace directory there is a subdirectory with a name that depends on the PostgreSQL server version, such as &lt;code&gt;PG_9.0_201008051&lt;/code&gt;. (The reason for using this subdirectory is so that successive versions of the database can use the same &lt;code&gt;CREATE TABLESPACE&lt;/code&gt; location value without conflicts.) Within the version-specific subdirectory, there is a subdirectory for each database that has elements in the tablespace, named after the database's OID. Tables and indexes are stored within that directory, using the filenode naming scheme. The &lt;code&gt;pg_default&lt;/code&gt; tablespace is not accessed through &lt;code&gt;pg_tblspc&lt;/code&gt;, but corresponds to &lt;code&gt;PGDATA&lt;/code&gt;&lt;code&gt;/base&lt;/code&gt;. Similarly, the &lt;code&gt;pg_global&lt;/code&gt; tablespace is not accessed through &lt;code&gt;pg_tblspc&lt;/code&gt;, but corresponds to &lt;code&gt;PGDATA&lt;/code&gt;&lt;code&gt;/global&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5442fbd8a138a2c29f37122e4c91bd6a144e65e2" translate="yes" xml:space="preserve">
          <source>Tablespaces will in plain format by default be backed up to the same path they have on the server, unless the option &lt;code&gt;--tablespace-mapping&lt;/code&gt; is used. Without this option, running a plain format base backup on the same host as the server will not work if tablespaces are in use, because the backup would have to be written to the same directory locations as the original tablespaces.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e512bd8604d28f711a2c4c4091720bddc0bf947" translate="yes" xml:space="preserve">
          <source>Takahiro Itagaki &lt;code&gt;&amp;lt;&lt;a href=&quot;mailto:itagaki.takahiro@oss.ntt.co.jp&quot;&gt;itagaki.takahiro@oss.ntt.co.jp&lt;/a&gt;&amp;gt;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="586f49cf1c8af0021980a48690d8a585d169be3f" translate="yes" xml:space="preserve">
          <source>Takahiro Itagaki &lt;code&gt;&amp;lt;&lt;a href=&quot;mailto:itagaki.takahiro@oss.ntt.co.jp&quot;&gt;itagaki.takahiro@oss.ntt.co.jp&lt;/a&gt;&amp;gt;&lt;/code&gt;. Query normalization added by Peter Geoghegan &lt;code&gt;&amp;lt;&lt;a href=&quot;mailto:peter@2ndquadrant.com&quot;&gt;peter@2ndquadrant.com&lt;/a&gt;&amp;gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="accb1b2539b3fdc6500ca3822c79474ef77ca532" translate="yes" xml:space="preserve">
          <source>Take a &lt;code&gt;SHARE ROW EXCLUSIVE&lt;/code&gt; lock on a primary key table when going to perform a delete operation:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac578937102b3dd3f7f38602d6d2cc840e122b54" translate="yes" xml:space="preserve">
          <source>Take a base backup as described in &lt;a href=&quot;continuous-archiving#BACKUP-BASE-BACKUP&quot;&gt;Section 25.3.2&lt;/a&gt; to bootstrap the standby server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2879301c4eb4d9d1e7d6db67330e7ae59355bf13" translate="yes" xml:space="preserve">
          <source>Tatsuo Ishii</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd8e3a045ba04b09dff4e4cbd6ff902f5dffb538" translate="yes" xml:space="preserve">
          <source>Tatsuo Ishii, Satoshi Nagayasu and Abhijit Menon-Sen</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbccb82c815d97a0993608659a4544838766b63a" translate="yes" xml:space="preserve">
          <source>Taxicab (L-1 metric) distance between a and b.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58511427183e07e2c3b2df8ed475af878ee43e8f" translate="yes" xml:space="preserve">
          <source>Technically, this is a string parameter, but &lt;code&gt;'immediate'&lt;/code&gt; is currently the only allowed value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40bf99abcfdd4cf6a1ea0376ee685e8dd9ab5654" translate="yes" xml:space="preserve">
          <source>Template Databases</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8bd27170e2bd39031b692cffa7b02ce3c5880bb4" translate="yes" xml:space="preserve">
          <source>Template-specific options can appear in any order.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6d18aa9cc2eabd8da836af0c165b0e969643007" translate="yes" xml:space="preserve">
          <source>Temporarily increasing the &lt;a href=&quot;runtime-config-resource#GUC-MAINTENANCE-WORK-MEM&quot;&gt;maintenance_work_mem&lt;/a&gt; configuration variable when loading large amounts of data can lead to improved performance. This will help to speed up &lt;code&gt;CREATE INDEX&lt;/code&gt; commands and &lt;code&gt;ALTER TABLE ADD FOREIGN KEY&lt;/code&gt; commands. It won't do much for &lt;code&gt;COPY&lt;/code&gt; itself, so this advice is only useful when you are using one or both of the above techniques.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de111f4e645854c1c0eea7f3b866697e9a997eff" translate="yes" xml:space="preserve">
          <source>Temporarily increasing the &lt;a href=&quot;runtime-config-wal#GUC-MAX-WAL-SIZE&quot;&gt;max_wal_size&lt;/a&gt; configuration variable can also make large data loads faster. This is because loading a large amount of data into PostgreSQL will cause checkpoints to occur more often than the normal checkpoint frequency (specified by the &lt;code&gt;checkpoint_timeout&lt;/code&gt; configuration variable). Whenever a checkpoint occurs, all dirty pages must be flushed to disk. By increasing &lt;code&gt;max_wal_size&lt;/code&gt; temporarily during bulk data loads, the number of checkpoints that are required can be reduced.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c40b918a3cfc4101451a319cf4d87a5704133cd3" translate="yes" xml:space="preserve">
          <source>Temporary Tables</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99cabd3d50c1576ad73931fee289cdf596ec3a2d" translate="yes" xml:space="preserve">
          <source>Temporary data files used in larger SQL queries for sorts, materializations and intermediate results are not currently checksummed, nor will WAL records be written for changes to those files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3fa93b64d8c91e537f976333a91885a30ea848b" translate="yes" xml:space="preserve">
          <source>Temporary files (for operations such as sorting more data than can fit in memory) are created within &lt;code&gt;PGDATA&lt;/code&gt;&lt;code&gt;/base/pgsql_tmp&lt;/code&gt;, or within a &lt;code&gt;pgsql_tmp&lt;/code&gt; subdirectory of a tablespace directory if a tablespace other than &lt;code&gt;pg_default&lt;/code&gt; is specified for them. The name of a temporary file has the form &lt;code&gt;pgsql_tmpPPP.NNN&lt;/code&gt;, where &lt;code&gt;PPP&lt;/code&gt; is the PID of the owning backend and &lt;code&gt;NNN&lt;/code&gt; distinguishes different temporary files of that backend.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fc87ee47d688555f67f9d69a8255644efb2bc34" translate="yes" xml:space="preserve">
          <source>Temporary replication slots are created by default if no slot name is given with the option &lt;code&gt;-S&lt;/code&gt; when using log streaming.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fcf5774683387f1179c61f1c3277a10a51bb0558" translate="yes" xml:space="preserve">
          <source>Temporary tables cannot be accessed by autovacuum. Therefore, appropriate vacuum and analyze operations should be performed via session SQL commands.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3ae55a4b420906da4885f0de2385bf7663c4afd" translate="yes" xml:space="preserve">
          <source>Teodor Sigaev (&lt;code&gt;&amp;lt;&lt;a href=&quot;mailto:teodor@stack.net&quot;&gt;teodor@stack.net&lt;/a&gt;&amp;gt;&lt;/code&gt;) and Oleg Bartunov (&lt;code&gt;&amp;lt;&lt;a href=&quot;mailto:oleg@sai.msu.su&quot;&gt;oleg@sai.msu.su&lt;/a&gt;&amp;gt;&lt;/code&gt;). See &lt;a href=&quot;http://www.sai.msu.su/~megera/oddmuse/index.cgi/Gin&quot;&gt;http://www.sai.msu.su/~megera/oddmuse/index.cgi/Gin&lt;/a&gt; for additional information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="614ca58fa223c605393018818d6ca0983b7dc045" translate="yes" xml:space="preserve">
          <source>Teodor Sigaev (&lt;code&gt;&amp;lt;&lt;a href=&quot;mailto:teodor@stack.net&quot;&gt;teodor@stack.net&lt;/a&gt;&amp;gt;&lt;/code&gt;), Oleg Bartunov (&lt;code&gt;&amp;lt;&lt;a href=&quot;mailto:oleg@sai.msu.su&quot;&gt;oleg@sai.msu.su&lt;/a&gt;&amp;gt;&lt;/code&gt;), Janko Richter (&lt;code&gt;&amp;lt;&lt;a href=&quot;mailto:jankorichter@yahoo.de&quot;&gt;jankorichter@yahoo.de&lt;/a&gt;&amp;gt;&lt;/code&gt;), and Paul Jungwirth (&lt;code&gt;&amp;lt;&lt;a href=&quot;mailto:pj@illuminatedcomputing.com&quot;&gt;pj@illuminatedcomputing.com&lt;/a&gt;&amp;gt;&lt;/code&gt;). See &lt;a href=&quot;http://www.sai.msu.su/~megera/postgres/gist/&quot;&gt;http://www.sai.msu.su/~megera/postgres/gist/&lt;/a&gt; for additional information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1082fb686407fee18e8e9accad75ec36ff221c79" translate="yes" xml:space="preserve">
          <source>Teodor Sigaev &lt;code&gt;&amp;lt;&lt;a href=&quot;mailto:teodor@postgrespro.ru&quot;&gt;teodor@postgrespro.ru&lt;/a&gt;&amp;gt;&lt;/code&gt;, Postgres Professional, Moscow, Russia</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f88b3f62d373869f4686eb8646c5ba681379a32e" translate="yes" xml:space="preserve">
          <source>Teodor Sigaev &lt;code&gt;&amp;lt;&lt;a href=&quot;mailto:teodor@sigaev.ru&quot;&gt;teodor@sigaev.ru&lt;/a&gt;&amp;gt;&lt;/code&gt;, Moscow, Delta-Soft Ltd., Russia</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85c83faef031b85db1bcafd781d1666a9772a3a6" translate="yes" xml:space="preserve">
          <source>Teodor Sigaev &lt;code&gt;&amp;lt;&lt;a href=&quot;mailto:teodor@sigaev.ru&quot;&gt;teodor@sigaev.ru&lt;/a&gt;&amp;gt;&lt;/code&gt;, Moscow, Delta-Soft Ltd.,Russia</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40d476fe4615dd56bc1810ee72cb99389bd1638b" translate="yes" xml:space="preserve">
          <source>Terminate a backend. This is also allowed if the calling role is a member of the role whose backend is being terminated or the calling role has been granted &lt;code&gt;pg_signal_backend&lt;/code&gt;, however only superusers can terminate superuser backends.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6d9be054c06942f0be6cacf9ad5c4c3433ef0cd" translate="yes" xml:space="preserve">
          <source>Terminate any session with an open transaction that has been idle for longer than the specified amount of time. This allows any locks held by that session to be released and the connection slot to be reused; it also allows tuples visible only to this transaction to be vacuumed. See &lt;a href=&quot;routine-vacuuming&quot;&gt;Section 24.1&lt;/a&gt; for more details about this.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7a02c4fa75a0a84b914f755cd7ad30ffe74bfbb" translate="yes" xml:space="preserve">
          <source>Terminate replication connections that are inactive for longer than this amount of time. This is useful for the receiving standby server to detect a primary node crash or network outage. If this value is specified without units, it is taken as milliseconds. The default value is 60 seconds. A value of zero disables the timeout mechanism. This parameter can only be set in the &lt;code&gt;postgresql.conf&lt;/code&gt; file or on the server command line.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0916dfcc3ba5084b69509238f11bb3e56039e2bb" translate="yes" xml:space="preserve">
          <source>Terminate replication connections that are inactive for longer than this amount of time. This is useful for the sending server to detect a standby crash or network outage. If this value is specified without units, it is taken as milliseconds. The default value is 60 seconds. A value of zero disables the timeout mechanism.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ba35d6113ddb3ce3217803e6e1ea4ae8ab739dc" translate="yes" xml:space="preserve">
          <source>Test for finite date (not +/-infinity)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cdbbaec2c44fd8a8e4fbb85583894e6e92d607b6" translate="yes" xml:space="preserve">
          <source>Test for finite interval</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7bdb7052bfa8771b8b0c16cd155fce8273ad5994" translate="yes" xml:space="preserve">
          <source>Test for finite time stamp (not +/-infinity)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="445124b559bc599d91ca24fbc59d02791f8fdd14" translate="yes" xml:space="preserve">
          <source>Testing &lt;em&gt;containment&lt;/em&gt; is an important capability of &lt;code&gt;jsonb&lt;/code&gt;. There is no parallel set of facilities for the &lt;code&gt;json&lt;/code&gt; type. Containment tests whether one &lt;code&gt;jsonb&lt;/code&gt; document has contained within it another one. These examples return true except as noted:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55206ed65929de630ecdd306e29ede23e136df2d" translate="yes" xml:space="preserve">
          <source>Testing and Debugging Text Search</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9adf72b80eb55c8c282b8629f001aad1e38691d" translate="yes" xml:space="preserve">
          <source>Tests whether a Boolean condition is &lt;code&gt;unknown&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f2b90b3ef38d55fc55f20750516451be7e841ad" translate="yes" xml:space="preserve">
          <source>Tests whether a path expression matches at least one SQL/JSON item</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f91ce2567933be56838f71a226b10323b36bb421" translate="yes" xml:space="preserve">
          <source>Tests whether the first operand matches the regular expression given by the second operand, optionally with modifications described by a string of &lt;code&gt;flag&lt;/code&gt; characters (see &lt;a href=&quot;functions-json#JSONPATH-REGULAR-EXPRESSIONS&quot;&gt;Section 9.15.2.2&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5a6b53359b18dc1dd69e2ba98d514fa3a02af23" translate="yes" xml:space="preserve">
          <source>Tests whether the second operand is an initial substring of the first operand</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5af2ecb9710946dd29f669e4693e2cb96f8a2ff9" translate="yes" xml:space="preserve">
          <source>Text Format</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6509408ddc376ae9e654513586320c57ba212535" translate="yes" xml:space="preserve">
          <source>Text Search Functions and Operators</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09a84dcc327ab0da236689c47a632005360e9626" translate="yes" xml:space="preserve">
          <source>Text Search Types</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f3f5ba9e6b610bfba59369804390ef76e0150c6" translate="yes" xml:space="preserve">
          <source>Text Search Types: tsquery</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ace1dc60019c8ca3bb8f7e545fdea229a2d5e217" translate="yes" xml:space="preserve">
          <source>Text Search Types: tsvector</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7df0a41fe6e3881c7531b19b48ca62084212826" translate="yes" xml:space="preserve">
          <source>Text Search: !!</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7dcc7beb8d84ba30021a3ab4f9202b7ec2bb4a32" translate="yes" xml:space="preserve">
          <source>Text Search: &amp;amp;&amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d633d5e161e3683b12454ed028be298cbdfeab7" translate="yes" xml:space="preserve">
          <source>Text Search: &amp;lt;-&amp;gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34abdfd10686da1f58e85a2231a52db262595bd5" translate="yes" xml:space="preserve">
          <source>Text Search: &amp;lt;@</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6b900de9fab3b5d4665e677adc16159f823df05" translate="yes" xml:space="preserve">
          <source>Text Search: @&amp;gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18653b67b7c3d615259a3f6b03e0a9db634b9bad" translate="yes" xml:space="preserve">
          <source>Text Search: @@</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b7e5f8b55c4bb8c25ed217ec49c252923864de7" translate="yes" xml:space="preserve">
          <source>Text Search: @@@</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96f6a4b5003d03d2c5e4bca49a6fae66eb9e43e1" translate="yes" xml:space="preserve">
          <source>Text Search: array_to_tsvector</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="193eaeb2812b3700754cec0574846af7e857d324" translate="yes" xml:space="preserve">
          <source>Text Search: get_current_ts_config</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c08c6352a19856ee5cf69366c43242726d39a410" translate="yes" xml:space="preserve">
          <source>Text Search: json_to_tsvector, filter json)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="176da00aff26b6d5b4d6fabe3ac6cf3798c07b6e" translate="yes" xml:space="preserve">
          <source>Text Search: length</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d32a72537a17443ba2cce02360297677c4f4d991" translate="yes" xml:space="preserve">
          <source>Text Search: numnode</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4706e75f5ac0d1588a67f848ad7f00059c2d83b3" translate="yes" xml:space="preserve">
          <source>Text Search: phraseto_tsquery</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd0ad6a06f1e36e21213ad232dff3334c0997120" translate="yes" xml:space="preserve">
          <source>Text Search: plainto_tsquery</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d856130b3ab297c873448c246b2d285074d315a" translate="yes" xml:space="preserve">
          <source>Text Search: querytree</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f4239d92ceb7781e3647a37e2ae75ed5625e33f" translate="yes" xml:space="preserve">
          <source>Text Search: setweight</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96e182e3de30f9ee962a1d90f077aaf4dd742c27" translate="yes" xml:space="preserve">
          <source>Text Search: strip</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ccfac20e3487ee137d540a3c4bdc34e7355ac14a" translate="yes" xml:space="preserve">
          <source>Text Search: to_tsquery</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b4508cc95b9acf23ba68e2ad9fa1ee5cc23f472" translate="yes" xml:space="preserve">
          <source>Text Search: to_tsvector</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b19586eeff198dcba8039d82c0c78b52aabc4217" translate="yes" xml:space="preserve">
          <source>Text Search: to_tsvector)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="694d79b108cb262c323003c4afc9cef1ccb98671" translate="yes" xml:space="preserve">
          <source>Text Search: ts_debug</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bcc23995a523f3caac183feb0ac8c6d54fac6fe4" translate="yes" xml:space="preserve">
          <source>Text Search: ts_delete</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e41f026863bbc7e579fd46602df9f2270010cc1" translate="yes" xml:space="preserve">
          <source>Text Search: ts_filter</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5134d1997c1d30de5b9c728a0f8a4a011ba52437" translate="yes" xml:space="preserve">
          <source>Text Search: ts_headline</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c9cdcc266f4cd773eecb07eb2b2dd4705269f81" translate="yes" xml:space="preserve">
          <source>Text Search: ts_headline, query tsquery )</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07ce61639b93a1cc4003a4b449f2b08b39f9a05a" translate="yes" xml:space="preserve">
          <source>Text Search: ts_lexize</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2750826a3ed4f6bb16f358aed6df1e9aa01b7935" translate="yes" xml:space="preserve">
          <source>Text Search: ts_parse</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6999b160dc39dd0eead2ac6d0d94589216be1cd" translate="yes" xml:space="preserve">
          <source>Text Search: ts_rank</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19446f92f8e2597de8ca3b30ee1cc48452dffa39" translate="yes" xml:space="preserve">
          <source>Text Search: ts_rank_cd</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abfe60e9923cf50c2f8990c4a8f4e50c1552ac56" translate="yes" xml:space="preserve">
          <source>Text Search: ts_rewrite</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16c34017ff0151e0a478b5d74e7a9b093c786420" translate="yes" xml:space="preserve">
          <source>Text Search: ts_stat</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78deb0639e3e3d69cbaf3f18b56bf45175c737ad" translate="yes" xml:space="preserve">
          <source>Text Search: ts_token_type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b944b36345e4dac65010bdde261aed705a982b0" translate="yes" xml:space="preserve">
          <source>Text Search: tsquery_phrase</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c7b08a018ec9f7d2c614fe67d3cc6936323752a" translate="yes" xml:space="preserve">
          <source>Text Search: tsvector_to_array</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f432a1032fe64cd183420781fc008e329048956" translate="yes" xml:space="preserve">
          <source>Text Search: tsvector_update_trigger</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95c1a10437e84ae8ab4b858b1c993b10005c7da0" translate="yes" xml:space="preserve">
          <source>Text Search: tsvector_update_trigger_column</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="763baae781c7b26b846d03309aba2a542c67f876" translate="yes" xml:space="preserve">
          <source>Text Search: unnest</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29d317cac3562666d0a1ba97a9de4f2e87895446" translate="yes" xml:space="preserve">
          <source>Text Search: websearch_to_tsquery</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2513c24801f33876b45a293652317dc173dc1eaf" translate="yes" xml:space="preserve">
          <source>Text Search: ||</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb81ea3c445f5c1813131812c1c1dbed76b96939" translate="yes" xml:space="preserve">
          <source>Text files created by pg_dump are intended to be read in by the psql program. The general command form to restore a dump is</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6118c557f7bc000009d8fb338c20ecce8567ac1a" translate="yes" xml:space="preserve">
          <source>Text of a representative statement</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9aa4f9397ef1fa1bf1c4db350c88d43a977e7b64" translate="yes" xml:space="preserve">
          <source>Text of this backend's most recent query</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a0a6a09423c624adfc0ce2a444da0c13ea6dabb" translate="yes" xml:space="preserve">
          <source>Text of this backend's most recent query. If &lt;code&gt;state&lt;/code&gt; is &lt;code&gt;active&lt;/code&gt; this field shows the currently executing query. In all other states, it shows the last query that was executed. By default the query text is truncated at 1024 characters; this value can be changed via the parameter &lt;a href=&quot;runtime-config-statistics#GUC-TRACK-ACTIVITY-QUERY-SIZE&quot;&gt;track_activity_query_size&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b459859c6dfee5d5d8eb44f5ea13959102568983" translate="yes" xml:space="preserve">
          <source>Text search configuration name</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ec1710d0551a61fb26e76b458f5d15a8e9300fc" translate="yes" xml:space="preserve">
          <source>Text search dictionary name</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02931a8dc1cbcecf3b9caf406df7be9fe6cba819" translate="yes" xml:space="preserve">
          <source>Text search parser name</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b71c0f4d3f48cbada2f53abc14c6823ab537e29" translate="yes" xml:space="preserve">
          <source>Text search parsers and templates are built from low-level C functions; therefore it requires C programming ability to develop new ones, and superuser privileges to install one into a database. (There are examples of add-on parsers and templates in the &lt;code&gt;contrib/&lt;/code&gt; area of the PostgreSQL distribution.) Since dictionaries and configurations just parameterize and connect together some underlying parsers and templates, no special privilege is needed to create a new dictionary or configuration. Examples of creating custom dictionaries and configurations appear later in this chapter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95c083c8f57d3371e5998cf4bd62735fbecf7e8b" translate="yes" xml:space="preserve">
          <source>Text search parsers are responsible for splitting raw document text into &lt;em&gt;tokens&lt;/em&gt; and identifying each token's type, where the set of possible types is defined by the parser itself. Note that a parser does not modify the text at all &amp;mdash; it simply identifies plausible word boundaries. Because of this limited scope, there is less need for application-specific custom parsers than there is for custom dictionaries. At present PostgreSQL provides just one built-in parser, which has been found to be useful for a wide range of applications.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31e4cd3673c9fcbc17219dee97ccb4c37debfd2c" translate="yes" xml:space="preserve">
          <source>Text search template name</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de8e2c968a85099bcb023fe16bec7716271343f5" translate="yes" xml:space="preserve">
          <source>Text similarity using trigram matching</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2625084429ff534ed984d871ad53eb943f796d88" translate="yes" xml:space="preserve">
          <source>Textual search operators have existed in databases for years. PostgreSQL has &lt;code&gt;~&lt;/code&gt;, &lt;code&gt;~*&lt;/code&gt;, &lt;code&gt;LIKE&lt;/code&gt;, and &lt;code&gt;ILIKE&lt;/code&gt; operators for textual data types, but they lack many essential properties required by modern information systems:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c32767e0541fe7038ff8d87e7b8aed17f49474f8" translate="yes" xml:space="preserve">
          <source>Thai</source>
          <target state="translated">Thai</target>
        </trans-unit>
        <trans-unit id="7de93f5a276e3908933588d846e0c9e7fdac70f8" translate="yes" xml:space="preserve">
          <source>That constraint will prevent any overlapping values from existing in the table at the same time:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="faab194ef826baca22c25bee165a44d9807156a4" translate="yes" xml:space="preserve">
          <source>That didn't work either, because now the RE as a whole is non-greedy and so it ends the overall match as soon as possible. We can get what we want by forcing the RE as a whole to be greedy:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52a22e389661a6740133d4e4ad2d3dc74d62fa65" translate="yes" xml:space="preserve">
          <source>That didn't work: the first &lt;code&gt;.*&lt;/code&gt; is greedy so it &amp;ldquo;eats&amp;rdquo; as much as it can, leaving the &lt;code&gt;\d+&lt;/code&gt; to match at the last possible place, the last digit. We might try to fix that by making it non-greedy:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf0d8f0d8bd02f4cabd6683555281783d3c10f0b" translate="yes" xml:space="preserve">
          <source>That is, add up all the frequencies for the MCVs and subtract them from one, then divide by the number of &lt;em&gt;other&lt;/em&gt; distinct values. This amounts to assuming that the fraction of the column that is not any of the MCVs is evenly distributed among all the other distinct values. Notice that there are no null values so we don't have to worry about those (otherwise we'd subtract the null fraction from the numerator as well). The estimated number of rows is then calculated as usual:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46ddb2a2b82cbcf6203c6dd1f8422c623a6c806a" translate="yes" xml:space="preserve">
          <source>That looks safe; there is no window wherein &lt;code&gt;mallory&lt;/code&gt; should be able to see the &amp;ldquo;secret from mallory&amp;rdquo; string. However, there is a race condition here. If &lt;code&gt;mallory&lt;/code&gt; is concurrently doing, say,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d1c394f9c1c71c8b5f650e6551afe32e569cf65" translate="yes" xml:space="preserve">
          <source>That query is actually transformed by the parser to:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c544579b955943216f2982dee933d3718490075" translate="yes" xml:space="preserve">
          <source>That would mean you are a database superuser, which is most likely the case if you installed the PostgreSQL instance yourself. Being a superuser means that you are not subject to access controls. For the purposes of this tutorial that is not important.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6b3f6df803793db61a7f4f009af2325633e5344" translate="yes" xml:space="preserve">
          <source>That's it &amp;mdash; now you can query your log directly. In production, of course, you would need to define some way to deal with log rotation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="214a0563af5e2bb2b039815fa4094c3eceb7d916" translate="yes" xml:space="preserve">
          <source>The &amp;ldquo;Identification Protocol&amp;rdquo; is described in RFC 1413. Virtually every Unix-like operating system ships with an ident server that listens on TCP port 113 by default. The basic functionality of an ident server is to answer questions like &amp;ldquo;What user initiated the connection that goes out of your port &lt;code&gt;X&lt;/code&gt; and connects to my port &lt;code&gt;Y&lt;/code&gt;?&amp;rdquo;. Since PostgreSQL knows both &lt;code&gt;X&lt;/code&gt; and &lt;code&gt;Y&lt;/code&gt; when a physical connection is established, it can interrogate the ident server on the host of the connecting client and can theoretically determine the operating system user for any given connection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69f7b6f0c96644cf05b9e7ecaf27714bacadfef3" translate="yes" xml:space="preserve">
          <source>The &amp;ldquo;autovacuum daemon&amp;rdquo; actually consists of multiple processes. There is a persistent daemon process, called the &lt;em&gt;autovacuum launcher&lt;/em&gt;, which is in charge of starting &lt;em&gt;autovacuum worker&lt;/em&gt; processes for all databases. The launcher will distribute the work across time, attempting to start one worker within each database every &lt;a href=&quot;runtime-config-autovacuum#GUC-AUTOVACUUM-NAPTIME&quot;&gt;autovacuum_naptime&lt;/a&gt; seconds. (Therefore, if the installation has &lt;code&gt;N&lt;/code&gt; databases, a new worker will be launched every &lt;code&gt;autovacuum_naptime&lt;/code&gt;/&lt;code&gt;N&lt;/code&gt; seconds.) A maximum of &lt;a href=&quot;runtime-config-autovacuum#GUC-AUTOVACUUM-MAX-WORKERS&quot;&gt;autovacuum_max_workers&lt;/a&gt; worker processes are allowed to run at the same time. If there are more than &lt;code&gt;autovacuum_max_workers&lt;/code&gt; databases to be processed, the next database will be processed as soon as the first worker finishes. Each worker process will check each table within its database and execute &lt;code&gt;VACUUM&lt;/code&gt; and/or &lt;code&gt;ANALYZE&lt;/code&gt; as needed. &lt;a href=&quot;runtime-config-autovacuum#GUC-LOG-AUTOVACUUM-MIN-DURATION&quot;&gt;log_autovacuum_min_duration&lt;/a&gt; can be set to monitor autovacuum workers' activity.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6e3b42f598f775e409231001c9d7523815d127a" translate="yes" xml:space="preserve">
          <source>The &amp;ldquo;branch&amp;rdquo; output column shows the path of keys taken to reach the current row. The keys are separated by the specified &lt;em&gt;&lt;code&gt;branch_delim&lt;/code&gt;&lt;/em&gt; string. If no branch display is wanted, omit both the &lt;em&gt;&lt;code&gt;branch_delim&lt;/code&gt;&lt;/em&gt; parameter and the branch column in the output column list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7976724c528d95f857de531a1a64cc3f2ed2ee15" translate="yes" xml:space="preserve">
          <source>The &amp;ldquo;escape&amp;rdquo; format is the traditional PostgreSQL format for the &lt;code&gt;bytea&lt;/code&gt; type. It takes the approach of representing a binary string as a sequence of ASCII characters, while converting those bytes that cannot be represented as an ASCII character into special escape sequences. If, from the point of view of the application, representing bytes as characters makes sense, then this representation can be convenient. But in practice it is usually confusing because it fuzzes up the distinction between binary strings and character strings, and also the particular escape mechanism that was chosen is somewhat unwieldy. Therefore, this format should probably be avoided for most new applications.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="affb2b0b14e11a3cd2e0c9f61bf2e82200f35468" translate="yes" xml:space="preserve">
          <source>The &amp;ldquo;hex&amp;rdquo; format encodes binary data as 2 hexadecimal digits per byte, most significant nibble first. The entire string is preceded by the sequence &lt;code&gt;\x&lt;/code&gt; (to distinguish it from the escape format). In some contexts, the initial backslash may need to be escaped by doubling it (see &lt;a href=&quot;sql-syntax-lexical#SQL-SYNTAX-STRINGS&quot;&gt;Section 4.1.2.1&lt;/a&gt;). For input, the hexadecimal digits can be either upper or lower case, and whitespace is permitted between digit pairs (but not within a digit pair nor in the starting &lt;code&gt;\x&lt;/code&gt; sequence). The hex format is compatible with a wide range of external applications and protocols, and it tends to be faster to convert than the escape format, so its use is preferred.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1e7f0d609d4c2cb72dd50b76f7d434b4ee42696" translate="yes" xml:space="preserve">
          <source>The &amp;ldquo;payload&amp;rdquo; string to be communicated along with the notification. This must be specified as a simple string literal. In the default configuration it must be shorter than 8000 bytes. (If binary data or large amounts of information need to be communicated, it's best to put it in a database table and send the key of the record.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f749de0758a44991d9f41367ef0c9c5379f17608" translate="yes" xml:space="preserve">
          <source>The &amp;ldquo;start-up cost&amp;rdquo; is the part of the total scan cost that must be expended before we can begin to fetch the first row. For most indexes this can be taken as zero, but an index type with a high start-up cost might want to set it nonzero.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6eb4561e4b487f0013b8095b316b5bf43f4d7dd" translate="yes" xml:space="preserve">
          <source>The (possibly schema-qualified) name of another table referenced by the constraint. This option is used for foreign-key constraints and is not recommended for general use. This can only be specified for constraint triggers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83f3f02a7f9ae14fe518a481b342195ce7d604c0" translate="yes" xml:space="preserve">
          <source>The (unqualified) name to be used within the trigger for this transition relation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9bba84ac2eaf3595ab5595b6173e241f93e943c0" translate="yes" xml:space="preserve">
          <source>The 1-million-transaction safety margin exists to let the administrator recover without data loss, by manually executing the required &lt;code&gt;VACUUM&lt;/code&gt; commands. However, since the system will not execute commands once it has gone into the safety shutdown mode, the only way to do this is to stop the server and start the server in single-user mode to execute &lt;code&gt;VACUUM&lt;/code&gt;. The shutdown mode is not enforced in single-user mode. See the &lt;a href=&quot;app-postgres&quot;&gt;postgres&lt;/a&gt; reference page for details about using single-user mode.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11a8ccd22a090ad617ccbc158ae498802713ee14" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;app-pg-ctl&quot;&gt;pg_ctl&lt;/a&gt; program provides a convenient interface for sending these signals to shut down the server. Alternatively, you can send the signal directly using &lt;code&gt;kill&lt;/code&gt; on non-Windows systems. The PID of the &lt;code&gt;postgres&lt;/code&gt; process can be found using the &lt;code&gt;ps&lt;/code&gt; program, or from the file &lt;code&gt;postmaster.pid&lt;/code&gt; in the data directory. For example, to do a fast shutdown:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b47733fda252867c3633ae8aed603546f6a06da8" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;app-psql&quot;&gt;psql&lt;/a&gt; program's &lt;code&gt;\db&lt;/code&gt; meta-command is also useful for listing the existing tablespaces.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="144511389e293a310e49e5f366abbd74aec19a42" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;app-psql&quot;&gt;psql&lt;/a&gt; program's &lt;code&gt;\du&lt;/code&gt; meta-command is also useful for listing the existing roles.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="041f95f3db1d27435b39d161c2c343347cf2ceb3" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;app-psql&quot;&gt;psql&lt;/a&gt; program's &lt;code&gt;\l&lt;/code&gt; meta-command and &lt;code&gt;-l&lt;/code&gt; command-line option are also useful for listing the existing databases.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0ea16378e5b904cb3e7c0a0f131af5d9f9cb6cc" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;hstore&quot;&gt;hstore&lt;/a&gt; extension has a cast from &lt;code&gt;hstore&lt;/code&gt; to &lt;code&gt;json&lt;/code&gt;, so that &lt;code&gt;hstore&lt;/code&gt; values converted via the JSON creation functions will be represented as JSON objects, not as primitive string values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f27bdc97580489cfaa7d8d800b925e51bf0ef0ac" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://www.postgresql.org/docs/12/contrib-dblink-function.html&quot;&gt;dblink&lt;/a&gt; function (part of the &lt;a href=&quot;https://www.postgresql.org/docs/12/dblink.html&quot;&gt;dblink&lt;/a&gt; module) executes a remote query. It is declared to return &lt;code&gt;record&lt;/code&gt; since it might be used for any kind of query. The actual column set must be specified in the calling query so that the parser knows, for example, what &lt;code&gt;*&lt;/code&gt; should expand to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fcca203d628312f10551e54654efafdbfa7e32c" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;pgcrypto&quot;&gt;pgcrypto&lt;/a&gt; module allows certain fields to be stored encrypted. This is useful if only some of the data is sensitive. The client supplies the decryption key and the data is decrypted on the server and then sent to the client.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b76198028841bbdfd82b872f404aff5561c3fc8" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;pgupgrade&quot;&gt;pg_upgrade&lt;/a&gt; module allows an installation to be migrated in-place from one major PostgreSQL version to another. Upgrades can be performed in minutes, particularly with &lt;code&gt;--link&lt;/code&gt; mode. It requires steps similar to pg_dumpall above, e.g. starting/stopping the server, running initdb. The pg_upgrade &lt;a href=&quot;pgupgrade&quot;&gt;documentation&lt;/a&gt; outlines the necessary steps.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99161f2083b5230429b584eae782995b02d5d7b5" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;pgvisibility&quot;&gt;pg_visibility&lt;/a&gt; module can be used to examine the information stored in the visibility map.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1a5b080701c78727c19ae01f8d0f7ddf7baf2b5" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;routine-vacuuming#AUTOVACUUM&quot;&gt;autovacuum daemon&lt;/a&gt; cannot access and therefore cannot vacuum or analyze temporary tables. For this reason, appropriate vacuum and analyze operations should be performed via session SQL commands. For example, if a temporary table is going to be used in complex queries, it is wise to run &lt;code&gt;ANALYZE&lt;/code&gt; on the temporary table after it is populated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9613432b17ace5faf7f65dc7e21e1d2b7d892803" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;runtime-config-client#GUC-TIMEZONE&quot;&gt;TimeZone&lt;/a&gt; configuration parameter can be set in the file &lt;code&gt;postgresql.conf&lt;/code&gt;, or in any of the other standard ways described in &lt;a href=&quot;https://www.postgresql.org/docs/12/runtime-config.html&quot;&gt;Chapter 19&lt;/a&gt;. There are also some special ways to set it:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c88a560f10b3c50ec7287bdd7cb6641bec4b949f" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;runtime-config-wal#GUC-ARCHIVE-COMMAND&quot;&gt;archive_command&lt;/a&gt; is only invoked for completed WAL segments. Hence, if your server generates little WAL traffic (or has slack periods where it does so), there could be a long delay between the completion of a transaction and its safe recording in archive storage. To limit how old unarchived data can be, you can set &lt;code&gt;archive_timeout&lt;/code&gt; to force the server to switch to a new WAL segment file periodically. When this parameter is greater than zero, the server will switch to a new segment file whenever this amount of time has elapsed since the last segment file switch, and there has been any database activity, including a single checkpoint (checkpoints are skipped if there is no database activity). Note that archived files that are closed early due to a forced switch are still the same length as completely full files. Therefore, it is unwise to use a very short &lt;code&gt;archive_timeout&lt;/code&gt; &amp;mdash; it will bloat your archive storage. &lt;code&gt;archive_timeout&lt;/code&gt; settings of a minute or so are usually reasonable. You should consider using streaming replication, instead of archiving, if you want data to be copied off the master server more quickly than that. If this value is specified without units, it is taken as seconds. This parameter can only be set in the &lt;code&gt;postgresql.conf&lt;/code&gt; file or on the server command line.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5399f56401bf97d632785b4b8929b530e6e2d8a" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;runtime-config-wal#GUC-COMMIT-DELAY&quot;&gt;commit_delay&lt;/a&gt; parameter defines for how many microseconds a group commit leader process will sleep after acquiring a lock within &lt;code&gt;XLogFlush&lt;/code&gt;, while group commit followers queue up behind the leader. This delay allows other server processes to add their commit records to the WAL buffers so that all of them will be flushed by the leader's eventual sync operation. No sleep will occur if &lt;a href=&quot;runtime-config-wal#GUC-FSYNC&quot;&gt;fsync&lt;/a&gt; is not enabled, or if fewer than &lt;a href=&quot;runtime-config-wal#GUC-COMMIT-SIBLINGS&quot;&gt;commit_siblings&lt;/a&gt; other sessions are currently in active transactions; this avoids sleeping when it's unlikely that any other session will commit soon. Note that on some platforms, the resolution of a sleep request is ten milliseconds, so that any nonzero &lt;code&gt;commit_delay&lt;/code&gt; setting between 1 and 10000 microseconds would have the same effect. Note also that on some platforms, sleep operations may take slightly longer than requested by the parameter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84b33cc182a87456d65b5fb6d81772353bfa0c5a" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;runtime-config-wal#GUC-WAL-SYNC-METHOD&quot;&gt;wal_sync_method&lt;/a&gt; parameter determines how PostgreSQL will ask the kernel to force WAL updates out to disk. All the options should be the same in terms of reliability, with the exception of &lt;code&gt;fsync_writethrough&lt;/code&gt;, which can sometimes force a flush of the disk cache even when other options do not do so. However, it's quite platform-specific which one will be the fastest. You can test the speeds of different options using the &lt;a href=&quot;pgtestfsync&quot;&gt;pg_test_fsync&lt;/a&gt; program. Note that this parameter is irrelevant if &lt;code&gt;fsync&lt;/code&gt; has been turned off.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e72b4863ff3997bef9aca527ca369e356276257b" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;sql-alterdatabase&quot;&gt;ALTER DATABASE&lt;/a&gt; command allows global settings to be overridden on a per-database basis.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c0ec7186a18a07237555b98b7d5c31ff8ec36da" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;sql-alterdefaultprivileges&quot;&gt;ALTER DEFAULT PRIVILEGES&lt;/a&gt; command is used to set default access privileges. The meaning of the privilege display is explained in &lt;a href=&quot;ddl-priv&quot;&gt;Section 5.7&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3f704bdd36eb12f482635a52facda66282ddc34" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;sql-alterrole&quot;&gt;ALTER ROLE&lt;/a&gt; and &lt;a href=&quot;sql-alterdatabase&quot;&gt;ALTER DATABASE&lt;/a&gt; commands are used to define per-role and per-database configuration settings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e108f94237a08c62d8e64461ae3859204755baee" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;sql-alterrole&quot;&gt;ALTER ROLE&lt;/a&gt; command allows both global and per-database settings to be overridden with user-specific values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="195fdcb704ebe40818b9ddf06532a834252f8376" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;sql-drop-owned&quot;&gt;DROP OWNED&lt;/a&gt; command is an alternative that simply drops all the database objects owned by one or more roles.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b923e313b5089841051703b8fc819e1404870767" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;sql-grant&quot;&gt;GRANT&lt;/a&gt; and &lt;a href=&quot;sql-revoke&quot;&gt;REVOKE&lt;/a&gt; commands are used to set access privileges. The meaning of the privilege display is explained in &lt;a href=&quot;ddl-priv&quot;&gt;Section 5.7&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="337453e73263e51bd5484f9f75d637cf6fa2348f" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;sql-reassign-owned&quot;&gt;REASSIGN OWNED&lt;/a&gt; command is an alternative that reassigns the ownership of all the database objects owned by one or more roles. However, &lt;code&gt;REASSIGN OWNED&lt;/code&gt; does not deal with privileges for other objects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32052f448bd0c24564647675d7c7bccf3da94b74" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;sql-revoke&quot;&gt;REVOKE&lt;/a&gt; command is used to revoke access privileges.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="914ad7f44e365f0117e74b7ee5b3f005733493b2" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;sql-security-label&quot;&gt;SECURITY LABEL&lt;/a&gt; statement allows assignment of a security label to a database object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="269a69c635d697de109489390d8de3c484410f96" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;sql-select#SQL-FROM&quot;&gt;&lt;code&gt;FROM&lt;/code&gt; Clause&lt;/a&gt; derives a table from one or more other tables given in a comma-separated table reference list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ce5e0b25e37c625d6441dcfcc9d89a41053fa65" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;sql-select#SQL-GROUPBY&quot;&gt;&lt;code&gt;GROUP BY&lt;/code&gt; Clause&lt;/a&gt; is used to group together those rows in a table that have the same values in all the columns listed. The order in which the columns are listed does not matter. The effect is to combine each set of rows having common values into one group row that represents all rows in the group. This is done to eliminate redundancy in the output and/or compute aggregates that apply to these groups. For instance:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="363c7ac6e0692386d5610ac55d561224210b8a92" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;sql-set&quot;&gt;SET&lt;/a&gt; command allows modification of the current value of those parameters that can be set locally to a session; it has no effect on other sessions. The corresponding function is &lt;code&gt;set_config(setting_name, new_value, is_local)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="185fc2c06409d3c4aabd5fe76eeaa8facbaa2eb1" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;sql-show&quot;&gt;SHOW&lt;/a&gt; command allows inspection of the current value of all parameters. The corresponding function is &lt;code&gt;current_setting(setting_name text)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9db9437c62739b64989fda778dbfe8e3dbe07643" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;!=&lt;/code&gt; operator is converted to &lt;code&gt;&amp;lt;&amp;gt;&lt;/code&gt; in the parser stage. It is not possible to implement &lt;code&gt;!=&lt;/code&gt; and &lt;code&gt;&amp;lt;&amp;gt;&lt;/code&gt; operators that do different things.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4b39879f1c00635679dbf6257789a56ab870c6d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;%I&lt;/code&gt; and &lt;code&gt;%L&lt;/code&gt; format specifiers are particularly useful for safely constructing dynamic SQL statements. See &lt;a href=&quot;https://www.postgresql.org/docs/12/plpgsql-statements.html#PLPGSQL-QUOTE-LITERAL-EXAMPLE&quot;&gt;Example 42.1&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="613196988c221e27fa2ba0fd9b48e90265f53f2d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;%c&lt;/code&gt; escape prints a quasi-unique session identifier, consisting of two 4-byte hexadecimal numbers (without leading zeros) separated by a dot. The numbers are the process start time and the process ID, so &lt;code&gt;%c&lt;/code&gt; can also be used as a space saving way of printing those items. For example, to generate the session identifier from &lt;code&gt;pg_stat_activity&lt;/code&gt;, use this query:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be62a410fba8b688007f925d66c6f0b0239d47a1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;%q&lt;/code&gt; escape is useful when including information that is only available in session (backend) context like user or database name. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0846a3eba9942d2eb08fef499bfe2405f66d139a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;--&lt;/code&gt; options will not work on FreeBSD or OpenBSD. Use &lt;code&gt;-c&lt;/code&gt; instead. This is a bug in the affected operating systems; a future release of PostgreSQL will provide a workaround if this is not fixed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb48a8fd13ffc656f2d3563ef0148faa8767e1f4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;--clean&lt;/code&gt; option can be useful even when your intention is to restore the dump script into a fresh cluster. Use of &lt;code&gt;--clean&lt;/code&gt; authorizes the script to drop and re-create the built-in &lt;code&gt;postgres&lt;/code&gt; and &lt;code&gt;template1&lt;/code&gt; databases, ensuring that those databases will retain the same properties (for instance, locale and encoding) that they had in the source cluster. Without the option, those databases will retain their existing database-level properties, as well as any pre-existing contents.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="130647018e3093894742562a95f803e39af61e68" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;--endpos&lt;/code&gt; option is not aware of transaction boundaries and may truncate output partway through a transaction. Any partially output transaction will not be consumed and will be replayed again when the slot is next read from. Individual messages are never truncated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d789e6215fd5e2a66e4d9dfcc1b5b16821b92fc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;--jobs&lt;/code&gt; option allows multiple CPU cores to be used for copying/linking of files and to dump and reload database schemas in parallel; a good place to start is the maximum of the number of CPU cores and tablespaces. This option can dramatically reduce the time to upgrade a multi-database server running on a multiprocessor machine.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60c0fc2785d87157e1081e9835a3407e37d6052f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;-m&lt;/code&gt; option allows control over &lt;em&gt;how&lt;/em&gt; the server shuts down:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6de6d14022951042a07aec36849186c4f5bfb5b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;-n&lt;/code&gt; and &lt;code&gt;-N&lt;/code&gt; switches have no effect when &lt;code&gt;-t&lt;/code&gt; is used, because tables selected by &lt;code&gt;-t&lt;/code&gt; will be dumped regardless of those switches, and non-table objects will not be dumped.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c021a68434c51a64fadf69148028650f81ac04a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;-n&lt;/code&gt;/&lt;code&gt;--dry-run&lt;/code&gt; option instructs &lt;code&gt;pg_resetwal&lt;/code&gt; to print the values reconstructed from &lt;code&gt;pg_control&lt;/code&gt; and values about to be changed, and then exit without modifying anything. This is mainly a debugging tool, but can be useful as a sanity check before allowing &lt;code&gt;pg_resetwal&lt;/code&gt; to proceed for real.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afbc5026b590cc92ecfafcc8bf05e16decdcee72" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;.affix&lt;/code&gt; file of Ispell has the following structure:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0aaa705ee0fcfa2388ca815156eb97bc745ef75a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;.dict&lt;/code&gt; file looks like the &lt;code&gt;.dict&lt;/code&gt; file of Ispell:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b92e4eb25a1e0875c92022432554fb50cee9d37" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;::&lt;/code&gt;, &lt;code&gt;CAST()&lt;/code&gt;, and function-call syntaxes can also be used to specify run-time type conversions of arbitrary expressions, as discussed in &lt;a href=&quot;sql-expressions#SQL-SYNTAX-TYPE-CASTS&quot;&gt;Section 4.2.9&lt;/a&gt;. To avoid syntactic ambiguity, the &lt;code&gt;type 'string'&lt;/code&gt; syntax can only be used to specify the type of a simple literal constant. Another restriction on the &lt;code&gt;type 'string'&lt;/code&gt; syntax is that it does not work for array types; use &lt;code&gt;::&lt;/code&gt; or &lt;code&gt;CAST()&lt;/code&gt; to specify the type of an array constant.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="218d1743d0cb00c454c40f10c667dcbc5d4724ca" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;:{?name}&lt;/code&gt; special syntax returns TRUE or FALSE depending on whether the variable exists or not, and is thus always substituted, unless the colon is backslash-escaped.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20ec88aea7341643c603b25a4a5e95db36e60cca" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;=&lt;/code&gt; and &lt;code&gt;&amp;lt;&amp;gt;&lt;/code&gt; cases work slightly differently from the others. Two rows are considered equal if all their corresponding members are non-null and equal; the rows are unequal if any corresponding members are non-null and unequal; otherwise the result of the row comparison is unknown (null).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76c364cd99d16fbdee060a1f142838c1f0bb9202" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;@?&lt;/code&gt; and &lt;code&gt;@@&lt;/code&gt; operators suppress the following errors: lacking object field or array element, unexpected JSON item type, and numeric errors. This behavior might be helpful while searching over JSON document collections of varying structure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a2242f98120d8e47de3265a4acf7938f0816abb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;@@&lt;/code&gt; and &lt;code&gt;~~&lt;/code&gt; operators test whether an array satisfies a &lt;em&gt;query&lt;/em&gt;, which is expressed as a value of a specialized data type &lt;code&gt;query_int&lt;/code&gt;. A &lt;em&gt;query&lt;/em&gt; consists of integer values that are checked against the elements of the array, possibly combined using the operators &lt;code&gt;&amp;amp;&lt;/code&gt; (AND), &lt;code&gt;|&lt;/code&gt; (OR), and &lt;code&gt;!&lt;/code&gt; (NOT). Parentheses can be used as needed. For example, the query &lt;code&gt;1&amp;amp;(2|3)&lt;/code&gt; matches arrays that contain 1 and also contain either 2 or 3.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b7dc0f549fc8d4bcaa680825c09ad5a95a8ca20" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;@@&lt;/code&gt; operator also supports &lt;code&gt;text&lt;/code&gt; input, allowing explicit conversion of a text string to &lt;code&gt;tsvector&lt;/code&gt; or &lt;code&gt;tsquery&lt;/code&gt; to be skipped in simple cases. The variants available are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30895671a21d77017876ea7eed20dcf436e9f5da" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;@INCLUDE&lt;/code&gt; syntax allows inclusion of another file in the &lt;code&gt;.../share/timezonesets/&lt;/code&gt; directory. Inclusion can be nested, to a limited depth.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d73f7fb2569c1bf7198e289506cf390d52263021" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;@OVERRIDE&lt;/code&gt; syntax indicates that subsequent entries in the file can override previous entries (typically, entries obtained from included files). Without this, conflicting definitions of the same timezone abbreviation are considered an error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ce7ae779cc4c96e9d85dc3b91172987fc826c9c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ADD ATTRIBUTE&lt;/code&gt;, &lt;code&gt;DROP ATTRIBUTE&lt;/code&gt;, and &lt;code&gt;ALTER ATTRIBUTE&lt;/code&gt; actions can be combined into a list of multiple alterations to apply in parallel. For example, it is possible to add several attributes and/or alter the type of several attributes in a single command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c82109d40f6d847786413ac572aab290b0770b4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ADD MAPPING FOR&lt;/code&gt; form installs a list of dictionaries to be consulted for the specified token type(s); it is an error if there is already a mapping for any of the token types. The &lt;code&gt;ALTER MAPPING FOR&lt;/code&gt; form does the same, but first removing any existing mapping for those token types. The &lt;code&gt;ALTER MAPPING REPLACE&lt;/code&gt; forms substitute &lt;code&gt;new_dictionary&lt;/code&gt; for &lt;code&gt;old_dictionary&lt;/code&gt; anywhere the latter appears. This is done for only the specified token types when &lt;code&gt;FOR&lt;/code&gt; appears, or for all mappings of the configuration when it doesn't. The &lt;code&gt;DROP MAPPING&lt;/code&gt; form removes all dictionaries for the specified token type(s), causing tokens of those types to be ignored by the text search configuration. It is an error if there is no mapping for the token types, unless &lt;code&gt;IF EXISTS&lt;/code&gt; appears.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4265f388b14c9bc45f67ecc3a11ed01719e3bf45" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ADMIN&lt;/code&gt; clause is like &lt;code&gt;ROLE&lt;/code&gt;, but the named roles are added to the new role &lt;code&gt;WITH ADMIN OPTION&lt;/code&gt;, giving them the right to grant membership in this role to others.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d95ee8a0a7e97df569ab0bc6a3b70b2476a22d5d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ALTER DATABASE&lt;/code&gt; statement is a PostgreSQL extension.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82e96a243c3b3c45f817dbbcc38562dae8379f22" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ALTER ROLE&lt;/code&gt; statement is a PostgreSQL extension.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a7e4c13b470262479973c6bd7c44308acb43aa5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ALTER SYSTEM&lt;/code&gt; statement is a PostgreSQL extension.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86d3bef8a210b09d96afd110f16f5de67d4ca1c7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ALTER TABLE&lt;/code&gt; method requires an exclusive lock on the table, but does not result in bloating the table with old row versions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c6e0be8824e92ed0cf7a61a96c4d893ffd4b297" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ALTER USER&lt;/code&gt; statement is a PostgreSQL extension. The SQL standard leaves the definition of users to the implementation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d04bc7f32a809cba3ceefbc64223f38d2bcaedda" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ANALYZE&lt;/code&gt; option causes the statement to be actually executed, not only planned. Then actual run time statistics are added to the display, including the total elapsed time expended within each plan node (in milliseconds) and the total number of rows it actually returned. This is useful for seeing whether the planner's estimates are close to reality.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2e677d360502253ce0ba5dcaac208672ce955e6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ARRAY&lt;/code&gt; constructor syntax (see &lt;a href=&quot;sql-expressions#SQL-SYNTAX-ARRAY-CONSTRUCTORS&quot;&gt;Section 4.2.12&lt;/a&gt;) is often easier to work with than the array-literal syntax when writing array values in SQL commands. In &lt;code&gt;ARRAY&lt;/code&gt;, individual element values are written the same way they would be written when not members of an array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a14756a4782980d192f1e9c9b815bed9eb64adea" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ARRAY&lt;/code&gt; constructor syntax can also be used:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c709ef97abf25019a718b3b56ecc90d8da643f8d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;AS&lt;/code&gt; clause defines the names and types of the columns in the output table. The first is the &amp;ldquo;key&amp;rdquo; field and the rest correspond to the XPath queries. If there are more XPath queries than result columns, the extra queries will be ignored. If there are more result columns than XPath queries, the extra columns will be NULL.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="614608ef47ca44f29dec326a00fbdc8845ddc5d4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;AS&lt;/code&gt; key word is optional noise. &lt;code&gt;alias&lt;/code&gt; can be any identifier.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="570aa62b83c7e1ef7c13882b42b310d6df5c71f8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;AS&lt;/code&gt; keyword is optional, but only if the new column name does not match any PostgreSQL keyword (see &lt;a href=&quot;sql-keywords-appendix&quot;&gt;Appendix C&lt;/a&gt;). To avoid an accidental match to a keyword, you can double-quote the column name. For example, &lt;code&gt;VALUE&lt;/code&gt; is a keyword, so this does not work:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5c9d334e13b1cff2797d1f5d42bdd83891085f5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;AT TIME ZONE&lt;/code&gt; converts time stamp &lt;em&gt;without time zone&lt;/em&gt; to/from time stamp &lt;em&gt;with time zone&lt;/em&gt;, and &lt;em&gt;time&lt;/em&gt; values to different time zones. &lt;a href=&quot;functions-datetime#FUNCTIONS-DATETIME-ZONECONVERT-TABLE&quot;&gt;Table 9.32&lt;/a&gt; shows its variants.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ddb589e9d98058f974226b1de568ed89b19b1b8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;BERNOULLI&lt;/code&gt; and &lt;code&gt;SYSTEM&lt;/code&gt; sampling methods each accept a single &lt;code&gt;argument&lt;/code&gt; which is the fraction of the table to sample, expressed as a percentage between 0 and 100. This argument can be any &lt;code&gt;real&lt;/code&gt;-valued expression. (Other sampling methods might accept more or different arguments.) These two methods each return a randomly-chosen sample of the table that will contain approximately the specified percentage of the table's rows. The &lt;code&gt;BERNOULLI&lt;/code&gt; method scans the whole table and selects or ignores individual rows independently with the specified probability. The &lt;code&gt;SYSTEM&lt;/code&gt; method does block-level sampling with each block having the specified chance of being selected; all rows in each selected block are returned. The &lt;code&gt;SYSTEM&lt;/code&gt; method is significantly faster than the &lt;code&gt;BERNOULLI&lt;/code&gt; method when small sampling percentages are specified, but it may return a less-random sample of the table as a result of clustering effects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="571b957d3f7fab3d793660465b9a0e13866265c4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;BETWEEN&lt;/code&gt; predicate simplifies range tests:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f58a6da12682bf61030340725b9a30308528c8b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;BY REF&lt;/code&gt; and &lt;code&gt;BY VALUE&lt;/code&gt; clauses are accepted in PostgreSQL, but are ignored, as discussed in &lt;a href=&quot;xml-limits-conformance#FUNCTIONS-XML-LIMITS-POSTGRESQL&quot;&gt;Section D.3.2&lt;/a&gt;. In the SQL standard, the &lt;code&gt;xmlexists&lt;/code&gt; function evaluates an expression in the XML Query language, but PostgreSQL allows only an XPath 1.0 expression, as discussed in &lt;a href=&quot;xml-limits-conformance#FUNCTIONS-XML-LIMITS-XPATH1&quot;&gt;Section D.3.1&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d361ee74863162af2cdbb6997f13ac466116d12" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CAST()&lt;/code&gt; syntax conforms to SQL. The &lt;code&gt;type 'string'&lt;/code&gt; syntax is a generalization of the standard: SQL specifies this syntax only for a few data types, but PostgreSQL allows it for all types. The syntax with &lt;code&gt;::&lt;/code&gt; is historical PostgreSQL usage, as is the function-call syntax.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c70a0f6972b720eea25e301d502be637e2846f5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CAST&lt;/code&gt; syntax conforms to SQL; the syntax with &lt;code&gt;::&lt;/code&gt; is historical PostgreSQL usage.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4973e32927f37539b48f144b25ebc1cbe9dd3ee8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CHECK OPTION&lt;/code&gt; may not be used with &lt;code&gt;RECURSIVE&lt;/code&gt; views.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1dc23a20dcd6904900cc7a9feb49a2ad7ab05c12" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CHECK&lt;/code&gt; clause specifies an expression producing a Boolean result which each row in the foreign table is expected to satisfy; that is, the expression should produce TRUE or UNKNOWN, never FALSE, for all rows in the foreign table. A check constraint specified as a column constraint should reference that column's value only, while an expression appearing in a table constraint can reference multiple columns.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1cf02ad28fb264c5a37f3c6cdfecd073618b093" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CHECK&lt;/code&gt; clause specifies an expression producing a Boolean result which new or updated rows must satisfy for an insert or update operation to succeed. Expressions evaluating to TRUE or UNKNOWN succeed. Should any row of an insert or update operation produce a FALSE result, an error exception is raised and the insert or update does not alter the database. A check constraint specified as a column constraint should reference that column's value only, while an expression appearing in a table constraint can reference multiple columns.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b41ba615aba0591ab80e7fe6b54632defabd08a1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CHECKPOINT&lt;/code&gt; command forces an immediate checkpoint when the command is issued, without waiting for a regular checkpoint scheduled by the system (controlled by the settings in &lt;a href=&quot;runtime-config-wal#RUNTIME-CONFIG-WAL-CHECKPOINTS&quot;&gt;Section 19.5.2&lt;/a&gt;). &lt;code&gt;CHECKPOINT&lt;/code&gt; is not intended for use during normal operation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb8bf5bd6d3a91c1dd7356bcc64f2834c5842703" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CHECKPOINT&lt;/code&gt; command is a PostgreSQL language extension.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d7f2538136f2f5eb3180ad5eaeb2e7f06dbaab5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;COALESCE&lt;/code&gt; function returns the first of its arguments that is not null. Null is returned only if all arguments are null. It is often used to substitute a default value for null values when data is retrieved for display, for example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19ae97f9e5f98371a99a56a7b6e3d462bf222143" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;COLLATE&lt;/code&gt; clause assigns a collation to the column (which must be of a collatable data type). If not specified, the column data type's default collation is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fcd6b0e43a1d2817c2d32c1ebf44d3b4c6a3e75e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;COLLATE&lt;/code&gt; clause overrides the collation of an expression. It is appended to the expression it applies to:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65f26ae6ee51182f66d012e018d2f6eb6c70e87f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CONNECTION LIMIT&lt;/code&gt; option is only enforced approximately; if two new sessions start at about the same time when just one connection &amp;ldquo;slot&amp;rdquo; remains for the database, it is possible that both will fail. Also, the limit is not enforced against superusers or background worker processes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="062c5f519a335dcd49bb329faac889a19968f3da" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CONNECTION LIMIT&lt;/code&gt; option is only enforced approximately; if two new sessions start at about the same time when just one connection &amp;ldquo;slot&amp;rdquo; remains for the role, it is possible that both will fail. Also, the limit is never enforced for superusers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b32ed065648439d92b413e5fb3a8ea0f7b10faa" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CREATE CAST&lt;/code&gt; command conforms to the SQL standard, except that SQL does not make provisions for binary-coercible types or extra arguments to implementation functions. &lt;code&gt;AS IMPLICIT&lt;/code&gt; is a PostgreSQL extension, too.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="187598f79a62101321433db8a06ecc28f8a5aa54" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CREATE FOREIGN TABLE&lt;/code&gt; command largely conforms to the SQL standard; however, much as with &lt;a href=&quot;sql-createtable&quot;&gt;&lt;code&gt;CREATE TABLE&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;NULL&lt;/code&gt; constraints and zero-column foreign tables are permitted. The ability to specify column default values is also a PostgreSQL extension. Table inheritance, in the form defined by PostgreSQL, is nonstandard.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="917995eb679e93500c01bc0f518d9ec79725c204" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CREATE POLICY&lt;/code&gt; command defines a new row-level security policy for a table. Note that row-level security must be enabled on the table (using &lt;code&gt;ALTER TABLE ... ENABLE ROW LEVEL SECURITY&lt;/code&gt;) in order for created policies to be applied.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5dbac1a8440c8b3a793203fdc06c7059beb8e7a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CREATE ROLE&lt;/code&gt; statement is in the SQL standard, but the standard only requires the syntax</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d49c3d0cb3b8508e9c64a962d3f2df4b9348351f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CREATE TABLE&lt;/code&gt; command conforms to the SQL standard, with exceptions listed below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34346c5bcbf247853dd2537a0fa4acf0314be750" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CREATE TRIGGER&lt;/code&gt; statement in PostgreSQL implements a subset of the SQL standard. The following functionalities are currently missing:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8927a97783e527d921492294ca03418cc7bc609" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CREATE USER&lt;/code&gt; statement is a PostgreSQL extension. The SQL standard leaves the definition of users to the implementation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b56c90fb34729328b141dbd1bf882954ed24239b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CSV&lt;/code&gt; format has no standard way to distinguish a &lt;code&gt;NULL&lt;/code&gt; value from an empty string. PostgreSQL's &lt;code&gt;COPY&lt;/code&gt; handles this by quoting. A &lt;code&gt;NULL&lt;/code&gt; is output as the &lt;code&gt;NULL&lt;/code&gt; parameter string and is not quoted, while a non-&lt;code&gt;NULL&lt;/code&gt; value matching the &lt;code&gt;NULL&lt;/code&gt; parameter string is quoted. For example, with the default settings, a &lt;code&gt;NULL&lt;/code&gt; is written as an unquoted empty string, while an empty string data value is written with double quotes (&lt;code&gt;&quot;&quot;&lt;/code&gt;). Reading values follows similar rules. You can use &lt;code&gt;FORCE_NOT_NULL&lt;/code&gt; to prevent &lt;code&gt;NULL&lt;/code&gt; input comparisons for specific columns. You can also use &lt;code&gt;FORCE_NULL&lt;/code&gt; to convert quoted null string data values to &lt;code&gt;NULL&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27848105f531dba37df61e0f599a930d7894c235" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CUBE&lt;/code&gt; and &lt;code&gt;ROLLUP&lt;/code&gt; constructs can be used either directly in the &lt;code&gt;GROUP BY&lt;/code&gt; clause, or nested inside a &lt;code&gt;GROUPING SETS&lt;/code&gt; clause. If one &lt;code&gt;GROUPING SETS&lt;/code&gt; clause is nested inside another, the effect is the same as if all the elements of the inner clause had been written directly in the outer clause.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba5e1541f9b1c331ac56a62a8908b7b233dd2a63" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CYCLE&lt;/code&gt; option allows the sequence to wrap around when the &lt;code&gt;maxvalue&lt;/code&gt; or &lt;code&gt;minvalue&lt;/code&gt; has been reached by an ascending or descending sequence respectively. If the limit is reached, the next number generated will be the &lt;code&gt;minvalue&lt;/code&gt; or &lt;code&gt;maxvalue&lt;/code&gt;, respectively.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b03d1a3fd7d158ee818f8642d4498091ab340a59" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DEFAULT&lt;/code&gt; and &lt;code&gt;RESET&lt;/code&gt; forms reset the session and current user identifiers to be the originally authenticated user name. These forms can be executed by any user.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96ebdb068b4855814e051da0ab472b47b8e1e75d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DEFAULT&lt;/code&gt; clause assigns a default data value for the column whose column definition it appears within. The value is any variable-free expression (in particular, cross-references to other columns in the current table are not allowed). Subqueries are not allowed either. The data type of the default expression must match the data type of the column.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15b298180cf301dcc422f08d525602e45df91867" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DEFAULT&lt;/code&gt; clause assigns a default data value for the column whose column definition it appears within. The value is any variable-free expression (subqueries and cross-references to other columns in the current table are not allowed). The data type of the default expression must match the data type of the column.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d20c2b5065e9f732563e6d5c0614edee39f93e17" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DEFAULT&lt;/code&gt; clause indicates that this conversion is the default for this particular source to destination encoding. There should be only one default encoding in a schema for the encoding pair.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a609d2e53efa3c746223bd6d1fa685e36d7c5fb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DEFAULT&lt;/code&gt; clause specifies a default value for columns of the domain data type. The value is any variable-free expression (but subqueries are not allowed). The data type of the default expression must match the data type of the domain. If no default value is specified, then the default value is the null value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f90ae9cfb7477e295a6a04f820259e7d83d6550" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DEFERRABLE&lt;/code&gt; transaction property has no effect unless the transaction is also &lt;code&gt;SERIALIZABLE&lt;/code&gt; and &lt;code&gt;READ ONLY&lt;/code&gt;. When all three of these properties are selected for a transaction, the transaction may block when first acquiring its snapshot, after which it is able to run without the normal overhead of a &lt;code&gt;SERIALIZABLE&lt;/code&gt; transaction and without any risk of contributing to or being canceled by a serialization failure. This mode is well suited for long-running reports or backups.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47fbcdc5947ad1b3ef7ef06deb64e49ce2369a35" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DEFERRABLE&lt;/code&gt;&lt;code&gt;transaction_mode&lt;/code&gt; is a PostgreSQL language extension.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f66a213e419ed48c08ff0291b264323bc02332e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DELETE&lt;/code&gt; will have no effect even though there is a &lt;code&gt;website.hits = 10&lt;/code&gt; row before and after the &lt;code&gt;UPDATE&lt;/code&gt;. This occurs because the pre-update row value &lt;code&gt;9&lt;/code&gt; is skipped, and when the &lt;code&gt;UPDATE&lt;/code&gt; completes and &lt;code&gt;DELETE&lt;/code&gt; obtains a lock, the new row value is no longer &lt;code&gt;10&lt;/code&gt; but &lt;code&gt;11&lt;/code&gt;, which no longer matches the criteria.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b30c741a4b6acac36c3c1f49255bfc747dff96b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DEPENDS ON EXTENSION&lt;/code&gt; form marks the materialized view as dependent on an extension, such that the materialized view will automatically be dropped if the extension is dropped.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee755c1de2060e56203798a2286c488803c96944" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DISTINCT ON&lt;/code&gt; clause is not part of the SQL standard and is sometimes considered bad style because of the potentially indeterminate nature of its results. With judicious use of &lt;code&gt;GROUP BY&lt;/code&gt; and subqueries in &lt;code&gt;FROM&lt;/code&gt;, this construct can be avoided, but it is often the most convenient alternative.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8263d90ff6ffdae1372239c757291f48e712a876" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DISTINCT ON&lt;/code&gt; expression(s) must match the leftmost &lt;code&gt;ORDER BY&lt;/code&gt; expression(s). The &lt;code&gt;ORDER BY&lt;/code&gt; clause will normally contain additional expression(s) that determine the desired precedence of rows within each &lt;code&gt;DISTINCT ON&lt;/code&gt; group.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44806e39c2022da7c6348cbee79866dd830d6678" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DROP CAST&lt;/code&gt; command conforms to the SQL standard.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f14ad5d45be2726fe2c215fbfcdcda187612c03b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DROP COLLATION&lt;/code&gt; command conforms to the SQL standard, apart from the &lt;code&gt;IF EXISTS&lt;/code&gt; option, which is a PostgreSQL extension.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b716fa2947bc8274f82c911c00d79b442281591" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DROP COLUMN&lt;/code&gt; form does not physically remove the column, but simply makes it invisible to SQL operations. Subsequent insert and update operations in the table will store a null value for the column. Thus, dropping a column is quick but it will not immediately reduce the on-disk size of your table, as the space occupied by the dropped column is not reclaimed. The space will be reclaimed over time as existing rows are updated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6145d898e7e666ea7b82181b35386eff8e943642" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DROP OWNED&lt;/code&gt; command is a PostgreSQL extension.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="958d248668cd8315457da47d07fa5a9121607f5a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DROP TRIGGER&lt;/code&gt; statement in PostgreSQL is incompatible with the SQL standard. In the SQL standard, trigger names are not local to tables, so the command is simply &lt;code&gt;DROP TRIGGER name&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32ebe00e2f6bc9c860af0307e68495e786a216ca" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DROP USER&lt;/code&gt; statement is a PostgreSQL extension. The SQL standard leaves the definition of users to the implementation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4895a1ee67fd5261253d3006ec43de9052ff83a6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;EXCEPT&lt;/code&gt; clause has this general form:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53587bd6a69d2af3b71efe62992f03f5ab23d877" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;EXCEPT&lt;/code&gt; operator computes the set of rows that are in the result of the left &lt;code&gt;SELECT&lt;/code&gt; statement but not in the result of the right one.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39954f4150bc5ded7310764e89ef32cdf830e19c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;EXCLUDE&lt;/code&gt; clause defines an exclusion constraint, which guarantees that if any two rows are compared on the specified column(s) or expression(s) using the specified operator(s), not all of these comparisons will return &lt;code&gt;TRUE&lt;/code&gt;. If all of the specified operators test for equality, this is equivalent to a &lt;code&gt;UNIQUE&lt;/code&gt; constraint, although an ordinary unique constraint will be faster. However, exclusion constraints can specify constraints that are more general than simple equality. For example, you can specify a constraint that no two rows in the table contain overlapping circles (see &lt;a href=&quot;datatype-geometric&quot;&gt;Section 8.8&lt;/a&gt;) by using the &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt; operator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d05f597aad03abfc46ad2fda9a47250135456bc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;EXCLUDE&lt;/code&gt; constraint type is a PostgreSQL extension.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ef31faef2ced2929c428f4e11e5e16c8210dea0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Execution time&lt;/code&gt; shown by &lt;code&gt;EXPLAIN ANALYZE&lt;/code&gt; includes executor start-up and shut-down time, as well as the time to run any triggers that are fired, but it does not include parsing, rewriting, or planning time. Time spent executing &lt;code&gt;BEFORE&lt;/code&gt; triggers, if any, is included in the time for the related Insert, Update, or Delete node; but time spent executing &lt;code&gt;AFTER&lt;/code&gt; triggers is not counted there because &lt;code&gt;AFTER&lt;/code&gt; triggers are fired after completion of the whole plan. The total time spent in each trigger (either &lt;code&gt;BEFORE&lt;/code&gt; or &lt;code&gt;AFTER&lt;/code&gt;) is also shown separately. Note that deferred constraint triggers will not be executed until end of transaction and are thus not considered at all by &lt;code&gt;EXPLAIN ANALYZE&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ae6e95540d22517d9811c9ef931b02dd140cfce" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;FETCH&lt;/code&gt; forms involving &lt;code&gt;FORWARD&lt;/code&gt; and &lt;code&gt;BACKWARD&lt;/code&gt;, as well as the forms &lt;code&gt;FETCH count&lt;/code&gt; and &lt;code&gt;FETCH ALL&lt;/code&gt;, in which &lt;code&gt;FORWARD&lt;/code&gt; is implicit, are PostgreSQL extensions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73dfff30b656da6fc9301e9d60e5d477ad1f8673" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;FOR UPDATE&lt;/code&gt; lock mode is also acquired by any &lt;code&gt;DELETE&lt;/code&gt; on a row, and also by an &lt;code&gt;UPDATE&lt;/code&gt; that modifies the values on certain columns. Currently, the set of columns considered for the &lt;code&gt;UPDATE&lt;/code&gt; case are those that have a unique index on them that can be used in a foreign key (so partial indexes and expressional indexes are not considered), but this may change in the future.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="331b0e81a9e755c3a0e45ecf0ec49020dc596e7a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;FROM&lt;/code&gt; clause can contain the following elements:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33f40d521a946b2dec0d730c44a73f3bb8392cb2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;FROM&lt;/code&gt; clause must define the output as one &lt;code&gt;row_name&lt;/code&gt; column (of the same data type as the first result column of the SQL query) followed by N &lt;code&gt;value&lt;/code&gt; columns (all of the same data type as the third result column of the SQL query). You can set up as many output value columns as you wish. The names of the output columns are up to you.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e92c609479b0621a0fc990292248501743a4d3fb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;FROM&lt;/code&gt; clause must define the proper number of output columns of the proper data types. If there are &lt;code&gt;N&lt;/code&gt; columns in the &lt;em&gt;&lt;code&gt;source_sql&lt;/code&gt;&lt;/em&gt; query's result, the first &lt;code&gt;N&lt;/code&gt;-2 of them must match up with the first &lt;code&gt;N&lt;/code&gt;-2 output columns. The remaining output columns must have the type of the last column of the &lt;em&gt;&lt;code&gt;source_sql&lt;/code&gt;&lt;/em&gt; query's result, and there must be exactly as many of them as there are rows in the &lt;em&gt;&lt;code&gt;category_sql&lt;/code&gt;&lt;/em&gt; query's result.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14bc91205c368d8f257ab9f701c65d7558eeaba7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;FROM&lt;/code&gt; clause specifies one or more source tables for the &lt;code&gt;SELECT&lt;/code&gt;. If multiple sources are specified, the result is the Cartesian product (cross join) of all the sources. But usually qualification conditions are added (via &lt;code&gt;WHERE&lt;/code&gt;) to restrict the returned rows to a small subset of the Cartesian product.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8313aa4c308ea39cfdceb940bf96c5903be8aa0c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;FULL&lt;/code&gt; option is not recommended for routine use, but might be useful in special cases. An example is when you have deleted or updated most of the rows in a table and would like the table to physically shrink to occupy less disk space and allow faster table scans. &lt;code&gt;VACUUM FULL&lt;/code&gt; will usually shrink the table more than a plain &lt;code&gt;VACUUM&lt;/code&gt; would.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86d3075313d2af14321def3b31e24ee35c8613b9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;FUNCTION&lt;/code&gt; syntax works for plain functions, aggregate functions, and window functions, but not for procedures; use &lt;code&gt;PROCEDURE&lt;/code&gt; for those. Alternatively, use &lt;code&gt;ROUTINE&lt;/code&gt; to refer to a function, aggregate function, window function, or procedure regardless of its precise type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="891e1ca441e57fd00db2b454308f10eee7754380" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;GRANT&lt;/code&gt; command has two basic variants: one that grants privileges on a database object (table, column, view, foreign table, sequence, database, foreign-data wrapper, foreign server, function, procedure, procedural language, schema, or tablespace), and one that grants membership in a role. These variants are similar in many ways, but they are different enough to be described separately.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="977eda311d1d79116b5b2c2b5a0874f5382d192d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;GREATEST&lt;/code&gt; and &lt;code&gt;LEAST&lt;/code&gt; functions select the largest or smallest value from a list of any number of expressions. The expressions must all be convertible to a common data type, which will be the type of the result (see &lt;a href=&quot;typeconv-union-case&quot;&gt;Section 10.5&lt;/a&gt; for details). NULL values in the list are ignored. The result will be NULL only if all the expressions evaluate to NULL.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be0fc3f52ed935023eedfa0731ed1d21af66f490" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;IF EXISTS&lt;/code&gt; option</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57bce4e9bdfa25f76d925fb142ebe6e3e8f8396d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;IF NOT EXISTS&lt;/code&gt; option is a PostgreSQL extension.</source>
          <target state="new"/>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
