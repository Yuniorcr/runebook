<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="codeceptjs">
    <body>
      <group id="codeceptjs">
        <trans-unit id="f9d366753130a797503641b31af3eec7ba674378" translate="yes" xml:space="preserve">
          <source>&amp;copy; 2015 DavertMik &amp;lt;davert@codegyre.com&amp;gt; (http://codegyre.com)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="809b26c648718c6c675c012bbac2092d50f85e68" translate="yes" xml:space="preserve">
          <source>(Don't copy-paste this config, it's just demo)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfbfda5f2b83c5a7c7a7a31e8f77d37245293ed8" translate="yes" xml:space="preserve">
          <source>(If you already have CodeceptJS project, just install nightmare globally or locally and enable it in config)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8283858bcc3b177526d6494d3473232c4198308" translate="yes" xml:space="preserve">
          <source>(default)</source>
          <target state="translated">(default)</target>
        </trans-unit>
        <trans-unit id="9d74cf768f8462e3e6baac9fac404302ab757dfa" translate="yes" xml:space="preserve">
          <source>(due to &lt;a href=&quot;https://github.com/GoogleChrome/puppeteer/issues/375&quot;&gt;this issue in Puppeteer&lt;/a&gt;, we install it locally)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62f6d6ad4f7c0791cc621fce036892314755ba52" translate="yes" xml:space="preserve">
          <source>(optionally) To enable allure plugin permanently include &lt;code&gt;&quot;enabled&quot;: true&lt;/code&gt; into plugin config:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1be21a6d295a562f4ea23297b5b75a3d452d949c" translate="yes" xml:space="preserve">
          <source>(recommended)</source>
          <target state="translated">(recommended)</target>
        </trans-unit>
        <trans-unit id="dd3cfa1e9ff3b199ebed772baad0515e4de7eeb5" translate="yes" xml:space="preserve">
          <source>(use &lt;code&gt;node node_modules/.bin/codeceptjs&lt;/code&gt; on Windows)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba82c4e2d45553543b4fd361a10813ab64160c3e" translate="yes" xml:space="preserve">
          <source>- &lt;code&gt;field&lt;/code&gt; checkbox located by label</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5e623d2eb1714fd13581f071107b561f3baa5ee" translate="yes" xml:space="preserve">
          <source>- &lt;code&gt;locator&lt;/code&gt; clickable link or button located by text, or any element located by CSS</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bba042ad7c81555c1ca3146344e3bd8cc7f488fa" translate="yes" xml:space="preserve">
          <source>1) Failing if JS error occur in WebDriverIO:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c48f2c3188c01a805411f0d434213cd4178bf11" translate="yes" xml:space="preserve">
          <source>1) Install CodeceptJS with Puppeteer</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54f7443ea9aa91dfd8744a20bc5ac99de9dfa799" translate="yes" xml:space="preserve">
          <source>1) Install CodeceptJS with webdriverio library</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3dbca386b3bf4c0c03ea3c64d065f726c26a64b7" translate="yes" xml:space="preserve">
          <source>1. Installation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8bda1baa0daad79c66a37ac628338a3fc25a7e9" translate="yes" xml:space="preserve">
          <source>2) Initialize CodeceptJS in current directory by running:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b4b881b9dd2e1223fdb6f7d24a8fdf0e13d1036" translate="yes" xml:space="preserve">
          <source>2) Wait for Ajax requests to complete after &lt;code&gt;click&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76e19bd58244c532532adae5df6fa037207625cd" translate="yes" xml:space="preserve">
          <source>2. Creating a Test</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c292809db58355cb2bc6d5220d422a7726bd1128" translate="yes" xml:space="preserve">
          <source>3) Answer questions. Agree on defaults, when asked to select helpers choose &lt;strong&gt;Puppeteer&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a35460c135870b6343d8a593731c19d3b797f12" translate="yes" xml:space="preserve">
          <source>3) Answer questions. Agree on defaults, when asked to select helpers choose &lt;strong&gt;WebDriverIO&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd5bc041e1733473fec2cb3875d24e3ca34512c1" translate="yes" xml:space="preserve">
          <source>3. Using Page Objects</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00d98d99f7d62a24deb350e2d44b031927ecf6c8" translate="yes" xml:space="preserve">
          <source>4) Create First Test.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2eed94c8ab7ac86ffbe093d5361452f386bd7243" translate="yes" xml:space="preserve">
          <source>5) Enter a test name. Open a generated file in your favorite JavaScript editor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98658b4689b14a52e37ab5e63cce448bc7cc492f" translate="yes" xml:space="preserve">
          <source>6) Write a simple scenario</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="459d58877120ee9422182f62d3a400ca635fde2a" translate="yes" xml:space="preserve">
          <source>7) Prepare Selenium Server</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6aaa153ad3d964a116de9b9dde78fc13cfcf98e4" translate="yes" xml:space="preserve">
          <source>7) Run a test:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61e026683c2eb33971d305361bc6f867cb50c458" translate="yes" xml:space="preserve">
          <source>8) Run a test:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a40e0a7c45651a41856e87a53a20f92af056cdb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#id-locators&quot;&gt;ID locators&lt;/a&gt;: by CSS id or by accessibility id</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b6fabb225f193192f1241287533779611e596f2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#semantic-locators&quot;&gt;Semantic locators&lt;/a&gt;: by link text, by button text, by field names, etc.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b008047bdb5c72c767257ba5804f7c0b39ac5eab" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://allure.qatools.ru/#&quot;&gt;Allure reporter&lt;/a&gt; is a tool to store and display test reports. It provides nice web UI which contains all important information on test execution. CodeceptJS has built-in support for Allure reports. Inside reports you will have all steps, substeps and screenshots.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="017701acc858ac8fa5b7ad213c540a9604362377" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://codenroll.it/acceptance-testing-with-codecept-js/&quot;&gt;Nightmare Tutorial&lt;/a&gt; by jploskonka.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6fa591a1b0d08b1421a1354885989737d9291115" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://codecept.io/basics/#within&quot;&gt;within&lt;/a&gt; operator can be used to work inside IFrames. Special &lt;code&gt;frame&lt;/code&gt; locator is required to locate the iframe and get into its context.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74bea43a3426dfea585a3ffc4ed7fd0ce260e036" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://codecept.io/helpers/REST/&quot;&gt;REST helper&lt;/a&gt; uses &lt;a href=&quot;http://unirest.io/nodejs.html&quot;&gt;Unirest&lt;/a&gt; library to send HTTP requests to application. However, it doesn't provide tools for testing APIs, so it should be paired with WebDriverIO, Nightmare or Protractor helpers for browser testing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="300724291ffb68027511e48c988908e4b18e79c1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/Codeception/CodeceptJS/blob/master/lib/actor.js&quot;&gt;&lt;code&gt;actor&lt;/code&gt;&lt;/a&gt;: basic actor (I) class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe4eb3e2d2d738c7b33aeb066bad909d0a0a5d85" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/Codeception/CodeceptJS/blob/master/lib/codecept.js&quot;&gt;&lt;code&gt;codecept&lt;/code&gt;&lt;/a&gt;: test runner class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9d0e30dc8abc39f98bba262a43f524bc862f2e6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/Codeception/CodeceptJS/blob/master/lib/config.js&quot;&gt;&lt;code&gt;config&lt;/code&gt;&lt;/a&gt;: current codecept config</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfafcedab233892b78cd04a495a9f02eba33d11f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/Codeception/CodeceptJS/blob/master/lib/container.js&quot;&gt;&lt;code&gt;container&lt;/code&gt;&lt;/a&gt;: dependency injection container for tests, includes current helpers and support objects</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed862be1232ca1117f483100f1c87035ccb9dfd0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/Codeception/CodeceptJS/blob/master/lib/event.js&quot;&gt;&lt;code&gt;event&lt;/code&gt;&lt;/a&gt;: event listener</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20d39d903614c515eae97a41fe79c08b5b4518a8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/Codeception/CodeceptJS/blob/master/lib/helper.js&quot;&gt;&lt;code&gt;helper&lt;/code&gt;&lt;/a&gt;: basic helper class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6183a7ef614e2b55764f5e659dce08a464a3d5e6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/Codeception/CodeceptJS/blob/master/lib/output.js&quot;&gt;&lt;code&gt;output&lt;/code&gt;&lt;/a&gt;: internal printer</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a410ef147ec433ecea6513d6ce203bf42a16ec85" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/Codeception/CodeceptJS/blob/master/lib/recorder.js&quot;&gt;&lt;code&gt;recorder&lt;/code&gt;&lt;/a&gt;: global promise chain</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb0060a860052f270c1f63a063d85d7aee9fa4b4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/Codeception/CodeceptJS/pull/231#issuecomment-249554933&quot;&gt;Here are some ideas&lt;/a&gt; where to use BeforeSuite hooks.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08a4b97440a709307ed9bd790e8680d56e9c69bd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/Codeception/CodeceptJS/tree/master/docs/api&quot;&gt;API reference&lt;/a&gt; is available on GitHub. Also please check the source code of corresponding modules.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b2f032c1068ada1142f8ddc343ff44f5c0a8619" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://w3c.github.io/webdriver/#keyboard-actions&quot;&gt;Valid key names&lt;/a&gt; are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81991f7e62cc8f1ca06e3d5967784f9a1464bebf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://www.npmjs.com/package/phantomjs-prebuilt&quot;&gt;Phantomjs&lt;/a&gt;: to install and execute Phantomjs</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49ccf928a758453c8d5a54c005ab8299f76f9b69" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://www.npmjs.com/package/selenium-standalone&quot;&gt;Selenium Standalone&lt;/a&gt; to install and run Selenium, ChromeDriver, Firefox Driver with one package.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8500e14ca2eddc348a377a545faa8819516e011b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#user&lt;/code&gt; or &lt;code&gt;{ id: 'user' }&lt;/code&gt; finds element with id=&quot;user&quot;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a6506222c3b6b14d4ad6f66e5209bce89918ebd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'Add'&lt;/code&gt;,</source>
          <target state="translated">&lt;code&gt;'Add'&lt;/code&gt;,</target>
        </trans-unit>
        <trans-unit id="fe47790cd6376d80853e717134b6065ef788a6fc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'Alt'&lt;/code&gt;,</source>
          <target state="translated">&lt;code&gt;'Alt'&lt;/code&gt;,</target>
        </trans-unit>
        <trans-unit id="35479670a81758150fd798a9b8893294739fb02b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'ArrowDown'&lt;/code&gt; or &lt;code&gt;'Down arrow'&lt;/code&gt;,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1a0ebec66de11a5437316f65daa66cb9dd0624a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'ArrowLeft'&lt;/code&gt; or &lt;code&gt;'Left arrow'&lt;/code&gt;,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad800bcf63702c104c8f1b150fd13890cc99cb84" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'ArrowRight'&lt;/code&gt; or &lt;code&gt;'Right arrow'&lt;/code&gt;,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c1a31edc268831eb80dab69e485561b562db5e4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'ArrowUp'&lt;/code&gt; or &lt;code&gt;'Up arrow'&lt;/code&gt;,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b84aea75786af1de4175f8e163609a6de474428" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'Backspace'&lt;/code&gt;,</source>
          <target state="translated">&lt;code&gt;'Backspace'&lt;/code&gt;,</target>
        </trans-unit>
        <trans-unit id="7caa56441472e1c810c77f3fcfc1bd93bf5fa8ab" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'Command'&lt;/code&gt;,</source>
          <target state="translated">&lt;code&gt;'Command'&lt;/code&gt;,</target>
        </trans-unit>
        <trans-unit id="f6f45e4b2812a14e590311b9bfe7ba638bfd2799" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'Control'&lt;/code&gt;,</source>
          <target state="translated">&lt;code&gt;'Control'&lt;/code&gt;,</target>
        </trans-unit>
        <trans-unit id="9b74d5963cd2d5abf3937de058a7b380651bf67a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'Del'&lt;/code&gt;,</source>
          <target state="translated">&lt;code&gt;'Del'&lt;/code&gt;,</target>
        </trans-unit>
        <trans-unit id="42699f7c48e841df57ddbe05a5121882c11591e8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'Divide'&lt;/code&gt;,</source>
          <target state="translated">&lt;code&gt;'Divide'&lt;/code&gt;,</target>
        </trans-unit>
        <trans-unit id="532b4956b7787a2644108d6d8d55673085af53a2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'End'&lt;/code&gt;,</source>
          <target state="translated">&lt;code&gt;'End'&lt;/code&gt;,</target>
        </trans-unit>
        <trans-unit id="0960288a25ca845fdbc8ed86b4b6df4da81235c5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'Enter'&lt;/code&gt;,</source>
          <target state="translated">&lt;code&gt;'Enter'&lt;/code&gt;,</target>
        </trans-unit>
        <trans-unit id="a5c7e156f09dfa9e4966e268c9389462dbb91a0b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'Equals'&lt;/code&gt;,</source>
          <target state="translated">&lt;code&gt;'Equals'&lt;/code&gt;,</target>
        </trans-unit>
        <trans-unit id="c135a84073f104adc0840a56305c739aaef9c1c7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'Escape'&lt;/code&gt;,</source>
          <target state="translated">&lt;code&gt;'Escape'&lt;/code&gt;,</target>
        </trans-unit>
        <trans-unit id="537b02817ba9a4c4836c70139f7a904f9ebb6163" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'F1 to F12'&lt;/code&gt;,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13dd4ffd948182b3d82c170a920f3bb8c1c24586" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'Home'&lt;/code&gt;,</source>
          <target state="translated">&lt;code&gt;'Home'&lt;/code&gt;,</target>
        </trans-unit>
        <trans-unit id="9e7d33029b5dbd8b5fad9b1e38644b42b202534c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'Insert'&lt;/code&gt;,</source>
          <target state="translated">&lt;code&gt;'Insert'&lt;/code&gt;,</target>
        </trans-unit>
        <trans-unit id="976854056521a96d4d6acaf2aa6a07b0c62bd72f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'Meta'&lt;/code&gt;,</source>
          <target state="translated">&lt;code&gt;'Meta'&lt;/code&gt;,</target>
        </trans-unit>
        <trans-unit id="437040b9298022f951623d096027bf9296ca0283" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'Multiply'&lt;/code&gt;,</source>
          <target state="translated">&lt;code&gt;'Multiply'&lt;/code&gt;,</target>
        </trans-unit>
        <trans-unit id="3f6982491434ae7270ae4a8ded24312271ea34d0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'Numpad 0'&lt;/code&gt; to &lt;code&gt;'Numpad 9'&lt;/code&gt;,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0ed95adb6390ecfa41d813550ce5f0f83b6d451" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'Pagedown'&lt;/code&gt; or &lt;code&gt;'PageDown'&lt;/code&gt;,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6225680e0e55260895e295f16e7aa9c486d80280" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'Pageup'&lt;/code&gt; or &lt;code&gt;'PageUp'&lt;/code&gt;,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9607cf2f63cf0516d4f411014dd29081d840dbd8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'Pause'&lt;/code&gt;,</source>
          <target state="translated">&lt;code&gt;'Pause'&lt;/code&gt;,</target>
        </trans-unit>
        <trans-unit id="701dbd7002e0f7c807d0305809c1e5ec1e26dcdc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'Semicolon'&lt;/code&gt;,</source>
          <target state="translated">&lt;code&gt;'Semicolon'&lt;/code&gt;,</target>
        </trans-unit>
        <trans-unit id="d7fdbc85aaf3a91ed097c51016794ef4fa2be374" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'Shift'&lt;/code&gt;,</source>
          <target state="translated">&lt;code&gt;'Shift'&lt;/code&gt;,</target>
        </trans-unit>
        <trans-unit id="7f0d33c58291106468e35505957a85b4f86f59b6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'Space'&lt;/code&gt;,</source>
          <target state="translated">&lt;code&gt;'Space'&lt;/code&gt;,</target>
        </trans-unit>
        <trans-unit id="dff0624d5e9a0c6eac2af95b3ed2e3add51ee980" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'Subtract'&lt;/code&gt;,</source>
          <target state="translated">&lt;code&gt;'Subtract'&lt;/code&gt;,</target>
        </trans-unit>
        <trans-unit id="51171c047eb067e979a2e74adaec3df50455bb48" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'Tab'&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;'Tab'&lt;/code&gt;.</target>
        </trans-unit>
        <trans-unit id="682eeb99b6ef85be6aeae3fdb093f61adf5e23ce" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--grep &quot;\@smoke2|\@smoke3&quot;&lt;/code&gt; - run tests with @smoke2 or @smoke3 in name</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3115a0c32a2b343b6991efa907ff31c92cf2aba1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--grep '((?=.*@smoke2)(?=.*@smoke3))|@smoke4'&lt;/code&gt; - run tests with (@smoke2 and @smoke3) or @smoke4 in name</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db53ecbab13676be6bdaae99f68c5287656c9e7b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--grep '(?=.*)^(?!.*@smoke4)'&lt;/code&gt; - run all tests except @smoke4</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="134caa05e3ac556cc4c6408f118c9c4fe7673d55" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--grep '(?=.*@smoke2)(?=.*@smoke3)'&lt;/code&gt; - run tests with @smoke2 and @smoke3 in name</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="203c5e51d9e1c2a053ea8c810b60404fda748bfe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--grep '(?=.*@smoke2)^(?!.*@smoke3)'&lt;/code&gt; - run tests with @smoke2 but without @smoke3 in name</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="356f6abc91ce1a15abf22f1071d02a4e4083035c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;REST&lt;/code&gt;: configuration for REST requests</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27aaf8ab62e744473e46b08952a28a1bce152747" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Scenario.only&lt;/code&gt; - executes only the current test</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ab8944f772c078860af3ef1266b659e1437ef79" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;_afterStep&lt;/code&gt; - after each step</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df3fd496f9ca5023d0bcc754eb38740ac36cc254" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;_afterSuite&lt;/code&gt; - after each suite</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="febcbabe9058a596d3e5a14bdf0756e74875b996" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;_before&lt;/code&gt; - before a test</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="141ffdb61dc00d4469705acf0fa45fdaca11d0b3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;_beforeStep&lt;/code&gt; - before each step</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d28cb25f1d22703f683d8fd47751fe0c50cd5f22" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;_beforeSuite&lt;/code&gt; - before each suite</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e220c3cd6c858fdc34b37fd4fa1ce497711dc63d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;_failed&lt;/code&gt; - after a test failed</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eea59d2db7af5da011af9c24ec73e0e4e6bf5ddd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;_init&lt;/code&gt; - before all tests</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="296b5d22b9c6a2c9583d64d44d41d1b523fa3996" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;_passed&lt;/code&gt; - after a test passed</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a62701640845c684dc2a65d0078a1c8e840c4d1a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;aContext&lt;/code&gt; (optional, default &lt;code&gt;null&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1cf0fb3406cbcf618af6317d4097248c288da67" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;actor&lt;/code&gt; current actor, in most cases it &lt;code&gt;I&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1870e9092306c9fab85bd702de5c79ad2db9e4d8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;amOnPage&lt;/code&gt; - to open a webpage (accepts relative or absolute url)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bcebce49ed81bc35fd7f229d86879a7f725b88b3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;angular&lt;/code&gt; (optional, default: true): disable this option to run tests for non-Angular applications.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68109f130de78d47596e8e9d79ab8faf28a5c4d2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;animateSlides&lt;/code&gt;: should animation for slides to be used. Default: true.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c70da42253ac10c9e047db488f233dc37f34802b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;app&lt;/code&gt; - The absolute local path or remote http URL to an .ipa or .apk file, or a .zip containing one of these. Appium will attempt to install this app binary on the appropriate device first.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efea7dd03d90fe584809ca0b3265fdc1054c9865" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;app&lt;/code&gt;: Application path. Local path or remote URL to an .ipa or .apk file, or a .zip containing one of these. Alias to desiredCapabilities.appPackage</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01b9b1f3ca773b9c1ff702e5b4745b79dbe053ac" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;appActivity&lt;/code&gt; - Activity name for the Android activity you want to launch from your package.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52c6b613b242734e888e6adb0bab012a601e0abf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;appPackage&lt;/code&gt; - Java package of the Android app you want to run</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c68a545b02de7c52258429ed13fb6e855aa32434" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;args&lt;/code&gt; arguments for function</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7065cbefa87f5df9313abf2be716b3e992551528" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;args&lt;/code&gt; passed arguments</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c12162a2685ab08a52fb8c6b4664a23f49575b4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;argsOrSec&lt;/code&gt; (optional, default &lt;code&gt;null&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="daad8395007d99f5e513f15ee82e738064431b41" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;attr&lt;/code&gt; Appium: can be used for apps only with several values (&quot;contentDescription&quot;, &quot;text&quot;, &quot;className&quot;, &quot;resourceId&quot;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64f9f2ae6e6a91ee898936e31ba0fc56b7e3e571" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;body&lt;/code&gt; test function as a string</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30c43408aa241dc2c9a271b815f83e2a79bef7a6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;body&lt;/code&gt;&lt;strong&gt;any&lt;/strong&gt;</source>
          <target state="translated">&lt;code&gt;body&lt;/code&gt;&lt;strong&gt;any&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8ad374a7372c41c595dbacebd2107508061d9fa0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;browser&lt;/code&gt; - browser in which perform testing</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31b8e797e5562a0ce38e1bb1a432578d7ac23831" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;browser&lt;/code&gt;: browser in which to perform testing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dde3aac5faa19b527d2120bf3d11181a0aaa08f4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;browserName&lt;/code&gt;: Name of mobile web browser to automate. Should be an empty string if automating an app instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d26ad794699aec17ac84557b4d9fa024dfbe1ca8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;bundleId&lt;/code&gt; String ID of bundled appAppium: support only Android</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab6d383c6a611be0242b0d66309aa9a27e1c3cec" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;capabilities&lt;/code&gt;: {} - list of &lt;a href=&quot;https://github.com/SeleniumHQ/selenium/wiki/DesiredCapabilities&quot;&gt;Desired Capabilities&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c765e8d209f494de636bf642f5982dbe1c3ce137" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;caps&lt;/code&gt;&lt;strong&gt;any&lt;/strong&gt;</source>
          <target state="translated">&lt;code&gt;caps&lt;/code&gt;&lt;strong&gt;any&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2d2d4752895398f9f094eb1860be19ba5751ce0f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;chrome&lt;/code&gt;: (optional) pass additional &lt;a href=&quot;https://github.com/GoogleChrome/puppeteer/blob/master/docs/api.md#puppeteerlaunchoptions&quot;&gt;Puppeteer run options&lt;/a&gt;. Example</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f9a1ca53bea5c483a18b91b066c97918b40c559" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cleanup&lt;/code&gt;: should inserted records be deleted up after tests. Default: true</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64ddee2d68e40e33e2022d4da1eac15a4ed2571a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;click&lt;/code&gt; - to locate a button or link and click on it</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03a26fcf33009b4374e70cc6753e4a5fe8d4bd0a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;codeceptjs&lt;/code&gt; is a symlink to &lt;code&gt;/codecept/bin/codecept.js&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e64570bc8af2284fe731766d013ad21f326a908" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;config&lt;/code&gt;&lt;strong&gt;any&lt;/strong&gt;</source>
          <target state="translated">&lt;code&gt;config&lt;/code&gt;&lt;strong&gt;any&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6e922b442618cbc60ce8eddbbdeb4c7c98938214" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;context&lt;/code&gt; (optional) element located by CSS | XPath | strict locator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c663a81d6a7fbf5869f69af3e6f3448bfe75f8bc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;context&lt;/code&gt; (optional) element located by CSS|XPath|strict locator in which to perfrom search</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c17c8b8e47a178b8d3baa225261193281650ef8d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;context&lt;/code&gt; (optional) element located by CSS|XPath|strict locator in which to perfrom search Appium: support with context in apps</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ddd4657aa64ab65e2d61811315c052aa5663681" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;context&lt;/code&gt; (optional) element located by CSS|Xpath|strict locator in which to search for text</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="816a32ff0985d64c6f2a6b89f3d4b74696e76b12" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;context&lt;/code&gt; (optional) element located by CSS|Xpath|strict locator in which to search for text Appium: support with context in apps</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07d80d570d9d41fcda3c4eb602b9598ad1dd4288" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;context&lt;/code&gt; (optional) element to search in CSS|XPath|Strict locator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7433f31893b3921b53918014f308ad11b6fe344d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;context&lt;/code&gt; (optional, default &lt;code&gt;null&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11c7e9785f1ea41949cece0f72684bf84b12c0ab" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;context&lt;/code&gt; Appium: support only web testing</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d375670eed1437a7c848b4f71d9d211a301b40c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;context&lt;/code&gt; element located by CSS|XPath|strict locator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c723d9e7ab8644deccd77dac58b0eb0c0b67a40" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;context&lt;/code&gt; element located by CSS|XPath|strict locator Appium: support</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04b01f904c9df221cf141efaaf7ad04ef415e649" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;context&lt;/code&gt; string, url, path to screenshot, object. See &lt;a href=&quot;https://www.npmjs.com/package/mochawesome#adding-test-context&quot;&gt;this&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0e71e0a2c3702d750a2ca1937e6ad6b26d5283d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;context&lt;/code&gt; the context to switch to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="717395aa45f78c65761518ed81629c307f2c8746" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;context&lt;/code&gt;&lt;strong&gt;&lt;a href=&quot;https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String&quot;&gt;string&lt;/a&gt;?&lt;/strong&gt;</source>
          <target state="translated">&lt;code&gt;context&lt;/code&gt;&lt;strong&gt;&lt;a href=&quot;https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String&quot;&gt;string&lt;/a&gt;?&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0efcc579d6d46508176f438b5244f89c2c02ae42" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;context&lt;/code&gt;&lt;strong&gt;any&lt;/strong&gt; (optional, default &lt;code&gt;null&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="345734461fb77f0907c8c0b8b84384142542644d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cookie&lt;/code&gt; (optional)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8c5f93185dba028b3f3488fa239a37ac2970bec" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cookie&lt;/code&gt; (optional) Appium: support only web testing</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9218cb12430ddc672fbc021dfb56e475fcdce05" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cookie&lt;/code&gt; Appium: support only web testingUses Selenium's JSON &lt;a href=&quot;https://code.google.com/p/selenium/wiki/JsonWireProtocol#Cookie_JSON_Object&quot;&gt;cookie format&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb5ccae08e997c6aaf5ebb42825093302c75e1a2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cookie&lt;/code&gt; Wrapper for &lt;code&gt;.cookies.set(cookie)&lt;/code&gt;. &lt;a href=&quot;https://github.com/segmentio/nightmare/blob/master/Readme.md#cookiessetcookie&quot;&gt;See more&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3b8cef7446b75ea300124a7b8c09678562303d5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;create&lt;/code&gt;: override create options. Expected format: &lt;code&gt;{ method: uri }&lt;/code&gt;. Example: &lt;code&gt;{ &quot;post&quot;: &quot;/users/create&quot; }&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56ff07481f4e73b853361e91444fbe553ee3d056" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;customHeaders&lt;/code&gt;&lt;strong&gt;any&lt;/strong&gt;</source>
          <target state="translated">&lt;code&gt;customHeaders&lt;/code&gt;&lt;strong&gt;any&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7aa0ee6b64798a899ff2e60df3228a922c7300e0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;data&lt;/code&gt;&lt;strong&gt;any&lt;/strong&gt;</source>
          <target state="translated">&lt;code&gt;data&lt;/code&gt;&lt;strong&gt;any&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c071d97ca122e045d02ffaf3b5ed3fcd3908469e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;debug&lt;/code&gt;: toggled by &lt;code&gt;--debug&lt;/code&gt; option, prints steps, and debug information with &lt;code&gt;output.debug&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39691002a4df28e17414bc8562116ae9e9413fc3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;default&lt;/code&gt;: prints basic information using &lt;code&gt;output.print&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3d7e8a5ea019e93f3b4820746d6d30ce1d5599e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;delayAfter&lt;/code&gt;: put a delay after a command. 200ms by default</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b7d3064e9a280216e7579c652ec96f5cd536cd4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;delayBefore&lt;/code&gt;: put a delay before a command. 100ms by default</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ba59156d0b9917b940f3301f34fe27dd2a4d042" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;delete&lt;/code&gt;: override delete options. Expected format: &lt;code&gt;{ method: uri }&lt;/code&gt;. Example: &lt;code&gt;{ &quot;post&quot;: &quot;/users/delete/{id}&quot; }&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33861487186a0300f3aacfe4238c7ab9fca42152" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;deleteSuccessful&lt;/code&gt;: do not save screenshots for successfully executed tests. Default: true.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bebf18f2b2a4bc76a3b4228a5aee651c7188a0ba" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;desiredCapabilities&lt;/code&gt;: Selenium's &lt;a href=&quot;https://github.com/SeleniumHQ/selenium/wiki/DesiredCapabilities&quot;&gt;desired capabilities&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fb5553d08f2ee04f729a1d95784697969983ba9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;desiredCapabilities&lt;/code&gt;: [], Appium capabilities, see below</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0a5e29ae589a8724180d10d1dfbc664939602cf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;deviceName&lt;/code&gt;: The kind of mobile device or emulator to use</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20aa1a1539c8bde909f30a018380ac52ad7c5552" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;disableScreenshots&lt;/code&gt; (optional, default: false) - don't save screenshot on failure</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba16377ea8d5d2a5e3482e5229f4096bc70504b8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;disableScreenshots&lt;/code&gt; (optional, default: false) - don't save screenshot on failure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9898804f8ce9fc21c86cfe6ec0fb9f17de2b511f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;disableScreenshots&lt;/code&gt; (optional, default: false) - don't save screenshot on failure. This option should be the same as in common helper.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb20cc6d952c4ebc07e71aa2706ca410b44de463" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;disableScreenshots&lt;/code&gt;: (optional, default: false) - don't save screenshot on failure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6758871b6dfd82c7b4f529640776c5bb419318c9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;disableScreenshots&lt;/code&gt;: (optional, default: false) - don't save screenshots on failure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d461892d9cc64393f49a9b9faa1425a989e5457b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;driver&lt;/code&gt; - which protractor driver to use (local, direct, session, hosted, sauce, browserstack). By default set to 'hosted' which requires selenium server to be started.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="694d3b99f48fea1e31d5674431aea54dc7f6ef68" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;enabled&lt;/code&gt; - to enable this plugin.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c718c8acdbfab6d1c80de1e4d071f4b0a53804a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;endpoint&lt;/code&gt;: base URL for the API to send requests to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf1003f7000c3bb3266286938c77f475ef827d6b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;event.all.after&lt;/code&gt; - after running tests</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbc86dbd60d44fc94f7c6d51af088e27212ed6d4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;event.all.before&lt;/code&gt; - before running tests</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd1dc3c3f1215b5bc09e18d604587b89816bef26" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;event.all.result&lt;/code&gt; - when results are printed</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae902b0cb3cf774c90a19ea73c167bb4001c5a41" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;event.step.after(step)&lt;/code&gt;- &lt;em&gt;async&lt;/em&gt; after a step</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afd1cf5618a36da3dc7c5b827dd547fdb4e35977" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;event.step.before(step)&lt;/code&gt; - &lt;em&gt;async&lt;/em&gt; when the step is scheduled for execution</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5ec8a1b6113378e83b97af88a5ee09e7d59e770" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;event.step.failed(step, err)&lt;/code&gt; - &lt;em&gt;sync&lt;/em&gt; when step failed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4914ec453028aa8364c7f01af46f7367572cde56" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;event.step.finished(step)&lt;/code&gt; - &lt;em&gt;sync&lt;/em&gt; when step finishes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e26df039f6f458d4a3833c1343eb1ff853cb70a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;event.step.passed(step)&lt;/code&gt; - &lt;em&gt;sync&lt;/em&gt; when step passed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f0750c5553050b578775100f78aace62e308af9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;event.step.started(step)&lt;/code&gt; - &lt;em&gt;sync&lt;/em&gt; when step starts.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad7fc4a3c1bafbf742987b0e011de98f0d7d487a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;event.suite.after(suite)&lt;/code&gt; - &lt;em&gt;async&lt;/em&gt; after a suite</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba85d685c6f19d9d282885325a35b83e4ea3bc1c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;event.suite.before(suite)&lt;/code&gt; - &lt;em&gt;async&lt;/em&gt; before a suite</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e1fa9e4b4ebcd4f7040132a834d22040f2c6e36" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;event.test.after(test)&lt;/code&gt; - &lt;em&gt;async&lt;/em&gt; after each test</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0c25b2eda45a7ad6830abe53e1283375c9a02ea" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;event.test.before(test)&lt;/code&gt; - &lt;em&gt;async&lt;/em&gt; when &lt;code&gt;Before&lt;/code&gt; hooks from helpers and from test is executed</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bd819b3d9ad24f4004f9430564a96b57ab9c7b2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;event.test.failed(test, error)&lt;/code&gt; - &lt;em&gt;sync&lt;/em&gt; when test failed</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1b9088a0d5a78c644b34157ced8d57b8156a28c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;event.test.finished(test)&lt;/code&gt; - &lt;em&gt;sync&lt;/em&gt; when test finished</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82f6ae1d2b351b3c59711af65833e5de039e992b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;event.test.passed(test)&lt;/code&gt; - &lt;em&gt;sync&lt;/em&gt; when test passed</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="055dfe2c976cf0d261baa3bf2bde0eb1e72c6c43" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;event.test.started(test)&lt;/code&gt; - &lt;em&gt;sync&lt;/em&gt; at the very beginning of a test. Passes a current test object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69633c1e07845b2840d6a982327b8a5dfc8152ed" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;factor&lt;/code&gt; - The exponential factor to use. Default is 2.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81aafb6cc38f5d713631d93586ad1baa7e0bb09b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;factories&lt;/code&gt;: list of defined factories</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c7cc444d1b394cd39e76166d2e3cb350d15c13d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;factory&lt;/code&gt;&lt;strong&gt;any&lt;/strong&gt;</source>
          <target state="translated">&lt;code&gt;factory&lt;/code&gt;&lt;strong&gt;any&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="593987743d85cb57d514458bde2945856cab2365" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;factory&lt;/code&gt;&lt;strong&gt;any&lt;/strong&gt; factory to use</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f0e121c47aae0e6e9c846d75fb32f976cd7867b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;features&lt;/code&gt; - path to feature files</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66d72211ee14ca26e575b76baf850548d0a4c38d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;field&lt;/code&gt; checkbox located by label | name | CSS | XPath | strict locator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="923036f9ef8d442b668b06c51278825f4fd0cf83" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;field&lt;/code&gt; input field</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b2911cb7428ef65f3be9b0ffc1f10c6d5d0e61c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;field&lt;/code&gt; located by label|name|CSS|XPath|strict locator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8916140cd79146563cdfe9d1a5963b80c702c116" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;field&lt;/code&gt; located by label|name|CSS|XPath|strict locator Appium: not tested</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0ea6575e08771c0956bba0fd522590097bc00da" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;field&lt;/code&gt; located by label|name|CSS|XPath|strict locator Appium: support</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efe46f4be86795c7fa58f12cf3b7b68f79cfe2d8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;field&lt;/code&gt; located by label|name|CSS|XPath|strict locatorAppium: not tested</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d038c326378f7734e053856c64ed8fc8847a369" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;file&lt;/code&gt; path to a file with a test.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="373c757994c6e33c9865013ae836eaea9e6de6a4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fillField&lt;/code&gt; - to enter a text inside a field</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5570a33934877122e30c645c0bad26b0b6a94bdf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn&lt;/code&gt; function to be executed in browser context</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8f5a5a1248f433ff0c4f07ecc2a75a28bb7ccab" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn&lt;/code&gt;&lt;strong&gt;any&lt;/strong&gt;</source>
          <target state="translated">&lt;code&gt;fn&lt;/code&gt;&lt;strong&gt;any&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="44b15ee100bd7a4fedc7c9a713ea09cbb3fe6268" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fullPage&lt;/code&gt; (optional)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="061396380c5efe31f5d0ad61c5b07d15a9714bbb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fullPage&lt;/code&gt; (optional) Appium: support</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b602aa344712b84f973de81d53362f2579d1022" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fullPageScreenshots&lt;/code&gt; (optional, default: false) - make full page screenshots on failure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e639ffed8ba6664ea8d16449decee1d2171508c3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fullPageScreenshots&lt;/code&gt;: make full page screenshots. Default: false.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="932b4b97cda9b1a8519b6a2423c0ff13676a89e0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fullPageScreenshots&lt;/code&gt;: should full page screenshots be used. Default: false.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0373996a62ead591678edc0c0eac248bf39df3cc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;function&lt;/code&gt; function which is executed in browser context.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8cb3102911e51ca13ae1f3657352850c8dc2444" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;function&lt;/code&gt; to be executed in browser context</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3dd718dfc227988fba717bb27a925e44f4126a4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;getPageTimeout&lt;/code&gt; (optional) sets default timeout for a page to be loaded. 10000 by default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95ec641ff86b8a2af904b37915a495e6b2738248" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;getPageTimeout&lt;/code&gt; (optional, default: '0') config option to set maximum navigation time in milliseconds.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e685dcd97736efae9caca84422c2bf0583e2f892" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;grab*&lt;/code&gt; to get values from page sources</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5566a98a9d1a59d03f975af2be515fdb8d811408" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;grabTextFrom&lt;/code&gt; action is used here to retrieve text from an element. All actions starting with &lt;code&gt;grab&lt;/code&gt; prefix are expected to return data. In order to synchronize this step with a scenario you should pause test execution with &lt;code&gt;await&lt;/code&gt; keyword of ES6. To make it work your test should be written inside a async function (notice &lt;code&gt;async&lt;/code&gt; in its definition).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32f84d107efa4d1a05920bb678b76f32dd37f1aa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;headers&lt;/code&gt; (optional, default &lt;code&gt;null&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df274bbdf09599f8abdb78fe21232ea5a2971d3e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;headers&lt;/code&gt;&lt;strong&gt;&lt;a href=&quot;https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Object&quot;&gt;object&lt;/a&gt;&lt;/strong&gt; (optional, default &lt;code&gt;{}&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52127f508f02bb331b2ea8fb01b3b85a4c3ebacb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;height&lt;/code&gt; Appium: not tested in web, in apps doesn't work</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6a6873f6a399fba25a62195d68fdabf3538d7e9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;height&lt;/code&gt; Unlike other drivers Puppeteer changes the size of a viewport, not the window! Puppeteer does not control the window of a browser so it can't adjust its real size. It also can't maximize a window.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ef542d33e93dd541afa3e54a23fae6feda4efca" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;helper&lt;/code&gt; current helper instance used to execute this step</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf2b449e29c8f5a9261ee92491abe1422065cd71" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;helperMethod&lt;/code&gt; corresponding helper method, in most cases is the same as &lt;code&gt;name&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf418d65906a0da8639eaf3fcc9873913df71a9b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;hideDeviceKeyboard&lt;/code&gt;,</source>
          <target state="translated">&lt;code&gt;hideDeviceKeyboard&lt;/code&gt;,</target>
        </trans-unit>
        <trans-unit id="5ef832f464997ea800d773b600819dcf8e274540" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;host&lt;/code&gt;: (default: 'localhost') Appium host</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74063d291efe070472f78a8f23314c64efe66b60" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;host&lt;/code&gt;: (optional, default: localhost) - WebDriver host to connect.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df6b8828f7224c3d7e92791a37a4de1f3726ee52" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;id&lt;/code&gt;&lt;strong&gt;any&lt;/strong&gt;</source>
          <target state="translated">&lt;code&gt;id&lt;/code&gt;&lt;strong&gt;any&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="311dedc494adde5e8083af12126d38f9c558eb67" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ignoreSteps&lt;/code&gt;: steps to ignore in report. Array of RegExps is expected. Recommended to skip &lt;code&gt;grab*&lt;/code&gt; and &lt;code&gt;wait*&lt;/code&gt; steps.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f3af1e7f488ac3a4ccb6a5b94e0c63ad42967ed" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;keepBrowserState&lt;/code&gt; (optional, default: false) - keep browser state between tests when &lt;code&gt;restart&lt;/code&gt; set to false.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d164f02221c070cccce0347308ceb5b6a9b94396" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;keepBrowserState&lt;/code&gt;: (optional, default: false) - keep browser state between tests when &lt;code&gt;restart&lt;/code&gt; is set to false.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b052f70bde1ea0554982a63f59c2cd9de7bed32" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;keepCookies&lt;/code&gt; (optional, default: false) - keep cookies between tests when &lt;code&gt;restart&lt;/code&gt; set to false.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1bfeea1f7901c9719fe3f4c391657316aca486b0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;keepCookies&lt;/code&gt;: (optional, default: false) - keep cookies between tests when &lt;code&gt;restart&lt;/code&gt; is set to false.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c26360bd23cc46d6e183dc94ef337dd8bd632954" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;keepCookies&lt;/code&gt;: (optional, default: false) - keep cookies between tests when &lt;code&gt;restart&lt;/code&gt; set to false.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dafe6ca1625039a14fcb375e1cd6de2682c149d5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;keyValue&lt;/code&gt; Device specific key valueAppium: support only Android</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc5ab0c592b3faa02e422b2671dfdc253ebfdbd9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;locate&lt;/code&gt; has following methods:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9acef1bdd4a5a2acdb6fc30164a6c15d889396f7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;locator&lt;/code&gt; clickable link or button located by text, or any element located by CSS|XPath|strict locator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd15017b7848f6d65e793d12d7229bba73b310d5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;locator&lt;/code&gt; element located by CSS|XPath|strict locator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35b988f06ebbcea16bdff1e4435ea00cc2618b1b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;locator&lt;/code&gt; element located by CSS|XPath|strict locator Appium: support</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3e97a48658c3853753b4ae732c8d0a0524bc33d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;locator&lt;/code&gt; field located by label|name|CSS|XPath|strict locator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c984b59542cd9997966af06c46dc5f54dd211986" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;locator&lt;/code&gt; field located by label|name|CSS|XPath|strict locator Appium: support only web testing</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3f4f90dfb3c5e9bb787e882630dd1eafaa640a1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;locator&lt;/code&gt; located by CSS|XPath|Strict locator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab7338a29b563625ffd41f3214dba456ac9ae5cc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;locator&lt;/code&gt; located by CSS|XPath|Strict locator Appium: support</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7da046b06800601085359f5dca153bd57fdca5a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;locator&lt;/code&gt; located by CSS|XPath|strict locator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4577a124e6b218f7cc6e8a4452e3726aee88071f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;locator&lt;/code&gt; located by CSS|XPath|strict locator Appium: support</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1cfe64573d353cb51b4bdf448f90d246cc9cf97" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;locator&lt;/code&gt;&lt;strong&gt;any&lt;/strong&gt;</source>
          <target state="translated">&lt;code&gt;locator&lt;/code&gt;&lt;strong&gt;any&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="871e2a4e69cbeec69310d4ab75281ff9f55381f9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;manualStart&lt;/code&gt; (optional, default: false) - do not start browser before a test, start it manually inside a helper with &lt;code&gt;this.helpers[&quot;WebDriverIO&quot;]._startBrowser()&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02877710f3cb42b6e0142273efc644fb09b3cbe5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;manualStart&lt;/code&gt;: (optional, default: false) - do not start browser before a test, start it manually inside a helper with &lt;code&gt;this.helpers[&quot;Puppeteer&quot;]._startBrowser()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="865486562e26b7e0d0acf91ba1d72ec76c99d25e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;manualStart&lt;/code&gt;: (optional, default: false) - do not start browser before a test, start it manually inside a helper with &lt;code&gt;this.helpers[&quot;WebDriverIO&quot;]._startBrowser()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75c8b1ed7aaf5ea0be2d8fd9a610f797c997375f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;maxTimeout&lt;/code&gt; - The maximum number of milliseconds between two retries. Default is Infinity.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6891fde8330f8604776f52d51bf806fc93718a9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;methods&lt;/code&gt;: list of affected commands. Can be overridden</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="248cbbfd4334991ce38e1a20dc20b19358c06ce8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;minTimeout&lt;/code&gt; - The number of milliseconds before starting the first retry. Default is 1000.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40a05b87c79a70752d96870741247a6fd788dbab" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;name&lt;/code&gt; Appium: support only web testing</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6abfb759466cffb8567f4fd131a684eff07f323e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;name&lt;/code&gt; Returns cookie in JSON &lt;a href=&quot;https://code.google.com/p/selenium/wiki/JsonWireProtocol#Cookie_JSON_Object&quot;&gt;format&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a11feef0535b1f0c57f10e42b9befdfa849613f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;name&lt;/code&gt; Returns cookie in JSON format. If name not passed returns all cookies for this domain.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23454e8c045832b38a7d978e1eb2758988694a50" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;name&lt;/code&gt; Returns cookie in JSON format. If name not passed returns all cookies for this domain.Multiple cookies can be received by passing query object:&lt;code&gt;js
    I.grabCookie({ secure: true});&lt;/code&gt;If you'd like get all cookies for all urls, use: &lt;code&gt;.grabCookie({ url: null }).&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a164a30f2dfcb1f2011b9ebd9a7dd87043e2cbd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;name&lt;/code&gt; name of a step, like 'see', 'click', and others</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de7c93b527939755c16b7fa1db3fbe9d16c02233" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;num&lt;/code&gt; (optional, default &lt;code&gt;1&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad735647d2a48213f816a78498300ab6d454fba6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;offset&lt;/code&gt;&lt;strong&gt;&lt;a href=&quot;https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Number&quot;&gt;Number&lt;/a&gt;&lt;/strong&gt; Offset from current handle index. i.e. offset &amp;lt; 0 will go to the previous handle and positive number will go to the next window handle in sequence. (optional, default &lt;code&gt;0&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5710591fb89c4100c3b716c1f33e72ca9a8d34f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;offsetX&lt;/code&gt; (optional, default &lt;code&gt;0&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4c96ba4b99f97ad790b44cf78b5044582167701" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;offsetX&lt;/code&gt; (optional, default &lt;code&gt;null&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1ebc19154884bb5db1a339ba1b662095afccbeb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;offsetY&lt;/code&gt; (optional, default &lt;code&gt;0&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ddc477d4ef66468af1024d610a42880ef53ef9c0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;offsetY&lt;/code&gt; (optional, default &lt;code&gt;null&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f253082c388e6d50ab821a35467a5e7811749c5c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;option&lt;/code&gt; Support only web testing!</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da53df57d92553e7ccdc39a61cc86a85575957d0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;opts&lt;/code&gt; additional test options like retries, and others</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66eb6d6b92feb193fbb62c9e61ac86bc695ac8d1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;opts&lt;/code&gt;&lt;strong&gt;any&lt;/strong&gt; (optional, default &lt;code&gt;{}&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70791d1a2dd943e4c0c5fd3b5327561715583955" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;orientation&lt;/code&gt; LANDSCAPE or PORTRAITAppium: support Android and iOS</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0060d097dcfc2e46a6284a0cdb2929d70ef1bfbe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;outputDir&lt;/code&gt; - a directory where allure reports should be stored. Standard output directory is set by default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="151dc98ec925c82cae83baff2b90950c7b77d4e6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;page&lt;/code&gt;&lt;strong&gt;&lt;a href=&quot;https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Object&quot;&gt;object&lt;/a&gt;&lt;/strong&gt; page to set</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3baa0d2d7702b7f97948c65e0c6194b4cdb3af58" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;params&lt;/code&gt;&lt;strong&gt;any&lt;/strong&gt;</source>
          <target state="translated">&lt;code&gt;params&lt;/code&gt;&lt;strong&gt;any&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ab026e463b95621e30cc59371c20f862a0eb2e59" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;params&lt;/code&gt;&lt;strong&gt;any&lt;/strong&gt; predefined parameters</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8b349d3d7b6c4dd7905f3467768d7eef258b5a9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;path&lt;/code&gt; path to apk fileAppium: support only Android</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be5293a58fb1ed82a45877caa36d072461646f58" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;path&lt;/code&gt;: (optional, default: /wd/hub) - path to WebDriver server,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c48e306ab45c0c832b3092568d766b9de31cfba" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pathToFile&lt;/code&gt; local file path relative to codecept.json config file</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6242dd5289e48cdd1068764063e534e97066628" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pathToFile&lt;/code&gt; local file path relative to codecept.json config file##### Limitations:- works only with CSS selectors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fb72e7986efa75fb9833ebb4417e58c3bbd2ad7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pathToFile&lt;/code&gt; local file path relative to codecept.json config fileAppium: not tested</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a04c6775a83d80256e5d1c32eb7a2976fe6b04c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;payload&lt;/code&gt;&lt;strong&gt;&lt;a href=&quot;https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Object&quot;&gt;object&lt;/a&gt;&lt;/strong&gt; (optional, default &lt;code&gt;{}&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2f5ce9f5c443b4e3c28f9ea950cb4ee74b51e8e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;payload&lt;/code&gt;&lt;strong&gt;any&lt;/strong&gt; (optional, default &lt;code&gt;{}&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a61a42f607af3d7110861dddca97c4ed99b1c89" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pending&lt;/code&gt; true if test is scheduled for execution and false if a test has finished</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70851a894414de04ed0ddd2b95adb7dacb629b81" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;platform&lt;/code&gt;: (Android or IOS), which mobile OS to use; alias to desiredCapabilities.platformName</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6e684c692b5f6e2c19b9b6201091a5cce9c4de5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;platformName&lt;/code&gt; - Which mobile OS platform to use</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2976c1f5a13dfd55d28392b25a47aa0932b20691" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;platformVersion&lt;/code&gt;: Mobile OS version</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="626a9f7eadfb2070d49a988e24020390042ba539" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;port&lt;/code&gt;: (default: '4723') Appium port</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1102f8d976981aa4c2b69e278f8781ca4de690cd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;port&lt;/code&gt;: (optional, default: 4444) - WebDriver port to connect.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abeb049db626d67eea127d06da95cc70e2e23671" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;prefix&lt;/code&gt; if a step is executed inside &lt;code&gt;within&lt;/code&gt; block contain within text, like: 'Within .js-signup-form'.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51653da90a77292a6222f271d099683a44feff1d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;protocol&lt;/code&gt;: (optional, default: http) - protocol for WebDriver server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55ee3c46125f1ada12c04ee7e30b65c0ef984baf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;proxy&lt;/code&gt;: set proxy settings</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb12123dd4f19bea5d1f066c3c51a70a08f0b6c0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;randomize&lt;/code&gt; - Randomizes the timeouts by multiplying with a factor between 1 to 2. Default is false.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6f7034d4f1436f3979515140facfbad2d2b5a37" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;recorder.retry&lt;/code&gt; acts similarly to &lt;code&gt;I.retry()&lt;/code&gt; and accepts the same parameters. It expects the &lt;code&gt;when&lt;/code&gt; parameter to be set so it would handle only specific errors and not to retry for every failed step.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae8dbeb7ec4d2554e7dada29b9c82a555bcc1a2a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;request&lt;/code&gt;&lt;strong&gt;any&lt;/strong&gt;</source>
          <target state="translated">&lt;code&gt;request&lt;/code&gt;&lt;strong&gt;any&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="024a62fee104e10097debae5b23f2873793dd90c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;require&lt;/code&gt; - specifies relative path to a plugin file. Path is relative to config file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7edc5db18d0c5fca38b5170d513e21dbecc95dcc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;restart&lt;/code&gt; (optional, default: true) - restart browser between tests.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f310c212c6711256e3645657e6414613317a1538" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;restart&lt;/code&gt;: (optional, default: true) - restart browser between tests.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc38f35b66ece80ba9560ee98ed9bcd475f203b3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;restart&lt;/code&gt;: restart browser or app between tests (default: true), if set to false cookies will be cleaned but browser window will be kept and for apps nothing will be changed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d19713bac7b14141cb7629f0a3d240cfecffea03" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;retries&lt;/code&gt; - number of retries (by default 5),</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d44f2859e4d40cdb1c0210f3745232f572d0aaf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;rootElement&lt;/code&gt; - Root element of AngularJS application (default: body)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ac6745c2cd00527f902c150d83b2260c8e4af13" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;scriptsTimeout&lt;/code&gt;: (optional) timeout in milliseconds for each script run on the browser, 10000 by default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="480c0d43efda2cef67901836fab41106e810c4ba" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;sec&lt;/code&gt; (optional, default &lt;code&gt;null&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47dd45c9e306539078f2ba44227f5611a8010821" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;sec&lt;/code&gt; Appium: support</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98e4a404f469c002dce77e4c9dee5054f5f4a095" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;sec&lt;/code&gt; seconds to wait</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8569d9cb6ecc628671a113ad6d00b87475d8c42" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;sec&lt;/code&gt; seconds to wait, 1 sec by default</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b427653ec0d52c725a4de15931f7d92c11b822de" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;sec&lt;/code&gt; time seconds to wait, 1 by default</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="febb2d378a92c59d2e09cf239999c8deeb6b7a65" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;sec&lt;/code&gt; time seconds to wait, 1 by default Appium: support</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dddd1310e9b5386fb7476e7b0b30b9e7bcc7b40a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;sec&lt;/code&gt; time seconds to wait, 1 by defaultAppium: support</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c772f0f89ddf14722b268b6101a6087c8c0a7af" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;sec&lt;/code&gt;&lt;strong&gt;any&lt;/strong&gt; (optional, default &lt;code&gt;null&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d50b13f2aead28c00031b142afcb32921451859a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;see&lt;/code&gt;, &lt;code&gt;dontSee&lt;/code&gt; - to check for a text on a page</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="102eff75e40690c1e0c26786896cd7b2a7c9f673" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;seeAppIsInstalled&lt;/code&gt;, &lt;code&gt;installApp&lt;/code&gt;, &lt;code&gt;removeApp&lt;/code&gt;, &lt;code&gt;seeAppIsNotInstalled&lt;/code&gt; - Android only</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63828530beea0f73a8256c92883e29dd70c43d56" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;seeElement&lt;/code&gt;, &lt;code&gt;dontSeeElement&lt;/code&gt; - to check for elements on a page</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43adec38f2056239f01c9360e938575768fa8969" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;select&lt;/code&gt; field located by label|name|CSS|XPath|strict locator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48ec4c1e67b8fd5cf9cdf7ce476b3373484a7b12" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;selectOption&lt;/code&gt;, &lt;code&gt;checkOption&lt;/code&gt; - to interact with a form</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5f010f16d89efe55a5251fd0dffec50c7a1633c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;seleniumAddress&lt;/code&gt; - Selenium address to connect (default: &lt;a href=&quot;http://localhost:4444/wd/hub&quot;&gt;http://localhost:4444/wd/hub&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8835c5fa93e2732335cac3aab0ba5f648ee7da6d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;server.js&lt;/code&gt; should export object with &lt;code&gt;bootstrap&lt;/code&gt; and &lt;code&gt;teardown&lt;/code&gt; functions:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e95122f5bb65330d5535e625e35e988c8bba311" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;session&lt;/code&gt; can return value which can be used in scenario:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b411cba549422a8a397da3c5bab1be5783d3bcf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;session&lt;/code&gt; function expects a first parameter to be a name of a session. You can switch back to session by using the same name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8abc313ddc2946534378517e4fd38572f4ddfaa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;settings&lt;/code&gt; objectAppium: support Android and iOS</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="891c8b138409558ae1c2176d06435a1a1f277bc4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;show&lt;/code&gt;: (optional, default: false) - show Google Chrome window for debug.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a45b8e7aca1c13349f80850b11b18c04b52c0b76" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;smartWait&lt;/code&gt; (optional, default &lt;code&gt;false&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d458ca8927bcaf5fba61a17cec1e7811954e382a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;smartWait&lt;/code&gt;: (optional) &lt;strong&gt;enables &lt;a href=&quot;https://codecept.io/acceptance/#smartwait&quot;&gt;SmartWait&lt;/a&gt;&lt;/strong&gt;; wait for additional milliseconds for element to appear. Enable for 5 secs: &quot;smartWait&quot;: 5000</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58aa9ec990fc56f1ba597b76145b7f9285d7cc3d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;smartWait&lt;/code&gt;: (optional) &lt;strong&gt;enables &lt;a href=&quot;https://codecept.io/acceptance/#smartwait&quot;&gt;SmartWait&lt;/a&gt;&lt;/strong&gt;; wait for additional milliseconds for element to appear. Enable for 5 secs: &quot;smartWait&quot;: 5000.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d419a9dcf65712e831e4b52f28cbbd522d4da339" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;speed&lt;/code&gt; (optional), 1000 by defaultAppium: support Android and iOS</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b20428e558dcadc805b534bcb6e4d24590a3468a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;speed&lt;/code&gt; Appium: support Android and iOS</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27987fa1dbea79e2b846d10393be966c968fe973" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;status&lt;/code&gt; status of a step (passed or failed)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2054a8d070a931f33fbbb8d01ad85ffc263a730b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;steps&lt;/code&gt; - array of files with step definitions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="392ba10e5fa67bda84b9ac49c48d951cf65c63fc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;steps&lt;/code&gt; array of executed steps (available only in &lt;code&gt;test.passed&lt;/code&gt;, &lt;code&gt;test.failed&lt;/code&gt;, &lt;code&gt;test.finished&lt;/code&gt; event)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a364c3e29fbb30dac2edf315ed651ebd7e23254" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;steps&lt;/code&gt;: toggled by &lt;code&gt;--steps&lt;/code&gt; option, prints step execution</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51941cff3d06e298bb8ba3c0feea29f4969fd297" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;strategy&lt;/code&gt; desired strategy to close keyboard (&amp;lsquo;tapOutside&amp;rsquo; or &amp;lsquo;pressKey&amp;rsquo;)Appium: support Android and iOS</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c10faa59e568d8064e0a8519434a38158ade64a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;swipeUp&lt;/code&gt;, &lt;code&gt;swipeLeft&lt;/code&gt;, ...</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db149f6bf6c825fd5921f568a44f3b1b0b08ea74" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;tags&lt;/code&gt; array of tags for this test</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="897f41f52143448247df1ac50b65583b851fb1b8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;text&lt;/code&gt; Appium: support</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88ea10846a1ad77ac2144129a6bf8f444a08a0a4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;text&lt;/code&gt; Appium: support only web testing</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b406a27b64d9a013b9024318d86b9ea745ba4909" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;text&lt;/code&gt; expected on page</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="531fae0cbe4f28b33c023e6345753b2bad4ccd42" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;text&lt;/code&gt; is not present</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1afe226b876a7feeccfb533194aecb07bc1ae84e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;text&lt;/code&gt; to wait for</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e521f2558104dbadbe9bd4e893e88ef0666a4e7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;timeoutMsg&lt;/code&gt; (optional, default &lt;code&gt;null&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48cd764e56d3673a40807eca8e6858f91beeb4cd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;timeouts&lt;/code&gt;: &lt;a href=&quot;http://webdriver.io/guide/testrunner/timeouts.html&quot;&gt;WebDriverIO timeouts&lt;/a&gt; defined as hash.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38468fb890ebc7a1147a653615358bd51d4bbed5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;times&lt;/code&gt;&lt;strong&gt;any&lt;/strong&gt;</source>
          <target state="translated">&lt;code&gt;times&lt;/code&gt;&lt;strong&gt;any&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="765d40f56405b52777415e3ce2e0b22cc3377a0a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;title&lt;/code&gt; title of a test</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb50519d1666905239622f79af754a8ba0733b1e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;uniqueScreenshotNames&lt;/code&gt; (optional, default: false) - option to prevent screenshot override if you have scenarios with the same name in different suites</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23aa48a9925a32d8a3c40ae37dc1f0a6be4a4326" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;uniqueScreenshotNames&lt;/code&gt; (optional, default: false) - option to prevent screenshot override if you have scenarios with the same name in different suites.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f25b14ff47f1db7ef46c093413e3b2668ffbc124" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;uniqueScreenshotNames&lt;/code&gt; (optional, default: false) - option to prevent screenshot override if you have scenarios with the same name in different suites. This option should be the same as in common helper.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d15f63303b9b8f6b20ba1f58e0d220fe136ed15" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;uniqueScreenshotNames&lt;/code&gt;: (optional, default: false) - option to prevent screenshot override if you have scenarios with the same name in different suites.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be0bd60983074262773df5936f110ae40838b3ba" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;uniqueScreenshotNames&lt;/code&gt;: use unique names for screenshot. Default: false.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa5bb0211c9355bc5bd058ee881d346ea55d9654" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;uri&lt;/code&gt;: set different resource uri. Example: &lt;code&gt;uri: account&lt;/code&gt; =&amp;gt; &lt;code&gt;http://app.com/api/account&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f43bad089c206c3f2d951c338b5616253f69f4d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;url&lt;/code&gt; - base url of website to be tested</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc55d4250de19273105f7615a89c2a1e37f2350e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;url&lt;/code&gt; Appium: support only web testing</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="100b31170cec4168b319d32ba0d1f2521bc8a61d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;url&lt;/code&gt; url path or global url</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0589a47b6b3d80981c9b38d3e50d96462c32e64d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;url&lt;/code&gt; url path or global url Appium: support only web testing</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8aba11982206c778dc4d932ef9cbbbad528e8001" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;url&lt;/code&gt; url path or global urlIn a second argument a list of request headers can be passed:&lt;code&gt;js
    I.amOnPage('/auth', { 'x-my-custom-header': 'some value' })&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d81f0df28e7cc821dd2ef95bbbebf0a55557947e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;url&lt;/code&gt;: base url of website to be tested</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2b235aa4c2242b3addc23a0babb99ed37f46555" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;url&lt;/code&gt;: base url of website to be tested.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="043e705055bc24c2ad4e2fea91e9548cbd67073d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;url&lt;/code&gt;&lt;strong&gt;&lt;a href=&quot;https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String&quot;&gt;string&lt;/a&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;code&gt;url&lt;/code&gt;&lt;strong&gt;&lt;a href=&quot;https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String&quot;&gt;string&lt;/a&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="65f17a9e024ad1a07b39ed1b7d4fbe0b601c9271" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;url&lt;/code&gt;&lt;strong&gt;any&lt;/strong&gt;</source>
          <target state="translated">&lt;code&gt;url&lt;/code&gt;&lt;strong&gt;any&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="326e327d6c6cbb0331cfe75b04b431749dd42f5e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;urlOrPredicate&lt;/code&gt;&lt;strong&gt;any&lt;/strong&gt;</source>
          <target state="translated">&lt;code&gt;urlOrPredicate&lt;/code&gt;&lt;strong&gt;any&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="86f593f1681d8fea460b5848d62db7e864deb7c5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;userAgent&lt;/code&gt;: (optional) user-agent string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f301c6e0341d08f39db4f32749240a422fc7045b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;value&lt;/code&gt; Appium: support</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af6e1db279ccd563019c9205a8eb04d773017a02" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;value&lt;/code&gt; Appium: support only web testing</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b4db1e2364749bf7f455b65843285672d1eb12b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;value&lt;/code&gt; expected value</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffbc00b0fae0a7639865cb9c4c4e35899cd9c705" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;value&lt;/code&gt; is not expected to be a field value</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75da4d3004f21c27f04481d0cd65689fb48216eb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;value&lt;/code&gt; is not expected to be a field value Appium: support only web testing</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3df79e55a75d40af15900565ee964496fcd36a3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;value&lt;/code&gt; text value</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a942189e92e21f01e8940ffd55d32e6f2625d98e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;value&lt;/code&gt; text value Appium: support, but it's clear a field before insert in apps</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dcd8b8b0597255e6f5312b8e78ebf15fc59d19cd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;verbose&lt;/code&gt;: toggled by &lt;code&gt;--verbose&lt;/code&gt; prints debug information and internal logs with &lt;code&gt;output.log&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="724dd74d91c6ef26cad17e7f9aa497d1c3c32e9e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;wait*&lt;/code&gt; to wait for some parts of page to be fully rendered (important for testing SPA)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf8ba3464e37657f7cbb06fb89bf7a3f13fbacb6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;waitForAction&lt;/code&gt;: (optional) how long to wait after click, doubleClick or PressKey actions in ms. Default: 100.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbac942f69f6cd7e42f555fd18dd38fa455a67c6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;waitForAction&lt;/code&gt;: (optional) how long to wait after click, doubleClick or PressKey actions in ms. Default: 500.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08573a5567d97610693771f3afb7de2a168f03ab" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;waitForNavigation&lt;/code&gt;: (optional, default: 'load'). When to consider navigation succeeded. Possible options: &lt;code&gt;load&lt;/code&gt;, &lt;code&gt;domcontentloaded&lt;/code&gt;, &lt;code&gt;networkidle0&lt;/code&gt;, &lt;code&gt;networkidle2&lt;/code&gt;. See &lt;a href=&quot;https://github.com/GoogleChrome/puppeteer/blob/master/docs/api.md#pagewaitfornavigationoptions&quot;&gt;Puppeteer API&lt;/a&gt;. Array values are accepted as well.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7860cb0a01323a4d2bdc411a709f7834097d267" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;waitForTimeout&lt;/code&gt;: (optional) default wait* timeout in ms. Default: 1000.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5bbf9a4fc9fa6c8b20b69af24373355973bc144c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;waitForTimeout&lt;/code&gt;: (optional) sets default wait time in &lt;em&gt;ms&lt;/em&gt; for all &lt;code&gt;wait*&lt;/code&gt; functions. 1000 by default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bea990d7b3f4ab5e10f21d1cbd647ffaf9737c83" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;waitForTimeout&lt;/code&gt;: (optional, default: 1000) sets default wait time in &lt;em&gt;ms&lt;/em&gt; for all &lt;code&gt;wait*&lt;/code&gt; functions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5cc9d6110b5caa9fb6d22f761a591422272952e6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;when&lt;/code&gt; - function, when to perform a retry (accepts error as parameter)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7340bd76a4a5338579d4f8a5d2bf4a6998bfc8c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;width&lt;/code&gt; or &lt;code&gt;maximize&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="991ee0e643adfa4720cc1484436456271a90e8db" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;windowSize&lt;/code&gt;: (optional) default window size. Set a dimension like &lt;code&gt;640x480&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81795df089fe5163d1cf8f4f35ffa49bec628370" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;windowSize&lt;/code&gt;: (optional) default window size. Set to &lt;code&gt;maximize&lt;/code&gt; or a dimension in the format &lt;code&gt;640x480&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb9ca6deb6164a74f8f26201f13724ba680fa27a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;within&lt;/code&gt; can also work with &lt;a href=&quot;https://codecept.io/acceptance/#iframes&quot;&gt;iframes&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="476daa2836a1ab23ca2888d577cca8bbc401b419" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;xScenario&lt;/code&gt; - skips current test</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebfd0140d670b3f5764d459014b707649da5dc1e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;xoffset&lt;/code&gt; (optional)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3294af0a4fac1a99071e5d2ecc25643d69a3d26c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;yoffset&lt;/code&gt; (optional)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79feff0694d387c9f4aa1b4065a151c456d889b0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;~user&lt;/code&gt; finds element with accessibility id &quot;user&quot; (in Mobile testing) or with &lt;code&gt;aria-label=user&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b295c64574c6ec71722673711439cf3213e36ab" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;(deprecated, use &lt;a href=&quot;#plugins&quot;&gt;plugins&lt;/a&gt;)&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d0ea83508c25d8ccbcd5e912bafb248f773e505" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;(or &lt;code&gt;generate helper&lt;/code&gt;)&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db97b426deb8791bb621f2288b2e15c3d90de514" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;All actions are listed in &lt;a href=&quot;https://codecept.io/helpers/Puppeteer/&quot;&gt;helper reference&lt;/a&gt;.&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1e0e3a102698786c0a9a41ee721f5a0b7b10875" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Disclaimer: Allure is a standalone tool. Please refer to &lt;a href=&quot;https://docs.qameta.io/allure/&quot;&gt;Allure documentation&lt;/a&gt; to learn more about using Allure reports.&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2588a646bd9f14695b4aef7a683ffc7314480c04" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;HINT: If you don't use DataTable. add &lt;code&gt;toString()&lt;/code&gt; method to each object added to data set, so the data could be pretty printed in a test name&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="533ff50e0d375a5825e9022b7d4ba89c0d079cac" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Important: you can't use name &lt;code&gt;current&lt;/code&gt; for pageObjects or helpers in data scenarios&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5052bc9713e91dbfc2efeca5430c6a2a48115809" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;More options are listed in &lt;a href=&quot;https://codecept.io/helpers/Puppeteer/&quot;&gt;helper reference&lt;/a&gt;.&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5d2e34b47169e9af14d00363acb00d54f34a69d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;This chapter describes data management for external sources. If you are looking for using Data Sets in tests, see &lt;a href=&quot;https://codecept.io/advanced/#data-drivern-tests&quot;&gt;Data Driven Tests&lt;/a&gt; section&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a9565bcb1d0935fdc8c73b1f3ede6a7564863da" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;async&lt;/em&gt; - means that event is fired when an actions is scheduled. Use &lt;code&gt;recorder&lt;/code&gt; to schedule your actions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c963483c9f0269737a2ec5ae347ff43e9bbdfefe" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;sync&lt;/em&gt; - means that event is fired in the moment of action happens.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b323d82bd05e5e7198cccf1b4d0765629c88f9c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;CodeceptJS can execute this scenario step by step as an automated test&lt;/strong&gt;. Every step in this scenario requires a code which defines it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9734c8c864e666df9192b2e2037d61fbcf23728" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Extends Helper&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76cc7271bd9623f5780b04970322e084bd587c89" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Extends WebdriverIO&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f190b7646891cebbf1b4c4ccfb9ff598391a6db7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Follow corresponding guide &amp;gt;&amp;gt;&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2dd072c7e8a0ee7858d334b6012790dfde14ac18" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;NodeJS v 8.9&lt;/strong&gt; and higher required to start. CodeceptJS is multi-backend testing framework. It can execute tests using different libraries like webdriverio, Puppeteer, Protractor, etc.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a22ce0253c144e38c75cc4f66797cf481ce83a1d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: The &lt;code&gt;bootstrapAll&lt;/code&gt; and &lt;code&gt;teardownAll&lt;/code&gt; hooks are only called when using &lt;a href=&quot;https://codecept.io/advanced/#multiple-execution&quot;&gt;Multiple Execution&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0d830b7504cff2f1a35c3175ec0c920219037f4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Use local CodeceptJS installation to get access to &lt;code&gt;codeceptjs&lt;/code&gt; module&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1dd1f55d0352e9d90597fa6693bcd576b3fb0d1e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;bootstrap&lt;/strong&gt;: &lt;code&gt;&quot;./bootstrap.js&quot;&lt;/code&gt; - an option to run code &lt;em&gt;before&lt;/em&gt; tests are run. See &lt;a href=&quot;https://codecept.io/hooks/#bootstrap-teardown&quot;&gt;Hooks&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19e885f13f20402cfd8627fb4689dead26280e55" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;bootstrapAll&lt;/strong&gt;: &lt;code&gt;&quot;./bootstrap.js&quot;&lt;/code&gt; - an option to run code &lt;em&gt;before&lt;/em&gt; all test suites are run when using the run-multiple mode. See &lt;a href=&quot;https://codecept.io/hooks/#bootstrap-teardown&quot;&gt;Hooks&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80e205b6c65308051b1717f79cbdf17eac52fde7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;grep&lt;/strong&gt;: - patern to filter tests by name</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6711b6e6396921b68a8bdf92a40b8ba9b45b36f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;helpers&lt;/strong&gt;: &lt;code&gt;{}&lt;/code&gt; - list of enabled helpers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fb09dce43a0edb5417f4f3ff92ed5b6e3935371" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;hooks&lt;/strong&gt;: - include custom listeners to plug into execution workflow. See &lt;a href=&quot;https://codecept.io/hooks/#custom-hooks&quot;&gt;Custom Hooks&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fa052daff81141632680d810d3a56b1981ac413" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;include&lt;/strong&gt;: &lt;code&gt;{}&lt;/code&gt; - actors and page objects to be registered in DI container and included in tests. Accepts objects and module &lt;code&gt;require&lt;/code&gt; paths</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32f8495cbd9292f2d1fe875b920d1d7bc115bcda" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;mocha&lt;/strong&gt;: &lt;code&gt;{}&lt;/code&gt; - mocha options, &lt;a href=&quot;https://codecept.io/reports/&quot;&gt;reporters&lt;/a&gt; can be configured here</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0afd71f49b9a3b73f54ae4b498de61ced17e676f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;multiple&lt;/strong&gt;: &lt;code&gt;{}&lt;/code&gt; - multiple options, see &lt;a href=&quot;https://codecept.io/advanced/#multiple-execution&quot;&gt;Multiple Execution&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fea1e20dcb4a66fb94d8775c067bce0572b8e2c8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;noGlobals&lt;/strong&gt;: &lt;code&gt;false&lt;/code&gt; - disable registering global variables like &lt;code&gt;Actor&lt;/code&gt;, &lt;code&gt;Helper&lt;/code&gt;, &lt;code&gt;pause&lt;/code&gt;, &lt;code&gt;within&lt;/code&gt;, &lt;code&gt;DataTable&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="460b9a559b4f8144f12786f4a8c8cead7537fd73" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;output&lt;/strong&gt;: &lt;code&gt;&quot;./output&quot;&lt;/code&gt; - where to store failure screenshots, etc</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42d2a7ba56229589c29a0e77d2c6ec6a1e67cd5c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;teardown&lt;/strong&gt;: - an option to run code &lt;em&gt;after&lt;/em&gt; all test suites are run when using the run-multiple mode. See &lt;a href=&quot;https://codecept.io/hooks/#bootstrap-teardown&quot;&gt;Hooks&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d097e555c0a4287219c0d380082972e79015280" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;teardownAll&lt;/strong&gt;: - an option to run code &lt;em&gt;after&lt;/em&gt; tests are run. See &lt;a href=&quot;https://codecept.io/hooks/#bootstrap-teardown&quot;&gt;Hooks&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f6b208ed33ba0b3bf720e2884a85dafd6e99fc7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;tests&lt;/strong&gt;: &lt;code&gt;&quot;./*_test.js&quot;&lt;/code&gt; - pattern to locate tests</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c28b4ce2251ebbe562d2e106f7fab66aa31850b8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;timeout&lt;/strong&gt;: &lt;code&gt;10000&lt;/code&gt; - default tests timeout</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a2157850516cef31bf66e37cb4bf68ddd706767" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;translation&lt;/strong&gt;: - &lt;a href=&quot;https://codecept.io/translation/&quot;&gt;locale&lt;/a&gt; to be used to print s teps output, as well as used in source code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6610a2ac953e2fe83fb4cc6145fb7f242ced29b" translate="yes" xml:space="preserve">
          <source>A complete ToDo-MVC test may look like:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f5dd7c88e0aee8567b8d08e2b734d7193eb19a9" translate="yes" xml:space="preserve">
          <source>A helper should be enabled in main config. Configuration (like base url) should be provided as well:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4a44e6490f98270a20ede199d209489c694b243" translate="yes" xml:space="preserve">
          <source>A plugin is a basic JS module returning a function. Plugins can have individual configs which are passed into this function:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="591cb6146bc3a095f4f8e43beed6ddc9fd5a2c30" translate="yes" xml:space="preserve">
          <source>A single test file can be executed if you provide a relative path to such file:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="facfda1dac120cd403c54ebdecc5979afdd4eaf8" translate="yes" xml:space="preserve">
          <source>A test can be executed with &lt;code&gt;run&lt;/code&gt; command, we recommend to use &lt;code&gt;--steps&lt;/code&gt; options to follow step-by-step execution:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f17fa5a73bc990f2767342870ce13cf2a9cd33b" translate="yes" xml:space="preserve">
          <source>A test is written in a scenario-driven manner, listing an actions taken by a user. This is the sample test for a native mobile application:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d93d10ff0fbef1b4aa0ddc24e10e907746d3c85a" translate="yes" xml:space="preserve">
          <source>API</source>
          <target state="translated">API</target>
        </trans-unit>
        <trans-unit id="5abb45abe4f574a0b87e469d6830874c7aa7cb7a" translate="yes" xml:space="preserve">
          <source>Acceptance (also called End to End) tests can cover standard but complex scenarios from a user's perspective. With acceptance tests you can be confident that users, following all defined scenarios, won't get errors. We check &lt;strong&gt;not just functionality of application but a user interface&lt;/strong&gt; (UI) as well.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="757aaccbcdbcbba6ab93cfaa3f6fa863cc276d07" translate="yes" xml:space="preserve">
          <source>Acceptance Testing</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8d1ba95afe3b703fa366eb8f5c33006eca234b2" translate="yes" xml:space="preserve">
          <source>Acceptance tests interact with a websites using UI and real browser. There is no way to create data for a specific test other than from user interface. That makes tests slow and fragile. Instead of testing a single feature you need to follow all creation/removal process.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="618b9a27c23383e4fa1ea21bbe43e09f0fedaf0f" translate="yes" xml:space="preserve">
          <source>Accepts the active JavaScript native popup window, as created by window.alert|window.confirm|window.prompt. Don't confuse popups with modal windows, as created by &lt;a href=&quot;http://jster.net/category/windows-modals-popups&quot;&gt;various libraries&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3159695ab29b1e590f904f120604ce8367324d38" translate="yes" xml:space="preserve">
          <source>Accepts the active JavaScript native popup window, as created by window.alert|window.confirm|window.prompt. Don't confuse popups with modal windows, as created by &lt;a href=&quot;http://jster.net/category/windows-modals-popups&quot;&gt;various libraries&lt;/a&gt;. Appium: support only web testing</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29ce3662e148aa457b9f03e4764943187f7c7d71" translate="yes" xml:space="preserve">
          <source>Access From Helpers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3cd636a585b20c40ac2df5ffb403e83cb2eef51" translate="yes" xml:space="preserve">
          <source>Actions</source>
          <target state="translated">Actions</target>
        </trans-unit>
        <trans-unit id="cbd19b5c397e027a0164811d83f5bde303ac9e4f" translate="yes" xml:space="preserve">
          <source>Actor</source>
          <target state="translated">Actor</target>
        </trans-unit>
        <trans-unit id="3ea6ff4e8a9713a9c12c1f7447a6905e977795ca" translate="yes" xml:space="preserve">
          <source>Add &lt;a href=&quot;https://codecept.io/plugins/#allure&quot;&gt;Allure plugin&lt;/a&gt; in config under &lt;code&gt;plugins&lt;/code&gt; section.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7afc5cdec0df28b2fd253c56a1171ffeab8b630f" translate="yes" xml:space="preserve">
          <source>Add &lt;code&gt;~&lt;/code&gt; prefix to search for element by its accessibility id:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7954f3e1ee9778efe3d82280a9e74c9a15d305f4" translate="yes" xml:space="preserve">
          <source>Add a header override for all HTTP requests. If header is undefined, the header overrides will be reset.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30b62ad1480cdd0c905da017f29c4b209c775031" translate="yes" xml:space="preserve">
          <source>Add the 'dialog' event listener to a page</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="521f394680289599ce3b794f59c920dec878a018" translate="yes" xml:space="preserve">
          <source>Add this plugin to config file:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f467993af700accd70e24de275ce0671a995b443" translate="yes" xml:space="preserve">
          <source>Add to &lt;code&gt;codecept.json&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70dcbe1ccd14e243b5c19425b304dd04ddfe6168" translate="yes" xml:space="preserve">
          <source>Add to config</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d06f0e1a839410fafd1f2ca39b039c1810b1c495" translate="yes" xml:space="preserve">
          <source>Add to config (&lt;code&gt;codecept.json&lt;/code&gt;):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28aec60750f00800437d82f01f9bd3b76e31ad93" translate="yes" xml:space="preserve">
          <source>Add to config:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b9389baf95d1a0fca72ff2265bebc480011895d" translate="yes" xml:space="preserve">
          <source>Additional Links</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6a84cff2631ea9e8c6d911aea66c9abfd878361" translate="yes" xml:space="preserve">
          <source>Additional assertions:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="953f93a202fcc4a2fc3b10361de95ff339457d7d" translate="yes" xml:space="preserve">
          <source>Additional configuration params can be used from &lt;a href=&quot;http://webdriver.io/guide/getstarted/configuration.html&quot;&gt;webdriverio website&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7ce992e3bef999c3750117cb883b40f514863ea" translate="yes" xml:space="preserve">
          <source>Additional configuration params can be used from &lt;a href=&quot;https://github.com/appium/appium/blob/master/docs/en/writing-running-appium/caps.md&quot;&gt;https://github.com/appium/appium/blob/master/docs/en/writing-running-appium/caps.md&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10585735c6b344913adffeb9a0b7a6e2bd85db23" translate="yes" xml:space="preserve">
          <source>Additional configuration should be added to &lt;code&gt;codecept.json&lt;/code&gt; to print xml report to &lt;code&gt;output&lt;/code&gt; directory:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b39f9ced39c1454feacdc4bff05c78fbc0fddb7c" translate="yes" xml:space="preserve">
          <source>Additional filter can be applied by checking for capabilities. For instance, this code will be executed only on Android 6.0:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f30845f8bc87d536d560c1ea8e0aa04e715c3aac" translate="yes" xml:space="preserve">
          <source>Additional filter can be applied by checking for capabilities. For instance, this code will be executed only on iPhone 5s:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9053c3c4340cb56be14737b6d0b86e7d391a4e0" translate="yes" xml:space="preserve">
          <source>Additional options can be provided to retry so you can set the additional options (defined in &lt;a href=&quot;https://www.npmjs.com/package/promise-retry&quot;&gt;promise-retry&lt;/a&gt; library).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0da5abc0179ebacdbec54dc0ac37b9e49ef4f0ab" translate="yes" xml:space="preserve">
          <source>Adds context to executed test in HTML report:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d05b47255796e8eca7c2ce749a835b147577ab9" translate="yes" xml:space="preserve">
          <source>Advanced Gherkin</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec9c1eee60a6c8d412e86494c4538774b81ce815" translate="yes" xml:space="preserve">
          <source>Advanced Usage</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5126940d744a6dff391a643edf858b06f00785ed" translate="yes" xml:space="preserve">
          <source>Advanced usage</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0543e7c79923448f6a5c0669d9a50a0264409c32" translate="yes" xml:space="preserve">
          <source>After doing that IDE should provide autocompletion for &lt;code&gt;I&lt;/code&gt; object inside &lt;code&gt;Scenario&lt;/code&gt; and &lt;code&gt;within&lt;/code&gt; blocks.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbef34d97957d49c362141aca659aad05d1b2feb" translate="yes" xml:space="preserve">
          <source>After running &lt;code&gt;codeceptjs init&lt;/code&gt; it should be saved in test root.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a3be93785530d09674ecae36ec756d5bce766cd" translate="yes" xml:space="preserve">
          <source>After that you can start writing your first CodeceptJS/Angular tests. Please look into the reference of &lt;a href=&quot;https://codecept.io/helpers/Protractor/&quot;&gt;Protractor helper&lt;/a&gt; for all available actions. You can also run &lt;code&gt;list&lt;/code&gt; command to see methods of I:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49221792fa970ed140964799d6b9493ae4a15ecb" translate="yes" xml:space="preserve">
          <source>After writing your own custom helpers here you can always update CodeceptJS TypeScript Type Definitions running:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="311591d93f8ce03000dd50ad321b9028ec535c34" translate="yes" xml:space="preserve">
          <source>All actions whicn interact with elements &lt;strong&gt;support CSS and XPath locators&lt;/strong&gt;. Actions like &lt;code&gt;click&lt;/code&gt; or &lt;code&gt;fillField&lt;/code&gt; by locate elements by their name or value on a page:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7958ae1f34b1ca064c65892f90a5b2bb86af3e7" translate="yes" xml:space="preserve">
          <source>All helpers share the same API so it's easy to migrate tests from one backend to other. However, because of difference in backends and their limitations, they are not guarantted to compatible between each other. For instance, you can't set request headers in WebDriverIO or Protractor, but you can do so in Puppteer or Nigthmare.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29be91c633938ed89cbc055506da9a0a312c471e" translate="yes" xml:space="preserve">
          <source>All methods except those starting from &lt;code&gt;_&lt;/code&gt; will be added to &lt;code&gt;I&lt;/code&gt; object and treated as test actions. Every method should return a value in order to be appended into promise chain.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c1ddce3e3a6b173f6dae42ed796ebb60420236d" translate="yes" xml:space="preserve">
          <source>All objects described here are injected with Dependency Injection. The similar way it happens in AngularJS framework. If you want an object to be injected in scenario by its name add it to configuration:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef3cb2d2d512c8daecfb859635794daeb1106027" translate="yes" xml:space="preserve">
          <source>All scenarios should describe actions on site and assertions taken in the end. In CodeceptJS assertion commands have &lt;code&gt;see&lt;/code&gt; or &lt;code&gt;dontSee&lt;/code&gt; prefix:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9205e1f791d1670f65db2c481db6d6a37595a37" translate="yes" xml:space="preserve">
          <source>All tests with &lt;code&gt;@tag&lt;/code&gt; could be executed with &lt;code&gt;--grep @tag&lt;/code&gt; option.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1d396a45f09a5dc10583021b1b5554d551f7fa8" translate="yes" xml:space="preserve">
          <source>Allure</source>
          <target state="translated">Allure</target>
        </trans-unit>
        <trans-unit id="5451ba2aa5800b61978906692701b7aaf0460871" translate="yes" xml:space="preserve">
          <source>Allure Reports</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38fcbeb03fcb02089baf700e5ac9ab96b82a29c0" translate="yes" xml:space="preserve">
          <source>Allure reporter</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="615564115d33b9755fc781ed0d9104065cb86de0" translate="yes" xml:space="preserve">
          <source>Allure reporter aggregates data from other plugins like &lt;a href=&quot;https://codecept.io/plugins/#stepByStepReport&quot;&gt;&lt;em&gt;stepByStepReport&lt;/em&gt;&lt;/a&gt; and &lt;a href=&quot;https://codecept.io/plugins/#screenshotOnFail&quot;&gt;&lt;em&gt;screenshotOnFail&lt;/em&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4a590ba050f1e2cd75128b8b314b4099412fa62" translate="yes" xml:space="preserve">
          <source>Allure requires &lt;strong&gt;Java 8&lt;/strong&gt; to work. Then Allure can be installed via NPM:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b690aea65a5167ef1ca5f77382ed245e1d0f8a2c" translate="yes" xml:space="preserve">
          <source>Almost ) This example is &lt;a href=&quot;https://github.com/DavertMik/codeceptjs-angular-todomvc&quot;&gt;available on GitHub&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7296e6798a55f71b7fb98fc77c4276e8bfca51b1" translate="yes" xml:space="preserve">
          <source>Also capabilities can be checked by a function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1b99c8fc61f945774c8a842b3a39920b8aee2e8" translate="yes" xml:space="preserve">
          <source>Also capabilities can be checked by a function. In this case, code will be executed only on Android &amp;gt;= 6.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23e796f83966f7fad61da6d127e606c57d629f9e" translate="yes" xml:space="preserve">
          <source>Also if you will add Mochawesome helper, then you will able to add custom context in report:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="465cdbe5c537600604804fd2087d416120b59603" translate="yes" xml:space="preserve">
          <source>Also you can use &lt;code&gt;async/await&lt;/code&gt; inside PageObject:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="713891f2623cbca995fad0210aab7c1d8f2dd4a5" translate="yes" xml:space="preserve">
          <source>Also, look at &lt;a href=&quot;https://codecept.io/installation/&quot;&gt;complete installation reference&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc96f3528e26f174ea9e8a79f27a086ec6355ee2" translate="yes" xml:space="preserve">
          <source>Also, you can use &lt;code&gt;within&lt;/code&gt; inside a session but you can't call session from inside &lt;code&gt;within&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d187a3f92beb0da8078e0f3446b8467aac9f783" translate="yes" xml:space="preserve">
          <source>Alternative scenario:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce1b646062fe5307eebf86ea91ac97de6c219d5a" translate="yes" xml:space="preserve">
          <source>Alternatively arguments to &lt;code&gt;codecept run&lt;/code&gt; command can be passed via &lt;code&gt;CODECEPT_ARGS&lt;/code&gt; environment variable. For example to run your tests with debug output:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b045659a5b8412ef8592d96e4301626a94432b21" translate="yes" xml:space="preserve">
          <source>Alternatively use &lt;code&gt;switchToWeb&lt;/code&gt; or &lt;code&gt;switchToNative&lt;/code&gt; methods to switch between contexts.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86d635712cca92b73c97f07cd6dcb828e42deb64" translate="yes" xml:space="preserve">
          <source>Alternativly, use &lt;code&gt;tag&lt;/code&gt; method of Scenario to set additional tags:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6569ead944c6dec0bd7d74a4a48103b05b21dfb2" translate="yes" xml:space="preserve">
          <source>Among all Selenium alternatives the most interesting emerging ones are tools developed around Google Chrome &lt;a href=&quot;https://chromedevtools.github.io/devtools-protocol/&quot;&gt;DevTools Protocol&lt;/a&gt;. And the most prominent one is &lt;a href=&quot;https://github.com/GoogleChrome/puppeteer&quot;&gt;Puppeteer&lt;/a&gt;. It operates over Google Chrome directly without requireing additional tools like ChromeDriver. So tests setup with Puppeteer can be started with npm install only. If you want get faster and simpler to setup tests, Puppeteer would be your choice.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ca1629508b9fbb5fe4eb287b6ed3903d7600cdf" translate="yes" xml:space="preserve">
          <source>And a basic project initialized</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67ff3b122fcc2d9de1d3bd55efc870bc73725e11" translate="yes" xml:space="preserve">
          <source>And don't forget that you can pause execution and enter &lt;strong&gt;interactive console&lt;/strong&gt; mode by calling &lt;code&gt;pause()&lt;/code&gt; inside your test.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79accb14658adbfa80437ac456c2e0eaa4edb68a" translate="yes" xml:space="preserve">
          <source>And in the end we are verifying our expectation using &lt;strong&gt;Then&lt;/strong&gt; keyword. The action changed the initial given state, and produced some results. Let's check that those results are what we actually expect.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eeea62b5ba200282fffb89bbcf1e557f1fed81ce" translate="yes" xml:space="preserve">
          <source>And that's all, method is available to use as &lt;code&gt;I.createTodo(title)&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6ab2d76bead3bba043b28feb2ad7558ab528075" translate="yes" xml:space="preserve">
          <source>Android &lt;code&gt;accessibility id&lt;/code&gt; matches the content-description</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f0942e658ae7e886d3ed10b842d2d8f2e59ff64" translate="yes" xml:space="preserve">
          <source>Api Requests</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e2ecda0a62a69e9522d3272ac1f6aa6d1ce8518" translate="yes" xml:space="preserve">
          <source>Api Requests (ApiDataFactory)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7356297de3b2a67704fc78441c59464ac8c2d54e" translate="yes" xml:space="preserve">
          <source>ApiDataFactory</source>
          <target state="translated">ApiDataFactory</target>
        </trans-unit>
        <trans-unit id="a3264c5a7f03c3363a2800324ba4e2461bbf72b5" translate="yes" xml:space="preserve">
          <source>ApiDataFactory has following config options:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10a279e22efe0dc44eaf15ccfef6670355853e4e" translate="yes" xml:space="preserve">
          <source>Append &lt;code&gt;@tag&lt;/code&gt; to your test name, so</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39624376e7a1a80be40ee6c9256b0b949c2d045c" translate="yes" xml:space="preserve">
          <source>Appends text to a input field or textarea. Field is located by name, label, CSS or XPath</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="713356aa3c81b2f7524a54751b5931046e9c45d2" translate="yes" xml:space="preserve">
          <source>Appium</source>
          <target state="translated">Appium</target>
        </trans-unit>
        <trans-unit id="085953a856c68cec4500fc00fc83a163b0747dc2" translate="yes" xml:space="preserve">
          <source>Appium Installation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14d975f7e2db9871331aa4976d022b3c1bba3da8" translate="yes" xml:space="preserve">
          <source>Appium Installation (Appium)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8870baa3ed282bcdca020663a3051874cab5b774" translate="yes" xml:space="preserve">
          <source>Appium helper extends &lt;a href=&quot;https://codecept.io/helpers/WebDriverIO/&quot;&gt;WebriverIO&lt;/a&gt; helper. It supports all browser methods and also includes special methods for mobile apps testing. You can use this helper to test Web on desktop and mobile devices and mobile apps.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="352db0f5ec2508a3df6321e2e82989ce9b563302" translate="yes" xml:space="preserve">
          <source>Appium is an open source test automation framework for use with native, hybrid and mobile web apps that implements the WebDriver protocol. It allows you to run Selenium tests on mobile devices and also test native, hybrid and mobile web apps.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9330da3ffd106484c68fcce718f63ab0d0c58936" translate="yes" xml:space="preserve">
          <source>Appium: not tested</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1800cd71b653a3e31048eb42e6fdd55b2e7889a7" translate="yes" xml:space="preserve">
          <source>Appium: support</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="faa7fa5242af5360fe5727a7c912d77498eb00f6" translate="yes" xml:space="preserve">
          <source>Appium: support Android and iOS</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2cafc1a3844bff084f246f14bd3d2e4a96672bf" translate="yes" xml:space="preserve">
          <source>Appium: support only Android</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a2f82760034c840a64a67564aba8d7841954051" translate="yes" xml:space="preserve">
          <source>Appium: support only iOS</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fc5e50a00d95ffaf5820ff9e85512eef1377006" translate="yes" xml:space="preserve">
          <source>Appium: support only iOS TODO: not tested</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2591515b24a9acb363ad0bc7b3ad7aa4f884c7f" translate="yes" xml:space="preserve">
          <source>Appium: support only web testing</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b040b4179b8b00702858fdb4c1afec3d6d284509" translate="yes" xml:space="preserve">
          <source>Architecture</source>
          <target state="translated">Architecture</target>
        </trans-unit>
        <trans-unit id="121a0057954d0808e91d78d1f99afd0e4320febf" translate="yes" xml:space="preserve">
          <source>As a small bonus: all &lt;code&gt;console.log&lt;/code&gt; calls on a page will be also shown in &lt;code&gt;--debug&lt;/code&gt; mode.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c43faa36efe8b5b03379f7d2aba91eb0e028579" translate="yes" xml:space="preserve">
          <source>As an example we will use &lt;code&gt;ToDoMvc&lt;/code&gt; app for testing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ef2c9f8c81ba0d375b9257ee62ed26baa7e31e9" translate="yes" xml:space="preserve">
          <source>As an example we will use popular &lt;a href=&quot;http://todomvc.com/examples/angularjs/#/&quot;&gt;TodoMVC application&lt;/a&gt;. How would we test creating a new todo item in CodeceptJS?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08dd4a047209f6b63f68f7c11ccbeeecc727e0cb" translate="yes" xml:space="preserve">
          <source>As we can see this simple story highlights core concepts that are called &lt;em&gt;contracts&lt;/em&gt;. We should fulfill those contracts to model software correctly. But how we can verify that those contracts are being satisfied? &lt;a href=&quot;http://cucumber.io&quot;&gt;Cucumber&lt;/a&gt; introduced a special language for such stories called &lt;strong&gt;Gherkin&lt;/strong&gt;. Same story transformed to Gherkin will look like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2720524bcd5afaf51de68ee0ca9f0cb6fe6c349" translate="yes" xml:space="preserve">
          <source>As well as a method for setting headers: &lt;code&gt;haveRequestHeaders&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41ad3f64b17aba276e68573d4325f9fa9c9d193a" translate="yes" xml:space="preserve">
          <source>As you know, &lt;a href=&quot;http://www.protractortest.org/#/&quot;&gt;Protractor&lt;/a&gt; is an official tool for testing AngularJS applications. CodeceptJS should not be considered as alternative to Protractor but a testing framework utilizing this powerful library.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb48498782e953e707e6c2b3601058657c28e8c8" translate="yes" xml:space="preserve">
          <source>As you see the Nightmare test was almost &lt;strong&gt;3 times faster&lt;/strong&gt; than Selenium test. Sure, this can't be taken as a valuable benchmark but more like a proof of concept.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a81644782c5eb46389fd7a00744ac673632ef4a" translate="yes" xml:space="preserve">
          <source>As you see, &lt;code&gt;I&lt;/code&gt; object is available there so you can use it as you do in tests. General page object for a login page may look like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49bf55dc112eb3597726ba8ecf785a4fae4cbce0" translate="yes" xml:space="preserve">
          <source>Assertions</source>
          <target state="translated">Assertions</target>
        </trans-unit>
        <trans-unit id="f01e10f133e57b22944c09c18505598793a6f0f6" translate="yes" xml:space="preserve">
          <source>Assertions start with &lt;code&gt;see&lt;/code&gt; prefix. You can check text on a page, elements on page and others.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab66f57b79bb460cf5fad55a4965fe5ee2c1f4eb" translate="yes" xml:space="preserve">
          <source>At first, you need data generation libraries which are &lt;a href=&quot;https://github.com/rosiejs/rosie&quot;&gt;Rosie&lt;/a&gt; and &lt;a href=&quot;https://www.npmjs.com/package/faker&quot;&gt;Faker&lt;/a&gt;. Faker can generate random names, emails, texts, and Rosie uses them to generate objects using factories.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5aab87508f765a6bbc7982c2cc5b19f49e58f213" translate="yes" xml:space="preserve">
          <source>At initialization you were asked to create custom steps file. If you accepted this option you may use &lt;code&gt;custom_steps.js&lt;/code&gt; file to extend &lt;code&gt;I&lt;/code&gt;. See how &lt;code&gt;login&lt;/code&gt; method can be added to &lt;code&gt;I&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a99187da1acb8680dbf1966c1c6e861a5b219e7" translate="yes" xml:space="preserve">
          <source>At the end of a test ApiDataFactory will clean up created record for you. This is done by collecting ids from crated records and running &lt;code&gt;DELETE /api/users/{id}&lt;/code&gt; requests at the end of a test. This rules can be customized in helper configuration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6aa246b352fb635fb2ddfb947838452e21832bcc" translate="yes" xml:space="preserve">
          <source>Attaches a file to element located by label, name, CSS or XPath Path to file is relative current codecept directory (where codecept.json is located). File will be uploaded to remote system (if tests are running remotely).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d12c3aa7dfd6ffda2f06964c1356cd35374abbb" translate="yes" xml:space="preserve">
          <source>Auto Retry</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3c50abacea6260ab01733df8c3d4d2b2c754a7a" translate="yes" xml:space="preserve">
          <source>Available events:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="236ae28dbecf28768a3709f7d5a684df5a19f740" translate="yes" xml:space="preserve">
          <source>BDD encourages exploration and debate in order to formalize the requirements and the features that needs to be implemented by requesting to write the User Stories in a way that everyone can understand.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f276d2ceab9760d4740612389f1ad072382c5d4" translate="yes" xml:space="preserve">
          <source>BDD has its own evolution from the days it was born, started by replacing &quot;test&quot; to &quot;should&quot; in unit tests, and moving towards powerful tools like Cucumber and Behat, which made user stories (human readable text) to be executed as an acceptance test.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44a60639609e668544aa829cd0164c1f3fb0f590" translate="yes" xml:space="preserve">
          <source>BDD was introduced by &lt;a href=&quot;https://dannorth.net/introducing-bdd/&quot;&gt;Dan North&lt;/a&gt;. He described it as:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64dd60fe1a049fe6db3eb1369dec2e42bf428e21" translate="yes" xml:space="preserve">
          <source>Background</source>
          <target state="translated">Background</target>
        </trans-unit>
        <trans-unit id="5fcebeefad3cdbbf8733aa928160dec7dc90c1a1" translate="yes" xml:space="preserve">
          <source>Basics</source>
          <target state="translated">Basics</target>
        </trans-unit>
        <trans-unit id="2f05e31f740d18f907f1292b45457c5c15f9a01b" translate="yes" xml:space="preserve">
          <source>Be warned that fuzzy locators can be significantly slower than strict locators. If speed is a concern, it's recommended you stick with explicitly specifying the locator type via object syntax.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74f39697ac328c6325ce068b6aaca626abc0bf63" translate="yes" xml:space="preserve">
          <source>Before</source>
          <target state="translated">Before</target>
        </trans-unit>
        <trans-unit id="e9785695c7486824160200d52a3a6b4cf2db8efa" translate="yes" xml:space="preserve">
          <source>BeforeSuite</source>
          <target state="translated">BeforeSuite</target>
        </trans-unit>
        <trans-unit id="47339c9a15586b43505d2dc883127e6b2e5267f1" translate="yes" xml:space="preserve">
          <source>Behavior Driven Development</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e4f233257c06a9f289dd1abd3ac57bb0ccf8151" translate="yes" xml:space="preserve">
          <source>Behavior Driven Development (BDD) is a popular software development methodology. BDD is considered an extension of TDD, and is greatly inspired by &lt;a href=&quot;http://agilemanifesto.org/&quot;&gt;Agile&lt;/a&gt; practices. The primary reason to choose BDD as your development process is to break down communication barriers between business and technical teams. BDD encourages the use of automated testing to verify all documented features of a project from the very beginning. This is why it is common to talk about BDD in the context of test frameworks (like CodeceptJS). The BDD approach, however, is about much more than testing - it is a common language for all team members to use during the development process.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b54b60c72baa875dca67eb56d63340b3a44bbda4" translate="yes" xml:space="preserve">
          <source>Best HTML reports could be produced with &lt;a href=&quot;https://www.npmjs.com/package/mochawesome&quot;&gt;mochawesome&lt;/a&gt; reporter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f406f65f030de7af0e37a9290f1ba903075c7e6c" translate="yes" xml:space="preserve">
          <source>Blazing Fast Tests with Nightmare</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f68f1b8753543a71c4087b167a7cb063a61b84a6" translate="yes" xml:space="preserve">
          <source>Bootstrap &amp;amp; Teardown</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ba6fe8243a3ebabcc11c253302fb999ae8bb067" translate="yes" xml:space="preserve">
          <source>Both CSS and XPath is supported. Usually CodeceptJS can guess locator's type:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61d51540addb4a58a4a3d5322ed5c48e7be2647d" translate="yes" xml:space="preserve">
          <source>BrowserStack Configuration</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbd80cf7e2ded5efed8f4ee9151ab57a8ab66392" translate="yes" xml:space="preserve">
          <source>Build</source>
          <target state="translated">Build</target>
        </trans-unit>
        <trans-unit id="a8bde20284929412d273ec2544ab41f46323c139" translate="yes" xml:space="preserve">
          <source>But how to get all those locators? We recommend to use &lt;a href=&quot;https://github.com/appium/appium-desktop&quot;&gt;Appium Inspector&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80cc533d523b8eba2d4fa34cb6a985f636827430" translate="yes" xml:space="preserve">
          <source>Buttons can be matched by their visible text:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4c42951ea500640c22350a16cdc9bdbc903b6b0" translate="yes" xml:space="preserve">
          <source>By default &lt;code&gt;codecept.json&lt;/code&gt; is used for configuration. You can override its values in runtime by using &lt;code&gt;--override&lt;/code&gt; or &lt;code&gt;-o&lt;/code&gt; option in command line, passing valid JSON as a value:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="959941d8265ba934057a96b01b59bba40dc12589" translate="yes" xml:space="preserve">
          <source>By default CodeceptJS provides cli reporter with console output. Test names and failures will be printed to screen.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ea6cdf3e5aafb059f591deacb8235cdbb14dcac" translate="yes" xml:space="preserve">
          <source>By default CodeceptJS saves a screenshot of a failed test. This can be configured in &lt;a href=&quot;https://codecept.io/plugins/#screenshotonfail&quot;&gt;screenshotOnFail Plugin&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dde71849fb69be3686ad9d173e5046e0a62fb2c2" translate="yes" xml:space="preserve">
          <source>By default CodeceptJS tries to find button or link with exact text on it</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1bdc6203d6d5b8f1835870f2c7aef9784d044dd7" translate="yes" xml:space="preserve">
          <source>By default CodeceptJS tries to guess the locator type. In order to specify exact locator type you can pass a hash called &lt;strong&gt;strict locator&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="996d709757b86baaf6d446a55eb0e25598efbcc2" translate="yes" xml:space="preserve">
          <source>By default CodeceptJS uses &lt;a href=&quot;https://codecept.io/helpers/WebDriverIO/&quot;&gt;WebDriverIO&lt;/a&gt; helper and &lt;strong&gt;Selenium&lt;/strong&gt; to automate browser. Within web page you can locate elements, interact with them, and check that expected elements are present on a page. However, you can also choose &lt;a href=&quot;https://codecept.io/helpers/Nightmare&quot;&gt;Nightmare&lt;/a&gt; or &lt;a href=&quot;https://codecept.io/helpers/Protractor&quot;&gt;Protractor&lt;/a&gt; helpers, driven by corresponding libraries. No matter of helper and library you use for acceptance testing, CodeceptJS should execute same actions in similar manner.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3a60c2a08b5ab2213620c516151f358c04dc89d" translate="yes" xml:space="preserve">
          <source>By default it is set to &lt;code&gt;domcontentloaded&lt;/code&gt; which waits for &lt;code&gt;DOMContentLoaded&lt;/code&gt; event being fired. However, for Single Page Applications it's more useful to set this value to &lt;code&gt;networkidle0&lt;/code&gt; which waits for all network connections to be finished.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b565f9f021920720542ff5cefc884fd22f176bac" translate="yes" xml:space="preserve">
          <source>By default there is no timeout for tests, however you can change this value for a specific suite:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f72abf2c1b282644d3491542b00bd40d233dae7" translate="yes" xml:space="preserve">
          <source>By default to create a record ApiDataFactory will use endpoint and plural factory name:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8a5e70b4f50e663ce57de80a35acb9b4eefb0e3" translate="yes" xml:space="preserve">
          <source>By default, allure reports are saved to &lt;code&gt;output&lt;/code&gt; directory. Launch Allure server and see the report like on a screenshot above:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3647de0dec81914980d6546302416031dccdaea4" translate="yes" xml:space="preserve">
          <source>By defining a factory you set the rules of how data is generated. This data will be saved on server via REST API and deleted in the end of a test.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ea70a5bc0bc0926e33c938b53d03c7938d10a79" translate="yes" xml:space="preserve">
          <source>By making tests to be a part of User Story, BDD allows non-technical personnel to write (or edit) Acceptance tests.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57eee008e1da5606d280b6402899cfcf313463df" translate="yes" xml:space="preserve">
          <source>By passing value to &lt;code&gt;done()&lt;/code&gt; function you can return values. Additional arguments can be passed as well, while &lt;code&gt;done&lt;/code&gt; function is always last parameter in arguments list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89b6763b377e546fa26c21e8cfe5da267ff05ab2" translate="yes" xml:space="preserve">
          <source>By writing a test in similar manner we will have a test shown in the beginning of this guide. Probably we would like not to finish with one test, but have more, for testing editing of todo items, checking todo items, and more.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="362a27e8b217c8af38ea1ff88c14f0280fac4303" translate="yes" xml:space="preserve">
          <source>By writing every feature in User Story format that is automatically executable as a test we ensure that: business, developers, QAs and managers are in the same boat.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="194e13da720a1f025685e5d677eba8a1aff3860a" translate="yes" xml:space="preserve">
          <source>CSS</source>
          <target state="translated">CSS</target>
        </trans-unit>
        <trans-unit id="d3b4f917b7485e37712705b52ae124f856066a6c" translate="yes" xml:space="preserve">
          <source>CSS and XPath</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3cbbdaf031ce41f8a45fc0c541575095a58e4366" translate="yes" xml:space="preserve">
          <source>CSS and XPath locators</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4aa73658560730bbc290d3e82bc4f8324f2ff5f5" translate="yes" xml:space="preserve">
          <source>CSS locators are not supported in native mobile apps, you need to switch to web context to use them.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="565591bf3246df594eb5e76550b8744f2ceb9366" translate="yes" xml:space="preserve">
          <source>Can return values. Don't forget to use &lt;code&gt;await&lt;/code&gt; to get them.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb9f0b0f67eb7a28ad672cd1f3a892cba4e986d6" translate="yes" xml:space="preserve">
          <source>Changes headers to default if reset headers option is true</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26b279cf0cb60833e061c2e97120694b987319c7" translate="yes" xml:space="preserve">
          <source>Check current activity on an Android device.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aef13a6acb5e1943f77465505867e03dd0bf8b8e" translate="yes" xml:space="preserve">
          <source>Check if an app is installed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1871b4b6a87e4071c8c3eb943fc2027e67194b16" translate="yes" xml:space="preserve">
          <source>Check if an app is not installed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b4417ef4b1ebbec03ae6c70ef45963805381254" translate="yes" xml:space="preserve">
          <source>Check the device orientation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa1bb05dd09577430c6fe8dbc6f78dbad285fff3" translate="yes" xml:space="preserve">
          <source>Check the newly created &lt;code&gt;codecept.json&lt;/code&gt; configuration file. You may want to set some additional Appium settings via &lt;a href=&quot;https://appium.io/docs/en/writing-running-appium/caps/&quot;&gt;desiredCapabilities&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffa8bd7737d0cb45adfb253a42251a2cdb13fc93" translate="yes" xml:space="preserve">
          <source>Check whether the device is locked.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ee7fc02e704798b82d5bb927b3b4b4f91ca56bc" translate="yes" xml:space="preserve">
          <source>Check whether the device is not locked.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3f6bd924fbf0ef8257702b83e2e86e6cf1a3957" translate="yes" xml:space="preserve">
          <source>Checks that a given Element is present in the DOM Element is located by CSS or XPath.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee78339f227b7ffd609aa82a07a5391c7f17d8aa" translate="yes" xml:space="preserve">
          <source>Checks that a given Element is visible Element is located by CSS or XPath.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="367df727ea1c92b338f8d18982e122c74ce5bb14" translate="yes" xml:space="preserve">
          <source>Checks that a page contains a visible text. Use context parameter to narrow down the search.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb9f8423a3fa6d3ba1785744783b62faa5607643" translate="yes" xml:space="preserve">
          <source>Checks that all elements with given locator have given CSS properties.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47f4afefedcae7e3917482683d0efb30bd6f15a4" translate="yes" xml:space="preserve">
          <source>Checks that all elements with given locator have given attributes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba17373e9f7e28e72d567143742c683bc7933ce1" translate="yes" xml:space="preserve">
          <source>Checks that contents of file found by &lt;code&gt;seeFile&lt;/code&gt; doesn't equal to text.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="addb79ca2d7c05f0845a4f7aaf21d8d44f9067c8" translate="yes" xml:space="preserve">
          <source>Checks that contents of file found by &lt;code&gt;seeFile&lt;/code&gt; equal to text.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aaac892b2f5763ab83d224c141987df09fd9c5be" translate="yes" xml:space="preserve">
          <source>Checks that cookie with given name does not exist.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a18e60b87ca0b877f301b333d6982f2cf508ce4" translate="yes" xml:space="preserve">
          <source>Checks that cookie with given name exists.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9a872845c5a5f6388309d4c6b200c3c86b247ae" translate="yes" xml:space="preserve">
          <source>Checks that current url contains a provided fragment.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41e192262b9828fdcc1c3110c9acde35d83d4baf" translate="yes" xml:space="preserve">
          <source>Checks that current url does not contain a provided fragment.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afc78fa647ae49f0e82ee4263faa47148dcde438" translate="yes" xml:space="preserve">
          <source>Checks that current url is equal to provided one. If a relative url provided, a configured url will be prepended to it. So both examples will work:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b019ebaa9d1bd628eba0b5b263a13d217c013777" translate="yes" xml:space="preserve">
          <source>Checks that current url is not equal to provided one. If a relative url provided, a configured url will be prepended to it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a6ba0aa6f0a3aa7f40999d9f3c6a796f9b0749b" translate="yes" xml:space="preserve">
          <source>Checks that file exists</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3379083ec528b0b99c538fc6abf7e986b5559c70" translate="yes" xml:space="preserve">
          <source>Checks that file found by &lt;code&gt;seeFile&lt;/code&gt; doesn't include text.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9505de3387710dcfaa50a7158bcee3c57ac86560" translate="yes" xml:space="preserve">
          <source>Checks that file found by &lt;code&gt;seeFile&lt;/code&gt; includes a text.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbd2537af3062a19be0cddc69025f891eded4cb3" translate="yes" xml:space="preserve">
          <source>Checks that text is equal to provided one.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5baee1748a326c0ff46ccbbdbdfccc6435933da" translate="yes" xml:space="preserve">
          <source>Checks that the active JavaScript popup, as created by &lt;code&gt;window.alert|window.confirm|window.prompt&lt;/code&gt;, contains the given string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6050ba10acd3c125e86e64b541c91af20b24d573" translate="yes" xml:space="preserve">
          <source>Checks that the active JavaScript popup, as created by &lt;code&gt;window.alert|window.confirm|window.prompt&lt;/code&gt;, contains the given string. Appium: support only web testing</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="236fc5fbe09554333c1b6a340fb812f519666f38" translate="yes" xml:space="preserve">
          <source>Checks that the current page contains the given string in its raw source code</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f30e7deaf8781d575fe2375033b005eba2016f2" translate="yes" xml:space="preserve">
          <source>Checks that the current page contains the given string in its raw source code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0c11ec1c2f0a12a173273b5bf784dd26774861c" translate="yes" xml:space="preserve">
          <source>Checks that the given input field or textarea equals to given value. For fuzzy locators, fields are matched by label text, the &quot;name&quot; attribute, CSS, and XPath.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="641b5789f85464ea0efe78c51e8176109434c593" translate="yes" xml:space="preserve">
          <source>Checks that title contains text.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae854f65ab8d4db1f57a83446b13951910da7b2b" translate="yes" xml:space="preserve">
          <source>Checks that title does not contain text.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0c4b15943fd9cba190dd18f8e5987d4588b2b57" translate="yes" xml:space="preserve">
          <source>Checks that title is equal to provided one.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0ffec44f336ac009bfe7329dcf271da32d4504c" translate="yes" xml:space="preserve">
          <source>Checks that value of input field or textare doesn't equal to given value Opposite to &lt;code&gt;seeInField&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15dc18865567bcc98554a72a8036e1b64a8b85d5" translate="yes" xml:space="preserve">
          <source>Chinese</source>
          <target state="translated">Chinese</target>
        </trans-unit>
        <trans-unit id="5f6f8beacd6a51b14010c54e1a4e4886e39f0f8f" translate="yes" xml:space="preserve">
          <source>Clears a &lt;code&gt;&amp;lt;textarea&amp;gt;&lt;/code&gt; or text &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; element's value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec15d050bcc850b40bf08c1a5c2c424be0c24539" translate="yes" xml:space="preserve">
          <source>Clears a cookie by name, if none provided clears all cookies</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53a98298fb455348c338555baa18286b2da270c8" translate="yes" xml:space="preserve">
          <source>Cli</source>
          <target state="translated">Cli</target>
        </trans-unit>
        <trans-unit id="09703d1ff01a59ef498218efeacdae1639095d1f" translate="yes" xml:space="preserve">
          <source>Clicking</source>
          <target state="translated">Clicking</target>
        </trans-unit>
        <trans-unit id="743bd0112b2927204544db4f502b4fb7af9ee237" translate="yes" xml:space="preserve">
          <source>Clicking the links is not what takes the most time during testing a web site. If your site consists only of links you can skip test automation. The most routine waste of time goes into the testing of forms. CodeceptJS provides several ways of doing that.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4be8c94b1faacd123ff388d02619354b500236f9" translate="yes" xml:space="preserve">
          <source>Close all tabs except for the current one.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5cf91e9e70d992f226814c8f1174291f86d0f3a8" translate="yes" xml:space="preserve">
          <source>Close all tabs except for the current one. Appium: support web test</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88b3b75ed2d4730635e1c54e3d28d8edf33cd632" translate="yes" xml:space="preserve">
          <source>Close current tab</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca5f014b1ee13b25a50db2810e436b9596cf9d13" translate="yes" xml:space="preserve">
          <source>Close current tab and switches to previous.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aae677e8ec920c4fa5723adc33be6129437e918b" translate="yes" xml:space="preserve">
          <source>Close the given application.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36f7897b2bae0040ed3ab3f6fe07b501caee499f" translate="yes" xml:space="preserve">
          <source>Cloud Providers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87677b93a43a3c1f901ed64766e8df53b9373218" translate="yes" xml:space="preserve">
          <source>Cloud Providers (WebDriverIO)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41b8c5c402ac86bd9e69f6bfb6277bb2c717a926" translate="yes" xml:space="preserve">
          <source>CodeceptJS</source>
          <target state="translated">CodeceptJS</target>
        </trans-unit>
        <trans-unit id="4ea8f596f8f927969882bfcb168fceeec74351b2" translate="yes" xml:space="preserve">
          <source>CodeceptJS allows to run several browser sessions inside a test. This can be useful for testing communication between users inside a system, for instance in chats. To open another browser use &lt;code&gt;session()&lt;/code&gt; function as shown in example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4066871e6a03c5401b58a891a44e0dc7022f7703" translate="yes" xml:space="preserve">
          <source>CodeceptJS allows to test mobile and hybrid apps in a similar manner web applications are tested. Such tests are executed using &lt;a href=&quot;http://appium.io&quot;&gt;Appium&lt;/a&gt; on emulated or physical devices. Also, Appium allows to test web application on mobile devices.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54d542f67d8cff7f37673282e9a667e405b79b2d" translate="yes" xml:space="preserve">
          <source>CodeceptJS allows to write and debug tests on the fly while keeping your browser opened. By using interactive shell you can stop execution at any point and type in CodeceptJS commands.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf8bbdc7954b211722483955c18f1acaf768a80a" translate="yes" xml:space="preserve">
          <source>CodeceptJS allows you to define and connect own helpers. If some functionality of Nightmare helper is missing you can easily create &lt;code&gt;ExtendedNightmare&lt;/code&gt; helper by running:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ab776e3d946a89044159d997c55e2eac732209a" translate="yes" xml:space="preserve">
          <source>CodeceptJS allows you to implement custom actions like &lt;code&gt;I.createTodo&lt;/code&gt; or use &lt;strong&gt;PageObjects&lt;/strong&gt;. Learn how to improve your tests in &lt;a href=&quot;https://codecept.io/pageobjects/&quot;&gt;PageObjects&lt;/a&gt; guide.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a53d5d9fb9555e694f12a1494a3bf174893c837d" translate="yes" xml:space="preserve">
          <source>CodeceptJS also provides flexible options when you want to execute tests to Selenium servers through proxy. You will need to update the &lt;code&gt;helpers.WebDriverIO.desiredCapabilities.proxy&lt;/code&gt; key.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc6492b895c9d819e08f45efe04dbb6e43b9fcdb" translate="yes" xml:space="preserve">
          <source>CodeceptJS bypasses execution commands to helpers. Depending on helper enabled your tests will be executed differently. If you need cross-browser support you should choose Selenium-based WebDriverIO or Protractor, if you are interested in speed - use Chrome-based Puppeteer, or Electron-based Nightmare. Those engines can run tests in window mode or headlessly and doesn't require additional tools to be installed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b44256a80c94947552cc1b73fa9b14e0dd871c34" translate="yes" xml:space="preserve">
          <source>CodeceptJS can be configured to run tests in parallel.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f685b7fdcf2b687113f790efb593647709c8bdc" translate="yes" xml:space="preserve">
          <source>CodeceptJS can be imported and used in custom runners. To initialize Codecept you need to create Config and Container objects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3efaa9136b7150d73882a9338556273adfda5bde" translate="yes" xml:space="preserve">
          <source>CodeceptJS can be installed via NPM globally:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74c3858c45e4a109e3f409f064cdeec1073c1dea" translate="yes" xml:space="preserve">
          <source>CodeceptJS can guess an element's locator from context. For example, when clicking CodeceptJS will try to find a link or button by their text When typing into a field this field can be located by its name, placeholder.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49f3cbd7600efbdaca57e1097365648a0b5471c6" translate="yes" xml:space="preserve">
          <source>CodeceptJS config can be accessed from &lt;code&gt;require('codeceptjs').config.get()&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3cafb6bc97612a799b60451ea57339a41bce2048" translate="yes" xml:space="preserve">
          <source>CodeceptJS configuration is set in &lt;code&gt;codecept.json&lt;/code&gt; file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be3fce7b669484b1d3788304161c0cc86944e93e" translate="yes" xml:space="preserve">
          <source>CodeceptJS has a dependency injection container with Helpers and Support objects. They can be retrieved from the container:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31f2db5d2c12132b04a3264229173758d4831faf" translate="yes" xml:space="preserve">
          <source>CodeceptJS implements retries the same way &lt;a href=&quot;https://mochajs.org#retry-tests&quot;&gt;Mocha do&lt;/a&gt;; You can set number of a retries for a feature:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a03faddfc5ef02683bccf699ac041bad4a2e567d" translate="yes" xml:space="preserve">
          <source>CodeceptJS includes &lt;a href=&quot;https://codecept.io/plugins/&quot;&gt;built-in plugins&lt;/a&gt; which extend basic functionality and can be turned on and off on purpose. Taking them as &lt;a href=&quot;https://github.com/Codeception/CodeceptJS/tree/master/lib/plugin&quot;&gt;examples&lt;/a&gt; you can develop your custom plugins.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0801859e1167fd8e42347dd0f185f14b71b9902a" translate="yes" xml:space="preserve">
          <source>CodeceptJS is a modern end to end testing framework with a special BDD-style syntax. The test is written as a linear scenario of user's action on a site.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b2a4c324111c4c20fb2555a00a12be3e32a7319" translate="yes" xml:space="preserve">
          <source>CodeceptJS is an acceptance testing framework. In diversified world of JavaScript testing libraries it aims to create a unified high level API for end-to-end testing, powered by different backends. CodeceptJS allows you to write a test and switch in config execution drivers: will it be &lt;em&gt;wedriverio&lt;/em&gt;, &lt;em&gt;puppeteer&lt;/em&gt;, or &lt;em&gt;protractor&lt;/em&gt; depends on you. This way you aren't be bound to implementation, and your acceptance tests will work no matter of framework running them.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efd4f789830badbcd455c62a338ba9335e7a1b5c" translate="yes" xml:space="preserve">
          <source>CodeceptJS packed into container with the Nightmare, Protractor, Puppeteer, and WebDriverIO drivers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df5b5d1d8125461cbd541e6c0b913541e8802978" translate="yes" xml:space="preserve">
          <source>CodeceptJS provides API to run custom code before and after the test and inject custom listeners into the event system.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0852cf9c29113a39ea4427ad8709976f7b8b3dd2" translate="yes" xml:space="preserve">
          <source>CodeceptJS provides a debug mode in which additional information is printed. It can be turned on with &lt;code&gt;--debug&lt;/code&gt; flag.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44c53c8875096a9fc84dd9e8a90feef38c253175" translate="yes" xml:space="preserve">
          <source>CodeceptJS provides a flexible syntax to specify an element to click.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea9f14b3c43f7515f3c88cab408c5eff0fae2ee9" translate="yes" xml:space="preserve">
          <source>CodeceptJS provides a fluent builder to compose custom locators in JavaScript. Use &lt;code&gt;locate&lt;/code&gt; function to start.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00dac64e74839ed5fac88c4754040da8cf9d5896" translate="yes" xml:space="preserve">
          <source>CodeceptJS provides a module with &lt;a href=&quot;https://github.com/Codeception/CodeceptJS/blob/master/lib/event.js&quot;&gt;event dispatcher and set of predefined events&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7560b6a3b653903ee4caa5a3faae2b0502764b53" translate="yes" xml:space="preserve">
          <source>CodeceptJS provides an API which can be loaded via &lt;code&gt;require('codeceptjs')&lt;/code&gt; when CodeceptJS is installed locally. These internal objects are available:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea5ef37d66a3f469f78a1b47ee65da211830a596" translate="yes" xml:space="preserve">
          <source>CodeceptJS provides flexible strategies for locating elements:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e97e2127a2e46e82a8836366ee8b8a57d5669f78" translate="yes" xml:space="preserve">
          <source>CodeceptJS runner is available inside container as &lt;code&gt;codeceptjs&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b95c74019643a3491e2e8d96cd2dd168b217fabd" translate="yes" xml:space="preserve">
          <source>CodeceptJS should be installed with webdriverio support:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a188e3ee1a757e6f7dc2dd1e743f4062eaef8f9f" translate="yes" xml:space="preserve">
          <source>CodeceptJS test should be created with &lt;code&gt;gt&lt;/code&gt; command:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7ee0cc24ccdc16a9ca894c6e1b7fe81470fb409" translate="yes" xml:space="preserve">
          <source>CodeceptJS through helpers provides user friendly API to interact with a webpage. In this section we described using WebDriverIO helper which allows to control browser through Selenium WebDriver.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81a31ff3ab09bb8c343a87ccb3b32701264f1a6a" translate="yes" xml:space="preserve">
          <source>CodeceptJS uses Puppeteer to improve end to end testing experience. No need to learn the syntax of a new tool, all drivers in CodeceptJS share the same API.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="237791adb3cd5613ae9dbbe12b234ef111d09640" translate="yes" xml:space="preserve">
          <source>Codeceptjs Docker</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45e5f3f72e961cb70134ba35f7a27a9620e515f7" translate="yes" xml:space="preserve">
          <source>Commands</source>
          <target state="translated">Commands</target>
        </trans-unit>
        <trans-unit id="d95ebc10a700eefefc4d8b94306157c80c4627b0" translate="yes" xml:space="preserve">
          <source>Commands affected (by default):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fce06e20e5f7f74aacccab40b59b75a56c8f7305" translate="yes" xml:space="preserve">
          <source>Comments</source>
          <target state="translated">Comments</target>
        </trans-unit>
        <trans-unit id="784f2fe9e706ab9351a8b624644514675b305fb6" translate="yes" xml:space="preserve">
          <source>Common preparation steps like opening a web page, logging in a user, can be placed in &lt;code&gt;Before&lt;/code&gt; or &lt;code&gt;Background&lt;/code&gt; hook:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b04f2bab690caf16dd8be1fd04dc3ba4fee51ee" translate="yes" xml:space="preserve">
          <source>Compare a test written using Nightmare API:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c22e213d882b6ab78c74b84d43a9c4b938fd342" translate="yes" xml:space="preserve">
          <source>Comparing to the API proposed by CodeceptJS, this code looks a bit more complicated. But what the more important, it's really really hard to read and follow its logic. Readability is the most crucial part in acceptance testing. You should easily change tests when changes specification or design. Probably, only a person who writes Protractor tests in your company, could do those changes, while CodeceptJS allows anyone to work with tests. Contrary, CodeceptJS provides CodeceptJS provides scenario-driven approach, so test is just a step-by-step representation of real user actions. This way you can easily read, and follow test scenario, and edit it when you need it to be changed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a9ba197d8c81297f1db0d7239e5ae45ddc63718" translate="yes" xml:space="preserve">
          <source>Conditional Retries</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8851142da56fd885ce668a165b33fee7003e858d" translate="yes" xml:space="preserve">
          <source>Config</source>
          <target state="translated">Config</target>
        </trans-unit>
        <trans-unit id="cc853f31414fc473eeab640dff7a9e1b89066037" translate="yes" xml:space="preserve">
          <source>Config can also be set by a function, in this case you can get a test object and specify config values based on it. This is very useful when running tests against cloud providers, like BrowserStack.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="534edde9e41e41f9db7456efa2b6bbff562523b1" translate="yes" xml:space="preserve">
          <source>Config changes can be applied to all tests in suite:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53ee24612362a15e2b9baaa23fc0b2c31be8ba83" translate="yes" xml:space="preserve">
          <source>Config for Headless Chrome</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5260c3ad34715ce57cc926017cad21d19e1131b2" translate="yes" xml:space="preserve">
          <source>Config for Non-Angular application:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df2e06a8caeaeb9af9657c2d3b0c66541f43fd14" translate="yes" xml:space="preserve">
          <source>Config values will be stored inside helper in &lt;code&gt;this.config&lt;/code&gt;. To get &lt;code&gt;defaultHost&lt;/code&gt; value you can use</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="754164850f38c1ecdaf6b8ed894cb192bc36c5f4" translate="yes" xml:space="preserve">
          <source>Configuration</source>
          <target state="translated">Configuration</target>
        </trans-unit>
        <trans-unit id="57e9ad30448d36d2afe4b732c487899f58be10c5" translate="yes" xml:space="preserve">
          <source>Configuration (ApiDataFactory)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5bd70dd4a96bd7fd12038204d3434aee135fc841" translate="yes" xml:space="preserve">
          <source>Configuration (Nightmare)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07fe29b24f0717673eb796f92dfadb231bced1c9" translate="yes" xml:space="preserve">
          <source>Configuration (Protractor)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="524be0016b896a36f978f3585b2c0f0e35379efb" translate="yes" xml:space="preserve">
          <source>Configuration (Puppeteer)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09864e600cccbf4cbef3c59ecf56aac5ce46b83a" translate="yes" xml:space="preserve">
          <source>Configuration (REST)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51d9d70b096016b2015172fc6e8a67dd3a5911b7" translate="yes" xml:space="preserve">
          <source>Configuration (WebDriverIO)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43aba51ed8f26776bebefb2cf93d1cb5c52099a0" translate="yes" xml:space="preserve">
          <source>Configuration can either be taken from a corresponding helper (deprecated) or a from plugin config (recommended).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3104edd76f46c2dd226b5dcdd513d9d7c9a73c6" translate="yes" xml:space="preserve">
          <source>Configuration changes will be reverted after a test or a suite.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce8ad60d0c979a0f80c94134665276dff24f4293" translate="yes" xml:space="preserve">
          <source>Configuration:</source>
          <target state="translated">Configuration:</target>
        </trans-unit>
        <trans-unit id="e388197d107b8a884963f7430ace672030b3c33e" translate="yes" xml:space="preserve">
          <source>Configure it to use &lt;code&gt;output&lt;/code&gt; directory to print HTML reports:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a10db8a479e34450afaeb406abdd9bea945917f" translate="yes" xml:space="preserve">
          <source>Configure mocha-multi with reports that you want:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32bc3c22148beccab28adad18f452f24bed405a4" translate="yes" xml:space="preserve">
          <source>Configuring</source>
          <target state="translated">Configuring</target>
        </trans-unit>
        <trans-unit id="a3353bfbe3b5bc5ef43f2dbc929cbf17fda5c65f" translate="yes" xml:space="preserve">
          <source>Configuring Nightmare</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e733ce1d658a9f855a315c19341b91bfc6d737a" translate="yes" xml:space="preserve">
          <source>Connect through proxy</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29634c6654a18dbf3125bee354a81bf388f2275d" translate="yes" xml:space="preserve">
          <source>Connect through proxy (WebDriverIO)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b90c101eb621b683e83ff7741d040cb052f2b714" translate="yes" xml:space="preserve">
          <source>Connecting to &lt;code&gt;BrowserStack&lt;/code&gt; and &lt;code&gt;Sauce Labs&lt;/code&gt; is simple. All you need to do is set the &lt;code&gt;user&lt;/code&gt; and &lt;code&gt;key&lt;/code&gt; parameters. WebDriverIO automatically know which service provider to connect to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6443af99d2f470f50affd5057bf48db2d09dae4" translate="yes" xml:space="preserve">
          <source>Container</source>
          <target state="translated">Container</target>
        </trans-unit>
        <trans-unit id="8edfad7595291b9082628fafb8e6d8693ae3f558" translate="yes" xml:space="preserve">
          <source>Container also contains current Mocha instance:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf2cadc5c224b06730871ca48c5951adf51a68da" translate="yes" xml:space="preserve">
          <source>Corresponding examples provided in next sections.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="966a9e47377c35f75328dd2b135860df76703e2f" translate="yes" xml:space="preserve">
          <source>Create &lt;code&gt;multiple&lt;/code&gt; section in configuration file, and fill it with run suites. Each suite should have &lt;code&gt;browser&lt;/code&gt; array with browser names or driver helper's configuration:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88366366060b8dfda3b9d169dd4ed75c9ddc502c" translate="yes" xml:space="preserve">
          <source>Create a factory file for a resource.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e119578665eee9d26b5be04faed13cee2c0e33b" translate="yes" xml:space="preserve">
          <source>Create custom helper, define methods for it, and use it inside the I object. Your Helper can access &lt;code&gt;browser&lt;/code&gt; from Protractor by accessing Protractor helper:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96f3dc24456750b675efb7a5fa2f3cef07b359cd" translate="yes" xml:space="preserve">
          <source>Create new helper</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="faade754f62bb3f3f6d667ed1e0932fe74b959f3" translate="yes" xml:space="preserve">
          <source>Create new pageobject</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bde5a3ade415a878c8a4537c543b600cf07f24a1" translate="yes" xml:space="preserve">
          <source>Create new test</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6effd8cb03bff23bf686db96fdaa78676b4d44c" translate="yes" xml:space="preserve">
          <source>Creates &lt;code&gt;codecept.json&lt;/code&gt; file in current directory:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28128d3ff4ce6cfc98fb173e4dc7fb871deaddb4" translate="yes" xml:space="preserve">
          <source>Creates screenshot on failure. Screenshot is saved into &lt;code&gt;output&lt;/code&gt; directory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e557247c53d5a86c733f30ad81b57894a084e88" translate="yes" xml:space="preserve">
          <source>Cross-Platform Testing</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14662ba0bd860469487e8b7cb5fa5a11fa760bf0" translate="yes" xml:space="preserve">
          <source>Custom Hooks</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a551233ce4d33c2af99e28de7db8970c72e7183a" translate="yes" xml:space="preserve">
          <source>Custom Runner</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77948e089c055865008695405d798b980e055e09" translate="yes" xml:space="preserve">
          <source>Customize it from custom Helper file:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df8fe505a31e4d831fd356e5dbc4fff778c30a5c" translate="yes" xml:space="preserve">
          <source>Data Driven Tests</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="541a14207677215070969758554886506e81455d" translate="yes" xml:space="preserve">
          <source>Data Generation with Factories</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5d83b763809dbf1782ea117dc9885e64311acdd" translate="yes" xml:space="preserve">
          <source>Data Management</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db99b945f646039277802184e04cfb0a679c01e8" translate="yes" xml:space="preserve">
          <source>Data sets can also be defined with array, generator, or a function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd604d99e75e45d38bc7ac8fc714cde0097d901f" translate="yes" xml:space="preserve">
          <source>Debug</source>
          <target state="translated">Debug</target>
        </trans-unit>
        <trans-unit id="3aefbe2f210572802298b2ad0347dc9e423d2690" translate="yes" xml:space="preserve">
          <source>Dependency Injection</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c17aadf5117487aab7bc50cbf056caf3977cc31" translate="yes" xml:space="preserve">
          <source>Development</source>
          <target state="translated">Development</target>
        </trans-unit>
        <trans-unit id="1d5875afb82105bfdb7dad3f0b0b749b3095abfa" translate="yes" xml:space="preserve">
          <source>Dismisses the active JavaScript popup, as created by window.alert|window.confirm|window.prompt.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39a90e0681198d34a90002eaafaf9320eb00eb75" translate="yes" xml:space="preserve">
          <source>Dismisses the active JavaScript popup, as created by window.alert|window.confirm|window.prompt. Appium: support only web testing</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="854d58e8f8e5f86b981ee7bbf24beb96691da584" translate="yes" xml:space="preserve">
          <source>Docker Compose</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="225ac9300ac48f41860ff29ea8e9cb1154960738" translate="yes" xml:space="preserve">
          <source>Does the locator look like an ID selector (e.g. &quot;#foo&quot;)? If so, try to find an input element matching that ID.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1df6bb4d5c769991bae49c39d03babd8248124e1" translate="yes" xml:space="preserve">
          <source>Download and install &lt;a href=&quot;http://appium.io/&quot;&gt;Appium&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d502d98622181f59bd5769064f5e68dc5fbdd8d8" translate="yes" xml:space="preserve">
          <source>Drag an item to a destination element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d9d93af231eaae0438ce58d9758a7e399f38fd8" translate="yes" xml:space="preserve">
          <source>Drag an item to a destination element. Appium: not tested</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="096c9809fdc0538b50d5a68da39154922316935a" translate="yes" xml:space="preserve">
          <source>Dynamic Configuration</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="499c03ade376209306e2f74eece2f16bb4cb9bec" translate="yes" xml:space="preserve">
          <source>Dynamic Injection</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de893a7cde5431349423f51d2bad5595b76eb72f" translate="yes" xml:space="preserve">
          <source>Each executed process uses custom folder for reports and output. It is stored in subfolder inside an output directory. Subfolders will be named in &lt;code&gt;suite_browser&lt;/code&gt; format.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f073bc5a3ac1522d7ae0eb17962b1cdb4ee5807d" translate="yes" xml:space="preserve">
          <source>Each feature of a product should be born from a talk between</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09f11478f6137563376daef168805aafe11df5ec" translate="yes" xml:space="preserve">
          <source>Each implemented method should return a value as they will be added to global promise chain as well.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05e997ade3a54964d3c8a02596ea2c9dce3528e5" translate="yes" xml:space="preserve">
          <source>Each test is described inside a &lt;code&gt;Scenario&lt;/code&gt; function with &lt;code&gt;I&lt;/code&gt; object passed into it. I object is an &lt;strong&gt;actor&lt;/strong&gt;, an abstraction for a testing user. I is a proxy object for currently enabled &lt;strong&gt;Helpers&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d7845e047a8c583311c7316385ac8234c9c8683" translate="yes" xml:space="preserve">
          <source>Educational videos provided by our community member &lt;strong&gt;&lt;a href=&quot;https://github.com/ontytoom&quot;&gt;@ontytoom&lt;/a&gt;&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee2675d84e17dc4fc678399b11d8b9d5ac05ab53" translate="yes" xml:space="preserve">
          <source>Element can be found by CSS or XPath locators. Practically every steps in WebDriverIO helper accept them both.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3060294b4cf31e5322894bd959f3ac72049ac5a" translate="yes" xml:space="preserve">
          <source>Elements can also be located by their accessability id, available both at Android and iOS. Accessibility id is recommended to use for locating element, as it rarely changed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37d565ca65545b8fa2fd8f05503e851fdc62bf7a" translate="yes" xml:space="preserve">
          <source>Elements can also have ids, which can be located with &lt;code&gt;#&lt;/code&gt; prefix. On Android it it is important to keep full package name in id locator:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0135c299f746cf54d0617faa5505829bb678b9e2" translate="yes" xml:space="preserve">
          <source>Enable &lt;code&gt;Nightmare&lt;/code&gt; helper in &lt;code&gt;codecept.json&lt;/code&gt; config:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19f21860317df8c547396f2136a121ba3c436ce4" translate="yes" xml:space="preserve">
          <source>Enable REST helper in global config. It is recommended to set &lt;code&gt;endpoint&lt;/code&gt;, a base URL for all API requests. If you need some authorization you can optionally set default headers too.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="777d56d609a1831b04fdbf03d7d87435b0b6523a" translate="yes" xml:space="preserve">
          <source>Enables Allure reporter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="837c567bc9aab352fbe71ccda056c58bf0caaa90" translate="yes" xml:space="preserve">
          <source>Ensure that you have &lt;a href=&quot;https://codecept.io/installation/&quot;&gt;CodeceptJS installed&lt;/a&gt;. You will also need to install &lt;a href=&quot;http://appium.io/&quot;&gt;Appium&lt;/a&gt;. We suggest to use &lt;a href=&quot;https://www.npmjs.com/package/appium-doctor&quot;&gt;appium-doctor&lt;/a&gt; to check if your system is ready for mobile testing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89ee88f618997ad052b8f98356aa707abfb7729d" translate="yes" xml:space="preserve">
          <source>Enters Angular mode (switched on by default) Should be used after &quot;amOutsideAngularApp&quot;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c092524fd05a90bdfd187d2742aa8a0a110d9ba" translate="yes" xml:space="preserve">
          <source>Enters a directory In local filesystem. Starts from a current directory</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="842377156503364f6a89a012c72844568f08f8b6" translate="yes" xml:space="preserve">
          <source>Event Listeners</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7064d89574ec13bcecd8a38c49d4b251c411b686" translate="yes" xml:space="preserve">
          <source>Every Scenario inside this feature will be rerun 3 times. You can make an exception for a specific scenario by passing &lt;code&gt;retries&lt;/code&gt; option to a Scenario.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="974f4f7a3e6a1b1f2c60a96dc5b4eed60fe74a1b" translate="yes" xml:space="preserve">
          <source>Example #1: Wait for 0 network connections.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b130dc4c616121ade2e2655dcf125ff293195c2b" translate="yes" xml:space="preserve">
          <source>Example #2: Wait for DOMContentLoaded event and 0 network connections</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6ea025f5a8cefbd3cfc48b0b449c4ca9d0bef33" translate="yes" xml:space="preserve">
          <source>Example #3: Debug in window mode</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="795c3ef48a125c0828802cb421a408b855044dc7" translate="yes" xml:space="preserve">
          <source>Example (&lt;code&gt;endpoint&lt;/code&gt;: &lt;code&gt;http://app.com/api&lt;/code&gt;):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf02117dce9ae813f1c81d175bba75abd9f01987" translate="yes" xml:space="preserve">
          <source>Example with jQuery DatePicker:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c63737abd7347a7ae582cb9fbdf37d6c0e5b251e" translate="yes" xml:space="preserve">
          <source>Example:</source>
          <target state="translated">Example:</target>
        </trans-unit>
        <trans-unit id="f746d333456637127a33afbca6d27c23de42c3a1" translate="yes" xml:space="preserve">
          <source>Example: Async Bootstrap in a Function</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93c5b0d72358ab87ef8418112f3fdb606cd78253" translate="yes" xml:space="preserve">
          <source>Example: Async Teardown in a Function</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b85137a7ed95f1126efa9f9682b4c8c3a02f40f7" translate="yes" xml:space="preserve">
          <source>Example: Bootstrap &amp;amp; Teardown Inside Config</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0223d589441365ff73b372d69ed0ba1ca2a5ba5" translate="yes" xml:space="preserve">
          <source>Example: Bootstrap &amp;amp; Teardown Inside an Object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c994e5535d0a38a34dad78312cc0aed6bae6a0d3" translate="yes" xml:space="preserve">
          <source>Example: BootstrapAll &amp;amp; TeardownAll Inside Config</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="025f877955cfbf88f6ad791c950cc975f4cbf9ae" translate="yes" xml:space="preserve">
          <source>Example: Execute code for a specific group of tests</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e7619080cfc2199d8e5b4428701355ed38056b8" translate="yes" xml:space="preserve">
          <source>Example: In Vue.js to make components completely rendered we are waiting for &lt;a href=&quot;https://vuejs.org/v2/api/#Vue-nextTick&quot;&gt;nextTick&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29a6ba5ea9f671f0c90e6e59d63da78986e9e3fe" translate="yes" xml:space="preserve">
          <source>Example: Retrying rendering errors in Puppeteer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb01bf04c9a0e8a71c45816513df424f1c7ffedb" translate="yes" xml:space="preserve">
          <source>Examples</source>
          <target state="translated">Examples</target>
        </trans-unit>
        <trans-unit id="3aa2550ed9cc1cd58bde281f2a9c4a5b5a035f22" translate="yes" xml:space="preserve">
          <source>Examples above can be combined into one file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb3447b632f6a431215776dcf254a01001a40c4f" translate="yes" xml:space="preserve">
          <source>Examples:</source>
          <target state="translated">Examples:</target>
        </trans-unit>
        <trans-unit id="1a4c16de436878ac88aca79050e36fcdfcd96c6b" translate="yes" xml:space="preserve">
          <source>Execute CodeceptJS with HTML reporter:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42634eb1d0f2b2c1d5b3982f6703cba859dbda66" translate="yes" xml:space="preserve">
          <source>Execute CodeceptJS with JUnit reporter:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="163771ecee75f9b346ecc36ee6e945a383cb287a" translate="yes" xml:space="preserve">
          <source>Execute CodeceptJS with mocha-multi reporter:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af52779a8da1d280d635eb20f5e95da954ac7603" translate="yes" xml:space="preserve">
          <source>Execute code only in Web mode.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="852722f39a3efb4993fd75420e67cff5cf421837" translate="yes" xml:space="preserve">
          <source>Execute code only on Android</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3c3d1c320f0389a41bab5a236a0fb9118be4d6e" translate="yes" xml:space="preserve">
          <source>Execute code only on iOS</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="573cada6bf4847b6a31866c5025dccdb3af6ab47" translate="yes" xml:space="preserve">
          <source>Execute the same scenario on a different data set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0784d6958bc6e86666f8a5bf9bbcb2418913fac5" translate="yes" xml:space="preserve">
          <source>Executes async script on page. Provided function should execute a passed callback (as first argument) to signal it is finished.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e32c18964551903e96a90709c8c7a3922461c711" translate="yes" xml:space="preserve">
          <source>Executes request to create a record in API. Can be replaced from a in custom helper.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5bc2960d5947d18be247de1f6dbdc6539fdf4517" translate="yes" xml:space="preserve">
          <source>Executes request to delete a record in API Can be replaced from a custom helper.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8591200d7f3aae265761b5934ae2fb6993289668" translate="yes" xml:space="preserve">
          <source>Executes sync script on a page. Pass arguments to function as additional parameters. Will return execution result to a test. In this case you should use async function and await to receive results.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb3336b08004bcc0244ec67cb4fe7eda323d63a2" translate="yes" xml:space="preserve">
          <source>Executes tests. Requires &lt;code&gt;codecept.json&lt;/code&gt; config to be present in provided path.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="008ef1571df3d0c6b17b5fc938f5918d15538c9b" translate="yes" xml:space="preserve">
          <source>Executes unirest request</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63aca66709254bbd01bb413414ca0c828dde5fef" translate="yes" xml:space="preserve">
          <source>Export a function in your bootstrap file:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4be9a4abd6d7c8083fc1a7bf9004e653250a9ba5" translate="yes" xml:space="preserve">
          <source>Extending</source>
          <target state="translated">Extending</target>
        </trans-unit>
        <trans-unit id="1ff5eb9d74262d22e846ce9e5a89b743f7b5bca2" translate="yes" xml:space="preserve">
          <source>Extending Nightmare Helper</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc338f87a058158eb824b53705961801516a9460" translate="yes" xml:space="preserve">
          <source>Features</source>
          <target state="translated">Features</target>
        </trans-unit>
        <trans-unit id="124560019bec9fd8e042cfb639c612be772c786f" translate="yes" xml:space="preserve">
          <source>Features and Scenarios have their options that can be set by passing a hash after their names:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b839ad3493d406351d352cf1b14b94b43e349ff" translate="yes" xml:space="preserve">
          <source>Fetches id of a record after it was created by &lt;code&gt;have&lt;/code&gt;. By default fetched &lt;code&gt;id&lt;/code&gt; attribute from JSON body.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3608a99d56a768b532538fc02930d3ff701d84a" translate="yes" xml:space="preserve">
          <source>FileSystem</source>
          <target state="translated">FileSystem</target>
        </trans-unit>
        <trans-unit id="7922019330a2a1fe840afff3e18d2115f710f102" translate="yes" xml:space="preserve">
          <source>Filling Fields</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ed781de30d230f9def709cbfbc0050aa3dc3e16" translate="yes" xml:space="preserve">
          <source>Fills a text field or textarea, after clearing its value, with the given string. Field is located by name, label, CSS, or XPath.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7decf1aa22b02ae8abf9a96849ee423eee838e4" translate="yes" xml:space="preserve">
          <source>Filter</source>
          <target state="translated">Filter</target>
        </trans-unit>
        <trans-unit id="ef815523161440f436f0270f8714169408e5b6b9" translate="yes" xml:space="preserve">
          <source>Find a checkbox by providing human readable text:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec70ae9300c4e4d1887d081018468d8a6b76ad91" translate="yes" xml:space="preserve">
          <source>Find a clickable element by providing human readable text:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0131672cf1183b78b239d280d3bd694bb7c563f5" translate="yes" xml:space="preserve">
          <source>Find an element with provided attributes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7d1a4fc51ae6e2b4a2dfef72d7bf0eb07b569f5" translate="yes" xml:space="preserve">
          <source>Find field elements by providing human readable text:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec229e87ef518cf91751ebb5627e5a5877cc9457" translate="yes" xml:space="preserve">
          <source>Finds an element inside a located.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50b13e4858e0375536ca2620aa65c97baa39da6b" translate="yes" xml:space="preserve">
          <source>Finds an element which contains a child element provided:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="312d4c8b0f393000c81bdb691071670ef9306e6d" translate="yes" xml:space="preserve">
          <source>Finds an element which contains an provided ancestor:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60046dc7ca02d13ac7f8b935e4abfc2dc8af28da" translate="yes" xml:space="preserve">
          <source>Finds element containing a text</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6cd2753909f66d5e3bb00974d70e4df7d256f30" translate="yes" xml:space="preserve">
          <source>Finds element located after the provided one</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0c4b55dd0a6dfaedddc67549649e3c71acd5465" translate="yes" xml:space="preserve">
          <source>Finds element located before the provided one</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a44c05013e70851894145371ec5340ba4e15b449" translate="yes" xml:space="preserve">
          <source>First test can be generated with &lt;code&gt;gt&lt;/code&gt; command:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84e46b99cfe15e7b6b74ffc45925d529aa497cc8" translate="yes" xml:space="preserve">
          <source>For Android you can use &lt;strong&gt;UI Automator Viewer&lt;/strong&gt; bundled with Android SDK:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50787e4299832274c39753496eb7ed2ddef0968e" translate="yes" xml:space="preserve">
          <source>For TodoMVC application you will have following config created in &lt;code&gt;codecept.json&lt;/code&gt; file:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="400d9547e7358bee707c338242b28d3ac9e217c4" translate="yes" xml:space="preserve">
          <source>For Visual Studio Code, add the following configuration in launch.json:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0437b78c7521bbe5c0bc585e437e6d50d413cc6e" translate="yes" xml:space="preserve">
          <source>For advanced debugging use NodeJS debugger. In WebStorm IDE:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be05b48762d776da22c184be625b25ef297b3678" translate="yes" xml:space="preserve">
          <source>For dynamic step-by-step output add &lt;code&gt;--steps&lt;/code&gt; option to &lt;code&gt;run&lt;/code&gt; command:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6db6725e9e7d5c088630e348048d1e73fc7657d3" translate="yes" xml:space="preserve">
          <source>For example,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58e471ab3d2f68d7828bd8e2dbcf7005d51ada39" translate="yes" xml:space="preserve">
          <source>For example, here's the heuristic used for the &lt;code&gt;fillField&lt;/code&gt; method:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5ea285c804baa2ecb90059809d4bd3767c6fa8c" translate="yes" xml:space="preserve">
          <source>For further reference look for &lt;a href=&quot;https://github.com/Codeception/CodeceptJS/tree/master/lib/listener&quot;&gt;currently available listeners&lt;/a&gt; using event system.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3ffe753eeda5a8796ab59ecfa4fe9ec55377762" translate="yes" xml:space="preserve">
          <source>For instance, if you click a button and nothing happens - probably JS event is not attached to this button yet Also, if you fill field and input validation doesn't accept your input - maybe because you typed value too fast.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a2f10fc94232e7c4ba8a609ef4220017916d7b6" translate="yes" xml:space="preserve">
          <source>For instance, with the config above we can change browser value using &lt;code&gt;profile&lt;/code&gt; option</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="deb734b9fdf0577f92e02b3f6a106a07db39eb48" translate="yes" xml:space="preserve">
          <source>For more options see &lt;a href=&quot;https://codecept.io/commands/#run&quot;&gt;full reference of &lt;code&gt;run&lt;/code&gt; command&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ea39ae52a1e25abda1d96aa3ab23bece180f404" translate="yes" xml:space="preserve">
          <source>For more options see &lt;a href=&quot;https://github.com/rosiejs/rosie&quot;&gt;rosie documentation&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13686c4d0313b5c054ebd045b99fcffea4dcc1ba" translate="yes" xml:space="preserve">
          <source>For most helpers basic actions like &lt;code&gt;amOnPage&lt;/code&gt;, &lt;code&gt;fillField&lt;/code&gt;, &lt;code&gt;click&lt;/code&gt; are the same. Proceed to &lt;a href=&quot;https://codecept.io/acceptance/&quot;&gt;Acceptance Testing Chapter&lt;/a&gt; to learn how to use them.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2984a0e891da59da4507fca8d54bbaeda013365e" translate="yes" xml:space="preserve">
          <source>Function passed into session can use &lt;code&gt;I&lt;/code&gt;, page objects, and any objects declared for the scenario. This function can also be declared as async (but doesn't work as generator).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7229e2630aff70bfd7e870ebbda3124d5015f508" translate="yes" xml:space="preserve">
          <source>Generates a new record using factory and saves API request to store it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82ff7b50c2533e578a44c3d24c0b97cd1317f1f0" translate="yes" xml:space="preserve">
          <source>Generates bunch of records and saves multiple API requests to store them.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6b7697e24faae761e10239176613da7b51e0e3f" translate="yes" xml:space="preserve">
          <source>Generates step by step report for a test. After each step in a test a screenshot is created. After test executed screenshots are combined into slideshow. By default, reports are generated only for failed tests.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b7adfc269789220b852ccfbc805210eb43ee08e" translate="yes" xml:space="preserve">
          <source>Generates url based on format sent (takes endpoint + url if latter lacks 'http')</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3e705cc61a19f33d7c9c030f107a70569966485" translate="yes" xml:space="preserve">
          <source>Generators</source>
          <target state="translated">Generators</target>
        </trans-unit>
        <trans-unit id="aa9f57607114c33c325fd1c286aef372b1125d44" translate="yes" xml:space="preserve">
          <source>Get HAR</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbae0a3892194ffa55d779df9f9303c967dd2613" translate="yes" xml:space="preserve">
          <source>Get JS log from browser.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d70fe75213c76b633f85772565802a191b4fb9d" translate="yes" xml:space="preserve">
          <source>Get JS log from browser. Log buffer is reset after each request.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc9b3d99e7500690eccc79b7b2f0a04855a8855b" translate="yes" xml:space="preserve">
          <source>Get JS log from browser. Log buffer is reset after each request. Resumes test execution, so &lt;strong&gt;should be used inside an async function with &lt;code&gt;await&lt;/code&gt;&lt;/strong&gt; operator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="263ae484fdfc6e514b3e6504d716234e1e9bbb72" translate="yes" xml:space="preserve">
          <source>Get all the currently specified settings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32ca908ea4ba7a926ccf306a449d440778cbba13" translate="yes" xml:space="preserve">
          <source>Get current URL from browser. Resumes test execution, so should be used inside an async function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56a4fc699026b559df41a30f50a634472e603cab" translate="yes" xml:space="preserve">
          <source>Get current device activity.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24c9a5c4f762da2eca0e273e85f953d6a5e0104c" translate="yes" xml:space="preserve">
          <source>Get current orientation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ccb9aeecc2a5dda11d7655107d362101eb689400" translate="yes" xml:space="preserve">
          <source>Get element at position:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e107fe0fb32c2cb29d532532680f1566e7555ac" translate="yes" xml:space="preserve">
          <source>Get elements by different locator types, including strict locator Should be used in custom helpers:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13772096ac6b28b07014422576d49fdfe756afe8" translate="yes" xml:space="preserve">
          <source>Get first element:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="312972ba5d34219ffdb4b5257dbebde263c6ae63" translate="yes" xml:space="preserve">
          <source>Get information about the current network connection (Data/WIFI/Airplane). The actual server value will be a number. However WebdriverIO additional properties to the response object to allow easier assertions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc2f4dd2ab9ee110ed0e95b2bfa2cc298cfcf5b2" translate="yes" xml:space="preserve">
          <source>Get last element:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="728e8c67234c2bfd04a4d419985bce1caee3ee4b" translate="yes" xml:space="preserve">
          <source>Get list of all available contexts</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="310469acda71df67a30aee4316ee21d8f8960525" translate="yes" xml:space="preserve">
          <source>Get the window handle relative to the current handle. i.e. the next handle or the previous.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5cd8ab2f3a480f3619cee2de59ae0983434dc07" translate="yes" xml:space="preserve">
          <source>Gets a cookie object by name Resumes test execution, so &lt;strong&gt;should be used inside async with &lt;code&gt;await&lt;/code&gt;&lt;/strong&gt; operator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a4de89c12c9b3cabbe29ee4da5ed134a3347920" translate="yes" xml:space="preserve">
          <source>Gets page URL including hash.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="780483cc1f6d59df26ad28d7d8c2a351a2ebfc46" translate="yes" xml:space="preserve">
          <source>Gherkin</source>
          <target state="translated">Gherkin</target>
        </trans-unit>
        <trans-unit id="122c45f15f3f6e4c27c3028aa0337823dab75320" translate="yes" xml:space="preserve">
          <source>Gherkin scenarios and features can contain tags marked with &lt;code&gt;@&lt;/code&gt;. Tags are appended to feature titles so you can easily filter by them when running tests:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f1184f7df96c5928092ad9c6b550699bf887826" translate="yes" xml:space="preserve">
          <source>Global</source>
          <target state="translated">Global</target>
        </trans-unit>
        <trans-unit id="147da4a41efc8547482bcb0d17b837143324bfe4" translate="yes" xml:space="preserve">
          <source>Grab CSS property for given locator Resumes test execution, so &lt;strong&gt;should be used inside an async function with &lt;code&gt;await&lt;/code&gt;&lt;/strong&gt; operator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98fade46b9cd9891cac24cde7991f7166995522f" translate="yes" xml:space="preserve">
          <source>Grab number of open tabs</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="853c50c13105606a1eb2c4ea622bbce89a66399c" translate="yes" xml:space="preserve">
          <source>Grab number of visible elements by locator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5564d88d718e3585e9c40d1566da24bd79a31347" translate="yes" xml:space="preserve">
          <source>Grab the text within the popup. If no popup is visible then it will return null</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ecccd585cb761ae8c732001b1132af2ef2b279e9" translate="yes" xml:space="preserve">
          <source>Grabbers</source>
          <target state="translated">Grabbers</target>
        </trans-unit>
        <trans-unit id="007d158de9956ed41ebee1bab15f7d58d7c58919" translate="yes" xml:space="preserve">
          <source>Grabbing</source>
          <target state="translated">Grabbing</target>
        </trans-unit>
        <trans-unit id="de40190ee89a9dd83f74ffd900d59fda1d730a6e" translate="yes" xml:space="preserve">
          <source>Grep and multiple browsers are supported. Passing more than one browser will multiply the amount of suites by the amount of browsers passed. The following example will lead to four parallel runs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf073fae640ded81eeb7a4cee70faff4a623c16c" translate="yes" xml:space="preserve">
          <source>Guide</source>
          <target state="translated">Guide</target>
        </trans-unit>
        <trans-unit id="709c9a1e18ba0f46c20cd1531ff2329aeb574fd1" translate="yes" xml:space="preserve">
          <source>Headless Chrome</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ce5a2d06273b54d8b6a91e9556184426c0726c1" translate="yes" xml:space="preserve">
          <source>Headless Chrome (WebDriverIO)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2f28583666ff17b9cf2cf1468644ede091cd884" translate="yes" xml:space="preserve">
          <source>Helper configuration</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7279003985e86b0bb5a1785325cf20e2457015e5" translate="yes" xml:space="preserve">
          <source>Helper configuration (Appium)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac0abe42092225807406a8cad179435c4d33b65a" translate="yes" xml:space="preserve">
          <source>Helper for managing remote data using REST API. Uses data generators like &lt;a href=&quot;https://github.com/rosiejs/rosie&quot;&gt;rosie&lt;/a&gt; or factory girl to create new record.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8bbdf83ef89c0a928b736bc2aa503ec161864859" translate="yes" xml:space="preserve">
          <source>Helper for testing filesystem. Can be easily used to check file structures:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c9b3433e6f225e4ae00ef2041d44d91bfbf7113" translate="yes" xml:space="preserve">
          <source>Helpers</source>
          <target state="translated">Helpers</target>
        </trans-unit>
        <trans-unit id="c80c93b0e2a50d315b88bcd6583b1b5e3793672a" translate="yes" xml:space="preserve">
          <source>Helpers are ES6 classes inherited from &lt;a href=&quot;https://github.com/Codeception/CodeceptJS/blob/master/lib/helper.js&quot;&gt;corresponding abstract class&lt;/a&gt;. Generated Helper will be added to &lt;code&gt;codecept.json&lt;/code&gt; config. It should look like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3276d3d2f09c22636873a47e7ac6232e15904105" translate="yes" xml:space="preserve">
          <source>Helpers can also be installed as Node packages and required by corresponding Node modules</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="368abdbe7cbdc2e1f098b3f7729fb5010bd24904" translate="yes" xml:space="preserve">
          <source>Helpers can be created by running a generator command:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78fbd74f27ebfe2ab2de1852d2cedc9eefdd8d31" translate="yes" xml:space="preserve">
          <source>Helpers can be reconfigured per scenario or per feature. This might be useful when some tests should be executed with different settings than others. In order to reconfigure tests use &lt;code&gt;.config()&lt;/code&gt; method of &lt;code&gt;Scenario&lt;/code&gt; or &lt;code&gt;Feature&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="407255e05795b7b6f59cefff9ff1f59db1ce939d" translate="yes" xml:space="preserve">
          <source>Helpers is a core concept of CodeceptJS. Helper is a wrapper around various libraries providing unified interface around them. Methods of Helper class will be available in tests in &lt;code&gt;I&lt;/code&gt; object. This abstracts test scenarios from the implementation and allows easy switching between backends. Functionality of CodeceptJS should be extended by writing a custom helpers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb0976bba6fafe8579360a255f9b1ab296e96d36" translate="yes" xml:space="preserve">
          <source>Helpers may contain several hooks you can use to handle events of a test. Implement corresponding methods to them.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a2629fbb730d25ff3de3cc4978a560cc71c8865" translate="yes" xml:space="preserve">
          <source>Helpers should be enabled inside &lt;code&gt;codecept.json&lt;/code&gt; or &lt;code&gt;codecept.conf.js&lt;/code&gt; files. Command &lt;code&gt;generate helper&lt;/code&gt; does that for you, however you can enable them manually by placing helper to &lt;code&gt;helpers&lt;/code&gt; section inside config file. You can also pass additional config options to your helper from a config - &lt;strong&gt;(please note, this example contains comments, while JSON format doesn't support them)&lt;/strong&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65b4ceb84defbcf10cb47e260c2ea257896ed6c4" translate="yes" xml:space="preserve">
          <source>Helpers: ApiDataFactory</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8ad0afae628b3d1d76a631b602353fc318f3095" translate="yes" xml:space="preserve">
          <source>Helpers: Appium</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c88e375960d4dfdf181c516b8b2380b87a47eb91" translate="yes" xml:space="preserve">
          <source>Helpers: FileSystem</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9e9633721ea59d0ffe5bef7c2f43a54c837a916" translate="yes" xml:space="preserve">
          <source>Helpers: Nightmare</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c7f72bb5e3ee82b858bf4025369bde74ecc9096" translate="yes" xml:space="preserve">
          <source>Helpers: Protractor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3476d42f92e32ec100208db221afa1f56b4d3c7" translate="yes" xml:space="preserve">
          <source>Helpers: Puppeteer</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9fe787dfa9f01fac040b17d670d953ab8d4e6f9c" translate="yes" xml:space="preserve">
          <source>Helpers: REST</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb31b8d45c1db8f82f2812c438f92d535826870b" translate="yes" xml:space="preserve">
          <source>Helpers: WebDriverIO</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da9291cb119f102218681b72119ede84a1e93115" translate="yes" xml:space="preserve">
          <source>Here is a usage example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9583d3b520854dfa531b3a2f9a902b345e11c07" translate="yes" xml:space="preserve">
          <source>Here is an overview of available options with their defaults:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="834e91adf2e5cce204c72e4897eace3a82b5a1f7" translate="yes" xml:space="preserve">
          <source>Here is the &lt;a href=&quot;http://webdriver.io/guide/usage/multiremote.html&quot;&gt;webdriverio docs&lt;/a&gt; on the subject</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="100db436fc0e183226731ebbe4a6a3864730ff65" translate="yes" xml:space="preserve">
          <source>Here is the diagram of CodeceptJS architecture</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a90586bce4d589b8115742a29b57d8f56008230" translate="yes" xml:space="preserve">
          <source>Here is the full list of &lt;a href=&quot;https://www.browserstack.com/app-automate/capabilities&quot;&gt;capabilities&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab818eb857f1d76575e858d9ddbda95e82489a9d" translate="yes" xml:space="preserve">
          <source>Here we also use word &lt;strong&gt;And&lt;/strong&gt; to extend the Given and not to repeat it in each line.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="254c6239374c28d4b24f64d04a9391be95cb7954" translate="yes" xml:space="preserve">
          <source>Hide the keyboard.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3dbe9e30bdcea5d90ac4cde6c40e9d6023cf238f" translate="yes" xml:space="preserve">
          <source>Hook Usage Examples</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4bd8f3f03a576b2088bd73a2339d07fca1de805d" translate="yes" xml:space="preserve">
          <source>Hooks</source>
          <target state="translated">Hooks</target>
        </trans-unit>
        <trans-unit id="c7347716015d16f5447564a95b6f52b6d57f8da0" translate="yes" xml:space="preserve">
          <source>Hooks are JavaScript files same as for bootstrap and teardown, which can be registered inside &lt;code&gt;hooks&lt;/code&gt; section of config. Unlike &lt;code&gt;bootstrap&lt;/code&gt; you can have multiple hooks registered:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3254132bcaed58d05c41bc76b9b73ad210df7fe2" translate="yes" xml:space="preserve">
          <source>Hooks are available when using the &lt;code&gt;run-multiple&lt;/code&gt; command to perform actions before the test suites start and after the test suites have finished. See &lt;a href=&quot;https://codecept.io/hooks/#bootstrap-teardown&quot;&gt;Hooks&lt;/a&gt; for an example.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="097963f2766d084e229481c18d3c9686d836e3eb" translate="yes" xml:space="preserve">
          <source>How Fast Is Nightmare JS?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8cecc82d72d68f9151cb0901cfe40eeac15bfca6" translate="yes" xml:space="preserve">
          <source>How It Works</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f53c8a20919264f2e8e88ce83decf2d0e660bc7" translate="yes" xml:space="preserve">
          <source>How does your client, manager, or tester, or any other non-technical person, know your web application is working? By opening the browser, accessing a site, clicking on links, filling in the forms, and actually seeing the content on a web page.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="962248bc7070fb23a6587dc08ad315cf7351e512" translate="yes" xml:space="preserve">
          <source>How to Use</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="507edb102684aac1273345d49d787c7218828297" translate="yes" xml:space="preserve">
          <source>However this behavior can be configured with following options:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b52b3d24ed78d9ef6bf7050db35915199cc72f0" translate="yes" xml:space="preserve">
          <source>However, behind the scene &lt;strong&gt;all actions are wrapped in promises&lt;/strong&gt; inside the &lt;code&gt;I&lt;/code&gt; object. &lt;a href=&quot;https://github.com/Codeception/CodeceptJS/blob/master/lib/recorder.js&quot;&gt;Global promise&lt;/a&gt; chain is initialized before each test and all &lt;code&gt;I.*&lt;/code&gt; calls will be appended to it as well as setup and teardown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4d5ebe01dfadab7c70f17122ef7cd34dd84d2c8" translate="yes" xml:space="preserve">
          <source>Html</source>
          <target state="translated">Html</target>
        </trans-unit>
        <trans-unit id="8bbeaf1ff076e67f1fe45507be8d32265e3e7fc6" translate="yes" xml:space="preserve">
          <source>Hybrid Apps and Contexts</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e9f5c15bc6549e57568e937c9756b79fb5fcde1" translate="yes" xml:space="preserve">
          <source>ID Locators</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f547e8786394ca37ea6aea53d1ad95e9390254b6" translate="yes" xml:space="preserve">
          <source>ID locators are best to select the exact semantic element in web and mobile testing:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52f42adee0a7f85f60b816ceb0898ecc9f85ca16" translate="yes" xml:space="preserve">
          <source>IFrames</source>
          <target state="translated">IFrames</target>
        </trans-unit>
        <trans-unit id="0ee792bd956e08f701eee5259777e90702c2621c" translate="yes" xml:space="preserve">
          <source>If Allure plugin is enabled this plugin attaches each saved screenshot to allure report.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13b09ad343ff6939493be83ec73566f995718fc5" translate="yes" xml:space="preserve">
          <source>If a group of scenarios have the same initial steps, let's that for dashboard we need always need to be logged in as administrator. We can use &lt;em&gt;Background&lt;/em&gt; section to do the required preparations and not to repeat same steps across scenarios.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2356a98d060aedab43dc3c8639a245010a71063a" translate="yes" xml:space="preserve">
          <source>If a plugin is disabled (&lt;code&gt;enabled&lt;/code&gt; is not set or false) this plugin can be enabled from command line:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ddffba98851b73e5c1ef12443277051c83ad72e" translate="yes" xml:space="preserve">
          <source>If a test is failing you can prevent browser from closing by putting &lt;code&gt;pause()&lt;/code&gt; command into &lt;code&gt;After()&lt;/code&gt; hook. This is very helpful to debug failing tests. This way you can keep the same session and try different actions on a page to get the idea what went wrong.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a75235bc5c76856d5d1c1716df13186be5da0384" translate="yes" xml:space="preserve">
          <source>If everything is OK, continue with installing Appium. If not, consider using cloud based alternatives like &lt;a href=&quot;https://saucelabs.com&quot;&gt;SauceLabs&lt;/a&gt; or &lt;a href=&quot;http://browserstack.com&quot;&gt;BrowserStack&lt;/a&gt;. Cloud services provide hosted appium with real and emulated mobile devices.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba2b99f103a86a42923b39a393956e4acb6ea3e5" translate="yes" xml:space="preserve">
          <source>If everything is done right, you will see in console:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3f81f920113f784d43c57e164b3fe4b05166c76" translate="yes" xml:space="preserve">
          <source>If it's hard to define what to wait, it is recommended to use &lt;a href=&quot;https://codecept.io/basics/#retries&quot;&gt;retries&lt;/a&gt; to rerun flaky steps.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77ab370cf15683e9f08143e13547902dadf678f1" translate="yes" xml:space="preserve">
          <source>If multiple elements found returns an array of texts.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62724d76b1d949c7fc96de02a059f6eab509f698" translate="yes" xml:space="preserve">
          <source>If no &lt;code&gt;CODECEPT_ARGS&lt;/code&gt; provided and &lt;code&gt;RUN_MULTIPLE&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;, tests will proceed with &lt;code&gt;CODECEPT_ARGS=--all&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62996de8bcfbec39e22ca563bb21a266fea81b3a" translate="yes" xml:space="preserve">
          <source>If none found, CodeceptJS tries to find link or button containing that text. In case an image is clickable its &lt;code&gt;alt&lt;/code&gt; attribute will be checked for text inclusion. Form buttons will also be searched by name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a150629e125fee676f88d003d02e759756038919" translate="yes" xml:space="preserve">
          <source>If nothing found, check if locator looks like a CSS selector. If so, run it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d191edeeb2f7528441cdddb03fa5eac3b5231f5" translate="yes" xml:space="preserve">
          <source>If nothing found, check if locator looks like an XPath expression. If so, run it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60616e3db3c038ea0a953c1083ccd98e7482a8b2" translate="yes" xml:space="preserve">
          <source>If nothing found, check if there is a label with specified text for input element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d48b68ada9c7cef738a6e62fcd1dccaf51dde83" translate="yes" xml:space="preserve">
          <source>If nothing found, check if there is an input element with a corresponding name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="087f7db0529a56d8cfaa6e4e27adc319d208d0ce" translate="yes" xml:space="preserve">
          <source>If nothing found, throw an &lt;code&gt;ElementNotFound&lt;/code&gt; exception.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7252fea85b2869f8748c4dae87dd49ca556bb17" translate="yes" xml:space="preserve">
          <source>If the locator is an object, it should have a single element, with the key signifying the locator type (&lt;code&gt;id&lt;/code&gt;, &lt;code&gt;name&lt;/code&gt;, &lt;code&gt;css&lt;/code&gt;, &lt;code&gt;xpath&lt;/code&gt;, &lt;code&gt;link&lt;/code&gt;, or &lt;code&gt;class&lt;/code&gt;) and the value being the locator itself. This is called a &quot;strict&quot; locator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b7c18242e5e2eccba3b59cc416e24f9d226800e" translate="yes" xml:space="preserve">
          <source>If using the Protractor or WebDriverIO drivers, link the container with a Selenium Standalone docker container with an alias of &lt;code&gt;selenium&lt;/code&gt;. Additionally, make sure your &lt;code&gt;codeceptjs.conf.js&lt;/code&gt; contains the following to allow CodeceptJS to identify where Selenium is running.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d51f2fe971100a29238559fbf966a4d235d21c1a" translate="yes" xml:space="preserve">
          <source>If you are familiar with Selenium, you can choose classical &lt;a href=&quot;#using-selenium-webdriver&quot;&gt;&lt;strong&gt;Selenium WebDriver&lt;/strong&gt; setup&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1244e749513ae1fbf2f928b1ead9d9586e23ee45" translate="yes" xml:space="preserve">
          <source>If you are using JavaScript-style config &lt;code&gt;codecept.conf.js&lt;/code&gt;, bootstrap and teardown functions can be placed inside of it:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e33097e0e89d99ab314da9e69637eb776f7e2f88" translate="yes" xml:space="preserve">
          <source>If you are using Visual Studio Code or other IDE that supports TypeScript Definitions, you can generate step definitions with</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fa375d59c8139ed136119668af3e61af4855159" translate="yes" xml:space="preserve">
          <source>If you get an error like this</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa0991d02bbf537feacaa0d8745808d19b87850c" translate="yes" xml:space="preserve">
          <source>If you have a step which often fails you can retry execution for this single step. Use &lt;code&gt;retry()&lt;/code&gt; function before an action to ask CodeceptJS to retry this step on failure:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78822759a24f8c57d809f94d1a0dbe13e8d4f4a7" translate="yes" xml:space="preserve">
          <source>If you need to execute some code before a group of tests, you can &lt;a href=&quot;https://codecept.io/advanced/#tags&quot;&gt;mark these tests with a same tag&lt;/a&gt;. Then to listen for tests where this tag is included (see &lt;a href=&quot;#test-object&quot;&gt;test object api&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="299ec487b04fff9ad42cef734cbf367b39e75fa9" translate="yes" xml:space="preserve">
          <source>If you need to get element's value inside a test you can use &lt;code&gt;grab*&lt;/code&gt; methods. They should be used with &lt;code&gt;await&lt;/code&gt; operator inside &lt;code&gt;async&lt;/code&gt; function:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a2d83a55cedf85810d1176c0df2ea68421d92db" translate="yes" xml:space="preserve">
          <source>If you need to run complex setup before all tests and teardown this afterwards you can use &lt;code&gt;BeforeSuite&lt;/code&gt; and &lt;code&gt;AfterSuite&lt;/code&gt; functions. &lt;code&gt;BeforeSuite&lt;/code&gt; and &lt;code&gt;AfterSuite&lt;/code&gt; have access to &lt;code&gt;I&lt;/code&gt; object, but &lt;code&gt;BeforeSuite/AfterSuite&lt;/code&gt; don't have an access to the browser because it's not running at this moment. You can use them to execute handlers that will setup your environment. &lt;code&gt;BeforeSuite/AfterSuite&lt;/code&gt; will work only for a file where it was declared (so you can declare different setups for files)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3de09631352dbb7876328c63a2f5012706f7a728" translate="yes" xml:space="preserve">
          <source>If you prefer to store your configuration files in a different location, or with a different name, you can do that with &lt;code&gt;--config&lt;/code&gt; or `-c:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dacaedddc64174efec50d3f287c917a8935acc3d" translate="yes" xml:space="preserve">
          <source>If you prefer, you may also pass a string for the locator. This is called a &quot;fuzzy&quot; locator. In this case, CodeceptJS uses a variety of heuristics (depending on the exact method called) to determine what element you're referring to. If you are locating a clickable element or an input element, CodeceptJS will use &lt;a href=&quot;#semantic-locators&quot;&gt;semantic locators&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8bdd5540c38ee9a1284fdd96f75896f04361d03d" translate="yes" xml:space="preserve">
          <source>If you want to get information from a running test you can use &lt;code&gt;await&lt;/code&gt; inside &lt;strong&gt;async function&lt;/strong&gt; and special methods of helpers started with &lt;code&gt;grab&lt;/code&gt; prefix.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="108985ff5b9c833486e7fc488da2048b3fb5c8ee" translate="yes" xml:space="preserve">
          <source>If you wish to use BrowserStack's &lt;a href=&quot;https://www.browserstack.com/app-automate&quot;&gt;Automated Mobile App Testing&lt;/a&gt; platform. Configure the Appium helper like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd93e599bbbb1b4fc11db51a3f722fd84b4c0665" translate="yes" xml:space="preserve">
          <source>If you'd like to retry step more than once pass the amount as parameter:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35709666889886a1bba450dae4d29a1bbd6810bd" translate="yes" xml:space="preserve">
          <source>In &lt;a href=&quot;https://codecept.io/mobile/#locating-elements&quot;&gt;mobile testing&lt;/a&gt; you can use &lt;code&gt;~&lt;/code&gt; to specify accessibility id to locate an element. In web application you can locate element by their &lt;code&gt;aria-label&lt;/code&gt; value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aacde693b25033c902834997da761ad91638880e" translate="yes" xml:space="preserve">
          <source>In CodeceptJS you can combine tests written in Gherkin format with classical acceptance tests. This way you can keep your feature files compact with minimal set of scenarios, and write regular tests to cover all cases. Please note, feature files will be executed before tests.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac1cd0937a68ef9145c21fabd41825c808eab4d5" translate="yes" xml:space="preserve">
          <source>In a similar manner CodeceptJS allows you to generate &lt;strong&gt;PageFragments&lt;/strong&gt; and any other are abstraction by running &lt;code&gt;go&lt;/code&gt; command with &lt;code&gt;--type&lt;/code&gt; (or &lt;code&gt;-t&lt;/code&gt;) option:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a9fc2a46e3b5cf8c848b97ac877c280d5187b1e" translate="yes" xml:space="preserve">
          <source>In case an application has different pages (login, admin, etc) you should use a page object. CodeceptJS can generate a template for it with the command:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fdf34e8a67cc55b9fa2283713c38707833cd1daf" translate="yes" xml:space="preserve">
          <source>In case of CodeceptJS you can be sure that in code it will be as easy as it sounds. You just describe a test scenario with JavaScript DSL and allow the framework to handle the rest.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b0a5528d38413b179131fb08d8cd29eb1b8ce63" translate="yes" xml:space="preserve">
          <source>In case scenarios represent the same logic but differ on data, we can use &lt;em&gt;Scenario Outline&lt;/em&gt; to provide different examples for the same behavior. Scenario outline is just like a basic scenario with some values replaced with placeholders, which are filled from a table. Each set of values is executed as a different test.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="658d9b818f29e6b0e053e53beef056f8dcabce40" translate="yes" xml:space="preserve">
          <source>In case some actions should be taken inside one element (a container or modal window) you can use &lt;code&gt;within&lt;/code&gt; block to narrow the scope. Please take a note that you can't use within inside another within in Puppeteer helper:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08bb23e95df0f56cfbcb65f14b3a1226b622cf98" translate="yes" xml:space="preserve">
          <source>In case some code should be executed on one platform and ignored on others use &lt;code&gt;runOnAndroid&lt;/code&gt; and &lt;code&gt;runOnIOS&lt;/code&gt; methods:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7427a4af31bcb3fd8bd58cad654ad2e40c5916fe" translate="yes" xml:space="preserve">
          <source>In case you need to execute arbitrary code before or after the tests, you can use &lt;code&gt;bootstrap&lt;/code&gt; and &lt;code&gt;teardown&lt;/code&gt; config. Use it to start and stop webserver, Selenium, etc.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a4492f07576e454719d620336fd3e91b5cf5525" translate="yes" xml:space="preserve">
          <source>In modern web applications rendering is happen on client side. Sometimes that may cause delays. A test may fail while trying to click an element which has not appeared on a page yet. To handle this cases &lt;code&gt;wait*&lt;/code&gt; methods introduced.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="512065fc7903f237f18d30acdc1a47e85c57a020" translate="yes" xml:space="preserve">
          <source>In order to verify the expected behavior of a web application, web page connects should be checked. CodeceptJS provides built-in assertions for that. They start with &lt;code&gt;see&lt;/code&gt; (or &lt;code&gt;dontSee&lt;/code&gt;) prefix, as they describe user's current vision.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ff445b252fc37c3fd56f5315e83a45069dd6cdd" translate="yes" xml:space="preserve">
          <source>In previous examples, we've moved actions into &lt;code&gt;createTodo&lt;/code&gt; function. Is there a more elegant way of refactoring? Can we have something like &lt;code&gt;I.createTodo()&lt;/code&gt; to be used in code? Sure, we can do so by editing &lt;code&gt;steps_file.js&lt;/code&gt; created by init command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e71dd95024f19ca98df8099236fbb192d7d20fdc" translate="yes" xml:space="preserve">
          <source>In this case &lt;code&gt;config&lt;/code&gt; overrides current config of the first helper. To change config of specific helper pass two arguments: helper name and config values:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5cb824f23356ffa4dbe19a5208486a127b9ca06" translate="yes" xml:space="preserve">
          <source>In this config config all methods of &lt;code&gt;I&lt;/code&gt; will be taken from &lt;code&gt;WebDriverIO&lt;/code&gt; helper.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81542edbc64d01d3f3d729a14ae7294cc7472390" translate="yes" xml:space="preserve">
          <source>In this guide we will use &lt;a href=&quot;https://github.com/GoogleChrome/puppeteer&quot;&gt;Google Chrome &lt;strong&gt;Puppeteer&lt;/strong&gt;&lt;/a&gt; as a driver for browsers. This allows us to start in a minutes with no extra tools installed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e55a35f6766f290f3ff89dd76845e0115007fd5" translate="yes" xml:space="preserve">
          <source>In this way Codecept runner class can be extended.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5cf44273af79edce59964b0e71f79c83f2125ea0" translate="yes" xml:space="preserve">
          <source>In this way CodeceptJS is more similar to Cucumber, so if you run a test with &lt;code&gt;--steps&lt;/code&gt; option you will see this output:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19682bdb9185a5fa9d763d414d0443d3a0bc2456" translate="yes" xml:space="preserve">
          <source>Init</source>
          <target state="translated">Init</target>
        </trans-unit>
        <trans-unit id="541f586efc59c7f211d6c0c591f44a63d97c7064" translate="yes" xml:space="preserve">
          <source>Initialize CodeceptJS with &lt;code&gt;init&lt;/code&gt; command:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="acb2c3ecf85e27fa2148b9c5192d6ffefb423206" translate="yes" xml:space="preserve">
          <source>Initially this functionality was part of corresponding helper but has been moved into plugin since 1.4</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="441e9f7e908020df9faffebd6213f281eec92fca" translate="yes" xml:space="preserve">
          <source>Injects Angular module.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aef7385cd0573e3c888ccb255e3d4d4b99862b7f" translate="yes" xml:space="preserve">
          <source>Inside &lt;code&gt;stop_server.js&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44d0edb14a7b601779c54c4a45ba990a499d2497" translate="yes" xml:space="preserve">
          <source>Inside JS config file</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a8eb6f02c53d5229db19f4921d87348dccefd70" translate="yes" xml:space="preserve">
          <source>Inside those JS files you can use CodeceptJS API (see below) to access its internals.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="391e83ce6af8aae019fcc76a5817215d18f15321" translate="yes" xml:space="preserve">
          <source>Install &lt;a href=&quot;https://github.com/rosiejs/rosie&quot;&gt;Rosie&lt;/a&gt; and &lt;a href=&quot;https://www.npmjs.com/package/faker&quot;&gt;Faker&lt;/a&gt; libraries.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="007e3ec250bf286e0dd3c9448e3c0775dfe9476f" translate="yes" xml:space="preserve">
          <source>Install an app on device.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7fb8ae7e5a4f9b643f047667e753ba068d6faa33" translate="yes" xml:space="preserve">
          <source>Install it via NPM (locally or globally, depending on CodeceptJS installation type):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2990f8d506589999980af98dd04647970eaa8f0" translate="yes" xml:space="preserve">
          <source>Install it via NPM:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d29f8e830a4a8f77d407201c3252e30ca501406" translate="yes" xml:space="preserve">
          <source>Install rosie and faker to create a first factory:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c81b79df3c6448eae7c4f80428b54cd5692a17d7" translate="yes" xml:space="preserve">
          <source>Installation</source>
          <target state="translated">Installation</target>
        </trans-unit>
        <trans-unit id="427ba68970ec18007e5ab1505b7b2b1fecfecca0" translate="yes" xml:space="preserve">
          <source>IntelliSense</source>
          <target state="translated">IntelliSense</target>
        </trans-unit>
        <trans-unit id="c7c64d916e772ba673003002b6f9af5e1f020ff0" translate="yes" xml:space="preserve">
          <source>Interactive shell can be started outside the test context by running</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ac347352efd2ddfa91f2f970280919d826c376f" translate="yes" xml:space="preserve">
          <source>Interactive shell. Allows to try &lt;code&gt;I.&lt;/code&gt; commands in runtime</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2473e96bc614a911821242119918a241a41836d6" translate="yes" xml:space="preserve">
          <source>Introduction</source>
          <target state="translated">Introduction</target>
        </trans-unit>
        <trans-unit id="c23029050858e92bc25cbc85e60ce01a4b4802c6" translate="yes" xml:space="preserve">
          <source>Is there a sane alternative to Selenium?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1507aba4558a0ce7512766851a1cb27a4a98d469" translate="yes" xml:space="preserve">
          <source>It can be required from codeceptjs package if it is installed locally.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5650850eb11d138e7f3a0d651e8f06ebf38c38a" translate="yes" xml:space="preserve">
          <source>It can be used in tests like:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b02892636257ce37fa6801e394333e805c7ce3e" translate="yes" xml:space="preserve">
          <source>It is common to think that BDD scenario is equal to test. But it's actually not. Not every test should be described as a feature. Not every test is written to test real business value. For instance, regression tests or negative scenario tests are not bringing any value to business. Business analysts don't care about scenario reproducing bug #13, or what error message is displayed when user tries to enter wrong password on login screen. Writing all the tests inside a feature files creates informational overflow.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7499400148ab62addc107aa04a4f96a5d2f775e5" translate="yes" xml:space="preserve">
          <source>It is important to understand that Nightmare executes JavaScript on client and on server side. If you need to find an element you should search for it using client side script, but if you want to do an assertion you should return a data to server side.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc73e4d8abd08a168be76b3bece7ad0fe582400c" translate="yes" xml:space="preserve">
          <source>It is modern Electron based testing framework which allows to execute tests in headless mode as well as in window mode for debug purposes. This makes Nightmare very useful, much more handy than PhantomJS. Nightmare is in active development and has nice API for writing acceptance tests. Unfortunately, as all other JavaScript testing frameworks it has its own very custom API. What if you choose it for a project and suddenly you realize that you need something more powerful, like Selenium? Yes, that might be a problem if you are not using CodeceptJS. The one idea behind CodeceptJS is to unify different testing backends under one API, so you could easily write tests the same way no matter what engines you use: webdriverio, Protractor, or Nightmare.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0f0c0bc8bd79f73a8b18002b1fc49af08885e60" translate="yes" xml:space="preserve">
          <source>It is often happen that mobile applications behave similarly on different platforms. Can we build one test for them? Yes! CodeceptJS provides a way to specify different locators for Android and iOS platforms:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4fb1cccf96f1df640995303852436da954c6b49" translate="yes" xml:space="preserve">
          <source>It is possible to execute global conditional retries to handle unforseen errors. Lost connections and network issues are good candidates to be retried whenever they appear.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="452ed2e046c1ecac42b31c22373a8c238a5358d8" translate="yes" xml:space="preserve">
          <source>It is possible to wait for elements pragmatically. If a test uses element which is not on a page yet, CodeceptJS will wait for few extra seconds before failing. This feature is based on &lt;a href=&quot;http://www.seleniumhq.org/docs/04_webdriver_advanced.jsp#implicit-waits&quot;&gt;Implicit Wait&lt;/a&gt; of Selenium. CodeceptJS enables implicit wait only when searching for a specific element and disables in all other cases. Thus, the performance of a test is not affected.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e0c3410dd36f828503605a6490a03519bae768f" translate="yes" xml:space="preserve">
          <source>It is recommended to &lt;a href=&quot;https://codecept.io/advanced/#tags&quot;&gt;filter tests by tags&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87bcd5d106c48abc021393d2054927158f7994fe" translate="yes" xml:space="preserve">
          <source>It is recommended to avoid &lt;code&gt;console.log&lt;/code&gt; and use output.* methods for printing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0991288d3b9d14661979a56ba5f8238201fb75b6" translate="yes" xml:space="preserve">
          <source>It is required to set REST API &lt;code&gt;endpoint&lt;/code&gt; which is the baseUrl for all API requests. Factory file is expected to be passed via &lt;code&gt;factory&lt;/code&gt; option.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9cf78424fa89a4d02720674816aea3fd29d5c947" translate="yes" xml:space="preserve">
          <source>It will add &lt;code&gt;gherkin&lt;/code&gt; section to the current config. It will also prepare directories for features and step definition. And it will create the first feature file for you.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55564481c1c5407f6628c1c8d15b9f08b148bccb" translate="yes" xml:space="preserve">
          <source>It will locate first available webview, switch to it, and switch back to native application after. Inside WebView all browser features are enabled: CSS locators, JavaScript, etc.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8549072ce48702e536256da88406bfb515d98ee0" translate="yes" xml:space="preserve">
          <source>It's readable and simple and works using Puppeteer API!</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="485b57adcc80650a0f376fe516e0ea35fef68007" translate="yes" xml:space="preserve">
          <source>Italian</source>
          <target state="translated">Italian</target>
        </trans-unit>
        <trans-unit id="2aa75e764723325dfde398ae15df6e3521cd2249" translate="yes" xml:space="preserve">
          <source>JS file executed as is (synchronously).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6fd64ad3edc4a3636360a9cc2093ea76a8756af7" translate="yes" xml:space="preserve">
          <source>JS file exporting an object with &lt;code&gt;bootstrap&lt;/code&gt; and &lt;code&gt;teardown&lt;/code&gt; methods.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8a0fa2d9c5834455f3aa640e653939803606b0b" translate="yes" xml:space="preserve">
          <source>JS file exporting function with optional callback for async execution.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46497f7cf09e80137c1407e9f11384336e4b30de" translate="yes" xml:space="preserve">
          <source>Just as you can specify android, and ios-specific locators, you can do so for web:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec4e4a61535561e82c6d096ccba18432c471340c" translate="yes" xml:space="preserve">
          <source>Just define how many items of any kind you need and ApiDataFactory will create them for you. However, to make this work some preparations required.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61a8ffdcbb31609d9a5a9bd24c5b8f563f9ff21c" translate="yes" xml:space="preserve">
          <source>Launch Allure server and see the report like on a screenshot above:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e38012f2c9853d683d73a64317e5ebb239475095" translate="yes" xml:space="preserve">
          <source>Launch Selenium with Chrome browser inside a Docker container:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d005bd930a47ebf79bb55c8e7bb08d3cd79d063" translate="yes" xml:space="preserve">
          <source>Launch the daemon: &lt;code&gt;appium&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c033d5370feb09e5c5565fe634bbf43f05a3303d" translate="yes" xml:space="preserve">
          <source>Learn more about &lt;a href=&quot;https://codecept.io/helpers/&quot;&gt;Helpers&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96b09004f9adc15d14e58b39f7ad4189734a4fa7" translate="yes" xml:space="preserve">
          <source>Let's execute the test above within WebDriverIO using headless Firefox + Selenium Server packed in Docker container.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6fc7f03be0b277f8bfc5e45a3d0743dfe21ec72" translate="yes" xml:space="preserve">
          <source>Let's improve our BDD suite by using the advanced features of Gherkin language.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04bfcde921c04dae9b39dad630e28411daef8d0b" translate="yes" xml:space="preserve">
          <source>Let's learn some more about Gherkin format and then we will see how to execute it with CodeceptJS. We can enable Gherkin for current project by running &lt;code&gt;gherkin:init&lt;/code&gt; command on &lt;strong&gt;already initialized project&lt;/strong&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3084082d252819023489b17defd0f922f14da23b" translate="yes" xml:space="preserve">
          <source>Let's prepare our test for multiple scenarios. All test scenarios will need to open main page of application, so &lt;code&gt;amOnPage&lt;/code&gt; can be moved into the &lt;code&gt;Before&lt;/code&gt; hook: Scenarios will probably deal with created todo items, so we can move logic of crating new todo into a function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d5c3125a09a284275429fc49cb7d54850da3f33" translate="yes" xml:space="preserve">
          <source>Let's say we need to populate database for a group of tests.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="960501b1d7981f7f72293641a252d9d193ddab58" translate="yes" xml:space="preserve">
          <source>Let's say you want to test login for different user accounts. In this case, you need to create a datatable and fill it in with credentials. Then use &lt;code&gt;Data().Scenario&lt;/code&gt; to include this data and generate multiple scenarios:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="464effdbad81227422d048023d28c64f2331268e" translate="yes" xml:space="preserve">
          <source>Let's submit this sample form for a test:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfbeece8f02da3aa45c0a581b0b33b4f7c2035e4" translate="yes" xml:space="preserve">
          <source>Level of Detail</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58fd3b1b83cc7fc933d72fe934bdb6e534441281" translate="yes" xml:space="preserve">
          <source>Licensed under the MIT License.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ba14e12ba4fd1c58349ed160fe3f97b4909e3eb" translate="yes" xml:space="preserve">
          <source>Like in Mocha you can use &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;only&lt;/code&gt; to skip tests or making a single test to run.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="720928e3ef69685c9c203028b449c7e8e91bc032" translate="yes" xml:space="preserve">
          <source>Like you may have noticed, CodeceptJS doesn't use &lt;code&gt;by.*&lt;/code&gt; locators similar to Protractor or Selenium Webdriver. Instead most of methods expect you to pass valid CSS or XPath. In case you don't want CodeceptJS to guess the type of locator, you can specify them using so-called strict locators. This is an absolute analogy of &lt;code&gt;by&lt;/code&gt;, so you can use angular specific locators (like models, repeaters, bindings, etc) in it:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39e01aa357475618bb9ef4ff93edffc8a5f70edf" translate="yes" xml:space="preserve">
          <source>Linking Containers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac8f82335671071c5371f3f6c08baf58bde0d8b7" translate="yes" xml:space="preserve">
          <source>List Commands</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aac1c9394cc15b83d529d4831acfd8e2e30a9328" translate="yes" xml:space="preserve">
          <source>Load config and run tests from &lt;code&gt;test&lt;/code&gt; dir</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc99d54d9990e3c134420be3918e88f28531e630" translate="yes" xml:space="preserve">
          <source>Local</source>
          <target state="translated">Local</target>
        </trans-unit>
        <trans-unit id="e93141d83b8039749e1ed013e1831599e1264246" translate="yes" xml:space="preserve">
          <source>Locally</source>
          <target state="translated">Locally</target>
        </trans-unit>
        <trans-unit id="1bf5fff85d5c97b65fb855f40872bfce7a820280" translate="yes" xml:space="preserve">
          <source>Locate elements by different locator types, including strict locator. Should be used in custom helpers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59b5717b200361a58da43745dfa456c8e29bdb5a" translate="yes" xml:space="preserve">
          <source>Locating Element</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62665d7c3d6cf04792e337332587e03f16094f05" translate="yes" xml:space="preserve">
          <source>Locating Elements</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00d38aa625673140780b2f90bbc4b8a8d75a6f8a" translate="yes" xml:space="preserve">
          <source>Locator Builder</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d19e7e05760860ccf59deeaad68e42851c355970" translate="yes" xml:space="preserve">
          <source>Locator builder accepts both XPath and CSS as parameters but converts them to XPath as more feature-rich format. Sometimes provided locators can get very long so it's recommended to simplify the output by providing a brief description for generated XPath:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52bf20e31c1011d6c474f86447e769778d5207a0" translate="yes" xml:space="preserve">
          <source>Locators</source>
          <target state="translated">Locators</target>
        </trans-unit>
        <trans-unit id="53175b2a8d1b033f3db0420d2b1a8986898a95fc" translate="yes" xml:space="preserve">
          <source>Long Strings</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44ab9f620fa5507c6206e3903c432744306f43f8" translate="yes" xml:space="preserve">
          <source>Make sure &lt;code&gt;Puppeteer&lt;/code&gt; helper is enabled in &lt;code&gt;codecept.json&lt;/code&gt; config:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bedcfdd998ee980c02d9c4fd504ce8b8ac40f230" translate="yes" xml:space="preserve">
          <source>Make sure to have mocha installed or install it:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d34a9a7cc1f7032f7ac94e73a5e2756ed464db7" translate="yes" xml:space="preserve">
          <source>Managing data for tests is always a tricky issue. How isolate data between tests, how to prepare data for different tests, etc. There are different approaches to solve it:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85eaa73cf22e8103fec64c238b172f88c9430aff" translate="yes" xml:space="preserve">
          <source>Manipulating Web Page</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="920dd57e7db1ebeb1fa86a9bf3b1e4bf9701f295" translate="yes" xml:space="preserve">
          <source>Mobile Testing</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4784125acaadea4efb94691fa10014f6b7fc2210" translate="yes" xml:space="preserve">
          <source>Mobile applications may have different contexts. For instance, there can be native view and web view with a browser instance in it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d846386b45743bbe14cdc3d2982c8bf1c5675276" translate="yes" xml:space="preserve">
          <source>Mobile test is pretty similar to a web test. And it is much the same, if you test hybrid app with a web view context inside. However, mobile apps do not have URLs, Cookies, they have other features which may vary on a running platform.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b49e28217c1f32666ad2f3052c8d44a48ac3223" translate="yes" xml:space="preserve">
          <source>More wait actions can be found in helper's reference.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9edbc959ca2c07544d421c46fe1077c57a7dbd91" translate="yes" xml:space="preserve">
          <source>Moreover, alternatively arguments to &lt;code&gt;codecept run-multiple&lt;/code&gt; command can be passed via &lt;code&gt;RUN_MULTIPLE&lt;/code&gt; and &lt;code&gt;CODECEPT_ARGS&lt;/code&gt; environment variable. For example this is what looks like in your codeceptjs.conf.js</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1447f0c44fb0f14e94ba1cd2593592b8579b7d8d" translate="yes" xml:space="preserve">
          <source>Most methods in CodeceptJS use locators which can be either a string or an object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5dcf3399c046f19bfd0b3b7c0dbba1c86c5a1fed" translate="yes" xml:space="preserve">
          <source>Moves cursor to element matched by locator. Extra shift can be set with offsetX and offsetY options</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c2bb4c06f43c51226c71b6a2843a24d6d7d4609" translate="yes" xml:space="preserve">
          <source>Moves to url</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ff5be1fa1c98523961d77d211cb9e88954853d1" translate="yes" xml:space="preserve">
          <source>Multi Reports</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97ea8107b5ad8285200980522626d836895b743e" translate="yes" xml:space="preserve">
          <source>Multiple Browsers Execution</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7666affaf988e1fde99845201a933fb65cda4245" translate="yes" xml:space="preserve">
          <source>Multiple Sessions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab499ae87df0b2103e10772697ddd9a8f8573f9b" translate="yes" xml:space="preserve">
          <source>Multiremote Capabilities</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f60b569643f256db17904edea7f04c7aa897ee06" translate="yes" xml:space="preserve">
          <source>Multiremote Capabilities (WebDriverIO)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c06f1019f66bfa744bb9b8bdd7feea7401ab56e5" translate="yes" xml:space="preserve">
          <source>Native iOS/Android locators can be used with &lt;code&gt;android=&lt;/code&gt; and &lt;code&gt;ios=&lt;/code&gt; prefixes. &lt;a href=&quot;http://webdriver.io/guide/usage/selectors.html#Mobile-Selectors&quot;&gt;Learn more&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e95960a5c11995494f66737b0c7308893fd1ca9" translate="yes" xml:space="preserve">
          <source>Nested IFrames can be set by passing array &lt;em&gt;(WebDriverIO, Nightmare &amp;amp; Puppeteer only)&lt;/em&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c9e29cdf50514a8eca8ce1ae500477de2de8e00" translate="yes" xml:space="preserve">
          <source>New objects can also be added to container in runtime:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15e9eff0b36839a9d5761da8d2489852ba577e3e" translate="yes" xml:space="preserve">
          <source>Next example demonstrates how to use WebDriverIO library to create your own test action. Method &lt;code&gt;seeAuthentication&lt;/code&gt; will use &lt;code&gt;client&lt;/code&gt; instance of WebDriverIO to get access to cookies. Standard NodeJS assertion library will be used (you can use any).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df0a572490af28130369da7be3e47e52e90f8f63" translate="yes" xml:space="preserve">
          <source>Next is to configure helper to match factories with API:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46a15e823f35dd7061cf4fe3feba75d85139b31d" translate="yes" xml:space="preserve">
          <source>Next, is to launch the emulator or connect physical device. Once they are prepared, launch Appium:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="323f607ffa2a112ff3d82ca45b193fc32426e064" translate="yes" xml:space="preserve">
          <source>Next: &lt;a href=&quot;https://codecept.io/acceptance/&quot;&gt;Acceptance Testing in CodeceptJS &amp;gt;&amp;gt;&amp;gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="216e7db5afef9daaa3254c356c30158f9a4b151b" translate="yes" xml:space="preserve">
          <source>Next: &lt;a href=&quot;https://codecept.io/basics/&quot;&gt;CodeceptJS Basics &amp;gt;&amp;gt;&amp;gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5123709f8545f73e1fff6d3196ca9b90b1410db" translate="yes" xml:space="preserve">
          <source>Next: &lt;a href=&quot;https://codecept.io/puppeteer/&quot;&gt;CodeceptJS with Puppeteer &amp;gt;&amp;gt;&amp;gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43574e2f933bbefd377b17ec2c3fe92541a97d86" translate="yes" xml:space="preserve">
          <source>Nightmare</source>
          <target state="translated">Nightmare</target>
        </trans-unit>
        <trans-unit id="b141b6a57cf84b29b3de818917b2abb3107b68ef" translate="yes" xml:space="preserve">
          <source>Nightmare helper is supposed to work in the same manner as WebDriverIO or Protractor. This means that all CodeceptJS actions like &lt;code&gt;click&lt;/code&gt;, &lt;code&gt;fillField&lt;/code&gt;, &lt;code&gt;selectOption&lt;/code&gt; and others are supposed to work in the very same manner. They are expressive and flexible to accept CSS, XPath, names, values, or strict locators. Follow the helper reference for detailed description.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1331d4069d372f951acd3a8613cdc19c07ab9c27" translate="yes" xml:space="preserve">
          <source>Nightmare helper wraps &lt;a href=&quot;https://github.com/segmentio/nightmare&quot;&gt;Nightmare&lt;/a&gt; library to provide fastest headless testing using Electron engine. Unlike Selenium-based drivers this uses Chromium-based browser with Electron with lots of client side scripts, thus should be less stable and less trusted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2e276e1059ea6fcd0b97f417c0e9598eebe3a1f" translate="yes" xml:space="preserve">
          <source>Nightmare instance can be accessed by custom helper:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f44f5f7e331e77a89a89e96e0b0c8f38415418dc" translate="yes" xml:space="preserve">
          <source>Nightmare provides &lt;code&gt;evaluate&lt;/code&gt; method to execute client-side JavaScript. CodeceptJS registers &lt;code&gt;codeceptjs&lt;/code&gt; object globally on client side with &lt;code&gt;findElement&lt;/code&gt; and &lt;code&gt;findElements&lt;/code&gt; methods in it. They return IDs of matched elements so you can access them in next calls to &lt;code&gt;evaluate&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40dd41273b67b6e7fbbddb7ef092de631bc1b3cc" translate="yes" xml:space="preserve">
          <source>Nightmare provides you with more control to browser engine than Selenium does. This allows you to use headers in your tests. For instance, CodeceptJS provides &lt;code&gt;haveHeader&lt;/code&gt; method to set default headers for all your HTTP requests:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f44071148112dbaa4c0e42b147e26f7c33875c8" translate="yes" xml:space="preserve">
          <source>NightmareJS support only CSS locators for web elements, while CodeceptJS improves it to use XPath as well. This is how form can be located by labels, and buttons by text in examples above. It is done by injecting client-side scrips (for element location) to every loaded page. Also all events like click, doubleClick, keyPress are &lt;strong&gt;simulated&lt;/strong&gt; by JavaScript, this makes testing less relevant, as they are not native to operating systems.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2eef98e1d1590b3345f7ce9dbddcc3c8d86645e1" translate="yes" xml:space="preserve">
          <source>Note: Chunking will be most effective if you have many individual test files that contain only a small amount of scenarios. Otherwise the combined execution time of many scenarios or big scenarios in one single test file potentially lead to an uneven execution time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3854c94ada9a768e304b4fa1ffe876f7ee76dfd" translate="yes" xml:space="preserve">
          <source>Now this objects can be retrieved by the name specified in configuration. CodeceptJS generator commands (like &lt;code&gt;codeceptjs gpo&lt;/code&gt;) will update configuration for you.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2803e7f5ce7f669dff787ae4d1afe1218245ead" translate="yes" xml:space="preserve">
          <source>Now you can write test like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d36cabeccab5452b643072a1f49f57939a069bc7" translate="yes" xml:space="preserve">
          <source>Now you should include &lt;code&gt;/// &amp;lt;reference path=&quot;./steps.d.ts&quot; /&amp;gt;&lt;/code&gt; into your test files to get method autocompletion while writing tests.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f410197b8f9ee05cbc5a2063df86700a5920239f" translate="yes" xml:space="preserve">
          <source>Once you configured Appium, create the first test by running</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e1fe5186d355a07561fc61872bddfa883fe941f" translate="yes" xml:space="preserve">
          <source>Open new tab and switch to it</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a28270e2b7cf79e3cc3116a9cfbcd092992bdf96" translate="yes" xml:space="preserve">
          <source>Open the notifications panel on the device.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76b336c7b278afc21f1dff4b6eb852fca9db5868" translate="yes" xml:space="preserve">
          <source>Opening a Web Page</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47246f41e1dd6972dccc2e4ca4d082212558b907" translate="yes" xml:space="preserve">
          <source>Opens a web page in a browser. Requires relative or absolute url. If url starts with &lt;code&gt;/&lt;/code&gt;, opens a web page of a site defined in &lt;code&gt;url&lt;/code&gt; config parameter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61671a7e71eadbb986b88c9f0323cf908808d140" translate="yes" xml:space="preserve">
          <source>Opposite to &lt;code&gt;see&lt;/code&gt;. Checks that a text is not present on a page. Use context parameter to narrow down the search.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9896ba60cc2547225051dff4a875e959e798cba8" translate="yes" xml:space="preserve">
          <source>Opposite to &lt;code&gt;seeElement&lt;/code&gt;. Checks that element is not visible (or in DOM)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7e7ff41d5d5d7f8f06f07a387d9a5541afd679c" translate="yes" xml:space="preserve">
          <source>Opposite to &lt;code&gt;seeElementInDOM&lt;/code&gt;. Checks that element is not on page.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bdcc5504f4d991893da05ca64a74caccde22b9f8" translate="yes" xml:space="preserve">
          <source>Option &lt;code&gt;waitForAction&lt;/code&gt; defines how long to wait after a click, doubleClick or pressKey action is performed. Test execution may happen much faster than the response is rendered, so make sure you set a proper delay value. By default CodeceptJS waits for 500ms.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0c42c2296e3c659809e930d649cdd357abc883e" translate="yes" xml:space="preserve">
          <source>Options can be passed by calling &lt;code&gt;codeceptjs&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96bb2374a83900b916d3baf573ea2f1829a44648" translate="yes" xml:space="preserve">
          <source>Or in provided path</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0d92ff465685e47177da5b903470844574c0e54" translate="yes" xml:space="preserve">
          <source>Or see &lt;a href=&quot;https://codecept.io/installation/&quot;&gt;alternative installation options&lt;/a&gt; If you already have CodeceptJS project, just install &lt;code&gt;puppeteer&lt;/code&gt; package and enable it in config.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4bed336194a9a5c86b6a734f03b3570d2aae1a68" translate="yes" xml:space="preserve">
          <source>Output</source>
          <target state="translated">Output</target>
        </trans-unit>
        <trans-unit id="40e8f9b6387804ad2404baacc201969fc9adf8dd" translate="yes" xml:space="preserve">
          <source>Output is printed for all running processes. Each line is tagged with a suite and browser name:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13a62f730a0e26b4fcacd0a4b83936feb9bb2db5" translate="yes" xml:space="preserve">
          <source>Output module provides 4 verbosity levels. Depending on the mode you can have different information printed using corresponding functions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4a122c76ddc90ef42936ca215ff4887a7e939e7" translate="yes" xml:space="preserve">
          <source>Override config on the fly. Provide valid JSON which will be merged into current config:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c7e9494acb57670c4395cfd2599ae9349d79109" translate="yes" xml:space="preserve">
          <source>Page Fragments</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3637b88b78dd96f1d06c042a982511affe107178" translate="yes" xml:space="preserve">
          <source>Page Fragments represent autonomous parts of a page, like modal boxes, components, widgets. Technically they are the same as PageObject but conceptually they are a bit different. For instance, it is recommended that Page Fragment to include a root locator of a component. Methods of page fragment can use &lt;code&gt;within&lt;/code&gt; block to narrow scope to a root locator:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebaffd1ddbaebe85d6df5d5cdd306e48e8a8ecce" translate="yes" xml:space="preserve">
          <source>Page Object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7675015f0524f489b145693a13c9d5c77708e556" translate="yes" xml:space="preserve">
          <source>PageObject</source>
          <target state="translated">PageObject</target>
        </trans-unit>
        <trans-unit id="2b338af39aea20defe562c404d22d384da1fb4d9" translate="yes" xml:space="preserve">
          <source>Parallel Execution</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a975eea30db9fa05003e3b5097688bd49ec7e01b" translate="yes" xml:space="preserve">
          <source>Parameters</source>
          <target state="translated">Parameters</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
