<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="homebrew">
    <body>
      <group id="homebrew">
        <trans-unit id="2da7182752d8fdaf80197c4edcbef742ec73e58e" translate="yes" xml:space="preserve">
          <source>&amp;copy; 2009&amp;ndash;present Homebrew contributors</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52035ae980fd431e23b0d6fd58e76c17e6a3e2a6" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;Mac&amp;rdquo; is fine; &amp;ldquo;Macintosh&amp;rdquo; isn&amp;rsquo;t necessary</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b18138d8f530ef84384d85dc67284d3047dd452e" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;RuboCop&amp;rdquo;, not &amp;ldquo;Rubocop&amp;rdquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17dd6e3dbaeefddbf95ae9f5d353f36cc129285b" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;check out&amp;rdquo; is the verb; &amp;ldquo;checkout&amp;rdquo; is the noun</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe2d42db4553a89468d597166e457f69732fe2ee" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;e.g.&amp;rdquo; and &amp;ldquo;i.e.&amp;rdquo;: Go ahead and use &amp;ldquo;e.g.&amp;rdquo; or &amp;ldquo;i.e.&amp;rdquo; instead of spelling them out. Don&amp;rsquo;t worry about putting a comma after them.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c34ff2273bcb315fb1c819a135a279a2ad046eb" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;e.g.&amp;rdquo; means &amp;ldquo;for example&amp;rdquo;; &amp;ldquo;i.e.&amp;rdquo; means &amp;ldquo;that is&amp;rdquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f63e533782a900a507a5779ed983f4363adb073" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;macOS&amp;rdquo; for all versions, &amp;ldquo;OS X&amp;rdquo; or &amp;ldquo;Mac OS X&amp;rdquo; when describing specific older versions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0e7b490d3d32ba4de9572e1fae05ad35cb67f23" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;pull request&amp;rdquo;, not &amp;ldquo;Pull Request&amp;rdquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22f925429761b4cfafd7579c4518b63810fc37b2" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;repository&amp;rdquo;, not &amp;ldquo;repo&amp;rdquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34ab4ad5b9f11fae60eb3a74e18a0a7ef2a5891e" translate="yes" xml:space="preserve">
          <source>(&lt;a href=&quot;https://wiki.python.org/moin/Python2orPython3&quot;&gt;Wondering which one to choose?&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e63edbc4c9b7a4a4d7dacf53a3d3ee5e98f41bf" translate="yes" xml:space="preserve">
          <source>1. Definitions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="561d7ef760e326d545132ec6f948bbdbd82034a0" translate="yes" xml:space="preserve">
          <source>2. Members</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aad0aa6073eb3445a66470ba042b0921c48f2cb6" translate="yes" xml:space="preserve">
          <source>3. General Meetings of Members</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5dd757b2e776eee12806d6034674c4926322050e" translate="yes" xml:space="preserve">
          <source>3.1. Amendments to these bylaws</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf3d00ba7476beaf64bba022a38d4317a9cb563f" translate="yes" xml:space="preserve">
          <source>32-bit x86</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0554c71a9c0276e569df19a07f3be7e71e1f0ad3" translate="yes" xml:space="preserve">
          <source>4. Project Leadership Committee</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d65faf5f4f195428e0fdf61d525d1bd47bbacc02" translate="yes" xml:space="preserve">
          <source>5. Meetings of the Project Leadership Committee</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="423763043b6d8fd48a285a6bd57c24dcbe4df77d" translate="yes" xml:space="preserve">
          <source>6. Project Leader</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2d524653b6029c86105feee1f38b6f3dbc4dd9a" translate="yes" xml:space="preserve">
          <source>7. Technical Steering Committee</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a8a2a10c38eee01d1ef6e6559aec5eacebfc9d9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#features&quot;&gt;Features&lt;/a&gt;, &lt;a href=&quot;#dependencies&quot;&gt;dependencies&lt;/a&gt; and &lt;a href=&quot;#install&quot;&gt;installation instructions&lt;/a&gt; are described below. Terminology (e.g. the difference between a Cellar, Tap, Cask and so forth) is &lt;a href=&quot;formula-cookbook#homebrew-terminology&quot;&gt;explained in the documentation&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82084b9439f622b62e97bc72726da8a56c21e683" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;formula-cookbook#commit&quot;&gt;Make a separate commit&lt;/a&gt; for each changed formula with &lt;code&gt;git add&lt;/code&gt; and &lt;code&gt;git commit&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa2d98c268db9ba4016716a69b6bc4e334e4e66a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://atom.io/packages/language-homebrew-formula&quot;&gt;language-homebrew-formula&lt;/a&gt; adds highlighting and diff support (with the &lt;a href=&quot;https://atom.io/packages/language-diff&quot;&gt;language-diff&lt;/a&gt; plugin).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="763e9d504b43e341fd7f5e8d366de95e777eb9e0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://discourse.brew.sh/c/linuxbrew&quot;&gt;Homebrew on Linux category&lt;/a&gt; of &lt;a href=&quot;https://discourse.brew.sh&quot;&gt;Homebrew&amp;rsquo;s Discourse&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b02ab62bd60920e0ec70f3a6e44a68e9abdcbd7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://formulae.brew.sh&quot;&gt;formulae.brew.sh&lt;/a&gt; has a &lt;a href=&quot;https://formulae.brew.sh/docs/api/&quot;&gt;documented JSON API&lt;/a&gt; which provides access to the &lt;code&gt;brew info --json=v1&lt;/code&gt; output without needing access to Homebrew.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="206dab226f6ac3b3e887f4f1b8f563bbc4219c99" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/Homebrew/brew/fork&quot;&gt;Fork the Homebrew/brew repository on GitHub&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a57bdd1959077c5a71db27c656cd2f8a30fd9087" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/Homebrew/homebrew-core/blob/master/Formula/jrnl.rb&quot;&gt;&lt;code&gt;jrnl&lt;/code&gt;&lt;/a&gt; is an example of a formula that does this well. The end result means the user doesn&amp;rsquo;t have to use &lt;code&gt;pip&lt;/code&gt; or Python and can just run &lt;code&gt;jrnl&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5fa6d8dbf1eaf06269483b75adad55266b38066f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/Homebrew/homebrew-core/blob/master/Formula/pdftohtml.rb&quot;&gt;&lt;code&gt;pdftohtml&lt;/code&gt;&lt;/a&gt; provides an example of a serious conflict, where both formula ship an identically-named binary that is essential to functionality, so a &lt;a href=&quot;https://rubydoc.brew.sh/Formula#conflicts_with-class_method&quot;&gt;&lt;code&gt;conflicts_with&lt;/code&gt;&lt;/a&gt; is preferable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="646d629955743bc37f610bfb2990bc5f890507a8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/Homebrew/homebrew-core/fork&quot;&gt;Fork the Homebrew/homebrew-core repository on GitHub&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea5be55fa442754c8b654bfa8d7b56f6cbc0c128" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/InstantClientTap/homebrew-instantclient&quot;&gt;InstantClientTap/instantclient&lt;/a&gt;: A tap for Oracle Instant Client. The packages need to be downloaded manually.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d7a294efde87a75d68067f92e0aefd146b0fdfc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/brewsci/homebrew-bio&quot;&gt;brewsci/bio&lt;/a&gt;: Bioinformatics formulae.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0602bbd74e1709fc898eba68de486b726490e43" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/davidchall/homebrew-hep&quot;&gt;davidchall/hep&lt;/a&gt;: High energy physics formulae.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="edad8c869a53c931fb2ae9182da5f922bd971502" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/denji/homebrew-nginx&quot;&gt;denji/nginx&lt;/a&gt;: A tap for NGINX modules, intended for its &lt;code&gt;nginx-full&lt;/code&gt; formula which includes more module options.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c4e0722483e8c82d0511f4d7f2886d2d5f4e35e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/dunn/homebrew-emacs&quot;&gt;dunn/emacs&lt;/a&gt;: A tap for Emacs packages.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87df0d495244dc90c53664d5f3b6a4c484a26dbc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/dunn/homebrew-mode&quot;&gt;homebrew-mode&lt;/a&gt; provides syntax highlighting for inline patches as well as a number of helper functions for editing formula files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f08f2486b1beeb6b033f8052c0c97a178f6b6ce1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/hiddenlotus/pcmpl-homebrew&quot;&gt;pcmpl-homebrew&lt;/a&gt; provides completion for emacs shell-mode and eshell-mode.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6c6f4aa76dbe70e0a669e146499d417143c0e52" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/lifepillar/homebrew-appleii&quot;&gt;lifepillar/appleii&lt;/a&gt;: Formulae for vintage Apple emulation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="979f53a0b24f80b248bf6a5c28d4fd542a0a90d1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/mistydemeo/tigerbrew&quot;&gt;mistydemeo/tigerbrew&lt;/a&gt;: Experimental Tiger PowerPC version.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82dcb9c72720c193322f0d8fb140ef7b85ab20bc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/osrf/homebrew-simulation&quot;&gt;osrf/simulation&lt;/a&gt;: Tools for robotics simulation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7dca024b43abcbff62db5ca7290fc1ea87eb64b0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/osx-cross/homebrew-avr&quot;&gt;osx-cross/avr&lt;/a&gt;: GNU AVR toolchain (Libc, compilers and other tools for Atmel MCUs, useful for Arduino hackers and AVR programmers).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a78c3fd9c799538149b00a1e3a4d56a3bba814c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/petere/homebrew-postgresql&quot;&gt;petere/postgresql&lt;/a&gt;: Allows installing multiple PostgreSQL versions in parallel.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75f9e291bb9613cbfa4381f7807215fa97dcc636" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/riscv/homebrew-riscv&quot;&gt;RISC-V&lt;/a&gt; provides the RISC-V toolchain including binutils and GCC.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c0ed57587f6ff023c9f94f68b7a632a0c6fcca8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/sidaf/homebrew-pentest&quot;&gt;sidaf/pentest&lt;/a&gt;: Tools for penetration testing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9401ac84d11e88c0e4c298929054bdb7f83d12b7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/tdsmith/homebrew-pypi-poet&quot;&gt;homebrew-pypi-poet&lt;/a&gt; can help you generate &lt;a href=&quot;https://rubydoc.brew.sh/Formula#resource-class_method&quot;&gt;&lt;code&gt;resource&lt;/code&gt;&lt;/a&gt; stanzas for the dependencies of your Python application.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="682a8a9a3aa2b8fbb776b88c13df13f98aed9d03" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/titanous/homebrew-gnuradio&quot;&gt;titanous/gnuradio&lt;/a&gt;: GNU Radio and friends running on macOS.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b79c8aaaa7ecc7b664c87d5c5a26d6a4f685214f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/varenc/homebrew-ffmpeg&quot;&gt;varenc/ffmpeg&lt;/a&gt;: A tap for FFmpeg with additional options, including nonfree additions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="588b24cfc1ddb306103c58ded185adc4c6c5f720" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/xu-cheng/brew.vim&quot;&gt;brew.vim&lt;/a&gt; adds highlighting to inline patches in Vim.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3af7aef19a14af5e7183fc1a9707c6173fdc099" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://legacy.python.org/dev/peps/pep-0453/#recommendations-for-downstream-distributors&quot;&gt;PEP 453&lt;/a&gt; makes a recommendation to downstream distributors (us) that sdist tarballs should be installed with &lt;code&gt;pip&lt;/code&gt; instead of by invoking &lt;code&gt;setup.py&lt;/code&gt; directly. We do not do this because Apple&amp;rsquo;s Python distribution does not include pip, so we can&amp;rsquo;t assume that pip is available. We could do something clever to work around Apple&amp;rsquo;s piplessness but the value proposition is not yet clear.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f64ad6a452e43a8d83e6c656b0b9c44f577ca7d0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://rubydoc.brew.sh/Formula#fails_with-class_method&quot;&gt;&lt;code&gt;fails_with&lt;/code&gt;&lt;/a&gt; declarations can be used with any of &lt;code&gt;:gcc&lt;/code&gt;, &lt;code&gt;:llvm&lt;/code&gt;, and &lt;code&gt;:clang&lt;/code&gt;. Homebrew will use this information to select a working compiler (if one is available).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b1ec333e4069774264bd401b70f6ae53efbc57f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://rubydoc.brew.sh/Formula#head-class_method&quot;&gt;&lt;code&gt;head&lt;/code&gt;&lt;/a&gt; URLs (activated by passing &lt;code&gt;--HEAD&lt;/code&gt;) build the development cutting edge. Specifying it is easy:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8072f9b6c2f581cb6c2aaf7d67b6e4173e600785" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://rubydoc.brew.sh/Formula#option-class_method&quot;&gt;&lt;code&gt;option&lt;/code&gt;&lt;/a&gt; names should be prefixed with the words &lt;code&gt;with&lt;/code&gt; or &lt;code&gt;without&lt;/code&gt;. For example, an option to run a test suite should be named &lt;code&gt;--with-test&lt;/code&gt; or &lt;code&gt;--with-check&lt;/code&gt; rather than &lt;code&gt;--test&lt;/code&gt;, and an option to enable a shared library &lt;code&gt;--with-shared&lt;/code&gt; rather than &lt;code&gt;--shared&lt;/code&gt; or &lt;code&gt;--enable-shared&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e885fdd86d6a05d581fc82be8d72dc78047bac6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://rubydoc.brew.sh/Formula#option-class_method&quot;&gt;&lt;code&gt;option&lt;/code&gt;&lt;/a&gt;s that aren&amp;rsquo;t &lt;code&gt;build.with? &lt;/code&gt; or &lt;code&gt;build.without?&lt;/code&gt; should be deprecated with &lt;a href=&quot;https://rubydoc.brew.sh/Formula#deprecated_option-class_method&quot;&gt;&lt;code&gt;deprecated_option&lt;/code&gt;&lt;/a&gt;. See &lt;a href=&quot;https://github.com/Homebrew/homebrew-core/blob/3f762b63c6fbbd49191ffdf58574d7e18937d93f/Formula/wget.rb#L27-L31&quot;&gt;&lt;code&gt;wget&lt;/code&gt;&lt;/a&gt; for an example.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57972f2d655f67a6390996a5af681a58d6000bca" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://rubydoc.brew.sh/Formula#patch-class_method&quot;&gt;&lt;code&gt;patch&lt;/code&gt;&lt;/a&gt;es can be declared in &lt;a href=&quot;https://rubydoc.brew.sh/Formula#stable-class_method&quot;&gt;&lt;code&gt;stable&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://rubydoc.brew.sh/Formula#devel-class_method&quot;&gt;&lt;code&gt;devel&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;https://rubydoc.brew.sh/Formula#head-class_method&quot;&gt;&lt;code&gt;head&lt;/code&gt;&lt;/a&gt; blocks. Always use a block instead of a conditional, i.e. &lt;code&gt;stable do ... end&lt;/code&gt; instead of &lt;code&gt;if build.stable? then ... end&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d809665d05963f286caa9f20bccbef2f8d0eeb0f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://rubydoc.brew.sh/Formula#plist_name-instance_method&quot;&gt;&lt;code&gt;plist_name&lt;/code&gt;&lt;/a&gt; will return e.g. &lt;code&gt;homebrew.mxcl.&amp;lt;formula&amp;gt;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="117fe0ac9c03746e793c740b6e004cc9a199f303" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://rubydoc.brew.sh/Formula#plist_path-instance_method&quot;&gt;&lt;code&gt;plist_path&lt;/code&gt;&lt;/a&gt; will return e.g. &lt;code&gt;/usr/local/Cellar/foo/0.1/homebrew.mxcl.foo.plist&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="932a60ba677cf5555a29a7239fa6f88fff600220" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://rubydoc.brew.sh/Formula#revision%3D-class_method&quot;&gt;&lt;code&gt;revision&lt;/code&gt;&lt;/a&gt;s are also used for formulae that move from the system OpenSSL to the Homebrew-shipped OpenSSL without any other changes to that formula. This ensures users aren&amp;rsquo;t left exposed to the potential security issues of the outdated OpenSSL. An example of this can be seen in &lt;a href=&quot;https://github.com/Homebrew/homebrew-core/commit/0d4453a91923e6118983961e18d0609e9828a1a4&quot;&gt;this commit&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c6cf40b26773ee520cb2282cd35ea4c7f982db2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://rubydoc.brew.sh/Utils/Inreplace&quot;&gt;&lt;code&gt;inreplace&lt;/code&gt;&lt;/a&gt; is a convenience function that can edit files in-place. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9dcf19179a253601df645da51f64f24222822e7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://rubydoc.brew.sh/Utils/Inreplace&quot;&gt;&lt;code&gt;inreplace&lt;/code&gt;&lt;/a&gt; should be used instead of patches when patching something that will never be accepted upstream, e.g. making the software&amp;rsquo;s build system respect Homebrew&amp;rsquo;s installation hierarchy. If it&amp;rsquo;s something that affects both Homebrew and MacPorts (i.e. macOS specific) it should be turned into an upstream submitted patch instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa1946efbcdff30f52b6d0174584e29dd40df12d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://virtualenv.pypa.io/&quot;&gt;Virtualenv&lt;/a&gt; ships &lt;code&gt;pip&lt;/code&gt; and creates isolated Python environments with separate site-packages, therefore you won&amp;rsquo;t need sudo.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4090e4bb8ead200713b36aec7144499bbc06aa98" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;taps&quot;&gt;Taps&lt;/a&gt; are external sources of Homebrew formulae and/or external commands. They can be created by anyone to provide their own formulae and/or external commands to any Homebrew user.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4249df43b00a7372fc54e51150fef7d0a19d3e7a" translate="yes" xml:space="preserve">
          <source>&lt;a name=&quot;1&quot;&gt;&lt;sup&gt;1&lt;/sup&gt;&lt;/a&gt; For 32-bit or PPC support see &lt;a href=&quot;https://github.com/mistydemeo/tigerbrew&quot;&gt;Tigerbrew&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ece3706995b16924543de8c3fd303225b658ee55" translate="yes" xml:space="preserve">
          <source>&lt;a name=&quot;2&quot;&gt;&lt;sup&gt;2&lt;/sup&gt;&lt;/a&gt; 10.12 or higher is recommended. 10.9&amp;ndash;10.11 are supported on a best-effort basis. For 10.4-10.6 see &lt;a href=&quot;https://github.com/mistydemeo/tigerbrew&quot;&gt;Tigerbrew&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29469b55b1058a81b1a5cd3c1d75fe0cb7e6da48" translate="yes" xml:space="preserve">
          <source>&lt;a name=&quot;3&quot;&gt;&lt;sup&gt;3&lt;/sup&gt;&lt;/a&gt; Most formulae require a compiler. A handful require a full Xcode installation. You can install Xcode, the CLT, or both; Homebrew supports all three configurations. Downloading Xcode may require an Apple Developer account on older versions of Mac OS X. Sign up for free &lt;a href=&quot;https://developer.apple.com/register/index.action&quot;&gt;here&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="635c941bc304d60616a75d13acb2b0dea72d60f7" translate="yes" xml:space="preserve">
          <source>&lt;a name=&quot;4&quot;&gt;&lt;sup&gt;4&lt;/sup&gt;&lt;/a&gt; The one-liner installation method found on &lt;a href=&quot;https://brew.sh&quot;&gt;brew.sh&lt;/a&gt; requires a Bourne-compatible shell (e.g. bash or zsh). Notably, fish, tcsh and csh will not work.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5cd83a9392e541e85be106852de1cf80cdd696e6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;lt;YOUR_USERNAME&amp;gt;&lt;/code&gt; is your GitHub username, not your local machine username.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ddf9e49ccf690f566e2478a32b73f326c9667d61" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--1&lt;/code&gt;: Only show dependencies one level down, instead of recursing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0af32ac67deae131bcf91cc189e015c6fb286bf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--HEAD&lt;/code&gt;: Fetch HEAD version instead of stable version.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="465451f9d7146f1a77f86799814891780d88ea6f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--HEAD&lt;/code&gt;: If &lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt; defines it, install the HEAD version, aka. master, trunk, unstable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95387da626e56f70208e044865a556d274c02746" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--HEAD&lt;/code&gt;: Indicate that &lt;em&gt;&lt;code&gt;URL&lt;/code&gt;&lt;/em&gt; points to the package&amp;rsquo;s repository rather than a file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad3e02cc861c0e2e4e9b272867f7c6be1ebdde07" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--HEAD&lt;/code&gt;: Show usage of &lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt; by HEAD build.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="189014657c3b7e45a9677763e972e718c29729d2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--HEAD&lt;/code&gt;: Test the head version of a formula.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95d3346a7e739d6041c41c9361ba424864e531ac" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--aliases&lt;/code&gt;: Verify any alias symlinks in each tap.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51c1979e710ded5f97709b06c44e25f23a3970e2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--all&lt;/code&gt;: List dependencies for all available formulae.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="beaf90fe84c825770ea6657a90d6fdc12217b9a7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--all&lt;/code&gt;: Print JSON of all available formulae.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce28c3e61d6a94941acec76b2a1aef5b97d51a96" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--all&lt;/code&gt;: Show options for all formulae.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8db54ab52678e451847a5f4e9a67b20ec252033" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--analytics&lt;/code&gt;: Display global Homebrew analytics data or, if specified, installation and build error data for &lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt; (provided neither &lt;code&gt;HOMEBREW_NO_ANALYTICS&lt;/code&gt; nor &lt;code&gt;HOMEBREW_NO_GITHUB_API&lt;/code&gt; are set).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56b38a1ecac5c2fb0bccf0c41d2b6526e2b37427" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--annotate&lt;/code&gt;: Mark any build, test, optional, or recommended dependencies as such in the output.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23a60588309b754f59153488fa8cc1ed3faf5484" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--autotools&lt;/code&gt;: Create a basic template for an Autotools-style build.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="242c1b79f67a15089803c7f90972d5829dd51e96" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--before&lt;/code&gt;: Use the commit at provided &lt;em&gt;&lt;code&gt;date&lt;/code&gt;&lt;/em&gt; as the start commit.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7d8d7501b64d9c58972a781c34c6bed48056fac" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--bintray-org&lt;/code&gt;: Publish bottles at the provided Bintray &lt;em&gt;&lt;code&gt;organisation&lt;/code&gt;&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5cc78ebc9fa7e3b1acdf24feb80889a5a4a5ffbf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--bottle-arch&lt;/code&gt;: Optimise bottles for the given architecture rather than the oldest architecture supported by the version of macOS the bottles are built on.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbf1858fcd5fbedfd28771a9ac49dcd0c4dc0485" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--bottle&lt;/code&gt;: Handle bottles, pulling the bottle-update commit and publishing files on Bintray.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34da5a3ad45cbb87e0c3f562f38db8bb46839956" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--branch-okay&lt;/code&gt;: Do not warn if pulling to a branch besides master (useful for testing).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7ff95df4df9b8c1878684a4a0ebea00948f62ec" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--build-bottle&lt;/code&gt;: Download the source (for eventual bottling) rather than a bottle.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74dd8ad2b9bf14f033f2857f9b0c2c61bc38bfe2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--build-bottle&lt;/code&gt;: Prepare the formula for eventual bottling during installation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1a1a4b25e13b12570340226f502dc4ca281d825" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--bump&lt;/code&gt;: For one-formula PRs, automatically reword commit message to our preferred format.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aee2115c5f28d3ad63d519b4d651c219a14dbab4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--cache&lt;/code&gt; [&lt;em&gt;&lt;code&gt;options&lt;/code&gt;&lt;/em&gt;] [&lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d2b9cb8f27167065af88431888a5a840636cf2e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--cached&lt;/code&gt;: Print the cached linkage values stored in &lt;code&gt;HOMEBREW_CACHE&lt;/code&gt;, set by a previous &lt;code&gt;brew linkage&lt;/code&gt; run.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cefb4210e7cdbec83faf6848b7958047b41f7f91" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--casks&lt;/code&gt;: Display all locally available casks (including tapped ones). No online search is performed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8122325d9c0730da4863db097cbde1e4a5227cdb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--category&lt;/code&gt;: Which type of global analytics data to retrieve. The value for &lt;em&gt;&lt;code&gt;category&lt;/code&gt;&lt;/em&gt; must be &lt;code&gt;install&lt;/code&gt;, &lt;code&gt;install-on-request&lt;/code&gt;, &lt;code&gt;cask-install&lt;/code&gt;, &lt;code&gt;build-error&lt;/code&gt; or &lt;code&gt;os-version&lt;/code&gt;. The default is &lt;code&gt;install&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c27c9b24ae3f44c78994ef8c7c8d5998e1b6f22e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--cc&lt;/code&gt;: Attempt to compile using provided &lt;em&gt;&lt;code&gt;compiler&lt;/code&gt;&lt;/em&gt;. &lt;em&gt;&lt;code&gt;compiler&lt;/code&gt;&lt;/em&gt; should be the name of the compiler&amp;rsquo;s executable, for instance &lt;code&gt;gcc-7&lt;/code&gt; for GCC 7. In order to use LLVM&amp;rsquo;s clang, use &lt;code&gt;llvm_clang&lt;/code&gt;. To specify the Apple-provided clang, use &lt;code&gt;clang&lt;/code&gt;. This parameter will only accept compilers that are provided by Homebrew or bundled with macOS. Please do not file issues if you encounter errors while using this flag.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35cfb73739b80d6725eeabb980972ec5c60359ee" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--cellar&lt;/code&gt; [&lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3925b27473cd8c61aefecd66989d22b02688186" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--clean&lt;/code&gt;: Do not rewrite or otherwise modify the commits found in the pulled PR.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="706ea4e249925a4d0f9b0d3ad686a7efc33e8c26" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--cmake&lt;/code&gt;: Create a basic template for a CMake-style build.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fdbfd4a3978ec7a38e1130143a4fdf8bd11968f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--commit&lt;/code&gt;: Use provided &lt;em&gt;&lt;code&gt;commit&lt;/code&gt;&lt;/em&gt; as the start commit.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a97d30fc2608526dcbc25e417143d04851156fe2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--compact&lt;/code&gt;: Show all options on a single line separated by spaces.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f84e7ee97419097de04e53d3031ff63fa32dfb13" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--coverage&lt;/code&gt;: Generate code coverage reports.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7bd82bd1f9bdeee6b498c1966cd46f8b5bd2b144" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--days&lt;/code&gt;: How many days of global analytics data to retrieve. The value for &lt;em&gt;&lt;code&gt;days&lt;/code&gt;&lt;/em&gt; must be &lt;code&gt;30&lt;/code&gt;, &lt;code&gt;90&lt;/code&gt; or &lt;code&gt;365&lt;/code&gt;. The default is &lt;code&gt;30&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b03f583da194b7485da498e3df59a65aa4fdf2a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--debian&lt;/code&gt;: Search for &lt;em&gt;&lt;code&gt;text&lt;/code&gt;&lt;/em&gt; in the given package manager&amp;rsquo;s list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ff2e710c0b3397f9d3e0031fc30368b41b0dbcc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--debug&lt;/code&gt; will ask you to open an interactive shell if the build fails so you can try to figure out what went wrong.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eafaf27644ae3340edd517d4ab7f50ef8bc81fb1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--deps&lt;/code&gt;: Download dependencies for any listed &lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68ac527de1a79cce2c1be24938688b929cc44be6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--desc&lt;/code&gt;: search formulae with a description matching &lt;em&gt;&lt;code&gt;text&lt;/code&gt;&lt;/em&gt; and casks with a name matching &lt;em&gt;&lt;code&gt;text&lt;/code&gt;&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35e5bf0a79dcd5d8ad8d9f8a5d23717579a4d8aa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--destdir&lt;/code&gt;: Create subdirectories in the directory named by &lt;em&gt;&lt;code&gt;path&lt;/code&gt;&lt;/em&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="725fd648f4593f48d1054e2714c5c300e5d03aad" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--devel&lt;/code&gt;: Bump the development rather than stable version. The development spec must already exist.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd7f6068eee498a013c44f0d87c39d84c946df5c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--devel&lt;/code&gt;: Fetch development version instead of stable version.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1711e6fd7d39635066e3943b102a9e34c6aebf3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--devel&lt;/code&gt;: If &lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt; defines it, install the development version.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59af0020510e6842bccc653906f7141cac89b95d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--devel&lt;/code&gt;: Show usage of &lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt; by development build.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b7b66650b614e22abd0858b8c21a8818d4c7df8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--devel&lt;/code&gt;: Test the development version of a formula.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19ae533a96dac86787230a86b171418b3c02ceed" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--display-cop-names&lt;/code&gt;: Include the RuboCop cop name for each violation in the output.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8881d27996ec59c0d759ab5a1a5f280dca6e12b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--display-filename&lt;/code&gt;: Prefix every line of output with name of the file or formula being audited, to make output easy to grep.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d355a8d3f07e0da0e98cee04bee8302bc9759a1c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--display-times&lt;/code&gt;: Print install times for each formula at the end of the run.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d904cdb95f14d33460a3cf12ad1e1e743ac3b89" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--dry-run&lt;/code&gt;: Show what would be upgraded, but do not actually upgrade anything.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b966af1b3828e1dcacf4029f7a0a873b06b4da5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--env&lt;/code&gt; [&lt;em&gt;&lt;code&gt;options&lt;/code&gt;&lt;/em&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72546f9f3c918afb74ed19805941754f1560f1d2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--env&lt;/code&gt;: If &lt;code&gt;std&lt;/code&gt; is passed, use the standard build environment instead of superenv.If &lt;code&gt;super&lt;/code&gt; is passed, use superenv even if the formula specifies the standard build environment.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22469b4c260f89bb2f53dedc5fd06cf3c8449fc6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--env&lt;/code&gt;: Use the standard &lt;code&gt;PATH&lt;/code&gt; instead of superenv&amp;rsquo;s, when &lt;em&gt;&lt;code&gt;std&lt;/code&gt;&lt;/em&gt; is passed</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff4e750e50474d6df19bd43cab4fb5f3f0823ac1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--examples&lt;/code&gt;: Show several examples.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2884b261377e3932cfa534373a61361b4a8a9bb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--except-cops&lt;/code&gt;: Specify a comma-separated &lt;em&gt;&lt;code&gt;cops&lt;/code&gt;&lt;/em&gt; list to skip checking for violations of the listed RuboCop cops.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86b883377aedb9f84030a74bf81c243014ea1710" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--except&lt;/code&gt;: Specify a comma-separated &lt;em&gt;&lt;code&gt;method&lt;/code&gt;&lt;/em&gt; list to skip running the methods named &lt;code&gt;audit_&lt;/code&gt;&lt;em&gt;&lt;code&gt;method&lt;/code&gt;&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10c20ee084c039142c3d12be9fff5c59733aca3d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--fail-if-changed&lt;/code&gt;: Return a failing status code if changes are detected in the manpage outputs. This can be used for CI to be notified when the manpages are out of date. Additionally, the date used in new manpages will match those in the existing manpages (to allow comparison without factoring in the date).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15d27589a54db50556865b86ab9ddfb650668494" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--fedora&lt;/code&gt;: Search for &lt;em&gt;&lt;code&gt;text&lt;/code&gt;&lt;/em&gt; in the given package manager&amp;rsquo;s list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a061be9cee1b17af349f3b4935327b4331b71f35" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--fetch-HEAD&lt;/code&gt;: Fetch the upstream repository to detect if the HEAD installation of the formula is outdated. Otherwise, the repository&amp;rsquo;s HEAD will be checked for updates when a new stable or development version has been released.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c47aec7db822ed19498d49937993c3eb8769960" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--fink&lt;/code&gt;: Search for &lt;em&gt;&lt;code&gt;text&lt;/code&gt;&lt;/em&gt; in the given package manager&amp;rsquo;s list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04e5427a249f87e6d6b024dbb5faa78ba78d828a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--fix&lt;/code&gt;: Fix style violations automatically using RuboCop&amp;rsquo;s auto-correct feature.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b47577b78c4e6f5dab5a952bf762f65e0a92c57a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--for-each&lt;/code&gt;: Switch into the mode used by the &lt;code&gt;--all&lt;/code&gt; option, but only list dependencies for the specified &lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt;, one formula per line. This is used for debugging the &lt;code&gt;--installed&lt;/code&gt;/&lt;code&gt;--all&lt;/code&gt; display mode.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0543fda52c29590472bcbf273e14aa6dd612e111" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--force-auto-update&lt;/code&gt;: Auto-update tap even if it is not hosted on GitHub. By default, only taps hosted on GitHub are auto-updated (for performance reasons).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fe64892f60c7808bc7c24f9a7cfec3a7438bf32" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--force-bottle&lt;/code&gt;: Download a bottle if it exists for the current or newest version of macOS, even if it would not be used during installation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b547349b74837c2bcdae7b9752887da837ba4d4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--force-bottle&lt;/code&gt;: Install from a bottle if it exists for the current or newest version of macOS, even if it would not normally be used for installation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04eb5f07014e87668adc817ffd46f3b902a843a8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--force-bottle&lt;/code&gt;: Show the cache file used when pouring a bottle.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a38aa4800620d774c26cec03e5f0fbad3fbca44" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--force-core-tap&lt;/code&gt;: Build a bottle even if &lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt; is not in &lt;code&gt;homebrew/core&lt;/code&gt; or any installed taps.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c92cad8fd97f4853dbc82ab324d7c715bbe2951" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--full-name&lt;/code&gt;: List dependencies by their full name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97ff767a1c2669c84ff068752535d518093c7e1a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--full-name&lt;/code&gt;: Print formulae with fully-qualified names. If &lt;code&gt;--full-name&lt;/code&gt; is not passed, other options (i.e. &lt;code&gt;-1&lt;/code&gt;, &lt;code&gt;-l&lt;/code&gt;, &lt;code&gt;-t&lt;/code&gt; and &lt;code&gt;-r&lt;/code&gt;) are passed to &lt;code&gt;ls&lt;/code&gt; which produces the actual output.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ae5660a1cad183bda2f7b54cb74ec280dbfb824" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--full&lt;/code&gt;: Use a full clone when tapping a repository. By default, the repository is cloned as a shallow copy (&lt;code&gt;--depth=1&lt;/code&gt;). To convert a shallow copy to a full copy, you can retap passing &lt;code&gt;--full&lt;/code&gt; without first untapping.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67ad4930c9d3c229434080b008a12598a5b54868" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--generic&lt;/code&gt;: Run only OS-agnostic tests.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a6b08522ce715e1fe978f52dd5d819735e7be72" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--github&lt;/code&gt;: Open a browser to the GitHub source page for &lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt;. To view formula history locally: &lt;code&gt;brew log -p&lt;/code&gt;&lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e8de6583d0096c6e6a09bb60bf8a3051ccd2042" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--hide&lt;/code&gt;: Act as if none of the provided &lt;em&gt;&lt;code&gt;hidden&lt;/code&gt;&lt;/em&gt; are installed. &lt;em&gt;&lt;code&gt;hidden&lt;/code&gt;&lt;/em&gt; should be comma-separated list of formulae.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fd416d12298065d9346391165c9ea63963b73db" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--ignore-dependencies&lt;/code&gt;: An unsupported Homebrew development flag to skip installing any dependencies of any kind. If the dependencies are not already present, the formula will have issues. If you&amp;rsquo;re not developing Homebrew, consider adjusting your PATH rather than using this flag.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="185da9418d8dd0141caad4068c4efea8d91b44f8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--ignore-dependencies&lt;/code&gt;: Don&amp;rsquo;t fail uninstall, even if &lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt; is a dependency of any installed formulae.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82b224208741755152ae907891a21fef9b6368b7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--ignore-pinned&lt;/code&gt;: Set a 0 exit code even if pinned formulae are not upgraded.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6fe83f92d702a571d7b463f6d122dc60027dae2f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--ignore-whitespace&lt;/code&gt;: Silently ignore whitespace discrepancies when applying diffs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="012a573d9e1c77d67d2d48a7a80dea638a831f9c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--include-aliases&lt;/code&gt;: Include the aliases of internal commands.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67098b159c53cc3a90c26321b426c559e2a56955" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--include-build&lt;/code&gt;: Include &lt;code&gt;:build&lt;/code&gt; dependencies for &lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04156351e92a301986d89a30c2879fbf77f240b9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--include-build&lt;/code&gt;: Include all formulae that specify &lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt; as &lt;code&gt;:build&lt;/code&gt; type dependency.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac86ad9f010b11fe1ed264427798b21d8c3c5d57" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--include-optional&lt;/code&gt;: Include &lt;code&gt;:optional&lt;/code&gt; dependencies for &lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77a01a54da4e18f69ff507a14aa03ece87fc16f8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--include-optional&lt;/code&gt;: Include all formulae that specify &lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt; as &lt;code&gt;:optional&lt;/code&gt; type dependency.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf8c2492794423710f69e24897ef09286e395e95" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--include-requirements&lt;/code&gt;: Include requirements in addition to dependencies for &lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0dcd48d5b7592dbae3681b4be106643433c1ec23" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--include-test&lt;/code&gt;: Include &lt;code&gt;:test&lt;/code&gt; dependencies for &lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt; (non-recursive).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11a8eb9162317feb6faab2609c8ac5d1102a608a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--include-test&lt;/code&gt;: Include all formulae that specify &lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt; as &lt;code&gt;:test&lt;/code&gt; type dependency.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a47ddc9128035669cdc68eea060fc43285bcb91" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--include-test&lt;/code&gt;: Install testing dependencies required to run &lt;code&gt;brew test&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad5b82591dafbcab06188b2b48549aaa1d30b750" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--installed&lt;/code&gt;: Display information on all installed taps.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="541b4bef10613dcb0546358332176535af36093c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--installed&lt;/code&gt;: List dependencies for formulae that are currently installed. If &lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt; is specified, list only its dependencies that are currently installed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d02e45c612f051aaf942ff2c00bf25daa6a30d3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--installed&lt;/code&gt;: Only list installed formulae.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0a52f3ae1acb4ae2993130d0bceb4f806955cba" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--installed&lt;/code&gt;: Print JSON of formulae that are currently installed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da373f5a15f9f2aebb524720b453c2638538bff9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--installed&lt;/code&gt;: Show options for all installed formulae.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c13d4f2deb39a4c0476f96f76684e96be8850d51" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--json&lt;/code&gt;: Print a JSON representation of &lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt;. Currently the default and only accepted value for &lt;em&gt;&lt;code&gt;version&lt;/code&gt;&lt;/em&gt; is &lt;code&gt;v1&lt;/code&gt;. See the docs for examples of using the JSON output: &lt;a href=&quot;querying-brew&quot;&gt;https://docs.brew.sh/Querying-Brew&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="240e0deb62672ae41bd1f95646301250bd015e40" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--json&lt;/code&gt;: Print a JSON representation of &lt;em&gt;&lt;code&gt;taps&lt;/code&gt;&lt;/em&gt;. Currently the default and only accepted value for &lt;em&gt;&lt;code&gt;version&lt;/code&gt;&lt;/em&gt; is &lt;code&gt;v1&lt;/code&gt;. See the docs for examples of using the JSON output: &lt;a href=&quot;querying-brew&quot;&gt;https://docs.brew.sh/Querying-Brew&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ebf132280b91422b7cbe82983e4a7e9795dda18" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--json&lt;/code&gt;: Print output in JSON format. Currently the default and only accepted value for &lt;em&gt;&lt;code&gt;version&lt;/code&gt;&lt;/em&gt; is &lt;code&gt;v1&lt;/code&gt;. See the docs for examples of using the JSON output: &lt;a href=&quot;querying-brew&quot;&gt;https://docs.brew.sh/Querying-Brew&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4553b9be5476463d9a21beeb9f4ee276a0a28311" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--json&lt;/code&gt;: Write bottle information to a JSON file, which can be used as the argument for &lt;code&gt;--merge&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e2a2d31fc42c526e00a843e650d5a574c3f806b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--keep-old&lt;/code&gt;: If the formula specifies a rebuild version, attempt to preserve its value in the generated DSL.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37219f8f16b4d219544cd8be5ddd46278074a0f5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--keep-tmp&lt;/code&gt;: Don&amp;rsquo;t delete the temporary files created during installation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6fa3af807eb3a528b88d764ead39742410c7cda" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--keep-tmp&lt;/code&gt;: Keep the temporary files created for the test.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82b2d3adb36c60000a31f7879eb2bdd63158a302" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--keep-tmp&lt;/code&gt;: Retain the temporary directory containing the new repository clone.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ded948dea66462c5b05c97cabc60cd0bcd083de" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--link&lt;/code&gt;: This is now done automatically by &lt;code&gt;brew update&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf6ce801eea9426b9e25c4f90c7c1eb3719c8e4a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--list-checks&lt;/code&gt;: List all audit methods.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea99d0b1ee0b5df5bd54e42f470163277f9807b7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--list-pinned&lt;/code&gt;: List all pinned taps.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc0b1b6c668cbcfa749b488d21efaeae43461cc9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--macports&lt;/code&gt;: Search for &lt;em&gt;&lt;code&gt;text&lt;/code&gt;&lt;/em&gt; in the given package manager&amp;rsquo;s list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bb5485420134cae0533ef13af9103794e4413aa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--markdown&lt;/code&gt;: Print as a Markdown list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8eec866ad5bd9eb2a2128718402dfb75f602489f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--merge&lt;/code&gt;: &lt;code&gt;git merge&lt;/code&gt; is used to include updates (rather than &lt;code&gt;git rebase&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd23daa6608b4163e67bb4a1c3f98c7fb9eaeb71" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--merge&lt;/code&gt;: Generate an updated bottle block for a formula and optionally merge it into the formula file. Instead of a formula name, requires a JSON file generated with &lt;code&gt;brew bottle --json&lt;/code&gt;&lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b901208fe659f7812a57d2aeb71f89127abfa7d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--meson&lt;/code&gt;: Create a basic template for a Meson-style build.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c517c7d49930611a400876a1ecf9d617dee8a6be" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--message&lt;/code&gt;: Append the provided &lt;em&gt;&lt;code&gt;message&lt;/code&gt;&lt;/em&gt; to the default PR message.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3eaf33a615ccfa82302e6d1b31f7b612e351f00d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--message&lt;/code&gt;: Append the provided &lt;em&gt;&lt;code&gt;message&lt;/code&gt;&lt;/em&gt; to the default commit message.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25fa063a01322a96fde9135fc0cf26ec4e7f4b7f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--mirror&lt;/code&gt;: Use the provided &lt;em&gt;&lt;code&gt;URL&lt;/code&gt;&lt;/em&gt; as a mirror URL.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e899d601996f898d2259825cfdc08d84fdb77e4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--multiple&lt;/code&gt;: Only show formulae with multiple versions installed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7e93ff06f9e853e495326e764cd2ff2c857fdcd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--name&lt;/code&gt;: Explicitly set the provided &lt;em&gt;&lt;code&gt;name&lt;/code&gt;&lt;/em&gt; of the package being installed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0dd862e3cf5b8e57adbc48a80d4ccddc3bc00279" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--new-formula&lt;/code&gt;: Run various additional style checks to determine if a new formula is eligible for Homebrew. This should be used when creating new formula and implies &lt;code&gt;--strict&lt;/code&gt; and &lt;code&gt;--online&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86e63f824a7390e530d5b22de006db4155e3c092" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--no-audit&lt;/code&gt;: Don&amp;rsquo;t run &lt;code&gt;brew audit&lt;/code&gt; before opening the PR.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b44d012370b7460f772b8592931b84eaed07f6e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--no-browse&lt;/code&gt;: Print the pull request URL instead of opening in a browser.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e486558079a180fd75755304401b7fccbd305220" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--no-commit&lt;/code&gt;: When passed with &lt;code&gt;--write&lt;/code&gt;, a new commit will not generated after writing changes to the formula file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9451e6f8d93d16cd6fd6b05929acf63b70465886" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--no-compat&lt;/code&gt;: Do not load the compatibility layer when running tests.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4bbdf78078b2cd0349b81b5b7ffff9222bd18a6f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--no-fetch&lt;/code&gt;: Homebrew will not download &lt;em&gt;&lt;code&gt;URL&lt;/code&gt;&lt;/em&gt; to the cache and will thus not add the SHA-256 to the formula for you, nor will it check the GitHub API for GitHub projects (to fill out its description and homepage).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d60e2ae41ca80fe6852f970ba1886926d400168" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--no-pbcopy&lt;/code&gt;: Do not copy anything to the system clipboard.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6be88d8b799d086d447d1c8a3663a6f6a35819fb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--no-publish&lt;/code&gt;: Do not publish bottles to Bintray.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14db18e539f46fb6610bcb79d67e691d6d0f3e2b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--no-rebuild&lt;/code&gt;: If the formula specifies a rebuild version, remove it from the generated DSL.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed0754bf32923d467ecde01118f90e787f4fbfef" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--oneline&lt;/code&gt;: Output only one line per commit.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15b0128167bbbb4c536d1b966254feebbe05d25f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--online&lt;/code&gt;: Include tests that use the GitHub API and tests that use any of the taps for official external commands.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="573676d1029b991786bf6ccc5da434999c2c2984" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--online&lt;/code&gt;: Run additional slower style checks that require a network connection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd826b92bd6f2c13b5f28cbc181377b015057964" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--only-cops&lt;/code&gt;: Specify a comma-separated &lt;em&gt;&lt;code&gt;cops&lt;/code&gt;&lt;/em&gt; list to check for violations of only the listed RuboCop cops.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60822708575b65135feed8fb2b8fc0d83c9cf644" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--only-dependencies&lt;/code&gt;: Install the dependencies with specified options but do not install the specified formula.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="940ee7563d93ca1aec6ea020145f0136f29cebe9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--only&lt;/code&gt;: Run only &lt;em&gt;&lt;code&gt;test_script&lt;/code&gt;&lt;/em&gt;&lt;code&gt;_spec.rb&lt;/code&gt;. Appending &lt;code&gt;:&lt;/code&gt;&lt;em&gt;&lt;code&gt;line_number&lt;/code&gt;&lt;/em&gt; will start at a specific line.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d217daf8870ce60e1041f39a21e6fd57b50e40cb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--only&lt;/code&gt;: Specify a comma-separated &lt;em&gt;&lt;code&gt;method&lt;/code&gt;&lt;/em&gt; list to only run the methods named &lt;code&gt;audit_&lt;/code&gt;&lt;em&gt;&lt;code&gt;method&lt;/code&gt;&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60a907a02d288fabce38763475557efe122ccc9b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--opensuse&lt;/code&gt;: Search for &lt;em&gt;&lt;code&gt;text&lt;/code&gt;&lt;/em&gt; in the given package manager&amp;rsquo;s list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dec1a8f5491dbd7fb6c719154e5067b7a50263df" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--or-later&lt;/code&gt;: Append &lt;code&gt;_or_later&lt;/code&gt; to the bottle tag.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49ad2af3204e65744388337b6bb8bf492bd1dec0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--overwrite&lt;/code&gt;: Delete files already existing in the prefix while linking.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="723e53ee1495b7732df1e814d577b874df83d7d2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--patch&lt;/code&gt;: Patches for &lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt; will be applied to the unpacked source.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f190a2eed98d03b5f6d1f745e33373204607da82" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--pinned&lt;/code&gt;: Show the versions of pinned formulae, or only the specified (pinned) formulae if &lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt; are given. See also &lt;code&gt;pin&lt;/code&gt;, &lt;code&gt;unpin&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="519a59dc644c7985508c7304143979d51807c614" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--plain&lt;/code&gt;: Plain output even when piped.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c008a920ca2a1a110fc1edae653ee37d5ac7d84" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--prefix&lt;/code&gt; [&lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb8b1a1ca0b587622cc096cd10b96e6b90699d01" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--prefix&lt;/code&gt; vs &lt;code&gt;--root&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce9037f6f202d022dddadb94139e1fab151bee36" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--prune-prefix&lt;/code&gt;: Only prune the symlinks and directories from the prefix and remove no other files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54116b8f17b496c6682f212aad1b4c776b83dd84" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--prune&lt;/code&gt;: Remove all cache files older than specified &lt;em&gt;&lt;code&gt;days&lt;/code&gt;&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fbad93546f5ed684dcad75957aff07de2a069bb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--pry&lt;/code&gt;: Use Pry instead of IRB. Implied if &lt;code&gt;HOMEBREW_PRY&lt;/code&gt; is set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d187ec9d8caa70365845e789f6fa3001a3d6198" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--recursive&lt;/code&gt;: Resolve more than one level of dependencies.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="707371af55dbdd91e91b1e275f8e3586999b38b3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--repair&lt;/code&gt;: Migrate tapped formulae from symlink-based to directory-based structure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd9dd20c767782b1fde4b1c6c1d09fcddad619ee" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--repository&lt;/code&gt; [&lt;em&gt;&lt;code&gt;user&lt;/code&gt;&lt;/em&gt;&lt;code&gt;/&lt;/code&gt;&lt;em&gt;&lt;code&gt;repo&lt;/code&gt;&lt;/em&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98e4da7add0e9562a9a645bd403d5f4ba45899a3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--resolve&lt;/code&gt;: When a patch fails to apply, leave in progress and allow user to resolve, instead of aborting.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3ce5b1442fd3f33336d752fb93a835a7383e9f4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--retry&lt;/code&gt;: Retry if a download fails or re-download if the checksum of a previously cached version no longer matches.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a771905ccbf2f468b2e9e6552dac2e271ff67451" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--reverse&lt;/code&gt;: For every library that a keg references, print its dylib path followed by the binaries that link to it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc9bdec08e2e7a44086d31bc044164dde2c3f38c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--revision&lt;/code&gt;: Specify the new git commit &lt;em&gt;&lt;code&gt;revision&lt;/code&gt;&lt;/em&gt; corresponding to a specified &lt;em&gt;&lt;code&gt;tag&lt;/code&gt;&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e3dfcec1a5af6c725b0605440bbbadf69874b14" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--root-url&lt;/code&gt;: Use the specified &lt;em&gt;&lt;code&gt;URL&lt;/code&gt;&lt;/em&gt; as the root of the bottle&amp;rsquo;s URL instead of Homebrew&amp;rsquo;s default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42a03c0fc7fb1375a6f316b9261285c7867ee79a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--root&lt;/code&gt;&lt;a href=&quot;https://mail.python.org/pipermail/distutils-sig/2010-November/017099.html&quot;&gt;is used&lt;/a&gt; when installing into a prefix that will not become part of the final installation location of the files, like when building a .rpm or binary distribution. When using a &lt;code&gt;setup.py&lt;/code&gt;-based setuptools, &lt;code&gt;--root&lt;/code&gt; has the side effect of activating &lt;code&gt;--single-version-externally-managed&lt;/code&gt;. It is not safe to use &lt;code&gt;--root&lt;/code&gt; with an empty &lt;code&gt;--prefix&lt;/code&gt; because the &lt;code&gt;root&lt;/code&gt; is removed from paths when byte-compiling modules.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8612260635b56ae03cd8a4f8582eb5cfb7356a86" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--seed&lt;/code&gt;: Randomise tests with the provided &lt;em&gt;&lt;code&gt;value&lt;/code&gt;&lt;/em&gt; instead of a random seed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e149405e20c23096a2f5fb24669cb0adde12b3b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--set-name&lt;/code&gt;: Set the name of the new formula to the provided &lt;em&gt;&lt;code&gt;name&lt;/code&gt;&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79bda1ba01d7df0f1939e240d642ca7bc77a8d17" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--set-version&lt;/code&gt;: Set the version of the new formula to the provided &lt;em&gt;&lt;code&gt;version&lt;/code&gt;&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84010d82aac1fead8465212b3aa5adc04d5707c2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--sha256&lt;/code&gt;: Specify the &lt;em&gt;&lt;code&gt;SHA-256&lt;/code&gt;&lt;/em&gt; checksum of the new download.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16c05c310344d7ca87ae6704952a54cbb775085a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--shell&lt;/code&gt;: Generate a list of environment variables for the specified shell, or &lt;code&gt;--shell=auto&lt;/code&gt; to detect the current shell.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8340af0efc2517110e8c4a2b5482682b2cb8c654" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--single-version-externally-managed&lt;/code&gt; (&amp;ldquo;SVEM&amp;rdquo;) is a setuptools-only &lt;a href=&quot;https://setuptools.readthedocs.io/en/latest/setuptools.html?#install-run-easy-install-or-old-style-installation&quot;&gt;argument to &lt;code&gt;setup.py install&lt;/code&gt;&lt;/a&gt;. The primary effect of SVEM is to use distutils to perform the install instead of using setuptools&amp;rsquo; &lt;code&gt;easy_install&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d661cc43da8cfd454b0f6edb900f00123887c2e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--skip-recommended&lt;/code&gt;: Skip &lt;code&gt;:recommended&lt;/code&gt; dependencies for &lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="368635a373a9599991c8143fdb1f6eb42f42f888" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--skip-recommended&lt;/code&gt;: Skip all formulae that specify &lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt; as &lt;code&gt;:recommended&lt;/code&gt; type dependency.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3af8c95cfc0390aa7a6d976ba758edaa84b9cdd2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--skip-relocation&lt;/code&gt;: Do not check if the bottle can be marked as relocatable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83899277b779cb8d3f5002c208bd6f00577530eb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--stat&lt;/code&gt;: Also output diffstat from commit.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4eda34aff863760843e635b2d9028f4ad0bdb0d8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--strict&lt;/code&gt;: Run &lt;code&gt;brew audit --strict&lt;/code&gt; before opening the PR.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb7e69bc15e1895ccda266b00f9ded57b04323d7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--strict&lt;/code&gt;: Run additional style checks, including RuboCop style checks.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf207fadd5bd21548217d43defbd75868a6f0637" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--syntax&lt;/code&gt;: Syntax-check all of Homebrew&amp;rsquo;s Ruby files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bce58d199fbde612622f7f1ca3009971791b399" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--tag&lt;/code&gt;: Specify the new git commit &lt;em&gt;&lt;code&gt;tag&lt;/code&gt;&lt;/em&gt; for the formula.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6185564993e7b20a552721772a8c09a966f20a7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--tap&lt;/code&gt;: Generate the new formula in the provided tap, specified as &lt;em&gt;&lt;code&gt;user&lt;/code&gt;&lt;/em&gt;&lt;code&gt;/&lt;/code&gt;&lt;em&gt;&lt;code&gt;repo&lt;/code&gt;&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d8c8f48a50560861bcecf7a5fb6bc7dab71d004" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--test-bot-user&lt;/code&gt;: Pull the bottle block commit from the provided &lt;em&gt;&lt;code&gt;user&lt;/code&gt;&lt;/em&gt; on GitHub.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="968ce7306eb0dff99fd8c94d9633c1cdc660e284" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--test&lt;/code&gt;: Display only missing libraries and exit with a non-zero status if any missing libraries are found.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df148ba41430a910e83ef699337f23bdf93c07ff" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--to-tag&lt;/code&gt;: Set &lt;code&gt;HOMEBREW_UPDATE_TO_TAG&lt;/code&gt; to test updating between tags.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a48e07849c645c8cfca69ea3c21f4a000fdb63ca" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--tree&lt;/code&gt;: Show dependencies as a tree. When given multiple formula arguments, show individual trees for each formula.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16dce446e737e9563c39fc3b3b25f6d986757a55" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--ubuntu&lt;/code&gt;: Search for &lt;em&gt;&lt;code&gt;text&lt;/code&gt;&lt;/em&gt; in the given package manager&amp;rsquo;s list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="517b0de63e7347a07ad5a329161d3c0489eeba3d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--unbrewed&lt;/code&gt;: List all files in the Homebrew prefix not installed by Homebrew.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c605c540f9bfb8627fc95c021df68a57853b6ecf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--union&lt;/code&gt;: Show the union of dependencies for multiple &lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt;, instead of the intersection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58d97664876e7b1475e6f5fc076965669e43c6db" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--url&lt;/code&gt;: Specify the &lt;em&gt;&lt;code&gt;URL&lt;/code&gt;&lt;/em&gt; for the new download. If a &lt;em&gt;&lt;code&gt;URL&lt;/code&gt;&lt;/em&gt; is specified, the &lt;em&gt;&lt;code&gt;SHA-256&lt;/code&gt;&lt;/em&gt; checksum of the new download should also be specified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d53a0ed34279aa9ed143eda20dda11dafb003b7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--version&lt;/code&gt;: Explicitly set the provided &lt;em&gt;&lt;code&gt;version&lt;/code&gt;&lt;/em&gt; of the package being installed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e09a338eae955d3338d55f7228d6f9480b6969e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--version&lt;/code&gt;: Extract the provided &lt;em&gt;&lt;code&gt;version&lt;/code&gt;&lt;/em&gt; of &lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt; instead of the most recent.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8337174e3981c399d4b4d5ef1bc5750c9f27aaf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--version&lt;/code&gt;: Use the provided &lt;em&gt;&lt;code&gt;version&lt;/code&gt;&lt;/em&gt; to override the value parsed from the URL or tag. Note that &lt;code&gt;--version=0&lt;/code&gt; can be used to delete an existing version override from a formula if it has become redundant.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56677f5f57efae71d0b1aa17106521ea51668519" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--versions&lt;/code&gt;: Show the version number for installed formulae, or only the specified formulae if &lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt; are given.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c21a874086d02085a68cd336db7cfd090cb50e0c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--warn-on-publish-failure&lt;/code&gt;: Do not exit if there&amp;rsquo;s a failure publishing bottles on Bintray.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efe2b2efa7d226b98d96a415bcec253f901f7d00" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--with-hostname&lt;/code&gt;: Include the hostname in the Gist.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a62fab559e84d93ae9c1451dd10f18f1ef89ced9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--write&lt;/code&gt;: When passed along with &lt;code&gt;--dry-run&lt;/code&gt;, perform a not-so-dry run by making the expected file modifications but not taking any Git actions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="445ed356aa31aadfadece5a9f86c29b215b6ecdd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--write&lt;/code&gt;: Write the changes to the formula file. A new commit will be generated unless &lt;code&gt;--no-commit&lt;/code&gt; is passed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09f0b635a318ca06973c7a67a784457b7e2b2fc9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-1&lt;/code&gt;, &lt;code&gt;--max-count&lt;/code&gt;: Output only one commit.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a17ecedfb19063767843418b82dd0da64c8d2d16" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-1&lt;/code&gt;: Force output to be one entry per line. This is the default when output is not to a terminal.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae8296f9597343fda3ae4dd44629d25a8be78536" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-D&lt;/code&gt;, &lt;code&gt;--audit-debug&lt;/code&gt;: Enable debugging and profiling of audit methods.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33482d20b2abed6803d6c733afda81d1b037004a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-d&lt;/code&gt;, &lt;code&gt;--debug&lt;/code&gt;: Display any debugging information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a14f7553e051a778fc458ffc6d697ab78bae4e0f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-d&lt;/code&gt;, &lt;code&gt;--description&lt;/code&gt;: Search just the descriptions for provided &lt;em&gt;&lt;code&gt;text&lt;/code&gt;&lt;/em&gt;. If &lt;em&gt;&lt;code&gt;text&lt;/code&gt;&lt;/em&gt; is flanked by slashes, it is interpreted as a regular expression.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="826c95fea779e4df4e4ae1b585d9938c953e1271" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-e&lt;/code&gt;: Execute the provided string argument as a script.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d53e3a4ce138e9ac1b0858c5ccb4f924e59253e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-f&lt;/code&gt;, &lt;code&gt;--force&lt;/code&gt;: Override warnings and enable potentially unsafe operations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="308a47f884d5e903e9d2dc3758fd0f217448765b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-g&lt;/code&gt;, &lt;code&gt;--git&lt;/code&gt;: Create a Git repository, useful for creating patches to the software.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b5b5ac4fdd72f0386eaac34e970856d051f6deb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-g&lt;/code&gt;, &lt;code&gt;--git&lt;/code&gt;: Initialise a Git repository in the unpacked source. This is useful for creating patches for the software.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd6e078f93b01d14a9f505147059237447cd4f34" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-i&lt;/code&gt;, &lt;code&gt;--interactive&lt;/code&gt;: Download and patch &lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt;, then open a shell. This allows the user to run &lt;code&gt;./configure --help&lt;/code&gt; and otherwise determine how to turn the software package into a Homebrew package.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ceace62fef536f441795f5d4dc49185f9d63a075" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-l&lt;/code&gt;: List in long format. If the output is to a terminal, a total sum for all the file sizes is output on a line before the long listing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d49f7b59ce48de18d533f1b58bdba3b6e0de63fb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-n&lt;/code&gt;, &lt;code&gt;--dry-run&lt;/code&gt;: List all files which would be linked or deleted by &lt;code&gt;brew link --overwrite&lt;/code&gt;, but will not actually link or delete any files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="649e6608ad1fc6bbc66ccf800a9947a7737d2d2b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-n&lt;/code&gt;, &lt;code&gt;--dry-run&lt;/code&gt;: List all files which would be unlinked, but will not actually unlink or delete any files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2eca4e13261d87ff50c069e5888e7d9a6acea5d1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-n&lt;/code&gt;, &lt;code&gt;--dry-run&lt;/code&gt;: Print what would be done rather than doing it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8683ce638d03b89a802762afb6a4b6a473974313" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-n&lt;/code&gt;, &lt;code&gt;--dry-run&lt;/code&gt;: Show what would be removed, but do not actually remove anything.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95f1d719fa95bf7d3d80ac49b76e101f3cbfa83c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-n&lt;/code&gt;, &lt;code&gt;--name&lt;/code&gt;: Search just the names for provided &lt;em&gt;&lt;code&gt;text&lt;/code&gt;&lt;/em&gt;. If &lt;em&gt;&lt;code&gt;text&lt;/code&gt;&lt;/em&gt; is flanked by slashes, it is interpreted as a regular expression.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e87108a6ef754a604f01836c647aff057807f3ad" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-n&lt;/code&gt;, &lt;code&gt;--new-issue&lt;/code&gt;: Automatically create a new issue in the appropriate GitHub repository as well as creating the Gist.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e22b690393e4e14c8d6393474bb0eb748aefa1b0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-n&lt;/code&gt;: Show dependencies in topological order.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f07d0647856b34292d9c6d6fee686b68c0e2551e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-p&lt;/code&gt;, &lt;code&gt;--patch&lt;/code&gt;: Also output patch from commit.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed8dcae157b1c2c6e0a62213df4de56352788ff2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-p&lt;/code&gt;, &lt;code&gt;--private&lt;/code&gt;: The Gist will be marked private and will not appear in listings but will be accessible with the link.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22d77e031aa9e9c8ea7cf441ac08a400a27c3897" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-q&lt;/code&gt;, &lt;code&gt;--quiet&lt;/code&gt;: Suppress any warnings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20f99c0e121da27d7fea24c45c8a3a5ee4deb280" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-q&lt;/code&gt;, &lt;code&gt;--quieter&lt;/code&gt;: Suppress any warnings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca08af26b90348c5e7b99d8d3d6d2f9e125bb097" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-r&lt;/code&gt;: Reverse the order of the sort to get the oldest entries first.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd17e9af782464b6544bc80c3f2d109b47daf0e6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-s&lt;/code&gt;, &lt;code&gt;--build-from-source&lt;/code&gt;: Compile &lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt; from source even if a bottle is available.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79cd2e54874da318466c8edda482787651bf3401" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-s&lt;/code&gt;, &lt;code&gt;--build-from-source&lt;/code&gt;: Compile the specified &lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt; from source even if a bottle is provided. Dependencies will still be installed from bottles if they are available.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b2a5520789607d9d0fed9382278f267ed7d10e5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-s&lt;/code&gt;, &lt;code&gt;--build-from-source&lt;/code&gt;: Download the source for rather than a bottle.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5cb726444c770eae6f0f54a1282d3287e7e9b83" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-s&lt;/code&gt;, &lt;code&gt;--build-from-source&lt;/code&gt;: Show the cache file used when building from source.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25b305c75a8d73e99a599a6473a4d5d2244dc571" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-s&lt;/code&gt;, &lt;code&gt;--search&lt;/code&gt;: Search both name and description for provided &lt;em&gt;&lt;code&gt;text&lt;/code&gt;&lt;/em&gt;. If &lt;em&gt;&lt;code&gt;text&lt;/code&gt;&lt;/em&gt; is flanked by slashes, it is interpreted as a regular expression.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b087fd69684a56028164d15c0272da38c254732d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-s&lt;/code&gt;: Scrub the cache, including downloads for even the latest versions. Note downloads for any installed formula or cask will still not be deleted. If you want to delete those too: &lt;code&gt;rm -rf &quot;$(brew --cache)&quot;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="525c3aaa5e9a3176a38c013f0374215e76ab1c5f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-t&lt;/code&gt;: Sort by time modified (most recently modified first).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce00e140981db66083dd4d72860de0f3e7de41f1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-v&lt;/code&gt;, &lt;code&gt;--verbose&lt;/code&gt;: Make some output more verbose.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a23301bdf81994ea22a4697d659f79ce484be102" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;/sw&lt;/code&gt; and &lt;code&gt;/opt/local&lt;/code&gt; because build scripts get confused when Homebrew is there instead of Fink or MacPorts, respectively.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd1a06e9be4458630afca6f256208f3a96f7006d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;/tmp&lt;/code&gt; subdirectories because Homebrew gets upset.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1e7d74c90847ecf5f07f4aab61984d37ad25148" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;/usr/local/bin&lt;/code&gt; is already in your &lt;code&gt;PATH&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9eb3edeedd6cf310104cdff6eda56f5d833bd5b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:build&lt;/code&gt; means that dependency is a build-time only dependency so it can be skipped when installing from a bottle or when listing missing dependencies using &lt;code&gt;brew missing&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="977e442d09c69a776fd58a139e147c4c03f53a5f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:optional&lt;/code&gt; generates an implicit &lt;code&gt;with-foo&lt;/code&gt; option for the formula. This means that, given &lt;code&gt;depends_on &quot;foo&quot; =&amp;gt; :optional&lt;/code&gt;, the user must pass &lt;code&gt;--with-foo&lt;/code&gt; in order to use the dependency.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37c07076d83b6854f22c1aa8b9f3716cc55a62fa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:recommended&lt;/code&gt; generates an implicit &lt;code&gt;without-foo&lt;/code&gt; option, meaning that the dependency is enabled by default and the user must pass &lt;code&gt;--without-foo&lt;/code&gt; to disable this dependency. The default description can be overridden using the normal option syntax (in this case, the option declaration must precede the dependency):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75b64d9519580cdaaba0a075c9883faeb240ac00" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:test&lt;/code&gt; means that dependency is only required when running &lt;code&gt;brew test&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfb72214f9d1c6ed08c7e7991636bebdadfcdafb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:using&lt;/code&gt; value</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d18428d9bbd40ffec5b23738b0a91840b0b0246a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;HOMEBREW_ARCH&lt;/code&gt;: Linux only: If set, Homebrew will pass the set value to type name to the compiler&amp;rsquo;s &lt;code&gt;-march&lt;/code&gt; option instead of using the default (&lt;code&gt;-march=native&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad1002d1876139b0d8009da3d346bb48afd9375e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;HOMEBREW_ARTIFACT_DOMAIN&lt;/code&gt;: If set, instructs Homebrew to prefix all download URLs, including those for bottles, with this variable. For example, &lt;code&gt;HOMEBREW_ARTIFACT_DOMAIN=http://localhost:8080&lt;/code&gt; will cause a formula with the URL &lt;code&gt;https://example.com/foo.tar.gz&lt;/code&gt; to instead download from &lt;code&gt;http://localhost:8080/example.com/foo.tar.gz&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="319faf259588c179d21013c30ada55151ce6e767" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;HOMEBREW_AUTO_UPDATE_SECS&lt;/code&gt;: If set, Homebrew will only check for autoupdates once per this seconds interval.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5db3c34c15aef48e9a868201ce88c4cc7204229" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;HOMEBREW_AWS_ACCESS_KEY_ID&lt;/code&gt;, &lt;code&gt;HOMEBREW_AWS_SECRET_ACCESS_KEY&lt;/code&gt;: When using the &lt;code&gt;S3&lt;/code&gt; download strategy, Homebrew will look in these variables for access credentials (see &lt;a href=&quot;https://docs.aws.amazon.com/cli/latest/userguide/cli-chap-getting-started.html#cli-environment&quot;&gt;https://docs.aws.amazon.com/cli/latest/userguide/cli-chap-getting-started.html#cli-environment&lt;/a&gt; to retrieve these access credentials from AWS). If they are not set, the &lt;code&gt;S3&lt;/code&gt; download strategy will download with a public (unsigned) URL.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="573b66e9c1c27da25cf594c47e00f7e33a42b74e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;HOMEBREW_BOTTLE_DOMAIN&lt;/code&gt;: By default, Homebrew uses &lt;code&gt;https://homebrew.bintray.com/&lt;/code&gt; as its download mirror for bottles. If set, instructs Homebrew to instead use the specified URL. For example, &lt;code&gt;HOMEBREW_BOTTLE_DOMAIN=http://localhost:8080&lt;/code&gt; will cause all bottles to download from the prefix &lt;code&gt;http://localhost:8080/&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b3deb5f4958577905cd84364833f93151794424" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;HOMEBREW_BROWSER&lt;/code&gt;: If set, Homebrew uses this setting as the browser when opening project homepages, instead of the OS default browser.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18b1d472d2b1ab36f733163110e1fabae012c6a2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;HOMEBREW_CACHE&lt;/code&gt;: If set, instructs Homebrew to use the specified directory as the download cache.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb218f83b3f7a8e8af9d3374860c19baae3832c4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;HOMEBREW_CURLRC&lt;/code&gt;: If set, Homebrew will not pass &lt;code&gt;-q&lt;/code&gt; when invoking &lt;code&gt;curl&lt;/code&gt;(1) (which disables the use of &lt;code&gt;curlrc&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44e2ae73a76dc57ebd82e768100d60e882ed50ff" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;HOMEBREW_CURL_RETRIES&lt;/code&gt;: If set, Homebrew will pass the given retry count to &lt;code&gt;--retry&lt;/code&gt; when invoking &lt;code&gt;curl&lt;/code&gt;(1).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d883f5c1797b46380d5b6c261e341748770d0080" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;HOMEBREW_CURL_VERBOSE&lt;/code&gt;: If set, Homebrew will pass &lt;code&gt;--verbose&lt;/code&gt; when invoking &lt;code&gt;curl&lt;/code&gt;(1).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4af6ffcbf27ad31518fb1032475e5d09757f1072" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;HOMEBREW_DEBUG&lt;/code&gt;: If set, any commands that can emit debugging information will do so.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="701743d87fdfaf00013184f11f595d3889d6f698" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;HOMEBREW_DEVELOPER&lt;/code&gt;: If set, Homebrew will tweak behaviour to be more relevant for Homebrew developers (active or budding), e.g. turning warnings into errors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc429ebe3194e501aa2816fef87a0bf7ac05b5cb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;HOMEBREW_DISPLAY&lt;/code&gt;: If set, Homebrew will use this X11 display when opening a page in a browser, for example with &lt;code&gt;brew home&lt;/code&gt;. Primarily useful on Linux.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="701a028fa2ed815c8bf15d526bbadb2ad5053cf4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;HOMEBREW_DISPLAY_INSTALL_TIMES&lt;/code&gt;: If set, Homebrew will print install times for each formula at the end of the run.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36eaf162ac259e7eed28541648fce3734aa35325" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;HOMEBREW_EDITOR&lt;/code&gt;: If set, Homebrew will use this editor when editing a single formula, or several formulae in the same directory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4a62bf1c2a0ac81e40e9d538e30b2209035a3f2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;HOMEBREW_FORCE_BREWED_CURL&lt;/code&gt;: If set, Homebrew will always use a Homebrew-installed &lt;code&gt;curl&lt;/code&gt; rather than the system version. Automatically set if the system version of &lt;code&gt;curl&lt;/code&gt; is too old.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2fa359ae45406abf4e3420d5ceab7bd5f7bc1337" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;HOMEBREW_FORCE_BREWED_GIT&lt;/code&gt;: If set, Homebrew will always use a Homebrew-installed &lt;code&gt;git&lt;/code&gt; rather than the system version. Automatically set if the system version of &lt;code&gt;git&lt;/code&gt; is too old.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fab53abfaaae2935771604fc4f354a3341eb743c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;HOMEBREW_FORCE_VENDOR_RUBY&lt;/code&gt;: If set, Homebrew will always use its vendored, relocatable Ruby version even if the system version of Ruby is new enough.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c82217f7998b4d7c0c89f4c0abe88ac57a00e1e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;HOMEBREW_GITHUB_API_TOKEN&lt;/code&gt;: A personal access token for the GitHub API, used by Homebrew for features such as &lt;code&gt;brew search&lt;/code&gt;. You can create one at &lt;a href=&quot;https://github.com/settings/tokens&quot;&gt;https://github.com/settings/tokens&lt;/a&gt;. If set, GitHub will allow you a greater number of API requests. For more information, see: &lt;a href=&quot;https://developer.github.com/v3/#rate-limiting&quot;&gt;https://developer.github.com/v3/#rate-limiting&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab704bbbcaaef79d6f0643b8aceac6a141f10680" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;HOMEBREW_INSTALL_BADGE&lt;/code&gt;: Text printed before the installation summary of each successful build.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48b6d96262a0c88e259cf46a4c3f97ac52af99e9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;HOMEBREW_LOGS&lt;/code&gt;: If set, Homebrew will use the specified directory to store log files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18e0f867691e9c5a1bafcb72a01ee11b8ce16612" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;HOMEBREW_MAKE_JOBS&lt;/code&gt;: If set, instructs Homebrew to use the value of &lt;code&gt;HOMEBREW_MAKE_JOBS&lt;/code&gt; as the number of parallel jobs to run when building with &lt;code&gt;make&lt;/code&gt;(1).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbff16c2c6f78b71d4785c32a2f4e077243b6f8a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;HOMEBREW_NO_ANALYTICS&lt;/code&gt;: If set, Homebrew will not send analytics. See: &lt;a href=&quot;analytics&quot;&gt;https://docs.brew.sh/Analytics&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8549c296a15db176be3a008802faa4d95e8198e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;HOMEBREW_NO_AUTO_UPDATE&lt;/code&gt;: If set, Homebrew will not auto-update before running &lt;code&gt;brew install&lt;/code&gt;, &lt;code&gt;brew upgrade&lt;/code&gt; or &lt;code&gt;brew tap&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb1c64424a5dc906d73106e23452b7fb6a7c3be1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;HOMEBREW_NO_BOTTLE_SOURCE_FALLBACK&lt;/code&gt;: If set, Homebrew will fail on the failure of installation from a bottle rather than falling back to building from source.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10671ea4d3e4e2b580e0d28470e22df4473fe85a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;HOMEBREW_NO_COLOR&lt;/code&gt;: If set, Homebrew will not print text with colour added.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14dca924c97abbbc75f42f4c7684b6b5ee911608" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;HOMEBREW_NO_EMOJI&lt;/code&gt;: If set, Homebrew will not print the &lt;code&gt;HOMEBREW_INSTALL_BADGE&lt;/code&gt; on a successful build.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b1121a1c3ad53785556db502e36747ae668324e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;HOMEBREW_NO_GITHUB_API&lt;/code&gt;: If set, Homebrew will not use the GitHub API, e.g. for searches or fetching relevant issues on a failed install.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04c5a9e7236cdcec5840967888a217177a466623" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;HOMEBREW_NO_INSECURE_REDIRECT&lt;/code&gt;: If set, Homebrew will not permit redirects from secure HTTPS to insecure HTTP.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c3a6d2c2bdb9ac92f386d72803c9e75d912aecf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;HOMEBREW_NO_INSTALL_CLEANUP&lt;/code&gt;: If set, &lt;code&gt;brew install&lt;/code&gt;, &lt;code&gt;brew upgrade&lt;/code&gt; and &lt;code&gt;brew reinstall&lt;/code&gt; will never automatically cleanup the installed/upgraded/reinstalled formulae or all formulae every 30 days.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8233764bbaff8ef72827a0bb45972d8fba554597" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;HOMEBREW_PREFIX&lt;/code&gt;, &lt;code&gt;HOMEBREW_CELLAR&lt;/code&gt; and &lt;code&gt;HOMEBREW_REPOSITORY&lt;/code&gt; are also exported to save multiple queries of those variables.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a19a0c9211708f18de6273133faafcf031374693" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;HOMEBREW_PRY&lt;/code&gt;: If set, Homebrew will use Pry for the &lt;code&gt;brew irb&lt;/code&gt; command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b89d3805708b40ca3a342d6fdefb7f5c17952ba" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;HOMEBREW_SVN&lt;/code&gt;: When exporting from Subversion, Homebrew will use &lt;code&gt;HOMEBREW_SVN&lt;/code&gt; if set, a Homebrew-built Subversion if installed, or the system-provided binary.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="462a560ee7bcda4819814be8055c0d7f75c40954" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;HOMEBREW_TEMP&lt;/code&gt;: If set, instructs Homebrew to use &lt;code&gt;HOMEBREW_TEMP&lt;/code&gt; as the temporary directory for building packages. This may be needed if your system temp directory and Homebrew prefix are on different volumes, as macOS has trouble moving symlinks across volumes when the target does not yet exist.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd626c87ac55a93802081b72df3ccf2d0c81e142" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;HOMEBREW_UPDATE_TO_TAG&lt;/code&gt;: If set, instructs Homebrew to always use the latest stable tag (even if developer commands have been run).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bea46b7823c20cbfc65f51eb2fc15d91d30b25ee" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;HOMEBREW_VERBOSE&lt;/code&gt;: If set, Homebrew always assumes &lt;code&gt;--verbose&lt;/code&gt; when running commands.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57dc7405ecfa0c576cabbc3e3243779865a607d0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PATH&lt;/code&gt; modification</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eded9e2e324097db5035edd1f941f1a897c0f4d3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;all_proxy&lt;/code&gt;: Sets the SOCKS5 proxy to be used by &lt;code&gt;curl&lt;/code&gt;, &lt;code&gt;git&lt;/code&gt; and &lt;code&gt;svn&lt;/code&gt; when downloading through Homebrew.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1374d5c70f8140a1b7e965d23e4751b04dc70b89" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;analytics&lt;/code&gt; [&lt;code&gt;on&lt;/code&gt;|&lt;code&gt;off&lt;/code&gt;|&lt;code&gt;state&lt;/code&gt;|&lt;code&gt;regenerate-uuid&lt;/code&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5be88ab8b82d28edac672b2b2a40894f5ce9743c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;audit&lt;/code&gt; [&lt;em&gt;&lt;code&gt;options&lt;/code&gt;&lt;/em&gt;] &lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66c07c670562cb48ecca406637fa38453e93aa67" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;before&lt;/code&gt; and &lt;code&gt;after&lt;/code&gt; can be strings or regular expressions. You should use the block form if you need to make multiple replacements in a file:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26f19d0171fa85fe5af6507f1b4d537c32e42820" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;bottle&lt;/code&gt; [&lt;em&gt;&lt;code&gt;options&lt;/code&gt;&lt;/em&gt;] &lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00fd9c68c34acf05f77506f907c50545a94c7408" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;brew --cache -s erlang&lt;/code&gt; will print the correct name of the cached download. This means instead of manually renaming a formula, you can run &lt;code&gt;mv the_tarball $(brew --cache -s &amp;lt;formula&amp;gt;)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22837c88c4104a8cd800b4a85b077fcd40a5405a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;brew edit &amp;lt;formula&amp;gt;&lt;/code&gt; and edit the formula. Currently there is no other way to do this.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d7fe8fdcaa756f9b889d67bd4bbe3a546020c5a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;brew info&lt;/code&gt; outputs JSON-formatted information about formulae. This JSON can then be parsed using your tools of choice. See more details in &lt;code&gt;brew info --help&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="feaf188087cc8da37aa54cf773e49daeafb5098e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;brew link --force&lt;/code&gt; creates a warning in &lt;code&gt;brew doctor&lt;/code&gt; to let both you and maintainers know that a link exists that could be causing issues. If you&amp;rsquo;ve linked something and there&amp;rsquo;s no problems at all? Feel free to ignore the &lt;code&gt;brew doctor&lt;/code&gt; error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b18ca3e90fea6d574342714e677fca8cd6a94b0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;brew tap &amp;lt;user/repo&amp;gt; &amp;lt;URL&amp;gt;&lt;/code&gt; makes a shallow clone of the repository at URL. Unlike the one-argument version, URL is not assumed to be GitHub, and it doesn&amp;rsquo;t have to be HTTP. Any location and any protocol that Git can handle is fine.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c00d8fdcba790c154a3f9909f7c4fbbbe921a4c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;brew tap &amp;lt;user/repo&amp;gt;&lt;/code&gt; makes a shallow clone of the repository at https://github.com/user/repo. After that, &lt;code&gt;brew&lt;/code&gt; will be able to work on those formulae as if they were in Homebrew&amp;rsquo;s canonical repository. You can install and uninstall them with &lt;code&gt;brew [un]install&lt;/code&gt;, and the formulae are automatically updated when you run &lt;code&gt;brew update&lt;/code&gt;. (See below for details about how &lt;code&gt;brew tap&lt;/code&gt; handles the names of repositories.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dba230878758f40d235850947c1cc7610980a3ee" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;brew tap --repair&lt;/code&gt; migrates tapped formulae from a symlink-based to directory-based structure. (This should only need to be run once.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86520e42886539a89f3756612d23390ff52d4c38" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;brew tap&lt;/code&gt; adds more repositories to the list of formulae that &lt;code&gt;brew&lt;/code&gt; tracks, updates, and installs from. By default, &lt;code&gt;tap&lt;/code&gt; assumes that the repositories come from GitHub, but the command isn&amp;rsquo;t limited to any one location.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14db3b4446d06f9430233e89f10d739d3cad5d87" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;brew tap&lt;/code&gt; without arguments lists the currently tapped repositories. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db51fc96ca4eccfbfc877b350abd2db7bb19e8d4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;brew test-bot&lt;/code&gt; is the name for the automated review and testing system funded by &lt;a href=&quot;https://www.kickstarter.com/projects/homebrew/brew-test-bot&quot;&gt;our Kickstarter in 2013&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76677622f7d392beb00924a37852c578647aa070" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;brew untap user/repo [user/repo user/repo ...]&lt;/code&gt; removes the given taps. The repositories are deleted and &lt;code&gt;brew&lt;/code&gt; will no longer be aware of their formulae. &lt;code&gt;brew untap&lt;/code&gt; can handle multiple removals at once.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d27d61424fc7bf90b2d58738a1c6623fe2c5dc23" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;brew update&lt;/code&gt; complains about untracked working tree files</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc7d529dc53403687e7ae1aeff87b444e411c0a0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;brew upgrade&lt;/code&gt; errors out</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b5c83a33e61a3583c2364d1b30b4047ea7b6622" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;brew-cask&lt;/code&gt;(1), &lt;code&gt;git&lt;/code&gt;(1), &lt;code&gt;git-log&lt;/code&gt;(1)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66799bfc3ce7e85b6157feca4489c248c966c6e5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;brew&lt;/code&gt; Shell Completion</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11ea1005499ec68373fdf3713d02b8b1de0279da" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;brew&lt;/code&gt; complains about absence of &amp;ldquo;Command Line Tools&amp;rdquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6316855115b70c8364d2b41cd47278f7d1fae7f8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;brew&lt;/code&gt; man-page (command documentation)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e65cb0d10e6a828b657d7353ad5a8a4ef53da390" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;brew&lt;/code&gt; provides commands for getting common types of information out of the system. &lt;code&gt;brew list&lt;/code&gt; shows installed formulae. &lt;code&gt;brew deps foo&lt;/code&gt; shows the dependencies that &lt;code&gt;foo&lt;/code&gt; needs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a7dd90acb4ceb98f9965bfdbfc70ce3828dcbfc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;brew&lt;/code&gt;&lt;code&gt;--version&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b4a90267105404f29abdc2723fd52b92c4fcddc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;brew&lt;/code&gt;&lt;em&gt;&lt;code&gt;command&lt;/code&gt;&lt;/em&gt; [&lt;code&gt;--verbose&lt;/code&gt;|&lt;code&gt;-v&lt;/code&gt;] [&lt;em&gt;&lt;code&gt;options&lt;/code&gt;&lt;/em&gt;] [&lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt;] &amp;hellip;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2011121bba02f224b841e600c8bc534b6d6aebc2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;build&lt;/code&gt; takes a Fixnum (an integer; you can find this number in your &lt;code&gt;brew --config&lt;/code&gt; output). &lt;code&gt;cause&lt;/code&gt; takes a String, and the use of heredocs is encouraged to improve readability and allow for more comprehensive documentation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fa8e168a9933d5ebce67fcd5ad5ece3120f901f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;bump-formula-pr&lt;/code&gt; [&lt;em&gt;&lt;code&gt;options&lt;/code&gt;&lt;/em&gt;] [&lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9f7d0e93494ff39a2895c8b5691abf22f10ca7a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;bump-revision&lt;/code&gt; [&lt;em&gt;&lt;code&gt;options&lt;/code&gt;&lt;/em&gt;] [&lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99688551e1afc2c319416bd236aaa1bb57b71ddc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;bundle&lt;/code&gt;&lt;em&gt;&lt;code&gt;subcommand&lt;/code&gt;&lt;/em&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efd6b74610ef8977ad2c9140a627549f47a70e6d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cask&lt;/code&gt;&lt;em&gt;&lt;code&gt;subcommand&lt;/code&gt;&lt;/em&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="648ba63044da2cad5abe71c36647535a7a88bf22" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cat&lt;/code&gt;&lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16fdb4f47a3d4420234cf3a91cae8f9cbeb989fa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cd&lt;/code&gt; into the directory containing the Python bindings</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99c450d98f4258767307ce223b865edaec7e6d8d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cleanup&lt;/code&gt; [&lt;em&gt;&lt;code&gt;options&lt;/code&gt;&lt;/em&gt;] [&lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt;|&lt;em&gt;&lt;code&gt;cask&lt;/code&gt;&lt;/em&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9f48d85710536fcc94e623515281b349c4b43e6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;command&lt;/code&gt;&lt;em&gt;&lt;code&gt;cmd&lt;/code&gt;&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b264e647b618a9e2eb78ceeb3cea410d61e28790" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;commands&lt;/code&gt; [&lt;em&gt;&lt;code&gt;options&lt;/code&gt;&lt;/em&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c918ee1846b3a132aa2b7e50a3a1fca81ac32b3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;create&lt;/code&gt; [&lt;em&gt;&lt;code&gt;options&lt;/code&gt;&lt;/em&gt;] &lt;em&gt;&lt;code&gt;URL&lt;/code&gt;&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="711c15422a4525f3e106c864a586af4379ffd020" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;deps&lt;/code&gt; [&lt;em&gt;&lt;code&gt;options&lt;/code&gt;&lt;/em&gt;] &lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47c85e9c7a9446126b157063d8b0f9ab22befd3d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;desc&lt;/code&gt; [&lt;em&gt;&lt;code&gt;options&lt;/code&gt;&lt;/em&gt;] (&lt;em&gt;&lt;code&gt;text&lt;/code&gt;&lt;/em&gt;|&lt;code&gt;/&lt;/code&gt;&lt;em&gt;&lt;code&gt;text&lt;/code&gt;&lt;/em&gt;&lt;code&gt;/&lt;/code&gt;|&lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2451eccd633968fa3b953be1900b6385fffa1120" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;diy&lt;/code&gt; [&lt;em&gt;&lt;code&gt;options&lt;/code&gt;&lt;/em&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="942dbb1d5f1f1e282d81aad13c09e00e20071074" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;doctor&lt;/code&gt; [&lt;em&gt;&lt;code&gt;options&lt;/code&gt;&lt;/em&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23484343ed3c5147b4ee10087046ad43170b25c1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;easy_install&lt;/code&gt; does a few things that we need to avoid:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07320ddd65aad484e07378ed71996c5e45be08a7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;edit&lt;/code&gt; [&lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbc8c6e618d047a7359af790d86a6cfcfab3e6f3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;extract&lt;/code&gt; [&lt;em&gt;&lt;code&gt;options&lt;/code&gt;&lt;/em&gt;] &lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt;&lt;em&gt;&lt;code&gt;tap&lt;/code&gt;&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd01222a2319ceb74e07dc1d98707e0aecb3b456" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fetch&lt;/code&gt; [&lt;em&gt;&lt;code&gt;options&lt;/code&gt;&lt;/em&gt;] &lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ddbe7eb83b8a7bf63c103496e13a85a8e38297b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;foo-bar.rb&lt;/code&gt; =&amp;gt; &lt;code&gt;FooBar&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c813637f2feedc4395044a402033fa82e245f71" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;foobar.rb&lt;/code&gt; =&amp;gt; &lt;code&gt;Foobar&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="798527b0081de70c9eb68cd6dd2d621da12ae6a2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;formula&lt;/code&gt;&lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf53006e9f60cb8adab341fd34a4bb718e30c615" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ftp_proxy&lt;/code&gt;: Sets the FTP proxy to be used by &lt;code&gt;curl&lt;/code&gt;, &lt;code&gt;git&lt;/code&gt; and &lt;code&gt;svn&lt;/code&gt; when downloading through Homebrew.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13d71da62cfc6934cc9f750050b9b31f2156aff6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;gist-logs&lt;/code&gt; [&lt;em&gt;&lt;code&gt;options&lt;/code&gt;&lt;/em&gt;] &lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="766ad60832ccf1c8d1e06bce7e053a0f589d2773" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;home&lt;/code&gt; [&lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d6f36f569c623f3522384e7fad2d511e5596008" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;http_proxy&lt;/code&gt;: Sets the HTTP proxy to be used by &lt;code&gt;curl&lt;/code&gt;, &lt;code&gt;git&lt;/code&gt; and &lt;code&gt;svn&lt;/code&gt; when downloading through Homebrew.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bca7fcd3ef2b5c496015a5a1dbb5a4cd601af0e5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;https_proxy&lt;/code&gt;: Sets the HTTPS proxy to be used by &lt;code&gt;curl&lt;/code&gt;, &lt;code&gt;git&lt;/code&gt; and &lt;code&gt;svn&lt;/code&gt; when downloading through Homebrew.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9be91785fe3622f5637f46fa0b733858d2603950" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;info&lt;/code&gt; [&lt;em&gt;&lt;code&gt;options&lt;/code&gt;&lt;/em&gt;] [&lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10d8c44ae5bebd2a57b0eea39ab6a76f6164494b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;install&lt;/code&gt; [&lt;em&gt;&lt;code&gt;options&lt;/code&gt;&lt;/em&gt;] &lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="833741105804c2f02d50a4e03eda7c0f6e577af7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;install&lt;/code&gt;&lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be8144b1b7fb9535cc9dd2eae6435cf5b9b54d09" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;irb&lt;/code&gt; [&lt;em&gt;&lt;code&gt;options&lt;/code&gt;&lt;/em&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca5124a68038f50e8da92341c64492a768a029b3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;launchctl&lt;/code&gt; refuses to load launchd plist files</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="434d9193b8792e72860bacee4419058b7f56d9dc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;linkage&lt;/code&gt; [&lt;em&gt;&lt;code&gt;options&lt;/code&gt;&lt;/em&gt;] [&lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70b9c05cef4e2bbd8957fe1336a27265f9d3b8f4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;list&lt;/code&gt;, &lt;code&gt;ls&lt;/code&gt; [&lt;em&gt;&lt;code&gt;options&lt;/code&gt;&lt;/em&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="509fb12504bf5d6aeb1355c003eb87bccd1f5360" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;list&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45d9d164e213bdec584891f56aff60d1aa0dbe1f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ln&lt;/code&gt;, &lt;code&gt;link&lt;/code&gt; [&lt;em&gt;&lt;code&gt;options&lt;/code&gt;&lt;/em&gt;] &lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50d78e4bbd3b82041c5177de6f8559302354ce73" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;log&lt;/code&gt; [&lt;em&gt;&lt;code&gt;options&lt;/code&gt;&lt;/em&gt;] &lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92f2c298b2222725edc2095a9608b28c67bad474" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;man&lt;/code&gt; [&lt;em&gt;&lt;code&gt;options&lt;/code&gt;&lt;/em&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e59cd3eaf4bcc1f7558d5d4a9ed5e695521d19dc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;migrate&lt;/code&gt; [&lt;em&gt;&lt;code&gt;options&lt;/code&gt;&lt;/em&gt;] &lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="791628f241ed02458fa7c42a48135081b0af1b9e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;missing&lt;/code&gt; [&lt;em&gt;&lt;code&gt;options&lt;/code&gt;&lt;/em&gt;] [&lt;em&gt;&lt;code&gt;formule&lt;/code&gt;&lt;/em&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf56a2b79e0ef5acba745ff3f8ed1b50ee05fb6a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;missing&lt;/code&gt; exits with a non-zero status if any formulae are missing dependencies.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1313151d41ad2d66adcef134cca4bedc9fa6aeb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;no_proxy&lt;/code&gt;: Sets the comma-separated list of hostnames and domain names that should be excluded from proxying by &lt;code&gt;curl&lt;/code&gt;, &lt;code&gt;git&lt;/code&gt; and &lt;code&gt;svn&lt;/code&gt; when downloading through Homebrew.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39ecbe2a6391d7c1f2da7cc52513c040e201641f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;odie&lt;/code&gt; for error messages and immediately exiting</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83a15fbc6e3058741d65f16f1da33f0db03b3212" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ohai&lt;/code&gt; for general info</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e2de1c8d40f506e501e58149cb0a816d567a7ec" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;opoo&lt;/code&gt; for warning messages</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f29d796343460bf98bceb156364457dfba4b859" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;options&lt;/code&gt; [&lt;em&gt;&lt;code&gt;options&lt;/code&gt;&lt;/em&gt;] &lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6fcded0be0ca9225e0f5eefdf92a4cd7577ad2ba" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;outdated&lt;/code&gt; [&lt;em&gt;&lt;code&gt;options&lt;/code&gt;&lt;/em&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01a1b37a3ebd907db53d2d548b94d75477019a78" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pin&lt;/code&gt;&lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33b0f228cd13aa1de2b490fb69db9209efbb90dd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pip3&lt;/code&gt; points to Homebrew&amp;rsquo;s Python 3.x&amp;rsquo;s pip (if installed)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25509961f92a1bb93e4012e01070e60a50e7bff6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pip&lt;/code&gt; and &lt;code&gt;pip2&lt;/code&gt; point to Homebrew&amp;rsquo;s Python 2.7.x&amp;rsquo;s pip (if installed)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c41555aa4d7d5f77873688691d58eb66d5d38018" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pip&lt;/code&gt; vs. &lt;code&gt;setup.py&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5db9ef77df4b1460a2ddea3d31c58ad22242264d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pkg-config&lt;/code&gt; detection</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89e5cf95683e411a32720f74dc706788e38c4fba" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;postinstall&lt;/code&gt;&lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d9aba8d941b877d53526e7d63cc904c98deee42" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;prof&lt;/code&gt;&lt;em&gt;&lt;code&gt;command&lt;/code&gt;&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0e007b13a4470191aa54e93c5a0b40b25f287a6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pull&lt;/code&gt; [&lt;em&gt;&lt;code&gt;options&lt;/code&gt;&lt;/em&gt;] &lt;em&gt;&lt;code&gt;patch&lt;/code&gt;&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afe9eaa80ae6c2b9925df1daba8c276c7064e98c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;python2&lt;/code&gt; points to Homebrew&amp;rsquo;s Python 2.7.x (if installed)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48415ad97ce8429324fa7281cc3d39fa07912441" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;python3&lt;/code&gt; points to Homebrew&amp;rsquo;s Python 3.x (if installed)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c34127bacd5ee23ae2a48d9820ab092ed46008ea" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;python&lt;/code&gt; points to Homebrew&amp;rsquo;s Python 2.7.x (if installed) otherwise the macOS system Python. Check out &lt;code&gt;brew info python&lt;/code&gt; if you wish to add Homebrew&amp;rsquo;s 3.x &lt;code&gt;python&lt;/code&gt; to your &lt;code&gt;PATH&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="594b6a3938362be5024ac6deda5f14b8a96d1f40" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;readall&lt;/code&gt; [&lt;em&gt;&lt;code&gt;options&lt;/code&gt;&lt;/em&gt;] [&lt;em&gt;&lt;code&gt;tap&lt;/code&gt;&lt;/em&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53e375e62f63472c0cf7919ec8a1543ea42bfcc5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;reinstall&lt;/code&gt; [&lt;em&gt;&lt;code&gt;options&lt;/code&gt;&lt;/em&gt;] &lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0288ed2823eb8ac28aab2c18f7adb370e4d83dd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;release-notes&lt;/code&gt; [&lt;em&gt;&lt;code&gt;options&lt;/code&gt;&lt;/em&gt;] [&lt;em&gt;&lt;code&gt;previous_tag&lt;/code&gt;&lt;/em&gt;] [&lt;em&gt;&lt;code&gt;end_ref&lt;/code&gt;&lt;/em&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b689879141960de0879580f4fdf71768a68d164" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ruby&lt;/code&gt; [&lt;code&gt;-e&lt;/code&gt;]:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c90225c81adf834ce7f1e80b5936a9e8fe23e36e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;search&lt;/code&gt; (&lt;em&gt;&lt;code&gt;text&lt;/code&gt;&lt;/em&gt;|&lt;code&gt;/&lt;/code&gt;&lt;em&gt;&lt;code&gt;text&lt;/code&gt;&lt;/em&gt;&lt;code&gt;/&lt;/code&gt;):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13fa1d96d0ab1df9f6ac6e32bc762ce7c88380e6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;search&lt;/code&gt; [&lt;em&gt;&lt;code&gt;options&lt;/code&gt;&lt;/em&gt;] [&lt;em&gt;&lt;code&gt;text&lt;/code&gt;&lt;/em&gt;|&lt;code&gt;/&lt;/code&gt;&lt;em&gt;&lt;code&gt;text&lt;/code&gt;&lt;/em&gt;&lt;code&gt;/&lt;/code&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5ac6a31edf25855e2e166597abc3fe59f8d9cf9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;services&lt;/code&gt;&lt;em&gt;&lt;code&gt;subcommand&lt;/code&gt;&lt;/em&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86ea3e6944d397c63257ab4086e4d52f239d60f4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;setup.py&lt;/code&gt; accepts a slightly bewildering array of installation options. The correct switch for Homebrew is &lt;code&gt;--prefix&lt;/code&gt;, which automatically sets the &lt;code&gt;--install-foo&lt;/code&gt; family of options using sane POSIX-y values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ee47783c398459ff9731e0de268157231f32429" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;sh&lt;/code&gt; [&lt;em&gt;&lt;code&gt;options&lt;/code&gt;&lt;/em&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="466d8da28592a0f2a30b4df9f51129948be45e0b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;site-packages&lt;/code&gt; and the &lt;code&gt;PYTHONPATH&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dff306bac1936dde4c39c456661289d45a06a632" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;style&lt;/code&gt; [&lt;em&gt;&lt;code&gt;options&lt;/code&gt;&lt;/em&gt;] [&lt;em&gt;&lt;code&gt;file&lt;/code&gt;&lt;/em&gt;|&lt;em&gt;&lt;code&gt;tap&lt;/code&gt;&lt;/em&gt;|&lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00c71bdc510ce82557a50427c1ad04d46a319e0c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;superenv&lt;/code&gt; is our &amp;ldquo;super environment&amp;rdquo; that isolates builds by removing &lt;code&gt;/usr/local/bin&lt;/code&gt; and all user &lt;code&gt;PATH&lt;/code&gt;s that are not essential for the build. It does this because user &lt;code&gt;PATH&lt;/code&gt;s are often full of stuff that breaks builds. &lt;code&gt;superenv&lt;/code&gt; also removes bad flags from the commands passed to &lt;code&gt;clang&lt;/code&gt;/&lt;code&gt;gcc&lt;/code&gt; and injects others (for example all &lt;a href=&quot;https://rubydoc.brew.sh/Formula#keg_only-class_method&quot;&gt;&lt;code&gt;keg_only&lt;/code&gt;&lt;/a&gt; dependencies are added to the &lt;code&gt;-I&lt;/code&gt; and &lt;code&gt;-L&lt;/code&gt; flags).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3f49fe6b29ebf5d75697505e8d42b41b36b12dc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;switch&lt;/code&gt;&lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt;&lt;em&gt;&lt;code&gt;version&lt;/code&gt;&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf06f1504ea588a53b19e2fd4e6f69610acbade1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;tap-info&lt;/code&gt; [&lt;em&gt;&lt;code&gt;options&lt;/code&gt;&lt;/em&gt;] [&lt;em&gt;&lt;code&gt;tap&lt;/code&gt;&lt;/em&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="403ce197ee95e0a2a9a6123d822490795fa0009d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;tap-new&lt;/code&gt;&lt;em&gt;&lt;code&gt;user&lt;/code&gt;&lt;/em&gt;&lt;code&gt;/&lt;/code&gt;&lt;em&gt;&lt;code&gt;repo&lt;/code&gt;&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad3be9e54a8b79195f6882b9d77a50857ceff45e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;tap&lt;/code&gt; [&lt;em&gt;&lt;code&gt;options&lt;/code&gt;&lt;/em&gt;] &lt;em&gt;&lt;code&gt;user&lt;/code&gt;&lt;/em&gt;&lt;code&gt;/&lt;/code&gt;&lt;em&gt;&lt;code&gt;repo&lt;/code&gt;&lt;/em&gt; [&lt;em&gt;&lt;code&gt;URL&lt;/code&gt;&lt;/em&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f5f8dd97425fc525a1186676c19d1fb03a2d6b2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;test&lt;/code&gt; [&lt;em&gt;&lt;code&gt;options&lt;/code&gt;&lt;/em&gt;] &lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ba974b76efd46245a1145ef2c547d4c9fc9b91c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;tests&lt;/code&gt; [&lt;em&gt;&lt;code&gt;options&lt;/code&gt;&lt;/em&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e60f73f8bfccfff9366ff591868a283502429f5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;uninstall&lt;/code&gt;, &lt;code&gt;rm&lt;/code&gt;, &lt;code&gt;remove&lt;/code&gt; [&lt;em&gt;&lt;code&gt;options&lt;/code&gt;&lt;/em&gt;] &lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ac7045df89d57fd1654d56581858a9bdffc5926" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;uninstall&lt;/code&gt;&lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c854ac5f1f8d942a92a1c706f8405228a8f9d7c4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unlink&lt;/code&gt; [&lt;em&gt;&lt;code&gt;options&lt;/code&gt;&lt;/em&gt;] &lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87870a036e3b3df108c958edbdeac0706720bdd9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unpack&lt;/code&gt; [&lt;em&gt;&lt;code&gt;options&lt;/code&gt;&lt;/em&gt;] &lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7ca1d3e716f7b1b543a1b44720e96bbcb164209" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unpin&lt;/code&gt;&lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cdb513c06bf98be6d6ca02d60e011bb32a189985" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;untap&lt;/code&gt;&lt;em&gt;&lt;code&gt;tap&lt;/code&gt;&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f3c7f270c7c0284b192971ee3d0a2e58ff9daf3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;update-reset&lt;/code&gt; [&lt;em&gt;&lt;code&gt;repository&lt;/code&gt;&lt;/em&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab742b01db638fa553e04c7b7ac61662cc192485" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;update-test&lt;/code&gt; [&lt;em&gt;&lt;code&gt;options&lt;/code&gt;&lt;/em&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9d4123331b97cd9f9c3fdc2d398500201b1c110" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;update&lt;/code&gt; [&lt;em&gt;&lt;code&gt;options&lt;/code&gt;&lt;/em&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77e3074a4d2dca9b4e668a1654e0f148829757a3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;upgrade&lt;/code&gt; [&lt;em&gt;&lt;code&gt;options&lt;/code&gt;&lt;/em&gt;] &lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83d642759a3a02efa36ee4f34f8a634575cd32e3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;uses&lt;/code&gt; [&lt;em&gt;&lt;code&gt;options&lt;/code&gt;&lt;/em&gt;] &lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e52ac0357f673a490ca4369c18ceb6be1c7f1fa8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;zsh&lt;/code&gt;, &lt;code&gt;bash&lt;/code&gt; and &lt;code&gt;fish&lt;/code&gt; are currently supported. (Homebrew provides &lt;code&gt;brew&lt;/code&gt; completions for &lt;code&gt;zsh&lt;/code&gt; and &lt;code&gt;bash&lt;/code&gt;; &lt;code&gt;fish&lt;/code&gt; provides its own &lt;code&gt;brew&lt;/code&gt; completions.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="053e3e13387d257fdf35d50cd45c08f808e4c2ae" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt; is usually the name of the formula to install, but it can be specified in several different ways.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="719a4b3c0a1d0e8a8efc27e0aa4f795582fd73d7" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Always justify a &lt;a href=&quot;https://rubydoc.brew.sh/Formula#patch-class_method&quot;&gt;&lt;code&gt;patch&lt;/code&gt;&lt;/a&gt; with a code comment!&lt;/em&gt; Otherwise, nobody will know when it is safe to remove the patch, or safe to leave it in when updating the formula. The comment should include a link to the relevant upstream issue(s).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1468b960bc9911786f25a75c9047f771ab64ce96" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Default:&lt;/em&gt; the beer emoji.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b3e6d108f8ded71757fc8b4181660fe811bece6" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Default:&lt;/em&gt; the number of available CPU cores.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02c929bb7f4b2875e56689f98b1db2f29c86930d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Default:&lt;/em&gt; the value of the user&amp;rsquo;s &lt;code&gt;DISPLAY&lt;/code&gt; environment variable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="007a3c130cb430b29b057a224e83e21bd0543496" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Default:&lt;/em&gt;&lt;code&gt;60&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd427169a92f461a087487870b3b69b88bbde4b9" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Default:&lt;/em&gt;&lt;code&gt;~/Library/Caches/Homebrew&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2cd31a85a434b28db200909db53eb3cae7a762da" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Example:&lt;/em&gt;&lt;code&gt;brew install jruby &amp;amp;&amp;amp; brew test jruby&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77552ae96a725c2bceab00fb7703aed27f5fb4c9" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;In this document we will be using &lt;a href=&quot;https://stedolan.github.io/jq/&quot;&gt;jq&lt;/a&gt; to parse JSON, available from Homebrew using &lt;code&gt;brew install jq&lt;/code&gt;.&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee10a00c3c9df3ab3ca9077458760cb783d9f84d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Note, maybe you shouldn&amp;rsquo;t do this on Lion, since Apple has decided it is not a good default.&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b20eabdc9aeca95a7231b07eafe943e371c1b8c" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Note:&lt;/em&gt; Homebrew doesn&amp;rsquo;t require permissions for any of the scopes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9c0882b145d12809db51f4886cbe431cfcbff52" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Note:&lt;/em&gt; Homebrew will only try to print emoji on OS X Lion or newer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d238bf890a5b13ccfca33b08bd564b2fcd92c516" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Note:&lt;/em&gt; this command cannot be used to transition a formula from a URL-and-SHA-256 style specification into a tag-and-revision style specification, nor vice versa. It must use whichever style specification the preexisting formula already uses.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e59154547a6e7fcd1709670a70efe281352a0655" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Note:&lt;/em&gt;&lt;code&gt;brew edit&lt;/code&gt; will open all of Homebrew as discontinuous files and directories. TextMate can handle this correctly in project mode, but many editors will do strange things in this case.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c215696f99efcef5753dd3878f4f1cfe9c4c194b" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;OpenSSL isn&amp;rsquo;t symlinked into my &lt;code&gt;PATH&lt;/code&gt; and non-Homebrew builds can&amp;rsquo;t find it!&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df952f30f478de7a2fa1a3df4461291446cc6b8b" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Please&lt;/em&gt; do not remove macOS native tools and forcefully replace them with symlinks back to the Homebrew-provided tool. Doing so can and likely will cause significant breakage when attempting to build software.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de7a550109d25bf1aaffaafc116ffdd8932e5a35" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;The top-level element of the JSON output is always an array, so the &lt;code&gt;map&lt;/code&gt; operator is used to act on the data.&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="697f4290eac12863e931286ce4fcdcdac0022da6" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;This is only recommended if you &lt;strong&gt;don&amp;rsquo;t&lt;/strong&gt; use a brewed Python.&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e484f2b1a1f31aa2447bd1c6d2028023c14539a2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;64-bit x86_64&lt;/strong&gt; CPU</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3024074f1d0c1bef6bcb9a4b06c143dcd31a0e94" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;HOMEBREW_PREFIX&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbfc8d9821dfc1d7fef75c022dc520b8772cdceb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;bin&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb591462631eb90e24834d288f4434cda1daea4e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;buildpath&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df83a1bcdaa2e6d407edef8fa130c2bbb9d50db5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;doc&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56a4b1ad67890ebcf9d17bf530ec8ad3efd14249" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;etc&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88a397112d8e55e89b1d307f83aa9257f6ff6c72" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;include&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c950263307c3a9a09e7e0d5cb74ac7f3b0626dd5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;info&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c5e14cfa2f6574b2047d21aca4250340874bc32" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;lib&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1d1c85aaadcb0e94bad0021223013907633b8c8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;libexec&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cebd32cc3d3298c8f80c5e0ed8a7eee4c8ce7149" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;man&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3347743817ce45c40fc72885e12f1b660b9553e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;man[1-8]&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78665feff5828df26aa1ca1b3b6d4ffac46c79bb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;opt_prefix&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fcb6b66beebb6aa333307426d3951957bb796700" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;pkgshare&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54bfac0f3a4a067f5a082aa74da34e13ae873874" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;prefix&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ad09cd0fbb87248735797d8a967da7224af1b38" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;sbin&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff6a372aef89dce0c28cde8ff93933a58365726c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;share&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d2d3b19b97837cb69970fbd8aa5cdb01ea247e2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;var&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="595d263f223c989ef791d6a5c8b7eeb3c4818a71" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Bottle&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6aa7e024d1390d8eb0edb352f562fbfb8bb4b57" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Brew Bundle&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e7683841a2f80acf64512f6485cb158e2260e0f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Cask&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9db05adeda391175d07af3a88c1a2509e1a91e00" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Cellar&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abe4b524dadec100ab9c08d7ef74edb68869f596" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Formula&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="252f39577f41efaffe4be4da2dbe93bf1f234a48" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;GCC&lt;/strong&gt; 4.7.0 or newer</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="416258d174ec8d5fc896b0cd106569e05070a4a5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Glibc&lt;/strong&gt; 2.13 or newer</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de6f8cb989ab9649a569bae2a38508b3504ba67e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Homebrew/brew&lt;/strong&gt;: &lt;a href=&quot;https://github.com/Homebrew/brew/issues&quot;&gt;https://github.com/Homebrew/brew/issues&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2cf898f1939f11ba37a56a95424ccd690f11975" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Homebrew/homebrew-bundle&lt;/strong&gt;: &lt;a href=&quot;https://github.com/Homebrew/homebrew-bundle&quot;&gt;https://github.com/Homebrew/homebrew-bundle&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="049ea883014aa301088fc1f37e4514729cca6048" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Homebrew/homebrew-cask&lt;/strong&gt;: &lt;a href=&quot;https://github.com/Homebrew/homebrew-cask&quot;&gt;https://github.com/Homebrew/homebrew-cask&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18c46ae3dd12c2700a569b1113661f1db9f214e1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Homebrew/homebrew-core&lt;/strong&gt;: &lt;a href=&quot;https://github.com/Homebrew/homebrew-core/issues&quot;&gt;https://github.com/Homebrew/homebrew-core/issues&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94dff04837acbeefe41e6974f47b1ac4247b6fb3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Homebrew/homebrew-services&lt;/strong&gt;: &lt;a href=&quot;https://github.com/Homebrew/homebrew-services&quot;&gt;https://github.com/Homebrew/homebrew-services&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9769287c5fce3e1e911d61a95362bc236004f05" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;However, all versions of RubyGems before 1.3.6 are buggy&lt;/strong&gt; and ignore the above setting. Sadly a fresh install of Snow Leopard comes with 1.3.5. Currently the only known way to get around this is to upgrade rubygems as root:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd1877a1e046ac3f2906d9e7bae13917b905597a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;If you plan to install gems that depend on brews then save yourself a bunch of hassle and install to &lt;code&gt;/usr/local&lt;/code&gt;!&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="624f8f4ef24fc530b8b2e0a0664dbbad39722d7e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;If you use rbenv or RVM then you should ignore this stuff&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1062d8372a309b0dd3fe7a49d786305ca10d6a6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Important:&lt;/strong&gt; If you choose to install a Python which isn&amp;rsquo;t either of these two (system Python or brewed Python), the Homebrew team cannot support any breakage that may occur.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7d870f559f644a1c872d4cd3047f71af6488809" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Important:&lt;/strong&gt;&lt;code&gt;$(brew --prefix)/bin&lt;/code&gt; is NOT on the &lt;code&gt;PATH&lt;/code&gt; during formula installation. If you have dependencies at build time, you must specify them and &lt;code&gt;brew&lt;/code&gt; will add them to the &lt;code&gt;PATH&lt;/code&gt; or create a &lt;a href=&quot;https://rubydoc.brew.sh/Requirement&quot;&gt;&lt;code&gt;Requirement&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d459dd2601ce1ce8f1bad4a9054129d28c46d85" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;It&amp;rsquo;s easier&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d465a63f2903a2cdc7723aebb009a55c33268a0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;It&amp;rsquo;s safe&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8dd7b3a5584d3fa8d8bde20ed255da923a1bdf0d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Keg&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbe574ce28ac4dc691989ed14ac5441ffd245586" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Linux&lt;/strong&gt; 2.6.32 or newer</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7b5d8e7180e9fed7cbf71f34b2344474e2e22e9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; Because of a required workaround for &lt;code&gt;npm@5&lt;/code&gt; calling &lt;code&gt;npm pack&lt;/code&gt; we currently don&amp;rsquo;t support installing modules (from non-npm registry tarballs), which require a prepublish step (e.g. for transpiling sources). See &lt;a href=&quot;https://github.com/Homebrew/brew/pull/2820&quot;&gt;Homebrew/brew#2820&lt;/a&gt; for more information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1dc39bcd923fd5ebfb3f55a6e5d989beaf38d12" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; macOS&amp;rsquo;s system Python does not provide &lt;code&gt;pip&lt;/code&gt;. Follow the &lt;a href=&quot;https://pip.readthedocs.io/en/stable/installing/#install-pip&quot;&gt;pip documentation&lt;/a&gt; to install it for your system Python if you would like it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44049e7b2fe2264238af466a416da1ea32fdf4da" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt;&lt;a href=&quot;https://rubydoc.brew.sh/Formula#option-class_method&quot;&gt;&lt;code&gt;option&lt;/code&gt;&lt;/a&gt;s are not allowed in Homebrew/homebrew-core as they are not tested by CI.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d87dc5587b8ad6cf05db01718aee601be8e7da9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Run &lt;code&gt;brew update&lt;/code&gt; twice and &lt;code&gt;brew doctor&lt;/code&gt; (and fix all the warnings) &lt;em&gt;before&lt;/em&gt; creating an issue!&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba2ab0394462650ed83afdc214bc19e61bd08127" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Tap&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b96ea4ae95080e97a55044a51c8c5a36199b075" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;WARNING:&lt;/strong&gt; When you &lt;code&gt;brew install&lt;/code&gt; formulae that provide Python bindings, you should &lt;strong&gt;not be in an active virtual environment&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f5f5db92629ace35fcd59ef7161ba76de2d616c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Warning!&lt;/strong&gt; Python may crash (see &lt;a href=&quot;common-issues&quot;&gt;Common Issues&lt;/a&gt;) if you &lt;code&gt;import &amp;lt;module&amp;gt;&lt;/code&gt; from a brewed Python if you ran &lt;code&gt;brew install &amp;lt;formula_with_python_bindings&amp;gt;&lt;/code&gt; against the system Python. If you decide to switch to the brewed Python, then reinstall all formulae with Python bindings (e.g. &lt;code&gt;pyside&lt;/code&gt;, &lt;code&gt;wxwidgets&lt;/code&gt;, &lt;code&gt;pygtk&lt;/code&gt;, &lt;code&gt;pygobject&lt;/code&gt;, &lt;code&gt;opencv&lt;/code&gt;, &lt;code&gt;vtk&lt;/code&gt; and &lt;code&gt;boost-python&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77ffc10ccfedc28d435fb900804fec4246b3d3e8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;We don&amp;rsquo;t accept formulae without a &lt;a href=&quot;https://rubydoc.brew.sh/Formula#homepage%3D-class_method&quot;&gt;&lt;code&gt;homepage&lt;/code&gt;&lt;/a&gt;!&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09fb06a7de98bfd7e61219dcff12181eaf36059f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;opt prefix&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f996ccb9212faa7a51e45a0d3b6d5ade80b29c1d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;tl;dr&lt;/strong&gt; Sudo is dangerous, and you installed TextMate.app without sudo anyway.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e71610593989570bcb98e35eb017bd307f14624f" translate="yes" xml:space="preserve">
          <source>@Linuxbrew on Twitter</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa7e66ffda0c4200893e166c427a12c3bdf75d21" translate="yes" xml:space="preserve">
          <source>@mxcl was too concerned with the beer theme and didn&amp;rsquo;t consider that the project may actually prove popular. By the time he realised it was, it was too late. However, today, the first Google hit for &amp;ldquo;homebrew&amp;rdquo; is not beer related ;‑)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4d41aa3df45e2a37696a26fa05320179ca82ceb" translate="yes" xml:space="preserve">
          <source>A 64-bit Intel CPU &lt;sup&gt;&lt;a href=&quot;#1&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac80090771237d56d5145a554d4485c105c2ebe5" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;taps&quot;&gt;tap&lt;/a&gt; is Homebrew-speak for a Git repository containing extra formulae. Homebrew has the capability to add (and remove) multiple taps to your local installation with the &lt;code&gt;brew tap&lt;/code&gt; and &lt;code&gt;brew untap&lt;/code&gt; commands. Type &lt;code&gt;man brew&lt;/code&gt; in your terminal. The main repository at &lt;a href=&quot;https://github.com/Homebrew/homebrew-core&quot;&gt;https://github.com/Homebrew/homebrew-core&lt;/a&gt;, often called &lt;code&gt;homebrew/core&lt;/code&gt;, is always built-in.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dfe10f58baa8b4a68e9f1eb2cfd4b3c66261d1b9" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;devel&lt;/code&gt; spec is specified in a block:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc6f3462ff116b364fddc6f850709f522def228a" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;formula_renames.json&lt;/code&gt; example for a formula rename:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd944efc453a076d5773dbae076786775ae65575" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;keg_only :versioned_formula&lt;/code&gt; should not &lt;code&gt;post_install&lt;/code&gt; anything in the &lt;code&gt;HOMEBREW_PREFIX&lt;/code&gt; that conflicts with or duplicates the non-versioned counterpart (or other versioned formulae). For example, a &lt;code&gt;node@6&lt;/code&gt; formula should not install its &lt;code&gt;npm&lt;/code&gt; into &lt;code&gt;HOMEBREW_PREFIX&lt;/code&gt; like the &lt;code&gt;node&lt;/code&gt; formula does.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1cbc22fcfaa6c5bd8a399eb7107270b5e2d1ae42" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;needs response&lt;/code&gt; label on a PR means that the Homebrew maintainers need you to respond to previous comments.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c5dd6b0c4c47c1eec42dc2b8858f7489738d370" translate="yes" xml:space="preserve">
          <source>A &lt;em&gt;formula&lt;/em&gt; is a package definition written in Ruby. It can be created with &lt;code&gt;brew create &amp;lt;URL&amp;gt;&lt;/code&gt; where &lt;code&gt;&amp;lt;URL&amp;gt;&lt;/code&gt; is a zip or tarball, installed with &lt;code&gt;brew install &amp;lt;formula&amp;gt;&lt;/code&gt;, and debugged with &lt;code&gt;brew install --debug --verbose &amp;lt;formula&amp;gt;&lt;/code&gt;. Formulae use the &lt;a href=&quot;https://rubydoc.brew.sh/Formula&quot;&gt;Formula API&lt;/a&gt; which provides various Homebrew-specific helpers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="feb7b9a4a54c21d9536960a8839b5abf3e78224c" translate="yes" xml:space="preserve">
          <source>A Bourne-compatible shell for installation (e.g. &lt;code&gt;bash&lt;/code&gt; or &lt;code&gt;zsh&lt;/code&gt;) &lt;sup&gt;&lt;a href=&quot;#4&quot;&gt;4&lt;/a&gt;&lt;/sup&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c898929d03b87ea3e0d90d861ee186a21f10bfda" translate="yes" xml:space="preserve">
          <source>A Git repository of &lt;strong&gt;Formulae&lt;/strong&gt; and/or commands</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="186e46fca8f63e57d9aa4c09142f2097d828e147" translate="yes" xml:space="preserve">
          <source>A Hash (e.g. &lt;code&gt;=&amp;gt;&lt;/code&gt;) adds information to a dependency. Given a String or Symbol, the value can be one or more of the following values:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7aef4a8bda798173e8fd7eddb81bdd08de1b872e" translate="yes" xml:space="preserve">
          <source>A Homebrew analytics user ID, e.g. &lt;code&gt;1BAB65CC-FE7F-4D8C-AB45-B7DB5A6BA9CB&lt;/code&gt;. This is generated by &lt;code&gt;uuidgen&lt;/code&gt; and stored in the repository-specific Git configuration variable &lt;code&gt;homebrew.analyticsuuid&lt;/code&gt; within &lt;code&gt;$(brew --repository)/.git/config&lt;/code&gt;. This does not allow us to track individual users but does enable us to accurately measure user counts vs. event counts (https://developers.google.com/analytics/devguides/collection/protocol/v1/parameters#cid)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="551ee6b5796fb4edeafdaf223aa95a8807efd293" translate="yes" xml:space="preserve">
          <source>A String (e.g. &lt;code&gt;&quot;jpeg&quot;&lt;/code&gt;) specifies a formula dependency.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bcf740d71dc8da88b34471a47e2e0bb5bfde511a" translate="yes" xml:space="preserve">
          <source>A Symbol (e.g. &lt;code&gt;:x11&lt;/code&gt;) specifies a &lt;a href=&quot;https://rubydoc.brew.sh/Requirement&quot;&gt;&lt;code&gt;Requirement&lt;/code&gt;&lt;/a&gt; which can be fulfilled by one or more formulae, casks or other system-wide installed software (e.g. X11).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72132de57cb5009c7a2ce4e55db9bcbde7ccc252" translate="yes" xml:space="preserve">
          <source>A failed build looks like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a7175f763d75a32108334f6e0c7506222f56810" translate="yes" xml:space="preserve">
          <source>A full example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4aef626cc64c57ec317cc7dc3c4337d29ee538c" translate="yes" xml:space="preserve">
          <source>A general meeting of the members may be called by the PLC with at least three weeks notice.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b83cde496fbc9874aca7d5b632a5495987bb021" translate="yes" xml:space="preserve">
          <source>A good example formula for minor conflict is &lt;a href=&quot;https://github.com/Homebrew/homebrew-core/blob/master/Formula/mbedtls.rb&quot;&gt;&lt;code&gt;mbedtls&lt;/code&gt;&lt;/a&gt;, which ships and compiles a &amp;ldquo;Hello World&amp;rdquo; executable. This is obviously non-essential to &lt;code&gt;mbedtls&lt;/code&gt;&amp;rsquo;s functionality, and conflict with the popular GNU &lt;a href=&quot;https://github.com/Homebrew/homebrew-core/blob/master/Formula/hello.rb&quot;&gt;&lt;code&gt;hello&lt;/code&gt;&lt;/a&gt; formula would be overkill, so we just &lt;a href=&quot;https://github.com/Homebrew/homebrew-core/blob/966273060ad507fea490bd931971963de8b1a1dc/Formula/mbedtls.rb#L30-L31&quot;&gt;remove it&lt;/a&gt; during the installation process.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89ce45eb997d2d92906c05bfdd1df1676539cb0e" translate="yes" xml:space="preserve">
          <source>A majority of the entire membership of the PLC is required to pass an ordinary resolution.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bfa3481a53fb0c22a1274dfec83c0bde02c0d827" translate="yes" xml:space="preserve">
          <source>A meeting of the PLC may be called by any two of its members with at least three weeks notice, unless all PLC members agree to a shorter notice period.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23748515d9a191b7941308b5934e89324aae0f9c" translate="yes" xml:space="preserve">
          <source>A number of people in this situation are either forcefully linking &lt;code&gt;keg_only&lt;/code&gt; tools with &lt;code&gt;brew link --force&lt;/code&gt; or moving default system utilities out of the &lt;code&gt;PATH&lt;/code&gt; and replacing them with manually-created symlinks to the Homebrew-provided tool.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1b1f56c3f8fed558498a446db0ffb1fed54d571" translate="yes" xml:space="preserve">
          <source>A passed build looks like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b59e4ac1ece2d969cf01438ac2b7385c382bc087" translate="yes" xml:space="preserve">
          <source>A possible workaround (which puts executable scripts in &lt;code&gt;~/Library/Python/&amp;lt;X&amp;gt;.&amp;lt;Y&amp;gt;/bin&lt;/code&gt;) is:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7db164437369494dd1546a8beddd51bdbdac6c70" translate="yes" xml:space="preserve">
          <source>A pull request is made &amp;ldquo;on&amp;rdquo; a repository; that repository is &amp;ldquo;at&amp;rdquo; a URL</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ae5cb0281ae2ba3a5469a0114611456e50f32d1" translate="yes" xml:space="preserve">
          <source>A quick word on naming</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c677b65f85c4b64467066956958e4c90f3d50070" translate="yes" xml:space="preserve">
          <source>A simple (and typical) example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d667c193726cac9296ea9953d5bb9c2efb766e4" translate="yes" xml:space="preserve">
          <source>A strip level of &lt;code&gt;-p1&lt;/code&gt; is assumed. It can be overridden using a symbol argument:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b0b40ed9a65696ab115cbfa9c7d2e33480c0595" translate="yes" xml:space="preserve">
          <source>A symlink to the active version of a &lt;strong&gt;Keg&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92ab07cc893e28fa1ad9ca09a39a001707f1f218" translate="yes" xml:space="preserve">
          <source>A tap is just a Git repository so you don&amp;rsquo;t have to do anything specific when making modifications, apart from committing and pushing your changes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae35a6959e9d7e652228e2ccc47532a444291efa" translate="yes" xml:space="preserve">
          <source>A tap is usually a Git repository available online, but you can use anything as long as it&amp;rsquo;s a protocol that Git understands, or even just a directory with files in it. If hosted on GitHub, we recommend that the repository&amp;rsquo;s name start with &lt;code&gt;homebrew-&lt;/code&gt; so the short &lt;code&gt;brew tap&lt;/code&gt; command can be used. See the &lt;a href=&quot;manpage&quot;&gt;manpage&lt;/a&gt; for more information on repository naming.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe5271d9a2ef18c3a90be11a746db9bad427f11e" translate="yes" xml:space="preserve">
          <source>A temporary directory somewhere on your system</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b502d46f95a05464f4d5dec377c55b9a70fec211" translate="yes" xml:space="preserve">
          <source>AGM: Annual General Meeting</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29d8dec43e88b47582179de53ef2720d981e8ab1" translate="yes" xml:space="preserve">
          <source>ARM</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dad57a4c245a8007c90257aef0514c8b6a0f600c" translate="yes" xml:space="preserve">
          <source>AUTHORS</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33f7fdaa6af24aae269f93c52031125d409b3ebd" translate="yes" xml:space="preserve">
          <source>Acceptable Formulae</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3cebff4bbbbbac809fa616d3358cfb3c99d16396" translate="yes" xml:space="preserve">
          <source>Acceptable versioned formulae</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f84f561c66114fb83ff1212912978df8f7b821de" translate="yes" xml:space="preserve">
          <source>Activate a previously installed version of a formula</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32302041263025a4d56629de469494c15b6bda3a" translate="yes" xml:space="preserve">
          <source>Activate the virtualenv &lt;em&gt;after&lt;/em&gt; you&amp;rsquo;ve brewed, or brew in a fresh terminal window. Homebrew will still install Python modules into Homebrew&amp;rsquo;s &lt;code&gt;site-packages&lt;/code&gt; and &lt;em&gt;not&lt;/em&gt; into the virtual environment&amp;rsquo;s site-package.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4d6ff44ceb83830bf440b8fa2eea2f1e800c463" translate="yes" xml:space="preserve">
          <source>Add &lt;code&gt;--full&lt;/code&gt; to either the one- or two-argument invocations above to have Git make a complete clone rather than a shallow one. Full is the default for Homebrew developers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="974bb3aa09929b75bfd8dbbe12ec41cc5c2236ed" translate="yes" xml:space="preserve">
          <source>Add a test to the formula</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7fac479a8fc95492a2867e205e44b7fa10b76893" translate="yes" xml:space="preserve">
          <source>Add a valid test to the &lt;a href=&quot;https://rubydoc.brew.sh/Formula#test-class_method&quot;&gt;&lt;code&gt;test do&lt;/code&gt;&lt;/a&gt; block of the formula. This will be run by &lt;code&gt;brew test foo&lt;/code&gt; and the &lt;a href=&quot;brew-test-bot&quot;&gt;Brew Test Bot&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6aac2ff51cc6c97c65083840eb92c0231ef770ce" translate="yes" xml:space="preserve">
          <source>Add aliases by creating symlinks in an &lt;code&gt;Aliases&lt;/code&gt; directory in the tap root.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6723bfe77efc9e5b4f5ca4fecae4d160497dd5e1" translate="yes" xml:space="preserve">
          <source>Add your pushable forked repository as a new remote:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e50a910b17b336c5c1c495487444c456e6af994" translate="yes" xml:space="preserve">
          <source>Adding optional steps</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e0611293a86e3b7ca70e39ab97bf64e43495184" translate="yes" xml:space="preserve">
          <source>Additional commands, including external commands, can of course be written to provide more detailed information. There are a couple of disadvantages here. First, it means writing Ruby against a possibly changing Homebrew codebase. There will be more code to touch during refactors, and Homebrew can&amp;rsquo;t guarantee that external commands will continue to work. Second, it means designing the commands themselves, specifying input parameters and output formats.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="585cd143deeeb1a01f6621a73f897c161836c8a3" translate="yes" xml:space="preserve">
          <source>Additional commentary that explains why Homebrew does some of the things it does.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b68c301320cfd8bba2d2f0d8e5e5729014ad25e3" translate="yes" xml:space="preserve">
          <source>Additionally, if you receive &amp;ldquo;zsh compinit: insecure directories&amp;rdquo; warnings when attempting to load these completions, you may need to run this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef551900d40a6fa2853fc9ddb5e38536500d2886" translate="yes" xml:space="preserve">
          <source>Advanced formula tricks</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d1e77575afadff67e6044def2840057a5f0b917" translate="yes" xml:space="preserve">
          <source>Advice on potential workarounds</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b80626e4d90564266c69312b55b63eb2425d6a2" translate="yes" xml:space="preserve">
          <source>After March 1, 2020, the Project Leader may not be a member of the PLC.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="292daeddba49c5d95402823a22ac65abc4fbdc7e" translate="yes" xml:space="preserve">
          <source>After no code changes have happened for at least a few hours (ideally 24 hours) and you are confident there&amp;rsquo;s no major regressions on the current &lt;code&gt;master&lt;/code&gt; branch you can create a new Git tag. Ideally this should be signed with your GPG key. This can then be pushed to GitHub.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fb190ee5a88883356f320f3ad0bc50bb76d93eb" translate="yes" xml:space="preserve">
          <source>After running &lt;code&gt;brew update&lt;/code&gt;, you receive a Git error warning about untracked files or local changes that would be overwritten by a checkout or merge, followed by a list of files inside your Homebrew installation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5fe62a0d0589cf7e1ffa8393f18d5f54b5568f0" translate="yes" xml:space="preserve">
          <source>All &lt;strong&gt;Kegs&lt;/strong&gt; are installed here</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52e5842affe5fdbce72efb1d3ae78f5cad8fd08b" translate="yes" xml:space="preserve">
          <source>All internal and external Homebrew commands can provide styled &lt;code&gt;--help&lt;/code&gt; output by using lines starting with &lt;code&gt;#:&lt;/code&gt; (a comment then &lt;code&gt;:&lt;/code&gt; character in both Bash and Ruby) which are then output by &lt;code&gt;--help&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34b77c5c77c361f7a9a274801826ef37f31566d2" translate="yes" xml:space="preserve">
          <source>All members will follow the &lt;a href=&quot;https://github.com/Homebrew/.github/blob/master/CODE_OF_CONDUCT.md#code-of-conduct&quot;&gt;Homebrew Code of Conduct&lt;/a&gt;. Changes to the code of conduct must be approved by the PLC.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e75c91e6b4149a2e42ed03f73ff758ba5c35174" translate="yes" xml:space="preserve">
          <source>All of the Python module dependencies of the application (and their dependencies, recursively) should be declared as &lt;code&gt;resource&lt;/code&gt;s in the formula and installed into the virtualenv, as well. Each dependency should be explicitly specified; please do not rely on &lt;code&gt;setup.py&lt;/code&gt; or &lt;code&gt;pip&lt;/code&gt; to perform automatic dependency resolution, for the &lt;a href=&quot;acceptable-formulae#we-dont-like-install-scripts-that-download-unversioned-things&quot;&gt;reasons described here&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="165e887e0736f430a4ead11651293887f1dbb9b8" translate="yes" xml:space="preserve">
          <source>All your terminology needs can be &lt;a href=&quot;formula-cookbook#homebrew-terminology&quot;&gt;found here&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4b473542f29ff22154e643e8cfe47c8795a02c8" translate="yes" xml:space="preserve">
          <source>Allows you to alias your Homebrew commands. See the &lt;a href=&quot;https://github.com/Homebrew/homebrew-aliases/blob/master/README.md&quot;&gt;&lt;code&gt;README&lt;/code&gt;&lt;/a&gt; for more info and usage.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2690032bff3c7ff137c1b4a0cffba71d1b10955" translate="yes" xml:space="preserve">
          <source>Also note that such a formula would only be compatible with the same Node major version it originally was compiled with. This means that we need to revision every formula with a Node native addon with every major version bump of the &lt;code&gt;node&lt;/code&gt; formula. To make sure we don&amp;rsquo;t overlook your formula on a Node major version bump, write a meaningful test which would fail in such a case (invoked with an ABI-incompatible Node version).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7175d76d5fdda2630ffa638f6cff5e30f886c5fc" translate="yes" xml:space="preserve">
          <source>Alternative Installation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85175f96821c72bb5767d9b8649c24e07d63f7c3" translate="yes" xml:space="preserve">
          <source>Alternative Installs</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1cda4c14399110aa6bb82b64f63c69472d28aac" translate="yes" xml:space="preserve">
          <source>Alternatively you could &lt;code&gt;curl&lt;/code&gt; the JSON at &lt;code&gt;https://registry.npmjs.org/&amp;lt;name&amp;gt;&lt;/code&gt; and look for the value of &lt;code&gt;versions[&amp;lt;version&amp;gt;].dist.tarball&lt;/code&gt; for the correct tarball URL.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1d7f26651916d4f350ed734d0af1b38a52119e2" translate="yes" xml:space="preserve">
          <source>Alternatively, this will prevent analytics from ever being sent:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7024d30781ab4b96582c9d50d4e9aa9bc10057b9" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;https://github.com/Homebrew/homebrew-bundle&quot;&gt;extension of Homebrew&lt;/a&gt; to describe dependencies</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7962ebe6a77d83c97cfa2ab736c201ec4b151f19" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;https://github.com/Homebrew/homebrew-cask&quot;&gt;extension of Homebrew&lt;/a&gt; to install macOS native apps</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f85040a61c8ec2c87659b1b6eb785cb91012427" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;event&lt;/code&gt; hit type with the &lt;code&gt;BuildError&lt;/code&gt; event category and the Homebrew formula that failed to install, e.g. &lt;code&gt;wget&lt;/code&gt; as the action and an event label e.g. &lt;code&gt;macOS 10.12&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9302c92ffc33fae6babef60f845afc457da39a2e" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;event&lt;/code&gt; hit type with the &lt;code&gt;cask_install&lt;/code&gt; event category and the Homebrew cask from a non-private GitHub tap you install as the action and an event label as above. This allows us to identify the casks that need fixing and where more easily.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4e392d0cc01ebe365e8233f58f201a598ef6369" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;event&lt;/code&gt; hit type with the &lt;code&gt;install&lt;/code&gt; event category and the Homebrew formula from a non-private GitHub tap you install plus any used options, e.g. &lt;code&gt;wget --with-pcre&lt;/code&gt; as the action and an event label e.g. &lt;code&gt;macOS 10.12, non-/usr/local, CI&lt;/code&gt; to indicate the OS version, non-standard installation location and invocation as part of CI. This allows us to identify the formulae that need fixing and where more easily.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="623aa1a7a8e860b4633699fa9522fac1b7842c76" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;event&lt;/code&gt; hit type with the &lt;code&gt;install_on_request&lt;/code&gt; event category and the Homebrew formula from a non-private GitHub tap you have requested to install (e.g. explicitly named it with a &lt;code&gt;brew install&lt;/code&gt;) plus options and an event label as above. This allows us to differentiate the formulae that users intend to install from those pulled in as dependencies.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1241af957f9eadfaf46c729bada549d4a12fc440" translate="yes" xml:space="preserve">
          <source>An SSL/TLS (https) &lt;a href=&quot;https://rubydoc.brew.sh/Formula#homepage%3D-class_method&quot;&gt;&lt;code&gt;homepage&lt;/code&gt;&lt;/a&gt; is preferred, if one is available.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fdc372bfa7d1682cf34bdc26ea50cf9110b6c93b" translate="yes" xml:space="preserve">
          <source>An additional method is available in the formula DSL.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9a3cb40ed9abedf6e1870f1aa09fb6ca4893b0e" translate="yes" xml:space="preserve">
          <source>An alternative</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de0dce88cb945bfc4f29ed5d10f0fd0053090c3c" translate="yes" xml:space="preserve">
          <source>An arbitrary file or URL: Homebrew can install formulae via URL, e.g. &lt;code&gt;https://raw.githubusercontent.com/Homebrew/homebrew-core/master/Formula/git.rb&lt;/code&gt;, or from a local path. It could point to either a formula file or a bottle. In the case of a URL, the downloaded file will be cached for later use.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13edb0cad8ff6b4bcbd4d10d46b28841475556fa" translate="yes" xml:space="preserve">
          <source>An empty line is required before the &lt;code&gt;__END__&lt;/code&gt; line.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19c3444095251b9280e27be1a6bb53fa44b2fe6f" translate="yes" xml:space="preserve">
          <source>An example of this is:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="675e6eb5cbfc50ed10b820fe0b8f4943c608fa0d" translate="yes" xml:space="preserve">
          <source>An example using &lt;code&gt;pip&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b8b595a150329e6cd070ea70f560f4c72101f01" translate="yes" xml:space="preserve">
          <source>An executable script for a command named &lt;code&gt;extcmd&lt;/code&gt; should be named &lt;code&gt;brew-extcmd&lt;/code&gt;. The script itself can use any suitable shebang (&lt;code&gt;#!&lt;/code&gt;) line, so an external script can be written in Bash, Ruby, or even Python. Unlike the ruby commands this file must not end with a language-specific suffix (&lt;code&gt;.sh&lt;/code&gt;, or &lt;code&gt;.py&lt;/code&gt;). This file will be run via &lt;code&gt;exec&lt;/code&gt; with some Homebrew variables set as environment variables, and passed any additional command-line arguments.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d92f25a7a5e8a381ff92acfe4e36ae75298c9ec" translate="yes" xml:space="preserve">
          <source>An external command &lt;code&gt;extcmd&lt;/code&gt; implemented as a Ruby command should be named &lt;code&gt;brew-extcmd.rb&lt;/code&gt;. The command is executed by doing a &lt;code&gt;require&lt;/code&gt; on the full pathname. As the command is &lt;code&gt;require&lt;/code&gt;d, it has full access to the Homebrew &amp;ldquo;environment&amp;rdquo;, i.e. all global variables and modules that any internal command has access to. Be wary of using Homebrew internals; they may change at any time without warning.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fed99edb9ea82b3afb1e12489290850010765ca5" translate="yes" xml:space="preserve">
          <source>An introduction</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51062104b0a2a8c06d3d2303b51369f32cb36dd9" translate="yes" xml:space="preserve">
          <source>An option to avoid sudo is to use an access control list. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e0f021d9277cbd032b6da042c46d282bd34d102" translate="yes" xml:space="preserve">
          <source>And for an authenticated HTTP proxy:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f90a8d9b2071ff95b242efee884479cfba93ba8" translate="yes" xml:space="preserve">
          <source>And of course, you can simply &lt;code&gt;brew link &amp;lt;formula&amp;gt;&lt;/code&gt; again afterwards!</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c899c04545880e2629c974191dacd1a8cb564498" translate="yes" xml:space="preserve">
          <source>And then to define the effects the &lt;a href=&quot;https://rubydoc.brew.sh/Formula#option-class_method&quot;&gt;&lt;code&gt;option&lt;/code&gt;&lt;/a&gt;s have:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="410c9d9ef9c903236d47d4941484e79373e25ec6" translate="yes" xml:space="preserve">
          <source>Anonymous Aggregate User Behaviour Analytics</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f246a80372618a34242f5067ce19c01ccac126e5" translate="yes" xml:space="preserve">
          <source>Another alternative is to use &lt;code&gt;perlbrew&lt;/code&gt; to install a separate copy of Perl in your home directory, or wherever you like:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d7bc450e326e837ce653a9b0c45c0adbc3f18ca" translate="yes" xml:space="preserve">
          <source>Another example would be configuration files that should not be overwritten on package upgrades. If after installation you find that to-be-persisted configuration files are not copied but instead &lt;em&gt;symlinked&lt;/em&gt; into &lt;code&gt;/usr/local/etc/&lt;/code&gt; from the Cellar, this can often be rectified by passing an appropriate argument to the package&amp;rsquo;s configure script. That argument will vary depending on a given package&amp;rsquo;s configure script and/or Makefile, but one example might be: &lt;code&gt;--sysconfdir=#{etc}&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbac9b4083778d1fe1c321c0ca6f287d15dffa3f" translate="yes" xml:space="preserve">
          <source>Any approved amendments will take effect three weeks after the close of voting.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b25c04c4d6dcdb7973c038304e1d95b5f4ef994" translate="yes" xml:space="preserve">
          <source>Any member may propose an amendment via pull request on GitHub against this document.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7960f14e75c6313c4c35127a47de7ded724df84c" translate="yes" xml:space="preserve">
          <source>Any member may refer any question or dispute to the PLC. All technical matters should first be referred to the TSC. Non-technical matters may be referred directly to the PLC. Members will make a good faith effort to resolve any disputes prior to referral to the PLC.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4dd56de3285782a105481e64616f618cb3e430e9" translate="yes" xml:space="preserve">
          <source>Any member may refer any technical question or dispute to the TSC. Members will make a good faith effort to resolve any disputes prior to referral to the TSC.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e9598ccdc4a8cb45b4a20d4bac8636010f6017e" translate="yes" xml:space="preserve">
          <source>Any vacancy of the Project Leader will be filled by appointment of the PLC.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c583b4c4b65a7d36a74f348c96aa245602aa372" translate="yes" xml:space="preserve">
          <source>Apple has assigned this directory for non-system utilities. This means there are no files in &lt;code&gt;/usr/local&lt;/code&gt; by default, so there is no need to worry about messing up existing or system tools.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76c74bd071dd73f01696fddbbffc77712a479faf" translate="yes" xml:space="preserve">
          <source>Applications</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47f9243776cfe5818704bf61d98600e0e98525d8" translate="yes" xml:space="preserve">
          <source>Applications should be installed into a Python &lt;a href=&quot;https://virtualenv.pypa.io/en/stable/&quot;&gt;virtualenv&lt;/a&gt; environment rooted in &lt;code&gt;libexec&lt;/code&gt;. This prevents the app&amp;rsquo;s Python modules from contaminating the system site-packages and vice versa.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab71efefeb495d69c021595cfd966b81daec352b" translate="yes" xml:space="preserve">
          <source>Applications should unconditionally bundle all of their Python-language dependencies and libraries and should install any unsatisfied dependencies; these strategies are discussed in depth in the following sections.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8106e3a4db5f2f9fcbc813328fb7fe84d390add7" translate="yes" xml:space="preserve">
          <source>Applications that are compatible with Python 2 &lt;strong&gt;should&lt;/strong&gt; use the Apple-provided system Python in &lt;code&gt;/usr/bin&lt;/code&gt; on systems that provide Python 2.7. No explicit Python dependency is needed since &lt;code&gt;/usr/bin&lt;/code&gt; is always in &lt;code&gt;PATH&lt;/code&gt; for Homebrew formulae.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f296dfc4fc991e872722cadb1e4f4650bc3f96b" translate="yes" xml:space="preserve">
          <source>As Homebrew became primarily a binary package manager, most users were fulfilling &lt;code&gt;Requirement&lt;/code&gt;s with the &lt;code&gt;default_formula&lt;/code&gt;, not with arbitrary alternatives. To improve quality and reduce variation, Homebrew now exclusively supports using the default formula, as an ordinary dependency, and no longer supports using arbitrary alternatives.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b54e964064aa2d092bdbc52529684622e21a6ffa" translate="yes" xml:space="preserve">
          <source>As a general rule, &lt;a href=&quot;https://rubydoc.brew.sh/Formula#conflicts_with-class_method&quot;&gt;&lt;code&gt;conflicts_with&lt;/code&gt;&lt;/a&gt; should be a last-resort option. It&amp;rsquo;s a fairly blunt instrument.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5cea5ed4edfac807d25132e2d8d86f85d883d58e" translate="yes" xml:space="preserve">
          <source>As a result, we recommend you give formulae a different name if you want to make them easier to install. Note that there is (intentionally) no way of replacing dependencies of core formulae with those from taps.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dddf73cd98dcce7c884fe24956533693e61e8e3f" translate="yes" xml:space="preserve">
          <source>As an example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13b6417553a10adebeb6be7d437fe7c5b9a4103e" translate="yes" xml:space="preserve">
          <source>As far as we can tell it would be impossible for Google to match the randomly generated Homebrew-only analytics user ID to any other Google Analytics user ID. If Google turned evil the only thing they could do would be to lie about anonymising IP addresses and attempt to match users based on IP addresses.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4946dc1ae7f3ba4c86d7842c0afeffe0d567d83" translate="yes" xml:space="preserve">
          <source>Ask for clarification of anything you don&amp;rsquo;t understand and for help with anything you don&amp;rsquo;t know how to do.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a854abe110d1c58236ebdb8aa56ed7f9ca41e4c" translate="yes" xml:space="preserve">
          <source>At Homebrew, we like to put the name of the formula up front like so: &lt;code&gt;foobar 7.3 (new formula)&lt;/code&gt;. This may seem crazy short, but you&amp;rsquo;ll find that forcing yourself to summarise the commit encourages you to be atomic and concise. If you can&amp;rsquo;t summarise it in 50-80 characters, you&amp;rsquo;re probably trying to commit two commits as one. For a more thorough explanation, please read Tim Pope&amp;rsquo;s excellent blog post, &lt;a href=&quot;https://tbaggery.com/2008/04/19/a-note-about-git-commit-messages.html&quot;&gt;A Note About Git Commit Messages&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41dded417052424bdcf3c39f6c8664147fae6806" translate="yes" xml:space="preserve">
          <source>Atom</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11181d366dbeae43e196f45009bdf2ffc1fb288a" translate="yes" xml:space="preserve">
          <source>Audit the formula</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71ca70704010ae80e6d0285de88e2d35ae94f2fe" translate="yes" xml:space="preserve">
          <source>Automatically determine the installation prefix for non-Homebrew software. Using the output from this command, you can install your own software into the Cellar and then link it into Homebrew&amp;rsquo;s prefix with &lt;code&gt;brew link&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97ef6898f36f06470559f4724b00c45b21757749" translate="yes" xml:space="preserve">
          <source>Avoid gender-specific language when not necessary</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f27b4498916a33880b824b737f7942a5ce32dac3" translate="yes" xml:space="preserve">
          <source>Avoiding sudo altogether for Perl</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81758ac7a6165269b9e7cc6a784800c6a6db6aaa" translate="yes" xml:space="preserve">
          <source>Await feedback or a merge from Homebrew&amp;rsquo;s maintainers. We typically respond to all PRs within a couple days, but it may take up to a week, depending on the maintainers&amp;rsquo; workload.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5dda8c520f4fbfda1830a8a497556d722a3fd113" translate="yes" xml:space="preserve">
          <source>BUGS</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc37fd3a1ca362cb350073e98a2f7ce5dd93ac86" translate="yes" xml:space="preserve">
          <source>Bad makefiles</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4d52093053a68096de508ccde5c9eb529d2330c" translate="yes" xml:space="preserve">
          <source>Basic instructions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f6a61d1d048a2e80dafb6f831e8fbe69298b96f" translate="yes" xml:space="preserve">
          <source>Be careful as this is a destructive operation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efb94bf3c7a7244e4e3a6625062ad810f5a401bf" translate="yes" xml:space="preserve">
          <source>Before creating the tag you should delete any &lt;code&gt;odisabled&lt;/code&gt; code, make any &lt;code&gt;odeprecated&lt;/code&gt; code &lt;code&gt;odisabled&lt;/code&gt; and add any new &lt;code&gt;odeprecations&lt;/code&gt; that are desired.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="784ebc0c18d63e014eee6e4582fc1f866cd6699d" translate="yes" xml:space="preserve">
          <source>Before submitting a new formula make sure you read over our &lt;a href=&quot;https://github.com/Homebrew/brew/blob/master/CONTRIBUTING.md#contributing-to-homebrew&quot;&gt;contribution guidelines&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1667649b0a52dfbd50fe0e392ec1033ae016af8" translate="yes" xml:space="preserve">
          <source>Before submitting a new formula make sure your package:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="967382f86044b6efc91dfee8f4e2b4ed941211cd" translate="yes" xml:space="preserve">
          <source>Bindings</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84119209b15b17b1d219b85b28464df00cdfafee" translate="yes" xml:space="preserve">
          <source>Bindings are a special case of libraries that allow Python code to interact with a library or application implemented in another language.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f14acd8fab7f5603b254669cceb8492ab78e7443" translate="yes" xml:space="preserve">
          <source>Bindings should follow the same advice for Python module dependencies as libraries; see below for more.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa14ddbb1e2699aaf0b41c8e4b66445c8eb6f00a" translate="yes" xml:space="preserve">
          <source>Bottle DSL (Domain Specific Language)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b80e36933cfde95bba4ed0109df590ead315debe" translate="yes" xml:space="preserve">
          <source>Bottles</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89596860c32e469f3018ed75b0e206ab8a281fba" translate="yes" xml:space="preserve">
          <source>Bottles (binary packages)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc6f4b830ffae9ea75f365c9edcf5baa708c8d08" translate="yes" xml:space="preserve">
          <source>Bottles are created using the &lt;a href=&quot;brew-test-bot&quot;&gt;Brew Test Bot&lt;/a&gt;. This happens mostly when people submit pull requests to Homebrew and the &lt;code&gt;bottle do&lt;/code&gt; block is updated by maintainers when they &lt;code&gt;brew pull --bottle&lt;/code&gt; the contents of a pull request. For the Homebrew organisations&amp;rsquo; taps they are uploaded to and downloaded from &lt;a href=&quot;https://bintray.com/homebrew&quot;&gt;Bintray&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aea9b72587fa3c0ae7f326c9c45974eb01ad92d1" translate="yes" xml:space="preserve">
          <source>Bottles are produced by installing a formula with &lt;code&gt;brew install --build-bottle &amp;lt;formula&amp;gt;&lt;/code&gt; and then bottling it with &lt;code&gt;brew bottle &amp;lt;formula&amp;gt;&lt;/code&gt;. This outputs the bottle DSL which should be inserted into the formula file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec727f3e58a4e24a5f2538c1db605f8397a3bb05" translate="yes" xml:space="preserve">
          <source>Bottles are simple gzipped tarballs of compiled binaries. Any metadata is stored in a formula&amp;rsquo;s bottle DSL and in the bottle filename (i.e. macOS version, revision).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46c1cada7e12b3879f080e83254e5bca09d37029" translate="yes" xml:space="preserve">
          <source>Bottles have a DSL to be used in formulae which is contained in the &lt;code&gt;bottle do ... end&lt;/code&gt; block.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75698d815c51168d7365d71d872068b9cc7cbca1" translate="yes" xml:space="preserve">
          <source>Bottles will not be used if the user requests it (see above), if the formula requests it (with &lt;code&gt;pour_bottle?&lt;/code&gt;), if any options are specified during installation (bottles are all compiled with default options), if the bottle is not up to date (e.g. lacking a checksum) or if the bottle&amp;rsquo;s &lt;code&gt;cellar&lt;/code&gt; is not &lt;code&gt;:any&lt;/code&gt; nor equal to the current &lt;code&gt;HOMEBREW_CELLAR&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a669c3fd9f67c73c4b5a5459e18aa7da26a4966" translate="yes" xml:space="preserve">
          <source>Brew Test Bot</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5edc18089dcf504a8c2481990d3c9bf09174b26" translate="yes" xml:space="preserve">
          <source>Brew Test Bot For Maintainers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab34aa5158f17df2684724524bfb683192a9d6d1" translate="yes" xml:space="preserve">
          <source>Brewed Python modules</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ba117675e2690fc1906a76ac935b7b8fbe20c09" translate="yes" xml:space="preserve">
          <source>Brewed Ruby installs executables to &lt;code&gt;$(brew --prefix)/opt/ruby/bin&lt;/code&gt; without sudo. You should add this to your path. See the caveats in the &lt;code&gt;ruby&lt;/code&gt; formula for up-to-date information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2c1c1a41770789a3194dde76c3bf9c71fce88fd" translate="yes" xml:space="preserve">
          <source>British/Commonwealth English over American English, in general</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f2f142ecc4f6157f5f3efc95b77519e73f38355" translate="yes" xml:space="preserve">
          <source>Build Python 2 bindings with the system Python by default (don&amp;rsquo;t add an option) and they should be usable with any binary-compatible Python. If that isn&amp;rsquo;t the case, it&amp;rsquo;s an upstream bug; &lt;a href=&quot;https://blog.tim-smith.us/2015/09/python-extension-modules-os-x/&quot;&gt;here&amp;rsquo;s some advice for resolving it&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea666ab76229fd30f7179e78105b27f9645a5ab4" translate="yes" xml:space="preserve">
          <source>Build flags</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="475045e6dcc498aef4aab77008dfb15af7ca11c2" translate="yes" xml:space="preserve">
          <source>Building Against Non-Homebrew Dependencies</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aca6c8a1f1d408537ea56c968172121e516be39c" translate="yes" xml:space="preserve">
          <source>Bundler for non-Ruby dependencies from Homebrew, Homebrew Cask and the Mac App Store. See &lt;code&gt;brew bundle --help&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0089b5a32c590507ebc5a4d534fa46d01dda08f3" translate="yes" xml:space="preserve">
          <source>But be consistent within a single document</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2f2201ecd09717758020d1ab1efa3d4273b8554" translate="yes" xml:space="preserve">
          <source>By default packages that require BLAS/LAPACK linear algebra interfaces should link to &lt;a href=&quot;https://www.openblas.net/&quot;&gt;OpenBLAS&lt;/a&gt; using &lt;code&gt;depends_on &quot;openblas&quot;&lt;/code&gt; and passing &lt;code&gt;-DBLA_VENDOR=OpenBLAS&lt;/code&gt; to CMake (applies to CMake based formula only) rather than Apple&amp;rsquo;s Accelerate framework, or the default reference lapack implementation. Apple&amp;rsquo;s implementation of BLAS/LAPACK is outdated and may introduce hard-to-debug problems. The reference &lt;code&gt;lapack&lt;/code&gt; formula is fine, although it is not actively maintained or tuned. For this reason, formulae needing BLAS/LAPACK should link with OpenBLAS.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d561281ad26debde10330b3ff838d725b27d4c91" translate="yes" xml:space="preserve">
          <source>By default, &lt;code&gt;uses&lt;/code&gt; shows all formulae that specify &lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt; as a required or recommended dependency.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44e26d2aeed140d096f19a03056f300591b34237" translate="yes" xml:space="preserve">
          <source>By default, &lt;code&gt;uses&lt;/code&gt; shows usage of &lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt; by stable builds.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73605df8c1e8e0542fe83cc2cd05e409608ec801" translate="yes" xml:space="preserve">
          <source>By default, bottles will be built for the oldest CPU supported by the OS/architecture you&amp;rsquo;re building for (Core 2 for 64-bit OSs). This ensures that bottles are compatible with all computers you might distribute them to. If you &lt;em&gt;really&lt;/em&gt; want your bottles to be optimized for something else, you can pass the &lt;code&gt;--bottle-arch=&lt;/code&gt; option to build for another architecture; for example, &lt;code&gt;brew install foo --build-bottle --bottle-arch=penryn&lt;/code&gt;. Just remember that if you build for a newer architecture some of your users might get binaries they can&amp;rsquo;t run and that would be sad!</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6e9dbad74806f6475aa17c42346342773bc28d2" translate="yes" xml:space="preserve">
          <source>By default, version information is displayed in interactive shells, and suppressed otherwise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83f7df5c1cb3bbb2c5aa0e4da571b50f5041ba4e" translate="yes" xml:space="preserve">
          <source>C++ Standard Libraries</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="710d29c7505c1572481073da112d0cf51ff1e5f8" translate="yes" xml:space="preserve">
          <source>COMMANDS</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2a7554fbc437080e675167bf66edfe879daac52" translate="yes" xml:space="preserve">
          <source>CUSTOM EXTERNAL COMMANDS</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c44c756a1d4b4bdbfa96ea7ba683c4158f41ade" translate="yes" xml:space="preserve">
          <source>Can I edit formulae myself?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b876336e0cef9cd7293808e17c3062c0938587d3" translate="yes" xml:space="preserve">
          <source>Can I install my own stuff to &lt;code&gt;/usr/local&lt;/code&gt;?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7207f78425be8a3c3eeec4adf11558335e424229" translate="yes" xml:space="preserve">
          <source>Can I make new formulae?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6f183fb34132767d41b3c3f33d3a972522296e7" translate="yes" xml:space="preserve">
          <source>Can install software to your home directory and so does not require &lt;em&gt;sudo&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42354ba88037d7a88466e5e90d37058b742589a9" translate="yes" xml:space="preserve">
          <source>Capitalise all list items if you want, even if they&amp;rsquo;re not complete sentences; just be consistent within each list, and preferably, throughout the whole page</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="611e0004201651d94d84acdc64ea2edd5901168b" translate="yes" xml:space="preserve">
          <source>Capitalise repository names to match the user and repository names on GitHub. Keep tap names in lower case.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9abbff88ea43d04264341c59fafcb48e7052099" translate="yes" xml:space="preserve">
          <source>Capitalised proper nouns</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bcaa33a7ae44bd5042c37a9cdbea7f843b1cf7c8" translate="yes" xml:space="preserve">
          <source>Caveats</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ddf497c6f38258a23544e6ce8884705b83adbd5" translate="yes" xml:space="preserve">
          <source>Cellar (&lt;code&gt;cellar&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df193b9a4f534e2af136c9a41a25026a43c5fcfb" translate="yes" xml:space="preserve">
          <source>Change to the directory containing Homebrew formulae:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a3f73e50fe9c5d9dad4e788b8dd4553a7b866f1" translate="yes" xml:space="preserve">
          <source>Change to the directory containing your Homebrew installation:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="596271547b9c31a6459912f14ddeac4a4d9a52c6" translate="yes" xml:space="preserve">
          <source>Changing your &lt;code&gt;PATH&lt;/code&gt; using that command ensures the change only exists for the duration of that shell session. Once you are no longer in that session, the &lt;code&gt;PATH&lt;/code&gt; reverts to the prior state.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c92b6213e765d08614e1108acb63b262aa8fea32" translate="yes" xml:space="preserve">
          <source>Check &lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt; for Homebrew coding style violations. This should be run before submitting a new formula. Will exit with a non-zero status if any errors are found, which can be useful for implementing pre-commit hooks. If no &lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt; are provided, all of them are checked.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c320344f8d26e9e2ed891192a027e530fe7b4cf" translate="yes" xml:space="preserve">
          <source>Check for common issues</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afcfb98a2d3b70a1feaabef4bd81582516160a07" translate="yes" xml:space="preserve">
          <source>Check for dependencies</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1dd555ed1914dfbad6baeb9232d2a6903cd43a06" translate="yes" xml:space="preserve">
          <source>Check formulae or files for conformance to Homebrew style guidelines.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ef19abace31804c962ce0e1a88d0e6aaeb94df2" translate="yes" xml:space="preserve">
          <source>Check if the formula you are updating is a dependency for any other formulae by running &lt;code&gt;brew uses &amp;lt;formula&amp;gt;&lt;/code&gt;. If it is a dependency, run &lt;code&gt;brew reinstall&lt;/code&gt; for all the dependencies after it is installed and verify they work correctly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a300ebf156e309ecc602572e395c14f89eb25d9a" translate="yes" xml:space="preserve">
          <source>Check if there is a new upstream version of a formula. See the &lt;a href=&quot;https://github.com/Homebrew/homebrew-livecheck/blob/master/README.md&quot;&gt;&lt;code&gt;README&lt;/code&gt;&lt;/a&gt; for more info and usage.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4eb6a2dbdf4cd8b879d06184591c2c58e75ba22" translate="yes" xml:space="preserve">
          <source>Check out &lt;a href=&quot;homebrew-on-linux&quot;&gt;the Homebrew on Linux installation documentation&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="875146f92f7f3a24e3c3b9f38de2630328d216ea" translate="yes" xml:space="preserve">
          <source>Check out the &lt;code&gt;master&lt;/code&gt; branch:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a15bb2cb15d4cd4b24363cddabb5277361f3afa" translate="yes" xml:space="preserve">
          <source>Check out what MacPorts and Fink do:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87e9aa0e5b7da29b4ba3bfcbd08d52979cedcedb" translate="yes" xml:space="preserve">
          <source>Check out your branch again:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9abd4f9306b06bc417546d92f8c1d9384734cd6d" translate="yes" xml:space="preserve">
          <source>Check the &lt;a href=&quot;https://github.com/homebrew/brew/pulls&quot;&gt;Homebrew/brew pull requests&lt;/a&gt; and &lt;a href=&quot;https://github.com/homebrew/brew/issues&quot;&gt;issues&lt;/a&gt; to see if there is anything pressing that needs to be fixed or merged before the next release. If so, fix and merge these changes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e6c17923f5d74dcfbebbeb5cbf4e93c361440f1" translate="yes" xml:space="preserve">
          <source>Check the build system</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3bfb78638fb1d75424f1479a6d97507aff5ca16c" translate="yes" xml:space="preserve">
          <source>Check the given &lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt; for missing dependencies. If no &lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt; are given, check all installed brews.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b09b4ec7f1849fef858ca43c1e5da5a4e086590" translate="yes" xml:space="preserve">
          <source>Check the library links for kegs of installed formulae. Raises an error if run on uninstalled formulae.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="423f925e41568a0021796cdb6e761652765539c4" translate="yes" xml:space="preserve">
          <source>Check the package&amp;rsquo;s &lt;code&gt;README&lt;/code&gt;. Does the package install with &lt;code&gt;./configure&lt;/code&gt;, &lt;code&gt;cmake&lt;/code&gt;, or something else? Delete the commented out &lt;code&gt;cmake&lt;/code&gt; lines if the package uses &lt;code&gt;./configure&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8dfd95150be0c20fb466eeda2938e963dabf0c7" translate="yes" xml:space="preserve">
          <source>Check the top of the e.g. &lt;code&gt;./configure&lt;/code&gt; output. Some configure scripts do not recognise e.g. &lt;code&gt;--disable-debug&lt;/code&gt;. If you see a warning about it, remove the option from the formula.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2e138cb44a3a62839fc5998ee391a03e5d806db" translate="yes" xml:space="preserve">
          <source>Check to see if the issue has been reported</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b44bd9661dc26ab0bfe07939979252225ae19b7" translate="yes" xml:space="preserve">
          <source>Check your system for potential problems. Doctor exits with a non-zero status if any potential problems are found. Please note that these warnings are just used to help the Homebrew maintainers with debugging if you file an issue. If everything you use Homebrew for is working fine: please don&amp;rsquo;t worry or file an issue; just ignore this.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1ce22fc4884f4e7679f353a8db26d0684f254a0" translate="yes" xml:space="preserve">
          <source>Checksum (&lt;code&gt;sha256&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c543deadca67f476118db1bda901ab0970117fa" translate="yes" xml:space="preserve">
          <source>Clang is the default C/C++ compiler on macOS (and has been for a long time). Software that doesn&amp;rsquo;t build with it hasn&amp;rsquo;t been adequately ported to macOS.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f4ed9ce21c23e3a135f0f3673cc5ccb265b211a" translate="yes" xml:space="preserve">
          <source>Collecting the OS version allows us to decide what versions of macOS to prioritise and support and identify build failures that occur only on single versions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2ccc5699fd8637d310a7856e7dce7bbd49532b5" translate="yes" xml:space="preserve">
          <source>Command Line Tools (CLT) for Xcode: &lt;code&gt;xcode-select --install&lt;/code&gt;, &lt;a href=&quot;https://developer.apple.com/downloads&quot;&gt;developer.apple.com/downloads&lt;/a&gt; or &lt;a href=&quot;https://itunes.apple.com/us/app/xcode/id497799835&quot;&gt;Xcode&lt;/a&gt;&lt;sup&gt;&lt;a href=&quot;#3&quot;&gt;3&lt;/a&gt;&lt;/sup&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2f68e48fb9920fb72b1cd62191b7b05339f3db0" translate="yes" xml:space="preserve">
          <source>Command types</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aee97edd2a89aaa08f9a4fb325f5a132c27f8e96" translate="yes" xml:space="preserve">
          <source>Commas</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a1873ab51c74e8b39327ee42dade7a407e5a22d" translate="yes" xml:space="preserve">
          <source>Commit</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="947e7b97bab7426e538ad2e316ff8cc01353ec17" translate="yes" xml:space="preserve">
          <source>Common Issues</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f87b5729607ca7ae6225bc161541aed4891ee426" translate="yes" xml:space="preserve">
          <source>Common Issues for Maintainers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0a4a94d4ea44ef7f33fe13625f75db025a9523d" translate="yes" xml:space="preserve">
          <source>Compiler selection</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f43c12e1b59750e7dd33a24ddf91fc08f7b0f3db" translate="yes" xml:space="preserve">
          <source>Concluding remarks</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="117ca20e53cabe8f604eec41aa3df14058a7f520" translate="yes" xml:space="preserve">
          <source>Configuring Completions in &lt;code&gt;bash&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cab3f8a9e42209f4a782350bda17df1d4b1be67a" translate="yes" xml:space="preserve">
          <source>Configuring Completions in &lt;code&gt;fish&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a7143811bd7ea6b815ac516925c93b2d2f8fefd" translate="yes" xml:space="preserve">
          <source>Configuring Completions in &lt;code&gt;zsh&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f57d20124b31599ae37ed78fd2086236d66b51c" translate="yes" xml:space="preserve">
          <source>Congratulations, you&amp;rsquo;ve moved a formula to a tap!</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62a7842bf23bcf1c00d3723550321c87bef59371" translate="yes" xml:space="preserve">
          <source>Cons: negative comments are common and people take this as a chance to complain about Homebrew (regardless of their usage)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fdd5f5dc6df4f2f7acb072423047d78e3645efdf" translate="yes" xml:space="preserve">
          <source>Consider adding evaluating the output in your dotfiles (e.g. &lt;code&gt;~/.profile&lt;/code&gt;) with &lt;code&gt;eval $(brew shellenv)&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f32187912966ae696462866d4538d29e93e7d16" translate="yes" xml:space="preserve">
          <source>Consider whether to submit it to other sources e.g. Hacker News, Reddit.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f66ec5e52609255d1b1c42190479896d204b2e7" translate="yes" xml:space="preserve">
          <source>Contains the SHA-256 hash of a bottle for a particular version of macOS.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a60a223c98b2c36522f0b7f89f57ae14e144678a" translate="yes" xml:space="preserve">
          <source>Contributors</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="874390641cb656a6a92196ce1104f746e3a54f87" translate="yes" xml:space="preserve">
          <source>Convenience tools</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c14933b757e63fd39113fe3e86f94cefa849b18" translate="yes" xml:space="preserve">
          <source>Core &lt;code&gt;brew&lt;/code&gt; code related pull request</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2156bcb852bc98dce96fbe3af021ea400afd4789" translate="yes" xml:space="preserve">
          <source>Create a Homebrew installation wherever you extract the tarball. Whichever &lt;code&gt;brew&lt;/code&gt; command is called is where the packages will be installed. You can use this as you see fit, e.g. a system set of libs in &lt;code&gt;/usr/local&lt;/code&gt; and tweaked formulae for development in &lt;code&gt;~/homebrew&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5afdd5f37fb90ff6eb0faea0a1760d7a4dc9a649" translate="yes" xml:space="preserve">
          <source>Create a commit to increment the revision of the formula. If no revision is present, &amp;ldquo;revision 1&amp;rdquo; will be added.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="797f1b37a14ce1af4e5c87ebd9ac5622fe7658a4" translate="yes" xml:space="preserve">
          <source>Create a new branch from the latest &lt;code&gt;master&lt;/code&gt; branch:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afd83cb14799014cd4e32e7c55d3f83b8b038cfd" translate="yes" xml:space="preserve">
          <source>Create a new issue on the &lt;a href=&quot;https://github.com/Homebrew/homebrew-core/issues/new/choose&quot;&gt;Homebrew/homebrew-core issue tracker&lt;/a&gt; or &lt;a href=&quot;https://github.com/Homebrew/linuxbrew-core/issues/new/choose&quot;&gt;Homebrew/linuxbrew-core issue tracker&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="129970b308fe32e467d81f3e4a26f03bc7233c48" translate="yes" xml:space="preserve">
          <source>Create a pull request to the corresponding tap deleting the old formula file, adding the new formula file, and adding it to &lt;code&gt;formula_renames.json&lt;/code&gt; with a commit message like &lt;code&gt;newack: renamed from ack&lt;/code&gt;. Use the canonical name (e.g. &lt;code&gt;ack&lt;/code&gt; instead of &lt;code&gt;user/repo/ack&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02d4ee035d3dece1df6b89918483457e04431d68" translate="yes" xml:space="preserve">
          <source>Create a pull request to the new tap adding the formula file as-is from the original tap. Fix any test failures that may occur due to the stricter requirements for new formulae than existing formula (e.g. &lt;code&gt;brew audit --strict&lt;/code&gt; must pass for that formula).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90549c50f3330cca39df3726349e5c2fbbacf339" translate="yes" xml:space="preserve">
          <source>Create a pull request to the original tap deleting the formula file and add it to &lt;code&gt;tap_migrations.json&lt;/code&gt; with a commit message like &lt;code&gt;gv: migrate to homebrew/core&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f272eb5255a90307ea4561b51faef5bfe6c392cd" translate="yes" xml:space="preserve">
          <source>Create a pull request to update a formula with a new URL or a new tag.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66986a6b5e894243cb6e9828d87ac111ff6a4030" translate="yes" xml:space="preserve">
          <source>Create an issue</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3dbcca8732f5a8388d50be2de8f7879d4884de0d" translate="yes" xml:space="preserve">
          <source>Create your pull request from a new branch</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef61b4bbe955d6710717ab6a7be873eb68b7cf3d" translate="yes" xml:space="preserve">
          <source>Creating a tap</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="518e4efe69388d0030975af803b4fccebe90ca66" translate="yes" xml:space="preserve">
          <source>Creating the diff</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e13e0554f557ba882751e261b5a60777b337bea6" translate="yes" xml:space="preserve">
          <source>Creation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1135a03f2d984031c2d840e31e1490d1b4d4094" translate="yes" xml:space="preserve">
          <source>Cross-compilers based on GCC will typically be &amp;ldquo;keg-only&amp;rdquo; and therefore not linked into the path by default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a9892524ceff732b3bcdb5f0d3e90e560dd733c" translate="yes" xml:space="preserve">
          <source>Custom GCC and Cross Compilers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ceecbea9d37250860e1b3086c61f32787e7e837" translate="yes" xml:space="preserve">
          <source>DESCRIPTION</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ce166fb5e233130dd1ccab65d5ab716895cba1a" translate="yes" xml:space="preserve">
          <source>DEVELOPER COMMANDS</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1180597894cf6c0db27abcbbcf4be09e2d1a72e1" translate="yes" xml:space="preserve">
          <source>Debian or Ubuntu</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="808d7dca8a74d84af27a2d6602c3d786de45fe1e" translate="yes" xml:space="preserve">
          <source>Default</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0562f32dc56f5c702810cbe010068ddd38dbd69a" translate="yes" xml:space="preserve">
          <source>Dependencies</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c919d23a5f2969b7978a543c52fb626df8a21b56" translate="yes" xml:space="preserve">
          <source>Depending on the change you want to make, you need to send the pull request to the appropriate one of Homebrew&amp;rsquo;s main repositories. If you want to submit a change to Homebrew core code (the &lt;code&gt;brew&lt;/code&gt; implementation), you should open the pull request on &lt;a href=&quot;https://github.com/Homebrew/brew&quot;&gt;Homebrew/brew&lt;/a&gt;. If you want to submit a change for a formula, you should open the pull request on the &lt;a href=&quot;https://github.com/Homebrew/homebrew-core&quot;&gt;homebrew/core&lt;/a&gt; tap or another &lt;a href=&quot;https://github.com/Homebrew&quot;&gt;official tap&lt;/a&gt;, based on the formula type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55f8ebc805e65b5b71ddafdae390e3be2bcd69af" translate="yes" xml:space="preserve">
          <source>Description</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fac074b8ffe9497e559ed18aed69093efc761db5" translate="yes" xml:space="preserve">
          <source>Detecting whether a &lt;code&gt;setup.py&lt;/code&gt; uses &lt;code&gt;setup()&lt;/code&gt; from setuptools or distutils is difficult, but we always need to pass this flag to setuptools-based scripts. &lt;code&gt;pip&lt;/code&gt; faces the same problem that we do and forces &lt;code&gt;setup()&lt;/code&gt; to use the setuptools version by loading a shim around &lt;code&gt;setup.py&lt;/code&gt; that imports setuptools before doing anything else. Since setuptools monkey-patches distutils and replaces its &lt;code&gt;setup&lt;/code&gt; function, this provides a single, consistent interface. We have borrowed this code and use it in &lt;code&gt;Language::Python.setup_install_args&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75984a1d5e06c71af856dc417a6912265bf9513a" translate="yes" xml:space="preserve">
          <source>Developer/Internal API Documentation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3bfccca7c4c207073fa10d1a04078e283d1a5afd" translate="yes" xml:space="preserve">
          <source>Did you &lt;code&gt;chown root /Applications/TextMate.app&lt;/code&gt;? Probably not. So is it that important to &lt;code&gt;chown root wget&lt;/code&gt;?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7016f1787ed4c288e6f2cfac50c915d8cd7a4a98" translate="yes" xml:space="preserve">
          <source>Directories with names that contain spaces. Homebrew itself can handle spaces, but many build scripts cannot.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2804d4d134feec74a23e45c507d5ae38d82446d" translate="yes" xml:space="preserve">
          <source>Display &lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt;&amp;rsquo;s name and one-line description. Formula descriptions are cached; the cache is created on the first search, making that search slower than subsequent ones.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ac03d6b30bfa0ae8c7ffcfffd1dce76c0da5dfa" translate="yes" xml:space="preserve">
          <source>Display Homebrew&amp;rsquo;s Cellar path. &lt;em&gt;Default:&lt;/em&gt;&lt;code&gt;$(brew --prefix)/Cellar&lt;/code&gt;, or if that directory doesn&amp;rsquo;t exist, &lt;code&gt;$(brew --repository)/Cellar&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7fbc8f4d6a720b26e92b39bb8c35e5130a85754" translate="yes" xml:space="preserve">
          <source>Display Homebrew&amp;rsquo;s download cache. See also &lt;code&gt;HOMEBREW_CACHE&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6329cdb3c3a5ff4a9f4bf3a4fd0a006886bcc812" translate="yes" xml:space="preserve">
          <source>Display Homebrew&amp;rsquo;s install path. &lt;em&gt;Default:&lt;/em&gt;&lt;code&gt;/usr/local&lt;/code&gt; on macOS and &lt;code&gt;/home/linuxbrew/.linuxbrew&lt;/code&gt; on Linux.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59c387a50274755e0c8dc3dc2d62dd9a4babbfac" translate="yes" xml:space="preserve">
          <source>Display brief statistics for your Homebrew installation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9cdd9dc0143adebd578b40adeaacb38af80cf4b5" translate="yes" xml:space="preserve">
          <source>Display detailed information about one or more provided &lt;em&gt;&lt;code&gt;tap&lt;/code&gt;&lt;/em&gt;. Display a brief summary of all installed taps if no &lt;em&gt;&lt;code&gt;tap&lt;/code&gt;&lt;/em&gt; are passed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db46d9d074578ac5fc2a81d078530d03a9169d17" translate="yes" xml:space="preserve">
          <source>Display install options specific to &lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4309e80482bd2c9c7ff06e7292007f52a2f22a8" translate="yes" xml:space="preserve">
          <source>Display the path to the file which is used when invoking &lt;code&gt;brew&lt;/code&gt;&lt;em&gt;&lt;code&gt;cmd&lt;/code&gt;&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03953fd12c0e83f9c7b54e69e2c02773b3ed0418" translate="yes" xml:space="preserve">
          <source>Display the path where a formula is located.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a642cb198129fa6f25238331ebec3ae5cfa2c0d" translate="yes" xml:space="preserve">
          <source>Display the source of &lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87383d1b9f73f4dd8f93046cefbe6745e60bb434" translate="yes" xml:space="preserve">
          <source>Display where Homebrew&amp;rsquo;s &lt;code&gt;.git&lt;/code&gt; directory is located.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e44520190aacef8e307f6da9f1fb8eb74138e35" translate="yes" xml:space="preserve">
          <source>Distribute (not to be confused with distutils) is an obsolete fork of setuptools. Distlib is a package maintained outside the standard library which is used by pip for some low-level packaging operations and is not relevant to most &lt;code&gt;setup.py&lt;/code&gt; users.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db35d31526082a9e534454863825087ac133e705" translate="yes" xml:space="preserve">
          <source>Distutils and pip use a &amp;ldquo;flat&amp;rdquo; installation hierarchy that installs modules as individual files under site-packages while &lt;code&gt;easy_install&lt;/code&gt; installs zipped eggs to site-packages instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d290ab5acfb87dddd21a4bcb22b0542b37290dcf" translate="yes" xml:space="preserve">
          <source>Distutils is a module in the Python standard library that provides developers a basic package management API. Setuptools is a module distributed outside the standard library that extends distutils. It is a convention that Python packages provide a &lt;code&gt;setup.py&lt;/code&gt; that calls the &lt;code&gt;setup()&lt;/code&gt; function from either distutils or setuptools.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42743e19c67d0644a310ca5415c0518b51496566" translate="yes" xml:space="preserve">
          <source>Do &lt;code&gt;brew info python&lt;/code&gt; or &lt;code&gt;brew info python@2&lt;/code&gt; for precise information about the paths. Note, a brewed Python still searches for modules in &lt;code&gt;/Library/Python/X.Y/site-packages&lt;/code&gt; and also in &lt;code&gt;~/Library/Python/X.Y/lib/python/site-packages&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d0215b64d715c5aa2f818457396f02f5ed81468" translate="yes" xml:space="preserve">
          <source>Do not argue with Homebrew maintainers. You may disagree but unless they change their mind, please implement what they request. Ultimately they control what is included in Homebrew, as they have to support any changes that are made.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf1e14d195c1debfe3c1d9d6b165718756038c55" translate="yes" xml:space="preserve">
          <source>Do not continue discussion in closed pull requests.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e9cf3221a30246219863f1d2366e36cb580debc" translate="yes" xml:space="preserve">
          <source>Documentation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7deaf45267db90d1c1defcd99a94899e306a645a" translate="yes" xml:space="preserve">
          <source>Don&amp;rsquo;t follow the advice here but fix by using &lt;code&gt;Language::Python.setup_install_args&lt;/code&gt; in the formula as described in &lt;a href=&quot;python-for-formula-authors&quot;&gt;Python for Formula Authors&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fb9ce6f3b50d52d36fc4051f30719a97d0427b7" translate="yes" xml:space="preserve">
          <source>Don&amp;rsquo;t forget Homebrew is all Git underneath! &lt;a href=&quot;how-to-create-and-maintain-a-tap&quot;&gt;Maintain your own tap&lt;/a&gt; if you have to!</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61309e53b674c52bf095adc9d16b5bfeece0d876" translate="yes" xml:space="preserve">
          <source>Don&amp;rsquo;t make your formula build an &lt;code&gt;.app&lt;/code&gt; (native macOS Application); we don&amp;rsquo;t want those things in Homebrew. Encourage upstream projects to build and support a &lt;code&gt;.app&lt;/code&gt; that can be distributed by &lt;a href=&quot;https://github.com/Homebrew/homebrew-cask&quot;&gt;homebrew/cask&lt;/a&gt; (and used without it, too).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87ee1041742e431df823681ec08f6029aa2004e1" translate="yes" xml:space="preserve">
          <source>Double-check for dependencies</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42aa0f68a42bb1fb8709cb7e6d04e52424f0ab05" translate="yes" xml:space="preserve">
          <source>Download URL</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53ce75ae0353276f7d54107f064c8702370a1497" translate="yes" xml:space="preserve">
          <source>Download the &lt;a href=&quot;https://raw.githubusercontent.com/Homebrew/install/master/uninstall&quot;&gt;uninstall script&lt;/a&gt; and run &lt;code&gt;./uninstall --help&lt;/code&gt; to view more uninstall options.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc2b6445379216d5becb76d91882d93b7738d2fd" translate="yes" xml:space="preserve">
          <source>Download the file and drop it in &lt;code&gt;~/Library/Caches/Homebrew&lt;/code&gt;, but watch the file name. Homebrew downloads files as &lt;code&gt;&amp;lt;formula&amp;gt;-&amp;lt;version&amp;gt;&lt;/code&gt;. In the case of Erlang, this requires renaming the file from &lt;code&gt;otp_src_R13B03&lt;/code&gt; to &lt;code&gt;erlang-R13B03&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a04f883fdcdaa5b841bc357b5b1966f0f9a093ff" translate="yes" xml:space="preserve">
          <source>Download the source packages for the given &lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt;. For tarballs, also print SHA-256 checksums.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="860eb4de0bbf0d6af5806d85169d3edc22841940" translate="yes" xml:space="preserve">
          <source>Dupes in &lt;code&gt;homebrew/core&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15d54da16fed3cc2ae89bbdaf9ad9e1b0ec1df2c" translate="yes" xml:space="preserve">
          <source>ENVIRONMENT</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b33c3801d541763c7bdc9517ac6b20f3537370dc" translate="yes" xml:space="preserve">
          <source>ESSENTIAL COMMANDS</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a32c66b4f1ac13712e7f6300d5afb69ac0ef1b7" translate="yes" xml:space="preserve">
          <source>Each &lt;em&gt;&lt;code&gt;patch&lt;/code&gt;&lt;/em&gt; may be the number of a PR in &lt;code&gt;homebrew/core&lt;/code&gt;, the URL of a PR on GitHub, the URL of a commit on GitHub or a &amp;ldquo;https://jenkins.brew.sh/job/&amp;hellip;&amp;rdquo; testing job URL.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bca545aa3e494c4da44c8532ffc06529c5f36504" translate="yes" xml:space="preserve">
          <source>Editor plugins</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d89a5ec1140ce5dd978c2baf15972fdf48b8b61f" translate="yes" xml:space="preserve">
          <source>Emacs</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f8ada2a6dfaba33b145e945f0a442aee6152059" translate="yes" xml:space="preserve">
          <source>Embedded (&lt;strong&gt;END&lt;/strong&gt;) patches can be declared like so:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17f1688a049f2b2a29d6af4dac2d57cf390fc922" translate="yes" xml:space="preserve">
          <source>Ensure you reference any relevant GitHub issue, e.g. &lt;code&gt;Closes #12345&lt;/code&gt; in the commit message. Homebrew&amp;rsquo;s history is the first thing future contributors will look to when trying to understand the current state of formulae they&amp;rsquo;re interested in.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9dec5c45e72627fb72c648339bbd337bce81e3d" translate="yes" xml:space="preserve">
          <source>Enter the interactive Homebrew Ruby shell.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b7ad72e5de0fd665821206e3fe27981c8e8a173" translate="yes" xml:space="preserve">
          <source>Even if all criteria are met we may not accept the formula. Documentation tends to lag behind current decision-making. Although some rejections may seem arbitrary or strange they are based on years of experience making Homebrew work acceptably for our users.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8989c4c50538b81de4e2998e00a8f2d5ad66b25" translate="yes" xml:space="preserve">
          <source>Eventually a new version of the software will be released. In this case you should update the &lt;a href=&quot;https://rubydoc.brew.sh/Formula#url-class_method&quot;&gt;&lt;code&gt;url&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://rubydoc.brew.sh/Formula#sha256%3D-class_method&quot;&gt;&lt;code&gt;sha256&lt;/code&gt;&lt;/a&gt;. If a &lt;a href=&quot;https://rubydoc.brew.sh/Formula#revision%3D-class_method&quot;&gt;&lt;code&gt;revision&lt;/code&gt;&lt;/a&gt; line exists outside any &lt;code&gt;bottle do&lt;/code&gt; block &lt;em&gt;and&lt;/em&gt; the new release is stable rather than devel, it should be removed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1cf753bd41a7ad989cf8bf9884be807ce6086d3" translate="yes" xml:space="preserve">
          <source>Everything is built on Git, so contribution is easy:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f01ed56a1e32a05e5ef96e4d779f34784af9a96" translate="yes" xml:space="preserve">
          <source>Example</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb01bf04c9a0e8a71c45816513df424f1c7ffedb" translate="yes" xml:space="preserve">
          <source>Examples</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5517646ddce7af783d545b9391908869b83222c9" translate="yes" xml:space="preserve">
          <source>External &lt;a href=&quot;https://rubydoc.brew.sh/Formula#patch-class_method&quot;&gt;&lt;code&gt;patch&lt;/code&gt;&lt;/a&gt;es can be declared using resource-style blocks:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7a427d09b892f08dcfec10acd83caef4a9f48cc" translate="yes" xml:space="preserve">
          <source>External Commands</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2afc52a5487070e7f44ad2102a4faed361851af4" translate="yes" xml:space="preserve">
          <source>External commands</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dfe9fc056dcbf11ff2c43afc315a6eaf159c20ce" translate="yes" xml:space="preserve">
          <source>External commands come in two flavours: Ruby commands and shell scripts.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac85d28f9a7ae98355f724bfd3707a3ce184c2bc" translate="yes" xml:space="preserve">
          <source>Extract or &lt;code&gt;git clone&lt;/code&gt; Homebrew wherever you want. Use &lt;code&gt;/home/linuxbrew/.linuxbrew&lt;/code&gt; if possible (to enabled the use of binary packages).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03688ba6aa340b87549088aa5739944cb6b1dc73" translate="yes" xml:space="preserve">
          <source>FAQ</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc338f87a058158eb824b53705961801516a9460" translate="yes" xml:space="preserve">
          <source>Features</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b8f6a35b48a0afa1f1e1c73e07a3e281de4c8ec" translate="yes" xml:space="preserve">
          <source>Fedora, CentOS, or Red Hat</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e45d17c936d01e458fc669f63e00d92a281df8f8" translate="yes" xml:space="preserve">
          <source>Fetch the newest version of Homebrew and all formulae from GitHub using &lt;code&gt;git&lt;/code&gt;(1) and perform any necessary migrations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e364f6fc295ed2cd497729768044134cc61a9f80" translate="yes" xml:space="preserve">
          <source>Fetches and resets Homebrew and all tap repositories (or any specified &lt;code&gt;repository&lt;/code&gt;) using &lt;code&gt;git&lt;/code&gt;(1) to their latest &lt;code&gt;origin/master&lt;/code&gt;. Note this will destroy all your uncommitted or committed changes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d635760e4d07173504cf1ca672836f14b9162419" translate="yes" xml:space="preserve">
          <source>File level operations</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="350755f19aa17c25480857074207ac40c955f395" translate="yes" xml:space="preserve">
          <source>Fill in the &lt;code&gt;homepage&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b008f55b79c48133809609724a204592a493c8fe" translate="yes" xml:space="preserve">
          <source>First update the formulae and Homebrew itself:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a2870827d04edfab10a41e5b622034be89ea2b2" translate="yes" xml:space="preserve">
          <source>Firstly, the overall environment in which Homebrew runs is filtered to avoid environment contamination breaking from-source builds (&lt;a href=&quot;https://github.com/Homebrew/brew/issues/932&quot;&gt;https://github.com/Homebrew/brew/issues/932&lt;/a&gt;). In particular, this process filters all but the given whitelisted variables, but allows environment variables prefixed with &lt;code&gt;HOMEBREW_&lt;/code&gt;. The specific implementation can be seen in &lt;a href=&quot;https://github.com/Homebrew/brew/blob/master/bin/brew&quot;&gt;&lt;code&gt;bin/brew&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10348ebb48f3919a14bb18d61c9cc4f145fbc59a" translate="yes" xml:space="preserve">
          <source>Follow the &lt;em&gt;Next steps&lt;/em&gt; instructions to add Homebrew to your &lt;code&gt;PATH&lt;/code&gt; and to your bash shell profile script, either &lt;code&gt;~/.profile&lt;/code&gt; on Debian/Ubuntu or &lt;code&gt;~/.bash_profile&lt;/code&gt; on CentOS/Fedora/RedHat.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e7e119be0f50a4418678899b476d6da27570604" translate="yes" xml:space="preserve">
          <source>Following a macOS upgrade it may be necessary to reinstall the Xcode Command Line Tools and &lt;code&gt;brew upgrade&lt;/code&gt; all installed formula:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c74f4e20782c04b47841a97e53673eaf0674b705" translate="yes" xml:space="preserve">
          <source>Following up</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9bb511e207d3ed75e3d610536ab18b9858aa35bb" translate="yes" xml:space="preserve">
          <source>For brewed Python, modules installed with &lt;code&gt;pip&lt;/code&gt; or &lt;code&gt;python setup.py install&lt;/code&gt; will be installed to the &lt;code&gt;$(brew --prefix)/lib/pythonX.Y/site-packages&lt;/code&gt; directory (explained above). Executable Python scripts will be in &lt;code&gt;$(brew --prefix)/bin&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9d71f14ab435b9afd1d312a01617b2d3309c633" translate="yes" xml:space="preserve">
          <source>For example, Ruby 1.9&amp;rsquo;s gems should be installed to &lt;code&gt;var/lib/ruby/&lt;/code&gt; so that gems don&amp;rsquo;t need to be reinstalled when upgrading Ruby. You can usually do this with symlink trickery, or (ideally) a configure option.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6207ba9ba1fdb8b6668983a1873ef54cbd3b894a" translate="yes" xml:space="preserve">
          <source>For example, a job which has been queued but not yet completed will have a section in the pull request that looks like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5cced2d9e9520c91541ef1101e5665f4dcb244d" translate="yes" xml:space="preserve">
          <source>For example, see the &lt;a href=&quot;https://github.com/Homebrew/homebrew-services/blob/a58a1fe9145de4e50e1cbfb5b0e8a30087826393/cmd/brew-services.rb#L1-L23&quot;&gt;header of &lt;code&gt;brew-services.rb&lt;/code&gt;&lt;/a&gt; which is output with &lt;code&gt;brew services --help&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bda0996e26c78a93315e5df54bce79eb9bf3990d" translate="yes" xml:space="preserve">
          <source>For example, to use an unauthenticated HTTP or SOCKS5 proxy:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc7d189950768dc70cb6106320597e841f18b372" translate="yes" xml:space="preserve">
          <source>For most applications, all you will need to write is:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd76775c5d7d588a1a183b2ec1782c6547492fe7" translate="yes" xml:space="preserve">
          <source>For the full command list, see the &lt;a href=&quot;#commands&quot;&gt;COMMANDS&lt;/a&gt; section.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="041a5dec481d6bf0724caeaa84bc135d7d9062d4" translate="yes" xml:space="preserve">
          <source>Format</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d88150e031b8d1c699e0357add65ebfe7b37b502" translate="yes" xml:space="preserve">
          <source>Former maintainers with significant contributions include JCount, commitay, Dominyk Tiller, Tim Smith, Baptiste Fontaine, Xu Cheng, Martin Afanasjew, Brett Koonce, Charlie Sharpsteen, Jack Nagel, Adam Vandenberg, Andrew Janke, Alex Dunn, neutric, Tomasz Pajor, Uladzislau Shablinski, Alyssa Ross, ilovezfs and Homebrew&amp;rsquo;s creator: Max Howell.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76d74fcdb71ff21e5c7cc68e90ab0ce8298925ed" translate="yes" xml:space="preserve">
          <source>Formula Cookbook</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="164ae4c677e73b156fb4524a41eab70a9d5d9c52" translate="yes" xml:space="preserve">
          <source>Formula DSL</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e0de3c5a0823252f05a90f96b0f8e7915566054" translate="yes" xml:space="preserve">
          <source>Formula requiring MPI should use &lt;a href=&quot;https://www.open-mpi.org/&quot;&gt;OpenMPI&lt;/a&gt; by adding &lt;code&gt;depends_on &quot;open-mpi&quot;&lt;/code&gt; to the formula, rather than &lt;a href=&quot;https://www.mpich.org/&quot;&gt;MPICH&lt;/a&gt;. These packages have conflicts and provide the same standardized interfaces. Choosing a default implementation and requiring it to be adopted allows software to link against multiple libraries that rely on MPI without creating un-anticipated incompatibilities due to differing MPI runtimes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1d4b5975642a64fe7542b334bb6ae65fd98156a" translate="yes" xml:space="preserve">
          <source>Formula with duplicate names</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3580d09697ff61ff9f2421058ac2acb857df9fe9" translate="yes" xml:space="preserve">
          <source>Formulae Versions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cefc3112aa91d0a8133af546b75253bf85712914" translate="yes" xml:space="preserve">
          <source>Formulae can specify alternate downloads for the upstream project&amp;rsquo;s &lt;a href=&quot;https://rubydoc.brew.sh/Formula#head-class_method&quot;&gt;&lt;code&gt;head&lt;/code&gt;&lt;/a&gt; (&lt;code&gt;master&lt;/code&gt;/&lt;code&gt;trunk&lt;/code&gt;) or &lt;a href=&quot;https://rubydoc.brew.sh/Formula#devel-class_method&quot;&gt;&lt;code&gt;devel&lt;/code&gt;&lt;/a&gt; release (unstable but not &lt;code&gt;master&lt;/code&gt;/&lt;code&gt;trunk&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0cc2e6eb2ce31c04e0bb5ef092fb782edd86cd02" translate="yes" xml:space="preserve">
          <source>Formulae for apps that require Python 3 &lt;strong&gt;should&lt;/strong&gt; declare an unconditional dependency on &lt;code&gt;&quot;python&quot;&lt;/code&gt;. These apps &lt;strong&gt;must&lt;/strong&gt; work with the current Homebrew Python 3.x formula.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="292613c6780e458958769978d0c2a3bd7e719208" translate="yes" xml:space="preserve">
          <source>Formulae in the core repository must have a stable version tagged by the upstream project. Tarballs are preferred to Git checkouts, and tarballs should include the version in the filename whenever possible.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b00903dd0080d31b6f7459c443f58974cd8c8e1b" translate="yes" xml:space="preserve">
          <source>Formulae related pull request</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2619e6e6cf7ea07e602f411bfa784f7bf711ef4c" translate="yes" xml:space="preserve">
          <source>Formulae revisions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6318a14a3edd5de52204ff95aff31e7cea3415e" translate="yes" xml:space="preserve">
          <source>Formulae that declare an unconditional dependency on the &lt;code&gt;&quot;python&quot;&lt;/code&gt; or &lt;code&gt;&quot;python@2&quot;&lt;/code&gt; formulae are bottled against Homebrew&amp;rsquo;s Python 3.x or 2.7.x and require it to be installed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ddb0e30c5fcd4b71b0b5d789603fd1168d538974" translate="yes" xml:space="preserve">
          <source>Formulae that depend on versioned formulae must not depend on the same formulae at two different versions twice in their recursive dependencies. For example, if you depend on &lt;code&gt;openssl@1.0&lt;/code&gt; and &lt;code&gt;foo&lt;/code&gt;, and &lt;code&gt;foo&lt;/code&gt; depends on &lt;code&gt;openssl&lt;/code&gt; then you must instead use &lt;code&gt;openssl&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3f0de58c24fd08aad88ca0d5c72e8a6e3685a28" translate="yes" xml:space="preserve">
          <source>Fortran</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d790b402d79ac1a723c790313bcd679999474630" translate="yes" xml:space="preserve">
          <source>Frequently Asked Questions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1428e27956616ddbe464815d397792bb674af568" translate="yes" xml:space="preserve">
          <source>Further down the rabbit hole</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42eb2e107155f1cad20da46b5d8c2f9a4a858b4c" translate="yes" xml:space="preserve">
          <source>GLOBAL OPTIONS</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a08bbc6cec2e6ec827c06bd9cd119cda125b211" translate="yes" xml:space="preserve">
          <source>GUI apps on macOS don&amp;rsquo;t have &lt;code&gt;/usr/local/bin&lt;/code&gt; in their &lt;code&gt;PATH&lt;/code&gt; by default. If you&amp;rsquo;re on Mountain Lion or later, you can fix this by running &lt;code&gt;sudo launchctl config user path &quot;/usr/local/bin:$PATH&quot;&lt;/code&gt; and then rebooting, as documented in &lt;code&gt;man launchctl&lt;/code&gt;. Note that this sets the launchctl PATH for &lt;em&gt;all users&lt;/em&gt;. For earlier versions of macOS, see &lt;a href=&quot;https://developer.apple.com/legacy/library/qa/qa1067/_index.html&quot;&gt;this page&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3dc07b1bdf44f3e8f05a8da8ac9e74418d9a6e4" translate="yes" xml:space="preserve">
          <source>Gems, Eggs and Perl Modules</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64c60bb6f3cea1e762e5c09996bfdd3b92752d2c" translate="yes" xml:space="preserve">
          <source>General elections will be held at the AGM.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ceaa36d4b4a18d0cc0e8b640e8df89aa28d3712" translate="yes" xml:space="preserve">
          <source>Generally we&amp;rsquo;d rather you were specific about what files or directories need to be installed rather than installing everything.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d36ea04771fcd0359bb5d6f7b2d125eb2d74336" translate="yes" xml:space="preserve">
          <source>Generate Homebrew&amp;rsquo;s manpages.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7c7ff09edc0960e7165bbea3febf22a148439bf" translate="yes" xml:space="preserve">
          <source>Generate a bottle (binary package) from a formula that was installed with &lt;code&gt;--build-bottle&lt;/code&gt;. If the formula specifies a rebuild version, it will be incremented in the generated DSL. Passing &lt;code&gt;--keep-old&lt;/code&gt; will attempt to keep it at its original value, while &lt;code&gt;--no-rebuild&lt;/code&gt; will remove it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5114be8c648dba2f78026dabf61d573f02127191" translate="yes" xml:space="preserve">
          <source>Generate a formula for the downloadable file at &lt;em&gt;&lt;code&gt;URL&lt;/code&gt;&lt;/em&gt; and open it in the editor. Homebrew will attempt to automatically derive the formula name and version, but if it fails, you&amp;rsquo;ll have to make your own template. The &lt;code&gt;wget&lt;/code&gt; formula serves as a simple example. For the complete API, see: &lt;a href=&quot;http://www.rubydoc.info/github/Homebrew/brew/master/Formula&quot;&gt;http://www.rubydoc.info/github/Homebrew/brew/master/Formula&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="142775e707705cdc022c698e08bceebc25122251" translate="yes" xml:space="preserve">
          <source>Generate the template files for a new tap.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40b59f7283e608435889f8844f8463e169083ff6" translate="yes" xml:space="preserve">
          <source>Get a patch from a GitHub commit or pull request and apply it to Homebrew. Optionally, publish updated bottles for the formulae changed by the patch.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="294e43a6a8a5d6b8f341bedc722b814ff8ed7544" translate="yes" xml:space="preserve">
          <source>GitHub Flavoured Markdown. GitHub&amp;rsquo;s implementation is the standard, period.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45a179734201553734cc58b1bfabcfed6fcd437c" translate="yes" xml:space="preserve">
          <source>Give your issue a descriptive title which includes the formula name (if applicable) and the version of macOS or Linux you are using. For example, if a formula fails to build, title your issue &amp;ldquo;&amp;lt;formula&amp;gt; failed to build on &amp;lt;10.x&amp;gt;&amp;rdquo;, where &amp;ldquo;&amp;lt;formula&amp;gt;&amp;rdquo; is the name of the formula that failed to build, and &amp;ldquo;&amp;lt;10.x&amp;gt;&amp;rdquo; is the version of macOS or Linux you are using.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c22ffc465079803c44d254fbf4dbc6e08676f73" translate="yes" xml:space="preserve">
          <source>Giving style and usage feedback on a PR or commit that involves documents is okay and encouraged. But keep in mind that these are just guidelines, and for any change, the author may have made a deliberate choice to break these rules in the interest of understandability or aesthetics.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="066c942e66eca88d1821b667e6d6020ba7680eed" translate="yes" xml:space="preserve">
          <source>Go to the relevant repository (e.g. &lt;a href=&quot;https://github.com/Homebrew/brew&quot;&gt;https://github.com/Homebrew/brew&lt;/a&gt;, &lt;a href=&quot;https://github.com/Homebrew/homebrew-core&quot;&gt;https://github.com/Homebrew/homebrew-core&lt;/a&gt;, etc.) and create a pull request to request review and merging of the commits in your pushed branch. Explain why the change is needed and, if fixing a bug, how to reproduce the bug. Make sure you have done each step in the checklist that appears in your new PR.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8db6d7a8cb6c9e5ac9ef993bc9fe824c145d201" translate="yes" xml:space="preserve">
          <source>Goals and audience</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="823619e079c311b099f1d0e427a584eafcd6ed06" translate="yes" xml:space="preserve">
          <source>Governance</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b963bc74972edb83e30b9e124890c73ad3fc2a1c" translate="yes" xml:space="preserve">
          <source>Grab the URL</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="141d1d74d8a6b3e7a7f1418ef539a53ce746ef34" translate="yes" xml:space="preserve">
          <source>Guidelines</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cffe08a9944511362b0a1c3a852308930a9bf7da" translate="yes" xml:space="preserve">
          <source>Habit maybe?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="141f1ec4b96fc544a83f129011bfa77895092bc0" translate="yes" xml:space="preserve">
          <source>Handling files that should persist over formula upgrades</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8ea7749b41b8f8f1261f53a93119bbfb3814eed" translate="yes" xml:space="preserve">
          <source>Have you created a real mess in Git which stops you from creating a commit you want to submit to us? You might want to consider starting again from scratch. Your changes can be reset to the Homebrew &lt;code&gt;master&lt;/code&gt; branch by running:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16632d119ac90816cdfcd29ca6b9c5a20fe2fc9f" translate="yes" xml:space="preserve">
          <source>Hiding the beer mug emoji when finishing a build</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90ccd6497400b5576aeca1bd94af74aae1e0a250" translate="yes" xml:space="preserve">
          <source>History</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b24cd4dd561003744f6839bba6f0b01af01e9c66" translate="yes" xml:space="preserve">
          <source>Homebrew</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59136d845cfcfca98ceafe4032d414a23ffaa240" translate="yes" xml:space="preserve">
          <source>Homebrew Documentation: &lt;a href=&quot;https://docs.brew.sh&quot;&gt;https://docs.brew.sh&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96107946ccd1f78182e95e6c6c79229ae6814a6d" translate="yes" xml:space="preserve">
          <source>Homebrew Governance</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6e58356f19c13c48468e9fe9fb3ee8e9c02db50" translate="yes" xml:space="preserve">
          <source>Homebrew Shell Completion</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d22de123dd4380de06a3a67b3d7f7fbe8d7cf4a0" translate="yes" xml:space="preserve">
          <source>Homebrew analytics helps us maintainers and leaving it on is appreciated. However, if you want to opt out of Homebrew&amp;rsquo;s analytics, you can set this variable in your environment:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="031b13e10fa3a448c46f1ed4a4b3e7190906e9cb" translate="yes" xml:space="preserve">
          <source>Homebrew can run on 32-bit ARM (Raspberry Pi and others) and 64-bit ARM (AArch64), but no binary packages (bottles) are available. Support for ARM is on a best-effort basis. Pull requests are welcome to improve the experience on ARM platforms.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6863dff223468abcefd09a599748b4ec9b324279" translate="yes" xml:space="preserve">
          <source>Homebrew comes with completion definitions for the &lt;code&gt;brew&lt;/code&gt; command. Some packages also provide completion definitions for their own programs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2883f0abeb7d4083aa4da80ea692b58620f95a13" translate="yes" xml:space="preserve">
          <source>Homebrew depends on having an up-to-date version of Xcode because it comes with specific versions of build tools, e.g. &lt;code&gt;clang&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c530d3ce9c588e19ba65c4bbb4c9a7d72f575716" translate="yes" xml:space="preserve">
          <source>Homebrew does not currently support 32-bit x86 platforms. It would be possible for Homebrew to work on 32-bit x86 platforms with some effort. An interested and dedicated person could maintain a fork of Homebrew to develop support for 32-bit x86.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea3343d9af18de5be91fe4627add142585ec265a" translate="yes" xml:space="preserve">
          <source>Homebrew doesn&amp;rsquo;t package already-packaged language-specific libraries. These should be installed directly from &lt;code&gt;gem&lt;/code&gt;/&lt;code&gt;cpan&lt;/code&gt;/&lt;code&gt;pip&lt;/code&gt; etc.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8774af101215b3fefc296502e469a868f65c96f" translate="yes" xml:space="preserve">
          <source>Homebrew draws a distinction between Python &lt;strong&gt;applications&lt;/strong&gt; and Python &lt;strong&gt;libraries&lt;/strong&gt;. The difference is that users generally do not care that applications are written in Python; it is unusual that a user would expect to be able to &lt;code&gt;import foo&lt;/code&gt; after installing an application. Examples of applications are &lt;a href=&quot;https://github.com/Homebrew/homebrew-core/blob/master/Formula/ansible.rb&quot;&gt;&lt;code&gt;ansible&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://github.com/Homebrew/homebrew-core/blob/master/Formula/jrnl.rb&quot;&gt;&lt;code&gt;jrnl&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="625a3f10f05572784a8c3e217889e646aec570cd" translate="yes" xml:space="preserve">
          <source>Homebrew expects to find manual pages in &lt;code&gt;#{prefix}/share/man/...&lt;/code&gt;, and not in &lt;code&gt;#{prefix}/man/...&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44372df16aff7a20dbe7963212be661a0056c4de" translate="yes" xml:space="preserve">
          <source>Homebrew has begun gathering anonymous aggregate user behaviour analytics and reporting these to Google Analytics. You will be notified the first time you run &lt;code&gt;brew update&lt;/code&gt; or install Homebrew.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb37eade6344844056f9cff666e6aadf278d2286" translate="yes" xml:space="preserve">
          <source>Homebrew has multiple levels of environment variable filtering which affects variables available to formulae.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b53a5a2129c12a058c70949ce800dafde06c33ba" translate="yes" xml:space="preserve">
          <source>Homebrew has since stopped supporting &lt;em&gt;SHA1&lt;/em&gt; and &lt;em&gt;MD5&lt;/em&gt; entirely. &lt;em&gt;MD5&lt;/em&gt; checksums were removed from core formulae in 2012 and as of April 2015 installing a formula verified by &lt;em&gt;MD5&lt;/em&gt; is actively blocked.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb1e091fc99d6671fd16b357408c8780d16d6c68" translate="yes" xml:space="preserve">
          <source>Homebrew installs to the &lt;code&gt;Cellar&lt;/code&gt; and then symlinks some of the installation into &lt;code&gt;/usr/local&lt;/code&gt; so that other programs can see what&amp;rsquo;s going on. We suggest you &lt;code&gt;brew ls&lt;/code&gt; a few of the kegs in your Cellar to see how it is all arranged.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c19df62389a462b2b1907ee065878ef08574b275" translate="yes" xml:space="preserve">
          <source>Homebrew is a poor name, it&amp;rsquo;s too generic, why was it chosen?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abc323e18089c29e0c7d1dd90a2dd4f60102b58c" translate="yes" xml:space="preserve">
          <source>Homebrew is happy to accept applications that are built in Python, whether the apps are available from PyPI or not. Homebrew generally won&amp;rsquo;t accept libraries that can be installed correctly with &lt;code&gt;pip install foo&lt;/code&gt;. Bindings may be installed for packages that provide them, especially if equivalent functionality isn&amp;rsquo;t available through pip.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6de1f6ab06c5a47042fe0d73d90472dc7780b303" translate="yes" xml:space="preserve">
          <source>Homebrew is installed to a prefix other than the standard &lt;code&gt;/usr/local&lt;/code&gt; (although some bottles support this).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4a3484b9378e94a3153acd53e1e9e3be16117dc" translate="yes" xml:space="preserve">
          <source>Homebrew is provided free of charge and run entirely by volunteers in their spare time. As a result, we do not have the resources to do detailed user studies of Homebrew users to decide on how best to design future features and prioritise current work. Anonymous aggregate user analytics allow us to prioritise fixes and features based on how, where and when people use Homebrew. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65a0680f8f0fa277d1f6950bb45dde7fd3fe43e3" translate="yes" xml:space="preserve">
          <source>Homebrew is the easiest and most flexible way to install the UNIX tools Apple didn&amp;rsquo;t include with macOS.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b847e198738b8c83a4967c1cfa49a7cfef9efc1" translate="yes" xml:space="preserve">
          <source>Homebrew members will comply with the Software Freedom Conservancy&amp;rsquo;s &lt;a href=&quot;https://sfconservancy.org/projects/policies/conflict-of-interest-policy.html&quot;&gt;conflict of interest policy&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c16737d592b7858ae25c02f5ca3d739aa3cb9f8" translate="yes" xml:space="preserve">
          <source>Homebrew members will meet at the annual general meeting (AGM) in a manner determined by the PLC.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b6e17cfda30349a14879da24b6c0efe5dd12f42" translate="yes" xml:space="preserve">
          <source>Homebrew offers anonymous download strategies.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b564b46be44830b11fc8929ae3885be5347058dd" translate="yes" xml:space="preserve">
          <source>Homebrew on Linux</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a43655b92e6d91af6f81d0ef37631c543145bc0a" translate="yes" xml:space="preserve">
          <source>Homebrew on Linux Community</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37d9eb415d2e64817560c348dffddf13ff7dc238" translate="yes" xml:space="preserve">
          <source>Homebrew organisation external commands</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b71674659a11a908d7a3becb61d9f951592f6f6" translate="yes" xml:space="preserve">
          <source>Homebrew provides a &lt;code&gt;gcc&lt;/code&gt; formula for use with Xcode 4.2+ or when needing C++11 support on earlier versions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4af748fb83e9d7f306a45a394e89a75b1d279448" translate="yes" xml:space="preserve">
          <source>Homebrew provides formulae to brew Python 3.x and a more up-to-date Python 2.7.x.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efb527c41b236fa82d6176544cbbf6cab3abe64a" translate="yes" xml:space="preserve">
          <source>Homebrew provides helper methods for instantiating and populating virtualenvs. You can use them by putting &lt;code&gt;include Language::Python::Virtualenv&lt;/code&gt; at the top of the &lt;code&gt;Formula&lt;/code&gt; class definition.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="297d3171e08b2c58109d59b0b3f67a155bd798d0" translate="yes" xml:space="preserve">
          <source>Homebrew provides older GCC formulae, e.g. &lt;code&gt;gcc@7&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="562b147c3bbafdc470f4ae4637b47bd84a90b5b6" translate="yes" xml:space="preserve">
          <source>Homebrew provides one formula for Python 3.x (&lt;code&gt;python&lt;/code&gt;) and another for Python 2.7.x (&lt;code&gt;python@2&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7822341dc4756096e7a8ded3a1b46bf39ef5b9b" translate="yes" xml:space="preserve">
          <source>Homebrew provides pre-compiled versions for many formulae. These pre-compiled versions are referred to as &lt;a href=&quot;bottles&quot;&gt;bottles&lt;/a&gt; and are available at &lt;a href=&quot;https://bintray.com/homebrew/bottles&quot;&gt;https://bintray.com/homebrew/bottles&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="354ab1e0614c947c91c39dcbd12a3e6035ac891d" translate="yes" xml:space="preserve">
          <source>Homebrew provides the LLVM Clang, which is bundled with the &lt;code&gt;llvm&lt;/code&gt; formula.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f1998377762b8b409533b99e1d797a1f5dbe74c" translate="yes" xml:space="preserve">
          <source>Homebrew provides two formula DSL methods for launchd plist files:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0729a8a3d3191e3fad0f467c1828a31424120f7b" translate="yes" xml:space="preserve">
          <source>Homebrew provides two helper methods in a &lt;code&gt;Language::Node&lt;/code&gt; module: &lt;code&gt;std_npm_install_args&lt;/code&gt; and &lt;code&gt;local_npm_install_args&lt;/code&gt;. They both set up the correct environment for npm and return arguments for &lt;code&gt;npm install&lt;/code&gt; for their specific use cases. Your formula should use these instead of invoking &lt;code&gt;npm install&lt;/code&gt; explicitly. The syntax for a standard Node module installation is:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6790ab4f49d72b8093da898ec51692bce0f8ec93" translate="yes" xml:space="preserve">
          <source>Homebrew refuses to work using sudo.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51a93ceeacd9962f23336fd5f7a8c8417906a396" translate="yes" xml:space="preserve">
          <source>Homebrew should work with any &lt;a href=&quot;https://stackoverflow.com/questions/2324208/is-there-any-difference-between-cpython-and-python&quot;&gt;CPython&lt;/a&gt; and defaults to the macOS system Python.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a46e4ed9793e78070c496261e16340391a55c075" translate="yes" xml:space="preserve">
          <source>Homebrew supports and recommends the latest Xcode and/or Command Line Tools available for your platform (see &lt;code&gt;OS::Mac::Xcode.latest_version&lt;/code&gt; and &lt;code&gt;OS::Mac::CLT.latest_version&lt;/code&gt; in &lt;a href=&quot;https://github.com/Homebrew/brew/blob/master/Library/Homebrew/os/mac/xcode.rb&quot;&gt;&lt;code&gt;Library/Homebrew/os/mac/xcode.rb&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27cc4575faca82c00bd01c31c48751b098d231ba" translate="yes" xml:space="preserve">
          <source>Homebrew terminology</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec99c4c71f6739452764a18f48aafa4663d3d390" translate="yes" xml:space="preserve">
          <source>Homebrew tries to automatically determine the &lt;a href=&quot;https://rubydoc.brew.sh/Formula#version-class_method&quot;&gt;&lt;code&gt;version&lt;/code&gt;&lt;/a&gt; from the &lt;a href=&quot;https://rubydoc.brew.sh/Formula#url-class_method&quot;&gt;&lt;code&gt;url&lt;/code&gt;&lt;/a&gt; to avoid duplication. If the tarball has an unusual name you may need to manually assign the &lt;a href=&quot;https://rubydoc.brew.sh/Formula#version-class_method&quot;&gt;&lt;code&gt;version&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc4b8b97d41998ddefdacd94e5b9df7631d31fff" translate="yes" xml:space="preserve">
          <source>Homebrew understands &lt;code&gt;git&lt;/code&gt;, &lt;code&gt;svn&lt;/code&gt;, and &lt;code&gt;hg&lt;/code&gt; URLs, and has a way to specify &lt;code&gt;cvs&lt;/code&gt; repositories as a URL as well. You can test whether the &lt;a href=&quot;https://rubydoc.brew.sh/Formula#head-class_method&quot;&gt;&lt;code&gt;head&lt;/code&gt;&lt;/a&gt; is being built with &lt;code&gt;build.head?&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a01b41d183f510b67b3b40a0cf62a56a72a13e7" translate="yes" xml:space="preserve">
          <source>Homebrew uses Git for downloading updates and contributing to the project.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19ac498ac758a2959033bdbd45c184bd23f93b15" translate="yes" xml:space="preserve">
          <source>Homebrew wants to maintain a consistent Ruby style across all formulae mostly based on &lt;a href=&quot;https://github.com/rubocop-hq/ruby-style-guide#the-ruby-style-guide&quot;&gt;Ruby Style Guide&lt;/a&gt;. Other formulae may not have been updated to match this guide yet but all new ones should. Also:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bfc7431e67c9bcfc3bd62c8261d10668cacf8dfe" translate="yes" xml:space="preserve">
          <source>Homebrew will try to guess the formula&amp;rsquo;s name from its URL. If it fails to do so you can override this with &lt;code&gt;brew create &amp;lt;URL&amp;gt; --set-name &amp;lt;name&amp;gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60fb24e9296a57015cf27dfc35f56054ce8a66d1" translate="yes" xml:space="preserve">
          <source>Homebrew&amp;rsquo;s &lt;code&gt;site-packages&lt;/code&gt; directory is first created if (1) any Homebrew formula with Python bindings are installed, or (2) upon &lt;code&gt;brew install python&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cdb42ccf577ea33bce2d8924759c18770f1a0606" translate="yes" xml:space="preserve">
          <source>Homebrew&amp;rsquo;s OpenSSL is &lt;a href=&quot;https://rubydoc.brew.sh/Formula#keg_only-class_method&quot;&gt;&lt;code&gt;keg_only&lt;/code&gt;&lt;/a&gt; to avoid conflicting with the system so sometimes formulae need to have environment variables set or special configuration flags passed to locate our OpenSSL. You can see this mechanism in the &lt;a href=&quot;https://github.com/Homebrew/homebrew-core/blob/89c4574ef1a6d15e92196637ff315a0a4bb3e289/Formula/clamav.rb#L37&quot;&gt;&lt;code&gt;clamav&lt;/code&gt;&lt;/a&gt; formula. Usually this is unnecessary because Homebrew sets up our &lt;a href=&quot;https://github.com/Homebrew/brew/blob/master/Library/Homebrew/extend/ENV/super.rb&quot;&gt;build environment&lt;/a&gt; to favour finding &lt;a href=&quot;https://rubydoc.brew.sh/Formula#keg_only-class_method&quot;&gt;&lt;code&gt;keg_only&lt;/code&gt;&lt;/a&gt; formulae first.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8647e5cf13e0e4572e892f9f9231cdbc34d88415" translate="yes" xml:space="preserve">
          <source>Homebrew&amp;rsquo;s Project Leader is Mike McQuaid.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="742a7bf0d29af6ea72b3e4c8c0a988e5348aa0de" translate="yes" xml:space="preserve">
          <source>Homebrew&amp;rsquo;s Project Leadership Committee is Misty De Meo, Shaun Jackman, Jonathan Chang, Mike McQuaid and Markus Reiter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ca90a174393bd7a80fda69af4d3e7d23127f995" translate="yes" xml:space="preserve">
          <source>Homebrew&amp;rsquo;s Technical Steering Committee is Michka Popoff, FX Coudert, Markus Reiter, Misty De Meo and Mike McQuaid.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31af9e328c6278bcb5b7f90ffa31c47b46d6369f" translate="yes" xml:space="preserve">
          <source>Homebrew&amp;rsquo;s analytics are sent throughout Homebrew&amp;rsquo;s execution to Google Analytics over HTTPS.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5e2144547f6b3d18f4422b9357aaffb410ebb0f" translate="yes" xml:space="preserve">
          <source>Homebrew&amp;rsquo;s analytics record some shared information for every event:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7bfc9c1ff2481afc52a688aa4b2abea42ce4f13a" translate="yes" xml:space="preserve">
          <source>Homebrew&amp;rsquo;s analytics records the following different events:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6bbf16deaf03b6d1633f6a477617cfc1e320b4f" translate="yes" xml:space="preserve">
          <source>Homebrew&amp;rsquo;s anonymous user and event data have a 14 month retention period. This is the &lt;a href=&quot;https://support.google.com/analytics/answer/7667196&quot;&gt;lowest possible value for Google Analytics&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02ae9b33e2dad9671fefb8f01f678a6bb4094671" translate="yes" xml:space="preserve">
          <source>Homebrew&amp;rsquo;s audience includes users with a wide range of education and experience, and users for whom English is not a native language. We aim to support as many of those users as feasible.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9b3606f62f1dafe8722b3ef71f49d6d498c55b8" translate="yes" xml:space="preserve">
          <source>Homebrew&amp;rsquo;s default behaviour automatically uninstalls old versions of a formula every 30 days.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e21f4c4fb9fdbbf0cfbbfebb4e1a043c8d208bdb" translate="yes" xml:space="preserve">
          <source>Homebrew&amp;rsquo;s other current maintainers are Claudia Pellegrino, Chongyu Zhu, Vitor Galvao, Gautham Goli, Steven Peters, William Woodruff, Igor Kapkov, Izaak Beekman, Sean Molenaar, Jan Viljanen, Jason Tedor, Eric Knibbe, Viktor Szakats, Thierry Moisan, Steven Peters, Tom Schoonjans and Issy Long.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4657e1fe91c9cf2c740432fc1886281a86790af" translate="yes" xml:space="preserve">
          <source>Homebrew&amp;rsquo;s versions are not intended to be used for any old versions you personally require for your project. You should create your own &lt;a href=&quot;how-to-create-and-maintain-a-tap&quot;&gt;tap&lt;/a&gt; for formulae you or your organisation wish to control the versioning of or those that do not meet the above standards. Software that has regular API or ABI breaking releases still needs to meet all the above requirements; that a &lt;code&gt;brew upgrade&lt;/code&gt; has broken something for you is not an argument for us to add and maintain a formula for you.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7872a1919920893d3cfbb890bec621c33e2cc74" translate="yes" xml:space="preserve">
          <source>Homebrew, like &lt;code&gt;git&lt;/code&gt;(1), supports external commands. These are executable scripts that reside somewhere in the &lt;code&gt;PATH&lt;/code&gt;, named &lt;code&gt;brew-&lt;/code&gt;&lt;em&gt;&lt;code&gt;cmdname&lt;/code&gt;&lt;/em&gt; or &lt;code&gt;brew-&lt;/code&gt;&lt;em&gt;&lt;code&gt;cmdname&lt;/code&gt;&lt;/em&gt;&lt;code&gt;.rb&lt;/code&gt;, which can be invoked like &lt;code&gt;brew&lt;/code&gt;&lt;em&gt;&lt;code&gt;cmdname&lt;/code&gt;&lt;/em&gt;. This allows you to create your own commands without modifying Homebrew&amp;rsquo;s internals.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d07df14b4d7eb8f09805c43c1d4ecaa5fdcd017" translate="yes" xml:space="preserve">
          <source>Homebrew, like Git, supports &lt;em&gt;external commands&lt;/em&gt;. This lets you create new commands that can be run like:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05adcc9dc76a84e36331fdc14d8a432a63c4e75f" translate="yes" xml:space="preserve">
          <source>Homebrew-provided Python bindings</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf10d7ac00c285af0ffd2b6cceed7a703c05f07b" translate="yes" xml:space="preserve">
          <source>Homebrew/brew&amp;rsquo;s Linux maintainers are Michka Popoff, Shaun Jackman and Issy Long.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65b9329bd66ffeb157760716947c6870d33ea102" translate="yes" xml:space="preserve">
          <source>Homebrew/linuxbrew-core on GitHub</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75c93e567e974e005b542e709d154ead45069e72" translate="yes" xml:space="preserve">
          <source>How Long?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9389d4f389149065608454896d4879895091f999" translate="yes" xml:space="preserve">
          <source>How To Build Software Outside Homebrew With Homebrew &lt;code&gt;keg_only&lt;/code&gt; dependencies</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3213a2ecb2a9c1484b0becf08277e900383599cf" translate="yes" xml:space="preserve">
          <source>How To Create (And Maintain) A Tap</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="452bde9cecc0b301b68dd57f206a4ba839f244e2" translate="yes" xml:space="preserve">
          <source>How To Open A Pull Request (and get it merged)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="067767e1e93969b4ba70d11b5d90a8cd94c37af7" translate="yes" xml:space="preserve">
          <source>How To Open a Homebrew Pull Request</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6742250ec4c38a11aabe94e08bff022ed031207f" translate="yes" xml:space="preserve">
          <source>How To Open a Homebrew Pull Request (and get it merged)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53663318d6446d53a95e4c9c07cf82ac34090b3e" translate="yes" xml:space="preserve">
          <source>How can I specify different configure arguments for a formula?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5604967ad5059e407a99b22ecf4c05dd40ddb9c" translate="yes" xml:space="preserve">
          <source>How do I contribute to Homebrew?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbcccd47252d22bd8aba1c8e46552b520882cc66" translate="yes" xml:space="preserve">
          <source>How do I get a formula from someone else&amp;rsquo;s branch?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5634f2b1eb5bc9e1233a422bb4c76a03d83c0804" translate="yes" xml:space="preserve">
          <source>How do I stop certain formulae from being updated?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="553ae9bb814e3f62ad1d97985c40251ae12db10b" translate="yes" xml:space="preserve">
          <source>How do I uninstall Homebrew?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0b1d83969e94eebb62d851c40bfe35689f57d0a" translate="yes" xml:space="preserve">
          <source>How do I uninstall a formula?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d454452d14127a3f2f083057beaa895dddae3a3f" translate="yes" xml:space="preserve">
          <source>How do I uninstall old versions of a formula?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e928202162f16cfc2f470143d0caad228302b4d" translate="yes" xml:space="preserve">
          <source>How do I update my local packages?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f02bc5ac6f8dd46e26f73f2bb819ef0945599627" translate="yes" xml:space="preserve">
          <source>How do I use those tools outside of Homebrew?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22cc1f65626d3a8483651adc6eda41cf05f4ff81" translate="yes" xml:space="preserve">
          <source>How to Create and Maintain a Tap</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9d429f8510b62fa50bc06c827146f1d0b612225" translate="yes" xml:space="preserve">
          <source>How to build software outside Homebrew with Homebrew &lt;code&gt;keg_only&lt;/code&gt; dependencies</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9a012b37e0c3d96d24fd9bb0f181f88bad4fa31" translate="yes" xml:space="preserve">
          <source>How to build software outside Homebrew with Homebrew keg_only dependencies</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94f60f7660faa455443dbb6dcdc19a5749f10af2" translate="yes" xml:space="preserve">
          <source>How to start over (reset to upstream &lt;code&gt;master&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0591571be5ecb580eaac67d1b0d3a5956f451d4" translate="yes" xml:space="preserve">
          <source>How to use these guidelines</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a592ebd85a69060d7634d9886b10816e9eb5584f" translate="yes" xml:space="preserve">
          <source>How?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3f1eed99b27a1b470955618838b7f709127cb81" translate="yes" xml:space="preserve">
          <source>However do yourself a favour and install to &lt;code&gt;/usr/local&lt;/code&gt;. Some things may not build when installed elsewhere. One of the reasons Homebrew just works relative to the competition is &lt;strong&gt;because&lt;/strong&gt; we recommend installing to &lt;code&gt;/usr/local&lt;/code&gt;. &lt;em&gt;Pick another prefix at your peril!&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec0399a187d45b914b5af29e1a3389253d4fcc9f" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;brew doctor&lt;/code&gt; still complains about uncommitted modifications, also run this command:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ee78ae47873afdeaf07141c2725c0e0e59e11c1" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;brew&lt;/code&gt; said &lt;code&gt;Warning: Version cannot be determined from URL&lt;/code&gt; when doing the &lt;code&gt;create&lt;/code&gt; step, you&amp;rsquo;ll need to explicitly add the correct &lt;a href=&quot;https://rubydoc.brew.sh/Formula#version-class_method&quot;&gt;&lt;code&gt;version&lt;/code&gt;&lt;/a&gt; to the formula and then save the formula.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed33dc08f91bb963e6a3c80a6c8771a14cae2b13" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;on&lt;/code&gt; or &lt;code&gt;off&lt;/code&gt; is passed, turn Homebrew&amp;rsquo;s analytics on or off respectively.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e99b1a200fc12e6ba02ff91cce62f23d88a3b84d" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;regenerate-uuid&lt;/code&gt; is passed, regenerate UUID used in Homebrew&amp;rsquo;s analytics.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3e8fea6a021311db367093df0a86b7fffac8d81" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;state&lt;/code&gt; is passed, display anonymous user behaviour analytics state. Read more at &lt;a href=&quot;analytics&quot;&gt;https://docs.brew.sh/Analytics&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="052bf073d3882d70c148f3a9633b4d0e57a47fb6" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt; are given, upgrade only the specified brews (unless they are pinned; see &lt;code&gt;pin&lt;/code&gt;, &lt;code&gt;unpin&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d02af9632ef17566bd3157a472f1c866d59ef0d2" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt; is provided, display the file or directory used to cache &lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fdc5d766afd849854c69c9b84e77e15782a28bd4" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt; is provided, display the location in the cellar where &lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt; is or would be installed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97d26f500aac3205d517fb5c2246d7279f937f13" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt; is provided, display the location in the cellar where &lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt; would be installed, without any sort of versioned directory as the last path.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="696f7a87e5f37bc15b4e55c90f9f16119418c35d" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt; is specified, show summary of information about &lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b42403d628e04da5d03917751567c4ece3308ddd" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;&lt;code&gt;user&lt;/code&gt;&lt;/em&gt;&lt;code&gt;/&lt;/code&gt;&lt;em&gt;&lt;code&gt;repo&lt;/code&gt;&lt;/em&gt; are provided, display where tap &lt;em&gt;&lt;code&gt;user&lt;/code&gt;&lt;/em&gt;&lt;code&gt;/&lt;/code&gt;&lt;em&gt;&lt;code&gt;repo&lt;/code&gt;&lt;/em&gt;&amp;rsquo;s directory is located.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71b7187a9434f60df1eb12689708f00f5af2c1c8" translate="yes" xml:space="preserve">
          <source>If a &lt;em&gt;&lt;code&gt;URL&lt;/code&gt;&lt;/em&gt; is specified, the &lt;em&gt;&lt;code&gt;SHA-256&lt;/code&gt;&lt;/em&gt; checksum of the new download should also be specified. A best effort to determine the &lt;em&gt;&lt;code&gt;SHA-256&lt;/code&gt;&lt;/em&gt; and &lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt; name will be made if either or both values are not supplied by the user.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd5fd3ea7db514a22bad5c918c6a50728fd9eabf" translate="yes" xml:space="preserve">
          <source>If a &lt;em&gt;&lt;code&gt;tag&lt;/code&gt;&lt;/em&gt; is specified, the Git commit &lt;em&gt;&lt;code&gt;revision&lt;/code&gt;&lt;/em&gt; corresponding to that tag must also be specified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="162a436ef18a033c6fce8309711cac9b0b671f12" translate="yes" xml:space="preserve">
          <source>If a bottle is available and usable it will be downloaded and poured automatically when you &lt;code&gt;brew install &amp;lt;formula&amp;gt;&lt;/code&gt;. If you wish to disable this you can do so by specifying &lt;code&gt;--build-from-source&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2100480dc6a682888153bc0b6e0127a2f1f5dfdd" translate="yes" xml:space="preserve">
          <source>If a formula is widely used and is failing often it will enable us to prioritise fixing that formula over others.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6666e69a10195da0fe65bb3da9675518061afa1" translate="yes" xml:space="preserve">
          <source>If a formula that has failed to build is part of a non-core tap or a cask is part of &lt;a href=&quot;https://github.com/Homebrew/homebrew-cask/issues&quot;&gt;homebrew/cask&lt;/a&gt; check those issue trackers instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe98eb09bc54c62b904a67b376d067bfd3ffde67" translate="yes" xml:space="preserve">
          <source>If anything isn&amp;rsquo;t clear, you can usually figure it out by &lt;code&gt;grep&lt;/code&gt;ping the &lt;code&gt;$(brew --repo homebrew/core)&lt;/code&gt; directory. Please submit a pull request to amend this document if you think it will help!</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a75fff982a1f6ca410ea4c31df0f98b89aa9e374" translate="yes" xml:space="preserve">
          <source>If available, bottled binaries will be used by default except under the following conditions:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee14fdc0fbe04c47873f449d2f761936414751fc" translate="yes" xml:space="preserve">
          <source>If installed from a Git clone, the repository directory (i.e. where Homebrew&amp;rsquo;s &lt;code&gt;.git&lt;/code&gt; directory lives).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc977a40612040aa5efa9917c9aca15419c7340f" translate="yes" xml:space="preserve">
          <source>If it&amp;rsquo;s been a while, bump it with a &amp;ldquo;bump&amp;rdquo; comment. Sometimes we miss requests and there are plenty of them. Maybe we were thinking on something. It will encourage consideration. In the meantime if you could rebase the pull request so that it can be cherry-picked more easily we will love you for a long time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e0da3770f3f1197ec5a08441e7c72f7d1e499e9" translate="yes" xml:space="preserve">
          <source>If it&amp;rsquo;s hosted outside of GitHub, they have to use &lt;code&gt;brew tap user/repo &amp;lt;URL&amp;gt;&lt;/code&gt;, where &lt;code&gt;user&lt;/code&gt; and &lt;code&gt;repo&lt;/code&gt; will be used to refer to your tap and &lt;code&gt;&amp;lt;URL&amp;gt;&lt;/code&gt; is your Git clone URL.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f15ec2d1a9613563f25eeeeb2b9829353fc1bd75" translate="yes" xml:space="preserve">
          <source>If it&amp;rsquo;s not in &lt;code&gt;man brew&lt;/code&gt;, it&amp;rsquo;s probably an external command. These are documented &lt;a href=&quot;external-commands&quot;&gt;here&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="552575dbf7965f498545efc6e7b46c06b6600e06" translate="yes" xml:space="preserve">
          <source>If it&amp;rsquo;s on GitHub, they can use &lt;code&gt;brew tap user/repo&lt;/code&gt;, where &lt;code&gt;user&lt;/code&gt; is your GitHub username and &lt;code&gt;homebrew-repo&lt;/code&gt; your repository.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="650df9e491a14f4c1590f2a4ac645c50f7492d1e" translate="yes" xml:space="preserve">
          <source>If it&amp;rsquo;s on GitHub, users can install any of your formulae with &lt;code&gt;brew install user/repo/formula&lt;/code&gt;. Homebrew will automatically add your &lt;code&gt;github.com/user/homebrew-repo&lt;/code&gt; tap before installing the formula. &lt;code&gt;user/repo/formula&lt;/code&gt; points to the &lt;code&gt;github.com/user/homebrew-repo/**/formula.rb&lt;/code&gt; file here.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eda0ada539e3125b9bdbd6d53ead50e4dbc21984" translate="yes" xml:space="preserve">
          <source>If no &lt;em&gt;&lt;code&gt;text&lt;/code&gt;&lt;/em&gt; is passed, display all locally available formulae (including tapped ones). No online search is performed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4b613f0bf10c7df54e5110062c24e58d582b81c" translate="yes" xml:space="preserve">
          <source>If no logs are found, an error message is presented.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2a132698f0adf48385dc3df8c774fcedd9f4d07" translate="yes" xml:space="preserve">
          <source>If that fixes it, please open an &lt;a href=&quot;https://github.com/Homebrew/homebrew-core/issues&quot;&gt;issue&lt;/a&gt; so that we can fix it for everyone.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0969fb9fde0c9f663e7a8183a16414490845af7" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;configure&lt;/code&gt; and &lt;code&gt;make&lt;/code&gt; scripts do not want to install into the Cellar, sometimes you can:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e061df9ed4344b03012dc600ae8ad8ea77e8b372" translate="yes" xml:space="preserve">
          <source>If the Google Analytics anonymous IP setting is enabled, i.e. &lt;code&gt;1&lt;/code&gt; (https://developers.google.com/analytics/devguides/collection/protocol/v1/parameters#aip)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="910c1d81835d744f057cd5d7fdcce860deaa5a09" translate="yes" xml:space="preserve">
          <source>If the JSON output does not provide some information that it ought to, please submit a request, preferably with a patch to add the desired information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38d2959cf98698173bd56e00bdac3292025fac9c" translate="yes" xml:space="preserve">
          <source>If the Node module is also available on the npm registry, we prefer npm hosted release tarballs over GitHub (or elsewhere) hosted source tarballs. The advantages of these tarballs are that they don&amp;rsquo;t include the files from the &lt;code&gt;.npmignore&lt;/code&gt; (such as tests) resulting in a smaller download size and that any possible transpilation step is already done (e.g. no need to compile CoffeeScript files as a build step).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3daae764d854c69d293f0eae6ac6c2dbf33fde24" translate="yes" xml:space="preserve">
          <source>If the bindings are installed by invoking a &lt;code&gt;setup.py&lt;/code&gt;, do something like:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78f02874bdff41478703983a8cfd6566338024b7" translate="yes" xml:space="preserve">
          <source>If the command&amp;rsquo;s output is sent through a pipe and no shell is specified, the list is formatted for export to &lt;code&gt;bash&lt;/code&gt;(1) unless &lt;code&gt;--plain&lt;/code&gt; is passed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af17c73cd3e1e762abb9a2aa3446ddf8b421a9b9" translate="yes" xml:space="preserve">
          <source>If the configure script takes a &lt;code&gt;--with-python&lt;/code&gt; flag, it usually will not need extra help finding Python.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df0712f10665a36a0a62976031a4009fbe276b0c" translate="yes" xml:space="preserve">
          <source>If the formula is a library, compile and run some simple code that links against it. It could be taken from upstream&amp;rsquo;s documentation / source examples. A good example is &lt;a href=&quot;https://github.com/Homebrew/homebrew-core/blob/master/Formula/tinyxml2.rb&quot;&gt;&lt;code&gt;tinyxml2&lt;/code&gt;&lt;/a&gt;, which writes a small C++ source file into the test directory, compiles and links it against the tinyxml2 library and finally checks that the resulting program runs successfully.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a09ca44dfc8fe84ff63916897c2cb28fa5b56d21" translate="yes" xml:space="preserve">
          <source>If the formula is for a GUI program, try to find some function that runs as command-line only, like a format conversion, reading or displaying a config file, etc.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="318d7e55d7828ee4ce293fe9094c1b222085eaa1" translate="yes" xml:space="preserve">
          <source>If the software cannot function without credentials or requires a virtual machine, docker instance, etc. to run, a test could be to try to connect with invalid credentials (or without credentials) and confirm that it fails as expected.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89649f497e2238364a614371edcf0919b99cc6c5" translate="yes" xml:space="preserve">
          <source>If the tool you are attempting to build is &lt;a href=&quot;https://en.wikipedia.org/wiki/Pkg-config&quot;&gt;pkg-config&lt;/a&gt; aware, you can amend your &lt;code&gt;PKG_CONFIG_PATH&lt;/code&gt; to find that &lt;code&gt;keg_only&lt;/code&gt; utility&amp;rsquo;s &lt;code&gt;.pc&lt;/code&gt; file, if it has them. Not all formulae ship with those files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="071d4a2cede7ab647faff4650f0f794912a0b1c8" translate="yes" xml:space="preserve">
          <source>If there is a formula that currently exists in the Homebrew/homebrew-core repository or has existed in the past (i.e. was migrated or deleted), you can recover it for your own use with the &lt;code&gt;brew extract&lt;/code&gt; command. This will copy the desired version of the formula into a custom tap. For example, if your project depends on &lt;code&gt;automake&lt;/code&gt; 1.12 instead of the most recent version, you can obtain the &lt;code&gt;automake&lt;/code&gt; formula at version 1.12 by running &lt;code&gt;brew extract automake &amp;lt;YOUR_GITHUB_USER&amp;gt;/&amp;lt;YOUR_TAP_REPOSITORY_NAME&amp;gt; --version=1.12&lt;/code&gt;. Formulae obtained this way may contain deprecated, disabled or removed Homebrew syntax (e.g. checksums may be &lt;code&gt;sha1&lt;/code&gt; instead of &lt;code&gt;sha256&lt;/code&gt;); the &lt;code&gt;brew extract&lt;/code&gt; command does not edit or update formulae to meet current standards and style requirements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="701ac0a16359321c51834ce6fa437e0e7c19ce31" translate="yes" xml:space="preserve">
          <source>If there&amp;rsquo;s a &lt;code&gt;bottle do&lt;/code&gt; block in the formula, don&amp;rsquo;t remove or change it; we&amp;rsquo;ll update it when we pull your PR.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b86a782c7c2d4f2d086b69f2e0dd8d39928a1ddd" translate="yes" xml:space="preserve">
          <source>If they want to get your tap without installing any formula at the same time, users can add it with the &lt;a href=&quot;taps&quot;&gt;&lt;code&gt;brew tap&lt;/code&gt; command&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b98d3ea36c59c682c050eecead4352f741f4ed4" translate="yes" xml:space="preserve">
          <source>If this is a major or minor release (e.g. X.0.0 or X.Y.0) then there are a few more steps:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6933a28ade1bf4aeb610f7aaf6e4c6942af0c51" translate="yes" xml:space="preserve">
          <source>If you are working on a PR for a single formula, &lt;code&gt;git commit --amend&lt;/code&gt; is a convenient way of keeping your commits squashed as you go.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a1f84a9ebce717998b463ae0b26fce8bf5b883c" translate="yes" xml:space="preserve">
          <source>If you do not uninstall all of the versions that Homebrew has installed, Homebrew will continue to attempt to install the newest version it knows about when you run &lt;code&gt;brew upgrade&lt;/code&gt;. This can be surprising.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b409910c5f20623e660df46bb58f5f5863b3d0f8" translate="yes" xml:space="preserve">
          <source>If you don&amp;rsquo;t even want (or can&amp;rsquo;t) use sudo for bootstrapping &lt;code&gt;local::lib&lt;/code&gt;, just manually install &lt;code&gt;local::lib&lt;/code&gt; in &lt;code&gt;~/perl5&lt;/code&gt; and add the relevant path to &lt;code&gt;PERL5LIB&lt;/code&gt; before the &lt;code&gt;.bashrc&lt;/code&gt; eval incantation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c476b8ad9dd7cf0149100f4159d7f3864f0dd41" translate="yes" xml:space="preserve">
          <source>If you encountered a non-formula problem: upload the output of &lt;code&gt;brew config&lt;/code&gt; and &lt;code&gt;brew doctor&lt;/code&gt; to a new &lt;a href=&quot;https://gist.github.com&quot;&gt;Gist&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6837b26030503006c69066f1ae7add3cfdd32451" translate="yes" xml:space="preserve">
          <source>If you ever did a &lt;code&gt;sudo gem&lt;/code&gt;, etc. before then a lot of files will have been created owned by root. Fix with:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f27209f43bd0c668efb6e4c7e9e28e51e0e2cf7" translate="yes" xml:space="preserve">
          <source>If you had a formula-related problem: run &lt;code&gt;brew gist-logs &amp;lt;formula&amp;gt;&lt;/code&gt; (where &lt;code&gt;&amp;lt;formula&amp;gt;&lt;/code&gt; is the name of the formula).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="580ca2645a14d29c521bcff7e10aea5a7a6621cc" translate="yes" xml:space="preserve">
          <source>If you have already forked Homebrew on GitHub, then you can manually push (just make sure you have been pulling from the &lt;code&gt;Homebrew/homebrew-core&lt;/code&gt; master):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf54d06e6d394ad185715c63337af588cac11630" translate="yes" xml:space="preserve">
          <source>If you haven&amp;rsquo;t forked Homebrew yet, &lt;a href=&quot;https://github.com/Homebrew/homebrew-core&quot;&gt;go to the &lt;code&gt;homebrew-core&lt;/code&gt; repository and hit the Fork button&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fcbc334c8d7a126cfd6658594e71a76181992db7" translate="yes" xml:space="preserve">
          <source>If you need a formula to be installed from a particular tap, you can use fully qualified names to refer to them.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a00705fa7355e45854a2d24808a572814c99779f" translate="yes" xml:space="preserve">
          <source>If you need modify variables in a &lt;code&gt;Makefile&lt;/code&gt;, rather than using &lt;a href=&quot;https://rubydoc.brew.sh/Utils/Inreplace&quot;&gt;&lt;code&gt;inreplace&lt;/code&gt;&lt;/a&gt;, pass them as arguments to &lt;code&gt;make&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd492283a16c197887dd8276904269c7ea99142d" translate="yes" xml:space="preserve">
          <source>If you need more control over the way files are downloaded and staged, you can create a custom download strategy and specify it using the &lt;a href=&quot;https://rubydoc.brew.sh/Formula#url-class_method&quot;&gt;&lt;code&gt;url&lt;/code&gt;&lt;/a&gt; method&amp;rsquo;s &lt;code&gt;:using&lt;/code&gt; option:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c319be09e3ae1108600be81337367b040104d3bb" translate="yes" xml:space="preserve">
          <source>If you need to run Homebrew in a multi-user environment, consider creating a separate user account especially for use of Homebrew.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64641ecf6ee386be3b3ad2086cb2a33ca7da8f3f" translate="yes" xml:space="preserve">
          <source>If you want to add an &lt;a href=&quot;https://rubydoc.brew.sh/Formula#option-class_method&quot;&gt;&lt;code&gt;option&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32ba2998577c1314d10c31370baf1a855875c735" translate="yes" xml:space="preserve">
          <source>If you want your new formula to be part of &lt;code&gt;homebrew/core&lt;/code&gt; or want to learn more about writing formulae, then please read the &lt;a href=&quot;formula-cookbook&quot;&gt;Formula Cookbook&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="421d64a6330e63b76fc5b7162344c67193dfcff4" translate="yes" xml:space="preserve">
          <source>If you wish to build against custom non-Homebrew dependencies that are provided by Homebrew (e.g. a non-Homebrew, non-macOS &lt;code&gt;ruby&lt;/code&gt;) then you must &lt;a href=&quot;how-to-create-and-maintain-a-tap&quot;&gt;create and maintain your own tap&lt;/a&gt; as these formulae will not be accepted in Homebrew/homebrew-core. Once you have done that you can specify &lt;code&gt;env :std&lt;/code&gt; in the formula which will allow e.g. &lt;code&gt;which ruby&lt;/code&gt; to access your existing &lt;code&gt;PATH&lt;/code&gt; variable and allow compilation to link against this Ruby.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75aaf8ca6348805437ba312961c3dcce69e11e6d" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re &lt;em&gt;still&lt;/em&gt; not sure, just commit. We&amp;rsquo;ll apply some arbitrary rule and make a decision 😉.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6311b12438e1fedd6f0f6c7542ca88edd59098f7" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re curious about the &lt;code&gt;PKG_CONFIG_PATH&lt;/code&gt; variable &lt;code&gt;man pkg-config&lt;/code&gt; goes into more detail.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef09e7e543cc250149764da4ca1cd7bb9111d3ea" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re installing an application then use &lt;a href=&quot;https://rubydoc.brew.sh/Formula#resource-class_method&quot;&gt;&lt;code&gt;resource&lt;/code&gt;&lt;/a&gt;s for all language-specific dependencies:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3aa29752fd0d213f6d7a9961dba18b8c70cbc30a" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re not sure about the name, check its homepage, Wikipedia page and &lt;a href=&quot;https://www.debian.org/distrib/packages&quot;&gt;what Debian calls it&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0aea0effbb7eb027ee66d576de41a981c515cee6" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re using an older distribution of Linux, installing your first package will also install a recent version of &lt;code&gt;glibc&lt;/code&gt; and &lt;code&gt;gcc&lt;/code&gt;. Use &lt;code&gt;brew doctor&lt;/code&gt; to troubleshoot common issues.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7aaf4cfa803533bcb5f3629da4cf64b95c3c648" translate="yes" xml:space="preserve">
          <source>If your Node module is a native addon or has a native addon somewhere in its dependency tree you have to declare an additional dependency. Since the compilation of the native addon results in an invocation of &lt;code&gt;node-gyp&lt;/code&gt; we need an additional build time dependency on &lt;code&gt;&quot;python&quot;&lt;/code&gt; (because GYP depends on Python 2.7).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7459d994fb130f22b1d80f6a57a608ae13ab1e12" translate="yes" xml:space="preserve">
          <source>If your formula requires being executed with an older Node version you should use one of the versioned node formulae (e.g. &lt;code&gt;node@6&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="736cb421c4f92de5527e507b44b5eef081580e77" translate="yes" xml:space="preserve">
          <source>If your formulae have the same name as Homebrew/homebrew-core formulae they cannot be installed side-by-side. If you wish to create a different version of a formula that&amp;rsquo;s in Homebrew/homebrew-core (e.g. with &lt;code&gt;option&lt;/code&gt;s) consider giving it a different name e.g. &lt;code&gt;nginx-full&lt;/code&gt; for more fully-featured &lt;code&gt;nginx&lt;/code&gt; formula. This will allow both &lt;code&gt;nginx&lt;/code&gt; and &lt;code&gt;nginx-full&lt;/code&gt; to be installed at the same time (but not linked if there are conflicts and one of them is not declared to be &lt;code&gt;keg_only&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7433333b721a96d7234d56a217658cd90ee156c1" translate="yes" xml:space="preserve">
          <source>If your problem hasn&amp;rsquo;t been solved or reported, then create an issue:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e7a51ba9add09d6109a10d6f991f9bd102e7d8d" translate="yes" xml:space="preserve">
          <source>If your tap contains a formula that is also present in &lt;a href=&quot;https://github.com/Homebrew/homebrew-core&quot;&gt;homebrew/core&lt;/a&gt;, that&amp;rsquo;s fine, but it means that you must install it explicitly by default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57211625abf01d68a18536fbc446cf0f8167d67c" translate="yes" xml:space="preserve">
          <source>Import all formulae from specified &lt;em&gt;&lt;code&gt;tap&lt;/code&gt;&lt;/em&gt; (defaults to all installed taps). This can be useful for debugging issues across all formulae when making significant changes to &lt;code&gt;formula.rb&lt;/code&gt;, testing the performance of loading all formulae or to determine if any current formulae have Ruby issues.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31e6d44605025e95324fc9b21568df33d3d3d78f" translate="yes" xml:space="preserve">
          <source>In &lt;a href=&quot;https://github.com/Homebrew/brew/blob/master/Library/Homebrew/os/mac.rb&quot;&gt;&lt;code&gt;Library/Homebrew/os/mac.rb&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d32209725cbfaf6521bc26cc0c6d803f53d50105" translate="yes" xml:space="preserve">
          <source>In &lt;a href=&quot;https://github.com/Homebrew/brew/blob/master/Library/Homebrew/os/mac/xcode.rb&quot;&gt;&lt;code&gt;Library/Homebrew/os/mac/xcode.rb&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c37bf89eb66a990b5f51f6b6bf1b75079d5fa185" translate="yes" xml:space="preserve">
          <source>In &lt;a href=&quot;https://github.com/homebrew/homebrew-versions&quot;&gt;homebrew/versions&lt;/a&gt; the formula for GCC 6 was named &lt;code&gt;gcc6.rb&lt;/code&gt; and began with &lt;code&gt;class Gcc6 &amp;lt; Formula&lt;/code&gt;. In &lt;a href=&quot;https://github.com/homebrew/homebrew-core&quot;&gt;homebrew/core&lt;/a&gt; this same formula is named &lt;code&gt;gcc@6.rb&lt;/code&gt; and begins with &lt;code&gt;class GccAT6 &amp;lt; Formula&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b109ecb1e93273c65607e725697abd212bffbf6" translate="yes" xml:space="preserve">
          <source>In Homebrew we sometimes accept formulae updates that don&amp;rsquo;t include a version bump. These include resource updates, new patches or fixing a security issue with a formula.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00961e014e697c343657d9d647d6ee54d04d633e" translate="yes" xml:space="preserve">
          <source>In Sublime Text 2/3, you can use Package Control to install &lt;a href=&quot;https://github.com/samueljohn/Homebrew-formula-syntax&quot;&gt;Homebrew-formula-syntax&lt;/a&gt;, which adds highlighting for inline patches.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad55a8da1f605058a315265d07bc83219b046765" translate="yes" xml:space="preserve">
          <source>In both cases, the command file should be executable (&lt;code&gt;chmod +x&lt;/code&gt;) and live somewhere in &lt;code&gt;PATH&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dadaacb67a282c70d70fc8d200c8ad1d2508441b" translate="yes" xml:space="preserve">
          <source>In case there are specific issues with the Homebrew packaging (compared to how the software is installed from other sources) a &lt;code&gt;caveats&lt;/code&gt; block can be added to the formula to warn users. This can indicate non-standard install paths, an example from the &lt;code&gt;ruby&lt;/code&gt; formula:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6827e821668e6bc47e5fff452ae2e63a5e5e36d" translate="yes" xml:space="preserve">
          <source>In early 2015 Homebrew started the process of deprecating &lt;em&gt;SHA1&lt;/em&gt; for package integrity verification. Since then formulae under the Homebrew organisation have been moved onto using &lt;em&gt;SHA256&lt;/em&gt; for verification; this includes both source packages and our precompiled packages (bottles).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a0c20db19d86321b7b6ed3bdf9355dddb72f5d7" translate="yes" xml:space="preserve">
          <source>In embedded patches, the string &amp;ldquo;HOMEBREW_PREFIX&amp;rdquo; is replaced with the value of the constant &lt;code&gt;HOMEBREW_PREFIX&lt;/code&gt; before the patch is applied.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25928ede91113bbf9eb168db48e7620ff4476a5d" translate="yes" xml:space="preserve">
          <source>In particular, when a test needs to be performed before installation use &lt;code&gt;odie&lt;/code&gt; to bail out gracefully. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b23e06c0b90187026f7ab3eadb40b725b4ab2ff" translate="yes" xml:space="preserve">
          <source>In summary, environment variables used by a formula need to conform to these filtering rules in order to be available.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fd39514b3f35fab0257fc127d82e9d3e9f7a995" translate="yes" xml:space="preserve">
          <source>In the event that a formula needs to interact with &lt;code&gt;setup.py&lt;/code&gt; instead of calling &lt;code&gt;pip&lt;/code&gt;, Homebrew provides a helper method, &lt;code&gt;Language::Python.setup_install_args&lt;/code&gt;, which returns useful arguments for invoking &lt;code&gt;setup.py&lt;/code&gt;. Your formula should use this instead of invoking &lt;code&gt;setup.py&lt;/code&gt; explicitly. The syntax is:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="481f559edaef5a72cc604ed3795d4d1b5141ab23" translate="yes" xml:space="preserve">
          <source>In the following we distinguish between two types of Node modules installed using formulae:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d202c0b25fd04cffbc137179fd94443d9891b689" translate="yes" xml:space="preserve">
          <source>In your formula&amp;rsquo;s &lt;code&gt;install&lt;/code&gt; method, do any installation steps which need to be done before the &lt;code&gt;npm install&lt;/code&gt; step and then &lt;code&gt;cd&lt;/code&gt; to the top level of the included Node module. Then, use &lt;code&gt;system&lt;/code&gt; with &lt;code&gt;Language::Node.local_npm_install_args&lt;/code&gt; to invoke &lt;code&gt;npm install&lt;/code&gt; like:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75f033560a75919ea62a81ed8ca729e4a49757b9" translate="yes" xml:space="preserve">
          <source>In your formula&amp;rsquo;s &lt;code&gt;install&lt;/code&gt; method, simply &lt;code&gt;cd&lt;/code&gt; to the top level of your Node module if necessary and then use &lt;code&gt;system&lt;/code&gt; to invoke &lt;code&gt;npm install&lt;/code&gt; with &lt;code&gt;Language::Node.std_npm_install_args&lt;/code&gt; like:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86304570adf120ac75ca8d70e37b8146cb76c97e" translate="yes" xml:space="preserve">
          <source>Include links to any additional Gists you may have created (such as for the output of &lt;code&gt;brew config&lt;/code&gt; and &lt;code&gt;brew doctor&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72d49d39b8ac6aab5979a61e8c76006ed0b8966a" translate="yes" xml:space="preserve">
          <source>Include the URL output by &lt;code&gt;brew gist-logs &amp;lt;formula&amp;gt;&lt;/code&gt; (if applicable).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd6c3ebf7befca9f8208f86c76e4d4180303745c" translate="yes" xml:space="preserve">
          <source>Install</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89ecbbda273b0d43e8a29d38089f579c772625e0" translate="yes" xml:space="preserve">
          <source>Install &lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f0e5a74ad4914b9ac4d64d860523b92e20aee56" translate="yes" xml:space="preserve">
          <source>Install and commit Homebrew&amp;rsquo;s vendored gems.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3529ebe4d6a30f0ad8e07730bf12741610c9eab" translate="yes" xml:space="preserve">
          <source>Install any &lt;code&gt;gem&lt;/code&gt; package into a self-contained Homebrew Cellar location: &lt;a href=&quot;https://github.com/sportngin/brew-gem&quot;&gt;https://github.com/sportngin/brew-gem&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b60a2172daf674c5e0dbbd9eb18135b11d178c53" translate="yes" xml:space="preserve">
          <source>Install into Homebrew without formulae</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="987f5753cb7c5d542018db8ca7983327f6e55fba" translate="yes" xml:space="preserve">
          <source>Install macOS applications distributed as binaries. See brew-cask(1).</source>
          <target state="new"/>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
