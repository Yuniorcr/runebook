<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="openjdk">
    <body>
      <group id="openjdk">
        <trans-unit id="3ba5c606242a388c6bfb1bd46b5eaca0580b4d71" translate="yes" xml:space="preserve">
          <source>BeanContextServiceAvailableEvent.getServiceClass()</source>
          <target state="translated">BeanContextServiceAvailableEvent.getServiceClass()</target>
        </trans-unit>
        <trans-unit id="34917e686eea3cbcbd9eb61faa6da07c4858ac49" translate="yes" xml:space="preserve">
          <source>BeanContextServiceAvailableEvent.getSourceAsBeanContextServices()</source>
          <target state="translated">BeanContextServiceAvailableEvent.getSourceAsBeanContextServices()</target>
        </trans-unit>
        <trans-unit id="2adebcff18b92e15633abf8ee34347d61297e5ab" translate="yes" xml:space="preserve">
          <source>BeanContextServiceProvider</source>
          <target state="translated">BeanContextServiceProvider</target>
        </trans-unit>
        <trans-unit id="8542beb4453cc98ae8a7a5034768432945d3c3b1" translate="yes" xml:space="preserve">
          <source>BeanContextServiceProvider.getCurrentServiceSelectors()</source>
          <target state="translated">BeanContextServiceProvider.getCurrentServiceSelectors()</target>
        </trans-unit>
        <trans-unit id="88be54c2321d68bc7d58dc5fd9e5238a160a31bc" translate="yes" xml:space="preserve">
          <source>BeanContextServiceProvider.getService()</source>
          <target state="translated">BeanContextServiceProvider.getService()</target>
        </trans-unit>
        <trans-unit id="a113a4e4febb61006ca42f13998fbac33f6ce5cf" translate="yes" xml:space="preserve">
          <source>BeanContextServiceProvider.releaseService()</source>
          <target state="translated">BeanContextServiceProvider.releaseService()</target>
        </trans-unit>
        <trans-unit id="fb610c86d20cb9ae6c821229240b620d446dc3da" translate="yes" xml:space="preserve">
          <source>BeanContextServiceProviderBeanInfo</source>
          <target state="translated">BeanContextServiceProviderBeanInfo</target>
        </trans-unit>
        <trans-unit id="a4a7cbcb10dc1db3504fb7e9668482c80e520938" translate="yes" xml:space="preserve">
          <source>BeanContextServiceProviderBeanInfo.getServicesBeanInfo()</source>
          <target state="translated">BeanContextServiceProviderBeanInfo.getServicesBeanInfo()</target>
        </trans-unit>
        <trans-unit id="c31ddccca04029ccf2288864c5eba4247e02163e" translate="yes" xml:space="preserve">
          <source>BeanContextServiceProviders wishing to remove a currently registered service from this context may do so via invocation of this method. Upon revocation of the service, the &lt;code&gt;BeanContextServices&lt;/code&gt; fires a &lt;code&gt;BeanContextServiceRevokedEvent&lt;/code&gt; to its list of currently registered &lt;code&gt;BeanContextServiceRevokedListeners&lt;/code&gt; and &lt;code&gt;BeanContextServicesListeners&lt;/code&gt;.</source>
          <target state="translated">이 컨텍스트에서 현재 등록 된 서비스를 제거하려는 BeanContextServiceProviders는이 메소드를 호출하여이를 수행 할 수 있습니다. 서비스가 해지되면 &lt;code&gt;BeanContextServices&lt;/code&gt; 는 &lt;code&gt;BeanContextServiceRevokedEvent&lt;/code&gt; 를 현재 등록 된 &lt;code&gt;BeanContextServiceRevokedListeners&lt;/code&gt; 및 &lt;code&gt;BeanContextServicesListeners&lt;/code&gt; 목록으로 시작 합니다.</target>
        </trans-unit>
        <trans-unit id="213212b3b42a1c81dd07ec2c966b8aa35020a2ec" translate="yes" xml:space="preserve">
          <source>BeanContextServiceRevokedEvent</source>
          <target state="translated">BeanContextServiceRevokedEvent</target>
        </trans-unit>
        <trans-unit id="f12d3d9269c0f517af47e03aa85a1e103f695ce4" translate="yes" xml:space="preserve">
          <source>BeanContextServiceRevokedEvent.getServiceClass()</source>
          <target state="translated">BeanContextServiceRevokedEvent.getServiceClass()</target>
        </trans-unit>
        <trans-unit id="636b8b5ccd8fa347d7564a5aad835c976814e6aa" translate="yes" xml:space="preserve">
          <source>BeanContextServiceRevokedEvent.getSourceAsBeanContextServices()</source>
          <target state="translated">BeanContextServiceRevokedEvent.getSourceAsBeanContextServices()</target>
        </trans-unit>
        <trans-unit id="720ee8adb892f529fcd5159673d02daab148a6ae" translate="yes" xml:space="preserve">
          <source>BeanContextServiceRevokedEvent.isCurrentServiceInvalidNow()</source>
          <target state="translated">BeanContextServiceRevokedEvent.isCurrentServiceInvalidNow()</target>
        </trans-unit>
        <trans-unit id="168ec8ba389f04e9918ee2948ac67630e743f6d6" translate="yes" xml:space="preserve">
          <source>BeanContextServiceRevokedEvent.isServiceClass()</source>
          <target state="translated">BeanContextServiceRevokedEvent.isServiceClass()</target>
        </trans-unit>
        <trans-unit id="e49b1a5343d8bb57cf6633f216674a5d0d756cb0" translate="yes" xml:space="preserve">
          <source>BeanContextServiceRevokedListener</source>
          <target state="translated">BeanContextServiceRevokedListener</target>
        </trans-unit>
        <trans-unit id="334ac92b73113fa01d0243546120af73dcb41ebe" translate="yes" xml:space="preserve">
          <source>BeanContextServiceRevokedListener.serviceRevoked()</source>
          <target state="translated">BeanContextServiceRevokedListener.serviceRevoked()</target>
        </trans-unit>
        <trans-unit id="6dea41692e49f44bcdd66e53fb33c76ec67dbd16" translate="yes" xml:space="preserve">
          <source>BeanContextServices</source>
          <target state="translated">BeanContextServices</target>
        </trans-unit>
        <trans-unit id="08b51a9fac670b0ad0a86e6520c428210dd132bd" translate="yes" xml:space="preserve">
          <source>BeanContextServices.addBeanContextServicesListener()</source>
          <target state="translated">BeanContextServices.addBeanContextServicesListener()</target>
        </trans-unit>
        <trans-unit id="f49e1502520d4039e697354466e71fa84c60add1" translate="yes" xml:space="preserve">
          <source>BeanContextServices.addService()</source>
          <target state="translated">BeanContextServices.addService()</target>
        </trans-unit>
        <trans-unit id="a6e951b5aaf8afa7324072aa95e1755a0f1c2dd4" translate="yes" xml:space="preserve">
          <source>BeanContextServices.getCurrentServiceClasses()</source>
          <target state="translated">BeanContextServices.getCurrentServiceClasses()</target>
        </trans-unit>
        <trans-unit id="b3785f81eca83069dbf0fc594855103a67a653fa" translate="yes" xml:space="preserve">
          <source>BeanContextServices.getCurrentServiceSelectors()</source>
          <target state="translated">BeanContextServices.getCurrentServiceSelectors()</target>
        </trans-unit>
        <trans-unit id="197bc5a584d593f33e92ef1e4bb8a103ae3782a5" translate="yes" xml:space="preserve">
          <source>BeanContextServices.getService()</source>
          <target state="translated">BeanContextServices.getService()</target>
        </trans-unit>
        <trans-unit id="7e04758865d2b06f446f88259aa1a4ff033d5314" translate="yes" xml:space="preserve">
          <source>BeanContextServices.hasService()</source>
          <target state="translated">BeanContextServices.hasService()</target>
        </trans-unit>
        <trans-unit id="0f22a1360badea47401b7acea0a2d49c1f350b60" translate="yes" xml:space="preserve">
          <source>BeanContextServices.releaseService()</source>
          <target state="translated">BeanContextServices.releaseService()</target>
        </trans-unit>
        <trans-unit id="1aef5c0ba32adb028cdbda2612d912406611a32b" translate="yes" xml:space="preserve">
          <source>BeanContextServices.removeBeanContextServicesListener()</source>
          <target state="translated">BeanContextServices.removeBeanContextServicesListener()</target>
        </trans-unit>
        <trans-unit id="a49552253c3aa5ca7b7236b70d75be19395e235f" translate="yes" xml:space="preserve">
          <source>BeanContextServices.revokeService()</source>
          <target state="translated">BeanContextServices.revokeService()</target>
        </trans-unit>
        <trans-unit id="b412c8957a8c67948fcc787eb5571589b0c1a216" translate="yes" xml:space="preserve">
          <source>BeanContextServicesListener</source>
          <target state="translated">BeanContextServicesListener</target>
        </trans-unit>
        <trans-unit id="131c446873127e3b28e1a0e2c04c32e1bbe5c8f2" translate="yes" xml:space="preserve">
          <source>BeanContextServicesListener callback, propagates event to all currently registered listeners and BeanContextServices children, if this BeanContextService does not already implement this service itself. subclasses may override or envelope this method to implement their own propagation semantics.</source>
          <target state="translated">BeanContextServicesListener 콜백은이 BeanContextService가이 서비스 자체를 아직 구현하지 않은 경우 현재 등록 된 모든 리스너 및 BeanContextServices 하위에 이벤트를 전파합니다. 서브 클래스는 자체 전파 시맨틱을 구현하기 위해이 메소드를 대체하거나 포함 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="76bbd8c39509d5f12868d657786e6a62afc0eeed" translate="yes" xml:space="preserve">
          <source>BeanContextServicesListener.serviceAvailable()</source>
          <target state="translated">BeanContextServicesListener.serviceAvailable()</target>
        </trans-unit>
        <trans-unit id="382df2cb9bbc6c80197ebf159dd1b0c0b019dc95" translate="yes" xml:space="preserve">
          <source>BeanContextServicesSupport</source>
          <target state="translated">BeanContextServicesSupport</target>
        </trans-unit>
        <trans-unit id="a420ff8b1b6173fffaca2f1325f28a37a1cb14ea" translate="yes" xml:space="preserve">
          <source>BeanContextServicesSupport.BCSSChild</source>
          <target state="translated">BeanContextServicesSupport.BCSSChild</target>
        </trans-unit>
        <trans-unit id="0385c3c334ee6fc970aacb687a14d919f6dcbdc1" translate="yes" xml:space="preserve">
          <source>BeanContextServicesSupport.BCSSProxyServiceProvider</source>
          <target state="translated">BeanContextServicesSupport.BCSSProxyServiceProvider</target>
        </trans-unit>
        <trans-unit id="fcdaae49afc5cc8c79c1cd4275aa66bb697b71a8" translate="yes" xml:space="preserve">
          <source>BeanContextServicesSupport.BCSSProxyServiceProvider.getCurrentServiceSelectors()</source>
          <target state="translated">BeanContextServicesSupport.BCSSProxyServiceProvider.getCurrentServiceSelectors()</target>
        </trans-unit>
        <trans-unit id="2a5fc986c31a4a4b5475dd0b1abf8e12638d0a78" translate="yes" xml:space="preserve">
          <source>BeanContextServicesSupport.BCSSProxyServiceProvider.getService()</source>
          <target state="translated">BeanContextServicesSupport.BCSSProxyServiceProvider.getService()</target>
        </trans-unit>
        <trans-unit id="c64f2219bd224ba011d3639efa292adc630fa83f" translate="yes" xml:space="preserve">
          <source>BeanContextServicesSupport.BCSSProxyServiceProvider.releaseService()</source>
          <target state="translated">BeanContextServicesSupport.BCSSProxyServiceProvider.releaseService()</target>
        </trans-unit>
        <trans-unit id="dbdea8630f90a78b85f25988ef193f16ec23e9d7" translate="yes" xml:space="preserve">
          <source>BeanContextServicesSupport.BCSSProxyServiceProvider.serviceRevoked()</source>
          <target state="translated">BeanContextServicesSupport.BCSSProxyServiceProvider.serviceRevoked()</target>
        </trans-unit>
        <trans-unit id="fb2876806b277d27dfc54d63888637caf1600584" translate="yes" xml:space="preserve">
          <source>BeanContextServicesSupport.BCSSServiceProvider</source>
          <target state="translated">BeanContextServicesSupport.BCSSServiceProvider</target>
        </trans-unit>
        <trans-unit id="a74cb6c3be7b6b05ce01f9e9e5f97049f2328360" translate="yes" xml:space="preserve">
          <source>BeanContextServicesSupport.BCSSServiceProvider.getServiceProvider()</source>
          <target state="translated">BeanContextServicesSupport.BCSSServiceProvider.getServiceProvider()</target>
        </trans-unit>
        <trans-unit id="f7c974eb0c00eb3a472e4ced4d648e56c3b08e18" translate="yes" xml:space="preserve">
          <source>BeanContextServicesSupport.addBeanContextServicesListener()</source>
          <target state="translated">BeanContextServicesSupport.addBeanContextServicesListener()</target>
        </trans-unit>
        <trans-unit id="e8d8e6e3d064dc092591e80bf90fb4213370807b" translate="yes" xml:space="preserve">
          <source>BeanContextServicesSupport.addService()</source>
          <target state="translated">BeanContextServicesSupport.addService()</target>
        </trans-unit>
        <trans-unit id="755180764698fb7533af1b5693818c801a88c727" translate="yes" xml:space="preserve">
          <source>BeanContextServicesSupport.bcsPreDeserializationHook()</source>
          <target state="translated">BeanContextServicesSupport.bcsPreDeserializationHook()</target>
        </trans-unit>
        <trans-unit id="43fa1c9503e790058d3e6c98ca42f8987d244505" translate="yes" xml:space="preserve">
          <source>BeanContextServicesSupport.bcsPreSerializationHook()</source>
          <target state="translated">BeanContextServicesSupport.bcsPreSerializationHook()</target>
        </trans-unit>
        <trans-unit id="34f40e439999ed4f89469daa2eeac917f4a2c839" translate="yes" xml:space="preserve">
          <source>BeanContextServicesSupport.childJustRemovedHook()</source>
          <target state="translated">BeanContextServicesSupport.childJustRemovedHook()</target>
        </trans-unit>
        <trans-unit id="cbe11ba37d088b38a1a21e41b119310caf6c8dc7" translate="yes" xml:space="preserve">
          <source>BeanContextServicesSupport.createBCSChild()</source>
          <target state="translated">BeanContextServicesSupport.createBCSChild()</target>
        </trans-unit>
        <trans-unit id="5873e6b5aa12ab1b4f57eda0d0015a9b7f03ba52" translate="yes" xml:space="preserve">
          <source>BeanContextServicesSupport.createBCSSServiceProvider()</source>
          <target state="translated">BeanContextServicesSupport.createBCSSServiceProvider()</target>
        </trans-unit>
        <trans-unit id="06ff028ed16af635d0457443bb06edd8475c16de" translate="yes" xml:space="preserve">
          <source>BeanContextServicesSupport.fireServiceAdded()</source>
          <target state="translated">BeanContextServicesSupport.fireServiceAdded()</target>
        </trans-unit>
        <trans-unit id="0d966028222b809a7c11568af0fdd88ff449623f" translate="yes" xml:space="preserve">
          <source>BeanContextServicesSupport.fireServiceRevoked()</source>
          <target state="translated">BeanContextServicesSupport.fireServiceRevoked()</target>
        </trans-unit>
        <trans-unit id="712d3e7abc82489363696aaf1056edb151086c78" translate="yes" xml:space="preserve">
          <source>BeanContextServicesSupport.getBeanContextServicesPeer()</source>
          <target state="translated">BeanContextServicesSupport.getBeanContextServicesPeer()</target>
        </trans-unit>
        <trans-unit id="9a3c06107e05f7155e452e462dff6d46a7778145" translate="yes" xml:space="preserve">
          <source>BeanContextServicesSupport.getChildBeanContextServicesListener()</source>
          <target state="translated">BeanContextServicesSupport.getChildBeanContextServicesListener()</target>
        </trans-unit>
        <trans-unit id="4f477d014751b32c84a39cd4769163b317f3a64a" translate="yes" xml:space="preserve">
          <source>BeanContextServicesSupport.getCurrentServiceClasses()</source>
          <target state="translated">BeanContextServicesSupport.getCurrentServiceClasses()</target>
        </trans-unit>
        <trans-unit id="03d6a84942e9dc090e22ff3b8af6b69443dd707e" translate="yes" xml:space="preserve">
          <source>BeanContextServicesSupport.getCurrentServiceSelectors()</source>
          <target state="translated">BeanContextServicesSupport.getCurrentServiceSelectors()</target>
        </trans-unit>
        <trans-unit id="4e4595ac23598aaf761ee5c12d5d94b830e71920" translate="yes" xml:space="preserve">
          <source>BeanContextServicesSupport.getService()</source>
          <target state="translated">BeanContextServicesSupport.getService()</target>
        </trans-unit>
        <trans-unit id="feb091b2ca76df642788431d6849e53ecac07fe1" translate="yes" xml:space="preserve">
          <source>BeanContextServicesSupport.hasService()</source>
          <target state="translated">BeanContextServicesSupport.hasService()</target>
        </trans-unit>
        <trans-unit id="3e99882ad992b0f32e4dd2b1bb4c28b28bc09ec0" translate="yes" xml:space="preserve">
          <source>BeanContextServicesSupport.initialize()</source>
          <target state="translated">BeanContextServicesSupport.initialize()</target>
        </trans-unit>
        <trans-unit id="f11bd73bc41352eeca8e32d13263ff1230488dd9" translate="yes" xml:space="preserve">
          <source>BeanContextServicesSupport.initializeBeanContextResources()</source>
          <target state="translated">BeanContextServicesSupport.initializeBeanContextResources()</target>
        </trans-unit>
        <trans-unit id="839c362611afff79022b99c14035496ff43dcf42" translate="yes" xml:space="preserve">
          <source>BeanContextServicesSupport.releaseBeanContextResources()</source>
          <target state="translated">BeanContextServicesSupport.releaseBeanContextResources()</target>
        </trans-unit>
        <trans-unit id="97f09cee60c454b0cb7d75931684c1840d4837cb" translate="yes" xml:space="preserve">
          <source>BeanContextServicesSupport.releaseService()</source>
          <target state="translated">BeanContextServicesSupport.releaseService()</target>
        </trans-unit>
        <trans-unit id="fb07d4d95bf6b0092e9306602d0aaf502f62cc91" translate="yes" xml:space="preserve">
          <source>BeanContextServicesSupport.removeBeanContextServicesListener()</source>
          <target state="translated">BeanContextServicesSupport.removeBeanContextServicesListener()</target>
        </trans-unit>
        <trans-unit id="b5c35859433d93ed5baef82b9c83198a109d530f" translate="yes" xml:space="preserve">
          <source>BeanContextServicesSupport.revokeService()</source>
          <target state="translated">BeanContextServicesSupport.revokeService()</target>
        </trans-unit>
        <trans-unit id="e5776a35867f159e8803a0da5a8b9afadd49e3d1" translate="yes" xml:space="preserve">
          <source>BeanContextServicesSupport.serviceAvailable()</source>
          <target state="translated">BeanContextServicesSupport.serviceAvailable()</target>
        </trans-unit>
        <trans-unit id="46d1500c286753038054e16fc4fb7592339a76dc" translate="yes" xml:space="preserve">
          <source>BeanContextServicesSupport.serviceRevoked()</source>
          <target state="translated">BeanContextServicesSupport.serviceRevoked()</target>
        </trans-unit>
        <trans-unit id="691316247257a11e2b7219e1be4f0e4c1128dcb0" translate="yes" xml:space="preserve">
          <source>BeanContextSupport</source>
          <target state="translated">BeanContextSupport</target>
        </trans-unit>
        <trans-unit id="70cccef6a9935d4f1cf5e01ae0ca189b4c3c2f62" translate="yes" xml:space="preserve">
          <source>BeanContextSupport.BCSChild</source>
          <target state="translated">BeanContextSupport.BCSChild</target>
        </trans-unit>
        <trans-unit id="b583e5734992ea9204c9f2ec7ebcbfe9ce5bab82" translate="yes" xml:space="preserve">
          <source>BeanContextSupport.BCSIterator</source>
          <target state="translated">BeanContextSupport.BCSIterator</target>
        </trans-unit>
        <trans-unit id="18dd536bb0eb21543cc1476ebdfa34040e8f319a" translate="yes" xml:space="preserve">
          <source>BeanContextSupport.BCSIterator.hasNext()</source>
          <target state="translated">BeanContextSupport.BCSIterator.hasNext()</target>
        </trans-unit>
        <trans-unit id="f57a0fdc6b5369d8d1025547d451cd7cd4d2deda" translate="yes" xml:space="preserve">
          <source>BeanContextSupport.BCSIterator.next()</source>
          <target state="translated">BeanContextSupport.BCSIterator.next()</target>
        </trans-unit>
        <trans-unit id="eea557f2716bd911d8a144dc70395554bf29111a" translate="yes" xml:space="preserve">
          <source>BeanContextSupport.BCSIterator.remove()</source>
          <target state="translated">BeanContextSupport.BCSIterator.remove()</target>
        </trans-unit>
        <trans-unit id="622bfcb38b8309e15f641b27f3ae2a44cc505cb0" translate="yes" xml:space="preserve">
          <source>BeanContextSupport.add()</source>
          <target state="translated">BeanContextSupport.add()</target>
        </trans-unit>
        <trans-unit id="1531bb0a410f25a2f73d2a46503da83208d8be29" translate="yes" xml:space="preserve">
          <source>BeanContextSupport.addAll()</source>
          <target state="translated">BeanContextSupport.addAll()</target>
        </trans-unit>
        <trans-unit id="aefb876f3ccde1c94680c99245dc84741c3b2c2b" translate="yes" xml:space="preserve">
          <source>BeanContextSupport.addBeanContextMembershipListener()</source>
          <target state="translated">BeanContextSupport.addBeanContextMembershipListener()</target>
        </trans-unit>
        <trans-unit id="ece74503d78d287baf5876c85377e091a741a581" translate="yes" xml:space="preserve">
          <source>BeanContextSupport.avoidingGui()</source>
          <target state="translated">BeanContextSupport.avoidingGui()</target>
        </trans-unit>
        <trans-unit id="b20329f7e784914621b28065314383207d03a129" translate="yes" xml:space="preserve">
          <source>BeanContextSupport.bcsChildren()</source>
          <target state="translated">BeanContextSupport.bcsChildren()</target>
        </trans-unit>
        <trans-unit id="c1acaaf760be13c93ce5ffec759144a316f14a6f" translate="yes" xml:space="preserve">
          <source>BeanContextSupport.bcsPreDeserializationHook()</source>
          <target state="translated">BeanContextSupport.bcsPreDeserializationHook()</target>
        </trans-unit>
        <trans-unit id="e79f8962a5ea53fd1e085ee99b392e34e778ccef" translate="yes" xml:space="preserve">
          <source>BeanContextSupport.bcsPreSerializationHook()</source>
          <target state="translated">BeanContextSupport.bcsPreSerializationHook()</target>
        </trans-unit>
        <trans-unit id="251e3f1ea92f7f1d60ed5cc1cf5cd773fa321e1d" translate="yes" xml:space="preserve">
          <source>BeanContextSupport.childDeserializedHook()</source>
          <target state="translated">BeanContextSupport.childDeserializedHook()</target>
        </trans-unit>
        <trans-unit id="20b7655006a12ecc86ca5694f3fca1e141f784d5" translate="yes" xml:space="preserve">
          <source>BeanContextSupport.childJustAddedHook()</source>
          <target state="translated">BeanContextSupport.childJustAddedHook()</target>
        </trans-unit>
        <trans-unit id="29e7ecd57c76178cf2559eec903ea451c469bd58" translate="yes" xml:space="preserve">
          <source>BeanContextSupport.childJustRemovedHook()</source>
          <target state="translated">BeanContextSupport.childJustRemovedHook()</target>
        </trans-unit>
        <trans-unit id="b95ce1b077caaedf9565771ffd4bfc78f8d72641" translate="yes" xml:space="preserve">
          <source>BeanContextSupport.classEquals()</source>
          <target state="translated">BeanContextSupport.classEquals()</target>
        </trans-unit>
        <trans-unit id="99249b0076b22b9d887728c03078d3457dca9a9d" translate="yes" xml:space="preserve">
          <source>BeanContextSupport.clear()</source>
          <target state="translated">BeanContextSupport.clear()</target>
        </trans-unit>
        <trans-unit id="fd294c342e8f2d0c8d361e4a3ab2e388d5f76a81" translate="yes" xml:space="preserve">
          <source>BeanContextSupport.contains()</source>
          <target state="translated">BeanContextSupport.contains()</target>
        </trans-unit>
        <trans-unit id="d96573b2ddddfedab057af190fedb332ea5eb4ce" translate="yes" xml:space="preserve">
          <source>BeanContextSupport.containsAll()</source>
          <target state="translated">BeanContextSupport.containsAll()</target>
        </trans-unit>
        <trans-unit id="76772e499b8901818d11ab8b1fb2c6938a38810d" translate="yes" xml:space="preserve">
          <source>BeanContextSupport.containsKey()</source>
          <target state="translated">BeanContextSupport.containsKey()</target>
        </trans-unit>
        <trans-unit id="a1e55ede80aa09f84e520a351f26569f3f9a3635" translate="yes" xml:space="preserve">
          <source>BeanContextSupport.copyChildren()</source>
          <target state="translated">BeanContextSupport.copyChildren()</target>
        </trans-unit>
        <trans-unit id="c6dc6dfea4830225cd2a828f1bc9527eb7fc0bdd" translate="yes" xml:space="preserve">
          <source>BeanContextSupport.createBCSChild()</source>
          <target state="translated">BeanContextSupport.createBCSChild()</target>
        </trans-unit>
        <trans-unit id="d6c88db9cc72e68818dd24081db2d3b8cce4195e" translate="yes" xml:space="preserve">
          <source>BeanContextSupport.deserialize()</source>
          <target state="translated">BeanContextSupport.deserialize()</target>
        </trans-unit>
        <trans-unit id="41ae64674eb32793a878c8a284904856bbc83c97" translate="yes" xml:space="preserve">
          <source>BeanContextSupport.dontUseGui()</source>
          <target state="translated">BeanContextSupport.dontUseGui()</target>
        </trans-unit>
        <trans-unit id="c9951e4e37252028b75a54248d15aa6e21947b0b" translate="yes" xml:space="preserve">
          <source>BeanContextSupport.fireChildrenAdded()</source>
          <target state="translated">BeanContextSupport.fireChildrenAdded()</target>
        </trans-unit>
        <trans-unit id="2b2c2e2129033ed8e98aeec47dbf1bf80edddd4d" translate="yes" xml:space="preserve">
          <source>BeanContextSupport.fireChildrenRemoved()</source>
          <target state="translated">BeanContextSupport.fireChildrenRemoved()</target>
        </trans-unit>
        <trans-unit id="57e09eb748f4063558e73b164db6e56b3d8a1f69" translate="yes" xml:space="preserve">
          <source>BeanContextSupport.getBeanContextPeer()</source>
          <target state="translated">BeanContextSupport.getBeanContextPeer()</target>
        </trans-unit>
        <trans-unit id="306927027ef4fadcce70c1306bfdceabd9ac5d9b" translate="yes" xml:space="preserve">
          <source>BeanContextSupport.getChildBeanContextChild()</source>
          <target state="translated">BeanContextSupport.getChildBeanContextChild()</target>
        </trans-unit>
        <trans-unit id="5f377dacaf6a0198da44856ba1b34d14828deeb9" translate="yes" xml:space="preserve">
          <source>BeanContextSupport.getChildBeanContextMembershipListener()</source>
          <target state="translated">BeanContextSupport.getChildBeanContextMembershipListener()</target>
        </trans-unit>
        <trans-unit id="937466c14b9e48da93d59870a49b9aa8d6923a69" translate="yes" xml:space="preserve">
          <source>BeanContextSupport.getChildPropertyChangeListener()</source>
          <target state="translated">BeanContextSupport.getChildPropertyChangeListener()</target>
        </trans-unit>
        <trans-unit id="d0aea4b079655be054eea20ee7575c465693cf64" translate="yes" xml:space="preserve">
          <source>BeanContextSupport.getChildSerializable()</source>
          <target state="translated">BeanContextSupport.getChildSerializable()</target>
        </trans-unit>
        <trans-unit id="47e86769ede2d80592a3463a03067ad5b2d53cad" translate="yes" xml:space="preserve">
          <source>BeanContextSupport.getChildVetoableChangeListener()</source>
          <target state="translated">BeanContextSupport.getChildVetoableChangeListener()</target>
        </trans-unit>
        <trans-unit id="2dfc3aa38549ed1fb57db844757780c01e245034" translate="yes" xml:space="preserve">
          <source>BeanContextSupport.getChildVisibility()</source>
          <target state="translated">BeanContextSupport.getChildVisibility()</target>
        </trans-unit>
        <trans-unit id="487b74aa641bb54359a9bf3dc580125a0196fa92" translate="yes" xml:space="preserve">
          <source>BeanContextSupport.getLocale()</source>
          <target state="translated">BeanContextSupport.getLocale()</target>
        </trans-unit>
        <trans-unit id="25751d4da9e6832f81e18e387ec51d35b5238591" translate="yes" xml:space="preserve">
          <source>BeanContextSupport.getResource()</source>
          <target state="translated">BeanContextSupport.getResource()</target>
        </trans-unit>
        <trans-unit id="1fb8f7ab9c3cb90576886cb8302816aca51de526" translate="yes" xml:space="preserve">
          <source>BeanContextSupport.getResourceAsStream()</source>
          <target state="translated">BeanContextSupport.getResourceAsStream()</target>
        </trans-unit>
        <trans-unit id="4f3021e976ea2a45c098b57c10971e420837cf49" translate="yes" xml:space="preserve">
          <source>BeanContextSupport.initialize()</source>
          <target state="translated">BeanContextSupport.initialize()</target>
        </trans-unit>
        <trans-unit id="277c4ea6759cb7286d4ead9f353b7d2ef3e1dcdb" translate="yes" xml:space="preserve">
          <source>BeanContextSupport.instantiateChild()</source>
          <target state="translated">BeanContextSupport.instantiateChild()</target>
        </trans-unit>
        <trans-unit id="f0d71294b1cb403cfbb26ea2b80a5a0a5b052a9d" translate="yes" xml:space="preserve">
          <source>BeanContextSupport.isDesignTime()</source>
          <target state="translated">BeanContextSupport.isDesignTime()</target>
        </trans-unit>
        <trans-unit id="a7c0fd4785c89c59dab2531e2e5dbaa855d5250d" translate="yes" xml:space="preserve">
          <source>BeanContextSupport.isEmpty()</source>
          <target state="translated">BeanContextSupport.isEmpty()</target>
        </trans-unit>
        <trans-unit id="d34b965ae04168f6cbc2e75a7f0f2643654d4d3f" translate="yes" xml:space="preserve">
          <source>BeanContextSupport.isSerializing()</source>
          <target state="translated">BeanContextSupport.isSerializing()</target>
        </trans-unit>
        <trans-unit id="e12687bb21474daf7f271c3a0fe9625ad8d7fe29" translate="yes" xml:space="preserve">
          <source>BeanContextSupport.iterator()</source>
          <target state="translated">BeanContextSupport.iterator()</target>
        </trans-unit>
        <trans-unit id="b991be4b05cf5bd7b19f30f232d1bf291592d2c0" translate="yes" xml:space="preserve">
          <source>BeanContextSupport.needsGui()</source>
          <target state="translated">BeanContextSupport.needsGui()</target>
        </trans-unit>
        <trans-unit id="fe928a6c3f38c6faf9f15321189e6b56b63500b2" translate="yes" xml:space="preserve">
          <source>BeanContextSupport.okToUseGui()</source>
          <target state="translated">BeanContextSupport.okToUseGui()</target>
        </trans-unit>
        <trans-unit id="31550820b5cda810c05e567edc58f3304265d596" translate="yes" xml:space="preserve">
          <source>BeanContextSupport.propertyChange()</source>
          <target state="translated">BeanContextSupport.propertyChange()</target>
        </trans-unit>
        <trans-unit id="f161645d9a7d258ea7483e1f51325c65e672512d" translate="yes" xml:space="preserve">
          <source>BeanContextSupport.readChildren()</source>
          <target state="translated">BeanContextSupport.readChildren()</target>
        </trans-unit>
        <trans-unit id="61d84ef4214d63dbef02d24206e58c03242d5968" translate="yes" xml:space="preserve">
          <source>BeanContextSupport.remove()</source>
          <target state="translated">BeanContextSupport.remove()</target>
        </trans-unit>
        <trans-unit id="a807dc4056d098c9005eaaeb750e614308a9349b" translate="yes" xml:space="preserve">
          <source>BeanContextSupport.removeAll()</source>
          <target state="translated">BeanContextSupport.removeAll()</target>
        </trans-unit>
        <trans-unit id="4f03d57249306ae858ebbac37a731d55ce22422a" translate="yes" xml:space="preserve">
          <source>BeanContextSupport.removeBeanContextMembershipListener()</source>
          <target state="translated">BeanContextSupport.removeBeanContextMembershipListener()</target>
        </trans-unit>
        <trans-unit id="10b165318c3d0be1a35c530f2df49254d0999b63" translate="yes" xml:space="preserve">
          <source>BeanContextSupport.retainAll()</source>
          <target state="translated">BeanContextSupport.retainAll()</target>
        </trans-unit>
        <trans-unit id="8227b8fd287ce0e6f406e0a478497245705884f7" translate="yes" xml:space="preserve">
          <source>BeanContextSupport.serialize()</source>
          <target state="translated">BeanContextSupport.serialize()</target>
        </trans-unit>
        <trans-unit id="786b23a64827bc892c35ebbc6e40bc72bae622b5" translate="yes" xml:space="preserve">
          <source>BeanContextSupport.setDesignTime()</source>
          <target state="translated">BeanContextSupport.setDesignTime()</target>
        </trans-unit>
        <trans-unit id="2da856a5a05a10e3ee56351db6268ef52d93ca71" translate="yes" xml:space="preserve">
          <source>BeanContextSupport.setLocale()</source>
          <target state="translated">BeanContextSupport.setLocale()</target>
        </trans-unit>
        <trans-unit id="1fb54131cdafcbdf798a3ba6f37dc9e345a4ea5e" translate="yes" xml:space="preserve">
          <source>BeanContextSupport.size()</source>
          <target state="translated">BeanContextSupport.size()</target>
        </trans-unit>
        <trans-unit id="7f0db6ff2aa468c79b10a3de99addec6bf2e922d" translate="yes" xml:space="preserve">
          <source>BeanContextSupport.toArray()</source>
          <target state="translated">BeanContextSupport.toArray()</target>
        </trans-unit>
        <trans-unit id="01c4e53b8f5865fb265ccbf4b25d1be0fa1e3de2" translate="yes" xml:space="preserve">
          <source>BeanContextSupport.validatePendingAdd()</source>
          <target state="translated">BeanContextSupport.validatePendingAdd()</target>
        </trans-unit>
        <trans-unit id="cf17e6494455e844b573ddb150e27826d52d81e5" translate="yes" xml:space="preserve">
          <source>BeanContextSupport.validatePendingRemove()</source>
          <target state="translated">BeanContextSupport.validatePendingRemove()</target>
        </trans-unit>
        <trans-unit id="39ab6cc41a60f5183c1137b1a769367da30126d7" translate="yes" xml:space="preserve">
          <source>BeanContextSupport.vetoableChange()</source>
          <target state="translated">BeanContextSupport.vetoableChange()</target>
        </trans-unit>
        <trans-unit id="f447975cb1a6ac3c7569308d227433965bc8f873" translate="yes" xml:space="preserve">
          <source>BeanContextSupport.writeChildren()</source>
          <target state="translated">BeanContextSupport.writeChildren()</target>
        </trans-unit>
        <trans-unit id="78d4fa2bd86998cecd983d09439813a6d97ab329" translate="yes" xml:space="preserve">
          <source>BeanDescriptor</source>
          <target state="translated">BeanDescriptor</target>
        </trans-unit>
        <trans-unit id="7591997d5ebb7ff48b3baea41f6310694d46acd0" translate="yes" xml:space="preserve">
          <source>BeanDescriptor.getBeanClass()</source>
          <target state="translated">BeanDescriptor.getBeanClass()</target>
        </trans-unit>
        <trans-unit id="6627919b1e36c2f9736f53505f8d629b4171677c" translate="yes" xml:space="preserve">
          <source>BeanDescriptor.getCustomizerClass()</source>
          <target state="translated">BeanDescriptor.getCustomizerClass()</target>
        </trans-unit>
        <trans-unit id="b42019fdb9a373a91eae11744abf7c19ca774af0" translate="yes" xml:space="preserve">
          <source>BeanInfo</source>
          <target state="translated">BeanInfo</target>
        </trans-unit>
        <trans-unit id="2fa9bafe3d404f12015fa068c42bc5df21a856cb" translate="yes" xml:space="preserve">
          <source>BeanInfo.getAdditionalBeanInfo()</source>
          <target state="translated">BeanInfo.getAdditionalBeanInfo()</target>
        </trans-unit>
        <trans-unit id="a71f8753ff078906aa372d9d95f03be0dfd9687a" translate="yes" xml:space="preserve">
          <source>BeanInfo.getBeanDescriptor()</source>
          <target state="translated">BeanInfo.getBeanDescriptor()</target>
        </trans-unit>
        <trans-unit id="f343dd290f7b7e3cf889a30f69fc9e5a2d3cedd2" translate="yes" xml:space="preserve">
          <source>BeanInfo.getDefaultEventIndex()</source>
          <target state="translated">BeanInfo.getDefaultEventIndex()</target>
        </trans-unit>
        <trans-unit id="b3e162c551b8fb6b37d9506d7878c379c28a3bee" translate="yes" xml:space="preserve">
          <source>BeanInfo.getDefaultPropertyIndex()</source>
          <target state="translated">BeanInfo.getDefaultPropertyIndex()</target>
        </trans-unit>
        <trans-unit id="68d4d05079924998545c3f3172b5b15a7c0192c6" translate="yes" xml:space="preserve">
          <source>BeanInfo.getEventSetDescriptors()</source>
          <target state="translated">BeanInfo.getEventSetDescriptors()</target>
        </trans-unit>
        <trans-unit id="fc301d6b50b69fe69154f86c31e95a79aff6aa44" translate="yes" xml:space="preserve">
          <source>BeanInfo.getIcon()</source>
          <target state="translated">BeanInfo.getIcon()</target>
        </trans-unit>
        <trans-unit id="342aa37804eb29bb70eefc0eefcde68ad0c5063d" translate="yes" xml:space="preserve">
          <source>BeanInfo.getMethodDescriptors()</source>
          <target state="translated">BeanInfo.getMethodDescriptors()</target>
        </trans-unit>
        <trans-unit id="784bf231d9482e1217fadfe68fc229fd357222c7" translate="yes" xml:space="preserve">
          <source>BeanInfo.getPropertyDescriptors()</source>
          <target state="translated">BeanInfo.getPropertyDescriptors()</target>
        </trans-unit>
        <trans-unit id="66d641bac8069cc122a4051898568808f4598c16" translate="yes" xml:space="preserve">
          <source>Beans</source>
          <target state="translated">Beans</target>
        </trans-unit>
        <trans-unit id="b41d836df4be0ad35b22e06a58be92adf38bc7d4" translate="yes" xml:space="preserve">
          <source>Beans.getInstanceOf()</source>
          <target state="translated">Beans.getInstanceOf()</target>
        </trans-unit>
        <trans-unit id="b8ea14cc6fb92aaaaf04a4e37e9311baf406413a" translate="yes" xml:space="preserve">
          <source>Beans.instantiate()</source>
          <target state="translated">Beans.instantiate()</target>
        </trans-unit>
        <trans-unit id="4ff4b0d7d67ecfbc146f58d78661b6140523c0e5" translate="yes" xml:space="preserve">
          <source>Beans.isDesignTime()</source>
          <target state="translated">Beans.isDesignTime()</target>
        </trans-unit>
        <trans-unit id="db0126c1968905c5bfbe282cd8f02f23ed6a5613" translate="yes" xml:space="preserve">
          <source>Beans.isGuiAvailable()</source>
          <target state="translated">Beans.isGuiAvailable()</target>
        </trans-unit>
        <trans-unit id="488223a036d92a2dd85d9b027d31893f51e4d1d2" translate="yes" xml:space="preserve">
          <source>Beans.isInstanceOf()</source>
          <target state="translated">Beans.isInstanceOf()</target>
        </trans-unit>
        <trans-unit id="07fe079ea83cd92d8d3de1f4ec52ce398efd4411" translate="yes" xml:space="preserve">
          <source>Beans.setDesignTime()</source>
          <target state="translated">Beans.setDesignTime()</target>
        </trans-unit>
        <trans-unit id="6a2acdfa02a641d42e41a25722b494f7d551a1ef" translate="yes" xml:space="preserve">
          <source>Beans.setGuiAvailable()</source>
          <target state="translated">Beans.setGuiAvailable()</target>
        </trans-unit>
        <trans-unit id="d513247fd563bcf6456e09988a937f842c805bd0" translate="yes" xml:space="preserve">
          <source>Because &lt;a href=&quot;socketoptions#SO_RCVBUF&quot;&gt;&lt;code&gt;SO_RCVBUF&lt;/code&gt;&lt;/a&gt; is a hint, applications that want to verify what size the buffers were set to should call &lt;a href=&quot;socket#getReceiveBufferSize--&quot;&gt;&lt;code&gt;getReceiveBufferSize()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;socketoptions#SO_RCVBUF&quot;&gt; &lt;code&gt;SO_RCVBUF&lt;/code&gt; &lt;/a&gt; 는 힌트 이므로 버퍼가 설정된 크기를 확인하려는 응용 프로그램은 &lt;a href=&quot;socket#getReceiveBufferSize--&quot;&gt; &lt;code&gt;getReceiveBufferSize()&lt;/code&gt; &lt;/a&gt; 호출해야 합니다 .</target>
        </trans-unit>
        <trans-unit id="ae67a4a505c9488936e7a159d393b16e207eb431" translate="yes" xml:space="preserve">
          <source>Because &lt;a href=&quot;socketoptions#SO_SNDBUF&quot;&gt;&lt;code&gt;SO_SNDBUF&lt;/code&gt;&lt;/a&gt; is a hint, applications that want to verify what size the buffers were set to should call &lt;a href=&quot;socket#getSendBufferSize--&quot;&gt;&lt;code&gt;getSendBufferSize()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;socketoptions#SO_SNDBUF&quot;&gt; &lt;code&gt;SO_SNDBUF&lt;/code&gt; &lt;/a&gt; 는 힌트 이므로 버퍼 크기를 확인하려는 응용 프로그램은 &lt;a href=&quot;socket#getSendBufferSize--&quot;&gt; &lt;code&gt;getSendBufferSize()&lt;/code&gt; &lt;/a&gt; 호출해야합니다 .</target>
        </trans-unit>
        <trans-unit id="0ac53da399eaa89c5f01d9fd94f953caeac309be" translate="yes" xml:space="preserve">
          <source>Because &lt;code&gt;Properties&lt;/code&gt; inherits from &lt;code&gt;Hashtable&lt;/code&gt;, the &lt;code&gt;put&lt;/code&gt; and &lt;code&gt;putAll&lt;/code&gt; methods can be applied to a &lt;code&gt;Properties&lt;/code&gt; object. Their use is strongly discouraged as they allow the caller to insert entries whose keys or values are not &lt;code&gt;Strings&lt;/code&gt;. The &lt;code&gt;setProperty&lt;/code&gt; method should be used instead. If the &lt;code&gt;store&lt;/code&gt; or &lt;code&gt;save&lt;/code&gt; method is called on a &quot;compromised&quot; &lt;code&gt;Properties&lt;/code&gt; object that contains a non-&lt;code&gt;String&lt;/code&gt; key or value, the call will fail. Similarly, the call to the &lt;code&gt;propertyNames&lt;/code&gt; or &lt;code&gt;list&lt;/code&gt; method will fail if it is called on a &quot;compromised&quot; &lt;code&gt;Properties&lt;/code&gt; object that contains a non-&lt;code&gt;String&lt;/code&gt; key.</source>
          <target state="translated">때문에 &lt;code&gt;Properties&lt;/code&gt; 에서 상속 &lt;code&gt;Hashtable&lt;/code&gt; 은 &lt;code&gt;put&lt;/code&gt; 및 &lt;code&gt;putAll&lt;/code&gt; 에의 방법은에 적용 할 수있는 &lt;code&gt;Properties&lt;/code&gt; 객체입니다. 호출자가 키 또는 값이 &lt;code&gt;Strings&lt;/code&gt; 이 아닌 항목을 삽입 할 수 있으므로 사용하지 않는 것이 좋습니다 . &lt;code&gt;setProperty&lt;/code&gt; 는의 방법 대신에 사용되어야한다. &lt;code&gt;String&lt;/code&gt; 이 아닌 키 또는 값 이 포함 된 &quot;손상된&quot; &lt;code&gt;Properties&lt;/code&gt; 개체 에서 &lt;code&gt;store&lt;/code&gt; 또는 &lt;code&gt;save&lt;/code&gt; 메서드가 호출 되면 호출이 실패합니다. 마찬가지로 &quot;compromised&quot; 에서 호출되면 &lt;code&gt;propertyNames&lt;/code&gt; 또는 &lt;code&gt;list&lt;/code&gt; 메소드에 대한 호출 이 실패합니다. &lt;code&gt;Properties&lt;/code&gt; &lt;code&gt;String&lt;/code&gt; 이 아닌 키 를 포함하는 속성 개체입니다 .</target>
        </trans-unit>
        <trans-unit id="f49a8041b3ec0e2a4b95c69c1fa13090aa890de4" translate="yes" xml:space="preserve">
          <source>Because &lt;code&gt;String&lt;/code&gt; is a &lt;em&gt;simple type&lt;/em&gt;, in the sense of &lt;a href=&quot;openmbean/simpletype&quot;&gt;&lt;code&gt;SimpleType&lt;/code&gt;&lt;/a&gt;, it is not changed in the context of an MXBean. The MXBean proxy behaves the same as a Standard MBean proxy (see &lt;a href=&quot;jmx#newMBeanProxy-javax.management.MBeanServerConnection-javax.management.ObjectName-java.lang.Class-&quot;&gt;&lt;code&gt;newMBeanProxy&lt;/code&gt;&lt;/a&gt;) for the attribute &lt;code&gt;SimpleAttribute&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;String&lt;/code&gt; 은 &lt;em&gt;단순 유형&lt;/em&gt; 이므로 &lt;a href=&quot;openmbean/simpletype&quot;&gt; &lt;code&gt;SimpleType&lt;/code&gt; &lt;/a&gt; 의 의미 에서 MXBean 컨텍스트에서 변경되지 않습니다. MXBean 프록시 는 &lt;code&gt;SimpleAttribute&lt;/code&gt; 속성에 대한 표준 MBean 프록시 ( &lt;a href=&quot;jmx#newMBeanProxy-javax.management.MBeanServerConnection-javax.management.ObjectName-java.lang.Class-&quot;&gt; &lt;code&gt;newMBeanProxy&lt;/code&gt; &lt;/a&gt; 참조 ) 와 동일하게 작동합니다 .</target>
        </trans-unit>
        <trans-unit id="ec045989b8ec3507e6530b10af51f14d4626ef86" translate="yes" xml:space="preserve">
          <source>Because SO_RCVBUF is a hint, applications that want to verify what size the buffers were set to should call &lt;a href=&quot;datagramsocket#getReceiveBufferSize--&quot;&gt;&lt;code&gt;getReceiveBufferSize()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">SO_RCVBUF는 힌트이므로 버퍼가 설정된 크기를 확인하려는 응용 프로그램은 &lt;a href=&quot;datagramsocket#getReceiveBufferSize--&quot;&gt; &lt;code&gt;getReceiveBufferSize()&lt;/code&gt; &lt;/a&gt; 호출해야 합니다 .</target>
        </trans-unit>
        <trans-unit id="5e8f25c54290955a89166ac8543a07477bb7e73c" translate="yes" xml:space="preserve">
          <source>Because a &lt;code&gt;Line.Info&lt;/code&gt; knows the class of the line its describes, a &lt;code&gt;DataLine.Info&lt;/code&gt; object can describe &lt;code&gt;DataLine&lt;/code&gt; subinterfaces such as &lt;code&gt;&lt;a href=&quot;sourcedataline&quot;&gt;&lt;code&gt;SourceDataLine&lt;/code&gt;&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;targetdataline&quot;&gt;&lt;code&gt;TargetDataLine&lt;/code&gt;&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;clip&quot;&gt;&lt;code&gt;Clip&lt;/code&gt;&lt;/a&gt;&lt;/code&gt;. You can query a mixer for lines of any of these types, passing an appropriate instance of &lt;code&gt;DataLine.Info&lt;/code&gt; as the argument to a method such as &lt;code&gt;&lt;a href=&quot;mixer#getLine-javax.sound.sampled.Line.Info-&quot;&gt;&lt;code&gt;Mixer.getLine(Line.Info)&lt;/code&gt;&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Line.Info&lt;/code&gt; 는 해당 라인의 클래스를 알고 있기 때문에 &lt;code&gt;DataLine.Info&lt;/code&gt; 객체는 &lt;code&gt;&lt;a href=&quot;sourcedataline&quot;&gt;&lt;code&gt;SourceDataLine&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;targetdataline&quot;&gt;&lt;code&gt;TargetDataLine&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;clip&quot;&gt;&lt;code&gt;Clip&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; 과 같은 &lt;code&gt;DataLine&lt;/code&gt; 하위 인터페이스를 설명 할 수 있습니다 . 이러한 유형의 라인에 대한 믹서를 쿼리하여 적절한 &lt;code&gt;DataLine.Info&lt;/code&gt; 인스턴스 를 &lt;code&gt;&lt;a href=&quot;mixer#getLine-javax.sound.sampled.Line.Info-&quot;&gt;&lt;code&gt;Mixer.getLine(Line.Info)&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; 와 같은 메소드에 인수로 전달할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e5c6e7749806a3ccc9beb65a4cd9ec6e8c5041b1" translate="yes" xml:space="preserve">
          <source>Because buffer hash codes are content-dependent, it is inadvisable to use buffers as keys in hash maps or similar data structures unless it is known that their contents will not change.</source>
          <target state="translated">버퍼 해시 코드는 내용에 따라 다르므로, 내용이 변경되지 않는 것으로 알려지지 않은 경우 버퍼를 해시 맵 또는 유사한 데이터 구조에서 키로 사용하는 것은 바람직하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="d4ccac972442ce5a809c81bc3da7ddc6fa395fc0" translate="yes" xml:space="preserve">
          <source>Because checks in acquire are invoked before enqueuing, a newly acquiring thread may &lt;em&gt;barge&lt;/em&gt; ahead of others that are blocked and queued. However, you can, if desired, define &lt;code&gt;tryAcquire&lt;/code&gt; and/or &lt;code&gt;tryAcquireShared&lt;/code&gt; to disable barging by internally invoking one or more of the inspection methods, thereby providing a &lt;em&gt;fair&lt;/em&gt; FIFO acquisition order. In particular, most fair synchronizers can define &lt;code&gt;tryAcquire&lt;/code&gt; to return &lt;code&gt;false&lt;/code&gt; if &lt;a href=&quot;abstractqueuedsynchronizer#hasQueuedPredecessors--&quot;&gt;&lt;code&gt;hasQueuedPredecessors()&lt;/code&gt;&lt;/a&gt; (a method specifically designed to be used by fair synchronizers) returns &lt;code&gt;true&lt;/code&gt;. Other variations are possible.</source>
          <target state="translated">취득에서 검사 대기열을 넣는 전에 호출되기 때문에, 새로 취득 스레드 수 &lt;em&gt;에 끼어&lt;/em&gt; 미리 차단하고 대기중인 다른 사람의. 그러나 원하는 경우 &lt;code&gt;tryAcquire&lt;/code&gt; 및 / 또는 &lt;code&gt;tryAcquireShared&lt;/code&gt; 를 정의 하여 하나 이상의 검사 방법을 내부적으로 호출하여 참여를 비활성화함으로써 &lt;em&gt;공정한&lt;/em&gt; FIFO 획득 순서 를 제공 할 수 있습니다. 특히, 대부분의 공정 동기화 프로그램은 &lt;a href=&quot;abstractqueuedsynchronizer#hasQueuedPredecessors--&quot;&gt; &lt;code&gt;hasQueuedPredecessors()&lt;/code&gt; &lt;/a&gt; (공정 동기화 프로그램에서 사용하도록 특별히 설계된 메소드)가 &lt;code&gt;true&lt;/code&gt; 를 리턴 하면 &lt;code&gt;tryAcquire&lt;/code&gt; 가 &lt;code&gt;false&lt;/code&gt; 를 리턴하도록 정의 할 수 있습니다 . 다른 변형이 가능하다.</target>
        </trans-unit>
        <trans-unit id="3909ff589dfd92ffdd2bdb1744ec420dced59e11" translate="yes" xml:space="preserve">
          <source>Because class &lt;code&gt;Random&lt;/code&gt; uses a seed with only 48 bits, this algorithm will not return all possible &lt;code&gt;long&lt;/code&gt; values.</source>
          <target state="translated">&lt;code&gt;Random&lt;/code&gt; 클래스 는 48 비트 만있는 seed를 사용 하므로이 알고리즘은 가능한 모든 &lt;code&gt;long&lt;/code&gt; 값을 반환하지는 않습니다 .</target>
        </trans-unit>
        <trans-unit id="1e81de40314053a7937201ca1c6eac413c916fb0" translate="yes" xml:space="preserve">
          <source>Because floating-point operations may not be strictly associative, the returned result may not be identical to the value that would be obtained if the operation was performed sequentially.</source>
          <target state="translated">부동 소수점 연산이 엄격하게 연관되지 않을 수 있으므로 리턴 된 결과는 연산이 순차적으로 수행 된 경우 얻을 수있는 값과 동일하지 않을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e970760db82f7b1458da7ee7f7e75f226aa4a1e3" translate="yes" xml:space="preserve">
          <source>Because it is possible for extensions to be installed into a running Java virtual machine, this method may return different results each time it is invoked.</source>
          <target state="translated">확장이 실행중인 Java 가상 머신에 설치 될 수 있으므로이 메소드는 호출 될 때마다 다른 결과를 리턴 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="de754b2addf76ae2be6bf13f8b1b145d9329bce1" translate="yes" xml:space="preserve">
          <source>Because it supports coordinated usage across multiple lock modes, this class does not directly implement the &lt;a href=&quot;lock&quot;&gt;&lt;code&gt;Lock&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;readwritelock&quot;&gt;&lt;code&gt;ReadWriteLock&lt;/code&gt;&lt;/a&gt; interfaces. However, a StampedLock may be viewed &lt;a href=&quot;stampedlock#asReadLock--&quot;&gt;&lt;code&gt;asReadLock()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;stampedlock#asWriteLock--&quot;&gt;&lt;code&gt;asWriteLock()&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;stampedlock#asReadWriteLock--&quot;&gt;&lt;code&gt;asReadWriteLock()&lt;/code&gt;&lt;/a&gt; in applications requiring only the associated set of functionality.</source>
          <target state="translated">여러 잠금 모드에서 조정 된 사용을 지원 &lt;a href=&quot;readwritelock&quot;&gt; &lt;code&gt;ReadWriteLock&lt;/code&gt; &lt;/a&gt; 클래스는 &lt;a href=&quot;lock&quot;&gt; &lt;code&gt;Lock&lt;/code&gt; &lt;/a&gt; 또는 ReadWriteLock 인터페이스를 직접 구현하지 않습니다 . 그러나 연결된 기능 집합 만 필요한 응용 프로그램 에서는 &lt;a href=&quot;stampedlock#asWriteLock--&quot;&gt; &lt;code&gt;asWriteLock()&lt;/code&gt; &lt;/a&gt;&lt;a href=&quot;stampedlock#asReadLock--&quot;&gt; &lt;code&gt;asReadLock()&lt;/code&gt; &lt;/a&gt; , asWriteLock () 또는 &lt;a href=&quot;stampedlock#asReadWriteLock--&quot;&gt; &lt;code&gt;asReadWriteLock()&lt;/code&gt; &lt;/a&gt; 으로 볼 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="6923853c77265efc96981e7d3e74fd40a93c564d" translate="yes" xml:space="preserve">
          <source>Because link-local and site-local addresses are non-global, it is possible that different hosts may have the same destination address and may be reachable through different interfaces on the same originating system. In this case, the originating system is said to be connected to multiple zones of the same scope. In order to disambiguate which is the intended destination zone, it is possible to append a zone identifier (or</source>
          <target state="translated">링크 로컬 주소와 사이트 로컬 주소는 비전 역이므로 다른 호스트가 동일한 대상 주소를 가질 수 있으며 동일한 시작 시스템의 다른 인터페이스를 통해 연결할 수 있습니다. 이 경우, 발신 시스템은 동일한 범위의 여러 영역에 연결되어 있다고합니다. 의도 한 대상 영역을 명확하게하기 위해 영역 식별자를 추가 할 수 있습니다 (또는</target>
        </trans-unit>
        <trans-unit id="b43f3bb2a87a2fba261a2b9fbd32f8a83dc2bafb" translate="yes" xml:space="preserve">
          <source>Because method types contain &quot;live&quot; &lt;code&gt;Class&lt;/code&gt; objects, method type matching takes into account both types names and class loaders. Thus, even if a method handle &lt;code&gt;M&lt;/code&gt; is created in one class loader &lt;code&gt;L1&lt;/code&gt; and used in another &lt;code&gt;L2&lt;/code&gt;, method handle calls are type-safe, because the caller's symbolic type descriptor, as resolved in &lt;code&gt;L2&lt;/code&gt;, is matched against the original callee method's symbolic type descriptor, as resolved in &lt;code&gt;L1&lt;/code&gt;. The resolution in &lt;code&gt;L1&lt;/code&gt; happens when &lt;code&gt;M&lt;/code&gt; is created and its type is assigned, while the resolution in &lt;code&gt;L2&lt;/code&gt; happens when the &lt;code&gt;invokevirtual&lt;/code&gt; instruction is linked.</source>
          <target state="translated">메소드 유형에는 &quot;실시간&quot; &lt;code&gt;Class&lt;/code&gt; 오브젝트가 포함되므로 메소드 유형 일치는 유형 이름과 클래스 로더를 모두 고려합니다. 따라서, 방법 핸들하더라도 &lt;code&gt;M&lt;/code&gt; 이 로더 한 클래스 생성 &lt;code&gt;L1&lt;/code&gt; 다른에서 사용 &lt;code&gt;L2&lt;/code&gt; 해결 같이 발신자의 심볼 타입 기술자 때문에, 방법 핸들 통화 입력 안전한 &lt;code&gt;L2&lt;/code&gt; 원래 호 출처에있어서의 심볼 형에 대해 일치 기술자는 같은 해결 &lt;code&gt;L1&lt;/code&gt; . 의 해상도 &lt;code&gt;L1&lt;/code&gt; 이 때 발생하는 &lt;code&gt;M&lt;/code&gt; 가 생성되고 그 형태가 지정되어있는 동안 해상도, &lt;code&gt;L2&lt;/code&gt; 는 때 발생 &lt;code&gt;invokevirtual&lt;/code&gt; 명령이 연결되어있다.</target>
        </trans-unit>
        <trans-unit id="135d5125de0233b433b12c866151d5b84d3b70bd" translate="yes" xml:space="preserve">
          <source>Because objects in the parameters array may not be serializable, during serialization all objects in the parameters array are written as the corresponding Strings (using Object.toString).</source>
          <target state="translated">매개 변수 배열의 객체는 직렬화 할 수 없으므로 직렬화 중에 매개 변수 배열의 모든 객체는 해당 문자열로 작성됩니다 (Object.toString 사용).</target>
        </trans-unit>
        <trans-unit id="d99778e04545ec02cf85c3e472b210c4c74ceb61" translate="yes" xml:space="preserve">
          <source>Because of the action of the &lt;code&gt;asType&lt;/code&gt; step, the following argument conversions are applied as necessary:</source>
          <target state="translated">&lt;code&gt;asType&lt;/code&gt; 단계 의 조치로 인해 다음과 같은 인수 변환이 필요에 따라 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="ca7d8963488efc2d8c77e912910fa4b8b6ee313e" translate="yes" xml:space="preserve">
          <source>Because of the general &lt;a href=&quot;methodhandles.lookup#equiv&quot;&gt;equivalence&lt;/a&gt; between &lt;code&gt;invokevirtual&lt;/code&gt; instructions and method handles produced by &lt;code&gt;findVirtual&lt;/code&gt;, if the class is &lt;code&gt;MethodHandle&lt;/code&gt; and the name string is &lt;code&gt;invokeExact&lt;/code&gt; or &lt;code&gt;invoke&lt;/code&gt;, the resulting method handle is equivalent to one produced by &lt;a href=&quot;methodhandles#exactInvoker-java.lang.invoke.MethodType-&quot;&gt;&lt;code&gt;MethodHandles.exactInvoker&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;methodhandles#invoker-java.lang.invoke.MethodType-&quot;&gt;&lt;code&gt;MethodHandles.invoker&lt;/code&gt;&lt;/a&gt; with the same &lt;code&gt;type&lt;/code&gt; argument. &lt;b&gt;Example:&lt;/b&gt;</source>
          <target state="translated">&lt;code&gt;findVirtual&lt;/code&gt; 에 의해 생성 된 &lt;code&gt;invokevirtual&lt;/code&gt; 명령어와 메소드 핸들 간의 일반적인 &lt;a href=&quot;methodhandles.lookup#equiv&quot;&gt;동등성&lt;/a&gt; 으로 인해 클래스가 &lt;code&gt;MethodHandle&lt;/code&gt; 이고 이름 문자열이 &lt;code&gt;invokeExact&lt;/code&gt; 또는 &lt;code&gt;invoke&lt;/code&gt; 인 경우 결과 메소드 핸들은 동일한 &lt;code&gt;type&lt;/code&gt; &lt;a href=&quot;methodhandles#exactInvoker-java.lang.invoke.MethodType-&quot;&gt; &lt;code&gt;MethodHandles.exactInvoker&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;methodhandles#invoker-java.lang.invoke.MethodType-&quot;&gt; &lt;code&gt;MethodHandles.invoker&lt;/code&gt; 에&lt;/a&gt; 의해 생성 된 것과 동일 합니다. 논의. &lt;b&gt;예:&lt;/b&gt;&lt;b&gt;&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="2a1021feb1d1b36653cb4e2078a43f58d17f0a51" translate="yes" xml:space="preserve">
          <source>Because of the last point, the implementation behaves as if a volatile read of &lt;code&gt;V&lt;/code&gt; were performed by &lt;code&gt;T&lt;/code&gt; immediately after its action &lt;code&gt;A&lt;/code&gt;. In the local ordering of actions in &lt;code&gt;T&lt;/code&gt;, this read happens before any future read of the target of &lt;code&gt;S&lt;/code&gt;. It is as if the implementation arbitrarily picked a read of &lt;code&gt;S&lt;/code&gt;'s target by &lt;code&gt;T&lt;/code&gt;, and forced a read of &lt;code&gt;V&lt;/code&gt; to precede it, thereby ensuring communication of the new target value.</source>
          <target state="translated">마지막 지점으로 인해 구현은 동작 &lt;code&gt;A&lt;/code&gt; 직후 에 &lt;code&gt;T&lt;/code&gt; 에 의해 &lt;code&gt;V&lt;/code&gt; 의 휘발성 읽기 가 수행 된 것처럼 작동 합니다. &lt;code&gt;T&lt;/code&gt; 의 로컬 작업 순서 에서이 읽기는 &lt;code&gt;S&lt;/code&gt; 의 대상에 대한 향후 읽기 전에 발생합니다 . 마치 구현이 임의로 &lt;code&gt;T&lt;/code&gt; 의 &lt;code&gt;S&lt;/code&gt; 대상 읽기를 선택하고 &lt;code&gt;V&lt;/code&gt; 의 읽기를 강제 로 수행하여 새로운 대상 값의 통신을 보장하는 것과 같습니다.</target>
        </trans-unit>
        <trans-unit id="b998cc2f93b9f13cb58ab1554408f2efba64c18c" translate="yes" xml:space="preserve">
          <source>Because of the need for a &lt;code&gt;signature&lt;/code&gt; to differentiate possibly-overloaded operations, it is much simpler to invoke operations through an &lt;a href=&quot;jmx#newMBeanProxy-javax.management.MBeanServerConnection-javax.management.ObjectName-java.lang.Class-&quot;&gt;MBean proxy&lt;/a&gt; where possible. For example, suppose you have a Standard MBean interface like this:</source>
          <target state="translated">오버로드 될 수있는 조작을 구별 하기위한 &lt;code&gt;signature&lt;/code&gt; 이 필요하기 때문에 가능하면 &lt;a href=&quot;jmx#newMBeanProxy-javax.management.MBeanServerConnection-javax.management.ObjectName-java.lang.Class-&quot;&gt;MBean 프록시를&lt;/a&gt; 통해 조작을 호출하는 것이 훨씬 간단 합니다. 예를 들어, 다음과 같은 표준 MBean 인터페이스가 있다고 가정하십시오.</target>
        </trans-unit>
        <trans-unit id="40d2d088861cbd59d26878d432ec07f0069de761" translate="yes" xml:space="preserve">
          <source>Because of the possibility of &lt;a href=&quot;../reflect/method#isBridge--&quot;&gt;bridge methods&lt;/a&gt; and other corner cases, the interface may also have several abstract methods with the same name but having distinct descriptors (types of returns and parameters). In this case, all the methods are bound in common to the one given target. The type check and effective &lt;code&gt;asType&lt;/code&gt; conversion is applied to each method type descriptor, and all abstract methods are bound to the target in common. Beyond this type check, no further checks are made to determine that the abstract methods are related in any way.</source>
          <target state="translated">&lt;a href=&quot;../reflect/method#isBridge--&quot;&gt;브릿지 메소드&lt;/a&gt; 및 기타 코너 경우 의 가능성으로 인해 인터페이스에는 이름은 같지만 고유 한 설명자 (반환 유형 및 매개 변수)를 갖는 여러 추상 메소드가있을 수 있습니다. 이 경우 모든 방법이 주어진 대상에 공통으로 바인딩됩니다. 타입 검사와 효과적인 &lt;code&gt;asType&lt;/code&gt; 변환은 각 메소드 타입 설명자에 적용되며 모든 추상 메소드는 공통으로 대상에 바인딩됩니다. 이 유형 검사 외에 추상 메소드가 어떤 식 으로든 연관되어 있는지 확인하기위한 추가 검사는 수행되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="12d2c679157f50eb1b96f4788d82c114f3a7d1e2" translate="yes" xml:space="preserve">
          <source>Because of these issues, it is recommended that clients migrate away from constructing non-conforming locales and use the &lt;code&gt;forLanguageTag&lt;/code&gt; and &lt;code&gt;Locale.Builder&lt;/code&gt; APIs instead. Clients desiring a string representation of the complete locale can then always rely on &lt;code&gt;toLanguageTag&lt;/code&gt; for this purpose.</source>
          <target state="translated">이러한 문제 때문에 클라이언트는 부적합한 로케일을 생성하지 않고 &lt;code&gt;forLanguageTag&lt;/code&gt; 및 &lt;code&gt;Locale.Builder&lt;/code&gt; API를 대신 사용하는 것이 좋습니다. 완전한 로케일의 문자열 표현을 원하는 클라이언트 는이 목적으로 항상 &lt;code&gt;toLanguageTag&lt;/code&gt; 에 의존 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="cce1e62d97fa0aae0df9093385176cea583b30d4" translate="yes" xml:space="preserve">
          <source>Because the data is pre-loaded and has a known length, you can set a clip to start playing at any position in its audio data. You can also create a loop, so that when the clip is played it will cycle repeatedly. Loops are specified with a starting and ending sample frame, along with the number of times that the loop should be played.</source>
          <target state="translated">데이터가 사전로드되어 있고 길이가 알려져 있기 때문에 오디오 데이터의 어느 위치에서나 클립이 재생되도록 설정할 수 있습니다. 클립을 재생할 때 반복적으로 반복되도록 루프를 만들 수도 있습니다. 루프는 시작 및 종료 샘플 프레임과 함께 루프 재생 횟수와 함께 지정됩니다.</target>
        </trans-unit>
        <trans-unit id="3aff1c4d3a381edabcaf6682a0b2aba1d8d372e5" translate="yes" xml:space="preserve">
          <source>Because the various types of controls have different purposes and features, all of their functionality is accessed from the subclasses that define each kind of control.</source>
          <target state="translated">다양한 유형의 컨트롤은 목적과 기능이 다르기 때문에 각 기능을 정의하는 하위 클래스에서 모든 기능에 액세스 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f615c0a8b17750fc41aeab1a26ba97dda5c52bc2" translate="yes" xml:space="preserve">
          <source>Because this method allows the public key to be specified as a byte array, it may be used for unknown key types.</source>
          <target state="translated">이 방법을 사용하면 공개 키를 바이트 배열로 지정할 수 있으므로 알 수없는 키 유형에 사용될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b7237d2936cbcdffafd29058533e2a1c33fe7008" translate="yes" xml:space="preserve">
          <source>Because this option is a hint, applications that want to verify what loopback mode is set to should call &lt;a href=&quot;multicastsocket#getLoopbackMode--&quot;&gt;&lt;code&gt;getLoopbackMode()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">이 옵션은 힌트이므로 어떤 루프백 모드가 설정되어 있는지 확인하려는 응용 프로그램은 &lt;a href=&quot;multicastsocket#getLoopbackMode--&quot;&gt; &lt;code&gt;getLoopbackMode()&lt;/code&gt; &lt;/a&gt; 호출해야합니다.</target>
        </trans-unit>
        <trans-unit id="7b0915244f7627fd3f02fdbc99aee904efe8a5d2" translate="yes" xml:space="preserve">
          <source>Before AH</source>
          <target state="translated">AH 전</target>
        </trans-unit>
        <trans-unit id="7d4b3a95899e29c0370074b2c6b0c590ee28fc03" translate="yes" xml:space="preserve">
          <source>Before R.O.C.</source>
          <target state="translated">ROC 이전</target>
        </trans-unit>
        <trans-unit id="b90ec4cf563e926a2b5d401db661be6cb1b2cc7c" translate="yes" xml:space="preserve">
          <source>Before a keystore can be accessed, it must be &lt;a href=&quot;keystore#load-java.io.InputStream-char:A-&quot;&gt;&lt;code&gt;loaded&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">키 스토어에 액세스하려면 &lt;a href=&quot;keystore#load-java.io.InputStream-char:A-&quot;&gt; &lt;code&gt;loaded&lt;/code&gt; &lt;/a&gt; 해야합니다 .</target>
        </trans-unit>
        <trans-unit id="2c6581353476a1bfed6b889babc0e047499173b7" translate="yes" xml:space="preserve">
          <source>Before calling the call method, additional aspects of the task can be configured, for example, by calling the &lt;a href=&quot;documentationtool.documentationtask#setLocale-java.util.Locale-&quot;&gt;setLocale&lt;/a&gt; method.</source>
          <target state="translated">call 메소드를 호출하기 전에 &lt;a href=&quot;documentationtool.documentationtask#setLocale-java.util.Locale-&quot;&gt;setLocale&lt;/a&gt; 메소드 를 호출하여 태스크의 추가 측면을 구성 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="682fe1f3a87dc5da4197cc050da21c8ceee4d235" translate="yes" xml:space="preserve">
          <source>Before calling the call method, additional aspects of the task can be configured, for example, by calling the &lt;a href=&quot;javacompiler.compilationtask#setProcessors-java.lang.Iterable-&quot;&gt;setProcessors&lt;/a&gt; method.</source>
          <target state="translated">call 메소드를 호출하기 전에 예를 들어 &lt;a href=&quot;javacompiler.compilationtask#setProcessors-java.lang.Iterable-&quot;&gt;setProcessors&lt;/a&gt; 메소드 를 호출하여 태스크의 추가 측면을 구성 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="39cbd6cf39059e497df23f5ad5b8839c14c418da" translate="yes" xml:space="preserve">
          <source>Before calling the target, the adapter verifies that the array contains exactly enough elements to provide a correct argument count to the target method handle. (The array may also be null when zero elements are required.)</source>
          <target state="translated">대상을 호출하기 전에 어댑터는 배열에 대상 메소드 핸들에 올바른 인수 수를 제공 할만큼 충분한 요소가 포함되어 있는지 확인합니다. 0 개의 요소가 필요한 경우 배열이 null 일 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="f030655d47a87cc3db22d04b3c1ea93c22b28d9d" translate="yes" xml:space="preserve">
          <source>Before delegation, an absolute resource name is constructed from the given resource name using this algorithm:</source>
          <target state="translated">위임하기 전에이 알고리즘을 사용하여 주어진 리소스 이름에서 절대 리소스 이름이 구성됩니다.</target>
        </trans-unit>
        <trans-unit id="e9a1c37e3057da043675d120f996bd6fe95bbbbc" translate="yes" xml:space="preserve">
          <source>Before invoking its target, if the target differs from the expected type, the invoker will apply reference casts as necessary and box, unbox, or widen primitive values, as if by &lt;a href=&quot;methodhandle#asType-java.lang.invoke.MethodType-&quot;&gt;&lt;code&gt;asType&lt;/code&gt;&lt;/a&gt;. Similarly, the return value will be converted as necessary. If the target is a &lt;a href=&quot;methodhandle#asVarargsCollector-java.lang.Class-&quot;&gt;variable arity method handle&lt;/a&gt;, the required arity conversion will be made, again as if by &lt;a href=&quot;methodhandle#asType-java.lang.invoke.MethodType-&quot;&gt;&lt;code&gt;asType&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">대상을 호출하기 전에 대상이 예상되는 유형과 다른 경우 호출자는 &lt;a href=&quot;methodhandle#asType-java.lang.invoke.MethodType-&quot;&gt; &lt;code&gt;asType&lt;/code&gt; &lt;/a&gt; 과 같이 필요에 따라 참조 캐스트를 적용하고 기본 값을 box, unbox 또는 widen 적용 합니다. 마찬가지로 반환 값은 필요에 따라 변환됩니다. 대상이 &lt;a href=&quot;methodhandle#asVarargsCollector-java.lang.Class-&quot;&gt;가변 arity 메소드 핸들&lt;/a&gt; 인 경우 &lt;a href=&quot;methodhandle#asType-java.lang.invoke.MethodType-&quot;&gt; &lt;code&gt;asType&lt;/code&gt; 에&lt;/a&gt; 의한 것처럼 필요한 arity 변환이 다시 수행됩니다 .</target>
        </trans-unit>
        <trans-unit id="e30b176f2e4668d552569760e28a3e8966b08c4b" translate="yes" xml:space="preserve">
          <source>Before invoking its target, the invoker will spread the final array, apply reference casts as necessary, and unbox and widen primitive arguments. If, when the invoker is called, the supplied array argument does not have the correct number of elements, the invoker will throw an &lt;a href=&quot;../illegalargumentexception&quot;&gt;&lt;code&gt;IllegalArgumentException&lt;/code&gt;&lt;/a&gt; instead of invoking the target.</source>
          <target state="translated">대상을 호출하기 전에 호출자는 최종 배열을 분산시키고 필요에 따라 참조 캐스트를 적용하며 기본 인수를 개봉하고 넓 힙니다. 호출자가 호출 될 때 제공된 배열 인수에 올바른 수의 요소가없는 경우 호출자는 대상을 호출하는 대신 &lt;a href=&quot;../illegalargumentexception&quot;&gt; &lt;code&gt;IllegalArgumentException&lt;/code&gt; &lt;/a&gt; 을 발생시킵니다.</target>
        </trans-unit>
        <trans-unit id="504005d82b337b080b3f2b9ef0eb5ae5475a96df" translate="yes" xml:space="preserve">
          <source>Before making use of the &lt;code&gt;cpe&lt;/code&gt; parameter, this method updates the environment associated with that object by setting the value of the property &lt;a href=&quot;#CPE&quot;&gt;&lt;code&gt;CPE&lt;/code&gt;&lt;/a&gt; to &lt;code&gt;cpe&lt;/code&gt;. This property will be inherited by the continuation context, and may be used by that context's service provider to inspect the fields of this exception.</source>
          <target state="translated">&lt;code&gt;cpe&lt;/code&gt; 매개 변수 를 사용하기 전에이 메소드는 &lt;a href=&quot;#CPE&quot;&gt; &lt;code&gt;CPE&lt;/code&gt; &lt;/a&gt; 특성 값 을 &lt;code&gt;cpe&lt;/code&gt; 로 설정하여 해당 오브젝트와 연관된 환경을 업데이트합니다 . 이 속성은 연속 컨텍스트에 상속되며 해당 컨텍스트의 서비스 공급자가이 예외의 필드를 검사하는 데 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="dd62acf59faaf76e2fc6d5eed1b3b0c735204a19" translate="yes" xml:space="preserve">
          <source>Before method resolution, if the explicitly specified caller class is not identical with the lookup class, or if this lookup object does not have &lt;a href=&quot;methodhandles.lookup#privacc&quot;&gt;private access&lt;/a&gt; privileges, the access fails.</source>
          <target state="translated">메서드 확인 전에 명시 적으로 지정된 호출자 클래스가 조회 클래스와 동일하지 않거나이 조회 개체에 &lt;a href=&quot;methodhandles.lookup#privacc&quot;&gt;개인 액세스&lt;/a&gt; 권한 이없는 경우 액세스가 실패합니다.</target>
        </trans-unit>
        <trans-unit id="cf2c479bbccc25a5fcb073098d52fff42c7077d7" translate="yes" xml:space="preserve">
          <source>Before obtaining an item each thread must acquire a permit from the semaphore, guaranteeing that an item is available for use. When the thread has finished with the item it is returned back to the pool and a permit is returned to the semaphore, allowing another thread to acquire that item. Note that no synchronization lock is held when &lt;a href=&quot;semaphore#acquire--&quot;&gt;&lt;code&gt;acquire()&lt;/code&gt;&lt;/a&gt; is called as that would prevent an item from being returned to the pool. The semaphore encapsulates the synchronization needed to restrict access to the pool, separately from any synchronization needed to maintain the consistency of the pool itself.</source>
          <target state="translated">품목을 얻기 전에 각 스레드는 세마포어에서 허가를 얻어 품목을 사용할 수 있도록해야합니다. 스레드가 항목을 완료하면 풀로 다시 리턴되고 허가가 세마포어로 리턴되어 다른 스레드가 해당 항목을 획득 할 수 있습니다. &lt;a href=&quot;semaphore#acquire--&quot;&gt; &lt;code&gt;acquire()&lt;/code&gt; &lt;/a&gt; 가 호출 될 때 동기화 잠금이 유지되지 않으므로 항목이 풀로 리턴되지 않습니다. 세마포어는 풀 자체의 일관성을 유지하는 데 필요한 동기화와 별도로 풀에 대한 액세스를 제한하는 데 필요한 동기화를 캡슐화합니다.</target>
        </trans-unit>
        <trans-unit id="6ac069b2fb6e56a3ab76a4302dd9ac77db0fddc1" translate="yes" xml:space="preserve">
          <source>Before rounding, the scale of the logical exact intermediate result is the preferred scale for that operation. If the exact numerical result cannot be represented in &lt;code&gt;precision&lt;/code&gt; digits, rounding selects the set of digits to return and the scale of the result is reduced from the scale of the intermediate result to the least scale which can represent the &lt;code&gt;precision&lt;/code&gt; digits actually returned. If the exact result can be represented with at most &lt;code&gt;precision&lt;/code&gt; digits, the representation of the result with the scale closest to the preferred scale is returned. In particular, an exactly representable quotient may be represented in fewer than &lt;code&gt;precision&lt;/code&gt; digits by removing trailing zeros and decreasing the scale. For example, rounding to three digits using the &lt;a href=&quot;roundingmode#FLOOR&quot;&gt;floor&lt;/a&gt; rounding mode,</source>
          <target state="translated">반올림하기 전에 논리적 정확한 중간 결과의 스케일이 해당 조작에 선호되는 스케일입니다. 정확한 숫자 결과를 &lt;code&gt;precision&lt;/code&gt; 자릿수 로 표현할 수없는 경우 반올림은 반환 할 자릿수 세트를 선택하고 결과의 스케일이 중간 결과 스케일에서 실제로 리턴 된 &lt;code&gt;precision&lt;/code&gt; 자릿수를 나타낼 수있는 최소 스케일로 축소 됩니다. 정확한 결과를 최대 &lt;code&gt;precision&lt;/code&gt; 로 표현할 수 있으면 원하는 스케일에 가장 가까운 스케일로 결과를 표시합니다. 특히 정확하게 표현할 수있는 몫은 &lt;code&gt;precision&lt;/code&gt; 보다 덜 표현 될 수 있습니다.후행 0을 제거하고 스케일을 줄임으로써 숫자. 예를 들어, &lt;a href=&quot;roundingmode#FLOOR&quot;&gt;바닥&lt;/a&gt; 반올림 모드를 사용하여 3 자리로 반올림</target>
        </trans-unit>
        <trans-unit id="cfdda49c0e5c7a8469a6e71341094aade7ecf087" translate="yes" xml:space="preserve">
          <source>Before the JVM can execute a dynamic call site (an &lt;code&gt;invokedynamic&lt;/code&gt; instruction), the call site must first be &lt;em&gt;linked&lt;/em&gt;. Linking is accomplished by calling a &lt;em&gt;bootstrap method&lt;/em&gt; which is given the static information content of the call site, and which must produce a &lt;a href=&quot;methodhandle&quot;&gt;&lt;code&gt;method handle&lt;/code&gt;&lt;/a&gt; that gives the behavior of the call site.</source>
          <target state="translated">JVM이 동적 호출 사이트 ( &lt;code&gt;invokedynamic&lt;/code&gt; 명령)를 실행 하려면 먼저 호출 사이트가 &lt;em&gt;링크되어&lt;/em&gt; 있어야합니다 . 연결은 호출 사이트의 정적 정보 내용이 제공되고 호출 사이트 의 동작을 제공 하는 &lt;a href=&quot;methodhandle&quot;&gt; &lt;code&gt;method handle&lt;/code&gt; &lt;/a&gt; 을 생성해야하는 &lt;em&gt;부트 스트랩 메소드&lt;/em&gt; 를 호출하여 수행됩니다 .</target>
        </trans-unit>
        <trans-unit id="fc632d2f313a755920fc79831cb35b0751ad6a20" translate="yes" xml:space="preserve">
          <source>Before the method handle is returned, the passed-in value is converted to the requested type. If the requested type is primitive, widening primitive conversions are attempted, else reference conversions are attempted.</source>
          <target state="translated">메소드 핸들이 리턴되기 전에 전달 된 값이 요청 된 유형으로 변환됩니다. 요청 된 유형이 프리미티브 인 경우 확장 프리미티브 변환이 시도되고, 그렇지 않으면 참조 변환이 시도됩니다.</target>
        </trans-unit>
        <trans-unit id="0cb5e0d5680b7f8b647296e7767a646dd9c21d7b" translate="yes" xml:space="preserve">
          <source>Before this &lt;code&gt;CallSite&lt;/code&gt; object is returned from a bootstrap method, or invoked in some other manner, it is usually provided with a more useful target method, via a call to &lt;a href=&quot;callsite#setTarget-java.lang.invoke.MethodHandle-&quot;&gt;&lt;code&gt;setTarget&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 &lt;code&gt;CallSite&lt;/code&gt; 객체가 부트 스트랩 메서드에서 반환되거나 다른 방식으로 호출 되기 전에 &lt;a href=&quot;callsite#setTarget-java.lang.invoke.MethodHandle-&quot;&gt; &lt;code&gt;setTarget&lt;/code&gt; &lt;/a&gt; 호출을 통해보다 유용한 대상 메서드가 제공됩니다 .</target>
        </trans-unit>
        <trans-unit id="6f94b8cc7f7034dbeddeb6c32eb04fe7274d5cd4" translate="yes" xml:space="preserve">
          <source>Before waiting on the condition the lock must be held by the current thread. A call to &lt;a href=&quot;condition#await--&quot;&gt;&lt;code&gt;Condition.await()&lt;/code&gt;&lt;/a&gt; will atomically release the lock before waiting and re-acquire the lock before the wait returns.</source>
          <target state="translated">조건을 대기하기 전에 현재 스레드가 잠금을 유지해야합니다. &lt;a href=&quot;condition#await--&quot;&gt; &lt;code&gt;Condition.await()&lt;/code&gt; &lt;/a&gt; 호출하면 대기 전에 잠금을 해제하고 대기가 다시 시작되기 전에 잠금을 다시 획득합니다.</target>
        </trans-unit>
        <trans-unit id="a1f4c62b027ed19cbf20b859f2391a28ae4839c9" translate="yes" xml:space="preserve">
          <source>Begins the insertion of a new image with undefined pixel values into an existing image stream. Existing images with an index greater than &lt;code&gt;imageIndex&lt;/code&gt; are preserved, and their indices are each increased by 1. A value for &lt;code&gt;imageIndex&lt;/code&gt; of -1 may be used to signify an index one larger than the previous largest index; that is, it will cause the image to be logically appended to the end of the sequence. If the output is an &lt;code&gt;ImageOutputStream&lt;/code&gt;, the entirety of the stream must be both readable and writeable.</source>
          <target state="translated">정의되지 않은 픽셀 값을 가진 새 이미지를 기존 이미지 스트림에 삽입하기 시작합니다. &lt;code&gt;imageIndex&lt;/code&gt; 보다 큰 인덱스를 가진 기존 이미지 는 보존되고 해당 인덱스는 각각 1 씩 증가합니다. &lt;code&gt;imageIndex&lt;/code&gt; 값 이 -1이면 이전의 가장 큰 인덱스보다 1이 큰 인덱스를 나타내는 데 사용할 수 있습니다. 즉, 이미지가 시퀀스의 끝에 논리적으로 추가됩니다. 출력이 &lt;code&gt;ImageOutputStream&lt;/code&gt; 인 경우, 스트림 전체를 읽을 수 있고 쓸 수 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="d746db5295ee254d5e5d57d1a9377bb1983d45cf" translate="yes" xml:space="preserve">
          <source>Begins the writing of a complete image stream, consisting of a single image with undefined pixel values and associated metadata and thumbnails, to the output. The pixel values will be defined by future calls to the &lt;code&gt;replacePixels&lt;/code&gt; methods. If the output is an &lt;code&gt;ImageOutputStream&lt;/code&gt;, its existing contents prior to the current seek position are not affected, and need not be readable or writable.</source>
          <target state="translated">픽셀 값이 정의되지 않은 단일 이미지와 관련 메타 데이터 및 썸네일로 구성된 전체 이미지 스트림을 출력에 기록하기 시작합니다. 픽셀 값은 향후 &lt;code&gt;replacePixels&lt;/code&gt; 메소드 호출로 정의됩니다 . 출력이 &lt;code&gt;ImageOutputStream&lt;/code&gt; 인 경우, 현재 탐색 위치 이전의 기존 내용은 영향을받지 않으며 읽기 또는 쓰기가 필요하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="ed46de3018b4c134a34940f3521b9ad0eb7cb357" translate="yes" xml:space="preserve">
          <source>Begins writing a new JAR file entry and positions the stream to the start of the entry data. This method will also close any previous entry. The default compression method will be used if no compression method was specified for the entry. The current time will be used if the entry has no set modification time.</source>
          <target state="translated">새로운 JAR 파일 엔트리의 기입을 개시 해, 스트림을 엔트리 데이터의 선두에 배치합니다. 이 방법은 또한 이전 항목을 닫습니다. 항목에 대해 압축 방법을 지정하지 않은 경우 기본 압축 방법이 사용됩니다. 항목에 설정된 수정 시간이없는 경우 현재 시간이 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="618be9ae51b3f4e063785849f4a9de1b2b337f32" translate="yes" xml:space="preserve">
          <source>Begins writing a new ZIP file entry and positions the stream to the start of the entry data. Closes the current entry if still active. The default compression method will be used if no compression method was specified for the entry, and the current time will be used if the entry has no set modification time.</source>
          <target state="translated">새 ZIP 파일 항목 쓰기를 시작하고 스트림을 항목 데이터의 시작 부분에 배치합니다. 여전히 활성 상태 인 경우 현재 항목을 닫습니다. 항목에 대해 압축 방법을 지정하지 않으면 기본 압축 방법이 사용되며 항목에 설정된 수정 시간이 없으면 현재 시간이 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="d03528d440c354c59d851c9ae6606c251359e20c" translate="yes" xml:space="preserve">
          <source>Below is a picture showing an example of a memory pool:</source>
          <target state="translated">아래는 메모리 풀의 예를 보여주는 그림입니다.</target>
        </trans-unit>
        <trans-unit id="65945b7da95e95e90e3873d052e480bcc47dd30c" translate="yes" xml:space="preserve">
          <source>Below is an example code implementing the same logic as the first example above but using the usage threshold notification mechanism to detect low memory conditions instead of polling. In this example code, upon receiving notification, the notification listener notifies another thread to perform the actual action such as to redistribute outstanding tasks, stop receiving tasks, or resume receiving tasks. The &lt;code&gt;handleNotification&lt;/code&gt; method should be designed to do a very minimal amount of work and return without delay to avoid causing delay in delivering subsequent notifications. Time-consuming actions should be performed by a separate thread. The notification listener may be invoked by multiple threads concurrently; so the tasks performed by the listener should be properly synchronized.</source>
          <target state="translated">다음은 위의 첫 번째 예와 동일한 논리를 구현하지만 사용 임계 값 알림 메커니즘을 사용하여 폴링 대신 메모리 부족 상태를 감지하는 코드 예입니다. 이 예제 코드에서 알림을 수신하면 알림 리스너는 미해결 작업을 재배포하거나 작업 수신을 중지하거나 작업 수신을 재개하는 등의 실제 작업을 수행하도록 다른 스레드에 알립니다. &lt;code&gt;handleNotification&lt;/code&gt; 방법은 이후의 통지의 지연을 방지하기 위해 지체없이 작업과 수익의 아주 최소한의 작업을 수행하도록 설계되어야한다. 시간이 많이 걸리는 작업은 별도의 스레드에서 수행해야합니다. 통지 리스너는 여러 스레드에 의해 동시에 호출 될 수 있습니다. 따라서 리스너가 수행 한 작업은 올바르게 동기화되어야합니다.</target>
        </trans-unit>
        <trans-unit id="484cfc24a55c16c6240695e1bf89c6275f4a8bb2" translate="yes" xml:space="preserve">
          <source>Below is an example of an XML archive containing some user interface components from the &lt;em&gt;swing&lt;/em&gt; toolkit:</source>
          <target state="translated">다음은 &lt;em&gt;스윙&lt;/em&gt; 툴킷의 일부 사용자 인터페이스 구성 요소를 포함하는 XML 아카이브의 예입니다 .</target>
        </trans-unit>
        <trans-unit id="cf5374552eafff1ff14559b2da6cc03f9f5a1857" translate="yes" xml:space="preserve">
          <source>Below is an example showing how to access an attribute from the platform extension:</source>
          <target state="translated">아래는 플랫폼 확장에서 속성에 액세스하는 방법을 보여주는 예입니다.</target>
        </trans-unit>
        <trans-unit id="4ca1d865d08d2e3747bc70774d5ee6a615a86d88" translate="yes" xml:space="preserve">
          <source>Below shows another example that takes some action if a memory pool is under low memory and ignores the memory usage changes during the action processing time.</source>
          <target state="translated">아래는 메모리 풀의 메모리가 부족한 경우 조치 처리 시간 동안 메모리 사용량 변경을 무시하는 조치를 취하는 다른 예를 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="934ef7f56af9a72a5318b5e26c3debcb413caa0a" translate="yes" xml:space="preserve">
          <source>Besides &lt;code&gt;getString&lt;/code&gt;, &lt;code&gt;ResourceBundle&lt;/code&gt; also provides a method for getting string arrays, &lt;code&gt;getStringArray&lt;/code&gt;, as well as a generic &lt;code&gt;getObject&lt;/code&gt; method for any other type of object. When using &lt;code&gt;getObject&lt;/code&gt;, you'll have to cast the result to the appropriate type. For example:</source>
          <target state="translated">게다가 &lt;code&gt;getString&lt;/code&gt; , &lt;code&gt;ResourceBundle&lt;/code&gt; 의는 또한 문자열 배열, 취득하기위한 방법을 제공합니다 &lt;code&gt;getStringArray&lt;/code&gt; 와 뿐만 아니라 일반 &lt;code&gt;getObject&lt;/code&gt; 다른 형태의 객체 방법. &lt;code&gt;getObject&lt;/code&gt; 를 사용 하는 경우 결과를 적절한 유형으로 캐스트해야합니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="8c7d95704932129cdf6309eb99f19e805a69d0cd" translate="yes" xml:space="preserve">
          <source>Besides Queues, this package supplies Collection implementations designed for use in multithreaded contexts: &lt;a href=&quot;concurrenthashmap&quot;&gt;&lt;code&gt;ConcurrentHashMap&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;concurrentskiplistmap&quot;&gt;&lt;code&gt;ConcurrentSkipListMap&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;concurrentskiplistset&quot;&gt;&lt;code&gt;ConcurrentSkipListSet&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;copyonwritearraylist&quot;&gt;&lt;code&gt;CopyOnWriteArrayList&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;copyonwritearrayset&quot;&gt;&lt;code&gt;CopyOnWriteArraySet&lt;/code&gt;&lt;/a&gt;. When many threads are expected to access a given collection, a &lt;code&gt;ConcurrentHashMap&lt;/code&gt; is normally preferable to a synchronized &lt;code&gt;HashMap&lt;/code&gt;, and a &lt;code&gt;ConcurrentSkipListMap&lt;/code&gt; is normally preferable to a synchronized &lt;code&gt;TreeMap&lt;/code&gt;. A &lt;code&gt;CopyOnWriteArrayList&lt;/code&gt; is preferable to a synchronized &lt;code&gt;ArrayList&lt;/code&gt; when the expected number of reads and traversals greatly outnumber the number of updates to a list.</source>
          <target state="translated">큐 외에도이 패키지는 다중 스레드 컨텍스트 ( &lt;a href=&quot;concurrenthashmap&quot;&gt; &lt;code&gt;ConcurrentHashMap&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;concurrentskiplistmap&quot;&gt; &lt;code&gt;ConcurrentSkipListMap&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;concurrentskiplistset&quot;&gt; &lt;code&gt;ConcurrentSkipListSet&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;copyonwritearraylist&quot;&gt; &lt;code&gt;CopyOnWriteArrayList&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;copyonwritearrayset&quot;&gt; &lt;code&gt;CopyOnWriteArraySet&lt;/code&gt; )&lt;/a&gt; 에서 사용하도록 설계된 Collection 구현을 제공합니다 . 많은 스레드가 지정된 컬렉션에 액세스 할 것으로 예상되는 경우, &lt;code&gt;ConcurrentHashMap&lt;/code&gt; 의는 동기화에 일반적으로 바람직하다 &lt;code&gt;HashMap&lt;/code&gt; 에 , 그리고 &lt;code&gt;ConcurrentSkipListMap&lt;/code&gt; 과는 동기화에 일반적으로 바람직하다 &lt;code&gt;TreeMap&lt;/code&gt; . &lt;code&gt;CopyOnWriteArrayList&lt;/code&gt; 동기화하는 것이 바람직하다 &lt;code&gt;ArrayList&lt;/code&gt; 예상되는 읽기 및 순회 수가 목록에 대한 업데이트 수보다 훨씬 많은 경우</target>
        </trans-unit>
        <trans-unit id="fac56fb2ddef5be9ffff448a37648184887b68fe" translate="yes" xml:space="preserve">
          <source>Besides a logical exact result, each arithmetic operation has a preferred scale for representing a result. The preferred scale for each operation is listed in the table below.</source>
          <target state="translated">논리적 인 정확한 결과 외에도 각 산술 연산에는 결과를 나타내는 데 선호되는 척도가 있습니다. 각 작업에 대한 선호 척도가 아래 표에 나열되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="8440ac86775b5a49f695ad91edb531623efd8c64" translate="yes" xml:space="preserve">
          <source>Besides its active or inactive status, the &lt;code&gt;VoiceStatus&lt;/code&gt; class provides fields that reveal the voice's current MIDI channel, bank and program number, MIDI note number, and MIDI volume. All of these can change during the course of a voice. While the voice is inactive, each of these fields has an unspecified value, so you should check the active field first.</source>
          <target state="translated">활성 상태 또는 비활성 상태 외에도 &lt;code&gt;VoiceStatus&lt;/code&gt; 클래스는 음색의 현재 MIDI 채널, 뱅크 및 프로그램 번호, MIDI 음표 번호 및 MIDI 음량을 표시하는 필드를 제공합니다. 이 모든 것은 음성 중에 변경 될 수 있습니다. 음성이 비활성 상태 인 경우 이러한 각 필드에는 지정되지 않은 값이 있으므로 활성 필드를 먼저 확인해야합니다.</target>
        </trans-unit>
        <trans-unit id="6aab534b3d94d739347990b5440ac6add5eff7e1" translate="yes" xml:space="preserve">
          <source>Besides the class information inherited from its superclass, &lt;code&gt;DataLine.Info&lt;/code&gt; provides additional information specific to data lines.</source>
          <target state="translated">&lt;code&gt;DataLine.Info&lt;/code&gt; 는 수퍼 클래스에서 상속 된 클래스 정보 외에 데이터 라인에 특정한 추가 정보를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="1965eb06dd44203226862726b9ad71cbd8011d62" translate="yes" xml:space="preserve">
          <source>Besides the class information inherited from its superclass, &lt;code&gt;DataLine.Info&lt;/code&gt; provides additional information specific to data lines. This information includes:</source>
          <target state="translated">&lt;code&gt;DataLine.Info&lt;/code&gt; 는 수퍼 클래스에서 상속 된 클래스 정보 외에 데이터 라인에 특정한 추가 정보를 제공합니다. 이 정보에는 다음이 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="58093ac83bb65217337e8a197036923c3278212e" translate="yes" xml:space="preserve">
          <source>Best practice for applications is to pass a &lt;code&gt;Clock&lt;/code&gt; into any method that requires the current instant. A dependency injection framework is one way to achieve this:</source>
          <target state="translated">응용 프로그램의 모범 사례는 &lt;code&gt;Clock&lt;/code&gt; 를 현재 순간이 필요한 모든 방법으로 전달하는 것 입니다. 의존성 주입 프레임 워크는 이것을 달성하는 한 가지 방법입니다.</target>
        </trans-unit>
        <trans-unit id="017093ff288d93ef5666987fc26e7682d1f86028" translate="yes" xml:space="preserve">
          <source>Beware that, unlike in most collections, the &lt;code&gt;size&lt;/code&gt; method is &lt;em&gt;NOT&lt;/em&gt; a constant-time operation. Because of the asynchronous nature of these deques, determining the current number of elements requires a traversal of the elements, and so may report inaccurate results if this collection is modified during traversal. Additionally, the bulk operations &lt;code&gt;addAll&lt;/code&gt;, &lt;code&gt;removeAll&lt;/code&gt;, &lt;code&gt;retainAll&lt;/code&gt;, &lt;code&gt;containsAll&lt;/code&gt;, &lt;code&gt;equals&lt;/code&gt;, and &lt;code&gt;toArray&lt;/code&gt; are &lt;em&gt;not&lt;/em&gt; guaranteed to be performed atomically. For example, an iterator operating concurrently with an &lt;code&gt;addAll&lt;/code&gt; operation might view only some of the added elements.</source>
          <target state="translated">대부분의 컬렉션과 달리 &lt;code&gt;size&lt;/code&gt; 메서드는 상수 시간 작업 이 &lt;em&gt;아닙니다&lt;/em&gt; . 이러한 deque의 비동기 적 특성으로 인해 현재 요소 수를 판별하려면 요소의 순회가 필요하므로 순회 중에이 콜렉션이 수정되면 부정확 한 결과가보고 될 수 있습니다. 또한 대량 작업 &lt;code&gt;addAll&lt;/code&gt; , &lt;code&gt;removeAll&lt;/code&gt; , &lt;code&gt;retainAll&lt;/code&gt; , &lt;code&gt;containsAll&lt;/code&gt; , &lt;code&gt;equals&lt;/code&gt; 및 &lt;code&gt;toArray&lt;/code&gt; 가 원자 적으로 수행되는 것은 &lt;em&gt;아닙니다&lt;/em&gt; . 예를 들어 &lt;code&gt;addAll&lt;/code&gt; 작업 과 동시에 작동하는 반복기 는 추가 된 일부 요소 만 볼 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="bfa4cfe1d0e5287ba98bef1fd18c3f0953790122" translate="yes" xml:space="preserve">
          <source>Beware that, unlike in most collections, the &lt;code&gt;size&lt;/code&gt; method is &lt;em&gt;NOT&lt;/em&gt; a constant-time operation. Because of the asynchronous nature of these queues, determining the current number of elements requires a traversal of the elements, and so may report inaccurate results if this collection is modified during traversal. Additionally, the bulk operations &lt;code&gt;addAll&lt;/code&gt;, &lt;code&gt;removeAll&lt;/code&gt;, &lt;code&gt;retainAll&lt;/code&gt;, &lt;code&gt;containsAll&lt;/code&gt;, &lt;code&gt;equals&lt;/code&gt;, and &lt;code&gt;toArray&lt;/code&gt; are &lt;em&gt;not&lt;/em&gt; guaranteed to be performed atomically. For example, an iterator operating concurrently with an &lt;code&gt;addAll&lt;/code&gt; operation might view only some of the added elements.</source>
          <target state="translated">대부분의 컬렉션과 달리 &lt;code&gt;size&lt;/code&gt; 메서드는 상수 시간 작업 이 &lt;em&gt;아닙니다&lt;/em&gt; . 이러한 큐의 비동기 특성으로 인해 현재 요소 수를 판별하려면 요소의 순회가 필요하므로 순회 중에이 콜렉션이 수정되면 부정확 한 결과가보고 될 수 있습니다. 또한 대량 작업 &lt;code&gt;addAll&lt;/code&gt; , &lt;code&gt;removeAll&lt;/code&gt; , &lt;code&gt;retainAll&lt;/code&gt; , &lt;code&gt;containsAll&lt;/code&gt; , &lt;code&gt;equals&lt;/code&gt; 및 &lt;code&gt;toArray&lt;/code&gt; 가 원자 적으로 수행되는 것은 &lt;em&gt;아닙니다&lt;/em&gt; . 예를 들어 &lt;code&gt;addAll&lt;/code&gt; 작업 과 동시에 작동하는 반복기 는 추가 된 일부 요소 만 볼 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5b95ffa88ae54f0eab83145dc8ca8aec53da916d" translate="yes" xml:space="preserve">
          <source>Beware that, unlike in most collections, the &lt;code&gt;size&lt;/code&gt; method is &lt;em&gt;not&lt;/em&gt; a constant-time operation. Because of the asynchronous nature of these maps, determining the current number of elements requires a traversal of the elements, and so may report inaccurate results if this collection is modified during traversal. Additionally, the bulk operations &lt;code&gt;putAll&lt;/code&gt;, &lt;code&gt;equals&lt;/code&gt;, &lt;code&gt;toArray&lt;/code&gt;, &lt;code&gt;containsValue&lt;/code&gt;, and &lt;code&gt;clear&lt;/code&gt; are &lt;em&gt;not&lt;/em&gt; guaranteed to be performed atomically. For example, an iterator operating concurrently with a &lt;code&gt;putAll&lt;/code&gt; operation might view only some of the added elements.</source>
          <target state="translated">대부분의 컬렉션과 달리 &lt;code&gt;size&lt;/code&gt; 메서드는 일정한 시간 작업 이 &lt;em&gt;아닙니다&lt;/em&gt; . 이러한 맵의 비동기 특성으로 인해 현재 요소 수를 판별하려면 요소의 순회가 필요하므로 순회 중에이 콜렉션이 수정되면 부정확 한 결과가보고 될 수 있습니다. 또한 대량 작업 &lt;code&gt;putAll&lt;/code&gt; , &lt;code&gt;equals&lt;/code&gt; , &lt;code&gt;toArray&lt;/code&gt; , &lt;code&gt;containsValue&lt;/code&gt; 및 &lt;code&gt;clear&lt;/code&gt; 는 원자 적으로 수행되도록 보장 &lt;em&gt;되지 않습니다&lt;/em&gt; . 예를 들어 &lt;code&gt;putAll&lt;/code&gt; 작업 과 동시에 작동하는 반복기 는 추가 된 일부 요소 만 볼 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="47a58265b3c4586c73c3742b1603c7f79f90523a" translate="yes" xml:space="preserve">
          <source>Beware that, unlike in most collections, the &lt;code&gt;size&lt;/code&gt; method is &lt;em&gt;not&lt;/em&gt; a constant-time operation. Because of the asynchronous nature of these sets, determining the current number of elements requires a traversal of the elements, and so may report inaccurate results if this collection is modified during traversal. Additionally, the bulk operations &lt;code&gt;addAll&lt;/code&gt;, &lt;code&gt;removeAll&lt;/code&gt;, &lt;code&gt;retainAll&lt;/code&gt;, &lt;code&gt;containsAll&lt;/code&gt;, &lt;code&gt;equals&lt;/code&gt;, and &lt;code&gt;toArray&lt;/code&gt; are &lt;em&gt;not&lt;/em&gt; guaranteed to be performed atomically. For example, an iterator operating concurrently with an &lt;code&gt;addAll&lt;/code&gt; operation might view only some of the added elements.</source>
          <target state="translated">대부분의 컬렉션과 달리 &lt;code&gt;size&lt;/code&gt; 메서드는 일정한 시간 작업 이 &lt;em&gt;아닙니다&lt;/em&gt; . 이러한 세트의 비동기 적 특성으로 인해 현재 요소 수를 판별하려면 요소의 순회가 필요하므로 순회 중에이 콜렉션이 수정되면 부정확 한 결과가보고 될 수 있습니다. 또한 대량 작업 &lt;code&gt;addAll&lt;/code&gt; , &lt;code&gt;removeAll&lt;/code&gt; , &lt;code&gt;retainAll&lt;/code&gt; , &lt;code&gt;containsAll&lt;/code&gt; , &lt;code&gt;equals&lt;/code&gt; 및 &lt;code&gt;toArray&lt;/code&gt; 가 원자 적으로 수행되는 것은 &lt;em&gt;아닙니다&lt;/em&gt; . 예를 들어 &lt;code&gt;addAll&lt;/code&gt; 작업 과 동시에 작동하는 반복기 는 추가 된 일부 요소 만 볼 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a3e58a98475137a958ceb5ab6ed446783c80c2e5" translate="yes" xml:space="preserve">
          <source>Beware that, unlike in most collections, this method is &lt;em&gt;NOT&lt;/em&gt; a constant-time operation. Because of the asynchronous nature of these deques, determining the current number of elements requires traversing them all to count them. Additionally, it is possible for the size to change during execution of this method, in which case the returned result will be inaccurate. Thus, this method is typically not very useful in concurrent applications.</source>
          <target state="translated">대부분의 컬렉션과 달리이 방법은 일정한 시간 동안 작동 &lt;em&gt;하지 않습니다&lt;/em&gt; . 이러한 deque의 비동기 적 특성으로 인해 현재 요소 수를 결정하려면 모든 요소를 ​​순회하여 계산해야합니다. 또한이 메서드를 실행하는 동안 크기가 변경 될 수 있으며이 경우 반환 된 결과가 정확하지 않습니다. 따라서이 방법은 일반적으로 동시 응용 프로그램에서별로 유용하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="1ba3900ea53405bf6e70659e3db4077a29d3d23b" translate="yes" xml:space="preserve">
          <source>Beware that, unlike in most collections, this method is &lt;em&gt;NOT&lt;/em&gt; a constant-time operation. Because of the asynchronous nature of these maps, determining the current number of elements requires traversing them all to count them. Additionally, it is possible for the size to change during execution of this method, in which case the returned result will be inaccurate. Thus, this method is typically not very useful in concurrent applications.</source>
          <target state="translated">대부분의 컬렉션과 달리이 방법은 일정한 시간 동안 작동 &lt;em&gt;하지 않습니다&lt;/em&gt; . 이러한 맵의 비동기 특성으로 인해 현재 요소 수를 결정하려면 모든 요소를 ​​순회하여 계산해야합니다. 또한이 메서드를 실행하는 동안 크기가 변경 될 수 있으며이 경우 반환 된 결과가 정확하지 않습니다. 따라서이 방법은 일반적으로 동시 응용 프로그램에서별로 유용하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="86d1be6613755e6659293b7e404b10b8c350a396" translate="yes" xml:space="preserve">
          <source>Beware that, unlike in most collections, this method is &lt;em&gt;NOT&lt;/em&gt; a constant-time operation. Because of the asynchronous nature of these queues, determining the current number of elements requires an O(n) traversal.</source>
          <target state="translated">대부분의 컬렉션과 달리이 방법은 일정한 시간 동안 작동 &lt;em&gt;하지 않습니다&lt;/em&gt; . 이러한 큐의 비동기 특성으로 인해 현재 요소 수를 결정하려면 O (n) 순회가 필요합니다.</target>
        </trans-unit>
        <trans-unit id="4f77cf9e8d728ee45100516f9072a35a0031518a" translate="yes" xml:space="preserve">
          <source>Beware that, unlike in most collections, this method is &lt;em&gt;NOT&lt;/em&gt; a constant-time operation. Because of the asynchronous nature of these queues, determining the current number of elements requires an O(n) traversal. Additionally, if elements are added or removed during execution of this method, the returned result may be inaccurate. Thus, this method is typically not very useful in concurrent applications.</source>
          <target state="translated">대부분의 컬렉션과 달리이 방법은 일정한 시간 동안 작동 &lt;em&gt;하지 않습니다&lt;/em&gt; . 이러한 큐의 비동기 특성으로 인해 현재 요소 수를 결정하려면 O (n) 순회가 필요합니다. 또한이 메서드를 실행하는 동안 요소를 추가하거나 제거하면 반환 된 결과가 정확하지 않을 수 있습니다. 따라서이 방법은 일반적으로 동시 응용 프로그램에서별로 유용하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="8515fd397ea688400d345c141b22d27d4ed1ded4" translate="yes" xml:space="preserve">
          <source>Beware that, unlike in most collections, this method is &lt;em&gt;NOT&lt;/em&gt; a constant-time operation. Because of the asynchronous nature of these sets, determining the current number of elements requires traversing them all to count them. Additionally, it is possible for the size to change during execution of this method, in which case the returned result will be inaccurate. Thus, this method is typically not very useful in concurrent applications.</source>
          <target state="translated">대부분의 컬렉션과 달리이 방법은 일정한 시간 동안 작동 &lt;em&gt;하지 않습니다&lt;/em&gt; . 이러한 집합의 비동기 특성으로 인해 현재 요소 수를 결정하려면 모든 요소를 ​​순회하여 계산해야합니다. 또한이 메서드를 실행하는 동안 크기가 변경 될 수 있으며이 경우 반환 된 결과가 정확하지 않습니다. 따라서이 방법은 일반적으로 동시 응용 프로그램에서별로 유용하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="03c0b2d2c7e01b5e413c9a4ba8e0a1095a4c5fcf" translate="yes" xml:space="preserve">
          <source>Beyond dates and times, the API also allows the storage of periods and durations of time. A &lt;a href=&quot;duration&quot;&gt;&lt;code&gt;Duration&lt;/code&gt;&lt;/a&gt; is a simple measure of time along the time-line in nanoseconds. A &lt;a href=&quot;period&quot;&gt;&lt;code&gt;Period&lt;/code&gt;&lt;/a&gt; expresses an amount of time in units meaningful to humans, such as years or days.</source>
          <target state="translated">날짜 및 시간 외에도 API는 기간 및 기간을 저장할 수 있습니다. &lt;a href=&quot;duration&quot;&gt; &lt;code&gt;Duration&lt;/code&gt; &lt;/a&gt; 나노초의 시간 - 선을 따라 시간의 간단한 측정 한 것입니다. &lt;a href=&quot;period&quot;&gt; &lt;code&gt;Period&lt;/code&gt; &lt;/a&gt; 등 세 일 등 인간에게 의미있는 단위, 시간의 양을 표현한다.</target>
        </trans-unit>
        <trans-unit id="f89dbede66f17a67316785eee66e744a34cbfde8" translate="yes" xml:space="preserve">
          <source>BiConsumer</source>
          <target state="translated">BiConsumer</target>
        </trans-unit>
        <trans-unit id="9cacc4102634bd89a57597f0d20924ccd1e655e0" translate="yes" xml:space="preserve">
          <source>BiConsumer.accept()</source>
          <target state="translated">BiConsumer.accept()</target>
        </trans-unit>
        <trans-unit id="58c661d38bccc063ab693aa66d198bc7cd203e57" translate="yes" xml:space="preserve">
          <source>BiConsumer.andThen()</source>
          <target state="translated">BiConsumer.andThen()</target>
        </trans-unit>
        <trans-unit id="33e26a54f4d0d5ce1d77e93e3d2288c303fa73e9" translate="yes" xml:space="preserve">
          <source>BiFunction</source>
          <target state="translated">BiFunction</target>
        </trans-unit>
        <trans-unit id="5e66ada09ac62f27f33bbcb603290a5e4eb4f926" translate="yes" xml:space="preserve">
          <source>BiFunction.andThen()</source>
          <target state="translated">BiFunction.andThen()</target>
        </trans-unit>
        <trans-unit id="276585306998b807d0b115e2556dfa4f217b7ee3" translate="yes" xml:space="preserve">
          <source>BiFunction.apply()</source>
          <target state="translated">BiFunction.apply()</target>
        </trans-unit>
        <trans-unit id="5c077f88957790654f46ad09717dedbe9f6bfb22" translate="yes" xml:space="preserve">
          <source>BiPredicate</source>
          <target state="translated">BiPredicate</target>
        </trans-unit>
        <trans-unit id="7a9f332f382a02f31ab0537fabf46e6513293d95" translate="yes" xml:space="preserve">
          <source>BiPredicate.and()</source>
          <target state="translated">BiPredicate.and()</target>
        </trans-unit>
        <trans-unit id="6c7d26d2e29ab9c07f3009ee0e2cb32bb5945d57" translate="yes" xml:space="preserve">
          <source>BiPredicate.negate()</source>
          <target state="translated">BiPredicate.negate()</target>
        </trans-unit>
        <trans-unit id="c03a60e16bb305f01f24d0c59fdf77740e92b054" translate="yes" xml:space="preserve">
          <source>BiPredicate.or()</source>
          <target state="translated">BiPredicate.or()</target>
        </trans-unit>
        <trans-unit id="dd0e470ec59a54c75875931fb7a985d0845ebe0c" translate="yes" xml:space="preserve">
          <source>BiPredicate.test()</source>
          <target state="translated">BiPredicate.test()</target>
        </trans-unit>
        <trans-unit id="ea704b005c2d91273b64585134c6a9dcd62dab32" translate="yes" xml:space="preserve">
          <source>Bidi</source>
          <target state="translated">Bidi</target>
        </trans-unit>
        <trans-unit id="ff6e666f4bb0733e8f4e81525ffaa4dc2f980927" translate="yes" xml:space="preserve">
          <source>Bidi.baseIsLeftToRight()</source>
          <target state="translated">Bidi.baseIsLeftToRight()</target>
        </trans-unit>
        <trans-unit id="c7bdb5bd78a3c85a1c4bb9cf1703c41b9eeaf47b" translate="yes" xml:space="preserve">
          <source>Bidi.createLineBidi()</source>
          <target state="translated">Bidi.createLineBidi()</target>
        </trans-unit>
        <trans-unit id="836a5eb55031009532edd51d7f0036d44ea203ca" translate="yes" xml:space="preserve">
          <source>Bidi.getBaseLevel()</source>
          <target state="translated">Bidi.getBaseLevel()</target>
        </trans-unit>
        <trans-unit id="f7244ba33963c39e306e28ac6b324c0f905acc9a" translate="yes" xml:space="preserve">
          <source>Bidi.getLength()</source>
          <target state="translated">Bidi.getLength()</target>
        </trans-unit>
        <trans-unit id="6a481267ab7f44455548576ddbb162a6ef575fca" translate="yes" xml:space="preserve">
          <source>Bidi.getLevelAt()</source>
          <target state="translated">Bidi.getLevelAt()</target>
        </trans-unit>
        <trans-unit id="fa0db764683ee6c0f86a23dccddbb52f54146a07" translate="yes" xml:space="preserve">
          <source>Bidi.getRunCount()</source>
          <target state="translated">Bidi.getRunCount()</target>
        </trans-unit>
        <trans-unit id="f29056423b79e4379e3349e2c0d8ad0e01453992" translate="yes" xml:space="preserve">
          <source>Bidi.getRunLevel()</source>
          <target state="translated">Bidi.getRunLevel()</target>
        </trans-unit>
        <trans-unit id="9d47d9c99b658fa7975ca7d8c0724b886d0ac577" translate="yes" xml:space="preserve">
          <source>Bidi.getRunLimit()</source>
          <target state="translated">Bidi.getRunLimit()</target>
        </trans-unit>
        <trans-unit id="0f2e6d92cbd6e7936c7311a12ee2ee64d2d3818e" translate="yes" xml:space="preserve">
          <source>Bidi.getRunStart()</source>
          <target state="translated">Bidi.getRunStart()</target>
        </trans-unit>
        <trans-unit id="921e1c3e6ff5c28d2f0445fe46891401da07344d" translate="yes" xml:space="preserve">
          <source>Bidi.isLeftToRight()</source>
          <target state="translated">Bidi.isLeftToRight()</target>
        </trans-unit>
        <trans-unit id="ae2f928e6a1553e364f98e75a0ed8f7e506dff9f" translate="yes" xml:space="preserve">
          <source>Bidi.isMixed()</source>
          <target state="translated">Bidi.isMixed()</target>
        </trans-unit>
        <trans-unit id="c04067245b72580933fac22b806115a392d73ce0" translate="yes" xml:space="preserve">
          <source>Bidi.isRightToLeft()</source>
          <target state="translated">Bidi.isRightToLeft()</target>
        </trans-unit>
        <trans-unit id="54cfa9cd141ab2f96f395f33efc44759864b82f3" translate="yes" xml:space="preserve">
          <source>Bidi.reorderVisually()</source>
          <target state="translated">Bidi.reorderVisually()</target>
        </trans-unit>
        <trans-unit id="efe1fc5ddee72343806185c814e2aafa7d04e567" translate="yes" xml:space="preserve">
          <source>Bidi.requiresBidi()</source>
          <target state="translated">Bidi.requiresBidi()</target>
        </trans-unit>
        <trans-unit id="93ec315ce731639806f128eabf8a46704af36721" translate="yes" xml:space="preserve">
          <source>Bidi.toString()</source>
          <target state="translated">Bidi.toString()</target>
        </trans-unit>
        <trans-unit id="3ab0be3f93d8d722278121e74cf7b35c0bf4473f" translate="yes" xml:space="preserve">
          <source>BigDecimal</source>
          <target state="translated">BigDecimal</target>
        </trans-unit>
        <trans-unit id="2767641396beef6edf6cdd69cd773cdaec3d5b6e" translate="yes" xml:space="preserve">
          <source>BigDecimal.abs()</source>
          <target state="translated">BigDecimal.abs()</target>
        </trans-unit>
        <trans-unit id="39bb482d634750f175186929849226346b32a07f" translate="yes" xml:space="preserve">
          <source>BigDecimal.add()</source>
          <target state="translated">BigDecimal.add()</target>
        </trans-unit>
        <trans-unit id="5623a022a21477c146cfb29e964b4c9fb5f6dd47" translate="yes" xml:space="preserve">
          <source>BigDecimal.byteValueExact()</source>
          <target state="translated">BigDecimal.byteValueExact()</target>
        </trans-unit>
        <trans-unit id="82a05fccbe704454bf771faa09ea03f6f550cf9e" translate="yes" xml:space="preserve">
          <source>BigDecimal.compareTo()</source>
          <target state="translated">BigDecimal.compareTo()</target>
        </trans-unit>
        <trans-unit id="809eb937ff8d25e69dee258872577cf46c4ad5c9" translate="yes" xml:space="preserve">
          <source>BigDecimal.divide()</source>
          <target state="translated">BigDecimal.divide()</target>
        </trans-unit>
        <trans-unit id="e267573f1e1e1475286e2c5c37c0e507d0b31a2d" translate="yes" xml:space="preserve">
          <source>BigDecimal.divideAndRemainder()</source>
          <target state="translated">BigDecimal.divideAndRemainder()</target>
        </trans-unit>
        <trans-unit id="f75dd8025bb12765bf175730b146624b00b4e7b3" translate="yes" xml:space="preserve">
          <source>BigDecimal.divideToIntegralValue()</source>
          <target state="translated">BigDecimal.divideToIntegralValue()</target>
        </trans-unit>
        <trans-unit id="a078d894ee09e8c61c84c6653153cc6bf5ecfbad" translate="yes" xml:space="preserve">
          <source>BigDecimal.doubleValue()</source>
          <target state="translated">BigDecimal.doubleValue()</target>
        </trans-unit>
        <trans-unit id="9da8d2806698d2ebd6d4246ee216897217cf929d" translate="yes" xml:space="preserve">
          <source>BigDecimal.equals()</source>
          <target state="translated">BigDecimal.equals()</target>
        </trans-unit>
        <trans-unit id="964fc0fac8e09a231b61ae24eb52f007bcf51eee" translate="yes" xml:space="preserve">
          <source>BigDecimal.floatValue()</source>
          <target state="translated">BigDecimal.floatValue()</target>
        </trans-unit>
        <trans-unit id="08f93cf87b515560ca4e8ced7821c6340bdd2300" translate="yes" xml:space="preserve">
          <source>BigDecimal.hashCode()</source>
          <target state="translated">BigDecimal.hashCode()</target>
        </trans-unit>
        <trans-unit id="774a417ba71a910d2cfee3343271fee0fd5fec1e" translate="yes" xml:space="preserve">
          <source>BigDecimal.intValue()</source>
          <target state="translated">BigDecimal.intValue()</target>
        </trans-unit>
        <trans-unit id="98280dec5ad977eaea0d2d59c58cad275ee7f16f" translate="yes" xml:space="preserve">
          <source>BigDecimal.intValueExact()</source>
          <target state="translated">BigDecimal.intValueExact()</target>
        </trans-unit>
        <trans-unit id="fadb858f71baf1fdd9e8dff73b22b8a450b9d359" translate="yes" xml:space="preserve">
          <source>BigDecimal.longValue()</source>
          <target state="translated">BigDecimal.longValue()</target>
        </trans-unit>
        <trans-unit id="d82f3653b65dfa09c19efb09a5455f8eb51a4299" translate="yes" xml:space="preserve">
          <source>BigDecimal.longValueExact()</source>
          <target state="translated">BigDecimal.longValueExact()</target>
        </trans-unit>
        <trans-unit id="65d06d03a8d3cfc3b4353d13f9ce18c42bc9e09f" translate="yes" xml:space="preserve">
          <source>BigDecimal.max()</source>
          <target state="translated">BigDecimal.max()</target>
        </trans-unit>
        <trans-unit id="71763a41677e7852aa3186be51337790db6fa030" translate="yes" xml:space="preserve">
          <source>BigDecimal.min()</source>
          <target state="translated">BigDecimal.min()</target>
        </trans-unit>
        <trans-unit id="67887a23efb413a6580132dfd706bd9a38b32988" translate="yes" xml:space="preserve">
          <source>BigDecimal.movePointLeft()</source>
          <target state="translated">BigDecimal.movePointLeft()</target>
        </trans-unit>
        <trans-unit id="ce4859d2b9f3ab0899c6ae100ab3cd7fed6d8d67" translate="yes" xml:space="preserve">
          <source>BigDecimal.movePointRight()</source>
          <target state="translated">BigDecimal.movePointRight()</target>
        </trans-unit>
        <trans-unit id="240847bce5d1e11990f74d70cd00e13009cf8ad7" translate="yes" xml:space="preserve">
          <source>BigDecimal.multiply()</source>
          <target state="translated">BigDecimal.multiply()</target>
        </trans-unit>
        <trans-unit id="d49fdda80a700294e95dc2d2a2c5964581ba649c" translate="yes" xml:space="preserve">
          <source>BigDecimal.negate()</source>
          <target state="translated">BigDecimal.negate()</target>
        </trans-unit>
        <trans-unit id="faaf9b9b58d208181b9c3d3b28dbc5e26ae0c405" translate="yes" xml:space="preserve">
          <source>BigDecimal.plus()</source>
          <target state="translated">BigDecimal.plus()</target>
        </trans-unit>
        <trans-unit id="1564bae0247aa3feb7e24fe088cc18eb1307bdeb" translate="yes" xml:space="preserve">
          <source>BigDecimal.pow()</source>
          <target state="translated">BigDecimal.pow()</target>
        </trans-unit>
        <trans-unit id="3f5caedb33ddae4cb7982bf1c46e74844c87ad30" translate="yes" xml:space="preserve">
          <source>BigDecimal.precision()</source>
          <target state="translated">BigDecimal.precision()</target>
        </trans-unit>
        <trans-unit id="f87ed605072a6b4687f2d1d58956003be78f45ea" translate="yes" xml:space="preserve">
          <source>BigDecimal.remainder()</source>
          <target state="translated">BigDecimal.remainder()</target>
        </trans-unit>
        <trans-unit id="f21b816cab583435231d54e2622191dd3b7c2d39" translate="yes" xml:space="preserve">
          <source>BigDecimal.round()</source>
          <target state="translated">BigDecimal.round()</target>
        </trans-unit>
        <trans-unit id="1959545bd6fba4fdeea7a277f7a767a744305541" translate="yes" xml:space="preserve">
          <source>BigDecimal.scale()</source>
          <target state="translated">BigDecimal.scale()</target>
        </trans-unit>
        <trans-unit id="6e8c5b9b003cd2eac79204b523ae635bdf3e1b6f" translate="yes" xml:space="preserve">
          <source>BigDecimal.scaleByPowerOfTen()</source>
          <target state="translated">BigDecimal.scaleByPowerOfTen()</target>
        </trans-unit>
        <trans-unit id="dcc7e68b2250081ca0b47e5a0375fc9654c0eb19" translate="yes" xml:space="preserve">
          <source>BigDecimal.setScale()</source>
          <target state="translated">BigDecimal.setScale()</target>
        </trans-unit>
        <trans-unit id="e07ae1053484bc1e610e7f090d9e4c7a3063accc" translate="yes" xml:space="preserve">
          <source>BigDecimal.shortValueExact()</source>
          <target state="translated">BigDecimal.shortValueExact()</target>
        </trans-unit>
        <trans-unit id="b7561990379d31f2c12df7e668b7df5d020cbc5b" translate="yes" xml:space="preserve">
          <source>BigDecimal.signum()</source>
          <target state="translated">BigDecimal.signum()</target>
        </trans-unit>
        <trans-unit id="6bbbfd5546b2577698085d4783a744fbe1272940" translate="yes" xml:space="preserve">
          <source>BigDecimal.stripTrailingZeros()</source>
          <target state="translated">BigDecimal.stripTrailingZeros()</target>
        </trans-unit>
        <trans-unit id="09b9decb411ecd3cf1e25af07e155f439467e5c8" translate="yes" xml:space="preserve">
          <source>BigDecimal.subtract()</source>
          <target state="translated">BigDecimal.subtract()</target>
        </trans-unit>
        <trans-unit id="153087f4995d89093d64359622cfac72a0c7f57a" translate="yes" xml:space="preserve">
          <source>BigDecimal.toBigInteger()</source>
          <target state="translated">BigDecimal.toBigInteger()</target>
        </trans-unit>
        <trans-unit id="bfa3c9cddd9d1a0b128e215892ee69ccf4558a45" translate="yes" xml:space="preserve">
          <source>BigDecimal.toBigIntegerExact()</source>
          <target state="translated">BigDecimal.toBigIntegerExact()</target>
        </trans-unit>
        <trans-unit id="9bc6af29b8e8104e9c82d63e3252b70193a4d00d" translate="yes" xml:space="preserve">
          <source>BigDecimal.toEngineeringString()</source>
          <target state="translated">BigDecimal.toEngineeringString()</target>
        </trans-unit>
        <trans-unit id="5d5e07f2fdd936fd1a13aa24442fc41f13020238" translate="yes" xml:space="preserve">
          <source>BigDecimal.toPlainString()</source>
          <target state="translated">BigDecimal.toPlainString()</target>
        </trans-unit>
        <trans-unit id="69e67dea669abc9252cb6d4318c85de233450e75" translate="yes" xml:space="preserve">
          <source>BigDecimal.toString()</source>
          <target state="translated">BigDecimal.toString()</target>
        </trans-unit>
        <trans-unit id="3bbcc46b252e80118de2b4a56b98854aebf92c63" translate="yes" xml:space="preserve">
          <source>BigDecimal.ulp()</source>
          <target state="translated">BigDecimal.ulp()</target>
        </trans-unit>
        <trans-unit id="09187255d33003c68fe605c4d13e16abfdaeb0f9" translate="yes" xml:space="preserve">
          <source>BigDecimal.unscaledValue()</source>
          <target state="translated">BigDecimal.unscaledValue()</target>
        </trans-unit>
        <trans-unit id="4ed4e1aef70fe3402b5d1ea1cba76dd03282945e" translate="yes" xml:space="preserve">
          <source>BigDecimal.valueOf()</source>
          <target state="translated">BigDecimal.valueOf()</target>
        </trans-unit>
        <trans-unit id="e8ac8a37ba48fef1656f54a4a2d867ff2b40a63b" translate="yes" xml:space="preserve">
          <source>BigDecimalString:</source>
          <target state="translated">BigDecimalString:</target>
        </trans-unit>
        <trans-unit id="92438720ccb09a8bc6b241c5b27a00fb72144c25" translate="yes" xml:space="preserve">
          <source>BigInteger</source>
          <target state="translated">BigInteger</target>
        </trans-unit>
        <trans-unit id="b79ca910466285c6df9a15e1718345245c7c7d4d" translate="yes" xml:space="preserve">
          <source>BigInteger constructors and operations throw &lt;code&gt;ArithmeticException&lt;/code&gt; when the result is out of the supported range of -2&lt;sup&gt;&lt;code&gt;Integer.MAX_VALUE&lt;/code&gt;&lt;/sup&gt; (exclusive) to +2&lt;sup&gt;&lt;code&gt;Integer.MAX_VALUE&lt;/code&gt;&lt;/sup&gt; (exclusive).</source>
          <target state="translated">결과가 지원되는 범위 -2 &lt;sup&gt; &lt;code&gt;Integer.MAX_VALUE&lt;/code&gt; &lt;/sup&gt; (제외)에서 +2 &lt;sup&gt; &lt;code&gt;Integer.MAX_VALUE&lt;/code&gt; &lt;/sup&gt; (제외)의 범위를 벗어나면 BigInteger 생성자와 오퍼레이션에서 &lt;code&gt;ArithmeticException&lt;/code&gt; 이 발생합니다 .&lt;sup&gt;&lt;/sup&gt;&lt;sup&gt;&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="ee39b1a63cabe4ce68478712cd5d29a7ad079d63" translate="yes" xml:space="preserve">
          <source>BigInteger.</source>
          <target state="translated">BigInteger.</target>
        </trans-unit>
        <trans-unit id="97a13285a97d4b9d3db10a5759f855312d9c6aac" translate="yes" xml:space="preserve">
          <source>BigInteger.abs()</source>
          <target state="translated">BigInteger.abs()</target>
        </trans-unit>
        <trans-unit id="cf3b6841efa02f6bfb4adf4c7f08019f1359bde7" translate="yes" xml:space="preserve">
          <source>BigInteger.add()</source>
          <target state="translated">BigInteger.add()</target>
        </trans-unit>
        <trans-unit id="f86f61ffcbcf3da63a5c0b77dcf569346c0df907" translate="yes" xml:space="preserve">
          <source>BigInteger.and()</source>
          <target state="translated">BigInteger.and()</target>
        </trans-unit>
        <trans-unit id="12153a90c178362632a26309fc8b185baa34af0a" translate="yes" xml:space="preserve">
          <source>BigInteger.andNot()</source>
          <target state="translated">BigInteger.andNot()</target>
        </trans-unit>
        <trans-unit id="a9511965aa53786babb9df182bcc838379973f18" translate="yes" xml:space="preserve">
          <source>BigInteger.bitCount()</source>
          <target state="translated">BigInteger.bitCount()</target>
        </trans-unit>
        <trans-unit id="a73a977f943c7f9321e103a360faa3c871f4ccb1" translate="yes" xml:space="preserve">
          <source>BigInteger.bitLength()</source>
          <target state="translated">BigInteger.bitLength()</target>
        </trans-unit>
        <trans-unit id="71d885e0ec44e3d334bb9d4f1db61531e2a2fa19" translate="yes" xml:space="preserve">
          <source>BigInteger.byteValueExact()</source>
          <target state="translated">BigInteger.byteValueExact()</target>
        </trans-unit>
        <trans-unit id="4cd704f215bc23ad8bdd51a27318e094df826536" translate="yes" xml:space="preserve">
          <source>BigInteger.clearBit()</source>
          <target state="translated">BigInteger.clearBit()</target>
        </trans-unit>
        <trans-unit id="6f6edb7eb63a2f4d4d16f8e81e64ebc391a9079e" translate="yes" xml:space="preserve">
          <source>BigInteger.compareTo()</source>
          <target state="translated">BigInteger.compareTo()</target>
        </trans-unit>
        <trans-unit id="c5b3500b7e38f1deef184e9afec462d37f616aea" translate="yes" xml:space="preserve">
          <source>BigInteger.divide()</source>
          <target state="translated">BigInteger.divide()</target>
        </trans-unit>
        <trans-unit id="fef28b9600d790851dbf5bbd727b1f917b83fc1e" translate="yes" xml:space="preserve">
          <source>BigInteger.divideAndRemainder()</source>
          <target state="translated">BigInteger.divideAndRemainder()</target>
        </trans-unit>
        <trans-unit id="9b7c2ddc4cb51fc085caac7fe6ca22c800008a47" translate="yes" xml:space="preserve">
          <source>BigInteger.doubleValue()</source>
          <target state="translated">BigInteger.doubleValue()</target>
        </trans-unit>
        <trans-unit id="88fadb1d0d0a4c372fda3964ba155e6f6e98e321" translate="yes" xml:space="preserve">
          <source>BigInteger.equals()</source>
          <target state="translated">BigInteger.equals()</target>
        </trans-unit>
        <trans-unit id="0833fc52e3c35ac601a15344a259eb58c307254d" translate="yes" xml:space="preserve">
          <source>BigInteger.flipBit()</source>
          <target state="translated">BigInteger.flipBit()</target>
        </trans-unit>
        <trans-unit id="4a41aa30e71c24cafdd0662df6ce61e831cefd1f" translate="yes" xml:space="preserve">
          <source>BigInteger.floatValue()</source>
          <target state="translated">BigInteger.floatValue()</target>
        </trans-unit>
        <trans-unit id="a0f0f14ed3161d5bcc3a5b0720652c1de11448ef" translate="yes" xml:space="preserve">
          <source>BigInteger.gcd()</source>
          <target state="translated">BigInteger.gcd()</target>
        </trans-unit>
        <trans-unit id="3e99970369dc5457c03c1c14387f74d437e1d4e3" translate="yes" xml:space="preserve">
          <source>BigInteger.getLowestSetBit()</source>
          <target state="translated">BigInteger.getLowestSetBit()</target>
        </trans-unit>
        <trans-unit id="1e2c85ecc98cc47e44c9240211039a2ee1645316" translate="yes" xml:space="preserve">
          <source>BigInteger.hashCode()</source>
          <target state="translated">BigInteger.hashCode()</target>
        </trans-unit>
        <trans-unit id="8b6508cfecfee4461eb27ea1cda4f679dc857d17" translate="yes" xml:space="preserve">
          <source>BigInteger.intValue()</source>
          <target state="translated">BigInteger.intValue()</target>
        </trans-unit>
        <trans-unit id="4f2fdb8e4e03c7be71f55f40919b3c11af58ad65" translate="yes" xml:space="preserve">
          <source>BigInteger.intValueExact()</source>
          <target state="translated">BigInteger.intValueExact()</target>
        </trans-unit>
        <trans-unit id="d5ee9992f052e5477af795622a90b3b3aa6803e8" translate="yes" xml:space="preserve">
          <source>BigInteger.isProbablePrime()</source>
          <target state="translated">BigInteger.isProbablePrime()</target>
        </trans-unit>
        <trans-unit id="3c6dc41465a9fb4638064717dbbc6c9637d78508" translate="yes" xml:space="preserve">
          <source>BigInteger.longValue()</source>
          <target state="translated">BigInteger.longValue()</target>
        </trans-unit>
        <trans-unit id="5d06324948fe656ab8eddd15ef8fa4cc59b95e71" translate="yes" xml:space="preserve">
          <source>BigInteger.longValueExact()</source>
          <target state="translated">BigInteger.longValueExact()</target>
        </trans-unit>
        <trans-unit id="68c868c59aa0336bf26ac826206acdadacb8db34" translate="yes" xml:space="preserve">
          <source>BigInteger.max()</source>
          <target state="translated">BigInteger.max()</target>
        </trans-unit>
        <trans-unit id="03f25963cc896e79cd971db2d2ae5698e3d59441" translate="yes" xml:space="preserve">
          <source>BigInteger.min()</source>
          <target state="translated">BigInteger.min()</target>
        </trans-unit>
        <trans-unit id="4f3e17fe4081e575e92949e91227bab7d341ea6e" translate="yes" xml:space="preserve">
          <source>BigInteger.mod()</source>
          <target state="translated">BigInteger.mod()</target>
        </trans-unit>
        <trans-unit id="8295dad78169d03e301704b9ed4c23860d7c9f49" translate="yes" xml:space="preserve">
          <source>BigInteger.modInverse()</source>
          <target state="translated">BigInteger.modInverse()</target>
        </trans-unit>
        <trans-unit id="d3fa7d6505c747e6fd36b0f3d6a9e88bf383b196" translate="yes" xml:space="preserve">
          <source>BigInteger.modPow()</source>
          <target state="translated">BigInteger.modPow()</target>
        </trans-unit>
        <trans-unit id="999364f2cc01efdea5289cf05f443fb5c3f7b11f" translate="yes" xml:space="preserve">
          <source>BigInteger.multiply()</source>
          <target state="translated">BigInteger.multiply()</target>
        </trans-unit>
        <trans-unit id="b628df5924e9610faea70583510a29f9d9d70cac" translate="yes" xml:space="preserve">
          <source>BigInteger.negate()</source>
          <target state="translated">BigInteger.negate()</target>
        </trans-unit>
        <trans-unit id="079c6980718e47b4059b0846f1a1149f138667ba" translate="yes" xml:space="preserve">
          <source>BigInteger.nextProbablePrime()</source>
          <target state="translated">BigInteger.nextProbablePrime()</target>
        </trans-unit>
        <trans-unit id="ed5ab75d14a95af07ceb7d60836ab0ce4a699292" translate="yes" xml:space="preserve">
          <source>BigInteger.not()</source>
          <target state="translated">BigInteger.not()</target>
        </trans-unit>
        <trans-unit id="994fea9dd70cea70b7feafe0ce3a62cfa3fb28f8" translate="yes" xml:space="preserve">
          <source>BigInteger.or()</source>
          <target state="translated">BigInteger.or()</target>
        </trans-unit>
        <trans-unit id="ab6d93fb6d03197002ea2eb6116b66c76f2199ac" translate="yes" xml:space="preserve">
          <source>BigInteger.pow()</source>
          <target state="translated">BigInteger.pow()</target>
        </trans-unit>
        <trans-unit id="1e31894d6fb592146e2da5261ed336ff9e24ca3a" translate="yes" xml:space="preserve">
          <source>BigInteger.probablePrime()</source>
          <target state="translated">BigInteger.probablePrime()</target>
        </trans-unit>
        <trans-unit id="d3df03fb45664a5275da457bcf99ec5076b25e8f" translate="yes" xml:space="preserve">
          <source>BigInteger.remainder()</source>
          <target state="translated">BigInteger.remainder()</target>
        </trans-unit>
        <trans-unit id="a81dc094b336ef1de80202150aaf745ba334a585" translate="yes" xml:space="preserve">
          <source>BigInteger.setBit()</source>
          <target state="translated">BigInteger.setBit()</target>
        </trans-unit>
        <trans-unit id="b42e239752920fc90b7571b2fc6055eb21c4d9d3" translate="yes" xml:space="preserve">
          <source>BigInteger.shiftLeft()</source>
          <target state="translated">BigInteger.shiftLeft()</target>
        </trans-unit>
        <trans-unit id="3028024956d873ff4be875978a7d2cc2d2fe5752" translate="yes" xml:space="preserve">
          <source>BigInteger.shiftRight()</source>
          <target state="translated">BigInteger.shiftRight()</target>
        </trans-unit>
        <trans-unit id="f21dd79da7483d46b26b279c137a25a4b16ab2c6" translate="yes" xml:space="preserve">
          <source>BigInteger.shortValueExact()</source>
          <target state="translated">BigInteger.shortValueExact()</target>
        </trans-unit>
        <trans-unit id="18025279c6aa4aaea94a47b60667eef260a74257" translate="yes" xml:space="preserve">
          <source>BigInteger.signum()</source>
          <target state="translated">BigInteger.signum()</target>
        </trans-unit>
        <trans-unit id="069df15cb3d72e8164488169bfaae1cc58f41e09" translate="yes" xml:space="preserve">
          <source>BigInteger.subtract()</source>
          <target state="translated">BigInteger.subtract()</target>
        </trans-unit>
        <trans-unit id="51441ad1fa1104c6d58d821fa6ff0f2063b3d161" translate="yes" xml:space="preserve">
          <source>BigInteger.testBit()</source>
          <target state="translated">BigInteger.testBit()</target>
        </trans-unit>
        <trans-unit id="0072f3b06f8f71d2c977f8c96b2c5179c17415d6" translate="yes" xml:space="preserve">
          <source>BigInteger.toByteArray()</source>
          <target state="translated">BigInteger.toByteArray()</target>
        </trans-unit>
        <trans-unit id="de78ccb0a7d1ecb43fe110cd7f8f830dccd4a7b0" translate="yes" xml:space="preserve">
          <source>BigInteger.toString()</source>
          <target state="translated">BigInteger.toString()</target>
        </trans-unit>
        <trans-unit id="ab790a4dfea0aee09a37286796ec555171eedee5" translate="yes" xml:space="preserve">
          <source>BigInteger.valueOf()</source>
          <target state="translated">BigInteger.valueOf()</target>
        </trans-unit>
        <trans-unit id="cf90b9270c753ff38b8db27228b961b8b44a96e5" translate="yes" xml:space="preserve">
          <source>BigInteger.xor()</source>
          <target state="translated">BigInteger.xor()</target>
        </trans-unit>
        <trans-unit id="cae113d7239645cef8fa002ded8bf09d0075fdc0" translate="yes" xml:space="preserve">
          <source>Binary names</source>
          <target state="translated">이진 이름</target>
        </trans-unit>
        <trans-unit id="f24d69fe11a1bc88a738e15194d757fdd43902ef" translate="yes" xml:space="preserve">
          <source>BinaryExponent:</source>
          <target state="translated">BinaryExponent:</target>
        </trans-unit>
        <trans-unit id="bf84adb45596fd0a3010cb7a7b4c6821819436a9" translate="yes" xml:space="preserve">
          <source>BinaryExponentIndicator SignedInteger</source>
          <target state="translated">이항 지수 표시 기호</target>
        </trans-unit>
        <trans-unit id="a6316c6126e0497a7316eb921f6b7cb2299e10cf" translate="yes" xml:space="preserve">
          <source>BinaryExponentIndicator:</source>
          <target state="translated">BinaryExponentIndicator:</target>
        </trans-unit>
        <trans-unit id="f85c226f32fd781905d42235823e2fd6ba7c7a6f" translate="yes" xml:space="preserve">
          <source>BinaryOperator</source>
          <target state="translated">BinaryOperator</target>
        </trans-unit>
        <trans-unit id="10926b09d660024b5412c421ffb0fbe1561aee15" translate="yes" xml:space="preserve">
          <source>BinaryOperator.maxBy()</source>
          <target state="translated">BinaryOperator.maxBy()</target>
        </trans-unit>
        <trans-unit id="3bdf2707777efea7426d689f79a8b5d7dcae0461" translate="yes" xml:space="preserve">
          <source>BinaryOperator.minBy()</source>
          <target state="translated">BinaryOperator.minBy()</target>
        </trans-unit>
        <trans-unit id="804321fea15ea1f0b03a7c7b99275a044b7b5129" translate="yes" xml:space="preserve">
          <source>BinaryRefAddr</source>
          <target state="translated">BinaryRefAddr</target>
        </trans-unit>
        <trans-unit id="51dc78053568164fd437b0464ce3fe6f2650ca58" translate="yes" xml:space="preserve">
          <source>BinaryRefAddr.equals()</source>
          <target state="translated">BinaryRefAddr.equals()</target>
        </trans-unit>
        <trans-unit id="34dfe87a3c49c7896d6baae29a09d79c7c2446f4" translate="yes" xml:space="preserve">
          <source>BinaryRefAddr.getContent()</source>
          <target state="translated">BinaryRefAddr.getContent()</target>
        </trans-unit>
        <trans-unit id="a63a1c31f1a7322923aa4ce681bfadf598fe2ea4" translate="yes" xml:space="preserve">
          <source>BinaryRefAddr.hashCode()</source>
          <target state="translated">BinaryRefAddr.hashCode()</target>
        </trans-unit>
        <trans-unit id="4e9a802ce781c09c0ed768eca63a1f5a8b96683f" translate="yes" xml:space="preserve">
          <source>BinaryRefAddr.toString()</source>
          <target state="translated">BinaryRefAddr.toString()</target>
        </trans-unit>
        <trans-unit id="4beff3aa638b7033a21ebe2b37848fcc9d120852" translate="yes" xml:space="preserve">
          <source>Bind the document(s) with one or more staples (wire stitches) along one edge. The exact number and placement of the staples is implementation- and/or site- defined.</source>
          <target state="translated">하나의 가장자리를 따라 하나 이상의 스테이플 (와이어 스티치)로 문서를 바인딩합니다. 스테이플의 정확한 수와 배치는 구현 및 / 또는 사이트 정의입니다.</target>
        </trans-unit>
        <trans-unit id="38b15caad1f8cccfdc90a44e804f0aeda92e244a" translate="yes" xml:space="preserve">
          <source>Bind the document(s) with one or more staples (wire stitches) along the bottom edge. The exact number and placement of the staples is implementation- and/or site-defined.</source>
          <target state="translated">아래쪽 가장자리를 따라 하나 이상의 스테이플 (와이어 스티치)로 문서를 바인딩합니다. 스테이플의 정확한 수와 배치는 구현 및 / 또는 사이트 정의입니다.</target>
        </trans-unit>
        <trans-unit id="798d016fab287329709447cc30c503c54c7f2529" translate="yes" xml:space="preserve">
          <source>Bind the document(s) with one or more staples (wire stitches) along the left edge. The exact number and placement of the staples is implementation- and/or site-defined.</source>
          <target state="translated">왼쪽 가장자리를 따라 문서를 하나 이상의 스테이플 (와이어 스티치)로 묶습니다. 스테이플의 정확한 수와 배치는 구현 및 / 또는 사이트 정의입니다.</target>
        </trans-unit>
        <trans-unit id="74977c9b21caf07f2209906041934254c252a710" translate="yes" xml:space="preserve">
          <source>Bind the document(s) with one or more staples (wire stitches) along the middle fold. The exact number and placement of the staples and the middle fold is implementation- and/or site-defined.</source>
          <target state="translated">중간 접힘 선을 따라 하나 이상의 스테이플 (와이어 스티치)로 문서를 묶습니다. 스테이플 및 중간 접기의 정확한 수와 배치는 구현 및 / 또는 사이트 정의됩니다.</target>
        </trans-unit>
        <trans-unit id="315fa937f46a56545a7fc022344a87b00068bbec" translate="yes" xml:space="preserve">
          <source>Bind the document(s) with one or more staples (wire stitches) along the right edge. The exact number and placement of the staples is implementation- and/or site-defined.</source>
          <target state="translated">오른쪽 가장자리를 따라 문서를 하나 이상의 스테이플 (와이어 스티치)로 묶습니다. 스테이플의 정확한 수와 배치는 구현 및 / 또는 사이트 정의입니다.</target>
        </trans-unit>
        <trans-unit id="97f703d6e23a578b9613b26e1444ed005f1d9cc1" translate="yes" xml:space="preserve">
          <source>Bind the document(s) with one or more staples (wire stitches) along the top edge. The exact number and placement of the staples is implementation- and/or site-defined.</source>
          <target state="translated">상단 가장자리를 따라 하나 이상의 스테이플 (와이어 스티치)로 문서를 묶습니다. 스테이플의 정확한 수와 배치는 구현 및 / 또는 사이트 정의입니다.</target>
        </trans-unit>
        <trans-unit id="3007e602358fe575b7c354349ed237cd5f2f0677" translate="yes" xml:space="preserve">
          <source>Bind the document(s) with one or more staples in the bottom left corner.</source>
          <target state="translated">왼쪽 하단에서 하나 이상의 스테이플로 문서를 바인딩합니다.</target>
        </trans-unit>
        <trans-unit id="a48c8503fc77165ebe222416cffd1be391cd7669" translate="yes" xml:space="preserve">
          <source>Bind the document(s) with one or more staples in the bottom right corner.</source>
          <target state="translated">오른쪽 하단에 하나 이상의 스테이플이있는 문서를 바인딩합니다.</target>
        </trans-unit>
        <trans-unit id="ca91d34daa2b4be2b04166f0d637369d33da7169" translate="yes" xml:space="preserve">
          <source>Bind the document(s) with one or more staples in the top left corner.</source>
          <target state="translated">왼쪽 상단에 하나 이상의 스테이플이있는 문서를 바인딩합니다.</target>
        </trans-unit>
        <trans-unit id="6e5e362e517d0d09949a466ad90f83d411070627" translate="yes" xml:space="preserve">
          <source>Bind the document(s) with one or more staples in the top right corner.</source>
          <target state="translated">오른쪽 상단 모서리에 하나 이상의 스테이플이있는 문서를 바인딩합니다.</target>
        </trans-unit>
        <trans-unit id="aafde1c01756df2a3d71f7d896cb8bc0a8070631" translate="yes" xml:space="preserve">
          <source>Bind the document(s) with one or more staples. The exact number and placement of the staples is site-defined.</source>
          <target state="translated">하나 이상의 스테이플로 문서를 바인딩합니다. 스테이플의 정확한 수와 배치는 현장에서 정의됩니다.</target>
        </trans-unit>
        <trans-unit id="5bb2d33426033b0a68e3b6c81a0bb7f9176840fc" translate="yes" xml:space="preserve">
          <source>Bind the document(s) with two staples (wire stitches) along the bottom edge assuming a portrait document (see above).</source>
          <target state="translated">세로 문서를 가정 할 때 아래쪽 가장자리를 따라 두 개의 스테이플 (와이어 스티치)로 문서를 묶습니다 (위 참조).</target>
        </trans-unit>
        <trans-unit id="ae04bf08d39d9e67d508d4e9d878f30f1c55e0a8" translate="yes" xml:space="preserve">
          <source>Bind the document(s) with two staples (wire stitches) along the left edge assuming a portrait document (see above).</source>
          <target state="translated">세로 문서를 가정 할 때 왼쪽 가장자리를 따라 두 개의 스테이플 (와이어 스티치)로 문서를 바인딩합니다 (위 참조).</target>
        </trans-unit>
        <trans-unit id="0c73748634274f11b9aedd0994a877bcb259dfc6" translate="yes" xml:space="preserve">
          <source>Bind the document(s) with two staples (wire stitches) along the right edge assuming a portrait document (see above).</source>
          <target state="translated">세로 문서를 가정하면 오른쪽 가장자리를 따라 두 개의 스테이플 (와이어 스티치)로 문서를 바인딩합니다 (위 참조).</target>
        </trans-unit>
        <trans-unit id="40d190abf0b705cdc115b3f2a14434a081114d2a" translate="yes" xml:space="preserve">
          <source>Bind the document(s) with two staples (wire stitches) along the top edge assuming a portrait document (see above).</source>
          <target state="translated">세로 문서를 가정 할 때 상단 가장자리를 따라 두 개의 스테이플 (와이어 스티치)로 문서를 묶습니다 (위 참조).</target>
        </trans-unit>
        <trans-unit id="3d07a6a38e603a1fe7c45d2b07e74159376727f5" translate="yes" xml:space="preserve">
          <source>BindException</source>
          <target state="translated">BindException</target>
        </trans-unit>
        <trans-unit id="7f0043e684cc2e548822e45bee14ea4c4673e262" translate="yes" xml:space="preserve">
          <source>Binding</source>
          <target state="translated">Binding</target>
        </trans-unit>
        <trans-unit id="f2f0e8426d50dd004936526ec4a53092d7f639c9" translate="yes" xml:space="preserve">
          <source>Binding.getClassName()</source>
          <target state="translated">Binding.getClassName()</target>
        </trans-unit>
        <trans-unit id="3854f635fcab11a97abff363358798981a3a084c" translate="yes" xml:space="preserve">
          <source>Binding.getObject()</source>
          <target state="translated">Binding.getObject()</target>
        </trans-unit>
        <trans-unit id="d109964b8b2b7ce2b0414e69cfeccb938c845a9c" translate="yes" xml:space="preserve">
          <source>Binding.setObject()</source>
          <target state="translated">Binding.setObject()</target>
        </trans-unit>
        <trans-unit id="2088e3252efffb5823d0e7e2d4e40155148df170" translate="yes" xml:space="preserve">
          <source>Binding.toString()</source>
          <target state="translated">Binding.toString()</target>
        </trans-unit>
        <trans-unit id="967382f86044b6efc91dfee8f4e2b4ed941211cd" translate="yes" xml:space="preserve">
          <source>Bindings</source>
          <target state="translated">Bindings</target>
        </trans-unit>
        <trans-unit id="af3f9c9a47da695b2b481cf7dd1056704e860dc4" translate="yes" xml:space="preserve">
          <source>Bindings.containsKey()</source>
          <target state="translated">Bindings.containsKey()</target>
        </trans-unit>
        <trans-unit id="665186311739d7091d10da9425d926cbea92c7b0" translate="yes" xml:space="preserve">
          <source>Bindings.get()</source>
          <target state="translated">Bindings.get()</target>
        </trans-unit>
        <trans-unit id="ad1d10802dae6a5401ec2ac2da0d260f385be05b" translate="yes" xml:space="preserve">
          <source>Bindings.put()</source>
          <target state="translated">Bindings.put()</target>
        </trans-unit>
        <trans-unit id="0b5433c80f15e4df4db9adbe0714c54a9c043552" translate="yes" xml:space="preserve">
          <source>Bindings.putAll()</source>
          <target state="translated">Bindings.putAll()</target>
        </trans-unit>
        <trans-unit id="82a2df7e4c1180f788f22af292c488ca5f913993" translate="yes" xml:space="preserve">
          <source>Bindings.remove()</source>
          <target state="translated">Bindings.remove()</target>
        </trans-unit>
        <trans-unit id="b6008db77bc77f4b1f95fa6a20dd4de6be7b2ccd" translate="yes" xml:space="preserve">
          <source>Binds a datagram socket to a local port and address.</source>
          <target state="translated">데이터 그램 소켓을 로컬 포트 ​​및 주소에 바인딩합니다.</target>
        </trans-unit>
        <trans-unit id="bef50f700df7fd08b141ef3efe129a3ed3fef33e" translate="yes" xml:space="preserve">
          <source>Binds a name to an object, along with associated attributes, overwriting any existing binding. If &lt;code&gt;attrs&lt;/code&gt; is null and &lt;code&gt;obj&lt;/code&gt; is a &lt;code&gt;DirContext&lt;/code&gt;, the attributes from &lt;code&gt;obj&lt;/code&gt; are used. If &lt;code&gt;attrs&lt;/code&gt; is null and &lt;code&gt;obj&lt;/code&gt; is not a &lt;code&gt;DirContext&lt;/code&gt;, any existing attributes associated with the object already bound in the directory remain unchanged. If &lt;code&gt;attrs&lt;/code&gt; is non-null, any existing attributes associated with the object already bound in the directory are removed and &lt;code&gt;attrs&lt;/code&gt; is associated with the named object. If &lt;code&gt;obj&lt;/code&gt; is a &lt;code&gt;DirContext&lt;/code&gt; and &lt;code&gt;attrs&lt;/code&gt; is non-null, the attributes of &lt;code&gt;obj&lt;/code&gt; are ignored.</source>
          <target state="translated">기존 바인딩을 덮어 쓰면서 연관된 속성과 함께 이름을 오브젝트에 바인드합니다. 경우 &lt;code&gt;attrs&lt;/code&gt; 에가 null로 &lt;code&gt;obj&lt;/code&gt; 가 A는 &lt;code&gt;DirContext&lt;/code&gt; 의 에서 속성 &lt;code&gt;obj&lt;/code&gt; 사용된다. 경우 &lt;code&gt;attrs&lt;/code&gt; 에가 null로 &lt;code&gt;obj&lt;/code&gt; 가 하지 않은 것입니다 &lt;code&gt;DirContext&lt;/code&gt; 의 이미 디렉토리에 바인드 된 오브젝트에 관련 지을 수 있었던 기존의 속성은 변경되지 않습니다. &lt;code&gt;attrs&lt;/code&gt; 가 널이 아닌 경우 디렉토리에 이미 바인드 된 오브젝트와 연관된 기존 속성이 제거되고 &lt;code&gt;attrs&lt;/code&gt; 는 이름 지정된 오브젝트와 연관됩니다. 경우 &lt;code&gt;obj&lt;/code&gt; A는 &lt;code&gt;DirContext&lt;/code&gt; 의 및 &lt;code&gt;attrs&lt;/code&gt; null이 아닌 경우 &lt;code&gt;obj&lt;/code&gt; 의 속성 은 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="59057772ee7f82df12aec96d27729b43409cf252" translate="yes" xml:space="preserve">
          <source>Binds a name to an object, along with associated attributes, overwriting any existing binding. See &lt;a href=&quot;dircontext#rebind-javax.naming.Name-java.lang.Object-javax.naming.directory.Attributes-&quot;&gt;&lt;code&gt;DirContext.rebind(Name, Object, Attributes)&lt;/code&gt;&lt;/a&gt; for details.</source>
          <target state="translated">기존 바인딩을 덮어 쓰면서 연관된 속성과 함께 이름을 오브젝트에 바인드합니다. 자세한 내용은 &lt;a href=&quot;dircontext#rebind-javax.naming.Name-java.lang.Object-javax.naming.directory.Attributes-&quot;&gt; &lt;code&gt;DirContext.rebind(Name, Object, Attributes)&lt;/code&gt; &lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="7862b048f583975025e87ee113fdec4eb82eaa35" translate="yes" xml:space="preserve">
          <source>Binds a name to an object, along with associated attributes, overwriting any existing binding. See &lt;a href=&quot;dircontext#rebind-javax.naming.Name-java.lang.Object-javax.naming.directory.Attributes-&quot;&gt;&lt;code&gt;rebind(Name, Object, Attributes)&lt;/code&gt;&lt;/a&gt; for details.</source>
          <target state="translated">기존 바인딩을 덮어 쓰면서 연관된 속성과 함께 이름을 오브젝트에 바인드합니다. 자세한 내용은 &lt;a href=&quot;dircontext#rebind-javax.naming.Name-java.lang.Object-javax.naming.directory.Attributes-&quot;&gt; &lt;code&gt;rebind(Name, Object, Attributes)&lt;/code&gt; &lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="a85c2b1328618075241decebedad63963121262d" translate="yes" xml:space="preserve">
          <source>Binds a name to an object, along with associated attributes. If &lt;code&gt;attrs&lt;/code&gt; is null, the resulting binding will have the attributes associated with &lt;code&gt;obj&lt;/code&gt; if &lt;code&gt;obj&lt;/code&gt; is a &lt;code&gt;DirContext&lt;/code&gt;, and no attributes otherwise. If &lt;code&gt;attrs&lt;/code&gt; is non-null, the resulting binding will have &lt;code&gt;attrs&lt;/code&gt; as its attributes; any attributes associated with &lt;code&gt;obj&lt;/code&gt; are ignored.</source>
          <target state="translated">연관된 속성과 함께 이름을 객체에 바인딩합니다. 경우 &lt;code&gt;attrs&lt;/code&gt; 에이 널 (null)이되면, 관련 지을 수 있었던 속성해야합니다 바인딩 결과 &lt;code&gt;obj&lt;/code&gt; 하는 경우 &lt;code&gt;obj&lt;/code&gt; 가 입니다 &lt;code&gt;DirContext&lt;/code&gt; 의 , 어떤 그렇지 않으면 속성. &lt;code&gt;attrs&lt;/code&gt; 가 널이 아닌 경우 결과 바인딩은 속성으로 &lt;code&gt;attrs&lt;/code&gt; 을 갖 습니다. &lt;code&gt;obj&lt;/code&gt; 와 관련된 모든 속성 은 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="5f423c84e3d9ac276cc54bbc7a1df2267430532e" translate="yes" xml:space="preserve">
          <source>Binds a name to an object, along with associated attributes. See &lt;a href=&quot;dircontext#bind-javax.naming.Name-java.lang.Object-javax.naming.directory.Attributes-&quot;&gt;&lt;code&gt;DirContext.bind(Name, Object, Attributes)&lt;/code&gt;&lt;/a&gt; for details.</source>
          <target state="translated">연관된 속성과 함께 이름을 객체에 바인딩합니다. 자세한 내용은 &lt;a href=&quot;dircontext#bind-javax.naming.Name-java.lang.Object-javax.naming.directory.Attributes-&quot;&gt; &lt;code&gt;DirContext.bind(Name, Object, Attributes)&lt;/code&gt; &lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="49c9411a96668375307df7006b94b502613c5398" translate="yes" xml:space="preserve">
          <source>Binds a name to an object, along with associated attributes. See &lt;a href=&quot;dircontext#bind-javax.naming.Name-java.lang.Object-javax.naming.directory.Attributes-&quot;&gt;&lt;code&gt;bind(Name, Object, Attributes)&lt;/code&gt;&lt;/a&gt; for details.</source>
          <target state="translated">연관된 속성과 함께 이름을 객체에 바인딩합니다. 자세한 내용은 &lt;a href=&quot;dircontext#bind-javax.naming.Name-java.lang.Object-javax.naming.directory.Attributes-&quot;&gt; &lt;code&gt;bind(Name, Object, Attributes)&lt;/code&gt; &lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="2a47974e2946298adc2c1e8785d1a2b146c5866f" translate="yes" xml:space="preserve">
          <source>Binds a name to an object, overwriting any existing binding. All intermediate contexts and the target context (that named by all but terminal atomic component of the name) must already exist.</source>
          <target state="translated">객체에 이름을 바인딩하여 기존 바인딩을 덮어 씁니다. 모든 중간 컨텍스트 및 대상 컨텍스트 (이름의 터미널 원자 구성 요소를 제외한 이름)는 이미 존재해야합니다.</target>
        </trans-unit>
        <trans-unit id="38c4e144c8baee02925ff9468221c2e31a98a0ab" translate="yes" xml:space="preserve">
          <source>Binds a name to an object, overwriting any existing binding. See &lt;a href=&quot;context#rebind-javax.naming.Name-java.lang.Object-&quot;&gt;&lt;code&gt;Context.rebind(Name, Object)&lt;/code&gt;&lt;/a&gt; for details.</source>
          <target state="translated">객체에 이름을 바인딩하여 기존 바인딩을 덮어 씁니다. 자세한 내용은 &lt;a href=&quot;context#rebind-javax.naming.Name-java.lang.Object-&quot;&gt; &lt;code&gt;Context.rebind(Name, Object)&lt;/code&gt; &lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="1ec5f3c3d6f354aa52cf76d2f081d51de412e044" translate="yes" xml:space="preserve">
          <source>Binds a name to an object, overwriting any existing binding. See &lt;a href=&quot;context#rebind-javax.naming.Name-java.lang.Object-&quot;&gt;&lt;code&gt;rebind(Name, Object)&lt;/code&gt;&lt;/a&gt; for details.</source>
          <target state="translated">객체에 이름을 바인딩하여 기존 바인딩을 덮어 씁니다. 자세한 내용은 &lt;a href=&quot;context#rebind-javax.naming.Name-java.lang.Object-&quot;&gt; &lt;code&gt;rebind(Name, Object)&lt;/code&gt; &lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="e5e64d34b4cdb6b99609a59ad25d1a3ad519a414" translate="yes" xml:space="preserve">
          <source>Binds a name to an object. All intermediate contexts and the target context (that named by all but terminal atomic component of the name) must already exist.</source>
          <target state="translated">객체에 이름을 바인딩합니다. 모든 중간 컨텍스트 및 대상 컨텍스트 (이름의 터미널 원자 구성 요소를 제외한 이름)는 이미 존재해야합니다.</target>
        </trans-unit>
        <trans-unit id="22f07ab7847985e8e60fec2932f80e97a99c0603" translate="yes" xml:space="preserve">
          <source>Binds a name to an object. See &lt;a href=&quot;context#bind-javax.naming.Name-java.lang.Object-&quot;&gt;&lt;code&gt;Context.bind(Name, Object)&lt;/code&gt;&lt;/a&gt; for details.</source>
          <target state="translated">객체에 이름을 바인딩합니다. 자세한 내용은 &lt;a href=&quot;context#bind-javax.naming.Name-java.lang.Object-&quot;&gt; &lt;code&gt;Context.bind(Name, Object)&lt;/code&gt; &lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="1fe532abc5ebc2577888e073f9a9954b0c757df1" translate="yes" xml:space="preserve">
          <source>Binds a name to an object. See &lt;a href=&quot;context#bind-javax.naming.Name-java.lang.Object-&quot;&gt;&lt;code&gt;bind(Name, Object)&lt;/code&gt;&lt;/a&gt; for details.</source>
          <target state="translated">객체에 이름을 바인딩합니다. 자세한 내용은 &lt;a href=&quot;context#bind-javax.naming.Name-java.lang.Object-&quot;&gt; &lt;code&gt;bind(Name, Object)&lt;/code&gt; &lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="ad13bf0cb1e9c230eb4c5a12b92482517b9f6640" translate="yes" xml:space="preserve">
          <source>Binds a new name to the object bound to an old name, and unbinds the old name. Both names are relative to this context. Any attributes associated with the old name become associated with the new name. Intermediate contexts of the old name are not changed.</source>
          <target state="translated">이전 이름에 바인딩 된 개체에 새 이름을 바인딩하고 이전 이름을 바인딩 해제합니다. 두 이름 모두이 문맥과 관련이 있습니다. 이전 이름과 관련된 속성은 새 이름과 연결됩니다. 이전 이름의 중간 컨텍스트는 변경되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="bdf6640303dc99ed775550a3779d06408bd0b49e" translate="yes" xml:space="preserve">
          <source>Binds a new name to the object bound to an old name, and unbinds the old name. See &lt;a href=&quot;context#rename-javax.naming.Name-javax.naming.Name-&quot;&gt;&lt;code&gt;Context.rename(Name, Name)&lt;/code&gt;&lt;/a&gt; for details.</source>
          <target state="translated">이전 이름에 바인딩 된 개체에 새 이름을 바인딩하고 이전 이름을 바인딩 해제합니다. 자세한 내용은 &lt;a href=&quot;context#rename-javax.naming.Name-javax.naming.Name-&quot;&gt; &lt;code&gt;Context.rename(Name, Name)&lt;/code&gt; &lt;/a&gt; 을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="2f6495aa38d4725a36a720ebc6469d45df032586" translate="yes" xml:space="preserve">
          <source>Binds a new name to the object bound to an old name, and unbinds the old name. See &lt;a href=&quot;context#rename-javax.naming.Name-javax.naming.Name-&quot;&gt;&lt;code&gt;rename(Name, Name)&lt;/code&gt;&lt;/a&gt; for details.</source>
          <target state="translated">이전 이름에 바인딩 된 개체에 새 이름을 바인딩하고 이전 이름을 바인딩 해제합니다. 자세한 내용은 &lt;a href=&quot;context#rename-javax.naming.Name-javax.naming.Name-&quot;&gt; &lt;code&gt;rename(Name, Name)&lt;/code&gt; &lt;/a&gt; 을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="d709e7ff6c01b64e185f7177232e54cd2748d562" translate="yes" xml:space="preserve">
          <source>Binds a value &lt;code&gt;x&lt;/code&gt; to the first argument of a method handle, without invoking it. The new method handle adapts, as its</source>
          <target state="translated">값 &lt;code&gt;x&lt;/code&gt; 를 호출하지 않고 메소드 핸들의 첫 번째 인수에 바인딩 합니다. 새로운 메소드 핸들은</target>
        </trans-unit>
        <trans-unit id="71c3e052fa37c0007ee3dd0c54068d206ac64534" translate="yes" xml:space="preserve">
          <source>Binds the &lt;code&gt;ServerSocket&lt;/code&gt; to a specific address (IP address and port number).</source>
          <target state="translated">&lt;code&gt;ServerSocket&lt;/code&gt; 을 특정 주소 (IP 주소 및 포트 번호)에 바인딩합니다 .</target>
        </trans-unit>
        <trans-unit id="d5340b21c5bcf30743e0e17d48b8bd38ada396ca" translate="yes" xml:space="preserve">
          <source>Binds the channel's socket to a local address and configures the socket to listen for connections.</source>
          <target state="translated">채널의 소켓을 로컬 주소에 바인딩하고 연결을 수신하도록 소켓을 구성합니다.</target>
        </trans-unit>
        <trans-unit id="5f9ea286a1c02790ef5e00a40addb6b03b0a5077" translate="yes" xml:space="preserve">
          <source>Binds the channel's socket to a local address.</source>
          <target state="translated">채널의 소켓을 로컬 주소에 바인딩합니다.</target>
        </trans-unit>
        <trans-unit id="3673d3a19e58f7c7db70887801bcee601fef3d80" translate="yes" xml:space="preserve">
          <source>Binds the socket to a local address.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37e4755756174d1db83cfc7e42a797bc45b05862" translate="yes" xml:space="preserve">
          <source>Binds the specified &lt;code&gt;value&lt;/code&gt; object into the session's application layer data with the given &lt;code&gt;name&lt;/code&gt;.</source>
          <target state="translated">지정된 &lt;code&gt;value&lt;/code&gt; 객체를 지정된 &lt;code&gt;name&lt;/code&gt; 으로 세션의 응용 프로그램 계층 데이터에 바인딩합니다 .</target>
        </trans-unit>
        <trans-unit id="124690239bd8a65db1488a68d66c6d5ab4897d0c" translate="yes" xml:space="preserve">
          <source>Binds this DatagramSocket to a specific address and port.</source>
          <target state="translated">이 DatagramSocket을 특정 주소 및 포트에 바인딩합니다.</target>
        </trans-unit>
        <trans-unit id="f72819abf0c6fe30fe4545b6029d3fad576d29e2" translate="yes" xml:space="preserve">
          <source>Binds this socket to the specified local IP address and port number.</source>
          <target state="translated">이 소켓을 지정된 로컬 IP 주소 및 포트 번호에 바인딩합니다.</target>
        </trans-unit>
        <trans-unit id="eb9bf65dbb672320688439f4fdd91a067e55da32" translate="yes" xml:space="preserve">
          <source>Bit 31 (the bit that is selected by the mask &lt;code&gt;0x80000000&lt;/code&gt;) represents the sign of the floating-point number. Bits 30-23 (the bits that are selected by the mask &lt;code&gt;0x7f800000&lt;/code&gt;) represent the exponent. Bits 22-0 (the bits that are selected by the mask &lt;code&gt;0x007fffff&lt;/code&gt;) represent the significand (sometimes called the mantissa) of the floating-point number.</source>
          <target state="translated">비트 31 (마스크 &lt;code&gt;0x80000000&lt;/code&gt; 에 의해 선택된 비트 )은 부동 소수점 숫자의 부호를 나타냅니다. 비트 30-23 (마스크 &lt;code&gt;0x7f800000&lt;/code&gt; 에 의해 선택된 비트 )은 지수를 나타냅니다. 비트 22-0 (마스크 &lt;code&gt;0x007fffff&lt;/code&gt; 에 의해 선택된 비트 )은 부동 소수점 숫자의 의미 (때로는 가수라고도 함)를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="73cf6da9b8bc4c7b8afc1a74617a7d656eeaff51" translate="yes" xml:space="preserve">
          <source>Bit 63 (the bit that is selected by the mask &lt;code&gt;0x8000000000000000L&lt;/code&gt;) represents the sign of the floating-point number. Bits 62-52 (the bits that are selected by the mask &lt;code&gt;0x7ff0000000000000L&lt;/code&gt;) represent the exponent. Bits 51-0 (the bits that are selected by the mask &lt;code&gt;0x000fffffffffffffL&lt;/code&gt;) represent the significand (sometimes called the mantissa) of the floating-point number.</source>
          <target state="translated">비트 63 (마스크 &lt;code&gt;0x8000000000000000L&lt;/code&gt; 에 의해 선택된 비트 )은 부동 소수점 숫자의 부호를 나타냅니다. 비트 62-52 (마스크 &lt;code&gt;0x7ff0000000000000L&lt;/code&gt; 에 의해 선택된 비트 )는 지수를 나타냅니다. 비트 51-0 (마스크 &lt;code&gt;0x000fffffffffffffL&lt;/code&gt; 에 의해 선택된 비트 )은 부동 소수점 숫자의 의미 (때때로 가수라고 함)를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="453ffe06e1f177025b7df438053e3e95f5b987e2" translate="yes" xml:space="preserve">
          <source>Bit Values</source>
          <target state="translated">비트 값</target>
        </trans-unit>
        <trans-unit id="1b50c761d3d767e2454af03c53933f6369efdd51" translate="yes" xml:space="preserve">
          <source>Bit data may be accumulated in memory indefinitely, until &lt;code&gt;flushBefore&lt;/code&gt; is called. At that time, all bit data prior to the flushed position will be written.</source>
          <target state="translated">&lt;code&gt;flushBefore&lt;/code&gt; 가 호출 될 때까지 비트 데이터는 메모리에 무기한으로 누적 될 수 있습니다 . 이때 플러시 된 위치 이전의 모든 비트 데이터가 기록됩니다.</target>
        </trans-unit>
        <trans-unit id="05563058e628aace24cda34cd8eb0e4c583c470c" translate="yes" xml:space="preserve">
          <source>Bit mask for ObjectStreamClass flag. Indicates Externalizable data written in Block Data mode. Added for PROTOCOL_VERSION_2.</source>
          <target state="translated">ObjectStreamClass 플래그의 비트 마스크입니다. 블록 데이터 모드로 작성된 외부화 가능 데이터를 나타냅니다. PROTOCOL_VERSION_2에 추가되었습니다.</target>
        </trans-unit>
        <trans-unit id="980e6444082734f84ce692d0ac5d54ad5f699b57" translate="yes" xml:space="preserve">
          <source>Bit mask for ObjectStreamClass flag. Indicates a Serializable class defines its own writeObject method.</source>
          <target state="translated">ObjectStreamClass 플래그의 비트 마스크입니다. Serializable 클래스가 독자적인 writeObject 메소드를 정의하는 것을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="f92fed8e99fe69d8719835dab1ec09a124e85bd0" translate="yes" xml:space="preserve">
          <source>Bit mask for ObjectStreamClass flag. Indicates class is Externalizable.</source>
          <target state="translated">ObjectStreamClass 플래그의 비트 마스크입니다. 클래스가 외부화 가능함을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="84d025954ac00dfa8ca9d8dc38de0c08ac7915c3" translate="yes" xml:space="preserve">
          <source>Bit mask for ObjectStreamClass flag. Indicates class is Serializable.</source>
          <target state="translated">ObjectStreamClass 플래그의 비트 마스크입니다. 클래스가 직렬화 가능함을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="04c1cd65ff809622b82410f7c2d53da0f105f7a9" translate="yes" xml:space="preserve">
          <source>Bit mask for ObjectStreamClass flag. Indicates class is an enum type.</source>
          <target state="translated">ObjectStreamClass 플래그의 비트 마스크입니다. 클래스가 열거 형임을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="ecd33ea63e56de73ca3baa2621e5245a2a2785b9" translate="yes" xml:space="preserve">
          <source>Bit operations operate on a single bit of the two's-complement representation of their operand. If necessary, the operand is sign- extended so that it contains the designated bit. None of the single-bit operations can produce a BigInteger with a different sign from the BigInteger being operated on, as they affect only a single bit, and the &quot;infinite word size&quot; abstraction provided by this class ensures that there are infinitely many &quot;virtual sign bits&quot; preceding each BigInteger.</source>
          <target state="translated">비트 연산은 피연산자에 대한 2의 보수 표현 중 단일 비트에서 작동합니다. 필요한 경우 피연산자는 부호가 지정되어 지정된 비트를 포함합니다. 단일 비트 연산은 단일 비트에만 영향을 미치므로 BigInteger와는 다른 부호를 가진 BigInteger를 생성 할 수 없으며이 클래스에서 제공하는 &quot;무한 워드 크기&quot;추상화는 무한히 많은 &quot;가상&quot;을 보장합니다. 각 BigInteger 앞에 부호 비트 &quot;가 있습니다.</target>
        </trans-unit>
        <trans-unit id="f8cd7716f7a5997d4efd153b8de6bda8ac575d3b" translate="yes" xml:space="preserve">
          <source>BitSet</source>
          <target state="translated">BitSet</target>
        </trans-unit>
        <trans-unit id="4c8e097ef5a9e0be43dffcccd18f1bc24d1753c6" translate="yes" xml:space="preserve">
          <source>BitSet.and()</source>
          <target state="translated">BitSet.and()</target>
        </trans-unit>
        <trans-unit id="fb60336f70f94007e406ccb00c92dec7638f45c5" translate="yes" xml:space="preserve">
          <source>BitSet.andNot()</source>
          <target state="translated">BitSet.andNot()</target>
        </trans-unit>
        <trans-unit id="4ddb12170cc0af1c8510dde93d3409b246d62576" translate="yes" xml:space="preserve">
          <source>BitSet.cardinality()</source>
          <target state="translated">BitSet.cardinality()</target>
        </trans-unit>
        <trans-unit id="679ac21a173b71844f1bfddb9122b7de6acfc229" translate="yes" xml:space="preserve">
          <source>BitSet.clear()</source>
          <target state="translated">BitSet.clear()</target>
        </trans-unit>
        <trans-unit id="a86d3f66e5586ed8aa965f3cbff2d1eafcad89b8" translate="yes" xml:space="preserve">
          <source>BitSet.clone()</source>
          <target state="translated">BitSet.clone()</target>
        </trans-unit>
        <trans-unit id="2f1018809af4fef2b11eeba7220754e3c8c55f0f" translate="yes" xml:space="preserve">
          <source>BitSet.equals()</source>
          <target state="translated">BitSet.equals()</target>
        </trans-unit>
        <trans-unit id="34a0e6b1e2786484f51df7d145b3149bc292e112" translate="yes" xml:space="preserve">
          <source>BitSet.flip()</source>
          <target state="translated">BitSet.flip()</target>
        </trans-unit>
        <trans-unit id="236e52eea6dd02143c7f694346a83021046ad45b" translate="yes" xml:space="preserve">
          <source>BitSet.get()</source>
          <target state="translated">BitSet.get()</target>
        </trans-unit>
        <trans-unit id="64d2f277a331da739d543986baaf6695e2106d92" translate="yes" xml:space="preserve">
          <source>BitSet.hashCode()</source>
          <target state="translated">BitSet.hashCode()</target>
        </trans-unit>
        <trans-unit id="4a80a58dc3add60c37954085b109de6111151c8e" translate="yes" xml:space="preserve">
          <source>BitSet.intersects()</source>
          <target state="translated">BitSet.intersects()</target>
        </trans-unit>
        <trans-unit id="93ed99d0c0620a61a0647883b7efab25e0d91d80" translate="yes" xml:space="preserve">
          <source>BitSet.isEmpty()</source>
          <target state="translated">BitSet.isEmpty()</target>
        </trans-unit>
        <trans-unit id="b0d5b6739df61dbad5479e7313573f2fa4ee7fce" translate="yes" xml:space="preserve">
          <source>BitSet.length()</source>
          <target state="translated">BitSet.length()</target>
        </trans-unit>
        <trans-unit id="714103c17ee82a0d18c7ee30f303cfa30b46ff38" translate="yes" xml:space="preserve">
          <source>BitSet.nextClearBit()</source>
          <target state="translated">BitSet.nextClearBit()</target>
        </trans-unit>
        <trans-unit id="80f1ba62dc5e4f614d26c5b6dc10e2cccbd1f067" translate="yes" xml:space="preserve">
          <source>BitSet.nextSetBit()</source>
          <target state="translated">BitSet.nextSetBit()</target>
        </trans-unit>
        <trans-unit id="b21cb83cfa3b52dc1eb29f44966b01f57c99fc6c" translate="yes" xml:space="preserve">
          <source>BitSet.or()</source>
          <target state="translated">BitSet.or()</target>
        </trans-unit>
        <trans-unit id="717efc7d633854520c6326e774d0633b722fb0f0" translate="yes" xml:space="preserve">
          <source>BitSet.previousClearBit()</source>
          <target state="translated">BitSet.previousClearBit()</target>
        </trans-unit>
        <trans-unit id="a19384b78577d60c447b7a61591f6e2a8e5b810d" translate="yes" xml:space="preserve">
          <source>BitSet.previousSetBit()</source>
          <target state="translated">BitSet.previousSetBit()</target>
        </trans-unit>
        <trans-unit id="889bcfe5f707ae49eeb05c27ef1a1dd1e66c7903" translate="yes" xml:space="preserve">
          <source>BitSet.set()</source>
          <target state="translated">BitSet.set()</target>
        </trans-unit>
        <trans-unit id="df7cace24802d62d3de2eb6ec448bc273b094f32" translate="yes" xml:space="preserve">
          <source>BitSet.size()</source>
          <target state="translated">BitSet.size()</target>
        </trans-unit>
        <trans-unit id="453b1b073bf74ff055fc871c4c799969e45d686f" translate="yes" xml:space="preserve">
          <source>BitSet.stream()</source>
          <target state="translated">BitSet.stream()</target>
        </trans-unit>
        <trans-unit id="4083cff4ce93f8a4411f42770d399b164597f061" translate="yes" xml:space="preserve">
          <source>BitSet.toByteArray()</source>
          <target state="translated">BitSet.toByteArray()</target>
        </trans-unit>
        <trans-unit id="07eb1bb1f97d56c7798c265a60803953940f64e2" translate="yes" xml:space="preserve">
          <source>BitSet.toLongArray()</source>
          <target state="translated">BitSet.toLongArray()</target>
        </trans-unit>
        <trans-unit id="6ab19bc74c79ebdf1bd396e120ea266c54e48298" translate="yes" xml:space="preserve">
          <source>BitSet.toString()</source>
          <target state="translated">BitSet.toString()</target>
        </trans-unit>
        <trans-unit id="f264c54281e3ae0f91d901083011ded7e7b273de" translate="yes" xml:space="preserve">
          <source>BitSet.valueOf()</source>
          <target state="translated">BitSet.valueOf()</target>
        </trans-unit>
        <trans-unit id="3ecf11e19835619628bf7f04e8854e8e1fd790cb" translate="yes" xml:space="preserve">
          <source>BitSet.xor()</source>
          <target state="translated">BitSet.xor()</target>
        </trans-unit>
        <trans-unit id="abe005907f45526cc92679c0c67c98dfd361e70c" translate="yes" xml:space="preserve">
          <source>Block multicast datagrams from the given source address.</source>
          <target state="translated">주어진 소스 주소에서 멀티 캐스트 데이터 그램을 차단합니다.</target>
        </trans-unit>
        <trans-unit id="1e20e0e36511b5c6baa2d48051902a13b2324cd0" translate="yes" xml:space="preserve">
          <source>Block of optional data. Byte following tag indicates number of bytes in this block data.</source>
          <target state="translated">선택적 데이터 블록. 바이트 다음 태그는이 블록 데이터의 바이트 수를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="437c69e5ed688c0537571d965bf795dd90b1c1d6" translate="yes" xml:space="preserve">
          <source>Block until signalled or interrupted.</source>
          <target state="translated">신호 또는 중단 될 때까지 차단하십시오.</target>
        </trans-unit>
        <trans-unit id="6d7fb4a7f38d5954e20e9f03533bcb480909a2ae" translate="yes" xml:space="preserve">
          <source>Block until signalled, interrupted, or timed out.</source>
          <target state="translated">신호, 중단 또는 시간 초과 될 때까지 차단하십시오.</target>
        </trans-unit>
        <trans-unit id="b57b8bfbe03043a73a6a80f86e47b8ab2b89853d" translate="yes" xml:space="preserve">
          <source>Block until signalled.</source>
          <target state="translated">신호가 날 때까지 차단하십시오.</target>
        </trans-unit>
        <trans-unit id="1c76be32fb11096eed20946b126a38d45dfa7615" translate="yes" xml:space="preserve">
          <source>Blocking mode</source>
          <target state="translated">차단 모드</target>
        </trans-unit>
        <trans-unit id="3fb97fe6511d9e06578c8f4cb1af33c9125721f7" translate="yes" xml:space="preserve">
          <source>BlockingDeque</source>
          <target state="translated">BlockingDeque</target>
        </trans-unit>
        <trans-unit id="1894fd5a9c488c4c5b9f09c5f4b244a0f00dee97" translate="yes" xml:space="preserve">
          <source>BlockingDeque.add()</source>
          <target state="translated">BlockingDeque.add()</target>
        </trans-unit>
        <trans-unit id="4596b6727f09dcb15e5b51cf43c598be80a8d2de" translate="yes" xml:space="preserve">
          <source>BlockingDeque.addFirst()</source>
          <target state="translated">BlockingDeque.addFirst()</target>
        </trans-unit>
        <trans-unit id="77eec46debb5440f0901c1d701b251f1c4c81766" translate="yes" xml:space="preserve">
          <source>BlockingDeque.addLast()</source>
          <target state="translated">BlockingDeque.addLast()</target>
        </trans-unit>
        <trans-unit id="32908cf997cd28f11b9056c33b0a4e7372f74dfa" translate="yes" xml:space="preserve">
          <source>BlockingDeque.contains()</source>
          <target state="translated">BlockingDeque.contains()</target>
        </trans-unit>
        <trans-unit id="445db93e8c0cab9552caebbd0820fe21a286facb" translate="yes" xml:space="preserve">
          <source>BlockingDeque.element()</source>
          <target state="translated">BlockingDeque.element()</target>
        </trans-unit>
        <trans-unit id="bc707189b633ce4845f77e97628afb61f1af0534" translate="yes" xml:space="preserve">
          <source>BlockingDeque.iterator()</source>
          <target state="translated">BlockingDeque.iterator()</target>
        </trans-unit>
        <trans-unit id="5929f0c6f5feccd2c5c90d98f2feb4fe189e81ee" translate="yes" xml:space="preserve">
          <source>BlockingDeque.offer()</source>
          <target state="translated">BlockingDeque.offer()</target>
        </trans-unit>
        <trans-unit id="140a11b0f0d0235efd475c3660b7b86c05e7678e" translate="yes" xml:space="preserve">
          <source>BlockingDeque.offerFirst()</source>
          <target state="translated">BlockingDeque.offerFirst()</target>
        </trans-unit>
        <trans-unit id="c1bee168f07d1c735dc203b84ef27498dfb01cfc" translate="yes" xml:space="preserve">
          <source>BlockingDeque.offerLast()</source>
          <target state="translated">BlockingDeque.offerLast()</target>
        </trans-unit>
        <trans-unit id="7e97188ad7991711958350bab7bafbe0fc9555c0" translate="yes" xml:space="preserve">
          <source>BlockingDeque.peek()</source>
          <target state="translated">BlockingDeque.peek()</target>
        </trans-unit>
        <trans-unit id="ba0e617964bcce68f450a7f48d57886e4610c126" translate="yes" xml:space="preserve">
          <source>BlockingDeque.poll()</source>
          <target state="translated">BlockingDeque.poll()</target>
        </trans-unit>
        <trans-unit id="dd57caf81223f28e756d7deb559ba55faa926d04" translate="yes" xml:space="preserve">
          <source>BlockingDeque.pollFirst()</source>
          <target state="translated">BlockingDeque.pollFirst()</target>
        </trans-unit>
        <trans-unit id="92237bc7c00bb60319e5a80992f044fdfd751436" translate="yes" xml:space="preserve">
          <source>BlockingDeque.pollLast()</source>
          <target state="translated">BlockingDeque.pollLast()</target>
        </trans-unit>
        <trans-unit id="5f4ae3f4211e11a8a9d5e2316e2a3554f4ac7178" translate="yes" xml:space="preserve">
          <source>BlockingDeque.push()</source>
          <target state="translated">BlockingDeque.push()</target>
        </trans-unit>
        <trans-unit id="65de85a2a4760d19bd1850350f479e5a3c4d0da5" translate="yes" xml:space="preserve">
          <source>BlockingDeque.put()</source>
          <target state="translated">BlockingDeque.put()</target>
        </trans-unit>
        <trans-unit id="6af7fbca8160d84241b89a313461ea3f9366fe2f" translate="yes" xml:space="preserve">
          <source>BlockingDeque.putFirst()</source>
          <target state="translated">BlockingDeque.putFirst()</target>
        </trans-unit>
        <trans-unit id="9131752413334c1611615cf3b164d8e97d8ab931" translate="yes" xml:space="preserve">
          <source>BlockingDeque.putLast()</source>
          <target state="translated">BlockingDeque.putLast()</target>
        </trans-unit>
        <trans-unit id="1371772a2cba2d195655c47780477a1893d92cb8" translate="yes" xml:space="preserve">
          <source>BlockingDeque.remove()</source>
          <target state="translated">BlockingDeque.remove()</target>
        </trans-unit>
        <trans-unit id="35cadb29caad91cc2949815b42189140e4ffedfd" translate="yes" xml:space="preserve">
          <source>BlockingDeque.removeFirstOccurrence()</source>
          <target state="translated">BlockingDeque.removeFirstOccurrence()</target>
        </trans-unit>
        <trans-unit id="9b54a4d968ba9f46d0fe3f2ece2a6bc3b44cc834" translate="yes" xml:space="preserve">
          <source>BlockingDeque.removeLastOccurrence()</source>
          <target state="translated">BlockingDeque.removeLastOccurrence()</target>
        </trans-unit>
        <trans-unit id="6db8e8dab44e32f9a7e617348c8b3d22410d2c7a" translate="yes" xml:space="preserve">
          <source>BlockingDeque.size()</source>
          <target state="translated">BlockingDeque.size()</target>
        </trans-unit>
        <trans-unit id="e4d0f34b17d91e4c1128a3b7e22f48c7f1bdeb79" translate="yes" xml:space="preserve">
          <source>BlockingDeque.take()</source>
          <target state="translated">BlockingDeque.take()</target>
        </trans-unit>
        <trans-unit id="dc95893eb428b8b8b6d613b7561011b87286b6b4" translate="yes" xml:space="preserve">
          <source>BlockingDeque.takeFirst()</source>
          <target state="translated">BlockingDeque.takeFirst()</target>
        </trans-unit>
        <trans-unit id="c7d370f92ce04a2c57940e61a6c033f10cfbeace" translate="yes" xml:space="preserve">
          <source>BlockingDeque.takeLast()</source>
          <target state="translated">BlockingDeque.takeLast()</target>
        </trans-unit>
        <trans-unit id="3f70916c7cef37053ab5d86448df36eebb93370a" translate="yes" xml:space="preserve">
          <source>BlockingQueue</source>
          <target state="translated">BlockingQueue</target>
        </trans-unit>
        <trans-unit id="da18778895648b5e78e4a0d80c431caaabca8a6a" translate="yes" xml:space="preserve">
          <source>BlockingQueue.add()</source>
          <target state="translated">BlockingQueue.add()</target>
        </trans-unit>
        <trans-unit id="29ffdd05ddcfb0bcdef2590397410e1f1625bea4" translate="yes" xml:space="preserve">
          <source>BlockingQueue.contains()</source>
          <target state="translated">BlockingQueue.contains()</target>
        </trans-unit>
        <trans-unit id="ea1de17bfb3ca844258b3559e1713668c704f97c" translate="yes" xml:space="preserve">
          <source>BlockingQueue.drainTo()</source>
          <target state="translated">BlockingQueue.drainTo()</target>
        </trans-unit>
        <trans-unit id="34694541ddd303bcd20756f399cd6231c4e77329" translate="yes" xml:space="preserve">
          <source>BlockingQueue.offer()</source>
          <target state="translated">BlockingQueue.offer()</target>
        </trans-unit>
        <trans-unit id="1b07cff622e7d09748221e61467aefbc82f10200" translate="yes" xml:space="preserve">
          <source>BlockingQueue.poll()</source>
          <target state="translated">BlockingQueue.poll()</target>
        </trans-unit>
        <trans-unit id="2f8225b7c3adc824195da066166a85d37d2c8120" translate="yes" xml:space="preserve">
          <source>BlockingQueue.put()</source>
          <target state="translated">BlockingQueue.put()</target>
        </trans-unit>
        <trans-unit id="8e2e238b69b4260890766024e4d87fdab89ffb5e" translate="yes" xml:space="preserve">
          <source>BlockingQueue.remainingCapacity()</source>
          <target state="translated">BlockingQueue.remainingCapacity()</target>
        </trans-unit>
        <trans-unit id="26cab4f861e02974ba468ae1433e65c358008910" translate="yes" xml:space="preserve">
          <source>BlockingQueue.remove()</source>
          <target state="translated">BlockingQueue.remove()</target>
        </trans-unit>
        <trans-unit id="78a918d99c4fc28ca827a620a5dbaeb5dc5e4b0f" translate="yes" xml:space="preserve">
          <source>BlockingQueue.take()</source>
          <target state="translated">BlockingQueue.take()</target>
        </trans-unit>
        <trans-unit id="aa7409819aec95a34f71e58863a16d3adeaa6bb4" translate="yes" xml:space="preserve">
          <source>Blocks until all tasks have completed execution after a shutdown request, or the timeout occurs, or the current thread is interrupted, whichever happens first.</source>
          <target state="translated">종료 요청 후 모든 작업이 실행을 완료하거나 시간 초과가 발생하거나 현재 스레드가 중단 될 때까지 차단합니다.</target>
        </trans-unit>
        <trans-unit id="8e5851d9dadeeeaa5b008460f5a6f3a3b225e6f2" translate="yes" xml:space="preserve">
          <source>Blocks until all tasks have completed execution after a shutdown request, or the timeout occurs, or the current thread is interrupted, whichever happens first. Because the &lt;a href=&quot;forkjoinpool#commonPool--&quot;&gt;&lt;code&gt;commonPool()&lt;/code&gt;&lt;/a&gt; never terminates until program shutdown, when applied to the common pool, this method is equivalent to &lt;a href=&quot;forkjoinpool#awaitQuiescence-long-java.util.concurrent.TimeUnit-&quot;&gt;&lt;code&gt;awaitQuiescence(long, TimeUnit)&lt;/code&gt;&lt;/a&gt; but always returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">종료 요청 후 모든 작업이 실행을 완료하거나 시간 초과가 발생하거나 현재 스레드가 중단 될 때까지 차단합니다. 때문에 &lt;a href=&quot;forkjoinpool#commonPool--&quot;&gt; &lt;code&gt;commonPool()&lt;/code&gt; &lt;/a&gt; 결코 프로그램이 종료 될 때까지 종료하지 않는 일반적인 풀에 적용 할 때,이 방법은 동일합니다 &lt;a href=&quot;forkjoinpool#awaitQuiescence-long-java.util.concurrent.TimeUnit-&quot;&gt; &lt;code&gt;awaitQuiescence(long, TimeUnit)&lt;/code&gt; &lt;/a&gt; 하지만 항상 반환 &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b76ff4906f33c2dd97ddd929b9662ba8cac6174c" translate="yes" xml:space="preserve">
          <source>Boolean</source>
          <target state="translated">Boolean</target>
        </trans-unit>
        <trans-unit id="ac0a5d43a40d00bca61759471acf8034025af73f" translate="yes" xml:space="preserve">
          <source>Boolean(false)</source>
          <target state="translated">Boolean(false)</target>
        </trans-unit>
        <trans-unit id="755e2cfac54524af42eba823094429e4621fd248" translate="yes" xml:space="preserve">
          <source>Boolean.booleanValue()</source>
          <target state="translated">Boolean.booleanValue()</target>
        </trans-unit>
        <trans-unit id="4f1686ae994305fedcf9f3902e8de82d4c6aba2f" translate="yes" xml:space="preserve">
          <source>Boolean.compare()</source>
          <target state="translated">Boolean.compare()</target>
        </trans-unit>
        <trans-unit id="b2735b2a749b0bfc7bbd5d997b59fde74c1d74b3" translate="yes" xml:space="preserve">
          <source>Boolean.compareTo()</source>
          <target state="translated">Boolean.compareTo()</target>
        </trans-unit>
        <trans-unit id="a7e6cc7126c0810a972cc90de41f9d5e73b50bed" translate="yes" xml:space="preserve">
          <source>Boolean.equals()</source>
          <target state="translated">Boolean.equals()</target>
        </trans-unit>
        <trans-unit id="a6b64bad98cff06904cae8c22449b3ed681058c0" translate="yes" xml:space="preserve">
          <source>Boolean.getBoolean()</source>
          <target state="translated">Boolean.getBoolean()</target>
        </trans-unit>
        <trans-unit id="54ea8021aa4d8619e0fb086a3774b1ec58d679db" translate="yes" xml:space="preserve">
          <source>Boolean.hashCode()</source>
          <target state="translated">Boolean.hashCode()</target>
        </trans-unit>
        <trans-unit id="5385e71f52e787213e89bd9ec9d3aec9b5a31177" translate="yes" xml:space="preserve">
          <source>Boolean.logicalAnd()</source>
          <target state="translated">Boolean.logicalAnd()</target>
        </trans-unit>
        <trans-unit id="4723a7a485d3d52e8b2fd746e03ce78bece1889a" translate="yes" xml:space="preserve">
          <source>Boolean.logicalOr()</source>
          <target state="translated">Boolean.logicalOr()</target>
        </trans-unit>
        <trans-unit id="f174551b1e392e9c404a95e00e1fd023a8ecfa79" translate="yes" xml:space="preserve">
          <source>Boolean.logicalXor()</source>
          <target state="translated">Boolean.logicalXor()</target>
        </trans-unit>
        <trans-unit id="a517cf80486e0d3f2d052bae12a444adfb164516" translate="yes" xml:space="preserve">
          <source>Boolean.parseBoolean()</source>
          <target state="translated">Boolean.parseBoolean()</target>
        </trans-unit>
        <trans-unit id="a7f19794b9adaa375b2fb65fabc1e14d6b0644d4" translate="yes" xml:space="preserve">
          <source>Boolean.toString()</source>
          <target state="translated">Boolean.toString()</target>
        </trans-unit>
        <trans-unit id="36df6179b265f6becdddca2954b7b822cdb5feb4" translate="yes" xml:space="preserve">
          <source>Boolean.valueOf()</source>
          <target state="translated">Boolean.valueOf()</target>
        </trans-unit>
        <trans-unit id="c3a6b6b221f958ec66fdc1ebbea468d791770b67" translate="yes" xml:space="preserve">
          <source>BooleanControl</source>
          <target state="translated">BooleanControl</target>
        </trans-unit>
        <trans-unit id="264493d1d1370cdf5822ebc72afddeff55db11c3" translate="yes" xml:space="preserve">
          <source>BooleanControl.Type</source>
          <target state="translated">BooleanControl.Type</target>
        </trans-unit>
        <trans-unit id="31535f69c539a2c0afbf491f8e73b77b3c9090e1" translate="yes" xml:space="preserve">
          <source>BooleanControl.getStateLabel()</source>
          <target state="translated">BooleanControl.getStateLabel()</target>
        </trans-unit>
        <trans-unit id="11303e81a66d95eda4c521da66e0de85aa0ecec3" translate="yes" xml:space="preserve">
          <source>BooleanControl.getValue()</source>
          <target state="translated">BooleanControl.getValue()</target>
        </trans-unit>
        <trans-unit id="0a7092b20fac0fca2379b95bc69bf5f6201e0b5d" translate="yes" xml:space="preserve">
          <source>BooleanControl.setValue()</source>
          <target state="translated">BooleanControl.setValue()</target>
        </trans-unit>
        <trans-unit id="470fb9dca80e1ee6f9f95de16eb31f04fcce6736" translate="yes" xml:space="preserve">
          <source>BooleanControl.toString()</source>
          <target state="translated">BooleanControl.toString()</target>
        </trans-unit>
        <trans-unit id="455e9681e0f8bdba8a6c0712489d266dc1e9574f" translate="yes" xml:space="preserve">
          <source>BooleanSupplier</source>
          <target state="translated">BooleanSupplier</target>
        </trans-unit>
        <trans-unit id="12223b428db841ff1f72fb7117584ea71d29ff33" translate="yes" xml:space="preserve">
          <source>BooleanSupplier.getAsBoolean()</source>
          <target state="translated">BooleanSupplier.getAsBoolean()</target>
        </trans-unit>
        <trans-unit id="58202ca0e02ac0bedb3dcba2f247980f98785173" translate="yes" xml:space="preserve">
          <source>BootstrapMethodError</source>
          <target state="translated">BootstrapMethodError</target>
        </trans-unit>
        <trans-unit id="5ad5f67ff8efcbbc82b98bc9c5990f42b67566df" translate="yes" xml:space="preserve">
          <source>Both compound names must have the same number of components.</source>
          <target state="translated">두 복합 이름 모두 동일한 수의 구성 요소를 가져야합니다.</target>
        </trans-unit>
        <trans-unit id="f1d2f1cb2afcb117542272791b1002926ca4ea7d" translate="yes" xml:space="preserve">
          <source>Both null values and the null key are supported. This class has performance characteristics similar to those of the &lt;code&gt;HashMap&lt;/code&gt; class, and has the same efficiency parameters of &lt;em&gt;initial capacity&lt;/em&gt; and &lt;em&gt;load factor&lt;/em&gt;.</source>
          <target state="translated">널값과 널 키가 모두 지원됩니다. 이 클래스는 &lt;code&gt;HashMap&lt;/code&gt; 클래스 와 유사한 성능 특성을 가지며 &lt;em&gt;초기 용량&lt;/em&gt; 및 &lt;em&gt;로드 팩터&lt;/em&gt; 와 동일한 효율 매개 변수를 갖습니다 .</target>
        </trans-unit>
        <trans-unit id="77697755f4af4d764c024b9d7f478b1eaf6b4b14" translate="yes" xml:space="preserve">
          <source>Boundary matchers</source>
          <target state="translated">경계 매처</target>
        </trans-unit>
        <trans-unit id="db0dfc8861ac9dd7fb052d2fe6c0b90efdd0d6d7" translate="yes" xml:space="preserve">
          <source>BreakIterator</source>
          <target state="translated">BreakIterator</target>
        </trans-unit>
        <trans-unit id="73d2be7894564573cb85d72a68353fc124ecd4f4" translate="yes" xml:space="preserve">
          <source>BreakIterator.clone()</source>
          <target state="translated">BreakIterator.clone()</target>
        </trans-unit>
        <trans-unit id="da6bf1d35deb64b6191c3ae9de345fe6684c54a9" translate="yes" xml:space="preserve">
          <source>BreakIterator.current()</source>
          <target state="translated">BreakIterator.current()</target>
        </trans-unit>
        <trans-unit id="bf09d9541cec3f8df88cdebbe95341bfbe4dec11" translate="yes" xml:space="preserve">
          <source>BreakIterator.first()</source>
          <target state="translated">BreakIterator.first()</target>
        </trans-unit>
        <trans-unit id="95ff1eeed767be0330349f53c51b0ce57c9eaf44" translate="yes" xml:space="preserve">
          <source>BreakIterator.following()</source>
          <target state="translated">BreakIterator.following()</target>
        </trans-unit>
        <trans-unit id="9f3475be4d64fded614e93c8922d9477bedbd9ca" translate="yes" xml:space="preserve">
          <source>BreakIterator.getAvailableLocales()</source>
          <target state="translated">BreakIterator.getAvailableLocales()</target>
        </trans-unit>
        <trans-unit id="e93f2ad1811bd0849524cb54af531961b7c09ff4" translate="yes" xml:space="preserve">
          <source>BreakIterator.getCharacterInstance()</source>
          <target state="translated">BreakIterator.getCharacterInstance()</target>
        </trans-unit>
        <trans-unit id="42f73443349742d1d7044a9833ce5a082c8f6b2b" translate="yes" xml:space="preserve">
          <source>BreakIterator.getLineInstance()</source>
          <target state="translated">BreakIterator.getLineInstance()</target>
        </trans-unit>
        <trans-unit id="91d471a5b105bc6d0372a429fa1845cc92c864c9" translate="yes" xml:space="preserve">
          <source>BreakIterator.getSentenceInstance()</source>
          <target state="translated">BreakIterator.getSentenceInstance()</target>
        </trans-unit>
        <trans-unit id="e3759af129bc8acb53fedf9bd99bf5e44762b81e" translate="yes" xml:space="preserve">
          <source>BreakIterator.getText()</source>
          <target state="translated">BreakIterator.getText()</target>
        </trans-unit>
        <trans-unit id="1d9f4544aa87216d613ef7a0b195689ca1e08fbd" translate="yes" xml:space="preserve">
          <source>BreakIterator.getWordInstance()</source>
          <target state="translated">BreakIterator.getWordInstance()</target>
        </trans-unit>
        <trans-unit id="328d2d3358ab8ccf44da71c0cd5ddc48c52e2c41" translate="yes" xml:space="preserve">
          <source>BreakIterator.isBoundary()</source>
          <target state="translated">BreakIterator.isBoundary()</target>
        </trans-unit>
        <trans-unit id="e579664a42c2701f6d9c2f6efe0638c173fa3149" translate="yes" xml:space="preserve">
          <source>BreakIterator.last()</source>
          <target state="translated">BreakIterator.last()</target>
        </trans-unit>
        <trans-unit id="da1eba00eef7f48debd05fcaa0f4623a09bf11da" translate="yes" xml:space="preserve">
          <source>BreakIterator.next()</source>
          <target state="translated">BreakIterator.next()</target>
        </trans-unit>
        <trans-unit id="0bc2c3886a6402d9d803dfc885300d2927aa4280" translate="yes" xml:space="preserve">
          <source>BreakIterator.preceding()</source>
          <target state="translated">BreakIterator.preceding()</target>
        </trans-unit>
        <trans-unit id="23bff1c758e9909090a2f8ee8266ad4621aa3f5f" translate="yes" xml:space="preserve">
          <source>BreakIterator.previous()</source>
          <target state="translated">BreakIterator.previous()</target>
        </trans-unit>
        <trans-unit id="aab3c7755d6f196fcee6b0a57b1144e9963edbb0" translate="yes" xml:space="preserve">
          <source>BreakIterator.setText()</source>
          <target state="translated">BreakIterator.setText()</target>
        </trans-unit>
        <trans-unit id="4250521827814cd1da79158d915a1d47d078ddce" translate="yes" xml:space="preserve">
          <source>BreakIteratorProvider</source>
          <target state="translated">BreakIteratorProvider</target>
        </trans-unit>
        <trans-unit id="4011ceec6b9e20b3967f17bb065232f412c54c3c" translate="yes" xml:space="preserve">
          <source>BreakIteratorProvider.getCharacterInstance()</source>
          <target state="translated">BreakIteratorProvider.getCharacterInstance()</target>
        </trans-unit>
        <trans-unit id="fa22c1a331bc20668bf96a91fe0315cb6f7a7330" translate="yes" xml:space="preserve">
          <source>BreakIteratorProvider.getLineInstance()</source>
          <target state="translated">BreakIteratorProvider.getLineInstance()</target>
        </trans-unit>
        <trans-unit id="f70bd4898021d976c2344351b78a60428c2942ed" translate="yes" xml:space="preserve">
          <source>BreakIteratorProvider.getSentenceInstance()</source>
          <target state="translated">BreakIteratorProvider.getSentenceInstance()</target>
        </trans-unit>
        <trans-unit id="faf6f0aa3d6f95f40e38a6459451927e113d97f2" translate="yes" xml:space="preserve">
          <source>BreakIteratorProvider.getWordInstance()</source>
          <target state="translated">BreakIteratorProvider.getWordInstance()</target>
        </trans-unit>
        <trans-unit id="5c11fcc63058ef7cec96c1281491cabedad11adf" translate="yes" xml:space="preserve">
          <source>Briefly, MultipleDocumentHandling determines the relationship between the multiple input (electronic) documents fed into a multidoc print job and the output (physical) document or documents produced by the multidoc print job. There are two possibilities:</source>
          <target state="translated">간단히 말하면, MultipleDocumentHandling은 다중 문서 인쇄 작업에 공급 된 다중 입력 (전자) 문서와 다중 문서 인쇄 작업에 의해 생성 된 출력 (물리적) 문서 사이의 관계를 결정합니다. 두 가지 가능성이 있습니다.</target>
        </trans-unit>
        <trans-unit id="5754759b7c00bc0c0ca0793fe43d72a6a21be40d" translate="yes" xml:space="preserve">
          <source>Broadcasts a localized warning message to all registered &lt;code&gt;IIOReadWarningListener&lt;/code&gt;s by calling their &lt;code&gt;warningOccurred&lt;/code&gt; method with a string taken from a &lt;code&gt;ResourceBundle&lt;/code&gt;. Subclasses may use this method as a convenience.</source>
          <target state="translated">&lt;code&gt;ResourceBundle&lt;/code&gt; 에서 가져온 문자열로 &lt;code&gt;warningOccurred&lt;/code&gt; 메서드를 호출 하여 지역화 된 경고 메시지를 등록 된 모든 &lt;code&gt;IIOReadWarningListener&lt;/code&gt; 에 브로드 캐스트합니다 . 서브 클래스는 편의상이 메소드를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="12cd639426d6e28c84aa1968ac907f76de609caf" translate="yes" xml:space="preserve">
          <source>Broadcasts a localized warning message to all registered &lt;code&gt;IIOWriteWarningListener&lt;/code&gt;s by calling their &lt;code&gt;warningOccurred&lt;/code&gt; method with a string taken from a &lt;code&gt;ResourceBundle&lt;/code&gt;. Subclasses may use this method as a convenience.</source>
          <target state="translated">&lt;code&gt;ResourceBundle&lt;/code&gt; 에서 가져온 문자열로 &lt;code&gt;warningOccurred&lt;/code&gt; 메서드를 호출 하여 지역화 된 경고 메시지를 등록 &lt;code&gt;IIOWriteWarningListener&lt;/code&gt; 모든 IIOWriteWarningListener에 브로드 캐스트합니다 . 서브 클래스는 편의상이 메소드를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d60a80c427121bf2d76085ba74eb25f2749e216c" translate="yes" xml:space="preserve">
          <source>Broadcasts a warning message to all registered &lt;code&gt;IIOReadWarningListener&lt;/code&gt;s by calling their &lt;code&gt;warningOccurred&lt;/code&gt; method. Subclasses may use this method as a convenience.</source>
          <target state="translated">&lt;code&gt;warningOccurred&lt;/code&gt; 메소드 를 호출하여 등록 된 모든 &lt;code&gt;IIOReadWarningListener&lt;/code&gt; 에 경고 메시지를 브로드 캐스트합니다 . 서브 클래스는 편의상이 메소드를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b209d1f3ca83add90d97254eb06a8956e77f0daf" translate="yes" xml:space="preserve">
          <source>Broadcasts a warning message to all registered &lt;code&gt;IIOWriteWarningListener&lt;/code&gt;s by calling their &lt;code&gt;warningOccurred&lt;/code&gt; method. Subclasses may use this method as a convenience.</source>
          <target state="translated">&lt;code&gt;warningOccurred&lt;/code&gt; 메서드 를 호출하여 등록 &lt;code&gt;IIOWriteWarningListener&lt;/code&gt; 모든 IIOWriteWarningListener에 경고 메시지를 브로드 캐스트합니다 . 서브 클래스는 편의상이 메소드를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c055ff8e31ff34efb81af54c28b8d6af72be9d81" translate="yes" xml:space="preserve">
          <source>Broadcasts that the read has been aborted to all registered &lt;code&gt;IIOReadProgressListener&lt;/code&gt;s by calling their &lt;code&gt;readAborted&lt;/code&gt; method. Subclasses may use this method as a convenience.</source>
          <target state="translated">&lt;code&gt;readAborted&lt;/code&gt; 메소드 를 호출 하여 읽기가 등록 &lt;code&gt;IIOReadProgressListener&lt;/code&gt; 모든 IIOReadProgressListener 로 중단되었음을 브로드 캐스트합니다 . 서브 클래스는 편의상이 메소드를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="11332fc0f1ca94913e590e5257a1c51b274daa45" translate="yes" xml:space="preserve">
          <source>Broadcasts that the write has been aborted to all registered &lt;code&gt;IIOWriteProgressListener&lt;/code&gt;s by calling their &lt;code&gt;writeAborted&lt;/code&gt; method. Subclasses may use this method as a convenience.</source>
          <target state="translated">&lt;code&gt;writeAborted&lt;/code&gt; 메소드 를 호출 하여 쓰기가 등록 &lt;code&gt;IIOWriteProgressListener&lt;/code&gt; 모든 IIOWriteProgressListener 로 중단되었음을 브로드 캐스트합니다 . 서브 클래스는 편의상이 메소드를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9a9d61677bb035010524d7355ecfa7606e1726ca" translate="yes" xml:space="preserve">
          <source>Broadcasts the beginning of a progressive pass to all registered &lt;code&gt;IIOReadUpdateListener&lt;/code&gt;s by calling their &lt;code&gt;passStarted&lt;/code&gt; method. Subclasses may use this method as a convenience.</source>
          <target state="translated">&lt;code&gt;passStarted&lt;/code&gt; 메소드 를 호출 하여 점진적 패스의 시작을 등록 &lt;code&gt;IIOReadUpdateListener&lt;/code&gt; 모든 IIOReadUpdateListener로 브로드 캐스트합니다 . 서브 클래스는 편의상이 메소드를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f2bb48b9ba3ae265eaa3080eeb7ee5f62bf7d6e3" translate="yes" xml:space="preserve">
          <source>Broadcasts the beginning of a thumbnail progressive pass to all registered &lt;code&gt;IIOReadUpdateListener&lt;/code&gt;s by calling their &lt;code&gt;thumbnailPassStarted&lt;/code&gt; method. Subclasses may use this method as a convenience.</source>
          <target state="translated">&lt;code&gt;thumbnailPassStarted&lt;/code&gt; 메소드 를 호출 해 , 썸네일 프로그레시브 패스의 개시를 등록 &lt;code&gt;IIOReadUpdateListener&lt;/code&gt; 모든 IIOReadUpdateListener에 통지 합니다. 서브 클래스는 편의상이 메소드를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="62cbabfc3c243d51e9f23d8f28cd987669f77d5a" translate="yes" xml:space="preserve">
          <source>Broadcasts the completion of a thumbnail read to all registered &lt;code&gt;IIOReadProgressListener&lt;/code&gt;s by calling their &lt;code&gt;thumbnailComplete&lt;/code&gt; method. Subclasses may use this method as a convenience.</source>
          <target state="translated">&lt;code&gt;thumbnailComplete&lt;/code&gt; 메소드 를 호출 해 , 썸네일 읽기 완료를 등록 &lt;code&gt;IIOReadProgressListener&lt;/code&gt; 모든 IIOReadProgressListener에 통지합니다 . 서브 클래스는 편의상이 메소드를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="05a6591571de2645cd9790e153ece793cedefc96" translate="yes" xml:space="preserve">
          <source>Broadcasts the completion of a thumbnail write to all registered &lt;code&gt;IIOWriteProgressListener&lt;/code&gt;s by calling their &lt;code&gt;thumbnailComplete&lt;/code&gt; method. Subclasses may use this method as a convenience.</source>
          <target state="translated">&lt;code&gt;thumbnailComplete&lt;/code&gt; 메소드 를 호출 해 , 썸네일 기입의 완료를 등록 &lt;code&gt;IIOWriteProgressListener&lt;/code&gt; 모든 IIOWriteProgressListener에 통지 합니다. 서브 클래스는 편의상이 메소드를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="67279b761d26e6212c9e16352cdafb0c7a6a90df" translate="yes" xml:space="preserve">
          <source>Broadcasts the completion of an image read to all registered &lt;code&gt;IIOReadProgressListener&lt;/code&gt;s by calling their &lt;code&gt;imageComplete&lt;/code&gt; method. Subclasses may use this method as a convenience.</source>
          <target state="translated">&lt;code&gt;imageComplete&lt;/code&gt; 메소드 를 호출 하여 이미지 읽기 완료를 등록 &lt;code&gt;IIOReadProgressListener&lt;/code&gt; 모든 IIOReadProgressListener에 브로드 캐스트합니다 . 서브 클래스는 편의상이 메소드를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="bbfb93fed6ceccbe02d909d3c45854f1a5756ead" translate="yes" xml:space="preserve">
          <source>Broadcasts the completion of an image write to all registered &lt;code&gt;IIOWriteProgressListener&lt;/code&gt;s by calling their &lt;code&gt;imageComplete&lt;/code&gt; method. Subclasses may use this method as a convenience.</source>
          <target state="translated">&lt;code&gt;imageComplete&lt;/code&gt; 메소드 를 호출 하여 이미지 쓰기 완료를 등록 &lt;code&gt;IIOWriteProgressListener&lt;/code&gt; 모든 IIOWriteProgressListener에 브로드 캐스트합니다 . 서브 클래스는 편의상이 메소드를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7fa490c11cb2ff79005a0d90361b1a31fb5aebea" translate="yes" xml:space="preserve">
          <source>Broadcasts the completion of an sequence of image reads to all registered &lt;code&gt;IIOReadProgressListener&lt;/code&gt;s by calling their &lt;code&gt;sequenceComplete&lt;/code&gt; method. Subclasses may use this method as a convenience.</source>
          <target state="translated">&lt;code&gt;sequenceComplete&lt;/code&gt; 메소드 를 호출 하여 일련의 이미지 읽기 완료를 등록 &lt;code&gt;IIOReadProgressListener&lt;/code&gt; 모든 IIOReadProgressListener에 브로드 캐스트합니다 . 서브 클래스는 편의상이 메소드를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="cb1816714bd539436b36423fbafc4804946cf9c6" translate="yes" xml:space="preserve">
          <source>Broadcasts the current percentage of image completion to all registered &lt;code&gt;IIOReadProgressListener&lt;/code&gt;s by calling their &lt;code&gt;imageProgress&lt;/code&gt; method. Subclasses may use this method as a convenience.</source>
          <target state="translated">&lt;code&gt;imageProgress&lt;/code&gt; 메서드 를 호출하여 이미지 완성의 현재 백분율을 등록 &lt;code&gt;IIOReadProgressListener&lt;/code&gt; 모든 IIOReadProgressListener로 브로드 캐스트합니다 . 서브 클래스는 편의상이 메소드를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="239d62983466409831bf3bc425448a362e11fc16" translate="yes" xml:space="preserve">
          <source>Broadcasts the current percentage of image completion to all registered &lt;code&gt;IIOWriteProgressListener&lt;/code&gt;s by calling their &lt;code&gt;imageProgress&lt;/code&gt; method. Subclasses may use this method as a convenience.</source>
          <target state="translated">&lt;code&gt;imageProgress&lt;/code&gt; 메서드 를 호출하여 이미지 완성의 현재 백분율을 등록 &lt;code&gt;IIOWriteProgressListener&lt;/code&gt; 모든 IIOWriteProgressListener에 브로드 캐스트합니다 . 서브 클래스는 편의상이 메소드를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="233d2ca30a48fcbcf7b9ef7802de901bfa62460f" translate="yes" xml:space="preserve">
          <source>Broadcasts the current percentage of thumbnail completion to all registered &lt;code&gt;IIOReadProgressListener&lt;/code&gt;s by calling their &lt;code&gt;thumbnailProgress&lt;/code&gt; method. Subclasses may use this method as a convenience.</source>
          <target state="translated">&lt;code&gt;thumbnailProgress&lt;/code&gt; 메소드 를 호출하는 것에 의해 , 현재의 섬네일 완료율을 등록 &lt;code&gt;IIOReadProgressListener&lt;/code&gt; 모든 IIOReadProgressListener에 통지합니다 . 서브 클래스는 편의상이 메소드를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="09e25eeb99d2dfff80d79f79671daa563b7d02cc" translate="yes" xml:space="preserve">
          <source>Broadcasts the current percentage of thumbnail completion to all registered &lt;code&gt;IIOWriteProgressListener&lt;/code&gt;s by calling their &lt;code&gt;thumbnailProgress&lt;/code&gt; method. Subclasses may use this method as a convenience.</source>
          <target state="translated">&lt;code&gt;thumbnailProgress&lt;/code&gt; 메소드 를 호출하는 것에 의해 , 현재의 섬네일 완료율을 등록 &lt;code&gt;IIOWriteProgressListener&lt;/code&gt; 모든 IIOWriteProgressListener에 통지 합니다. 서브 클래스는 편의상이 메소드를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="382e93ee7cc33ea045f81f471c79d2c99ce1df13" translate="yes" xml:space="preserve">
          <source>Broadcasts the end of a progressive pass to all registered &lt;code&gt;IIOReadUpdateListener&lt;/code&gt;s by calling their &lt;code&gt;passComplete&lt;/code&gt; method. Subclasses may use this method as a convenience.</source>
          <target state="translated">&lt;code&gt;passComplete&lt;/code&gt; 메소드 를 호출 하여 점진적 패스의 종료를 등록 &lt;code&gt;IIOReadUpdateListener&lt;/code&gt; 모든 IIOReadUpdateListener로 브로드 캐스트합니다 . 서브 클래스는 편의상이 메소드를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="429b51c0efed2adb9f00389465cf4017b2da006d" translate="yes" xml:space="preserve">
          <source>Broadcasts the end of a thumbnail progressive pass to all registered &lt;code&gt;IIOReadUpdateListener&lt;/code&gt;s by calling their &lt;code&gt;thumbnailPassComplete&lt;/code&gt; method. Subclasses may use this method as a convenience.</source>
          <target state="translated">&lt;code&gt;thumbnailPassComplete&lt;/code&gt; 메소드 를 호출 해 , 썸네일 프로그레시브 패스의 종료를 등록 &lt;code&gt;IIOReadUpdateListener&lt;/code&gt; 모든 IIOReadUpdateListener에 통지 합니다. 서브 클래스는 편의상이 메소드를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="92c71375c22804f33ee00fb64551009c5cdaa994" translate="yes" xml:space="preserve">
          <source>Broadcasts the start of a thumbnail read to all registered &lt;code&gt;IIOReadProgressListener&lt;/code&gt;s by calling their &lt;code&gt;thumbnailStarted&lt;/code&gt; method. Subclasses may use this method as a convenience.</source>
          <target state="translated">&lt;code&gt;thumbnailStarted&lt;/code&gt; 메소드 를 호출 해 , 썸네일 읽기의 개시를 등록 &lt;code&gt;IIOReadProgressListener&lt;/code&gt; 모든 IIOReadProgressListener에 통지합니다 . 서브 클래스는 편의상이 메소드를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c300dcf42b339ee1fb40c11212fa44cfc4777497" translate="yes" xml:space="preserve">
          <source>Broadcasts the start of a thumbnail write to all registered &lt;code&gt;IIOWriteProgressListener&lt;/code&gt;s by calling their &lt;code&gt;thumbnailStarted&lt;/code&gt; method. Subclasses may use this method as a convenience.</source>
          <target state="translated">&lt;code&gt;thumbnailStarted&lt;/code&gt; 메소드 를 호출 해 , 썸네일 쓰기의 개시를 등록 &lt;code&gt;IIOWriteProgressListener&lt;/code&gt; 모든 IIOWriteProgressListener에 통지 합니다. 서브 클래스는 편의상이 메소드를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c79c5b985921b5f056e23c847b716d18064e0c23" translate="yes" xml:space="preserve">
          <source>Broadcasts the start of an image read to all registered &lt;code&gt;IIOReadProgressListener&lt;/code&gt;s by calling their &lt;code&gt;imageStarted&lt;/code&gt; method. Subclasses may use this method as a convenience.</source>
          <target state="translated">&lt;code&gt;imageStarted&lt;/code&gt; 메소드 를 호출 하여 이미지 읽기 시작을 등록 &lt;code&gt;IIOReadProgressListener&lt;/code&gt; 모든 IIOReadProgressListener로 브로드 캐스트합니다 . 서브 클래스는 편의상이 메소드를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c50de0ae586d28bba3aca2e1d3b56ac755f83ebb" translate="yes" xml:space="preserve">
          <source>Broadcasts the start of an image write to all registered &lt;code&gt;IIOWriteProgressListener&lt;/code&gt;s by calling their &lt;code&gt;imageStarted&lt;/code&gt; method. Subclasses may use this method as a convenience.</source>
          <target state="translated">&lt;code&gt;imageStarted&lt;/code&gt; 메소드 를 호출 하여 이미지 쓰기 시작을 등록 &lt;code&gt;IIOWriteProgressListener&lt;/code&gt; 모든 IIOWriteProgressListener에 브로드 캐스트합니다 . 서브 클래스는 편의상이 메소드를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="cf958800e8bd085bfb196ce330aaa4c2858b2c4a" translate="yes" xml:space="preserve">
          <source>Broadcasts the start of an sequence of image reads to all registered &lt;code&gt;IIOReadProgressListener&lt;/code&gt;s by calling their &lt;code&gt;sequenceStarted&lt;/code&gt; method. Subclasses may use this method as a convenience.</source>
          <target state="translated">&lt;code&gt;sequenceStarted&lt;/code&gt; 메소드의 호출에 의해 일련의 이미지 읽기 시작을 등록 &lt;code&gt;IIOReadProgressListener&lt;/code&gt; 모든 IIOReadProgressListener에 브로드 캐스트합니다 . 서브 클래스는 편의상이 메소드를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b9b2feb03c216c704d67b7c5c33e593a5e29228e" translate="yes" xml:space="preserve">
          <source>Broadcasts the update of a set of samples in a thumbnail image to all registered &lt;code&gt;IIOReadUpdateListener&lt;/code&gt;s by calling their &lt;code&gt;thumbnailUpdate&lt;/code&gt; method. Subclasses may use this method as a convenience.</source>
          <target state="translated">&lt;code&gt;thumbnailUpdate&lt;/code&gt; 메소드 를 호출 해 , 썸네일 이미지 내의 샘플 세트의 갱신을, 등록 &lt;code&gt;IIOReadUpdateListener&lt;/code&gt; 모든 IIOReadUpdateListener에 통지 합니다. 서브 클래스는 편의상이 메소드를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6291e9f15f277ba0d385f0d98bbb631c342b6747" translate="yes" xml:space="preserve">
          <source>Broadcasts the update of a set of samples to all registered &lt;code&gt;IIOReadUpdateListener&lt;/code&gt;s by calling their &lt;code&gt;imageUpdate&lt;/code&gt; method. Subclasses may use this method as a convenience.</source>
          <target state="translated">&lt;code&gt;imageUpdate&lt;/code&gt; 메소드 를 호출하여 샘플 세트의 업데이트를 등록 &lt;code&gt;IIOReadUpdateListener&lt;/code&gt; 모든 IIOReadUpdateListener로 브로드 캐스트합니다 . 서브 클래스는 편의상이 메소드를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d510d2fe48ecab3d4b8f58048b939b43f9409f43" translate="yes" xml:space="preserve">
          <source>BrokenBarrierException</source>
          <target state="translated">BrokenBarrierException</target>
        </trans-unit>
        <trans-unit id="2be5f64b36230104ef9c6e230215846a83d18df6" translate="yes" xml:space="preserve">
          <source>Buffer</source>
          <target state="translated">Buffer</target>
        </trans-unit>
        <trans-unit id="21da7f9fb3c59affd98c9f93883ba9297c4d466c" translate="yes" xml:space="preserve">
          <source>Buffer.array()</source>
          <target state="translated">Buffer.array()</target>
        </trans-unit>
        <trans-unit id="793a50d8b8738e5e3de662d56828242b4464b8d9" translate="yes" xml:space="preserve">
          <source>Buffer.arrayOffset()</source>
          <target state="translated">Buffer.arrayOffset()</target>
        </trans-unit>
        <trans-unit id="2c114fba7582d92e87b89cdf155d99d2da7461d8" translate="yes" xml:space="preserve">
          <source>Buffer.capacity()</source>
          <target state="translated">Buffer.capacity()</target>
        </trans-unit>
        <trans-unit id="1bfb54cbce2dffa8fd8d72a71940864f9a2977ee" translate="yes" xml:space="preserve">
          <source>Buffer.clear()</source>
          <target state="translated">Buffer.clear()</target>
        </trans-unit>
        <trans-unit id="5f78003ae7f35dde2f1d3d893701e3df367a7151" translate="yes" xml:space="preserve">
          <source>Buffer.flip()</source>
          <target state="translated">Buffer.flip()</target>
        </trans-unit>
        <trans-unit id="57ec4b07214a62711c5190c3f2adaf50a8a7009b" translate="yes" xml:space="preserve">
          <source>Buffer.hasArray()</source>
          <target state="translated">Buffer.hasArray()</target>
        </trans-unit>
        <trans-unit id="b7763fe26b794d7d4d4efd2c5cd98f6508df36b1" translate="yes" xml:space="preserve">
          <source>Buffer.hasRemaining()</source>
          <target state="translated">Buffer.hasRemaining()</target>
        </trans-unit>
        <trans-unit id="c44810556eb9a98ee723a709c99efce6fefb90b6" translate="yes" xml:space="preserve">
          <source>Buffer.isDirect()</source>
          <target state="translated">Buffer.isDirect()</target>
        </trans-unit>
        <trans-unit id="324b1e9fb02b59ad2e96023cb5860f42eab21e30" translate="yes" xml:space="preserve">
          <source>Buffer.isReadOnly()</source>
          <target state="translated">Buffer.isReadOnly()</target>
        </trans-unit>
        <trans-unit id="1c680a7bdcbaef5c704b2c8c99a493d58f8b9cef" translate="yes" xml:space="preserve">
          <source>Buffer.limit()</source>
          <target state="translated">Buffer.limit()</target>
        </trans-unit>
        <trans-unit id="5bc06def9af412b4a03f7eab1086211803018361" translate="yes" xml:space="preserve">
          <source>Buffer.mark()</source>
          <target state="translated">Buffer.mark()</target>
        </trans-unit>
        <trans-unit id="9964f38bfb77f73e1b37e0e723bfc1461dfc1244" translate="yes" xml:space="preserve">
          <source>Buffer.position()</source>
          <target state="translated">Buffer.position()</target>
        </trans-unit>
        <trans-unit id="469dcd30cfcdde82eb52ed036b9075fcab400c35" translate="yes" xml:space="preserve">
          <source>Buffer.remaining()</source>
          <target state="translated">Buffer.remaining()</target>
        </trans-unit>
        <trans-unit id="334f2a0d6a429a0b9dbc0109f3dc95f6e4436e8d" translate="yes" xml:space="preserve">
          <source>Buffer.reset()</source>
          <target state="translated">Buffer.reset()</target>
        </trans-unit>
        <trans-unit id="61160c6fa0545fdf59e66dd7bbff8f7dda9b1d01" translate="yes" xml:space="preserve">
          <source>Buffer.rewind()</source>
          <target state="translated">Buffer.rewind()</target>
        </trans-unit>
        <trans-unit id="64600be1a4d0ebec51c5b8f598e409c49f1dc764" translate="yes" xml:space="preserve">
          <source>BufferOverflowException</source>
          <target state="translated">BufferOverflowException</target>
        </trans-unit>
        <trans-unit id="0af21354efafb37f8b23416e3db171e9b304b9c6" translate="yes" xml:space="preserve">
          <source>BufferPoolMXBean</source>
          <target state="translated">BufferPoolMXBean</target>
        </trans-unit>
        <trans-unit id="2ad3b7ce1b2b194569e0154c96697eabc50e63a3" translate="yes" xml:space="preserve">
          <source>BufferPoolMXBean.getCount()</source>
          <target state="translated">BufferPoolMXBean.getCount()</target>
        </trans-unit>
        <trans-unit id="5a197bb2d1e583e18cc5fb7174e266e64cc91651" translate="yes" xml:space="preserve">
          <source>BufferPoolMXBean.getMemoryUsed()</source>
          <target state="translated">BufferPoolMXBean.getMemoryUsed()</target>
        </trans-unit>
        <trans-unit id="fe752631bfe49b00ca0ff304b1c54da65dad8e33" translate="yes" xml:space="preserve">
          <source>BufferPoolMXBean.getName()</source>
          <target state="translated">BufferPoolMXBean.getName()</target>
        </trans-unit>
        <trans-unit id="23f0cf982f63468f25ccbf7cb19416c82dea1556" translate="yes" xml:space="preserve">
          <source>BufferPoolMXBean.getTotalCapacity()</source>
          <target state="translated">BufferPoolMXBean.getTotalCapacity()</target>
        </trans-unit>
        <trans-unit id="9233d0dc2d4af9caef8ab35cd68a9a6796442e28" translate="yes" xml:space="preserve">
          <source>BufferUnderflowException</source>
          <target state="translated">BufferUnderflowException</target>
        </trans-unit>
        <trans-unit id="43d6a3a9a7c84d3cedcfa30ee2d4925536a4e6fa" translate="yes" xml:space="preserve">
          <source>BufferedInputStream</source>
          <target state="translated">BufferedInputStream</target>
        </trans-unit>
        <trans-unit id="cb37191f17d2ccbaa7775852ab9abda9b850db5c" translate="yes" xml:space="preserve">
          <source>BufferedInputStream.available()</source>
          <target state="translated">BufferedInputStream.available()</target>
        </trans-unit>
        <trans-unit id="7e5d5a706380d9c9e662a00e6d7f43910a772dbf" translate="yes" xml:space="preserve">
          <source>BufferedInputStream.close()</source>
          <target state="translated">BufferedInputStream.close()</target>
        </trans-unit>
        <trans-unit id="095809bf225e83e975ec2093ad9d171f72aa3244" translate="yes" xml:space="preserve">
          <source>BufferedInputStream.mark()</source>
          <target state="translated">BufferedInputStream.mark()</target>
        </trans-unit>
        <trans-unit id="337cf14776c747989245856b2163000eecf3637a" translate="yes" xml:space="preserve">
          <source>BufferedInputStream.markSupported()</source>
          <target state="translated">BufferedInputStream.markSupported()</target>
        </trans-unit>
        <trans-unit id="fb89e7ee47d1030b89974e1dbee2c305522acc60" translate="yes" xml:space="preserve">
          <source>BufferedInputStream.read()</source>
          <target state="translated">BufferedInputStream.read()</target>
        </trans-unit>
        <trans-unit id="35b50e38bf1222a88c679a6b63f7d32c7a6bb314" translate="yes" xml:space="preserve">
          <source>BufferedInputStream.reset()</source>
          <target state="translated">BufferedInputStream.reset()</target>
        </trans-unit>
        <trans-unit id="fa3cc1eaa182f0a4128ed87419bd12e197be2a50" translate="yes" xml:space="preserve">
          <source>BufferedInputStream.skip()</source>
          <target state="translated">BufferedInputStream.skip()</target>
        </trans-unit>
        <trans-unit id="7c33b69de473a83861b7cf94afff906d74fb2506" translate="yes" xml:space="preserve">
          <source>BufferedOutputStream</source>
          <target state="translated">BufferedOutputStream</target>
        </trans-unit>
        <trans-unit id="de5d855532a2787488362fc50dadfa5c48110d6d" translate="yes" xml:space="preserve">
          <source>BufferedOutputStream.flush()</source>
          <target state="translated">BufferedOutputStream.flush()</target>
        </trans-unit>
        <trans-unit id="9a608c5a569cdace93a11051aa97b73b8b73c6c2" translate="yes" xml:space="preserve">
          <source>BufferedOutputStream.write()</source>
          <target state="translated">BufferedOutputStream.write()</target>
        </trans-unit>
        <trans-unit id="3c3ba90022b9dc12dc27287d12ccce2217f56df0" translate="yes" xml:space="preserve">
          <source>BufferedReader</source>
          <target state="translated">BufferedReader</target>
        </trans-unit>
        <trans-unit id="79ef6db7b9602e4c96c58a9de8a949d46832916d" translate="yes" xml:space="preserve">
          <source>BufferedReader.close()</source>
          <target state="translated">BufferedReader.close()</target>
        </trans-unit>
        <trans-unit id="5521b420786f0bd2b4b081a5fd6f97bc5d310428" translate="yes" xml:space="preserve">
          <source>BufferedReader.lines()</source>
          <target state="translated">BufferedReader.lines()</target>
        </trans-unit>
        <trans-unit id="57e65962ca744e28d902657126795098c64bd433" translate="yes" xml:space="preserve">
          <source>BufferedReader.mark()</source>
          <target state="translated">BufferedReader.mark()</target>
        </trans-unit>
        <trans-unit id="adb34aa2bc3ee7920eee8e341fc8e354179a2648" translate="yes" xml:space="preserve">
          <source>BufferedReader.markSupported()</source>
          <target state="translated">BufferedReader.markSupported()</target>
        </trans-unit>
        <trans-unit id="959163557212bf8bb5fd146bc8f821f98f0c6cb9" translate="yes" xml:space="preserve">
          <source>BufferedReader.read()</source>
          <target state="translated">BufferedReader.read()</target>
        </trans-unit>
        <trans-unit id="02f10189fcbc66bab79f3fea8424be8c3e3c813d" translate="yes" xml:space="preserve">
          <source>BufferedReader.readLine()</source>
          <target state="translated">BufferedReader.readLine()</target>
        </trans-unit>
        <trans-unit id="bdd1c0747bfcded51cc572c4b6e1708a6a6fa54b" translate="yes" xml:space="preserve">
          <source>BufferedReader.ready()</source>
          <target state="translated">BufferedReader.ready()</target>
        </trans-unit>
        <trans-unit id="c485ce4225a9e7ef7702a9c9ea818c5bdffa1b4b" translate="yes" xml:space="preserve">
          <source>BufferedReader.reset()</source>
          <target state="translated">BufferedReader.reset()</target>
        </trans-unit>
        <trans-unit id="ab7493f82a8a553475e878769dfecadd38033adb" translate="yes" xml:space="preserve">
          <source>BufferedReader.skip()</source>
          <target state="translated">BufferedReader.skip()</target>
        </trans-unit>
        <trans-unit id="78e71426e1f6fb39c644c18fb8b47d451fe6d2f0" translate="yes" xml:space="preserve">
          <source>BufferedWriter</source>
          <target state="translated">BufferedWriter</target>
        </trans-unit>
        <trans-unit id="bda4b82fea67ea9197c59b93abab8ff5b590bc80" translate="yes" xml:space="preserve">
          <source>BufferedWriter.close()</source>
          <target state="translated">BufferedWriter.close()</target>
        </trans-unit>
        <trans-unit id="bee34a8d4a804ddb1d773dba70227e39efc02cb9" translate="yes" xml:space="preserve">
          <source>BufferedWriter.flush()</source>
          <target state="translated">BufferedWriter.flush()</target>
        </trans-unit>
        <trans-unit id="184fc314d94de097b43b39396a3054b7e11fdeea" translate="yes" xml:space="preserve">
          <source>BufferedWriter.newLine()</source>
          <target state="translated">BufferedWriter.newLine()</target>
        </trans-unit>
        <trans-unit id="11661555952067fad97e4e16c0cd8fb79027c341" translate="yes" xml:space="preserve">
          <source>BufferedWriter.write()</source>
          <target state="translated">BufferedWriter.write()</target>
        </trans-unit>
        <trans-unit id="4cbcd2f7b704b607643b54842a2d38a1465e1a06" translate="yes" xml:space="preserve">
          <source>Buffers</source>
          <target state="translated">Buffers</target>
        </trans-unit>
        <trans-unit id="3127dbd72d3e8e6dd96a5e4ba8be9595fb57f7e5" translate="yes" xml:space="preserve">
          <source>Buffers are not safe for use by multiple concurrent threads so care should be taken to not access the buffer until the operation has completed.</source>
          <target state="translated">버퍼는 여러 개의 동시 스레드에서 사용하기에 안전하지 않으므로 작업이 완료 될 때까지 버퍼에 액세스하지 않도록주의해야합니다.</target>
        </trans-unit>
        <trans-unit id="b81672229ac7edddfe9a42e70119e20c47dd2116" translate="yes" xml:space="preserve">
          <source>Buffers are not safe for use by multiple concurrent threads. If a buffer is to be used by more than one thread then access to the buffer should be controlled by appropriate synchronization.</source>
          <target state="translated">버퍼는 여러 개의 동시 스레드에서 사용하기에 안전하지 않습니다. 하나 이상의 스레드에서 버퍼를 사용하는 경우 적절한 동기화를 통해 버퍼에 대한 액세스를 제어해야합니다.</target>
        </trans-unit>
        <trans-unit id="4759bf14d7a511508e86c343c934894b6e8db533" translate="yes" xml:space="preserve">
          <source>Builder</source>
          <target state="translated">Builder</target>
        </trans-unit>
        <trans-unit id="66c0ebb2b029dee989f21abcdd5e0d3e6e1812f2" translate="yes" xml:space="preserve">
          <source>Builder objects are mutable and are not safe for use by multiple concurrent threads without appropriate synchronization.</source>
          <target state="translated">빌더 오브젝트는 변경 가능하며 적절한 동기화없이 여러 동시 스레드에서 사용하기에 안전하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="8510d1fe97f2a77a854ffe3df4ef674a7ca7a721" translate="yes" xml:space="preserve">
          <source>Builder to create date-time formatters.</source>
          <target state="translated">날짜-시간 포맷터를 작성하는 빌더입니다.</target>
        </trans-unit>
        <trans-unit id="4e8fd27eb1eedbadfbaa1f4dc4780ae78ff69e59" translate="yes" xml:space="preserve">
          <source>Builders can be reused; &lt;code&gt;clear()&lt;/code&gt; resets all fields to their default values.</source>
          <target state="translated">빌더는 재사용 할 수 있습니다. &lt;code&gt;clear()&lt;/code&gt; 모든 필드를 기본값으로 재설정합니다.</target>
        </trans-unit>
        <trans-unit id="cc2cb2e347601f0137532272464740ad20012c91" translate="yes" xml:space="preserve">
          <source>Builds the stream, transitioning this builder to the built state. An &lt;code&gt;IllegalStateException&lt;/code&gt; is thrown if there are further attempts to operate on the builder after it has entered the built state.</source>
          <target state="translated">이 빌더를 빌드 된 상태로 전환하여 스트림을 빌드합니다. &lt;code&gt;IllegalStateException&lt;/code&gt; 가 내장 된 상태를 입력 한 후 빌더에서 작동하는 추가 시도가있을 경우 발생합니다.</target>
        </trans-unit>
        <trans-unit id="6b0f9e02b333eeded35bf130471a834d107cfe2b" translate="yes" xml:space="preserve">
          <source>Bulk operations may complete abruptly, throwing an exception encountered in the application of a supplied function. Bear in mind when handling such exceptions that other concurrently executing functions could also have thrown exceptions, or would have done so if the first exception had not occurred.</source>
          <target state="translated">제공된 기능을 적용 할 때 예외가 발생하여 대량 작업이 갑자기 완료 될 수 있습니다. 이러한 예외를 처리 할 때 동시에 실행중인 다른 함수도 예외를 발생 시켰거나 첫 번째 예외가 발생하지 않은 경우 예외가 발생했음을 명심하십시오.</target>
        </trans-unit>
        <trans-unit id="028861d8fa6ae30f4c3df9c06e33472d5bd3dbd6" translate="yes" xml:space="preserve">
          <source>BundleBaseName</source>
          <target state="translated">BundleBaseName</target>
        </trans-unit>
        <trans-unit id="30a034cc2e1d52e15d08fd41d2f411352ef21a8d" translate="yes" xml:space="preserve">
          <source>But if the application did not initiate the closure process, or if the circumstances above do not apply, this method should be called whenever the end of the SSL/TLS data stream is reached. This ensures closure of the inbound side, and checks that the peer followed the SSL/TLS close procedure properly, thus detecting possible truncation attacks.</source>
          <target state="translated">그러나 애플리케이션이 클로저 프로세스를 시작하지 않았거나 위의 상황이 적용되지 않는 경우 SSL / TLS 데이터 스트림의 끝에 도달 할 때마다이 메소드를 호출해야합니다. 이를 통해 인바운드 측이 닫히고 피어가 SSL / TLS 닫기 프로 시저를 올바로 수행했는지 확인하여 가능한 잘림 공격을 감지합니다.</target>
        </trans-unit>
        <trans-unit id="5a5c4305f5bf0f160a7906ef13122e3402b15a85" translate="yes" xml:space="preserve">
          <source>But, in most cases, there is no need to deal directly with the subclasses, as the InetAddress abstraction should cover most of the needed functionality.</source>
          <target state="translated">그러나 대부분의 경우 InetAddress 추상화는 필요한 기능의 대부분을 다루어야하므로 서브 클래스를 직접 처리 할 필요가 없습니다.</target>
        </trans-unit>
        <trans-unit id="79e041f06031b304d29c4b6a13cb37ce4189f083" translate="yes" xml:space="preserve">
          <source>By &lt;a href=&quot;watchservice#close--&quot;&gt;&lt;code&gt;closing&lt;/code&gt;&lt;/a&gt; the watch service.</source>
          <target state="translated">시계 서비스 를 &lt;a href=&quot;watchservice#close--&quot;&gt; &lt;code&gt;closing&lt;/code&gt; &lt;/a&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="731374a7fe56ec0bef1ac5151faf1bdaabfb4d05" translate="yes" xml:space="preserve">
          <source>By a &lt;code&gt;Format.Field&lt;/code&gt; constant, see &lt;code&gt;ERA_FIELD&lt;/code&gt; and its friends in &lt;code&gt;DateFormat&lt;/code&gt; for an example.</source>
          <target state="translated">A로 &lt;code&gt;Format.Field&lt;/code&gt; 일정을 참조 &lt;code&gt;ERA_FIELD&lt;/code&gt; 에 그 친구 &lt;code&gt;DateFormat&lt;/code&gt; 의 예는.</target>
        </trans-unit>
        <trans-unit id="a722b14c14361c4cf7b036b95981fa9d7403243d" translate="yes" xml:space="preserve">
          <source>By an integer constant, whose names typically end with &lt;code&gt;_FIELD&lt;/code&gt;. The constants are defined in the various subclasses of &lt;code&gt;Format&lt;/code&gt;.</source>
          <target state="translated">이름이 정수 상수, 전형적으로 최종 &lt;code&gt;_FIELD&lt;/code&gt; . 상수는 &lt;code&gt;Format&lt;/code&gt; 의 다양한 서브 클래스에 정의되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="5dbe7a3f00da7d38dcae33de8970c70a967340df" translate="yes" xml:space="preserve">
          <source>By calling one of the &lt;a href=&quot;methodhandles.lookup#lookups&quot;&gt;Lookup Factory Methods&lt;/a&gt;, such as &lt;a href=&quot;methodhandles.lookup#findVirtual-java.lang.Class-java.lang.String-java.lang.invoke.MethodType-&quot;&gt;&lt;code&gt;Lookup.findVirtual&lt;/code&gt;&lt;/a&gt;, to resolve a symbolic reference into a method handle. A symbolic reference consists of a class, name string, and type.</source>
          <target state="translated">&lt;a href=&quot;methodhandles.lookup#findVirtual-java.lang.Class-java.lang.String-java.lang.invoke.MethodType-&quot;&gt; &lt;code&gt;Lookup.findVirtual&lt;/code&gt; &lt;/a&gt; 과 같은 &lt;a href=&quot;methodhandles.lookup#lookups&quot;&gt;Lookup Factory Methods&lt;/a&gt; 중 하나를 호출 하여 메서드 핸들에 대한 심볼릭 참조를 해결합니다. 기호 참조는 클래스, 이름 문자열 및 유형으로 구성됩니다.</target>
        </trans-unit>
        <trans-unit id="724dd4b9f9faacd3f7346ee2ca63a912c6121ad9" translate="yes" xml:space="preserve">
          <source>By calling the factory method &lt;a href=&quot;methodhandles.lookup#unreflect-java.lang.reflect.Method-&quot;&gt;&lt;code&gt;Lookup.unreflect&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;methodhandles.lookup#unreflectSpecial-java.lang.reflect.Method-java.lang.Class-&quot;&gt;&lt;code&gt;Lookup.unreflectSpecial&lt;/code&gt;&lt;/a&gt; to convert a &lt;a href=&quot;../reflect/method&quot;&gt;&lt;code&gt;Method&lt;/code&gt;&lt;/a&gt; into a method handle.</source>
          <target state="translated">팩토리 메소드 &lt;a href=&quot;methodhandles.lookup#unreflect-java.lang.reflect.Method-&quot;&gt; &lt;code&gt;Lookup.unreflect&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;methodhandles.lookup#unreflectSpecial-java.lang.reflect.Method-java.lang.Class-&quot;&gt; &lt;code&gt;Lookup.unreflectSpecial&lt;/code&gt; &lt;/a&gt; 을 호출하여 &lt;a href=&quot;../reflect/method&quot;&gt; &lt;code&gt;Method&lt;/code&gt; &lt;/a&gt; 를 메소드 핸들로 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="09378e7e493522683c654e9c1cf13be18d73cc44" translate="yes" xml:space="preserve">
          <source>By calling the factory method &lt;a href=&quot;methodhandles.lookup#unreflectConstructor-java.lang.reflect.Constructor-&quot;&gt;&lt;code&gt;Lookup.unreflectConstructor&lt;/code&gt;&lt;/a&gt; to convert a &lt;a href=&quot;../reflect/constructor&quot;&gt;&lt;code&gt;Constructor&lt;/code&gt;&lt;/a&gt; into a method handle.</source>
          <target state="translated">팩토리 메소드 &lt;a href=&quot;methodhandles.lookup#unreflectConstructor-java.lang.reflect.Constructor-&quot;&gt; &lt;code&gt;Lookup.unreflectConstructor&lt;/code&gt; &lt;/a&gt; 를 호출하여 &lt;a href=&quot;../reflect/constructor&quot;&gt; &lt;code&gt;Constructor&lt;/code&gt; &lt;/a&gt; 를 메소드 핸들로 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="8bf6f3de6ce61cca0b193151d74f47245f2a6397" translate="yes" xml:space="preserve">
          <source>By calling the factory method &lt;a href=&quot;methodhandles.lookup#unreflectGetter-java.lang.reflect.Field-&quot;&gt;&lt;code&gt;Lookup.unreflectGetter&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;methodhandles.lookup#unreflectSetter-java.lang.reflect.Field-&quot;&gt;&lt;code&gt;Lookup.unreflectSetter&lt;/code&gt;&lt;/a&gt; to convert a &lt;a href=&quot;../reflect/field&quot;&gt;&lt;code&gt;Field&lt;/code&gt;&lt;/a&gt; into a method handle.</source>
          <target state="translated">팩토리 메소드 &lt;a href=&quot;methodhandles.lookup#unreflectGetter-java.lang.reflect.Field-&quot;&gt; &lt;code&gt;Lookup.unreflectGetter&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;methodhandles.lookup#unreflectSetter-java.lang.reflect.Field-&quot;&gt; &lt;code&gt;Lookup.unreflectSetter&lt;/code&gt; &lt;/a&gt; 를 호출하여 &lt;a href=&quot;../reflect/field&quot;&gt; &lt;code&gt;Field&lt;/code&gt; &lt;/a&gt; 를 메소드 핸들로 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="b4753cc387bbac0c7f9c57217c466411a45429b6" translate="yes" xml:space="preserve">
          <source>By convention, X.509 &lt;code&gt;CertPath&lt;/code&gt;s (consisting of &lt;code&gt;X509Certificate&lt;/code&gt;s), are ordered starting with the target certificate and ending with a certificate issued by the trust anchor. That is, the issuer of one certificate is the subject of the following one. The certificate representing the &lt;a href=&quot;trustanchor&quot;&gt;&lt;code&gt;TrustAnchor&lt;/code&gt;&lt;/a&gt; should not be included in the certification path. Unvalidated X.509 &lt;code&gt;CertPath&lt;/code&gt;s may not follow these conventions. PKIX &lt;code&gt;CertPathValidator&lt;/code&gt;s will detect any departure from these conventions that cause the certification path to be invalid and throw a &lt;code&gt;CertPathValidatorException&lt;/code&gt;.</source>
          <target state="translated">일반적으로 X.509 &lt;code&gt;CertPath&lt;/code&gt; ( &lt;code&gt;X509Certificate&lt;/code&gt; 로 구성됨 )는 대상 인증서로 시작하고 신뢰 앵커가 발행 한 인증서로 끝나도록 주문됩니다. 즉, 하나의 인증서 발행자는 다음 인증서의 주제입니다. &lt;a href=&quot;trustanchor&quot;&gt; &lt;code&gt;TrustAnchor&lt;/code&gt; 를&lt;/a&gt; 나타내는 인증서는 인증 경로에 포함되지 않아야합니다. 확인 되지 않은 X.509 &lt;code&gt;CertPath&lt;/code&gt; 는 이러한 규칙을 따르지 않을 수 있습니다. PKIX &lt;code&gt;CertPathValidator&lt;/code&gt; 는, 인증 경로가 무효가되어 &lt;code&gt;CertPathValidatorException&lt;/code&gt; 을 발생시키는 이러한 규약의 이탈을 검출합니다 .</target>
        </trans-unit>
        <trans-unit id="b2514c1e5ade3cabc14faae1aab73f262681b04c" translate="yes" xml:space="preserve">
          <source>By convention, class &lt;code&gt;Throwable&lt;/code&gt; and its subclasses have two constructors, one that takes no arguments and one that takes a &lt;code&gt;String&lt;/code&gt; argument that can be used to produce a detail message. Further, those subclasses that might likely have a cause associated with them should have two more constructors, one that takes a &lt;code&gt;Throwable&lt;/code&gt; (the cause), and one that takes a &lt;code&gt;String&lt;/code&gt; (the detail message) and a &lt;code&gt;Throwable&lt;/code&gt; (the cause).</source>
          <target state="translated">일반적으로 &lt;code&gt;Throwable&lt;/code&gt; 클래스 와 해당 서브 클래스에는 두 개의 생성자가 있습니다. 하나는 인수를 사용하지 않고 다른 하나 는 세부 메시지를 생성하는 데 사용할 수 있는 &lt;code&gt;String&lt;/code&gt; 인수를 사용합니다. 또한 관련 원인이있을 수있는 서브 클래스에는 &lt;code&gt;Throwable&lt;/code&gt; (원인)을 사용 하는 클래스 와 &lt;code&gt;String&lt;/code&gt; (세부 메시지) 및 &lt;code&gt;Throwable&lt;/code&gt; (원인)을 사용 하는 생성자가 두 개 더 있어야합니다 .</target>
        </trans-unit>
        <trans-unit id="0dd690817d171aa95e2eb06736a2246e8af3211c" translate="yes" xml:space="preserve">
          <source>By convention, classes that implement this interface should override &lt;code&gt;Object.clone&lt;/code&gt; (which is protected) with a public method. See &lt;a href=&quot;object#clone--&quot;&gt;&lt;code&gt;Object.clone()&lt;/code&gt;&lt;/a&gt; for details on overriding this method.</source>
          <target state="translated">일반적으로이 인터페이스를 구현하는 클래스 는 공용 메소드로 &lt;code&gt;Object.clone&lt;/code&gt; (보호 된)을 대체해야합니다 . 이 메서드를 재정의하는 방법에 대한 자세한 내용 은 &lt;a href=&quot;object#clone--&quot;&gt; &lt;code&gt;Object.clone()&lt;/code&gt; &lt;/a&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="91a3641a4b8169abf7f6d88641a6c87fae260b35" translate="yes" xml:space="preserve">
          <source>By convention, the object returned by this method should be independent of this object (which is being cloned). To achieve this independence, it may be necessary to modify one or more fields of the object returned by &lt;code&gt;super.clone&lt;/code&gt; before returning it. Typically, this means copying any mutable objects that comprise the internal &quot;deep structure&quot; of the object being cloned and replacing the references to these objects with references to the copies. If a class contains only primitive fields or references to immutable objects, then it is usually the case that no fields in the object returned by &lt;code&gt;super.clone&lt;/code&gt; need to be modified.</source>
          <target state="translated">일반적으로이 메소드가 리턴 한 오브젝트는이 오브젝트 (복제중인)와 독립적이어야합니다. 이 독립성을 달성하려면 반환 하기 전에 &lt;code&gt;super.clone&lt;/code&gt; 에 의해 반환 된 객체의 하나 이상의 필드를 수정해야 할 수도 있습니다 . 일반적으로 이것은 복제되는 객체의 내부 &quot;심층 구조&quot;를 구성하는 변경 가능한 객체를 복사하고 이러한 객체에 대한 참조를 사본에 대한 참조로 대체하는 것을 의미합니다. 클래스에 기본 필드 나 변경 불가능한 객체에 대한 참조 만 포함 된 경우 일반적으로 &lt;code&gt;super.clone&lt;/code&gt; 에 의해 반환 된 객체의 필드를 수정하지 않아도됩니다.</target>
        </trans-unit>
        <trans-unit id="a60713ca9a1b0ef07a53742b11bce0a57dc2728e" translate="yes" xml:space="preserve">
          <source>By convention, the returned object should be obtained by calling &lt;code&gt;super.clone&lt;/code&gt;. If a class and all of its superclasses (except &lt;code&gt;Object&lt;/code&gt;) obey this convention, it will be the case that &lt;code&gt;x.clone().getClass() == x.getClass()&lt;/code&gt;.</source>
          <target state="translated">일반적으로 반환 된 객체는 &lt;code&gt;super.clone&lt;/code&gt; 을 호출하여 얻어야합니다 . 클래스와 클래스의 모든 수퍼 클래스 ( &lt;code&gt;Object&lt;/code&gt; 제외 )가이 규칙을 준수하면 &lt;code&gt;x.clone().getClass() == x.getClass()&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="d2185b894b3385135eb487891c25c706e5066e38" translate="yes" xml:space="preserve">
          <source>By default &lt;code&gt;Object.equals()&lt;/code&gt; is used when comparing the attribute id and its values except when a value is an array. For an array, each element of the array is checked using &lt;code&gt;Object.equals()&lt;/code&gt;. A subclass may override this to make use of schema syntax information and matching rules, which define what it means for two attributes to be equal. How and whether a subclass makes use of the schema information is determined by the subclass. If a subclass overrides &lt;code&gt;equals()&lt;/code&gt;, it should also override &lt;code&gt;hashCode()&lt;/code&gt; such that two attributes that are equal have the same hash code.</source>
          <target state="translated">기본적으로 &lt;code&gt;Object.equals()&lt;/code&gt; 는 값이 배열 인 경우를 제외하고 속성 ID와 해당 값을 비교할 때 사용됩니다. 배열의 경우 배열의 각 요소는 &lt;code&gt;Object.equals()&lt;/code&gt; 사용하여 확인됩니다 . 서브 클래스는 스키마 구문 정보와 일치 규칙을 사용하기 위해이를 재정의 할 수 있는데, 이는 두 속성이 동일하다는 의미를 정의합니다. 서브 클래스가 스키마 정보를 사용하는 방법과 여부는 서브 클래스에 의해 결정됩니다. 서브 클래스가 &lt;code&gt;equals()&lt;/code&gt; 대체하는 경우, 동일한 두 속성이 동일한 해시 코드를 갖도록 &lt;code&gt;hashCode()&lt;/code&gt; 대체해야 합니다.</target>
        </trans-unit>
        <trans-unit id="6a95f057ba55802f53862fb634fcd938fe029c43" translate="yes" xml:space="preserve">
          <source>By default buffering is enabled in the IO libraries but each log record is flushed out when it is complete.</source>
          <target state="translated">기본적으로 버퍼링은 IO 라이브러리에서 활성화되지만 각 로그 레코드는 완료되면 플러시됩니다.</target>
        </trans-unit>
        <trans-unit id="b97e0d008dcff1111ecc8ca31996c70c23abeedd" translate="yes" xml:space="preserve">
          <source>By default many of the &lt;code&gt;Math&lt;/code&gt; methods simply call the equivalent method in &lt;code&gt;StrictMath&lt;/code&gt; for their implementation. Code generators are encouraged to use platform-specific native libraries or microprocessor instructions, where available, to provide higher-performance implementations of &lt;code&gt;Math&lt;/code&gt; methods. Such higher-performance implementations still must conform to the specification for &lt;code&gt;Math&lt;/code&gt;.</source>
          <target state="translated">기본적으로 많은 &lt;code&gt;Math&lt;/code&gt; 메소드 는 구현을 위해 &lt;code&gt;StrictMath&lt;/code&gt; 에서 동등한 메소드를 호출하기 만합니다 . 코드 생성기는 플랫폼 별 기본 라이브러리 또는 마이크로 프로세서 명령어를 사용하여 고성능 &lt;code&gt;Math&lt;/code&gt; 메소드 구현을 제공 하는 것이 좋습니다. 이러한 고성능 구현은 여전히 &lt;code&gt;Math&lt;/code&gt; 사양을 준수해야합니다 .</target>
        </trans-unit>
        <trans-unit id="1e527c5569095092b2cf7ba2f0c72adf3d6e528c" translate="yes" xml:space="preserve">
          <source>By default the &lt;code&gt;XMLFormatter&lt;/code&gt; class is used for formatting.</source>
          <target state="translated">기본적으로 &lt;code&gt;XMLFormatter&lt;/code&gt; 클래스는 형식화에 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="a3e1586fad30e9a15b9ef57bb9e4be9026e0b33a" translate="yes" xml:space="preserve">
          <source>By default the GIF writer plug-in creates version &quot;89a&quot; images. This can be changed to &quot;87a&quot; by explicitly setting the version in the stream metadata (see  GIF Stream Metadata Format Specification).</source>
          <target state="translated">기본적으로 GIF 기록기 플러그인은 버전 &quot;89a&quot;이미지를 만듭니다. 스트림 메타 데이터에서 버전을 명시 적으로 설정하여 &quot;87a&quot;로 변경할 수 있습니다 (GIF 스트림 메타 데이터 형식 사양 참조).</target>
        </trans-unit>
        <trans-unit id="240aa97df5f841986305a2c67ef1a8cdbe594454" translate="yes" xml:space="preserve">
          <source>By default the protocol handlers are loaded dynamically from the default location. It is, however, possible to add to the search path by setting the &lt;code&gt;java.protocol.handler.pkgs&lt;/code&gt; system property. For instance if it is set to &lt;code&gt;myapp.protocols&lt;/code&gt;, then the URL code will try, in the case of http, first to load &lt;code&gt;myapp.protocols.http.Handler&lt;/code&gt;, then, if this fails, &lt;code&gt;http.Handler&lt;/code&gt; from the default location.</source>
          <target state="translated">기본적으로 프로토콜 핸들러는 기본 위치에서 동적으로로드됩니다. 그러나 &lt;code&gt;java.protocol.handler.pkgs&lt;/code&gt; 시스템 특성 을 설정하여 검색 경로에 추가 할 수 있습니다 . 예를 들어 , &lt;code&gt;myapp.protocols&lt;/code&gt; 로 설정된 경우 URL 코드는 http의 경우 먼저 &lt;code&gt;myapp.protocols.http.Handler&lt;/code&gt; 를로드 한 다음 실패 하면 기본 위치에서 &lt;code&gt;http.Handler&lt;/code&gt; 를로드하려고 시도 합니다 .</target>
        </trans-unit>
        <trans-unit id="59c0deb687021a178f3e4a99362342d2537719ff" translate="yes" xml:space="preserve">
          <source>By default, &lt;code&gt;Object.equals()&lt;/code&gt; is used when comparing &lt;code&gt;attrVal&lt;/code&gt; with this attribute's values except when &lt;code&gt;attrVal&lt;/code&gt; is an array. For an array, each element of the array is checked using &lt;code&gt;Object.equals()&lt;/code&gt;. A subclass may use schema information to determine equality.</source>
          <target state="translated">기본적 &lt;code&gt;Object.equals()&lt;/code&gt; 과 비교할 때 사용 &lt;code&gt;attrVal&lt;/code&gt; 을 하는 경우를 제외하고,이 속성의 값 &lt;code&gt;attrVal&lt;/code&gt; 가 배열이다. 배열의 경우 배열의 각 요소는 &lt;code&gt;Object.equals()&lt;/code&gt; 사용하여 확인됩니다 . 서브 클래스는 스키마 정보를 사용하여 동등성을 결정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="212c70cbb72235079826330f8c93e9f3daa323d2" translate="yes" xml:space="preserve">
          <source>By default, Loggers also send their output to their parent logger. Typically the root Logger is configured with a set of Handlers that essentially act as default handlers for all loggers.</source>
          <target state="translated">기본적으로 로거는 출력을 상위 로거로 보냅니다. 일반적으로 루트 로거는 기본적으로 모든 로거의 기본 처리기 역할을하는 처리기 집합으로 구성됩니다.</target>
        </trans-unit>
        <trans-unit id="68c2cfa847b16a85a98ff2beb33729eb20546f7d" translate="yes" xml:space="preserve">
          <source>By default, a matcher uses anchoring region boundaries.</source>
          <target state="translated">기본적으로 매처는 앵커 영역 경계를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="d9ede2f7970350c012c7153eb1f63e552bf35bde" translate="yes" xml:space="preserve">
          <source>By default, a matcher uses opaque bounds.</source>
          <target state="translated">기본적으로 매처는 불투명 한 경계를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="03241342152d9a58c595740c888895d12fb63207" translate="yes" xml:space="preserve">
          <source>By default, a matcher uses opaque region boundaries.</source>
          <target state="translated">기본적으로 매처는 불투명 영역 경계를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="c991ea9764d32575612084eab1cf01c3d32be1a4" translate="yes" xml:space="preserve">
          <source>By default, a reflected object is &lt;em&gt;not&lt;/em&gt; accessible.</source>
          <target state="translated">기본적으로 반사 된 개체 &lt;em&gt;에는&lt;/em&gt; 액세스 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="a666db9366f0dd2e83f04c71114dafe0253c9836" translate="yes" xml:space="preserve">
          <source>By default, all bits in the set initially have the value &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">기본적으로 세트의 모든 비트는 초기 값이 &lt;code&gt;false&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="b05f4c15bc6d3e0ea9d22420186bbbd6b7d33574" translate="yes" xml:space="preserve">
          <source>By default, case-insensitive matching assumes that only characters in the US-ASCII charset are being matched. Unicode-aware case-insensitive matching can be enabled by specifying the &lt;a href=&quot;pattern#UNICODE_CASE&quot;&gt;&lt;code&gt;UNICODE_CASE&lt;/code&gt;&lt;/a&gt; flag in conjunction with this flag.</source>
          <target state="translated">기본적으로 대소 문자를 구분하지 않는 일치는 US-ASCII 문자 집합의 문자 만 일치한다고 가정합니다. 이 플래그와 함께 &lt;a href=&quot;pattern#UNICODE_CASE&quot;&gt; &lt;code&gt;UNICODE_CASE&lt;/code&gt; &lt;/a&gt; 플래그를 지정하면 대소 문자를 구분하지 않는 유니 코드를 인식 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="bf44f10f4db4900a085335d99045a45fabf1b13c" translate="yes" xml:space="preserve">
          <source>By default, cookies are created according to the RFC 2965 cookie specification. The version can be changed with the &lt;code&gt;setVersion&lt;/code&gt; method.</source>
          <target state="translated">기본적으로 쿠키는 RFC 2965 쿠키 사양에 따라 생성됩니다. &lt;code&gt;setVersion&lt;/code&gt; 메소드 로 버전을 변경할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="ca7f70beb3a78020bab53774c9b058370290284b" translate="yes" xml:space="preserve">
          <source>By default, even core threads are initially created and started only when new tasks arrive, but this can be overridden dynamically using method &lt;a href=&quot;threadpoolexecutor#prestartCoreThread--&quot;&gt;&lt;code&gt;prestartCoreThread()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;threadpoolexecutor#prestartAllCoreThreads--&quot;&gt;&lt;code&gt;prestartAllCoreThreads()&lt;/code&gt;&lt;/a&gt;. You probably want to prestart threads if you construct the pool with a non-empty queue.</source>
          <target state="translated">기본적으로 코어 스레드도 처음에는 새 작업이 도착할 때만 작성 및 시작되지만 &lt;a href=&quot;threadpoolexecutor#prestartCoreThread--&quot;&gt; &lt;code&gt;prestartCoreThread()&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;threadpoolexecutor#prestartAllCoreThreads--&quot;&gt; &lt;code&gt;prestartAllCoreThreads()&lt;/code&gt; &lt;/a&gt; 메소드를 사용하여 동적으로 대체 할 수 있습니다 . 비어 있지 않은 큐로 풀을 구성하는 경우 스레드를 사전 시작하려고 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="de35fdb0e7c1ca0e17cfea2574d03218ad8230ec" translate="yes" xml:space="preserve">
          <source>By default, if no value for that property is specified, an instance of &lt;a href=&quot;mbeanserverbuilder&quot;&gt;&lt;code&gt;javax.management.MBeanServerBuilder&lt;/code&gt;&lt;/a&gt; is created. Otherwise, the MBeanServerFactory attempts to load the specified class using &lt;a href=&quot;../../java/lang/thread#getContextClassLoader--&quot;&gt;&lt;code&gt;Thread.currentThread().getContextClassLoader()&lt;/code&gt;&lt;/a&gt;, or if that is null, &lt;a href=&quot;../../java/lang/class#forName-java.lang.String-&quot;&gt;&lt;code&gt;Class.forName()&lt;/code&gt;&lt;/a&gt;. Then it creates an initial instance of that Class using &lt;a href=&quot;../../java/lang/class#newInstance--&quot;&gt;&lt;code&gt;Class.newInstance()&lt;/code&gt;&lt;/a&gt;. If any checked exception is raised during this process (e.g. &lt;a href=&quot;../../java/lang/classnotfoundexception&quot;&gt;&lt;code&gt;ClassNotFoundException&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../java/lang/instantiationexception&quot;&gt;&lt;code&gt;InstantiationException&lt;/code&gt;&lt;/a&gt;) the MBeanServerFactory will propagate this exception from within a RuntimeException.</source>
          <target state="translated">디폴트로, 해당 특성에 대한 값이 지정되지 않으면 &lt;a href=&quot;mbeanserverbuilder&quot;&gt; &lt;code&gt;javax.management.MBeanServerBuilder&lt;/code&gt; &lt;/a&gt; 인스턴스 가 작성됩니다. 그렇지 않은 경우 MBeanServerFactory는 &lt;a href=&quot;../../java/lang/thread#getContextClassLoader--&quot;&gt; &lt;code&gt;Thread.currentThread().getContextClassLoader()&lt;/code&gt; &lt;/a&gt; 사용하여 지정된 클래스를로드하려고 시도 하거나 null 인 경우 &lt;a href=&quot;../../java/lang/class#forName-java.lang.String-&quot;&gt; &lt;code&gt;Class.forName()&lt;/code&gt; &lt;/a&gt; 입니다. 그런 다음 &lt;a href=&quot;../../java/lang/class#newInstance--&quot;&gt; &lt;code&gt;Class.newInstance()&lt;/code&gt; &lt;/a&gt; 사용하여 해당 클래스의 초기 인스턴스를 만듭니다 . 이 프로세스 중에 점검 된 예외가 발생하면 (예를 들어 &lt;a href=&quot;../../java/lang/classnotfoundexception&quot;&gt; &lt;code&gt;ClassNotFoundException&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../../java/lang/instantiationexception&quot;&gt; &lt;code&gt;InstantiationException&lt;/code&gt; &lt;/a&gt; ) MBeanServerFactory는 RuntimeException 내에서이 예외를 전파합니다.</target>
        </trans-unit>
        <trans-unit id="441e214632a2b7ac3e98f1c5c187c69d336a4e8a" translate="yes" xml:space="preserve">
          <source>By default, line numbering begins at 0. This number increments at every &lt;a href=&quot;#lt&quot;&gt;line terminator&lt;/a&gt; as the data is read, and can be changed with a call to &lt;code&gt;setLineNumber(int)&lt;/code&gt;. Note however, that &lt;code&gt;setLineNumber(int)&lt;/code&gt; does not actually change the current position in the stream; it only changes the value that will be returned by &lt;code&gt;getLineNumber()&lt;/code&gt;.</source>
          <target state="translated">기본적으로 줄 번호 매기기는 0에서 시작합니다.이 번호 는 데이터를 읽을 때 모든 &lt;a href=&quot;#lt&quot;&gt;줄 종결&lt;/a&gt; 자마다 증가하며 &lt;code&gt;setLineNumber(int)&lt;/code&gt; 호출하여 변경할 수 있습니다 . 그러나 &lt;code&gt;setLineNumber(int)&lt;/code&gt; 는 실제로 스트림의 현재 위치를 변경하지 않습니다. &lt;code&gt;getLineNumber()&lt;/code&gt; 의해 반환 될 값만 변경합니다 .</target>
        </trans-unit>
        <trans-unit id="ee8c13d9e88af773fee8d7f7f88a5902d8a19f11" translate="yes" xml:space="preserve">
          <source>By default, parsing is lenient: If the input is not in the form used by this object's format method but can still be parsed as a date, then the parse succeeds. Clients may insist on strict adherence to the format by calling &lt;a href=&quot;dateformat#setLenient-boolean-&quot;&gt;&lt;code&gt;setLenient(false)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">기본적으로 구문 분석은 관대하지 않습니다. 입력이이 오브젝트의 형식 메소드에서 사용되는 형식이 아니지만 여전히 날짜로 구문 분석 할 수 있으면 구문 분석이 성공합니다. 클라이언트는 &lt;a href=&quot;dateformat#setLenient-boolean-&quot;&gt; &lt;code&gt;setLenient(false)&lt;/code&gt; &lt;/a&gt; 호출하여 형식을 엄격하게 준수 할 것을 요구할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="4891c4b2e0ec6b4e0fd376e01b91a0f3e534a924" translate="yes" xml:space="preserve">
          <source>By default, symbolic links are not automatically followed by this method. If the &lt;code&gt;options&lt;/code&gt; parameter contains the &lt;a href=&quot;filevisitoption#FOLLOW_LINKS&quot;&gt;&lt;code&gt;FOLLOW_LINKS&lt;/code&gt;&lt;/a&gt; option then symbolic links are followed. When following links, and the attributes of the target cannot be read, then this method attempts to get the &lt;code&gt;BasicFileAttributes&lt;/code&gt; of the link.</source>
          <target state="translated">기본적으로 심볼릭 링크는이 방법을 자동으로 따르지 않습니다. &lt;code&gt;options&lt;/code&gt; 매개 변수에 &lt;a href=&quot;filevisitoption#FOLLOW_LINKS&quot;&gt; &lt;code&gt;FOLLOW_LINKS&lt;/code&gt; &lt;/a&gt; 옵션이 포함 된 경우 기호 링크가 이어집니다. 링크를 따라 가서 대상의 속성을 읽을 수없는 경우이 메소드 는 링크 의 &lt;code&gt;BasicFileAttributes&lt;/code&gt; 를 가져 오려고 시도합니다 .</target>
        </trans-unit>
        <trans-unit id="f5ecda976163824d56ff183af9bc0a236da744e5" translate="yes" xml:space="preserve">
          <source>By default, symbolic links are not automatically followed by this method. If the &lt;code&gt;options&lt;/code&gt; parameter contains the &lt;a href=&quot;filevisitoption#FOLLOW_LINKS&quot;&gt;&lt;code&gt;FOLLOW_LINKS&lt;/code&gt;&lt;/a&gt; option then symbolic links are followed. When following links, and the attributes of the target cannot be read, then this method attempts to get the &lt;code&gt;BasicFileAttributes&lt;/code&gt; of the link. If they can be read then the &lt;code&gt;visitFile&lt;/code&gt; method is invoked with the attributes of the link (otherwise the &lt;code&gt;visitFileFailed&lt;/code&gt; method is invoked as specified above).</source>
          <target state="translated">기본적으로 심볼릭 링크는이 방법을 자동으로 따르지 않습니다. &lt;code&gt;options&lt;/code&gt; 매개 변수에 &lt;a href=&quot;filevisitoption#FOLLOW_LINKS&quot;&gt; &lt;code&gt;FOLLOW_LINKS&lt;/code&gt; &lt;/a&gt; 옵션이 포함 된 경우 기호 링크가 이어집니다. 링크를 따라 가서 대상의 속성을 읽을 수없는 경우이 메소드 는 링크 의 &lt;code&gt;BasicFileAttributes&lt;/code&gt; 를 가져 오려고 시도합니다 . 읽을 수있는 경우 &lt;code&gt;visitFile&lt;/code&gt; 메소드는 링크의 속성으로 호출됩니다 (그렇지 않으면 &lt;code&gt;visitFileFailed&lt;/code&gt; 메소드는 위에 지정된대로 호출 됨).</target>
        </trans-unit>
        <trans-unit id="b38dd018ae64120a5aa839c3fcbbfbb6f76b01f9" translate="yes" xml:space="preserve">
          <source>By default, the copy fails if the target file already exists or is a symbolic link. If the &lt;a href=&quot;standardcopyoption#REPLACE_EXISTING&quot;&gt;&lt;code&gt;REPLACE_EXISTING&lt;/code&gt;&lt;/a&gt; option is specified, and the target file already exists, then it is replaced if it is not a non-empty directory. If the target file exists and is a symbolic link, then the symbolic link is replaced. In this release, the &lt;code&gt;REPLACE_EXISTING&lt;/code&gt; option is the only option required to be supported by this method. Additional options may be supported in future releases.</source>
          <target state="translated">기본적으로 대상 파일이 이미 존재하거나 기호 링크 인 경우 복사에 실패합니다. 는 IF &lt;a href=&quot;standardcopyoption#REPLACE_EXISTING&quot;&gt; &lt;code&gt;REPLACE_EXISTING&lt;/code&gt; 의&lt;/a&gt; 옵션을 지정하고 대상 파일이 이미 존재할은 비어 있지 않은 디렉토리가 아닌 경우, 그것은 대체됩니다. 대상 파일이 존재하고 기호 링크 인 경우 기호 링크가 바뀝니다. 이 릴리스에서 &lt;code&gt;REPLACE_EXISTING&lt;/code&gt; 옵션은이 메소드에서 지원하는 데 필요한 유일한 옵션입니다. 향후 릴리스에서 추가 옵션이 지원 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="050bea95ee24a9fb1d4a366ba21a756da1436075" translate="yes" xml:space="preserve">
          <source>By default, the created subprocess does not have its own terminal or console. All its standard I/O (i.e. stdin, stdout, stderr) operations will be redirected to the parent process, where they can be accessed via the streams obtained using the methods &lt;a href=&quot;process#getOutputStream--&quot;&gt;&lt;code&gt;getOutputStream()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;process#getInputStream--&quot;&gt;&lt;code&gt;getInputStream()&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;process#getErrorStream--&quot;&gt;&lt;code&gt;getErrorStream()&lt;/code&gt;&lt;/a&gt;. The parent process uses these streams to feed input to and get output from the subprocess. Because some native platforms only provide limited buffer size for standard input and output streams, failure to promptly write the input stream or read the output stream of the subprocess may cause the subprocess to block, or even deadlock.</source>
          <target state="translated">기본적으로 작성된 서브 프로세스에는 자체 터미널 또는 콘솔이 없습니다. 모든 표준 I / O (예 : stdin, stdout, stderr) 조작은 상위 프로세스로 경로 재 지정되며 &lt;a href=&quot;process#getOutputStream--&quot;&gt; &lt;code&gt;getOutputStream()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;process#getInputStream--&quot;&gt; &lt;code&gt;getInputStream()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;process#getErrorStream--&quot;&gt; &lt;code&gt;getErrorStream()&lt;/code&gt; &lt;/a&gt; 메소드를 사용하여 얻은 스트림을 통해 액세스 할 수 있습니다 . 상위 프로세스는이 스트림을 사용하여 서브 프로세스에 입력을 제공하고 서브 프로세스에서 출력을 가져옵니다. 일부 기본 플랫폼은 표준 입력 및 출력 스트림에 대해 제한된 버퍼 크기 만 제공하므로, 입력 스트림을 즉시 쓰거나 서브 프로세스의 출력 스트림을 읽지 못하면 서브 프로세스가 차단되거나 교착 상태가 발생할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="59dbc1b830381e6069428b989946dc8b88e861e8" translate="yes" xml:space="preserve">
          <source>By default, the notification dispatch model is synchronous. That is, when a thread calls sendNotification, the &lt;code&gt;NotificationListener.handleNotification&lt;/code&gt; method of each listener is called within that thread. You can override this default by overriding &lt;code&gt;handleNotification&lt;/code&gt; in a subclass, or by passing an Executor to the constructor.</source>
          <target state="translated">기본적으로 알림 발송 모델은 동기식입니다. 즉, 스레드가 sendNotification을 호출하면 해당 스레드 내에서 각 리스너 의 &lt;code&gt;NotificationListener.handleNotification&lt;/code&gt; 메소드가 호출됩니다. 서브 클래스에서 &lt;code&gt;handleNotification&lt;/code&gt; 을 대체 하거나 Executor를 생성자에 전달 하여이 기본값을 대체 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="b3d90f9725e8d3c6f514b963c9c9e67c904f0a37" translate="yes" xml:space="preserve">
          <source>By default, the object is</source>
          <target state="translated">기본적으로 개체는</target>
        </trans-unit>
        <trans-unit id="81a893fd2e730751fac18b1115ff6ce072a204a3" translate="yes" xml:space="preserve">
          <source>By default, the packer does not change the order of JAR elements. Also, the modification time and deflation hint of each JAR element is passed unchanged. (Any other ZIP-archive information, such as extra attributes giving Unix file permissions, are lost.)</source>
          <target state="translated">기본적으로 패커는 JAR 요소의 순서를 변경하지 않습니다. 또한 각 JAR 요소의 수정 시간 및 수축 힌트는 변경되지 않은 채 전달됩니다. (유닉스 파일 사용 권한을 부여하는 추가 속성과 같은 다른 ZIP 보관 정보는 손실됩니다.)</target>
        </trans-unit>
        <trans-unit id="e8b8d9caa0eb4682131005710da0d0cd554ca431" translate="yes" xml:space="preserve">
          <source>By default, the regular expressions &lt;code&gt;^&lt;/code&gt; and &lt;code&gt;$&lt;/code&gt; ignore line terminators and only match at the beginning and the end, respectively, of the entire input sequence. If &lt;a href=&quot;pattern#MULTILINE&quot;&gt;&lt;code&gt;MULTILINE&lt;/code&gt;&lt;/a&gt; mode is activated then &lt;code&gt;^&lt;/code&gt; matches at the beginning of input and after any line terminator except at the end of input. When in &lt;a href=&quot;pattern#MULTILINE&quot;&gt;&lt;code&gt;MULTILINE&lt;/code&gt;&lt;/a&gt; mode &lt;code&gt;$&lt;/code&gt; matches just before a line terminator or the end of the input sequence.</source>
          <target state="translated">기본적으로 정규식 &lt;code&gt;^&lt;/code&gt; 및 &lt;code&gt;$&lt;/code&gt; 는 줄 종결자를 무시하고 전체 입력 시퀀스의 시작과 끝에서만 각각 일치합니다. &lt;a href=&quot;pattern#MULTILINE&quot;&gt; &lt;code&gt;MULTILINE&lt;/code&gt; &lt;/a&gt; 모드가 활성화 된 경우 입력 시작시와 입력 끝을 제외한 모든 라인 터미네이터 후에 &lt;code&gt;^&lt;/code&gt; 가 일치합니다. 경우에 &lt;a href=&quot;pattern#MULTILINE&quot;&gt; &lt;code&gt;MULTILINE&lt;/code&gt; &lt;/a&gt; 모드 &lt;code&gt;$&lt;/code&gt; 은 단지 줄 끝 또는 입력 순서가 끝나기 전에 일치합니다.</target>
        </trans-unit>
        <trans-unit id="969c949ca22a9a75f10ee2dc67b0dc1dfadf07d1" translate="yes" xml:space="preserve">
          <source>By default, the value returned is one of those passed to the constructor and/or manipulated using the add/replace/remove methods. A subclass may override this to retrieve the value dynamically from the directory.</source>
          <target state="translated">기본적으로 리턴 된 값은 생성자에 전달되거나 add / replace / remove 메소드를 사용하여 조작 된 값 중 하나입니다. 서브 클래스는 디렉토리에서 값을 동적으로 검색하기 위해이를 대체 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b064beb56831362f5899bf74e0e30464f6351f85" translate="yes" xml:space="preserve">
          <source>By default, the values returned are those passed to the constructor and/or manipulated using the add/replace/remove methods. A subclass may override this to retrieve the values dynamically from the directory.</source>
          <target state="translated">기본적으로 리턴 된 값은 생성자에 전달되거나 add / replace / remove 메소드를 사용하여 조작 된 값입니다. 서브 클래스는 디렉토리에서 값을 동적으로 검색하기 위해이를 대체 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a3fe532732fa319b66dbf2a5f32414b371c52d9c" translate="yes" xml:space="preserve">
          <source>By default, this method attempts to move the file to the target file, failing if the target file exists except if the source and target are the &lt;a href=&quot;files#isSameFile-java.nio.file.Path-java.nio.file.Path-&quot;&gt;&lt;code&gt;same&lt;/code&gt;&lt;/a&gt; file, in which case this method has no effect. If the file is a symbolic link then the symbolic link itself, not the target of the link, is moved. This method may be invoked to move an empty directory. In some implementations a directory has entries for special files or links that are created when the directory is created. In such implementations a directory is considered empty when only the special entries exist. When invoked to move a directory that is not empty then the directory is moved if it does not require moving the entries in the directory. For example, renaming a directory on the same &lt;a href=&quot;filestore&quot;&gt;&lt;code&gt;FileStore&lt;/code&gt;&lt;/a&gt; will usually not require moving the entries in the directory. When moving a directory requires that its entries be moved then this method fails (by throwing an &lt;code&gt;IOException&lt;/code&gt;). To move a</source>
          <target state="translated">기본적으로이 메소드는 파일을 대상 파일로 이동하려고 시도하며 소스와 대상이 &lt;a href=&quot;files#isSameFile-java.nio.file.Path-java.nio.file.Path-&quot;&gt; &lt;code&gt;same&lt;/code&gt; &lt;/a&gt; 파일 인 경우를 제외하고 대상 파일이 존재하는 경우 실패합니다. 이 경우이 방법은 효과가 없습니다. 파일이 심볼릭 링크 인 경우 링크 대상이 아닌 심볼릭 링크 자체가 이동됩니다. 이 메소드는 빈 디렉토리를 이동시키기 위해 호출 될 수 있습니다. 일부 구현에서 디렉토리에는 디렉토리 작성시 작성되는 특수 파일 또는 링크에 대한 항목이 있습니다. 이러한 구현에서 특수 항목 만 존재할 경우 디렉토리는 비어있는 것으로 간주됩니다. 비어 있지 않은 디렉토리를 이동하기 위해 호출되면 디렉토리의 항목을 이동할 필요가없는 경우 디렉토리가 이동됩니다. 예를 들어, 동일한 &lt;a href=&quot;filestore&quot;&gt; &lt;code&gt;FileStore&lt;/code&gt; &lt;/a&gt; 에서 디렉토리 이름 바꾸기일반적으로 디렉토리에서 항목을 이동할 필요가 없습니다. 디렉토리를 이동할 때 항목을 이동해야하는 경우이 메소드는 실패합니다 ( &lt;code&gt;IOException&lt;/code&gt; 발생 ). 이동하려면</target>
        </trans-unit>
        <trans-unit id="c410259de22ac2b29f5639bf12152d20b70225c1" translate="yes" xml:space="preserve">
          <source>By default, this method returns &lt;code&gt;null&lt;/code&gt; if the wrapped implementation is not &lt;var&gt;this&lt;/var&gt;. Indeed, if the wrapped implementation is not this object itself, it will not be possible to recreate a wrapped implementation by calling the implementation constructors through &lt;code&gt;MBeanServer.createMBean(...)&lt;/code&gt;.</source>
          <target state="translated">랩 된 구현이 &lt;var&gt;this&lt;/var&gt; 가 아닌 경우 ,이 메소드는 디폴트로 &lt;code&gt;null&lt;/code&gt; 를 돌려 줍니다 . 실제로, 랩핑 된 구현이이 객체 자체가 아닌 경우 &lt;code&gt;MBeanServer.createMBean(...)&lt;/code&gt; 통해 구현 생성자를 호출하여 랩핑 된 구현을 다시 작성할 수 없습니다 .</target>
        </trans-unit>
        <trans-unit id="c3b224cf7206c2172a06bf23936efdbbafe645f2" translate="yes" xml:space="preserve">
          <source>By default, when a security manager is installed, in order to protect against DNS spoofing attacks, the result of positive host name resolutions are cached forever. When a security manager is not installed, the default behavior is to cache entries for a finite (implementation dependent) period of time. The result of unsuccessful host name resolution is cached for a very short period of time (10 seconds) to improve performance.</source>
          <target state="translated">기본적으로 보안 관리자가 설치되면 DNS 스푸핑 공격으로부터 보호하기 위해 호스트 이름 확인 결과가 영구적으로 캐시됩니다. 보안 관리자가 설치되지 않은 경우 기본 동작은 유한 한 (구현 종속) 기간 동안 항목을 캐시하는 것입니다. 실패한 호스트 이름 확인 결과는 성능을 향상시키기 위해 매우 짧은 시간 (10 초) 동안 캐시됩니다.</target>
        </trans-unit>
        <trans-unit id="fb71b572b27f526299d9dd2b567ec72b03d87142" translate="yes" xml:space="preserve">
          <source>By design, as you parse through a string with different formats, you can use the same &lt;code&gt;ParsePosition&lt;/code&gt;, since the index parameter records the current position.</source>
          <target state="translated">의도적으로 다른 형식의 문자열을 구문 분석 할 때 index 매개 변수가 현재 위치를 기록하므로 동일한 &lt;code&gt;ParsePosition&lt;/code&gt; 을 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="1d691c8b37aef7e963e6a00cea0dc3c23a425203" translate="yes" xml:space="preserve">
          <source>By executing a synchronized instance method of that object.</source>
          <target state="translated">해당 객체의 동기화 된 인스턴스 메소드를 실행합니다.</target>
        </trans-unit>
        <trans-unit id="e35cf134af9b728d47d4c7fc6d705b81a385f8a6" translate="yes" xml:space="preserve">
          <source>By executing an &lt;code&gt;ldc&lt;/code&gt; instruction on a &lt;code&gt;CONSTANT_MethodHandle&lt;/code&gt; constant. (See the Java Virtual Machine Specification, sections 4.4.8 and 5.4.3.)</source>
          <target state="translated">&lt;code&gt;CONSTANT_MethodHandle&lt;/code&gt; 상수 에서 &lt;code&gt;ldc&lt;/code&gt; 명령을 실행합니다 . (Java 가상 머신 사양, 섹션 4.4.8 및 5.4.3 참조)</target>
        </trans-unit>
        <trans-unit id="d6a5d0eb1c16a8c34230243b231caff6f745efc2" translate="yes" xml:space="preserve">
          <source>By executing the body of a &lt;code&gt;synchronized&lt;/code&gt; statement that synchronizes on the object.</source>
          <target state="translated">오브젝트에서 동기화 되는 &lt;code&gt;synchronized&lt;/code&gt; 명령문 의 본문을 실행 합니다.</target>
        </trans-unit>
        <trans-unit id="fc34128d07648c4393197cbdc1641aaad5bee9a6" translate="yes" xml:space="preserve">
          <source>By invoking the blocked thread's &lt;a href=&quot;../../lang/thread#interrupt--&quot;&gt;&lt;code&gt;interrupt&lt;/code&gt;&lt;/a&gt; method, in which case its interrupt status will be set and the selector's &lt;a href=&quot;selector#wakeup--&quot;&gt;&lt;code&gt;wakeup&lt;/code&gt;&lt;/a&gt; method will be invoked.</source>
          <target state="translated">차단 된 스레드의 &lt;a href=&quot;../../lang/thread#interrupt--&quot;&gt; &lt;code&gt;interrupt&lt;/code&gt; &lt;/a&gt; 메소드 를 호출하면 인터럽트 상태가 설정되고 선택기의 &lt;a href=&quot;selector#wakeup--&quot;&gt; &lt;code&gt;wakeup&lt;/code&gt; &lt;/a&gt; 메소드가 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="e0245c0e7a17f3ba7e9f2fa0481d0585e3fb19ea" translate="yes" xml:space="preserve">
          <source>By invoking the selector's &lt;a href=&quot;selector#close--&quot;&gt;&lt;code&gt;close&lt;/code&gt;&lt;/a&gt; method, or</source>
          <target state="translated">선택기의 &lt;a href=&quot;selector#close--&quot;&gt; &lt;code&gt;close&lt;/code&gt; &lt;/a&gt; 메소드 를 호출하여</target>
        </trans-unit>
        <trans-unit id="2dd213e64571508b791985f6b52b76b913db4e5f" translate="yes" xml:space="preserve">
          <source>By invoking the selector's &lt;a href=&quot;selector#wakeup--&quot;&gt;&lt;code&gt;wakeup&lt;/code&gt;&lt;/a&gt; method,</source>
          <target state="translated">선택기의 &lt;a href=&quot;selector#wakeup--&quot;&gt; &lt;code&gt;wakeup&lt;/code&gt; &lt;/a&gt; 방법 을 호출하면</target>
        </trans-unit>
        <trans-unit id="8c20a14a7d018e2a40e1043a0c6d8b7509b1e291" translate="yes" xml:space="preserve">
          <source>By making a DynamicMBean out of an MBean, this class makes it possible to select any interface implemented by the MBean as its management interface, provided that it complies with JMX patterns (i.e., attributes defined by getter/setter etc...).</source>
          <target state="translated">MBean에서 DynamicMBean을 작성함으로써이 클래스는 MMX에 의해 구현 된 인터페이스를 JMX 패턴 (예 : getter / setter에 의해 정의 된 속성 등)을 준수하는 경우 관리 인터페이스로 선택할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="548a27d7645d9294f265dee83d232a9c9e330c40" translate="yes" xml:space="preserve">
          <source>By setting the default locale with this method, all of the default locales for each Category are also set to the specified default locale.</source>
          <target state="translated">이 방법으로 기본 로캘을 설정하면 각 범주의 모든 기본 로캘도 지정된 기본 로캘로 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="b50a26dce7be016a883759a26ffad42b4a65a577" translate="yes" xml:space="preserve">
          <source>By setting the default uncaught exception handler, an application can change the way in which uncaught exceptions are handled (such as logging to a specific device, or file) for those threads that would already accept whatever &quot;default&quot; behavior the system provided.</source>
          <target state="translated">기본 catch되지 않은 예외 처리기를 설정하면 응용 프로그램은 시스템이 제공 한 &quot;기본&quot;동작을 그대로 받아들이는 스레드에 대해 catch되지 않은 예외가 처리되는 방식 (예 : 특정 장치 또는 파일에 로깅)을 변경할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a8641bc3f72be6688585df77c15c8e690037958c" translate="yes" xml:space="preserve">
          <source>By treating the creation of &lt;code&gt;ImageInputStream&lt;/code&gt;s as a pluggable service, it becomes possible to handle future input sources without changing the API. Also, high-performance implementations of &lt;code&gt;ImageInputStream&lt;/code&gt; (for example, native implementations for a particular platform) can be installed and used transparently by applications.</source>
          <target state="translated">&lt;code&gt;ImageInputStream&lt;/code&gt; 의 작성을 플러그 가능한 서비스로서 취급함으로써 , API를 변경하지 않고 향후 입력 소스를 처리 할 수있게됩니다. 또한 &lt;code&gt;ImageInputStream&lt;/code&gt; 의 고성능 구현 (예 : 특정 플랫폼의 기본 구현)을 애플리케이션에서 투명하게 설치하고 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c69f227da0d5abc2569d6a2b819e2e50dee2fc92" translate="yes" xml:space="preserve">
          <source>By treating the creation of &lt;code&gt;ImageOutputStream&lt;/code&gt;s as a pluggable service, it becomes possible to handle future output destinations without changing the API. Also, high-performance implementations of &lt;code&gt;ImageOutputStream&lt;/code&gt; (for example, native implementations for a particular platform) can be installed and used transparently by applications.</source>
          <target state="translated">&lt;code&gt;ImageOutputStream&lt;/code&gt; 의 작성을 플러그 가능한 서비스로서 취급함으로써 , API를 변경하지 않고 향후의 출력 처를 처리 할 수있게됩니다. 또한 &lt;code&gt;ImageOutputStream&lt;/code&gt; 의 고성능 구현 (예 : 특정 플랫폼의 기본 구현)을 애플리케이션에서 투명하게 설치하고 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7803ee252527503b67d1eeb0deb252622746cebd" translate="yes" xml:space="preserve">
          <source>Byte</source>
          <target state="translated">Byte</target>
        </trans-unit>
        <trans-unit id="b367bd0c58f9461bc3ca04ae9279ca9fc390edc8" translate="yes" xml:space="preserve">
          <source>Byte 1</source>
          <target state="translated">바이트 1</target>
        </trans-unit>
        <trans-unit id="5ef7e7d2f35b16349756ec159576d7454417ca95" translate="yes" xml:space="preserve">
          <source>Byte 2</source>
          <target state="translated">바이트 2</target>
        </trans-unit>
        <trans-unit id="562246479977a1f12a4320ef6dcef7d3bb1965dd" translate="yes" xml:space="preserve">
          <source>Byte 3</source>
          <target state="translated">바이트 3</target>
        </trans-unit>
        <trans-unit id="780e0ad51503653ae7fa9660d8b5b535067ef512" translate="yes" xml:space="preserve">
          <source>Byte array (&lt;code&gt;byte[]&lt;/code&gt;) -- The print data consists of the bytes in the array. The bytes are encoded in the character set specified by the doc flavor's MIME type. If the MIME type does not specify a character set, the default character set is US-ASCII.</source>
          <target state="translated">바이트 배열 ( &lt;code&gt;byte[]&lt;/code&gt; )-인쇄 데이터는 배열의 바이트로 구성됩니다. 바이트는 doc 후 레이 바의 MIME 타입으로 지정된 문자 세트로 인코딩됩니다. MIME 유형이 문자 세트를 지정하지 않으면 기본 문자 세트는 US-ASCII입니다.</target>
        </trans-unit>
        <trans-unit id="eca5dbe11f9553432ade0b5cfe135f84627aeec7" translate="yes" xml:space="preserve">
          <source>Byte buffers are distinguished in that they can be used as the sources and targets of I/O operations. They also support several features not found in the other buffer classes:</source>
          <target state="translated">바이트 버퍼는 I / O 작업의 소스 및 대상으로 사용할 수 있다는 점에서 구별됩니다. 또한 다른 버퍼 클래스에는없는 몇 가지 기능을 지원합니다.</target>
        </trans-unit>
        <trans-unit id="e5e30ac7c4b3daf329b4b0acb4e13e1431c8cae7" translate="yes" xml:space="preserve">
          <source>Byte buffers can be created either by &lt;a href=&quot;bytebuffer#allocate-int-&quot;&gt;&lt;code&gt;&lt;i&gt;allocation&lt;/i&gt;&lt;/code&gt;&lt;/a&gt;, which allocates space for the buffer's content, or by &lt;a href=&quot;bytebuffer#wrap-byte:A-&quot;&gt;&lt;code&gt;&lt;i&gt;wrapping&lt;/i&gt;&lt;/code&gt;&lt;/a&gt; an existing byte array into a buffer.</source>
          <target state="translated">바이트 버퍼는 하나가 생성 될 수있다 &lt;a href=&quot;bytebuffer#allocate-int-&quot;&gt; &lt;code&gt;&lt;i&gt;allocation&lt;/i&gt;&lt;/code&gt; &lt;/a&gt; 버퍼의 컨텐츠에 용량을 할당하거나함으로써, &lt;a href=&quot;bytebuffer#wrap-byte:A-&quot;&gt; &lt;code&gt;&lt;i&gt;wrapping&lt;/i&gt;&lt;/code&gt; &lt;/a&gt; 버퍼에 존재하는 바이트 배열.</target>
        </trans-unit>
        <trans-unit id="dfc8d216efb18ee738a51c7b1c72d9d5a694c396" translate="yes" xml:space="preserve">
          <source>Byte stream (&lt;a href=&quot;../../java/io/inputstream&quot;&gt;&lt;code&gt;java.io.InputStream&lt;/code&gt;&lt;/a&gt;) -- The print data consists of the bytes read from the stream up to the end-of-stream. The bytes are encoded in the character set specified by the doc flavor's MIME type. If the MIME type does not specify a character set, the default character set is US-ASCII.</source>
          <target state="translated">바이트 스트림 ( &lt;a href=&quot;../../java/io/inputstream&quot;&gt; &lt;code&gt;java.io.InputStream&lt;/code&gt; &lt;/a&gt; )-인쇄 데이터는 스트림에서 스트림 끝까지 읽은 바이트로 구성됩니다. 바이트는 doc 후 레이 바의 MIME 타입으로 지정된 문자 세트로 인코딩됩니다. MIME 유형이 문자 세트를 지정하지 않으면 기본 문자 세트는 US-ASCII입니다.</target>
        </trans-unit>
        <trans-unit id="35d65db6153fb003c0ec5a7e5f97e84b8b6540da" translate="yes" xml:space="preserve">
          <source>Byte.byteValue()</source>
          <target state="translated">Byte.byteValue()</target>
        </trans-unit>
        <trans-unit id="765687760412e23d3af9319bad64ac2276b8e71c" translate="yes" xml:space="preserve">
          <source>Byte.compare()</source>
          <target state="translated">Byte.compare()</target>
        </trans-unit>
        <trans-unit id="7025582b3066336f81a1e40b90d0873f5282fead" translate="yes" xml:space="preserve">
          <source>Byte.compareTo()</source>
          <target state="translated">Byte.compareTo()</target>
        </trans-unit>
        <trans-unit id="fab6974036d23257c5e9bcb32e003fc373980b27" translate="yes" xml:space="preserve">
          <source>Byte.decode()</source>
          <target state="translated">Byte.decode()</target>
        </trans-unit>
        <trans-unit id="860a9070ab3c744435daa9c33436c7c066c2d9da" translate="yes" xml:space="preserve">
          <source>Byte.doubleValue()</source>
          <target state="translated">Byte.doubleValue()</target>
        </trans-unit>
        <trans-unit id="f14ed1810a01497149324efe586fb2cb3637d046" translate="yes" xml:space="preserve">
          <source>Byte.equals()</source>
          <target state="translated">Byte.equals()</target>
        </trans-unit>
        <trans-unit id="df9effa0eb76c2b0a6e18ec16d3468b62a2f6997" translate="yes" xml:space="preserve">
          <source>Byte.floatValue()</source>
          <target state="translated">Byte.floatValue()</target>
        </trans-unit>
        <trans-unit id="5ece7ca0ef423b0508c79d4586aafe8387056882" translate="yes" xml:space="preserve">
          <source>Byte.hashCode()</source>
          <target state="translated">Byte.hashCode()</target>
        </trans-unit>
        <trans-unit id="194b6050858b47520fb9d058a2d6f15e43e9b7cb" translate="yes" xml:space="preserve">
          <source>Byte.intValue()</source>
          <target state="translated">Byte.intValue()</target>
        </trans-unit>
        <trans-unit id="81b8aeaa5dcaa7edd4476485a4dc6320f4931588" translate="yes" xml:space="preserve">
          <source>Byte.longValue()</source>
          <target state="translated">Byte.longValue()</target>
        </trans-unit>
        <trans-unit id="79b360b9b8bc15c7a4e8d11f377a74ec12def61e" translate="yes" xml:space="preserve">
          <source>Byte.parseByte()</source>
          <target state="translated">Byte.parseByte()</target>
        </trans-unit>
        <trans-unit id="d7d1a2f86ff345544c8ff38bffb880131a33307f" translate="yes" xml:space="preserve">
          <source>Byte.shortValue()</source>
          <target state="translated">Byte.shortValue()</target>
        </trans-unit>
        <trans-unit id="2f4aa72bfff65ba84c99baea63065064b724c749" translate="yes" xml:space="preserve">
          <source>Byte.toString()</source>
          <target state="translated">Byte.toString()</target>
        </trans-unit>
        <trans-unit id="aeef7ee8791d34605aa5dc77687c529cb46f9ca7" translate="yes" xml:space="preserve">
          <source>Byte.toUnsignedInt()</source>
          <target state="translated">Byte.toUnsignedInt()</target>
        </trans-unit>
        <trans-unit id="20fa3fa0a7f69cd59ecb8fde5e9598cfd4366ec0" translate="yes" xml:space="preserve">
          <source>Byte.toUnsignedLong()</source>
          <target state="translated">Byte.toUnsignedLong()</target>
        </trans-unit>
        <trans-unit id="75aacac1f046964ea2b15cad7aff7f552935bcbe" translate="yes" xml:space="preserve">
          <source>Byte.valueOf()</source>
          <target state="translated">Byte.valueOf()</target>
        </trans-unit>
        <trans-unit id="4ab0eda7e81f66c18da5e36914bdbd3f194b3d34" translate="yes" xml:space="preserve">
          <source>ByteArrayInputStream</source>
          <target state="translated">ByteArrayInputStream</target>
        </trans-unit>
        <trans-unit id="4fe5085ec423c6d0e2f590cc989cc831c8bb3907" translate="yes" xml:space="preserve">
          <source>ByteArrayInputStream.available()</source>
          <target state="translated">ByteArrayInputStream.available()</target>
        </trans-unit>
        <trans-unit id="c50e1a0898ac06b34123fcefe243e8d827b11be0" translate="yes" xml:space="preserve">
          <source>ByteArrayInputStream.close()</source>
          <target state="translated">ByteArrayInputStream.close()</target>
        </trans-unit>
        <trans-unit id="22116c48f65a0054592dfdececbf2fbbb273d841" translate="yes" xml:space="preserve">
          <source>ByteArrayInputStream.mark()</source>
          <target state="translated">ByteArrayInputStream.mark()</target>
        </trans-unit>
        <trans-unit id="2001d6fb9b207c54ba2c79f70fe86420e9bd5445" translate="yes" xml:space="preserve">
          <source>ByteArrayInputStream.markSupported()</source>
          <target state="translated">ByteArrayInputStream.markSupported()</target>
        </trans-unit>
        <trans-unit id="68f43a9a604cb9026dffa8aabe8f62fc94482272" translate="yes" xml:space="preserve">
          <source>ByteArrayInputStream.read()</source>
          <target state="translated">ByteArrayInputStream.read()</target>
        </trans-unit>
        <trans-unit id="b584d5525926e4ea8b2bc2e12e9181c2381adae6" translate="yes" xml:space="preserve">
          <source>ByteArrayInputStream.reset()</source>
          <target state="translated">ByteArrayInputStream.reset()</target>
        </trans-unit>
        <trans-unit id="19ba32696806f759c9c2f80b9cb374e49b9a6d1b" translate="yes" xml:space="preserve">
          <source>ByteArrayInputStream.skip()</source>
          <target state="translated">ByteArrayInputStream.skip()</target>
        </trans-unit>
        <trans-unit id="0a0d724833c8ea3f75c148b3324ae166676dfff7" translate="yes" xml:space="preserve">
          <source>ByteArrayOutputStream</source>
          <target state="translated">ByteArrayOutputStream</target>
        </trans-unit>
        <trans-unit id="20fbfb900b7d4bf233732c28f7f6ce51381e6f25" translate="yes" xml:space="preserve">
          <source>ByteArrayOutputStream.close()</source>
          <target state="translated">ByteArrayOutputStream.close()</target>
        </trans-unit>
        <trans-unit id="d69b9b8edd3d3d0a66cf46130706fdaa73240e15" translate="yes" xml:space="preserve">
          <source>ByteArrayOutputStream.reset()</source>
          <target state="translated">ByteArrayOutputStream.reset()</target>
        </trans-unit>
        <trans-unit id="b5a97c9cebd94e800f51be133ab5edf656c826be" translate="yes" xml:space="preserve">
          <source>ByteArrayOutputStream.size()</source>
          <target state="translated">ByteArrayOutputStream.size()</target>
        </trans-unit>
        <trans-unit id="1e099aa20dd60b91a4fb298871cc9a53acfb68b4" translate="yes" xml:space="preserve">
          <source>ByteArrayOutputStream.toByteArray()</source>
          <target state="translated">ByteArrayOutputStream.toByteArray()</target>
        </trans-unit>
        <trans-unit id="146eb06bf292e54042fae3b770684aeaff74137e" translate="yes" xml:space="preserve">
          <source>ByteArrayOutputStream.toString()</source>
          <target state="translated">ByteArrayOutputStream.toString()</target>
        </trans-unit>
        <trans-unit id="907d3ffaebe3887e93c1b5eb84ed1160c6a85dec" translate="yes" xml:space="preserve">
          <source>ByteArrayOutputStream.write()</source>
          <target state="translated">ByteArrayOutputStream.write()</target>
        </trans-unit>
        <trans-unit id="bb7b4a24166c989c7929a9640abc99970f6001d8" translate="yes" xml:space="preserve">
          <source>ByteArrayOutputStream.writeTo()</source>
          <target state="translated">ByteArrayOutputStream.writeTo()</target>
        </trans-unit>
        <trans-unit id="066fd088210cf40bab9e0d026adfc85698fe0255" translate="yes" xml:space="preserve">
          <source>ByteBuffer</source>
          <target state="translated">ByteBuffer</target>
        </trans-unit>
        <trans-unit id="592d2094283c8a2104231747877c98b9c08f5f7b" translate="yes" xml:space="preserve">
          <source>ByteBuffer.allocate()</source>
          <target state="translated">ByteBuffer.allocate()</target>
        </trans-unit>
        <trans-unit id="1176eb8c79f5e049de7db3e4cbb6574d0d8ae291" translate="yes" xml:space="preserve">
          <source>ByteBuffer.allocateDirect()</source>
          <target state="translated">ByteBuffer.allocateDirect()</target>
        </trans-unit>
        <trans-unit id="3e7ef7bf0adcd5013d42e4fccc25bac39ce3cd8c" translate="yes" xml:space="preserve">
          <source>ByteBuffer.array()</source>
          <target state="translated">ByteBuffer.array()</target>
        </trans-unit>
        <trans-unit id="1a72c252514aac3400fd8d1774c19309f3924d59" translate="yes" xml:space="preserve">
          <source>ByteBuffer.arrayOffset()</source>
          <target state="translated">ByteBuffer.arrayOffset()</target>
        </trans-unit>
        <trans-unit id="c4403eee91e285445bc5857e85f8ee710d226cc2" translate="yes" xml:space="preserve">
          <source>ByteBuffer.asCharBuffer()</source>
          <target state="translated">ByteBuffer.asCharBuffer()</target>
        </trans-unit>
        <trans-unit id="49d71918b373695b37be2285addbc49e7cefabf8" translate="yes" xml:space="preserve">
          <source>ByteBuffer.asDoubleBuffer()</source>
          <target state="translated">ByteBuffer.asDoubleBuffer()</target>
        </trans-unit>
        <trans-unit id="6bf3960bb1a9fe636d4c7886b3334f5daeec6cd2" translate="yes" xml:space="preserve">
          <source>ByteBuffer.asFloatBuffer()</source>
          <target state="translated">ByteBuffer.asFloatBuffer()</target>
        </trans-unit>
        <trans-unit id="666b73c18717a1f4edf9134e09628f4a42b7ade2" translate="yes" xml:space="preserve">
          <source>ByteBuffer.asIntBuffer()</source>
          <target state="translated">ByteBuffer.asIntBuffer()</target>
        </trans-unit>
        <trans-unit id="9e94a831a3dd208097108735acaac5f8f61a7408" translate="yes" xml:space="preserve">
          <source>ByteBuffer.asLongBuffer()</source>
          <target state="translated">ByteBuffer.asLongBuffer()</target>
        </trans-unit>
        <trans-unit id="e4d2d199e8ec7a9a7d6e7cf4716d82db81e60a3b" translate="yes" xml:space="preserve">
          <source>ByteBuffer.asReadOnlyBuffer()</source>
          <target state="translated">ByteBuffer.asReadOnlyBuffer()</target>
        </trans-unit>
        <trans-unit id="1ad5cfd9a0cacd5c8a60cdbf5b2cca86a6fead65" translate="yes" xml:space="preserve">
          <source>ByteBuffer.asShortBuffer()</source>
          <target state="translated">ByteBuffer.asShortBuffer()</target>
        </trans-unit>
        <trans-unit id="b73e27392eeda3ec8349a615f3fb9767c003ed6c" translate="yes" xml:space="preserve">
          <source>ByteBuffer.compact()</source>
          <target state="translated">ByteBuffer.compact()</target>
        </trans-unit>
        <trans-unit id="3fcb36336b96823b83564f5997a4d352dc139685" translate="yes" xml:space="preserve">
          <source>ByteBuffer.compareTo()</source>
          <target state="translated">ByteBuffer.compareTo()</target>
        </trans-unit>
        <trans-unit id="c84545045be64f231afa86323bfdda6ad39de556" translate="yes" xml:space="preserve">
          <source>ByteBuffer.duplicate()</source>
          <target state="translated">ByteBuffer.duplicate()</target>
        </trans-unit>
        <trans-unit id="e0a583c5957121cd1c3d3c1464a1c70cd8cda57c" translate="yes" xml:space="preserve">
          <source>ByteBuffer.equals()</source>
          <target state="translated">ByteBuffer.equals()</target>
        </trans-unit>
        <trans-unit id="ab66ee30f64a050418e93fcd35beccc9e7c0145f" translate="yes" xml:space="preserve">
          <source>ByteBuffer.get()</source>
          <target state="translated">ByteBuffer.get()</target>
        </trans-unit>
        <trans-unit id="d2579c96f0f8b2941a34c212a7268319170122b0" translate="yes" xml:space="preserve">
          <source>ByteBuffer.getChar()</source>
          <target state="translated">ByteBuffer.getChar()</target>
        </trans-unit>
        <trans-unit id="f081040a71e94a606aea038d999920f0561383d0" translate="yes" xml:space="preserve">
          <source>ByteBuffer.getDouble()</source>
          <target state="translated">ByteBuffer.getDouble()</target>
        </trans-unit>
        <trans-unit id="4d5bcf981f1eedc13b3f70af63e1280960c0c4ac" translate="yes" xml:space="preserve">
          <source>ByteBuffer.getFloat()</source>
          <target state="translated">ByteBuffer.getFloat()</target>
        </trans-unit>
        <trans-unit id="47b8004befae64d77aaa577f8fc5247fec4de404" translate="yes" xml:space="preserve">
          <source>ByteBuffer.getInt()</source>
          <target state="translated">ByteBuffer.getInt()</target>
        </trans-unit>
        <trans-unit id="dfef190f746cd639fefa3469ca3bb8a8db687143" translate="yes" xml:space="preserve">
          <source>ByteBuffer.getLong()</source>
          <target state="translated">ByteBuffer.getLong()</target>
        </trans-unit>
        <trans-unit id="cf14ca600b39c2ed38c332d321a9c3e92bd84467" translate="yes" xml:space="preserve">
          <source>ByteBuffer.getShort()</source>
          <target state="translated">ByteBuffer.getShort()</target>
        </trans-unit>
        <trans-unit id="ee0cc56290282813c83f1bb9c566a9ff1eca767b" translate="yes" xml:space="preserve">
          <source>ByteBuffer.hasArray()</source>
          <target state="translated">ByteBuffer.hasArray()</target>
        </trans-unit>
        <trans-unit id="ed19c51a365a270bbefe28242193539764677852" translate="yes" xml:space="preserve">
          <source>ByteBuffer.hashCode()</source>
          <target state="translated">ByteBuffer.hashCode()</target>
        </trans-unit>
        <trans-unit id="20218c224f86e60ee9eeb9e6e1b546ac6adcc9e6" translate="yes" xml:space="preserve">
          <source>ByteBuffer.isDirect()</source>
          <target state="translated">ByteBuffer.isDirect()</target>
        </trans-unit>
        <trans-unit id="e8846d23612b9f273b40201c34fcb0c0a12ba5d7" translate="yes" xml:space="preserve">
          <source>ByteBuffer.order()</source>
          <target state="translated">ByteBuffer.order()</target>
        </trans-unit>
        <trans-unit id="48b5b731fb344fec7f0a1a301b6b08f62957b823" translate="yes" xml:space="preserve">
          <source>ByteBuffer.put()</source>
          <target state="translated">ByteBuffer.put()</target>
        </trans-unit>
        <trans-unit id="0505cff9c9eac96942dfe5dcf41be201308bc304" translate="yes" xml:space="preserve">
          <source>ByteBuffer.putChar()</source>
          <target state="translated">ByteBuffer.putChar()</target>
        </trans-unit>
        <trans-unit id="5929c3b682d9e3c9b993510bc4be40c120f1c032" translate="yes" xml:space="preserve">
          <source>ByteBuffer.putDouble()</source>
          <target state="translated">ByteBuffer.putDouble()</target>
        </trans-unit>
        <trans-unit id="0f5c684bfe8f55f8d3e9423340275a6210a363df" translate="yes" xml:space="preserve">
          <source>ByteBuffer.putFloat()</source>
          <target state="translated">ByteBuffer.putFloat()</target>
        </trans-unit>
        <trans-unit id="659772759b765006a7114c377eb8de7c45ed5e02" translate="yes" xml:space="preserve">
          <source>ByteBuffer.putInt()</source>
          <target state="translated">ByteBuffer.putInt()</target>
        </trans-unit>
        <trans-unit id="a44f0950bbb09699d499f710092a988bb8b094d4" translate="yes" xml:space="preserve">
          <source>ByteBuffer.putLong()</source>
          <target state="translated">ByteBuffer.putLong()</target>
        </trans-unit>
        <trans-unit id="2a569a4377a1b93f56ed8ab933cbb4e2e1493fa0" translate="yes" xml:space="preserve">
          <source>ByteBuffer.putShort()</source>
          <target state="translated">ByteBuffer.putShort()</target>
        </trans-unit>
        <trans-unit id="925de9609fe4a4fe584d7ed2eede99222328ed64" translate="yes" xml:space="preserve">
          <source>ByteBuffer.slice()</source>
          <target state="translated">ByteBuffer.slice()</target>
        </trans-unit>
        <trans-unit id="d8b39d795e407b72ac024dcb50e89ec8c034606f" translate="yes" xml:space="preserve">
          <source>ByteBuffer.toString()</source>
          <target state="translated">ByteBuffer.toString()</target>
        </trans-unit>
        <trans-unit id="aae96e677f9ff06168b07a036ee5a28a8bb878e4" translate="yes" xml:space="preserve">
          <source>ByteBuffer.wrap()</source>
          <target state="translated">ByteBuffer.wrap()</target>
        </trans-unit>
        <trans-unit id="684de3307764adb385fc1e92db8147583bdd0135" translate="yes" xml:space="preserve">
          <source>ByteChannel</source>
          <target state="translated">ByteChannel</target>
        </trans-unit>
        <trans-unit id="8a45cdc61d443f1d99e6a8e08a1a5cac63e13810" translate="yes" xml:space="preserve">
          <source>ByteOrder</source>
          <target state="translated">ByteOrder</target>
        </trans-unit>
        <trans-unit id="b7ebd711a385cf71ce1caf7350af8dfa1ea2f124" translate="yes" xml:space="preserve">
          <source>ByteOrder.nativeOrder()</source>
          <target state="translated">ByteOrder.nativeOrder()</target>
        </trans-unit>
        <trans-unit id="0061ca092d69381255b213746f079192877fec28" translate="yes" xml:space="preserve">
          <source>ByteOrder.toString()</source>
          <target state="translated">ByteOrder.toString()</target>
        </trans-unit>
        <trans-unit id="18862cb8630ec1df4fc072c3f7f7847808094ad7" translate="yes" xml:space="preserve">
          <source>Bytecode generators, including the compiler back end, are required to emit untransformed symbolic type descriptors for these methods. Tools which determine symbolic linkage are required to accept such untransformed descriptors, without reporting linkage errors.</source>
          <target state="translated">컴파일러 백엔드를 포함한 바이트 코드 생성기는 이러한 메소드에 대해 변환되지 않은 기호 유형 설명자를 생성해야합니다. 심볼릭 링크를 결정하는 도구는 변환 오류를보고하지 않고 변환되지 않은 이러한 설명자를 허용해야합니다.</target>
        </trans-unit>
        <trans-unit id="5fd1483edab08a4a8d6b6422b4ae191bca333d84" translate="yes" xml:space="preserve">
          <source>Bytes are read starting at this channel's current file position, and then the file position is updated with the number of bytes actually read. Otherwise this method behaves exactly as specified in the &lt;a href=&quot;readablebytechannel&quot;&gt;&lt;code&gt;ReadableByteChannel&lt;/code&gt;&lt;/a&gt; interface.</source>
          <target state="translated">이 채널의 현재 파일 위치에서 시작하여 바이트를 읽은 다음 파일 위치는 실제로 읽은 바이트 수로 업데이트됩니다. 그렇지 않으면이 메소드는 &lt;a href=&quot;readablebytechannel&quot;&gt; &lt;code&gt;ReadableByteChannel&lt;/code&gt; &lt;/a&gt; 인터페이스에 지정된대로 정확하게 작동합니다 .</target>
        </trans-unit>
        <trans-unit id="7c22cb48108a90172ea1f9755573429b689b563f" translate="yes" xml:space="preserve">
          <source>Bytes are read starting at this channel's current file position, and then the file position is updated with the number of bytes actually read. Otherwise this method behaves exactly as specified in the &lt;a href=&quot;scatteringbytechannel&quot;&gt;&lt;code&gt;ScatteringByteChannel&lt;/code&gt;&lt;/a&gt; interface.</source>
          <target state="translated">이 채널의 현재 파일 위치에서 시작하여 바이트를 읽은 다음 파일 위치는 실제로 읽은 바이트 수로 업데이트됩니다. 그렇지 않으면이 메소드는 &lt;a href=&quot;scatteringbytechannel&quot;&gt; &lt;code&gt;ScatteringByteChannel&lt;/code&gt; &lt;/a&gt; 인터페이스에 지정된대로 정확하게 작동합니다 .</target>
        </trans-unit>
        <trans-unit id="7482a5b7bb56b073411149804c7e1e5cae042f1c" translate="yes" xml:space="preserve">
          <source>Bytes are read starting at this channel's current position, and then the position is updated with the number of bytes actually read. Otherwise this method behaves exactly as specified in the &lt;a href=&quot;readablebytechannel&quot;&gt;&lt;code&gt;ReadableByteChannel&lt;/code&gt;&lt;/a&gt; interface.</source>
          <target state="translated">이 채널의 현재 위치에서 시작하여 바이트를 읽은 다음 실제로 읽은 바이트 수로 위치가 업데이트됩니다. 그렇지 않으면이 메소드는 &lt;a href=&quot;readablebytechannel&quot;&gt; &lt;code&gt;ReadableByteChannel&lt;/code&gt; &lt;/a&gt; 인터페이스에 지정된대로 정확하게 작동합니다 .</target>
        </trans-unit>
        <trans-unit id="d99b90c47425229f8bbb84f86216f260c30c07b5" translate="yes" xml:space="preserve">
          <source>Bytes are written starting at this channel's current file position unless the channel is in append mode, in which case the position is first advanced to the end of the file. The file is grown, if necessary, to accommodate the written bytes, and then the file position is updated with the number of bytes actually written. Otherwise this method behaves exactly as specified by the &lt;a href=&quot;writablebytechannel&quot;&gt;&lt;code&gt;WritableByteChannel&lt;/code&gt;&lt;/a&gt; interface.</source>
          <target state="translated">채널이 추가 모드에 있지 않으면이 채널의 현재 파일 위치에서 시작하여 바이트가 기록됩니다.이 경우 위치는 파일의 끝으로 먼저 이동합니다. 필요한 경우 기록 된 바이트를 수용하기 위해 파일이 확장 된 다음 파일 위치가 실제로 기록 된 바이트 수로 업데이트됩니다. 그렇지 않으면이 메소드는 &lt;a href=&quot;writablebytechannel&quot;&gt; &lt;code&gt;WritableByteChannel&lt;/code&gt; &lt;/a&gt; 인터페이스에 지정된대로 정확하게 작동합니다 .</target>
        </trans-unit>
        <trans-unit id="d49cfad8b11fd66360d02e456be33ea5a81bedb4" translate="yes" xml:space="preserve">
          <source>Bytes are written starting at this channel's current file position unless the channel is in append mode, in which case the position is first advanced to the end of the file. The file is grown, if necessary, to accommodate the written bytes, and then the file position is updated with the number of bytes actually written. Otherwise this method behaves exactly as specified in the &lt;a href=&quot;gatheringbytechannel&quot;&gt;&lt;code&gt;GatheringByteChannel&lt;/code&gt;&lt;/a&gt; interface.</source>
          <target state="translated">채널이 추가 모드에 있지 않으면이 채널의 현재 파일 위치에서 시작하여 바이트가 기록됩니다.이 경우 위치는 파일의 끝으로 먼저 이동합니다. 필요한 경우 기록 된 바이트를 수용하기 위해 파일이 확장 된 다음 파일 위치가 실제로 기록 된 바이트 수로 업데이트됩니다. 그렇지 않으면이 메소드는 &lt;a href=&quot;gatheringbytechannel&quot;&gt; &lt;code&gt;GatheringByteChannel&lt;/code&gt; &lt;/a&gt; 인터페이스에 지정된대로 정확하게 작동합니다 .</target>
        </trans-unit>
        <trans-unit id="f161521aff0978f84ec756f3ae58c76dbd822dbe" translate="yes" xml:space="preserve">
          <source>Bytes are written starting at this channel's current position, unless the channel is connected to an entity such as a file that is opened with the &lt;a href=&quot;../file/standardopenoption#APPEND&quot;&gt;&lt;code&gt;APPEND&lt;/code&gt;&lt;/a&gt; option, in which case the position is first advanced to the end. The entity to which the channel is connected is grown, if necessary, to accommodate the written bytes, and then the position is updated with the number of bytes actually written. Otherwise this method behaves exactly as specified by the &lt;a href=&quot;writablebytechannel&quot;&gt;&lt;code&gt;WritableByteChannel&lt;/code&gt;&lt;/a&gt; interface.</source>
          <target state="translated">채널이 &lt;a href=&quot;../file/standardopenoption#APPEND&quot;&gt; &lt;code&gt;APPEND&lt;/code&gt; &lt;/a&gt; 옵션으로 열린 파일과 같은 엔티티에 연결되어 있지 않으면이 채널의 현재 위치에서 시작하여 바이트가 기록됩니다.이 경우 위치는 처음으로 끝까지 이동합니다. 채널이 연결된 엔터티는 필요한 경우 기록 된 바이트를 수용하도록 확장 된 다음 위치는 실제로 기록 된 바이트 수로 업데이트됩니다. 그렇지 않으면이 메소드는 &lt;a href=&quot;writablebytechannel&quot;&gt; &lt;code&gt;WritableByteChannel&lt;/code&gt; &lt;/a&gt; 인터페이스에 지정된대로 정확하게 작동합니다 .</target>
        </trans-unit>
        <trans-unit id="894f12201bda7fac0ae6fd06ea83090bda6d87ce" translate="yes" xml:space="preserve">
          <source>Bytes can be transferred from a file &lt;a href=&quot;filechannel#transferTo-long-long-java.nio.channels.WritableByteChannel-&quot;&gt;&lt;code&gt;&lt;i&gt;to
   some other channel&lt;/i&gt;&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;filechannel#transferFrom-java.nio.channels.ReadableByteChannel-long-long-&quot;&gt;&lt;code&gt;&lt;i&gt;vice
   versa&lt;/i&gt;&lt;/code&gt;&lt;/a&gt;, in a way that can be optimized by many operating systems into a very fast transfer directly to or from the filesystem cache.</source>
          <target state="translated">바이트는 많은 운영 체제에서 파일 시스템 캐시로 직접 또는 파일 시스템 캐시에서 매우 빠른 전송으로 최적화 할 수있는 방식으로 파일 &lt;a href=&quot;filechannel#transferTo-long-long-java.nio.channels.WritableByteChannel-&quot;&gt; &lt;code&gt;&lt;i&gt;to some other channel&lt;/i&gt;&lt;/code&gt; &lt;/a&gt; 로 또는 &lt;a href=&quot;filechannel#transferFrom-java.nio.channels.ReadableByteChannel-long-long-&quot;&gt; &lt;code&gt;&lt;i&gt;vice versa&lt;/i&gt;&lt;/code&gt; &lt;/a&gt; 전송할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b70eb265097df5e93cbb6d554d3c69930d9226be" translate="yes" xml:space="preserve">
          <source>Bytes for this operation are read from the contained input stream.</source>
          <target state="translated">이 작업에 대한 바이트는 포함 된 입력 스트림에서 읽습니다.</target>
        </trans-unit>
        <trans-unit id="b88ba13bce6a6035121fb298aa2e24eb9af5ebac" translate="yes" xml:space="preserve">
          <source>Bytes from the file are decoded into characters using the specified charset and the same line terminators as specified by &lt;code&gt;readAllLines&lt;/code&gt; are supported.</source>
          <target state="translated">파일의 바이트는 지정된 문자 세트를 사용하여 문자로 디코딩되며 &lt;code&gt;readAllLines&lt;/code&gt; 에 지정된 것과 동일한 줄 종결 자가 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="55d85802790807944352e0bb71a0594bb080afb1" translate="yes" xml:space="preserve">
          <source>Bytes may be &lt;a href=&quot;filechannel#read-java.nio.ByteBuffer-long-&quot;&gt;&lt;code&gt;read&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;filechannel#write-java.nio.ByteBuffer-long-&quot;&gt;&lt;code&gt;&lt;i&gt;written&lt;/i&gt;&lt;/code&gt;&lt;/a&gt; at an absolute position in a file in a way that does not affect the channel's current position.</source>
          <target state="translated">바이트는 채널의 현재 위치에 영향을 미치지 않는 방식으로 파일의 절대 위치에서 &lt;a href=&quot;filechannel#read-java.nio.ByteBuffer-long-&quot;&gt; &lt;code&gt;read&lt;/code&gt; &lt;/a&gt; 거나 &lt;a href=&quot;filechannel#write-java.nio.ByteBuffer-long-&quot;&gt; &lt;code&gt;&lt;i&gt;written&lt;/i&gt;&lt;/code&gt; &lt;/a&gt; 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="32096c2e0eff33d844ee6d675407ace18289357d" translate="yes" xml:space="preserve">
          <source>C</source>
          <target state="translated">C</target>
        </trans-unit>
        <trans-unit id="b52c66a39c2dcd87acc3f562288afe40940ed216" translate="yes" xml:space="preserve">
          <source>C is searched for a</source>
          <target state="translated">C는</target>
        </trans-unit>
        <trans-unit id="55db48a1c2eaa352054c2e180d0428783f813201" translate="yes" xml:space="preserve">
          <source>C size .</source>
          <target state="translated">C 사이즈.</target>
        </trans-unit>
        <trans-unit id="3b9248ce75e6a9c58914137034a1b9396e54fb68" translate="yes" xml:space="preserve">
          <source>C-style and C++-style comments are not recognized.</source>
          <target state="translated">C 스타일 및 C ++ 스타일 주석은 인식되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="0371438f82b01efb31e37cd12a4a6b6c819b0e71" translate="yes" xml:space="preserve">
          <source>C3</source>
          <target state="translated">C3</target>
        </trans-unit>
        <trans-unit id="aaa025b3826509827b773a79dde61238b7846c09" translate="yes" xml:space="preserve">
          <source>C4</source>
          <target state="translated">C4</target>
        </trans-unit>
        <trans-unit id="fbeff7287bb8d46577504b6c72d5ba3e5ac86548" translate="yes" xml:space="preserve">
          <source>C5</source>
          <target state="translated">C5</target>
        </trans-unit>
        <trans-unit id="742fbe7716cc1fdef3e9a8d5c58b0d693991744f" translate="yes" xml:space="preserve">
          <source>C6</source>
          <target state="translated">C6</target>
        </trans-unit>
        <trans-unit id="de30744df5a20a8c74f4a30166a00d3504659eb2" translate="yes" xml:space="preserve">
          <source>CANADA</source>
          <target state="translated">CANADA</target>
        </trans-unit>
        <trans-unit id="405a5cf281ff89b9431a40683692afdc5141f25b" translate="yes" xml:space="preserve">
          <source>CANADA_FRENCH</source>
          <target state="translated">CANADA_FRENCH</target>
        </trans-unit>
        <trans-unit id="77a0ae12afcf14565201ae75ed086a7f24d3589e" translate="yes" xml:space="preserve">
          <source>CANADIAN_ABORIGINAL</source>
          <target state="translated">CANADIAN_ABORIGINAL</target>
        </trans-unit>
        <trans-unit id="1507c40f043249fe6b5e25ba0cc97010cefa6d12" translate="yes" xml:space="preserve">
          <source>CANCEL</source>
          <target state="translated">CANCEL</target>
        </trans-unit>
        <trans-unit id="9e0797c3a666de4304d0cc30c2dfde314953f49d" translate="yes" xml:space="preserve">
          <source>CANCEL option.</source>
          <target state="translated">취소 옵션.</target>
        </trans-unit>
        <trans-unit id="30b6a2afeb9cba7b3efa34a31376744b55640535" translate="yes" xml:space="preserve">
          <source>CANCELED</source>
          <target state="translated">CANCELED</target>
        </trans-unit>
        <trans-unit id="d9938cb5e6af4445e34cb7de7aaa7c36ced2b056" translate="yes" xml:space="preserve">
          <source>CANONICAL</source>
          <target state="translated">CANONICAL</target>
        </trans-unit>
        <trans-unit id="c2c9bd65720f7996dae0030b203f2cb301d57ba6" translate="yes" xml:space="preserve">
          <source>CANONICAL_DECOMPOSITION</source>
          <target state="translated">CANONICAL_DECOMPOSITION</target>
        </trans-unit>
        <trans-unit id="50c7da8a937f84c2d7d3ad818f8998dadab44494" translate="yes" xml:space="preserve">
          <source>CANONICAL_DECOMPOSITION corresponds to Normalization Form D as described in &lt;a href=&quot;http://www.unicode.org/unicode/reports/tr15/tr15-23.html&quot;&gt;Unicode Technical Report #15&lt;/a&gt;.</source>
          <target state="translated">CANONICAL_DECOMPOSITION은 &lt;a href=&quot;http://www.unicode.org/unicode/reports/tr15/tr15-23.html&quot;&gt;Unicode Technical Report # 15에&lt;/a&gt; 설명 된 정규화 형식 D에 해당합니다 .</target>
        </trans-unit>
        <trans-unit id="5cdc6fa477463d5f2868f0830b1453a306f2fa9f" translate="yes" xml:space="preserve">
          <source>CANON_EQ</source>
          <target state="translated">CANON_EQ</target>
        </trans-unit>
        <trans-unit id="c322d8102091055b636aa85610f0bf11ac66f79b" translate="yes" xml:space="preserve">
          <source>CARIAN</source>
          <target state="translated">CARIAN</target>
        </trans-unit>
        <trans-unit id="10e789ffd9f830f91d28d54a15a2ea88b12a4bcb" translate="yes" xml:space="preserve">
          <source>CASE_INSENSITIVE</source>
          <target state="translated">CASE_INSENSITIVE</target>
        </trans-unit>
        <trans-unit id="05dff59689b060e392059bcb723a36e923fd7076" translate="yes" xml:space="preserve">
          <source>CASE_INSENSITIVE_ORDER</source>
          <target state="translated">CASE_INSENSITIVE_ORDER</target>
        </trans-unit>
        <trans-unit id="9a0adec3a0ec4477af85d5058520a6b061d9d716" translate="yes" xml:space="preserve">
          <source>CAT - Africa/Harare</source>
          <target state="translated">고양이-아프리카 /해라</target>
        </trans-unit>
        <trans-unit id="7293ca090f945fa4bb4262f6c9e344afb583db9c" translate="yes" xml:space="preserve">
          <source>CA_COMPROMISE</source>
          <target state="translated">CA_COMPROMISE</target>
        </trans-unit>
        <trans-unit id="56fe21163209fd8398405601090c40cdb82370d1" translate="yes" xml:space="preserve">
          <source>CBC</source>
          <target state="translated">CBC</target>
        </trans-unit>
        <trans-unit id="b77da9422330fead9ab9ec32fbbd59bb9d5fc19a" translate="yes" xml:space="preserve">
          <source>CE</source>
          <target state="translated">CE</target>
        </trans-unit>
        <trans-unit id="9b840af21581bd3b3ea416fa8ad2dda03c9b0dd7" translate="yes" xml:space="preserve">
          <source>CEILING</source>
          <target state="translated">CEILING</target>
        </trans-unit>
        <trans-unit id="fbab0510c931da86c52704ea1e99d4124cd5f298" translate="yes" xml:space="preserve">
          <source>CENATT</source>
          <target state="translated">CENATT</target>
        </trans-unit>
        <trans-unit id="ce8e75c04a03b8ca486f1c2e6add9bf7d728e32f" translate="yes" xml:space="preserve">
          <source>CENATX</source>
          <target state="translated">CENATX</target>
        </trans-unit>
        <trans-unit id="c47eeee3fced691e4c289c3cec60f19b07f52d28" translate="yes" xml:space="preserve">
          <source>CENCOM</source>
          <target state="translated">CENCOM</target>
        </trans-unit>
        <trans-unit id="b9d7f569a3ad69f31cf85eafdebd468b25625db6" translate="yes" xml:space="preserve">
          <source>CENCRC</source>
          <target state="translated">CENCRC</target>
        </trans-unit>
        <trans-unit id="eed19d59412f63fc47761f1b4fac0c5e09fbaa38" translate="yes" xml:space="preserve">
          <source>CENDSK</source>
          <target state="translated">CENDSK</target>
        </trans-unit>
        <trans-unit id="cf45f5a55c3cef01d10412fb820d074abd2035e7" translate="yes" xml:space="preserve">
          <source>CENEXT</source>
          <target state="translated">CENEXT</target>
        </trans-unit>
        <trans-unit id="9e3935a6def7c4333d59e14912eb4f4b8b8e4896" translate="yes" xml:space="preserve">
          <source>CENFLG</source>
          <target state="translated">CENFLG</target>
        </trans-unit>
        <trans-unit id="df210772ae6e5bef738378a5dc6e0ce503dc3122" translate="yes" xml:space="preserve">
          <source>CENHDR</source>
          <target state="translated">CENHDR</target>
        </trans-unit>
        <trans-unit id="e83ce9c23f2103bba6dd996001c291399fa09cf7" translate="yes" xml:space="preserve">
          <source>CENHOW</source>
          <target state="translated">CENHOW</target>
        </trans-unit>
        <trans-unit id="8cfb942b05a65db9166a6d4fae11a6c74da62bd6" translate="yes" xml:space="preserve">
          <source>CENLEN</source>
          <target state="translated">CENLEN</target>
        </trans-unit>
        <trans-unit id="01850cca552bc017a01001e48cdd492d2b993c2e" translate="yes" xml:space="preserve">
          <source>CENNAM</source>
          <target state="translated">CENNAM</target>
        </trans-unit>
        <trans-unit id="d8853c7b4a13476c389ac7b2723d7353cb8bf9cc" translate="yes" xml:space="preserve">
          <source>CENOFF</source>
          <target state="translated">CENOFF</target>
        </trans-unit>
        <trans-unit id="29014448ec337d2bd35cea2519629be3abe71aaa" translate="yes" xml:space="preserve">
          <source>CENSIG</source>
          <target state="translated">CENSIG</target>
        </trans-unit>
        <trans-unit id="2e6d5a1dba4938c8309b36a50699ec6adf85c315" translate="yes" xml:space="preserve">
          <source>CENSIZ</source>
          <target state="translated">CENSIZ</target>
        </trans-unit>
        <trans-unit id="a8753e4d2724f082c94118bc33d6a4256fec6dfa" translate="yes" xml:space="preserve">
          <source>CENTIM</source>
          <target state="translated">CENTIM</target>
        </trans-unit>
        <trans-unit id="970caf4339ac82e74a396289119f90a34e7de67c" translate="yes" xml:space="preserve">
          <source>CENTURIES</source>
          <target state="translated">CENTURIES</target>
        </trans-unit>
        <trans-unit id="d36c882dea8e1745711e33427ce54832e1fb3c97" translate="yes" xml:space="preserve">
          <source>CENVEM</source>
          <target state="translated">CENVEM</target>
        </trans-unit>
        <trans-unit id="a1452adb71eeb20c1332ba430f4d38f511db8bfa" translate="yes" xml:space="preserve">
          <source>CENVER</source>
          <target state="translated">CENVER</target>
        </trans-unit>
        <trans-unit id="398e092959400ce67b8805c41ad9546292733b57" translate="yes" xml:space="preserve">
          <source>CERTIFICATE_HOLD</source>
          <target state="translated">CERTIFICATE_HOLD</target>
        </trans-unit>
        <trans-unit id="88d92e450810d91aa53d39f8ef8ceb5a014bb03b" translate="yes" xml:space="preserve">
          <source>CESSATION_OF_OPERATION</source>
          <target state="translated">CESSATION_OF_OPERATION</target>
        </trans-unit>
        <trans-unit id="d0a7972528880d5c3bc82073c2567d9c352a4dfd" translate="yes" xml:space="preserve">
          <source>CFB</source>
          <target state="translated">CFB</target>
        </trans-unit>
        <trans-unit id="654878a8b2f7ce2b973a46579fddad0fd0455497" translate="yes" xml:space="preserve">
          <source>CHAKMA</source>
          <target state="translated">CHAKMA</target>
        </trans-unit>
        <trans-unit id="240d47eceef79b6bd00cdfc3f397948e28c3e28a" translate="yes" xml:space="preserve">
          <source>CHAM</source>
          <target state="translated">CHAM</target>
        </trans-unit>
        <trans-unit id="7d5c9bf3acb2d6a7d949b221090280e09c07c4d9" translate="yes" xml:space="preserve">
          <source>CHANNEL_PRESSURE</source>
          <target state="translated">CHANNEL_PRESSURE</target>
        </trans-unit>
        <trans-unit id="49279edf04879138e2ca01fe4da87f165bb8a556" translate="yes" xml:space="preserve">
          <source>CHAR</source>
          <target state="translated">CHAR</target>
        </trans-unit>
        <trans-unit id="6529f695ef6bea2b61be4f42d6af092fc3b74190" translate="yes" xml:space="preserve">
          <source>CHARACTER</source>
          <target state="translated">CHARACTER</target>
        </trans-unit>
        <trans-unit id="9cc3e9f13c82cdb660a28e433d39775416e54f75" translate="yes" xml:space="preserve">
          <source>CHAR_ARRAY</source>
          <target state="translated">CHAR_ARRAY</target>
        </trans-unit>
        <trans-unit id="32a509e2ec6420c48a4ab53efb0083235ddd425e" translate="yes" xml:space="preserve">
          <source>CHEROKEE</source>
          <target state="translated">CHEROKEE</target>
        </trans-unit>
        <trans-unit id="fe4dc7fc26f7e46ccc8676ae1eac13179c1cac35" translate="yes" xml:space="preserve">
          <source>CHILD_POLICY_ALL</source>
          <target state="translated">CHILD_POLICY_ALL</target>
        </trans-unit>
        <trans-unit id="423c2708084898a1d87d9af680bbd024fe47d0ae" translate="yes" xml:space="preserve">
          <source>CHILD_POLICY_CHOICE</source>
          <target state="translated">CHILD_POLICY_CHOICE</target>
        </trans-unit>
        <trans-unit id="ab2c051c94d3f89e17305fd5fbb9d8e2bcb9c392" translate="yes" xml:space="preserve">
          <source>CHILD_POLICY_EMPTY</source>
          <target state="translated">CHILD_POLICY_EMPTY</target>
        </trans-unit>
        <trans-unit id="0b80054583753c50ce868cf1ff927ad19beb0d8b" translate="yes" xml:space="preserve">
          <source>CHILD_POLICY_MAX</source>
          <target state="translated">CHILD_POLICY_MAX</target>
        </trans-unit>
        <trans-unit id="cba9011154658a2905ca2323a32d3432127da3c9" translate="yes" xml:space="preserve">
          <source>CHILD_POLICY_REPEAT</source>
          <target state="translated">CHILD_POLICY_REPEAT</target>
        </trans-unit>
        <trans-unit id="26509f5eca9644e2ba5eda5da2a707a039365ace" translate="yes" xml:space="preserve">
          <source>CHILD_POLICY_SEQUENCE</source>
          <target state="translated">CHILD_POLICY_SEQUENCE</target>
        </trans-unit>
        <trans-unit id="023ba52cc0316995383f6daeed3ddce9670549d0" translate="yes" xml:space="preserve">
          <source>CHILD_POLICY_SOME</source>
          <target state="translated">CHILD_POLICY_SOME</target>
        </trans-unit>
        <trans-unit id="7358da24e692c13d35e9097d4a34bd25c7add28f" translate="yes" xml:space="preserve">
          <source>CHINA</source>
          <target state="translated">CHINA</target>
        </trans-unit>
        <trans-unit id="a8910e62d8158fce16244f7d86e8ff3d5f02df45" translate="yes" xml:space="preserve">
          <source>CHINESE</source>
          <target state="translated">CHINESE</target>
        </trans-unit>
        <trans-unit id="f95e11e39e8d7154ad66576ba9db28c987d18aba" translate="yes" xml:space="preserve">
          <source>CHOU_1</source>
          <target state="translated">CHOU_1</target>
        </trans-unit>
        <trans-unit id="badad29b57e3cd7a07ac955fa7923ea4e6468ded" translate="yes" xml:space="preserve">
          <source>CHOU_2</source>
          <target state="translated">CHOU_2</target>
        </trans-unit>
        <trans-unit id="60b57cafd6caef0f52d2b208bc00126a895cbac8" translate="yes" xml:space="preserve">
          <source>CHOU_3</source>
          <target state="translated">CHOU_3</target>
        </trans-unit>
        <trans-unit id="cb2e34a571895491438d2f4eac662c32d8b5fa7a" translate="yes" xml:space="preserve">
          <source>CHOU_30</source>
          <target state="translated">CHOU_30</target>
        </trans-unit>
        <trans-unit id="9b837675471e8bbde08a45803f6e9c55d1075e4c" translate="yes" xml:space="preserve">
          <source>CHOU_4</source>
          <target state="translated">CHOU_4</target>
        </trans-unit>
        <trans-unit id="4141608d20a27dfff3a6f87d969758836002bcbb" translate="yes" xml:space="preserve">
          <source>CHOU_40</source>
          <target state="translated">CHOU_40</target>
        </trans-unit>
        <trans-unit id="65642f867f6a7a745014fa8d3ed0aa16728e3776" translate="yes" xml:space="preserve">
          <source>CJK_COMPATIBILITY</source>
          <target state="translated">CJK_COMPATIBILITY</target>
        </trans-unit>
        <trans-unit id="bdb42c3c87ee511c5b698a16eba2fb6882800ba9" translate="yes" xml:space="preserve">
          <source>CJK_COMPATIBILITY_FORMS</source>
          <target state="translated">CJK_COMPATIBILITY_FORMS</target>
        </trans-unit>
        <trans-unit id="7b8c36368c0050c0cc17f43c4bfa867521a8c1f9" translate="yes" xml:space="preserve">
          <source>CJK_COMPATIBILITY_IDEOGRAPHS</source>
          <target state="translated">CJK_COMPATIBILITY_IDEOGRAPHS</target>
        </trans-unit>
        <trans-unit id="2555b6094eb534f3065a810fd353e98620ba8eff" translate="yes" xml:space="preserve">
          <source>CJK_COMPATIBILITY_IDEOGRAPHS_SUPPLEMENT</source>
          <target state="translated">CJK_COMPATIBILITY_IDEOGRAPHS_SUPPLEMENT</target>
        </trans-unit>
        <trans-unit id="44d03f6a4fc9ddd792bf8fbef8bead7b030ddc0b" translate="yes" xml:space="preserve">
          <source>CJK_RADICALS_SUPPLEMENT</source>
          <target state="translated">CJK_RADICALS_SUPPLEMENT</target>
        </trans-unit>
        <trans-unit id="0d1afdf7139179d7e82f4dadc8aa80dde5095074" translate="yes" xml:space="preserve">
          <source>CJK_STROKES</source>
          <target state="translated">CJK_STROKES</target>
        </trans-unit>
        <trans-unit id="bf438864ed9326f44f5f40d1a61f018c9e06577c" translate="yes" xml:space="preserve">
          <source>CJK_SYMBOLS_AND_PUNCTUATION</source>
          <target state="translated">CJK_SYMBOLS_AND_PUNCTUATION</target>
        </trans-unit>
        <trans-unit id="058804b65f0c3927c23bf95ed97737b781079855" translate="yes" xml:space="preserve">
          <source>CJK_UNIFIED_IDEOGRAPHS</source>
          <target state="translated">CJK_UNIFIED_IDEOGRAPHS</target>
        </trans-unit>
        <trans-unit id="22f236027b3287f5f17519b3c0ae61499c5227aa" translate="yes" xml:space="preserve">
          <source>CJK_UNIFIED_IDEOGRAPHS_EXTENSION_A</source>
          <target state="translated">CJK_UNIFIED_IDEOGRAPHS_EXTENSION_A</target>
        </trans-unit>
        <trans-unit id="ca6abc40e39629ee685fe8f9cd81c97fc7a52671" translate="yes" xml:space="preserve">
          <source>CJK_UNIFIED_IDEOGRAPHS_EXTENSION_B</source>
          <target state="translated">CJK_UNIFIED_IDEOGRAPHS_EXTENSION_B</target>
        </trans-unit>
        <trans-unit id="447fb15aac44b282034e4c7e229454cac064a551" translate="yes" xml:space="preserve">
          <source>CJK_UNIFIED_IDEOGRAPHS_EXTENSION_C</source>
          <target state="translated">CJK_UNIFIED_IDEOGRAPHS_EXTENSION_C</target>
        </trans-unit>
        <trans-unit id="059afbf26000f4058cc5361f0da108dfca3c2171" translate="yes" xml:space="preserve">
          <source>CJK_UNIFIED_IDEOGRAPHS_EXTENSION_D</source>
          <target state="translated">CJK_UNIFIED_IDEOGRAPHS_EXTENSION_D</target>
        </trans-unit>
        <trans-unit id="bb95f17d9243e483e268617dbce738cf49527ccf" translate="yes" xml:space="preserve">
          <source>CLASS</source>
          <target state="translated">CLASS</target>
        </trans-unit>
        <trans-unit id="a0819073c2dfc855192afa904e2b03b541555c18" translate="yes" xml:space="preserve">
          <source>CLASS_ATTRIBUTE_PFX</source>
          <target state="translated">CLASS_ATTRIBUTE_PFX</target>
        </trans-unit>
        <trans-unit id="0899293e3ea26f7e6112f23582c381a422f36314" translate="yes" xml:space="preserve">
          <source>CLASS_LOADING_MXBEAN_NAME</source>
          <target state="translated">CLASS_LOADING_MXBEAN_NAME</target>
        </trans-unit>
        <trans-unit id="f050a2c6eeb0f2d9373526258045fc64f70d7739" translate="yes" xml:space="preserve">
          <source>CLASS_OUTPUT</source>
          <target state="translated">CLASS_OUTPUT</target>
        </trans-unit>
        <trans-unit id="69b15f92a4ecbb4bb02a2ef92c4f500ebe6498c5" translate="yes" xml:space="preserve">
          <source>CLASS_PATH</source>
          <target state="translated">CLASS_PATH</target>
        </trans-unit>
        <trans-unit id="e1dffb6b8a6d1c9bb7bb2c21f7e63453c7e0d563" translate="yes" xml:space="preserve">
          <source>CLDR and LDML identify variants:</source>
          <target state="translated">CLDR 및 LDML은 변형을 식별합니다.</target>
        </trans-unit>
        <trans-unit id="b00b4223ba2db97d1e05a59f478638a82a590230" translate="yes" xml:space="preserve">
          <source>CLOCK_HOUR_OF_AMPM</source>
          <target state="translated">CLOCK_HOUR_OF_AMPM</target>
        </trans-unit>
        <trans-unit id="331adf267fef2941ce707c598bcc1357c124ddaa" translate="yes" xml:space="preserve">
          <source>CLOCK_HOUR_OF_DAY</source>
          <target state="translated">CLOCK_HOUR_OF_DAY</target>
        </trans-unit>
        <trans-unit id="dbc87420347a2d9903d256035f6466489d185381" translate="yes" xml:space="preserve">
          <source>CLOSE</source>
          <target state="translated">CLOSE</target>
        </trans-unit>
        <trans-unit id="be3e73b1165db31a5924bbdff0205a51a0525286" translate="yes" xml:space="preserve">
          <source>CLOSED</source>
          <target state="translated">CLOSED</target>
        </trans-unit>
        <trans-unit id="5dd47d823fa7a4795d17af74804951af0c4e91cc" translate="yes" xml:space="preserve">
          <source>CLOSE_FAILURE</source>
          <target state="translated">CLOSE_FAILURE</target>
        </trans-unit>
        <trans-unit id="19e6fe9c5c8904f75a4711e79333dd440258dda4" translate="yes" xml:space="preserve">
          <source>CLOSE_FAILURE is used when a close of an output stream fails.</source>
          <target state="translated">CLOSE_FAILURE는 출력 스트림 닫기가 실패 할 때 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="2ac82fa3e350b4c0d5a7677d22f333b096365754" translate="yes" xml:space="preserve">
          <source>CNT - America/St_Johns</source>
          <target state="translated">CNT-미국 / 세인트 존스</target>
        </trans-unit>
        <trans-unit id="480129f44a3e08168cee4283cb3f61522c3a6b18" translate="yes" xml:space="preserve">
          <source>CODE_ATTRIBUTE_PFX</source>
          <target state="translated">CODE_ATTRIBUTE_PFX</target>
        </trans-unit>
        <trans-unit id="ffe203ade6df96a9721e47e8db4f55364395bbcb" translate="yes" xml:space="preserve">
          <source>COLLATED</source>
          <target state="translated">COLLATED</target>
        </trans-unit>
        <trans-unit id="341716cae68abfef87f546fbb5adbc95801c912b" translate="yes" xml:space="preserve">
          <source>COLOR</source>
          <target state="translated">COLOR</target>
        </trans-unit>
        <trans-unit id="f132babefc6c307a661f86c7b9463524b59fa7bb" translate="yes" xml:space="preserve">
          <source>COMBINING_DIACRITICAL_MARKS</source>
          <target state="translated">COMBINING_DIACRITICAL_MARKS</target>
        </trans-unit>
        <trans-unit id="391ce8c52a8e3dfbbc85023c4005bb7e57fd7d90" translate="yes" xml:space="preserve">
          <source>COMBINING_DIACRITICAL_MARKS_SUPPLEMENT</source>
          <target state="translated">COMBINING_DIACRITICAL_MARKS_SUPPLEMENT</target>
        </trans-unit>
        <trans-unit id="514a3ae872efee7fcab2bf7a83ecd4d8d83553e1" translate="yes" xml:space="preserve">
          <source>COMBINING_HALF_MARKS</source>
          <target state="translated">COMBINING_HALF_MARKS</target>
        </trans-unit>
        <trans-unit id="f6d1b3e7b8b8858eea0b0c9f222e4a4f607c8873" translate="yes" xml:space="preserve">
          <source>COMBINING_MARKS_FOR_SYMBOLS</source>
          <target state="translated">COMBINING_MARKS_FOR_SYMBOLS</target>
        </trans-unit>
        <trans-unit id="51a8d6928a4ece9bd6c2ffdeac4703a48f7264cc" translate="yes" xml:space="preserve">
          <source>COMBINING_SPACING_MARK</source>
          <target state="translated">COMBINING_SPACING_MARK</target>
        </trans-unit>
        <trans-unit id="05ea2aeebb1bcb2ad1032369d543dbd4fc81dbb5" translate="yes" xml:space="preserve">
          <source>COMMENTS</source>
          <target state="translated">COMMENTS</target>
        </trans-unit>
        <trans-unit id="e4636d467ea5e3fae7a3e459f05dbc0dce2744b1" translate="yes" xml:space="preserve">
          <source>COMMON</source>
          <target state="translated">COMMON</target>
        </trans-unit>
        <trans-unit id="389bce991d1ca9852db420c88e41b257d64529d1" translate="yes" xml:space="preserve">
          <source>COMMON_INDIC_NUMBER_FORMS</source>
          <target state="translated">COMMON_INDIC_NUMBER_FORMS</target>
        </trans-unit>
        <trans-unit id="501d5bb81c803dff899b619fb9094e3ecbc57506" translate="yes" xml:space="preserve">
          <source>COMPACT_DISC</source>
          <target state="translated">COMPACT_DISC</target>
        </trans-unit>
        <trans-unit id="4c133b0abd3e37ff11cf8226c67161bf234ee762" translate="yes" xml:space="preserve">
          <source>COMPILATION_MXBEAN_NAME</source>
          <target state="translated">COMPILATION_MXBEAN_NAME</target>
        </trans-unit>
        <trans-unit id="6dc2daaed756f492c0b47af2ae68dfc26d827fab" translate="yes" xml:space="preserve">
          <source>COMPLETED</source>
          <target state="translated">COMPLETED</target>
        </trans-unit>
        <trans-unit id="d8b0f0fd887983cda6b410e10f698d67f6f38c91" translate="yes" xml:space="preserve">
          <source>COMPRESS</source>
          <target state="translated">COMPRESS</target>
        </trans-unit>
        <trans-unit id="3af0e3dfeb1f9e16f72bce18b924af60ef7c1bde" translate="yes" xml:space="preserve">
          <source>COMPRESSION_ERROR</source>
          <target state="translated">COMPRESSION_ERROR</target>
        </trans-unit>
        <trans-unit id="8ccc0f76949460d45ed1ab34fc481554b410c1fc" translate="yes" xml:space="preserve">
          <source>CONCURRENT</source>
          <target state="translated">CONCURRENT</target>
        </trans-unit>
        <trans-unit id="2fb60054b43a25d7a958d3d19bdb1aa7809577a8" translate="yes" xml:space="preserve">
          <source>CONFIG</source>
          <target state="translated">CONFIG</target>
        </trans-unit>
        <trans-unit id="752146c40820b5436be3bc014cd19ce020b81fd2" translate="yes" xml:space="preserve">
          <source>CONFIG is a message level for static configuration messages.</source>
          <target state="translated">CONFIG는 정적 구성 메시지의 메시지 수준입니다.</target>
        </trans-unit>
        <trans-unit id="6be29b80ad4de4ec146e7ad8ff479f18e4b7a7d4" translate="yes" xml:space="preserve">
          <source>CONFIG messages are intended to provide a variety of static configuration information, to assist in debugging problems that may be associated with particular configurations. For example, CONFIG message might include the CPU type, the graphics depth, the GUI look-and-feel, etc. This level is initialized to &lt;code&gt;700&lt;/code&gt;.</source>
          <target state="translated">CONFIG 메시지는 다양한 정적 구성 정보를 제공하여 특정 구성과 관련 될 수있는 문제를 디버깅하는 데 도움을주기위한 것입니다. 예를 들어, CONFIG 메시지는 CPU 유형, 그래픽 깊이, GUI 룩앤필 등을 포함 할 수 있습니다.이 레벨은 &lt;code&gt;700&lt;/code&gt; 으로 초기화됩니다 .</target>
        </trans-unit>
        <trans-unit id="4ec7ab4f88525daccfb87721363c20948d2c15f9" translate="yes" xml:space="preserve">
          <source>CONNECTING_TO_DEVICE</source>
          <target state="translated">CONNECTING_TO_DEVICE</target>
        </trans-unit>
        <trans-unit id="bdec3307bf74529afc89fcf1474e2489961239de" translate="yes" xml:space="preserve">
          <source>CONNECTOR_PUNCTUATION</source>
          <target state="translated">CONNECTOR_PUNCTUATION</target>
        </trans-unit>
        <trans-unit id="6ed66fd18a1b175704db533d3865fa2679863e6d" translate="yes" xml:space="preserve">
          <source>CONSTRUCTOR</source>
          <target state="translated">CONSTRUCTOR</target>
        </trans-unit>
        <trans-unit id="8f747c15b6898555ee833eb39ce9724de78233f5" translate="yes" xml:space="preserve">
          <source>CONTAINER</source>
          <target state="translated">CONTAINER</target>
        </trans-unit>
        <trans-unit id="025c408a5504f0e808d096b14c696e6a19ee3cbf" translate="yes" xml:space="preserve">
          <source>CONTENT_TYPE</source>
          <target state="translated">CONTENT_TYPE</target>
        </trans-unit>
        <trans-unit id="ff3dbb4248bc293f229f569fdd3cf5e3712d0ddf" translate="yes" xml:space="preserve">
          <source>CONTINUE</source>
          <target state="translated">CONTINUE</target>
        </trans-unit>
        <trans-unit id="50978fadde69c77246ce999d9f431f618a6319de" translate="yes" xml:space="preserve">
          <source>CONTROL</source>
          <target state="translated">CONTROL</target>
        </trans-unit>
        <trans-unit id="72855739a8e7f94a1e0ef23d66c0262d4e1a020e" translate="yes" xml:space="preserve">
          <source>CONTROL_CHANGE</source>
          <target state="translated">CONTROL_CHANGE</target>
        </trans-unit>
        <trans-unit id="5a0d6da1b400416c15b8ad03fc410a150cef05f9" translate="yes" xml:space="preserve">
          <source>CONTROL_FACTORIES</source>
          <target state="translated">CONTROL_FACTORIES</target>
        </trans-unit>
        <trans-unit id="0d90be8f1560afd8be26779ec92cf38fcd313223" translate="yes" xml:space="preserve">
          <source>CONTROL_PICTURES</source>
          <target state="translated">CONTROL_PICTURES</target>
        </trans-unit>
        <trans-unit id="509263319cb91854359ab579f2533d523c14a357" translate="yes" xml:space="preserve">
          <source>COPTIC</source>
          <target state="translated">COPTIC</target>
        </trans-unit>
        <trans-unit id="248c68db5ac55197237499aa4999efea3ba71812" translate="yes" xml:space="preserve">
          <source>COPY_ATTRIBUTES</source>
          <target state="translated">COPY_ATTRIBUTES</target>
        </trans-unit>
        <trans-unit id="11247475b93268482733b514494544f05917e155" translate="yes" xml:space="preserve">
          <source>COUNTING_ROD_NUMERALS</source>
          <target state="translated">COUNTING_ROD_NUMERALS</target>
        </trans-unit>
        <trans-unit id="183bb480e98b7785a715de2c73d7ac4bba0fd49a" translate="yes" xml:space="preserve">
          <source>COVER</source>
          <target state="translated">COVER</target>
        </trans-unit>
        <trans-unit id="ace1fd67da12993755075c9e4c5865a3d2edc5e1" translate="yes" xml:space="preserve">
          <source>COVER_OPEN</source>
          <target state="translated">COVER_OPEN</target>
        </trans-unit>
        <trans-unit id="2b24f26bfa4d58d7115ddbe03b1a005f1c4bd0c3" translate="yes" xml:space="preserve">
          <source>CPE</source>
          <target state="translated">CPE</target>
        </trans-unit>
        <trans-unit id="288534a82f3d6b159d2d8c16d58550e6aade4647" translate="yes" xml:space="preserve">
          <source>CRC-32 for uncompressed data.</source>
          <target state="translated">비 압축 데이터의 경우 CRC-32</target>
        </trans-unit>
        <trans-unit id="b7e850f7572a39ceab71976cc793436188dd4c79" translate="yes" xml:space="preserve">
          <source>CRC-32 of uncompressed data.</source>
          <target state="translated">비 압축 데이터의 CRC-32.</target>
        </trans-unit>
        <trans-unit id="21a7b3aa5a3633d095ba6138e74b3b85b3bcd7cb" translate="yes" xml:space="preserve">
          <source>CRC32</source>
          <target state="translated">CRC32</target>
        </trans-unit>
        <trans-unit id="f59595c1c7a33cd58b66e5ac1e2ac8ab4f617c25" translate="yes" xml:space="preserve">
          <source>CRC32.getValue()</source>
          <target state="translated">CRC32.getValue()</target>
        </trans-unit>
        <trans-unit id="08e11752c0c11ee5911df441fd67291beb23655b" translate="yes" xml:space="preserve">
          <source>CRC32.reset()</source>
          <target state="translated">CRC32.reset()</target>
        </trans-unit>
        <trans-unit id="6c00d562873f0ee3aba1804db6c671cdd33027f7" translate="yes" xml:space="preserve">
          <source>CRC32.update()</source>
          <target state="translated">CRC32.update()</target>
        </trans-unit>
        <trans-unit id="cabc2219177d43a5c1d71e3003445f83b9a7195f" translate="yes" xml:space="preserve">
          <source>CREATE</source>
          <target state="translated">CREATE</target>
        </trans-unit>
        <trans-unit id="003b90e9c855b03a30e22a0c5d718e1f067ce2e0" translate="yes" xml:space="preserve">
          <source>CREATE_NEW</source>
          <target state="translated">CREATE_NEW</target>
        </trans-unit>
        <trans-unit id="ed3536f9ef9618dbca81929e8f289f969c61460d" translate="yes" xml:space="preserve">
          <source>CREDENTIALS</source>
          <target state="translated">CREDENTIALS</target>
        </trans-unit>
        <trans-unit id="307df92fb8b8dfff37e7c3d15392a1d1f1410486" translate="yes" xml:space="preserve">
          <source>CRITICAL</source>
          <target state="translated">CRITICAL</target>
        </trans-unit>
        <trans-unit id="fa3416b89da9ef05cb9e9d2480e0fd805ea5f0a9" translate="yes" xml:space="preserve">
          <source>CRL</source>
          <target state="translated">CRL</target>
        </trans-unit>
        <trans-unit id="64714b2f859f5a700d795cb6add83b6f36a908f6" translate="yes" xml:space="preserve">
          <source>CRL (Certificate Revocation List) Exception.</source>
          <target state="translated">CRL (인증서 해지 목록) 예외.</target>
        </trans-unit>
        <trans-unit id="150fd5a67be62a336b82e263d51ffa0c618437dd" translate="yes" xml:space="preserve">
          <source>CRL.getType()</source>
          <target state="translated">CRL.getType()</target>
        </trans-unit>
        <trans-unit id="d0757c180d506256827c33d4a94ec87c38891bf2" translate="yes" xml:space="preserve">
          <source>CRL.isRevoked()</source>
          <target state="translated">CRL.isRevoked()</target>
        </trans-unit>
        <trans-unit id="2a8234a17ec2edc7d0a51c38e355585ed0ef6142" translate="yes" xml:space="preserve">
          <source>CRL.toString()</source>
          <target state="translated">CRL.toString()</target>
        </trans-unit>
        <trans-unit id="ca2d096436e39a2ace8477bebda9aeb53d06aa72" translate="yes" xml:space="preserve">
          <source>CRLException</source>
          <target state="translated">CRLException</target>
        </trans-unit>
        <trans-unit id="e4aa8900e11553ddcc7fdbf99fa5c821cc69befd" translate="yes" xml:space="preserve">
          <source>CRLReason</source>
          <target state="translated">CRLReason</target>
        </trans-unit>
        <trans-unit id="8234d6a29caec1dad2c460f9f95831065a5a34b3" translate="yes" xml:space="preserve">
          <source>CRLReason.valueOf()</source>
          <target state="translated">CRLReason.valueOf()</target>
        </trans-unit>
        <trans-unit id="b02f2e37e0c061b01a4f31dd04448e1d5aa69c0a" translate="yes" xml:space="preserve">
          <source>CRLReason.values()</source>
          <target state="translated">CRLReason.values()</target>
        </trans-unit>
        <trans-unit id="b78e5c0b10f6d43b8680da29471c3d5bc292ec47" translate="yes" xml:space="preserve">
          <source>CRLSelector</source>
          <target state="translated">CRLSelector</target>
        </trans-unit>
        <trans-unit id="bf121260e4803baa92c26721792cc9ca0522aa2b" translate="yes" xml:space="preserve">
          <source>CRLSelector.clone()</source>
          <target state="translated">CRLSelector.clone()</target>
        </trans-unit>
        <trans-unit id="276833142ab5708f3861f728bc207b2d9dd5f403" translate="yes" xml:space="preserve">
          <source>CRLSelector.match()</source>
          <target state="translated">CRLSelector.match()</target>
        </trans-unit>
        <trans-unit id="2edcc17651d6a8251d0bd506542779000863e535" translate="yes" xml:space="preserve">
          <source>CRLs are instantiated using a certificate factory. The following is an example of how to instantiate an X.509 CRL:</source>
          <target state="translated">CRL은 인증서 팩토리를 사용하여 인스턴스화됩니다. 다음은 X.509 CRL을 인스턴스화하는 방법의 예입니다.</target>
        </trans-unit>
        <trans-unit id="914e2ad224c14a9d517033ef8ddf3c850ecb9c7e" translate="yes" xml:space="preserve">
          <source>CST - America/Chicago</source>
          <target state="translated">CST-미국 / 시카고</target>
        </trans-unit>
        <trans-unit id="f55888d8d490b7cfb613148ef28b170a7609b739" translate="yes" xml:space="preserve">
          <source>CTT - Asia/Shanghai</source>
          <target state="translated">CTT-아시아 / 상하이</target>
        </trans-unit>
        <trans-unit id="16dd4c8f3c3548d47f681e517dcf83d6bfa1a260" translate="yes" xml:space="preserve">
          <source>CUNEIFORM</source>
          <target state="translated">CUNEIFORM</target>
        </trans-unit>
        <trans-unit id="6956492da0a438b037080a932d502c490da30d9a" translate="yes" xml:space="preserve">
          <source>CUNEIFORM_NUMBERS_AND_PUNCTUATION</source>
          <target state="translated">CUNEIFORM_NUMBERS_AND_PUNCTUATION</target>
        </trans-unit>
        <trans-unit id="429833e551333cfbf96a3275bf32e8c635c8e541" translate="yes" xml:space="preserve">
          <source>CURRENCY</source>
          <target state="translated">CURRENCY</target>
        </trans-unit>
        <trans-unit id="0eb9b33a40670abf39d39eecfb8c441213774695" translate="yes" xml:space="preserve">
          <source>CURRENCY_SYMBOL</source>
          <target state="translated">CURRENCY_SYMBOL</target>
        </trans-unit>
        <trans-unit id="4a508cb39d708a1b94d056a6b8905687623bf14b" translate="yes" xml:space="preserve">
          <source>CURRENCY_SYMBOLS</source>
          <target state="translated">CURRENCY_SYMBOLS</target>
        </trans-unit>
        <trans-unit id="9735064174d1a719444e1d22fb99ab6aa9ef511b" translate="yes" xml:space="preserve">
          <source>CYPRIOT</source>
          <target state="translated">CYPRIOT</target>
        </trans-unit>
        <trans-unit id="bf1d564782c734055da9a2ac2b17a3c65c7c4cfe" translate="yes" xml:space="preserve">
          <source>CYPRIOT_SYLLABARY</source>
          <target state="translated">CYPRIOT_SYLLABARY</target>
        </trans-unit>
        <trans-unit id="71c8437222ed69205de3d1022af6cb7567a63705" translate="yes" xml:space="preserve">
          <source>CYRILLIC</source>
          <target state="translated">CYRILLIC</target>
        </trans-unit>
        <trans-unit id="47c050fbc086f37126973d28d0985bd1920616c5" translate="yes" xml:space="preserve">
          <source>CYRILLIC_EXTENDED_A</source>
          <target state="translated">CYRILLIC_EXTENDED_A</target>
        </trans-unit>
        <trans-unit id="4c3331fa62b450a13a6996ce6cefcc790a2d6476" translate="yes" xml:space="preserve">
          <source>CYRILLIC_EXTENDED_B</source>
          <target state="translated">CYRILLIC_EXTENDED_B</target>
        </trans-unit>
        <trans-unit id="c582ad8d987acbaf21e9157a51f490dd6ddd55e2" translate="yes" xml:space="preserve">
          <source>CYRILLIC_SUPPLEMENTARY</source>
          <target state="translated">CYRILLIC_SUPPLEMENTARY</target>
        </trans-unit>
        <trans-unit id="d2469c2aa14798195f6bc3ae16fcf004712ca85e" translate="yes" xml:space="preserve">
          <source>Cache Management</source>
          <target state="translated">캐시 관리</target>
        </trans-unit>
        <trans-unit id="ebed7f9890f8e17bb28cbafa5ea656a1f4ffe196" translate="yes" xml:space="preserve">
          <source>CacheRequest</source>
          <target state="translated">CacheRequest</target>
        </trans-unit>
        <trans-unit id="1174f57370ee1255d744c0a7da23030809c4acd5" translate="yes" xml:space="preserve">
          <source>CacheRequest.abort()</source>
          <target state="translated">CacheRequest.abort()</target>
        </trans-unit>
        <trans-unit id="4fe22457169508327e9e7f4ea3bb8e2758f43a99" translate="yes" xml:space="preserve">
          <source>CacheRequest.getBody()</source>
          <target state="translated">CacheRequest.getBody()</target>
        </trans-unit>
        <trans-unit id="f0d9c06e342e4c89df0834f398df6e10371f8414" translate="yes" xml:space="preserve">
          <source>CacheResponse</source>
          <target state="translated">CacheResponse</target>
        </trans-unit>
        <trans-unit id="677a02ffc88ffc9ad19ecf1a85b4a27a78a27ca8" translate="yes" xml:space="preserve">
          <source>CacheResponse.getBody()</source>
          <target state="translated">CacheResponse.getBody()</target>
        </trans-unit>
        <trans-unit id="745e5258893531fb5374f87918776cbff8db37b0" translate="yes" xml:space="preserve">
          <source>CacheResponse.getHeaders()</source>
          <target state="translated">CacheResponse.getHeaders()</target>
        </trans-unit>
        <trans-unit id="7751546c9bd81491350e558adfd4697e346d8a5c" translate="yes" xml:space="preserve">
          <source>Cached value for operation.</source>
          <target state="translated">작동을 위해 캐시 된 값.</target>
        </trans-unit>
        <trans-unit id="48b905695e5f3294d3dcf52689c470b003ea54e4" translate="yes" xml:space="preserve">
          <source>Calculates a hash code value for the object. Objects that are equal will also have the same hashcode.</source>
          <target state="translated">객체의 해시 코드 값을 계산합니다. 동일한 객체도 동일한 해시 코드를 갖습니다.</target>
        </trans-unit>
        <trans-unit id="34937398ab70c9364360a9cc78ead4ff9449d70f" translate="yes" xml:space="preserve">
          <source>Calculates the amount of time between two temporal objects.</source>
          <target state="translated">두 시간 객체 사이의 시간을 계산합니다.</target>
        </trans-unit>
        <trans-unit id="522d36cb7ad9b1a1351efd3732a75098ccfd72af" translate="yes" xml:space="preserve">
          <source>Calculates the amount of time until another date in terms of the specified unit.</source>
          <target state="translated">지정된 단위로 다른 날짜까지의 시간을 계산합니다.</target>
        </trans-unit>
        <trans-unit id="9a12755397616bd5749edc6d6f5cc12bc817ebf5" translate="yes" xml:space="preserve">
          <source>Calculates the amount of time until another date-time in terms of the specified unit.</source>
          <target state="translated">지정된 단위로 다른 날짜-시간까지의 시간을 계산합니다.</target>
        </trans-unit>
        <trans-unit id="4debbf577b72b67f294bd0e4159583ca58a43d0d" translate="yes" xml:space="preserve">
          <source>Calculates the amount of time until another instant in terms of the specified unit.</source>
          <target state="translated">지정된 단위로 다른 순간까지의 시간을 계산합니다.</target>
        </trans-unit>
        <trans-unit id="e2dc3598710ee7170a84575f9c6b1f46c60493ea" translate="yes" xml:space="preserve">
          <source>Calculates the amount of time until another temporal in terms of the specified unit.</source>
          <target state="translated">지정된 단위로 다른 시간이 될 때까지의 시간을 계산합니다.</target>
        </trans-unit>
        <trans-unit id="72f580f6f585c7cc741dc5c8145c91685558d81f" translate="yes" xml:space="preserve">
          <source>Calculates the amount of time until another time in terms of the specified unit.</source>
          <target state="translated">지정된 단위로 다른 시간까지의 시간을 계산합니다.</target>
        </trans-unit>
        <trans-unit id="ce10866e50aae70ac202abbcfd68bec8df1942a8" translate="yes" xml:space="preserve">
          <source>Calculates the amount of time until another year in terms of the specified unit.</source>
          <target state="translated">지정된 단위로 다른 연도까지의 시간을 계산합니다.</target>
        </trans-unit>
        <trans-unit id="a0443629bd02124005b983ed12cb3d9601d69b29" translate="yes" xml:space="preserve">
          <source>Calculates the amount of time until another year-month in terms of the specified unit.</source>
          <target state="translated">지정된 단위로 다른 연월까지의 시간을 계산합니다.</target>
        </trans-unit>
        <trans-unit id="cd59add890e08b911369e39d5b40d5b39db7dc64" translate="yes" xml:space="preserve">
          <source>Calculates the hash code of this BasicAttributes.</source>
          <target state="translated">이 BasicAttributes의 해시 코드를 계산합니다.</target>
        </trans-unit>
        <trans-unit id="ab54a7755abef7f5db4bc6dc6a6a643433100395" translate="yes" xml:space="preserve">
          <source>Calculates the hash code of this attribute.</source>
          <target state="translated">이 속성의 해시 코드를 계산합니다.</target>
        </trans-unit>
        <trans-unit id="e92eec2928b65506efc77b8dc59148127c47f002" translate="yes" xml:space="preserve">
          <source>Calculates the index that would be used in this &lt;code&gt;TabularData&lt;/code&gt; instance to refer to the specified composite data &lt;var&gt;value&lt;/var&gt; parameter if it were added to this instance. This method checks for the type validity of the specified &lt;var&gt;value&lt;/var&gt;, but does not check if the calculated index is already used to refer to a value in this &lt;code&gt;TabularData&lt;/code&gt; instance.</source>
          <target state="translated">이 인스턴스에 추가 된 경우 지정된 복합 데이터 &lt;var&gt;value&lt;/var&gt; 매개 변수 를 참조하기 위해이 &lt;code&gt;TabularData&lt;/code&gt; 인스턴스 에서 사용되는 인덱스를 계산합니다 . 이 메소드는 지정된 &lt;var&gt;value&lt;/var&gt; 의 유형 유효성을 검사하지만 계산 된 색인이 이미이 &lt;code&gt;TabularData&lt;/code&gt; 인스턴스 의 값을 참조하는 데 사용되는지는 확인하지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="69d48bcfdacb26a2b3b023380372471e418aeb87" translate="yes" xml:space="preserve">
          <source>Calculates the number of times that this tokenizer's &lt;code&gt;nextToken&lt;/code&gt; method can be called before it generates an exception. The current position is not advanced.</source>
          <target state="translated">이 토크 나이저의 &lt;code&gt;nextToken&lt;/code&gt; 메소드가 예외를 생성하기 전에 호출 할 수있는 횟수를 계산합니다 . 현재 위치가 진행되지 않았습니다.</target>
        </trans-unit>
        <trans-unit id="15aec4d430c73c6bdc9bd971deb0f830b8539507" translate="yes" xml:space="preserve">
          <source>Calculates the period between this date and another date as a &lt;code&gt;ChronoPeriod&lt;/code&gt;.</source>
          <target state="translated">이 날짜와 다른 날짜 사이의 기간을 &lt;code&gt;ChronoPeriod&lt;/code&gt; 로 계산합니다 .</target>
        </trans-unit>
        <trans-unit id="70d293b0dc5f5e4ea355221afe551f37040c8ab3" translate="yes" xml:space="preserve">
          <source>Calculates the period between this date and another date as a &lt;code&gt;Period&lt;/code&gt;.</source>
          <target state="translated">이 날짜와 다른 날짜 사이의 &lt;code&gt;Period&lt;/code&gt; 로 계산합니다 .</target>
        </trans-unit>
        <trans-unit id="596d6f3a468f718a2e71373432ac63c4464989a2" translate="yes" xml:space="preserve">
          <source>Calculates the proleptic-year given the era and year-of-era.</source>
          <target state="translated">시대와 시대를 고려한 다 학년을 계산합니다.</target>
        </trans-unit>
        <trans-unit id="1303ea1d3344ae7f045fdbf710ee7a6d77d6f8b4" translate="yes" xml:space="preserve">
          <source>Calculations are performed using the ISO-8601 chronology.</source>
          <target state="translated">계산은 ISO-8601 연대기를 사용하여 수행됩니다.</target>
        </trans-unit>
        <trans-unit id="adab5090ac6a1b7b5420faac7be86c41721ba27c" translate="yes" xml:space="preserve">
          <source>Calendar</source>
          <target state="translated">Calendar</target>
        </trans-unit>
        <trans-unit id="ae2db976d3a15628ed21c64f012238ac0d2a757d" translate="yes" xml:space="preserve">
          <source>Calendar Fields Resolution</source>
          <target state="translated">캘린더 필드 해상도</target>
        </trans-unit>
        <trans-unit id="e187b3c273c120d4f30955dbf58d4ddb7b9476d1" translate="yes" xml:space="preserve">
          <source>Calendar Type</source>
          <target state="translated">캘린더 유형</target>
        </trans-unit>
        <trans-unit id="5b487cc7ec403bea40344f04808de668262544c9" translate="yes" xml:space="preserve">
          <source>Calendar constant for this field</source>
          <target state="translated">이 필드의 캘린더 정수</target>
        </trans-unit>
        <trans-unit id="fa064496f65db4bf7ccf0ebe9f3207df07f0a74c" translate="yes" xml:space="preserve">
          <source>Calendar field value names for &lt;code&gt;&quot;gregory&quot;&lt;/code&gt; must be consistent with the date-time symbols provided by &lt;a href=&quot;../../text/spi/dateformatsymbolsprovider&quot;&gt;&lt;code&gt;DateFormatSymbolsProvider&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;&quot;gregory&quot;&lt;/code&gt; 의 달력 필드 값 이름은 &lt;a href=&quot;../../text/spi/dateformatsymbolsprovider&quot;&gt; &lt;code&gt;DateFormatSymbolsProvider&lt;/code&gt; 에서&lt;/a&gt; 제공 한 날짜-시간 기호와 일치해야합니다 .</target>
        </trans-unit>
        <trans-unit id="5e8ca66ca525738c2b509a8b3fd48a0e117f1b47" translate="yes" xml:space="preserve">
          <source>Calendar fields are specified with the constants defined in &lt;a href=&quot;../calendar&quot;&gt;&lt;code&gt;Calendar&lt;/code&gt;&lt;/a&gt;. The following are calendar-common fields and their values to be supported for each calendar system.</source>
          <target state="translated">달력 필드에 정의 된 상수로 지정 &lt;a href=&quot;../calendar&quot;&gt; &lt;code&gt;Calendar&lt;/code&gt; &lt;/a&gt; . 다음은 캘린더 공통 필드 및 각 캘린더 시스템에서 지원되는 값입니다.</target>
        </trans-unit>
        <trans-unit id="b98e19a0352f224c121593b9470e805b8cc3b9a3" translate="yes" xml:space="preserve">
          <source>Calendar systems that do not have a seven day week should typically implement this field in the same way, but using the alternate week length.</source>
          <target state="translated">주 7 일이없는 달력 시스템은 일반적으로이 필드를 동일한 방식으로 구현하지만 대체 주 길이를 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="088bffc798979fdf81c57c940edb6c1236042bd7" translate="yes" xml:space="preserve">
          <source>Calendar systems that do not have a standard seven day week should implement this field if they have a similar concept of named or numbered days within a period similar to a week. It is recommended that the numbering starts from 1.</source>
          <target state="translated">표준 7 일 주가없는 달력 시스템은 일주일과 비슷한 기간 내에 명명 된 또는 번호가 매겨진 요일 개념이 유사한 경우이 필드를 구현해야합니다. 번호 매기기는 1부터 시작하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="26a17066add3c0baa9f4b85ac8728655bdb6db3e" translate="yes" xml:space="preserve">
          <source>Calendar type, for example, &quot;islamic-umalqura&quot;</source>
          <target state="translated">일정 유형 (예 : &quot;islamic-umalqura&quot;</target>
        </trans-unit>
        <trans-unit id="9d60c4371be21d86536dde002f367ff6823e46b0" translate="yes" xml:space="preserve">
          <source>Calendar types are used to specify calendar systems for which the &lt;a href=&quot;calendarnameprovider#getDisplayName-java.lang.String-int-int-int-java.util.Locale-&quot;&gt;&lt;code&gt;getDisplayName&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;calendarnameprovider#getDisplayNames-java.lang.String-int-int-java.util.Locale-&quot;&gt;&lt;code&gt;getDisplayNames&lt;/code&gt;&lt;/a&gt; methods provide calendar field value names. See &lt;a href=&quot;../calendar#getCalendarType--&quot;&gt;&lt;code&gt;Calendar.getCalendarType()&lt;/code&gt;&lt;/a&gt; for details.</source>
          <target state="translated">달력 유형은 &lt;a href=&quot;calendarnameprovider#getDisplayName-java.lang.String-int-int-int-java.util.Locale-&quot;&gt; &lt;code&gt;getDisplayName&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;calendarnameprovider#getDisplayNames-java.lang.String-int-int-java.util.Locale-&quot;&gt; &lt;code&gt;getDisplayNames&lt;/code&gt; &lt;/a&gt; 메소드가 달력 필드 값 이름을 제공 하는 달력 시스템을 지정하는 데 사용됩니다 . 자세한 내용은 &lt;a href=&quot;../calendar#getCalendarType--&quot;&gt; &lt;code&gt;Calendar.getCalendarType()&lt;/code&gt; &lt;/a&gt; 을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="bbe18980986baa80c720d6348cebe4df6aea0ab1" translate="yes" xml:space="preserve">
          <source>Calendar.Builder</source>
          <target state="translated">Calendar.Builder</target>
        </trans-unit>
        <trans-unit id="f66ed928022896c071c8297262418b1221c52fa5" translate="yes" xml:space="preserve">
          <source>Calendar.Builder.build()</source>
          <target state="translated">Calendar.Builder.build()</target>
        </trans-unit>
        <trans-unit id="fcacc3ac9885504a842e34b8b4ee74c9fb3c961c" translate="yes" xml:space="preserve">
          <source>Calendar.Builder.set()</source>
          <target state="translated">Calendar.Builder.set()</target>
        </trans-unit>
        <trans-unit id="8972ae986162aeacf59401b569afaa62485a6204" translate="yes" xml:space="preserve">
          <source>Calendar.Builder.setCalendarType()</source>
          <target state="translated">Calendar.Builder.setCalendarType()</target>
        </trans-unit>
        <trans-unit id="be0278242f1c501cbba596f420215cd8ccf43184" translate="yes" xml:space="preserve">
          <source>Calendar.Builder.setDate()</source>
          <target state="translated">Calendar.Builder.setDate()</target>
        </trans-unit>
        <trans-unit id="d7383e2f5a5e278116c7454a76c1dce67f4f3477" translate="yes" xml:space="preserve">
          <source>Calendar.Builder.setFields()</source>
          <target state="translated">Calendar.Builder.setFields()</target>
        </trans-unit>
        <trans-unit id="17d97614ffd7d4f8ed8cd555f6d169a978aebd0f" translate="yes" xml:space="preserve">
          <source>Calendar.Builder.setInstant()</source>
          <target state="translated">Calendar.Builder.setInstant()</target>
        </trans-unit>
        <trans-unit id="484733418f11f8feafd0e4c32883e3f9f42cb2ba" translate="yes" xml:space="preserve">
          <source>Calendar.Builder.setLenient()</source>
          <target state="translated">Calendar.Builder.setLenient()</target>
        </trans-unit>
        <trans-unit id="e0908b685838307ad4add91f5e98694d45be7f41" translate="yes" xml:space="preserve">
          <source>Calendar.Builder.setLocale()</source>
          <target state="translated">Calendar.Builder.setLocale()</target>
        </trans-unit>
        <trans-unit id="7843f3516d8a372427749c2282bcb12b7e33ae1e" translate="yes" xml:space="preserve">
          <source>Calendar.Builder.setTimeOfDay()</source>
          <target state="translated">Calendar.Builder.setTimeOfDay()</target>
        </trans-unit>
        <trans-unit id="8e18d3509133ff9830e4cf762893cbb0e697fede" translate="yes" xml:space="preserve">
          <source>Calendar.Builder.setTimeZone()</source>
          <target state="translated">Calendar.Builder.setTimeZone()</target>
        </trans-unit>
        <trans-unit id="f6b5e716f4dac0d0a845e202c367aea180d3d704" translate="yes" xml:space="preserve">
          <source>Calendar.Builder.setWeekDate()</source>
          <target state="translated">Calendar.Builder.setWeekDate()</target>
        </trans-unit>
        <trans-unit id="c353a275b5d612cdde933b61ab817beba2755a90" translate="yes" xml:space="preserve">
          <source>Calendar.Builder.setWeekDefinition()</source>
          <target state="translated">Calendar.Builder.setWeekDefinition()</target>
        </trans-unit>
        <trans-unit id="eb443dc5a5d82a8a2c2aa5c6edd7f67881e37278" translate="yes" xml:space="preserve">
          <source>Calendar.add()</source>
          <target state="translated">Calendar.add()</target>
        </trans-unit>
        <trans-unit id="ba5316b6310e00d0f596b441ed47f49dbb30208c" translate="yes" xml:space="preserve">
          <source>Calendar.after()</source>
          <target state="translated">Calendar.after()</target>
        </trans-unit>
        <trans-unit id="f023b017f819571eb4f490b43af9ea6753a6a3f2" translate="yes" xml:space="preserve">
          <source>Calendar.before()</source>
          <target state="translated">Calendar.before()</target>
        </trans-unit>
        <trans-unit id="f678672ca8c36a2cfe9972292be910d6740b4143" translate="yes" xml:space="preserve">
          <source>Calendar.clear()</source>
          <target state="translated">Calendar.clear()</target>
        </trans-unit>
        <trans-unit id="4e52c18245c66260965d64a1e8a231dc97d0dab5" translate="yes" xml:space="preserve">
          <source>Calendar.clone()</source>
          <target state="translated">Calendar.clone()</target>
        </trans-unit>
        <trans-unit id="9250e486147c5999bf08638d4226a8f20003c11e" translate="yes" xml:space="preserve">
          <source>Calendar.compareTo()</source>
          <target state="translated">Calendar.compareTo()</target>
        </trans-unit>
        <trans-unit id="d69277bba72c62007c3d251828dba6b4e4487d35" translate="yes" xml:space="preserve">
          <source>Calendar.complete()</source>
          <target state="translated">Calendar.complete()</target>
        </trans-unit>
        <trans-unit id="ebcf86060051cbd8f7b4d43295cdd441fe58af81" translate="yes" xml:space="preserve">
          <source>Calendar.computeFields()</source>
          <target state="translated">Calendar.computeFields()</target>
        </trans-unit>
        <trans-unit id="901ecdf0f16ca641b96517a1387a382bb53c73d2" translate="yes" xml:space="preserve">
          <source>Calendar.computeTime()</source>
          <target state="translated">Calendar.computeTime()</target>
        </trans-unit>
        <trans-unit id="6d25567ac615e3aced1be0d4b3c2fb8b139a0ea6" translate="yes" xml:space="preserve">
          <source>Calendar.equals()</source>
          <target state="translated">Calendar.equals()</target>
        </trans-unit>
        <trans-unit id="f7e083e4ea3de5739df1c26cdf37d6d68f3da4f0" translate="yes" xml:space="preserve">
          <source>Calendar.get()</source>
          <target state="translated">Calendar.get()</target>
        </trans-unit>
        <trans-unit id="41b2c95abe77b2a3cc78bf61fd1625aa4d3e9efe" translate="yes" xml:space="preserve">
          <source>Calendar.getActualMaximum()</source>
          <target state="translated">Calendar.getActualMaximum()</target>
        </trans-unit>
        <trans-unit id="93394da5a84004ce6a7cc029f967cadf9dbf44a5" translate="yes" xml:space="preserve">
          <source>Calendar.getActualMinimum()</source>
          <target state="translated">Calendar.getActualMinimum()</target>
        </trans-unit>
        <trans-unit id="21cdafe199cc1d7ed2141771034c789a56ea0e0b" translate="yes" xml:space="preserve">
          <source>Calendar.getAvailableCalendarTypes()</source>
          <target state="translated">Calendar.getAvailableCalendarTypes()</target>
        </trans-unit>
        <trans-unit id="995ef21fcd87ecff16f8fd39b54972787b04ee8b" translate="yes" xml:space="preserve">
          <source>Calendar.getAvailableLocales()</source>
          <target state="translated">Calendar.getAvailableLocales()</target>
        </trans-unit>
        <trans-unit id="7a0114c1b9ede20d1c809b070a0de853e2de9f7a" translate="yes" xml:space="preserve">
          <source>Calendar.getCalendarType()</source>
          <target state="translated">Calendar.getCalendarType()</target>
        </trans-unit>
        <trans-unit id="306e7e9b6c77b6e1c510f49532acb31026bf2269" translate="yes" xml:space="preserve">
          <source>Calendar.getDisplayName()</source>
          <target state="translated">Calendar.getDisplayName()</target>
        </trans-unit>
        <trans-unit id="9662f04088a9dc42a44266a2bb2f5f606801be6c" translate="yes" xml:space="preserve">
          <source>Calendar.getDisplayNames()</source>
          <target state="translated">Calendar.getDisplayNames()</target>
        </trans-unit>
        <trans-unit id="bc70062b622c0db100399ae08dea7380401b1cde" translate="yes" xml:space="preserve">
          <source>Calendar.getFirstDayOfWeek()</source>
          <target state="translated">Calendar.getFirstDayOfWeek()</target>
        </trans-unit>
        <trans-unit id="086fbfe7424d215020f0e39c6a911b765b220e2c" translate="yes" xml:space="preserve">
          <source>Calendar.getGreatestMinimum()</source>
          <target state="translated">Calendar.getGreatestMinimum()</target>
        </trans-unit>
        <trans-unit id="5cf9f76b73a79981e62b58782904de7230d43da7" translate="yes" xml:space="preserve">
          <source>Calendar.getInstance()</source>
          <target state="translated">Calendar.getInstance()</target>
        </trans-unit>
        <trans-unit id="f8537318b7b57568a3c4332d0dbc1362c40d7daf" translate="yes" xml:space="preserve">
          <source>Calendar.getLeastMaximum()</source>
          <target state="translated">Calendar.getLeastMaximum()</target>
        </trans-unit>
        <trans-unit id="5b06dc74f29766a945091e562fb510a34241eb85" translate="yes" xml:space="preserve">
          <source>Calendar.getMaximum()</source>
          <target state="translated">Calendar.getMaximum()</target>
        </trans-unit>
        <trans-unit id="34dc86053c36ed47c0c3475a0ea81acd59e8b289" translate="yes" xml:space="preserve">
          <source>Calendar.getMinimalDaysInFirstWeek()</source>
          <target state="translated">Calendar.getMinimalDaysInFirstWeek()</target>
        </trans-unit>
        <trans-unit id="396f43a8c4c7a6ecc54c467bdb1173398b2d50cc" translate="yes" xml:space="preserve">
          <source>Calendar.getMinimum()</source>
          <target state="translated">Calendar.getMinimum()</target>
        </trans-unit>
        <trans-unit id="81ae6f704ba5ecad9b6bded8177c673f4e08340e" translate="yes" xml:space="preserve">
          <source>Calendar.getTime()</source>
          <target state="translated">Calendar.getTime()</target>
        </trans-unit>
        <trans-unit id="0312da773aeb66b64e91de9cec19228cccb580b4" translate="yes" xml:space="preserve">
          <source>Calendar.getTimeInMillis()</source>
          <target state="translated">Calendar.getTimeInMillis()</target>
        </trans-unit>
        <trans-unit id="0a3087878eb19b9e73abc4ccb99f0339c9f7509d" translate="yes" xml:space="preserve">
          <source>Calendar.getTimeZone()</source>
          <target state="translated">Calendar.getTimeZone()</target>
        </trans-unit>
        <trans-unit id="04dc0b9a9b836ec73534db5bb6f6c9d03a71d3dc" translate="yes" xml:space="preserve">
          <source>Calendar.getWeekYear()</source>
          <target state="translated">Calendar.getWeekYear()</target>
        </trans-unit>
        <trans-unit id="ed2ba99246f80066d2580293993c486112652625" translate="yes" xml:space="preserve">
          <source>Calendar.getWeeksInWeekYear()</source>
          <target state="translated">Calendar.getWeeksInWeekYear()</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
