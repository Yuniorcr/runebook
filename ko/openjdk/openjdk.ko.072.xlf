<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="openjdk">
    <body>
      <group id="openjdk">
        <trans-unit id="1316aaf79aa8ed066c90c951ce69fdcd306a3f99" translate="yes" xml:space="preserve">
          <source>This class represents a Socket Address with no protocol attachment. As an abstract class, it is meant to be subclassed with a specific, protocol dependent, implementation.</source>
          <target state="translated">이 클래스는 프로토콜 첨부가없는 소켓 주소를 나타냅니다. 추상 클래스로서 특정 프로토콜에 따라 구현하여 서브 클래 싱됩니다.</target>
        </trans-unit>
        <trans-unit id="b87ebd3f5b6b1ce876cdd22e38870c99fa39df28" translate="yes" xml:space="preserve">
          <source>This class represents a builder that creates a default &lt;a href=&quot;mbeanserver&quot;&gt;&lt;code&gt;MBeanServer&lt;/code&gt;&lt;/a&gt; implementation.</source>
          <target state="translated">이 클래스는 기본 &lt;a href=&quot;mbeanserver&quot;&gt; &lt;code&gt;MBeanServer&lt;/code&gt; &lt;/a&gt; 구현 을 작성하는 빌더를 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="b2a46dd854d82a07d4416b4b92a199cbbe5b71df" translate="yes" xml:space="preserve">
          <source>This class represents a builder that creates a default &lt;a href=&quot;mbeanserver&quot;&gt;&lt;code&gt;MBeanServer&lt;/code&gt;&lt;/a&gt; implementation. The JMX &lt;a href=&quot;mbeanserverfactory&quot;&gt;&lt;code&gt;MBeanServerFactory&lt;/code&gt;&lt;/a&gt; allows applications to provide their custom MBeanServer implementation by providing a subclass of this class.</source>
          <target state="translated">이 클래스는 기본 &lt;a href=&quot;mbeanserver&quot;&gt; &lt;code&gt;MBeanServer&lt;/code&gt; &lt;/a&gt; 구현 을 작성하는 빌더를 나타냅니다 . JMX &lt;a href=&quot;mbeanserverfactory&quot;&gt; &lt;code&gt;MBeanServerFactory&lt;/code&gt; &lt;/a&gt; 는 어플리케이션이이 클래스의 서브 클래스를 제공함으로써 사용자 정의 MBeanServer 구현을 제공 할 수있게합니다.</target>
        </trans-unit>
        <trans-unit id="d3aadb5888413b5189a8637523b51a069a39530d" translate="yes" xml:space="preserve">
          <source>This class represents a composite name -- a sequence of component names spanning multiple namespaces.</source>
          <target state="translated">이 클래스는 복합 이름 (여러 네임 스페이스에 걸쳐있는 일련의 구성 요소 이름)을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="0c9964d123ae70169128ba69f435316bc6d6e719" translate="yes" xml:space="preserve">
          <source>This class represents a composite name -- a sequence of component names spanning multiple namespaces. Each component is a string name from the namespace of a naming system. If the component comes from a hierarchical namespace, that component can be further parsed into its atomic parts by using the CompoundName class.</source>
          <target state="translated">이 클래스는 복합 이름 (여러 네임 스페이스에 걸쳐있는 일련의 구성 요소 이름)을 나타냅니다. 각 구성 요소는 명명 시스템의 네임 스페이스에서 가져온 문자열 이름입니다. 구성 요소가 계층 네임 스페이스에서 제공되는 경우 CompoundName 클래스를 사용하여 해당 구성 요소를 원자 부분으로 추가 구문 분석 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b58d69688121f64751f830087f078a9f0dc6eaf6" translate="yes" xml:space="preserve">
          <source>This class represents a compound name -- a name from a hierarchical name space.</source>
          <target state="translated">이 클래스는 복합 이름 (계층 적 이름 공간의 이름)을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="4e7f905c66689d054fc2d3da806e4f5494d8dbcd" translate="yes" xml:space="preserve">
          <source>This class represents a compound name -- a name from a hierarchical name space. Each component in a compound name is an atomic name.</source>
          <target state="translated">이 클래스는 복합 이름 (계층 적 이름 공간의 이름)을 나타냅니다. 복합 이름의 각 구성 요소는 원자 이름입니다.</target>
        </trans-unit>
        <trans-unit id="7070f171f3fc726c6ecd3521f24ea6e3dcdef0bd" translate="yes" xml:space="preserve">
          <source>This class represents a datagram packet.</source>
          <target state="translated">이 클래스는 데이터 그램 패킷을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="17470ad631260836eb75c7506c604373609c991d" translate="yes" xml:space="preserve">
          <source>This class represents a distinguished name as specified by &lt;a href=&quot;http://www.ietf.org/rfc/rfc2253.txt&quot;&gt;RFC 2253&lt;/a&gt;.</source>
          <target state="translated">이 클래스는 &lt;a href=&quot;http://www.ietf.org/rfc/rfc2253.txt&quot;&gt;RFC 2253에&lt;/a&gt; 의해 지정된 식별 명을 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="e46441b22c9e980ce1d9c4925d4b185f7df9afdb" translate="yes" xml:space="preserve">
          <source>This class represents a distinguished name as specified by &lt;a href=&quot;http://www.ietf.org/rfc/rfc2253.txt&quot;&gt;RFC 2253&lt;/a&gt;. A distinguished name, or DN, is composed of an ordered list of components called &lt;em&gt;relative distinguished name&lt;/em&gt;s, or RDNs. Details of a DN's syntax are described in RFC 2253.</source>
          <target state="translated">이 클래스는 &lt;a href=&quot;http://www.ietf.org/rfc/rfc2253.txt&quot;&gt;RFC 2253에&lt;/a&gt; 의해 지정된 식별 명을 나타냅니다 . 식별 이름 또는 DN은 &lt;em&gt;상대 식별 이름&lt;/em&gt; 또는 RDN 이라고하는 정렬 된 구성 요소 목록으로 구성 됩니다. DN의 구문에 대한 자세한 내용은 RFC 2253에 설명되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="4123c703847205565ff309b83324f6af0bd57e89" translate="yes" xml:space="preserve">
          <source>This class represents a factory for secret keys.</source>
          <target state="translated">이 클래스는 비밀 키의 팩토리를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="2a79cf3f9125637abeb8c6c4a9c8dd6b2f360844" translate="yes" xml:space="preserve">
          <source>This class represents a heterogeneous collection of Permissions.</source>
          <target state="translated">이 클래스는 이기종 권한 컬렉션을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="7cac7ca93555f6887e8043bef23dc35a20ce7561" translate="yes" xml:space="preserve">
          <source>This class represents a heterogeneous collection of Permissions. That is, it contains different types of Permission objects, organized into PermissionCollections. For example, if any &lt;code&gt;java.io.FilePermission&lt;/code&gt; objects are added to an instance of this class, they are all stored in a single PermissionCollection. It is the PermissionCollection returned by a call to the &lt;code&gt;newPermissionCollection&lt;/code&gt; method in the FilePermission class. Similarly, any &lt;code&gt;java.lang.RuntimePermission&lt;/code&gt; objects are stored in the PermissionCollection returned by a call to the &lt;code&gt;newPermissionCollection&lt;/code&gt; method in the RuntimePermission class. Thus, this class represents a collection of PermissionCollections.</source>
          <target state="translated">이 클래스는 이기종 권한 컬렉션을 나타냅니다. 즉, PermissionCollections로 구성된 다양한 유형의 Permission 객체를 포함합니다. 예를 들어, &lt;code&gt;java.io.FilePermission&lt;/code&gt; 객체가이 클래스의 인스턴스에 추가되면 모두 단일 PermissionCollection에 저장됩니다. FilePermission 클래스 의 &lt;code&gt;newPermissionCollection&lt;/code&gt; 메소드 호출에 의해 리턴 된 PermissionCollection 입니다. 마찬가지로, &lt;code&gt;java.lang.RuntimePermission&lt;/code&gt; 객체는 RuntimePermission 클래스 의 &lt;code&gt;newPermissionCollection&lt;/code&gt; 메서드 호출에 의해 반환 된 PermissionCollection에 저장됩니다 . 따라서이 클래스는 PermissionCollections의 컬렉션을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="196aec2a3f42120cec5ed4d8a56bb2fee12941d9" translate="yes" xml:space="preserve">
          <source>This class represents a modification item.</source>
          <target state="translated">이 클래스는 수정 항목을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="ed8cca684d581c46d5473f4486cfcf1d4e6d3c5a" translate="yes" xml:space="preserve">
          <source>This class represents a modification item. It consists of a modification code and an attribute on which to operate.</source>
          <target state="translated">이 클래스는 수정 항목을 나타냅니다. 수정 코드와 작동 할 속성으로 구성됩니다.</target>
        </trans-unit>
        <trans-unit id="e5b81e8b48823640d878d6aa01f1ee4dc0ba4995" translate="yes" xml:space="preserve">
          <source>This class represents a name-to-object binding found in a context.</source>
          <target state="translated">이 클래스는 컨텍스트에서 발견 된 이름 대 오브젝트 바인딩을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="beb0e3a08a5745f02177b59fc85d03cc8b67bd41" translate="yes" xml:space="preserve">
          <source>This class represents a proxy setting, typically a type (http, socks) and a socket address.</source>
          <target state="translated">이 클래스는 일반적으로 유형 (http, socks) 및 소켓 주소와 같은 프록시 설정을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="e6b25c979d575eecf8dfc1ae8805f535fe0e97f2" translate="yes" xml:space="preserve">
          <source>This class represents a proxy setting, typically a type (http, socks) and a socket address. A &lt;code&gt;Proxy&lt;/code&gt; is an immutable object.</source>
          <target state="translated">이 클래스는 일반적으로 유형 (http, socks) 및 소켓 주소와 같은 프록시 설정을 나타냅니다. &lt;code&gt;Proxy&lt;/code&gt; 불변 오브젝트이다.</target>
        </trans-unit>
        <trans-unit id="584a1ab504a2941aae8807e7242173adc00c09cc" translate="yes" xml:space="preserve">
          <source>This class represents a public or private key in encoded format.</source>
          <target state="translated">이 클래스는 공개 또는 개인 키를 인코딩 된 형식으로 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="ecbc41d04711c9c6d7b2547e265b1c6900bdb022" translate="yes" xml:space="preserve">
          <source>This class represents a reference to an object that is found outside of the naming/directory system.</source>
          <target state="translated">이 클래스는 네이밍 / 디렉토리 시스템 외부에있는 객체에 대한 참조를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="71f3a9d828a7ec07b77c49c8041b7347841243b0" translate="yes" xml:space="preserve">
          <source>This class represents a relative distinguished name, or RDN, which is a component of a distinguished name as specified by &lt;a href=&quot;http://www.ietf.org/rfc/rfc2253.txt&quot;&gt;RFC 2253&lt;/a&gt;.</source>
          <target state="translated">이 클래스는 &lt;a href=&quot;http://www.ietf.org/rfc/rfc2253.txt&quot;&gt;RFC 2253에&lt;/a&gt; 의해 지정된 고유 이름의 구성 요소 인 RDN을 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="8573e6c2900df8bfdda96524318d1a680bb713e4" translate="yes" xml:space="preserve">
          <source>This class represents a relative distinguished name, or RDN, which is a component of a distinguished name as specified by &lt;a href=&quot;http://www.ietf.org/rfc/rfc2253.txt&quot;&gt;RFC 2253&lt;/a&gt;. An example of an RDN is &quot;OU=Sales+CN=J.Smith&quot;. In this example, the RDN consist of multiple attribute type/value pairs. The RDN is parsed as described in the class description for &lt;a href=&quot;ldapname&quot;&gt;&lt;code&gt;&lt;code&gt;LdapName&lt;/code&gt;&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 클래스는 &lt;a href=&quot;http://www.ietf.org/rfc/rfc2253.txt&quot;&gt;RFC 2253에&lt;/a&gt; 의해 지정된 고유 이름의 구성 요소 인 RDN을 나타냅니다 . RDN의 예는 &quot;OU = Sales + CN = J.Smith&quot;입니다. 이 예에서 RDN은 여러 속성 유형 / 값 쌍으로 구성됩니다. RDN은 &lt;a href=&quot;ldapname&quot;&gt; &lt;code&gt;&lt;code&gt;LdapName&lt;/code&gt;&lt;/code&gt; &lt;/a&gt; 의 클래스 설명에 설명 된대로 구문 분석됩니다 .</target>
        </trans-unit>
        <trans-unit id="a02a9f5fbadbb1f07365f04a62e23ad2829f8526" translate="yes" xml:space="preserve">
          <source>This class represents a scope for identities. It is an Identity itself, and therefore has a name and can have a scope. It can also optionally have a public key and associated certificates.</source>
          <target state="translated">이 클래스는 ID의 범위를 나타냅니다. ID 자체이므로 이름이 있으며 범위를 가질 수 있습니다. 선택적으로 공개 키 및 관련 인증서를 가질 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="ca95ec8feb051b649b867d0766ff6d4d848acea9" translate="yes" xml:space="preserve">
          <source>This class represents a single &lt;code&gt;LoginModule&lt;/code&gt; entry configured for the application specified in the &lt;code&gt;getAppConfigurationEntry(String appName)&lt;/code&gt; method in the &lt;code&gt;Configuration&lt;/code&gt; class.</source>
          <target state="translated">이 클래스는 &lt;code&gt;Configuration&lt;/code&gt; 클래스 의 &lt;code&gt;getAppConfigurationEntry(String appName)&lt;/code&gt; 메소드에 지정된 애플리케이션에 대해 구성된 단일 &lt;code&gt;LoginModule&lt;/code&gt; 항목을 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="297e4a49730e6d2370114e300324dda6a37bf458" translate="yes" xml:space="preserve">
          <source>This class represents a single &lt;code&gt;LoginModule&lt;/code&gt; entry configured for the application specified in the &lt;code&gt;getAppConfigurationEntry(String appName)&lt;/code&gt; method in the &lt;code&gt;Configuration&lt;/code&gt; class. Each respective &lt;code&gt;AppConfigurationEntry&lt;/code&gt; contains a &lt;code&gt;LoginModule&lt;/code&gt; name, a control flag (specifying whether this &lt;code&gt;LoginModule&lt;/code&gt; is REQUIRED, REQUISITE, SUFFICIENT, or OPTIONAL), and LoginModule-specific options. Please refer to the &lt;code&gt;Configuration&lt;/code&gt; class for more information on the different control flags and their semantics.</source>
          <target state="translated">이 클래스는 &lt;code&gt;Configuration&lt;/code&gt; 클래스 의 &lt;code&gt;getAppConfigurationEntry(String appName)&lt;/code&gt; 메소드에 지정된 애플리케이션에 대해 구성된 단일 &lt;code&gt;LoginModule&lt;/code&gt; 항목을 나타냅니다 . 각각의 각 &lt;code&gt;AppConfigurationEntry&lt;/code&gt; 에는 &lt;code&gt;LoginModule&lt;/code&gt; 이름, 제어 플래그 (이 &lt;code&gt;LoginModule&lt;/code&gt; 이 필수, REQUISITE, SUFFICIENT 또는 OPTIONAL 인지 지정 ) 및 LoginModule 관련 옵션이 있습니다. 다른 제어 플래그 및 해당 의미에 대한 자세한 정보 는 &lt;code&gt;Configuration&lt;/code&gt; 클래스를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="640d68686faefa0f361a378f82b1b0fc09bb4870" translate="yes" xml:space="preserve">
          <source>This class represents a socket for sending and receiving datagram packets.</source>
          <target state="translated">이 클래스는 데이터 그램 패킷을 송수신하기위한 소켓을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="05f074451aa9e736c72cd5d98547889c8f032150" translate="yes" xml:space="preserve">
          <source>This class represents a storage facility for cryptographic keys and certificates.</source>
          <target state="translated">이 클래스는 암호화 키 및 인증서의 저장 기능을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="45fdf96d726479eab8566d09c1911463b0630c56" translate="yes" xml:space="preserve">
          <source>This class represents access to a file or directory.</source>
          <target state="translated">이 클래스는 파일 또는 디렉토리에 대한 액세스를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="96c9ed296b295e130368c10ce172ca29da14d27c" translate="yes" xml:space="preserve">
          <source>This class represents access to a file or directory. A FilePermission consists of a pathname and a set of actions valid for that pathname.</source>
          <target state="translated">이 클래스는 파일 또는 디렉토리에 대한 액세스를 나타냅니다. FilePermission은 경로명과 해당 경로명에 유효한 조치 세트로 구성됩니다.</target>
        </trans-unit>
        <trans-unit id="6e35f7fc25369199a5888640962d3cf36c27158f" translate="yes" xml:space="preserve">
          <source>This class represents access to a network via sockets.</source>
          <target state="translated">이 클래스는 소켓을 통한 네트워크 액세스를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="4fd26ad0b54898f528e3da0fd358463440e01702" translate="yes" xml:space="preserve">
          <source>This class represents access to a network via sockets. A SocketPermission consists of a host specification and a set of &quot;actions&quot; specifying ways to connect to that host. The host is specified as</source>
          <target state="translated">이 클래스는 소켓을 통한 네트워크 액세스를 나타냅니다. SocketPermission은 호스트 사양과 해당 호스트에 연결하는 방법을 지정하는 일련의 &quot;작업&quot;으로 구성됩니다. 호스트는 다음과 같이 지정됩니다</target>
        </trans-unit>
        <trans-unit id="35c02ac1117024cec60ba5833d97c4503db7dbbd" translate="yes" xml:space="preserve">
          <source>This class represents an &lt;code&gt;X500PrivateCredential&lt;/code&gt;.</source>
          <target state="translated">이 클래스는 &lt;code&gt;X500PrivateCredential&lt;/code&gt; 을 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="597b1bf46aeb0968dd77f5a6c471fe96e4f74091" translate="yes" xml:space="preserve">
          <source>This class represents an &lt;code&gt;X500PrivateCredential&lt;/code&gt;. It associates an X.509 certificate, corresponding private key and the KeyStore alias used to reference that exact key pair in the KeyStore. This enables looking up the private credentials for an X.500 principal in a subject.</source>
          <target state="translated">이 클래스는 &lt;code&gt;X500PrivateCredential&lt;/code&gt; 을 나타냅니다 . X.509 인증서, 해당 개인 키 및 키 저장소에서 해당 키 쌍을 참조하는 데 사용되는 키 저장소 별명을 연관시킵니다. 이를 통해 주제에서 X.500 프린시 펄의 개인 신임 정보를 찾을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5da08fc27084a8aabc79a56c347ed1adb802e76d" translate="yes" xml:space="preserve">
          <source>This class represents an Internet Protocol (IP) address.</source>
          <target state="translated">이 클래스는 인터넷 프로토콜 (IP) 주소를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="bef48e6b1ba57a7171d54341435b8a0f4108e35c" translate="yes" xml:space="preserve">
          <source>This class represents an Internet Protocol version 4 (IPv4) address.</source>
          <target state="translated">이 클래스는 IPv4 (Internet Protocol version 4) 주소를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="4404510f4c4b02813ee1c30570ebef462e7dd942" translate="yes" xml:space="preserve">
          <source>This class represents an Internet Protocol version 4 (IPv4) address. Defined by &lt;a href=&quot;http://www.ietf.org/rfc/rfc790.txt&quot;&gt; &lt;i&gt;RFC 790: Assigned Numbers&lt;/i&gt;&lt;/a&gt;, &lt;a href=&quot;http://www.ietf.org/rfc/rfc1918.txt&quot;&gt; &lt;i&gt;RFC 1918: Address Allocation for Private Internets&lt;/i&gt;&lt;/a&gt;, and &lt;a href=&quot;http://www.ietf.org/rfc/rfc2365.txt&quot;&gt;&lt;i&gt;RFC 2365: Administratively Scoped IP Multicast&lt;/i&gt;&lt;/a&gt;</source>
          <target state="translated">이 클래스는 IPv4 (Internet Protocol version 4) 주소를 나타냅니다. &lt;a href=&quot;http://www.ietf.org/rfc/rfc790.txt&quot;&gt;&lt;i&gt;RFC 790에&lt;/i&gt;&lt;/a&gt; 의해 정의 됨 &lt;i&gt;: 할당 번호&lt;/i&gt; , &lt;a href=&quot;http://www.ietf.org/rfc/rfc1918.txt&quot;&gt;&lt;i&gt;RFC 1918 : 개인 인터넷 주소 할당&lt;/i&gt;&lt;/a&gt; 및 &lt;a href=&quot;http://www.ietf.org/rfc/rfc2365.txt&quot;&gt;&lt;i&gt;RFC 2365 : 관리 범위의 IP 멀티 캐스트&lt;/i&gt;&lt;/a&gt; &lt;i&gt;&lt;/i&gt; &lt;i&gt;&lt;/i&gt;&lt;i&gt;&lt;/i&gt;</target>
        </trans-unit>
        <trans-unit id="9ca47090f8419b40c56f70b0bafd476aff2a4973" translate="yes" xml:space="preserve">
          <source>This class represents an Internet Protocol version 6 (IPv6) address.</source>
          <target state="translated">이 클래스는 IPv6 (Internet Protocol version 6) 주소를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="2d5bbebbe427bab598fb25281b3b248f813f1b40" translate="yes" xml:space="preserve">
          <source>This class represents an Internet Protocol version 6 (IPv6) address. Defined by &lt;a href=&quot;http://www.ietf.org/rfc/rfc2373.txt&quot;&gt; &lt;i&gt;RFC 2373: IP Version 6 Addressing Architecture&lt;/i&gt;&lt;/a&gt;.</source>
          <target state="translated">이 클래스는 IPv6 (Internet Protocol version 6) 주소를 나타냅니다. &lt;a href=&quot;http://www.ietf.org/rfc/rfc2373.txt&quot;&gt;&lt;i&gt;RFC 2373에&lt;/i&gt;&lt;/a&gt; 의해 정의 됨 &lt;i&gt;: IP 버전 6 주소 지정 아키텍처&lt;/i&gt; . &lt;i&gt;&lt;/i&gt;</target>
        </trans-unit>
        <trans-unit id="a8155b02899707f88ae3edafcc48b6656d828c0c" translate="yes" xml:space="preserve">
          <source>This class represents an X.500 &lt;code&gt;Principal&lt;/code&gt;.</source>
          <target state="translated">이 클래스는 X.500 &lt;code&gt;Principal&lt;/code&gt; 를 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="ea8fd17c39f18d83341c0e789af157690cbf1fa2" translate="yes" xml:space="preserve">
          <source>This class represents an X.500 &lt;code&gt;Principal&lt;/code&gt;. &lt;code&gt;X500Principal&lt;/code&gt;s are represented by distinguished names such as &quot;CN=Duke, OU=JavaSoft, O=Sun Microsystems, C=US&quot;.</source>
          <target state="translated">이 클래스는 X.500 &lt;code&gt;Principal&lt;/code&gt; 를 나타냅니다 . &lt;code&gt;X500Principal&lt;/code&gt; 은 &quot;CN = Duke, OU = JavaSoft, O = Sun Microsystems, C = US&quot;와 같은 고유 이름으로 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="9c49cfbbfc4d25b023035a9ec5edf2c898f71c3c" translate="yes" xml:space="preserve">
          <source>This class represents an error that has occurred when using SASL.</source>
          <target state="translated">이 클래스는 SASL을 사용할 때 발생한 오류를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="b7718890ea368072fc569ea892e93571154c3cfc" translate="yes" xml:space="preserve">
          <source>This class represents an event fired by a naming/directory service.</source>
          <target state="translated">이 클래스는 네이밍 / 디렉토리 서비스에 의해 발생 된 이벤트를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="3b0fdd1a298d702aa16a46f65ffe68bf1ab3fe87" translate="yes" xml:space="preserve">
          <source>This class represents an event fired in response to an unsolicited notification sent by the LDAP server.</source>
          <target state="translated">이 클래스는 LDAP 서버가 보낸 요청하지 않은 알림에 대한 응답으로 발생한 이벤트를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="8daaad7e039d9492107335b3b2a5aa61683b8d41" translate="yes" xml:space="preserve">
          <source>This class represents an event fired when the procedures/processes used to collect information for notifying listeners of &lt;code&gt;NamingEvent&lt;/code&gt;s threw a &lt;code&gt;NamingException&lt;/code&gt;.</source>
          <target state="translated">이 클래스는 리스너에게 &lt;code&gt;NamingEvent&lt;/code&gt; 에게 &lt;code&gt;NamingException&lt;/code&gt; 을 통지 한 것을 통지하기위한 정보를 수집하기 위해서 사용되는 프로 시저 / 프로세스가 발생했을 때에 발생한 이벤트를 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="44004aad051bbbef9d2ee95d6412eee8c8b2110f" translate="yes" xml:space="preserve">
          <source>This class represents an event fired when the procedures/processes used to collect information for notifying listeners of &lt;code&gt;NamingEvent&lt;/code&gt;s threw a &lt;code&gt;NamingException&lt;/code&gt;. This can happen, for example, if the server which the listener is using aborts subsequent to the &lt;code&gt;addNamingListener()&lt;/code&gt; call.</source>
          <target state="translated">이 클래스는 리스너에게 &lt;code&gt;NamingEvent&lt;/code&gt; 에게 &lt;code&gt;NamingException&lt;/code&gt; 을 통지 한 것을 통지하기위한 정보를 수집하기 위해서 사용되는 프로 시저 / 프로세스가 발생했을 때에 발생한 이벤트를 나타냅니다 . 예를 들어, 리스너가 사용중인 서버가 &lt;code&gt;addNamingListener()&lt;/code&gt; 호출 이후 중단되는 경우에 발생할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="6b447b0c5f978595c0b42ee443fd1873d2a5f1fa" translate="yes" xml:space="preserve">
          <source>This class represents an item in the NamingEnumeration returned as a result of the DirContext.search() methods.</source>
          <target state="translated">이 클래스는 DirContext.search () 메서드의 결과로 반환 된 NamingEnumeration의 항목을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="9d9fafa34e9b2f65d71ae93644092567545924f8" translate="yes" xml:space="preserve">
          <source>This class represents an observable object, or &quot;data&quot; in the model-view paradigm.</source>
          <target state="translated">이 클래스는 관찰 가능한 객체 또는 모델 뷰 패러다임의 &quot;데이터&quot;를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="ad081c6f7a7669b9fcaeea37a39cc37f50a30806" translate="yes" xml:space="preserve">
          <source>This class represents an observable object, or &quot;data&quot; in the model-view paradigm. It can be subclassed to represent an object that the application wants to have observed.</source>
          <target state="translated">이 클래스는 관찰 가능한 객체 또는 모델 뷰 패러다임의 &quot;데이터&quot;를 나타냅니다. 어플리케이션이 관찰하고자하는 객체를 나타 내기 위해 서브 클래 싱 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="83e1f6c7452b250bbcc17b56d13f0c1745763ae6" translate="yes" xml:space="preserve">
          <source>This class represents identities: real-world objects such as people, companies or organizations whose identities can be authenticated using their public keys. Identities may also be more abstract (or concrete) constructs, such as daemon threads or smart cards.</source>
          <target state="translated">이 클래스는 ID를 나타냅니다. 사람, 회사 또는 공개 키를 사용하여 ID를 인증 할 수있는 조직과 같은 실제 개체입니다. 또한 ID는 데몬 스레드 또는 스마트 카드와 같은보다 추상적 인 (또는 구체적인) 구성 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c3d4a94307b5f9b3ebbdf2b235b7dc11b06744c9" translate="yes" xml:space="preserve">
          <source>This class represents the ASN.1 encoding of a private key, encoded according to the ASN.1 type &lt;code&gt;PrivateKeyInfo&lt;/code&gt;.</source>
          <target state="translated">이 클래스는 ASN.1 형 &lt;code&gt;PrivateKeyInfo&lt;/code&gt; 에 따라 encode 된 비공개 키의 ASN.1 인코딩을 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="86e9b50884031de0a10cba5fe9d7ce0103ddb7c0" translate="yes" xml:space="preserve">
          <source>This class represents the ASN.1 encoding of a private key, encoded according to the ASN.1 type &lt;code&gt;PrivateKeyInfo&lt;/code&gt;. The &lt;code&gt;PrivateKeyInfo&lt;/code&gt; syntax is defined in the PKCS#8 standard as follows:</source>
          <target state="translated">이 클래스는 ASN.1 형 &lt;code&gt;PrivateKeyInfo&lt;/code&gt; 에 따라 encode 된 비공개 키의 ASN.1 인코딩을 나타냅니다 . &lt;code&gt;PrivateKeyInfo&lt;/code&gt; 로의 다음과 같은 구문이 PKCS # 8 표준에 정의되어 있습니다 :</target>
        </trans-unit>
        <trans-unit id="60979597056c3ac16ebe813c087f2ea6ef60c9b0" translate="yes" xml:space="preserve">
          <source>This class represents the ASN.1 encoding of a public key, encoded according to the ASN.1 type &lt;code&gt;SubjectPublicKeyInfo&lt;/code&gt;.</source>
          <target state="translated">이 클래스는 ASN.1 형 &lt;code&gt;SubjectPublicKeyInfo&lt;/code&gt; 에 따라 encode 된 공개 키의 ASN.1 인코딩을 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="f238e432344ac7eb0d323154e90ddb22b3a9be5e" translate="yes" xml:space="preserve">
          <source>This class represents the ASN.1 encoding of a public key, encoded according to the ASN.1 type &lt;code&gt;SubjectPublicKeyInfo&lt;/code&gt;. The &lt;code&gt;SubjectPublicKeyInfo&lt;/code&gt; syntax is defined in the X.509 standard as follows:</source>
          <target state="translated">이 클래스는 ASN.1 형 &lt;code&gt;SubjectPublicKeyInfo&lt;/code&gt; 에 따라 encode 된 공개 키의 ASN.1 인코딩을 나타냅니다 . &lt;code&gt;SubjectPublicKeyInfo&lt;/code&gt; 로의 다음과 같은 구문은 X.509 표준에 정의되어 있습니다 :</target>
        </trans-unit>
        <trans-unit id="aec0b89cdf0c1c0c3879f8289fa96387f53ab0c1" translate="yes" xml:space="preserve">
          <source>This class represents the address of a communications end-point.</source>
          <target state="translated">이 클래스는 통신 엔드 포인트의 주소를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="2cc0e4e13d261225d7d5ecad06612f2348dffe71" translate="yes" xml:space="preserve">
          <source>This class represents the address of a communications end-point. It consists of a type that describes the communication mechanism and an address contents determined by an RefAddr subclass.</source>
          <target state="translated">이 클래스는 통신 엔드 포인트의 주소를 나타냅니다. 통신 메커니즘을 설명하는 유형과 RefAddr 서브 클래스에 의해 결정된 주소 내용으로 구성됩니다.</target>
        </trans-unit>
        <trans-unit id="09e8d15b311a50876d340865b118748ac086830c" translate="yes" xml:space="preserve">
          <source>This class represents the binary form of the address of a communications end-point.</source>
          <target state="translated">이 클래스는 통신 끝점 주소의 이진 형식을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="544dd14dbdd06652ace8bec1484310b9c0ef055c" translate="yes" xml:space="preserve">
          <source>This class represents the contents of the &lt;code&gt;MLET&lt;/code&gt; tag.</source>
          <target state="translated">이 클래스는 &lt;code&gt;MLET&lt;/code&gt; 태그 의 내용을 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="ed8feef07eaf8295b20b9f1c888e6c0187c5e90a" translate="yes" xml:space="preserve">
          <source>This class represents the contents of the &lt;code&gt;MLET&lt;/code&gt; tag. It can be consulted by a subclass of &lt;a href=&quot;mlet&quot;&gt;&lt;code&gt;MLet&lt;/code&gt;&lt;/a&gt; that overrides the &lt;a href=&quot;mlet#check-java.lang.String-java.net.URL-java.lang.String-javax.management.loading.MLetContent-&quot;&gt;&lt;code&gt;MLet.check&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">이 클래스는 &lt;code&gt;MLET&lt;/code&gt; 태그 의 내용을 나타냅니다 . &lt;a href=&quot;mlet#check-java.lang.String-java.net.URL-java.lang.String-javax.management.loading.MLetContent-&quot;&gt; &lt;code&gt;MLet.check&lt;/code&gt; &lt;/a&gt; 메소드 를 대체하는 &lt;a href=&quot;mlet&quot;&gt; &lt;code&gt;MLet&lt;/code&gt; &lt;/a&gt; 의 서브 클래스에서 참조 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="fd25395d77c9ed85b0d3f717dd0fa00f0309743f" translate="yes" xml:space="preserve">
          <source>This class represents the meta data for ModelMBeans.</source>
          <target state="translated">이 클래스는 ModelMBean의 메타 데이터를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="2f2b34ddd37ace51ac7c93f6c996e35bd851f2f3" translate="yes" xml:space="preserve">
          <source>This class represents the meta data for ModelMBeans. Descriptors have been added on the meta data objects.</source>
          <target state="translated">이 클래스는 ModelMBean의 메타 데이터를 나타냅니다. 메타 데이터 개체에 설명자가 추가되었습니다.</target>
        </trans-unit>
        <trans-unit id="9575a4ba849add0fd8b33418be3743a6834c7223" translate="yes" xml:space="preserve">
          <source>This class represents the metadata set for a ModelMBean element.</source>
          <target state="translated">이 클래스는 ModelMBean 요소의 메타 데이터 세트를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="aae700f21e0212f303421dc3fee01f330acbdde1" translate="yes" xml:space="preserve">
          <source>This class represents the metadata set for a ModelMBean element. A descriptor is part of the ModelMBeanInfo, ModelMBeanNotificationInfo, ModelMBeanAttributeInfo, ModelMBeanConstructorInfo, and ModelMBeanParameterInfo.</source>
          <target state="translated">이 클래스는 ModelMBean 요소의 메타 데이터 세트를 나타냅니다. 디스크립터는 ModelMBeanInfo, ModelMBeanNotificationInfo, ModelMBeanAttributeInfo, ModelMBeanConstructorInfo 및 ModelMBeanParameterInfo의 일부입니다.</target>
        </trans-unit>
        <trans-unit id="97fb072c064abfa1e2afc74067fead2f532be446" translate="yes" xml:space="preserve">
          <source>This class represents the object name and class name pair of a binding found in a context.</source>
          <target state="translated">이 클래스는 컨텍스트에서 발견 된 바인딩의 오브젝트 이름 및 클래스 이름 쌍을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="ad812636f21fa9e17c4e941198e1db0bf39887b4" translate="yes" xml:space="preserve">
          <source>This class represents the result of resolution of a name.</source>
          <target state="translated">이 클래스는 이름 확인 결과를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="7c58737f3ddd4d9f5fe490a9a74bd744fdcfc663" translate="yes" xml:space="preserve">
          <source>This class represents the result of resolution of a name. It contains the object to which name was resolved, and the portion of the name that has not been resolved.</source>
          <target state="translated">이 클래스는 이름 확인 결과를 나타냅니다. 이름이 확인 된 개체와 확인되지 않은 이름 부분이 포함되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="38ca9ed1a37cb7b84401c77cecbd410c3e8da0d4" translate="yes" xml:space="preserve">
          <source>This class represents the set of symbols (such as the decimal separator, the grouping separator, and so on) needed by &lt;code&gt;DecimalFormat&lt;/code&gt; to format numbers.</source>
          <target state="translated">이 클래스는 숫자를 형식화하기 위해 &lt;code&gt;DecimalFormat&lt;/code&gt; 에 필요한 기호 세트 (예 : 소수 구분 기호, 그룹 구분 기호 등)를 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="48624c6e1d8a0bf6e9dc9ef7bc4796ae92729fe0" translate="yes" xml:space="preserve">
          <source>This class represents the set of symbols (such as the decimal separator, the grouping separator, and so on) needed by &lt;code&gt;DecimalFormat&lt;/code&gt; to format numbers. &lt;code&gt;DecimalFormat&lt;/code&gt; creates for itself an instance of &lt;code&gt;DecimalFormatSymbols&lt;/code&gt; from its locale data. If you need to change any of these symbols, you can get the &lt;code&gt;DecimalFormatSymbols&lt;/code&gt; object from your &lt;code&gt;DecimalFormat&lt;/code&gt; and modify it.</source>
          <target state="translated">이 클래스는 숫자를 형식화하기 위해 &lt;code&gt;DecimalFormat&lt;/code&gt; 에 필요한 기호 세트 (예 : 소수 구분 기호, 그룹 구분 기호 등)를 나타냅니다 . &lt;code&gt;DecimalFormat&lt;/code&gt; 은 자체 로케일 데이터에서 &lt;code&gt;DecimalFormatSymbols&lt;/code&gt; 인스턴스를 작성 합니다. 이러한 기호의 어떤 것인지를 변경해야하는 경우, 당신은 얻을 수 있습니다 &lt;code&gt;DecimalFormatSymbols&lt;/code&gt; 당신에서 개체 &lt;code&gt;DecimalFormat&lt;/code&gt; 하고 수정합니다.</target>
        </trans-unit>
        <trans-unit id="f265c252d89abef8cf04f968c72e0e26bf915c0c" translate="yes" xml:space="preserve">
          <source>This class represents the string form of the address of a communications end-point.</source>
          <target state="translated">이 클래스는 통신 엔드 포인트 주소의 문자열 형식을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="418dc123122202354a4ec878f1f0eea6e363c940" translate="yes" xml:space="preserve">
          <source>This class represents the string form of the address of a communications end-point. It consists of a type that describes the communication mechanism and a string contents specific to that communication mechanism. The format and interpretation of the address type and the contents of the address are based on the agreement of three parties: the client that uses the address, the object/server that can be reached using the address, and the administrator or program that creates the address.</source>
          <target state="translated">이 클래스는 통신 엔드 포인트 주소의 문자열 형식을 나타냅니다. 통신 메커니즘을 설명하는 유형과 해당 통신 메커니즘에 특정한 문자열 내용으로 구성됩니다. 주소 유형 및 주소 내용의 형식과 해석은 주소를 사용하는 클라이언트, 주소를 사용하여 도달 할 수있는 오브젝트 / 서버 및 시스템을 작성하는 관리자 또는 프로그램의 세 당사자의 동의를 기반으로합니다. 주소.</target>
        </trans-unit>
        <trans-unit id="5ede9917186009ca67d63ddb4e5d9fccd64bd7c8" translate="yes" xml:space="preserve">
          <source>This class represents the successful result of the PKIX certification path builder algorithm.</source>
          <target state="translated">이 클래스는 PKIX 인증 경로 작성기 알고리즘의 성공적인 결과를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="253d67fe79dd74684f247507a29b69b61f8d3228" translate="yes" xml:space="preserve">
          <source>This class represents the successful result of the PKIX certification path builder algorithm. All certification paths that are built and returned using this algorithm are also validated according to the PKIX certification path validation algorithm.</source>
          <target state="translated">이 클래스는 PKIX 인증 경로 작성기 알고리즘의 성공적인 결과를 나타냅니다. 이 알고리즘을 사용하여 빌드 및 리턴 된 모든 인증 경로는 PKIX 인증 경로 유효성 검증 알고리즘에 따라 유효성 검증됩니다.</target>
        </trans-unit>
        <trans-unit id="4b74bcf11374b356b27f5f1ddc676aa0f16938c3" translate="yes" xml:space="preserve">
          <source>This class represents the successful result of the PKIX certification path validation algorithm.</source>
          <target state="translated">이 클래스는 PKIX 인증 경로 유효성 검증 알고리즘의 성공적인 결과를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="ca0589fc428b1844c4faa592c6b73c76d7d378bd" translate="yes" xml:space="preserve">
          <source>This class represents the triplet (prime, exponent, and coefficient) inside RSA's OtherPrimeInfo structure, as defined in the PKCS#1 v2.1.</source>
          <target state="translated">이 클래스는 PKCS # 1 v2.1에 정의 된대로 RSA의 OtherPrimeInfo 구조 내의 삼중 항 (프라임, 지수 및 계수)을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="97545fe1e68962710e1bd66c03204757b9cf86bb" translate="yes" xml:space="preserve">
          <source>This class represents the triplet (prime, exponent, and coefficient) inside RSA's OtherPrimeInfo structure, as defined in the PKCS#1 v2.1. The ASN.1 syntax of RSA's OtherPrimeInfo is as follows:</source>
          <target state="translated">이 클래스는 PKCS # 1 v2.1에 정의 된대로 RSA의 OtherPrimeInfo 구조 내의 삼중 항 (프라임, 지수 및 계수)을 나타냅니다. RSA의 OtherPrimeInfo의 ASN.1 구문은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="a68aa2cc3807b341c15bfb324b46d7e585e6933c" translate="yes" xml:space="preserve">
          <source>This class represents whether or not a &lt;code&gt;LoginModule&lt;/code&gt; is REQUIRED, REQUISITE, SUFFICIENT or OPTIONAL.</source>
          <target state="translated">이 클래스는 &lt;code&gt;LoginModule&lt;/code&gt; 이 REQUIRED, REQUISITE, SUFFICIENT 또는 OPTIONAL 인지 여부를 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="c480371d93b15aca7a52a5a2484c2f3c5d59e4d1" translate="yes" xml:space="preserve">
          <source>This class resolves a few ambiguities found in RFC 2253 as follows:</source>
          <target state="translated">이 클래스는 RFC 2253에서 발견 된 몇 가지 모호성을 다음과 같이 해결합니다.</target>
        </trans-unit>
        <trans-unit id="b56c8ce17df32424f6ebcf8e74cce7b8e442ec97" translate="yes" xml:space="preserve">
          <source>This class serves as a parameter block to the &lt;code&gt;Instrumentation.redefineClasses&lt;/code&gt; method.</source>
          <target state="translated">이 클래스는 &lt;code&gt;Instrumentation.redefineClasses&lt;/code&gt; 메서드에 대한 매개 변수 블록 역할을합니다 .</target>
        </trans-unit>
        <trans-unit id="a413b0f033130fcf3cdb03a285fedcaeaaba2bf2" translate="yes" xml:space="preserve">
          <source>This class serves as a parameter block to the &lt;code&gt;Instrumentation.redefineClasses&lt;/code&gt; method. Serves to bind the &lt;code&gt;Class&lt;/code&gt; that needs redefining together with the new class file bytes.</source>
          <target state="translated">이 클래스는 &lt;code&gt;Instrumentation.redefineClasses&lt;/code&gt; 메서드에 대한 매개 변수 블록 역할을합니다 . 새 클래스 파일 바이트와 함께 재정의해야하는 &lt;code&gt;Class&lt;/code&gt; 를 바인딩합니다 .</target>
        </trans-unit>
        <trans-unit id="dbb2ac9bcc292de7a49627f09297504d25ad1355" translate="yes" xml:space="preserve">
          <source>This class specifies a DES key.</source>
          <target state="translated">이 클래스는 DES 키를 지정합니다.</target>
        </trans-unit>
        <trans-unit id="a22639d0bc164ea48c5f6b6d9fbfb81c97680ab6" translate="yes" xml:space="preserve">
          <source>This class specifies a DES-EDE (&quot;triple-DES&quot;) key.</source>
          <target state="translated">이 클래스는 DES-EDE ( &quot;triple-DES&quot;) 키를 지정합니다.</target>
        </trans-unit>
        <trans-unit id="d036f6c85d6ab132366e279be5ea8806f95fa666" translate="yes" xml:space="preserve">
          <source>This class specifies a DSA private key with its associated parameters.</source>
          <target state="translated">이 클래스는 관련 매개 변수와 함께 DSA 개인 키를 지정합니다.</target>
        </trans-unit>
        <trans-unit id="879837524885c3416822b41b592eca3a48cd5b73" translate="yes" xml:space="preserve">
          <source>This class specifies a DSA public key with its associated parameters.</source>
          <target state="translated">이 클래스는 관련 매개 변수와 함께 DSA 공개 키를 지정합니다.</target>
        </trans-unit>
        <trans-unit id="c990731d51d6932fdac50479de4885a38e0ad644" translate="yes" xml:space="preserve">
          <source>This class specifies a Diffie-Hellman private key with its associated parameters.</source>
          <target state="translated">이 클래스는 관련 매개 변수와 함께 Diffie-Hellman 개인 키를 지정합니다.</target>
        </trans-unit>
        <trans-unit id="70d87f2742e4212f0245c4f128a7ca482ae2d761" translate="yes" xml:space="preserve">
          <source>This class specifies a Diffie-Hellman public key with its associated parameters.</source>
          <target state="translated">이 클래스는 관련 매개 변수와 함께 Diffie-Hellman 공개 키를 지정합니다.</target>
        </trans-unit>
        <trans-unit id="b07eae8d5a709cfc63b91114d0a65f4be8390196" translate="yes" xml:space="preserve">
          <source>This class specifies a parameter spec for RSA-PSS signature scheme, as defined in the &lt;a href=&quot;http://www.ietf.org/rfc/rfc3447.txt&quot;&gt;PKCS#1 v2.1&lt;/a&gt; standard.</source>
          <target state="translated">이 클래스는 &lt;a href=&quot;http://www.ietf.org/rfc/rfc3447.txt&quot;&gt;PKCS # 1 v2.1&lt;/a&gt; 표준에 정의 된대로 RSA-PSS 서명 체계에 대한 매개 변수 스펙을 지정합니다 .</target>
        </trans-unit>
        <trans-unit id="0f30e45b6bd9ba01d96d3b693a26a9eecb21ae5d" translate="yes" xml:space="preserve">
          <source>This class specifies a secret key in a provider-independent fashion.</source>
          <target state="translated">이 클래스는 공급자 독립적 인 방식으로 비밀 키를 지정합니다.</target>
        </trans-unit>
        <trans-unit id="6e6f9f20a4372f1a3113774bba8591bfdc1c187f" translate="yes" xml:space="preserve">
          <source>This class specifies an</source>
          <target state="translated">이 클래스는</target>
        </trans-unit>
        <trans-unit id="bff225c4f5c50177500c14e3122ea3b191a8e1fa" translate="yes" xml:space="preserve">
          <source>This class specifies an RSA multi-prime private key, as defined in the PKCS#1 v2.1, using the Chinese Remainder Theorem (CRT) information values for efficiency.</source>
          <target state="translated">이 클래스는 효율성을 위해 CRT (Chinese Remainder Theorem) 정보 값을 사용하여 PKCS # 1 v2.1에 정의 된대로 RSA 다중 기본 개인 키를 지정합니다.</target>
        </trans-unit>
        <trans-unit id="51a9f89f44a660b954a5a5090fa122412b242aaa" translate="yes" xml:space="preserve">
          <source>This class specifies an RSA private key, as defined in the PKCS#1 standard, using the Chinese Remainder Theorem (CRT) information values for efficiency.</source>
          <target state="translated">이 클래스는 효율성을 위해 CRT (Chinese Remainder Theorem) 정보 값을 사용하여 PKCS # 1 표준에 정의 된대로 RSA 개인 키를 지정합니다.</target>
        </trans-unit>
        <trans-unit id="25a3fff78310776f3c57ad9dc099010bb1f07c85" translate="yes" xml:space="preserve">
          <source>This class specifies an RSA private key.</source>
          <target state="translated">이 클래스는 RSA 개인 키를 지정합니다.</target>
        </trans-unit>
        <trans-unit id="6f74ff5a45662c8e1077df778118f2b36bd0b4da" translate="yes" xml:space="preserve">
          <source>This class specifies an RSA public key.</source>
          <target state="translated">이 클래스는 RSA 공개 키를 지정합니다.</target>
        </trans-unit>
        <trans-unit id="df546476dac0952bae6f6791d4e51bef99a01aed" translate="yes" xml:space="preserve">
          <source>This class specifies the parameters used with the &lt;a href=&quot;http://www.ietf.org/rfc/rfc2040.txt&quot;&gt;&lt;i&gt;RC5&lt;/i&gt;&lt;/a&gt; algorithm.</source>
          <target state="translated">이 클래스는 &lt;a href=&quot;http://www.ietf.org/rfc/rfc2040.txt&quot;&gt;&lt;i&gt;RC5&lt;/i&gt;&lt;/a&gt; 알고리즘에 사용되는 매개 변수를 지정합니다 .</target>
        </trans-unit>
        <trans-unit id="bd74cc66a6a970a8693e41e839c4e4f3662dfeb9" translate="yes" xml:space="preserve">
          <source>This class specifies the parameters used with the &lt;a href=&quot;http://www.ietf.org/rfc/rfc2268.txt&quot;&gt;&lt;i&gt;RC2&lt;/i&gt;&lt;/a&gt; algorithm.</source>
          <target state="translated">이 클래스는 &lt;a href=&quot;http://www.ietf.org/rfc/rfc2268.txt&quot;&gt;&lt;i&gt;RC2&lt;/i&gt;&lt;/a&gt; 알고리즘 과 함께 사용되는 매개 변수를 지정합니다 .</target>
        </trans-unit>
        <trans-unit id="d3de5faa338aac308b55709ac63b2509d7983990" translate="yes" xml:space="preserve">
          <source>This class specifies the set of parameters used for generating Diffie-Hellman (system) parameters for use in Diffie-Hellman key agreement.</source>
          <target state="translated">이 클래스는 Diffie-Hellman 키 계약에 사용할 Diffie-Hellman (시스템) 매개 변수를 생성하는 데 사용되는 매개 변수 세트를 지정합니다.</target>
        </trans-unit>
        <trans-unit id="fc4c54ffe29216598c50a69d7344e92001db9de7" translate="yes" xml:space="preserve">
          <source>This class specifies the set of parameters used for generating Diffie-Hellman (system) parameters for use in Diffie-Hellman key agreement. This is typically done by a central authority.</source>
          <target state="translated">이 클래스는 Diffie-Hellman 키 계약에 사용할 Diffie-Hellman (시스템) 매개 변수를 생성하는 데 사용되는 매개 변수 세트를 지정합니다. 이것은 일반적으로 중앙 기관에 의해 수행됩니다.</target>
        </trans-unit>
        <trans-unit id="ad2627810d2178f25019cc742f2eacb5d89300e3" translate="yes" xml:space="preserve">
          <source>This class specifies the set of parameters used to generate an RSA key pair.</source>
          <target state="translated">이 클래스는 RSA 키 쌍을 생성하는 데 사용되는 매개 변수 세트를 지정합니다.</target>
        </trans-unit>
        <trans-unit id="59688baa89e160b7da4dc74ad676b46fc232891e" translate="yes" xml:space="preserve">
          <source>This class specifies the set of parameters used with OAEP Padding, as defined in the &lt;a href=&quot;http://www.ietf.org/rfc/rfc3447.txt&quot;&gt;PKCS #1&lt;/a&gt; standard.</source>
          <target state="translated">이 클래스는 &lt;a href=&quot;http://www.ietf.org/rfc/rfc3447.txt&quot;&gt;PKCS # 1&lt;/a&gt; 표준에 정의 된대로 OAEP 패딩과 함께 사용되는 매개 변수 세트를 지정합니다 .</target>
        </trans-unit>
        <trans-unit id="23c4dee6bc9d5e341557cc99be66e25944c63cb4" translate="yes" xml:space="preserve">
          <source>This class specifies the set of parameters used with OAEP Padding, as defined in the &lt;a href=&quot;http://www.ietf.org/rfc/rfc3447.txt&quot;&gt;PKCS #1&lt;/a&gt; standard. Its ASN.1 definition in PKCS#1 standard is described below:</source>
          <target state="translated">이 클래스는 &lt;a href=&quot;http://www.ietf.org/rfc/rfc3447.txt&quot;&gt;PKCS # 1&lt;/a&gt; 표준에 정의 된대로 OAEP 패딩과 함께 사용되는 매개 변수 세트를 지정합니다 . PKCS # 1 표준의 ASN.1 정의는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="3378f0ed1db83cd69750881faed95856190e5be3" translate="yes" xml:space="preserve">
          <source>This class specifies the set of parameters used with mask generation function MGF1 in OAEP Padding and RSA-PSS signature scheme, as defined in the &lt;a href=&quot;http://www.ietf.org/rfc/rfc3447.txt&quot;&gt;PKCS #1 v2.1&lt;/a&gt; standard.</source>
          <target state="translated">이 클래스는 &lt;a href=&quot;http://www.ietf.org/rfc/rfc3447.txt&quot;&gt;PKCS # 1 v2.1&lt;/a&gt; 표준에 정의 된대로 OAEP 패딩 및 RSA-PSS 서명 체계에서 마스크 생성 기능 MGF1과 함께 사용되는 매개 변수 세트를 지정합니다 .</target>
        </trans-unit>
        <trans-unit id="cb98cf2f5a03d8cb731645b73a46758f7c6343cf" translate="yes" xml:space="preserve">
          <source>This class specifies the set of parameters used with password-based encryption (PBE), as defined in the &lt;a href=&quot;http://www.ietf.org/rfc/rfc2898.txt&quot;&gt;PKCS #5&lt;/a&gt; standard.</source>
          <target state="translated">이 클래스는 &lt;a href=&quot;http://www.ietf.org/rfc/rfc2898.txt&quot;&gt;PKCS # 5&lt;/a&gt; 표준에 정의 된대로 비밀번호 기반 암호화 (PBE)와 함께 사용되는 매개 변수 세트를 지정합니다 .</target>
        </trans-unit>
        <trans-unit id="f779550dfd201e58e835eac99e6346a3b80e876a" translate="yes" xml:space="preserve">
          <source>This class specifies the set of parameters used with the DSA algorithm.</source>
          <target state="translated">이 클래스는 DSA 알고리즘과 함께 사용되는 매개 변수 세트를 지정합니다.</target>
        </trans-unit>
        <trans-unit id="780f1d67c49fbd57bd69ce916873b1f0f2788244" translate="yes" xml:space="preserve">
          <source>This class specifies the set of parameters used with the Diffie-Hellman algorithm, as specified in PKCS #3:</source>
          <target state="translated">이 클래스는 PKCS # 3에 지정된 Diffie-Hellman 알고리즘과 함께 사용되는 매개 변수 세트를 지정합니다.</target>
        </trans-unit>
        <trans-unit id="fc73b50a65060e1d01978b2c1c1a5dbc8c9cce7e" translate="yes" xml:space="preserve">
          <source>This class specifies the source for encoding input P in OAEP Padding, as defined in the &lt;a href=&quot;http://www.ietf.org/rfc/rfc3447.txt&quot;&gt;PKCS #1&lt;/a&gt; standard.</source>
          <target state="translated">이 클래스는 &lt;a href=&quot;http://www.ietf.org/rfc/rfc3447.txt&quot;&gt;PKCS # 1&lt;/a&gt; 표준에 정의 된대로 OAEP 패딩에서 입력 P를 인코딩하기위한 소스를 지정합니다 .</target>
        </trans-unit>
        <trans-unit id="38eac723fd377ef096b27f5047f49d7a2de02b87" translate="yes" xml:space="preserve">
          <source>This class supports an optional fairness policy for ordering waiting producer and consumer threads. By default, this ordering is not guaranteed. However, a queue constructed with fairness set to &lt;code&gt;true&lt;/code&gt; grants threads access in FIFO order.</source>
          <target state="translated">이 클래스는 대기중인 생산자 및 소비자 스레드 주문에 대한 선택적 공정성 정책을 지원합니다. 기본적으로이 순서는 보장되지 않습니다. 그러나 공정성이 &lt;code&gt;true&lt;/code&gt; 로 설정된 대기열은 스레드 액세스를 FIFO 순서로 부여합니다.</target>
        </trans-unit>
        <trans-unit id="f201a98083a72ebd3d70c02e66219c8be455bc0b" translate="yes" xml:space="preserve">
          <source>This class supports an optional fairness policy for ordering waiting producer and consumer threads. By default, this ordering is not guaranteed. However, a queue constructed with fairness set to &lt;code&gt;true&lt;/code&gt; grants threads access in FIFO order. Fairness generally decreases throughput but reduces variability and avoids starvation.</source>
          <target state="translated">이 클래스는 대기중인 생산자 및 소비자 스레드 주문에 대한 선택적 공정성 정책을 지원합니다. 기본적으로이 순서는 보장되지 않습니다. 그러나 공정성이 &lt;code&gt;true&lt;/code&gt; 로 설정된 대기열은 스레드 액세스를 FIFO 순서로 부여합니다. 공정성은 일반적으로 처리량을 줄이지 만 변동성을 줄이며 기아를 피합니다.</target>
        </trans-unit>
        <trans-unit id="7a4fa431e4e01c9fba026d067052b3ae96e02766" translate="yes" xml:space="preserve">
          <source>This class supports either or both a default &lt;em&gt;exclusive&lt;/em&gt; mode and a &lt;em&gt;shared&lt;/em&gt; mode. When acquired in exclusive mode, attempted acquires by other threads cannot succeed. Shared mode acquires by multiple threads may (but need not) succeed. This class does not &quot;understand&quot; these differences except in the mechanical sense that when a shared mode acquire succeeds, the next waiting thread (if one exists) must also determine whether it can acquire as well. Threads waiting in the different modes share the same FIFO queue. Usually, implementation subclasses support only one of these modes, but both can come into play for example in a &lt;a href=&quot;readwritelock&quot;&gt;&lt;code&gt;ReadWriteLock&lt;/code&gt;&lt;/a&gt;. Subclasses that support only exclusive or only shared modes need not define the methods supporting the unused mode.</source>
          <target state="translated">이 클래스는 기본 &lt;em&gt;독점&lt;/em&gt; 모드와 &lt;em&gt;공유&lt;/em&gt; 모드 중 하나 또는 둘 다를 지원 합니다. 단독 모드에서 획득 한 경우 다른 스레드에 의한 획득 시도는 성공할 수 없습니다. 여러 스레드가 공유 모드를 획득하면 성공할 수도 있지만 반드시 그럴 필요는 없습니다. 이 클래스는 공유 모드 획득에 성공하면 다음 대기 스레드 (있는 경우)도 획득 할 수 있는지 여부를 결정해야한다는 기계적 의미를 제외하고는 이러한 차이점을 &quot;인식&quot;하지 않습니다. 다른 모드에서 대기중인 스레드는 동일한 FIFO 대기열을 공유합니다. 일반적으로 구현 서브 클래스는 이러한 모드 중 하나만 지원하지만 둘 다 예를 들어 &lt;a href=&quot;readwritelock&quot;&gt; &lt;code&gt;ReadWriteLock&lt;/code&gt; &lt;/a&gt; 에서 작동 할 수 있습니다 . 단독 또는 공유 모드 만 지원하는 서브 클래스는 사용되지 않는 모드를 지원하는 메소드를 정의 할 필요가 없습니다.</target>
        </trans-unit>
        <trans-unit id="529c97d775197ce36fe32bbded9a4fc074a37a2a" translate="yes" xml:space="preserve">
          <source>This class supports methods to determine whether locks are held or contended. These methods are designed for monitoring system state, not for synchronization control.</source>
          <target state="translated">이 클래스는 잠금 보유 여부를 판별하는 메소드를 지원합니다. 이러한 방법은 동기화 제어가 아닌 시스템 상태를 모니터링하기 위해 고안되었습니다.</target>
        </trans-unit>
        <trans-unit id="66a8bbbebe358e0fbe3d930bb8c2f05e8919820e" translate="yes" xml:space="preserve">
          <source>This class tracks the validity of the key and implements cancellation.</source>
          <target state="translated">이 클래스는 키의 유효성을 추적하고 취소를 구현합니다.</target>
        </trans-unit>
        <trans-unit id="623f0d21c34dbd1332bc7e6494861896918e8e80" translate="yes" xml:space="preserve">
          <source>This class uses &lt;code&gt;HostnameVerifier&lt;/code&gt; and &lt;code&gt;SSLSocketFactory&lt;/code&gt;. There are default implementations defined for both classes. However, the implementations can be replaced on a per-class (static) or per-instance basis. All new &lt;code&gt;HttpsURLConnection&lt;/code&gt;s instances will be assigned the &quot;default&quot; static values at instance creation, but they can be overriden by calling the appropriate per-instance set method(s) before &lt;code&gt;connect&lt;/code&gt;ing.</source>
          <target state="translated">이 클래스는 &lt;code&gt;HostnameVerifier&lt;/code&gt; 및 &lt;code&gt;SSLSocketFactory&lt;/code&gt; 를 사용합니다 . 두 클래스 모두에 대해 기본 구현이 정의되어 있습니다. 그러나 구현은 클래스 (정적) 또는 인스턴스별로 교체 할 수 있습니다. 모든 새로운 &lt;code&gt;HttpsURLConnection&lt;/code&gt; 의 인스턴스에는 인스턴스 생성시 &quot;기본&quot;정적 값이 할당되지만 &lt;code&gt;connect&lt;/code&gt; 하기 전에 적절한 인스턴스 별 설정 메소드를 호출하여 재정의 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="e344db844026e2b475808bc6ac1c0833cbf91e6b" translate="yes" xml:space="preserve">
          <source>This class uses a provider-based architecture. To create a &lt;code&gt;CertPathBuilder&lt;/code&gt;, call one of the static &lt;code&gt;getInstance&lt;/code&gt; methods, passing in the algorithm name of the &lt;code&gt;CertPathBuilder&lt;/code&gt; desired and optionally the name of the provider desired.</source>
          <target state="translated">이 클래스는 공급자 기반 아키텍처를 사용합니다. &lt;code&gt;CertPathBuilder&lt;/code&gt; 를 작성하려면 , 원하는 &lt;code&gt;CertPathBuilder&lt;/code&gt; 의 알고리즘 명 및 필요에 따라, 원하는 프로 바이더의 이름을 건네 주는 정적 &lt;code&gt;getInstance&lt;/code&gt; 메소드의 1 개를 호출 합니다.</target>
        </trans-unit>
        <trans-unit id="e0e1433a14c30e48be78e8a26ffc082e6109d09a" translate="yes" xml:space="preserve">
          <source>This class uses a provider-based architecture. To create a &lt;code&gt;CertPathValidator&lt;/code&gt;, call one of the static &lt;code&gt;getInstance&lt;/code&gt; methods, passing in the algorithm name of the &lt;code&gt;CertPathValidator&lt;/code&gt; desired and optionally the name of the provider desired.</source>
          <target state="translated">이 클래스는 공급자 기반 아키텍처를 사용합니다. &lt;code&gt;CertPathValidator&lt;/code&gt; 를 작성하려면 , 원하는 &lt;code&gt;CertPathValidator&lt;/code&gt; 의 알고리즘 명 및 필요에 따라서는 원하는 프로 바이더의 이름을 건네 주는 정적 &lt;code&gt;getInstance&lt;/code&gt; 메소드의 1 개를 호출 합니다.</target>
        </trans-unit>
        <trans-unit id="4720c3962d957b31beca254e0087dea38d660efd" translate="yes" xml:space="preserve">
          <source>This class uses a provider-based architecture. To create a &lt;code&gt;CertStore&lt;/code&gt;, call one of the static &lt;code&gt;getInstance&lt;/code&gt; methods, passing in the type of &lt;code&gt;CertStore&lt;/code&gt; desired, any applicable initialization parameters and optionally the name of the provider desired.</source>
          <target state="translated">이 클래스는 공급자 기반 아키텍처를 사용합니다. &lt;code&gt;CertStore&lt;/code&gt; 를 작성하려면 , 원하는 &lt;code&gt;CertStore&lt;/code&gt; 의 형태 , 적용 가능한 초기화 파라미터, 및 필요에 따라 원하는 프로 바이더의 이름을 건네 주는 static &lt;code&gt;getInstance&lt;/code&gt; 메소드의 1 개를 호출 합니다.</target>
        </trans-unit>
        <trans-unit id="718790074ad554ff47894786ac58cc51cec8e9fc" translate="yes" xml:space="preserve">
          <source>This clock is based on the best available system clock. This may use &lt;a href=&quot;../lang/system#currentTimeMillis--&quot;&gt;&lt;code&gt;System.currentTimeMillis()&lt;/code&gt;&lt;/a&gt;, or a higher resolution clock if one is available.</source>
          <target state="translated">이 시계는 사용 가능한 최상의 시스템 시계를 기준으로합니다. 이 사용할 수 &lt;a href=&quot;../lang/system#currentTimeMillis--&quot;&gt; &lt;code&gt;System.currentTimeMillis()&lt;/code&gt; &lt;/a&gt; 사용 가능한 경우, 또는 더 높은 해상도 시계를.</target>
        </trans-unit>
        <trans-unit id="14e5b87996ff9a8dd71298e7805275d126fb13ec" translate="yes" xml:space="preserve">
          <source>This clock simply returns the specified instant. As such, it is not a clock in the conventional sense. The main use case for this is in testing, where the fixed clock ensures tests are not dependent on the current clock.</source>
          <target state="translated">이 시계는 단순히 지정된 순간을 반환합니다. 이와 같이, 그것은 종래의 의미에서 시계가 아니다. 이를위한 주요 사용 사례는 테스트에서 고정 클럭이 테스트가 현재 클럭에 의존하지 않는지 확인하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="e6fe9db4a5da99e2df3c273110d5647ff1e4def9" translate="yes" xml:space="preserve">
          <source>This clock will always have the nano-of-second and second-of-minute fields set to zero. This ensures that the visible time ticks in whole minutes. The underlying clock is the best available system clock, equivalent to using &lt;a href=&quot;clock#system-java.time.ZoneId-&quot;&gt;&lt;code&gt;system(ZoneId)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 시계에는 항상 나노초 및 초 필드가 0으로 설정됩니다. 이렇게하면 보이는 시간이 전체 분 단위로 표시됩니다. 기본 클럭은 &lt;a href=&quot;clock#system-java.time.ZoneId-&quot;&gt; &lt;code&gt;system(ZoneId)&lt;/code&gt; &lt;/a&gt; 사용과 동등한 최상의 시스템 클럭 입니다.</target>
        </trans-unit>
        <trans-unit id="60ec564e9e295871b9d49787cc5fdafc2077ed3b" translate="yes" xml:space="preserve">
          <source>This clock will always have the nano-of-second field set to zero. This ensures that the visible time ticks in whole seconds. The underlying clock is the best available system clock, equivalent to using &lt;a href=&quot;clock#system-java.time.ZoneId-&quot;&gt;&lt;code&gt;system(ZoneId)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 클럭은 항상 나노초 필드가 0으로 설정됩니다. 이렇게하면 보이는 시간이 초 단위로 표시됩니다. 기본 클럭은 &lt;a href=&quot;clock#system-java.time.ZoneId-&quot;&gt; &lt;code&gt;system(ZoneId)&lt;/code&gt; &lt;/a&gt; 사용과 동등한 최상의 시스템 클럭 입니다.</target>
        </trans-unit>
        <trans-unit id="d510a435ab22ef2589d57442fef73bc4a406f64c" translate="yes" xml:space="preserve">
          <source>This clock will only tick as per the specified duration. Thus, if the duration is half a second, the clock will return instants truncated to the half second.</source>
          <target state="translated">이 시계는 지정된 지속 시간에 따라 표시됩니다. 따라서 지속 시간이 0.5 초인 경우 시계는 0.5 초로 잘린 순간을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="f851b56e47e0dfdc6ddeff5ef11cf138236dbc54" translate="yes" xml:space="preserve">
          <source>This clock wraps another clock, returning instants that are later by the specified duration. If the duration is negative, the instants will be earlier than the current date and time. The main use case for this is to simulate running in the future or in the past.</source>
          <target state="translated">이 시계는 다른 시계를 감싸고 나중에 지정된 지속 시간이 지난 순간을 반환합니다. 지속 시간이 음수이면 인스턴트가 현재 날짜 및 시간보다 빠릅니다. 이를위한 주요 사용 사례는 미래 또는 과거의 달리기를 시뮬레이션하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="28ec5732d8d89a816659b79fc702a8decfa24c8a" translate="yes" xml:space="preserve">
          <source>This clock, rather than &lt;a href=&quot;clock#systemDefaultZone--&quot;&gt;&lt;code&gt;systemDefaultZone()&lt;/code&gt;&lt;/a&gt;, should be used when you need the current instant without the date or time.</source>
          <target state="translated">날짜 또는 시간없이 현재 순간이 필요한 경우 &lt;a href=&quot;clock#systemDefaultZone--&quot;&gt; &lt;code&gt;systemDefaultZone()&lt;/code&gt; &lt;/a&gt; 대신이 시계를 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="41c5cbe50ec9277c16fa152ebfeb28a2610f1af4" translate="yes" xml:space="preserve">
          <source>This code unnecessarily uses side-effects. If executed in parallel, the non-thread-safety of &lt;code&gt;ArrayList&lt;/code&gt; would cause incorrect results, and adding needed synchronization would cause contention, undermining the benefit of parallelism. Furthermore, using side-effects here is completely unnecessary; the &lt;code&gt;forEach()&lt;/code&gt; can simply be replaced with a reduction operation that is safer, more efficient, and more amenable to parallelization:</source>
          <target state="translated">이 코드는 불필요하게 부작용을 사용합니다. 병렬로 실행될 경우 &lt;code&gt;ArrayList&lt;/code&gt; 의 스레드 안전성이 아닌 경우 잘못된 결과가 발생하고 필요한 동기화를 추가하면 경합이 발생하여 병렬 처리의 이점이 손상됩니다. 또한 여기에서 부작용을 사용하는 것은 완전히 불필요합니다. &lt;code&gt;forEach()&lt;/code&gt; 단순히 병렬로 더욱 안전하고 효율적으로, 그리고 더 많은 의무가 감소 동작으로 대체 할 수있다 :</target>
        </trans-unit>
        <trans-unit id="176099bc59c5b3661b28d294be7f4886f481e5f7" translate="yes" xml:space="preserve">
          <source>This combines the era and year-of-era into the single proleptic-year field.</source>
          <target state="translated">이것은 시대와 시대를 단일 proleptic-year 필드로 결합합니다.</target>
        </trans-unit>
        <trans-unit id="881c19f887f555a349e53ab2479a3a4e1694b26e" translate="yes" xml:space="preserve">
          <source>This combines this local date-time and the specified offset to calculate the epoch-second value, which is the number of elapsed seconds from 1970-01-01T00:00:00Z. Instants on the time-line after the epoch are positive, earlier are negative.</source>
          <target state="translated">이 현지 날짜-시간과 지정된 오프셋을 결합하여 에포크 초 값을 계산합니다. 이는 1970-01-01T00 : 00 : 00Z에서 경과 된 초 수입니다. 신기원 이후의 타임 라인에있는 순간은 긍정적이고, 초기는 부정적입니다.</target>
        </trans-unit>
        <trans-unit id="40fe7b6100b5c8ae366a238823262ae618c2e5f5" translate="yes" xml:space="preserve">
          <source>This combines this local date-time and the specified offset to form an &lt;code&gt;Instant&lt;/code&gt;.</source>
          <target state="translated">이것은 현지 날짜-시간과 지정된 오프셋을 결합하여 &lt;code&gt;Instant&lt;/code&gt; 를 형성합니다 .</target>
        </trans-unit>
        <trans-unit id="2e211b34e33f383b28859eb5977a7c40e1249ab5" translate="yes" xml:space="preserve">
          <source>This comparator differs from the comparison in &lt;a href=&quot;chronolocaldate#compareTo-java.time.chrono.ChronoLocalDate-&quot;&gt;&lt;code&gt;compareTo(java.time.chrono.ChronoLocalDate)&lt;/code&gt;&lt;/a&gt; in that it only compares the underlying date and not the chronology. This allows dates in different calendar systems to be compared based on the position of the date on the local time-line. The underlying comparison is equivalent to comparing the epoch-day.</source>
          <target state="translated">이 비교기는 연대기가 아닌 기본 날짜 만 비교한다는 점 에서 &lt;a href=&quot;chronolocaldate#compareTo-java.time.chrono.ChronoLocalDate-&quot;&gt; &lt;code&gt;compareTo(java.time.chrono.ChronoLocalDate)&lt;/code&gt; &lt;/a&gt; 의 비교와 다릅니다 . 이를 통해 다른 달력 시스템의 날짜를 현지 타임 라인의 날짜 위치를 기준으로 비교할 수 있습니다. 근본적인 비교는 신기원을 비교하는 것과 같습니다.</target>
        </trans-unit>
        <trans-unit id="69c8ba053698d42cd41df468e493abc5023ac240" translate="yes" xml:space="preserve">
          <source>This comparator differs from the comparison in &lt;a href=&quot;chronolocaldatetime#compareTo-java.time.chrono.ChronoLocalDateTime-&quot;&gt;&lt;code&gt;compareTo(java.time.chrono.ChronoLocalDateTime&amp;lt;?&amp;gt;)&lt;/code&gt;&lt;/a&gt; in that it only compares the underlying date-time and not the chronology. This allows dates in different calendar systems to be compared based on the position of the date-time on the local time-line. The underlying comparison is equivalent to comparing the epoch-day and nano-of-day.</source>
          <target state="translated">이 비교기는 연대기가 아닌 기본 날짜 시간 만 비교한다는 점 에서 &lt;a href=&quot;chronolocaldatetime#compareTo-java.time.chrono.ChronoLocalDateTime-&quot;&gt; &lt;code&gt;compareTo(java.time.chrono.ChronoLocalDateTime&amp;lt;?&amp;gt;)&lt;/code&gt; &lt;/a&gt; 의 비교와 다릅니다 . 이를 통해 서로 다른 달력 시스템의 날짜를 현지 타임 라인의 날짜-시간 위치를 기준으로 비교할 수 있습니다. 근본적인 비교는 신기원과 나노 일을 비교하는 것과 같습니다.</target>
        </trans-unit>
        <trans-unit id="bbdbc85ee0512dc3d74a6a8c6805ec1e19b5202c" translate="yes" xml:space="preserve">
          <source>This comparator differs from the comparison in &lt;a href=&quot;chronozoneddatetime#compareTo-java.time.chrono.ChronoZonedDateTime-&quot;&gt;&lt;code&gt;compareTo(java.time.chrono.ChronoZonedDateTime&amp;lt;?&amp;gt;)&lt;/code&gt;&lt;/a&gt; in that it only compares the underlying instant and not the chronology. This allows dates in different calendar systems to be compared based on the position of the date-time on the instant time-line. The underlying comparison is equivalent to comparing the epoch-second and nano-of-second.</source>
          <target state="translated">이 비교기는 연대기가 아닌 기본 순간 만 비교한다는 점 에서 &lt;a href=&quot;chronozoneddatetime#compareTo-java.time.chrono.ChronoZonedDateTime-&quot;&gt; &lt;code&gt;compareTo(java.time.chrono.ChronoZonedDateTime&amp;lt;?&amp;gt;)&lt;/code&gt; &lt;/a&gt; 의 비교와 다릅니다 . 이를 통해 다른 일정 시스템의 날짜를 인스턴트 타임 라인에서 날짜-시간의 위치를 ​​기준으로 비교할 수 있습니다. 기본 비교는 에포크 초와 나노 초를 비교하는 것과 같습니다.</target>
        </trans-unit>
        <trans-unit id="cc7ddcbc9574b53708e189a7991f2ab1c97c0b99" translate="yes" xml:space="preserve">
          <source>This compares the instants of each transition. The offsets are ignored, making this order inconsistent with equals.</source>
          <target state="translated">각 전환의 순간을 비교합니다. 오프셋은 무시되므로이 순서는 같지 않습니다.</target>
        </trans-unit>
        <trans-unit id="214ac252c0ba044ee79ac7ac9ed06ac4e8d2e884" translate="yes" xml:space="preserve">
          <source>This computes, in a single pass, the count of people, as well as the minimum, maximum, sum, and average of their ages.</source>
          <target state="translated">이를 통해 단일 패스에서 사람의 수와 연령의 최소, 최대, 합계 및 평균을 계산합니다.</target>
        </trans-unit>
        <trans-unit id="8ecf7d1186beb739d844c2d1692dba4c31e96fd5" translate="yes" xml:space="preserve">
          <source>This computes, in a single pass, the count of people, as well as the minimum, maximum, sum, and average of their number of dependents.</source>
          <target state="translated">이것은 한 번의 패스로 사람들의 수와 그들의 부양 가족의 최소, 최대, 합계 및 평균을 계산합니다.</target>
        </trans-unit>
        <trans-unit id="e9e2b0f514db47caa89ba0a091352dcd38c4c208" translate="yes" xml:space="preserve">
          <source>This computes, in a single pass, the count of people, as well as the minimum, maximum, sum, and average of their weights.</source>
          <target state="translated">이것은 한 번의 패스로 사람의 수와 체중의 최소, 최대, 합계 및 평균을 계산합니다.</target>
        </trans-unit>
        <trans-unit id="094b5e7f02060fff345c5bf3b2095d3ceba5a72e" translate="yes" xml:space="preserve">
          <source>This concept can seem surprising at first, as the natural way to globalize an application might initially appear to be to abstract the calendar system. However, as explored below, abstracting the calendar system is usually the wrong approach, resulting in logic errors and hard to find bugs. As such, it should be considered an application-wide architectural decision to choose to use this interface as opposed to &lt;code&gt;LocalDate&lt;/code&gt;.</source>
          <target state="translated">이 개념은 처음에는 응용 프로그램을 세계화하는 자연스러운 방법으로 달력 시스템을 추상화하는 것처럼 보일 수 있으므로 처음에는 놀라운 것처럼 보일 수 있습니다. 그러나 아래에서 살펴본 것처럼 달력 시스템을 추상화하는 것은 일반적으로 잘못된 접근 방식이므로 논리 오류가 발생하고 버그를 찾기가 어렵습니다. 따라서 &lt;code&gt;LocalDate&lt;/code&gt; 대신이 인터페이스를 사용하도록 선택하는 응용 프로그램 전체의 아키텍처 결정으로 간주해야합니다 .</target>
        </trans-unit>
        <trans-unit id="4bf133bfd39a456d1d621ff71ab70e928fb9770a" translate="yes" xml:space="preserve">
          <source>This concept is described in the cookie specification. To understand the concept, some terminologies need to be defined first:</source>
          <target state="translated">이 개념은 쿠키 사양에 설명되어 있습니다. 개념을 이해하려면 먼저 몇 가지 용어를 정의해야합니다.</target>
        </trans-unit>
        <trans-unit id="62df0191c16730ea81ebc52d605bc1802c0618e1" translate="yes" xml:space="preserve">
          <source>This concrete method has been added to this previously-defined abstract class. (For backwards compatibility, it cannot be abstract.)</source>
          <target state="translated">이 구체적인 방법은 이전에 정의 된이 추상 클래스에 추가되었습니다. 이전 버전과의 호환성을 위해 추상적 일 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="8a795a9e08058d23c3970c0ea2fda5e4ffc46a2b" translate="yes" xml:space="preserve">
          <source>This concrete method has been added to this previously-defined abstract class. (For backwards compatibility, it cannot be abstract.) It may be overridden by a provider to initialize the key pair generator. Such an override is expected to throw an InvalidAlgorithmParameterException if a parameter is inappropriate for this key pair generator. If this method is not overridden, it always throws an UnsupportedOperationException.</source>
          <target state="translated">이 구체적인 방법은 이전에 정의 된이 추상 클래스에 추가되었습니다. 이전 버전과의 호환성을 위해 추상화 할 수 없습니다. 키 쌍 생성기를 초기화하기 위해 공급자가이를 재정의 할 수 있습니다. 매개 변수가이 키 페어 생성기에 적합하지 않은 경우 이러한 대체는 InvalidAlgorithmParameterException을 발생시킵니다. 이 메서드를 재정의하지 않으면 항상 UnsupportedOperationException이 발생합니다.</target>
        </trans-unit>
        <trans-unit id="50c9e7a52fbb1068a2728a1333b3fa5892cd93d5" translate="yes" xml:space="preserve">
          <source>This concrete method has been added to this previously-defined abstract class. (For backwards compatibility, it cannot be abstract.) It may be overridden by a provider to unwrap a previously wrapped key. Such an override is expected to throw an InvalidKeyException if the given wrapped key cannot be unwrapped. If this method is not overridden, it always throws an UnsupportedOperationException.</source>
          <target state="translated">이 구체적인 방법은 이전에 정의 된이 추상 클래스에 추가되었습니다. 이전 버전과의 호환성을 위해 추상적 일 수는 없습니다. 이전에 래핑 된 키를 풀기 위해 공급자가이를 재정의 할 수 있습니다. 제공된 랩핑 된 키를 랩핑 할 수없는 경우 이러한 대체는 InvalidKeyException을 발생시킵니다. 이 메서드를 재정의하지 않으면 항상 UnsupportedOperationException이 발생합니다.</target>
        </trans-unit>
        <trans-unit id="3047c19464302f65c8c9f9c4b59ba3382c2f7e6d" translate="yes" xml:space="preserve">
          <source>This concrete method has been added to this previously-defined abstract class. (For backwards compatibility, it cannot be abstract.) It may be overridden by a provider to wrap a key. Such an override is expected to throw an IllegalBlockSizeException or InvalidKeyException (under the specified circumstances), if the given key cannot be wrapped. If this method is not overridden, it always throws an UnsupportedOperationException.</source>
          <target state="translated">이 구체적인 방법은 이전에 정의 된이 추상 클래스에 추가되었습니다. 이전 버전과의 호환성을 위해 추상화 할 수 없습니다. 공급자가 키를 래핑하도록 재정의 할 수 있습니다. 주어진 키를 줄 바꿈 할 수없는 경우 이러한 재정의는 지정된 상황에서 IllegalBlockSizeException 또는 InvalidKeyException을 발생시킵니다. 이 메서드를 재정의하지 않으면 항상 UnsupportedOperationException이 발생합니다.</target>
        </trans-unit>
        <trans-unit id="4bf8e8d4d64f80751e3c71f16623c031485b994e" translate="yes" xml:space="preserve">
          <source>This concrete method has been added to this previously-defined abstract class. It throws an &lt;code&gt;UnsupportedOperationException&lt;/code&gt; if it is not overridden by the provider.</source>
          <target state="translated">이 구체적인 방법은 이전에 정의 된이 추상 클래스에 추가되었습니다. 그것은 발생 &lt;code&gt;UnsupportedOperationException&lt;/code&gt; 가 프로 바이더에 의해 오버라이드 (override)되어 있지 않은 경우.</target>
        </trans-unit>
        <trans-unit id="07a7a6733f35c9bf5eaaa880a364b846a5809d2f" translate="yes" xml:space="preserve">
          <source>This concrete method has been added to this previously-defined abstract class. This method calls the KeyPairGeneratorSpi &lt;a href=&quot;keypairgeneratorspi#initialize-java.security.spec.AlgorithmParameterSpec-java.security.SecureRandom-&quot;&gt;&lt;code&gt;initialize&lt;/code&gt;&lt;/a&gt; method, passing it &lt;code&gt;params&lt;/code&gt; and &lt;code&gt;random&lt;/code&gt;. That &lt;code&gt;initialize&lt;/code&gt; method always throws an UnsupportedOperationException if it is not overridden by the provider.</source>
          <target state="translated">이 구체적인 방법은 이전에 정의 된이 추상 클래스에 추가되었습니다. 이 메소드는 KeyPairGeneratorSpi &lt;a href=&quot;keypairgeneratorspi#initialize-java.security.spec.AlgorithmParameterSpec-java.security.SecureRandom-&quot;&gt; &lt;code&gt;initialize&lt;/code&gt; &lt;/a&gt; 메소드를 호출하여 &lt;code&gt;params&lt;/code&gt; 및 &lt;code&gt;random&lt;/code&gt; 을 전달합니다 . 해당 &lt;code&gt;initialize&lt;/code&gt; 메소드는 제공자가 대체하지 않으면 항상 UnsupportedOperationException을 발생시킵니다.</target>
        </trans-unit>
        <trans-unit id="d62db2387265a645a7720ab82cd02b48e61cde7c" translate="yes" xml:space="preserve">
          <source>This concrete method has been added to this previously-defined abstract class. This method calls the KeyPairGeneratorSpi &lt;a href=&quot;keypairgeneratorspi#initialize-java.security.spec.AlgorithmParameterSpec-java.security.SecureRandom-&quot;&gt;&lt;code&gt;initialize&lt;/code&gt;&lt;/a&gt; method, passing it &lt;code&gt;params&lt;/code&gt; and a source of randomness (obtained from the highest-priority installed provider or system-provided if none of the installed providers supply one). That &lt;code&gt;initialize&lt;/code&gt; method always throws an UnsupportedOperationException if it is not overridden by the provider.</source>
          <target state="translated">이 구체적인 방법은 이전에 정의 된이 추상 클래스에 추가되었습니다. 이 방법은 호출 KeyPairGeneratorSpi의 &lt;a href=&quot;keypairgeneratorspi#initialize-java.security.spec.AlgorithmParameterSpec-java.security.SecureRandom-&quot;&gt; &lt;code&gt;initialize&lt;/code&gt; &lt;/a&gt; 가 전달 방법 &lt;code&gt;params&lt;/code&gt; 및 난수의 소스 (시스템 제공 설치된 제공자 중에 하나를 공급하지 않는 경우 가장 높은 우선 순위로 설치 제공로부터 구입). 해당 &lt;code&gt;initialize&lt;/code&gt; 메소드는 제공자가 대체하지 않으면 항상 UnsupportedOperationException을 발생시킵니다.</target>
        </trans-unit>
        <trans-unit id="e0c7037e79f3e9915b5f957edd500f9a2a5674bc" translate="yes" xml:space="preserve">
          <source>This console</source>
          <target state="translated">이 콘솔</target>
        </trans-unit>
        <trans-unit id="6233171ae50e2dfd828ba014b8868853c98a3b51" translate="yes" xml:space="preserve">
          <source>This constant specifies to add an attribute with the specified values.</source>
          <target state="translated">이 상수는 지정된 값으로 속성을 추가하도록 지정합니다.</target>
        </trans-unit>
        <trans-unit id="cd8d44d26c5e133edddaa1329516bd7acc91d3b4" translate="yes" xml:space="preserve">
          <source>This constant specifies to delete the specified attribute values from the attribute.</source>
          <target state="translated">이 상수는 지정된 속성 값을 속성에서 삭제하도록 지정합니다.</target>
        </trans-unit>
        <trans-unit id="f2dee89227b20ef81135afbe5b9bcd31150deccb" translate="yes" xml:space="preserve">
          <source>This constant specifies to replace an attribute with specified values.</source>
          <target state="translated">이 상수는 속성을 지정된 값으로 바꾸도록 지정합니다.</target>
        </trans-unit>
        <trans-unit id="f6444007e8d10572a068abf1e3164f34cfdb5930" translate="yes" xml:space="preserve">
          <source>This constraint is useful when building a certification path forward (from the target toward the trust anchor. If a partial path has been built, any candidate certificate must have a maxPathLen value greater than or equal to the number of certificates in the partial path.</source>
          <target state="translated">이 제한은 대상에서 트러스트 앵커를 향한 인증 경로를 구축 할 때 유용합니다. 부분 경로가 구축 된 경우 모든 후보 인증서는 부분 경로의 인증서 수보다 크거나 같은 maxPathLen 값을 가져야합니다.</target>
        </trans-unit>
        <trans-unit id="d8e603d331114f1b7222de64c09552fe6ba8dac2" translate="yes" xml:space="preserve">
          <source>This constraint is useful when building a certification path forward (from the target toward the trust anchor. If a partial path has been built, any candidate certificate must not include name constraints that would prohibit building a path to any of the names in the partial path.</source>
          <target state="translated">이 제약 조건은 대상에서 트러스트 앵커를 향한 인증 경로를 구축 할 때 유용합니다. 부분 경로가 구축 된 경우 후보 인증서에는 이름의 제약 조건이 포함되어서는 안됩니다. .</target>
        </trans-unit>
        <trans-unit id="56115faaedb5b196e05b129c1dc4a13bcbce5c42" translate="yes" xml:space="preserve">
          <source>This constructor constructs an IndexedPropertyDescriptor for a property that follows the standard Java conventions by having getFoo and setFoo accessor methods, for both indexed access and array access.</source>
          <target state="translated">이 생성자는 인덱스 액세스 및 배열 액세스 모두에 대해 getFoo 및 setFoo 접근 자 메소드를 사용하여 표준 Java 규칙을 따르는 특성에 대한 IndexedPropertyDescriptor를 구성합니다.</target>
        </trans-unit>
        <trans-unit id="323ef76e9090247addd862b027bcd8c1a9205ff8" translate="yes" xml:space="preserve">
          <source>This constructor creates an EventSetDescriptor from scratch using java.lang.reflect.Method and java.lang.Class objects.</source>
          <target state="translated">이 생성자는 java.lang.reflect.Method 및 java.lang.Class 객체를 사용하여 EventSetDescriptor를 처음부터 만듭니다.</target>
        </trans-unit>
        <trans-unit id="55008209d693d36006b56a334b0fde816431fe7a" translate="yes" xml:space="preserve">
          <source>This constructor creates an EventSetDescriptor from scratch using string names.</source>
          <target state="translated">이 생성자는 문자열 이름을 사용하여 처음부터 EventSetDescriptor를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="f4752e6b60ccfb55bdef75a7c17a6e6626676b4d" translate="yes" xml:space="preserve">
          <source>This constructor does not attempt to check the class names for validity. Invalid class names may cause exceptions in subsequent calls to &lt;code&gt;getMetadataFormat&lt;/code&gt;.</source>
          <target state="translated">이 생성자는 클래스 이름의 유효성을 검사하지 않습니다. 유효하지 않은 클래스 이름은 이후의 &lt;code&gt;getMetadataFormat&lt;/code&gt; 호출에서 예외를 발생시킬 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="d2705af4ecd1bfd920175f17b4eb667109733cc5" translate="yes" xml:space="preserve">
          <source>This constructor does not check if the given bytes indeed specify a secret key of the specified algorithm. For example, if the algorithm is DES, this constructor does not check if &lt;code&gt;key&lt;/code&gt; is 8 bytes long, and also does not check for weak or semi-weak keys. In order for those checks to be performed, an algorithm-specific</source>
          <target state="translated">이 생성자는 주어진 바이트가 실제로 지정된 알고리즘의 비밀 키를 지정하는지 확인하지 않습니다. 예를 들어, 알고리즘이 DES 인 경우이 생성자는 &lt;code&gt;key&lt;/code&gt; 길이가 8 바이트인지 확인하지 않고 약한 키나 반 약한 키도 검사하지 않습니다. 이러한 검사를 수행하려면 알고리즘별로</target>
        </trans-unit>
        <trans-unit id="b17f077b15cc44e9cd314ba25ea55a7532a21498" translate="yes" xml:space="preserve">
          <source>This constructor does not check if the given bytes indeed specify a secret key of the specified algorithm. For example, if the algorithm is DES, this constructor does not check if &lt;code&gt;key&lt;/code&gt; is 8 bytes long, and also does not check for weak or semi-weak keys. In order for those checks to be performed, an algorithm-specific key specification class (in this case: &lt;a href=&quot;deskeyspec&quot;&gt;&lt;code&gt;DESKeySpec&lt;/code&gt;&lt;/a&gt;) must be used.</source>
          <target state="translated">이 생성자는 주어진 바이트가 실제로 지정된 알고리즘의 비밀 키를 지정하는지 확인하지 않습니다. 예를 들어, 알고리즘이 DES 인 경우이 생성자는 &lt;code&gt;key&lt;/code&gt; 길이가 8 바이트인지 확인하지 않고 약한 키나 반 약한 키도 검사하지 않습니다. 이러한 검사를 수행하려면 알고리즘 별 키 사양 클래스 (이 경우 &lt;a href=&quot;deskeyspec&quot;&gt; &lt;code&gt;DESKeySpec&lt;/code&gt; &lt;/a&gt; )를 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="c768a68045529db78d1a3606a790d49cd038789b" translate="yes" xml:space="preserve">
          <source>This constructor does not throw an exception if &lt;code&gt;fdObj&lt;/code&gt; is &lt;a href=&quot;filedescriptor#valid--&quot;&gt;&lt;code&gt;invalid&lt;/code&gt;&lt;/a&gt;. However, if the methods are invoked on the resulting stream to attempt I/O on the stream, an &lt;code&gt;IOException&lt;/code&gt; is thrown.</source>
          <target state="translated">&lt;code&gt;fdObj&lt;/code&gt; 가 &lt;a href=&quot;filedescriptor#valid--&quot;&gt; &lt;code&gt;invalid&lt;/code&gt; &lt;/a&gt; 하지 않으면이 생성자는 예외를 발생시키지 않습니다 . 그러나 결과 스트림에서 메소드를 호출하여 스트림에서 I / O를 시도하면 &lt;code&gt;IOException&lt;/code&gt; 이 발생합니다.</target>
        </trans-unit>
        <trans-unit id="c784e7233a0ce2a32fd493938b6d803074df8ffd" translate="yes" xml:space="preserve">
          <source>This constructor first builds a URI in string form using the given components as follows:</source>
          <target state="translated">이 생성자는 먼저 다음과 같이 주어진 컴포넌트를 사용하여 문자열 형식으로 URI를 빌드합니다.</target>
        </trans-unit>
        <trans-unit id="252fb9e182f5d6aff42e078c02f9aae69a59be6c" translate="yes" xml:space="preserve">
          <source>This constructor first builds a URI string from the given components according to the rules specified in &lt;a href=&quot;http://www.ietf.org/rfc/rfc2396.txt&quot;&gt;RFC 2396&lt;/a&gt;, section 5.2, step 7:</source>
          <target state="translated">이 생성자는 먼저 &lt;a href=&quot;http://www.ietf.org/rfc/rfc2396.txt&quot;&gt;RFC 2396&lt;/a&gt; , 섹션 5.2, 7 단계에 지정된 규칙에 따라 지정된 컴포넌트에서 URI 문자열을 빌드합니다 .</target>
        </trans-unit>
        <trans-unit id="306285cfeca440c55bdfa3feff55957327806e69" translate="yes" xml:space="preserve">
          <source>This constructor has to be used when the RelationSupport object will be registered as a MBean by the user, or when creating a user relation MBean whose class extends RelationSupport.</source>
          <target state="translated">이 생성자는 RelationSupport 객체가 유저에 의해 MBean로서 등록 될 때, 또는 클래스가 RelationSupport를 확장하는 유저 관계 MBean를 작성하는 경우에 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="bb0fbecfa5d0431c58452f14d3af289a6e9443fa" translate="yes" xml:space="preserve">
          <source>This constructor has to be used when the user relation MBean implements the interfaces expected to be supported by a relation by delegating to a RelationSupport object.</source>
          <target state="translated">이 생성자는 사용자 관계 MBean이 RelationSupport 오브젝트에 위임하여 관계에 의해 지원 될 것으로 예상되는 인터페이스를 구현할 때 사용되어야합니다.</target>
        </trans-unit>
        <trans-unit id="22bcfda538c6290e0a386aa15ad7778899bc56d6" translate="yes" xml:space="preserve">
          <source>This constructor is equivalent to &lt;code&gt;MBeanServerPermission(name,null)&lt;/code&gt;.</source>
          <target state="translated">이 생성자는 &lt;code&gt;MBeanServerPermission(name,null)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d316a5fa99ed6379096b014630ff693b699cd1c2" translate="yes" xml:space="preserve">
          <source>This constructor is equivalent to &lt;code&gt;MBeanTrustPermission(name,null)&lt;/code&gt;.</source>
          <target state="translated">이 생성자는 &lt;code&gt;MBeanTrustPermission(name,null)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0438d6be07086284ca144cebfd257e9304b48c8a" translate="yes" xml:space="preserve">
          <source>This constructor is equivalent to a call to the two-argument constructor with a &lt;code&gt;null&lt;/code&gt; first argument.</source>
          <target state="translated">이 생성자는 첫 번째 인수 가 &lt;code&gt;null&lt;/code&gt; 인 두 인수 생성자에 대한 호출과 같습니다 .</target>
        </trans-unit>
        <trans-unit id="db37d0145d7513f45a38a1fb3ad916bc05b8e177" translate="yes" xml:space="preserve">
          <source>This constructor is identical to &lt;a href=&quot;thread#Thread-java.lang.ThreadGroup-java.lang.Runnable-java.lang.String-&quot;&gt;&lt;code&gt;Thread(ThreadGroup,Runnable,String)&lt;/code&gt;&lt;/a&gt; with the exception of the fact that it allows the thread stack size to be specified. The stack size is the approximate number of bytes of address space that the virtual machine is to allocate for this thread's stack. &lt;b&gt;The effect of the &lt;code&gt;stackSize&lt;/code&gt; parameter, if any, is highly platform dependent.&lt;/b&gt;</source>
          <target state="translated">이 생성자는 스레드 스택 크기를 지정할 수 있다는 점을 제외 하고 &lt;a href=&quot;thread#Thread-java.lang.ThreadGroup-java.lang.Runnable-java.lang.String-&quot;&gt; &lt;code&gt;Thread(ThreadGroup,Runnable,String)&lt;/code&gt; &lt;/a&gt; 와 동일 합니다. 스택 크기는 가상 머신이이 스레드의 스택에 할당 할 대략적인 주소 공간 바이트 수입니다. &lt;b&gt; &lt;code&gt;stackSize&lt;/code&gt; &lt;/b&gt;&lt;b&gt; 매개 변수 &lt;/b&gt;&lt;b&gt;의 영향은 플랫폼에 따라 크게 다릅니다.&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="a2810bbeef729a2adb8e1bef76df57c55ef3fc12" translate="yes" xml:space="preserve">
          <source>This constructor is not appropriate for an MXBean. Use &lt;a href=&quot;mbeanserverinvocationhandler#MBeanServerInvocationHandler-javax.management.MBeanServerConnection-javax.management.ObjectName-boolean-&quot;&gt;&lt;code&gt;MBeanServerInvocationHandler(MBeanServerConnection,
 ObjectName, boolean)&lt;/code&gt;&lt;/a&gt; for that. This constructor is equivalent to &lt;code&gt;new MBeanServerInvocationHandler(connection,
 objectName, false)&lt;/code&gt;.</source>
          <target state="translated">이 생성자는 MXBean에 적합하지 않습니다. 이를 위해 &lt;a href=&quot;mbeanserverinvocationhandler#MBeanServerInvocationHandler-javax.management.MBeanServerConnection-javax.management.ObjectName-boolean-&quot;&gt; &lt;code&gt;MBeanServerInvocationHandler(MBeanServerConnection, ObjectName, boolean)&lt;/code&gt; &lt;/a&gt; 를 사용하십시오 . 이 생성자는 &lt;code&gt;new MBeanServerInvocationHandler(connection, objectName, false)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="055c035fa3f9d9301582bc9012a5938b0e707ed3" translate="yes" xml:space="preserve">
          <source>This constructor is protected because most users should use a &lt;code&gt;CertificateFactory&lt;/code&gt; to create &lt;code&gt;CertPath&lt;/code&gt;s.</source>
          <target state="translated">이 생성자는 대부분의 사용자가 &lt;code&gt;CertPath&lt;/code&gt; 를 작성 하기 위해 &lt;code&gt;CertificateFactory&lt;/code&gt; 를 사용해야하기 때문에 보호됩니다 .</target>
        </trans-unit>
        <trans-unit id="66eb1beb876cf1b7137667a69660279a6798a7bb" translate="yes" xml:space="preserve">
          <source>This constructor is provided to ease migration to &lt;code&gt;StringBuilder&lt;/code&gt;. Obtaining a string from a string builder via the &lt;code&gt;toString&lt;/code&gt; method is likely to run faster and is generally preferred.</source>
          <target state="translated">이 생성자는 &lt;code&gt;StringBuilder&lt;/code&gt; 로 쉽게 마이그레이션 할 수 있도록 제공됩니다 . &lt;code&gt;toString&lt;/code&gt; 메소드 를 통해 문자열 빌더에서 문자열을 얻는 것이 더 빨리 실행될 가능성이 높으며 일반적으로 선호됩니다.</target>
        </trans-unit>
        <trans-unit id="987620ca649576825067a69d7a28cf013a048b8f" translate="yes" xml:space="preserve">
          <source>This constructor is typically used by &lt;a href=&quot;secureclassloader&quot;&gt;&lt;code&gt;ClassLoaders&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;domaincombiner&quot;&gt;&lt;code&gt;DomainCombiners&lt;/code&gt;&lt;/a&gt; which delegate to &lt;code&gt;Policy&lt;/code&gt; to actively associate the permissions granted to this domain. This constructor affords the Policy provider the opportunity to augment the supplied PermissionCollection to reflect policy changes.</source>
          <target state="translated">이 생성자는 일반적 으로이 도메인에 부여 된 권한을 적극적으로 연결 하기 위해 &lt;code&gt;Policy&lt;/code&gt; 에 위임 하는 &lt;a href=&quot;secureclassloader&quot;&gt; &lt;code&gt;ClassLoaders&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;domaincombiner&quot;&gt; &lt;code&gt;DomainCombiners&lt;/code&gt; &lt;/a&gt; 에서 사용됩니다. 이 생성자는 정책 공급자에게 제공된 PermissionCollection을 기능 보강하여 정책 변경 사항을 반영 할 수있는 기회를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="7184bcd5a1d86e2a9889b441339695840e27dc43" translate="yes" xml:space="preserve">
          <source>This constructor is used for serialization only and should not be used by subclasses.</source>
          <target state="translated">이 생성자는 직렬화에만 사용되며 서브 클래스에서는 사용하지 않아야합니다.</target>
        </trans-unit>
        <trans-unit id="6115dedad8a8d6721c1d38fc08d58ea3d49255a6" translate="yes" xml:space="preserve">
          <source>This constructor loads the implementations of &lt;code&gt;ScriptEngineFactory&lt;/code&gt; visible to the given &lt;code&gt;ClassLoader&lt;/code&gt; using the service provider mechanism.</source>
          <target state="translated">이 생성자 는 서비스 제공 업체 메커니즘을 사용하여 지정된 &lt;code&gt;ClassLoader&lt;/code&gt; 에 표시되는 &lt;code&gt;ScriptEngineFactory&lt;/code&gt; 의 구현을로드합니다 .</target>
        </trans-unit>
        <trans-unit id="29ab51245f25d24b9f280d47ce7dc3b64450b618" translate="yes" xml:space="preserve">
          <source>This constructor must be called from a subclass that implements the given &lt;code&gt;mbeanInterface&lt;/code&gt;.</source>
          <target state="translated">이 생성자는 주어진 &lt;code&gt;mbeanInterface&lt;/code&gt; 를 구현하는 서브 클래스에서 호출되어야합니다 .</target>
        </trans-unit>
        <trans-unit id="e142e8eef0812e41eb84ae79de6dff8c1c97d800" translate="yes" xml:space="preserve">
          <source>This constructor parses the given string exactly as specified by the grammar in &lt;a href=&quot;http://www.ietf.org/rfc/rfc2396.txt&quot;&gt;RFC 2396&lt;/a&gt;, Appendix A, &lt;b&gt;&lt;i&gt;except for the following deviations:&lt;/i&gt;&lt;/b&gt;</source>
          <target state="translated">이 생성자는 &lt;b&gt;&lt;i&gt;다음 편차를 제외하고&lt;/i&gt;&lt;/b&gt;&lt;a href=&quot;http://www.ietf.org/rfc/rfc2396.txt&quot;&gt; RFC 2396&lt;/a&gt; , 부록 A 의 문법에 지정된대로 정확하게 지정된 문자열을 구문 분석합니다 &lt;b&gt;&lt;i&gt;.&lt;/i&gt;&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="5829254936972f7741b38d97218bb3035bb5947f" translate="yes" xml:space="preserve">
          <source>This constructor recognizes the attribute type keywords defined in RFC 1779 and RFC 2253 (and listed in &lt;a href=&quot;x500principal#getName-java.lang.String-&quot;&gt;&lt;code&gt;getName(String format)&lt;/code&gt;&lt;/a&gt;), as well as the T, DNQ or DNQUALIFIER, SURNAME, GIVENNAME, INITIALS, GENERATION, EMAILADDRESS, and SERIALNUMBER keywords whose Object Identifiers (OIDs) are defined in RFC 3280 and its successor. Any other attribute type must be specified as an OID.</source>
          <target state="translated">이 생성자는 RFC 1779 및 RFC 2253에 정의되고 &lt;a href=&quot;x500principal#getName-java.lang.String-&quot;&gt; &lt;code&gt;getName(String format)&lt;/code&gt; &lt;/a&gt; 나열된 속성 유형 키워드와 T, DNQ 또는 DNQUALIFIER, SURNAME, GIVENNAME, INITIALS, GENERATION, EMAILADDRESS 및 SERIALNUMBER 키워드를 인식합니다. 식별자 (OID)는 RFC 3280 및 후속 장치에 정의되어 있습니다. 다른 속성 유형은 OID로 지정해야합니다.</target>
        </trans-unit>
        <trans-unit id="b3c4bdb4dbc7d87b249553f001825a33e95f8368" translate="yes" xml:space="preserve">
          <source>This constructor recognizes the attribute type keywords specified in &lt;a href=&quot;x500principal#X500Principal-java.lang.String-&quot;&gt;&lt;code&gt;X500Principal(String)&lt;/code&gt;&lt;/a&gt; and also recognizes additional keywords that have entries in the &lt;code&gt;keywordMap&lt;/code&gt; parameter. Keyword entries in the keywordMap take precedence over the default keywords recognized by &lt;code&gt;X500Principal(String)&lt;/code&gt;. Keywords MUST be specified in all upper-case, otherwise they will be ignored. Improperly specified keywords are ignored; however if a keyword in the name maps to an improperly specified Object Identifier (OID), an &lt;code&gt;IllegalArgumentException&lt;/code&gt; is thrown. It is permissible to have 2 different keywords that map to the same OID.</source>
          <target state="translated">이 생성자는 &lt;a href=&quot;x500principal#X500Principal-java.lang.String-&quot;&gt; &lt;code&gt;X500Principal(String)&lt;/code&gt; &lt;/a&gt; 지정된 속성 유형 키워드 를 인식하고 &lt;code&gt;keywordMap&lt;/code&gt; 매개 변수에 항목이있는 추가 키워드도 인식합니다 . keywordMap의 키워드 항목은 &lt;code&gt;X500Principal(String)&lt;/code&gt; 인식하는 기본 키워드보다 우선합니다 . 키워드는 모두 대문자로 지정해야하며, 그렇지 않으면 무시됩니다. 잘못 지정된 키워드는 무시됩니다. 그러나 이름의 키워드가 잘못 지정된 OID (Object Identifier)에 맵핑되면 &lt;code&gt;IllegalArgumentException&lt;/code&gt; 이 발생합니다. 동일한 OID에 매핑되는 2 개의 서로 다른 키워드를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ec6d430953812becb925deb46d6cd0b93deb47f2" translate="yes" xml:space="preserve">
          <source>This constructor simply calls &lt;code&gt;this(tabularType, 101, 0.75f);&lt;/code&gt;</source>
          <target state="translated">이 생성자는 간단히 &lt;code&gt;this(tabularType, 101, 0.75f);&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6df0fc7f5d7676292778fc231fad82f46fd588de" translate="yes" xml:space="preserve">
          <source>This constructor supports the creation of arrays of primitive types when &lt;code&gt;primitiveArray&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">이 생성자는 &lt;code&gt;primitiveArray&lt;/code&gt; 가 &lt;code&gt;true&lt;/code&gt; 일 때 기본 유형의 배열 작성을 지원 합니다 .</target>
        </trans-unit>
        <trans-unit id="a2bd749b772d5412d274ba42737fc115d4165831" translate="yes" xml:space="preserve">
          <source>This constructor takes the name of a simple attribute, and Method objects for reading and writing the attribute. The &lt;a href=&quot;descriptor&quot;&gt;&lt;code&gt;Descriptor&lt;/code&gt;&lt;/a&gt; of the constructed object will include fields contributed by any annotations on the &lt;code&gt;Method&lt;/code&gt; objects that contain the &lt;a href=&quot;descriptorkey&quot;&gt;&lt;code&gt;DescriptorKey&lt;/code&gt;&lt;/a&gt; meta-annotation.</source>
          <target state="translated">이 생성자는 간단한 속성의 이름과 속성을 읽고 쓰는 Method 객체를 사용합니다. &lt;a href=&quot;descriptor&quot;&gt; &lt;code&gt;Descriptor&lt;/code&gt; &lt;/a&gt; 구축 된 개체의은에 어떤 주석으로 기여 필드가 포함됩니다 &lt;code&gt;Method&lt;/code&gt; 포함하는 개체 &lt;a href=&quot;descriptorkey&quot;&gt; &lt;code&gt;DescriptorKey&lt;/code&gt; 를의&lt;/a&gt; 메타 주석을.</target>
        </trans-unit>
        <trans-unit id="60feeec4f3b0e05e826447d953796767286be805" translate="yes" xml:space="preserve">
          <source>This constructor takes the name of a simple property, and Method objects for reading and writing the property.</source>
          <target state="translated">이 생성자는 간단한 속성의 이름과 속성을 읽고 쓰는 Method 객체를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="71ffdcd4bbda6f1adb0921f38324c01a7a58717f" translate="yes" xml:space="preserve">
          <source>This constructor takes the name of a simple property, and method names for reading and writing the property, both indexed and non-indexed.</source>
          <target state="translated">이 생성자는 간단한 속성의 이름과 인덱스 된 속성과 인덱스되지 않은 속성을 읽고 쓰는 메서드 이름을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="f96bbea6e82d670a2960bdaee669e1a6561f3897" translate="yes" xml:space="preserve">
          <source>This constructor takes the name of a simple property, and method names for reading and writing the property.</source>
          <target state="translated">이 생성자는 간단한 속성의 이름과 속성을 읽고 쓰는 메서드 이름을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="2950627d050fbf4aacfb46652b359fe21e525577" translate="yes" xml:space="preserve">
          <source>This constructor traverses the list of registered security Providers, starting with the most preferred Provider. A new SecureRandom object encapsulating the SecureRandomSpi implementation from the first Provider that supports a SecureRandom (RNG) algorithm is returned. If none of the Providers support a RNG algorithm, then an implementation-specific default is returned.</source>
          <target state="translated">이 생성자는 가장 선호되는 제공자로 시작하여 등록 된 보안 제공자 목록을 순회합니다. RNG (SecureRandom) 알고리즘을 지원하는 첫 번째 제공자의 SecureRandomSpi 구현을 캡슐화하는 새로운 SecureRandom 오브젝트가 리턴됩니다. RNG 알고리즘을 지원하는 공급자가 없으면 구현 별 기본값이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="69338ec03b3ff4f12d4a0ea5976cc37e58d266a4" translate="yes" xml:space="preserve">
          <source>This constructor will create new cookie manager with default cookie store and accept policy. The effect is same as &lt;code&gt;CookieManager(null, null)&lt;/code&gt;.</source>
          <target state="translated">이 생성자는 기본 쿠키 저장소를 사용하여 새 쿠키 관리자를 만들고 정책을 수락합니다. 효과는 &lt;code&gt;CookieManager(null, null)&lt;/code&gt; 와 동일 합니다.</target>
        </trans-unit>
        <trans-unit id="9dcde72d46b342f2e401974c393b36398fe41ec2" translate="yes" xml:space="preserve">
          <source>This constructor will not modify &lt;code&gt;environment&lt;/code&gt; or save a reference to it, but may save a clone. Caller should not modify mutable keys and values in &lt;code&gt;environment&lt;/code&gt; after it has been passed to the constructor.</source>
          <target state="translated">이 생성자는 &lt;code&gt;environment&lt;/code&gt; 수정 하거나 참조를 저장 하지 않지만 복제본을 저장할 수 있습니다. 호출자는 생성자에게 전달 된 후 &lt;code&gt;environment&lt;/code&gt; 에서 변경 가능한 키와 값을 수정해서는 안됩니다 .</target>
        </trans-unit>
        <trans-unit id="e5239d419576815e6d3fd5a0280090c36494314f" translate="yes" xml:space="preserve">
          <source>This constructor will not modify its parameters or save references to them, but may save a clone or copy. Caller should not modify mutable keys and values in &lt;code&gt;environment&lt;/code&gt; after it has been passed to the constructor.</source>
          <target state="translated">이 생성자는 매개 변수를 수정하거나 참조를 저장하지 않지만 복제본 또는 사본을 저장할 수 있습니다. 호출자는 생성자에게 전달 된 후 &lt;code&gt;environment&lt;/code&gt; 에서 변경 가능한 키와 값을 수정해서는 안됩니다 .</target>
        </trans-unit>
        <trans-unit id="2a93bd5dd228a4f6e155855cce61f3b6dae8637f" translate="yes" xml:space="preserve">
          <source>This context may be unavailable in some environments, in which case this method returns null.</source>
          <target state="translated">일부 환경에서는이 컨텍스트를 사용하지 못할 수 있으며이 경우이 메서드는 null을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="3a5469730aa079e01b52999e3d7a52e877df3f3f" translate="yes" xml:space="preserve">
          <source>This context may be unavailable in some environments, in which case this method returns null. For example, when the underlying SSL provider does not provide an implementation of SSLSessionContext interface, this method returns null. A non-null session context is returned otherwise.</source>
          <target state="translated">일부 환경에서는이 컨텍스트를 사용하지 못할 수 있으며이 경우이 메서드는 null을 반환합니다. 예를 들어, 기본 SSL 제공자가 SSLSessionContext 인터페이스의 구현을 제공하지 않으면이 메소드는 널을 리턴합니다. 그렇지 않으면 널이 아닌 세션 컨텍스트가 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="6a303455a8ad40e3d1dc7cd48ca709227da9c6d1" translate="yes" xml:space="preserve">
          <source>This continues until a result resource bundle is instantiated or the list of candidate bundle names is exhausted. If no matching resource bundle is found, the default control's &lt;a href=&quot;resourcebundle.control#getFallbackLocale-java.lang.String-java.util.Locale-&quot;&gt;&lt;code&gt;getFallbackLocale&lt;/code&gt;&lt;/a&gt; method is called, which returns the current default locale. A new sequence of candidate locale names is generated using this locale and and searched again, as above.</source>
          <target state="translated">결과 자원 번들이 인스턴스화되거나 후보 번들 이름 목록이 소진 될 때까지 계속됩니다. 일치하는 자원 번들이 없으면 기본 제어의 &lt;a href=&quot;resourcebundle.control#getFallbackLocale-java.lang.String-java.util.Locale-&quot;&gt; &lt;code&gt;getFallbackLocale&lt;/code&gt; &lt;/a&gt; 메소드가 호출되어 현재 기본 로케일을 리턴합니다. 이 로케일을 사용하여 새로운 후보 로케일 이름 시퀀스가 ​​생성되고 위와 같이 다시 검색됩니다.</target>
        </trans-unit>
        <trans-unit id="e43b55cf41f5a19a9cec030d4efb84aa99ae8707" translate="yes" xml:space="preserve">
          <source>This convenience constructor works as if by invoking the seven-argument constructor as follows:</source>
          <target state="translated">이 편리한 생성자는 다음과 같이 7 개의 인수 생성자를 호출하는 것처럼 작동합니다.</target>
        </trans-unit>
        <trans-unit id="e2905c539276a08d74a854b790c4c1e5fc4554fa" translate="yes" xml:space="preserve">
          <source>This convenience factory method works as if by invoking the &lt;a href=&quot;uri#URI-java.lang.String-&quot;&gt;&lt;code&gt;URI(String)&lt;/code&gt;&lt;/a&gt; constructor; any &lt;a href=&quot;urisyntaxexception&quot;&gt;&lt;code&gt;URISyntaxException&lt;/code&gt;&lt;/a&gt; thrown by the constructor is caught and wrapped in a new &lt;a href=&quot;../lang/illegalargumentexception&quot;&gt;&lt;code&gt;IllegalArgumentException&lt;/code&gt;&lt;/a&gt; object, which is then thrown.</source>
          <target state="translated">이 편리한 팩토리 메소드는 &lt;a href=&quot;uri#URI-java.lang.String-&quot;&gt; &lt;code&gt;URI(String)&lt;/code&gt; &lt;/a&gt; 생성자를 호출하는 것처럼 작동합니다 . 생성자에 의해 발생 된 모든 &lt;a href=&quot;urisyntaxexception&quot;&gt; &lt;code&gt;URISyntaxException&lt;/code&gt; &lt;/a&gt; 은 새로운 &lt;a href=&quot;../lang/illegalargumentexception&quot;&gt; &lt;code&gt;IllegalArgumentException&lt;/code&gt; &lt;/a&gt; 객체 에 포착되어 래핑됩니다 .</target>
        </trans-unit>
        <trans-unit id="961aad3e67917d2801c0339f0973a3c223f4cd59" translate="yes" xml:space="preserve">
          <source>This convenience method simply locates the extension class loader, call it &lt;code&gt;&lt;i&gt;extClassLoader&lt;/i&gt;&lt;/code&gt;, and then returns</source>
          <target state="translated">이 편리한 메소드는 단순히 확장 클래스 로더를 찾아이를 &lt;code&gt;&lt;i&gt;extClassLoader&lt;/i&gt;&lt;/code&gt; 라고 부르고 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="5c05518b3ead6f932cc65725d296d95a87175e51" translate="yes" xml:space="preserve">
          <source>This convenience method works as if by invoking the &lt;a href=&quot;socketchannel#open--&quot;&gt;&lt;code&gt;open()&lt;/code&gt;&lt;/a&gt; method, invoking the &lt;a href=&quot;socketchannel#connect-java.net.SocketAddress-&quot;&gt;&lt;code&gt;connect&lt;/code&gt;&lt;/a&gt; method upon the resulting socket channel, passing it &lt;code&gt;remote&lt;/code&gt;, and then returning that channel.</source>
          <target state="translated">이 편리한 메소드는 &lt;a href=&quot;socketchannel#open--&quot;&gt; &lt;code&gt;open()&lt;/code&gt; &lt;/a&gt; 메소드를 호출하고 , 결과 소켓 채널 에서 &lt;a href=&quot;socketchannel#connect-java.net.SocketAddress-&quot;&gt; &lt;code&gt;connect&lt;/code&gt; &lt;/a&gt; 메소드를 호출하고 , &lt;code&gt;remote&lt;/code&gt; 를 전달한 다음 해당 채널을 리턴하는 것처럼 작동합니다.</target>
        </trans-unit>
        <trans-unit id="0a4d2be12aeeb9ba8f11f546fe7ee8be73335282" translate="yes" xml:space="preserve">
          <source>This convenience method works as if by invoking the two-argument counterpart as follows:</source>
          <target state="translated">이 편리한 메소드는 다음과 같이 두 개의 인수를 호출하는 것처럼 작동합니다.</target>
        </trans-unit>
        <trans-unit id="d93db664b793b72aa6d1fccf0c7706670b6c7ee8" translate="yes" xml:space="preserve">
          <source>This convenience method works as if invoking it were equivalent to evaluating the expression &lt;a href=&quot;uri#resolve-java.net.URI-&quot;&gt;&lt;code&gt;resolve&lt;/code&gt;&lt;/a&gt;&lt;code&gt;(URI.&lt;/code&gt;&lt;a href=&quot;uri#create-java.lang.String-&quot;&gt;&lt;code&gt;create&lt;/code&gt;&lt;/a&gt;&lt;code&gt;(str))&lt;/code&gt;.</source>
          <target state="translated">이 편리한 메소드는 호출이 표현식 &lt;a href=&quot;uri#resolve-java.net.URI-&quot;&gt; &lt;code&gt;resolve&lt;/code&gt; &lt;/a&gt; &lt;code&gt;(URI.&lt;/code&gt; &lt;a href=&quot;uri#create-java.lang.String-&quot;&gt; &lt;code&gt;create&lt;/code&gt; &lt;/a&gt; &lt;code&gt;(str))&lt;/code&gt; 를 평가하는 것과 동일한 방식으로 작동합니다 .</target>
        </trans-unit>
        <trans-unit id="15946e6fa2cad09afaf39bcdc23236ae9c3214ad" translate="yes" xml:space="preserve">
          <source>This convenience method works as if invoking it were equivalent to evaluating the expression &lt;code&gt;new URL(this.toString())&lt;/code&gt; after first checking that this URI is absolute.</source>
          <target state="translated">이 편리한 메소드는, 이 URI가 절대적인지 최초로 확인한 후, &lt;code&gt;new URL(this.toString())&lt;/code&gt; 표현을 평가하는 것과 같은 기능을합니다.</target>
        </trans-unit>
        <trans-unit id="6c966a8c93fe8af2395da9d30bb726f76a7b3254" translate="yes" xml:space="preserve">
          <source>This convention does not apply to the unnamed package, whose associated preference node is &lt;code&gt;&amp;lt;unnamed&amp;gt;&lt;/code&gt;. This node is not intended for long term use, but for convenience in the early development of programs that do not yet belong to a package, and for &quot;throwaway&quot; programs.</source>
          <target state="translated">이 기본 설정은 관련 환경 설정 노드가 &lt;code&gt;&amp;lt;unnamed&amp;gt;&lt;/code&gt; 인 이름이없는 패키지에는 적용되지 않습니다 . 이 노드는 장기간 사용하기위한 것이 아니라, 아직 패키지에 속하지 않은 프로그램의 초기 개발 및 &quot;throwaway&quot;프로그램의 편의를위한 것입니다.</target>
        </trans-unit>
        <trans-unit id="ce51ac5c1f1d9f1914dc00d376fab0eb5e451b82" translate="yes" xml:space="preserve">
          <source>This conversion may be applied to &lt;code&gt;char&lt;/code&gt; and &lt;a href=&quot;../lang/character&quot;&gt;&lt;code&gt;Character&lt;/code&gt;&lt;/a&gt;. It may also be applied to the types &lt;code&gt;byte&lt;/code&gt;, &lt;a href=&quot;../lang/byte&quot;&gt;&lt;code&gt;Byte&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;short&lt;/code&gt;, and &lt;a href=&quot;../lang/short&quot;&gt;&lt;code&gt;Short&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;int&lt;/code&gt; and &lt;a href=&quot;../lang/integer&quot;&gt;&lt;code&gt;Integer&lt;/code&gt;&lt;/a&gt; when &lt;a href=&quot;../lang/character#isValidCodePoint-int-&quot;&gt;&lt;code&gt;Character.isValidCodePoint(int)&lt;/code&gt;&lt;/a&gt; returns &lt;code&gt;true&lt;/code&gt;. If it returns &lt;code&gt;false&lt;/code&gt; then an &lt;a href=&quot;illegalformatcodepointexception&quot;&gt;&lt;code&gt;IllegalFormatCodePointException&lt;/code&gt;&lt;/a&gt; will be thrown.</source>
          <target state="translated">이 변환은 &lt;code&gt;char&lt;/code&gt; 및 &lt;a href=&quot;../lang/character&quot;&gt; &lt;code&gt;Character&lt;/code&gt; 에&lt;/a&gt; 적용될 수 있습니다 . 그것은 또한 유형에 적용 할 수있다 &lt;code&gt;byte&lt;/code&gt; , &lt;a href=&quot;../lang/byte&quot;&gt; &lt;code&gt;Byte&lt;/code&gt; &lt;/a&gt; , &lt;code&gt;short&lt;/code&gt; , 그리고 &lt;a href=&quot;../lang/short&quot;&gt; &lt;code&gt;Short&lt;/code&gt; &lt;/a&gt; , &lt;code&gt;int&lt;/code&gt; 및 &lt;a href=&quot;../lang/integer&quot;&gt; &lt;code&gt;Integer&lt;/code&gt; &lt;/a&gt; 때 &lt;a href=&quot;../lang/character#isValidCodePoint-int-&quot;&gt; &lt;code&gt;Character.isValidCodePoint(int)&lt;/code&gt; &lt;/a&gt; 반환 &lt;code&gt;true&lt;/code&gt; . &lt;code&gt;false&lt;/code&gt; 를 반환 하면 &lt;a href=&quot;illegalformatcodepointexception&quot;&gt; &lt;code&gt;IllegalFormatCodePointException&lt;/code&gt; &lt;/a&gt; 이 발생합니다.</target>
        </trans-unit>
        <trans-unit id="d4e6898eb36b95cab7a561633153c21d39223d0f" translate="yes" xml:space="preserve">
          <source>This conversion may be applied to &lt;code&gt;long&lt;/code&gt;, &lt;a href=&quot;../lang/long&quot;&gt;&lt;code&gt;Long&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;calendar&quot;&gt;&lt;code&gt;Calendar&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../time/temporal/temporalaccessor&quot;&gt;&lt;code&gt;TemporalAccessor&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">이 변환은 &lt;code&gt;long&lt;/code&gt; , &lt;a href=&quot;../lang/long&quot;&gt; &lt;code&gt;Long&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;calendar&quot;&gt; &lt;code&gt;Calendar&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../time/temporal/temporalaccessor&quot;&gt; &lt;code&gt;TemporalAccessor&lt;/code&gt; 에&lt;/a&gt; 적용될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="517b8aa20552c61a91f79dd2c8f06ad04f21dd18" translate="yes" xml:space="preserve">
          <source>This copies attribute's value and &lt;code&gt;object&lt;/code&gt;'s value are equal.</source>
          <target state="translated">이것은 속성 값과 &lt;code&gt;object&lt;/code&gt; 값이 동일합니다.</target>
        </trans-unit>
        <trans-unit id="3af1152919c270dd3746bf00c4fdea0c682779b6" translate="yes" xml:space="preserve">
          <source>This copies supported attribute's members and &lt;code&gt;object&lt;/code&gt;'s members are the same.</source>
          <target state="translated">지원되는 속성의 멤버와 &lt;code&gt;object&lt;/code&gt; 의 멤버가 동일합니다.</target>
        </trans-unit>
        <trans-unit id="fd5b477116333c062818d408dd687a171f4669fc" translate="yes" xml:space="preserve">
          <source>This corresponds to CIM Associators and AssociatorNames operations.</source>
          <target state="translated">이는 CIM 어 소시 에이터 및 어 소시 에이터 이름 조작에 해당합니다.</target>
        </trans-unit>
        <trans-unit id="ee5e4096d63d47ee9154103b2f601ede84042c5c" translate="yes" xml:space="preserve">
          <source>This corresponds to the CIM &quot;References&quot; and &quot;ReferenceNames&quot; operations.</source>
          <target state="translated">이는 CIM &quot;참조&quot;및 &quot;ReferenceNames&quot;작업에 해당합니다.</target>
        </trans-unit>
        <trans-unit id="738c8cbd8e7c6c73686b87995d0815d68870584e" translate="yes" xml:space="preserve">
          <source>This could include setting a security provider or defining the location of the system-wide security policy. Malicious code that has permission to set a new security provider may set a rogue provider that steals confidential information such as cryptographic private keys. In addition, malicious code with permission to set the location of the system-wide security policy may point it to a security policy that grants the attacker all the necessary permissions it requires to successfully mount an attack on the system.</source>
          <target state="translated">여기에는 보안 공급자 설정 또는 시스템 전체 보안 정책의 위치 정의가 포함될 수 있습니다. 새로운 보안 공급자를 설정할 권한이있는 악성 코드는 암호화 개인 키와 같은 기밀 정보를 훔치는 악성 공급자를 설정할 수 있습니다. 또한 시스템 전체 보안 정책의 위치를 ​​설정할 권한이있는 악성 코드는 공격자가 시스템에 대한 공격을 성공적으로 수행하는 데 필요한 모든 권한을 공격자에게 부여하는 보안 정책을 가리킬 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8d1f3f66bf6cd5f1484e44e133a329f3b237ecf4" translate="yes" xml:space="preserve">
          <source>This could print sensitive information to a printer, or simply waste paper.</source>
          <target state="translated">민감한 정보를 프린터로 인쇄하거나 용지를 낭비 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="56059c121f9987e3f7ae9b88d2b190820643517b" translate="yes" xml:space="preserve">
          <source>This counts the AM/PM within the day, from 0 (AM) to 1 (PM). This field has the same meaning for all calendar systems.</source>
          <target state="translated">하루 중 AM / PM을 0 (AM)에서 1 (PM)까지 계산합니다. 이 필드는 모든 캘린더 시스템에서 동일한 의미를 갖습니다.</target>
        </trans-unit>
        <trans-unit id="e3ef439b9bf3ee683a33107641da83c71876df33" translate="yes" xml:space="preserve">
          <source>This counts the hour within the AM/PM, from 0 to 11. This is the hour that would be observed on a standard 12-hour digital clock. This field has the same meaning for all calendar systems.</source>
          <target state="translated">AM / PM 내의 시간을 0에서 11까지로 계산합니다. 이것은 표준 12 시간 디지털 시계에서 관찰되는 시간입니다. 이 필드는 모든 캘린더 시스템에서 동일한 의미를 갖습니다.</target>
        </trans-unit>
        <trans-unit id="6fe80e8a8118bcfbe3a79872753265c046bd1b5b" translate="yes" xml:space="preserve">
          <source>This counts the hour within the AM/PM, from 1 to 12. This is the hour that would be observed on a standard 12-hour analog wall clock. This field has the same meaning for all calendar systems.</source>
          <target state="translated">이것은 AM / PM 내에서 1에서 12 사이의 시간을 계산합니다. 이것은 표준 12 시간 아날로그 벽시계에서 관찰되는 시간입니다. 이 필드는 모든 캘린더 시스템에서 동일한 의미를 갖습니다.</target>
        </trans-unit>
        <trans-unit id="1c3e1a95914c08cc20e9ca89abd13423d42d4f17" translate="yes" xml:space="preserve">
          <source>This counts the hour within the AM/PM, from 1 to 24. This is the hour that would be observed on a 24-hour analog wall clock. This field has the same meaning for all calendar systems.</source>
          <target state="translated">이것은 AM / PM 내에서 1에서 24까지의 시간을 계산합니다. 이것은 24 시간 아날로그 벽시계에서 관찰되는 시간입니다. 이 필드는 모든 캘린더 시스템에서 동일한 의미를 갖습니다.</target>
        </trans-unit>
        <trans-unit id="93acc55f001469448a79a98bd583dba09908cbb3" translate="yes" xml:space="preserve">
          <source>This counts the hour within the day, from 0 to 23. This is the hour that would be observed on a standard 24-hour digital clock. This field has the same meaning for all calendar systems.</source>
          <target state="translated">하루 중 시간을 0부터 23까지로 계산합니다. 표준 24 시간 디지털 시계에서 관찰되는 시간입니다. 이 필드는 모든 캘린더 시스템에서 동일한 의미를 갖습니다.</target>
        </trans-unit>
        <trans-unit id="aaaf34f2441fdf24228214e7e0fc4f00e0479120" translate="yes" xml:space="preserve">
          <source>This counts the microsecond within the day, from 0 to (24 * 60 * 60 * 1,000,000) - 1. This field has the same meaning for all calendar systems.</source>
          <target state="translated">이것은 하루에서 0에서 (24 * 60 * 60 * 1,000,000)-1까지의 마이크로 초를 계산합니다.이 필드는 모든 캘린더 시스템에서 동일한 의미를 갖습니다.</target>
        </trans-unit>
        <trans-unit id="ed9cd0e15650f622b83c25879c0c386438c1be2a" translate="yes" xml:space="preserve">
          <source>This counts the microsecond within the second, from 0 to 999,999. This field has the same meaning for all calendar systems.</source>
          <target state="translated">이것은 0에서 999,999까지의 초 내에 마이크로 초를 계산합니다. 이 필드는 모든 캘린더 시스템에서 동일한 의미를 갖습니다.</target>
        </trans-unit>
        <trans-unit id="8c759c4bd143487bc003030cfe712876e38aadf0" translate="yes" xml:space="preserve">
          <source>This counts the millisecond within the day, from 0 to (24 * 60 * 60 * 1,000) - 1. This field has the same meaning for all calendar systems.</source>
          <target state="translated">이 값은 0에서 (24 * 60 * 60 * 1,000)-1까지 하루의 밀리 초를 계산합니다.이 필드는 모든 달력 시스템에서 동일한 의미를 갖습니다.</target>
        </trans-unit>
        <trans-unit id="be94fb9658ae99a66f454f2820f8c3e09301156d" translate="yes" xml:space="preserve">
          <source>This counts the millisecond within the second, from 0 to 999. This field has the same meaning for all calendar systems.</source>
          <target state="translated">이것은 0에서 999까지의 초 안에 밀리 초를 계산합니다.이 필드는 모든 달력 시스템에서 동일한 의미를 갖습니다.</target>
        </trans-unit>
        <trans-unit id="43edac64e538d85f435f090811bae70930ae8db5" translate="yes" xml:space="preserve">
          <source>This counts the minute within the day, from 0 to (24 * 60) - 1. This field has the same meaning for all calendar systems.</source>
          <target state="translated">하루 중 분을 0에서 (24 * 60)-1까지로 계산합니다.이 필드는 모든 달력 시스템에서 동일한 의미를 갖습니다.</target>
        </trans-unit>
        <trans-unit id="a8323702dacee178eecb33fed1d641d126ebb978" translate="yes" xml:space="preserve">
          <source>This counts the minute within the hour, from 0 to 59. This field has the same meaning for all calendar systems.</source>
          <target state="translated">시간을 분 단위로 0에서 59까지 계산합니다.이 필드는 모든 달력 시스템에서 동일한 의미를 갖습니다.</target>
        </trans-unit>
        <trans-unit id="9f3c3d601c91ad5aa95c1303425e41e79db48027" translate="yes" xml:space="preserve">
          <source>This counts the nanosecond within the day, from 0 to (24 * 60 * 60 * 1,000,000,000) - 1. This field has the same meaning for all calendar systems.</source>
          <target state="translated">이것은 0에서 (24 * 60 * 60 * 1,000,000,000)-1까지 하루 안에 나노초를 계산합니다.이 필드는 모든 달력 시스템에서 동일한 의미를 갖습니다.</target>
        </trans-unit>
        <trans-unit id="bfb02a38bb6f4039f42484bd49eb48f7c08dae23" translate="yes" xml:space="preserve">
          <source>This counts the nanosecond within the second, from 0 to 999,999,999. This field has the same meaning for all calendar systems.</source>
          <target state="translated">이것은 0에서 999,999,999까지의 초 안에 나노초를 계산합니다. 이 필드는 모든 캘린더 시스템에서 동일한 의미를 갖습니다.</target>
        </trans-unit>
        <trans-unit id="ab8b66611e87e40eefc297e069ff363056ed146a" translate="yes" xml:space="preserve">
          <source>This counts the second within the day, from 0 to (24 * 60 * 60) - 1. This field has the same meaning for all calendar systems.</source>
          <target state="translated">이것은 하루 중 초를 0부터 (24 * 60 * 60)-1까지로 계산합니다.이 필드는 모든 캘린더 시스템에서 동일한 의미를 갖습니다.</target>
        </trans-unit>
        <trans-unit id="81631a2f635e111ef578d2ae44c5b510837d0a0a" translate="yes" xml:space="preserve">
          <source>This counts the second within the minute, from 0 to 59. This field has the same meaning for all calendar systems.</source>
          <target state="translated">분 단위의 초를 0에서 59까지로 계산합니다.이 필드는 모든 캘린더 시스템에서 동일한 의미를 갖습니다.</target>
        </trans-unit>
        <trans-unit id="ce69caaa873db2922e22167e363b379f2568dbbb" translate="yes" xml:space="preserve">
          <source>This creates a local date-time based on the specified instant. First, the offset from UTC/Greenwich is obtained using the zone ID and instant, which is simple as there is only one valid offset for each instant. Then, the instant and offset are used to calculate the local date-time.</source>
          <target state="translated">지정된 순간을 기준으로 현지 날짜-시간을 만듭니다. 첫째, UTC / 그리니치에서의 오프셋은 영역 ID와 인스턴트를 사용하여 얻습니다. 이는 각 인스턴트마다 유효한 오프셋이 하나뿐이므로 간단합니다. 그런 다음 인스턴트 및 오프셋을 사용하여 현지 날짜-시간을 계산합니다.</target>
        </trans-unit>
        <trans-unit id="8bcea9f628768ea526e021b95c9f0c965440ecf6" translate="yes" xml:space="preserve">
          <source>This creates a zoned date-time based on the specified temporal. A &lt;code&gt;TemporalAccessor&lt;/code&gt; represents an arbitrary set of date and time information, which this factory converts to an instance of &lt;code&gt;ChronoZonedDateTime&lt;/code&gt;.</source>
          <target state="translated">지정된 시간을 기준으로 존 날짜-시간을 작성합니다. &lt;code&gt;TemporalAccessor&lt;/code&gt; 는 인스턴스에 대한 날짜 및 시간 정보의 임의의 집합이 공장 변환 나타낸다 &lt;code&gt;ChronoZonedDateTime&lt;/code&gt; 를 .</target>
        </trans-unit>
        <trans-unit id="1075baa34279992a9a891fe14095dfb63f09dd58" translate="yes" xml:space="preserve">
          <source>This creates a zoned date-time by &lt;a href=&quot;chrono/chronolocaldatetime#toInstant-java.time.ZoneOffset-&quot;&gt;&lt;code&gt;combining&lt;/code&gt;&lt;/a&gt; the &lt;code&gt;LocalDateTime&lt;/code&gt; and &lt;code&gt;ZoneOffset&lt;/code&gt;. This combination uniquely specifies an instant without ambiguity.</source>
          <target state="translated">&lt;code&gt;LocalDateTime&lt;/code&gt; 과 &lt;code&gt;ZoneOffset&lt;/code&gt; 을 &lt;a href=&quot;chrono/chronolocaldatetime#toInstant-java.time.ZoneOffset-&quot;&gt; &lt;code&gt;combining&lt;/code&gt; &lt;/a&gt; 하여 존 날짜-시간을 작성합니다 . 이 조합은 모호함이없는 순간을 고유하게 지정합니다.</target>
        </trans-unit>
        <trans-unit id="d7bd41c1bc48ec1280338d5697120083dfd49092" translate="yes" xml:space="preserve">
          <source>This creates a zoned date-time ensuring that the offset is valid for the local date-time according to the rules of the specified zone. If the offset is invalid, an exception is thrown.</source>
          <target state="translated">이렇게하면 존 지정 날짜-시간이 생성되어 지정된 존의 규칙에 따라 현지 날짜-시간에 오프셋이 유효하게됩니다. 오프셋이 유효하지 않은 경우 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="b7fd3ca00565a2d68e2676c388817128aadb75ff" translate="yes" xml:space="preserve">
          <source>This creates a zoned date-time matching the input local date and time as closely as possible. Time-zone rules, such as daylight savings, mean that not every local date-time is valid for the specified zone, thus the local date-time may be adjusted.</source>
          <target state="translated">이렇게하면 입력 로컬 날짜 및 시간과 최대한 일치하는 영역 날짜 / 시간이 생성됩니다. 일광 절약 시간제와 같은 시간대 규칙은 모든 지역 날짜-시간이 지정된 지역에 대해 유효한 것은 아니므로 지역 날짜-시간이 조정될 수 있음을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="953a8135d4549ccac3a13d7e66097776f2155026" translate="yes" xml:space="preserve">
          <source>This creates a zoned date-time matching the input local date-time as closely as possible. Time-zone rules, such as daylight savings, mean that not every local date-time is valid for the specified zone, thus the local date-time may be adjusted.</source>
          <target state="translated">이렇게하면 입력 로컬 날짜-시간과 최대한 일치하는 영역 날짜-시간이 생성됩니다. 일광 절약 시간제와 같은 시간대 규칙은 모든 지역 날짜-시간이 지정된 지역에 대해 유효한 것은 아니므로 지역 날짜-시간이 조정될 수 있음을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="0e6f04a6cf3de17c5a71327d692cb29d03417486" translate="yes" xml:space="preserve">
          <source>This creates a zoned date-time matching the local date-time of the seven specified fields as closely as possible. Time-zone rules, such as daylight savings, mean that not every local date-time is valid for the specified zone, thus the local date-time may be adjusted.</source>
          <target state="translated">이렇게하면 7 개의 지정된 필드의 현지 날짜-시간과 최대한 일치하는 영역 날짜-시간이 생성됩니다. 일광 절약 시간제와 같은 시간대 규칙은 모든 지역 날짜-시간이 지정된 지역에 대해 유효한 것은 아니므로 지역 날짜-시간이 조정될 수 있음을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="ec637bbf2a108c08978e643f234e8091c4ff5af4" translate="yes" xml:space="preserve">
          <source>This creates a zoned date-time with the same instant as that specified. Calling &lt;a href=&quot;chrono/chronozoneddatetime#toInstant--&quot;&gt;&lt;code&gt;ChronoZonedDateTime.toInstant()&lt;/code&gt;&lt;/a&gt; will return an instant equal to the one used here.</source>
          <target state="translated">이렇게하면 지정된 것과 동일한 순간으로 존 날짜-시간이 작성됩니다. &lt;a href=&quot;chrono/chronozoneddatetime#toInstant--&quot;&gt; &lt;code&gt;ChronoZonedDateTime.toInstant()&lt;/code&gt; &lt;/a&gt; 를 호출 하면 여기에 사용 된 것과 동일한 인스턴트가 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="3fab5c46a5121a4fea33b03ffa65d0ffb495eccf" translate="yes" xml:space="preserve">
          <source>This creates an instance based on years, months and days.</source>
          <target state="translated">연도, 월, 일을 기준으로 인스턴스를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="0a4dbd162ddc2407fbd25bcb8835bfd225c4bd3f" translate="yes" xml:space="preserve">
          <source>This creates an offset date-time using the local date-time and offset. The zone ID is ignored.</source>
          <target state="translated">로컬 날짜-시간 및 오프셋을 사용하여 오프셋 날짜-시간을 만듭니다. 영역 ID는 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="91124742156d682ef8b5ae91dc90e7ced43f48c5" translate="yes" xml:space="preserve">
          <source>This creates an offset date-time with the same instant as that specified. Finding the offset from UTC/Greenwich is simple as there is only one valid offset for each instant.</source>
          <target state="translated">지정된 것과 같은 순간으로 오프셋 날짜-시간을 만듭니다. 각 순간마다 하나의 유효한 오프셋 만 있기 때문에 UTC / 그리니치에서 오프셋을 찾는 것은 간단합니다.</target>
        </trans-unit>
        <trans-unit id="ee109c8a80a69358ebb8d236e545d87408ba6bc2" translate="yes" xml:space="preserve">
          <source>This creates an offset date-time with the seven specified fields.</source>
          <target state="translated">7 개의 지정된 필드로 오프셋 날짜-시간을 만듭니다.</target>
        </trans-unit>
        <trans-unit id="280ff15192faef86311adf588490a2dd4c2e4df0" translate="yes" xml:space="preserve">
          <source>This creates an offset date-time with the specified local date, time and offset.</source>
          <target state="translated">지정된 현지 날짜, 시간 및 오프셋을 사용하여 오프셋 날짜-시간을 만듭니다.</target>
        </trans-unit>
        <trans-unit id="0e142b1d221e02f3fbbd73e720e2868c0f523965" translate="yes" xml:space="preserve">
          <source>This creates an offset date-time with the specified local date-time and offset.</source>
          <target state="translated">지정된 현지 날짜-시간 및 오프셋을 사용하여 오프셋 날짜-시간을 만듭니다.</target>
        </trans-unit>
        <trans-unit id="009cd056837bc464fa749ee52c6794f2888f836a" translate="yes" xml:space="preserve">
          <source>This creates an offset time with the four specified fields.</source>
          <target state="translated">지정된 네 개의 필드를 사용하여 오프셋 시간을 만듭니다.</target>
        </trans-unit>
        <trans-unit id="35745461f41c68ef806d542d5e2fcb1f3614a590" translate="yes" xml:space="preserve">
          <source>This creates an offset time with the same instant as that specified. Finding the offset from UTC/Greenwich is simple as there is only one valid offset for each instant.</source>
          <target state="translated">지정된 것과 같은 순간으로 오프셋 시간을 만듭니다. 각 순간마다 하나의 유효한 오프셋 만 있기 때문에 UTC / 그리니치에서 오프셋을 찾는 것은 간단합니다.</target>
        </trans-unit>
        <trans-unit id="455f1f9ed7b865664c2f0e4e028ac4d8c817a274" translate="yes" xml:space="preserve">
          <source>This creates the simplest possible &lt;code&gt;ZonedDateTime&lt;/code&gt; using the offset as the zone ID.</source>
          <target state="translated">오프셋을 영역 ID로 사용하여 가장 간단한 &lt;code&gt;ZonedDateTime&lt;/code&gt; 을 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="0e56342900728bd48a541f7a0579d9ced91ae984" translate="yes" xml:space="preserve">
          <source>This datagram channel</source>
          <target state="translated">이 데이터 그램 채널</target>
        </trans-unit>
        <trans-unit id="0505f4ae4b37af933f4a494f1bd199f351093fb6" translate="yes" xml:space="preserve">
          <source>This date operates using one of several variants of the &lt;a href=&quot;hijrahchronology&quot;&gt;Hijrah calendar&lt;/a&gt;.</source>
          <target state="translated">이 날짜는 &lt;a href=&quot;hijrahchronology&quot;&gt;Hijrah 일정&lt;/a&gt; 의 여러 변형 중 하나를 사용하여 작동합니다 .</target>
        </trans-unit>
        <trans-unit id="5d5cf5344795ddbee0592b8f5074a4decd99e8ab" translate="yes" xml:space="preserve">
          <source>This date operates using the &lt;a href=&quot;japanesechronology&quot;&gt;Japanese Imperial calendar&lt;/a&gt;. This calendar system is primarily used in Japan.</source>
          <target state="translated">이 날짜는 &lt;a href=&quot;japanesechronology&quot;&gt;일본식 달력을&lt;/a&gt; 사용하여 작동합니다 . 이 달력 시스템은 주로 일본에서 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="e18cba966f2d91e0393d11d4baa965825e81cd17" translate="yes" xml:space="preserve">
          <source>This date operates using the &lt;a href=&quot;minguochronology&quot;&gt;Minguo calendar&lt;/a&gt;. This calendar system is primarily used in the Republic of China, often known as Taiwan. Dates are aligned such that &lt;code&gt;0001-01-01 (Minguo)&lt;/code&gt; is &lt;code&gt;1912-01-01 (ISO)&lt;/code&gt;.</source>
          <target state="translated">이 날짜는 &lt;a href=&quot;minguochronology&quot;&gt;Minguo 일정을&lt;/a&gt; 사용하여 작동합니다 . 이 캘린더 시스템은 주로 대만으로 알려진 중국에서 주로 사용됩니다. &lt;code&gt;0001-01-01 (Minguo)&lt;/code&gt; 이 &lt;code&gt;1912-01-01 (ISO)&lt;/code&gt; 이되도록 날짜가 정렬 됩니다.</target>
        </trans-unit>
        <trans-unit id="193b4b41c0bb17831b51c2083da42604be66508d" translate="yes" xml:space="preserve">
          <source>This date operates using the &lt;a href=&quot;thaibuddhistchronology&quot;&gt;Thai Buddhist calendar&lt;/a&gt;. This calendar system is primarily used in Thailand. Dates are aligned such that &lt;code&gt;2484-01-01 (Buddhist)&lt;/code&gt; is &lt;code&gt;1941-01-01 (ISO)&lt;/code&gt;.</source>
          <target state="translated">이 날짜는 &lt;a href=&quot;thaibuddhistchronology&quot;&gt;태국 불교 달력을&lt;/a&gt; 사용하여 작동합니다 . 이 달력 시스템은 주로 태국에서 사용됩니다. &lt;code&gt;2484-01-01 (Buddhist)&lt;/code&gt; 이 &lt;code&gt;1941-01-01 (ISO)&lt;/code&gt; 이되도록 날짜가 정렬 됩니다.</target>
        </trans-unit>
        <trans-unit id="2833508e7b6ddb38abb8ca21e4e52f2be7d2502a" translate="yes" xml:space="preserve">
          <source>This date will be passed to the formatter to produce a string.</source>
          <target state="translated">이 날짜는 포맷터로 전달되어 문자열을 생성합니다.</target>
        </trans-unit>
        <trans-unit id="03bbde6ad6f81f2897854a309baf844d646c3cee" translate="yes" xml:space="preserve">
          <source>This date-time at completed attribute's &lt;a href=&quot;../../../../java/util/date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; value and &lt;code&gt;object&lt;/code&gt;'s &lt;a href=&quot;../../../../java/util/date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; value are equal.</source>
          <target state="translated">완성 된 속성의에서이 날짜 시간 &lt;a href=&quot;../../../../java/util/date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt; 값과 &lt;code&gt;object&lt;/code&gt; 의 &lt;a href=&quot;../../../../java/util/date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt; 값은 동일하다.</target>
        </trans-unit>
        <trans-unit id="065897994c9ec9c07686d203308d4d1170d84034" translate="yes" xml:space="preserve">
          <source>This date-time at creation attribute's &lt;a href=&quot;../../../../java/util/date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; value and &lt;code&gt;object&lt;/code&gt;'s &lt;a href=&quot;../../../../java/util/date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; value are equal.</source>
          <target state="translated">작성시이 날짜-시간 속성의 &lt;a href=&quot;../../../../java/util/date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt; 값과 &lt;code&gt;object&lt;/code&gt; 의 &lt;a href=&quot;../../../../java/util/date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt; 값이 같습니다.</target>
        </trans-unit>
        <trans-unit id="f9f7fdb1a7ab5e22d18b273cca1aba15377835d6" translate="yes" xml:space="preserve">
          <source>This date-time at processing attribute's &lt;a href=&quot;../../../../java/util/date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; value and &lt;code&gt;object&lt;/code&gt;'s &lt;a href=&quot;../../../../java/util/date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; value are equal.</source>
          <target state="translated">처리 속성의에서이 날짜 시간 &lt;a href=&quot;../../../../java/util/date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt; 값과 &lt;code&gt;object&lt;/code&gt; 의 &lt;a href=&quot;../../../../java/util/date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt; 값은 동일하다.</target>
        </trans-unit>
        <trans-unit id="6f5eb385ed9ad064f68018650b72f376e17d69df" translate="yes" xml:space="preserve">
          <source>This date-time attribute's &lt;code&gt;java.util.Date&lt;/code&gt; value and &lt;code&gt;object&lt;/code&gt;'s &lt;code&gt;java.util.Date&lt;/code&gt; value are equal.</source>
          <target state="translated">이 날짜-시간 속성의 &lt;code&gt;java.util.Date&lt;/code&gt; 값과 &lt;code&gt;object&lt;/code&gt; 의 &lt;code&gt;java.util.Date&lt;/code&gt; 값이 같습니다.</target>
        </trans-unit>
        <trans-unit id="c0c317e8a8948b79ea81d771f3ff6bfb718da2b4" translate="yes" xml:space="preserve">
          <source>This date-time will be passed to the formatter to produce a string.</source>
          <target state="translated">이 날짜-시간은 포맷터로 전달되어 문자열을 생성합니다.</target>
        </trans-unit>
        <trans-unit id="f6b70bbe903f9efaf8a84e0e3086ef40860d9b34" translate="yes" xml:space="preserve">
          <source>This decoder</source>
          <target state="translated">이 디코더</target>
        </trans-unit>
        <trans-unit id="464b8e800fdc7710db841535acfd4202ccccb8d8" translate="yes" xml:space="preserve">
          <source>This decoder's charset</source>
          <target state="translated">이 디코더의 문자셋</target>
        </trans-unit>
        <trans-unit id="8fba0c9757d30a0a89ef7b7bf21941af4bb567d3" translate="yes" xml:space="preserve">
          <source>This decoder's current replacement, which is never &lt;code&gt;null&lt;/code&gt; and is never empty</source>
          <target state="translated">이 디코더의 현재의 교체. &lt;code&gt;null&lt;/code&gt; 는 절대없고 비어 있지 않은</target>
        </trans-unit>
        <trans-unit id="c6e294c1ece1277c33e3a64c30a2a9b2adbf7b42" translate="yes" xml:space="preserve">
          <source>This default implementation behaves as if &lt;code&gt;thenComparing(comparing(keyExtractor))&lt;/code&gt;.</source>
          <target state="translated">이 기본 구현은 &lt;code&gt;thenComparing(comparing(keyExtractor))&lt;/code&gt; 처럼 동작 합니다.</target>
        </trans-unit>
        <trans-unit id="a71730c8354af9adec6b7390ea8d92b2eb036a0e" translate="yes" xml:space="preserve">
          <source>This default implementation behaves as if &lt;code&gt;thenComparing(comparing(keyExtractor, cmp))&lt;/code&gt;.</source>
          <target state="translated">이 기본 구현은 &lt;code&gt;thenComparing(comparing(keyExtractor, cmp))&lt;/code&gt; 처럼 동작 합니다.</target>
        </trans-unit>
        <trans-unit id="c1c6483c171dc8162f46c1935cdf11c66743ab54" translate="yes" xml:space="preserve">
          <source>This default implementation behaves as if &lt;code&gt;thenComparing(comparingDouble(keyExtractor))&lt;/code&gt;.</source>
          <target state="translated">이 기본 구현은 &lt;code&gt;thenComparing(comparingDouble(keyExtractor))&lt;/code&gt; 처럼 작동 합니다.</target>
        </trans-unit>
        <trans-unit id="79f281e08bd360780f8aa71ae3a4e5d8150955e3" translate="yes" xml:space="preserve">
          <source>This default implementation behaves as if &lt;code&gt;thenComparing(comparingInt(keyExtractor))&lt;/code&gt;.</source>
          <target state="translated">이 기본 구현은 &lt;code&gt;thenComparing(comparingInt(keyExtractor))&lt;/code&gt; 처럼 동작 합니다.</target>
        </trans-unit>
        <trans-unit id="8fc9fbfb9f325a40e6150b7f43eb9fb01fbab52d" translate="yes" xml:space="preserve">
          <source>This default implementation behaves as if &lt;code&gt;thenComparing(comparingLong(keyExtractor))&lt;/code&gt;.</source>
          <target state="translated">이 기본 구현은 &lt;code&gt;thenComparing(comparingLong(keyExtractor))&lt;/code&gt; 처럼 작동 합니다.</target>
        </trans-unit>
        <trans-unit id="dc96d625b6603417a843fec478c20860cb744dc0" translate="yes" xml:space="preserve">
          <source>This default implementation calculates from the epoch-day of the date and the second-of-day of the time.</source>
          <target state="translated">이 기본 구현은 날짜의 시대와 시간의 둘째 날부터 계산합니다.</target>
        </trans-unit>
        <trans-unit id="2e2abeadb86303864e3ae35f66cd65485be5379f" translate="yes" xml:space="preserve">
          <source>This default implementation calculates the duration from the &lt;a href=&quot;zonerules#getOffset-java.time.Instant-&quot;&gt;&lt;code&gt;actual&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;zonerules#getStandardOffset-java.time.Instant-&quot;&gt;&lt;code&gt;standard&lt;/code&gt;&lt;/a&gt; offsets.</source>
          <target state="translated">이 기본 구현은 &lt;a href=&quot;zonerules#getOffset-java.time.Instant-&quot;&gt; &lt;code&gt;actual&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;zonerules#getStandardOffset-java.time.Instant-&quot;&gt; &lt;code&gt;standard&lt;/code&gt; &lt;/a&gt; 오프셋 에서 기간을 계산 합니다.</target>
        </trans-unit>
        <trans-unit id="169bfbd5e3ecb82129ede4262c00e34877c31b06" translate="yes" xml:space="preserve">
          <source>This default implementation checks if &lt;a href=&quot;zonerules#getValidOffsets-java.time.LocalDateTime-&quot;&gt;&lt;code&gt;getValidOffsets(java.time.LocalDateTime)&lt;/code&gt;&lt;/a&gt; contains the specified offset.</source>
          <target state="translated">이 기본 구현은 &lt;a href=&quot;zonerules#getValidOffsets-java.time.LocalDateTime-&quot;&gt; &lt;code&gt;getValidOffsets(java.time.LocalDateTime)&lt;/code&gt; &lt;/a&gt; 에 지정된 오프셋이 포함되어 있는지 확인합니다 .</target>
        </trans-unit>
        <trans-unit id="5a238cb286f4cf27357aa51ba2484d6935d2091f" translate="yes" xml:space="preserve">
          <source>This default implementation compares the &lt;a href=&quot;zonerules#getOffset-java.time.Instant-&quot;&gt;&lt;code&gt;actual&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;zonerules#getStandardOffset-java.time.Instant-&quot;&gt;&lt;code&gt;standard&lt;/code&gt;&lt;/a&gt; offsets.</source>
          <target state="translated">이 기본 구현은 &lt;a href=&quot;zonerules#getOffset-java.time.Instant-&quot;&gt; &lt;code&gt;actual&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;zonerules#getStandardOffset-java.time.Instant-&quot;&gt; &lt;code&gt;standard&lt;/code&gt; &lt;/a&gt; 오프셋을 비교합니다 .</target>
        </trans-unit>
        <trans-unit id="f1faf19d3fdd99785d0886e0fc76b73324e814ac" translate="yes" xml:space="preserve">
          <source>This default implementation derives the value using &lt;a href=&quot;temporal#plus-long-java.time.temporal.TemporalUnit-&quot;&gt;&lt;code&gt;Temporal.plus(long, TemporalUnit)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 기본 구현은 &lt;a href=&quot;temporal#plus-long-java.time.temporal.TemporalUnit-&quot;&gt; &lt;code&gt;Temporal.plus(long, TemporalUnit)&lt;/code&gt; &lt;/a&gt; 사용하여 값을 파생합니다 .</target>
        </trans-unit>
        <trans-unit id="d386d7057ca0a34151b0b0300d6a175876ee8422" translate="yes" xml:space="preserve">
          <source>This default implementation is suitable for all implementations.</source>
          <target state="translated">이 기본 구현은 모든 구현에 적합합니다.</target>
        </trans-unit>
        <trans-unit id="8a8d4b1f4bfe64391e6db936ab202fb9eadb363a" translate="yes" xml:space="preserve">
          <source>This default implementation of the &lt;code&gt;initialize&lt;/code&gt; method assumes all state held in objects of this type is exposed via the matching pairs of &quot;setter&quot; and &quot;getter&quot; methods in the order they are returned by the Introspector. If a property descriptor defines a &quot;transient&quot; attribute with a value equal to &lt;code&gt;Boolean.TRUE&lt;/code&gt; the property is ignored by this default implementation. Note that this use of the word &quot;transient&quot; is quite independent of the field modifier that is used by the &lt;code&gt;ObjectOutputStream&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;initialize&lt;/code&gt; 메소드 의이 기본 구현은 이 유형의 오브젝트에 보유 된 모든 상태가 Introspector에 의해 리턴되는 순서대로 일치하는 &quot;setter&quot;및 &quot;getter&quot;메소드 쌍을 통해 노출된다고 가정합니다. 속성 설명자가 값이 &lt;code&gt;Boolean.TRUE&lt;/code&gt; 인 &quot;일시적&quot;속성을 정의하면 이 기본 구현에서 속성이 무시됩니다. &quot;transient&quot;라는 단어의 사용은 &lt;code&gt;ObjectOutputStream&lt;/code&gt; 에서 사용되는 필드 수정 자와는 무관합니다 .</target>
        </trans-unit>
        <trans-unit id="c6d18fecb1892c769cfb818fd07f57c8d2d4b480" translate="yes" xml:space="preserve">
          <source>This default implementation of the &lt;code&gt;instantiate&lt;/code&gt; method returns an expression containing the predefined method name &quot;new&quot; which denotes a call to a constructor with the arguments as specified in the &lt;code&gt;DefaultPersistenceDelegate&lt;/code&gt;'s constructor.</source>
          <target state="translated">&lt;code&gt;instantiate&lt;/code&gt; 메소드 의이 기본 구현은 &lt;code&gt;DefaultPersistenceDelegate&lt;/code&gt; 의 생성자에 지정된 인수를 사용하여 생성자에 대한 호출을 표시하는 사전 정의 된 메소드 이름 &quot;new&quot;를 포함하는 표현식을 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="4e3ed3191a5dd8a7f450da1d42e2012fd1ba2f83" translate="yes" xml:space="preserve">
          <source>This default implementation performs the comparison based on the epoch-day and nano-of-day.</source>
          <target state="translated">이 기본 구현은 시대 및 나노 일을 기준으로 비교를 수행합니다.</target>
        </trans-unit>
        <trans-unit id="531f7403abecf5a94352ea24034062f99c5ba20f" translate="yes" xml:space="preserve">
          <source>This default implementation performs the comparison based on the epoch-day.</source>
          <target state="translated">이 기본 구현은 획일을 기준으로 비교를 수행합니다.</target>
        </trans-unit>
        <trans-unit id="24f3f70ac92394e68221670a6bfb85088be2f996" translate="yes" xml:space="preserve">
          <source>This default implementation performs the comparison based on the epoch-second and nano-of-second.</source>
          <target state="translated">이 기본 구현은 에포크 초 및 나노초를 기준으로 비교를 수행합니다.</target>
        </trans-unit>
        <trans-unit id="f06750614dc9ea8bdb578b17b023fde237c84e95" translate="yes" xml:space="preserve">
          <source>This default implementation performs the comparison defined above.</source>
          <target state="translated">이 기본 구현은 위에서 정의한 비교를 수행합니다.</target>
        </trans-unit>
        <trans-unit id="0b0b45e33e2905f3578d1870df294ef3cb1ea6b8" translate="yes" xml:space="preserve">
          <source>This default implementation queries the &lt;code&gt;EPOCH_DAY&lt;/code&gt; field.</source>
          <target state="translated">이 기본 구현은 &lt;code&gt;EPOCH_DAY&lt;/code&gt; 필드를 쿼리합니다 .</target>
        </trans-unit>
        <trans-unit id="7298671b0593fa5d649e9dcd7b938e4b73854028" translate="yes" xml:space="preserve">
          <source>This default implementation uses &lt;a href=&quot;chronology#eraOf-int-&quot;&gt;&lt;code&gt;Chronology.eraOf(int)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 기본 구현은 &lt;a href=&quot;chronology#eraOf-int-&quot;&gt; &lt;code&gt;Chronology.eraOf(int)&lt;/code&gt; &lt;/a&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="4ee6f479f6b1fed2559699c8684f0851dbe3d3bd" translate="yes" xml:space="preserve">
          <source>This default implementation uses &lt;a href=&quot;chronology#isLeapYear-long-&quot;&gt;&lt;code&gt;Chronology.isLeapYear(long)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 기본 구현은 &lt;a href=&quot;chronology#isLeapYear-long-&quot;&gt; &lt;code&gt;Chronology.isLeapYear(long)&lt;/code&gt; &lt;/a&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="71192131c6d8b3bd7f25ec7b2065eaf9573350a8" translate="yes" xml:space="preserve">
          <source>This default policy of locating the initial context and URL context factories may be overridden by calling &lt;code&gt;NamingManager.setInitialContextFactoryBuilder()&lt;/code&gt;.</source>
          <target state="translated">초기 컨텍스트 및 URL 컨텍스트 팩토리를 찾는이 기본 정책은 &lt;code&gt;NamingManager.setInitialContextFactoryBuilder()&lt;/code&gt; 를 호출하여 무시할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="f33f15e845fa4ca24888166902444c0ee87d40af" translate="yes" xml:space="preserve">
          <source>This defines the level of protection provided to the data sent on the connection, including the kind of encryption used and most aspects of how authentication is done.</source>
          <target state="translated">여기에는 사용 된 암호화 종류와 인증 수행 방법의 대부분을 포함하여 연결에서 전송 된 데이터에 제공되는 보호 수준이 정의됩니다.</target>
        </trans-unit>
        <trans-unit id="111a23a69d7d68d0e2d926039231ac3c3dc1dffa" translate="yes" xml:space="preserve">
          <source>This defines the point at infinity.</source>
          <target state="translated">무한대의 점을 정의합니다.</target>
        </trans-unit>
        <trans-unit id="0832eacc47b98fb52bccbd73b04f58a50bb09410" translate="yes" xml:space="preserve">
          <source>This defines the protocol used in the connection.</source>
          <target state="translated">연결에 사용되는 프로토콜을 정의합니다.</target>
        </trans-unit>
        <trans-unit id="4115b8651bf03a14c989c86915d64b772401371e" translate="yes" xml:space="preserve">
          <source>This definition allows hash tables to operate properly.</source>
          <target state="translated">이 정의는 해시 테이블이 올바르게 작동하도록합니다.</target>
        </trans-unit>
        <trans-unit id="d329d67ac47f002e6a5289bb2a9b171e6b41c225" translate="yes" xml:space="preserve">
          <source>This definition ignores leap seconds, but considers that Days vary due to daylight saving time and months have different lengths.</source>
          <target state="translated">이 정의는 윤초를 무시하지만 일광 절약 시간 제로 인해 요일이 다르고 달의 길이가 다른 것으로 간주합니다.</target>
        </trans-unit>
        <trans-unit id="28b41138e83324a8820ab7ffd1eda3fc94f119b5" translate="yes" xml:space="preserve">
          <source>This definition should result in implementations comparing their entire state.</source>
          <target state="translated">이 정의는 구현으로 전체 상태를 비교해야합니다.</target>
        </trans-unit>
        <trans-unit id="8332acd4b87a9198ae6fac3c376315a3b8e63721" translate="yes" xml:space="preserve">
          <source>This deprecated class is maintained for compatibility. In previous versions of JMX, there was one &lt;code&gt;DefaultLoaderRepository&lt;/code&gt; shared by all MBean servers. As of JMX 1.2, that functionality is approximated by using &lt;a href=&quot;../mbeanserverfactory#findMBeanServer-java.lang.String-&quot;&gt;&lt;code&gt;MBeanServerFactory.findMBeanServer(java.lang.String)&lt;/code&gt;&lt;/a&gt; to find all known MBean servers, and consulting the &lt;a href=&quot;classloaderrepository&quot;&gt;&lt;code&gt;ClassLoaderRepository&lt;/code&gt;&lt;/a&gt; of each one. It is strongly recommended that code referencing &lt;code&gt;DefaultLoaderRepository&lt;/code&gt; be rewritten.</source>
          <target state="translated">이 폐기 된 클래스는 호환성을 위해 유지됩니다. 이전 버전의 JMX에는 모든 MBean 서버가 공유하는 하나의 &lt;code&gt;DefaultLoaderRepository&lt;/code&gt; 가있었습니다 . JMX 1.2 &lt;a href=&quot;../mbeanserverfactory#findMBeanServer-java.lang.String-&quot;&gt; &lt;code&gt;MBeanServerFactory.findMBeanServer(java.lang.String)&lt;/code&gt; &lt;/a&gt; 를 사용하여 알려진 모든 MBean 서버를 찾고 각 서버의 &lt;a href=&quot;classloaderrepository&quot;&gt; &lt;code&gt;ClassLoaderRepository&lt;/code&gt; &lt;/a&gt; 를 참조하여 해당 기능을 추정합니다 . &lt;code&gt;DefaultLoaderRepository&lt;/code&gt; 를 참조하는 코드를 다시 작성 하는 것이 좋습니다 .</target>
        </trans-unit>
        <trans-unit id="fca008d43a9dbe738b0a6610e8893a67d8faf707" translate="yes" xml:space="preserve">
          <source>This deprecated class is maintained for compatibility. In previous versions of the JMX API, there was one &lt;code&gt;DefaultLoaderRepository&lt;/code&gt; shared by all MBean servers. As of version 1.2 of the JMX API, that functionality is approximated by using &lt;a href=&quot;mbeanserverfactory#findMBeanServer-java.lang.String-&quot;&gt;&lt;code&gt;MBeanServerFactory.findMBeanServer(java.lang.String)&lt;/code&gt;&lt;/a&gt; to find all known MBean servers, and consulting the &lt;a href=&quot;loading/classloaderrepository&quot;&gt;&lt;code&gt;ClassLoaderRepository&lt;/code&gt;&lt;/a&gt; of each one. It is strongly recommended that code referencing &lt;code&gt;DefaultLoaderRepository&lt;/code&gt; be rewritten.</source>
          <target state="translated">이 폐기 된 클래스는 호환성을 위해 유지됩니다. 이전 버전의 JMX API에는 모든 MBean 서버가 공유하는 하나의 &lt;code&gt;DefaultLoaderRepository&lt;/code&gt; 가있었습니다 . JMX API 버전 1.2 &lt;a href=&quot;mbeanserverfactory#findMBeanServer-java.lang.String-&quot;&gt; &lt;code&gt;MBeanServerFactory.findMBeanServer(java.lang.String)&lt;/code&gt; &lt;/a&gt; 를 사용하여 알려진 모든 MBean 서버를 찾고 각각 의 &lt;a href=&quot;loading/classloaderrepository&quot;&gt; &lt;code&gt;ClassLoaderRepository&lt;/code&gt; &lt;/a&gt; 를 참조하여 해당 기능을 추정합니다 . &lt;code&gt;DefaultLoaderRepository&lt;/code&gt; 를 참조하는 코드를 다시 작성 하는 것이 좋습니다 .</target>
        </trans-unit>
        <trans-unit id="873206fbd8667f0d0d7ba7134a13368739a17945" translate="yes" xml:space="preserve">
          <source>This design can be improved by noticing that in the recursive case, the task has nothing to do after forking its right task, so can directly invoke its left task before returning. (This is an analog of tail recursion removal.) Also, because the task returns upon executing its left task (rather than falling through to invoke &lt;code&gt;tryComplete&lt;/code&gt;) the pending count is set to one:</source>
          <target state="translated">재귀 적 경우에는 작업이 올바른 작업을 수행 한 후 수행 할 작업이 없으므로 반환하기 전에 왼쪽 작업을 직접 호출 할 수 있다는 점을 알면이 디자인을 개선 할 수 있습니다. (이것은 테일 재귀 제거와 유사합니다.) 또한 태스크가 &lt;code&gt;tryComplete&lt;/code&gt; 를 호출하기 위해 넘어지지 않고 왼쪽 태스크를 실행하면 리턴 되므로 보류 카운트는 1로 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="4b0a9b0fc7f5e860560b2b99270b343bd48dce52" translate="yes" xml:space="preserve">
          <source>This destination attribute's URI and &lt;code&gt;object&lt;/code&gt;'s URI are equal.</source>
          <target state="translated">이 목적지 속성의 URI와 &lt;code&gt;object&lt;/code&gt; 의 URI가 동일합니다.</target>
        </trans-unit>
        <trans-unit id="57cee4c838a296b3745f14f6eeea64b1c29f9e68" translate="yes" xml:space="preserve">
          <source>This determines whether the temporal accessor supports this field. If this returns false, then the temporal cannot be queried for this field.</source>
          <target state="translated">임시 접근자가이 필드를 지원하는지 여부를 결정합니다. 이것이 false를 리턴하면이 필드에 대해 시간적 조회를 수행 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="3adfc4c68ca3c64ed288024ec369c1cc1dc8c36c" translate="yes" xml:space="preserve">
          <source>This disables the lookup of services implemented by the provider. They are no longer accessible due to removal of the properties specifying their names and locations. This may change the behavior or disable execution of other parts of the program that would normally utilize the Provider, as described under the &quot;removeProvider.{provider name}&quot; permission.</source>
          <target state="translated">공급자가 구현 한 서비스 조회를 비활성화합니다. 이름과 위치를 지정하는 속성을 제거하여 더 이상 액세스 할 수 없습니다. 이는 &quot;removeProvider. {provider name}&quot;권한에 설명 된대로 일반적으로 제공자를 사용하는 프로그램의 다른 부분의 동작을 변경하거나 실행하지 못하게 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="cb166f6b813d40e0f82e2a7c9dbad27ed0ccee7e" translate="yes" xml:space="preserve">
          <source>This disables the lookup of services implemented by the provider. This may thus change the behavior or disable execution of other parts of the program that would normally utilize the Provider, as described under the &quot;removeProvider.{provider name}&quot; permission.</source>
          <target state="translated">공급자가 구현 한 서비스 조회를 비활성화합니다. 따라서 &quot;removeProvider. {provider name}&quot;권한에 설명 된대로 공급자를 일반적으로 사용하는 프로그램의 다른 부분의 동작이 변경되거나 실행이 해제 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3310841316113d983c404968320f7758ac33f98c" translate="yes" xml:space="preserve">
          <source>This doc's print data representation object is obtained, then an input stream for reading the print data from the print data representation object as a stream of bytes is created and returned. However, if the print data representation object is itself an input stream, then the print data representation object is simply returned.</source>
          <target state="translated">이 doc의 인쇄 데이터 표현 오브젝트가 취득 된 다음, 바이트 스트림으로서 인쇄 데이터 표현 오브젝트로부터 인쇄 데이터를 판독하기위한 입력 스트림이 작성되어 리턴된다. 그러나, 인쇄 데이터 표현 객체 자체가 입력 스트림 인 경우, 인쇄 데이터 표현 객체가 단순히 반환된다.</target>
        </trans-unit>
        <trans-unit id="f8fa20b52058290987c9e264d00257b2f293f7fc" translate="yes" xml:space="preserve">
          <source>This document name attribute's locale and &lt;code&gt;object&lt;/code&gt;'s locale are equal.</source>
          <target state="translated">이 문서명 속성의 로케일과 &lt;code&gt;object&lt;/code&gt; 로케일이 동일합니다.</target>
        </trans-unit>
        <trans-unit id="024c36a03c3baad0644062a158a2272b06975c8e" translate="yes" xml:space="preserve">
          <source>This document name attribute's underlying string and &lt;code&gt;object&lt;/code&gt;'s underlying string are equal.</source>
          <target state="translated">이 문서명 속성의 기본이되는 캐릭터 라인과 &lt;code&gt;object&lt;/code&gt; 기본이되는 캐릭터 라인이 동일하다</target>
        </trans-unit>
        <trans-unit id="401fcf75c1399bb32c8059d9e92fe949e823f757" translate="yes" xml:space="preserve">
          <source>This encoder</source>
          <target state="translated">이 인코더</target>
        </trans-unit>
        <trans-unit id="06c53a07179fa409192de61c9f405cc3875096dc" translate="yes" xml:space="preserve">
          <source>This encoder's charset</source>
          <target state="translated">이 인코더의 문자셋</target>
        </trans-unit>
        <trans-unit id="e5daae3e79cea5983169c2c8c7faaa7802435961" translate="yes" xml:space="preserve">
          <source>This encoder's current replacement, which is never &lt;code&gt;null&lt;/code&gt; and is never empty</source>
          <target state="translated">이 엔코더의 현재 교체는 &lt;code&gt;null&lt;/code&gt; 이 아니며 비어 있지 않습니다.</target>
        </trans-unit>
        <trans-unit id="31808377ea719645502f28dca0abd4aeaf250090" translate="yes" xml:space="preserve">
          <source>This ensures that &lt;code&gt; t1.equals(t2) &lt;/code&gt; implies that &lt;code&gt; t1.hashCode()==t2.hashCode() &lt;/code&gt; for any two &lt;code&gt;CompositeData&lt;/code&gt; instances &lt;code&gt;t1&lt;/code&gt; and &lt;code&gt;t2&lt;/code&gt;, as required by the general contract of the method &lt;a href=&quot;../../../java/lang/object#hashCode--&quot;&gt;&lt;code&gt;Object.hashCode()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 것을 보장하지만 &lt;code&gt; t1.equals(t2) &lt;/code&gt; 의미하는 &lt;code&gt; t1.hashCode()==t2.hashCode() &lt;/code&gt; 임의의 두 &lt;code&gt;CompositeData&lt;/code&gt; 인스턴스 &lt;code&gt;t1&lt;/code&gt; 및 &lt;code&gt;t2&lt;/code&gt; , 상기 방법은 일반 계약에 의해 요구 &lt;a href=&quot;../../../java/lang/object#hashCode--&quot;&gt; &lt;code&gt;Object.hashCode()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c1f177eea9c0b7fd7085bad84524a8743bb0a4cf" translate="yes" xml:space="preserve">
          <source>This ensures that &lt;code&gt; t1.equals(t2) &lt;/code&gt; implies that &lt;code&gt; t1.hashCode()==t2.hashCode() &lt;/code&gt; for any two &lt;code&gt;CompositeDataSupport&lt;/code&gt; instances &lt;code&gt;t1&lt;/code&gt; and &lt;code&gt;t2&lt;/code&gt;, as required by the general contract of the method &lt;a href=&quot;../../../java/lang/object#hashCode--&quot;&gt;&lt;code&gt;Object.hashCode()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 것을 보장하지만 &lt;code&gt; t1.equals(t2) &lt;/code&gt; 의미하는 &lt;code&gt; t1.hashCode()==t2.hashCode() &lt;/code&gt; 임의의 두 &lt;code&gt;CompositeDataSupport&lt;/code&gt; 의 인스턴스 &lt;code&gt;t1&lt;/code&gt; 및 &lt;code&gt;t2&lt;/code&gt; 에있어서의 일반 계약에 의해 필요에 따라 &lt;a href=&quot;../../../java/lang/object#hashCode--&quot;&gt; &lt;code&gt;Object.hashCode()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f9137e249ccdfce59178263ae1ef25f8b68a479e" translate="yes" xml:space="preserve">
          <source>This ensures that &lt;code&gt; t1.equals(t2) &lt;/code&gt; implies that &lt;code&gt; t1.hashCode()==t2.hashCode() &lt;/code&gt; for any two &lt;code&gt;OpenMBeanAttributeInfo&lt;/code&gt; instances &lt;code&gt;t1&lt;/code&gt; and &lt;code&gt;t2&lt;/code&gt;, as required by the general contract of the method &lt;a href=&quot;../../../java/lang/object#hashCode--&quot;&gt;&lt;code&gt;Object.hashCode()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 것을 보장하지만 &lt;code&gt; t1.equals(t2) &lt;/code&gt; 의미하는 &lt;code&gt; t1.hashCode()==t2.hashCode() &lt;/code&gt; 임의의 두 &lt;code&gt;OpenMBeanAttributeInfo&lt;/code&gt; 인스턴스 &lt;code&gt;t1&lt;/code&gt; 및 &lt;code&gt;t2&lt;/code&gt; 에있어서의 일반 계약에 의해 필요에 따라 &lt;a href=&quot;../../../java/lang/object#hashCode--&quot;&gt; &lt;code&gt;Object.hashCode()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="60a3c8ef80596ba6082e576b25f1e93a0a165d54" translate="yes" xml:space="preserve">
          <source>This ensures that &lt;code&gt; t1.equals(t2) &lt;/code&gt; implies that &lt;code&gt; t1.hashCode()==t2.hashCode() &lt;/code&gt; for any two &lt;code&gt;OpenMBeanConstructorInfo&lt;/code&gt; instances &lt;code&gt;t1&lt;/code&gt; and &lt;code&gt;t2&lt;/code&gt;, as required by the general contract of the method &lt;a href=&quot;../../../java/lang/object#hashCode--&quot;&gt;&lt;code&gt;Object.hashCode()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 것을 보장하지만 &lt;code&gt; t1.equals(t2) &lt;/code&gt; 의미하는 &lt;code&gt; t1.hashCode()==t2.hashCode() &lt;/code&gt; 임의의 두 &lt;code&gt;OpenMBeanConstructorInfo&lt;/code&gt; 인스턴스 &lt;code&gt;t1&lt;/code&gt; 및 &lt;code&gt;t2&lt;/code&gt; 에있어서의 일반 계약에 의해 필요에 따라 &lt;a href=&quot;../../../java/lang/object#hashCode--&quot;&gt; &lt;code&gt;Object.hashCode()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a1708417f6418b817d48118b57142676efc7a6c8" translate="yes" xml:space="preserve">
          <source>This ensures that &lt;code&gt; t1.equals(t2) &lt;/code&gt; implies that &lt;code&gt; t1.hashCode()==t2.hashCode() &lt;/code&gt; for any two &lt;code&gt;OpenMBeanInfo&lt;/code&gt; instances &lt;code&gt;t1&lt;/code&gt; and &lt;code&gt;t2&lt;/code&gt;, as required by the general contract of the method &lt;a href=&quot;../../../java/lang/object#hashCode--&quot;&gt;&lt;code&gt;Object.hashCode()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 것을 보장하지만 &lt;code&gt; t1.equals(t2) &lt;/code&gt; 의미하는 &lt;code&gt; t1.hashCode()==t2.hashCode() &lt;/code&gt; 임의의 두 &lt;code&gt;OpenMBeanInfo&lt;/code&gt; 에의 인스턴스 &lt;code&gt;t1&lt;/code&gt; 및 &lt;code&gt;t2&lt;/code&gt; 에있어서의 일반 계약에 의해 필요에 따라 &lt;a href=&quot;../../../java/lang/object#hashCode--&quot;&gt; &lt;code&gt;Object.hashCode()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="6dec1af806af1f5a527c2c769a8b1578da342c7f" translate="yes" xml:space="preserve">
          <source>This ensures that &lt;code&gt; t1.equals(t2) &lt;/code&gt; implies that &lt;code&gt; t1.hashCode()==t2.hashCode() &lt;/code&gt; for any two &lt;code&gt;OpenMBeanOperationInfo&lt;/code&gt; instances &lt;code&gt;t1&lt;/code&gt; and &lt;code&gt;t2&lt;/code&gt;, as required by the general contract of the method &lt;a href=&quot;../../../java/lang/object#hashCode--&quot;&gt;&lt;code&gt;Object.hashCode()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 것을 보장하지만 &lt;code&gt; t1.equals(t2) &lt;/code&gt; 의미하는 &lt;code&gt; t1.hashCode()==t2.hashCode() &lt;/code&gt; 임의의 두 &lt;code&gt;OpenMBeanOperationInfo&lt;/code&gt; 인스턴스 &lt;code&gt;t1&lt;/code&gt; 및 &lt;code&gt;t2&lt;/code&gt; 에있어서의 일반 계약에 의해 필요에 따라 &lt;a href=&quot;../../../java/lang/object#hashCode--&quot;&gt; &lt;code&gt;Object.hashCode()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="8d101cdb42ed5767fa3e70f25fa3568d46a28e29" translate="yes" xml:space="preserve">
          <source>This ensures that &lt;code&gt; t1.equals(t2) &lt;/code&gt; implies that &lt;code&gt; t1.hashCode()==t2.hashCode() &lt;/code&gt; for any two &lt;code&gt;OpenMBeanParameterInfo&lt;/code&gt; instances &lt;code&gt;t1&lt;/code&gt; and &lt;code&gt;t2&lt;/code&gt;, as required by the general contract of the method &lt;a href=&quot;../../../java/lang/object#hashCode--&quot;&gt;&lt;code&gt;Object.hashCode()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 것을 보장하지만 &lt;code&gt; t1.equals(t2) &lt;/code&gt; 의미하는 &lt;code&gt; t1.hashCode()==t2.hashCode() &lt;/code&gt; 임의의 두 &lt;code&gt;OpenMBeanParameterInfo&lt;/code&gt; 의 인스턴스 &lt;code&gt;t1&lt;/code&gt; 및 &lt;code&gt;t2&lt;/code&gt; 에있어서의 일반 계약에 의해 필요에 따라 &lt;a href=&quot;../../../java/lang/object#hashCode--&quot;&gt; &lt;code&gt;Object.hashCode()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="4a236ab005ef5acc2242e30f66b6efee952b22f5" translate="yes" xml:space="preserve">
          <source>This ensures that &lt;code&gt; t1.equals(t2) &lt;/code&gt; implies that &lt;code&gt; t1.hashCode()==t2.hashCode() &lt;/code&gt; for any two &lt;code&gt;TabularDataSupport&lt;/code&gt; instances &lt;code&gt;t1&lt;/code&gt; and &lt;code&gt;t2&lt;/code&gt;, as required by the general contract of the method &lt;a href=&quot;../../../java/lang/object#hashCode--&quot;&gt;&lt;code&gt;Object.hashCode()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 것을 보장하지만 &lt;code&gt; t1.equals(t2) &lt;/code&gt; 의미하는 &lt;code&gt; t1.hashCode()==t2.hashCode() &lt;/code&gt; 두 용 &lt;code&gt;TabularDataSupport&lt;/code&gt; 인스턴스 &lt;code&gt;t1&lt;/code&gt; 및 &lt;code&gt;t2&lt;/code&gt; 에있어서의 일반 계약에 의해 필요에 따라 &lt;a href=&quot;../../../java/lang/object#hashCode--&quot;&gt; &lt;code&gt;Object.hashCode()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="9eaa17d2d08ea6f651e2c9bd29479e4bab9a6bde" translate="yes" xml:space="preserve">
          <source>This ensures that &lt;code&gt;e1.equals(e2)&lt;/code&gt; implies that &lt;code&gt;e1.hashCode()==e2.hashCode()&lt;/code&gt; for any two Entries &lt;code&gt;e1&lt;/code&gt; and &lt;code&gt;e2&lt;/code&gt;, as required by the general contract of &lt;a href=&quot;../lang/object#hashCode--&quot;&gt;&lt;code&gt;Object.hashCode()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이는 &lt;code&gt;e1.equals(e2)&lt;/code&gt; 가 &lt;a href=&quot;../lang/object#hashCode--&quot;&gt; &lt;code&gt;Object.hashCode()&lt;/code&gt; &lt;/a&gt; 의 일반 계약에 필요한대로 두 개의 항목 &lt;code&gt;e1&lt;/code&gt; 및 &lt;code&gt;e2&lt;/code&gt; 에 대해 &lt;code&gt;e1.hashCode()==e2.hashCode()&lt;/code&gt; ) 임을 의미합니다 .</target>
        </trans-unit>
        <trans-unit id="cd37dd64e1ca54ac0945dfdf280e1be4051c5aff" translate="yes" xml:space="preserve">
          <source>This ensures that &lt;code&gt;e1.equals(e2)&lt;/code&gt; implies that &lt;code&gt;e1.hashCode()==e2.hashCode()&lt;/code&gt; for any two Entries &lt;code&gt;e1&lt;/code&gt; and &lt;code&gt;e2&lt;/code&gt;, as required by the general contract of &lt;code&gt;Object.hashCode&lt;/code&gt;.</source>
          <target state="translated">이는 &lt;code&gt;e1.equals(e2)&lt;/code&gt; 가 &lt;code&gt;Object.hashCode&lt;/code&gt; 의 일반 계약에서 요구하는대로 두 개의 항목 &lt;code&gt;e1&lt;/code&gt; 및 &lt;code&gt;e2&lt;/code&gt; 에 대해 &lt;code&gt;e1.hashCode()==e2.hashCode()&lt;/code&gt; ) 임을 의미합니다 .</target>
        </trans-unit>
        <trans-unit id="4702ec819e5753179cfc0b495a5e82f5d1eee139" translate="yes" xml:space="preserve">
          <source>This ensures that &lt;code&gt;list1.equals(list2)&lt;/code&gt; implies that &lt;code&gt;list1.hashCode()==list2.hashCode()&lt;/code&gt; for any two lists, &lt;code&gt;list1&lt;/code&gt; and &lt;code&gt;list2&lt;/code&gt;, as required by the general contract of &lt;a href=&quot;../lang/object#hashCode--&quot;&gt;&lt;code&gt;Object.hashCode()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이것은 &lt;code&gt;list1.equals(list2)&lt;/code&gt; 가 &lt;a href=&quot;../lang/object#hashCode--&quot;&gt; &lt;code&gt;Object.hashCode()&lt;/code&gt; &lt;/a&gt; 의 일반 계약에 따라 &lt;code&gt;list1&lt;/code&gt; 과 &lt;code&gt;list2&lt;/code&gt; 의 두 목록에 대해 &lt;code&gt;list1.hashCode()==list2.hashCode()&lt;/code&gt; ) 임을 의미합니다 .</target>
        </trans-unit>
        <trans-unit id="12a797079598660742e64a5b767118fe2bebf2e1" translate="yes" xml:space="preserve">
          <source>This ensures that &lt;code&gt;path1.equals(path2)&lt;/code&gt; implies that &lt;code&gt;path1.hashCode()==path2.hashCode()&lt;/code&gt; for any two certification paths, &lt;code&gt;path1&lt;/code&gt; and &lt;code&gt;path2&lt;/code&gt;, as required by the general contract of &lt;code&gt;Object.hashCode&lt;/code&gt;.</source>
          <target state="translated">이것에 의해, &lt;code&gt;path1.equals(path2)&lt;/code&gt; 는 &lt;code&gt;Object.hashCode&lt;/code&gt; 의 일반 규약에 의해 요구 &lt;code&gt;path1.hashCode()==path2.hashCode()&lt;/code&gt; , 2 개의 인증 패스 &lt;code&gt;path1&lt;/code&gt; 및 &lt;code&gt;path2&lt;/code&gt; 에 대해 path1.hashCode () == path2.hashCode ()가 되는 것을 보증합니다 .</target>
        </trans-unit>
        <trans-unit id="4fd56578f10eda62657cbd5ad0a96e516416f18a" translate="yes" xml:space="preserve">
          <source>This ensures that &lt;code&gt;t1.equals(t2) &lt;/code&gt; implies that &lt;code&gt;t1.hashCode()==t2.hashCode() &lt;/code&gt; for any two &lt;code&gt;OpenMBeanOperationInfoSupport&lt;/code&gt; instances &lt;code&gt;t1&lt;/code&gt; and &lt;code&gt;t2&lt;/code&gt;, as required by the general contract of the method &lt;a href=&quot;../../../java/lang/object#hashCode--&quot;&gt;&lt;code&gt;Object.hashCode()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 것을 보장하지만 &lt;code&gt;t1.equals(t2) &lt;/code&gt; 의미하는 &lt;code&gt;t1.hashCode()==t2.hashCode() &lt;/code&gt; 임의의 두 &lt;code&gt;OpenMBeanOperationInfoSupport&lt;/code&gt; 의 인스턴스 &lt;code&gt;t1&lt;/code&gt; 및 &lt;code&gt;t2&lt;/code&gt; , 상기 방법은 일반 계약에 의해 요구 &lt;a href=&quot;../../../java/lang/object#hashCode--&quot;&gt; &lt;code&gt;Object.hashCode()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="14310def1365fcc5f3cd3139415995c4e349e7e2" translate="yes" xml:space="preserve">
          <source>This ensures that &lt;code&gt;t1.equals(t2)&lt;/code&gt; implies that &lt;code&gt;t1.hashCode()==t2.hashCode()&lt;/code&gt; for any two &lt;code&gt;OpenMBeanAttributeInfoSupport&lt;/code&gt; instances &lt;code&gt;t1&lt;/code&gt; and &lt;code&gt;t2&lt;/code&gt;, as required by the general contract of the method &lt;a href=&quot;../../../java/lang/object#hashCode--&quot;&gt;&lt;code&gt;Object.hashCode()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 것을 보장하지만 &lt;code&gt;t1.equals(t2)&lt;/code&gt; 의미하는 &lt;code&gt;t1.hashCode()==t2.hashCode()&lt;/code&gt; 두 용 &lt;code&gt;OpenMBeanAttributeInfoSupport&lt;/code&gt; 인스턴스 &lt;code&gt;t1&lt;/code&gt; 및 &lt;code&gt;t2&lt;/code&gt; , 상기 방법은 일반 계약에 의해 요구 &lt;a href=&quot;../../../java/lang/object#hashCode--&quot;&gt; &lt;code&gt;Object.hashCode()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="736ac1b36cc49629322da06cfc66443d96b4835a" translate="yes" xml:space="preserve">
          <source>This ensures that &lt;code&gt;t1.equals(t2)&lt;/code&gt; implies that &lt;code&gt;t1.hashCode()==t2.hashCode()&lt;/code&gt; for any two &lt;code&gt;OpenMBeanConstructorInfoSupport&lt;/code&gt; instances &lt;code&gt;t1&lt;/code&gt; and &lt;code&gt;t2&lt;/code&gt;, as required by the general contract of the method &lt;a href=&quot;../../../java/lang/object#hashCode--&quot;&gt;&lt;code&gt;Object.hashCode()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이렇게하면 &lt;a href=&quot;../../../java/lang/object#hashCode--&quot;&gt; &lt;code&gt;Object.hashCode()&lt;/code&gt; &lt;/a&gt; 메소드의 일반 계약에 필요한대로 두 개의 &lt;code&gt;OpenMBeanConstructorInfoSupport&lt;/code&gt; 인스턴스 &lt;code&gt;t1&lt;/code&gt; 및 &lt;code&gt;t2&lt;/code&gt; 에 &lt;code&gt;t1.hashCode()==t2.hashCode()&lt;/code&gt; &lt;code&gt;t1.equals(t2)&lt;/code&gt; 가 t1.hashCode () == t2.hashCode () 를 의미합니다 .</target>
        </trans-unit>
        <trans-unit id="99bf9df3ff163296e36d804cb91efdd222787a13" translate="yes" xml:space="preserve">
          <source>This ensures that &lt;code&gt;t1.equals(t2)&lt;/code&gt; implies that &lt;code&gt;t1.hashCode()==t2.hashCode()&lt;/code&gt; for any two &lt;code&gt;OpenMBeanInfoSupport&lt;/code&gt; instances &lt;code&gt;t1&lt;/code&gt; and &lt;code&gt;t2&lt;/code&gt;, as required by the general contract of the method &lt;a href=&quot;../../../java/lang/object#hashCode--&quot;&gt;&lt;code&gt;Object.hashCode()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 것을 보장하지만 &lt;code&gt;t1.equals(t2)&lt;/code&gt; 의미하는 &lt;code&gt;t1.hashCode()==t2.hashCode()&lt;/code&gt; 임의의 두 &lt;code&gt;OpenMBeanInfoSupport&lt;/code&gt; 의 인스턴스 &lt;code&gt;t1&lt;/code&gt; 및 &lt;code&gt;t2&lt;/code&gt; , 상기 방법은 일반 계약에 의해 요구 &lt;a href=&quot;../../../java/lang/object#hashCode--&quot;&gt; &lt;code&gt;Object.hashCode()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="5048cf47c7589c265d38a9d3789688de3ad3b264" translate="yes" xml:space="preserve">
          <source>This ensures that &lt;code&gt;t1.equals(t2)&lt;/code&gt; implies that &lt;code&gt;t1.hashCode()==t2.hashCode()&lt;/code&gt; for any two &lt;code&gt;OpenMBeanParameterInfoSupport&lt;/code&gt; instances &lt;code&gt;t1&lt;/code&gt; and &lt;code&gt;t2&lt;/code&gt;, as required by the general contract of the method &lt;a href=&quot;../../../java/lang/object#hashCode--&quot;&gt;&lt;code&gt;Object.hashCode()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이렇게하면 &lt;a href=&quot;../../../java/lang/object#hashCode--&quot;&gt; &lt;code&gt;Object.hashCode()&lt;/code&gt; &lt;/a&gt; 메소드의 일반 계약에 필요한대로 두 개의 &lt;code&gt;OpenMBeanParameterInfoSupport&lt;/code&gt; 인스턴스 &lt;code&gt;t1&lt;/code&gt; 및 &lt;code&gt;t2&lt;/code&gt; 에 &lt;code&gt;t1.hashCode()==t2.hashCode()&lt;/code&gt; &lt;code&gt;t1.equals(t2)&lt;/code&gt; 가 t1.hashCode () == t2.hashCode () 를 의미합니다 .</target>
        </trans-unit>
        <trans-unit id="2dd48e203f64ae525f74dfaa9da8459c9751d109" translate="yes" xml:space="preserve">
          <source>This ensures that the</source>
          <target state="translated">이것은</target>
        </trans-unit>
        <trans-unit id="5f7e517c8500e111c100f9af14ac55c0ae2c2bef" translate="yes" xml:space="preserve">
          <source>This ensures that the &lt;code&gt;equals&lt;/code&gt; method works properly across different implementations of the &lt;code&gt;Map.Entry&lt;/code&gt; interface.</source>
          <target state="translated">이렇게하면 &lt;code&gt;equals&lt;/code&gt; 메소드가 &lt;code&gt;Map.Entry&lt;/code&gt; 인터페이스 의 다른 구현에서 올바르게 작동합니다 .</target>
        </trans-unit>
        <trans-unit id="22981eb19202d8e653206d092e5e3522080ec2a4" translate="yes" xml:space="preserve">
          <source>This ensures that this &lt;code&gt;equals&lt;/code&gt; method works properly for &lt;code&gt;obj&lt;/code&gt; parameters which are different implementations of the &lt;code&gt;OpenMBeanAttributeInfo&lt;/code&gt; interface.</source>
          <target state="translated">이렇게하면이 &lt;code&gt;equals&lt;/code&gt; 메소드 가 &lt;code&gt;OpenMBeanAttributeInfo&lt;/code&gt; 인터페이스 의 다른 구현 인 &lt;code&gt;obj&lt;/code&gt; 매개 변수에 올바르게 작동합니다 .</target>
        </trans-unit>
        <trans-unit id="7fa22d1303562035a56aeb3f70cf9d8afb4eff91" translate="yes" xml:space="preserve">
          <source>This ensures that this &lt;code&gt;equals&lt;/code&gt; method works properly for &lt;code&gt;obj&lt;/code&gt; parameters which are different implementations of the &lt;code&gt;OpenMBeanConstructorInfo&lt;/code&gt; interface.</source>
          <target state="translated">이렇게하면이 &lt;code&gt;equals&lt;/code&gt; 메소드 가 &lt;code&gt;OpenMBeanConstructorInfo&lt;/code&gt; 인터페이스 의 다른 구현 인 &lt;code&gt;obj&lt;/code&gt; 매개 변수에 대해 올바르게 작동합니다 .</target>
        </trans-unit>
        <trans-unit id="c35d604d50f8effa4af4319277b3b27dc4d0ca83" translate="yes" xml:space="preserve">
          <source>This ensures that this &lt;code&gt;equals&lt;/code&gt; method works properly for &lt;code&gt;obj&lt;/code&gt; parameters which are different implementations of the &lt;code&gt;OpenMBeanInfo&lt;/code&gt; interface.</source>
          <target state="translated">이렇게하면이 &lt;code&gt;equals&lt;/code&gt; 메소드 가 &lt;code&gt;OpenMBeanInfo&lt;/code&gt; 인터페이스 의 다른 구현 인 &lt;code&gt;obj&lt;/code&gt; 매개 변수에 대해 올바르게 작동합니다 .</target>
        </trans-unit>
        <trans-unit id="d9f4990e303ffba395d311e9e2648124b393bcc1" translate="yes" xml:space="preserve">
          <source>This ensures that this &lt;code&gt;equals&lt;/code&gt; method works properly for &lt;code&gt;obj&lt;/code&gt; parameters which are different implementations of the &lt;code&gt;OpenMBeanOperationInfo&lt;/code&gt; interface.</source>
          <target state="translated">이렇게하면이 &lt;code&gt;equals&lt;/code&gt; 메소드 가 &lt;code&gt;OpenMBeanOperationInfo&lt;/code&gt; 인터페이스 의 다른 구현 인 &lt;code&gt;obj&lt;/code&gt; 매개 변수에 올바르게 작동합니다 .</target>
        </trans-unit>
        <trans-unit id="2dc6602188e622505dc6530d67bf53c85a1a8c90" translate="yes" xml:space="preserve">
          <source>This ensures that this &lt;code&gt;equals&lt;/code&gt; method works properly for &lt;code&gt;obj&lt;/code&gt; parameters which are different implementations of the &lt;code&gt;OpenMBeanParameterInfo&lt;/code&gt; interface.</source>
          <target state="translated">이렇게하면이 &lt;code&gt;equals&lt;/code&gt; 메소드 가 &lt;code&gt;OpenMBeanParameterInfo&lt;/code&gt; 인터페이스 의 다른 구현 인 &lt;code&gt;obj&lt;/code&gt; 매개 변수에 대해 올바르게 작동합니다 .</target>
        </trans-unit>
        <trans-unit id="e2232c689d95cc950c92c0bfc8d5afd8b3a1f6ab" translate="yes" xml:space="preserve">
          <source>This ensures that this &lt;code&gt;equals&lt;/code&gt; method works properly for &lt;var&gt;obj&lt;/var&gt; parameters which are different implementations of the &lt;code&gt;CompositeData&lt;/code&gt; interface, with the restrictions mentioned in the &lt;a href=&quot;../../../java/util/collection#equals-java.lang.Object-&quot;&gt;&lt;code&gt;equals&lt;/code&gt;&lt;/a&gt; method of the &lt;code&gt;java.util.Collection&lt;/code&gt; interface.</source>
          <target state="translated">이것은이 &lt;code&gt;equals&lt;/code&gt; 메소드 가 &lt;code&gt;CompositeData&lt;/code&gt; 인터페이스 의 다른 구현 인 &lt;var&gt;obj&lt;/var&gt; 매개 변수에 대해 올바르게 작동 하고 &lt;code&gt;java.util.Collection&lt;/code&gt; 인터페이스 의 &lt;a href=&quot;../../../java/util/collection#equals-java.lang.Object-&quot;&gt; &lt;code&gt;equals&lt;/code&gt; &lt;/a&gt; 메소드에 언급 된 제한 사항을 보장합니다 .</target>
        </trans-unit>
        <trans-unit id="d01bed2bc6c9b286244a18f63cbfb86b2a75406e" translate="yes" xml:space="preserve">
          <source>This ensures that this &lt;code&gt;equals&lt;/code&gt; method works properly for &lt;var&gt;obj&lt;/var&gt; parameters which are different implementations of the &lt;code&gt;OpenMBeanAttributeInfo&lt;/code&gt; interface.</source>
          <target state="translated">이렇게하면이 &lt;code&gt;equals&lt;/code&gt; 메소드 가 &lt;code&gt;OpenMBeanAttributeInfo&lt;/code&gt; 인터페이스 의 다른 구현 인 &lt;var&gt;obj&lt;/var&gt; 매개 변수에 올바르게 작동합니다 .</target>
        </trans-unit>
        <trans-unit id="e905e7a95a4af021609a22c07da9cf6b804d2202" translate="yes" xml:space="preserve">
          <source>This ensures that this &lt;code&gt;equals&lt;/code&gt; method works properly for &lt;var&gt;obj&lt;/var&gt; parameters which are different implementations of the &lt;code&gt;OpenMBeanConstructorInfo&lt;/code&gt; interface.</source>
          <target state="translated">이렇게하면이 &lt;code&gt;equals&lt;/code&gt; 메소드 가 &lt;code&gt;OpenMBeanConstructorInfo&lt;/code&gt; 인터페이스 의 다른 구현 인 &lt;var&gt;obj&lt;/var&gt; 매개 변수에 대해 올바르게 작동합니다 .</target>
        </trans-unit>
        <trans-unit id="4a7ee87498efa3787aee5c09ad60ad61b1589d63" translate="yes" xml:space="preserve">
          <source>This ensures that this &lt;code&gt;equals&lt;/code&gt; method works properly for &lt;var&gt;obj&lt;/var&gt; parameters which are different implementations of the &lt;code&gt;OpenMBeanInfo&lt;/code&gt; interface.</source>
          <target state="translated">이렇게하면이 &lt;code&gt;equals&lt;/code&gt; 메소드 가 &lt;code&gt;OpenMBeanInfo&lt;/code&gt; 인터페이스 의 다른 구현 인 &lt;var&gt;obj&lt;/var&gt; 매개 변수에 대해 올바르게 작동합니다 .</target>
        </trans-unit>
        <trans-unit id="dcacb03cc3461394d7901fb988e6f22c9f056864" translate="yes" xml:space="preserve">
          <source>This ensures that this &lt;code&gt;equals&lt;/code&gt; method works properly for &lt;var&gt;obj&lt;/var&gt; parameters which are different implementations of the &lt;code&gt;OpenMBeanOperationInfo&lt;/code&gt; interface.</source>
          <target state="translated">이렇게하면이 &lt;code&gt;equals&lt;/code&gt; 메소드 가 &lt;code&gt;OpenMBeanOperationInfo&lt;/code&gt; 인터페이스 의 다른 구현 인 &lt;var&gt;obj&lt;/var&gt; 매개 변수에 올바르게 작동합니다 .</target>
        </trans-unit>
        <trans-unit id="3c16663c2c9209310b14a419c0f9516a4aba89fa" translate="yes" xml:space="preserve">
          <source>This ensures that this &lt;code&gt;equals&lt;/code&gt; method works properly for &lt;var&gt;obj&lt;/var&gt; parameters which are different implementations of the &lt;code&gt;OpenMBeanParameterInfo&lt;/code&gt; interface.</source>
          <target state="translated">이렇게하면이 &lt;code&gt;equals&lt;/code&gt; 메소드 가 &lt;code&gt;OpenMBeanParameterInfo&lt;/code&gt; 인터페이스 의 다른 구현 인 &lt;var&gt;obj&lt;/var&gt; 매개 변수에 대해 올바르게 작동합니다 .</target>
        </trans-unit>
        <trans-unit id="0178e62f2575a16f3452880df90e42b85d96acfb" translate="yes" xml:space="preserve">
          <source>This ensures that this &lt;code&gt;equals&lt;/code&gt; method works properly for &lt;var&gt;obj&lt;/var&gt; parameters which are different implementations of the &lt;code&gt;TabularData&lt;/code&gt; interface.</source>
          <target state="translated">이렇게하면이 &lt;code&gt;equals&lt;/code&gt; 메소드 가 &lt;code&gt;TabularData&lt;/code&gt; 인터페이스 의 다른 구현 인 &lt;var&gt;obj&lt;/var&gt; 매개 변수에 올바르게 작동합니다 .</target>
        </trans-unit>
        <trans-unit id="8f7813aaf5117feee538d7d89395f823b4f6bfa1" translate="yes" xml:space="preserve">
          <source>This entry grants any code running as both &quot;duke&quot; and &quot;0&quot; permission to read and write files in duke's home directory, as well as permission to make socket connections to &quot;duke.com&quot;.</source>
          <target state="translated">이 항목은 &quot;duke&quot;및 &quot;0&quot;으로 실행되는 모든 코드에 duke의 홈 디렉토리에서 파일을 읽고 쓸 수있는 권한과 &quot;duke.com&quot;에 대한 소켓 연결 권한을 부여합니다.</target>
        </trans-unit>
        <trans-unit id="b7349f6fff56b6ef6defad46072f343b79875324" translate="yes" xml:space="preserve">
          <source>This entry represents a single &lt;code&gt;LoginModule&lt;/code&gt; entry configured for the application specified in the &lt;code&gt;getAppConfigurationEntry(String appName)&lt;/code&gt; method from the &lt;code&gt;Configuration&lt;/code&gt; class.</source>
          <target state="translated">이 항목은 &lt;code&gt;Configuration&lt;/code&gt; 클래스 의 &lt;code&gt;getAppConfigurationEntry(String appName)&lt;/code&gt; 메소드에 지정된 애플리케이션에 대해 구성된 단일 &lt;code&gt;LoginModule&lt;/code&gt; 항목을 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="0d89b42bd75b0ab3677a923c123313c25aafc55a" translate="yes" xml:space="preserve">
          <source>This enum provides access to the localized textual form of the day-of-week. Some locales also assign different numeric values to the days, declaring Sunday to have the value 1, however this class provides no support for this. See &lt;a href=&quot;temporal/weekfields&quot;&gt;&lt;code&gt;WeekFields&lt;/code&gt;&lt;/a&gt; for localized week-numbering.</source>
          <target state="translated">이 열거 형은 현지화 된 텍스트 형식의 요일에 대한 액세스를 제공합니다. 일부 로케일은 일에 다른 숫자 값을 지정하여 일요일에 값 1을 선언하지만이 클래스는이를 지원하지 않습니다. 현지화 된 주 번호 매기기에 대해서는 &lt;a href=&quot;temporal/weekfields&quot;&gt; &lt;code&gt;WeekFields&lt;/code&gt; &lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="7f9f36341f4cf3a90ec7e76999dae94a94fde72d" translate="yes" xml:space="preserve">
          <source>This enum provides constants of the four Unicode normalization forms that are described in &lt;a href=&quot;http://www.unicode.org/unicode/reports/tr15/tr15-23.html&quot;&gt; Unicode Standard Annex #15 &amp;mdash; Unicode Normalization Forms&lt;/a&gt; and two methods to access them.</source>
          <target state="translated">이 열거 형은 &lt;a href=&quot;http://www.unicode.org/unicode/reports/tr15/tr15-23.html&quot;&gt;유니 코드 표준 부록 # 15-유니 코드 정규화 양식에&lt;/a&gt; 설명 된 네 가지 유니 코드 정규화 형식 과 이에 액세스하는 두 가지 방법의 상수를 제공 합니다.</target>
        </trans-unit>
        <trans-unit id="7b5363154e54782f805c8735187619d9f37433bf" translate="yes" xml:space="preserve">
          <source>This enum provides constants to select a filtering mode for locale matching.</source>
          <target state="translated">이 열거 형은 로캘 일치를위한 필터링 모드를 선택하는 상수를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="7990678ba96d0684d8a647d58050509e1a46e50d" translate="yes" xml:space="preserve">
          <source>This enum provides constants to select a filtering mode for locale matching. Refer to &lt;a href=&quot;http://tools.ietf.org/html/rfc4647&quot;&gt;RFC 4647 Matching of Language Tags&lt;/a&gt; for details.</source>
          <target state="translated">이 열거 형은 로캘 일치를위한 필터링 모드를 선택하는 상수를 제공합니다. 자세한 내용은 &lt;a href=&quot;http://tools.ietf.org/html/rfc4647&quot;&gt;RFC 4647 언어 태그 일치&lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="55de9afdf4bb8a7cd3119a4e53128a3b8a1d002a" translate="yes" xml:space="preserve">
          <source>This enum represents a common concept that is found in many calendar systems. As such, this enum may be used by any calendar system that has the day-of-week concept defined exactly equivalent to the ISO calendar system.</source>
          <target state="translated">이 열거 형은 많은 달력 시스템에서 볼 수있는 일반적인 개념을 나타냅니다. 따라서이 열거 형은 요일 개념이 ISO 캘린더 시스템과 정확히 동일하게 정의 된 모든 캘린더 시스템에서 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="bbf809375262460ff823a3f9b7560eff6cd99f53" translate="yes" xml:space="preserve">
          <source>This enum represents a common concept that is found in many calendar systems. As such, this enum may be used by any calendar system that has the month-of-year concept defined exactly equivalent to the ISO-8601 calendar system.</source>
          <target state="translated">이 열거 형은 많은 달력 시스템에서 볼 수있는 일반적인 개념을 나타냅니다. 따라서이 열거 형은 ISO-8601 캘린더 시스템과 정확히 동일하게 정의 된 월별 개념을 가진 캘린더 시스템에서 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="36c7f92a72c7bf1c230aab99af6f12a039767db7" translate="yes" xml:space="preserve">
          <source>This error will be thrown in the following situations:</source>
          <target state="translated">이 오류는 다음 상황에서 발생합니다.</target>
        </trans-unit>
        <trans-unit id="112dd1a0d9fcaccef70de6868974788e9ee74000" translate="yes" xml:space="preserve">
          <source>This event indicates that an SSL handshake completed on a given SSL connection.</source>
          <target state="translated">이 이벤트는 주어진 SSL 연결에서 SSL 핸드 셰이크가 완료되었음을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="d71f6ef98b1f22c5fc51c5875d4da46a55b8ad34" translate="yes" xml:space="preserve">
          <source>This event indicates that an SSL handshake completed on a given SSL connection. All of the core information about that handshake's result is captured through an &quot;SSLSession&quot; object. As a convenience, this event class provides direct access to some important session attributes.</source>
          <target state="translated">이 이벤트는 주어진 SSL 연결에서 SSL 핸드 셰이크가 완료되었음을 나타냅니다. 해당 핸드 셰이크 결과에 대한 모든 핵심 정보는 &quot;SSLSession&quot;오브젝트를 통해 캡처됩니다. 편의상이 이벤트 클래스는 몇 가지 중요한 세션 속성에 대한 직접 액세스를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="b3f8bdc3cbf3a53af1cc4c37e97a21eef4fdb924" translate="yes" xml:space="preserve">
          <source>This event is propagated to a SSLSessionBindingListener.</source>
          <target state="translated">이 이벤트는 SSLSessionBindingListener에 전파됩니다.</target>
        </trans-unit>
        <trans-unit id="b6777ffdf99a5ff15ed1891bd423a6652df90171" translate="yes" xml:space="preserve">
          <source>This event is propagated to a SSLSessionBindingListener. When a listener object is bound or unbound to an SSLSession by &lt;a href=&quot;sslsession#putValue-java.lang.String-java.lang.Object-&quot;&gt;&lt;code&gt;SSLSession.putValue(String, Object)&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;sslsession#removeValue-java.lang.String-&quot;&gt;&lt;code&gt;SSLSession.removeValue(String)&lt;/code&gt;&lt;/a&gt;, objects which implement the SSLSessionBindingListener will be receive an event of this type. The event's &lt;code&gt;name&lt;/code&gt; field is the key in which the listener is being bound or unbound.</source>
          <target state="translated">이 이벤트는 SSLSessionBindingListener에 전파됩니다. 리스너 오브젝트가 &lt;a href=&quot;sslsession#putValue-java.lang.String-java.lang.Object-&quot;&gt; &lt;code&gt;SSLSession.putValue(String, Object)&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;sslsession#removeValue-java.lang.String-&quot;&gt; &lt;code&gt;SSLSession.removeValue(String)&lt;/code&gt; &lt;/a&gt; 의해 SSLSession에 바인드 또는 바인드 해제되면 SSLSessionBindingListener 를 구현하는 오브젝트는이 유형의 이벤트를 수신합니다. 이벤트의 &lt;code&gt;name&lt;/code&gt; 필드는 리스너가 바인딩되거나 바인딩 해제되는 키입니다.</target>
        </trans-unit>
        <trans-unit id="9c293ee74566b889378c2f6ed5397843ab8eabb9" translate="yes" xml:space="preserve">
          <source>This event type is used by the &lt;code&gt;BeanContextServiceRevokedListener&lt;/code&gt; in order to identify the service being revoked.</source>
          <target state="translated">이 이벤트 타입은 취소되는 서비스를 식별하기 위해 &lt;code&gt;BeanContextServiceRevokedListener&lt;/code&gt; 에 의해 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="73eaed984e9325afb8ae34d4b9ef82a0cb180277" translate="yes" xml:space="preserve">
          <source>This event type is used by the BeanContextServicesListener in order to identify the service being registered.</source>
          <target state="translated">이 이벤트 타입은 등록 된 서비스를 식별하기 위해 BeanContextServicesListener에 의해 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="0c03fae7847cbdcf2a7c0890ce0e9b3de1ea92a1" translate="yes" xml:space="preserve">
          <source>This example creates a hashtable of numbers. It uses the names of the numbers as keys:</source>
          <target state="translated">이 예에서는 숫자의 해시 테이블을 만듭니다. 숫자의 이름을 키로 사용합니다.</target>
        </trans-unit>
        <trans-unit id="09d5046db3945a7fb60de34961378b349f6a5370" translate="yes" xml:space="preserve">
          <source>This example creates and uses a date in a named non-ISO calendar system.</source>
          <target state="translated">이 예는 이름이 지정된 비 ISO 달력 시스템에서 날짜를 만들고 사용합니다.</target>
        </trans-unit>
        <trans-unit id="ee41c74c9d39854de7fb63a6d22884c91abdbab7" translate="yes" xml:space="preserve">
          <source>This example creates and uses a date in a specific ThaiBuddhist calendar system.</source>
          <target state="translated">이 예는 특정 ThaiBuddhist 달력 시스템에서 날짜를 작성하고 사용합니다.</target>
        </trans-unit>
        <trans-unit id="dbb65bb38af7b88d332b1c0fe95984b9f1b415dd" translate="yes" xml:space="preserve">
          <source>This example illustrates the type-safe way to obtain an empty list:</source>
          <target state="translated">이 예는 빈 목록을 얻는 안전한 형식의 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="e7c8f3dc1e88f34181678c2ae956e0c12ab62ad3" translate="yes" xml:space="preserve">
          <source>This example illustrates the type-safe way to obtain an empty map:</source>
          <target state="translated">이 예제는 빈 맵을 얻는 안전한 유형의 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="39f8737c17fbee97824de105f37e72cf70b73d10" translate="yes" xml:space="preserve">
          <source>This example illustrates the type-safe way to obtain an empty navigable set:</source>
          <target state="translated">이 예는 비어있는 탐색 가능한 세트를 얻는 유형 안전 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="490adafdba1a3a049c697756377b581a634eacfb" translate="yes" xml:space="preserve">
          <source>This example illustrates the type-safe way to obtain an empty set:</source>
          <target state="translated">이 예제는 빈 세트를 얻는 형식 안전 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="4872829aa63418ad51d68f41eacc3bb03f4a57fd" translate="yes" xml:space="preserve">
          <source>This example illustrates the type-safe way to obtain an empty sorted set:</source>
          <target state="translated">이 예제는 빈 정렬 된 집합을 얻는 형식 안전 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="4bfbfaeeb85a05ec1329edf719e815584c1d2158" translate="yes" xml:space="preserve">
          <source>This example lists todays date for all of the available calendars.</source>
          <target state="translated">이 예는 사용 가능한 모든 캘린더의 오늘 날짜를 나열합니다.</target>
        </trans-unit>
        <trans-unit id="648b63858d674e8acadf1871284e221d81c3346e" translate="yes" xml:space="preserve">
          <source>This example was produced by running the program:</source>
          <target state="translated">이 예제는 프로그램을 실행하여 생성되었습니다.</target>
        </trans-unit>
        <trans-unit id="d0818493ecc5fe805ac5b423d66ec833896bf1e0" translate="yes" xml:space="preserve">
          <source>This exception can be thrown during any interaction with the InitialContext, not only when the InitialContext is constructed. For example, the implementation of the initial context might lazily retrieve the context only when actual methods are invoked on it. The application should not have any dependency on when the existence of an initial context is determined.</source>
          <target state="translated">이 예외는 InitialContext가 구성 될 때뿐만 아니라 InitialContext와의 상호 작용 중에 발생할 수 있습니다. 예를 들어, 초기 컨텍스트의 구현은 실제 메소드가 호출 될 때만 컨텍스트를 느리게 검색 할 수 있습니다. 응용 프로그램은 초기 컨텍스트의 존재가 결정될 때 의존하지 않아야합니다.</target>
        </trans-unit>
        <trans-unit id="ebd277a641e5edb2a6d1b8b8160dfc6023c80f73" translate="yes" xml:space="preserve">
          <source>This exception has been retrofitted to conform to the general purpose exception-chaining mechanism. The</source>
          <target state="translated">이 예외는 범용 예외 체인 메커니즘에 맞게 개선되었습니다. 그만큼</target>
        </trans-unit>
        <trans-unit id="fc0ed4883811ecd2ba38eb6a181bbf81bc9c68b8" translate="yes" xml:space="preserve">
          <source>This exception includes the text being parsed and the error index.</source>
          <target state="translated">이 예외에는 구문 분석되는 텍스트 및 오류 색인이 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="c10b06251c203b077f176eed708ebfef045a3813" translate="yes" xml:space="preserve">
          <source>This exception indicates one of a variety of certificate problems.</source>
          <target state="translated">이 예외는 다양한 인증서 문제 중 하나를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="33e94f716a79a8d3b0da393e317e14e96f5755d8" translate="yes" xml:space="preserve">
          <source>This exception indicates that the name being specified does not conform to the naming syntax of a naming system.</source>
          <target state="translated">이 예외는 지정된 이름이 이름 지정 시스템의 이름 지정 구문을 준수하지 않음을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="d8fa4e42b480993ad1adbfc13670ec6b9d32fa39" translate="yes" xml:space="preserve">
          <source>This exception indicates that the name being specified does not conform to the naming syntax of a naming system. This exception is thrown by any of the methods that does name parsing (such as those in Context, DirContext, CompositeName and CompoundName).</source>
          <target state="translated">이 예외는 지정된 이름이 이름 지정 시스템의 이름 지정 구문을 준수하지 않음을 나타냅니다. 이 예외는 이름 구문 분석을 수행하는 모든 메소드 (예 : Context, DirContext, CompositeName 및 CompoundName의 메소드)에 의해 발생합니다.</target>
        </trans-unit>
        <trans-unit id="a41811495370e0547788735a1c587ae46610a95c" translate="yes" xml:space="preserve">
          <source>This exception is mainly used by data input streams to signal end of stream. Note that many other input operations return a special value on end of stream rather than throwing an exception.</source>
          <target state="translated">이 예외는 주로 데이터 입력 스트림에서 스트림 끝을 알리기 위해 사용됩니다. 다른 많은 입력 작업은 예외를 발생시키지 않고 스트림 끝에서 특별한 값을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="7032d9b1e8a75130f0803a0ccf976db6b7484d92" translate="yes" xml:space="preserve">
          <source>This exception is not related to the &lt;a href=&quot;../../security/accesscontrolexception&quot;&gt;&lt;code&gt;AccessControlException&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../../lang/securityexception&quot;&gt;&lt;code&gt;SecurityException&lt;/code&gt;&lt;/a&gt; thrown by access controllers or security managers when access to a file is denied.</source>
          <target state="translated">이 예외는 파일에 대한 액세스가 거부 될 때 액세스 컨트롤러 또는 보안 관리자가 던지는 &lt;a href=&quot;../../security/accesscontrolexception&quot;&gt; &lt;code&gt;AccessControlException&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;../../lang/securityexception&quot;&gt; &lt;code&gt;SecurityException&lt;/code&gt; &lt;/a&gt; 과 관련이 없습니다 .</target>
        </trans-unit>
        <trans-unit id="cd593da22d7bd37c84871cd2a51f0ce84fc355d4" translate="yes" xml:space="preserve">
          <source>This exception is raised when a role in a relation does not exist, or is not readable, or is not settable.</source>
          <target state="translated">이 예외는 관계의 역할이 존재하지 않거나 읽을 수 없거나 설정할 수없는 경우에 발생합니다.</target>
        </trans-unit>
        <trans-unit id="246e01e59808ff79b55f0b9be5fc7653842efa99" translate="yes" xml:space="preserve">
          <source>This exception is raised when an access is done to the Relation Service and that one is not registered.</source>
          <target state="translated">이 예외는 관계 서비스에 대한 액세스가 완료되고 등록되지 않은 경우에 발생합니다.</target>
        </trans-unit>
        <trans-unit id="89fc0f81cd47a0cc186b5077a3a71a355bfda4f3" translate="yes" xml:space="preserve">
          <source>This exception is raised when an invalid Relation Service is provided.</source>
          <target state="translated">이 예외는 유효하지 않은 관계 서비스가 제공 될 때 발생합니다.</target>
        </trans-unit>
        <trans-unit id="06f9f29b29245f3df3951ad627fc9dc6a47f8c46" translate="yes" xml:space="preserve">
          <source>This exception is raised when relation id provided for a relation is already used.</source>
          <target state="translated">관계에 제공된 관계 ID가 이미 사용 된 경우이 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="c94b392222d7201f06010cfcbd4189e3cbf0aa3b" translate="yes" xml:space="preserve">
          <source>This exception is raised when there is no relation for a given relation id in a Relation Service.</source>
          <target state="translated">관계 서비스에 주어진 관계 ID에 대한 관계가없는 경우이 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="37637570799bbcc0f5745c0d3ff3a7609bb45288" translate="yes" xml:space="preserve">
          <source>This exception is raised when there is no relation type with given name in Relation Service.</source>
          <target state="translated">관계 서비스에 이름이 지정된 관계 유형이없는 경우이 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="6d6e29a17d53533b6eef2ab8a2039d9b0bc9946f" translate="yes" xml:space="preserve">
          <source>This exception is raised when there is no role info with given name in a given relation type.</source>
          <target state="translated">주어진 관계 유형에 이름이 지정된 역할 정보가없는 경우이 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="d572f6242fcc3485a8ec60482ca8968cb95a1c5b" translate="yes" xml:space="preserve">
          <source>This exception is raised when, in a role info, its minimum degree is greater than its maximum degree.</source>
          <target state="translated">이 예외는 역할 정보에서 최소 등급이 최대 등급보다 큰 경우에 발생합니다.</target>
        </trans-unit>
        <trans-unit id="f60275588e3c668e8ff47c8a18e4a3eb13eda831" translate="yes" xml:space="preserve">
          <source>This exception is thrown by &lt;code&gt;doPrivileged(PrivilegedExceptionAction)&lt;/code&gt; and &lt;code&gt;doPrivileged(PrivilegedExceptionAction,
 AccessControlContext context)&lt;/code&gt; to indicate that the action being performed threw a checked exception.</source>
          <target state="translated">이 예외는 &lt;code&gt;doPrivileged(PrivilegedExceptionAction)&lt;/code&gt; 및 &lt;code&gt;doPrivileged(PrivilegedExceptionAction, AccessControlContext context)&lt;/code&gt; 에 의해 수행되어 수행중인 조치가 점검 된 예외를 발생 시켰음을 표시합니다.</target>
        </trans-unit>
        <trans-unit id="1299a98829234a5ef8fbfe5da579ee11b461133d" translate="yes" xml:space="preserve">
          <source>This exception is thrown by &lt;code&gt;doPrivileged(PrivilegedExceptionAction)&lt;/code&gt; and &lt;code&gt;doPrivileged(PrivilegedExceptionAction,
 AccessControlContext context)&lt;/code&gt; to indicate that the action being performed threw a checked exception. The exception thrown by the action can be obtained by calling the &lt;code&gt;getException&lt;/code&gt; method. In effect, an &lt;code&gt;PrivilegedActionException&lt;/code&gt; is a &quot;wrapper&quot; for an exception thrown by a privileged action.</source>
          <target state="translated">이 예외는 &lt;code&gt;doPrivileged(PrivilegedExceptionAction)&lt;/code&gt; 및 &lt;code&gt;doPrivileged(PrivilegedExceptionAction, AccessControlContext context)&lt;/code&gt; 에 의해 수행되어 수행중인 조치가 점검 된 예외를 발생 시켰음을 표시합니다. 조치에 의해 발생 된 예외는 &lt;code&gt;getException&lt;/code&gt; 메소드 를 호출하여 얻을 수 있습니다 . 실제로, &lt;code&gt;PrivilegedActionException&lt;/code&gt; 은 특권 액션에 의해 발생 된 예외의 &quot;래퍼&quot;입니다.</target>
        </trans-unit>
        <trans-unit id="5530e47fff716d797f391867dfba35b11fcffef8" translate="yes" xml:space="preserve">
          <source>This exception is thrown by LoginModules if authentication failed. For example, a &lt;code&gt;LoginModule&lt;/code&gt; throws this exception if the user entered an incorrect password.</source>
          <target state="translated">이 예외는 인증이 실패한 경우 LoginModules에 의해 발생합니다. 예를 들어, 사용자가 잘못된 암호를 입력하면 &lt;code&gt;LoginModule&lt;/code&gt; 에서이 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="ca3ab3043d6dfdc2fabac86817feeba43db51242" translate="yes" xml:space="preserve">
          <source>This exception is thrown by LoginModules when they determine that a &lt;code&gt;Credential&lt;/code&gt; has expired. For example, a &lt;code&gt;LoginModule&lt;/code&gt; authenticating a user in its &lt;code&gt;login&lt;/code&gt; method may determine that the user's password, although entered correctly, has expired. In this case the &lt;code&gt;LoginModule&lt;/code&gt; throws this exception to notify the application. The application can then take the appropriate steps to assist the user in updating the password.</source>
          <target state="translated">이 예외는 &lt;code&gt;Credential&lt;/code&gt; 이 만료 되었다고 판별 할 때 LoginModules에 의해 발생합니다 . 예를 들어, &lt;code&gt;login&lt;/code&gt; 방법 에서 사용자를 인증 하는 &lt;code&gt;LoginModule&lt;/code&gt; 은 사용자의 비밀번호가 올바르게 입력되었지만 만료 된 것으로 판단 할 수 있습니다. 이 경우 &lt;code&gt;LoginModule&lt;/code&gt; 은이 예외를 발생시켜 응용 프로그램에 알립니다. 그런 다음 응용 프로그램은 사용자가 암호를 업데이트 할 수 있도록 적절한 단계를 수행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="84488f7e5bf4d309afcf875e0cf1e1fb778b4d56" translate="yes" xml:space="preserve">
          <source>This exception is thrown by LoginModules when they determine that an account has expired. For example, a &lt;code&gt;LoginModule&lt;/code&gt;, after successfully authenticating a user, may determine that the user's account has expired. In this case the &lt;code&gt;LoginModule&lt;/code&gt; throws this exception to notify the application. The application can then take the appropriate steps to notify the user.</source>
          <target state="translated">이 예외는 계정이 만료되었다고 판단 할 때 LoginModule에 의해 발생합니다. 예를 들어, &lt;code&gt;LoginModule&lt;/code&gt; 은 사용자를 성공적으로 인증 한 후 사용자의 계정이 만료되었음을 확인할 수 있습니다. 이 경우 &lt;code&gt;LoginModule&lt;/code&gt; 은이 예외를 발생시켜 응용 프로그램에 알립니다. 그런 다음 응용 프로그램은 적절한 단계를 수행하여 사용자에게 알릴 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c3a23db5cdc543f911a76ee1f701b5670699b971" translate="yes" xml:space="preserve">
          <source>This exception is thrown by a SASL mechanism implementation to indicate that the SASL exchange has failed due to reasons related to authentication, such as an invalid identity, passphrase, or key.</source>
          <target state="translated">이 예외는 유효하지 않은 ID, 암호 또는 키와 같은 인증 관련 이유로 인해 SASL 교환이 실패했음을 표시하기 위해 SASL 메커니즘 구현에서 발생합니다.</target>
        </trans-unit>
        <trans-unit id="39e992da1bae6a2646cdec653eebc671c5d22978" translate="yes" xml:space="preserve">
          <source>This exception is thrown by credentials implementing the &lt;code&gt;Destroyable&lt;/code&gt; interface when the &lt;code&gt;destroy&lt;/code&gt; method fails.</source>
          <target state="translated">이 예외는 &lt;code&gt;destroy&lt;/code&gt; 메소드가 실패 할 때 &lt;code&gt;Destroyable&lt;/code&gt; 인터페이스를 구현하는 신임 정보에 의해 발생 합니다.</target>
        </trans-unit>
        <trans-unit id="d2bb2b71e8b1c05a22923e140fc2a6f78bb48e5d" translate="yes" xml:space="preserve">
          <source>This exception is thrown by credentials implementing the &lt;code&gt;Refreshable&lt;/code&gt; interface when the &lt;code&gt;refresh&lt;/code&gt; method fails.</source>
          <target state="translated">이 예외는 &lt;code&gt;refresh&lt;/code&gt; 메소드가 실패 했을 때 &lt;code&gt;Refreshable&lt;/code&gt; 인터페이스를 구현하는 자격 증명에 의해 발생 합니다.</target>
        </trans-unit>
        <trans-unit id="4bc14b37aa8efa44b5f813b855472a0d52cde9c3" translate="yes" xml:space="preserve">
          <source>This exception is thrown by methods to indicate that a binding cannot be added because the name is already bound to another object.</source>
          <target state="translated">이 예외는 이름이 이미 다른 개체에 바인딩되어 있으므로 바인딩을 추가 할 수 없음을 나타내는 메서드에 의해 발생합니다.</target>
        </trans-unit>
        <trans-unit id="3f50a87f7e74f3bac1a39c7d87437a836ea03616" translate="yes" xml:space="preserve">
          <source>This exception is thrown by the AccessController to indicate that a requested access (to a critical system resource such as the file system or the network) is denied.</source>
          <target state="translated">이 예외는 요청 된 액세스 (파일 시스템 또는 네트워크와 같은 중요한 시스템 자원에 대한)가 거부되었음을 나타 내기 위해 AccessController에 의해 발생합니다.</target>
        </trans-unit>
        <trans-unit id="de70128d4e6b05c186ee1c720a208ef472f651ce" translate="yes" xml:space="preserve">
          <source>This exception is thrown if a key in the keystore cannot be recovered.</source>
          <target state="translated">키 스토어의 키를 복구 할 수없는 경우이 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="f8b425e31d21a6d687a44386bcb5d47cac70bff9" translate="yes" xml:space="preserve">
          <source>This exception is thrown if an entry in the keystore cannot be recovered.</source>
          <target state="translated">키 저장소의 항목을 복구 할 수없는 경우이 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="7c7d61c5590a79f20a378cc79058a8edcd745d38" translate="yes" xml:space="preserve">
          <source>This exception is thrown to indicate that the operation reached a point in the name where the operation cannot proceed any further.</source>
          <target state="translated">이 예외는 조작이 더 이상 진행할 수없는 이름의 한 지점에 도달했음을 표시하기 위해 발생합니다.</target>
        </trans-unit>
        <trans-unit id="a73a128ee62454d37858e133d0ecdc425831d8d6" translate="yes" xml:space="preserve">
          <source>This exception is thrown to indicate that the operation reached a point in the name where the operation cannot proceed any further. When performing an operation on a composite name, a naming service provider may reach a part of the name that does not belong to its namespace. At that point, it can construct a CannotProceedException and then invoke methods provided by javax.naming.spi.NamingManager (such as getContinuationContext()) to locate another provider to continue the operation. If this is not possible, this exception is raised to the caller of the context operation.</source>
          <target state="translated">이 예외는 조작이 더 이상 진행할 수없는 이름의 한 지점에 도달했음을 표시하기 위해 발생합니다. 합성 이름에 대한 작업을 수행 할 때 이름 지정 서비스 공급자는 네임 스페이스에 속하지 않는 이름의 일부에 도달 할 수 있습니다. 이 시점에서 CannotProceedException을 구성한 다음 javax.naming.spi.NamingManager (예 : getContinuationContext ())에서 제공하는 메소드를 호출하여 다른 제공자를 찾아 조작을 계속할 수 있습니다. 이것이 가능하지 않은 경우,이 예외는 컨텍스트 조작의 호출자에게 제기됩니다.</target>
        </trans-unit>
        <trans-unit id="b920a43bc9fe560f53060820cbe16e4c86837cba" translate="yes" xml:space="preserve">
          <source>This exception is thrown to indicate that the result being returned or returned so far is partial, and that the operation cannot be completed.</source>
          <target state="translated">이 예외는 지금까지 리턴 또는 리턴되는 결과가 부분적이며 조작을 완료 할 수 없음을 표시하기 위해 발생합니다.</target>
        </trans-unit>
        <trans-unit id="d2089a06bf446af8c1c5d52cd2a1acb69f7eb14c" translate="yes" xml:space="preserve">
          <source>This exception is thrown to indicate that the result being returned or returned so far is partial, and that the operation cannot be completed. For example, when listing a context, this exception indicates that returned results only represents some of the bindings in the context.</source>
          <target state="translated">이 예외는 지금까지 리턴 또는 리턴되는 결과가 부분적이며 조작을 완료 할 수 없음을 표시하기 위해 발생합니다. 예를 들어, 컨텍스트를 나열 할 때이 예외는 리턴 된 결과가 컨텍스트의 일부 바인딩 만 나타냄을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="0fa3d6d88ad2c6dce34e025084644e5629dba7f6" translate="yes" xml:space="preserve">
          <source>This exception is thrown when a &lt;a href=&quot;cipher&quot;&gt;&lt;code&gt;Cipher&lt;/code&gt;&lt;/a&gt; operating in an AEAD mode (such as GCM/CCM) is unable to verify the supplied authentication tag.</source>
          <target state="translated">이 예외는 AEAD 모드에서 작동 하는 &lt;a href=&quot;cipher&quot;&gt; &lt;code&gt;Cipher&lt;/code&gt; &lt;/a&gt; (예 : GCM / CCM)가 제공된 인증 태그를 확인할 수없는 경우 발생합니다.</target>
        </trans-unit>
        <trans-unit id="57d1301034839950e33406fe1cf7e7d9a5e1993d" translate="yes" xml:space="preserve">
          <source>This exception is thrown when a component of the name cannot be resolved because it is not bound.</source>
          <target state="translated">이 예외는 바인드되어 있지 않기 때문에 이름의 컴퍼넌트를 해결할 수없는 경우에 Throw됩니다.</target>
        </trans-unit>
        <trans-unit id="6f413d3ab1f32cefb3ce99cf79188671b686352f" translate="yes" xml:space="preserve">
          <source>This exception is thrown when a context implementation does not support the operation being invoked.</source>
          <target state="translated">컨텍스트 구현이 호출중인 조작을 지원하지 않는 경우이 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="57460516d646410f49f0cbcbd0134b253ab4a0c0" translate="yes" xml:space="preserve">
          <source>This exception is thrown when a context implementation does not support the operation being invoked. For example, if a server does not support the Context.bind() method it would throw OperationNotSupportedException when the bind() method is invoked on it.</source>
          <target state="translated">컨텍스트 구현이 호출중인 조작을 지원하지 않는 경우이 예외가 발생합니다. 예를 들어, 서버가 Context.bind () 메소드를 지원하지 않으면 bind () 메소드가 호출 될 때 OperationNotSupportedException이 발생합니다.</target>
        </trans-unit>
        <trans-unit id="4c2f8fa414abf991709382ded4c13c36debdb981" translate="yes" xml:space="preserve">
          <source>This exception is thrown when a loop was detected will attempting to resolve a link, or an implementation specific limit on link counts has been reached.</source>
          <target state="translated">루프가 감지되어 링크를 해결하려고 시도하거나 링크 수에 대한 구현 특정 한계에 도달하면이 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="5d1da130a71dcfc9b5538b08be7ca70f62b9f774" translate="yes" xml:space="preserve">
          <source>This exception is thrown when a malformed link was encountered while resolving or constructing a link.</source>
          <target state="translated">이 예외는 링크를 해결하거나 구성하는 동안 잘못된 링크가 발견 될 때 발생합니다.</target>
        </trans-unit>
        <trans-unit id="b2eacf9ed93eff592d27245d0674196637042935" translate="yes" xml:space="preserve">
          <source>This exception is thrown when a method does not terminate within the specified time limit.</source>
          <target state="translated">메소드가 지정된 시간 제한 내에 종료되지 않으면이 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="6529b41bc359144e52aa6f0bbb2d5c2b2b1c4b38" translate="yes" xml:space="preserve">
          <source>This exception is thrown when a method does not terminate within the specified time limit. This can happen, for example, if the user specifies that the method should take no longer than 10 seconds, and the method fails to complete with 10 seconds.</source>
          <target state="translated">메소드가 지정된 시간 제한 내에 종료되지 않으면이 예외가 발생합니다. 예를 들어, 사용자가 메소드가 10 초 이상 걸리지 않도록 지정하고 메소드가 10 초 후에 완료되지 않는 경우에 발생할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="94622a00a57fe2c691ac5a52754c85dcf9fdc8a7" translate="yes" xml:space="preserve">
          <source>This exception is thrown when a method in some ways violates the schema.</source>
          <target state="translated">이 예외는 어떤 방법으로 메소드가 스키마를 위반할 때 발생합니다.</target>
        </trans-unit>
        <trans-unit id="eec5202a94d643b10a232078bd0a9899bdfad4bb" translate="yes" xml:space="preserve">
          <source>This exception is thrown when a method in some ways violates the schema. An example of schema violation is modifying attributes of an object that violates the object's schema definition. Another example is renaming or moving an object to a part of the namespace that violates the namespace's schema definition.</source>
          <target state="translated">이 예외는 어떤 방법으로 메소드가 스키마를 위반할 때 발생합니다. 스키마 위반의 예는 객체의 스키마 정의를 위반하는 객체의 속성을 수정하는 것입니다. 다른 예는 네임 스페이스의 스키마 정의를 위반하는 네임 스페이스의 일부로 객체의 이름을 바꾸거나 이동하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="59dd923be01c00ea6ac5a97390afa42443932fa1" translate="yes" xml:space="preserve">
          <source>This exception is thrown when a method produces a result that exceeds a size-related limit.</source>
          <target state="translated">이 예외는 메서드가 크기 관련 제한을 초과하는 결과를 생성 할 때 발생합니다.</target>
        </trans-unit>
        <trans-unit id="31d22f71cdd1031a9c77a9ba4cb23dce67a18a6a" translate="yes" xml:space="preserve">
          <source>This exception is thrown when a method produces a result that exceeds a size-related limit. This can happen, for example, if the result contains more objects than the user requested, or when the size of the result exceeds some implementation-specific limit.</source>
          <target state="translated">이 예외는 메서드가 크기 관련 제한을 초과하는 결과를 생성 할 때 발생합니다. 예를 들어 결과에 사용자가 요청한 것보다 많은 객체가 포함되어 있거나 결과 크기가 구현 별 제한을 초과하는 경우에 발생할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="bbd9fa71355edcdb1a24b4f3751fa09d73366885" translate="yes" xml:space="preserve">
          <source>This exception is thrown when a method terminates abnormally due to a user or system specified limit.</source>
          <target state="translated">이 예외는 사용자 또는 시스템 지정 한계로 인해 메소드가 비정상적으로 종료 될 때 발생합니다.</target>
        </trans-unit>
        <trans-unit id="e90980a99f80ee87d4a939aa92ec7a66ef558175" translate="yes" xml:space="preserve">
          <source>This exception is thrown when a method terminates abnormally due to a user or system specified limit. This is different from a InsufficientResourceException in that LimitExceededException is due to a user/system specified limit. For example, running out of memory to complete the request would be an insufficient resource. The client asking for 10 answers and getting back 11 is a size limit exception.</source>
          <target state="translated">이 예외는 사용자 또는 시스템 지정 한계로 인해 메소드가 비정상적으로 종료 될 때 발생합니다. LimitExceededException이 사용자 / 시스템 지정 제한으로 인해 InsufficientResourceException과 다릅니다. 예를 들어, 요청을 완료하기 위해 메모리가 부족하면 리소스가 부족합니다. 클라이언트가 10 개의 답변을 요청하고 11을 다시받는 것은 크기 제한 예외입니다.</target>
        </trans-unit>
        <trans-unit id="c416a716ffde29bde878981ed9dcb8d0848e157c" translate="yes" xml:space="preserve">
          <source>This exception is thrown when a naming operation proceeds to a point where a context is required to continue the operation, but the resolved object is not a context.</source>
          <target state="translated">이 예외는 이름 지정 작업이 작업을 계속하기 위해 컨텍스트가 필요한 지점으로 진행되지만 확인 된 개체가 컨텍스트가 아닌 경우 발생합니다.</target>
        </trans-unit>
        <trans-unit id="81a72d317c6fc8a72579a69b61472a7f43bc74d5" translate="yes" xml:space="preserve">
          <source>This exception is thrown when a naming operation proceeds to a point where a context is required to continue the operation, but the resolved object is not a context. For example, Context.destroy() requires that the named object be a context. If it is not, NotContextException is thrown. Another example is a non-context being encountered during the resolution phase of the Context methods.</source>
          <target state="translated">이 예외는 이름 지정 작업이 작업을 계속하기 위해 컨텍스트가 필요한 지점으로 진행되지만 확인 된 개체가 컨텍스트가 아닌 경우 발생합니다. 예를 들어 Context.destroy ()를 사용하려면 명명 된 객체가 컨텍스트 여야합니다. 그렇지 않은 경우 NotContextException이 발생합니다. 또 다른 예는 컨텍스트 메소드의 분석 단계에서 컨텍스트가 아닌 컨텍스트가 발생하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="1dc25d47ec82b8f9dd4c3de5dc2dd0f9fc45b85d" translate="yes" xml:space="preserve">
          <source>This exception is thrown when a particular cryptographic algorithm is requested but is not available in the environment.</source>
          <target state="translated">이 예외는 특정 암호화 알고리즘이 요청되었지만 환경에서 사용할 수 없을 때 발생합니다.</target>
        </trans-unit>
        <trans-unit id="4644df4bf28c4539efcd49b5d10a7bb42e51e6b9" translate="yes" xml:space="preserve">
          <source>This exception is thrown when a particular padding mechanism is expected for the input data but the data is not padded properly.</source>
          <target state="translated">이 예외는 입력 데이터에 특정 패딩 메커니즘이 필요하지만 데이터가 올바르게 채워지지 않은 경우 발생합니다.</target>
        </trans-unit>
        <trans-unit id="302bd654098c5aa1f61763ebbe1ca7522215d3fe" translate="yes" xml:space="preserve">
          <source>This exception is thrown when a particular padding mechanism is requested but is not available in the environment.</source>
          <target state="translated">특정 패딩 메커니즘이 요청되었지만 환경에서 사용할 수없는 경우이 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="101fcdb599f4abff7f000ae7a88b9ec0617aa6cb" translate="yes" xml:space="preserve">
          <source>This exception is thrown when a particular security provider is requested but is not available in the environment.</source>
          <target state="translated">이 예외는 특정 보안 제공자가 요청되었지만 환경에서 사용할 수 없을 때 발생합니다.</target>
        </trans-unit>
        <trans-unit id="2c2cde6cb8f8e8409a755bb6e1c01e5a05d8da07" translate="yes" xml:space="preserve">
          <source>This exception is thrown when an XML formatted string is being parsed into ModelMBean objects or when XML formatted strings are being created from ModelMBean objects.</source>
          <target state="translated">XML 형식 문자열이 ModelMBean 오브젝트로 구문 분석되거나 ModelMBean 오브젝트에서 XML 형식 문자열이 작성 될 때이 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="25db7a2ecc88fac98e9ec065fe80032bf993acb4" translate="yes" xml:space="preserve">
          <source>This exception is thrown when an XML formatted string is being parsed into ModelMBean objects or when XML formatted strings are being created from ModelMBean objects. It is also used to wrapper exceptions from XML parsers that may be used.</source>
          <target state="translated">XML 형식 문자열이 ModelMBean 오브젝트로 구문 분석되거나 ModelMBean 오브젝트에서 XML 형식 문자열이 작성 될 때이 예외가 발생합니다. 또한 사용 가능한 XML 파서의 예외를 래퍼하는 데에도 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="53d4c794c1e118bb48fb37d3336f20a0c87a6a41" translate="yes" xml:space="preserve">
          <source>This exception is thrown when an attempt is made to add or modify an attribute set that has been specified incompletely or incorrectly.</source>
          <target state="translated">이 예외는 불완전하거나 잘못 지정된 속성 세트를 추가 또는 수정하려고 할 때 발생합니다.</target>
        </trans-unit>
        <trans-unit id="c2a1c4c4c3c816a5f13805d517b07a22d25f027d" translate="yes" xml:space="preserve">
          <source>This exception is thrown when an attempt is made to add or modify an attribute set that has been specified incompletely or incorrectly. This could happen, for example, when attempting to add or modify a binding, or to create a new subcontext without specifying all the mandatory attributes required for creation of the object. Another situation in which this exception is thrown is by specification of incompatible attributes within the same attribute set, or attributes in conflict with that specified by the object's schema.</source>
          <target state="translated">이 예외는 불완전하거나 잘못 지정된 속성 세트를 추가 또는 수정하려고 할 때 발생합니다. 예를 들어, 바인딩을 추가 또는 수정하거나 오브젝트 작성에 필요한 모든 필수 속성을 지정하지 않고 새 하위 컨텍스트를 작성하려고 할 때 이런 상황이 발생할 수 있습니다. 이 예외가 발생하는 또 다른 상황은 동일한 속성 세트 내에서 호환되지 않는 속성을 지정하거나 객체의 스키마에 의해 지정된 속성과 충돌하는 속성입니다.</target>
        </trans-unit>
        <trans-unit id="d5446f4e7405a3d0ddb8359b07cc60df20582910" translate="yes" xml:space="preserve">
          <source>This exception is thrown when an attempt is made to add to create an attribute with an invalid attribute identifier.</source>
          <target state="translated">이 예외는 유효하지 않은 속성 식별자로 속성을 작성하기 위해 추가하려고 할 때 발생합니다.</target>
        </trans-unit>
        <trans-unit id="9e24d2a37f41cfc2a12b4c55feecd1e44dade084" translate="yes" xml:space="preserve">
          <source>This exception is thrown when an attempt is made to add to create an attribute with an invalid attribute identifier. The validity of an attribute identifier is directory-specific.</source>
          <target state="translated">이 예외는 유효하지 않은 속성 식별자로 속성을 작성하기 위해 추가하려고 할 때 발생합니다. 속성 식별자의 유효성은 디렉토리마다 다릅니다.</target>
        </trans-unit>
        <trans-unit id="8317fef5f025c8c1c489d2d222975edd10e116a1" translate="yes" xml:space="preserve">
          <source>This exception is thrown when an attempt is made to add, or remove, or modify an attribute, its identifier, or its values that conflicts with the attribute's (schema) definition or the attribute's state.</source>
          <target state="translated">이 예외는 속성, 식별자 또는 속성 (스키마) 정의 또는 속성 상태와 충돌하는 값을 추가, 제거 또는 수정하려고 할 때 발생합니다.</target>
        </trans-unit>
        <trans-unit id="08c60304b9a2318e37b9524069c68d67fec5a981" translate="yes" xml:space="preserve">
          <source>This exception is thrown when an attempt is made to add, or remove, or modify an attribute, its identifier, or its values that conflicts with the attribute's (schema) definition or the attribute's state. It is thrown in response to DirContext.modifyAttributes(). It contains a list of modifications that have not been performed, in the order that they were supplied to modifyAttributes(). If the list is null, none of the modifications were performed successfully.</source>
          <target state="translated">이 예외는 속성, 식별자 또는 속성 (스키마) 정의 또는 속성 상태와 충돌하는 값을 추가, 제거 또는 수정하려고 할 때 발생합니다. DirContext.modifyAttributes ()에 대한 응답으로 발생합니다. 이 파일에는 modifyAttributes ()에 제공된 순서대로 수행되지 않은 수정 목록이 포함되어 있습니다. 목록이 널이면 수정이 수행되지 않은 것입니다.</target>
        </trans-unit>
        <trans-unit id="ebe3b8391e77c5b75aa9f11c64b6ae6db60cc91f" translate="yes" xml:space="preserve">
          <source>This exception is thrown when an authentication error occurs while accessing the naming or directory service.</source>
          <target state="translated">이름 지정 또는 디렉토리 서비스에 액세스하는 동안 인증 오류가 발생하면이 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="e92d5a4eb1837af13ada81159fcecf16b24e805c" translate="yes" xml:space="preserve">
          <source>This exception is thrown when an authentication error occurs while accessing the naming or directory service. An authentication error can happen, for example, when the credentials supplied by the user program is invalid or otherwise fails to authenticate the user to the naming/directory service.</source>
          <target state="translated">이름 지정 또는 디렉토리 서비스에 액세스하는 동안 인증 오류가 발생하면이 예외가 발생합니다. 예를 들어, 사용자 프로그램에서 제공 한 자격 증명이 유효하지 않거나 이름 지정 / 디렉토리 서비스에 대한 사용자 인증에 실패한 경우 인증 오류가 발생할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e7b0e2fe87b28ac79412211e90b4a23789221dc0" translate="yes" xml:space="preserve">
          <source>This exception is thrown when an operation attempts to add an attribute that already exists.</source>
          <target state="translated">조작이 이미 존재하는 속성을 추가하려고 시도하면이 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="0808c2f07b29cbd1d53f53236c70c7c29de9102c" translate="yes" xml:space="preserve">
          <source>This exception is thrown when an output buffer provided by the user is too short to hold the operation result.</source>
          <target state="translated">이 예외는 사용자가 제공 한 출력 버퍼가 너무 짧아서 작업 결과를 보유 할 수 없을 때 발생합니다.</target>
        </trans-unit>
        <trans-unit id="454fa55a71651cdde1b0e101e15afcd492adb9d5" translate="yes" xml:space="preserve">
          <source>This exception is thrown when attempting to access an attribute that does not exist.</source>
          <target state="translated">존재하지 않는 속성에 액세스하려고 할 때이 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="9ecab75d56b4ba05eb55427d1e33a425d334f9b9" translate="yes" xml:space="preserve">
          <source>This exception is thrown when attempting to communicate with a directory or naming service and that service is not available.</source>
          <target state="translated">이 예외는 디렉토리 또는 이름 지정 서비스와 통신하려고하는데 해당 서비스를 사용할 수 없을 때 발생합니다.</target>
        </trans-unit>
        <trans-unit id="9b5c20f9ae99168641fffbd9044b91f457d76668" translate="yes" xml:space="preserve">
          <source>This exception is thrown when attempting to communicate with a directory or naming service and that service is not available. It might be unavailable for different reasons. For example, the server might be too busy to service the request, or the server might not be registered to service any requests, etc.</source>
          <target state="translated">이 예외는 디렉토리 또는 이름 지정 서비스와 통신하려고하는데 해당 서비스를 사용할 수 없을 때 발생합니다. 다른 이유로 사용하지 못할 수 있습니다. 예를 들어, 서버가 너무 바빠서 요청을 처리하지 못하거나 서버가 요청 등을 처리하도록 등록되지 않았을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b554b30c750f03069a8349997f4cf18d9a837fbf" translate="yes" xml:space="preserve">
          <source>This exception is thrown when attempting to destroy a context that is not empty.</source>
          <target state="translated">이 예외는 비어 있지 않은 컨텍스트를 파괴하려고 할 때 발생합니다.</target>
        </trans-unit>
        <trans-unit id="bd0dde72d214907e7714fe11c86f10e8c526fcb8" translate="yes" xml:space="preserve">
          <source>This exception is thrown when attempting to perform an operation for which the client has no permission.</source>
          <target state="translated">이 예외는 클라이언트에게 권한이없는 작업을 수행하려고 할 때 발생합니다.</target>
        </trans-unit>
        <trans-unit id="8363cd2a1ada41c4cb07871c7e5cfc4422cc13b5" translate="yes" xml:space="preserve">
          <source>This exception is thrown when attempting to perform an operation for which the client has no permission. The access control/permission model is dictated by the directory/naming server.</source>
          <target state="translated">이 예외는 클라이언트에게 권한이없는 작업을 수행하려고 할 때 발생합니다. 액세스 제어 / 권한 모델은 디렉토리 / 이름 서버에 의해 결정됩니다.</target>
        </trans-unit>
        <trans-unit id="48839fda123e28be6cc99eed74e94281b5247a6e" translate="yes" xml:space="preserve">
          <source>This exception is thrown when no initial context implementation can be created.</source>
          <target state="translated">초기 컨텍스트 구현을 작성할 수없는 경우이 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="acdd48773e49250337c17b3f2116cb62ce5655d5" translate="yes" xml:space="preserve">
          <source>This exception is thrown when no initial context implementation can be created. The policy of how an initial context implementation is selected is described in the documentation of the InitialContext class.</source>
          <target state="translated">초기 컨텍스트 구현을 작성할 수없는 경우이 예외가 발생합니다. 초기 컨텍스트 구현 방법에 대한 정책은 InitialContext 클래스의 설명서에 설명되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="371d9f616b47b2acb1cc433ddbbf545be8511eff" translate="yes" xml:space="preserve">
          <source>This exception is thrown when resources are not available to complete the requested operation.</source>
          <target state="translated">요청 된 작업을 완료하기 위해 리소스를 사용할 수없는 경우이 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="3c99ac5e4f42a586047b0c3837db34019c890710" translate="yes" xml:space="preserve">
          <source>This exception is thrown when resources are not available to complete the requested operation. This might due to a lack of resources on the server or on the client. There are no restrictions to resource types, as different services might make use of different resources. Such restrictions might be due to physical limits and/or administrative quotas. Examples of limited resources are internal buffers, memory, network bandwidth.</source>
          <target state="translated">요청 된 작업을 완료하기 위해 리소스를 사용할 수없는 경우이 예외가 발생합니다. 서버 나 클라이언트에 리소스가 부족하기 때문일 수 있습니다. 서비스마다 다른 리소스를 사용할 수 있으므로 리소스 유형에는 제한이 없습니다. 이러한 제한은 물리적 제한 및 / 또는 관리 할당량 때문일 수 있습니다. 제한된 리소스의 예로는 내부 버퍼, 메모리, 네트워크 대역폭이 있습니다.</target>
        </trans-unit>
        <trans-unit id="09fad22a772bd21d53e751696746e069001cb96e" translate="yes" xml:space="preserve">
          <source>This exception is thrown when the client is unable to communicate with the directory or naming service.</source>
          <target state="translated">클라이언트가 디렉토리 또는 이름 지정 서비스와 통신 할 수없는 경우이 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="28ef08887bb3708aebd983a08c96a8cfa39a9797" translate="yes" xml:space="preserve">
          <source>This exception is thrown when the client is unable to communicate with the directory or naming service. The inability to communicate with the service might be a result of many factors, such as network partitioning, hardware or interface problems, failures on either the client or server side. This exception is meant to be used to capture such communication problems.</source>
          <target state="translated">클라이언트가 디렉토리 또는 이름 지정 서비스와 통신 할 수없는 경우이 예외가 발생합니다. 서비스와 통신 할 수없는 것은 네트워크 파티셔닝, 하드웨어 또는 인터페이스 문제, 클라이언트 또는 서버 쪽의 장애와 같은 많은 요인의 결과 일 수 있습니다. 이 예외는 이러한 통신 문제를 포착하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="6efd430acb709b2621e9d539947e12d9e66d61d9" translate="yes" xml:space="preserve">
          <source>This exception is thrown when the length of data provided to a block cipher is incorrect, i.e., does not match the block size of the cipher.</source>
          <target state="translated">이 예외는 블록 암호에 제공된 데이터 길이가 올바르지 않은 경우, 즉 암호의 블록 크기와 일치하지 않을 때 발생합니다.</target>
        </trans-unit>
        <trans-unit id="483ee24d9f269ccb8aea2c071b14c2365f2ecd5b" translate="yes" xml:space="preserve">
          <source>This exception is thrown when the naming operation being invoked has been interrupted.</source>
          <target state="translated">이 예외는, 네이밍 조작의 호출이 중단되었을 경우에 Throw됩니다.</target>
        </trans-unit>
        <trans-unit id="b8b7b4a7229bdebb156a99f438f2b600a0dcf487" translate="yes" xml:space="preserve">
          <source>This exception is thrown when the naming operation being invoked has been interrupted. For example, an application might interrupt a thread that is performing a search. If the search supports being interrupted, it will throw InterruptedNamingException. Whether an operation is interruptible and when depends on its implementation (as provided by the service providers). Different implementations have different ways of protecting their resources and objects from being damaged due to unexpected interrupts.</source>
          <target state="translated">이 예외는, 네이밍 조작의 호출이 중단되었을 경우에 Throw됩니다. 예를 들어, 응용 프로그램이 검색을 수행하는 스레드를 중단 할 수 있습니다. 검색이 중단되는 것을 지원하면 InterruptedNamingException이 발생합니다. 작업이 중단 가능한지 여부와시기는 서비스 공급자가 제공 한 구현에 따라 다릅니다. 구현마다 다른 예기치 않은 인터럽트로 인해 리소스와 개체가 손상되지 않도록 보호하는 방법이 다릅니다.</target>
        </trans-unit>
        <trans-unit id="5c8b8d397c54b830baad3109e9468a9b1ab1d596" translate="yes" xml:space="preserve">
          <source>This exception is thrown when the particular flavor of authentication requested is not supported.</source>
          <target state="translated">요청 된 특정 종류의 인증이 지원되지 않는 경우이 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="5af2dbd51afd3d832635e5a5a5f9ef19b6d40249" translate="yes" xml:space="preserve">
          <source>This exception is thrown when the particular flavor of authentication requested is not supported. For example, if the program is attempting to use strong authentication but the directory/naming supports only simple authentication, this exception would be thrown. Identification of a particular flavor of authentication is provider- and server-specific. It may be specified using specific authentication schemes such those identified using SASL, or a generic authentication specifier (such as &quot;simple&quot; and &quot;strong&quot;).</source>
          <target state="translated">요청 된 특정 종류의 인증이 지원되지 않는 경우이 예외가 발생합니다. 예를 들어, 프로그램이 강력한 인증을 사용하려고하지만 디렉토리 / 이름 지정이 단순한 인증 만 지원하는 경우이 예외가 발생합니다. 특정 종류의 인증을 식별하는 것은 공급자 및 서버마다 다릅니다. SASL을 사용하여 식별 된 것과 같은 특정 인증 체계 또는 일반 인증 지정자 (예 : &quot;간단한&quot;및 &quot;강한&quot;)를 사용하여 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0289a133e8abfa2a6414887b59f3f1b56d7b1dda" translate="yes" xml:space="preserve">
          <source>This exception is thrown when the specification of a search filter is invalid.</source>
          <target state="translated">이 예외는 검색 필터의 스펙이 유효하지 않은 경우 발생합니다.</target>
        </trans-unit>
        <trans-unit id="332819cc96497ee0281a2d425d00258c041bc8d4" translate="yes" xml:space="preserve">
          <source>This exception is thrown when the specification of a search filter is invalid. The expression of the filter may be invalid, or there may be a problem with one of the parameters passed to the filter.</source>
          <target state="translated">이 예외는 검색 필터의 스펙이 유효하지 않은 경우 발생합니다. 필터 표현이 유효하지 않거나 필터에 전달 된 매개 변수 중 하나에 문제가있을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5729b449c32051f6a0a5756b8780f0c11f4c3c2a" translate="yes" xml:space="preserve">
          <source>This exception is thrown when the specification of the SearchControls for a search operation is invalid.</source>
          <target state="translated">검색 조작에 대한 SearchControls 스펙이 유효하지 않은 경우이 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="cdb0be4fb77057c18ab00ea22e44156d1bc19dfc" translate="yes" xml:space="preserve">
          <source>This exception is thrown when the specification of the SearchControls for a search operation is invalid. For example, if the scope is set to a value other than OBJECT_SCOPE, ONELEVEL_SCOPE, SUBTREE_SCOPE, this exception is thrown.</source>
          <target state="translated">검색 조작에 대한 SearchControls 스펙이 유효하지 않은 경우이 예외가 발생합니다. 예를 들어, 범위가 OBJECT_SCOPE, ONELEVEL_SCOPE, SUBTREE_SCOPE 이외의 값으로 설정되면이 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="17089db05ad45c11e665b76593094d608d306306" translate="yes" xml:space="preserve">
          <source>This exception is thrown when there is a configuration problem.</source>
          <target state="translated">이 예외는 구성 문제가있을 때 발생합니다.</target>
        </trans-unit>
        <trans-unit id="2fc449823f0aec4c36d0a26bb45bbfcce8f03d8a" translate="yes" xml:space="preserve">
          <source>This exception is thrown when there is a configuration problem. This can arise when installation of a provider was not done correctly, or if there are configuration problems with the server, or if configuration information required to access the provider or service is malformed or missing. For example, a request to use SSL as the security protocol when the service provider software was not configured with the SSL component would cause such an exception. Another example is if the provider requires that a URL be specified as one of the environment properties but the client failed to provide it.</source>
          <target state="translated">이 예외는 구성 문제가있을 때 발생합니다. 공급자 설치가 올바르게 수행되지 않았거나 서버에 구성 문제가 있거나 공급자 또는 서비스에 액세스하는 데 필요한 구성 정보가 잘못되었거나 누락 된 경우에 발생할 수 있습니다. 예를 들어, 서비스 제공 업체 소프트웨어가 SSL 구성 요소로 구성되지 않은 경우 SSL을 보안 프로토콜로 사용하도록 요청하면 이러한 예외가 발생합니다. 또 다른 예는 공급자가 URL을 환경 속성 중 하나로 지정해야하지만 클라이언트가 URL을 제공하지 못한 경우입니다.</target>
        </trans-unit>
        <trans-unit id="8272ca68abdbab62494087027b4171df0897b987" translate="yes" xml:space="preserve">
          <source>This exception is used to describe problems encounter while resolving links.</source>
          <target state="translated">이 예외는 링크를 해결하는 동안 발생하는 문제를 설명하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="1aea89ea00a9749bd19029837fff4c685ebd3819" translate="yes" xml:space="preserve">
          <source>This exception is used to describe problems encounter while resolving links. Addition information is added to the base NamingException for pinpointing the problem with the link.</source>
          <target state="translated">이 예외는 링크를 해결하는 동안 발생하는 문제를 설명하는 데 사용됩니다. 링크 관련 문제를 찾아 내기 위해 추가 정보가 기본 NamingException에 추가됩니다.</target>
        </trans-unit>
        <trans-unit id="bcd5ca596420f929e88a9b13dc1380f40ddf33b4" translate="yes" xml:space="preserve">
          <source>This exception is used to indicate a problems with the configured time-zone rules.</source>
          <target state="translated">이 예외는 구성된 시간대 규칙에 문제가 있음을 나타내는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="f26b2138dacd9301849230d91ea0be2e44a94adf" translate="yes" xml:space="preserve">
          <source>This exception is used to indicate problems with creating, querying and manipulating date-time objects.</source>
          <target state="translated">이 예외는 날짜-시간 오브젝트 작성, 조회 및 조작에 문제가 있음을 나타내는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="52aac530a9aa9b99d3a8923d82503f582d33c716" translate="yes" xml:space="preserve">
          <source>This exception may also be thrown when two method handles are composed, and the system detects that their types cannot be matched up correctly. This amounts to an early evaluation of the type mismatch, at method handle construction time, instead of when the mismatched method handle is called.</source>
          <target state="translated">이 예외는 두 개의 메소드 핸들이 구성되고 시스템이 해당 유형을 올바르게 일치시킬 수 없음을 감지 한 경우에도 발생할 수 있습니다. 이는 불일치 한 메소드 핸들이 호출 될 때가 아니라 메소드 핸들 구성 시간에 유형 불일치의 조기 평가에 해당합니다.</target>
        </trans-unit>
        <trans-unit id="97ef9b4944f514133b5a2fb07ec8a043618874fe" translate="yes" xml:space="preserve">
          <source>This exception may be thrown by a LoginModule if it determines that authentication is being attempted on a locked account.</source>
          <target state="translated">이 예외는 잠긴 계정에서 인증이 시도되고 있다고 판단되면 LoginModule에 의해 발생할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="25905e98bbc8ed6b0a99cd269b514f08f4f1017b" translate="yes" xml:space="preserve">
          <source>This exception may be thrown by a LoginModule if it is unable to locate a credential necessary to perform authentication.</source>
          <target state="translated">인증을 수행하는 데 필요한 자격 증명을 찾을 수없는 경우 LoginModule에 의해이 예외가 발생할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1f446d2187f9b7cc3da2fcd7c2a3573fc6fe484c" translate="yes" xml:space="preserve">
          <source>This exception may be thrown by a LoginModule if it is unable to locate an account necessary to perform authentication.</source>
          <target state="translated">인증을 수행하는 데 필요한 계정을 찾을 수없는 경우 LoginModule에 의해이 예외가 발생할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7480073638152c36c49f39bd998c00adda42819c" translate="yes" xml:space="preserve">
          <source>This exception may be thrown by methods that have detected concurrent modification of an object when such modification is not permissible.</source>
          <target state="translated">이 예외는 그러한 수정이 허용되지 않을 때 객체의 동시 수정을 감지 한 메소드에 의해 발생할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="48287f0f78d18f3dc149791ece21c16c452a34c3" translate="yes" xml:space="preserve">
          <source>This exception will be thrown by the &lt;a href=&quot;fileinputstream&quot;&gt;&lt;code&gt;FileInputStream&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;fileoutputstream&quot;&gt;&lt;code&gt;FileOutputStream&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;randomaccessfile&quot;&gt;&lt;code&gt;RandomAccessFile&lt;/code&gt;&lt;/a&gt; constructors when a file with the specified pathname does not exist. It will also be thrown by these constructors if the file does exist but for some reason is inaccessible, for example when an attempt is made to open a read-only file for writing.</source>
          <target state="translated">지정된 패스 명을 가지는 파일이 존재하지 않는 경우 , &lt;a href=&quot;fileinputstream&quot;&gt; &lt;code&gt;FileInputStream&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;fileoutputstream&quot;&gt; &lt;code&gt;FileOutputStream&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;randomaccessfile&quot;&gt; &lt;code&gt;RandomAccessFile&lt;/code&gt; &lt;/a&gt; 생성자에 의해이 예외가 발생됩니다 . 파일이 존재하지만 어떤 이유로 액세스 할 수없는 경우 (예 : 쓰기 전용 읽기 전용 파일을 열려고 시도하는 경우) 이러한 생성자에서도 발생합니다.</target>
        </trans-unit>
        <trans-unit id="a357b9eaaabb2a730f4cb39a850d694749b6bbd6" translate="yes" xml:space="preserve">
          <source>This exception, designed for use by the JCA/JCE engine classes, is thrown when an invalid parameter is passed to a method.</source>
          <target state="translated">JCA / JCE 엔진 클래스에서 사용하도록 설계된이 예외는 유효하지 않은 매개 변수가 메소드에 전달 될 때 발생합니다.</target>
        </trans-unit>
        <trans-unit id="48549af4387c0a30de3762c57e24652d7daa3cbd" translate="yes" xml:space="preserve">
          <source>This factory method is primarily intended for use from applets. Because the resulting Logger is anonymous it can be kept private by the creating class. This removes the need for normal security checks, which in turn allows untrusted applet code to update the control state of the Logger. For example an applet can do a setLevel or an addHandler on an anonymous Logger.</source>
          <target state="translated">이 팩토리 메소드는 기본적으로 애플릿에서 사용하기위한 것입니다. 결과 로거는 익명이므로 생성 클래스에 의해 비공개로 유지 될 수 있습니다. 이렇게하면 정상적인 보안 검사가 필요하지 않아 신뢰할 수없는 애플릿 코드가 로거의 제어 상태를 업데이트 할 수 있습니다. 예를 들어, 애플릿은 익명 로거에서 setLevel 또는 addHandler를 수행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="56d77548756d2f03152212977af570f3cfcf232f" translate="yes" xml:space="preserve">
          <source>This factory method looks up the resource bundle in the cache for the specified &lt;code&gt;baseName&lt;/code&gt;, &lt;code&gt;targetLocale&lt;/code&gt; and &lt;code&gt;loader&lt;/code&gt;. If the requested resource bundle instance is found in the cache and the time-to-live periods of the instance and all of its parent instances have not expired, the instance is returned to the caller. Otherwise, this factory method proceeds with the loading process below.</source>
          <target state="translated">이 팩토리 메소드는 지정된 &lt;code&gt;baseName&lt;/code&gt; , &lt;code&gt;targetLocale&lt;/code&gt; 및 &lt;code&gt;loader&lt;/code&gt; 에 대한 캐시에서 자원 번들을 찾습니다 . 요청 된 자원 번들 인스턴스가 캐시에서 발견되고 인스턴스 및 모든 상위 인스턴스의 수명 기간이 만료되지 않은 경우 인스턴스는 호출자에게 리턴됩니다. 그렇지 않으면이 팩토리 방법은 아래의 로딩 프로세스를 진행합니다.</target>
        </trans-unit>
        <trans-unit id="d4f7acde9c0c4bc2f10c8ed97ccda324b655779f" translate="yes" xml:space="preserve">
          <source>This factory obtains a range where both the minimum and maximum value may vary.</source>
          <target state="translated">이 공장은 최소값과 최대 값이 다를 수있는 범위를 얻습니다.</target>
        </trans-unit>
        <trans-unit id="1dd81da0b52ea41d5c4738642c84c83c4e82262d" translate="yes" xml:space="preserve">
          <source>This factory obtains a range where the minimum and maximum values are fixed. For example, the ISO month-of-year always runs from 1 to 12.</source>
          <target state="translated">이 공장은 최소값과 최대 값이 고정 된 범위를 얻습니다. 예를 들어 ISO 연도는 항상 1에서 12 사이입니다.</target>
        </trans-unit>
        <trans-unit id="e609b6ca60ee8eb7f45e091448156ea168fcfef0" translate="yes" xml:space="preserve">
          <source>This factory obtains a range where the minimum value is fixed and the maximum value may vary. For example, the ISO day-of-month always starts at 1, but ends between 28 and 31.</source>
          <target state="translated">이 공장은 최소값이 고정되고 최대 값이 다를 수있는 범위를 얻습니다. 예를 들어 ISO 날짜는 항상 1에서 시작하지만 28에서 31 사이에서 끝납니다.</target>
        </trans-unit>
        <trans-unit id="b07a6ac74957508dea507e2c9587337ab104cba3" translate="yes" xml:space="preserve">
          <source>This field allows the day-of-quarter value to be queried and set. The day-of-quarter has values from 1 to 90 in Q1 of a standard year, from 1 to 91 in Q1 of a leap year, from 1 to 91 in Q2 and from 1 to 92 in Q3 and Q4.</source>
          <target state="translated">이 필드를 사용하면 분기 값을 쿼리하고 설정할 수 있습니다. 분기는 표준 연도의 1 분기 1 ~ 90, 윤년 1 분기 1 ~ 91, 2 분기 1 ~ 91, 3 분기와 4 분기 1 ~ 92 사이의 값을가집니다.</target>
        </trans-unit>
        <trans-unit id="ab823df6586fcf1e3fda403714a995d7300513bb" translate="yes" xml:space="preserve">
          <source>This field allows the quarter-of-year value to be queried and set. The quarter-of-year has values from 1 to 4.</source>
          <target state="translated">이 필드를 사용하면 연도 별 값을 쿼리하고 설정할 수 있습니다. 분기는 1에서 4 사이의 값을 갖습니다.</target>
        </trans-unit>
        <trans-unit id="98ee12514e1ff1f8c99b83a31253d4e796fc611c" translate="yes" xml:space="preserve">
          <source>This field allows the week of the week-based-year value to be queried and set. The week-of-week-based-year has values from 1 to 52, or 53 if the week-based-year has 53 weeks.</source>
          <target state="translated">이 필드에서는 주별 연도 값을 조회하고 설정할 수 있습니다. 주별 연도의 값은 1에서 52까지이며 주별 연도가 53 주인 경우 53입니다.</target>
        </trans-unit>
        <trans-unit id="6b13e5218b93508b78d4d29e5225fa1418046286" translate="yes" xml:space="preserve">
          <source>This field allows the week-based-year value to be queried and set.</source>
          <target state="translated">이 필드에서는 주별 연도 값을 쿼리하고 설정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="16e4f19f6f75aeaf9761d09d278295ed29614333" translate="yes" xml:space="preserve">
          <source>This field can be set for an &lt;code&gt;MBeanNotificationInfo&lt;/code&gt;, in which case it indicates the Open Type that the &lt;a href=&quot;notification#getUserData--&quot;&gt;&lt;code&gt;user data&lt;/code&gt;&lt;/a&gt; will have.</source>
          <target state="translated">이 필드는 &lt;code&gt;MBeanNotificationInfo&lt;/code&gt; 에 대해 설정 될 수 있으며 ,이 경우 &lt;a href=&quot;notification#getUserData--&quot;&gt; &lt;code&gt;user data&lt;/code&gt; &lt;/a&gt; 가 가질 개방형을 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="ea3ec0673f03e00aa663ee43fda3fa33cb248907" translate="yes" xml:space="preserve">
          <source>This field can be used with any calendar system.</source>
          <target state="translated">이 필드는 모든 캘린더 시스템에서 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="18d420e9bc600b42f6bd92286d36a1a1563dca67" translate="yes" xml:space="preserve">
          <source>This field hides the &lt;a href=&quot;../../java/util/eventobject#source&quot;&gt;&lt;code&gt;EventObject.source&lt;/code&gt;&lt;/a&gt; field in the parent class to make it non-transient and therefore part of the serialized form.</source>
          <target state="translated">이 필드 는 부모 클래스에서 &lt;a href=&quot;../../java/util/eventobject#source&quot;&gt; &lt;code&gt;EventObject.source&lt;/code&gt; &lt;/a&gt; 필드를 숨겨서 일시적이지 않고 직렬화 된 양식의 일부로 만듭니다.</target>
        </trans-unit>
        <trans-unit id="74a9cbdd88f0b4a08354be0afadbaec13d74347f" translate="yes" xml:space="preserve">
          <source>This field is &lt;code&gt;true&lt;/code&gt; if there is a security check in progress; &lt;code&gt;false&lt;/code&gt; otherwise.</source>
          <target state="translated">보안 점검이 진행중인 경우이 필드는 &lt;code&gt;true&lt;/code&gt; . 그렇지 않으면 &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3f106cdb1f6d10200df0392eec60691b570b8f6e" translate="yes" xml:space="preserve">
          <source>This field is initialized to null. It should not be manipulated directly: it should be accessed and updated using getAltName() and setAltName().</source>
          <target state="translated">이 필드는 null로 초기화됩니다. 직접 조작해서는 안됩니다. getAltName () 및 setAltName ()을 사용하여 액세스하고 업데이트해야합니다.</target>
        </trans-unit>
        <trans-unit id="978a6f513b64d3ddbbd059f20e4c7bdb555aa0fa" translate="yes" xml:space="preserve">
          <source>This field is initialized to null. It should not be manipulated directly: it should be accessed and updated using getAltNameCtx() and setAltNameCtx().</source>
          <target state="translated">이 필드는 null로 초기화됩니다. 직접 조작해서는 안됩니다. getAltNameCtx () 및 setAltNameCtx ()를 사용하여 액세스하고 업데이트해야합니다.</target>
        </trans-unit>
        <trans-unit id="2e5264722dafb7f008333c277cd02b754af0d058" translate="yes" xml:space="preserve">
          <source>This field is initialized to null. It should not be manipulated directly: it should be accessed and updated using getEnvironment() and setEnvironment().</source>
          <target state="translated">이 필드는 null로 초기화됩니다. 직접 조작해서는 안됩니다. getEnvironment () 및 setEnvironment ()를 사용하여 액세스하고 업데이트해야합니다.</target>
        </trans-unit>
        <trans-unit id="935b90d14dfdace7c7c898fe605937fc83a388f1" translate="yes" xml:space="preserve">
          <source>This field is initialized to null. It should not be manipulated directly: it should be accessed and updated using getRemainingName() and setRemainingName().</source>
          <target state="translated">이 필드는 null로 초기화됩니다. 직접 조작해서는 안됩니다. getRemainingName () 및 setRemainingName ()을 사용하여 액세스하고 업데이트해야합니다.</target>
        </trans-unit>
        <trans-unit id="1116440b0df22264838eceda530e7b1f586b9771" translate="yes" xml:space="preserve">
          <source>This field is retained for compatibility but should not be referenced.</source>
          <target state="translated">이 필드는 호환성을 위해 유지되지만 참조해서는 안됩니다.</target>
        </trans-unit>
        <trans-unit id="0973a832db8ff89973d7e6843e67ed64ab898306" translate="yes" xml:space="preserve">
          <source>This field is set by the &lt;code&gt;setInstanceFollowRedirects&lt;/code&gt; method. Its value is returned by the &lt;code&gt;getInstanceFollowRedirects&lt;/code&gt; method.</source>
          <target state="translated">이 필드는 &lt;code&gt;setInstanceFollowRedirects&lt;/code&gt; 메소드로 설정됩니다 . 그 값은 &lt;code&gt;getInstanceFollowRedirects&lt;/code&gt; 메소드에 의해 리턴됩니다 .</target>
        </trans-unit>
        <trans-unit id="09e2a54f88e9ca0dff0ba07e4f5bc710a59509a9" translate="yes" xml:space="preserve">
          <source>This field is set by the &lt;code&gt;setUseCaches&lt;/code&gt; method. Its value is returned by the &lt;code&gt;getUseCaches&lt;/code&gt; method.</source>
          <target state="translated">이 필드는 &lt;code&gt;setUseCaches&lt;/code&gt; 메소드로 설정됩니다 . 그 값은 &lt;code&gt;getUseCaches&lt;/code&gt; 메소드에 의해 리턴됩니다 .</target>
        </trans-unit>
        <trans-unit id="e5d3e5d2b48b03c93e4d8ff275d004ecd4b2f2fe" translate="yes" xml:space="preserve">
          <source>This field is strictly defined to have the same meaning in all calendar systems. This is necessary to ensure interoperation between calendars.</source>
          <target state="translated">이 필드는 모든 캘린더 시스템에서 동일한 의미를 갖도록 엄격하게 정의됩니다. 캘린더 간 상호 운용을 보장하는 데 필요합니다.</target>
        </trans-unit>
        <trans-unit id="b4b104288c94820296edb1789be70f2f87aed5ad" translate="yes" xml:space="preserve">
          <source>This field is the sequential count of days where 1970-01-01 (ISO) is zero. Note that this uses the</source>
          <target state="translated">이 필드는 1970-01-01 (ISO)이 0 인 순차적 일 수입니다. 이것은</target>
        </trans-unit>
        <trans-unit id="24e2813114fe0e4e7e496a714543784cbd4e0f9c" translate="yes" xml:space="preserve">
          <source>This field is the sequential count of months where the first month in proleptic-year zero has the value zero. Later months have increasingly larger values. Earlier months have increasingly small values. There are no gaps or breaks in the sequence of months. Note that this uses the</source>
          <target state="translated">이 필드는 proleptic-year 0의 첫 번째 달의 값이 0 인 순차적 인 개월 수입니다. 나중에 몇 달 동안 더 큰 가치가 있습니다. 이전 달의 가치는 점점 작아지고 있습니다. 몇 달간 격차가 없습니다. 이것은</target>
        </trans-unit>
        <trans-unit id="41a4717d6de67ceb4323a49338ab1d2e9160f48d" translate="yes" xml:space="preserve">
          <source>This field is used by the iterator and list iterator implementation returned by the &lt;code&gt;iterator&lt;/code&gt; and &lt;code&gt;listIterator&lt;/code&gt; methods. If the value of this field changes unexpectedly, the iterator (or list iterator) will throw a &lt;code&gt;ConcurrentModificationException&lt;/code&gt; in response to the &lt;code&gt;next&lt;/code&gt;, &lt;code&gt;remove&lt;/code&gt;, &lt;code&gt;previous&lt;/code&gt;, &lt;code&gt;set&lt;/code&gt; or &lt;code&gt;add&lt;/code&gt; operations. This provides</source>
          <target state="translated">이 필드는 &lt;code&gt;iterator&lt;/code&gt; 및 &lt;code&gt;listIterator&lt;/code&gt; 메소드가 리턴 한 반복자 및 목록 반복자 구현에서 사용됩니다 . 이 필드의 값이 예기치 않게 변경되면 반복자 (또는 목록 반복자)는 &lt;code&gt;next&lt;/code&gt; , &lt;code&gt;remove&lt;/code&gt; , &lt;code&gt;previous&lt;/code&gt; , &lt;code&gt;set&lt;/code&gt; 또는 &lt;code&gt;add&lt;/code&gt; 작업 에 대한 응답으로 &lt;code&gt;ConcurrentModificationException&lt;/code&gt; 을 발생시킵니다 . 이것은 제공합니다</target>
        </trans-unit>
        <trans-unit id="8dce713d65129e21a381674ea8f509a7dda6e75f" translate="yes" xml:space="preserve">
          <source>This field is used to represent the micro-of-day handling any fraction of the second. Implementations of &lt;code&gt;TemporalAccessor&lt;/code&gt; should provide a value for this field if they can return a value for &lt;a href=&quot;chronofield#SECOND_OF_DAY&quot;&gt;&lt;code&gt;SECOND_OF_DAY&lt;/code&gt;&lt;/a&gt; filling unknown precision with zero.</source>
          <target state="translated">이 필드는 초의 일부를 처리하는 마이크로 일을 나타내는 데 사용됩니다. &lt;code&gt;TemporalAccessor&lt;/code&gt; 의 구현은 &lt;a href=&quot;chronofield#SECOND_OF_DAY&quot;&gt; &lt;code&gt;SECOND_OF_DAY&lt;/code&gt; 에&lt;/a&gt; 알 수없는 정밀도를 0으로 채우는 값을 리턴 할 수있는 경우이 필드에 값을 제공해야합니다 .</target>
        </trans-unit>
        <trans-unit id="8a01eb06b15555f5073ff81640ef64a5a7de1c35" translate="yes" xml:space="preserve">
          <source>This field is used to represent the micro-of-second handling any fraction of the second. Implementations of &lt;code&gt;TemporalAccessor&lt;/code&gt; should provide a value for this field if they can return a value for &lt;a href=&quot;chronofield#SECOND_OF_MINUTE&quot;&gt;&lt;code&gt;SECOND_OF_MINUTE&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;chronofield#SECOND_OF_DAY&quot;&gt;&lt;code&gt;SECOND_OF_DAY&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;chronofield#INSTANT_SECONDS&quot;&gt;&lt;code&gt;INSTANT_SECONDS&lt;/code&gt;&lt;/a&gt; filling unknown precision with zero.</source>
          <target state="translated">이 필드는 초의 모든 부분을 처리하는 초 단위를 나타내는 데 사용됩니다. &lt;code&gt;TemporalAccessor&lt;/code&gt; 구현은 알 수없는 정밀도를 0으로 채우는 &lt;a href=&quot;chronofield#SECOND_OF_MINUTE&quot;&gt; &lt;code&gt;SECOND_OF_MINUTE&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;chronofield#SECOND_OF_DAY&quot;&gt; &lt;code&gt;SECOND_OF_DAY&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;chronofield#INSTANT_SECONDS&quot;&gt; &lt;code&gt;INSTANT_SECONDS&lt;/code&gt; &lt;/a&gt; 값을 리턴 할 수있는 경우이 필드에 값을 제공해야합니다 .</target>
        </trans-unit>
        <trans-unit id="4be49c2b038fe08d673cc4082ae4af22a533fccb" translate="yes" xml:space="preserve">
          <source>This field is used to represent the milli-of-day handling any fraction of the second. Implementations of &lt;code&gt;TemporalAccessor&lt;/code&gt; should provide a value for this field if they can return a value for &lt;a href=&quot;chronofield#SECOND_OF_DAY&quot;&gt;&lt;code&gt;SECOND_OF_DAY&lt;/code&gt;&lt;/a&gt; filling unknown precision with zero.</source>
          <target state="translated">이 필드는 초의 일부를 처리하는 밀리 언어를 나타내는 데 사용됩니다. &lt;code&gt;TemporalAccessor&lt;/code&gt; 의 구현은 &lt;a href=&quot;chronofield#SECOND_OF_DAY&quot;&gt; &lt;code&gt;SECOND_OF_DAY&lt;/code&gt; 에&lt;/a&gt; 알 수없는 정밀도를 0으로 채우는 값을 리턴 할 수있는 경우이 필드에 값을 제공해야합니다 .</target>
        </trans-unit>
        <trans-unit id="b957133502f14286d3edaea7427acb86d39c7bf4" translate="yes" xml:space="preserve">
          <source>This field is used to represent the milli-of-second handling any fraction of the second. Implementations of &lt;code&gt;TemporalAccessor&lt;/code&gt; should provide a value for this field if they can return a value for &lt;a href=&quot;chronofield#SECOND_OF_MINUTE&quot;&gt;&lt;code&gt;SECOND_OF_MINUTE&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;chronofield#SECOND_OF_DAY&quot;&gt;&lt;code&gt;SECOND_OF_DAY&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;chronofield#INSTANT_SECONDS&quot;&gt;&lt;code&gt;INSTANT_SECONDS&lt;/code&gt;&lt;/a&gt; filling unknown precision with zero.</source>
          <target state="translated">이 필드는 초의 일부를 처리하는 밀리 초를 나타내는 데 사용됩니다. &lt;code&gt;TemporalAccessor&lt;/code&gt; 구현은 알 수없는 정밀도를 0으로 채우는 &lt;a href=&quot;chronofield#SECOND_OF_MINUTE&quot;&gt; &lt;code&gt;SECOND_OF_MINUTE&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;chronofield#SECOND_OF_DAY&quot;&gt; &lt;code&gt;SECOND_OF_DAY&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;chronofield#INSTANT_SECONDS&quot;&gt; &lt;code&gt;INSTANT_SECONDS&lt;/code&gt; &lt;/a&gt; 값을 리턴 할 수있는 경우이 필드에 값을 제공해야합니다 .</target>
        </trans-unit>
        <trans-unit id="56950586a498b262af039f7017c8a4746f1e26b9" translate="yes" xml:space="preserve">
          <source>This field is used to represent the nano-of-day handling any fraction of the second. Implementations of &lt;code&gt;TemporalAccessor&lt;/code&gt; should provide a value for this field if they can return a value for &lt;a href=&quot;chronofield#SECOND_OF_DAY&quot;&gt;&lt;code&gt;SECOND_OF_DAY&lt;/code&gt;&lt;/a&gt; filling unknown precision with zero.</source>
          <target state="translated">이 필드는 초 단위의 나노 처리를 나타내는 데 사용됩니다. &lt;code&gt;TemporalAccessor&lt;/code&gt; 의 구현은 &lt;a href=&quot;chronofield#SECOND_OF_DAY&quot;&gt; &lt;code&gt;SECOND_OF_DAY&lt;/code&gt; 에&lt;/a&gt; 알 수없는 정밀도를 0으로 채우는 값을 리턴 할 수있는 경우이 필드에 값을 제공해야합니다 .</target>
        </trans-unit>
        <trans-unit id="7a4278a7d6b6080b6a27cdd4a04881abbbe3ac4d" translate="yes" xml:space="preserve">
          <source>This field is used to represent the nano-of-second handling any fraction of the second. Implementations of &lt;code&gt;TemporalAccessor&lt;/code&gt; should provide a value for this field if they can return a value for &lt;a href=&quot;chronofield#SECOND_OF_MINUTE&quot;&gt;&lt;code&gt;SECOND_OF_MINUTE&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;chronofield#SECOND_OF_DAY&quot;&gt;&lt;code&gt;SECOND_OF_DAY&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;chronofield#INSTANT_SECONDS&quot;&gt;&lt;code&gt;INSTANT_SECONDS&lt;/code&gt;&lt;/a&gt; filling unknown precision with zero.</source>
          <target state="translated">이 필드는 초 단위의 나노초 처리를 나타내는 데 사용됩니다. &lt;code&gt;TemporalAccessor&lt;/code&gt; 구현은 알 수없는 정밀도를 0으로 채우는 &lt;a href=&quot;chronofield#SECOND_OF_MINUTE&quot;&gt; &lt;code&gt;SECOND_OF_MINUTE&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;chronofield#SECOND_OF_DAY&quot;&gt; &lt;code&gt;SECOND_OF_DAY&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;chronofield#INSTANT_SECONDS&quot;&gt; &lt;code&gt;INSTANT_SECONDS&lt;/code&gt; &lt;/a&gt; 값을 리턴 할 수있는 경우이 필드에 값을 제공해야합니다 .</target>
        </trans-unit>
        <trans-unit id="58be22eba5513e6f16a19ec2287f84585ea5768a" translate="yes" xml:space="preserve">
          <source>This field predates the general-purpose exception chaining facility. The &lt;a href=&quot;../lang/throwable#getCause--&quot;&gt;&lt;code&gt;Throwable.getCause()&lt;/code&gt;&lt;/a&gt; method is now the preferred means of obtaining this information.</source>
          <target state="translated">이 필드는 범용 예외 체인 기능보다 우선합니다. &lt;a href=&quot;../lang/throwable#getCause--&quot;&gt; &lt;code&gt;Throwable.getCause()&lt;/code&gt; &lt;/a&gt; 메소드는이 정보를 취득하는 수단이다.</target>
        </trans-unit>
        <trans-unit id="f801501042f288a6bee35bd6dc4a117f8e2695da" translate="yes" xml:space="preserve">
          <source>This field predates the general-purpose exception chaining facility. The &lt;a href=&quot;namingexception#initCause-java.lang.Throwable-&quot;&gt;&lt;code&gt;initCause(Throwable)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;namingexception#getCause--&quot;&gt;&lt;code&gt;getCause()&lt;/code&gt;&lt;/a&gt; methods are now the preferred means of accessing this information.</source>
          <target state="translated">이 필드는 범용 예외 체인 기능보다 우선합니다. &lt;a href=&quot;namingexception#initCause-java.lang.Throwable-&quot;&gt; &lt;code&gt;initCause(Throwable)&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;namingexception#getCause--&quot;&gt; &lt;code&gt;getCause()&lt;/code&gt; &lt;/a&gt; 메소드는 지금이 정보에 액세스 할 수있는 바람직한 방법이다.</target>
        </trans-unit>
        <trans-unit id="ebcc9442bd3f9316e5b5fad08700464cae1e0dcc" translate="yes" xml:space="preserve">
          <source>This field reflects the correct GMT offset value of the time zone of this &lt;code&gt;Calendar&lt;/code&gt; if the &lt;code&gt;TimeZone&lt;/code&gt; implementation subclass supports historical GMT offset changes.</source>
          <target state="translated">이 필드는이 시간대의 정확한 GMT 오프셋 값을 반영 &lt;code&gt;Calendar&lt;/code&gt; 경우 &lt;code&gt;TimeZone&lt;/code&gt; 구현 서브 클래스가 지원하는 역사적 GMT 변경 사항을 오프셋.</target>
        </trans-unit>
        <trans-unit id="4463b2c5badc21c8ae944e6a5c21be66258ebc38" translate="yes" xml:space="preserve">
          <source>This field reflects the correct daylight saving offset value of the time zone of this &lt;code&gt;Calendar&lt;/code&gt; if the &lt;code&gt;TimeZone&lt;/code&gt; implementation subclass supports historical Daylight Saving Time schedule changes.</source>
          <target state="translated">이 필드는이 시간대의 오프셋 값 정확한 서머 반영 &lt;code&gt;Calendar&lt;/code&gt; 경우 &lt;code&gt;TimeZone&lt;/code&gt; 구현 서브 클래스 지원, 서머 타임의 스케줄의 역사적 변화를.</target>
        </trans-unit>
        <trans-unit id="bb8869100a96b51c0ace747d156fdb34373c73b4" translate="yes" xml:space="preserve">
          <source>This field should be &lt;code&gt;true&lt;/code&gt; if this node did not exist in the backing store prior to the creation of this object. The field is initialized to false, but may be set to true by a subclass constructor (and should not be modified thereafter). This field indicates whether a node change event should be fired when creation is complete.</source>
          <target state="translated">이 오브젝트를 작성하기 전에이 노드가 백업 저장소에 존재하지 않으면 이 필드는 &lt;code&gt;true&lt;/code&gt; 여야 합니다. 필드는 false로 초기화되지만 서브 클래스 생성자에 의해 true로 설정 될 수 있습니다 (그 이후에는 수정해서는 안 됨). 이 필드는 작성이 완료 될 때 노드 변경 이벤트를 발생시켜야하는지 여부를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="da5a7824c72d5d0ac8b72a562a8242b1d4914805" translate="yes" xml:space="preserve">
          <source>This file channel</source>
          <target state="translated">이 파일 채널</target>
        </trans-unit>
        <trans-unit id="0dec060895a4869c311469c5cf40170438fe90a1" translate="yes" xml:space="preserve">
          <source>This file contains the single line:</source>
          <target state="translated">이 파일에는 한 줄이 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="2c06bc72e2fe6fc2d9f6e5f898999a4455654e70" translate="yes" xml:space="preserve">
          <source>This file manager creates file objects representing regular &lt;a href=&quot;../../java/io/file&quot;&gt;files&lt;/a&gt;, &lt;a href=&quot;../../java/util/zip/zipentry&quot;&gt;zip file entries&lt;/a&gt;, or entries in similar file system based containers. Any file object returned from a file manager implementing this interface must observe the following behavior:</source>
          <target state="translated">이 파일 관리자는 일반 &lt;a href=&quot;../../java/io/file&quot;&gt;파일&lt;/a&gt; , &lt;a href=&quot;../../java/util/zip/zipentry&quot;&gt;zip 파일 항목&lt;/a&gt; 또는 유사한 파일 시스템 기반 컨테이너의 항목을 나타내는 파일 객체를 만듭니다 . 이 인터페이스를 구현하는 파일 관리자에서 리턴 된 모든 파일 오브젝트는 다음 동작을 준수해야합니다.</target>
        </trans-unit>
        <trans-unit id="7a24330d8dfc24893acef6882fa0c229a8833351" translate="yes" xml:space="preserve">
          <source>This file-locking API is intended to map directly to the native locking facility of the underlying operating system. Thus the locks held on a file should be visible to all programs that have access to the file, regardless of the language in which those programs are written.</source>
          <target state="translated">이 파일 잠금 API는 기본 운영 체제의 기본 잠금 기능에 직접 매핑하기위한 것입니다. 따라서 파일에 보유 된 잠금은 해당 프로그램이 작성된 언어에 관계없이 파일에 액세스 할 수있는 모든 프로그램에서 볼 수 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="de18aeeb56e8dc33f587514c04ec1787f04e4711" translate="yes" xml:space="preserve">
          <source>This filter compares the attribute name of the specified attribute change notification with each enabled attribute name. If the attribute name equals one of the enabled attribute names, the notification must be sent to the listener and this method returns &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">이 필터는 지정된 속성 변경 알림의 속성 이름을 사용 가능한 각 속성 이름과 비교합니다. 속성 이름이 사용 가능한 속성 이름 중 하나와 같으면 알림을 리스너에게 보내야하며이 메소드는 &lt;code&gt;true&lt;/code&gt; 를 리턴 합니다 .</target>
        </trans-unit>
        <trans-unit id="b9c492547353c4152d78f195a1ac9387d444b329" translate="yes" xml:space="preserve">
          <source>This filter compares the type of the specified notification with each enabled type. If the notification type matches one of the enabled types, the notification should be sent to the listener and this method returns &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">이 필터는 지정된 알림 유형을 사용 가능한 각 유형과 비교합니다. 알림 유형이 사용 가능한 유형 중 하나와 일치하면 알림을 리스너에게 보내야하며이 메소드는 &lt;code&gt;true&lt;/code&gt; 를 리턴 합니다 .</target>
        </trans-unit>
        <trans-unit id="939c66f1882c91d7b18fffcfbb4b7ef9be17e137" translate="yes" xml:space="preserve">
          <source>This flag corresponds to &lt;code&gt;'#'&lt;/code&gt; (&lt;code&gt;'\u0023'&lt;/code&gt;) in the format specifier.</source>
          <target state="translated">이 플래그 는 형식 지정자에서 &lt;code&gt;'#'&lt;/code&gt; ( &lt;code&gt;'\u0023'&lt;/code&gt; )에 해당합니다.</target>
        </trans-unit>
        <trans-unit id="639d639bc1d06224bd26b0c98169f7170259c749" translate="yes" xml:space="preserve">
          <source>This flag corresponds to &lt;code&gt;'-'&lt;/code&gt; (&lt;code&gt;'\u002d'&lt;/code&gt;) in the format specifier.</source>
          <target state="translated">이 플래그 는 형식 지정자의 &lt;code&gt;'-'&lt;/code&gt; ( &lt;code&gt;'\u002d'&lt;/code&gt; )에 해당합니다.</target>
        </trans-unit>
        <trans-unit id="f2f896b93435355c3dab017fa3a45ce5c075cdb3" translate="yes" xml:space="preserve">
          <source>This flag corresponds to &lt;code&gt;'S'&lt;/code&gt; (&lt;code&gt;'\u0053'&lt;/code&gt;) in the format specifier.</source>
          <target state="translated">이 플래그 는 형식 지정자에서 &lt;code&gt;'S'&lt;/code&gt; ( &lt;code&gt;'\u0053'&lt;/code&gt; )에 해당합니다.</target>
        </trans-unit>
        <trans-unit id="9436ee7c8ef7ac684c9a12e0444bde9757034138" translate="yes" xml:space="preserve">
          <source>This flag is used to reset the &lt;a href=&quot;monitor#alreadyNotifieds&quot;&gt;&lt;code&gt;alreadyNotifieds&lt;/code&gt;&lt;/a&gt; monitor attribute.</source>
          <target state="translated">이 플래그는 &lt;a href=&quot;monitor#alreadyNotifieds&quot;&gt; &lt;code&gt;alreadyNotifieds&lt;/code&gt; &lt;/a&gt; 모니터 속성 을 재설정하는 데 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="bb927ac7a2adf9141656556c75832459e15a420d" translate="yes" xml:space="preserve">
          <source>This form of &lt;code&gt;getHeaderField&lt;/code&gt; exists because some connection types (e.g., &lt;code&gt;http-ng&lt;/code&gt;) have pre-parsed headers. Classes for that connection type can override this method and short-circuit the parsing.</source>
          <target state="translated">이 연결 형식 의 &lt;code&gt;getHeaderField&lt;/code&gt; 는 일부 연결 유형 (예 : &lt;code&gt;http-ng&lt;/code&gt; )에 사전 구문 분석 된 헤더 가 있기 때문에 존재합니다 . 해당 연결 유형의 클래스는이 방법을 무시하고 구문 분석을 단락시킬 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c57c4034668f9f7e67c1a275f4dbe35d321a31c5" translate="yes" xml:space="preserve">
          <source>This format string is the first argument to the &lt;code&gt;format&lt;/code&gt; method. It contains three format specifiers &quot;&lt;code&gt;%1$tm&lt;/code&gt;&quot;, &quot;&lt;code&gt;%1$te&lt;/code&gt;&quot;, and &quot;&lt;code&gt;%1$tY&lt;/code&gt;&quot; which indicate how the arguments should be processed and where they should be inserted in the text. The remaining portions of the format string are fixed text including &lt;code&gt;&quot;Dukes Birthday: &quot;&lt;/code&gt; and any other spaces or punctuation. The argument list consists of all arguments passed to the method after the format string. In the above example, the argument list is of size one and consists of the &lt;a href=&quot;calendar&quot;&gt;&lt;code&gt;Calendar&lt;/code&gt;&lt;/a&gt; object &lt;code&gt;c&lt;/code&gt;.</source>
          <target state="translated">이 형식 문자열은 &lt;code&gt;format&lt;/code&gt; 메소드 의 첫 번째 인수 입니다. 여기에는 세 가지 형식 지정자 &quot; &lt;code&gt;%1$tm&lt;/code&gt; &quot;, &quot; &lt;code&gt;%1$te&lt;/code&gt; &quot;및 &quot; &lt;code&gt;%1$tY&lt;/code&gt; &quot;가 포함되어 있는데, 인수를 처리하는 방법과 텍스트의 삽입 위치를 나타냅니다. 형식 문자열의 나머지 부분은 &lt;code&gt;&quot;Dukes Birthday: &quot;&lt;/code&gt; 및 기타 공백이나 문장 부호를 포함한 고정 텍스트 입니다. 인수 목록은 형식 문자열 다음에 메소드에 전달 된 모든 인수로 구성됩니다. 위의 예제에서 인수 목록의 크기는 1이며 &lt;a href=&quot;calendar&quot;&gt; &lt;code&gt;Calendar&lt;/code&gt; &lt;/a&gt; 객체 &lt;code&gt;c&lt;/code&gt; 로 구성됩니다 .</target>
        </trans-unit>
        <trans-unit id="02cd6e3f81b6adc90a7b6b49bd25b66dc6d6042f" translate="yes" xml:space="preserve">
          <source>This formats the date-time to a String using the rules of the formatter.</source>
          <target state="translated">포맷터의 규칙을 사용하여 날짜-시간을 문자열로 형식화합니다.</target>
        </trans-unit>
        <trans-unit id="4c8dd66ef1b8712d1496d2f8b21f082de2c3b844" translate="yes" xml:space="preserve">
          <source>This formatter</source>
          <target state="translated">이 포매터</target>
        </trans-unit>
        <trans-unit id="0e1ade80f03d56fb0c562ee58ed1bfc634f0a4ef" translate="yes" xml:space="preserve">
          <source>This fragment is not technically part of the URL. Rather, it indicates that after the specified resource is retrieved, the application is specifically interested in that part of the document that has the tag &lt;code&gt;chapter1&lt;/code&gt; attached to it. The meaning of a tag is resource specific.</source>
          <target state="translated">이 조각은 기술적으로 URL의 일부가 아닙니다. 대신, 지정된 자원을 검색 한 후 응용 프로그램이 특히 &lt;code&gt;chapter1&lt;/code&gt; 태그가 첨부 된 문서의 해당 부분에 관심이 있음을 나타냅니다 . 태그의 의미는 리소스별로 다릅니다.</target>
        </trans-unit>
        <trans-unit id="3835819d552f1ccd551a425f0568a0e858200e24" translate="yes" xml:space="preserve">
          <source>This function allows the prefix to be specified and the proper resolution to occur. Specifically, when the standard resolution fails, the resolution is retried taking the prefix into consideration. There are two ways that resolution occurs, explicit resolution with the JNI function &lt;code&gt;RegisterNatives&lt;/code&gt; and the normal automatic resolution. For &lt;code&gt;RegisterNatives&lt;/code&gt;, the JVM will attempt this association:</source>
          <target state="translated">이 기능을 사용하면 접두사를 지정하고 적절한 해상도를 얻을 수 있습니다. 특히 표준 해상도가 실패하면 접두사를 고려하여 해상도를 다시 시도합니다. JNI 함수 &lt;code&gt;RegisterNatives&lt;/code&gt; 를 사용한 명시 적 해상도와 일반 자동 해상도의 두 가지 해결 방법이 있습니다 . 들어 &lt;code&gt;RegisterNatives&lt;/code&gt; 를 JVM은이 연결을 시도합니다 :</target>
        </trans-unit>
        <trans-unit id="0969a75285217d8f5727395078bd48e49354a4fa" translate="yes" xml:space="preserve">
          <source>This function facilitates the instrumentation of already loaded classes. When classes are initially loaded or when they are &lt;a href=&quot;instrumentation#redefineClasses-java.lang.instrument.ClassDefinition...-&quot;&gt;redefined&lt;/a&gt;, the initial class file bytes can be transformed with the &lt;a href=&quot;classfiletransformer&quot;&gt;&lt;code&gt;ClassFileTransformer&lt;/code&gt;&lt;/a&gt;. This function reruns the transformation process (whether or not a transformation has previously occurred). This retransformation follows these steps:</source>
          <target state="translated">이 함수는 이미로드 된 클래스의 계측을 용이하게합니다. 클래스가 처음로드되거나 &lt;a href=&quot;instrumentation#redefineClasses-java.lang.instrument.ClassDefinition...-&quot;&gt;재정의&lt;/a&gt; 될 때 초기 클래스 파일 바이트는 &lt;a href=&quot;classfiletransformer&quot;&gt; &lt;code&gt;ClassFileTransformer&lt;/code&gt; 를&lt;/a&gt; 사용하여 변환 될 수 있습니다 . 이 함수는 변환 프로세스를 다시 실행합니다 (이전에 변환이 발생했는지 여부). 이 재 변환은 다음 단계를 따릅니다.</target>
        </trans-unit>
        <trans-unit id="da4434880040821ea8e7fdba28347094ce7253de" translate="yes" xml:space="preserve">
          <source>This function returns the collation element that the iterator is currently pointing to and then updates the internal pointer to point to the next element. previous() updates the pointer first and then returns the element. This means that when you change direction while iterating (i.e., call next() and then call previous(), or call previous() and then call next()), you'll get back the same element twice.</source>
          <target state="translated">이 함수는 반복자가 현재 가리키고있는 데이터 정렬 요소를 반환 한 후 다음 요소를 가리 키도록 내부 포인터를 업데이트합니다. previous ()는 먼저 포인터를 업데이트 한 다음 요소를 반환합니다. 즉, 반복하는 동안 방향을 변경하면 (예 : next ()를 호출 한 다음 previous ()를 호출하거나 previous ()를 호출 한 후 next ()) 호출하면 동일한 요소가 두 번 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="d84e048f9e0345086f64039aa26f6626ba6486ac" translate="yes" xml:space="preserve">
          <source>This function updates the iterator's internal pointer to point to the collation element preceding the one it's currently pointing to and then returns that element, while next() returns the current element and then updates the pointer. This means that when you change direction while iterating (i.e., call next() and then call previous(), or call previous() and then call next()), you'll get back the same element twice.</source>
          <target state="translated">이 함수는 iterator의 내부 포인터를 업데이트하여 현재 가리키는 요소 앞에있는 데이터 정렬 요소를 가리키고 해당 요소를 반환하는 반면 next ()는 현재 요소를 반환 한 다음 포인터를 업데이트합니다. 즉, 반복하는 동안 방향을 변경하면 (예 : next ()를 호출 한 다음 previous ()를 호출하거나 previous ()를 호출 한 후 next ()) 호출하면 동일한 요소가 두 번 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="1b421251b7e8a22bab039f3bbe7f5fdfe294c52a" translate="yes" xml:space="preserve">
          <source>This gives behavior equivalent to most operating system command interpreters, or the standard C library function &lt;code&gt;system()&lt;/code&gt;.</source>
          <target state="translated">이것은 대부분의 운영 체제 명령 해석기 또는 표준 C 라이브러리 함수 &lt;code&gt;system()&lt;/code&gt; 과 동등한 동작을 제공합니다 .</target>
        </trans-unit>
        <trans-unit id="df3309ca4d82c68f15ffe723636341b8a21d6ce7" translate="yes" xml:space="preserve">
          <source>This gives code access to classes in packages to which it normally does not have access and the dynamic proxy class is in the system protection domain. Malicious code may use these classes to help in its attempt to compromise security in the system.</source>
          <target state="translated">이는 일반적으로 액세스 할 수없고 동적 프록시 클래스가 시스템 보호 도메인에있는 패키지의 클래스에 대한 코드 액세스를 제공합니다. 악성 코드는 이러한 클래스를 사용하여 시스템의 보안을 손상하려는 시도를 도울 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="36a4a7bebdfb9e7dde3a69b7b1b83b8bc5989192" translate="yes" xml:space="preserve">
          <source>This gives code access to classes in packages to which it normally does not have access. Malicious code may use these classes to help in its attempt to compromise security in the system.</source>
          <target state="translated">이는 일반적으로 액세스 할 수없는 패키지의 클래스에 대한 코드 액세스를 제공합니다. 악성 코드는 이러한 클래스를 사용하여 시스템의 보안을 손상하려는 시도를 도울 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f903ac786d84be7c118d277a305980c729ef6082" translate="yes" xml:space="preserve">
          <source>This gives code access to protected, sensitive methods that may disclose information about other classes or the execution stack.</source>
          <target state="translated">이를 통해 다른 클래스 나 실행 스택에 대한 정보를 공개 할 수있는 보호되고 민감한 메소드에 코드 액세스 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c7201e4e18e9d82f87d1d4c5b0806ace02068b76" translate="yes" xml:space="preserve">
          <source>This global lock is used by both &lt;code&gt;BeanContext&lt;/code&gt; and &lt;code&gt;BeanContextServices&lt;/code&gt; implementors to serialize changes in a &lt;code&gt;BeanContext&lt;/code&gt; hierarchy and any service requests etc.</source>
          <target state="translated">이 전역 잠금은 &lt;code&gt;BeanContext&lt;/code&gt; 및 &lt;code&gt;BeanContextServices&lt;/code&gt; 구현자가 &lt;code&gt;BeanContext&lt;/code&gt; 계층 구조 및 서비스 요청 등의 변경 사항을 직렬화 하는 데 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="fc083caeaa7087c63bc612177fa2c826850e8618" translate="yes" xml:space="preserve">
          <source>This grants code permission to define a class in a particular package. This is dangerous because malicious code with this permission may define rogue classes in trusted packages like &lt;code&gt;java.security&lt;/code&gt; or &lt;code&gt;java.lang&lt;/code&gt;, for example.</source>
          <target state="translated">이렇게하면 특정 패키지에서 클래스를 정의 할 수있는 코드 권한이 부여됩니다. 이 권한이있는 악성 코드 는 예를 들어 &lt;code&gt;java.security&lt;/code&gt; 또는 &lt;code&gt;java.lang&lt;/code&gt; 과 같은 신뢰할 수있는 패키지에서 불량 클래스를 정의 할 수 있으므로 위험 합니다.</target>
        </trans-unit>
        <trans-unit id="331c65a3cf6e23f65b3a3cf205997e21c51762c0" translate="yes" xml:space="preserve">
          <source>This grants code permission to query a class for its public, protected, default (package) access, and private fields and/or methods. Although the code would have access to the private and protected field and method names, it would not have access to the private/protected field data and would not be able to invoke any private methods. Nevertheless, malicious code may use this information to better aim an attack. Additionally, it may invoke any public methods and/or access public fields in the class. This could be dangerous if the code would normally not be able to invoke those methods and/or access the fields because it can't cast the object to the class/interface with those methods and fields.</source>
          <target state="translated">이를 통해 클래스의 공개, 보호, 기본 (패키지) 액세스 및 개인 필드 및 / 또는 메소드에 대해 클래스를 쿼리 할 수있는 권한을 코드에 부여합니다. 코드는 개인 및 보호 필드 및 메소드 이름에 액세스 할 수 있지만 개인 / 보호 필드 데이터에 액세스 할 수 없으며 개인 메소드를 호출 할 수 없습니다. 그럼에도 불구하고 악성 코드는이 정보를 사용하여 공격을보다 효과적으로 조준 할 수 있습니다. 또한 모든 공개 메소드를 호출하거나 클래스의 공개 필드에 액세스 할 수 있습니다. 코드가 일반적으로 해당 메소드 및 필드를 사용하여 클래스 / 인터페이스로 오브젝트를 캐스트 할 수 없으므로 해당 메소드를 호출하거나 필드에 액세스 할 수없는 경우 위험 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="928065b5350bb6dc0ff7a89abd23a3a1365156f4" translate="yes" xml:space="preserve">
          <source>This helper class provides a utility implementation of the java.beans.beancontext.BeanContext interface.</source>
          <target state="translated">이 헬퍼 클래스는 java.beans.beancontext.BeanContext 인터페이스의 유틸리티 구현을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="a3968715bb1c83e42ddc1134b4b0052bdc0ae996" translate="yes" xml:space="preserve">
          <source>This helper class provides a utility implementation of the java.beans.beancontext.BeanContextServices interface.</source>
          <target state="translated">이 헬퍼 클래스는 java.beans.beancontext.BeanContextServices 인터페이스의 유틸리티 구현을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="122efe634c67682e5a922bde9527a99da845e034" translate="yes" xml:space="preserve">
          <source>This idiom obviates the need for using a string to describe the preferences node and decreases the likelihood of a run-time failure. (If the class name is misspelled, it will typically result in a compile-time error.)</source>
          <target state="translated">이 관용구는 환경 설정 노드를 설명하기 위해 문자열을 사용할 필요가 없으며 런타임 실패 가능성을 줄입니다. 클래스 이름의 철자가 틀리면 일반적으로 컴파일 타임 오류가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="629c63ad23cd7fd948e6f93d8955c9d3fe585f63" translate="yes" xml:space="preserve">
          <source>This immutable class defines an elliptic curve (EC) characteristic 2 finite field.</source>
          <target state="translated">이 불변 클래스는 타원 곡선 (EC) 특성 2 유한 필드를 정의합니다.</target>
        </trans-unit>
        <trans-unit id="a84b69ebdf731e277af9e21024a839b79991ebcb" translate="yes" xml:space="preserve">
          <source>This immutable class defines an elliptic curve (EC) prime finite field.</source>
          <target state="translated">이 불변 클래스는 타원 곡선 (EC)의 유한 유한 필드를 정의합니다.</target>
        </trans-unit>
        <trans-unit id="dabbc4728f069cb22945088bdcb550a300ec334c" translate="yes" xml:space="preserve">
          <source>This immutable class holds the necessary values needed to represent an elliptic curve.</source>
          <target state="translated">이 불변 클래스는 타원 곡선을 나타내는 데 필요한 값을 보유합니다.</target>
        </trans-unit>
        <trans-unit id="a8ed157513f78e33730e48fdffba6efaff2b46f0" translate="yes" xml:space="preserve">
          <source>This immutable class represents a point on an elliptic curve (EC) in affine coordinates.</source>
          <target state="translated">이 불변 클래스는 타원 곡선 (EC)의 점을 아핀 좌표로 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="954ed1a60a524b56d515295be01fbdc30f6b92d8" translate="yes" xml:space="preserve">
          <source>This immutable class represents a point on an elliptic curve (EC) in affine coordinates. Other coordinate systems can extend this class to represent this point in other coordinates.</source>
          <target state="translated">이 불변 클래스는 타원 곡선 (EC)의 점을 아핀 좌표로 나타냅니다. 다른 좌표계는이 점을 다른 좌표로이 점을 나타내도록 확장 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e5ac83265d8e36d907ddf59daf9dc247f69735de" translate="yes" xml:space="preserve">
          <source>This immutable class specifies an elliptic curve private key with its associated parameters.</source>
          <target state="translated">이 불변 클래스는 타원 곡선의 비공개 키에 관련 파라미터를 지정합니다.</target>
        </trans-unit>
        <trans-unit id="9e10d0594330cf2c2a92031524bef6179d93b693" translate="yes" xml:space="preserve">
          <source>This immutable class specifies an elliptic curve public key with its associated parameters.</source>
          <target state="translated">이 불변 클래스는 타원 곡선 공개 키와 관련 파라미터를 지정합니다.</target>
        </trans-unit>
        <trans-unit id="dd9c7e2fb85b12499f163dd6f852b2f30dcbdaa5" translate="yes" xml:space="preserve">
          <source>This immutable class specifies the set of domain parameters used with elliptic curve cryptography (ECC).</source>
          <target state="translated">이 불변 클래스는 ECC (Elliptic Curve Cryptography)와 함께 사용되는 도메인 매개 변수 세트를 지정합니다.</target>
        </trans-unit>
        <trans-unit id="27b6daa87ac4985c97bfa08f19e776d06fbd48c2" translate="yes" xml:space="preserve">
          <source>This immutable class specifies the set of parameters used for generating DSA parameters as specified in &lt;a href=&quot;http://csrc.nist.gov/publications/fips/fips186-3/fips_186-3.pdf&quot;&gt;FIPS 186-3 Digital Signature Standard (DSS)&lt;/a&gt;.</source>
          <target state="translated">이 변경 불가능한 클래스는 &lt;a href=&quot;http://csrc.nist.gov/publications/fips/fips186-3/fips_186-3.pdf&quot;&gt;FIPS 186-3 DSS (Digital Signature Standard)에&lt;/a&gt; 지정된대로 DSA 매개 변수를 생성하는 데 사용되는 매개 변수 세트를 지정합니다 .</target>
        </trans-unit>
        <trans-unit id="f9995aea6faaeed6e54c376ef502fc1c66198d5d" translate="yes" xml:space="preserve">
          <source>This immutable class specifies the set of parameters used for generating elliptic curve (EC) domain parameters.</source>
          <target state="translated">이 불변 클래스는 타원 곡선 (EC) 도메인 매개 변수를 생성하는 데 사용되는 매개 변수 세트를 지정합니다.</target>
        </trans-unit>
        <trans-unit id="e126ddd21dd42d52e62fe02ebc7ded0cb46f7bef" translate="yes" xml:space="preserve">
          <source>This implementation always throws &lt;a href=&quot;../../java/lang/unsupportedoperationexception&quot;&gt;UnsupportedOperationException&lt;/a&gt;. Subclasses can change this behavior as long as the contract of &lt;a href=&quot;fileobject&quot;&gt;&lt;code&gt;FileObject&lt;/code&gt;&lt;/a&gt; is obeyed.</source>
          <target state="translated">이 구현은 항상 &lt;a href=&quot;../../java/lang/unsupportedoperationexception&quot;&gt;UnsupportedOperationException을 발생&lt;/a&gt; 시킵니다. &lt;a href=&quot;fileobject&quot;&gt; &lt;code&gt;FileObject&lt;/code&gt; &lt;/a&gt; 의 계약을 준수 하는 한 서브 클래스는이 동작을 변경할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="25b71dc95c94433a4e683b0cb0bc80e61af1d098" translate="yes" xml:space="preserve">
          <source>This implementation always throws an &lt;code&gt;UnsupportedOperationException&lt;/code&gt;.</source>
          <target state="translated">이 구현은 항상 &lt;code&gt;UnsupportedOperationException&lt;/code&gt; 을 발생 시킵니다.</target>
        </trans-unit>
        <trans-unit id="5ed82d5c8cf8bf7d06b7f3a3926143fc19e896f4" translate="yes" xml:space="preserve">
          <source>This implementation assumes that the ConcurrentMap cannot contain null values and &lt;code&gt;get()&lt;/code&gt; returning null unambiguously means the key is absent. Implementations which support null values &lt;strong&gt;must&lt;/strong&gt; override this default implementation.</source>
          <target state="translated">이 구현에서는 ConcurrentMap에 null 값을 포함 할 수 없으며 &lt;code&gt;get()&lt;/code&gt; null을 명확하게 반환하면 키가 없음을 의미합니다. 널값을 지원하는 구현 은이 기본 구현을 대체 &lt;strong&gt;해야합니다&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="cb5167bb49ebe77db454032a85cc61f64b311d33" translate="yes" xml:space="preserve">
          <source>This implementation calls &lt;code&gt;add(size(), e)&lt;/code&gt;.</source>
          <target state="translated">이 구현은 &lt;code&gt;add(size(), e)&lt;/code&gt; 호출 합니다 .</target>
        </trans-unit>
        <trans-unit id="94b159692d013c2b59ae93604d93d607b0cd6225" translate="yes" xml:space="preserve">
          <source>This implementation calls &lt;code&gt;check(cert, java.util.Collections.&amp;lt;String&amp;gt;emptySet())&lt;/code&gt;.</source>
          <target state="translated">이 구현은 &lt;code&gt;check(cert, java.util.Collections.&amp;lt;String&amp;gt;emptySet())&lt;/code&gt; 호출합니다 .</target>
        </trans-unit>
        <trans-unit id="c05815dc8f7306515f69c1adc7ce0cc25bbf5c3c" translate="yes" xml:space="preserve">
          <source>This implementation calls &lt;code&gt;defaultAction&lt;/code&gt;.</source>
          <target state="translated">이 구현은 &lt;code&gt;defaultAction&lt;/code&gt; 을 호출 합니다 .</target>
        </trans-unit>
        <trans-unit id="41d9407fbd311719e99aa08295ae0c0a3a96c926" translate="yes" xml:space="preserve">
          <source>This implementation calls &lt;code&gt;entrySet().clear()&lt;/code&gt;.</source>
          <target state="translated">이 구현은 &lt;code&gt;entrySet().clear()&lt;/code&gt; 호출합니다 .</target>
        </trans-unit>
        <trans-unit id="906c43a7494e059f45ccf3510b569a8b2860e626" translate="yes" xml:space="preserve">
          <source>This implementation calls &lt;code&gt;removeRange(0, size())&lt;/code&gt;.</source>
          <target state="translated">이 구현은 &lt;code&gt;removeRange(0, size())&lt;/code&gt; 호출합니다 .</target>
        </trans-unit>
        <trans-unit id="7bd0e3b7dff72e96b830c7e11dc18a9c58f8fd88" translate="yes" xml:space="preserve">
          <source>This implementation calls a recursive helper method that locks this node, invokes flushSpi() on it, unlocks this node, and recursively invokes this method on each &quot;cached child.&quot; A cached child is a child of this node that has been created in this VM and not subsequently removed. In effect, this method does a depth first traversal of the &quot;cached subtree&quot; rooted at this node, calling flushSpi() on each node in the subTree while only that node is locked. Note that flushSpi() is invoked top-down.</source>
          <target state="translated">이 구현은이 노드를 잠그고 flushSpi ()를 호출하고이 노드를 잠금 해제하며 각 &quot;캐시 된 자식&quot;에서이 메소드를 재귀 적으로 호출하는 재귀 도우미 메소드를 호출합니다. 캐시 된 자식은이 VM에서 만들어지고 이후에 제거되지 않는이 노드의 자식입니다. 실제로,이 메소드는이 노드에서 루트로 지정된 &quot;캐시 된 서브 트리&quot;의 깊이 우선 순회를 수행하여 해당 노드 만 잠겨있는 동안 subTree의 각 노드에서 flushSpi ()를 호출합니다. flushSpi ()는 하향식으로 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="395ed27cbaba77f3b446647b87a2274cc8702b44" translate="yes" xml:space="preserve">
          <source>This implementation calls a recursive helper method that locks this node, invokes syncSpi() on it, unlocks this node, and recursively invokes this method on each &quot;cached child.&quot; A cached child is a child of this node that has been created in this VM and not subsequently removed. In effect, this method does a depth first traversal of the &quot;cached subtree&quot; rooted at this node, calling syncSpi() on each node in the subTree while only that node is locked. Note that syncSpi() is invoked top-down.</source>
          <target state="translated">이 구현은이 노드를 잠그고 syncSpi ()를 호출하고이 노드를 잠금 해제하며 각 &quot;캐시 된 하위&quot;에서이 메소드를 재귀 적으로 호출하는 재귀 도우미 메소드를 호출합니다. 캐시 된 자식은이 VM에서 만들어지고 이후에 제거되지 않는이 노드의 자식입니다. 실제로,이 메소드는이 노드에서 루트로 지정된 &quot;캐시 된 서브 트리&quot;의 깊이 우선 순회를 수행하여 해당 노드 만 잠겨있는 동안 subTree의 각 노드에서 syncSpi ()를 호출합니다. syncSpi ()는 하향식으로 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="1447f53bc4d6cc8572c1a5b72f050425e9a816cc" translate="yes" xml:space="preserve">
          <source>This implementation can be made to throw runtime exceptions in the face of concurrent modification, as described in the specification for the (protected) &lt;a href=&quot;abstractlist#modCount&quot;&gt;&lt;code&gt;modCount&lt;/code&gt;&lt;/a&gt; field.</source>
          <target state="translated">이 구현은 (보호 된) &lt;a href=&quot;abstractlist#modCount&quot;&gt; &lt;code&gt;modCount&lt;/code&gt; &lt;/a&gt; 필드 의 스펙에 설명 된대로 동시 수정시 런타임 예외를 발생 시키도록 만들 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="7195ba4a4883e406437052bca287773f64cc1ce7" translate="yes" xml:space="preserve">
          <source>This implementation checks that the key and value are legal, obtains this preference node's lock, checks that the node has not been removed, invokes &lt;a href=&quot;abstractpreferences#putSpi-java.lang.String-java.lang.String-&quot;&gt;&lt;code&gt;putSpi(String,String)&lt;/code&gt;&lt;/a&gt;, and if there are any preference change listeners, enqueues a notification event for processing by the event dispatch thread.</source>
          <target state="translated">이 구현은 키와 값이 유효 &lt;a href=&quot;abstractpreferences#putSpi-java.lang.String-java.lang.String-&quot;&gt; &lt;code&gt;putSpi(String,String)&lt;/code&gt; &lt;/a&gt; 확인하고,이 환경 설정 노드의 잠금을 획득하고, 노드가 제거되지 않았는지 점검하고, putSpi (String, String)을 호출 하고, 환경 설정 변경 리스너가있는 경우, 처리 할 알림 이벤트를 큐에 넣 습니다. 이벤트 디스패치 스레드</target>
        </trans-unit>
        <trans-unit id="eed8c69aa0ccf4f8526685d4df2e7dc1b5306845" translate="yes" xml:space="preserve">
          <source>This implementation checks the type and calls &lt;a href=&quot;abstractchronology#compareTo-java.time.chrono.Chronology-&quot;&gt;&lt;code&gt;compareTo(java.time.chrono.Chronology)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 구현은 유형을 확인하고 &lt;a href=&quot;abstractchronology#compareTo-java.time.chrono.Chronology-&quot;&gt; &lt;code&gt;compareTo(java.time.chrono.Chronology)&lt;/code&gt; &lt;/a&gt; 호출합니다 .</target>
        </trans-unit>
        <trans-unit id="602eb434bf3fb990f0357c26df38af1fd1ba2aeb" translate="yes" xml:space="preserve">
          <source>This implementation checks to see that this node is the root; if so, it throws an appropriate exception. Then, it locks this node's parent, and calls a recursive helper method that traverses the subtree rooted at this node. The recursive method locks the node on which it was called, checks that it has not already been removed, and then ensures that all of its children are cached: The &lt;a href=&quot;abstractpreferences#childrenNamesSpi--&quot;&gt;&lt;code&gt;childrenNamesSpi()&lt;/code&gt;&lt;/a&gt; method is invoked and each returned child name is checked for containment in the child-cache. If a child is not already cached, the &lt;a href=&quot;abstractpreferences#childSpi-java.lang.String-&quot;&gt;&lt;code&gt;childSpi(String)&lt;/code&gt;&lt;/a&gt; method is invoked to create a &lt;code&gt;Preferences&lt;/code&gt; instance for it, and this instance is put into the child-cache. Then the helper method calls itself recursively on each node contained in its child-cache. Next, it invokes &lt;a href=&quot;abstractpreferences#removeNodeSpi--&quot;&gt;&lt;code&gt;removeNodeSpi()&lt;/code&gt;&lt;/a&gt;, marks itself as removed, and removes itself from its parent's child-cache. Finally, if there are any node change listeners, it enqueues a notification event for processing by the event dispatch thread.</source>
          <target state="translated">이 구현은이 노드가 루트인지 확인합니다. 그렇다면 적절한 예외가 발생합니다. 그런 다음이 노드의 부모를 잠그고이 노드를 기반으로하는 하위 트리를 순회하는 재귀 도우미 메서드를 호출합니다. 재귀 적 메서드는 호출 된 노드를 잠그고 아직 제거되지 않았는지 확인한 다음 모든 자식이 캐시되었는지 확인합니다. &lt;a href=&quot;abstractpreferences#childrenNamesSpi--&quot;&gt; &lt;code&gt;childrenNamesSpi()&lt;/code&gt; &lt;/a&gt; 메서드가 호출되고 반환 된 자식 이름 각각에 포함되어 있는지 확인합니다. 자식 캐시. 자식이 아직 캐시되지 않은 경우 &lt;a href=&quot;abstractpreferences#childSpi-java.lang.String-&quot;&gt; &lt;code&gt;childSpi(String)&lt;/code&gt; &lt;/a&gt; 메서드가 호출되어 &lt;code&gt;Preferences&lt;/code&gt; 인스턴스를 만들고이 인스턴스는 자식 캐시에 저장됩니다. 그런 다음 도우미 메서드는 자식 캐시에 포함 된 각 노드에서 재귀 적으로 호출됩니다. 다음으로&lt;a href=&quot;abstractpreferences#removeNodeSpi--&quot;&gt; &lt;code&gt;removeNodeSpi()&lt;/code&gt; &lt;/a&gt; 는 자신을 제거 된 것으로 표시하고 부모의 자식 캐시에서 자신을 제거합니다. 마지막으로, 노드 변경 리스너가있는 경우 이벤트 디스패치 스레드에서 처리 할 알림 이벤트를 큐에 넣습니다.</target>
        </trans-unit>
        <trans-unit id="ffa89cfc012f2be93ce593f40e6c0d43fd79bfa0" translate="yes" xml:space="preserve">
          <source>This implementation compares the chronology ID. Subclasses must compare any additional state that they store.</source>
          <target state="translated">이 구현은 연대기 ID를 비교합니다. 서브 클래스는 그들이 저장 한 추가 상태를 비교해야합니다.</target>
        </trans-unit>
        <trans-unit id="2dff2901ffa7a3cc0600d247fee41c0159f4d1bf" translate="yes" xml:space="preserve">
          <source>This implementation compares the path of its URI to the given simple name. This method returns true if the given kind is equal to the kind of this object, and if the path is equal to &lt;code&gt;simpleName + kind.extension&lt;/code&gt; or if it ends with &lt;code&gt;&quot;/&quot; + simpleName + kind.extension&lt;/code&gt;.</source>
          <target state="translated">이 구현은 URI의 경로를 주어진 단순 이름과 비교합니다. 주어진 종류가이 객체의 종류와 같고 경로가 &lt;code&gt;simpleName + kind.extension&lt;/code&gt; 과 같 거나 &lt;code&gt;&quot;/&quot; + simpleName + kind.extension&lt;/code&gt; 끝나는 경우이 메서드는 true를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="3d9c4ed88638eb0d9d5435ccbd0a84c7e81cad38" translate="yes" xml:space="preserve">
          <source>This implementation compares this node's root node (which is stored in a private field) with the value returned by &lt;a href=&quot;preferences#userRoot--&quot;&gt;&lt;code&gt;Preferences.userRoot()&lt;/code&gt;&lt;/a&gt;. If the two object references are identical, this method returns true.</source>
          <target state="translated">이 구현은이 노드의 루트 노드 (비공개 필드에 저장 됨)를 &lt;a href=&quot;preferences#userRoot--&quot;&gt; &lt;code&gt;Preferences.userRoot()&lt;/code&gt; &lt;/a&gt; 반환 한 값과 비교합니다 . 두 객체 참조가 동일하면이 메서드는 true를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="ebb6c0d9348bd6053d6cb41ee3c542ce1d1a9132" translate="yes" xml:space="preserve">
          <source>This implementation defers to the &lt;a href=&quot;list#sort-java.util.Comparator-&quot;&gt;&lt;code&gt;List.sort(Comparator)&lt;/code&gt;&lt;/a&gt; method using the specified list and a &lt;code&gt;null&lt;/code&gt; comparator.</source>
          <target state="translated">이 구현 은 지정된리스트와 &lt;code&gt;null&lt;/code&gt; 비교 자를 사용해 &lt;a href=&quot;list#sort-java.util.Comparator-&quot;&gt; &lt;code&gt;List.sort(Comparator)&lt;/code&gt; &lt;/a&gt; 메소드를 연기합니다 .</target>
        </trans-unit>
        <trans-unit id="e9ff666de14e4b1a619eab4943f8cdd25f78b5de" translate="yes" xml:space="preserve">
          <source>This implementation defers to the &lt;a href=&quot;list#sort-java.util.Comparator-&quot;&gt;&lt;code&gt;List.sort(Comparator)&lt;/code&gt;&lt;/a&gt; method using the specified list and comparator.</source>
          <target state="translated">이 구현 은 지정된리스트와 비교 자를 사용해 &lt;a href=&quot;list#sort-java.util.Comparator-&quot;&gt; &lt;code&gt;List.sort(Comparator)&lt;/code&gt; &lt;/a&gt; 메소드를 연기합니다 .</target>
        </trans-unit>
        <trans-unit id="205001bb53a899373d25ef5424e68cf61f5e15cf" translate="yes" xml:space="preserve">
          <source>This implementation determines which is the smaller of this set and the specified collection, by invoking the &lt;code&gt;size&lt;/code&gt; method on each. If this set has fewer elements, then the implementation iterates over this set, checking each element returned by the iterator in turn to see if it is contained in the specified collection. If it is so contained, it is removed from this set with the iterator's &lt;code&gt;remove&lt;/code&gt; method. If the specified collection has fewer elements, then the implementation iterates over the specified collection, removing from this set each element returned by the iterator, using this set's &lt;code&gt;remove&lt;/code&gt; method.</source>
          <target state="translated">이 구현은 각각에 대해 &lt;code&gt;size&lt;/code&gt; 메소드를 호출하여이 세트와 지정된 콜렉션 중 작은 것을 판별 합니다. 이 세트에 요소가 적은 경우, 구현은이 세트에 대해 반복되어, 반복자에 의해 돌려 주어진 각 요소가 차례로 지정된 컬렉션에 포함되어 있는지를 확인합니다. 포함 된 경우 반복자의 &lt;code&gt;remove&lt;/code&gt; 메소드 를 사용하여이 세트에서 제거 됩니다. 지정된 컬렉션에 요소가 적은 경우, 구현은 지정된 컬렉션을 반복하고,이 세트의 &lt;code&gt;remove&lt;/code&gt; 메소드를 사용해, 반복자에 의해 돌려 주어진 각 요소를이 세트로부터 삭제 합니다.</target>
        </trans-unit>
        <trans-unit id="eeb61408257a619dca9b14cfa63c43bf134acb12" translate="yes" xml:space="preserve">
          <source>This implementation does not check for overflow of the sum.</source>
          <target state="translated">이 구현은 합계의 오버플로를 확인하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="c9fd6e5043bb41f7cb9997c70fcde25ad07f5357" translate="yes" xml:space="preserve">
          <source>This implementation does not support interoperating with a directory or lookup service. Thus, conforming to the specification, no checking is done on the</source>
          <target state="translated">이 구현은 디렉토리 또는 조회 서비스와의 상호 운용을 지원하지 않습니다. 따라서 사양을 준수하면 검사가 수행되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="40026795e46b0f627067283f014c1ac8f2ac2aaa" translate="yes" xml:space="preserve">
          <source>This implementation does not support the schema methods &lt;code&gt;getAttributeDefinition()&lt;/code&gt; and &lt;code&gt;getAttributeSyntaxDefinition()&lt;/code&gt;. They simply throw &lt;code&gt;OperationNotSupportedException&lt;/code&gt;. Subclasses of &lt;code&gt;BasicAttribute&lt;/code&gt; should override these methods if they support them.</source>
          <target state="translated">이 구현은 스키마 메소드 &lt;code&gt;getAttributeDefinition()&lt;/code&gt; 및 &lt;code&gt;getAttributeSyntaxDefinition()&lt;/code&gt; 지원하지 않습니다 . 단순히 &lt;code&gt;OperationNotSupportedException&lt;/code&gt; 을 던집니다 . &lt;code&gt;BasicAttribute&lt;/code&gt; 의 서브 클래스가 이러한 메소드를 지원하는 경우이 메소드를 대체해야합니다.</target>
        </trans-unit>
        <trans-unit id="74f5b9930f8d39a44fb6d2c696a3206ca225015d" translate="yes" xml:space="preserve">
          <source>This implementation does nothing, but may be customized in subclasses. Note: To properly nest multiple overridings, subclasses should generally invoke &lt;code&gt;super.afterExecute&lt;/code&gt; at the beginning of this method.</source>
          <target state="translated">이 구현은 아무것도하지 않지만 서브 클래스에서 사용자 정의 될 수 있습니다. 주 : 복수의 오버라이드 (override)를 올바르게 중첩하려면 (자), 서브 클래스는 일반적 으로이 메소드의 &lt;code&gt;super.afterExecute&lt;/code&gt; 에 super.afterExecute 를 호출 할 필요 가 있습니다.</target>
        </trans-unit>
        <trans-unit id="5a5be3002e9afcc485a4a0ec495a2006fe1daa59" translate="yes" xml:space="preserve">
          <source>This implementation does nothing, but may be customized in subclasses. Note: To properly nest multiple overridings, subclasses should generally invoke &lt;code&gt;super.beforeExecute&lt;/code&gt; at the end of this method.</source>
          <target state="translated">이 구현은 아무것도하지 않지만 서브 클래스에서 사용자 정의 될 수 있습니다. 주 : 복수의 오버라이드 (override)를 올바르게 중첩하려면 (자), 서브 클래스는 일반적 으로이 메소드의 말미에 &lt;code&gt;super.beforeExecute&lt;/code&gt; 를 호출 할 필요 가 있습니다.</target>
        </trans-unit>
        <trans-unit id="914ee27b660f82c8263237e486e758dc81078d60" translate="yes" xml:space="preserve">
          <source>This implementation does nothing. Subclasses can change this behavior as long as the contract of &lt;a href=&quot;fileobject&quot;&gt;&lt;code&gt;FileObject&lt;/code&gt;&lt;/a&gt; is obeyed.</source>
          <target state="translated">이 구현은 아무것도하지 않습니다. &lt;a href=&quot;fileobject&quot;&gt; &lt;code&gt;FileObject&lt;/code&gt; &lt;/a&gt; 의 계약을 준수 하는 한 서브 클래스는이 동작을 변경할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="7974b71b41c6092860c4d0735a7af85054b636e7" translate="yes" xml:space="preserve">
          <source>This implementation employs an efficient &lt;em&gt;non-blocking&lt;/em&gt; algorithm based on one described in &lt;a href=&quot;http://www.cs.rochester.edu/u/michael/PODC96.html&quot;&gt; Simple, Fast, and Practical Non-Blocking and Blocking Concurrent Queue Algorithms&lt;/a&gt; by Maged M. Michael and Michael L. Scott.</source>
          <target state="translated">이 구현은 Maged M. Michael과 Michael L. Scott의 &lt;a href=&quot;http://www.cs.rochester.edu/u/michael/PODC96.html&quot;&gt;Simple, Fast 및 Practical Non-Blocking and Blocking Concurrent Queue 알고리즘&lt;/a&gt; 에 설명 된 알고리즘을 기반으로 하는 효율적인 &lt;em&gt;비 차단&lt;/em&gt; 알고리즘을 사용합니다 .</target>
        </trans-unit>
        <trans-unit id="7a80f8f2b593867f4acb9f2038a87549d837d178" translate="yes" xml:space="preserve">
          <source>This implementation enforces a more restrictive OID syntax than defined in RFC 1779 and 2253. It uses the more correct syntax defined in &lt;a href=&quot;http://www.ietf.org/rfc/rfc4512.txt&quot;&gt;RFC 4512&lt;/a&gt;, which specifies that OIDs contain at least 2 digits:</source>
          <target state="translated">이 구현은 RFC 1779 및 2253에 정의 된 것보다 더 제한적인 OID 구문을 시행합니다. &lt;a href=&quot;http://www.ietf.org/rfc/rfc4512.txt&quot;&gt;RFC 4512에&lt;/a&gt; 정의 된보다 정확한 구문을 사용합니다.이 구문 은 OID에 2 자리 이상이 포함되도록 지정합니다.</target>
        </trans-unit>
        <trans-unit id="77969f6eaf794b1740a68878035f3a34622d3563" translate="yes" xml:space="preserve">
          <source>This implementation extracts the number's value using &lt;a href=&quot;../lang/number#longValue--&quot;&gt;&lt;code&gt;Number.longValue()&lt;/code&gt;&lt;/a&gt; for all integral type values that can be converted to &lt;code&gt;long&lt;/code&gt; without loss of information, including &lt;code&gt;BigInteger&lt;/code&gt; values with a &lt;a href=&quot;../math/biginteger#bitLength--&quot;&gt;&lt;code&gt;bit length&lt;/code&gt;&lt;/a&gt; of less than 64, and &lt;a href=&quot;../lang/number#doubleValue--&quot;&gt;&lt;code&gt;Number.doubleValue()&lt;/code&gt;&lt;/a&gt; for all other types. It then calls &lt;a href=&quot;numberformat#format-long-java.lang.StringBuffer-java.text.FieldPosition-&quot;&gt;&lt;code&gt;format(long,java.lang.StringBuffer,java.text.FieldPosition)&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;numberformat#format-double-java.lang.StringBuffer-java.text.FieldPosition-&quot;&gt;&lt;code&gt;format(double,java.lang.StringBuffer,java.text.FieldPosition)&lt;/code&gt;&lt;/a&gt;. This may result in loss of magnitude information and precision for &lt;code&gt;BigInteger&lt;/code&gt; and &lt;code&gt;BigDecimal&lt;/code&gt; values.</source>
          <target state="translated">이 구현 은 &lt;a href=&quot;../math/biginteger#bitLength--&quot;&gt; &lt;code&gt;bit length&lt;/code&gt; &lt;/a&gt; 가 64보다 작은 &lt;code&gt;BigInteger&lt;/code&gt; 값 및 다른 모든 유형의 &lt;a href=&quot;../lang/number#doubleValue--&quot;&gt; &lt;code&gt;Number.doubleValue()&lt;/code&gt; &lt;/a&gt; 를 포함하여 정보 손실없이 &lt;code&gt;long&lt;/code&gt; 으로 변환 할 수있는 모든 정수 유형 값에 대해 &lt;a href=&quot;../lang/number#longValue--&quot;&gt; &lt;code&gt;Number.longValue()&lt;/code&gt; &lt;/a&gt; 를 사용하여 숫자 값을 추출합니다. . 그런 다음 &lt;a href=&quot;numberformat#format-long-java.lang.StringBuffer-java.text.FieldPosition-&quot;&gt; &lt;code&gt;format(long,java.lang.StringBuffer,java.text.FieldPosition)&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;numberformat#format-double-java.lang.StringBuffer-java.text.FieldPosition-&quot;&gt; &lt;code&gt;format(double,java.lang.StringBuffer,java.text.FieldPosition)&lt;/code&gt; &lt;/a&gt; 을 호출 합니다 . 이로 인해 &lt;code&gt;BigInteger&lt;/code&gt; 및 &lt;code&gt;BigDecimal&lt;/code&gt; 값 의 크기 정보 및 정밀도가 손실 될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="06a487a72bad774e9ba467624c797a1c7b0f89e1" translate="yes" xml:space="preserve">
          <source>This implementation first checks if the specified object is this list. If so, it returns &lt;code&gt;true&lt;/code&gt;; if not, it checks if the specified object is a list. If not, it returns &lt;code&gt;false&lt;/code&gt;; if so, it iterates over both lists, comparing corresponding pairs of elements. If any comparison returns &lt;code&gt;false&lt;/code&gt;, this method returns &lt;code&gt;false&lt;/code&gt;. If either iterator runs out of elements before the other it returns &lt;code&gt;false&lt;/code&gt; (as the lists are of unequal length); otherwise it returns &lt;code&gt;true&lt;/code&gt; when the iterations complete.</source>
          <target state="translated">이 구현은 먼저 지정된 객체가이 목록인지 확인합니다. 그렇다면 &lt;code&gt;true&lt;/code&gt; 를 반환 합니다 . 그렇지 않은 경우 지정된 개체가 목록인지 확인합니다. 그렇지 않으면 &lt;code&gt;false&lt;/code&gt; 를 반환합니다 . 그렇다면 두 요소를 반복하여 해당 요소 쌍을 비교합니다. 비교가 &lt;code&gt;false&lt;/code&gt; 를 돌려주는 경우 ,이 메소드는 &lt;code&gt;false&lt;/code&gt; 를 돌려줍니다 . 반복자 중 하나에 다른 반복자보다 요소가 부족 하면 목록의 길이가 동일하지 않으므로 &lt;code&gt;false&lt;/code&gt; 를 리턴합니다 . 그렇지 않으면 반복이 완료되면 &lt;code&gt;true&lt;/code&gt; 를 반환 합니다 .</target>
        </trans-unit>
        <trans-unit id="6acfc81ffe615763d29e37e8c25feb492ce0e9c5" translate="yes" xml:space="preserve">
          <source>This implementation first checks if the specified object is this map; if so it returns &lt;code&gt;true&lt;/code&gt;. Then, it checks if the specified object is a map whose size is identical to the size of this map; if not, it returns &lt;code&gt;false&lt;/code&gt;. If so, it iterates over this map's &lt;code&gt;entrySet&lt;/code&gt; collection, and checks that the specified map contains each mapping that this map contains. If the specified map fails to contain such a mapping, &lt;code&gt;false&lt;/code&gt; is returned. If the iteration completes, &lt;code&gt;true&lt;/code&gt; is returned.</source>
          <target state="translated">이 구현은 먼저 지정된 객체가이 맵인지 확인합니다. 그렇다면 &lt;code&gt;true&lt;/code&gt; 를 반환 합니다 . 그런 다음 지정된 객체가이지도의 크기와 크기가 동일한지도인지 확인합니다. 그렇지 않으면 &lt;code&gt;false&lt;/code&gt; 를 반환합니다 . 그렇다면이지도의 &lt;code&gt;entrySet&lt;/code&gt; 컬렉션을 반복 하고 지정된지도 에이지 도에 포함 된 각지도가 포함되어 있는지 확인합니다. 지정된 맵에 이러한 맵핑이 포함되지 않으면 &lt;code&gt;false&lt;/code&gt; 가 리턴됩니다. 반복이 완료되면 &lt;code&gt;true&lt;/code&gt; 가 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="06d9255728d4216ea62d7bdbc2262038b5d02cf3" translate="yes" xml:space="preserve">
          <source>This implementation first checks if the specified object is this set; if so it returns &lt;code&gt;true&lt;/code&gt;. Then, it checks if the specified object is a set whose size is identical to the size of this set; if not, it returns false. If so, it returns &lt;code&gt;containsAll((Collection) o)&lt;/code&gt;.</source>
          <target state="translated">이 구현은 먼저 지정된 객체가이 세트인지 확인합니다. 그렇다면 &lt;code&gt;true&lt;/code&gt; 를 반환 합니다 . 그런 다음 지정된 객체가이 세트의 크기와 크기가 동일한 세트인지 확인합니다. 그렇지 않으면 false를 반환합니다. 그렇다면 &lt;code&gt;containsAll((Collection) o)&lt;/code&gt; 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="89d4ba544bd7e07117341a7a4caf76eca5348b14" translate="yes" xml:space="preserve">
          <source>This implementation first checks to see if &lt;code&gt;key&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt; throwing a &lt;code&gt;NullPointerException&lt;/code&gt; if this is the case. Then it obtains this preference node's lock, checks that the node has not been removed, invokes &lt;a href=&quot;abstractpreferences#getSpi-java.lang.String-&quot;&gt;&lt;code&gt;getSpi(String)&lt;/code&gt;&lt;/a&gt;, and returns the result, unless the &lt;code&gt;getSpi&lt;/code&gt; invocation returns &lt;code&gt;null&lt;/code&gt; or throws an exception, in which case this invocation returns &lt;code&gt;def&lt;/code&gt;.</source>
          <target state="translated">이 경우 제 이행 여부를 확인하기위한 &lt;code&gt;key&lt;/code&gt; 이다 &lt;code&gt;null&lt;/code&gt; 송구 &lt;code&gt;NullPointerException&lt;/code&gt; 이 이러한 경우는. 그런 다음이 환경 설정 노드의 잠금을 확보하고 노드가 제거되지 않았는지 확인하고 &lt;a href=&quot;abstractpreferences#getSpi-java.lang.String-&quot;&gt; &lt;code&gt;getSpi(String)&lt;/code&gt; &lt;/a&gt; 호출 한 후 &lt;code&gt;getSpi&lt;/code&gt; 호출이 &lt;code&gt;null&lt;/code&gt; 하거나 예외를 처리 하지 않는 한 결과를 리턴합니다 . 이 경우이 호출은 &lt;code&gt;def&lt;/code&gt; 를 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="dddaa6e52aca08a9102e08c6e519960a6d98aa8e" translate="yes" xml:space="preserve">
          <source>This implementation first checks to see if the stream has already encountered this object. Next the &lt;code&gt;mutatesTo&lt;/code&gt; method is called to see if that candidate returned from the stream can be mutated into an accurate copy of &lt;code&gt;oldInstance&lt;/code&gt;. If it can, the &lt;code&gt;initialize&lt;/code&gt; method is called to perform the initialization. If not, the candidate is removed from the stream, and the &lt;code&gt;instantiate&lt;/code&gt; method is called to create a new candidate for this object.</source>
          <target state="translated">이 구현은 먼저 스트림에이 객체가 이미 있는지 확인합니다. 다음으로, &lt;code&gt;mutatesTo&lt;/code&gt; 메소드는 스트림에서 리턴 된 후보가 &lt;code&gt;oldInstance&lt;/code&gt; 의 정확한 사본으로 변경 될 수 있는지 확인하기 위해 호출됩니다 . 가능하면 &lt;code&gt;initialize&lt;/code&gt; 메소드가 호출되어 초기화를 수행합니다. 그렇지 않으면 후보가 스트림에서 제거되고 &lt;code&gt;instantiate&lt;/code&gt; 메소드가 호출 되어이 오브젝트에 대한 새 후보를 작성합니다.</target>
        </trans-unit>
        <trans-unit id="5327d07eb58755323196e2a95c6f08fa487d46d1" translate="yes" xml:space="preserve">
          <source>This implementation first gets a list iterator (with &lt;code&gt;listIterator()&lt;/code&gt;). Then, it iterates over the list until the specified element is found or the end of the list is reached.</source>
          <target state="translated">이 구현은 먼저 list iterator ()를 사용하여 목록 반복자를 가져 &lt;code&gt;listIterator()&lt;/code&gt; . 그런 다음 지정된 요소를 찾거나 목록의 끝에 도달 할 때까지 목록을 반복합니다.</target>
        </trans-unit>
        <trans-unit id="dc9d7a122f099945829e1c98c0486717790727d4" translate="yes" xml:space="preserve">
          <source>This implementation first gets a list iterator pointing to the indexed element (with &lt;code&gt;listIterator(index)&lt;/code&gt;). Then, it gets the current element using &lt;code&gt;ListIterator.next&lt;/code&gt; and replaces it with &lt;code&gt;ListIterator.set&lt;/code&gt;.</source>
          <target state="translated">이 구현은 먼저 색인화 된 요소를 가리키는 목록 반복자를 가져옵니다 ( &lt;code&gt;listIterator(index)&lt;/code&gt; ). 그런 다음, 그것을 사용하여 현재 요소를 가져 &lt;code&gt;ListIterator.next&lt;/code&gt; 로 대체합니다 그것을 &lt;code&gt;ListIterator.set&lt;/code&gt; 을 .</target>
        </trans-unit>
        <trans-unit id="e94cbc58e8b1485db6bcbce917f139de4be54ac3" translate="yes" xml:space="preserve">
          <source>This implementation first gets a list iterator pointing to the indexed element (with &lt;code&gt;listIterator(index)&lt;/code&gt;). Then, it gets the element using &lt;code&gt;ListIterator.next&lt;/code&gt; and returns it.</source>
          <target state="translated">이 구현은 먼저 색인화 된 요소를 가리키는 목록 반복자를 가져옵니다 ( &lt;code&gt;listIterator(index)&lt;/code&gt; ). 그런 다음 &lt;code&gt;ListIterator.next&lt;/code&gt; 를 사용하여 요소를 가져 와서 반환합니다.</target>
        </trans-unit>
        <trans-unit id="2da626b5c6657de0464c8ef2394bd0efc74d9c6b" translate="yes" xml:space="preserve">
          <source>This implementation first gets a list iterator pointing to the indexed element (with &lt;code&gt;listIterator(index)&lt;/code&gt;). Then, it inserts the specified element with &lt;code&gt;ListIterator.add&lt;/code&gt;.</source>
          <target state="translated">이 구현은 먼저 색인화 된 요소를 가리키는 목록 반복자를 가져옵니다 ( &lt;code&gt;listIterator(index)&lt;/code&gt; ). 그런 다음 &lt;code&gt;ListIterator.add&lt;/code&gt; 로 지정된 요소를 삽입합니다 .</target>
        </trans-unit>
        <trans-unit id="2b8f920de51f0ee215c05809c4bb2d19ee4bed13" translate="yes" xml:space="preserve">
          <source>This implementation first gets a list iterator pointing to the indexed element (with &lt;code&gt;listIterator(index)&lt;/code&gt;). Then, it removes the element with &lt;code&gt;ListIterator.remove&lt;/code&gt;.</source>
          <target state="translated">이 구현은 먼저 색인화 된 요소를 가리키는 목록 반복자를 가져옵니다 ( &lt;code&gt;listIterator(index)&lt;/code&gt; ). 그런 다음 &lt;code&gt;ListIterator.remove&lt;/code&gt; 를 사용 하여 요소를 제거합니다 .</target>
        </trans-unit>
        <trans-unit id="7fb7d178ee862da67fdef96de1ba0c5057a0710f" translate="yes" xml:space="preserve">
          <source>This implementation first gets a list iterator that points to the end of the list (with &lt;code&gt;listIterator(size())&lt;/code&gt;). Then, it iterates backwards over the list until the specified element is found, or the beginning of the list is reached.</source>
          <target state="translated">이 구현은 먼저 목록의 끝을 가리키는 목록 반복자를 가져옵니다 ( &lt;code&gt;listIterator(size())&lt;/code&gt; ). 그런 다음 지정된 요소를 찾거나 목록의 시작 부분에 도달 할 때까지 목록을 거꾸로 반복합니다.</target>
        </trans-unit>
        <trans-unit id="94a0697d84c6d719a5a90f5bb76123e29ec4e37d" translate="yes" xml:space="preserve">
          <source>This implementation gets a list iterator positioned before &lt;code&gt;fromIndex&lt;/code&gt;, and repeatedly calls &lt;code&gt;ListIterator.next&lt;/code&gt; followed by &lt;code&gt;ListIterator.remove&lt;/code&gt; until the entire range has been removed. &lt;b&gt;Note: if &lt;code&gt;ListIterator.remove&lt;/code&gt; requires linear time, this implementation requires quadratic time.&lt;/b&gt;</source>
          <target state="translated">이 구현은 앞에 위치리스트 반복자 얻는다 &lt;code&gt;fromIndex&lt;/code&gt; 로를 반복해서 호출 &lt;code&gt;ListIterator.next&lt;/code&gt; 는 다음 &lt;code&gt;ListIterator.remove&lt;/code&gt; 를 전체 범위가 제거 될 때까지. &lt;b&gt;참고 : &lt;code&gt;ListIterator.remove&lt;/code&gt; 에 선형 시간이 필요한 경우이 구현에는 2 차 시간이 필요합니다.&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="870ec3beb0fb9f2b7a44d7c32a60f5e32d6f2bc6" translate="yes" xml:space="preserve">
          <source>This implementation gets an iterator over the specified collection and a list iterator over this list pointing to the indexed element (with &lt;code&gt;listIterator(index)&lt;/code&gt;). Then, it iterates over the specified collection, inserting the elements obtained from the iterator into this list, one at a time, using &lt;code&gt;ListIterator.add&lt;/code&gt; followed by &lt;code&gt;ListIterator.next&lt;/code&gt; (to skip over the added element).</source>
          <target state="translated">이 구현은 지정된 콜렉션에 대한 반복자와 색인화 된 요소를 가리키는이 목록에 대한 목록 반복자를 가져옵니다 ( &lt;code&gt;listIterator(index)&lt;/code&gt; ). 그런 다음 &lt;code&gt;ListIterator.add&lt;/code&gt; 다음에 &lt;code&gt;ListIterator.next&lt;/code&gt; (추가 된 요소를 건너 뛰기)를 사용하여 반복자에서 얻은 요소를 한 번에 하나씩이 콜렉션에 삽입하여 지정된 콜렉션을 반복합니다 .</target>
        </trans-unit>
        <trans-unit id="5646cdbc01162ddd7ea9fb47be104c59af9f0bfb" translate="yes" xml:space="preserve">
          <source>This implementation gets an iterator over the specified collection and iterates over it, inserting the elements obtained from the iterator into this list at the appropriate position, one at a time, using &lt;code&gt;add(int, E)&lt;/code&gt;. Many implementations will override this method for efficiency.</source>
          <target state="translated">이 구현은 지정된 컬렉션에 대해 반복자를 가져 와서 반복합니다. 반복기에서 얻은 요소를 &lt;code&gt;add(int, E)&lt;/code&gt; 사용하여 한 번에 하나씩 적절한 위치에서이 목록에 삽입합니다 . 많은 구현이 효율성을 위해이 방법을 대체합니다.</target>
        </trans-unit>
        <trans-unit id="56e226c00665f15374e514b39e186317a37541a9" translate="yes" xml:space="preserve">
          <source>This implementation intentionally re-abstracts the inappropriate default provided in &lt;code&gt;Map&lt;/code&gt;.</source>
          <target state="translated">이 구현은 의도적으로 &lt;code&gt;Map&lt;/code&gt; 에 제공된 부적절한 기본값을 다시 요약합니다 .</target>
        </trans-unit>
        <trans-unit id="b635e6d0c6e154375dc4a10f158124210ed6fb62" translate="yes" xml:space="preserve">
          <source>This implementation invokes &lt;a href=&quot;abstractpreferences#get-java.lang.String-java.lang.String-&quot;&gt;&lt;code&gt;&lt;code&gt;get(key,
 null)&lt;/code&gt;&lt;/code&gt;&lt;/a&gt;. If the return value is non-null, it is compared with &lt;code&gt;&quot;true&quot;&lt;/code&gt; using &lt;a href=&quot;../../lang/string#equalsIgnoreCase-java.lang.String-&quot;&gt;&lt;code&gt;String.equalsIgnoreCase(String)&lt;/code&gt;&lt;/a&gt;. If the comparison returns &lt;code&gt;true&lt;/code&gt;, this invocation returns &lt;code&gt;true&lt;/code&gt;. Otherwise, the original return value is compared with &lt;code&gt;&quot;false&quot;&lt;/code&gt;, again using &lt;a href=&quot;../../lang/string#equalsIgnoreCase-java.lang.String-&quot;&gt;&lt;code&gt;String.equalsIgnoreCase(String)&lt;/code&gt;&lt;/a&gt;. If the comparison returns &lt;code&gt;true&lt;/code&gt;, this invocation returns &lt;code&gt;false&lt;/code&gt;. Otherwise, this invocation returns &lt;code&gt;def&lt;/code&gt;.</source>
          <target state="translated">이 구현은 &lt;a href=&quot;abstractpreferences#get-java.lang.String-java.lang.String-&quot;&gt; &lt;code&gt;&lt;code&gt;get(key, null)&lt;/code&gt;&lt;/code&gt; &lt;/a&gt; 호출합니다 . 리턴 값이 널이 아닌 경우 &lt;a href=&quot;../../lang/string#equalsIgnoreCase-java.lang.String-&quot;&gt; &lt;code&gt;String.equalsIgnoreCase(String)&lt;/code&gt; &lt;/a&gt; 사용하여 &lt;code&gt;&quot;true&quot;&lt;/code&gt; 와 비교됩니다 . 비교가 &lt;code&gt;true&lt;/code&gt; 를 돌려주는 경우 ,이 호출은 &lt;code&gt;true&lt;/code&gt; 를 돌려줍니다 . 그렇지 않으면 원래 반환 값이 &lt;code&gt;&quot;false&quot;&lt;/code&gt; 와 비교되고 다시 &lt;a href=&quot;../../lang/string#equalsIgnoreCase-java.lang.String-&quot;&gt; &lt;code&gt;String.equalsIgnoreCase(String)&lt;/code&gt; &lt;/a&gt; 됩니다. 비교가 &lt;code&gt;true&lt;/code&gt; 를 돌려주는 경우 ,이 호출은 &lt;code&gt;false&lt;/code&gt; 를 돌려줍니다 . 그렇지 않으면이 호출은 &lt;code&gt;def&lt;/code&gt; 를 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="66c71fae686f72098bae0c92b0f058077f985cde" translate="yes" xml:space="preserve">
          <source>This implementation invokes &lt;a href=&quot;abstractpreferences#get-java.lang.String-java.lang.String-&quot;&gt;&lt;code&gt;&lt;code&gt;get(key,
 null)&lt;/code&gt;&lt;/code&gt;&lt;/a&gt;. If the return value is non-null, the implementation attempts to translate it to a &lt;code&gt;long&lt;/code&gt; with &lt;a href=&quot;../../lang/long#parseLong-java.lang.String-&quot;&gt;&lt;code&gt;Long.parseLong(String)&lt;/code&gt;&lt;/a&gt;. If the attempt succeeds, the return value is returned by this method. Otherwise, &lt;code&gt;def&lt;/code&gt; is returned.</source>
          <target state="translated">이 구현은 &lt;a href=&quot;abstractpreferences#get-java.lang.String-java.lang.String-&quot;&gt; &lt;code&gt;&lt;code&gt;get(key, null)&lt;/code&gt;&lt;/code&gt; &lt;/a&gt; 호출합니다 . 반환 값이 null이 아닌 경우, 구현 시도는로 번역하는 &lt;code&gt;long&lt;/code&gt; 과 &lt;a href=&quot;../../lang/long#parseLong-java.lang.String-&quot;&gt; &lt;code&gt;Long.parseLong(String)&lt;/code&gt; &lt;/a&gt; . 시도가 성공하면이 메소드가 리턴 값을 리턴합니다. 그렇지 않으면 &lt;code&gt;def&lt;/code&gt; 가 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="a5a96dd92a8a2de99c9bb4309548d692948530dc" translate="yes" xml:space="preserve">
          <source>This implementation invokes &lt;a href=&quot;abstractpreferences#get-java.lang.String-java.lang.String-&quot;&gt;&lt;code&gt;&lt;code&gt;get(key,
 null)&lt;/code&gt;&lt;/code&gt;&lt;/a&gt;. If the return value is non-null, the implementation attempts to translate it to an &lt;code&gt;double&lt;/code&gt; with &lt;a href=&quot;../../lang/double#parseDouble-java.lang.String-&quot;&gt;&lt;code&gt;Double.parseDouble(String)&lt;/code&gt;&lt;/a&gt;. If the attempt succeeds, the return value is returned by this method. Otherwise, &lt;code&gt;def&lt;/code&gt; is returned.</source>
          <target state="translated">이 구현은 &lt;a href=&quot;abstractpreferences#get-java.lang.String-java.lang.String-&quot;&gt; &lt;code&gt;&lt;code&gt;get(key, null)&lt;/code&gt;&lt;/code&gt; &lt;/a&gt; 호출합니다 . 반환 값이 null 이외의 경우, 구현 은 &lt;a href=&quot;../../lang/double#parseDouble-java.lang.String-&quot;&gt; &lt;code&gt;Double.parseDouble(String)&lt;/code&gt; &lt;/a&gt; &lt;code&gt;double&lt;/code&gt; 을 변환하려고합니다 . 시도가 성공하면이 메소드가 리턴 값을 리턴합니다. 그렇지 않으면 &lt;code&gt;def&lt;/code&gt; 가 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="7794ec8b7b429260de48f273b8796a51252bad95" translate="yes" xml:space="preserve">
          <source>This implementation invokes &lt;a href=&quot;abstractpreferences#get-java.lang.String-java.lang.String-&quot;&gt;&lt;code&gt;&lt;code&gt;get(key,
 null)&lt;/code&gt;&lt;/code&gt;&lt;/a&gt;. If the return value is non-null, the implementation attempts to translate it to an &lt;code&gt;float&lt;/code&gt; with &lt;a href=&quot;../../lang/float#parseFloat-java.lang.String-&quot;&gt;&lt;code&gt;Float.parseFloat(String)&lt;/code&gt;&lt;/a&gt;. If the attempt succeeds, the return value is returned by this method. Otherwise, &lt;code&gt;def&lt;/code&gt; is returned.</source>
          <target state="translated">이 구현은 &lt;a href=&quot;abstractpreferences#get-java.lang.String-java.lang.String-&quot;&gt; &lt;code&gt;&lt;code&gt;get(key, null)&lt;/code&gt;&lt;/code&gt; &lt;/a&gt; 호출합니다 . 반환 값이 null 이외의 경우, 구현 은 &lt;a href=&quot;../../lang/float#parseFloat-java.lang.String-&quot;&gt; &lt;code&gt;Float.parseFloat(String)&lt;/code&gt; &lt;/a&gt; &lt;code&gt;float&lt;/code&gt; 값을 변환하려고합니다 . 시도가 성공하면이 메소드가 리턴 값을 리턴합니다. 그렇지 않으면 &lt;code&gt;def&lt;/code&gt; 가 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="eb14543b444c0f393274309002b25292204401a3" translate="yes" xml:space="preserve">
          <source>This implementation invokes &lt;a href=&quot;abstractpreferences#get-java.lang.String-java.lang.String-&quot;&gt;&lt;code&gt;&lt;code&gt;get(key,
 null)&lt;/code&gt;&lt;/code&gt;&lt;/a&gt;. If the return value is non-null, the implementation attempts to translate it to an &lt;code&gt;int&lt;/code&gt; with &lt;a href=&quot;../../lang/integer#parseInt-java.lang.String-&quot;&gt;&lt;code&gt;Integer.parseInt(String)&lt;/code&gt;&lt;/a&gt;. If the attempt succeeds, the return value is returned by this method. Otherwise, &lt;code&gt;def&lt;/code&gt; is returned.</source>
          <target state="translated">이 구현은 &lt;a href=&quot;abstractpreferences#get-java.lang.String-java.lang.String-&quot;&gt; &lt;code&gt;&lt;code&gt;get(key, null)&lt;/code&gt;&lt;/code&gt; &lt;/a&gt; 호출합니다 . 반환 값이 null 이외의 경우, 구현 은 &lt;a href=&quot;../../lang/integer#parseInt-java.lang.String-&quot;&gt; &lt;code&gt;Integer.parseInt(String)&lt;/code&gt; &lt;/a&gt; &lt;code&gt;int&lt;/code&gt; 로 변환하려고합니다 . 시도가 성공하면이 메소드가 리턴 값을 리턴합니다. 그렇지 않으면 &lt;code&gt;def&lt;/code&gt; 가 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="94ecc5689d3e638b6cf536a9fef78b9d540f7a3c" translate="yes" xml:space="preserve">
          <source>This implementation is a stable, adaptive, iterative mergesort that requires far fewer than n lg(n) comparisons when the input array is partially sorted, while offering the performance of a traditional mergesort when the input array is randomly ordered. If the input array is nearly sorted, the implementation requires approximately n comparisons. Temporary storage requirements vary from a small constant for nearly sorted input arrays to n/2 object references for randomly ordered input arrays.</source>
          <target state="translated">이 구현은 입력 배열이 부분적으로 정렬 될 때 n lg (n)보다 훨씬 적은 수의 비교를 요구하는 안정적이고 적응적인 반복 병합 소 르트이며, 입력 배열이 무작위로 정렬 될 때 기존의 머그 소트의 성능을 제공합니다. 입력 배열이 거의 정렬 된 경우 구현에는 대략 n 개의 비교가 필요합니다. 임시 저장 요구 사항은 거의 정렬 된 입력 배열에 대한 작은 상수부터 무작위로 정렬 된 입력 배열에 대한 n / 2 객체 참조까지 다양합니다.</target>
        </trans-unit>
        <trans-unit id="911416a70503239ead8d008361455812329dda42" translate="yes" xml:space="preserve">
          <source>This implementation is an integer version of MJD with the decimal part rounded to floor.</source>
          <target state="translated">이 구현은 소수 부분이 바닥으로 반올림 된 정수 버전의 MJD입니다.</target>
        </trans-unit>
        <trans-unit id="e6a26421733ec0b06980c0e432edc11963385ea9" translate="yes" xml:space="preserve">
          <source>This implementation is based on the chronology ID and class. Subclasses should add any additional state that they store.</source>
          <target state="translated">이 구현은 연대기 ID 및 클래스를 기반으로합니다. 서브 클래스는 그들이 저장하는 추가 상태를 추가해야합니다.</target>
        </trans-unit>
        <trans-unit id="e69caee99467717738ba7a0c01390cd3506a98fa" translate="yes" xml:space="preserve">
          <source>This implementation is compliant with the requirements of RFC 3280.</source>
          <target state="translated">이 구현은 RFC 3280의 요구 사항을 준수합니다.</target>
        </trans-unit>
        <trans-unit id="3c357fd574f41001350324ef3f5db039d50d1eff" translate="yes" xml:space="preserve">
          <source>This implementation is not thread safe. However, it is safe to use &lt;a href=&quot;stream/collectors#summarizingDouble-java.util.function.ToDoubleFunction-&quot;&gt;&lt;code&gt;Collectors.toDoubleStatistics()&lt;/code&gt;&lt;/a&gt; on a parallel stream, because the parallel implementation of &lt;a href=&quot;stream/stream#collect-java.util.function.Supplier-java.util.function.BiConsumer-java.util.function.BiConsumer-&quot;&gt;&lt;code&gt;Stream.collect()&lt;/code&gt;&lt;/a&gt; provides the necessary partitioning, isolation, and merging of results for safe and efficient parallel execution.</source>
          <target state="translated">이 구현은 스레드 안전하지 않습니다. 그러나 &lt;a href=&quot;stream/stream#collect-java.util.function.Supplier-java.util.function.BiConsumer-java.util.function.BiConsumer-&quot;&gt; &lt;code&gt;Stream.collect()&lt;/code&gt; &lt;/a&gt; 의 병렬 구현은 안전하고 효율적인 병렬 실행을 위해 필요한 분할, 격리 및 병합 결과를 제공 하므로 병렬 스트림에서 &lt;a href=&quot;stream/collectors#summarizingDouble-java.util.function.ToDoubleFunction-&quot;&gt; &lt;code&gt;Collectors.toDoubleStatistics()&lt;/code&gt; &lt;/a&gt; 를 사용하는 것이 안전합니다 .</target>
        </trans-unit>
        <trans-unit id="fe542b73779aa75906a286f7e4474cc4e7a6f3dd" translate="yes" xml:space="preserve">
          <source>This implementation is not thread safe. However, it is safe to use &lt;a href=&quot;stream/collectors#summarizingInt-java.util.function.ToIntFunction-&quot;&gt;&lt;code&gt;Collectors.toIntStatistics()&lt;/code&gt;&lt;/a&gt; on a parallel stream, because the parallel implementation of &lt;a href=&quot;stream/stream#collect-java.util.function.Supplier-java.util.function.BiConsumer-java.util.function.BiConsumer-&quot;&gt;&lt;code&gt;Stream.collect()&lt;/code&gt;&lt;/a&gt; provides the necessary partitioning, isolation, and merging of results for safe and efficient parallel execution.</source>
          <target state="translated">이 구현은 스레드 안전하지 않습니다. 그러나 &lt;a href=&quot;stream/stream#collect-java.util.function.Supplier-java.util.function.BiConsumer-java.util.function.BiConsumer-&quot;&gt; &lt;code&gt;Stream.collect()&lt;/code&gt; &lt;/a&gt; 의 병렬 구현은 안전하고 효율적인 병렬 실행을 위해 필요한 분할, 격리 및 병합 결과를 제공 하므로 병렬 스트림에서 &lt;a href=&quot;stream/collectors#summarizingInt-java.util.function.ToIntFunction-&quot;&gt; &lt;code&gt;Collectors.toIntStatistics()&lt;/code&gt; &lt;/a&gt; 를 사용하는 것이 안전합니다 .</target>
        </trans-unit>
        <trans-unit id="815e99e203755418cfc4a22f8d98449c453fd284" translate="yes" xml:space="preserve">
          <source>This implementation is not thread safe. However, it is safe to use &lt;a href=&quot;stream/collectors#summarizingLong-java.util.function.ToLongFunction-&quot;&gt;&lt;code&gt;Collectors.toLongStatistics()&lt;/code&gt;&lt;/a&gt; on a parallel stream, because the parallel implementation of &lt;a href=&quot;stream/stream#collect-java.util.function.Supplier-java.util.function.BiConsumer-java.util.function.BiConsumer-&quot;&gt;&lt;code&gt;Stream.collect()&lt;/code&gt;&lt;/a&gt; provides the necessary partitioning, isolation, and merging of results for safe and efficient parallel execution.</source>
          <target state="translated">이 구현은 스레드 안전하지 않습니다. 그러나 &lt;a href=&quot;stream/stream#collect-java.util.function.Supplier-java.util.function.BiConsumer-java.util.function.BiConsumer-&quot;&gt; &lt;code&gt;Stream.collect()&lt;/code&gt; &lt;/a&gt; 의 병렬 구현은 안전하고 효율적인 병렬 실행을 위해 필요한 분할, 격리 및 병합 결과를 제공 하므로 병렬 스트림에서 &lt;a href=&quot;stream/collectors#summarizingLong-java.util.function.ToLongFunction-&quot;&gt; &lt;code&gt;Collectors.toLongStatistics()&lt;/code&gt; &lt;/a&gt; 를 사용하는 것이 안전합니다 .</target>
        </trans-unit>
        <trans-unit id="c65a4e114757cd95cb0b1af51c5a8f17d55667f4" translate="yes" xml:space="preserve">
          <source>This implementation is very similar to &lt;a href=&quot;abstractpreferences#node-java.lang.String-&quot;&gt;&lt;code&gt;node(String)&lt;/code&gt;&lt;/a&gt;, except that &lt;a href=&quot;abstractpreferences#getChild-java.lang.String-&quot;&gt;&lt;code&gt;getChild(String)&lt;/code&gt;&lt;/a&gt; is used instead of &lt;a href=&quot;abstractpreferences#childSpi-java.lang.String-&quot;&gt;&lt;code&gt;childSpi(String)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 구현은 &lt;a href=&quot;abstractpreferences#childSpi-java.lang.String-&quot;&gt; &lt;code&gt;childSpi(String)&lt;/code&gt; &lt;/a&gt; 대신 &lt;a href=&quot;abstractpreferences#getChild-java.lang.String-&quot;&gt; &lt;code&gt;getChild(String)&lt;/code&gt; &lt;/a&gt; 이 사용 된다는 점을 제외하면 &lt;a href=&quot;abstractpreferences#node-java.lang.String-&quot;&gt; &lt;code&gt;node(String)&lt;/code&gt; &lt;/a&gt; 과 매우 유사합니다 .</target>
        </trans-unit>
        <trans-unit id="4aac7cc407da5580cb81c86b96e060fa67eed65c" translate="yes" xml:space="preserve">
          <source>This implementation iterates over &lt;code&gt;entrySet()&lt;/code&gt; searching for an entry with the specified key. If such an entry is found, &lt;code&gt;true&lt;/code&gt; is returned. If the iteration terminates without finding such an entry, &lt;code&gt;false&lt;/code&gt; is returned. Note that this implementation requires linear time in the size of the map; many implementations will override this method.</source>
          <target state="translated">이 구현은 지정된 키를 가진 항목을 검색하는 &lt;code&gt;entrySet()&lt;/code&gt; 반복 합니다. 이러한 항목을 찾으면 &lt;code&gt;true&lt;/code&gt; 가 리턴됩니다. 그러한 항목을 찾지 않고 반복이 종료되면 &lt;code&gt;false&lt;/code&gt; 가 리턴됩니다. 이 구현에는 맵 크기의 선형 시간이 필요합니다. 많은 구현이이 메소드를 대체합니다.</target>
        </trans-unit>
        <trans-unit id="374c02342ca9ed7bb65e8c45f44f04fe03fc0a54" translate="yes" xml:space="preserve">
          <source>This implementation iterates over &lt;code&gt;entrySet()&lt;/code&gt; searching for an entry with the specified key. If such an entry is found, its value is obtained with its &lt;code&gt;getValue&lt;/code&gt; operation, the entry is removed from the collection (and the backing map) with the iterator's &lt;code&gt;remove&lt;/code&gt; operation, and the saved value is returned. If the iteration terminates without finding such an entry, &lt;code&gt;null&lt;/code&gt; is returned. Note that this implementation requires linear time in the size of the map; many implementations will override this method.</source>
          <target state="translated">이 구현은 지정된 키를 가진 항목을 검색하는 &lt;code&gt;entrySet()&lt;/code&gt; 반복 합니다. 그러한 엔트리가 발견되면, &lt;code&gt;getValue&lt;/code&gt; 오퍼레이션으로 그 값이 얻어 지고, 이터레이터의 &lt;code&gt;remove&lt;/code&gt; 오퍼레이션으로 콜렉션 (및 백킹 맵)으로부터 엔트리가 삭제되어 , 저장된 값이 돌려 주어집니다. 이러한 항목을 찾지 않고 반복이 종료되면 &lt;code&gt;null&lt;/code&gt; 이 반환됩니다. 이 구현에는 맵 크기의 선형 시간이 필요합니다. 많은 구현이이 메소드를 대체합니다.</target>
        </trans-unit>
        <trans-unit id="81700431dabd9c61ce32f9c13c0156c858f13af9" translate="yes" xml:space="preserve">
          <source>This implementation iterates over &lt;code&gt;entrySet()&lt;/code&gt; searching for an entry with the specified key. If such an entry is found, the entry's value is returned. If the iteration terminates without finding such an entry, &lt;code&gt;null&lt;/code&gt; is returned. Note that this implementation requires linear time in the size of the map; many implementations will override this method.</source>
          <target state="translated">이 구현은 지정된 키를 가진 항목을 검색하는 &lt;code&gt;entrySet()&lt;/code&gt; 반복 합니다. 이러한 항목을 찾으면 항목 값이 반환됩니다. 이러한 항목을 찾지 않고 반복이 종료되면 &lt;code&gt;null&lt;/code&gt; 이 반환됩니다. 이 구현에는 맵 크기의 선형 시간이 필요합니다. 많은 구현이이 메소드를 대체합니다.</target>
        </trans-unit>
        <trans-unit id="f766c5a2cb3b29aa94b14f7e1863646750f5d4cf" translate="yes" xml:space="preserve">
          <source>This implementation iterates over &lt;code&gt;entrySet()&lt;/code&gt; searching for an entry with the specified value. If such an entry is found, &lt;code&gt;true&lt;/code&gt; is returned. If the iteration terminates without finding such an entry, &lt;code&gt;false&lt;/code&gt; is returned. Note that this implementation requires linear time in the size of the map.</source>
          <target state="translated">이 구현은 지정된 값을 가진 항목을 검색하는 &lt;code&gt;entrySet()&lt;/code&gt; 반복 합니다. 이러한 항목을 찾으면 &lt;code&gt;true&lt;/code&gt; 가 리턴됩니다. 그러한 항목을 찾지 않고 반복이 종료되면 &lt;code&gt;false&lt;/code&gt; 가 리턴됩니다. 이 구현에는 맵 크기의 선형 시간이 필요합니다.</target>
        </trans-unit>
        <trans-unit id="8300a6372ea19c93763fb3af3d8f015529a42126" translate="yes" xml:space="preserve">
          <source>This implementation iterates over &lt;code&gt;entrySet()&lt;/code&gt;, calling &lt;a href=&quot;map.entry#hashCode--&quot;&gt;&lt;code&gt;hashCode()&lt;/code&gt;&lt;/a&gt; on each element (entry) in the set, and adding up the results.</source>
          <target state="translated">이 구현은 &lt;code&gt;entrySet()&lt;/code&gt; 반복 하여 세트의 각 요소 (entry)에서 &lt;a href=&quot;map.entry#hashCode--&quot;&gt; &lt;code&gt;hashCode()&lt;/code&gt; &lt;/a&gt; 를 호출 하고 결과를 합산합니다.</target>
        </trans-unit>
        <trans-unit id="ca0dbdf4776d51bd0c011b2ccf1832a90ecef222" translate="yes" xml:space="preserve">
          <source>This implementation iterates over the collection looking for the specified element. If it finds the element, it removes the element from the collection using the iterator's remove method.</source>
          <target state="translated">이 구현은 지정된 요소를 찾는 컬렉션을 반복합니다. 요소를 찾으면 반복자의 remove 메소드를 사용하여 컬렉션에서 요소를 제거합니다.</target>
        </trans-unit>
        <trans-unit id="e8d1b36ecb6afc9c1b2a76d59260c0a6aa2c241e" translate="yes" xml:space="preserve">
          <source>This implementation iterates over the elements in the collection, checking each element in turn for equality with the specified element.</source>
          <target state="translated">이 구현은 컬렉션의 요소를 반복하여 각 요소가 지정된 요소와 동일한 지 차례로 확인합니다.</target>
        </trans-unit>
        <trans-unit id="39f403dab1f207dcaf913c9aaa3525eee2914312" translate="yes" xml:space="preserve">
          <source>This implementation iterates over the set, calling the &lt;code&gt;hashCode&lt;/code&gt; method on each element in the set, and adding up the results.</source>
          <target state="translated">이 구현은 세트의 각 요소에 대해 &lt;code&gt;hashCode&lt;/code&gt; 메소드를 호출 하고 결과를 합산 하여 세트를 반복 합니다.</target>
        </trans-unit>
        <trans-unit id="3c0d85f7c8b81e41420ddfc89ef5a64de801eb4a" translate="yes" xml:space="preserve">
          <source>This implementation iterates over the specified collection, and adds each element returned by the iterator to this queue, in turn. A runtime exception encountered while trying to add an element (including, in particular, a &lt;code&gt;null&lt;/code&gt; element) may result in only some of the elements having been successfully added when the associated exception is thrown.</source>
          <target state="translated">이 구현은 지정된 콜렉션을 반복하고 반복자가 리턴 한 각 요소를이 큐에 추가합니다. 요소 (특히 &lt;code&gt;null&lt;/code&gt; 요소 포함)를 추가하는 중에 런타임 예외가 발생 하면 연관된 예외가 발생했을 때 일부 요소 만 성공적으로 추가되었을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="cb49e9f211a7b5c45d27f20fd7c5b707404d8891" translate="yes" xml:space="preserve">
          <source>This implementation iterates over the specified collection, and adds each object returned by the iterator to this collection, in turn.</source>
          <target state="translated">이 구현은 지정된 컬렉션을 반복하고 반복자가 반환 한 각 객체를이 컬렉션에 추가합니다.</target>
        </trans-unit>
        <trans-unit id="45df9afc1d5dba7b2ae374ddc1d5fd770727ccb5" translate="yes" xml:space="preserve">
          <source>This implementation iterates over the specified collection, checking each element returned by the iterator in turn to see if it's contained in this collection. If all elements are so contained &lt;code&gt;true&lt;/code&gt; is returned, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">이 구현은 지정된 컬렉션을 반복하여 반복자가 반환 한 각 요소를 차례로 확인하여이 컬렉션에 포함되어 있는지 확인합니다. 모든 요소가 포함되어 있으면 &lt;code&gt;true&lt;/code&gt; 가 반환되고, 그렇지 않으면 &lt;code&gt;false&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="d277f54573e93fd99212202d3cc79336a92e3996" translate="yes" xml:space="preserve">
          <source>This implementation iterates over the specified map's &lt;code&gt;entrySet()&lt;/code&gt; collection, and calls this map's &lt;code&gt;put&lt;/code&gt; operation once for each entry returned by the iteration.</source>
          <target state="translated">이 구현은 지정된 맵의 &lt;code&gt;entrySet()&lt;/code&gt; 콜렉션을 반복하고 반복에 의해 리턴 된 각 항목에 대해이 맵의 &lt;code&gt;put&lt;/code&gt; 조작을 한 번 호출합니다 .</target>
        </trans-unit>
        <trans-unit id="94358541f9d35d39b3a9c9aa36e2326b7df4d1a1" translate="yes" xml:space="preserve">
          <source>This implementation iterates over this collection, checking each element returned by the iterator in turn to see if it's contained in the specified collection. If it's not so contained, it's removed from this collection with the iterator's &lt;code&gt;remove&lt;/code&gt; method.</source>
          <target state="translated">이 구현은이 컬렉션을 반복하여 지정된 컬렉션에 포함되어 있는지 반복자가 반환 한 각 요소를 확인합니다. 포함되어 있지 않으면 이터레이터의 &lt;code&gt;remove&lt;/code&gt; 메소드 를 사용하여이 콜렉션에서 제거 됩니다.</target>
        </trans-unit>
        <trans-unit id="5752c24310b5d5e92d2aeed3eac68c1753b8f209" translate="yes" xml:space="preserve">
          <source>This implementation iterates over this collection, checking each element returned by the iterator in turn to see if it's contained in the specified collection. If it's so contained, it's removed from this collection with the iterator's &lt;code&gt;remove&lt;/code&gt; method.</source>
          <target state="translated">이 구현은이 컬렉션을 반복하여 지정된 컬렉션에 포함되어 있는지 반복자가 반환 한 각 요소를 확인합니다. 포함되어 있으면 iterator의 &lt;code&gt;remove&lt;/code&gt; 메소드 를 사용하여이 콜렉션에서 제거 됩니다.</target>
        </trans-unit>
        <trans-unit id="519b7265bd069092f1ee87ef17492b432c1b0c47" translate="yes" xml:space="preserve">
          <source>This implementation iterates over this collection, removing each element using the &lt;code&gt;Iterator.remove&lt;/code&gt; operation. Most implementations will probably choose to override this method for efficiency.</source>
          <target state="translated">이 구현은이 컬렉션을 반복하여 &lt;code&gt;Iterator.remove&lt;/code&gt; 작업을 사용하여 각 요소를 제거 합니다. 대부분의 구현은 효율성을 위해이 메소드를 대체하도록 선택합니다.</target>
        </trans-unit>
        <trans-unit id="4576fde91ee155ce3e66f4d0a74f6b3c167a9415" translate="yes" xml:space="preserve">
          <source>This implementation merely returns &lt;code&gt; compare((String)o1, (String)o2) &lt;/code&gt;.</source>
          <target state="translated">이 구현은 &lt;code&gt; compare((String)o1, (String)o2) &lt;/code&gt; 만 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="23c718d9502111d93dc30f6a9345580a960a58b8" translate="yes" xml:space="preserve">
          <source>This implementation merely returns &lt;code&gt;false&lt;/code&gt; (so that this map acts like a normal map - the eldest element is never removed).</source>
          <target state="translated">이 구현은 단순히 &lt;code&gt;false&lt;/code&gt; 를 반환 하므로이 맵은 일반 맵처럼 작동합니다. 가장 오래된 요소는 제거되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="ea2eb5e1b3e1ace11518ffb09a6647f94311ccce" translate="yes" xml:space="preserve">
          <source>This implementation merely returns a list iterator over the list.</source>
          <target state="translated">이 구현은 단순히 목록에 대한 목록 반복자를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="ad35e878c9e5603591403a18f61e9d3c699a94f2" translate="yes" xml:space="preserve">
          <source>This implementation merely returns the absolute path name that was computed at the time that this node was constructed (based on the name that was passed to this node's constructor, and the names that were passed to this node's ancestors' constructors).</source>
          <target state="translated">이 구현은이 노드가 생성 될 때 계산 된 절대 경로 이름 (이 노드의 생성자에 전달 된 이름 및이 노드의 상위 생성자에 전달 된 이름을 기반으로)을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="51709a75571ee5b8a6c54ce09f4bdb149dee3efa" translate="yes" xml:space="preserve">
          <source>This implementation merely returns the name that was passed to this node's constructor.</source>
          <target state="translated">이 구현은이 노드의 생성자에 전달 된 이름 만 반환합니다.</target>
        </trans-unit>
        <trans-unit id="db1425f08beb2d7b2314a47941db6d97a1bcac81" translate="yes" xml:space="preserve">
          <source>This implementation obtains this preference node's lock and checks that the node has not been removed. If &lt;code&gt;path&lt;/code&gt; is &lt;code&gt;&quot;&quot;&lt;/code&gt;, this node is returned; if &lt;code&gt;path&lt;/code&gt; is &lt;code&gt;&quot;/&quot;&lt;/code&gt;, this node's root is returned. If the first character in &lt;code&gt;path&lt;/code&gt; is not &lt;code&gt;'/'&lt;/code&gt;, the implementation breaks &lt;code&gt;path&lt;/code&gt; into tokens and recursively traverses the path from this node to the named node, &quot;consuming&quot; a name and a slash from &lt;code&gt;path&lt;/code&gt; at each step of the traversal. At each step, the current node is locked and the node's child-cache is checked for the named node. If it is not found, the name is checked to make sure its length does not exceed &lt;code&gt;MAX_NAME_LENGTH&lt;/code&gt;. Then the &lt;a href=&quot;abstractpreferences#childSpi-java.lang.String-&quot;&gt;&lt;code&gt;childSpi(String)&lt;/code&gt;&lt;/a&gt; method is invoked, and the result stored in this node's child-cache. If the newly created &lt;code&gt;Preferences&lt;/code&gt; object's &lt;a href=&quot;abstractpreferences#newNode&quot;&gt;&lt;code&gt;newNode&lt;/code&gt;&lt;/a&gt; field is &lt;code&gt;true&lt;/code&gt; and there are any node change listeners, a notification event is enqueued for processing by the event dispatch thread.</source>
          <target state="translated">이 구현은이 환경 설정 노드의 잠금을 획득하고 노드가 제거되지 않았는지 확인합니다. 경우 &lt;code&gt;path&lt;/code&gt; 이다 &lt;code&gt;&quot;&quot;&lt;/code&gt; 이 노드가 반환됩니다; 경우 &lt;code&gt;path&lt;/code&gt; 입니다 &lt;code&gt;&quot;/&quot;&lt;/code&gt; ,이 노드의 루트가 돌려 주어집니다. &lt;code&gt;path&lt;/code&gt; 의 첫 문자 가 &lt;code&gt;'/'&lt;/code&gt; 가 아닌 경우, 구현은 &lt;code&gt;path&lt;/code&gt; 를 토큰으로 나누고이 노드에서 명명 된 노드로 경로를 재귀 적으로 순회하여 순회의 각 단계 에서 &lt;code&gt;path&lt;/code&gt; 에서 이름과 슬래시를 &quot;소비&quot;합니다 . 각 단계에서 현재 노드가 잠기고 명명 된 노드에 대해 노드의 자식 캐시가 검사됩니다. 찾을 수 없으면이름이 길이가 &lt;code&gt;MAX_NAME_LENGTH&lt;/code&gt; 를 초과하지 않는지 확인합니다.. 그런 다음 &lt;a href=&quot;abstractpreferences#childSpi-java.lang.String-&quot;&gt; &lt;code&gt;childSpi(String)&lt;/code&gt; &lt;/a&gt; 메소드가 호출되고 결과는이 노드의 하위 캐시에 저장됩니다. 새로 작성된 &lt;code&gt;Preferences&lt;/code&gt; 오브젝트의 &lt;a href=&quot;abstractpreferences#newNode&quot;&gt; &lt;code&gt;newNode&lt;/code&gt; &lt;/a&gt; 필드가 &lt;code&gt;true&lt;/code&gt; 이고 노드 변경 리스너가있는 경우, 이벤트 디스패치 스레드에 의해 처리되도록 알림 이벤트가 큐에 대기됩니다.</target>
        </trans-unit>
        <trans-unit id="b4e9074e793652f799c8cfa243efa22f5492c1f1" translate="yes" xml:space="preserve">
          <source>This implementation obtains this preference node's lock, checks that the node has not been removed and invokes &lt;a href=&quot;abstractpreferences#keysSpi--&quot;&gt;&lt;code&gt;keysSpi()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 구현은이 환경 설정 노드의 잠금을 획득하고 노드가 제거되지 않았는지 점검하고 &lt;a href=&quot;abstractpreferences#keysSpi--&quot;&gt; &lt;code&gt;keysSpi()&lt;/code&gt; &lt;/a&gt; 호출 합니다 .</target>
        </trans-unit>
        <trans-unit id="ee523996d355981b8029699f775d6640fb17d2b8" translate="yes" xml:space="preserve">
          <source>This implementation obtains this preference node's lock, checks that the node has not been removed and returns the parent value that was passed to this node's constructor.</source>
          <target state="translated">이 구현은이 환경 설정 노드의 잠금을 획득하고 노드가 제거되지 않았는지 점검 한 후이 노드의 생성자에 전달 된 상위 값을 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="9c1dca6ba54dc0a25dec6160d7a80a95ee75a6d1" translate="yes" xml:space="preserve">
          <source>This implementation obtains this preference node's lock, checks that the node has not been removed, constructs a &lt;code&gt;TreeSet&lt;/code&gt; initialized to the names of children already cached (the children in this node's &quot;child-cache&quot;), invokes &lt;a href=&quot;abstractpreferences#childrenNamesSpi--&quot;&gt;&lt;code&gt;childrenNamesSpi()&lt;/code&gt;&lt;/a&gt;, and adds all of the returned child-names into the set. The elements of the tree set are dumped into a &lt;code&gt;String&lt;/code&gt; array using the &lt;code&gt;toArray&lt;/code&gt; method, and this array is returned.</source>
          <target state="translated">이 구현은이 환경 설정 노드의 잠금을 획득하고, 노드가 제거되지 않았는지 점검하고, 이미 캐시 된 하위 (이 노드의 &quot;하위 캐시&quot;의 하위) 이름으로 초기화 된 &lt;code&gt;TreeSet&lt;/code&gt; 을 구성하고 &lt;a href=&quot;abstractpreferences#childrenNamesSpi--&quot;&gt; &lt;code&gt;childrenNamesSpi()&lt;/code&gt; &lt;/a&gt; 호출 하고 모든 것을 추가합니다. 세트에 돌려 주어진 아이 이름 트리 세트의 요소는 &lt;code&gt;toArray&lt;/code&gt; 메소드를 사용하여 &lt;code&gt;String&lt;/code&gt; 배열 로 덤프 되고이 배열이 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="ff328080236bc53bbb21d28fd82c8ab703ac9410" translate="yes" xml:space="preserve">
          <source>This implementation obtains this preference node's lock, checks that the node has not been removed, invokes &lt;a href=&quot;abstractpreferences#removeSpi-java.lang.String-&quot;&gt;&lt;code&gt;removeSpi(String)&lt;/code&gt;&lt;/a&gt; and if there are any preference change listeners, enqueues a notification event for processing by the event dispatch thread.</source>
          <target state="translated">이 구현은이 환경 설정 노드의 잠금을 확보하고 노드가 제거되지 않았는지 점검하고 &lt;a href=&quot;abstractpreferences#removeSpi-java.lang.String-&quot;&gt; &lt;code&gt;removeSpi(String)&lt;/code&gt; &lt;/a&gt; 호출 하며 환경 설정 변경 리스너가있는 경우 이벤트 디스패치 스레드에 의해 처리 할 알림 이벤트를 큐에 넣습니다.</target>
        </trans-unit>
        <trans-unit id="7d06d3af75722399c69cf0a06d1b73a18139b052" translate="yes" xml:space="preserve">
          <source>This implementation obtains this preference node's lock, invokes &lt;a href=&quot;abstractpreferences#childrenNames--&quot;&gt;&lt;code&gt;childrenNames()&lt;/code&gt;&lt;/a&gt; to get an array of the names of this node's children, and iterates over the array comparing the name of each child with the specified node name. If a child node has the correct name, the &lt;a href=&quot;abstractpreferences#childSpi-java.lang.String-&quot;&gt;&lt;code&gt;childSpi(String)&lt;/code&gt;&lt;/a&gt; method is invoked and the resulting node is returned. If the iteration completes without finding the specified name, &lt;code&gt;null&lt;/code&gt; is returned.</source>
          <target state="translated">이 구현은이 환경 설정 노드의 잠금을 획득하고 &lt;a href=&quot;abstractpreferences#childrenNames--&quot;&gt; &lt;code&gt;childrenNames()&lt;/code&gt; &lt;/a&gt; 를 호출 하여이 노드의 하위 이름의 배열을 가져오고 각 하위의 이름을 지정된 노드 이름과 비교하여 배열을 반복합니다. 하위 노드의 이름이 올바른 경우 &lt;a href=&quot;abstractpreferences#childSpi-java.lang.String-&quot;&gt; &lt;code&gt;childSpi(String)&lt;/code&gt; &lt;/a&gt; 메소드가 호출되고 결과 노드가 리턴됩니다. 지정된 이름을 찾지 않고 반복이 완료되면 &lt;code&gt;null&lt;/code&gt; 이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="68dd71631e243d62782c7a1d3233e4f3411bf3d0" translate="yes" xml:space="preserve">
          <source>This implementation obtains this preference node's lock, invokes &lt;a href=&quot;abstractpreferences#keys--&quot;&gt;&lt;code&gt;keys()&lt;/code&gt;&lt;/a&gt; to obtain an array of keys, and iterates over the array invoking &lt;a href=&quot;abstractpreferences#remove-java.lang.String-&quot;&gt;&lt;code&gt;remove(String)&lt;/code&gt;&lt;/a&gt; on each key.</source>
          <target state="translated">이 구현은이 환경 설정 노드의 잠금 을 획득하고 &lt;a href=&quot;abstractpreferences#keys--&quot;&gt; &lt;code&gt;keys()&lt;/code&gt; &lt;/a&gt; 를 호출하여 키 배열을 확보 한 후 각 키에서 &lt;a href=&quot;abstractpreferences#remove-java.lang.String-&quot;&gt; &lt;code&gt;remove(String)&lt;/code&gt; &lt;/a&gt; 를 호출하는 배열을 반복 합니다.</target>
        </trans-unit>
        <trans-unit id="68fb70f6859bc881ca8591ac741e9e9459eb437f" translate="yes" xml:space="preserve">
          <source>This implementation of the counter monitor requires the observed attribute to be of the type integer (&lt;code&gt;Byte&lt;/code&gt;, &lt;code&gt;Integer&lt;/code&gt;, &lt;code&gt;Short&lt;/code&gt;, &lt;code&gt;Long&lt;/code&gt;).</source>
          <target state="translated">카운터 모니터를 구현하려면 관찰 된 속성이 정수 유형 ( &lt;code&gt;Byte&lt;/code&gt; , &lt;code&gt;Integer&lt;/code&gt; , &lt;code&gt;Short&lt;/code&gt; , &lt;code&gt;Long&lt;/code&gt; ) 이어야합니다 .</target>
        </trans-unit>
        <trans-unit id="56c64353580b5bd2b143fc61404b3daed810592f" translate="yes" xml:space="preserve">
          <source>This implementation of the gauge monitor requires the observed attribute to be of the type integer or floating-point (&lt;code&gt;Byte&lt;/code&gt;, &lt;code&gt;Integer&lt;/code&gt;, &lt;code&gt;Short&lt;/code&gt;, &lt;code&gt;Long&lt;/code&gt;, &lt;code&gt;Float&lt;/code&gt;, &lt;code&gt;Double&lt;/code&gt;).</source>
          <target state="translated">게이지 모니터를 구현하려면 관찰 된 속성이 정수 또는 부동 소수점 유형 ( &lt;code&gt;Byte&lt;/code&gt; , &lt;code&gt;Integer&lt;/code&gt; , &lt;code&gt;Short&lt;/code&gt; , &lt;code&gt;Long&lt;/code&gt; , &lt;code&gt;Float&lt;/code&gt; , &lt;code&gt;Double&lt;/code&gt; ) 이어야합니다 .</target>
        </trans-unit>
        <trans-unit id="2ddbea53defab69d9606ffb011766ce60be8a7aa" translate="yes" xml:space="preserve">
          <source>This implementation provides constant-time performance for the basic operations (&lt;code&gt;get&lt;/code&gt; and &lt;code&gt;put&lt;/code&gt;), assuming the hash function disperses the elements properly among the buckets. Iteration over collection views requires time proportional to the &quot;capacity&quot; of the &lt;code&gt;HashMap&lt;/code&gt; instance (the number of buckets) plus its size (the number of key-value mappings). Thus, it's very important not to set the initial capacity too high (or the load factor too low) if iteration performance is important.</source>
          <target state="translated">이 구현은 해시 함수가 버킷간에 요소를 올바르게 분산시키는 것으로 가정하여 기본 작업 ( &lt;code&gt;get&lt;/code&gt; 및 &lt;code&gt;put&lt;/code&gt; )에 일정한 시간 성능을 제공합니다 . 컬렉션 뷰를 반복하면 &lt;code&gt;HashMap&lt;/code&gt; 인스턴스 의 &quot;용량&quot; (버킷 수)에 크기 (키-값 매핑 수)를 더한 시간이 필요합니다 . 따라서 반복 성능이 중요한 경우 초기 용량을 너무 높게 (또는로드 팩터가 너무 낮게) 설정하지 않는 것이 중요합니다.</target>
        </trans-unit>
        <trans-unit id="8c27c8f93fb0c5e1304d66a7f7e6788cb8b334d2" translate="yes" xml:space="preserve">
          <source>This implementation provides expected average</source>
          <target state="translated">이 구현은 예상 평균을 제공합니다</target>
        </trans-unit>
        <trans-unit id="0927d54bcfd80f8aefb6120fb2f7298a28299ab9" translate="yes" xml:space="preserve">
          <source>This implementation provides guaranteed log(n) time cost for the &lt;code&gt;containsKey&lt;/code&gt;, &lt;code&gt;get&lt;/code&gt;, &lt;code&gt;put&lt;/code&gt; and &lt;code&gt;remove&lt;/code&gt; operations. Algorithms are adaptations of those in Cormen, Leiserson, and Rivest's &lt;em&gt;Introduction to Algorithms&lt;/em&gt;.</source>
          <target state="translated">이 구현은 &lt;code&gt;containsKey&lt;/code&gt; , &lt;code&gt;get&lt;/code&gt; , &lt;code&gt;put&lt;/code&gt; 및 &lt;code&gt;remove&lt;/code&gt; 작업에 대해 보장 된 log (n) 시간 비용을 제공합니다 . 알고리즘은 Cormen, Leiserson 및 Rivest의 &lt;em&gt;알고리즘 소개에 적용됩니다&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="36ff11dc05516f440cd0122d1f08e33fd3b4d671" translate="yes" xml:space="preserve">
          <source>This implementation provides guaranteed log(n) time cost for the basic operations (&lt;code&gt;add&lt;/code&gt;, &lt;code&gt;remove&lt;/code&gt; and &lt;code&gt;contains&lt;/code&gt;).</source>
          <target state="translated">이 구현은 기본 작업 ( &lt;code&gt;add&lt;/code&gt; , &lt;code&gt;remove&lt;/code&gt; 및 &lt;code&gt;contains&lt;/code&gt; )에 대해 보장 된 log (n) 시간 비용을 제공합니다 .</target>
        </trans-unit>
        <trans-unit id="60c4f7fa5f2db32614f524b752c0959196d6bb59" translate="yes" xml:space="preserve">
          <source>This implementation rejects submitted tasks (that is, by throwing &lt;a href=&quot;rejectedexecutionexception&quot;&gt;&lt;code&gt;RejectedExecutionException&lt;/code&gt;&lt;/a&gt;) only when the pool is shut down or internal resources have been exhausted.</source>
          <target state="translated">이 구현은 풀이 종료되거나 내부 자원이 소진 된 경우에만 제출 된 작업을 거부합니다 (즉, &lt;a href=&quot;rejectedexecutionexception&quot;&gt; &lt;code&gt;RejectedExecutionException&lt;/code&gt; 발생&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="363bdcdf1055b4b3a93d614d60e563148e7f8e19" translate="yes" xml:space="preserve">
          <source>This implementation repeatedly invokes &lt;a href=&quot;queue#poll--&quot;&gt;&lt;code&gt;poll&lt;/code&gt;&lt;/a&gt; until it returns &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">이 구현 은 &lt;code&gt;null&lt;/code&gt; 을 리턴 할 때까지 &lt;a href=&quot;queue#poll--&quot;&gt; &lt;code&gt;poll&lt;/code&gt; &lt;/a&gt; 반복적으로 호출합니다 .</target>
        </trans-unit>
        <trans-unit id="adbd9f8ccc390387c4b3a8d79e90767a5e78efc8" translate="yes" xml:space="preserve">
          <source>This implementation returns &lt;code&gt;0L&lt;/code&gt;. Subclasses can change this behavior as long as the contract of &lt;a href=&quot;fileobject&quot;&gt;&lt;code&gt;FileObject&lt;/code&gt;&lt;/a&gt; is obeyed.</source>
          <target state="translated">이 구현은 &lt;code&gt;0L&lt;/code&gt; 을 반환합니다 . &lt;a href=&quot;fileobject&quot;&gt; &lt;code&gt;FileObject&lt;/code&gt; &lt;/a&gt; 의 계약을 준수 하는 한 서브 클래스는이 동작을 변경할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="d64e5ac8d3f658cbe256bb54a117217a2bd8b5fd" translate="yes" xml:space="preserve">
          <source>This implementation returns &lt;code&gt;entrySet().size()&lt;/code&gt;.</source>
          <target state="translated">이 구현은 &lt;code&gt;entrySet().size()&lt;/code&gt; 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="46c3da213422759dc708bac3ab8116393923e0d9" translate="yes" xml:space="preserve">
          <source>This implementation returns &lt;code&gt;listIterator(0)&lt;/code&gt;.</source>
          <target state="translated">이 구현은 &lt;code&gt;listIterator(0)&lt;/code&gt; 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="bd3af095c822c9240cdacce1cb763985dd95df24" translate="yes" xml:space="preserve">
          <source>This implementation returns &lt;code&gt;null&lt;/code&gt;. Subclasses can change this behavior as long as the contract of &lt;a href=&quot;javafileobject&quot;&gt;&lt;code&gt;JavaFileObject&lt;/code&gt;&lt;/a&gt; is obeyed.</source>
          <target state="translated">이 구현은 &lt;code&gt;null&lt;/code&gt; 을 리턴합니다 . &lt;a href=&quot;javafileobject&quot;&gt; &lt;code&gt;JavaFileObject&lt;/code&gt; &lt;/a&gt; 의 계약을 준수 하는 한 서브 클래스는이 동작을 변경할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="5d5e13dea15f16ec8302f9e2259fab6b5b2c4758" translate="yes" xml:space="preserve">
          <source>This implementation returns &lt;code&gt;size() == 0&lt;/code&gt;.</source>
          <target state="translated">이 구현은 &lt;code&gt;size() == 0&lt;/code&gt; 반환 합니다 .</target>
        </trans-unit>
        <trans-unit id="df25612aa66d4f90035fb6231f749225db7f8ac6" translate="yes" xml:space="preserve">
          <source>This implementation returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;offer&lt;/code&gt; succeeds, else throws an &lt;code&gt;IllegalStateException&lt;/code&gt;.</source>
          <target state="translated">이 구현은 반환 &lt;code&gt;true&lt;/code&gt; 경우 &lt;code&gt;offer&lt;/code&gt; 성공 다른, 발생 &lt;code&gt;IllegalStateException&lt;/code&gt; 이를 .</target>
        </trans-unit>
        <trans-unit id="fcc8f2abac7f7acb9536a3f5c83b27d8e81afe3e" translate="yes" xml:space="preserve">
          <source>This implementation returns a collection that subclasses &lt;a href=&quot;abstractcollection&quot;&gt;&lt;code&gt;AbstractCollection&lt;/code&gt;&lt;/a&gt;. The subclass's iterator method returns a &quot;wrapper object&quot; over this map's &lt;code&gt;entrySet()&lt;/code&gt; iterator. The &lt;code&gt;size&lt;/code&gt; method delegates to this map's &lt;code&gt;size&lt;/code&gt; method and the &lt;code&gt;contains&lt;/code&gt; method delegates to this map's &lt;code&gt;containsValue&lt;/code&gt; method.</source>
          <target state="translated">이 구현은 &lt;a href=&quot;abstractcollection&quot;&gt; &lt;code&gt;AbstractCollection&lt;/code&gt; &lt;/a&gt; 을 서브 클래 싱하는 컬렉션을 반환합니다 . 서브 클래스의 반복자 메소드는이 맵의 &lt;code&gt;entrySet()&lt;/code&gt; 반복자에 대해 &quot;래퍼 오브젝트&quot;를 리턴 합니다. &lt;code&gt;size&lt;/code&gt; 방법이지도의 대의원 &lt;code&gt;size&lt;/code&gt; 방식과는 &lt;code&gt;contains&lt;/code&gt; 이지도의에 방법 대표를 &lt;code&gt;containsValue&lt;/code&gt; 방법.</target>
        </trans-unit>
        <trans-unit id="8191a32f38fd937c6297e93d11b76ba70f9602c4" translate="yes" xml:space="preserve">
          <source>This implementation returns a list that subclasses &lt;code&gt;AbstractList&lt;/code&gt;. The subclass stores, in private fields, the offset of the subList within the backing list, the size of the subList (which can change over its lifetime), and the expected &lt;code&gt;modCount&lt;/code&gt; value of the backing list. There are two variants of the subclass, one of which implements &lt;code&gt;RandomAccess&lt;/code&gt;. If this list implements &lt;code&gt;RandomAccess&lt;/code&gt; the returned list will be an instance of the subclass that implements &lt;code&gt;RandomAccess&lt;/code&gt;.</source>
          <target state="translated">이 구현은 &lt;code&gt;AbstractList&lt;/code&gt; 를 서브 클래 싱하는 목록을 반환합니다 . 서브 클래스는 백킹리스트 내의 서브리스트의 오프셋, 서브리스트의 크기 (수명에 따라 변할 수있는) 및 백킹리스트 의 예상 &lt;code&gt;modCount&lt;/code&gt; 값을 개인 필드에 저장 합니다. 서브 클래스에는 두 가지 변형이 있으며 그중 하나는 &lt;code&gt;RandomAccess&lt;/code&gt; 를 구현 합니다. 이 목록 구현하면 &lt;code&gt;RandomAccess&lt;/code&gt; 반환 된 목록은 구현이 서브 클래스의 인스턴스가 될 것입니다 &lt;code&gt;RandomAccess&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3cab51ad575be1260ab2ed83ebe6d50da83f18f8" translate="yes" xml:space="preserve">
          <source>This implementation returns a set that subclasses &lt;a href=&quot;abstractset&quot;&gt;&lt;code&gt;AbstractSet&lt;/code&gt;&lt;/a&gt;. The subclass's iterator method returns a &quot;wrapper object&quot; over this map's &lt;code&gt;entrySet()&lt;/code&gt; iterator. The &lt;code&gt;size&lt;/code&gt; method delegates to this map's &lt;code&gt;size&lt;/code&gt; method and the &lt;code&gt;contains&lt;/code&gt; method delegates to this map's &lt;code&gt;containsKey&lt;/code&gt; method.</source>
          <target state="translated">이 구현은 &lt;a href=&quot;abstractset&quot;&gt; &lt;code&gt;AbstractSet&lt;/code&gt; &lt;/a&gt; 를 서브 클래스 화하는 세트를 돌려줍니다 . 서브 클래스의 반복자 메소드는이 맵의 &lt;code&gt;entrySet()&lt;/code&gt; 반복자에 대해 &quot;래퍼 오브젝트&quot;를 리턴 합니다. &lt;code&gt;size&lt;/code&gt; 방법이지도의 대의원 &lt;code&gt;size&lt;/code&gt; 방식과는 &lt;code&gt;contains&lt;/code&gt; 이지도의에 방법 위임을 &lt;code&gt;containsKey&lt;/code&gt; 의 방법.</target>
        </trans-unit>
        <trans-unit id="c0a2466ae2426c574f6ea8c8e11764f1022dc5f9" translate="yes" xml:space="preserve">
          <source>This implementation returns a straightforward implementation of the &lt;code&gt;ListIterator&lt;/code&gt; interface that extends the implementation of the &lt;code&gt;Iterator&lt;/code&gt; interface returned by the &lt;code&gt;iterator()&lt;/code&gt; method. The &lt;code&gt;ListIterator&lt;/code&gt; implementation relies on the backing list's &lt;code&gt;get(int)&lt;/code&gt;, &lt;code&gt;set(int, E)&lt;/code&gt;, &lt;code&gt;add(int, E)&lt;/code&gt; and &lt;code&gt;remove(int)&lt;/code&gt; methods.</source>
          <target state="translated">이 구현은 &lt;code&gt;iterator()&lt;/code&gt; 메소드에 의해 리턴 된 &lt;code&gt;Iterator&lt;/code&gt; 인터페이스 의 구현을 확장 하는 &lt;code&gt;ListIterator&lt;/code&gt; 인터페이스 의 간단한 구현을 리턴 합니다 . &lt;code&gt;ListIterator&lt;/code&gt; 구현은 백업 목록의에 의존 &lt;code&gt;get(int)&lt;/code&gt; , &lt;code&gt;set(int, E)&lt;/code&gt; , &lt;code&gt;add(int, E)&lt;/code&gt; 및 &lt;code&gt;remove(int)&lt;/code&gt; 방법.</target>
        </trans-unit>
        <trans-unit id="ce06f71af91689be6b60c9092b5a458e6979ddc3" translate="yes" xml:space="preserve">
          <source>This implementation returns a straightforward implementation of the iterator interface, relying on the backing list's &lt;code&gt;size()&lt;/code&gt;, &lt;code&gt;get(int)&lt;/code&gt;, and &lt;code&gt;remove(int)&lt;/code&gt; methods.</source>
          <target state="translated">이 구현은 지원 목록의 &lt;code&gt;size()&lt;/code&gt; , &lt;code&gt;get(int)&lt;/code&gt; 및 &lt;code&gt;remove(int)&lt;/code&gt; 메소드에 의존하여 반복자 인터페이스의 간단한 구현을 리턴 합니다.</target>
        </trans-unit>
        <trans-unit id="cb219c6439d78f7f174cb2d3ad915bb22e12743f" translate="yes" xml:space="preserve">
          <source>This implementation returns an array containing all the elements returned by this collection's iterator in the same order, stored in consecutive elements of the array, starting with index &lt;code&gt;0&lt;/code&gt;. If the number of elements returned by the iterator is too large to fit into the specified array, then the elements are returned in a newly allocated array with length equal to the number of elements returned by the iterator, even if the size of this collection changes during iteration, as might happen if the collection permits concurrent modification during iteration. The &lt;code&gt;size&lt;/code&gt; method is called only as an optimization hint; the correct result is returned even if the iterator returns a different number of elements.</source>
          <target state="translated">이 구현은,이 컬렉션의 반복자에 의해 돌려 주어진 모든 요소가 같은 순서로 배열의 연속 요소에 격납되어 인덱스 &lt;code&gt;0&lt;/code&gt; 로부터 시작되는 모든 요소를 ​​포함한 배열을 돌려줍니다 . 반복자가 반환 한 요소 수가 지정된 배열에 맞지 않을 경우이 컬렉션의 크기가 변경 되더라도 반복자가 반환 한 요소 수와 길이가 같은 새로 할당 된 배열로 반환됩니다. 콜렉션이 반복 중에 동시 수정을 허용하는 경우 발생할 수있는 반복 중. &lt;code&gt;size&lt;/code&gt; 방법은 최적화 힌트라고한다; 반복자가 다른 수의 요소를 리턴하더라도 올바른 결과가 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="ea412474fbde6ee2834444f6e6d242fb6287dcd4" translate="yes" xml:space="preserve">
          <source>This implementation returns an array containing all the elements returned by this collection's iterator, in the same order, stored in consecutive elements of the array, starting with index &lt;code&gt;0&lt;/code&gt;. The length of the returned array is equal to the number of elements returned by the iterator, even if the size of this collection changes during iteration, as might happen if the collection permits concurrent modification during iteration. The &lt;code&gt;size&lt;/code&gt; method is called only as an optimization hint; the correct result is returned even if the iterator returns a different number of elements.</source>
          <target state="translated">이 구현은,이 컬렉션의 반복자에 의해 돌려 주어진 모든 요소가 같은 순서로 배열의 연속 요소에 격납되어 인덱스 &lt;code&gt;0&lt;/code&gt; 로부터 시작되는 모든 요소를 ​​포함한 배열을 돌려줍니다 . 컬렉션이 반복 중에 동시에 수정을 허용하는 경우 발생할 수있는 것처럼이 컬렉션의 크기가 반복 중에 변경 되더라도 반환 된 배열의 길이는 반복자가 반환 한 요소 수와 같습니다. &lt;code&gt;size&lt;/code&gt; 방법은 최적화 힌트라고한다; 반복자가 다른 수의 요소를 리턴하더라도 올바른 결과가 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="9266c2e083a35167037f5508a8b6e979f053b125" translate="yes" xml:space="preserve">
          <source>This implementation returns false.</source>
          <target state="translated">이 구현은 false를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="704a9caba648812bf75c8fceaeaf7f825f422d89" translate="yes" xml:space="preserve">
          <source>This implementation returns the cause that was supplied via one of the constructors requiring a &lt;code&gt;Throwable&lt;/code&gt;, or that was set after creation with the &lt;a href=&quot;../../../java/lang/throwable#initCause-java.lang.Throwable-&quot;&gt;&lt;code&gt;Throwable.initCause(Throwable)&lt;/code&gt;&lt;/a&gt; method. While it is typically unnecessary to override this method, a subclass can override it to return a cause set by some other means. This is appropriate for a &quot;legacy chained throwable&quot; that predates the addition of chained exceptions to &lt;code&gt;Throwable&lt;/code&gt;. Note that it is</source>
          <target state="translated">이 구현은 &lt;code&gt;Throwable&lt;/code&gt; 이 필요한 생성자 중 하나를 통해 제공 되었거나 &lt;a href=&quot;../../../java/lang/throwable#initCause-java.lang.Throwable-&quot;&gt; &lt;code&gt;Throwable.initCause(Throwable)&lt;/code&gt; &lt;/a&gt; 메소드를 사용하여 작성된 원인을 리턴합니다 . 일반적으로이 메소드를 대체 할 필요는 없지만 서브 클래스는 다른 방법으로 원인 세트를 리턴하기 위해이를 대체 할 수 있습니다. 이는 체인 예외를 &lt;code&gt;Throwable&lt;/code&gt; 에 추가하기 이전의 &quot;레거시 체인 던지기 가능&quot;에 적합합니다 . 참고</target>
        </trans-unit>
        <trans-unit id="0806e0bd9953db61186592b082389efb9c9f7ef8" translate="yes" xml:space="preserve">
          <source>This implementation returns the cause that was supplied via one of the constructors requiring a &lt;code&gt;Throwable&lt;/code&gt;, or that was set after creation with the &lt;a href=&quot;throwable#initCause-java.lang.Throwable-&quot;&gt;&lt;code&gt;initCause(Throwable)&lt;/code&gt;&lt;/a&gt; method. While it is typically unnecessary to override this method, a subclass can override it to return a cause set by some other means. This is appropriate for a &quot;legacy chained throwable&quot; that predates the addition of chained exceptions to &lt;code&gt;Throwable&lt;/code&gt;. Note that it is</source>
          <target state="translated">이 구현은 &lt;code&gt;Throwable&lt;/code&gt; 이 필요한 생성자 중 하나를 통해 제공 되었거나 &lt;a href=&quot;throwable#initCause-java.lang.Throwable-&quot;&gt; &lt;code&gt;initCause(Throwable)&lt;/code&gt; &lt;/a&gt; 메소드를 사용하여 작성된 원인을 리턴합니다 . 일반적으로이 메소드를 대체 할 필요는 없지만 서브 클래스는 다른 방법으로 원인 세트를 리턴하기 위해이를 대체 할 수 있습니다. 이는 체인 예외를 &lt;code&gt;Throwable&lt;/code&gt; 에 추가하기 이전의 &quot;레거시 체인 던지기 가능&quot;에 적합합니다 . 참고</target>
        </trans-unit>
        <trans-unit id="28a2e3805ca1f4e6d4b6419bd0153cbdd02bd025" translate="yes" xml:space="preserve">
          <source>This implementation returns the characteristics as reported when created.</source>
          <target state="translated">이 구현은 작성시보고 된 특성을 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="06b0e25656160a2bd660c5d5da8f9216b5c2b92a" translate="yes" xml:space="preserve">
          <source>This implementation returns the estimated size as reported when created and, if the estimate size is known, decreases in size when split.</source>
          <target state="translated">이 구현은 생성시보고 된 예상 크기를 반환하고, 추정 크기를 알고있는 경우 분할시 크기가 줄어 듭니다.</target>
        </trans-unit>
        <trans-unit id="98329e6ec9710a436d16bdff3cab443e5566e472" translate="yes" xml:space="preserve">
          <source>This implementation returns the following value:</source>
          <target state="translated">이 구현은 다음 값을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="ee1a335203f53f9f48dde9056117773ff28d4e6e" translate="yes" xml:space="preserve">
          <source>This implementation returns the result of &lt;a href=&quot;number#intValue--&quot;&gt;&lt;code&gt;intValue()&lt;/code&gt;&lt;/a&gt; cast to a &lt;code&gt;byte&lt;/code&gt;.</source>
          <target state="translated">이 구현은 &lt;a href=&quot;number#intValue--&quot;&gt; &lt;code&gt;intValue()&lt;/code&gt; &lt;/a&gt; 캐스트 결과를 &lt;code&gt;byte&lt;/code&gt; 로 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="924fd521b97b725a535575773f690037451d3223" translate="yes" xml:space="preserve">
          <source>This implementation returns the result of &lt;a href=&quot;number#intValue--&quot;&gt;&lt;code&gt;intValue()&lt;/code&gt;&lt;/a&gt; cast to a &lt;code&gt;short&lt;/code&gt;.</source>
          <target state="translated">이 구현은 &lt;a href=&quot;number#intValue--&quot;&gt; &lt;code&gt;intValue()&lt;/code&gt; &lt;/a&gt; 캐스트 결과를 &lt;code&gt;short&lt;/code&gt; 로 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="cdebbceb0ccb7ee345e3d55ab419fec243b6be92" translate="yes" xml:space="preserve">
          <source>This implementation returns the result of &lt;code&gt;peek&lt;/code&gt; unless the queue is empty.</source>
          <target state="translated">이 구현은 큐가 비어 있지 않으면 &lt;code&gt;peek&lt;/code&gt; 결과를 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="2811fdbefc2411a03c42ac53f622bc96435355df" translate="yes" xml:space="preserve">
          <source>This implementation returns the result of &lt;code&gt;poll&lt;/code&gt; unless the queue is empty.</source>
          <target state="translated">이 구현은 큐가 비어 있지 않으면 &lt;code&gt;poll&lt;/code&gt; 결과를 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="80a8983cbfced2aba34489f927790fdd09e806e7" translate="yes" xml:space="preserve">
          <source>This implementation scans the enclosed elements.</source>
          <target state="translated">이 구현은 동봉 된 요소를 스캔합니다.</target>
        </trans-unit>
        <trans-unit id="2471a45a6da31959c0293a90c4124d8d52d212d0" translate="yes" xml:space="preserve">
          <source>This implementation simply returns &lt;code&gt;null&lt;/code&gt;; if the programmer desires thread-local variables to have an initial value other than &lt;code&gt;null&lt;/code&gt;, &lt;code&gt;ThreadLocal&lt;/code&gt; must be subclassed, and this method overridden. Typically, an anonymous inner class will be used.</source>
          <target state="translated">이 구현은 단순히 &lt;code&gt;null&lt;/code&gt; 을 반환합니다 . 프로그래머가 아닌 초기 값 갖도록 thread 로컬 변수를 원하면 &lt;code&gt;null&lt;/code&gt; , &lt;code&gt;ThreadLocal&lt;/code&gt; 를는 서브 클래스되어야하며,이 방법은 무시. 일반적으로 익명의 내부 클래스가 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="8fdeca85dae0066c2a40c745927f2be370fd3a7d" translate="yes" xml:space="preserve">
          <source>This implementation spares its clients from the unspecified, generally chaotic ordering provided by &lt;a href=&quot;hashmap&quot;&gt;&lt;code&gt;HashMap&lt;/code&gt;&lt;/a&gt; (and &lt;a href=&quot;hashtable&quot;&gt;&lt;code&gt;Hashtable&lt;/code&gt;&lt;/a&gt;), without incurring the increased cost associated with &lt;a href=&quot;treemap&quot;&gt;&lt;code&gt;TreeMap&lt;/code&gt;&lt;/a&gt;. It can be used to produce a copy of a map that has the same order as the original, regardless of the original map's implementation:</source>
          <target state="translated">이 구현 은 &lt;a href=&quot;treemap&quot;&gt; &lt;code&gt;TreeMap&lt;/code&gt; &lt;/a&gt; 과 관련된 비용 증가없이 &lt;a href=&quot;hashmap&quot;&gt; &lt;code&gt;HashMap&lt;/code&gt; &lt;/a&gt; (및 &lt;a href=&quot;hashtable&quot;&gt; &lt;code&gt;Hashtable&lt;/code&gt; &lt;/a&gt; )에서 제공하는 지정되지 않은 일반적으로 혼란스러운 순서에서 클라이언트를 보호합니다 . 원본지도의 구현에 관계없이 원본과 동일한 순서의지도 사본을 생성하는 데 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a0fc4962cd6567a4ad63d2821a4062c380719662" translate="yes" xml:space="preserve">
          <source>This implementation spares its clients from the unspecified, generally chaotic ordering provided by &lt;a href=&quot;hashset&quot;&gt;&lt;code&gt;HashSet&lt;/code&gt;&lt;/a&gt;, without incurring the increased cost associated with &lt;a href=&quot;treeset&quot;&gt;&lt;code&gt;TreeSet&lt;/code&gt;&lt;/a&gt;. It can be used to produce a copy of a set that has the same order as the original, regardless of the original set's implementation:</source>
          <target state="translated">이 구현 은 &lt;a href=&quot;treeset&quot;&gt; &lt;code&gt;TreeSet&lt;/code&gt; &lt;/a&gt; 과 관련된 비용 증가없이 &lt;a href=&quot;hashset&quot;&gt; &lt;code&gt;HashSet&lt;/code&gt; &lt;/a&gt; 에서 제공하는 지정되지 않은 일반적으로 혼란스러운 순서에서 클라이언트를 보호합니다 . 원본 세트의 구현에 관계없이 원본과 동일한 순서의 세트 사본을 생성하는 데 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="38ddaee3e2a8cc1216c7e211ce350572b21593fc" translate="yes" xml:space="preserve">
          <source>This implementation translates &lt;code&gt;value&lt;/code&gt; to a string with &lt;a href=&quot;../../lang/double#toString-double-&quot;&gt;&lt;code&gt;Double.toString(double)&lt;/code&gt;&lt;/a&gt; and invokes &lt;a href=&quot;abstractpreferences#put-java.lang.String-java.lang.String-&quot;&gt;&lt;code&gt;put(String,String)&lt;/code&gt;&lt;/a&gt; on the result.</source>
          <target state="translated">이 구현은 &lt;code&gt;value&lt;/code&gt; 을 &lt;a href=&quot;../../lang/double#toString-double-&quot;&gt; &lt;code&gt;Double.toString(double)&lt;/code&gt; &lt;/a&gt; 을 사용하여 문자열로 변환 하고 결과에서 &lt;a href=&quot;abstractpreferences#put-java.lang.String-java.lang.String-&quot;&gt; &lt;code&gt;put(String,String)&lt;/code&gt; &lt;/a&gt; 을 호출합니다 .</target>
        </trans-unit>
        <trans-unit id="c6ae24a4ad7f2a852e967502804260f467790765" translate="yes" xml:space="preserve">
          <source>This implementation translates &lt;code&gt;value&lt;/code&gt; to a string with &lt;a href=&quot;../../lang/float#toString-float-&quot;&gt;&lt;code&gt;Float.toString(float)&lt;/code&gt;&lt;/a&gt; and invokes &lt;a href=&quot;abstractpreferences#put-java.lang.String-java.lang.String-&quot;&gt;&lt;code&gt;put(String,String)&lt;/code&gt;&lt;/a&gt; on the result.</source>
          <target state="translated">이 구현은 &lt;code&gt;value&lt;/code&gt; 을 &lt;a href=&quot;../../lang/float#toString-float-&quot;&gt; &lt;code&gt;Float.toString(float)&lt;/code&gt; &lt;/a&gt; 을 사용하여 문자열로 변환 하고 결과에서 &lt;a href=&quot;abstractpreferences#put-java.lang.String-java.lang.String-&quot;&gt; &lt;code&gt;put(String,String)&lt;/code&gt; &lt;/a&gt; 을 호출합니다 .</target>
        </trans-unit>
        <trans-unit id="056cadfc097f302397f3fb575eec2d56d791a826" translate="yes" xml:space="preserve">
          <source>This implementation translates &lt;code&gt;value&lt;/code&gt; to a string with &lt;a href=&quot;../../lang/integer#toString-int-&quot;&gt;&lt;code&gt;Integer.toString(int)&lt;/code&gt;&lt;/a&gt; and invokes &lt;a href=&quot;abstractpreferences#put-java.lang.String-java.lang.String-&quot;&gt;&lt;code&gt;put(String,String)&lt;/code&gt;&lt;/a&gt; on the result.</source>
          <target state="translated">이 구현 은 &lt;a href=&quot;../../lang/integer#toString-int-&quot;&gt; &lt;code&gt;Integer.toString(int)&lt;/code&gt; &lt;/a&gt; 를 사용하여 &lt;code&gt;value&lt;/code&gt; 을 문자열로 변환 하고 결과에서 &lt;a href=&quot;abstractpreferences#put-java.lang.String-java.lang.String-&quot;&gt; &lt;code&gt;put(String,String)&lt;/code&gt; &lt;/a&gt; 을 호출합니다 .</target>
        </trans-unit>
        <trans-unit id="b23b5c5f5c0a34d89c0c59e2eb58a4b6d38735ab" translate="yes" xml:space="preserve">
          <source>This implementation translates &lt;code&gt;value&lt;/code&gt; to a string with &lt;a href=&quot;../../lang/long#toString-long-&quot;&gt;&lt;code&gt;Long.toString(long)&lt;/code&gt;&lt;/a&gt; and invokes &lt;a href=&quot;abstractpreferences#put-java.lang.String-java.lang.String-&quot;&gt;&lt;code&gt;put(String,String)&lt;/code&gt;&lt;/a&gt; on the result.</source>
          <target state="translated">이 구현은 &lt;code&gt;value&lt;/code&gt; 을 &lt;a href=&quot;../../lang/long#toString-long-&quot;&gt; &lt;code&gt;Long.toString(long)&lt;/code&gt; &lt;/a&gt; 을 사용하여 문자열로 변환 하고 결과에서 &lt;a href=&quot;abstractpreferences#put-java.lang.String-java.lang.String-&quot;&gt; &lt;code&gt;put(String,String)&lt;/code&gt; &lt;/a&gt; 을 호출합니다 .</target>
        </trans-unit>
        <trans-unit id="8fa99b352d0f068eb1a697f5edfb312d215c767f" translate="yes" xml:space="preserve">
          <source>This implementation translates &lt;code&gt;value&lt;/code&gt; to a string with &lt;a href=&quot;../../lang/string#valueOf-boolean-&quot;&gt;&lt;code&gt;String.valueOf(boolean)&lt;/code&gt;&lt;/a&gt; and invokes &lt;a href=&quot;abstractpreferences#put-java.lang.String-java.lang.String-&quot;&gt;&lt;code&gt;put(String,String)&lt;/code&gt;&lt;/a&gt; on the result.</source>
          <target state="translated">이 구현은 &lt;code&gt;value&lt;/code&gt; 을 &lt;a href=&quot;../../lang/string#valueOf-boolean-&quot;&gt; &lt;code&gt;String.valueOf(boolean)&lt;/code&gt; &lt;/a&gt; 를 사용하여 문자열로 변환 하고 결과에서 &lt;a href=&quot;abstractpreferences#put-java.lang.String-java.lang.String-&quot;&gt; &lt;code&gt;put(String,String)&lt;/code&gt; &lt;/a&gt; 을 호출합니다 .</target>
        </trans-unit>
        <trans-unit id="ecc55d2fb2670411be5184623c7fed4b584a48eb" translate="yes" xml:space="preserve">
          <source>This implementation traverses the list backwards, from the last element up to the second, repeatedly swapping a randomly selected element into the &quot;current position&quot;. Elements are randomly selected from the portion of the list that runs from the first element to the current position, inclusive.</source>
          <target state="translated">이 구현은 마지막 요소에서 두 번째 요소까지 목록을 거꾸로 이동하여 무작위로 선택된 요소를 &quot;현재 위치&quot;로 반복적으로 교체합니다. 요소는 목록에서 첫 번째 요소부터 현재 위치까지 무작위로 선택됩니다.</target>
        </trans-unit>
        <trans-unit id="393c9593a9c4850ebf28971767bc3b70ee28ff1a" translate="yes" xml:space="preserve">
          <source>This implementation traverses the queue to determine presence of the given thread.</source>
          <target state="translated">이 구현은 큐를 통과하여 주어진 스레드의 존재를 판별합니다.</target>
        </trans-unit>
        <trans-unit id="cef951e7879d4c1876cd9e5bc5f7c44351095af7" translate="yes" xml:space="preserve">
          <source>This implementation uses &lt;a href=&quot;valuerange#getMinimum--&quot;&gt;&lt;code&gt;getMinimum()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;valuerange#getMaximum--&quot;&gt;&lt;code&gt;getMaximum()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 구현은 &lt;a href=&quot;valuerange#getMinimum--&quot;&gt; &lt;code&gt;getMinimum()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;valuerange#getMaximum--&quot;&gt; &lt;code&gt;getMaximum()&lt;/code&gt; &lt;/a&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="927eb81b8c5081c20bc3ef1e685a1e076d590bb3" translate="yes" xml:space="preserve">
          <source>This implementation uses a loop of &lt;code&gt;this.wait&lt;/code&gt; calls conditioned on &lt;code&gt;this.isAlive&lt;/code&gt;. As a thread terminates the &lt;code&gt;this.notifyAll&lt;/code&gt; method is invoked. It is recommended that applications not use &lt;code&gt;wait&lt;/code&gt;, &lt;code&gt;notify&lt;/code&gt;, or &lt;code&gt;notifyAll&lt;/code&gt; on &lt;code&gt;Thread&lt;/code&gt; instances.</source>
          <target state="translated">이 구현은 &lt;code&gt;this.wait&lt;/code&gt; 에 &lt;code&gt;this.isAlive&lt;/code&gt; 조정 된 this.wait 호출 의 루프를 사용합니다 . 스레드가 종료되면 &lt;code&gt;this.notifyAll&lt;/code&gt; 메소드가 호출됩니다. 애플리케이션이 &lt;code&gt;Thread&lt;/code&gt; 인스턴스 에서 &lt;code&gt;wait&lt;/code&gt; , &lt;code&gt;notify&lt;/code&gt; 또는 &lt;code&gt;notifyAll&lt;/code&gt; 을 사용하지 않는 것이 좋습니다 .</target>
        </trans-unit>
        <trans-unit id="8a7a4c7205be9eb69ea10599d01ef228d924269f" translate="yes" xml:space="preserve">
          <source>This implementation uses exactly the code that is used to define the list hash function in the documentation for the &lt;a href=&quot;list#hashCode--&quot;&gt;&lt;code&gt;List.hashCode()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">이 구현은 &lt;a href=&quot;list#hashCode--&quot;&gt; &lt;code&gt;List.hashCode()&lt;/code&gt; &lt;/a&gt; 메소드 의 문서에서 목록 해시 함수를 정의하는 데 사용되는 코드를 정확하게 사용합니다 .</target>
        </trans-unit>
        <trans-unit id="acfbb2c041d33577954cd004acf9a51be65d50da" translate="yes" xml:space="preserve">
          <source>This implementation uses the &quot;brute force&quot; technique of iterating over the source list, looking for a match with the target at each location in turn.</source>
          <target state="translated">이 구현은 소스리스트를 반복하는 &quot;브 루트 포스 (brute force)&quot;기술을 사용하여 각 위치의 타겟과 차례로 일치하는 것을 찾습니다.</target>
        </trans-unit>
        <trans-unit id="8dde92dccf9d72b58e5fe332fe33651b12d4f2ce" translate="yes" xml:space="preserve">
          <source>This implementation uses the &quot;brute force&quot; technique of scanning over the source list, looking for a match with the target at each location in turn.</source>
          <target state="translated">이 구현은 소스 목록을 스캔하는 &quot;브 루트 포스 (brute force)&quot;기술을 사용하여 각 위치에서 대상과 차례로 일치하는 것을 찾습니다.</target>
        </trans-unit>
        <trans-unit id="49934b26305a4f375c48a4c6d7996c96b3439772" translate="yes" xml:space="preserve">
          <source>This implementation uses the definition in &lt;a href=&quot;../list#hashCode--&quot;&gt;&lt;code&gt;List.hashCode()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 구현은 &lt;a href=&quot;../list#hashCode--&quot;&gt; &lt;code&gt;List.hashCode()&lt;/code&gt; &lt;/a&gt; 의 정의를 사용합니다 .</target>
        </trans-unit>
        <trans-unit id="c95f555f1ecee25c437e8120bab1a5963d7c3aca" translate="yes" xml:space="preserve">
          <source>This implementation uses the maximum precision permitted.</source>
          <target state="translated">이 구현은 허용되는 최대 정밀도를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="0d43eb1ea18d7f470c63957e171ef2dc09c5dceb" translate="yes" xml:space="preserve">
          <source>This implementation visits a &lt;code&gt;UnionType&lt;/code&gt; by calling &lt;code&gt;defaultAction&lt;/code&gt;.</source>
          <target state="translated">이 구현은 &lt;code&gt;defaultAction&lt;/code&gt; 을 호출 하여 &lt;code&gt;UnionType&lt;/code&gt; 을 방문 합니다 .</target>
        </trans-unit>
        <trans-unit id="8091c6a3910dfa3d0a46046879296ccd04d0645e" translate="yes" xml:space="preserve">
          <source>This implementation visits an &lt;code&gt;IntersectionType&lt;/code&gt; by calling &lt;code&gt;defaultAction&lt;/code&gt;.</source>
          <target state="translated">이 구현은 &lt;code&gt;defaultAction&lt;/code&gt; 을 호출 하여 &lt;code&gt;IntersectionType&lt;/code&gt; 을 방문 합니다 .</target>
        </trans-unit>
        <trans-unit id="854e75472c0c156f0fb1a19fed8da6fd2cd49cf4" translate="yes" xml:space="preserve">
          <source>This implements the 'Language-Tag' production of BCP47, and so supports grandfathered (regular and irregular) as well as private use language tags. Stand alone private use tags are represented as empty language and extension 'x-whatever', and grandfathered tags are converted to their canonical replacements where they exist.</source>
          <target state="translated">이것은 BCP47의 'Language-Tag'제작을 구현하므로 개인용 언어 태그뿐만 아니라 할아버지 (정규 및 비정규)를 지원합니다. 독립형 개인용 태그는 빈 언어 및 확장명 'x-whatever'로 표시되며 할아버지 태그는 기존의 표준 대체 태그로 변환됩니다.</target>
        </trans-unit>
        <trans-unit id="7345571d9209f5573f66233070aae319f4ff02f7" translate="yes" xml:space="preserve">
          <source>This information is particularly useful in session management policies. For example, a session manager thread could leave all sessions in a given context which haven't been used in a long time; or, the sessions might be sorted according to age to optimize some task.</source>
          <target state="translated">이 정보는 특히 세션 관리 정책에 유용합니다. 예를 들어, 세션 관리자 스레드는 오랫동안 사용되지 않은 주어진 컨텍스트에서 모든 세션을 남길 수 있습니다. 또는 세션을 연령에 따라 정렬하여 일부 작업을 최적화 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7d288a196331108d79bb2f97ac268bedf329eb47" translate="yes" xml:space="preserve">
          <source>This instance is immutable and unaffected by this method call.</source>
          <target state="translated">이 인스턴스는 변경할 수 없으며이 메서드 호출의 영향을받지 않습니다.</target>
        </trans-unit>
        <trans-unit id="469d4656dd9d4e02473925c545e0c3355ec9c2a6" translate="yes" xml:space="preserve">
          <source>This integer attribute's value and &lt;code&gt;object&lt;/code&gt;'s value are equal.</source>
          <target state="translated">이 정수 속성의 값과 &lt;code&gt;object&lt;/code&gt; 의 값이 같습니다.</target>
        </trans-unit>
        <trans-unit id="ad1b5102ef95da02a5e4be12b417c932fd8c0ee9" translate="yes" xml:space="preserve">
          <source>This interface additionally defines methods &lt;code&gt;firstEntry&lt;/code&gt;, &lt;code&gt;pollFirstEntry&lt;/code&gt;, &lt;code&gt;lastEntry&lt;/code&gt;, and &lt;code&gt;pollLastEntry&lt;/code&gt; that return and/or remove the least and greatest mappings, if any exist, else returning &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">이 인터페이스는 또한 방법 정의 &lt;code&gt;firstEntry&lt;/code&gt; , &lt;code&gt;pollFirstEntry&lt;/code&gt; , &lt;code&gt;lastEntry&lt;/code&gt; , 및 &lt;code&gt;pollLastEntry&lt;/code&gt; 반환 및 / 또는 최소 및 최대 매핑을 제거, 모든 존재하는 경우, 다른 반환이 &lt;code&gt;null&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7f5c5a511f52126b4f376d52088ca0ab8a176fbd" translate="yes" xml:space="preserve">
          <source>This interface allows arbitrary objects to be &quot;wrapped&quot; by instances of &lt;code&gt;ImageInputStream&lt;/code&gt;. For example, a particular &lt;code&gt;ImageInputStreamSpi&lt;/code&gt; might allow a generic &lt;code&gt;InputStream&lt;/code&gt; to be used as an input source; another might take input from a &lt;code&gt;URL&lt;/code&gt;.</source>
          <target state="translated">이 인터페이스는 &lt;code&gt;ImageInputStream&lt;/code&gt; 의 인스턴스에 의해 임의의 객체가 &quot;랩핑&quot;될 수있게합니다 . 예를 들어, 특정 &lt;code&gt;ImageInputStreamSpi&lt;/code&gt; 를 사용하면 일반 &lt;code&gt;InputStream&lt;/code&gt; 을 입력 소스로 사용할 수 있습니다. 다른 하나는 &lt;code&gt;URL&lt;/code&gt; 에서 입력을받을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="51d4031fe0d1457beffb452131aeb094f21c3e2e" translate="yes" xml:space="preserve">
          <source>This interface allows arbitrary objects to be &quot;wrapped&quot; by instances of &lt;code&gt;ImageOutputStream&lt;/code&gt;. For example, a particular &lt;code&gt;ImageOutputStreamSpi&lt;/code&gt; might allow a generic &lt;code&gt;OutputStream&lt;/code&gt; to be used as a destination; another might output to a &lt;code&gt;File&lt;/code&gt; or to a device such as a serial port.</source>
          <target state="translated">이 인터페이스는 &lt;code&gt;ImageOutputStream&lt;/code&gt; 의 인스턴스에 의해 임의의 객체를 &quot;랩핑&quot;할 수있게합니다 . 예를 들어 특정 &lt;code&gt;ImageOutputStreamSpi&lt;/code&gt; 를 사용하면 일반 &lt;code&gt;OutputStream&lt;/code&gt; 을 대상으로 사용할 수 있습니다. 다른 장치 는 &lt;code&gt;File&lt;/code&gt; 또는 직렬 포트와 같은 장치로 출력 될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="6ebe017d830506ee915f100aedda7de89ae89748" translate="yes" xml:space="preserve">
          <source>This interface contains a single method, &lt;code&gt;checkGuard&lt;/code&gt;, with a single &lt;code&gt;object&lt;/code&gt; argument. &lt;code&gt;checkGuard&lt;/code&gt; is invoked (by the GuardedObject &lt;code&gt;getObject&lt;/code&gt; method) to determine whether or not to allow access to the object.</source>
          <target state="translated">이 인터페이스에는 단일 &lt;code&gt;object&lt;/code&gt; 인수 와 함께 단일 메소드 인 &lt;code&gt;checkGuard&lt;/code&gt; 가 포함 됩니다. &lt;code&gt;checkGuard&lt;/code&gt; 는 (GuardedObject &lt;code&gt;getObject&lt;/code&gt; 메소드에 의해) 호출 되어 객체에 대한 액세스 허용 여부를 결정합니다.</target>
        </trans-unit>
        <trans-unit id="c306b2d9261b2da8361315fad5be5dd3c3d93fb9" translate="yes" xml:space="preserve">
          <source>This interface contains a single method, &lt;code&gt;namingExceptionThrown()&lt;/code&gt;, that must be implemented so that the listener can be notified of exceptions that are thrown (by the service provider) while gathering information about the events that they're interested in. When this method is invoked, the listener has been automatically deregistered from the &lt;code&gt;EventContext&lt;/code&gt; with which it has registered.</source>
          <target state="translated">이 인터페이스에는 단일 메소드 인 &lt;code&gt;namingExceptionThrown()&lt;/code&gt; 이 포함되어 있습니다.이 메소드 는 리스너에게 관심있는 이벤트에 대한 정보를 수집하는 동안 서비스 제공 업체가 예외를 통지 할 수 있도록 구현되어야합니다. 호출되면 리스너가 등록 된 &lt;code&gt;EventContext&lt;/code&gt; 에서 리스너가 자동으로 등록 취소 되었습니다.</target>
        </trans-unit>
        <trans-unit id="5ca4236b5f433f71783d4ddd093a03eff5e70357" translate="yes" xml:space="preserve">
          <source>This interface contains no methods or constants. Its only purpose is to group (and provide type safety for) all key specifications. All key specifications must implement this interface.</source>
          <target state="translated">이 인터페이스에는 메서드 나 상수가 없습니다. 유일한 목적은 모든 주요 사양을 그룹화하고 (유형 안전을 제공하는) 것입니다. 모든 주요 사양은이 인터페이스를 구현해야합니다.</target>
        </trans-unit>
        <trans-unit id="b06d28d0bacdca8e2f018032211114ee0a66fe51" translate="yes" xml:space="preserve">
          <source>This interface contains no methods or constants. Its only purpose is to group (and provide type safety for) all parameter specifications. All parameter specifications must implement this interface.</source>
          <target state="translated">이 인터페이스에는 메서드 나 상수가 없습니다. 유일한 목적은 모든 매개 변수 사양을 그룹화 (및 유형 안전을 제공)하는 것입니다. 모든 매개 변수 스펙은이 인터페이스를 구현해야합니다.</target>
        </trans-unit>
        <trans-unit id="b4045188daf07ad611d2a99cfb0c7d811dfd285c" translate="yes" xml:space="preserve">
          <source>This interface contains query methods used to determine the results of a match against a regular expression. The match boundaries, groups and group boundaries can be seen but not modified through a &lt;code&gt;MatchResult&lt;/code&gt;.</source>
          <target state="translated">이 인터페이스에는 정규식과의 일치 결과를 판별하는 데 사용되는 조회 메소드가 포함되어 있습니다. 일치 경계, 그룹 및 그룹 경계는 &lt;code&gt;MatchResult&lt;/code&gt; 를 통해 볼 수 있지만 수정할 수는 없습니다 .</target>
        </trans-unit>
        <trans-unit id="e517a421bef28408a320ff897d3311fc46251ae0" translate="yes" xml:space="preserve">
          <source>This interface declares the same methods as the class &lt;a href=&quot;../mbeanattributeinfo&quot;&gt;&lt;code&gt;MBeanAttributeInfo&lt;/code&gt;&lt;/a&gt;. A class implementing this interface (typically &lt;a href=&quot;openmbeanattributeinfosupport&quot;&gt;&lt;code&gt;OpenMBeanAttributeInfoSupport&lt;/code&gt;&lt;/a&gt;) should extend &lt;a href=&quot;../mbeanattributeinfo&quot;&gt;&lt;code&gt;MBeanAttributeInfo&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 인터페이스는 클래스 &lt;a href=&quot;../mbeanattributeinfo&quot;&gt; &lt;code&gt;MBeanAttributeInfo&lt;/code&gt; &lt;/a&gt; 와 같은 메소드를 선언합니다 . 이 인터페이스를 구현하는 클래스 (일반적으로 &lt;a href=&quot;openmbeanattributeinfosupport&quot;&gt; &lt;code&gt;OpenMBeanAttributeInfoSupport&lt;/code&gt; &lt;/a&gt; )는 &lt;a href=&quot;../mbeanattributeinfo&quot;&gt; &lt;code&gt;MBeanAttributeInfo&lt;/code&gt; &lt;/a&gt; 를 확장해야합니다 .</target>
        </trans-unit>
        <trans-unit id="edbb1b3ad396afa62ac46dd78ac9b0088f6ef7fb" translate="yes" xml:space="preserve">
          <source>This interface declares the same methods as the class &lt;a href=&quot;../mbeanconstructorinfo&quot;&gt;&lt;code&gt;MBeanConstructorInfo&lt;/code&gt;&lt;/a&gt;. A class implementing this interface (typically &lt;a href=&quot;openmbeanconstructorinfosupport&quot;&gt;&lt;code&gt;OpenMBeanConstructorInfoSupport&lt;/code&gt;&lt;/a&gt;) should extend &lt;a href=&quot;../mbeanconstructorinfo&quot;&gt;&lt;code&gt;MBeanConstructorInfo&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 인터페이스는 클래스 &lt;a href=&quot;../mbeanconstructorinfo&quot;&gt; &lt;code&gt;MBeanConstructorInfo&lt;/code&gt; &lt;/a&gt; 와 같은 메소드를 선언합니다 . 이 인터페이스를 구현하는 클래스 (일반적으로 &lt;a href=&quot;openmbeanconstructorinfosupport&quot;&gt; &lt;code&gt;OpenMBeanConstructorInfoSupport&lt;/code&gt; &lt;/a&gt; )는 &lt;a href=&quot;../mbeanconstructorinfo&quot;&gt; &lt;code&gt;MBeanConstructorInfo&lt;/code&gt; &lt;/a&gt; 를 확장해야합니다 .</target>
        </trans-unit>
        <trans-unit id="d3bc2e3a828cade27afa90478db2c1f08f16ccff" translate="yes" xml:space="preserve">
          <source>This interface declares the same methods as the class &lt;a href=&quot;../mbeaninfo&quot;&gt;&lt;code&gt;MBeanInfo&lt;/code&gt;&lt;/a&gt;. A class implementing this interface (typically &lt;a href=&quot;openmbeaninfosupport&quot;&gt;&lt;code&gt;OpenMBeanInfoSupport&lt;/code&gt;&lt;/a&gt;) should extend &lt;a href=&quot;../mbeaninfo&quot;&gt;&lt;code&gt;MBeanInfo&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 인터페이스는 클래스 &lt;a href=&quot;../mbeaninfo&quot;&gt; &lt;code&gt;MBeanInfo&lt;/code&gt; &lt;/a&gt; 와 같은 메소드를 선언합니다 . 이 인터페이스를 구현하는 클래스 (일반적으로 &lt;a href=&quot;openmbeaninfosupport&quot;&gt; &lt;code&gt;OpenMBeanInfoSupport&lt;/code&gt; &lt;/a&gt; )는 &lt;a href=&quot;../mbeaninfo&quot;&gt; &lt;code&gt;MBeanInfo&lt;/code&gt; &lt;/a&gt; 를 확장해야합니다 .</target>
        </trans-unit>
        <trans-unit id="7388b34f799b7c48b65115bb03d5989736f99078" translate="yes" xml:space="preserve">
          <source>This interface declares the same methods as the class &lt;a href=&quot;../mbeanoperationinfo&quot;&gt;&lt;code&gt;MBeanOperationInfo&lt;/code&gt;&lt;/a&gt;. A class implementing this interface (typically &lt;a href=&quot;openmbeanoperationinfosupport&quot;&gt;&lt;code&gt;OpenMBeanOperationInfoSupport&lt;/code&gt;&lt;/a&gt;) should extend &lt;a href=&quot;../mbeanoperationinfo&quot;&gt;&lt;code&gt;MBeanOperationInfo&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 인터페이스는 클래스 &lt;a href=&quot;../mbeanoperationinfo&quot;&gt; &lt;code&gt;MBeanOperationInfo&lt;/code&gt; &lt;/a&gt; 와 같은 메소드를 선언합니다 . 이 인터페이스를 구현하는 클래스 (일반적으로 &lt;a href=&quot;openmbeanoperationinfosupport&quot;&gt; &lt;code&gt;OpenMBeanOperationInfoSupport&lt;/code&gt; &lt;/a&gt; )는 &lt;a href=&quot;../mbeanoperationinfo&quot;&gt; &lt;code&gt;MBeanOperationInfo&lt;/code&gt; &lt;/a&gt; 를 확장해야합니다 .</target>
        </trans-unit>
        <trans-unit id="a9c2d28b9cc1668c9c8dd51118539c24ca4e713a" translate="yes" xml:space="preserve">
          <source>This interface declares the same methods as the class &lt;a href=&quot;../mbeanparameterinfo&quot;&gt;&lt;code&gt;MBeanParameterInfo&lt;/code&gt;&lt;/a&gt;. A class implementing this interface (typically &lt;a href=&quot;openmbeanparameterinfosupport&quot;&gt;&lt;code&gt;OpenMBeanParameterInfoSupport&lt;/code&gt;&lt;/a&gt;) should extend &lt;a href=&quot;../mbeanparameterinfo&quot;&gt;&lt;code&gt;MBeanParameterInfo&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 인터페이스는 클래스 &lt;a href=&quot;../mbeanparameterinfo&quot;&gt; &lt;code&gt;MBeanParameterInfo&lt;/code&gt; &lt;/a&gt; 와 같은 메소드를 선언합니다 . 이 인터페이스를 구현하는 클래스 (일반적으로 &lt;a href=&quot;openmbeanparameterinfosupport&quot;&gt; &lt;code&gt;OpenMBeanParameterInfoSupport&lt;/code&gt; &lt;/a&gt; )는 &lt;a href=&quot;../mbeanparameterinfo&quot;&gt; &lt;code&gt;MBeanParameterInfo&lt;/code&gt; &lt;/a&gt; 를 확장해야합니다 .</target>
        </trans-unit>
        <trans-unit id="fcee2a5734dc97a45d6e39882824a8302ac40340" translate="yes" xml:space="preserve">
          <source>This interface defines a factory for &lt;code&gt;URL&lt;/code&gt; stream protocol handlers.</source>
          <target state="translated">이 인터페이스는 &lt;code&gt;URL&lt;/code&gt; 스트림 프로토콜 핸들러 의 팩토리를 정의합니다 .</target>
        </trans-unit>
        <trans-unit id="6be0f6bc90087933dbaff7fed910ca6ce8d677ae" translate="yes" xml:space="preserve">
          <source>This interface defines a factory for content handlers.</source>
          <target state="translated">이 인터페이스는 컨텐츠 핸들러의 팩토리를 정의합니다.</target>
        </trans-unit>
        <trans-unit id="23eae2af0036167828d21e49398391e8ffb220dc" translate="yes" xml:space="preserve">
          <source>This interface defines a factory for content handlers. An implementation of this interface should map a MIME type into an instance of &lt;code&gt;ContentHandler&lt;/code&gt;.</source>
          <target state="translated">이 인터페이스는 컨텐츠 핸들러의 팩토리를 정의합니다. 이 인터페이스의 구현은 MIME 형식을 &lt;code&gt;ContentHandler&lt;/code&gt; 인스턴스에 매핑해야합니다 .</target>
        </trans-unit>
        <trans-unit id="7f82e9602edf403031f30e6736d4d8d0c2c9dddf" translate="yes" xml:space="preserve">
          <source>This interface defines a factory for datagram socket implementations.</source>
          <target state="translated">이 인터페이스는 데이터 그램 소켓 구현을위한 팩토리를 정의합니다.</target>
        </trans-unit>
        <trans-unit id="10f03f5ccdc6793ded5325daadffb335f19bf06d" translate="yes" xml:space="preserve">
          <source>This interface defines a factory for datagram socket implementations. It is used by the classes &lt;code&gt;DatagramSocket&lt;/code&gt; to create actual socket implementations.</source>
          <target state="translated">이 인터페이스는 데이터 그램 소켓 구현을위한 팩토리를 정의합니다. &lt;code&gt;DatagramSocket&lt;/code&gt; 클래스에서 실제 소켓 구현을 작성 하는 데 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="5afb356be5d880813cca90a36ac9be14f4b3c045" translate="yes" xml:space="preserve">
          <source>This interface defines a factory for socket implementations.</source>
          <target state="translated">이 인터페이스는 소켓 구현을위한 팩토리를 정의합니다.</target>
        </trans-unit>
        <trans-unit id="c5579eb760f1a48c6dd85e66c97f05e2028b2514" translate="yes" xml:space="preserve">
          <source>This interface defines a factory for socket implementations. It is used by the classes &lt;code&gt;Socket&lt;/code&gt; and &lt;code&gt;ServerSocket&lt;/code&gt; to create actual socket implementations.</source>
          <target state="translated">이 인터페이스는 소켓 구현을위한 팩토리를 정의합니다. &lt;code&gt;Socket&lt;/code&gt; 및 &lt;code&gt;ServerSocket&lt;/code&gt; 클래스에서 실제 소켓 구현을 작성 하는 데 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="21a8a1555cc1a14eef6e86573ad7336663a3b025" translate="yes" xml:space="preserve">
          <source>This interface defines a protocol for bidirectional iteration over text.</source>
          <target state="translated">이 인터페이스는 텍스트에 대한 양방향 반복 프로토콜을 정의합니다.</target>
        </trans-unit>
        <trans-unit id="76fa2a2f8d529eb8423e7c062f1de625cf9ed5e3" translate="yes" xml:space="preserve">
          <source>This interface defines a protocol for bidirectional iteration over text. The iterator iterates over a bounded sequence of characters. Characters are indexed with values beginning with the value returned by getBeginIndex() and continuing through the value returned by getEndIndex()-1.</source>
          <target state="translated">이 인터페이스는 텍스트에 대한 양방향 반복 프로토콜을 정의합니다. 반복자는 한정된 문자 시퀀스를 반복합니다. 문자는 getBeginIndex ()에 의해 리턴 된 값으로 시작하고 getEndIndex ()-1에 의해 리턴 된 값을 계속하여 값으로 색인화됩니다.</target>
        </trans-unit>
        <trans-unit id="448282b92fb9bf9a3db24d428ff888e802d4b79e" translate="yes" xml:space="preserve">
          <source>This interface defines methods to access the elements at both ends of the deque. Methods are provided to insert, remove, and examine the element. Each of these methods exists in two forms: one throws an exception if the operation fails, the other returns a special value (either &lt;code&gt;null&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt;, depending on the operation). The latter form of the insert operation is designed specifically for use with capacity-restricted &lt;code&gt;Deque&lt;/code&gt; implementations; in most implementations, insert operations cannot fail.</source>
          <target state="translated">이 인터페이스는 deque의 양쪽 끝에있는 요소에 액세스하는 메소드를 정의합니다. 요소를 삽입, 제거 및 검사하는 방법이 제공됩니다. 이러한 각 메서드는 두 가지 형태로 존재합니다. 하나는 작업이 실패하면 예외가 발생하고 다른 하나 는 작업에 따라 특수 값 ( &lt;code&gt;null&lt;/code&gt; 또는 &lt;code&gt;false&lt;/code&gt; )을 반환합니다 . 후자의 삽입 작업 형식은 용량 제한 &lt;code&gt;Deque&lt;/code&gt; 구현 에 사용하도록 특별히 설계되었습니다 . 대부분의 구현에서 삽입 작업은 실패 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="bda0cf1fe07a11059d91980163f82518b8f89324" translate="yes" xml:space="preserve">
          <source>This interface defines several convenient methods for accessing system properties about the Java virtual machine.</source>
          <target state="translated">이 인터페이스는 Java 가상 머신에 대한 시스템 특성에 액세스하기위한 몇 가지 편리한 방법을 정의합니다.</target>
        </trans-unit>
        <trans-unit id="5b872681f860ac20536c7b74f06f8a0b7c0e0bb9" translate="yes" xml:space="preserve">
          <source>This interface defines several convenient methods for accessing system properties about the operating system on which the Java virtual machine is running.</source>
          <target state="translated">이 인터페이스는 JVM (Java Virtual Machine)이 실행중인 운영 체제에 대한 시스템 특성에 액세스하기위한 몇 가지 편리한 방법을 정의합니다.</target>
        </trans-unit>
        <trans-unit id="18ca3c52abe340e512dfa5f3e878cb2eb10780e3" translate="yes" xml:space="preserve">
          <source>This interface defines the &lt;a href=&quot;watchable#register-java.nio.file.WatchService-java.nio.file.WatchEvent.Kind:A-java.nio.file.WatchEvent.Modifier...-&quot;&gt;&lt;code&gt;register&lt;/code&gt;&lt;/a&gt; method to register the object with a &lt;a href=&quot;watchservice&quot;&gt;&lt;code&gt;WatchService&lt;/code&gt;&lt;/a&gt; returning a &lt;a href=&quot;watchkey&quot;&gt;&lt;code&gt;WatchKey&lt;/code&gt;&lt;/a&gt; to represent the registration. An object may be registered with more than one watch service. Registration with a watch service is cancelled by invoking the key's &lt;a href=&quot;watchkey#cancel--&quot;&gt;&lt;code&gt;cancel&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">이 인터페이스는 정의 &lt;a href=&quot;watchable#register-java.nio.file.WatchService-java.nio.file.WatchEvent.Kind:A-java.nio.file.WatchEvent.Modifier...-&quot;&gt; &lt;code&gt;register&lt;/code&gt; &lt;/a&gt; 로 개체를 등록하는 방법 &lt;a href=&quot;watchservice&quot;&gt; &lt;code&gt;WatchService&lt;/code&gt; 가&lt;/a&gt; 복귀 &lt;a href=&quot;watchkey&quot;&gt; &lt;code&gt;WatchKey&lt;/code&gt; &lt;/a&gt; 등록을 대표한다. 하나 이상의 시계 서비스에 개체가 등록되어있을 수 있습니다. 시계의 등록은 키의 &lt;a href=&quot;watchkey#cancel--&quot;&gt; &lt;code&gt;cancel&lt;/code&gt; &lt;/a&gt; 방법 을 호출하여 취소 됩니다.</target>
        </trans-unit>
        <trans-unit id="20613db0060f764304efbc08ba3ce707d7d086e9" translate="yes" xml:space="preserve">
          <source>This interface does not define methods for initially creating, forcibly completing normally or exceptionally, probing completion status or results, or awaiting completion of a stage. Implementations of CompletionStage may provide means of achieving such effects, as appropriate. Method &lt;a href=&quot;completionstage#toCompletableFuture--&quot;&gt;&lt;code&gt;toCompletableFuture()&lt;/code&gt;&lt;/a&gt; enables interoperability among different implementations of this interface by providing a common conversion type.</source>
          <target state="translated">이 인터페이스는 초기에 작성, 강제 또는 정상적으로 완료, 완료 상태 또는 결과 조사 또는 스테이지 완료를 기다리는 메소드를 정의하지 않습니다. CompletionStage의 구현은 적절한 경우 그러한 효과를 달성 할 수있는 수단을 제공 할 수 있습니다. Method &lt;a href=&quot;completionstage#toCompletableFuture--&quot;&gt; &lt;code&gt;toCompletableFuture()&lt;/code&gt; &lt;/a&gt; 는 공통 변환 유형을 제공하여이 인터페이스의 여러 구현간에 상호 운용성을 가능하게합니다.</target>
        </trans-unit>
        <trans-unit id="10e20735637c76f0b5597095a4d871eb54e5fe26" translate="yes" xml:space="preserve">
          <source>This interface does not refine the general contracts of the &lt;a href=&quot;object#equals-java.lang.Object-&quot;&gt;&lt;code&gt;equals&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;object#hashCode--&quot;&gt;&lt;code&gt;hashCode&lt;/code&gt;&lt;/a&gt; methods. The result of comparing two objects that implement &lt;code&gt;CharSequence&lt;/code&gt; is therefore, in general, undefined. Each object may be implemented by a different class, and there is no guarantee that each class will be capable of testing its instances for equality with those of the other. It is therefore inappropriate to use arbitrary &lt;code&gt;CharSequence&lt;/code&gt; instances as elements in a set or as keys in a map.</source>
          <target state="translated">이 인터페이스는 &lt;a href=&quot;object#equals-java.lang.Object-&quot;&gt; &lt;code&gt;equals&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;object#hashCode--&quot;&gt; &lt;code&gt;hashCode&lt;/code&gt; &lt;/a&gt; 메소드 의 일반 계약을 세분화하지 않습니다 . 따라서 &lt;code&gt;CharSequence&lt;/code&gt; 를 구현하는 두 객체를 비교 한 결과는 일반적으로 정의되지 않습니다. 각 객체는 서로 다른 클래스로 구현 될 수 있으며 각 클래스가 다른 인스턴스와 동일한 지 테스트합니다. 따라서 임의의 &lt;code&gt;CharSequence&lt;/code&gt; 인스턴스를 세트의 요소 또는 맵의 키로 사용하는 것은 부적절합니다 .</target>
        </trans-unit>
        <trans-unit id="fd33f3250d6416037f0ee6c850afd056f50ca002" translate="yes" xml:space="preserve">
          <source>This interface extends &lt;a href=&quot;watchable&quot;&gt;&lt;code&gt;Watchable&lt;/code&gt;&lt;/a&gt; interface so that a directory located by a path can be &lt;a href=&quot;path#register-java.nio.file.WatchService-java.nio.file.WatchEvent.Kind:A-java.nio.file.WatchEvent.Modifier...-&quot;&gt;&lt;code&gt;registered&lt;/code&gt;&lt;/a&gt; with a &lt;a href=&quot;watchservice&quot;&gt;&lt;code&gt;WatchService&lt;/code&gt;&lt;/a&gt; and entries in the directory watched.</source>
          <target state="translated">이 인터페이스는 &lt;a href=&quot;watchable&quot;&gt; &lt;code&gt;Watchable&lt;/code&gt; &lt;/a&gt; 인터페이스를 확장 하여 경로로 위치한 디렉토리를 &lt;a href=&quot;watchservice&quot;&gt; &lt;code&gt;WatchService&lt;/code&gt; 에&lt;/a&gt;&lt;a href=&quot;path#register-java.nio.file.WatchService-java.nio.file.WatchEvent.Kind:A-java.nio.file.WatchEvent.Modifier...-&quot;&gt; &lt;code&gt;registered&lt;/code&gt; &lt;/a&gt; 하고 감시 한 디렉토리의 항목을 등록 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="9dcecebf796719144c09143f3c0f99704a8025a1" translate="yes" xml:space="preserve">
          <source>This interface extends the &lt;a href=&quot;queue&quot;&gt;&lt;code&gt;Queue&lt;/code&gt;&lt;/a&gt; interface. When a deque is used as a queue, FIFO (First-In-First-Out) behavior results. Elements are added at the end of the deque and removed from the beginning. The methods inherited from the &lt;code&gt;Queue&lt;/code&gt; interface are precisely equivalent to &lt;code&gt;Deque&lt;/code&gt; methods as indicated in the following table:</source>
          <target state="translated">이 인터페이스는 &lt;a href=&quot;queue&quot;&gt; &lt;code&gt;Queue&lt;/code&gt; &lt;/a&gt; 인터페이스를 확장합니다 . 큐가 대기열로 사용되면 FIFO (선입 선출) 동작이 발생합니다. 요소는 deque의 끝에 추가되고 처음부터 제거됩니다. &lt;code&gt;Queue&lt;/code&gt; 인터페이스 에서 상속 된 메소드는 다음 표에 표시된대로 &lt;code&gt;Deque&lt;/code&gt; 메소드와 정확히 동일 합니다.</target>
        </trans-unit>
        <trans-unit id="b61a7814aec60c920bd2352c7aa6433d76505fe1" translate="yes" xml:space="preserve">
          <source>This interface has to be implemented by any MBean class expected to represent a relation managed using the Relation Service.</source>
          <target state="translated">이 인터페이스는 관계 서비스를 사용하여 관리되는 관계를 나타낼 것으로 예상되는 모든 MBean 클래스에 의해 구현되어야합니다.</target>
        </trans-unit>
        <trans-unit id="93664bd1dba9adbd3e908cae896ede7ee73a80f0" translate="yes" xml:space="preserve">
          <source>This interface imposes a total ordering on the objects of each class that implements it.</source>
          <target state="translated">이 인터페이스는이를 구현하는 각 클래스의 객체에 총 정렬을 부과합니다.</target>
        </trans-unit>
        <trans-unit id="8d04fa3a064f1d5d2441d626c114de6dea5d3db0" translate="yes" xml:space="preserve">
          <source>This interface imposes a total ordering on the objects of each class that implements it. This ordering is referred to as the class's</source>
          <target state="translated">이 인터페이스는이를 구현하는 각 클래스의 객체에 총 정렬을 부과합니다. 이 순서는 클래스의</target>
        </trans-unit>
        <trans-unit id="e64f69133c0d52ffe7dab7201f742682bff8ec3d" translate="yes" xml:space="preserve">
          <source>This interface is a framework-level interface that should not be widely used in application code. Instead, applications should create and pass around instances of concrete types, such as &lt;code&gt;LocalDate&lt;/code&gt;. There are many reasons for this, part of which is that implementations of this interface may be in calendar systems other than ISO. See &lt;a href=&quot;../chrono/chronolocaldate&quot;&gt;&lt;code&gt;ChronoLocalDate&lt;/code&gt;&lt;/a&gt; for a fuller discussion of the issues.</source>
          <target state="translated">이 인터페이스는 응용 프로그램 코드에서 널리 사용되지 않아야하는 프레임 워크 수준의 인터페이스입니다. 대신 응용 프로그램은 &lt;code&gt;LocalDate&lt;/code&gt; 와 같은 구체적인 유형의 인스턴스를 만들어 전달해야합니다 . 이에 대한 여러 가지 이유가 있으며 그 중 일부는이 인터페이스의 구현이 ISO 이외의 캘린더 시스템에있을 수 있다는 것입니다. 문제에 대한 자세한 내용은 &lt;a href=&quot;../chrono/chronolocaldate&quot;&gt; &lt;code&gt;ChronoLocalDate&lt;/code&gt; &lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="dbbb7bb0cadbe941c36d7f06bb82ecd5502f3d22" translate="yes" xml:space="preserve">
          <source>This interface is a framework-level interface that should not be widely used in application code. Instead, applications should create and pass around instances of concrete types, such as &lt;code&gt;Period&lt;/code&gt; and &lt;code&gt;Duration&lt;/code&gt;.</source>
          <target state="translated">이 인터페이스는 응용 프로그램 코드에서 널리 사용되지 않아야하는 프레임 워크 수준의 인터페이스입니다. 대신 애플리케이션은 &lt;code&gt;Period&lt;/code&gt; 및 &lt;code&gt;Duration&lt;/code&gt; 과 같은 구체적인 유형의 인스턴스를 작성하고 전달해야합니다 .</target>
        </trans-unit>
        <trans-unit id="7625f17ecb6936d21e07364e1ea399ae070d3fcd" translate="yes" xml:space="preserve">
          <source>This interface is a member of the &lt;a href=&quot;https://docs.oracle.com/javase/7/docs/technotes/guides/collections/index.html&quot;&gt; Java Collections Framework&lt;/a&gt;.</source>
          <target state="translated">이 인터페이스는 &lt;a href=&quot;https://docs.oracle.com/javase/7/docs/technotes/guides/collections/index.html&quot;&gt;Java Collections Framework&lt;/a&gt; 의 멤버입니다 .</target>
        </trans-unit>
        <trans-unit id="05880429a3a9bec34d8484810f39e9eb49490711" translate="yes" xml:space="preserve">
          <source>This interface is a service provider that can be called by multiple threads. Implementations must be immutable and thread-safe.</source>
          <target state="translated">이 인터페이스는 여러 스레드에서 호출 할 수있는 서비스 공급자입니다. 구현은 변경 불가능하고 스레드로부터 안전해야합니다.</target>
        </trans-unit>
        <trans-unit id="a6da5a934ce2519fa4cabf061819bd93f7a8c447" translate="yes" xml:space="preserve">
          <source>This interface is designed to provide a common protocol for objects that wish to execute code while they are active. For example, &lt;code&gt;Runnable&lt;/code&gt; is implemented by class &lt;code&gt;Thread&lt;/code&gt;. Being active simply means that a thread has been started and has not yet been stopped.</source>
          <target state="translated">이 인터페이스는 활성화 된 상태에서 코드를 실행하려는 객체에 공통 프로토콜을 제공하도록 설계되었습니다. 예를 들어 &lt;code&gt;Runnable&lt;/code&gt; 은 &lt;code&gt;Thread&lt;/code&gt; 클래스에 의해 구현됩니다 . 활성 상태는 단순히 스레드가 시작되었고 아직 중지되지 않았 음을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="baebffb89378f52d414503c8af09aa94a8fc2b01" translate="yes" xml:space="preserve">
          <source>This interface is designed to provide access to a single extension, unlike &lt;a href=&quot;x509extension&quot;&gt;&lt;code&gt;X509Extension&lt;/code&gt;&lt;/a&gt; which is more suitable for accessing a set of extensions.</source>
          <target state="translated">이 인터페이스는 확장 세트에 액세스하기에 더 적합한 &lt;a href=&quot;x509extension&quot;&gt; &lt;code&gt;X509Extension&lt;/code&gt; &lt;/a&gt; 과 달리 단일 확장에 대한 액세스를 제공하도록 설계되었습니다 .</target>
        </trans-unit>
        <trans-unit id="9aa3a81748f01451ac101285be9788ba4f953e94" translate="yes" xml:space="preserve">
          <source>This interface is designed to work in collusion with java.beans.Beans.instantiate.</source>
          <target state="translated">이 인터페이스는 java.beans.Beans.instantiate와 함께 작동하도록 설계되었습니다.</target>
        </trans-unit>
        <trans-unit id="ad54b3e9604379578a01600df8a39ea107c331a1" translate="yes" xml:space="preserve">
          <source>This interface is designed to work in collusion with java.beans.Beans.instantiate. The interface is intended to provide mechanism to allow the proper initialization of JavaBeans that are also Applets, during their instantiation by java.beans.Beans.instantiate().</source>
          <target state="translated">이 인터페이스는 java.beans.Beans.instantiate와 함께 작동하도록 설계되었습니다. 이 인터페이스는 java.beans.Beans.instantiate ()에 의해 인스턴스화하는 동안 애플릿 인 JavaBean의 적절한 초기화를 허용하는 메커니즘을 제공하기위한 것입니다.</target>
        </trans-unit>
        <trans-unit id="89682a28cc8f0667dd31310511233ea47a03db14" translate="yes" xml:space="preserve">
          <source>This interface is for enumerating lists returned by methods in the javax.naming and javax.naming.directory packages.</source>
          <target state="translated">이 인터페이스는 javax.naming 및 javax.naming.directory 패키지의 메소드가 리턴 한 목록을 열거하기위한 것입니다.</target>
        </trans-unit>
        <trans-unit id="e1c8ade94408470188a3b624fd0ce556a7ee75f3" translate="yes" xml:space="preserve">
          <source>This interface is for enumerating lists returned by methods in the javax.naming and javax.naming.directory packages. It extends Enumeration to allow as exceptions to be thrown during the enumeration.</source>
          <target state="translated">이 인터페이스는 javax.naming 및 javax.naming.directory 패키지의 메소드가 리턴 한 목록을 열거하기위한 것입니다. 열거하는 동안 예외가 발생하도록 열거를 확장합니다.</target>
        </trans-unit>
        <trans-unit id="49838318dec1de002134998d30a13c554ab74bfc" translate="yes" xml:space="preserve">
          <source>This interface is for expert developers, and is not needed for normal simple beans. To avoid confusing end-users we avoid using getXXX setXXX design patterns for these methods.</source>
          <target state="translated">이 인터페이스는 전문가 개발자를위한 것이며 일반적인 단순 Bean에는 필요하지 않습니다. 최종 사용자의 혼동을 피하기 위해 이러한 메소드에 getXXX setXXX 디자인 패턴을 사용하지 마십시오.</target>
        </trans-unit>
        <trans-unit id="e8a9ccee46f85a945ce7fc25af131821526aa30d" translate="yes" xml:space="preserve">
          <source>This interface is for handling &lt;code&gt;UnsolicitedNotificationEvent&lt;/code&gt;.</source>
          <target state="translated">이 인터페이스는 &lt;code&gt;UnsolicitedNotificationEvent&lt;/code&gt; 처리를위한 것 입니다.</target>
        </trans-unit>
        <trans-unit id="48eda86c2269012ae794adcc546191dccfa01906" translate="yes" xml:space="preserve">
          <source>This interface is for handling &lt;code&gt;UnsolicitedNotificationEvent&lt;/code&gt;. &quot;Unsolicited notification&quot; is defined in &lt;a href=&quot;http://www.ietf.org/rfc/rfc2251.txt&quot;&gt;RFC 2251&lt;/a&gt;. It allows the server to send unsolicited notifications to the client. A &lt;code&gt;UnsolicitedNotificationListener&lt;/code&gt; must:</source>
          <target state="translated">이 인터페이스는 &lt;code&gt;UnsolicitedNotificationEvent&lt;/code&gt; 처리를위한 것 입니다. &quot;원치 않는 통지&quot;는 &lt;a href=&quot;http://www.ietf.org/rfc/rfc2251.txt&quot;&gt;RFC 2251에&lt;/a&gt; 정의되어 있습니다. 서버가 요청하지 않은 알림을 클라이언트에 보낼 수 있습니다. &lt;code&gt;UnsolicitedNotificationListener&lt;/code&gt; 에의 필수 :</target>
        </trans-unit>
        <trans-unit id="79c93f43e6f69c7f0f8c9513039f9b516fbeafe4" translate="yes" xml:space="preserve">
          <source>This interface is for returning controls with objects returned in NamingEnumerations.</source>
          <target state="translated">이 인터페이스는 NamingEnumerations에 반환 된 개체가있는 컨트롤을 반환하기위한 것입니다.</target>
        </trans-unit>
        <trans-unit id="f0541440ec51bff0f6a8b8dcb75edeed9fa77769" translate="yes" xml:space="preserve">
          <source>This interface is for returning controls with objects returned in NamingEnumerations. For example, suppose a server sends back controls with the results of a search operation, the service provider would return a NamingEnumeration of objects that are both SearchResult and implement HasControls.</source>
          <target state="translated">이 인터페이스는 NamingEnumerations에 반환 된 개체가있는 컨트롤을 반환하기위한 것입니다. 예를 들어, 서버가 검색 작업의 결과와 함께 컨트롤을 다시 전송한다고 가정하면 서비스 공급자는 SearchResult 및 HasControls를 구현하는 NamingEnumeration 개체를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="d25e0d6b22b27ec8c972b9e3eb41afd50a72be0c" translate="yes" xml:space="preserve">
          <source>This interface is implemented by &lt;code&gt;BeanContextChildren&lt;/code&gt; that have an AWT &lt;code&gt;Component&lt;/code&gt; associated with them.</source>
          <target state="translated">이 인터페이스는 AWT &lt;code&gt;Component&lt;/code&gt; 연관된 &lt;code&gt;BeanContextChildren&lt;/code&gt; 에 의해 구현됩니다 .</target>
        </trans-unit>
        <trans-unit id="34049a3edf989c23887780df8a1b71d390eb37f2" translate="yes" xml:space="preserve">
          <source>This interface is implemented by BeanContexts' that have an AWT Container associated with them.</source>
          <target state="translated">이 인터페이스는 AWT 컨테이너가 연결된 BeanContexts에 의해 구현됩니다.</target>
        </trans-unit>
        <trans-unit id="0b33eb3b8422d4dfabd5731cf56218846d077b1a" translate="yes" xml:space="preserve">
          <source>This interface is implemented by a JavaBean that does not directly have a BeanContext(Child) associated with it (via implementing that interface or a subinterface thereof), but has a public BeanContext(Child) delegated from it.</source>
          <target state="translated">이 인터페이스는 그와 연관된 BeanContext (Child)를 직접 가지고 있지 않지만 (그 인터페이스 또는 서브 인터페이스를 구현하여) JavaBean에 의해 구현되지만 공용 BeanContext (Child)가 위임되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="1655d19a231b743bd5a279c27ced1f86578aac1b" translate="yes" xml:space="preserve">
          <source>This interface is implemented by a JavaBean that does not directly have a BeanContext(Child) associated with it (via implementing that interface or a subinterface thereof), but has a public BeanContext(Child) delegated from it. For example, a subclass of java.awt.Container may have a BeanContext associated with it that all Component children of that Container shall be contained within.</source>
          <target state="translated">이 인터페이스는 그와 연관된 BeanContext (Child)를 직접 가지고 있지 않지만 (그 인터페이스 또는 서브 인터페이스를 구현하여) JavaBean에 의해 구현되지만 공용 BeanContext (Child)가 위임되어 있습니다. 예를 들어, java.awt.Container의 서브 클래스는 해당 컨테이너의 모든 컴포넌트 하위가 포함되도록 BeanContext와 연관 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="920ac66844da30d241c685eac6b029b1a37306e4" translate="yes" xml:space="preserve">
          <source>This interface is implemented by an object that can provide a Reference to itself.</source>
          <target state="translated">이 인터페이스는 자신에 대한 참조를 제공 할 수있는 객체로 구현됩니다.</target>
        </trans-unit>
        <trans-unit id="d4a8a9d9b1adcb62a656bfc0ccd286bec6832a76" translate="yes" xml:space="preserve">
          <source>This interface is implemented by any class which wants to receive notifications about the completion of an SSL protocol handshake on a given SSL connection.</source>
          <target state="translated">이 인터페이스는 주어진 SSL 연결에서 SSL 프로토콜 핸드 셰이크 완료에 대한 알림을 수신하려는 모든 클래스에 의해 구현됩니다.</target>
        </trans-unit>
        <trans-unit id="656f13a410784cc1fac4bc273185b924ebf3a59f" translate="yes" xml:space="preserve">
          <source>This interface is implemented by objects which want to know when they are being bound or unbound from a SSLSession.</source>
          <target state="translated">이 인터페이스는 SSLSession에서 바인드 또는 바인드 해제시기를 알고 자하는 오브젝트로 구현됩니다.</target>
        </trans-unit>
        <trans-unit id="a345e72ec4def1a0226b56ac04238afce772397f" translate="yes" xml:space="preserve">
          <source>This interface is implemented by objects which want to know when they are being bound or unbound from a SSLSession. When either event occurs via &lt;a href=&quot;sslsession#putValue-java.lang.String-java.lang.Object-&quot;&gt;&lt;code&gt;SSLSession.putValue(String, Object)&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;sslsession#removeValue-java.lang.String-&quot;&gt;&lt;code&gt;SSLSession.removeValue(String)&lt;/code&gt;&lt;/a&gt;, the event is communicated through a SSLSessionBindingEvent identifying the session.</source>
          <target state="translated">이 인터페이스는 SSLSession에서 바인드 또는 바인드 해제시기를 알고 자하는 오브젝트로 구현됩니다. &lt;a href=&quot;sslsession#putValue-java.lang.String-java.lang.Object-&quot;&gt; &lt;code&gt;SSLSession.putValue(String, Object)&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;sslsession#removeValue-java.lang.String-&quot;&gt; &lt;code&gt;SSLSession.removeValue(String)&lt;/code&gt; &lt;/a&gt; 통해 이벤트가 발생 하면 세션을 식별하는 SSLSessionBindingEvent를 통해 이벤트가 전달됩니다.</target>
        </trans-unit>
        <trans-unit id="fd9a3b92d17c8ffaf6c96372a056af0d67848156" translate="yes" xml:space="preserve">
          <source>This interface is implemented by the ModelMBeanInfo for every ModelMBean.</source>
          <target state="translated">이 인터페이스는 모든 ModelMBean의 ModelMBeanInfo에 의해 구현됩니다.</target>
        </trans-unit>
        <trans-unit id="cf7a6bc97229154759ae9b0cfbfd7896061be296" translate="yes" xml:space="preserve">
          <source>This interface is implemented by the ModelMBeanInfo for every ModelMBean. An implementation of this interface must be shipped with every JMX Agent.</source>
          <target state="translated">이 인터페이스는 모든 ModelMBean의 ModelMBeanInfo에 의해 구현됩니다. 이 인터페이스의 구현은 모든 JMX 에이전트와 함께 제공되어야합니다.</target>
        </trans-unit>
        <trans-unit id="b43c9be936ad05cfff2dac9eda97914a837fddbb" translate="yes" xml:space="preserve">
          <source>This interface is intended to be implemented by, or delegated from, instances of java.beans.beancontext.BeanContext, in order to propagate to its nested hierarchy of java.beans.beancontext.BeanContextChild instances, the current &quot;designTime&quot; property.</source>
          <target state="translated">이 인터페이스는 java.beans.beancontext.BeanContext 인스턴스에 의해 구현되거나 위임되어 현재 &quot;designTime&quot;특성 인 중첩 된 java.beans.beancontext.BeanContextChild 인스턴스 계층 구조로 전파됩니다.</target>
        </trans-unit>
        <trans-unit id="b0b095d0496841d272d349431d8a7e47cced4d07" translate="yes" xml:space="preserve">
          <source>This interface is not normally accessed directly by a client, which will use the &lt;code&gt;Sasl&lt;/code&gt; static methods instead. However, a particular environment may provide and install a new or different &lt;code&gt;SaslClientFactory&lt;/code&gt;.</source>
          <target state="translated">이 인터페이스는 일반적으로 클라이언트가 직접 액세스하지 않으며 대신 &lt;code&gt;Sasl&lt;/code&gt; 정적 메소드를 사용합니다. 그러나 특정 환경에서 새 &lt;code&gt;SaslClientFactory&lt;/code&gt; 를 제공하고 설치할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="37b6973450b3fd46d3a5711b21b32050a0df559f" translate="yes" xml:space="preserve">
          <source>This interface is not normally accessed directly by a server, which will use the &lt;code&gt;Sasl&lt;/code&gt; static methods instead. However, a particular environment may provide and install a new or different &lt;code&gt;SaslServerFactory&lt;/code&gt;.</source>
          <target state="translated">이 인터페이스는 일반적으로 &lt;code&gt;Sasl&lt;/code&gt; 정적 메소드를 대신 사용하는 서버에서 직접 액세스하지 않습니다 . 그러나 특정 환경에서 새 &lt;code&gt;SaslServerFactory&lt;/code&gt; 를 제공하고 설치할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="8c48630dafc6b59c3fa9c33a93e77fb49e688684" translate="yes" xml:space="preserve">
          <source>This interface is the root of listener interfaces that handle &lt;code&gt;NamingEvent&lt;/code&gt;s.</source>
          <target state="translated">이 인터페이스는 &lt;code&gt;NamingEvent&lt;/code&gt; 를 처리하는 청취자 인터페이스의 루트입니다 .</target>
        </trans-unit>
        <trans-unit id="244791bd9f009696907848289ade648f819a7bd1" translate="yes" xml:space="preserve">
          <source>This interface is the root of listener interfaces that handle &lt;code&gt;NamingEvent&lt;/code&gt;s. It does not make sense for a listener to implement just this interface. A listener typically implements a subinterface of &lt;code&gt;NamingListener&lt;/code&gt;, such as &lt;code&gt;ObjectChangeListener&lt;/code&gt; or &lt;code&gt;NamespaceChangeListener&lt;/code&gt;.</source>
          <target state="translated">이 인터페이스는 &lt;code&gt;NamingEvent&lt;/code&gt; 를 처리하는 청취자 인터페이스의 루트입니다 . 리스너가이 인터페이스 만 구현하는 것은 이치에 맞지 않습니다. 리스너는 일반적 으로 &lt;code&gt;ObjectChangeListener&lt;/code&gt; 또는 &lt;code&gt;NamespaceChangeListener&lt;/code&gt; 와 같은 &lt;code&gt;NamingListener&lt;/code&gt; 의 하위 인터페이스를 구현합니다 .</target>
        </trans-unit>
        <trans-unit id="e5a6352150d08ebc2e5a39ca1323fb83bed2bcd3" translate="yes" xml:space="preserve">
          <source>This interface is used by a printing application to cancel a print job.</source>
          <target state="translated">이 인터페이스는 인쇄 응용 프로그램에서 인쇄 작업을 취소하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="5d8568390b6f9f0eaa74daede0f68341e379330f" translate="yes" xml:space="preserve">
          <source>This interface is used by a printing application to cancel a print job. This interface extends &lt;a href=&quot;docprintjob&quot;&gt;&lt;code&gt;DocPrintJob&lt;/code&gt;&lt;/a&gt;. A &lt;code&gt;DocPrintJob&lt;/code&gt; implementation returned from a print service implements this interface if the print job can be cancelled. Before trying to cancel a print job, the client needs to test if the &lt;code&gt;DocPrintJob&lt;/code&gt; object returned from the print service actually implements this interface. Clients should never assume that a &lt;code&gt;DocPrintJob&lt;/code&gt; implements this interface. A print service might support cancellation only for certain types of print data and representation class names. This means that only some of the &lt;code&gt;DocPrintJob&lt;/code&gt; objects returned from a service will implement this interface.</source>
          <target state="translated">이 인터페이스는 인쇄 응용 프로그램에서 인쇄 작업을 취소하는 데 사용됩니다. 이 인터페이스는 &lt;a href=&quot;docprintjob&quot;&gt; &lt;code&gt;DocPrintJob&lt;/code&gt; 를&lt;/a&gt; 확장 합니다. 인쇄 서비스에서 반환 된 &lt;code&gt;DocPrintJob&lt;/code&gt; 구현은 인쇄 작업을 취소 할 수있는 경우이 인터페이스를 구현합니다. 인쇄 작업을 취소하기 전에 인쇄 서비스에서 반환 된 &lt;code&gt;DocPrintJob&lt;/code&gt; 개체가 실제로이 인터페이스를 구현 하는지 테스트해야합니다 . 클라이언트는 &lt;code&gt;DocPrintJob&lt;/code&gt; 이이 인터페이스를 구현 한다고 가정해서는 안됩니다 . 인쇄 서비스는 특정 유형의 인쇄 데이터 및 표현 클래스 이름에 대해서만 취소를 지원할 수 있습니다. 이는 서비스에서 반환 된 일부 &lt;code&gt;DocPrintJob&lt;/code&gt; 개체 만이 인터페이스를 구현 한다는 것을 의미합니다 .</target>
        </trans-unit>
        <trans-unit id="074b62606ae32a44fe06467f74de5be148e56e17" translate="yes" xml:space="preserve">
          <source>This interface is used by the &lt;code&gt;URLStreamHandler&lt;/code&gt; class to create a &lt;code&gt;ContentHandler&lt;/code&gt; for a MIME type.</source>
          <target state="translated">이 인터페이스는 &lt;code&gt;URLStreamHandler&lt;/code&gt; 클래스에서 MIME 유형 의 &lt;code&gt;ContentHandler&lt;/code&gt; 를 작성하는 데 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="d907dca7978a8a7583146b02293a9738deb0a3ee" translate="yes" xml:space="preserve">
          <source>This interface is used for parsing names from a hierarchical namespace.</source>
          <target state="translated">이 인터페이스는 계층 네임 스페이스에서 이름을 구문 분석하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="f60532ed074ee027ac09d7b29908e2dadb8369f1" translate="yes" xml:space="preserve">
          <source>This interface is used for parsing names from a hierarchical namespace. The NameParser contains knowledge of the syntactic information (like left-to-right orientation, name separator, etc.) needed to parse names. The equals() method, when used to compare two NameParsers, returns true if and only if they serve the same namespace.</source>
          <target state="translated">이 인터페이스는 계층 네임 스페이스에서 이름을 구문 분석하는 데 사용됩니다. NameParser에는 이름을 구문 분석하는 데 필요한 구문 정보 (예 : 왼쪽에서 오른쪽 방향, 이름 구분 기호 등)에 대한 지식이 있습니다. equals () 메소드는 두 NameParsers를 비교하는 데 사용될 때 동일한 네임 스페이스를 제공하는 경우에만 true를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="076abc1b74828fbba351e8b88423155f0b672104" translate="yes" xml:space="preserve">
          <source>This interface is used to gain access to descriptors of the Descriptor class which are associated with a JMX component, i.e.</source>
          <target state="translated">이 인터페이스는 JMX 컴포넌트와 관련된 Descriptor 클래스의 디스크립터에 액세스하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="44f802fc086439b08afe9600dcec1ce759a42034" translate="yes" xml:space="preserve">
          <source>This interface is used to gain access to descriptors of the Descriptor class which are associated with a JMX component, i.e. MBean, MBeanInfo, MBeanAttributeInfo, MBeanNotificationInfo, MBeanOperationInfo, MBeanParameterInfo.</source>
          <target state="translated">이 인터페이스는 JMX 컴포넌트와 관련된 Descriptor 클래스의 디스크립터 (예 : MBean, MBeanInfo, MBeanAttributeInfo, MBeanNotificationInfo, MBeanOperationInfo, MBeanParameterInfo)에 액세스하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="9ca6172bb904cedb5d362dd9390ef18f55e2e118" translate="yes" xml:space="preserve">
          <source>This interface is used to represent a group of principals.</source>
          <target state="translated">이 인터페이스는 프린시 펄 그룹을 나타내는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="ceee39651e54044edcdcdaf4963811ee9e6f901a" translate="yes" xml:space="preserve">
          <source>This interface is used to represent a group of principals. (A principal represents an entity such as an individual user or a company).</source>
          <target state="translated">이 인터페이스는 프린시 펄 그룹을 나타내는 데 사용됩니다. (주체는 개인 사용자 또는 회사와 같은 엔티티를 나타냅니다).</target>
        </trans-unit>
        <trans-unit id="a70e6061c67c02fac0e46321a73916ac2a0c1833" translate="yes" xml:space="preserve">
          <source>This interface is used to represent both request and response controls.</source>
          <target state="translated">이 인터페이스는 요청 및 응답 제어를 모두 나타내는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="0f46e9e4bc3be154040bd66722db940a2d60af7a" translate="yes" xml:space="preserve">
          <source>This interface models a date-based amount of time in a calendar system. While most calendar systems use years, months and days, some do not. Therefore, this interface operates solely in terms of a set of supported units that are defined by the &lt;code&gt;Chronology&lt;/code&gt;. The set of supported units is fixed for a given chronology. The amount of a supported unit may be set to zero.</source>
          <target state="translated">이 인터페이스는 달력 시스템에서 날짜 기반 시간을 모델링합니다. 대부분의 달력 시스템은 년, 월, 일을 사용하지만 일부는 사용하지 않습니다. 따라서이 인터페이스는 &lt;code&gt;Chronology&lt;/code&gt; 에 의해 정의 된 일련의 지원되는 단위로만 작동합니다 . 지원되는 단위 집합은 주어진 연대기에 고정되어 있습니다. 지원되는 단위의 양은 0으로 설정 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="20430dbeb8a3f24e7dcb2f50c94ffe179fd1f09c" translate="yes" xml:space="preserve">
          <source>This interface must be implemented by the ModelMBeans.</source>
          <target state="translated">이 인터페이스는 ModelMBean에 의해 구현되어야합니다.</target>
        </trans-unit>
        <trans-unit id="467c2addae0db824ff5f7376404c724eeedbdfeb" translate="yes" xml:space="preserve">
          <source>This interface must be implemented by the ModelMBeans. An implementation of this interface must be shipped with every JMX Agent.</source>
          <target state="translated">이 인터페이스는 ModelMBean에 의해 구현되어야합니다. 이 인터페이스의 구현은 모든 JMX 에이전트와 함께 제공되어야합니다.</target>
        </trans-unit>
        <trans-unit id="83f733922c99b35c6e1680d0b8af6de818b2b7f8" translate="yes" xml:space="preserve">
          <source>This interface must be implemented with care to ensure other classes operate correctly. All implementations must be singletons - final, immutable and thread-safe. It is recommended to use an enum whenever possible.</source>
          <target state="translated">이 클래스는 다른 클래스가 올바르게 작동하도록주의해서 구현해야합니다. 모든 구현은 싱글 톤이어야합니다 (최종, 불변 및 스레드 안전). 가능할 때마다 열거 형을 사용하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="5c6210646c87a287e29c46c2713efefd4d88577a" translate="yes" xml:space="preserve">
          <source>This interface must be implemented with care to ensure other classes operate correctly. All implementations that can be instantiated must be final, immutable and thread-safe. Implementations should be &lt;code&gt;Serializable&lt;/code&gt; where possible. An enum is as effective implementation choice.</source>
          <target state="translated">이 클래스는 다른 클래스가 올바르게 작동하도록주의해서 구현해야합니다. 인스턴스화 할 수있는 모든 구현은 최종적이고 변경 불가능하며 스레드로부터 안전해야합니다. 가능한 경우 구현은 &lt;code&gt;Serializable&lt;/code&gt; 가능 해야 합니다. 열거 형은 효과적인 구현 선택입니다.</target>
        </trans-unit>
        <trans-unit id="161c6b5d10da8965538c1afbf9b74b0e0e9c7f5b" translate="yes" xml:space="preserve">
          <source>This interface must be implemented with care to ensure other classes operate correctly. All implementations that can be instantiated must be final, immutable and thread-safe. It is recommended to use an enum where possible.</source>
          <target state="translated">이 클래스는 다른 클래스가 올바르게 작동하도록주의해서 구현해야합니다. 인스턴스화 할 수있는 모든 구현은 최종적이고 변경 불가능하며 스레드로부터 안전해야합니다. 가능하면 열거 형을 사용하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="257e1181e58f4a3969fcea60d7c3a9a00c744300" translate="yes" xml:space="preserve">
          <source>This interface must be implemented with care to ensure other classes operate correctly. All implementations that can be instantiated must be final, immutable and thread-safe. Subclasses should be Serializable wherever possible.</source>
          <target state="translated">이 클래스는 다른 클래스가 올바르게 작동하도록주의해서 구현해야합니다. 인스턴스화 할 수있는 모든 구현은 최종적이고 변경 불가능하며 스레드로부터 안전해야합니다. 서브 클래스는 가능하면 직렬화 가능해야합니다.</target>
        </trans-unit>
        <trans-unit id="ae149d549d1d6a678a9441b933e37ca23db6f01a" translate="yes" xml:space="preserve">
          <source>This interface places no restrictions on the mutability of implementations, however immutability is strongly recommended.</source>
          <target state="translated">이 인터페이스는 구현의 변경 가능성에 제한을 두지 않지만 변경 불가능한 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="1a0c052e14d226a661651a2a4dc383219d642f56" translate="yes" xml:space="preserve">
          <source>This interface places no restrictions on the mutability of implementations, however immutability is strongly recommended. All implementations must be &lt;a href=&quot;../../lang/comparable&quot;&gt;&lt;code&gt;Comparable&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 인터페이스는 구현의 변경 가능성에 제한을 두지 않지만 변경 불가능한 것이 좋습니다. 모든 구현은 &lt;a href=&quot;../../lang/comparable&quot;&gt; &lt;code&gt;Comparable&lt;/code&gt; &lt;/a&gt; 해야합니다 .</target>
        </trans-unit>
        <trans-unit id="855c8f167da7dae31a6decb8e15f6f6ca477b618" translate="yes" xml:space="preserve">
          <source>This interface provides support for LDAP v3 controls. At a high level, this support allows a user program to set request controls for LDAP operations that are executed in the course of the user program's invocation of &lt;code&gt;Context&lt;/code&gt;/&lt;code&gt;DirContext&lt;/code&gt; methods, and read response controls resulting from LDAP operations. At the implementation level, there are some details that developers of both the user program and service providers need to understand in order to correctly use request and response controls.</source>
          <target state="translated">이 인터페이스는 LDAP v3 컨트롤을 지원합니다. 높은 수준에서이 지원을 통해 사용자 프로그램은 사용자 프로그램의 &lt;code&gt;Context&lt;/code&gt; / &lt;code&gt;DirContext&lt;/code&gt; 메소드 호출 과정에서 실행되는 LDAP 조작에 대한 요청 제어를 설정하고 LDAP 조작으로 인한 응답 제어를 읽을 수 있습니다. 구현 레벨에는 요청 및 응답 제어를 올바르게 사용하기 위해 사용자 프로그램 및 서비스 제공 업체의 개발자가 이해해야 할 세부 사항이 있습니다.</target>
        </trans-unit>
        <trans-unit id="150a2094b96dcc568b26abb547cc19627766fad5" translate="yes" xml:space="preserve">
          <source>This interface provides two methods to remove interior elements, &lt;a href=&quot;deque#removeFirstOccurrence-java.lang.Object-&quot;&gt;&lt;code&gt;removeFirstOccurrence&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;deque#removeLastOccurrence-java.lang.Object-&quot;&gt;&lt;code&gt;removeLastOccurrence&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 인터페이스는 내부 요소를 제거하는 두 가지 방법 인 &lt;a href=&quot;deque#removeFirstOccurrence-java.lang.Object-&quot;&gt; &lt;code&gt;removeFirstOccurrence&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;deque#removeLastOccurrence-java.lang.Object-&quot;&gt; &lt;code&gt;removeLastOccurrence&lt;/code&gt; 를 제공&lt;/a&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="9bdc0b24cf47ba19da2586695afe6b2f53bb9018" translate="yes" xml:space="preserve">
          <source>This interface receives general indications of decoding progress (via the &lt;code&gt;imageProgress&lt;/code&gt; and &lt;code&gt;thumbnailProgress&lt;/code&gt; methods), and events indicating when an entire image has been updated (via the &lt;code&gt;imageStarted&lt;/code&gt;, &lt;code&gt;imageComplete&lt;/code&gt;, &lt;code&gt;thumbnailStarted&lt;/code&gt; and &lt;code&gt;thumbnailComplete&lt;/code&gt; methods). Applications that wish to be informed of pixel updates as they happen (for example, during progressive decoding), should provide an &lt;code&gt;IIOReadUpdateListener&lt;/code&gt;.</source>
          <target state="translated">이 인터페이스는 &lt;code&gt;imageProgress&lt;/code&gt; 및 &lt;code&gt;thumbnailProgress&lt;/code&gt; 메서드 를 통해 디코딩 진행률에 대한 일반적인 표시 와 전체 이미지가 업데이트 된시기를 나타내는 이벤트 ( &lt;code&gt;imageStarted&lt;/code&gt; , &lt;code&gt;imageComplete&lt;/code&gt; , &lt;code&gt;thumbnailStarted&lt;/code&gt; 및 &lt;code&gt;thumbnailComplete&lt;/code&gt; 메서드를 통해)를받습니다. 점진적 디코딩과 같이 픽셀 업데이트가 발생할 때 알림을 &lt;code&gt;IIOReadUpdateListener&lt;/code&gt; 응용 프로그램은 IIOReadUpdateListener를 제공해야합니다 .</target>
        </trans-unit>
        <trans-unit id="45ba54db570d87231418ef99ab3cb9a3347ed69f" translate="yes" xml:space="preserve">
          <source>This interface represents a builder that creates initial context factories.</source>
          <target state="translated">이 인터페이스는 초기 컨텍스트 팩토리를 작성하는 빌더를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="9981f2cb44da0b7c6a202762b0db784ddbcb0b8d" translate="yes" xml:space="preserve">
          <source>This interface represents a builder that creates object factories.</source>
          <target state="translated">이 인터페이스는 오브젝트 팩토리를 작성하는 빌더를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="4a12945c443b939441f98eb8553e34ae5c4f3d22" translate="yes" xml:space="preserve">
          <source>This interface represents a collection of attributes.</source>
          <target state="translated">이 인터페이스는 속성 모음을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="b6469383ce35180e1663bc2483e3c70eb3b6a31d" translate="yes" xml:space="preserve">
          <source>This interface represents a context in which you can perform operations with LDAPv3-style controls and perform LDAPv3-style extended operations.</source>
          <target state="translated">이 인터페이스는 LDAPv3 스타일 제어로 조작을 수행하고 LDAPv3 스타일 확장 조작을 수행 할 수있는 컨텍스트를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="343e2c7a84b3d9546377b22bb3f56a9c6b2b9e1e" translate="yes" xml:space="preserve">
          <source>This interface represents a context in which you can perform operations with LDAPv3-style controls and perform LDAPv3-style extended operations. For applications that do not require such controls or extended operations, the more generic &lt;code&gt;javax.naming.directory.DirContext&lt;/code&gt; should be used instead.</source>
          <target state="translated">이 인터페이스는 LDAPv3 스타일 제어로 조작을 수행하고 LDAPv3 스타일 확장 조작을 수행 할 수있는 컨텍스트를 나타냅니다. 이러한 제어 또는 확장 조작이 필요없는 애플리케이션의 경우보다 일반적인 &lt;code&gt;javax.naming.directory.DirContext&lt;/code&gt; 를 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="35a0b6e509abc49766ccce52911b51cf01912d12" translate="yes" xml:space="preserve">
          <source>This interface represents a factory for creating an object given an object and attributes about the object.</source>
          <target state="translated">이 인터페이스는 객체와 객체에 대한 속성이 주어진 객체를 만들기위한 팩토리를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="f489703502d879077c8caab3c1f6521870884c9b" translate="yes" xml:space="preserve">
          <source>This interface represents a factory for creating an object.</source>
          <target state="translated">이 인터페이스는 객체를 만들기위한 팩토리를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="af7968f0c302bb3322b41669df7a2f1e3b215f0a" translate="yes" xml:space="preserve">
          <source>This interface represents a factory for obtaining the state of an object and corresponding attributes for binding.</source>
          <target state="translated">이 인터페이스는 객체의 상태와 바인딩을위한 해당 속성을 얻기위한 팩토리를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="9f158d213f97878aa587553be1c1f97f9f28dce3" translate="yes" xml:space="preserve">
          <source>This interface represents a factory for obtaining the state of an object for binding.</source>
          <target state="translated">이 인터페이스는 바인딩 할 객체의 상태를 얻기위한 팩토리를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="95885d4605a3fbf5462145dedc66ad28c73b6dd3" translate="yes" xml:space="preserve">
          <source>This interface represents a factory that creates an initial context.</source>
          <target state="translated">이 인터페이스는 초기 컨텍스트를 생성하는 팩토리를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="9488c36305cbc070f0b53e059c371e79a87f4ec5" translate="yes" xml:space="preserve">
          <source>This interface represents a guard, which is an object that is used to protect access to another object.</source>
          <target state="translated">이 인터페이스는 다른 객체에 대한 액세스를 보호하는 데 사용되는 객체 인 보호를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="ca3f4948c28745b4653a2c61d572c27adeef794f" translate="yes" xml:space="preserve">
          <source>This interface represents a naming context, which consists of a set of name-to-object bindings.</source>
          <target state="translated">이 인터페이스는 이름-객체 바인딩 세트로 구성된 이름 지정 컨텍스트를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="6e3be4da16233be9331839ab8890976e43f0dce1" translate="yes" xml:space="preserve">
          <source>This interface represents a naming context, which consists of a set of name-to-object bindings. It contains methods for examining and updating these bindings.</source>
          <target state="translated">이 인터페이스는 이름-객체 바인딩 세트로 구성된 이름 지정 컨텍스트를 나타냅니다. 이 바인딩을 검사하고 업데이트하는 방법이 포함되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="e25015956405bfa4a664c36fff9af774f56c4387" translate="yes" xml:space="preserve">
          <source>This interface represents a permission, such as that used to grant a particular type of access to a resource.</source>
          <target state="translated">이 인터페이스는 리소스에 특정 유형의 액세스 권한을 부여하는 데 사용되는 권한과 같은 권한을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="a5815f8bbbcd197884ae382a6e0a8ba8baee951e" translate="yes" xml:space="preserve">
          <source>This interface represents a print job that can print a specified document with a set of job attributes.</source>
          <target state="translated">이 인터페이스는 일련의 작업 속성으로 지정된 문서를 인쇄 할 수있는 인쇄 작업을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="46b4e603c1c01481644b8f7ff7680232271fc858" translate="yes" xml:space="preserve">
          <source>This interface represents a print job that can print a specified document with a set of job attributes. An object implementing this interface is obtained from a print service.</source>
          <target state="translated">이 인터페이스는 일련의 작업 속성으로 지정된 문서를 인쇄 할 수있는 인쇄 작업을 나타냅니다. 이 인터페이스를 구현하는 객체는 인쇄 서비스에서 얻습니다.</target>
        </trans-unit>
        <trans-unit id="c23738f1679f80ab02137c29819021b5d4ae15a8" translate="yes" xml:space="preserve">
          <source>This interface represents a way to talk to an MBean server, whether local or remote.</source>
          <target state="translated">이 인터페이스는 로컬이든 원격이든 MBean 서버와 통신하는 방법을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="f54940313160cd15157e1df851c1e226d5033c69" translate="yes" xml:space="preserve">
          <source>This interface represents a way to talk to an MBean server, whether local or remote. The &lt;a href=&quot;mbeanserver&quot;&gt;&lt;code&gt;MBeanServer&lt;/code&gt;&lt;/a&gt; interface, representing a local MBean server, extends this interface.</source>
          <target state="translated">이 인터페이스는 로컬이든 원격이든 MBean 서버와 통신하는 방법을 나타냅니다. &lt;a href=&quot;mbeanserver&quot;&gt; &lt;code&gt;MBeanServer&lt;/code&gt; &lt;/a&gt; 로컬의 MBean 서버를 나타내는 인터페이스는,이 인터페이스를 확장합니다.</target>
        </trans-unit>
        <trans-unit id="1085a2f2d41e08b08eea97d0daf626dd7290441b" translate="yes" xml:space="preserve">
          <source>This interface represents an &quot;intermediate context&quot; for name resolution.</source>
          <target state="translated">이 인터페이스는 이름 확인을위한 &quot;중간 컨텍스트&quot;를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="0f14834a0b07c4dbbfad127b5d67997e6eed4945" translate="yes" xml:space="preserve">
          <source>This interface represents an LDAP extended operation response as defined in &lt;a href=&quot;http://www.ietf.org/rfc/rfc2251.txt&quot;&gt;RFC 2251&lt;/a&gt;.</source>
          <target state="translated">이 인터페이스는 &lt;a href=&quot;http://www.ietf.org/rfc/rfc2251.txt&quot;&gt;RFC 2251에&lt;/a&gt; 정의 된 LDAP 확장 작업 응답을 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="b2dec6542b2ef6f3cdc9e8c71ead74cbdc8472c9" translate="yes" xml:space="preserve">
          <source>This interface represents an LDAPv3 control as defined in &lt;a href=&quot;http://www.ietf.org/rfc/rfc2251.txt&quot;&gt;RFC 2251&lt;/a&gt;.</source>
          <target state="translated">이 인터페이스는 &lt;a href=&quot;http://www.ietf.org/rfc/rfc2251.txt&quot;&gt;RFC 2251에&lt;/a&gt; 정의 된 LDAPv3 컨트롤을 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="5809f12fcfdf6763082ca53b6b8fe07442cfd16d" translate="yes" xml:space="preserve">
          <source>This interface represents an LDAPv3 extended operation request as defined in &lt;a href=&quot;http://www.ietf.org/rfc/rfc2251.txt&quot;&gt;RFC 2251&lt;/a&gt;.</source>
          <target state="translated">이 인터페이스는 &lt;a href=&quot;http://www.ietf.org/rfc/rfc2251.txt&quot;&gt;RFC 2251에&lt;/a&gt; 정의 된 LDAPv3 확장 작업 요청을 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="06abcbfc7e0a66ed6d42262a67289542df0460aa" translate="yes" xml:space="preserve">
          <source>This interface represents an X.509 extension.</source>
          <target state="translated">이 인터페이스는 X.509 확장을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="72ad3cf498a93c212959646d1ca238f33e48469a" translate="yes" xml:space="preserve">
          <source>This interface represents an attribute associated with a named object.</source>
          <target state="translated">이 인터페이스는 명명 된 객체와 관련된 속성을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="5519d222fafee9d391a214d13424d1104d477350" translate="yes" xml:space="preserve">
          <source>This interface represents an elliptic curve (EC) finite field.</source>
          <target state="translated">이 인터페이스는 EC (Elliptic Curve) 유한 필드를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="391bb9ec03cf1ede13d55fb3e34bb5db0675709b" translate="yes" xml:space="preserve">
          <source>This interface represents an elliptic curve (EC) finite field. All specialized EC fields must implements this interface.</source>
          <target state="translated">이 인터페이스는 EC (Elliptic Curve) 유한 필드를 나타냅니다. 모든 전문화 된 EC 필드는이 인터페이스를 구현해야합니다.</target>
        </trans-unit>
        <trans-unit id="0ec863793f9f13bfac31f1708559c62660a761a4" translate="yes" xml:space="preserve">
          <source>This interface represents an unsolicited notification as defined in &lt;a href=&quot;http://www.ietf.org/rfc/rfc2251.txt&quot;&gt;RFC 2251&lt;/a&gt;.</source>
          <target state="translated">이 인터페이스는 &lt;a href=&quot;http://www.ietf.org/rfc/rfc2251.txt&quot;&gt;RFC 2251에&lt;/a&gt; 정의 된 요청하지 않은 알림을 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="3fd81adae4af65beb3ebd88b5b33ab295c1ceb5a" translate="yes" xml:space="preserve">
          <source>This interface represents an unsolicited notification as defined in &lt;a href=&quot;http://www.ietf.org/rfc/rfc2251.txt&quot;&gt;RFC 2251&lt;/a&gt;. An unsolicited notification is sent by the LDAP server to the LDAP client without any provocation from the client. Its format is that of an extended response (&lt;code&gt;ExtendedResponse&lt;/code&gt;).</source>
          <target state="translated">이 인터페이스는 &lt;a href=&quot;http://www.ietf.org/rfc/rfc2251.txt&quot;&gt;RFC 2251에&lt;/a&gt; 정의 된 요청하지 않은 알림을 나타냅니다 . 요청하지 않은 알림은 클라이언트의 도발없이 LDAP 서버에서 LDAP 클라이언트로 전송됩니다. 형식은 확장 응답 ( &lt;code&gt;ExtendedResponse&lt;/code&gt; ) 형식입니다 .</target>
        </trans-unit>
        <trans-unit id="77460c18f87eccacb2253739ad6159c425c1219e" translate="yes" xml:space="preserve">
          <source>This interface represents the abstract notion of a principal, which can be used to represent any entity, such as an individual, a corporation, and a login id.</source>
          <target state="translated">이 인터페이스는 주체의 추상 개념을 나타내며 개인, 회사 및 로그인 ID와 같은 엔티티를 나타내는 데 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="57884505de8217da2d49cc4fa0f4319801c9e57d" translate="yes" xml:space="preserve">
          <source>This interface should be used by new code in preference to the &lt;a href=&quot;notificationbroadcaster&quot;&gt;&lt;code&gt;NotificationBroadcaster&lt;/code&gt;&lt;/a&gt; interface.</source>
          <target state="translated">이 인터페이스는 &lt;a href=&quot;notificationbroadcaster&quot;&gt; &lt;code&gt;NotificationBroadcaster&lt;/code&gt; &lt;/a&gt; 인터페이스 보다 새로운 코드에서 사용되어야합니다 .</target>
        </trans-unit>
        <trans-unit id="c38946aaa3a7c28236fd93c356f6428eb500bd2f" translate="yes" xml:space="preserve">
          <source>This interface specifies constraints for cryptographic algorithms, keys (key sizes), and other algorithm parameters.</source>
          <target state="translated">이 인터페이스는 암호화 알고리즘, 키 (키 크기) 및 기타 알고리즘 매개 변수에 대한 제약 조건을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="650f3d97151f406b5422f564f6e92afe5665adcb" translate="yes" xml:space="preserve">
          <source>This interface supports the creation of new files by an annotation processor.</source>
          <target state="translated">이 인터페이스는 주석 처리기에서 새 파일 작성을 지원합니다.</target>
        </trans-unit>
        <trans-unit id="a3310965cb28e603a3dd2b4aac33095619c6f858" translate="yes" xml:space="preserve">
          <source>This interface supports the creation of new files by an annotation processor. Files created in this way will be known to the annotation processing tool implementing this interface, better enabling the tool to manage them. Source and class files so created will be &lt;a href=&quot;roundenvironment#getRootElements--&quot;&gt;considered for processing&lt;/a&gt; by the tool in a subsequent &lt;a href=&quot;roundenvironment&quot;&gt;round of processing&lt;/a&gt; after the &lt;code&gt;close&lt;/code&gt; method has been called on the &lt;code&gt;Writer&lt;/code&gt; or &lt;code&gt;OutputStream&lt;/code&gt; used to write the contents of the file. Three kinds of files are distinguished: source files, class files, and auxiliary resource files.</source>
          <target state="translated">이 인터페이스는 주석 처리기에서 새 파일 작성을 지원합니다. 이러한 방식으로 생성 된 파일은이 인터페이스를 구현하는 주석 처리 도구에 알려져 도구를보다 효과적으로 관리 할 수 ​​있습니다. 이렇게 작성된 소스 및 클래스 파일 은 파일의 내용을 작성하는 데 사용 된 &lt;code&gt;Writer&lt;/code&gt; 또는 &lt;code&gt;OutputStream&lt;/code&gt; 에서 &lt;code&gt;close&lt;/code&gt; 메소드가 호출 된 후 후속 &lt;a href=&quot;roundenvironment&quot;&gt;처리 라운드&lt;/a&gt; 에서 도구에 의해 &lt;a href=&quot;roundenvironment#getRootElements--&quot;&gt;처리&lt;/a&gt; 되는 것으로 간주 됩니다. 소스 파일, 클래스 파일 및 보조 자원 파일의 세 가지 파일이 구분됩니다.</target>
        </trans-unit>
        <trans-unit id="b0d2937feacc801c2cb8a56d6b2595dcdc3e5efb" translate="yes" xml:space="preserve">
          <source>This interface takes the place of the &lt;code&gt;Dictionary&lt;/code&gt; class, which was a totally abstract class rather than an interface.</source>
          <target state="translated">이 인터페이스는 인터페이스가 아닌 완전히 추상적 인 클래스 인 &lt;code&gt;Dictionary&lt;/code&gt; 클래스를 대신합니다.</target>
        </trans-unit>
        <trans-unit id="dc627d82e33b95e53d21ca56130d14934235a2ce" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;collector.characteristics#CONCURRENT&quot;&gt;&lt;code&gt;concurrent&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;collector.characteristics#UNORDERED&quot;&gt;&lt;code&gt;unordered&lt;/code&gt;&lt;/a&gt; Collector.</source>
          <target state="translated">이것은이다 &lt;a href=&quot;collector.characteristics#CONCURRENT&quot;&gt; &lt;code&gt;concurrent&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;collector.characteristics#UNORDERED&quot;&gt; &lt;code&gt;unordered&lt;/code&gt; &lt;/a&gt; 콜렉터.</target>
        </trans-unit>
        <trans-unit id="23d95505e22c14462cabd3aa922526f370095bb6" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;package-summary&quot;&gt;functional interface&lt;/a&gt; whose functional method is &lt;a href=&quot;biconsumer#accept-T-U-&quot;&gt;&lt;code&gt;accept(Object, Object)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이것은이다 &lt;a href=&quot;package-summary&quot;&gt;기능 인터페이스&lt;/a&gt; 그 기능 방법 &lt;a href=&quot;biconsumer#accept-T-U-&quot;&gt; &lt;code&gt;accept(Object, Object)&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="947a7435b4ca3db843a54d4a982b871e9e6d10b3" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;package-summary&quot;&gt;functional interface&lt;/a&gt; whose functional method is &lt;a href=&quot;bifunction#apply-T-U-&quot;&gt;&lt;code&gt;BiFunction.apply(Object, Object)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이것은 기능적 메소드가 &lt;a href=&quot;bifunction#apply-T-U-&quot;&gt; &lt;code&gt;BiFunction.apply(Object, Object)&lt;/code&gt; &lt;/a&gt; 인 &lt;a href=&quot;package-summary&quot;&gt;기능적 인터페이스&lt;/a&gt; 입니다 .</target>
        </trans-unit>
        <trans-unit id="eee16c770d693d02152db3c308800b474ce07d2b" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;package-summary&quot;&gt;functional interface&lt;/a&gt; whose functional method is &lt;a href=&quot;bifunction#apply-T-U-&quot;&gt;&lt;code&gt;apply(Object, Object)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이것은 기능적 메소드가 &lt;a href=&quot;bifunction#apply-T-U-&quot;&gt; &lt;code&gt;apply(Object, Object)&lt;/code&gt; &lt;/a&gt; 인 &lt;a href=&quot;package-summary&quot;&gt;기능적 인터페이스&lt;/a&gt; 입니다 .</target>
        </trans-unit>
        <trans-unit id="de8483165f774b131e073c9037e36d34f4ac4057" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;package-summary&quot;&gt;functional interface&lt;/a&gt; whose functional method is &lt;a href=&quot;bipredicate#test-T-U-&quot;&gt;&lt;code&gt;test(Object, Object)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이것은 인 &lt;a href=&quot;package-summary&quot;&gt;기능적 인터페이스&lt;/a&gt; 그의 기능적 방법 &lt;a href=&quot;bipredicate#test-T-U-&quot;&gt; &lt;code&gt;test(Object, Object)&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d0b42dc82e83dd8f0685d8b8abce12f9b22d90e4" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;package-summary&quot;&gt;functional interface&lt;/a&gt; whose functional method is &lt;a href=&quot;booleansupplier#getAsBoolean--&quot;&gt;&lt;code&gt;getAsBoolean()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이것은 함수 메소드가 &lt;a href=&quot;booleansupplier#getAsBoolean--&quot;&gt; &lt;code&gt;getAsBoolean()&lt;/code&gt; &lt;/a&gt; 인 &lt;a href=&quot;package-summary&quot;&gt;함수 인터페이스&lt;/a&gt; 입니다 .</target>
        </trans-unit>
        <trans-unit id="b82233a26d8ec4b1f0ead992f8b66665b7e4fd03" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;package-summary&quot;&gt;functional interface&lt;/a&gt; whose functional method is &lt;a href=&quot;consumer#accept-T-&quot;&gt;&lt;code&gt;accept(Object)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이것은이다 &lt;a href=&quot;package-summary&quot;&gt;기능 인터페이스&lt;/a&gt; 그 기능 방법 &lt;a href=&quot;consumer#accept-T-&quot;&gt; &lt;code&gt;accept(Object)&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="feed7b921d3afa0aff44e28c122f48625314da45" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;package-summary&quot;&gt;functional interface&lt;/a&gt; whose functional method is &lt;a href=&quot;doublebinaryoperator#applyAsDouble-double-double-&quot;&gt;&lt;code&gt;applyAsDouble(double, double)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이것은 함수 메소드가 &lt;a href=&quot;doublebinaryoperator#applyAsDouble-double-double-&quot;&gt; &lt;code&gt;applyAsDouble(double, double)&lt;/code&gt; &lt;/a&gt; 인 &lt;a href=&quot;package-summary&quot;&gt;함수 인터페이스&lt;/a&gt; 입니다 .</target>
        </trans-unit>
        <trans-unit id="625c7390d0cfdffa14487e376ddd15557661505b" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;package-summary&quot;&gt;functional interface&lt;/a&gt; whose functional method is &lt;a href=&quot;doubleconsumer#accept-double-&quot;&gt;&lt;code&gt;accept(double)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이것은이다 &lt;a href=&quot;package-summary&quot;&gt;기능 인터페이스&lt;/a&gt; 그 기능 방법 &lt;a href=&quot;doubleconsumer#accept-double-&quot;&gt; &lt;code&gt;accept(double)&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="cef5551e0b40e1feb2180320562a5467e1260822" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;package-summary&quot;&gt;functional interface&lt;/a&gt; whose functional method is &lt;a href=&quot;doublefunction#apply-double-&quot;&gt;&lt;code&gt;apply(double)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이것은 인 &lt;a href=&quot;package-summary&quot;&gt;기능성 계면&lt;/a&gt; 그 작용 방법 &lt;a href=&quot;doublefunction#apply-double-&quot;&gt; &lt;code&gt;apply(double)&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="2b4dc1dc81bd3e31b87bf16cf34db3d33c346eff" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;package-summary&quot;&gt;functional interface&lt;/a&gt; whose functional method is &lt;a href=&quot;doublepredicate#test-double-&quot;&gt;&lt;code&gt;test(double)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이것은 인 &lt;a href=&quot;package-summary&quot;&gt;기능적 인터페이스&lt;/a&gt; 그의 기능적 방법 &lt;a href=&quot;doublepredicate#test-double-&quot;&gt; &lt;code&gt;test(double)&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="02d927d182fc65cbeccb77d8bd478f225017ca44" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;package-summary&quot;&gt;functional interface&lt;/a&gt; whose functional method is &lt;a href=&quot;doublesupplier#getAsDouble--&quot;&gt;&lt;code&gt;getAsDouble()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이것은 함수 메소드가 &lt;a href=&quot;doublesupplier#getAsDouble--&quot;&gt; &lt;code&gt;getAsDouble()&lt;/code&gt; &lt;/a&gt; 인 &lt;a href=&quot;package-summary&quot;&gt;함수 인터페이스&lt;/a&gt; 입니다 .</target>
        </trans-unit>
        <trans-unit id="14dde154b57fe34bc58aa95d1ab701873cf36fae" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;package-summary&quot;&gt;functional interface&lt;/a&gt; whose functional method is &lt;a href=&quot;doubletointfunction#applyAsInt-double-&quot;&gt;&lt;code&gt;applyAsInt(double)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이것은 함수 메소드가 &lt;a href=&quot;doubletointfunction#applyAsInt-double-&quot;&gt; &lt;code&gt;applyAsInt(double)&lt;/code&gt; &lt;/a&gt; 인 &lt;a href=&quot;package-summary&quot;&gt;함수 인터페이스&lt;/a&gt; 입니다 .</target>
        </trans-unit>
        <trans-unit id="54fa8316aa541a8095fbf21e5d4433529eaf3f63" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;package-summary&quot;&gt;functional interface&lt;/a&gt; whose functional method is &lt;a href=&quot;doubletolongfunction#applyAsLong-double-&quot;&gt;&lt;code&gt;applyAsLong(double)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이것은 함수 메소드가 &lt;a href=&quot;doubletolongfunction#applyAsLong-double-&quot;&gt; &lt;code&gt;applyAsLong(double)&lt;/code&gt; &lt;/a&gt; 인 &lt;a href=&quot;package-summary&quot;&gt;함수 인터페이스&lt;/a&gt; 입니다 .</target>
        </trans-unit>
        <trans-unit id="437174ca1707fe033a57d51dc1887b609adc48d4" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;package-summary&quot;&gt;functional interface&lt;/a&gt; whose functional method is &lt;a href=&quot;doubleunaryoperator#applyAsDouble-double-&quot;&gt;&lt;code&gt;applyAsDouble(double)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이것은 함수 메소드가 &lt;a href=&quot;doubleunaryoperator#applyAsDouble-double-&quot;&gt; &lt;code&gt;applyAsDouble(double)&lt;/code&gt; &lt;/a&gt; 인 &lt;a href=&quot;package-summary&quot;&gt;함수 인터페이스&lt;/a&gt; 입니다 .</target>
        </trans-unit>
        <trans-unit id="a90c05eecc9b96fb0798e19823a0259e7480da08" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;package-summary&quot;&gt;functional interface&lt;/a&gt; whose functional method is &lt;a href=&quot;function#apply-T-&quot;&gt;&lt;code&gt;Function.apply(Object)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이것은 인 &lt;a href=&quot;package-summary&quot;&gt;기능적 인터페이스&lt;/a&gt; 그의 기능적 방법 &lt;a href=&quot;function#apply-T-&quot;&gt; &lt;code&gt;Function.apply(Object)&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a1651ace3447f3cb2948f86832dd5df2e8893791" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;package-summary&quot;&gt;functional interface&lt;/a&gt; whose functional method is &lt;a href=&quot;function#apply-T-&quot;&gt;&lt;code&gt;apply(Object)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이것은 함수 메소드가 &lt;a href=&quot;function#apply-T-&quot;&gt; &lt;code&gt;apply(Object)&lt;/code&gt; &lt;/a&gt; 인 &lt;a href=&quot;package-summary&quot;&gt;함수 인터페이스&lt;/a&gt; 입니다 .</target>
        </trans-unit>
        <trans-unit id="6c2ebdc64214cc919b6d7296171a81ed396b8554" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;package-summary&quot;&gt;functional interface&lt;/a&gt; whose functional method is &lt;a href=&quot;intbinaryoperator#applyAsInt-int-int-&quot;&gt;&lt;code&gt;applyAsInt(int, int)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이것은 함수 메소드가 &lt;a href=&quot;intbinaryoperator#applyAsInt-int-int-&quot;&gt; &lt;code&gt;applyAsInt(int, int)&lt;/code&gt; &lt;/a&gt; 인 &lt;a href=&quot;package-summary&quot;&gt;함수 인터페이스&lt;/a&gt; 입니다 .</target>
        </trans-unit>
        <trans-unit id="ee34a59ae3a55ec3b7bd01654ba0de8912085085" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;package-summary&quot;&gt;functional interface&lt;/a&gt; whose functional method is &lt;a href=&quot;intconsumer#accept-int-&quot;&gt;&lt;code&gt;accept(int)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이것은 인 &lt;a href=&quot;package-summary&quot;&gt;기능성 계면&lt;/a&gt; 그 작용 방법 &lt;a href=&quot;intconsumer#accept-int-&quot;&gt; &lt;code&gt;accept(int)&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="dd8c743916e1f470ecddb6f3ea62afe876554db8" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;package-summary&quot;&gt;functional interface&lt;/a&gt; whose functional method is &lt;a href=&quot;intfunction#apply-int-&quot;&gt;&lt;code&gt;apply(int)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이것은 함수 메소드가 &lt;a href=&quot;intfunction#apply-int-&quot;&gt; &lt;code&gt;apply(int)&lt;/code&gt; &lt;/a&gt; 인 &lt;a href=&quot;package-summary&quot;&gt;함수 인터페이스&lt;/a&gt; 입니다 .</target>
        </trans-unit>
        <trans-unit id="76ec6eddf617873e36216fe1c69ac71ad39a86e7" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;package-summary&quot;&gt;functional interface&lt;/a&gt; whose functional method is &lt;a href=&quot;intpredicate#test-int-&quot;&gt;&lt;code&gt;test(int)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이것은 함수 메소드가 &lt;a href=&quot;intpredicate#test-int-&quot;&gt; &lt;code&gt;test(int)&lt;/code&gt; &lt;/a&gt; 인 &lt;a href=&quot;package-summary&quot;&gt;함수 인터페이스&lt;/a&gt; 입니다 .</target>
        </trans-unit>
        <trans-unit id="6f66a001977e876f8002ffc4c84917bf6b996d95" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;package-summary&quot;&gt;functional interface&lt;/a&gt; whose functional method is &lt;a href=&quot;intsupplier#getAsInt--&quot;&gt;&lt;code&gt;getAsInt()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이것은 함수 메소드가 &lt;a href=&quot;intsupplier#getAsInt--&quot;&gt; &lt;code&gt;getAsInt()&lt;/code&gt; &lt;/a&gt; 인 &lt;a href=&quot;package-summary&quot;&gt;함수 인터페이스&lt;/a&gt; 입니다 .</target>
        </trans-unit>
        <trans-unit id="228694a853dbb3229ec00a4218d56eb99603077e" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;package-summary&quot;&gt;functional interface&lt;/a&gt; whose functional method is &lt;a href=&quot;inttodoublefunction#applyAsDouble-int-&quot;&gt;&lt;code&gt;applyAsDouble(int)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이것은 함수 메소드가 &lt;a href=&quot;inttodoublefunction#applyAsDouble-int-&quot;&gt; &lt;code&gt;applyAsDouble(int)&lt;/code&gt; &lt;/a&gt; 인 &lt;a href=&quot;package-summary&quot;&gt;함수 인터페이스&lt;/a&gt; 입니다 .</target>
        </trans-unit>
        <trans-unit id="0a8c09e34761c36bad4357d2f50f9ea5ee73e3f5" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;package-summary&quot;&gt;functional interface&lt;/a&gt; whose functional method is &lt;a href=&quot;inttolongfunction#applyAsLong-int-&quot;&gt;&lt;code&gt;applyAsLong(int)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이것은 함수 메소드가 &lt;a href=&quot;inttolongfunction#applyAsLong-int-&quot;&gt; &lt;code&gt;applyAsLong(int)&lt;/code&gt; &lt;/a&gt; 인 &lt;a href=&quot;package-summary&quot;&gt;함수 인터페이스&lt;/a&gt; 입니다 .</target>
        </trans-unit>
        <trans-unit id="9b677297b203675bb540ee01fd43ce2e225b0ccb" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;package-summary&quot;&gt;functional interface&lt;/a&gt; whose functional method is &lt;a href=&quot;intunaryoperator#applyAsInt-int-&quot;&gt;&lt;code&gt;applyAsInt(int)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이것은 함수 메소드가 &lt;a href=&quot;intunaryoperator#applyAsInt-int-&quot;&gt; &lt;code&gt;applyAsInt(int)&lt;/code&gt; &lt;/a&gt; 인 &lt;a href=&quot;package-summary&quot;&gt;함수 인터페이스&lt;/a&gt; 입니다 .</target>
        </trans-unit>
        <trans-unit id="c14050baf0cd35ec605547c0f766662283b317a9" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;package-summary&quot;&gt;functional interface&lt;/a&gt; whose functional method is &lt;a href=&quot;longbinaryoperator#applyAsLong-long-long-&quot;&gt;&lt;code&gt;applyAsLong(long, long)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이것은 함수 메소드가 &lt;a href=&quot;longbinaryoperator#applyAsLong-long-long-&quot;&gt; &lt;code&gt;applyAsLong(long, long)&lt;/code&gt; &lt;/a&gt; 인 &lt;a href=&quot;package-summary&quot;&gt;함수 인터페이스&lt;/a&gt; 입니다 .</target>
        </trans-unit>
        <trans-unit id="876cc436c42a0025cc88da794624d9a7e7ab2bbc" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;package-summary&quot;&gt;functional interface&lt;/a&gt; whose functional method is &lt;a href=&quot;longconsumer#accept-long-&quot;&gt;&lt;code&gt;accept(long)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이것은이다 &lt;a href=&quot;package-summary&quot;&gt;기능 인터페이스&lt;/a&gt; 그 기능 방법 &lt;a href=&quot;longconsumer#accept-long-&quot;&gt; &lt;code&gt;accept(long)&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c3a54e2c4b2e6483023138130a309e65456d9355" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;package-summary&quot;&gt;functional interface&lt;/a&gt; whose functional method is &lt;a href=&quot;longfunction#apply-long-&quot;&gt;&lt;code&gt;apply(long)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이것은 인 &lt;a href=&quot;package-summary&quot;&gt;기능성 계면&lt;/a&gt; 그 작용 방법 &lt;a href=&quot;longfunction#apply-long-&quot;&gt; &lt;code&gt;apply(long)&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="8e796456c6cdb902ddedb78dc86ab470172cb5c3" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;package-summary&quot;&gt;functional interface&lt;/a&gt; whose functional method is &lt;a href=&quot;longpredicate#test-long-&quot;&gt;&lt;code&gt;test(long)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이것은 인 &lt;a href=&quot;package-summary&quot;&gt;기능적 인터페이스&lt;/a&gt; 그의 기능적 방법 &lt;a href=&quot;longpredicate#test-long-&quot;&gt; &lt;code&gt;test(long)&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="14dc71540ec3dd9da399059b894e32f45a0b1104" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;package-summary&quot;&gt;functional interface&lt;/a&gt; whose functional method is &lt;a href=&quot;longsupplier#getAsLong--&quot;&gt;&lt;code&gt;getAsLong()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이것은 함수 메소드가 &lt;a href=&quot;longsupplier#getAsLong--&quot;&gt; &lt;code&gt;getAsLong()&lt;/code&gt; &lt;/a&gt; 인 &lt;a href=&quot;package-summary&quot;&gt;함수 인터페이스&lt;/a&gt; 입니다 .</target>
        </trans-unit>
        <trans-unit id="8d84ace773902105df96a362f149933c2372b33b" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;package-summary&quot;&gt;functional interface&lt;/a&gt; whose functional method is &lt;a href=&quot;longtodoublefunction#applyAsDouble-long-&quot;&gt;&lt;code&gt;applyAsDouble(long)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이것은 함수 메소드가 &lt;a href=&quot;longtodoublefunction#applyAsDouble-long-&quot;&gt; &lt;code&gt;applyAsDouble(long)&lt;/code&gt; &lt;/a&gt; 인 &lt;a href=&quot;package-summary&quot;&gt;함수 인터페이스&lt;/a&gt; 입니다 .</target>
        </trans-unit>
        <trans-unit id="5767a02f715673605df8ab1c07a0cd9c23fe09dc" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;package-summary&quot;&gt;functional interface&lt;/a&gt; whose functional method is &lt;a href=&quot;longtointfunction#applyAsInt-long-&quot;&gt;&lt;code&gt;applyAsInt(long)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이것은 함수 메소드가 &lt;a href=&quot;longtointfunction#applyAsInt-long-&quot;&gt; &lt;code&gt;applyAsInt(long)&lt;/code&gt; &lt;/a&gt; 인 &lt;a href=&quot;package-summary&quot;&gt;함수 인터페이스&lt;/a&gt; 입니다 .</target>
        </trans-unit>
        <trans-unit id="edabe3b752c21cdcb3d8b61c340cb45073553884" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;package-summary&quot;&gt;functional interface&lt;/a&gt; whose functional method is &lt;a href=&quot;longunaryoperator#applyAsLong-long-&quot;&gt;&lt;code&gt;applyAsLong(long)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이것은 기능적 메소드가 &lt;a href=&quot;longunaryoperator#applyAsLong-long-&quot;&gt; &lt;code&gt;applyAsLong(long)&lt;/code&gt; &lt;/a&gt; 인 &lt;a href=&quot;package-summary&quot;&gt;기능적 인터페이스&lt;/a&gt; 입니다 .</target>
        </trans-unit>
        <trans-unit id="c107b00f4c172c129cbfdfe9db8937b2f51201a9" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;package-summary&quot;&gt;functional interface&lt;/a&gt; whose functional method is &lt;a href=&quot;objdoubleconsumer#accept-T-double-&quot;&gt;&lt;code&gt;accept(Object, double)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이것은이다 &lt;a href=&quot;package-summary&quot;&gt;기능 인터페이스&lt;/a&gt; 그 기능 방법 &lt;a href=&quot;objdoubleconsumer#accept-T-double-&quot;&gt; &lt;code&gt;accept(Object, double)&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="61b509856449bf28a2144ee3539c7b11d1c18177" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;package-summary&quot;&gt;functional interface&lt;/a&gt; whose functional method is &lt;a href=&quot;objintconsumer#accept-T-int-&quot;&gt;&lt;code&gt;accept(Object, int)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이것은 함수 메소드가 &lt;a href=&quot;objintconsumer#accept-T-int-&quot;&gt; &lt;code&gt;accept(Object, int)&lt;/code&gt; &lt;/a&gt; 인 &lt;a href=&quot;package-summary&quot;&gt;함수 인터페이스&lt;/a&gt; 입니다 .</target>
        </trans-unit>
        <trans-unit id="385a27c104a9667378588dcc082b9cd07faef589" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;package-summary&quot;&gt;functional interface&lt;/a&gt; whose functional method is &lt;a href=&quot;objlongconsumer#accept-T-long-&quot;&gt;&lt;code&gt;accept(Object, long)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이것은 함수 메소드가 &lt;a href=&quot;objlongconsumer#accept-T-long-&quot;&gt; &lt;code&gt;accept(Object, long)&lt;/code&gt; &lt;/a&gt; 인 &lt;a href=&quot;package-summary&quot;&gt;함수 인터페이스&lt;/a&gt; 입니다 .</target>
        </trans-unit>
        <trans-unit id="335bb3e986bdaec85f93d6a604222ca93fecf9b9" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;package-summary&quot;&gt;functional interface&lt;/a&gt; whose functional method is &lt;a href=&quot;predicate#test-T-&quot;&gt;&lt;code&gt;test(Object)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이것은 인 &lt;a href=&quot;package-summary&quot;&gt;기능적 인터페이스&lt;/a&gt; 그의 기능적 방법 &lt;a href=&quot;predicate#test-T-&quot;&gt; &lt;code&gt;test(Object)&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="30e54ba7674096e4be0a285fc8c169ad038bf12c" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;package-summary&quot;&gt;functional interface&lt;/a&gt; whose functional method is &lt;a href=&quot;supplier#get--&quot;&gt;&lt;code&gt;get()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이것은 함수 메소드가 &lt;a href=&quot;supplier#get--&quot;&gt; &lt;code&gt;get()&lt;/code&gt; &lt;/a&gt; 인 &lt;a href=&quot;package-summary&quot;&gt;함수 인터페이스&lt;/a&gt; 입니다 .</target>
        </trans-unit>
        <trans-unit id="b9d5f13d2cf8f35e9df7b7982efcefc6f0901e9f" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;package-summary&quot;&gt;functional interface&lt;/a&gt; whose functional method is &lt;a href=&quot;todoublebifunction#applyAsDouble-T-U-&quot;&gt;&lt;code&gt;applyAsDouble(Object, Object)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이것은 함수 메소드가 &lt;a href=&quot;todoublebifunction#applyAsDouble-T-U-&quot;&gt; &lt;code&gt;applyAsDouble(Object, Object)&lt;/code&gt; &lt;/a&gt; 인 &lt;a href=&quot;package-summary&quot;&gt;함수 인터페이스&lt;/a&gt; 입니다 .</target>
        </trans-unit>
        <trans-unit id="5c18190e729bf073a74c9dab21f88515920ecc2f" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;package-summary&quot;&gt;functional interface&lt;/a&gt; whose functional method is &lt;a href=&quot;todoublefunction#applyAsDouble-T-&quot;&gt;&lt;code&gt;applyAsDouble(Object)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이것은 함수 메소드가 &lt;a href=&quot;todoublefunction#applyAsDouble-T-&quot;&gt; &lt;code&gt;applyAsDouble(Object)&lt;/code&gt; &lt;/a&gt; 인 &lt;a href=&quot;package-summary&quot;&gt;함수 인터페이스&lt;/a&gt; 입니다 .</target>
        </trans-unit>
        <trans-unit id="1f6fb1a358146e5cf4e85d44591f0c6e1287ebd4" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;package-summary&quot;&gt;functional interface&lt;/a&gt; whose functional method is &lt;a href=&quot;tointbifunction#applyAsInt-T-U-&quot;&gt;&lt;code&gt;applyAsInt(Object, Object)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이것은 함수 메소드가 &lt;a href=&quot;tointbifunction#applyAsInt-T-U-&quot;&gt; &lt;code&gt;applyAsInt(Object, Object)&lt;/code&gt; &lt;/a&gt; 인 &lt;a href=&quot;package-summary&quot;&gt;함수 인터페이스&lt;/a&gt; 입니다 .</target>
        </trans-unit>
        <trans-unit id="888bcb7c7ac17b788faf5f54f7ca2b854903a356" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;package-summary&quot;&gt;functional interface&lt;/a&gt; whose functional method is &lt;a href=&quot;tointfunction#applyAsInt-T-&quot;&gt;&lt;code&gt;applyAsInt(Object)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이것은 함수 메소드가 &lt;a href=&quot;tointfunction#applyAsInt-T-&quot;&gt; &lt;code&gt;applyAsInt(Object)&lt;/code&gt; &lt;/a&gt; 인 &lt;a href=&quot;package-summary&quot;&gt;함수 인터페이스&lt;/a&gt; 입니다 .</target>
        </trans-unit>
        <trans-unit id="ebce2ad151b7e651125b67551fc0e7898304f666" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;package-summary&quot;&gt;functional interface&lt;/a&gt; whose functional method is &lt;a href=&quot;tolongbifunction#applyAsLong-T-U-&quot;&gt;&lt;code&gt;applyAsLong(Object, Object)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이것은 함수 메소드가 &lt;a href=&quot;tolongbifunction#applyAsLong-T-U-&quot;&gt; &lt;code&gt;applyAsLong(Object, Object)&lt;/code&gt; &lt;/a&gt; 인 &lt;a href=&quot;package-summary&quot;&gt;함수 인터페이스&lt;/a&gt; 입니다 .</target>
        </trans-unit>
        <trans-unit id="b4243e0e0d96016a563eb752b051e8a9353d386a" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;package-summary&quot;&gt;functional interface&lt;/a&gt; whose functional method is &lt;a href=&quot;tolongfunction#applyAsLong-T-&quot;&gt;&lt;code&gt;applyAsLong(Object)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이것은 함수 메소드가 &lt;a href=&quot;tolongfunction#applyAsLong-T-&quot;&gt; &lt;code&gt;applyAsLong(Object)&lt;/code&gt; &lt;/a&gt; 인 &lt;a href=&quot;package-summary&quot;&gt;함수 인터페이스&lt;/a&gt; 입니다 .</target>
        </trans-unit>
        <trans-unit id="b8d258b12a70013a60abae2d3c2102f4bb1feca7" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;package-summary#StreamOps&quot;&gt;short-circuiting stateful intermediate operation&lt;/a&gt;.</source>
          <target state="translated">이것은 &lt;a href=&quot;package-summary#StreamOps&quot;&gt;단락 상태 저장 중간 작동&lt;/a&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="85016ecd4e3ddabe1a873e02ba93aafedbb89ef2" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;package-summary#StreamOps&quot;&gt;short-circuiting terminal operation&lt;/a&gt;.</source>
          <target state="translated">이것은 &lt;a href=&quot;package-summary#StreamOps&quot;&gt;단락 터미널 작업&lt;/a&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="7b6c8a986be7ee6309dbcbb422f6d15881c32a38" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;package-summary#StreamOps&quot;&gt;stateful intermediate operation&lt;/a&gt;.</source>
          <target state="translated">이것은 &lt;a href=&quot;package-summary#StreamOps&quot;&gt;상태 저장 중간 작업&lt;/a&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="81f0c9d12a1c79737ee9c6efec3e96a23965f9fc" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;package-summary#StreamOps&quot;&gt;terminal operation&lt;/a&gt;.</source>
          <target state="translated">이것은 &lt;a href=&quot;package-summary#StreamOps&quot;&gt;터미널 작업&lt;/a&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="9d70d5ce12612bb1e7aaddcc7a2e3c6218ff04aa" translate="yes" xml:space="preserve">
          <source>This is a classic &quot;bounded buffer&quot;, in which a fixed-sized array holds elements inserted by producers and extracted by consumers. Once created, the capacity cannot be changed. Attempts to &lt;code&gt;put&lt;/code&gt; an element into a full queue will result in the operation blocking; attempts to &lt;code&gt;take&lt;/code&gt; an element from an empty queue will similarly block.</source>
          <target state="translated">고정 된 크기의 배열은 생산자가 삽입하고 소비자가 추출한 요소를 보유하는 고전적인 &quot;바운드 버퍼&quot;입니다. 일단 생성되면 용량을 변경할 수 없습니다. 요소를 전체 대기열 에 &lt;code&gt;put&lt;/code&gt; 하면 작업이 차단됩니다. 빈 대기열에서 요소 를 &lt;code&gt;take&lt;/code&gt; 오려고 시도 하면 마찬가지로 차단됩니다.</target>
        </trans-unit>
        <trans-unit id="e959474c3a5948e338d55715e25cb555c3cca9d5" translate="yes" xml:space="preserve">
          <source>This is a convenience method that can be used to log entry to a method. A LogRecord with message &quot;ENTRY {0}&quot;, log level FINER, and the given sourceMethod, sourceClass, and parameter is logged.</source>
          <target state="translated">이것은 메소드에 대한 입력을 기록하는 데 사용할 수있는 편리한 메소드입니다. &quot;ENTRY {0}&quot;메시지, 로그 레벨 FINER 및 지정된 sourceMethod, sourceClass 및 매개 변수가있는 LogRecord가 기록됩니다.</target>
        </trans-unit>
        <trans-unit id="828f2868ff5ac7338513a03553198b5b2c56c2be" translate="yes" xml:space="preserve">
          <source>This is a convenience method that can be used to log entry to a method. A LogRecord with message &quot;ENTRY&quot; (followed by a format {N} indicator for each entry in the parameter array), log level FINER, and the given sourceMethod, sourceClass, and parameters is logged.</source>
          <target state="translated">이것은 메소드에 대한 입력을 기록하는 데 사용할 수있는 편리한 메소드입니다. 메시지 &quot;ENTRY&quot;(매개 변수 배열의 각 항목에 대한 형식 {N} 표시기), 로그 레벨 FINER 및 지정된 sourceMethod, sourceClass 및 매개 변수가있는 LogRecord가 기록됩니다.</target>
        </trans-unit>
        <trans-unit id="34bda061cf7a96f3aa1be24cacae7600e1f013c9" translate="yes" xml:space="preserve">
          <source>This is a convenience method that can be used to log entry to a method. A LogRecord with message &quot;ENTRY&quot;, log level FINER, and the given sourceMethod and sourceClass is logged.</source>
          <target state="translated">이것은 메소드에 대한 입력을 기록하는 데 사용할 수있는 편리한 메소드입니다. &quot;ENTRY&quot;메시지, 로그 레벨 FINER 및 지정된 sourceMethod 및 sourceClass가있는 LogRecord가 기록됩니다.</target>
        </trans-unit>
        <trans-unit id="59a538c35cfad44f5bc58a272cb23dae34322e98" translate="yes" xml:space="preserve">
          <source>This is a convenience method that can be used to log returning from a method. A LogRecord with message &quot;RETURN {0}&quot;, log level FINER, and the gives sourceMethod, sourceClass, and result object is logged.</source>
          <target state="translated">메소드에서 리턴을 로그하는 데 사용할 수있는 편리한 메소드입니다. &quot;RETURN {0}&quot;메시지, 로그 레벨 FINER 및 제공 sourceMethod, sourceClass 및 결과 오브젝트가있는 LogRecord가 기록됩니다.</target>
        </trans-unit>
        <trans-unit id="1d269250334a81c7b5c96143a33dcdd6f421b0e2" translate="yes" xml:space="preserve">
          <source>This is a convenience method that can be used to log returning from a method. A LogRecord with message &quot;RETURN&quot;, log level FINER, and the given sourceMethod and sourceClass is logged.</source>
          <target state="translated">메소드에서 리턴을 로그하는 데 사용할 수있는 편리한 메소드입니다. &quot;RETURN&quot;메시지, 로그 레벨 FINER 및 지정된 sourceMethod 및 sourceClass가있는 LogRecord가 기록됩니다.</target>
        </trans-unit>
        <trans-unit id="469d4aed40c128701207e2291e95bb088d12bddb" translate="yes" xml:space="preserve">
          <source>This is a convenience method to determine if the category would be a member of the result of &lt;code&gt;getSupportedAttributeCategories()&lt;/code&gt;.</source>
          <target state="translated">이것은 카테고리가 &lt;code&gt;getSupportedAttributeCategories()&lt;/code&gt; 결과의 멤버인지 판별하기위한 편리한 메소드 입니다.</target>
        </trans-unit>
        <trans-unit id="47880d5e2a8965f45542e772b5f3c48ad9b88d9b" translate="yes" xml:space="preserve">
          <source>This is a convenience method to determine if the value would be a member of the result of &lt;code&gt;getSupportedAttributeValues(...)&lt;/code&gt;.</source>
          <target state="translated">이것은 값이 &lt;code&gt;getSupportedAttributeValues(...)&lt;/code&gt; 결과의 멤버인지 판별하기위한 편리한 메소드 입니다.</target>
        </trans-unit>
        <trans-unit id="d5e32d098a20a7668fc6cd0e7091c0b3042ac28d" translate="yes" xml:space="preserve">
          <source>This is a convenience method to log that a method is terminating by throwing an exception. The logging is done using the FINER level.</source>
          <target state="translated">이는 예외를 발생시켜 메소드가 종료되었음을 로그하는 편리한 방법입니다. 로깅은 FINER 레벨을 사용하여 수행됩니다.</target>
        </trans-unit>
        <trans-unit id="9ff2b719a3774a6a5dea506babe564980e8a16fc" translate="yes" xml:space="preserve">
          <source>This is a convenience method. An invocation of the form</source>
          <target state="translated">이것은 편리한 방법입니다. 폼의 호출</target>
        </trans-unit>
        <trans-unit id="c96ca48246895e1e75154e61e8f4eb3246fe3100" translate="yes" xml:space="preserve">
          <source>This is a convenience method. An invocation of the form &lt;code&gt;exec(cmdarray)&lt;/code&gt; behaves in exactly the same way as the invocation &lt;code&gt;&lt;a href=&quot;runtime#exec-java.lang.String:A-java.lang.String:A-java.io.File-&quot;&gt;&lt;code&gt;exec&lt;/code&gt;&lt;/a&gt;(cmdarray, null, null)&lt;/code&gt;.</source>
          <target state="translated">이것은 편리한 방법입니다. &lt;code&gt;exec(cmdarray)&lt;/code&gt; 형식의 호출은 호출 &lt;code&gt;&lt;a href=&quot;runtime#exec-java.lang.String:A-java.lang.String:A-java.io.File-&quot;&gt;&lt;code&gt;exec&lt;/code&gt;&lt;/a&gt;(cmdarray, null, null)&lt;/code&gt; 와 정확히 같은 방식으로 작동 합니다.</target>
        </trans-unit>
        <trans-unit id="671558323b15a9545826acf332fefc3ae04da28a" translate="yes" xml:space="preserve">
          <source>This is a convenience method. An invocation of the form &lt;code&gt;exec(cmdarray, envp)&lt;/code&gt; behaves in exactly the same way as the invocation &lt;code&gt;&lt;a href=&quot;runtime#exec-java.lang.String:A-java.lang.String:A-java.io.File-&quot;&gt;&lt;code&gt;exec&lt;/code&gt;&lt;/a&gt;(cmdarray, envp, null)&lt;/code&gt;.</source>
          <target state="translated">이것은 편리한 방법입니다. &lt;code&gt;exec(cmdarray, envp)&lt;/code&gt; 형식의 호출은 호출 &lt;code&gt;&lt;a href=&quot;runtime#exec-java.lang.String:A-java.lang.String:A-java.io.File-&quot;&gt;&lt;code&gt;exec&lt;/code&gt;&lt;/a&gt;(cmdarray, envp, null)&lt;/code&gt; 와 정확히 같은 방식으로 작동 합니다.</target>
        </trans-unit>
        <trans-unit id="8762622585d07d1a3fe3a27666aca4dd1c6cc4e1" translate="yes" xml:space="preserve">
          <source>This is a convenience method. An invocation of the form &lt;code&gt;exec(command)&lt;/code&gt; behaves in exactly the same way as the invocation &lt;code&gt;&lt;a href=&quot;runtime#exec-java.lang.String-java.lang.String:A-java.io.File-&quot;&gt;&lt;code&gt;exec&lt;/code&gt;&lt;/a&gt;(command, null, null)&lt;/code&gt;.</source>
          <target state="translated">이것은 편리한 방법입니다. &lt;code&gt;exec(command)&lt;/code&gt; 형식의 호출은 호출 &lt;code&gt;&lt;a href=&quot;runtime#exec-java.lang.String-java.lang.String:A-java.io.File-&quot;&gt;&lt;code&gt;exec&lt;/code&gt;&lt;/a&gt;(command, null, null)&lt;/code&gt; 와 정확히 같은 방식으로 작동 합니다.</target>
        </trans-unit>
        <trans-unit id="ebb030791474af30bc1bb5c12fde15e50a5e6bb0" translate="yes" xml:space="preserve">
          <source>This is a convenience method. An invocation of the form &lt;code&gt;exec(command, envp)&lt;/code&gt; behaves in exactly the same way as the invocation &lt;code&gt;&lt;a href=&quot;runtime#exec-java.lang.String-java.lang.String:A-java.io.File-&quot;&gt;&lt;code&gt;exec&lt;/code&gt;&lt;/a&gt;(command, envp, null)&lt;/code&gt;.</source>
          <target state="translated">이것은 편리한 방법입니다. &lt;code&gt;exec(command, envp)&lt;/code&gt; 형식의 호출은 호출 &lt;code&gt;&lt;a href=&quot;runtime#exec-java.lang.String-java.lang.String:A-java.io.File-&quot;&gt;&lt;code&gt;exec&lt;/code&gt;&lt;/a&gt;(command, envp, null)&lt;/code&gt; 와 정확히 같은 방식으로 작동 합니다.</target>
        </trans-unit>
        <trans-unit id="22a3355a183efd6c613c54a3204fe60f8280bd46" translate="yes" xml:space="preserve">
          <source>This is a convenience method. An invocation of the form &lt;code&gt;exec(command, envp, dir)&lt;/code&gt; behaves in exactly the same way as the invocation &lt;code&gt;&lt;a href=&quot;runtime#exec-java.lang.String:A-java.lang.String:A-java.io.File-&quot;&gt;&lt;code&gt;exec&lt;/code&gt;&lt;/a&gt;(cmdarray, envp, dir)&lt;/code&gt;, where &lt;code&gt;cmdarray&lt;/code&gt; is an array of all the tokens in &lt;code&gt;command&lt;/code&gt;.</source>
          <target state="translated">이것은 편리한 방법입니다. &lt;code&gt;exec(command, envp, dir)&lt;/code&gt; 형식의 호출은 호출 &lt;code&gt;&lt;a href=&quot;runtime#exec-java.lang.String:A-java.lang.String:A-java.io.File-&quot;&gt;&lt;code&gt;exec&lt;/code&gt;&lt;/a&gt;(cmdarray, envp, dir)&lt;/code&gt; 와 정확히 같은 방식으로 작동합니다 . 여기서 &lt;code&gt;cmdarray&lt;/code&gt; 는 &lt;code&gt;command&lt;/code&gt; 에있는 모든 토큰의 배열입니다 .</target>
        </trans-unit>
        <trans-unit id="212085ea90e849fac4d77206ae33749cd6bfe7b8" translate="yes" xml:space="preserve">
          <source>This is a convenience method. An invocation of the form &lt;code&gt;redirectError(file)&lt;/code&gt; behaves in exactly the same way as the invocation &lt;a href=&quot;processbuilder#redirectError-java.lang.ProcessBuilder.Redirect-&quot;&gt;&lt;code&gt;redirectError&lt;/code&gt;&lt;/a&gt;&lt;code&gt;(Redirect.to(file))&lt;/code&gt;.</source>
          <target state="translated">이것은 편리한 방법입니다. &lt;code&gt;redirectError(file)&lt;/code&gt; 형식의 호출은, &lt;a href=&quot;processbuilder#redirectError-java.lang.ProcessBuilder.Redirect-&quot;&gt; &lt;code&gt;redirectError&lt;/code&gt; &lt;/a&gt; &lt;code&gt;(Redirect.to(file))&lt;/code&gt; 호출과 정확히 같은 방식으로 동작 합니다 .</target>
        </trans-unit>
        <trans-unit id="ba0089888bbd426596a94e0c7c90005a82da2ab9" translate="yes" xml:space="preserve">
          <source>This is a convenience method. An invocation of the form &lt;code&gt;redirectInput(file)&lt;/code&gt; behaves in exactly the same way as the invocation &lt;a href=&quot;processbuilder#redirectInput-java.lang.ProcessBuilder.Redirect-&quot;&gt;&lt;code&gt;redirectInput&lt;/code&gt;&lt;/a&gt;&lt;code&gt;(Redirect.from(file))&lt;/code&gt;.</source>
          <target state="translated">이것은 편리한 방법입니다. &lt;code&gt;redirectInput(file)&lt;/code&gt; 형식 의 호출은 &lt;a href=&quot;processbuilder#redirectInput-java.lang.ProcessBuilder.Redirect-&quot;&gt; &lt;code&gt;redirectInput&lt;/code&gt; &lt;/a&gt; &lt;code&gt;(Redirect.from(file))&lt;/code&gt; 호출과 정확히 같은 방식으로 작동 합니다 .</target>
        </trans-unit>
        <trans-unit id="b9d640027f8f852b0f012e2990ab44d8363b093c" translate="yes" xml:space="preserve">
          <source>This is a convenience method. An invocation of the form &lt;code&gt;redirectOutput(file)&lt;/code&gt; behaves in exactly the same way as the invocation &lt;a href=&quot;processbuilder#redirectOutput-java.lang.ProcessBuilder.Redirect-&quot;&gt;&lt;code&gt;redirectOutput&lt;/code&gt;&lt;/a&gt;&lt;code&gt;(Redirect.to(file))&lt;/code&gt;.</source>
          <target state="translated">이것은 편리한 방법입니다. &lt;code&gt;redirectOutput(file)&lt;/code&gt; 형식의 호출은, &lt;a href=&quot;processbuilder#redirectOutput-java.lang.ProcessBuilder.Redirect-&quot;&gt; &lt;code&gt;redirectOutput&lt;/code&gt; &lt;/a&gt; &lt;code&gt;(Redirect.to(file))&lt;/code&gt; 호출과 정확히 같은 방식으로 동작 합니다 .</target>
        </trans-unit>
        <trans-unit id="8e4268e72b3ce5f149dda082bb9fd2e67942b968" translate="yes" xml:space="preserve">
          <source>This is a convenient method for local management use and is equivalent to calling:</source>
          <target state="translated">이것은 로컬 관리 사용에 편리한 방법이며 다음을 호출하는 것과 같습니다.</target>
        </trans-unit>
        <trans-unit id="2528de4679efaae8cdc8aa0d25cf0179c90daf52" translate="yes" xml:space="preserve">
          <source>This is a final, immutable and thread-safe enum.</source>
          <target state="translated">이것은, 불변의 thread 세이프 열거 형입니다.</target>
        </trans-unit>
        <trans-unit id="5574943ba9d22f3ea1608d8d1a0edd6d592193b7" translate="yes" xml:space="preserve">
          <source>This is a functional interface and can therefore be used as the assignment target for a lambda expression or method reference.</source>
          <target state="translated">이것은 기능적인 인터페이스이므로 람다 식 또는 메서드 참조의 할당 대상으로 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="63486938df39a133193a80dfcdbfafd173d12c38" translate="yes" xml:space="preserve">
          <source>This is a general support class to provide support for implementing the BeanContextChild protocol.</source>
          <target state="translated">BeanContextChild 프로토콜 구현을 지원하기위한 일반 지원 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="868f36c96277c40dcdb01d6ff71e13bf08caa9df" translate="yes" xml:space="preserve">
          <source>This is a general support class to provide support for implementing the BeanContextChild protocol. This class may either be directly subclassed, or encapsulated and delegated to in order to implement this interface for a given component.</source>
          <target state="translated">BeanContextChild 프로토콜 구현을 지원하기위한 일반 지원 클래스입니다. 이 클래스는 주어진 컴포넌트에 대해이 인터페이스를 구현하기 위해 직접 서브 클래 싱되거나 캡슐화 및 위임 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8d17d7850524e0058998c00979afaa8fc15f15c2" translate="yes" xml:space="preserve">
          <source>This is a high-level method that uses &lt;code&gt;getMixer&lt;/code&gt; and &lt;code&gt;getLine&lt;/code&gt; internally.</source>
          <target state="translated">&lt;code&gt;getMixer&lt;/code&gt; 및 &lt;code&gt;getLine&lt;/code&gt; 을 내부적으로 사용하는 고급 방법입니다 .</target>
        </trans-unit>
        <trans-unit id="2e6a65eaffef9458b40ebbb548d73c991322871f" translate="yes" xml:space="preserve">
          <source>This is a linear congruential pseudorandom number generator, as defined by D. H. Lehmer and described by Donald E. Knuth in</source>
          <target state="translated">이것은 DH Lehmer에 의해 정의되고 Donald E. Knuth에 의해 설명 된 선형 합동 의사 난수 생성기입니다.</target>
        </trans-unit>
        <trans-unit id="0466222f15dd496eeb3158ec6b459c0b5df10f76" translate="yes" xml:space="preserve">
          <source>This is a special case formatter intended to allow a human readable form of an &lt;a href=&quot;../instant&quot;&gt;&lt;code&gt;Instant&lt;/code&gt;&lt;/a&gt;. The &lt;code&gt;Instant&lt;/code&gt; class is designed to only represent a point in time and internally stores a value in nanoseconds from a fixed epoch of 1970-01-01Z. As such, an &lt;code&gt;Instant&lt;/code&gt; cannot be formatted as a date or time without providing some form of time-zone. This formatter allows the &lt;code&gt;Instant&lt;/code&gt; to be formatted, by providing a suitable conversion using &lt;code&gt;ZoneOffset.UTC&lt;/code&gt;.</source>
          <target state="translated">이것은 사람이 읽을 수있는 형태의 &lt;a href=&quot;../instant&quot;&gt; &lt;code&gt;Instant&lt;/code&gt; &lt;/a&gt; 형식을 허용하기위한 특수한 경우의 포맷터입니다 . &lt;code&gt;Instant&lt;/code&gt; 클래스 만의 시점을 나타내도록 설계 내부적으로 1970-01-01Z의 고정 시대에서 나노초의 값을 저장한다. 따라서 어떤 형태의 시간대도 제공하지 않으면 &lt;code&gt;Instant&lt;/code&gt; 를 날짜 또는 시간으로 포맷 할 수 없습니다. 이 포맷터를 사용하면 &lt;code&gt;ZoneOffset.UTC&lt;/code&gt; 를 사용하여 적절한 변환을 제공 하여 &lt;code&gt;Instant&lt;/code&gt; 를 포맷 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="60e5b42155fba90d448f0df8642048d312059ab4" translate="yes" xml:space="preserve">
          <source>This is a support class to help build property editors.</source>
          <target state="translated">속성 편집기를 빌드하는 데 도움이되는 지원 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="ccd29d1661e043815e58d17366c7d67a45c86be2" translate="yes" xml:space="preserve">
          <source>This is a support class to make it easier for people to provide BeanInfo classes.</source>
          <target state="translated">사람들이 BeanInfo 클래스를 더 쉽게 제공 할 수 있도록 지원 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="9cda0a03cbc603a4acf1ad5e9f84ab0090c400e7" translate="yes" xml:space="preserve">
          <source>This is a thread identifier within the Java VM and may or may not map to any operating system ID.</source>
          <target state="translated">이것은 Java VM 내의 스레드 식별자이며 운영 체제 ID에 매핑되거나 매핑되지 않을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="01084dceb461526b617297bafd51f11e7a439210" translate="yes" xml:space="preserve">
          <source>This is a utility class that can be used by beans that support bound properties.</source>
          <target state="translated">바운드 특성을 지원하는 Bean에서 사용할 수있는 유틸리티 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="3b0a3eede1c3963cf6966a668b7be5229af3d0a8" translate="yes" xml:space="preserve">
          <source>This is a utility class that can be used by beans that support bound properties. It manages a list of listeners and dispatches &lt;a href=&quot;propertychangeevent&quot;&gt;&lt;code&gt;PropertyChangeEvent&lt;/code&gt;&lt;/a&gt;s to them. You can use an instance of this class as a member field of your bean and delegate these types of work to it. The &lt;a href=&quot;propertychangelistener&quot;&gt;&lt;code&gt;PropertyChangeListener&lt;/code&gt;&lt;/a&gt; can be registered for all properties or for a property specified by name.</source>
          <target state="translated">바운드 특성을 지원하는 Bean에서 사용할 수있는 유틸리티 클래스입니다. 리스너리스트를 관리하고 &lt;a href=&quot;propertychangeevent&quot;&gt; &lt;code&gt;PropertyChangeEvent&lt;/code&gt; &lt;/a&gt; 를 리스너에게 전달 합니다. 이 클래스의 인스턴스를 Bean의 멤버 필드로 사용하여 이러한 유형의 작업을 위임 할 수 있습니다. &lt;a href=&quot;propertychangelistener&quot;&gt; &lt;code&gt;PropertyChangeListener&lt;/code&gt; &lt;/a&gt; 모든 속성 또는 지정된 이름의 속성에 대해 등록 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d19549616feac6415c714ea10468a1e96f848c97" translate="yes" xml:space="preserve">
          <source>This is a utility class that can be used by beans that support constrained properties.</source>
          <target state="translated">제한된 특성을 지원하는 Bean에서 사용할 수있는 유틸리티 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="3be5b5cb8b7dd31dfd8d66f53b49f9b65a0db827" translate="yes" xml:space="preserve">
          <source>This is a utility class that can be used by beans that support constrained properties. It manages a list of listeners and dispatches &lt;a href=&quot;propertychangeevent&quot;&gt;&lt;code&gt;PropertyChangeEvent&lt;/code&gt;&lt;/a&gt;s to them. You can use an instance of this class as a member field of your bean and delegate these types of work to it. The &lt;a href=&quot;vetoablechangelistener&quot;&gt;&lt;code&gt;VetoableChangeListener&lt;/code&gt;&lt;/a&gt; can be registered for all properties or for a property specified by name.</source>
          <target state="translated">제한된 특성을 지원하는 Bean에서 사용할 수있는 유틸리티 클래스입니다. 리스너리스트를 관리하고 &lt;a href=&quot;propertychangeevent&quot;&gt; &lt;code&gt;PropertyChangeEvent&lt;/code&gt; &lt;/a&gt; 를 리스너에게 전달 합니다. 이 클래스의 인스턴스를 Bean의 멤버 필드로 사용하여 이러한 유형의 작업을 위임 할 수 있습니다. &lt;a href=&quot;vetoablechangelistener&quot;&gt; &lt;code&gt;VetoableChangeListener&lt;/code&gt; &lt;/a&gt; 모든 속성 또는 지정된 이름의 속성에 대해 등록 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d31108f927cb982cb85a92cad07a664cd3c0a6f9" translate="yes" xml:space="preserve">
          <source>This is a utility method to help in loading icon images. It takes the name of a resource file associated with the current object's class file and loads an image object from that file. Typically images will be GIFs.</source>
          <target state="translated">아이콘 이미지를로드하는 데 도움이되는 유틸리티 방법입니다. 현재 객체의 클래스 파일과 관련된 리소스 파일의 이름을 가져와 해당 파일에서 이미지 객체를로드합니다. 일반적으로 이미지는 GIF입니다.</target>
        </trans-unit>
        <trans-unit id="db051e9d5703d4dd6d2efbb762c35ab0a75469a7" translate="yes" xml:space="preserve">
          <source>This is a value-based class; use of identity-sensitive operations (including reference equality (&lt;code&gt;==&lt;/code&gt;), identity hash code, or synchronization) on instances of &lt;code&gt;Duration&lt;/code&gt; may have unpredictable results and should be avoided. The &lt;code&gt;equals&lt;/code&gt; method should be used for comparisons.</source>
          <target state="translated">이것은 가치 기반 클래스입니다. &lt;code&gt;Duration&lt;/code&gt; 인스턴스 에서 ID에 민감한 작업 (참조 등식 ( &lt;code&gt;==&lt;/code&gt; ), ID 해시 코드 또는 동기화 포함)을 사용 하면 예기치 않은 결과가 발생할 수 있으므로 피해야합니다. &lt;code&gt;equals&lt;/code&gt; 방법은 비교를 위해 사용되어야한다.</target>
        </trans-unit>
        <trans-unit id="2be9491526db295587b2e489d1760e589f7766e4" translate="yes" xml:space="preserve">
          <source>This is a value-based class; use of identity-sensitive operations (including reference equality (&lt;code&gt;==&lt;/code&gt;), identity hash code, or synchronization) on instances of &lt;code&gt;HijrahDate&lt;/code&gt; may have unpredictable results and should be avoided. The &lt;code&gt;equals&lt;/code&gt; method should be used for comparisons.</source>
          <target state="translated">이것은 가치 기반 클래스입니다. &lt;code&gt;HijrahDate&lt;/code&gt; 인스턴스 에서 ID에 민감한 작업 (참조 등식 ( &lt;code&gt;==&lt;/code&gt; ), ID 해시 코드 또는 동기화 포함)을 사용 하면 예기치 않은 결과가 발생할 수 있으므로 피해야합니다. &lt;code&gt;equals&lt;/code&gt; 방법은 비교를 위해 사용되어야한다.</target>
        </trans-unit>
        <trans-unit id="f9ebc9d394afc85407e28f7fc6976860c6d08162" translate="yes" xml:space="preserve">
          <source>This is a value-based class; use of identity-sensitive operations (including reference equality (&lt;code&gt;==&lt;/code&gt;), identity hash code, or synchronization) on instances of &lt;code&gt;Instant&lt;/code&gt; may have unpredictable results and should be avoided. The &lt;code&gt;equals&lt;/code&gt; method should be used for comparisons.</source>
          <target state="translated">이것은 가치 기반 클래스입니다. &lt;code&gt;Instant&lt;/code&gt; 인스턴스 에서 아이디에 민감한 작업 (참조 등식 ( &lt;code&gt;==&lt;/code&gt; ), 아이디 해시 코드 또는 동기화 포함)을 사용 하면 예기치 않은 결과가 발생할 수 있으므로 피해야합니다. &lt;code&gt;equals&lt;/code&gt; 방법은 비교를 위해 사용되어야한다.</target>
        </trans-unit>
        <trans-unit id="e018df6a28bbbcbd231d6281d29b3e936cd88e60" translate="yes" xml:space="preserve">
          <source>This is a value-based class; use of identity-sensitive operations (including reference equality (&lt;code&gt;==&lt;/code&gt;), identity hash code, or synchronization) on instances of &lt;code&gt;JapaneseDate&lt;/code&gt; may have unpredictable results and should be avoided. The &lt;code&gt;equals&lt;/code&gt; method should be used for comparisons.</source>
          <target state="translated">이것은 가치 기반 클래스입니다. &lt;code&gt;JapaneseDate&lt;/code&gt; 인스턴스 에서 ID에 민감한 작업 (참조 등식 ( &lt;code&gt;==&lt;/code&gt; ), ID 해시 코드 또는 동기화 포함)을 사용 하면 예기치 않은 결과가 발생할 수 있으므로 피해야합니다. &lt;code&gt;equals&lt;/code&gt; 방법은 비교를 위해 사용되어야한다.</target>
        </trans-unit>
        <trans-unit id="494d3e8e30f9011f1cdcda210eb8686777f91916" translate="yes" xml:space="preserve">
          <source>This is a value-based class; use of identity-sensitive operations (including reference equality (&lt;code&gt;==&lt;/code&gt;), identity hash code, or synchronization) on instances of &lt;code&gt;LocalDate&lt;/code&gt; may have unpredictable results and should be avoided. The &lt;code&gt;equals&lt;/code&gt; method should be used for comparisons.</source>
          <target state="translated">이것은 가치 기반 클래스입니다. &lt;code&gt;LocalDate&lt;/code&gt; 인스턴스 에서 ID에 민감한 작업 (참조 등식 ( &lt;code&gt;==&lt;/code&gt; ), ID 해시 코드 또는 동기화 포함)을 사용 하면 예기치 않은 결과가 발생할 수 있으므로 피해야합니다. &lt;code&gt;equals&lt;/code&gt; 방법은 비교를 위해 사용되어야한다.</target>
        </trans-unit>
        <trans-unit id="4e5076d4a09c5c4249687174e07abedd30ab9b4c" translate="yes" xml:space="preserve">
          <source>This is a value-based class; use of identity-sensitive operations (including reference equality (&lt;code&gt;==&lt;/code&gt;), identity hash code, or synchronization) on instances of &lt;code&gt;LocalDateTime&lt;/code&gt; may have unpredictable results and should be avoided. The &lt;code&gt;equals&lt;/code&gt; method should be used for comparisons.</source>
          <target state="translated">이것은 가치 기반 클래스입니다. &lt;code&gt;LocalDateTime&lt;/code&gt; 인스턴스 에서 ID에 민감한 작업 (참조 등식 ( &lt;code&gt;==&lt;/code&gt; ), ID 해시 코드 또는 동기화 포함)을 사용 하면 예기치 않은 결과가 발생할 수 있으므로 피해야합니다. &lt;code&gt;equals&lt;/code&gt; 방법은 비교를 위해 사용되어야한다.</target>
        </trans-unit>
        <trans-unit id="9f0db73c4b96fefd63f2e00ac7d9cf510629a618" translate="yes" xml:space="preserve">
          <source>This is a value-based class; use of identity-sensitive operations (including reference equality (&lt;code&gt;==&lt;/code&gt;), identity hash code, or synchronization) on instances of &lt;code&gt;LocalTime&lt;/code&gt; may have unpredictable results and should be avoided. The &lt;code&gt;equals&lt;/code&gt; method should be used for comparisons.</source>
          <target state="translated">이것은 가치 기반 클래스입니다. &lt;code&gt;LocalTime&lt;/code&gt; 인스턴스 에서 ID에 민감한 작업 (참조 등식 ( &lt;code&gt;==&lt;/code&gt; ), ID 해시 코드 또는 동기화 포함)을 사용 하면 예기치 않은 결과가 발생할 수 있으므로 피해야합니다. &lt;code&gt;equals&lt;/code&gt; 방법은 비교를 위해 사용되어야한다.</target>
        </trans-unit>
        <trans-unit id="90319b4136346b5ffec6d6b3cd2d2d5a1e6d46e2" translate="yes" xml:space="preserve">
          <source>This is a value-based class; use of identity-sensitive operations (including reference equality (&lt;code&gt;==&lt;/code&gt;), identity hash code, or synchronization) on instances of &lt;code&gt;MinguoDate&lt;/code&gt; may have unpredictable results and should be avoided. The &lt;code&gt;equals&lt;/code&gt; method should be used for comparisons.</source>
          <target state="translated">이것은 가치 기반 클래스입니다. &lt;code&gt;MinguoDate&lt;/code&gt; 인스턴스 에서 ID에 민감한 작업 (참조 등식 ( &lt;code&gt;==&lt;/code&gt; ), ID 해시 코드 또는 동기화 포함)을 사용 하면 예기치 않은 결과가 발생할 수 있으므로 피해야합니다. &lt;code&gt;equals&lt;/code&gt; 방법은 비교를 위해 사용되어야한다.</target>
        </trans-unit>
        <trans-unit id="ac04185fa9f728229e4221fd9c39acea84a0ffc4" translate="yes" xml:space="preserve">
          <source>This is a value-based class; use of identity-sensitive operations (including reference equality (&lt;code&gt;==&lt;/code&gt;), identity hash code, or synchronization) on instances of &lt;code&gt;MonthDay&lt;/code&gt; may have unpredictable results and should be avoided. The &lt;code&gt;equals&lt;/code&gt; method should be used for comparisons.</source>
          <target state="translated">이것은 가치 기반 클래스입니다. &lt;code&gt;MonthDay&lt;/code&gt; 인스턴스 에서 ID에 민감한 작업 (참조 등식 ( &lt;code&gt;==&lt;/code&gt; ), ID 해시 코드 또는 동기화 포함)을 사용 하면 예기치 않은 결과가 발생할 수 있으므로 피해야합니다. &lt;code&gt;equals&lt;/code&gt; 방법은 비교를 위해 사용되어야한다.</target>
        </trans-unit>
        <trans-unit id="2ee0ef855bb12b3bef14522678e734ad9b230e48" translate="yes" xml:space="preserve">
          <source>This is a value-based class; use of identity-sensitive operations (including reference equality (&lt;code&gt;==&lt;/code&gt;), identity hash code, or synchronization) on instances of &lt;code&gt;OffsetDateTime&lt;/code&gt; may have unpredictable results and should be avoided. The &lt;code&gt;equals&lt;/code&gt; method should be used for comparisons.</source>
          <target state="translated">이것은 가치 기반 클래스입니다. &lt;code&gt;OffsetDateTime&lt;/code&gt; 인스턴스 에서 ID에 민감한 작업 (참조 등식 ( &lt;code&gt;==&lt;/code&gt; ), ID 해시 코드 또는 동기화 포함)을 사용 하면 예기치 않은 결과가 발생할 수 있으므로 피해야합니다. &lt;code&gt;equals&lt;/code&gt; 방법은 비교를 위해 사용되어야한다.</target>
        </trans-unit>
        <trans-unit id="e33daf7e991f9944ffd875df2ed8e2f886cdc3ae" translate="yes" xml:space="preserve">
          <source>This is a value-based class; use of identity-sensitive operations (including reference equality (&lt;code&gt;==&lt;/code&gt;), identity hash code, or synchronization) on instances of &lt;code&gt;OffsetTime&lt;/code&gt; may have unpredictable results and should be avoided. The &lt;code&gt;equals&lt;/code&gt; method should be used for comparisons.</source>
          <target state="translated">이것은 가치 기반 클래스입니다. &lt;code&gt;OffsetTime&lt;/code&gt; 인스턴스 에서 ID에 민감한 작업 (참조 등식 ( &lt;code&gt;==&lt;/code&gt; ), ID 해시 코드 또는 동기화 포함)을 사용 하면 예기치 않은 결과가 발생할 수 있으므로 피해야합니다. &lt;code&gt;equals&lt;/code&gt; 방법은 비교를 위해 사용되어야한다.</target>
        </trans-unit>
        <trans-unit id="3330e449971a1d5eaf69f40e260dc27fda86ef09" translate="yes" xml:space="preserve">
          <source>This is a value-based class; use of identity-sensitive operations (including reference equality (&lt;code&gt;==&lt;/code&gt;), identity hash code, or synchronization) on instances of &lt;code&gt;Optional&lt;/code&gt; may have unpredictable results and should be avoided.</source>
          <target state="translated">이것은 가치 기반 클래스입니다. &lt;code&gt;Optional&lt;/code&gt; 인스턴스 에서 ID에 민감한 작업 (참조 등식 ( &lt;code&gt;==&lt;/code&gt; ), ID 해시 코드 또는 동기화 포함)을 사용 하면 예기치 않은 결과가 발생할 수 있으므로 피해야합니다.</target>
        </trans-unit>
        <trans-unit id="cd1f28591dfcdb110e5da476e0ff97335ab8103e" translate="yes" xml:space="preserve">
          <source>This is a value-based class; use of identity-sensitive operations (including reference equality (&lt;code&gt;==&lt;/code&gt;), identity hash code, or synchronization) on instances of &lt;code&gt;OptionalDouble&lt;/code&gt; may have unpredictable results and should be avoided.</source>
          <target state="translated">이것은 가치 기반 클래스입니다. &lt;code&gt;OptionalDouble&lt;/code&gt; 인스턴스 에서 ID에 민감한 작업 (참조 등식 ( &lt;code&gt;==&lt;/code&gt; ), ID 해시 코드 또는 동기화 포함)을 사용 하면 예기치 않은 결과가 발생할 수 있으므로 피해야합니다.</target>
        </trans-unit>
        <trans-unit id="e74c1ef2981faa175203df98990a14b0eebd0491" translate="yes" xml:space="preserve">
          <source>This is a value-based class; use of identity-sensitive operations (including reference equality (&lt;code&gt;==&lt;/code&gt;), identity hash code, or synchronization) on instances of &lt;code&gt;OptionalInt&lt;/code&gt; may have unpredictable results and should be avoided.</source>
          <target state="translated">이것은 가치 기반 클래스입니다. &lt;code&gt;OptionalInt&lt;/code&gt; 인스턴스 에서 ID에 민감한 작업 (참조 등식 ( &lt;code&gt;==&lt;/code&gt; ), ID 해시 코드 또는 동기화 포함)을 사용 하면 예기치 않은 결과가 발생할 수 있으므로 피해야합니다.</target>
        </trans-unit>
        <trans-unit id="5c688254c5025afc4f2a875a659e93dae44820a2" translate="yes" xml:space="preserve">
          <source>This is a value-based class; use of identity-sensitive operations (including reference equality (&lt;code&gt;==&lt;/code&gt;), identity hash code, or synchronization) on instances of &lt;code&gt;OptionalLong&lt;/code&gt; may have unpredictable results and should be avoided.</source>
          <target state="translated">이것은 가치 기반 클래스입니다. &lt;code&gt;OptionalLong&lt;/code&gt; 인스턴스 에서 ID에 민감한 작업 (참조 등식 ( &lt;code&gt;==&lt;/code&gt; ), ID 해시 코드 또는 동기화 포함)을 사용 하면 예기치 않은 결과가 발생할 수 있으므로 피해야합니다.</target>
        </trans-unit>
        <trans-unit id="d5c50720880481fd20cf0256ce8bf0f67a2daa02" translate="yes" xml:space="preserve">
          <source>This is a value-based class; use of identity-sensitive operations (including reference equality (&lt;code&gt;==&lt;/code&gt;), identity hash code, or synchronization) on instances of &lt;code&gt;Period&lt;/code&gt; may have unpredictable results and should be avoided. The &lt;code&gt;equals&lt;/code&gt; method should be used for comparisons.</source>
          <target state="translated">이것은 가치 기반 클래스입니다. &lt;code&gt;Period&lt;/code&gt; 인스턴스 에서 ID에 민감한 작업 (참조 등식 ( &lt;code&gt;==&lt;/code&gt; ), ID 해시 코드 또는 동기화 포함)을 사용 하면 예기치 않은 결과가 발생할 수 있으므로 피해야합니다. &lt;code&gt;equals&lt;/code&gt; 방법은 비교를 위해 사용되어야한다.</target>
        </trans-unit>
        <trans-unit id="df011717331e007b4a641b1d63a3ecc13b21c574" translate="yes" xml:space="preserve">
          <source>This is a value-based class; use of identity-sensitive operations (including reference equality (&lt;code&gt;==&lt;/code&gt;), identity hash code, or synchronization) on instances of &lt;code&gt;ThaiBuddhistDate&lt;/code&gt; may have unpredictable results and should be avoided. The &lt;code&gt;equals&lt;/code&gt; method should be used for comparisons.</source>
          <target state="translated">이것은 가치 기반 클래스입니다. &lt;code&gt;ThaiBuddhistDate&lt;/code&gt; 인스턴스 에서 ID에 민감한 작업 (참조 등식 ( &lt;code&gt;==&lt;/code&gt; ), ID 해시 코드 또는 동기화 포함)을 사용 하면 예기치 않은 결과가 발생할 수 있으므로 피해야합니다. &lt;code&gt;equals&lt;/code&gt; 방법은 비교를 위해 사용되어야한다.</target>
        </trans-unit>
        <trans-unit id="97f328bfd3f2f368018cd3747dc3e50528ab59f1" translate="yes" xml:space="preserve">
          <source>This is a value-based class; use of identity-sensitive operations (including reference equality (&lt;code&gt;==&lt;/code&gt;), identity hash code, or synchronization) on instances of &lt;code&gt;Year&lt;/code&gt; may have unpredictable results and should be avoided. The &lt;code&gt;equals&lt;/code&gt; method should be used for comparisons.</source>
          <target state="translated">이것은 가치 기반 클래스입니다. &lt;code&gt;Year&lt;/code&gt; 인스턴스 에서 ID에 민감한 작업 (참조 등식 ( &lt;code&gt;==&lt;/code&gt; ), ID 해시 코드 또는 동기화 포함)을 사용 하면 예기치 않은 결과가 발생할 수 있으므로 피해야합니다. &lt;code&gt;equals&lt;/code&gt; 방법은 비교를 위해 사용되어야한다.</target>
        </trans-unit>
        <trans-unit id="8a1200a7d72bbd3ac59359f0efb0cc7e0266be13" translate="yes" xml:space="preserve">
          <source>This is a value-based class; use of identity-sensitive operations (including reference equality (&lt;code&gt;==&lt;/code&gt;), identity hash code, or synchronization) on instances of &lt;code&gt;YearMonth&lt;/code&gt; may have unpredictable results and should be avoided. The &lt;code&gt;equals&lt;/code&gt; method should be used for comparisons.</source>
          <target state="translated">이것은 가치 기반 클래스입니다. &lt;code&gt;YearMonth&lt;/code&gt; 인스턴스 에서 ID에 민감한 작업 (참조 등식 ( &lt;code&gt;==&lt;/code&gt; ), ID 해시 코드 또는 동기화 포함)을 사용 하면 예기치 않은 결과가 발생할 수 있으므로 피해야합니다. &lt;code&gt;equals&lt;/code&gt; 방법은 비교를 위해 사용되어야한다.</target>
        </trans-unit>
        <trans-unit id="da89bc5dde597a447d39a9b10f407ac910c7e3c4" translate="yes" xml:space="preserve">
          <source>This is a value-based class; use of identity-sensitive operations (including reference equality (&lt;code&gt;==&lt;/code&gt;), identity hash code, or synchronization) on instances of &lt;code&gt;ZoneId&lt;/code&gt; may have unpredictable results and should be avoided. The &lt;code&gt;equals&lt;/code&gt; method should be used for comparisons.</source>
          <target state="translated">이것은 가치 기반 클래스입니다. &lt;code&gt;ZoneId&lt;/code&gt; 인스턴스 에서 ID에 민감한 작업 (참조 등식 ( &lt;code&gt;==&lt;/code&gt; ), ID 해시 코드 또는 동기화 포함)을 사용 하면 예기치 않은 결과가 발생할 수 있으므로 피해야합니다. &lt;code&gt;equals&lt;/code&gt; 방법은 비교를 위해 사용되어야한다.</target>
        </trans-unit>
        <trans-unit id="6fac88b14dc78105f4f3efd35f1db2d29c05bedd" translate="yes" xml:space="preserve">
          <source>This is a value-based class; use of identity-sensitive operations (including reference equality (&lt;code&gt;==&lt;/code&gt;), identity hash code, or synchronization) on instances of &lt;code&gt;ZoneOffset&lt;/code&gt; may have unpredictable results and should be avoided. The &lt;code&gt;equals&lt;/code&gt; method should be used for comparisons.</source>
          <target state="translated">이것은 가치 기반 클래스입니다. &lt;code&gt;ZoneOffset&lt;/code&gt; 인스턴스에서 ID 관련 작업 (참조 등식 ( &lt;code&gt;==&lt;/code&gt; ), ID 해시 코드 또는 동기화 포함)을 사용 하면 예기치 않은 결과가 발생할 수 있으므로 피해야합니다. &lt;code&gt;equals&lt;/code&gt; 방법은 비교를 위해 사용되어야한다.</target>
        </trans-unit>
        <trans-unit id="343748352d26af32da2cdf02c0dbb9052e7cc00e" translate="yes" xml:space="preserve">
          <source>This is a value-based class; use of identity-sensitive operations (including reference equality (&lt;code&gt;==&lt;/code&gt;), identity hash code, or synchronization) on instances of &lt;code&gt;ZonedDateTime&lt;/code&gt; may have unpredictable results and should be avoided. The &lt;code&gt;equals&lt;/code&gt; method should be used for comparisons.</source>
          <target state="translated">이것은 가치 기반 클래스입니다. &lt;code&gt;ZonedDateTime&lt;/code&gt; 인스턴스 에서 ID에 민감한 작업 (참조 등식 ( &lt;code&gt;==&lt;/code&gt; ), ID 해시 코드 또는 동기화 포함)을 사용 하면 예기치 않은 결과가 발생할 수 있으므로 피해야합니다. &lt;code&gt;equals&lt;/code&gt; 방법은 비교를 위해 사용되어야한다.</target>
        </trans-unit>
        <trans-unit id="f4d480278d056eccb680f14d9dc395194160fe1d" translate="yes" xml:space="preserve">
          <source>This is an &lt;a href=&quot;collector.characteristics#UNORDERED&quot;&gt;&lt;code&gt;unordered&lt;/code&gt;&lt;/a&gt; Collector.</source>
          <target state="translated">이것은 &lt;a href=&quot;collector.characteristics#UNORDERED&quot;&gt; &lt;code&gt;unordered&lt;/code&gt; &lt;/a&gt; 가 없는 수집기입니다.</target>
        </trans-unit>
        <trans-unit id="f8db533e2cb8b4d41e0d2eab1742a8f7f7f42602" translate="yes" xml:space="preserve">
          <source>This is an &lt;a href=&quot;package-summary#StreamOps&quot;&gt; intermediate operation&lt;/a&gt;.</source>
          <target state="translated">이것은 &lt;a href=&quot;package-summary#StreamOps&quot;&gt;중간 작업&lt;/a&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="ca5bbe7ff8ccd0893a3cb3fcb1a02b79ad25d960" translate="yes" xml:space="preserve">
          <source>This is an &lt;a href=&quot;package-summary#StreamOps&quot;&gt;intermediate operation&lt;/a&gt;.</source>
          <target state="translated">이것은 &lt;a href=&quot;package-summary#StreamOps&quot;&gt;중간 작업&lt;/a&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="26f219c73e1205f8e307da3efe39fa4566429f2a" translate="yes" xml:space="preserve">
          <source>This is an abstract class for representing the system policy for Subject-based authorization. A subclass implementation of this class provides a means to specify a Subject-based access control &lt;code&gt;Policy&lt;/code&gt;.</source>
          <target state="translated">이것은 주제 기반 권한 부여에 대한 시스템 정책을 나타내는 추상 클래스입니다. 이 클래스의 서브 클래스 구현은 주제 기반 액세스 제어 &lt;code&gt;Policy&lt;/code&gt; 을 지정하는 수단을 제공합니다 .</target>
        </trans-unit>
        <trans-unit id="72e4063af55512d59af15a29ad7bce5a2d420583" translate="yes" xml:space="preserve">
          <source>This is an abstract class that defines the methods common to all &lt;code&gt;CertPath&lt;/code&gt;s. Subclasses can handle different kinds of certificates (X.509, PGP, etc.).</source>
          <target state="translated">이것은 모든 &lt;code&gt;CertPath&lt;/code&gt; 에 공통의 메소드를 정의하는 추상 클래스입니다 . 서브 클래스는 다양한 종류의 인증서 (X.509, PGP 등)를 처리 할 수 ​​있습니다.</target>
        </trans-unit>
        <trans-unit id="1e3ef7d2171a6918e94882f35a1e60fab5544fa0" translate="yes" xml:space="preserve">
          <source>This is an abstract class. Concrete subclasses define the details of the client connection objects, such as whether they use JRMP or IIOP.</source>
          <target state="translated">이것은 추상 클래스입니다. 구체적 서브 클래스는 클라이언트 연결 오브젝트의 세부 사항 (예 : JRMP 또는 IIOP 사용 여부)을 정의합니다.</target>
        </trans-unit>
        <trans-unit id="70cd7da95b0fcc86b724fc2692da86565b6445c2" translate="yes" xml:space="preserve">
          <source>This is an exception that is thrown whenever a reference is made to a non-existent ACL (Access Control List).</source>
          <target state="translated">존재하지 않는 ACL (Access Control List)을 참조 할 때마다 발생하는 예외입니다.</target>
        </trans-unit>
        <trans-unit id="010128e6fb649061dbfcd00afbf2f75b833bec88" translate="yes" xml:space="preserve">
          <source>This is an exception that is thrown whenever an attempt is made to delete the last owner of an Access Control List.</source>
          <target state="translated">액세스 제어 목록의 마지막 소유자를 삭제하려고 할 때마다 발생하는 예외입니다.</target>
        </trans-unit>
        <trans-unit id="48a66a99ea966a383143cdf191984e7432c1b05e" translate="yes" xml:space="preserve">
          <source>This is an exception that is thrown whenever the modification of an object (such as an Access Control List) is only allowed to be done by an owner of the object, but the Principal attempting the modification is not an owner.</source>
          <target state="translated">액세스 제어 목록과 같은 개체의 수정이 개체의 소유자 만 수행 할 수 있지만 수정을 시도하는 주체는 소유자가 아닐 때마다 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="9be8e9f9f47f0a943fca6e3ecc37a48b79f53b55" translate="yes" xml:space="preserve">
          <source>This is an external encoded form for the key used when a standard representation of the key is needed outside the Java Virtual Machine, as when transmitting the key to some other party. The key is encoded according to a standard format (such as X.509 &lt;code&gt;SubjectPublicKeyInfo&lt;/code&gt; or PKCS#8), and is returned using the &lt;a href=&quot;key#getEncoded--&quot;&gt;&lt;code&gt;getEncoded&lt;/code&gt;&lt;/a&gt; method. Note: The syntax of the ASN.1 type &lt;code&gt;SubjectPublicKeyInfo&lt;/code&gt; is defined as follows:</source>
          <target state="translated">이는 키를 다른 사람에게 전송할 때와 같이 Java 가상 머신 외부에서 키의 표준 표현이 필요할 때 사용되는 키의 외부 인코딩 양식입니다. 키는 표준 형식 (예 : X.509 &lt;code&gt;SubjectPublicKeyInfo&lt;/code&gt; 또는 PKCS # 8) 에 따라 인코딩 되며 &lt;a href=&quot;key#getEncoded--&quot;&gt; &lt;code&gt;getEncoded&lt;/code&gt; &lt;/a&gt; 메소드를 사용하여 리턴됩니다 . 참고 : ASN.1 유형 &lt;code&gt;SubjectPublicKeyInfo&lt;/code&gt; 의 구문은 다음과 같이 정의됩니다.</target>
        </trans-unit>
        <trans-unit id="903dba422590f39b3723df4aa7227c07eb444066" translate="yes" xml:space="preserve">
          <source>This is an extremely dangerous permission to grant. Malicious applications that can instantiate their own class loaders could then load their own rogue classes into the system. These newly loaded classes could be placed into any protection domain by the class loader, thereby automatically granting the classes the permissions for that domain.</source>
          <target state="translated">이것은 매우 위험한 허가입니다. 자체 클래스 로더를 인스턴스화 할 수있는 악성 응용 프로그램은 자체 악성 클래스를 시스템에로드 할 수 있습니다. 새로로드 된 이러한 클래스는 클래스 로더가 보호 도메인에 배치 할 수 있으므로 클래스에 해당 도메인에 대한 권한이 자동으로 부여됩니다.</target>
        </trans-unit>
        <trans-unit id="84f43451804d3b84cfb6c81fd648179b0ec74c5d" translate="yes" xml:space="preserve">
          <source>This is an immutable and thread-safe class.</source>
          <target state="translated">이것은 불변의 thread 세이프 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="7b8b9cf0e645a92373798c47b0a4a435c6439661" translate="yes" xml:space="preserve">
          <source>This is an immutable and thread-safe enum.</source>
          <target state="translated">이것은 불변의 thread 세이프 열거 형입니다.</target>
        </trans-unit>
        <trans-unit id="e3cc63dede934fb82f7d897cb9660815ade2e1d7" translate="yes" xml:space="preserve">
          <source>This is an integer-based version of the Julian Day Number. Julian Day is a well-known system that represents the count of whole days since day 0, which is defined to be January 1, 4713 BCE in the Julian calendar, and -4713-11-24 Gregorian. The field has &quot;JulianDay&quot; as 'name', and 'DAYS' as 'baseUnit'. The field always refers to the local date-time, ignoring the offset or zone.</source>
          <target state="translated">이것은 율리우스 일 수의 정수 기반 버전입니다. Julian Day는 0 일 이후의 하루 수를 나타내는 잘 알려진 시스템으로, 율리우스 력으로 기원전 4713 년 1 월 1 일과 그레고리력으로 -4713-11-24로 정의됩니다. 이 필드의 이름은 &quot;JulianDay&quot;이며 'DAYS'는 'baseUnit'입니다. 이 필드는 항상 오프셋 또는 영역을 무시하고 현지 날짜-시간을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="c76b9785544144c309bda399e12e307a4ab5bfa8" translate="yes" xml:space="preserve">
          <source>This is an integer-based version of the Modified Julian Day Number. Modified Julian Day (MJD) is a well-known system that counts days continuously. It is defined relative to astronomical Julian Day as &lt;code&gt;MJD = JD - 2400000.5&lt;/code&gt;. Each Modified Julian Day runs from midnight to midnight. The field always refers to the local date-time, ignoring the offset or zone.</source>
          <target state="translated">이것은 수정 된 율리우스 일 수의 정수 기반 버전입니다. MJD (Modified Julian Day)는 일을 지속적으로 계산하는 잘 알려진 시스템입니다. 천문학적 줄리안 데이와 관련하여 &lt;code&gt;MJD = JD - 2400000.5&lt;/code&gt; 됩니다. 각 수정 된 줄리안 데이는 자정부터 자정까지입니다. 이 필드는 항상 오프셋 또는 영역을 무시하고 현지 날짜-시간을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="8e72b4b2f096ca37313ce16df6f52598ee2ed1c2" translate="yes" xml:space="preserve">
          <source>This is an interface of abstract methods for managing a variety of identity certificates. An identity certificate is a guarantee by a principal that a public key is that of another principal. (A principal represents an entity such as an individual user, a group, or a corporation.)</source>
          <target state="translated">이것은 다양한 ID 인증서를 관리하기위한 추상적 인 방법의 인터페이스입니다. 신원 인증서는 공개 키가 다른 사용자의 공개 키임을 보증하는 것입니다. (주체는 개인 사용자, 그룹 또는 회사와 같은 엔티티를 나타냅니다.)</target>
        </trans-unit>
        <trans-unit id="96cc34d0becca8008b3e851f6a03b5601d2dc565" translate="yes" xml:space="preserve">
          <source>This is called to notify the listener that it is being bound into an SSLSession.</source>
          <target state="translated">리스너에게 SSLSession에 바인드되었음을 알리기 위해 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="2930c84f7410730984796c2fa9f9bd4f9be76740" translate="yes" xml:space="preserve">
          <source>This is called to notify the listener that it is being unbound from a SSLSession.</source>
          <target state="translated">SSLSession에서 바운드되지 않음을 리스너에게 알리기 위해 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="8a67832c7b5557d1eb29706727f56695729b95a7" translate="yes" xml:space="preserve">
          <source>This is comparable to writing a &lt;code&gt;MouseListener&lt;/code&gt; in which all of the methods except &lt;code&gt;mousePressed&lt;/code&gt; are no-ops:</source>
          <target state="translated">이는 &lt;code&gt;mousePressed&lt;/code&gt; 를 제외한 모든 메소드 가 작동하지 않는 &lt;code&gt;MouseListener&lt;/code&gt; 작성과 비교할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="ee18249988bb55c3b3a9233be63b45b8a1b90623" translate="yes" xml:space="preserve">
          <source>This is dangerous because malicious code can replace the actual object with one which has incorrect or malignant data.</source>
          <target state="translated">악성 코드가 실제 개체를 부정확하거나 악성 데이터가있는 개체로 대체 할 수 있기 때문에 위험합니다.</target>
        </trans-unit>
        <trans-unit id="82186227b9628325e87a15ababffbb65738f260a" translate="yes" xml:space="preserve">
          <source>This is dangerous in that information (possibly confidential) and methods normally unavailable would be accessible to malicious code.</source>
          <target state="translated">이것은 정보 (아마 기밀 정보)와 일반적으로 사용할 수없는 방법으로 악성 코드에 액세스 할 수 있다는 점에서 위험합니다.</target>
        </trans-unit>
        <trans-unit id="b08380682f55ba97d8fa2e8eaa92bc75db71e899" translate="yes" xml:space="preserve">
          <source>This is equivalent to &lt;a href=&quot;../localdate#from-java.time.temporal.TemporalAccessor-&quot;&gt;&lt;code&gt;LocalDate.from(TemporalAccessor)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이것은 &lt;a href=&quot;../localdate#from-java.time.temporal.TemporalAccessor-&quot;&gt; &lt;code&gt;LocalDate.from(TemporalAccessor)&lt;/code&gt; &lt;/a&gt; 와 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="b7334ddae536980dc640f5aa6512f8edbf1c2ac7" translate="yes" xml:space="preserve">
          <source>This is equivalent to &lt;a href=&quot;../localdate#of-int-int-int-&quot;&gt;&lt;code&gt;LocalDate.of(int, int, int)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이것은 &lt;a href=&quot;../localdate#of-int-int-int-&quot;&gt; &lt;code&gt;LocalDate.of(int, int, int)&lt;/code&gt; &lt;/a&gt; 와 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="d46a1cb7630da5692c35eb790bb637485fc53de0" translate="yes" xml:space="preserve">
          <source>This is equivalent to &lt;a href=&quot;../localdate#ofEpochDay-long-&quot;&gt;&lt;code&gt;LocalDate.ofEpochDay(long)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이것은 &lt;a href=&quot;../localdate#ofEpochDay-long-&quot;&gt; &lt;code&gt;LocalDate.ofEpochDay(long)&lt;/code&gt; &lt;/a&gt; 와 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="d1b35eadf657b9fb567f5812bb951cf79258156b" translate="yes" xml:space="preserve">
          <source>This is equivalent to &lt;a href=&quot;../localdate#ofYearDay-int-int-&quot;&gt;&lt;code&gt;LocalDate.ofYearDay(int, int)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이것은 &lt;a href=&quot;../localdate#ofYearDay-int-int-&quot;&gt; &lt;code&gt;LocalDate.ofYearDay(int, int)&lt;/code&gt; &lt;/a&gt; 와 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="47832d281a535c5af3493409800459879e08ace2" translate="yes" xml:space="preserve">
          <source>This is equivalent to &lt;a href=&quot;../localdatetime#from-java.time.temporal.TemporalAccessor-&quot;&gt;&lt;code&gt;LocalDateTime.from(TemporalAccessor)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이것은 &lt;a href=&quot;../localdatetime#from-java.time.temporal.TemporalAccessor-&quot;&gt; &lt;code&gt;LocalDateTime.from(TemporalAccessor)&lt;/code&gt; &lt;/a&gt; 와 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="bb00819db1b26a667ce4fa4b3057bcf4364e9aff" translate="yes" xml:space="preserve">
          <source>This is equivalent to &lt;a href=&quot;../zoneddatetime#from-java.time.temporal.TemporalAccessor-&quot;&gt;&lt;code&gt;ZonedDateTime.from(TemporalAccessor)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이것은 &lt;a href=&quot;../zoneddatetime#from-java.time.temporal.TemporalAccessor-&quot;&gt; &lt;code&gt;ZonedDateTime.from(TemporalAccessor)&lt;/code&gt; &lt;/a&gt; 와 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="eeb9c3cf991b539e9b26bfb29940af886d7df231" translate="yes" xml:space="preserve">
          <source>This is equivalent to &lt;a href=&quot;../zoneddatetime#ofInstant-java.time.Instant-java.time.ZoneId-&quot;&gt;&lt;code&gt;ZonedDateTime.ofInstant(Instant, ZoneId)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이것은 &lt;a href=&quot;../zoneddatetime#ofInstant-java.time.Instant-java.time.ZoneId-&quot;&gt; &lt;code&gt;ZonedDateTime.ofInstant(Instant, ZoneId)&lt;/code&gt; &lt;/a&gt; 와 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="e3d8a007a95d6fc90c8ca31e75f1f06c7d836035" translate="yes" xml:space="preserve">
          <source>This is equivalent to &lt;code&gt;LanguageRange(range, MAX_WEIGHT)&lt;/code&gt;.</source>
          <target state="translated">이는 &lt;code&gt;LanguageRange(range, MAX_WEIGHT)&lt;/code&gt; 와 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="80ddd8795e5560be9f1a64f38c5c6ec9e1a00b14" translate="yes" xml:space="preserve">
          <source>This is equivalent to &lt;code&gt;ZonedDateTime.of(zdt.toLocalDateTime(), zdt.getOffset())&lt;/code&gt;.</source>
          <target state="translated">이는 &lt;code&gt;ZonedDateTime.of(zdt.toLocalDateTime(), zdt.getOffset())&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4a57ae1cba24030e3b8229b1eb55973ce1229963" translate="yes" xml:space="preserve">
          <source>This is equivalent to calling &lt;a href=&quot;currency#getDisplayName-java.util.Locale-&quot;&gt;&lt;code&gt;getDisplayName(Locale.getDefault(Locale.Category.DISPLAY))&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이것은 &lt;a href=&quot;currency#getDisplayName-java.util.Locale-&quot;&gt; &lt;code&gt;getDisplayName(Locale.getDefault(Locale.Category.DISPLAY))&lt;/code&gt; &lt;/a&gt; 를 호출하는 것과 같습니다 .</target>
        </trans-unit>
        <trans-unit id="70bb4ca40e07439a79c3da7de6d78fe0a284e3dc" translate="yes" xml:space="preserve">
          <source>This is equivalent to calling &lt;a href=&quot;currency#getSymbol-java.util.Locale-&quot;&gt;&lt;code&gt;getSymbol(Locale.getDefault(Locale.Category.DISPLAY))&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이것은 &lt;a href=&quot;currency#getSymbol-java.util.Locale-&quot;&gt; &lt;code&gt;getSymbol(Locale.getDefault(Locale.Category.DISPLAY))&lt;/code&gt; &lt;/a&gt; 를 호출하는 것과 같습니다 .</target>
        </trans-unit>
        <trans-unit id="82106b1468274d95d3bc3f8f544fe6dc67d6ddb0" translate="yes" xml:space="preserve">
          <source>This is equivalent to calling &lt;a href=&quot;dateformat#getDateInstance-int-java.util.Locale-&quot;&gt;&lt;code&gt;getDateInstance(DEFAULT,
     Locale.getDefault(Locale.Category.FORMAT))&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이것은 &lt;a href=&quot;dateformat#getDateInstance-int-java.util.Locale-&quot;&gt; &lt;code&gt;getDateInstance(DEFAULT, Locale.getDefault(Locale.Category.FORMAT))&lt;/code&gt; &lt;/a&gt; 를 호출하는 것과 같습니다 .</target>
        </trans-unit>
        <trans-unit id="606abad2b5133505b9cc83f29ea9de02de07259a" translate="yes" xml:space="preserve">
          <source>This is equivalent to calling &lt;a href=&quot;dateformat#getDateInstance-int-java.util.Locale-&quot;&gt;&lt;code&gt;getDateInstance(style,
     Locale.getDefault(Locale.Category.FORMAT))&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이것은 &lt;a href=&quot;dateformat#getDateInstance-int-java.util.Locale-&quot;&gt; &lt;code&gt;getDateInstance(style, Locale.getDefault(Locale.Category.FORMAT))&lt;/code&gt; &lt;/a&gt; 를 호출하는 것과 같습니다 .</target>
        </trans-unit>
        <trans-unit id="44604b7369a7b284caad58a087b782eff01ebdb4" translate="yes" xml:space="preserve">
          <source>This is equivalent to calling &lt;a href=&quot;dateformat#getDateTimeInstance-int-int-java.util.Locale-&quot;&gt;&lt;code&gt;getDateTimeInstance(DEFAULT,
     DEFAULT, Locale.getDefault(Locale.Category.FORMAT))&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이것은 &lt;a href=&quot;dateformat#getDateTimeInstance-int-int-java.util.Locale-&quot;&gt; &lt;code&gt;getDateTimeInstance(DEFAULT, DEFAULT, Locale.getDefault(Locale.Category.FORMAT))&lt;/code&gt; &lt;/a&gt; 를 호출하는 것과 같습니다 .</target>
        </trans-unit>
        <trans-unit id="93c158b0050e237254c666224ac7bcaf16d7bbff" translate="yes" xml:space="preserve">
          <source>This is equivalent to calling &lt;a href=&quot;dateformat#getDateTimeInstance-int-int-java.util.Locale-&quot;&gt;&lt;code&gt;getDateTimeInstance(dateStyle,
     timeStyle, Locale.getDefault(Locale.Category.FORMAT))&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이것은 &lt;a href=&quot;dateformat#getDateTimeInstance-int-int-java.util.Locale-&quot;&gt; &lt;code&gt;getDateTimeInstance(dateStyle, timeStyle, Locale.getDefault(Locale.Category.FORMAT))&lt;/code&gt; &lt;/a&gt; 를 호출하는 것과 같습니다 .</target>
        </trans-unit>
        <trans-unit id="d6f03d8278d1398182bd518aed24f438d88d3fb8" translate="yes" xml:space="preserve">
          <source>This is equivalent to calling &lt;a href=&quot;dateformat#getTimeInstance-int-java.util.Locale-&quot;&gt;&lt;code&gt;getTimeInstance(DEFAULT,
     Locale.getDefault(Locale.Category.FORMAT))&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이것은 &lt;a href=&quot;dateformat#getTimeInstance-int-java.util.Locale-&quot;&gt; &lt;code&gt;getTimeInstance(DEFAULT, Locale.getDefault(Locale.Category.FORMAT))&lt;/code&gt; &lt;/a&gt; 를 호출하는 것과 같습니다 .</target>
        </trans-unit>
        <trans-unit id="2735042011ede9f9d8e7d68812f636df49c94cd7" translate="yes" xml:space="preserve">
          <source>This is equivalent to calling &lt;a href=&quot;dateformat#getTimeInstance-int-java.util.Locale-&quot;&gt;&lt;code&gt;getTimeInstance(style,
     Locale.getDefault(Locale.Category.FORMAT))&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이것은 &lt;a href=&quot;dateformat#getTimeInstance-int-java.util.Locale-&quot;&gt; &lt;code&gt;getTimeInstance(style, Locale.getDefault(Locale.Category.FORMAT))&lt;/code&gt; &lt;/a&gt; 를 호출하는 것과 같습니다 .</target>
        </trans-unit>
        <trans-unit id="196d984cffaf2f193ca06157a9274cfd7f1215bd" translate="yes" xml:space="preserve">
          <source>This is equivalent to calling &lt;a href=&quot;dateformatsymbols#DateFormatSymbols-java.util.Locale-&quot;&gt;&lt;code&gt;DateFormatSymbols(Locale.getDefault(Locale.Category.FORMAT))&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이것은 &lt;a href=&quot;dateformatsymbols#DateFormatSymbols-java.util.Locale-&quot;&gt; &lt;code&gt;DateFormatSymbols(Locale.getDefault(Locale.Category.FORMAT))&lt;/code&gt; &lt;/a&gt; 를 호출하는 것과 같습니다 .</target>
        </trans-unit>
        <trans-unit id="0f1bd34565f41c8513456e03db2f6c6ac0e51a19" translate="yes" xml:space="preserve">
          <source>This is equivalent to calling &lt;a href=&quot;dateformatsymbols#getInstance-java.util.Locale-&quot;&gt;&lt;code&gt;getInstance(Locale.getDefault(Locale.Category.FORMAT))&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이것은 &lt;a href=&quot;dateformatsymbols#getInstance-java.util.Locale-&quot;&gt; &lt;code&gt;getInstance(Locale.getDefault(Locale.Category.FORMAT))&lt;/code&gt; &lt;/a&gt; 를 호출하는 것과 같습니다 .</target>
        </trans-unit>
        <trans-unit id="e783ca10f86d23a2065defdb07a478293f77186c" translate="yes" xml:space="preserve">
          <source>This is equivalent to calling &lt;a href=&quot;decimalformatsymbols#DecimalFormatSymbols-java.util.Locale-&quot;&gt;&lt;code&gt;DecimalFormatSymbols(Locale.getDefault(Locale.Category.FORMAT))&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이것은 &lt;a href=&quot;decimalformatsymbols#DecimalFormatSymbols-java.util.Locale-&quot;&gt; &lt;code&gt;DecimalFormatSymbols(Locale.getDefault(Locale.Category.FORMAT))&lt;/code&gt; &lt;/a&gt; 를 호출하는 것과 같습니다 .</target>
        </trans-unit>
        <trans-unit id="836eb322235d93a845c4d65186757c291f30343c" translate="yes" xml:space="preserve">
          <source>This is equivalent to calling &lt;a href=&quot;decimalformatsymbols#getInstance-java.util.Locale-&quot;&gt;&lt;code&gt;getInstance(Locale.getDefault(Locale.Category.FORMAT))&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이것은 &lt;a href=&quot;decimalformatsymbols#getInstance-java.util.Locale-&quot;&gt; &lt;code&gt;getInstance(Locale.getDefault(Locale.Category.FORMAT))&lt;/code&gt; &lt;/a&gt; 를 호출하는 것과 같습니다 .</target>
        </trans-unit>
        <trans-unit id="f265ad6b5a3473b6ab1fcfa0421acd7f2e341030" translate="yes" xml:space="preserve">
          <source>This is equivalent to calling &lt;a href=&quot;decimalstyle#of-java.util.Locale-&quot;&gt;&lt;code&gt;of(Locale.getDefault(Locale.Category.FORMAT))&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이것은 &lt;a href=&quot;decimalstyle#of-java.util.Locale-&quot;&gt; &lt;code&gt;of(Locale.getDefault(Locale.Category.FORMAT))&lt;/code&gt; &lt;/a&gt; 호출 과 같습니다 .</target>
        </trans-unit>
        <trans-unit id="6c97cfdff5e1901a519a07303e8dad0752d86205" translate="yes" xml:space="preserve">
          <source>This is equivalent to calling &lt;a href=&quot;numberformat#getCurrencyInstance-java.util.Locale-&quot;&gt;&lt;code&gt;getCurrencyInstance(Locale.getDefault(Locale.Category.FORMAT))&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이것은 &lt;a href=&quot;numberformat#getCurrencyInstance-java.util.Locale-&quot;&gt; &lt;code&gt;getCurrencyInstance(Locale.getDefault(Locale.Category.FORMAT))&lt;/code&gt; &lt;/a&gt; 를 호출하는 것과 같습니다 .</target>
        </trans-unit>
        <trans-unit id="56b1fcca493696e5b47f9ce010400f80002bf476" translate="yes" xml:space="preserve">
          <source>This is equivalent to calling &lt;a href=&quot;numberformat#getIntegerInstance-java.util.Locale-&quot;&gt;&lt;code&gt;getIntegerInstance(Locale.getDefault(Locale.Category.FORMAT))&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이것은 &lt;a href=&quot;numberformat#getIntegerInstance-java.util.Locale-&quot;&gt; &lt;code&gt;getIntegerInstance(Locale.getDefault(Locale.Category.FORMAT))&lt;/code&gt; &lt;/a&gt; 를 호출하는 것과 같습니다 .</target>
        </trans-unit>
        <trans-unit id="b56e150222602b5616e14f89404883d82ce20a0d" translate="yes" xml:space="preserve">
          <source>This is equivalent to calling &lt;a href=&quot;numberformat#getNumberInstance-java.util.Locale-&quot;&gt;&lt;code&gt;getNumberInstance(Locale.getDefault(Locale.Category.FORMAT))&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이것은 &lt;a href=&quot;numberformat#getNumberInstance-java.util.Locale-&quot;&gt; &lt;code&gt;getNumberInstance(Locale.getDefault(Locale.Category.FORMAT))&lt;/code&gt; &lt;/a&gt; 를 호출하는 것과 같습니다 .</target>
        </trans-unit>
        <trans-unit id="260b6a8a3ca2ebb6c45361e50160c452470d0bfb" translate="yes" xml:space="preserve">
          <source>This is equivalent to calling &lt;a href=&quot;numberformat#getPercentInstance-java.util.Locale-&quot;&gt;&lt;code&gt;getPercentInstance(Locale.getDefault(Locale.Category.FORMAT))&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이것은 &lt;a href=&quot;numberformat#getPercentInstance-java.util.Locale-&quot;&gt; &lt;code&gt;getPercentInstance(Locale.getDefault(Locale.Category.FORMAT))&lt;/code&gt; &lt;/a&gt; 를 호출하는 것과 같습니다 .</target>
        </trans-unit>
        <trans-unit id="d8ab9ad4051f8749dc671f121c1baba34a3a4dd3" translate="yes" xml:space="preserve">
          <source>This is equivalent to calling &lt;a href=&quot;simpledateformat#SimpleDateFormat-java.lang.String-java.util.Locale-&quot;&gt;&lt;code&gt;SimpleDateFormat(pattern, Locale.getDefault(Locale.Category.FORMAT))&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이것은 &lt;a href=&quot;simpledateformat#SimpleDateFormat-java.lang.String-java.util.Locale-&quot;&gt; &lt;code&gt;SimpleDateFormat(pattern, Locale.getDefault(Locale.Category.FORMAT))&lt;/code&gt; &lt;/a&gt; 을 호출하는 것과 같습니다 .</target>
        </trans-unit>
        <trans-unit id="8b27aed9ee162e49847966b3b51b71c4860ae778" translate="yes" xml:space="preserve">
          <source>This is equivalent to the following code:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4206946c713acf1e263d89932a265fd04c2332a" translate="yes" xml:space="preserve">
          <source>This is immutable and thread-safe enum.</source>
          <target state="translated">이것은 불변의 thread 세이프 enum입니다.</target>
        </trans-unit>
        <trans-unit id="622df1c67821419f61dc684cc374bb330f2dfc9d" translate="yes" xml:space="preserve">
          <source>This is merely a convenience wrapper around the more general &lt;a href=&quot;propertychangesupport#fireIndexedPropertyChange-java.lang.String-int-java.lang.Object-java.lang.Object-&quot;&gt;&lt;code&gt;fireIndexedPropertyChange(String, int, Object, Object)&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">이것은 일반적인 &lt;a href=&quot;propertychangesupport#fireIndexedPropertyChange-java.lang.String-int-java.lang.Object-java.lang.Object-&quot;&gt; &lt;code&gt;fireIndexedPropertyChange(String, int, Object, Object)&lt;/code&gt; &lt;/a&gt; 메소드를 둘러싼 편리한 래퍼 일뿐 입니다.</target>
        </trans-unit>
        <trans-unit id="8f091859fb475e60993901acd750e80b0000f8b9" translate="yes" xml:space="preserve">
          <source>This is merely a convenience wrapper around the more general &lt;a href=&quot;propertychangesupport#firePropertyChange-java.beans.PropertyChangeEvent-&quot;&gt;&lt;code&gt;firePropertyChange(PropertyChangeEvent)&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">이것은 일반적인 &lt;a href=&quot;propertychangesupport#firePropertyChange-java.beans.PropertyChangeEvent-&quot;&gt; &lt;code&gt;firePropertyChange(PropertyChangeEvent)&lt;/code&gt; &lt;/a&gt; 메소드를 둘러싼 편리한 래퍼 일뿐 입니다.</target>
        </trans-unit>
        <trans-unit id="654274011d7392c6bb4f52523cadc6b4ecc88873" translate="yes" xml:space="preserve">
          <source>This is merely a convenience wrapper around the more general &lt;a href=&quot;propertychangesupport#firePropertyChange-java.lang.String-java.lang.Object-java.lang.Object-&quot;&gt;&lt;code&gt;firePropertyChange(String, Object, Object)&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">이것은 일반적인 &lt;a href=&quot;propertychangesupport#firePropertyChange-java.lang.String-java.lang.Object-java.lang.Object-&quot;&gt; &lt;code&gt;firePropertyChange(String, Object, Object)&lt;/code&gt; &lt;/a&gt; 메소드를 둘러싼 편리한 래퍼 일뿐 입니다.</target>
        </trans-unit>
        <trans-unit id="29632b45e0af7d060aa561dbb3b9f5dbc8f17999" translate="yes" xml:space="preserve">
          <source>This is merely a convenience wrapper around the more general &lt;a href=&quot;vetoablechangesupport#fireVetoableChange-java.beans.PropertyChangeEvent-&quot;&gt;&lt;code&gt;fireVetoableChange(PropertyChangeEvent)&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">이것은 일반적인 &lt;a href=&quot;vetoablechangesupport#fireVetoableChange-java.beans.PropertyChangeEvent-&quot;&gt; &lt;code&gt;fireVetoableChange(PropertyChangeEvent)&lt;/code&gt; &lt;/a&gt; 메소드를 둘러싼 편의 래퍼 일뿐 입니다.</target>
        </trans-unit>
        <trans-unit id="3fd763055dac8f63ce21cba144a69a2ea4e0ba46" translate="yes" xml:space="preserve">
          <source>This is merely a convenience wrapper around the more general &lt;a href=&quot;vetoablechangesupport#fireVetoableChange-java.lang.String-java.lang.Object-java.lang.Object-&quot;&gt;&lt;code&gt;fireVetoableChange(String, Object, Object)&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">이것은 일반적인 &lt;a href=&quot;vetoablechangesupport#fireVetoableChange-java.lang.String-java.lang.Object-java.lang.Object-&quot;&gt; &lt;code&gt;fireVetoableChange(String, Object, Object)&lt;/code&gt; &lt;/a&gt; 메소드를 둘러싼 편리한 래퍼 일뿐 입니다.</target>
        </trans-unit>
        <trans-unit id="6035bf886160a52b44567d3780233698ad7fef73" translate="yes" xml:space="preserve">
          <source>This is merely a hint for programs that wish to be efficient; all readers must be able to read arbitrary regions as specified in an &lt;code&gt;ImageReadParam&lt;/code&gt;.</source>
          <target state="translated">이것은 단지 효율적이기를 원하는 프로그램에 대한 힌트 일뿐입니다. 모든 리더는 &lt;code&gt;ImageReadParam&lt;/code&gt; 에 지정된 임의의 영역을 읽을 수 있어야합니다 .</target>
        </trans-unit>
        <trans-unit id="827ed3297a34dd0cb92b779cc3567d5e00c35ee8" translate="yes" xml:space="preserve">
          <source>This is not an IPP V1.1 attribute.</source>
          <target state="translated">이것은 IPP V1.1 속성이 아닙니다.</target>
        </trans-unit>
        <trans-unit id="49b6454e8dd1b0a1936c3bfef4fe1e0f09a696e0" translate="yes" xml:space="preserve">
          <source>This is one of the kinds of descriptor returned by a BeanInfo object, which also returns descriptors for properties, method, and events.</source>
          <target state="translated">이것은 BeanInfo 객체에 의해 반환되는 설명자 중 하나이며, 속성, 메소드 및 이벤트에 대한 설명자를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="f9016a5a41cfd95f1d6a7b81c79228ea30d5fe47" translate="yes" xml:space="preserve">
          <source>This is one year earlier than the minimum &lt;code&gt;LocalDateTime&lt;/code&gt;. This provides sufficient values to handle the range of &lt;code&gt;ZoneOffset&lt;/code&gt; which affect the instant in addition to the local date-time. The value is also chosen such that the value of the year fits in an &lt;code&gt;int&lt;/code&gt;.</source>
          <target state="translated">최소 &lt;code&gt;LocalDateTime&lt;/code&gt; 보다 1 년 빠릅니다 . 이는 현지 날짜-시간 외에 순간에 영향을주는 &lt;code&gt;ZoneOffset&lt;/code&gt; 범위를 처리하기에 충분한 값을 제공합니다 . 연도 값이 &lt;code&gt;int&lt;/code&gt; 에 맞도록 값도 선택 됩니다.</target>
        </trans-unit>
        <trans-unit id="babc195db8874dee4e9718f6adf857d6970a0eae" translate="yes" xml:space="preserve">
          <source>This is one year later than the maximum &lt;code&gt;LocalDateTime&lt;/code&gt;. This provides sufficient values to handle the range of &lt;code&gt;ZoneOffset&lt;/code&gt; which affect the instant in addition to the local date-time. The value is also chosen such that the value of the year fits in an &lt;code&gt;int&lt;/code&gt;.</source>
          <target state="translated">이것은 최대 &lt;code&gt;LocalDateTime&lt;/code&gt; 보다 1 년 늦습니다 . 이는 현지 날짜-시간 외에 순간에 영향을주는 &lt;code&gt;ZoneOffset&lt;/code&gt; 범위를 처리하기에 충분한 값을 제공합니다 . 연도 값이 &lt;code&gt;int&lt;/code&gt; 에 맞도록 값도 선택 됩니다.</target>
        </trans-unit>
        <trans-unit id="908753d55bea97c51b086ef58a2e2995a9522905" translate="yes" xml:space="preserve">
          <source>This is ordinarily too costly, but may be &lt;em&gt;more&lt;/em&gt; efficient than alternatives when traversal operations vastly outnumber mutations, and is useful when you cannot or don't want to synchronize traversals, yet need to preclude interference among concurrent threads. The &quot;snapshot&quot; style iterator method uses a reference to the state of the array at the point that the iterator was created. This array never changes during the lifetime of the iterator, so interference is impossible and the iterator is guaranteed not to throw &lt;code&gt;ConcurrentModificationException&lt;/code&gt;. The iterator will not reflect additions, removals, or changes to the list since the iterator was created. Element-changing operations on iterators themselves (&lt;code&gt;remove&lt;/code&gt;, &lt;code&gt;set&lt;/code&gt;, and &lt;code&gt;add&lt;/code&gt;) are not supported. These methods throw &lt;code&gt;UnsupportedOperationException&lt;/code&gt;.</source>
          <target state="translated">이것은 일반적으로 너무 비싸지 만 순회 작업이 돌연변이 수보다 훨씬 많은 경우 순회 작업보다 대안 이 &lt;em&gt;더&lt;/em&gt; 효율적일 수 있으며 순회를 동기화 할 수 없거나 동기화하고 싶지는 않지만 동시 스레드 간의 간섭을 배제해야 할 때 유용합니다. &quot;스냅 샷&quot;스타일 반복자 메소드는 반복자가 작성된 시점의 배열 상태에 대한 참조를 사용합니다. 이 배열은 반복기 수명 동안 변경되지 않으므로 간섭이 불가능하며 반복기는 &lt;code&gt;ConcurrentModificationException&lt;/code&gt; 을 발생 시키지 않습니다 . 반복자는 반복자가 작성된 이후 목록에 대한 추가, 제거 또는 변경 사항을 반영하지 않습니다. 반복자 자체의 요소 변경 작업 ( &lt;code&gt;remove&lt;/code&gt; , &lt;code&gt;set&lt;/code&gt; 및 &lt;code&gt;add&lt;/code&gt; )는 지원되지 않습니다. 이 메소드는 &lt;code&gt;UnsupportedOperationException&lt;/code&gt; 을 발생 시킵니다.</target>
        </trans-unit>
        <trans-unit id="4de4aa69664f3d7f98d4504ab4ea59cf7595c859" translate="yes" xml:space="preserve">
          <source>This is primarily intended as a base class or support class to be used in implementing other logging &lt;code&gt;Handlers&lt;/code&gt;.</source>
          <target state="translated">이것은 주로 다른 로깅 &lt;code&gt;Handlers&lt;/code&gt; 구현에 사용되는 기본 클래스 또는 지원 클래스로 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="b91547e40d584ed1b2bea7e9880ab6300f07ef9e" translate="yes" xml:space="preserve">
          <source>This is similar to &lt;a href=&quot;chronofield#DAY_OF_WEEK&quot;&gt;&lt;code&gt;ChronoField.DAY_OF_WEEK&lt;/code&gt;&lt;/a&gt; but uses values for the day-of-week based on this &lt;code&gt;WeekFields&lt;/code&gt;. The days are numbered from 1 to 7 where the &lt;a href=&quot;weekfields#getFirstDayOfWeek--&quot;&gt;&lt;code&gt;first day-of-week&lt;/code&gt;&lt;/a&gt; is assigned the value 1.</source>
          <target state="translated">이것은 &lt;a href=&quot;chronofield#DAY_OF_WEEK&quot;&gt; &lt;code&gt;ChronoField.DAY_OF_WEEK&lt;/code&gt; &lt;/a&gt; 와 비슷 하지만이 &lt;code&gt;WeekFields&lt;/code&gt; 를 기준으로 요일 값을 사용합니다 . 요일은 1에서 7까지 번호가 매겨지며 &lt;a href=&quot;weekfields#getFirstDayOfWeek--&quot;&gt; &lt;code&gt;first day-of-week&lt;/code&gt; &lt;/a&gt; 에는 값 1이 지정됩니다.</target>
        </trans-unit>
        <trans-unit id="0799a9f926ef0aa369986515f9873c1cc6c83532" translate="yes" xml:space="preserve">
          <source>This is similar to the method &lt;a href=&quot;runtime#loadLibrary-java.lang.String-&quot;&gt;&lt;code&gt;loadLibrary(String)&lt;/code&gt;&lt;/a&gt;, but it accepts a general file name as an argument rather than just a library name, allowing any file of native code to be loaded.</source>
          <target state="translated">이것은 &lt;a href=&quot;runtime#loadLibrary-java.lang.String-&quot;&gt; &lt;code&gt;loadLibrary(String)&lt;/code&gt; &lt;/a&gt; 메소드와 유사 하지만 라이브러리 이름이 아니라 일반 파일 이름을 인수로 허용하여 기본 코드 파일을로드 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="33d0b5fbca66879c6163d7a3d0c3e4a34783ca59" translate="yes" xml:space="preserve">
          <source>This is the ResourceBundle that should be used to localize the message string before formatting it. The result may be null if the message is not localizable, or if no suitable ResourceBundle is available.</source>
          <target state="translated">이것은 메시지 문자열을 형식화하기 전에 지역화하는 데 사용해야하는 ResourceBundle입니다. 메시지를 지역화 할 수 없거나 적절한 ResourceBundle을 사용할 수없는 경우 결과는 null 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6dabae1b21967bb23bf4f00f6101dc2fdc500c63" translate="yes" xml:space="preserve">
          <source>This is the base interface for JSSE key managers.</source>
          <target state="translated">이것은 JSSE 키 관리자의 기본 인터페이스입니다.</target>
        </trans-unit>
        <trans-unit id="bba56f23c7c9ee83be45b2eed8efd5e9a7dfb64b" translate="yes" xml:space="preserve">
          <source>This is the base interface for JSSE trust managers.</source>
          <target state="translated">이것은 JSSE 신뢰 관리자의 기본 인터페이스입니다.</target>
        </trans-unit>
        <trans-unit id="620922410bf39c1c0c1daa8ac6943ea2cc388f04" translate="yes" xml:space="preserve">
          <source>This is the base interface type for amounts of time. An amount is distinct from a date or time-of-day in that it is not tied to any specific point on the time-line.</source>
          <target state="translated">이것은 시간에 대한 기본 인터페이스 유형입니다. 금액은 타임 라인의 특정 지점에 연결되지 않았다는 점에서 날짜 또는 시간과 다릅니다.</target>
        </trans-unit>
        <trans-unit id="ec01a51404d32a88570f2ad643af04f876b7bf9c" translate="yes" xml:space="preserve">
          <source>This is the base interface type for date, time and offset objects that are complete enough to be manipulated using plus and minus. It is implemented by those classes that can provide and manipulate information as &lt;a href=&quot;temporalfield&quot;&gt;fields&lt;/a&gt; or &lt;a href=&quot;temporalquery&quot;&gt;queries&lt;/a&gt;. See &lt;a href=&quot;temporalaccessor&quot;&gt;&lt;code&gt;TemporalAccessor&lt;/code&gt;&lt;/a&gt; for the read-only version of this interface.</source>
          <target state="translated">이는 플러스 및 마이너스를 사용하여 조작 할 수있을 정도로 완전한 날짜, 시간 및 오프셋 객체의 기본 인터페이스 유형입니다. &lt;a href=&quot;temporalfield&quot;&gt;필드&lt;/a&gt; 또는 &lt;a href=&quot;temporalquery&quot;&gt;쿼리&lt;/a&gt; 로 정보를 제공하고 조작 할 수있는 클래스로 구현됩니다 . 이 인터페이스의 읽기 전용 버전은 &lt;a href=&quot;temporalaccessor&quot;&gt; &lt;code&gt;TemporalAccessor&lt;/code&gt; &lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="703bcf283cbcdbff4c645509f86d6c38abfcbe23" translate="yes" xml:space="preserve">
          <source>This is the base interface type for date, time and offset objects. It is implemented by those classes that can provide information as &lt;a href=&quot;temporalfield&quot;&gt;fields&lt;/a&gt; or &lt;a href=&quot;temporalquery&quot;&gt;queries&lt;/a&gt;.</source>
          <target state="translated">날짜, 시간 및 오프셋 객체의 기본 인터페이스 유형입니다. &lt;a href=&quot;temporalfield&quot;&gt;필드&lt;/a&gt; 나 &lt;a href=&quot;temporalquery&quot;&gt;쿼리&lt;/a&gt; 로 정보를 제공 할 수있는 클래스로 구현됩니다 .</target>
        </trans-unit>
        <trans-unit id="8c98dfe1fe2ce5ebcc8dbef53de98caa33b2e98c" translate="yes" xml:space="preserve">
          <source>This is the basic key exception.</source>
          <target state="translated">이것은 기본 키 예외입니다.</target>
        </trans-unit>
        <trans-unit id="d6038e5e9a6aab44c79d941693ba0286f3f22fb2" translate="yes" xml:space="preserve">
          <source>This is the basic login exception.</source>
          <target state="translated">기본 로그인 예외입니다.</target>
        </trans-unit>
        <trans-unit id="9a657413d441e96b7f56d2db4629a07d602752bd" translate="yes" xml:space="preserve">
          <source>This is the common base class of all Java language enumeration types.</source>
          <target state="translated">이것은 모든 Java 언어 열거 유형의 공통 기본 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="86d5d50b46f393ff72b89fdb180edc74ecd75014" translate="yes" xml:space="preserve">
          <source>This is the common base class of all Java language enumeration types. More information about enums, including descriptions of the implicitly declared methods synthesized by the compiler, can be found in section 8.9 of</source>
          <target state="translated">이것은 모든 Java 언어 열거 유형의 공통 기본 클래스입니다. 컴파일러에 의해 합성 된 암시 적으로 선언 된 메소드의 설명을 포함하여 열거 형에 대한 자세한 정보는 섹션 8.9에서 찾을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e7999052240fa29f6f49f08bfa42fafd0d1ed60d" translate="yes" xml:space="preserve">
          <source>This is the date-time where the discontinuity begins expressed with the 'before' offset. At this instant, the 'after' offset is actually used, therefore the combination of this date-time and the 'before' offset will never occur.</source>
          <target state="translated">불연속성이 시작되기 시작한 날짜-시간은 '이전'오프셋으로 표시됩니다. 이 시점에서 '후'오프셋이 실제로 사용되므로이 날짜-시간과 '이전'오프셋의 조합은 절대 발생하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="737b59e5cc1f042f439f5ab4ec96d7743c5358df" translate="yes" xml:space="preserve">
          <source>This is the default mode for all features, so that a read including metadata followed by a write including metadata will preserve as much information as possible.</source>
          <target state="translated">이것은 모든 기능에 대한 기본 모드이므로 메타 데이터를 포함한 읽기와 메타 데이터를 포함한 쓰기는 가능한 많은 정보를 보존합니다.</target>
        </trans-unit>
        <trans-unit id="27a2264bca908d1a3dfc0a8b67e2d192bde8b531" translate="yes" xml:space="preserve">
          <source>This is the definition of lexicographic ordering. If two strings are different, then either they have different characters at some index that is a valid index for both strings, or their lengths are different, or both. If they have different characters at one or more index positions, let</source>
          <target state="translated">이것은 사전 식 순서의 정의입니다. 두 개의 문자열이 다른 경우 두 문자열 모두에 대해 유효한 색인 인 일부 색인에서 문자가 다르거 나 길이가 다르거 나 둘 다입니다. 하나 이상의 색인 위치에 다른 문자가있는 경우</target>
        </trans-unit>
        <trans-unit id="e11662348c78bc3fe8b7e30770a72eb59c1679f5" translate="yes" xml:space="preserve">
          <source>This is the engine scope bindings. By default, a &lt;code&gt;SimpleBindings&lt;/code&gt; is used. Accessor methods setBindings, getBindings are used to manage this field.</source>
          <target state="translated">이것이 엔진 범위 바인딩입니다. 기본적으로 &lt;code&gt;SimpleBindings&lt;/code&gt; 가 사용됩니다. 접근 자 메소드 setBindings, getBindings가이 필드를 관리하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="6cdf09d60b9159dfd07a85f758f7b5b0c2a021fc" translate="yes" xml:space="preserve">
          <source>This is the exception for invalid Keys (invalid encoding, wrong length, uninitialized, etc).</source>
          <target state="translated">유효하지 않은 키 (유효하지 않은 인코딩, 잘못된 길이, 초기화되지 않은 등)는 예외입니다.</target>
        </trans-unit>
        <trans-unit id="664a30463733160575da0c331e578d8c1f2d4a3b" translate="yes" xml:space="preserve">
          <source>This is the exception for invalid key specifications.</source>
          <target state="translated">유효하지 않은 키 사양에 대한 예외입니다.</target>
        </trans-unit>
        <trans-unit id="6cd1bb760a87cf38c43b0c5de81b84ac2d84a535" translate="yes" xml:space="preserve">
          <source>This is the exception for invalid or inappropriate algorithm parameters.</source>
          <target state="translated">이는 유효하지 않거나 부적절한 알고리즘 매개 변수에 대한 예외입니다.</target>
        </trans-unit>
        <trans-unit id="eb90331dcc7b676ae4aa32ccd44000ad6717006e" translate="yes" xml:space="preserve">
          <source>This is the exception for invalid parameter specifications.</source>
          <target state="translated">유효하지 않은 매개 변수 스펙의 예외입니다.</target>
        </trans-unit>
        <trans-unit id="25d7ddc403a91d82aa917f3247a9006d65af997b" translate="yes" xml:space="preserve">
          <source>This is the first date-time after the discontinuity, when the new offset applies.</source>
          <target state="translated">새 오프셋이 적용되는 불연속 이후 첫 번째 날짜-시간입니다.</target>
        </trans-unit>
        <trans-unit id="f7a41d64caa3cfdb1e048821ab3910d9818c9709" translate="yes" xml:space="preserve">
          <source>This is the general key management exception for all operations dealing with key management.</source>
          <target state="translated">이것은 키 관리를 다루는 모든 작업에 대한 일반적인 키 관리 예외입니다.</target>
        </trans-unit>
        <trans-unit id="bf2ef16309826b550c7ce4745a8a6f870bc33d8b" translate="yes" xml:space="preserve">
          <source>This is the general key management exception for all operations dealing with key management. Examples of subclasses of KeyManagementException that developers might create for giving more detailed information could include:</source>
          <target state="translated">이것은 키 관리를 다루는 모든 작업에 대한 일반적인 키 관리 예외입니다. 개발자가보다 자세한 정보를 제공하기 위해 생성 할 수있는 KeyManagementException의 서브 클래스의 예는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="92d3b50297fc56af57293a45a3c283351489c1c5" translate="yes" xml:space="preserve">
          <source>This is the general, more flexible metafactory; a streamlined version is provided by &lt;a href=&quot;lambdametafactory#metafactory-java.lang.invoke.MethodHandles.Lookup-java.lang.String-java.lang.invoke.MethodType-java.lang.invoke.MethodType-java.lang.invoke.MethodHandle-java.lang.invoke.MethodType-&quot;&gt;&lt;code&gt;metafactory(java.lang.invoke.MethodHandles.Lookup,
 String, MethodType, MethodType, MethodHandle, MethodType)&lt;/code&gt;&lt;/a&gt;. A general description of the behavior of this method is provided &lt;a href=&quot;lambdametafactory&quot;&gt;&lt;code&gt;above&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이것은 일반적이고 더 유연한 메타 팩토리입니다. 간소화 된 버전은 &lt;a href=&quot;lambdametafactory#metafactory-java.lang.invoke.MethodHandles.Lookup-java.lang.String-java.lang.invoke.MethodType-java.lang.invoke.MethodType-java.lang.invoke.MethodHandle-java.lang.invoke.MethodType-&quot;&gt; &lt;code&gt;metafactory(java.lang.invoke.MethodHandles.Lookup, String, MethodType, MethodType, MethodHandle, MethodType)&lt;/code&gt; &lt;/a&gt; 의해 제공됩니다 . 이 방법의 동작에 대한 일반적인 설명은 &lt;a href=&quot;lambdametafactory&quot;&gt; &lt;code&gt;above&lt;/code&gt; &lt;/a&gt; 제공됩니다 .</target>
        </trans-unit>
        <trans-unit id="e91505182be4126c5af1b01bcc868d5ea491c1b8" translate="yes" xml:space="preserve">
          <source>This is the generic ExemptionMechanism exception.</source>
          <target state="translated">이것은 일반적인 ExemptionMechanism 예외입니다.</target>
        </trans-unit>
        <trans-unit id="99e7effb9560ac617ed439fce362d9b254bf5d1e" translate="yes" xml:space="preserve">
          <source>This is the generic KeyStore exception.</source>
          <target state="translated">이것은 일반적인 KeyStore 예외입니다.</target>
        </trans-unit>
        <trans-unit id="801316b487c2cd85d868aecbc469985be180cda6" translate="yes" xml:space="preserve">
          <source>This is the generic Message Digest exception.</source>
          <target state="translated">일반적인 메시지 요약 예외입니다.</target>
        </trans-unit>
        <trans-unit id="b76e4d69e464c7f1937b0a95e3180dc52c85b711" translate="yes" xml:space="preserve">
          <source>This is the generic Signature exception.</source>
          <target state="translated">이것은 일반적인 서명 예외입니다.</target>
        </trans-unit>
        <trans-unit id="1c3f0b0b32f41381ce44379f5cb04156e9192d14" translate="yes" xml:space="preserve">
          <source>This is the global scope bindings. By default, a null value (which means no global scope) is used. Accessor methods setBindings, getBindings are used to manage this field.</source>
          <target state="translated">이것이 전역 범위 바인딩입니다. 기본적으로 널값 (글로벌 범위가 없음)이 사용됩니다. 접근 자 메소드 setBindings, getBindings가이 필드를 관리하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="e5da7a96e9ed77d91ce83fa5e0c2d3c3356f842f" translate="yes" xml:space="preserve">
          <source>This is the instant of the discontinuity, which is defined as the first instant that the 'after' offset applies.</source>
          <target state="translated">이것은 불연속의 순간이며, '후'오프셋이 적용되는 첫 번째 순간으로 정의됩니다.</target>
        </trans-unit>
        <trans-unit id="2c186ccbee16f0419c2016ae00928bddd8a7ccf3" translate="yes" xml:space="preserve">
          <source>This is the interface for MBean manipulation on the agent side.</source>
          <target state="translated">이것은 에이전트 측에서 MBean 조작을위한 인터페이스입니다.</target>
        </trans-unit>
        <trans-unit id="bd295e3366839668f2129d91cb294757200e5960" translate="yes" xml:space="preserve">
          <source>This is the interface for MBean manipulation on the agent side. It contains the methods necessary for the creation, registration, and deletion of MBeans as well as the access methods for registered MBeans. This is the core component of the JMX infrastructure.</source>
          <target state="translated">이것은 에이전트 측에서 MBean 조작을위한 인터페이스입니다. MBean의 작성, 등록 및 삭제에 필요한 메소드와 등록 된 MBean의 액세스 메소드가 들어 있습니다. 이것이 JMX 인프라의 핵심 구성 요소입니다.</target>
        </trans-unit>
        <trans-unit id="3caef2258932cdb871defea1f3b66b38e45f843c" translate="yes" xml:space="preserve">
          <source>This is the interface used for representing one entry in an Access Control List (ACL).</source>
          <target state="translated">ACL (Access Control List)에서 하나의 항목을 나타내는 데 사용되는 인터페이스입니다.</target>
        </trans-unit>
        <trans-unit id="48f7efce64d4b1895ee005221d1242197f938904" translate="yes" xml:space="preserve">
          <source>This is the key algorithm for that key. The key algorithm is usually an encryption or asymmetric operation algorithm (such as DSA or RSA), which will work with those algorithms and with related algorithms (such as MD5 with RSA, SHA-1 with RSA, Raw DSA, etc.) The name of the algorithm of a key is obtained using the &lt;a href=&quot;key#getAlgorithm--&quot;&gt;&lt;code&gt;getAlgorithm&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">이것이 해당 키의 키 알고리즘입니다. 주요 알고리즘은 일반적으로 암호화 또는 비대칭 연산 알고리즘 (예 : DSA 또는 RSA)이며 해당 알고리즘 및 관련 알고리즘 (예 : MD5 RSA, SHA-1 RSA, Raw DSA 등)에서 작동합니다. 이름 키 알고리즘의 &lt;a href=&quot;key#getAlgorithm--&quot;&gt; &lt;code&gt;getAlgorithm&lt;/code&gt; &lt;/a&gt; 메소드 를 사용하여 얻습니다 .</target>
        </trans-unit>
        <trans-unit id="dd809badf4082c863429074d3401edf75f48784b" translate="yes" xml:space="preserve">
          <source>This is the main method for class loaders that is being redefined.</source>
          <target state="translated">이것은 재정의되는 클래스 로더의 기본 방법입니다.</target>
        </trans-unit>
        <trans-unit id="889f9078f7a00476e777e0e09d47001df3896257" translate="yes" xml:space="preserve">
          <source>This is the name for the ResourceBundle that should be used to localize the message string before formatting it. The result may be null if the message is not localizable.</source>
          <target state="translated">메시지 문자열을 형식화하기 전에 현지화하는 데 사용해야하는 ResourceBundle의 이름입니다. 메시지를 현지화 할 수없는 경우 결과는 null 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="76735f0dd1715ad11b7bef5ec50b5a0df3241abe" translate="yes" xml:space="preserve">
          <source>This is the name of the format of the encoded key. It is returned by the &lt;a href=&quot;key#getFormat--&quot;&gt;&lt;code&gt;getFormat&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">이것은 인코딩 된 키 형식의 이름입니다. &lt;a href=&quot;key#getFormat--&quot;&gt; &lt;code&gt;getFormat&lt;/code&gt; &lt;/a&gt; 메소드에 의해 리턴됩니다 .</target>
        </trans-unit>
        <trans-unit id="49769a6086eb6a35292a153192bf3a147ad64c34" translate="yes" xml:space="preserve">
          <source>This is the offset in use before the instant of the transition.</source>
          <target state="translated">전환 직전에 사용중인 오프셋입니다.</target>
        </trans-unit>
        <trans-unit id="3336f6a5b69cc122c14e4a39dabd5406670f44e9" translate="yes" xml:space="preserve">
          <source>This is the offset in use on and after the instant of the transition.</source>
          <target state="translated">전환 순간 및 이후에 사용중인 오프셋입니다.</target>
        </trans-unit>
        <trans-unit id="17db630c5e8a9e913c98f31e592ac067bde6f55b" translate="yes" xml:space="preserve">
          <source>This is the offset of the local date-time from UTC/Greenwich.</source>
          <target state="translated">UTC / 그리니치에서 현지 날짜-시간의 오프셋입니다.</target>
        </trans-unit>
        <trans-unit id="4ef3b706de11081e89b9ba52606d129da4202b9a" translate="yes" xml:space="preserve">
          <source>This is the offset of the local time from UTC/Greenwich.</source>
          <target state="translated">UTC / 그리니치에서 현지 시간의 오프셋입니다.</target>
        </trans-unit>
        <trans-unit id="979acb87fadba3b726da7853124682c019fa4347" translate="yes" xml:space="preserve">
          <source>This is the primary way to access the offset amount. It returns the total of the hours, minutes and seconds fields as a single offset that can be added to a time.</source>
          <target state="translated">이것이 오프셋 금액에 액세스하는 기본 방법입니다. 시간, 분 및 초 필드의 총계를 시간에 추가 할 수있는 단일 오프셋으로 반환합니다.</target>
        </trans-unit>
        <trans-unit id="6632f7dc2ed6c06c20da5f1a65d5136887759f6c" translate="yes" xml:space="preserve">
          <source>This is the reader to be used for input from scripts. By default, a &lt;code&gt;InputStreamReader&lt;/code&gt; based on &lt;code&gt;System.in&lt;/code&gt; is used and default charset is used by this reader. Accessor methods getReader, setReader are used to manage this field.</source>
          <target state="translated">스크립트에서 입력하는 데 사용되는 리더입니다. 기본적 으로 &lt;code&gt;System.in&lt;/code&gt; 기반 의 &lt;code&gt;InputStreamReader&lt;/code&gt; 가 사용 되며이 리더는 기본 문자 세트를 사용합니다. 접근 자 메소드 getReader, setReader는이 필드를 관리하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="08fd920b17aff702ea6034c1bebdd6fa96aa2254" translate="yes" xml:space="preserve">
          <source>This is the same name that was specified in one of the &lt;code&gt;getInstance&lt;/code&gt; calls that created this &lt;code&gt;Cipher&lt;/code&gt; object..</source>
          <target state="translated">이 &lt;code&gt;Cipher&lt;/code&gt; 객체 를 생성 한 &lt;code&gt;getInstance&lt;/code&gt; 호출 중 하나에 지정된 것과 동일한 이름입니다 .</target>
        </trans-unit>
        <trans-unit id="362a26bc3d245df7a2d010ad098ab67af5f1ba2e" translate="yes" xml:space="preserve">
          <source>This is the same name that was specified in one of the &lt;code&gt;getInstance&lt;/code&gt; calls that created this &lt;code&gt;ExemptionMechanism&lt;/code&gt; object.</source>
          <target state="translated">이 &lt;code&gt;ExemptionMechanism&lt;/code&gt; 객체 를 생성 한 &lt;code&gt;getInstance&lt;/code&gt; 호출 중 하나에 지정된 것과 동일한 이름입니다 .</target>
        </trans-unit>
        <trans-unit id="44689924d94c1486a7d9640da4b3f0035cbf5abc" translate="yes" xml:space="preserve">
          <source>This is the same name that was specified in one of the &lt;code&gt;getInstance&lt;/code&gt; calls that created this &lt;code&gt;KeyAgreement&lt;/code&gt; object.</source>
          <target state="translated">이 &lt;code&gt;KeyAgreement&lt;/code&gt; 객체 를 생성 한 &lt;code&gt;getInstance&lt;/code&gt; 호출 중 하나에 지정된 것과 동일한 이름입니다 .</target>
        </trans-unit>
        <trans-unit id="551467dd191fa5aef5c311da22739f792a7767ef" translate="yes" xml:space="preserve">
          <source>This is the same name that was specified in one of the &lt;code&gt;getInstance&lt;/code&gt; calls that created this &lt;code&gt;KeyGenerator&lt;/code&gt; object.</source>
          <target state="translated">이 &lt;code&gt;KeyGenerator&lt;/code&gt; 객체 를 생성 한 &lt;code&gt;getInstance&lt;/code&gt; 호출 중 하나에 지정된 것과 동일한 이름입니다 .</target>
        </trans-unit>
        <trans-unit id="9484af8f721dd283f10e59fe4ca2c142caa75487" translate="yes" xml:space="preserve">
          <source>This is the same name that was specified in one of the &lt;code&gt;getInstance&lt;/code&gt; calls that created this &lt;code&gt;KeyManagerFactory&lt;/code&gt; object.</source>
          <target state="translated">이것은 이 &lt;code&gt;KeyManagerFactory&lt;/code&gt; 객체 를 생성 한 &lt;code&gt;getInstance&lt;/code&gt; 호출 중 하나에서 지정된 것과 동일한 이름입니다 .</target>
        </trans-unit>
        <trans-unit id="af57c1c1d0a69b5cdf217e8c1fe51bfa1921cc97" translate="yes" xml:space="preserve">
          <source>This is the same name that was specified in one of the &lt;code&gt;getInstance&lt;/code&gt; calls that created this &lt;code&gt;Mac&lt;/code&gt; object.</source>
          <target state="translated">이 &lt;code&gt;Mac&lt;/code&gt; 객체 를 생성 한 &lt;code&gt;getInstance&lt;/code&gt; 호출 중 하나에 지정된 것과 동일한 이름입니다 .</target>
        </trans-unit>
        <trans-unit id="7153172d23e14a921e004133f3bec7aa304caf05" translate="yes" xml:space="preserve">
          <source>This is the same name that was specified in one of the &lt;code&gt;getInstance&lt;/code&gt; calls that created this &lt;code&gt;SSLContext&lt;/code&gt; object.</source>
          <target state="translated">이것은 이 &lt;code&gt;SSLContext&lt;/code&gt; 객체 를 작성한 &lt;code&gt;getInstance&lt;/code&gt; 호출 중 하나에 지정된 것과 동일한 이름입니다 .</target>
        </trans-unit>
        <trans-unit id="9570fdde85fff859b0f918774978949b2b648a93" translate="yes" xml:space="preserve">
          <source>This is the same name that was specified in one of the &lt;code&gt;getInstance&lt;/code&gt; calls that created this &lt;code&gt;SecretKeyFactory&lt;/code&gt; object.</source>
          <target state="translated">이 &lt;code&gt;SecretKeyFactory&lt;/code&gt; 객체 를 생성 한 &lt;code&gt;getInstance&lt;/code&gt; 호출 중 하나에 지정된 것과 동일한 이름입니다 .</target>
        </trans-unit>
        <trans-unit id="e63b3fc817900ea7fafcde912d2710d7f67edc04" translate="yes" xml:space="preserve">
          <source>This is the same name that was specified in one of the &lt;code&gt;getInstance&lt;/code&gt; calls that created this &lt;code&gt;TrustManagerFactory&lt;/code&gt; object.</source>
          <target state="translated">이 &lt;code&gt;TrustManagerFactory&lt;/code&gt; 객체 를 작성한 &lt;code&gt;getInstance&lt;/code&gt; 호출 중 하나에 지정된 것과 동일한 이름입니다 .</target>
        </trans-unit>
        <trans-unit id="6d9f4e9b7cfc383346308adeaf21a1db9d0c63cb" translate="yes" xml:space="preserve">
          <source>This is the standard, streamlined metafactory; additional flexibility is provided by &lt;a href=&quot;lambdametafactory#altMetafactory-java.lang.invoke.MethodHandles.Lookup-java.lang.String-java.lang.invoke.MethodType-java.lang.Object...-&quot;&gt;&lt;code&gt;altMetafactory(MethodHandles.Lookup, String, MethodType, Object...)&lt;/code&gt;&lt;/a&gt;. A general description of the behavior of this method is provided &lt;a href=&quot;lambdametafactory&quot;&gt;&lt;code&gt;above&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이것은 표준적이고 간결한 메타 팩토리입니다. 추가 유연성은 &lt;a href=&quot;lambdametafactory#altMetafactory-java.lang.invoke.MethodHandles.Lookup-java.lang.String-java.lang.invoke.MethodType-java.lang.Object...-&quot;&gt; &lt;code&gt;altMetafactory(MethodHandles.Lookup, String, MethodType, Object...)&lt;/code&gt; &lt;/a&gt; 의해 제공됩니다 . 이 방법의 동작에 대한 일반적인 설명은 &lt;a href=&quot;lambdametafactory&quot;&gt; &lt;code&gt;above&lt;/code&gt; &lt;/a&gt; 제공됩니다 .</target>
        </trans-unit>
        <trans-unit id="08713ab9a869e7d5fc69a3646dc0fdc0be83b7e7" translate="yes" xml:space="preserve">
          <source>This is the super class of all the locale sensitive service provider interfaces (SPIs).</source>
          <target state="translated">이것은 모든 로케일 구분 서비스 제공자 인터페이스 (SPI)의 수퍼 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="7cf71e1b96731023ae05e625836032d436f13cff" translate="yes" xml:space="preserve">
          <source>This is the superclass of all exceptions thrown by operations in the Context and DirContext interfaces.</source>
          <target state="translated">이것은 Context 및 DirContext 인터페이스의 오퍼레이션에 의해 발생되는 모든 예외의 수퍼 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="c09719224a14a1f8c021b38f5294d739a940b8e3" translate="yes" xml:space="preserve">
          <source>This is the superclass of all exceptions thrown by operations in the Context and DirContext interfaces. The nature of the failure is described by the name of the subclass. This exception captures the information pinpointing where the operation failed, such as where resolution last proceeded to.</source>
          <target state="translated">이것은 Context 및 DirContext 인터페이스의 오퍼레이션에 의해 발생되는 모든 예외의 수퍼 클래스입니다. 실패의 특성은 서브 클래스의 이름으로 설명됩니다. 이 예외는 해결이 마지막으로 진행된 곳과 같이 작업이 실패한 곳을 정확하게 나타내는 정보를 캡처합니다.</target>
        </trans-unit>
        <trans-unit id="bac966b23fc2541f976ddd7be68a237883504b6e" translate="yes" xml:space="preserve">
          <source>This is the superclass of security-related exceptions thrown by operations in the Context and DirContext interfaces.</source>
          <target state="translated">이는 Context 및 DirContext 인터페이스의 조작에 의해 발생되는 보안 관련 예외의 수퍼 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="6643b141302429d4fea2b066f297c10dbed91915" translate="yes" xml:space="preserve">
          <source>This is the superclass of security-related exceptions thrown by operations in the Context and DirContext interfaces. The nature of the failure is described by the name of the subclass.</source>
          <target state="translated">이는 Context 및 DirContext 인터페이스의 조작에 의해 발생되는 보안 관련 예외의 수퍼 클래스입니다. 실패의 특성은 서브 클래스의 이름으로 설명됩니다.</target>
        </trans-unit>
        <trans-unit id="6080b203c70f7a616bcedbc5fd678fce4238c455" translate="yes" xml:space="preserve">
          <source>This is the writer to be used to output errors from scripts. By default, a &lt;code&gt;PrintWriter&lt;/code&gt; based on &lt;code&gt;System.err&lt;/code&gt; is used. Accessor methods getErrorWriter, setErrorWriter are used to manage this field.</source>
          <target state="translated">스크립트에서 오류를 출력하는 데 사용되는 기록기입니다. 기본적 으로 &lt;code&gt;System.err&lt;/code&gt; 기반 의 &lt;code&gt;PrintWriter&lt;/code&gt; 가 사용됩니다. 접근 자 메소드 getErrorWriter, setErrorWriter가이 필드를 관리하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="15af96f510cf6e282b8213079f3b883baccf707e" translate="yes" xml:space="preserve">
          <source>This is the writer to be used to output from scripts. By default, a &lt;code&gt;PrintWriter&lt;/code&gt; based on &lt;code&gt;System.out&lt;/code&gt; is used. Accessor methods getWriter, setWriter are used to manage this field.</source>
          <target state="translated">스크립트에서 출력하는 데 사용되는 라이터입니다. 기본적 으로 &lt;code&gt;System.out&lt;/code&gt; 을 기반으로 하는 &lt;code&gt;PrintWriter&lt;/code&gt; 가 사용됩니다. 접근 자 메소드 getWriter, setWriter는이 필드를 관리하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="8ee9c9da35fb85a4d327067b64bc367ee4905caa" translate="yes" xml:space="preserve">
          <source>This is typically used for formatting and parsing a two digit year.</source>
          <target state="translated">이것은 일반적으로 2 자리 연도를 형식화하고 구문 분석하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="4f4575371195406b5c199ded211735094638a4eb" translate="yes" xml:space="preserve">
          <source>This is used to lookup any part of the formatter needing specific localization, such as the text or localized pattern.</source>
          <target state="translated">텍스트 또는 지역화 된 패턴과 같이 특정 지역화가 필요한 포맷터의 일부를 조회하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="0422da1a451403f134567c7c9f1705c12666722f" translate="yes" xml:space="preserve">
          <source>This is useful if an existing KeyStore object needs to be used with Builder-based APIs.</source>
          <target state="translated">기존 키 저장소 오브젝트를 빌더 기반 API와 함께 사용해야하는 경우에 유용합니다.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
