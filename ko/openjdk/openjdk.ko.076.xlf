<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="openjdk">
    <body>
      <group id="openjdk">
        <trans-unit id="b029b525bf5f42458954c7067e973f25aad85180" translate="yes" xml:space="preserve">
          <source>Uniform Resource Locator (&lt;a href=&quot;../../java/net/url&quot;&gt;&lt;code&gt;URL&lt;/code&gt;&lt;/a&gt;) -- The print data consists of the bytes read from the URL location. The bytes are encoded in the character set specified by the doc flavor's MIME type. If the MIME type does not specify a character set, the default character set is US-ASCII.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72d1bc1786787b9f5cf6f8701a1fb442f4f59285" translate="yes" xml:space="preserve">
          <source>Union</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2cfef1bfee0e9e671b5120696b51b26567441b4a" translate="yes" xml:space="preserve">
          <source>UnionType</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2526b93dc562a68ed40d7d722f8374200e7e4e25" translate="yes" xml:space="preserve">
          <source>UnionType.getAlternatives()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7553b136bb52617dcd8cd2fc17176cf6e846745f" translate="yes" xml:space="preserve">
          <source>Unique key for message text (to allow translation, analysis).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f9e8ae9a76d0c44c4e06e8c6c489f428f3062a6" translate="yes" xml:space="preserve">
          <source>Unit that represents the concept of a century. For the ISO calendar system, it is equal to 100 years.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa542cbc7f0b2f05e5de66292062be35167ef3ec" translate="yes" xml:space="preserve">
          <source>Unit that represents the concept of a day. For the ISO calendar system, it is the standard day from midnight to midnight. The estimated duration of a day is &lt;code&gt;24 Hours&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28e3b680a177515dffb29196c9e8b5734714cc06" translate="yes" xml:space="preserve">
          <source>Unit that represents the concept of a decade. For the ISO calendar system, it is equal to 10 years.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76cc7298e519e3192d4a51c54374f480794c6751" translate="yes" xml:space="preserve">
          <source>Unit that represents the concept of a microsecond. For the ISO calendar system, it is equal to the 1,000,000th part of the second unit.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2cb2dcbedda16f48962f95f0ab811f7ca7cdc1b0" translate="yes" xml:space="preserve">
          <source>Unit that represents the concept of a millennium. For the ISO calendar system, it is equal to 1000 years.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b222767e0678a279e41981a3a25b41bd33e8807" translate="yes" xml:space="preserve">
          <source>Unit that represents the concept of a millisecond. For the ISO calendar system, it is equal to the 1000th part of the second unit.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5c57d74b7967b443c541c9d347cc933cb52ecd2" translate="yes" xml:space="preserve">
          <source>Unit that represents the concept of a minute. For the ISO calendar system, it is equal to 60 seconds.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aae2933dd6d0a216713c2b3265e20d5634df6f13" translate="yes" xml:space="preserve">
          <source>Unit that represents the concept of a month. For the ISO calendar system, the length of the month varies by month-of-year. The estimated duration of a month is one twelfth of &lt;code&gt;365.2425 Days&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10d277a288c3706e5c30644c076d8f49b2d75d31" translate="yes" xml:space="preserve">
          <source>Unit that represents the concept of a nanosecond, the smallest supported unit of time. For the ISO calendar system, it is equal to the 1,000,000,000th part of the second unit.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="caaefa6443294a2914fef3533cc04cf6083d264b" translate="yes" xml:space="preserve">
          <source>Unit that represents the concept of a quarter-year. For the ISO calendar system, it is equal to 3 months. The estimated duration of a quarter-year is one quarter of &lt;code&gt;365.2425 Days&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4fc2298392742d99b347fd01c8cca812f4bb0f3" translate="yes" xml:space="preserve">
          <source>Unit that represents the concept of a second. For the ISO calendar system, it is equal to the second in the SI system of units, except around a leap-second.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44055e4e12f6a7beb6afade94dfeaffef12b25ba" translate="yes" xml:space="preserve">
          <source>Unit that represents the concept of a week. For the ISO calendar system, it is equal to 7 days.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc8981fb3925fefa46782dae431dfb58e2298153" translate="yes" xml:space="preserve">
          <source>Unit that represents the concept of a year. For the ISO calendar system, it is equal to 12 months. The estimated duration of a year is &lt;code&gt;365.2425 Days&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de69187eb1d3b4eea3cdbefda5cfb59885860c57" translate="yes" xml:space="preserve">
          <source>Unit that represents the concept of an era. The ISO calendar system doesn't have eras thus it is impossible to add an era to a date or date-time. The estimated duration of the era is artificially defined as &lt;code&gt;1,000,000,000 Years&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35791b835ccae9dcd3e221885df9649918983922" translate="yes" xml:space="preserve">
          <source>Unit that represents the concept of an hour. For the ISO calendar system, it is equal to 60 minutes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e7dc2b57c647629ad3b2fb9b5d230b46dadcbe9" translate="yes" xml:space="preserve">
          <source>Unit that represents the concept of half a day, as used in AM/PM. For the ISO calendar system, it is equal to 12 hours.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b92cd16f227b89b79f19e9a392fdaee24d87d84" translate="yes" xml:space="preserve">
          <source>Units of date-time, such as years, months, days and hours</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d0576845720c0b1785626c136d2a4a4ca679c74" translate="yes" xml:space="preserve">
          <source>Unix lines mode can also be enabled via the embedded flag expression &lt;code&gt;(?d)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4421071f358af3669c1359597f1958a36ab5fc0d" translate="yes" xml:space="preserve">
          <source>UnixLoginModule</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce1dcb016aacac559d33e4fc06bae15660291a09" translate="yes" xml:space="preserve">
          <source>Unknown properties may be ignored or rejected with an unspecified error, and invalid entries may cause an unspecified error to be thrown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f7164f6f4f45e1d46b8983fa63a16225ada84f8" translate="yes" xml:space="preserve">
          <source>UnknownAnnotationValueException</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ac9f69a437206d3932d5b32cb5f4f85e86d9820" translate="yes" xml:space="preserve">
          <source>UnknownAnnotationValueException.getArgument()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fcf6113e11cec18fbc8430dc017992147a7e9c42" translate="yes" xml:space="preserve">
          <source>UnknownAnnotationValueException.getUnknownAnnotationValue()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3b67977250cdfa6c993a3a26f92bc180e1a1e2e" translate="yes" xml:space="preserve">
          <source>UnknownElementException</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ccbe3cde69c50bd8dad81b9601681d15f3e3d503" translate="yes" xml:space="preserve">
          <source>UnknownElementException.getArgument()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bcd01e5077d5ddfba17ecd307ccbdbcd273c5659" translate="yes" xml:space="preserve">
          <source>UnknownElementException.getUnknownElement()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21e2422cc44d784b50a6a1c37ec779fb26fb449b" translate="yes" xml:space="preserve">
          <source>UnknownEntityException</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="149ca90d6675fa5edf8f070374f5e53074792ac2" translate="yes" xml:space="preserve">
          <source>UnknownError</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="612b5d62b7a3a98d70cabb056ef7934e9315be42" translate="yes" xml:space="preserve">
          <source>UnknownFormatConversionException</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1df6a07d1ea42c57c29578495eae5c55f4616857" translate="yes" xml:space="preserve">
          <source>UnknownFormatConversionException.getConversion()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="190c79e0f12edfcf0f1628da8f89d20aa6d30c13" translate="yes" xml:space="preserve">
          <source>UnknownFormatConversionException.getMessage()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2941b908b349709787fa2ff2f86e8bc3390d2123" translate="yes" xml:space="preserve">
          <source>UnknownFormatFlagsException</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46f6286f4525762ee40e9fe2dc150006bb7008e9" translate="yes" xml:space="preserve">
          <source>UnknownFormatFlagsException.getFlags()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07434e7dfdfa80d7d5a5c5966720d3a87f859b25" translate="yes" xml:space="preserve">
          <source>UnknownFormatFlagsException.getMessage()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31e16174700d4708a0b027d1150a223776ccdda6" translate="yes" xml:space="preserve">
          <source>UnknownHostException</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5fea50cbc26e1b02ec050895179d21e343b4cc6c" translate="yes" xml:space="preserve">
          <source>UnknownServiceException</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="873797c1b0ee0748c1292bce602e830f46a75dcd" translate="yes" xml:space="preserve">
          <source>UnknownTypeException</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="adf7c08e5eccbba57d462d622178fbd5ad578c06" translate="yes" xml:space="preserve">
          <source>UnknownTypeException.getArgument()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="796711a768f6656e1b96b4247b71f745cdaa13da" translate="yes" xml:space="preserve">
          <source>UnknownTypeException.getUnknownType()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="191895e9cf7803718b3f7fa13f3a7b768e363fa9" translate="yes" xml:space="preserve">
          <source>Unless explicitly allowed, all methods in this interface might throw a NullPointerException if given a &lt;code&gt;null&lt;/code&gt; argument.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e4ed9fec0d3c36d524624667d67b1bd1013fcda" translate="yes" xml:space="preserve">
          <source>Unless explicitly allowed, all methods in this package might throw a &lt;a href=&quot;../../java/lang/nullpointerexception&quot;&gt;NullPointerException&lt;/a&gt; if given a &lt;code&gt;null&lt;/code&gt; argument or if given a &lt;a href=&quot;../../java/lang/iterable&quot;&gt;list or collection&lt;/a&gt; containing &lt;code&gt;null&lt;/code&gt; elements. Similarly, no method may return &lt;code&gt;null&lt;/code&gt; unless explicitly allowed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbbabcfe44237242d52f345fb9c30c21cde2d7aa" translate="yes" xml:space="preserve">
          <source>Unless explicitly qualified, the term &quot;request controls&quot; refers to context request controls.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a1c1bc18fb07e2defbf56430d05d5e3a56ba193" translate="yes" xml:space="preserve">
          <source>Unless explicitly stated, null values or empty Strings are not valid parameters for the methods in this package. You may expect to see exceptions if these parameters are used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9568542a81bfe0790866590c77394e1f3cb2977" translate="yes" xml:space="preserve">
          <source>Unless otherwise mentioned, passing a &lt;code&gt;null&lt;/code&gt; parameter into any method of a &lt;code&gt;Scanner&lt;/code&gt; will cause a &lt;code&gt;NullPointerException&lt;/code&gt; to be thrown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78709c7df6da949cdf1d000c975e6cb8a90e37ee" translate="yes" xml:space="preserve">
          <source>Unless otherwise noted, invoking a method of any class or interface in this package created by one &lt;a href=&quot;spi/filesystemprovider&quot;&gt;&lt;code&gt;provider&lt;/code&gt;&lt;/a&gt; with a parameter that is an object created by another provider, will throw &lt;a href=&quot;providermismatchexception&quot;&gt;&lt;code&gt;ProviderMismatchException&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="575e42d898d9f55e332136f6413aa0ba13ab019f" translate="yes" xml:space="preserve">
          <source>Unless otherwise noted, methods that attempt to access the file system will throw &lt;a href=&quot;closedfilesystemexception&quot;&gt;&lt;code&gt;ClosedFileSystemException&lt;/code&gt;&lt;/a&gt; when invoked on objects associated with a &lt;a href=&quot;filesystem&quot;&gt;&lt;code&gt;FileSystem&lt;/code&gt;&lt;/a&gt; that has been &lt;a href=&quot;filesystem#close--&quot;&gt;&lt;code&gt;closed&lt;/code&gt;&lt;/a&gt;. Additionally, any methods that attempt write access to a file system will throw &lt;a href=&quot;readonlyfilesystemexception&quot;&gt;&lt;code&gt;ReadOnlyFileSystemException&lt;/code&gt;&lt;/a&gt; when invoked on an object associated with a &lt;a href=&quot;filesystem&quot;&gt;&lt;code&gt;FileSystem&lt;/code&gt;&lt;/a&gt; that only provides read-only access.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba4a60eee36e8f2e7e69b165fb211c08a29ffaa3" translate="yes" xml:space="preserve">
          <source>Unless otherwise noted, passing a &lt;code&gt;null&lt;/code&gt; argument to a constructor or method in any class or interface in this package will cause a &lt;a href=&quot;../../../lang/nullpointerexception&quot;&gt;&lt;code&gt;NullPointerException&lt;/code&gt;&lt;/a&gt; to be thrown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f28cfcd296be66cf8e454f1da31b3a375a596a3" translate="yes" xml:space="preserve">
          <source>Unless otherwise noted, passing a &lt;code&gt;null&lt;/code&gt; argument to a constructor or method in any class or interface in this package will cause a &lt;a href=&quot;../../lang/nullpointerexception&quot;&gt;&lt;code&gt;NullPointerException&lt;/code&gt;&lt;/a&gt; to be thrown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41fa6596c5425481131a295cd4cbf472eafb631a" translate="yes" xml:space="preserve">
          <source>Unless otherwise noted, passing a &lt;code&gt;null&lt;/code&gt; argument to a constructor or method in any class or interface in this package will cause a &lt;a href=&quot;../lang/nullpointerexception&quot;&gt;&lt;code&gt;NullPointerException&lt;/code&gt;&lt;/a&gt; to be thrown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fc07ccda188c601bd06fa95e43277f3ffe17507" translate="yes" xml:space="preserve">
          <source>Unless otherwise noted, passing a &lt;code&gt;null&lt;/code&gt; argument to a constructor or method in any class or interface in this package will cause a &lt;a href=&quot;../nullpointerexception&quot;&gt;&lt;code&gt;NullPointerException&lt;/code&gt;&lt;/a&gt; to be thrown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="519217a6ec54d7d7ddf908deb133eddba7a29b2c" translate="yes" xml:space="preserve">
          <source>Unless otherwise noted, passing a &lt;code&gt;null&lt;/code&gt; argument to a constructor or method in this class will cause a &lt;a href=&quot;../../lang/nullpointerexception&quot;&gt;&lt;code&gt;NullPointerException&lt;/code&gt;&lt;/a&gt; to be thrown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="148943c4bf85ff86b9df78f30a4f5ae82fb4254a" translate="yes" xml:space="preserve">
          <source>Unless otherwise noted, passing a &lt;code&gt;null&lt;/code&gt; argument to a constructor or method in this class will cause a &lt;a href=&quot;../../lang/nullpointerexception&quot;&gt;&lt;code&gt;NullPointerException&lt;/code&gt;&lt;/a&gt; to be thrown. If the verify flag is on when opening a signed jar file, the content of the file is verified against its signature embedded inside the file. Please note that the verification process does not include validating the signer's certificate. A caller should inspect the return value of &lt;a href=&quot;jarentry#getCodeSigners--&quot;&gt;&lt;code&gt;JarEntry.getCodeSigners()&lt;/code&gt;&lt;/a&gt; to further determine if the signature can be trusted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da6e36f8047ec489c168eb5c0df5fc37cf73b7de" translate="yes" xml:space="preserve">
          <source>Unless otherwise noted, passing a &lt;code&gt;null&lt;/code&gt; argument to a constructor or method in this class will cause a &lt;a href=&quot;nullpointerexception&quot;&gt;&lt;code&gt;NullPointerException&lt;/code&gt;&lt;/a&gt; to be thrown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d03c9f155b5b86733c35fc9ddab778b085ad290a" translate="yes" xml:space="preserve">
          <source>Unless otherwise noted, passing a &lt;code&gt;null&lt;/code&gt; argument to a constructor or method of any class or interface in this package will cause a &lt;a href=&quot;../../lang/nullpointerexception&quot;&gt;&lt;code&gt;NullPointerException&lt;/code&gt;&lt;/a&gt; to be thrown. Additionally, invoking a method with a collection containing a &lt;code&gt;null&lt;/code&gt; element will cause a &lt;code&gt;NullPointerException&lt;/code&gt;, unless otherwise specified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2dd2f3c2e26b46755d44de7cd577a89aa135ee80" translate="yes" xml:space="preserve">
          <source>Unless otherwise noted, passing a &lt;code&gt;null&lt;/code&gt; argument to a method in any class or interface in this package will cause a &lt;a href=&quot;../../lang/nullpointerexception&quot;&gt;&lt;code&gt;NullPointerException&lt;/code&gt;&lt;/a&gt; to be thrown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1011613b3cdcfe5ce173a1cfe95d5c657a0b987b" translate="yes" xml:space="preserve">
          <source>Unless otherwise noted, passing a &lt;code&gt;null&lt;/code&gt; argument to a method of this class will cause a &lt;a href=&quot;../lang/nullpointerexception&quot;&gt;&lt;code&gt;NullPointerException&lt;/code&gt;&lt;/a&gt; to be thrown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5897d3035eb14e2aed131d3c8174a4a2265523c0" translate="yes" xml:space="preserve">
          <source>Unless otherwise noted, passing a null argument to a constructor or method in any class or interface in this package will cause a &lt;a href=&quot;../../lang/nullpointerexception&quot;&gt;&lt;code&gt;NullPointerException&lt;/code&gt;&lt;/a&gt; to be thrown. The Javadoc &quot;@param&quot; definition is used to summarise the null-behavior. The &quot;@throws &lt;a href=&quot;../../lang/nullpointerexception&quot;&gt;&lt;code&gt;NullPointerException&lt;/code&gt;&lt;/a&gt;&quot; is not explicitly documented in each method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e472fbca8edbfea94fc80e5a070253d0e1e683c" translate="yes" xml:space="preserve">
          <source>Unless otherwise noted, passing a null argument to a constructor or method in any class or interface in this package will cause a &lt;a href=&quot;../lang/nullpointerexception&quot;&gt;&lt;code&gt;NullPointerException&lt;/code&gt;&lt;/a&gt; to be thrown. The Javadoc &quot;@param&quot; definition is used to summarise the null-behavior. The &quot;@throws &lt;a href=&quot;../lang/nullpointerexception&quot;&gt;&lt;code&gt;NullPointerException&lt;/code&gt;&lt;/a&gt;&quot; is not explicitly documented in each method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c4a3636419682b1e8bf8c359ce1aaae4320191f" translate="yes" xml:space="preserve">
          <source>Unless otherwise noted, passing a null parameter to any of the methods in a &lt;code&gt;BitSet&lt;/code&gt; will result in a &lt;code&gt;NullPointerException&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c633aef659f1a04ad0d51e61779ab52d9f4a2b68" translate="yes" xml:space="preserve">
          <source>Unless otherwise noted, the behavior of passing a null argument to a constructor or method in this class will cause NullPointerException to be thrown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b9fb49c5e8ea108da4cccfa5d0e6fabb7af023f" translate="yes" xml:space="preserve">
          <source>Unless otherwise noted, the behavior of passing a null argument to a constructor or method in this class will cause a NullPointerException to be thrown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2cad149fe28c03dd42ad8a1db9886016e259c82e" translate="yes" xml:space="preserve">
          <source>Unless otherwise specified in a particular implementation, the collections returned by methods in this package should be expected to be unmodifiable by the caller and unsafe for concurrent access.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96310fc9af4ef35b4abe8844b92d70aa17af1438" translate="yes" xml:space="preserve">
          <source>Unless otherwise specified, a write operation will return only after writing all of the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f29a5be5730826396efc89042e91d41df99ac386" translate="yes" xml:space="preserve">
          <source>Unless otherwise specified, methods in this package will throw a &lt;code&gt;NullPointerException&lt;/code&gt; if given a &lt;code&gt;null&lt;/code&gt; argument.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86ee7f20bb531477c062e281908d7a13826f2d70" translate="yes" xml:space="preserve">
          <source>Unless otherwise specified, passing a &lt;code&gt;null&lt;/code&gt; argument to any method in this class will cause a &lt;a href=&quot;../lang/nullpointerexception&quot;&gt;&lt;code&gt;NullPointerException&lt;/code&gt;&lt;/a&gt; to be thrown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4f38a129f007381ecfb87c2b09a592beea0d4cd" translate="yes" xml:space="preserve">
          <source>Unless otherwise specified, passing a &lt;code&gt;null&lt;/code&gt; argument to any method in this interface will cause a &lt;a href=&quot;../lang/nullpointerexception&quot;&gt;&lt;code&gt;NullPointerException&lt;/code&gt;&lt;/a&gt; to be thrown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7a1569f2ba17f0d68ed6ede84cbaefb83766fda" translate="yes" xml:space="preserve">
          <source>Unless otherwise specified, passing a &lt;code&gt;null&lt;/code&gt; argument to any method or constructor in this class will cause a &lt;a href=&quot;../lang/nullpointerexception&quot;&gt;&lt;code&gt;NullPointerException&lt;/code&gt;&lt;/a&gt; to be thrown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18e8d60f6f6191b5d343d951ccddd3275d6d82b4" translate="yes" xml:space="preserve">
          <source>Unless otherwise specified, the methods defined in this class are not thread-safe. Multiple threads that need to access a single object concurrently should synchronize amongst themselves and provide the necessary locking. Multiple threads each manipulating separate objects need not synchronize.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13ae8e09057b0719f91a07fb227d5641e1151757" translate="yes" xml:space="preserve">
          <source>Unless otherwise specified, the methods defined in this interface are not thread-safe. Multiple threads that need to access a single object concurrently should synchronize amongst themselves and provide the necessary locking. Multiple threads each manipulating separate objects need not synchronize.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="319eccd3d80767b4a14043234f4a5487bd57fab7" translate="yes" xml:space="preserve">
          <source>Unless overridden, this method re-throws the I/O exception that prevented the file from being visited.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c50b0d2bd56992ce85a536c2dc0e2245e45ed5e3" translate="yes" xml:space="preserve">
          <source>Unless overridden, this method returns &lt;a href=&quot;filevisitresult#CONTINUE&quot;&gt;&lt;code&gt;CONTINUE&lt;/code&gt;&lt;/a&gt; if the directory iteration completes without an I/O exception; otherwise this method re-throws the I/O exception that caused the iteration of the directory to terminate prematurely.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca43281015c19de71d3001f16859b15bc9ddf4e8" translate="yes" xml:space="preserve">
          <source>Unless overridden, this method returns &lt;a href=&quot;filevisitresult#CONTINUE&quot;&gt;&lt;code&gt;CONTINUE&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fd1f7c65dcf34e673be16c699867c7f3461f8dd" translate="yes" xml:space="preserve">
          <source>Unless overridden, this method synchronizes on the result of &lt;a href=&quot;classloader#getClassLoadingLock-java.lang.String-&quot;&gt;&lt;code&gt;&lt;code&gt;getClassLoadingLock&lt;/code&gt;&lt;/code&gt;&lt;/a&gt; method during the entire class loading process.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="584d1058692777c9f126d29d03cd80e6e7d0aade" translate="yes" xml:space="preserve">
          <source>Unless the current thread is interrupting itself, which is always permitted, the &lt;a href=&quot;thread#checkAccess--&quot;&gt;&lt;code&gt;checkAccess&lt;/code&gt;&lt;/a&gt; method of this thread is invoked, which may cause a &lt;a href=&quot;securityexception&quot;&gt;&lt;code&gt;SecurityException&lt;/code&gt;&lt;/a&gt; to be thrown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a16f7c973ffd2f08d07a123732165027a06ae15" translate="yes" xml:space="preserve">
          <source>Unless this Spliterator covers an infinite number of elements, repeated calls to &lt;code&gt;trySplit()&lt;/code&gt; must eventually return &lt;code&gt;null&lt;/code&gt;. Upon non-null return:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1efa23d90162cc950959c549911fe2a287f1795" translate="yes" xml:space="preserve">
          <source>Unlike &lt;a href=&quot;midichannel#allSoundOff--&quot;&gt;&lt;code&gt;allSoundOff()&lt;/code&gt;&lt;/a&gt;, this method applies to only a specific channel, not to all channels. Further, it silences not only currently sounding notes, but also subsequently received notes. It is possible that the underlying synthesizer does not support muting channels. In order to verify that a call to &lt;code&gt;setMute&lt;/code&gt; was successful, use &lt;code&gt;getMute&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60ae1f36bc32e4f356c6d3deb8eeb0348ec7fd31" translate="yes" xml:space="preserve">
          <source>Unlike &lt;a href=&quot;sslengine#setNeedClientAuth-boolean-&quot;&gt;&lt;code&gt;setNeedClientAuth(boolean)&lt;/code&gt;&lt;/a&gt;, if this option is set and the client chooses not to provide authentication information about itself,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0cb89c58b43228846f62c6aae66a0daa1bf8d799" translate="yes" xml:space="preserve">
          <source>Unlike &lt;a href=&quot;sslengine#setWantClientAuth-boolean-&quot;&gt;&lt;code&gt;setWantClientAuth(boolean)&lt;/code&gt;&lt;/a&gt;, if this option is set and the client chooses not to provide authentication information about itself,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9da7b84d98871dab41e843834d9a44726d60f352" translate="yes" xml:space="preserve">
          <source>Unlike &lt;a href=&quot;sslserversocket#setNeedClientAuth-boolean-&quot;&gt;&lt;code&gt;setNeedClientAuth(boolean)&lt;/code&gt;&lt;/a&gt;, if the accepted socket's option is set and the client chooses not to provide authentication information about itself,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92a4efa13c7340a6315dd866755c49dcb3564943" translate="yes" xml:space="preserve">
          <source>Unlike &lt;a href=&quot;sslserversocket#setWantClientAuth-boolean-&quot;&gt;&lt;code&gt;setWantClientAuth(boolean)&lt;/code&gt;&lt;/a&gt;, if the accepted socket's option is set and the client chooses not to provide authentication information about itself,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9be2460c8fcabe8ba8908f8cd88a3111899cc59a" translate="yes" xml:space="preserve">
          <source>Unlike &lt;a href=&quot;sslsocket#getSession--&quot;&gt;&lt;code&gt;SSLSocket.getSession()&lt;/code&gt;&lt;/a&gt; this method does not block until handshaking is complete.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5cd0f644c77b7eb334c747c6648451da46ece2c5" translate="yes" xml:space="preserve">
          <source>Unlike &lt;a href=&quot;sslsocket#getSession--&quot;&gt;&lt;code&gt;getSession()&lt;/code&gt;&lt;/a&gt;, this method does not initiate the initial handshake and does not block until handshaking is complete.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="984cefad788e4536a3aa3b7f44ce8a1686f5b115" translate="yes" xml:space="preserve">
          <source>Unlike &lt;a href=&quot;sslsocket#setNeedClientAuth-boolean-&quot;&gt;&lt;code&gt;setNeedClientAuth(boolean)&lt;/code&gt;&lt;/a&gt;, if this option is set and the client chooses not to provide authentication information about itself,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a28d8dca14013c04080ef19149f9f9baac7573f4" translate="yes" xml:space="preserve">
          <source>Unlike &lt;a href=&quot;sslsocket#setWantClientAuth-boolean-&quot;&gt;&lt;code&gt;setWantClientAuth(boolean)&lt;/code&gt;&lt;/a&gt;, if this option is set and the client chooses not to provide authentication information about itself,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0cbe19a0262394da434d6abc194ec24ce4d07b3e" translate="yes" xml:space="preserve">
          <source>Unlike &lt;code&gt;Comparable&lt;/code&gt;, a comparator may optionally permit comparison of null arguments, while maintaining the requirements for an equivalence relation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad06ca2eed8bc074e3c796515d89bb4334904d1a" translate="yes" xml:space="preserve">
          <source>Unlike &lt;code&gt;MutableCallSite&lt;/code&gt;, there is no &lt;a href=&quot;mutablecallsite#syncAll-java.lang.invoke.MutableCallSite:A-&quot;&gt;syncAll operation&lt;/a&gt; on volatile call sites, since every write to a volatile variable is implicitly synchronized with reader threads.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="070d459702e2b70bdf5928c321926da844b3ef83" translate="yes" xml:space="preserve">
          <source>Unlike &lt;code&gt;SSLSocket&lt;/code&gt;, all methods of SSLEngine are non-blocking. &lt;code&gt;SSLEngine&lt;/code&gt; implementations may require the results of tasks that may take an extended period of time to complete, or may even block. For example, a TrustManager may need to connect to a remote certificate validation service, or a KeyManager might need to prompt a user to determine which certificate to use as part of client authentication. Additionally, creating cryptographic signatures and verifying them can be slow, seemingly blocking.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="366fd30ee70fdf33436603fe43f8caef8124f1c8" translate="yes" xml:space="preserve">
          <source>Unlike a &lt;a href=&quot;../keystore&quot;&gt;&lt;code&gt;KeyStore&lt;/code&gt;&lt;/a&gt;, which provides access to a cache of private keys and trusted certificates, a &lt;code&gt;CertStore&lt;/code&gt; is designed to provide access to a potentially vast repository of untrusted certificates and CRLs. For example, an LDAP implementation of &lt;code&gt;CertStore&lt;/code&gt; provides access to certificates and CRLs stored in one or more directories using the LDAP protocol and the schema as defined in the RFC service attribute.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c8bb040cae75de3ac6d4a317642fa2a7e45e882" translate="yes" xml:space="preserve">
          <source>Unlike a standard &lt;code&gt;OutputStream&lt;/code&gt;, ImageOutputStream extends its counterpart, &lt;code&gt;ImageInputStream&lt;/code&gt;. Thus it is possible to read from the stream as it is being written. The same seek and flush positions apply to both reading and writing, although the semantics for dealing with a non-zero bit offset before a byte-aligned write are necessarily different from the semantics for dealing with a non-zero bit offset before a byte-aligned read. When reading bytes, any bit offset is set to 0 before the read; when writing bytes, a non-zero bit offset causes the remaining bits in the byte to be written as 0s. The byte-aligned write then starts at the next byte position.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58e072cb09b7c8d213ff17bb11b2c4a1806aed52" translate="yes" xml:space="preserve">
          <source>Unlike a weighted list, language ranges in a prioritized list are sorted in the descending order based on its priority. The first language range has the highest priority and meets the user's preference most.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c3736112be6a7d8484b27d01a88aab8c69d94b5" translate="yes" xml:space="preserve">
          <source>Unlike environment properties, request controls of a context instance &lt;em&gt;are not inherited&lt;/em&gt; by context instances that are derived from it. Derived context instances have &lt;code&gt;null&lt;/code&gt; as their context request controls. You must set the request controls of a derived context instance explicitly using &lt;code&gt;setRequestControls()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="102500bfaa775c3d4fc30fa7b2d14dc7a97aaa73" translate="yes" xml:space="preserve">
          <source>Unlike most methods in this class, this method does not throw security exceptions. If a security manager exists and its &lt;a href=&quot;../lang/securitymanager#checkRead-java.lang.String-&quot;&gt;&lt;code&gt;SecurityManager.checkRead(String)&lt;/code&gt;&lt;/a&gt; method denies read access to a particular root directory, then that directory will not appear in the result.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="878e687971411d528990c43760e85c269e3be5b9" translate="yes" xml:space="preserve">
          <source>Unlike most other methods in this class, this method &lt;em&gt;does&lt;/em&gt; close the provided &lt;code&gt;ImageInputStream&lt;/code&gt; after the read operation has completed, unless &lt;code&gt;null&lt;/code&gt; is returned, in which case this method &lt;em&gt;does not&lt;/em&gt; close the stream.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b46cd822496b8f3982f8ff093f808c41c48712b9" translate="yes" xml:space="preserve">
          <source>Unlike most printing attributes which are immutable once constructed, class PrinterStateReasons is designed to be mutable; you can add &lt;a href=&quot;printerstatereason&quot;&gt;&lt;code&gt;PrinterStateReason&lt;/code&gt;&lt;/a&gt; objects to an existing PrinterStateReasons object and remove them again. However, like class &lt;a href=&quot;../../../../java/util/hashmap&quot;&gt;&lt;code&gt;java.util.HashMap&lt;/code&gt;&lt;/a&gt;, class PrinterStateReasons is not multiple thread safe. If a PrinterStateReasons object will be used by multiple threads, be sure to synchronize its operations (e.g., using a synchronized map view obtained from class &lt;a href=&quot;../../../../java/util/collections&quot;&gt;&lt;code&gt;java.util.Collections&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7d269bced9c09d6f686a5195b5a4c09fb7cc027" translate="yes" xml:space="preserve">
          <source>Unlike other types of resource bundle, you don't subclass &lt;code&gt;PropertyResourceBundle&lt;/code&gt;. Instead, you supply properties files containing the resource data. &lt;code&gt;ResourceBundle.getBundle&lt;/code&gt; will automatically look for the appropriate properties file and create a &lt;code&gt;PropertyResourceBundle&lt;/code&gt; that refers to it. See &lt;a href=&quot;resourcebundle#getBundle-java.lang.String-java.util.Locale-java.lang.ClassLoader-&quot;&gt;&lt;code&gt;ResourceBundle.getBundle&lt;/code&gt;&lt;/a&gt; for a complete description of the search and instantiation strategy.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="219b990a3e2722a30618f12bcdc2334083d3d781" translate="yes" xml:space="preserve">
          <source>Unlike sets, lists typically allow duplicate elements. More formally, lists typically allow pairs of elements &lt;code&gt;e1&lt;/code&gt; and &lt;code&gt;e2&lt;/code&gt; such that &lt;code&gt;e1.equals(e2)&lt;/code&gt;, and they typically allow multiple null elements if they allow null elements at all. It is not inconceivable that someone might wish to implement a list that prohibits duplicates, by throwing runtime exceptions when the user attempts to insert them, but we expect this usage to be rare.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f5803225dfa74d3c56da4861261faabd555cf07" translate="yes" xml:space="preserve">
          <source>Unlike soft and weak references, phantom references are not automatically cleared by the garbage collector as they are enqueued. An object that is reachable via phantom references will remain so until all such references are cleared or themselves become unreachable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a290522c4fcc049744c3e569008d07ea66088fc1" translate="yes" xml:space="preserve">
          <source>Unlike some of the numeric methods of class &lt;code&gt;StrictMath&lt;/code&gt;, all implementations of the equivalent functions of class &lt;code&gt;Math&lt;/code&gt; are not defined to return the bit-for-bit same results. This relaxation permits better-performing implementations where strict reproducibility is not required.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39a88f70205b960b7a32b11a7de43d60ebd53f17" translate="yes" xml:space="preserve">
          <source>Unlike the &lt;a href=&quot;files#delete-java.nio.file.Path-&quot;&gt;&lt;code&gt;delete()&lt;/code&gt;&lt;/a&gt; method, this method does not first examine the file to determine if the file is a directory. Whether a directory is deleted by this method is system dependent and therefore not specified. If the file is a symbolic link, then the link itself, not the final target of the link, is deleted. When the parameter is a relative path then the file to delete is relative to this open directory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6bae3306a9153178c1bed49d0fccefb5dcab836" translate="yes" xml:space="preserve">
          <source>Unlike the &lt;a href=&quot;files#delete-java.nio.file.Path-&quot;&gt;&lt;code&gt;delete()&lt;/code&gt;&lt;/a&gt; method, this method does not first examine the file to determine if the file is a directory. Whether non-directories are deleted by this method is system dependent and therefore not specified. When the parameter is a relative path then the directory to delete is relative to this open directory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7dba1426e752b9874c2ce36095aaa659fd0d3dd" translate="yes" xml:space="preserve">
          <source>Unlike the &lt;a href=&quot;jobkoctets&quot;&gt;&lt;code&gt;JobKOctets&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;jobimpressions&quot;&gt;&lt;code&gt;JobImpressions&lt;/code&gt;&lt;/a&gt; attributes, the JobMediaSheets value must include the multiplicative factors contributed by the number of copies specified by the &lt;a href=&quot;copies&quot;&gt;&lt;code&gt;Copies&lt;/code&gt;&lt;/a&gt; attribute and a &quot;number of copies&quot; instruction embedded in the document data, if any. This difference allows the system administrator to control the lower and upper bounds of both (1) the size of the document(s) with &lt;a href=&quot;jobkoctetssupported&quot;&gt;&lt;code&gt;JobKOctetsSupported&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;jobimpressionssupported&quot;&gt;&lt;code&gt;JobImpressionsSupported&lt;/code&gt;&lt;/a&gt; and (2) the size of the job with &lt;a href=&quot;jobmediasheetssupported&quot;&gt;&lt;code&gt;JobMediaSheetsSupported&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5636c397adab06e521a951b1a28c91c0435d8fe1" translate="yes" xml:space="preserve">
          <source>Unlike the &lt;a href=&quot;list&quot;&gt;&lt;code&gt;List&lt;/code&gt;&lt;/a&gt; interface, this interface does not provide support for indexed access to elements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ebed0fc65dd258b9b011292c101cdca62b8db0d" translate="yes" xml:space="preserve">
          <source>Unlike the &lt;a href=&quot;printstream&quot;&gt;&lt;code&gt;PrintStream&lt;/code&gt;&lt;/a&gt; class, if automatic flushing is enabled it will be done only when one of the &lt;code&gt;println&lt;/code&gt;, &lt;code&gt;printf&lt;/code&gt;, or &lt;code&gt;format&lt;/code&gt; methods is invoked, rather than whenever a newline character happens to be output. These methods use the platform's own notion of line separator rather than the newline character.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f939254fee74cc40565692e311bbf135ecb6d66" translate="yes" xml:space="preserve">
          <source>Unlike the &lt;a href=&quot;sslsocket#startHandshake--&quot;&gt;&lt;code&gt;SSLSocket#startHandshake()&lt;/code&gt;&lt;/a&gt; method, this method does not block until handshaking is completed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c58b3e9b661aeafd4ac33323b13e25cf5e4eb206" translate="yes" xml:space="preserve">
          <source>Unlike the &lt;code&gt;mark&lt;/code&gt; methods declared by the &lt;code&gt;Reader&lt;/code&gt; and &lt;code&gt;InputStream&lt;/code&gt; interfaces, no &lt;code&gt;readLimit&lt;/code&gt; parameter is used. An arbitrary amount of data may be read following the call to &lt;code&gt;mark&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7d5ce9f1c2ad7fe4e6fa04497ca11c292a5ac29" translate="yes" xml:space="preserve">
          <source>Unlike the &lt;code&gt;set&lt;/code&gt; method, all of the calendar fields and &lt;code&gt;time&lt;/code&gt; values are calculated upon return.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de53b88a525e7d26b740bce7d29bb75a14f928b5" translate="yes" xml:space="preserve">
          <source>Unlike the &lt;code&gt;set&lt;/code&gt; method, all of the calendar fields and the instant of time value are calculated upon return.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da4cc8b1d3dac1cde25f9afa8e0e9eb9575ac13e" translate="yes" xml:space="preserve">
          <source>Unlike the method &lt;a href=&quot;objects#requireNonNull-T-java.lang.String-&quot;&gt;&lt;code&gt;requireNonNull(Object, String)&lt;/code&gt;&lt;/a&gt;, this method allows creation of the message to be deferred until after the null check is made. While this may confer a performance advantage in the non-null case, when deciding to call this method care should be taken that the costs of creating the message supplier are less than the cost of just creating the string message directly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="615ed4b5bf6780475400ace8b81c961072be98bc" translate="yes" xml:space="preserve">
          <source>Unlike the other abstract collection implementations, the programmer does</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c51147fec60801e3382da59609aefacd1d8b84a2" translate="yes" xml:space="preserve">
          <source>Unlike the signature polymorphic methods &lt;code&gt;invokeExact&lt;/code&gt; and &lt;code&gt;invoke&lt;/code&gt;, &lt;code&gt;invokeWithArguments&lt;/code&gt; can be accessed normally via the Core Reflection API and JNI. It can therefore be used as a bridge between native or reflective code and method handles.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa5977f51a9207b140c7299bfb2b0081772514c7" translate="yes" xml:space="preserve">
          <source>Unlike with the Core Reflection API, where access is checked every time a reflective method is invoked, method handle access checking is performed &lt;a href=&quot;methodhandles.lookup#access&quot;&gt;when the method handle is created&lt;/a&gt;. In the case of &lt;code&gt;ldc&lt;/code&gt; (see below), access checking is performed as part of linking the constant pool entry underlying the constant method handle.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9137c244b6c709f10e41d30ed4fc70c0a4d0aa3" translate="yes" xml:space="preserve">
          <source>Unloads a particular instrument.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c657143e1b9a1b6b101d699607b42bf38053e0c" translate="yes" xml:space="preserve">
          <source>Unloads all instruments contained in the specified &lt;code&gt;Soundbank&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30a18489219249ff1ecae0e657716d7febe1023e" translate="yes" xml:space="preserve">
          <source>Unloads the instruments referenced by the specified patches, from the MIDI sound bank specified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de4af2e68cb45a5c7b00268a66368ed52615f452" translate="yes" xml:space="preserve">
          <source>UnmappableCharacterException</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb9686baaf4248ea34bb57c4a3f0b8cc2c27e037" translate="yes" xml:space="preserve">
          <source>UnmappableCharacterException.getInputLength()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b907b974d2209627cc2443409c480967a79754c6" translate="yes" xml:space="preserve">
          <source>UnmappableCharacterException.getMessage()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0981ed31c970e0b0ae65624838150c8fe906dcd8" translate="yes" xml:space="preserve">
          <source>Unmodifiable set of printing attributes for this doc, or null to obtain all attribute values from the job's attribute set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33580b9e4f77504a5fb821467b719f26a9f69bcb" translate="yes" xml:space="preserve">
          <source>Unmodifiable snapshot of this Print Service's attribute set. May be empty, but not null.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43a3885026e7a22a24013c6cc4c23a47666e45e0" translate="yes" xml:space="preserve">
          <source>Unmodifiable view of &lt;code&gt;attributeSet&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89249f565a70e980148331a9cb87332823132fb1" translate="yes" xml:space="preserve">
          <source>UnmodifiableClassException</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0148b4ddc04b861638d9433b81d3e63fc2b1cd3" translate="yes" xml:space="preserve">
          <source>UnmodifiableSetException</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1f4d182e15c8290ec6ebd664ac962dfb65baccc" translate="yes" xml:space="preserve">
          <source>UnrecoverableEntryException</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60941909c7b6d513a5a4fa28fa00fc800656ea6e" translate="yes" xml:space="preserve">
          <source>UnrecoverableKeyException</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3021c7c9aa6dada630bb1c7b53e4f589444cbab" translate="yes" xml:space="preserve">
          <source>Unregisters an MBean from the MBean server. The MBean is identified by its object name. Once the method has been invoked, the MBean may no longer be accessed by its object name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5956613aa795ab5f45aa046e58efe0f302f6d14" translate="yes" xml:space="preserve">
          <source>Unregisters the supplied transformer. Future class definitions will not be shown to the transformer. Removes the most-recently-added matching instance of the transformer. Due to the multi-threaded nature of class loading, it is possible for a transformer to receive calls after it has been removed. Transformers should be written defensively to expect this situation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7e933af3f14920271cd6e46316876db402bc9fe" translate="yes" xml:space="preserve">
          <source>UnresolvedAddressException</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="993f3450a99797343b5c6866214dba99fa98c073" translate="yes" xml:space="preserve">
          <source>UnresolvedPermission</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc8072cff1b6c345dafe8eb713ecc7ce292d7d4a" translate="yes" xml:space="preserve">
          <source>UnresolvedPermission.equals()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8db103911022111a45bf614c0b74b40b6dacbf47" translate="yes" xml:space="preserve">
          <source>UnresolvedPermission.getActions()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2df2892f625ddd2e1396caeb3e0e53fe16153adb" translate="yes" xml:space="preserve">
          <source>UnresolvedPermission.getUnresolvedActions()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="543fdcb03a6ae15f1bd72dc9195db16ec882cfda" translate="yes" xml:space="preserve">
          <source>UnresolvedPermission.getUnresolvedCerts()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="857f0597d66e7fb7cc196e42303ba32ba33d1d00" translate="yes" xml:space="preserve">
          <source>UnresolvedPermission.getUnresolvedName()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2a9bb6ff4a8173382987735162114843e6e799d" translate="yes" xml:space="preserve">
          <source>UnresolvedPermission.getUnresolvedType()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b6ad3eb817eb73e89c1e5e57d29aeaaa49a214d" translate="yes" xml:space="preserve">
          <source>UnresolvedPermission.hashCode()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60a48bb809e7f69080b2da98d8ef5333dbde40df" translate="yes" xml:space="preserve">
          <source>UnresolvedPermission.implies()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa0446bb36e9a9a2d49b40f9b8902f1cf713a2a7" translate="yes" xml:space="preserve">
          <source>UnresolvedPermission.newPermissionCollection()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b245732f21d55dc5aa33c0df09330fd6937456de" translate="yes" xml:space="preserve">
          <source>UnresolvedPermission.toString()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65b377a625f4d66d09c2650463b476c87aa2a5ad" translate="yes" xml:space="preserve">
          <source>UnsatisfiedLinkError</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="639cfe117b0bc5829d5547c75e3345964ebcdf42" translate="yes" xml:space="preserve">
          <source>Unschedules and returns, without executing, the next task queued by the current thread but not yet executed, if the current thread is operating in a ForkJoinPool. This method is designed primarily to support extensions, and is unlikely to be useful otherwise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39a78c4938f8ffc64e4175e0e1e41cffd25d5b76" translate="yes" xml:space="preserve">
          <source>UnsolicitedNotification</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d2c5900e6c156a2f457e00b402bdd255c7f1b73" translate="yes" xml:space="preserve">
          <source>UnsolicitedNotification.getException()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de5f2dcc5277860be3d64ea1ece477149eb9099b" translate="yes" xml:space="preserve">
          <source>UnsolicitedNotification.getReferrals()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9ff84b01932b42a4cbd06e74999ae9b32cd541d" translate="yes" xml:space="preserve">
          <source>UnsolicitedNotificationEvent</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8522720341d21ef01b893943f78a1300fdcd02f" translate="yes" xml:space="preserve">
          <source>UnsolicitedNotificationEvent.dispatch()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83085a8e790f3e72259d9f8640d793c2579e03b8" translate="yes" xml:space="preserve">
          <source>UnsolicitedNotificationEvent.getNotification()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28e179f1d4c9926bbaf600c540ec3f8d7ba3e529" translate="yes" xml:space="preserve">
          <source>UnsolicitedNotificationListener</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1adf511acc6589487b17377bc239588209e494dc" translate="yes" xml:space="preserve">
          <source>UnsolicitedNotificationListener.notificationReceived()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="916302098d9e96ac5a25f92d7ce6da7c2d30b53d" translate="yes" xml:space="preserve">
          <source>Unspecified option type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b032106135075af895dc113efcc9983bc8f4042a" translate="yes" xml:space="preserve">
          <source>Unspecified reason.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="856e8a9f01e63cf9f0ffe11f4bed3ace17c8beb8" translate="yes" xml:space="preserve">
          <source>Unsuccessful locking and unlocking operations, and reentrant locking/unlocking operations, do not require any memory synchronization effects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce12c7ac2564e86cd53c8de20d527590cfd46dbd" translate="yes" xml:space="preserve">
          <source>UnsupportedAddressTypeException</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62bde61003e236403f48a11ba855dfd0262f1063" translate="yes" xml:space="preserve">
          <source>UnsupportedAudioFileException</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba27428dedd31e88f4f6e6e0624e2677091f7bce" translate="yes" xml:space="preserve">
          <source>UnsupportedCallbackException</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31ede54fb0271960cfb827c244e26ad4774a9279" translate="yes" xml:space="preserve">
          <source>UnsupportedCallbackException.getCallback()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5aaf87d4a23af3d541d8bd2e06904c586d11b6e6" translate="yes" xml:space="preserve">
          <source>UnsupportedCharsetException</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8ddfadf3a5141f3204757f25629c90144c81acf" translate="yes" xml:space="preserve">
          <source>UnsupportedCharsetException.getCharsetName()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34ecc901794367e31d357b69fb8e4a9ac50b45a6" translate="yes" xml:space="preserve">
          <source>UnsupportedClassVersionError</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="156ae2a23745cd8b01ab1f9ae129dda14ff67809" translate="yes" xml:space="preserve">
          <source>UnsupportedEncodingException</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6b9cc70af4626956ac004db8653f110603b7231" translate="yes" xml:space="preserve">
          <source>UnsupportedOperationException</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25b3cdfbf8bda73a3b2da7074e5f77f3a06d5b4d" translate="yes" xml:space="preserve">
          <source>UnsupportedTemporalTypeException</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a4bbb6c87d4e0868fa7881db7f5a0dda74bd625" translate="yes" xml:space="preserve">
          <source>UnsupportedTemporalTypeException indicates that a ChronoField or ChronoUnit is not supported for a Temporal class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bdd266349196cfa47304ed7ee3fa47009995b710" translate="yes" xml:space="preserve">
          <source>Until that point, a &lt;code&gt;EventContext&lt;/code&gt; instance that has outstanding listeners will continue to exist and be maintained by the service provider.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63771c017a3fb4938c53ebd2d93e7c80855dca74" translate="yes" xml:space="preserve">
          <source>Until the initial handshake has completed, this method returns a session object which reports an invalid cipher suite of &quot;SSL_NULL_WITH_NULL_NULL&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f05ddabacebeb4feaefee26e18f6f2ed12231ee0" translate="yes" xml:space="preserve">
          <source>Unused reason.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae0b41f702f02745f38f76067d2c01850f5ea590" translate="yes" xml:space="preserve">
          <source>Unwrap a previously wrapped key.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11b3e1d5ed89d2029a6bfdf3f88d88d2e9569761" translate="yes" xml:space="preserve">
          <source>Unwraps a byte array received from the client. This method can be called only after the authentication exchange has completed (i.e., when &lt;code&gt;isComplete()&lt;/code&gt; returns true) and only if the authentication exchange has negotiated integrity and/or privacy as the quality of protection; otherwise, an &lt;code&gt;IllegalStateException&lt;/code&gt; is thrown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78550834f59fc38ca607cfc38bdaceb81240f89c" translate="yes" xml:space="preserve">
          <source>Unwraps a byte array received from the server. This method can be called only after the authentication exchange has completed (i.e., when &lt;code&gt;isComplete()&lt;/code&gt; returns true) and only if the authentication exchange has negotiated integrity and/or privacy as the quality of protection; otherwise, an &lt;code&gt;IllegalStateException&lt;/code&gt; is thrown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ac07052b6743c76e2afe688bd6960ebbf1093a6" translate="yes" xml:space="preserve">
          <source>Update or extend the validity period for this &lt;code&gt;Object&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="015c15fc94e179d73d08ee8528df08ee4c9a777f" translate="yes" xml:space="preserve">
          <source>Update the digest using the specified ByteBuffer. The digest is updated using the &lt;code&gt;input.remaining()&lt;/code&gt; bytes starting at &lt;code&gt;input.position()&lt;/code&gt;. Upon return, the buffer's position will be equal to its limit; its limit will not have changed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e90a75f3df5a0961ddd7682d37e6063c32f9dbc" translate="yes" xml:space="preserve">
          <source>Update the relevant ProtectionDomains with the Principals from the &lt;code&gt;Subject&lt;/code&gt; associated with this &lt;code&gt;SubjectDomainCombiner&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08a7f27acfc0fc915fe5793900dbe8acea95a9a5" translate="yes" xml:space="preserve">
          <source>Updates (replace) the access control list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0084475da4cab72cdc6360b30feaa6f306ab6f7" translate="yes" xml:space="preserve">
          <source>Updates a file's last modified time attribute. The file time is converted to the epoch and precision supported by the file system. Converting from finer to coarser granularities result in precision loss. The behavior of this method when attempting to set the last modified time when it is not supported by the file system or is outside the range supported by the underlying file store is not defined. It may or not fail by throwing an &lt;code&gt;IOException&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f38c2deb262128000857c6c4df69c21469bc3743" translate="yes" xml:space="preserve">
          <source>Updates any or all of the file's last modified time, last access time, and create time attributes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee020c412f92d97a56c3f40538a8a97333b064cc" translate="yes" xml:space="preserve">
          <source>Updates made to a file may be &lt;a href=&quot;asynchronousfilechannel#force-boolean-&quot;&gt;&lt;code&gt;&lt;i&gt;forced
   out&lt;/i&gt;&lt;/code&gt;&lt;/a&gt; to the underlying storage device, ensuring that data are not lost in the event of a system crash.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aed5e31389f67cfc5ddf35ddc575417ddb12a4cc" translate="yes" xml:space="preserve">
          <source>Updates made to a file may be &lt;a href=&quot;filechannel#force-boolean-&quot;&gt;&lt;code&gt;&lt;i&gt;forced
   out&lt;/i&gt;&lt;/code&gt;&lt;/a&gt; to the underlying storage device, ensuring that data are not lost in the event of a system crash.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="902b17d91a80789a54572305df06dd47a83ae122" translate="yes" xml:space="preserve">
          <source>Updates the CRC-32 checksum with the specified array of bytes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5a613fc7d57442650af52c4062e3960a89bea07" translate="yes" xml:space="preserve">
          <source>Updates the CRC-32 checksum with the specified byte (the low eight bits of the argument b).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="056b4b8a01f4466ff5c852793ade1003eb4b18f7" translate="yes" xml:space="preserve">
          <source>Updates the array reference that will be returned by subsequent calls to the &lt;code&gt;getData&lt;/code&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e6b83ad441814b0380e891aed3a7717fab73d2e" translate="yes" xml:space="preserve">
          <source>Updates the checksum with the bytes from the specified buffer. The checksum is updated using buffer.&lt;a href=&quot;../../nio/buffer#remaining--&quot;&gt;&lt;code&gt;remaining()&lt;/code&gt;&lt;/a&gt; bytes starting at buffer.&lt;a href=&quot;../../nio/buffer#position--&quot;&gt;&lt;code&gt;position()&lt;/code&gt;&lt;/a&gt; Upon return, the buffer's position will be updated to its limit; its limit will not have been changed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13fc4d504289541ba51f2e39a62c1348e40838b5" translate="yes" xml:space="preserve">
          <source>Updates the checksum with the specified array of bytes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="464cc2ea985b8e80d8bcc575c4f4ce30b34d9721" translate="yes" xml:space="preserve">
          <source>Updates the checksum with the specified byte (the low eight bits of the argument b).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ded7886722b9de75628ffd683faf249b574ddbe9" translate="yes" xml:space="preserve">
          <source>Updates the current checksum with the specified array of bytes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a33fe404b85df1ddbd5e0736dca91a5327146c7" translate="yes" xml:space="preserve">
          <source>Updates the current checksum with the specified byte.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="843b7fe403b1d0561c5938739833267ad823f1fb" translate="yes" xml:space="preserve">
          <source>Updates the data to be signed or verified by a byte.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3af8c9ed66a94e149f764a292c59e5d9054580da" translate="yes" xml:space="preserve">
          <source>Updates the data to be signed or verified using the specified ByteBuffer. Processes the &lt;code&gt;data.remaining()&lt;/code&gt; bytes starting at at &lt;code&gt;data.position()&lt;/code&gt;. Upon return, the buffer's position will be equal to its limit; its limit will not have changed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd31072336fcfa58a07a668dc351143ede54b3f8" translate="yes" xml:space="preserve">
          <source>Updates the data to be signed or verified using the specified byte.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="def5ea9c4fd7fca454d7fe8b9e10a7697555b601" translate="yes" xml:space="preserve">
          <source>Updates the data to be signed or verified, using the specified array of bytes, starting at the specified offset.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="523ed659eb3e70b5342edceb340e858daf8a1779" translate="yes" xml:space="preserve">
          <source>Updates the data to be signed or verified, using the specified array of bytes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e036043fb68f08e21d251ef235ba8084932b1f18" translate="yes" xml:space="preserve">
          <source>Updates the digest using the specified array of bytes, starting at the specified offset.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89712bda4fdbc435613ea0ccd4dc762e4c87a5f9" translate="yes" xml:space="preserve">
          <source>Updates the digest using the specified array of bytes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6cf379365cadccbde9d2161109fe08171f04e0e8" translate="yes" xml:space="preserve">
          <source>Updates the digest using the specified byte.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9aa35c53d822abc7aa1281093b6c033dad1c13b" translate="yes" xml:space="preserve">
          <source>Updates the file group-owner.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce163aff679e6ccab2155872516dd460b0a9c8ea" translate="yes" xml:space="preserve">
          <source>Updates the file owner.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7092b9882ade92fc81348c0acf20b9b33494635f" translate="yes" xml:space="preserve">
          <source>Updates the file permissions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="665a6c2eb4809d0a68ace65533b9b60fb2810ec3" translate="yes" xml:space="preserve">
          <source>Updates the message digest (if the digest function is on) using the specified byte, and in any case writes the byte to the output stream. That is, if the digest function is on (see &lt;a href=&quot;digestoutputstream#on-boolean-&quot;&gt;&lt;code&gt;on&lt;/code&gt;&lt;/a&gt;), this method calls &lt;code&gt;update&lt;/code&gt; on the message digest associated with this stream, passing it the byte &lt;code&gt;b&lt;/code&gt;. This method then writes the byte to the output stream, blocking until the byte is actually written.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d76ef061bca02656f593041b411ffdd946136db5" translate="yes" xml:space="preserve">
          <source>Updates the message digest (if the digest function is on) using the specified subarray, and in any case writes the subarray to the output stream. That is, if the digest function is on (see &lt;a href=&quot;digestoutputstream#on-boolean-&quot;&gt;&lt;code&gt;on&lt;/code&gt;&lt;/a&gt;), this method calls &lt;code&gt;update&lt;/code&gt; on the message digest associated with this stream, passing it the subarray specifications. This method then writes the subarray bytes to the output stream, blocking until the bytes are actually written.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97f4c9b27bc886a093b0b21fe1f1cfb787437c2b" translate="yes" xml:space="preserve">
          <source>Updates the target method of this call site, according to the behavior defined by this call site's specific class. The immediate subclasses of &lt;code&gt;CallSite&lt;/code&gt; document the class-specific behaviors of this method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c0593e2542db41160c275c01fe179a2e7d7031d" translate="yes" xml:space="preserve">
          <source>Updates the target method of this call site, as a normal variable. The type of the new target must agree with the type of the old target.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c19aab82e517a26aa81e134dc3a2926582cc9cb" translate="yes" xml:space="preserve">
          <source>Updates the target method of this call site, as a volatile variable. The type of the new target must agree with the type of the old target.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96f7b2e45a58ab8c6a3b1ac8082e1374f962d66c" translate="yes" xml:space="preserve">
          <source>Updates the value of the archive attribute.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f8abd3d2d7ea62278513f2df1379366370940e7" translate="yes" xml:space="preserve">
          <source>Updates the value of the hidden attribute.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="284868c6c13c5de355e5c18b93e8001e301ab0d4" translate="yes" xml:space="preserve">
          <source>Updates the value of the read-only attribute.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="017b739c1b2acd6c2a03231062ea3fe4db922faf" translate="yes" xml:space="preserve">
          <source>Updates the value of the system attribute.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0609bb341c4a78714195e17d57bc3adba33ee916" translate="yes" xml:space="preserve">
          <source>Updates the value that will be returned by subsequent calls to the &lt;code&gt;getLength&lt;/code&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50dc32ded1d630b41066a508f3464a5d76fb1a0a" translate="yes" xml:space="preserve">
          <source>Updates the value that will be returned by subsequent calls to the &lt;code&gt;getOffset&lt;/code&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aab627edbe363971bb91bd6f428128c46547a3e8" translate="yes" xml:space="preserve">
          <source>Updates to &quot;bound&quot; properties will cause a &quot;PropertyChange&quot; event to get fired when the property is changed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b4ae7f6d4ba9eb03e2c14d9474f1c1161b2a577" translate="yes" xml:space="preserve">
          <source>Updates with the given value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec6952e09b9cc6aee90f3110c55ff105e4facbf9" translate="yes" xml:space="preserve">
          <source>Updating</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3699d6d4a7b6d1e97fd9a25d90038c22baf0a18" translate="yes" xml:space="preserve">
          <source>Upon completion of this method, &lt;code&gt;isDone()&lt;/code&gt; reports &lt;code&gt;false&lt;/code&gt;, and &lt;code&gt;getException()&lt;/code&gt; reports &lt;code&gt;null&lt;/code&gt;. However, the value returned by &lt;code&gt;getRawResult&lt;/code&gt; is unaffected. To clear this value, you can invoke &lt;code&gt;setRawResult(null)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2e0fbbd4b28ccff9ec588d9207a0093caeab42f" translate="yes" xml:space="preserve">
          <source>Upon finishing, this method resets this cipher object to the state it was in when previously initialized via a call to &lt;code&gt;engineInit&lt;/code&gt;. That is, the object is reset and available to encrypt or decrypt (depending on the operation mode that was specified in the call to &lt;code&gt;engineInit&lt;/code&gt;) more data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c422f4c2323dc760bb13546606e70f98df8d7fb4" translate="yes" xml:space="preserve">
          <source>Upon finishing, this method resets this cipher object to the state it was in when previously initialized via a call to &lt;code&gt;init&lt;/code&gt;. That is, the object is reset and available to encrypt or decrypt (depending on the operation mode that was specified in the call to &lt;code&gt;init&lt;/code&gt;) more data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32c989991bef2e0ddd1c578a34270b770e84a5e5" translate="yes" xml:space="preserve">
          <source>Upon return, the source buffer's position will be updated to its limit; its limit will not have been changed. The returned output buffer's position will be zero and its limit will be the number of resulting decoded bytes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29b4ecb3df396f95e69afa93711c30b261696ed7" translate="yes" xml:space="preserve">
          <source>Upon return, this membership object will be &lt;a href=&quot;membershipkey#isValid--&quot;&gt;&lt;code&gt;invalid&lt;/code&gt;&lt;/a&gt;. If the multicast group membership is already invalid then invoking this method has no effect. Once a multicast group membership is invalid, it remains invalid forever.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2039134eb09ba4af75f970b182d2bc2812b9fbb9" translate="yes" xml:space="preserve">
          <source>Upper Case</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83087183cf2fc461034d823bb990cf31750aea63" translate="yes" xml:space="preserve">
          <source>Uppercase</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bb18642b70b9f8a9c12ccf39487328f306b8e19" translate="yes" xml:space="preserve">
          <source>Usage</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d17cf28eb7701713654d3a2f67b57093ff517316" translate="yes" xml:space="preserve">
          <source>Usage Details About Controls</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="342c659777997bec12f413246e5e24d6a8317e2a" translate="yes" xml:space="preserve">
          <source>Usage Example</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31fdeb34a4f4bc8a7b882018ab434e09d2defd44" translate="yes" xml:space="preserve">
          <source>Usage Examples</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0165150b427ee5eba5db30142ff24f84776e081f" translate="yes" xml:space="preserve">
          <source>Usage Information</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3aea5cca0ddd71189e463baa0c48ce11300d657" translate="yes" xml:space="preserve">
          <source>Usage Note If the class path of a class loader that is used for provider loading includes remote network URLs then those URLs will be dereferenced in the process of searching for provider-configuration files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c75d28d3a9e20da30a1d6c2c70c33ca260e431d0" translate="yes" xml:space="preserve">
          <source>Usage Threshold</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d2e9a122502f7b2db6b82c7ffed057d15d9d207" translate="yes" xml:space="preserve">
          <source>Usage Threshold Notification</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a11db1e76075d8af69162b48cf74ba7a785b98c" translate="yes" xml:space="preserve">
          <source>Usage example, based on a typical producer-consumer scenario. Note that a &lt;code&gt;BlockingQueue&lt;/code&gt; can safely be used with multiple producers and multiple consumers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="950d9c1aee5a0b8ac1664c8a9f40a8cddde14c8b" translate="yes" xml:space="preserve">
          <source>Usage examples</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aabc75243121e9e20ceed9101a5f8abb3bab3f5e" translate="yes" xml:space="preserve">
          <source>Usage threshold notification will be emitted by &lt;a href=&quot;memorymxbean&quot;&gt;&lt;code&gt;MemoryMXBean&lt;/code&gt;&lt;/a&gt;. When the Java virtual machine detects that the memory usage of a memory pool has reached or exceeded the usage threshold the virtual machine will trigger the &lt;code&gt;MemoryMXBean&lt;/code&gt; to emit an &lt;a href=&quot;memorynotificationinfo#MEMORY_THRESHOLD_EXCEEDED&quot;&gt;&lt;code&gt;usage threshold exceeded notification&lt;/code&gt;&lt;/a&gt;. Another usage threshold exceeded notification will not be generated until the usage has fallen below the threshold and then exceeded it again.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a5db3849744a6440376b799c94856ec0f6a7d99" translate="yes" xml:space="preserve">
          <source>Usages of this class should typically be of the form: &lt;code&gt;ThreadLocalRandom.current().nextX(...)&lt;/code&gt; (where &lt;code&gt;X&lt;/code&gt; is &lt;code&gt;Int&lt;/code&gt;, &lt;code&gt;Long&lt;/code&gt;, etc). When all usages are of this form, it is never possible to accidently share a &lt;code&gt;ThreadLocalRandom&lt;/code&gt; across multiple threads.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ea1712940b16ad0cb3634dd44699d59d9d9b97b" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;../mbeanserver#getClassLoaderRepository--&quot;&gt;&lt;code&gt;MBeanServer.getClassLoaderRepository()&lt;/code&gt;&lt;/a&gt;} instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d0574ab5aabe590a7863598fc160b49b0616ed4" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;mbeanserver#getClassLoaderRepository--&quot;&gt;&lt;code&gt;MBeanServer.getClassLoaderRepository()&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8de16fac3452689c1ca4ef6f6a87d76acd588ed" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;GMT&lt;/code&gt; as the last resort if the given or detected time zone ID is unknown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6a4ff2935cbca02e9509a5e48d130a26c1d4814" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;getDateInstance&lt;/code&gt; to get the normal date format for that country. There are other static factory methods available. Use &lt;code&gt;getTimeInstance&lt;/code&gt; to get the time format for that country. Use &lt;code&gt;getDateTimeInstance&lt;/code&gt; to get a date and time format. You can pass in different options to these factory methods to control the length of the result; from &lt;a href=&quot;dateformat#SHORT&quot;&gt;&lt;code&gt;SHORT&lt;/code&gt;&lt;/a&gt; to &lt;a href=&quot;dateformat#MEDIUM&quot;&gt;&lt;code&gt;MEDIUM&lt;/code&gt;&lt;/a&gt; to &lt;a href=&quot;dateformat#LONG&quot;&gt;&lt;code&gt;LONG&lt;/code&gt;&lt;/a&gt; to &lt;a href=&quot;dateformat#FULL&quot;&gt;&lt;code&gt;FULL&lt;/code&gt;&lt;/a&gt;. The exact result depends on the locale, but generally:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="968e46a353174ddf63f0e24fa4545f927c21bb53" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;getInstance&lt;/code&gt; or &lt;code&gt;getNumberInstance&lt;/code&gt; to get the normal number format. Use &lt;code&gt;getIntegerInstance&lt;/code&gt; to get an integer number format. Use &lt;code&gt;getCurrencyInstance&lt;/code&gt; to get the currency number format. And use &lt;code&gt;getPercentInstance&lt;/code&gt; to get a format for displaying percentages. With this format, a fraction like 0.53 is displayed as 53%.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b284f9ea96688c364578153437d85e4f80b64f0f" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;isDocFlavorSupported()&lt;/code&gt; to verify that a DocFlavor is supported before calling this method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e54473f73c2d22ad76e50366ffbd8fa4b91ab4e3" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;reconnect()&lt;/code&gt; to change the connection request controls of a context. Invoking &lt;code&gt;ldapContext.reconnect()&lt;/code&gt; affects only the connection used by &lt;code&gt;ldapContext&lt;/code&gt; and any new contexts instances that are derived form &lt;code&gt;ldapContext&lt;/code&gt;. Contexts that previously shared the connection with &lt;code&gt;ldapContext&lt;/code&gt; remain unchanged. That is, a context's connection request controls must be explicitly changed and is not affected by changes to another context's connection request controls.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6a7f6f1129f57d15e66f9bfe66c911c2a147d49" translate="yes" xml:space="preserve">
          <source>Use CookieHandler.setDefault to set a brand new &lt;a href=&quot;cookiehandler&quot;&gt;&lt;code&gt;CookieHandler&lt;/code&gt;&lt;/a&gt; implementation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f9eb5e22cdad367831e2e1d7b25d5f963b85b61" translate="yes" xml:space="preserve">
          <source>Use caution when constructing streams from repeated concatenation. Accessing an element of a deeply concatenated stream can result in deep call chains, or even &lt;code&gt;StackOverflowException&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2effb865eb7ca9542e528aee307a24b00bd72cfa" translate="yes" xml:space="preserve">
          <source>Use of Locale</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb05a447cd7a37a80681ca041a26f4b78df9b004" translate="yes" xml:space="preserve">
          <source>Use of a &lt;code&gt;Clock&lt;/code&gt; is optional. All key date-time classes also have a &lt;code&gt;now()&lt;/code&gt; factory method that uses the system clock in the default time zone. The primary purpose of this abstraction is to allow alternate clocks to be plugged in as and when required. Applications use an object to obtain the current time rather than a static method. This can simplify testing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="369f1854ebeea7cd5961451e910b9ee767350d99" translate="yes" xml:space="preserve">
          <source>Use of a general &lt;code&gt;Object&lt;/code&gt; other than an &lt;code&gt;ImageInputStream&lt;/code&gt; is intended for readers that interact directly with a capture device or imaging protocol. The set of legal classes is advertised by the reader's service provider's &lt;code&gt;getInputTypes&lt;/code&gt; method; most readers will return a single-element array containing only &lt;code&gt;ImageInputStream.class&lt;/code&gt; to indicate that they accept only an &lt;code&gt;ImageInputStream&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6217f56b73d214bf4cffb2a05aa4b6c8ffe43cf" translate="yes" xml:space="preserve">
          <source>Use of a general &lt;code&gt;Object&lt;/code&gt; other than an &lt;code&gt;ImageOutputStream&lt;/code&gt; is intended for writers that interact directly with an output device or imaging protocol. The set of legal classes is advertised by the writer's service provider's &lt;code&gt;getOutputTypes&lt;/code&gt; method; most writers will return a single-element array containing only &lt;code&gt;ImageOutputStream.class&lt;/code&gt; to indicate that they accept only an &lt;code&gt;ImageOutputStream&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="919fc92515203369ae15eb2d6fdc235b2e160fd8" translate="yes" xml:space="preserve">
          <source>Use of a type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5fbb66b60991b9d33cc1b3f5afa907a46906e307" translate="yes" xml:space="preserve">
          <source>Use of short zone IDs has been deprecated in &lt;code&gt;java.util.TimeZone&lt;/code&gt;. This map allows the IDs to continue to be used via the &lt;a href=&quot;zoneid#of-java.lang.String-java.util.Map-&quot;&gt;&lt;code&gt;of(String, Map)&lt;/code&gt;&lt;/a&gt; factory method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47776f8de3b6e99b62367124396195d1311cc3e5" translate="yes" xml:space="preserve">
          <source>Use of this permission is discouraged from further use because it is possible to circumvent the name restrictions by overriding the &lt;a href=&quot;provider#getName--&quot;&gt;&lt;code&gt;Provider.getName()&lt;/code&gt;&lt;/a&gt; method. Also, there is an equivalent level of risk associated with granting code permission to insert a provider with a specific name, or any name it chooses. Users should use the &quot;insertProvider&quot; permission instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9051677a6e4fbcc422563bc59bd33e39fea73ade" translate="yes" xml:space="preserve">
          <source>Use serialVersionUID from JNDI 1.1.1 for interoperability.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbc9ac9277672c5403bd4fc62a472f102d00bbee" translate="yes" xml:space="preserve">
          <source>Use subclassing for naming systems that generate contents of a binding dynamically.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e911b55ff1c3850b36c69642edf91a97596384f6" translate="yes" xml:space="preserve">
          <source>Use subclassing for naming systems that generate contents of a name/class pair dynamically.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8830af169574657002ea7e021be826a50d5de602" translate="yes" xml:space="preserve">
          <source>Use the &lt;a href=&quot;calendar#compareTo-java.util.Calendar-&quot;&gt;&lt;code&gt;compareTo&lt;/code&gt;&lt;/a&gt; method to compare only the time values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77b3922a77064dfd2f5179047923f5a109f4b04b" translate="yes" xml:space="preserve">
          <source>Use the &lt;code&gt;BeanInfo&lt;/code&gt; interface to create a &lt;code&gt;BeanInfo&lt;/code&gt; class and provide explicit information about the methods, properties, events, and other features of your beans.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08a1946569a048b1d9926101b54d2c830546c42a" translate="yes" xml:space="preserve">
          <source>Use the &lt;code&gt;Proxy.NO_PROXY&lt;/code&gt; constant for representing a direct connection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91efc2cdb4c263923502710377884700378cd1be" translate="yes" xml:space="preserve">
          <source>Use the &lt;code&gt;user.timezone&lt;/code&gt; property value as the default time zone ID if it's available.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59df542fa6644cde9e8e00add13f594d57b4ceb9" translate="yes" xml:space="preserve">
          <source>Use the control factories specified in the &lt;code&gt;LdapContext.CONTROL_FACTORIES&lt;/code&gt; property of the environment, and of the provider resource file associated with &lt;code&gt;ctx&lt;/code&gt;, in that order. The value of this property is a colon-separated list of factory class names that are tried in order, and the first one that succeeds in creating the control is the one used. If none of the factories can be loaded, return &lt;code&gt;ctl&lt;/code&gt;. If an exception is encountered while creating the control, the exception is passed up to the caller.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae13ded529937cebe691ca01cd0112b1d94e2943" translate="yes" xml:space="preserve">
          <source>Use the object factories specified in the &lt;code&gt;Context.OBJECT_FACTORIES&lt;/code&gt; property of the environment, and of the provider resource file associated with &lt;code&gt;nameCtx&lt;/code&gt;, in that order. The value of this property is a colon-separated list of factory class names that are tried in order, and the first one that succeeds in creating an object is the one used. If none of the factories can be loaded, return &lt;code&gt;refInfo&lt;/code&gt;. If an exception is encountered while creating the object, the exception is passed up to the caller.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78d4a64996e34ba4ebf9fcdfde074ad4f6713750" translate="yes" xml:space="preserve">
          <source>Used by VM to control lowmem implicit suspension.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f089ba6628a9ebe9397fc69fcb7ce8eedd0734ce" translate="yes" xml:space="preserve">
          <source>Used by writeObject to serialize a Collection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5baeecd07738a749cecd78db3cdc764d254a73bc" translate="yes" xml:space="preserve">
          <source>Used in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9de65447279598834af12315c0ca9487bfe695d3" translate="yes" xml:space="preserve">
          <source>Used only by subclasses.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48a65ae98a939b0d43426cb898489db33dbadf8a" translate="yes" xml:space="preserve">
          <source>Used only by subclasses. Constructs a TCP connection to a named host at a specified port. This acts as the SSL client.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e7ab8476bfd35234f9cbe16408608fc70933694" translate="yes" xml:space="preserve">
          <source>Used only by subclasses. Constructs a TCP connection to a server at a specified address and port. This acts as the SSL client.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10af4e079828016fb0aedb6e23582ad48eb8f307" translate="yes" xml:space="preserve">
          <source>Used only by subclasses. Constructs an SSL connection to a named host at a specified port, binding the client side of the connection a given address and port. This acts as the SSL client.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91fa7f2c25747e62338e344309bafbb32d763769" translate="yes" xml:space="preserve">
          <source>Used only by subclasses. Constructs an SSL connection to a server at a specified address and TCP port, binding the client side of the connection a given address and port. This acts as the SSL client.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0025fcfeddc3524b72110a78cdab26f2b892ea8e" translate="yes" xml:space="preserve">
          <source>Used only by subclasses. Constructs an uninitialized, unconnected TCP socket.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0bddd463685892277a40abb16b680339bec2858" translate="yes" xml:space="preserve">
          <source>Used to call top-level procedures and functions defined in scripts.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3a0365b75ebbe1be6c0478a857fd057501fda40" translate="yes" xml:space="preserve">
          <source>Used to collect diagnostics in a list, for example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76e666f3fc2216cd9c4875ad9cb82c35eb5d82a0" translate="yes" xml:space="preserve">
          <source>Used to determine if the &lt;code&gt;BeanContext&lt;/code&gt; child is avoiding using its GUI.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="059cba32d4ac662e6962e286fb1ad9b656ec1f30" translate="yes" xml:space="preserve">
          <source>Used to indicate whether of not we are running in an application builder environment.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24f417475b4eadca91689ec6e94c81dcb62d62b3" translate="yes" xml:space="preserve">
          <source>Used to indicate whether of not we are running in an environment where GUI interaction is available.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="514c237b4e252990d5d825aaaa5729d76cd23c91" translate="yes" xml:space="preserve">
          <source>Used to make half-open intervals.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="095f05021f600517a58d2ffaa8fcb578f1b234e2" translate="yes" xml:space="preserve">
          <source>Used to quote special characters in a prefix or suffix, for example, &lt;code&gt;&quot;'#'#&quot;&lt;/code&gt; formats 123 to &lt;code&gt;&quot;#123&quot;&lt;/code&gt;. To create a single quote itself, use two in a row: &lt;code&gt;&quot;# o''clock&quot;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e479e11383f8e69635bd6f43ec5192953964b157" translate="yes" xml:space="preserve">
          <source>Used to represent the object name of an MBean and its class name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d558813a808dca19d4ce58ecce508279911763d8" translate="yes" xml:space="preserve">
          <source>Used to represent the object name of an MBean and its class name. If the MBean is a Dynamic MBean the class name should be retrieved from the &lt;code&gt;MBeanInfo&lt;/code&gt; it provides.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eac1f99ed7a2a61518954ff6bb52b218f542b75a" translate="yes" xml:space="preserve">
          <source>Used to serialize all children of this &lt;code&gt;BeanContext&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5feb7ebf078ae8f31e7fe60d62dedb4eeb39559" translate="yes" xml:space="preserve">
          <source>Used to signal that no position is available.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e630c1b8d00940e76e0e39623045dd2e3f9e1dc" translate="yes" xml:space="preserve">
          <source>Useful constant for AM_PM field alignment. Used in FieldPosition of date/time formatting.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1717090a53383cb7ddf3f7a3376e802f7c727013" translate="yes" xml:space="preserve">
          <source>Useful constant for DATE field alignment. Used in FieldPosition of date/time formatting.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0585b1e568bc9a7fd6265dec9f4c6e64cf2f936" translate="yes" xml:space="preserve">
          <source>Useful constant for DAY_OF_WEEK field alignment. Used in FieldPosition of date/time formatting.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c22a4d9c5053ffc74d1b60613d4aa751e298e0e9" translate="yes" xml:space="preserve">
          <source>Useful constant for DAY_OF_WEEK_IN_MONTH field alignment. Used in FieldPosition of date/time formatting.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="078ea5137d804494257e458c9087180c6f3e076e" translate="yes" xml:space="preserve">
          <source>Useful constant for DAY_OF_YEAR field alignment. Used in FieldPosition of date/time formatting.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cdfee4d58afecb05695edc7410effd94885ad3fe" translate="yes" xml:space="preserve">
          <source>Useful constant for ERA field alignment. Used in FieldPosition of date/time formatting.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7496d909fd055ddd02f76b81f65f66da16e55578" translate="yes" xml:space="preserve">
          <source>Useful constant for MILLISECOND field alignment. Used in FieldPosition of date/time formatting.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="760f058c406409026daa276330254588d98487d7" translate="yes" xml:space="preserve">
          <source>Useful constant for MINUTE field alignment. Used in FieldPosition of date/time formatting.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48f280da5895751f3da21ecc589b1c6b090f3914" translate="yes" xml:space="preserve">
          <source>Useful constant for MONTH field alignment. Used in FieldPosition of date/time formatting.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36deccc88dd7749fb281cf8a90a9fd727798252a" translate="yes" xml:space="preserve">
          <source>Useful constant for SECOND field alignment. Used in FieldPosition of date/time formatting.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfb365bfb37cf7061fe1055a69f32a7c16d0ac10" translate="yes" xml:space="preserve">
          <source>Useful constant for TIMEZONE field alignment. Used in FieldPosition of date/time formatting.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e52a4998d4de3a751f8eab00aa01d9d109e32893" translate="yes" xml:space="preserve">
          <source>Useful constant for WEEK_OF_MONTH field alignment. Used in FieldPosition of date/time formatting.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4046930157759bf774a76acb156fab3cbd2a0869" translate="yes" xml:space="preserve">
          <source>Useful constant for WEEK_OF_YEAR field alignment. Used in FieldPosition of date/time formatting.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f0db4caf9bdd1f3dad161d524726dbab3efc387" translate="yes" xml:space="preserve">
          <source>Useful constant for YEAR field alignment. Used in FieldPosition of date/time formatting.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02dc34e0f9c65e59e814be3f08bd243301794280" translate="yes" xml:space="preserve">
          <source>Useful constant for country.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="752c091cbd64e117708e5d1e26ae74635ab5f5e4" translate="yes" xml:space="preserve">
          <source>Useful constant for language.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7a30c73acd7f2c30aa123ee08961cec2cc94a3f" translate="yes" xml:space="preserve">
          <source>Useful constant for one-based HOUR field alignment. Used in FieldPosition of date/time formatting. HOUR1_FIELD is used for the one-based 12-hour clock. For example, 11:30 PM + 1 hour results in 12:30 AM.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9518c0269a7db77b936bd3697851473f4a433bd6" translate="yes" xml:space="preserve">
          <source>Useful constant for one-based HOUR_OF_DAY field alignment. Used in FieldPosition of date/time formatting. HOUR_OF_DAY1_FIELD is used for the one-based 24-hour clock. For example, 23:59 + 01:00 results in 24:59.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a17421ff86d0dcfb29ea06a1017edc53a44c5900" translate="yes" xml:space="preserve">
          <source>Useful constant for the root locale. The root locale is the locale whose language, country, and variant are empty (&quot;&quot;) strings. This is regarded as the base locale of all locales, and is used as the language/country neutral locale for the locale sensitive operations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7c8994d2281159d3a096671d167b72b594747ab" translate="yes" xml:space="preserve">
          <source>Useful constant for zero-based HOUR field alignment. Used in FieldPosition of date/time formatting. HOUR0_FIELD is used for the zero-based 12-hour clock. For example, 11:30 PM + 1 hour results in 00:30 AM.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1804ef42b6094fcfa1e24dabc30104e845e88f6c" translate="yes" xml:space="preserve">
          <source>Useful constant for zero-based HOUR_OF_DAY field alignment. Used in FieldPosition of date/time formatting. HOUR_OF_DAY0_FIELD is used for the zero-based 24-hour clock. For example, 23:59 + 01:00 results in 00:59.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7323e97d860493ed6b8f4e2ea90e443efe9b00a2" translate="yes" xml:space="preserve">
          <source>User code does not usually implement this interface. Instead, an object that implements this interface is obtained with one of the methods in the &lt;a href=&quot;mbeanserverfactory&quot;&gt;&lt;code&gt;MBeanServerFactory&lt;/code&gt;&lt;/a&gt; class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="769613a1552b3fa5b235c3cba3c0eb3410b41b0a" translate="yes" xml:space="preserve">
          <source>User code does not usually refer to this interface. It is specified as part of the public API so that different implementations of that API will interoperate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98fc5ea770063874a158ad7620ac557ceb249d53" translate="yes" xml:space="preserve">
          <source>User code does not usually reference this class directly. RMI connection servers are usually created with the class &lt;a href=&quot;rmiconnectorserver&quot;&gt;&lt;code&gt;RMIConnectorServer&lt;/code&gt;&lt;/a&gt;. Remote clients usually create connections either with &lt;a href=&quot;../jmxconnectorfactory&quot;&gt;&lt;code&gt;JMXConnectorFactory&lt;/code&gt;&lt;/a&gt; or by instantiating &lt;a href=&quot;rmiconnector&quot;&gt;&lt;code&gt;RMIConnector&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="470db50815c75a4421e1e3e69ef0f53604f7e2da" translate="yes" xml:space="preserve">
          <source>User interfaces and operating systems use system-dependent &lt;em&gt;pathname strings&lt;/em&gt; to name files and directories. This class presents an abstract, system-independent view of hierarchical pathnames. An &lt;em&gt;abstract pathname&lt;/em&gt; has two components:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18becf225322e1329f99848d010f797c596b8aeb" translate="yes" xml:space="preserve">
          <source>User's account name</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5afefe71b24cc782f7bdec73d760815edcfc743b" translate="yes" xml:space="preserve">
          <source>User's current working directory</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f08fe0bf6dfaf09e97a0137919cb4dbb30048d83" translate="yes" xml:space="preserve">
          <source>User's home directory</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83bfcc04a4ce5af2d24c0f0c96dfadfd09827d2f" translate="yes" xml:space="preserve">
          <source>User-defined attributes may be used in some implementations to store security related attributes so consequently, in the case of the default provider at least, all methods that access user-defined attributes require the &lt;code&gt;RuntimePermission(&quot;accessUserDefinedAttributes&quot;)&lt;/code&gt; permission when a security manager is installed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e9637ae33200dcc5fa5f6b41e9ef43ad52150de" translate="yes" xml:space="preserve">
          <source>User-defined connector protocols are also possible using the &lt;a href=&quot;jmxconnectorfactory&quot;&gt;&lt;code&gt;JMXConnectorFactory&lt;/code&gt;&lt;/a&gt; and, optionally, the Generic Connector (not part of this bundle, see note below).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c3c973c116f6d5e4da4352238faa225b96d3186" translate="yes" xml:space="preserve">
          <source>UserDefinedFileAttributeView</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75c1e2e5fde85912139123bc71055893c3297dd0" translate="yes" xml:space="preserve">
          <source>UserDefinedFileAttributeView.delete()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87722629291ad85412459bfbe644ff495ee7b637" translate="yes" xml:space="preserve">
          <source>UserDefinedFileAttributeView.list()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62c0a0413d5bbc8976220551e62b4bf76b5bf134" translate="yes" xml:space="preserve">
          <source>UserDefinedFileAttributeView.name()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ede0f4e2d26cc8160d5a5b9ee9e48cdd492a4a61" translate="yes" xml:space="preserve">
          <source>UserDefinedFileAttributeView.read()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b82bc93beb601ec3d909b3fde3886b3de7e943a" translate="yes" xml:space="preserve">
          <source>UserDefinedFileAttributeView.size()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c687ec99c49ea7a32167b8b12adf178757f27308" translate="yes" xml:space="preserve">
          <source>UserDefinedFileAttributeView.write()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="844ea263d61d5ed56fa1bc82cd753b1747ffb55f" translate="yes" xml:space="preserve">
          <source>UserPrincipal</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd0a60b59c4da806a482b55818c755e501c7ac80" translate="yes" xml:space="preserve">
          <source>UserPrincipalLookupService</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0840bba6e112c75ffe66ac30f47b21f2ee1d493" translate="yes" xml:space="preserve">
          <source>UserPrincipalLookupService.lookupPrincipalByGroupName()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7825f199743bc5d242aca386612daca76570320" translate="yes" xml:space="preserve">
          <source>UserPrincipalLookupService.lookupPrincipalByName()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72784aa1f92c2222c84e34f40fd34df125ee6eac" translate="yes" xml:space="preserve">
          <source>UserPrincipalNotFoundException</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e69ec342d5b6b3b0a3b5d7fba11c87298a3efe00" translate="yes" xml:space="preserve">
          <source>UserPrincipalNotFoundException.getName()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef3a21a074fb301ebae0e1829dfb7404033b1c4f" translate="yes" xml:space="preserve">
          <source>Users can supersede the Java runtime currency data by means of the system property &lt;code&gt;java.util.currency.data&lt;/code&gt;. If this system property is defined then its value is the location of a properties file, the contents of which are key/value pairs of the ISO 3166 country codes and the ISO 4217 currency data respectively. The value part consists of three ISO 4217 values of a currency, i.e., an alphabetic code, a numeric code, and a minor unit. Those three ISO 4217 values are separated by commas. The lines which start with '#'s are considered comment lines. An optional UTC timestamp may be specified per currency entry if users need to specify a cutover date indicating when the new data comes into effect. The timestamp is appended to the end of the currency properties and uses a comma as a separator. If a UTC datestamp is present and valid, the JRE will only use the new currency properties if the current UTC date is later than the date specified at class loading time. The format of the timestamp must be of ISO 8601 format : &lt;code&gt;'yyyy-MM-dd'T'HH:mm:ss'&lt;/code&gt;. For example,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1df4da318d284bc20c5958d27a7ed3c38f4602e0" translate="yes" xml:space="preserve">
          <source>Users of this API are typically developers who produce client library implementations for connection-based protocols, such as LDAPv3 and IMAPv4, and developers who write servers (such as LDAP servers and IMAP servers). Developers who write client libraries use the &lt;code&gt;SaslClient&lt;/code&gt; and &lt;code&gt;SaslClientFactory&lt;/code&gt; interfaces. Developers who write servers use the &lt;code&gt;SaslServer&lt;/code&gt; and &lt;code&gt;SaslServerFactory&lt;/code&gt; interfaces. Among these two groups of users, each can be further divided into two groups: those who &lt;em&gt;produce&lt;/em&gt; the SASL mechanisms and those who &lt;em&gt;use&lt;/em&gt; the SASL mechanisms. The producers of SASL mechanisms need to provide implementations for these interfaces, while users of the SASL mechanisms use the APIs in this package to access those implementations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80e2698a6181fd45859666c8ffd995432dc96215" translate="yes" xml:space="preserve">
          <source>Users of this class should typically ignore this method as it exists primarily to fulfill the &lt;a href=&quot;chrono/chronolocaldate&quot;&gt;&lt;code&gt;ChronoLocalDate&lt;/code&gt;&lt;/a&gt; contract where it is necessary to support the Japanese calendar system.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55237b8c76ad7910ea782ad8f36738173524ed31" translate="yes" xml:space="preserve">
          <source>Users should cast the generic URLConnection to a JarURLConnection when they know that the URL they created is a JAR URL, and they need JAR-specific functionality. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0c0b2a27dd7e100ff6ef46e8af9a1980c698565" translate="yes" xml:space="preserve">
          <source>Users wishing to indicate DSA-specific parameters, and to generate a key pair suitable for use with the DSA algorithm typically</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b82d0f919502b65991bb0495ebd8b2328c7d544" translate="yes" xml:space="preserve">
          <source>Uses &quot;The Base64 Alphabet&quot; as specified in Table 1 of RFC 4648 and RFC 2045 for encoding and decoding operation. The encoder does not add any line feed (line separator) character. The decoder rejects data that contains characters outside the base64 alphabet.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe96d26de32e8c1c5fd883226f3db667abb4bc03" translate="yes" xml:space="preserve">
          <source>Uses the &quot;The Base64 Alphabet&quot; as specified in Table 1 of RFC 2045 for encoding and decoding operation. The encoded output must be represented in lines of no more than 76 characters each and uses a carriage return &lt;code&gt;'\r'&lt;/code&gt; followed immediately by a linefeed &lt;code&gt;'\n'&lt;/code&gt; as the line separator. No line separator is added to the end of the encoded output. All line separators or other characters not found in the base64 alphabet table are ignored in decoding operation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e846d675917cc6469bee8f9dc213b99e034fe6a3" translate="yes" xml:space="preserve">
          <source>Uses the &quot;URL and Filename safe Base64 Alphabet&quot; as specified in Table 2 of RFC 4648 for encoding and decoding. The encoder does not add any line feed (line separator) character. The decoder rejects data that contains characters outside the base64 alphabet.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eeb3e5ae3000cb4861d44998612cf82f924af575" translate="yes" xml:space="preserve">
          <source>Uses the &lt;code&gt;Bindings&lt;/code&gt; returned by the abstract &lt;code&gt;getGlobalScope&lt;/code&gt; method as its &lt;code&gt;GLOBAL_SCOPE&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="203a61b07904d7718cd7b7494af32f4c4b35209c" translate="yes" xml:space="preserve">
          <source>Uses the Reader and Writer in the default &lt;code&gt;ScriptContext&lt;/code&gt; of this &lt;code&gt;ScriptEngine&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a0d6510b882760c1b04dcd907ebc56b88379148" translate="yes" xml:space="preserve">
          <source>Uses the constructor represented by this &lt;code&gt;Constructor&lt;/code&gt; object to create and initialize a new instance of the constructor's declaring class, with the specified initialization parameters. Individual parameters are automatically unwrapped to match primitive formal parameters, and both primitive and reference parameters are subject to method invocation conversions as necessary.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f41e59de5853a92bc45b401931704f5e09f91c3" translate="yes" xml:space="preserve">
          <source>Uses the specified &lt;code&gt;Bindings&lt;/code&gt; for its &lt;code&gt;ENGINE_SCOPE&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83f38d3c8cc1ce56571de5c1baaa761dd5a6add7" translate="yes" xml:space="preserve">
          <source>Using &lt;a href=&quot;locale.builder&quot;&gt;&lt;code&gt;Locale.Builder&lt;/code&gt;&lt;/a&gt; you can construct a &lt;code&gt;Locale&lt;/code&gt; object that conforms to BCP 47 syntax.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0f0960e30bde99a78aafef52a13eb97be34b2c7" translate="yes" xml:space="preserve">
          <source>Using Attributes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61bb96cb5e546c8e0aa0c7dc6bedc057616e82ef" translate="yes" xml:space="preserve">
          <source>Using LocalDate instead</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f4876bf7e5a097482233fd92f0351b417125b82" translate="yes" xml:space="preserve">
          <source>Using an MBean proxy is just a convenience. The second example ends up calling the same &lt;code&gt;MBeanServer&lt;/code&gt; operations as the first one.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e8df2fe46b9e932e0db3592537261df3f03821d" translate="yes" xml:space="preserve">
          <source>Using an MXBean proxy is a convenience remote access to a platform MXBean of a running virtual machine. All method calls to the MXBean proxy are forwarded to an &lt;code&gt;MBeanServerConnection&lt;/code&gt; where &lt;a href=&quot;../../io/ioexception&quot;&gt;&lt;code&gt;IOException&lt;/code&gt;&lt;/a&gt; may be thrown when the communication problem occurs with the connector server. An application remotely accesses the platform MXBeans using proxy should prepare to catch &lt;code&gt;IOException&lt;/code&gt; as if accessing with the &lt;code&gt;MBeanServerConnector&lt;/code&gt; interface.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7e9c4e0ef646900c9d37259efe42bb9d6a54acf" translate="yes" xml:space="preserve">
          <source>Using anchoring bounds, the boundaries of this matcher's region match anchors such as ^ and $.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cdd78d1f86e78fec3ea599004d8fad8c76d9d7da" translate="yes" xml:space="preserve">
          <source>Using factory methods in the &lt;a href=&quot;methodhandles.lookup&quot;&gt;&lt;code&gt;Lookup&lt;/code&gt;&lt;/a&gt; API, any class member represented by a Core Reflection API object can be converted to a behaviorally equivalent method handle. For example, a reflective &lt;a href=&quot;../reflect/method&quot;&gt;&lt;code&gt;Method&lt;/code&gt;&lt;/a&gt; can be converted to a method handle using &lt;a href=&quot;methodhandles.lookup#unreflect-java.lang.reflect.Method-&quot;&gt;&lt;code&gt;Lookup.unreflect&lt;/code&gt;&lt;/a&gt;. The resulting method handles generally provide more direct and efficient access to the underlying class members.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21c8ad4b3f87d2f794dcde2cdb625766302c4526" translate="yes" xml:space="preserve">
          <source>Using lenient resolution will resolve the values in an appropriate lenient manner. Individual fields will interpret this differently.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8561c3ec91d9448080b4d951ea48a4072c5c1776" translate="yes" xml:space="preserve">
          <source>Using localized styles, such as &lt;code&gt;long&lt;/code&gt; or &lt;code&gt;medium&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="253df803fe00960ddb3b3a9f6c13edaaab2b99da" translate="yes" xml:space="preserve">
          <source>Using modes such as &lt;code&gt;CFB&lt;/code&gt; and &lt;code&gt;OFB&lt;/code&gt;, block ciphers can encrypt data in units smaller than the cipher's actual block size. When requesting such a mode, you may optionally specify the number of bits to be processed at a time by appending this number to the mode name as shown in the &quot;&lt;code&gt;DES/CFB8/NoPadding&lt;/code&gt;&quot; and &quot;&lt;code&gt;DES/OFB32/PKCS5Padding&lt;/code&gt;&quot; transformations. If no such number is specified, a provider-specific default is used. (For example, the SunJCE provider uses a default of 64 bits for DES.) Thus, block ciphers can be turned into byte-oriented stream ciphers by using an 8 bit mode such as CFB8 or OFB8.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9deca9aeafc463fa6ca2b88d4ccb83b12d7abad" translate="yes" xml:space="preserve">
          <source>Using non-ISO calendar systems in an application introduces significant extra complexity. Ensure that the warnings and recommendations in &lt;code&gt;ChronoLocalDate&lt;/code&gt; have been read before working with the &quot;chrono&quot; interfaces.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="573cc26e7099971b8835749f74d2d06635f24f52" translate="yes" xml:space="preserve">
          <source>Using opaque bounds, the boundaries of this matcher's region are opaque to lookahead, lookbehind, and boundary matching constructs that may try to see beyond them. Those constructs cannot look past the boundaries so they will fail to match anything outside of the region.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89b2e216c005cff81225b83bc0d9df94e32fec36" translate="yes" xml:space="preserve">
          <source>Using pattern letters, such as &lt;code&gt;uuuu-MMM-dd&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="180c277dc63d51c2b6b593d31797e5272463d61c" translate="yes" xml:space="preserve">
          <source>Using predefined constants, such as &lt;a href=&quot;datetimeformatter#ISO_LOCAL_DATE&quot;&gt;&lt;code&gt;ISO_LOCAL_DATE&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5b75e2ea752e51b08714485a1e1d68bf8a4a87c" translate="yes" xml:space="preserve">
          <source>Using smart resolution will perform the sensible default for each field, which may be the same as strict, the same as lenient, or a third behavior. Individual fields will interpret this differently.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6198983076e23d70c804f77c8fd2cd98922f7d2c" translate="yes" xml:space="preserve">
          <source>Using strict resolution will ensure that all parsed values are within the outer range of valid values for the field. Individual fields may be further processed for strictness.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ddc6d587f01bd48a87c73ce65a0e9221289aaef1" translate="yes" xml:space="preserve">
          <source>Using the API</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="470a33ba31755e72cbf379c38bb36ff96909a02c" translate="yes" xml:space="preserve">
          <source>Using the public constructor &lt;a href=&quot;standardmbean#StandardMBean-T-java.lang.Class-boolean-&quot;&gt;&lt;code&gt;StandardMBean(impl,interface)&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f08caaea9a88beb7acb495f252c735a1315d1558" translate="yes" xml:space="preserve">
          <source>Using the search filter, it is possible to register interest in objects that do not exist at the time of registration but later come into existence and satisfy the filter. However, there might be limitations in the extent to which this can be supported by the service provider and underlying protocol/service. If the caller submits a filter that cannot be supported in this way, &lt;code&gt;addNamingListener()&lt;/code&gt; throws an &lt;code&gt;InvalidSearchFilterException&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d02b33bcdb59e58d97f9f0dd3b6bd6bee21849ee" translate="yes" xml:space="preserve">
          <source>Using this class, an MBean can be created with any implementation class name</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a808472e5512ec6ec52bb2234c76dc0b1a3686b" translate="yes" xml:space="preserve">
          <source>Using this method allows the use of an alternate clock for testing. The alternate clock may be introduced using &lt;a href=&quot;clock&quot;&gt;&lt;code&gt;dependency injection&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3a4d576735b547cb796fe2ec8f648e82476869f" translate="yes" xml:space="preserve">
          <source>Using this method hard codes a dependency to the default time-zone into your application. It is recommended to avoid this and use a specific time-zone whenever possible. The &lt;a href=&quot;clock#systemUTC--&quot;&gt;&lt;code&gt;UTC clock&lt;/code&gt;&lt;/a&gt; should be used when you need the current instant without the date or time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31bb653f87c7adcd93896a64f57477f9258c49cf" translate="yes" xml:space="preserve">
          <source>Using this method will prevent the ability to use an alternate clock for testing because the clock is hard-coded.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6be570ec8df9f33a39b137ee90edbcc72d040b1" translate="yes" xml:space="preserve">
          <source>Using this method will prevent the ability to use an alternate time-source for testing because the clock is effectively hard-coded.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5fa35aa83a3e27a4f265dd3dbcf5ef46556b0bc" translate="yes" xml:space="preserve">
          <source>Using transparent bounds, the boundaries of this matcher's region are transparent to lookahead, lookbehind, and boundary matching constructs. Those constructs can see beyond the boundaries of the region to see if a match is appropriate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f20dec6afa5973f6ff91629936c1d90192d0e756" translate="yes" xml:space="preserve">
          <source>Usually the &lt;code&gt;MBeanInfo&lt;/code&gt; for any given MBean does not change over the lifetime of that MBean. Dynamic MBeans can change their &lt;code&gt;MBeanInfo&lt;/code&gt; and in that case it is recommended that they emit a &lt;a href=&quot;notification&quot;&gt;&lt;code&gt;Notification&lt;/code&gt;&lt;/a&gt; with a &lt;a href=&quot;notification#getType--&quot;&gt;type&lt;/a&gt; of &lt;code&gt;&quot;jmx.mbean.info.changed&quot;&lt;/code&gt; and a &lt;a href=&quot;notification#getUserData--&quot;&gt;userData&lt;/a&gt; that is the new &lt;code&gt;MBeanInfo&lt;/code&gt;. This is not required, but provides a conventional way for clients of the MBean to discover the change. See also the &lt;a href=&quot;descriptor#immutableInfo&quot;&gt;immutableInfo&lt;/a&gt; and &lt;a href=&quot;descriptor#infoTimeout&quot;&gt;infoTimeout&lt;/a&gt; fields in the &lt;code&gt;MBeanInfo&lt;/code&gt;&lt;a href=&quot;descriptor&quot;&gt;&lt;code&gt;Descriptor&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68f7a180713ce8afdb949d8125a6751d3c88beb9" translate="yes" xml:space="preserve">
          <source>Usually the returned receiver implements the &lt;code&gt;MidiDeviceReceiver&lt;/code&gt; interface.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="789cbfd196e194af95ef3eaa77e73aee1e7b80ac" translate="yes" xml:space="preserve">
          <source>Usually the returned receivers implement the &lt;code&gt;MidiDeviceReceiver&lt;/code&gt; interface.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b10eacb0417247e0044aaa6541784c7e9d437b58" translate="yes" xml:space="preserve">
          <source>Usually the returned transmitter implements the &lt;code&gt;MidiDeviceTransmitter&lt;/code&gt; interface.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb55df489e19ba6c63d7efc57af80457bae2b5b8" translate="yes" xml:space="preserve">
          <source>Usually the returned transmitters implement the &lt;code&gt;MidiDeviceTransmitter&lt;/code&gt; interface.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4911d951b010a523017f11a6f4b45a3909cacb1" translate="yes" xml:space="preserve">
          <source>Utilities to assist in the processing of &lt;a href=&quot;../element/package-summary&quot;&gt;program elements&lt;/a&gt; and &lt;a href=&quot;../type/package-summary&quot;&gt;types&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="882ce0fc43a4a5fd7771c00aecc3ba0eae4aba7d" translate="yes" xml:space="preserve">
          <source>Utilities to assist in the processing of &lt;a href=&quot;javax/lang/model/element/package-summary&quot;&gt;program elements&lt;/a&gt; and &lt;a href=&quot;javax/lang/model/type/package-summary&quot;&gt;types&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02db94e534b83ec7229aaeff4260db775b80b9cc" translate="yes" xml:space="preserve">
          <source>Utility class for HTML form decoding.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="848c4fb8e6852707e9fde48a3c974a3374e7a94b" translate="yes" xml:space="preserve">
          <source>Utility class for HTML form decoding. This class contains static methods for decoding a String from the &lt;code&gt;application/x-www-form-urlencoded&lt;/code&gt; MIME format.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af38bffe9fcf259b3eac7b750d631dec758ac335" translate="yes" xml:space="preserve">
          <source>Utility class for HTML form encoding.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="986013cdc6d3bf10c305a2fdd0111a4416bc77fb" translate="yes" xml:space="preserve">
          <source>Utility class for HTML form encoding. This class contains static methods for converting a String to the &lt;code&gt;application/x-www-form-urlencoded&lt;/code&gt; MIME format. For more information about HTML form encoding, consult the HTML &lt;a href=&quot;http://www.w3.org/TR/html4/&quot;&gt;specification&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3aba945a13d442e425e9e27d6041638c7daf11b0" translate="yes" xml:space="preserve">
          <source>Utility class for assembling &lt;a href=&quot;completion&quot;&gt;&lt;code&gt;Completion&lt;/code&gt;&lt;/a&gt; objects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c19cabcb8ecdeecd309eb769b904b564909ae4af" translate="yes" xml:space="preserve">
          <source>Utility classes commonly useful in concurrent programming.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="150201240396f25f2027d06e54168dd5d56c91ac" translate="yes" xml:space="preserve">
          <source>Utility classes commonly useful in concurrent programming. This package includes a few small standardized extensible frameworks, as well as some classes that provide useful functionality and are otherwise tedious or difficult to implement. Here are brief descriptions of the main components. See also the &lt;a href=&quot;locks/package-summary&quot;&gt;&lt;code&gt;java.util.concurrent.locks&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;atomic/package-summary&quot;&gt;&lt;code&gt;java.util.concurrent.atomic&lt;/code&gt;&lt;/a&gt; packages.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4a20e688682bb57c03b92d2e7bc4b96cf592350" translate="yes" xml:space="preserve">
          <source>Utility method to take a string and convert it to normal Java variable name capitalization. This normally means converting the first character from upper case to lower case, but in the (unusual) special case when there is more than one character and both the first and second characters are upper case, we leave it alone.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4039a70b4f66be59f948f701ccca4acd0d600a89" translate="yes" xml:space="preserve">
          <source>Utility methods for channel/stream interoperation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ecf914fbb7e16dd5de3b9a0d9f504decd7f14ae" translate="yes" xml:space="preserve">
          <source>Utility methods for channels and streams.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fb1f45c6150808d936b7f266e71159e6eadc817" translate="yes" xml:space="preserve">
          <source>Utility methods for operating on program elements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3d9292727ed2274f7e9069b9313b2e96d6b4dba" translate="yes" xml:space="preserve">
          <source>Utility methods for operating on types.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c56934a7ced54ed4879908d9eef6fbbb0c4707f" translate="yes" xml:space="preserve">
          <source>Utility routine to check if the InetAddress in a wildcard address.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a88521b4a21f2837191f0b42796a4121d3b06ea9" translate="yes" xml:space="preserve">
          <source>Utility routine to check if the InetAddress is a loopback address.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="878ef4949a7b2ec66decef15b233290039b77ce9" translate="yes" xml:space="preserve">
          <source>Utility routine to check if the InetAddress is a site local address.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7790450524b92406933cd07a695833b7f3e03f67" translate="yes" xml:space="preserve">
          <source>Utility routine to check if the InetAddress is an IP multicast address.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c31e0899027339bafedd9a20edbdf0cfaf92919e" translate="yes" xml:space="preserve">
          <source>Utility routine to check if the InetAddress is an IP multicast address. 11111111 at the start of the address identifies the address as being a multicast address.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9e85ab48394f76e30601e94ed4d8f6942eef434" translate="yes" xml:space="preserve">
          <source>Utility routine to check if the InetAddress is an IP multicast address. IP multicast address is a Class D address i.e first four bits of the address are 1110.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="418cc6de9aee88107262571202aa30a7ba1a70c0" translate="yes" xml:space="preserve">
          <source>Utility routine to check if the InetAddress is an IPv4 compatible IPv6 address.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ad8697321f8dc75e97fa0bad9e9ddbc6a5ff062" translate="yes" xml:space="preserve">
          <source>Utility routine to check if the InetAddress is an link local address.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="207c581cc5bc638f2e641c970a8b71fc2719a9ee" translate="yes" xml:space="preserve">
          <source>Utility routine to check if the multicast address has global scope.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62a011b9d1c58dd9f13566a36fe7f89ebaa87f64" translate="yes" xml:space="preserve">
          <source>Utility routine to check if the multicast address has link scope.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf6b4a1745f399fc8996275918604d42965ccf98" translate="yes" xml:space="preserve">
          <source>Utility routine to check if the multicast address has node scope.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21d809b85fe3cc0cc40e32073585545c3c44438a" translate="yes" xml:space="preserve">
          <source>Utility routine to check if the multicast address has organization scope.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbe316ec3a5a8e5921cb3dc299909d7749fb9a65" translate="yes" xml:space="preserve">
          <source>Utility routine to check if the multicast address has site scope.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9ee5681d3c59f7541c27a38b67edf46259e187b" translate="yes" xml:space="preserve">
          <source>V</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dfb322a8d1ad4f0eefce4d875c8962a14a1a772a" translate="yes" xml:space="preserve">
          <source>VAI</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d48af9e8160bc55894f4a22d03f76854c28160a0" translate="yes" xml:space="preserve">
          <source>VALUE_ARBITRARY</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02193e400f5ca5c79a157c915bfe1562a8b13520" translate="yes" xml:space="preserve">
          <source>VALUE_ENUMERATION</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36dedc52d4e56ec75ef781c18979e8551bf2bd08" translate="yes" xml:space="preserve">
          <source>VALUE_LIST</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8dc7d6a10b628095cf884b19e56fd1ff92295324" translate="yes" xml:space="preserve">
          <source>VALUE_NONE</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e5d8e899b551fa0b3a07bd0131412f7268fd43a" translate="yes" xml:space="preserve">
          <source>VALUE_RANGE</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0897f78c46e1e0fc7cd15dac18b43864b50602b4" translate="yes" xml:space="preserve">
          <source>VALUE_RANGE_MAX_INCLUSIVE</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a4f0a610c8f611649a7edcbef09ceab33953d6c" translate="yes" xml:space="preserve">
          <source>VALUE_RANGE_MAX_INCLUSIVE_MASK</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c6075a651e8185da9fd05ca0c5e0080fca56e43" translate="yes" xml:space="preserve">
          <source>VALUE_RANGE_MIN_INCLUSIVE</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0848cb621c310e76951c2297ffd1be8b9c15227f" translate="yes" xml:space="preserve">
          <source>VALUE_RANGE_MIN_INCLUSIVE_MASK</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ede89ebb53679f542146540f04aa83ecc283a84" translate="yes" xml:space="preserve">
          <source>VALUE_RANGE_MIN_MAX_INCLUSIVE</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8cb78f25726ea5b5c40a3361803dc6db1aab508c" translate="yes" xml:space="preserve">
          <source>VARIATION_SELECTORS</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63c68e0bbeebbf5a11cfac51fc70ce9ca6f5c2c1" translate="yes" xml:space="preserve">
          <source>VARIATION_SELECTORS_SUPPLEMENT</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31420d2d7ac2e56cf715e5d48766513036b5f8d0" translate="yes" xml:space="preserve">
          <source>VEDIC_EXTENSIONS</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af5d1b291aa8b710775487860c09c6ea29ddfcca" translate="yes" xml:space="preserve">
          <source>VERIFY</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a2fa5f3b8d5732b14086db74543e53e8e8444b0" translate="yes" xml:space="preserve">
          <source>VERTICAL_FORMS</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ded0ec81979b3df0d442797af13a37bd2f58b39f" translate="yes" xml:space="preserve">
          <source>VOID</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0151e9476213c9bc158ba6c4e50c8b0d3571e3ea" translate="yes" xml:space="preserve">
          <source>VOLATILE</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de4f1aab58091db3e6fcebdda92e296c5013d16e" translate="yes" xml:space="preserve">
          <source>VOLUME</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db8cdf182c68cc1311820441487faf7eebd835e5" translate="yes" xml:space="preserve">
          <source>VST - Asia/Ho_Chi_Minh</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="093168b5c51de47bd34b86ff28288df00c77d22d" translate="yes" xml:space="preserve">
          <source>V[t] = gauge[t] - gauge[t-GP]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1ad1a52c935fb7ba200fd734eab6bac190f19c8" translate="yes" xml:space="preserve">
          <source>Valid for Multicast: DatagramSocketImpl</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c4316849b9f2b11fc8ea0bcd643ddc95f13dbdd" translate="yes" xml:space="preserve">
          <source>Valid for TCP only: SocketImpl.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a668c34c13ec2dfa5189daf3ee572e37b86e6268" translate="yes" xml:space="preserve">
          <source>Valid for all sockets: SocketImpl, DatagramSocketImpl</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ab8aadf229d20a44db436c82d52a25b2be7d43b" translate="yes" xml:space="preserve">
          <source>Valid for: DatagramSocketImpl</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6d78d22d09f517184ce9f674f1ba1019ac1a7e5" translate="yes" xml:space="preserve">
          <source>Valid for: SocketImpl, DatagramSocketImpl</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6289e0f82c081e5a0561a18f9e924a563567383" translate="yes" xml:space="preserve">
          <source>Valid only for TCP: SocketImpl</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9e59b4af7b3bf24e5dc6776168e74b513618102" translate="yes" xml:space="preserve">
          <source>Validates the object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44247bf147f34a2ae6cb2803b817ec010dfeea31" translate="yes" xml:space="preserve">
          <source>Validates the specified certification path using the specified algorithm parameter set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b149e174d2a60077c236107f7554f91d45f634b5" translate="yes" xml:space="preserve">
          <source>Valuable data should not be stored at this node as it is shared by all programs that use it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8dce170de238b1feda2ecd9674ea3ca0d068fbcb" translate="yes" xml:space="preserve">
          <source>Value</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4414566b81dbfc57107836310965df59471f036f" translate="yes" xml:space="preserve">
          <source>Value - a numeric value</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6bdec823b4e0290aa5596ea76e29ee6027f17c5" translate="yes" xml:space="preserve">
          <source>Value of any other type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cde4299ff7d89e07903e80c987b35ab7db2b68df" translate="yes" xml:space="preserve">
          <source>Value of the &lt;a href=&quot;calendar#AM_PM&quot;&gt;&lt;code&gt;AM_PM&lt;/code&gt;&lt;/a&gt; field indicating the period of the day from midnight to just before noon.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="715c0bb373192b7218aa7b1b6d2c86d6a6450250" translate="yes" xml:space="preserve">
          <source>Value of the &lt;a href=&quot;calendar#AM_PM&quot;&gt;&lt;code&gt;AM_PM&lt;/code&gt;&lt;/a&gt; field indicating the period of the day from noon to just before midnight.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4cf9e825efdc9fd139bce417ca2c2e3c1be69bc0" translate="yes" xml:space="preserve">
          <source>Value of the &lt;a href=&quot;calendar#DAY_OF_WEEK&quot;&gt;&lt;code&gt;DAY_OF_WEEK&lt;/code&gt;&lt;/a&gt; field indicating Friday.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c9343347a4f0312b1c951a3963a485070c28be6" translate="yes" xml:space="preserve">
          <source>Value of the &lt;a href=&quot;calendar#DAY_OF_WEEK&quot;&gt;&lt;code&gt;DAY_OF_WEEK&lt;/code&gt;&lt;/a&gt; field indicating Monday.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="846f3da204f207d2400c29e20aafa0405114dbb1" translate="yes" xml:space="preserve">
          <source>Value of the &lt;a href=&quot;calendar#DAY_OF_WEEK&quot;&gt;&lt;code&gt;DAY_OF_WEEK&lt;/code&gt;&lt;/a&gt; field indicating Saturday.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a9b74907fbd2985aeaa3ad1170f43113f6528ff" translate="yes" xml:space="preserve">
          <source>Value of the &lt;a href=&quot;calendar#DAY_OF_WEEK&quot;&gt;&lt;code&gt;DAY_OF_WEEK&lt;/code&gt;&lt;/a&gt; field indicating Sunday.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee70a770a2e2bb425fcfa57e8a65c8f2db0f4dc0" translate="yes" xml:space="preserve">
          <source>Value of the &lt;a href=&quot;calendar#DAY_OF_WEEK&quot;&gt;&lt;code&gt;DAY_OF_WEEK&lt;/code&gt;&lt;/a&gt; field indicating Thursday.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd05913b8fd06496b815d7acea6cc4d6f6993c0a" translate="yes" xml:space="preserve">
          <source>Value of the &lt;a href=&quot;calendar#DAY_OF_WEEK&quot;&gt;&lt;code&gt;DAY_OF_WEEK&lt;/code&gt;&lt;/a&gt; field indicating Tuesday.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="176967c64c29b6dfba689272c3bbaec416c7624a" translate="yes" xml:space="preserve">
          <source>Value of the &lt;a href=&quot;calendar#DAY_OF_WEEK&quot;&gt;&lt;code&gt;DAY_OF_WEEK&lt;/code&gt;&lt;/a&gt; field indicating Wednesday.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2075b5d1f6df50683e460e27dff3fa4d3c41098e" translate="yes" xml:space="preserve">
          <source>Value of the &lt;a href=&quot;calendar#MONTH&quot;&gt;&lt;code&gt;MONTH&lt;/code&gt;&lt;/a&gt; field indicating the eighth month of the year in the Gregorian and Julian calendars.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f3edd6d0a7998e7e31c021bca1a95d46f50df69" translate="yes" xml:space="preserve">
          <source>Value of the &lt;a href=&quot;calendar#MONTH&quot;&gt;&lt;code&gt;MONTH&lt;/code&gt;&lt;/a&gt; field indicating the eleventh month of the year in the Gregorian and Julian calendars.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="891537e526e08f0fdff78f64ea14fac4fa89abd7" translate="yes" xml:space="preserve">
          <source>Value of the &lt;a href=&quot;calendar#MONTH&quot;&gt;&lt;code&gt;MONTH&lt;/code&gt;&lt;/a&gt; field indicating the fifth month of the year in the Gregorian and Julian calendars.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5bc019e9a7fdf00a6c4733b39cc05a0f101f0edf" translate="yes" xml:space="preserve">
          <source>Value of the &lt;a href=&quot;calendar#MONTH&quot;&gt;&lt;code&gt;MONTH&lt;/code&gt;&lt;/a&gt; field indicating the first month of the year in the Gregorian and Julian calendars.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7b1708a4f8e80abc492842cd1b80d9e78b5be58" translate="yes" xml:space="preserve">
          <source>Value of the &lt;a href=&quot;calendar#MONTH&quot;&gt;&lt;code&gt;MONTH&lt;/code&gt;&lt;/a&gt; field indicating the fourth month of the year in the Gregorian and Julian calendars.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d520c15f5123940148e92850f989d06da2138dd" translate="yes" xml:space="preserve">
          <source>Value of the &lt;a href=&quot;calendar#MONTH&quot;&gt;&lt;code&gt;MONTH&lt;/code&gt;&lt;/a&gt; field indicating the ninth month of the year in the Gregorian and Julian calendars.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a80e4f7e50e8aca7d19265fbb78baaed52a8374e" translate="yes" xml:space="preserve">
          <source>Value of the &lt;a href=&quot;calendar#MONTH&quot;&gt;&lt;code&gt;MONTH&lt;/code&gt;&lt;/a&gt; field indicating the second month of the year in the Gregorian and Julian calendars.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6545dce48c0fd96093d0b726bd3e51995f805b7" translate="yes" xml:space="preserve">
          <source>Value of the &lt;a href=&quot;calendar#MONTH&quot;&gt;&lt;code&gt;MONTH&lt;/code&gt;&lt;/a&gt; field indicating the seventh month of the year in the Gregorian and Julian calendars.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="990234242ddb126a5ab59dab12d0490a60376159" translate="yes" xml:space="preserve">
          <source>Value of the &lt;a href=&quot;calendar#MONTH&quot;&gt;&lt;code&gt;MONTH&lt;/code&gt;&lt;/a&gt; field indicating the sixth month of the year in the Gregorian and Julian calendars.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2ac6418cd1f46544ec73525d1bb04d7093d35bd" translate="yes" xml:space="preserve">
          <source>Value of the &lt;a href=&quot;calendar#MONTH&quot;&gt;&lt;code&gt;MONTH&lt;/code&gt;&lt;/a&gt; field indicating the tenth month of the year in the Gregorian and Julian calendars.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48a24dbb75ad193ea656d20f9ec93c9bfb79d78e" translate="yes" xml:space="preserve">
          <source>Value of the &lt;a href=&quot;calendar#MONTH&quot;&gt;&lt;code&gt;MONTH&lt;/code&gt;&lt;/a&gt; field indicating the third month of the year in the Gregorian and Julian calendars.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a5cda39c200532d6a73126f81cb588fbf0b25dc" translate="yes" xml:space="preserve">
          <source>Value of the &lt;a href=&quot;calendar#MONTH&quot;&gt;&lt;code&gt;MONTH&lt;/code&gt;&lt;/a&gt; field indicating the thirteenth month of the year. Although &lt;code&gt;GregorianCalendar&lt;/code&gt; does not use this value, lunar calendars do.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d879fd4dd852eb60b2342a119b9d64de7379007" translate="yes" xml:space="preserve">
          <source>Value of the &lt;a href=&quot;calendar#MONTH&quot;&gt;&lt;code&gt;MONTH&lt;/code&gt;&lt;/a&gt; field indicating the twelfth month of the year in the Gregorian and Julian calendars.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb461a50a2173917aa1a5dacc36f02d2337af2a2" translate="yes" xml:space="preserve">
          <source>Value of the &lt;code&gt;ERA&lt;/code&gt; field indicating the common era (Anno Domini), also known as CE. The sequence of years at the transition from &lt;code&gt;BC&lt;/code&gt; to &lt;code&gt;AD&lt;/code&gt; is ..., 2 BC, 1 BC, 1 AD, 2 AD,...</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a39e77d9de2612d4759514c7c07af02d7b79d62e" translate="yes" xml:space="preserve">
          <source>Value of the &lt;code&gt;ERA&lt;/code&gt; field indicating the period before the common era (before Christ), also known as BCE. The sequence of years at the transition from &lt;code&gt;BC&lt;/code&gt; to &lt;code&gt;AD&lt;/code&gt; is ..., 2 BC, 1 BC, 1 AD, 2 AD,...</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8f4a2483a003460cea19aa00941b7cfd297b432" translate="yes" xml:space="preserve">
          <source>Value to indicate units of dots per centimeter (dpcm). It is actually the conversion factor by which to multiply dpcm to yield dphi (254).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8925eab8a38c0c9e19a927aecaf8802925a57a8a" translate="yes" xml:space="preserve">
          <source>Value to indicate units of dots per inch (dpi). It is actually the conversion factor by which to multiply dpi to yield dphi (100).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c64a5c35951035b3173e6278b55180398b5940f" translate="yes" xml:space="preserve">
          <source>Value to indicate units of inches (in). It is actually the conversion factor by which to multiply inches to yield &amp;micro;m (25400).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbe8bf92f762466a7fef45cb5bda5ab6c94f4056" translate="yes" xml:space="preserve">
          <source>Value to indicate units of millimeters (mm). It is actually the conversion factor by which to multiply mm to yield &amp;micro;m (1000).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a956485e60c24642bdc24465480775891fba80d6" translate="yes" xml:space="preserve">
          <source>Value type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="071fede910bf59e6b41a2f9c9067d73cf445acf2" translate="yes" xml:space="preserve">
          <source>ValueExp</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc3e52e7f27fe5909bb774bfc7f471257661a5c4" translate="yes" xml:space="preserve">
          <source>ValueExp.apply()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27ca03cbdecad0c0e559b663e26553642410c786" translate="yes" xml:space="preserve">
          <source>ValueExp.setMBeanServer()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4278bab4a5de6b4327ee3ff9ca6695a4a2e61323" translate="yes" xml:space="preserve">
          <source>ValueRange</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f63ac73737085013a4edaeaba8eaaf69963a4708" translate="yes" xml:space="preserve">
          <source>ValueRange.checkValidIntValue()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f77b138341e5a89beac837e971faba8dc1ab96b2" translate="yes" xml:space="preserve">
          <source>ValueRange.checkValidValue()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="405a0b914edddb2bcb6932414bec07cbfe3928d4" translate="yes" xml:space="preserve">
          <source>ValueRange.equals()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00367d2199fb0d8ee4c3e05e8791ea5a37eca0cb" translate="yes" xml:space="preserve">
          <source>ValueRange.getLargestMinimum()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f44dcbc0671f7ae7fafa6c631cd651eb49ccef52" translate="yes" xml:space="preserve">
          <source>ValueRange.getMaximum()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8848d251b36e71927963524a1f71b41743c204db" translate="yes" xml:space="preserve">
          <source>ValueRange.getMinimum()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00868d788bf12312f84a2ad1f80060f9bb226f33" translate="yes" xml:space="preserve">
          <source>ValueRange.getSmallestMaximum()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2b2b28f5df1176e53bb1d0beb7514eda88faa6a" translate="yes" xml:space="preserve">
          <source>ValueRange.hashCode()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e69c03d067bbfaf798964a1908ee9ae0debb3cf" translate="yes" xml:space="preserve">
          <source>ValueRange.isFixed()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d0dc7683dab612e7d85b79a4b71d545dbe32ce2" translate="yes" xml:space="preserve">
          <source>ValueRange.isIntValue()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8588e44df641c952f11d1d5863fee6ef03a640d6" translate="yes" xml:space="preserve">
          <source>ValueRange.isValidIntValue()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86851e38007a3f98110a3c3d39d5569376f99578" translate="yes" xml:space="preserve">
          <source>ValueRange.isValidValue()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8348c9b1a903b6babc78a395c71b65409b0140e4" translate="yes" xml:space="preserve">
          <source>ValueRange.of()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b265a40fb60e59c0326fd0eb14bba6d457ceda6c" translate="yes" xml:space="preserve">
          <source>ValueRange.toString()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f690792506e98e567753d37d7838becf68f6e214" translate="yes" xml:space="preserve">
          <source>Values #2 and #3 represent the same date on the time-line. When two values represent the same date, the chronology ID is compared to distinguish them. This step is needed to make the ordering &quot;consistent with equals&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1277cdd8e7ccad113397046035e39eb239278112" translate="yes" xml:space="preserve">
          <source>Values #2 and #3 represent the same date-time on the time-line. When two values represent the same date-time, the chronology ID is compared to distinguish them. This step is needed to make the ordering &quot;consistent with equals&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f6839ef69eba6c422caa1d291e5bf59848c75a0" translate="yes" xml:space="preserve">
          <source>Values #2 and #3 represent the same instant on the time-line. When two values represent the same instant, the local date-time is compared to distinguish them. This step is needed to make the ordering consistent with &lt;code&gt;equals()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87c7a19b05c39c7325c8b99745712457f5703950" translate="yes" xml:space="preserve">
          <source>Values #2 and #3 represent the same instant on the time-line. When two values represent the same instant, the local time is compared to distinguish them. This step is needed to make the ordering consistent with &lt;code&gt;equals()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="268528ca2f4101f0f01cb97bd284e8aa230ea4d3" translate="yes" xml:space="preserve">
          <source>Values are instances of &lt;a href=&quot;../util/locale&quot;&gt;&lt;code&gt;Locale&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e981f52ebd79ba0f556461aee6e8d7840089f94b" translate="yes" xml:space="preserve">
          <source>Values are instances of &lt;a href=&quot;annotation&quot;&gt;&lt;code&gt;Annotation&lt;/code&gt;&lt;/a&gt; holding a &lt;code&gt;null&lt;/code&gt; reference.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b31af6d0186e10290277038186c25b6988e420bf" translate="yes" xml:space="preserve">
          <source>Values are instances of &lt;a href=&quot;annotation&quot;&gt;&lt;code&gt;Annotation&lt;/code&gt;&lt;/a&gt; holding instances of &lt;a href=&quot;../lang/string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e115f59754c175c14f774be997464fa891ca697b" translate="yes" xml:space="preserve">
          <source>Values calculated for the &lt;a href=&quot;calendar#WEEK_OF_YEAR&quot;&gt;&lt;code&gt;WEEK_OF_YEAR&lt;/code&gt;&lt;/a&gt; field range from 1 to 53. The first week of a calendar year is the earliest seven day period starting on &lt;a href=&quot;calendar#getFirstDayOfWeek--&quot;&gt;&lt;code&gt;getFirstDayOfWeek()&lt;/code&gt;&lt;/a&gt; that contains at least &lt;a href=&quot;calendar#getMinimalDaysInFirstWeek--&quot;&gt;&lt;code&gt;getMinimalDaysInFirstWeek()&lt;/code&gt;&lt;/a&gt; days from that year. It thus depends on the values of &lt;code&gt;getMinimalDaysInFirstWeek()&lt;/code&gt;, &lt;code&gt;getFirstDayOfWeek()&lt;/code&gt;, and the day of the week of January 1. Weeks between week 1 of one year and week 1 of the following year (exclusive) are numbered sequentially from 2 to 52 or 53 (except for year(s) involved in the Julian-Gregorian transition).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="575e62216ce7a09805735fc6b3de9ccc1430c813" translate="yes" xml:space="preserve">
          <source>Values calculated for the &lt;code&gt;WEEK_OF_MONTH&lt;/code&gt; field range from 0 to 6. Week 1 of a month (the days with &lt;code&gt;WEEK_OF_MONTH =
 1&lt;/code&gt;) is the earliest set of at least &lt;code&gt;getMinimalDaysInFirstWeek()&lt;/code&gt; contiguous days in that month, ending on the day before &lt;code&gt;getFirstDayOfWeek()&lt;/code&gt;. Unlike week 1 of a year, week 1 of a month may be shorter than 7 days, need not start on &lt;code&gt;getFirstDayOfWeek()&lt;/code&gt;, and will not include days of the previous month. Days of a month before week 1 have a &lt;code&gt;WEEK_OF_MONTH&lt;/code&gt; of 0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a332429cea00f5e0ba78293bf1398f37a4150c4" translate="yes" xml:space="preserve">
          <source>Values of &lt;code&gt;scaleFactor&lt;/code&gt; less than 1 tend to improve the quality level of the table, and values greater than 1.0 degrade the quality level of the table.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4bfe0fe1c3ae3078c4a321e1c4a58a145561004c" translate="yes" xml:space="preserve">
          <source>Values sorted by increasing absolute magnitude tend to yield more accurate results.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7fd1aa8b60c66c8ce2049c5308600cb330cdfd6b" translate="yes" xml:space="preserve">
          <source>VariableElement</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="049a49f6e2fc58d7a1b76c30af066b79aa0564c7" translate="yes" xml:space="preserve">
          <source>VariableElement.getConstantValue()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b18412a894e99767c237dee199a9e2775983eb1" translate="yes" xml:space="preserve">
          <source>VariableElement.getEnclosingElement()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7dfbfe388dbe60d2736ff12b77fbe55d4cc3d26" translate="yes" xml:space="preserve">
          <source>VariableElement.getSimpleName()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1086bb4495c6bf9056c9194a2dd2423693aa9e8a" translate="yes" xml:space="preserve">
          <source>Various revocation options that can be specified for the revocation checking mechanism.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97f32c7bb68ddb3b63aa174f436ddfc434ec6102" translate="yes" xml:space="preserve">
          <source>Various third party code in OpenJDK is licensed under different licenses (see Debian package).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a57e06f45491067f031284fb03d3a20a0abf04fd" translate="yes" xml:space="preserve">
          <source>Vector</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2ef1d912b85c53285a62c499d2b90c159c3c696" translate="yes" xml:space="preserve">
          <source>Vector of ObjectNames:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83de014aed55804a3939d175ddf2c2be884594cc" translate="yes" xml:space="preserve">
          <source>Vector.add()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12448a22577a08e4bd33814775b7bca76a2bddf8" translate="yes" xml:space="preserve">
          <source>Vector.addAll()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b143e6536db395a20325b46ad006cd42dc5e9f2b" translate="yes" xml:space="preserve">
          <source>Vector.addElement()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43af45b0e1f9ce030610e34886e1f90e27d316c5" translate="yes" xml:space="preserve">
          <source>Vector.capacity()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3febce802bca5f96cf922a66d21610318cd93173" translate="yes" xml:space="preserve">
          <source>Vector.clear()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3f0c067f5dedb91ad1b92477293cb721aba1f18" translate="yes" xml:space="preserve">
          <source>Vector.clone()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1dcc54ffe45fafd650dcc8eaf3c8f3e94cd76e20" translate="yes" xml:space="preserve">
          <source>Vector.contains()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac54bb144b8f49d04f39970b007e43e34fe41ae9" translate="yes" xml:space="preserve">
          <source>Vector.containsAll()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c9489df14ab0e65f81e03ff84264e735023be53" translate="yes" xml:space="preserve">
          <source>Vector.copyInto()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3621e9910bff4399b9ed4510fddab622e0ee3b36" translate="yes" xml:space="preserve">
          <source>Vector.elementAt()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5508e586c5025932f37fc1c79d6a310813f8390b" translate="yes" xml:space="preserve">
          <source>Vector.elements()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9cee392bda4c9917b78e896836645ef349830f16" translate="yes" xml:space="preserve">
          <source>Vector.ensureCapacity()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f735ae3b7fd23fd439bb9b91339ce6d21e167eb" translate="yes" xml:space="preserve">
          <source>Vector.equals()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0d69b7676e486aec27c5a390254128b9dae9f28" translate="yes" xml:space="preserve">
          <source>Vector.firstElement()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbb4cd89a2fdeafb33035409d87f79333aac1338" translate="yes" xml:space="preserve">
          <source>Vector.forEach()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78b34b1da6c81c3f4f963f86fddac389fbbac93f" translate="yes" xml:space="preserve">
          <source>Vector.get()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="deb36a4a703a0c9662ba3851cfe616d96ae95755" translate="yes" xml:space="preserve">
          <source>Vector.hashCode()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="592cd8d74702053a24d1ddc31961dafdd5423a77" translate="yes" xml:space="preserve">
          <source>Vector.indexOf()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c157c70b1183c8e1cc7e83216dbd858ea6a2163b" translate="yes" xml:space="preserve">
          <source>Vector.insertElementAt()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f7da12a477d0a359460e546d58e9cf5946a0f2e" translate="yes" xml:space="preserve">
          <source>Vector.isEmpty()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf33cf7f788d664c19782bc048acb12f612c6496" translate="yes" xml:space="preserve">
          <source>Vector.iterator()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4938cd464d6d833bb621df27883e40cee8538175" translate="yes" xml:space="preserve">
          <source>Vector.lastElement()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97a3271c8b245aecba1ae6e6a30e4b30a0a891cf" translate="yes" xml:space="preserve">
          <source>Vector.lastIndexOf()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7a34812d9979d01f9d063ffb06d8d715934545d" translate="yes" xml:space="preserve">
          <source>Vector.listIterator()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eba0f3a168dd92336da56a632e19c089633d5b07" translate="yes" xml:space="preserve">
          <source>Vector.remove()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d2dd9a595584e0436ee40031ba5a9804a4db9ea" translate="yes" xml:space="preserve">
          <source>Vector.removeAll()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c773c162479efdd5b353ce0ff3478618eb3b9b1" translate="yes" xml:space="preserve">
          <source>Vector.removeAllElements()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17fca280d9ece0986fd777add85d50ee0392c0dd" translate="yes" xml:space="preserve">
          <source>Vector.removeElement()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="643e53618076ab6fa1c2b00e3ba77dba1a5ed20e" translate="yes" xml:space="preserve">
          <source>Vector.removeElementAt()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1aead010818808e7860adf5a57d71909eb7b2b7d" translate="yes" xml:space="preserve">
          <source>Vector.removeIf()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6636c9d887c1fa2dab94ba3fc862b9acbe18e589" translate="yes" xml:space="preserve">
          <source>Vector.removeRange()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1474edb1adf9f681c30f18fcc97588983d698714" translate="yes" xml:space="preserve">
          <source>Vector.replaceAll()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd86eab491851d0878d6c40aa408f6508dd0613c" translate="yes" xml:space="preserve">
          <source>Vector.retainAll()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41c8f8a5d29c3dee60f6dabfbbca41c925d0c89c" translate="yes" xml:space="preserve">
          <source>Vector.set()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff8f59c2fe882fda53638aed693a0f335766e3f7" translate="yes" xml:space="preserve">
          <source>Vector.setElementAt()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5309201bc3b37f34020483c36bc4bedaeafd8843" translate="yes" xml:space="preserve">
          <source>Vector.setSize()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9af6d61eccddf48cba99fee758a649b04c0f0130" translate="yes" xml:space="preserve">
          <source>Vector.size()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ec812220eccd3cb116968946418f15febd7f0de" translate="yes" xml:space="preserve">
          <source>Vector.sort()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41115bfb05c4408632b6cad89a0d544f93d03e8c" translate="yes" xml:space="preserve">
          <source>Vector.spliterator()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c5be6bedb2668393cfff0b614596b4e01552b25" translate="yes" xml:space="preserve">
          <source>Vector.subList()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7bd689529fb4950bcab3d5113da7d140f7bf55db" translate="yes" xml:space="preserve">
          <source>Vector.toArray()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52dabc53369db365958bb6b31a24f6912d819645" translate="yes" xml:space="preserve">
          <source>Vector.toString()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e783562a1deb80d4b3491f0b9eec6984e7ab739" translate="yes" xml:space="preserve">
          <source>Vector.trimToSize()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="594b8c552b179d5ccb25cee5b1ece68e462291db" translate="yes" xml:space="preserve">
          <source>Vendors may choose to provide GUIs for the &lt;code&gt;IIOMetadata&lt;/code&gt; subclasses they define for a particular plug-in. These can be set up as default controllers in the corresponding &lt;code&gt;IIOMetadata&lt;/code&gt; subclasses.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="831731741aea4af2c729f879961520f95f277642" translate="yes" xml:space="preserve">
          <source>Vendors may choose to provide GUIs for the &lt;code&gt;IIOParam&lt;/code&gt; subclasses they define for a particular plug-in. These can be set up as default controllers in the corresponding &lt;code&gt;IIOParam&lt;/code&gt; subclasses.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c11a3cc3af889ab7dcd6ed199f9b7ace98e83025" translate="yes" xml:space="preserve">
          <source>Vendors of service providers (plugins) are encouraged to seek information about other already established properties in third party plugins, and follow the same conventions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8b8bf823667cbcd057a2cc76c5aeac0f4a10f66" translate="yes" xml:space="preserve">
          <source>Verifies that the signature in this SignedObject is the valid signature for the object stored inside, with the given verification key, using the designated verification engine.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99bd90b1546c3ee682015da5f10e8ba6532d09e8" translate="yes" xml:space="preserve">
          <source>Verifies that this CRL was signed using the private key that corresponds to the given public key.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8392e2cecab0ac92ad3048817b161a5447cec89f" translate="yes" xml:space="preserve">
          <source>Verifies that this CRL was signed using the private key that corresponds to the given public key. This method uses the signature verification engine supplied by the given provider.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a31cd155077b823f3a380a0acff7476d8fb957b6" translate="yes" xml:space="preserve">
          <source>Verifies that this CRL was signed using the private key that corresponds to the given public key. This method uses the signature verification engine supplied by the given provider. Note that the specified Provider object does not have to be registered in the provider list. This method was added to version 1.8 of the Java Platform Standard Edition. In order to maintain backwards compatibility with existing service providers, this method is not &lt;code&gt;abstract&lt;/code&gt; and it provides a default implementation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f86b494ce88c4338d5506b9f8b92667c611eb63e" translate="yes" xml:space="preserve">
          <source>Verifies that this certificate was signed using the private key that corresponds to the specified public key.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e94e7d0bb3eec70d5d884943f7076485f96ebfa" translate="yes" xml:space="preserve">
          <source>Verifies that this certificate was signed using the private key that corresponds to the specified public key. This method uses the signature verification engine supplied by the specified provider.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5f94ace096494f2959f40bd02b6a36f8b04755a" translate="yes" xml:space="preserve">
          <source>Verifies that this certificate was signed using the private key that corresponds to the specified public key. This method uses the signature verification engine supplied by the specified provider. Note that the specified Provider object does not have to be registered in the provider list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="823512bc3e4814869665ff27fff569caca67c7a7" translate="yes" xml:space="preserve">
          <source>Verifies that this certificate was signed using the private key that corresponds to the specified public key. This method uses the signature verification engine supplied by the specified provider. Note that the specified Provider object does not have to be registered in the provider list. This method was added to version 1.8 of the Java Platform Standard Edition. In order to maintain backwards compatibility with existing service providers, this method is not &lt;code&gt;abstract&lt;/code&gt; and it provides a default implementation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e15e8baaae5ff180e7b82008d14d231b1160cd78" translate="yes" xml:space="preserve">
          <source>Verifies the passed-in signature in the specified array of bytes, starting at the specified offset.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57d31e1789627ed6593a9dc73a6e55b7a850dff3" translate="yes" xml:space="preserve">
          <source>Verifies the passed-in signature.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6599afa550fe3cdb410bb86ea3737f60f646e09" translate="yes" xml:space="preserve">
          <source>Verify that the given attribute category object is equal to the category of the given attribute value object. If so, this method returns doing nothing. If not, this method throws an exception.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a94531d5b074160d69808b3c14bd667ac55ec2bf" translate="yes" xml:space="preserve">
          <source>Verify that the given object is a &lt;a href=&quot;../../../java/lang/class&quot;&gt;&lt;code&gt;Class&lt;/code&gt;&lt;/a&gt; that implements the given interface, which is assumed to be interface &lt;a href=&quot;attribute&quot;&gt;&lt;code&gt;Attribute&lt;/code&gt;&lt;/a&gt; or a subinterface thereof.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4830d6362f43020fbfb48858d067512ed329af92" translate="yes" xml:space="preserve">
          <source>Verify that the given object is an instance of the given interface, which is assumed to be interface &lt;a href=&quot;attribute&quot;&gt;&lt;code&gt;Attribute&lt;/code&gt;&lt;/a&gt; or a subinterface thereof.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbb1632be36453254ce6b2c18c1d6e17310ad49e" translate="yes" xml:space="preserve">
          <source>Verify that the host name is an acceptable match with the server's authentication scheme.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50018573d5b3422d0b24a7448bd85040f25bc9e9" translate="yes" xml:space="preserve">
          <source>VerifyError</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4b37c7d2bbd81953aa0dc4dee5448591993d7f7" translate="yes" xml:space="preserve">
          <source>Version number that is written to the stream header.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="571f32dac3bc4ec3d1fe7045d05d9a0f03649e6b" translate="yes" xml:space="preserve">
          <source>Version numbers are compared by sequentially comparing corresponding components of the desired and specification strings. Each component is converted as a decimal integer and the values compared. If the specification value is greater than the desired value true is returned. If the value is less false is returned. If the values are equal the period is skipped and the next pair of components is compared.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e713eceb7a1ac7f3a02a42750432df62c5b6e94c" translate="yes" xml:space="preserve">
          <source>Version, for example: &quot;1.8.0_1&quot;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16ad021ddebc536839f39ac63d6ec060e30b8664" translate="yes" xml:space="preserve">
          <source>VetoableChangeListener</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="804915316d8f97886adb8e247459f602dfcebe36" translate="yes" xml:space="preserve">
          <source>VetoableChangeListener.vetoableChange()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00795ddbe00248abe6b9a0b5a0162c5148c11e54" translate="yes" xml:space="preserve">
          <source>VetoableChangeListenerProxy</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f0d8143719e552f9ce314590b2628878279cbdd" translate="yes" xml:space="preserve">
          <source>VetoableChangeListenerProxy.getPropertyName()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1b0c400f5ac2cff7686549c82412e33d7291658" translate="yes" xml:space="preserve">
          <source>VetoableChangeListenerProxy.vetoableChange()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b31b1e9a51d19299fc659cdc98eebdd31b0039f" translate="yes" xml:space="preserve">
          <source>VetoableChangeSupport</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="501c78d942a8f2041c7aad44cd60a6a8261c93e6" translate="yes" xml:space="preserve">
          <source>VetoableChangeSupport.addVetoableChangeListener()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a30a001aec1f217ee5fd2360a6311c6af8bf23a8" translate="yes" xml:space="preserve">
          <source>VetoableChangeSupport.fireVetoableChange()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6699991fad2342cd161e77ef52e5011623343bb6" translate="yes" xml:space="preserve">
          <source>VetoableChangeSupport.getVetoableChangeListeners()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04ac8a51228c53c751a042f343c2433f06423a34" translate="yes" xml:space="preserve">
          <source>VetoableChangeSupport.hasListeners()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7df8e4f28d5f514752792a700ca3dcba430bab06" translate="yes" xml:space="preserve">
          <source>VetoableChangeSupport.removeVetoableChangeListener()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe8c549b8765b4d37e8bb3ca15fef40af0da355c" translate="yes" xml:space="preserve">
          <source>View buffers have three important advantages over the families of type-specific</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bebb260b04c0f09e3e5ed827bf51a0545c229af4" translate="yes" xml:space="preserve">
          <source>Viewing the name of a principal and optionally the scope in which it is used, and whether or not it is considered &quot;trusted&quot; in that scope</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c89389db8f652fc705f1c3355c972ecf2b4db9f6" translate="yes" xml:space="preserve">
          <source>VirtualMachineError</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53c862a5c1e4a0d09bcc411af0d56870b5419191" translate="yes" xml:space="preserve">
          <source>Virtually all Java core classes that implement &lt;code&gt;Comparable&lt;/code&gt; have natural orderings that are consistent with equals. One exception is &lt;code&gt;java.math.BigDecimal&lt;/code&gt;, whose natural ordering equates &lt;code&gt;BigDecimal&lt;/code&gt; objects with equal values and different precisions (such as 4.0 and 4.00).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d9ff4f0de398581c4640bcbb6e536c355a391be" translate="yes" xml:space="preserve">
          <source>Visibility</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc86a86aee0e08b6ed1bbd3cb635071551d78d59" translate="yes" xml:space="preserve">
          <source>Visibility.avoidingGui()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad82dff02d300c2038619427e4898e3ee75dccae" translate="yes" xml:space="preserve">
          <source>Visibility.dontUseGui()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="964540def0711de39782bcc60ea1d52cec224b4a" translate="yes" xml:space="preserve">
          <source>Visibility.needsGui()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e16f80ed6f0fa07268b369c53b2c7eac2bfd9ccb" translate="yes" xml:space="preserve">
          <source>Visibility.okToUseGui()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d0816f9d0a8eacad55f85691e825665ca134eed" translate="yes" xml:space="preserve">
          <source>Visits a &lt;a href=&quot;../type/notype&quot;&gt;&lt;code&gt;NoType&lt;/code&gt;&lt;/a&gt; instance, dispatching to the visit method for the specific &lt;a href=&quot;../type/typekind&quot;&gt;kind&lt;/a&gt; of pseudo-type: &lt;code&gt;VOID&lt;/code&gt;, &lt;code&gt;PACKAGE&lt;/code&gt;, or &lt;code&gt;NONE&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="413df7e9129db00f72578d2bf359304ab985a01c" translate="yes" xml:space="preserve">
          <source>Visits a &lt;a href=&quot;../type/notype&quot;&gt;&lt;code&gt;NoType&lt;/code&gt;&lt;/a&gt; instance. This implementation calls &lt;code&gt;defaultAction&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea31cf064cc018556f99765c17487a9fd1ef0208" translate="yes" xml:space="preserve">
          <source>Visits a &lt;a href=&quot;../type/typekind#NONE&quot;&gt;&lt;code&gt;NONE&lt;/code&gt;&lt;/a&gt; pseudo-type by calling &lt;code&gt;defaultAction&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="638427628c58146786d9eb8a141b8507219563a0" translate="yes" xml:space="preserve">
          <source>Visits a &lt;a href=&quot;../type/typekind#PACKAGE&quot;&gt;&lt;code&gt;PACKAGE&lt;/code&gt;&lt;/a&gt; pseudo-type by calling &lt;code&gt;defaultAction&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3102e30da4c98dd9705344ed8ba5285e3d4ce37" translate="yes" xml:space="preserve">
          <source>Visits a &lt;a href=&quot;../type/typekind#VOID&quot;&gt;&lt;code&gt;VOID&lt;/code&gt;&lt;/a&gt; pseudo-type by calling &lt;code&gt;defaultAction&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="326ce264cd280987f162f7ee52f2123d2e931cc7" translate="yes" xml:space="preserve">
          <source>Visits a &lt;a href=&quot;notype&quot;&gt;&lt;code&gt;NoType&lt;/code&gt;&lt;/a&gt; instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48666523726612234fe73e2372b2c2a498929425" translate="yes" xml:space="preserve">
          <source>Visits a &lt;code&gt;BOOLEAN&lt;/code&gt; primitive type by calling &lt;code&gt;defaultAction&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6974b748f8432f4ea10f29e8ecee4d3df5f8cfd0" translate="yes" xml:space="preserve">
          <source>Visits a &lt;code&gt;BYTE&lt;/code&gt; primitive type by calling &lt;code&gt;defaultAction&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0d55089b3e5d58c87f8cb2f882879701abf1c66" translate="yes" xml:space="preserve">
          <source>Visits a &lt;code&gt;CHAR&lt;/code&gt; primitive type by calling &lt;code&gt;defaultAction&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bfed97e82b81f71c8a4bf71bd522a3641768692b" translate="yes" xml:space="preserve">
          <source>Visits a &lt;code&gt;CLASS&lt;/code&gt; type element by calling &lt;code&gt;defaultAction&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="942a391c7d3b5c540337240f8a9248d876d54870" translate="yes" xml:space="preserve">
          <source>Visits a &lt;code&gt;CONSTRUCTOR&lt;/code&gt; executable element by calling &lt;code&gt;defaultAction&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4544865bfa0a71ab8f456c6ddcee6ec932fec53a" translate="yes" xml:space="preserve">
          <source>Visits a &lt;code&gt;DOUBLE&lt;/code&gt; primitive type by calling &lt;code&gt;defaultAction&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7640b51294c1f97e6b1fb8f150360ded79e9d1d" translate="yes" xml:space="preserve">
          <source>Visits a &lt;code&gt;FIELD&lt;/code&gt; variable element by calling &lt;code&gt;defaultAction&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19ebca4e457ad1924ea6a3643ba2f472dd49bab2" translate="yes" xml:space="preserve">
          <source>Visits a &lt;code&gt;FLOAT&lt;/code&gt; primitive type by calling &lt;code&gt;defaultAction&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e2f3811dbbcfde797ceb7c0a19d0374801e7d94" translate="yes" xml:space="preserve">
          <source>Visits a &lt;code&gt;LOCAL_VARIABLE&lt;/code&gt; variable element by calling &lt;code&gt;defaultAction&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f56d28124023def96c0de4285daf6dcc3c9582c5" translate="yes" xml:space="preserve">
          <source>Visits a &lt;code&gt;LONG&lt;/code&gt; primitive type by calling &lt;code&gt;defaultAction&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a842bc1ad93bd33187ac6754926d103c604db723" translate="yes" xml:space="preserve">
          <source>Visits a &lt;code&gt;METHOD&lt;/code&gt; executable element by calling &lt;code&gt;defaultAction&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6a80dd1507bef5ef1217e9c64d00867e578f4f2" translate="yes" xml:space="preserve">
          <source>Visits a &lt;code&gt;PARAMETER&lt;/code&gt; variable element by calling &lt;code&gt;defaultAction&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0762abcfb44145bd546a0e1743dc74cc19ac20d" translate="yes" xml:space="preserve">
          <source>Visits a &lt;code&gt;RESOURCE_VARIABLE&lt;/code&gt; variable element by calling &lt;code&gt;defaultAction&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3b9e07ffd616970b3390a782fa96196543f77fb" translate="yes" xml:space="preserve">
          <source>Visits a &lt;code&gt;RESOURCE_VARIABLE&lt;/code&gt; variable element by calling &lt;code&gt;visitUnknown&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="928d8dc7e22e1d1eee7164f4e9b7df6922b44267" translate="yes" xml:space="preserve">
          <source>Visits a &lt;code&gt;SHORT&lt;/code&gt; primitive type by calling &lt;code&gt;defaultAction&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06519f49dafdc7d6c801c704f0cf40c7c8869d2c" translate="yes" xml:space="preserve">
          <source>Visits a &lt;code&gt;STATIC_INIT&lt;/code&gt; executable element by calling &lt;code&gt;defaultAction&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f98abd79917fe35d903efd8b7ce5969f24fb847c" translate="yes" xml:space="preserve">
          <source>Visits a &lt;code&gt;UnionType&lt;/code&gt; element by calling &lt;code&gt;visitUnknown&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c36db7ef69840a3d127aaf0ade441e8f6776483b" translate="yes" xml:space="preserve">
          <source>Visits a &lt;code&gt;UnionType&lt;/code&gt; in a manner defined by a subclass.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d280e973487cc97b6454fa74ffa411d4df6f08d8" translate="yes" xml:space="preserve">
          <source>Visits a &lt;code&gt;boolean&lt;/code&gt; value in an annotation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f00336ee526ec44df91e5191c8c8be5573d8b33" translate="yes" xml:space="preserve">
          <source>Visits a &lt;code&gt;boolean&lt;/code&gt; value in an annotation. This implementation calls &lt;code&gt;defaultAction&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c55346f0fff3ab9ae25b60a702aa77125d1933ab" translate="yes" xml:space="preserve">
          <source>Visits a &lt;code&gt;byte&lt;/code&gt; value in an annotation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab6c8b62d850df3e0ad69a0b0fd8401f723300ff" translate="yes" xml:space="preserve">
          <source>Visits a &lt;code&gt;byte&lt;/code&gt; value in an annotation. This implementation calls &lt;code&gt;defaultAction&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe3f91c9977a564ff3ccdf15344d8217fafa1442" translate="yes" xml:space="preserve">
          <source>Visits a &lt;code&gt;char&lt;/code&gt; value in an annotation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea8973b7808a3c696c27c834ec234e255ade27fd" translate="yes" xml:space="preserve">
          <source>Visits a &lt;code&gt;char&lt;/code&gt; value in an annotation. This implementation calls &lt;code&gt;defaultAction&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57cbcd52b61eb06812ad3ddebf9a344b499aef98" translate="yes" xml:space="preserve">
          <source>Visits a &lt;code&gt;double&lt;/code&gt; value in an annotation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84948981c7c65bc28218ccf1f9004b103ef0b52e" translate="yes" xml:space="preserve">
          <source>Visits a &lt;code&gt;double&lt;/code&gt; value in an annotation. This implementation calls &lt;code&gt;defaultAction&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a4f6d0d322ea41a20c39d0fb8d0ca9e538ed29a" translate="yes" xml:space="preserve">
          <source>Visits a &lt;code&gt;float&lt;/code&gt; value in an annotation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae1ff6fe4e26f3105cf3c6c8aa6f454303e3de98" translate="yes" xml:space="preserve">
          <source>Visits a &lt;code&gt;float&lt;/code&gt; value in an annotation. This implementation calls &lt;code&gt;defaultAction&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bcb4114d76d3ceb5aa80467560a61a42c900ae00" translate="yes" xml:space="preserve">
          <source>Visits a &lt;code&gt;long&lt;/code&gt; value in an annotation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17e61de4db861c086df6c6b4cad9de7b9ff56d4f" translate="yes" xml:space="preserve">
          <source>Visits a &lt;code&gt;long&lt;/code&gt; value in an annotation. This implementation calls &lt;code&gt;defaultAction&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="929ce7a40a022c8dc1896120f9a14ee6b9aaecb5" translate="yes" xml:space="preserve">
          <source>Visits a &lt;code&gt;short&lt;/code&gt; value in an annotation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91625b4cf3f2eba1542fb8604e82cb6107de71b7" translate="yes" xml:space="preserve">
          <source>Visits a &lt;code&gt;short&lt;/code&gt; value in an annotation. This implementation calls &lt;code&gt;defaultAction&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afa7eaec1d8108c01b34574ca2feb8baddff79e8" translate="yes" xml:space="preserve">
          <source>Visits a declared type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d52dd9cc63c88d5904414fcced772a3ae8dabec1" translate="yes" xml:space="preserve">
          <source>Visits a declared type. This implementation calls &lt;code&gt;defaultAction&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da3ed6463e2a8bc29f0e6506eb960663626b4e5c" translate="yes" xml:space="preserve">
          <source>Visits a package element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa75ba6fccbb011aabb7d255993d81f58433c56e" translate="yes" xml:space="preserve">
          <source>Visits a package element. This implementation calls &lt;code&gt;defaultAction&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="578f063a0322180a8b9640b54484cee4e2679d73" translate="yes" xml:space="preserve">
          <source>Visits a package element. This implementation calls &lt;code&gt;defaultAction&lt;/code&gt;. The element argument has kind &lt;code&gt;PACKAGE&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a69805f06d8c90207a336ef091bbebb39637da79" translate="yes" xml:space="preserve">
          <source>Visits a package element. This implementation scans the enclosed elements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e5c3dd474e332ec755b17623c8ca46754fce8c3" translate="yes" xml:space="preserve">
          <source>Visits a primitive type, dispatching to the visit method for the specific &lt;a href=&quot;../type/typekind&quot;&gt;kind&lt;/a&gt; of primitive type: &lt;code&gt;BOOLEAN&lt;/code&gt;, &lt;code&gt;BYTE&lt;/code&gt;, etc.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f0e280c2ccff87d8ce09e6afcc019787e625426" translate="yes" xml:space="preserve">
          <source>Visits a primitive type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a67d7a9595de2142445764b37e3a89c459ea6be1" translate="yes" xml:space="preserve">
          <source>Visits a primitive type. This implementation calls &lt;code&gt;defaultAction&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d59604f243c828e3eb0c9e29f2b8b052e7695d8" translate="yes" xml:space="preserve">
          <source>Visits a string value in an annotation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae519e8764c141dffffe546b4abfc8b92c3fdd8d" translate="yes" xml:space="preserve">
          <source>Visits a string value in an annotation. This implementation calls &lt;code&gt;defaultAction&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b06ef501f33508d7fef5e1395136d596f0836d9f" translate="yes" xml:space="preserve">
          <source>Visits a type element, dispatching to the visit method for the specific &lt;a href=&quot;../element/elementkind&quot;&gt;kind&lt;/a&gt; of type, &lt;code&gt;ANNOTATION_TYPE&lt;/code&gt;, &lt;code&gt;CLASS&lt;/code&gt;, &lt;code&gt;ENUM&lt;/code&gt;, or &lt;code&gt;INTERFACE&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1ed45dc4c679ffd3be80c1d915c0e034f2cb522" translate="yes" xml:space="preserve">
          <source>Visits a type element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="725617f4669fb96b4b2db2903858f32ff82a9095" translate="yes" xml:space="preserve">
          <source>Visits a type element. This implementation calls &lt;code&gt;defaultAction&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03f09d0e387495fc79006117463f4fda3f98b03c" translate="yes" xml:space="preserve">
          <source>Visits a type element. This implementation scans the enclosed elements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15184fa0456c8125264107e4ce2aaa0730f73960" translate="yes" xml:space="preserve">
          <source>Visits a type parameter element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eeeba9b3b8ccd78ed650a7c71b6ffaa3af8ab805" translate="yes" xml:space="preserve">
          <source>Visits a type parameter element. This implementation calls &lt;code&gt;defaultAction&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87facd06a9d3b24ae7811573b6f0cebad1f8e5cf" translate="yes" xml:space="preserve">
          <source>Visits a type parameter element. This implementation calls &lt;code&gt;defaultAction&lt;/code&gt;. The element argument has kind &lt;code&gt;TYPE_PARAMETER&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb639d8da0d216afd44a0f43d91fa3085a36bf86" translate="yes" xml:space="preserve">
          <source>Visits a type parameter element. This implementation scans the enclosed elements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62a156da44d20f12c855b622eecedfbd267c16c6" translate="yes" xml:space="preserve">
          <source>Visits a type value in an annotation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41a183ef44d6dffb4259a8bc47efd90248834786" translate="yes" xml:space="preserve">
          <source>Visits a type value in an annotation. This implementation calls &lt;code&gt;defaultAction&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e9a507a67ebd26255ed26f51400ab8ae1b85be7" translate="yes" xml:space="preserve">
          <source>Visits a type variable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c372964830cc14efbcaade0fdbedff99b18ddfc7" translate="yes" xml:space="preserve">
          <source>Visits a type variable. This implementation calls &lt;code&gt;defaultAction&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27153c563d708cafa9b1a229b9dc99984752a40e" translate="yes" xml:space="preserve">
          <source>Visits a type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a7ed86e7e1918041456b36609215487806c0f32" translate="yes" xml:space="preserve">
          <source>Visits a union type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd3f996c9e0d38e797e04c55498bfb2cd4cb67f0" translate="yes" xml:space="preserve">
          <source>Visits a variable element, dispatching to the visit method for the specific &lt;a href=&quot;../element/elementkind&quot;&gt;kind&lt;/a&gt; of variable, &lt;code&gt;ENUM_CONSTANT&lt;/code&gt;, &lt;code&gt;EXCEPTION_PARAMETER&lt;/code&gt;, &lt;code&gt;FIELD&lt;/code&gt;, &lt;code&gt;LOCAL_VARIABLE&lt;/code&gt;, &lt;code&gt;PARAMETER&lt;/code&gt;, or &lt;code&gt;RESOURCE_VARIABLE&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba24a5a1b0f0d64c13b84b66d3e255226077b152" translate="yes" xml:space="preserve">
          <source>Visits a variable element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de3e51caf6584b99ff6431fc5456fb0154ee202d" translate="yes" xml:space="preserve">
          <source>Visits a variable element. This implementation calls &lt;code&gt;defaultAction&lt;/code&gt;, unless the element is a &lt;code&gt;RESOURCE_VARIABLE&lt;/code&gt; in which case &lt;code&gt;visitUnknown&lt;/code&gt; is called.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c533b7a875e8fbdb46b902e74c1ecbc9fe0fda0a" translate="yes" xml:space="preserve">
          <source>Visits a variable element. This implementation scans the enclosed elements, unless the element is a &lt;code&gt;RESOURCE_VARIABLE&lt;/code&gt; in which case &lt;code&gt;visitUnknown&lt;/code&gt; is called.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79c574f5448e2d13d42803c65593135476065308" translate="yes" xml:space="preserve">
          <source>Visits a wildcard type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="034e2b7d175c18437a65a94a38180f72fce56c65" translate="yes" xml:space="preserve">
          <source>Visits a wildcard type. This implementation calls &lt;code&gt;defaultAction&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3c2c3aac6f4f86e3eb7ec73c861f76c8f749fd3" translate="yes" xml:space="preserve">
          <source>Visits an &lt;code&gt;ANNOTATION_TYPE&lt;/code&gt; type element by calling &lt;code&gt;defaultAction&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff43bfabe4f542be8a5260d47b6e5801ae2b19db" translate="yes" xml:space="preserve">
          <source>Visits an &lt;code&gt;ENUM&lt;/code&gt; type element by calling &lt;code&gt;defaultAction&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0330c0f9c16ffeca15bf59f9146448d281c4cdca" translate="yes" xml:space="preserve">
          <source>Visits an &lt;code&gt;ENUM_CONSTANT&lt;/code&gt; variable element by calling &lt;code&gt;defaultAction&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbe6c08b62c02e6238df7bc134e668cbe1d7364f" translate="yes" xml:space="preserve">
          <source>Visits an &lt;code&gt;EXCEPTION_PARAMETER&lt;/code&gt; variable element by calling &lt;code&gt;defaultAction&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8409b98cf2232c4823dcbb7ff655ca496767d132" translate="yes" xml:space="preserve">
          <source>Visits an &lt;code&gt;INSTANCE_INIT&lt;/code&gt; executable element by calling &lt;code&gt;defaultAction&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41dd61274f7628cf3941edcfd633857963cf7541" translate="yes" xml:space="preserve">
          <source>Visits an &lt;code&gt;INT&lt;/code&gt; primitive type by calling &lt;code&gt;defaultAction&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25585947bbcb4aad7b15caced8aa8467758bac79" translate="yes" xml:space="preserve">
          <source>Visits an &lt;code&gt;INTERFACE&lt;/code&gt; type element by calling &lt;code&gt;defaultAction&lt;/code&gt;. .</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4fa6edc223d2b06c81123aa5c6ea4b705a5dbba" translate="yes" xml:space="preserve">
          <source>Visits an &lt;code&gt;IntersectionType&lt;/code&gt; element by calling &lt;code&gt;visitUnknown&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d6c3f3c354c4934e5cf2dc19ac3f083087e1b70" translate="yes" xml:space="preserve">
          <source>Visits an &lt;code&gt;IntersectionType&lt;/code&gt; in a manner defined by a subclass.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8e60dc2fa59cfc6da215b4ef5f47b191a43556e" translate="yes" xml:space="preserve">
          <source>Visits an &lt;code&gt;enum&lt;/code&gt; value in an annotation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae4b07d571ad4b593fba1e035ab3bfcaf056fe4f" translate="yes" xml:space="preserve">
          <source>Visits an &lt;code&gt;enum&lt;/code&gt; value in an annotation. This implementation calls &lt;code&gt;defaultAction&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb8e9c712a056779d84d2337e82b6c66dba0c213" translate="yes" xml:space="preserve">
          <source>Visits an &lt;code&gt;int&lt;/code&gt; value in an annotation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91ad22f12bcef30717ee34ca31ebdb15bd9ce879" translate="yes" xml:space="preserve">
          <source>Visits an &lt;code&gt;int&lt;/code&gt; value in an annotation. This implementation calls &lt;code&gt;defaultAction&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d1fe596cd2b9780661657eb630c2a016542317f" translate="yes" xml:space="preserve">
          <source>Visits an annotation value as if by passing itself to that value's &lt;a href=&quot;../element/annotationvalue#accept-javax.lang.model.element.AnnotationValueVisitor-P-&quot;&gt;&lt;code&gt;accept&lt;/code&gt;&lt;/a&gt; method passing &lt;code&gt;null&lt;/code&gt; for the additional parameter. The invocation &lt;code&gt;v.visit(av)&lt;/code&gt; is equivalent to &lt;code&gt;av.accept(v,
 null)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7baae58805b51262cd234fd644d5dbd150c00a8c" translate="yes" xml:space="preserve">
          <source>Visits an annotation value as if by passing itself to that value's &lt;a href=&quot;../element/annotationvalue#accept-javax.lang.model.element.AnnotationValueVisitor-P-&quot;&gt;&lt;code&gt;accept&lt;/code&gt;&lt;/a&gt;. The invocation &lt;code&gt;v.visit(av)&lt;/code&gt; is equivalent to &lt;code&gt;av.accept(v, p)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="730741cf9d36ab269ad6555c4ce92392be9f6266" translate="yes" xml:space="preserve">
          <source>Visits an annotation value in an annotation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d2088e504383b4a68980a5685bcfca163b7c10b" translate="yes" xml:space="preserve">
          <source>Visits an annotation value in an annotation. This implementation calls &lt;code&gt;defaultAction&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe6b4ace257f1aa5ad9b861601df87ea6dcffb2e" translate="yes" xml:space="preserve">
          <source>Visits an annotation value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="193d88a5627232c3a1c21bc1d9159fe566c0a792" translate="yes" xml:space="preserve">
          <source>Visits an array type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89b266fc14dbad0e9776a2c6d8d08972a22dd483" translate="yes" xml:space="preserve">
          <source>Visits an array type. This implementation calls &lt;code&gt;defaultAction&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f9f2aacc87c253da98e2831c5e9a6fb1ea7ec26" translate="yes" xml:space="preserve">
          <source>Visits an array value in an annotation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c6fca92f1047d6b0bf7729ca18fc816011bf2c3" translate="yes" xml:space="preserve">
          <source>Visits an array value in an annotation. This implementation calls &lt;code&gt;defaultAction&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ac16f16d0d912c94714589d7d2061e1481c66da" translate="yes" xml:space="preserve">
          <source>Visits an element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0cb485f4d62ddc36ef8f35319850b87a46c696d7" translate="yes" xml:space="preserve">
          <source>Visits an error type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6b2a2ec5e472610768b9217434c605e8922b5ed" translate="yes" xml:space="preserve">
          <source>Visits an error type. This implementation calls &lt;code&gt;defaultAction&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd85319b6f82f753faf18ff06ef9eea78d1a13d7" translate="yes" xml:space="preserve">
          <source>Visits an executable element, dispatching to the visit method for the specific &lt;a href=&quot;../element/elementkind&quot;&gt;kind&lt;/a&gt; of executable, &lt;code&gt;CONSTRUCTOR&lt;/code&gt;, &lt;code&gt;INSTANCE_INIT&lt;/code&gt;, &lt;code&gt;METHOD&lt;/code&gt;, or &lt;code&gt;STATIC_INIT&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97d5a37dd8576e45e88ae2bccabdf6af8b7ef2cb" translate="yes" xml:space="preserve">
          <source>Visits an executable element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c116b51969f58665229ee956c75919c794606c5e" translate="yes" xml:space="preserve">
          <source>Visits an executable element. This implementation calls &lt;code&gt;defaultAction&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41b939419c7035c34f8bbb5b1705f781501f0f69" translate="yes" xml:space="preserve">
          <source>Visits an executable element. This implementation scans the parameters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1be16a19b0491c1beda306a52e77ede0c0c63f8a" translate="yes" xml:space="preserve">
          <source>Visits an executable type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd61b0b01f18be14e88c6efd3b3fd60113ec6ee9" translate="yes" xml:space="preserve">
          <source>Visits an executable type. This implementation calls &lt;code&gt;defaultAction&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="097bbd21dc72d2de371961d60596ebe8ac9354b9" translate="yes" xml:space="preserve">
          <source>Visits an intersection type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5efb829c5c89f578dbe60b832dffcebc823ca45d" translate="yes" xml:space="preserve">
          <source>Visits an unknown kind of annotation value. This can occur if the language evolves and new kinds of value can be stored in an annotation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16640cf2017020fe0367855e37d77723ec70be57" translate="yes" xml:space="preserve">
          <source>Visits an unknown kind of element. This can occur if the language evolves and new kinds of elements are added to the &lt;code&gt;Element&lt;/code&gt; hierarchy.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10700e101ad6e3b16d78d2487737515f937cd43e" translate="yes" xml:space="preserve">
          <source>Visits an unknown kind of type. This can occur if the language evolves and new kinds of types are added to the &lt;code&gt;TypeMirror&lt;/code&gt; hierarchy.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb8bcf1cac449cd7c789fa84dbdd50d81dfa5ddf" translate="yes" xml:space="preserve">
          <source>Visits any program element as if by passing itself to that element's &lt;a href=&quot;../element/element#accept-javax.lang.model.element.ElementVisitor-P-&quot;&gt;&lt;code&gt;accept&lt;/code&gt;&lt;/a&gt; method and passing &lt;code&gt;null&lt;/code&gt; for the additional parameter. The invocation &lt;code&gt;v.visit(elem)&lt;/code&gt; is equivalent to &lt;code&gt;elem.accept(v,
 null)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ffc5daa7d679d696f8fda26db94fe7d74dc87bc" translate="yes" xml:space="preserve">
          <source>Visits any program element as if by passing itself to that element's &lt;a href=&quot;../element/element#accept-javax.lang.model.element.ElementVisitor-P-&quot;&gt;&lt;code&gt;accept&lt;/code&gt;&lt;/a&gt; method. The invocation &lt;code&gt;v.visit(elem)&lt;/code&gt; is equivalent to &lt;code&gt;elem.accept(v,
 p)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bb471ef3a15c11a25f6af7ee57d7897d8b02101" translate="yes" xml:space="preserve">
          <source>Visits any type mirror as if by passing itself to that type mirror's &lt;a href=&quot;../type/typemirror#accept-javax.lang.model.type.TypeVisitor-P-&quot;&gt;&lt;code&gt;accept&lt;/code&gt;&lt;/a&gt; method and passing &lt;code&gt;null&lt;/code&gt; for the additional parameter. The invocation &lt;code&gt;v.visit(t)&lt;/code&gt; is equivalent to &lt;code&gt;t.accept(v, null)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6beefb695913ca7e897e6b359577cff0a36c2a28" translate="yes" xml:space="preserve">
          <source>Visits any type mirror as if by passing itself to that type mirror's &lt;a href=&quot;../type/typemirror#accept-javax.lang.model.type.TypeVisitor-P-&quot;&gt;&lt;code&gt;accept&lt;/code&gt;&lt;/a&gt; method. The invocation &lt;code&gt;v.visit(t, p)&lt;/code&gt; is equivalent to &lt;code&gt;t.accept(v, p)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9d9eb2fef485285f86ba51fbd467c7afa9ad5b4" translate="yes" xml:space="preserve">
          <source>Visits the null type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="656ba7eb7a6ca7cb1916363235f1a036d1512315" translate="yes" xml:space="preserve">
          <source>Visits the null type. This implementation calls &lt;code&gt;defaultAction&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24946575a4c2adc12b5b83167467f2de93c489f1" translate="yes" xml:space="preserve">
          <source>VoiceStatus</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="207c7c00630b836d3afb46848bdb24a92023331d" translate="yes" xml:space="preserve">
          <source>Void</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ff393ccc05e790a7af22e1d4c87f2e578d18377" translate="yes" xml:space="preserve">
          <source>VolatileCallSite</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2584e44f93fe5a84f506bc50838d08ece23805c2" translate="yes" xml:space="preserve">
          <source>VolatileCallSite.dynamicInvoker()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29b16c95b25ac3c396ebf020c68f78da6c598f7b" translate="yes" xml:space="preserve">
          <source>VolatileCallSite.getTarget()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aaf298bcacd6061d41d86fc6debf158528f683bd" translate="yes" xml:space="preserve">
          <source>VolatileCallSite.setTarget()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dfbb1a470543f1a06436a973768a276f05c37ee9" translate="yes" xml:space="preserve">
          <source>Volume 3:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa40942465857f664ea96930c1265cf73e3d0101" translate="yes" xml:space="preserve">
          <source>WAIS</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c271b656dedb85a67db52b58a06c052fe2ee23cc" translate="yes" xml:space="preserve">
          <source>WAITING</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="101c43203a1a82572069e87c5288e77247fa4c44" translate="yes" xml:space="preserve">
          <source>WALL</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="225462bfb6556f3c24cf6d83becfd70d5f9d94e9" translate="yes" xml:space="preserve">
          <source>WALL_TIME</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd3edc641024a335a508fdacefb5f51ded5905cc" translate="yes" xml:space="preserve">
          <source>WARNING</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="777d9894a8988f31ac1673a5e301f9ac39b37de4" translate="yes" xml:space="preserve">
          <source>WARNING is a message level indicating a potential problem.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9e69012c4cb989d3300b2fe8889ed233de2829c" translate="yes" xml:space="preserve">
          <source>WARNING message type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb914d3ca1348f0c104408c5794fe186ea61f9b4" translate="yes" xml:space="preserve">
          <source>WAVE</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="762dd6a7da550e7b6fdc00b417847fd608d3d449" translate="yes" xml:space="preserve">
          <source>WBMP</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="441e113a8be2d0d25038d1f2e4db42495ebe43bb" translate="yes" xml:space="preserve">
          <source>WBMP metadata</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08a5164936a6007b1abd2d96d96fb4f14a463abb" translate="yes" xml:space="preserve">
          <source>WBMP metadata format</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a86e95a3de6c6d679d6527aad5d93c5216555e6f" translate="yes" xml:space="preserve">
          <source>WEDNESDAY</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="269ec4fae923a139b94c8dd206cdddcb59b23aa6" translate="yes" xml:space="preserve">
          <source>WEEKS</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f1c3d0860aa987c5f6e26c58ffaad4fe52dec56" translate="yes" xml:space="preserve">
          <source>WEEK_BASED_YEAR</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ee8eb01243e91a5b269b562f28c884ccb95f401" translate="yes" xml:space="preserve">
          <source>WEEK_BASED_YEARS</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c95b132075af91925d3c2134c3fe5f729c60f0b1" translate="yes" xml:space="preserve">
          <source>WEEK_OF_MONTH</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98b20d168600b565fc84f5f7957805b55c109649" translate="yes" xml:space="preserve">
          <source>WEEK_OF_MONTH_FIELD</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="846bf32311a73ea91eefa5bc3874bfd5749b75a1" translate="yes" xml:space="preserve">
          <source>WEEK_OF_WEEK_BASED_YEAR</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ce3e66f3ec1aa53225ad36212840b0d2fc47f5d" translate="yes" xml:space="preserve">
          <source>WEEK_OF_YEAR</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a1fa630771f8e5cf64861a7b9e3c6637ca68c80" translate="yes" xml:space="preserve">
          <source>WEEK_OF_YEAR_FIELD</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dea5d6976f7c54b48ff5d6c539121232f52092ef" translate="yes" xml:space="preserve">
          <source>WILDCARD</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f95d2ffbf9a1af1952ded5edbd37273e4bf5f711" translate="yes" xml:space="preserve">
          <source>WRAP_MODE</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27ad330619a7bfbee351115b167c5a6593f2530a" translate="yes" xml:space="preserve">
          <source>WRITE</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6921d5e91e0590725089252fc7f27605e5b7022" translate="yes" xml:space="preserve">
          <source>WRITE_ACL</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f67e53af7185fbc8aea70c663d29dcf390c68218" translate="yes" xml:space="preserve">
          <source>WRITE_ATTRIBUTES</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="047c274a3e7ebe073cff46c23124077218032cf0" translate="yes" xml:space="preserve">
          <source>WRITE_DATA</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58182c24cbe7fbdb0cdce51d37ac21f2e39d8164" translate="yes" xml:space="preserve">
          <source>WRITE_FAILURE</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b7c3f4d5466238aba0f49b3928981ccc31b3ba3" translate="yes" xml:space="preserve">
          <source>WRITE_FAILURE is used when a write to an output stream fails.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2e00a21918992721472933614c38b3251857c93" translate="yes" xml:space="preserve">
          <source>WRITE_NAMED_ATTRS</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22dbe35075cb33b41f60ad27f0c1e14653f5f4a3" translate="yes" xml:space="preserve">
          <source>WRITE_OWNER</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="598d8d2b12d9df9850b46eed40d26b4f7da3a541" translate="yes" xml:space="preserve">
          <source>Waiting threads are signalled in FIFO order.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d5ab81f6e9b8670844cee69bbeaf4be8c160cc0" translate="yes" xml:space="preserve">
          <source>Waits at most &lt;code&gt;millis&lt;/code&gt; milliseconds for this thread to die. A timeout of &lt;code&gt;0&lt;/code&gt; means to wait forever.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94a53993e8d3246a8674fea623793cc23fc795e9" translate="yes" xml:space="preserve">
          <source>Waits at most &lt;code&gt;millis&lt;/code&gt; milliseconds plus &lt;code&gt;nanos&lt;/code&gt; nanoseconds for this thread to die.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="557c8f0f0804d3490aa53aee125e92a7445e1d48" translate="yes" xml:space="preserve">
          <source>Waits for another thread to arrive at this exchange point (unless the current thread is &lt;a href=&quot;../../lang/thread#interrupt--&quot;&gt;interrupted&lt;/a&gt; or the specified waiting time elapses), and then transfers the given object to it, receiving its object in return.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9714c3b990f72a16c64a297b3674cb6087cfeff" translate="yes" xml:space="preserve">
          <source>Waits for another thread to arrive at this exchange point (unless the current thread is &lt;a href=&quot;../../lang/thread#interrupt--&quot;&gt;interrupted&lt;/a&gt;), and then transfers the given object to it, receiving its object in return.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77b3edd5fff3c71fb470f4dbfb6b9381ad255a30" translate="yes" xml:space="preserve">
          <source>Waits for this thread to die.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77a93294440eb49b7b2449dd795ae4ada0e190db" translate="yes" xml:space="preserve">
          <source>Waits if necessary for at most the given time for the computation to complete, and then retrieves its result, if available.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aafcd08752bc11a21870ec04b685933837e7d4cc" translate="yes" xml:space="preserve">
          <source>Waits if necessary for at most the given time for this future to complete, and then returns its result, if available.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da89866ec43b4f683e34b593be2844266c48a6dd" translate="yes" xml:space="preserve">
          <source>Waits if necessary for the computation to complete, and then retrieves its result.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="803562ef43c8df90a6078b38fd0fbbbab986c81e" translate="yes" xml:space="preserve">
          <source>Waits if necessary for this future to complete, and then returns its result.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="acfb3663e0ca38989b8759e81be1ac615f97ff84" translate="yes" xml:space="preserve">
          <source>Waits until all &lt;a href=&quot;cyclicbarrier#getParties--&quot;&gt;parties&lt;/a&gt; have invoked &lt;code&gt;await&lt;/code&gt; on this barrier, or the specified waiting time elapses.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b3ff44bfcf430c4e4b9e5670feffa1d028ea206" translate="yes" xml:space="preserve">
          <source>Waits until all &lt;a href=&quot;cyclicbarrier#getParties--&quot;&gt;parties&lt;/a&gt; have invoked &lt;code&gt;await&lt;/code&gt; on this barrier.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11472e63110fd1bbda989b4cb58d4fad230cee5d" translate="yes" xml:space="preserve">
          <source>Wakes up a single thread that is waiting on this object's monitor. If any threads are waiting on this object, one of them is chosen to be awakened. The choice is arbitrary and occurs at the discretion of the implementation. A thread waits on an object's monitor by calling one of the &lt;code&gt;wait&lt;/code&gt; methods.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60bf1897ca2d5ea7f9fed100a197b8da56cd2f6b" translate="yes" xml:space="preserve">
          <source>Wakes up all threads that are waiting on this object's monitor. A thread waits on an object's monitor by calling one of the &lt;code&gt;wait&lt;/code&gt; methods.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51a97180c73a6b656ee4a08e63d8a98f31c183ce" translate="yes" xml:space="preserve">
          <source>Wakes up all waiting threads.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2485f445b2ec82930218c1452c9df2adf2f4bf0" translate="yes" xml:space="preserve">
          <source>Wakes up one waiting thread.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21cc32a11b691c15416334d1e1e040558e915617" translate="yes" xml:space="preserve">
          <source>Walks a file tree.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c45ab05d45d1008d0b70706476bdc29a68fff57" translate="yes" xml:space="preserve">
          <source>Warning message.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d79c41e148d22dbcf85b4f38814ab88b9e8d6c0c" translate="yes" xml:space="preserve">
          <source>Warning: additional attribute type keywords may not be recognized by other implementations; therefore do not use this method if you are unsure if these keywords will be recognized by other implementations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18af9205d481c81af0452c7b78307a2cc12e16a6" translate="yes" xml:space="preserve">
          <source>Watch events are immutable and safe for use by multiple concurrent threads.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4df0a14364157db35b0aeb27d103f08e65c5600" translate="yes" xml:space="preserve">
          <source>Watch keys are safe for use by multiple concurrent threads. Where there are several threads retrieving signalled keys from a watch service then care should be taken to ensure that the &lt;code&gt;reset&lt;/code&gt; method is only invoked after the events for the object have been processed. This ensures that one thread is processing the events for an object at any time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab89fdb591a29dd2157e80dd3fc09d166fa47e02" translate="yes" xml:space="preserve">
          <source>WatchEvent</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3104a16b096e2e87877444fb732ed4e244fd5fb4" translate="yes" xml:space="preserve">
          <source>WatchEvent.Kind</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2859a128288874ad24f4c98bf7cce397de08c723" translate="yes" xml:space="preserve">
          <source>WatchEvent.Kind.name()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4ac1908a9c52fd3c2ca417375ae89c7dc6f90e4" translate="yes" xml:space="preserve">
          <source>WatchEvent.Kind.type()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc0776148e4ccfbb27ab88bb6ce1339da4271d12" translate="yes" xml:space="preserve">
          <source>WatchEvent.Modifier</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6151408b10f387c0c02499f23d0d49495a123adf" translate="yes" xml:space="preserve">
          <source>WatchEvent.Modifier.name()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f845280cded200c4b8a48929301464e398ac2fe" translate="yes" xml:space="preserve">
          <source>WatchEvent.context()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5548f15e22cdecc390d6071d79b41ad168545b10" translate="yes" xml:space="preserve">
          <source>WatchEvent.count()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3223fe7f2570a86db47dcd946b0550bb69148bdc" translate="yes" xml:space="preserve">
          <source>WatchEvent.kind()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="434feaccfe2a3f5790f514c688ddfee42a937ee8" translate="yes" xml:space="preserve">
          <source>WatchKey</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="613309ae99383a948104b176728f00b5db1221a3" translate="yes" xml:space="preserve">
          <source>WatchKey.cancel()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe242e0e137c753b42ee60cd35da60a895c553b9" translate="yes" xml:space="preserve">
          <source>WatchKey.isValid()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b1c89a2ee3b265e994b695b84f3a27bea880e84" translate="yes" xml:space="preserve">
          <source>WatchKey.pollEvents()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac44d1881e8bb9b33414336e6916521ad7abb29a" translate="yes" xml:space="preserve">
          <source>WatchKey.reset()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ea52bb6949f4d37bbfce8963436ca586f1e8030" translate="yes" xml:space="preserve">
          <source>WatchKey.watchable()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ba6324b24ac8367d12f20a36f168e878432e873" translate="yes" xml:space="preserve">
          <source>WatchService</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="366b61480307312fb6cf3ed210e7dbd19363dc32" translate="yes" xml:space="preserve">
          <source>WatchService.close()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d641c1aa1ec04d7f4c2c802a6bd764a66c3c9c6" translate="yes" xml:space="preserve">
          <source>WatchService.poll()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba448bbc64fac97e5520011aa42f1172cd6b178d" translate="yes" xml:space="preserve">
          <source>WatchService.take()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c475c44becae5d946d65a3f0efc654e48d04971" translate="yes" xml:space="preserve">
          <source>Watchable</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d031ce99187a6db7969bfd9b309b28ef1bb8881" translate="yes" xml:space="preserve">
          <source>Watchable.register()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed9f48be68d70641d3c8097361c43176f33d0fe1" translate="yes" xml:space="preserve">
          <source>Ways to Access MXBeans</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b56109250239fd6335ae47d334eb34e1eb134e3e" translate="yes" xml:space="preserve">
          <source>We can assume in the above scenario that &lt;code&gt;CV.computeValue&lt;/code&gt; uses locks to properly observe the time-dependent states as it computes &lt;code&gt;V1&lt;/code&gt;, etc. This does not remove the threat of a stale value, since there is a window of time between the return of &lt;code&gt;computeValue&lt;/code&gt; in &lt;code&gt;T&lt;/code&gt; and the installation of the the new value. No user synchronization is possible during this time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9bd1711062d7dd1887987fad1cc09f74331b3cc9" translate="yes" xml:space="preserve">
          <source>We could transform the class file (with the ClassFileTransformer during the initial definition of the class) so that this becomes:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9081ad5208956aff9aea73dc70681b98af50b7b1" translate="yes" xml:space="preserve">
          <source>We would get the desired result, and it would even work in parallel. However, we might not be happy about the performance! Such an implementation would do a great deal of string copying, and the run time would be &lt;em&gt;O(n^2)&lt;/em&gt; in the number of characters. A more performant approach would be to accumulate the results into a &lt;a href=&quot;../../lang/stringbuilder&quot;&gt;&lt;code&gt;StringBuilder&lt;/code&gt;&lt;/a&gt;, which is a mutable container for accumulating strings. We can use the same technique to parallelize mutable reduction as we do with ordinary reduction.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a792d756a38347597c27360412bb8f8fa517b753" translate="yes" xml:space="preserve">
          <source>Weak bidirectional character type &quot;AN&quot; in the Unicode specification.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24dbecca4697c39dcb12d83d3e21e053a4fbf4ac" translate="yes" xml:space="preserve">
          <source>Weak bidirectional character type &quot;BN&quot; in the Unicode specification.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b592dbfa74287749b5b330052c7e3f462ec0a974" translate="yes" xml:space="preserve">
          <source>Weak bidirectional character type &quot;CS&quot; in the Unicode specification.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d484194528c4965d5cfe46ac4072c437b4f7364f" translate="yes" xml:space="preserve">
          <source>Weak bidirectional character type &quot;EN&quot; in the Unicode specification.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73f96fcc50384aeb2e177d07991c8003c66a6753" translate="yes" xml:space="preserve">
          <source>Weak bidirectional character type &quot;ES&quot; in the Unicode specification.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="818ef5444e8d72a94e14f04b5d6b122d1830655b" translate="yes" xml:space="preserve">
          <source>Weak bidirectional character type &quot;ET&quot; in the Unicode specification.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34c6763955af9013896491090181dbcd5a8dd74c" translate="yes" xml:space="preserve">
          <source>Weak bidirectional character type &quot;NSM&quot; in the Unicode specification.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="956c2a4c465d4b08d54fa1ddb34419c1810351ef" translate="yes" xml:space="preserve">
          <source>Weak bidirectional character type &quot;PDF&quot; in the Unicode specification.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea5a187b5f618fd1690650ad7c0db149755eff4a" translate="yes" xml:space="preserve">
          <source>Weak reference objects, which do not prevent their referents from being made finalizable, finalized, and then reclaimed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48563266c944d99d9eaba5e60d33852a238c2d45" translate="yes" xml:space="preserve">
          <source>Weak reference objects, which do not prevent their referents from being made finalizable, finalized, and then reclaimed. Weak references are most often used to implement canonicalizing mappings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03229c3ce0e1d4a5dea21e64ed5a7a21dd50346b" translate="yes" xml:space="preserve">
          <source>WeakHashMap</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f578a1ece44744875548c14accd3ab118f52f96" translate="yes" xml:space="preserve">
          <source>WeakHashMap.clear()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cac8951d07963c9661fb7627c7267795d5e7a4f2" translate="yes" xml:space="preserve">
          <source>WeakHashMap.containsKey()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="356e80282ac519184e65c488908383906447f348" translate="yes" xml:space="preserve">
          <source>WeakHashMap.containsValue()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60be0515876f006e6ca1cd3d7d552af9ccd01ffe" translate="yes" xml:space="preserve">
          <source>WeakHashMap.entrySet()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e49f5cd6e00c4432b7ebd63f64c70d97e2bfbb24" translate="yes" xml:space="preserve">
          <source>WeakHashMap.forEach()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19b9a321a4f1bd958cc8610a953bd1ee99035128" translate="yes" xml:space="preserve">
          <source>WeakHashMap.get()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5a9ba4e04afb8fcdfc19b61079a8ebd40110696" translate="yes" xml:space="preserve">
          <source>WeakHashMap.isEmpty()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7bd691f3c04552e56d59d519f1a4666a626cae68" translate="yes" xml:space="preserve">
          <source>WeakHashMap.keySet()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e34f391baf109443d3eca81db8e406c21247e08" translate="yes" xml:space="preserve">
          <source>WeakHashMap.put()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b834ab3cef7770bc9b59513aef17274348ef63ed" translate="yes" xml:space="preserve">
          <source>WeakHashMap.putAll()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51c4de9f87dd1095d9471573ff074fdefaf0db3e" translate="yes" xml:space="preserve">
          <source>WeakHashMap.remove()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77d99b79dc28fd6bd9db3b97d88184d2de438fd0" translate="yes" xml:space="preserve">
          <source>WeakHashMap.replaceAll()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42ea52208a3ce498ea844af7690268dde31e784f" translate="yes" xml:space="preserve">
          <source>WeakHashMap.size()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8bc55d91cb214228db71f61c09b537092b4bec12" translate="yes" xml:space="preserve">
          <source>WeakHashMap.values()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ea903ebda4f9f28f642d78e916dc09051395c95" translate="yes" xml:space="preserve">
          <source>WeakReference</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5656b9b79b0316fc611a9c30d2ffac25228b8371" translate="yes" xml:space="preserve">
          <source>Wednesday</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10b774684253b67ed6046c62d38b42b91e852330" translate="yes" xml:space="preserve">
          <source>Week 0 of January 2009</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b27856c3025a48dfd145f75086cda19de2ee70e" translate="yes" xml:space="preserve">
          <source>Week 1 of 2009</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0b134e5cd0d67c325ab9181f61674f7eb847f4f" translate="yes" xml:space="preserve">
          <source>Week 1 of January 2009</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0273a235d369407f5bc0d09e86dc0804188d2c3d" translate="yes" xml:space="preserve">
          <source>Week 1 of week-based-year 2009</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61c045f9f24b3b90a55c9f64fb89b4cf33f3dbdd" translate="yes" xml:space="preserve">
          <source>Week 2 of 2009</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16159932e1ca3544ef8dd1d77e4cd53b696ac5c6" translate="yes" xml:space="preserve">
          <source>Week 2 of January 2009</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="651b78362b5aaa1728d942efc5ee0ee574ce4c00" translate="yes" xml:space="preserve">
          <source>Week 2 of week-based-year 2009</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc5ccf6381813c151159e75357417f783c0aec41" translate="yes" xml:space="preserve">
          <source>Week 5 of December 2008</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6c2f210f4569dac04f3823e9662a42bc6ce2da1" translate="yes" xml:space="preserve">
          <source>Week 52 of week-based-year 2008</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de9cd5103d931eb33add540394a1f571fcdcca10" translate="yes" xml:space="preserve">
          <source>Week 53 of 2008</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c46029aa17fb600a21cad6bd08e77301e063307" translate="yes" xml:space="preserve">
          <source>Week Based Year</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fcbe34401d64884bb36657832164bedeaa60659" translate="yes" xml:space="preserve">
          <source>Week Of Month</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f295af822500a48f0431b7b363da9a13a414b828" translate="yes" xml:space="preserve">
          <source>Week Of Year and Week Year</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf20b17dedbd2fa061bb084e6e427c23883b04dc" translate="yes" xml:space="preserve">
          <source>Week based years</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89443bf2616153b1df032a1eb1df761e955b11a3" translate="yes" xml:space="preserve">
          <source>Week in month</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cadc38e9abe6dd9dd6fcc84c98869fbd77cea946" translate="yes" xml:space="preserve">
          <source>Week in year</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66de1cb2f3c93d7fd3d3a0a272c173e1b5c911b9" translate="yes" xml:space="preserve">
          <source>Week of Month</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6c62cdc6501a8ecf111466d9a326e871d8b8b6e" translate="yes" xml:space="preserve">
          <source>Week of Year</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74d6db712bf03a49e67556ff1aec1f683642d8c2" translate="yes" xml:space="preserve">
          <source>Week one (1) is the week starting on the &lt;a href=&quot;weekfields#getFirstDayOfWeek--&quot;&gt;&lt;code&gt;getFirstDayOfWeek()&lt;/code&gt;&lt;/a&gt; where there are at least &lt;a href=&quot;weekfields#getMinimalDaysInFirstWeek--&quot;&gt;&lt;code&gt;getMinimalDaysInFirstWeek()&lt;/code&gt;&lt;/a&gt; days in the month. Thus, week one may start up to &lt;code&gt;minDays&lt;/code&gt; days before the start of the month. If the first week starts after the start of the month then the period before is week zero (0).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44f1f99446cb5330dbad01f12f044f5a225971e2" translate="yes" xml:space="preserve">
          <source>Week one(1) is the week starting on the &lt;a href=&quot;weekfields#getFirstDayOfWeek--&quot;&gt;&lt;code&gt;getFirstDayOfWeek()&lt;/code&gt;&lt;/a&gt; where there are at least &lt;a href=&quot;weekfields#getMinimalDaysInFirstWeek--&quot;&gt;&lt;code&gt;getMinimalDaysInFirstWeek()&lt;/code&gt;&lt;/a&gt; days in the year. If the first week starts after the start of the year then the period before is in the last week of the previous year.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59d424ddfaa661a922cb86607e9a3548d6b3e08f" translate="yes" xml:space="preserve">
          <source>Week one(1) is the week starting on the &lt;a href=&quot;weekfields#getFirstDayOfWeek--&quot;&gt;&lt;code&gt;getFirstDayOfWeek()&lt;/code&gt;&lt;/a&gt; where there are at least &lt;a href=&quot;weekfields#getMinimalDaysInFirstWeek--&quot;&gt;&lt;code&gt;getMinimalDaysInFirstWeek()&lt;/code&gt;&lt;/a&gt; days in the year. Thus, week one may start before the start of the year. If the first week starts after the start of the year then the period before is in the last week of the previous year.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="edf457af9ac86c639d6fa25a82d99903848d2cc3" translate="yes" xml:space="preserve">
          <source>Week one(1) is the week starting on the &lt;a href=&quot;weekfields#getFirstDayOfWeek--&quot;&gt;&lt;code&gt;getFirstDayOfWeek()&lt;/code&gt;&lt;/a&gt; where there are at least &lt;a href=&quot;weekfields#getMinimalDaysInFirstWeek--&quot;&gt;&lt;code&gt;getMinimalDaysInFirstWeek()&lt;/code&gt;&lt;/a&gt; days in the year. Thus, week one may start up to &lt;code&gt;minDays&lt;/code&gt; days before the start of the year. If the first week starts after the start of the year then the period before is week zero (0).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21523175d42396f1b83a7d224bcef6c78db04431" translate="yes" xml:space="preserve">
          <source>Week year</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f3cd7a23e2be7e3002b8bffb3ed9ec37177e7b2" translate="yes" xml:space="preserve">
          <source>WeekFields</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="718dae35ec7f29671d329f016891913ac6dd0953" translate="yes" xml:space="preserve">
          <source>WeekFields instances are singletons; for each unique combination of &lt;code&gt;firstDayOfWeek&lt;/code&gt; and &lt;code&gt;minimalDaysInFirstWeek&lt;/code&gt; the the same instance will be returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89a2292f88acbc8f0e38aee8edbc776ed1156087" translate="yes" xml:space="preserve">
          <source>WeekFields provides five fields, &lt;a href=&quot;weekfields#dayOfWeek--&quot;&gt;&lt;code&gt;dayOfWeek()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;weekfields#weekOfMonth--&quot;&gt;&lt;code&gt;weekOfMonth()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;weekfields#weekOfYear--&quot;&gt;&lt;code&gt;weekOfYear()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;weekfields#weekOfWeekBasedYear--&quot;&gt;&lt;code&gt;weekOfWeekBasedYear()&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;weekfields#weekBasedYear--&quot;&gt;&lt;code&gt;weekBasedYear()&lt;/code&gt;&lt;/a&gt; that provide access to the values from any &lt;a href=&quot;temporal&quot;&gt;temporal object&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6cb3080d6ff8341db52a2cdfe428e6fe7cfdc77d" translate="yes" xml:space="preserve">
          <source>WeekFields.dayOfWeek()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63de50e0e26b59f3d9fe368fff1375c932f6dc68" translate="yes" xml:space="preserve">
          <source>WeekFields.equals()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="307be796ddd4af18d3ea219c21738d280f71a9f6" translate="yes" xml:space="preserve">
          <source>WeekFields.getFirstDayOfWeek()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9eb1a32786064c34464f305adb94564c93fc3d6a" translate="yes" xml:space="preserve">
          <source>WeekFields.getMinimalDaysInFirstWeek()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f4344dbb38df7c1dd4475092ee3cc1b31b7a1dc" translate="yes" xml:space="preserve">
          <source>WeekFields.hashCode()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5a7902f43adfba0ce22ee041b83a1d8e9b00d05" translate="yes" xml:space="preserve">
          <source>WeekFields.of()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d111eab407e09a34fda6c1f334ea981ad02f8d3" translate="yes" xml:space="preserve">
          <source>WeekFields.toString()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7d24644a2eae9dfbf214b9d12aa277c6a89292c" translate="yes" xml:space="preserve">
          <source>WeekFields.weekBasedYear()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ed8a499946db10836e56570eaad12d34de1b1e4" translate="yes" xml:space="preserve">
          <source>WeekFields.weekOfMonth()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f94cf8e74a33d036b43c60e0a361b7ab911bc24a" translate="yes" xml:space="preserve">
          <source>WeekFields.weekOfWeekBasedYear()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2788abb8d6fe59a50dbde8e26f797c0be24e8bc7" translate="yes" xml:space="preserve">
          <source>WeekFields.weekOfYear()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d75266a53b99ce4d80d337862ea1edd8ba1b1a1" translate="yes" xml:space="preserve">
          <source>Weeks</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5ceaaaab5693bd089df6a3f31655e313dce3989" translate="yes" xml:space="preserve">
          <source>Well-formed country/region values have the form &lt;code&gt;[a-zA-Z]{2} | [0-9]{3}&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fe9a9ddb38f6c4d512e9dbb79376b8ca30e2bf0" translate="yes" xml:space="preserve">
          <source>Well-formed keys are single characters from the set &lt;code&gt;[0-9a-zA-Z]&lt;/code&gt;. Well-formed values have the form &lt;code&gt;SUBTAG ('-' SUBTAG)*&lt;/code&gt; where for the key 'x' &lt;code&gt;SUBTAG = [0-9a-zA-Z]{1,8}&lt;/code&gt; and for other keys &lt;code&gt;SUBTAG = [0-9a-zA-Z]{2,8}&lt;/code&gt; (that is, 'x' allows single-character subtags).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a50506c60f4a43fce22721c5603adee4e842c36f" translate="yes" xml:space="preserve">
          <source>Well-formed language values have the form &lt;code&gt;[a-zA-Z]{2,8}&lt;/code&gt;. Note that this is not the the full BCP47 language production, since it excludes extlang. They are not needed since modern three-letter language codes replace them.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="858fa2509ca423136e7cf31f512c6eefb90eeb81" translate="yes" xml:space="preserve">
          <source>Well-formed script values have the form &lt;code&gt;[a-zA-Z]{4}&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4d5d35b51d9cbb55387c8e6d28bc1a22d820b0a" translate="yes" xml:space="preserve">
          <source>Well-formed variant values have the form &lt;code&gt;SUBTAG
   (('_'|'-') SUBTAG)*&lt;/code&gt; where &lt;code&gt;SUBTAG =
   [0-9][0-9a-zA-Z]{3} | [0-9a-zA-Z]{5,8}&lt;/code&gt;. (Note: BCP 47 only uses hyphen ('-') as a delimiter, this is more lenient).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9e4b6efb7854b9fa304410f366631e4c9b775f3" translate="yes" xml:space="preserve">
          <source>What is an Attribute?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f523aaaa18b102076687e4244d4e07bb6f436a11" translate="yes" xml:space="preserve">
          <source>What the Permission Allows</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="373c94003a259747dc5ca0b92f838b2b5acf5d59" translate="yes" xml:space="preserve">
          <source>What this means is that the ClassLoader may be wrapped in another ClassLoader for security or other reasons.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c62f541df771dc9c17e6db7806198f01ce3df87" translate="yes" xml:space="preserve">
          <source>Whatever the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89357495a0b5512bbc9f5bc66b16ee57716aba68" translate="yes" xml:space="preserve">
          <source>Whatever the &lt;a href=&quot;#groupname&quot;&gt;named-capturing group&lt;/a&gt; &quot;name&quot; matched</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="183f14f8a35d4f7ed23e203448b1fd0af728304e" translate="yes" xml:space="preserve">
          <source>When 'value' is no longer valid then the getter method is invoked for the attribute. The 'lastUpdatedTimeStamp' field and `value' fields are updated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c20d6596c0516c20ee93280ced0b8c1583308051" translate="yes" xml:space="preserve">
          <source>When 'value' is no longer valid then the operation method is invoked. The 'lastUpdatedTimeStamp' field and `value' fields are updated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ad7cf61a538ac9682cd9c38c51af1051f6daf5e" translate="yes" xml:space="preserve">
          <source>When 'value' is valid, 'value' is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="720701165d46b861473379cd54f2570d2c747f20" translate="yes" xml:space="preserve">
          <source>When &lt;a href=&quot;#value-field&quot;&gt;value&lt;/a&gt; was set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb0c4944d21938573c8de12446d041f26931fa10" translate="yes" xml:space="preserve">
          <source>When &lt;a href=&quot;notificationbroadcastersupport#sendNotification-javax.management.Notification-&quot;&gt;&lt;code&gt;sendNotification&lt;/code&gt;&lt;/a&gt; is called, a listener is selected if it was added with a null &lt;a href=&quot;notificationfilter&quot;&gt;&lt;code&gt;NotificationFilter&lt;/code&gt;&lt;/a&gt;, or if &lt;a href=&quot;notificationfilter#isNotificationEnabled-javax.management.Notification-&quot;&gt;&lt;code&gt;isNotificationEnabled&lt;/code&gt;&lt;/a&gt; returns true for the notification being sent. The call to &lt;code&gt;NotificationFilter.isNotificationEnabled&lt;/code&gt; takes place in the thread that called &lt;code&gt;sendNotification&lt;/code&gt;. Then, for each selected listener, &lt;a href=&quot;../../java/util/concurrent/executor#execute-java.lang.Runnable-&quot;&gt;&lt;code&gt;executor.execute&lt;/code&gt;&lt;/a&gt; is called with a command that calls the &lt;code&gt;handleNotification&lt;/code&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3907f83b19a6bc999820d92454ce9500f2d86571" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;SSLSocket&lt;/code&gt;s are first created, no handshaking is done so that applications may first set their communication preferences: what cipher suites to use, whether the socket should be in client or server mode, etc. However, security is always provided by the time that application data is sent over the connection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aec348ffd93df939ed7064797ce4b1223e7792d9" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;T&lt;/code&gt; attempts to install the newly computed value, if the state is still at &lt;code&gt;2N&lt;/code&gt;, the class value will be initialized with the computed value, advancing it to state &lt;code&gt;2N+1&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="586cdea8cb0e9df3dba6780f86611e27368352ca" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;myButton&lt;/code&gt; is pressed, the statement &lt;code&gt;frame.toFront()&lt;/code&gt; will be executed. One could get the same effect, with some additional compile-time type safety, by defining a new implementation of the &lt;code&gt;ActionListener&lt;/code&gt; interface and adding an instance of it to the button:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fe0e12bc1e4fbc587d188553680ac3198949110" translate="yes" xml:space="preserve">
          <source>When FLAG_SERIALIZABLE is set in &lt;code&gt;flags&lt;/code&gt;, the function objects will implement &lt;code&gt;Serializable&lt;/code&gt;, and will have a &lt;code&gt;writeReplace&lt;/code&gt; method that returns an appropriate &lt;a href=&quot;serializedlambda&quot;&gt;&lt;code&gt;SerializedLambda&lt;/code&gt;&lt;/a&gt;. The &lt;code&gt;caller&lt;/code&gt; class must have an appropriate &lt;code&gt;$deserializeLambda$&lt;/code&gt; method, as described in &lt;a href=&quot;serializedlambda&quot;&gt;&lt;code&gt;SerializedLambda&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78166e3e3d24c054685e7318d257481464f62c87" translate="yes" xml:space="preserve">
          <source>When JNDI constructs an initial context, the context's environment is initialized with properties defined in the environment parameter passed to the constructor, the system properties, the applet parameters, and the application resource files. See &lt;a href=&quot;initialcontext#ENVIRONMENT&quot;&gt;&lt;code&gt;InitialContext&lt;/code&gt;&lt;/a&gt; for details. This initial environment is then inherited by other context instances.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bcf229951ee0f52a0b20411c8b8db39b24c97b2e" translate="yes" xml:space="preserve">
          <source>When Java Sound is used to handle system exclusive data that is being received using MIDI wire protocol, it should place the data in one or more &lt;code&gt;SysexMessages&lt;/code&gt;. In this case, the length of the system exclusive data is not known in advance; the end of the system exclusive data is marked by an end-of-exclusive flag (0xF7) in the MIDI wire byte stream.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3dab1f00d125a2ba1bd6dc4a77821fdb53b85de1" translate="yes" xml:space="preserve">
          <source>When LoginContext uses a caller-specified Configuration, the caller does not require any createLoginContext AuthPermission. The LoginContext saves the &lt;code&gt;AccessControlContext&lt;/code&gt; for the caller, and invokes the configured modules from within an &lt;code&gt;AccessController.doPrivileged&lt;/code&gt; call constrained by that context. This means the caller context (stored when the LoginContext was created) must have sufficient permissions to perform any security-sensitive tasks that the modules may perform.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb8e6ccdc860924e083cd3b27c25e020271479ff" translate="yes" xml:space="preserve">
          <source>When LoginContext uses the installed Configuration, the caller requires the createLoginContext.&lt;em&gt;name&lt;/em&gt; and possibly createLoginContext.other AuthPermissions. Furthermore, the LoginContext will invoke configured modules from within an &lt;code&gt;AccessController.doPrivileged&lt;/code&gt; call so that modules that perform security-sensitive tasks (such as connecting to remote hosts, and updating the Subject) will require the respective permissions, but the callers of the LoginContext will not require those permissions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2dfe78f2ad4f3813f1c14b93d0ec0c6be233cf4" translate="yes" xml:space="preserve">
          <source>When a &lt;code&gt;Calendar&lt;/code&gt; is in non-lenient mode, it throws an exception if there is any inconsistency in its calendar fields. For example, a &lt;code&gt;GregorianCalendar&lt;/code&gt; always produces &lt;code&gt;DAY_OF_MONTH&lt;/code&gt; values between 1 and the length of the month. A non-lenient &lt;code&gt;GregorianCalendar&lt;/code&gt; throws an exception upon calculating its time or calendar field values if any out-of-range field value has been set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a356f25179772d20743b3c684279064beb377fbf" translate="yes" xml:space="preserve">
          <source>When a &lt;code&gt;DatagramSocket&lt;/code&gt; is created the initial setting of &lt;code&gt;SO_REUSEADDR&lt;/code&gt; is disabled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43ae46b786a991e294be5fd4ff96fd7edcdce9c4" translate="yes" xml:space="preserve">
          <source>When a &lt;code&gt;Descriptor&lt;/code&gt; is used, the fields of interest are these:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db057955ab30883a5287d3d1d0441c5297d96c2f" translate="yes" xml:space="preserve">
          <source>When a &lt;code&gt;MathContext&lt;/code&gt; object is supplied with a precision setting of 0 (for example, &lt;a href=&quot;mathcontext#UNLIMITED&quot;&gt;&lt;code&gt;MathContext.UNLIMITED&lt;/code&gt;&lt;/a&gt;), arithmetic operations are exact, as are the arithmetic methods which take no &lt;code&gt;MathContext&lt;/code&gt; object. (This is the only behavior that was supported in releases prior to 5.) As a corollary of computing the exact result, the rounding mode setting of a &lt;code&gt;MathContext&lt;/code&gt; object with a precision setting of 0 is not used and thus irrelevant. In the case of divide, the exact quotient could have an infinitely long decimal expansion; for example, 1 divided by 3. If the quotient has a nonterminating decimal expansion and the operation is specified to return an exact result, an &lt;code&gt;ArithmeticException&lt;/code&gt; is thrown. Otherwise, the exact result of the division is returned, as done for other operations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c8fb24cbf878544c9fafb9bba4f04c53ebcb063" translate="yes" xml:space="preserve">
          <source>When a &lt;code&gt;PKIXParameters&lt;/code&gt; object is created, this flag is set to true. This setting reflects the most common (and simplest) strategy for processing policy qualifiers. Applications that want to use a more sophisticated policy must set this flag to false.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2e645d09fe7ffd9051e432a2e16d92d9eb058b1" translate="yes" xml:space="preserve">
          <source>When a &lt;code&gt;PKIXParameters&lt;/code&gt; object is created, this flag is set to true. This setting reflects the most common strategy for checking revocation, since each service provider must support revocation checking to be PKIX compliant. Sophisticated applications should set this flag to false when it is not practical to use a PKIX service provider's default revocation checking mechanism or when an alternative revocation checking mechanism is to be substituted (by also calling the &lt;a href=&quot;pkixparameters#addCertPathChecker-java.security.cert.PKIXCertPathChecker-&quot;&gt;&lt;code&gt;addCertPathChecker&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;pkixparameters#setCertPathCheckers-java.util.List-&quot;&gt;&lt;code&gt;setCertPathCheckers&lt;/code&gt;&lt;/a&gt; methods).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c511cae88643a751f32e0d10e8a985db173ad353" translate="yes" xml:space="preserve">
          <source>When a &lt;code&gt;ResourceBundle&lt;/code&gt; was inherited or specified through the &lt;a href=&quot;logger#setResourceBundle-java.util.ResourceBundle-&quot;&gt;&lt;code&gt;setResourceBundle&lt;/code&gt;&lt;/a&gt; method, then that &lt;code&gt;ResourceBundle&lt;/code&gt; will be used. Otherwise if the logger only has or inherited a resource bundle name, then that resource bundle name will be mapped to a &lt;code&gt;ResourceBundle&lt;/code&gt; object, using the default Locale at the time of logging.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b33e9674235e0636be1c47ce12e9e34568e5c11d" translate="yes" xml:space="preserve">
          <source>When a &lt;code&gt;Scanner&lt;/code&gt; is closed, it will close its input source if the source implements the &lt;a href=&quot;../io/closeable&quot;&gt;&lt;code&gt;Closeable&lt;/code&gt;&lt;/a&gt; interface.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0ea93fe34d0cbcc920144a03e28605555397e46" translate="yes" xml:space="preserve">
          <source>When a &lt;code&gt;ServerSocket&lt;/code&gt; is created the initial setting of &lt;a href=&quot;socketoptions#SO_REUSEADDR&quot;&gt;&lt;code&gt;SO_REUSEADDR&lt;/code&gt;&lt;/a&gt; is not defined. Applications can use &lt;a href=&quot;serversocket#getReuseAddress--&quot;&gt;&lt;code&gt;getReuseAddress()&lt;/code&gt;&lt;/a&gt; to determine the initial setting of &lt;a href=&quot;socketoptions#SO_REUSEADDR&quot;&gt;&lt;code&gt;SO_REUSEADDR&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0455bab8e7854f1380ef3d296a0c738fc6d405a" translate="yes" xml:space="preserve">
          <source>When a &lt;code&gt;Socket&lt;/code&gt; is created the initial setting of &lt;a href=&quot;socketoptions#SO_REUSEADDR&quot;&gt;&lt;code&gt;SO_REUSEADDR&lt;/code&gt;&lt;/a&gt; is disabled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a039e1d49f70a273c394bc527a427829f3c4985" translate="yes" xml:space="preserve">
          <source>When a &lt;code&gt;double&lt;/code&gt; must be used as a source for a &lt;code&gt;BigDecimal&lt;/code&gt;, note that this constructor provides an exact conversion; it does not give the same result as converting the &lt;code&gt;double&lt;/code&gt; to a &lt;code&gt;String&lt;/code&gt; using the &lt;a href=&quot;../lang/double#toString-double-&quot;&gt;&lt;code&gt;Double.toString(double)&lt;/code&gt;&lt;/a&gt; method and then using the &lt;a href=&quot;bigdecimal#BigDecimal-java.lang.String-&quot;&gt;&lt;code&gt;BigDecimal(String)&lt;/code&gt;&lt;/a&gt; constructor. To get that result, use the &lt;code&gt;static&lt;/code&gt;&lt;a href=&quot;bigdecimal#valueOf-double-&quot;&gt;&lt;code&gt;valueOf(double)&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6527806b79e3b486f23af62691038fe376e23d6f" translate="yes" xml:space="preserve">
          <source>When a &lt;code&gt;java.lang.Error&lt;/code&gt; occurs in the agent it should be caught and re-thrown as a &lt;code&gt;RuntimeErrorException&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac2232cc133cdbf38b6f9aa25e3da077f2459d69" translate="yes" xml:space="preserve">
          <source>When a JVM is launched in a way that indicates an agent class. In that case an &lt;code&gt;Instrumentation&lt;/code&gt; instance is passed to the &lt;code&gt;premain&lt;/code&gt; method of the agent class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc6710d50791c1a74ebb5f190790f0fa28c0deca" translate="yes" xml:space="preserve">
          <source>When a JVM provides a mechanism to start agents sometime after the JVM is launched. In that case an &lt;code&gt;Instrumentation&lt;/code&gt; instance is passed to the &lt;code&gt;agentmain&lt;/code&gt; method of the agent code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe6f53c2c934674a6688b208d3ae4e419bb93e41" translate="yes" xml:space="preserve">
          <source>When a Java Virtual Machine starts up, there is usually a single non-daemon thread (which typically calls the method named &lt;code&gt;main&lt;/code&gt; of some designated class). The Java Virtual Machine continues to execute threads until either of the following occurs:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="591e6c34b6ba8d6f3eeb6796c729752f095528e6" translate="yes" xml:space="preserve">
          <source>When a LogRecord is passed into the logging framework it logically belongs to the framework and should no longer be used or updated by the client application.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca65f59c344aab5c1b12d68027c6ad5c16f0ae24" translate="yes" xml:space="preserve">
          <source>When a Standard MBean is made from the &lt;code&gt;CacheControlMBean&lt;/code&gt;, the usual rules mean that it will have an attribute called &lt;code&gt;CacheSize&lt;/code&gt; of type &lt;code&gt;long&lt;/code&gt;. The &lt;code&gt;@Units&lt;/code&gt; annotation, given the above definition, will ensure that the &lt;a href=&quot;mbeanattributeinfo&quot;&gt;&lt;code&gt;MBeanAttributeInfo&lt;/code&gt;&lt;/a&gt; for this attribute will have a &lt;code&gt;Descriptor&lt;/code&gt; that has a field called &lt;code&gt;units&lt;/code&gt; with corresponding value &lt;code&gt;bytes&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbdb2811ada49ec4e07a613aa3a52601e1be6d55" translate="yes" xml:space="preserve">
          <source>When a TCP connection is closed the connection may remain in a timeout state for a period of time after the connection is closed (typically known as the &lt;code&gt;TIME_WAIT&lt;/code&gt; state or &lt;code&gt;2MSL&lt;/code&gt; wait state). For applications using a well known socket address or port it may not be possible to bind a socket to the required &lt;code&gt;SocketAddress&lt;/code&gt; if there is a connection in the timeout state involving the socket address or port.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f10e21dabecf61050cfb5e9bd4dbd4d574ca5d4" translate="yes" xml:space="preserve">
          <source>When a URL string (a &lt;code&gt;String&lt;/code&gt; of the form &lt;em&gt;scheme_id:rest_of_name&lt;/em&gt;) is passed as a name parameter to any method, a URL context factory for handling that scheme is located and used to resolve the URL. If no such factory is found, the initial context specified by &lt;code&gt;&quot;java.naming.factory.initial&quot;&lt;/code&gt; is used. Similarly, when a &lt;code&gt;CompositeName&lt;/code&gt; object whose first component is a URL string is passed as a name parameter to any method, a URL context factory is located and used to resolve the first name component. See &lt;a href=&quot;spi/namingmanager#getURLContext-java.lang.String-java.util.Hashtable-&quot;&gt;&lt;code&gt;&lt;code&gt;NamingManager.getURLContext()&lt;/code&gt;&lt;/code&gt;&lt;/a&gt; for a description of how URL context factories are located.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="902b9d017a9bed0402d7a996f72e41d3f25ab7ec" translate="yes" xml:space="preserve">
          <source>When a client application is designed to remotely access MXBeans for a running virtual machine whose version is different than the version on which the application is running, it should prepare to catch &lt;a href=&quot;../../io/invalidobjectexception&quot;&gt;&lt;code&gt;InvalidObjectException&lt;/code&gt;&lt;/a&gt; which is thrown when an MXBean proxy receives a name of an enum constant which is missing in the enum class loaded in the client application.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7205693021c9fb69b57353ca24035c13ecb1c484" translate="yes" xml:space="preserve">
          <source>When a client connects to a server using the JMX Remote API, it is possible that they do not have the same version of the JMX specification. The version of the JMX specification described here is version 1.4. Previous versions were 1.0, 1.1, and 1.2. (There was no 1.3.) The standard JMX Remote API is defined to work with version 1.2 onwards, so in standards-based deployment the only interoperability questions that arise concern version 1.2 onwards.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8a48941832ba5a4328e80c08b8ffedc13963178" translate="yes" xml:space="preserve">
          <source>When a client needs to print a job using the client's desired resolution exactly (no more, no less), the client specifies an instance of class PrinterResolution as an attribute of the Print Job. This will fail if the Print Job doesn't support that exact resolution, and Fidelity is set to true.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7de20097d88ff779f4bae860f8ac5bfcc78b886f" translate="yes" xml:space="preserve">
          <source>When a client searches looking for a printer that supports the client's desired resolution exactly (no more, no less), the client specifies an instance of class PrinterResolution indicating the exact resolution the client wants. Only printers supporting that exact resolution will match the search.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af75d22b50227d1fb5318634310fcd020e5b369c" translate="yes" xml:space="preserve">
          <source>When a coded character set is used exclusively with a single character-encoding scheme then the corresponding charset is usually named for the coded character set; otherwise a charset is usually named for the encoding scheme and, possibly, the locale of the coded character sets that it supports. Hence &lt;code&gt;US-ASCII&lt;/code&gt; is both the name of a coded character set and of the charset that encodes it, while &lt;code&gt;EUC-JP&lt;/code&gt; is the name of the charset that encodes the JIS X 0201, JIS X 0208, and JIS X 0212 coded character sets for the Japanese language.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5046ecec5b32705f3cc717979a666d129f7eb365" translate="yes" xml:space="preserve">
          <source>When a context method that may return response controls is invoked, response controls from the previous method invocation are cleared. &lt;code&gt;getResponseControls()&lt;/code&gt; returns all of the response controls generated by LDAP operations used by the context method in the order received from the LDAP server. Invoking &lt;code&gt;getResponseControls()&lt;/code&gt; does not clear the response controls. You can call it many times (and get back the same controls) until the next context method that may return controls is invoked.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="451ee1cb627eed78bb98b62c3c2b734285d519cd" translate="yes" xml:space="preserve">
          <source>When a directory is registered for this event then the &lt;a href=&quot;watchkey&quot;&gt;&lt;code&gt;WatchKey&lt;/code&gt;&lt;/a&gt; is queued when it is observed that an entry in the directory has been modified. The event &lt;a href=&quot;watchevent#count--&quot;&gt;&lt;code&gt;count&lt;/code&gt;&lt;/a&gt; for this event is &lt;code&gt;1&lt;/code&gt; or greater.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="acde6e0c9e549621383ae5222820b57635b1abdb" translate="yes" xml:space="preserve">
          <source>When a directory is registered for this event then the &lt;a href=&quot;watchkey&quot;&gt;&lt;code&gt;WatchKey&lt;/code&gt;&lt;/a&gt; is queued when it is observed that an entry is created in the directory or renamed into the directory. The event &lt;a href=&quot;watchevent#count--&quot;&gt;&lt;code&gt;count&lt;/code&gt;&lt;/a&gt; for this event is always &lt;code&gt;1&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4aa389d8c3635d68f9942230af80f43edbcdf866" translate="yes" xml:space="preserve">
          <source>When a directory is registered for this event then the &lt;a href=&quot;watchkey&quot;&gt;&lt;code&gt;WatchKey&lt;/code&gt;&lt;/a&gt; is queued when it is observed that an entry is deleted or renamed out of the directory. The event &lt;a href=&quot;watchevent#count--&quot;&gt;&lt;code&gt;count&lt;/code&gt;&lt;/a&gt; for this event is always &lt;code&gt;1&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6e54cb2e2ced5f516b5c3c711efdeb13fed62ee" translate="yes" xml:space="preserve">
          <source>When a file system is constructed to access the contents of a file as a file system then it is highly implementation specific if the returned URI represents the given path in the file system or it represents a &lt;em&gt;compound&lt;/em&gt; URI that encodes the URI of the enclosing file system. A format for compound URIs is not defined in this release; such a scheme may be added in a future release.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f8424e3622daa52db1d5d000f4c2d226449bfeb" translate="yes" xml:space="preserve">
          <source>When a file system provides access to a set of &lt;a href=&quot;../filestore&quot;&gt;&lt;code&gt;file-systems&lt;/code&gt;&lt;/a&gt; that are not homogeneous then only some of the file systems may support ACLs. The &lt;a href=&quot;../filestore#supportsFileAttributeView-java.lang.Class-&quot;&gt;&lt;code&gt;supportsFileAttributeView&lt;/code&gt;&lt;/a&gt; method can be used to test if a file system supports ACLs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="563c181caf51bc9ca81a53828adbe47768c2b0e3" translate="yes" xml:space="preserve">
          <source>When a flush occurs on a newly created node, it is made persistent, as are any ancestors (and descendants) that have yet to be made persistent. Note however that any preference value changes in ancestors are</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14b01570d43320be8d365211a70fea5fddceea53" translate="yes" xml:space="preserve">
          <source>When a guarded delegator is created from a guarded pair, the pair is wrapped in a new method handle &lt;code&gt;M&lt;/code&gt;, which is permanently associated with the switch point that created it. Each pair consists of a target &lt;code&gt;T&lt;/code&gt; and a fallback &lt;code&gt;F&lt;/code&gt;. While the switch point is valid, invocations to &lt;code&gt;M&lt;/code&gt; are delegated to &lt;code&gt;T&lt;/code&gt;. After it is invalidated, invocations are delegated to &lt;code&gt;F&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e4ff9b2bc60835e3eb9b787ed7b76295168a994" translate="yes" xml:space="preserve">
          <source>When a listener instance invokes &lt;code&gt;NamingEvent.getEventContext()&lt;/code&gt;, it must take into account the possibility that other threads will be working with that context concurrently. Likewise, when a listener is registered via &lt;code&gt;addNamingListener()&lt;/code&gt;, the registering thread must take into account the likely possibility that the service provider will later invoke the listeners in newly-created threads. As &lt;code&gt;Context&lt;/code&gt; instances are not guaranteed to be thread-safe in general, all context operations must be synchronized as needed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf04634d7ff1db386d9b9db0fb748a111b1c6a04" translate="yes" xml:space="preserve">
          <source>When a listener registers for events with a context, the context might need to do some internal processing in order to collect information required to generate the events. The context, for example, might need to make a request to the server to register interest in changes on the server that will eventually be translated into events. If an exception occurs that prevents information about the events from being collected, the listener will never be notified of the events. When such an exception occurs, a &lt;code&gt;NamingExceptionEvent&lt;/code&gt; is fired to notify the listener. The listener's &lt;code&gt;namingExceptionThrown()&lt;/code&gt; method is invoked, as shown in the sample code above, and the listener is automatically deregistered.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90dd254c09d1c776ecf5c2349e720c462b943059" translate="yes" xml:space="preserve">
          <source>When a method handle is obtained by executing an &lt;code&gt;ldc&lt;/code&gt; instruction of a &lt;code&gt;CONSTANT_MethodHandle&lt;/code&gt; constant, and the target method is marked as a variable arity method (with the modifier bit &lt;code&gt;0x0080&lt;/code&gt;), the method handle will accept multiple arities, as if the method handle constant were created by means of a call to &lt;code&gt;asVarargsCollector&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc59d96f42634aad08455afa57812c0140efcb78" translate="yes" xml:space="preserve">
          <source>When a method handle to a virtual method is invoked, the method is always looked up in the receiver (that is, the first argument).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac3ed4c5aa8581e47e6e1d20592079740b067ad7" translate="yes" xml:space="preserve">
          <source>When a method such as list(), listBindings(), or search() returns a NamingEnumeration, any exceptions encountered are reserved until all results have been returned. At the end of the enumeration, the exception is thrown (by hasMore());</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eaa5aba63dd9f02bc423da3760cc790334dde37c" translate="yes" xml:space="preserve">
          <source>When a new connection is accepted then the resulting &lt;code&gt;AsynchronousSocketChannel&lt;/code&gt; will be bound to the same &lt;a href=&quot;asynchronouschannelgroup&quot;&gt;&lt;code&gt;AsynchronousChannelGroup&lt;/code&gt;&lt;/a&gt; as this channel. If the group is &lt;a href=&quot;asynchronouschannelgroup#isShutdown--&quot;&gt;&lt;code&gt;shutdown&lt;/code&gt;&lt;/a&gt; and a connection is accepted, then the connection is closed, and the operation completes with an &lt;code&gt;IOException&lt;/code&gt; and cause &lt;a href=&quot;shutdownchannelgroupexception&quot;&gt;&lt;code&gt;ShutdownChannelGroupException&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57b0000a9696b1c366c87328582e275d001b7acb" translate="yes" xml:space="preserve">
          <source>When a printer controls more than one output device, this reason indicates that one or more output devices are stopped. If the reason's severity is a report, fewer than half of the output devices are stopped. If the reason's severity is a warning, half or more but fewer than all of the output devices are stopped.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48145dbd368db04ca5f1dc84946f81ac044581d7" translate="yes" xml:space="preserve">
          <source>When a proxy selector is registered, for instance, a subclass of URLConnection class should call the &lt;a href=&quot;proxyselector#select-java.net.URI-&quot;&gt;&lt;code&gt;select&lt;/code&gt;&lt;/a&gt; method for each URL request so that the proxy selector can decide if a direct, or proxied connection should be used. The &lt;a href=&quot;proxyselector#select-java.net.URI-&quot;&gt;&lt;code&gt;select&lt;/code&gt;&lt;/a&gt; method returns an iterator over a collection with the preferred connection approach.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="758869419d156f27990d997e0fa9fce2a685beea" translate="yes" xml:space="preserve">
          <source>When a scanner throws an &lt;a href=&quot;inputmismatchexception&quot;&gt;&lt;code&gt;InputMismatchException&lt;/code&gt;&lt;/a&gt;, the scanner will not pass the token that caused the exception, so that it may be retrieved or skipped via some other method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a853e62233343e776fbd44333e92601acc2febbe" translate="yes" xml:space="preserve">
          <source>When a security manager is installed and it denies access to a file (or directory), then it is ignored and not included in the stream.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e74c73e1d683b9fecd0a717afa160e6920257abc" translate="yes" xml:space="preserve">
          <source>When a security manager is installed and it denies access to a file (or directory), then it is ignored and the visitor is not invoked for that file (or directory).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b16d1c9ade5f68deff8b6a72ad86abd212f522b" translate="yes" xml:space="preserve">
          <source>When a security manager is installed, it is invoked to check access to the each root directory. If denied, the root directory is not returned by the iterator. In the case of the default provider, the &lt;a href=&quot;../../lang/securitymanager#checkRead-java.lang.String-&quot;&gt;&lt;code&gt;SecurityManager.checkRead(String)&lt;/code&gt;&lt;/a&gt; method is invoked to check read access to each root directory. It is system dependent if the permission checks are done when the iterator is obtained or during iteration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd8e3e90bc0a4ad1eaf1fe672cd6021d8ff59c73" translate="yes" xml:space="preserve">
          <source>When a service provider needs to determine the value of a property, it will generally take that value directly from the environment. A service provider may define provider-specific properties to be placed in its own provider resource file. In that case it should merge values as described in the previous paragraph.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7807fd2cea76f3e1ce4a83a545e5b3a3ae40080e" translate="yes" xml:space="preserve">
          <source>When a service provider receives a response control, it uses control factories to return the specific/appropriate control class implementation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ade58d0e25bc018ea163c0cdad7f4b776c6ab39" translate="yes" xml:space="preserve">
          <source>When a service provider receives response controls, it uses the &lt;code&gt;ControlFactory&lt;/code&gt; class to produce specific classes that implement the &lt;code&gt;Control&lt;/code&gt; interface.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d30b140cad70a65f78e1eb56376dbfbaf7a9533" translate="yes" xml:space="preserve">
          <source>When a single argument is parsed more than once in the string, the last match will be the final result of the parsing. For example,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b152721196e9350030fbce80cc3060686ce54e33" translate="yes" xml:space="preserve">
          <source>When a socket is connected, &lt;a href=&quot;datagramsocket#receive-java.net.DatagramPacket-&quot;&gt;&lt;code&gt;receive&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;datagramsocket#send-java.net.DatagramPacket-&quot;&gt;&lt;code&gt;send&lt;/code&gt;&lt;/a&gt;&lt;b&gt;will not perform any security checks&lt;/b&gt; on incoming and outgoing packets, other than matching the packet's and the socket's address and port. On a send operation, if the packet's address is set and the packet's address and the socket's address do not match, an &lt;code&gt;IllegalArgumentException&lt;/code&gt; will be thrown. A socket connected to a multicast address may only be used to send packets.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a75cd6f6c3582a34b8ac5dfdb077e4af32675c83" translate="yes" xml:space="preserve">
          <source>When a socket subscribes to a multicast group/port, it receives datagrams sent by other hosts to the group/port, as do all other members of the group and port. A socket relinquishes membership in a group by the leaveGroup(InetAddress addr) method. &lt;b&gt; Multiple MulticastSocket's&lt;/b&gt; may subscribe to a multicast group and port concurrently, and they will all receive group datagrams.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1542ee008a8e9f826667c4f42290447523aa89a6" translate="yes" xml:space="preserve">
          <source>When a stack is first created, it contains no items.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58680ac2a710c1c3ec572a26747c8ac4bf37321d" translate="yes" xml:space="preserve">
          <source>When a subclass is replacing objects it must insure that either a complementary substitution must be made during deserialization or that the substituted object is compatible with every field where the reference will be stored. Objects whose type is not a subclass of the type of the field or array element abort the serialization by raising an exception and the object is not be stored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4af4456165693adbeda480b45292ea0c955ff233" translate="yes" xml:space="preserve">
          <source>When a subclass is replacing objects it must insure that the substituted object is compatible with every field where the reference will be stored. Objects whose type is not a subclass of the type of the field or array element abort the serialization by raising an exception and the object is not be stored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e26d84240a67b35d599a0931c437428256b549e1" translate="yes" xml:space="preserve">
          <source>When a subclass overrides a &lt;code&gt;visit&lt;i&gt;XYZ&lt;/i&gt;&lt;/code&gt; method, the new method can cause the enclosed elements to be scanned in the default way by calling &lt;code&gt;super.visit&lt;i&gt;XYZ&lt;/i&gt;&lt;/code&gt;. In this fashion, the concrete visitor can control the ordering of traversal over the component elements with respect to the additional processing; for example, consistently calling &lt;code&gt;super.visit&lt;i&gt;XYZ&lt;/i&gt;&lt;/code&gt; at the start of the overridden methods will yield a preorder traversal, etc. If the component elements should be traversed in some other order, instead of calling &lt;code&gt;super.visit&lt;i&gt;XYZ&lt;/i&gt;&lt;/code&gt;, an overriding visit method should call &lt;code&gt;scan&lt;/code&gt; with the elements in the desired order.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9929247187f11924a98b560a646e45a4e67ae3c7" translate="yes" xml:space="preserve">
          <source>When a submitted task is cancelled before it is run, execution is suppressed. By default, such a cancelled task is not automatically removed from the work queue until its delay elapses. While this enables further inspection and monitoring, it may also cause unbounded retention of cancelled tasks. To avoid this, set &lt;a href=&quot;scheduledthreadpoolexecutor#setRemoveOnCancelPolicy-boolean-&quot;&gt;&lt;code&gt;setRemoveOnCancelPolicy(boolean)&lt;/code&gt;&lt;/a&gt; to &lt;code&gt;true&lt;/code&gt;, which causes tasks to be immediately removed from the work queue at time of cancellation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10b74fcebd08424b7bb7bf29fe6e5a17d846f581" translate="yes" xml:space="preserve">
          <source>When a system exclusive message is read from a MIDI file, it always has a defined length. Data from a system exclusive message from a MIDI file should be stored in the data array of a &lt;code&gt;SysexMessage&lt;/code&gt; as follows: the system exclusive message status byte (0xF0 or 0xF7), all message data bytes, and finally the end-of-exclusive flag (0xF7). The length reported by the &lt;code&gt;SysexMessage&lt;/code&gt; object is therefore the length of the system exclusive data plus two: one byte for the status byte and one for the end-of-exclusive flag.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89b880bb7b0e20e4a94653fd28147b76b402fbeb" translate="yes" xml:space="preserve">
          <source>When a thread &lt;code&gt;T&lt;/code&gt; queries a class value in state &lt;code&gt;2N&lt;/code&gt;, the thread first attempts to initialize the class value to state &lt;code&gt;2N+1&lt;/code&gt; by invoking &lt;code&gt;computeValue&lt;/code&gt; and installing the resulting value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0bb71d68a413b1e3688231ebd3a0fe5821666fc" translate="yes" xml:space="preserve">
          <source>When a thread &lt;code&gt;T&lt;/code&gt; removes a class value in state &lt;code&gt;2N&lt;/code&gt;, nothing happens, since the class value is already uninitialized. Otherwise, the state is advanced atomically to &lt;code&gt;2N+1&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77fe3f278ecb8fc0ec8c3db5bded17a3ac83c0e0" translate="yes" xml:space="preserve">
          <source>When a thread is about to terminate due to an uncaught exception the Java Virtual Machine will query the thread for its &lt;code&gt;UncaughtExceptionHandler&lt;/code&gt; using &lt;a href=&quot;thread#getUncaughtExceptionHandler--&quot;&gt;&lt;code&gt;Thread.getUncaughtExceptionHandler()&lt;/code&gt;&lt;/a&gt; and will invoke the handler's &lt;code&gt;uncaughtException&lt;/code&gt; method, passing the thread and the exception as arguments. If a thread has not had its &lt;code&gt;UncaughtExceptionHandler&lt;/code&gt; explicitly set, then its &lt;code&gt;ThreadGroup&lt;/code&gt; object acts as its &lt;code&gt;UncaughtExceptionHandler&lt;/code&gt;. If the &lt;code&gt;ThreadGroup&lt;/code&gt; object has no special requirements for dealing with the exception, it can forward the invocation to the &lt;a href=&quot;thread#getDefaultUncaughtExceptionHandler--&quot;&gt;default uncaught exception handler&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="895317443968ac47f3f92d75cb96a37c77319964" translate="yes" xml:space="preserve">
          <source>When a three part address is specified, the last part is interpreted as a 16-bit quantity and placed in the right most two bytes of the network address. This makes the three part address format convenient for specifying Class B net- work addresses as 128.net.host.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29a6c60ea1ad71509b0284da02c6071f09ce9c45" translate="yes" xml:space="preserve">
          <source>When a two part address is supplied, the last part is interpreted as a 24-bit quantity and placed in the right most three bytes of the network address. This makes the two part address format convenient for specifying Class A network addresses as net.host.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6aa8db231eb18f002bb271b220e13400b3ee853b" translate="yes" xml:space="preserve">
          <source>When a variable &lt;code&gt;{i}&lt;/code&gt; appears in a search filter, it indicates that the filter argument &lt;code&gt;filterArgs[i]&lt;/code&gt; is to be used in that place. Such variables may be used wherever an &lt;em&gt;attr&lt;/em&gt;, &lt;em&gt;value&lt;/em&gt;, or &lt;em&gt;matchingrule&lt;/em&gt; production appears in the filter grammar of RFC 2254, section 4. When a string-valued filter argument is substituted for a variable, the filter is interpreted as if the string were given in place of the variable, with any characters having special significance within filters (such as &lt;code&gt;'*'&lt;/code&gt;) having been escaped according to the rules of RFC 2254.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2c2469b19a3494bf3f5739b9534978d0c5455a7" translate="yes" xml:space="preserve">
          <source>When adding providers to the cache, the &lt;a href=&quot;serviceloader#iterator--&quot;&gt;&lt;code&gt;Iterator&lt;/code&gt;&lt;/a&gt; processes resources in the order that the &lt;a href=&quot;../lang/classloader#getResources-java.lang.String-&quot;&gt;&lt;code&gt;ClassLoader.getResources(String)&lt;/code&gt;&lt;/a&gt; method finds the service configuration files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bcaddb468356d4ee2035b39f238ba71251cf9ad5" translate="yes" xml:space="preserve">
          <source>When an Externalizable object is reconstructed, an instance is created using the public no-arg constructor, then the readExternal method called. Serializable objects are restored by reading them from an ObjectInputStream.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45b4eddc256c7dd0ed23de01764919b7450154dc" translate="yes" xml:space="preserve">
          <source>When an MBean emits a notification, it considers each listener that has been added with &lt;a href=&quot;notificationbroadcaster#addNotificationListener-javax.management.NotificationListener-javax.management.NotificationFilter-java.lang.Object-&quot;&gt;&lt;code&gt;addNotificationListener&lt;/code&gt;&lt;/a&gt; and not subsequently removed with &lt;a href=&quot;notificationbroadcaster#removeNotificationListener-javax.management.NotificationListener-&quot;&gt;&lt;code&gt;removeNotificationListener&lt;/code&gt;&lt;/a&gt;. If a filter was provided with that listener, and if the filter's &lt;a href=&quot;notificationfilter#isNotificationEnabled-javax.management.Notification-&quot;&gt;&lt;code&gt;isNotificationEnabled&lt;/code&gt;&lt;/a&gt; method returns false, the listener is ignored. Otherwise, the listener's &lt;a href=&quot;notificationlistener#handleNotification-javax.management.Notification-java.lang.Object-&quot;&gt;&lt;code&gt;handleNotification&lt;/code&gt;&lt;/a&gt; method is called with the notification, as well as the handback object that was provided to &lt;code&gt;addNotificationListener&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b71b50e0adb800b8bc569793e796446befc75eb6" translate="yes" xml:space="preserve">
          <source>When an MBean emits a notification, it considers each listener that has been added with &lt;a href=&quot;notificationbroadcaster#addNotificationListener-javax.management.NotificationListener-javax.management.NotificationFilter-java.lang.Object-&quot;&gt;&lt;code&gt;addNotificationListener&lt;/code&gt;&lt;/a&gt; and not subsequently removed with &lt;a href=&quot;notificationemitter#removeNotificationListener-javax.management.NotificationListener-javax.management.NotificationFilter-java.lang.Object-&quot;&gt;&lt;code&gt;removeNotificationListener&lt;/code&gt;&lt;/a&gt;. If a filter was provided with that listener, and if the filter's &lt;a href=&quot;notificationfilter#isNotificationEnabled-javax.management.Notification-&quot;&gt;&lt;code&gt;isNotificationEnabled&lt;/code&gt;&lt;/a&gt; method returns false, the listener is ignored. Otherwise, the listener's &lt;a href=&quot;notificationlistener#handleNotification-javax.management.Notification-java.lang.Object-&quot;&gt;&lt;code&gt;handleNotification&lt;/code&gt;&lt;/a&gt; method is called with the notification, as well as the handback object that was provided to &lt;code&gt;addNotificationListener&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc7e40c74e30e9bdda780e2f49b9064de3f28184" translate="yes" xml:space="preserve">
          <source>When an MBean is registered in an MBean Server, if it is of a subclass of &lt;a href=&quot;../../../java/lang/classloader&quot;&gt;&lt;code&gt;ClassLoader&lt;/code&gt;&lt;/a&gt; and if it does not implement the interface &lt;a href=&quot;privateclassloader&quot;&gt;&lt;code&gt;PrivateClassLoader&lt;/code&gt;&lt;/a&gt;, it is added to the end of the MBean Server's &lt;code&gt;ClassLoaderRepository&lt;/code&gt;. If it is subsequently unregistered from the MBean Server, it is removed from the &lt;code&gt;ClassLoaderRepository&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6757f09ba74310403e9527263bc5d5dd7e032018" translate="yes" xml:space="preserve">
          <source>When an MBean is registered or unregistered in the MBean server a &lt;a href=&quot;mbeanservernotification&quot;&gt;&lt;code&gt;MBeanServerNotification&lt;/code&gt;&lt;/a&gt; Notification is emitted. To register an object as listener to MBeanServerNotifications you should call the MBean server method &lt;a href=&quot;mbeanserver#addNotificationListener-javax.management.ObjectName-javax.management.NotificationListener-javax.management.NotificationFilter-java.lang.Object-&quot;&gt;&lt;code&gt;addNotificationListener&lt;/code&gt;&lt;/a&gt; with &lt;code&gt;ObjectName&lt;/code&gt; the &lt;code&gt;ObjectName&lt;/code&gt; of the &lt;a href=&quot;mbeanserverdelegate&quot;&gt;&lt;code&gt;MBeanServerDelegate&lt;/code&gt;&lt;/a&gt;. This &lt;code&gt;ObjectName&lt;/code&gt; is:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="182378d05279b361f0377c3dd82675fe9375ff7d" translate="yes" xml:space="preserve">
          <source>When an SSL handshake completes, new security parameters will have been established. Those parameters always include the security keys used to protect messages. They may also include parameters associated with a new &lt;em&gt;session&lt;/em&gt; such as authenticated peer identity and a new SSL cipher suite.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a52c11dc01aed368f150065ba6a405d66f8451bf" translate="yes" xml:space="preserve">
          <source>When an application creates a new client socket, the socket implementation factory's &lt;code&gt;createSocketImpl&lt;/code&gt; method is called to create the actual socket implementation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5070d5027d76071608fcfd8560f9541c493b061d" translate="yes" xml:space="preserve">
          <source>When an application creates a new datagram socket, the socket implementation factory's &lt;code&gt;createDatagramSocketImpl&lt;/code&gt; method is called to create the actual datagram socket implementation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53f882e0daa369f43672720af27805bcd63f9c59" translate="yes" xml:space="preserve">
          <source>When an application creates a new server socket, the socket implementation factory's &lt;code&gt;createSocketImpl&lt;/code&gt; method is called to create the actual socket implementation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6192da6041396e436b94b26592fc040462f804dd" translate="yes" xml:space="preserve">
          <source>When an application is deployed, it will generally have several codebase directories and JARs in its classpath. Similarly, when an applet is deployed, it will have a codebase and archives specifying where to find the applet's classes. JNDI locates (using &lt;a href=&quot;../../java/lang/classloader#getResources-java.lang.String-&quot;&gt;&lt;code&gt;&lt;code&gt;ClassLoader.getResources()&lt;/code&gt;&lt;/code&gt;&lt;/a&gt;) all &lt;em&gt;application resource files&lt;/em&gt; named &lt;code&gt;jndi.properties&lt;/code&gt; in the classpath. In addition, if the file</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ff3262456581061805ec48c0da1d47a0d84ee27" translate="yes" xml:space="preserve">
          <source>When an event is dispatched to a listener, the listener method (such as &lt;code&gt;objectChanged()&lt;/code&gt;) may be executed in a thread other than the one in which the call to &lt;code&gt;addNamingListener()&lt;/code&gt; was executed. The choice of which thread to use is made by the service provider. When an event is dispatched to multiple listeners, the service provider may choose (and is generally encouraged) to execute the listener methods concurrently in separate threads.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c246ece3865225c2043f5d0d8ebe7428a4313f31" translate="yes" xml:space="preserve">
          <source>When an event is reported to indicate that a file in a watched directory has been modified then there is no guarantee that the program (or programs) that have modified the file have completed. Care should be taken to coordinate access with other programs that may be updating the file. The &lt;a href=&quot;../channels/filechannel&quot;&gt;&lt;code&gt;FileChannel&lt;/code&gt;&lt;/a&gt; class defines methods to lock regions of a file against access by other programs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46c3263910b048a89e5d5d0939bdd2c5ae531805" translate="yes" xml:space="preserve">
          <source>When an exception is thrown by a factory, the exception is passed on to the caller of &lt;code&gt;DirectoryManager.getStateToBind()&lt;/code&gt;. The search for other factories that may produce a non-null answer is halted. A factory should only throw an exception if it is sure that it is the only intended factory and that no other factories should be tried. If this factory cannot create an object using the arguments supplied, it should return null.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86e9ee1cb6edb165bdea53c864741fcfebb100c1" translate="yes" xml:space="preserve">
          <source>When an exception is thrown by a factory, the exception is passed on to the caller of &lt;code&gt;NamingManager.getStateToBind()&lt;/code&gt; and &lt;code&gt;DirectoryManager.getStateToBind()&lt;/code&gt;. The search for other factories that may produce a non-null answer is halted. A factory should only throw an exception if it is sure that it is the only intended factory and that no other factories should be tried. If this factory cannot create an object using the arguments supplied, it should return null.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f619bd42e631fde289b18b2557593f0674f15c8e" translate="yes" xml:space="preserve">
          <source>When an exception is thrown by an object factory, the exception is passed on to the caller of &lt;code&gt;DirectoryManager.getObjectInstance()&lt;/code&gt;. The search for other factories that may produce a non-null answer is halted. An object factory should only throw an exception if it is sure that it is the only intended factory and that no other object factories should be tried. If this factory cannot create an object using the arguments supplied, it should return null.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92d645b31af0488c8796e3e157fa1f6cd126e2c8" translate="yes" xml:space="preserve">
          <source>When an implementation supports operations on entries in the directory that execute in a race-free manner then the returned directory stream is a &lt;a href=&quot;securedirectorystream&quot;&gt;&lt;code&gt;SecureDirectoryStream&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2052382560398859691564bf3c293b964fc894ad" translate="yes" xml:space="preserve">
          <source>When an input source is set (using the &lt;code&gt;setInput&lt;/code&gt; method), it may be marked as &quot;seek forward only&quot;. This setting means that images contained within the input source will only be read in order, possibly allowing the reader to avoid caching portions of the input containing data associated with images that have been read previously.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d2fac9efec8951293a4b9ad29501c8bcc43c755" translate="yes" xml:space="preserve">
          <source>When an instance of this class is used as a delegate for the implementation of the BeanContext protocols (and its subprotocols) there exists a 'chicken and egg' problem during deserialization</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f93de7fe2101ac2a970987b76df77b95b8fe1afa" translate="yes" xml:space="preserve">
          <source>When an interior node in the namespace tree has been renamed, the topmost node which is part of the listener's scope should used to generate a rename event. The extent to which this can be supported is provider-specific. For example, a service might generate rename notifications for all descendants of the changed interior node and the corresponding provider might not be able to prevent those notifications from being propagated to the listeners.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbb2b60ef4c108dabfab274ea6d643ccbd813a96" translate="yes" xml:space="preserve">
          <source>When an m-let text file is loaded, an instance of each MBean specified in the file is created and registered.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6d8aaee8e31c5a9c8176090117cbab7f1fb2776" translate="yes" xml:space="preserve">
          <source>When an object implementing interface &lt;code&gt;Runnable&lt;/code&gt; is used to create a thread, starting the thread causes the object's &lt;code&gt;run&lt;/code&gt; method to be called in that separately executing thread.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d44aeda78b237a6dbd1402c72d9234eba39323f7" translate="yes" xml:space="preserve">
          <source>When an object is registered in the MBean Server using the &lt;code&gt;registerMBean&lt;/code&gt; or &lt;code&gt;createMBean&lt;/code&gt; methods of the &lt;a href=&quot;mbeanserver&quot;&gt;&lt;code&gt;MBeanServer&lt;/code&gt;&lt;/a&gt; interface, the object's class is examined to determine what type of MBean it is:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2972251c7a28b4528fe63074ce4c9c1bf8739a3" translate="yes" xml:space="preserve">
          <source>When an object named &quot;x/y&quot; is subsequently deleted, the corresponding &lt;code&gt;NamingEvent&lt;/code&gt; (&lt;code&gt;evt&lt;/code&gt;) must contain:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="918b1ed8da41a8cca49ec39767c9d3ef9075b75b" translate="yes" xml:space="preserve">
          <source>When an observable object is newly created, its set of observers is empty. Two observers are considered the same if and only if the &lt;code&gt;equals&lt;/code&gt; method returns true for them.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="784d4ec1dda97713a3424a2f8d9aa99d1febb449" translate="yes" xml:space="preserve">
          <source>When an observed attribute crosses the high threshold, if the &lt;em&gt;notify high&lt;/em&gt; flag is true, then a notification is sent. Subsequent crossings of the high threshold value will not trigger further notifications until the gauge value becomes less than or equal to the low threshold.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f5d6ec3eb5a523cc7305bf106145613183ee461" translate="yes" xml:space="preserve">
          <source>When an observed attribute crosses the low threshold, if the &lt;em&gt;notify low&lt;/em&gt; flag is true, then a notification is sent. Subsequent crossings of the low threshold value will not trigger further notifications until the gauge value becomes greater than or equal to the high threshold.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8376d748bc3d8b953550a26d5a316d63742f727e" translate="yes" xml:space="preserve">
          <source>When an output device is stopped, the device usually indicates its condition in human readable form locally at the device. A client can obtain more complete device status remotely by querying the printer's &lt;a href=&quot;printerstate&quot;&gt;&lt;code&gt;PrinterState&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;printerstatereasons&quot;&gt;&lt;code&gt;PrinterStateReasons&lt;/code&gt;&lt;/a&gt; attributes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf1414265b010571580fbf696282e71d50cfa5f8" translate="yes" xml:space="preserve">
          <source>When both &lt;code&gt;lockedMonitors&lt;/code&gt; and &lt;code&gt;lockedSynchronizers&lt;/code&gt; parameters are &lt;code&gt;false&lt;/code&gt;, it is equivalent to calling:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3bb6d7fddd6b84f1b1c496762483d19e659acc05" translate="yes" xml:space="preserve">
          <source>When cached value was set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b53c0fffa0b51e47d71e7136baf9352bd22f9aa3" translate="yes" xml:space="preserve">
          <source>When called with &lt;a href=&quot;methodhandle#invokeExact-java.lang.Object...-&quot;&gt;&lt;code&gt;invokeExact&lt;/code&gt;&lt;/a&gt;, the adapter invokes the target with no argument changes. (&lt;em&gt;Note:&lt;/em&gt; This behavior is different from a &lt;a href=&quot;methodhandle#asCollector-java.lang.Class-int-&quot;&gt;fixed arity collector&lt;/a&gt;, since it accepts a whole array of indeterminate length, rather than a fixed number of arguments.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a0161ca009c0dbbc06ce2b6680929152732b54d" translate="yes" xml:space="preserve">
          <source>When called with plain, inexact &lt;a href=&quot;methodhandle#invoke-java.lang.Object...-&quot;&gt;&lt;code&gt;invoke&lt;/code&gt;&lt;/a&gt;, if the caller type is the same as the adapter, the adapter invokes the target as with &lt;code&gt;invokeExact&lt;/code&gt;. (This is the normal behavior for &lt;code&gt;invoke&lt;/code&gt; when types match.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2f5017e66f8dea9b28eb6f14ce79dfd0d322eb3" translate="yes" xml:space="preserve">
          <source>When called, indicates that compression should end with the current contents of the input buffer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8858e1ea3fd1c36363ba040b10db093a73798d1" translate="yes" xml:space="preserve">
          <source>When called, the adapter replaces a trailing array argument by the array's elements, each as its own argument to the target. (The order of the arguments is preserved.) They are converted pairwise by casting and/or unboxing to the types of the trailing parameters of the target. Finally the target is called. What the target eventually returns is returned unchanged by the adapter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32698ba91a41a47b1415719cfb3ee4d88be1ebde" translate="yes" xml:space="preserve">
          <source>When called, the adapter replaces its trailing &lt;code&gt;arrayLength&lt;/code&gt; arguments by a single new array of type &lt;code&gt;arrayType&lt;/code&gt;, whose elements comprise (in order) the replaced arguments. Finally the target is called. What the target eventually returns is returned unchanged by the adapter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d41427d5f2ba9b4f876eb45c993fa83acbb6861" translate="yes" xml:space="preserve">
          <source>When called, the bound handle inserts the given value &lt;code&gt;x&lt;/code&gt; as a new leading argument to the target. The other arguments are also passed unchanged. What the target eventually returns is returned unchanged by the bound handle.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07e47dd6263746d4e6b3656f67f0733f7b685387" translate="yes" xml:space="preserve">
          <source>When called, the handle will treat the first argument as a receiver and dispatch on the receiver's type to determine which method implementation to enter. (The dispatching action is identical with that performed by an &lt;code&gt;invokevirtual&lt;/code&gt; or &lt;code&gt;invokeinterface&lt;/code&gt; instruction.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2391920a3b69011b129eed441073582d616d0af6" translate="yes" xml:space="preserve">
          <source>When changes are made to this &lt;code&gt;DirContext&lt;/code&gt;, the effect on enumerations returned by prior calls to this method is undefined.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1a9496b1bc6bdad32600169e992ba4825384491" translate="yes" xml:space="preserve">
          <source>When comparing corresponding components of two URIs, if one component is undefined but the other is defined then the first is considered to be less than the second. Unless otherwise noted, string components are ordered according to their natural, case-sensitive ordering as defined by the &lt;a href=&quot;../lang/comparable#compareTo-T-&quot;&gt;&lt;code&gt;String.compareTo&lt;/code&gt;&lt;/a&gt; method. String components that are subject to encoding are compared by comparing their raw forms rather than their encoded forms.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2103fe1187cedfb38f65d7ce9c0819c612ec17eb" translate="yes" xml:space="preserve">
          <source>When computing a date and time from the calendar fields, there may be insufficient information for the computation (such as only year and month with no day of month), or there may be inconsistent information (such as Tuesday, July 15, 1996 (Gregorian) -- July 15, 1996 is actually a Monday). &lt;code&gt;Calendar&lt;/code&gt; will resolve calendar field values to determine the date and time in the following way.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0dcc686243f0157dc4e782a735e5dde3570a33bc" translate="yes" xml:space="preserve">
          <source>When concatenated with a class attribute name, indicates the format of that attribute, using the layout language specified in the JSR 200 specification.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c481650236192705c8984496664400b25ae4018" translate="yes" xml:space="preserve">
          <source>When concatenated with a code attribute name, indicates the format of that attribute. For example, the effect of this option is built in: &lt;code&gt;pack.code.attribute.LocalVariableTable=NH[PHOHRUHRSHH]&lt;/code&gt;. The special strings &lt;a href=&quot;pack200.packer#ERROR&quot;&gt;&lt;code&gt;ERROR&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;pack200.packer#STRIP&quot;&gt;&lt;code&gt;STRIP&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;pack200.packer#PASS&quot;&gt;&lt;code&gt;PASS&lt;/code&gt;&lt;/a&gt; are also allowed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69b68d3b1ed8dc49253990c27eccbd09190abb43" translate="yes" xml:space="preserve">
          <source>When concatenated with a field attribute name, indicates the format of that attribute. For example, the effect of this option is built in: &lt;code&gt;pack.field.attribute.Deprecated=&lt;/code&gt;. The special strings &lt;a href=&quot;pack200.packer#ERROR&quot;&gt;&lt;code&gt;ERROR&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;pack200.packer#STRIP&quot;&gt;&lt;code&gt;STRIP&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;pack200.packer#PASS&quot;&gt;&lt;code&gt;PASS&lt;/code&gt;&lt;/a&gt; are also allowed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1b39538a51627baa398137ae5124f3674a47944" translate="yes" xml:space="preserve">
          <source>When concatenated with a method attribute name, indicates the format of that attribute. For example, the effect of this option is built in: &lt;code&gt;pack.method.attribute.Exceptions=NH[RCH]&lt;/code&gt;. The special strings &lt;a href=&quot;pack200.packer#ERROR&quot;&gt;&lt;code&gt;ERROR&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;pack200.packer#STRIP&quot;&gt;&lt;code&gt;STRIP&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;pack200.packer#PASS&quot;&gt;&lt;code&gt;PASS&lt;/code&gt;&lt;/a&gt; are also allowed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="715e1e84dcaa0489832f5e6cede42eba32b7afd9" translate="yes" xml:space="preserve">
          <source>When constructed as fair, threads contend for entry using an approximately arrival-order policy. When the currently held lock is released, either the longest-waiting single writer thread will be assigned the write lock, or if there is a group of reader threads waiting longer than all waiting writer threads, that group will be assigned the read lock.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61fbad8d5157fa12e2924a0b101d7488fca8edd0" translate="yes" xml:space="preserve">
          <source>When constructed as non-fair (the default), the order of entry to the read and write lock is unspecified, subject to reentrancy constraints. A nonfair lock that is continuously contended may indefinitely postpone one or more reader or writer threads, but will normally have higher throughput than a fair lock.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e952a0329782ab3d664a78b3d191c4eda125051" translate="yes" xml:space="preserve">
          <source>When constructing a JAR url via &lt;code&gt;new URL(context, spec)&lt;/code&gt;, the following rules apply:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41c8b69db960d9e4b36a2e8b2f092f79ddba9a4f" translate="yes" xml:space="preserve">
          <source>When constructing new JavaFileObjects, the file manager must determine where to create them. For example, if a file manager manages regular files on a file system, it would most likely have a current/working directory to use as default location when creating or finding files. A number of hints can be provided to a file manager as to where to create files. Any file manager might choose to ignore these hints.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a964eaa3b3cf4ad1eed4195c0e00287e21036db6" translate="yes" xml:space="preserve">
          <source>When converting back to &lt;code&gt;ZonedDateTime&lt;/code&gt;, if the local date-time is in an overlap, then the offset will be retained if possible, otherwise the earlier offset will be used. If in a gap, the local date-time will be adjusted forward by the length of the gap.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="330033318b9b32fd36ddd46bb1ced3469157a8be" translate="yes" xml:space="preserve">
          <source>When creating a &lt;code&gt;ChoiceFormat&lt;/code&gt;, you must specify an array of formats and an array of limits. The length of these arrays must be the same. For example,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f380ad1809365a52c2f779b295ad176ba7cee1fe" translate="yes" xml:space="preserve">
          <source>When creating a &lt;code&gt;TimeZone&lt;/code&gt;, the specified custom time zone ID is normalized in the following syntax:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9ab1915b79f38ba00b3dd084c59f43fd7b1a097" translate="yes" xml:space="preserve">
          <source>When creating a connector client or server, it is possible to supply an object of type &lt;a href=&quot;../../../java/util/map&quot;&gt;&lt;code&gt;Map&lt;/code&gt;&lt;/a&gt; that defines additional parameters. Each entry in this Map has a key that is a string and an associated value whose type is appropriate for that key. The standard keys defined by the JMX Remote API all begin with the string &quot;&lt;code&gt;jmx.remote.&lt;/code&gt;&quot;. The document &lt;em&gt;JMX Remote API&lt;/em&gt; lists these standard keys.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96d5bb0b77a90195ba6f2cbc3333bf0e862753f3" translate="yes" xml:space="preserve">
          <source>When creating a new file this option is a &lt;em&gt;hint&lt;/em&gt; that the new file will be sparse. This option is ignored when not creating a new file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c39abb2d7aabb3ded864546db651700da7057721" translate="yes" xml:space="preserve">
          <source>When creating a subclass of InitialContext, use this method as follows. Define a new method that uses this method to get an initial context of the desired subclass.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61fdfc98284714085a633464250d1ada20371927" translate="yes" xml:space="preserve">
          <source>When data is being transported using MIDI wire protocol, a &lt;code&gt;&lt;a href=&quot;shortmessage&quot;&gt;&lt;code&gt;ShortMessage&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; with the status value &lt;code&gt;0xFF&lt;/code&gt; represents a system reset message. In MIDI files, this same status value denotes a &lt;code&gt;MetaMessage&lt;/code&gt;. The types of meta-message are distinguished from each other by the first byte that follows the status byte &lt;code&gt;0xFF&lt;/code&gt;. The subsequent bytes are data bytes. As with system exclusive messages, there are an arbitrary number of data bytes, depending on the type of &lt;code&gt;MetaMessage&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="538871f766ab351c2d645502820fda06341f2446" translate="yes" xml:space="preserve">
          <source>When decoding, the &lt;code&gt;UTF-16&lt;/code&gt; charset interprets the byte-order mark at the beginning of the input stream to indicate the byte-order of the stream but defaults to big-endian if there is no byte-order mark; when encoding, it uses big-endian byte order and writes a big-endian byte-order mark.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d918b0ea7fbe3a38f352e3c01e13aa510f07228" translate="yes" xml:space="preserve">
          <source>When decoding, the &lt;code&gt;UTF-16BE&lt;/code&gt; and &lt;code&gt;UTF-16LE&lt;/code&gt; charsets interpret the initial byte-order marks as a &lt;small&gt;ZERO-WIDTH NON-BREAKING SPACE&lt;/small&gt;; when encoding, they do not write byte-order marks.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59dd531cc5c7b8c2c34d67569898edd73dd7c276" translate="yes" xml:space="preserve">
          <source>When developing your bean, you can implement the bean features required for your application task omitting the rest of the &lt;code&gt;BeanInfo&lt;/code&gt; features. They will be obtained through the automatic analysis by using the low-level reflection of the bean methods and applying standard design patterns. You have an opportunity to provide additional bean information through various descriptor classes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1145f6b1027e817559c57cddc450ec5598c076bb" translate="yes" xml:space="preserve">
          <source>When elements are specified individually, this method provides a convenient way to add a few elements to an existing collection:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0547e7d1fe9e7682b31c5b8e679a8b7cf7cdac7" translate="yes" xml:space="preserve">
          <source>When encoding a String, the following rules apply:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="519e81f7ec22f984619e01262e1e5c7f97e82d8a" translate="yes" xml:space="preserve">
          <source>When executed in parallel, multiple intermediate results may be instantiated, populated, and merged so as to maintain isolation of mutable data structures. Therefore, even when executed in parallel with non-thread-safe data structures (such as &lt;code&gt;ArrayList&lt;/code&gt;), no additional synchronization is needed for a parallel reduction.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9649a12169ece945cbfdacee36bb86668bdc338e" translate="yes" xml:space="preserve">
          <source>When first constructed, an &lt;code&gt;X509CRLSelector&lt;/code&gt; has no criteria enabled and each of the &lt;code&gt;get&lt;/code&gt; methods return a default value (&lt;code&gt;null&lt;/code&gt;). Therefore, the &lt;a href=&quot;x509crlselector#match-java.security.cert.CRL-&quot;&gt;&lt;code&gt;match&lt;/code&gt;&lt;/a&gt; method would return &lt;code&gt;true&lt;/code&gt; for any &lt;code&gt;X509CRL&lt;/code&gt;. Typically, several criteria are enabled (by calling &lt;a href=&quot;x509crlselector#setIssuers-java.util.Collection-&quot;&gt;&lt;code&gt;setIssuers&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;x509crlselector#setDateAndTime-java.util.Date-&quot;&gt;&lt;code&gt;setDateAndTime&lt;/code&gt;&lt;/a&gt;, for instance) and then the &lt;code&gt;X509CRLSelector&lt;/code&gt; is passed to &lt;a href=&quot;certstore#getCRLs-java.security.cert.CRLSelector-&quot;&gt;&lt;code&gt;CertStore.getCRLs&lt;/code&gt;&lt;/a&gt; or some similar method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d650c98b41df8d2991fdd69b36d1bd6550c57b66" translate="yes" xml:space="preserve">
          <source>When first constructed, an &lt;code&gt;X509CertSelector&lt;/code&gt; has no criteria enabled and each of the &lt;code&gt;get&lt;/code&gt; methods return a default value (&lt;code&gt;null&lt;/code&gt;, or &lt;code&gt;-1&lt;/code&gt; for the &lt;a href=&quot;x509certselector#getBasicConstraints--&quot;&gt;&lt;code&gt;getBasicConstraints&lt;/code&gt;&lt;/a&gt; method). Therefore, the &lt;a href=&quot;x509certselector#match-java.security.cert.Certificate-&quot;&gt;&lt;code&gt;match&lt;/code&gt;&lt;/a&gt; method would return &lt;code&gt;true&lt;/code&gt; for any &lt;code&gt;X509Certificate&lt;/code&gt;. Typically, several criteria are enabled (by calling &lt;a href=&quot;x509certselector#setIssuer-javax.security.auth.x500.X500Principal-&quot;&gt;&lt;code&gt;setIssuer&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;x509certselector#setKeyUsage-boolean:A-&quot;&gt;&lt;code&gt;setKeyUsage&lt;/code&gt;&lt;/a&gt;, for instance) and then the &lt;code&gt;X509CertSelector&lt;/code&gt; is passed to &lt;a href=&quot;certstore#getCertificates-java.security.cert.CertSelector-&quot;&gt;&lt;code&gt;CertStore.getCertificates&lt;/code&gt;&lt;/a&gt; or some similar method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ff93d04cdedfee3d54c1d406cb192a14d80e305" translate="yes" xml:space="preserve">
          <source>When formatting, if the temporal object contains a date, then it will be converted to a date in the override chronology. Whether the temporal contains a date is determined by querying the &lt;a href=&quot;../temporal/chronofield#EPOCH_DAY&quot;&gt;&lt;code&gt;EPOCH_DAY&lt;/code&gt;&lt;/a&gt; field. Any time or zone will be retained unaltered unless overridden.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c46c21d901a51405a6408d147e04ecbd8a3f7e31" translate="yes" xml:space="preserve">
          <source>When formatting, if the temporal object contains an instant, then it will be converted to a zoned date-time using the override zone. Whether the temporal is an instant is determined by querying the &lt;a href=&quot;../temporal/chronofield#INSTANT_SECONDS&quot;&gt;&lt;code&gt;INSTANT_SECONDS&lt;/code&gt;&lt;/a&gt; field. If the input has a chronology then it will be retained unless overridden. If the input does not have a chronology, such as &lt;code&gt;Instant&lt;/code&gt;, then the ISO chronology will be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3ccef18e16794ea6e4ca8f3deb0092f315cf23d" translate="yes" xml:space="preserve">
          <source>When four parts are specified, each is interpreted as a byte of data and assigned, from left to right, to the four bytes of an IPv4 address.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ae85906e6fddb6d1dc408436e61d763b88ac485" translate="yes" xml:space="preserve">
          <source>When getting a run with no explicit attributes specified (i.e., calling &lt;a href=&quot;attributedcharacteriterator#getRunStart--&quot;&gt;&lt;code&gt;getRunStart()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;attributedcharacteriterator#getRunLimit--&quot;&gt;&lt;code&gt;getRunLimit()&lt;/code&gt;&lt;/a&gt;), any contiguous text segments having the same attributes (the same set of attribute/value pairs) are treated as separate runs if the attributes have been given to those text segments separately.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="302acd17292bb6cb5b2e63e5ea447c50cffa715c" translate="yes" xml:space="preserve">
          <source>When invoked on an &lt;code&gt;ArrayType&lt;/code&gt; instance, the &lt;a href=&quot;opentype#getClassName--&quot;&gt;&lt;code&gt;getClassName&lt;/code&gt;&lt;/a&gt; method returns the class name of the array instances it describes (following the rules defined by the &lt;a href=&quot;../../../java/lang/class#getName--&quot;&gt;&lt;code&gt;getName&lt;/code&gt;&lt;/a&gt; method of &lt;code&gt;java.lang.Class&lt;/code&gt;), not the class name of the array elements (which is returned by a call to &lt;code&gt;getElementOpenType().getClassName()&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="580b70b0aa9940a4d315897412a3c8e6a50c10fb" translate="yes" xml:space="preserve">
          <source>When it is desirable to group together a number of Permission objects of the same type, the &lt;code&gt;newPermissionCollection&lt;/code&gt; method on that particular type of Permission object should first be called. The default behavior (from the Permission class) is to simply return null. Subclasses of class Permission override the method if they need to store their permissions in a particular PermissionCollection object in order to provide the correct semantics when the &lt;code&gt;PermissionCollection.implies&lt;/code&gt; method is called. If a non-null value is returned, that PermissionCollection must be used. If null is returned, then the caller of &lt;code&gt;newPermissionCollection&lt;/code&gt; is free to store permissions of the given type in any PermissionCollection they choose (one that uses a Hashtable, one that uses a Vector, etc).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16ba2f01e5d521afc7a1d8765c061f6962009acc" translate="yes" xml:space="preserve">
          <source>When locking and unlocking occur in different scopes, care must be taken to ensure that all code that is executed while the lock is held is protected by try-finally or try-catch to ensure that the lock is released when necessary.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a0408130f81738a723c33c438670c4461590e47" translate="yes" xml:space="preserve">
          <source>When looking for a &lt;code&gt;ResourceBundle&lt;/code&gt;, the logger will first look at whether a bundle was specified using &lt;a href=&quot;logger#setResourceBundle-java.util.ResourceBundle-&quot;&gt;&lt;code&gt;setResourceBundle&lt;/code&gt;&lt;/a&gt;, and then only whether a resource bundle name was specified through the &lt;a href=&quot;logger#getLogger-java.lang.String-java.lang.String-&quot;&gt;&lt;code&gt;getLogger&lt;/code&gt;&lt;/a&gt; factory method. If no &lt;code&gt;ResourceBundle&lt;/code&gt; or no resource bundle name is found, then it will use the nearest &lt;code&gt;ResourceBundle&lt;/code&gt; or resource bundle name inherited from its parent tree.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9993ef66f72f6a538299eeaaa5c894846a8a38b" translate="yes" xml:space="preserve">
          <source>When looking up a time zone name, the &lt;a href=&quot;resourcebundle.control#getCandidateLocales-java.lang.String-java.util.Locale-&quot;&gt;default &lt;code&gt;Locale&lt;/code&gt; search path of &lt;code&gt;ResourceBundle&lt;/code&gt;&lt;/a&gt; derived from the specified &lt;code&gt;locale&lt;/code&gt; is used. (No &lt;a href=&quot;resourcebundle.control#getFallbackLocale-java.lang.String-java.util.Locale-&quot;&gt;fallback &lt;code&gt;Locale&lt;/code&gt;&lt;/a&gt; search is performed.) If a time zone name in any &lt;code&gt;Locale&lt;/code&gt; of the search path, including &lt;a href=&quot;locale#ROOT&quot;&gt;&lt;code&gt;Locale.ROOT&lt;/code&gt;&lt;/a&gt;, is found, the name is returned. Otherwise, a string in the &lt;a href=&quot;#NormalizedCustomID&quot;&gt;normalized custom ID format&lt;/a&gt; is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be5fb3253fce93d08c0e8b8dd053dbdf2da012a3" translate="yes" xml:space="preserve">
          <source>When mapping resource bundle names to &lt;code&gt;ResourceBundle&lt;/code&gt; objects, the logger will first try to use the Thread's &lt;a href=&quot;../../lang/thread#getContextClassLoader--&quot;&gt;context class loader&lt;/a&gt; to map the given resource bundle name to a &lt;code&gt;ResourceBundle&lt;/code&gt;. If the thread context class loader is &lt;code&gt;null&lt;/code&gt;, it will try the &lt;a href=&quot;../../lang/classloader#getSystemClassLoader--&quot;&gt;system class loader&lt;/a&gt; instead. If the &lt;code&gt;ResourceBundle&lt;/code&gt; is still not found, it will use the class loader of the first caller of the &lt;a href=&quot;logger#getLogger-java.lang.String-java.lang.String-&quot;&gt;&lt;code&gt;getLogger&lt;/code&gt;&lt;/a&gt; factory method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5817dccb8a24dc56e1279e061808065c8af108b0" translate="yes" xml:space="preserve">
          <source>When multiple certificates are available for use in a handshake, the implementation chooses what it considers the &quot;best&quot; certificate chain available, and transmits that to the other side. This method allows the caller to know which certificate chain was actually sent.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3c423c16dcc60cd6b3423d29ca5549e570d4cde" translate="yes" xml:space="preserve">
          <source>When multiple certificates are available for use in a handshake, the implementation chooses what it considers the &quot;best&quot; certificate chain available, and transmits that to the other side. This method allows the caller to know which certificate chain was actually used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="421a63f8d081ab15313773fe4ca2f494ee90642e" translate="yes" xml:space="preserve">
          <source>When names are tested for equality, attribute types, both binary and string values, are case-insensitive. String values with different but equivalent usage of quoting, escaping, or UTF8-hex-encoding are considered equal. The order of components in multi-valued RDNs (such as &quot;ou=Sales+cn=Bob&quot;) is not significant.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a545d4bb404c11d8dba04dd5da469b88f7c0cfb" translate="yes" xml:space="preserve">
          <source>When not using the try-with-resources construct, then directory stream's &lt;code&gt;close&lt;/code&gt; method should be invoked after iteration is completed so as to free any resources held for the open directory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61d8ce27b955b14a389038bf014cbe85cc67752c" translate="yes" xml:space="preserve">
          <source>When one sends a message to a multicast group, &lt;b&gt;all&lt;/b&gt; subscribing recipients to that host and port receive the message (within the time-to-live range of the packet, see below). The socket needn't be a member of the multicast group to send messages to it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c665e1ac4c57d3ccf2437d891eb0ae431f77c0f" translate="yes" xml:space="preserve">
          <source>When only one part is given, the value is stored directly in the network address without any byte rearrangement.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1875b9065ed910ca6ec4ee04408f7621f55c467c" translate="yes" xml:space="preserve">
          <source>When opening an existing file, the file is first truncated to a size of 0 bytes. This option is ignored when the file is opened only for reading.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55ad5bbbd836b22033fccd6daca4b9d44a123e8e" translate="yes" xml:space="preserve">
          <source>When output streaming is enabled, authentication and redirection cannot be handled automatically. A &lt;a href=&quot;httpretryexception&quot;&gt;HttpRetryException&lt;/a&gt; will be thrown when reading the response if authentication or redirection are required. This exception can be queried for the details of the error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a1daf55edfb1251014f98d686349fc2cf29836a" translate="yes" xml:space="preserve">
          <source>When output streaming is enabled, authentication and redirection cannot be handled automatically. A HttpRetryException will be thrown when reading the response if authentication or redirection are required. This exception can be queried for the details of the error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70789a8a89c99dae4c53ce0b0096f13062e5be96" translate="yes" xml:space="preserve">
          <source>When output to a ZIP file or ZIP file formatted output stream the last modification time set by this method will be stored into zip file entry's &lt;code&gt;date and time fields&lt;/code&gt; in &lt;code&gt;standard
 MS-DOS date and time format&lt;/code&gt;), and the extended timestamp fields in &lt;code&gt;optional extra data&lt;/code&gt; in UTC time.</source>
          <target state="new"/>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
